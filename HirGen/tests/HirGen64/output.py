import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_113 = relay.var("var_113", dtype = "int32", shape = (10, 15, 1))#candidate|113|(10, 15, 1)|var|int32
const_114 = relay.const([[[2,4,6,2,7,1,4,7],[3,-10,8,-1,-6,4,2,1],[9,-2,3,-6,-9,4,-2,5],[-9,-2,-2,9,-1,-5,-10,-6],[4,-3,-1,-7,6,2,-2,-3],[-1,-9,9,2,10,2,-4,8],[-6,6,10,8,5,-5,-6,-2],[-3,-1,-1,-2,-8,3,-5,-3],[2,8,5,7,5,-8,10,9],[1,8,3,-4,-6,-7,6,2],[9,9,8,-3,9,6,-1,3],[-5,5,2,-10,-6,9,-5,1],[3,-8,-9,-5,-10,8,-6,-3],[-3,-8,10,1,-5,10,-3,5],[-3,8,2,8,4,3,-8,-10]],[[9,-6,-8,-4,9,-6,-3,10],[-4,7,4,9,-1,10,1,2],[10,8,5,4,4,-8,-10,4],[-9,-9,-4,10,1,9,-2,3],[-9,1,-10,9,4,2,6,-6],[-5,-7,-1,6,-9,-5,8,-2],[-6,-2,-9,-2,-8,6,8,-10],[-7,4,8,-4,-7,-7,-7,-1],[-5,1,3,6,8,9,4,-3],[-8,2,6,-2,-5,9,9,6],[2,7,-3,-9,5,-10,-5,3],[-7,9,1,10,2,9,-1,5],[-2,-9,5,7,3,-10,-10,6],[-8,-3,-6,-6,-4,2,-1,7],[1,-10,5,8,-7,-8,9,-4]],[[-9,-5,-2,5,-7,-9,6,-4],[5,5,3,8,2,-7,-10,-8],[-8,7,-6,-5,-1,-3,-2,6],[-1,5,-4,6,-9,-7,-3,-1],[7,-2,10,8,-2,10,8,-9],[-7,-4,7,9,4,8,-10,-10],[-9,-10,10,2,-6,5,-10,-4],[-1,2,-10,-8,6,2,7,10],[4,6,-5,7,-3,-7,9,2],[2,7,-4,6,1,3,-2,5],[-3,2,-9,1,-3,7,-4,9],[-2,9,1,3,5,-9,8,-5],[-5,9,7,-6,-2,10,1,-1],[-8,-6,-8,-1,4,2,-6,-1],[5,4,3,2,-2,-1,-4,5]],[[-5,-8,-9,-9,-1,-5,9,7],[-7,6,1,-5,-2,8,-9,5],[4,-8,-4,-6,-10,-1,6,-3],[-9,2,8,-6,4,-6,7,-8],[7,-3,-4,8,-9,-3,9,9],[6,9,-1,-4,-9,7,-2,-6],[-2,1,-8,-2,-8,-4,-10,4],[-6,-9,9,1,6,5,-4,8],[-8,6,6,4,10,2,1,-5],[10,-4,-9,-1,5,-2,5,-7],[-9,-10,10,10,10,-9,7,-7],[-7,-9,8,-9,4,-3,1,3],[-4,4,6,3,5,8,5,-2],[8,9,9,-10,1,-3,5,4],[-8,-3,-4,10,-8,3,6,6]],[[-7,2,4,1,5,-10,2,2],[-2,-4,-5,6,-3,-9,-6,-2],[1,-1,6,-2,5,-5,-6,7],[-6,-4,5,4,-1,-8,-7,10],[-4,7,-2,-3,3,-6,-7,-6],[-3,-1,2,-10,-8,10,9,-5],[2,5,3,2,7,2,10,4],[2,-4,1,-7,-10,-6,10,4],[-5,5,8,-1,-3,7,-5,-7],[-6,-1,-4,-8,9,5,-5,-1],[-7,-6,2,-8,-2,-10,-7,4],[-9,2,3,-10,-4,-2,-4,-9],[7,-6,3,-8,10,-4,7,2],[-2,9,-6,10,4,9,4,10],[3,2,9,-3,-8,-8,4,8]],[[8,-3,-8,6,-4,-3,3,10],[7,-4,-2,7,-5,-2,7,-6],[1,9,4,-5,-10,-7,-10,-9],[-10,5,-1,1,-7,8,7,9],[5,7,-1,8,-9,-4,-3,-7],[-7,5,5,5,-3,8,-7,5],[-4,1,-5,7,-3,4,-6,-9],[1,1,1,10,9,3,-4,9],[-1,5,7,-9,-5,-6,-3,-3],[8,2,2,-5,-9,-8,-7,3],[7,-3,2,-5,-6,-5,8,3],[2,7,-7,-6,1,3,10,5],[6,2,-9,-2,-9,-3,-6,5],[4,-3,-4,-9,-2,-4,-10,2],[4,-3,-2,-1,-5,10,-3,-1]],[[-6,-9,-5,9,3,-2,10,-9],[1,-1,-9,5,-9,7,-1,10],[-5,2,-7,7,-4,-3,6,-1],[5,9,-6,-2,-1,-8,7,2],[7,10,-4,-4,-8,3,10,-1],[9,1,-4,2,-9,-8,8,-8],[5,-7,-7,-7,7,-10,-7,-1],[9,-2,6,8,4,-4,7,5],[2,-1,4,-3,-10,-7,-4,-3],[-2,-5,9,-6,9,-5,-1,-6],[-4,-1,5,-9,-9,-1,-7,-5],[9,9,-3,-1,2,9,-6,-6],[4,-7,1,5,2,-2,-2,10],[-7,1,4,2,-8,9,8,4],[-3,2,-9,-6,6,-2,5,2]],[[-10,1,5,-10,-6,8,-6,-7],[-5,5,-9,7,-6,-6,2,2],[2,-6,7,-1,6,-9,10,-9],[7,1,4,-3,-6,3,8,-9],[-9,9,-2,-8,-8,9,3,4],[-4,5,-2,10,9,7,-9,8],[-5,3,-7,-6,-6,-2,-4,8],[-3,8,3,-7,-3,10,3,9],[6,7,-3,-6,-9,9,-9,3],[-1,-7,-1,5,-9,8,-4,3],[-1,1,3,-6,-10,-8,-3,10],[4,-8,-2,-10,9,-6,-7,3],[9,-5,-5,-7,-5,3,5,-3],[3,-5,6,9,-5,8,-3,-1],[7,9,6,-9,10,-10,7,6]],[[-5,-6,-8,8,-9,-5,-9,9],[2,-10,-3,-9,10,9,-3,9],[8,10,-10,9,-7,4,-3,-4],[10,-3,-2,5,2,-1,-9,-6],[6,2,6,-5,-6,-1,-3,-3],[-8,5,9,-1,-4,-9,-1,-9],[-2,-2,2,3,8,8,8,6],[10,-3,-5,-3,7,3,8,6],[5,-10,7,7,-7,9,-8,1],[-8,6,-1,2,10,9,-9,8],[2,1,3,-5,4,-8,-8,-10],[-5,10,5,5,7,-5,-8,-10],[-3,2,-10,-10,10,9,-9,4],[5,-2,-8,-10,-1,-1,8,-1],[-4,-10,-9,-1,8,-9,-8,1]],[[-9,-6,9,1,-10,3,6,2],[-7,4,-3,-7,4,-8,-8,-8],[3,3,-1,-4,-9,-1,-10,-2],[-5,5,3,9,-7,-10,5,4],[-3,1,-1,4,-3,4,-10,-2],[-5,5,10,-7,-10,-4,6,-4],[-4,2,-10,-7,5,-8,-10,-2],[-7,4,10,6,8,-4,9,3],[2,9,4,-7,-9,-6,5,-5],[4,2,1,-1,-10,-3,-2,2],[-4,8,-9,8,9,-9,9,-9],[-1,6,-10,1,3,-9,-2,1],[-4,-5,5,2,-5,-10,-3,9],[9,8,-4,9,6,-6,-1,-6],[7,9,-3,8,2,-4,7,2]]], dtype = "int32")#candidate|114|(10, 15, 8)|const|int32
bop_115 = relay.left_shift(var_113.astype('int32'), const_114.astype('int32')) # shape=(10, 15, 8)
var_128 = relay.var("var_128", dtype = "int32", shape = (10, 15, 8))#candidate|128|(10, 15, 8)|var|int32
bop_129 = relay.bitwise_xor(bop_115.astype('int32'), relay.reshape(var_128.astype('int32'), relay.shape_of(bop_115))) # shape=(10, 15, 8)
bop_133 = relay.right_shift(bop_129.astype('int32'), relay.reshape(const_114.astype('int32'), relay.shape_of(bop_129))) # shape=(10, 15, 8)
const_153 = relay.const([[[-4,7,-3,5,-6,2,9,1],[7,10,-6,-10,-2,-4,-1,-2],[-9,8,9,-3,4,-6,9,1],[-1,5,-3,-6,-1,7,-3,8],[-9,7,2,3,-5,9,8,1],[2,-9,-2,9,5,7,4,-1],[4,10,-8,-3,6,9,1,-3],[8,5,7,7,-9,-10,-2,7],[1,-3,2,1,6,-2,-2,10],[-7,3,-1,5,-5,-5,8,-2],[-9,7,10,1,-10,5,-8,-5],[1,2,-8,-6,-4,9,-2,10],[-7,7,4,3,1,-7,2,7],[-8,7,-5,-9,3,10,1,9],[6,-5,-3,6,6,-4,-3,-2]],[[-7,-9,2,-1,7,10,-3,8],[-4,4,1,1,1,-6,4,7],[6,6,-3,-3,-2,2,2,9],[-5,3,-10,5,-8,8,-8,-5],[-1,4,-10,6,-10,9,10,-9],[-8,-1,9,-2,7,-10,4,-1],[8,9,-4,2,-5,7,-9,-10],[-3,7,-9,8,10,-10,5,7],[9,-3,-3,9,8,-3,4,-5],[-6,-8,5,10,-4,-10,-4,-2],[5,7,2,5,-2,6,4,5],[-8,-5,-9,-6,5,-3,3,3],[-1,-5,6,3,-10,6,-2,4],[-5,3,-3,-8,5,9,-7,7],[5,-2,-1,9,-6,5,-7,10]],[[-7,-6,1,9,5,3,2,-3],[1,-10,-10,4,-5,6,8,-3],[-6,-3,3,3,4,2,-8,-5],[-10,-3,-3,6,8,9,7,-10],[1,2,-9,-1,-4,7,10,3],[6,-10,-5,-6,-10,8,8,-2],[3,-2,2,-3,8,10,-3,-8],[9,7,-8,-6,1,8,1,-8],[-8,7,4,6,-2,-10,9,4],[-7,1,-8,-4,8,8,-3,-6],[-9,-1,-2,4,3,-9,-1,-2],[5,-4,8,-2,1,8,8,-5],[6,9,4,4,-9,-2,7,9],[-7,7,-2,-4,10,-6,-7,-7],[-10,-2,2,-4,8,-1,1,-9]],[[4,4,6,8,-9,8,7,8],[4,2,6,6,1,9,9,10],[3,-1,1,8,-6,-5,-2,2],[3,-1,-9,10,-4,4,8,-1],[8,-1,3,-9,6,6,7,3],[2,-6,10,-3,-9,-8,-10,8],[-2,7,10,6,7,5,10,3],[-1,4,-7,6,3,2,4,1],[9,-1,3,-5,1,-4,8,-4],[-8,-10,3,-10,-9,-2,-2,-7],[3,10,-9,-6,-4,3,10,9],[-4,-3,-5,7,-5,5,2,-8],[1,-10,-2,-1,7,-6,-1,-4],[-6,-6,-2,-4,-2,4,-10,8],[2,-4,-4,-1,-10,9,6,8]],[[10,2,7,-9,-5,-10,7,8],[5,4,-8,-10,1,-2,3,-8],[4,-5,8,-7,-8,7,6,-7],[-9,2,-5,8,2,-3,-9,-7],[3,-5,7,1,10,3,3,-1],[-10,-10,5,-8,-7,1,-4,-3],[2,5,10,7,3,-8,-1,-9],[-1,-3,-8,-3,-4,2,-3,-4],[-3,-6,-2,-2,2,-3,10,3],[10,10,-9,-4,-7,2,3,5],[-2,6,-4,2,10,-9,5,4],[8,-5,6,1,-8,-3,10,7],[-9,-7,-3,8,-4,6,1,-7],[7,-7,3,-8,2,4,-1,5],[5,-2,-2,-6,9,6,-5,8]],[[-6,4,-4,2,4,-9,8,5],[-5,6,9,-4,3,8,-2,7],[-5,5,3,-7,-3,10,-10,7],[-1,-5,-2,-9,-6,4,-7,-3],[-1,-2,-8,-1,-3,4,-7,-1],[1,-9,2,9,-8,7,3,-8],[10,3,8,9,-5,7,4,-10],[-1,-2,-10,-2,-6,-6,8,-5],[3,-6,-2,-2,-2,10,-6,-2],[1,1,-5,-2,3,9,-1,2],[4,4,-7,-2,-7,4,5,10],[10,-9,-4,5,8,-9,-2,-4],[-10,-2,-7,3,-9,7,3,-9],[-7,-7,1,8,-7,10,-9,6],[3,6,4,-5,-8,-6,8,-1]],[[6,-7,1,-6,-4,10,9,3],[-5,5,10,-2,-10,7,-4,4],[8,6,-7,-8,7,2,-5,1],[6,9,3,2,2,3,10,7],[-1,7,-5,6,-6,-9,7,-1],[3,-7,-3,-2,-2,10,-6,-10],[-10,-2,-4,7,1,1,6,-9],[5,-7,-8,-3,6,10,2,9],[-9,-7,3,4,-9,-2,-10,4],[-8,4,-2,4,-2,-1,8,-6],[-3,1,4,10,4,-10,2,10],[7,-5,8,-8,-8,5,-1,3],[2,1,-3,1,2,2,5,5],[-3,-10,2,3,9,3,7,-3],[2,-6,3,-2,7,1,3,6]],[[6,9,6,-5,-8,-2,-6,5],[-6,-3,-6,-6,-7,9,-4,-8],[-10,10,8,8,6,2,-4,-10],[-8,1,-7,1,7,6,2,4],[2,8,1,-8,8,9,-9,-4],[3,2,-2,4,2,1,-3,-8],[10,4,3,-8,-2,-5,-7,7],[-2,-10,2,4,-1,8,1,-10],[1,2,-4,5,7,-6,-6,-6],[9,-5,-9,5,-7,5,-8,-8],[-9,-10,-1,10,4,-4,-8,-1],[8,10,-6,-7,-7,-10,9,1],[-8,-2,8,9,-7,-2,-7,4],[8,1,10,-8,4,1,6,1],[4,7,5,-4,10,9,-1,-3]],[[8,5,-5,4,-1,-1,8,-4],[-7,-6,8,-7,10,-6,-1,-9],[4,-7,-7,6,-8,6,3,8],[-3,-2,-8,7,-5,6,5,-6],[-1,8,6,7,-5,9,5,5],[4,6,6,-10,10,8,-3,-4],[7,-2,8,-6,2,-10,-5,-2],[-4,-2,2,3,10,-7,4,-5],[1,-6,7,-1,-7,6,6,2],[-6,10,8,2,-3,-9,8,9],[-1,8,7,7,-10,10,10,-6],[8,-6,7,2,-5,-8,7,2],[-4,-8,-10,7,-9,-8,8,-7],[7,-3,-9,4,-8,-7,-2,6],[9,-7,10,-1,-2,2,-10,-8]],[[-2,1,8,5,10,2,9,7],[4,7,9,-5,-6,3,-5,4],[2,9,3,-7,-4,-8,-8,2],[-1,6,-8,3,7,1,8,9],[3,9,2,2,8,-10,4,-8],[3,-5,4,-5,5,-5,3,3],[4,3,-10,1,-2,-4,-4,-9],[6,-8,-3,5,10,1,8,9],[-7,-7,5,7,-10,6,-3,1],[-1,4,-9,-4,-1,-2,8,-8],[-4,-4,-2,8,3,-5,9,8],[2,-3,-10,-2,1,-9,-5,-6],[1,-8,2,-4,2,-3,-3,10],[-4,-8,2,-7,-4,-4,1,-8],[3,-5,3,-1,-9,5,-5,9]]], dtype = "int32")#candidate|153|(10, 15, 8)|const|int32
bop_154 = relay.bitwise_or(bop_115.astype('int32'), relay.reshape(const_153.astype('int32'), relay.shape_of(bop_115))) # shape=(10, 15, 8)
uop_177 = relay.exp(const_153.astype('float32')) # shape=(10, 15, 8)
output = relay.Tuple([bop_133,bop_154,uop_177,])
output2 = relay.Tuple([bop_133,bop_154,uop_177,])
func_188 = relay.Function([var_113,var_128,], output)
mod['func_188'] = func_188
mod = relay.transform.InferType()(mod)
var_189 = relay.var("var_189", dtype = "int32", shape = (10, 15, 1))#candidate|189|(10, 15, 1)|var|int32
var_190 = relay.var("var_190", dtype = "int32", shape = (10, 15, 8))#candidate|190|(10, 15, 8)|var|int32
output = func_188(var_189,var_190,)
func_191 = relay.Function([var_189,var_190,], output)
mutated_mod['func_191'] = func_191
mutated_mod = relay.transform.InferType()(mutated_mod)
const_452 = relay.const([[[9.425938,5.731033,-5.533994,-9.174070,-3.658953,-2.367909,-6.560689,2.636316,3.101616,-1.044243,1.620209,0.104515,-4.531356,-1.670496,7.678347,6.899941],[2.025283,-3.159631,-1.058348,7.077036,3.214935,5.213602,2.711096,-0.814603,2.974803,6.829812,9.102452,-2.279425,-3.473927,-9.876942,-5.314715,-3.097399],[3.240172,-8.886358,0.076855,-1.889236,3.301466,-8.959885,-1.711190,7.212441,8.517720,-3.972077,-4.219636,-0.813099,-2.243858,-9.966546,9.388726,-7.927715],[3.962914,-5.478374,-5.228002,1.479012,-7.193932,-1.076398,-7.538445,0.586803,1.360512,-5.980595,-8.450847,-7.044569,-4.833922,7.219195,8.257205,-3.509791],[-5.452973,2.173299,0.683915,5.801851,-8.742695,-6.571055,0.611738,6.333571,8.587967,-2.852398,-8.780308,-7.865661,5.473774,-0.593319,3.676551,-6.738645],[-5.548764,1.710121,-6.014173,7.282159,-6.592232,-0.662916,1.745054,-9.061698,3.643843,-3.731864,2.244441,-5.305225,3.508687,4.063085,2.814622,-3.095044],[6.959178,5.052639,-8.460671,0.270927,-8.351476,8.918930,1.560031,3.882206,-1.376118,-3.233056,-0.246294,7.548130,-0.691137,0.284044,-4.022427,6.210830],[3.136894,3.823443,8.674914,-3.103559,-8.188444,-8.564044,-0.866721,2.173866,2.810963,-1.482108,-6.807007,6.843685,3.265461,0.642171,4.051233,4.436248],[7.915198,-6.729968,4.067491,8.382896,-0.717103,0.317152,3.044725,-4.440357,0.349586,-4.183265,-9.789383,-1.053749,-6.581851,6.432077,-1.650291,-0.265746],[8.985335,-8.342377,-9.002590,2.501624,4.129439,0.114314,5.816213,-1.389226,-3.127917,-7.066848,-9.589536,-0.699938,-5.779497,-3.365681,7.465611,0.681375],[-4.822179,7.002617,8.690808,5.853832,-4.214345,3.749739,-2.429706,-8.121801,-1.889831,5.499003,9.878204,-9.940260,4.057718,-1.124970,0.513598,-0.282694],[7.452491,-6.675288,-0.309435,-3.099118,-0.367851,-1.565316,2.282707,-6.821037,8.457782,-6.287750,7.210789,2.354640,-5.189376,8.857121,9.134491,5.133087],[-3.213380,0.936740,7.575865,7.665601,9.765782,9.039760,-7.048664,-2.846644,7.628676,-2.602507,2.045548,-0.558111,5.298645,-7.838821,9.070967,5.186129],[0.098208,-5.126737,-5.180382,3.193005,2.809484,-4.093065,-3.237087,2.403932,-9.346401,-1.546269,7.684030,8.506156,2.800240,2.130278,5.171897,-2.746189],[7.995191,5.647523,-6.154853,9.354780,5.820087,2.690987,4.690842,-9.130926,-3.907910,1.695529,6.607867,-5.016400,-9.204580,0.148627,-7.395028,9.580553]],[[-2.967008,-1.621693,4.451528,-2.214169,3.313576,-8.773586,-1.913748,-1.038229,8.781563,1.166707,-2.015040,8.596214,7.665579,-7.074648,-2.371635,-1.275177],[9.015834,8.373741,-5.032870,3.310548,3.209411,-2.831546,-4.907449,-6.038118,5.852595,-5.104801,5.216119,-0.537397,-6.257291,2.490839,-0.772423,1.533317],[-1.320859,-8.258341,-9.836132,-3.499423,1.203894,-2.779589,-1.808456,-4.888834,-7.075248,4.653112,-5.526573,-3.951011,1.470150,-0.436556,6.682737,2.484501],[-2.192195,0.682039,9.604451,7.042980,-6.713852,3.298348,-4.209874,-8.964253,-3.917396,2.154028,-9.215094,-4.909991,8.715119,8.111971,-6.184388,-1.297808],[6.915385,-2.606362,8.275468,2.359072,4.144218,-8.111704,-8.896104,-3.248174,7.575959,-2.559067,4.887478,8.536055,3.310425,-8.010700,2.056347,-6.261019],[-6.501859,5.243492,-2.888975,5.706525,0.079489,-9.706302,8.601719,2.595574,-0.856817,-9.478171,-2.802048,-1.958265,-1.279091,3.177502,3.424698,-4.397000],[-0.775381,7.838724,3.484253,-4.657830,8.323087,-7.250058,9.033709,5.853073,4.400622,-9.672412,2.942180,9.997657,4.051170,7.975405,3.932885,-1.584145],[2.023472,-7.384466,-5.386110,-1.901995,6.165955,-0.197595,-4.034187,-5.767519,0.701316,1.144185,5.725689,2.469443,0.192178,9.698748,-8.501370,6.712981],[-3.380177,-3.776880,-8.746445,-8.773780,-6.314687,4.598767,-5.963822,-9.885424,-8.184307,-6.828692,3.884727,-9.034282,-8.324528,6.741944,4.742254,-6.146535],[-0.535617,-6.832884,6.588570,0.810303,-7.957699,-1.293191,-9.045010,-4.272756,-2.199203,5.025492,-8.665519,0.443192,4.405139,-7.185713,6.151062,-4.848443],[9.510644,-1.555249,2.631833,-5.588532,-3.471723,-4.623346,-8.292858,6.367468,4.755063,-0.727857,-1.370128,-9.277866,-3.573168,-6.265917,-2.182909,1.410453],[-8.486737,-1.040637,6.538145,1.133826,-0.442103,3.538765,-5.204944,0.634524,2.943362,-6.180484,4.459535,6.646461,5.433837,3.021062,1.877878,6.163982],[6.536713,6.753879,7.736785,-7.184656,9.688565,-3.215338,0.767819,5.213204,3.552893,-3.899475,0.749384,-6.964815,-2.114942,-9.872442,-6.141692,5.072389],[0.375607,2.790883,1.034133,-1.460036,2.749516,-2.899510,8.435425,4.429294,7.455328,0.914744,8.782913,7.209843,-2.242995,7.018791,-3.400202,-0.098373],[-0.327085,-2.190046,9.343957,-0.865884,0.948060,6.176263,-1.593029,1.997198,9.475286,-6.191427,-9.061809,-4.627109,4.780702,4.559934,-8.048573,-4.129391]],[[4.488215,-3.364973,0.395919,5.562781,8.842609,5.627696,4.933685,-2.712796,-5.246535,-4.897912,-1.466900,4.731760,-5.249169,8.464286,-0.457788,4.615850],[-7.595450,-4.352991,-4.376453,-2.009051,8.587476,-5.182013,-8.606077,2.280476,2.644521,1.600588,-0.329222,-5.490021,-4.375579,2.389311,6.594289,-2.295869],[-2.326776,1.285222,1.682385,-8.041130,-1.293985,9.354611,1.815932,4.668552,-1.266769,0.020272,1.550188,-0.837932,0.727237,-6.321635,-1.229215,5.243479],[9.947451,-2.644927,-6.057563,1.871388,8.339285,-0.740931,0.960047,5.815243,-8.001746,-1.172452,-8.167412,1.227642,-9.841248,-1.574499,1.418351,9.234552],[6.819638,8.051423,6.712838,-8.490489,4.699960,7.898710,-3.261162,3.587413,0.448958,-6.021243,-3.328016,-6.782197,6.932661,0.008796,-6.220740,1.845639],[-1.635579,5.389682,-3.686995,-1.636453,-5.661988,-3.065556,4.929220,-1.570092,-6.577482,-6.333127,-4.092901,6.010483,-4.785462,-8.012171,-1.196740,-6.733287],[-1.123574,-5.483882,2.840044,5.132318,-6.898873,-0.387260,2.306056,9.876202,9.581342,-3.082147,-6.778106,1.870749,-1.519046,4.271801,1.335486,-1.960006],[2.350947,-9.337132,2.832852,8.612569,-5.754875,9.055367,-6.239601,7.325279,2.919244,7.064225,7.014740,-5.765770,0.791017,-1.950751,1.710890,-1.525455],[2.288247,2.378356,-1.099645,5.305854,-0.053988,-4.458804,7.203874,-8.538039,9.517957,-9.946769,-3.013900,3.078633,-5.842546,-8.066585,-0.081398,-1.385793],[-8.185408,-7.833637,-1.680092,7.960858,0.827943,9.207930,8.289024,0.946410,-6.337854,1.719828,-8.740139,-7.388861,1.760209,-5.071580,1.430192,0.230235],[-8.482720,5.050783,7.613424,8.392133,-1.831575,7.204469,-0.052287,6.501972,-6.022887,0.006733,3.484055,9.577841,-8.955292,-9.450181,0.772126,1.460049],[6.544833,-7.110050,3.564510,0.053229,4.808772,8.640484,3.942548,-4.126801,-0.091100,-7.119564,7.994867,-4.613305,4.657062,7.306061,-5.707198,-8.367325],[4.517152,8.343714,-3.374824,0.878177,5.052011,4.835971,9.300508,8.653531,4.917459,7.631462,5.751898,3.862838,-4.944680,7.099178,2.761581,-7.168192],[8.334153,-0.236510,7.277374,3.824740,-5.185040,8.230342,-1.724226,6.399343,2.431064,-8.723332,-5.244272,6.105644,-2.416627,-9.140171,5.612861,0.383419],[-6.848655,-9.979244,3.894401,-0.140882,6.418159,7.287520,-1.538068,0.427211,6.587653,9.222527,9.733830,-5.276894,3.571010,-8.811880,6.274794,6.126684]],[[4.313854,4.787333,8.952190,-9.093561,-0.820456,-6.421832,0.682842,-5.638841,8.901229,-6.423343,-7.860112,6.051509,7.207656,-9.280808,9.733670,-5.050213],[-0.667144,6.138205,-2.074379,-5.396664,2.983023,1.338080,-2.134096,8.157561,7.810761,1.083824,-6.075023,-0.923470,-1.868393,-2.403543,-5.105310,-6.231344],[4.716725,2.425338,5.490315,-8.285910,-3.004633,1.650221,4.397616,6.156796,3.571675,-5.334906,8.886733,6.259658,-6.491037,2.401422,8.635591,7.464698],[0.633522,-4.544350,-9.418131,8.894642,-5.938445,1.724085,8.579183,9.183765,9.876476,-8.867834,-8.522784,-9.124774,0.196232,4.171219,3.799953,3.445783],[5.693824,-5.522884,-0.116171,4.778565,-9.849353,-3.809502,2.436423,-9.461771,-5.180534,3.350788,6.606448,7.219000,3.346531,1.318861,5.342808,9.952321],[-8.358714,-8.222300,7.111658,7.602737,-3.487930,0.560870,4.096709,3.451678,-8.461222,-8.531590,-9.364675,-2.791044,4.952591,5.211272,2.494024,8.717953],[-5.188568,-3.336337,6.551244,1.608897,-2.097649,7.299249,8.566402,3.743543,2.703268,3.685015,0.182892,3.273862,6.118100,9.881901,8.892206,-3.089055],[-6.863169,9.697883,-5.431699,2.957067,5.496766,9.785433,7.565019,-4.188211,-2.421712,2.660008,-7.642914,-1.636188,9.589383,-5.811862,4.373192,-5.929462],[3.857597,9.338214,-3.776803,-5.436074,-0.210988,-1.547901,-2.509827,-8.215070,-1.967773,-6.055421,6.722499,-7.118069,-2.251233,1.464803,7.644461,3.435278],[-3.632892,2.133432,-3.422026,-1.717523,0.979102,-1.776796,-9.352131,-6.440829,-0.198795,7.672776,-7.992001,-3.731088,-4.710346,-9.884445,6.329796,-7.873605],[-5.044676,8.522617,-0.703012,5.877292,-1.361783,4.655870,6.731721,-2.496861,1.168696,6.711385,0.248441,-3.863640,9.643609,-2.334051,7.481200,-6.521671],[-7.780237,-5.777140,-4.979931,-9.054027,4.438539,2.859195,4.836132,8.084409,7.236089,-7.328638,-2.164775,-2.425812,2.041902,6.685396,7.550734,9.035201],[2.245174,-0.841874,9.860334,-3.051740,4.388293,8.893911,9.863211,8.068800,9.276683,-9.927729,-7.319008,-5.369021,1.866458,-0.855930,0.629808,-4.477490],[7.506027,-2.995064,7.614553,-7.394332,-4.512957,1.473156,-9.824074,-2.026667,1.892908,1.450969,6.866215,3.034984,6.584704,-3.472811,8.648858,5.047688],[1.252400,-2.473935,5.166349,5.522574,-2.234572,9.759318,3.558674,9.506593,-1.517356,4.962335,-1.029190,-7.101759,-6.672596,-1.847522,7.132764,0.375201]],[[-4.756046,3.769823,-4.176167,3.123131,-2.290600,0.361546,1.597682,-5.359073,7.660014,1.015645,-8.059314,-2.362664,-8.004169,3.178331,-2.358740,5.039127],[-6.406008,-4.438761,5.494466,9.975693,2.166527,-5.482857,8.442264,-4.123557,-3.234041,-7.413698,-7.591880,0.331749,-9.644673,-4.937787,7.087409,0.035092],[0.510025,-4.351163,7.923537,-7.937449,-4.804293,5.034917,1.119205,2.620281,-5.819882,-7.267196,-7.487941,7.285195,-1.075263,9.616850,9.228834,7.822590],[9.948801,-6.681307,-5.912605,3.371947,8.010380,-4.354607,-2.970446,-4.496554,-1.122000,5.604243,-0.234040,6.298429,9.950509,2.725715,0.456031,8.947195],[-9.232591,5.251949,-1.698801,-3.680253,-2.717730,-2.182305,-1.307544,1.828107,1.402166,9.784377,8.957899,4.311189,7.776938,-8.929170,6.763897,2.167383],[6.687882,-2.316339,8.690987,2.558484,-1.522051,3.936721,-5.896326,9.435444,0.324161,3.066163,4.312013,5.958126,4.084220,0.815981,9.950582,5.005784],[7.801145,-8.480219,-9.113233,-1.235960,2.174219,7.413732,-5.287154,-3.359501,3.593545,4.434515,-2.342944,8.533589,-9.993793,-3.633909,-1.163746,-8.021853],[-7.381556,-2.314804,-7.077475,4.402048,-1.914945,6.309142,1.918154,1.274597,0.029027,7.549321,7.345371,-0.282498,7.994147,-1.175941,-4.890806,0.730348],[8.644677,9.718002,5.329340,-0.833180,1.477055,-9.821132,2.960828,5.357519,-1.810306,-2.690613,0.613994,8.844914,3.551910,-7.300108,-1.700146,-2.398440],[-0.973587,0.134784,-0.777525,6.103939,7.132339,-1.459526,8.841933,-3.355039,-4.976338,-5.633382,2.064922,-3.361082,0.980766,-6.060919,0.048627,7.498346],[-0.435899,7.549164,-0.765089,-3.786360,-4.602463,-3.475300,-4.381491,-2.954115,0.369662,-4.220942,-3.138842,-8.761458,-5.327272,-1.358208,2.572547,5.395830],[-3.487045,1.535752,0.015622,3.597768,-5.922998,-1.044602,-0.577364,-3.704708,8.618413,-6.260015,1.125309,3.704024,7.117782,0.675965,4.194583,-6.207289],[3.752734,9.095314,4.418425,2.080928,-7.907812,-4.667338,-0.076298,9.509133,8.165831,6.341757,-6.732780,-4.380767,-4.093900,-7.029051,-9.898375,-6.493931],[-7.893194,6.976241,-1.440582,-1.488144,-4.284902,4.629224,2.026279,-0.907834,-2.443360,7.840649,-8.965058,-0.968864,-8.000645,-8.232352,7.845976,-1.315823],[-9.635252,3.304616,-7.877448,-9.470886,-7.327063,7.856433,-8.832971,-3.243292,-1.331175,8.190234,-5.637653,2.382548,-2.960450,0.310135,-0.594890,-8.939867]],[[4.562484,0.027758,9.454548,-3.799816,3.318847,3.165320,5.890339,-7.728710,2.439534,-8.688191,3.659273,-8.777084,-9.130745,2.670807,-2.555287,9.072318],[5.190942,6.929173,-2.147714,-1.361700,-7.782544,6.622263,-6.302235,7.674533,3.879898,0.268071,5.036702,9.235882,4.087716,9.506338,-9.192941,-9.397803],[7.202742,-1.266180,0.166357,-4.916008,-6.632790,-8.319311,7.822336,-9.729661,1.658745,-4.591941,-9.101678,-5.583689,-6.431741,3.158997,6.382708,4.352738],[0.257976,-9.753521,-0.414228,-1.114569,7.235566,5.307592,-6.963477,9.082899,1.290661,8.858762,0.440031,-4.725112,7.866114,-5.277675,6.576531,6.143962],[2.018084,0.569075,-8.743871,-9.088667,-6.374930,2.271716,-2.955131,0.928463,-9.359177,2.418153,-2.591855,6.987127,4.189877,-9.548473,3.336560,0.232070],[-3.490450,9.367384,2.309645,-0.227629,3.009366,-9.184725,-9.052921,-3.055741,-3.148659,1.589451,8.505767,-5.352247,-1.236546,0.089229,2.848878,7.285829],[3.937199,-0.246612,-6.923959,6.811042,-2.771746,8.889778,1.784860,8.436609,1.749362,-6.159149,-3.311815,6.582021,-6.635825,-7.879215,-0.233099,4.991890],[-4.011959,-4.600616,-9.431004,8.929417,6.210029,2.165960,-2.195678,4.327870,8.383304,-9.612181,-0.748698,6.500781,-0.706524,-3.661655,1.190328,-5.251776],[-2.583319,-6.554500,-2.710717,8.710085,1.289045,-2.621847,-6.352991,9.532761,-3.758772,3.749019,-5.254920,1.576971,-4.108986,7.920443,5.379761,-7.075656],[-7.239598,-7.341984,-3.650880,-1.372387,-1.699181,9.589884,-5.730792,0.274264,-1.329259,-9.000189,4.540107,0.643110,7.126498,8.729914,-2.224801,-3.831393],[-5.272009,-8.233712,8.803594,-8.462984,6.795423,-7.499023,4.223101,-6.398145,-2.483534,-6.563635,-4.350716,4.591025,-0.660517,-4.826194,-5.688035,1.676472],[9.710318,3.483009,-7.517373,9.656903,9.360947,-1.984790,3.663299,-4.851531,4.889886,7.801666,-3.627864,0.365480,9.265806,-9.093354,0.574257,-6.434360],[3.486340,4.045221,-4.022971,6.068983,-4.644625,-8.198797,9.310181,8.829682,7.657599,-5.432481,3.457959,-3.522884,-6.274401,9.613182,-7.284002,-6.762171],[6.260020,2.745195,-6.429351,-7.906802,-9.501874,-5.689513,6.492120,-7.805306,-7.555541,4.327159,0.503376,-3.818610,-7.891316,1.587959,-1.837208,-6.502096],[6.249488,7.994828,-3.944121,-8.247607,-3.020554,-5.210673,-4.773846,-2.145850,-9.140587,-4.468543,2.363610,7.628723,-6.331685,-0.473749,-9.638568,9.190059]],[[-6.405474,-8.531162,-4.751923,-9.776714,1.530236,-4.424852,4.903762,1.760166,-5.441112,1.399564,-3.879492,8.155395,9.123997,5.156750,-2.705404,1.995979],[9.156321,-8.810381,-9.251511,-1.071907,5.018970,1.735553,3.090254,-3.760751,2.089482,8.060084,-6.096715,-1.033663,-4.772196,-3.610736,-1.939766,-2.502112],[7.681632,5.763816,9.697946,6.422745,1.943926,7.360496,4.407713,-2.546347,-4.270007,9.814073,7.533684,-4.495480,9.045144,-2.631135,5.907535,-6.746880],[0.672359,-4.506336,9.854332,-4.101386,8.415148,-3.952893,6.164470,9.845154,-3.496410,3.670879,-6.885910,-1.113939,-8.271325,-8.987352,0.705849,-8.163204],[-5.309404,4.626291,-0.407930,-7.871657,6.781816,9.076802,-5.757477,-4.826960,9.079901,-7.207382,-1.813757,7.511850,2.201672,-3.150493,-9.080017,-1.853957],[5.517623,5.866998,3.060844,4.687398,-7.793984,8.204250,7.432805,3.910615,3.319798,4.904113,-2.175896,-0.968891,-1.228005,-3.928510,8.321572,1.684918],[-0.834319,9.685118,0.283051,1.990807,7.058165,-8.610197,-0.452990,5.648514,9.167780,5.585531,7.856600,8.582961,-2.480474,2.038503,-1.552517,3.756992],[0.299608,-5.122636,5.046871,-0.280264,7.895008,-3.221510,-3.567483,7.537143,-7.109531,-9.258821,3.136444,9.672400,1.674342,7.487988,2.024638,5.522389],[9.300522,7.033415,6.847879,5.079968,-6.280940,-3.007471,4.803384,-4.468645,5.400950,-9.797769,8.674537,-7.258457,-1.980663,-3.069540,-4.113047,-6.370396],[-5.422304,9.133705,0.110688,-2.759579,-7.693804,-6.183779,-8.147657,3.668956,1.730238,-1.791286,3.918299,-3.446122,2.088954,0.350709,-2.336216,0.479378],[-4.535039,-6.767234,-8.498207,0.620845,8.787406,-3.552603,8.778653,8.276121,5.932076,5.853909,6.472785,-0.254496,-2.195297,-7.861116,5.947757,4.028870],[-2.528871,8.256803,-2.062537,2.998549,7.236102,-7.810445,9.910264,4.227221,6.163388,5.168277,-9.973423,4.124927,-4.570256,0.464546,-4.219531,4.924716],[-3.563731,7.497726,4.453564,9.544948,-8.484814,1.698614,5.078930,0.380301,9.365028,3.169831,-8.558391,0.864426,3.154472,6.756605,9.662056,-4.925454],[7.578927,6.153411,6.662565,8.864288,-1.596141,6.699261,-7.368835,-6.391768,-9.776872,7.839020,5.116584,7.230454,-3.965440,-1.514270,8.487868,0.411842],[-4.268405,3.578706,2.374016,5.336907,-0.779792,-4.929376,0.993948,-9.962433,-7.000064,8.167303,-9.578795,-9.701381,0.621739,3.488787,-5.042866,9.236013]],[[2.199201,-9.220479,-6.284195,-0.037169,-2.711260,4.576744,2.209776,2.391213,1.744538,0.293275,7.762734,-3.427313,-9.371733,1.688742,5.175338,0.806659],[-8.550806,4.760423,-1.628632,9.415793,-1.121245,-6.700657,-2.016700,-3.820135,-1.465706,-8.502381,8.350053,-2.428442,-2.963552,-6.962308,8.414716,-0.276487],[2.230336,-8.917151,8.031958,1.347473,-9.570005,2.389369,5.378472,-8.000050,-5.270447,-4.641517,-4.268792,7.589325,-4.337392,-5.384381,-4.469941,9.627761],[-5.228855,9.389983,6.101411,-1.978279,-1.804274,1.687632,3.450222,-2.806849,-1.346903,9.241804,7.573815,2.134438,0.208978,4.882694,-4.530123,4.181533],[-1.416826,-6.889382,8.822979,9.258301,-8.723703,-6.170268,0.043030,6.100345,8.038761,-8.719694,-9.479485,-7.805786,0.496945,1.334555,4.393401,-0.240181],[5.370644,4.989999,6.464134,-9.594892,3.875402,4.410266,6.975783,-3.236270,-6.414183,-1.395454,-0.766616,-8.073880,-9.239620,3.960316,-1.426564,-3.371689],[-7.762062,2.897409,-8.578675,-6.961015,-1.032927,-8.198274,-9.078362,-3.216828,2.472899,7.521650,1.414981,2.219486,2.375467,4.392511,8.451741,5.001358],[-3.488924,2.344741,0.358895,-3.978785,-8.862558,8.549735,-5.269640,5.182306,-2.337642,5.957303,-9.349528,-8.252073,-8.401086,3.001570,5.211829,5.145512],[2.136732,-3.845802,-8.332976,-7.407556,-5.989355,-1.375842,0.197326,-8.881153,-7.372074,-6.246347,3.062494,5.247860,-2.361416,0.822279,6.299855,9.082320],[7.599762,9.884321,7.248833,-1.581790,-9.470828,-8.966396,-7.839421,8.936653,-3.786739,7.341997,-0.645935,5.090521,-8.241004,-4.475284,-6.589144,-5.523011],[-3.118736,2.961689,-0.103754,8.579473,-9.984938,-6.160420,-6.632177,-5.922765,7.661487,-5.557995,-9.057905,5.624841,-1.555949,-2.521227,4.517753,7.364456],[6.813845,6.593989,-0.870069,-4.206118,-9.001828,-1.637450,-7.066731,-9.345479,-9.841902,-4.810170,-7.012612,7.414412,0.583885,4.987212,9.684409,-9.365126],[-3.626290,-3.269983,-1.283757,3.904715,1.784162,-4.304273,-2.381161,-9.765761,7.508554,8.718271,-6.667993,2.787114,4.315633,-0.244223,7.659496,6.498717],[4.182850,-5.352220,-3.289686,-2.257322,6.271336,8.076119,0.600967,6.770042,-6.937012,3.218795,7.806072,3.403253,8.913556,0.014116,-9.014495,-6.277723],[-7.627485,-1.329368,3.451237,5.478510,7.931683,-2.518262,-8.015199,2.569423,6.970779,6.276983,3.384974,5.046367,-8.484178,2.214248,0.588069,-1.745157]],[[9.577820,-8.203209,-5.145629,7.342199,-8.014999,-1.235672,5.394819,-4.568800,-3.096251,-0.843707,-9.096218,4.460216,-1.455829,6.487485,-6.530063,-4.468805],[-0.882153,-7.875237,-0.536055,-6.295099,-0.343715,4.796819,3.493715,-7.925461,0.237036,8.056214,-2.472858,-2.660914,-8.124029,-8.583388,-5.840331,-7.210781],[0.618318,7.320147,-9.093640,-9.511063,-8.817221,4.568408,6.921351,-2.680818,-8.471003,-1.028580,-4.011673,5.378722,0.431505,3.954773,-1.796839,-1.934743],[3.693356,8.998137,-9.764420,-6.391988,9.377782,-5.244083,8.149674,8.419781,-5.637794,-8.455765,7.205970,0.606684,7.708004,-2.143232,-7.123936,8.942317],[-1.290626,-1.516493,-2.519004,9.972253,-7.353981,1.296756,-4.869731,7.018769,-9.525867,3.441427,9.366782,-8.281828,-5.449279,9.916741,-0.452786,-4.749539],[9.140925,9.580262,2.169472,-0.808080,-6.003440,6.049238,-7.151782,6.998827,-8.578692,-1.819443,-4.672808,-9.995498,5.140720,3.100168,-1.285159,-7.463168],[-3.157848,2.526381,3.537382,0.321489,3.276219,-7.850588,0.345270,4.396752,9.410864,-3.955551,-1.626650,-6.224063,-3.373313,0.666156,3.358620,-3.381653],[8.324629,7.780409,7.990573,-3.656787,3.771361,8.403052,8.020069,-0.665576,-1.188105,-5.665657,9.098504,0.612917,-3.956983,-5.447294,-4.735591,-7.131294],[-7.726742,-9.108265,-9.498344,7.936539,-9.955200,2.277416,2.916745,-0.111144,-3.276671,-4.298091,5.609478,8.601376,5.089510,5.972080,-8.912899,4.874952],[0.297037,0.155263,4.521915,5.810771,2.489693,3.451730,-0.661197,-2.288667,-3.345027,-2.727798,-6.448914,1.235088,8.386058,-4.964377,-0.351293,-6.917376],[5.864205,-4.823589,-8.410805,-2.486062,-7.192792,-6.102828,6.332301,5.022985,-5.356616,0.288181,8.595183,-2.841638,0.023021,-9.789378,-9.528779,1.706108],[-3.195335,-6.725813,7.963113,-2.038754,-6.553341,-3.932473,-3.481068,8.496451,0.493050,5.649108,-4.275108,9.151327,-2.718078,6.644085,8.219772,3.076521],[-2.631495,-6.031893,-0.153048,8.900672,-0.573664,4.031193,0.815844,9.319668,5.419991,9.062021,-3.581299,-5.565637,4.478287,8.998017,-2.306665,-6.177242],[5.565084,4.335413,-8.113542,-9.175369,-9.644453,4.215616,8.811926,2.709306,1.595278,-7.182659,8.351799,3.075174,-6.593191,6.691713,7.607273,-9.560824],[3.177727,-0.597435,-1.402732,-0.999904,-5.863224,6.384003,-6.445519,7.820898,9.566163,7.513687,-2.572826,9.330565,2.738666,3.455237,9.444068,1.631931]],[[5.368854,-8.168968,3.853731,8.122482,-6.425465,1.161748,5.158364,-0.839820,-2.599270,1.490188,-5.434549,4.536969,-5.998334,-6.024218,-5.121972,-1.771524],[-9.735826,-1.063614,8.803006,9.958776,-0.892673,-7.455608,3.503184,-1.105034,-9.211288,-0.093251,5.450001,-2.705053,4.375805,7.463031,2.488348,3.527899],[-8.404198,2.552419,0.476877,8.792478,8.292033,3.884895,-5.183912,-1.791233,-6.732855,-2.972468,-8.861116,8.096429,7.497686,-8.302794,-7.608519,-7.758830],[0.306521,-7.273465,2.626162,-5.522965,0.432778,7.430200,2.886715,-7.011814,3.166500,8.110921,8.430010,4.753205,8.748748,3.023678,1.507251,-1.897826],[2.438253,-7.629181,-4.600436,7.685474,-5.022326,-1.594198,-0.307784,4.641772,9.498271,-8.480898,6.845451,5.377905,8.018796,-4.412640,7.038318,7.381672],[6.170095,8.463266,-0.188640,4.397738,4.472330,-7.939622,-6.213466,4.702664,3.360690,8.542686,9.088206,1.848099,7.374641,-2.850172,9.895120,-4.785979],[7.937506,-2.946787,-0.509610,-7.982944,3.325253,-3.824578,5.402996,2.396504,7.118570,2.003485,-8.872319,5.339065,4.991666,-5.134253,6.575252,1.723299],[-9.678901,-2.748593,-7.550236,-7.053430,1.439817,0.754075,1.085811,6.160909,6.532323,0.615291,-3.438915,-9.731952,-1.920434,-6.329291,8.734037,-9.617638],[7.723372,-2.180441,-8.519835,-7.831357,1.539067,-4.222154,-1.681311,0.103324,-7.458807,4.321671,6.731199,-0.277581,-0.636655,9.882320,3.154819,3.961937],[-7.251947,-2.276557,7.589494,9.629868,-7.136180,7.596811,8.629625,0.969537,1.437162,-8.075409,-4.000879,1.383499,2.111302,-3.228954,-4.904079,-2.724718],[7.772647,0.980683,1.859818,-3.903713,-8.112135,-1.725241,-4.614145,-1.045739,3.234934,5.463047,0.953166,-7.153260,7.443671,9.058787,9.327416,7.147840],[-6.793564,0.325202,8.912172,-6.120489,1.605091,8.722005,-6.073003,0.874689,8.231896,8.015562,4.620836,0.983892,-0.191636,8.120303,-5.109050,-1.926643],[5.377720,-5.234314,3.824346,4.963387,-6.240999,5.779800,-2.390259,-7.470826,5.067573,-7.652090,8.075305,6.449769,0.181679,6.863113,9.514695,-3.678295],[7.246386,2.134736,3.950001,8.300664,-9.679930,-3.979465,-9.100103,-5.107912,-7.117353,-9.583235,-4.465109,6.577508,-2.805763,-3.030962,3.164238,4.242719],[8.912687,9.517535,3.384177,-4.635356,9.790340,-8.915638,6.644613,9.162421,8.677651,-0.809284,-5.975063,1.876240,-9.079916,-3.794950,3.542085,7.690142]],[[2.050191,1.531388,2.413741,-7.733359,4.399769,-1.238909,4.089061,-1.068266,-0.073086,-5.535791,5.519395,5.409264,1.586487,0.507134,7.668519,-5.171014],[2.345231,8.924226,1.901146,-8.454566,-9.451409,-2.302710,-8.075306,0.114198,3.210573,9.379752,5.220563,-8.911436,7.361596,0.561045,-9.296472,6.269071],[-1.822782,5.015904,-7.307150,-1.514666,-2.578240,-2.920611,4.795613,2.788879,7.923528,7.786479,-8.052570,-2.914593,0.787960,-1.264032,4.554828,-6.088336],[6.838486,2.835059,2.376604,-4.134403,-4.057662,-4.022957,-7.834293,-6.178394,7.693875,2.838847,-2.052132,3.252806,2.551816,9.343484,5.864666,-4.896795],[0.314172,-2.775297,1.177729,4.496087,4.924045,-6.451174,0.082381,2.613517,-0.908790,-6.934882,-2.332614,4.645287,-2.032230,-0.665598,-6.874668,-7.764466],[3.719579,-2.409197,9.872143,-1.996527,0.661812,3.330107,-4.827632,9.828964,3.912649,5.941166,7.804905,0.305645,7.274342,5.395510,1.278519,-4.652241],[-2.534107,1.738203,-4.531778,-6.889526,-4.115137,-9.557974,0.998244,-9.716848,-0.568998,-1.909288,-3.089494,7.281592,-9.829827,7.168912,-0.514352,-8.344687],[-5.823389,-5.031906,3.861832,-6.174864,-3.935575,-6.946142,4.635006,-9.244673,-8.403225,7.331883,1.331782,7.583148,-8.641691,8.457286,-8.158764,6.741443],[2.503752,0.706066,5.420911,6.345325,-3.667290,9.920535,-0.560455,0.499946,-9.046878,4.742419,0.312915,6.463440,0.706618,-3.000087,-4.603068,-6.544570],[-5.769406,9.177332,1.930531,7.505767,-7.587444,3.760528,6.853948,-7.713777,-6.643511,9.127014,-5.317846,7.276696,4.921565,7.039560,8.925608,9.323213],[8.056748,9.359140,1.008529,-8.705222,8.506596,-3.065999,0.037820,1.968693,-8.666251,7.840084,7.186975,-7.562055,5.616587,1.839938,0.717353,-8.017929],[9.879945,-9.146284,-1.988862,-9.939042,-5.025575,-8.701688,1.989376,5.083393,-5.795283,-4.900046,2.089634,-4.020291,-0.360756,-3.515029,4.965499,-8.489380],[-2.069706,9.041969,-6.680631,3.457650,1.281740,-9.371977,8.993717,-2.777200,-0.824685,5.948943,-5.481691,-2.015634,9.280132,-1.780349,8.997062,0.574772],[0.138303,7.532232,5.128618,8.275892,-7.566890,8.813230,8.704338,-5.621035,1.366741,-7.797885,2.680403,-2.012419,7.074280,2.737892,-7.683079,-9.009843],[-7.135797,9.545074,-8.746840,-1.556377,-0.458271,-1.976474,6.300082,1.730509,3.929468,-8.619218,7.279134,2.044480,-6.329681,3.684100,-2.384462,-5.046553]]], dtype = "float64")#candidate|452|(11, 15, 16)|const|float64
uop_453 = relay.exp(const_452.astype('float64')) # shape=(11, 15, 16)
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
var_457 = relay.var("var_457", dtype = "int32", shape = (25, 6))#candidate|457|(25, 6)|var|int32
const_458 = relay.const([6,5,-6,-9,6,4,2,8,7,9,4,-4,-10,3,10,7,3,-1,9,-1,1,-6,5,3,5,10,9,-8,-4,6,-4,-9,7,7,2,-10,-3,8,-10,10,2,-5,-7,9,-3,-3,-7,5,2,9,7,-7,-6,8,5,-3,1,-7,10,-8,-10,-9,3,3,5,-3,1,-3,-4,-3,1,5,4,10,7,-9,9,6,-4,-9,-10,1,4,-6,-9,9,-7,-1,6,6,-9,2,7,-10,-8,-1,-3,10,8,-6,-9,6,1,6,1,3,-9,6,5,-8,-4,3,-3,5,-3,8,-7,-7,-6,-6,-4,-6,3,10,7,5,7,1,3,1,8,-9,8,1,-8,10,3,-5,-8,-6,-3,8,-9,9,-4,1,4,7,5,-3,-3,4,-8,4,-6,-9,-3,8,-6,7,9,-4,-7,4,-6,-6,-9,7,-1,-1,5,-5,-1,-4,2,-8,9,-6,10,-2,-5,9,9,3,-9,9,8,-4,-9,-5,10,-1,-5,9,7,4,-8,-7,-9,10,-7,-3,3,2,-8,2,-10,10,10,-1,-9,-10,-7,7,-7,7,-4,-9,-2,8,9,9,-2,5,8,-10,10,-5,7,7,7,-2,-4,9,-3,5,6,3,3,-2,3,-10,-4,-2,-7,8,2,-6,-10,-2,1,-7,3,6,6,-9,-2,4,3,6,6,5,-4,4,-7,9,8,-6,-5,-9,8,2,8,-5,-1,-3,9,-4,-1,8,-9,-6,2,7,4,-8,5,-4,5,4,-2,-4,-4,-3,1,3,-8,-6,-2,-8,1,9,-8,-7,-4,-1,-7,-7,-5,8,-4,5,-1,-4,6,-9,10,4,-3,-10,-3,3,-8,-3,-1,-1,3,8,-9,-8,2,3,-7,9,10,-7,2,5,10,-7,10,-7,3,8,8,8,-5,-2,-10,4,-2,-2,-1,-8,-4,6,-2,6,10,7,10,-8,8,7,2,-9,2,-1,-10,-6,4,8,-4,-1,-10,10,6,5,7,6,-5,6,-8,-2,7,-3,-9,7,7,10,8,7,10,-2,8,-8,2,-10,-10,9,10,8,-2,5,-5,-9,4,9,-10,1,-6,10,-3,-8,-1,-2,-8,-10,-5,2,-9,3,6,7,2,5,1,7,4,-8,-4,-9,1,5,-4,8,-9,-9,4,3,6,-7,1,-10,1,3,-10,-8,-2,9,-1,3,1,-4,-8,2,-5,2,2,5,1,9,-2,4,-1,4,-1,3,-7,-8,4,-10,8,-6,-5,6,-1,-9,5,7,-6,9,7,9,8,10,7,10,-1,10,7,4,-2,-1,4,-4,-8,-10,-4,9,-6,4,9,3,-2,8,10,7,2,-10,5,-9,-6,8,-7,1,-5,1,1,-6,8,2,5,-1,-9,-5,6,7,-2,3,3,-7,1,4,1,-6,-3,8,-10,-5,1,-5,-6,10,-9,-9,8,-1,-3,2,-7,4,9,-8,-2,-9,-4,1,-7,8,-5,8,-5,2,-8,-4,5,4,2,2,-6,-7,7,10,1,10,9,7,1,-1,-6,-1,-5,-4,7,-8,-8,5,5,9,-5,1,-1,7,-10,10,-3,6,5,4,-7,-7,9,2,9,-1,-2,-8,3,-2,4,-8,2,5,-5,3,1,-8,-4,-8,2,7,4,-7,-1,-1,-1,-1,2,-4,5,10,9,-10,-8,6,-10,4,-8,-2,-9,3,-1,-7,-2,-1,-8,5,-6,-10,3,-6,9,-8,2,8,-2,-3,7,7,1,-4,-8,-4,-4,-1,-10,-2,9,-6,10,2,6,7,7,1,-4,5,-6,10,-5,8,8,-2,8,7,3,1,7,1,6,10,-8,3,7,-5,4,6,3,-10,8,-10,9,10,-1,-7,-6,-6,5,-10,5,-5,-9,5,-8,3,-4,-9,-4,6,2,2,-2,2,-10,-10,-8,-5,5,-8,-7,-1,6,4,8,7,5,10,8,7,-6,4,-3,2,-9,10,-3,-6,10,-1,10,-2,5,-4,-6,2,9,6,7,9,8,1,-2,-2,-9,-5,-9,5,9,-1,-2,4,1,5,-8,1,8,9,2,-6,-4,-9,-6,-9,6,9,-2,-1,-5,-8,-3,-10,4,-10,-3,-7,-7,-10,-3,-9,8,6,1,5,-4,-8,4,7,-9,4,5,-1,-10,-7,-1,-9,-2,-10,-2,10,8,4,-8,-1,10,-1,9,-7,-10,-9,9,-1,-4,-6,6,2,-4,5,7,-8,-3,10,-8,8,-1,10,-6,-3,-2,7,-6,1,5,-1,3,-9,-8,-6,-8,-8,-5,9,1,-2,-10,10,-7,-8,-8,5,10,-8,5,-7,-10,9,5,-7,-9,-9,5,7,-2,-4,-3,2,5,2,-3,2,-3,-1,1,7,6,-1,7,4,-10,-10,1,4,1,5,-4,9,8,-8,-7,-8,-10,7,4,7,-2,-9,-8,-7,1,-4,9,-4,5,-7,-8,-7,-4,6,-6,4,-9,-8,-9,7,-9,5,-4,6,-5,-2,-7,-1,-3,-9,-9,6,-7,4,-1,6,-2,7,-3,7,-5,-9,10,-3,7,2,6,-4,2,1,-1,-3,-9,10,5,-10,-6,5,8,-9,-10,9,-10,-1,10,-8,-8,-5,5,-8,3,-3,6,-5,5,-9,6,3,10,-8,3,-3,-9,7,-4,-4,-3,-5,6,3,-3,-8,-10,-5,-4,-5,1,9,8,5,3,8,8,-6,3,-8,2,7,9,-4,-7,4,-9,-9,9,9,-3,9,-2,6,4,6,-1,10,7,7,-7,3,3,4,-5,-5,2,2,9,-9,-3,3,-8,-6,-10,-10,-3,2,-6,-8,-9,-1,-9,5,10,-4,-9,-9,-9,3,-9,6,-7,-9,-5,5,-2,-5,1,10,5,6,-9,2,-1,9,1,3,-4,-2,9,-4,-6,-1,-10,10,-5,9,5,-1,-8,8,6,7,6,-10,7,-10,-3,-1,4,-6,2,-10,-7,-5,3,-4,7,-10,1,1,-4,-2,-2,7,8,4,9,7,6,2,-5,2,-10,-8,4,10,2,2,6,-1,-5,4,-8,-1,-3,8,1,-4,4,-3,-3,4,-4,-1,-6,-5,-7,4,-2,-2,9,-4,9,3,-2,-10,9,2,10,4,-8,-8,1,-2,8,7,3,-10,-3,-6,9,-2,1,10,1,-1,6,-6,3,10,-10,-1,-10,5,-3,-10,8,1], dtype = "int32")#candidate|458|(1200,)|const|int32
call_456 = relay.TupleGetItem(func_188_call(relay.reshape(var_457.astype('int32'), [10, 15, 1]), relay.reshape(const_458.astype('int32'), [10, 15, 8]), ), 2)
call_459 = relay.TupleGetItem(func_191_call(relay.reshape(var_457.astype('int32'), [10, 15, 1]), relay.reshape(const_458.astype('int32'), [10, 15, 8]), ), 2)
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
call_466 = relay.TupleGetItem(func_188_call(relay.reshape(var_457.astype('int32'), [10, 15, 1]), relay.reshape(call_456.astype('int32'), [10, 15, 8]), ), 0)
call_467 = relay.TupleGetItem(func_191_call(relay.reshape(var_457.astype('int32'), [10, 15, 1]), relay.reshape(call_456.astype('int32'), [10, 15, 8]), ), 0)
output = relay.Tuple([uop_453,call_456,var_457,const_458,call_466,])
output2 = relay.Tuple([uop_453,call_459,var_457,const_458,call_467,])
func_468 = relay.Function([var_457,], output)
mod['func_468'] = func_468
mod = relay.transform.InferType()(mod)
var_469 = relay.var("var_469", dtype = "int32", shape = (25, 6))#candidate|469|(25, 6)|var|int32
output = func_468(var_469)
func_470 = relay.Function([var_469], output)
mutated_mod['func_470'] = func_470
mutated_mod = relay.transform.InferType()(mutated_mod)
var_514 = relay.var("var_514", dtype = "float32", shape = (14, 16, 14))#candidate|514|(14, 16, 14)|var|float32
uop_515 = relay.acos(var_514.astype('float32')) # shape=(14, 16, 14)
output = relay.Tuple([uop_515,])
output2 = relay.Tuple([uop_515,])
func_525 = relay.Function([var_514,], output)
mod['func_525'] = func_525
mod = relay.transform.InferType()(mod)
mutated_mod['func_525'] = func_525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_526 = relay.var("var_526", dtype = "float32", shape = (14, 16, 14))#candidate|526|(14, 16, 14)|var|float32
func_525_call = mutated_mod.get_global_var('func_525')
call_527 = func_525_call(var_526)
output = call_527
func_528 = relay.Function([var_526], output)
mutated_mod['func_528'] = func_528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_592 = relay.var("var_592", dtype = "float64", shape = (2, 9, 3))#candidate|592|(2, 9, 3)|var|float64
uop_593 = relay.asin(var_592.astype('float64')) # shape=(2, 9, 3)
bop_599 = relay.floor_mod(var_592.astype('float32'), relay.reshape(uop_593.astype('float32'), relay.shape_of(var_592))) # shape=(2, 9, 3)
uop_603 = relay.erf(uop_593.astype('float32')) # shape=(2, 9, 3)
output = relay.Tuple([bop_599,uop_603,])
output2 = relay.Tuple([bop_599,uop_603,])
func_613 = relay.Function([var_592,], output)
mod['func_613'] = func_613
mod = relay.transform.InferType()(mod)
mutated_mod['func_613'] = func_613
mutated_mod = relay.transform.InferType()(mutated_mod)
var_614 = relay.var("var_614", dtype = "float64", shape = (2, 9, 3))#candidate|614|(2, 9, 3)|var|float64
func_613_call = mutated_mod.get_global_var('func_613')
call_615 = func_613_call(var_614)
output = call_615
func_616 = relay.Function([var_614], output)
mutated_mod['func_616'] = func_616
mutated_mod = relay.transform.InferType()(mutated_mod)
const_631 = relay.const([[[4,-2,-9,-6,-5,2,-7,5,2],[-2,5,4,5,10,-8,-7,-8,3],[-1,8,9,3,-3,-5,-10,-7,7],[10,5,10,-6,6,-6,-1,-5,5],[1,1,4,8,-1,8,6,1,-5],[-5,-8,5,9,2,-5,9,3,-7],[-3,3,-9,1,-9,9,3,-7,4],[-6,-7,6,-5,7,2,-9,10,9],[4,-7,4,1,9,-10,-9,5,-5],[10,-5,-10,-1,-1,2,10,-4,1],[2,-7,9,5,4,-5,-10,-10,10],[-1,-10,1,6,10,-8,-6,-2,-1]],[[-10,10,-6,-4,-10,3,-6,-2,-9],[-10,4,-3,-10,1,3,2,10,-9],[7,-7,8,6,4,-2,-10,-10,-4],[-5,3,6,-9,1,-10,-10,-4,3],[-4,-9,6,-3,-6,1,5,6,-3],[6,-3,-5,-9,-2,-1,8,4,6],[-9,-8,-4,-6,-8,-9,-7,7,3],[-4,7,7,9,-5,-1,2,-2,6],[1,4,-4,-10,-7,-10,-9,3,8],[-7,-5,9,5,-7,-4,-2,-3,-4],[-1,-8,3,9,2,-1,-1,-9,-1],[2,10,5,-10,-10,-5,-2,1,3]],[[9,10,-3,4,-9,10,-1,-8,-2],[6,-9,-7,-1,1,8,-9,-7,10],[10,-3,7,1,-6,1,-1,1,5],[8,-6,9,-4,-1,-5,-2,5,6],[-1,-1,7,6,-9,9,5,-10,-8],[-7,7,-5,8,-9,-7,6,3,6],[9,7,-10,-4,6,8,-4,8,2],[6,-3,5,-2,-7,-8,5,6,7],[-10,1,-4,-10,3,-2,1,6,-6],[3,6,5,4,3,-1,4,-1,7],[-7,6,5,6,7,-2,-7,-3,7],[-6,5,9,-10,-7,-1,6,3,7]],[[-9,4,6,-9,10,-5,9,8,-1],[-1,-1,1,5,9,7,-6,8,4],[-5,-7,6,-4,3,8,8,-6,10],[-10,-3,2,2,10,-9,5,9,1],[-6,-10,-6,3,-8,2,6,-4,10],[3,-6,-3,7,-9,2,10,4,6],[-8,5,-10,7,-8,7,9,-9,10],[7,1,-2,7,-10,-3,10,-5,-9],[-1,-3,7,6,-7,-10,8,4,5],[-10,-9,-3,7,4,-10,9,1,-2],[-1,6,-3,4,-4,-1,-6,3,-1],[8,10,10,-8,1,10,-10,2,-8]],[[2,8,-10,-7,10,-2,6,9,-5],[-8,-7,-2,2,7,-8,1,-4,-6],[-10,3,-2,-2,-8,-6,9,5,3],[-2,-9,-1,3,7,-4,4,-5,-3],[5,-7,6,5,5,3,9,-5,6],[5,9,-7,-4,-5,9,8,-5,8],[-6,9,2,1,9,10,-1,7,9],[-3,6,-2,9,-10,4,-6,-10,4],[-8,3,-1,5,10,-4,-5,-1,-6],[-7,-4,-9,-4,9,-9,7,-7,7],[5,-2,3,3,-2,10,-9,4,5],[-2,-8,4,-3,7,3,-8,5,3]],[[-5,-7,-3,6,5,5,-3,10,7],[9,4,10,1,6,-7,3,7,8],[8,-10,-5,-10,4,-10,-3,-3,-6],[-6,2,-10,-3,10,4,8,5,2],[4,8,3,9,4,4,-4,6,4],[-4,10,5,-3,5,-2,5,10,-4],[-1,8,-4,7,3,-5,-7,4,-2],[-1,-3,-2,-5,10,2,8,-8,9],[9,1,7,-10,4,4,-4,-4,3],[-3,5,-4,9,10,-8,-9,-7,2],[-8,-10,6,-2,-1,9,-2,-2,8],[-6,8,6,9,5,-8,9,9,10]],[[-3,8,-1,-10,3,-2,8,10,5],[1,3,-9,-3,9,-8,-9,-3,7],[-6,-7,-8,2,6,-3,-7,-9,2],[-1,6,9,9,7,5,-6,-2,9],[-1,-8,-2,1,5,10,-8,4,-3],[10,-1,5,-4,6,-3,5,-6,2],[6,-9,-3,-10,-4,-5,-9,8,-5],[-3,-2,-2,-4,9,-2,9,-4,8],[-9,-8,-5,9,-1,2,-8,2,4],[8,-3,-9,10,2,6,1,2,-10],[6,1,-4,1,9,-5,7,4,-10],[6,1,-4,-10,4,-8,-9,4,10]],[[-4,-2,-6,10,10,-5,5,2,9],[-4,-3,-3,5,-5,-3,-4,6,9],[-5,-7,-3,9,4,-5,-9,6,-9],[3,10,-2,-3,-9,4,-2,9,6],[-4,1,6,2,6,7,6,1,8],[-10,-10,1,-9,5,-4,1,5,5],[9,-7,7,2,6,1,5,-6,-2],[-10,-1,10,-5,-3,-2,-4,-6,-6],[8,6,1,9,-1,-2,-3,-4,7],[-10,-3,-5,-1,-6,1,-10,9,-5],[3,6,-9,7,-1,8,4,-2,-3],[4,5,1,-3,7,6,2,-5,5]],[[7,8,4,-5,6,-7,-4,2,-4],[-7,3,9,-7,-1,9,6,10,3],[-2,4,8,8,4,-3,-5,5,6],[9,5,6,10,10,-8,5,5,-1],[-3,-7,10,-5,-10,-5,4,-10,6],[3,-9,-5,9,-10,-9,7,1,9],[4,6,-4,-2,7,-9,9,-8,-8],[9,2,2,-10,5,5,-3,-8,4],[-2,-2,10,1,-5,10,-1,-1,-8],[-6,3,10,-5,-8,-1,-7,-1,-9],[2,10,8,-1,9,-2,4,-5,-1],[-7,-5,-9,9,9,-5,-1,-8,-4]],[[-1,3,-8,6,5,1,4,2,4],[8,-7,3,5,1,-7,8,-2,7],[-10,-4,-4,-10,-4,2,4,-9,-6],[5,8,-5,-2,2,-5,-6,6,9],[4,10,4,3,-1,10,-9,-9,10],[-4,8,-8,7,-10,-3,-2,-10,4],[6,1,4,-7,6,-1,-1,-1,-1],[1,-3,2,2,5,-10,-6,-10,6],[-8,-8,8,-5,4,-7,6,-6,1],[-7,4,4,10,-10,9,-4,-8,3],[4,6,-5,5,-3,10,-1,-6,8],[-10,-2,-9,-8,-7,-7,-4,-2,9]],[[3,9,-6,-9,-8,3,7,-4,-6],[9,8,-2,-10,-6,-7,10,-10,6],[-9,-3,10,-5,-1,-7,4,3,-3],[6,1,6,6,10,6,-2,-2,4],[-2,10,-7,-2,-2,2,-10,-9,-10],[-3,-2,2,10,2,8,-4,2,4],[9,-10,-1,-6,-1,-3,3,-7,8],[2,-3,10,10,-2,7,2,3,7],[-6,-6,10,-8,-7,8,8,5,-4],[-3,-8,7,-2,-9,2,-1,-1,-5],[-8,3,-10,1,1,-9,1,-9,6],[2,4,-5,1,3,2,-4,3,-6]],[[-10,-10,4,-8,-3,4,3,-9,9],[-3,7,4,-6,-10,6,1,-2,9],[-2,1,-1,5,10,1,8,-2,10],[6,4,2,-1,-6,-5,1,1,3],[4,6,-3,-7,-10,10,5,-5,-4],[-1,-9,-10,-1,2,-2,5,-4,-1],[-9,2,7,9,-9,-5,1,-10,2],[-7,-10,6,-5,-9,2,-7,-8,10],[10,1,4,-4,1,-9,5,-5,-4],[-8,-2,7,-7,-4,-1,2,6,3],[-1,-8,1,5,-1,3,-3,-4,6],[-10,-6,-9,1,-10,-7,8,10,-2]],[[1,-8,-2,-10,10,2,5,-10,-6],[-8,10,-3,-1,-9,-5,3,-2,10],[2,9,-4,-9,-10,-10,9,3,-7],[8,-5,10,-2,10,8,6,-10,3],[5,-2,2,-1,-3,-10,-1,10,-7],[-10,5,-3,-9,-2,-3,2,-6,2],[8,7,-10,-2,7,-10,2,5,9],[-2,-6,-7,9,6,-4,3,6,3],[-9,8,7,-2,10,-8,-7,9,-5],[2,-4,9,-9,-9,-2,-10,9,9],[-7,-9,-8,10,-9,9,-3,-8,-1],[6,9,6,10,-4,-5,-7,2,3]],[[-4,7,10,-7,-9,4,4,-2,5],[-4,-6,-6,-1,-5,-8,5,1,-5],[-10,-8,7,-6,1,-4,8,3,-8],[4,3,-4,-10,-3,1,-6,10,9],[-5,10,5,-2,6,6,6,5,1],[-10,-8,-4,3,-1,3,2,-5,1],[10,2,1,-2,-5,-4,-8,-9,-7],[5,-2,-3,-6,-2,1,10,1,7],[-7,-6,-8,1,5,2,3,-4,-6],[4,3,-3,-3,6,-3,3,4,4],[-2,-7,7,2,7,-8,2,4,-8],[-2,8,-3,4,2,-7,-1,-1,7]],[[8,-9,5,9,-7,-5,-2,8,-6],[2,8,10,-10,6,9,-1,-3,3],[8,-7,7,-2,8,8,10,6,3],[5,6,7,5,2,8,7,-5,1],[-6,-10,2,10,7,-1,-5,6,-8],[-7,-10,-2,-2,4,-5,1,7,-8],[9,-2,8,-9,-10,2,-7,-2,8],[7,6,9,-6,3,-10,-2,-8,7],[8,7,-10,-7,-10,6,-4,9,-4],[-1,7,-4,4,-7,-10,8,-10,-7],[8,9,-4,7,8,10,-2,-2,5],[-7,-4,1,1,-4,-8,1,-7,-5]]], dtype = "uint64")#candidate|631|(15, 12, 9)|const|uint64
var_632 = relay.var("var_632", dtype = "uint64", shape = (15, 12, 9))#candidate|632|(15, 12, 9)|var|uint64
bop_633 = relay.logical_xor(const_631.astype('uint64'), relay.reshape(var_632.astype('uint64'), relay.shape_of(const_631))) # shape=(15, 12, 9)
output = bop_633
output2 = bop_633
func_642 = relay.Function([var_632,], output)
mod['func_642'] = func_642
mod = relay.transform.InferType()(mod)
var_643 = relay.var("var_643", dtype = "uint64", shape = (15, 12, 9))#candidate|643|(15, 12, 9)|var|uint64
output = func_642(var_643)
func_644 = relay.Function([var_643], output)
mutated_mod['func_644'] = func_644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_779 = relay.var("var_779", dtype = "float64", shape = (2, 13, 3))#candidate|779|(2, 13, 3)|var|float64
uop_780 = relay.rsqrt(var_779.astype('float64')) # shape=(2, 13, 3)
output = relay.Tuple([uop_780,])
output2 = relay.Tuple([uop_780,])
func_808 = relay.Function([var_779,], output)
mod['func_808'] = func_808
mod = relay.transform.InferType()(mod)
mutated_mod['func_808'] = func_808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_809 = relay.var("var_809", dtype = "float64", shape = (2, 13, 3))#candidate|809|(2, 13, 3)|var|float64
func_808_call = mutated_mod.get_global_var('func_808')
call_810 = func_808_call(var_809)
output = call_810
func_811 = relay.Function([var_809], output)
mutated_mod['func_811'] = func_811
mutated_mod = relay.transform.InferType()(mutated_mod)
const_942 = relay.constdtype = "float64")#candidate|942|(12, 13, 11)|const|float64
uop_943 = relay.atanh(const_942.astype('float64')) # shape=(12, 13, 11)
bop_948 = relay.greater(uop_943.astype('bool'), relay.reshape(const_942.astype('bool'), relay.shape_of(uop_943))) # shape=(12, 13, 11)
func_642_call = mod.get_global_var('func_642')
func_644_call = mutated_mod.get_global_var('func_644')
var_963 = relay.var("var_963", dtype = "uint64", shape = (1620,))#candidate|963|(1620,)|var|uint64
call_962 = func_642_call(relay.reshape(var_963.astype('uint64'), [15, 12, 9]))
call_964 = func_642_call(relay.reshape(var_963.astype('uint64'), [15, 12, 9]))
output = relay.Tuple([bop_948,call_962,var_963,])
output2 = relay.Tuple([bop_948,call_964,var_963,])
func_968 = relay.Function([var_963,], output)
mod['func_968'] = func_968
mod = relay.transform.InferType()(mod)
var_969 = relay.var("var_969", dtype = "uint64", shape = (1620,))#candidate|969|(1620,)|var|uint64
output = func_968(var_969)
func_970 = relay.Function([var_969], output)
mutated_mod['func_970'] = func_970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1080 = relay.var("var_1080", dtype = "uint32", shape = ())#candidate|1080|()|var|uint32
var_1081 = relay.var("var_1081", dtype = "uint32", shape = (1, 1, 15))#candidate|1081|(1, 1, 15)|var|uint32
bop_1082 = relay.multiply(var_1080.astype('uint32'), var_1081.astype('uint32')) # shape=(1, 1, 15)
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
const_1086 = relay.const([-6,10,9,-6,-8,6,7,6,7,5,8,-7,10,-3,7,-8,8,-2,-5,8,3,-5,4,-8,7,-4,-9,-5,-2,8,6,-6,-7,1,-5,7,-7,-8,-8,-1,-2,-9,5,2,4,-9,-7,5,3,5,-7,8,5,-4,-4,7,9,7,-1,1,8,-4,-7,8,-6,-8,3,6,3,2,-4,-3,4,5,10,9,-8,-2,3,-4,3,2,9,-6,8,2,-7,-5,9,-6,-5,-7,-9,7,1,3,-5,-1,-4,1,-5,6,-1,2,-10,-7,3,-8,-6,-8,-10,10,5,2,-8,-3,-5,4,-9,-4,-5,4,8,4,-10,-9,-1,-6,2,-8,-8,-5,2,-8,8,-10,4,2,-7,-6,-7,7,-7,6,10,2,-7,-10,-8,9], dtype = "int32")#candidate|1086|(150,)|const|int32
var_1087 = relay.var("var_1087", dtype = "int32", shape = (1200,))#candidate|1087|(1200,)|var|int32
call_1085 = relay.TupleGetItem(func_188_call(relay.reshape(const_1086.astype('int32'), [10, 15, 1]), relay.reshape(var_1087.astype('int32'), [10, 15, 8]), ), 2)
call_1088 = relay.TupleGetItem(func_191_call(relay.reshape(const_1086.astype('int32'), [10, 15, 1]), relay.reshape(var_1087.astype('int32'), [10, 15, 8]), ), 2)
uop_1089 = relay.sigmoid(call_1085.astype('float32')) # shape=(10, 15, 8)
uop_1091 = relay.sigmoid(call_1088.astype('float32')) # shape=(10, 15, 8)
func_468_call = mod.get_global_var('func_468')
func_470_call = mutated_mod.get_global_var('func_470')
call_1092 = relay.TupleGetItem(func_468_call(relay.reshape(const_1086.astype('int32'), [25, 6])), 4)
call_1093 = relay.TupleGetItem(func_470_call(relay.reshape(const_1086.astype('int32'), [25, 6])), 4)
output = relay.Tuple([bop_1082,const_1086,var_1087,uop_1089,call_1092,])
output2 = relay.Tuple([bop_1082,const_1086,var_1087,uop_1091,call_1093,])
func_1094 = relay.Function([var_1080,var_1081,var_1087,], output)
mod['func_1094'] = func_1094
mod = relay.transform.InferType()(mod)
var_1095 = relay.var("var_1095", dtype = "uint32", shape = ())#candidate|1095|()|var|uint32
var_1096 = relay.var("var_1096", dtype = "uint32", shape = (1, 1, 15))#candidate|1096|(1, 1, 15)|var|uint32
var_1097 = relay.var("var_1097", dtype = "int32", shape = (1200,))#candidate|1097|(1200,)|var|int32
output = func_1094(var_1095,var_1096,var_1097,)
func_1098 = relay.Function([var_1095,var_1096,var_1097,], output)
mutated_mod['func_1098'] = func_1098
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1102 = relay.const([[[-1.053634,9.026679,-5.942087,3.198642,7.631545,-3.590621,-7.337384],[0.245895,1.483192,-0.022534,-2.670974,-6.320502,3.328069,-0.858996],[9.755772,-3.220191,-5.558785,-1.533002,-7.951240,-1.539435,-2.083986],[7.532327,-8.888073,-6.882261,8.481800,2.158562,3.902126,-2.302853],[1.222204,-2.186993,2.975450,9.357795,-1.610907,-8.903677,2.034078],[-2.704098,8.666990,-2.970068,-5.450295,9.366720,9.618310,6.981901],[6.512773,-0.446354,-6.275335,5.205827,7.534551,6.120918,-7.182251],[-7.698208,7.776102,-1.794681,-3.966551,-6.339139,4.390433,2.414210],[-0.753921,-0.551045,-6.230377,7.481740,6.613987,-9.486594,2.250025]],[[-4.205741,-3.341729,7.277074,9.185019,-2.230703,-4.673085,0.503945],[1.374517,4.483178,1.673850,6.642428,-3.922650,8.534159,3.376493],[-9.108171,0.731644,-5.332126,-6.688232,9.650215,9.272872,8.205168],[8.261725,-9.987502,1.688334,-1.230821,7.967733,3.080517,-1.268602],[8.062580,-0.799765,-6.358930,-6.519489,1.295165,-1.141831,-8.769535],[4.397447,-9.056387,-3.882948,0.702544,-1.704787,5.133223,5.643179],[0.935485,4.035506,7.573097,-0.282831,6.627272,-0.467159,1.701276],[-3.619213,7.498346,-2.440872,-2.129213,-0.050924,-5.937245,4.981036],[-8.205888,-5.676242,4.031061,-7.778317,-8.708322,-6.057586,9.368972]]], dtype = "float64")#candidate|1102|(2, 9, 7)|const|float64
uop_1103 = relay.sin(const_1102.astype('float64')) # shape=(2, 9, 7)
output = uop_1103
output2 = uop_1103
func_1117 = relay.Function([], output)
mod['func_1117'] = func_1117
mod = relay.transform.InferType()(mod)
output = func_1117()
func_1118 = relay.Function([], output)
mutated_mod['func_1118'] = func_1118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_1183 = func_1117_call()
call_1184 = func_1117_call()
func_808_call = mod.get_global_var('func_808')
func_811_call = mutated_mod.get_global_var('func_811')
const_1186 = relay.const([-7.525383,-0.800574,9.055206,-8.002202,7.534707,-7.612191,-6.225010,-0.206272,-6.382376,-5.307888,-7.144539,9.478609,-2.046350,2.081195,3.404649,-8.487212,2.035716,2.631402,2.562001,-5.298619,5.814761,8.346041,-7.210606,-7.293821,-3.441444,7.979838,4.005642,-6.288164,-9.387766,2.418569,-3.710203,8.536337,-7.079607,-5.850452,-1.005538,-4.340235,0.137292,-4.369850,4.353193,-3.973871,9.465260,-4.410989,4.144353,-5.845045,7.645424,9.368771,2.038030,7.723602,9.195906,0.022731,-8.623960,-1.614975,-7.617699,5.306674,7.176806,7.298872,3.084540,5.185868,-6.615861,-8.653061,0.130006,-5.748838,-8.152169,6.854239,1.236024,-3.784256,-7.892790,-2.900674,1.474287,6.609854,9.693239,8.737187,-0.387478,0.725668,3.578876,-2.926228,-7.349290,3.065698], dtype = "float64")#candidate|1186|(78,)|const|float64
call_1185 = relay.TupleGetItem(func_808_call(relay.reshape(const_1186.astype('float64'), [2, 13, 3])), 0)
call_1187 = relay.TupleGetItem(func_811_call(relay.reshape(const_1186.astype('float64'), [2, 13, 3])), 0)
output = relay.Tuple([call_1183,call_1185,const_1186,])
output2 = relay.Tuple([call_1184,call_1187,const_1186,])
func_1200 = relay.Function([], output)
mod['func_1200'] = func_1200
mod = relay.transform.InferType()(mod)
output = func_1200()
func_1201 = relay.Function([], output)
mutated_mod['func_1201'] = func_1201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_1284 = func_1117_call()
call_1285 = func_1117_call()
output = relay.Tuple([call_1284,])
output2 = relay.Tuple([call_1285,])
func_1312 = relay.Function([], output)
mod['func_1312'] = func_1312
mod = relay.transform.InferType()(mod)
mutated_mod['func_1312'] = func_1312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1312_call = mutated_mod.get_global_var('func_1312')
call_1313 = func_1312_call()
output = call_1313
func_1314 = relay.Function([], output)
mutated_mod['func_1314'] = func_1314
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1354 = relay.var("var_1354", dtype = "float32", shape = (9, 12, 7))#candidate|1354|(9, 12, 7)|var|float32
uop_1355 = relay.asinh(var_1354.astype('float32')) # shape=(9, 12, 7)
output = relay.Tuple([uop_1355,])
output2 = relay.Tuple([uop_1355,])
func_1366 = relay.Function([var_1354,], output)
mod['func_1366'] = func_1366
mod = relay.transform.InferType()(mod)
mutated_mod['func_1366'] = func_1366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1367 = relay.var("var_1367", dtype = "float32", shape = (9, 12, 7))#candidate|1367|(9, 12, 7)|var|float32
func_1366_call = mutated_mod.get_global_var('func_1366')
call_1368 = func_1366_call(var_1367)
output = call_1368
func_1369 = relay.Function([var_1367], output)
mutated_mod['func_1369'] = func_1369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_1414 = func_1117_call()
call_1415 = func_1117_call()
func_968_call = mod.get_global_var('func_968')
func_970_call = mutated_mod.get_global_var('func_970')
var_1418 = relay.var("var_1418", dtype = "uint64", shape = (1620,))#candidate|1418|(1620,)|var|uint64
call_1417 = relay.TupleGetItem(func_968_call(relay.reshape(var_1418.astype('uint64'), [1620,])), 1)
call_1419 = relay.TupleGetItem(func_970_call(relay.reshape(var_1418.astype('uint64'), [1620,])), 1)
func_968_call = mod.get_global_var('func_968')
func_970_call = mutated_mod.get_global_var('func_970')
call_1420 = relay.TupleGetItem(func_968_call(relay.reshape(call_1417.astype('uint64'), [1620,])), 2)
call_1421 = relay.TupleGetItem(func_970_call(relay.reshape(call_1417.astype('uint64'), [1620,])), 2)
uop_1422 = relay.sinh(call_1420.astype('float64')) # shape=(1620,)
uop_1424 = relay.sinh(call_1421.astype('float64')) # shape=(1620,)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_1427 = relay.TupleGetItem(func_1200_call(), 0)
call_1428 = relay.TupleGetItem(func_1201_call(), 0)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_1433 = relay.TupleGetItem(func_1200_call(), 1)
call_1434 = relay.TupleGetItem(func_1201_call(), 1)
bop_1436 = relay.add(call_1427.astype('uint16'), relay.reshape(call_1414.astype('uint16'), relay.shape_of(call_1427))) # shape=(2, 9, 7)
bop_1439 = relay.add(call_1428.astype('uint16'), relay.reshape(call_1415.astype('uint16'), relay.shape_of(call_1428))) # shape=(2, 9, 7)
bop_1451 = relay.logical_xor(uop_1422.astype('uint64'), relay.reshape(call_1420.astype('uint64'), relay.shape_of(uop_1422))) # shape=(1620,)
bop_1454 = relay.logical_xor(uop_1424.astype('uint64'), relay.reshape(call_1421.astype('uint64'), relay.shape_of(uop_1424))) # shape=(1620,)
uop_1473 = relay.cosh(bop_1451.astype('float32')) # shape=(1620,)
uop_1475 = relay.cosh(bop_1454.astype('float32')) # shape=(1620,)
var_1489 = relay.var("var_1489", dtype = "float64", shape = (1620,))#candidate|1489|(1620,)|var|float64
bop_1490 = relay.bitwise_and(uop_1422.astype('uint8'), relay.reshape(var_1489.astype('uint8'), relay.shape_of(uop_1422))) # shape=(1620,)
bop_1493 = relay.bitwise_and(uop_1424.astype('uint8'), relay.reshape(var_1489.astype('uint8'), relay.shape_of(uop_1424))) # shape=(1620,)
func_968_call = mod.get_global_var('func_968')
func_970_call = mutated_mod.get_global_var('func_970')
call_1497 = relay.TupleGetItem(func_968_call(relay.reshape(var_1489.astype('uint64'), [1620,])), 1)
call_1498 = relay.TupleGetItem(func_970_call(relay.reshape(var_1489.astype('uint64'), [1620,])), 1)
uop_1501 = relay.atan(uop_1473.astype('float32')) # shape=(1620,)
uop_1503 = relay.atan(uop_1475.astype('float32')) # shape=(1620,)
output = relay.Tuple([call_1417,var_1418,call_1433,bop_1436,bop_1490,call_1497,uop_1501,])
output2 = relay.Tuple([call_1419,var_1418,call_1434,bop_1439,bop_1493,call_1498,uop_1503,])
func_1507 = relay.Function([var_1418,var_1489,], output)
mod['func_1507'] = func_1507
mod = relay.transform.InferType()(mod)
var_1508 = relay.var("var_1508", dtype = "uint64", shape = (1620,))#candidate|1508|(1620,)|var|uint64
var_1509 = relay.var("var_1509", dtype = "float64", shape = (1620,))#candidate|1509|(1620,)|var|float64
output = func_1507(var_1508,var_1509,)
func_1510 = relay.Function([var_1508,var_1509,], output)
mutated_mod['func_1510'] = func_1510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_1525 = relay.TupleGetItem(func_1200_call(), 2)
call_1526 = relay.TupleGetItem(func_1201_call(), 2)
func_1117_call = mod.get_global_var('func_1117')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_1527 = func_1117_call()
call_1528 = func_1117_call()
func_968_call = mod.get_global_var('func_968')
func_970_call = mutated_mod.get_global_var('func_970')
var_1542 = relay.var("var_1542", dtype = "uint64", shape = (1620,))#candidate|1542|(1620,)|var|uint64
call_1541 = relay.TupleGetItem(func_968_call(relay.reshape(var_1542.astype('uint64'), [1620,])), 2)
call_1543 = relay.TupleGetItem(func_970_call(relay.reshape(var_1542.astype('uint64'), [1620,])), 2)
output = relay.Tuple([call_1525,call_1527,call_1541,var_1542,])
output2 = relay.Tuple([call_1526,call_1528,call_1543,var_1542,])
func_1550 = relay.Function([var_1542,], output)
mod['func_1550'] = func_1550
mod = relay.transform.InferType()(mod)
var_1551 = relay.var("var_1551", dtype = "uint64", shape = (1620,))#candidate|1551|(1620,)|var|uint64
output = func_1550(var_1551)
func_1552 = relay.Function([var_1551], output)
mutated_mod['func_1552'] = func_1552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_1562 = func_1117_call()
call_1563 = func_1117_call()
output = call_1562
output2 = call_1563
func_1578 = relay.Function([], output)
mod['func_1578'] = func_1578
mod = relay.transform.InferType()(mod)
mutated_mod['func_1578'] = func_1578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mutated_mod.get_global_var('func_1578')
call_1579 = func_1578_call()
output = call_1579
func_1580 = relay.Function([], output)
mutated_mod['func_1580'] = func_1580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mod.get_global_var('func_1578')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_1614 = func_1578_call()
call_1615 = func_1578_call()
var_1620 = relay.var("var_1620", dtype = "float64", shape = (2, 9, 7))#candidate|1620|(2, 9, 7)|var|float64
bop_1621 = relay.minimum(call_1614.astype('uint32'), relay.reshape(var_1620.astype('uint32'), relay.shape_of(call_1614))) # shape=(2, 9, 7)
bop_1624 = relay.minimum(call_1615.astype('uint32'), relay.reshape(var_1620.astype('uint32'), relay.shape_of(call_1615))) # shape=(2, 9, 7)
var_1645 = relay.var("var_1645", dtype = "float64", shape = (2, 9, 7))#candidate|1645|(2, 9, 7)|var|float64
bop_1646 = relay.floor_mod(var_1620.astype('float64'), relay.reshape(var_1645.astype('float64'), relay.shape_of(var_1620))) # shape=(2, 9, 7)
output = relay.Tuple([bop_1621,bop_1646,])
output2 = relay.Tuple([bop_1624,bop_1646,])
func_1649 = relay.Function([var_1620,var_1645,], output)
mod['func_1649'] = func_1649
mod = relay.transform.InferType()(mod)
var_1650 = relay.var("var_1650", dtype = "float64", shape = (2, 9, 7))#candidate|1650|(2, 9, 7)|var|float64
var_1651 = relay.var("var_1651", dtype = "float64", shape = (2, 9, 7))#candidate|1651|(2, 9, 7)|var|float64
output = func_1649(var_1650,var_1651,)
func_1652 = relay.Function([var_1650,var_1651,], output)
mutated_mod['func_1652'] = func_1652
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1654 = relay.var("var_1654", dtype = "int64", shape = ())#candidate|1654|()|var|int64
var_1655 = relay.var("var_1655", dtype = "int64", shape = (12, 2, 10))#candidate|1655|(12, 2, 10)|var|int64
bop_1656 = relay.greater_equal(var_1654.astype('bool'), var_1655.astype('bool')) # shape=(12, 2, 10)
func_1550_call = mod.get_global_var('func_1550')
func_1552_call = mutated_mod.get_global_var('func_1552')
const_1670 = relay.const([-5,7,1,-7,-2,-6,-2,-10,-7,-1,4,-2,-2,-8,-4,4,5,3,1,6,8,-8,8,-1,3,-3,9,-9,-10,9,7,5,7,9,-10,9,4,2,-7,6,4,-8,-5,-4,-5,10,8,-5,5,-1,6,7,-9,-3,2,6,-1,9,-3,-10,7,10,9,-8,-9,1,1,7,-7,-6,-2,-4,-9,8,5,-10,-9,-8,8,-3,7,2,2,-7,2,9,-8,-6,6,-10,-3,3,-3,-10,-7,7,9,-3,1,-3,3,-6,4,9,7,3,2,-1,9,7,6,-1,5,7,3,-10,1,9,-9,9,8,5,-10,-6,-10,6,-6,3,2,-1,10,-1,-9,-10,9,-6,1,-6,8,1,-4,5,3,-5,-8,10,-8,-10,-3,5,10,-10,3,-6,-9,-10,-4,-5,3,-2,6,8,4,1,10,9,7,5,-5,-2,7,-7,9,8,2,2,3,-2,-9,4,8,3,5,7,8,6,3,4,5,-5,-3,7,-8,5,-9,-1,4,-2,10,1,-1,3,2,8,-1,-6,-4,10,-9,1,4,7,-6,9,10,-3,-8,-5,-4,-8,9,-9,7,5,4,8,-10,8,-5,1,6,6,-10,6,5,-9,10,-5,7,6,8,9,-8,3,3,-1,-7,7,-10,-1,7,-9,-8,-5,-6,8,5,-3,6,10,-9,-2,-8,4,-10,-2,5,-5,6,1,2,-6,-9,-2,5,6,-1,-10,5,-8,9,3,9,-8,-7,5,-8,-6,9,2,10,-10,6,1,-2,-10,8,4,1,-2,-10,-10,9,-7,-6,6,9,-10,-4,10,-9,-6,4,-4,-3,-7,-5,-3,-7,-7,-1,10,7,-7,-10,-6,7,-7,5,10,-10,-2,6,-3,6,-5,-1,7,4,8,10,2,-7,2,2,9,-9,-1,6,5,2,-9,4,10,1,-1,-1,10,-3,1,4,-9,2,-5,2,10,-1,-8,8,-2,-5,10,5,-5,4,-4,-5,-1,-3,-5,8,2,6,-4,-7,3,-9,-7,5,-5,-5,9,-3,6,5,-2,9,-2,-3,9,-3,9,7,10,-7,3,3,-1,2,-4,-1,2,10,4,10,-3,-8,-9,-8,9,4,-7,-3,5,8,-4,6,8,10,1,-7,-5,5,-10,-2,8,10,-5,6,10,-7,-2,8,1,3,-8,-4,-5,-8,4,1,-8,-9,-6,10,8,8,-2,-3,-6,3,-7,6,8,5,6,5,-9,-4,9,2,-5,9,-9,-10,-9,9,-10,7,1,-9,10,-8,8,5,-9,-7,9,4,2,-3,7,-6,6,-6,-7,-1,-10,-9,4,8,-3,8,4,-8,-5,7,2,10,9,3,2,-5,5,-1,-10,-2,5,-2,3,-5,-2,2,-6,-10,-8,-4,-10,-3,5,-6,4,-5,-10,-7,-9,-3,7,-3,-6,9,-9,-8,-4,-6,6,1,1,-8,4,-4,-2,-4,-10,1,1,4,2,10,3,-4,-7,-1,-2,-9,-8,9,-10,6,-7,10,6,-9,5,4,-5,-9,3,9,8,-2,-1,-6,-2,-4,7,1,7,-2,9,-2,-6,5,10,-7,-3,7,-7,-8,-3,-2,-6,6,2,10,5,4,-3,-3,4,-3,6,-1,-3,6,1,8,10,5,-1,-3,-4,-10,-7,-2,-10,8,-5,2,7,-5,7,-8,-5,-1,5,-5,-3,8,5,-9,-4,-4,5,6,6,-2,5,2,-2,-8,-8,-8,7,9,7,-10,4,-10,10,2,-7,10,4,-2,6,-7,-5,5,2,-4,3,-10,8,5,5,-7,-2,4,1,-6,8,-3,-8,-4,4,1,-4,2,8,1,5,-6,4,-4,-6,4,-2,6,5,2,10,5,-4,-5,6,-8,3,-9,1,-2,4,10,4,7,8,9,5,-9,4,-3,-9,3,-2,8,6,2,-7,5,10,1,3,3,7,-7,5,9,-1,-5,5,-8,-5,-10,-5,-4,-6,5,6,-5,2,-3,-4,-3,7,9,1,-2,2,-1,-4,3,1,-9,-6,1,8,4,-6,-8,5,2,9,-4,-5,-7,9,9,10,8,-2,-3,-3,-4,-4,-2,2,-4,-8,-1,3,-2,-9,-4,-8,-4,-3,1,-2,5,-5,-4,8,7,8,1,-7,-6,3,-5,4,1,4,3,5,3,-2,-9,9,-10,-6,-10,3,9,-10,9,4,1,-4,-8,-2,-10,-10,-7,-7,-5,8,-5,-3,-9,1,-7,1,-4,4,-3,3,-1,4,-1,4,5,-3,-3,7,1,3,4,8,7,10,-10,-3,7,8,-8,3,-2,-4,-5,8,-10,6,3,3,-7,1,-7,8,-2,9,-9,-5,-1,8,3,-3,-7,8,2,1,6,9,-8,5,-5,2,-1,9,-8,-9,2,-4,1,-10,-5,6,-3,-3,4,-1,-6,-7,1,-10,-2,10,3,3,-7,-10,-4,-4,-3,-7,8,-8,-2,1,10,10,2,-3,5,-10,-1,-5,-9,1,7,-1,-6,9,-3,-1,4,4,-3,-3,-5,3,5,8,-8,-8,-6,9,-7,2,-9,-4,6,8,-2,-10,-6,-2,10,7,-10,-2,-1,2,7,9,-9,-8,-8,6,9,-9,-8,8,-1,-7,-7,9,10,-7,5,5,-6,9,-1,-5,1,-5,-7,7,5,10,5,-1,9,3,3,-8,-1,4,1,2,5,9,10,9,1,9,-7,10,8,1,-9,10,-5,-2,4,-6,-1,9,2,7,5,1,6,-9,-5,6,9,-6,8,9,-1,-1,2,4,-7,-9,-6,-6,4,-9,-8,-4,8,-9,9,-10,-5,-5,-8,10,9,-8,2,9,1,-6,2,-6,-10,-9,-5,9,8,4,2,-3,-5,-10,-7,4,9,-7,-10,1,7,8,9,-1,-3,6,1,8,10,-5,-9,3,9,-6,2,-8,1,3,5,-8,-9,6,4,7,4,-9,3,8,3,-2,5,-7,9,-6,-4,-5,-9,-4,-6,6,-5,10,8,-3,-4,-7,-8,-5,4,1,6,-10,10,-7,-7,6,-8,1,6,9,8,9,2,-2,5,-2,-3,5,6,-10,5,-4,-2,-10,-8,8,-5,-3,3,3,1,9,10,7,-6,-9,-1,-5,-10,1,4,-8,-10,-7,-8,-5,6,3,7,-1,7,7,5,-2,7,-4,7,-9,3,-2,-6,10,-10,-9,-4,-4,-2,-10,-3,3,8,-10,-1,3,-6,-5,-1,-6,9,-2,8,8,6,-1,2,8,3,-6,6,-8,-4,7,-9,10,10,3,-7,2,-10,-10,-6,2,-6,-4,8,9,7,9,10,-4,-1,-2,9,-2,4,-9,2,-10,2,3,7,3,-7,-10,2,-9,2,-3,-3,7,-7,-10,2,9,5,3,1,6,8,5,9,-5,5,-1,3,8,6,10,7,1,1,-5,-2,10,-8,-2,-1,7,6,-6,8,10,-1,4,-10,-1,-1,-3,9,4,10,-6,4,-9,-3,-9,1,5,-10,2,-3,2,1,-8,-1,-2,10,-6,-3,-5,9,7,3,-2,10,2,-8,1,2,-2,4,5,-1,-8,-5,-3,5,6,2,1,-1,9,-9,-9,-10,3,-8,-5,9,-5,4,-1,-6,9,5,3,-4,5,1,-6,8,2,-10,-5,10,-5,8,5,1,3,5,1,-6,-3,-2,-7,-8,6,-8,7,3,-4,8,-4,-5,-4,-2,-10,-3,7,-1,8,7,-7,7,3,-8,10,8,4,10,4,2,2,6,-3,-8,-6,6,-8,-9,-2,9,2,5,-9,-3,9,-6,1,2,6,-4,5,-6,-3,-5,2,9,9,8,-1,2,6,-10,-7,2,4,-6,6,-1,6,5,10,-2,10,-9,-10,-10,7,5,4,-1,-3,-7,-10,-9,-4,6,10,3,7,2,2,-6,-4,5,8,8,5,-2,2,1,6,10,-5,-8,4,10,2,5,8,-5,7,10,9,-7,3,-6,5,-9,-10,5,-4,10,-2,3,-6,-6,10,-7,8,-9,-1,-4,-5,-9,7,-9,-10,9,3,-9,8,5,1,-8,-3,-2,6,-5,6,-3,9,-5,10,-8,-4,5,-4,2,10,6,9,-2,-5,-3,2,-3,-10,7,-2,5,5,10,10,-5,-1,8,1,2,-6,7,3,-8,-10,-2,-1,10,9,-5,9,-1,-3,10,-8,1,9,1,-10,4,-3,4,-5,2,-2,3,7,4,5,-5,8,7,4,7,5,3,8,-4,2,7,10,-9,-5,8,-7,-1,1,-2,5,8,-3,-8,10,3,7,-8,-9,-8,10,-4,-1,3,4,8,5], dtype = "uint64")#candidate|1670|(1620,)|const|uint64
call_1669 = relay.TupleGetItem(func_1550_call(relay.reshape(const_1670.astype('uint64'), [1620,])), 2)
call_1671 = relay.TupleGetItem(func_1552_call(relay.reshape(const_1670.astype('uint64'), [1620,])), 2)
var_1688 = relay.var("var_1688", dtype = "uint64", shape = (1620,))#candidate|1688|(1620,)|var|uint64
bop_1689 = relay.logical_or(call_1669.astype('bool'), relay.reshape(var_1688.astype('bool'), relay.shape_of(call_1669))) # shape=(1620,)
bop_1692 = relay.logical_or(call_1671.astype('bool'), relay.reshape(var_1688.astype('bool'), relay.shape_of(call_1671))) # shape=(1620,)
func_525_call = mod.get_global_var('func_525')
func_528_call = mutated_mod.get_global_var('func_528')
const_1700 = relay.const([-9.647346,-9.664370,3.071667,5.917250,1.510254,2.301624,-7.028229,5.066819,0.865488,-2.817977,3.568654,3.907991,-7.100091,-9.206750,-7.413933,-0.266927,-3.851097,4.811484,2.560209,9.748552,2.395518,4.214924,2.758470,-2.081124,9.021606,1.432228,-8.429501,9.921153,-9.819142,-9.503040,0.406316,5.313943,4.046848,5.116882,2.250464,-8.151087,-2.630364,-4.899834,-7.194858,-1.758490,4.815240,-1.688265,-6.300115,1.509870,7.697656,-2.522409,-3.931801,-2.841023,-7.495390,-4.255885,-0.142553,-9.078426,8.772474,-6.035858,5.843400,5.458200,-6.887408,-2.960323,4.419234,5.728703,-2.565348,-1.951996,-2.566589,-2.693996,-6.273771,-0.371572,7.159558,7.721997,-8.810973,9.931314,-7.748664,-4.818732,-5.478130,-4.329818,-5.426289,9.301567,8.619726,-1.969073,-3.759424,-1.012303,6.802912,-7.671115,9.176240,5.740881,9.611147,1.266887,8.847776,8.819146,8.211109,-8.068674,2.638515,-5.845451,0.498695,-8.287852,9.540044,-3.452141,-1.126121,-9.663453,1.036923,7.818839,-6.323748,-6.805321,-6.960821,2.550972,6.550753,-3.119340,8.027345,2.496522,2.007368,8.362867,-1.382882,3.699265,-5.844702,-9.310471,-6.750654,-5.501723,9.721738,-5.776510,-0.297332,7.106084,2.885523,1.590921,-7.542535,0.547211,-5.282664,-9.543987,8.994203,2.668581,3.188556,6.366337,3.407141,-8.554201,-4.147246,6.428078,1.126145,3.355018,-8.682926,5.151685,4.447878,-6.780376,7.538261,6.024330,-7.249352,-7.816876,-0.673426,8.070212,-3.298010,-1.395093,9.724740,9.639193,-6.427512,5.955997,2.967098,6.466251,-9.883099,3.695272,7.719098,-6.008650,9.018270,1.202516,-6.534922,-2.365589,2.625608,5.975845,-9.996265,0.497744,8.042984,7.481276,3.140535,-1.852546,-1.805675,-3.966249,-4.553961,5.974013,8.625839,7.050477,-9.093803,-9.504275,5.024332,-7.541022,4.269395,-7.884975,-6.863718,3.811771,9.736134,5.781109,2.642848,0.491066,-3.888570,-4.350836,9.981143,6.081905,5.997145,8.331698,-9.722108,-0.991525,1.962748,-6.775828,-5.519512,-1.436367,1.718385,4.251734,3.338033,-4.566959,4.013563,8.274949,3.961242,-2.075001,7.160945,5.823440,1.194968,2.284527,-1.057332,6.443721,2.547067,-9.858212,6.775649,-5.497136,-7.680545,6.140198,8.640289,9.367100,6.880650,3.262001,0.148372,-5.854271,-8.677149,-9.050510,-1.807449,4.736364,1.195690,-5.358880,5.629711,0.792762,-1.491027,8.528786,8.451315,-7.216352,9.205254,9.211977,-3.348757,6.178287,8.045059,6.147750,9.484177,-4.846871,6.151889,-0.682072,1.876387,-7.071886,-0.719464,7.917766,-3.472421,-5.505509,1.432655,5.553697,-8.538728,-7.564275,-7.229975,6.424057,-7.975354,-6.488453,-3.891387,-1.299686,-7.941081,4.219978,-6.671114,-9.837266,-4.882673,-6.984296,8.531962,7.818555,0.388073,2.879905,-5.639956,0.330514,-2.632731,-0.593919,-3.623932,-7.927057,5.718720,0.650283,-5.911942,1.333284,8.786791,-8.612840,6.976170,-1.733766,0.493872,-0.498465,-5.735696,-0.707669,9.787078,1.860033,9.496080,-9.326474,-9.012665,1.369543,6.397201,0.487935,-9.204353,7.700699,-6.205447,-6.015680,-1.674594,3.775447,7.058744,3.213886,-8.967577,-4.132486,2.972841,-1.991296,4.606174,-0.700170,-1.892991,7.518767,-5.372610,-9.660013,-2.865348,-3.416668,7.265372,3.918835,-5.736607,5.152593,8.571320,-6.856497,-4.929242,-7.208321,-1.859109,6.074889,6.298924,-7.773738,9.409239,-5.150104,8.672216,-1.414460,-9.485100,4.439350,1.224872,8.017934,9.915758,0.100625,-1.265473,9.651393,-4.409276,-6.609108,2.836825,5.605064,9.049014,-9.253034,8.786066,-0.112349,-9.912098,-9.194052,-7.929862,-6.451923,1.334415,-2.418017,-5.326857,9.003995,-0.352897,-2.048605,-1.723534,-0.682176,7.370512,-8.848528,-2.047994,-0.593775,0.474647,-9.241478,-3.933739,7.202640,-1.210641,2.653797,2.310599,7.138472,-4.081500,5.339648,-7.173901,9.408426,-3.975857,-6.039115,-7.485870,6.494782,0.975439,3.584525,-3.717794,0.108671,-3.973213,6.758445,5.659527,5.651923,-6.609732,-7.752637,2.181893,-5.489031,-7.758617,-8.335365,2.062166,-1.136425,7.123051,-3.760620,-7.305630,-6.298553,4.938577,-8.811306,-9.762481,-7.258102,-4.665819,1.363314,-0.037432,6.682547,-3.034160,7.489122,0.046367,-0.173818,-6.506106,-0.734663,8.061507,1.389633,6.727212,4.474097,-6.652421,-2.305232,2.471705,-7.477250,-8.644950,-6.800843,0.324151,-3.656902,8.474309,7.374851,-0.275964,-3.073724,-1.849670,-4.422138,9.477231,4.348748,9.445327,-5.040507,-3.731676,1.123164,-2.856990,0.882451,7.688828,-4.946523,7.682171,-9.453457,3.866282,5.071031,7.662522,8.820345,9.099913,-2.893795,4.797191,0.882042,0.878588,-7.690608,-1.127019,9.240319,4.248465,-3.790510,9.045316,-6.644941,4.409576,-4.743409,2.693296,5.672193,-8.807110,-9.591713,-7.888804,3.536703,-2.487323,1.244321,-1.884559,-5.905485,-4.070086,-3.081696,-4.608192,4.566366,-6.796543,-0.514722,3.748988,-8.481859,4.550969,4.686517,7.615530,2.820561,-0.431380,-5.094139,5.911205,0.676096,-2.333113,4.480148,-3.911176,-3.167803,-5.195735,0.828337,3.933727,9.832310,-3.296823,-0.473436,-2.248597,3.849144,1.543842,7.084365,-8.957861,-3.909943,-2.055680,3.181209,-6.110121,7.100778,-1.743863,1.732832,-4.588711,-8.910220,6.277991,-3.577981,-6.103646,6.159171,-4.120279,-5.306040,1.582109,4.765139,-7.795303,-0.395881,-3.481817,2.683121,-8.376825,-9.618494,-3.992061,2.967504,-0.921349,3.745708,8.678162,-1.364374,6.228354,7.651081,4.955212,-4.285721,1.251307,1.039896,-8.050906,2.176100,1.045868,3.831617,-3.829021,1.070449,2.585925,-2.955252,9.583402,-1.991592,0.279470,0.942621,-2.267827,1.804725,1.693911,2.362198,3.028421,-7.818256,5.801606,-9.256037,4.677584,-7.379780,-6.665330,9.533929,6.314568,-1.154040,2.250617,7.484544,0.368080,-4.646970,7.314180,-9.998843,-7.839292,6.023364,5.986605,5.982135,-7.637404,4.903770,-4.004466,-5.335744,-3.698444,0.374363,9.882090,8.057673,6.849318,7.987442,3.301396,1.741502,-5.303810,4.352705,8.119570,-2.258135,-3.867053,-9.583630,1.961480,-3.566931,-8.281156,7.566181,6.367323,-9.096382,-3.546739,0.965436,-8.137310,9.679837,-4.403924,-7.138598,-5.967167,9.110845,-7.139199,3.826418,-3.833913,6.331128,5.920342,-9.707865,0.510134,9.538656,-3.928589,0.762169,-7.844617,-1.693201,-7.562682,-0.079449,2.139453,2.313920,9.045873,3.446876,6.913536,-0.904152,-4.335572,4.480224,-5.181545,4.069600,5.433153,0.590068,-8.382715,-9.330383,-6.534585,2.457800,-3.154600,6.515300,9.494378,-7.027778,8.226903,-1.339818,2.436132,1.761408,-8.203828,9.090151,5.759043,4.338079,-2.940597,-5.923210,-0.953306,-8.096068,0.608054,4.752843,1.484345,4.195563,-8.017709,-7.383085,8.437491,2.093026,-2.400563,6.048796,8.375653,7.465250,2.495022,-4.775005,0.478865,-4.121335,-1.670652,-9.297829,2.039458,-1.419902,8.553381,-4.534080,-7.245581,-6.144534,-5.163027,3.106577,2.856861,5.711735,-5.175259,-1.144808,-8.553342,-4.553952,-9.181851,-6.921827,-4.559422,-0.020611,1.709755,-6.854864,-5.046097,2.595713,1.700781,3.312513,8.447388,9.964641,-8.068504,-6.311895,-3.819108,-1.704805,1.032420,8.718427,8.689160,5.847940,-8.161541,8.518209,-4.244893,3.910194,5.350017,-4.541888,4.340014,-3.038374,-9.807746,-7.415167,-5.529956,6.264089,-3.037237,9.320933,-3.462788,-5.532702,7.169694,-6.315272,-6.681591,5.486764,-0.227522,0.008090,0.972892,5.012490,-2.707703,-4.431010,-8.425443,-0.525441,-8.554286,8.100143,-6.731121,5.899127,1.140904,3.246652,5.254211,1.698697,8.119719,8.807053,-2.767804,-4.168848,1.303199,1.282434,-0.728247,-1.602170,-9.430501,-7.464396,3.345930,-0.269455,3.495384,3.790522,-3.699138,-5.450259,3.098570,-1.313328,-4.812240,-7.693231,6.191690,-4.299864,6.406044,5.004360,-3.060675,-6.213772,5.342473,-5.283475,-4.729543,-1.651116,-4.940934,-7.350935,-9.034690,8.398960,2.603788,-6.481377,-8.350250,0.572509,6.998836,1.334055,-0.780000,-4.109258,-3.019590,-2.267699,-4.651986,8.066164,4.380598,-5.393121,-9.241338,-5.473198,9.644715,-9.903800,4.740899,2.036554,-7.485713,-3.250578,-1.493668,9.515584,2.635201,9.436156,-7.281006,-0.310578,4.209270,8.727145,3.417137,5.375241,0.240470,-1.539790,1.505702,1.125226,-5.681356,-7.842966,-3.261762,6.441687,2.919677,1.124669,0.535010,2.738237,-0.653114,-6.332971,3.696577,-5.459597,7.937147,1.801679,-4.065353,2.233634,4.729430,2.194874,2.540406,0.661327,-5.352769,-4.882300,5.336541,-1.537070,-1.316384,9.349530,-9.200731,-2.073852,-4.430309,1.368272,5.040939,8.258186,-7.110566,-3.102890,9.551853,9.599012,1.255702,3.054414,9.184323,-1.809952,-2.510223,9.045557,-5.870348,-0.509088,-5.093521,2.983838,-1.446779,-7.884984,-9.246222,-4.970420,-3.250028,9.675197,3.136937,-4.158948,-2.571208,8.686760,-1.293937,7.537742,-4.133490,7.067321,7.547777,-8.953223,5.577231,0.843882,-6.805188,7.785795,9.655271,-4.389068,8.089676,6.391731,8.427422,-8.799210,-1.640474,-1.447236,-5.582285,2.731846,9.312999,1.532258,-5.180095,-3.439437,2.547427,5.971989,-3.016380,2.691330,0.575716,0.136460,9.108012,-8.778291,5.969946,0.872629,2.514468,-5.162451,-2.317878,1.611577,-6.141315,8.100671,-3.418843,-1.806681,-5.310863,-5.903709,-7.014551,0.824100,-2.443787,7.343281,-0.156819,7.735845,3.069795,-5.785147,2.155550,-4.322386,5.332898,6.800067,7.800942,-5.684168,-6.570344,8.405224,-4.126206,-9.930712,-0.035103,0.064447,-7.621595,-4.155568,-8.552409,-6.650541,7.107994,8.778334,-7.968135,-3.358636,-5.274026,-3.939026,8.268951,6.601604,-9.861848,-0.218365,-5.895978,6.780697,-7.684291,-7.888820,3.508889,0.412878,-5.968949,2.302782,0.008216,-3.556655,0.198601,-1.739437,-6.274752,-3.741894,-6.684942,3.565449,-8.174071,4.885271,7.819794,5.548142,-6.624960,2.868788,6.657927,-8.228111,-0.502658,-2.796388,0.553180,-1.079791,2.843251,-8.877584,-5.438066,-8.276544,-5.099715,5.753347,2.315534,-7.405973,5.652784,-6.346912,3.087170,-9.125121,3.188723,8.090581,2.505007,-1.618388,-4.368729,-3.752574,8.410719,-8.597394,5.925172,6.695714,-7.838349,-4.699548,5.217931,1.231855,3.085338,-7.670168,-3.552412,1.188378,9.129661,-3.677193,-7.127039,-6.662657,6.099129,-8.684278,1.188739,-8.502195,2.792657,4.594689,6.467529,4.929772,-2.269651,-9.170338,6.536659,6.143561,6.677575,7.959417,-3.859774,6.805134,-7.096218,-3.056772,9.576174,0.072513,-8.948714,3.101167,3.300035,-4.130273,-6.467349,1.555117,7.603739,9.715365,-7.460969,-1.959182,-6.798325,9.706452,2.287168,-5.260418,-7.442912,-8.934183,1.681791,-3.897023,-3.297902,-1.027075,5.862404,2.417215,-5.819324,-8.512990,7.806123,-1.937865,-2.891479,-5.979062,2.931280,8.514653,-0.302585,-2.339365,4.444367,7.327878,-7.068783,7.648591,9.016783,-1.391021,1.775431,-9.628491,6.549044,-9.299634,-2.745946,-8.465750,-9.432795,7.068482,4.706926,-8.378949,0.610231,-4.497233,5.719246,2.566514,-3.630864,2.584561,-6.636553,-7.670982,-0.311726,-2.298112,0.578437,-6.637531,-3.137256,1.715234,-5.741396,-9.475600,7.372289,9.361070,-2.670433,9.749560,-0.723728,-3.407162,-0.792766,-7.799861,-8.557683,-8.475257,0.129916,9.006859,-5.444703,8.146506,-7.268257,-3.340185,8.797476,-4.822023,2.972561,-4.414765,-2.165941,-7.157777,-6.674179,1.732409,1.722183,-2.277988,3.839828,-5.618336,-3.959971,-6.608950,-4.067294,-8.981242,-6.681134,4.292632,-9.507579,4.128421,0.150139,-1.663888,-6.908191,-4.924151,4.294940,0.547541,-2.498585,-8.261478,5.014382,6.091771,-2.733284,0.334617,-5.154373,-7.497006,4.049625,-2.266516,0.984594,-8.927780,-9.696170,-8.707269,6.680305,-3.508256,0.590859,1.876071,5.629806,-6.892110,-0.716233,-9.204309,9.573692,-6.776038,-6.027057,6.744699,5.326946,-0.063380,-2.117586,7.371300,-1.475598,0.220004,-1.460662,-3.774161,2.624896,6.128426,6.689546,-5.563256,-1.927838,5.968348,9.277122,7.972300,-7.376854,9.088563,-0.735629,-0.519380,-6.244384,-9.982593,-0.156991,2.546531,-7.575401,-1.492550,-7.322940,-8.382883,9.358098,-5.551912,-0.540284,9.288209,6.130967,5.467037,8.180872,-1.235323,2.195335,-8.909016,6.079035,2.063395,5.836106,7.206621,-1.577521,-1.253384,6.790829,5.079706,-5.224981,-2.686785,8.961977,6.894711,-4.088176,-1.641520,0.768572,5.173658,-3.131804,-1.494873,-1.116975,-0.376155,2.833309,-7.395750,1.400956,-2.124136,-2.480753,1.593256,-8.141742,-7.772205,-0.153381,-4.887824,-9.422628,-4.280988,-0.741589,-1.094660,1.049951,5.880909,5.330004,0.091138,5.074360,6.930130,3.689598,6.606786,5.028861,-6.897063,9.498311,6.625021,-0.525573,-2.846786,-8.293006,-7.914416,3.331686,-2.698827,1.167599,6.739286,3.548674,1.559007,1.301853,-8.588033,-2.958933,-2.949139,5.692760,6.832123,-2.961365,-0.840554,-9.164134,-9.182100,5.290977,5.135575,-7.372079,4.905637,5.860651,-6.580097,-3.862267,8.607644,8.406999,-3.114695,-6.188269,8.925789,2.819396,4.905493,-8.602314,-8.320115,3.959701,-3.986793,-6.826272,0.606100,-4.588102,7.925695,7.275608,-6.731667,-0.880965,6.838357,-9.419778,1.272503,8.071010,-7.723563,-2.419598,9.157824,-9.133416,-6.942550,1.158242,-3.772785,4.533729,-6.018267,-0.067552,-0.996701,5.250286,4.974776,-2.516319,-1.677858,-7.109929,8.056946,1.690170,-4.064953,-2.694787,-9.708763,-5.128735,-4.774481,-5.469245,-9.962902,4.942621,-4.335324,6.353179,-0.703998,-5.781783,0.919022,0.363190,-6.448025,6.400540,-6.978887,1.472362,5.257328,1.203641,0.521381,1.126923,5.338091,-9.243025,2.840621,7.445468,1.423736,-9.613427,-1.530628,8.885199,-1.806999,3.093954,2.139622,-7.364606,4.172854,-3.067843,1.273216,-9.763048,-0.073060,-4.495488,-2.173493,7.390536,-9.896656,-9.063189,-1.130964,7.573576,-8.844150,2.019166,9.972982,4.516791,-6.222630,0.510142,1.851157,-7.269909,3.731508,7.987334,-6.227627,5.277537,3.689542,-3.881373,-5.973949,-4.083576,-5.014648,-9.763234,1.711035,-8.518414,2.346864,-8.025030,-2.054641,-8.789875,9.434574,5.327619,-2.600866,-3.686813,2.368295,8.154187,-2.404382,-2.035860,-0.725301,-1.798767,-6.158023,7.757639,4.005624,-7.444574,-7.618905,6.423002,4.041170,6.431701,4.225892,6.373825,-8.233385,-7.964314,-8.596048,-2.459680,9.963118,1.264071,4.277250,1.059154,-4.776986,-4.539504,-0.470015,-3.103073,9.442506,-8.057630,-5.834574,9.711294,-0.084442,5.640987,-8.489477,3.219444,4.166088,-4.985836,5.438159,5.022945,3.702751,-1.152059,3.017662,8.177962,6.504426,7.610365,0.551831,-3.060489,8.603451,0.285300,0.992247,4.834592,1.602252,-0.283574,-2.869160,-1.539127,4.904895,9.376605,3.812597,4.319884,-0.887305,-5.040160,3.603985,-8.293232,9.933013,6.670042,-2.723288,0.653579,-2.244622,3.040481,8.654082,-1.693968,-7.025599,2.500052,3.363381,-8.331943,0.275409,4.982925,-1.979078,9.101238,8.670131,-4.509328,-1.545269,4.489108,3.961749,6.340733,-8.848188,-6.299855,6.287953,9.287214,-6.653787,9.578096,-3.808897,8.965388,-5.369146,-5.062569,6.859843,0.010004,-2.358972,-5.425862,8.054076,-7.537136,1.988470,8.937533,-4.181342,2.722546,-9.939399,6.159884,-7.696895,8.247687,6.169712,-9.911936,3.541667,-8.109502,8.555586,3.518977,-9.678600,-4.685752,-7.874814,2.187520,-1.638373,-3.234091,4.996770,-6.278708,-5.736652,-7.320609,9.889385,-7.169904,-3.459143,7.674108,0.785844,3.993457,-5.609057,2.097658,0.884143,-4.575027,-7.716192,-0.659008,-5.160609,1.217063,6.279584,-3.655333,-1.171219,2.600985,-2.215092,-1.544295,1.272616,3.493717,-5.644505,9.107472,1.820909,5.869146,-6.180446,0.789990,-1.547727,7.863313,-8.250734,5.492934,-0.572456,-7.098422,0.564110,-0.911204,-4.887378,-4.022489,-2.123468,-2.382429,2.431448,7.204087,0.988489,-8.083697,2.166308,1.338159,-7.890798,7.147565,0.280877,3.576808,-9.207538,-8.248840,7.025653,1.862652,-9.568165,-9.576489,-9.925954,3.914317,-2.858281,8.520928,6.705613,-8.992479,7.925229,-5.507654,4.778975,7.372955,2.979887,-2.075595,8.690928,-6.993599,7.971879,4.322153,2.467659,6.729917,4.867677,7.600257,-7.890043,-1.124408,7.564574,-8.604008,-0.494859,3.882814,7.674062,-5.017471,6.282579,-9.154782,9.524591,-2.459800,-9.295374,5.976635,7.002491,-4.683885,-1.113784,1.316039,0.432323,-6.922165,-7.665050,1.028658,3.263880,-5.856453,8.989513,2.922007,-0.828918,9.609303,6.146395,-2.074674,6.759426,-3.117695,9.723977,-1.578152,-3.244378,-4.734238,-8.541292,-8.195366,-8.481302,-2.270794,-5.395130,-8.423589,-9.500024,2.771105,-0.707742,-3.240751,5.454225,6.502008,-8.867967,9.739366,-3.445456,6.419650,-6.402388,-0.587887,-2.241746,-5.851493,-7.150507,-6.063287,-3.585304,8.041564,1.761607,-8.972371,-0.382313,-0.051902,2.303425,3.048293,1.132706,-8.139614,0.366758,-2.535365,-0.188042,-1.774408,-8.174559,5.644181,-6.929570,1.883660,-3.595317,-7.185146,-3.995651,5.760575,4.846810,2.415914,-9.990239,-0.350467,0.598726,3.734927,0.625241,-1.769663,-9.249198,-2.772211,-2.506643,9.992812,8.472000,-3.741422,-3.401039,-8.078300,-7.407932,-4.306531,9.529166,-0.540759,-7.113765,-5.937977,9.912969,3.202055,-1.263038,6.482772,6.091796,0.586201,-6.213336,-2.883359,-1.639206,-7.912134,6.929844,1.830060,5.336870,4.359867,1.041531,7.973354,-9.175107,7.966523,-2.571002,-5.648422,1.380111,3.460101,2.451068,-6.092677,-1.087272,-5.818422,4.083072,-6.636153,-3.771892,-0.209663,-2.011065,-8.285867,-6.691349,6.510678,-6.170728,3.498439,-5.478419,-0.698259,-3.324052,2.955674,6.879636,-9.645462,3.335418,-0.116684,-2.141486,0.067211,-9.211523,-3.310510,2.952125,-5.152546,6.511620,7.461228,-9.565779,9.119737,-3.030449,4.484962,-1.881718,2.055718,-3.187549,0.159121,-3.948254,1.567109,2.538418,-3.596429,-0.838906,-9.293157,-9.690512,2.353897,0.998994,8.133019,1.645848,-8.850658,5.446192,8.452372,6.665012,-5.844264,4.869596,-7.249029,2.103275,-0.098374,0.471997,0.643258,-4.022478,-1.503282,4.163961,-2.423958,-9.661033,0.002522,-1.636235,-8.465112,2.831646,1.011231,-4.610565,9.967712,-9.974085,1.317394,4.141384,8.148843,4.568737,2.406809,-2.501832,9.842072,-9.044037,-4.397118,2.797217,-8.931345,6.699765,-9.144162,-1.601995,-3.281982,4.810790,-6.362597,-2.957747,-3.667805,-3.960818,7.311021,0.281658,3.287604,4.235433,-0.061799,-2.020923,2.199372,1.070575,-5.160616,-6.551165,-6.952132,-2.919900,-6.731902,9.968476,0.208727,-6.740146,-4.840411,6.099299,-3.077746,2.853730,-4.933909,9.825761,3.818721,1.674082,-8.015870,-9.484803,4.646651,-6.732141,-7.320926,-1.093441,0.415566,-4.047239,2.980564,4.070188,-2.849534,-1.180468,5.070063,-9.453335,-2.573756,-2.010178,5.352059,-8.163958,7.029243,-4.381538,-1.642446,5.614294,-1.074550,6.313925,-3.513906,4.868239,6.705194,6.275597,7.016601,0.290757,8.970753,9.531718,5.679554,7.746919,-8.235687,-7.470483,-5.440714,-3.014316,0.639442,-7.310894,-2.903502,-5.394836,-3.526755,-1.762997,0.875932,6.733512,1.067579,-8.496134,-4.202487,-8.626654,6.122682,0.591313,-5.897250,-7.446660,4.777180,6.093848,-9.428964,5.777898,9.536320,1.480218,-8.128373,0.174921,8.189996,-1.640096,9.276116,-2.107486,5.329871,0.682149,3.921903,9.831275,-1.202303,-7.654504,-0.007784,9.812548,-8.871347,-4.801487,-1.368267,-0.065428,4.417979,7.602447,3.672914,-9.161776,-3.468867,3.645639,6.851560,-3.570781,9.338445,5.002749,3.625593,-8.334574,4.991049,-8.128843,-9.076455,5.002906,6.743964,3.151388,-3.770430,4.531016,6.613571,-2.371134,7.473090,-8.190073,5.992565,-9.251503,9.547442,-4.132468,4.368504,-7.931943,-3.251820,-1.099092,-1.958326,-2.212924,0.198245,8.774839,-7.820235,0.834988,8.134616,6.446878,8.125456,0.945413,-1.723130,7.881727,-0.241722,4.034143,9.608627,-7.452221,9.701080,-6.760641,-8.196615,5.914364,0.969937,-7.075950,5.678837,-5.193290,6.948823,9.132220,1.163908,5.670483,-2.116779,-2.086231,-9.629103,0.800963,-7.801984,-3.913556,-9.737712,1.079751,1.379264,-3.640874,8.487461,9.087567,-8.937819,-6.831545,-9.126485,0.893607,2.571169,-7.734392,-2.591839,2.750742,-6.256840,5.996968,-2.715535,-3.267412,-8.938022,-6.874702,0.453104,-5.065713,-8.281445,-4.911799,-8.418576,2.527648,0.998025,-7.078789,0.881320,-6.257374,8.334559,-3.591677,6.600823,6.465257,1.169164,0.310444,-9.889451,-9.034285,3.890236,2.721557,-8.077124,8.471103,-2.940035,7.453393,7.678458,6.119892,2.739591,-6.741967,3.578477,-8.147067,3.128480,4.864864,0.896690,-6.388449,-8.688022,7.006101,-3.617580,2.483622,-4.774355,4.232352,-2.592581,-0.262047,-2.144611,-3.487323,0.552047,5.163431,4.827360,-8.070121,-8.989033,1.497476,-2.652024,-6.250496,5.286050,8.378971,-5.689063,0.938366,-8.462898,0.363419,8.063528,-6.296750,-4.456979,5.406846,-3.257726,4.244955,0.596706,-5.324199,4.773219,-6.098042,-3.508032,-6.437142,-9.964424,4.535761,1.392367,-8.607539,4.286704,2.680341,-1.074865,7.342936,-4.752016,4.940778,7.187029,6.459520,-7.045720,8.238242,-5.934565,-9.265378,4.997854,8.205331,-1.124426,4.243280,-7.545461,0.930473,-8.354527,0.748876,0.907736,-5.166536,-6.760406,6.133749,1.886656,9.729715,-2.479144,1.620449,-0.640865,5.769876,-4.796064,-8.847505,0.105377,1.698106,-7.531718,9.945730,7.586370,-7.007864,0.812062,8.751841,-5.833967,-3.000192,-4.970100,-1.033060,-2.460560,4.293087,9.367077,0.610783,9.906523,-8.745651,-1.516635,-2.009916,1.012889,0.787578,-2.674750,9.597643,-5.136088,-1.399903,3.338746,3.353695,-3.471736,-2.213761,-5.526498,-7.391148,-2.233199,2.360004,-3.258447,2.697156,-5.074447,8.159378,1.248400,5.876736,-5.295038,-5.843601,-7.944059,-9.655764,-4.956536,-3.627010,-4.335724,-5.199886,6.468071,8.095422,2.513555,8.437101,-9.119201,0.081123,-7.432616,4.268720,-7.811393,-9.778377,9.258262,1.563350,-3.574832,-3.032752,-0.625755,1.263228,-8.938860,-5.530354,8.400706,7.744938,-5.556850,7.952955,8.659728,4.600801,-8.429146,-2.435986,-3.914683,0.015213,-2.408812,-5.542379,0.051693,-2.618622,-0.629727,3.123665,1.279892,4.282943,4.265026,-0.741896,4.349447,-5.994084,2.040115,4.123332,-2.761034,-1.877643,-2.309676,-8.317265,3.146600,8.436850,5.423626,3.432773,1.866369,-9.826878,-4.109148,7.960407,-2.408236,3.286059,6.026030,-4.194681,-2.067133,-3.472100,6.390799,-3.550442,7.372928,-5.811357,-1.997885,5.752930,7.819392,2.080792,-4.720400,3.118349,-9.237170,8.923959,-6.565293,-7.944158,-1.819139,3.944469,8.416464,-2.109837,-0.341853,1.256947,4.325417,-3.519249,-1.601479,-6.119600,3.622291,2.898527,-6.796085,3.808932,-7.841611,0.807581,-4.791134,-3.773164,-2.179173,-0.214385,-5.183554,-9.043286,1.247953,-4.444816,-4.510241,-8.700047,-6.768291,4.671543,-0.191997,3.871049,-8.314665,-7.204219,-0.225150,-6.474696,9.611223,2.629615,-1.103276,4.485323,-3.278693,0.138989,-4.434166,-6.594976,-4.838594,-6.097254,-0.733951,7.048449,-7.889388,8.071595,8.205017,-1.999456,8.815625,-5.523568,8.952229,3.356660,7.988878,-7.392416,-7.864391,-6.389585,-0.021477,-1.014251,6.866434,-8.693900,1.136878,-3.178879,7.944181,5.948959,-5.929048,6.192570,-2.561329,2.157726,5.201295,0.963736,9.204757,-0.111753,-9.191234,-4.795554,6.597247,-6.989247,8.761343,8.317614,7.248843,7.620009,-8.187608,1.854263,8.785070,-8.603857,-6.776655,-1.362666,1.147938,7.126950,8.435121,0.618356,-4.617994,8.124972,-7.053306,0.723783,-4.120175,6.499927,8.458367,3.941303,-9.245963,2.843404,8.064156,-5.581635,5.616728,2.156224,4.414424,5.022904,-8.152194,6.684594,5.395282,-2.915067,1.863224,-7.496767,-3.493768,3.971367,7.266530,3.398460,8.530424,3.092343,3.346438,9.508707,-2.559899,1.583963,-6.144734,5.893080,2.766616,0.355759,-1.679148,3.685338,6.394514,5.361486,0.079205,4.567344,-7.434939,6.883201,3.082806,-6.813893,9.472515,-6.673245,2.723597,2.390962,6.302610,9.636202,-9.311332,-1.058485,-5.499727,-3.607115,-7.406818,-5.347173,5.562818,0.910120,-4.106832,-8.183667,1.619563,0.647557,-1.280478,4.804732,1.046362,1.403809,5.525025,0.949380,7.712280,5.085083,-7.898207,-7.396085,-1.816701,-3.002163,-0.022448,-6.940377,-4.491406,-8.980549,7.124397,-5.948550,-0.928269,-8.685303,-3.977836,9.459711,-9.571649,1.078304,-3.842716,-8.135908,0.417444,-4.635490,7.379862,2.728532,-2.482877,-3.698362,3.948566,3.495100,9.157592,0.569426,3.693704,8.557635,-9.902172,-0.155330,7.156866,0.914094,-7.966778,-8.294927,-4.116069,0.812989,9.097791,-8.987496,-6.735094,-9.395895,-1.807987,2.855533,3.892351,5.892466,-4.234606,-4.314234,-7.484264,-5.444037,1.204094,-4.327266,2.110699,6.112112,0.469345,8.298626,0.324626,6.152381,-3.802476,2.113730,-2.059685,1.672204,2.529097,-3.035919,3.099472,-4.944581,0.401940,-7.906704,-9.185669,9.899434,-3.862229,5.091325,-0.198244,5.723441,-1.110755,-2.279373,0.746980,2.795386,-3.837158,-3.329906,-9.374646,-0.988716,1.672361,-9.406323,-2.430180,8.598370,1.689703,-8.956043,-8.004435,-3.207754,5.029866,4.269273,-1.312151,0.697964,-9.841317,-5.905856,-7.672391,-6.134250,2.386852,3.603494,-8.375875,-7.771394,1.251575,1.492865,-1.465340,-4.965840,7.269267,-7.201164,-8.771642,-1.729051,2.463401,-2.013897,0.879842,0.351972,0.745030,5.208599,-1.974920,0.455844,-8.353295,1.863040,-7.572811,-6.915520,4.356370,0.531766,-2.322024,-8.540927,-4.017003,3.076453,2.732946,9.426906,7.501939,-9.482500,-7.702253,-4.790924,-3.910530,-1.255678,2.034192,-8.063005,6.452245,0.238052,3.889926,-3.509446,-4.445333,-3.512134,-7.936397,-5.496634,-6.593860,0.172154,8.511529,7.278779,0.981681,-0.914598,7.164371,2.421033,8.935547,-7.237552,-1.136406,-9.231390,3.989027,-4.102114,-3.822926,6.926942,6.493521,-9.332864,-1.508399,5.056487,2.440007,0.847806,-0.917315,1.870653,5.804242,4.875967,-3.829779,-0.537599,-5.025264,-4.557903,2.663621,8.628904,-3.042934,0.123264,1.894862,7.345197,5.791379,0.083104,2.610448,8.593168,5.206416,0.961184,-2.501417,2.319761,-0.653149,-9.238897,5.429577,9.585776,0.550298,5.547274,0.735807,7.572095,1.333020,-8.127147,9.332454,2.574525,-3.896555,0.520794,-8.692441,2.970505,-8.788104,-7.274151,1.833918,6.606638,8.251223,-8.193775,3.295443,1.745257,-7.196098,-5.395848,5.807485,-7.505796,-5.172141,-0.584041,-5.676312,0.659858,1.687597,0.888542,2.660821,2.147176,6.911892,1.779212,2.311499,7.203668,5.758744,-2.953049,1.175513,-8.393892,-1.025704,-2.556471,8.480744,9.187782,5.987247,7.328879,4.423040,9.657313,-8.933395,-4.834294,6.013835,-0.502934,0.305510,4.180829,2.343210,-8.021765,4.162710,2.422031,-1.178048,7.603335,3.144141,9.854514,-7.102469,3.491278,8.313313,-8.106213,9.271253,9.359520,6.973461,6.145761,8.761515,-3.714367,-9.633837,3.895721,-0.205154,-7.895166,8.137990,6.101682,7.844156,1.408353,-1.145818,3.988276,-0.646822,-9.242850,-6.287026,-1.753796,6.075079,-5.528123,-2.085294,-9.893354,-2.444507,-9.765105,-8.580766,9.582648,-8.238284,0.077147,6.672355,-4.129805,0.061234,9.446842,-0.628675,6.510376,4.963690,8.241836,8.535781,-1.269116,7.124606,-1.987021,-4.116437,3.281596,-9.976702,9.493566,9.108379,5.630489,-7.550497,-0.175799,-0.682201,-3.412182,1.259067,-9.505214,-3.253627,0.445231,1.172088,3.035535,6.917758,2.150043,0.695503,7.958034,-8.836469,-2.050990,-1.258654,-0.783126,-2.901372,-1.753784,-1.488884,6.512272,1.729810,-1.010628,-1.708392,4.510014,-9.576704,3.186023,1.376262,0.014241,6.357652,6.696824,-0.670024,-1.123317,-5.595665,2.242254,2.341275,5.082609,0.322240,-8.111683,-9.642419,2.081753,-4.011983,-6.372865,-4.475376,3.239647,9.021740,5.101201,-8.082585,1.282064,-6.494167,-5.891282,2.641286,-5.183637,8.642306,-5.811954,-8.553680,6.735269,-0.772032,9.860900,0.893083,-4.540924,0.345430,-8.151547,9.838561,-9.330021,-0.429640,-2.713888,4.635698,-5.701893,3.017971,-5.925840,3.112588,-5.116318,9.962351,-7.358511,-6.271771,-5.556341,-2.526279,-9.818235,-9.532626,5.863676,2.329072,-8.246328,-8.679808,1.067142,0.350572,-8.063336,0.114955,-0.243696,-7.656769,6.009936,6.875744,-5.471598,6.035256,4.401249,2.536085,-4.036241,-1.460231,5.471533,-2.800734,-9.795390,-6.110156,-3.361690,0.095442,8.442412,7.453982,1.093628,-7.384839,-0.668693,-9.380767,6.384039,-9.417311,-4.129582,-3.339201,0.370506,-0.723666,-9.874975,-7.315521,9.594517,3.092016,4.195943,1.681169,4.588097,-6.653153,4.266788,8.749653,9.026192,7.957607,8.777281,3.282060,-0.043871,-9.294374,1.967318,6.784030,7.664266,4.438081,5.706010,8.989993,-8.088961,-3.540623,-2.415990,-4.764013,6.200383,6.199252,2.155698,5.503960,-4.909732,-9.932136,5.086975,-5.260569,-0.696007,4.762234,2.988364,-1.651143,5.167968,7.563213,-6.115470,4.647654,0.922326,-6.256775,9.907247,-4.724390,-8.447791,0.200590,-0.740227,-2.781225,2.186020,-2.298219,-1.686348,-0.055552,8.188271,7.122191,8.283874,0.156293,8.743134,7.931910,-9.071439,-8.476824,-3.333997,-1.667745,-1.585444,5.863680,-7.094657,-6.380898,-3.844233,-5.434959,-9.255923,-0.629284,-9.282743,1.307318,9.864491,4.129062,-5.491156,-9.832241,5.504585,-1.472368,8.919207,-0.397088,7.772534,-6.701532,7.371682,-2.090055,-5.919299,-5.016579,-3.799971,-1.950561,-0.529366,6.431631,-1.602551,-7.962412,-2.792362,9.663075,-5.335487,-1.157789,-8.724961,-1.472306,0.937311,8.934218,0.971436,0.944092,2.634677,4.935032,9.712163,3.408586,2.351510,4.821400,-0.419000,8.700465,-5.077803,-5.015867,0.828609,4.952016,7.065237,-2.559036,-4.907602,3.064205,-3.935500,1.467508,4.760204,0.223578,-2.101497,5.980742,8.272221,-5.213082,-7.559469,-9.310841,8.675012,-9.378402,-0.667029,2.840068,-6.827692,7.444935,9.216560,-9.153205,0.029667,8.923461,5.089884,-0.815146,-4.223635,-6.042401,7.146460,-7.882477,-7.334221,-0.271419,0.256520,8.971703,-2.533268,-6.573353,-7.687567,-0.804760,-5.894162,9.716920,-2.164780,-4.824127,-5.487995,8.279820,7.145739,-5.392714,0.120917,9.085042,-2.083639,-1.610544,7.184200,2.102501,-2.519211,3.635099,1.759894,-9.967742,-7.277262,-0.816949,5.640064,-2.957797,0.611883,7.127018,4.713808,-3.904692,0.911316,-1.131312,4.725053,-5.212238,-3.156184,7.037655,1.857188,4.929170,-2.650344,-3.082076,-3.521549,9.062637,-4.303373,-3.084709,6.499269,4.827104,8.917232,1.460752,5.828318,-4.219201,7.931469,-4.252792,4.368525,-4.515289,2.146461,-2.810877,4.473828,-6.375005,-2.279724,-6.755616,3.755994,-9.632848,6.049587,1.628196,-9.139092,-9.560825,9.706657,-4.884966,8.163166,8.379444,8.700833,-3.505291,3.599444,-2.561448,2.080772,8.285828,6.204498,8.284690,2.555951,9.888774,9.031469,8.304475,-9.258330,4.983729,-8.917169,6.682863,-5.385759,-2.558785,-1.875639,0.041879,1.792691,-4.375255,0.939787,-1.447054,-6.511237,-3.172629,7.164221,2.552575,5.827297,2.596893,6.056310,2.302587,-7.740559,8.709286,7.357670,-3.349959,2.223755,4.874210,4.333435,8.180596,7.726548,3.485731,9.162864,3.828827,9.915314,-0.092741,7.540316,2.796099,5.249721,-5.910681,1.841258,-0.960321,8.635332,6.251535,0.948667,-1.943243,-0.198557,5.039405,-6.091393,-0.888782,-0.213849,-1.928541,7.769456,1.235877,-9.238112,2.646861,6.967825,-4.438035,8.157316,4.335989,-0.026140,1.786103,5.080969,-3.648597,0.389380,7.075210,3.053906,7.668155,8.707503,-0.400500,-3.784635,-5.709181,0.153818,-3.079705,-2.346693,1.951376,-3.438051,-4.745453,3.957557,1.990516,5.788357,-8.340361,8.014653,2.296695,4.138922,-9.536715,5.436903,6.996620,-4.405095,4.251823,7.518989,2.646636,-2.125675,5.186279,1.484927], dtype = "float32")#candidate|1700|(3136,)|const|float32
call_1699 = relay.TupleGetItem(func_525_call(relay.reshape(const_1700.astype('float32'), [14, 16, 14])), 0)
call_1701 = relay.TupleGetItem(func_528_call(relay.reshape(const_1700.astype('float32'), [14, 16, 14])), 0)
func_613_call = mod.get_global_var('func_613')
func_616_call = mutated_mod.get_global_var('func_616')
var_1713 = relay.var("var_1713", dtype = "float64", shape = (54,))#candidate|1713|(54,)|var|float64
call_1712 = relay.TupleGetItem(func_613_call(relay.reshape(var_1713.astype('float64'), [2, 9, 3])), 1)
call_1714 = relay.TupleGetItem(func_616_call(relay.reshape(var_1713.astype('float64'), [2, 9, 3])), 1)
func_1366_call = mod.get_global_var('func_1366')
func_1369_call = mutated_mod.get_global_var('func_1369')
const_1716 = relay.const([1.515421,0.328623,1.610591,-3.481789,-1.345678,0.345084,9.352578,1.670856,-1.138809,-0.622316,5.736984,-7.865288,-7.082410,-8.722222,1.358386,-1.861284,-2.982627,7.699138,-9.660352,-1.050188,-4.019496,2.375812,9.905654,1.927053,-4.827102,1.735986,-7.904420,7.759977,9.716051,-8.842196,-6.878056,9.054432,-8.447868,-8.524400,0.958421,5.431819,-7.650398,7.598933,6.201512,3.426265,-5.091460,1.475566,9.085486,6.489705,2.552888,0.090369,-2.966512,-8.695659,9.539067,-6.491087,8.886345,-0.993496,-9.554849,-8.839722,5.397258,2.174450,-4.927325,-4.345627,-8.564242,-2.642953,7.808209,9.464093,1.067547,-9.416631,-5.260327,7.047740,-9.332028,-2.597751,0.340146,-9.053227,-4.822652,-3.433352,-3.219213,-0.494625,9.916589,-9.373840,-8.814957,-6.753029,-9.085619,-5.292119,7.734562,-5.295948,-1.007774,-4.112705,0.741230,-8.690576,4.918869,9.855211,3.860092,-9.271885,-5.596101,7.867514,-7.815668,-7.990598,-5.685515,3.663995,-0.002176,6.816317,-3.531194,-1.226811,-8.404752,-4.403017,-2.016715,9.457164,1.444663,-5.328007,5.205568,9.608594,9.266188,-5.948877,-2.492562,-2.301724,8.645486,2.927535,7.596033,-8.221328,-7.588577,0.919474,-9.922551,-1.867231,-0.815135,2.333413,-0.795579,2.561667,1.377915,0.148305,-9.632971,-1.158634,8.950148,7.194766,-5.053875,-9.241627,-4.353066,9.856091,3.759753,7.020709,-9.868159,5.143174,9.294895,-2.285361,-7.215368,-7.590297,1.675914,-2.082273,2.685322,-6.665041,6.165863,-6.079718,-0.610603,-7.028618,-4.326862,-2.009773,2.150496,6.851436,-6.258859,0.078904,-0.485243,5.622169,-8.840209,-6.869898,-0.360032,2.583975,-3.962011,4.457991,2.564793,-9.987799,4.332749,-8.305139,-5.483454,7.490155,-2.200783,7.575449,6.515499,-8.473949,-9.160472,9.292717,9.264376,3.680774,-1.984886,4.297918,-6.709481,1.487394,-7.538517,-6.036920,-4.430874,3.121033,-1.683360,5.530205,-5.946294,-9.848639,-2.811570,2.174513,-4.606644,6.760824,8.621322,0.480976,-5.502373,-4.774178,-6.063020,9.100154,-5.198998,2.813119,1.008505,-9.445158,7.807698,3.432315,-8.934418,7.360373,2.914125,-1.517668,8.160421,-4.331839,-9.502014,-7.836465,-3.529699,3.648252,2.563417,2.930022,7.686288,-8.722283,-1.768276,4.142112,-0.811071,-2.587608,0.904279,-7.935111,-0.822724,7.816180,2.952076,5.459125,6.619634,3.331887,-2.227683,-3.748185,-8.920167,-6.143516,-2.969882,-3.238791,-7.782130,-4.223014,9.601184,9.584012,9.995683,-6.810508,-9.272180,-2.828472,9.786763,-8.525187,5.889307,3.403381,6.525587,-3.108488,1.968573,-3.390231,9.165901,-0.929417,-1.844137,-3.119449,-7.128089,-2.783215,0.957287,-7.398771,-4.819678,-4.011480,4.554977,-7.820847,5.361271,-4.298086,1.693145,-7.076261,5.098230,3.332276,-4.776806,-8.287316,-8.031173,-5.727965,4.745947,-4.063296,0.662707,9.931223,0.098058,-7.552862,1.475264,3.514240,1.683339,8.562683,-6.342687,-7.605812,5.598252,0.668184,-4.230441,6.434835,5.102124,4.402133,-0.892859,1.388482,-3.383064,-4.893466,3.307331,-0.488089,7.346342,3.248254,-2.700784,3.622925,-9.174631,-2.129856,-6.793871,7.656917,3.253685,-8.596537,8.861335,1.263362,0.533824,6.476356,-3.130132,-3.634210,-8.218906,8.012492,9.256772,-4.598706,-0.547985,-3.288677,-9.339443,-9.338972,2.484736,1.336909,-9.614057,-0.950168,-8.984300,-4.112371,-2.293060,-2.087386,1.813809,7.554237,-2.688258,-2.328458,-5.730355,9.812400,-3.579247,1.204194,7.941711,2.343817,4.743740,7.335680,3.697075,-7.501330,-6.917764,-3.280578,3.643480,6.264224,4.654430,-9.045698,-3.313402,-5.048229,8.157027,-9.782392,-2.782970,-7.959051,-3.405270,0.154512,-7.661334,3.766106,4.650756,-1.737972,8.323075,-3.533792,3.659965,6.437391,4.277624,2.774880,4.836715,0.549430,1.188728,3.092098,7.403822,0.543823,7.112009,6.021581,8.250163,1.826930,1.314463,8.404542,-0.690087,-8.373324,7.449579,-0.145558,-7.350044,-7.920209,7.334302,7.063885,3.984215,-3.092148,3.603805,9.314673,6.022765,6.094872,-7.072115,-9.136577,3.821983,-4.474034,-5.216437,6.446317,-4.396587,-0.947357,-7.534947,7.110209,-5.751763,-6.628596,0.037091,-1.035224,-8.932393,4.859545,8.067486,4.551564,-0.711151,7.801121,-6.599847,6.558557,-8.574088,-3.549726,2.005908,-8.817854,-8.050175,1.009398,-6.981085,-0.297366,-0.485586,-4.326882,9.548719,-7.772019,4.515023,-0.265203,4.058647,3.234506,6.095775,-6.089523,7.495977,9.180290,8.184687,6.034707,-2.612257,-0.032751,1.024469,-1.187633,-9.748780,-0.824705,-0.423186,3.163670,0.961249,-6.051619,-9.104828,2.242634,7.443348,6.138822,-2.656398,2.211921,8.951462,3.168271,-9.442406,3.096010,-0.973921,-4.455513,7.719971,-0.239236,-2.652197,7.197900,0.382049,-5.859455,7.647155,5.898329,-8.180921,1.779158,-7.365500,-8.000148,-0.331413,5.866791,-0.756455,-9.673805,7.403336,-0.500989,2.672950,1.460825,-7.265331,7.216490,3.365291,1.102437,7.279156,7.142642,9.447420,-7.208270,-8.145087,0.106532,-3.810888,-3.674374,-9.988227,8.406108,-9.322689,9.740615,8.398660,1.075864,9.185968,-1.610520,9.001970,9.005117,-3.057082,-1.398021,6.428571,9.708898,4.670799,-2.825872,-9.903102,3.132081,-4.351814,8.048030,-7.398285,-9.772151,-8.280840,-3.424252,1.091349,-8.753552,-3.216901,-8.727295,-3.855216,8.930140,7.295597,-9.160603,8.415465,-1.953496,-5.358183,3.929301,-5.142457,-9.366916,8.332968,-8.943646,-1.592012,-6.263848,-8.453110,0.099706,-7.961530,-9.641325,-4.380075,2.575857,3.132464,2.124688,9.075418,-1.605987,-9.930204,-4.681428,1.751695,-8.693490,-2.290848,-0.859420,9.709932,2.541638,-8.244730,5.365151,-8.635896,3.610549,7.940095,2.015397,5.475456,-1.459620,4.143197,6.039685,-1.668141,-2.484139,-4.792821,2.046648,-6.762587,9.922858,-0.245849,3.596702,9.839483,-4.621288,6.105865,-8.651000,5.519061,1.878788,1.281905,-0.753612,-1.353682,-7.547292,1.511087,8.495515,7.652238,8.721435,3.852048,-5.363702,2.731507,4.713011,7.693555,3.199159,0.382875,0.279774,-3.073241,-9.128757,-4.842171,8.353697,-3.601074,-4.050946,-2.863663,2.120300,-7.520099,-9.766147,5.048292,5.332034,0.977631,0.663204,3.137628,-2.134375,-1.569245,-9.349877,5.363675,6.665364,-4.999170,2.601526,4.359238,1.008006,9.879104,1.010085,0.216629,1.652156,4.760024,5.167536,9.719924,-4.509475,-4.618987,-0.267305,8.617425,7.938385,2.381882,-1.819913,-2.400914,4.480131,6.011904,-4.840094,8.409147,-6.404307,-9.271356,9.574410,1.069300,-9.942697,-5.193809,6.005840,-7.871577,-8.122296,-4.007361,-2.245681,-3.916803,-0.441765,-4.669068,-5.437226,-6.114357,-5.120973,5.844107,-4.428173,-8.059421,-9.064470,3.144711,-3.549847,0.241097,-0.463435,5.194822,-5.528934,-1.888662,2.112220,9.517889,-4.693572,-8.597792,-3.514257,-0.863254,-8.541139,0.728165,3.949142,9.744890,-2.536002,-1.977458,-5.895667,9.141287,9.305270,2.421799,-9.798105,1.135346,-8.433224,-4.132029,8.817478,8.517897,3.928438,-6.253873,6.506981,-3.806683,-1.874427,-3.515207,-7.916485,6.403025,0.654356,-3.832048,6.845713,-9.645137,-7.191227,2.211053,8.339645,3.084586,4.790110,-6.878818,3.188263,7.047308,4.129899,-0.026227,2.349156,-3.433358,-3.270427,8.337889,-3.138562,8.293997,-4.454318,-3.751363,6.338757,-7.532539,0.615242,-9.012630,4.170455,6.288922,6.390973,-6.005890,4.456516,-3.347504,2.029335,-5.610398,7.758870,-9.797523,-7.909202,-5.449409,1.069624,-1.169443,4.635600,7.500293,-0.156813,3.789819,6.812032,6.019463,-1.535219,-4.408984,9.231038,3.225040,2.268031,-6.818862,-1.361133,3.404299,4.963070,0.844166,-9.662452,5.481153,6.868480,3.973321,-4.568347], dtype = "float32")#candidate|1716|(756,)|const|float32
call_1715 = relay.TupleGetItem(func_1366_call(relay.reshape(const_1716.astype('float32'), [9, 12, 7])), 0)
call_1717 = relay.TupleGetItem(func_1369_call(relay.reshape(const_1716.astype('float32'), [9, 12, 7])), 0)
var_1748 = relay.var("var_1748", dtype = "uint64", shape = (1620,))#candidate|1748|(1620,)|var|uint64
bop_1749 = relay.not_equal(call_1669.astype('bool'), relay.reshape(var_1748.astype('bool'), relay.shape_of(call_1669))) # shape=(1620,)
bop_1752 = relay.not_equal(call_1671.astype('bool'), relay.reshape(var_1748.astype('bool'), relay.shape_of(call_1671))) # shape=(1620,)
func_613_call = mod.get_global_var('func_613')
func_616_call = mutated_mod.get_global_var('func_616')
call_1760 = relay.TupleGetItem(func_613_call(relay.reshape(call_1712.astype('float64'), [2, 9, 3])), 1)
call_1761 = relay.TupleGetItem(func_616_call(relay.reshape(call_1712.astype('float64'), [2, 9, 3])), 1)
bop_1762 = relay.logical_and(var_1748.astype('bool'), relay.reshape(call_1669.astype('bool'), relay.shape_of(var_1748))) # shape=(1620,)
bop_1765 = relay.logical_and(var_1748.astype('bool'), relay.reshape(call_1671.astype('bool'), relay.shape_of(var_1748))) # shape=(1620,)
output = relay.Tuple([bop_1656,const_1670,bop_1689,call_1699,const_1700,call_1712,var_1713,call_1715,const_1716,bop_1749,call_1760,bop_1762,])
output2 = relay.Tuple([bop_1656,const_1670,bop_1692,call_1701,const_1700,call_1714,var_1713,call_1717,const_1716,bop_1752,call_1761,bop_1765,])
func_1781 = relay.Function([var_1654,var_1655,var_1688,var_1713,var_1748,], output)
mod['func_1781'] = func_1781
mod = relay.transform.InferType()(mod)
var_1782 = relay.var("var_1782", dtype = "int64", shape = ())#candidate|1782|()|var|int64
var_1783 = relay.var("var_1783", dtype = "int64", shape = (12, 2, 10))#candidate|1783|(12, 2, 10)|var|int64
var_1784 = relay.var("var_1784", dtype = "uint64", shape = (1620,))#candidate|1784|(1620,)|var|uint64
var_1785 = relay.var("var_1785", dtype = "float64", shape = (54,))#candidate|1785|(54,)|var|float64
var_1786 = relay.var("var_1786", dtype = "uint64", shape = (1620,))#candidate|1786|(1620,)|var|uint64
output = func_1781(var_1782,var_1783,var_1784,var_1785,var_1786,)
func_1787 = relay.Function([var_1782,var_1783,var_1784,var_1785,var_1786,], output)
mutated_mod['func_1787'] = func_1787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_1798 = relay.TupleGetItem(func_1200_call(), 0)
call_1799 = relay.TupleGetItem(func_1201_call(), 0)
output = call_1798
output2 = call_1799
func_1803 = relay.Function([], output)
mod['func_1803'] = func_1803
mod = relay.transform.InferType()(mod)
mutated_mod['func_1803'] = func_1803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mutated_mod.get_global_var('func_1803')
call_1804 = func_1803_call()
output = call_1804
func_1805 = relay.Function([], output)
mutated_mod['func_1805'] = func_1805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_1907 = func_1803_call()
call_1908 = func_1803_call()
output = relay.Tuple([call_1907,])
output2 = relay.Tuple([call_1908,])
func_1920 = relay.Function([], output)
mod['func_1920'] = func_1920
mod = relay.transform.InferType()(mod)
output = func_1920()
func_1921 = relay.Function([], output)
mutated_mod['func_1921'] = func_1921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_1970 = relay.TupleGetItem(func_1200_call(), 1)
call_1971 = relay.TupleGetItem(func_1201_call(), 1)
func_1781_call = mod.get_global_var('func_1781')
func_1787_call = mutated_mod.get_global_var('func_1787')
var_1982 = relay.var("var_1982", dtype = "int64", shape = ())#candidate|1982|()|var|int64
var_1983 = relay.var("var_1983", dtype = "int64", shape = (240,))#candidate|1983|(240,)|var|int64
var_1984 = relay.var("var_1984", dtype = "uint64", shape = (3, 540))#candidate|1984|(3, 540)|var|uint64
const_1985 = relay.const([[-3.004466,-1.019168,-3.437007,3.262994,2.670793,7.878842],[-8.681774,7.485091,3.507141,0.829018,-8.186249,1.936682],[-9.237215,1.627260,0.658955,8.182727,3.263359,-1.739861],[3.060740,3.549473,8.730863,-5.632348,7.413738,-0.265646],[1.270652,-0.724381,-8.077267,-7.033659,2.937345,7.868381],[9.350639,-2.243939,-8.816579,-9.209886,-0.108099,-3.115654],[8.815684,2.345379,5.944748,2.869620,-8.525884,-8.574827],[6.902173,1.356247,-4.569774,9.147841,9.419674,0.754815],[-4.948958,-0.625162,7.802443,-5.025907,2.874651,3.332753]], dtype = "float64")#candidate|1985|(9, 6)|const|float64
call_1981 = relay.TupleGetItem(func_1781_call(relay.reshape(var_1982.astype('int64'), []), relay.reshape(var_1983.astype('int64'), [12, 2, 10]), relay.reshape(var_1984.astype('uint64'), [1620,]), relay.reshape(const_1985.astype('float64'), [54,]), relay.reshape(var_1984.astype('uint64'), [1620,]), ), 11)
call_1986 = relay.TupleGetItem(func_1787_call(relay.reshape(var_1982.astype('int64'), []), relay.reshape(var_1983.astype('int64'), [12, 2, 10]), relay.reshape(var_1984.astype('uint64'), [1620,]), relay.reshape(const_1985.astype('float64'), [54,]), relay.reshape(var_1984.astype('uint64'), [1620,]), ), 11)
output = relay.Tuple([call_1970,call_1981,var_1982,var_1983,var_1984,const_1985,])
output2 = relay.Tuple([call_1971,call_1986,var_1982,var_1983,var_1984,const_1985,])
func_1987 = relay.Function([var_1982,var_1983,var_1984,], output)
mod['func_1987'] = func_1987
mod = relay.transform.InferType()(mod)
mutated_mod['func_1987'] = func_1987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1987_call = mutated_mod.get_global_var('func_1987')
var_1989 = relay.var("var_1989", dtype = "int64", shape = ())#candidate|1989|()|var|int64
var_1990 = relay.var("var_1990", dtype = "int64", shape = (240,))#candidate|1990|(240,)|var|int64
var_1991 = relay.var("var_1991", dtype = "uint64", shape = (3, 540))#candidate|1991|(3, 540)|var|uint64
call_1988 = func_1987_call(var_1989,var_1990,var_1991,)
output = call_1988
func_1992 = relay.Function([var_1989,var_1990,var_1991,], output)
mutated_mod['func_1992'] = func_1992
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2003 = relay.const([[[-1,5,6,1,-2,5,1,6,-1,3,4,-7,4,-2,-7],[5,3,-2,-8,2,-4,-9,-4,-10,1,-6,7,-8,9,10],[-6,-4,6,7,10,8,-8,-8,-2,-9,4,-8,1,3,-5],[-6,9,9,7,-1,-9,1,-4,10,-9,-8,4,-3,-3,5],[-1,-8,-2,-6,-7,5,4,3,-5,5,-10,7,1,1,8],[2,4,2,7,4,-4,9,-7,9,5,-7,9,1,8,3],[-7,-7,-5,8,6,-7,2,-10,8,4,3,10,-7,-1,-2],[-3,9,9,-9,-5,8,-5,8,1,3,1,7,8,-2,-9]],[[3,-3,-1,8,9,5,7,-10,-5,3,6,-4,5,9,10],[10,-1,8,7,-2,-9,-4,6,1,6,-9,-10,-9,6,-10],[5,2,5,8,5,-8,8,3,7,5,-10,10,-9,4,-5],[2,6,-8,3,5,-7,-4,-7,8,3,-9,-10,-4,8,-4],[2,-4,1,1,9,4,9,10,-7,9,-2,6,9,-10,-9],[9,2,2,-5,-7,-9,10,-9,3,1,-7,-2,4,2,-10],[10,-4,3,8,-9,4,-6,-7,7,10,-1,10,9,-7,-9],[3,6,-4,3,9,-6,3,7,6,9,-1,-4,-6,-4,5]],[[-1,5,-8,-8,-2,5,10,-10,6,-1,4,5,-3,-1,5],[-2,-6,4,7,-5,9,-7,-5,-7,4,8,-2,-4,-8,-3],[10,-9,-2,8,-7,8,-2,6,-3,2,3,-3,-5,-9,1],[5,-7,8,1,1,-1,-5,-6,-10,-4,-6,4,-9,6,3],[-1,-1,-5,10,-6,-4,-1,-10,10,6,2,-10,-3,7,-8],[-9,9,9,-6,1,-3,-9,-4,1,-8,-7,-1,9,7,-3],[4,-5,-9,-8,7,-9,4,5,6,1,5,4,-6,-9,-7],[-7,-6,4,1,2,-1,8,-10,3,-9,10,4,-9,7,1]],[[-2,-4,3,6,2,-1,1,-10,2,-9,-10,4,-2,-2,3],[-2,-4,-5,-6,2,-9,5,-2,-2,-10,5,9,2,2,-8],[-1,-10,-9,-3,-4,-7,8,4,6,-4,7,4,7,-7,4],[-2,8,-2,-4,3,10,10,1,7,10,-4,9,4,6,4],[7,-6,7,1,3,-1,4,-10,-7,-2,6,-5,4,2,-3],[1,-2,4,-7,1,10,2,3,-9,-10,-7,-5,-3,4,-10],[-10,6,9,1,6,5,-6,-2,-10,-9,-1,7,3,-4,5],[-3,-4,7,10,9,-2,5,-1,8,7,-2,-6,-4,-8,7]],[[4,-8,-10,4,-5,-9,7,-6,1,2,3,-6,-2,9,9],[-3,5,-1,-6,-8,-10,-1,-3,7,-1,3,4,5,10,-8],[-10,-1,-2,-2,9,-1,-9,6,-9,7,6,6,-9,-8,2],[7,-6,-7,-1,9,2,-1,-10,4,-1,-1,-1,9,-5,9],[4,9,4,-10,-8,-9,9,-1,6,-10,8,-4,-6,1,1],[-1,5,6,-8,8,-5,6,6,5,-5,-7,-4,-2,-5,4],[-2,-10,4,10,-2,10,5,3,7,1,1,-5,-2,-9,-9],[-2,7,9,10,5,-8,-1,-3,4,10,-2,-5,10,-3,4]],[[-2,-2,-2,10,8,4,-2,-9,-7,5,-8,10,3,1,-9],[-7,-3,9,9,5,-7,-3,4,-4,-5,-10,-9,6,-10,-9],[2,-9,-4,-8,10,-2,4,3,-7,9,-9,7,-1,9,10],[2,3,-6,-2,2,10,8,-9,-2,-10,-2,-1,-5,2,6],[2,-7,-1,-6,9,-6,1,-3,-7,-1,-5,5,2,8,6],[7,4,-4,6,10,7,-4,-2,-3,1,5,6,4,10,1],[8,5,-3,6,9,7,-4,6,-8,-4,-2,-7,-6,6,2],[3,9,-1,7,2,-5,-3,9,-6,8,-8,-8,-9,-3,-2]],[[4,7,3,4,9,-7,-6,-5,8,4,1,8,-6,-4,2],[7,1,-7,-4,-6,10,9,-2,1,-6,-9,8,6,2,4],[-6,-10,-5,-3,10,3,-3,-6,-7,-6,-3,-9,10,-4,5],[-8,6,-10,-7,-9,-2,-6,5,9,-8,-4,-10,1,-10,4],[-10,-8,10,-7,-1,-3,9,10,-1,5,-4,10,3,5,6],[-1,-2,3,9,9,6,-4,3,-8,-3,-6,3,-2,-9,2],[-6,2,-3,10,-6,-3,4,7,1,2,8,2,3,-8,1],[-8,4,-7,-6,1,7,-4,9,-8,5,-4,-7,-2,10,-3]],[[-9,-2,-2,2,-5,7,4,2,-3,6,2,10,-8,-2,-4],[3,-7,-6,1,4,-10,-9,4,-10,4,4,-9,5,-9,-8],[-1,6,-6,-6,10,-5,5,-7,-3,-8,6,-3,8,-2,3],[10,1,-4,8,-5,10,-1,2,-3,-8,4,-3,-8,-4,-8],[10,-3,-3,9,-4,2,-2,8,4,9,-2,-5,-9,-8,1],[10,-3,4,7,-9,-8,7,-7,-4,-6,-2,-7,7,-10,-10],[10,-4,-2,-1,4,2,-3,1,-5,3,-9,2,-2,3,4],[2,-3,7,7,-6,9,2,-8,4,-10,-5,-1,-7,7,-4]],[[-5,-5,3,6,1,10,2,4,4,5,6,-5,8,10,3],[-8,-10,-1,-4,-4,10,7,-5,4,-10,5,1,-2,1,-4],[-6,5,5,3,-2,6,-3,6,5,-9,-10,-2,-4,10,8],[10,-8,2,-8,5,-1,3,-6,-2,-10,-10,5,1,-8,-3],[-7,-10,7,-8,-6,6,-2,9,-8,10,2,-8,2,6,-10],[-4,-3,2,6,-6,1,-8,-3,-2,10,10,-2,10,-10,1],[7,-9,-2,2,-8,-8,10,-3,-5,-3,7,-8,4,2,-4],[3,10,2,2,-10,10,-9,-6,-5,-9,9,-4,6,2,-1]]], dtype = "int16")#candidate|2003|(9, 8, 15)|const|int16
const_2004 = relay.const([[[-5,-2,9,7,-6,-3,-9,-1,-10,2,2,4,-6,1,-4],[7,-5,4,-6,5,2,-7,4,-3,-3,-6,-6,-5,3,6],[-4,-5,-3,2,-3,-3,5,-5,8,-7,7,-9,4,-3,-1],[-6,-3,-3,-3,-8,-10,-1,-1,-7,-8,-1,8,6,-4,-10],[-10,-10,-9,-3,-6,9,4,-2,-8,-3,3,-9,-5,-4,-6],[4,1,2,6,2,-6,7,-1,-4,-2,-5,-4,8,1,-8],[6,-4,-7,7,-2,5,-10,-8,5,-9,-3,-2,9,6,-1],[7,-10,2,-7,-3,10,7,-2,2,-10,-6,3,10,7,-2]],[[-2,-4,9,-10,-9,-7,10,-10,10,-2,2,3,-6,-9,-1],[-1,-9,-5,-5,9,7,2,10,2,5,-2,1,-2,2,-2],[-4,6,-10,-6,-6,-6,10,8,1,4,3,-2,-3,3,-8],[8,8,5,-5,-2,5,1,7,7,-1,-3,-7,1,9,-7],[1,-9,1,8,5,6,9,5,-1,3,1,8,-10,10,-7],[10,-2,8,5,9,7,9,-7,1,9,1,1,-10,10,-2],[-4,-4,1,10,-9,5,-8,-1,1,2,7,9,-3,-9,-6],[-2,3,-9,-10,-2,9,5,4,-2,-10,-4,-8,-5,4,5]],[[-4,2,-3,-6,1,-1,5,-8,6,5,-4,4,-4,4,4],[-9,8,-8,4,5,-3,-8,4,7,-5,7,3,-3,2,-6],[1,-5,-9,-10,-8,-8,1,9,-1,-7,-3,8,-8,3,-10],[-6,-4,-10,7,-4,4,8,-10,-3,7,9,-6,4,-8,6],[3,9,-5,10,8,7,-10,9,1,-10,4,6,6,6,6],[10,-3,9,-7,-8,-5,-6,9,4,9,-10,-3,7,-8,-3],[-2,-6,-1,3,-3,2,-7,2,6,-9,10,-10,-6,2,9],[-8,8,7,8,7,10,-9,8,6,7,-10,3,-10,6,-2]],[[-7,7,-4,-7,2,-4,-3,-3,6,6,-3,8,6,-6,2],[-9,-10,-6,-9,-7,-5,5,-5,1,-6,-5,-5,6,3,-8],[-3,3,3,10,-10,-5,9,5,10,5,6,6,3,7,-7],[-10,-1,-2,4,-8,-10,-1,7,-2,5,5,-7,5,7,7],[-6,-2,2,3,7,-10,6,-5,7,-2,-5,4,-9,2,-10],[10,6,10,8,-3,7,-4,-5,8,6,-4,8,-3,-6,5],[-7,-9,8,2,5,3,-9,6,5,5,5,-2,-9,2,-3],[-1,-3,-3,4,-9,9,2,8,-1,2,-2,-5,-10,1,-10]],[[-10,-3,5,-5,1,9,-5,-7,1,-6,2,-9,-4,1,-4],[10,-4,-8,10,8,-9,-9,-10,-9,-4,3,5,-3,5,-4],[5,-5,-8,-7,-8,8,-4,4,-5,6,-10,-5,4,-5,4],[-10,-5,7,9,2,1,-7,-6,10,5,-1,6,3,-4,1],[-10,-6,-7,10,8,-3,1,5,-10,1,4,2,5,-2,-4],[6,5,10,-6,-9,-2,5,-2,-3,9,10,5,3,-7,-9],[-9,4,-9,-7,-7,-1,-9,-4,-1,5,-2,-3,-7,7,3],[-5,-2,-6,7,8,-10,-3,-9,1,-8,2,-1,7,3,-2]],[[-9,-7,-9,-4,8,8,-4,8,2,5,-6,-9,4,-5,-7],[1,5,1,-3,-10,-8,9,-1,-7,-6,2,3,-9,7,-4],[-2,-2,-5,2,-7,-10,-1,1,8,7,-2,6,-2,2,8],[6,3,6,3,7,-10,-7,6,5,5,7,-2,-5,-9,-4],[5,8,9,5,2,2,-8,3,6,-7,-1,-2,-9,-7,-8],[-7,2,2,-9,-1,-8,5,1,-10,-7,2,3,-10,3,-1],[10,-3,-3,-2,-3,-5,6,-6,7,8,3,1,3,8,-9],[-6,-9,9,-5,6,6,6,-9,-2,10,-2,7,-9,-5,6]],[[-8,-10,1,-8,-2,4,-4,-1,5,-1,3,-8,-9,1,-5],[-7,-7,-9,8,-7,-2,10,1,10,5,3,-7,8,-9,9],[4,-7,2,-3,3,-1,-1,10,-2,-10,-4,-5,-5,8,-2],[7,2,10,10,-6,-3,8,8,8,2,7,2,-8,6,8],[-4,7,1,-2,1,5,-3,-8,5,-2,-5,-3,-4,-1,-9],[-10,7,9,-5,10,6,-7,-2,-1,2,-4,-4,-3,7,9],[-4,9,6,-9,6,4,9,-5,10,-6,1,1,-6,-2,-10],[-9,9,6,-3,-6,-8,-4,-4,6,5,6,3,-9,-4,1]],[[3,-8,5,10,3,-10,-8,6,1,8,5,2,-3,-4,-4],[-1,-3,1,-5,8,1,-8,2,1,-5,1,-4,5,-4,4],[-4,-8,6,-6,2,-8,4,2,-10,-1,-3,-5,5,-2,-9],[-8,-1,-1,-8,7,-5,-3,-3,-6,9,7,10,-8,-10,-4],[9,3,10,9,10,-8,-3,3,5,8,-9,-7,-7,-3,-7],[9,9,-10,-5,-7,-6,-10,-5,6,6,-5,1,1,-8,8],[-1,5,-6,-1,3,7,-2,-10,-2,6,-2,-1,4,4,8],[9,-6,1,9,-4,1,-6,8,7,-4,-10,-3,-3,6,-9]],[[7,6,-2,7,1,8,5,-5,9,5,-7,2,-7,-7,2],[7,-5,5,10,-3,-7,2,-2,-5,1,6,8,-7,5,-7],[-1,-8,-7,-6,-9,9,7,-8,-10,-1,4,8,9,6,-1],[-3,-7,-9,-6,-3,-1,10,6,8,-10,7,-8,7,-10,3],[6,-4,-7,-9,-5,9,-7,-5,-7,-8,-1,3,10,9,1],[-3,-6,-1,-9,9,5,1,8,-4,6,2,-7,-7,4,-8],[7,-1,-8,9,3,1,-7,1,-8,-10,6,-2,-8,-1,6],[-7,-1,-8,-3,6,3,5,10,5,10,2,9,1,6,10]]], dtype = "int16")#candidate|2004|(9, 8, 15)|const|int16
bop_2005 = relay.multiply(const_2003.astype('int16'), relay.reshape(const_2004.astype('int16'), relay.shape_of(const_2003))) # shape=(9, 8, 15)
output = relay.Tuple([bop_2005,])
output2 = relay.Tuple([bop_2005,])
func_2019 = relay.Function([], output)
mod['func_2019'] = func_2019
mod = relay.transform.InferType()(mod)
mutated_mod['func_2019'] = func_2019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2019_call = mutated_mod.get_global_var('func_2019')
call_2020 = func_2019_call()
output = call_2020
func_2021 = relay.Function([], output)
mutated_mod['func_2021'] = func_2021
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2024 = relay.var("var_2024", dtype = "uint16", shape = (5, 5, 4))#candidate|2024|(5, 5, 4)|var|uint16
const_2025 = relay.const([[[-6,4,-10,10],[-1,-8,3,-6],[7,4,7,7],[-10,-4,5,-1],[-3,-3,-10,-10]],[[7,3,5,6],[7,-5,2,10],[6,-7,2,-4],[-4,9,-9,6],[4,-8,7,10]],[[-6,2,-7,-1],[6,6,7,4],[-6,-5,1,-4],[1,5,-8,3],[10,-3,8,1]],[[-2,-2,6,10],[9,8,-5,7],[6,5,7,-7],[3,-5,6,5],[-3,-8,-2,-3]],[[-4,-3,3,6],[-1,5,-8,4],[-4,2,-5,9],[5,6,-6,2],[-10,-8,4,4]]], dtype = "uint16")#candidate|2025|(5, 5, 4)|const|uint16
bop_2026 = relay.less(var_2024.astype('bool'), relay.reshape(const_2025.astype('bool'), relay.shape_of(var_2024))) # shape=(5, 5, 4)
output = bop_2026
output2 = bop_2026
func_2031 = relay.Function([var_2024,], output)
mod['func_2031'] = func_2031
mod = relay.transform.InferType()(mod)
var_2032 = relay.var("var_2032", dtype = "uint16", shape = (5, 5, 4))#candidate|2032|(5, 5, 4)|var|uint16
output = func_2031(var_2032)
func_2033 = relay.Function([var_2032], output)
mutated_mod['func_2033'] = func_2033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_2138 = func_1803_call()
call_2139 = func_1803_call()
var_2145 = relay.var("var_2145", dtype = "float64", shape = (2, 9, 7))#candidate|2145|(2, 9, 7)|var|float64
bop_2146 = relay.bitwise_or(call_2138.astype('int32'), relay.reshape(var_2145.astype('int32'), relay.shape_of(call_2138))) # shape=(2, 9, 7)
bop_2149 = relay.bitwise_or(call_2139.astype('int32'), relay.reshape(var_2145.astype('int32'), relay.shape_of(call_2139))) # shape=(2, 9, 7)
output = relay.Tuple([bop_2146,])
output2 = relay.Tuple([bop_2149,])
func_2150 = relay.Function([var_2145,], output)
mod['func_2150'] = func_2150
mod = relay.transform.InferType()(mod)
var_2151 = relay.var("var_2151", dtype = "float64", shape = (2, 9, 7))#candidate|2151|(2, 9, 7)|var|float64
output = func_2150(var_2151)
func_2152 = relay.Function([var_2151], output)
mutated_mod['func_2152'] = func_2152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_2163 = func_1803_call()
call_2164 = func_1803_call()
func_968_call = mod.get_global_var('func_968')
func_970_call = mutated_mod.get_global_var('func_970')
var_2166 = relay.var("var_2166", dtype = "uint64", shape = (1620,))#candidate|2166|(1620,)|var|uint64
call_2165 = relay.TupleGetItem(func_968_call(relay.reshape(var_2166.astype('uint64'), [1620,])), 2)
call_2167 = relay.TupleGetItem(func_970_call(relay.reshape(var_2166.astype('uint64'), [1620,])), 2)
uop_2171 = relay.log(call_2163.astype('float32')) # shape=(2, 9, 7)
uop_2173 = relay.log(call_2164.astype('float32')) # shape=(2, 9, 7)
output = relay.Tuple([call_2165,var_2166,uop_2171,])
output2 = relay.Tuple([call_2167,var_2166,uop_2173,])
func_2174 = relay.Function([var_2166,], output)
mod['func_2174'] = func_2174
mod = relay.transform.InferType()(mod)
var_2175 = relay.var("var_2175", dtype = "uint64", shape = (1620,))#candidate|2175|(1620,)|var|uint64
output = func_2174(var_2175)
func_2176 = relay.Function([var_2175], output)
mutated_mod['func_2176'] = func_2176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mod.get_global_var('func_1578')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_2183 = func_1578_call()
call_2184 = func_1578_call()
func_1094_call = mod.get_global_var('func_1094')
func_1098_call = mutated_mod.get_global_var('func_1098')
const_2214 = relay.const(-1, dtype = "uint32")#candidate|2214|()|const|uint32
var_2215 = relay.var("var_2215", dtype = "uint32", shape = (15,))#candidate|2215|(15,)|var|uint32
var_2216 = relay.var("var_2216", dtype = "int32", shape = (60, 20))#candidate|2216|(60, 20)|var|int32
call_2213 = relay.TupleGetItem(func_1094_call(relay.reshape(const_2214.astype('uint32'), []), relay.reshape(var_2215.astype('uint32'), [1, 1, 15]), relay.reshape(var_2216.astype('int32'), [1200,]), ), 0)
call_2217 = relay.TupleGetItem(func_1098_call(relay.reshape(const_2214.astype('uint32'), []), relay.reshape(var_2215.astype('uint32'), [1, 1, 15]), relay.reshape(var_2216.astype('int32'), [1200,]), ), 0)
output = relay.Tuple([call_2183,call_2213,const_2214,var_2215,var_2216,])
output2 = relay.Tuple([call_2184,call_2217,const_2214,var_2215,var_2216,])
func_2222 = relay.Function([var_2215,var_2216,], output)
mod['func_2222'] = func_2222
mod = relay.transform.InferType()(mod)
var_2223 = relay.var("var_2223", dtype = "uint32", shape = (15,))#candidate|2223|(15,)|var|uint32
var_2224 = relay.var("var_2224", dtype = "int32", shape = (60, 20))#candidate|2224|(60, 20)|var|int32
output = func_2222(var_2223,var_2224,)
func_2225 = relay.Function([var_2223,var_2224,], output)
mutated_mod['func_2225'] = func_2225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_2271 = func_1117_call()
call_2272 = func_1117_call()
output = relay.Tuple([call_2271,])
output2 = relay.Tuple([call_2272,])
func_2284 = relay.Function([], output)
mod['func_2284'] = func_2284
mod = relay.transform.InferType()(mod)
output = func_2284()
func_2285 = relay.Function([], output)
mutated_mod['func_2285'] = func_2285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mod.get_global_var('func_1578')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_2295 = func_1578_call()
call_2296 = func_1578_call()
output = call_2295
output2 = call_2296
func_2298 = relay.Function([], output)
mod['func_2298'] = func_2298
mod = relay.transform.InferType()(mod)
mutated_mod['func_2298'] = func_2298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2298_call = mutated_mod.get_global_var('func_2298')
call_2299 = func_2298_call()
output = call_2299
func_2300 = relay.Function([], output)
mutated_mod['func_2300'] = func_2300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2321 = relay.var("var_2321", dtype = "float32", shape = ())#candidate|2321|()|var|float32
const_2322 = relay.const([[[1.460173,-4.239581,-6.517624,7.256615,6.737064,-1.770004,1.501376],[1.782684,-5.501755,-4.562779,-2.154496,0.679959,-1.487963,-0.613713],[5.715369,6.112041,3.130920,4.887064,-8.965245,5.903343,8.305856],[6.939470,2.096641,-3.144687,-0.698002,-3.329608,6.599178,6.189756],[3.575545,-5.436055,8.151146,8.007158,0.828046,-5.023441,-4.350631],[1.637316,3.850309,-4.732152,9.288115,-1.824062,0.270762,-9.896679],[2.437979,6.588243,6.182598,3.918032,5.604661,-5.758688,6.407617],[9.096047,-0.641644,0.343720,2.476509,-7.981669,7.573956,-3.927660],[9.816519,2.742238,5.433394,1.203213,-6.384001,1.442587,-4.116837],[-2.431575,6.449692,5.751532,-2.299024,1.855576,-1.438813,-5.140625],[8.011547,-8.505331,-1.880227,4.314467,-4.004715,-6.425623,1.687720],[4.213486,9.017132,-3.495735,3.584707,-7.857029,-1.698526,8.213038]],[[2.528297,-0.723000,8.623030,9.890929,3.089163,8.098085,-8.772170],[-6.667990,1.608970,7.457174,-1.741790,5.221621,9.935942,2.159775],[-0.087868,-7.435885,8.446312,-5.554162,3.152224,-9.092757,-4.494422],[8.688617,1.955183,-3.874809,7.176582,-0.503336,1.669728,3.524642],[5.493975,1.579503,6.211025,-6.654548,-6.113230,4.676905,-2.048845],[-6.121200,3.551508,2.508776,-8.120409,-8.789681,3.356768,5.669796],[-6.847249,7.663803,8.155201,4.242094,-2.429321,2.277501,-6.485679],[4.489329,-1.797564,6.288059,5.412853,0.694833,2.631757,3.291983],[-5.539683,5.163833,8.539299,-1.939256,7.623466,2.108672,0.245774],[2.662597,-4.590562,1.915732,-6.024930,-9.855832,4.067799,1.296748],[6.094625,-3.183632,9.237121,2.827459,-2.042120,-5.656564,3.573189],[-0.589803,-7.179052,4.647686,-4.204370,-5.219447,3.020978,-8.513676]],[[-0.054042,4.822784,-7.081295,3.866756,-5.367434,-9.620937,-5.515895],[-2.647497,-0.444713,6.404425,-9.285000,5.783138,7.868143,-7.728798],[8.585967,9.784121,-7.023401,6.728702,-1.157698,0.803879,6.099233],[-1.742742,-4.259498,-6.059655,1.853720,5.543995,-6.041859,-7.585006],[-4.933266,-5.333895,3.533958,2.072304,7.194232,-8.400553,3.641654],[-1.131146,5.810125,8.180466,5.217200,-4.238179,2.142787,5.567959],[0.006498,2.534103,-5.865698,9.347400,8.297709,4.285339,5.808779],[2.747899,4.729862,-1.369857,-4.744367,-3.096047,4.639688,-3.105115],[3.625977,-4.520068,5.756478,-2.751766,0.566588,2.391732,5.739064],[8.228561,-1.247178,3.076781,-3.994442,-6.589694,6.583561,9.177827],[2.847254,1.030182,9.755510,9.668052,9.800142,-9.763283,7.354773],[-4.466464,-4.768225,-7.938782,-4.389054,6.771181,7.705394,4.690393]],[[-1.233451,3.608930,-9.876616,-5.836714,-6.665937,-2.457076,-8.853508],[-4.627138,-6.886107,-8.513821,8.041384,6.236263,-6.559960,-1.168221],[-0.109004,5.177458,-6.447227,-8.194971,0.076382,-6.117316,8.010789],[-2.844507,2.790120,2.659254,9.219440,8.179759,-7.931125,-0.610887],[2.256550,-7.524589,-3.334967,-0.343991,-5.846459,5.926492,-1.551591],[1.756263,-8.548443,0.067364,4.390471,0.909372,-7.615351,9.116904],[7.755716,0.666325,-4.577013,-8.276798,2.024254,-9.258227,8.662571],[-0.872264,3.922515,5.165461,5.704734,-1.805782,-1.799568,5.148356],[-5.128472,9.329790,-7.742960,-2.565920,6.277330,9.354532,4.248721],[-0.284182,3.254503,-6.402046,0.525052,-3.649436,-8.526985,3.401536],[-3.883702,1.241077,1.451620,-8.489221,-3.855562,-9.290650,1.903116],[-0.075123,0.979510,6.202198,7.756104,-9.348127,-0.068740,4.173990]],[[9.962953,0.880360,3.393426,-2.740617,9.517191,-9.340430,1.933825],[3.856402,-5.492905,5.548219,7.985861,-5.956361,1.989058,2.689710],[8.163762,-6.611840,3.660577,-7.837699,8.518066,4.916903,5.425449],[-2.744578,-7.737037,6.655863,9.462743,7.660533,-4.441790,-9.527052],[-8.197508,7.133174,-7.846156,-0.269337,6.659613,5.346595,5.708700],[3.099354,-2.088121,5.948883,-4.865218,-6.259128,2.847110,-5.744113],[9.401034,3.409511,-5.061764,-4.364237,7.503468,-6.764421,6.945784],[2.573164,-7.774242,-5.928868,-8.445582,8.985196,-7.397004,-4.440362],[7.210893,5.986174,9.131435,-1.434136,4.904280,2.483730,2.570515],[2.076555,6.394964,7.869456,-0.740936,-0.600248,4.631348,4.911511],[9.450785,-2.598913,-3.878365,-0.294397,-1.473608,0.688377,8.864019],[-0.586112,-9.043545,7.003353,-7.369245,5.079830,-3.368148,4.920230]],[[2.996533,-1.804963,6.358779,-1.479817,-2.990872,0.070711,5.626174],[9.344748,1.058780,-0.820583,7.349356,0.167004,-9.874835,-4.041639],[0.956003,3.948428,-7.389962,6.382518,-1.147411,7.714867,-4.516525],[9.655056,9.373874,-5.448523,5.773974,-8.486717,5.607854,-6.375501],[-6.200838,-5.181170,9.250997,8.648361,1.706103,4.081793,-8.942430],[4.954462,3.895192,-7.885282,2.277290,-5.466878,3.384228,9.038500],[-3.203673,8.459589,3.232400,-0.835657,9.213383,-4.922622,3.310962],[-0.949751,3.102095,-6.335840,-3.207562,6.976434,-0.934219,-1.447277],[7.605030,-3.884575,-2.188537,-7.455961,5.066099,-5.582674,-5.914232],[-9.516251,-5.043247,0.021785,-2.243427,-2.952953,9.929906,-7.618263],[1.263927,6.062570,-7.507705,7.836094,7.644093,-1.834563,-1.699279],[6.639478,-2.376920,-8.485713,-9.117082,-7.680457,-5.914863,-6.754021]],[[-3.745129,8.260932,7.476089,-3.312954,-8.596613,-9.727605,-8.349285],[-0.164909,0.705799,2.639649,3.285825,-2.155553,-8.209420,-7.634205],[-6.997792,-3.053450,5.320752,-0.433386,-4.036047,3.328547,-7.546937],[3.746163,-2.711068,-8.411175,0.649382,6.183297,9.329866,0.372690],[-6.628894,-9.964124,-7.615464,-1.731608,-5.876467,-0.529562,6.092314],[4.623799,-5.679009,-7.926934,6.902450,-0.831305,0.567346,2.963548],[-9.639344,-2.288290,8.883196,3.009422,4.389603,1.344867,-9.261197],[-2.640465,6.495676,-4.402806,-0.171364,3.246796,5.918890,8.183606],[5.279668,8.924202,6.082631,9.932295,4.114360,-0.522629,-2.332056],[-2.741700,2.571528,-9.555321,7.913568,-0.925117,-5.082558,9.843582],[-8.456178,-7.414279,5.959687,4.383631,3.143044,4.516596,7.485311],[8.145979,-8.556913,-5.036765,-1.477853,-7.471830,4.744263,-1.541130]],[[-9.172976,6.352532,-0.858739,3.952261,-6.372695,-7.757726,1.133280],[-1.016829,2.077983,-1.804177,1.987272,4.458067,3.289553,8.645161],[0.924767,-5.453856,2.815538,-4.177168,9.464244,-3.455104,-7.799395],[8.925298,-2.654941,-4.120177,8.187242,4.916517,9.281041,9.959513],[7.462988,-2.436859,-4.218546,-7.835651,-1.437439,4.134901,-9.464015],[6.059880,-7.898887,-0.334929,-6.615212,-8.063489,2.825011,4.650108],[-8.390481,-8.698749,1.920340,-6.022867,7.882731,-1.007472,2.786741],[-1.311644,3.944929,-6.445947,-6.842749,-9.894365,5.220620,8.877802],[9.091321,-2.736132,1.105093,6.794009,0.466077,-2.405056,-1.689997],[-9.136342,-0.250515,-0.771772,4.157315,9.120957,0.991510,-3.560524],[-7.979463,-5.245908,-2.206473,7.729679,0.442852,3.282308,3.206832],[5.687566,-0.266512,5.702903,-1.813939,-1.094267,7.329660,-5.040211]]], dtype = "float32")#candidate|2322|(8, 12, 7)|const|float32
bop_2323 = relay.power(var_2321.astype('float32'), const_2322.astype('float32')) # shape=(8, 12, 7)
func_2031_call = mod.get_global_var('func_2031')
func_2033_call = mutated_mod.get_global_var('func_2033')
const_2334 = relay.const([10,-10,-9,-5,4,3,4,3,1,7,-4,-9,-4,-1,-9,-8,8,-4,-10,3,10,-9,8,-8,-4,10,-9,8,6,-4,2,7,-10,6,1,6,-5,-8,9,-1,3,10,-2,3,-10,4,1,-9,-4,2,4,1,-3,2,4,-4,5,-9,4,7,-9,3,6,-10,9,-8,-10,-2,-7,-6,10,-8,-5,3,8,-1,-3,-6,8,-9,-2,8,7,6,6,5,-1,10,9,-5,-3,6,1,-7,2,6,5,3,-5,8], dtype = "uint16")#candidate|2334|(100,)|const|uint16
call_2333 = func_2031_call(relay.reshape(const_2334.astype('uint16'), [5, 5, 4]))
call_2335 = func_2031_call(relay.reshape(const_2334.astype('uint16'), [5, 5, 4]))
bop_2341 = relay.floor_divide(const_2322.astype('float64'), var_2321.astype('float64')) # shape=(8, 12, 7)
output = relay.Tuple([bop_2323,call_2333,const_2334,bop_2341,])
output2 = relay.Tuple([bop_2323,call_2335,const_2334,bop_2341,])
func_2350 = relay.Function([var_2321,], output)
mod['func_2350'] = func_2350
mod = relay.transform.InferType()(mod)
var_2351 = relay.var("var_2351", dtype = "float32", shape = ())#candidate|2351|()|var|float32
output = func_2350(var_2351)
func_2352 = relay.Function([var_2351], output)
mutated_mod['func_2352'] = func_2352
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2376 = relay.const([[[-8.975653,-6.425261,-7.474325],[-3.973758,3.649760,2.066763],[0.151454,-5.376552,5.885698],[-6.355024,4.825537,7.888293],[9.522173,-6.171974,-4.166235],[5.234327,5.648960,-3.155880],[-9.623769,-8.827683,-5.265062],[-6.430342,-3.111010,-2.981564]],[[-9.995100,-1.148434,9.981349],[7.147944,8.011592,-2.799631],[-1.289916,-1.184186,9.315299],[6.458717,-5.133181,8.172892],[8.112743,-5.764487,-0.768319],[-3.663343,1.461704,9.818925],[-4.894868,7.147513,-8.242309],[0.761235,-7.786201,6.830758]],[[-3.441931,7.400356,-0.333345],[-2.082294,-1.617400,-2.343955],[1.292184,1.163544,7.754209],[0.670937,-6.772080,-1.108307],[-6.902070,5.363758,1.060339],[-4.204721,4.326399,-1.429946],[-2.548773,-7.672151,-4.378822],[-5.738372,1.654587,-6.426209]],[[-3.383040,-1.246703,5.324982],[6.561057,-3.789876,-5.035868],[4.355695,3.176778,-2.343286],[1.920377,-5.124009,-1.483406],[-9.387225,-8.105354,-0.516887],[-0.022305,0.162733,9.071758],[6.674967,-3.022297,8.164567],[-9.928539,-7.195335,-7.456314]],[[6.089229,2.039511,8.363830],[-0.594912,-0.701662,2.769328],[-4.522710,0.956645,-7.303941],[-8.395114,-2.408875,5.767805],[8.238378,-1.621024,1.200278],[-1.763571,-5.471793,5.075137],[3.885266,3.285603,-1.348642],[5.710996,0.092276,-5.434484]],[[2.501102,3.121721,-2.265990],[-3.509276,-9.237032,3.840214],[8.724995,3.906187,9.093320],[1.095495,-3.875858,8.513318],[7.367974,7.767000,4.847631],[-9.639358,-3.708432,-7.065726],[-0.988867,-8.348846,-5.775012],[-3.548660,-3.314252,0.452054]],[[-8.727898,-5.312276,-7.724029],[-9.550452,-8.250339,-8.323434],[4.635410,7.482429,-8.821687],[-0.026545,-5.067756,-3.719607],[-6.977005,-3.107846,-4.470245],[1.023249,-6.652940,8.168332],[7.008478,-8.742236,-7.598507],[0.042936,1.036968,1.648505]],[[1.236253,-9.758252,9.042749],[-9.697643,0.070577,-2.664526],[-2.169076,8.578960,9.472848],[5.425293,-8.204502,5.118949],[-3.838290,-1.290262,1.192375],[-1.847932,-9.615382,-5.626519],[8.487694,8.880727,2.607486],[-2.778122,2.720150,-5.715730]],[[-6.905848,7.240406,6.319991],[4.596469,-0.322793,3.453780],[-3.440877,-8.539413,-8.050611],[-9.153451,9.592109,-5.910539],[4.960962,-8.999593,-7.954635],[8.370868,1.008541,6.898882],[6.973463,-4.080441,6.167733],[4.364887,4.765171,-6.442781]],[[-4.776341,0.263652,-9.688921],[-7.441795,-2.559811,0.865948],[7.274564,-9.092662,5.148172],[8.135410,-3.529887,-1.556976],[8.930405,0.942546,9.113561],[-3.773822,-9.098562,6.886364],[-8.520068,-9.493862,2.968348],[5.970607,5.457751,7.048014]],[[-7.300950,3.362364,-7.817153],[-9.359643,-0.052833,3.062120],[7.042811,4.563936,5.726673],[-6.223941,2.587603,1.151697],[-5.408252,1.376137,-7.069589],[2.818043,-1.651168,0.001541],[-1.774443,-2.787992,-3.051636],[9.309669,-2.748102,2.154764]],[[6.764188,5.501426,9.215103],[8.014834,1.228610,4.342134],[1.748511,-8.859739,8.657977],[3.276842,3.462190,-5.588456],[3.578735,0.225373,6.278261],[6.366776,5.219476,5.082906],[0.250311,-7.085280,5.030135],[-0.868494,-6.244340,-2.533154]]], dtype = "float64")#candidate|2376|(12, 8, 3)|const|float64
uop_2377 = relay.atanh(const_2376.astype('float64')) # shape=(12, 8, 3)
bop_2380 = relay.divide(uop_2377.astype('float32'), relay.reshape(const_2376.astype('float32'), relay.shape_of(uop_2377))) # shape=(12, 8, 3)
output = relay.Tuple([bop_2380,])
output2 = relay.Tuple([bop_2380,])
func_2385 = relay.Function([], output)
mod['func_2385'] = func_2385
mod = relay.transform.InferType()(mod)
output = func_2385()
func_2386 = relay.Function([], output)
mutated_mod['func_2386'] = func_2386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_2396 = func_1803_call()
call_2397 = func_1803_call()
func_2174_call = mod.get_global_var('func_2174')
func_2176_call = mutated_mod.get_global_var('func_2176')
var_2399 = relay.var("var_2399", dtype = "uint64", shape = (18, 90))#candidate|2399|(18, 90)|var|uint64
call_2398 = relay.TupleGetItem(func_2174_call(relay.reshape(var_2399.astype('uint64'), [1620,])), 2)
call_2400 = relay.TupleGetItem(func_2176_call(relay.reshape(var_2399.astype('uint64'), [1620,])), 2)
func_642_call = mod.get_global_var('func_642')
func_644_call = mutated_mod.get_global_var('func_644')
call_2402 = func_642_call(relay.reshape(var_2399.astype('uint64'), [15, 12, 9]))
call_2403 = func_642_call(relay.reshape(var_2399.astype('uint64'), [15, 12, 9]))
bop_2405 = relay.left_shift(var_2399.astype('uint16'), relay.reshape(call_2402.astype('uint16'), relay.shape_of(var_2399))) # shape=(18, 90)
bop_2408 = relay.left_shift(var_2399.astype('uint16'), relay.reshape(call_2403.astype('uint16'), relay.shape_of(var_2399))) # shape=(18, 90)
uop_2432 = relay.tan(call_2402.astype('float32')) # shape=(15, 12, 9)
uop_2434 = relay.tan(call_2403.astype('float32')) # shape=(15, 12, 9)
func_808_call = mod.get_global_var('func_808')
func_811_call = mutated_mod.get_global_var('func_811')
const_2449 = relay.const([2.985265,-4.782869,9.321373,-0.133801,-3.736745,3.078522,7.162240,-9.308052,-1.381564,-4.836020,4.332601,-1.238796,-4.792081,-8.597465,2.496528,2.963197,2.397676,-6.969219,4.580947,5.158575,0.351960,2.812893,1.146866,0.416598,7.977138,6.490036,7.972647,-8.862217,-0.855960,6.201417,6.690114,-1.300835,9.519003,-8.299012,-9.154459,-5.564839,-3.792753,-2.616759,7.010071,1.932576,5.345798,5.603236,4.340741,9.390016,3.153719,6.106797,8.823913,5.245850,-8.672839,1.317335,2.794357,-8.162211,0.092362,2.730948,-9.434263,7.168393,5.300667,9.921171,6.842205,-5.258838,5.476152,2.697392,-9.049119,3.101995,-9.145219,0.407217,-6.211496,0.887045,-5.105969,-7.109836,-9.731108,-9.714706,9.459315,-1.514993,-0.745021,5.555207,-4.857031,4.149174], dtype = "float64")#candidate|2449|(78,)|const|float64
call_2448 = relay.TupleGetItem(func_808_call(relay.reshape(const_2449.astype('float64'), [2, 13, 3])), 0)
call_2450 = relay.TupleGetItem(func_811_call(relay.reshape(const_2449.astype('float64'), [2, 13, 3])), 0)
func_2150_call = mod.get_global_var('func_2150')
func_2152_call = mutated_mod.get_global_var('func_2152')
call_2461 = relay.TupleGetItem(func_2150_call(relay.reshape(call_2398.astype('float64'), [2, 9, 7])), 0)
call_2462 = relay.TupleGetItem(func_2152_call(relay.reshape(call_2398.astype('float64'), [2, 9, 7])), 0)
output = relay.Tuple([call_2396,call_2398,bop_2405,uop_2432,call_2448,const_2449,call_2461,])
output2 = relay.Tuple([call_2397,call_2400,bop_2408,uop_2434,call_2450,const_2449,call_2462,])
func_2473 = relay.Function([var_2399,], output)
mod['func_2473'] = func_2473
mod = relay.transform.InferType()(mod)
var_2474 = relay.var("var_2474", dtype = "uint64", shape = (18, 90))#candidate|2474|(18, 90)|var|uint64
output = func_2473(var_2474)
func_2475 = relay.Function([var_2474], output)
mutated_mod['func_2475'] = func_2475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1920_call = mod.get_global_var('func_1920')
func_1921_call = mutated_mod.get_global_var('func_1921')
call_2477 = relay.TupleGetItem(func_1920_call(), 0)
call_2478 = relay.TupleGetItem(func_1921_call(), 0)
output = call_2477
output2 = call_2478
func_2481 = relay.Function([], output)
mod['func_2481'] = func_2481
mod = relay.transform.InferType()(mod)
output = func_2481()
func_2482 = relay.Function([], output)
mutated_mod['func_2482'] = func_2482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1920_call = mod.get_global_var('func_1920')
func_1921_call = mutated_mod.get_global_var('func_1921')
call_2495 = relay.TupleGetItem(func_1920_call(), 0)
call_2496 = relay.TupleGetItem(func_1921_call(), 0)
uop_2528 = relay.log2(call_2495.astype('float64')) # shape=(2, 9, 7)
uop_2530 = relay.log2(call_2496.astype('float64')) # shape=(2, 9, 7)
var_2539 = relay.var("var_2539", dtype = "float64", shape = (2, 9, 7))#candidate|2539|(2, 9, 7)|var|float64
bop_2540 = relay.subtract(uop_2528.astype('int16'), relay.reshape(var_2539.astype('int16'), relay.shape_of(uop_2528))) # shape=(2, 9, 7)
bop_2543 = relay.subtract(uop_2530.astype('int16'), relay.reshape(var_2539.astype('int16'), relay.shape_of(uop_2530))) # shape=(2, 9, 7)
uop_2544 = relay.sqrt(call_2495.astype('float64')) # shape=(2, 9, 7)
uop_2546 = relay.sqrt(call_2496.astype('float64')) # shape=(2, 9, 7)
output = relay.Tuple([bop_2540,uop_2544,])
output2 = relay.Tuple([bop_2543,uop_2546,])
func_2547 = relay.Function([var_2539,], output)
mod['func_2547'] = func_2547
mod = relay.transform.InferType()(mod)
var_2548 = relay.var("var_2548", dtype = "float64", shape = (2, 9, 7))#candidate|2548|(2, 9, 7)|var|float64
output = func_2547(var_2548)
func_2549 = relay.Function([var_2548], output)
mutated_mod['func_2549'] = func_2549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2385_call = mod.get_global_var('func_2385')
func_2386_call = mutated_mod.get_global_var('func_2386')
call_2578 = relay.TupleGetItem(func_2385_call(), 0)
call_2579 = relay.TupleGetItem(func_2386_call(), 0)
output = relay.Tuple([call_2578,])
output2 = relay.Tuple([call_2579,])
func_2582 = relay.Function([], output)
mod['func_2582'] = func_2582
mod = relay.transform.InferType()(mod)
output = func_2582()
func_2583 = relay.Function([], output)
mutated_mod['func_2583'] = func_2583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2632 = relay.var("var_2632", dtype = "int32", shape = (12, 10, 11))#candidate|2632|(12, 10, 11)|var|int32
var_2633 = relay.var("var_2633", dtype = "int32", shape = (12, 10, 11))#candidate|2633|(12, 10, 11)|var|int32
bop_2634 = relay.equal(var_2632.astype('bool'), relay.reshape(var_2633.astype('bool'), relay.shape_of(var_2632))) # shape=(12, 10, 11)
uop_2651 = relay.acosh(var_2632.astype('float64')) # shape=(12, 10, 11)
output = relay.Tuple([bop_2634,uop_2651,])
output2 = relay.Tuple([bop_2634,uop_2651,])
func_2660 = relay.Function([var_2632,var_2633,], output)
mod['func_2660'] = func_2660
mod = relay.transform.InferType()(mod)
mutated_mod['func_2660'] = func_2660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mutated_mod.get_global_var('func_2660')
var_2662 = relay.var("var_2662", dtype = "int32", shape = (12, 10, 11))#candidate|2662|(12, 10, 11)|var|int32
var_2663 = relay.var("var_2663", dtype = "int32", shape = (12, 10, 11))#candidate|2663|(12, 10, 11)|var|int32
call_2661 = func_2660_call(var_2662,var_2663,)
output = call_2661
func_2664 = relay.Function([var_2662,var_2663,], output)
mutated_mod['func_2664'] = func_2664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2721 = relay.var("var_2721", dtype = "float32", shape = (2, 12, 8))#candidate|2721|(2, 12, 8)|var|float32
uop_2722 = relay.asin(var_2721.astype('float32')) # shape=(2, 12, 8)
var_2737 = relay.var("var_2737", dtype = "float32", shape = (2, 12, 8))#candidate|2737|(2, 12, 8)|var|float32
bop_2738 = relay.bitwise_and(var_2721.astype('int64'), relay.reshape(var_2737.astype('int64'), relay.shape_of(var_2721))) # shape=(2, 12, 8)
uop_2741 = relay.log2(uop_2722.astype('float64')) # shape=(2, 12, 8)
bop_2748 = relay.add(uop_2741.astype('int64'), relay.reshape(var_2737.astype('int64'), relay.shape_of(uop_2741))) # shape=(2, 12, 8)
output = relay.Tuple([bop_2738,bop_2748,])
output2 = relay.Tuple([bop_2738,bop_2748,])
func_2752 = relay.Function([var_2721,var_2737,], output)
mod['func_2752'] = func_2752
mod = relay.transform.InferType()(mod)
var_2753 = relay.var("var_2753", dtype = "float32", shape = (2, 12, 8))#candidate|2753|(2, 12, 8)|var|float32
var_2754 = relay.var("var_2754", dtype = "float32", shape = (2, 12, 8))#candidate|2754|(2, 12, 8)|var|float32
output = func_2752(var_2753,var_2754,)
func_2755 = relay.Function([var_2753,var_2754,], output)
mutated_mod['func_2755'] = func_2755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2019_call = mod.get_global_var('func_2019')
func_2021_call = mutated_mod.get_global_var('func_2021')
call_2825 = relay.TupleGetItem(func_2019_call(), 0)
call_2826 = relay.TupleGetItem(func_2021_call(), 0)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_2832 = relay.TupleGetItem(func_1200_call(), 1)
call_2833 = relay.TupleGetItem(func_1201_call(), 1)
output = relay.Tuple([call_2825,call_2832,])
output2 = relay.Tuple([call_2826,call_2833,])
func_2838 = relay.Function([], output)
mod['func_2838'] = func_2838
mod = relay.transform.InferType()(mod)
mutated_mod['func_2838'] = func_2838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2838_call = mutated_mod.get_global_var('func_2838')
call_2839 = func_2838_call()
output = call_2839
func_2840 = relay.Function([], output)
mutated_mod['func_2840'] = func_2840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2582_call = mod.get_global_var('func_2582')
func_2583_call = mutated_mod.get_global_var('func_2583')
call_2855 = relay.TupleGetItem(func_2582_call(), 0)
call_2856 = relay.TupleGetItem(func_2583_call(), 0)
var_2860 = relay.var("var_2860", dtype = "float32", shape = (12, 8, 3))#candidate|2860|(12, 8, 3)|var|float32
bop_2861 = relay.logical_xor(call_2855.astype('uint16'), relay.reshape(var_2860.astype('uint16'), relay.shape_of(call_2855))) # shape=(12, 8, 3)
bop_2864 = relay.logical_xor(call_2856.astype('uint16'), relay.reshape(var_2860.astype('uint16'), relay.shape_of(call_2856))) # shape=(12, 8, 3)
output = relay.Tuple([bop_2861,])
output2 = relay.Tuple([bop_2864,])
func_2901 = relay.Function([var_2860,], output)
mod['func_2901'] = func_2901
mod = relay.transform.InferType()(mod)
mutated_mod['func_2901'] = func_2901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2902 = relay.var("var_2902", dtype = "float32", shape = (12, 8, 3))#candidate|2902|(12, 8, 3)|var|float32
func_2901_call = mutated_mod.get_global_var('func_2901')
call_2903 = func_2901_call(var_2902)
output = call_2903
func_2904 = relay.Function([var_2902], output)
mutated_mod['func_2904'] = func_2904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2019_call = mod.get_global_var('func_2019')
func_2021_call = mutated_mod.get_global_var('func_2021')
call_2914 = relay.TupleGetItem(func_2019_call(), 0)
call_2915 = relay.TupleGetItem(func_2021_call(), 0)
func_1117_call = mod.get_global_var('func_1117')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_2916 = func_1117_call()
call_2917 = func_1117_call()
func_2350_call = mod.get_global_var('func_2350')
func_2352_call = mutated_mod.get_global_var('func_2352')
var_2931 = relay.var("var_2931", dtype = "float32", shape = ())#candidate|2931|()|var|float32
call_2930 = relay.TupleGetItem(func_2350_call(relay.reshape(var_2931.astype('float32'), [])), 2)
call_2932 = relay.TupleGetItem(func_2352_call(relay.reshape(var_2931.astype('float32'), [])), 2)
output = relay.Tuple([call_2914,call_2916,call_2930,var_2931,])
output2 = relay.Tuple([call_2915,call_2917,call_2932,var_2931,])
func_2936 = relay.Function([var_2931,], output)
mod['func_2936'] = func_2936
mod = relay.transform.InferType()(mod)
var_2937 = relay.var("var_2937", dtype = "float32", shape = ())#candidate|2937|()|var|float32
output = func_2936(var_2937)
func_2938 = relay.Function([var_2937], output)
mutated_mod['func_2938'] = func_2938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2019_call = mod.get_global_var('func_2019')
func_2021_call = mutated_mod.get_global_var('func_2021')
call_2966 = relay.TupleGetItem(func_2019_call(), 0)
call_2967 = relay.TupleGetItem(func_2021_call(), 0)
func_2660_call = mod.get_global_var('func_2660')
func_2664_call = mutated_mod.get_global_var('func_2664')
var_2971 = relay.var("var_2971", dtype = "int32", shape = (1320,))#candidate|2971|(1320,)|var|int32
call_2970 = relay.TupleGetItem(func_2660_call(relay.reshape(var_2971.astype('int32'), [12, 10, 11]), relay.reshape(var_2971.astype('int32'), [12, 10, 11]), ), 1)
call_2972 = relay.TupleGetItem(func_2664_call(relay.reshape(var_2971.astype('int32'), [12, 10, 11]), relay.reshape(var_2971.astype('int32'), [12, 10, 11]), ), 1)
bop_2996 = relay.bitwise_and(call_2970.astype('int16'), relay.reshape(var_2971.astype('int16'), relay.shape_of(call_2970))) # shape=(12, 10, 11)
bop_2999 = relay.bitwise_and(call_2972.astype('int16'), relay.reshape(var_2971.astype('int16'), relay.shape_of(call_2972))) # shape=(12, 10, 11)
uop_3032 = relay.log10(call_2966.astype('float32')) # shape=(9, 8, 15)
uop_3034 = relay.log10(call_2967.astype('float32')) # shape=(9, 8, 15)
uop_3039 = relay.exp(uop_3032.astype('float32')) # shape=(9, 8, 15)
uop_3041 = relay.exp(uop_3034.astype('float32')) # shape=(9, 8, 15)
uop_3046 = relay.log2(uop_3032.astype('float64')) # shape=(9, 8, 15)
uop_3048 = relay.log2(uop_3034.astype('float64')) # shape=(9, 8, 15)
uop_3050 = relay.cos(call_2966.astype('float64')) # shape=(9, 8, 15)
uop_3052 = relay.cos(call_2967.astype('float64')) # shape=(9, 8, 15)
func_968_call = mod.get_global_var('func_968')
func_970_call = mutated_mod.get_global_var('func_970')
const_3058 = relay.const([-9,-3,-7,-4,-10,5,-2,-1,3,6,7,2,8,-5,-6,-6,3,6,2,5,6,1,-2,-10,4,-4,4,2,-3,9,-9,-8,2,2,-5,-8,-6,6,-9,-3,-2,5,-5,10,-4,-9,3,5,1,-9,-4,-5,6,-8,-10,10,-8,-10,4,2,10,-10,7,8,3,-2,6,9,3,-7,-8,6,1,-8,-7,-2,-2,-10,10,-6,-7,1,-8,-3,6,3,-6,10,7,4,-10,1,-9,-10,-10,1,7,-3,2,7,6,2,10,-1,1,1,2,-3,4,9,2,-3,3,5,2,3,-3,-1,-6,2,-8,7,4,10,-5,-3,-10,-5,2,10,3,3,-8,-1,-9,-10,-3,-6,10,4,-6,10,5,10,-7,-3,-4,8,-5,4,1,10,4,-2,3,-10,5,6,7,-7,-8,7,-9,4,4,-5,-6,9,-2,-6,7,5,-6,-1,-10,-9,9,2,1,-9,6,1,2,3,1,10,-5,-1,7,-4,-10,-7,9,6,-5,-8,-2,4,7,9,-7,9,5,3,-3,1,9,2,-5,-9,-5,3,6,-3,-5,2,-9,-3,10,-8,-2,6,-5,9,-9,2,7,-3,-3,5,-7,9,9,-4,-8,2,9,1,-8,-8,3,3,7,5,4,-7,9,1,-8,7,-7,-5,-6,-2,9,3,2,-3,6,9,8,-3,2,4,-8,5,9,2,8,-4,-8,10,5,-10,-1,-2,-7,-5,10,-8,-10,4,2,-7,-3,-7,7,10,-1,4,-1,9,9,8,5,8,8,-9,1,1,6,-5,-5,7,-7,-6,-7,-8,-2,6,2,-5,9,3,9,-1,1,-1,1,10,1,8,-2,-4,5,-2,-7,9,10,-3,-3,-5,2,-1,-6,-3,-9,-4,-9,5,-10,1,3,-3,-2,-3,3,-1,6,10,-5,10,5,-4,4,-8,-8,4,-1,-6,3,7,-9,-3,-2,-10,7,10,-6,6,-6,6,7,7,7,2,3,8,-10,9,-5,9,-9,-3,5,-4,-8,-7,10,-5,-7,7,-6,4,-5,8,-1,1,5,-6,-3,-3,3,-6,-4,-10,-5,3,-1,7,-9,7,1,-4,9,-9,4,-1,-2,2,7,-6,-10,-6,-5,8,-10,-8,10,-9,3,1,-8,4,1,-5,-9,-1,-2,-9,-9,-5,-1,-2,-4,-10,-9,-4,-3,-8,-8,3,5,-6,10,-8,-4,8,5,-6,2,-7,9,9,-2,6,-1,-7,2,7,-1,-1,-7,2,-10,2,8,-5,1,-9,-5,4,4,4,7,10,-8,4,-9,-7,9,-2,-9,2,-5,6,7,-5,1,9,-3,-7,9,6,2,-8,3,5,-1,3,-9,-3,8,7,9,9,-6,-3,-10,10,2,-2,-10,-8,-6,-6,-1,3,-6,1,8,-7,8,7,9,-1,-9,-4,10,1,-5,2,5,5,8,7,6,10,4,-6,-9,1,-10,7,9,7,-5,9,-6,1,10,10,4,4,9,10,-4,6,-10,-5,4,-4,-5,-9,7,5,-10,7,-6,3,-10,-5,-5,-10,7,5,-9,10,-2,-5,1,-10,4,4,-8,-7,-9,3,-5,-1,8,6,3,-1,5,5,5,-6,3,-1,8,-9,2,2,-5,-2,9,2,3,6,-1,-3,-6,-9,10,2,-8,6,-1,9,-3,10,-10,3,-10,-3,-2,1,-5,9,-8,5,9,8,-4,-7,8,9,2,3,-1,-4,3,2,-4,5,-1,-10,4,2,4,4,-9,-2,-5,4,1,10,1,-2,-3,9,-7,-6,-6,8,-10,-4,5,1,-10,7,-10,5,-9,8,-4,-9,5,-2,6,1,-2,6,-10,7,-9,-3,-1,2,-5,-3,-7,-2,10,5,5,3,-2,5,3,4,-4,2,-5,-5,-5,1,-3,-8,10,8,-1,3,7,7,-9,5,-6,-1,1,3,-6,-2,1,3,-5,-7,1,10,-9,9,8,3,1,6,2,2,6,-9,5,-10,-3,7,-8,-2,-3,-7,7,6,-6,1,-4,5,8,8,-6,-4,-5,2,7,10,-5,3,-9,-1,1,-2,-7,-4,-1,-8,1,7,-2,-9,1,1,6,-9,2,9,-1,10,-8,-1,-7,7,1,-5,-10,-4,-4,10,-8,7,8,5,5,-5,10,-1,7,8,-1,-2,5,-4,10,1,1,-8,-3,6,10,2,-9,8,10,-5,9,2,5,5,7,1,-5,7,-4,8,8,4,3,-5,-10,-4,10,-2,-1,10,4,-6,-2,9,-9,10,6,-5,7,-4,2,3,5,9,-2,-1,-10,-7,3,-6,2,-8,-1,-9,-2,-5,-2,-6,-6,2,2,6,2,2,-9,8,6,10,-8,6,-4,2,-1,-5,-3,-7,-10,-7,-6,10,1,5,-3,-5,-5,-10,-1,-7,3,9,8,-1,7,-3,-6,8,-2,-5,9,-7,-10,-5,9,1,-3,8,-6,-10,-6,8,7,-9,3,5,5,-8,8,4,-7,-1,-7,2,7,-8,8,-5,4,-5,10,-8,-3,-10,2,-10,2,9,-2,3,-6,4,-7,-8,-5,-7,-2,-9,-3,-6,4,-4,-9,6,-8,3,-1,6,6,-8,-5,-5,2,-4,5,-10,7,-5,-10,10,-1,-10,1,-10,-9,7,3,-3,-8,-10,6,-3,-7,-9,-9,-3,-5,-3,-10,-3,-1,-3,2,1,-10,2,2,-10,2,-6,-10,3,3,-2,-1,1,3,8,9,-3,2,-8,-1,-3,-8,7,-7,3,-8,-4,10,-1,-1,-8,2,-1,9,9,8,2,-3,3,-9,4,3,-8,-5,-6,10,9,5,6,-1,-3,-1,2,6,-7,-4,-6,-9,8,3,-10,-7,-5,-1,8,6,-9,-8,2,-6,3,-8,-7,-1,-2,-8,-7,1,7,3,-2,-9,-5,-3,5,3,-1,6,9,2,2,-4,-5,1,9,-9,2,-3,7,5,5,-7,-1,4,-10,1,-6,-3,2,-5,7,-1,4,-7,9,-2,-9,3,-3,10,-5,7,8,2,-3,8,-3,-8,-4,-7,-4,1,9,3,-3,5,-4,9,2,1,-8,-5,9,-7,8,-7,-4,-6,-4,-5,2,7,2,-9,7,2,-10,-6,10,-1,1,3,-8,-8,-7,-1,3,-8,-2,-1,-6,4,-10,4,-8,-10,-5,-4,-1,-7,-7,1,6,5,6,-9,-7,-8,-3,-8,-7,10,1,-7,8,3,6,-5,3,2,-6,-10,2,-1,-10,8,5,-9,3,9,4,7,7,-2,-10,8,5,-10,-7,4,7,-5,9,1,2,3,5,7,2,10,4,-9,-9,-6,7,4,-1,10,-2,3,-4,-1,-8,1,-10,1,1,2,8,-6,7,1,-10,-1,-4,8,5,-7,10,1,8,-1,-4,1,-3,7,9,-10,-8,1,7,10,-9,-5,4,6,-9,-1,1,3,8,-4,7,-6,-6,1,-4,-5,7,-1,-7,-2,-5,-7,2,-2,1,9,-1,7,2,3,8,-9,10,-7,-9,3,-10,2,-2,6,10,5,10,3,7,-6,-5,-1,6,-2,-5,-9,-5,10,-3,5,2,9,10,-2,7,4,-4,7,-3,5,3,-6,4,10,-2,5,2,6,5,3,-5,-1,3,10,-8,5,-10,-4,7,-2,-8,5,-10,-4,-8,-6,-3,5,-7,-10,-2,8,6,-6,3,-5,4,1,-10,8,1,4,-1,7,-6,2,-4,9,10,6,-3,4,-9,-1,1,1,-1,5,-4,7,1,-7,10,6,9,-3,3,10,-6,2,-8,9,-8,1,-7,1,10,3,-1,-9,-3,5,-2,7,-5,5,-2,5,9,9,6,3,7,3,-7,2,-5,-3,3,-4,6,4,-4,-5,4,-6,-7,6,5,4,4,-1,7,5,-1,-10,8,7,4,-4,8,-9,-1,1,-4,9,2,-6,-3,9,-2,2,-3,-4,1,-5,2,-5,1,-10,-10,-3,-8,-1,2,4,9,7,-3,10,3,-4,-3,7,-5,-9,7,-7,-2,7,-10,-1,-6,-2,-9,4,2,-6,-7,7,1,6,9,-4,-4,7,1,5,-4,8,-3,-7,2,-8,-8,10,-2,-7,2,1,2,1,4,3,-5,5,-5,3,-8,6,-7,-5,-3,-1,4,10,-10,9,7,5,-3,9,5,-5,2,-8,8,-9,6,3,-4,5,-5,9,8,-3,-4,-9,6,-1,5,-7,-3,-3,8,10,-2,5,1,9,-10,10,-7,-5,5,1,-5,5,7,-10,8,9,7,5,-10,7,9,5,8,-8,8,-7,10,-3,-3,-5,3,9,8,7,-10], dtype = "uint64")#candidate|3058|(1620,)|const|uint64
call_3057 = relay.TupleGetItem(func_968_call(relay.reshape(const_3058.astype('uint64'), [1620,])), 0)
call_3059 = relay.TupleGetItem(func_970_call(relay.reshape(const_3058.astype('uint64'), [1620,])), 0)
bop_3061 = relay.add(uop_3050.astype('int16'), relay.reshape(uop_3046.astype('int16'), relay.shape_of(uop_3050))) # shape=(9, 8, 15)
bop_3064 = relay.add(uop_3052.astype('int16'), relay.reshape(uop_3048.astype('int16'), relay.shape_of(uop_3052))) # shape=(9, 8, 15)
output = relay.Tuple([bop_2996,uop_3039,call_3057,const_3058,bop_3061,])
output2 = relay.Tuple([bop_2999,uop_3041,call_3059,const_3058,bop_3064,])
func_3065 = relay.Function([var_2971,], output)
mod['func_3065'] = func_3065
mod = relay.transform.InferType()(mod)
var_3066 = relay.var("var_3066", dtype = "int32", shape = (1320,))#candidate|3066|(1320,)|var|int32
output = func_3065(var_3066)
func_3067 = relay.Function([var_3066], output)
mutated_mod['func_3067'] = func_3067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2284_call = mod.get_global_var('func_2284')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_3092 = relay.TupleGetItem(func_2284_call(), 0)
call_3093 = relay.TupleGetItem(func_2285_call(), 0)
output = call_3092
output2 = call_3093
func_3104 = relay.Function([], output)
mod['func_3104'] = func_3104
mod = relay.transform.InferType()(mod)
mutated_mod['func_3104'] = func_3104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3104_call = mutated_mod.get_global_var('func_3104')
call_3105 = func_3104_call()
output = call_3105
func_3106 = relay.Function([], output)
mutated_mod['func_3106'] = func_3106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_3171 = func_1803_call()
call_3172 = func_1803_call()
func_1507_call = mod.get_global_var('func_1507')
func_1510_call = mutated_mod.get_global_var('func_1510')
var_3174 = relay.var("var_3174", dtype = "uint64", shape = (1620,))#candidate|3174|(1620,)|var|uint64
call_3173 = relay.TupleGetItem(func_1507_call(relay.reshape(var_3174.astype('uint64'), [1620,]), relay.reshape(var_3174.astype('float64'), [1620,]), ), 2)
call_3175 = relay.TupleGetItem(func_1510_call(relay.reshape(var_3174.astype('uint64'), [1620,]), relay.reshape(var_3174.astype('float64'), [1620,]), ), 2)
func_2481_call = mod.get_global_var('func_2481')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_3176 = func_2481_call()
call_3177 = func_2481_call()
output = relay.Tuple([call_3171,call_3173,var_3174,call_3176,])
output2 = relay.Tuple([call_3172,call_3175,var_3174,call_3177,])
func_3190 = relay.Function([var_3174,], output)
mod['func_3190'] = func_3190
mod = relay.transform.InferType()(mod)
var_3191 = relay.var("var_3191", dtype = "uint64", shape = (1620,))#candidate|3191|(1620,)|var|uint64
output = func_3190(var_3191)
func_3192 = relay.Function([var_3191], output)
mutated_mod['func_3192'] = func_3192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2298_call = mod.get_global_var('func_2298')
func_2300_call = mutated_mod.get_global_var('func_2300')
call_3199 = func_2298_call()
call_3200 = func_2298_call()
func_468_call = mod.get_global_var('func_468')
func_470_call = mutated_mod.get_global_var('func_470')
const_3202 = relay.const([7,-8,-3,9,9,-5,-7,-10,-3,-2,-1,5,1,-2,-9,5,6,2,-10,-5,9,3,7,4,2,-10,-6,-5,-8,5,8,7,5,-5,-10,-4,-10,-6,4,8,-3,-9,7,7,2,5,2,-6,-1,4,1,4,-6,-10,-10,6,-1,4,10,-3,1,-2,10,-2,7,4,-3,-1,9,-9,2,-2,-2,-10,8,-5,-1,-6,5,2,5,9,-6,-8,4,4,5,-8,4,1,1,-3,-3,5,-6,-9,5,-8,10,8,5,9,-1,9,7,9,8,-2,2,8,-4,-10,8,-4,6,-4,5,1,2,-9,-9,-9,-2,-7,-8,-2,-3,3,-10,10,8,-5,7,7,5,8,-6,-3,8,3,-7,10,7,1,-2,-3,7,3,5,3], dtype = "int32")#candidate|3202|(150,)|const|int32
call_3201 = relay.TupleGetItem(func_468_call(relay.reshape(const_3202.astype('int32'), [25, 6])), 1)
call_3203 = relay.TupleGetItem(func_470_call(relay.reshape(const_3202.astype('int32'), [25, 6])), 1)
func_3104_call = mod.get_global_var('func_3104')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_3216 = func_3104_call()
call_3217 = func_3104_call()
output = relay.Tuple([call_3199,call_3201,const_3202,call_3216,])
output2 = relay.Tuple([call_3200,call_3203,const_3202,call_3217,])
func_3223 = relay.Function([], output)
mod['func_3223'] = func_3223
mod = relay.transform.InferType()(mod)
mutated_mod['func_3223'] = func_3223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3223_call = mutated_mod.get_global_var('func_3223')
call_3224 = func_3223_call()
output = call_3224
func_3225 = relay.Function([], output)
mutated_mod['func_3225'] = func_3225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2284_call = mod.get_global_var('func_2284')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_3237 = relay.TupleGetItem(func_2284_call(), 0)
call_3238 = relay.TupleGetItem(func_2285_call(), 0)
func_2936_call = mod.get_global_var('func_2936')
func_2938_call = mutated_mod.get_global_var('func_2938')
const_3240 = relay.const(3.404438, dtype = "float32")#candidate|3240|()|const|float32
call_3239 = relay.TupleGetItem(func_2936_call(relay.reshape(const_3240.astype('float32'), [])), 0)
call_3241 = relay.TupleGetItem(func_2938_call(relay.reshape(const_3240.astype('float32'), [])), 0)
func_613_call = mod.get_global_var('func_613')
func_616_call = mutated_mod.get_global_var('func_616')
var_3243 = relay.var("var_3243", dtype = "float64", shape = (3, 18))#candidate|3243|(3, 18)|var|float64
call_3242 = relay.TupleGetItem(func_613_call(relay.reshape(var_3243.astype('float64'), [2, 9, 3])), 0)
call_3244 = relay.TupleGetItem(func_616_call(relay.reshape(var_3243.astype('float64'), [2, 9, 3])), 0)
output = relay.Tuple([call_3237,call_3239,const_3240,call_3242,var_3243,])
output2 = relay.Tuple([call_3238,call_3241,const_3240,call_3244,var_3243,])
func_3250 = relay.Function([var_3243,], output)
mod['func_3250'] = func_3250
mod = relay.transform.InferType()(mod)
var_3251 = relay.var("var_3251", dtype = "float64", shape = (3, 18))#candidate|3251|(3, 18)|var|float64
output = func_3250(var_3251)
func_3252 = relay.Function([var_3251], output)
mutated_mod['func_3252'] = func_3252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2582_call = mod.get_global_var('func_2582')
func_2583_call = mutated_mod.get_global_var('func_2583')
call_3308 = relay.TupleGetItem(func_2582_call(), 0)
call_3309 = relay.TupleGetItem(func_2583_call(), 0)
uop_3316 = relay.sin(call_3308.astype('float64')) # shape=(12, 8, 3)
uop_3318 = relay.sin(call_3309.astype('float64')) # shape=(12, 8, 3)
func_2019_call = mod.get_global_var('func_2019')
func_2021_call = mutated_mod.get_global_var('func_2021')
call_3321 = relay.TupleGetItem(func_2019_call(), 0)
call_3322 = relay.TupleGetItem(func_2021_call(), 0)
output = relay.Tuple([uop_3316,call_3321,])
output2 = relay.Tuple([uop_3318,call_3322,])
func_3333 = relay.Function([], output)
mod['func_3333'] = func_3333
mod = relay.transform.InferType()(mod)
output = func_3333()
func_3334 = relay.Function([], output)
mutated_mod['func_3334'] = func_3334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mod.get_global_var('func_1578')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_3359 = func_1578_call()
call_3360 = func_1578_call()
func_1507_call = mod.get_global_var('func_1507')
func_1510_call = mutated_mod.get_global_var('func_1510')
var_3369 = relay.var("var_3369", dtype = "uint64", shape = (1620,))#candidate|3369|(1620,)|var|uint64
call_3368 = relay.TupleGetItem(func_1507_call(relay.reshape(var_3369.astype('uint64'), [1620,]), relay.reshape(var_3369.astype('float64'), [1620,]), ), 3)
call_3370 = relay.TupleGetItem(func_1510_call(relay.reshape(var_3369.astype('uint64'), [1620,]), relay.reshape(var_3369.astype('float64'), [1620,]), ), 3)
bop_3382 = relay.not_equal(call_3368.astype('bool'), relay.reshape(call_3359.astype('bool'), relay.shape_of(call_3368))) # shape=(2, 9, 7)
bop_3385 = relay.not_equal(call_3370.astype('bool'), relay.reshape(call_3360.astype('bool'), relay.shape_of(call_3370))) # shape=(2, 9, 7)
output = relay.Tuple([var_3369,bop_3382,])
output2 = relay.Tuple([var_3369,bop_3385,])
func_3392 = relay.Function([var_3369,], output)
mod['func_3392'] = func_3392
mod = relay.transform.InferType()(mod)
var_3393 = relay.var("var_3393", dtype = "uint64", shape = (1620,))#candidate|3393|(1620,)|var|uint64
output = func_3392(var_3393)
func_3394 = relay.Function([var_3393], output)
mutated_mod['func_3394'] = func_3394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_3398 = relay.TupleGetItem(func_1200_call(), 1)
call_3399 = relay.TupleGetItem(func_1201_call(), 1)
output = relay.Tuple([call_3398,])
output2 = relay.Tuple([call_3399,])
func_3401 = relay.Function([], output)
mod['func_3401'] = func_3401
mod = relay.transform.InferType()(mod)
output = func_3401()
func_3402 = relay.Function([], output)
mutated_mod['func_3402'] = func_3402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_3441 = relay.TupleGetItem(func_1200_call(), 2)
call_3442 = relay.TupleGetItem(func_1201_call(), 2)
output = call_3441
output2 = call_3442
func_3444 = relay.Function([], output)
mod['func_3444'] = func_3444
mod = relay.transform.InferType()(mod)
mutated_mod['func_3444'] = func_3444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3444_call = mutated_mod.get_global_var('func_3444')
call_3445 = func_3444_call()
output = call_3445
func_3446 = relay.Function([], output)
mutated_mod['func_3446'] = func_3446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3333_call = mod.get_global_var('func_3333')
func_3334_call = mutated_mod.get_global_var('func_3334')
call_3472 = relay.TupleGetItem(func_3333_call(), 1)
call_3473 = relay.TupleGetItem(func_3334_call(), 1)
output = call_3472
output2 = call_3473
func_3478 = relay.Function([], output)
mod['func_3478'] = func_3478
mod = relay.transform.InferType()(mod)
output = func_3478()
func_3479 = relay.Function([], output)
mutated_mod['func_3479'] = func_3479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1117_call = mod.get_global_var('func_1117')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_3485 = func_1117_call()
call_3486 = func_1117_call()
output = call_3485
output2 = call_3486
func_3497 = relay.Function([], output)
mod['func_3497'] = func_3497
mod = relay.transform.InferType()(mod)
mutated_mod['func_3497'] = func_3497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3497_call = mutated_mod.get_global_var('func_3497')
call_3498 = func_3497_call()
output = call_3498
func_3499 = relay.Function([], output)
mutated_mod['func_3499'] = func_3499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1920_call = mod.get_global_var('func_1920')
func_1921_call = mutated_mod.get_global_var('func_1921')
call_3526 = relay.TupleGetItem(func_1920_call(), 0)
call_3527 = relay.TupleGetItem(func_1921_call(), 0)
func_3401_call = mod.get_global_var('func_3401')
func_3402_call = mutated_mod.get_global_var('func_3402')
call_3541 = relay.TupleGetItem(func_3401_call(), 0)
call_3542 = relay.TupleGetItem(func_3402_call(), 0)
output = relay.Tuple([call_3526,call_3541,])
output2 = relay.Tuple([call_3527,call_3542,])
func_3543 = relay.Function([], output)
mod['func_3543'] = func_3543
mod = relay.transform.InferType()(mod)
mutated_mod['func_3543'] = func_3543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3543_call = mutated_mod.get_global_var('func_3543')
call_3544 = func_3543_call()
output = call_3544
func_3545 = relay.Function([], output)
mutated_mod['func_3545'] = func_3545
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3570 = relay.var("var_3570", dtype = "float64", shape = (8, 11, 14))#candidate|3570|(8, 11, 14)|var|float64
uop_3571 = relay.erf(var_3570.astype('float64')) # shape=(8, 11, 14)
output = relay.Tuple([uop_3571,])
output2 = relay.Tuple([uop_3571,])
func_3575 = relay.Function([var_3570,], output)
mod['func_3575'] = func_3575
mod = relay.transform.InferType()(mod)
mutated_mod['func_3575'] = func_3575
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3576 = relay.var("var_3576", dtype = "float64", shape = (8, 11, 14))#candidate|3576|(8, 11, 14)|var|float64
func_3575_call = mutated_mod.get_global_var('func_3575')
call_3577 = func_3575_call(var_3576)
output = call_3577
func_3578 = relay.Function([var_3576], output)
mutated_mod['func_3578'] = func_3578
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3595 = relay.var("var_3595", dtype = "float64", shape = (2, 15, 6))#candidate|3595|(2, 15, 6)|var|float64
uop_3596 = relay.sin(var_3595.astype('float64')) # shape=(2, 15, 6)
func_968_call = mod.get_global_var('func_968')
func_970_call = mutated_mod.get_global_var('func_970')
const_3610 = relay.const([-1,2,-5,-1,-8,1,-4,7,4,7,2,1,-8,10,-1,1,-4,-8,-10,7,8,4,-1,-7,7,-7,7,-7,-6,4,-9,-3,-10,1,-10,9,-6,-1,8,-6,-1,1,2,2,-6,7,-3,-8,1,-2,10,10,-6,7,-8,-6,7,-6,-7,4,5,7,-4,-3,-6,8,8,-4,-9,-8,-5,6,6,-8,2,-4,-5,-7,8,6,4,-2,9,7,-10,-3,-1,-6,2,-10,7,-1,7,-3,-7,10,10,4,-1,-7,5,-5,-10,-5,-2,7,9,4,-6,-10,6,4,4,-5,-8,6,-4,-4,-10,9,2,-3,-1,-6,4,2,5,-5,-4,4,7,-9,-8,7,10,2,-1,-4,4,1,-5,9,9,-9,-8,-6,10,6,-8,8,1,1,-8,6,6,-3,10,-1,8,1,2,1,-5,-1,-3,3,10,-6,3,-10,9,10,-7,-8,4,1,1,7,2,-10,-7,-9,-9,5,6,8,9,5,-2,1,4,-1,5,-10,-6,-1,3,9,-6,-1,10,-10,-1,6,-9,9,-10,-8,-10,3,-9,8,6,-4,-2,5,-6,2,1,1,7,-3,2,-2,-8,-8,-9,8,4,8,-7,-9,-9,10,-8,-9,-5,-2,4,9,8,8,6,5,-8,-7,7,7,6,5,10,-9,-8,2,-4,3,-10,1,7,-5,10,-1,7,-4,-7,7,5,-2,8,5,7,-3,-9,3,2,-2,-2,-9,10,2,-2,-7,-6,2,-3,5,2,-8,-4,-6,3,-9,2,-3,-1,2,-5,-4,5,6,-2,-1,1,-5,2,-3,1,1,-10,-6,1,-8,-4,-9,8,-9,10,-5,1,8,-1,-10,1,-6,6,-3,7,-3,-6,9,2,2,-10,-3,-7,6,-1,10,8,4,7,2,3,-4,10,10,-3,-3,1,8,8,8,2,3,6,-5,7,7,-3,-6,4,4,-2,2,5,-3,-4,4,1,-6,-5,9,8,-3,-5,-3,-8,-8,-6,-4,-2,5,8,-2,7,5,10,-7,8,-9,-10,3,9,-8,2,5,-9,-10,10,-5,1,-10,-3,-1,-6,7,-3,3,2,7,1,9,-2,6,-2,-8,2,8,-4,8,9,5,-6,8,-8,-3,8,-9,-3,-4,-8,10,10,-3,6,4,7,-1,-8,2,-3,6,-6,-2,2,4,8,-7,-1,-7,-4,-6,2,7,-6,5,1,-1,-6,6,10,-7,-5,1,7,-4,-8,-5,10,2,10,-5,1,-9,-10,-5,6,-1,8,-6,-9,-7,3,-9,3,-8,9,3,-9,8,-7,2,-7,-4,-6,-10,-1,1,-9,6,2,-5,5,-2,10,8,3,3,-6,2,7,4,-9,1,-7,-9,1,1,-10,2,3,1,1,-5,-1,8,9,8,-9,5,6,-7,6,2,-1,9,-8,9,4,-8,-10,-5,-8,-8,-1,-5,7,-3,1,10,-4,5,9,1,9,8,-6,2,-3,-3,5,3,-1,4,4,4,-5,9,-7,7,2,7,8,3,10,-8,-5,7,-7,-10,7,8,4,-5,-10,9,6,9,5,-7,-8,-10,-6,-1,-7,4,6,5,-1,-3,1,-2,-7,-2,1,-7,-6,3,5,-5,-6,6,2,2,-2,-4,-6,-3,-5,5,-6,-6,9,-2,-3,7,-7,1,-6,5,-9,-4,-5,-10,-2,10,-7,-8,-6,-1,1,-10,4,-10,-4,10,-3,-10,1,-1,-5,1,-7,-8,-1,-4,8,-3,-5,3,-7,5,-9,-8,-3,5,2,-9,7,4,6,-4,-3,-7,7,10,-6,4,9,8,-3,-9,-3,3,-6,9,6,8,-10,10,8,-1,-6,-10,7,7,2,-6,-4,4,8,4,9,-5,-9,-4,6,1,-10,-7,8,-10,7,3,7,-3,-3,8,1,8,-10,-6,8,10,-8,-9,-8,7,5,9,9,6,1,1,9,1,-2,8,6,-1,5,-1,9,10,-7,-7,-3,6,6,7,9,-7,-6,-2,-4,-7,5,4,5,9,3,8,-8,1,4,-1,5,-3,-2,-5,9,5,-1,7,3,10,1,-3,4,5,3,10,-4,2,9,-4,9,-10,10,-8,3,-10,-6,7,10,-10,8,2,-5,9,2,-10,-5,-3,10,-10,9,-9,-5,-7,-8,8,8,-9,-6,5,-6,-3,7,-7,-7,-10,-7,3,5,6,6,-1,-6,5,3,-4,-7,9,10,1,-3,4,-1,-1,-7,-2,-1,-9,-7,10,6,-8,-8,-9,5,8,2,-7,10,-9,-2,-2,-6,-9,5,3,-1,6,-10,-2,6,2,-1,-1,4,10,1,-9,2,1,7,-1,-5,-10,6,9,-1,8,-9,-4,8,-10,-3,7,-9,5,2,-6,6,1,9,2,2,-3,10,3,1,-9,6,-2,-6,-3,-4,7,-7,2,10,-6,-5,-1,-8,2,-2,6,1,-3,6,5,-4,-1,-3,-5,-6,-3,-1,5,1,-1,-2,-10,-6,10,-8,-5,9,1,9,-3,8,8,-2,-1,2,-7,10,7,-2,-9,2,-3,1,3,2,7,-3,1,5,8,5,-4,-3,-2,-8,5,6,10,-4,7,10,5,-6,9,-2,3,-4,-4,-7,-4,-9,4,-7,-3,9,6,-6,3,1,7,10,-3,-6,1,-5,-6,-4,-10,-7,3,-6,7,1,-6,-3,6,-3,-6,-7,-2,-2,7,-1,6,-1,-3,-7,9,-10,10,9,5,-6,3,-9,-6,-3,6,7,1,-2,-4,-5,-9,-1,-10,-7,-4,-7,-6,2,-9,4,-1,9,10,-8,-2,-9,-2,8,-1,-7,7,2,2,7,10,-7,2,-5,-9,7,8,10,8,-9,4,6,4,7,3,-7,5,4,-2,-8,-1,-2,-2,-8,4,-1,-5,-2,-4,-5,4,10,8,7,-2,-2,-1,-4,9,-3,-9,-1,-1,3,5,2,10,9,7,-9,-10,-4,7,3,-9,-1,1,5,9,9,6,1,5,-5,5,-1,-8,5,-4,5,3,4,-10,-7,-6,10,10,-1,5,-7,-1,5,-5,7,7,5,-8,5,9,-6,10,9,9,-7,8,-5,2,10,-10,-9,9,-6,-4,-4,7,-7,5,-9,8,1,7,4,-5,1,1,10,-3,-6,9,9,1,-3,2,3,5,3,-9,5,1,-7,5,2,-4,-4,-10,1,9,-10,-5,10,-6,-5,-9,-6,4,3,-1,-9,3,1,8,-7,-5,7,-1,-1,-1,-3,-7,-3,4,-2,8,3,-5,-9,4,10,-4,-1,-6,-3,9,9,6,-8,-5,7,-4,-7,5,-1,-1,-10,8,1,4,-10,1,-2,9,-9,-2,10,-7,4,4,-10,-6,1,2,7,5,2,9,10,3,4,6,-1,4,6,9,-2,-8,9,4,-7,-7,2,-2,4,4,1,4,4,5,6,7,1,1,-5,-7,-2,1,8,8,9,2,1,-9,-3,-6,10,-7,7,10,2,6,2,10,3,4,10,-1,1,10,4,-5,9,5,1,-10,3,-9,-3,4,8,7,1,1,-6,8,-6,6,6,-1,-7,9,5,4,10,-4,-4,-6,-9,-9,-7,6,-9,-9,6,-1,9,4,2,3,-5,-8,-8,-6,-3,-3,-1,6,-3,-6,-2,-3,-10,6,4,4,6,8,10,2,-10,-4,4,-2,4,8,-8,-9,-10,2,6,-5,2,6,-9,3,-1,-10,-6,6,2,-6,-6,1,-1,2,-1,-8,10,2,2,9,-2,-2,1,8,1,8,-8,3,-1,7,-2,2,-10,-3,10,10,1,10,-10,-7,-2,-8,3,-2,-8,6,-5,-2,-5,-1,-7,6,-3,-9,-7,-3,3,-1,-5,-3,-3,3,-9,5,1,6,-7,3,-3,2,-3,10,8,-4,-6,8,-6,-1,5,7,-4,-4,-9,10,1,1,10,-10,3,-3,-1,-10,1,1,9,-4,3,3,-4,4,-6,-1,-4,-7,5,8,3,2,-1,-2,1,3,-3,-5,-9,6,2,4,-6,-5,-10,-6,2,7,-1,4,-6,-5,3,-7,9,-10,1,-8,-4,10,7,9,4,-1,-6,6,-1,-10,-8,-7,-2,-9,10,10,2,9,5,-7,3,-5,-4,-10,9,7,9,-6,2,6,3,-7,-5,4,-4,1,10,8,-7,9,10,-5,2,2,7,8,-3,6,-9,9,1,5,-8,-7,1,10,4,2,7,1,-1,5,-2,-1,-1,-6,-2,6,-4,-4,-9,-8,-10,-8,-4,4,-8,1,-1,-10,-5,-7,-7,-9,-7,8,7,-8,6,-7,-7,-8,-9,-4,3,5], dtype = "uint64")#candidate|3610|(1620,)|const|uint64
call_3609 = relay.TupleGetItem(func_968_call(relay.reshape(const_3610.astype('uint64'), [1620,])), 0)
call_3611 = relay.TupleGetItem(func_970_call(relay.reshape(const_3610.astype('uint64'), [1620,])), 0)
bop_3623 = relay.less_equal(uop_3596.astype('bool'), relay.reshape(var_3595.astype('bool'), relay.shape_of(uop_3596))) # shape=(2, 15, 6)
uop_3626 = relay.acosh(call_3609.astype('float32')) # shape=(12, 13, 11)
uop_3628 = relay.acosh(call_3611.astype('float32')) # shape=(12, 13, 11)
const_3637 = relay.const([[[False,True,False,True,True,True],[False,False,False,False,False,False],[True,True,False,True,False,False],[False,True,False,False,True,False],[True,False,False,True,True,True],[True,True,True,True,False,False],[True,False,False,True,False,False],[True,False,True,False,True,True],[False,True,True,False,True,False],[False,False,True,False,True,False],[False,False,True,True,False,False],[True,True,False,True,False,True],[True,True,True,False,True,False],[False,False,True,True,False,True],[True,True,True,False,True,True]],[[False,True,True,False,False,True],[False,True,False,False,False,False],[True,True,False,False,False,True],[False,False,True,False,True,False],[True,False,True,False,True,False],[True,True,False,True,True,False],[False,True,False,True,False,False],[True,True,False,True,False,False],[True,False,False,False,False,True],[False,True,True,True,False,False],[False,True,False,False,False,True],[False,True,True,False,False,True],[True,True,False,True,True,False],[True,False,True,True,False,True],[False,True,True,True,False,True]]], dtype = "bool")#candidate|3637|(2, 15, 6)|const|bool
bop_3638 = relay.add(bop_3623.astype('uint32'), relay.reshape(const_3637.astype('uint32'), relay.shape_of(bop_3623))) # shape=(2, 15, 6)
output = relay.Tuple([const_3610,uop_3626,bop_3638,])
output2 = relay.Tuple([const_3610,uop_3628,bop_3638,])
func_3643 = relay.Function([var_3595,], output)
mod['func_3643'] = func_3643
mod = relay.transform.InferType()(mod)
mutated_mod['func_3643'] = func_3643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3644 = relay.var("var_3644", dtype = "float64", shape = (2, 15, 6))#candidate|3644|(2, 15, 6)|var|float64
func_3643_call = mutated_mod.get_global_var('func_3643')
call_3645 = func_3643_call(var_3644)
output = call_3645
func_3646 = relay.Function([var_3644], output)
mutated_mod['func_3646'] = func_3646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3682 = relay.var("var_3682", dtype = "uint32", shape = (3, 6, 10))#candidate|3682|(3, 6, 10)|var|uint32
var_3683 = relay.var("var_3683", dtype = "uint32", shape = (3, 6, 10))#candidate|3683|(3, 6, 10)|var|uint32
bop_3684 = relay.maximum(var_3682.astype('uint32'), relay.reshape(var_3683.astype('uint32'), relay.shape_of(var_3682))) # shape=(3, 6, 10)
output = bop_3684
output2 = bop_3684
func_3697 = relay.Function([var_3682,var_3683,], output)
mod['func_3697'] = func_3697
mod = relay.transform.InferType()(mod)
var_3698 = relay.var("var_3698", dtype = "uint32", shape = (3, 6, 10))#candidate|3698|(3, 6, 10)|var|uint32
var_3699 = relay.var("var_3699", dtype = "uint32", shape = (3, 6, 10))#candidate|3699|(3, 6, 10)|var|uint32
output = func_3697(var_3698,var_3699,)
func_3700 = relay.Function([var_3698,var_3699,], output)
mutated_mod['func_3700'] = func_3700
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3798 = relay.const(-6, dtype = "int64")#candidate|3798|()|const|int64
var_3799 = relay.var("var_3799", dtype = "int64", shape = (16, 16, 16))#candidate|3799|(16, 16, 16)|var|int64
bop_3800 = relay.multiply(const_3798.astype('int64'), var_3799.astype('int64')) # shape=(16, 16, 16)
func_1781_call = mod.get_global_var('func_1781')
func_1787_call = mutated_mod.get_global_var('func_1787')
const_3811 = relay.const([10,3,-8,-3,3,3,-9,10,-1,7,9,-7,3,-8,-10,6,-9,-9,-4,-1,-4,-9,-5,10,3,7,-7,6,-10,2,7,4,-1,-4,5,-3,10,-1,2,-10,-9,6,-3,-7,7,5,-9,2,9,-4,1,-3,-1,7,-6,-8,-6,-2,-9,2,-8,9,-5,7,7,10,1,1,8,3,7,-2,8,-1,-2,-4,-1,8,-6,-2,8,-2,-7,-1,1,10,7,-10,-5,3,-4,-8,10,1,-2,-10,6,1,5,10,-6,-5,-4,8,-5,-7,-10,6,-4,7,-1,-8,8,-10,-3,-8,-1,-2,9,-4,-2,5,-7,-3,9,9,-8,-7,-8,7,5,8,10,9,-1,4,-6,-7,-2,-6,-2,-1,1,7,2,9,-1,3,9,1,-7,-5,-5,-5,-5,-8,-3,-9,6,4,-10,-5,-1,4,-2,-2,-1,-1,-3,5,-7,-7,1,-5,-4,7,1,6,-2,-4,7,-3,-6,7,1,7,7,8,-2,7,3,1,-7,8,7,-6,-9,-5,5,4,5,6,5,-10,-9,4,-2,-8,2,-10,7,3,7,2,-1,-2,8,-8,3,2,6,6,1,-7,-9,9,-3,3,-2,5,-1,-10,6,2,6,3,-9,10,-4,-10], dtype = "int64")#candidate|3811|(240,)|const|int64
const_3812 = relay.const([2,-4,5,-10,-9,-9,10,9,-5,7,6,1,-6,2,10,7,-9,-9,-7,9,1,-9,3,4,-2,10,-7,-6,7,-8,3,-1,6,-1,8,-3,7,-10,7,-2,5,6,2,4,10,-6,-7,7,6,8,-7,-3,-2,-7,-8,-7,1,-6,5,-2,-4,-8,-5,6,-3,5,9,6,-10,-10,2,-1,1,5,9,-1,-6,-6,5,4,10,10,9,9,-7,-8,-6,-1,8,5,3,-10,6,-2,8,3,-9,-7,8,-8,7,-5,6,-2,-2,-2,2,6,8,2,-5,-5,-5,1,-8,-10,6,8,9,-6,6,8,10,9,-1,5,4,-10,-10,-4,-1,-1,-8,-7,-8,2,1,-3,3,10,-3,-9,4,-7,10,5,6,6,-7,-4,8,-9,3,3,-4,-9,-7,-3,8,7,1,-9,10,-4,-10,1,2,10,-4,3,-3,4,-3,-5,8,10,6,8,-7,-2,-9,-9,-5,-8,10,-6,6,-7,8,3,-3,-5,4,-4,6,-2,-1,9,9,-4,1,-4,-9,-9,4,-2,4,-8,1,-1,-10,-5,1,-6,1,9,-9,10,-7,-4,8,-8,3,1,7,-2,-3,9,-1,6,4,-4,2,10,1,-10,2,-1,5,-1,-6,-1,-2,-4,-3,4,8,2,-2,-9,8,1,-9,-7,8,7,2,2,-6,6,-9,-9,-8,6,5,2,7,5,10,10,-3,2,5,-1,4,-10,-10,1,2,-10,5,10,7,-9,9,-5,-6,-8,-2,-2,8,9,-3,-6,10,-1,7,-8,-9,1,6,-10,4,-5,-7,-5,1,3,-6,10,-6,-10,2,-9,-5,-9,-8,-5,-7,1,9,10,-9,3,-3,-9,4,2,-5,9,1,1,6,-4,-8,10,-8,-9,-5,-10,5,-9,-9,7,2,-6,-3,-6,4,-4,4,2,-6,9,-3,-4,-10,-9,4,5,-9,10,-9,-3,-6,-7,-2,-2,-2,-2,10,5,-8,9,10,7,6,-3,6,9,-2,-4,-7,-5,-5,-6,-2,7,5,2,-9,-7,8,1,8,8,6,6,-6,2,7,-10,-9,9,-2,-1,1,7,10,3,-8,9,3,-5,4,2,-7,10,-9,2,-1,-2,3,-2,-7,-2,-6,-7,4,-9,3,-8,4,-6,9,4,-1,2,8,-8,9,-10,-10,-5,2,1,-5,-6,8,-6,2,-7,-8,8,3,1,-7,-8,-1,-9,8,10,2,-6,10,7,2,4,1,4,-9,5,-7,10,9,-2,-1,2,-6,4,-8,7,-5,8,2,-1,10,-6,-2,-4,8,-5,8,-4,4,10,9,4,8,-1,5,-3,9,-1,-10,9,2,-8,-1,-5,-10,-1,-2,-2,-6,-3,4,-7,9,-3,6,8,-6,-8,-1,-6,-10,10,9,-4,-7,-9,7,6,-5,-7,-9,-8,-3,3,-1,-7,-5,3,-10,-10,-8,-8,4,-2,-10,-7,6,-5,-2,-5,9,-4,-8,6,-7,-5,-7,9,6,8,8,7,3,-5,2,9,-1,-6,1,-6,-10,3,-3,-7,-2,7,4,-6,-7,5,-10,-3,-9,-9,-2,-1,8,-10,-6,2,-3,10,4,-8,8,4,-8,-8,-5,9,3,-10,6,4,6,-10,6,10,-7,-2,-10,2,3,-4,8,-8,5,-4,7,-3,-3,-5,4,-10,2,7,-10,1,-8,4,10,6,1,8,-7,4,-5,-10,4,1,4,9,6,7,-7,-9,4,-4,-7,-4,5,-6,-7,-1,-10,7,2,-8,-8,-2,8,1,1,7,-10,-4,-9,9,-9,-4,-5,-3,-9,-3,7,-1,9,9,9,-7,6,-8,-2,-10,-7,9,5,7,4,10,-5,8,-5,5,-2,-5,-4,3,9,-10,-8,-8,-3,-9,-5,10,-2,-8,-5,2,-5,-6,-1,-6,2,9,-7,3,2,-8,-10,8,7,10,-7,9,-9,-3,-4,3,7,6,-8,3,-10,8,-9,4,2,-8,-6,3,2,8,-4,-1,-2,6,-5,-10,10,-7,-4,-5,-4,-7,9,-8,7,8,6,4,-8,5,-9,-10,-3,-8,-7,3,-5,6,2,7,-9,-1,-4,-2,-5,-8,4,-3,-5,3,-3,7,-9,-2,-6,-10,-3,9,-6,-10,10,5,-5,2,-9,-4,-3,10,2,5,-2,3,8,5,-5,-6,2,-8,10,-9,-6,3,1,-3,9,1,5,-9,5,6,8,4,3,-8,-3,4,-9,-9,2,5,10,-5,1,-7,-7,-8,-2,6,6,10,3,9,1,-4,1,-6,-7,-7,4,-5,-4,-5,-5,4,7,3,8,-3,3,3,9,7,10,-2,-8,5,-2,-10,3,10,-6,9,-8,-2,-10,-5,6,-4,-5,-3,5,-5,-10,4,9,-1,-9,-10,5,-8,-8,-5,-4,-3,5,-2,-3,9,-1,7,9,8,10,-6,1,1,6,6,-3,7,-4,-2,5,2,-6,-10,9,-4,-6,-4,-4,-6,1,8,-10,5,3,3,-9,-4,4,-8,1,-1,-2,-2,2,-7,-10,10,-10,-4,-10,-1,-3,-4,8,-9,-5,6,9,-4,-7,-5,-5,-9,-10,8,-1,1,-3,-1,6,-1,-4,8,6,4,4,2,-6,4,3,8,-8,-8,-5,-3,-10,-1,1,8,5,3,-3,1,-4,-7,-7,-1,-3,8,-7,-8,5,-3,-3,4,-3,9,1,-7,-5,2,-9,-8,1,2,-7,4,4,-8,8,-4,10,9,3,6,2,1,10,-6,5,6,-10,4,10,10,-8,1,8,-9,7,1,3,1,-1,-4,-4,-8,3,-6,-8,10,-1,-5,-10,3,10,-9,8,-6,-6,5,3,4,-9,-8,9,4,9,-2,-4,6,-1,-6,-4,7,-5,2,8,-3,-10,-6,8,-2,9,-8,9,6,-1,-8,-7,7,-9,-9,6,-8,2,7,3,-1,-3,7,2,-3,-6,-8,-8,-6,-3,-8,8,5,-7,1,2,-6,10,-7,5,-5,-3,-7,-7,9,-7,-9,10,-4,-8,1,-9,-5,8,-1,-3,5,9,-8,4,-6,-2,-5,-9,-1,6,-5,9,-5,-5,10,-5,6,9,-10,-9,4,-9,6,-10,3,1,2,-1,4,3,3,-1,2,1,2,6,3,-7,-5,8,-2,7,8,10,3,-8,-3,-5,10,5,-6,-10,-10,10,3,-3,-8,10,10,7,-5,-10,-7,-1,1,-1,-1,-7,-7,6,4,6,10,7,-7,-3,-3,-1,8,-7,2,-7,8,-3,9,-8,9,-7,9,-8,10,9,4,4,-3,-2,-1,-7,-1,6,2,-6,-8,-9,-9,-5,8,-4,5,-6,-1,3,-9,10,3,-1,10,5,2,-4,10,-2,5,-3,-6,-1,9,-8,6,-8,4,3,1,-1,-3,4,6,2,-1,-4,-5,-3,-10,-3,-9,-5,-2,-8,-8,6,5,5,-5,5,-3,5,5,-2,-9,3,-8,4,1,-5,-10,-10,-10,-8,-3,2,-3,6,5,5,5,-5,-10,-2,-8,8,7,-4,-5,3,5,-6,4,-8,-9,6,-3,-6,-7,-4,7,-6,-1,1,-3,8,2,8,-5,7,-9,8,4,-7,-4,8,2,-6,-4,-1,-3,-5,-4,-5,7,-4,4,2,-6,9,-7,-1,-10,-4,-6,-1,5,-6,-9,9,-2,4,-3,-6,-5,-10,3,-3,-10,9,-5,5,-6,-10,-1,-3,-10,-8,5,-5,-10,-3,8,-8,-7,4,-7,4,9,8,-5,-10,-8,-9,4,-3,8,-7,-6,-7,-2,-6,8,-2,-6,-5,-1,-3,7,4,-5,-6,-3,-3,10,1,-9,-2,-7,-3,5,1,7,5,-7,3,-5,8,4,6,-9,5,-8,-6,1,7,9,2,-5,10,-7,5,-2,10,4,9,7,-5,2,7,3,1,-3,10,9,9,2,8,8,-1,3,10,-7,4,-6,-5,6,-1,-9,8,-2,6,2,-8,-1,5,-3,6,9,1,1,-4,-4,-8,7,-2,7,-3,-3,1,1,8,2,4,-1,5,-3,-1,-6,-9,-8,-2,-1,4,-5,6,3,-10,7,4,-10,-2,-10,9,3,-8,1,6,2,-5,-4,-3,-6,-10,10,3,-7,-3,9,2,2,-2,10,4,-7,1,10,6,8,9,2,-7,6,-5,-6,8,8,10,8,-2,-4,6,-8,2,-10,3,4,10,-4,6,3,7,-3,-1,-2,8,7,-4,6,-10,-8,10,-7,-1,-7,-8,-8,-2,-1,-4,6,-10,5,8,1,-10,3,8,-2,10,5,-10,2,-4,4,7,-1,5,-3,9,-10,-1,-1,-4,10,-10,1,-6,3], dtype = "uint64")#candidate|3812|(1620,)|const|uint64
const_3813 = relay.const([4.835394,2.664750,0.474938,3.949101,9.102288,7.501910,0.190082,8.216192,-5.004262,-1.754332,1.377896,-3.197079,4.322212,2.981499,0.051889,4.841945,0.533827,5.192340,1.056655,-1.219109,4.838274,-6.326991,9.025663,-0.969647,0.191925,-4.945891,7.320200,0.610826,-3.167800,-5.584498,8.618836,-3.105445,-5.202682,-8.268473,-8.742866,-9.110579,-9.932853,8.319888,-5.634768,-3.305166,-0.052605,4.555808,6.374972,-4.827355,9.584309,2.857666,1.468676,7.375432,2.660382,7.876621,-7.936945,-0.316518,-2.533625,9.204314], dtype = "float64")#candidate|3813|(54,)|const|float64
call_3810 = relay.TupleGetItem(func_1781_call(relay.reshape(const_3798.astype('int64'), []), relay.reshape(const_3811.astype('int64'), [12, 2, 10]), relay.reshape(const_3812.astype('uint64'), [1620,]), relay.reshape(const_3813.astype('float64'), [54,]), relay.reshape(const_3812.astype('uint64'), [1620,]), ), 6)
call_3814 = relay.TupleGetItem(func_1787_call(relay.reshape(const_3798.astype('int64'), []), relay.reshape(const_3811.astype('int64'), [12, 2, 10]), relay.reshape(const_3812.astype('uint64'), [1620,]), relay.reshape(const_3813.astype('float64'), [54,]), relay.reshape(const_3812.astype('uint64'), [1620,]), ), 6)
func_1649_call = mod.get_global_var('func_1649')
func_1652_call = mutated_mod.get_global_var('func_1652')
var_3833 = relay.var("var_3833", dtype = "float64", shape = (126,))#candidate|3833|(126,)|var|float64
call_3832 = relay.TupleGetItem(func_1649_call(relay.reshape(var_3833.astype('float64'), [2, 9, 7]), relay.reshape(var_3833.astype('float64'), [2, 9, 7]), ), 0)
call_3834 = relay.TupleGetItem(func_1652_call(relay.reshape(var_3833.astype('float64'), [2, 9, 7]), relay.reshape(var_3833.astype('float64'), [2, 9, 7]), ), 0)
output = relay.Tuple([bop_3800,call_3810,const_3811,const_3812,const_3813,call_3832,var_3833,])
output2 = relay.Tuple([bop_3800,call_3814,const_3811,const_3812,const_3813,call_3834,var_3833,])
func_3835 = relay.Function([var_3799,var_3833,], output)
mod['func_3835'] = func_3835
mod = relay.transform.InferType()(mod)
var_3836 = relay.var("var_3836", dtype = "int64", shape = (16, 16, 16))#candidate|3836|(16, 16, 16)|var|int64
var_3837 = relay.var("var_3837", dtype = "float64", shape = (126,))#candidate|3837|(126,)|var|float64
output = func_3835(var_3836,var_3837,)
func_3838 = relay.Function([var_3836,var_3837,], output)
mutated_mod['func_3838'] = func_3838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1312_call = mod.get_global_var('func_1312')
func_1314_call = mutated_mod.get_global_var('func_1314')
call_3911 = relay.TupleGetItem(func_1312_call(), 0)
call_3912 = relay.TupleGetItem(func_1314_call(), 0)
output = relay.Tuple([call_3911,])
output2 = relay.Tuple([call_3912,])
func_3919 = relay.Function([], output)
mod['func_3919'] = func_3919
mod = relay.transform.InferType()(mod)
output = func_3919()
func_3920 = relay.Function([], output)
mutated_mod['func_3920'] = func_3920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2838_call = mod.get_global_var('func_2838')
func_2840_call = mutated_mod.get_global_var('func_2840')
call_3921 = relay.TupleGetItem(func_2838_call(), 0)
call_3922 = relay.TupleGetItem(func_2840_call(), 0)
func_2660_call = mod.get_global_var('func_2660')
func_2664_call = mutated_mod.get_global_var('func_2664')
var_3925 = relay.var("var_3925", dtype = "int32", shape = (12, 110))#candidate|3925|(12, 110)|var|int32
call_3924 = relay.TupleGetItem(func_2660_call(relay.reshape(var_3925.astype('int32'), [12, 10, 11]), relay.reshape(var_3925.astype('int32'), [12, 10, 11]), ), 1)
call_3926 = relay.TupleGetItem(func_2664_call(relay.reshape(var_3925.astype('int32'), [12, 10, 11]), relay.reshape(var_3925.astype('int32'), [12, 10, 11]), ), 1)
uop_3934 = relay.erf(var_3925.astype('float32')) # shape=(12, 110)
uop_3948 = relay.rsqrt(uop_3934.astype('float32')) # shape=(12, 110)
bop_3960 = relay.floor_mod(uop_3934.astype('float32'), relay.reshape(call_3924.astype('float32'), relay.shape_of(uop_3934))) # shape=(12, 110)
bop_3963 = relay.floor_mod(uop_3934.astype('float32'), relay.reshape(call_3926.astype('float32'), relay.shape_of(uop_3934))) # shape=(12, 110)
bop_3967 = relay.bitwise_xor(uop_3948.astype('int32'), relay.reshape(bop_3960.astype('int32'), relay.shape_of(uop_3948))) # shape=(12, 110)
bop_3970 = relay.bitwise_xor(uop_3948.astype('int32'), relay.reshape(bop_3963.astype('int32'), relay.shape_of(uop_3948))) # shape=(12, 110)
uop_3973 = relay.cos(uop_3948.astype('float64')) # shape=(12, 110)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_3980 = func_1803_call()
call_3981 = func_1803_call()
output = relay.Tuple([call_3921,bop_3967,uop_3973,call_3980,])
output2 = relay.Tuple([call_3922,bop_3970,uop_3973,call_3981,])
func_3984 = relay.Function([var_3925,], output)
mod['func_3984'] = func_3984
mod = relay.transform.InferType()(mod)
var_3985 = relay.var("var_3985", dtype = "int32", shape = (12, 110))#candidate|3985|(12, 110)|var|int32
output = func_3984(var_3985)
func_3986 = relay.Function([var_3985], output)
mutated_mod['func_3986'] = func_3986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4061 = relay.var("var_4061", dtype = "float32", shape = (16, 6, 12))#candidate|4061|(16, 6, 12)|var|float32
uop_4062 = relay.rsqrt(var_4061.astype('float32')) # shape=(16, 6, 12)
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
var_4067 = relay.var("var_4067", dtype = "int32", shape = (150,))#candidate|4067|(150,)|var|int32
var_4068 = relay.var("var_4068", dtype = "int32", shape = (1200,))#candidate|4068|(1200,)|var|int32
call_4066 = relay.TupleGetItem(func_188_call(relay.reshape(var_4067.astype('int32'), [10, 15, 1]), relay.reshape(var_4068.astype('int32'), [10, 15, 8]), ), 0)
call_4069 = relay.TupleGetItem(func_191_call(relay.reshape(var_4067.astype('int32'), [10, 15, 1]), relay.reshape(var_4068.astype('int32'), [10, 15, 8]), ), 0)
output = relay.Tuple([uop_4062,call_4066,var_4067,var_4068,])
output2 = relay.Tuple([uop_4062,call_4069,var_4067,var_4068,])
func_4070 = relay.Function([var_4061,var_4067,var_4068,], output)
mod['func_4070'] = func_4070
mod = relay.transform.InferType()(mod)
mutated_mod['func_4070'] = func_4070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4070_call = mutated_mod.get_global_var('func_4070')
var_4072 = relay.var("var_4072", dtype = "float32", shape = (16, 6, 12))#candidate|4072|(16, 6, 12)|var|float32
var_4073 = relay.var("var_4073", dtype = "int32", shape = (150,))#candidate|4073|(150,)|var|int32
var_4074 = relay.var("var_4074", dtype = "int32", shape = (1200,))#candidate|4074|(1200,)|var|int32
call_4071 = func_4070_call(var_4072,var_4073,var_4074,)
output = call_4071
func_4075 = relay.Function([var_4072,var_4073,var_4074,], output)
mutated_mod['func_4075'] = func_4075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3919_call = mod.get_global_var('func_3919')
func_3920_call = mutated_mod.get_global_var('func_3920')
call_4096 = relay.TupleGetItem(func_3919_call(), 0)
call_4097 = relay.TupleGetItem(func_3920_call(), 0)
func_1094_call = mod.get_global_var('func_1094')
func_1098_call = mutated_mod.get_global_var('func_1098')
var_4105 = relay.var("var_4105", dtype = "uint32", shape = ())#candidate|4105|()|var|uint32
var_4106 = relay.var("var_4106", dtype = "uint32", shape = (1, 15))#candidate|4106|(1, 15)|var|uint32
const_4107 = relay.const([4,10,-8,6,-9,-1,-2,-9,5,7,-10,-2,-9,-10,-5,-4,3,-1,-4,-4,-4,7,-10,-6,-2,4,-5,-4,1,9,9,4,-5,4,2,6,4,1,-10,8,-2,-7,-7,3,-7,5,-6,-9,-2,2,-2,9,10,10,6,5,10,-7,2,-6,-2,6,-8,9,-9,-5,7,-7,-3,-10,-4,-9,6,-1,5,7,8,5,8,7,5,6,-3,1,-9,7,8,8,-1,2,8,-3,-1,-2,2,-6,-1,-9,7,-10,-4,2,2,-4,10,-9,5,7,-2,-7,-10,3,7,-6,5,3,-5,-9,-6,10,-1,8,-2,-2,-4,1,1,-5,-8,-3,7,10,10,8,4,-3,8,-1,-6,7,1,4,-3,-10,-10,-4,8,10,5,3,-8,4,-10,6,-7,6,10,10,10,4,3,-10,2,-9,2,6,-10,7,7,-6,8,-10,3,-4,2,-7,-6,5,9,-4,-6,10,-3,6,2,-4,-3,9,-6,10,-10,10,6,-3,9,-7,-10,-9,-3,4,-6,-6,-3,-6,7,-5,-5,-3,2,7,5,-6,-10,-9,9,-10,10,-3,-10,-9,5,4,-1,-2,-4,4,-10,4,5,-2,-5,-1,-8,-5,5,7,-10,-1,-9,3,9,-3,-10,-10,-8,-3,-7,-9,9,3,-10,4,-1,-10,-8,-4,-4,8,3,1,10,-6,8,-2,-9,-3,-5,-8,3,-9,-3,-8,9,3,3,3,9,10,5,8,-7,5,-9,-10,-1,3,-3,2,-8,6,-10,5,-10,-7,-5,1,6,-3,8,-7,-6,4,-3,3,-3,3,8,1,10,-3,4,6,9,-5,5,-6,4,10,8,1,2,5,9,-8,-5,-6,6,-7,3,1,-3,1,-9,-7,6,-8,-9,8,8,-10,8,10,-8,-10,8,-1,8,-10,-4,-4,2,-9,-5,-10,-5,-4,6,9,-2,7,10,-2,-3,-5,-9,7,3,6,-5,8,7,-2,-7,-9,10,10,-7,8,7,6,4,-1,1,4,-4,-5,6,5,8,4,-3,8,9,9,1,5,-1,2,-2,10,-9,-6,-2,-10,-9,6,3,10,-10,-9,6,-6,-8,1,-5,7,-5,10,-6,-8,9,6,10,3,7,-2,-5,2,-9,5,-3,9,-7,-7,-1,7,3,-1,1,4,5,-3,-4,-6,-5,8,-3,-7,-8,-3,-1,1,8,-6,4,-7,8,1,-2,-7,-6,-8,-4,1,-1,-2,-7,-8,-3,-3,6,7,-9,-6,-3,-9,-9,-2,-2,-4,-7,7,9,10,2,2,3,-2,8,-5,-4,-4,1,-6,8,8,-6,1,10,9,7,2,3,-4,3,-3,-6,-9,-4,-10,5,-8,-4,-10,4,-8,3,1,-3,6,-6,4,8,9,-10,-4,8,8,5,-6,-7,8,-6,3,-5,7,8,3,7,-9,10,2,7,10,5,-1,-2,-2,9,8,-6,7,-8,-1,-2,-4,6,-10,5,7,8,4,-6,-8,4,2,3,-4,-2,8,5,-6,-5,4,-10,1,8,8,2,10,6,-3,-3,-9,-2,-9,-8,-10,3,4,4,1,-9,-7,-9,-6,-10,3,8,8,-9,-8,2,-10,1,-10,7,8,-10,-8,3,3,3,-7,-8,-2,2,3,-8,-8,-7,6,10,4,9,1,6,-7,10,1,-1,-4,-2,6,10,-9,-4,4,8,-6,-10,1,10,6,-2,-7,-9,-5,-6,1,4,-4,2,2,6,7,4,-1,-3,-4,3,9,2,4,-4,-5,-2,9,-9,-6,-9,-10,-10,-7,7,10,-3,-3,-3,-5,2,5,1,10,5,4,6,8,4,-10,7,8,-9,6,-7,-6,9,3,-5,9,-8,5,6,1,-9,8,1,7,-8,-1,-2,-6,-10,2,-3,-7,-5,-6,-6,-10,9,10,-5,-9,7,-9,-9,-3,-3,4,7,6,4,2,10,2,9,9,-8,-6,10,-6,-10,6,4,-1,1,-3,-1,4,7,1,9,-10,10,-2,3,9,-8,9,7,5,7,-3,-2,-2,-5,5,-4,-1,-10,7,2,7,3,2,-7,-9,4,5,-1,5,9,-9,2,9,2,5,4,-2,1,-8,-10,3,9,7,2,-3,1,-3,-2,7,8,6,8,-10,1,-5,5,4,-5,-3,5,7,-7,-3,3,-3,-3,-5,-8,-10,-5,1,-5,5,7,7,3,10,-6,-1,2,-2,-4,6,3,2,-2,-9,7,7,1,8,1,4,-10,6,10,6,6,5,-9,9,-7,8,-4,9,-2,7,-4,9,-7,-5,5,-10,-5,-2,9,6,2,3,-1,-9,-9,4,-9,-7,-2,-3,4,-9,8,1,-5,-7,-1,2,3,2,-10,-5,-3,-7,-5,-1,-6,5,-4,-3,-3,5,-1,5,8,7,-6,-9,5,4,-8,6,-7,-8,-9,-7,1,6,9,-7,-9,-7,9,5,-1,3,-6,-3,-3,-4,-2,-3,-3,7,10,-10,-2,-5,-4,4,-1,-5,9,-10,9,-3,4,-5,6,-10,-8,7,-9,1,-5,9,6,-5,-3,7,10,2,7,3,-1,-10,-5,-1,1,10,-8,6,-4,-9,7,-9,-6,-2,-10,8,10,-10,-7,3,-2,-6,1,-4,-4,-4,-9,-9,-5,9,6,7,-5,2,10,2,8,4,-1,-6,3,5,2,10,6,3,7,9,8,8,9,-2,9,6,-8,4,-4,-7,4,4,-7,2,-6,9,-2,-6,6,-8,5,2,8,-5,4,7,-9,8,7,-1,-8,-10,7,3,-3,-6,-5,-2,-6,-5,8,10,4,-5,-5,5,7,8,-3,-5,10,-5,-2,7,-3,-10,-6,-10,8,1,-2,-9,-6,-10,7,-3,9,-1,-4,-10,-3,-10,9,-9,-7,-2,-1,-7,7,-5,-5,1,-8,-6,3,9,-4,-6,1,2,6,-7,5,3,3,8,6,-3,-6,-7,3,-6,7,4,5,-3,1,9,4,-10,10,5,1,-2,-5,5,-7,8,1,1,7,-1,4,4,4,4,-6,-1,7,2,-4,-3,-10,-4,-3,8,-9,-10,-9,-2,10,8,-5,3,-4,-5,3,-9,6,-3,8,-1,-10,-1,-5,3,-9,1,10,5,10,2,7,-6,7,-4,-3,-4,-3,-4,-8,-4,-8,10,-1,-1,4,-4,-5,5,-2,-8,1,-7,-7,-3,-10,1], dtype = "int32")#candidate|4107|(1200,)|const|int32
call_4104 = relay.TupleGetItem(func_1094_call(relay.reshape(var_4105.astype('uint32'), []), relay.reshape(var_4106.astype('uint32'), [1, 1, 15]), relay.reshape(const_4107.astype('int32'), [1200,]), ), 2)
call_4108 = relay.TupleGetItem(func_1098_call(relay.reshape(var_4105.astype('uint32'), []), relay.reshape(var_4106.astype('uint32'), [1, 1, 15]), relay.reshape(const_4107.astype('int32'), [1200,]), ), 2)
func_2838_call = mod.get_global_var('func_2838')
func_2840_call = mutated_mod.get_global_var('func_2840')
call_4112 = relay.TupleGetItem(func_2838_call(), 0)
call_4113 = relay.TupleGetItem(func_2840_call(), 0)
func_808_call = mod.get_global_var('func_808')
func_811_call = mutated_mod.get_global_var('func_811')
const_4115 = relay.const([-1.507155,9.243013,9.452225,-5.470463,-7.600789,-4.274452,7.556990,-1.967721,-8.632625,-6.503299,3.751794,-9.606635,-0.686063,5.435446,5.148557,-9.126204,-9.211921,7.523486,-7.239425,-0.200555,-5.264466,-7.540827,9.138646,-2.856217,-5.832423,4.151654,-9.011510,-0.966370,7.756008,5.136273,4.117890,0.407044,6.238392,-5.421822,-3.078160,4.510172,4.062659,0.864927,-7.197246,4.094550,-5.165372,0.618068,-0.598170,7.992733,2.374104,-2.204969,1.222561,6.662381,5.337526,-4.256672,-0.672001,-7.271197,5.866327,-1.581505,1.115384,-7.623011,-2.747444,9.269684,-5.661757,9.175097,8.797687,-3.030841,2.184226,5.376785,7.334839,-1.955182,7.307470,-2.887615,-4.529684,4.682117,-8.279161,5.683107,4.792239,7.781936,-1.753262,3.479874,9.960891,-6.100028], dtype = "float64")#candidate|4115|(78,)|const|float64
call_4114 = relay.TupleGetItem(func_808_call(relay.reshape(const_4115.astype('float64'), [2, 13, 3])), 0)
call_4116 = relay.TupleGetItem(func_811_call(relay.reshape(const_4115.astype('float64'), [2, 13, 3])), 0)
func_1366_call = mod.get_global_var('func_1366')
func_1369_call = mutated_mod.get_global_var('func_1369')
var_4138 = relay.var("var_4138", dtype = "float32", shape = (1, 756))#candidate|4138|(1, 756)|var|float32
call_4137 = relay.TupleGetItem(func_1366_call(relay.reshape(var_4138.astype('float32'), [9, 12, 7])), 0)
call_4139 = relay.TupleGetItem(func_1369_call(relay.reshape(var_4138.astype('float32'), [9, 12, 7])), 0)
bop_4142 = relay.greater(var_4106.astype('bool'), call_4112.astype('bool')) # shape=(9, 8, 15)
bop_4145 = relay.greater(var_4106.astype('bool'), call_4113.astype('bool')) # shape=(9, 8, 15)
bop_4157 = relay.bitwise_xor(const_4115.astype('uint16'), var_4105.astype('uint16')) # shape=(78,)
output = relay.Tuple([call_4096,call_4104,const_4107,call_4114,call_4137,var_4138,bop_4142,bop_4157,])
output2 = relay.Tuple([call_4097,call_4108,const_4107,call_4116,call_4139,var_4138,bop_4145,bop_4157,])
func_4177 = relay.Function([var_4105,var_4106,var_4138,], output)
mod['func_4177'] = func_4177
mod = relay.transform.InferType()(mod)
mutated_mod['func_4177'] = func_4177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4177_call = mutated_mod.get_global_var('func_4177')
var_4179 = relay.var("var_4179", dtype = "uint32", shape = ())#candidate|4179|()|var|uint32
var_4180 = relay.var("var_4180", dtype = "uint32", shape = (1, 15))#candidate|4180|(1, 15)|var|uint32
var_4181 = relay.var("var_4181", dtype = "float32", shape = (1, 756))#candidate|4181|(1, 756)|var|float32
call_4178 = func_4177_call(var_4179,var_4180,var_4181,)
output = call_4178
func_4182 = relay.Function([var_4179,var_4180,var_4181,], output)
mutated_mod['func_4182'] = func_4182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3543_call = mod.get_global_var('func_3543')
func_3545_call = mutated_mod.get_global_var('func_3545')
call_4206 = relay.TupleGetItem(func_3543_call(), 0)
call_4207 = relay.TupleGetItem(func_3545_call(), 0)
func_3250_call = mod.get_global_var('func_3250')
func_3252_call = mutated_mod.get_global_var('func_3252')
const_4217 = relay.const([[-3.688462,7.996036],[0.611153,-3.841718],[-2.666245,0.271923],[3.764874,-7.021085],[-8.743274,-2.169877],[-9.564224,6.078748],[8.641677,-5.929665],[-8.603253,-1.712828],[1.369553,8.654882],[-6.576625,-4.529090],[9.269164,-6.022082],[-4.408462,-4.300119],[5.300495,-0.854673],[6.427665,1.513405],[2.536419,-4.371979],[-3.146960,-6.822193],[-9.803650,8.786259],[-5.151313,-0.613466],[2.762205,-5.719236],[8.401171,-0.704828],[6.997204,-4.741325],[6.936250,-1.320362],[-5.746375,-2.503310],[7.517623,-8.912929],[-0.046171,9.402450],[-5.921682,-8.913898],[-4.155536,6.223765]], dtype = "float64")#candidate|4217|(27, 2)|const|float64
call_4216 = relay.TupleGetItem(func_3250_call(relay.reshape(const_4217.astype('float64'), [3, 18])), 0)
call_4218 = relay.TupleGetItem(func_3252_call(relay.reshape(const_4217.astype('float64'), [3, 18])), 0)
var_4221 = relay.var("var_4221", dtype = "float64", shape = (27, 2))#candidate|4221|(27, 2)|var|float64
bop_4222 = relay.logical_xor(const_4217.astype('uint64'), relay.reshape(var_4221.astype('uint64'), relay.shape_of(const_4217))) # shape=(27, 2)
output = relay.Tuple([call_4206,call_4216,bop_4222,])
output2 = relay.Tuple([call_4207,call_4218,bop_4222,])
func_4239 = relay.Function([var_4221,], output)
mod['func_4239'] = func_4239
mod = relay.transform.InferType()(mod)
var_4240 = relay.var("var_4240", dtype = "float64", shape = (27, 2))#candidate|4240|(27, 2)|var|float64
output = func_4239(var_4240)
func_4241 = relay.Function([var_4240], output)
mutated_mod['func_4241'] = func_4241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2838_call = mod.get_global_var('func_2838')
func_2840_call = mutated_mod.get_global_var('func_2840')
call_4248 = relay.TupleGetItem(func_2838_call(), 0)
call_4249 = relay.TupleGetItem(func_2840_call(), 0)
uop_4252 = relay.sigmoid(call_4248.astype('float64')) # shape=(9, 8, 15)
uop_4254 = relay.sigmoid(call_4249.astype('float64')) # shape=(9, 8, 15)
output = uop_4252
output2 = uop_4254
func_4270 = relay.Function([], output)
mod['func_4270'] = func_4270
mod = relay.transform.InferType()(mod)
mutated_mod['func_4270'] = func_4270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mutated_mod.get_global_var('func_4270')
call_4271 = func_4270_call()
output = call_4271
func_4272 = relay.Function([], output)
mutated_mod['func_4272'] = func_4272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3497_call = mod.get_global_var('func_3497')
func_3499_call = mutated_mod.get_global_var('func_3499')
call_4277 = func_3497_call()
call_4278 = func_3497_call()
output = relay.Tuple([call_4277,])
output2 = relay.Tuple([call_4278,])
func_4279 = relay.Function([], output)
mod['func_4279'] = func_4279
mod = relay.transform.InferType()(mod)
mutated_mod['func_4279'] = func_4279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4279_call = mutated_mod.get_global_var('func_4279')
call_4280 = func_4279_call()
output = call_4280
func_4281 = relay.Function([], output)
mutated_mod['func_4281'] = func_4281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2481_call = mod.get_global_var('func_2481')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_4345 = func_2481_call()
call_4346 = func_2481_call()
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_4347 = func_4270_call()
call_4348 = func_4270_call()
uop_4357 = relay.rsqrt(call_4345.astype('float64')) # shape=(2, 9, 7)
uop_4359 = relay.rsqrt(call_4346.astype('float64')) # shape=(2, 9, 7)
uop_4369 = relay.erf(uop_4357.astype('float64')) # shape=(2, 9, 7)
uop_4371 = relay.erf(uop_4359.astype('float64')) # shape=(2, 9, 7)
uop_4372 = relay.acosh(uop_4369.astype('float64')) # shape=(2, 9, 7)
uop_4374 = relay.acosh(uop_4371.astype('float64')) # shape=(2, 9, 7)
bop_4378 = relay.logical_or(uop_4372.astype('bool'), relay.reshape(uop_4357.astype('bool'), relay.shape_of(uop_4372))) # shape=(2, 9, 7)
bop_4381 = relay.logical_or(uop_4374.astype('bool'), relay.reshape(uop_4359.astype('bool'), relay.shape_of(uop_4374))) # shape=(2, 9, 7)
func_2019_call = mod.get_global_var('func_2019')
func_2021_call = mutated_mod.get_global_var('func_2021')
call_4382 = relay.TupleGetItem(func_2019_call(), 0)
call_4383 = relay.TupleGetItem(func_2021_call(), 0)
var_4392 = relay.var("var_4392", dtype = "float64", shape = (2, 9, 7))#candidate|4392|(2, 9, 7)|var|float64
bop_4393 = relay.equal(uop_4369.astype('bool'), relay.reshape(var_4392.astype('bool'), relay.shape_of(uop_4369))) # shape=(2, 9, 7)
bop_4396 = relay.equal(uop_4371.astype('bool'), relay.reshape(var_4392.astype('bool'), relay.shape_of(uop_4371))) # shape=(2, 9, 7)
output = relay.Tuple([call_4347,bop_4378,call_4382,bop_4393,])
output2 = relay.Tuple([call_4348,bop_4381,call_4383,bop_4396,])
func_4402 = relay.Function([var_4392,], output)
mod['func_4402'] = func_4402
mod = relay.transform.InferType()(mod)
var_4403 = relay.var("var_4403", dtype = "float64", shape = (2, 9, 7))#candidate|4403|(2, 9, 7)|var|float64
output = func_4402(var_4403)
func_4404 = relay.Function([var_4403], output)
mutated_mod['func_4404'] = func_4404
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4454 = relay.const([[[-2.618121],[-2.214245],[4.379452],[8.291710],[-4.394734],[-6.273014]],[[-2.943288],[0.658925],[7.242090],[7.070101],[3.201882],[4.494497]],[[8.228172],[-0.121529],[-1.161790],[-3.641477],[-1.843293],[1.501449]],[[-0.479901],[4.184853],[-9.218990],[8.530685],[-6.681846],[8.914832]],[[3.344128],[1.054120],[-5.886660],[5.357793],[-9.415008],[2.443662]]], dtype = "float32")#candidate|4454|(5, 6, 1)|const|float32
uop_4455 = relay.sinh(const_4454.astype('float32')) # shape=(5, 6, 1)
output = uop_4455
output2 = uop_4455
func_4465 = relay.Function([], output)
mod['func_4465'] = func_4465
mod = relay.transform.InferType()(mod)
output = func_4465()
func_4466 = relay.Function([], output)
mutated_mod['func_4466'] = func_4466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1920_call = mod.get_global_var('func_1920')
func_1921_call = mutated_mod.get_global_var('func_1921')
call_4498 = relay.TupleGetItem(func_1920_call(), 0)
call_4499 = relay.TupleGetItem(func_1921_call(), 0)
uop_4504 = relay.tan(call_4498.astype('float32')) # shape=(2, 9, 7)
uop_4506 = relay.tan(call_4499.astype('float32')) # shape=(2, 9, 7)
output = uop_4504
output2 = uop_4506
func_4513 = relay.Function([], output)
mod['func_4513'] = func_4513
mod = relay.transform.InferType()(mod)
output = func_4513()
func_4514 = relay.Function([], output)
mutated_mod['func_4514'] = func_4514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2284_call = mod.get_global_var('func_2284')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_4544 = relay.TupleGetItem(func_2284_call(), 0)
call_4545 = relay.TupleGetItem(func_2285_call(), 0)
const_4552 = relay.const([[[5.462551,-0.237301,5.457248,1.185596,-3.052399,5.337156,-3.978514],[-2.093120,-4.754742,-4.580100,4.132939,-4.514575,-2.493965,-5.202545],[2.745173,9.050161,-6.726768,1.362886,6.080884,-2.321363,6.153303],[4.024498,-5.834514,-2.473621,-2.966007,3.015860,-9.954112,-5.338601],[-3.352232,-6.076327,-1.015227,9.083150,-5.891441,0.837108,6.502818],[0.592471,3.504162,-7.035564,-1.886762,-1.326863,1.886566,5.201813],[4.066236,-0.558554,-6.749403,5.689304,-4.943796,3.277355,3.654624],[2.212459,-3.381743,-2.016508,9.708181,7.242366,1.972133,-8.610429],[-6.272616,1.612846,5.213763,2.503774,-6.547516,8.471862,2.507157]],[[2.686679,0.121536,-0.861242,0.754842,4.602698,1.963557,7.461950],[-7.597543,-8.422359,4.407629,-7.551661,7.697092,-0.607754,-0.946193],[2.026629,-9.827108,1.303511,5.760597,-3.359748,-0.317540,5.620103],[-9.870931,-8.531584,-2.857298,7.877386,-2.869072,-5.141467,-7.322067],[-7.974645,-1.469035,-7.882816,-3.046651,-4.466974,6.920078,1.541097],[-0.763571,-7.418814,4.022774,0.477558,2.627098,4.555644,-5.824577],[5.663538,-0.360401,-0.520461,8.635187,8.689978,-0.638095,6.669618],[-7.671436,9.363817,2.509891,-8.452444,-2.548623,-4.980565,-0.009320],[-4.106554,-0.514418,6.894237,8.440443,6.121051,1.942307,-0.859620]]], dtype = "float64")#candidate|4552|(2, 9, 7)|const|float64
bop_4553 = relay.bitwise_and(call_4544.astype('int64'), relay.reshape(const_4552.astype('int64'), relay.shape_of(call_4544))) # shape=(2, 9, 7)
bop_4556 = relay.bitwise_and(call_4545.astype('int64'), relay.reshape(const_4552.astype('int64'), relay.shape_of(call_4545))) # shape=(2, 9, 7)
uop_4561 = relay.cosh(call_4544.astype('float32')) # shape=(2, 9, 7)
uop_4563 = relay.cosh(call_4545.astype('float32')) # shape=(2, 9, 7)
bop_4582 = relay.greater(call_4544.astype('bool'), relay.reshape(const_4552.astype('bool'), relay.shape_of(call_4544))) # shape=(2, 9, 7)
bop_4585 = relay.greater(call_4545.astype('bool'), relay.reshape(const_4552.astype('bool'), relay.shape_of(call_4545))) # shape=(2, 9, 7)
func_3575_call = mod.get_global_var('func_3575')
func_3578_call = mutated_mod.get_global_var('func_3578')
const_4596 = relay.const([-5.890054,8.037561,-7.266437,6.100863,-6.979949,6.922343,-5.567235,1.182284,9.817257,-3.853384,0.831300,0.807479,-4.584016,-6.075457,6.302216,1.172078,-2.459576,0.647357,3.719968,1.508784,-1.340512,-1.747528,3.209941,4.945323,4.670019,-2.048380,-1.432727,4.722498,-9.750366,-4.289963,3.771090,3.833437,3.232164,-6.905028,5.987977,-6.837909,6.233166,-8.077169,-7.622212,8.732075,-1.439621,9.291861,3.714828,5.123556,-1.168885,7.144720,7.799056,-6.991378,-0.321543,0.274655,-2.706320,8.472734,2.543567,-3.684340,7.198212,6.971621,-1.462810,3.463975,1.078384,5.551451,-9.805881,1.439261,9.998664,-9.767891,9.588317,4.385619,7.810909,2.033136,0.573679,3.583389,8.298943,-9.444916,9.467832,6.357226,-1.317783,-6.145278,6.665643,-7.184909,9.426148,-4.404314,-2.939534,8.501848,-9.880457,-7.092112,-5.391241,8.415054,-8.715064,7.417146,3.233385,-8.342756,4.670754,-3.263461,9.831568,5.681706,-8.217537,7.612458,-1.764287,-3.983103,7.198551,-2.626847,-8.965816,3.230529,0.301772,-4.175762,6.094519,-0.687401,-7.272766,4.635117,0.416458,-7.229066,5.984020,-1.158917,-7.061570,-7.304980,-4.737194,-4.841391,-2.423067,5.386122,-4.043676,-0.363448,9.307128,9.051164,-9.312211,5.615052,7.442631,9.715868,1.115576,-3.908358,-6.769927,9.564010,8.992440,-4.576413,2.098494,5.733689,8.145958,6.595482,-3.280685,-7.738015,1.055187,-9.279620,-6.494111,9.569688,-6.465750,6.044685,2.709934,5.535316,-2.137744,-3.596225,9.805132,-2.167699,-7.954671,5.422354,-1.268032,7.907152,6.102362,-0.559975,3.157526,8.805297,-9.084697,-6.683514,6.602403,-5.247931,4.529873,0.212863,3.612567,-6.732607,8.743765,-3.560179,9.857167,-6.638344,-3.127632,-9.736494,-4.522135,9.788810,0.260810,-7.422937,9.522835,-1.831255,-8.217817,8.842990,9.401282,1.775754,-9.622568,-9.559509,1.132788,-1.724926,-9.572103,3.449241,7.977531,5.553291,-4.089547,2.547013,-9.160456,9.091577,-3.920733,-2.244274,-1.965055,-9.698029,-4.547329,-6.074529,6.193619,6.037540,-9.336617,8.581447,0.822525,-4.160354,-6.528927,2.879623,2.811488,0.227198,7.039932,-9.565578,0.646454,-9.355018,8.323840,1.734979,-9.615641,-1.096171,1.042900,-5.023655,-9.115208,7.479387,-5.002392,-7.365719,2.497965,6.187711,8.166575,-1.970271,3.759379,-5.087964,9.361006,5.093089,-0.041978,-7.333453,7.623878,-1.699696,1.609995,0.351504,-5.791044,-7.556133,3.619859,7.991081,0.368599,-6.597901,-2.126754,5.952761,-1.800455,6.703383,0.969746,5.481358,-0.277237,-8.033956,0.457355,-8.355478,4.374829,0.963046,-9.396981,-1.761016,-3.347174,-4.401743,3.925550,-3.560998,1.806267,0.539584,-6.233537,1.087877,-0.476493,-1.879788,4.988132,-1.091426,6.972840,-8.844474,-1.427674,4.455193,0.884036,7.341600,-5.565702,-8.512123,-0.625318,-9.518435,-0.240134,0.437519,1.791926,-8.659163,-8.389674,-5.443348,-5.422245,-5.322940,4.212085,5.342067,3.305728,0.961953,0.288285,0.827948,9.019378,-9.328019,-1.256209,0.531551,3.097580,-1.568683,-7.646262,-4.576672,0.130148,7.755177,-1.752815,5.652081,2.148625,3.507990,5.334721,-9.349954,-7.767078,-5.685256,0.470327,0.346040,-5.472223,-6.006006,-3.972628,6.776658,2.244399,-4.382354,-1.851001,-5.440873,-2.703295,-5.947088,-8.119673,5.416172,6.902348,6.784591,3.206244,8.891735,7.559069,-4.072160,-6.704654,8.299064,-8.165591,-5.210223,-7.135436,-4.363816,-4.113479,-7.070933,-8.420500,-6.274847,0.664488,-0.292192,-3.341491,-7.838558,8.303290,4.089339,5.564280,-9.056461,-1.895787,-8.568284,9.124023,0.425217,4.445711,-6.187714,8.401071,7.709573,4.947772,8.959797,3.394165,3.698968,-4.508451,1.395090,8.788577,0.430211,-3.725131,-5.714656,4.149938,3.394333,1.727439,-9.796606,-7.121762,-9.522352,9.642959,0.533417,5.065897,7.377018,4.056868,8.537090,-8.211161,-3.078596,-2.025139,-0.397772,8.193897,-5.897357,-1.297961,5.485027,-1.975145,-6.151195,-3.557458,0.173261,-9.964507,6.103250,9.843614,-0.395016,-8.306998,-8.610112,-9.837195,-6.247724,-1.618044,-7.908448,4.955305,-7.454473,7.743215,1.244288,-6.868995,-5.765710,4.539102,6.309401,-1.922778,5.068894,-0.517905,-6.573053,-6.024309,-1.781241,0.909511,4.313253,5.941777,8.836714,-4.531695,-3.253312,1.045070,1.374899,-8.202630,4.395130,0.656246,1.233775,-9.412426,-8.206642,-0.635153,5.343662,7.879863,-0.926623,-8.467957,-2.049044,-7.671826,-9.325905,4.921934,7.340092,-6.716218,-9.991890,8.488971,2.993290,1.313204,-4.677978,0.372427,-6.379684,0.460737,4.270544,-6.845926,-4.477985,-1.928010,-7.027517,9.915268,0.281514,-5.821397,1.775191,-7.122757,9.687953,-2.620289,8.589322,6.874801,-4.621056,0.094525,3.660535,5.502165,-5.266246,-2.076173,6.423035,-9.773141,7.367409,7.529890,-3.708614,2.835314,7.784668,-9.127100,7.885487,-2.590936,-7.257506,0.218115,6.553927,7.766848,-8.157632,-3.980273,3.704253,7.231998,3.307773,8.467569,-8.779681,2.733988,-8.849156,-0.013107,-7.311817,-7.799236,-7.719547,-8.082380,-0.284323,-5.382489,7.059178,3.097740,5.916219,6.756710,5.430093,2.232903,6.192942,5.623281,-5.276290,-1.304048,4.430751,5.712442,-7.188622,4.641299,9.096783,-4.427007,9.993813,-2.532482,-9.609968,3.522840,-5.961586,4.643579,-0.578415,-8.567302,-2.771860,2.642459,2.058927,-4.306936,-1.665718,-3.059823,1.279391,-5.327381,-5.141154,9.997809,-0.801779,-6.988692,4.160472,-7.283049,7.342399,-2.821552,7.452844,7.191179,-7.996315,9.461411,4.944151,5.586368,-6.763098,0.865766,-1.269515,8.929331,-9.394587,0.336242,0.623688,3.516143,-6.677896,-6.327087,8.004624,-4.899258,7.785543,-8.956896,-9.250190,3.683256,9.860399,6.141502,-0.602740,-2.354038,2.744433,-3.967608,3.298268,6.722665,-8.400607,-1.717185,8.944645,4.136577,-7.904386,9.134219,3.222582,4.745283,-4.995453,-0.933045,8.700580,7.576107,2.374638,2.323053,0.361067,-5.448190,-5.933420,6.656448,-3.548876,6.100938,-3.340135,9.377898,4.557409,-6.302188,9.146193,-4.707998,8.733210,1.042474,-7.472105,7.924603,2.050412,9.843262,-5.475623,8.043076,8.852825,1.543528,-0.686495,-9.262613,0.927546,7.364698,1.312801,9.458841,0.936995,8.743239,4.909695,2.930140,9.337508,7.736976,5.887343,-4.877474,4.333514,-7.562721,-7.670826,4.873806,0.894767,-9.428886,6.735943,5.468957,7.077136,-9.737272,5.542554,4.022934,-5.703168,0.635263,-7.951056,-3.360960,7.023210,4.723147,4.048942,-5.146034,9.147689,-3.930669,-3.577351,4.566525,-1.218274,9.941841,5.235231,-7.699210,0.221039,7.779866,0.921811,2.845879,-3.309757,-7.639611,2.846197,-5.297934,-1.400584,1.352892,-7.176254,-0.529607,-8.459870,-6.086464,-0.485478,0.526143,-0.928334,6.069345,2.766136,7.517090,0.015202,3.951141,-7.821687,0.642549,-5.302373,9.291857,9.572518,-9.299961,0.543903,1.884412,2.034554,7.981725,5.952188,-1.001451,4.449736,-1.742943,0.611743,-4.969202,4.805675,-7.862762,-8.948310,-0.519003,7.434562,-1.832035,-1.394839,1.537302,-7.421668,2.238256,8.056642,-3.776204,2.548177,-2.879285,7.052747,-0.824452,-3.783069,-0.460233,3.342397,2.424246,2.564035,5.533055,8.136096,-3.271042,-2.452145,-4.302843,7.881677,-4.989630,4.734210,3.215188,8.560063,-5.980141,1.686032,0.574902,3.300425,4.977642,-7.992009,-7.789338,2.769155,1.197401,7.823666,-0.417028,0.843258,4.426192,7.006549,1.040519,5.318020,-9.931842,-9.841226,2.436005,-0.410740,8.168405,1.155511,7.280862,-8.803454,-6.006383,-1.128647,-5.503599,-6.530884,-3.120621,-5.019669,-1.936496,9.440064,-1.432197,-6.452574,-3.839478,8.007131,9.175038,4.704373,4.897630,-5.141188,2.874602,-1.381336,-3.495134,-5.553582,-8.887604,-2.339899,-9.625050,-1.539211,4.557965,-3.257913,1.640094,8.895679,-7.240925,3.710729,-2.522830,-9.714262,-4.007229,6.377798,1.153270,-8.590420,9.383659,-6.585671,-1.659013,-6.960284,-5.090895,2.502141,-0.823182,-3.107652,-9.405507,6.140763,1.848193,-2.048751,-9.587578,-7.336156,9.516074,-4.365427,4.954662,-5.541272,0.852292,-8.185076,5.521356,1.695141,-8.551902,5.123423,-1.150161,-8.612142,-0.051763,3.692857,-1.285022,-6.986155,-1.239676,-1.539121,6.406167,-7.365341,-0.196221,-3.801678,-7.853083,3.408371,-8.373679,9.333323,3.165783,-1.428882,4.094699,1.236705,-2.852817,5.341346,-8.201981,-3.221195,0.333394,-2.964200,5.305174,6.240918,-0.689847,5.306065,5.623832,8.645162,-6.675013,-0.140345,-4.569780,0.469244,2.718393,9.022759,2.041291,-3.309361,-4.096040,-7.058108,9.539577,-1.470765,-1.719076,-3.950047,-9.052504,1.747142,-5.220652,-0.311187,5.632254,8.373853,8.375697,-9.879859,-2.918835,5.739370,9.041318,2.175857,8.353135,-9.687690,4.028139,-0.006951,1.610480,-3.412557,7.496555,-5.172607,-3.383260,-8.910010,-9.984654,-5.055083,5.402006,-8.794558,1.088196,4.110655,7.858603,9.106356,2.714110,-1.268232,7.195397,-4.329027,-9.670244,1.102279,-4.907459,-7.584077,-8.300271,5.889063,-1.470061,-0.569568,1.339324,-8.760379,9.479095,7.373659,7.817172,9.606135,-5.210451,-0.506006,-4.796039,-9.448572,0.182168,-2.975360,2.833758,8.199076,2.262831,-8.845942,2.432887,5.081178,-0.607834,1.963533,-9.396315,-0.540919,-4.928733,5.904545,-3.855388,0.045974,-2.448337,3.097805,-2.238422,0.831276,-2.918919,-7.867462,1.212966,-3.577669,3.792441,1.202476,9.494537,-5.281027,-1.503950,-6.774979,5.868306,-5.284496,2.188618,-7.767198,-6.518889,9.201163,5.162549,1.314742,9.722128,-0.079210,1.069786,1.364927,6.958206,8.825547,1.244660,-6.433875,4.911863,5.476585,-8.576237,-7.795277,7.583614,1.878756,-7.177181,2.610015,-2.066716,-8.132103,-5.228152,-2.996937,5.526465,0.780409,-1.679357,-6.144820,8.519234,-7.388851,9.059350,-9.824216,0.422420,5.397847,-6.398655,9.903646,-3.730062,8.627008,3.891143,-0.296533,0.249449,-8.306773,3.639139,2.774064,-7.078282,-1.131265,0.371421,-6.089833,-0.479630,-1.795897,2.341949,5.679308,3.111408,-7.827268,8.673256,0.747019,-8.837634,-4.209371,-3.953377,-0.962806,4.176351,-1.618134,-1.484052,1.476249,-8.197955,1.825022,-9.328892,8.475545,7.902503,-9.288567,-4.903856,5.649911,6.039611,-4.713516,-2.053352,-2.301820,3.694787,-5.591759,-1.512107,-6.596238,6.831804,-8.443912,7.284600,2.038613,7.430850,0.464054,5.429966,-6.194423,-1.262375,9.884022,-2.288063,-9.868173,-0.797777,1.191812,1.040160,-5.935756,4.615781,-3.838898,-7.518924,-5.895594,3.119331,-9.520240,-7.729503,-9.349923,8.565652,8.440399,9.654982,-7.327160,-1.697128,-6.373445,1.248385,-2.167713,0.058862,4.398605,-5.958223,7.321149,4.358206,5.085309,7.813573,-8.976265,1.263584,-2.393050,-9.673211,-2.327221,-8.609037,-2.072118,7.912768,-9.329492,8.093308,4.306412,1.391950,2.342699,-0.471268,6.634178,-3.604064,-3.973184,7.590089,3.920526,5.360956,9.452762,-5.637680,-3.830946,-5.316834,1.074530,-1.171035,-4.225338,9.014390,2.682358,-1.012205,2.198792,-0.498534,-9.029732,-5.109933,7.623153,6.968154,5.827170,-3.021378,-6.162117,4.532998,-2.801707,-8.000836,2.815074,4.028044,6.421873,0.757473,-2.354033,-5.377916,-0.850474,-5.966387,4.632170,-8.876294,-2.506514,-6.561466,8.474156,-7.356090,6.582863,-9.692350,-1.115651,6.814961,1.640072,9.649467,8.374976,-3.145121,-2.432358,6.059522,0.711639,7.152284,4.182046,-0.546355,6.023006,-9.170260,7.164677,8.426202,-5.337982,7.152368,-6.025662,-4.169254,-1.973504,5.110278,8.149784,-6.176107,-4.853473,-2.272028,5.232062,-5.476084,7.421964,-1.186498,-1.320130,0.662584,-2.786809,-7.864322,4.613952,-6.514257,-2.712778,-6.142187,6.428736,-2.080378,-5.685221,0.276520,7.836371,-1.302201,-7.448630,0.772219,8.665300,-9.242502,6.618044,-8.385325,9.741331,-5.784850,-3.395216,2.645898,-3.393111,0.531041,0.113160,-0.542011,-3.665138,8.998927,4.149863,3.842733,9.132356,3.292631,3.671553,8.689448,-3.461988,-7.835950,9.479028,-5.328791,1.869872,-0.348544,-6.430624,1.404140,-4.808401,-4.928217,2.712105,-7.536111,2.935442,7.306828,5.304408,4.792116,-3.789024,-0.512247,3.356617,7.575686,-8.228605,2.496538,4.850154,8.932948,-6.341083,4.714062,-4.397984,-7.808498,3.230616,-5.149922,6.992517,8.808948,7.923258,2.472355,-2.019603,6.899126,-8.916055,-6.982230,8.625115,9.964726,1.789063,2.041795,-8.549355,9.404804,8.164350,-3.558992,4.768568,-3.558020,0.285337,5.842527,2.154444,-7.113571,-7.557631,2.882595,6.154006,8.541958,5.847942], dtype = "float64")#candidate|4596|(1232,)|const|float64
call_4595 = relay.TupleGetItem(func_3575_call(relay.reshape(const_4596.astype('float64'), [8, 11, 14])), 0)
call_4597 = relay.TupleGetItem(func_3578_call(relay.reshape(const_4596.astype('float64'), [8, 11, 14])), 0)
var_4609 = relay.var("var_4609", dtype = "float64", shape = (2, 9, 7))#candidate|4609|(2, 9, 7)|var|float64
bop_4610 = relay.mod(const_4552.astype('float64'), relay.reshape(var_4609.astype('float64'), relay.shape_of(const_4552))) # shape=(2, 9, 7)
bop_4618 = relay.multiply(const_4596.astype('uint32'), relay.reshape(call_4595.astype('uint32'), relay.shape_of(const_4596))) # shape=(1232,)
bop_4621 = relay.multiply(const_4596.astype('uint32'), relay.reshape(call_4597.astype('uint32'), relay.shape_of(const_4596))) # shape=(1232,)
bop_4624 = relay.maximum(uop_4561.astype('int32'), relay.reshape(bop_4582.astype('int32'), relay.shape_of(uop_4561))) # shape=(2, 9, 7)
bop_4627 = relay.maximum(uop_4563.astype('int32'), relay.reshape(bop_4585.astype('int32'), relay.shape_of(uop_4563))) # shape=(2, 9, 7)
func_3333_call = mod.get_global_var('func_3333')
func_3334_call = mutated_mod.get_global_var('func_3334')
call_4630 = relay.TupleGetItem(func_3333_call(), 0)
call_4631 = relay.TupleGetItem(func_3334_call(), 0)
output = relay.Tuple([bop_4553,bop_4610,bop_4618,bop_4624,call_4630,])
output2 = relay.Tuple([bop_4556,bop_4610,bop_4621,bop_4627,call_4631,])
func_4633 = relay.Function([var_4609,], output)
mod['func_4633'] = func_4633
mod = relay.transform.InferType()(mod)
mutated_mod['func_4633'] = func_4633
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4634 = relay.var("var_4634", dtype = "float64", shape = (2, 9, 7))#candidate|4634|(2, 9, 7)|var|float64
func_4633_call = mutated_mod.get_global_var('func_4633')
call_4635 = func_4633_call(var_4634)
output = call_4635
func_4636 = relay.Function([var_4634], output)
mutated_mod['func_4636'] = func_4636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2838_call = mod.get_global_var('func_2838')
func_2840_call = mutated_mod.get_global_var('func_2840')
call_4638 = relay.TupleGetItem(func_2838_call(), 0)
call_4639 = relay.TupleGetItem(func_2840_call(), 0)
output = relay.Tuple([call_4638,])
output2 = relay.Tuple([call_4639,])
func_4640 = relay.Function([], output)
mod['func_4640'] = func_4640
mod = relay.transform.InferType()(mod)
mutated_mod['func_4640'] = func_4640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4640_call = mutated_mod.get_global_var('func_4640')
call_4641 = func_4640_call()
output = call_4641
func_4642 = relay.Function([], output)
mutated_mod['func_4642'] = func_4642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3223_call = mod.get_global_var('func_3223')
func_3225_call = mutated_mod.get_global_var('func_3225')
call_4689 = relay.TupleGetItem(func_3223_call(), 3)
call_4690 = relay.TupleGetItem(func_3225_call(), 3)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_4692 = relay.TupleGetItem(func_1200_call(), 0)
call_4693 = relay.TupleGetItem(func_1201_call(), 0)
var_4704 = relay.var("var_4704", dtype = "float64", shape = (2, 9, 7))#candidate|4704|(2, 9, 7)|var|float64
bop_4705 = relay.divide(call_4692.astype('float64'), relay.reshape(var_4704.astype('float64'), relay.shape_of(call_4692))) # shape=(2, 9, 7)
bop_4708 = relay.divide(call_4693.astype('float64'), relay.reshape(var_4704.astype('float64'), relay.shape_of(call_4693))) # shape=(2, 9, 7)
output = relay.Tuple([call_4689,bop_4705,])
output2 = relay.Tuple([call_4690,bop_4708,])
func_4712 = relay.Function([var_4704,], output)
mod['func_4712'] = func_4712
mod = relay.transform.InferType()(mod)
var_4713 = relay.var("var_4713", dtype = "float64", shape = (2, 9, 7))#candidate|4713|(2, 9, 7)|var|float64
output = func_4712(var_4713)
func_4714 = relay.Function([var_4713], output)
mutated_mod['func_4714'] = func_4714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4279_call = mod.get_global_var('func_4279')
func_4281_call = mutated_mod.get_global_var('func_4281')
call_4724 = relay.TupleGetItem(func_4279_call(), 0)
call_4725 = relay.TupleGetItem(func_4281_call(), 0)
uop_4732 = relay.cos(call_4724.astype('float32')) # shape=(2, 9, 7)
uop_4734 = relay.cos(call_4725.astype('float32')) # shape=(2, 9, 7)
output = uop_4732
output2 = uop_4734
func_4738 = relay.Function([], output)
mod['func_4738'] = func_4738
mod = relay.transform.InferType()(mod)
output = func_4738()
func_4739 = relay.Function([], output)
mutated_mod['func_4739'] = func_4739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3104_call = mod.get_global_var('func_3104')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_4763 = func_3104_call()
call_4764 = func_3104_call()
func_3444_call = mod.get_global_var('func_3444')
func_3446_call = mutated_mod.get_global_var('func_3446')
call_4775 = func_3444_call()
call_4776 = func_3444_call()
output = relay.Tuple([call_4763,call_4775,])
output2 = relay.Tuple([call_4764,call_4776,])
func_4777 = relay.Function([], output)
mod['func_4777'] = func_4777
mod = relay.transform.InferType()(mod)
mutated_mod['func_4777'] = func_4777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4777_call = mutated_mod.get_global_var('func_4777')
call_4778 = func_4777_call()
output = call_4778
func_4779 = relay.Function([], output)
mutated_mod['func_4779'] = func_4779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3104_call = mod.get_global_var('func_3104')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_4796 = func_3104_call()
call_4797 = func_3104_call()
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_4798 = relay.TupleGetItem(func_1200_call(), 0)
call_4799 = relay.TupleGetItem(func_1201_call(), 0)
output = relay.Tuple([call_4796,call_4798,])
output2 = relay.Tuple([call_4797,call_4799,])
func_4806 = relay.Function([], output)
mod['func_4806'] = func_4806
mod = relay.transform.InferType()(mod)
output = func_4806()
func_4807 = relay.Function([], output)
mutated_mod['func_4807'] = func_4807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2838_call = mod.get_global_var('func_2838')
func_2840_call = mutated_mod.get_global_var('func_2840')
call_4857 = relay.TupleGetItem(func_2838_call(), 0)
call_4858 = relay.TupleGetItem(func_2840_call(), 0)
uop_4860 = relay.acosh(call_4857.astype('float64')) # shape=(9, 8, 15)
uop_4862 = relay.acosh(call_4858.astype('float64')) # shape=(9, 8, 15)
uop_4873 = relay.asin(call_4857.astype('float64')) # shape=(9, 8, 15)
uop_4875 = relay.asin(call_4858.astype('float64')) # shape=(9, 8, 15)
uop_4890 = relay.erf(uop_4860.astype('float64')) # shape=(9, 8, 15)
uop_4892 = relay.erf(uop_4862.astype('float64')) # shape=(9, 8, 15)
bop_4894 = relay.power(uop_4890.astype('float32'), relay.reshape(uop_4873.astype('float32'), relay.shape_of(uop_4890))) # shape=(9, 8, 15)
bop_4897 = relay.power(uop_4892.astype('float32'), relay.reshape(uop_4875.astype('float32'), relay.shape_of(uop_4892))) # shape=(9, 8, 15)
bop_4900 = relay.minimum(bop_4894.astype('uint8'), relay.reshape(uop_4873.astype('uint8'), relay.shape_of(bop_4894))) # shape=(9, 8, 15)
bop_4903 = relay.minimum(bop_4897.astype('uint8'), relay.reshape(uop_4875.astype('uint8'), relay.shape_of(bop_4897))) # shape=(9, 8, 15)
output = relay.Tuple([bop_4900,])
output2 = relay.Tuple([bop_4903,])
func_4907 = relay.Function([], output)
mod['func_4907'] = func_4907
mod = relay.transform.InferType()(mod)
output = func_4907()
func_4908 = relay.Function([], output)
mutated_mod['func_4908'] = func_4908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2298_call = mod.get_global_var('func_2298')
func_2300_call = mutated_mod.get_global_var('func_2300')
call_4920 = func_2298_call()
call_4921 = func_2298_call()
func_2481_call = mod.get_global_var('func_2481')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_4927 = func_2481_call()
call_4928 = func_2481_call()
output = relay.Tuple([call_4920,call_4927,])
output2 = relay.Tuple([call_4921,call_4928,])
func_4934 = relay.Function([], output)
mod['func_4934'] = func_4934
mod = relay.transform.InferType()(mod)
mutated_mod['func_4934'] = func_4934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4934_call = mutated_mod.get_global_var('func_4934')
call_4935 = func_4934_call()
output = call_4935
func_4936 = relay.Function([], output)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3444_call = mod.get_global_var('func_3444')
func_3446_call = mutated_mod.get_global_var('func_3446')
call_4937 = func_3444_call()
call_4938 = func_3444_call()
func_4712_call = mod.get_global_var('func_4712')
func_4714_call = mutated_mod.get_global_var('func_4714')
const_4940 = relay.const([8.439769,-5.700046,9.751680,-8.456461,-2.148529,1.217064,2.670503,-9.289572,0.096039,-5.404630,-0.656401,1.157766,-6.541391,1.201568,3.889712,8.592297,1.827241,-7.161723,0.089855,0.625084,-3.473326,8.754562,7.551906,-8.092394,3.257969,3.135640,0.662339,1.623333,6.979908,4.621722,7.164837,9.109175,-1.703316,7.051583,-5.085185,8.431757,-8.255413,-9.146221,8.758625,-6.167372,8.837260,-4.907716,-4.701332,-2.636145,-5.623649,8.675179,6.998918,-6.266479,-8.459226,4.336807,-3.142646,4.138070,8.045598,7.646072,-0.043330,2.285521,2.383109,-0.553256,-2.379056,3.431260,2.465138,-9.816535,6.346400,-3.536197,-2.455321,-3.459881,1.303771,3.678928,9.300125,0.957009,8.880754,6.184596,-0.286034,-9.463104,7.982862,-3.373986,-4.992905,8.043066,4.840674,9.293036,4.454610,6.286139,5.811542,6.000036,0.777012,-4.660954,-8.075446,4.698961,-7.801486,4.374423,0.879477,-1.676011,-5.262043,6.754481,1.576299,8.633716,-7.357024,7.318158,-6.610923,-7.355801,5.782621,-1.769492,-0.056725,8.737280,9.992340,-4.062380,-3.235166,6.560367,-1.701159,-2.082879,1.947782,-0.481751,-6.891131,-5.431587,6.733088,-9.855175,1.384844,-4.475568,-3.883567,-1.012353,-5.535890,-4.623385,5.743273,1.246996,-0.661072,-2.483898], dtype = "float64")#candidate|4940|(126,)|const|float64
call_4939 = relay.TupleGetItem(func_4712_call(relay.reshape(const_4940.astype('float64'), [2, 9, 7])), 0)
call_4941 = relay.TupleGetItem(func_4714_call(relay.reshape(const_4940.astype('float64'), [2, 9, 7])), 0)
func_808_call = mod.get_global_var('func_808')
func_811_call = mutated_mod.get_global_var('func_811')
call_4946 = relay.TupleGetItem(func_808_call(relay.reshape(call_4937.astype('float64'), [2, 13, 3])), 0)
call_4947 = relay.TupleGetItem(func_811_call(relay.reshape(call_4937.astype('float64'), [2, 13, 3])), 0)
output = relay.Tuple([call_4937,call_4939,const_4940,call_4946,])
output2 = relay.Tuple([call_4938,call_4941,const_4940,call_4947,])
func_4948 = relay.Function([], output)
mod['func_4948'] = func_4948
mod = relay.transform.InferType()(mod)
output = func_4948()
func_4949 = relay.Function([], output)
mutated_mod['func_4949'] = func_4949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4777_call = mod.get_global_var('func_4777')
func_4779_call = mutated_mod.get_global_var('func_4779')
call_4976 = relay.TupleGetItem(func_4777_call(), 1)
call_4977 = relay.TupleGetItem(func_4779_call(), 1)
func_3697_call = mod.get_global_var('func_3697')
func_3700_call = mutated_mod.get_global_var('func_3700')
const_4985 = relay.const([-4,3,-10,4,-1,6,1,-9,6,-8,-4,5,-4,10,-10,10,5,-3,-8,-9,-5,-10,-6,-7,9,-5,-6,4,-1,-4,5,-6,7,5,6,4,-9,-10,-1,7,-2,-2,-3,10,9,6,8,-6,9,2,-5,7,-1,1,5,4,2,-8,2,-10,10,7,-8,-4,-4,2,-3,7,9,-7,-8,4,9,-9,-7,-4,-5,-6,-5,9,7,1,2,5,6,6,5,7,1,6,5,5,-2,2,-3,1,4,-1,1,-10,10,-2,5,10,5,3,8,9,-1,9,2,4,-3,-4,3,-1,9,9,-5,1,-4,8,-2,-2,-8,7,-3,7,7,8,5,-2,-5,2,9,7,-6,5,-2,1,2,-1,8,-10,-9,-5,-10,-3,-8,-4,-6,2,8,10,-6,1,6,10,-9,-10,-1,-7,2,7,-4,-8,-3,-2,8,4,-2,10,8,5,2,-8,-8,5,4,1], dtype = "uint32")#candidate|4985|(180,)|const|uint32
call_4984 = func_3697_call(relay.reshape(const_4985.astype('uint32'), [3, 6, 10]), relay.reshape(const_4985.astype('uint32'), [3, 6, 10]), )
call_4986 = func_3697_call(relay.reshape(const_4985.astype('uint32'), [3, 6, 10]), relay.reshape(const_4985.astype('uint32'), [3, 6, 10]), )
uop_4993 = relay.atanh(call_4976.astype('float32')) # shape=(78,)
uop_4995 = relay.atanh(call_4977.astype('float32')) # shape=(78,)
func_2481_call = mod.get_global_var('func_2481')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_5005 = func_2481_call()
call_5006 = func_2481_call()
uop_5014 = relay.asin(call_5005.astype('float32')) # shape=(2, 9, 7)
uop_5016 = relay.asin(call_5006.astype('float32')) # shape=(2, 9, 7)
output = relay.Tuple([call_4984,const_4985,uop_4993,uop_5014,])
output2 = relay.Tuple([call_4986,const_4985,uop_4995,uop_5016,])
func_5022 = relay.Function([], output)
mod['func_5022'] = func_5022
mod = relay.transform.InferType()(mod)
output = func_5022()
func_5023 = relay.Function([], output)
mutated_mod['func_5023'] = func_5023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5032 = relay.var("var_5032", dtype = "int8", shape = (12, 15, 14))#candidate|5032|(12, 15, 14)|var|int8
const_5033 = relay.const([[[-8,2,1,6,-9,-8,3,-6,-3,-4,-1,9,-9,2],[10,9,-3,2,10,-3,6,-1,3,5,-10,-10,-8,-2],[-5,-2,-4,-5,-3,-1,4,9,-3,10,-10,3,-6,3],[-1,-10,3,3,2,-4,-4,5,7,9,-8,6,-6,10],[-2,-3,-9,-1,-4,10,4,-8,-7,8,10,-5,-10,8],[10,5,2,4,2,4,2,9,-7,6,-3,1,-4,2],[7,-10,-10,8,-5,-3,-10,3,2,9,1,7,-10,7],[-5,9,-1,-7,-4,-10,7,-7,4,-10,2,-8,-5,-6],[3,10,-2,-8,-8,3,1,-2,-9,-7,9,-9,-7,1],[-2,-6,10,-3,-6,5,-7,7,-4,-8,10,-7,-5,7],[3,-3,-4,-2,-6,7,7,8,-4,3,4,10,9,2],[-4,-5,6,4,10,4,-10,-7,-7,-2,-10,9,-8,-9],[-8,2,-9,-1,-8,6,-8,3,-3,4,5,-3,10,-10],[-2,-7,1,2,-8,-6,-7,-2,3,2,6,-8,-3,8],[2,4,-9,4,-10,-2,9,-3,-10,-1,10,1,-1,-9]],[[-9,-8,4,-4,-10,-3,-5,9,4,-10,10,-7,5,6],[-6,-8,1,7,5,8,-2,-8,-7,10,-2,6,-4,-2],[-1,-4,-5,-4,-8,2,4,3,-1,4,-1,-1,-7,-4],[-10,-9,-7,7,-5,8,4,9,8,-6,4,-10,4,-7],[-8,1,7,8,1,6,8,9,4,2,9,-2,5,7],[5,10,3,3,1,6,7,-8,-7,-9,-5,4,6,-9],[10,-2,-8,-10,6,-4,3,9,-3,-6,-3,3,5,-4],[-3,-6,8,10,2,8,-1,9,2,5,6,-8,-8,9],[-6,6,7,-4,10,1,-2,-2,-3,9,10,3,-7,4],[-9,9,-5,7,-5,-7,5,-6,10,1,10,1,4,-5],[4,-6,-2,10,-10,-1,8,-9,-7,1,7,-3,2,7],[9,-8,-1,7,7,-3,6,1,2,-8,-7,10,-1,-10],[-8,-2,1,1,-2,7,8,8,4,8,1,6,-5,1],[1,10,8,-8,1,3,10,5,-10,1,-4,9,-5,3],[-3,-7,-4,4,10,-5,1,-4,-7,-10,2,8,-2,-1]],[[-4,-8,-9,-9,-1,-8,-5,2,8,9,-3,-2,-2,-2],[9,-1,10,-10,-4,3,-4,-6,4,6,-2,-9,4,3],[-4,-10,10,8,3,-8,-8,2,-2,2,-6,9,-1,-4],[-10,3,-2,6,6,-2,3,8,1,-5,8,-10,-6,-4],[-9,-4,-7,-2,-1,3,-4,6,4,-3,4,9,-7,-10],[-2,-10,5,8,2,-3,10,-10,-2,6,-2,3,6,10],[3,-6,4,-5,-1,-1,5,-6,1,-1,-2,-8,-5,10],[3,5,-10,2,-7,1,10,-1,-7,1,-10,-2,1,-7],[-1,8,-7,-1,-3,10,-9,-8,-4,-5,-3,-2,9,5],[6,-8,9,2,-10,4,7,5,-5,-7,1,4,8,-7],[2,9,-6,-4,5,-2,2,-10,7,6,-8,5,-5,-5],[4,10,-6,3,-7,6,6,9,-3,6,-6,-6,-5,6],[-7,-3,-3,-9,3,10,1,-4,-3,5,-3,7,-5,-4],[3,10,-10,-3,7,1,-5,10,6,-5,8,-6,2,8],[8,8,3,1,3,6,7,-10,8,-10,-5,-3,4,-3]],[[5,-4,3,-4,1,10,9,-4,5,1,-7,8,-8,6],[-2,-10,8,2,7,-2,1,-4,7,-1,3,6,6,1],[-4,-8,6,7,-4,-9,-5,1,10,10,-5,-2,4,-8],[1,-4,8,5,-10,10,-9,8,8,4,7,7,-5,-10],[-10,-9,2,8,-5,-6,3,-10,-2,10,2,-10,-8,-10],[-8,3,-3,-9,-6,-6,9,-6,7,7,-6,1,-1,-6],[-8,3,1,5,8,10,2,5,-8,-6,-6,-6,1,2],[-6,2,-9,3,-1,-3,-4,-5,8,10,10,1,-10,-10],[-4,-3,-3,6,8,-1,8,9,8,8,3,-4,-3,-9],[-3,4,-5,8,9,-1,5,-7,-9,-7,-2,5,-3,10],[-3,1,-10,-3,-1,5,9,9,8,-7,4,-4,-8,-4],[5,1,3,-5,-6,-9,1,4,-10,4,-1,-6,6,3],[-8,-9,3,2,1,-2,-8,-1,-7,-1,-10,-4,7,-7],[-10,8,-1,1,-6,-1,-4,1,6,-1,9,-7,-6,-9],[2,7,-6,10,-2,1,-7,7,7,-1,2,-5,5,-9]],[[4,-5,3,10,7,-7,2,8,-2,1,3,-4,6,-5],[1,6,-9,4,3,1,4,8,10,5,1,3,8,10],[-5,8,8,-3,-3,10,1,-5,-1,-2,10,-5,3,-6],[5,6,-2,8,-8,-8,-8,-6,-2,-5,-5,6,-4,6],[-10,10,-10,-7,-1,-6,-8,2,5,-6,-1,1,-5,9],[9,7,-8,5,3,2,-9,-5,-3,4,4,-4,-10,-1],[4,-4,-5,-10,-8,-3,-9,7,3,6,8,5,-1,-9],[6,5,9,-2,-2,7,9,3,5,9,-1,-8,-6,-10],[-6,7,-8,1,-2,2,-7,-6,-9,6,6,-5,-10,-5],[-10,3,-6,7,3,-1,-2,10,4,-6,2,10,-7,4],[-10,6,-6,3,9,5,-7,-8,-1,-8,2,-9,-4,-2],[-4,8,7,-5,5,4,7,8,6,-4,-4,-4,-6,1],[-2,3,-1,-1,7,1,3,5,-5,-5,-9,-9,-3,9],[8,1,3,5,5,2,1,1,9,5,1,4,-10,4],[8,5,3,5,10,-10,5,4,-7,1,2,-9,-5,-4]],[[-8,2,-2,-1,5,-1,-5,7,-6,9,7,-9,-5,4],[1,-8,-8,6,-7,5,4,-6,-10,2,-5,9,-10,-3],[-7,4,-8,-9,-3,6,-6,4,10,1,-5,6,-6,2],[-3,1,-5,-10,-7,9,7,-4,8,-3,7,8,10,2],[9,10,-2,-4,5,-9,-6,-6,6,6,-7,-2,-4,8],[2,-10,5,-5,-10,-3,-6,9,3,-2,3,-2,-6,7],[-3,-6,5,8,-5,-9,5,-9,-6,-10,2,-7,2,7],[2,-10,9,1,-3,5,5,2,-6,10,9,-3,4,8],[-9,-3,-9,7,-2,-1,9,-2,10,4,-7,9,4,7],[-2,-3,-9,4,-1,5,9,-10,-2,3,-8,-9,1,9],[2,3,-10,-6,3,9,1,9,10,10,-2,5,2,-3],[3,-10,9,-2,-10,-9,10,-10,2,3,-9,-5,8,10],[-5,6,-6,-5,-10,5,-5,6,4,8,-5,9,8,6],[-5,7,-3,8,-9,-6,9,-2,6,2,4,-8,-3,-5],[-3,6,-1,-6,5,-4,6,-5,3,-9,-7,-1,-3,2]],[[-5,8,9,-4,8,-3,-5,-9,-10,3,-4,-2,-5,2],[1,-3,-10,-4,4,9,9,7,10,-4,2,4,4,-7],[-9,7,4,8,-3,-4,2,1,5,7,1,8,1,-9],[7,3,8,8,2,-7,8,-1,5,2,-7,-7,-2,-2],[-4,7,-9,-9,-2,9,1,-6,9,9,-9,-6,-2,7],[-8,7,3,5,-6,-9,1,2,-7,-3,10,-10,5,-7],[9,-10,-6,10,1,-1,10,-7,9,-3,2,3,-9,10],[9,10,-1,6,7,7,5,-7,8,-8,-5,-1,8,-6],[-7,1,-4,-7,-1,-4,-10,6,-7,-2,7,1,-10,1],[-8,-5,3,-2,-4,2,1,4,7,9,-3,10,-9,-3],[3,7,1,6,-5,-1,-7,-6,10,-2,-10,-4,9,4],[-5,7,1,1,5,5,8,-2,-8,-5,-10,9,5,-2],[7,4,-5,2,-6,-7,2,2,-6,7,5,-6,7,3],[-9,6,-5,6,1,3,10,-10,-9,-4,-9,3,-1,6],[-6,-1,8,-9,-10,-2,-4,10,-4,-8,-7,10,-3,9]],[[-3,3,-8,4,-4,10,9,-4,-6,7,-7,2,7,-1],[6,6,6,1,-4,3,-8,-1,-4,10,-1,7,3,-3],[1,3,-3,9,8,7,-4,1,3,1,-9,9,-9,10],[-8,-4,-7,6,-8,1,-6,-10,-9,4,-3,1,-5,3],[-7,-6,6,-3,9,-2,6,-10,2,-5,-1,2,4,-7],[2,-3,-3,-5,8,-3,-7,1,8,8,-3,8,-1,-1],[4,4,-10,-6,-5,-3,8,8,-10,-3,-4,10,-3,3],[-1,-9,-2,2,9,6,-8,6,6,-3,5,-7,-6,-6],[5,5,4,10,8,-10,9,-8,7,-5,8,-1,6,3],[7,3,9,-10,3,-10,2,-5,-8,-10,-8,9,-6,10],[10,-4,-3,7,-6,-4,6,7,4,1,-6,6,-9,-2],[5,5,-7,10,-9,-1,-5,1,9,-1,3,-4,4,-4],[4,8,-10,-3,-3,7,2,-6,-5,8,6,-8,3,7],[-1,-10,7,-4,-10,-3,2,6,8,-10,-8,6,8,-4],[-5,8,-4,-10,-8,-9,3,-3,10,8,-9,8,7,-1]],[[7,7,6,7,-8,2,-1,-2,1,-9,5,10,8,-1],[-3,1,8,9,7,-6,2,9,-9,2,-6,-2,10,5],[9,2,-8,1,3,4,7,-5,9,4,4,-7,-9,-3],[10,-7,-4,10,-4,-8,2,-8,-3,8,4,-10,-10,-1],[6,7,2,5,-3,-7,-8,5,-8,-7,-4,1,-8,8],[-7,-6,5,-9,7,4,-10,8,-6,6,-4,3,7,-9],[6,-3,-8,-6,-2,1,-2,9,6,10,10,3,10,-3],[-1,-3,10,10,5,-5,4,4,1,-7,-3,-8,-4,7],[9,10,2,5,-9,4,-2,1,-4,-1,10,-1,-5,-6],[-2,-3,-2,-10,-6,8,1,-1,8,-8,-9,-7,-5,4],[9,-8,-2,1,4,6,-8,9,-6,-2,-2,-5,9,2],[10,5,5,-2,6,8,-7,-4,-1,-4,-1,1,7,6],[8,2,-3,9,10,-6,-7,8,1,8,-3,10,1,9],[5,-5,-3,-1,2,6,-1,10,-7,1,10,-1,-6,-1],[10,6,-5,-8,-6,5,-1,3,1,2,-4,5,6,9]],[[7,-8,9,-4,-5,-3,5,10,-8,10,6,7,-4,-6],[-10,-2,-4,-6,2,-7,4,9,-7,5,-2,5,4,-10],[8,-9,-10,7,-1,8,5,-2,7,-8,10,2,-6,-4],[2,-1,1,-9,2,6,3,9,-1,-8,-10,-5,-2,4],[5,-10,-1,7,2,-2,6,-10,-2,-8,7,1,2,10],[4,-2,4,-6,-5,-7,-1,-3,-7,-7,-9,-3,-10,-8],[2,-8,3,-5,-4,-2,-8,-7,-9,7,3,-6,6,1],[-6,10,-8,-4,8,10,4,10,2,-10,-6,-7,-10,1],[4,4,2,6,2,-3,-1,10,-4,7,6,6,-6,-2],[6,4,7,10,4,9,5,-6,-4,2,-5,-1,6,-6],[10,1,-1,-8,7,-10,-3,6,-1,-6,9,3,9,-6],[1,9,9,-9,-5,9,-6,-2,9,9,-2,-5,7,4],[3,-2,3,-8,-9,3,4,5,-2,-1,7,-3,6,-8],[7,10,-4,-4,2,-9,9,-7,7,-2,-9,2,-2,-4],[2,-5,4,8,-8,6,2,-10,-1,-3,9,9,-10,-5]],[[-5,-5,1,-5,5,-6,4,2,-9,-9,1,9,9,9],[9,4,-5,1,8,2,7,-6,-9,-9,1,1,9,-4],[-9,8,9,4,-10,1,-10,3,2,-8,-8,-1,4,2],[3,-4,1,2,5,-7,10,-4,10,6,7,-4,3,-7],[-7,-2,7,5,-7,1,3,-6,-5,-3,-8,-8,7,3],[7,-8,-8,-7,6,4,-10,-5,2,-8,-2,3,-2,-8],[-3,8,10,6,-6,-5,-6,-8,-6,9,-4,7,8,9],[-1,10,7,-5,5,7,4,-6,2,7,6,-10,-3,-8],[6,-2,4,4,1,8,-9,-9,-6,-3,8,-8,6,-7],[-4,-9,-2,-1,6,-8,3,2,1,-4,6,-5,7,-1],[3,9,4,-8,-2,3,-4,-4,-6,-8,-8,4,-10,-8],[-4,10,-8,-5,-9,-9,3,9,-2,2,-9,-3,-3,-9],[-7,9,-8,1,10,-6,-8,-1,6,8,-5,6,-1,9],[7,8,-8,5,8,2,1,-6,-5,-2,9,9,-2,-5],[3,8,5,1,-3,-9,-4,6,1,6,10,-6,-10,10]],[[7,5,-1,-7,-9,10,-9,-10,2,-8,-9,-8,4,8],[7,8,-5,-4,-7,5,-3,5,-5,-3,-2,-9,-7,4],[9,9,-1,-3,-1,-5,10,-2,4,-5,4,-6,-10,1],[-10,-3,6,8,-9,6,-10,6,-10,4,-8,2,6,-2],[3,-8,-8,-5,-2,-4,5,-9,-10,4,-7,-3,-5,9],[-7,10,4,-4,-8,9,-3,1,2,1,-8,1,1,-10],[-10,-10,10,6,9,-8,-8,-8,-9,-7,2,-10,-2,6],[4,-2,5,-1,5,10,-9,2,5,-8,-1,-3,4,-3],[-4,-2,5,5,7,4,5,-7,-2,2,8,-2,-7,-4],[-10,-1,-6,-5,8,-10,7,-8,-7,7,-3,7,-10,-2],[5,2,-3,-10,-6,9,-6,-9,-2,-5,4,-8,-10,-8],[-5,-9,-6,-6,2,7,2,1,4,8,1,-5,-5,9],[10,-6,-8,5,-6,5,6,7,10,3,10,-2,-7,5],[9,-7,-1,-6,-8,5,2,3,1,-6,-9,-5,-4,-1],[3,1,8,-3,-3,-10,-9,-6,-6,-9,-2,-8,-5,2]]], dtype = "int8")#candidate|5033|(12, 15, 14)|const|int8
bop_5034 = relay.bitwise_or(var_5032.astype('int8'), relay.reshape(const_5033.astype('int8'), relay.shape_of(var_5032))) # shape=(12, 15, 14)
var_5045 = relay.var("var_5045", dtype = "int8", shape = (12, 15, 14))#candidate|5045|(12, 15, 14)|var|int8
bop_5046 = relay.divide(const_5033.astype('float64'), relay.reshape(var_5045.astype('float64'), relay.shape_of(const_5033))) # shape=(12, 15, 14)
output = relay.Tuple([bop_5034,bop_5046,])
output2 = relay.Tuple([bop_5034,bop_5046,])
func_5057 = relay.Function([var_5032,var_5045,], output)
mod['func_5057'] = func_5057
mod = relay.transform.InferType()(mod)
var_5058 = relay.var("var_5058", dtype = "int8", shape = (12, 15, 14))#candidate|5058|(12, 15, 14)|var|int8
var_5059 = relay.var("var_5059", dtype = "int8", shape = (12, 15, 14))#candidate|5059|(12, 15, 14)|var|int8
output = func_5057(var_5058,var_5059,)
func_5060 = relay.Function([var_5058,var_5059,], output)
mutated_mod['func_5060'] = func_5060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4738_call = mod.get_global_var('func_4738')
func_4739_call = mutated_mod.get_global_var('func_4739')
call_5095 = func_4738_call()
call_5096 = func_4738_call()
output = call_5095
output2 = call_5096
func_5104 = relay.Function([], output)
mod['func_5104'] = func_5104
mod = relay.transform.InferType()(mod)
mutated_mod['func_5104'] = func_5104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5104_call = mutated_mod.get_global_var('func_5104')
call_5105 = func_5104_call()
output = call_5105
func_5106 = relay.Function([], output)
mutated_mod['func_5106'] = func_5106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_5128 = relay.TupleGetItem(func_1200_call(), 2)
call_5129 = relay.TupleGetItem(func_1201_call(), 2)
func_3104_call = mod.get_global_var('func_3104')
func_3106_call = mutated_mod.get_global_var('func_3106')
call_5141 = func_3104_call()
call_5142 = func_3104_call()
output = relay.Tuple([call_5128,call_5141,])
output2 = relay.Tuple([call_5129,call_5142,])
func_5177 = relay.Function([], output)
mod['func_5177'] = func_5177
mod = relay.transform.InferType()(mod)
mutated_mod['func_5177'] = func_5177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5177_call = mutated_mod.get_global_var('func_5177')
call_5178 = func_5177_call()
output = call_5178
func_5179 = relay.Function([], output)
mutated_mod['func_5179'] = func_5179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mod.get_global_var('func_1578')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_5239 = func_1578_call()
call_5240 = func_1578_call()
output = call_5239
output2 = call_5240
func_5255 = relay.Function([], output)
mod['func_5255'] = func_5255
mod = relay.transform.InferType()(mod)
mutated_mod['func_5255'] = func_5255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5255_call = mutated_mod.get_global_var('func_5255')
call_5256 = func_5255_call()
output = call_5256
func_5257 = relay.Function([], output)
mutated_mod['func_5257'] = func_5257
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5258 = relay.var("var_5258", dtype = "float64", shape = (5, 12, 5))#candidate|5258|(5, 12, 5)|var|float64
var_5259 = relay.var("var_5259", dtype = "float64", shape = (5, 12, 5))#candidate|5259|(5, 12, 5)|var|float64
bop_5260 = relay.less_equal(var_5258.astype('bool'), relay.reshape(var_5259.astype('bool'), relay.shape_of(var_5258))) # shape=(5, 12, 5)
output = relay.Tuple([bop_5260,])
output2 = relay.Tuple([bop_5260,])
F = relay.Function([var_5258,var_5259,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5258,var_5259,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

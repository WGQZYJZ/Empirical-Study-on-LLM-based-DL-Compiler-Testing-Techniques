import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_562 = relay.var("var_562", dtype = "float64", shape = (12, 14, 9))#candidate|562|(12, 14, 9)|var|float64
uop_563 = relay.log(var_562.astype('float64')) # shape=(12, 14, 9)
bop_572 = relay.floor_mod(uop_563.astype('float32'), relay.reshape(var_562.astype('float32'), relay.shape_of(uop_563))) # shape=(12, 14, 9)
bop_590 = relay.right_shift(var_562.astype('uint32'), relay.reshape(bop_572.astype('uint32'), relay.shape_of(var_562))) # shape=(12, 14, 9)
bop_614 = relay.less_equal(uop_563.astype('bool'), relay.reshape(bop_572.astype('bool'), relay.shape_of(uop_563))) # shape=(12, 14, 9)
output = relay.Tuple([bop_590,bop_614,])
output2 = relay.Tuple([bop_590,bop_614,])
func_617 = relay.Function([var_562,], output)
mod['func_617'] = func_617
mod = relay.transform.InferType()(mod)
mutated_mod['func_617'] = func_617
mutated_mod = relay.transform.InferType()(mutated_mod)
var_618 = relay.var("var_618", dtype = "float64", shape = (12, 14, 9))#candidate|618|(12, 14, 9)|var|float64
func_617_call = mutated_mod.get_global_var('func_617')
call_619 = func_617_call(var_618)
output = call_619
func_620 = relay.Function([var_618], output)
mutated_mod['func_620'] = func_620
mutated_mod = relay.transform.InferType()(mutated_mod)
var_776 = relay.var("var_776", dtype = "float64", shape = ())#candidate|776|()|var|float64
var_777 = relay.var("var_777", dtype = "float64", shape = (10, 14, 11))#candidate|777|(10, 14, 11)|var|float64
bop_778 = relay.less_equal(var_776.astype('bool'), var_777.astype('bool')) # shape=(10, 14, 11)
func_617_call = mod.get_global_var('func_617')
func_620_call = mutated_mod.get_global_var('func_620')
var_791 = relay.var("var_791", dtype = "float64", shape = (1512,))#candidate|791|(1512,)|var|float64
call_790 = relay.TupleGetItem(func_617_call(relay.reshape(var_791.astype('float64'), [12, 14, 9])), 1)
call_792 = relay.TupleGetItem(func_620_call(relay.reshape(var_791.astype('float64'), [12, 14, 9])), 1)
bop_794 = relay.add(var_791.astype('uint8'), var_776.astype('uint8')) # shape=(1512,)
const_797 = relay.const([[[True,True,True,True,False,False,True,False,False,True,True],[False,True,False,False,False,True,False,True,False,True,True],[False,True,True,False,True,False,False,True,False,False,False],[True,True,True,True,True,True,True,False,True,False,True],[True,False,True,False,True,False,True,False,True,True,True],[False,True,False,False,True,True,False,True,False,True,True],[True,True,False,False,False,False,True,False,True,False,True],[False,True,False,False,False,False,True,True,True,True,False],[False,True,True,True,True,True,True,False,False,False,True],[False,True,False,False,False,False,True,True,True,True,False],[True,True,False,True,False,True,True,True,True,True,False],[False,False,True,True,False,True,True,False,True,True,True],[True,True,False,True,False,True,True,True,True,False,False],[True,False,False,False,True,True,True,False,True,True,False]],[[False,True,False,False,False,True,True,False,False,False,True],[False,True,False,True,False,True,False,True,False,True,True],[False,True,False,False,False,False,True,False,False,False,True],[True,False,True,False,True,True,False,True,True,True,False],[True,False,True,False,True,False,False,False,True,True,False],[True,True,False,True,False,False,True,False,True,False,False],[True,False,True,False,True,False,True,False,True,False,False],[False,True,True,False,True,False,True,False,False,False,True],[False,True,False,True,False,False,False,True,True,True,True],[False,False,False,True,True,False,False,False,True,False,True],[False,False,False,False,True,True,False,True,False,True,False],[False,False,False,True,False,True,False,False,True,False,False],[True,True,True,False,True,True,True,True,False,True,True],[True,False,False,False,False,True,False,True,True,True,True]],[[False,False,False,True,False,False,False,False,False,False,False],[True,False,True,True,True,True,True,False,False,False,False],[True,False,True,False,True,False,False,False,False,False,False],[False,True,False,False,False,False,False,False,False,True,False],[False,False,True,True,False,True,True,False,False,False,True],[True,True,False,True,True,False,True,True,False,True,False],[False,True,False,False,True,False,True,True,False,True,True],[True,False,True,True,True,False,True,False,True,False,True],[True,True,False,True,True,True,True,False,True,True,False],[False,True,True,False,False,False,True,True,False,False,True],[True,True,True,True,False,True,False,False,False,True,False],[False,False,True,True,True,True,False,False,True,False,False],[True,True,False,True,False,False,True,False,True,True,False],[False,False,False,True,True,True,True,False,True,True,True]],[[False,False,False,True,True,True,True,True,True,False,False],[True,True,False,True,True,True,True,False,True,True,False],[True,True,True,False,False,False,True,False,True,True,False],[True,True,True,False,False,True,True,False,True,True,True],[False,False,False,True,True,False,False,True,True,True,False],[False,False,False,False,True,False,True,True,True,True,False],[False,True,False,True,True,False,True,False,True,True,False],[False,False,False,False,False,True,True,True,True,False,True],[True,False,True,False,False,False,True,True,False,True,False],[False,True,True,False,False,True,True,True,False,True,True],[False,False,True,True,True,False,False,True,False,True,False],[True,True,False,True,False,True,True,False,True,True,True],[True,True,True,False,False,False,False,False,True,False,False],[False,True,True,False,True,True,False,True,True,True,False]],[[True,False,True,False,True,True,True,False,False,False,True],[True,True,False,True,True,False,False,False,False,False,True],[True,False,True,False,True,False,True,False,False,False,True],[True,False,False,False,False,True,False,False,False,True,True],[False,False,True,False,False,True,False,False,False,False,True],[True,False,False,True,False,False,False,False,True,True,True],[False,False,True,True,False,True,True,False,True,False,False],[False,False,True,True,True,True,True,True,False,True,True],[False,False,True,True,False,False,False,False,True,False,False],[False,True,False,True,True,False,False,True,True,False,True],[False,True,False,True,True,True,False,False,True,False,False],[False,True,True,False,False,True,True,False,True,True,False],[True,True,True,False,True,False,True,False,True,True,True],[False,False,False,True,False,False,False,True,True,True,False]],[[False,True,False,True,True,True,False,False,True,True,True],[False,True,True,False,False,True,True,True,False,True,False],[True,True,False,True,True,True,False,False,False,False,False],[False,True,True,True,True,True,False,True,True,False,False],[False,False,True,True,False,False,True,True,False,False,False],[True,False,False,False,False,False,False,True,False,True,False],[True,False,False,True,True,True,False,True,True,False,False],[False,True,False,True,False,True,True,True,False,False,True],[False,True,True,False,True,False,True,False,True,False,True],[True,True,False,False,True,True,True,True,True,False,False],[True,True,True,True,False,False,True,True,True,True,False],[False,True,True,True,False,False,False,True,True,True,False],[True,True,False,False,False,True,False,False,False,True,True],[True,False,False,True,True,True,False,False,True,False,False]],[[False,True,False,False,True,True,True,False,False,False,True],[False,True,False,True,True,False,True,False,False,False,True],[False,True,False,True,True,True,False,False,True,False,True],[True,True,True,True,False,True,True,True,True,True,False],[True,False,True,True,False,True,True,False,False,True,False],[True,False,True,False,False,True,True,True,True,False,False],[False,True,False,True,False,True,False,True,True,True,False],[False,True,False,False,False,False,False,False,False,True,False],[False,True,True,True,False,False,False,True,False,False,False],[False,False,True,False,False,False,True,False,False,False,True],[False,False,True,True,False,True,True,False,False,True,True],[True,True,False,True,True,True,True,False,True,True,False],[False,True,False,True,True,False,True,True,True,False,True],[True,True,True,False,False,True,False,False,True,True,True]],[[True,False,False,False,True,False,True,True,False,False,False],[True,True,True,True,False,False,True,False,True,False,True],[True,False,False,False,True,False,True,False,True,False,True],[True,False,False,False,False,True,False,False,False,True,True],[True,True,True,False,False,False,True,False,True,False,False],[True,True,True,True,False,False,False,True,True,False,True],[True,False,True,True,False,True,True,False,False,False,True],[False,False,True,False,False,True,True,False,True,True,True],[True,False,False,True,True,True,False,True,False,True,True],[False,False,True,True,True,True,False,False,False,False,False],[True,False,False,False,True,True,False,False,False,True,True],[False,False,False,True,False,True,False,True,False,False,False],[True,True,True,True,True,True,True,True,False,True,True],[False,True,True,True,True,True,False,False,False,False,False]],[[False,False,False,True,False,False,True,False,False,True,True],[True,False,True,True,True,False,True,False,False,True,False],[True,True,True,False,True,False,True,True,False,True,True],[True,True,True,True,False,True,True,True,True,False,True],[False,True,True,False,False,True,False,False,True,True,True],[True,False,False,True,True,True,True,False,True,False,True],[False,True,False,False,False,True,True,True,True,True,False],[False,True,True,True,False,True,True,True,False,False,True],[False,True,False,True,False,True,False,True,False,True,False],[False,True,True,False,False,False,True,True,False,True,False],[True,False,False,False,True,False,False,True,True,False,False],[False,False,True,True,False,False,True,True,False,False,False],[True,False,False,True,True,True,False,False,False,True,False],[False,False,False,False,False,True,False,True,False,False,True]],[[True,True,True,True,False,True,True,False,True,True,False],[False,False,True,True,False,True,True,False,False,False,False],[False,False,False,True,False,True,True,False,False,False,True],[False,True,False,True,True,False,False,False,True,False,False],[False,False,True,False,True,True,False,True,True,False,False],[True,True,False,True,True,True,True,True,False,True,True],[False,False,False,True,True,False,False,True,False,False,True],[True,False,True,False,False,False,True,False,False,True,False],[True,False,True,False,True,False,False,True,True,True,True],[True,False,False,True,False,False,False,False,True,True,True],[False,False,True,True,True,False,True,False,False,False,False],[True,False,False,True,True,True,True,False,False,False,False],[True,False,False,True,False,False,False,True,True,True,True],[True,False,True,True,True,True,True,False,False,False,False]]], dtype = "bool")#candidate|797|(10, 14, 11)|const|bool
bop_798 = relay.mod(bop_778.astype('float32'), relay.reshape(const_797.astype('float32'), relay.shape_of(bop_778))) # shape=(10, 14, 11)
output = relay.Tuple([call_790,bop_794,bop_798,])
output2 = relay.Tuple([call_792,bop_794,bop_798,])
func_804 = relay.Function([var_776,var_777,var_791,], output)
mod['func_804'] = func_804
mod = relay.transform.InferType()(mod)
var_805 = relay.var("var_805", dtype = "float64", shape = ())#candidate|805|()|var|float64
var_806 = relay.var("var_806", dtype = "float64", shape = (10, 14, 11))#candidate|806|(10, 14, 11)|var|float64
var_807 = relay.var("var_807", dtype = "float64", shape = (1512,))#candidate|807|(1512,)|var|float64
output = func_804(var_805,var_806,var_807,)
func_808 = relay.Function([var_805,var_806,var_807,], output)
mutated_mod['func_808'] = func_808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_854 = relay.var("var_854", dtype = "float64", shape = (5, 3, 5))#candidate|854|(5, 3, 5)|var|float64
const_855 = relay.const([[[3.390193,9.904730,1.601471,3.888135,2.471637],[1.858305,-8.534689,-6.370293,-2.811051,6.773135],[-8.893738,-2.769688,-0.277963,5.435928,8.057315]],[[-7.905716,-4.664533,6.423380,-9.561599,-6.672386],[8.711062,-4.191317,-0.188857,1.539181,7.635232],[7.663517,-6.844865,3.415271,0.801999,-8.221307]],[[5.951787,9.860966,-3.087280,7.794356,-2.467715],[4.357154,-2.781521,7.456916,-8.336831,3.419584],[0.784065,-0.376591,-7.010340,-6.881562,-1.388583]],[[1.775216,2.769001,7.459185,7.769404,-5.784126],[6.483833,1.412687,-2.761156,-1.439308,8.954673],[-0.736573,-0.189875,-1.160720,-8.546118,-3.086165]],[[3.358426,-1.213082,1.860205,3.494203,9.138563],[-5.259046,3.300355,-6.609234,-9.492582,-1.763600],[-2.212097,-9.387964,5.945725,-9.671619,2.448216]]], dtype = "float64")#candidate|855|(5, 3, 5)|const|float64
bop_856 = relay.less_equal(var_854.astype('bool'), relay.reshape(const_855.astype('bool'), relay.shape_of(var_854))) # shape=(5, 3, 5)
output = bop_856
output2 = bop_856
func_863 = relay.Function([var_854,], output)
mod['func_863'] = func_863
mod = relay.transform.InferType()(mod)
var_864 = relay.var("var_864", dtype = "float64", shape = (5, 3, 5))#candidate|864|(5, 3, 5)|var|float64
output = func_863(var_864)
func_865 = relay.Function([var_864], output)
mutated_mod['func_865'] = func_865
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1130 = relay.var("var_1130", dtype = "uint16", shape = ())#candidate|1130|()|var|uint16
const_1131 = relay.const([[[-4,7,5,-3],[10,6,-8,7],[-10,-5,2,2],[-5,-8,10,2]],[[-9,9,1,-3],[-2,6,-10,3],[-5,6,2,-7],[1,-2,7,6]],[[-3,2,-6,4],[3,-9,-2,5],[-1,-5,9,3],[-9,-2,9,4]],[[2,5,-10,8],[-8,6,-1,7],[4,-8,6,-2],[6,-1,1,-6]],[[-1,2,9,-5],[-9,7,4,2],[8,10,1,8],[7,2,-5,2]],[[9,-7,6,-5],[3,-4,8,6],[8,-9,-9,6],[-6,-3,-9,9]],[[10,6,6,-10],[-5,-7,-2,8],[-8,-7,-4,10],[-3,3,9,-2]],[[7,-5,-1,-3],[9,9,2,1],[6,6,3,2],[-10,-10,8,-6]],[[-9,-8,-7,-7],[1,-10,-7,3],[-9,5,-5,-9],[-3,-4,2,4]],[[2,-4,-2,-7],[-10,6,-6,-1],[7,8,-1,7],[-10,5,-2,5]],[[-2,4,1,9],[-8,7,3,10],[1,4,-9,-8],[-3,-10,3,-2]],[[4,10,-7,5],[3,9,9,8],[9,4,4,-6],[-4,-3,-10,1]]], dtype = "uint16")#candidate|1131|(12, 4, 4)|const|uint16
bop_1132 = relay.bitwise_and(var_1130.astype('uint16'), const_1131.astype('uint16')) # shape=(12, 4, 4)
output = relay.Tuple([bop_1132,])
output2 = relay.Tuple([bop_1132,])
func_1137 = relay.Function([var_1130,], output)
mod['func_1137'] = func_1137
mod = relay.transform.InferType()(mod)
var_1138 = relay.var("var_1138", dtype = "uint16", shape = ())#candidate|1138|()|var|uint16
output = func_1137(var_1138)
func_1139 = relay.Function([var_1138], output)
mutated_mod['func_1139'] = func_1139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1268 = relay.var("var_1268", dtype = "float32", shape = (6, 12, 4))#candidate|1268|(6, 12, 4)|var|float32
var_1269 = relay.var("var_1269", dtype = "float32", shape = (6, 12, 4))#candidate|1269|(6, 12, 4)|var|float32
bop_1270 = relay.minimum(var_1268.astype('float32'), relay.reshape(var_1269.astype('float32'), relay.shape_of(var_1268))) # shape=(6, 12, 4)
output = relay.Tuple([bop_1270,])
output2 = relay.Tuple([bop_1270,])
func_1278 = relay.Function([var_1268,var_1269,], output)
mod['func_1278'] = func_1278
mod = relay.transform.InferType()(mod)
mutated_mod['func_1278'] = func_1278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1278_call = mutated_mod.get_global_var('func_1278')
var_1280 = relay.var("var_1280", dtype = "float32", shape = (6, 12, 4))#candidate|1280|(6, 12, 4)|var|float32
var_1281 = relay.var("var_1281", dtype = "float32", shape = (6, 12, 4))#candidate|1281|(6, 12, 4)|var|float32
call_1279 = func_1278_call(var_1280,var_1281,)
output = call_1279
func_1282 = relay.Function([var_1280,var_1281,], output)
mutated_mod['func_1282'] = func_1282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1451 = relay.var("var_1451", dtype = "uint64", shape = (2, 8, 16))#candidate|1451|(2, 8, 16)|var|uint64
const_1452 = relay.const([[[-5,10,-7,-6,-7,-5,7,5,-10,7,2,-6,3,-8,3,10],[1,1,-1,4,2,-3,3,-8,-5,-10,5,1,-8,-6,3,8],[-5,1,-6,2,-8,-6,4,-1,-1,7,-7,-5,-9,5,-4,-5],[9,-5,-5,-2,5,-2,-4,-10,-6,-10,-5,-9,3,-6,4,-7],[9,10,10,-7,-10,4,5,-6,8,5,10,-6,7,-9,5,-6],[8,8,-7,-3,-5,-2,8,1,-5,-9,-2,5,9,2,2,8],[-3,-9,3,-9,6,9,9,-10,-8,-7,-6,-10,8,8,-10,-1],[-5,5,-10,-8,-6,-2,9,-1,-1,-7,-3,-1,-9,-3,7,3]],[[-4,-10,3,-3,-7,7,-7,2,7,4,-8,-10,-5,-7,-7,-4],[9,7,4,-2,-5,6,7,9,-9,3,1,8,8,-10,-6,-8],[-10,8,7,4,10,3,8,-1,-6,-8,-10,4,-2,7,-1,-4],[1,7,-1,-9,1,-10,3,-9,8,7,4,7,6,-5,-8,9],[10,-7,-7,3,8,8,-5,-2,2,10,-3,-3,3,-7,6,10],[2,-6,6,6,5,7,10,-4,1,10,2,-4,-1,6,6,1],[7,-8,1,7,9,7,-5,6,4,1,-9,-3,-5,6,-6,3],[8,-6,-5,-4,-9,6,9,-2,-7,-1,8,-7,-2,8,1,3]]], dtype = "uint64")#candidate|1452|(2, 8, 16)|const|uint64
bop_1453 = relay.less_equal(var_1451.astype('bool'), relay.reshape(const_1452.astype('bool'), relay.shape_of(var_1451))) # shape=(2, 8, 16)
uop_1458 = relay.acosh(bop_1453.astype('float64')) # shape=(2, 8, 16)
func_804_call = mod.get_global_var('func_804')
func_808_call = mutated_mod.get_global_var('func_808')
const_1461 = relay.const(0.740520, dtype = "float64")#candidate|1461|()|const|float64
const_1462 = relay.const([7.471673,3.009533,-3.966475,-7.321855,-7.957288,8.321364,7.877714,-0.468554,3.702114,9.118524,-9.532702,4.478996,4.602756,-6.902277,-7.418733,5.788878,9.842107,0.211034,-5.107137,0.776638,-4.805127,-9.809214,-5.929026,-8.148069,7.528005,8.697026,1.566558,-9.608747,0.837666,7.158147,3.447118,-3.842854,1.601953,-5.870648,7.018129,-7.474066,1.749418,7.708684,-3.895724,7.653892,-7.657936,6.181315,-0.988022,-9.954283,-4.839832,6.926264,-6.626511,-3.676481,3.096934,-1.839848,0.984930,-4.381344,8.588373,-4.778559,-9.066700,-2.977036,-8.980143,-0.748040,3.143259,9.583044,2.676677,8.778374,-8.397480,2.874156,9.994414,-8.390631,7.563462,6.414913,5.303034,-8.844604,5.208407,-1.238786,-9.500217,-7.355499,4.562406,-4.658747,-1.065738,3.618305,4.592017,6.554225,-5.487137,8.277232,-8.467190,-1.507559,6.050128,9.437671,7.814267,-7.525493,2.160399,9.223012,-4.777771,1.182714,-7.257912,9.383807,6.458576,-8.487593,0.670843,1.099863,-6.106321,4.083021,-2.169481,-2.809865,-2.989617,-8.121881,-0.267180,-8.654281,5.089319,2.133581,-3.004661,3.323847,3.355674,8.793846,-7.777070,7.123620,2.190159,-0.669936,8.656766,8.874992,6.039139,6.594663,-7.179907,7.027863,0.546222,0.692785,8.945759,-7.908418,-6.610029,3.114357,-0.047629,4.724745,7.508774,-5.943335,-6.316068,-4.747258,3.720203,9.996198,-7.761234,1.296880,-6.749739,3.343340,8.916085,-7.930036,-1.446463,-0.786680,-3.097014,-6.442191,9.094489,3.966988,-3.089837,-2.344366,7.748470,7.719404,-0.752004,-0.238594,9.630645,-0.617173,6.125825,-4.437112,6.864358,-4.714084,-1.985337,1.103935,4.141388,-7.624881,7.486791,0.344266,-6.458943,-6.819557,0.942843,0.594609,-5.289073,-0.320956,7.162454,2.762371,5.802843,-3.879351,-5.087430,-2.680122,-9.081492,-2.756585,4.864299,8.986936,-3.439987,-5.170685,-5.172383,0.853980,1.640709,-4.274638,-2.898285,2.470461,8.804904,-2.874376,-9.509352,-0.343248,1.000752,-5.004739,-0.254082,-5.417097,4.320271,0.427074,4.765919,-6.595631,-8.708179,2.102051,9.904552,-9.721157,-5.281472,-8.807945,5.532860,-4.754289,3.073632,7.338718,-2.245539,0.884841,-6.080394,2.052808,1.923738,2.056825,-9.111120,-5.326680,6.567026,-2.911196,7.698131,-1.565997,2.023460,2.515483,5.779842,9.203343,6.838873,9.960449,4.369120,4.597991,7.071838,-9.521359,0.508039,8.734949,7.920405,-1.458819,-6.902451,-7.961623,7.159761,3.515422,-4.576243,-4.671362,2.787849,-4.567778,-5.344086,8.863049,-5.698295,7.416341,-8.700664,-9.536230,9.116275,2.241556,-8.871109,6.291774,7.166437,-8.365073,6.198763,4.770710,3.144830,3.601778,2.733591,2.967545,-0.452709,0.869410,7.940676,3.719019,9.312687,-6.774411,-3.079991,8.947599,-3.775580,3.705347,5.400270,-5.368799,-3.410172,-4.354529,-5.273735,7.747931,6.503324,-6.231294,8.601023,3.797184,-5.708952,-4.915231,1.981456,-7.108775,9.497211,-9.260852,0.729045,2.908471,-7.285241,8.954830,9.612529,-7.014868,-2.524032,8.929089,-4.080297,-8.144189,8.519489,6.910156,-2.300641,-7.997216,8.153649,-5.271881,-7.366080,1.713674,-1.926383,7.574969,7.751843,-8.120081,-0.978296,1.495912,-4.242911,6.195292,-0.669351,-3.255903,1.606296,0.972457,7.281294,6.764112,0.695725,2.590662,5.391942,-2.101593,-8.735028,-5.557102,-9.374600,9.231706,4.907938,-7.041646,0.300630,6.324022,-7.397118,1.885252,-5.364444,9.119805,7.980860,0.741056,2.681060,-2.614880,-4.529214,2.977138,-8.118278,4.306508,5.798795,-8.125147,9.810422,5.686017,-1.898637,5.067608,3.722889,-6.233554,3.617364,-9.121533,4.820204,-2.535752,8.776107,1.361292,-6.936334,-1.124105,-9.677356,-8.225510,-6.855801,6.843739,9.465469,7.604750,2.550803,1.065872,-3.063068,-2.595686,-2.235616,9.871062,-6.610421,-7.045922,-1.947736,-5.200458,6.575339,-8.916122,4.913759,-8.144390,-0.228815,9.605799,4.388983,8.766410,-7.573850,-5.897063,-0.909870,0.854547,-3.725054,-6.898792,-8.820480,4.967514,8.536834,7.731086,-5.058729,9.534166,1.507922,-6.141008,-9.972681,-3.947208,0.941261,6.691152,6.436216,-8.405359,-7.525170,-9.601643,-9.202429,-8.446761,8.515454,-4.335872,0.344328,-7.347682,-3.546073,-8.917885,-9.322856,-0.678600,3.088195,-4.374204,-2.275446,-7.116349,8.421490,4.462895,-0.331571,0.076577,1.899803,7.065926,-7.543659,4.156829,3.427235,2.249770,1.329156,3.096908,3.728524,9.094547,8.074342,0.287450,-8.358141,-6.246165,-1.316723,-3.490876,3.427195,9.593242,5.677228,-6.250658,-1.701640,2.869450,9.543151,-5.967207,-8.287739,-7.424984,6.363548,-8.468610,-6.226263,-9.708853,-5.607889,-4.527060,3.937417,0.528945,8.194020,0.425938,8.944211,7.349038,5.987577,-3.572817,7.856687,0.657260,-7.540571,-7.388694,-6.602077,9.446873,8.534903,-9.172079,6.036859,5.077862,-3.307758,-4.225180,0.381358,-1.555207,9.613404,-3.828664,-5.301162,6.910413,5.481322,3.974094,9.408958,8.152407,0.233641,4.240685,4.851197,1.385718,2.304740,-8.082491,7.394773,6.234479,6.437426,6.408232,-2.743562,-9.702843,-2.526666,9.822139,-9.899669,-7.955938,9.935920,0.937142,-7.621429,-5.202251,-4.065415,2.813220,6.998911,3.549477,-8.935036,-6.514617,2.584270,0.979069,1.683893,2.682763,1.193970,6.768991,2.811795,4.722444,5.855949,3.572276,-3.315789,0.052913,-5.148972,-3.652846,3.456768,6.046697,3.962212,-5.907541,0.643533,6.406977,8.844843,6.691761,4.226511,-4.317905,-6.186144,-7.864864,-5.404537,3.117105,-2.420978,-3.144550,-8.562141,7.264227,-9.940039,-9.450270,2.538362,-6.936870,-3.802719,-6.949374,-0.465570,-8.450102,-4.530989,-5.852536,-5.829205,4.533017,3.546241,-9.423952,0.042390,-9.139107,0.976249,-6.671969,-7.121806,9.328691,-4.110731,-5.888166,0.076158,-0.334758,9.479612,-0.526354,-5.222424,7.345941,4.828414,6.111501,6.729908,-2.201312,9.649358,0.001162,3.319232,-9.362258,-6.932808,9.621571,-6.872305,-1.536976,-9.249530,8.127277,-1.990331,-8.927109,8.278639,9.736212,2.170079,2.598207,-4.998215,-8.529208,-8.597705,3.350627,7.408200,-3.418341,-0.435407,-3.606886,8.749037,2.179191,-6.699938,-0.470927,-6.093962,-9.141896,7.037595,-6.818056,-5.338053,-3.379821,8.122958,-8.875822,-4.329128,-7.403476,1.557067,4.550709,6.362538,-5.967267,-5.064091,5.135818,-3.299372,9.670978,1.711264,2.287439,-3.890304,-2.549475,-7.945551,6.077900,2.492848,9.288132,-3.047840,-9.844137,-4.815145,6.372015,4.560604,8.444808,-6.637232,0.403467,-7.641770,5.815707,-4.277655,-6.762477,-6.111804,3.936567,-1.500788,-8.917356,0.498115,-3.065949,-1.200218,7.202314,-2.166324,3.958068,6.764972,-3.023194,-4.171289,-2.803823,-2.564190,7.265174,-4.005274,-5.447975,6.054296,9.182172,1.360733,-4.196515,2.582265,2.104491,-5.920591,-0.629823,-3.655007,6.508475,1.411066,6.378977,9.442985,-2.358684,-4.698412,-9.643904,-0.847496,-3.412414,0.196483,9.859052,-0.170203,-2.355362,0.432632,-3.679628,1.075848,-9.759190,-7.569553,-3.474250,-1.092692,1.069427,-2.933524,8.035057,-9.817961,-8.860185,-4.868026,-9.223597,9.767204,-3.184223,-5.528701,-5.617149,-4.560882,-1.581505,-6.852908,-8.270428,5.707941,3.443299,4.343103,-6.763460,5.975731,4.544848,-0.036504,-8.676362,-8.537776,3.786077,-6.789529,8.930928,-3.724045,1.446363,-8.069954,-3.107743,6.684343,9.491304,-5.487282,-5.446243,9.463716,3.362054,-2.215879,1.880571,-4.902755,8.319568,-3.362766,-9.169341,-1.519891,4.787602,8.564582,-7.952677,-2.230780,-5.454792,-6.322729,-4.141798,-3.484429,5.235552,6.336316,-2.144406,7.516136,-6.140819,-5.364313,2.089421,-5.344949,7.552010,-4.455750,6.284346,-3.121307,2.591864,-2.032957,-2.975094,6.415558,6.955115,-2.781926,1.560388,4.792030,8.558487,-5.346934,-8.489647,5.332430,-0.565417,-8.207377,-9.079953,6.794528,6.539711,1.354960,3.268005,3.566142,-7.666481,-6.335778,-2.424822,3.696388,6.246426,-3.440607,0.193053,5.082401,0.897075,3.938207,-8.802992,4.628280,-8.894962,2.185515,8.579269,6.971931,-4.088495,0.425028,1.790621,-2.395000,-5.373604,2.521416,0.022821,-1.798428,-2.570379,-5.459244,-0.222800,-1.614051,5.434301,-9.120964,-2.833720,-2.645083,7.731740,8.172824,-9.336300,6.204509,-6.166553,-5.375603,-8.677328,-6.200174,-1.916394,2.835572,-1.048950,-1.262552,-7.979940,5.178865,-3.580162,1.817891,1.416593,-6.689457,6.355746,1.214161,-0.043864,2.550117,-9.691030,7.782067,-2.092305,3.854543,-1.286378,-5.397099,5.246833,-8.478496,3.006035,4.412569,-1.542218,7.036453,-2.580999,-6.501580,-4.854506,4.396660,2.190490,-3.146552,9.829848,7.295085,8.893437,-6.688274,4.982770,-3.611711,3.099837,0.545193,0.484457,4.917571,7.686712,3.820106,4.572362,-4.491841,7.653014,-5.240521,2.637465,3.662112,-5.955418,5.606156,-9.456330,-5.276382,8.179334,8.428113,-4.936968,-5.825864,-5.926292,-0.426607,-6.064975,5.669507,8.924827,3.525213,3.755599,6.882781,-7.800971,4.722237,-7.726371,-0.508149,7.643416,-7.054962,-8.861459,-0.370361,-5.374104,-4.966749,9.824606,8.379817,-2.305101,0.775221,4.882993,1.318300,6.469539,-9.072548,-1.592583,-8.437589,-8.960027,-0.851048,8.127863,-8.771774,2.422846,2.594823,-4.654343,6.259750,0.103690,-5.629624,8.782099,-1.934277,-1.969426,-1.089696,-2.442024,-3.846205,6.928311,6.583200,8.931671,2.717215,5.001707,-1.585361,5.091210,-9.590887,-4.906173,8.306245,-1.091443,8.163506,-0.657043,8.285142,-4.064855,9.836486,-5.691152,-0.860855,-8.325721,-9.939118,-3.219072,5.563177,-0.259011,-6.189482,-0.585734,-8.197813,-3.179168,8.580651,4.816295,8.584051,1.094330,-4.798531,4.451517,8.787834,-1.136994,7.303352,-1.212541,-2.483871,-0.947565,-1.918936,-4.167683,5.005386,-1.705838,2.337616,-9.772152,4.589052,2.105395,2.686720,-9.980101,5.248820,2.403599,-8.105799,5.443784,-7.229876,8.893809,2.200759,-3.568390,-3.137709,2.199030,-8.411867,-3.283407,9.612987,6.923249,7.087604,-4.824713,-5.660980,5.833341,8.194228,9.709297,7.306929,-8.914415,-0.389476,8.180294,3.659127,-5.001231,-1.824448,1.898390,8.869761,1.029241,1.212644,6.600691,5.254078,-7.170210,6.368323,-9.231287,-2.136705,6.880646,6.175652,-0.374569,-8.059261,4.991328,1.493010,-6.296811,7.863529,2.925376,2.303952,8.423646,-0.883552,-3.991050,0.704100,-7.296798,9.213890,4.307079,-7.394564,-6.768868,-3.421682,-0.522845,-4.769767,-6.425093,-1.545793,-3.765505,-7.725839,-6.537107,4.688890,8.548836,6.667463,4.274834,0.685499,-1.531660,-0.371438,-7.970597,-1.877255,-6.032667,-4.194533,-6.722206,7.993837,-8.852663,-9.243954,-1.169720,7.327486,8.965503,8.374596,-8.841336,7.746563,-8.843031,6.275665,-2.518767,5.889355,-9.736899,-7.055149,-7.503158,-5.359624,9.048075,9.608599,-5.777477,2.981662,-7.507873,-7.873685,-1.845273,7.863214,5.996091,4.201333,-8.818557,4.348550,-0.332879,1.816168,4.120487,-7.184545,8.492883,-6.105787,-9.228419,5.378225,-8.657182,4.511493,1.891368,1.627678,8.918113,-8.622107,-6.755212,0.800618,6.742722,9.440020,-1.497446,-2.785269,-3.825125,0.965885,-3.646285,9.612985,4.612486,6.329404,2.376281,9.754043,-1.320232,-2.859705,5.347776,4.452120,-1.330286,9.526596,-6.431628,-2.849291,-4.770488,-6.887729,-8.461083,2.410451,-1.479929,-9.751711,-3.561255,1.696961,-0.429078,5.096808,0.795881,-4.009984,2.659267,-9.176834,4.795320,-3.302406,-9.684969,7.135727,-5.057441,-2.636558,8.618458,-9.818920,1.707449,-1.689719,5.476399,6.563128,9.625216,1.144406,-7.351537,-0.116014,-7.370383,3.561702,7.188679,-9.872158,-2.739115,1.006334,9.835238,3.429916,4.240868,-1.133811,3.731392,1.908084,-9.234913,4.748661,-4.252333,-3.983388,5.956793,7.429391,-7.759862,-6.146562,3.764412,4.687257,-9.862979,0.540501,-0.386909,-9.603161,1.945291,-3.939382,-2.898727,-3.000347,-0.219900,-5.424026,7.831635,-1.038188,2.060058,-6.990505,-1.554105,9.058912,-1.972847,-4.649619,7.599921,-5.642627,-2.735709,-3.486787,-4.608441,9.512812,0.888408,-0.394760,-7.666618,2.278904,-2.205829,-1.366890,5.993837,5.470119,-8.307154,-2.147519,-6.823082,-6.656546,-4.538639,-2.710306,-3.471716,0.355138,2.960345,-8.145456,-2.950536,2.162858,6.744275,-3.192292,4.268644,-8.011121,5.265855,9.343787,9.027665,9.042766,-8.776906,-9.610812,3.773610,8.933022,-5.886427,-8.077282,4.793209,5.490445,9.935436,3.097593,7.624802,-6.593585,-4.971980,-3.101381,-2.312287,5.281600,9.525244,7.624559,8.400534,0.240872,-3.164866,2.830131,1.710729,-2.654281,-3.607852,-4.998641,4.506809,-8.274310,-5.883713,1.585919,-5.015129,-4.050506,-9.833685,5.642170,-3.646300,2.937997,-8.523527,-6.635850,7.411284,0.344684,-9.272620,3.825042,-5.457356,9.927400,6.468378,8.196626,-8.497408,7.164932,1.939317,-3.778041,-8.155749,-9.411300,-3.033698,-1.974209,0.356107,1.386559,4.267120,8.205412,5.179039,4.843591,9.189686,-1.617089,-4.923945,0.483374,-8.737459,7.527379,9.902799,-1.536967,-4.922761,-4.970208,-2.916787,2.761309,-1.258168,9.446604,4.703259,-8.644061,-2.050824,-1.164806,0.069839,-0.479119,-3.343551,-5.411302,-4.768231,9.284852,3.961358,-6.931473,-1.929541,-6.991951,3.479383,-3.842905,-1.459914,5.529372,4.935532,7.963814,0.590137,9.787402,7.459708,-8.940278,-9.878839,-8.883914,0.330993,4.189539,-4.042336,-0.924932,9.038328,-2.185913,-2.461059,-1.335694,-5.067470,-4.959991,-6.952461,3.926953,4.443082,8.149814,6.934773,1.810621,-9.873390,-2.291580,-0.163188,-2.503522,4.558359,0.182766,6.590469,-5.781411,0.449257,9.667274,-4.887459,2.222989,-7.416837,1.441660,-3.462274,-5.874687,2.052598,3.903165,-5.186207,0.043590,6.253867,1.682213,3.717171,-7.191258,-0.571151,-5.901095,-3.022990,-7.308565,-4.065144,-9.760491,-1.455162,3.186219,-5.577207,-7.991977,7.833052,-8.551711,-1.050093,6.495555,2.444137,9.261062,4.552029,-9.850585,8.698721,8.688804,-6.481065,7.739716,-6.453046,-2.911529,2.095775,8.726302,4.038642,8.874178,2.070789,0.607697,-0.815289,-2.900530,-1.334014,8.379421,4.912132,5.509553,2.457718,0.736139,2.297437,-7.098827,-7.655970,7.023150,1.867230,6.555812,1.023628,-5.357603,7.274202,-6.679930,8.508794,-9.483653,-5.635442,4.233041,-9.615683,2.549590,-0.251336,-2.384230,-9.726624,-1.484966,3.606259,-1.582334,-4.015125,-7.940600,-6.821985,3.529137,9.264879,-1.123795,5.609146,4.868105,-2.586802,-3.861224,-6.097465,0.673051,-8.053720,-0.930054,-2.416735,1.184049,8.838199,-4.823978,-2.205057,-3.619729,4.667996,4.910550,-2.951420,-9.219775,5.975258,6.904848,-3.501840,-3.542146,2.507207,-8.709496,-2.164541,-0.568448,5.281543,7.395324,3.601332,2.573179,-1.517075,3.681062,0.033365,-0.288852,-4.362171,-2.282622,-5.398995,-7.978388,-9.522374,3.231306,-5.734791,-3.510385,7.999567,7.542396,9.848560,9.379161,1.153130,-7.471348,3.831193,4.307690,6.325704,-4.778127,7.547125,8.397948,7.591583,-2.516507,-0.577029,8.557135,-3.508930,-2.239197,-6.052187,4.469083,8.133457,-2.130989,-2.829990,-1.541968,-7.409609,-5.978640,8.730945,8.405633,-3.200764,-1.087079,-9.562643,-2.203251,-9.186040,3.492703,8.170146,-6.065571,-4.199895,6.153047,4.879349,-2.493460,-4.629953,4.470630,-9.671272,-8.983153,-9.095138,-5.408803,-0.314814,4.301756,6.543770,0.234906,3.696370,2.354008,7.476661,8.212108,4.891280,-2.798039,-0.663170,1.089730,-6.551022,9.545987,4.205347,1.686099,9.716461,-0.158813,3.214490,9.651057,-1.250162,7.326934,8.208207,-4.631001,-3.799974,-0.449634,-4.723172,-8.740545,8.774638,8.545319,4.965054,-6.286807,0.314002,9.476943,8.481966], dtype = "float64")#candidate|1462|(1540,)|const|float64
const_1463 = relay.const([[4.030539,-6.348052,-6.806814,-1.195706,-1.191136,6.977917,0.304337,-6.701452,4.994887,3.341147,-3.574207,-9.052827,2.855425,0.757631,-0.250342,6.348438,-7.644434,8.469915,-7.450323,7.026399,-4.522119,-9.112643,4.731049,-1.956375,5.591851,9.880350,1.216755,0.634526,4.622918,-4.892592,0.551500,-9.983095,4.753153,-8.844722,7.130612,-2.766827,-2.274562,3.557935,-3.957562,8.168997,3.072224,2.736144,-7.045112,1.627741,8.087091,5.004112,0.146943,-4.614107,6.322425,-6.564142,-7.575706,1.994735,8.841837,-9.058053,-2.652170,-3.001416,-7.441618,-1.909638,-6.100042,-7.729776,2.092317,6.017128,5.330140,1.976192,-1.770111,-1.731185,0.609608,-9.832098,-4.249334,-9.108828,-5.369681,9.562389,-1.971769,9.657669,5.211701,-8.210174,6.055564,-8.192430,9.095158,9.898544,3.567417,-9.573836,8.450279,-5.620095,9.444321,4.374293,1.803819,-3.205935,-1.138166,-6.678765,9.423110,8.337673,-6.669356,-7.707377,4.973247,-9.987999,6.383840,2.000529,9.562389,-4.597863,-1.033756,-5.501991,-6.841561,3.802731,-9.876710,8.501429,-2.672974,-1.515157,-0.327299,-7.094758,-4.342183,-3.478838,3.688119,2.862689,9.243167,1.735243,5.230340,9.841961,-7.788516,-6.192021,5.817228,2.207977,-9.684322,-6.280750,-7.462175,7.069731,4.914390,-9.104387,4.062030,0.313436,5.510636,9.960813,-6.133475,9.872000,9.123625,4.061537,8.136667,7.146267,-2.184521,-2.780059,-8.338305,-5.000820,6.394092,4.005482,-7.487402,-2.751232,4.104390,-6.492059,-4.592474,9.519170,1.478493,-0.469283,6.277187,5.723588,-8.650435,-2.226754,2.229704,-4.011756,2.801043,5.653166,0.418814,4.100130,9.202112,-1.263365,5.311099,-3.042788,6.966257,7.712382,-5.261276,-2.668562,-1.918196,9.953982,6.301438,3.692672,8.018110,-6.799653,-3.937943,-8.456391,6.968029,6.114092,-9.493117,-1.238958,9.444615,-6.636258,-9.180540,-5.874534,6.343318,-1.897257,3.562446,5.315358,-6.464006,9.055953,3.162684,8.111904,1.671748,-3.048280,-0.635709,4.557132,-1.774446,9.429739,-3.127623,-9.775507,2.530290,8.804073,-7.190421,-6.098513,-7.933778,4.354895,7.761339,0.517854,2.048932,-6.056809,-6.040912,7.209357,1.148312,6.499182,-3.939744,0.549392,-9.417359,8.296863,2.209147,2.688816,8.027888,4.496196,1.813427,8.969437,-4.700035,-4.619228,1.810409,-4.267020,-2.466394,5.192634,1.181137,3.023061,2.663845,-8.592832,-1.228402,-0.359744,-2.639622,-5.245346,-8.589988,-9.400897,7.996560,6.392421,6.159113,2.017076,6.194010,-8.380506,1.433239,-0.734437,-7.272609,4.431736,9.519431,7.065898,2.942917,9.802097,2.638931,6.295132,8.050479,-1.236884,-7.140226,-2.829347,-3.943636,-9.224009,-9.998998,-2.075741,7.986654,9.650864,4.708725,-6.491921,-1.945994,9.305408,7.093623,-4.408679,7.202402,4.209297,-4.538688,-9.074643,4.300404,-5.900507,6.755931,-8.144088,-0.566318,2.880944,-2.724499,4.027534,-6.806164,7.793350,0.886294,-4.374611,-8.327576,-9.490056,9.135371,2.038677,0.749029,4.451019,-9.417500,0.956901,3.936551,-4.521456,-2.056797,9.690718,-3.638999,-2.407121,-4.117520,8.372729,0.712706,-6.906197,-0.370784,0.659382,4.038040,-3.174577,-3.229189,3.497643,3.669028,-9.484573,2.877588,-2.799163,-0.138819,7.484846,7.546265,3.965084,-9.472511,0.228362,1.765024,-3.790680,5.333999,-9.510448,-3.574782,-1.310006,1.867262,2.244180,-1.502065,0.735754,-5.910477,9.639328,6.362913,-8.420549,-8.281959,-9.951648,-3.573161,3.906452,6.052009,-7.863168,3.754991,2.349893,4.297035,7.040875,-5.026748,-8.434739,5.041222,-3.802157,-7.451138,-2.830565,5.811353,-1.150289,4.268277,3.935735,1.155737,-9.531197,-5.698383,5.574165,-5.908656,6.069629,2.379757,6.873196,-6.285865,4.756624,0.605943,8.618395,-4.761656,-9.599284,2.896852,3.749195,4.649972,8.570781,3.795400,1.738184,8.474405,2.435021,-9.576433,6.015645,-2.285437,4.684068,-7.288261,-5.671666,-4.159317,-6.721832,8.726324,-7.916019,8.827308,-4.827304,2.305898,-5.640039,6.892653,7.571292,6.013862,-4.647493,-6.414641,8.590494,-7.321294,3.511973,-7.281474,5.190149,2.363678,9.219967,1.613738,-8.660328,4.615491,-7.378260,-5.696214,5.356057,-0.586962,7.802734,5.085921,-9.564874,6.163308,7.747486,2.277155,8.234591,-3.751933,-3.212487,-9.854229,-8.438594,7.877274,-3.444865,7.850959,2.681531,0.182530,-4.757014,6.005162,5.196041,-7.482725,7.388503,6.465152,1.705270,0.536720,0.149941,-2.276612,0.164839,-0.117816,0.581877,0.574681,-1.889055,4.746132,-6.654700,1.423742,4.682616,-9.077133,8.265423,2.216205,5.260311,-0.505305,9.676123,3.518583,3.701173,-1.785827,3.900633,2.035988,3.395714,-6.597798,-9.390683,1.362133,1.433327,-8.596362,8.850792,8.711497,-7.926916,6.443765,-8.638078,-8.687279,7.911962,-4.272196,4.183026,-8.796358,2.879847,-4.091454,-7.525147,9.002351,4.777959,-7.846490,-7.714785,7.405625,-3.743528,-6.067819,6.421996,-6.379577,7.029689,7.551845,-6.793684,0.279032,-0.468747,7.910434,5.418982,8.864054,-2.525893,9.249634,1.950891,9.743828,-2.694611,9.953974,2.178694,-3.398329,-1.478174,0.794890,2.741599,-0.162792,-3.783896,-5.006870,1.432467,-9.986249,5.502107,-3.039008,-9.024256,-3.052732,5.371961,8.100564,6.123468,1.891042,9.948305,1.881079,-6.019512,0.780763,1.913470,-3.996771,7.410557,0.586367,6.369105,1.147153,3.162373,-0.507444,7.435046,8.560890,5.352433,4.587611,4.971614,5.109030,-3.328719,-6.052745,-9.188134,-2.886996,8.514533,-4.444648,1.264612,2.764587,-8.493006,1.730224,8.476378,-4.950467,-0.254025,7.098135,-7.470062,7.583970,6.202387,7.073224,-0.531489,5.120957,5.880079,-6.863446,-1.973729,6.478470,4.440809,-9.185173,-3.187341,0.433370,-8.983016,-4.772019,9.705528,-6.012172,-1.207533,-0.261208,1.111679,-9.076974,-6.200589,-3.378747,-6.570148,0.725567,-0.176932,-3.520306,-8.242054,7.233698,3.729512,-2.368560,6.105179,3.418632,-2.812553,9.076835,-6.034048,-4.548492,-4.320890,0.692536,-5.047965,3.833311,-0.100940,5.830628,5.254120,-1.697820,2.332994,-7.924761,7.575230,-3.464058,5.112761,8.011258,7.003037,-4.297157,-3.621360,7.331797,-8.201743,-9.747502,-6.391185,-4.238694,-3.299202,-2.098175,3.856865,0.606313,8.433801,-2.493083,2.517412,-8.797596,7.435886,-4.180962,-8.426834,-1.017531,-4.446072,8.022681,9.878000,6.522641,-1.382546,3.680664,-8.177667,-8.157068,-5.551360,-7.534931,9.998853,-7.365164,-1.854709,-2.588903,-3.605730,3.964362,7.102364,-7.193202,-3.012795,2.270453,9.520260,-4.102369,7.739477,9.599488,2.601743,6.470167,-0.268515,7.089848,-9.477513,5.598160,6.672905,-2.383694,-4.526400,6.474489,-6.489047,9.557354,3.902217,8.880917,9.103300,-5.966690,-0.505812,3.871114,3.117790,1.199543,-0.882128,0.800758,-6.505121,5.258907,-4.660522,5.995656,1.357916,-5.882366,5.485838,0.755434,5.515723,8.284052,4.176621,-6.971875,-0.821983,-5.839762,6.476175,-4.355197,6.450355,-5.864380,-5.109482,-0.417524,-7.079127,-2.250559,-5.319305,-3.439302,4.682042,-5.263230,-2.816780,4.500909,-1.128368,-7.578081,7.480086,2.097984,-7.430610,-6.499797,-8.720780,-1.333467,-1.503339,-4.624257,-6.839457,-9.490889,-9.062552,-8.796490,3.508202,0.148142,8.341844,5.541365,-7.543114,-5.586819,-3.541255,2.063406,5.404465,-3.873576,-3.403673,4.517568,2.061300,-2.273960,-5.855430,1.665847,6.886109,7.185043,-9.998904,2.318898,-6.772144,6.020844,8.960789,9.333236,-6.626568,-1.484879,-9.688852,4.160638,2.983117,1.774094,-9.636792,7.758730,-8.862702,-2.411674,-4.751365,3.889631,7.476769,4.108034,-0.076315,-2.542227,-7.725432,2.602894,-8.158525,6.090208,9.847113,1.318142,4.981549,5.993540,8.799435,-3.021911,5.379018,-2.372465,-6.710943,2.463535,-7.939391,9.743706,-3.702169,3.301566,0.446033,-0.919419,-1.174266,-5.840297,1.779510,0.234433,4.543418,-4.813070,0.099862,-9.646801,-1.776692,-3.866874,4.183228,-3.270223,1.842465,-9.985741,-2.149701,4.879804,-2.828811,-0.310722,5.256359,-4.492580,3.079615,3.136743,-2.227147,-9.474815,-3.390144,9.369951,-1.548414,8.031902,-7.187112,-6.424557,7.686443,6.854934,5.683944,1.173439,8.003292,2.041564,-4.970791,6.425765,-9.489262,8.044985,6.944433,-1.756109,-5.479417,4.426017,1.157791,4.473251,0.783627,-8.340591,-6.097426,5.458145,-7.618496,-3.100148,4.103318,6.807335,0.868550,-1.312064,1.132359,-3.398877,6.105193,-1.327910,7.807264,5.996065,-9.273406,0.609895,8.305248,-2.148355,-2.687881,-6.250281,8.165164,1.113951,-0.957007,1.360097,5.255491,-8.439071,2.831296,7.491359,-0.692593,4.247738,9.663633,-5.216093,5.700391,-4.914913,2.711187,1.953199,-4.505473,-4.444396,3.188737,-6.824995,3.972564,2.054532,-9.264111,-2.425476,7.081711,8.522982,-9.964326,6.221089,9.275478,1.068164,-0.294198,1.771011,-4.157444,5.634162,3.277122,-0.483891,-3.057319,9.229522,-0.785361,-5.397303,5.404493,-9.240071,3.404281,2.342277,3.753931,8.282134,6.030367,-9.632425,-6.021722,7.125810,-6.018980,2.385546,5.184421,3.916432,-2.089971,1.279059,9.994902,3.783451,2.497826,3.729389,-3.146232,-4.220679,9.185086,4.316359,0.474770,8.973349,-5.250017,-2.605190,0.567456,8.522032,7.283151,6.025750,3.505722,0.037389,6.383357,1.185679,-0.279390,-9.175012,6.974155,2.554779,-4.358406,-8.579647,3.525386,0.905295,-9.763462,-6.341579,4.818274,-3.876528,8.669795,-5.203504,6.483619,-6.812271,0.589621,6.245493,-6.562109,2.686187,-4.440913,5.246772,4.984596,-9.122031,2.821844,6.901159,1.093478,3.883848,-8.530933,5.758566,-2.586735,6.247652,-1.867435,-2.221989,2.938533,-4.327141,0.516959,-1.000275,-5.029199,-6.228366,7.205900,-4.566639,4.786123,4.994343,9.988123,1.853168,-1.211562,-5.197080,-3.248428,3.894188,-9.177787,9.432178,2.307896,-8.110091,-1.766845,-5.727590,7.340711,-7.384215,-1.237530,-9.670028,6.810565,3.810737,-3.408223,-8.819869,-1.557671,-3.440380,5.929365,-4.071408,5.452106,-9.693800,5.391040,-2.626255,-7.078715,-7.052607,-9.656351,-8.456958,-5.223688,-7.331068,4.528882,0.811974,-9.389728,4.839310,2.638869,6.098248,-8.988972,0.808264,-1.672739,-1.069590,-5.197127,2.081645,9.317366,-5.365195,-0.499215,-7.325398,-7.039657,2.594864,-6.286733,-6.100927,4.863755,-7.167061,-2.099618,7.440943,2.719735,1.153043,-7.147219,6.863372,-9.737430,-5.325944,-2.759856,2.006144,-1.958028,9.567237,3.718024,4.353147,3.609671,-7.066340,9.025743,-0.805283,-7.330017,-1.393581,2.859031,-8.106727,-8.326393,-4.859852,-8.014508,2.473187,-5.191525,6.320751,-1.624922,-7.837439,-9.302978,7.583529,3.462365,3.075370,1.053974,-3.019903,0.349897,7.631899,0.161024,-0.422676,4.610412,3.395736,-4.849076,2.297658,0.432954,8.450494,-9.877031,7.792721,-4.344354,1.576371,-7.576570,-0.481424,7.024662,6.880659,6.469127,-4.475421,2.550319,3.682302,-6.784545,3.856819,-8.370997,7.507138,1.797577,-4.020171,8.051628,-8.011607,-9.113857,0.735362,-8.619818,-7.750607,-2.875690,-7.835839,-8.905308,-6.301841,-2.709610,-3.870548,-7.984095,7.900445,-9.307504,4.981712,-7.590819,-4.468791,1.337339,-5.306529,-6.872532,5.615991,8.534301,3.571875,5.319573,-9.723742,1.766017,0.273943,-8.801122,2.562439,-2.068595,0.677302,-0.173762,2.755304,0.660780,2.668495,2.630431,9.220914,-5.298962,-5.671827,-9.401995,2.659875,-6.310716,1.360412,-6.460182,9.322500,6.968543,9.208819,-6.127377,5.557277,-2.565740,-9.933383,-8.395572,-2.881966,-0.653271,-7.029125,4.695336,-6.958513,-0.974497,-8.778598,-5.150311,-5.000781,-7.963193,-7.284108,-1.623951,3.468660,-6.470215,-3.871174,3.997240,-6.470302,-4.522545,-3.537918,-9.862158,9.172089,-0.978511,2.755265,2.390357,-7.802180,2.074253,2.606173,1.635224,-3.005114,-3.279464,-3.666252,0.026128,2.217090,4.431517,7.831893,-5.040590,8.705205,6.939381,3.106804,-5.189729,-9.660972,-6.819419,0.756886,-2.373298,-2.492725,6.329610,-1.027744,2.800788,-2.609287,2.597277,-1.386785,-8.767132,-2.716731,4.795918,-2.045269,-4.629124,9.294553,-3.122019,-3.963110,9.660762,6.947342,9.845191,8.603921,1.605760,3.916254,-0.623088,-1.948955,6.642013,-1.508761,9.295433,-6.722480,8.743739,-2.603435,7.276549,0.009841,7.996122,7.053757,-6.134199,4.198496,-6.462431,6.888575,7.689800,7.015576,-2.513910,0.100197,-4.379917,8.830931,5.925970,-7.509982,-5.595403,4.874462,-6.151430,-9.672709,-4.643582,4.471771,1.537604,6.379198,-5.310559,4.416647,-8.354259,-5.307987,9.675050,-8.924636,-6.500158,9.154701,-9.804189,-2.046480,6.271457,-6.079406,4.676922,-6.265585,-3.421401,9.958348,-5.076025,2.216402,4.174263,8.900201,-5.227334,0.572124,-4.911454,7.224391,-6.391431,-0.253360,9.380956,9.838575,-5.492786,6.624549,5.630075,0.721803,3.713714,-1.040764,1.366342,3.581313,1.292654,-4.046389,3.253803,7.513815,8.614411,4.619157,-2.359264,8.724155,-6.153164,5.259440,0.703648,1.553922,8.144334,4.732659,-5.159347,-7.980671,-9.220326,8.789492,8.993615,7.397899,-7.651284,0.720201,0.322195,7.230413,6.966255,9.707533,-8.463177,3.442586,-9.228723,-2.473192,-6.516872,-5.307192,6.877757,-7.095133,-8.728716,2.443317,2.578654,4.582039,-5.693609,-7.544802,6.022938,-6.145508,1.188522,-0.302797,1.414906,-3.610705,0.256342,-3.539577,-4.361436,3.652641,-4.478843,-6.913936,6.278831,-6.603875,-7.232498,1.748248,-8.237793,4.450148,-8.848475,0.713925,-3.268998,8.148125,-6.690003,-4.392158,-3.815530,-3.172458,1.485588,-5.684445,-8.934997,-2.404988,-8.093758,2.589738,4.392022,-2.287225,-2.713601,3.229616,9.070861,-6.051779,-0.969373,-2.171824,8.756327,5.350181,6.845280,0.512939,-6.937414,3.507338,-7.550212,0.990004,9.227231,0.904575,7.446214,5.725575,2.749867,5.051968,-7.644206,-2.385973,-5.002932,-3.078584,-1.493216,5.923535,1.748633,3.045323,2.911648,-3.420013,-8.871617,-0.816908,-3.023923,-5.727277,-4.649297,-9.934617,2.081024,-6.365679,-1.299823,-9.669573,-3.971634,-7.938806,-7.864937,7.199025,-1.444856,-6.495306,3.403763,9.905228,-0.609737,4.061992,8.515647,-8.408839,6.092202,-7.382368,0.821881,-6.951952,-4.020556,-6.547320,-3.356909,5.831485,5.749816,9.229630,-3.042273,-2.207162,-1.958683,2.175168,7.290379,-8.605477,-7.353325,7.510552,4.445995,-1.051611,-9.760215,-8.197477,-8.800193,3.856621,-0.871803,9.664962,4.017909,6.994784,1.325784,0.434083,-1.500195,0.324376,-2.203302,0.038957,-9.958710,-6.837093,-1.731148,0.526128,-7.873106,-1.815169,5.704130,8.775660,4.365525,-5.347027,-9.804997,-3.351171,-1.604997,0.523144,-3.874128,-2.189103,-6.659414,4.836542,-7.375096,-9.792249,6.677908,2.931951,-8.303970,-9.331439,9.756915,-6.908413,-3.123898,5.048235,2.293855,-1.932172,4.243539,-0.681761,8.058008,-6.202637,1.456095,-6.169805,5.319279,9.396290,-7.039504,2.672248,4.710355,7.540945,-3.016919,-3.361938,-9.584578,9.295484,2.275357,0.385011,3.000607,-4.338719,-3.801064,-5.097573,-3.765443,5.674474,3.917736,6.647203,6.056529,-0.637842,3.479052,7.693838,9.537004,6.812007,-3.538976,4.990248,-5.545866,-8.375732,-6.052014,-1.602223,7.374404,-9.343559,-9.429294,2.551833,-2.588694,-8.847622,-2.384136,4.749502,-9.558601,-4.879881,-9.950356,6.645066,-7.916713,8.637971,-1.831551,7.211972,-3.719130,-1.410708,7.253263]], dtype = "float64")#candidate|1463|(1, 1512)|const|float64
call_1460 = relay.TupleGetItem(func_804_call(relay.reshape(const_1461.astype('float64'), []), relay.reshape(const_1462.astype('float64'), [10, 14, 11]), relay.reshape(const_1463.astype('float64'), [1512,]), ), 0)
call_1464 = relay.TupleGetItem(func_808_call(relay.reshape(const_1461.astype('float64'), []), relay.reshape(const_1462.astype('float64'), [10, 14, 11]), relay.reshape(const_1463.astype('float64'), [1512,]), ), 0)
func_804_call = mod.get_global_var('func_804')
func_808_call = mutated_mod.get_global_var('func_808')
call_1467 = relay.TupleGetItem(func_804_call(relay.reshape(const_1461.astype('float64'), []), relay.reshape(const_1462.astype('float64'), [10, 14, 11]), relay.reshape(call_1460.astype('float64'), [1512,]), ), 0)
call_1468 = relay.TupleGetItem(func_808_call(relay.reshape(const_1461.astype('float64'), []), relay.reshape(const_1462.astype('float64'), [10, 14, 11]), relay.reshape(call_1460.astype('float64'), [1512,]), ), 0)
output = relay.Tuple([uop_1458,call_1460,const_1461,const_1462,const_1463,call_1467,])
output2 = relay.Tuple([uop_1458,call_1464,const_1461,const_1462,const_1463,call_1468,])
func_1474 = relay.Function([var_1451,], output)
mod['func_1474'] = func_1474
mod = relay.transform.InferType()(mod)
mutated_mod['func_1474'] = func_1474
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1475 = relay.var("var_1475", dtype = "uint64", shape = (2, 8, 16))#candidate|1475|(2, 8, 16)|var|uint64
func_1474_call = mutated_mod.get_global_var('func_1474')
call_1476 = func_1474_call(var_1475)
output = call_1476
func_1477 = relay.Function([var_1475], output)
mutated_mod['func_1477'] = func_1477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1634 = relay.var("var_1634", dtype = "int32", shape = (7, 13, 7))#candidate|1634|(7, 13, 7)|var|int32
var_1635 = relay.var("var_1635", dtype = "int32", shape = (7, 13, 7))#candidate|1635|(7, 13, 7)|var|int32
bop_1636 = relay.bitwise_xor(var_1634.astype('int32'), relay.reshape(var_1635.astype('int32'), relay.shape_of(var_1634))) # shape=(7, 13, 7)
func_1137_call = mod.get_global_var('func_1137')
func_1139_call = mutated_mod.get_global_var('func_1139')
const_1640 = relay.const(-9, dtype = "uint16")#candidate|1640|()|const|uint16
call_1639 = relay.TupleGetItem(func_1137_call(relay.reshape(const_1640.astype('uint16'), [])), 0)
call_1641 = relay.TupleGetItem(func_1139_call(relay.reshape(const_1640.astype('uint16'), [])), 0)
bop_1653 = relay.mod(call_1639.astype('float64'), const_1640.astype('float64')) # shape=(12, 4, 4)
bop_1656 = relay.mod(call_1641.astype('float64'), const_1640.astype('float64')) # shape=(12, 4, 4)
uop_1657 = relay.sinh(bop_1636.astype('float64')) # shape=(7, 13, 7)
const_1659 = relay.const([[[1.051859,-1.515560,5.971979,-8.817634,0.462446,3.559778,7.031319],[-3.573449,0.733638,3.253891,-3.078153,8.155574,-6.147363,4.395040],[0.724558,9.519414,-1.814443,3.594426,-0.140415,4.457531,-6.101975],[2.532468,8.729337,-6.529081,3.850542,-5.960354,-3.439339,3.296244],[1.960387,5.771942,-4.836451,0.584307,-0.323149,-2.404227,-8.649015],[1.894878,-5.487802,-2.571414,-0.700205,9.715599,-7.007818,1.295445],[5.912720,2.548553,6.486705,0.839573,-3.130466,-2.262339,2.715935],[8.308010,-2.719892,1.341343,7.176770,2.815303,-4.213627,-9.016981],[-9.720077,5.583551,-2.232836,-1.222494,-6.208043,9.606835,-3.484549],[9.526450,5.719640,4.848455,6.778449,-6.325060,-7.991714,-1.499959],[-6.491309,-2.118230,-0.842629,-2.131988,-1.784166,8.066259,-6.388682],[9.696932,-4.862414,2.878581,-1.456076,-0.569823,4.071465,-4.758335],[-7.342523,-6.282090,9.363210,5.052302,6.872366,5.753682,3.982436]],[[-7.741890,3.943955,-6.826378,-0.825658,3.085609,6.890183,8.663939],[2.778232,-3.215810,-0.915845,-9.969303,0.484424,-0.299771,-9.558588],[0.765096,-8.692462,7.458153,7.125382,4.032544,9.191476,-9.330171],[-3.147139,2.623737,-9.698858,0.878272,9.208652,-1.623244,-5.406034],[1.588514,-6.925533,-0.952683,-9.866436,5.658980,6.207154,6.042434],[0.586573,5.100709,7.218874,9.425958,2.590696,7.408254,6.223549],[7.196074,-0.827313,-5.142007,5.361453,7.301790,-0.393543,-0.835809],[9.512039,4.575624,9.644851,5.175017,1.379262,-2.170980,3.044384],[2.350573,-8.987484,-9.352750,2.857802,7.627871,2.983921,-4.608374],[1.040581,-7.660433,9.941263,-9.191318,-7.710712,3.882346,-2.350801],[-5.747378,6.965443,-2.443022,9.859680,-2.990921,5.419604,3.196267],[-7.803224,2.877353,-4.678188,6.703124,8.508215,9.582680,8.584068],[2.079300,-6.171350,2.650612,-2.596759,8.585180,0.498750,-0.095424]],[[-4.716394,1.032666,-0.486343,-0.180201,-4.520442,-2.006267,6.813883],[-2.239938,-8.677577,1.980533,0.772687,1.502020,-3.595930,4.259654],[-4.599078,0.076099,-5.131380,-9.369672,6.875905,6.078622,-2.281051],[6.271010,4.942899,-0.968855,5.384484,6.760371,-6.731108,-0.241289],[6.150407,-0.883637,-8.630231,-2.820341,1.075372,0.092785,-4.315362],[-3.441043,-4.667599,-7.903300,2.246128,6.789492,-2.020533,-1.684973],[1.104684,-8.901880,-1.010910,5.976047,-3.024499,0.205594,-7.160663],[-3.643008,-3.874775,7.383096,-6.840974,-0.450702,-5.881302,-6.193111],[-1.438373,9.308884,-3.284820,8.641430,6.204745,2.275323,-2.852018],[0.938827,7.293521,2.429268,-6.784150,-4.131878,0.906426,8.969995],[-4.614463,-6.298495,-3.601622,5.112635,0.013800,0.994880,9.762743],[-4.908913,-8.818765,-9.517550,8.081111,5.147295,-2.668028,-8.274799],[-3.880468,8.449467,-3.347083,-9.739944,0.714294,7.171306,-2.963598]],[[3.406995,6.326202,0.226644,6.831999,9.375154,-0.813545,8.974603],[-8.587744,-3.664471,2.363805,5.861235,6.133772,-7.747150,2.219822],[-8.304803,-5.561171,7.936070,2.856540,2.730512,-1.484119,-0.178184],[8.469088,7.142148,2.844621,9.402054,4.118290,-1.068791,-3.052829],[-9.860975,-6.647786,6.883608,-2.169307,-8.513912,0.997202,7.191900],[-5.471956,-1.518166,5.084120,8.492815,6.518732,7.960437,-9.533864],[-2.815398,-0.900455,-0.984722,9.063830,1.303823,5.659657,1.539274],[-7.957517,-8.949147,-4.256966,-6.259642,2.790788,8.152819,-7.551384],[1.726873,-4.488371,0.327108,-2.565168,-8.854588,4.859421,-8.108941],[5.106936,-7.280364,-5.111984,8.820390,5.027867,-0.283605,6.267914],[-9.676271,-3.216214,-2.293968,0.947194,3.609388,-7.790827,5.421949],[6.054898,-3.188268,6.890840,-2.732080,2.589587,4.640634,-8.146545],[9.696653,3.244840,3.725732,-8.737941,-3.977385,-2.599795,1.423367]],[[1.565570,-2.420059,-2.332706,-9.896825,0.123181,4.137375,-3.267671],[-9.072351,-3.895058,-2.449210,1.727734,7.163274,-9.844684,3.353325],[1.186679,4.521292,4.964257,-1.678183,-0.770469,6.239789,2.580367],[-8.837608,6.107263,-1.235722,1.113781,5.299898,3.526918,-6.003106],[8.206476,-3.625296,-9.773425,8.776589,2.086659,-1.561891,-1.098384],[-2.673356,-2.354836,2.786630,8.589024,-6.684684,6.034530,3.374905],[-0.540887,-1.282467,2.816477,7.971921,-7.068044,2.808744,-4.702470],[1.932601,1.861755,-3.281231,-2.386080,-6.225346,-3.609287,-8.911660],[-9.134081,-4.704073,7.978970,-5.162720,2.149844,4.957455,8.195738],[2.395085,-3.504500,-0.565491,-5.691187,1.585172,6.806752,-5.053419],[-1.832572,8.607179,-2.348809,-8.421493,-6.210636,-4.739267,-1.653116],[2.817574,-4.855103,3.971087,4.871088,9.257782,-5.268678,-4.221008],[-8.418410,8.826934,-0.526199,6.832875,-2.772301,-3.944752,0.391356]],[[-9.261515,-0.033512,0.886400,0.689429,7.229725,-9.684051,-7.642032],[-0.981509,-5.739359,-2.909519,0.256519,-1.288861,1.928245,-2.348934],[2.100288,9.013990,6.428663,2.836728,-3.584479,5.221923,9.602120],[-9.418575,6.337169,9.795112,2.080691,8.053817,-6.560481,-1.743114],[3.779781,5.312209,-3.002368,-1.802953,2.458954,-9.312836,-7.011112],[9.749696,2.163667,-6.665253,-3.513535,6.078594,3.286192,8.292129],[-9.651141,5.547062,-9.819308,3.336309,5.224609,3.613636,0.410164],[1.034925,2.265381,-0.632766,-4.801522,6.678961,-5.169674,1.698100],[-9.114552,5.916637,-5.769087,-3.308903,5.746222,6.692806,2.786068],[1.374243,-6.053850,7.842823,-8.752262,-1.032523,-4.896332,9.890278],[-2.993563,-6.819855,7.203781,-8.647240,-3.264251,9.804782,-8.865151],[9.303765,4.530221,-9.778789,1.483224,6.579912,3.647730,-4.064759],[-2.140325,-5.916273,-4.237454,7.181943,-3.086279,3.332248,-9.507447]],[[3.136485,6.114227,-7.369812,5.827599,-5.503411,-3.748102,-8.528816],[-8.629506,6.143604,8.184598,2.344124,-0.010509,9.765733,-8.431072],[-8.495823,1.776909,2.742800,-2.783512,7.575721,6.302365,-0.579186],[-4.368205,3.110824,0.324183,9.488639,3.267620,6.369492,0.044261],[-5.139153,1.276418,-0.880898,-3.837748,-4.863979,6.841586,1.756794],[8.439567,9.559936,-9.904557,-4.314385,3.390900,-2.305036,3.915784],[4.672600,4.283240,-4.219297,-8.777985,0.741551,3.144264,9.118583],[-0.726734,3.019496,-8.365325,1.399416,8.340642,-0.862793,1.215094],[3.986719,-5.719526,3.664345,6.458398,0.208934,-9.349516,-2.781070],[-4.493668,-5.406022,-3.348902,-5.400462,-3.152155,-2.068211,-7.730036],[0.192603,6.631454,-4.440125,6.768867,7.738840,0.007752,-9.880391],[-2.302210,1.738469,-1.043643,3.084580,0.196604,7.722839,8.229041],[-9.662806,-1.969546,8.706189,-1.135988,-2.954238,6.312893,-3.561299]]], dtype = "float64")#candidate|1659|(7, 13, 7)|const|float64
bop_1660 = relay.greater(uop_1657.astype('bool'), relay.reshape(const_1659.astype('bool'), relay.shape_of(uop_1657))) # shape=(7, 13, 7)
output = relay.Tuple([bop_1653,bop_1660,])
output2 = relay.Tuple([bop_1656,bop_1660,])
func_1664 = relay.Function([var_1634,var_1635,], output)
mod['func_1664'] = func_1664
mod = relay.transform.InferType()(mod)
var_1665 = relay.var("var_1665", dtype = "int32", shape = (7, 13, 7))#candidate|1665|(7, 13, 7)|var|int32
var_1666 = relay.var("var_1666", dtype = "int32", shape = (7, 13, 7))#candidate|1666|(7, 13, 7)|var|int32
output = func_1664(var_1665,var_1666,)
func_1667 = relay.Function([var_1665,var_1666,], output)
mutated_mod['func_1667'] = func_1667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1774 = relay.var("var_1774", dtype = "float32", shape = (1, 11, 13))#candidate|1774|(1, 11, 13)|var|float32
uop_1775 = relay.sigmoid(var_1774.astype('float32')) # shape=(1, 11, 13)
var_1782 = relay.var("var_1782", dtype = "float32", shape = (15, 11, 13))#candidate|1782|(15, 11, 13)|var|float32
bop_1783 = relay.bitwise_xor(uop_1775.astype('int8'), var_1782.astype('int8')) # shape=(15, 11, 13)
func_804_call = mod.get_global_var('func_804')
func_808_call = mutated_mod.get_global_var('func_808')
var_1790 = relay.var("var_1790", dtype = "float64", shape = ())#candidate|1790|()|var|float64
const_1791 = relay.const([2.115816,5.569620,3.646474,-8.897385,7.554483,8.834087,7.981449,0.155950,8.697143,-0.287662,-2.410056,-0.462236,-3.041366,-3.840126,7.610944,-1.768061,-7.569765,5.105864,-6.039915,2.426538,9.761105,0.945469,8.570278,7.232722,-9.817138,-9.883784,8.973094,-3.077047,2.503536,3.096010,9.394714,2.482523,1.524600,7.631827,-6.696624,0.972008,1.624138,9.120247,3.704549,9.473254,-9.192862,-3.916995,-2.053459,7.856291,-9.812675,-4.821192,-4.313939,9.544346,-1.194756,-1.867148,-3.914616,-5.530543,-6.801611,-6.913702,8.954049,0.937062,-2.004569,8.286740,-5.879716,-9.983697,-2.366569,-9.188077,7.940572,-6.743601,-9.880755,-1.690999,5.136706,-8.255348,-2.317347,1.945995,6.831400,2.508486,8.166855,-0.288975,-3.517861,-0.774088,-3.548642,7.100211,-3.333331,8.126768,-0.189195,0.373063,5.609747,-5.471079,8.112836,2.769067,-8.334515,-1.039945,8.035968,-6.806285,1.999161,-7.524665,0.957620,9.662576,-6.559490,7.878944,0.864022,-8.756053,-4.368689,-3.643104,-6.501276,-0.639093,7.513152,-9.597170,-6.052001,-4.182055,3.199290,3.088510,-6.199348,7.821165,3.846182,-3.352669,7.267284,6.152123,4.217341,9.525405,3.677401,-6.363259,-3.868189,-4.980185,3.840567,8.987390,4.634866,-9.780342,1.025686,-6.132203,-1.033560,7.388408,2.850361,5.552973,0.571909,3.757322,5.658066,6.797309,-6.880354,-1.891224,-8.862009,4.252676,-1.985298,6.875374,5.642232,-4.005160,-1.942872,9.239444,7.286820,-6.161877,-4.573279,5.446246,-3.607444,7.756783,-5.031160,-1.794541,6.880770,6.768198,3.539138,-4.731402,-7.775939,-1.228981,-5.316676,1.809413,1.060024,-7.136462,4.163541,8.802212,-4.412791,-6.738654,-5.662883,0.498316,-5.108449,8.146614,-9.050836,-6.501834,-5.172334,2.222892,4.919825,-6.168028,9.439305,-5.797293,0.891545,-2.450526,-4.652557,-7.850779,0.190284,6.663732,-1.313218,-0.349334,-3.052769,-8.965815,9.427586,1.121551,-3.976872,1.987677,4.692817,-5.337234,8.265868,-1.897235,6.963960,-0.224623,4.353294,0.611318,-0.473443,-4.038409,-7.595807,-4.223191,-6.448907,-4.990048,8.716558,-4.446122,2.506306,3.115382,5.085491,5.582577,2.977909,-2.903695,0.643613,-7.733968,6.853327,-3.586719,4.118183,1.643547,-4.464096,-9.167136,-0.528309,-1.785745,7.151834,-9.469498,-2.707256,-4.751006,-6.242972,-1.168375,-0.694964,4.233431,3.016892,9.661692,-6.821100,-0.038749,4.037100,5.291954,-3.470995,6.858256,2.563964,-1.344114,9.275852,5.777623,7.000322,7.592565,8.610359,7.067763,-1.433055,7.023230,-7.667936,-2.045874,3.364012,0.450724,8.440246,9.457065,-6.633062,-4.522681,-1.801545,7.699805,8.670518,1.475971,-4.909156,1.242922,-6.087504,4.736569,9.368416,-3.818913,0.239492,-6.260049,-8.406833,-0.545666,7.484954,7.626360,-6.115444,-6.091527,4.137335,-4.849785,-2.458870,7.178882,7.771079,3.955507,-0.172314,5.595792,2.405113,-6.259860,4.037647,0.664098,-9.909295,7.044082,6.042332,-0.834654,9.082203,-4.552483,5.616247,-7.287152,7.386474,1.652276,7.812848,1.535351,-2.570414,6.939198,-9.018294,-3.534408,3.934856,-9.534081,2.534370,3.010324,1.883554,5.300871,6.469556,5.061522,8.791811,-6.309676,5.594323,-6.527979,-3.775622,-0.658898,-5.281623,1.748098,-4.830395,-0.047856,-4.268991,-8.456255,-7.294061,-8.376252,-8.713037,-7.248506,-4.367758,-9.360437,-9.307816,4.112000,-4.950170,-6.217269,9.741256,-2.624439,9.846996,6.710128,3.424479,0.735935,5.265646,1.290555,-9.945824,-0.836593,2.223051,-2.579427,5.329949,-2.928016,6.822049,-7.224931,-5.168538,-7.335544,6.842123,8.038381,-6.050448,-0.869862,1.479689,9.986651,8.376235,-7.853378,-7.379511,6.695812,5.185708,-3.053578,-7.057334,0.569887,8.770038,-3.872772,2.541669,2.153363,-9.748744,-8.901613,-4.836215,8.016441,7.889501,-4.424785,7.280379,8.897253,1.811844,8.358112,-3.704550,-3.165443,8.538885,-1.367574,-3.709959,-4.292136,-5.130547,-6.613470,-3.822880,-0.331593,-3.640442,2.193073,-2.522241,-8.068702,-0.940773,9.986978,-3.517219,3.791127,-9.304210,-2.985517,6.396010,-6.730681,9.017587,-8.018549,-1.204803,6.954211,2.540176,-4.690429,9.306283,2.069055,7.158238,-1.948840,-7.500217,6.326077,-0.434858,-1.655407,-9.874176,8.384518,0.508892,7.969633,-3.216939,-3.831360,7.666954,-7.723786,6.240221,7.136610,-2.940306,-8.481624,7.422436,-3.833901,-4.206210,0.821363,9.938780,-0.677888,2.118026,-8.754283,5.344442,6.864691,-7.198285,8.944062,-2.417908,-2.158540,4.971476,9.240711,-1.111559,-1.966561,-2.069192,3.950577,-1.233806,0.167506,1.157833,5.701937,-8.060265,9.296219,-1.116106,3.192336,3.396372,-1.642514,-8.508647,4.137907,9.515438,6.457083,-8.620842,5.459823,3.638722,-4.713748,-6.965796,0.159729,-5.017170,1.832160,4.137019,0.976811,-1.507279,2.710833,-0.505568,1.287837,-7.952526,7.986160,3.462428,9.542185,4.157065,2.594118,-2.004142,0.935404,-7.673218,9.569771,9.105138,-1.968735,-2.435163,-3.373958,0.409125,-7.905711,4.882303,-3.951204,-5.736288,7.492117,7.349670,-1.236962,5.654755,-6.599216,-4.938178,6.354497,6.951661,-3.407237,-8.008370,-1.862165,-2.794600,8.421436,-2.366241,0.357722,-0.285986,9.199300,4.301337,5.321398,9.017623,-0.585415,6.369038,0.768618,-2.559454,0.537278,-4.295993,-7.034806,-7.912071,-1.020296,7.549219,-7.854266,-3.952987,1.109598,2.267745,-6.734162,-6.611595,-7.975646,5.722677,-6.535262,0.624927,-8.794409,6.383872,1.479230,-6.620344,3.942925,6.948661,5.328387,1.606808,9.256739,3.998724,8.597429,2.431575,-2.746880,4.265663,-6.143648,-9.353279,-7.482757,1.824074,6.836562,-2.499123,0.886577,-6.075802,3.975750,3.310275,-1.422987,3.453481,-0.296588,-4.427584,6.912451,-7.217801,-8.745925,-7.820930,-9.634525,-7.112478,6.712428,-0.539144,-1.605322,-5.000326,-3.910361,1.663858,-5.751760,-7.739697,6.584470,0.581670,-8.371386,-8.172172,-3.396749,-1.721131,-1.754687,7.255347,4.193111,-3.499956,-6.626106,7.684954,-4.872238,-0.479614,9.330959,3.407585,2.018964,2.333989,-4.785955,-0.895321,-0.744491,-9.309372,-6.648513,6.127486,2.364725,2.781541,-8.702162,0.223825,2.624790,3.386274,-3.555073,0.974169,-4.266984,-5.639787,-9.119731,9.104323,7.887434,6.530688,9.795776,8.220980,-7.334768,3.376036,8.715502,1.371824,-3.768481,-9.935296,-3.108644,-8.306210,-1.905301,9.345886,2.417451,-4.984517,-6.827977,-6.092075,-8.912482,9.711771,8.564960,7.587379,7.628298,4.753702,1.590949,-7.238621,-2.991819,-4.208013,0.855851,3.647856,0.689722,1.296076,-3.541671,7.140020,6.828860,4.652728,8.303830,-0.975868,-8.485234,-8.791484,0.933645,5.826771,8.085274,-1.622003,0.481142,-0.369399,5.795399,4.837167,4.217098,-8.837311,3.443455,9.109901,-7.562622,4.396312,-1.327158,1.267282,-5.175763,4.641761,-2.390414,8.913587,0.743406,-3.824907,9.863507,-4.614717,6.868595,-7.133970,5.304295,2.303097,2.597362,-6.217454,4.843393,0.146453,-7.162564,5.482620,-7.734328,-9.178303,-1.325579,2.264462,-8.914617,1.284333,-6.105457,-5.308699,4.503121,-6.779709,-0.518672,-0.394694,-7.499694,-8.871558,-2.855128,6.463597,-2.370290,3.023774,5.805518,-8.061028,-5.896676,8.992172,2.372014,-3.553146,2.989781,0.018688,0.529128,2.317216,3.258399,-4.542493,-2.646507,7.962234,-8.360914,9.709921,3.953098,8.117273,0.707542,-8.801817,8.505471,-6.204082,4.948384,-1.739272,4.639321,-6.479510,1.087296,8.220647,2.924394,-3.276369,8.219888,2.741735,-6.372097,-8.939942,3.323199,-8.804063,-2.966739,8.697918,8.774228,-0.570260,-6.222389,0.135582,-3.492430,5.101633,5.044811,6.412775,1.912537,5.923752,6.062975,-1.702554,5.143221,2.400994,2.079677,3.277546,0.436710,8.211118,2.319816,8.025056,2.463198,1.699812,5.464496,3.466543,3.470931,-3.654967,4.529718,7.801778,4.725656,-1.888694,0.247304,1.075746,1.029615,-6.877593,-6.094697,-4.496825,-8.027814,-5.797466,-4.351695,5.645111,7.764491,9.099985,-3.751688,8.029846,5.709939,-5.615066,4.026964,4.524060,-3.824872,1.053891,-4.814987,6.476042,6.757222,-8.740278,1.971596,5.268343,8.140717,7.741041,0.549329,4.972228,-8.667899,-6.668074,-0.280001,7.311766,0.346457,7.470279,-5.575519,0.046723,-4.777164,-1.060210,5.375089,-7.224585,-0.545391,-1.260985,-2.368711,-2.387464,8.261701,3.144418,6.673220,-5.076969,3.661743,-9.108531,-7.780752,-0.391266,1.478081,5.530937,-3.609801,3.451193,0.396266,4.879036,0.331500,9.950704,-3.497349,-4.241912,5.828583,-1.910213,-1.860327,-8.225930,-5.085298,-6.556482,6.820295,-0.621926,1.485291,-9.843559,2.859655,3.468649,-1.136958,5.179252,6.891509,-0.385439,5.458964,6.196065,4.841916,-3.715154,-8.358607,8.286124,-3.923977,-0.987101,2.382722,6.838687,-2.534043,4.478737,7.918237,5.584448,4.117268,6.789169,-2.769033,-4.686933,-4.750665,-4.835785,4.297594,6.464964,9.013856,-8.095178,-2.316672,-8.787284,-6.839452,3.237895,-5.438284,-1.922723,-4.699190,-8.459944,-1.705764,-0.393708,-8.648030,-6.454936,-7.360134,6.952429,8.324607,-4.404196,0.079526,-0.505005,8.655124,3.655072,-3.285161,0.634627,0.269489,2.725370,-5.881365,9.385668,-9.211518,2.536129,1.694538,3.690495,-4.992163,-6.979898,-0.324965,1.250270,4.097944,8.154719,-3.514488,-7.931509,1.742228,6.625042,-0.255721,-0.129948,-3.293441,0.720474,-3.089974,-9.628438,8.945927,0.864494,8.278117,7.224951,9.964517,-4.753660,9.438301,-6.009421,2.989997,-1.362006,-7.137004,-4.956401,-0.099026,-2.747847,-0.206368,6.664692,8.278110,5.009258,0.408156,9.069247,-3.858671,-1.889891,5.789270,-1.125862,5.845015,-4.951594,9.643511,-7.994245,-7.794272,-1.673444,-2.620822,-1.534711,-2.746289,-2.473737,-8.260989,8.740863,-7.613982,-9.862815,-4.734067,-9.930505,-7.366504,0.741172,7.344042,0.681856,-2.072303,6.602381,-3.640462,-7.335079,6.730486,-3.208089,1.965866,-6.285027,-3.478513,0.840142,2.924146,-2.784185,-7.086464,1.404405,2.880978,5.215759,4.387756,-4.672490,7.588327,-0.251412,-0.759264,-7.890906,-5.290446,9.896589,-3.688412,8.897684,-6.101781,1.672093,0.655034,-3.785546,2.303137,-4.008640,-9.629426,-8.053114,-0.687827,2.451138,-9.563238,-5.554716,-9.385997,4.538858,-0.212548,0.428064,-7.179940,5.077336,3.224931,-9.818960,5.546425,4.773165,-7.301408,7.157239,3.633466,8.102565,8.791096,-3.903127,7.584113,-6.638117,6.114785,-3.003806,-4.851777,9.897366,4.932672,-4.255420,1.024853,6.040322,-1.655829,-0.281753,8.284044,3.466766,5.471357,-1.787515,3.557980,-9.810956,-6.303002,-5.344574,-8.475616,8.371174,4.076834,-2.347118,8.725175,-8.345019,6.587135,8.011637,-1.117894,9.644734,0.689091,-1.761893,-8.309111,0.254395,5.301520,5.124130,7.295280,-5.492949,-0.907350,4.356088,-1.869319,3.694308,-3.652452,-2.515770,4.980549,-0.637681,6.687938,0.830379,3.004219,0.284565,-3.610377,-6.962282,3.474785,3.633601,-4.441596,2.361395,-7.523768,-2.592667,-2.476413,-2.866875,-3.247538,-2.411680,0.367343,9.257187,-8.007032,-8.962465,7.353444,-4.270765,8.887084,-6.642476,1.164944,-9.431170,1.598093,-4.646713,5.036248,2.917182,-8.621597,9.160259,-3.047532,-3.719739,9.664444,9.345540,-6.445991,9.829712,1.907745,2.684634,-3.671502,2.920111,-9.939687,3.214064,-8.009425,6.688668,-9.764792,-5.029136,9.405757,0.513391,3.226692,4.800789,-3.534611,1.524739,-4.850629,-1.779419,-6.152505,-7.427360,-7.201893,-6.526667,0.058093,1.983405,5.140899,-8.217452,-0.678204,0.952972,-1.311607,9.028297,-9.893469,0.057843,6.032683,4.361508,2.833089,-8.064319,2.763531,-5.942721,-2.552291,-7.232105,9.225970,-3.386763,-1.829232,-1.986097,-5.364774,7.030231,-7.876497,-4.512005,9.020599,-5.277475,2.924114,-7.537562,7.934552,1.260874,-3.082720,4.117256,-7.597402,8.260290,-7.237783,-7.791509,-1.892488,7.182189,-1.854668,-7.971008,8.811830,-4.567161,-2.744638,2.422315,9.048574,6.083318,-7.945789,8.025942,0.734524,8.138959,-5.707379,-0.919135,8.645900,-0.267132,3.397765,6.077225,4.084026,-4.332626,-5.069877,7.830009,-9.211760,5.536345,-3.692434,-5.528351,-6.775916,1.510179,8.140849,9.901375,9.691945,-6.775568,-7.076219,3.446498,3.860572,4.632434,7.977833,6.914786,-7.827191,-0.254303,6.102798,-5.683401,-2.648315,2.861554,1.060906,-6.986146,-9.823922,-2.527301,5.299871,-1.332091,5.641142,-2.097607,-4.633570,-5.162726,8.420128,4.843096,9.874456,-6.769255,2.664749,9.116147,-5.830959,7.583293,-2.090536,9.304709,7.257446,-6.191383,-1.163906,6.357731,-5.620953,8.258349,-7.210261,8.065033,-6.611913,6.874435,5.179124,-4.835156,0.958893,-7.935883,5.664048,3.864735,5.759163,0.773828,-8.956412,-7.866162,4.581585,-6.411191,3.897157,9.106206,4.633498,6.757284,-3.029365,-9.908891,-7.105052,2.618543,9.244554,-4.589384,6.622968,-7.331863,8.466802,-4.719992,-6.236183,-2.579351,-3.969464,4.865171,7.582431,-0.398539,-0.689680,8.464319,1.529495,4.947929,2.896537,5.681980,9.704547,-4.072987,8.724605,2.994279,-8.362279,6.821126,-9.809108,-2.031042,9.356727,0.042292,-5.318540,-1.348822,3.744502,-3.633800,-9.217232,6.766883,0.188315,-6.109693,8.143108,-2.427129,5.794255,-3.714103,-0.161964,8.121085,-0.825796,3.430470,7.133079,-7.297664,0.861679,5.560663,7.360786,-8.708541,1.511241,2.516483,-8.913865,-1.941855,5.130945,7.678221,4.640802,5.175727,9.079285,-6.485672,1.430093,-4.320243,9.805866,-4.757789,-3.853177,6.184457,2.294833,-8.940449,-2.434446,5.700197,-2.468721,7.732496,-7.300229,0.156834,-8.461873,-5.557260,-9.819113,-4.899657,5.700104,-0.872418,8.998013,9.309914,-2.325468,8.354857,-4.807157,-4.499978,4.435287,-3.799443,8.170637,-9.648671,-2.129197,5.859144,9.842701,-7.560084,-1.939344,-8.975655,8.866792,-8.067689,-8.034749,-8.005128,-7.400178,7.060457,1.231315,5.131165,0.171752,-0.435612,8.233080,-0.210195,5.079973,6.423253,-5.082688,-4.606817,6.530600,7.502189,-3.546755,-5.787382,2.399831,-2.737160,4.056355,8.962970,2.825479,-6.157502,7.630621,5.009032,-1.366573,-7.835620,5.228531,-5.161058,8.065350,-4.352251,2.521861,-1.910747,-0.526746,7.483306,1.742212,-2.172847,-0.971112,8.179896,3.119029,2.716880,3.228017,-3.261715,-5.759068,2.732024,9.641226,2.853703,-5.900593,1.293919,-8.463953,-1.861375,6.252160,4.578184,-9.284870,1.532511,1.713967,1.578951,-1.977941,4.557131,-6.257511,-4.454242,-2.952966,-8.869037,3.006532,8.012636,0.348337,2.864101,-6.047493,-8.299483,1.413126,2.683852,-4.871124,7.737027,-7.847053,3.822998,4.031347,-2.177926,4.483535,-4.766042,-5.281646,5.765953,-6.226643,-1.494365,4.876859,8.000206,-5.686603,0.367245,2.767336,1.831281,-6.618374,-0.536265,-9.283645,6.033586,9.476987,7.006417,-6.206177,7.513928,0.374328,0.080867,8.776421,-5.323325,7.062933,-7.629239,-2.992912,7.439552,5.141516,9.038795,-1.765640,7.536700,-3.033150,-8.990865,3.800545,8.544094,5.699038,5.284802,3.447508,0.868627,-8.712101,9.454904,0.063846,1.025839,-2.878566,9.888658,3.445797,3.901048,9.697450,-2.087471,3.664235,7.970617,6.278299,2.998348,-7.492385,3.255824,2.903913,-8.373477,9.123850,8.973997,-0.607458,9.746329,4.763455,2.074648,-0.904389,-1.041525,-0.722756,-3.629188,-0.961055,-1.868633,-6.433893,6.027615,6.828373,8.758473,8.484228,-2.744977,0.588809,-7.498138,-8.723569,6.449299,0.848415,6.178854,2.657535,6.909149,8.635179,8.799573,-2.028114,5.028815,-6.080623,-3.801291,9.071256,1.295752,-4.618255,-6.930923,4.614918,8.716320,8.718671,-3.794193,3.175624,-3.626717,-4.971698,-7.766365,4.683035], dtype = "float64")#candidate|1791|(1540,)|const|float64
var_1792 = relay.var("var_1792", dtype = "float64", shape = (1512,))#candidate|1792|(1512,)|var|float64
call_1789 = relay.TupleGetItem(func_804_call(relay.reshape(var_1790.astype('float64'), []), relay.reshape(const_1791.astype('float64'), [10, 14, 11]), relay.reshape(var_1792.astype('float64'), [1512,]), ), 0)
call_1793 = relay.TupleGetItem(func_808_call(relay.reshape(var_1790.astype('float64'), []), relay.reshape(const_1791.astype('float64'), [10, 14, 11]), relay.reshape(var_1792.astype('float64'), [1512,]), ), 0)
func_804_call = mod.get_global_var('func_804')
func_808_call = mutated_mod.get_global_var('func_808')
call_1816 = relay.TupleGetItem(func_804_call(relay.reshape(var_1790.astype('float64'), []), relay.reshape(const_1791.astype('float64'), [10, 14, 11]), relay.reshape(var_1792.astype('float64'), [1512,]), ), 2)
call_1817 = relay.TupleGetItem(func_808_call(relay.reshape(var_1790.astype('float64'), []), relay.reshape(const_1791.astype('float64'), [10, 14, 11]), relay.reshape(var_1792.astype('float64'), [1512,]), ), 2)
uop_1820 = relay.acosh(uop_1775.astype('float32')) # shape=(1, 11, 13)
output = relay.Tuple([bop_1783,call_1789,var_1790,const_1791,var_1792,call_1816,uop_1820,])
output2 = relay.Tuple([bop_1783,call_1793,var_1790,const_1791,var_1792,call_1817,uop_1820,])
func_1829 = relay.Function([var_1774,var_1782,var_1790,var_1792,], output)
mod['func_1829'] = func_1829
mod = relay.transform.InferType()(mod)
var_1830 = relay.var("var_1830", dtype = "float32", shape = (1, 11, 13))#candidate|1830|(1, 11, 13)|var|float32
var_1831 = relay.var("var_1831", dtype = "float32", shape = (15, 11, 13))#candidate|1831|(15, 11, 13)|var|float32
var_1832 = relay.var("var_1832", dtype = "float64", shape = ())#candidate|1832|()|var|float64
var_1833 = relay.var("var_1833", dtype = "float64", shape = (1512,))#candidate|1833|(1512,)|var|float64
output = func_1829(var_1830,var_1831,var_1832,var_1833,)
func_1834 = relay.Function([var_1830,var_1831,var_1832,var_1833,], output)
mutated_mod['func_1834'] = func_1834
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2066 = relay.var("var_2066", dtype = "float64", shape = (7, 5, 13))#candidate|2066|(7, 5, 13)|var|float64
uop_2067 = relay.acosh(var_2066.astype('float64')) # shape=(7, 5, 13)
output = uop_2067
output2 = uop_2067
func_2080 = relay.Function([var_2066,], output)
mod['func_2080'] = func_2080
mod = relay.transform.InferType()(mod)
mutated_mod['func_2080'] = func_2080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2081 = relay.var("var_2081", dtype = "float64", shape = (7, 5, 13))#candidate|2081|(7, 5, 13)|var|float64
func_2080_call = mutated_mod.get_global_var('func_2080')
call_2082 = func_2080_call(var_2081)
output = call_2082
func_2083 = relay.Function([var_2081], output)
mutated_mod['func_2083'] = func_2083
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2142 = relay.const([[[-3.914056,4.992893,5.047691,1.601765,-9.266374,8.674258,5.441981]],[[8.080354,4.962060,-3.669887,-3.758340,-5.691562,-7.068813,-3.644067]],[[0.137166,6.260602,-0.429976,-0.782427,1.883631,-3.803113,9.825394]],[[6.737335,-0.220650,-2.714099,5.947868,-9.141937,3.156406,-6.420247]],[[-2.293703,5.553715,-5.645843,5.069799,-8.719386,-5.068130,-1.967165]],[[3.897523,-9.225939,-5.895334,3.394795,-6.018193,4.303042,2.435580]],[[9.666013,0.325275,-8.774348,-8.243114,5.085943,6.375597,4.075831]],[[7.468688,1.051610,3.012182,-6.244271,-2.288760,-8.589045,-4.773311]],[[9.784507,-7.776131,3.882619,-7.815384,5.789225,-8.211861,-6.676614]],[[-7.939789,3.660236,9.691869,-4.061431,-6.680791,-6.748555,-2.780465]],[[1.986949,1.531532,-9.434218,-4.782529,2.686877,6.947669,3.755899]],[[2.814175,-1.068425,8.963789,8.507845,-8.458074,0.781175,-5.858683]]], dtype = "float64")#candidate|2142|(12, 1, 7)|const|float64
uop_2143 = relay.erf(const_2142.astype('float64')) # shape=(12, 1, 7)
output = uop_2143
output2 = uop_2143
func_2154 = relay.Function([], output)
mod['func_2154'] = func_2154
mod = relay.transform.InferType()(mod)
output = func_2154()
func_2155 = relay.Function([], output)
mutated_mod['func_2155'] = func_2155
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2163 = relay.var("var_2163", dtype = "uint64", shape = ())#candidate|2163|()|var|uint64
var_2164 = relay.var("var_2164", dtype = "uint64", shape = (1, 16, 7))#candidate|2164|(1, 16, 7)|var|uint64
bop_2165 = relay.maximum(var_2163.astype('uint64'), var_2164.astype('uint64')) # shape=(1, 16, 7)
func_804_call = mod.get_global_var('func_804')
func_808_call = mutated_mod.get_global_var('func_808')
const_2173 = relay.const([-4.841027,-1.703496,-4.605324,-0.406315,-5.568189,8.910113,-2.996421,-1.508301,1.401730,0.497194,-0.432160,-7.879938,9.100662,-2.672646,8.375424,6.337358,-8.536422,6.708322,-3.780829,-1.100582,-8.915174,-1.383663,7.135119,1.095716,-5.712454,6.983033,5.619118,3.584584,-6.228091,8.323927,8.784495,-5.383149,-1.659963,-9.563546,9.604753,3.813787,3.714173,4.328403,-2.605159,4.138153,1.623467,1.093866,-2.281659,8.642982,-5.220072,-9.502272,8.899070,-9.594605,9.987500,-9.281730,3.683402,-6.455418,4.922844,9.059333,3.653738,5.191691,4.889256,1.095142,4.816121,8.884707,4.222359,-6.204131,-3.471454,-8.806481,7.034831,-5.688651,-8.010226,8.464088,-2.386221,6.393644,6.832092,-5.995372,-9.982569,5.724694,-9.627125,3.119820,-0.504918,-3.443131,-5.331852,-9.092516,9.449083,1.799081,-0.701426,-0.114403,1.853803,-0.494206,-3.131961,-4.696100,-2.741347,-5.761475,-9.156732,-5.979611,4.370879,3.463112,0.476279,-9.126511,-4.295686,-9.501918,-5.125988,-1.305228,-6.673776,4.528164,1.661077,4.393957,2.539066,4.847248,-3.431777,-1.643706,-9.886767,4.875969,-3.791038,8.219136,1.824034,9.655378,-0.222307,-6.887323,-4.373456,1.197575,7.333139,8.515252,-7.470718,-1.760406,-9.612488,3.539507,-9.221610,-5.318118,-2.584847,5.739106,4.476510,3.499184,-0.030438,-0.646614,2.573428,2.337162,9.562483,6.512108,3.767131,-0.707879,4.533652,-6.109201,-5.217545,-3.859040,-1.677584,6.860034,-9.058557,6.079340,-9.347195,1.516929,2.648601,-5.009982,1.871077,3.534958,7.405565,-3.386114,4.156592,-4.029891,6.760780,-0.548296,-7.164847,0.161145,-7.425384,-6.087491,-7.553233,3.579728,-2.173370,-0.474821,3.715559,-7.528724,3.242652,7.416931,6.634392,4.927051,-4.086156,3.217552,5.712385,9.957142,5.533961,-5.384985,5.303023,-7.741232,6.269850,3.047794,-9.291314,9.085332,-4.285605,-9.839180,-5.491524,-1.280035,1.195552,5.349798,-5.954095,-1.541288,-1.340267,-5.788820,-2.816140,2.716840,5.209614,9.243713,-2.510680,-5.195835,2.526172,7.054713,-7.559923,2.698255,1.481888,-0.383197,5.452803,9.268454,5.811691,-3.898195,-6.051880,4.528147,-2.643676,8.216051,6.077625,-6.627362,-3.605635,-4.960910,5.861414,-3.692431,-1.300136,3.148113,-8.343180,-8.317546,-3.327427,1.966163,-2.939316,-2.700639,5.153439,-0.441985,8.601646,-3.379760,-0.218327,-2.858610,-2.118754,-7.774591,9.985386,-3.649050,-0.675029,4.205625,5.293017,-8.752155,0.368414,9.627749,-7.235386,1.607170,-7.317799,-8.122064,-4.283630,-5.377219,4.830593,-8.963798,-5.287306,-1.263557,4.382557,7.408329,0.630081,-1.949109,2.198994,4.361232,7.970097,6.334004,-2.537782,-5.693765,2.202307,5.630031,6.966922,4.932863,5.905939,8.518584,-0.937434,1.293187,-9.471281,-3.192160,6.785233,0.453051,2.937078,-9.169954,-3.326392,-0.502047,-3.322846,9.755817,8.851500,4.605106,-1.674010,9.590624,-1.626468,-8.168845,7.942260,-5.541417,8.008637,1.752741,-0.396186,-5.962303,6.592735,-8.134802,2.850809,0.640830,8.387321,6.832146,2.509493,-7.495479,7.789367,-1.821054,8.039564,-6.647474,8.149448,7.776638,3.315623,-1.434116,5.570662,-5.743064,-1.704121,1.206287,4.630466,-6.900153,-0.762310,-6.190590,5.359148,-8.972301,9.815380,4.445984,-9.651075,-5.801399,9.420572,-0.095845,-8.547877,5.437614,8.447376,-9.515316,8.857893,0.281579,3.692853,6.161411,3.540146,1.547729,-2.747654,8.846410,-0.697263,2.578832,-3.932693,-8.810549,-9.701253,-4.355754,-0.434768,-4.334545,3.913877,3.732288,5.448092,4.700204,-7.951464,7.520768,-8.163820,-5.213484,8.890299,-7.186008,7.300713,-8.432899,-7.603379,2.131129,8.801430,-4.037393,-6.731784,7.402356,-5.646769,-0.654401,8.256005,-0.565700,-3.345184,-4.169907,-5.493956,4.535705,1.834464,4.983502,-7.185686,3.495361,7.873744,-2.841352,4.265342,8.482351,0.487443,3.094153,-4.242410,-4.895349,-5.207322,-4.677251,0.599663,-6.217218,8.168995,-4.983507,7.455517,4.601753,1.233344,-6.249571,0.485440,-0.365091,3.935902,1.346438,8.493864,-1.043492,5.750027,-4.448713,-2.529007,4.955505,4.778260,-9.097452,9.678264,8.145594,6.846597,-1.370380,1.454325,5.903643,-7.169128,-5.659011,-7.070522,3.828745,2.004150,-8.842889,-8.375206,6.549584,9.154039,-6.732035,0.896194,4.441556,6.830536,8.507728,2.124225,9.287729,-7.085600,1.603841,-5.237638,-3.352434,0.710878,-4.194640,-7.759425,5.628776,7.755670,4.679526,4.336208,3.499679,-6.487362,6.898366,-1.341080,0.325521,5.486868,0.974089,8.159851,8.465703,2.517653,-4.587375,-8.972418,5.785242,-7.284274,-1.600060,-7.213932,-7.699610,1.885592,-7.203736,8.262114,-2.382493,-8.978059,-3.727363,1.052025,-0.212455,6.821859,-5.841666,-8.102472,3.006163,-5.150341,-5.472864,-7.793935,6.202378,4.569859,3.532729,6.208949,9.375648,6.075897,6.197699,3.626510,1.069409,5.794411,-1.529505,-5.501898,-9.853769,-5.460254,7.196573,4.575293,-4.716774,-3.327531,1.748749,8.659330,4.053674,7.234092,6.193812,3.422486,5.471340,-9.134319,-0.304071,-0.186076,-7.417186,-1.017495,1.735275,-8.740128,-7.720016,4.424300,6.951034,-8.559513,9.072946,4.577995,-0.440243,-7.853415,9.669257,-1.750363,6.454279,-9.776111,1.925990,7.272049,6.004985,-2.419355,-9.824302,0.835784,-8.399056,-1.638685,0.506489,-5.317096,-9.862810,-2.778984,2.632322,-6.848689,7.073304,-4.946683,1.627516,8.316364,-5.547358,-7.088628,8.583413,-2.666752,7.008493,7.619216,-5.947512,-6.395185,-4.900481,6.142038,1.974025,-4.599534,-9.524064,6.296437,-3.071660,-5.294318,-4.554794,8.927195,2.225878,0.421546,4.541889,0.395541,-3.157194,-8.619311,-1.145364,4.585613,3.978283,-9.640995,-1.718731,2.664701,-0.188677,6.743132,-7.651041,-3.295963,-9.407355,-9.247973,0.902736,-0.732502,-0.284690,-5.142398,-4.326685,-2.049547,-9.224437,1.902836,3.892086,5.545743,2.173061,-0.713594,-5.329965,3.774489,1.380786,-8.216117,3.828730,-0.660492,0.242860,5.826281,-1.149934,-7.886156,-9.605540,-9.983895,-1.766478,-9.662744,-2.667713,-5.643987,3.462015,-0.937397,5.248027,2.742835,1.893873,-0.529389,7.850996,-9.734061,-6.904614,-6.916484,-5.430162,-0.579709,-6.105279,-7.862285,3.760191,0.103939,-4.082585,5.726614,-6.931967,0.292672,1.402141,9.812734,0.131571,-3.522428,-8.596148,-3.088471,1.320151,1.679375,5.341992,3.525364,-2.417190,-4.060338,-1.997653,6.189335,-1.582645,-9.765585,-5.431027,-2.503953,3.823360,9.771421,6.213456,-3.433966,-6.696118,3.854424,-1.984484,3.500268,0.522384,7.059572,8.998576,3.148889,8.447862,6.975258,1.279012,0.537966,9.435943,-2.959220,6.219680,6.565014,-5.064215,1.150651,0.911345,-8.885725,-0.398805,-4.822877,-5.285473,-9.369446,4.573904,1.558492,4.852837,8.949086,-6.958312,-9.463203,7.447502,1.234723,-9.213903,-2.505240,0.347012,-3.222048,-6.937491,-2.833881,-7.212616,0.950102,-6.902220,-8.198575,7.928766,-6.464071,3.956798,1.837081,7.213822,0.475567,-6.159893,5.401416,-6.771617,7.318393,2.585077,2.715997,-3.209999,6.864833,1.653963,2.483628,-4.956250,-4.560965,-2.227766,-2.202081,3.466926,8.747720,4.364983,3.455577,-9.282951,-9.049905,-9.484200,-5.899507,-8.700346,-9.020069,4.584406,3.193887,2.149907,-8.528706,5.224764,9.894892,-0.609349,-5.801486,-6.685537,3.716784,4.017150,-5.172163,4.157068,-4.622813,-4.589653,9.575327,-6.279033,1.687638,0.680751,8.304869,-1.876532,0.220401,9.375231,-9.879417,4.335483,0.660857,-1.735385,0.200954,-8.239174,2.646207,-0.774478,-0.737196,3.288381,-0.061326,9.268559,-8.299059,6.363372,-4.212949,8.370489,-1.856936,-5.214839,5.926294,7.521370,-3.213746,2.074011,-6.573253,6.750333,-3.093789,4.045345,6.005643,5.276345,-0.472911,9.473469,5.153687,-3.465054,1.578878,5.737765,7.247520,1.093679,-0.618093,0.010349,-0.612428,-4.687883,-5.217377,-6.897676,-4.096070,3.332154,-1.211392,-8.246305,3.228558,6.335241,4.056469,-5.498918,5.155083,8.976878,-2.617270,-2.550450,6.275501,5.861190,-1.418264,1.166626,0.583245,-7.442759,6.025644,-8.496626,3.971247,0.490050,-1.852082,8.769708,-6.048502,-0.814551,4.861755,1.728162,6.612867,-1.238597,-4.904782,-9.751170,-5.555737,8.338938,7.876338,2.900396,6.062460,-3.493296,-2.327239,2.063134,-2.047250,0.050173,7.411964,-8.174275,5.532099,-9.011052,-4.901212,-7.758578,6.711213,-2.754537,8.386854,1.016493,-5.521940,-2.545382,3.605751,5.214686,1.015894,-9.462397,-8.125924,1.539342,8.980947,2.655809,6.223894,0.115316,-1.668593,4.392100,0.059469,-9.878808,-9.522604,-4.985035,3.191305,5.569277,-9.108048,3.657509,-0.123639,-6.513616,-9.788716,1.947989,4.715398,1.033791,-1.246780,3.387749,1.259164,-1.286183,3.082792,-7.193427,-0.384235,3.607575,3.302607,6.849103,-7.951524,8.152872,-4.661589,-0.898198,2.297255,9.853381,-9.644323,3.177827,-7.215063,-8.757102,-7.518637,-5.836965,-4.408003,7.746530,-2.596984,-3.614994,5.405784,-4.493584,-8.544147,1.561124,-2.055986,-7.902694,-4.987628,-0.599118,0.755071,-9.132298,4.634710,-0.594267,-0.834181,1.368746,4.220668,7.933079,-8.909827,-9.941747,-3.505777,-7.678073,-7.335629,-4.371231,2.425767,6.865771,8.584915,-2.162446,1.997489,-2.142043,3.601819,-2.547152,6.280196,5.532173,7.939007,3.392406,2.940451,-8.859675,-5.337629,-1.749619,-2.201836,-4.352834,0.053539,-7.035624,6.274390,3.459295,2.590708,4.419813,0.997683,-2.060226,-9.008907,5.514411,5.302435,2.936072,-5.956726,9.048458,-8.657794,-9.130411,2.083444,-3.977481,0.920566,5.525588,0.590730,-7.304168,0.170244,-9.503872,-1.545262,8.753350,6.813538,6.108732,6.700616,-8.509164,-4.179188,6.713749,-1.570808,-5.913108,3.417699,-0.428413,7.280454,-6.878646,6.572403,-6.063258,-2.073149,5.201654,0.824920,8.878848,-6.369754,-3.930804,-3.374831,-2.401523,4.886366,-8.642010,-8.164268,2.534229,1.409998,-7.793626,-4.329493,-1.058643,-9.124355,0.354181,-3.207808,-8.586812,-8.796847,7.014183,1.647452,2.810647,0.037449,0.365585,-6.780917,2.120876,-7.517063,-5.380768,-7.330802,7.092039,9.589287,-3.080692,8.587670,-0.351724,8.935874,-6.685300,4.374416,6.689202,-8.222549,-4.346765,-8.970083,-8.995985,6.765098,5.688705,-3.637130,-8.810187,8.343179,0.642482,-5.771401,8.757947,-8.129024,-5.293005,4.479136,-3.563867,-2.652262,2.467468,-9.506938,-2.898707,-5.479399,0.058292,-8.777760,-7.116344,1.820201,6.379292,3.210555,4.000032,-4.964630,2.717291,-0.468608,1.111385,-4.845822,3.107689,7.157401,-7.277202,2.953832,-3.099336,-4.539528,-3.105351,-9.832595,8.021461,-0.335380,7.913059,-4.623071,-7.935555,-1.527247,7.139224,-7.673887,6.689544,-0.614582,-7.370445,-7.490947,-7.120698,6.081930,-0.723130,-9.027382,-8.358875,-1.086201,4.300070,-2.424822,8.591964,-2.356752,-3.755209,9.118785,-0.463662,8.990640,-2.641973,6.784761,-7.244108,0.456838,-5.361225,-3.297749,-7.179923,7.118758,1.017384,2.706564,-9.316255,-9.987086,1.279720,3.878250,6.468279,-1.661501,-6.935214,-9.173021,-9.814766,3.743541,3.348347,9.926546,-9.646298,-1.139300,8.860238,1.488298,5.431845,-1.580307,5.496277,-9.562931,-7.205140,-8.113181,-8.526600,-3.439483,-0.451603,1.904215,0.397851,5.824956,6.479235,-4.866043,-1.496035,7.571265,1.776527,-8.292191,6.255097,1.613292,7.019357,-7.805193,4.518151,-1.286777,-9.088871,5.759369,8.353200,5.131821,-7.520128,9.444343,5.155370,-0.057530,-3.121084,-9.599009,5.386021,0.372681,7.131332,-1.731310,-5.120101,1.303217,3.058268,3.892721,1.693661,7.010274,-0.890693,-0.202197,2.362095,-7.668449,3.089623,4.251584,-0.278653,4.270151,-6.333414,-7.765240,6.089702,4.853613,5.567530,1.025734,-9.018851,-6.823955,9.228927,-8.723836,-6.918471,-8.240789,6.985496,-5.438732,-6.609637,-2.486404,-1.080197,-2.995174,-2.975964,-6.318675,-8.386698,-2.630794,-6.229486,2.928024,-5.769465,6.078761,-3.187207,-3.236191,6.944790,2.321466,1.968642,0.839698,7.848714,3.515725,5.889301,1.737175,4.783667,-9.850900,-2.918007,8.596115,-6.751160,9.523790,-4.242699,-1.059093,7.413008,8.624041,0.060424,-3.383458,-5.648728,-3.493342,6.442609,8.576195,-3.679986,-3.214280,0.064755,0.838634,-3.382167,-4.634442,-7.645318,6.142381,0.628790,-1.369623,0.520374,0.504645,-1.206629,3.840705,4.174087,-2.459965,8.498143,-3.481117,-2.704857,-1.038532,2.938125,8.222468,4.752241,3.061902,-9.253797,-8.818319,-9.253193,3.632146,7.520461,-5.969696,-2.125825,-4.642974,7.250775,-8.609916,-3.144969,0.997503,-5.837320,-1.961434,9.523133,-2.670633,2.132482,4.891428,-1.302260,9.707152,1.528982,-1.030736,-6.638485,0.809452,0.796636,-4.374914,-8.630550,7.166352,-8.509396,0.080990,9.221511,6.057838,-7.218388,-7.501952,-7.772128,-9.611208,0.358400,1.801122,-3.081321,-4.131973,-0.168108,7.330275,-1.384028,5.519998,-8.881070,-4.512620,-7.086945,7.714656,-9.737571,4.169336,0.423481,-0.959982,-4.720621,-7.515684,7.660025,8.474022,1.631816,-9.366523,3.178004,9.594326,-0.816019,-5.417189,0.416281,5.636922,4.651005,-4.579190,5.208474,-8.017449,-9.931968,-9.774357,1.986682,-7.249499,-3.534961,-6.175203,-6.408188,-7.185572,3.062753,-3.096348,-8.545063,-4.913691,-1.456488,-1.611322,2.125264,-2.580739,7.804090,4.206929,-5.814086,-9.691470,8.748170,-2.442873,-0.368873,-2.814443,0.021419,-9.131635,6.074036,-1.442506,-7.192077,5.707933,3.688388,9.797638,-4.920709,2.291237,-5.912669,7.168455,-4.521537,-8.885304,-7.093959,-9.615871,6.852887,5.971441,6.188758,-4.987531,-7.863070,1.524845,6.827526,2.583075,-7.144281,-1.318186,-2.823927,-0.627562,-0.566739,1.882845,3.772657,-6.515538,-7.399967,5.068668,6.597881,6.150647,1.511126,7.484505,-5.009844,-5.508936,3.037720,5.597955,9.121961,-6.319635,-5.942232,-4.119020,3.737210,-2.356883,6.098540,7.163498,-4.365571,-1.825485,-8.172585,-4.003598,-5.442904,0.925842,-4.245384,4.059629,-3.335357,8.768921,2.297056,-4.609866,-7.410845,2.528810,9.446068,8.017286,0.039389,2.809121,3.522691,-5.832028,4.241042,-5.539130,9.043722,0.576956,0.958262,-8.244812,-9.313526,-5.818304,-8.011554,-4.407352,-8.435985,2.459312,-9.156145,2.127351,-1.715199,1.140045,4.135520,2.615260,-8.437636,-1.777232,3.814112,-3.888047,-1.056872,1.879586,-7.040736,-6.876934,6.499580,2.473994,-6.721787,2.287182,-9.463540,-3.996422,-9.162762,-3.133377,-0.071917,7.987026,-1.713063,-8.953432,-1.004432,5.531507,2.892388,6.200213,1.350990,-3.303057,-3.222283,-7.736100,9.506093,-2.481994,3.285655,-3.496595,-7.055648,8.538534,2.559517,2.044970,8.411363,8.779499,-8.884716,3.862097,1.978934,3.883431,-0.582761,-2.730075,8.610735,3.596323,-1.147872,-4.575864,4.679144,4.875664,2.554139,-5.959017,4.150814,-9.716567,3.858959,8.268166,5.479887,-2.288458,-4.979489,5.782452,1.305261,-0.864643,-5.904301,-8.441187,1.831593,9.214763,-6.045429,9.910333,4.234366,7.340642,-8.459819,3.505778,-8.141912,6.053791,-9.933897,-2.589813,4.807437,8.784562,8.465033,-1.553588,1.702886,-9.073990,2.083820,5.604180,5.108043,5.776538,3.471063,0.835146,-0.931289,4.830362,-1.993185,0.524295,-9.190788,1.908361,-3.355334,-1.413423,2.577844,-9.017463,1.322674,6.288566,-9.439584,-8.919468,1.794616,3.863216,-1.561103,9.876832,-4.177525,-0.917211,0.214662,1.821943,6.683559,-8.167128,-3.568596,-0.648854,-8.785877,-1.887561,-4.121369,5.524594,-9.578580,-9.269339,7.356330,4.505380,-1.791268,-8.570524,-5.591536,2.912467,-9.876187,-5.163700,-4.116268,-7.831822,0.168177,-0.619906,4.874671,9.978174,-0.684070,-2.680020,7.642944], dtype = "float64")#candidate|2173|(1540,)|const|float64
var_2174 = relay.var("var_2174", dtype = "float64", shape = (1512,))#candidate|2174|(1512,)|var|float64
call_2172 = relay.TupleGetItem(func_804_call(relay.reshape(var_2163.astype('float64'), []), relay.reshape(const_2173.astype('float64'), [10, 14, 11]), relay.reshape(var_2174.astype('float64'), [1512,]), ), 2)
call_2175 = relay.TupleGetItem(func_808_call(relay.reshape(var_2163.astype('float64'), []), relay.reshape(const_2173.astype('float64'), [10, 14, 11]), relay.reshape(var_2174.astype('float64'), [1512,]), ), 2)
func_1137_call = mod.get_global_var('func_1137')
func_1139_call = mutated_mod.get_global_var('func_1139')
call_2176 = relay.TupleGetItem(func_1137_call(relay.reshape(var_2163.astype('uint16'), [])), 0)
call_2177 = relay.TupleGetItem(func_1139_call(relay.reshape(var_2163.astype('uint16'), [])), 0)
uop_2178 = relay.exp(var_2174.astype('float64')) # shape=(1512,)
uop_2183 = relay.atan(uop_2178.astype('float32')) # shape=(1512,)
var_2185 = relay.var("var_2185", dtype = "float32", shape = (1512,))#candidate|2185|(1512,)|var|float32
bop_2186 = relay.less_equal(uop_2183.astype('bool'), relay.reshape(var_2185.astype('bool'), relay.shape_of(uop_2183))) # shape=(1512,)
output = relay.Tuple([bop_2165,call_2172,const_2173,call_2176,bop_2186,])
output2 = relay.Tuple([bop_2165,call_2175,const_2173,call_2177,bop_2186,])
func_2190 = relay.Function([var_2163,var_2164,var_2174,var_2185,], output)
mod['func_2190'] = func_2190
mod = relay.transform.InferType()(mod)
var_2191 = relay.var("var_2191", dtype = "uint64", shape = ())#candidate|2191|()|var|uint64
var_2192 = relay.var("var_2192", dtype = "uint64", shape = (1, 16, 7))#candidate|2192|(1, 16, 7)|var|uint64
var_2193 = relay.var("var_2193", dtype = "float64", shape = (1512,))#candidate|2193|(1512,)|var|float64
var_2194 = relay.var("var_2194", dtype = "float32", shape = (1512,))#candidate|2194|(1512,)|var|float32
output = func_2190(var_2191,var_2192,var_2193,var_2194,)
func_2195 = relay.Function([var_2191,var_2192,var_2193,var_2194,], output)
mutated_mod['func_2195'] = func_2195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_2203 = func_2154_call()
call_2204 = func_2154_call()
uop_2209 = relay.atan(call_2203.astype('float32')) # shape=(12, 1, 7)
uop_2211 = relay.atan(call_2204.astype('float32')) # shape=(12, 1, 7)
output = relay.Tuple([uop_2209,])
output2 = relay.Tuple([uop_2211,])
func_2212 = relay.Function([], output)
mod['func_2212'] = func_2212
mod = relay.transform.InferType()(mod)
output = func_2212()
func_2213 = relay.Function([], output)
mutated_mod['func_2213'] = func_2213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2212_call = mod.get_global_var('func_2212')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_2220 = relay.TupleGetItem(func_2212_call(), 0)
call_2221 = relay.TupleGetItem(func_2213_call(), 0)
output = relay.Tuple([call_2220,])
output2 = relay.Tuple([call_2221,])
func_2228 = relay.Function([], output)
mod['func_2228'] = func_2228
mod = relay.transform.InferType()(mod)
mutated_mod['func_2228'] = func_2228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2228_call = mutated_mod.get_global_var('func_2228')
call_2229 = func_2228_call()
output = call_2229
func_2230 = relay.Function([], output)
mutated_mod['func_2230'] = func_2230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_2233 = func_2154_call()
call_2234 = func_2154_call()
output = call_2233
output2 = call_2234
func_2251 = relay.Function([], output)
mod['func_2251'] = func_2251
mod = relay.transform.InferType()(mod)
output = func_2251()
func_2252 = relay.Function([], output)
mutated_mod['func_2252'] = func_2252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2212_call = mod.get_global_var('func_2212')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_2291 = relay.TupleGetItem(func_2212_call(), 0)
call_2292 = relay.TupleGetItem(func_2213_call(), 0)
func_617_call = mod.get_global_var('func_617')
func_620_call = mutated_mod.get_global_var('func_620')
const_2299 = relay.const([5.628405,1.287123,-2.979182,-5.454202,-0.155129,6.067160,-3.251688,-1.939658,-9.713306,-8.511720,-7.355790,1.465600,5.423734,-6.051206,7.196183,-1.152752,-2.463562,-8.813355,-9.099934,1.275740,-1.710628,3.497569,3.290589,5.364762,3.183819,-2.936703,2.056431,7.546684,2.603852,4.557706,-7.093879,8.066139,9.059482,-2.478514,-9.617721,-8.002482,-2.280415,6.527913,3.775073,2.713792,-9.374399,-6.604020,-4.718760,-5.073906,-7.762537,-3.687759,8.709871,3.052005,-4.017595,-8.169988,3.136365,9.410028,2.431713,8.037454,1.241580,3.158079,-3.310873,6.019742,4.123972,4.162571,4.988640,-2.157390,4.897598,3.019676,9.599138,7.137375,-0.731952,-8.690247,1.187044,7.356841,6.093649,4.885425,-1.097959,-4.536505,-4.347885,2.910951,1.809447,3.391350,-9.858083,-2.493565,-4.541772,-2.824560,5.497045,-4.055801,9.974959,0.436514,-9.994874,-6.751937,-5.858529,-7.003365,-1.293627,-3.165050,-1.518671,9.325037,9.741838,-6.512823,0.090371,-0.648485,-1.839033,7.348358,-3.316648,-7.123982,3.395200,-8.080913,5.383212,5.829664,-9.711435,5.908676,2.726414,9.990425,8.090152,-9.727952,5.596994,8.955629,-5.501139,7.251280,9.092891,5.476490,-1.571652,-1.622861,8.584400,-3.342317,-9.741651,-8.928848,-6.062420,-2.647231,4.447292,-2.387828,1.851614,-3.554875,-8.188444,3.619067,5.702005,5.695001,-0.070173,6.588979,3.587465,5.043458,-6.899525,5.404638,-9.917074,-2.902904,-6.537659,-3.055967,-1.834347,6.645054,-2.047816,-0.039488,-6.840210,8.036462,-8.202637,-8.141854,-3.716528,0.240136,3.747602,6.515709,-1.417298,5.692911,-4.156825,-1.162943,0.739236,-6.531836,-9.798926,2.820064,-3.352242,3.317401,-3.159254,-6.977920,-7.665970,0.940180,-2.048611,8.256895,-1.152822,5.145519,-5.062056,2.423941,-5.523177,4.828596,-4.956384,1.132259,6.077608,5.371509,-3.722589,1.332309,1.535167,-6.105745,2.775015,-0.210791,-1.929085,1.942540,-4.630113,-4.868080,-3.753279,7.555258,0.454974,0.362846,-8.503346,-7.383619,-7.459283,4.901474,-7.266860,9.363982,9.482644,1.241685,5.429910,-1.864054,2.211541,-2.844454,-3.426511,-5.179326,-7.315409,-9.652550,6.189461,3.643304,-0.908068,3.986957,-4.459475,1.977660,0.420552,-2.549008,8.109358,-9.970896,7.847012,-0.228281,-9.112894,4.631386,-9.477236,5.528214,-0.975820,9.191770,2.016242,4.649953,5.127169,0.458604,5.121802,3.808178,-9.914534,5.877479,6.823477,4.611920,9.388755,-6.047774,8.663447,4.571507,3.568956,-7.738042,9.328778,-3.949025,-6.126800,0.428560,8.162660,-6.024707,-7.143550,-6.037286,1.687301,-3.563509,-3.266906,-9.100037,-5.178038,-6.459430,-0.761440,6.968816,-5.269951,-9.591602,7.069543,1.660266,7.651653,4.187542,1.455983,6.535445,5.612176,6.511581,-7.095725,1.054180,0.403999,-4.395256,5.997081,-5.804147,-3.529203,-0.139948,-0.866239,-7.064278,-9.656263,-4.168935,2.287119,-5.323391,0.880343,3.209968,-5.766371,-3.656173,-8.801137,4.507709,-2.197255,7.892639,4.952299,5.872104,0.483575,8.377237,5.356654,-0.611124,7.889920,4.516085,-9.137336,-3.102283,-6.151548,6.583685,-5.698320,-4.301826,-7.650867,2.853832,8.736022,4.356522,-7.067538,-8.709788,-6.071246,2.873708,-1.561257,-6.691364,1.447975,9.275900,-0.277959,-9.610357,7.842980,5.321206,-3.968661,4.256469,7.485534,2.715393,8.573643,6.106933,-1.436043,3.202727,-0.631813,6.823745,4.124936,6.449384,9.928083,-9.357847,-6.791162,-3.077866,-8.103374,-4.662881,6.188689,2.362057,-7.550248,-1.721693,2.091454,7.810678,-1.835615,0.144855,6.583931,1.268368,-3.601189,5.340443,9.435905,-7.383119,-9.762754,-8.498728,-7.233897,-6.296037,-5.747589,1.539265,5.541588,7.394665,7.382432,2.879397,9.426957,-0.020432,-1.542382,-8.441758,9.729612,6.805184,-0.091239,0.214097,4.250536,8.763260,3.676545,-6.681815,1.539757,-2.398660,-2.522676,2.826862,-4.129169,-7.451833,3.601996,-8.327015,7.807422,-0.128568,3.578495,-1.828327,-6.073936,5.282879,-8.775040,-3.573868,4.724875,-1.564324,-4.218946,-2.754578,7.935735,2.553781,9.308024,-6.098361,1.952341,-4.826801,-0.399488,7.178234,-9.760662,-0.857597,-0.372798,-0.844385,9.687996,-2.453804,-2.981490,-1.755342,0.410054,1.163757,-9.262474,8.523673,-3.008959,-0.912166,-9.398136,3.111891,-4.212331,9.322055,-5.580237,6.064628,-5.063470,0.248649,-3.160466,2.842904,1.923039,-2.802834,-4.571746,2.459684,-6.747094,4.118495,-9.335080,4.257273,2.023417,9.719290,4.104610,1.119373,-2.359909,-3.826632,0.112417,-3.875687,-4.508723,-9.491718,-0.248541,-4.294645,2.055505,9.101503,-3.198880,3.174383,6.601421,-9.826082,1.123332,7.111195,-2.236244,-5.349980,3.338034,9.255226,6.682414,-5.026296,9.927187,-8.217183,-5.824574,-5.722730,8.867699,-7.971616,8.260273,9.227065,8.361263,-8.176282,-0.365169,9.521852,-3.484773,-0.563193,-7.140294,1.439380,1.616009,-2.843254,-7.768055,-5.072271,-9.096036,-4.398716,4.272430,-6.084664,-2.805633,5.796560,4.991256,-0.722164,7.265064,-1.854211,6.845911,8.000539,3.682274,2.782451,5.141584,7.934460,-6.919525,3.876674,1.334169,-3.026164,-0.755169,5.711732,-1.856419,9.249284,-2.618088,1.291415,-1.234566,-9.041712,9.535094,9.378886,8.091491,-2.171822,-7.698561,-8.522896,-0.313681,-7.506645,-9.402020,-9.293924,4.425103,-0.293299,6.677489,-0.797499,-3.887752,-4.630331,-2.701710,-2.061927,-1.458492,9.200823,-8.239959,0.326504,7.580780,-9.560265,7.677490,-8.190348,-5.518792,-9.879265,3.350961,2.019209,3.660762,5.256779,5.059429,4.189243,-8.354153,1.816452,-2.588344,3.380150,-6.637258,2.007912,2.923700,-9.098041,-1.445092,9.144071,9.524926,-9.595389,-7.290145,-2.232736,1.718180,-9.874611,2.716025,8.221707,-7.567779,5.240467,-4.373669,-6.011255,-8.934809,5.699338,9.151742,-7.787436,-7.149542,0.964083,-3.815920,-8.650877,2.158412,-1.865485,-9.654377,3.914693,-4.748563,7.193752,1.868342,-8.458345,8.370819,4.175234,1.755589,7.803070,-6.117772,-1.174610,2.672390,-9.534575,7.358505,8.165098,-1.321681,-4.205280,3.341604,8.087452,7.548772,-0.064682,-7.086486,0.415265,-1.940804,9.362867,5.603504,8.933437,-0.534034,-3.234971,-1.856091,-9.950040,-3.170782,-0.228344,-8.353140,-0.846444,1.036385,-5.562457,-9.154276,0.519125,1.386510,2.089091,5.652231,1.552161,2.734496,1.456408,4.478409,-7.505022,0.680626,2.073983,6.067177,5.136377,-8.814420,-1.770067,-1.953406,0.987992,-5.796353,-7.193146,-5.212051,5.421587,2.147758,7.052533,-3.298422,-1.190980,-6.426106,-2.117325,-4.560463,6.272315,4.979138,0.568309,6.740830,5.657469,-3.317905,9.704626,3.189938,-2.922580,-7.516511,6.816746,3.887490,-1.777864,6.096163,9.919614,-8.306705,6.673393,-7.479509,8.206087,4.180809,1.844674,6.040254,-2.955775,-4.789363,4.586620,7.560475,8.711791,9.199823,-9.105673,-9.341723,-9.107771,-3.902949,7.748866,-6.205576,9.540738,3.487299,3.455355,6.411923,-5.655811,-6.884829,-5.631452,-9.963766,2.142568,0.201067,4.957900,1.646689,5.440422,6.217606,7.989804,5.853865,4.569841,3.523759,4.786908,4.465403,-1.272419,-6.732391,7.523461,7.058681,-3.058619,-2.738215,-4.078960,1.505349,-9.367919,-7.033626,-4.325287,-6.497997,0.792440,7.269740,-1.335964,-7.401313,-7.571856,-1.692334,1.603379,-2.713548,-3.182380,2.011102,5.641411,-9.274824,9.676379,3.701471,0.979382,-5.329444,6.644608,1.495737,-5.835097,1.601074,-0.135241,-8.017736,0.750560,2.117679,7.335673,-3.235431,7.668933,-7.131099,-6.629894,7.227112,9.256519,-4.080775,7.468883,4.356796,6.318285,-3.878604,-4.052621,5.881091,-3.127156,4.778779,-3.855947,-2.416192,0.274699,-7.758779,-3.741470,2.650713,2.531881,-8.358223,2.364686,-6.229861,-7.802783,0.849224,3.159442,-0.208289,7.264014,-0.401604,-2.101578,-8.005847,9.528417,7.011936,-4.932998,-1.844133,-0.599150,-4.766715,-9.492178,-4.733048,5.532751,2.003360,-7.483481,-0.652735,7.541655,5.220225,1.921333,0.111881,1.071173,-8.093044,3.602873,5.197218,-8.053636,-9.094015,3.406904,1.696086,-0.926550,5.194359,1.782975,-9.565254,-7.618969,-5.607624,1.027003,0.670051,-3.278424,-2.129007,-3.800440,4.188035,5.928041,1.804752,-7.374295,-4.324870,1.012707,0.337915,9.696656,0.017268,-3.825384,-0.916567,-5.409528,-7.833435,9.569984,-9.407985,-9.199724,-6.162840,3.780655,-6.821202,9.770031,-7.571352,0.657016,1.360256,-4.216401,-9.302387,-7.186184,-9.752339,-4.919686,7.139773,-5.201006,6.552844,8.761043,-0.639108,3.651001,-7.115592,4.558102,2.749847,-7.055107,-8.150291,-6.310905,2.592919,4.233371,4.481673,-9.985407,6.772875,-2.531229,-6.278621,3.591028,6.063635,0.464819,5.982188,-9.448158,5.709074,1.566609,8.172423,7.404388,-7.017458,8.848893,-7.672348,-1.097102,-7.876962,1.212914,-9.755560,8.277280,1.768459,2.792311,-7.934698,-4.435577,-9.728086,7.359948,4.907118,7.205168,6.829885,7.295296,-0.929994,4.784449,-5.914017,8.646070,5.942039,-2.048347,-4.598456,4.424827,-4.223395,-7.021320,3.544058,-3.557024,-8.009207,-4.088100,-2.277256,-6.488942,9.464255,1.637780,-2.850011,-8.284573,-0.123757,-4.028502,-0.554315,6.370919,1.636445,-8.980118,8.012207,5.103301,-0.251215,4.665088,3.929945,3.037480,6.134202,2.380222,-9.707506,-6.907075,-7.426554,8.541329,-3.552290,7.085603,-5.999753,2.119602,8.271938,-3.908170,-5.535765,-1.382311,1.073782,8.837356,5.382653,-0.561958,-6.406396,-8.085617,2.235558,-2.764403,-4.327010,-0.473954,0.460162,-7.534901,-1.119767,-0.071300,-0.453582,6.326802,-0.888674,-9.646675,5.312823,9.893702,6.675859,-2.629218,9.752823,6.503478,9.424964,2.504252,4.310883,3.229157,-5.208252,-1.902469,-7.387526,-1.462871,-3.112114,-7.093207,1.261846,-8.343537,4.837756,0.351711,9.609261,-7.247947,-4.178153,2.429095,0.645156,-3.319404,-4.698790,-1.412589,-1.778611,7.026485,-0.533119,-8.464178,-4.306943,-7.759951,5.017728,-9.678939,-1.448195,5.622665,-9.364056,-8.853656,3.286483,8.863645,-0.411913,0.095859,-7.775128,9.210977,-8.601753,-4.471127,-9.068979,5.869206,7.156473,-0.554112,-3.907956,-4.629131,-1.853364,9.834057,1.824254,6.878249,-5.167733,-9.147079,-8.438060,6.605680,9.643206,3.602608,9.474439,-8.549294,-5.112433,-2.881059,-5.737382,-5.392009,-1.729079,9.169632,-5.190581,4.890478,6.613272,-5.120516,0.741877,-1.651913,2.213529,3.994694,-7.332092,0.858823,-3.192105,-8.098167,7.941581,-9.327479,-7.860541,8.908171,-5.537106,8.529011,1.840856,7.325546,-3.899261,3.391943,7.650944,-0.752746,-6.791227,2.112163,4.442792,-6.348164,-3.578783,-9.391394,-0.337929,6.710896,-8.687513,-6.087062,-2.452313,7.325112,8.788532,4.123317,1.727368,8.684848,6.414151,-6.797555,-2.784651,6.319951,5.463756,4.426937,-2.384448,1.525135,9.394444,-5.563962,2.457358,-3.439339,-3.911337,-2.754210,6.072459,-0.075870,-4.807762,-7.228705,6.833713,8.612215,9.562610,-1.828249,4.023962,7.311331,1.249454,0.508381,7.442925,6.300541,2.263525,2.872516,8.699054,2.814525,-2.415573,-2.527685,-8.907037,4.883544,-9.175180,1.975998,6.816194,7.128977,-7.050564,6.563537,-4.101037,4.892489,-3.554480,2.331567,-8.985424,4.636303,-1.898312,-6.023289,0.306799,-1.760039,2.965867,-7.841960,-4.785452,4.950886,-1.031638,-4.892474,-1.164146,-6.617735,-1.432709,-4.479369,-7.493899,-6.487015,-7.677187,3.228906,-3.253643,2.271920,6.102138,-1.804270,9.600720,-2.673897,-4.067254,5.123867,6.939244,-8.800143,1.299314,-6.015910,-9.920316,-3.993027,-8.327167,2.873751,3.916028,-1.992899,-9.837283,6.327318,8.884930,5.757836,-8.208527,-0.453148,-3.279014,-4.176075,0.390637,3.320917,4.012101,-6.033416,-4.762233,-0.211781,8.525641,-0.372455,6.002756,6.194372,-0.979881,-3.619187,9.629040,-0.867386,8.745872,3.001737,2.936761,2.451133,-7.992864,-2.085436,4.734463,7.071633,-7.762178,-2.184745,8.898854,-9.982414,-8.786060,-3.385804,4.284037,0.989493,5.594359,6.308868,8.598582,1.666465,9.484923,-3.167833,-2.447191,3.555530,-8.808764,-9.120959,1.684870,9.933388,-3.513387,-9.888186,-2.356126,-6.748196,-2.665010,-7.572383,-5.124363,-5.631853,-9.260641,-4.200893,-6.734167,4.228909,6.375966,-7.490124,-0.646262,-1.250222,3.552993,-5.438408,-2.434891,-5.722732,-6.328183,9.955079,-7.709552,-6.089051,-7.422116,-3.072387,-5.540122,0.127779,6.473051,8.813635,0.793511,-4.236438,-3.363780,-3.433779,-3.517430,6.346216,-7.801942,9.221453,-5.124038,3.871752,8.659129,8.543350,1.577965,6.363942,-4.892405,-7.568902,2.142461,8.324632,0.706818,-0.480340,-4.059901,-1.579310,-7.683844,9.540859,-3.240684,-5.508848,-3.363296,6.372004,-2.440342,5.504245,7.368364,3.880156,-4.052971,-4.474011,-1.228229,9.421999,5.680783,3.779404,-9.162077,-5.693567,8.446608,-6.227567,9.341172,0.416418,-8.320818,-0.971767,-4.142795,-4.884672,-2.071787,-1.628300,-0.189976,9.289210,-2.543230,9.020985,-4.003970,8.604266,-7.316656,1.399260,6.941050,-7.784113,6.772891,-7.336197,-5.240645,9.680529,3.597178,6.402705,7.191193,2.049942,-0.454445,-5.360784,4.831902,-1.314739,8.957412,7.281821,6.993514,8.830490,-3.982955,-2.159411,-6.003286,-8.471241,-6.489180,2.597597,-0.320691,5.942158,-1.769553,7.405308,3.361056,0.010441,-7.239943,6.837869,-6.769949,-3.233718,-4.167412,0.289154,-5.657448,5.480072,-3.146634,0.850852,3.989490,8.324226,-8.743665,2.625516,-5.913744,4.306844,7.215024,-3.375010,8.203530,8.585870,-8.786398,-2.383428,-2.024678,4.095342,1.741200,7.641136,0.932846,-3.172615,-2.442390,2.393857,-2.925298,0.677560,7.503733,-3.361355,-8.667782,1.016281,-0.651774,-8.940417,7.439361,4.985948,-6.781472,1.617967,6.266269,8.549422,-0.345757,4.793330,9.773104,-2.915550,-9.947716,0.248429,-4.443941,3.707964,8.534383,0.808733,5.085219,4.562672,-0.519774,2.008411,-3.371877,2.011441,1.729781,9.675511,9.096607,-8.114606,-3.441678,-1.669748,-6.047592,-6.343888,2.711853,-8.896090,-8.411476,-4.120617,-1.722703,1.515661,9.715926,6.825393,0.032850,0.752520,3.865014,-1.489621,-6.450193,-0.682018,5.262919,-8.834100,6.117049,3.645815,-9.406562,-8.115372,-2.562900,2.672064,-0.355568,-6.760478,1.631837,-3.851815,5.218283,7.829262,3.942711,-1.849706,-1.152449,-6.173309,8.212634,9.179028,3.950394,4.147868,8.524008,9.262235,1.296986,6.987720,-0.335725,8.508687,0.902356,2.160794,0.233671,6.794721,-9.368366,3.942622,7.787187,3.744990,-3.088931,-3.545423,7.409823,2.882832,-5.884087,6.428196,-1.259463,-2.847535,9.030211,-8.407612,-8.910134,-5.676096,8.860034,-8.454933,9.744444,-1.889425,-3.668854,4.223257,-4.312099,0.663175,-7.381018,5.574502,9.866392,-5.289461,9.530870,1.087021,-3.943659,-0.981370,1.247587,-6.355342,-2.921579,-1.576624,-5.344992,-2.879015,-9.143645,3.937851,3.039153,6.581965,-6.165590,6.527995,7.337744,1.770712,8.150110,3.207754,9.820697,2.330194,-9.465956,-7.753673,6.787862,-8.126553,-0.048261,-8.880475,-6.309936,1.944745,7.148899,1.897324,0.781771,-3.245078,-8.983735,-7.217902,-0.702925,-2.320284,9.784783,7.017447,4.694761,3.019664,3.014159,2.366064,7.754969,-7.749297,-0.455619,5.108908,4.044453,-4.438956,-2.015686,3.524799,-8.541206,7.967592,-3.121323,-1.172236,-2.998066,-1.609681,-9.376020,-5.201865,-9.751146,-6.518490,-4.291879,-7.528253], dtype = "float64")#candidate|2299|(1512,)|const|float64
call_2298 = relay.TupleGetItem(func_617_call(relay.reshape(const_2299.astype('float64'), [12, 14, 9])), 1)
call_2300 = relay.TupleGetItem(func_620_call(relay.reshape(const_2299.astype('float64'), [12, 14, 9])), 1)
output = relay.Tuple([call_2291,call_2298,const_2299,])
output2 = relay.Tuple([call_2292,call_2300,const_2299,])
func_2302 = relay.Function([], output)
mod['func_2302'] = func_2302
mod = relay.transform.InferType()(mod)
mutated_mod['func_2302'] = func_2302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2302_call = mutated_mod.get_global_var('func_2302')
call_2303 = func_2302_call()
output = call_2303
func_2304 = relay.Function([], output)
mutated_mod['func_2304'] = func_2304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2309 = relay.var("var_2309", dtype = "uint64", shape = (6, 10, 5))#candidate|2309|(6, 10, 5)|var|uint64
const_2310 = relay.const([[[-4,8,-7,10,6],[-1,8,4,-7,-5],[-8,-4,10,7,7],[-5,-6,2,5,-7],[-9,-3,6,-9,10],[10,9,-6,-9,2],[-2,-10,7,4,-4],[-5,9,10,-5,-10],[2,-5,-5,9,-6],[3,-7,8,3,-6]],[[-3,9,-8,1,7],[10,-1,-2,8,2],[4,1,8,-5,-1],[9,-1,8,-7,-3],[-10,4,10,10,1],[9,9,7,9,-8],[3,6,6,-3,5],[-5,-1,-8,9,6],[-10,-3,6,6,-4],[-10,2,10,4,-10]],[[9,5,6,-10,1],[-3,4,-2,10,10],[4,8,7,-3,1],[-9,-9,-2,-10,-2],[-2,-4,2,9,-5],[3,-10,-5,-1,6],[-4,-4,-1,-9,-1],[-4,5,1,5,1],[-2,9,-7,9,-7],[-10,1,-5,2,-5]],[[-5,8,-4,-9,-3],[-9,7,7,6,-2],[10,-5,7,3,-4],[-2,5,10,1,10],[-4,-8,-1,-2,8],[2,-7,-9,7,-6],[10,1,-10,-9,-4],[4,2,-6,-7,-1],[-4,5,10,-10,5],[7,3,-5,10,-1]],[[-2,2,-9,6,9],[-2,-2,8,10,8],[-1,-5,4,-7,-1],[-1,-5,9,-3,1],[4,-5,-10,-8,-1],[10,-3,8,2,-6],[-4,-7,1,-5,3],[-4,-9,3,4,-2],[10,-10,-4,2,4],[10,-4,10,-5,10]],[[9,8,5,-9,-5],[-7,-2,7,5,-5],[-7,8,-4,-7,-3],[8,10,-2,-9,5],[2,6,9,4,-3],[5,-2,1,3,-6],[4,-10,1,-9,-3],[-2,-8,-2,4,-5],[3,-8,4,2,7],[4,3,6,-6,-4]]], dtype = "uint64")#candidate|2310|(6, 10, 5)|const|uint64
bop_2311 = relay.left_shift(var_2309.astype('uint64'), relay.reshape(const_2310.astype('uint64'), relay.shape_of(var_2309))) # shape=(6, 10, 5)
output = relay.Tuple([bop_2311,])
output2 = relay.Tuple([bop_2311,])
func_2325 = relay.Function([var_2309,], output)
mod['func_2325'] = func_2325
mod = relay.transform.InferType()(mod)
var_2326 = relay.var("var_2326", dtype = "uint64", shape = (6, 10, 5))#candidate|2326|(6, 10, 5)|var|uint64
output = func_2325(var_2326)
func_2327 = relay.Function([var_2326], output)
mutated_mod['func_2327'] = func_2327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2302_call = mod.get_global_var('func_2302')
func_2304_call = mutated_mod.get_global_var('func_2304')
call_2334 = relay.TupleGetItem(func_2302_call(), 1)
call_2335 = relay.TupleGetItem(func_2304_call(), 1)
output = relay.Tuple([call_2334,])
output2 = relay.Tuple([call_2335,])
func_2345 = relay.Function([], output)
mod['func_2345'] = func_2345
mod = relay.transform.InferType()(mod)
mutated_mod['func_2345'] = func_2345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mutated_mod.get_global_var('func_2345')
call_2346 = func_2345_call()
output = call_2346
func_2347 = relay.Function([], output)
mutated_mod['func_2347'] = func_2347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_2350 = func_2154_call()
call_2351 = func_2154_call()
output = relay.Tuple([call_2350,])
output2 = relay.Tuple([call_2351,])
func_2369 = relay.Function([], output)
mod['func_2369'] = func_2369
mod = relay.transform.InferType()(mod)
output = func_2369()
func_2370 = relay.Function([], output)
mutated_mod['func_2370'] = func_2370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_2404 = func_2154_call()
call_2405 = func_2154_call()
func_2369_call = mod.get_global_var('func_2369')
func_2370_call = mutated_mod.get_global_var('func_2370')
call_2410 = relay.TupleGetItem(func_2369_call(), 0)
call_2411 = relay.TupleGetItem(func_2370_call(), 0)
bop_2418 = relay.floor_mod(call_2410.astype('float32'), relay.reshape(call_2404.astype('float32'), relay.shape_of(call_2410))) # shape=(12, 1, 7)
bop_2421 = relay.floor_mod(call_2411.astype('float32'), relay.reshape(call_2405.astype('float32'), relay.shape_of(call_2411))) # shape=(12, 1, 7)
var_2431 = relay.var("var_2431", dtype = "float32", shape = (12, 6, 7))#candidate|2431|(12, 6, 7)|var|float32
bop_2432 = relay.logical_and(bop_2418.astype('bool'), var_2431.astype('bool')) # shape=(12, 6, 7)
bop_2435 = relay.logical_and(bop_2421.astype('bool'), var_2431.astype('bool')) # shape=(12, 6, 7)
uop_2460 = relay.log2(call_2410.astype('float32')) # shape=(12, 1, 7)
uop_2462 = relay.log2(call_2411.astype('float32')) # shape=(12, 1, 7)
func_1137_call = mod.get_global_var('func_1137')
func_1139_call = mutated_mod.get_global_var('func_1139')
const_2464 = relay.const(9, dtype = "uint16")#candidate|2464|()|const|uint16
call_2463 = relay.TupleGetItem(func_1137_call(relay.reshape(const_2464.astype('uint16'), [])), 0)
call_2465 = relay.TupleGetItem(func_1139_call(relay.reshape(const_2464.astype('uint16'), [])), 0)
uop_2474 = relay.atanh(uop_2460.astype('float64')) # shape=(12, 1, 7)
uop_2476 = relay.atanh(uop_2462.astype('float64')) # shape=(12, 1, 7)
uop_2481 = relay.acosh(uop_2474.astype('float32')) # shape=(12, 1, 7)
uop_2483 = relay.acosh(uop_2476.astype('float32')) # shape=(12, 1, 7)
output = relay.Tuple([bop_2432,call_2463,const_2464,uop_2481,])
output2 = relay.Tuple([bop_2435,call_2465,const_2464,uop_2483,])
func_2486 = relay.Function([var_2431,], output)
mod['func_2486'] = func_2486
mod = relay.transform.InferType()(mod)
var_2487 = relay.var("var_2487", dtype = "float32", shape = (12, 6, 7))#candidate|2487|(12, 6, 7)|var|float32
output = func_2486(var_2487)
func_2488 = relay.Function([var_2487], output)
mutated_mod['func_2488'] = func_2488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2251_call = mod.get_global_var('func_2251')
func_2252_call = mutated_mod.get_global_var('func_2252')
call_2607 = func_2251_call()
call_2608 = func_2251_call()
func_1664_call = mod.get_global_var('func_1664')
func_1667_call = mutated_mod.get_global_var('func_1667')
const_2610 = relay.const([9,4,-6,-6,8,-9,-1,-3,6,-8,2,8,-9,7,-9,5,-10,10,9,-9,9,-1,10,-5,-3,9,4,-1,-4,3,1,-9,-8,-9,4,4,-7,-6,-1,5,-5,1,-4,4,-1,1,-6,2,-1,3,-10,-1,-3,6,-7,8,-7,-5,9,9,8,-1,10,10,-6,-9,3,-3,-4,-10,2,-6,7,10,-3,-8,-8,-7,4,-2,-2,9,10,2,3,-6,10,-3,-3,6,1,7,7,-10,1,1,4,1,-2,-7,-4,9,2,2,-5,1,4,-5,-2,-2,-10,10,-5,-5,3,3,4,-1,5,4,-4,6,-5,-1,-10,1,9,4,-2,4,-3,-3,2,5,-1,-7,-6,-5,6,9,2,-5,-3,7,-10,-3,10,1,-1,-9,-7,-9,9,-5,3,-2,6,-8,-8,6,-7,-2,4,9,2,-10,-4,2,-5,10,-1,-3,-2,7,5,10,2,-1,9,-4,7,10,4,-7,-8,-5,1,-9,-8,-5,-10,6,-8,10,6,8,9,5,1,2,-10,10,4,6,-8,6,-7,1,7,5,-5,-7,1,10,3,-1,9,-6,-3,-7,-3,-10,-5,-6,-10,6,-3,2,4,-8,-3,1,2,-7,2,-7,-8,5,-8,8,3,-5,-6,4,8,8,-1,-3,8,2,-7,7,8,1,-7,1,-2,8,-3,9,-2,-3,7,8,10,-7,10,2,-8,-1,-3,-4,-1,2,-5,-5,7,-2,6,10,-1,-2,-1,-9,9,-3,-2,-7,9,7,2,3,-10,4,6,-1,-2,-9,7,-1,6,9,9,1,7,4,-9,-9,-1,-4,-8,5,8,-3,10,3,8,-5,10,-6,3,-6,-6,-3,9,-7,2,9,8,7,5,-5,4,1,8,-10,-9,5,-1,-6,4,7,7,-8,-9,-2,-6,9,-9,-3,10,-7,-10,-4,-9,-1,-4,-2,6,4,6,-2,-5,4,3,-8,-1,-10,5,1,-4,8,-3,-7,-10,-6,8,-9,-9,4,10,-5,-5,5,-8,-6,1,2,-4,-4,-1,1,8,-2,-4,-1,8,-9,-10,5,-1,4,-6,-5,-7,-7,1,10,1,-8,-8,-1,-6,3,3,6,10,-5,6,9,2,2,3,3,-3,8,2,2,-8,-4,3,-6,-9,1,4,1,-3,7,4,-9,3,-10,7,-10,5,7,-3,-2,5,-10,-3,-2,3,-4,3,5,1,8,-5,4,-4,9,3,10,5,6,2,-4,-9,-3,2,-8,-1,-4,7,-6,8,-8,9,8,1,-3,1,-7,6,5,-8,-4,1,5,3,-1,-9,1,-9,3,2,-3,1,-5,2,8,5,8,9,6,-9,4,-5,5,5,-4,-3,-10,-6,3,5,7,5,-7,-9,6,-9,-5,5,-8,9,7,-8,-6,2,-2,3,8,-5,10,-8,-1,9,1,9,6,3,9,10,8,5,2,1,5,7,-9,4,-1,-9,8,-2,-3,-6,6,8,-2,6,-2,-6,-3,4,9,4,-10,-2,1,1,-9,-6,6,1,-6,4,3,5,-4,-10,7,-4,-8,-5,10,-5,-6,-6,-5,-2,5,1,7,-6,6,-5,3,-10,-4,2,-5,-7,-7,3,1,7,3,-7,-5,-1,-10,-4,6,4,10,-5,10,-6,-6,-1,6,4,5,10,-4,-10,7,-7,-9,4,6,6,3,5], dtype = "int32")#candidate|2610|(637,)|const|int32
call_2609 = relay.TupleGetItem(func_1664_call(relay.reshape(const_2610.astype('int32'), [7, 13, 7]), relay.reshape(const_2610.astype('int32'), [7, 13, 7]), ), 1)
call_2611 = relay.TupleGetItem(func_1667_call(relay.reshape(const_2610.astype('int32'), [7, 13, 7]), relay.reshape(const_2610.astype('int32'), [7, 13, 7]), ), 1)
func_1474_call = mod.get_global_var('func_1474')
func_1477_call = mutated_mod.get_global_var('func_1477')
const_2618 = relay.const([[-3],[5],[-6],[-1],[-9],[-6],[-1],[5],[-4],[-1],[10],[-4],[3],[-5],[-1],[2],[-10],[10],[-6],[-5],[-7],[8],[-6],[7],[-7],[10],[10],[-8],[-1],[8],[3],[-10],[7],[-9],[2],[-9],[-6],[9],[1],[-3],[-6],[-6],[5],[9],[-8],[-2],[7],[6],[-1],[-8],[-8],[1],[4],[-8],[-8],[3],[-4],[-10],[4],[8],[6],[-5],[-3],[8],[5],[-8],[3],[-8],[1],[-1],[-7],[-5],[-5],[1],[-4],[-1],[9],[7],[8],[-6],[1],[7],[3],[-2],[1],[3],[10],[-10],[-3],[-4],[8],[-9],[-5],[6],[4],[-6],[6],[-1],[-1],[3],[-8],[4],[4],[-5],[-3],[-6],[-6],[7],[-3],[-5],[-7],[-2],[-6],[-9],[-5],[3],[-1],[-3],[8],[-4],[7],[-1],[6],[4],[-1],[4],[10],[10],[-8],[5],[3],[9],[4],[9],[-2],[-3],[4],[3],[2],[-7],[8],[2],[9],[6],[-2],[5],[8],[9],[9],[-3],[2],[1],[-2],[6],[-4],[10],[8],[2],[5],[-7],[8],[2],[7],[1],[1],[7],[2],[1],[-2],[9],[-2],[10],[10],[-7],[9],[-9],[7],[6],[-3],[2],[-10],[9],[-6],[-5],[7],[-8],[2],[9],[1],[6],[2],[-10],[9],[5],[-2],[-5],[-5],[-4],[5],[3],[5],[1],[1],[-1],[7],[-2],[-5],[10],[-8],[-7],[1],[5],[-6],[-8],[10],[3],[3],[5],[7],[6],[-3],[5],[-3],[-3],[7],[3],[2],[3],[-7],[-1],[2],[-4],[-1],[9],[-5],[1],[5],[8],[-10],[-9],[1],[-6],[-8],[-2],[-2],[1],[6],[-1],[4],[-4],[6],[9],[-3],[7],[9],[2]], dtype = "uint64")#candidate|2618|(256, 1)|const|uint64
call_2617 = relay.TupleGetItem(func_1474_call(relay.reshape(const_2618.astype('uint64'), [2, 8, 16])), 5)
call_2619 = relay.TupleGetItem(func_1477_call(relay.reshape(const_2618.astype('uint64'), [2, 8, 16])), 5)
output = relay.Tuple([call_2607,call_2609,const_2610,call_2617,const_2618,])
output2 = relay.Tuple([call_2608,call_2611,const_2610,call_2619,const_2618,])
func_2645 = relay.Function([], output)
mod['func_2645'] = func_2645
mod = relay.transform.InferType()(mod)
mutated_mod['func_2645'] = func_2645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mutated_mod.get_global_var('func_2645')
call_2646 = func_2645_call()
output = call_2646
func_2647 = relay.Function([], output)
mutated_mod['func_2647'] = func_2647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_2719 = relay.TupleGetItem(func_2645_call(), 2)
call_2720 = relay.TupleGetItem(func_2647_call(), 2)
output = relay.Tuple([call_2719,])
output2 = relay.Tuple([call_2720,])
func_2728 = relay.Function([], output)
mod['func_2728'] = func_2728
mod = relay.transform.InferType()(mod)
output = func_2728()
func_2729 = relay.Function([], output)
mutated_mod['func_2729'] = func_2729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2251_call = mod.get_global_var('func_2251')
func_2252_call = mutated_mod.get_global_var('func_2252')
call_2763 = func_2251_call()
call_2764 = func_2251_call()
var_2823 = relay.var("var_2823", dtype = "float64", shape = (12, 15, 7))#candidate|2823|(12, 15, 7)|var|float64
bop_2824 = relay.subtract(call_2763.astype('int16'), var_2823.astype('int16')) # shape=(12, 15, 7)
bop_2827 = relay.subtract(call_2764.astype('int16'), var_2823.astype('int16')) # shape=(12, 15, 7)
output = bop_2824
output2 = bop_2827
func_2831 = relay.Function([var_2823,], output)
mod['func_2831'] = func_2831
mod = relay.transform.InferType()(mod)
var_2832 = relay.var("var_2832", dtype = "float64", shape = (12, 15, 7))#candidate|2832|(12, 15, 7)|var|float64
output = func_2831(var_2832)
func_2833 = relay.Function([var_2832], output)
mutated_mod['func_2833'] = func_2833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2909 = relay.var("var_2909", dtype = "int32", shape = (9, 8, 8))#candidate|2909|(9, 8, 8)|var|int32
var_2910 = relay.var("var_2910", dtype = "int32", shape = (9, 8, 8))#candidate|2910|(9, 8, 8)|var|int32
bop_2911 = relay.bitwise_xor(var_2909.astype('int32'), relay.reshape(var_2910.astype('int32'), relay.shape_of(var_2909))) # shape=(9, 8, 8)
func_2486_call = mod.get_global_var('func_2486')
func_2488_call = mutated_mod.get_global_var('func_2488')
const_2928 = relay.const([-6.777548,5.214370,-0.375667,-6.259148,5.207087,6.925572,3.347772,3.553954,-9.684120,3.386891,7.675644,6.947863,5.763210,-7.460789,6.087259,-1.272357,9.838159,-7.693172,-6.566374,3.899098,3.894469,-4.510389,5.494945,8.294701,-8.938352,5.253572,-6.384439,2.247211,-9.037834,-7.557004,3.329428,2.362929,5.313663,-4.176801,-1.548451,1.231706,-8.628378,0.932222,9.625954,-7.583660,2.848755,8.548286,-6.672219,-8.894870,-1.552503,-6.960687,9.547220,8.179562,-1.758806,-8.230048,6.645410,-4.029392,5.554312,0.116979,-7.696698,6.707745,0.363435,3.841510,4.997061,0.345671,4.226064,9.408515,0.162500,7.219380,-9.458321,3.912293,3.239865,-4.973995,0.744659,2.664832,8.051666,0.829174,-1.737348,-0.217058,-4.091713,2.610242,-6.385118,5.251157,9.142954,0.160667,-4.656296,-1.109710,-9.731655,2.930385,-4.045512,1.284834,8.169278,5.648223,-0.732675,6.869193,2.057919,-5.530712,0.633451,4.057481,-1.865798,-4.809803,4.534033,-9.078045,6.500019,0.881613,-6.723357,4.134976,-8.821158,3.058076,7.525704,6.205109,-1.411043,-3.985174,1.503601,-8.197052,-3.597383,1.988800,5.479093,8.317290,3.233937,1.862222,9.346742,2.887735,8.101898,-1.905125,2.669108,9.588437,5.928527,7.786057,2.243833,-5.179516,-4.554330,-8.184288,5.066279,3.402364,-8.956581,3.038379,5.512413,6.323459,8.332010,0.641562,-4.649866,-2.905844,-4.320635,-2.074058,-7.092897,0.202976,-2.510756,-5.013460,5.791563,-5.610593,-0.378347,-1.844350,-8.665899,-3.319050,9.428227,-9.805780,-1.827616,-5.981983,-3.297934,0.655731,3.686147,-0.194685,-8.153445,-4.017622,-5.041614,6.775591,-3.161256,-7.968875,-4.587962,-9.873944,3.531390,2.223764,-2.657224,-9.851241,-9.803247,0.619933,8.683193,-4.278580,-3.772628,8.637460,2.106967,-0.264715,-7.064792,7.407355,3.963427,7.973356,-6.511528,7.447851,-8.614580,-2.889460,3.734450,-4.789041,5.223387,-1.460262,7.592013,-3.746749,-1.731900,-3.634473,8.189493,1.519912,-2.527250,5.308050,8.445454,6.578912,1.837573,7.857999,0.243843,7.338777,-1.716815,-6.727276,5.693876,-0.572424,2.132927,6.951790,-2.946257,-3.036807,0.444676,-8.754412,-6.512639,-3.214916,6.130455,-2.633684,7.389820,3.721035,3.599953,-5.249133,-7.849344,-8.088238,3.454217,-7.554072,0.029248,-8.222818,3.711819,2.767015,-0.744004,8.367824,3.713353,-2.128481,3.793647,-4.885610,-2.826093,9.884981,-8.339337,-2.340937,0.149920,5.009719,1.194488,3.568188,-7.857457,-4.588627,-5.012606,-0.353098,9.926479,9.415553,-5.836760,8.825334,-7.155591,7.889641,3.763028,-0.294583,4.407021,6.313319,-6.926863,1.200373,3.966539,0.608874,0.387550,-9.556838,8.045292,2.217227,3.325324,-9.560192,1.684739,-7.212476,2.437784,-4.205200,2.394148,-7.503484,-4.805602,-4.357362,5.312498,-8.401382,-1.445579,-7.215325,-1.672062,8.628212,-5.308296,3.857470,-1.741792,-6.235222,-9.886767,-0.460760,-6.954891,3.359202,-9.081518,2.533783,-0.047962,-8.607963,-2.494603,-9.560361,-5.408613,-1.628874,7.011319,-9.104455,-1.218012,1.622460,1.838126,-2.694103,-9.507847,8.467636,4.611948,5.608162,-6.837479,-3.571985,-7.106302,3.731021,0.478358,0.624836,4.270669,-1.301570,4.976124,-6.989944,9.565971,-7.280316,3.318809,-5.002604,-6.835957,-4.921570,8.331692,7.716985,2.296055,-6.675797,3.207801,1.249142,4.209766,-5.553933,5.254737,-6.208108,6.484213,8.768211,-3.322237,5.498817,4.417088,2.962618,5.774960,-6.984150,8.424252,2.509193,-3.051476,2.945532,-7.669631,-9.893934,-1.416204,-4.873992,-9.726911,-2.397832,2.871338,1.591324,6.979574,8.283231,-3.456964,8.332321,-5.702309,-9.713629,2.564670,-6.144582,7.459862,-2.960362,4.906334,8.791421,-0.861535,-6.163555,0.005904,-4.008428,-7.270585,2.043394,0.306791,-7.925846,6.532389,-6.735487,-1.410545,-7.381193,-3.480478,-6.960172,6.082585,1.806668,6.869441,7.483974,7.209102,-2.482754,1.076346,-2.360971,-4.180388,-1.694459,4.000204,0.595915,-2.043264,1.020476,-8.839958,-3.881752,3.793112,4.616571,-6.874596,-3.033503,-4.577498,9.078686,-3.140686,-4.334410,0.231223,4.794235,7.653039,-3.277415,-5.152620,-1.662552,0.173094,8.413157,-9.913559,-2.877511,1.709093,1.318161,9.359242,-6.173129,-6.221869,-3.196321,3.371914,0.521951,-8.383279,-7.813400,7.139329,9.451102,-3.732915,-6.930213,4.631004,1.747023,3.654194,-2.769488,0.713311,-3.806645,2.566637,7.375905,-7.254502,-2.973587,1.163313,-5.231061,9.113566,3.410414,-2.770415,3.523269,-6.449714,-9.684754,4.190988,-8.064243,6.774656,-9.286257,-9.712701,-6.651150,-7.182803,7.878248,1.384289,4.380855,-7.896904,-7.029545,-9.530363,-7.069871,-9.171485,-7.295736,-9.602839,3.176549,1.678937,-1.434850,5.012083,9.802000,1.301765,4.835174,-9.239595,-3.512267,-7.991495,1.263664,-6.583712,2.871336,-1.772087,-3.167244,3.851838,8.850533,9.518620,-0.778284,-9.860246,1.653054,-9.679937,-8.126492,7.422377,4.740296,-7.094562,-3.610893,0.494986,7.998935,7.668750,-7.370228,3.609707,9.047180,5.330600,-5.151271,4.412456,-0.134993,-7.283296,-9.508504,3.058422,9.812450], dtype = "float32")#candidate|2928|(504,)|const|float32
call_2927 = relay.TupleGetItem(func_2486_call(relay.reshape(const_2928.astype('float32'), [12, 6, 7])), 3)
call_2929 = relay.TupleGetItem(func_2488_call(relay.reshape(const_2928.astype('float32'), [12, 6, 7])), 3)
output = relay.Tuple([bop_2911,call_2927,const_2928,])
output2 = relay.Tuple([bop_2911,call_2929,const_2928,])
func_2933 = relay.Function([var_2909,var_2910,], output)
mod['func_2933'] = func_2933
mod = relay.transform.InferType()(mod)
mutated_mod['func_2933'] = func_2933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2933_call = mutated_mod.get_global_var('func_2933')
var_2935 = relay.var("var_2935", dtype = "int32", shape = (9, 8, 8))#candidate|2935|(9, 8, 8)|var|int32
var_2936 = relay.var("var_2936", dtype = "int32", shape = (9, 8, 8))#candidate|2936|(9, 8, 8)|var|int32
call_2934 = func_2933_call(var_2935,var_2936,)
output = call_2934
func_2937 = relay.Function([var_2935,var_2936,], output)
mutated_mod['func_2937'] = func_2937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2728_call = mod.get_global_var('func_2728')
func_2729_call = mutated_mod.get_global_var('func_2729')
call_2941 = relay.TupleGetItem(func_2728_call(), 0)
call_2942 = relay.TupleGetItem(func_2729_call(), 0)
var_2955 = relay.var("var_2955", dtype = "int32", shape = (637,))#candidate|2955|(637,)|var|int32
bop_2956 = relay.floor_mod(call_2941.astype('float32'), relay.reshape(var_2955.astype('float32'), relay.shape_of(call_2941))) # shape=(637,)
bop_2959 = relay.floor_mod(call_2942.astype('float32'), relay.reshape(var_2955.astype('float32'), relay.shape_of(call_2942))) # shape=(637,)
func_1829_call = mod.get_global_var('func_1829')
func_1834_call = mutated_mod.get_global_var('func_1834')
const_2961 = relay.const([[-0.360815,-2.539546,7.745942,-7.996359,-8.098952,-3.684691,5.894932,4.315889,8.782420,-5.459598,-4.813940,6.419590,-8.910413,-8.950611,5.408453,3.796413,2.334524,-5.431663,-4.320488,-8.542618,5.259525,5.546850,4.331804,-8.745388,-1.183439,7.810081,-8.694173,9.574897,6.110745,4.040590,-9.485838,-9.514626,-8.148542,-7.234568,-9.750846,9.735889,9.975708,-3.496361,1.471593,1.664915,6.347773,8.738268,-5.028742,-7.494893,-1.082895,-5.956722,-2.168431,-1.199575,3.772476,9.472762,2.755933,8.611212,8.856160,7.298833,6.101723,0.126977,2.003092,-4.029892,2.074946,9.467540,-0.787998,5.471132,9.697279,0.567316,-2.952771,-6.896981,9.691158,0.869807,1.617628,0.050105,6.199517,9.371866,8.273382,-4.213327,-7.956141,-3.352734,2.063361,7.418213,7.848092,5.855529,6.172936,8.379279,-2.389805,-4.283282,-0.596715,-9.389232,-8.166726,-2.580408,4.471105,-8.661189,9.244865,-8.142299,-6.662711,8.239840,-1.704794,-8.142939,-3.920149,-3.480009,-6.529484,-2.311605,-4.379289,-0.290866,-9.358722,8.839871,-1.899746,4.930779,-0.933802,-9.172843,9.385439,1.319069,7.961136,6.101124,6.426583,-6.523096,-0.835462,-6.042974,4.399966,4.393764,-2.513522,9.291003,0.758386,-2.723178,-2.429764,-2.557864,-4.891750,5.521501,5.402788,8.474231,-5.708218,-1.611954,-0.993939,6.830404,-8.373636,9.982362,9.215155,0.366237,2.699921,5.855333,-1.565513,7.447592,9.768236,-5.575491,7.163786]], dtype = "float32")#candidate|2961|(1, 143)|const|float32
const_2962 = relay.const([3.232736,6.576459,8.969526,3.110408,-9.571766,8.770146,2.934654,1.540087,-1.999641,2.244477,-5.608891,-4.909181,6.303512,-2.323511,7.352527,7.693242,4.014177,-9.996238,-0.628053,8.118972,-4.756983,-7.784370,6.595350,-0.721378,4.236588,0.306995,-5.530558,8.634185,4.594963,8.729322,6.955056,3.691968,5.134300,-4.237238,-2.386774,-5.057454,-8.372429,-4.198992,-0.525815,-4.402034,-8.447404,6.341671,9.820982,7.404400,-5.473987,-1.177731,1.192737,-7.445077,1.021941,-7.835169,-9.050484,-2.081497,4.529917,-3.636587,-0.980944,8.223757,-0.742194,9.539288,6.292539,-1.142365,5.264092,-6.904568,8.661477,6.376633,6.249602,-4.959904,-6.190214,-9.803777,6.418952,2.659377,3.416752,5.654186,3.482766,-9.000094,9.553266,-5.690558,5.433485,4.591472,5.531301,1.625801,-5.248141,-2.871186,-3.789166,-0.485573,4.566818,6.972712,-5.591697,-8.837860,-1.346440,6.774649,-4.200678,-2.302727,-5.429717,-8.165429,5.243668,-9.527512,8.464177,-4.807498,6.191702,3.595953,3.330740,-6.988858,5.506207,0.178598,5.623947,8.710495,4.885238,9.223029,3.888168,7.483073,8.332163,-4.682441,5.255730,-6.218387,1.110161,5.880640,4.264117,7.647301,0.658153,-7.783253,8.224992,-3.062162,3.015884,-4.941373,9.479882,1.099447,4.564199,6.024821,5.655244,8.539852,9.348176,6.964673,-3.401839,-4.308629,0.895687,-8.717073,-6.054781,1.661083,-9.925332,6.416209,-7.741227,-2.135712,-1.594653,-8.793891,-6.794528,9.842336,-6.825697,-8.331285,1.281992,-5.603895,6.097037,6.768636,5.954676,1.982263,-7.439707,2.522351,-2.056155,-0.129196,5.272082,-2.893122,-1.054525,-0.210419,-3.286417,-2.768556,4.410422,-3.513605,3.125046,-8.708554,9.086178,7.753106,-9.750027,-3.998033,-0.310481,-8.209084,6.211128,8.476743,-9.876429,-5.096014,-5.761834,-1.009581,-4.876999,-9.864126,-3.191544,-0.859740,9.808388,8.798818,2.091040,-5.883463,-9.712666,1.138281,2.971641,7.585912,-0.436674,-1.207832,-8.712073,-3.535473,6.505847,4.859871,-1.814578,0.054169,2.461088,5.636692,-0.295718,-7.015986,-8.279441,-5.664415,2.230201,1.701474,-7.729915,-7.746198,-7.028938,3.858729,-7.658431,4.049596,-4.623931,-1.283361,2.059188,-6.928221,8.812052,-9.148107,4.124138,1.592418,2.022732,-5.297332,-6.037565,-3.691584,-5.633352,-8.517089,-1.876760,8.308878,2.824292,-9.569395,2.838939,-6.939216,-4.858978,6.525873,-5.111801,-9.898174,0.678915,6.972631,9.232542,7.712451,6.855507,-9.435918,0.068575,-9.971743,0.190731,-6.462358,-8.025357,1.198241,6.957312,-7.655918,5.947589,8.431604,3.040180,-6.309671,1.442834,-0.015083,-3.978062,-3.783685,-4.060267,-8.477539,-4.498000,6.067631,5.996775,7.670249,3.551522,-6.739811,-1.735871,8.340947,-4.858205,-3.155954,8.184210,-3.741237,-4.617789,-2.584918,-1.763180,-2.961254,4.155474,9.762995,2.440346,7.216746,-7.867999,1.533138,-9.662043,-6.487998,4.851007,-8.009352,-8.541360,-7.714354,8.048581,7.920059,8.926421,-9.261140,3.515157,1.887213,-0.838075,7.140462,5.979424,8.252452,-5.544294,-4.355545,2.010528,-4.458942,-3.942571,-4.877480,0.204915,7.826884,5.223290,7.769314,2.843222,5.119741,-1.421788,-5.048306,-4.815987,7.542628,1.360084,-2.339759,-6.276703,-8.309662,9.984247,-7.012343,0.367429,4.937626,-7.654776,3.108542,3.965280,4.285611,-5.280438,8.060326,-8.252035,6.736037,1.683428,-5.851768,-6.366500,-1.787108,2.806758,7.935081,-2.233931,6.924472,1.320429,-6.616277,-0.422113,-5.466765,0.435087,7.727709,-7.471187,1.672610,-2.412641,8.136974,4.189209,-3.903242,6.263927,2.360603,-5.564223,-8.043455,2.107214,-4.827403,-0.969704,-0.372800,4.186353,3.704303,-8.253119,4.913982,-1.752687,-5.234925,-9.048266,-1.959407,-9.827606,8.443281,2.160206,-7.493543,-4.835123,-2.012822,-2.143660,-5.903259,-5.314906,2.615731,-0.310790,8.635657,-1.124944,-2.122693,-2.972771,-0.152491,-4.244009,7.915055,0.691093,2.261041,-1.145191,-0.621718,-6.690251,-3.056510,9.903425,-3.144664,-4.341224,-0.957356,2.637829,2.571099,-2.606718,-4.151569,7.037877,-0.267493,6.529416,-8.935549,2.231345,-6.363146,2.464987,-1.046956,6.592351,7.936872,-6.995132,-3.436048,-0.624119,8.918647,8.795623,-4.847143,6.248588,0.851041,-1.294828,-0.257422,-9.710312,0.255382,-3.229124,-9.992920,-2.398893,8.454155,-9.052254,-0.943664,-3.489752,9.060184,8.795664,-9.340773,-7.329439,-3.551045,-0.654354,-8.945797,3.942504,-8.014432,1.308942,2.563372,-5.532995,-5.592806,-1.763621,-3.395954,-0.275587,-8.182949,3.465158,-9.476756,-3.135967,-7.987349,7.155899,-4.643721,-6.545244,-9.879619,3.834614,-1.295278,3.635045,-7.533155,7.971742,-4.952187,-2.857826,-0.032052,9.456430,1.266746,0.586895,-4.023930,-5.369439,4.892572,-3.031087,-4.281351,-4.852893,8.740587,5.522790,1.167034,-6.608766,-6.180843,5.752626,-1.850846,0.815762,-6.341629,8.090073,-7.604136,5.194553,8.947120,8.957367,-5.844506,-8.929619,1.940909,7.901283,-1.198797,-3.135480,4.488231,0.043703,0.503445,8.572939,1.130456,-8.623756,1.610381,-2.758630,3.312630,-5.020301,6.030865,-6.645437,3.726634,6.148995,8.292522,-3.351497,9.495528,4.600645,4.392999,3.549691,4.419021,-3.575385,0.698133,2.281997,-7.511750,-6.848395,-2.124916,0.804100,8.237967,-9.288256,-8.533928,4.667269,-7.288666,-0.209027,9.002041,8.017625,-2.937609,7.543713,-9.925724,-9.700182,4.259828,-1.087091,2.449549,2.221898,-0.080596,-1.056109,-6.764881,1.258712,-0.332931,-3.427639,4.698477,-4.904414,1.523715,9.031464,7.611729,5.141816,2.765595,-2.516194,2.402629,3.478176,0.384660,-7.708859,8.957776,7.213778,-1.310431,3.784589,9.511134,7.746393,-5.705556,-5.936658,-3.074012,-8.663328,6.447872,7.115840,-1.799568,-0.020265,-9.842370,2.021101,-3.456502,4.096022,9.758015,-8.592108,-6.692979,7.134661,6.734434,-8.711617,9.276559,8.980900,-7.973224,5.387614,9.774021,-8.813215,0.530906,4.100125,-7.081377,-8.087175,7.524488,-8.527510,-6.116186,-8.897574,4.023523,9.269050,3.067090,3.678994,9.970314,-6.326640,0.464267,-9.406315,6.334696,-3.620135,-7.900991,6.978768,-3.565343,-1.381397,9.114267,-6.786829,7.895134,-8.567605,-6.952993,-1.919033,-5.670446,-7.444605,-8.048537,-9.963279,-4.703891,7.335230,4.081983,-3.871989,9.160621,-3.207744,-7.320427,7.796354,8.490391,-3.160588,-5.489542,9.608946,-9.558191,-3.452831,9.528622,-9.887105,0.575459,-9.814542,-7.652344,-3.430074,3.973132,-1.161795,4.759779,-6.087908,9.682273,-6.913497,7.950455,5.151275,7.371796,-9.015341,-9.386092,-9.020345,4.855619,0.676767,-6.748413,9.808898,-5.948970,7.871133,5.945669,-3.451687,-8.845833,-0.354960,1.515939,5.843210,7.240307,5.134917,-7.452833,-7.212147,-4.047588,5.308794,1.555425,9.198729,6.984654,-7.753022,-5.229056,7.171033,6.715769,-4.682127,0.497027,-9.600371,-4.533086,7.047514,5.151967,-7.261931,4.161847,-0.067428,-6.013835,-7.405567,-3.598910,-4.235241,-9.919209,-1.810198,-5.610384,-9.592178,-1.823648,-8.563981,-3.901959,-3.312206,3.563607,2.171566,-4.935648,-1.497683,2.873529,-6.970059,1.768921,-3.505847,8.308982,5.892269,-0.493233,7.007958,-2.999467,3.233891,7.057668,4.448844,-9.637413,8.665312,-1.195154,7.114415,2.868219,-4.042086,-0.689826,-8.596276,4.669168,6.665944,4.764224,-1.050490,4.085143,-9.384214,3.028182,9.098238,-7.919418,0.241123,-2.138144,0.735323,-6.846066,-4.608543,-6.758648,-4.951518,0.579978,0.265630,9.808587,-4.446440,0.846400,2.925763,-9.931644,-2.612495,-3.820264,-2.765445,-6.282793,-2.111303,9.802473,-3.385871,0.694935,3.039138,-4.763137,3.920518,-2.064118,-8.219581,-8.967235,6.981341,2.135553,1.426076,5.301169,-6.526994,5.548712,-2.342310,-4.074053,1.296174,-8.026262,-6.316131,9.286927,-3.729501,3.960810,-0.746489,-9.217266,0.805656,2.627539,7.262090,-3.414571,8.125854,-3.622588,-5.531964,-1.292659,-8.963033,-8.087181,6.893404,-9.846449,9.002141,0.005941,6.934608,3.341075,9.475666,-8.974416,6.537012,-9.447395,-5.405453,7.974340,3.994047,-1.521335,-7.030844,-0.626675,5.138580,2.853109,3.811894,-7.984335,-6.227604,5.409723,-7.581630,2.488516,-5.937025,-1.532623,-2.998671,6.633449,7.901613,-0.936672,-8.367425,-8.457188,0.296301,-6.479314,-4.130641,-0.536460,2.639449,-3.549581,7.321533,8.353726,1.696832,-6.048627,0.618046,-1.878554,-9.518682,-2.812501,9.964145,-0.480351,-5.539103,6.115742,4.018548,-7.015417,0.656677,-4.786219,-4.722326,-8.196157,-5.653557,3.518326,-6.399277,-2.918834,-3.723718,3.145647,9.567890,8.531408,2.884095,-1.985772,-9.447776,1.405048,6.734152,-9.991533,3.978254,-3.547697,2.293022,-9.382320,2.494991,-6.783394,3.397806,5.520950,9.277067,9.449520,-1.283652,8.932330,-6.605816,-1.485288,9.410862,7.065473,-0.233699,-6.350997,7.334980,1.836029,0.015079,7.793133,-0.999726,-3.254255,2.292029,-5.247778,5.722430,-1.364684,-1.227820,-6.585908,0.348256,-5.079762,8.674335,1.998926,4.563421,4.916549,4.268963,-9.351598,4.115669,6.745417,-8.742089,-3.375442,-1.417529,5.071010,-6.145822,-4.326660,2.138553,3.954306,9.579363,9.167993,1.687060,8.616525,2.126961,-1.501806,-2.355512,3.548513,7.480841,4.085996,-5.254700,-2.330848,-2.074234,-8.210699,-7.807112,-3.965207,0.525980,-7.983888,-8.699998,6.074955,8.035939,-7.332473,9.532028,-8.527546,-6.925734,-3.147174,-3.702487,8.206465,8.040311,-1.462667,9.148245,7.396381,2.175179,8.881000,-8.716926,7.047271,1.823908,0.258311,-1.176972,0.568162,4.828435,6.627425,0.662955,-0.029493,0.334813,-3.420391,5.274970,7.278026,5.632743,-9.318684,9.228414,-7.446053,-0.848961,5.251752,0.728329,7.808094,5.101906,2.544415,8.980912,7.195165,-9.999819,3.049002,-8.090963,-4.973969,8.058715,3.555614,7.783330,6.173359,5.178602,-3.640056,-9.929165,-4.769984,-4.544860,-0.462339,4.432028,-6.129431,4.560250,-5.692367,-8.293499,6.789202,9.418753,-1.982939,-3.468926,-1.985848,0.984751,5.302575,-4.365785,9.398471,6.591608,-8.270384,3.938177,-1.537920,-4.879066,-4.057579,-5.619979,6.966977,-6.633696,-9.052846,3.540109,7.588454,5.387543,-2.465567,-5.886264,-9.058646,9.355946,-1.315287,-7.507477,6.938366,7.142022,4.257865,-1.671136,-2.267113,7.355036,1.840815,5.252030,5.944543,7.634533,1.518876,4.470012,4.427263,-4.501089,2.139798,8.031810,-6.048907,8.705725,-5.336457,-8.244270,-7.654865,4.697778,-3.855991,-1.315554,1.310941,-0.961555,7.161372,-5.652992,-7.716956,0.413425,3.867774,4.868000,6.586318,-8.166838,-6.257135,-9.070886,-5.043403,-3.879605,3.211303,-1.782028,3.581588,1.899932,-7.678340,6.794543,-2.461006,-0.257011,9.609930,7.531264,-3.279451,-7.107215,-3.543527,-7.199371,-7.786469,-7.495097,8.529499,-8.804753,1.187146,-5.363648,-8.834967,-8.962483,-3.820010,-5.282922,-1.557295,-6.718923,4.470964,5.946053,-5.118020,-1.935430,1.239611,-2.452192,4.374469,3.882061,-9.017745,-5.889388,7.277652,8.748210,-8.016596,-8.741853,-3.230762,5.756220,2.872700,0.690846,-7.761834,4.075317,-2.355592,1.764463,-4.822499,-2.749755,-7.382612,6.172785,-3.122598,2.093259,0.795150,0.384849,-5.248391,5.343263,-3.598385,8.339050,0.427215,-0.533772,-6.379814,2.338776,-1.690530,5.839838,1.833751,-3.041208,-2.494793,-7.354708,8.420448,6.771821,-4.411202,-9.240421,3.386381,-0.061475,-5.911184,0.137141,-7.842558,6.836311,-8.783064,3.895074,-2.781661,3.653228,6.610426,-8.655676,-2.570475,-0.945950,-4.207485,0.172191,4.158465,-1.996201,-1.002087,-1.903278,5.393146,0.536387,0.100151,5.419783,-0.685319,-3.998173,-4.173904,1.697518,-5.747089,5.214475,-0.649991,-3.001227,-7.833519,6.486330,-3.160883,1.939528,4.975334,-2.214602,4.230265,-8.099668,-5.645546,9.325081,3.103790,9.952782,9.104841,3.358284,8.649913,2.536081,-9.853325,-3.178701,-5.787076,-1.686194,-9.347571,-3.423184,-0.816398,-0.886359,4.929903,0.044954,-8.240478,-6.168168,-5.845105,8.198531,-9.459382,6.141720,2.952747,9.333033,-1.287212,1.157134,-3.333091,-8.584620,5.531702,-0.336321,5.426293,8.279297,-1.229186,9.696906,9.529477,0.988505,1.719811,3.407918,-5.957403,-6.976692,-9.805424,-9.053273,-5.792089,-0.569563,4.846354,-6.719416,-0.841326,-6.098671,-5.143809,7.650708,-1.911428,8.185087,-1.531766,-3.754341,7.496864,7.717316,-9.869522,2.536145,-3.826463,-1.926522,-2.794204,-3.082790,9.988944,8.804324,-0.169429,7.975954,9.558446,-4.468181,9.023807,0.304135,-3.221295,2.867532,-1.929779,9.387014,-1.158723,-3.130622,-3.906171,6.091005,7.626102,2.568853,-9.074335,-5.974210,6.746569,6.754683,6.376135,-3.568963,4.761774,-7.164443,-7.270578,-7.919451,-4.857321,5.071286,-5.690951,-8.254980,5.802179,0.868464,-5.448778,-5.026337,7.807467,2.770851,-0.661438,-1.931480,3.786674,1.535718,-2.053532,-7.259911,-3.086416,6.842263,-3.719808,-6.453706,-0.646798,6.621861,4.977481,-9.932412,1.937376,1.160053,1.818694,2.993220,-2.579115,-3.441782,1.261186,1.451528,-1.317201,-2.862049,-4.879993,5.241208,-7.764176,-2.176223,-3.824883,-1.213996,-6.669704,4.703674,9.240768,-7.719083,8.178156,-5.495541,2.151287,-9.893153,0.226056,-3.960207,7.676377,-6.720139,6.907070,9.275760,9.912746,0.749664,7.169033,-4.165630,-6.012480,-4.890993,1.782509,-3.721195,8.787384,7.505283,5.968215,-7.822282,3.252451,-9.392337,9.369733,-2.331549,-0.487941,-9.232902,-8.103985,-9.760904,7.149016,-8.942687,-9.388645,7.751203,0.924267,-6.668533,2.727847,7.340721,2.460127,0.787528,0.906666,9.821228,4.325168,1.515464,-5.689375,-7.060856,-8.200995,6.955002,4.052517,-7.439170,2.388842,5.733941,-0.259116,4.094888,9.394043,-8.886521,-4.613863,-7.970875,-3.615387,0.936734,0.585564,-1.434171,-6.195570,-2.127434,3.101332,-5.114038,4.814939,9.321802,-5.467088,4.513645,6.795591,-8.985292,-7.526588,4.534493,-7.180324,7.952744,4.485483,2.703465,9.996870,7.149993,0.598153,3.933953,-1.052069,-3.367717,1.937566,-5.459866,9.696917,-5.763044,3.569980,-5.241232,-6.813041,1.399755,-4.610252,6.320374,3.948304,-7.578520,-5.695228,5.661599,-3.744629,0.147632,-7.694395,-7.654890,-1.727960,1.781310,-7.138905,3.793121,6.461188,-6.465430,-7.858142,-5.973746,9.596882,-2.634464,-0.329250,-1.129025,9.897149,6.592622,9.012426,2.806556,-4.019078,0.299964,2.728194,-3.329832,4.666852,-8.930000,-2.448897,6.859928,4.145325,-4.073548,-8.203868,-6.290584,-7.761303,0.982088,5.073934,-5.407872,1.145864,-2.924541,-5.253542,3.505193,-0.323805,0.316793,-4.902276,-2.872770,-3.319632,-5.124616,4.729114,-2.890970,-0.690895,0.875557,2.021809,4.876202,6.374780,1.501076,-7.728883,9.037006,-6.668890,-2.338927,-2.589607,-4.018393,0.722242,7.166165,3.740101,-6.095778,0.790360,3.368656,3.470356,9.868505,-2.434979,9.644021,9.600374,2.030623,3.041129,9.054265,-0.880811,2.923313,-4.020582,-8.608970,-6.207647,0.460130,-6.144892,-5.855142,0.779848,-5.841344,-8.963204,2.324503,8.842437,3.135352,-6.113717,-7.758676,-7.459784,-9.779780,-9.398675,-8.763885,6.563470,-2.895550,-3.475768,-1.954099,-8.169606,-2.404915,-3.255895,-8.395527,-5.623166,-8.079438,-6.489482,-7.117514,-9.495193,4.454933,1.740406,-2.133162,1.410744,5.304169,3.505533,-4.896385,-2.447090,9.173075,-1.560100,-4.695950,4.263453,6.250682,6.105081,1.450698,-5.932059,-9.656338,-2.535523,-5.419744,7.056128,-9.877576,0.315407,-5.970229,2.717580,-8.228272,-2.696359,-0.422059,-9.487374,7.266793,5.478990,8.308221,-5.437231,-9.472551,-9.245959,-1.689821,-8.777727,2.083956,8.052669,6.365639,3.125562,-2.031052,3.248399,1.156912,-9.529567,4.037009,8.756955,3.148768,4.953548,6.252558,5.982009,5.342489,-8.890042,6.677554,3.970109,-7.311386,6.650898,-0.519859,8.196123,-9.350446,-0.652406,-6.888899,-8.057574,4.525651,1.832054,-1.505157,0.770072,-6.758318,-7.857913,0.548594,-1.217568,-8.928038,9.532221,-5.447733,-5.072893,-7.863056,5.501695,9.398733,5.721966,7.609834,9.761202,3.934527,3.826604,-3.810161,7.521563,6.404772,5.999279,6.873645,-5.941341,1.699079,-0.085423,-8.901205,-5.554661,-3.641314,-8.124363,-2.175572,6.163452,-1.689251,4.834689,-0.761993,6.828674,7.649039,3.423223,9.675652,-3.730014,-4.600144,-2.599313,-1.611282,-0.740630,-7.154673,-7.139404,-0.275519,-3.644636,7.149640,5.398631,1.324832,2.101113,4.906366,9.363566,9.823123,-5.908965,6.646081,-5.423588,7.170955,-1.056665,7.372580,0.403831,-6.257001,7.532737,9.149340,6.283389,1.247708,8.875487,9.872463,3.776733,7.289411,-8.492572,-1.313533,-5.333106,-4.808903,-8.214475,-0.765164,7.665527,3.657610,-7.754292,-6.217534,3.016032,-0.415497,-4.187006,-5.439544,-4.405867,6.007331,-9.759090,4.593597,-5.668071,7.915351,-2.614196,-6.695317,-6.825673,-8.962579,-0.473249,-8.791800,-3.472802,6.449868,-0.743273,-0.865241,1.582339,4.074034,3.508418,-4.547679,-0.917480,-2.227579,2.070286,5.451684,1.583494,-9.277602,-9.182221,9.117599,-2.711666,3.039005,-8.155426,1.629259,-1.266812,2.986008,-9.724497,6.645669,5.182675,5.312090,-3.345784,-4.116575,-8.569071,2.826118,7.925608,3.446881,3.588805,-6.651113,-0.049237,9.076081,2.326509,-7.072658,1.894372,-1.405592,-4.055551,9.833050,-8.816212,-4.376840,4.384664,5.631371,-3.076669,-4.658853,-0.965004,-8.078701,-1.737934,2.840732,-7.858132,5.213618,8.846728,1.628185,2.794520,-2.701890,-6.502570,-5.995578,-4.088961,9.949362,-3.474913,8.224792,-6.271681,2.388422,0.162834,-7.224924,3.396046,1.526649,-1.733084,-0.859367,-4.074251,1.357817,0.491416,-0.377955,-4.237666,-1.856974,3.646071,8.749985,3.245051,-7.322615,5.025868,8.935990,7.985073,3.594412,1.139227,1.602867,-9.370138,-9.503620,1.193820,0.105992,-9.097402,-0.040048,0.722377,-7.252165,1.326310,-1.039286,3.780185,4.101483,-4.844100,-2.473380,-1.941619,3.572554,5.002779,-8.788668,-3.674231,-4.719972,5.807258,-3.079578,-2.239593,-5.081651,-4.905519,-2.553710,-1.819626,-8.965931,-4.078159,-5.210638,-3.462504,4.965628,0.162355,-2.823897,7.417042,1.945012,-1.864196,-6.937361,-0.726749,-7.377895,1.874068,-5.158306,-9.814976,-2.935765,-2.581538,2.195755,7.190616,-2.495675,-5.284529,-1.229359,1.315653,-5.769074,-2.668633,-1.883687,5.776215,2.729687,1.454196,-8.140735,-8.348807,-9.224569,2.227340,8.836572,-4.165177,-3.181731,9.624109,-3.440160,-4.529111,-0.571432,4.764743,7.304958,5.745740,0.484321,-1.767313,-2.781955,1.533889,4.436401,-0.029046,8.413120,-0.843809,3.236083,-0.874085,-6.215514,-4.095318,8.786912,8.964272,3.595547,9.435323,7.372920,-9.510403,-9.051217,-1.943332,9.219232,2.222611,9.489909,-4.934880,3.105400,6.246412,3.750315,-7.342486,3.587846,8.103152,-4.761912,-0.289988,-2.263747,1.287117,-3.197853,6.103002,-9.281328,-8.543308,-1.862867,-7.807323,6.125047,-1.142858,1.178501,-9.991241,-1.171635,6.389329,-4.087570,1.154502,9.441650,-3.003988,-1.451410,2.453387,-1.128804,3.931653,-1.538657,-9.532352,6.067185,-3.485542,6.290363,6.625730,-0.962538,-7.192995,-1.594512,7.569292,-0.176755,5.661905,9.547910,6.089111,-7.503514,0.034418,-5.432512,9.100690,-9.894388,-7.820218,-8.865132,1.029824,5.951207,0.708124,8.013911,9.613081,-7.010792,6.165212,2.723995,3.287419,2.864852,-7.544606,-2.204297,1.901571,4.084949,-1.491646,2.139054,-7.053466,0.960293,3.489921,-3.060808,-1.710906,7.192799,2.624654,-6.311940,7.276345,9.731264,6.514382,2.286868,-3.404989,9.709583,-3.393260,-5.644728,8.744236,-7.899401,0.504710,1.641322,-8.158746,5.297077,3.365126,-1.357293,5.869513,-4.490685,-2.622720,4.529129,-6.236709,7.013350,3.436578,2.003620,-0.430985,2.334956,-5.303456,1.958840,-1.215373,-1.461298,7.551789,-0.571284,-2.937548,8.353048,-3.852088,2.705265,2.679692,2.141599,5.157633,8.766621,-3.320966,0.635581,6.453134,8.690776,3.676479,5.439758,0.190655,4.018148,-6.510196,-0.045163,4.105376,1.420756,-0.365966,8.596780,1.525801,7.154909,-7.409950,3.188827,-4.187276,9.446433,-3.142901,-1.559665,-8.561180,-6.620174,-1.676925,1.199398,-1.541952,1.393813,4.522201,-3.480150,7.543625,-3.531593,-0.284787,-4.469917,1.049550,-1.334201,-0.553265,7.431238,-1.114849,-0.714611,-5.797916,-4.144500,-6.680187,3.832431,2.214198,8.739367,-0.692285,-0.691485,9.554742,3.582385,-8.441967,-1.146451,-5.976164,0.788769,5.939476,9.930912,7.136631,0.511447,3.809061,9.447981,-5.251728,-7.608475,-7.147919,-6.008443,9.690536,-4.313810,8.015410,-5.695902,-8.801571,4.080173,5.822939,2.086882,-9.711190,3.895698,-7.521082,-5.529879,4.798739,8.439549,0.203568,8.316839,2.448812,-4.054193,-2.888364,-2.876053,-9.045837,7.160209,-0.307079,-6.163849,8.089859,3.749900,-8.031595,-2.574422,-5.362434,-5.862995,3.789394,-0.962389,1.748221,-7.899599,6.134572,0.309848,-6.130568,-2.256420,7.502295,4.737191,-3.996536,-7.099836,5.118124,-1.039280,-4.329070,7.598379,-4.755179,-2.642435,9.602509,4.204106,7.017948,-1.936387,9.325841,0.182678,-4.642566,4.042222,4.476470,3.919109,7.236265,-3.995390,-8.036604,8.020550,2.717157,5.804820,-5.460696,6.806213,4.529725,8.797856,-6.789115,1.583613,-5.974878,7.184382,9.855237,-3.183902,-2.742448,-0.762453,-1.862776,2.850829,-6.430314,-5.295126,-8.263243,-7.261972,-0.843006,-9.700821,-7.939440,5.736468,6.144848,-0.403304,4.137421,8.511698,4.936524,4.240465,3.431597,4.933205,2.581872,1.333833,-4.982797,0.753155,8.951755,4.910788,3.009911,-3.249723,-5.394666,9.970259,2.549756,1.961085,9.548466,3.702357,-0.652580,-3.788208,-5.358656,6.929450,5.679533,5.801636,-0.457643,7.150613,5.713489,-0.984134,-3.048760,-6.705441,-6.976933,9.636159,-8.593693,8.570429], dtype = "float32")#candidate|2962|(2145,)|const|float32
const_2963 = relay.const(-3.318459, dtype = "float64")#candidate|2963|()|const|float64
const_2964 = relay.const([[1.208697,2.360732,-1.370544,6.420345],[-4.256910,5.207469,4.982104,-6.491062],[4.556120,0.159708,5.222591,-6.166504],[7.030173,9.917904,-5.640397,9.541062],[1.591414,-3.572800,-7.070224,-3.884082],[-7.629415,1.289147,-3.261753,-7.174569],[-0.671583,-8.801517,-8.765723,8.621841],[-0.078263,-3.288862,-4.147969,-9.943920],[-5.277512,9.173659,-2.539687,5.903812],[0.115611,0.073192,-4.379343,1.491684],[6.794372,5.344260,-6.302985,3.479406],[7.289637,-9.813197,-9.079278,6.835319],[0.175041,5.526386,8.041211,-5.111204],[6.931641,-4.019693,6.014148,-1.687400],[8.977751,3.733033,-1.197416,-6.604834],[-8.516593,7.731147,4.439773,1.727386],[0.094044,1.180570,1.026132,-6.022245],[5.767900,-8.472541,-0.016932,2.425692],[-7.737857,-4.495258,-0.404088,2.426944],[1.872100,1.383690,5.034769,0.134293],[0.277248,9.929353,2.742946,4.787332],[-6.180647,1.348563,-3.055538,-1.063774],[6.631970,2.611105,4.333316,-8.652164],[1.923077,-3.335330,-4.509402,8.897676],[-5.649142,-9.422003,-8.385018,-1.054000],[-8.710827,-0.866924,-9.307984,9.805898],[6.943042,4.650130,1.006217,4.611339],[0.961244,-9.620368,9.449478,7.261882],[-9.823119,0.881854,1.724806,-9.860111],[-0.626622,-9.782479,8.273263,-5.045909],[-7.265383,-0.543420,-5.039742,-1.002118],[3.620363,3.032664,4.995199,-9.110402],[3.802551,-3.386870,3.756153,-9.709143],[0.604170,-3.039687,-4.151280,8.110673],[9.446213,3.556155,2.850207,9.934901],[-1.645131,-7.917298,-8.688641,0.990698],[-6.516328,-4.681746,-6.546609,4.808545],[-5.641210,5.677566,6.051720,0.271668],[-5.935291,-4.405103,4.774683,-9.906316],[-9.890090,8.200523,0.870782,-6.112576],[-0.529910,9.969238,1.659085,7.143564],[-8.243353,8.738146,4.707674,-2.120341],[4.792789,-0.922901,4.363225,-0.760472],[6.138459,-7.960795,-3.533772,-8.140661],[1.668618,-3.081721,6.634155,-8.096532],[-3.782582,0.357427,1.464623,6.819313],[-3.699239,0.141553,-8.430419,4.677075],[9.711568,-6.632082,3.382718,-6.670975],[-9.220436,4.310410,-5.652579,1.899579],[8.926537,7.150386,8.857143,3.909493],[-7.727661,3.348741,-3.306198,-8.472142],[-4.295309,-3.645770,7.254725,-0.427035],[2.024531,6.648269,-7.082587,-2.530759],[5.305741,-0.349146,-9.312055,-3.357836],[-7.479651,6.154683,1.673221,-1.149819],[-7.476552,4.314221,2.729617,4.479442],[5.695576,3.811695,2.521090,-8.871289],[9.685052,5.783893,-2.249145,-1.505153],[8.092531,-1.327926,3.580532,-7.656959],[6.085295,3.018139,-2.603469,1.201120],[-0.332557,6.824814,-7.398282,-5.373913],[-3.160027,0.548119,-7.064937,5.716058],[1.249456,-2.921484,-7.478490,-7.202654],[-5.256387,-0.052817,-6.735027,-1.768093],[-1.823492,-9.121801,6.471139,-3.415536],[2.614445,6.186187,9.213818,9.700529],[-5.123521,9.677871,3.831906,-7.330549],[-7.789857,-4.621031,-6.818223,6.514321],[-3.722881,3.744984,-0.371205,0.099065],[7.331620,7.477050,4.819225,5.264060],[-3.837803,-1.162234,-6.016879,1.843245],[6.282823,1.501858,7.978934,2.012099],[-8.888335,3.859419,-2.182037,-2.270922],[3.671460,7.120915,3.187267,-9.192467],[2.603073,2.674854,6.755871,-7.205257],[-9.128363,-3.189896,-6.253779,6.897522],[-2.766391,-7.494256,6.168886,-5.492177],[-3.951034,4.837768,-9.873130,-6.647143],[-3.807765,0.654214,-2.706236,-9.339673],[6.311599,-7.659271,-3.704983,6.686517],[6.519686,-1.845918,-8.909880,6.780388],[-2.901784,-0.220790,7.045256,-8.808898],[-8.505805,0.330429,-3.056110,9.807439],[8.250163,9.067552,5.921268,-5.798409],[-8.406267,0.377609,-3.244478,-7.705575],[7.388366,6.831777,3.106760,-5.040103],[-9.575171,-4.610619,-2.229768,-6.195207],[-7.209496,3.310307,-6.226285,-2.326677],[-7.858174,-6.347304,-7.988642,2.663828],[7.571020,-1.268168,6.275243,4.051219],[1.394735,-8.752471,3.341807,5.331002],[-6.798679,-5.201940,-3.774260,-8.961964],[-7.470969,8.908368,1.922519,4.762769],[-9.558053,7.216803,-3.975614,2.499403],[-2.491904,9.566138,-2.063398,1.511212],[-6.104144,-3.818560,-2.832555,3.554571],[9.972998,-5.435056,-4.026234,2.577499],[5.901624,-0.204733,7.340513,7.708730],[2.805223,-9.418216,6.875860,-0.496214],[7.456530,3.022736,5.091163,-9.488057],[7.297925,3.624205,-3.313109,-9.467748],[3.922175,-4.766129,-7.620316,6.613211],[-4.287858,-1.531434,4.561310,6.242214],[9.029609,1.842000,-2.382301,8.945018],[-1.891561,1.567593,9.705212,-6.774511],[-5.489689,-7.445863,6.544549,-5.867799],[4.163938,3.970385,7.167235,0.151379],[8.066942,-1.025317,-7.136568,-5.170808],[-6.900870,-2.596487,8.491330,3.512817],[8.671388,5.335113,8.199606,-1.311739],[-9.217399,6.451987,5.380894,-6.124974],[0.042005,-2.456254,-9.091656,-6.951993],[-1.275651,-3.971335,-0.065798,3.282852],[3.650869,-9.998547,-9.244524,4.869218],[-6.515658,-9.912083,1.981821,2.675091],[9.195137,2.199964,-3.296409,0.461606],[-2.889244,-3.969869,9.879355,-5.336010],[-3.927174,9.842508,0.729843,5.816189],[3.764850,6.479903,-1.244011,-4.285863],[-0.988697,5.984431,6.166891,8.305444],[2.993358,-0.775903,2.090098,0.609634],[7.019966,-0.040485,-3.964721,7.201042],[-8.930955,-8.626463,6.650659,-3.462349],[-7.602739,-5.410627,-0.147852,7.660842],[9.239232,-5.613394,-3.494673,6.650056],[-6.297857,3.085050,8.706972,4.296082],[1.014531,3.870410,-2.033996,8.921429],[6.472690,-7.115036,9.117459,5.656074],[-2.066602,-3.839883,-0.937920,-2.702208],[6.092269,6.442910,-2.581007,-1.172096],[-9.562395,-0.363534,-2.077874,-7.362308],[0.680832,0.834469,-6.220022,-2.060109],[4.457482,-9.797830,-5.622144,-8.305257],[-9.154879,-2.412426,-2.457007,-2.537115],[-0.152043,2.536775,-6.795657,3.452122],[5.311095,1.413730,2.123586,-8.343088],[-4.239573,-2.429235,9.623590,-0.265250],[-5.100805,5.587402,-8.667163,-0.162510],[-7.821655,2.209989,6.048539,2.024260],[3.077439,-9.647672,-8.958220,4.618371],[4.249393,8.041843,8.246272,-8.825885],[-1.287810,-8.326149,-7.765336,-5.144829],[1.676260,6.661398,-8.764441,3.806485],[6.850313,-9.078711,-5.438906,-6.764027],[-8.921599,-9.803918,-9.530284,5.275505],[-6.795834,7.553280,-0.634293,-4.236298],[6.497699,-4.776353,-1.206633,8.817701],[-2.407339,7.352072,-1.870464,-1.323028],[8.448310,-2.567191,-9.681803,-5.225185],[8.193721,3.381953,1.171426,6.942288],[3.417964,-5.170711,8.876826,-3.163133],[-3.631160,-5.791132,3.480953,5.729924],[-5.447435,-3.385660,1.684141,1.388339],[-9.880817,9.021017,-8.754280,-3.865877],[-7.262299,2.291028,3.018311,7.358272],[4.241338,-8.903797,2.334248,2.991867],[3.021447,-5.060431,1.279088,7.085667],[-9.569988,5.799511,-4.390876,-0.796984],[0.904545,-2.564682,8.012506,-9.532303],[-9.478542,-0.359683,-5.760617,7.001760],[9.397785,-4.598971,4.373575,8.352010],[-3.908172,7.402795,-1.883180,-5.473988],[5.046421,-0.136155,-3.527130,-6.704793],[0.296764,-2.479126,-3.438486,1.457596],[5.544450,-0.523347,-9.012851,-0.270725],[0.490124,8.169564,-7.300293,6.728600],[-3.897656,-8.798161,-1.323448,0.555068],[3.480910,1.930088,1.025735,-6.457814],[-3.921982,-2.923784,-5.727305,-9.790908],[-1.592771,3.791041,5.897692,-6.016848],[0.672287,-8.112539,8.469102,9.399484],[-2.957935,9.264919,-5.720299,-5.327065],[-5.454905,2.243000,-4.295839,-8.278903],[3.693190,2.482210,-5.663979,-0.520058],[-4.135671,7.529575,1.319128,7.115917],[4.656454,1.762176,-6.559763,7.491562],[-4.359417,4.025550,-2.351336,9.330898],[7.542083,-2.531286,9.518639,7.201688],[4.973654,3.844900,-7.948539,-2.578065],[6.097272,4.961992,-1.681594,2.919787],[7.105433,4.823177,-0.416732,9.879133],[7.343420,-4.342734,-2.720345,-9.729670],[-2.673153,-4.199901,-7.227815,8.843682],[0.943601,3.670766,5.058479,-6.498324],[6.869645,-8.841703,1.906159,-9.734862],[8.895410,2.172397,-3.452590,0.942585],[4.033217,1.777849,8.520636,-6.489784],[0.712932,-3.742351,-4.128353,0.863783],[-2.767232,3.808755,0.464251,-7.076018],[-1.575385,1.441244,1.117150,-3.356542],[-1.800661,6.138280,-7.694394,-4.303946],[4.624464,-8.364057,-3.392246,-2.411473],[8.604173,-6.780569,6.552884,7.478907],[-2.543063,-4.461253,0.505986,-5.957872],[8.072782,2.317632,1.460422,8.646646],[-3.776573,-7.241299,-4.696542,0.194952],[6.418364,-9.509156,-9.290834,-3.450271],[-9.548119,2.807051,8.225760,-1.602442],[0.305334,-0.941191,2.945386,3.176354],[8.674415,-0.420252,-8.454169,4.571069],[5.460717,-5.822034,5.683422,-6.328288],[-9.799570,-8.095152,-2.202718,-7.753586],[-1.324006,-8.144513,-6.489037,-4.203460],[-7.604564,8.826167,-1.712393,-9.773609],[0.587788,-9.265358,0.015911,-2.174018],[-4.618341,-2.970160,5.379522,-4.281308],[5.072262,-2.233753,-3.397110,-4.539269],[2.355285,-0.596688,-9.189928,-8.336042],[3.769730,9.166056,6.860506,-8.374702],[-4.837778,-2.282149,5.124951,2.577506],[-0.840613,3.108083,-5.654750,3.419541],[8.441650,-3.920633,-2.710572,2.590718],[0.923611,-2.980420,2.798553,-9.418599],[7.777802,5.003781,0.588142,-7.053175],[-9.200952,-7.933772,5.215640,5.433069],[7.770418,-5.276123,-3.803381,-8.252519],[-9.156910,-3.963576,5.851891,0.027581],[-8.880862,-2.853295,-6.720242,2.042450],[-2.019748,5.335277,5.976360,-3.698146],[-6.440867,-6.613032,1.717237,-9.139517],[3.767632,6.092265,2.571181,-8.039885],[1.642246,4.953253,4.164935,8.439534],[9.943364,3.919105,0.064223,2.631911],[-0.248315,-5.080611,-7.791771,-4.872457],[9.774139,5.379762,-7.360592,-7.751956],[-7.507258,1.493019,-2.856374,7.128250],[-6.524719,-3.243799,-4.544506,4.388247],[8.728628,-4.386157,9.862978,-6.834621],[-1.977858,6.391188,5.753398,1.978087],[-5.988426,2.376859,2.213239,-0.299168],[3.683830,8.474628,-5.603403,-6.463353],[-9.209846,-3.686965,3.588838,-1.934374],[-5.098643,8.466082,-7.156294,2.464641],[8.831467,3.194497,1.192382,-6.334160],[5.728118,-1.249308,5.902142,3.323067],[-4.304675,3.492706,-6.891984,8.984299],[3.644843,-5.143126,5.925798,-7.459838],[-9.958406,9.245724,3.859886,-4.316172],[8.653582,3.309372,-4.851566,-5.711123],[-1.152219,-4.900311,-7.271878,4.093269],[-3.992674,5.453598,7.182337,2.821933],[9.817267,6.183612,-8.732408,0.982399],[-9.585158,-6.027893,-4.886885,1.348458],[-7.980693,4.863629,-0.542301,3.515403],[1.788621,-8.195024,-1.415152,-6.329761],[5.458287,5.871046,-4.346473,9.957040],[0.146482,9.115992,3.383653,-9.396043],[-5.545729,-1.663443,-7.132198,-0.397114],[-2.172127,-2.731005,-1.044126,-0.611576],[-7.242094,2.280843,9.265232,5.387279],[6.215794,-2.274436,-0.868203,-3.296659],[-9.920150,2.471663,-3.124890,-9.849570],[-3.364220,-3.970164,-7.789273,-6.941457],[-4.594058,2.755281,2.149782,-5.694802],[1.465114,2.981556,8.842204,-9.131386],[-1.730363,-5.798838,9.714307,3.801149],[5.188240,-7.432072,-2.030282,-7.377370],[4.558857,-3.381802,-5.501785,2.667522],[4.150783,0.349044,-7.441699,8.933837],[9.350756,-1.010258,-9.760762,7.642012],[6.536949,2.570300,-3.216634,-2.084236],[7.721603,-2.136031,6.783986,2.918635],[-4.115146,3.790657,6.622968,5.207265],[-5.291842,6.180274,4.147830,-3.904621],[9.511748,6.335241,6.831524,2.504278],[-8.396346,-5.724744,0.858531,3.233964],[2.755318,-9.145536,7.373284,7.122099],[7.108884,-2.297593,1.360777,0.488045],[7.989138,8.069662,-2.501474,0.549482],[-6.390091,-8.354367,-7.651174,-0.820215],[-4.306623,-1.104436,-4.334376,8.695395],[-4.835021,2.087930,-1.447765,-3.818734],[8.999481,-1.425873,-1.945324,-7.488352],[-2.766938,-4.746481,-9.940206,-6.583565],[-9.285534,-9.136077,-8.903101,-8.723969],[-0.206346,5.093976,2.680042,-6.779755],[4.592798,-7.633627,-7.930114,-5.008792],[-0.791081,4.501193,5.179816,9.307000],[-1.683820,0.119497,-3.682616,-9.531440],[0.490623,9.001828,1.229318,1.605527],[9.327300,8.483310,-1.334865,-8.116298],[-3.267905,-3.303242,9.747024,0.262655],[6.233521,-4.925138,9.916288,-5.497683],[-3.343675,5.158403,1.415399,-7.164630],[-2.178326,6.140333,-9.897044,4.173098],[5.422955,-9.153866,-4.151999,3.036511],[-1.088282,4.532560,-0.768180,-2.553813],[3.913095,-9.668494,-0.955166,1.964003],[-6.518859,-3.547691,-0.142295,-1.094236],[8.859019,-6.120913,-4.070893,1.144120],[-1.844898,-7.807678,9.420706,5.751564],[-1.185094,1.728261,2.918588,-6.257595],[7.246031,-5.190103,-3.253100,-0.477220],[3.304401,9.663283,-1.082536,5.907018],[9.964387,7.833388,-4.163938,-3.300623],[-1.216200,-6.467842,-0.959442,-5.461115],[4.533494,-1.248224,2.889290,5.206629],[4.214072,-9.847354,5.388717,-6.460879],[-0.552148,0.119068,6.532944,1.278410],[-0.855462,0.406604,-7.037400,-7.404229],[-7.700351,-1.729600,3.236723,-1.457331],[-7.837457,-4.136754,-8.442799,9.044431],[-0.955478,-1.975277,-4.250905,-8.549515],[3.361768,1.517568,3.011796,9.892760],[-1.499103,5.383180,4.079932,4.790377],[-9.828985,0.346541,-4.986095,6.952381],[-6.836831,-7.498098,-9.694640,0.810926],[-6.797766,4.716003,-3.111338,5.987363],[-2.166163,1.422997,5.865269,-0.987217],[-9.311638,-8.744576,-6.600646,-1.780989],[7.613843,9.588009,4.537906,6.687376],[2.952990,9.194249,8.884874,5.491536],[1.275505,2.188468,5.940026,-8.026658],[-6.649603,-2.947062,5.739353,3.818594],[-0.899920,-2.855377,3.245029,7.559527],[-3.308205,-1.913046,-9.825430,-9.722718],[-4.742313,-8.417541,0.460144,-4.382267],[3.571055,-7.190783,8.047734,-6.392578],[-6.401893,1.727742,-6.907826,-3.551437],[8.513583,7.434344,-9.984822,6.035806],[1.173263,-4.013293,-8.339042,-8.026280],[-9.982410,-8.380218,-2.816525,3.430620],[2.233171,-9.127957,6.811176,9.804008],[-2.952840,-0.454346,-6.765900,6.461567],[8.899116,-2.831926,-0.930496,-3.596586],[4.205241,-8.055605,8.961401,-7.835515],[-2.773326,-8.568820,8.853414,-3.113923],[-2.803774,9.006719,-0.690703,8.268049],[-2.339345,-7.335346,-9.590463,6.183319],[7.444751,-5.654189,0.564330,-9.362920],[0.845997,-3.568736,-5.750963,-2.246357],[0.080514,2.084502,2.929248,-0.312538],[-5.640078,-6.626700,3.623653,-0.136966],[-6.575232,2.588672,0.218825,4.023621],[-7.385471,8.924590,8.533768,-4.631589],[0.941628,-7.695660,-0.639344,6.804150],[9.400442,5.275566,6.972364,-6.840195],[-4.567819,-3.964560,2.281009,5.665933],[5.283640,-3.607849,-2.009410,3.867892],[-3.559128,-6.994224,-2.096762,9.110501],[-3.537438,-8.567405,-9.049011,9.651663],[-8.060515,-5.801227,3.900040,-9.862080],[-9.521691,2.066492,4.290002,8.009850],[0.763006,-7.527118,2.415758,3.064470],[-8.274977,5.110241,-4.665346,-1.392749],[-4.295608,-4.830450,-9.396623,-7.319681],[3.937706,8.501864,0.585275,-4.331855],[1.894226,-1.166234,-7.939622,-4.336914],[-4.241010,6.979588,-8.094028,8.215716],[-2.586307,-3.859520,-9.200920,-8.512270],[8.485778,-9.373616,-2.331610,3.502006],[7.340960,-0.640982,9.343365,5.256798],[-4.243019,1.548245,-6.969117,-4.489289],[-3.312959,5.745933,1.819369,0.663031],[1.590622,5.408320,-5.100961,7.488072],[5.186660,-5.982517,-9.892506,-7.490905],[-2.820562,5.892545,-6.736224,-6.171757],[4.215422,-2.516775,0.131487,8.256237],[8.433433,-9.017748,9.070193,-9.924346],[3.554429,9.813553,-8.621012,-4.724408],[7.072096,2.107565,0.038538,7.511422],[7.225166,-6.299787,2.693802,1.372626],[-1.872453,-4.690592,-3.203236,-5.694286],[2.444160,3.925730,0.072061,1.350682],[-7.690902,9.723994,-4.634480,-8.482710],[-9.841065,-8.647280,-9.113670,-6.668695],[6.063765,-0.783437,7.455780,7.802748],[-3.705037,-5.186006,-2.500882,6.008579],[-0.765494,5.988506,7.248722,-9.513453],[-5.465018,4.132686,4.318790,4.803446],[-8.117092,-8.697442,5.187389,1.813084],[-5.156285,8.216219,8.118574,2.191378],[9.645636,-3.052599,-8.991882,-1.384046],[6.777043,5.512772,-2.849713,0.293791],[-3.905669,-0.379110,7.476534,-1.389859],[-6.883450,-6.775182,-4.360780,4.914135],[-0.583454,-0.032818,5.959681,7.606055],[-5.269271,9.949212,-6.708089,7.498784]], dtype = "float64")#candidate|2964|(378, 4)|const|float64
call_2960 = relay.TupleGetItem(func_1829_call(relay.reshape(const_2961.astype('float32'), [1, 11, 13]), relay.reshape(const_2962.astype('float32'), [15, 11, 13]), relay.reshape(const_2963.astype('float64'), []), relay.reshape(const_2964.astype('float64'), [1512,]), ), 2)
call_2965 = relay.TupleGetItem(func_1834_call(relay.reshape(const_2961.astype('float32'), [1, 11, 13]), relay.reshape(const_2962.astype('float32'), [15, 11, 13]), relay.reshape(const_2963.astype('float64'), []), relay.reshape(const_2964.astype('float64'), [1512,]), ), 2)
output = relay.Tuple([bop_2956,call_2960,const_2961,const_2962,const_2963,const_2964,])
output2 = relay.Tuple([bop_2959,call_2965,const_2961,const_2962,const_2963,const_2964,])
func_2968 = relay.Function([var_2955,], output)
mod['func_2968'] = func_2968
mod = relay.transform.InferType()(mod)
var_2969 = relay.var("var_2969", dtype = "int32", shape = (637,))#candidate|2969|(637,)|var|int32
output = func_2968(var_2969)
func_2970 = relay.Function([var_2969], output)
mutated_mod['func_2970'] = func_2970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2728_call = mod.get_global_var('func_2728')
func_2729_call = mutated_mod.get_global_var('func_2729')
call_2979 = relay.TupleGetItem(func_2728_call(), 0)
call_2980 = relay.TupleGetItem(func_2729_call(), 0)
func_2302_call = mod.get_global_var('func_2302')
func_2304_call = mutated_mod.get_global_var('func_2304')
call_2994 = relay.TupleGetItem(func_2302_call(), 0)
call_2995 = relay.TupleGetItem(func_2304_call(), 0)
output = relay.Tuple([call_2979,call_2994,])
output2 = relay.Tuple([call_2980,call_2995,])
func_2998 = relay.Function([], output)
mod['func_2998'] = func_2998
mod = relay.transform.InferType()(mod)
output = func_2998()
func_2999 = relay.Function([], output)
mutated_mod['func_2999'] = func_2999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_3007 = relay.TupleGetItem(func_2645_call(), 0)
call_3008 = relay.TupleGetItem(func_2647_call(), 0)
output = relay.Tuple([call_3007,])
output2 = relay.Tuple([call_3008,])
func_3021 = relay.Function([], output)
mod['func_3021'] = func_3021
mod = relay.transform.InferType()(mod)
output = func_3021()
func_3022 = relay.Function([], output)
mutated_mod['func_3022'] = func_3022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mod.get_global_var('func_2345')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_3025 = relay.TupleGetItem(func_2345_call(), 0)
call_3026 = relay.TupleGetItem(func_2347_call(), 0)
output = relay.Tuple([call_3025,])
output2 = relay.Tuple([call_3026,])
func_3029 = relay.Function([], output)
mod['func_3029'] = func_3029
mod = relay.transform.InferType()(mod)
mutated_mod['func_3029'] = func_3029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3029_call = mutated_mod.get_global_var('func_3029')
call_3030 = func_3029_call()
output = call_3030
func_3031 = relay.Function([], output)
mutated_mod['func_3031'] = func_3031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2228_call = mod.get_global_var('func_2228')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_3045 = relay.TupleGetItem(func_2228_call(), 0)
call_3046 = relay.TupleGetItem(func_2230_call(), 0)
output = call_3045
output2 = call_3046
func_3052 = relay.Function([], output)
mod['func_3052'] = func_3052
mod = relay.transform.InferType()(mod)
mutated_mod['func_3052'] = func_3052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3052_call = mutated_mod.get_global_var('func_3052')
call_3053 = func_3052_call()
output = call_3053
func_3054 = relay.Function([], output)
mutated_mod['func_3054'] = func_3054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2998_call = mod.get_global_var('func_2998')
func_2999_call = mutated_mod.get_global_var('func_2999')
call_3064 = relay.TupleGetItem(func_2998_call(), 1)
call_3065 = relay.TupleGetItem(func_2999_call(), 1)
var_3068 = relay.var("var_3068", dtype = "float32", shape = (12, 3, 7))#candidate|3068|(12, 3, 7)|var|float32
bop_3069 = relay.maximum(call_3064.astype('int64'), var_3068.astype('int64')) # shape=(12, 3, 7)
bop_3072 = relay.maximum(call_3065.astype('int64'), var_3068.astype('int64')) # shape=(12, 3, 7)
output = relay.Tuple([bop_3069,])
output2 = relay.Tuple([bop_3072,])
func_3078 = relay.Function([var_3068,], output)
mod['func_3078'] = func_3078
mod = relay.transform.InferType()(mod)
mutated_mod['func_3078'] = func_3078
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3079 = relay.var("var_3079", dtype = "float32", shape = (12, 3, 7))#candidate|3079|(12, 3, 7)|var|float32
func_3078_call = mutated_mod.get_global_var('func_3078')
call_3080 = func_3078_call(var_3079)
output = call_3080
func_3081 = relay.Function([var_3079], output)
mutated_mod['func_3081'] = func_3081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2212_call = mod.get_global_var('func_2212')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_3083 = relay.TupleGetItem(func_2212_call(), 0)
call_3084 = relay.TupleGetItem(func_2213_call(), 0)
uop_3085 = relay.acos(call_3083.astype('float64')) # shape=(12, 1, 7)
uop_3087 = relay.acos(call_3084.astype('float64')) # shape=(12, 1, 7)
func_3078_call = mod.get_global_var('func_3078')
func_3081_call = mutated_mod.get_global_var('func_3081')
var_3095 = relay.var("var_3095", dtype = "float32", shape = (252,))#candidate|3095|(252,)|var|float32
call_3094 = relay.TupleGetItem(func_3078_call(relay.reshape(var_3095.astype('float32'), [12, 3, 7])), 0)
call_3096 = relay.TupleGetItem(func_3081_call(relay.reshape(var_3095.astype('float32'), [12, 3, 7])), 0)
func_1137_call = mod.get_global_var('func_1137')
func_1139_call = mutated_mod.get_global_var('func_1139')
const_3108 = relay.const(-7, dtype = "uint16")#candidate|3108|()|const|uint16
call_3107 = relay.TupleGetItem(func_1137_call(relay.reshape(const_3108.astype('uint16'), [])), 0)
call_3109 = relay.TupleGetItem(func_1139_call(relay.reshape(const_3108.astype('uint16'), [])), 0)
output = relay.Tuple([uop_3085,call_3094,var_3095,call_3107,const_3108,])
output2 = relay.Tuple([uop_3087,call_3096,var_3095,call_3109,const_3108,])
func_3112 = relay.Function([var_3095,], output)
mod['func_3112'] = func_3112
mod = relay.transform.InferType()(mod)
mutated_mod['func_3112'] = func_3112
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3113 = relay.var("var_3113", dtype = "float32", shape = (252,))#candidate|3113|(252,)|var|float32
func_3112_call = mutated_mod.get_global_var('func_3112')
call_3114 = func_3112_call(var_3113)
output = call_3114
func_3115 = relay.Function([var_3113], output)
mutated_mod['func_3115'] = func_3115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2998_call = mod.get_global_var('func_2998')
func_2999_call = mutated_mod.get_global_var('func_2999')
call_3125 = relay.TupleGetItem(func_2998_call(), 1)
call_3126 = relay.TupleGetItem(func_2999_call(), 1)
output = call_3125
output2 = call_3126
func_3129 = relay.Function([], output)
mod['func_3129'] = func_3129
mod = relay.transform.InferType()(mod)
mutated_mod['func_3129'] = func_3129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3129_call = mutated_mod.get_global_var('func_3129')
call_3130 = func_3129_call()
output = call_3130
func_3131 = relay.Function([], output)
mutated_mod['func_3131'] = func_3131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3129_call = mod.get_global_var('func_3129')
func_3131_call = mutated_mod.get_global_var('func_3131')
call_3153 = func_3129_call()
call_3154 = func_3129_call()
var_3159 = relay.var("var_3159", dtype = "float32", shape = (12, 13, 7))#candidate|3159|(12, 13, 7)|var|float32
bop_3160 = relay.equal(call_3153.astype('bool'), var_3159.astype('bool')) # shape=(12, 13, 7)
bop_3163 = relay.equal(call_3154.astype('bool'), var_3159.astype('bool')) # shape=(12, 13, 7)
bop_3172 = relay.greater(call_3153.astype('bool'), bop_3160.astype('bool')) # shape=(12, 13, 7)
bop_3175 = relay.greater(call_3154.astype('bool'), bop_3163.astype('bool')) # shape=(12, 13, 7)
uop_3177 = relay.sinh(call_3153.astype('float64')) # shape=(12, 1, 7)
uop_3179 = relay.sinh(call_3154.astype('float64')) # shape=(12, 1, 7)
output = relay.Tuple([bop_3172,uop_3177,])
output2 = relay.Tuple([bop_3175,uop_3179,])
func_3196 = relay.Function([var_3159,], output)
mod['func_3196'] = func_3196
mod = relay.transform.InferType()(mod)
var_3197 = relay.var("var_3197", dtype = "float32", shape = (12, 13, 7))#candidate|3197|(12, 13, 7)|var|float32
output = func_3196(var_3197)
func_3198 = relay.Function([var_3197], output)
mutated_mod['func_3198'] = func_3198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3052_call = mod.get_global_var('func_3052')
func_3054_call = mutated_mod.get_global_var('func_3054')
call_3230 = func_3052_call()
call_3231 = func_3052_call()
output = call_3230
output2 = call_3231
func_3232 = relay.Function([], output)
mod['func_3232'] = func_3232
mod = relay.transform.InferType()(mod)
mutated_mod['func_3232'] = func_3232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3232_call = mutated_mod.get_global_var('func_3232')
call_3233 = func_3232_call()
output = call_3233
func_3234 = relay.Function([], output)
mutated_mod['func_3234'] = func_3234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_3275 = func_2154_call()
call_3276 = func_2154_call()
var_3303 = relay.var("var_3303", dtype = "float64", shape = (12, 11, 7))#candidate|3303|(12, 11, 7)|var|float64
bop_3304 = relay.greater(call_3275.astype('bool'), var_3303.astype('bool')) # shape=(12, 11, 7)
bop_3307 = relay.greater(call_3276.astype('bool'), var_3303.astype('bool')) # shape=(12, 11, 7)
bop_3308 = relay.bitwise_and(bop_3304.astype('int8'), relay.reshape(var_3303.astype('int8'), relay.shape_of(bop_3304))) # shape=(12, 11, 7)
bop_3311 = relay.bitwise_and(bop_3307.astype('int8'), relay.reshape(var_3303.astype('int8'), relay.shape_of(bop_3307))) # shape=(12, 11, 7)
var_3312 = relay.var("var_3312", dtype = "int8", shape = (12, 11, 7))#candidate|3312|(12, 11, 7)|var|int8
bop_3313 = relay.power(bop_3308.astype('float32'), relay.reshape(var_3312.astype('float32'), relay.shape_of(bop_3308))) # shape=(12, 11, 7)
bop_3316 = relay.power(bop_3311.astype('float32'), relay.reshape(var_3312.astype('float32'), relay.shape_of(bop_3311))) # shape=(12, 11, 7)
output = bop_3313
output2 = bop_3316
func_3323 = relay.Function([var_3303,var_3312,], output)
mod['func_3323'] = func_3323
mod = relay.transform.InferType()(mod)
mutated_mod['func_3323'] = func_3323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3323_call = mutated_mod.get_global_var('func_3323')
var_3325 = relay.var("var_3325", dtype = "float64", shape = (12, 11, 7))#candidate|3325|(12, 11, 7)|var|float64
var_3326 = relay.var("var_3326", dtype = "int8", shape = (12, 11, 7))#candidate|3326|(12, 11, 7)|var|int8
call_3324 = func_3323_call(var_3325,var_3326,)
output = call_3324
func_3327 = relay.Function([var_3325,var_3326,], output)
mutated_mod['func_3327'] = func_3327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3052_call = mod.get_global_var('func_3052')
func_3054_call = mutated_mod.get_global_var('func_3054')
call_3335 = func_3052_call()
call_3336 = func_3052_call()
var_3346 = relay.var("var_3346", dtype = "float32", shape = (12, 11, 7))#candidate|3346|(12, 11, 7)|var|float32
bop_3347 = relay.bitwise_xor(call_3335.astype('uint32'), var_3346.astype('uint32')) # shape=(12, 11, 7)
bop_3350 = relay.bitwise_xor(call_3336.astype('uint32'), var_3346.astype('uint32')) # shape=(12, 11, 7)
func_3323_call = mod.get_global_var('func_3323')
func_3327_call = mutated_mod.get_global_var('func_3327')
call_3354 = func_3323_call(relay.reshape(bop_3347.astype('float64'), [12, 11, 7]), relay.reshape(var_3346.astype('int8'), [12, 11, 7]), )
call_3355 = func_3323_call(relay.reshape(bop_3347.astype('float64'), [12, 11, 7]), relay.reshape(var_3346.astype('int8'), [12, 11, 7]), )
func_3112_call = mod.get_global_var('func_3112')
func_3115_call = mutated_mod.get_global_var('func_3115')
var_3363 = relay.var("var_3363", dtype = "float32", shape = (126, 2))#candidate|3363|(126, 2)|var|float32
call_3362 = relay.TupleGetItem(func_3112_call(relay.reshape(var_3363.astype('float32'), [252,])), 3)
call_3364 = relay.TupleGetItem(func_3115_call(relay.reshape(var_3363.astype('float32'), [252,])), 3)
uop_3380 = relay.log2(call_3362.astype('float32')) # shape=(12, 4, 4)
uop_3382 = relay.log2(call_3364.astype('float32')) # shape=(12, 4, 4)
uop_3391 = relay.rsqrt(uop_3380.astype('float64')) # shape=(12, 4, 4)
uop_3393 = relay.rsqrt(uop_3382.astype('float64')) # shape=(12, 4, 4)
output = relay.Tuple([bop_3347,call_3354,var_3363,uop_3391,])
output2 = relay.Tuple([bop_3350,call_3355,var_3363,uop_3393,])
func_3401 = relay.Function([var_3346,var_3363,], output)
mod['func_3401'] = func_3401
mod = relay.transform.InferType()(mod)
mutated_mod['func_3401'] = func_3401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3401_call = mutated_mod.get_global_var('func_3401')
var_3403 = relay.var("var_3403", dtype = "float32", shape = (12, 11, 7))#candidate|3403|(12, 11, 7)|var|float32
var_3404 = relay.var("var_3404", dtype = "float32", shape = (126, 2))#candidate|3404|(126, 2)|var|float32
call_3402 = func_3401_call(var_3403,var_3404,)
output = call_3402
func_3405 = relay.Function([var_3403,var_3404,], output)
mutated_mod['func_3405'] = func_3405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3232_call = mod.get_global_var('func_3232')
func_3234_call = mutated_mod.get_global_var('func_3234')
call_3410 = func_3232_call()
call_3411 = func_3232_call()
var_3417 = relay.var("var_3417", dtype = "float32", shape = (12, 14, 7))#candidate|3417|(12, 14, 7)|var|float32
bop_3418 = relay.add(call_3410.astype('int8'), var_3417.astype('int8')) # shape=(12, 14, 7)
bop_3421 = relay.add(call_3411.astype('int8'), var_3417.astype('int8')) # shape=(12, 14, 7)
output = bop_3418
output2 = bop_3421
func_3425 = relay.Function([var_3417,], output)
mod['func_3425'] = func_3425
mod = relay.transform.InferType()(mod)
var_3426 = relay.var("var_3426", dtype = "float32", shape = (12, 14, 7))#candidate|3426|(12, 14, 7)|var|float32
output = func_3425(var_3426)
func_3427 = relay.Function([var_3426], output)
mutated_mod['func_3427'] = func_3427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3029_call = mod.get_global_var('func_3029')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_3468 = relay.TupleGetItem(func_3029_call(), 0)
call_3469 = relay.TupleGetItem(func_3031_call(), 0)
uop_3500 = relay.asinh(call_3468.astype('float32')) # shape=(12, 14, 9)
uop_3502 = relay.asinh(call_3469.astype('float32')) # shape=(12, 14, 9)
func_3078_call = mod.get_global_var('func_3078')
func_3081_call = mutated_mod.get_global_var('func_3081')
var_3507 = relay.var("var_3507", dtype = "float32", shape = (252,))#candidate|3507|(252,)|var|float32
call_3506 = relay.TupleGetItem(func_3078_call(relay.reshape(var_3507.astype('float32'), [12, 3, 7])), 0)
call_3508 = relay.TupleGetItem(func_3081_call(relay.reshape(var_3507.astype('float32'), [12, 3, 7])), 0)
func_3029_call = mod.get_global_var('func_3029')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_3511 = relay.TupleGetItem(func_3029_call(), 0)
call_3512 = relay.TupleGetItem(func_3031_call(), 0)
uop_3513 = relay.sigmoid(uop_3500.astype('float32')) # shape=(12, 14, 9)
uop_3515 = relay.sigmoid(uop_3502.astype('float32')) # shape=(12, 14, 9)
func_1474_call = mod.get_global_var('func_1474')
func_1477_call = mutated_mod.get_global_var('func_1477')
var_3517 = relay.var("var_3517", dtype = "uint64", shape = (256,))#candidate|3517|(256,)|var|uint64
call_3516 = relay.TupleGetItem(func_1474_call(relay.reshape(var_3517.astype('uint64'), [2, 8, 16])), 5)
call_3518 = relay.TupleGetItem(func_1477_call(relay.reshape(var_3517.astype('uint64'), [2, 8, 16])), 5)
output = relay.Tuple([call_3506,var_3507,call_3511,uop_3513,call_3516,var_3517,])
output2 = relay.Tuple([call_3508,var_3507,call_3512,uop_3515,call_3518,var_3517,])
func_3519 = relay.Function([var_3507,var_3517,], output)
mod['func_3519'] = func_3519
mod = relay.transform.InferType()(mod)
var_3520 = relay.var("var_3520", dtype = "float32", shape = (252,))#candidate|3520|(252,)|var|float32
var_3521 = relay.var("var_3521", dtype = "uint64", shape = (256,))#candidate|3521|(256,)|var|uint64
output = func_3519(var_3520,var_3521,)
func_3522 = relay.Function([var_3520,var_3521,], output)
mutated_mod['func_3522'] = func_3522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_3542 = relay.TupleGetItem(func_2645_call(), 2)
call_3543 = relay.TupleGetItem(func_2647_call(), 2)
output = call_3542
output2 = call_3543
func_3546 = relay.Function([], output)
mod['func_3546'] = func_3546
mod = relay.transform.InferType()(mod)
output = func_3546()
func_3547 = relay.Function([], output)
mutated_mod['func_3547'] = func_3547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_3559 = relay.TupleGetItem(func_2645_call(), 0)
call_3560 = relay.TupleGetItem(func_2647_call(), 0)
func_3029_call = mod.get_global_var('func_3029')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_3571 = relay.TupleGetItem(func_3029_call(), 0)
call_3572 = relay.TupleGetItem(func_3031_call(), 0)
func_2968_call = mod.get_global_var('func_2968')
func_2970_call = mutated_mod.get_global_var('func_2970')
const_3576 = relay.const([[9,9,-4,-4,-7,-10,-2,-3,5,-1,-3,3,2,-5,-1,6,8,5,-4,6,9,6,-9,10,5,8,-10,4,-4,-10,-1,-2,-2,2,6,-9,-1,8,-4,-6,8,6,5,-9,8,-4,6,9,-5,-5,-8,5,9,-1,-10,1,1,7,7,6,7,-6,8,-2,8,-1,10,-8,-9,-4,-8,-10,-2,6,7,9,-4,9,-2,-2,-8,9,-10,9,-5,-10,-7,1,-7,3,1,-8,-8,-8,9,3,4,5,6,-3,6,4,-4,-7,4,-7,-1,-1,-5,1,8,9,-5,-5,-10,-4,4,2,-2,10,-8,-2,-5,7,-1,-2,-2,10,7,8,4,6,1,5,-8,9,6,-4,-4,1,-1,4,-5,-1,-10,2,3,3,7,-7,-4,10,10,1,6,9,4,-1,8,3,-2,-3,4,-9,3,-5,-4,9,8,-10,-1,-2,-2,7,-4,9,7,1,7,4,5,9,4,-5,-9,9,-4,6,-3,-8,-3,-10,-1,4,10,2,-7,5,10,-6,-3,-8,5,2,8,4,9,4,5,-9,-3,-10,-3,-4,7,9,-6,-6,2,-8,10,-4,5,10,-3,7,-2,-8,4,-8,-3,-10,6,9,-5,-10,8,5,-1,5,6,2,1,-4,4,-5,-9,-8,-10,-4,-6,2,-10,9,-4,7,-8,-9,-9,-3,7,9,-10,2,4,7,-2,-5,-7,-8,-1,-2,-2,-8,-6,-3,7,-8,9,-1,5,4,-6,-4,5,4,4,5,-7,-8,-3,5,-3,1,2,-4,9,-6,4,7,-1,5,9,3,4,10,-2,-1,7,-4,1,5,5,4,1,-9,4,-8,-6,8,4,-9,-2,-1,2,7,-7,-5,2,-2,-3,-5,-6,2,6,4,-10,8,3,1,9,9,8,6,3,5,8,-5,-3,-8,6,10,-7,8,-10,-5,6,-4,-10,-8,-8,-1,3,3,-2,6,3,6,6,9,-4,4,-2,6,-9,-9,7,3,7,-5,-7,8,1,-1,9,-5,-6,-3,-9,2,-3,-5,2,-10,6,-9,10,-2,-3,-10,-4,-5,5,-1,-7,4,-6,10,-9,-9,8,7,-5,-7,-5,-3,3,9,8,-4,-7,-6,-9,2,-9,-4,-9,2,-3,6,-7,5,7,-8,6,-9,-10,5,-3,9,10,-8,-4,4,-1,-3,9,10,4,10,-2,2,-6,-3,-5,-1,-6,3,9,-9,-10,-9,-2,7,-7,-7,-8,2,7,-4,-8,7,-4,-3,-10,3,7,-8,-3,5,4,10,1,7,-5,-10,6,6,10,2,4,-9,-7,9,4,9,-6,-9,9,4,-6,9,-4,9,6,3,7,10,2,4,-3,-3,2,-7,9,8,-8,5,-2,5,8,-6,1,-8,3,-9,7,-5,-6,-1,-4,2,4,3,4,3,-5,4,5,8,-6,-6,9,-1,6,3,10,3,3,-1,-5,8,3,7,-3,-10,2,-1,9,-7,3,4,-5,9,-2,-6,7,6,-5,-10,6,9,-5,-10,-2,9,8,1,10,-3,2,-9,3,-1,-8,7,10,-3,-6,-9,-9,4,-2,3,6,-4,7,-9,1,-7,2,5,9,7,1,4,6,7,4,2,8,-10,1,3,1,3,5,-3,3,10,10,4,-1,-6,1,-4,-5,-3,-6,-2,-8,8,10,10,5,-7,-5]], dtype = "int32")#candidate|3576|(1, 637)|const|int32
call_3575 = relay.TupleGetItem(func_2968_call(relay.reshape(const_3576.astype('int32'), [637,])), 1)
call_3577 = relay.TupleGetItem(func_2970_call(relay.reshape(const_3576.astype('int32'), [637,])), 1)
func_1664_call = mod.get_global_var('func_1664')
func_1667_call = mutated_mod.get_global_var('func_1667')
call_3578 = relay.TupleGetItem(func_1664_call(relay.reshape(const_3576.astype('int32'), [7, 13, 7]), relay.reshape(const_3576.astype('int32'), [7, 13, 7]), ), 1)
call_3579 = relay.TupleGetItem(func_1667_call(relay.reshape(const_3576.astype('int32'), [7, 13, 7]), relay.reshape(const_3576.astype('int32'), [7, 13, 7]), ), 1)
func_2190_call = mod.get_global_var('func_2190')
func_2195_call = mutated_mod.get_global_var('func_2195')
var_3587 = relay.var("var_3587", dtype = "uint64", shape = (112,))#candidate|3587|(112,)|var|uint64
call_3586 = relay.TupleGetItem(func_2190_call(relay.reshape(call_3575.astype('uint64'), []), relay.reshape(var_3587.astype('uint64'), [1, 16, 7]), relay.reshape(call_3571.astype('float64'), [1512,]), relay.reshape(call_3571.astype('float32'), [1512,]), ), 4)
call_3588 = relay.TupleGetItem(func_2195_call(relay.reshape(call_3575.astype('uint64'), []), relay.reshape(var_3587.astype('uint64'), [1, 16, 7]), relay.reshape(call_3571.astype('float64'), [1512,]), relay.reshape(call_3571.astype('float32'), [1512,]), ), 4)
func_2302_call = mod.get_global_var('func_2302')
func_2304_call = mutated_mod.get_global_var('func_2304')
call_3599 = relay.TupleGetItem(func_2302_call(), 0)
call_3600 = relay.TupleGetItem(func_2304_call(), 0)
func_3112_call = mod.get_global_var('func_3112')
func_3115_call = mutated_mod.get_global_var('func_3115')
var_3608 = relay.var("var_3608", dtype = "float32", shape = (252,))#candidate|3608|(252,)|var|float32
call_3607 = relay.TupleGetItem(func_3112_call(relay.reshape(var_3608.astype('float32'), [252,])), 2)
call_3609 = relay.TupleGetItem(func_3115_call(relay.reshape(var_3608.astype('float32'), [252,])), 2)
func_2302_call = mod.get_global_var('func_2302')
func_2304_call = mutated_mod.get_global_var('func_2304')
call_3625 = relay.TupleGetItem(func_2302_call(), 1)
call_3626 = relay.TupleGetItem(func_2304_call(), 1)
uop_3631 = relay.acosh(const_3576.astype('float32')) # shape=(1, 637)
output = relay.Tuple([call_3559,call_3571,call_3575,call_3578,call_3586,var_3587,call_3599,call_3607,var_3608,call_3625,uop_3631,])
output2 = relay.Tuple([call_3560,call_3572,call_3577,call_3579,call_3588,var_3587,call_3600,call_3609,var_3608,call_3626,uop_3631,])
func_3633 = relay.Function([var_3587,var_3608,], output)
mod['func_3633'] = func_3633
mod = relay.transform.InferType()(mod)
mutated_mod['func_3633'] = func_3633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3633_call = mutated_mod.get_global_var('func_3633')
var_3635 = relay.var("var_3635", dtype = "uint64", shape = (112,))#candidate|3635|(112,)|var|uint64
var_3636 = relay.var("var_3636", dtype = "float32", shape = (252,))#candidate|3636|(252,)|var|float32
call_3634 = func_3633_call(var_3635,var_3636,)
output = call_3634
func_3637 = relay.Function([var_3635,var_3636,], output)
mutated_mod['func_3637'] = func_3637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3129_call = mod.get_global_var('func_3129')
func_3131_call = mutated_mod.get_global_var('func_3131')
call_3648 = func_3129_call()
call_3649 = func_3129_call()
output = relay.Tuple([call_3648,])
output2 = relay.Tuple([call_3649,])
func_3656 = relay.Function([], output)
mod['func_3656'] = func_3656
mod = relay.transform.InferType()(mod)
output = func_3656()
func_3657 = relay.Function([], output)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2228_call = mod.get_global_var('func_2228')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_3716 = relay.TupleGetItem(func_2228_call(), 0)
call_3717 = relay.TupleGetItem(func_2230_call(), 0)
var_3718 = relay.var("var_3718", dtype = "float32", shape = (12, 3, 7))#candidate|3718|(12, 3, 7)|var|float32
bop_3719 = relay.left_shift(call_3716.astype('int8'), var_3718.astype('int8')) # shape=(12, 3, 7)
bop_3722 = relay.left_shift(call_3717.astype('int8'), var_3718.astype('int8')) # shape=(12, 3, 7)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_3723 = relay.TupleGetItem(func_2645_call(), 2)
call_3724 = relay.TupleGetItem(func_2647_call(), 2)
output = relay.Tuple([bop_3719,call_3723,])
output2 = relay.Tuple([bop_3722,call_3724,])
func_3741 = relay.Function([var_3718,], output)
mod['func_3741'] = func_3741
mod = relay.transform.InferType()(mod)
mutated_mod['func_3741'] = func_3741
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3742 = relay.var("var_3742", dtype = "float32", shape = (12, 3, 7))#candidate|3742|(12, 3, 7)|var|float32
func_3741_call = mutated_mod.get_global_var('func_3741')
call_3743 = func_3741_call(var_3742)
output = call_3743
func_3744 = relay.Function([var_3742], output)
mutated_mod['func_3744'] = func_3744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3129_call = mod.get_global_var('func_3129')
func_3131_call = mutated_mod.get_global_var('func_3131')
call_3766 = func_3129_call()
call_3767 = func_3129_call()
var_3801 = relay.var("var_3801", dtype = "float32", shape = (12, 15, 7))#candidate|3801|(12, 15, 7)|var|float32
bop_3802 = relay.greater_equal(call_3766.astype('bool'), var_3801.astype('bool')) # shape=(12, 15, 7)
bop_3805 = relay.greater_equal(call_3767.astype('bool'), var_3801.astype('bool')) # shape=(12, 15, 7)
bop_3806 = relay.less(bop_3802.astype('bool'), call_3766.astype('bool')) # shape=(12, 15, 7)
bop_3809 = relay.less(bop_3805.astype('bool'), call_3767.astype('bool')) # shape=(12, 15, 7)
var_3814 = relay.var("var_3814", dtype = "bool", shape = (12, 15, 7))#candidate|3814|(12, 15, 7)|var|bool
bop_3815 = relay.maximum(bop_3806.astype('uint64'), relay.reshape(var_3814.astype('uint64'), relay.shape_of(bop_3806))) # shape=(12, 15, 7)
bop_3818 = relay.maximum(bop_3809.astype('uint64'), relay.reshape(var_3814.astype('uint64'), relay.shape_of(bop_3809))) # shape=(12, 15, 7)
uop_3827 = relay.sin(call_3766.astype('float32')) # shape=(12, 1, 7)
uop_3829 = relay.sin(call_3767.astype('float32')) # shape=(12, 1, 7)
uop_3830 = relay.cosh(uop_3827.astype('float32')) # shape=(12, 1, 7)
uop_3832 = relay.cosh(uop_3829.astype('float32')) # shape=(12, 1, 7)
func_1829_call = mod.get_global_var('func_1829')
func_1834_call = mutated_mod.get_global_var('func_1834')
var_3855 = relay.var("var_3855", dtype = "float32", shape = (143,))#candidate|3855|(143,)|var|float32
var_3856 = relay.var("var_3856", dtype = "float32", shape = (2145,))#candidate|3856|(2145,)|var|float32
var_3857 = relay.var("var_3857", dtype = "float64", shape = ())#candidate|3857|()|var|float64
const_3858 = relay.const([-6.945058,4.774712,-0.960343,9.295301,3.424255,-7.166878,-5.517474,-9.464549,8.943529,-5.744904,7.959108,5.741316,7.136969,-1.994867,-5.786579,3.654000,2.242867,2.586259,5.312889,4.859832,8.826590,5.531510,9.590469,-1.158346,-6.860255,-3.154742,5.542935,-9.997512,4.233941,8.772796,1.685844,6.795121,6.457126,-3.626787,2.182436,6.967043,1.022553,-6.217054,-5.832028,2.284641,-4.832199,-6.516600,5.890110,-7.685109,-6.398018,-4.500911,-7.243238,-9.624031,-6.652205,-6.756931,-6.932928,7.819210,6.361855,-0.605569,-0.212688,-3.915673,-2.037313,-5.295955,-7.236237,-5.827123,-7.480986,-8.110110,-7.406936,-0.296490,2.254537,3.681297,-5.161512,3.287613,-8.277934,3.406969,9.133196,5.522842,7.360157,-5.073639,1.914351,-9.650805,6.877525,-8.121792,4.445764,0.325685,-7.510462,-4.144783,2.855542,-3.239743,-3.166182,-4.718077,4.072366,2.270854,5.778961,-0.709548,-2.375830,-8.247936,7.083447,-4.982251,2.653029,2.573530,-7.062231,-2.919821,3.098836,4.549288,-8.520011,-0.219405,-2.457089,-1.000343,4.141668,-1.021214,8.118109,3.677777,8.819429,7.996696,5.920357,-0.347939,8.076477,4.795992,1.401033,-5.350004,-9.530283,-0.554573,-2.610551,-3.505752,8.331604,6.242381,1.154302,-0.820063,-8.406328,5.021135,-3.603396,8.033878,-7.417366,9.914366,-3.874842,-2.714582,-5.274820,0.823788,4.458061,-9.239321,-1.052662,-6.196853,-0.855030,-4.809599,-7.767270,5.876017,-5.472042,-2.988988,6.508333,-3.142958,3.207139,8.147201,9.372814,-8.770470,-7.996198,-2.632733,3.335517,7.859464,5.340308,-0.245165,7.374777,-3.249149,7.367389,5.860318,-1.021268,-2.103170,-1.537338,9.892265,-5.510979,-8.894328,-0.455567,2.802915,6.557359,-7.726355,-5.704241,3.719276,-4.947071,6.772047,-7.579125,-6.697050,2.375010,3.015104,-0.789718,3.022418,-5.978494,-1.685388,-4.622967,-6.262465,-4.765892,-9.345450,-9.381133,-7.717756,-8.707946,-0.410321,-3.042769,8.992652,4.682254,7.889788,-1.602494,-7.728986,5.296389,7.985175,-0.136997,7.231451,-0.548422,7.000377,3.492197,1.937910,-7.300652,1.757082,3.523868,-7.618432,5.212573,-9.760640,-2.616005,-3.983548,3.918863,-5.091212,-4.428394,-0.880046,7.514522,9.026593,-1.486501,-1.819300,-9.705943,9.704768,8.076125,-7.831832,-4.626841,-9.933074,9.650713,-5.064314,-6.925748,-3.336312,-6.134786,-1.153040,-3.328620,1.578754,-7.639404,9.100107,4.046501,-8.123041,-2.206203,4.870024,-2.697798,-6.307940,-3.819838,-4.687558,7.075823,5.410542,-6.804056,1.620532,8.335325,4.041364,8.813558,-4.034861,3.586623,1.989276,5.951192,-8.770400,-0.799890,6.107449,9.748031,3.999938,-5.111122,3.544896,-8.107291,-1.319060,3.720631,-5.634153,-5.526140,7.466214,1.567031,-3.533416,0.649140,-4.783316,6.729859,-2.569557,-0.893237,6.171078,1.640211,3.692342,3.393767,5.780237,5.984092,5.737955,3.375967,8.282620,4.246389,2.981163,6.538167,-7.801831,-0.978407,3.020091,8.873915,7.225876,4.403140,-5.629998,-9.772704,8.244398,4.654650,-9.218690,1.651174,-0.450287,1.943222,4.941279,3.218655,6.073141,5.170446,-3.689056,5.905439,4.234333,-0.714040,1.527356,4.007608,-3.845353,-4.376409,7.239792,4.440542,-4.686703,-4.160832,7.623357,-8.868308,6.342101,2.351119,-3.772641,5.229365,-5.492679,7.289170,9.580303,-1.586906,-3.116114,-0.340690,1.106920,1.555502,-6.765750,3.806241,1.897910,-4.090567,3.878103,8.036527,-5.847592,8.210435,-9.908836,-1.090724,-0.954301,-9.348967,3.139160,-0.250280,-7.493788,1.293616,3.797596,-3.155698,-7.202085,2.406113,-5.285967,8.647354,-8.616298,0.732345,7.947805,-0.994706,8.303195,-5.527359,6.930972,0.891237,-9.042396,-6.479413,3.844934,0.192415,9.369203,-7.055713,1.891695,-4.284631,-0.796175,-0.905260,6.034524,7.162699,1.143831,-0.851324,9.761123,-6.745526,-4.020513,1.208241,6.250028,0.700824,-2.561926,5.111070,0.122550,4.424626,8.688172,3.499705,-0.979072,3.656598,6.784415,-7.131305,7.768725,-1.855843,6.520980,-2.166511,-4.628136,8.510224,7.965638,-1.549887,-0.511682,-0.391004,-7.265453,-9.203984,6.621921,-9.071698,7.404124,2.384016,-4.238314,-1.522321,0.914661,-4.270232,-1.245429,-1.173197,-5.522939,-6.994255,-1.025577,1.021238,7.449698,6.906739,0.982135,7.325245,-3.840350,-7.568725,-9.518125,-7.369075,2.495212,-8.735565,-1.116594,8.112951,4.767922,2.391238,-6.156774,-0.541243,4.930057,-0.427575,-6.508917,1.424175,-9.342754,9.114837,4.685026,0.002229,-8.458216,-0.533348,-5.871444,-2.672874,-3.440184,-6.614477,-7.786882,-3.127920,-2.976991,-1.959102,-8.138543,-3.903904,4.933328,8.578602,2.644632,8.097430,-6.353260,3.946894,7.761107,0.678828,6.332968,2.880939,-4.187528,3.002456,-0.934540,5.665320,-2.357039,-6.659394,0.263043,-5.726566,-6.186648,7.689968,2.663032,9.662638,-1.173370,-2.697764,-0.156591,8.267990,6.610957,-5.399472,-9.128427,-5.852966,1.030099,0.664974,6.607047,6.822588,5.435738,-5.457750,8.102605,-9.616102,-6.075222,-6.741023,-0.878260,-2.724390,-5.457380,1.238932,-5.613582,4.226605,-4.047344,1.109555,-7.459974,5.463402,9.213566,3.587409,-0.653937,-4.628105,-6.318811,3.873283,-3.343928,4.879415,-6.466362,2.916565,-5.019248,-7.779255,0.548045,-0.322332,3.825234,-8.109357,-1.324908,7.603925,3.669861,8.777572,-7.234078,-0.449227,-6.904877,-3.546768,-0.831221,-9.154956,-2.522505,-6.616268,-8.105712,-9.101730,-9.519012,-8.827838,-9.575623,3.937942,2.773960,7.502687,-4.786871,-6.034268,0.914968,3.373440,-6.481264,7.220680,7.999558,3.518415,-1.143720,8.283115,-2.998730,6.810195,8.302611,-1.509377,-9.782777,8.651768,2.080558,7.881568,-2.892952,-3.924994,-1.422745,3.009045,4.047307,2.405873,-4.371117,3.998351,-8.213967,2.168342,1.057946,-9.266351,-0.756966,-8.716973,9.228085,-2.937869,1.762748,4.405577,-8.667591,0.760470,9.282492,-3.836977,9.367168,-7.068785,-4.514532,9.277270,2.001302,2.989795,5.169543,4.157713,-3.121673,-8.525657,-3.320972,2.026398,8.202695,9.665727,-1.755854,-5.664352,5.658748,6.662085,5.768023,5.755922,0.036662,-1.599639,0.236401,8.582705,4.975498,1.724569,5.889795,0.568779,5.406063,0.834804,-6.525519,7.708250,-7.363914,1.357652,3.508965,-6.952225,-8.068027,-2.893052,-2.882537,0.611338,2.044388,-2.564091,2.591264,6.495698,-3.092465,-2.455154,1.553951,-7.017365,5.258662,7.125021,-7.563741,0.880581,-2.481888,-7.978449,9.698004,-8.877960,-1.658726,-1.512657,-5.793122,-1.552866,-2.011138,8.250856,-1.053585,-8.029455,-9.192852,6.758462,7.406027,5.830323,-8.870601,9.575259,5.015165,-8.353187,-3.782490,2.759989,6.500024,2.379116,6.228344,2.918903,-6.337945,7.843255,4.696491,9.692290,3.579236,-9.677253,2.412698,7.656672,2.013191,-3.962995,-7.701596,5.894951,-0.069301,-5.163393,8.132803,4.498472,5.184481,-7.331134,0.652482,4.191104,-3.738271,-4.478039,9.001406,-5.488507,-0.958376,-7.428445,8.583041,-2.665128,-7.421474,3.008467,-1.402828,7.128301,1.659126,-5.654935,-1.070713,3.772224,8.223634,-1.916453,1.578334,6.884690,6.831264,1.721268,7.378678,-4.740314,-9.913376,-5.206610,7.441911,-9.331310,4.166540,6.002040,-1.189225,2.843860,3.812094,6.297408,-2.605750,-7.995045,-2.845809,-1.957941,7.117383,-7.181612,-7.232787,-3.210902,-8.032835,-7.968628,7.730019,5.415777,-9.719017,6.538263,-4.544121,6.661825,8.765295,5.280762,4.240577,-0.606006,-2.412114,-6.821851,7.996125,-2.655032,6.585486,6.768509,5.492309,-8.148662,5.927463,6.235114,-4.072248,5.728066,-1.160611,-4.490980,-6.177013,-1.116440,1.896085,-3.643899,8.136032,-4.117635,0.913446,7.946000,5.824303,7.454156,3.786882,-2.590641,4.347706,7.271788,-1.252973,1.473425,-5.137504,-1.156074,-8.770299,-1.607441,3.536971,-5.301820,6.680946,0.924541,2.743209,8.165588,3.314888,7.021257,3.669655,-8.213177,-7.880082,1.927852,8.209034,-6.557024,-1.553737,1.862895,0.366580,-4.953618,2.351725,4.301208,-1.233506,4.201831,4.162769,-5.730396,-7.435471,-0.094621,-6.034087,5.292805,5.420783,0.180975,5.567374,-2.109592,-1.021848,6.004216,-8.945818,6.750507,9.515391,7.332356,8.205909,-3.649268,-3.299749,-5.049466,-1.193133,3.622443,7.322931,9.102057,6.451345,5.194852,-6.909546,-6.559650,-2.148436,-9.614770,-2.085586,-0.143818,0.023692,9.245302,3.476674,0.606415,-1.816200,-0.503819,5.218388,-2.610087,6.254841,4.337996,-5.575639,-3.735377,3.255543,-4.756730,-6.288057,2.199994,5.192400,-7.580001,-9.118084,-6.845992,-5.461209,-2.484993,-2.946179,-7.592760,-2.396548,-1.427810,0.525435,3.105754,4.269699,2.917124,-9.081973,8.404983,4.614274,1.712763,9.039625,-9.858636,-7.862660,-9.223511,9.271539,-7.809964,-2.755295,-7.977191,2.968370,-6.567393,-9.744200,3.129566,-3.003603,-1.187656,-1.497307,8.357667,-8.152740,2.807841,-4.156887,0.920635,-0.626471,2.407116,-3.742273,5.128778,-7.165174,-1.443546,4.964091,0.593827,1.981044,3.249535,5.155801,2.633251,1.345337,-0.304220,-7.183072,8.815483,1.202580,3.740188,7.657128,-4.125324,-7.220018,-7.926439,-9.676812,8.320643,6.583045,9.694570,6.521778,-3.750931,4.368902,-8.188506,9.774256,-1.282346,9.627895,-2.193483,-2.662646,-6.244063,-4.339827,-4.710512,-8.812572,-5.339958,5.392047,7.729782,-4.397196,5.567573,-1.661776,-3.777582,3.941009,6.653652,-4.304235,1.695709,-1.339733,-7.194988,-4.738730,7.215342,-9.051554,2.607131,7.212004,8.205170,-0.588007,9.400302,-0.850073,-3.200484,-2.213931,-7.080728,-4.925569,-8.421428,7.971894,9.817393,5.267151,6.873025,-2.087983,3.856715,1.812334,2.461818,5.773080,-7.661674,-2.207043,-1.195868,-9.395240,-0.893155,-2.842111,6.149882,8.263084,-5.271220,8.994324,-6.199398,-4.455962,3.665091,-4.707233,2.568730,5.979166,-4.011747,2.683657,8.173782,2.931581,-7.391000,-0.689114,-8.291779,-4.832442,-2.804567,-1.114891,9.723427,9.283524,-7.086150,8.013162,0.454947,3.570416,1.369189,-1.609960,8.235201,-5.088592,-8.617437,1.515296,-5.946762,7.426923,-4.829787,5.174698,-2.801260,-6.992616,1.573534,-1.341289,2.034840,-8.346599,-6.572143,9.316579,-5.939592,4.448690,-7.030807,2.968122,-2.698217,3.057516,-4.894193,-5.362516,6.576906,1.210770,6.984612,-4.486535,-0.222318,2.223107,8.855748,-9.657832,-4.567208,-9.047150,-3.875437,4.737779,-7.805847,3.775536,3.308054,1.021139,4.397690,1.049388,5.507082,5.300452,-5.807188,-8.244944,6.753234,-5.978579,9.837213,-3.567909,-2.116396,-0.889248,-0.706843,-6.088830,-1.988109,3.747423,-5.729399,-9.890156,-6.637538,3.075573,-5.421794,-6.787540,-4.234012,7.987015,-4.832009,-4.820210,0.054932,5.573575,-5.193494,6.946388,-0.904829,-7.266065,-4.065702,-7.684366,-3.798412,5.851167,4.526077,-3.005132,-4.451987,9.369517,2.586314,-1.035034,0.849463,2.858370,1.781679,-3.289632,4.755410,-4.968570,3.547531,-3.861817,2.283537,-2.333893,3.331864,-4.783411,-1.288225,-1.645090,3.147304,-0.361594,8.000795,6.540821,-3.761548,-0.971757,-4.732088,5.807339,7.215739,-4.164807,-6.732700,1.353411,3.421650,6.557955,-5.120266,-2.816363,-8.153097,-2.040042,-2.173377,-2.624039,6.796732,-9.016557,-4.398485,7.699067,4.380109,-5.952531,-9.319854,4.840215,5.259400,4.021685,3.215052,-7.372080,-4.858291,5.575317,-4.203315,8.331147,-1.256834,1.870830,-6.454646,-0.179890,-6.875390,7.653658,-6.455612,8.435691,1.325853,5.502688,-0.188772,0.115908,-6.210631,1.481777,-8.802542,-1.935207,-6.887672,8.141306,-8.919634,-2.923502,-1.941732,9.061944,-2.841373,3.526640,6.875957,-3.264983,-3.766269,-1.006780,-8.883428,7.746005,5.103149,1.038376,7.891164,-1.304093,-5.292135,6.310143,-8.580118,-2.271437,1.544830,-5.767083,-2.382989,-9.222583,-5.604433,-2.077988,-4.008597,-9.192860,6.600164,5.145773,-0.477757,0.348753,-8.535244,-8.123304,6.744275,7.663049,-5.674297,-0.481440,9.071465,1.111759,5.574249,-4.720033,8.189291,7.728078,9.342389,3.190075,-2.473924,-7.568407,7.963151,7.781234,3.084449,2.158467,2.489341,8.650159,-8.852776,-3.698426,-9.718460,5.490718,7.731594,-1.903810,2.815366,4.542657,-5.582963,-2.101347,-7.495544,5.921268,1.637979,7.475355,-8.138317,0.489918,1.725655,-0.395290,-7.601230,9.471957,8.660886,-9.840992,9.991843,-2.929630,-9.554255,-4.821122,8.675380,-3.386507,-6.854147,7.423973,-5.444143,-9.671309,-7.196055,1.553885,-5.606259,1.744496,0.320799,7.446642,5.515314,-3.528525,-7.852655,-4.332009,-7.018600,-3.980597,-5.597544,2.947274,-5.277088,-8.953873,5.965127,-7.297571,-7.261273,8.780779,8.033814,-3.994033,-1.760904,-4.558573,0.372310,-3.794149,-2.863251,2.525770,-8.626554,8.296796,-8.723588,-8.359699,-0.848838,6.702556,-4.904889,-1.449947,9.481299,-5.795618,0.040120,0.460713,1.761649,0.353173,-4.199936,-2.866267,7.884967,-0.456338,0.568968,7.174827,2.856096,-5.728491,1.261592,2.862749,0.977811,6.570308,2.570997,-4.712817,-5.929257,-7.277250,-9.991954,-3.773035,-2.531797,2.199295,1.464312,0.816913,5.093954,-8.713894,-1.912248,-4.991740,5.316944,0.311447,-6.812103,9.896782,0.558808,1.974909,-1.331563,3.124413,-0.785997,-8.660403,-7.099145,-7.997680,5.204565,-6.839278,3.689640,6.801951,-8.526515,4.723853,-8.947963,-6.958180,-2.228122,1.396729,7.396623,1.907119,5.085877,2.695706,-7.166531,-6.848350,-6.713869,9.376047,2.832391,-7.734934,6.096722,-5.014286,-5.236635,3.443187,-5.498310,9.978294,-7.411812,-3.299579,-5.541122,5.253864,3.115389,-9.475031,-2.725734,2.653958,-8.177423,-7.827670,0.194843,-8.073114,8.377280,-2.252823,-7.875255,4.774021,8.198583,8.483695,2.038522,-6.665306,-6.342895,-5.521464,-7.889773,-6.635610,2.406400,0.422150,3.160625,-6.169359,6.370742,-1.736917,-8.000406,-9.463019,2.699245,5.366046,-5.783918,-8.707409,-0.081062,-9.665246,-1.107987,3.724494,8.293730,9.611307,-3.743369,7.304205,-0.364132,-5.641439,7.511279,-3.948393,-4.780116,6.300658,6.247443,4.552918,-9.964724,1.070432,-5.041322,-4.542259,8.844770,-8.930127,3.820686,8.361016,0.821283,-3.526858,9.029844,-9.311337,-8.688068,-0.522207,2.713723,1.926403,1.188329,-2.886139,7.074379,9.742775,-8.096960,7.757738,4.501664,-3.308418,-0.802717,8.859443,8.064054,4.546519,9.642670,-7.590182,6.820881,-5.289751,-5.950736,-5.399241,3.596084,-3.392573,2.139041,5.106273,-9.024206,6.209245,-5.604232,-5.215682,-3.734564,1.513130,-6.238451,-5.387379,8.184723,-9.374888,-6.437447,-1.245025,8.476171,6.553886,-2.888602,7.329098,-9.301085,9.763927,-2.618769,5.240419,7.523075,-1.212361,-4.622939,8.224955,-2.861741,4.737437,-5.959704,-0.976263,-7.485317,-0.830173,8.057109,9.459711,-9.449112,-6.941118,1.488027,-9.739142,2.304883,-6.311040,5.640838,0.159436,9.286410,-4.768150,-5.454648,1.109653,7.992252,5.463681,-4.608168,-5.972726,6.453365,8.276089,-3.779492,5.708498,-7.787715,4.326183,3.541395,3.979417,3.844625,-8.276566,7.838654,-9.970722,1.054926,3.940981,4.543608,3.980623,-5.185344,2.575365,-1.032252,-7.856617,-2.547677,-1.368677,5.013839,-7.481612,-3.304340,-8.174723,9.388205,-8.475584,7.786776,-6.604216,8.980650,2.496658,-1.094499,5.518887,-9.487550,5.933468,5.834872,-1.639248,-6.495199,-8.193576,-9.129207,-9.080387,1.356147,-0.347198,-3.270385,5.383124,-4.751497,6.451065,2.834225,9.032587], dtype = "float64")#candidate|3858|(1512,)|const|float64
call_3854 = relay.TupleGetItem(func_1829_call(relay.reshape(var_3855.astype('float32'), [1, 11, 13]), relay.reshape(var_3856.astype('float32'), [15, 11, 13]), relay.reshape(var_3857.astype('float64'), []), relay.reshape(const_3858.astype('float64'), [1512,]), ), 6)
call_3859 = relay.TupleGetItem(func_1834_call(relay.reshape(var_3855.astype('float32'), [1, 11, 13]), relay.reshape(var_3856.astype('float32'), [15, 11, 13]), relay.reshape(var_3857.astype('float64'), []), relay.reshape(const_3858.astype('float64'), [1512,]), ), 6)
func_3401_call = mod.get_global_var('func_3401')
func_3405_call = mutated_mod.get_global_var('func_3405')
const_3864 = relay.const([6.142857,5.705852,-5.257985,-9.494168,6.909399,-8.181389,8.459034,-4.596359,-7.370459,1.963106,-4.816773,-3.479473,-2.234379,8.525506,5.809067,9.887185,-9.896418,5.897790,-7.670573,-8.296218,-1.617510,7.719545,-8.761718,2.976649,1.887958,1.057310,-6.392278,7.274030,3.283531,-6.484457,2.650642,3.349705,-7.024009,8.343945,4.312840,-9.477252,-0.750780,1.891438,2.966280,-1.916023,6.568841,-2.478273,0.523645,-7.209189,-9.763624,1.737755,-1.615243,9.541735,3.428923,8.945306,-8.082827,-9.460950,-9.127561,7.155072,-7.211956,-1.282004,7.735338,8.225168,-3.002789,-7.762164,-1.267075,-7.635294,-9.616694,5.011137,-2.213191,-4.783301,-9.402574,-5.673756,-3.770193,9.988504,2.086069,-0.297545,-5.812639,5.638339,8.583492,-0.053918,-4.019523,-2.322635,-1.312263,-4.732522,3.404067,-9.142616,-1.870656,-5.886624,-8.133409,1.697007,5.747177,0.504925,-6.366417,-5.967263,-6.038165,9.467847,6.886948,3.338863,-6.952874,5.202783,9.349077,0.163245,-7.311090,-2.393351,3.142522,-2.977999,-3.535266,4.321344,-2.426700,-9.465587,-2.390501,8.095578,-2.546065,5.128460,4.033838,-6.214261,-5.093594,-2.364941,3.678835,-5.984193,-7.430522,0.157073,-2.747708,8.743082,-5.625861,0.509301,-1.270379,-6.683664,5.687004,6.463263,-6.284258,0.432603,7.297630,2.452914,0.293948,-4.755562,-4.666581,-6.772135,-8.409566,-0.776187,6.036394,3.279397,-5.362815,-3.335826,1.783781,-1.535041,9.915442,6.955762,0.481996,4.622563,-8.971073,4.288718,3.969714,3.973144,5.313687,-7.578883,8.084782,-8.955349,-3.149751,5.126407,-1.806866,0.593654,-3.084303,4.802464,-4.862823,-1.827155,-8.549180,4.423618,5.544689,8.817997,-2.232426,2.096005,7.641535,-6.554329,7.614138,6.857370,9.585178,1.890525,8.257641,-6.258169,-2.545603,-6.381722,-9.301301,-3.983008,-1.445028,-7.614106,-0.671827,-1.692310,-8.486275,4.477285,8.455123,8.072183,5.974512,-8.429328,9.696427,-4.350129,9.290722,-1.825766,0.555914,5.589641,-7.963049,-0.334904,8.309779,-8.050301,4.892407,4.345438,8.573801,-6.711789,-6.685104,5.341796,5.889161,8.173148,2.077280,-9.900165,-6.511425,-7.912466,1.762940,2.373608,-7.250444,-1.902043,9.156440,-8.897703,1.778100,-9.158404,3.640506,1.479432,1.095618,8.633399,9.771947,8.769620,7.183663,-9.194334,7.530625,4.133384,-8.558252,8.404677,-8.219753,-0.677566,-0.373448,3.502079,-2.384737,-3.461048,8.975763,-9.304723,1.446066,-5.045285,-0.414926,-7.960880,6.539150,7.446953,8.617806,0.264976,-3.079124,9.694194,-4.914161,-7.423363,-5.140996,9.842665,-5.127250,-0.412865,9.675254,-5.109792,1.515218,6.980081,-7.574749,-1.015311,-4.083350,9.582711,4.263638,5.713658,6.725009,5.348916,7.908405,9.193288,-6.445056,8.199807,3.505860,8.252579,-6.162226,3.348223,4.483797,4.962983,9.178377,-8.722590,3.777547,2.528264,3.438425,-5.971270,5.716233,-1.525192,6.581639,7.234809,2.064193,-6.629753,-4.752802,6.997765,0.207075,2.229959,1.423805,-9.263633,4.259814,-1.101956,-3.038785,3.357936,-2.613937,1.942802,-2.450670,-2.314622,-9.153099,0.971771,-9.882614,-4.302683,8.102529,5.155958,-6.739011,-9.166839,6.905601,-0.524326,7.260767,6.353227,-9.667068,-6.927294,1.288976,-3.407683,8.458427,-3.175157,-2.215065,0.099925,-2.448919,4.701916,-3.082179,4.070522,-3.584333,6.926275,8.209644,0.712747,-3.446366,-8.859423,4.058370,5.060166,7.410761,-2.823826,-0.276789,1.625342,-1.580084,2.927822,-4.728827,-9.718516,3.191691,1.132293,-2.865328,-9.065817,-4.318420,2.728498,0.991525,-2.358643,-1.746068,7.829334,-2.344292,-9.061776,9.386760,-3.524071,-2.646361,-4.199846,-0.273859,-2.838213,-4.775751,9.154879,-5.896406,-0.196268,9.070478,-1.924023,-8.076153,5.530018,-4.919298,4.241517,0.346415,-0.355147,8.490839,1.953092,-7.243933,-8.152286,-7.310304,4.915028,-7.991852,5.643350,-0.991390,-8.336557,1.864631,4.915575,0.198014,1.678824,-9.573507,-2.092778,-6.512020,-2.339223,5.357408,6.770714,-2.404002,-7.201934,0.754303,2.304176,0.878687,-4.491871,5.771749,5.883536,-8.035802,3.512272,-8.142893,-1.308329,-7.815734,3.951750,-4.597696,0.465781,5.916608,2.556072,9.046782,-9.397150,-2.973996,0.149557,-8.790756,-5.092046,3.511160,-9.753854,8.319850,-2.154432,4.021114,-2.915327,5.013290,-9.859703,9.875131,8.364980,-4.946956,-5.367760,-9.196082,-9.039348,-8.010084,3.727512,8.488245,6.378973,6.114401,-0.530597,5.072638,-4.869811,-9.678966,6.309042,-3.877572,8.117636,-7.461341,-2.386391,1.811385,4.743212,4.364712,-1.788867,-3.948548,-5.206263,4.676935,-5.955465,2.611551,8.220748,-6.407285,3.735589,7.624211,6.725283,-8.563472,-9.024155,1.773551,3.222566,3.301541,7.131114,7.120371,4.461300,-8.107074,7.723531,-5.943217,7.255392,7.210270,6.133375,4.211784,-6.122812,-7.142102,-2.449802,1.730180,1.727565,6.341808,-1.954063,-9.650977,8.479244,-2.829379,-6.876626,-0.033513,2.214204,-5.537439,-1.747684,1.552810,-4.580486,-9.795308,1.112698,-7.385826,-6.453276,9.110018,9.960998,-1.959602,-9.435092,4.823499,7.916707,9.078303,-8.718281,4.510909,6.919848,6.463056,4.809368,-6.405877,8.062587,3.791074,-4.637786,4.549675,-8.632317,3.111661,-0.541240,9.569686,-5.224930,-4.573878,-0.647112,0.951907,-4.780852,9.304570,-2.939008,4.531965,2.980826,9.878258,4.098285,4.519704,-7.827669,8.794450,8.055639,-7.241393,2.117154,-6.029803,3.784763,8.384709,6.595890,6.015520,8.825141,8.591129,0.230877,-0.641704,6.164737,-1.486015,-3.712670,-2.218401,-9.256605,7.313618,0.672659,5.324536,-2.789040,4.527843,-1.821553,3.954586,7.409199,-8.970200,-0.225692,9.741378,-4.666233,9.964043,3.262547,-1.000892,5.810757,5.571324,-1.964003,9.732158,-8.352139,-2.017613,6.098286,-2.987597,-7.691950,2.083125,2.770086,8.345365,-3.543792,0.302658,-8.932979,1.315714,3.244725,3.725790,8.701042,-1.358919,1.135313,-6.423623,7.481449,7.184652,4.534341,-7.088963,6.099300,-4.758259,-7.213368,-6.205169,-0.859413,-0.781397,-1.285376,6.836937,-5.028561,3.251582,-0.859747,-6.050953,-0.893492,8.718843,-8.092084,8.246490,8.213737,0.860287,5.430443,1.672494,8.240264,8.355427,3.655427,-9.041484,7.529214,0.468563,3.768239,2.993199,5.721187,-4.848032,-9.011434,0.873732,2.685962,1.449484,-2.492336,-8.653994,1.523761,-5.383541,-9.847024,-6.912613,-2.443900,6.254404,-2.296522,-7.965644,-5.877323,1.133179,-5.696120,-5.738325,-4.311444,-9.448377,-9.279387,-6.678682,-5.146539,-6.510198,8.102208,-2.158601,-4.090135,-2.923170,-3.507815,-3.373489,0.870118,5.896968,3.663572,5.133346,-4.227986,-0.584613,5.494097,-3.421683,7.550327,-6.834870,6.221267,3.209531,8.380261,-0.947015,-6.931604,-7.584171,5.703492,9.431649,3.549293,-8.286795,-1.704244,9.387907,7.092790,8.833562,-6.017714,-0.864652,0.354731,-9.961885,7.672806,-4.072798,5.616382,8.266332,9.193850,2.410454,6.507505,-4.463683,9.380477,6.987020,3.204779,4.088502,9.541386,1.804424,3.872166,1.940855,9.646137,-5.396416,-8.098041,8.329534,-5.702259,-4.118269,-7.758631,8.534395,-0.649559,-1.348643,-6.375233,-5.637670,6.808226,-8.594890,5.887888,8.333924,6.774763,6.629112,5.241956,2.756589,-3.981257,-0.239966,-1.324207,-9.194429,-3.164287,-0.960634,-1.634311,-5.385882,6.935394,3.596730,-9.030006,3.780698,-7.683307,3.019062,3.733540,-2.368381,5.736404,-3.675504,-3.217172,-9.148131,9.692112,5.666325,2.733911,-8.856421,-5.430704,6.483182,-9.418963,7.852488,-3.860619,2.773494,2.003285,4.402798,-2.233613,5.929225,-7.088486,0.468112,-0.888728,8.526130,0.701842,-7.879874,9.849497,-7.899220,-2.895449,1.592337,7.987639,-5.633810,-5.240004,1.067066,3.713481,4.922048,-5.027603,-6.746848,-1.174813,1.973717,9.065995,3.376010,8.056224,-5.012588,2.525044,-6.817945,-7.502483,-6.264726,-3.468702,4.398293,-2.606544,3.569696,-0.380215,5.738753,-0.205362,-7.208561,3.537868,-5.841818,7.416117,-7.759153,-6.594238,4.476246,-1.867996,0.555739,0.021059,-3.512213,-0.342736,4.124888,4.988825,5.042166,2.052189,4.787820,6.861388,4.490233,2.483307,-5.647817,8.924975,-0.867608,3.873804,-0.842506,9.620365,-1.022876,9.350299,-0.221409,-4.748057,-1.253416,1.724400,-8.169972,1.144219,4.082882,-9.432599,4.990607,-4.029780,1.430208,7.192040,-7.661528,-8.396512,-8.244280,-8.994153,0.815843,-1.799963,-4.298903,5.442131,1.683272,1.057664,9.881495,-5.832395,1.040574,1.624381,-0.090309,-0.912289,5.492510,3.301146,-1.897857,-8.932782,-6.236421,2.087900,-9.439027,-6.954688,-8.224106,-5.174087,9.808399,-0.048109,3.850259,2.885834,-0.015770,1.183766,-0.738577,-1.154756,-4.297856,-7.053073,5.091926,-3.982913,2.968044,4.684331,-8.811648,5.369194,-6.693478,-3.085355,0.979697,8.924125,9.536712,5.009486,3.071957,8.440707,-2.395855,0.943527,8.488723,5.347052,-3.420154,-2.222827,5.572738,-6.757751,4.422979,8.351798,-6.706069,7.643318,7.897606,9.469019,-4.149194,8.477943,7.357561,-1.357846,-1.203184,7.054043,9.755279,4.086438,3.483894,-3.775755,-5.268408,-1.639860,8.032613,-8.258368,-7.606951,4.061328,-5.208751,-2.836697,0.281328,5.654005,-2.506130,-1.291784,-5.586247,-9.031448,9.300388,5.262125,2.267832,-2.362604,1.023196,0.872302,0.442353,-5.111823,1.254121,4.429834,2.257958,-8.059470,2.404907,4.144912], dtype = "float32")#candidate|3864|(924,)|const|float32
var_3865 = relay.var("var_3865", dtype = "float32", shape = (252,))#candidate|3865|(252,)|var|float32
call_3863 = relay.TupleGetItem(func_3401_call(relay.reshape(const_3864.astype('float32'), [12, 11, 7]), relay.reshape(var_3865.astype('float32'), [126, 2]), ), 2)
call_3866 = relay.TupleGetItem(func_3405_call(relay.reshape(const_3864.astype('float32'), [12, 11, 7]), relay.reshape(var_3865.astype('float32'), [126, 2]), ), 2)
var_3867 = relay.var("var_3867", dtype = "float32", shape = (12, 14, 7))#candidate|3867|(12, 14, 7)|var|float32
bop_3868 = relay.greater_equal(call_3766.astype('bool'), var_3867.astype('bool')) # shape=(12, 14, 7)
bop_3871 = relay.greater_equal(call_3767.astype('bool'), var_3867.astype('bool')) # shape=(12, 14, 7)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_3878 = relay.TupleGetItem(func_2645_call(), 4)
call_3879 = relay.TupleGetItem(func_2647_call(), 4)
bop_3880 = relay.subtract(uop_3830.astype('float32'), relay.reshape(uop_3827.astype('float32'), relay.shape_of(uop_3830))) # shape=(12, 1, 7)
bop_3883 = relay.subtract(uop_3832.astype('float32'), relay.reshape(uop_3829.astype('float32'), relay.shape_of(uop_3832))) # shape=(12, 1, 7)
func_2325_call = mod.get_global_var('func_2325')
func_2327_call = mutated_mod.get_global_var('func_2327')
var_3893 = relay.var("var_3893", dtype = "uint64", shape = (150, 2))#candidate|3893|(150, 2)|var|uint64
call_3892 = relay.TupleGetItem(func_2325_call(relay.reshape(var_3893.astype('uint64'), [6, 10, 5])), 0)
call_3894 = relay.TupleGetItem(func_2327_call(relay.reshape(var_3893.astype('uint64'), [6, 10, 5])), 0)
uop_3907 = relay.exp(uop_3827.astype('float32')) # shape=(12, 1, 7)
uop_3909 = relay.exp(uop_3829.astype('float32')) # shape=(12, 1, 7)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_3916 = func_2154_call()
call_3917 = func_2154_call()
output = relay.Tuple([bop_3815,call_3854,var_3855,var_3856,var_3857,const_3858,call_3863,const_3864,var_3865,bop_3868,call_3878,bop_3880,call_3892,var_3893,uop_3907,call_3916,])
output2 = relay.Tuple([bop_3818,call_3859,var_3855,var_3856,var_3857,const_3858,call_3866,const_3864,var_3865,bop_3871,call_3879,bop_3883,call_3894,var_3893,uop_3909,call_3917,])
func_3954 = relay.Function([var_3801,var_3814,var_3855,var_3856,var_3857,var_3865,var_3867,var_3893,], output)
mod['func_3954'] = func_3954
mod = relay.transform.InferType()(mod)
var_3955 = relay.var("var_3955", dtype = "float32", shape = (12, 15, 7))#candidate|3955|(12, 15, 7)|var|float32
var_3956 = relay.var("var_3956", dtype = "bool", shape = (12, 15, 7))#candidate|3956|(12, 15, 7)|var|bool
var_3957 = relay.var("var_3957", dtype = "float32", shape = (143,))#candidate|3957|(143,)|var|float32
var_3958 = relay.var("var_3958", dtype = "float32", shape = (2145,))#candidate|3958|(2145,)|var|float32
var_3959 = relay.var("var_3959", dtype = "float64", shape = ())#candidate|3959|()|var|float64
var_3960 = relay.var("var_3960", dtype = "float32", shape = (252,))#candidate|3960|(252,)|var|float32
var_3961 = relay.var("var_3961", dtype = "float32", shape = (12, 14, 7))#candidate|3961|(12, 14, 7)|var|float32
var_3962 = relay.var("var_3962", dtype = "uint64", shape = (150, 2))#candidate|3962|(150, 2)|var|uint64
output = func_3954(var_3955,var_3956,var_3957,var_3958,var_3959,var_3960,var_3961,var_3962,)
func_3963 = relay.Function([var_3955,var_3956,var_3957,var_3958,var_3959,var_3960,var_3961,var_3962,], output)
mutated_mod['func_3963'] = func_3963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2302_call = mod.get_global_var('func_2302')
func_2304_call = mutated_mod.get_global_var('func_2304')
call_4026 = relay.TupleGetItem(func_2302_call(), 2)
call_4027 = relay.TupleGetItem(func_2304_call(), 2)
const_4031 = relay.const([5.643761,5.265611,2.146527,-7.258991,8.984974,-9.534157,1.709483,-5.896731,-6.676304,7.622001,4.632956,-7.016960,8.535131,-2.350357,-1.869122,3.119383,6.454060,6.450332,3.014264,-4.758495,-2.319706,0.758070,2.103618,0.633238,4.130771,4.101722,-5.573397,-9.686767,2.845989,8.479774,9.984732,-9.283590,8.365715,2.413148,1.953449,8.713452,-1.149879,-6.006523,-4.913550,5.632083,-8.592131,-2.099868,4.216568,-0.024571,1.720319,-8.791372,-4.773505,5.595011,-4.820804,-7.585029,-5.953047,9.741799,-2.633538,-9.817306,8.683445,-3.820236,1.252857,-8.906632,-7.040451,8.770056,-2.842617,-9.217031,-6.212221,-0.467599,-0.157343,9.160738,-2.279219,6.567592,-5.891352,1.246134,3.481674,7.345493,-5.242560,4.244290,-3.185063,9.376282,-6.735212,-4.025423,3.052600,8.414217,1.524045,2.074339,5.262995,8.848450,-0.055156,-6.643675,-5.828273,-7.763809,6.284029,0.416432,4.792750,1.466483,-9.797238,-8.521142,-7.215567,3.132749,-5.187983,-0.366862,7.467791,9.244291,-8.518438,-6.638526,2.056144,-8.427472,-0.255926,2.388120,-9.514967,-0.924824,-2.725514,-6.446446,-8.063528,-3.446657,-6.982678,4.465307,-6.175865,-1.422851,-5.198900,-4.951829,5.066001,-1.064374,-2.148369,6.922598,-3.542074,-1.156287,0.074551,-9.587309,-2.179688,-9.061413,7.260057,1.873063,9.478104,-0.199517,-7.005620,3.367700,4.305728,9.810529,2.018161,-0.394337,-4.545952,-3.431186,-9.250619,-7.322642,-6.812099,4.281627,-6.164851,2.503502,-8.629129,9.504550,-0.476671,0.402491,-9.044753,-3.002429,8.595276,-0.106130,3.858734,6.561529,1.893090,-3.765826,4.067837,3.814647,-9.040489,4.724578,-8.795330,0.645220,8.543614,5.005627,-6.631294,-8.781073,-2.816660,5.728998,5.648598,2.680954,-5.639894,-1.301535,-4.319274,8.029674,1.995808,4.913138,1.656387,-6.943094,0.874569,6.327183,4.772170,-3.280729,-2.467128,1.323305,-0.450825,-0.731165,5.766050,-4.244226,-9.144931,-8.248049,-5.371638,9.853600,5.095025,9.251618,3.555736,-9.111556,-3.289742,7.452400,-5.863408,-9.449427,8.605791,-0.149150,-3.377748,-5.108383,-1.110755,-0.052364,9.319784,9.345813,7.464331,6.615852,8.080075,-5.316277,-2.258060,-8.914496,-4.304627,-8.195620,0.124229,-2.898064,2.571547,-9.219304,-7.348611,8.968350,-3.975435,-5.462316,1.795245,7.952855,8.137751,-7.120137,4.106430,-3.747896,1.020960,4.533863,5.775763,-0.014519,4.853786,1.095418,0.131949,3.408513,3.979761,-9.399518,7.665841,8.343409,1.186951,0.232120,-9.993617,-0.732654,-9.289311,-6.341524,-7.486382,-3.157738,2.701283,3.532820,-4.471646,-8.665990,-7.199298,-9.593113,-3.976430,-7.170803,2.687956,-4.218404,0.270242,-5.461022,9.638085,-2.279795,1.131420,8.336358,-9.311547,-9.504749,0.056776,-1.528413,4.242208,8.428659,-3.279534,2.556845,3.448291,8.989379,-6.243557,-5.723729,-4.656923,1.136266,-1.879190,-0.073439,3.200349,9.218309,3.884009,-7.597975,7.518145,5.670473,3.330800,7.718049,-6.526642,-0.743969,-6.801542,-8.672557,9.512793,5.666822,-4.149910,-6.325930,-4.243206,-8.361533,4.134351,-0.565502,5.052812,-1.331701,-4.812666,8.531009,-7.012703,2.562580,8.320269,9.653126,-7.270673,-3.587362,-2.724842,-1.154292,-9.854778,-3.202366,-0.964428,-8.780915,-0.878719,-1.807200,8.488119,-5.740410,8.472039,-0.902260,2.596291,5.163518,-1.443236,7.299424,-2.692428,4.153448,-5.806190,-7.375519,-2.257372,-4.544661,5.714909,1.976226,3.063850,-3.685284,-4.474734,5.642314,-8.896226,0.257018,-4.644643,9.618742,-6.110478,3.817668,2.508439,5.404261,5.847955,-9.234316,8.963086,9.268754,6.576854,6.862929,-1.169813,-2.596587,-9.695236,-2.217558,-6.070578,4.737549,-7.803773,4.180437,8.206061,-4.108229,8.166052,6.229787,-7.933144,8.633977,7.708254,5.101840,0.709341,-0.854148,7.646009,-2.159404,6.492500,8.778549,-9.465665,5.892606,1.348189,-2.958068,-2.061459,6.227772,-2.894611,9.921950,-0.456952,-3.897441,-8.672113,9.072768,5.771650,9.835034,5.858240,-3.133317,7.573763,0.453477,4.331278,4.256743,-6.499154,0.005329,1.162401,-4.173727,6.430220,9.248958,0.238100,-8.475633,-6.978234,6.414755,-1.775391,-6.668820,8.496426,-1.968096,1.324649,1.123113,9.301666,1.164406,3.188339,-5.068410,-1.069468,-0.948090,-6.264205,-6.278656,-8.497796,-4.031781,1.746941,-8.995917,6.101653,-4.191078,7.464086,-1.868377,-1.579072,1.839467,6.950355,-8.563017,-7.859796,9.794495,5.495156,1.383381,-8.740930,-6.632685,-7.705076,-5.538334,-2.031922,6.807738,-4.621442,-7.732856,1.512695,-9.154223,6.923272,-3.263393,9.226439,-9.859361,2.908424,-0.633454,3.584180,1.466573,-8.981421,0.983402,-5.633352,-6.880144,-8.567685,6.540905,-8.409123,-3.042267,1.889181,2.581977,0.217371,8.397374,-7.391853,-6.905882,6.937001,8.051619,5.778316,-1.056859,1.533806,1.964328,0.436201,1.533632,-3.405735,8.496901,-3.903931,2.484228,-5.074227,-2.054977,-8.601469,-2.518157,8.399333,1.322433,1.962639,-4.536598,-1.269431,-7.390295,6.031004,-3.649486,-5.805613,4.537803,-6.599788,-5.787142,4.953706,6.176594,4.193496,4.951977,-9.997131,0.533642,-8.634622,-7.363293,3.265207,-1.603688,0.791176,3.077797,-0.911090,-3.207569,4.378567,8.677011,-2.587462,-3.225006,2.088245,-5.809236,7.462654,7.519635,6.862344,-5.051142,-7.962975,2.011585,7.668772,3.593384,3.004749,3.481259,-2.580866,-4.804906,5.994770,-2.847050,-6.209000,-5.294947,0.992470,-6.088761,-6.742773,5.981795,4.250287,-2.766998,4.474836,7.312312,1.019516,5.893093,9.467752,-5.827001,5.221250,1.069258,0.770203,3.894097,7.702405,-1.597264,-3.180492,3.218625,-2.540992,6.419157,1.753973,6.851601,3.439287,1.887593,-6.847535,1.772060,-1.749479,4.098856,6.045708,-9.308391,-0.210235,-6.246176,8.321710,5.303064,5.082369,0.031125,8.480162,7.093296,-2.489559,4.769077,4.680786,-2.055140,-6.524668,6.278953,-6.302006,-9.228055,-4.622649,8.322993,-1.192322,-3.820377,0.365740,4.194518,-7.374610,6.246700,0.607550,5.807051,-0.228112,-8.948504,6.920217,-4.763597,-5.027530,4.278932,6.868163,-0.467916,3.819834,6.548842,-6.211360,6.971653,4.821561,0.231093,8.212224,0.094851,-7.900140,-9.454936,-0.680863,6.868317,-6.042516,4.577310,-7.423268,1.597734,-6.225054,-6.886959,1.522428,6.107325,5.895671,1.692663,9.965629,-2.130223,7.083616,-1.874915,6.540223,-4.756419,-3.619024,9.679498,3.920990,-9.663721,8.765228,-6.820658,-3.383151,0.029096,6.990240,-3.379806,-1.435115,-5.382272,-4.344128,6.624534,0.736574,5.080477,3.233684,-5.223199,7.394248,7.089784,5.036557,-7.009361,9.008438,7.421921,-9.769413,-8.096222,-0.894265,-1.242024,2.964998,-6.217765,6.664334,-4.092172,-5.547313,9.746653,5.223766,-6.728026,3.305298,-9.751837,0.908203,9.979884,2.875896,-3.921767,-3.532697,-4.735710,-2.426959,-7.873906,-7.054282,-2.588170,1.075487,1.792319,-8.015790,-9.243508,-5.752967,3.275469,-7.961902,0.989112,-0.245897,-8.718779,0.925247,-9.138393,5.516547,2.952609,0.462244,3.860833,-3.672439,2.776254,-8.742636,-5.730764,-5.986354,-5.129429,-4.617135,-1.334887,7.107468,6.228948,-5.747546,-6.592364,4.604409,8.288122,-9.916074,5.156434,8.754160,5.638670,-0.070097,-8.188694,5.930268,-1.571853,8.703257,-0.863817,4.156011,6.410357,0.296437,8.279185,5.038773,6.600458,3.586193,-1.471225,4.895704,8.043913,7.322141,-5.334702,-3.238645,-3.642874,-6.904897,6.353777,7.724100,0.526252,-6.855615,0.876956,2.233080,2.051001,6.999898,-9.358693,-9.106235,2.492865,9.959039,-3.279353,-4.028706,8.318299,-6.625028,-8.373762,1.095895,-1.059659,-0.056633,-5.277282,0.516648,9.460128,9.478903,6.095643,1.160664,-5.109159,4.742442,-8.082371,9.835767,-1.213338,-5.739709,3.998016,-5.561870,-0.596110,3.792065,-5.818843,-1.159564,-4.772831,1.029964,7.991468,-1.114319,-2.428077,6.880081,8.899850,-7.714294,-9.097884,-7.282558,2.823902,3.655988,2.555929,-0.143556,5.157593,4.833227,-9.548403,-3.371779,0.387582,2.663457,-7.576575,1.035896,-8.880854,4.510119,-9.439987,-3.312015,-8.564586,2.190492,0.727180,9.581449,4.268140,-5.756903,-2.169024,8.037027,0.306877,6.594271,7.048090,2.471408,-8.084913,-5.005883,-6.849425,-4.273408,6.157555,-8.921722,6.104178,5.385788,6.892144,7.957659,-3.617286,6.286190,1.933623,7.156120,6.645709,-4.112007,5.969841,7.463399,-2.985589,-2.590289,5.574556,-5.154719,2.169944,6.178302,6.041290,-7.191618,-8.497535,2.366029,-4.710840,-8.099642,6.045153,4.973321,-4.971380,-7.398766,1.535446,-4.364153,8.216520,5.068746,-4.529441,9.733350,7.119639,-8.501895,-2.613364,-6.193979,-7.170978,-0.153487,7.535200,1.184383,-5.305464,-4.392258,-5.607641,0.025932,0.979892,-0.832052,3.876630,3.698580,6.932420,-5.005602,7.647849,-1.476132,-9.975012,1.693795,5.856236,9.168902,-9.895374,7.957060,-5.039399,6.233953,7.062291,7.801215,4.561514,-7.332002,-7.229013,-2.352749,9.731575,-2.590324,-6.257259,4.498653,-9.581684,5.622744,4.224182,0.649249,7.200183,0.780886,1.129270,-7.582905,-3.414563,4.900023,3.027758,-9.016249,4.740021,-9.695648,7.132339,5.336785,-3.430904,-0.935064,4.414021,2.813758,-7.711460,2.330543,-9.520555,7.353410,-2.088764,4.694760,-8.941295,-6.487094,-4.476635,4.712124,0.489187,6.908545,-4.434693,7.248172,-7.608279,-1.457783,5.796280,-6.557748,2.160318,-6.191677,-6.614641,-6.840188,-3.493428,-9.461661,3.548996,-0.187003,-2.498909,7.225058,1.059433,-7.036553,7.054161,4.724432,2.317790,-4.726105,7.506765,-7.608527,8.025236,-5.182721,-5.320909,-9.924645,1.748394,-6.995667,1.204867,-1.058687,-6.652754,-1.491106,7.776479,-8.767882,2.267728,-5.899946,-9.153778,-9.369795,1.807685,4.698157,-3.968852,2.298174,-0.345211,2.567495,1.345011,-4.296255,9.400802,-7.320413,-9.853938,1.001207,3.690504,-1.951672,-9.743072,4.796646,-0.526651,9.719891,2.292106,-7.066087,-1.687313,7.886047,6.136236,4.355934,-0.935189,8.330144,8.689101,-3.720031,-2.809533,-6.721024,6.945836,-1.500613,-0.854309,-0.787892,5.178807,6.880588,9.223019,4.704887,-2.791254,9.989050,-1.175421,-6.630686,3.447678,5.309667,6.950733,-1.860374,3.816220,-4.921798,4.804209,6.821105,9.097280,-1.057092,6.440897,0.557274,1.534766,-0.893849,-4.041112,4.635488,2.703745,3.422866,-3.639073,-8.276277,7.764951,0.055449,4.008550,3.559390,6.253007,4.754480,8.307540,-3.244337,7.554676,7.362075,7.719755,5.674060,4.699711,-1.380427,3.213356,2.338082,5.750496,0.932906,-2.803946,-5.309161,-6.668549,-0.001104,-1.676583,-3.109261,-4.210960,0.047908,-2.116007,-3.292749,-9.859767,0.797872,4.986990,-5.204761,2.241521,-2.225234,-2.100076,2.998080,-9.365792,-9.057452,1.168057,9.718285,-6.605758,6.392224,2.700117,-1.127146,-3.376425,2.351008,5.251798,6.390733,0.607406,-7.507343,-8.606544,2.065513,8.785779,4.285490,-4.551273,-1.026716,-0.603445,-3.983723,-0.051940,7.792479,-9.437609,-0.624289,-7.212543,7.233652,5.049696,9.721307,5.785591,4.018359,-8.900748,2.308533,3.322032,-9.893986,-7.962620,1.223385,0.900249,8.259140,-6.623544,7.881702,8.041746,-7.762979,-0.587115,-3.168764,-4.462914,1.478693,8.302468,-4.950483,-3.718678,-7.549839,4.494826,2.006870,-8.317702,-2.500227,5.437926,0.624731,-1.478215,1.814882,4.973229,7.440985,7.966016,-1.574577,0.317613,8.869137,5.857734,-1.725629,-7.348562,-4.769006,8.712811,1.153730,-0.380043,9.282077,-0.933161,-9.294176,1.899679,-4.812082,-4.097083,6.310383,2.313900,0.211642,-6.614274,2.576249,-3.576673,0.330026,-5.587399,-0.726675,9.585372,-7.830089,-1.394235,9.266712,-1.715928,0.860195,-9.304891,-8.458106,0.483527,5.638449,-4.254339,-7.812005,-4.807649,-1.999553,-5.901916,7.484056,-2.014770,-9.441096,-9.975328,-9.037610,6.815595,1.392135,-3.148015,3.257711,-9.315163,5.289445,8.875253,0.280232,2.108881,-2.214367,-7.850352,6.221338,1.905601,3.349120,2.485631,-7.378412,9.939532,5.422116,-5.672713,-8.396261,3.194193,6.918754,9.319300,-2.760540,-2.937737,3.300524,-3.754136,9.282109,-6.598961,-6.539908,1.950224,-8.102500,-0.962855,-7.025206,-3.576156,9.701283,0.021876,-2.435640,4.617311,8.995165,4.937186,-5.785848,-7.019325,-0.508139,5.505420,-6.560890,2.251597,7.006507,-3.436553,-3.790094,-3.631833,-0.284886,-4.844773,8.472645,0.933302,7.743644,5.002070,8.216089,-8.656219,-6.212568,-8.502038,-7.977842,8.156406,3.981720,5.680118,-1.520727,-2.742230,8.277016,9.693542,-3.625360,-1.077463,1.910724,-0.578682,2.062806,-1.067051,-9.124719,-0.173132,4.070152,-6.025566,-1.324654,-7.480048,-0.200995,6.104807,-8.552217,-6.799904,-0.308234,-0.373301,-9.088230,-6.252556,9.357340,2.206207,5.242094,-6.274377,3.978392,0.556330,3.474380,-6.885837,-7.940154,3.941347,-0.046092,-0.272834,-0.113218,-7.147097,5.847890,-9.158997,-0.276944,-3.228890,-4.119666,-3.588684,4.684992,2.130694,9.454976,-0.340009,0.113113,-2.795139,3.752329,-5.971110,-5.053733,-4.778350,2.700828,-5.622966,-3.297719,9.441070,-2.835470,-9.551856,-4.362414,-3.610680,9.294356,7.028961,-7.659229,-4.576272,-7.035459,-2.130595,-4.680916,-0.489668,4.877092,3.972528,8.029753,-0.156265,-5.213897,-7.125401,-1.590935,-2.424338,3.942167,5.723960,-4.754375,-0.152404,-7.399632,3.071739,0.809819,8.676395,-0.193254,0.140886,3.720107,1.387143,-6.292406,-1.010494,-3.464864,0.072703,1.605736,-2.163502,-7.951491,-8.323619,5.536848,3.904622,-2.038341,0.959769,2.692017,-6.935757,4.157792,-8.750391,5.280374,-1.917441,-7.123108,-2.126989,-6.111563,5.011296,2.013387,-5.657065,7.271395,5.692753,-9.868133,-8.381122,4.689436,-9.537930,4.430628,0.761631,-9.555362,-6.432024,9.504343,-3.526157,3.815692,-4.507351,6.441513,8.391439,6.276582,-8.703467,-8.878826,5.288301,-7.985180,-2.119636,6.228550,-2.427022,8.112698,-1.084496,4.113266,7.170971,-6.459984,1.464585,-4.605910,-9.539662,-0.459801,1.742859,6.317202,-7.912715,-2.690450,1.382394,-4.176642,7.008634,9.243847,-8.343390,-1.717519,6.245255,-9.993130,3.409934,-1.452013,-1.151853,-7.955170,8.623925,-9.913116,1.265706,-4.642038,-8.053848,7.552834,-2.155202,9.291902,3.166594,-7.434582,-2.943771,-8.152439,2.247925,1.098974,6.516320,9.873247,-5.498231,-1.785440,9.032009,-0.109791,-2.902871,3.842661,-9.641759,3.123761,1.229047,8.202371,-2.773472,7.828085,-3.006524,8.817070,-6.418468,-9.990626,2.474295,3.010397,7.957967,-2.278521,4.489183,-3.248042,8.568456,8.525852,-1.601910,-4.178378,-0.994433,-3.877463,9.179746,-3.918659,8.919902,-1.299821,-2.498508,3.958458,6.255444,6.019801,5.905649,1.564663,3.681577,8.431917,6.516555,4.120310,8.731689,-8.735410,1.091925,8.660184,2.440192,1.871175,2.537506,1.140146,1.815555,3.376452,-5.874628,6.652067,7.757484,2.650541,-2.857517,2.152411,0.989187,-9.983215,-4.901149,8.561211,5.518384,6.805091,8.238441,-3.535087,2.992225,4.723265,-8.617730,-1.923711,-0.444375,-1.830962,-5.397551,-0.829573,6.421120,-9.012580,-5.881831,1.989568,9.327882,-7.666790,3.203696,6.472626,-8.822433,-7.262538,2.024366,3.365772,6.506468,-5.493358,6.744876,8.801028,-2.651478,-2.542110,7.332470,-1.331719,9.845543,5.985058,1.715242,8.356090,3.752887,-1.493096,-0.187910,-2.074037,6.228594,1.810163,-3.559557], dtype = "float64")#candidate|4031|(1512,)|const|float64
bop_4032 = relay.floor_mod(call_4026.astype('float64'), relay.reshape(const_4031.astype('float64'), relay.shape_of(call_4026))) # shape=(1512,)
bop_4035 = relay.floor_mod(call_4027.astype('float64'), relay.reshape(const_4031.astype('float64'), relay.shape_of(call_4027))) # shape=(1512,)
output = bop_4032
output2 = bop_4035
func_4041 = relay.Function([], output)
mod['func_4041'] = func_4041
mod = relay.transform.InferType()(mod)
mutated_mod['func_4041'] = func_4041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4041_call = mutated_mod.get_global_var('func_4041')
call_4042 = func_4041_call()
output = call_4042
func_4043 = relay.Function([], output)
mutated_mod['func_4043'] = func_4043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3029_call = mod.get_global_var('func_3029')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_4054 = relay.TupleGetItem(func_3029_call(), 0)
call_4055 = relay.TupleGetItem(func_3031_call(), 0)
uop_4057 = relay.acos(call_4054.astype('float32')) # shape=(12, 14, 9)
uop_4059 = relay.acos(call_4055.astype('float32')) # shape=(12, 14, 9)
func_3078_call = mod.get_global_var('func_3078')
func_3081_call = mutated_mod.get_global_var('func_3081')
const_4080 = relay.const([[0.250295,-7.096631,8.373498,-9.384371,-5.896426,-9.675731,1.890522,5.355616,5.755482,7.151905,9.233874,0.882401,4.546387,2.171817,5.905815,-2.099288,9.194282,-4.745497,8.047474,9.530259,-2.407349,6.995604,-4.502554,-9.785327,-0.198350,-3.942631,-6.991880,8.933685,-4.902929,-8.331490,-9.255941,-6.371787,3.898420,6.026899,2.839801,-1.187240,-3.669801,6.460429,-6.444147,-9.834596,0.492814,4.830366,-9.106239,-0.984444,9.432341,-7.717528,4.259145,-2.995002,6.042244,-9.726946,-5.509844,-5.485196,-8.442524,-0.372214,5.385331,0.059394,3.224385,5.735170,3.304401,7.042321,-9.975402,-0.973666,-3.687719,-2.985791,-0.123364,9.593956,-1.671104,2.374535,2.290066,3.398334,-4.805575,-0.157505,1.431820,9.216188,7.821915,-2.239324,-0.326054,6.058009,6.627070,-2.733734,-8.542547,-9.414286,-0.302095,1.322864],[5.556691,-4.825308,0.697291,-5.026722,-0.506953,1.058752,-2.675145,6.480698,4.502970,3.161460,0.857492,-4.828317,3.208814,-7.499874,0.536718,-2.839720,-5.462311,-8.444686,5.450391,5.839253,1.981729,2.496232,-1.410106,-2.688595,9.566484,-8.974815,-7.999091,8.220838,1.488365,1.636176,4.132149,-5.473887,-8.712906,-6.910975,9.317015,-2.077209,-2.948247,-4.894738,-5.107453,-2.503320,-9.920855,-2.169071,-1.790033,3.386443,5.048791,-3.072813,-3.836967,1.075761,7.998696,-1.713838,7.491762,9.779539,-4.606988,-7.326016,2.746650,-0.764826,5.739028,-2.501299,-2.894949,1.638510,-2.359360,5.615868,-3.624610,4.385188,-4.582576,-6.211519,-4.750988,9.630118,7.842668,-8.829891,3.703638,2.370773,5.303060,-9.254679,3.091767,-4.140246,3.910388,-6.848355,-4.033891,5.874291,7.522697,-4.702680,-6.940061,-8.737245],[3.868900,-9.400349,6.656048,0.901452,8.118243,1.624715,9.833173,-5.509556,9.297640,2.295309,-2.169950,-9.793418,-0.095903,-5.805659,-0.467559,9.473519,2.983109,-7.803049,5.793478,2.553115,1.987583,2.237613,-4.773153,9.601591,-4.026144,8.357542,-1.911728,-0.208837,-8.305307,0.505402,2.557822,-8.824541,-3.248304,9.934969,-0.570584,-9.425341,4.942586,7.313609,5.520016,7.610144,3.292830,-7.632190,-9.671579,-6.989203,6.790224,-6.785562,-8.999714,2.760469,2.962410,-2.705665,-9.867561,-4.199368,-9.736104,7.215437,-3.969019,2.902135,-7.252010,4.039526,-8.115096,1.552872,1.347224,-8.343782,0.436112,-4.870264,4.854370,-2.477999,8.158484,4.597165,-3.710219,1.221443,-1.901955,-7.379835,3.520201,8.393335,-5.488781,6.786824,-6.376975,5.283432,-2.413356,4.270752,8.121918,6.355417,-2.426427,-9.195697]], dtype = "float32")#candidate|4080|(3, 84)|const|float32
call_4079 = relay.TupleGetItem(func_3078_call(relay.reshape(const_4080.astype('float32'), [12, 3, 7])), 0)
call_4081 = relay.TupleGetItem(func_3081_call(relay.reshape(const_4080.astype('float32'), [12, 3, 7])), 0)
func_2831_call = mod.get_global_var('func_2831')
func_2833_call = mutated_mod.get_global_var('func_2833')
const_4083 = relay.const([-2.276178,-4.165040,1.525562,-2.312958,-6.344104,5.379806,-7.648968,-6.554002,-0.529586,-3.596415,-4.530708,-5.357788,0.088584,6.768028,0.289958,3.402265,-9.173632,-8.284229,7.084027,0.167242,8.629555,-4.799719,9.068105,8.586713,-7.752417,-1.737630,-8.598256,9.209573,8.601135,-1.019105,-4.272664,-3.560400,-7.544986,-2.093534,8.985968,8.197613,-9.858322,-3.149379,-2.010804,-3.334832,-8.941262,4.054861,8.061941,-8.425467,-9.987454,3.171511,-2.882241,8.659645,1.308676,-2.242105,4.248528,4.908409,-2.483170,-8.784366,5.865616,5.682918,5.295280,-2.376393,3.049824,1.896047,-1.789698,0.828123,-9.462212,0.069854,-7.907078,1.653544,6.916606,-1.747592,-5.661140,-9.310062,3.935890,0.197772,-8.277622,7.698118,-9.109077,1.738354,2.966895,7.743559,8.280078,2.507711,7.143480,-2.247011,5.340717,-1.282837,5.968608,4.365825,-0.018521,6.332444,1.030498,7.718029,-8.264146,-9.040609,1.534051,6.632600,-6.362269,-4.896285,7.122575,-6.398686,1.273520,3.149294,1.985255,5.855185,5.048164,-1.477029,6.391608,6.678273,8.964890,-9.472611,0.309614,3.640987,-1.643388,5.922113,-6.505892,7.536543,-8.025904,-3.354741,1.212910,-1.955937,0.093845,1.081900,-3.321531,-0.868526,-4.503126,-0.490300,-3.854684,4.654219,1.193619,3.725022,-4.008767,-0.112398,9.381016,-4.933061,-9.930672,9.981280,-3.752462,8.923234,5.665096,-6.472095,-2.083944,-2.625800,-7.995355,9.212380,-7.600338,-3.093193,5.331946,-3.996981,7.656611,-1.503233,3.428028,9.473013,-9.954619,-3.547528,-5.783981,-0.222624,7.397051,-4.159689,-3.230174,3.151183,-9.294136,-6.866920,-6.703042,-5.756782,8.620479,-8.684792,-6.542547,-5.182378,-1.283227,4.590602,2.302078,1.864106,-2.603378,6.904394,0.742256,7.243030,-0.084530,-2.291389,-7.135046,-5.916123,9.176639,-4.591617,3.440523,-4.111488,5.260813,-1.132664,5.650060,8.167794,2.365167,8.396076,-2.147084,-9.271942,-8.373423,3.818972,9.868963,-8.029633,-1.264690,8.498304,-7.720275,1.944545,5.794564,-1.492902,4.036127,-8.232110,-5.694891,-9.347482,-0.489896,5.355062,8.482028,-5.318155,1.703165,3.519813,9.603228,4.548532,-6.700794,-7.332652,-9.609546,8.157486,-0.400368,2.516676,1.043779,5.669264,-3.255149,-4.766872,-6.644429,6.781732,7.050096,5.443600,5.895948,-4.979621,-6.234695,2.891796,-3.633048,-3.806240,-7.879231,7.444631,5.037410,3.830322,-9.369831,3.636136,-7.707826,-4.459376,4.061830,0.695292,-4.441337,8.769451,-8.909234,6.815126,5.187226,9.293443,8.937337,2.796906,-1.110488,7.446702,-3.077137,9.561296,4.366550,-8.608338,8.118772,5.226862,-9.418760,-0.753237,1.686693,9.792630,-3.781850,-0.392435,2.136320,-5.278994,-2.783244,-5.118774,8.227953,-0.065815,9.289153,9.871314,-0.025161,-9.715667,0.400502,3.113002,2.972855,1.785500,3.042131,4.176398,0.994116,-5.821669,5.999441,-7.378027,-7.701525,8.748914,-8.592618,7.954811,8.524942,7.142571,-6.073786,2.336673,6.033061,2.671326,-9.403872,8.946610,9.995705,-8.019357,6.107728,1.200892,8.248894,2.611971,1.088330,-3.873642,3.027060,-2.164128,-8.339575,3.990957,-8.609878,-8.823901,9.705706,8.673667,-9.941430,-7.121864,-2.368567,7.138193,-5.555344,6.472221,8.974176,7.772028,0.289773,2.396866,3.681845,9.181579,4.739058,7.175639,-1.394045,5.309229,-3.785569,-0.637690,8.661156,-6.090057,-3.237322,-5.080195,1.532871,-1.479763,2.449193,-2.845785,-1.753929,-5.902435,2.877636,6.959818,-0.767356,-9.874753,-5.985765,-4.754417,2.163086,6.324215,-2.194132,5.887759,1.886088,4.400469,8.506115,-4.009177,0.607219,-7.739033,-8.526092,-9.025304,-5.571200,8.966923,7.105779,4.723732,-1.105066,3.288825,-1.069618,-7.873678,-8.955554,-9.016664,4.379581,-6.072734,2.244813,3.321226,-8.160515,1.819182,6.533915,8.971621,-8.908133,7.548487,8.162953,5.013674,6.592511,-2.474138,3.485702,-3.571545,6.314044,-2.521811,8.212929,-9.160279,9.773260,-1.817385,-2.279250,-5.974531,-7.736445,8.809006,-8.003808,2.562655,-1.008207,8.685191,-3.401001,-9.820481,-3.386161,8.722373,-5.830132,5.676952,9.397031,-6.937171,7.375806,-5.127506,-0.741293,-7.540972,-2.453492,6.295200,7.949863,9.417328,-7.797803,2.918603,-7.383946,-8.861325,-1.097987,-6.753922,7.936846,5.877598,7.539469,6.010371,3.502980,-3.926469,4.875984,-6.968505,2.059714,7.794283,2.129442,-8.416740,4.019250,-3.601824,3.121550,4.271390,-2.316770,0.287196,-9.601496,0.859694,-9.196463,6.341397,6.854211,-9.284057,8.113428,-8.571854,-0.215111,-6.107248,1.404003,0.556397,-3.770268,-7.355594,5.601949,-2.182240,-3.540816,8.508798,-1.206269,-2.314252,-9.838591,-8.687825,-9.013711,-0.063128,9.098932,-1.471890,-3.544748,2.131214,-1.511362,9.585895,-3.556750,6.923804,4.755733,5.756899,-7.234966,-1.744699,8.854700,-0.213112,7.370064,-0.170289,-8.325660,-2.228084,3.385857,9.586067,4.742075,8.795740,-7.732585,-7.526997,-0.466057,3.927012,1.447456,9.670975,-9.970133,1.762452,0.206176,7.177560,-0.118038,-8.395188,5.065004,-3.305739,-8.719649,-5.105087,-6.012296,-1.798062,5.470989,1.276371,1.487450,3.720170,6.482501,-7.203364,-2.400635,-7.695037,3.323958,-4.316806,-5.534771,1.964448,4.430121,2.169586,-6.727551,-5.283631,-5.081371,-2.659360,-1.992976,3.699154,-1.134865,-2.378286,1.208419,-4.236673,6.209325,-3.211985,8.600519,-7.344805,1.102766,-1.688305,-1.733292,3.520123,7.902922,-2.239678,0.858673,6.688306,0.460962,5.084107,-0.986180,8.285564,-8.579486,5.449664,5.493847,-9.975402,3.401246,-4.268647,4.968188,-2.742152,-9.670577,3.157081,4.894998,9.436425,-4.029033,2.727908,-2.302909,8.676757,-0.038482,-9.479169,-0.694966,6.313265,-7.444547,0.465807,3.458108,-5.792449,2.824204,-2.950844,-9.901965,4.568091,-9.931288,3.098252,-8.840097,2.758740,8.236695,-3.063958,9.931137,4.096241,-8.639352,9.875445,4.207288,4.418273,2.000656,8.117294,1.506431,2.465316,1.885808,0.737627,6.631461,9.170655,-8.334119,-2.291907,4.134164,4.029115,8.717676,8.015864,-1.894888,4.091424,-8.191880,8.900488,9.483650,0.852134,0.737465,-2.441369,-6.569467,2.414522,-1.827852,-3.746113,-0.368170,4.573361,-2.073067,-1.985540,2.910242,6.379121,-1.898582,7.215290,6.933680,-7.693279,0.517592,7.391772,-7.362482,8.307205,-9.589875,-3.677544,3.998794,-8.681121,2.218941,3.580676,-9.070252,-0.187134,6.151115,6.303300,1.393737,-0.490582,-3.888068,-3.689223,-4.042445,7.846363,0.741296,4.392088,4.446150,-4.861598,-4.242642,5.370333,-6.265271,2.314362,-9.761282,-7.949604,3.171421,-3.267841,-4.792700,-7.787046,-8.433304,-7.557827,-5.048199,0.006792,7.429876,-2.238495,8.606762,4.391033,8.777293,1.230748,3.259247,2.955658,-3.605963,-6.326860,-4.395820,-2.152466,7.088236,-5.871329,-9.476582,4.871392,-0.192444,-7.532464,-3.899331,7.828243,-1.464916,9.103559,9.547432,-3.014405,-3.361949,-7.781375,-1.726691,-8.272978,5.534230,9.210406,-6.489099,-3.522517,-0.437513,-7.935413,-2.739355,-3.323385,-8.333424,-8.185648,2.298193,-7.344808,2.798719,-5.716991,1.503559,4.870180,-7.637043,-1.885709,-8.111640,2.254669,4.165816,4.881834,7.956354,8.239148,5.341127,1.104424,-9.179039,-7.655062,3.825820,8.546808,1.768878,1.999541,1.850297,-7.945864,-9.376383,-7.521639,1.310402,8.921701,-4.515660,5.277356,-8.981724,-9.828619,-2.023369,1.755750,7.986701,-9.498769,4.798573,-2.351413,5.478004,-8.322764,-2.417308,-6.702404,-9.238749,0.153656,-5.554633,-2.813897,8.603360,8.859850,-7.778042,2.091644,-6.915101,-0.020447,-0.134423,-1.515111,-3.845607,0.521911,-7.974451,-6.214425,-9.414502,1.529837,-8.618467,9.419505,-7.690734,3.159884,3.971580,-7.190532,-5.888665,-2.513989,-9.145376,9.956130,0.932204,2.175112,-4.976058,6.604328,4.417190,3.521242,-9.071293,-3.222089,4.882900,2.415060,-7.750012,-0.102521,6.787598,1.649478,-8.059841,-3.538327,-3.257458,3.099346,1.992005,0.563366,6.189869,6.609382,4.153607,-9.029642,2.409414,-4.745563,0.248734,5.969699,6.246597,-4.183911,3.128083,3.800087,6.431538,-0.239227,2.454210,1.614715,-2.356645,4.670477,-1.569870,-7.029992,6.892504,-8.819727,-8.068388,8.615070,-4.980659,8.422283,-6.139199,1.984779,8.513981,3.688073,7.989720,9.385348,5.693627,-9.587493,-6.082079,6.030770,1.046130,-6.594563,0.129144,8.281538,-9.625141,1.038316,0.986683,-0.549942,-0.960143,-7.931332,-4.448041,4.435492,-8.770961,-0.760467,7.185165,-6.453811,2.911780,-5.276949,3.933815,-9.389289,-2.907216,-9.846204,9.466945,-0.775127,-7.811691,1.271224,-8.598953,-8.186242,-9.707308,2.233804,4.255652,-1.404414,-0.799889,8.244879,-6.886401,2.038932,-0.811263,8.967848,-9.057305,3.656330,-1.077183,-4.079582,-6.548878,2.424408,7.638888,-0.344642,-1.482229,2.577371,7.861405,-9.497388,-5.160512,-2.052682,-6.203941,-3.735404,7.907862,8.504317,9.026505,-4.937993,5.319121,-6.794558,-3.609190,4.158072,-0.182840,1.898292,1.450451,4.778398,-7.292531,-5.908931,0.488069,7.636823,6.952270,-3.092989,-2.399338,-0.934845,-1.796792,-1.221840,5.510645,-3.391940,-1.548484,6.427280,9.384733,-5.632180,-8.749768,-4.296235,0.572537,-2.527805,5.258508,3.657308,6.997472,1.202046,4.254819,-9.415455,5.891396,-5.718971,-8.193748,7.400140,-5.352547,1.561765,0.441105,1.123377,-9.059472,4.583818,-4.623442,4.233706,-3.391928,-5.092045,2.065696,-1.843724,4.545596,-1.860014,-6.149409,3.981213,8.594283,9.529120,1.011912,-5.903138,-9.079037,1.241379,-0.662458,-9.277701,9.100933,-4.216862,6.054336,2.297997,2.434983,-3.605241,0.950892,9.156846,9.865566,5.814913,2.367791,-5.253697,9.747059,-2.205187,-3.107496,-7.002151,2.351202,-8.771780,3.353260,6.082715,-2.891515,-0.112663,-8.993629,-5.390263,-0.154965,-9.474783,3.488334,0.287740,-6.625802,8.164137,-0.685204,-9.018002,-5.178747,-0.829579,-0.296092,5.108737,-2.449729,-6.809175,7.453115,-1.987167,0.753663,7.895778,3.315475,4.180083,-0.477778,-1.002208,8.248034,4.129225,-3.210098,8.970069,8.424974,3.195123,4.624270,-8.625329,-0.294666,-0.549579,4.233958,9.954354,0.719600,-1.644067,4.188769,-5.296172,5.721114,-2.730049,-9.138765,-6.233674,-8.208009,7.586267,-3.986108,-6.091452,-5.245252,-7.592157,-5.728719,-5.088936,-6.740048,-9.151216,3.245333,-0.418199,-0.805751,-4.493014,2.958862,-5.229280,-3.351077,2.416833,-8.383015,-3.669066,-2.349160,-3.344811,-3.429010,-9.556997,-1.776514,-4.077709,-3.457382,-8.813277,5.455898,0.426296,-6.044521,6.012566,2.325779,3.620127,-0.920488,-0.308976,-9.381405,-3.717536,0.520975,0.994261,4.585722,2.529508,5.895298,-4.889645,0.799615,2.084953,3.850710,-4.162500,6.521839,-9.494851,3.138456,-2.772524,-6.830172,-9.632712,-5.355117,9.701970,6.161181,0.887846,-3.414801,-9.074117,3.724242,8.663505,-3.074754,7.412105,4.823891,8.005496,-5.085820,-2.534721,-3.984452,-0.434178,3.587324,-3.221296,-2.753520,7.061978,0.330820,-0.521768,7.714957,-1.293481,-5.086165,0.844743,3.131255,-7.549407,-8.953574,-3.498444,-9.944602,5.007090,-6.300303,-9.068904,6.295185,-3.882613,5.544385,0.481528,-2.320399,-5.331401,8.374858,9.023403,8.124987,-7.156942,-3.842659,-2.865832,7.050353,-7.291692,-0.947835,1.246707,-6.918519,-4.325531,-7.364137,-8.239085,2.480485,5.447092,-7.890872,-8.163903,6.542445,-4.925264,2.189437,-1.508467,-5.406656,2.775519,1.696665,7.522184,-4.628713,-4.925611,5.530729,9.385498,9.115938,-3.074846,7.320550,8.635315,2.506910,9.532931,0.285954,-8.258564,-0.350374,-1.334744,-6.937587,-8.812034,3.588984,7.270383,0.481756,-1.437786,-1.663154,6.065477,3.180724,-4.085702,-6.929556,0.221614,4.953165,1.212381,1.155431,3.739403,5.831833,-3.117878,-0.104282,-3.096740,4.441723,5.432123,4.987156,0.019543,9.377895,1.485183,4.865821,7.886944,-6.672186,5.524891,-3.486495,4.669439,-4.455594,5.080951,-7.959276,-8.571459,-9.999440,7.662675,-6.597839,-4.229802,-6.218870,4.974097,-7.809884,-8.111209,-3.275321,9.278465,-0.966643,-3.706764,-6.140536,-0.543032,2.432691,-1.947591,-9.640549,3.910750,5.105538,-8.867587,-1.181527,1.836002,9.286504,5.838323,0.488535,-7.061838,-9.484035,-8.420891,-4.584314,5.638098,-9.921000,3.541731,4.572866,5.510364,-0.117388,-4.933372,-9.284436,-6.614904,6.267577,7.373867,-2.670185,-5.576729,-1.137962,3.522321,5.103120,3.937238,1.755439,-6.979727,0.635718,3.233915,-0.753921,-3.478088,1.106500,-6.028495,0.761398,-4.010389,0.158197,-8.768525,4.654767,8.320054,-4.633909,-2.157499,7.809132,-0.322097,2.536993,3.294253,0.635051,-4.527937,-0.182675,4.613613,-6.536419,6.732508,-3.788367,0.764667,0.944082,8.829411,9.547149,0.944453,-1.028670,-1.178430,5.477959,9.442737,7.882306,-7.271572], dtype = "float64")#candidate|4083|(1260,)|const|float64
call_4082 = func_2831_call(relay.reshape(const_4083.astype('float64'), [12, 15, 7]))
call_4084 = func_2831_call(relay.reshape(const_4083.astype('float64'), [12, 15, 7]))
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_4088 = func_2154_call()
call_4089 = func_2154_call()
func_617_call = mod.get_global_var('func_617')
func_620_call = mutated_mod.get_global_var('func_620')
call_4091 = relay.TupleGetItem(func_617_call(relay.reshape(uop_4057.astype('float64'), [12, 14, 9])), 0)
call_4092 = relay.TupleGetItem(func_620_call(relay.reshape(uop_4057.astype('float64'), [12, 14, 9])), 0)
func_3741_call = mod.get_global_var('func_3741')
func_3744_call = mutated_mod.get_global_var('func_3744')
call_4100 = relay.TupleGetItem(func_3741_call(relay.reshape(const_4080.astype('float32'), [12, 3, 7])), 0)
call_4101 = relay.TupleGetItem(func_3744_call(relay.reshape(const_4080.astype('float32'), [12, 3, 7])), 0)
func_2325_call = mod.get_global_var('func_2325')
func_2327_call = mutated_mod.get_global_var('func_2327')
const_4104 = relay.const([-7,10,-8,5,-7,10,1,9,10,-7,7,-2,3,-3,9,-1,-4,-4,4,-10,-10,-8,8,6,3,1,-1,8,-10,10,-8,-8,2,5,-1,-8,5,5,5,3,5,9,-7,-1,9,10,4,2,-10,-3,-3,-6,-9,4,-2,-4,-1,2,2,-8,-7,-10,6,7,8,1,-1,2,7,5,-2,-4,-10,2,-2,-2,-9,-9,4,-3,4,-6,10,-6,-1,-4,-8,8,7,-1,-2,-9,5,8,-2,2,4,2,5,8,-6,8,5,3,8,2,-7,1,-8,3,-1,-5,-4,-8,4,-6,-2,-4,10,8,9,8,-10,-2,-9,10,2,4,2,-7,-9,7,-7,6,-6,5,-6,-5,-3,7,-2,1,-2,-1,8,3,1,9,-10,-5,-3,4,-5,-8,-8,10,1,5,8,-10,-6,-4,-2,4,9,-8,2,-2,5,-5,4,-4,-9,-10,6,1,-2,10,-7,-8,4,9,-10,-2,10,7,-5,6,-1,-10,6,-1,-6,4,7,-2,-8,8,-3,-4,-10,-4,3,8,6,-10,-9,3,-4,-1,-9,-2,5,8,10,10,4,-4,3,10,8,-6,-3,-2,-7,7,-7,6,9,-9,-5,-9,-4,3,-5,-9,-5,1,5,4,-8,10,10,-7,-8,-9,7,2,-1,9,10,-10,-4,-10,4,-2,4,6,-8,2,1,-10,9,8,-7,-7,-6,9,-8,10,4,4,6,2,5,9,-7,-4,1,8,10,4,-2,9,-3,-4,3,-6,10,-10,-4,-2,-7,9,10,-5,-5,-10,1,9], dtype = "uint64")#candidate|4104|(300,)|const|uint64
call_4103 = relay.TupleGetItem(func_2325_call(relay.reshape(const_4104.astype('uint64'), [6, 10, 5])), 0)
call_4105 = relay.TupleGetItem(func_2327_call(relay.reshape(const_4104.astype('uint64'), [6, 10, 5])), 0)
output = relay.Tuple([uop_4057,call_4079,const_4080,call_4082,const_4083,call_4088,call_4091,call_4100,call_4103,const_4104,])
output2 = relay.Tuple([uop_4059,call_4081,const_4080,call_4084,const_4083,call_4089,call_4092,call_4101,call_4105,const_4104,])
func_4116 = relay.Function([], output)
mod['func_4116'] = func_4116
mod = relay.transform.InferType()(mod)
mutated_mod['func_4116'] = func_4116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4116_call = mutated_mod.get_global_var('func_4116')
call_4117 = func_4116_call()
output = call_4117
func_4118 = relay.Function([], output)
mutated_mod['func_4118'] = func_4118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2228_call = mod.get_global_var('func_2228')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_4148 = relay.TupleGetItem(func_2228_call(), 0)
call_4149 = relay.TupleGetItem(func_2230_call(), 0)
func_2251_call = mod.get_global_var('func_2251')
func_2252_call = mutated_mod.get_global_var('func_2252')
call_4154 = func_2251_call()
call_4155 = func_2251_call()
output = relay.Tuple([call_4148,call_4154,])
output2 = relay.Tuple([call_4149,call_4155,])
func_4159 = relay.Function([], output)
mod['func_4159'] = func_4159
mod = relay.transform.InferType()(mod)
mutated_mod['func_4159'] = func_4159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4159_call = mutated_mod.get_global_var('func_4159')
call_4160 = func_4159_call()
output = call_4160
func_4161 = relay.Function([], output)
mutated_mod['func_4161'] = func_4161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2998_call = mod.get_global_var('func_2998')
func_2999_call = mutated_mod.get_global_var('func_2999')
call_4223 = relay.TupleGetItem(func_2998_call(), 0)
call_4224 = relay.TupleGetItem(func_2999_call(), 0)
uop_4225 = relay.log2(call_4223.astype('float32')) # shape=(637,)
uop_4227 = relay.log2(call_4224.astype('float32')) # shape=(637,)
var_4229 = relay.var("var_4229", dtype = "int32", shape = (637,))#candidate|4229|(637,)|var|int32
bop_4230 = relay.divide(call_4223.astype('float64'), relay.reshape(var_4229.astype('float64'), relay.shape_of(call_4223))) # shape=(637,)
bop_4233 = relay.divide(call_4224.astype('float64'), relay.reshape(var_4229.astype('float64'), relay.shape_of(call_4224))) # shape=(637,)
uop_4236 = relay.sqrt(uop_4225.astype('float64')) # shape=(637,)
uop_4238 = relay.sqrt(uop_4227.astype('float64')) # shape=(637,)
output = relay.Tuple([bop_4230,uop_4236,])
output2 = relay.Tuple([bop_4233,uop_4238,])
func_4244 = relay.Function([var_4229,], output)
mod['func_4244'] = func_4244
mod = relay.transform.InferType()(mod)
mutated_mod['func_4244'] = func_4244
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4245 = relay.var("var_4245", dtype = "int32", shape = (637,))#candidate|4245|(637,)|var|int32
func_4244_call = mutated_mod.get_global_var('func_4244')
call_4246 = func_4244_call(var_4245)
output = call_4246
func_4247 = relay.Function([var_4245], output)
mutated_mod['func_4247'] = func_4247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4254 = relay.var("var_4254", dtype = "float32", shape = (6, 15, 9))#candidate|4254|(6, 15, 9)|var|float32
uop_4255 = relay.acos(var_4254.astype('float32')) # shape=(6, 15, 9)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_4259 = relay.TupleGetItem(func_2645_call(), 0)
call_4260 = relay.TupleGetItem(func_2647_call(), 0)
func_3656_call = mod.get_global_var('func_3656')
func_3657_call = mutated_mod.get_global_var('func_3657')
call_4274 = relay.TupleGetItem(func_3656_call(), 0)
call_4275 = relay.TupleGetItem(func_3657_call(), 0)
func_2933_call = mod.get_global_var('func_2933')
func_2937_call = mutated_mod.get_global_var('func_2937')
const_4289 = relay.const([[8,-10,5,6,7,-2,-4,1,6,4,6,-7,-10,-8,-6,9,8,-1,-1,-4,10,9,2,10,3,5,1,-4,-10,5,-3,-2,-6,-5,-9,-7,4,5,-6,-5,10,-8,-2,3,5,10,4,10,-4,-9,1,-3,10,2,-4,4,-6,6,-5,10,7,-9,-3,-1,3,1,5,-10,4,2,-6,4,9,10,9,7,3,6,-6,-2,-6,2,8,6,-3,-10,7,2,5,1,3,1,5,-1,-4,-7,-7,4,2,-7,-10,-5,-10,2,-9,9,-10,-10,-8,5,6,-4,2,8,8,10,-2,-3,-4,-10,-8,6,9,-5,7,-9,-4,5,9,-4,3,-4,-1,-9,-4,7,-8,-3,1,2,-10,10,-3,1,-2,-10,-7,10,-3,-2,-8,2,1,10,5,-9,-4,8,6,9,2,-3,-4,-8,1,-6,8,6,-3,-3,-10,-3,3,-2,-1,-7,10,4,4,-5,-4,6,10,3,-8,-4,-9,5,-10,-1,7,6,9,-5,3,-7,-10,-9,5,-4,10,-1,4,-1,2,5,-1,1,10,2,-6,8,-2,-6,1,-1,-7,10,-8,-6,-4,-4,-2,4,10,3,6,2,2,-6,8,-4,10,8,6,10,5,-4,6,-8,5,-2,5,-9,-2,10,2,6,-7,-10,8,-2,4,1,7,8,-1,2,-6,2,10,7,5,2,6,6,3,-9,5,1,-7,3,1,1,10,5,-5,-2,6,4,-7,5,10,9,4,-9,-8,9,2,9,5,-4,6,3,-9,3,-9,7,4,9,5,7,4,5,7,-10,7,3,9,3,-2,5,5,-5,8,-7,3,8,-9,3,-8,8,-6,-9,4,-4,-8,-10,-1,-2,-8,-5,4,-6,8,-8,-2,-2,-7,3,10,-10,6,-3,-6,9,-5,-4,-8,1,2,2,8,-2,2,-8,3,-3,1,-8,-3,2,-1,-7,9,-5,-9,-4,-1,-4,4,-7,2,-7,-8,-2,4,-10,-10,-4,-9,9,7,7,-2,1,4,2,-10,1,-4,10,4,-2,9,3,-8,7,6,3,6,-1,-4,8,-3,-3,-9,6,-2,-10,-6,-10,3,-10,-1,6,-9,-8,3,-8,-3,3,3,-9,-8,8,2,-6,5,-6,9,4,1,4,5,10,4,-4,-3,-1,-10,4,-7,6,8,-8,4,-8,3,-10,-3,-10,4,-1,-5,-9,-3,8,7,2,6,4,-4,-8,4,7,6,4,1,8,-10,-2,2,-3,-4,6,-4,1,-5,-7,6,-6,-3,-2,-6,10,-7,-8,-2,10,5,5,8,-9,6,-2,2,-5,-6,9,7,-9,4,5,-8,2,-5,-5,7,-8,10,5,7,8,7,7,-1,-8,4,10,10,-5,1,8,4,10,3,9,-5,5,-4,-4,9,-9,5,4,3,8,1,-1,9,10,-7,4,-6,4,1,7,1,-4,-7,-4,10,-6,8,-8,1,3,-9,-1,-7,-6,-4,10,-9,4,3,-8,-9,-5,-4,-6,-3,4,-7,6]], dtype = "int32")#candidate|4289|(1, 576)|const|int32
call_4288 = relay.TupleGetItem(func_2933_call(relay.reshape(const_4289.astype('int32'), [9, 8, 8]), relay.reshape(const_4289.astype('int32'), [9, 8, 8]), ), 2)
call_4290 = relay.TupleGetItem(func_2937_call(relay.reshape(const_4289.astype('int32'), [9, 8, 8]), relay.reshape(const_4289.astype('int32'), [9, 8, 8]), ), 2)
output = relay.Tuple([uop_4255,call_4259,call_4274,call_4288,const_4289,])
output2 = relay.Tuple([uop_4255,call_4260,call_4275,call_4290,const_4289,])
func_4294 = relay.Function([var_4254,], output)
mod['func_4294'] = func_4294
mod = relay.transform.InferType()(mod)
mutated_mod['func_4294'] = func_4294
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4295 = relay.var("var_4295", dtype = "float32", shape = (6, 15, 9))#candidate|4295|(6, 15, 9)|var|float32
func_4294_call = mutated_mod.get_global_var('func_4294')
call_4296 = func_4294_call(var_4295)
output = call_4296
func_4297 = relay.Function([var_4295], output)
mutated_mod['func_4297'] = func_4297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3129_call = mod.get_global_var('func_3129')
func_3131_call = mutated_mod.get_global_var('func_3131')
call_4304 = func_3129_call()
call_4305 = func_3129_call()
func_3029_call = mod.get_global_var('func_3029')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_4309 = relay.TupleGetItem(func_3029_call(), 0)
call_4310 = relay.TupleGetItem(func_3031_call(), 0)
output = relay.Tuple([call_4304,call_4309,])
output2 = relay.Tuple([call_4305,call_4310,])
func_4331 = relay.Function([], output)
mod['func_4331'] = func_4331
mod = relay.transform.InferType()(mod)
mutated_mod['func_4331'] = func_4331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4331_call = mutated_mod.get_global_var('func_4331')
call_4332 = func_4331_call()
output = call_4332
func_4333 = relay.Function([], output)
mutated_mod['func_4333'] = func_4333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3129_call = mod.get_global_var('func_3129')
func_3131_call = mutated_mod.get_global_var('func_3131')
call_4397 = func_3129_call()
call_4398 = func_3129_call()
output = relay.Tuple([call_4397,])
output2 = relay.Tuple([call_4398,])
func_4411 = relay.Function([], output)
mod['func_4411'] = func_4411
mod = relay.transform.InferType()(mod)
output = func_4411()
func_4412 = relay.Function([], output)
mutated_mod['func_4412'] = func_4412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2728_call = mod.get_global_var('func_2728')
func_2729_call = mutated_mod.get_global_var('func_2729')
call_4446 = relay.TupleGetItem(func_2728_call(), 0)
call_4447 = relay.TupleGetItem(func_2729_call(), 0)
func_3021_call = mod.get_global_var('func_3021')
func_3022_call = mutated_mod.get_global_var('func_3022')
call_4449 = relay.TupleGetItem(func_3021_call(), 0)
call_4450 = relay.TupleGetItem(func_3022_call(), 0)
func_3741_call = mod.get_global_var('func_3741')
func_3744_call = mutated_mod.get_global_var('func_3744')
var_4452 = relay.var("var_4452", dtype = "float32", shape = (6, 42))#candidate|4452|(6, 42)|var|float32
call_4451 = relay.TupleGetItem(func_3741_call(relay.reshape(var_4452.astype('float32'), [12, 3, 7])), 1)
call_4453 = relay.TupleGetItem(func_3744_call(relay.reshape(var_4452.astype('float32'), [12, 3, 7])), 1)
var_4454 = relay.var("var_4454", dtype = "float32", shape = (6, 42))#candidate|4454|(6, 42)|var|float32
bop_4455 = relay.left_shift(var_4452.astype('uint32'), relay.reshape(var_4454.astype('uint32'), relay.shape_of(var_4452))) # shape=(6, 42)
func_3401_call = mod.get_global_var('func_3401')
func_3405_call = mutated_mod.get_global_var('func_3405')
var_4471 = relay.var("var_4471", dtype = "float32", shape = (924,))#candidate|4471|(924,)|var|float32
call_4470 = relay.TupleGetItem(func_3401_call(relay.reshape(var_4471.astype('float32'), [12, 11, 7]), relay.reshape(var_4452.astype('float32'), [126, 2]), ), 1)
call_4472 = relay.TupleGetItem(func_3405_call(relay.reshape(var_4471.astype('float32'), [12, 11, 7]), relay.reshape(var_4452.astype('float32'), [126, 2]), ), 1)
output = relay.Tuple([call_4446,call_4449,call_4451,bop_4455,call_4470,var_4471,])
output2 = relay.Tuple([call_4447,call_4450,call_4453,bop_4455,call_4472,var_4471,])
func_4473 = relay.Function([var_4452,var_4454,var_4471,], output)
mod['func_4473'] = func_4473
mod = relay.transform.InferType()(mod)
mutated_mod['func_4473'] = func_4473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4473_call = mutated_mod.get_global_var('func_4473')
var_4475 = relay.var("var_4475", dtype = "float32", shape = (6, 42))#candidate|4475|(6, 42)|var|float32
var_4476 = relay.var("var_4476", dtype = "float32", shape = (6, 42))#candidate|4476|(6, 42)|var|float32
var_4477 = relay.var("var_4477", dtype = "float32", shape = (924,))#candidate|4477|(924,)|var|float32
call_4474 = func_4473_call(var_4475,var_4476,var_4477,)
output = call_4474
func_4478 = relay.Function([var_4475,var_4476,var_4477,], output)
mutated_mod['func_4478'] = func_4478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3232_call = mod.get_global_var('func_3232')
func_3234_call = mutated_mod.get_global_var('func_3234')
call_4498 = func_3232_call()
call_4499 = func_3232_call()
output = call_4498
output2 = call_4499
func_4506 = relay.Function([], output)
mod['func_4506'] = func_4506
mod = relay.transform.InferType()(mod)
output = func_4506()
func_4507 = relay.Function([], output)
mutated_mod['func_4507'] = func_4507
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4555 = relay.var("var_4555", dtype = "float64", shape = (4, 9, 11))#candidate|4555|(4, 9, 11)|var|float64
const_4556 = relay.const([[[8.881517,-6.716257,-3.567090,-3.781273,4.247752,4.446004,2.863396,7.616076,4.116272,8.755691,-2.579637],[-1.295030,5.062879,-9.306289,9.432889,9.544544,9.115817,-5.426770,5.823978,-1.335978,-5.286361,3.312670],[7.853468,-4.081367,6.249386,-1.962706,1.038841,7.360741,8.316851,-4.535808,7.927325,9.781048,-3.220656],[-9.227423,-6.871664,-6.048277,-8.042724,-6.755522,-3.856701,0.717725,-2.914816,4.457124,-9.948366,1.928929],[-8.987704,1.748612,1.954663,-5.922467,-1.549553,-9.019992,-7.082630,5.048749,-7.563690,-7.327677,-5.524638],[-1.223172,-1.951444,2.236357,-6.461203,-3.229624,-0.939202,-5.955843,-5.592671,1.126206,-7.769053,3.168465],[8.110383,3.972387,-2.803857,-5.810122,1.788680,-2.256888,3.499984,2.912649,-2.792371,-4.077757,9.631922],[-4.331299,-3.593029,-0.488608,1.851629,3.363315,-2.373250,-4.737529,-9.343109,0.762985,3.983269,2.469380],[0.916979,-3.664427,-2.314650,2.634086,-7.674883,1.662682,9.631291,5.913505,0.382715,5.214513,8.819939]],[[5.388070,5.719864,-1.904847,-5.022006,7.571997,-3.929871,3.229653,-3.803731,-9.035504,-6.345543,8.338015],[3.241838,4.811550,1.626916,-5.588377,-7.321068,5.933825,-9.689514,3.512581,1.493601,4.795089,-8.046922],[6.726662,2.284373,4.870300,5.955374,6.602370,2.002705,-7.546218,-5.567202,-3.442725,-5.025500,-0.728149],[7.840283,3.330125,-3.325107,-5.326667,9.647920,8.014681,5.060058,-5.566018,-8.286302,4.649918,-2.585884],[-3.497578,-0.130057,-3.602762,-4.101431,1.411149,-5.949525,0.118603,6.808075,7.622494,2.484988,3.256988],[-4.511084,1.882237,-0.032980,-8.749435,-6.238342,0.072756,1.779412,6.958844,-1.022696,3.208397,8.631617],[5.619944,-6.318725,4.793364,6.032703,-8.833148,0.130843,-7.958591,-1.570826,-4.968070,-3.413302,5.172440],[8.070988,9.524177,-8.432340,-1.031150,5.437544,-9.217473,5.163413,3.077473,4.269975,-0.795273,-0.412237],[-1.689919,9.417896,3.463982,-0.836988,-8.819147,-4.300868,3.380386,-4.380990,-8.622331,9.661638,-8.015333]],[[2.758273,1.560404,7.166747,0.593171,3.524308,8.884355,-2.756503,-6.139570,8.237542,4.519289,-5.462483],[-7.272176,-2.015455,8.808095,-2.496807,-6.688965,4.614551,-4.190787,0.406443,-6.600703,4.373564,-2.231930],[5.409270,-2.185130,5.704589,-3.144546,-4.635593,-6.139785,2.020792,-1.128509,9.937377,4.061137,-1.715827],[-9.996301,5.426756,-5.580571,-7.012860,2.067646,9.850536,-7.637477,5.865764,4.642046,-2.448886,-5.831760],[5.207088,9.807683,-1.059941,8.552996,-4.570757,-8.079824,0.404761,-7.770848,1.363180,9.996494,1.658135],[4.914231,-2.319253,-3.534129,9.118530,-9.779155,5.798664,6.446472,2.671178,-1.877269,-5.954924,1.301186],[-8.747604,7.975024,8.169152,-8.306101,5.928045,0.386232,-6.380369,-2.497776,8.836098,-8.419592,-9.296401],[-5.169473,3.941188,4.752643,1.399804,3.250652,-1.177904,-7.182580,9.264448,-0.618125,-3.309257,-7.873279],[7.333237,-7.604595,1.385007,1.553865,7.737196,9.975213,-3.781654,-8.028109,-5.113111,6.929355,2.491216]],[[-8.329425,2.482851,2.292502,7.418224,-1.493066,-0.734097,2.255094,-8.573051,0.785230,-1.198034,-9.742777],[1.202188,-7.132109,-2.622442,-0.876963,5.160499,-5.745423,5.810414,5.127262,0.258447,8.269839,-0.611687],[3.529081,3.859467,-3.623982,-3.971785,-2.995824,-1.326767,8.438369,0.508553,-0.723043,-6.329607,6.866714],[-8.743764,-0.274174,-6.429874,0.708426,-8.224549,7.759266,9.675728,6.536607,-5.199042,4.049609,9.565572],[5.618378,-8.940473,1.637126,-1.303219,-4.877962,0.717416,-6.865616,-8.943151,1.198282,6.512888,-6.787434],[-1.531926,-4.321983,1.336070,3.113435,-7.182260,9.858394,-7.092899,2.882239,0.896173,1.053606,9.269831],[7.073077,3.528245,-3.516802,3.201539,6.944029,4.321695,6.575568,1.430699,3.941307,2.441475,-8.635578],[7.844392,8.433274,7.427285,-8.636032,-1.368261,-1.076088,-3.228108,-5.305306,9.306904,2.362508,7.871591],[-4.966829,-3.790011,-0.315393,-5.070790,1.865266,4.767406,1.257502,-7.634356,4.290217,9.404203,-9.256488]]], dtype = "float64")#candidate|4556|(4, 9, 11)|const|float64
bop_4557 = relay.mod(var_4555.astype('float64'), relay.reshape(const_4556.astype('float64'), relay.shape_of(var_4555))) # shape=(4, 9, 11)
uop_4563 = relay.sin(bop_4557.astype('float32')) # shape=(4, 9, 11)
func_2302_call = mod.get_global_var('func_2302')
func_2304_call = mutated_mod.get_global_var('func_2304')
call_4570 = relay.TupleGetItem(func_2302_call(), 2)
call_4571 = relay.TupleGetItem(func_2304_call(), 2)
func_2486_call = mod.get_global_var('func_2486')
func_2488_call = mutated_mod.get_global_var('func_2488')
var_4577 = relay.var("var_4577", dtype = "float32", shape = (504,))#candidate|4577|(504,)|var|float32
call_4576 = relay.TupleGetItem(func_2486_call(relay.reshape(var_4577.astype('float32'), [12, 6, 7])), 3)
call_4578 = relay.TupleGetItem(func_2488_call(relay.reshape(var_4577.astype('float32'), [12, 6, 7])), 3)
func_3232_call = mod.get_global_var('func_3232')
func_3234_call = mutated_mod.get_global_var('func_3234')
call_4587 = func_3232_call()
call_4588 = func_3232_call()
output = relay.Tuple([uop_4563,call_4570,call_4576,var_4577,call_4587,])
output2 = relay.Tuple([uop_4563,call_4571,call_4578,var_4577,call_4588,])
func_4589 = relay.Function([var_4555,var_4577,], output)
mod['func_4589'] = func_4589
mod = relay.transform.InferType()(mod)
var_4590 = relay.var("var_4590", dtype = "float64", shape = (4, 9, 11))#candidate|4590|(4, 9, 11)|var|float64
var_4591 = relay.var("var_4591", dtype = "float32", shape = (504,))#candidate|4591|(504,)|var|float32
output = func_4589(var_4590,var_4591,)
func_4592 = relay.Function([var_4590,var_4591,], output)
mutated_mod['func_4592'] = func_4592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2998_call = mod.get_global_var('func_2998')
func_2999_call = mutated_mod.get_global_var('func_2999')
call_4599 = relay.TupleGetItem(func_2998_call(), 0)
call_4600 = relay.TupleGetItem(func_2999_call(), 0)
output = relay.Tuple([call_4599,])
output2 = relay.Tuple([call_4600,])
func_4601 = relay.Function([], output)
mod['func_4601'] = func_4601
mod = relay.transform.InferType()(mod)
output = func_4601()
func_4602 = relay.Function([], output)
mutated_mod['func_4602'] = func_4602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_4630 = func_3546_call()
call_4631 = func_3546_call()
output = call_4630
output2 = call_4631
func_4644 = relay.Function([], output)
mod['func_4644'] = func_4644
mod = relay.transform.InferType()(mod)
mutated_mod['func_4644'] = func_4644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4644_call = mutated_mod.get_global_var('func_4644')
call_4645 = func_4644_call()
output = call_4645
func_4646 = relay.Function([], output)
mutated_mod['func_4646'] = func_4646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3052_call = mod.get_global_var('func_3052')
func_3054_call = mutated_mod.get_global_var('func_3054')
call_4713 = func_3052_call()
call_4714 = func_3052_call()
func_3656_call = mod.get_global_var('func_3656')
func_3657_call = mutated_mod.get_global_var('func_3657')
call_4726 = relay.TupleGetItem(func_3656_call(), 0)
call_4727 = relay.TupleGetItem(func_3657_call(), 0)
func_2325_call = mod.get_global_var('func_2325')
func_2327_call = mutated_mod.get_global_var('func_2327')
const_4736 = relay.const([4,-1,-3,-8,2,-1,2,-6,9,6,-5,-3,-5,-4,7,-6,3,3,-10,5,10,1,-5,-7,-10,-10,-2,-1,1,-4,1,1,-5,9,3,7,9,-7,6,9,-5,-1,1,3,-9,2,5,3,-8,-5,-6,6,2,-2,-5,2,-9,6,7,3,4,-6,-9,-9,1,7,8,-7,-7,7,-9,2,4,-9,7,8,1,10,-3,8,5,-3,9,1,8,-9,-9,-6,-1,7,-9,9,9,2,2,-5,-5,10,-8,-1,-1,3,1,6,-4,-10,-7,5,-10,-7,-6,9,-3,-5,-10,-7,-7,2,10,2,10,-9,2,-3,2,7,4,-9,-7,-10,-3,7,-7,-1,-6,3,6,-10,-7,-5,5,-8,9,8,4,-2,-8,8,-9,-4,-2,10,-8,-6,-5,3,2,1,-1,-7,10,1,-2,3,7,-6,-2,-7,-9,7,-6,6,-4,-1,-7,-9,10,2,8,-3,3,-4,-8,-7,-3,-4,5,-7,6,-3,8,7,9,-2,-5,1,-6,4,3,-4,-6,-7,8,-1,4,7,-3,10,4,-10,-8,-10,8,-10,-5,-9,-1,-3,10,3,-7,4,5,-5,-7,-1,-8,9,4,6,4,-2,2,3,-1,-6,7,2,5,2,-2,8,3,-7,7,-6,-1,-5,6,-6,6,-7,1,6,5,-9,2,-1,5,4,3,2,-10,8,-6,-3,6,7,9,5,-5,5,4,-4,5,-2,10,4,-2,6,-9,-2,10,2,5,7,4,7,7,-8,1,-1,-3,-1,-9,2,-9,-3,-6,-10], dtype = "uint64")#candidate|4736|(300,)|const|uint64
call_4735 = relay.TupleGetItem(func_2325_call(relay.reshape(const_4736.astype('uint64'), [6, 10, 5])), 0)
call_4737 = relay.TupleGetItem(func_2327_call(relay.reshape(const_4736.astype('uint64'), [6, 10, 5])), 0)
func_2998_call = mod.get_global_var('func_2998')
func_2999_call = mutated_mod.get_global_var('func_2999')
call_4738 = relay.TupleGetItem(func_2998_call(), 1)
call_4739 = relay.TupleGetItem(func_2999_call(), 1)
var_4744 = relay.var("var_4744", dtype = "float32", shape = (12, 3, 7))#candidate|4744|(12, 3, 7)|var|float32
bop_4745 = relay.greater_equal(call_4726.astype('bool'), var_4744.astype('bool')) # shape=(12, 3, 7)
bop_4748 = relay.greater_equal(call_4727.astype('bool'), var_4744.astype('bool')) # shape=(12, 3, 7)
output = relay.Tuple([call_4713,call_4735,const_4736,call_4738,bop_4745,])
output2 = relay.Tuple([call_4714,call_4737,const_4736,call_4739,bop_4748,])
func_4755 = relay.Function([var_4744,], output)
mod['func_4755'] = func_4755
mod = relay.transform.InferType()(mod)
var_4756 = relay.var("var_4756", dtype = "float32", shape = (12, 3, 7))#candidate|4756|(12, 3, 7)|var|float32
output = func_4755(var_4756)
func_4757 = relay.Function([var_4756], output)
mutated_mod['func_4757'] = func_4757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3021_call = mod.get_global_var('func_3021')
func_3022_call = mutated_mod.get_global_var('func_3022')
call_4796 = relay.TupleGetItem(func_3021_call(), 0)
call_4797 = relay.TupleGetItem(func_3022_call(), 0)
var_4803 = relay.var("var_4803", dtype = "float64", shape = (12, 14, 7))#candidate|4803|(12, 14, 7)|var|float64
bop_4804 = relay.logical_xor(call_4796.astype('uint32'), var_4803.astype('uint32')) # shape=(12, 14, 7)
bop_4807 = relay.logical_xor(call_4797.astype('uint32'), var_4803.astype('uint32')) # shape=(12, 14, 7)
output = relay.Tuple([bop_4804,])
output2 = relay.Tuple([bop_4807,])
func_4809 = relay.Function([var_4803,], output)
mod['func_4809'] = func_4809
mod = relay.transform.InferType()(mod)
var_4810 = relay.var("var_4810", dtype = "float64", shape = (12, 14, 7))#candidate|4810|(12, 14, 7)|var|float64
output = func_4809(var_4810)
func_4811 = relay.Function([var_4810], output)
mutated_mod['func_4811'] = func_4811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mod.get_global_var('func_2345')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_4819 = relay.TupleGetItem(func_2345_call(), 0)
call_4820 = relay.TupleGetItem(func_2347_call(), 0)
uop_4828 = relay.atanh(call_4819.astype('float64')) # shape=(12, 14, 9)
uop_4830 = relay.atanh(call_4820.astype('float64')) # shape=(12, 14, 9)
output = relay.Tuple([uop_4828,])
output2 = relay.Tuple([uop_4830,])
func_4838 = relay.Function([], output)
mod['func_4838'] = func_4838
mod = relay.transform.InferType()(mod)
mutated_mod['func_4838'] = func_4838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mutated_mod.get_global_var('func_4838')
call_4839 = func_4838_call()
output = call_4839
func_4840 = relay.Function([], output)
mutated_mod['func_4840'] = func_4840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4116_call = mod.get_global_var('func_4116')
func_4118_call = mutated_mod.get_global_var('func_4118')
call_4844 = relay.TupleGetItem(func_4116_call(), 2)
call_4845 = relay.TupleGetItem(func_4118_call(), 2)
uop_4849 = relay.acosh(call_4844.astype('float32')) # shape=(3, 84)
uop_4851 = relay.acosh(call_4845.astype('float32')) # shape=(3, 84)
output = relay.Tuple([uop_4849,])
output2 = relay.Tuple([uop_4851,])
func_4853 = relay.Function([], output)
mod['func_4853'] = func_4853
mod = relay.transform.InferType()(mod)
output = func_4853()
func_4854 = relay.Function([], output)
mutated_mod['func_4854'] = func_4854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3656_call = mod.get_global_var('func_3656')
func_3657_call = mutated_mod.get_global_var('func_3657')
call_4876 = relay.TupleGetItem(func_3656_call(), 0)
call_4877 = relay.TupleGetItem(func_3657_call(), 0)
output = call_4876
output2 = call_4877
func_4897 = relay.Function([], output)
mod['func_4897'] = func_4897
mod = relay.transform.InferType()(mod)
output = func_4897()
func_4898 = relay.Function([], output)
mutated_mod['func_4898'] = func_4898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3129_call = mod.get_global_var('func_3129')
func_3131_call = mutated_mod.get_global_var('func_3131')
call_4925 = func_3129_call()
call_4926 = func_3129_call()
output = relay.Tuple([call_4925,])
output2 = relay.Tuple([call_4926,])
func_4933 = relay.Function([], output)
mod['func_4933'] = func_4933
mod = relay.transform.InferType()(mod)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4933_call = mutated_mod.get_global_var('func_4933')
call_4934 = func_4933_call()
output = call_4934
func_4935 = relay.Function([], output)
mutated_mod['func_4935'] = func_4935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3232_call = mod.get_global_var('func_3232')
func_3234_call = mutated_mod.get_global_var('func_3234')
call_4938 = func_3232_call()
call_4939 = func_3232_call()
func_2190_call = mod.get_global_var('func_2190')
func_2195_call = mutated_mod.get_global_var('func_2195')
const_4952 = relay.const(5, dtype = "uint64")#candidate|4952|()|const|uint64
const_4953 = relay.const([-3,-4,6,10,-8,9,9,3,5,-6,-10,-1,-1,5,10,-8,2,-4,6,10,2,3,9,5,-9,-1,10,-10,-6,8,8,9,-8,10,-8,-7,2,-2,-6,-9,9,-4,3,1,8,3,5,-7,4,-8,-8,3,-7,-2,-3,7,-10,1,8,1,1,-1,-4,1,4,8,-6,-3,-7,5,-4,10,-5,5,4,9,-8,4,-1,-1,6,-8,-2,3,-3,-7,-3,1,9,3,-2,1,-5,5,9,10,5,6,-8,-7,1,10,-3,4,-6,7,1,1,2,1,-10,-7], dtype = "uint64")#candidate|4953|(112,)|const|uint64
var_4954 = relay.var("var_4954", dtype = "float64", shape = (378, 4))#candidate|4954|(378, 4)|var|float64
call_4951 = relay.TupleGetItem(func_2190_call(relay.reshape(const_4952.astype('uint64'), []), relay.reshape(const_4953.astype('uint64'), [1, 16, 7]), relay.reshape(var_4954.astype('float64'), [1512,]), relay.reshape(var_4954.astype('float32'), [1512,]), ), 0)
call_4955 = relay.TupleGetItem(func_2195_call(relay.reshape(const_4952.astype('uint64'), []), relay.reshape(const_4953.astype('uint64'), [1, 16, 7]), relay.reshape(var_4954.astype('float64'), [1512,]), relay.reshape(var_4954.astype('float32'), [1512,]), ), 0)
bop_4964 = relay.add(var_4954.astype('float64'), const_4952.astype('float64')) # shape=(378, 4)
func_2486_call = mod.get_global_var('func_2486')
func_2488_call = mutated_mod.get_global_var('func_2488')
const_4972 = relay.const([9.498198,-1.110021,-2.319934,2.013673,-4.860357,8.148584,-1.879597,9.298465,8.597706,-0.205876,8.750053,-1.479515,-1.783647,-2.684977,4.976615,2.023344,0.903006,-6.835216,-9.781814,-1.790276,3.510479,-1.984338,-0.001290,9.472819,-4.649028,9.292628,-8.325581,-6.094710,8.256482,9.437521,-4.217018,9.620060,-2.079429,3.363665,6.530815,4.380234,2.305022,9.349738,-1.605013,2.203004,-8.359419,-6.138217,9.529013,9.743071,-3.298179,4.769732,1.320989,-2.841894,-9.513308,-3.850407,4.338686,-2.580472,8.318292,3.277937,5.085435,-0.870282,7.304223,-4.059666,1.222081,-5.068185,-4.123115,4.384373,-3.033610,-9.591446,2.333435,5.227150,-1.310896,-6.017974,7.514478,9.214670,-5.606707,-2.083625,3.061733,-6.470274,-3.338633,-6.385951,-4.873835,-7.226031,8.091677,-1.780069,4.890027,0.430282,8.782578,5.195567,3.770141,9.131214,7.048746,-2.753347,8.459877,8.205744,3.537574,-2.133717,9.903322,-8.823910,5.466565,-2.316729,-1.960940,3.699463,4.356918,-7.669594,1.719810,-1.627865,4.391862,1.105286,-1.571431,-4.492893,-6.746193,6.558303,9.575521,-1.215774,-8.649974,6.284927,2.480923,0.205257,-9.369725,1.170939,3.353217,-7.560256,-8.403961,0.279165,-1.584336,-5.953352,9.160096,4.489274,-0.628150,6.350278,-5.788295,0.311567,3.307881,-9.234600,9.089300,-2.588612,5.563928,4.385334,-7.394843,-4.658998,9.607570,-7.496709,4.052532,8.869028,8.371976,-6.546783,-5.514697,3.007482,-6.901342,1.907663,-8.856104,3.721170,-6.688318,2.825458,7.678208,6.655833,7.862008,4.226003,0.627902,-9.526950,-3.397511,-6.855274,-1.624898,-2.023207,8.057122,-9.896916,6.328374,-2.628803,7.580311,7.459080,9.698018,4.419062,-3.640317,4.530197,7.867693,-3.931903,0.105015,-0.137949,7.111602,-7.844838,-1.393881,-9.962289,-1.736102,1.079019,-2.262506,0.992618,-4.910083,-8.915683,8.682142,-0.721533,1.669229,-9.005037,-8.709642,2.348457,-8.717530,-5.923412,-5.653626,-0.864218,6.739690,-9.696325,-4.104809,-8.391140,-6.257542,1.183569,-0.537826,4.619633,4.250526,-1.344932,-0.573245,3.410195,-0.575179,-8.655296,-7.274941,2.085736,-5.198174,8.849202,8.531252,1.277782,5.541225,-5.810067,9.700453,4.898813,2.211084,-7.807287,0.629115,-9.024191,6.289040,0.367535,-1.457276,-2.774889,-6.251148,9.105814,2.776310,-2.040565,-0.453502,-3.938306,-2.244710,-3.708508,-8.079376,4.373963,-7.658737,7.114264,-7.394480,9.828787,3.503001,-7.235775,9.375110,-6.170918,-8.064284,1.916993,0.861936,-2.894845,-4.829718,2.324558,0.876885,-8.021557,4.291985,-4.274493,-4.377039,-0.920375,5.916827,-3.490260,-8.544029,8.938372,9.551454,3.189357,-8.632439,-8.287876,-9.177625,5.262862,-7.035403,0.754853,4.443114,-9.336108,7.739135,-2.360283,8.479256,-7.570411,4.585733,-7.217715,-1.182365,0.076705,-5.755083,8.963295,9.997785,-7.519107,2.478999,2.743216,4.803091,-2.234606,-8.638029,2.620126,5.558731,-5.869716,2.669537,5.699278,-2.663706,1.303822,-2.278291,-8.614486,3.048032,-6.320979,-1.878940,-5.732066,0.761958,4.812332,8.495390,2.442267,-0.391943,6.990834,-1.161018,6.093853,4.154843,2.829497,-1.795961,7.662708,2.124309,-3.346496,-8.073474,7.342635,5.615075,6.061381,-8.277053,-1.626830,-0.812953,-4.885421,-9.009378,-7.281715,-5.411762,-7.718031,5.260833,7.680693,4.282013,-2.296353,-6.766790,4.171204,-1.951567,-4.054864,0.489237,8.764029,-0.858608,-4.092066,-1.334031,-3.101643,5.790312,4.614154,-9.835082,9.068839,-3.189488,6.873725,4.963680,-2.968354,-3.995187,-5.874854,4.652288,2.261473,-3.070703,3.069300,-8.873963,8.578012,-0.096039,-7.698550,7.753497,-2.728550,-8.491246,-3.733832,-0.966442,0.700915,7.655539,-2.823678,-7.411358,-9.177151,0.695168,0.011926,6.056286,3.593278,0.935870,3.507346,8.385023,-8.747748,4.680585,-0.708490,5.992844,-0.801729,3.026909,-7.635131,0.703311,-4.869001,-1.813326,-4.249296,5.543402,4.221102,-3.153682,5.634645,-7.522434,2.779684,4.300948,2.659857,0.388376,7.745814,-0.890724,-9.993468,3.328473,-0.937724,-0.707170,1.143137,4.777771,-5.418654,2.078874,7.358901,1.506973,-1.781865,-6.653191,-4.818617,2.553905,9.835957,4.105931,5.494302,-5.311883,-0.043462,3.610559,-0.714392,-3.920185,-5.056382,2.401177,4.279119,-5.042623,4.906673,5.194866,-2.112405,4.532472,-6.550983,-7.510956,1.873522,1.999193,7.410180,-1.864597,3.408707,4.942447,-6.936486,-5.009757,9.083745,6.330725,6.360860,-7.686556,-2.470129,7.679477,-3.819218,-6.639536,1.797681,5.847476,-2.341822,-2.973450,-3.983859,9.523809,-3.819671,-7.823384,-0.621151,-8.845499,-6.218840,-3.323674,5.915105,2.864698,1.260558,5.103019,-8.829509,1.035397,-4.683555,-1.894674,3.645426,-1.603414,1.137395,-8.339929,-8.763945,-3.610508,6.398710,3.244057,-0.695295,8.429938,0.887269,-0.412242,5.517251,-8.541110,-0.434628,4.970407,2.133160,2.102630,-2.682702,-7.699804,2.826171,-9.988000,2.810886,2.483363,-2.776370,4.311271,2.530598,8.817744,-9.875302,5.589036,9.840788,-1.710980,-3.147648,7.484034,1.372247,2.287504,-4.879308,-6.698885,-3.788114], dtype = "float32")#candidate|4972|(504,)|const|float32
call_4971 = relay.TupleGetItem(func_2486_call(relay.reshape(const_4972.astype('float32'), [12, 6, 7])), 2)
call_4973 = relay.TupleGetItem(func_2488_call(relay.reshape(const_4972.astype('float32'), [12, 6, 7])), 2)
func_4411_call = mod.get_global_var('func_4411')
func_4412_call = mutated_mod.get_global_var('func_4412')
call_4976 = relay.TupleGetItem(func_4411_call(), 0)
call_4977 = relay.TupleGetItem(func_4412_call(), 0)
func_4159_call = mod.get_global_var('func_4159')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_4978 = relay.TupleGetItem(func_4159_call(), 0)
call_4979 = relay.TupleGetItem(func_4161_call(), 0)
bop_4985 = relay.less(bop_4964.astype('bool'), relay.reshape(var_4954.astype('bool'), relay.shape_of(bop_4964))) # shape=(378, 4)
output = relay.Tuple([call_4938,call_4951,const_4953,call_4971,const_4972,call_4976,call_4978,bop_4985,])
output2 = relay.Tuple([call_4939,call_4955,const_4953,call_4973,const_4972,call_4977,call_4979,bop_4985,])
func_4991 = relay.Function([var_4954,], output)
mod['func_4991'] = func_4991
mod = relay.transform.InferType()(mod)
mutated_mod['func_4991'] = func_4991
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4992 = relay.var("var_4992", dtype = "float64", shape = (378, 4))#candidate|4992|(378, 4)|var|float64
func_4991_call = mutated_mod.get_global_var('func_4991')
call_4993 = func_4991_call(var_4992)
output = call_4993
func_4994 = relay.Function([var_4992], output)
mutated_mod['func_4994'] = func_4994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3232_call = mod.get_global_var('func_3232')
func_3234_call = mutated_mod.get_global_var('func_3234')
call_5032 = func_3232_call()
call_5033 = func_3232_call()
output = relay.Tuple([call_5032,])
output2 = relay.Tuple([call_5033,])
func_5039 = relay.Function([], output)
mod['func_5039'] = func_5039
mod = relay.transform.InferType()(mod)
output = func_5039()
func_5040 = relay.Function([], output)
mutated_mod['func_5040'] = func_5040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3656_call = mod.get_global_var('func_3656')
func_3657_call = mutated_mod.get_global_var('func_3657')
call_5064 = relay.TupleGetItem(func_3656_call(), 0)
call_5065 = relay.TupleGetItem(func_3657_call(), 0)
func_2831_call = mod.get_global_var('func_2831')
func_2833_call = mutated_mod.get_global_var('func_2833')
const_5070 = relay.const([[-6.099315,-5.242863],[5.125732,-2.189199],[-8.551828,6.487698],[6.470420,-8.105591],[-6.730999,-3.462278],[5.678574,0.663973],[8.236464,4.373157],[5.102855,5.032818],[-0.463464,-5.330623],[-9.317970,8.786388],[-5.343652,1.307571],[-7.606657,1.996262],[-7.312693,4.687301],[-7.203202,-2.283857],[-3.157083,2.559576],[6.027693,0.296674],[-0.840405,2.580016],[-5.723391,0.883016],[-0.252470,-7.110556],[3.778692,2.506289],[7.732111,7.812870],[2.519314,-5.266017],[9.072990,-4.402095],[-3.282439,-5.890745],[3.573779,-2.247880],[-4.575944,-4.961530],[-7.313765,9.648446],[7.720259,-9.007079],[-4.338233,-7.756084],[0.194617,2.171403],[-5.783102,7.093980],[4.255352,3.522941],[-3.846897,-1.878424],[5.975669,4.835647],[0.774281,7.488971],[0.093285,-0.660516],[1.269732,-8.196238],[0.026586,6.574216],[2.380572,-0.924187],[5.879018,5.867887],[6.936121,-4.404904],[9.733213,9.773203],[1.975004,3.356918],[-2.077620,-3.345021],[-6.483056,-4.431083],[-9.712381,9.165618],[-7.223643,-4.186456],[5.130626,6.068126],[8.983559,1.817996],[6.352088,0.398290],[-1.427242,-0.697244],[-3.423015,-3.336285],[1.085485,-3.435743],[3.803231,3.897373],[-7.859368,2.343400],[5.672964,-3.134513],[-9.106212,4.443866],[-2.230710,-0.143167],[7.684848,1.554900],[5.926806,-9.007222],[-5.335525,-9.848270],[-4.277208,-4.469269],[2.851130,-6.667469],[-3.911241,6.748892],[0.314175,5.691494],[-4.384408,-5.881367],[-4.764991,8.492156],[2.200958,-0.276211],[7.469340,1.392809],[-4.172267,-2.741093],[2.517048,-8.658276],[5.672335,1.167555],[0.221856,6.515492],[-6.482311,8.450467],[1.672567,0.708174],[5.219014,6.068161],[-4.555194,-6.346796],[-3.291040,2.349411],[-8.446429,9.002245],[5.352543,-7.813992],[4.256799,-5.449548],[1.513175,-6.166407],[3.031881,4.400978],[5.376306,4.232225],[-1.065016,-0.338579],[-9.163036,-3.746638],[-3.925472,-9.691707],[-1.802441,-1.935207],[-6.604472,-0.585408],[-0.008313,0.706847],[-8.450084,-3.161975],[8.305366,6.863578],[-8.409835,-8.988835],[7.743432,8.199426],[-3.720102,-4.066117],[-6.382028,2.639707],[6.768079,-9.423463],[-9.654878,0.670084],[-4.996338,6.024596],[1.448266,2.821793],[-2.874380,-9.503319],[8.626655,8.285467],[-2.541764,-9.075700],[-5.033982,9.879444],[5.673762,-1.920323],[2.685808,-2.553200],[0.071533,0.626940],[8.109266,-0.953025],[-0.997732,0.971580],[-9.082144,-9.817929],[-8.674100,7.254668],[-5.898563,8.345739],[-2.431595,1.423486],[8.645985,-5.295340],[6.598821,-3.862577],[-1.778023,2.147143],[1.272085,-6.909480],[4.868569,-6.542090],[-0.966702,0.559925],[8.883221,-6.220131],[-8.771067,9.870244],[-9.896159,-2.656975],[-2.436511,-2.691694],[-8.769386,3.012140],[-7.117421,1.325899],[-5.060519,-2.248706],[-7.540902,9.497612],[-5.200422,5.611570],[-6.205412,-0.580391],[-3.493294,-4.446092],[5.682405,-5.673609],[-0.742679,-6.278975],[1.293093,6.884778],[7.222596,-8.971267],[0.633495,1.995737],[-6.953324,-6.817459],[-3.199802,9.173910],[6.369778,4.909905],[-7.885718,-5.235330],[0.120164,5.471673],[9.364418,8.010000],[-7.419587,-5.298971],[2.559865,0.066787],[-7.596250,-7.516247],[3.506622,-0.644697],[-7.593549,5.993988],[0.895167,0.479188],[-5.217974,7.339014],[6.408457,2.613886],[2.154668,5.884761],[6.153719,-1.806205],[-6.120337,-4.572469],[-9.124007,8.039195],[-3.837913,7.895352],[-6.125599,8.368122],[7.088461,-5.452309],[9.377637,0.718517],[8.023386,8.387506],[1.463354,4.956314],[9.499837,2.384924],[-8.665252,-2.166871],[-3.642501,-0.253673],[-0.969754,2.968695],[-9.158255,0.922118],[5.716332,-9.988086],[4.205755,-0.535596],[2.929762,1.561319],[1.745501,-7.883770],[3.330957,7.979144],[-5.991558,-6.605638],[3.442647,9.843588],[-1.167335,7.633538],[5.720406,-4.057393],[0.409618,4.854860],[-1.517986,0.599280],[-0.029938,7.057009],[-7.228933,3.681040],[-8.689160,-9.827405],[0.515548,-1.182597],[-4.718729,-5.797454],[0.346915,-2.542320],[3.222969,-4.885343],[-4.474232,1.770441],[8.550672,-8.581313],[2.552818,1.452241],[-4.770220,9.585042],[5.823071,1.567588],[6.603199,4.985840],[-9.718911,-7.460887],[7.042469,-6.343720],[-9.983754,-2.803276],[-4.932369,-7.435097],[-5.199638,-4.917101],[9.979451,9.341304],[9.635266,-6.131408],[-0.864729,0.336884],[3.611939,-8.197128],[-6.066847,5.031021],[-8.761564,1.244201],[-2.915856,4.468746],[7.238917,3.499910],[8.898723,7.641900],[4.845926,-8.399141],[9.916319,2.644757],[6.499448,5.640045],[-2.348706,-2.369841],[4.937001,7.667340],[0.658830,-0.163361],[-2.317357,9.382367],[-4.249064,-6.094205],[-2.280244,0.912692],[0.110876,5.174203],[-4.318733,-9.207405],[0.670760,-6.533379],[-1.775970,-5.624573],[-5.354029,-3.150847],[4.514509,-4.562980],[-2.046572,2.240242],[6.016968,-1.777276],[4.775588,7.954294],[4.023067,-7.642060],[3.888165,1.053567],[8.240566,2.968739],[-9.250154,-9.516738],[-1.454527,-5.203279],[-8.870009,9.803559],[-9.728369,-6.020354],[2.968992,-7.201149],[4.389406,4.288955],[6.506420,7.208215],[6.388341,-1.082029],[-1.332665,5.841785],[7.941623,-5.905893],[9.193718,-2.793581],[8.964084,-7.118308],[-0.384583,1.625947],[1.762726,-0.761143],[6.974505,3.779550],[5.702474,6.602721],[8.627501,-8.991302],[-0.403076,-7.718849],[-8.975413,3.423235],[5.310822,8.508436],[-6.282898,5.923227],[2.164081,-8.947765],[4.902019,0.692311],[1.850715,2.487705],[2.383008,-3.499425],[-6.157517,-3.878508],[9.973710,-5.607092],[0.002248,-1.151142],[1.898768,3.850419],[-9.277879,0.920627],[-4.497181,-6.031735],[6.623810,-2.282971],[8.261782,-7.703803],[0.801308,-9.885086],[7.558516,6.578710],[-7.271376,-7.341476],[3.225248,3.609166],[-4.390434,-8.190204],[4.052536,-6.415934],[-0.235918,-5.897762],[1.443874,1.930093],[3.114338,2.537122],[-5.689218,7.289144],[9.741198,-5.638538],[6.188869,-4.734177],[9.748946,-3.430716],[2.335947,5.439551],[8.472200,0.023785],[9.188026,0.402501],[-0.391525,6.047418],[3.453320,-2.131253],[-7.386584,-5.772011],[-3.415635,4.505333],[4.224032,-5.444059],[5.734101,-1.439107],[3.569213,4.684411],[-7.204631,6.692852],[-3.502552,2.942670],[7.436185,-5.632815],[9.541544,-3.551937],[8.132644,7.028660],[0.010428,3.409979],[5.558656,-4.330261],[3.642337,9.492103],[-7.939326,-5.160498],[4.333698,2.795057],[5.418207,4.644931],[-0.868538,-9.293564],[4.266157,-2.982504],[-8.467030,4.979544],[7.214773,-7.700991],[-0.096935,-9.987840],[9.994721,1.085603],[-4.592633,1.354712],[-9.657343,-5.349138],[-1.340791,-3.137189],[-9.644726,3.626402],[-4.366070,6.134055],[-8.492764,-4.031978],[8.462732,9.608939],[3.250283,-6.425467],[7.440957,-8.167883],[-8.649155,-7.933986],[2.127507,-9.548952],[2.586639,-8.308826],[3.382516,6.788991],[-4.747203,-8.348922],[-4.975170,-0.030447],[-3.585363,-1.379985],[-7.787941,3.121240],[7.768077,-8.387535],[-6.548430,8.856929],[-8.340714,8.445430],[4.157675,5.420581],[-6.334622,2.975891],[5.117977,-1.821205],[-9.028195,-3.750928],[4.242642,1.912962],[8.442420,-1.145619],[5.926962,-6.550709],[5.237240,1.340507],[-8.496237,-4.956948],[-2.209941,-5.986569],[3.882268,0.106698],[1.155928,1.823846],[1.759375,0.551334],[-2.539895,-5.692902],[6.220237,8.203137],[-5.492829,2.156791],[6.714785,1.757258],[-9.082668,3.150779],[-5.855209,9.939988],[-4.588316,0.869651],[-3.886152,3.515518],[-1.890580,-7.635368],[-6.381281,-3.359084],[-5.182674,2.015290],[-5.782231,0.420410],[-3.237585,-9.727574],[5.714700,-3.402051],[-5.576637,8.794899],[9.286930,6.022381],[-6.775681,8.009345],[6.652747,9.569294],[-0.692072,1.919439],[2.092386,8.437948],[-3.718824,-3.517447],[3.769160,1.419205],[-5.898627,-9.371162],[5.668505,9.837417],[6.499067,-1.085742],[1.093302,-5.152299],[8.051145,-9.955140],[-7.823131,-1.559007],[4.195534,-2.234251],[-9.868748,4.473604],[-3.188338,-2.530409],[1.692458,3.654844],[-5.878548,-9.363182],[5.354379,4.952234],[-5.107381,3.596893],[2.366935,5.028674],[6.815852,-7.944068],[-0.550054,-3.133906],[3.451408,-2.202247],[4.066720,-8.042114],[-2.879458,1.491783],[5.483205,-1.907464],[-1.282472,7.298267],[8.459390,-3.447870],[-8.785130,-2.758439],[-0.618793,-9.022052],[6.483759,3.161594],[-4.784478,4.431600],[-3.836249,2.887382],[5.920482,6.366342],[5.187362,-7.845426],[-8.417341,9.837177],[2.942990,9.616475],[9.345687,7.336994],[-1.466705,9.259988],[-1.593834,2.676021],[4.406525,1.481325],[-6.258674,-1.114520],[3.222096,3.500574],[8.440529,-7.903451],[-5.075982,9.152288],[8.057793,2.578926],[6.618521,6.258360],[5.392190,-6.919902],[3.342842,3.901998],[-1.559843,7.590192],[-3.881416,2.443458],[-0.989999,-2.145753],[7.842448,-2.919994],[7.349139,3.907757],[-1.407565,-8.358331],[1.382418,-1.349844],[-4.362850,8.932000],[0.958079,-6.997254],[6.336265,0.868613],[-1.894369,-6.678622],[9.377632,-3.677656],[-6.731263,7.828693],[-8.637887,-9.951844],[-7.088680,-7.428480],[3.961958,-6.043204],[2.367334,-8.207029],[-7.887742,-4.676013],[-1.278332,3.550662],[5.329449,-8.532581],[2.217467,-2.496599],[5.227555,5.330827],[6.301070,7.030792],[3.312314,8.344590],[-2.245280,4.155255],[2.449469,8.496058],[9.941063,-6.094884],[1.753918,-7.978989],[-0.332638,-0.528889],[-1.409470,-3.831842],[-3.556851,-1.841572],[4.192541,-0.407471],[8.820257,-2.393903],[9.416605,-6.866413],[-5.983960,7.717995],[5.655062,-5.418842],[-4.812893,-5.328733],[6.128378,-8.036547],[-0.702359,3.962012],[-7.646928,5.879591],[-1.506546,-6.912377],[-8.057368,-3.174382],[4.738187,-9.287587],[5.523227,5.453885],[7.772341,-6.821901],[-9.061310,-0.163430],[2.788279,-1.923258],[7.084562,-7.517378],[9.298401,9.951716],[2.609923,9.768174],[2.896684,-8.981964],[-4.075801,-4.105033],[3.671828,-4.705940],[5.263658,-2.810487],[8.914996,-0.708302],[-0.693893,-7.116187],[-9.206619,6.303979],[3.211238,-9.282344],[-3.923822,0.502822],[-7.585529,2.206695],[4.648752,8.516858],[-5.109728,8.356510],[-0.797858,0.654613],[-5.940411,8.729312],[8.394527,1.638417],[8.177125,-3.496084],[-0.831746,-7.227753],[2.474302,-5.454209],[-9.658689,-2.748209],[0.330088,-5.109377],[6.273700,-7.667826],[2.582961,-1.886964],[7.649438,6.405348],[-7.831459,-4.360612],[6.372785,3.100358],[-3.078612,8.916551],[-1.056282,-0.103308],[-1.113748,5.315009],[-2.948148,5.876460],[8.736235,-9.280849],[0.753645,3.241459],[7.134602,-9.028773],[8.320568,-0.087274],[1.188926,-3.451460],[2.248057,7.705638],[4.095078,2.950705],[1.998372,1.538534],[1.297039,4.718723],[4.119261,-3.051084],[-3.532536,0.123905],[-8.832989,-1.279033],[-8.538788,5.149346],[1.215418,7.016091],[-3.644485,-4.041066],[3.505799,-1.800597],[8.611959,-6.944461],[6.131058,-2.053939],[0.050167,1.616886],[8.317649,-0.329145],[-4.308325,4.848949],[-4.493658,-5.586932],[1.621734,-0.748486],[-8.243075,7.489298],[-4.641983,-7.303822],[-3.686257,-6.624117],[-8.379540,-1.244733],[2.534221,6.980986],[-7.420668,9.556807],[0.681906,4.148722],[-6.880310,-6.087335],[3.024361,-3.660413],[8.387527,5.163924],[9.207649,9.351259],[7.179726,0.187249],[-3.845564,-6.301699],[3.602643,-5.519395],[3.567730,-7.897291],[0.309677,-3.365445],[-1.039987,0.389829],[2.095513,-9.127796],[-6.259739,-9.378668],[0.745620,-2.781346],[9.294913,-9.658541],[-4.361996,5.970607],[7.706150,2.304461],[-3.219298,2.692243],[-3.772636,-2.770993],[3.449543,2.433674],[1.043809,3.326423],[5.260201,-4.036713],[-9.833961,-8.856957],[0.557734,-7.729694],[9.647493,-2.602078],[4.411580,-9.808645],[-0.140619,9.493256],[0.135174,5.553006],[-5.955666,5.234988],[-4.617056,-3.373990],[2.682067,7.206714],[0.600826,0.699955],[8.458939,-8.878582],[5.503151,-4.683453],[-9.246688,6.055911],[-0.947310,-1.193339],[4.153668,9.524823],[7.265211,-6.354945],[-9.970482,-4.330756],[8.620214,-3.181297],[2.478958,9.658451],[7.177893,-1.751642],[8.483796,-4.116709],[-2.920582,-0.557946],[-5.444632,8.826377],[-2.429946,-0.115789],[2.461450,-6.149797],[-6.767539,7.924038],[1.005822,-8.563938],[-7.333145,-1.527374],[-9.361431,-9.999785],[6.302280,-8.768967],[-5.361598,-3.058092],[2.317104,0.978656],[7.227066,1.421123],[-2.412749,7.879359],[4.407522,-7.684587],[-8.798760,5.328599],[5.866285,4.724997],[0.574058,1.498102],[5.478099,-1.246053],[-1.332110,7.304917],[6.300708,-0.106739],[7.429672,0.560634],[0.364869,-4.567700],[5.950080,3.376555],[8.128232,2.188934],[-7.520069,-4.373815],[-1.317367,0.623286],[-8.192028,-8.252725],[5.265502,7.260183],[-8.487732,-1.137559],[9.799599,6.192674],[-4.718735,8.435862],[4.269342,-6.918284],[4.861017,3.372486],[8.928974,3.976833],[9.597799,1.775316],[-1.906898,6.722395],[-0.679666,-1.704280],[4.881649,-8.361815],[-1.096088,1.130639],[-5.067173,-1.768406],[3.223951,-5.917130],[-4.800080,-7.976476],[1.343938,-7.137843],[0.430096,1.498091],[1.310351,9.110891],[4.003959,9.572851],[1.462672,-3.545124],[-4.599729,-0.671800],[-0.917132,5.583383],[-3.808188,2.631143],[8.902602,8.425637],[1.781918,-4.146328],[-9.936906,9.297734],[8.940264,-9.435229],[-4.560247,4.211454],[9.207285,-2.392947],[-1.158086,-9.528679],[8.924065,-9.067942],[9.874472,1.718383],[-3.963179,-0.958981],[4.226796,2.164161],[-6.776148,-6.147157],[-2.189030,6.877382],[5.248198,7.574413],[9.342897,-4.615594],[5.324327,-9.962572],[-4.018474,-7.675662],[6.949942,9.622622],[-5.610353,-0.449071],[-2.139259,0.367575],[-5.081909,-3.893751],[-7.348968,1.205518],[3.185445,9.947286],[-3.412804,-8.686332],[1.028371,-3.453483],[1.453545,-0.475217],[-2.001307,-1.948649],[9.693258,7.282090],[-3.260039,0.265654],[7.162178,8.870882],[-0.573669,-0.317031],[-5.988638,3.968406],[4.367618,-8.333281],[0.388989,-2.621958],[2.097769,0.140807]], dtype = "float64")#candidate|5070|(630, 2)|const|float64
call_5069 = func_2831_call(relay.reshape(const_5070.astype('float64'), [12, 15, 7]))
call_5071 = func_2831_call(relay.reshape(const_5070.astype('float64'), [12, 15, 7]))
func_4853_call = mod.get_global_var('func_4853')
func_4854_call = mutated_mod.get_global_var('func_4854')
call_5072 = relay.TupleGetItem(func_4853_call(), 0)
call_5073 = relay.TupleGetItem(func_4854_call(), 0)
output = relay.Tuple([call_5064,call_5069,const_5070,call_5072,])
output2 = relay.Tuple([call_5065,call_5071,const_5070,call_5073,])
func_5078 = relay.Function([], output)
mod['func_5078'] = func_5078
mod = relay.transform.InferType()(mod)
output = func_5078()
func_5079 = relay.Function([], output)
mutated_mod['func_5079'] = func_5079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2728_call = mod.get_global_var('func_2728')
func_2729_call = mutated_mod.get_global_var('func_2729')
call_5088 = relay.TupleGetItem(func_2728_call(), 0)
call_5089 = relay.TupleGetItem(func_2729_call(), 0)
const_5107 = relay.const([8,2,8,-8,4,-8,3,6,1,-4,-3,-2,-9,-3,9,-3,-1,-1,-10,-3,2,-7,-7,8,6,4,8,-2,-4,9,6,-2,-9,-5,-3,-5,-10,-1,-7,6,-10,3,-8,-4,9,-6,7,1,3,5,6,3,4,4,-5,-7,1,-5,-4,-1,-4,9,9,7,7,9,4,9,8,-9,4,-7,5,-5,-1,-3,5,4,3,-5,-5,-6,-6,7,10,4,4,-10,5,10,-2,-1,-7,9,8,2,8,-2,-3,-8,-7,-9,-6,-9,-6,7,2,-5,2,-8,-9,4,6,-4,7,4,-6,2,-3,5,10,7,9,-10,7,-3,-6,-8,5,3,-5,5,-9,-5,7,-4,-3,8,5,5,6,2,7,4,1,-5,4,10,-6,-10,5,2,6,-2,-10,5,-8,-7,7,8,-1,-6,2,10,1,3,-3,5,-6,10,-7,3,-4,-10,-4,-10,-5,9,2,-7,9,-10,6,-10,4,10,5,-5,-6,9,-7,-6,-5,10,-4,2,-7,-4,6,5,3,1,1,-8,-5,8,6,-2,8,-10,-9,4,3,-8,3,10,1,6,9,8,1,-6,7,-9,2,-7,-2,-8,2,-5,-9,1,-10,1,-10,-3,-2,-7,-7,-6,-6,1,-8,4,-4,3,5,3,-2,5,3,3,7,8,8,4,-9,-1,-3,-6,-3,-10,4,6,-10,-8,-10,-10,-10,-2,2,-2,2,-7,10,2,4,-6,9,-4,4,4,2,-1,-10,-3,-3,-5,-10,-10,8,6,5,-10,-3,-3,-4,-10,-9,-1,6,-3,-8,-1,-1,-1,-2,10,-10,-2,-3,-9,-2,-5,2,9,-9,4,-1,8,-8,10,5,-1,-8,-9,8,10,-8,10,-1,5,-3,7,-8,5,-3,9,-5,-4,-3,-6,10,-10,10,-6,9,9,2,6,-1,7,-6,-4,7,5,-1,-9,-6,-1,9,5,1,-9,-2,-7,6,8,10,-4,-2,-7,2,5,-6,-4,6,-2,5,-1,6,9,2,3,-9,-9,8,3,-3,-7,7,-2,1,1,7,3,10,3,-9,-5,5,-1,-1,2,7,1,-1,8,-8,7,10,9,4,-3,-10,3,-2,10,-3,7,4,-3,-2,-8,-7,-8,-5,-7,8,-1,-8,-4,3,6,-6,5,3,-4,8,-7,-7,3,9,2,-2,6,1,2,1,9,3,9,1,-10,7,5,-2,7,-10,9,-4,-2,4,-1,4,-4,4,-2,9,6,-3,10,-1,7,8,3,-2,8,-7,-2,-9,-7,-10,-9,-4,4,8,-3,1,-2,9,-2,10,-8,9,7,6,8,-6,-6,-4,8,-4,-4,-10,-5,-2,9,-7,1,6,-3,-4,8,-9,-10,5,-6,-8,6,-7,-8,-10,-2,-5,4,-1,-2,9,8,-6,-3,-8,-10,7,8,-8,2,-5,-6,7,2,6,-4,-5,5,1,-4,4,7,1,5,2,-7,10,-7,-3,5,-4,6,-3,3,-8,-5,1,6,-5,-9,-6,4,-10,-5,10,2,-2,5,9,1,3,2,8,-3,-8,-2,1,-2,-8,5,10,-4,-6,-10,-5,2,7,-1,1,9,-10,-4,8,-3,-7,-4,8,1,-5,8,-2,-7,6,3,3,7,-5,-6,10,-9,10,4,-9,9,-6,5,9,6,-3,-5,2,-2,4,2,-7,-9,-4,4,-9], dtype = "int32")#candidate|5107|(637,)|const|int32
bop_5108 = relay.mod(call_5088.astype('float32'), relay.reshape(const_5107.astype('float32'), relay.shape_of(call_5088))) # shape=(637,)
bop_5111 = relay.mod(call_5089.astype('float32'), relay.reshape(const_5107.astype('float32'), relay.shape_of(call_5089))) # shape=(637,)
bop_5116 = relay.not_equal(const_5107.astype('bool'), relay.reshape(bop_5108.astype('bool'), relay.shape_of(const_5107))) # shape=(637,)
bop_5119 = relay.not_equal(const_5107.astype('bool'), relay.reshape(bop_5111.astype('bool'), relay.shape_of(const_5107))) # shape=(637,)
output = bop_5116
output2 = bop_5119
func_5122 = relay.Function([], output)
mod['func_5122'] = func_5122
mod = relay.transform.InferType()(mod)
mutated_mod['func_5122'] = func_5122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5122_call = mutated_mod.get_global_var('func_5122')
call_5123 = func_5122_call()
output = call_5123
func_5124 = relay.Function([], output)
mutated_mod['func_5124'] = func_5124
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5206 = relay.const([[[7.461300,7.097792,-8.862155],[-4.595044,-6.840243,5.821821],[5.388264,-6.791209,-1.035382],[-8.365879,-7.748733,2.718964],[6.829215,1.455751,-7.349912],[-7.480244,-2.589768,-3.947482],[2.708268,-6.649319,-0.288427],[9.285129,-4.493164,0.594371],[5.047888,6.540766,-5.262198],[-8.908830,1.662998,9.704693],[-9.888941,7.388690,4.712146],[0.226107,-8.545582,-7.226785],[8.065504,7.369517,-4.604664],[-8.694871,-6.043617,6.735467],[-0.713979,-6.323406,-5.550244]]], dtype = "float64")#candidate|5206|(1, 15, 3)|const|float64
uop_5207 = relay.asin(const_5206.astype('float64')) # shape=(1, 15, 3)
uop_5209 = relay.tan(const_5206.astype('float64')) # shape=(1, 15, 3)
bop_5217 = relay.floor_divide(const_5206.astype('float32'), relay.reshape(uop_5209.astype('float32'), relay.shape_of(const_5206))) # shape=(1, 15, 3)
bop_5225 = relay.bitwise_and(bop_5217.astype('int32'), relay.reshape(const_5206.astype('int32'), relay.shape_of(bop_5217))) # shape=(1, 15, 3)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_5228 = relay.TupleGetItem(func_4838_call(), 0)
call_5229 = relay.TupleGetItem(func_4840_call(), 0)
bop_5236 = relay.divide(uop_5207.astype('float64'), relay.reshape(bop_5217.astype('float64'), relay.shape_of(uop_5207))) # shape=(1, 15, 3)
output = relay.Tuple([bop_5225,call_5228,bop_5236,])
output2 = relay.Tuple([bop_5225,call_5229,bop_5236,])
func_5242 = relay.Function([], output)
mod['func_5242'] = func_5242
mod = relay.transform.InferType()(mod)
output = func_5242()
func_5243 = relay.Function([], output)
mutated_mod['func_5243'] = func_5243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4853_call = mod.get_global_var('func_4853')
func_4854_call = mutated_mod.get_global_var('func_4854')
call_5250 = relay.TupleGetItem(func_4853_call(), 0)
call_5251 = relay.TupleGetItem(func_4854_call(), 0)
output = relay.Tuple([call_5250,])
output2 = relay.Tuple([call_5251,])
func_5252 = relay.Function([], output)
mod['func_5252'] = func_5252
mod = relay.transform.InferType()(mod)
mutated_mod['func_5252'] = func_5252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5252_call = mutated_mod.get_global_var('func_5252')
call_5253 = func_5252_call()
output = call_5253
func_5254 = relay.Function([], output)
mutated_mod['func_5254'] = func_5254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_5268 = func_2154_call()
call_5269 = func_2154_call()
output = relay.Tuple([call_5268,])
output2 = relay.Tuple([call_5269,])
func_5278 = relay.Function([], output)
mod['func_5278'] = func_5278
mod = relay.transform.InferType()(mod)
mutated_mod['func_5278'] = func_5278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5278_call = mutated_mod.get_global_var('func_5278')
call_5279 = func_5278_call()
output = call_5279
func_5280 = relay.Function([], output)
mutated_mod['func_5280'] = func_5280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5039_call = mod.get_global_var('func_5039')
func_5040_call = mutated_mod.get_global_var('func_5040')
call_5367 = relay.TupleGetItem(func_5039_call(), 0)
call_5368 = relay.TupleGetItem(func_5040_call(), 0)
func_3401_call = mod.get_global_var('func_3401')
func_3405_call = mutated_mod.get_global_var('func_3405')
var_5395 = relay.var("var_5395", dtype = "float32", shape = (924,))#candidate|5395|(924,)|var|float32
var_5396 = relay.var("var_5396", dtype = "float32", shape = (252,))#candidate|5396|(252,)|var|float32
call_5394 = relay.TupleGetItem(func_3401_call(relay.reshape(var_5395.astype('float32'), [12, 11, 7]), relay.reshape(var_5396.astype('float32'), [126, 2]), ), 2)
call_5397 = relay.TupleGetItem(func_3405_call(relay.reshape(var_5395.astype('float32'), [12, 11, 7]), relay.reshape(var_5396.astype('float32'), [126, 2]), ), 2)
func_1829_call = mod.get_global_var('func_1829')
func_1834_call = mutated_mod.get_global_var('func_1834')
var_5399 = relay.var("var_5399", dtype = "float32", shape = (143,))#candidate|5399|(143,)|var|float32
var_5400 = relay.var("var_5400", dtype = "float32", shape = (2145,))#candidate|5400|(2145,)|var|float32
const_5401 = relay.const(1.057238, dtype = "float64")#candidate|5401|()|const|float64
const_5402 = relay.const([-2.342244,-3.466073,-2.258527,4.463616,9.772461,2.436265,6.918111,7.637234,-1.507403,1.202280,0.460793,7.040004,-0.642276,-9.984084,-3.581440,-1.034581,9.705416,-1.376625,6.718449,-2.761019,6.506802,-6.760314,-1.647667,-9.823747,-9.684774,-0.050674,8.957166,-5.168581,-1.945627,-5.135257,4.642005,6.109111,3.141251,-2.295757,8.595973,2.151088,-6.053377,-3.817073,-5.052731,8.836376,-8.583199,-9.456731,3.957502,5.546731,4.350662,6.996476,-5.297106,5.068730,-4.745329,-1.167121,-7.289807,-6.892579,-7.228763,4.218290,-2.775599,4.821275,-3.418071,-9.421243,9.355750,2.713108,2.375076,3.702094,-5.911717,9.680758,-1.585711,-2.532772,-1.568342,-0.595304,2.938064,3.079926,-7.675159,-3.921110,-4.218306,8.867555,-2.862400,-5.841049,4.316569,6.247015,-2.620798,-7.399924,1.242306,7.826277,-4.581223,-3.701372,9.631506,9.513759,-0.300827,1.020534,-3.750891,-6.529967,9.305706,7.527140,-6.251359,-1.543709,3.912055,-0.497898,-0.466906,-9.789186,5.922002,-3.187721,-6.357462,-7.585143,-7.708385,3.343719,-7.357583,5.338854,-8.960293,-6.632321,-5.079063,2.708124,-3.580125,-7.858451,3.342275,4.728996,5.596413,-8.358143,6.653429,-1.276831,-5.755203,-7.696587,-8.827582,-9.621137,-3.046011,7.661539,-1.653681,3.162470,-4.608860,6.980373,-6.106980,-6.752854,-4.620697,-4.653715,-7.261612,3.467192,-6.240321,0.855778,-3.493975,-4.999195,1.780010,5.755502,-7.847732,-9.516437,-8.444393,0.764774,-8.418733,-1.525050,-5.052592,-1.152049,1.549540,0.994074,4.429172,-7.122633,-9.594753,1.603543,6.419275,3.909243,3.066092,-0.133424,8.531336,-8.599543,-4.244659,1.043004,2.935537,6.191771,9.571828,4.107859,0.753085,-8.756533,-0.760629,7.444320,-0.456652,9.542552,-7.166241,1.834926,3.925891,4.021746,-2.046542,-3.834411,-7.292060,5.490105,-5.499417,9.200665,-9.026509,-1.557438,5.797987,-2.565322,-9.411365,6.529879,-6.760222,8.387958,-2.491043,8.584827,9.866020,9.256299,1.294611,8.190698,1.313915,3.914339,7.385868,-3.508552,-7.642331,-6.982676,-3.922907,9.840940,9.230472,3.438655,-8.578043,-1.738137,-4.729795,2.192284,-7.083748,-5.179441,6.595092,-0.813911,4.740980,0.798736,4.646923,-9.040058,0.257783,-8.788538,-8.457429,1.344117,-5.511344,-4.795341,9.508919,-3.143104,6.035907,4.940659,9.167213,2.628158,-0.969563,-8.767736,-2.820363,7.193009,-6.866405,-4.104387,5.152370,0.489478,-3.536925,8.372655,-2.777588,8.285553,-9.772576,-0.842298,-5.447090,-5.417813,4.342354,8.967844,2.635083,3.292541,-3.999573,1.593487,9.867813,-2.252625,-3.438798,2.755423,4.751028,-0.668135,3.120650,6.073438,-6.272210,-6.391148,-0.596002,-0.282382,0.147367,-0.236211,3.774672,1.113692,-0.440682,-9.611482,2.964919,1.103294,1.384545,-3.951509,7.972328,-0.179353,0.984170,4.307117,-9.124079,-9.712366,7.736218,-3.507058,-9.942303,-6.441407,6.847761,4.206592,-2.028302,3.687379,5.059868,9.695024,-1.757359,-9.544771,-0.362449,8.290972,2.122380,-5.653719,-8.246082,-3.512550,0.236553,-4.819589,2.131753,9.676262,-5.497305,8.155418,5.287212,-6.012628,7.908942,5.438567,-2.030595,-2.727458,-8.717201,2.712254,3.553707,3.811844,-5.122186,9.798491,-2.927676,3.445186,-3.893884,-5.600834,8.569581,8.125969,3.587610,3.607909,1.512338,-9.187251,-8.022776,8.686307,6.286965,-8.386862,-8.899933,7.914827,5.914932,0.513112,-3.209789,6.181699,4.652730,-9.591340,5.626818,-2.185308,8.658071,2.679304,-4.597133,-6.058076,6.308200,2.292308,-0.756551,-4.714065,-5.408189,9.374237,7.735794,-9.178993,0.403203,-8.301495,-1.123705,-1.729681,6.284875,-8.661812,-9.834696,3.926973,8.800080,9.526883,7.547657,7.638184,3.727520,-5.844927,4.209963,4.487932,2.485618,-1.757593,3.355659,-7.735252,-0.413175,-9.282903,0.528727,-7.664322,2.373036,-6.325183,-8.869978,-5.591060,1.257995,-2.185546,4.435158,1.506734,2.068392,1.146452,-7.780968,7.134698,-4.906215,0.219076,2.744101,-6.095791,6.125162,-1.193417,8.764011,-3.223079,6.198162,7.125652,-6.524589,-4.245729,-6.815042,-9.041520,2.326713,3.280854,-9.166746,8.389544,4.363285,-2.133669,-5.143611,-4.637678,1.117027,-4.359763,8.632866,7.949774,0.052404,-4.187259,0.167342,-7.778925,-6.375980,-2.730485,6.900126,6.788016,-2.563422,5.624442,-1.869271,-2.396936,-4.393082,-9.861852,-1.764501,-1.354701,6.885274,-2.285829,2.569922,1.105154,-4.389491,-4.998669,0.628100,-8.004608,5.161841,4.521544,3.334587,7.530680,-5.297955,-6.671822,-6.337631,-6.561580,7.665617,-0.002259,-1.821932,-0.271443,-1.033775,-7.456713,-6.562857,7.643098,-1.151948,5.031874,-7.145158,-1.224126,0.432081,7.956611,6.267019,5.759297,-1.727279,6.808870,-7.813864,-9.770330,7.003095,-9.362509,5.673237,5.810615,-9.790424,-2.136754,-5.227543,-6.237771,4.990919,0.134499,4.711474,8.793153,-6.053781,-2.583782,-0.679646,4.370686,3.878826,-0.592929,0.324238,0.135576,-2.907812,-9.734803,-6.254724,-2.448145,6.542874,-9.854721,3.218145,-8.085158,-2.688008,-4.306635,5.938467,-1.393741,7.168365,-8.680441,8.145540,5.523359,0.570710,-7.890970,-1.785543,6.563934,-8.008499,-2.188181,9.984049,5.368710,-7.764622,-8.912662,-5.303248,-2.934769,8.261774,-7.185325,-5.758577,1.564614,-5.923006,0.503322,-4.391737,-9.312789,-9.746039,-9.323595,1.075072,-5.034647,6.521860,-9.482079,8.388053,-5.916411,2.261720,1.041092,-1.079452,0.121670,-1.140127,4.754834,9.847942,1.421815,-0.517510,1.658623,-9.651853,3.325145,-1.224624,7.315635,2.288421,2.886525,-0.708749,-9.060825,8.765183,7.513570,6.533629,-1.395149,-2.262571,-4.282688,-0.008433,3.985354,3.386923,-4.898400,-5.691024,-0.978732,6.715351,-3.793202,-9.577574,-3.059520,-8.651358,-4.334348,-2.010054,-4.834238,-7.025960,-4.476878,-2.662543,2.288821,-0.310423,5.110351,0.447866,-8.479910,5.060741,2.895909,-4.989512,0.614971,3.259910,-6.390061,2.877734,4.248427,6.743963,-7.828943,7.586322,-1.932725,6.292305,-4.535773,3.746471,-5.427423,2.854654,-7.613906,4.976953,-7.809885,6.390652,0.036364,3.018004,3.114949,-7.961285,-7.591425,2.088238,5.770343,-6.139268,-7.536701,0.908031,3.487409,-8.714003,-5.736266,8.306390,-4.990740,9.420916,1.160867,-5.973562,4.852502,-5.526901,-0.591989,-9.942681,1.078220,6.558880,-9.119202,-3.018898,0.012180,-4.257920,-7.820821,-0.347556,-2.985648,-6.997679,-1.504914,-4.504117,9.024453,6.975075,5.147330,-3.713152,8.817309,-7.493901,-3.622117,8.231724,9.126960,1.722788,3.540969,-6.776840,0.258495,-0.581562,-6.775147,8.633569,4.913872,9.200446,1.204227,3.632384,-3.943066,-5.894004,-1.222717,-4.325373,0.569977,-4.448690,-9.800325,2.930783,9.003626,1.298899,-6.956149,-3.651772,-1.695841,-4.866653,4.999981,-1.242941,6.432418,-2.990528,-6.825251,1.882561,-0.642880,-9.534724,3.328228,-6.580690,7.846325,-0.500624,-6.061522,-1.422891,-2.275283,-7.549318,-9.839517,5.610741,-3.245497,-2.762152,7.955399,-9.187013,0.297767,-8.057533,-1.229156,4.738179,-5.077756,-8.452959,-1.989015,7.483271,8.080966,-6.502527,-9.326462,-3.130250,6.253266,9.690151,-1.715729,-9.080233,6.362225,-7.641422,0.999491,4.377706,2.676300,7.650470,-3.502303,2.837237,-1.890106,-4.827069,2.662751,9.863261,8.115022,9.909474,5.861066,1.742672,-3.030144,-6.979090,2.566505,-2.347638,7.323660,7.413812,-1.229918,-1.820603,-8.139358,-0.416637,5.088086,4.640178,-1.450748,-0.197129,-4.360130,-7.250199,-0.826152,7.502921,6.278196,-4.260978,2.284143,-9.315978,-1.156352,-3.314340,9.350396,3.514924,0.526706,9.955844,2.554694,1.699943,1.150329,5.388230,-1.719161,-7.254219,-1.004567,2.644094,-4.240107,9.702150,-0.557023,0.062437,-4.469461,-3.004817,4.670312,-5.741838,4.774731,8.328472,1.153095,-9.900488,7.337504,7.239902,-4.720711,2.333692,1.554690,9.259372,-2.031112,7.391148,5.075156,-9.714360,-2.232615,-4.276911,-9.436748,-2.805367,-7.647583,-4.339039,6.238715,1.597057,-7.309452,-8.392579,9.632257,3.266698,2.228027,3.760546,-0.627636,1.128571,-4.318717,-0.448255,8.113726,-7.859272,-5.220503,1.628032,2.587716,6.748954,3.083234,5.624649,8.711362,6.981637,7.520478,-7.827484,-4.667794,-7.372615,5.280330,-2.567072,-7.036801,-2.328332,9.830358,-9.539183,-1.633071,-2.811344,-5.763331,-5.688256,-9.592611,-9.020643,-8.697261,4.098979,-1.830329,4.873444,-3.115634,4.031890,6.343052,0.627328,8.025916,2.970615,8.791253,-6.994387,9.637381,-8.648587,-1.068988,0.959642,5.532209,3.616072,3.325758,4.874450,-2.959308,-8.780721,-5.448865,-8.087588,0.022729,7.973835,1.285855,-3.244121,-2.583540,-9.429189,6.540821,-7.408959,-0.199109,3.292539,-5.112798,-2.515082,0.593318,-8.288637,-7.345919,0.886939,-3.370149,5.732706,-9.352059,-7.092539,-2.281495,9.513570,6.304647,-8.842602,-8.626726,7.576080,-5.427601,6.334450,-4.189453,4.410894,0.626287,-2.138482,1.110483,0.114970,-9.247585,-8.486043,9.240385,-4.083396,2.315887,-6.507918,-9.195312,6.839057,2.698579,-6.652215,-7.324941,7.971303,2.162767,-1.271557,1.040485,-8.324652,1.090907,-9.475020,5.105608,7.116125,6.400235,-3.137351,6.921535,-8.707667,-4.694963,-5.565908,-4.431921,-0.642125,-9.842194,-1.191097,9.030980,1.508170,8.882808,5.344029,-6.828187,-0.326481,-1.329308,-5.852264,-4.210133,8.198805,2.424339,4.001099,8.149957,5.168817,-3.834669,7.908687,8.047972,7.174365,-4.093595,7.980237,6.004991,-7.115733,-0.984872,-2.426434,3.345439,6.451171,3.355261,-4.353143,4.853135,-4.347659,8.268748,6.283602,-6.753814,0.269860,9.478452,-3.902580,-2.115366,-8.530472,7.951930,7.678069,-4.361357,2.979589,-2.857099,-6.477505,-6.802930,7.616636,-7.617659,-6.621722,1.993108,5.538601,-9.602922,-8.654075,-1.636171,4.262271,1.680967,-7.709369,5.422855,4.766100,7.908512,5.038960,6.791693,2.902187,2.038076,-4.418252,-0.030536,1.364678,6.328142,8.972688,1.899866,5.668353,-6.015682,-6.901975,-2.738435,8.400592,-4.423001,9.960353,0.896952,2.780116,-1.207119,-3.764366,-5.033198,9.547435,5.862223,4.471295,6.388578,0.094219,8.662855,7.935976,5.324087,4.620105,-0.750740,1.771889,-2.165568,-6.337062,0.580104,7.588516,9.137452,5.841078,3.613491,6.169123,-3.633756,-3.050567,-7.057226,3.788298,-5.754408,6.448696,6.743502,9.966870,-8.643384,-1.972355,-6.648170,5.076063,-4.142583,-2.377106,6.493305,-8.174135,-7.488794,5.726042,-3.111809,-7.345098,-0.896404,1.444439,4.902486,8.363635,4.908243,5.899295,1.305857,3.862710,4.107087,0.901640,6.148512,-1.045685,4.374007,-5.880512,-1.359940,-0.442464,2.536494,-2.606189,-0.790014,-4.127533,6.331890,5.314520,-3.236388,-1.547328,-2.163095,-3.256484,1.704125,3.976363,1.122956,6.450204,7.608329,-5.739905,3.230662,9.213275,-4.203609,5.413653,6.308711,-5.718347,9.061728,9.929173,-7.291414,4.380431,5.118382,-0.552232,0.470056,-1.978486,-3.918567,2.695633,-2.871984,2.296794,-3.374015,-8.225581,-9.478646,9.034172,-0.956544,5.293630,-2.239592,-7.495046,-0.805012,-0.908992,-2.385094,-6.099958,8.244577,7.668804,-2.218911,-3.369387,2.470211,-9.385677,3.847619,-9.389046,-7.289390,5.612910,-0.418022,-3.978895,-1.077744,-4.055819,-9.354491,1.605686,-2.764891,8.817423,-0.575953,5.327190,-7.003885,0.363794,7.083740,0.573959,1.328349,3.861047,4.207742,-7.721984,-6.715824,-1.661959,2.363895,1.575482,-9.785778,-2.453953,-2.724733,2.442365,8.706780,0.510127,-1.335400,1.598975,3.659216,9.444673,-7.538354,-9.107216,2.852471,1.925825,6.975271,-5.168977,5.898552,-6.844146,7.035734,0.235231,-7.947747,1.687973,6.455201,-8.429329,9.391230,7.350573,-5.728996,8.373063,1.930044,-2.342978,8.032734,-5.201093,-9.987452,-0.140140,-5.887822,-6.213691,-5.475552,0.168978,-4.986560,-0.666410,-3.471332,-4.985996,-4.543543,-7.861891,-9.633585,-4.352651,4.987789,9.138535,0.106419,3.809314,8.151444,-2.955619,-9.630563,9.068122,7.425748,-6.213882,-7.119415,-6.438232,-9.076438,-8.858434,-8.547847,-2.449769,9.699451,2.555616,-7.689705,6.804305,-7.190074,4.694199,7.548836,-1.594771,2.888914,-6.658760,6.180496,-8.072071,2.846810,-0.034546,4.857574,-6.526251,-1.896644,4.232322,-2.438958,-3.881998,-8.039397,4.333412,5.928997,-9.800324,1.296897,-7.692559,-5.552750,-0.482745,6.225721,7.896185,-3.921561,0.772742,5.920293,9.364047,1.698682,-0.600253,5.872624,-2.644310,1.260986,3.358221,2.417391,7.859881,-0.570225,-6.585512,8.091552,-3.323828,0.594460,-8.799888,-6.032447,-3.058517,-1.731292,9.905817,4.480492,-0.721954,3.378772,2.296068,5.799085,-5.100070,-4.144851,4.756843,-8.205130,4.711940,0.548241,-3.933344,7.144530,-6.940658,8.229477,-8.254769,1.489782,-7.842841,-0.860924,1.765800,-0.146576,-9.964521,-8.012518,-3.209528,3.770104,-1.418303,-0.994686,2.786242,-1.898471,4.846437,3.062134,-6.745328,-2.635501,1.584160,-4.246844,-4.265956,-6.775925,6.871098,-3.030719,2.861181,-1.849504,-1.637034,-4.667254,-2.846238,1.651713,8.905716,3.996280,0.724443,-7.847896,0.946728,-5.387849,0.788718,-4.778372,3.984702,3.102593,-1.939372,9.336579,-7.507670,-9.367406,-6.422449,-2.127608,8.130152,2.091459,5.634147,3.981184,-0.447205,-5.564912,3.272133,-6.749766,7.677112,5.659655,7.607708,-3.131292,1.463158,4.824750,6.480706,7.608761,7.174260,1.956983,-8.381955,8.248482,-7.531389,-5.627103,-0.377596,7.376015,-1.180418,-7.709028,3.061732,6.203694,9.711571,-9.402680,-9.008459,4.841317,-9.991735,-3.269222,-9.761449,0.271521,7.193153,-2.554508,-2.701303,4.400465,-6.549899,6.836281,3.753713,-7.274472,6.392992,8.515161,-9.514772,9.971417,5.970761,7.960757,-0.875648,3.448010,0.119040,8.853797,4.886640,-2.079403,-9.439684,7.783690,4.061903,3.052810,-4.458397,-8.295813,2.721258,8.565038,-0.129651,-0.192429,1.431729,-4.088883,5.452657,-8.137826,7.205456,4.843574,-8.562188,0.402513,-0.167064,-6.810177,0.755385,-1.692978,8.241175,9.548729,-5.420041,-9.347202,8.411681,-5.762441,-1.005723,3.162931,-5.780670,-5.392260,8.608993,-1.974107,-9.101962,-8.834668,9.602257,-5.496795,-1.758982,-6.577485,-7.011645,-6.957358,-2.956620,-3.230300,-9.844747,-2.647731,-6.865957,5.855141,-3.730583,-1.691060,6.881171,-2.703972,3.137055,6.347871,-5.299217,-7.181298,-9.127503,0.068170,-0.633679,6.704837,3.397390,8.923530,-1.741591,-6.843362,-6.703864,1.677441,9.809673,-1.865984,7.878546,1.808859,-4.089751,-7.036325,-4.870077,0.803139,7.831430,9.961079,-0.889223,1.964775,-3.664288,0.091716,-2.722561,-3.375151,-4.676589,-7.470711,-8.988285,8.296325,0.610956,6.175158,6.154159,-9.421998,0.371613,-5.013381,-1.875096,9.892075,6.312999,4.618324,6.964401,6.651726,7.979400,4.443910,1.888119,-0.070907,-6.632319,9.622638,-0.477361,2.314064,4.143704,7.770146,4.812571,-9.389157,5.399683,-7.904687,5.636183,-3.816023,9.345668,-4.875851,-1.224833,1.603202,-6.831922,8.423070,3.978462,5.758976,-2.258700,-7.282302,8.417309,-2.225078,4.876683,1.008977,-5.359220,6.131731,-0.006654,9.287580,-0.910968,2.521361,2.051192,5.333914,8.785166,2.440613,2.913034,3.735346,0.121602,8.049592,-4.964982,3.330787,-8.397025,-7.955784,1.226427,1.935289,2.162445,-3.036444,5.035302,8.222094,-6.337564,-5.161043,-6.828491,-3.755565,3.969482,-1.326941], dtype = "float64")#candidate|5402|(1512,)|const|float64
call_5398 = relay.TupleGetItem(func_1829_call(relay.reshape(var_5399.astype('float32'), [1, 11, 13]), relay.reshape(var_5400.astype('float32'), [15, 11, 13]), relay.reshape(const_5401.astype('float64'), []), relay.reshape(const_5402.astype('float64'), [1512,]), ), 5)
call_5403 = relay.TupleGetItem(func_1834_call(relay.reshape(var_5399.astype('float32'), [1, 11, 13]), relay.reshape(var_5400.astype('float32'), [15, 11, 13]), relay.reshape(const_5401.astype('float64'), []), relay.reshape(const_5402.astype('float64'), [1512,]), ), 5)
func_4853_call = mod.get_global_var('func_4853')
func_4854_call = mutated_mod.get_global_var('func_4854')
call_5404 = relay.TupleGetItem(func_4853_call(), 0)
call_5405 = relay.TupleGetItem(func_4854_call(), 0)
output = relay.Tuple([call_5367,call_5394,var_5395,var_5396,call_5398,var_5399,var_5400,const_5401,const_5402,call_5404,])
output2 = relay.Tuple([call_5368,call_5397,var_5395,var_5396,call_5403,var_5399,var_5400,const_5401,const_5402,call_5405,])
func_5408 = relay.Function([var_5395,var_5396,var_5399,var_5400,], output)
mod['func_5408'] = func_5408
mod = relay.transform.InferType()(mod)
mutated_mod['func_5408'] = func_5408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5408_call = mutated_mod.get_global_var('func_5408')
var_5410 = relay.var("var_5410", dtype = "float32", shape = (924,))#candidate|5410|(924,)|var|float32
var_5411 = relay.var("var_5411", dtype = "float32", shape = (252,))#candidate|5411|(252,)|var|float32
var_5412 = relay.var("var_5412", dtype = "float32", shape = (143,))#candidate|5412|(143,)|var|float32
var_5413 = relay.var("var_5413", dtype = "float32", shape = (2145,))#candidate|5413|(2145,)|var|float32
call_5409 = func_5408_call(var_5410,var_5411,var_5412,var_5413,)
output = call_5409
func_5414 = relay.Function([var_5410,var_5411,var_5412,var_5413,], output)
mutated_mod['func_5414'] = func_5414
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5416 = relay.const([[[-3,5,-10,1,10,3,1,1,6,-4,-1,5,-7,-7],[-4,5,6,9,2,-7,4,-6,-8,7,-2,2,-7,-7],[6,5,3,-7,9,6,-6,4,3,-6,-9,-6,5,-6],[9,-7,9,2,2,-10,5,-4,9,2,-10,-6,1,-9],[1,9,9,4,-9,-10,8,-4,6,-8,8,8,8,4],[-5,8,-10,-6,6,-9,-10,8,8,3,-1,-8,10,-4],[9,2,5,-10,8,4,-7,8,1,-5,7,-3,-10,-9],[7,1,-3,10,4,3,-7,5,-9,3,-9,8,-8,-8],[2,-1,1,6,6,2,-7,1,3,8,-8,-3,-9,5]],[[-2,8,-8,-4,10,3,-6,-3,1,5,-9,-9,5,-4],[-4,2,3,1,-8,2,-3,-5,1,9,1,7,10,6],[7,8,2,9,-1,-7,-3,8,-4,-6,10,-7,1,4],[10,-5,-2,10,6,-9,10,-7,-3,-1,-9,-1,2,3],[-2,5,6,2,-6,4,-4,8,-9,6,-1,10,-4,10],[-9,-1,9,-4,7,-5,-10,4,9,7,6,-9,-2,8],[10,-4,-2,-9,-3,6,-10,-5,-9,6,1,-8,-9,-6],[8,7,-4,6,-7,7,-1,-2,-5,3,5,3,-3,5],[-10,2,-6,5,-1,-4,-7,8,5,8,6,5,3,9]]], dtype = "uint8")#candidate|5416|(2, 9, 14)|const|uint8
var_5417 = relay.var("var_5417", dtype = "uint8", shape = (2, 9, 14))#candidate|5417|(2, 9, 14)|var|uint8
bop_5418 = relay.minimum(const_5416.astype('uint8'), relay.reshape(var_5417.astype('uint8'), relay.shape_of(const_5416))) # shape=(2, 9, 14)
uop_5421 = relay.sinh(var_5417.astype('float32')) # shape=(2, 9, 14)
uop_5429 = relay.cosh(var_5417.astype('float32')) # shape=(2, 9, 14)
output = relay.Tuple([bop_5418,uop_5421,uop_5429,])
output2 = relay.Tuple([bop_5418,uop_5421,uop_5429,])
func_5433 = relay.Function([var_5417,], output)
mod['func_5433'] = func_5433
mod = relay.transform.InferType()(mod)
var_5434 = relay.var("var_5434", dtype = "uint8", shape = (2, 9, 14))#candidate|5434|(2, 9, 14)|var|uint8
output = func_5433(var_5434)
func_5435 = relay.Function([var_5434], output)
mutated_mod['func_5435'] = func_5435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2228_call = mod.get_global_var('func_2228')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_5461 = relay.TupleGetItem(func_2228_call(), 0)
call_5462 = relay.TupleGetItem(func_2230_call(), 0)
output = relay.Tuple([call_5461,])
output2 = relay.Tuple([call_5462,])
func_5480 = relay.Function([], output)
mod['func_5480'] = func_5480
mod = relay.transform.InferType()(mod)
mutated_mod['func_5480'] = func_5480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5480_call = mutated_mod.get_global_var('func_5480')
call_5481 = func_5480_call()
output = call_5481
func_5482 = relay.Function([], output)
mutated_mod['func_5482'] = func_5482
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5529 = relay.var("var_5529", dtype = "float64", shape = (13, 15, 8))#candidate|5529|(13, 15, 8)|var|float64
uop_5530 = relay.sigmoid(var_5529.astype('float64')) # shape=(13, 15, 8)
func_1474_call = mod.get_global_var('func_1474')
func_1477_call = mutated_mod.get_global_var('func_1477')
const_5541 = relay.const([-10,10,-10,2,-7,10,-4,-9,4,-4,-5,1,9,-3,1,-10,8,-2,9,10,8,-5,10,-5,-5,9,-1,9,4,-4,-5,6,6,-4,4,10,-1,6,8,-8,-4,2,9,5,7,-8,6,6,4,9,-1,3,4,5,-5,-5,-2,-4,2,4,-9,-10,10,8,-5,5,-4,9,-8,-1,7,-1,5,-8,5,6,8,-10,1,2,5,-3,-6,8,-5,8,-5,1,-4,-8,-2,-6,10,9,-6,-9,-8,1,-3,7,-7,1,4,3,10,-1,-6,5,3,-9,-4,-9,1,6,8,-3,10,1,6,6,-7,-10,-1,1,8,-4,-6,-7,-2,10,-8,-7,7,-2,3,-8,-4,5,3,1,6,6,-8,-9,-5,10,-4,-2,6,5,-2,4,-1,-3,-5,-6,2,4,-4,-10,-4,2,9,10,-8,9,-7,-7,-1,1,-7,-8,-10,6,-5,-6,-9,8,2,5,4,3,-6,10,-1,5,1,-6,6,-8,10,-2,2,-7,10,8,6,7,-10,-1,-1,10,10,2,9,6,4,8,-8,2,-9,-5,-10,8,1,-2,6,4,-9,9,-8,7,3,-8,2,-10,-8,7,9,-7,-7,-5,-4,-6,-7,1,9,7,-5,4,3,-10,1,9,5,2,-9,-2,8,-6,-10,-10,6,3,-10,-9], dtype = "uint64")#candidate|5541|(256,)|const|uint64
call_5540 = relay.TupleGetItem(func_1474_call(relay.reshape(const_5541.astype('uint64'), [2, 8, 16])), 3)
call_5542 = relay.TupleGetItem(func_1477_call(relay.reshape(const_5541.astype('uint64'), [2, 8, 16])), 3)
output = relay.Tuple([uop_5530,call_5540,const_5541,])
output2 = relay.Tuple([uop_5530,call_5542,const_5541,])
func_5545 = relay.Function([var_5529,], output)
mod['func_5545'] = func_5545
mod = relay.transform.InferType()(mod)
var_5546 = relay.var("var_5546", dtype = "float64", shape = (13, 15, 8))#candidate|5546|(13, 15, 8)|var|float64
output = func_5545(var_5546)
func_5547 = relay.Function([var_5546], output)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4041_call = mod.get_global_var('func_4041')
func_4043_call = mutated_mod.get_global_var('func_4043')
call_5553 = func_4041_call()
call_5554 = func_4041_call()
var_5557 = relay.var("var_5557", dtype = "float64", shape = (1512,))#candidate|5557|(1512,)|var|float64
bop_5558 = relay.greater(call_5553.astype('bool'), relay.reshape(var_5557.astype('bool'), relay.shape_of(call_5553))) # shape=(1512,)
bop_5561 = relay.greater(call_5554.astype('bool'), relay.reshape(var_5557.astype('bool'), relay.shape_of(call_5554))) # shape=(1512,)
func_2345_call = mod.get_global_var('func_2345')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_5571 = relay.TupleGetItem(func_2345_call(), 0)
call_5572 = relay.TupleGetItem(func_2347_call(), 0)
output = relay.Tuple([bop_5558,call_5571,])
output2 = relay.Tuple([bop_5561,call_5572,])
func_5593 = relay.Function([var_5557,], output)
mod['func_5593'] = func_5593
mod = relay.transform.InferType()(mod)
mutated_mod['func_5593'] = func_5593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5594 = relay.var("var_5594", dtype = "float64", shape = (1512,))#candidate|5594|(1512,)|var|float64
func_5593_call = mutated_mod.get_global_var('func_5593')
call_5595 = func_5593_call(var_5594)
output = call_5595
func_5596 = relay.Function([var_5594], output)
mutated_mod['func_5596'] = func_5596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2212_call = mod.get_global_var('func_2212')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_5605 = relay.TupleGetItem(func_2212_call(), 0)
call_5606 = relay.TupleGetItem(func_2213_call(), 0)
func_4897_call = mod.get_global_var('func_4897')
func_4898_call = mutated_mod.get_global_var('func_4898')
call_5607 = func_4897_call()
call_5608 = func_4897_call()
func_4809_call = mod.get_global_var('func_4809')
func_4811_call = mutated_mod.get_global_var('func_4811')
const_5633 = relay.const([[5.870398,-3.686717,0.016176,5.953770,-1.383290,4.541271,8.765670,-8.908594,-4.879805,-4.493204,1.056686,9.102719,2.180528,9.332757,-7.837690,4.134264,0.436002,3.336419,-3.006353,9.794247,-4.502465,2.921111,1.951167,7.361109,-4.183106,-8.707713,-5.454433,0.356173,7.052120,1.934721,5.081742,5.118979,4.519589,1.741699,4.586255,-4.027712,4.102950,2.092387,5.225272,4.559505,-4.788504,0.800777,1.465705,1.489051,-0.130641,-1.531309,8.860753,-4.647351,-7.800200,-8.447471,-2.112742,-5.351137,-7.203844,-7.204485,-3.634780,8.540228,-8.771128,-6.698760,1.248577,-0.700648,-5.082829,4.318910,-9.328336,-0.109817,0.116608,-0.172087,3.008081,-2.936262,-7.573941,2.215101,-1.636169,2.543903,-9.131364,-5.430968,8.600165,6.593862,-5.332952,4.837913,-8.435951,8.967243,-1.993599,5.129585,-6.293557,8.465560,-3.595546,-9.298325,-9.829590,5.006006,3.180986,-9.212989,-1.461767,-4.135112,4.873356,5.264907,-9.684327,1.471075,-8.881489,-3.590607,-6.336476,9.759877,5.966459,8.594400,-5.855593,-6.479124,2.645542,-5.157285,-5.300921,-2.541630,7.304299,4.915501,-7.958231,-5.138945,7.211748,-1.868661,0.799823,-7.217483,5.837352,-7.539969,6.964786,5.496460,2.721113,-7.785265,-7.792432,8.337744,1.022821,3.549231,-7.502664,-2.773500,8.483577,2.084043,8.315312,0.112449,-7.874177,-1.480633,-7.126243,-5.718537,7.991035,9.808386,0.225867,5.504933,9.389949,-4.810265,3.120285,6.288421,7.446098,8.973682,-9.411860,6.576907,-7.384626,-4.844964,4.202835,-7.010134,-2.366842,2.114189,3.296066,-8.291994,8.157818,-1.729332,6.952079,7.343695,-7.368322,3.063456,4.351014,1.602384,-8.833615,-7.765920,-4.956721,2.195999,-6.932259,-3.967864,9.879441,-6.984534,-8.912637,7.408945,-1.093881,-8.224081,0.974139,-1.870276,2.695151,-1.006497,6.624298,8.999715,-5.277789,-5.071176,3.710542,-2.209464,4.005987,-1.626050,5.265129,-3.540096,-2.734566,-5.021053,-1.676899,7.818400,7.118100,-9.495488],[-4.163322,-9.369015,-3.418238,-6.520474,-4.318929,-7.664041,3.354376,8.574790,0.693237,9.725595,-7.073836,3.651309,-4.569039,-1.140469,7.076299,-1.102587,8.348287,-4.402246,-0.932709,3.324596,2.664138,-8.929718,-1.593372,5.874675,8.010951,-4.532887,-0.277450,3.018373,-8.573990,-3.243019,-8.433772,2.595349,-1.334760,9.041950,-0.890257,0.058709,-8.028172,1.034160,1.919742,-4.427012,8.767626,-1.189501,6.540723,-7.989276,-7.134148,9.343501,8.358110,-6.036853,-2.550598,-8.660124,-9.551459,-4.680342,-9.723712,-2.252900,-5.716060,-4.017647,5.236011,1.238273,-2.479479,-6.971907,0.556190,4.987375,-6.095829,-8.894939,6.644420,-8.907575,-7.537958,3.154945,-7.954771,-8.199920,-2.585918,-3.881560,7.205347,-1.846213,3.864361,-3.991404,-4.266523,2.229488,1.120739,9.682945,4.423269,1.331388,-7.490325,-5.837899,-0.060871,9.793684,4.682998,-9.065623,-5.991261,8.454385,9.518651,-4.022650,6.996175,-0.849430,6.428108,-0.010866,2.955906,-0.144946,-0.190355,-9.539458,6.492441,9.311584,8.717200,0.323971,2.888461,6.728395,0.923565,-5.164857,-5.984739,5.201746,8.928282,-9.888809,6.261205,-6.164037,9.013690,-3.265553,1.068373,5.854689,2.960951,-6.980632,2.879672,4.773609,4.020644,-6.481684,8.846392,8.751390,2.459829,0.676209,-8.579356,-8.897692,0.021460,-5.589467,-0.438356,7.298125,-9.249559,-2.457363,-8.110344,-2.604867,-4.472408,7.433415,1.461048,-2.302989,-0.039768,0.102302,7.446479,-0.864097,4.329605,8.286915,-9.866375,1.098832,-3.233005,6.424828,-6.567817,-8.052934,-9.041854,-0.468648,-6.793805,-4.635954,-1.862570,1.609957,3.892491,-9.175452,-0.703310,-0.539896,2.639660,-6.672818,-0.622865,-0.446432,7.061959,6.312729,-2.936020,7.474928,-9.970447,3.369609,-9.069419,-1.177653,-6.690682,-9.415696,7.916627,9.290530,-9.853905,-7.840677,7.165293,2.649259,-7.794957,-6.131657,-4.849232,7.357668,9.833380,-5.537076,-4.948393,7.069293,1.073567,4.479994,8.359260,9.298029],[-9.149833,-1.951244,-5.751076,6.992565,-9.179560,7.622460,3.534958,9.666077,0.938614,-9.928314,-0.282330,-2.972965,2.439435,-2.349397,6.500764,1.853830,-1.929859,9.741142,0.822022,3.124762,2.664770,7.967754,5.336508,6.195286,-7.911218,-0.014691,-9.821684,-3.948478,1.121000,-1.086793,1.017719,-2.484932,1.224916,-0.394615,-3.092807,-5.695824,7.612183,5.221066,-4.726736,3.002718,-6.160921,0.528643,8.916494,2.451748,3.590164,6.502147,3.563758,-8.567993,8.819250,2.276869,-8.334880,0.706736,9.166018,-5.434378,-1.335549,-8.782750,-2.561386,2.223913,-0.432161,-6.514777,-1.711701,-2.393296,3.030336,-2.798897,3.378012,8.581029,8.454667,5.721199,6.419687,-9.583790,-2.108648,-9.692282,-2.406259,-7.336117,-2.961716,-0.597596,-0.693846,-9.826681,7.957808,-3.171440,6.652775,-9.268925,1.931530,5.933525,-6.242083,-1.922520,0.239706,1.459897,-7.098620,-2.300240,-4.902355,4.069570,2.443582,-2.125635,-0.599911,8.539808,-9.032619,-1.291695,-3.524665,-7.294027,6.226577,6.732807,-9.464109,-2.068301,-6.935992,2.502372,-7.686131,8.536934,6.139037,-8.664697,-0.787729,7.624812,-8.663639,-5.040499,2.329969,9.909135,7.033344,8.557899,6.407224,-3.782047,-3.463288,-4.323179,-3.041507,-6.242312,7.166021,2.560185,9.377160,9.904753,-4.739712,-7.972698,-1.460148,-3.034037,-1.676900,6.159366,-4.384403,8.039079,-0.383086,9.669700,6.913853,-2.377807,-1.251572,-5.175709,-4.396205,4.118169,-3.047028,-9.477266,3.476825,-9.732377,6.473432,6.500839,-8.526728,-2.844186,-0.090605,8.000857,-8.742106,4.161426,-3.613687,-7.174199,9.236435,4.534595,1.304655,-0.394080,5.869370,-1.813320,4.939293,-9.763196,-1.263561,-2.820570,-9.634920,-0.680080,3.231512,9.030638,6.725783,-2.353928,-9.154948,-8.171952,5.490913,-5.783729,-9.673202,4.608174,2.642508,4.863062,1.489551,-3.276643,4.262648,-5.144611,-5.207834,-6.018165,6.772602,-3.699334,0.933454,1.110034,-7.450840,4.632336,-6.256860,-7.134992],[-5.013534,8.902224,0.027974,2.357584,-0.666413,9.933510,9.992786,-9.492807,-1.485975,-5.187123,-0.803066,-6.943895,-5.128245,0.814328,4.306125,-9.857694,5.463454,4.292168,7.990192,7.862274,-8.622512,2.626310,0.574423,-0.388044,-4.614842,6.409125,-8.050365,1.536185,7.283457,4.937526,-0.906697,-0.157226,8.406124,-4.057180,-7.126671,-3.160378,-8.844415,-3.066205,5.460428,1.137366,-7.275359,-0.730453,0.545234,6.712917,-1.042211,0.908119,-7.872850,-7.372898,0.454258,-4.811736,4.772327,-4.347861,-5.555636,6.215397,7.423542,-4.950308,0.444792,-8.849479,-3.645393,0.882427,-1.639588,-6.494263,-2.071869,-0.440429,8.314983,2.708065,3.681412,5.202807,-6.164241,1.303531,8.390560,7.048742,6.499411,4.084874,9.431365,-8.508251,7.162256,-9.465854,-2.551120,6.481839,-6.829282,-8.049373,-9.066775,6.099515,-8.289802,-6.380035,-4.622032,-2.604438,7.486423,-4.286186,-6.552959,-8.293073,8.786953,6.734633,7.490365,2.749078,5.600377,1.039507,7.098881,-4.924890,-3.285178,-0.224888,8.213605,-2.844311,-5.586889,1.992140,1.438649,9.006293,5.462215,-1.181077,6.414452,-4.397727,6.662165,0.714809,-7.542073,-7.720407,-5.635517,-8.610790,3.214886,0.171265,3.370276,-4.132715,-8.898960,1.942340,-8.099974,1.257300,0.101928,-4.559119,5.169037,-2.858577,-2.295802,-3.365686,4.813449,-5.597393,7.824587,-0.601498,-8.716321,-2.814063,-7.802572,-5.033876,5.360351,7.924271,4.512145,-1.877871,0.184988,4.550583,1.291962,-7.508023,-9.910702,-5.682429,-1.820130,-9.757082,9.592140,-6.910603,-2.591429,4.713587,-8.576847,-4.670811,-3.835144,-7.883812,2.675566,3.089223,-1.561066,8.346566,-3.142888,-8.516377,8.646442,-8.085826,6.371941,-2.899253,9.698966,-0.211352,-2.557104,-5.367229,7.059306,-2.178667,-8.149822,5.573512,-0.049291,9.466678,-0.846401,8.080220,-5.128996,9.958010,-8.132291,9.008321,8.288607,4.816369,-7.025833,-7.422143,7.592705,7.312871,1.296585,-8.706480,8.672400,-8.618386],[5.406488,0.078001,8.341980,-1.002111,0.235358,-2.720006,3.852420,-0.644212,2.524838,7.408433,-2.036736,-2.767117,0.975283,7.809461,-2.561629,9.272356,5.767514,3.419246,7.210316,2.770046,9.010997,4.089824,6.820327,-8.618778,-8.288251,1.657292,-8.321800,-7.569210,-0.757466,3.094900,-4.782580,8.823463,8.381912,-4.748333,-1.293583,1.008396,7.506931,-2.941130,2.209661,2.439698,-8.578492,-1.855334,-1.505014,-9.982296,-2.096347,3.818146,-8.507744,-3.158718,7.753284,-4.139264,-0.495032,5.430730,-6.062368,8.130837,9.363257,-6.830003,9.950654,-9.308000,2.415096,8.973064,-0.425784,-4.494711,9.108200,6.338409,-9.709185,-1.492599,7.247460,-1.661600,8.968885,6.107373,5.984721,-2.092149,-3.186013,-3.779393,4.741299,7.264208,0.036793,5.293054,9.820889,9.639725,-5.445083,-6.401697,-2.741736,-6.621419,-2.762186,-0.967290,2.732920,3.837047,7.825201,9.956432,3.520539,1.024892,7.451615,7.242736,4.731818,-8.257845,-1.656925,8.793408,9.921368,-8.119020,-7.822189,0.165688,8.633616,0.096673,3.539289,4.212449,-6.446739,2.884212,2.544724,-3.944515,3.066497,1.273217,9.708294,-9.641671,-8.686823,0.332148,8.341273,-3.632720,1.502975,-7.377837,-4.690475,9.779548,-9.090844,-8.881188,2.188800,-1.696447,5.308587,-4.039601,-1.891701,-5.444505,8.886112,9.381808,-6.358223,8.926514,-7.771312,-4.580676,8.295160,4.774315,-7.438130,-5.886967,-5.277945,1.985859,-9.071956,-0.410866,-8.175562,3.355964,-2.100300,3.941611,-0.849579,-8.833042,-9.315071,8.363208,-8.855792,8.740867,2.263769,-9.955695,-8.223298,1.595897,7.242105,5.989440,-8.474508,0.986083,-5.772825,-9.001309,8.521226,9.235424,2.572898,-7.803482,7.969940,4.226514,1.611427,-5.228943,8.391026,-5.303796,7.621997,-1.152343,-5.729164,5.496873,-9.352467,9.219250,-6.950292,5.433078,3.749411,-5.601683,0.880028,3.737748,6.056211,-4.943839,-3.563170,-3.295260,9.062791,8.441245,-8.754442,-5.697704,-4.840555,2.142474],[-2.792349,4.540302,-8.704624,-8.012366,7.979240,-4.930047,5.762254,4.839608,8.138692,8.900021,-3.071069,-5.934340,2.768729,-2.670332,-7.930539,8.713606,-2.158546,-1.450842,-2.628505,4.890726,6.233503,-1.359560,-2.740313,-0.614177,6.632430,-9.005627,-6.254253,3.150814,1.665206,-5.009771,4.841380,-4.833214,-5.603216,-7.658353,7.683463,-4.090839,8.909757,4.665249,-3.106148,5.852924,-2.244798,3.582856,-6.733982,-7.748227,-7.498155,3.875387,-7.981037,-2.816901,-6.687139,0.017052,-6.903900,-5.580198,4.597395,2.934428,5.825617,7.787030,0.382046,7.191669,9.019737,1.665939,-9.387149,7.661281,6.811788,0.869311,-5.797672,1.265504,-1.006656,-5.253233,-7.319046,4.335351,-4.967506,2.960677,6.245739,2.095703,-5.072279,3.036501,1.826917,-0.043848,-1.250010,6.466949,-7.736922,2.516077,-5.809162,-1.547519,6.671717,6.520469,8.966821,0.223549,3.855901,7.051295,-4.475209,-7.542492,-7.602033,-6.844211,-2.677390,9.434151,-7.545591,1.541892,2.187705,3.617098,0.776634,-5.358477,1.637152,9.888249,5.110895,5.576922,9.911141,3.341236,-1.085535,-0.357501,0.813828,3.202522,-0.141168,7.823848,9.168150,2.404916,3.470492,8.474378,9.746392,1.307025,5.825709,-9.543815,-3.875270,-2.147878,6.297004,9.768120,4.600884,2.382844,0.349044,4.627216,2.085149,2.035640,-6.851826,-0.304788,6.617439,-5.485760,-9.898058,-4.983297,9.603958,5.273168,3.832394,3.979479,4.312332,9.526529,3.511178,5.595902,7.713183,5.730802,0.906072,4.479396,1.511974,-5.379355,9.687737,-0.728577,7.384358,1.508712,-3.045406,9.168648,1.230846,-4.730862,3.199960,-6.152113,-1.112636,3.264517,4.470413,3.171718,-6.884380,-8.865551,-8.353680,-9.548436,-6.299240,-8.843361,6.442065,-6.683836,-8.531297,2.483243,4.808955,-9.909612,-3.253536,7.128938,4.255640,-8.888426,-8.486539,6.069992,-8.500368,1.546558,8.804591,0.154665,8.030964,-8.300003,0.053391,-4.240964,0.496389,-2.165539,-8.290532,5.591216]], dtype = "float64")#candidate|5633|(6, 196)|const|float64
call_5632 = relay.TupleGetItem(func_4809_call(relay.reshape(const_5633.astype('float64'), [12, 14, 7])), 0)
call_5634 = relay.TupleGetItem(func_4811_call(relay.reshape(const_5633.astype('float64'), [12, 14, 7])), 0)
bop_5635 = relay.not_equal(call_5605.astype('bool'), relay.reshape(call_5607.astype('bool'), relay.shape_of(call_5605))) # shape=(12, 1, 7)
bop_5638 = relay.not_equal(call_5606.astype('bool'), relay.reshape(call_5608.astype('bool'), relay.shape_of(call_5606))) # shape=(12, 1, 7)
func_3741_call = mod.get_global_var('func_3741')
func_3744_call = mutated_mod.get_global_var('func_3744')
var_5649 = relay.var("var_5649", dtype = "float32", shape = (252,))#candidate|5649|(252,)|var|float32
call_5648 = relay.TupleGetItem(func_3741_call(relay.reshape(var_5649.astype('float32'), [12, 3, 7])), 0)
call_5650 = relay.TupleGetItem(func_3744_call(relay.reshape(var_5649.astype('float32'), [12, 3, 7])), 0)
uop_5653 = relay.sin(const_5633.astype('float32')) # shape=(6, 196)
output = relay.Tuple([call_5632,bop_5635,call_5648,var_5649,uop_5653,])
output2 = relay.Tuple([call_5634,bop_5638,call_5650,var_5649,uop_5653,])
func_5659 = relay.Function([var_5649,], output)
mod['func_5659'] = func_5659
mod = relay.transform.InferType()(mod)
var_5660 = relay.var("var_5660", dtype = "float32", shape = (252,))#candidate|5660|(252,)|var|float32
output = func_5659(var_5660)
func_5661 = relay.Function([var_5660], output)
mutated_mod['func_5661'] = func_5661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_5686 = func_2154_call()
call_5687 = func_2154_call()
output = call_5686
output2 = call_5687
func_5690 = relay.Function([], output)
mod['func_5690'] = func_5690
mod = relay.transform.InferType()(mod)
mutated_mod['func_5690'] = func_5690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5690_call = mutated_mod.get_global_var('func_5690')
call_5691 = func_5690_call()
output = call_5691
func_5692 = relay.Function([], output)
mutated_mod['func_5692'] = func_5692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2369_call = mod.get_global_var('func_2369')
func_2370_call = mutated_mod.get_global_var('func_2370')
call_5733 = relay.TupleGetItem(func_2369_call(), 0)
call_5734 = relay.TupleGetItem(func_2370_call(), 0)
func_5078_call = mod.get_global_var('func_5078')
func_5079_call = mutated_mod.get_global_var('func_5079')
call_5761 = relay.TupleGetItem(func_5078_call(), 1)
call_5762 = relay.TupleGetItem(func_5079_call(), 1)
uop_5772 = relay.log10(call_5761.astype('float64')) # shape=(12, 15, 7)
uop_5774 = relay.log10(call_5762.astype('float64')) # shape=(12, 15, 7)
output = relay.Tuple([call_5733,uop_5772,])
output2 = relay.Tuple([call_5734,uop_5774,])
func_5776 = relay.Function([], output)
mod['func_5776'] = func_5776
mod = relay.transform.InferType()(mod)
mutated_mod['func_5776'] = func_5776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5776_call = mutated_mod.get_global_var('func_5776')
call_5777 = func_5776_call()
output = call_5777
func_5778 = relay.Function([], output)
mutated_mod['func_5778'] = func_5778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_5875 = relay.TupleGetItem(func_4838_call(), 0)
call_5876 = relay.TupleGetItem(func_4840_call(), 0)
func_3196_call = mod.get_global_var('func_3196')
func_3198_call = mutated_mod.get_global_var('func_3198')
var_5895 = relay.var("var_5895", dtype = "float32", shape = (1092, 1))#candidate|5895|(1092, 1)|var|float32
call_5894 = relay.TupleGetItem(func_3196_call(relay.reshape(var_5895.astype('float32'), [12, 13, 7])), 1)
call_5896 = relay.TupleGetItem(func_3198_call(relay.reshape(var_5895.astype('float32'), [12, 13, 7])), 1)
var_5897 = relay.var("var_5897", dtype = "float32", shape = (1092, 9))#candidate|5897|(1092, 9)|var|float32
bop_5898 = relay.greater_equal(var_5895.astype('bool'), var_5897.astype('bool')) # shape=(1092, 9)
func_3323_call = mod.get_global_var('func_3323')
func_3327_call = mutated_mod.get_global_var('func_3327')
const_5903 = relay.const([9.368893,6.371105,-6.560546,2.596225,0.564500,-8.778220,8.073870,-2.531513,-5.525585,-3.212707,-8.913801,4.101520,1.241590,4.070248,-3.894937,-9.640816,-2.547950,3.041771,4.727854,-2.677764,4.235054,7.297564,-2.615970,8.603358,-3.401058,-4.232615,9.215845,-9.052858,-3.613054,6.206651,-7.253674,8.232721,-9.336110,-1.486615,4.620071,-8.237632,9.463609,3.533429,4.442122,-9.055375,3.332221,-9.474415,4.528833,1.790707,-0.081167,-7.315948,-6.975139,2.235509,-2.010107,-0.431746,1.548448,-8.244579,-3.779339,-7.224405,-3.745629,-9.058169,7.541444,6.585897,1.205946,4.585405,6.952475,9.428028,6.079179,-1.930009,-3.066735,9.788610,4.540829,-1.056609,-3.548599,4.848165,-0.542026,-6.430174,-1.633959,-1.398235,-0.485776,4.202948,8.155754,-8.754459,-0.099583,9.612649,1.483049,-1.129704,-8.906605,1.062517,4.867929,-3.293716,-0.543453,-8.186263,-7.735394,-9.392190,-0.565871,-8.624456,-3.924166,-1.908482,-4.296277,1.183166,-3.555053,-1.152980,7.959907,5.030529,8.544295,-3.475183,-7.475293,-9.245046,7.312448,-3.270426,6.426371,0.766363,7.192223,-8.970281,2.175723,1.651143,0.979676,7.018292,7.197311,2.371261,-3.154777,-8.775205,-0.191734,2.015490,-9.562540,3.517863,-3.242892,2.135704,-9.277875,5.920585,-5.804045,-3.738316,1.267650,-7.155959,-5.495231,0.957604,7.196619,-0.279346,-3.975471,9.793254,3.640409,-2.710803,5.498706,3.521961,6.077455,-6.646438,6.206377,4.660418,-2.105476,-8.100417,-2.006913,9.553677,7.952289,7.405498,3.002752,-0.987155,-3.929787,-6.930756,4.000967,6.134087,7.192895,-9.590569,-4.828036,2.234341,1.067315,-1.254268,1.448364,9.043788,2.507267,-8.115046,1.714374,8.608520,-8.565206,3.407933,7.377708,-5.895333,-2.351203,2.629602,9.151896,9.554009,-4.018172,-0.014810,0.789198,0.557049,-0.515712,4.884898,-8.695941,6.910999,9.529601,-5.635400,-1.739669,4.546211,8.973429,0.520594,6.789148,6.873795,-9.766774,9.204571,2.005679,-0.182671,-6.507745,6.749154,-8.368108,3.343560,-4.765401,-8.091247,9.408126,3.621006,1.085848,1.924519,-6.077800,-6.948930,-1.780716,-1.131472,-2.132309,4.361813,0.004029,-4.672524,-6.233060,1.341762,3.275064,2.349650,1.776549,-2.536971,5.284367,1.999676,-9.312403,0.987488,9.345001,6.865923,-9.428175,-1.084835,7.071000,-6.092720,6.608038,-3.178741,4.881103,6.599547,8.897888,6.980643,5.964371,-4.192668,1.301234,-0.680585,2.646244,-1.392529,-8.567620,7.810521,8.998114,6.585728,6.608755,-1.645833,6.846093,1.801344,7.829880,-9.995103,3.446912,-0.515579,-3.728369,0.147526,-7.028695,9.421024,4.531895,1.760914,-3.809356,9.584309,-7.259333,4.948888,8.307239,-8.065391,6.326771,3.481420,1.007405,5.384093,-5.442498,-1.723731,0.378388,7.530586,-3.229464,5.537813,-6.776840,3.846271,-7.300390,-8.253649,6.307879,-4.887943,1.313307,-6.509850,-2.354321,-0.469225,-2.793633,9.196231,1.664210,-3.432526,4.744600,-8.346450,-2.699681,4.138212,-2.308649,-5.669088,-9.744742,0.847677,-2.608197,2.328831,9.709979,5.306759,-5.273921,1.994148,-1.360820,8.514057,-2.421660,9.933480,0.065683,3.045328,-2.719274,-6.069148,9.158899,8.910896,5.836111,-4.979521,-2.956384,-0.492520,-3.445720,-4.378083,-1.242529,7.241010,-9.608364,6.342173,5.865192,1.849752,3.492132,-2.771545,6.941318,-7.248595,-2.057995,-8.731996,8.563593,4.146111,-1.108563,-7.367926,-3.410805,8.015949,-5.593148,-7.502873,-9.236160,5.238848,3.688505,-3.796456,5.895605,5.153576,1.300867,3.278389,5.457288,-6.957537,-7.958593,-1.043646,-5.404640,4.210763,-3.878054,-9.459771,-7.290264,-8.909015,-2.238420,-0.143468,-1.806310,2.574808,0.242881,-2.644870,-2.773930,5.369630,3.535589,2.511780,5.557880,-1.885512,-8.453461,-1.612389,-1.355915,2.850779,8.906076,3.907524,1.470700,9.301359,3.890774,0.708133,7.961549,-0.525152,-3.719276,-0.195421,7.624412,-7.269012,-5.657412,-5.132145,5.988132,3.662408,4.108922,-7.086433,3.342684,-1.243871,7.029488,-7.990316,-1.057866,6.278084,-1.529905,-3.466272,-9.690475,-5.130971,-2.058790,-8.686026,-4.935653,-6.789038,-4.033845,-5.458907,3.322487,-3.480728,1.721680,6.995940,5.268863,-4.689741,-1.144790,3.711296,5.973216,0.529256,-1.645936,-8.468921,8.966969,2.832469,9.031196,-1.245442,-0.020781,-6.196632,7.356884,4.615738,-6.876136,9.497682,-6.609929,-4.064211,-5.660158,3.314745,7.400475,8.562652,7.236464,-1.944797,-7.305684,2.097592,6.811690,-9.364638,3.801281,9.891668,-4.841303,-6.149509,-0.881555,-6.797818,6.735958,4.963832,6.739594,4.561957,9.941757,-4.955692,-0.196735,-2.687939,0.463571,5.581077,-3.376372,-5.443139,5.470452,-3.532433,1.669703,-9.961968,-2.268420,7.926313,-8.198268,-6.874580,-4.895121,0.741732,-7.086875,-2.551037,9.517635,-1.820505,8.445852,-9.737114,-7.528912,-6.289030,4.883879,-3.424953,-2.225306,-9.949984,-8.714233,6.574501,6.462943,-9.499716,-4.007644,5.637330,-5.942216,-7.095576,-7.801575,-5.273736,7.560806,3.211231,4.617249,-7.093472,3.272855,-1.638292,-1.053903,3.562434,-4.897494,2.858140,-4.899637,-2.010913,2.002294,-0.161673,5.734711,-2.414892,5.294837,-6.094854,1.372163,0.642684,0.770480,-7.975031,7.851098,7.323296,7.003707,-8.210035,0.135186,-7.385074,1.502153,-0.894177,2.116837,0.583405,-8.372051,1.564921,3.899102,0.983433,-7.108155,-7.143652,8.580642,-0.601476,-4.606875,-1.184707,0.846729,-7.651526,-9.163111,-6.063166,9.190258,-5.546677,3.596792,8.926791,-8.414586,7.078470,8.094185,-0.718539,5.966701,6.312724,-0.252245,7.724774,1.763487,-8.505391,-7.953834,5.250545,7.966817,-9.531850,-0.704394,0.331226,-3.811941,9.208622,-2.430691,-2.798975,-3.618120,6.347675,3.786526,4.585614,8.377514,-0.847170,-4.635022,3.271215,-7.332249,-5.449571,-0.660064,1.087311,-5.492583,-4.057253,2.687034,-8.948573,-6.260822,-1.087731,-3.725949,-8.555175,2.459680,7.448671,7.205518,4.449471,-2.966328,-3.838489,3.024786,1.730113,-7.463970,-5.070317,-8.560056,-0.701234,9.168534,4.884402,-5.119338,8.824207,-0.133497,5.973920,4.123933,8.092653,-7.839761,-6.387809,-7.158840,8.536264,4.584720,-7.839662,-3.829329,4.406650,4.194596,8.272051,-9.543943,1.749617,6.536195,-9.731458,-8.140990,1.363169,3.358092,-3.408422,1.749887,9.255905,-7.874439,3.804292,-8.960666,-7.569444,4.877499,1.268408,-7.030842,-2.858896,0.649147,-0.554895,5.103008,-1.347116,-4.726684,-7.941096,-3.288937,-4.162624,1.612521,1.938994,-6.626517,0.187623,6.871959,-5.930868,5.343238,8.793106,0.685694,-6.465635,1.620407,-6.407111,-5.603310,-7.589018,-8.210330,3.067686,-9.034497,0.586952,-5.425774,-3.465961,5.282961,7.297504,3.176601,6.633935,-2.986761,2.749716,-5.249714,7.699798,-2.086656,6.501753,7.416907,-5.516409,9.060203,-7.999634,-9.934696,6.841730,1.512380,6.452252,8.465873,-8.924884,-2.527293,-0.180773,3.268475,7.220508,0.451985,-6.898312,2.585522,-9.894545,-9.180100,-5.378442,2.498121,-2.394132,-9.472531,0.370276,-2.856530,-9.411309,-3.986299,2.619422,-7.175551,6.817137,0.961010,-0.373643,1.192009,9.382228,-3.847705,-0.710413,7.221051,-7.189782,-5.785337,9.246438,5.303241,-7.138389,-6.881137,1.440519,-1.097016,-8.814557,-8.363763,9.080408,7.018959,8.126955,-4.914699,8.288099,-1.396975,-9.619646,-4.402706,1.576694,1.213707,8.400720,5.298040,-4.302496,7.878186,7.817107,-8.443405,7.760139,6.532326,2.675485,9.506850,0.365459,-4.826861,-5.909911,-4.671174,9.555347,7.500515,2.515196,4.463632,8.700316,0.644974,0.230755,7.265734,6.184823,1.337298,-0.199552,-0.179573,7.972322,5.704478,8.817995,3.320011,6.993766,0.902841,-8.696883,3.749803,8.280070,-6.573025,-0.583994,-6.664543,0.985571,-7.979552,-4.587794,1.518416,5.151070,7.641310,-4.714583,1.981619,-0.584614,0.892095,-9.357813,-7.411371,5.186007,-7.306591,-1.502984,6.533443,-2.806076,4.997869,-8.462735,-3.373031,-9.817777,-0.502958,4.758119,-5.726229,-7.497570,-2.745180,-9.110343,3.421719,8.762639,4.187058,-5.047074,4.089454,-4.093143,6.040024,-4.768950,1.470078,0.817419,9.669365,2.981582,-6.790029,4.266121,-6.332052,2.277056,1.518510,7.643558,-0.960624,-3.947626,8.499560,5.509759,0.674800,-1.156270,-3.117793,5.713174,-9.460106,3.143317,-3.599248,1.032453,0.854348,-9.471698,-2.598630,4.920554,9.798705,-4.791484,0.385189,6.794100,2.561309,5.876909,-9.852987,-5.399168,9.660373,9.341902,-5.686752,9.508186,-0.346754,4.454163,0.502515,7.508411,-9.734659,5.813084,7.672037,-1.483828,3.467849,-2.042056,-2.816644,-2.934260,3.087897,-5.336294,6.859873,1.054316,5.008561,-9.292151,6.954984,-6.995571,5.438071,6.055457,-2.351119,-6.714484,3.372963,5.563433,5.655730,-4.082408,-3.762566,-5.393927,-7.534422,1.759592,-6.062660,-6.341588,4.709259,1.789083,3.882285,-7.598036,3.059149,2.039299,8.806878,-9.403214,-4.513459,1.203975,0.046176,-8.357609,5.877724,-9.807846,0.872821,-6.705851,1.285486,-7.295616,-9.353853,-1.215443,5.401614,2.384079,8.607204,2.627597,-5.956284,-7.063877,-2.893196,5.348759,-6.936062,-3.419924,-7.533224,-2.587435,-1.776888,-7.711199,3.426180,-1.569865,-4.792226,-5.555739,-5.811330,-6.510570,-7.509651,-0.531063,6.817944,9.167741,4.645838,-7.376050,-1.292791,4.460965,2.988441,0.843347,7.311287,0.740365,9.204480,6.756466], dtype = "float64")#candidate|5903|(924,)|const|float64
call_5902 = func_3323_call(relay.reshape(const_5903.astype('float64'), [12, 11, 7]), relay.reshape(const_5903.astype('int8'), [12, 11, 7]), )
call_5904 = func_3323_call(relay.reshape(const_5903.astype('float64'), [12, 11, 7]), relay.reshape(const_5903.astype('int8'), [12, 11, 7]), )
output = relay.Tuple([call_5875,call_5894,bop_5898,call_5902,const_5903,])
output2 = relay.Tuple([call_5876,call_5896,bop_5898,call_5904,const_5903,])
func_5905 = relay.Function([var_5895,var_5897,], output)
mod['func_5905'] = func_5905
mod = relay.transform.InferType()(mod)
var_5906 = relay.var("var_5906", dtype = "float32", shape = (1092, 1))#candidate|5906|(1092, 1)|var|float32
var_5907 = relay.var("var_5907", dtype = "float32", shape = (1092, 9))#candidate|5907|(1092, 9)|var|float32
output = func_5905(var_5906,var_5907,)
func_5908 = relay.Function([var_5906,var_5907,], output)
mutated_mod['func_5908'] = func_5908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3129_call = mod.get_global_var('func_3129')
func_3131_call = mutated_mod.get_global_var('func_3131')
call_5910 = func_3129_call()
call_5911 = func_3129_call()
output = call_5910
output2 = call_5911
func_5912 = relay.Function([], output)
mod['func_5912'] = func_5912
mod = relay.transform.InferType()(mod)
output = func_5912()
func_5913 = relay.Function([], output)
mutated_mod['func_5913'] = func_5913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3656_call = mod.get_global_var('func_3656')
func_3657_call = mutated_mod.get_global_var('func_3657')
call_5986 = relay.TupleGetItem(func_3656_call(), 0)
call_5987 = relay.TupleGetItem(func_3657_call(), 0)
output = call_5986
output2 = call_5987
func_5988 = relay.Function([], output)
mod['func_5988'] = func_5988
mod = relay.transform.InferType()(mod)
mutated_mod['func_5988'] = func_5988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5988_call = mutated_mod.get_global_var('func_5988')
call_5989 = func_5988_call()
output = call_5989
func_5990 = relay.Function([], output)
mutated_mod['func_5990'] = func_5990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mod.get_global_var('func_2345')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_5993 = relay.TupleGetItem(func_2345_call(), 0)
call_5994 = relay.TupleGetItem(func_2347_call(), 0)
output = relay.Tuple([call_5993,])
output2 = relay.Tuple([call_5994,])
func_6002 = relay.Function([], output)
mod['func_6002'] = func_6002
mod = relay.transform.InferType()(mod)
mutated_mod['func_6002'] = func_6002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6002_call = mutated_mod.get_global_var('func_6002')
call_6003 = func_6002_call()
output = call_6003
func_6004 = relay.Function([], output)
mutated_mod['func_6004'] = func_6004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4159_call = mod.get_global_var('func_4159')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_6110 = relay.TupleGetItem(func_4159_call(), 1)
call_6111 = relay.TupleGetItem(func_4161_call(), 1)
output = call_6110
output2 = call_6111
func_6120 = relay.Function([], output)
mod['func_6120'] = func_6120
mod = relay.transform.InferType()(mod)
output = func_6120()
func_6121 = relay.Function([], output)
mutated_mod['func_6121'] = func_6121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_6154 = relay.TupleGetItem(func_2645_call(), 0)
call_6155 = relay.TupleGetItem(func_2647_call(), 0)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_6165 = relay.TupleGetItem(func_4838_call(), 0)
call_6166 = relay.TupleGetItem(func_4840_call(), 0)
output = relay.Tuple([call_6154,call_6165,])
output2 = relay.Tuple([call_6155,call_6166,])
func_6179 = relay.Function([], output)
mod['func_6179'] = func_6179
mod = relay.transform.InferType()(mod)
output = func_6179()
func_6180 = relay.Function([], output)
mutated_mod['func_6180'] = func_6180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2998_call = mod.get_global_var('func_2998')
func_2999_call = mutated_mod.get_global_var('func_2999')
call_6189 = relay.TupleGetItem(func_2998_call(), 1)
call_6190 = relay.TupleGetItem(func_2999_call(), 1)
output = call_6189
output2 = call_6190
func_6192 = relay.Function([], output)
mod['func_6192'] = func_6192
mod = relay.transform.InferType()(mod)
output = func_6192()
func_6193 = relay.Function([], output)
mutated_mod['func_6193'] = func_6193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5242_call = mod.get_global_var('func_5242')
func_5243_call = mutated_mod.get_global_var('func_5243')
call_6256 = relay.TupleGetItem(func_5242_call(), 1)
call_6257 = relay.TupleGetItem(func_5243_call(), 1)
func_3519_call = mod.get_global_var('func_3519')
func_3522_call = mutated_mod.get_global_var('func_3522')
var_6276 = relay.var("var_6276", dtype = "float32", shape = (252,))#candidate|6276|(252,)|var|float32
var_6277 = relay.var("var_6277", dtype = "uint64", shape = (4, 64))#candidate|6277|(4, 64)|var|uint64
call_6275 = relay.TupleGetItem(func_3519_call(relay.reshape(var_6276.astype('float32'), [252,]), relay.reshape(var_6277.astype('uint64'), [256,]), ), 3)
call_6278 = relay.TupleGetItem(func_3522_call(relay.reshape(var_6276.astype('float32'), [252,]), relay.reshape(var_6277.astype('uint64'), [256,]), ), 3)
func_5545_call = mod.get_global_var('func_5545')
func_5547_call = mutated_mod.get_global_var('func_5547')
var_6295 = relay.var("var_6295", dtype = "float64", shape = (1560,))#candidate|6295|(1560,)|var|float64
call_6294 = relay.TupleGetItem(func_5545_call(relay.reshape(var_6295.astype('float64'), [13, 15, 8])), 0)
call_6296 = relay.TupleGetItem(func_5547_call(relay.reshape(var_6295.astype('float64'), [13, 15, 8])), 0)
func_5408_call = mod.get_global_var('func_5408')
func_5414_call = mutated_mod.get_global_var('func_5414')
var_6309 = relay.var("var_6309", dtype = "float32", shape = (154, 6))#candidate|6309|(154, 6)|var|float32
const_6310 = relay.const([-9.324235,-4.457840,2.153813,5.144207,0.459826,0.627894,-1.719300,-1.020391,9.814554,-0.295618,8.600023,-2.667903,3.174361,6.390853,-4.916981,-1.155120,-1.426754,1.683689,1.778825,7.922644,-7.130740,-8.909190,0.157914,9.090907,-1.842341,-6.849258,5.835893,3.028600,-3.689481,6.277723,8.828905,8.797372,6.100082,6.964288,-8.990203,8.014425,3.891987,8.890897,-7.326285,-6.642454,-9.781285,-5.901219,9.977729,-2.603054,0.973424,-2.588366,-6.967264,-3.348912,-6.934074,-9.861655,-9.703179,8.686767,-8.664296,-8.644990,-7.335355,3.599198,-9.760978,-1.407796,5.833455,1.033327,-2.825349,2.705578,-3.843415,-3.299182,4.802619,0.170422,2.508628,-8.457809,6.132118,-0.660485,2.224492,2.576769,-5.803854,1.410430,-5.049144,-1.523012,6.652806,1.605276,8.279770,-7.386436,6.562520,5.243647,5.327603,-6.308001,-9.191582,-7.232542,-9.929136,2.055572,9.813952,-6.627603,-6.052866,-0.122951,-0.535447,0.640075,-8.052122,-3.305176,5.282099,-2.073336,8.438743,8.818016,8.929880,6.731442,6.725785,-0.717628,-5.106826,6.392164,5.630663,-6.343063,7.888551,-0.492969,3.070055,9.438995,-2.149690,7.210253,-4.528521,3.513816,-5.044146,5.243396,-1.839111,-8.312491,-4.708556,7.051952,-2.903920,7.073727,7.495987,5.820116,0.077150,9.388131,-7.043421,1.883784,9.952162,-9.210074,-5.917463,-8.209402,-5.592144,2.758233,-6.986660,-9.553349,-3.276265,-4.754214,6.041115,-9.451712,2.231757], dtype = "float32")#candidate|6310|(143,)|const|float32
var_6311 = relay.var("var_6311", dtype = "float32", shape = (2145,))#candidate|6311|(2145,)|var|float32
call_6308 = relay.TupleGetItem(func_5408_call(relay.reshape(var_6309.astype('float32'), [924,]), relay.reshape(var_6276.astype('float32'), [252,]), relay.reshape(const_6310.astype('float32'), [143,]), relay.reshape(var_6311.astype('float32'), [2145,]), ), 9)
call_6312 = relay.TupleGetItem(func_5414_call(relay.reshape(var_6309.astype('float32'), [924,]), relay.reshape(var_6276.astype('float32'), [252,]), relay.reshape(const_6310.astype('float32'), [143,]), relay.reshape(var_6311.astype('float32'), [2145,]), ), 9)
uop_6314 = relay.atan(call_6294.astype('float32')) # shape=(13, 15, 8)
uop_6316 = relay.atan(call_6296.astype('float32')) # shape=(13, 15, 8)
func_3954_call = mod.get_global_var('func_3954')
func_3963_call = mutated_mod.get_global_var('func_3963')
const_6322 = relay.const([-4.583577,-9.096547,2.679111,5.398098,2.587292,7.030237,-3.197188,0.557357,7.662424,7.597757,6.672841,0.869964,-6.633073,-3.850252,6.685215,7.672323,8.503233,5.634399,-9.122937,-4.767330,-8.324794,3.894172,7.895943,7.374980,-6.545203,2.618444,0.710884,6.260733,-0.853320,4.866370,-2.827990,1.383524,-1.331995,-4.709966,7.142249,9.971388,-2.351981,-9.886390,7.715995,-8.652359,-0.199974,-8.230877,-2.794390,5.888062,9.900913,2.234314,7.977059,1.215414,6.766566,-9.479128,8.287626,-4.250304,8.533206,0.834487,-7.586625,-7.022357,5.778224,-7.279895,0.987126,-2.571130,-2.264556,-8.259996,-7.695413,-8.146321,4.923874,-2.469473,-6.325642,8.554173,5.836006,-9.640441,-5.973176,-9.179718,2.289298,-5.673361,-4.342779,-2.524197,-4.019704,9.608358,-2.839552,-5.906795,-9.172597,-3.747966,1.297746,-3.770202,0.970822,9.272407,-9.597385,6.349033,-6.082649,-9.235557,9.877450,-7.131650,8.720486,-9.267598,7.566774,7.501989,-6.556643,-7.643971,2.325362,-5.593335,4.122426,7.587924,-8.632773,-8.738396,-1.616638,1.230943,3.400570,6.155234,4.535736,-9.481825,-2.616134,1.320259,-4.572699,-5.085692,-2.358450,-1.781559,-3.140302,9.995598,-7.673652,-7.139510,-1.733144,-0.174792,4.141152,-5.729525,-7.747740,4.925575,5.196762,7.402206,-9.145954,7.422541,-3.701470,-7.267270,9.471612,0.374733,9.315200,-3.380257,-9.761077,1.201326,-5.870271,-1.215425,6.494422,6.474291,-8.475640,-8.802491,1.476324,-0.572916,6.497509,-7.153776,-9.970961,-5.404966,1.017354,-0.527279,-4.381742,1.609114,4.948329,8.842675,9.519424,4.511743,0.088799,-4.271126,-0.139941,-0.294020,-1.956411,-1.150494,2.081833,-2.946262,-8.469616,-2.090504,9.622319,2.767694,9.582243,8.158031,-6.459461,6.135681,-2.686790,-4.144680,-3.896616,-1.956702,3.866418,5.632614,9.349951,-8.696533,-2.360318,-5.437349,-2.052451,5.026964,-6.778996,9.683346,3.320124,-3.114850,-0.737400,-1.371290,-4.761024,5.723160,-0.223945,-9.797163,7.720755,1.329491,9.327692,5.615894,0.328406,1.866924,9.106452,-4.971575,5.087717,-0.022875,2.745200,-8.900164,2.217670,-2.736193,8.573968,4.111461,1.907043,-2.507266,4.404917,-3.705482,-6.696233,-3.263682,-1.152168,6.623227,-5.904070,-3.023297,-0.915204,9.669811,-9.272089,1.546340,-2.304403,-4.871327,1.671189,-6.025672,-7.117631,-7.304296,-0.639993,-1.417525,5.728583,0.377507,7.899495,-3.111553,-1.867170,0.844844,5.235356,-7.983057,-1.891879,1.159081,-5.971498,-0.966351,-8.750711,7.495069,6.621964,-4.357674,7.064883,-8.365436,7.520041,8.332835,-6.418464,-6.629778,7.822377,9.502493,-7.845590,-5.867811,-9.489201,1.084140,5.741464,-8.224954,5.351317,9.738185,-9.678679,1.939220,-4.829817,3.531810,-7.815528,-3.683687,6.049133,4.213416,-6.257074,-6.699446,-4.049967,-3.863758,-2.109685,-1.722944,5.425114,8.044172,-4.729533,6.394642,3.785037,2.771792,-0.216022,4.345181,-0.383429,5.886727,-2.696915,8.743036,-6.049727,-4.127120,-5.575071,-2.152101,6.668854,3.690688,-7.772889,-0.035601,-8.900042,9.015249,-8.340069,-7.397207,5.447623,0.506264,6.710291,-6.211039,-5.395750,-6.986867,-3.402246,-5.661748,-5.065843,2.592524,-1.483433,-6.070701,9.347433,-2.185321,2.397763,-6.514701,-2.649527,-9.676459,1.386130,9.189804,-3.384612,-2.779298,-2.300097,-5.626115,3.696296,-3.627277,5.779533,-0.075438,-2.111847,-5.615781,4.426290,5.245639,0.103804,3.844097,-4.525743,-6.321239,-8.386895,2.002386,-9.446109,-4.347639,2.305311,2.281442,6.370055,-0.027037,-8.298317,8.379072,1.833603,-5.278368,3.325261,3.905953,-4.789315,-6.062645,2.766401,-8.401667,4.346241,2.180974,0.217123,9.829778,-1.623518,-2.284227,2.885797,-4.775255,-1.362747,7.434674,-9.036319,-0.185163,-8.855022,6.852352,-5.936779,1.902973,-6.664293,1.297595,-0.391061,2.295334,-6.487014,5.281921,1.877384,-9.904140,-9.830814,6.403776,4.050406,-9.215659,-0.182661,6.962046,5.334461,-9.100978,6.840173,9.119466,7.208047,-3.981155,-5.092430,0.938753,4.895289,-6.495603,8.707995,-6.943997,1.920281,-9.881670,-5.680530,-7.300531,7.519196,-1.703289,-1.442570,-9.475058,-7.528010,2.087185,-1.770333,-1.462944,4.953802,-7.459332,5.852935,7.255380,8.136647,-7.627907,3.216734,9.400357,-6.415169,0.783874,9.389776,-0.504758,-1.984772,-2.276082,-7.959045,-8.451871,2.160433,-7.792312,9.744088,3.683578,1.527305,-3.771113,6.074726,5.889807,9.012749,-1.253638,-2.316101,-0.306573,3.599457,-8.289264,-3.021483,5.727843,1.544488,-1.657788,8.725445,0.422483,6.235009,1.918523,2.066475,-3.214244,9.970769,6.736128,4.928295,-3.122849,-7.944919,-9.105824,6.233988,5.645491,1.904734,3.896405,4.051810,-6.837635,-3.891552,2.841240,-7.545305,9.115314,2.197336,-0.080697,-3.128036,9.518517,0.670587,9.994720,0.255147,1.904402,-2.870484,5.656411,4.426750,3.435693,1.547232,8.818163,-6.560949,2.168282,7.093954,1.358085,-9.884631,-1.444170,-9.013342,-0.210656,-3.954931,7.663759,-8.157661,5.785371,-9.798352,9.471073,9.597811,1.485026,8.052652,4.527600,-5.752477,9.835912,0.076607,-9.551191,6.908799,4.968621,-5.609189,4.630209,6.635984,-6.382376,7.493609,2.551168,-3.117914,-0.195770,3.388333,-7.138445,-4.878503,-2.400630,-5.247644,-3.097697,0.590803,6.337395,-3.649324,-0.841515,2.906877,1.366392,6.622497,-3.017122,8.921513,6.880966,-8.604442,7.675866,8.373552,5.922535,-6.354398,-5.704276,4.018998,-1.156117,-5.244395,-9.840741,6.616008,-9.282387,-1.441561,8.213353,3.743926,1.353757,-2.294237,6.000427,-3.216679,8.522834,-4.904287,2.812744,-3.269680,0.993487,-5.202791,-4.105993,0.905231,-7.278663,4.099605,3.263768,0.081564,9.995553,2.692993,7.396613,8.244085,7.958888,-9.950953,8.469517,-1.674876,6.563699,-7.189721,-5.786638,-1.806750,-6.725776,-7.965136,7.463234,-7.188993,-0.432634,8.222565,9.702890,-3.360870,-7.565695,7.213926,5.500474,-3.854768,2.695514,3.261701,-4.457783,-4.245051,2.798881,-6.119376,-4.773872,2.028397,2.192475,7.310074,9.507308,9.529129,-8.344512,-6.384353,-2.323711,9.843943,1.654492,3.608720,-0.698879,-1.401279,3.272241,-0.900650,5.413532,-7.684437,-3.616948,-2.792203,4.100347,4.145704,-6.961227,-4.222879,-8.343338,-8.628216,-7.590489,9.628712,-8.637129,-0.209607,4.719504,2.478136,3.714993,3.664946,2.620088,2.754806,1.815088,8.708418,-7.819956,-1.922538,5.260922,3.023191,-6.293308,-4.997216,-9.533807,-6.199279,-8.810585,4.703133,6.901273,8.960733,-9.058890,-7.626607,-7.948760,4.142257,8.197795,0.113661,9.565718,-3.880324,-0.822674,-7.819846,6.775440,-8.392131,-3.784336,7.016972,-1.105537,7.255472,-3.943580,-8.463590,3.033309,7.375439,7.434313,5.880463,8.922160,-9.138565,-4.661036,3.949661,-4.514934,0.453019,2.172683,-2.658259,-4.332297,-6.945144,3.461939,0.611617,-4.289432,3.698978,3.661895,-7.338262,-8.370278,-7.503523,8.330982,9.015963,0.862190,3.725959,1.806004,-3.650522,4.634951,-4.769980,8.353166,9.630110,3.970923,6.235159,8.206476,6.617997,1.872364,-9.033410,1.729830,-5.930336,6.836121,4.117852,8.867208,-4.036138,-9.579015,-4.399918,-7.649500,-7.993521,-8.681737,-3.404527,5.720159,-1.209461,-2.186462,-6.362238,-1.888719,-4.746340,-3.808556,-2.651949,-2.285911,-0.966294,-6.053426,-6.192473,-5.569108,-2.635819,2.383430,-1.783017,-3.045780,5.162777,7.032041,2.376561,-3.632250,8.591045,7.859318,-8.230023,-0.835311,4.477945,2.997047,0.335269,-0.398506,7.353004,5.900646,-5.079889,-8.068714,-1.400542,1.298122,4.962172,2.801653,-8.244461,-2.330747,-7.125496,3.160227,9.847722,-6.403759,-9.328840,-5.631795,-4.274527,2.011474,-9.626992,-7.436389,-2.968319,-8.682570,5.141806,-8.750579,-1.402809,-0.913322,-4.397312,-0.998201,0.173503,-9.326157,0.180625,3.340261,-2.799235,3.458726,-2.639996,7.140148,3.457348,-3.496726,-7.597081,6.528029,1.140753,9.051152,8.341677,-6.044789,-3.569595,4.907093,1.115340,4.431373,1.839738,-6.662598,-3.315595,-8.387064,2.053846,-6.734378,-5.475612,5.867213,-5.914042,5.947199,-3.285555,-0.241803,-7.640340,7.971488,-4.372859,-4.073463,1.670738,1.982172,-7.898766,3.105056,-4.886711,3.319967,9.894616,-4.644444,-5.652956,-2.077302,7.630149,1.037740,-9.092761,-2.969238,-1.938934,-3.489474,2.324645,9.359737,-0.908437,-8.456348,7.442021,4.015026,-2.146725,-7.566429,9.846540,0.658307,5.348652,-3.803041,0.601506,-1.376437,3.722645,4.007648,-1.331121,9.030522,-9.610795,2.055881,1.160256,-6.950732,-0.712680,-0.471875,5.862434,9.953592,2.660163,-8.320227,-1.200707,-5.332567,-7.273505,-1.128471,-1.804157,3.698672,0.526331,-4.686637,5.117021,-4.638195,7.203420,3.123665,7.774276,1.440474,-5.017409,8.599768,-6.380330,6.916717,-4.486986,1.485872,8.658971,0.819825,1.015452,0.288015,-4.467237,6.736080,3.397042,9.248860,6.504084,7.306956,-7.456009,-1.041925,-5.717315,6.386949,6.227216,9.946784,0.260411,-9.812920,4.745159,6.348287,5.783204,9.599326,5.660987,0.378174,-8.589519,2.329980,-6.922436,7.356705,2.866627,6.989716,-9.143060,8.626496,9.938608,-0.584392,3.332945,-1.313966,-7.748816,7.157778,-7.860072,-0.600682,2.293403,-9.539156,1.317309,-4.473894,-6.752383,-6.059200,4.629817,6.146570,3.518928,3.236150,4.712782,3.518125,8.502765,-3.461630,-8.959573,-7.285776,-7.146254,0.348899,3.281744,-7.151494,0.105340,-4.256708,-7.604987,5.326667,9.880276,-3.313397,-1.594496,4.324329,7.006990,-7.512671,-1.216628,0.263174,6.275758,9.178340,6.470130,-0.347067,-2.832230,3.711288,-6.002171,-3.026614,0.732273,3.826324,-3.355788,4.698284,-1.977417,9.421510,2.702153,1.469368,5.615900,1.545009,-1.487903,8.945982,-4.185206,8.624090,9.656475,-5.045544,-9.965419,9.677080,-3.087096,-9.892421,-7.034402,-7.877908,4.508718,-4.434248,-0.722475,2.598655,0.847430,7.553803,9.354996,9.865915,-0.384519,9.388706,1.979418,4.791388,3.256776,-9.674713,-5.758146,0.923699,-9.469522,-3.644563,4.970083,6.209332,4.103473,-8.037823,2.955434,3.734422,-7.787389,-5.513979,6.153684,0.039294,-0.165913,-2.250198,-4.019657,-3.320906,9.819592,3.742831,-0.502439,-8.097280,5.839214,-1.534412,-4.054447,-7.038635,-2.928258,-3.499149,0.934383,-2.322217,1.711202,-9.770173,0.926119,-0.887020,7.237171,3.825789,-5.698456,0.749342,3.359060,-4.413348,-6.849552,-6.499192,1.704076,-3.098760,-8.027250,-2.730022,-3.347736,-8.200884,1.623678,-5.776763,-9.144457,-0.393737,0.946852,0.006679,1.283621,-7.233195,-4.402075,-7.178714,1.322987,-9.693392,-9.042855,8.756989,2.706281,-5.741226,-9.871774,-4.627936,-8.308460,5.152001,-5.777539,-3.076687,-1.262495,1.740674,5.586649,7.708640,2.625611,5.561487,-0.118373,-2.440104,-0.162906,7.916901,4.723292,7.589455,-2.550087,-3.662398,2.143159,9.413520,1.783307,1.302579,-3.097611,-0.015156,-1.909543,1.952452,-4.988493,5.344098,-9.308576,-3.659093,-8.040439,-8.989336,-2.862020,8.462596,1.235651,-4.241151,-8.921290,-0.749723,-3.224609,-7.046858,-6.848010,7.406152,2.236436,3.117766,5.831995,9.029720,1.775861,6.222247,-8.834064,-2.305795,9.684464,0.638147,-7.643578,-6.872785,-6.873014,5.575619,5.276298,7.799695,2.816290,-7.091132,-1.788892,-1.611982,6.815851,-1.249146,6.716947,-6.158639,1.981172,-7.270707,8.823536,-2.635974,3.180952,-3.938524,-2.790304,5.323482,-8.303835,8.289044,8.384085,-3.424425,6.822289,3.206256,8.821100,7.404450,3.589830,-2.659228,-3.775903,-2.981842,4.004475,-6.005691,-7.849866,5.999907,-6.197921,-4.834871,6.971012,-6.229044,4.346921,8.974782,2.876031,4.358217,-7.565270,6.609474,-0.697216,-3.587845,-5.133395,6.769698,-0.766134,4.554719,6.370700,-9.632081,1.528040,7.112316,-6.658507,4.639817,6.941486,-6.034859,7.022549,6.415668,1.432157,0.862468,-7.906179,6.533722,5.367085,6.718172,-7.069099,6.960918,2.251090,-7.664536,4.547671,1.006914,-8.587967,-8.784673,-3.337532,8.576917,5.744691,1.067201,1.183868,-4.943369,-1.485209,-0.388306,-1.716448,-4.396834,-2.530549,0.305815,-1.987886,0.120036,8.954862,-6.920402,0.931763,9.889902,-5.418481,-9.741897,4.292364,4.057364,0.877887,-0.562902,1.158851,8.611797,4.765906,-5.291593,1.251282,-1.886986,3.991462,-1.551247,-1.135826,-9.968669,0.549071,1.001362,2.336603,-5.640155,-2.102159,-1.990916,6.103779,2.580285,0.739729,-6.601502,1.565597,4.730995,-3.900696,0.338325,0.641997,2.902983,0.102764,-9.750739,9.052289,9.872302,0.443215,-7.084051,8.512348,-7.679779,1.165884,7.964024,4.003700,9.649202,8.716505,8.543959,-6.781341,2.333626,8.129259,9.340669,-3.379050,-6.731025,-4.257533,-5.805361,-0.589261,-1.803675,0.292125,7.077133,-4.629795,-9.285152,6.826685,7.889073,9.234150,7.219132], dtype = "float32")#candidate|6322|(1260,)|const|float32
var_6323 = relay.var("var_6323", dtype = "float64", shape = ())#candidate|6323|()|var|float64
const_6324 = relay.const([-1.267883,-3.847700,-3.806361,1.536083,-9.808274,-1.891867,-8.250685,-6.999950,-6.939858,-4.303284,3.045666,9.320813,-7.754676,-1.114702,-7.335237,1.788679,-4.973645,-9.837476,1.431553,-0.744059,6.283118,7.998226,-8.758894,1.984253,-3.801228,-9.149024,-7.885046,5.850104,-1.803572,-2.096120,-5.745761,4.977534,7.930630,7.220073,9.461178,-7.920056,-5.699885,9.921503,2.274523,4.773238,-8.141149,7.720976,4.497171,8.220899,-3.974894,-7.860621,-4.356852,-7.675003,-3.114743,-2.708933,5.782148,-1.259249,-3.474435,-5.797341,-9.268510,3.082031,4.889080,9.058339,1.438316,-3.475900,4.391797,-5.213186,7.374299,1.458064,-0.320907,3.404240,3.620027,5.393595,6.491964,7.134592,7.661074,4.162715,-6.124860,7.192515,0.568257,5.573505,2.394453,-5.091047,-6.706413,-3.305963,5.106785,-8.799347,9.380035,-5.289207,7.885867,-2.324009,-5.849017,-8.078111,4.005707,6.015529,9.268382,8.921712,-0.660176,3.472230,7.479708,-4.808778,-7.794214,2.061865,-5.812666,-5.730765,-8.575273,1.411093,-9.878111,3.158824,2.833078,8.636931,7.009529,4.388498,-4.936945,7.965497,-9.748703,7.452786,-0.238007,-0.383643,-1.105674,4.622857,-2.786175,-3.840958,-4.621001,-2.692853,-2.853196,-1.461086,-4.254817,2.066487,6.164250,-5.576722,-4.450198,-5.176664,6.378979,-5.357372,1.961480,-6.516174,-3.217497,7.488538,-9.039077,-9.303281,1.757459,-7.585627,9.484982,-6.795395,-7.753927,-2.257316,-7.438617,-1.406818,-9.006583,-0.892818,-0.712035,4.191640,9.898733,1.434522,-4.654601,-6.423541,-6.527083,3.519154,-0.295924,-1.436197,-7.827518,-5.653405,3.707912,-2.822363,9.113824,-7.019046,7.663675,-8.062634,-5.076988,-9.897289,0.761264,-6.025450,-9.029020,8.073950,4.001757,8.882676,9.627102,7.372278,-3.599958,-4.828046,-6.427070,2.195403,-6.188133,-5.786378,1.303100,8.287362,7.676807,1.362334,2.617131,-7.189003,-7.494109,-4.968306,8.169227,2.099189,-3.896420,7.703626,-4.423001,-7.292345,-0.533968,1.649475,-3.618354,8.170980,-7.875515,0.839779,6.943610,-0.949696,6.940916,5.471758,-0.818201,9.288143,-0.646991,5.089465,0.710602,6.391133,-4.664626,-1.384142,0.051185,-3.590531,-1.403981,3.644655,-7.743990,3.234557,4.661442,-1.944529,4.457188,-5.182624,0.944304,-7.225159,7.118257,-5.060569,-1.907567,-1.560493,-3.820196,0.353494,-1.767184,0.975650,0.225512,5.217194,0.602444,-2.508739,1.644645,4.951970,6.891121,1.211739,1.646074,-4.049712,-3.076026,-3.784151,-1.371898,3.451903,-9.603738,9.206849,-2.510807,-9.030667,-4.209066,-4.420653,0.607826,-6.227213,-4.669130,-4.017882,-9.443060,8.067046,4.403488,5.860098,-7.290089,2.803024,1.609775,-7.104887,7.979154,-3.098526,3.498927,1.916004,-1.445219,8.488695,7.317742,-0.332213,1.223576,4.453867,3.751197,-0.163596,6.001788,6.457318,-8.069668,-6.711023,-9.249180,4.825379,-4.421218,5.720895,2.876879,3.590860,-0.262654,-6.498394,4.979674,-3.018586,-8.806365,-4.103143,-0.383509,7.060866,6.874272,-7.649953,-3.422334,-8.778203,-2.190067,7.723972,-7.261005,6.708520,-5.756539,-3.669489,2.051350,9.262302,8.901905,6.220938,3.309393,-6.151440,5.876616,-8.262058,6.233286,-8.889856,-0.076809,4.448460,-5.740839,4.649164,-5.276561,-1.970064,5.875504,4.143463,-8.663921,-4.216238,0.931105,-6.199636,-4.297035,-5.796728,1.097176,5.124627,-3.750131,2.184249,4.426334,-9.009236,-5.841197,0.319610,-1.485005,6.554673,-1.319767,-4.835324,-5.329803,-7.793555,1.683462,-5.984469,7.241345,9.399359,-5.900740,-7.046311,3.906325,1.683598,7.499666,5.808412,-3.036146,-8.389827,6.048035,-5.640307,-0.868585,-9.520474,-2.258667,-1.565325,-2.258073,9.561099,-5.088535,8.124306,-2.695057,-1.141351,2.112043,1.039917,-1.521330,-5.687554,-2.151480,2.836657,3.015827,6.298325,3.581839,1.725866,8.425845,-3.855061,-0.434380,4.302535,1.926192,4.451488,-9.599117,-3.073526,-4.176383,-9.840501,9.462884,7.846050,7.239467,-1.786174,2.951300,-4.159529,6.817096,-7.019829,-0.945772,-8.449558,2.694064,5.552192,2.076628,-6.942221,-9.997899,-1.792727,2.165463,7.098488,-8.508772,9.077881,3.420406,-5.649782,-3.320510,5.107806,1.832008,-0.611350,8.450385,-2.955281,4.796473,-1.406932,6.637215,-1.704187,1.214043,7.123791,1.118810,9.420910,-4.049515,8.699081,-7.366759,-5.469677,3.351884,8.945237,-0.997941,8.486158,-3.251697,8.607058,-6.029980,-8.359510,3.069501,-5.734879,-2.650006,-1.293111,5.574590,-4.610837,-1.863521,8.507932,1.601699,-1.345453,-5.843847,-5.206506,3.165501,-0.030767,5.540716,0.035588,-4.648033,5.453434,7.413652,-4.075441,-3.675777,4.857792,7.975268,-6.239280,7.272641,-4.766419,-4.333178,-7.801998,-7.954980,9.035363,-5.945543,5.515741,-7.075506,8.165105,-4.305141,9.357435,-3.938377,7.573584,9.818155,8.382732,-4.562691,9.758954,-5.425449,-4.798934,-8.895283,-1.502661,3.493171,-9.259574,-1.899468,2.617729,6.810872,2.754875,3.247934,7.394288,-1.850995,0.749881,-6.124634,6.099195,8.800365,7.995715,-8.927219,-3.711564,2.754140,8.147946,-8.558298,-5.883937,6.715378,-3.288431,-1.214136,-1.039057,-3.309661,0.185619,-5.321825,7.727151,8.594812,1.902712,-5.853939,3.550165,-2.849650,4.669791,8.133608,-5.827364,-9.376844,-1.125483,-2.941654,5.628485,-6.003628,5.150889,-8.805470,-8.221118,-2.093696,9.204712,0.166394,-8.841134,2.041588,9.291469,-3.356631,-5.901060,-6.936500,5.490861,8.767135,4.803085,-9.078947,-9.392674,5.497147,-0.871588,-4.683946,-7.313670,-0.914166,-8.024893,-7.701208,-4.947901,5.653224,1.264267,8.500009,4.986515,-2.224633,2.709393,0.144473,7.667910,-6.478350,-0.176131,5.839832,6.561777,-7.223129,8.122549,5.646159,7.949675,-6.083560,-5.614533,8.875904,-2.409579,-3.465859,-0.561571,2.952393,-1.766549,5.266644,4.926556,6.285482,-3.437780,-3.574484,-7.090335,-5.486106,-0.141768,7.864505,-8.490638,-0.085286,-5.622826,-5.174545,5.798421,-2.956173,-7.075512,-3.561109,-0.857141,-4.844305,1.503435,-9.349826,-8.423128,8.566653,-3.366712,4.162793,-7.660052,5.846748,-2.429886,7.526512,-5.554209,2.170523,-5.345229,-5.804883,1.722338,1.577841,2.282144,-2.342000,-1.127017,-0.754037,-2.875543,-7.897188,-4.396071,1.597763,6.797786,-6.142674,-2.341702,-7.153068,9.760049,5.446787,3.747921,-8.546267,4.826746,-8.349130,-9.412638,-2.374516,-9.557041,7.333134,-9.011406,9.795687,-2.916620,9.724068,2.007194,5.415932,-2.540550,5.964880,8.376710,-4.640050,8.717532,6.871469,-3.129162,-0.456546,-7.891806,7.966021,9.199438,-7.702732,-6.073226,-8.138355,-6.980422,-5.686472,5.756177,-4.067347,6.844601,9.553841,-2.833890,9.301547,-1.141494,1.222826,5.455446,0.779907,-2.865581,-4.218489,-2.481221,-0.520731,-6.392550,8.933851,0.996434,3.866048,3.105728,2.717573,9.090908,-7.890702,-4.088595,-0.061468,-0.473868,-7.606689,6.691694,9.159734,-0.579833,-3.569194,-7.529188,-2.834532,-8.427869,1.947820,-7.282808,2.915520,7.671217,4.989118,4.594541,7.314879,9.800127,-5.472989,0.907832,-6.980420,-3.384259,-5.804429,3.384633,-7.599543,-6.349953,8.409151,-0.752778,-1.680536,-5.420217,2.445097,5.298647,0.927278,5.159216,-6.177453,0.466604,-2.264718,0.744395,-0.295305,3.514620,-0.020662,-7.666192,-0.417090,-7.108840,-1.255284,-3.321316,3.421310,0.110842,-8.717966,-1.990837,9.573819,-0.085811,1.985910,-6.748247,-7.799629,-3.892295,-0.514805,-2.375144,9.165163,3.488528,6.028344,-7.474690,-9.226458,2.148815,-5.538269,3.180862,8.227945,0.392835,9.898159,-6.286757,4.694027,7.464165,-2.903712,-6.242268,-3.903104,1.116419,8.009098,-9.807208,4.457872,-5.540526,-5.737426,2.704793,3.384320,-4.760264,0.195232,-8.029126,-9.497245,-6.849052,5.873138,-9.051418,-1.611523,1.763192,7.291369,8.370071,3.298398,-6.512688,6.082169,9.241565,-9.544127,-5.133960,7.313053,-3.667379,-5.001292,-4.748352,1.706637,1.579170,-2.472044,5.703259,2.898843,7.640515,5.918557,-9.835039,6.995792,0.857941,1.532932,1.706619,5.262646,-7.514656,-1.422512,1.201124,-4.748825,-9.862873,-3.946386,-3.937164,-2.557324,-9.134721,-6.805633,9.946739,0.682981,2.528522,-4.800544,2.277245,6.611433,2.250680,-1.019313,8.809873,3.422567,6.533451,-9.046937,1.378673,4.301478,-7.168715,-1.362796,-0.958293,-9.889451,6.062342,-2.561330,-1.055396,-5.629757,-9.520730,6.658365,7.483268,1.921119,-7.370417,8.175860,-3.532690,5.577153,-2.143945,-8.555102,3.129125,-2.276984,6.047335,6.155826,-1.165804,4.644333,-1.987511,5.958394,-6.209522,0.152076,-8.745974,-2.697701,8.804360,0.177356,-8.225882,-3.531209,-5.134686,-9.493858,-3.896223,-8.914377,1.601298,6.325705,-9.296440,-2.100390,2.653550,2.927230,-9.074945,-3.209952,5.704255,4.265084,-1.707784,-5.184937,-5.256039,-5.295969,-8.641007,-0.190845,1.399036,-3.244438,-9.057009,-0.827985,-8.883794,6.272914,1.608243,-9.689842,5.668625,-0.089141,-0.186608,-0.424788,5.554340,4.252286,8.075372,-7.167729,4.218309,-8.854453,6.472754,3.667479,-0.341262,-3.637958,-5.910967,5.602395,-9.122447,8.546549,-2.007459,8.876083,7.827699,4.153505,-1.321497,0.903584,-4.168748,8.475698,-1.344001,7.032492,9.925837,-0.609278,5.698287,2.464463,-2.326757,-3.911623,3.668756,-4.884579,-3.437763,2.985866,9.526866,-1.735491,0.538391,6.029339,-3.140314,-8.006740,-5.935786,2.109849,-0.715805,0.147569,-9.341063,8.774628,-8.843597,-6.199853,-0.174452,0.769253,-4.133625,1.621890,-5.169827,0.366623,-1.917847,-0.162899,-6.733774,-9.529489,8.699605,1.080092,0.153281,4.956435,0.696531,-7.376479,8.712934,2.936594,0.077375,2.530171,-8.730091,-2.757900,7.879527,8.354821,-0.624103,-8.187148,-9.805150,7.886964,4.298283,8.244880,-2.272940,-3.526897,1.054188,9.888393,-3.475129,-6.256712,8.254996,3.609777,-2.289936,2.113618,-1.644167,-6.184364,2.024732,-0.543408,-4.444767,3.570236,0.570733,-2.389350,-6.710353,0.186530,2.422331,7.286153,-2.007991,3.682143,5.755498,-5.267802,-0.005436,-7.820069,-3.982805,-1.957633,-2.667114,-0.330716,8.487092,1.564559,-8.496830,0.516603,-9.897895,7.259156,4.600210,1.550951,6.741973,1.486869,-8.206039,9.283947,-0.494706,4.864868,-9.258013,9.438921,8.214721,3.206246,9.027633,9.011560,3.131926,2.239901,5.361339,8.157465,-9.952423,-4.402503,2.676728,5.364241,-1.431329,-7.459128,-4.049325,-4.612052,-2.039491,-6.176148,-7.803297,-8.983007,-9.517017,8.666291,-5.700474,-1.978013,2.587441,-3.651698,-9.111738,-9.191269,-5.396664,8.850373,-7.944894,-0.099323,4.782324,6.139593,-0.955516,5.122298,8.370462,-2.844669,-5.441956,-7.739168,-8.280422,-3.449166,-0.488871,0.082811,4.825335,-3.638152,-0.471173,4.397584,3.495565,-9.733352,-9.484398,-3.739598,-8.477448,3.609676,7.518007,-3.634814,-7.652048,-1.830960,6.877355,-6.133753,3.973602,0.205811,4.057696,6.640421,9.263832,3.727525,-9.984761,9.557702,-7.386183,3.931573,-7.111613,0.478736,-3.919438,1.514507,1.531694,-9.195769,-9.238480,2.791015,-9.439918,-9.063692,-1.511517,1.390558,5.171107,5.855436,-2.670692,3.956742,-3.667627,8.096303,6.135813,-3.128933,-3.556641,1.243221,-1.213711,4.814425,7.897256,-8.092709,8.811993,-8.672351,-5.706593,-9.019806,-6.663704,0.538939,1.067339,6.637034,-2.685657,8.230240,3.075291,0.234614,9.553135,-0.693409,8.215417,-8.651381,2.372858,4.689118,-6.911951,-4.109657,-3.673810,5.124164,-2.731115,-0.351858,7.966017,-5.252307,-4.914765,-2.318605,-7.583674,-0.729859,-9.434200,-3.947372,-1.188583,0.535002,2.179799,9.269628,-9.780381,5.993990,-4.646392,6.140237,-3.887724,-5.885014,5.417335,-5.432760,4.826336,9.636941,-2.843652,0.064880,-9.896134,7.179468,-9.961121,0.682470,-4.349176,-5.437969,-8.407480,-6.652821,8.342137,5.005006,4.520922,-3.113203,-8.974852,-4.738488,6.890137,3.440558,7.000763,2.560062,-9.012401,-4.006965,-5.314364,2.857666,-7.777090,3.314678,-0.080186,-7.325292,-3.632894], dtype = "float32")#candidate|6324|(1176,)|const|float32
var_6325 = relay.var("var_6325", dtype = "uint64", shape = (300,))#candidate|6325|(300,)|var|uint64
call_6321 = relay.TupleGetItem(func_3954_call(relay.reshape(const_6322.astype('float32'), [12, 15, 7]), relay.reshape(const_6322.astype('bool'), [12, 15, 7]), relay.reshape(const_6310.astype('float32'), [143,]), relay.reshape(var_6311.astype('float32'), [2145,]), relay.reshape(var_6323.astype('float64'), []), relay.reshape(call_6308.astype('float32'), [252,]), relay.reshape(const_6324.astype('float32'), [12, 14, 7]), relay.reshape(var_6325.astype('uint64'), [150, 2]), ), 15)
call_6326 = relay.TupleGetItem(func_3963_call(relay.reshape(const_6322.astype('float32'), [12, 15, 7]), relay.reshape(const_6322.astype('bool'), [12, 15, 7]), relay.reshape(const_6310.astype('float32'), [143,]), relay.reshape(var_6311.astype('float32'), [2145,]), relay.reshape(var_6323.astype('float64'), []), relay.reshape(call_6308.astype('float32'), [252,]), relay.reshape(const_6324.astype('float32'), [12, 14, 7]), relay.reshape(var_6325.astype('uint64'), [150, 2]), ), 15)
output = relay.Tuple([call_6256,call_6275,var_6276,var_6277,var_6295,call_6308,var_6309,const_6310,var_6311,uop_6314,call_6321,const_6322,var_6323,const_6324,var_6325,])
output2 = relay.Tuple([call_6257,call_6278,var_6276,var_6277,var_6295,call_6312,var_6309,const_6310,var_6311,uop_6316,call_6326,const_6322,var_6323,const_6324,var_6325,])
func_6345 = relay.Function([var_6276,var_6277,var_6295,var_6309,var_6311,var_6323,var_6325,], output)
mod['func_6345'] = func_6345
mod = relay.transform.InferType()(mod)
var_6346 = relay.var("var_6346", dtype = "float32", shape = (252,))#candidate|6346|(252,)|var|float32
var_6347 = relay.var("var_6347", dtype = "uint64", shape = (4, 64))#candidate|6347|(4, 64)|var|uint64
var_6348 = relay.var("var_6348", dtype = "float64", shape = (1560,))#candidate|6348|(1560,)|var|float64
var_6349 = relay.var("var_6349", dtype = "float32", shape = (154, 6))#candidate|6349|(154, 6)|var|float32
var_6350 = relay.var("var_6350", dtype = "float32", shape = (2145,))#candidate|6350|(2145,)|var|float32
var_6351 = relay.var("var_6351", dtype = "float64", shape = ())#candidate|6351|()|var|float64
var_6352 = relay.var("var_6352", dtype = "uint64", shape = (300,))#candidate|6352|(300,)|var|uint64
output = func_6345(var_6346,var_6347,var_6348,var_6349,var_6350,var_6351,var_6352,)
func_6353 = relay.Function([var_6346,var_6347,var_6348,var_6349,var_6350,var_6351,var_6352,], output)
mutated_mod['func_6353'] = func_6353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_6390 = relay.TupleGetItem(func_2645_call(), 2)
call_6391 = relay.TupleGetItem(func_2647_call(), 2)
func_5252_call = mod.get_global_var('func_5252')
func_5254_call = mutated_mod.get_global_var('func_5254')
call_6395 = relay.TupleGetItem(func_5252_call(), 0)
call_6396 = relay.TupleGetItem(func_5254_call(), 0)
func_4933_call = mod.get_global_var('func_4933')
func_4935_call = mutated_mod.get_global_var('func_4935')
call_6405 = relay.TupleGetItem(func_4933_call(), 0)
call_6406 = relay.TupleGetItem(func_4935_call(), 0)
uop_6410 = relay.exp(call_6390.astype('float32')) # shape=(637,)
uop_6412 = relay.exp(call_6391.astype('float32')) # shape=(637,)
bop_6415 = relay.right_shift(uop_6410.astype('uint64'), relay.reshape(call_6390.astype('uint64'), relay.shape_of(uop_6410))) # shape=(637,)
bop_6418 = relay.right_shift(uop_6412.astype('uint64'), relay.reshape(call_6391.astype('uint64'), relay.shape_of(uop_6412))) # shape=(637,)
bop_6421 = relay.logical_xor(bop_6415.astype('uint64'), relay.reshape(call_6390.astype('uint64'), relay.shape_of(bop_6415))) # shape=(637,)
bop_6424 = relay.logical_xor(bop_6418.astype('uint64'), relay.reshape(call_6391.astype('uint64'), relay.shape_of(bop_6418))) # shape=(637,)
output = relay.Tuple([call_6395,call_6405,bop_6421,])
output2 = relay.Tuple([call_6396,call_6406,bop_6424,])
func_6430 = relay.Function([], output)
mod['func_6430'] = func_6430
mod = relay.transform.InferType()(mod)
mutated_mod['func_6430'] = func_6430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6430_call = mutated_mod.get_global_var('func_6430')
call_6431 = func_6430_call()
output = call_6431
func_6432 = relay.Function([], output)
mutated_mod['func_6432'] = func_6432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6551 = relay.var("var_6551", dtype = "int32", shape = (9, 10, 15))#candidate|6551|(9, 10, 15)|var|int32
const_6552 = relay.const([[[-5,1,-6,9,-2,3,-1,7,-9,-5,5,-4,8,10,-10],[-4,-9,10,4,1,-8,-5,-9,8,3,4,9,-7,-2,5],[-5,-6,-1,-2,-8,2,7,4,-10,-5,8,-9,9,-3,4],[2,-6,6,7,-4,-2,8,4,5,-6,6,-2,-8,2,-10],[1,8,2,-5,-1,-3,-3,-2,5,-10,-10,3,-3,10,4],[6,4,1,7,5,2,2,-9,4,-4,2,-3,5,-8,3],[-9,-5,2,-8,-1,6,-3,1,-5,-7,-9,4,-6,10,-5],[5,-4,6,-8,5,-9,5,1,5,10,6,1,-3,-8,2],[-8,7,7,7,10,-7,5,3,5,-2,10,-6,10,9,-4],[1,-7,-3,-4,10,-2,-4,-8,-3,-5,-7,6,7,5,-2]],[[-6,-1,5,-7,-6,-4,-5,-7,7,5,-6,-8,-8,-6,2],[1,3,1,6,9,-7,2,3,-3,9,4,-10,8,9,2],[4,-9,5,-6,-8,-3,-8,-6,-4,1,9,-1,-10,-9,-4],[8,2,6,-7,-8,-9,-3,8,8,-10,-7,6,10,-6,-5],[-9,8,-2,1,-9,8,2,5,-9,-5,-3,10,10,-7,8],[-7,-7,-10,-3,8,-2,10,-6,-7,9,7,-2,-5,-6,1],[4,-3,-4,10,6,9,-4,5,5,8,1,6,-2,-10,-3],[2,-8,8,10,1,-6,5,9,-2,1,8,3,9,-7,4],[7,-7,3,-9,5,-10,-8,1,-6,-4,2,10,8,-3,-8],[4,4,-2,-1,1,-9,-7,7,-8,2,1,6,9,3,-10]],[[8,-8,-7,1,-1,6,-7,-1,-10,9,-3,-5,-4,-4,6],[-7,9,-1,8,-6,6,1,2,8,-2,-5,-9,-5,-7,-9],[-4,9,4,10,2,2,-6,1,-6,-2,-8,-5,-9,10,-1],[1,7,-9,-2,4,-4,3,-9,8,5,-4,-8,10,1,-5],[8,8,-6,8,-7,-1,9,1,-8,3,-10,6,8,-7,-5],[1,-10,1,-9,5,3,7,2,2,-6,5,4,3,-7,-2],[7,-8,-6,3,9,-1,4,8,3,-5,-5,-4,2,-2,10],[-3,-9,3,1,-1,4,7,-10,-5,5,2,2,10,3,-7],[5,-1,-3,2,-2,6,-4,7,8,-5,-2,2,4,10,-1],[2,6,-4,10,3,-6,-2,-4,2,-1,-4,5,8,5,7]],[[-4,-5,2,1,3,6,3,-10,6,-8,1,9,5,7,7],[7,3,-4,-9,-1,-9,2,6,8,5,7,7,2,-5,-1],[3,4,9,-4,-2,-1,-1,-2,6,-9,5,5,-3,-3,7],[1,-1,-7,2,9,6,3,-2,4,-7,8,-8,4,-1,-10],[-3,10,5,-4,-3,-10,-2,6,-10,-3,3,8,6,3,-1],[8,5,7,9,6,4,-1,-1,-2,7,-7,-9,-2,-9,4],[1,3,2,-5,-3,3,8,-4,10,1,3,8,5,7,-6],[-5,3,-2,-9,-7,9,-8,5,10,-9,-3,-9,6,-10,7],[4,-10,9,3,8,-8,2,-7,-1,-2,-6,-5,-3,-10,-6],[8,10,-8,-1,-6,-2,9,-4,1,-3,-8,-8,-5,-5,-6]],[[3,-8,4,-1,8,-8,-2,4,-3,-1,-8,5,-3,-6,5],[-7,4,9,-3,6,8,10,9,7,-9,-6,9,-2,2,-9],[8,5,-3,-1,-7,-10,1,6,-5,1,3,-10,1,-5,8],[9,-1,-9,1,5,-8,-2,4,-8,10,3,-7,6,-7,-10],[-6,-2,-3,5,2,3,-2,9,-2,-7,6,-8,6,-2,6],[9,-1,10,1,-2,-3,5,10,5,8,-8,3,7,1,-2],[1,10,-2,10,4,-8,-6,4,4,-8,1,-9,4,-4,7],[-2,7,2,2,3,-3,5,-4,5,-8,10,-1,-6,5,7],[-7,-10,-3,-6,-4,9,1,-9,4,-3,-9,4,2,-4,-3],[8,-2,-6,1,-7,4,6,-1,10,-9,8,6,7,-5,4]],[[1,-5,2,-7,-7,10,2,9,-3,9,-4,9,2,-9,-6],[-2,-6,-10,-2,1,-1,1,9,9,8,3,6,1,9,-4],[4,-1,-4,-9,6,-6,-3,2,-4,5,8,6,-1,3,-7],[-4,-4,-1,6,5,-2,-10,-5,-8,-3,4,2,-7,-7,4],[9,6,4,2,-9,-3,7,7,-8,-2,7,-2,6,-3,-2],[-8,6,-6,3,-2,4,-5,-1,-2,7,-9,4,5,-3,-4],[7,7,7,-6,1,5,5,8,-10,4,8,2,-7,1,-7],[-6,-8,8,8,6,-5,-7,-2,-8,-5,10,8,-3,-10,4],[9,2,6,-3,-5,4,-1,-10,-3,-5,-3,-2,-10,-3,-9],[-10,10,8,-3,8,1,9,2,6,10,-4,8,-1,10,9]],[[-4,10,2,-9,8,-4,-1,10,6,7,-7,8,-6,4,-6],[5,-5,-5,-2,1,-4,-10,9,6,-6,-1,5,-10,10,-7],[10,-6,9,-1,6,3,-8,2,-3,-5,3,-5,7,9,1],[6,10,-8,3,-1,3,8,-7,1,1,10,-3,-4,2,10],[1,-7,-7,-1,-6,9,4,-1,10,-2,7,6,-9,-2,6],[-4,-7,-10,-8,5,3,1,3,-10,-3,3,4,-2,2,4],[4,-8,9,-5,1,10,6,-1,5,-2,-4,10,8,1,-4],[9,2,-10,7,1,7,-10,-5,4,2,10,-2,-4,-2,10],[1,-5,9,8,-3,2,10,-3,-2,-7,-2,8,7,4,-6],[-5,-6,-2,4,-10,6,-6,-3,1,5,-10,7,3,-2,3]],[[-3,-5,-7,-3,6,9,-5,-10,6,-4,1,10,-3,-2,-9],[-3,1,1,-6,2,-8,-3,8,9,-5,6,8,4,8,4],[-10,10,-4,3,5,-9,-6,6,-8,-7,10,10,9,7,9],[5,-8,-3,5,-2,9,5,-6,1,-8,8,2,-5,-2,-10],[-6,10,-9,-6,-9,9,2,7,-7,-3,-7,-2,-6,3,1],[-9,-8,1,-4,-4,-7,-4,8,-6,-10,-1,-9,7,2,-3],[3,8,-3,-9,-5,-1,-9,-1,6,4,-8,2,-8,5,1],[10,2,-5,6,1,8,-6,-6,-4,6,-8,-2,4,-9,7],[8,4,-7,2,-5,-5,-4,-10,7,3,-1,-10,1,-3,4],[2,9,-10,7,10,-7,-2,7,3,7,1,-9,3,6,10]],[[-7,-2,8,-3,-5,4,-9,5,10,3,-6,-5,3,4,-3],[-9,-9,-7,2,2,2,-1,6,-10,-6,6,-5,-8,1,8],[-8,-4,-10,4,10,1,-5,4,10,8,7,1,-4,-10,1],[-9,-7,-6,4,8,7,8,4,3,-8,-4,-4,-4,-2,-5],[4,-3,-7,-7,10,-4,7,-9,6,6,3,-6,5,-7,-6],[-1,4,-1,-5,-3,8,-2,-1,-7,-4,-8,3,4,-6,4],[-1,4,10,-8,6,2,1,10,-8,7,-9,7,-1,-1,-1],[-2,-1,2,2,8,3,3,-5,-4,-7,5,7,10,-4,-8],[-6,-1,-5,-10,-3,4,-10,10,9,10,-6,-3,-6,5,-6],[7,1,10,-9,4,9,-9,-6,-6,-6,10,1,7,8,9]]], dtype = "int32")#candidate|6552|(9, 10, 15)|const|int32
bop_6553 = relay.less(var_6551.astype('bool'), relay.reshape(const_6552.astype('bool'), relay.shape_of(var_6551))) # shape=(9, 10, 15)
func_4897_call = mod.get_global_var('func_4897')
func_4898_call = mutated_mod.get_global_var('func_4898')
call_6561 = func_4897_call()
call_6562 = func_4897_call()
output = relay.Tuple([bop_6553,call_6561,])
output2 = relay.Tuple([bop_6553,call_6562,])
func_6568 = relay.Function([var_6551,], output)
mod['func_6568'] = func_6568
mod = relay.transform.InferType()(mod)
var_6569 = relay.var("var_6569", dtype = "int32", shape = (9, 10, 15))#candidate|6569|(9, 10, 15)|var|int32
output = func_6568(var_6569)
func_6570 = relay.Function([var_6569], output)
mutated_mod['func_6570'] = func_6570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5242_call = mod.get_global_var('func_5242')
func_5243_call = mutated_mod.get_global_var('func_5243')
call_6723 = relay.TupleGetItem(func_5242_call(), 0)
call_6724 = relay.TupleGetItem(func_5243_call(), 0)
output = call_6723
output2 = call_6724
func_6749 = relay.Function([], output)
mod['func_6749'] = func_6749
mod = relay.transform.InferType()(mod)
mutated_mod['func_6749'] = func_6749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6749_call = mutated_mod.get_global_var('func_6749')
call_6750 = func_6749_call()
output = call_6750
func_6751 = relay.Function([], output)
mutated_mod['func_6751'] = func_6751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_6772 = func_3546_call()
call_6773 = func_3546_call()
uop_6778 = relay.asinh(call_6772.astype('float32')) # shape=(637,)
uop_6780 = relay.asinh(call_6773.astype('float32')) # shape=(637,)
output = uop_6778
output2 = uop_6780
func_6781 = relay.Function([], output)
mod['func_6781'] = func_6781
mod = relay.transform.InferType()(mod)
mutated_mod['func_6781'] = func_6781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6781_call = mutated_mod.get_global_var('func_6781')
call_6782 = func_6781_call()
output = call_6782
func_6783 = relay.Function([], output)
mutated_mod['func_6783'] = func_6783
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6831 = relay.var("var_6831", dtype = "float64", shape = (11, 9, 7))#candidate|6831|(11, 9, 7)|var|float64
uop_6832 = relay.sqrt(var_6831.astype('float64')) # shape=(11, 9, 7)
output = relay.Tuple([uop_6832,])
output2 = relay.Tuple([uop_6832,])
func_6842 = relay.Function([var_6831,], output)
mod['func_6842'] = func_6842
mod = relay.transform.InferType()(mod)
var_6843 = relay.var("var_6843", dtype = "float64", shape = (11, 9, 7))#candidate|6843|(11, 9, 7)|var|float64
output = func_6842(var_6843)
func_6844 = relay.Function([var_6843], output)
mutated_mod['func_6844'] = func_6844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3021_call = mod.get_global_var('func_3021')
func_3022_call = mutated_mod.get_global_var('func_3022')
call_6963 = relay.TupleGetItem(func_3021_call(), 0)
call_6964 = relay.TupleGetItem(func_3022_call(), 0)
output = call_6963
output2 = call_6964
func_6969 = relay.Function([], output)
mod['func_6969'] = func_6969
mod = relay.transform.InferType()(mod)
mutated_mod['func_6969'] = func_6969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6969_call = mutated_mod.get_global_var('func_6969')
call_6970 = func_6969_call()
output = call_6970
func_6971 = relay.Function([], output)
mutated_mod['func_6971'] = func_6971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5278_call = mod.get_global_var('func_5278')
func_5280_call = mutated_mod.get_global_var('func_5280')
call_7112 = relay.TupleGetItem(func_5278_call(), 0)
call_7113 = relay.TupleGetItem(func_5280_call(), 0)
uop_7122 = relay.log(call_7112.astype('float64')) # shape=(12, 1, 7)
uop_7124 = relay.log(call_7113.astype('float64')) # shape=(12, 1, 7)
func_1829_call = mod.get_global_var('func_1829')
func_1834_call = mutated_mod.get_global_var('func_1834')
const_7126 = relay.const([[-4.800582,1.585811,2.931238,-4.994376,-8.577118,-2.335899,7.935449,-3.435887,-4.621297,8.829974,-1.643264,-9.752566,7.761164,5.637200,0.441706,9.848878,9.896221,6.559024,7.928752,-8.800236,3.894940,8.754666,-2.310308,-1.906241,-1.769940,-1.963212,2.123197,6.645600,-5.226789,-0.849095,-0.813912,-0.183118,-0.004521,-4.982777,4.071052,9.371344,8.658312,2.661599,-2.618070,-2.354254,8.970034,5.196905,9.270326,-0.862785,9.627206,0.577921,-6.430355,-1.733531,5.685346,-7.088154,5.757085,-0.282044,-6.282310,-1.858423,5.471397,0.120375,-8.522855,8.445497,-9.408631,7.276816,-0.052076,1.639658,-7.184361,7.359968,-9.058599,-5.865821,-8.674597,-9.903106,6.557594,2.637153,8.616628,3.059873,-8.059577,0.856240,-1.290459,-3.772774,1.848948,0.078219,8.653449,1.585582,-5.514953,-0.506653,-6.186834,-9.162012,9.774324,-3.991778,-7.322514,-1.584690,-6.631748,4.729889,2.697704,7.710152,3.004972,-2.790571,-2.893967,-2.209128,-6.717628,3.575712,4.242925,-4.768712,0.593990,3.486487,-0.678223,-3.408953,4.178976,-7.547306,-7.743116,9.822063,-6.805177,-7.847763,-9.283149,-8.177408,8.735966,1.988499,6.098615,-4.511755,2.160637,-3.430549,4.982205,-4.245882,3.396759,5.392947,4.997562,2.071472,9.085361,-3.278096,6.281996,-9.132061,-8.021610,0.282060,8.550995,-4.550431,-4.503442,-8.436206,-4.229202,-5.352984,0.535945,7.513398,4.038375,0.997114,-4.586444,-5.194033,-9.960395]], dtype = "float32")#candidate|7126|(1, 143)|const|float32
const_7127 = relay.const([-9.453084,-8.215567,-8.113377,6.789104,-5.481279,-7.860159,9.684760,2.261172,-4.202115,-2.910654,8.423061,5.384173,-9.658091,-0.613570,-5.185616,-9.009496,-9.238523,3.250303,1.040029,7.661897,-8.586664,3.961254,-4.175592,-7.269510,8.941281,-6.967864,-6.591337,-4.268001,6.336321,-2.267559,2.331635,-3.860621,2.694399,9.009626,-8.603973,-8.185541,-5.715903,8.251233,-7.361263,6.643957,-4.450746,-8.130227,7.487279,2.986123,2.269503,-3.719416,-1.330071,-1.123555,-2.785069,4.647791,2.265941,-5.516072,0.843075,-0.761042,0.043888,7.545418,6.217087,-1.665055,-5.968506,5.945095,9.268037,-8.086303,-2.120094,8.683629,-6.226991,2.522229,7.607146,5.915740,3.295852,-8.669845,3.289112,-2.318778,-3.003733,7.861497,-1.101330,-4.110086,-9.621206,-7.835492,-4.154631,-4.823570,-7.164308,-0.030952,6.400372,-5.681538,5.250880,0.455011,-2.257934,1.629304,1.077529,7.381977,0.827175,4.997505,-9.334172,-2.648415,-2.339586,-0.729970,-4.142037,-7.113909,-0.990263,5.529387,4.224544,1.209808,-9.026260,-7.959517,2.817488,-3.895009,-4.373304,9.294203,3.225713,5.927002,-6.384704,-1.196081,-0.080870,-9.863995,7.748501,-1.125381,-6.212806,-0.441880,-3.907903,-8.848000,-5.497871,-7.044033,0.575934,5.026121,7.894230,-9.046161,-2.934493,-6.436480,0.038019,-0.823244,-0.809960,5.488461,-3.535812,-3.301023,5.470664,-1.422844,1.585190,-8.814606,-8.676258,8.623060,-2.828575,9.864521,-2.497351,0.913036,-4.762105,-5.096971,-4.119132,-5.849448,2.316787,9.192355,9.195986,-1.922041,-0.247392,9.521125,-2.155511,-3.694949,-5.700980,-8.462526,7.840316,-8.460966,2.401338,3.373034,0.492483,-1.800584,-7.890116,2.033738,3.387909,-3.881681,-0.776886,9.583442,-6.947210,6.933218,0.101139,4.678751,7.704772,6.085139,-9.021340,-1.687876,-6.853881,-5.777077,-3.186731,-5.695165,8.885057,9.486874,5.717598,-6.907107,-1.352580,-0.618549,5.114505,-4.568313,-2.868670,2.568654,-4.227289,-8.064508,-6.658040,3.439716,-0.081918,9.657490,-7.339789,5.092093,9.578262,4.259768,8.660798,8.726615,2.087253,4.157255,6.451614,-6.509074,-5.459327,-3.893109,9.841572,1.446762,-8.276733,8.399099,9.171873,-9.090297,8.943444,-0.317394,9.247284,4.564282,0.383627,-2.359225,-9.489800,6.042934,4.615165,0.531136,4.952208,-3.814566,5.545062,5.252613,-6.735097,6.075711,3.904779,-5.351137,-8.473694,-8.609089,-8.365859,-8.363530,5.007074,8.464538,-2.592854,-6.415004,8.752890,7.885634,-2.163195,5.063105,-8.018953,-9.618908,-7.530747,-2.509880,7.575680,6.582524,-5.416571,-7.533694,2.445487,-8.336644,-8.894700,3.951705,-4.184981,7.235884,0.919263,1.028454,6.593160,-8.014420,8.306530,-9.944004,3.906429,-9.780418,-5.293039,4.150628,8.316674,9.642705,-3.407386,6.783809,9.820080,-4.915902,-2.496766,-5.403537,2.978405,6.068347,1.650376,4.991469,5.043854,-7.546292,-3.621098,9.078850,-9.095666,-2.461310,-1.889768,2.141473,-5.976515,-5.060640,0.390184,-9.565389,2.107310,4.377435,-2.783387,5.105360,1.765092,8.531371,-6.840280,4.397913,2.138474,3.922582,1.960542,4.874517,-6.530907,-5.356561,-0.516971,5.781728,6.209377,-8.815488,3.307906,0.638076,-7.810487,9.380002,-4.500000,3.656147,-4.311035,1.350942,9.845513,0.594199,-8.760830,1.416334,-7.403311,6.522508,-2.498404,2.109799,5.328287,-6.441719,9.045568,-2.164823,-3.934293,3.514526,3.755716,-5.610789,8.209117,-1.839295,-1.931186,-1.687330,-4.017048,-5.510775,-0.579093,3.896063,-5.069556,8.142109,6.900944,5.096293,5.262245,-0.720697,5.192946,7.469420,-1.992267,7.753874,4.557088,2.414331,9.049404,-0.213050,-2.323935,1.044369,7.599216,-5.256925,4.379701,-7.187525,4.620487,3.433694,-9.985082,8.632582,-9.727802,2.614008,7.784461,-2.514061,-6.828496,-1.466123,-6.464293,2.819940,-0.705811,-9.229679,-9.116734,-5.793467,7.517679,-7.539900,-7.660533,-2.370778,-0.897098,-2.442970,-6.354697,-3.928136,-6.196144,0.345074,8.014329,-1.882372,5.945473,2.833854,-0.648832,8.252179,5.338533,5.769318,2.727812,-1.678527,2.513950,1.536681,1.010869,-5.175672,-2.284957,-6.215170,-3.449825,2.054771,3.720996,7.740470,-0.189461,7.751331,0.488290,1.588226,-2.598594,-7.045599,6.424706,-5.520707,-6.689495,-4.484533,-7.140232,-9.975053,1.460723,-8.437291,-4.542988,-0.275234,-1.194671,-4.627331,-8.123317,8.364039,5.875633,-0.847699,6.138355,-5.596032,8.820730,7.251220,7.361874,2.893017,5.584964,-4.450959,6.743097,0.592813,-9.593211,6.600034,5.413937,-9.014600,0.004621,3.307615,1.726566,-0.931407,-2.036804,-5.205738,5.607588,9.151820,-8.970570,-2.818007,-8.621190,3.031381,3.395092,-7.200171,1.725073,1.127115,1.798734,-1.148176,-9.789437,-5.041682,-7.444433,7.042545,-0.057744,-2.689470,-6.460488,-1.591710,-3.296255,2.239973,4.075532,8.783365,-6.499995,4.078494,2.206065,-2.964812,-1.336101,2.967269,-3.347175,-3.565069,8.822424,8.744010,0.763078,-6.982890,0.515976,7.600870,7.134236,-1.830493,2.981194,-3.393345,0.067563,8.428707,0.685712,-2.979870,3.153552,-3.680488,8.772815,-5.441614,9.430102,4.190934,-9.418527,3.113192,0.815411,-9.638655,1.926892,0.296998,1.926648,-0.547103,2.255562,-5.951651,9.791667,5.438159,-0.628746,9.513850,0.514457,1.484197,1.012903,7.661360,-1.335950,-1.400794,-4.801176,-4.004145,-4.094898,-9.381358,5.527670,-9.853715,6.420520,2.479445,1.423997,-2.694383,9.049299,-4.483836,-5.368940,2.289444,4.915675,0.806872,-9.856331,-0.371766,-5.286307,-3.656114,6.960390,6.029054,8.765843,9.227970,7.887150,1.039648,3.962009,-0.993882,5.082142,-0.188579,7.867273,3.662702,4.086662,-9.906617,-3.049457,6.077366,7.875893,4.611340,7.562807,3.333925,-1.610672,-0.194818,-8.117086,5.509873,-7.471090,4.440776,1.177755,9.966741,-9.796658,2.512284,2.005985,-5.867970,0.091764,0.614856,-9.215516,5.209535,8.365052,-1.707852,-2.621363,7.804885,0.703841,-3.466709,6.173135,4.652420,9.708511,5.250094,7.899485,5.755881,3.096596,-6.128947,6.420091,-8.296076,3.889106,5.577550,-0.511060,-9.386172,0.676024,4.552840,9.380406,-9.929343,7.749968,3.195188,7.371478,5.947097,9.103762,7.303395,7.861704,1.751987,-2.275277,8.114296,6.969464,3.600346,-9.053421,-3.731981,9.652444,6.217526,-7.079491,-8.200523,8.750640,-3.783892,5.890942,-1.882590,3.186802,8.905237,-0.941403,-4.031211,-7.904527,-8.660888,-7.050320,-8.890898,0.371736,-6.643447,-1.734626,4.142020,-7.133366,-9.724501,4.308418,5.226662,-0.078544,3.780763,6.010065,1.605588,1.020586,-5.001701,-0.195436,4.428072,-8.504766,8.392333,-9.173858,7.316908,-7.395562,-7.667651,-4.522841,-9.568427,-3.799222,0.294753,6.618987,-6.602556,-7.356674,0.772397,9.459462,-8.635534,-2.890033,9.647643,-4.746555,-5.731440,-9.274590,2.492769,-2.307409,-9.440434,1.261386,-8.915364,-5.072290,4.529503,8.188019,6.580716,2.072715,7.978147,0.764330,6.239493,2.698442,-1.772282,-6.439546,-8.151392,5.699386,-3.531349,-4.035341,7.232163,0.056817,8.465795,9.656824,6.063832,-5.777489,6.325488,8.279813,9.871951,-7.249842,1.678514,8.883095,9.932211,-4.236076,0.101827,-1.792931,8.890738,9.368182,-5.646227,9.645647,-7.685776,-1.888055,7.309258,-1.026614,-7.051013,-5.149081,6.712624,7.174692,-6.670421,-3.571936,-4.614153,-2.753616,-2.292899,-5.166920,9.883251,6.483348,4.485841,7.009518,5.684456,-8.705705,-4.954136,8.157070,-2.534534,-8.243896,-6.682674,4.811344,7.646521,-9.178503,6.003681,-5.465642,-9.756099,-0.196492,-4.661371,-9.598851,0.162163,7.400648,2.263350,-7.231137,-5.164764,-5.508373,8.540942,7.463516,-1.279328,1.752869,1.837753,-5.967886,0.354106,0.221736,-9.989150,4.964651,-8.587736,8.063421,-1.743849,-3.079487,-6.914225,6.474011,-0.954583,-3.449643,0.553906,-1.226713,7.251987,-0.529260,-8.396415,-5.947906,-9.550417,-4.649419,9.389006,-9.200362,9.621663,-6.846010,-5.708141,-0.757445,-2.635666,1.195058,-7.218188,-3.128366,-5.610086,-2.319035,9.989167,3.995267,-0.669984,-6.767129,1.706245,8.237479,4.784997,-2.951577,-1.083532,-7.211122,2.478798,-8.590576,-4.946376,9.157797,4.935119,1.707598,4.261973,-2.860290,-7.414252,6.095718,-4.042008,9.112618,-3.529062,2.751372,-1.939586,6.331887,0.680169,6.346463,6.374149,-5.002823,-1.764909,5.723883,-0.216661,6.737722,-3.331412,-3.750304,-2.251230,8.491738,5.045045,1.604879,-6.402001,7.062969,-0.119721,0.535569,4.095432,-3.689704,8.900095,3.954736,-7.283454,7.424848,8.962700,2.318388,6.820288,-1.133703,9.043252,-4.823919,2.779199,9.756865,-3.428818,6.374688,-9.894483,5.891642,3.051291,1.874886,6.988937,-5.002967,-1.594398,-8.763637,-3.164259,-8.714255,-8.475331,-7.095522,-4.793159,5.466293,-1.337244,-9.716520,6.252304,7.989124,3.641003,-3.413430,6.248495,3.855295,-9.747388,0.864328,0.201450,-1.304623,-2.656885,4.518275,-0.260071,9.970087,6.962181,6.088275,6.486255,7.900699,1.693998,8.793692,-4.572232,-9.543418,9.060578,-0.601492,4.984167,-1.103961,0.649019,-6.204178,2.657987,-1.167347,8.318802,2.185603,-3.483824,4.718398,-4.019156,-3.076099,-4.549078,0.064264,-5.368076,-0.857163,-5.953915,5.982256,-8.930358,8.991986,5.127999,-9.427957,1.758682,8.401858,-6.452033,5.347534,-4.592101,1.446624,-4.842429,-0.068169,-2.200568,-3.903274,2.783881,-2.806444,4.646470,8.090774,-5.359812,3.776864,3.603295,0.332835,-1.406630,-6.455731,3.309761,6.554843,-6.399365,-4.246395,-8.921089,9.419445,3.229805,4.678325,6.638519,3.585544,-8.827135,6.670199,-1.064864,4.400979,5.520761,9.505516,2.199896,-8.907670,-2.587252,0.731945,8.513271,-6.274066,-4.177888,6.257755,5.353575,3.261166,-8.206326,4.065914,-2.687545,6.864850,0.901614,-1.342002,2.756821,-3.338198,9.559705,-6.760221,9.901254,7.477204,-6.659164,7.509548,-0.242067,1.998134,-6.987887,5.161360,1.187767,-4.136222,3.140207,3.918121,-4.870023,-5.990024,7.660146,-5.557741,5.597595,3.301003,3.627155,7.304276,7.914761,-6.152506,-0.863757,-9.808355,-6.678736,-6.744813,1.903078,-9.825996,4.612056,-1.030108,5.286283,0.216421,-2.973221,-9.824968,-9.612825,9.129978,-8.199401,0.351697,6.206435,-7.555018,-9.724069,1.349953,-2.995898,0.238080,-0.600866,9.408877,0.161818,9.561168,3.733627,8.300344,1.101899,0.377608,-3.998815,-2.005672,7.441669,7.950634,2.700554,6.019401,-1.439013,-3.702794,-9.213917,-9.928983,-4.272768,-5.861962,1.292350,8.006320,-1.007086,-7.458011,4.024362,8.587030,6.752997,2.401245,5.170151,-1.567073,9.304570,2.343631,-3.599983,3.336154,0.283069,-5.394425,1.058266,2.727869,7.911058,-0.489379,4.355875,5.426669,-7.311887,7.700731,9.207854,0.692870,-2.997438,2.696204,-1.227504,-3.357433,-9.617009,-2.501926,-4.919968,5.993472,8.809205,3.083425,8.120883,0.836785,1.871252,-5.345189,7.984579,6.587601,-8.273746,-4.155010,-3.621936,-0.291398,-5.101059,-3.656121,-9.164903,-3.961804,-0.492287,-3.423234,-9.474122,4.810209,9.847642,-8.754960,-3.308485,-7.332551,-2.956113,8.406084,9.777358,4.001837,5.759468,5.882103,-9.978455,8.625228,4.884192,-6.085850,-1.590556,4.074265,4.430901,-1.482877,3.088057,-8.752549,2.538882,-5.816370,4.988780,-5.388861,-8.055089,5.101131,9.161395,4.083070,-4.778153,-4.004425,1.712513,-4.795080,-1.195795,-9.222794,-6.927019,2.104527,8.978238,-6.243096,-5.978196,1.862236,-5.312785,8.655598,8.159485,-5.663919,-7.568942,-5.366032,-0.892037,4.010787,2.631923,1.945707,-2.504438,-0.306691,-8.708125,9.362787,3.471666,1.518193,1.864615,-4.073535,2.287836,-4.513347,5.185850,-9.974971,-6.965694,-2.465726,1.191704,0.459418,8.950457,6.948145,-0.047291,-9.225111,1.341405,-8.534982,-2.716949,-9.892032,3.023889,4.601045,2.202333,3.134143,8.823377,-7.494518,3.219642,1.427892,6.040746,-5.095711,2.286447,5.737769,1.655955,1.953968,-1.906699,9.791705,-6.969619,9.804839,-7.395143,1.516129,-8.429583,1.841746,0.948441,-9.341378,9.437046,8.357180,6.441929,-0.679985,-4.135480,-7.491018,4.163675,-8.222944,7.241539,3.417478,-1.372830,3.449272,-4.980510,-2.158363,6.538158,-6.743592,-0.526952,8.588092,1.435840,-4.542727,9.797357,-3.621392,-0.813193,7.466608,-4.254513,-0.826224,8.005374,-8.349768,-5.647949,-7.315895,7.599323,-3.109366,-5.031273,-1.817305,9.879864,6.186922,8.400577,8.147061,-4.721074,7.105509,-9.085028,-9.310625,-5.245634,6.144309,1.090239,-9.679252,8.050537,-8.532170,1.546568,4.318165,5.720698,4.415274,-6.602740,1.994097,3.441963,-7.562847,-4.961627,-0.401765,0.204162,2.371329,5.977409,5.038291,-2.632901,-1.948075,-5.789555,7.772373,-9.353648,3.544397,9.197173,7.753406,3.644532,-2.804519,-1.388423,-4.250410,8.750127,4.965558,-8.742960,9.831026,-2.224552,-7.122534,4.659697,3.107644,-6.800206,-8.465139,1.376625,5.455776,0.289985,-1.257561,-9.430268,0.074868,-5.319823,-0.464398,-2.668400,4.994940,2.253915,0.693776,4.741156,-0.626289,5.950048,-3.556451,-3.647606,-2.427240,6.316160,-5.127878,0.787066,9.964419,-1.877015,-7.907424,9.285605,5.340696,8.951960,8.052991,0.724566,4.995439,2.281722,8.123403,2.782407,0.182848,-7.477453,-2.071113,-1.764246,4.703774,3.465295,3.946903,-2.554416,0.816104,2.847016,-3.981953,-4.192377,-0.179426,0.981629,2.337641,3.694600,-8.884653,-6.535524,8.717322,-3.714695,1.634057,6.540266,7.248447,-2.953076,9.505993,8.176089,-9.716676,6.761916,4.099922,5.820583,8.043688,-2.864478,-2.980720,-4.042151,3.837419,5.803290,-2.602006,2.113347,-8.008382,-7.043933,0.579403,1.177433,3.976083,-7.593964,-3.574004,-1.773839,-6.455707,6.683170,3.413383,3.403052,-7.427843,-0.350601,7.394887,-4.839690,0.970051,4.482125,0.202859,-8.401199,-8.440488,1.494324,-0.856873,-8.761463,-8.938202,-6.352575,-2.516677,-6.023484,-7.869996,6.580696,-2.359441,1.900678,8.474494,0.731005,5.794284,0.463498,-4.720723,-3.592801,-6.177232,-7.375133,-5.812253,4.856815,-0.845581,-0.515213,-2.379424,-6.305123,2.474634,-6.056758,-4.707581,4.777804,0.990909,0.043536,-4.787577,8.390805,0.068166,6.935378,-1.560685,-2.752031,9.058553,5.107872,-1.575983,-3.327283,7.653836,-7.105601,-3.134799,0.164433,0.929519,-0.659579,0.956959,-9.578420,3.928937,-2.560472,-6.391532,-8.118142,9.985758,7.997860,6.093110,-6.997499,-2.100506,-3.945611,-9.825808,3.630636,7.012949,0.006790,4.717437,5.966994,-1.558347,-7.722435,-3.198382,-8.376684,-1.144357,2.247089,7.091696,-6.024718,8.804432,3.436166,-7.575598,8.303920,-0.205369,-2.918372,-3.720348,-1.413967,-5.883464,-9.713723,3.234056,-3.726198,-5.403656,2.842270,6.885449,-0.194632,-7.281203,5.832540,-9.381415,-6.202984,1.859508,-4.907219,-1.548000,-7.066962,0.473131,2.687980,3.084736,-7.759559,-0.269207,-4.898763,2.327477,-8.504430,-4.992376,-4.044067,-4.524267,6.104796,-2.823746,0.607589,-6.881501,9.357327,-2.382212,-5.531671,-0.376309,-0.558756,-5.985456,7.939267,2.805039,1.424101,3.548928,-2.092052,6.712163,1.972344,1.158774,-8.130883,1.920331,4.265659,9.547604,3.971627,-6.757249,-5.993944,-7.444582,-1.764143,0.282474,3.097502,6.156891,-5.799197,0.288294,-1.873094,-9.692387,-3.516931,-4.426342,-0.129645,8.706717,-1.310449,2.170525,-2.868187,-9.031468,7.062096,5.065081,-6.628097,-8.522332,2.899702,-5.493457,-8.022405,-1.399019,-5.279586,-5.256123,-7.835095,1.447632,5.017134,8.673874,-1.284433,-1.512504,2.589462,0.598038,-7.092711,-5.145445,6.789794,-4.186894,-1.372475,3.608843,8.333919,8.722962,5.999702,-5.574776,6.244585,5.411782,7.327724,2.831736,1.512386,-9.262613,-7.895754,2.421057,-2.281790,8.573515,-0.236127,3.831496,-5.302995,-6.838466,7.103582,-0.186488,-9.641624,8.996714,2.718537,4.843986,3.717760,-3.383263,-4.170261,8.869831,3.089060,4.731436,1.020515,-8.530051,7.845314,-5.642914,9.276911,7.923721,-1.371419,-4.292259,8.394231,-9.160058,3.224288,-9.495177,-4.864381,-3.414325,-9.663642,6.439686,5.291789,2.923470,-8.867014,4.626330,-8.445112,-2.491696,1.295848,-8.836608,-1.172132,2.247166,-0.324322,6.004083,-7.489257,-7.206010,-2.785661,-8.087126,3.119291,-3.337694,6.625701,-5.312897,6.728137,-6.967139,3.465723,6.700159,1.975764,4.853630,2.807796,-8.482423,1.085462,-9.130495,4.946926,0.608807,6.702311,-4.819117,9.667966,-1.738037,9.934467,-2.868238,-8.635384,-0.051038,-8.763035,2.656832,6.267362,1.784153,-3.638565,-9.919373,2.216338,5.917382,4.918070,0.938142,-8.910721,8.401762,7.981950,-7.086506,-6.635415,0.870303,-2.673695,-9.581896,7.681144,-6.040335,9.464176,1.735017,-0.685290,5.888762,-6.721453,3.496883,5.419736,1.998663,-2.309341,-2.865411,-6.337576,6.837658,-3.190821,-5.910530,-5.772978,1.394234,4.113863,-9.006722,4.713912,-7.098468,-8.286594,-6.480126,-7.492657,-5.200240,9.121063,4.116892,0.535255,6.354212,-4.145967,2.481204,-8.655841,8.861887,3.666721,-4.421758,6.891455,-3.470755,-6.022074,8.494160,-1.320670,9.462132,-3.340891,-2.773948,3.804053,4.064899,1.763459,-4.965379,-8.866763,-6.786507,4.294012,-9.468690,5.579874,4.379188,-5.238451,-2.280019,-4.100273,-4.905163,6.703198,-6.992816,-3.662108,-7.156921,-8.464475,-5.943286,-1.983748,-8.307301,5.376781,9.570417,-1.968521,-1.053064,2.727604,7.520703,-4.149427,0.351801,-7.714544,-3.657866,5.818153,6.696999,-7.735698,-1.818508,-2.047619,-6.071563,-8.503415,-2.895014,-4.849372,7.873570,2.040277,-9.463563,-4.957334,6.753190,1.193142,-8.837261,5.943305,4.369990,3.253628,-1.961546,-1.393041,9.833704,-5.816597,0.724852,-7.645148,7.880915,-1.363516,7.586528,3.504342,2.223179,-1.644689,1.978050,3.719774,2.191398,2.625351,-4.126592,1.922466,-4.326827,6.130142,-5.311471,-8.335370,-9.302816,4.796561,8.804755,-1.253964,-8.824141,-2.059552,-9.749237,-5.372718,-5.677609,-9.112828,1.387388,-3.470345,0.749408,-7.753076,9.757862,9.880256,1.650826,8.370522,5.731264,5.982465,7.366508,-3.338330,-1.330482,0.235534,-9.726825,9.675324,7.910693,9.181176,-3.059877,8.112028,-4.257245,4.937965,3.469777,-4.499944,-0.751631,-5.200272,-6.241228,-8.195209,4.962617,8.218067,3.145643,-0.205369,0.873357,0.816018,6.319131,2.786906,-0.556142,5.173106,-6.459235,-7.574475,1.220699,-7.161080,1.638100,-9.169835,-1.713906,-7.224793,9.926877,1.518354,-6.965255,-2.079930,0.582512,1.005722,-8.087050,8.679182,8.987186,3.298633,3.697501,-9.168202,-4.315020,4.972388,-4.426786,-9.205083,-2.014905,-7.527650,2.925621,-6.249760,1.724117,-3.110442,-4.459422,-6.822099,2.190907,5.837737,3.656356,-7.576998,-7.880386,-4.527089,7.017804,-6.180916,-0.848165,9.136728,4.084513,-8.503104,5.794887,-2.152723,0.577912,6.650694,8.923829,0.371314,-6.597213,-3.367436,4.492985,-9.945785,-8.570445,9.496028,5.982422,-1.943592,-5.564891,8.221724,0.719716,-4.339140,-1.373336,3.321560,-7.140599,-1.541528,-3.832775,3.687571,-1.613562,0.997030,8.589196,1.661931,0.465750,0.802396,8.345293,4.350214,3.872934,7.842102,-9.272602,2.718988,8.639981,5.205643,-1.303314,2.816227,-9.985991,1.183414,2.154968,0.713340,-2.462686,1.147930,5.706097,-3.183300,-9.561948,7.135615,0.377296,3.558930,-2.677673,-9.515387,1.499756,9.244387,-5.150463,8.479583,-8.352309,-7.321893,-2.819180,-9.145309,5.238576,-0.230497,-4.108814,-1.764384,-7.575580,-9.581083,-3.734049,5.899751,-0.298138,-1.867696,-4.942188,0.143401,-7.950284,4.940494,3.229723,-4.970800,8.263644,-0.252113,-5.347927,2.638781,-5.521977,-9.085955,-9.665936,-8.673650,-6.644420,-9.901148,3.451218,3.602817,5.461408,-8.930261,-6.980335,9.165939,4.068679,5.548921,-5.623191,-6.811056,-6.994499,-5.790834,-5.933928,-5.258519,8.320832,1.457641,-9.532115,-9.755618,-1.895515,-4.575544,7.118699,-8.823065,2.758861,6.406101,-7.210325,-0.151629,-0.921189,6.970277,8.419643,8.640964,-9.112286,7.799196,-1.627579,0.472171,-8.155352,0.564035,8.649608,-6.315561,-4.250972,0.112249,5.892652,9.521612,-7.214559,0.173161,-8.955764,-8.779312,5.632360,7.004071,1.483960,-0.950016,-8.205462,9.308271,9.748941,-9.139489,0.205473,-9.598526,6.324842,-4.315389,4.052039,-6.494993,1.651359,-4.128019,-4.812116,-0.318254,-8.441068,-8.546237,-5.511136,8.045934,2.510784,2.251629,3.343947,-1.721875,-2.442330,-2.800112,-9.317944,5.026904,2.716901,-2.935717,-7.973434,6.449312,-2.530755,1.865878,5.134024,-7.669566,9.475828,-0.726072,-7.362667,6.054239,3.814283,-5.725543,-9.157328,1.087867,1.807901,-5.254285,-3.707903,3.171630,2.606703,-5.064366,6.611399,0.066890,-6.853818,2.940152,-6.168822,9.291902,-4.949383,4.649067,-5.492006,-9.707034,4.917126,0.248382,-5.885092,-4.815670,5.779897,-1.963693,0.793017,1.388567,1.025911,-3.108837,-0.991581,-4.949428,1.490826,3.625522,-6.951334,-6.731442,-1.802513,-7.240665,-1.252894,-6.612874,4.608978,-4.722422,6.250294,-7.459841,-6.676027,-1.150618,5.189871,7.373998,9.317505,-1.090947,-4.319598,2.840610,-7.017868,5.907144,-2.748593,-2.208004,-4.029751,-3.229108,3.237644,3.487482,-5.986411,-2.418179,-4.709266,-6.824879,-4.860033,9.400021,0.272229,-1.195028,-4.272808,-2.457337,2.137734,-8.437714,0.886670,3.541604,-5.465741,-4.420218,7.851018,-6.305609,-8.199109,4.238834,8.213191,3.396282,3.413628,-7.236443,9.231446,-8.160480,1.902662,3.238140,5.242404,9.393659,2.196821,-8.112431,-2.245787,-6.928272,-8.064684,-5.457751,-9.663958,-2.562026,3.519541,-9.695420,-3.328394,5.193262,4.076327,-6.460177,-6.987654,-6.313177,-2.225537,-8.458230,0.666918,7.945474,-9.932870,2.340802,-8.567426,-5.466816,-7.941286,-6.733157,2.767395,3.756247,-8.138571,3.357390,6.901509,-5.817226,5.987961], dtype = "float32")#candidate|7127|(2145,)|const|float32
const_7128 = relay.const(1.165525, dtype = "float64")#candidate|7128|()|const|float64
var_7129 = relay.var("var_7129", dtype = "float64", shape = (1512,))#candidate|7129|(1512,)|var|float64
call_7125 = relay.TupleGetItem(func_1829_call(relay.reshape(const_7126.astype('float32'), [1, 11, 13]), relay.reshape(const_7127.astype('float32'), [15, 11, 13]), relay.reshape(const_7128.astype('float64'), []), relay.reshape(var_7129.astype('float64'), [1512,]), ), 5)
call_7130 = relay.TupleGetItem(func_1834_call(relay.reshape(const_7126.astype('float32'), [1, 11, 13]), relay.reshape(const_7127.astype('float32'), [15, 11, 13]), relay.reshape(const_7128.astype('float64'), []), relay.reshape(var_7129.astype('float64'), [1512,]), ), 5)
func_4159_call = mod.get_global_var('func_4159')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_7165 = relay.TupleGetItem(func_4159_call(), 0)
call_7166 = relay.TupleGetItem(func_4161_call(), 0)
output = relay.Tuple([uop_7122,call_7125,const_7126,const_7127,const_7128,var_7129,call_7165,])
output2 = relay.Tuple([uop_7124,call_7130,const_7126,const_7127,const_7128,var_7129,call_7166,])
func_7176 = relay.Function([var_7129,], output)
mod['func_7176'] = func_7176
mod = relay.transform.InferType()(mod)
mutated_mod['func_7176'] = func_7176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7177 = relay.var("var_7177", dtype = "float64", shape = (1512,))#candidate|7177|(1512,)|var|float64
func_7176_call = mutated_mod.get_global_var('func_7176')
call_7178 = func_7176_call(var_7177)
output = call_7178
func_7179 = relay.Function([var_7177], output)
mutated_mod['func_7179'] = func_7179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5039_call = mod.get_global_var('func_5039')
func_5040_call = mutated_mod.get_global_var('func_5040')
call_7186 = relay.TupleGetItem(func_5039_call(), 0)
call_7187 = relay.TupleGetItem(func_5040_call(), 0)
output = relay.Tuple([call_7186,])
output2 = relay.Tuple([call_7187,])
func_7190 = relay.Function([], output)
mod['func_7190'] = func_7190
mod = relay.transform.InferType()(mod)
mutated_mod['func_7190'] = func_7190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7190_call = mutated_mod.get_global_var('func_7190')
call_7191 = func_7190_call()
output = call_7191
func_7192 = relay.Function([], output)
mutated_mod['func_7192'] = func_7192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6120_call = mod.get_global_var('func_6120')
func_6121_call = mutated_mod.get_global_var('func_6121')
call_7261 = func_6120_call()
call_7262 = func_6120_call()
output = call_7261
output2 = call_7262
func_7265 = relay.Function([], output)
mod['func_7265'] = func_7265
mod = relay.transform.InferType()(mod)
mutated_mod['func_7265'] = func_7265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7265_call = mutated_mod.get_global_var('func_7265')
call_7266 = func_7265_call()
output = call_7266
func_7267 = relay.Function([], output)
mutated_mod['func_7267'] = func_7267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4853_call = mod.get_global_var('func_4853')
func_4854_call = mutated_mod.get_global_var('func_4854')
call_7293 = relay.TupleGetItem(func_4853_call(), 0)
call_7294 = relay.TupleGetItem(func_4854_call(), 0)
func_2933_call = mod.get_global_var('func_2933')
func_2937_call = mutated_mod.get_global_var('func_2937')
const_7306 = relay.const([4,-9,-9,-2,8,7,5,-3,5,-9,-10,4,6,-1,7,-9,5,6,2,5,7,-3,1,-1,8,3,-6,8,-10,-5,4,8,1,3,3,-5,-10,-5,4,7,3,10,8,-3,6,5,-1,-9,-6,8,-10,2,-9,3,2,-5,-2,6,2,8,7,-10,-6,-3,-1,4,3,-3,4,8,-6,10,-8,7,8,-10,9,-3,6,7,-6,9,8,2,8,5,2,3,4,10,5,6,7,-9,5,10,-7,-1,-3,-7,4,4,-9,-6,6,4,-5,7,2,-6,-4,-8,-7,7,3,-8,6,-3,-10,-10,6,-10,-6,4,5,-5,-6,1,4,-3,2,6,-3,2,9,-10,8,5,-10,-2,-8,-3,9,-10,-2,10,2,1,-4,-1,-7,-7,2,6,2,7,4,6,8,4,7,-3,9,-6,-8,-5,9,-9,3,-5,5,5,-5,-1,-5,2,-1,2,-10,-3,7,-5,-10,-9,10,-8,-7,-2,-5,7,2,-1,6,-2,-2,-9,3,-5,-6,5,-10,1,-9,-4,-10,4,2,-4,1,-7,1,1,-9,8,-5,-5,8,-6,1,-1,1,-2,1,1,1,4,-5,-9,-5,4,-10,7,-5,6,3,6,3,6,1,7,-9,-8,-9,-1,-2,4,-5,3,-4,-5,-6,-10,8,-6,-5,-3,-5,-9,5,-9,-8,-2,-4,3,2,4,1,-1,-9,-8,-4,-9,1,5,7,-5,-7,-7,2,10,10,-5,9,9,-5,-2,-7,9,-8,-4,-8,-1,-7,-7,-10,2,2,-2,5,9,-8,10,2,1,-4,7,5,-7,8,-1,5,-8,-1,8,-2,6,7,-5,-5,-3,3,-1,7,3,3,4,7,5,-4,6,9,8,-7,-9,1,-1,9,5,1,-3,-1,-4,-1,-6,3,1,-3,-10,-1,-5,10,-7,2,-8,9,9,8,-8,-4,4,-8,1,-5,6,-9,-10,-8,9,10,-5,9,-9,-9,6,3,3,8,-5,-5,10,-1,-7,7,1,3,8,-1,-1,-6,-6,-8,10,-4,-8,3,7,8,5,9,-5,-3,6,-8,4,5,-2,-10,-8,7,-5,6,6,-7,-9,8,-1,-5,-3,-6,-8,7,-4,4,3,-10,2,2,9,-1,-6,-4,-8,-5,-5,-7,4,5,-3,1,-8,6,-10,10,-8,10,9,-2,-3,7,-2,1,8,-5,4,-9,-9,-2,3,-8,4,6,2,-8,7,-4,-10,4,-2,-1,4,-9,-4,4,5,-8,-2,10,-2,-10,4,5,-3,-3,7,3,1,6,3,3,-2,6,-5,7,-7,-4,2,-6,-10,2,-1,9,-7,9,5,-9,-3,8,-1,5,3,-8,9,-2,3,8,-10,-7,-2,-8,-10,-3,-2,-3,7,1,-7,4,3,7,-1,1,2,10,-6,-10,-7,-1,5,2,-2,-1,-3,5,1,3,4,5,2,9,-8,-2,3,4,7,-1,8,-8,-5,9,2,9,-6,2,-10,3,2,-2,1,5,1,-7,-8,-2,-5,-8,-2], dtype = "int32")#candidate|7306|(576,)|const|int32
call_7305 = relay.TupleGetItem(func_2933_call(relay.reshape(const_7306.astype('int32'), [9, 8, 8]), relay.reshape(const_7306.astype('int32'), [9, 8, 8]), ), 0)
call_7307 = relay.TupleGetItem(func_2937_call(relay.reshape(const_7306.astype('int32'), [9, 8, 8]), relay.reshape(const_7306.astype('int32'), [9, 8, 8]), ), 0)
output = relay.Tuple([call_7293,call_7305,const_7306,])
output2 = relay.Tuple([call_7294,call_7307,const_7306,])
func_7337 = relay.Function([], output)
mod['func_7337'] = func_7337
mod = relay.transform.InferType()(mod)
output = func_7337()
func_7338 = relay.Function([], output)
mutated_mod['func_7338'] = func_7338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5278_call = mod.get_global_var('func_5278')
func_5280_call = mutated_mod.get_global_var('func_5280')
call_7355 = relay.TupleGetItem(func_5278_call(), 0)
call_7356 = relay.TupleGetItem(func_5280_call(), 0)
func_5776_call = mod.get_global_var('func_5776')
func_5778_call = mutated_mod.get_global_var('func_5778')
call_7367 = relay.TupleGetItem(func_5776_call(), 0)
call_7368 = relay.TupleGetItem(func_5778_call(), 0)
output = relay.Tuple([call_7355,call_7367,])
output2 = relay.Tuple([call_7356,call_7368,])
func_7383 = relay.Function([], output)
mod['func_7383'] = func_7383
mod = relay.transform.InferType()(mod)
mutated_mod['func_7383'] = func_7383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7383_call = mutated_mod.get_global_var('func_7383')
call_7384 = func_7383_call()
output = call_7384
func_7385 = relay.Function([], output)
mutated_mod['func_7385'] = func_7385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7425 = relay.var("var_7425", dtype = "float64", shape = (14, 10, 6))#candidate|7425|(14, 10, 6)|var|float64
var_7426 = relay.var("var_7426", dtype = "float64", shape = (14, 10, 6))#candidate|7426|(14, 10, 6)|var|float64
bop_7427 = relay.less_equal(var_7425.astype('bool'), relay.reshape(var_7426.astype('bool'), relay.shape_of(var_7425))) # shape=(14, 10, 6)
output = bop_7427
output2 = bop_7427
func_7430 = relay.Function([var_7425,var_7426,], output)
mod['func_7430'] = func_7430
mod = relay.transform.InferType()(mod)
mutated_mod['func_7430'] = func_7430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7430_call = mutated_mod.get_global_var('func_7430')
var_7432 = relay.var("var_7432", dtype = "float64", shape = (14, 10, 6))#candidate|7432|(14, 10, 6)|var|float64
var_7433 = relay.var("var_7433", dtype = "float64", shape = (14, 10, 6))#candidate|7433|(14, 10, 6)|var|float64
call_7431 = func_7430_call(var_7432,var_7433,)
output = call_7431
func_7434 = relay.Function([var_7432,var_7433,], output)
mutated_mod['func_7434'] = func_7434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2302_call = mod.get_global_var('func_2302')
func_2304_call = mutated_mod.get_global_var('func_2304')
call_7541 = relay.TupleGetItem(func_2302_call(), 0)
call_7542 = relay.TupleGetItem(func_2304_call(), 0)
var_7547 = relay.var("var_7547", dtype = "float32", shape = (12, 3, 7))#candidate|7547|(12, 3, 7)|var|float32
bop_7548 = relay.bitwise_or(call_7541.astype('int16'), var_7547.astype('int16')) # shape=(12, 3, 7)
bop_7551 = relay.bitwise_or(call_7542.astype('int16'), var_7547.astype('int16')) # shape=(12, 3, 7)
output = bop_7548
output2 = bop_7551
F = relay.Function([var_7547,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7547,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_3196(%var_3159: Tensor[(12, 13, 7), float32]) -> (Tensor[(12, 13, 7), bool], Tensor[(12, 1, 7), float64]) {
  %0 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
  %1 = cast(%0, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
  %2 = cast(%var_3159, dtype="bool") /* ty=Tensor[(12, 13, 7), bool] */;
  %3 = equal(%1, %2) /* ty=Tensor[(12, 13, 7), bool] */;
  %4 = cast(%0, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
  %5 = cast(%3, dtype="bool") /* ty=Tensor[(12, 13, 7), bool] */;
  %6 = cast(%0, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
  %7 = greater(%4, %5) /* ty=Tensor[(12, 13, 7), bool] */;
  %8 = sinh(%6) /* ty=Tensor[(12, 1, 7), float64] */;
  (%7, %8)
}

def @func_4041() -> Tensor[(1512), float64] {
  %9 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %10 = %9.2;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(1), int32] */;
  %13 = cast(%10, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?), float64] */;
  floor_mod(%13, %14) /* ty=Tensor[(1512), float64] */
}

def @func_2831(%var_2823: Tensor[(12, 15, 7), float64]) -> Tensor[(12, 15, 7), int16] {
  %15 = @func_2251() /* ty=Tensor[(12, 1, 7), float64] */;
  %16 = cast(%15, dtype="int16") /* ty=Tensor[(12, 1, 7), int16] */;
  %17 = cast(%var_2823, dtype="int16") /* ty=Tensor[(12, 15, 7), int16] */;
  subtract(%16, %17) /* ty=Tensor[(12, 15, 7), int16] */
}

def @func_2998() -> (Tensor[(637), int32], Tensor[(12, 1, 7), float32]) {
  %18 = @func_2728() /* ty=(Tensor[(637), int32],) */;
  %19 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %20 = %18.0;
  %21 = %19.0;
  (%20, %21)
}

def @func_7265() -> Tensor[(12, 1, 7), float64] {
  @func_6120() /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_5252() -> (Tensor[(3, 84), float32],) {
  %22 = @func_4853() /* ty=(Tensor[(3, 84), float32],) */;
  %23 = %22.0;
  (%23,)
}

def @func_7337() -> (Tensor[(3, 84), float32], Tensor[(9, 8, 8), int32], Tensor[(576), int32]) {
  %24 = @func_4853() /* ty=(Tensor[(3, 84), float32],) */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(576), int32] */, dtype="int32") /* ty=Tensor[(576), int32] */;
  %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(576), int32] */, dtype="int32") /* ty=Tensor[(576), int32] */;
  %27 = reshape(%25, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), int32] */;
  %28 = reshape(%26, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), int32] */;
  %29 = @func_2933(%27, %28) /* ty=(Tensor[(9, 8, 8), int32], Tensor[(12, 1, 7), float32], Tensor[(504), float32]) */;
  %30 = %24.0;
  %31 = %29.0;
  (%30, %31, meta[relay.Constant][1] /* ty=Tensor[(576), int32] */)
}

def @func_5659(%var_5649: Tensor[(252), float32]) -> (Tensor[(12, 14, 7), uint32], Tensor[(12, ?, 7), bool], Tensor[(12, 3, 7), int8], Tensor[(252), float32], Tensor[(6, 196), float32]) {
  %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 196), float64] */, dtype="float64") /* ty=Tensor[(6, 196), float64] */;
  %33 = reshape(%32, newshape=[12, 14, 7]) /* ty=Tensor[(12, 14, 7), float64] */;
  %34 = @func_4809(%33) /* ty=(Tensor[(12, 14, 7), uint32],) */;
  %35 = @func_2212() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %36 = %35.0;
  %37 = @func_4897() /* ty=Tensor[(12, 1, 7), float32] */;
  %38 = cast(%37, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
  %39 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%36, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %42 = cast(%var_5649, dtype="float32") /* ty=Tensor[(252), float32] */;
  %43 = reshape(%42, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
  %44 = @func_3741(%43) /* ty=(Tensor[(12, 3, 7), int8], Tensor[(637), int32]) */;
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 196), float64] */, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
  %46 = %34.0;
  %47 = not_equal(%40, %41) /* ty=Tensor[(12, ?, 7), bool] */;
  %48 = %44.0;
  %49 = sin(%45) /* ty=Tensor[(6, 196), float32] */;
  (%46, %47, %48, %var_5649, %49)
}

def @func_6192() -> Tensor[(12, 1, 7), float32] {
  %50 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
  %50.1
}

def @func_4809(%var_4803: Tensor[(12, 14, 7), float64]) -> (Tensor[(12, 14, 7), uint32],) {
  %51 = @func_3021() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %52 = %51.0;
  %53 = cast(%52, dtype="uint32") /* ty=Tensor[(12, 1, 7), uint32] */;
  %54 = cast(%var_4803, dtype="uint32") /* ty=Tensor[(12, 14, 7), uint32] */;
  %55 = logical_xor(%53, %54) /* ty=Tensor[(12, 14, 7), uint32] */;
  (%55,)
}

def @func_4644() -> Tensor[(637), int32] {
  @func_3546() /* ty=Tensor[(637), int32] */
}

def @func_2345() -> (Tensor[(12, 14, 9), bool],) {
  %56 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %57 = %56.1;
  (%57,)
}

def @func_3954(%var_3801: Tensor[(12, 15, 7), float32], %var_3814: Tensor[(12, 15, 7), bool], %var_3855: Tensor[(143), float32], %var_3856: Tensor[(2145), float32], %var_3857: float64, %var_3865: Tensor[(252), float32], %var_3867: Tensor[(12, 14, 7), float32], %var_3893: Tensor[(150, 2), uint64]) -> (Tensor[(12, 15, 7), uint64], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(12, 14, 7), bool], Tensor[(256, 1), uint64], Tensor[(12, ?, 7), float32], Tensor[(6, 10, 5), uint64], Tensor[(150, 2), uint64], Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) {
  %58 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
  %59 = cast(%58, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
  %60 = cast(%var_3801, dtype="bool") /* ty=Tensor[(12, 15, 7), bool] */;
  %61 = greater_equal(%59, %60) /* ty=Tensor[(12, 15, 7), bool] */;
  %62 = cast(%61, dtype="bool") /* ty=Tensor[(12, 15, 7), bool] */;
  %63 = cast(%58, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
  %64 = less(%62, %63) /* ty=Tensor[(12, 15, 7), bool] */;
  %65 = cast(%var_3814, dtype="uint64") /* ty=Tensor[(12, 15, 7), uint64] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%64, dtype="uint64") /* ty=Tensor[(12, 15, 7), uint64] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %69 = cast(%var_3855, dtype="float32") /* ty=Tensor[(143), float32] */;
  %70 = cast(%var_3856, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %71 = cast(%var_3857, dtype="float64") /* ty=float64 */;
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %73 = reshape(%69, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
  %74 = reshape(%70, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), float32] */;
  %75 = reshape(%71, newshape=[]) /* ty=float64 */;
  %76 = reshape(%72, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %77 = @func_1829(%73, %74, %75, %76) /* ty=(Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) */;
  %78 = cast(meta[relay.Constant][4] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %79 = cast(%var_3865, dtype="float32") /* ty=Tensor[(252), float32] */;
  %80 = reshape(%78, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), float32] */;
  %81 = reshape(%79, newshape=[126, 2]) /* ty=Tensor[(126, 2), float32] */;
  %82 = @func_3401(%80, %81) /* ty=(Tensor[(12, 11, 7), uint32], Tensor[(12, 11, 7), float32], Tensor[(126, 2), float32], Tensor[(12, 4, 4), float64]) */;
  %83 = cast(%58, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
  %84 = cast(%var_3867, dtype="bool") /* ty=Tensor[(12, 14, 7), bool] */;
  %85 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %86 = cast(%58, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
  %87 = sin(%86) /* ty=Tensor[(12, 1, 7), float32] */;
  %88 = cast(%87, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
  %89 = cosh(%88) /* ty=Tensor[(12, 1, 7), float32] */;
  %90 = cast(%87, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
  %91 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%89, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %94 = cast(%var_3893, dtype="uint64") /* ty=Tensor[(150, 2), uint64] */;
  %95 = reshape(%94, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), uint64] */;
  %96 = @func_2325(%95) /* ty=(Tensor[(6, 10, 5), uint64],) */;
  %97 = cast(%87, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
  %98 = maximum(%67, %68) /* ty=Tensor[(12, 15, 7), uint64] */;
  %99 = %77.6;
  %100 = %82.2;
  %101 = greater_equal(%83, %84) /* ty=Tensor[(12, 14, 7), bool] */;
  %102 = %85.4;
  %103 = subtract(%92, %93) /* ty=Tensor[(12, ?, 7), float32] */;
  %104 = %96.0;
  %105 = exp(%97) /* ty=Tensor[(12, 1, 7), float32] */;
  %106 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
  (%98, %99, %var_3855, %var_3856, %var_3857, meta[relay.Constant][3] /* ty=Tensor[(1512), float64] */, %100, meta[relay.Constant][4] /* ty=Tensor[(924), float32] */, %var_3865, %101, %102, %103, %104, %var_3893, %105, %106)
}

def @func_1278(%var_1268: Tensor[(6, 12, 4), float32], %var_1269: Tensor[(6, 12, 4), float32]) -> (Tensor[(6, 12, 4), float32],) {
  %107 = cast(%var_1269, dtype="float32") /* ty=Tensor[(6, 12, 4), float32] */;
  %108 = shape_of(%var_1268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%var_1268, dtype="float32") /* ty=Tensor[(6, 12, 4), float32] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %111 = minimum(%109, %110) /* ty=Tensor[(6, 12, 4), float32] */;
  (%111,)
}

def @func_5433(%var_5417: Tensor[(2, 9, 14), uint8]) -> (Tensor[(2, 9, 14), uint8], Tensor[(2, 9, 14), float32], Tensor[(2, 9, 14), float32]) {
  %112 = cast(%var_5417, dtype="uint8") /* ty=Tensor[(2, 9, 14), uint8] */;
  %113 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(2, 9, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 9, 14), uint8] */, dtype="uint8") /* ty=Tensor[(2, 9, 14), uint8] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %116 = cast(%var_5417, dtype="float32") /* ty=Tensor[(2, 9, 14), float32] */;
  %117 = cast(%var_5417, dtype="float32") /* ty=Tensor[(2, 9, 14), float32] */;
  %118 = minimum(%114, %115) /* ty=Tensor[(2, 9, 14), uint8] */;
  %119 = sinh(%116) /* ty=Tensor[(2, 9, 14), float32] */;
  %120 = cosh(%117) /* ty=Tensor[(2, 9, 14), float32] */;
  (%118, %119, %120)
}

def @func_863(%var_854: Tensor[(5, 3, 5), float64]) -> Tensor[(5, 3, 5), bool] {
  %121 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 3, 5), float64] */, dtype="bool") /* ty=Tensor[(5, 3, 5), bool] */;
  %122 = shape_of(%var_854, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_854, dtype="bool") /* ty=Tensor[(5, 3, 5), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%123, %124) /* ty=Tensor[(5, 3, 5), bool] */
}

def @func_3078(%var_3068: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), int64],) {
  %125 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
  %126 = %125.1;
  %127 = cast(%126, dtype="int64") /* ty=Tensor[(12, 1, 7), int64] */;
  %128 = cast(%var_3068, dtype="int64") /* ty=Tensor[(12, 3, 7), int64] */;
  %129 = maximum(%127, %128) /* ty=Tensor[(12, 3, 7), int64] */;
  (%129,)
}

def @func_5122() -> Tensor[(637), bool] {
  %130 = @func_2728() /* ty=(Tensor[(637), int32],) */;
  %131 = %130.0;
  %132 = cast(meta[relay.Constant][7] /* ty=Tensor[(637), int32] */, dtype="float32") /* ty=Tensor[(637), float32] */;
  %133 = shape_of(%131, dtype="int32") /* ty=Tensor[(1), int32] */;
  %134 = cast(%131, dtype="float32") /* ty=Tensor[(637), float32] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?), float32] */;
  %136 = mod(%134, %135) /* ty=Tensor[(637), float32] */;
  %137 = cast(%136, dtype="bool") /* ty=Tensor[(637), bool] */;
  %138 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(637), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %139 = cast(meta[relay.Constant][7] /* ty=Tensor[(637), int32] */, dtype="bool") /* ty=Tensor[(637), bool] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?), bool] */;
  not_equal(%139, %140) /* ty=Tensor[(637), bool] */
}

def @func_4506() -> Tensor[(12, 1, 7), float32] {
  @func_3232() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_4331() -> (Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool]) {
  %141 = @func_3029() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %142 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
  %143 = %141.0;
  (%142, %143)
}

def @func_3401(%var_3346: Tensor[(12, 11, 7), float32], %var_3363: Tensor[(126, 2), float32]) -> (Tensor[(12, 11, 7), uint32], Tensor[(12, 11, 7), float32], Tensor[(126, 2), float32], Tensor[(12, 4, 4), float64]) {
  %144 = @func_3052() /* ty=Tensor[(12, 1, 7), float32] */;
  %145 = cast(%144, dtype="uint32") /* ty=Tensor[(12, 1, 7), uint32] */;
  %146 = cast(%var_3346, dtype="uint32") /* ty=Tensor[(12, 11, 7), uint32] */;
  %147 = bitwise_xor(%145, %146) /* ty=Tensor[(12, 11, 7), uint32] */;
  %148 = cast(%147, dtype="float64") /* ty=Tensor[(12, 11, 7), float64] */;
  %149 = cast(%var_3346, dtype="int8") /* ty=Tensor[(12, 11, 7), int8] */;
  %150 = reshape(%148, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), float64] */;
  %151 = reshape(%149, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), int8] */;
  %152 = cast(%var_3363, dtype="float32") /* ty=Tensor[(126, 2), float32] */;
  %153 = reshape(%152, newshape=[252]) /* ty=Tensor[(252), float32] */;
  %154 = @func_3112(%153) /* ty=(Tensor[(12, 1, 7), float64], Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 4, 4), uint16], uint16) */;
  %155 = %154.3;
  %156 = cast(%155, dtype="float32") /* ty=Tensor[(12, 4, 4), float32] */;
  %157 = log2(%156) /* ty=Tensor[(12, 4, 4), float32] */;
  %158 = cast(%157, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
  %159 = @func_3323(%150, %151) /* ty=Tensor[(12, 11, 7), float32] */;
  %160 = rsqrt(%158) /* ty=Tensor[(12, 4, 4), float64] */;
  (%147, %159, %var_3363, %160)
}

def @func_7430(%var_7425: Tensor[(14, 10, 6), float64], %var_7426: Tensor[(14, 10, 6), float64]) -> Tensor[(14, 10, 6), bool] {
  %161 = cast(%var_7426, dtype="bool") /* ty=Tensor[(14, 10, 6), bool] */;
  %162 = shape_of(%var_7425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%var_7425, dtype="bool") /* ty=Tensor[(14, 10, 6), bool] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%163, %164) /* ty=Tensor[(14, 10, 6), bool] */
}

def @func_7176(%var_7129: Tensor[(1512), float64]) -> (Tensor[(12, 1, 7), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(12, 1, 7), float32]) {
  %165 = @func_5278() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %166 = %165.0;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
  %168 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 143), float32] */, dtype="float32") /* ty=Tensor[(1, 143), float32] */;
  %169 = cast(meta[relay.Constant][9] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %170 = cast(1.16552f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %171 = cast(%var_7129, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %172 = reshape(%168, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
  %173 = reshape(%169, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), float32] */;
  %174 = reshape(%170, newshape=[]) /* ty=float64 */;
  %175 = reshape(%171, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %176 = @func_1829(%172, %173, %174, %175) /* ty=(Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) */;
  %177 = @func_4159() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) */;
  %178 = log(%167) /* ty=Tensor[(12, 1, 7), float64] */;
  %179 = %176.5;
  %180 = %177.0;
  (%178, %179, meta[relay.Constant][8] /* ty=Tensor[(1, 143), float32] */, meta[relay.Constant][9] /* ty=Tensor[(2145), float32] */, 1.16552f64 /* ty=float64 */, %var_7129, %180)
}

def @func_6120() -> Tensor[(12, 1, 7), float64] {
  %181 = @func_4159() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) */;
  %181.1
}

def @func_2968(%var_2955: Tensor[(637), int32]) -> (Tensor[(637), float32], float64, Tensor[(1, 143), float32], Tensor[(2145), float32], float64, Tensor[(378, 4), float64]) {
  %182 = @func_2728() /* ty=(Tensor[(637), int32],) */;
  %183 = %182.0;
  %184 = cast(%var_2955, dtype="float32") /* ty=Tensor[(637), float32] */;
  %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(1), int32] */;
  %186 = cast(%183, dtype="float32") /* ty=Tensor[(637), float32] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?), float32] */;
  %188 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 143), float32] */, dtype="float32") /* ty=Tensor[(1, 143), float32] */;
  %189 = cast(meta[relay.Constant][11] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %190 = cast(-3.31846f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %191 = cast(meta[relay.Constant][12] /* ty=Tensor[(378, 4), float64] */, dtype="float64") /* ty=Tensor[(378, 4), float64] */;
  %192 = reshape(%188, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
  %193 = reshape(%189, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), float32] */;
  %194 = reshape(%190, newshape=[]) /* ty=float64 */;
  %195 = reshape(%191, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %196 = @func_1829(%192, %193, %194, %195) /* ty=(Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) */;
  %197 = floor_mod(%186, %187) /* ty=Tensor[(637), float32] */;
  %198 = %196.2;
  (%197, %198, meta[relay.Constant][10] /* ty=Tensor[(1, 143), float32] */, meta[relay.Constant][11] /* ty=Tensor[(2145), float32] */, -3.31846f64 /* ty=float64 */, meta[relay.Constant][12] /* ty=Tensor[(378, 4), float64] */)
}

def @func_4838() -> (Tensor[(12, 14, 9), float64],) {
  %199 = @func_2345() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %200 = %199.0;
  %201 = cast(%200, dtype="float64") /* ty=Tensor[(12, 14, 9), float64] */;
  %202 = atanh(%201) /* ty=Tensor[(12, 14, 9), float64] */;
  (%202,)
}

def @func_6568(%var_6551: Tensor[(9, 10, 15), int32]) -> (Tensor[(9, 10, 15), bool], Tensor[(12, 1, 7), float32]) {
  %203 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 10, 15), int32] */, dtype="bool") /* ty=Tensor[(9, 10, 15), bool] */;
  %204 = shape_of(%var_6551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%var_6551, dtype="bool") /* ty=Tensor[(9, 10, 15), bool] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %207 = less(%205, %206) /* ty=Tensor[(9, 10, 15), bool] */;
  %208 = @func_4897() /* ty=Tensor[(12, 1, 7), float32] */;
  (%207, %208)
}

def @func_6345(%var_6276: Tensor[(252), float32], %var_6277: Tensor[(4, 64), uint64], %var_6295: Tensor[(1560), float64], %var_6309: Tensor[(154, 6), float32], %var_6311: Tensor[(2145), float32], %var_6323: float64, %var_6325: Tensor[(300), uint64]) -> (Tensor[(12, 14, 9), float64], Tensor[(12, 14, 9), float32], Tensor[(252), float32], Tensor[(4, 64), uint64], Tensor[(1560), float64], Tensor[(3, 84), float32], Tensor[(154, 6), float32], Tensor[(143), float32], Tensor[(2145), float32], Tensor[(13, 15, 8), float32], Tensor[(12, 1, 7), float64], Tensor[(1260), float32], float64, Tensor[(1176), float32], Tensor[(300), uint64]) {
  %209 = @func_5242() /* ty=(Tensor[(?, 15, 3), int32], Tensor[(12, 14, 9), float64], Tensor[(?, 15, 3), float64]) */;
  %210 = cast(%var_6276, dtype="float32") /* ty=Tensor[(252), float32] */;
  %211 = cast(%var_6277, dtype="uint64") /* ty=Tensor[(4, 64), uint64] */;
  %212 = reshape(%210, newshape=[252]) /* ty=Tensor[(252), float32] */;
  %213 = reshape(%211, newshape=[256]) /* ty=Tensor[(256), uint64] */;
  %214 = @func_3519(%212, %213) /* ty=(Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 14, 9), bool], Tensor[(12, 14, 9), float32], Tensor[(12, 14, 9), bool], Tensor[(256), uint64]) */;
  %215 = cast(%var_6309, dtype="float32") /* ty=Tensor[(154, 6), float32] */;
  %216 = cast(%var_6276, dtype="float32") /* ty=Tensor[(252), float32] */;
  %217 = cast(meta[relay.Constant][14] /* ty=Tensor[(143), float32] */, dtype="float32") /* ty=Tensor[(143), float32] */;
  %218 = cast(%var_6311, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %219 = reshape(%215, newshape=[924]) /* ty=Tensor[(924), float32] */;
  %220 = reshape(%216, newshape=[252]) /* ty=Tensor[(252), float32] */;
  %221 = reshape(%217, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %222 = reshape(%218, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %223 = @func_5408(%219, %220, %221, %222) /* ty=(Tensor[(12, 1, 7), float32], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(10, 14, 11), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(3, 84), float32]) */;
  %224 = cast(%var_6295, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %225 = reshape(%224, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), float64] */;
  %226 = @func_5545(%225) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(1540), float64], Tensor[(256), uint64]) */;
  %227 = %226.0;
  %228 = cast(%227, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
  %229 = cast(meta[relay.Constant][15] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %230 = cast(meta[relay.Constant][15] /* ty=Tensor[(1260), float32] */, dtype="bool") /* ty=Tensor[(1260), bool] */;
  %231 = cast(meta[relay.Constant][14] /* ty=Tensor[(143), float32] */, dtype="float32") /* ty=Tensor[(143), float32] */;
  %232 = cast(%var_6311, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %233 = cast(%var_6323, dtype="float64") /* ty=float64 */;
  %234 = %223.9;
  %235 = cast(%234, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %236 = cast(meta[relay.Constant][16] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %237 = cast(%var_6325, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %238 = reshape(%229, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float32] */;
  %239 = reshape(%230, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), bool] */;
  %240 = reshape(%231, newshape=[143]) /* ty=Tensor[(143), float32] */;
  %241 = reshape(%232, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %242 = reshape(%233, newshape=[]) /* ty=float64 */;
  %243 = reshape(%235, newshape=[252]) /* ty=Tensor[(252), float32] */;
  %244 = reshape(%236, newshape=[12, 14, 7]) /* ty=Tensor[(12, 14, 7), float32] */;
  %245 = reshape(%237, newshape=[150, 2]) /* ty=Tensor[(150, 2), uint64] */;
  %246 = @func_3954(%238, %239, %240, %241, %242, %243, %244, %245) /* ty=(Tensor[(12, 15, 7), uint64], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(12, 14, 7), bool], Tensor[(256, 1), uint64], Tensor[(12, ?, 7), float32], Tensor[(6, 10, 5), uint64], Tensor[(150, 2), uint64], Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) */;
  %247 = %209.1;
  %248 = %214.3;
  %249 = atan(%228) /* ty=Tensor[(13, 15, 8), float32] */;
  %250 = %246.15;
  (%247, %248, %var_6276, %var_6277, %var_6295, %234, %var_6309, meta[relay.Constant][14] /* ty=Tensor[(143), float32] */, %var_6311, %249, %250, meta[relay.Constant][15] /* ty=Tensor[(1260), float32] */, %var_6323, meta[relay.Constant][16] /* ty=Tensor[(1176), float32] */, %var_6325)
}

def @func_2080(%var_2066: Tensor[(7, 5, 13), float64]) -> Tensor[(7, 5, 13), float64] {
  %251 = cast(%var_2066, dtype="float64") /* ty=Tensor[(7, 5, 13), float64] */;
  acosh(%251) /* ty=Tensor[(7, 5, 13), float64] */
}

def @func_3021() -> (Tensor[(12, 1, 7), float64],) {
  %252 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %253 = %252.0;
  (%253,)
}

def @func_4411() -> (Tensor[(12, 1, 7), float32],) {
  %254 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
  (%254,)
}

def @func_1829(%var_1774: Tensor[(1, 11, 13), float32], %var_1782: Tensor[(15, 11, 13), float32], %var_1790: float64, %var_1792: Tensor[(1512), float64]) -> (Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) {
  %255 = cast(%var_1774, dtype="float32") /* ty=Tensor[(1, 11, 13), float32] */;
  %256 = sigmoid(%255) /* ty=Tensor[(1, 11, 13), float32] */;
  %257 = cast(%256, dtype="int8") /* ty=Tensor[(1, 11, 13), int8] */;
  %258 = cast(%var_1782, dtype="int8") /* ty=Tensor[(15, 11, 13), int8] */;
  %259 = cast(%var_1790, dtype="float64") /* ty=float64 */;
  %260 = cast(meta[relay.Constant][17] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %261 = cast(%var_1792, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %262 = reshape(%259, newshape=[]) /* ty=float64 */;
  %263 = reshape(%260, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float64] */;
  %264 = reshape(%261, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %265 = @func_804(%262, %263, %264) /* ty=(Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) */;
  %266 = cast(%var_1790, dtype="float64") /* ty=float64 */;
  %267 = cast(meta[relay.Constant][17] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %268 = cast(%var_1792, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %269 = reshape(%266, newshape=[]) /* ty=float64 */;
  %270 = reshape(%267, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float64] */;
  %271 = reshape(%268, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %272 = @func_804(%269, %270, %271) /* ty=(Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) */;
  %273 = cast(%256, dtype="float32") /* ty=Tensor[(1, 11, 13), float32] */;
  %274 = bitwise_xor(%257, %258) /* ty=Tensor[(15, 11, 13), int8] */;
  %275 = %265.0;
  %276 = %272.2;
  %277 = acosh(%273) /* ty=Tensor[(1, 11, 13), float32] */;
  (%274, %275, %var_1790, meta[relay.Constant][17] /* ty=Tensor[(1540), float64] */, %var_1792, %276, %277)
}

def @func_2645() -> (Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) {
  %278 = cast(meta[relay.Constant][18] /* ty=Tensor[(637), int32] */, dtype="int32") /* ty=Tensor[(637), int32] */;
  %279 = cast(meta[relay.Constant][18] /* ty=Tensor[(637), int32] */, dtype="int32") /* ty=Tensor[(637), int32] */;
  %280 = reshape(%278, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), int32] */;
  %281 = reshape(%279, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), int32] */;
  %282 = @func_1664(%280, %281) /* ty=(Tensor[(12, 4, 4), float64], Tensor[(7, 13, 7), bool]) */;
  %283 = cast(meta[relay.Constant][19] /* ty=Tensor[(256, 1), uint64] */, dtype="uint64") /* ty=Tensor[(256, 1), uint64] */;
  %284 = reshape(%283, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), uint64] */;
  %285 = @func_1474(%284) /* ty=(Tensor[(2, 8, 16), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1, 1512), float64], Tensor[(12, 14, 9), bool]) */;
  %286 = @func_2251() /* ty=Tensor[(12, 1, 7), float64] */;
  %287 = %282.1;
  %288 = %285.5;
  (%286, %287, meta[relay.Constant][18] /* ty=Tensor[(637), int32] */, %288, meta[relay.Constant][19] /* ty=Tensor[(256, 1), uint64] */)
}

def @func_5480() -> (Tensor[(12, 1, 7), float32],) {
  %289 = @func_2228() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %290 = %289.0;
  (%290,)
}

def @func_3029() -> (Tensor[(12, 14, 9), bool],) {
  %291 = @func_2345() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %292 = %291.0;
  (%292,)
}

def @func_6179() -> (Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), float64]) {
  %293 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %294 = @func_4838() /* ty=(Tensor[(12, 14, 9), float64],) */;
  %295 = %293.0;
  %296 = %294.0;
  (%295, %296)
}

def @func_2728() -> (Tensor[(637), int32],) {
  %297 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %298 = %297.2;
  (%298,)
}

def @func_4601() -> (Tensor[(637), int32],) {
  %299 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
  %300 = %299.0;
  (%300,)
}

def @func_5988() -> Tensor[(12, 1, 7), float32] {
  %301 = @func_3656() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %301.0
}

def @func_1664(%var_1634: Tensor[(7, 13, 7), int32], %var_1635: Tensor[(7, 13, 7), int32]) -> (Tensor[(12, 4, 4), float64], Tensor[(7, 13, 7), bool]) {
  %302 = cast(meta[relay.Constant][20] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %303 = reshape(%302, newshape=[]) /* ty=uint16 */;
  %304 = @func_1137(%303) /* ty=(Tensor[(12, 4, 4), uint16],) */;
  %305 = %304.0;
  %306 = cast(%305, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
  %307 = cast(meta[relay.Constant][20] /* ty=uint16 */, dtype="float64") /* ty=float64 */;
  %308 = cast(%var_1635, dtype="int32") /* ty=Tensor[(7, 13, 7), int32] */;
  %309 = shape_of(%var_1634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%var_1634, dtype="int32") /* ty=Tensor[(7, 13, 7), int32] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %312 = bitwise_xor(%310, %311) /* ty=Tensor[(7, 13, 7), int32] */;
  %313 = cast(%312, dtype="float64") /* ty=Tensor[(7, 13, 7), float64] */;
  %314 = sinh(%313) /* ty=Tensor[(7, 13, 7), float64] */;
  %315 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 13, 7), float64] */, dtype="bool") /* ty=Tensor[(7, 13, 7), bool] */;
  %316 = shape_of(%314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(%314, dtype="bool") /* ty=Tensor[(7, 13, 7), bool] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %319 = mod(%306, %307) /* ty=Tensor[(12, 4, 4), float64] */;
  %320 = greater(%317, %318) /* ty=Tensor[(7, 13, 7), bool] */;
  (%319, %320)
}

def @func_2369() -> (Tensor[(12, 1, 7), float64],) {
  %321 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
  (%321,)
}

def @func_6842(%var_6831: Tensor[(11, 9, 7), float64]) -> (Tensor[(11, 9, 7), float64],) {
  %322 = cast(%var_6831, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
  %323 = sqrt(%322) /* ty=Tensor[(11, 9, 7), float64] */;
  (%323,)
}

def @func_3656() -> (Tensor[(12, 1, 7), float32],) {
  %324 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
  (%324,)
}

def @func_5690() -> Tensor[(12, 1, 7), float64] {
  @func_2154() /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_5078() -> (Tensor[(12, 1, 7), float32], Tensor[(12, 15, 7), int16], Tensor[(630, 2), float64], Tensor[(3, 84), float32]) {
  %325 = @func_3656() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %326 = cast(meta[relay.Constant][22] /* ty=Tensor[(630, 2), float64] */, dtype="float64") /* ty=Tensor[(630, 2), float64] */;
  %327 = reshape(%326, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
  %328 = @func_4853() /* ty=(Tensor[(3, 84), float32],) */;
  %329 = %325.0;
  %330 = @func_2831(%327) /* ty=Tensor[(12, 15, 7), int16] */;
  %331 = %328.0;
  (%329, %330, meta[relay.Constant][22] /* ty=Tensor[(630, 2), float64] */, %331)
}

def @main(%var_7547: Tensor[(12, 3, 7), float32]) -> Tensor[(12, 3, 7), int16] {
  %332 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %333 = %332.0;
  %334 = cast(%333, dtype="int16") /* ty=Tensor[(12, 1, 7), int16] */;
  %335 = cast(%var_7547, dtype="int16") /* ty=Tensor[(12, 3, 7), int16] */;
  bitwise_or(%334, %335) /* ty=Tensor[(12, 3, 7), int16] */
}

def @func_5776() -> (Tensor[(12, 1, 7), float64], Tensor[(12, 15, 7), float64]) {
  %336 = @func_2369() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %337 = @func_5078() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 15, 7), int16], Tensor[(630, 2), float64], Tensor[(3, 84), float32]) */;
  %338 = %337.1;
  %339 = cast(%338, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
  %340 = %336.0;
  %341 = log10(%339) /* ty=Tensor[(12, 15, 7), float64] */;
  (%340, %341)
}

def @func_4933() -> (Tensor[(12, 1, 7), float32],) {
  %342 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
  (%342,)
}

def @func_6430() -> (Tensor[(3, 84), float32], Tensor[(12, 1, 7), float32], Tensor[(637), uint64]) {
  %343 = @func_5252() /* ty=(Tensor[(3, 84), float32],) */;
  %344 = @func_4933() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %345 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %346 = %345.2;
  %347 = cast(%346, dtype="float32") /* ty=Tensor[(637), float32] */;
  %348 = exp(%347) /* ty=Tensor[(637), float32] */;
  %349 = cast(%346, dtype="uint64") /* ty=Tensor[(637), uint64] */;
  %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(1), int32] */;
  %351 = cast(%348, dtype="uint64") /* ty=Tensor[(637), uint64] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %353 = right_shift(%351, %352) /* ty=Tensor[(637), uint64] */;
  %354 = cast(%346, dtype="uint64") /* ty=Tensor[(637), uint64] */;
  %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(1), int32] */;
  %356 = cast(%353, dtype="uint64") /* ty=Tensor[(637), uint64] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %358 = %343.0;
  %359 = %344.0;
  %360 = logical_xor(%356, %357) /* ty=Tensor[(637), uint64] */;
  (%358, %359, %360)
}

def @func_4473(%var_4452: Tensor[(6, 42), float32], %var_4454: Tensor[(6, 42), float32], %var_4471: Tensor[(924), float32]) -> (Tensor[(637), int32], Tensor[(12, 1, 7), float64], Tensor[(637), int32], Tensor[(6, 42), uint32], Tensor[(12, 11, 7), float32], Tensor[(924), float32]) {
  %361 = @func_2728() /* ty=(Tensor[(637), int32],) */;
  %362 = @func_3021() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %363 = cast(%var_4452, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
  %364 = reshape(%363, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
  %365 = @func_3741(%364) /* ty=(Tensor[(12, 3, 7), int8], Tensor[(637), int32]) */;
  %366 = cast(%var_4454, dtype="uint32") /* ty=Tensor[(6, 42), uint32] */;
  %367 = shape_of(%var_4452, dtype="int32") /* ty=Tensor[(2), int32] */;
  %368 = cast(%var_4452, dtype="uint32") /* ty=Tensor[(6, 42), uint32] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %370 = cast(%var_4471, dtype="float32") /* ty=Tensor[(924), float32] */;
  %371 = cast(%var_4452, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
  %372 = reshape(%370, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), float32] */;
  %373 = reshape(%371, newshape=[126, 2]) /* ty=Tensor[(126, 2), float32] */;
  %374 = @func_3401(%372, %373) /* ty=(Tensor[(12, 11, 7), uint32], Tensor[(12, 11, 7), float32], Tensor[(126, 2), float32], Tensor[(12, 4, 4), float64]) */;
  %375 = %361.0;
  %376 = %362.0;
  %377 = %365.1;
  %378 = left_shift(%368, %369) /* ty=Tensor[(6, 42), uint32] */;
  %379 = %374.1;
  (%375, %376, %377, %378, %379, %var_4471)
}

def @func_2933(%var_2909: Tensor[(9, 8, 8), int32], %var_2910: Tensor[(9, 8, 8), int32]) -> (Tensor[(9, 8, 8), int32], Tensor[(12, 1, 7), float32], Tensor[(504), float32]) {
  %380 = cast(%var_2910, dtype="int32") /* ty=Tensor[(9, 8, 8), int32] */;
  %381 = shape_of(%var_2909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%var_2909, dtype="int32") /* ty=Tensor[(9, 8, 8), int32] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %384 = cast(meta[relay.Constant][23] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %385 = reshape(%384, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %386 = @func_2486(%385) /* ty=(Tensor[(12, 6, 7), bool], Tensor[(12, 4, 4), uint16], uint16, Tensor[(12, 1, 7), float32]) */;
  %387 = bitwise_xor(%382, %383) /* ty=Tensor[(9, 8, 8), int32] */;
  %388 = %386.3;
  (%387, %388, meta[relay.Constant][23] /* ty=Tensor[(504), float32] */)
}

def @func_5039() -> (Tensor[(12, 1, 7), float32],) {
  %389 = @func_3232() /* ty=Tensor[(12, 1, 7), float32] */;
  (%389,)
}

def @func_2251() -> Tensor[(12, 1, 7), float64] {
  @func_2154() /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_3112(%var_3095: Tensor[(252), float32]) -> (Tensor[(12, 1, 7), float64], Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 4, 4), uint16], uint16) {
  %390 = @func_2212() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %391 = %390.0;
  %392 = cast(%391, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
  %393 = cast(%var_3095, dtype="float32") /* ty=Tensor[(252), float32] */;
  %394 = reshape(%393, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
  %395 = @func_3078(%394) /* ty=(Tensor[(12, 3, 7), int64],) */;
  %396 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %397 = reshape(%396, newshape=[]) /* ty=uint16 */;
  %398 = @func_1137(%397) /* ty=(Tensor[(12, 4, 4), uint16],) */;
  %399 = acos(%392) /* ty=Tensor[(12, 1, 7), float64] */;
  %400 = %395.0;
  %401 = %398.0;
  (%399, %400, %var_3095, %401, meta[relay.Constant][24] /* ty=uint16 */)
}

def @func_5242() -> (Tensor[(?, 15, 3), int32], Tensor[(12, 14, 9), float64], Tensor[(?, 15, 3), float64]) {
  %402 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 15, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 3), float64] */;
  %403 = tan(%402) /* ty=Tensor[(1, 15, 3), float64] */;
  %404 = cast(%403, dtype="float32") /* ty=Tensor[(1, 15, 3), float32] */;
  %405 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(1, 15, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 15, 3), float64] */, dtype="float32") /* ty=Tensor[(1, 15, 3), float32] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %408 = floor_divide(%406, %407) /* ty=Tensor[(?, 15, 3), float32] */;
  %409 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 15, 3), float64] */, dtype="int32") /* ty=Tensor[(1, 15, 3), int32] */;
  %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%408, dtype="int32") /* ty=Tensor[(?, 15, 3), int32] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %413 = @func_4838() /* ty=(Tensor[(12, 14, 9), float64],) */;
  %414 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 15, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 3), float64] */;
  %415 = asin(%414) /* ty=Tensor[(1, 15, 3), float64] */;
  %416 = cast(%408, dtype="float64") /* ty=Tensor[(?, 15, 3), float64] */;
  %417 = shape_of(%415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%415, dtype="float64") /* ty=Tensor[(1, 15, 3), float64] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %420 = bitwise_and(%411, %412) /* ty=Tensor[(?, 15, 3), int32] */;
  %421 = %413.0;
  %422 = divide(%418, %419) /* ty=Tensor[(?, 15, 3), float64] */;
  (%420, %421, %422)
}

def @func_3546() -> Tensor[(637), int32] {
  %423 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %423.2
}

def @func_2228() -> (Tensor[(12, 1, 7), float32],) {
  %424 = @func_2212() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %425 = %424.0;
  (%425,)
}

def @func_3232() -> Tensor[(12, 1, 7), float32] {
  @func_3052() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_4991(%var_4954: Tensor[(378, 4), float64]) -> (Tensor[(12, 1, 7), float32], Tensor[(1, 16, 7), uint64], Tensor[(112), uint64], uint16, Tensor[(504), float32], Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float32], Tensor[(378, 4), bool]) {
  %426 = cast(meta[relay.Constant][26] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %427 = cast(meta[relay.Constant][27] /* ty=Tensor[(112), uint64] */, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %428 = cast(%var_4954, dtype="float64") /* ty=Tensor[(378, 4), float64] */;
  %429 = cast(%var_4954, dtype="float32") /* ty=Tensor[(378, 4), float32] */;
  %430 = reshape(%426, newshape=[]) /* ty=uint64 */;
  %431 = reshape(%427, newshape=[1, 16, 7]) /* ty=Tensor[(1, 16, 7), uint64] */;
  %432 = reshape(%428, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %433 = reshape(%429, newshape=[1512]) /* ty=Tensor[(1512), float32] */;
  %434 = @func_2190(%430, %431, %432, %433) /* ty=(Tensor[(1, 16, 7), uint64], Tensor[(10, 14, 11), float32], Tensor[(1540), float64], Tensor[(12, 4, 4), uint16], Tensor[(1512), bool]) */;
  %435 = cast(meta[relay.Constant][28] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %436 = reshape(%435, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %437 = @func_2486(%436) /* ty=(Tensor[(12, 6, 7), bool], Tensor[(12, 4, 4), uint16], uint16, Tensor[(12, 1, 7), float32]) */;
  %438 = @func_4411() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %439 = @func_4159() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) */;
  %440 = cast(%var_4954, dtype="float64") /* ty=Tensor[(378, 4), float64] */;
  %441 = cast(meta[relay.Constant][26] /* ty=uint64 */, dtype="float64") /* ty=float64 */;
  %442 = add(%440, %441) /* ty=Tensor[(378, 4), float64] */;
  %443 = cast(%var_4954, dtype="bool") /* ty=Tensor[(378, 4), bool] */;
  %444 = shape_of(%442, dtype="int32") /* ty=Tensor[(2), int32] */;
  %445 = cast(%442, dtype="bool") /* ty=Tensor[(378, 4), bool] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %447 = @func_3232() /* ty=Tensor[(12, 1, 7), float32] */;
  %448 = %434.0;
  %449 = %437.2;
  %450 = %438.0;
  %451 = %439.0;
  %452 = less(%445, %446) /* ty=Tensor[(378, 4), bool] */;
  (%447, %448, meta[relay.Constant][27] /* ty=Tensor[(112), uint64] */, %449, meta[relay.Constant][28] /* ty=Tensor[(504), float32] */, %450, %451, %452)
}

def @func_1137(%var_1130: uint16) -> (Tensor[(12, 4, 4), uint16],) {
  %453 = cast(%var_1130, dtype="uint16") /* ty=uint16 */;
  %454 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 4, 4), uint16] */, dtype="uint16") /* ty=Tensor[(12, 4, 4), uint16] */;
  %455 = bitwise_and(%453, %454) /* ty=Tensor[(12, 4, 4), uint16] */;
  (%455,)
}

def @func_4294(%var_4254: Tensor[(6, 15, 9), float32]) -> (Tensor[(6, 15, 9), float32], Tensor[(12, 1, 7), float64], Tensor[(12, 1, 7), float32], Tensor[(504), float32], Tensor[(1, 576), int32]) {
  %456 = cast(%var_4254, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %457 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %458 = @func_3656() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %459 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 576), int32] */, dtype="int32") /* ty=Tensor[(1, 576), int32] */;
  %460 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 576), int32] */, dtype="int32") /* ty=Tensor[(1, 576), int32] */;
  %461 = reshape(%459, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), int32] */;
  %462 = reshape(%460, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), int32] */;
  %463 = @func_2933(%461, %462) /* ty=(Tensor[(9, 8, 8), int32], Tensor[(12, 1, 7), float32], Tensor[(504), float32]) */;
  %464 = acos(%456) /* ty=Tensor[(6, 15, 9), float32] */;
  %465 = %457.0;
  %466 = %458.0;
  %467 = %463.2;
  (%464, %465, %466, %467, meta[relay.Constant][30] /* ty=Tensor[(1, 576), int32] */)
}

def @func_3129() -> Tensor[(12, 1, 7), float32] {
  %468 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
  %468.1
}

def @func_3633(%var_3587: Tensor[(112), uint64], %var_3608: Tensor[(252), float32]) -> (Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(7, 13, 7), bool], Tensor[(1512), bool], Tensor[(112), uint64], Tensor[(12, 1, 7), float32], Tensor[(252), float32], Tensor[(252), float32], Tensor[(12, 14, 9), bool], Tensor[(1, 637), float32]) {
  %469 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %470 = @func_3029() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %471 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 637), int32] */, dtype="int32") /* ty=Tensor[(1, 637), int32] */;
  %472 = reshape(%471, newshape=[637]) /* ty=Tensor[(637), int32] */;
  %473 = @func_2968(%472) /* ty=(Tensor[(637), float32], float64, Tensor[(1, 143), float32], Tensor[(2145), float32], float64, Tensor[(378, 4), float64]) */;
  %474 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 637), int32] */, dtype="int32") /* ty=Tensor[(1, 637), int32] */;
  %475 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 637), int32] */, dtype="int32") /* ty=Tensor[(1, 637), int32] */;
  %476 = reshape(%474, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), int32] */;
  %477 = reshape(%475, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), int32] */;
  %478 = @func_1664(%476, %477) /* ty=(Tensor[(12, 4, 4), float64], Tensor[(7, 13, 7), bool]) */;
  %479 = %473.1;
  %480 = cast(%479, dtype="uint64") /* ty=uint64 */;
  %481 = cast(%var_3587, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %482 = %470.0;
  %483 = cast(%482, dtype="float64") /* ty=Tensor[(12, 14, 9), float64] */;
  %484 = cast(%482, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %485 = reshape(%480, newshape=[]) /* ty=uint64 */;
  %486 = reshape(%481, newshape=[1, 16, 7]) /* ty=Tensor[(1, 16, 7), uint64] */;
  %487 = reshape(%483, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %488 = reshape(%484, newshape=[1512]) /* ty=Tensor[(1512), float32] */;
  %489 = @func_2190(%485, %486, %487, %488) /* ty=(Tensor[(1, 16, 7), uint64], Tensor[(10, 14, 11), float32], Tensor[(1540), float64], Tensor[(12, 4, 4), uint16], Tensor[(1512), bool]) */;
  %490 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %491 = cast(%var_3608, dtype="float32") /* ty=Tensor[(252), float32] */;
  %492 = reshape(%491, newshape=[252]) /* ty=Tensor[(252), float32] */;
  %493 = @func_3112(%492) /* ty=(Tensor[(12, 1, 7), float64], Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 4, 4), uint16], uint16) */;
  %494 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %495 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 637), int32] */, dtype="float32") /* ty=Tensor[(1, 637), float32] */;
  %496 = %469.0;
  %497 = %478.1;
  %498 = %489.4;
  %499 = %490.0;
  %500 = %493.2;
  %501 = %494.1;
  %502 = acosh(%495) /* ty=Tensor[(1, 637), float32] */;
  (%496, %482, %479, %497, %498, %var_3587, %499, %500, %var_3608, %501, %502)
}

def @func_6969() -> Tensor[(12, 1, 7), float64] {
  %503 = @func_3021() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %503.0
}

def @func_7383() -> (Tensor[(12, 1, 7), float64], Tensor[(12, 1, 7), float64]) {
  %504 = @func_5278() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %505 = @func_5776() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(12, 15, 7), float64]) */;
  %506 = %504.0;
  %507 = %505.0;
  (%506, %507)
}

def @func_2154() -> Tensor[(12, 1, 7), float64] {
  %508 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 1, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
  erf(%508) /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_5545(%var_5529: Tensor[(13, 15, 8), float64]) -> (Tensor[(13, 15, 8), float64], Tensor[(1540), float64], Tensor[(256), uint64]) {
  %509 = cast(%var_5529, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
  %510 = cast(meta[relay.Constant][33] /* ty=Tensor[(256), uint64] */, dtype="uint64") /* ty=Tensor[(256), uint64] */;
  %511 = reshape(%510, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), uint64] */;
  %512 = @func_1474(%511) /* ty=(Tensor[(2, 8, 16), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1, 1512), float64], Tensor[(12, 14, 9), bool]) */;
  %513 = sigmoid(%509) /* ty=Tensor[(13, 15, 8), float64] */;
  %514 = %512.3;
  (%513, %514, meta[relay.Constant][33] /* ty=Tensor[(256), uint64] */)
}

def @func_2325(%var_2309: Tensor[(6, 10, 5), uint64]) -> (Tensor[(6, 10, 5), uint64],) {
  %515 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 10, 5), uint64] */, dtype="uint64") /* ty=Tensor[(6, 10, 5), uint64] */;
  %516 = shape_of(%var_2309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%var_2309, dtype="uint64") /* ty=Tensor[(6, 10, 5), uint64] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %519 = left_shift(%517, %518) /* ty=Tensor[(6, 10, 5), uint64] */;
  (%519,)
}

def @func_5408(%var_5395: Tensor[(924), float32], %var_5396: Tensor[(252), float32], %var_5399: Tensor[(143), float32], %var_5400: Tensor[(2145), float32]) -> (Tensor[(12, 1, 7), float32], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(10, 14, 11), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(3, 84), float32]) {
  %520 = @func_5039() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %521 = cast(%var_5395, dtype="float32") /* ty=Tensor[(924), float32] */;
  %522 = cast(%var_5396, dtype="float32") /* ty=Tensor[(252), float32] */;
  %523 = reshape(%521, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), float32] */;
  %524 = reshape(%522, newshape=[126, 2]) /* ty=Tensor[(126, 2), float32] */;
  %525 = @func_3401(%523, %524) /* ty=(Tensor[(12, 11, 7), uint32], Tensor[(12, 11, 7), float32], Tensor[(126, 2), float32], Tensor[(12, 4, 4), float64]) */;
  %526 = cast(%var_5399, dtype="float32") /* ty=Tensor[(143), float32] */;
  %527 = cast(%var_5400, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %528 = cast(1.05724f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %529 = cast(meta[relay.Constant][35] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %530 = reshape(%526, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
  %531 = reshape(%527, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), float32] */;
  %532 = reshape(%528, newshape=[]) /* ty=float64 */;
  %533 = reshape(%529, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %534 = @func_1829(%530, %531, %532, %533) /* ty=(Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) */;
  %535 = @func_4853() /* ty=(Tensor[(3, 84), float32],) */;
  %536 = %520.0;
  %537 = %525.2;
  %538 = %534.5;
  %539 = %535.0;
  (%536, %537, %var_5395, %var_5396, %538, %var_5399, %var_5400, 1.05724f64 /* ty=float64 */, meta[relay.Constant][35] /* ty=Tensor[(1512), float64] */, %539)
}

def @func_4244(%var_4229: Tensor[(637), int32]) -> (Tensor[(637), float64], Tensor[(637), float64]) {
  %540 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
  %541 = %540.0;
  %542 = cast(%var_4229, dtype="float64") /* ty=Tensor[(637), float64] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(1), int32] */;
  %544 = cast(%541, dtype="float64") /* ty=Tensor[(637), float64] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?), float64] */;
  %546 = cast(%541, dtype="float32") /* ty=Tensor[(637), float32] */;
  %547 = log2(%546) /* ty=Tensor[(637), float32] */;
  %548 = cast(%547, dtype="float64") /* ty=Tensor[(637), float64] */;
  %549 = divide(%544, %545) /* ty=Tensor[(637), float64] */;
  %550 = sqrt(%548) /* ty=Tensor[(637), float64] */;
  (%549, %550)
}

def @func_3519(%var_3507: Tensor[(252), float32], %var_3517: Tensor[(256), uint64]) -> (Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 14, 9), bool], Tensor[(12, 14, 9), float32], Tensor[(12, 14, 9), bool], Tensor[(256), uint64]) {
  %551 = cast(%var_3507, dtype="float32") /* ty=Tensor[(252), float32] */;
  %552 = reshape(%551, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
  %553 = @func_3078(%552) /* ty=(Tensor[(12, 3, 7), int64],) */;
  %554 = @func_3029() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %555 = @func_3029() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %556 = %555.0;
  %557 = cast(%556, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %558 = asinh(%557) /* ty=Tensor[(12, 14, 9), float32] */;
  %559 = cast(%558, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %560 = cast(%var_3517, dtype="uint64") /* ty=Tensor[(256), uint64] */;
  %561 = reshape(%560, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), uint64] */;
  %562 = @func_1474(%561) /* ty=(Tensor[(2, 8, 16), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1, 1512), float64], Tensor[(12, 14, 9), bool]) */;
  %563 = %553.0;
  %564 = %554.0;
  %565 = sigmoid(%559) /* ty=Tensor[(12, 14, 9), float32] */;
  %566 = %562.5;
  (%563, %var_3507, %564, %565, %566, %var_3517)
}

def @func_4159() -> (Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) {
  %567 = @func_2228() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %568 = %567.0;
  %569 = @func_2251() /* ty=Tensor[(12, 1, 7), float64] */;
  (%568, %569)
}

def @func_2486(%var_2431: Tensor[(12, 6, 7), float32]) -> (Tensor[(12, 6, 7), bool], Tensor[(12, 4, 4), uint16], uint16, Tensor[(12, 1, 7), float32]) {
  %570 = @func_2369() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %571 = %570.0;
  %572 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
  %573 = cast(%572, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
  %574 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%571, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %577 = floor_mod(%575, %576) /* ty=Tensor[(12, ?, 7), float32] */;
  %578 = cast(%577, dtype="bool") /* ty=Tensor[(12, ?, 7), bool] */;
  %579 = cast(%var_2431, dtype="bool") /* ty=Tensor[(12, 6, 7), bool] */;
  %580 = cast(meta[relay.Constant][36] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %581 = reshape(%580, newshape=[]) /* ty=uint16 */;
  %582 = @func_1137(%581) /* ty=(Tensor[(12, 4, 4), uint16],) */;
  %583 = cast(%571, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
  %584 = log2(%583) /* ty=Tensor[(12, 1, 7), float32] */;
  %585 = cast(%584, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
  %586 = atanh(%585) /* ty=Tensor[(12, 1, 7), float64] */;
  %587 = cast(%586, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
  %588 = logical_and(%578, %579) /* ty=Tensor[(12, 6, 7), bool] */;
  %589 = %582.0;
  %590 = acosh(%587) /* ty=Tensor[(12, 1, 7), float32] */;
  (%588, %589, meta[relay.Constant][36] /* ty=uint16 */, %590)
}

def @func_2212() -> (Tensor[(12, 1, 7), float32],) {
  %591 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
  %592 = cast(%591, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
  %593 = atan(%592) /* ty=Tensor[(12, 1, 7), float32] */;
  (%593,)
}

def @func_1474(%var_1451: Tensor[(2, 8, 16), uint64]) -> (Tensor[(2, 8, 16), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1, 1512), float64], Tensor[(12, 14, 9), bool]) {
  %594 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 8, 16), uint64] */, dtype="bool") /* ty=Tensor[(2, 8, 16), bool] */;
  %595 = shape_of(%var_1451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(%var_1451, dtype="bool") /* ty=Tensor[(2, 8, 16), bool] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %598 = less_equal(%596, %597) /* ty=Tensor[(2, 8, 16), bool] */;
  %599 = cast(%598, dtype="float64") /* ty=Tensor[(2, 8, 16), float64] */;
  %600 = cast(0.74052f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %601 = cast(meta[relay.Constant][38] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %602 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 1512), float64] */, dtype="float64") /* ty=Tensor[(1, 1512), float64] */;
  %603 = reshape(%600, newshape=[]) /* ty=float64 */;
  %604 = reshape(%601, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float64] */;
  %605 = reshape(%602, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %606 = @func_804(%603, %604, %605) /* ty=(Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) */;
  %607 = cast(0.74052f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %608 = cast(meta[relay.Constant][38] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %609 = %606.0;
  %610 = cast(%609, dtype="float64") /* ty=Tensor[(12, 14, 9), float64] */;
  %611 = reshape(%607, newshape=[]) /* ty=float64 */;
  %612 = reshape(%608, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float64] */;
  %613 = reshape(%610, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %614 = @func_804(%611, %612, %613) /* ty=(Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) */;
  %615 = acosh(%599) /* ty=Tensor[(2, 8, 16), float64] */;
  %616 = %614.0;
  (%615, %609, 0.74052f64 /* ty=float64 */, meta[relay.Constant][38] /* ty=Tensor[(1540), float64] */, meta[relay.Constant][39] /* ty=Tensor[(1, 1512), float64] */, %616)
}

def @func_5278() -> (Tensor[(12, 1, 7), float64],) {
  %617 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
  (%617,)
}

def @func_3741(%var_3718: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), int8], Tensor[(637), int32]) {
  %618 = @func_2228() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %619 = %618.0;
  %620 = cast(%619, dtype="int8") /* ty=Tensor[(12, 1, 7), int8] */;
  %621 = cast(%var_3718, dtype="int8") /* ty=Tensor[(12, 3, 7), int8] */;
  %622 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %623 = left_shift(%620, %621) /* ty=Tensor[(12, 3, 7), int8] */;
  %624 = %622.2;
  (%623, %624)
}

def @func_5912() -> Tensor[(12, 1, 7), float32] {
  @func_3129() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_4897() -> Tensor[(12, 1, 7), float32] {
  %625 = @func_3656() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %625.0
}

def @func_2302() -> (Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) {
  %626 = @func_2212() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %627 = cast(meta[relay.Constant][40] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %628 = reshape(%627, newshape=[12, 14, 9]) /* ty=Tensor[(12, 14, 9), float64] */;
  %629 = @func_617(%628) /* ty=(Tensor[(12, 14, 9), uint32], Tensor[(12, 14, 9), bool]) */;
  %630 = %626.0;
  %631 = %629.1;
  (%630, %631, meta[relay.Constant][40] /* ty=Tensor[(1512), float64] */)
}

def @func_6002() -> (Tensor[(12, 14, 9), bool],) {
  %632 = @func_2345() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %633 = %632.0;
  (%633,)
}

def @func_4755(%var_4744: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 1, 7), float32], Tensor[(6, 10, 5), uint64], Tensor[(300), uint64], Tensor[(12, 1, 7), float32], Tensor[(12, 3, 7), bool]) {
  %634 = cast(meta[relay.Constant][41] /* ty=Tensor[(300), uint64] */, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %635 = reshape(%634, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), uint64] */;
  %636 = @func_2325(%635) /* ty=(Tensor[(6, 10, 5), uint64],) */;
  %637 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
  %638 = @func_3656() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %639 = %638.0;
  %640 = cast(%639, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
  %641 = cast(%var_4744, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %642 = @func_3052() /* ty=Tensor[(12, 1, 7), float32] */;
  %643 = %636.0;
  %644 = %637.1;
  %645 = greater_equal(%640, %641) /* ty=Tensor[(12, 3, 7), bool] */;
  (%642, %643, meta[relay.Constant][41] /* ty=Tensor[(300), uint64] */, %644, %645)
}

def @func_617(%var_562: Tensor[(12, 14, 9), float64]) -> (Tensor[(12, 14, 9), uint32], Tensor[(12, 14, 9), bool]) {
  %646 = cast(%var_562, dtype="float64") /* ty=Tensor[(12, 14, 9), float64] */;
  %647 = log(%646) /* ty=Tensor[(12, 14, 9), float64] */;
  %648 = cast(%var_562, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %649 = shape_of(%647, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%647, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %652 = floor_mod(%650, %651) /* ty=Tensor[(12, 14, 9), float32] */;
  %653 = cast(%652, dtype="uint32") /* ty=Tensor[(12, 14, 9), uint32] */;
  %654 = shape_of(%var_562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(%var_562, dtype="uint32") /* ty=Tensor[(12, 14, 9), uint32] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %657 = cast(%652, dtype="bool") /* ty=Tensor[(12, 14, 9), bool] */;
  %658 = shape_of(%647, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%647, dtype="bool") /* ty=Tensor[(12, 14, 9), bool] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %661 = right_shift(%655, %656) /* ty=Tensor[(12, 14, 9), uint32] */;
  %662 = less_equal(%659, %660) /* ty=Tensor[(12, 14, 9), bool] */;
  (%661, %662)
}

def @func_4116() -> (Tensor[(12, 14, 9), float32], Tensor[(12, 3, 7), int64], Tensor[(3, 84), float32], Tensor[(12, 15, 7), int16], Tensor[(1260), float64], Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), uint32], Tensor[(12, 3, 7), int8], Tensor[(6, 10, 5), uint64], Tensor[(300), uint64]) {
  %663 = @func_3029() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %664 = %663.0;
  %665 = cast(%664, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %666 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 84), float32] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %667 = reshape(%666, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
  %668 = @func_3078(%667) /* ty=(Tensor[(12, 3, 7), int64],) */;
  %669 = cast(meta[relay.Constant][43] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %670 = reshape(%669, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
  %671 = acos(%665) /* ty=Tensor[(12, 14, 9), float32] */;
  %672 = cast(%671, dtype="float64") /* ty=Tensor[(12, 14, 9), float64] */;
  %673 = reshape(%672, newshape=[12, 14, 9]) /* ty=Tensor[(12, 14, 9), float64] */;
  %674 = @func_617(%673) /* ty=(Tensor[(12, 14, 9), uint32], Tensor[(12, 14, 9), bool]) */;
  %675 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 84), float32] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %676 = reshape(%675, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
  %677 = @func_3741(%676) /* ty=(Tensor[(12, 3, 7), int8], Tensor[(637), int32]) */;
  %678 = cast(meta[relay.Constant][44] /* ty=Tensor[(300), uint64] */, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %679 = reshape(%678, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), uint64] */;
  %680 = @func_2325(%679) /* ty=(Tensor[(6, 10, 5), uint64],) */;
  %681 = %668.0;
  %682 = @func_2831(%670) /* ty=Tensor[(12, 15, 7), int16] */;
  %683 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
  %684 = %674.0;
  %685 = %677.0;
  %686 = %680.0;
  (%671, %681, meta[relay.Constant][42] /* ty=Tensor[(3, 84), float32] */, %682, meta[relay.Constant][43] /* ty=Tensor[(1260), float64] */, %683, %684, %685, %686, meta[relay.Constant][44] /* ty=Tensor[(300), uint64] */)
}

def @func_5905(%var_5895: Tensor[(1092, 1), float32], %var_5897: Tensor[(1092, 9), float32]) -> (Tensor[(12, 14, 9), float64], Tensor[(12, 1, 7), float64], Tensor[(1092, 9), bool], Tensor[(12, 11, 7), float32], Tensor[(924), float64]) {
  %687 = @func_4838() /* ty=(Tensor[(12, 14, 9), float64],) */;
  %688 = cast(%var_5895, dtype="float32") /* ty=Tensor[(1092, 1), float32] */;
  %689 = reshape(%688, newshape=[12, 13, 7]) /* ty=Tensor[(12, 13, 7), float32] */;
  %690 = @func_3196(%689) /* ty=(Tensor[(12, 13, 7), bool], Tensor[(12, 1, 7), float64]) */;
  %691 = cast(%var_5895, dtype="bool") /* ty=Tensor[(1092, 1), bool] */;
  %692 = cast(%var_5897, dtype="bool") /* ty=Tensor[(1092, 9), bool] */;
  %693 = cast(meta[relay.Constant][45] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %694 = cast(meta[relay.Constant][45] /* ty=Tensor[(924), float64] */, dtype="int8") /* ty=Tensor[(924), int8] */;
  %695 = reshape(%693, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), float64] */;
  %696 = reshape(%694, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), int8] */;
  %697 = %687.0;
  %698 = %690.1;
  %699 = greater_equal(%691, %692) /* ty=Tensor[(1092, 9), bool] */;
  %700 = @func_3323(%695, %696) /* ty=Tensor[(12, 11, 7), float32] */;
  (%697, %698, %699, %700, meta[relay.Constant][45] /* ty=Tensor[(924), float64] */)
}

def @func_6781() -> Tensor[(637), float32] {
  %701 = @func_3546() /* ty=Tensor[(637), int32] */;
  %702 = cast(%701, dtype="float32") /* ty=Tensor[(637), float32] */;
  asinh(%702) /* ty=Tensor[(637), float32] */
}

def @func_4589(%var_4555: Tensor[(4, 9, 11), float64], %var_4577: Tensor[(504), float32]) -> (Tensor[(4, 9, 11), float32], Tensor[(1512), float64], Tensor[(12, 1, 7), float32], Tensor[(504), float32], Tensor[(12, 1, 7), float32]) {
  %703 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 9, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 9, 11), float64] */;
  %704 = shape_of(%var_4555, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%var_4555, dtype="float64") /* ty=Tensor[(4, 9, 11), float64] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %707 = mod(%705, %706) /* ty=Tensor[(4, 9, 11), float64] */;
  %708 = cast(%707, dtype="float32") /* ty=Tensor[(4, 9, 11), float32] */;
  %709 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %710 = cast(%var_4577, dtype="float32") /* ty=Tensor[(504), float32] */;
  %711 = reshape(%710, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %712 = @func_2486(%711) /* ty=(Tensor[(12, 6, 7), bool], Tensor[(12, 4, 4), uint16], uint16, Tensor[(12, 1, 7), float32]) */;
  %713 = sin(%708) /* ty=Tensor[(4, 9, 11), float32] */;
  %714 = %709.2;
  %715 = %712.3;
  %716 = @func_3232() /* ty=Tensor[(12, 1, 7), float32] */;
  (%713, %714, %715, %var_4577, %716)
}

def @func_804(%var_776: float64, %var_777: Tensor[(10, 14, 11), float64], %var_791: Tensor[(1512), float64]) -> (Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) {
  %717 = cast(%var_791, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %718 = reshape(%717, newshape=[12, 14, 9]) /* ty=Tensor[(12, 14, 9), float64] */;
  %719 = @func_617(%718) /* ty=(Tensor[(12, 14, 9), uint32], Tensor[(12, 14, 9), bool]) */;
  %720 = cast(%var_791, dtype="uint8") /* ty=Tensor[(1512), uint8] */;
  %721 = cast(%var_776, dtype="uint8") /* ty=uint8 */;
  %722 = cast(%var_776, dtype="bool") /* ty=bool */;
  %723 = cast(%var_777, dtype="bool") /* ty=Tensor[(10, 14, 11), bool] */;
  %724 = less_equal(%722, %723) /* ty=Tensor[(10, 14, 11), bool] */;
  %725 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 14, 11), bool] */, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %726 = shape_of(%724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%724, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %729 = %719.1;
  %730 = add(%720, %721) /* ty=Tensor[(1512), uint8] */;
  %731 = mod(%727, %728) /* ty=Tensor[(10, 14, 11), float32] */;
  (%729, %730, %731)
}

def @func_4853() -> (Tensor[(3, 84), float32],) {
  %732 = @func_4116() /* ty=(Tensor[(12, 14, 9), float32], Tensor[(12, 3, 7), int64], Tensor[(3, 84), float32], Tensor[(12, 15, 7), int16], Tensor[(1260), float64], Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), uint32], Tensor[(12, 3, 7), int8], Tensor[(6, 10, 5), uint64], Tensor[(300), uint64]) */;
  %733 = %732.2;
  %734 = cast(%733, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %735 = acosh(%734) /* ty=Tensor[(3, 84), float32] */;
  (%735,)
}

def @func_6749() -> Tensor[(?, 15, 3), int32] {
  %736 = @func_5242() /* ty=(Tensor[(?, 15, 3), int32], Tensor[(12, 14, 9), float64], Tensor[(?, 15, 3), float64]) */;
  %736.0
}

def @func_3425(%var_3417: Tensor[(12, 14, 7), float32]) -> Tensor[(12, 14, 7), int8] {
  %737 = @func_3232() /* ty=Tensor[(12, 1, 7), float32] */;
  %738 = cast(%737, dtype="int8") /* ty=Tensor[(12, 1, 7), int8] */;
  %739 = cast(%var_3417, dtype="int8") /* ty=Tensor[(12, 14, 7), int8] */;
  add(%738, %739) /* ty=Tensor[(12, 14, 7), int8] */
}

def @func_2190(%var_2163: uint64, %var_2164: Tensor[(1, 16, 7), uint64], %var_2174: Tensor[(1512), float64], %var_2185: Tensor[(1512), float32]) -> (Tensor[(1, 16, 7), uint64], Tensor[(10, 14, 11), float32], Tensor[(1540), float64], Tensor[(12, 4, 4), uint16], Tensor[(1512), bool]) {
  %740 = cast(%var_2163, dtype="uint64") /* ty=uint64 */;
  %741 = cast(%var_2164, dtype="uint64") /* ty=Tensor[(1, 16, 7), uint64] */;
  %742 = cast(%var_2163, dtype="float64") /* ty=float64 */;
  %743 = cast(meta[relay.Constant][48] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %744 = cast(%var_2174, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %745 = reshape(%742, newshape=[]) /* ty=float64 */;
  %746 = reshape(%743, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float64] */;
  %747 = reshape(%744, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %748 = @func_804(%745, %746, %747) /* ty=(Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) */;
  %749 = cast(%var_2163, dtype="uint16") /* ty=uint16 */;
  %750 = reshape(%749, newshape=[]) /* ty=uint16 */;
  %751 = @func_1137(%750) /* ty=(Tensor[(12, 4, 4), uint16],) */;
  %752 = cast(%var_2174, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %753 = exp(%752) /* ty=Tensor[(1512), float64] */;
  %754 = cast(%753, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %755 = atan(%754) /* ty=Tensor[(1512), float32] */;
  %756 = cast(%var_2185, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %757 = shape_of(%755, dtype="int32") /* ty=Tensor[(1), int32] */;
  %758 = cast(%755, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?), bool] */;
  %760 = maximum(%740, %741) /* ty=Tensor[(1, 16, 7), uint64] */;
  %761 = %748.2;
  %762 = %751.0;
  %763 = less_equal(%758, %759) /* ty=Tensor[(1512), bool] */;
  (%760, %761, meta[relay.Constant][48] /* ty=Tensor[(1540), float64] */, %762, %763)
}

def @func_7190() -> (Tensor[(12, 1, 7), float32],) {
  %764 = @func_5039() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %765 = %764.0;
  (%765,)
}

def @func_3052() -> Tensor[(12, 1, 7), float32] {
  %766 = @func_2228() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %766.0
}

def @func_3323(%var_3303: Tensor[(12, 11, 7), float64], %var_3312: Tensor[(12, 11, 7), int8]) -> Tensor[(12, 11, 7), float32] {
  %767 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
  %768 = cast(%767, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
  %769 = cast(%var_3303, dtype="bool") /* ty=Tensor[(12, 11, 7), bool] */;
  %770 = greater(%768, %769) /* ty=Tensor[(12, 11, 7), bool] */;
  %771 = cast(%var_3303, dtype="int8") /* ty=Tensor[(12, 11, 7), int8] */;
  %772 = shape_of(%770, dtype="int32") /* ty=Tensor[(3), int32] */;
  %773 = cast(%770, dtype="int8") /* ty=Tensor[(12, 11, 7), int8] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %775 = bitwise_and(%773, %774) /* ty=Tensor[(12, 11, 7), int8] */;
  %776 = cast(%var_3312, dtype="float32") /* ty=Tensor[(12, 11, 7), float32] */;
  %777 = shape_of(%775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%775, dtype="float32") /* ty=Tensor[(12, 11, 7), float32] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%778, %779) /* ty=Tensor[(12, 11, 7), float32] */
}

def @func_5593(%var_5557: Tensor[(1512), float64]) -> (Tensor[(1512), bool], Tensor[(12, 14, 9), bool]) {
  %780 = @func_4041() /* ty=Tensor[(1512), float64] */;
  %781 = cast(%var_5557, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %782 = shape_of(%780, dtype="int32") /* ty=Tensor[(1), int32] */;
  %783 = cast(%780, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?), bool] */;
  %785 = @func_2345() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %786 = greater(%783, %784) /* ty=Tensor[(1512), bool] */;
  %787 = %785.0;
  (%786, %787)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7265() -> Tensor[(12, 1, 7), float64] {
  @func_6120() /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_2080(%var_2066: Tensor[(7, 5, 13), float64]) -> Tensor[(7, 5, 13), float64] {
  %0 = cast(%var_2066, dtype="float64") /* ty=Tensor[(7, 5, 13), float64] */;
  acosh(%0) /* ty=Tensor[(7, 5, 13), float64] */
}

def @func_3327(%var_3325: Tensor[(12, 11, 7), float64], %var_3326: Tensor[(12, 11, 7), int8]) -> Tensor[(12, 11, 7), float32] {
  @func_3323(%var_3325, %var_3326) /* ty=Tensor[(12, 11, 7), float32] */
}

def @func_5414(%var_5410: Tensor[(924), float32], %var_5411: Tensor[(252), float32], %var_5412: Tensor[(143), float32], %var_5413: Tensor[(2145), float32]) -> (Tensor[(12, 1, 7), float32], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(10, 14, 11), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(3, 84), float32]) {
  @func_5408(%var_5410, %var_5411, %var_5412, %var_5413) /* ty=(Tensor[(12, 1, 7), float32], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(10, 14, 11), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(3, 84), float32]) */
}

def @func_2345() -> (Tensor[(12, 14, 9), bool],) {
  %1 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %2 = %1.1;
  (%2,)
}

def @func_5280() -> (Tensor[(12, 1, 7), float64],) {
  @func_5278() /* ty=(Tensor[(12, 1, 7), float64],) */
}

def @func_2230() -> (Tensor[(12, 1, 7), float32],) {
  @func_2228() /* ty=(Tensor[(12, 1, 7), float32],) */
}

def @func_2302() -> (Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) {
  %3 = @func_2212() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %5 = reshape(%4, newshape=[12, 14, 9]) /* ty=Tensor[(12, 14, 9), float64] */;
  %6 = @func_617(%5) /* ty=(Tensor[(12, 14, 9), uint32], Tensor[(12, 14, 9), bool]) */;
  %7 = %3.0;
  %8 = %6.1;
  (%7, %8, meta[relay.Constant][0] /* ty=Tensor[(1512), float64] */)
}

def @func_4994(%var_4992: Tensor[(378, 4), float64]) -> (Tensor[(12, 1, 7), float32], Tensor[(1, 16, 7), uint64], Tensor[(112), uint64], uint16, Tensor[(504), float32], Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float32], Tensor[(378, 4), bool]) {
  @func_4991(%var_4992) /* ty=(Tensor[(12, 1, 7), float32], Tensor[(1, 16, 7), uint64], Tensor[(112), uint64], uint16, Tensor[(504), float32], Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float32], Tensor[(378, 4), bool]) */
}

def @func_5482() -> (Tensor[(12, 1, 7), float32],) {
  @func_5480() /* ty=(Tensor[(12, 1, 7), float32],) */
}

def @func_4294(%var_4254: Tensor[(6, 15, 9), float32]) -> (Tensor[(6, 15, 9), float32], Tensor[(12, 1, 7), float64], Tensor[(12, 1, 7), float32], Tensor[(504), float32], Tensor[(1, 576), int32]) {
  %9 = cast(%var_4254, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %10 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %11 = @func_3656() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 576), int32] */, dtype="int32") /* ty=Tensor[(1, 576), int32] */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 576), int32] */, dtype="int32") /* ty=Tensor[(1, 576), int32] */;
  %14 = reshape(%12, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), int32] */;
  %15 = reshape(%13, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), int32] */;
  %16 = @func_2933(%14, %15) /* ty=(Tensor[(9, 8, 8), int32], Tensor[(12, 1, 7), float32], Tensor[(504), float32]) */;
  %17 = acos(%9) /* ty=Tensor[(6, 15, 9), float32] */;
  %18 = %10.0;
  %19 = %11.0;
  %20 = %16.2;
  (%17, %18, %19, %20, meta[relay.Constant][1] /* ty=Tensor[(1, 576), int32] */)
}

def @func_2647() -> (Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) {
  @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */
}

def @func_6751() -> Tensor[(?, 15, 3), int32] {
  @func_6749() /* ty=Tensor[(?, 15, 3), int32] */
}

def @func_2937(%var_2935: Tensor[(9, 8, 8), int32], %var_2936: Tensor[(9, 8, 8), int32]) -> (Tensor[(9, 8, 8), int32], Tensor[(12, 1, 7), float32], Tensor[(504), float32]) {
  @func_2933(%var_2935, %var_2936) /* ty=(Tensor[(9, 8, 8), int32], Tensor[(12, 1, 7), float32], Tensor[(504), float32]) */
}

def @func_3657() -> (Tensor[(12, 1, 7), float32],) {
  %22 = fn () -> (Tensor[(12, 1, 7), float32],) {
    %21 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
    (%21,)
  };
  %22() /* ty=(Tensor[(12, 1, 7), float32],) */
}

def @func_5124() -> Tensor[(637), bool] {
  @func_5122() /* ty=Tensor[(637), bool] */
}

def @func_7192() -> (Tensor[(12, 1, 7), float32],) {
  @func_7190() /* ty=(Tensor[(12, 1, 7), float32],) */
}

def @func_3744(%var_3742: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), int8], Tensor[(637), int32]) {
  @func_3741(%var_3742) /* ty=(Tensor[(12, 3, 7), int8], Tensor[(637), int32]) */
}

def @func_6570(%var_6569: Tensor[(9, 10, 15), int32]) -> (Tensor[(9, 10, 15), bool], Tensor[(12, 1, 7), float32]) {
  %29 = fn (%var_6551: Tensor[(9, 10, 15), int32]) -> (Tensor[(9, 10, 15), bool], Tensor[(12, 1, 7), float32]) {
    %23 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 10, 15), int32] */, dtype="bool") /* ty=Tensor[(9, 10, 15), bool] */;
    %24 = shape_of(%var_6551, dtype="int32") /* ty=Tensor[(3), int32] */;
    %25 = cast(%var_6551, dtype="bool") /* ty=Tensor[(9, 10, 15), bool] */;
    %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %27 = less(%25, %26) /* ty=Tensor[(9, 10, 15), bool] */;
    %28 = @func_4897() /* ty=Tensor[(12, 1, 7), float32] */;
    (%27, %28)
  };
  %29(%var_6569) /* ty=(Tensor[(9, 10, 15), bool], Tensor[(12, 1, 7), float32]) */
}

def @func_3232() -> Tensor[(12, 1, 7), float32] {
  @func_3052() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_6844(%var_6843: Tensor[(11, 9, 7), float64]) -> (Tensor[(11, 9, 7), float64],) {
  %32 = fn (%var_6831: Tensor[(11, 9, 7), float64]) -> (Tensor[(11, 9, 7), float64],) {
    %30 = cast(%var_6831, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
    %31 = sqrt(%30) /* ty=Tensor[(11, 9, 7), float64] */;
    (%31,)
  };
  %32(%var_6843) /* ty=(Tensor[(11, 9, 7), float64],) */
}

def @func_2327(%var_2326: Tensor[(6, 10, 5), uint64]) -> (Tensor[(6, 10, 5), uint64],) {
  %38 = fn (%var_2309: Tensor[(6, 10, 5), uint64]) -> (Tensor[(6, 10, 5), uint64],) {
    %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 10, 5), uint64] */, dtype="uint64") /* ty=Tensor[(6, 10, 5), uint64] */;
    %34 = shape_of(%var_2309, dtype="int32") /* ty=Tensor[(3), int32] */;
    %35 = cast(%var_2309, dtype="uint64") /* ty=Tensor[(6, 10, 5), uint64] */;
    %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %37 = left_shift(%35, %36) /* ty=Tensor[(6, 10, 5), uint64] */;
    (%37,)
  };
  %38(%var_2326) /* ty=(Tensor[(6, 10, 5), uint64],) */
}

def @func_3401(%var_3346: Tensor[(12, 11, 7), float32], %var_3363: Tensor[(126, 2), float32]) -> (Tensor[(12, 11, 7), uint32], Tensor[(12, 11, 7), float32], Tensor[(126, 2), float32], Tensor[(12, 4, 4), float64]) {
  %39 = @func_3052() /* ty=Tensor[(12, 1, 7), float32] */;
  %40 = cast(%39, dtype="uint32") /* ty=Tensor[(12, 1, 7), uint32] */;
  %41 = cast(%var_3346, dtype="uint32") /* ty=Tensor[(12, 11, 7), uint32] */;
  %42 = bitwise_xor(%40, %41) /* ty=Tensor[(12, 11, 7), uint32] */;
  %43 = cast(%42, dtype="float64") /* ty=Tensor[(12, 11, 7), float64] */;
  %44 = cast(%var_3346, dtype="int8") /* ty=Tensor[(12, 11, 7), int8] */;
  %45 = reshape(%43, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), float64] */;
  %46 = reshape(%44, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), int8] */;
  %47 = cast(%var_3363, dtype="float32") /* ty=Tensor[(126, 2), float32] */;
  %48 = reshape(%47, newshape=[252]) /* ty=Tensor[(252), float32] */;
  %49 = @func_3112(%48) /* ty=(Tensor[(12, 1, 7), float64], Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 4, 4), uint16], uint16) */;
  %50 = %49.3;
  %51 = cast(%50, dtype="float32") /* ty=Tensor[(12, 4, 4), float32] */;
  %52 = log2(%51) /* ty=Tensor[(12, 4, 4), float32] */;
  %53 = cast(%52, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
  %54 = @func_3323(%45, %46) /* ty=Tensor[(12, 11, 7), float32] */;
  %55 = rsqrt(%53) /* ty=Tensor[(12, 4, 4), float64] */;
  (%42, %54, %var_3363, %55)
}

def @func_4991(%var_4954: Tensor[(378, 4), float64]) -> (Tensor[(12, 1, 7), float32], Tensor[(1, 16, 7), uint64], Tensor[(112), uint64], uint16, Tensor[(504), float32], Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float32], Tensor[(378, 4), bool]) {
  %56 = cast(meta[relay.Constant][4] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %57 = cast(meta[relay.Constant][5] /* ty=Tensor[(112), uint64] */, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %58 = cast(%var_4954, dtype="float64") /* ty=Tensor[(378, 4), float64] */;
  %59 = cast(%var_4954, dtype="float32") /* ty=Tensor[(378, 4), float32] */;
  %60 = reshape(%56, newshape=[]) /* ty=uint64 */;
  %61 = reshape(%57, newshape=[1, 16, 7]) /* ty=Tensor[(1, 16, 7), uint64] */;
  %62 = reshape(%58, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %63 = reshape(%59, newshape=[1512]) /* ty=Tensor[(1512), float32] */;
  %64 = @func_2190(%60, %61, %62, %63) /* ty=(Tensor[(1, 16, 7), uint64], Tensor[(10, 14, 11), float32], Tensor[(1540), float64], Tensor[(12, 4, 4), uint16], Tensor[(1512), bool]) */;
  %65 = cast(meta[relay.Constant][6] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %66 = reshape(%65, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %67 = @func_2486(%66) /* ty=(Tensor[(12, 6, 7), bool], Tensor[(12, 4, 4), uint16], uint16, Tensor[(12, 1, 7), float32]) */;
  %68 = @func_4411() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %69 = @func_4159() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) */;
  %70 = cast(%var_4954, dtype="float64") /* ty=Tensor[(378, 4), float64] */;
  %71 = cast(meta[relay.Constant][4] /* ty=uint64 */, dtype="float64") /* ty=float64 */;
  %72 = add(%70, %71) /* ty=Tensor[(378, 4), float64] */;
  %73 = cast(%var_4954, dtype="bool") /* ty=Tensor[(378, 4), bool] */;
  %74 = shape_of(%72, dtype="int32") /* ty=Tensor[(2), int32] */;
  %75 = cast(%72, dtype="bool") /* ty=Tensor[(378, 4), bool] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %77 = @func_3232() /* ty=Tensor[(12, 1, 7), float32] */;
  %78 = %64.0;
  %79 = %67.2;
  %80 = %68.0;
  %81 = %69.0;
  %82 = less(%75, %76) /* ty=Tensor[(378, 4), bool] */;
  (%77, %78, meta[relay.Constant][5] /* ty=Tensor[(112), uint64] */, %79, meta[relay.Constant][6] /* ty=Tensor[(504), float32] */, %80, %81, %82)
}

def @func_2228() -> (Tensor[(12, 1, 7), float32],) {
  %83 = @func_2212() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %84 = %83.0;
  (%84,)
}

def @func_4244(%var_4229: Tensor[(637), int32]) -> (Tensor[(637), float64], Tensor[(637), float64]) {
  %85 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
  %86 = %85.0;
  %87 = cast(%var_4229, dtype="float64") /* ty=Tensor[(637), float64] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(1), int32] */;
  %89 = cast(%86, dtype="float64") /* ty=Tensor[(637), float64] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?), float64] */;
  %91 = cast(%86, dtype="float32") /* ty=Tensor[(637), float32] */;
  %92 = log2(%91) /* ty=Tensor[(637), float32] */;
  %93 = cast(%92, dtype="float64") /* ty=Tensor[(637), float64] */;
  %94 = divide(%89, %90) /* ty=Tensor[(637), float64] */;
  %95 = sqrt(%93) /* ty=Tensor[(637), float64] */;
  (%94, %95)
}

def @func_7434(%var_7432: Tensor[(14, 10, 6), float64], %var_7433: Tensor[(14, 10, 6), float64]) -> Tensor[(14, 10, 6), bool] {
  @func_7430(%var_7432, %var_7433) /* ty=Tensor[(14, 10, 6), bool] */
}

def @func_2304() -> (Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) {
  @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */
}

def @func_6430() -> (Tensor[(3, 84), float32], Tensor[(12, 1, 7), float32], Tensor[(637), uint64]) {
  %96 = @func_5252() /* ty=(Tensor[(3, 84), float32],) */;
  %97 = @func_4933() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %98 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %99 = %98.2;
  %100 = cast(%99, dtype="float32") /* ty=Tensor[(637), float32] */;
  %101 = exp(%100) /* ty=Tensor[(637), float32] */;
  %102 = cast(%99, dtype="uint64") /* ty=Tensor[(637), uint64] */;
  %103 = shape_of(%101, dtype="int32") /* ty=Tensor[(1), int32] */;
  %104 = cast(%101, dtype="uint64") /* ty=Tensor[(637), uint64] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %106 = right_shift(%104, %105) /* ty=Tensor[(637), uint64] */;
  %107 = cast(%99, dtype="uint64") /* ty=Tensor[(637), uint64] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(1), int32] */;
  %109 = cast(%106, dtype="uint64") /* ty=Tensor[(637), uint64] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %111 = %96.0;
  %112 = %97.0;
  %113 = logical_xor(%109, %110) /* ty=Tensor[(637), uint64] */;
  (%111, %112, %113)
}

def @func_6969() -> Tensor[(12, 1, 7), float64] {
  %114 = @func_3021() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %114.0
}

def @func_1282(%var_1280: Tensor[(6, 12, 4), float32], %var_1281: Tensor[(6, 12, 4), float32]) -> (Tensor[(6, 12, 4), float32],) {
  @func_1278(%var_1280, %var_1281) /* ty=(Tensor[(6, 12, 4), float32],) */
}

def @func_4592(%var_4590: Tensor[(4, 9, 11), float64], %var_4591: Tensor[(504), float32]) -> (Tensor[(4, 9, 11), float32], Tensor[(1512), float64], Tensor[(12, 1, 7), float32], Tensor[(504), float32], Tensor[(12, 1, 7), float32]) {
  %129 = fn (%var_4555: Tensor[(4, 9, 11), float64], %var_4577: Tensor[(504), float32]) -> (Tensor[(4, 9, 11), float32], Tensor[(1512), float64], Tensor[(12, 1, 7), float32], Tensor[(504), float32], Tensor[(12, 1, 7), float32]) {
    %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 9, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 9, 11), float64] */;
    %116 = shape_of(%var_4555, dtype="int32") /* ty=Tensor[(3), int32] */;
    %117 = cast(%var_4555, dtype="float64") /* ty=Tensor[(4, 9, 11), float64] */;
    %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %119 = mod(%117, %118) /* ty=Tensor[(4, 9, 11), float64] */;
    %120 = cast(%119, dtype="float32") /* ty=Tensor[(4, 9, 11), float32] */;
    %121 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
    %122 = cast(%var_4577, dtype="float32") /* ty=Tensor[(504), float32] */;
    %123 = reshape(%122, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
    %124 = @func_2486(%123) /* ty=(Tensor[(12, 6, 7), bool], Tensor[(12, 4, 4), uint16], uint16, Tensor[(12, 1, 7), float32]) */;
    %125 = sin(%120) /* ty=Tensor[(4, 9, 11), float32] */;
    %126 = %121.2;
    %127 = %124.3;
    %128 = @func_3232() /* ty=Tensor[(12, 1, 7), float32] */;
    (%125, %126, %127, %var_4577, %128)
  };
  %129(%var_4590, %var_4591) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(1512), float64], Tensor[(12, 1, 7), float32], Tensor[(504), float32], Tensor[(12, 1, 7), float32]) */
}

def @func_3115(%var_3113: Tensor[(252), float32]) -> (Tensor[(12, 1, 7), float64], Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 4, 4), uint16], uint16) {
  @func_3112(%var_3113) /* ty=(Tensor[(12, 1, 7), float64], Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 4, 4), uint16], uint16) */
}

def @func_5776() -> (Tensor[(12, 1, 7), float64], Tensor[(12, 15, 7), float64]) {
  %130 = @func_2369() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %131 = @func_5078() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 15, 7), int16], Tensor[(630, 2), float64], Tensor[(3, 84), float32]) */;
  %132 = %131.1;
  %133 = cast(%132, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
  %134 = %130.0;
  %135 = log10(%133) /* ty=Tensor[(12, 15, 7), float64] */;
  (%134, %135)
}

def @func_2155() -> Tensor[(12, 1, 7), float64] {
  %137 = fn () -> Tensor[(12, 1, 7), float64] {
    %136 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 1, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
    erf(%136) /* ty=Tensor[(12, 1, 7), float64] */
  };
  %137() /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_6749() -> Tensor[(?, 15, 3), int32] {
  %138 = @func_5242() /* ty=(Tensor[(?, 15, 3), int32], Tensor[(12, 14, 9), float64], Tensor[(?, 15, 3), float64]) */;
  %138.0
}

def @func_2488(%var_2487: Tensor[(12, 6, 7), float32]) -> (Tensor[(12, 6, 7), bool], Tensor[(12, 4, 4), uint16], uint16, Tensor[(12, 1, 7), float32]) {
  %160 = fn (%var_2431: Tensor[(12, 6, 7), float32]) -> (Tensor[(12, 6, 7), bool], Tensor[(12, 4, 4), uint16], uint16, Tensor[(12, 1, 7), float32]) {
    %139 = @func_2369() /* ty=(Tensor[(12, 1, 7), float64],) */;
    %140 = %139.0;
    %141 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
    %142 = cast(%141, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
    %143 = shape_of(%140, dtype="int32") /* ty=Tensor[(3), int32] */;
    %144 = cast(%140, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
    %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %146 = floor_mod(%144, %145) /* ty=Tensor[(12, ?, 7), float32] */;
    %147 = cast(%146, dtype="bool") /* ty=Tensor[(12, ?, 7), bool] */;
    %148 = cast(%var_2431, dtype="bool") /* ty=Tensor[(12, 6, 7), bool] */;
    %149 = cast(meta[relay.Constant][9] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %150 = reshape(%149, newshape=[]) /* ty=uint16 */;
    %151 = @func_1137(%150) /* ty=(Tensor[(12, 4, 4), uint16],) */;
    %152 = cast(%140, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
    %153 = log2(%152) /* ty=Tensor[(12, 1, 7), float32] */;
    %154 = cast(%153, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
    %155 = atanh(%154) /* ty=Tensor[(12, 1, 7), float64] */;
    %156 = cast(%155, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
    %157 = logical_and(%147, %148) /* ty=Tensor[(12, 6, 7), bool] */;
    %158 = %151.0;
    %159 = acosh(%156) /* ty=Tensor[(12, 1, 7), float32] */;
    (%157, %158, meta[relay.Constant][9] /* ty=uint16 */, %159)
  };
  %160(%var_2487) /* ty=(Tensor[(12, 6, 7), bool], Tensor[(12, 4, 4), uint16], uint16, Tensor[(12, 1, 7), float32]) */
}

def @func_5692() -> Tensor[(12, 1, 7), float64] {
  @func_5690() /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_4840() -> (Tensor[(12, 14, 9), float64],) {
  @func_4838() /* ty=(Tensor[(12, 14, 9), float64],) */
}

def @func_5408(%var_5395: Tensor[(924), float32], %var_5396: Tensor[(252), float32], %var_5399: Tensor[(143), float32], %var_5400: Tensor[(2145), float32]) -> (Tensor[(12, 1, 7), float32], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(10, 14, 11), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(3, 84), float32]) {
  %161 = @func_5039() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %162 = cast(%var_5395, dtype="float32") /* ty=Tensor[(924), float32] */;
  %163 = cast(%var_5396, dtype="float32") /* ty=Tensor[(252), float32] */;
  %164 = reshape(%162, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), float32] */;
  %165 = reshape(%163, newshape=[126, 2]) /* ty=Tensor[(126, 2), float32] */;
  %166 = @func_3401(%164, %165) /* ty=(Tensor[(12, 11, 7), uint32], Tensor[(12, 11, 7), float32], Tensor[(126, 2), float32], Tensor[(12, 4, 4), float64]) */;
  %167 = cast(%var_5399, dtype="float32") /* ty=Tensor[(143), float32] */;
  %168 = cast(%var_5400, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %169 = cast(1.05724f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %170 = cast(meta[relay.Constant][10] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %171 = reshape(%167, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
  %172 = reshape(%168, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), float32] */;
  %173 = reshape(%169, newshape=[]) /* ty=float64 */;
  %174 = reshape(%170, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %175 = @func_1829(%171, %172, %173, %174) /* ty=(Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) */;
  %176 = @func_4853() /* ty=(Tensor[(3, 84), float32],) */;
  %177 = %161.0;
  %178 = %166.2;
  %179 = %175.5;
  %180 = %176.0;
  (%177, %178, %var_5395, %var_5396, %179, %var_5399, %var_5400, 1.05724f64 /* ty=float64 */, meta[relay.Constant][10] /* ty=Tensor[(1512), float64] */, %180)
}

def @func_3323(%var_3303: Tensor[(12, 11, 7), float64], %var_3312: Tensor[(12, 11, 7), int8]) -> Tensor[(12, 11, 7), float32] {
  %181 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
  %182 = cast(%181, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
  %183 = cast(%var_3303, dtype="bool") /* ty=Tensor[(12, 11, 7), bool] */;
  %184 = greater(%182, %183) /* ty=Tensor[(12, 11, 7), bool] */;
  %185 = cast(%var_3303, dtype="int8") /* ty=Tensor[(12, 11, 7), int8] */;
  %186 = shape_of(%184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %187 = cast(%184, dtype="int8") /* ty=Tensor[(12, 11, 7), int8] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %189 = bitwise_and(%187, %188) /* ty=Tensor[(12, 11, 7), int8] */;
  %190 = cast(%var_3312, dtype="float32") /* ty=Tensor[(12, 11, 7), float32] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%189, dtype="float32") /* ty=Tensor[(12, 11, 7), float32] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%192, %193) /* ty=Tensor[(12, 11, 7), float32] */
}

def @func_5122() -> Tensor[(637), bool] {
  %194 = @func_2728() /* ty=(Tensor[(637), int32],) */;
  %195 = %194.0;
  %196 = cast(meta[relay.Constant][11] /* ty=Tensor[(637), int32] */, dtype="float32") /* ty=Tensor[(637), float32] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(1), int32] */;
  %198 = cast(%195, dtype="float32") /* ty=Tensor[(637), float32] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?), float32] */;
  %200 = mod(%198, %199) /* ty=Tensor[(637), float32] */;
  %201 = cast(%200, dtype="bool") /* ty=Tensor[(637), bool] */;
  %202 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(637), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %203 = cast(meta[relay.Constant][11] /* ty=Tensor[(637), int32] */, dtype="bool") /* ty=Tensor[(637), bool] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?), bool] */;
  not_equal(%203, %204) /* ty=Tensor[(637), bool] */
}

def @func_3637(%var_3635: Tensor[(112), uint64], %var_3636: Tensor[(252), float32]) -> (Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(7, 13, 7), bool], Tensor[(1512), bool], Tensor[(112), uint64], Tensor[(12, 1, 7), float32], Tensor[(252), float32], Tensor[(252), float32], Tensor[(12, 14, 9), bool], Tensor[(1, 637), float32]) {
  @func_3633(%var_3635, %var_3636) /* ty=(Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(7, 13, 7), bool], Tensor[(1512), bool], Tensor[(112), uint64], Tensor[(12, 1, 7), float32], Tensor[(252), float32], Tensor[(252), float32], Tensor[(12, 14, 9), bool], Tensor[(1, 637), float32]) */
}

def @func_4811(%var_4810: Tensor[(12, 14, 7), float64]) -> (Tensor[(12, 14, 7), uint32],) {
  %210 = fn (%var_4803: Tensor[(12, 14, 7), float64]) -> (Tensor[(12, 14, 7), uint32],) {
    %205 = @func_3021() /* ty=(Tensor[(12, 1, 7), float64],) */;
    %206 = %205.0;
    %207 = cast(%206, dtype="uint32") /* ty=Tensor[(12, 1, 7), uint32] */;
    %208 = cast(%var_4803, dtype="uint32") /* ty=Tensor[(12, 14, 7), uint32] */;
    %209 = logical_xor(%207, %208) /* ty=Tensor[(12, 14, 7), uint32] */;
    (%209,)
  };
  %210(%var_4810) /* ty=(Tensor[(12, 14, 7), uint32],) */
}

def @func_4757(%var_4756: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 1, 7), float32], Tensor[(6, 10, 5), uint64], Tensor[(300), uint64], Tensor[(12, 1, 7), float32], Tensor[(12, 3, 7), bool]) {
  %223 = fn (%var_4744: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 1, 7), float32], Tensor[(6, 10, 5), uint64], Tensor[(300), uint64], Tensor[(12, 1, 7), float32], Tensor[(12, 3, 7), bool]) {
    %211 = cast(meta[relay.Constant][12] /* ty=Tensor[(300), uint64] */, dtype="uint64") /* ty=Tensor[(300), uint64] */;
    %212 = reshape(%211, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), uint64] */;
    %213 = @func_2325(%212) /* ty=(Tensor[(6, 10, 5), uint64],) */;
    %214 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
    %215 = @func_3656() /* ty=(Tensor[(12, 1, 7), float32],) */;
    %216 = %215.0;
    %217 = cast(%216, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
    %218 = cast(%var_4744, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
    %219 = @func_3052() /* ty=Tensor[(12, 1, 7), float32] */;
    %220 = %213.0;
    %221 = %214.1;
    %222 = greater_equal(%217, %218) /* ty=Tensor[(12, 3, 7), bool] */;
    (%219, %220, meta[relay.Constant][12] /* ty=Tensor[(300), uint64] */, %221, %222)
  };
  %223(%var_4756) /* ty=(Tensor[(12, 1, 7), float32], Tensor[(6, 10, 5), uint64], Tensor[(300), uint64], Tensor[(12, 1, 7), float32], Tensor[(12, 3, 7), bool]) */
}

def @func_6353(%var_6346: Tensor[(252), float32], %var_6347: Tensor[(4, 64), uint64], %var_6348: Tensor[(1560), float64], %var_6349: Tensor[(154, 6), float32], %var_6350: Tensor[(2145), float32], %var_6351: float64, %var_6352: Tensor[(300), uint64]) -> (Tensor[(12, 14, 9), float64], Tensor[(12, 14, 9), float32], Tensor[(252), float32], Tensor[(4, 64), uint64], Tensor[(1560), float64], Tensor[(3, 84), float32], Tensor[(154, 6), float32], Tensor[(143), float32], Tensor[(2145), float32], Tensor[(13, 15, 8), float32], Tensor[(12, 1, 7), float64], Tensor[(1260), float32], float64, Tensor[(1176), float32], Tensor[(300), uint64]) {
  %266 = fn (%var_6276: Tensor[(252), float32], %var_6277: Tensor[(4, 64), uint64], %var_6295: Tensor[(1560), float64], %var_6309: Tensor[(154, 6), float32], %var_6311: Tensor[(2145), float32], %var_6323: float64, %var_6325: Tensor[(300), uint64]) -> (Tensor[(12, 14, 9), float64], Tensor[(12, 14, 9), float32], Tensor[(252), float32], Tensor[(4, 64), uint64], Tensor[(1560), float64], Tensor[(3, 84), float32], Tensor[(154, 6), float32], Tensor[(143), float32], Tensor[(2145), float32], Tensor[(13, 15, 8), float32], Tensor[(12, 1, 7), float64], Tensor[(1260), float32], float64, Tensor[(1176), float32], Tensor[(300), uint64]) {
    %224 = @func_5242() /* ty=(Tensor[(?, 15, 3), int32], Tensor[(12, 14, 9), float64], Tensor[(?, 15, 3), float64]) */;
    %225 = cast(%var_6276, dtype="float32") /* ty=Tensor[(252), float32] */;
    %226 = cast(%var_6277, dtype="uint64") /* ty=Tensor[(4, 64), uint64] */;
    %227 = reshape(%225, newshape=[252]) /* ty=Tensor[(252), float32] */;
    %228 = reshape(%226, newshape=[256]) /* ty=Tensor[(256), uint64] */;
    %229 = @func_3519(%227, %228) /* ty=(Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 14, 9), bool], Tensor[(12, 14, 9), float32], Tensor[(12, 14, 9), bool], Tensor[(256), uint64]) */;
    %230 = cast(%var_6309, dtype="float32") /* ty=Tensor[(154, 6), float32] */;
    %231 = cast(%var_6276, dtype="float32") /* ty=Tensor[(252), float32] */;
    %232 = cast(meta[relay.Constant][13] /* ty=Tensor[(143), float32] */, dtype="float32") /* ty=Tensor[(143), float32] */;
    %233 = cast(%var_6311, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %234 = reshape(%230, newshape=[924]) /* ty=Tensor[(924), float32] */;
    %235 = reshape(%231, newshape=[252]) /* ty=Tensor[(252), float32] */;
    %236 = reshape(%232, newshape=[143]) /* ty=Tensor[(143), float32] */;
    %237 = reshape(%233, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
    %238 = @func_5408(%234, %235, %236, %237) /* ty=(Tensor[(12, 1, 7), float32], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(10, 14, 11), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(3, 84), float32]) */;
    %239 = cast(%var_6295, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %240 = reshape(%239, newshape=[13, 15, 8]) /* ty=Tensor[(13, 15, 8), float64] */;
    %241 = @func_5545(%240) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(1540), float64], Tensor[(256), uint64]) */;
    %242 = %241.0;
    %243 = cast(%242, dtype="float32") /* ty=Tensor[(13, 15, 8), float32] */;
    %244 = cast(meta[relay.Constant][14] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %245 = cast(meta[relay.Constant][14] /* ty=Tensor[(1260), float32] */, dtype="bool") /* ty=Tensor[(1260), bool] */;
    %246 = cast(meta[relay.Constant][13] /* ty=Tensor[(143), float32] */, dtype="float32") /* ty=Tensor[(143), float32] */;
    %247 = cast(%var_6311, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %248 = cast(%var_6323, dtype="float64") /* ty=float64 */;
    %249 = %238.9;
    %250 = cast(%249, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
    %251 = cast(meta[relay.Constant][15] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %252 = cast(%var_6325, dtype="uint64") /* ty=Tensor[(300), uint64] */;
    %253 = reshape(%244, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float32] */;
    %254 = reshape(%245, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), bool] */;
    %255 = reshape(%246, newshape=[143]) /* ty=Tensor[(143), float32] */;
    %256 = reshape(%247, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
    %257 = reshape(%248, newshape=[]) /* ty=float64 */;
    %258 = reshape(%250, newshape=[252]) /* ty=Tensor[(252), float32] */;
    %259 = reshape(%251, newshape=[12, 14, 7]) /* ty=Tensor[(12, 14, 7), float32] */;
    %260 = reshape(%252, newshape=[150, 2]) /* ty=Tensor[(150, 2), uint64] */;
    %261 = @func_3954(%253, %254, %255, %256, %257, %258, %259, %260) /* ty=(Tensor[(12, 15, 7), uint64], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(12, 14, 7), bool], Tensor[(256, 1), uint64], Tensor[(12, ?, 7), float32], Tensor[(6, 10, 5), uint64], Tensor[(150, 2), uint64], Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) */;
    %262 = %224.1;
    %263 = %229.3;
    %264 = atan(%243) /* ty=Tensor[(13, 15, 8), float32] */;
    %265 = %261.15;
    (%262, %263, %var_6276, %var_6277, %var_6295, %249, %var_6309, meta[relay.Constant][13] /* ty=Tensor[(143), float32] */, %var_6311, %264, %265, meta[relay.Constant][14] /* ty=Tensor[(1260), float32] */, %var_6323, meta[relay.Constant][15] /* ty=Tensor[(1176), float32] */, %var_6325)
  };
  %266(%var_6346, %var_6347, %var_6348, %var_6349, %var_6350, %var_6351, %var_6352) /* ty=(Tensor[(12, 14, 9), float64], Tensor[(12, 14, 9), float32], Tensor[(252), float32], Tensor[(4, 64), uint64], Tensor[(1560), float64], Tensor[(3, 84), float32], Tensor[(154, 6), float32], Tensor[(143), float32], Tensor[(2145), float32], Tensor[(13, 15, 8), float32], Tensor[(12, 1, 7), float64], Tensor[(1260), float32], float64, Tensor[(1176), float32], Tensor[(300), uint64]) */
}

def @func_3198(%var_3197: Tensor[(12, 13, 7), float32]) -> (Tensor[(12, 13, 7), bool], Tensor[(12, 1, 7), float64]) {
  %276 = fn (%var_3159: Tensor[(12, 13, 7), float32]) -> (Tensor[(12, 13, 7), bool], Tensor[(12, 1, 7), float64]) {
    %267 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
    %268 = cast(%267, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
    %269 = cast(%var_3159, dtype="bool") /* ty=Tensor[(12, 13, 7), bool] */;
    %270 = equal(%268, %269) /* ty=Tensor[(12, 13, 7), bool] */;
    %271 = cast(%267, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
    %272 = cast(%270, dtype="bool") /* ty=Tensor[(12, 13, 7), bool] */;
    %273 = cast(%267, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
    %274 = greater(%271, %272) /* ty=Tensor[(12, 13, 7), bool] */;
    %275 = sinh(%273) /* ty=Tensor[(12, 1, 7), float64] */;
    (%274, %275)
  };
  %276(%var_3197) /* ty=(Tensor[(12, 13, 7), bool], Tensor[(12, 1, 7), float64]) */
}

def @func_3022() -> (Tensor[(12, 1, 7), float64],) {
  %279 = fn () -> (Tensor[(12, 1, 7), float64],) {
    %277 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
    %278 = %277.0;
    (%278,)
  };
  %279() /* ty=(Tensor[(12, 1, 7), float64],) */
}

def @func_4297(%var_4295: Tensor[(6, 15, 9), float32]) -> (Tensor[(6, 15, 9), float32], Tensor[(12, 1, 7), float64], Tensor[(12, 1, 7), float32], Tensor[(504), float32], Tensor[(1, 576), int32]) {
  @func_4294(%var_4295) /* ty=(Tensor[(6, 15, 9), float32], Tensor[(12, 1, 7), float64], Tensor[(12, 1, 7), float32], Tensor[(504), float32], Tensor[(1, 576), int32]) */
}

def @func_3427(%var_3426: Tensor[(12, 14, 7), float32]) -> Tensor[(12, 14, 7), int8] {
  %283 = fn (%var_3417: Tensor[(12, 14, 7), float32]) -> Tensor[(12, 14, 7), int8] {
    %280 = @func_3232() /* ty=Tensor[(12, 1, 7), float32] */;
    %281 = cast(%280, dtype="int8") /* ty=Tensor[(12, 1, 7), int8] */;
    %282 = cast(%var_3417, dtype="int8") /* ty=Tensor[(12, 14, 7), int8] */;
    add(%281, %282) /* ty=Tensor[(12, 14, 7), int8] */
  };
  %283(%var_3426) /* ty=Tensor[(12, 14, 7), int8] */
}

def @func_3741(%var_3718: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), int8], Tensor[(637), int32]) {
  %284 = @func_2228() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %285 = %284.0;
  %286 = cast(%285, dtype="int8") /* ty=Tensor[(12, 1, 7), int8] */;
  %287 = cast(%var_3718, dtype="int8") /* ty=Tensor[(12, 3, 7), int8] */;
  %288 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %289 = left_shift(%286, %287) /* ty=Tensor[(12, 3, 7), int8] */;
  %290 = %288.2;
  (%289, %290)
}

def @func_3112(%var_3095: Tensor[(252), float32]) -> (Tensor[(12, 1, 7), float64], Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 4, 4), uint16], uint16) {
  %291 = @func_2212() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %292 = %291.0;
  %293 = cast(%292, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
  %294 = cast(%var_3095, dtype="float32") /* ty=Tensor[(252), float32] */;
  %295 = reshape(%294, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
  %296 = @func_3078(%295) /* ty=(Tensor[(12, 3, 7), int64],) */;
  %297 = cast(meta[relay.Constant][16] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %298 = reshape(%297, newshape=[]) /* ty=uint16 */;
  %299 = @func_1137(%298) /* ty=(Tensor[(12, 4, 4), uint16],) */;
  %300 = acos(%293) /* ty=Tensor[(12, 1, 7), float64] */;
  %301 = %296.0;
  %302 = %299.0;
  (%300, %301, %var_3095, %302, meta[relay.Constant][16] /* ty=uint16 */)
}

def @func_2999() -> (Tensor[(637), int32], Tensor[(12, 1, 7), float32]) {
  %307 = fn () -> (Tensor[(637), int32], Tensor[(12, 1, 7), float32]) {
    %303 = @func_2728() /* ty=(Tensor[(637), int32],) */;
    %304 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
    %305 = %303.0;
    %306 = %304.0;
    (%305, %306)
  };
  %307() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */
}

def @func_3031() -> (Tensor[(12, 14, 9), bool],) {
  @func_3029() /* ty=(Tensor[(12, 14, 9), bool],) */
}

def @func_3405(%var_3403: Tensor[(12, 11, 7), float32], %var_3404: Tensor[(126, 2), float32]) -> (Tensor[(12, 11, 7), uint32], Tensor[(12, 11, 7), float32], Tensor[(126, 2), float32], Tensor[(12, 4, 4), float64]) {
  @func_3401(%var_3403, %var_3404) /* ty=(Tensor[(12, 11, 7), uint32], Tensor[(12, 11, 7), float32], Tensor[(126, 2), float32], Tensor[(12, 4, 4), float64]) */
}

def @func_2195(%var_2191: uint64, %var_2192: Tensor[(1, 16, 7), uint64], %var_2193: Tensor[(1512), float64], %var_2194: Tensor[(1512), float32]) -> (Tensor[(1, 16, 7), uint64], Tensor[(10, 14, 11), float32], Tensor[(1540), float64], Tensor[(12, 4, 4), uint16], Tensor[(1512), bool]) {
  %332 = fn (%var_2163: uint64, %var_2164: Tensor[(1, 16, 7), uint64], %var_2174: Tensor[(1512), float64], %var_2185: Tensor[(1512), float32]) -> (Tensor[(1, 16, 7), uint64], Tensor[(10, 14, 11), float32], Tensor[(1540), float64], Tensor[(12, 4, 4), uint16], Tensor[(1512), bool]) {
    %308 = cast(%var_2163, dtype="uint64") /* ty=uint64 */;
    %309 = cast(%var_2164, dtype="uint64") /* ty=Tensor[(1, 16, 7), uint64] */;
    %310 = cast(%var_2163, dtype="float64") /* ty=float64 */;
    %311 = cast(meta[relay.Constant][17] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
    %312 = cast(%var_2174, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %313 = reshape(%310, newshape=[]) /* ty=float64 */;
    %314 = reshape(%311, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float64] */;
    %315 = reshape(%312, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
    %316 = @func_804(%313, %314, %315) /* ty=(Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) */;
    %317 = cast(%var_2163, dtype="uint16") /* ty=uint16 */;
    %318 = reshape(%317, newshape=[]) /* ty=uint16 */;
    %319 = @func_1137(%318) /* ty=(Tensor[(12, 4, 4), uint16],) */;
    %320 = cast(%var_2174, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %321 = exp(%320) /* ty=Tensor[(1512), float64] */;
    %322 = cast(%321, dtype="float32") /* ty=Tensor[(1512), float32] */;
    %323 = atan(%322) /* ty=Tensor[(1512), float32] */;
    %324 = cast(%var_2185, dtype="bool") /* ty=Tensor[(1512), bool] */;
    %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(1), int32] */;
    %326 = cast(%323, dtype="bool") /* ty=Tensor[(1512), bool] */;
    %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?), bool] */;
    %328 = maximum(%308, %309) /* ty=Tensor[(1, 16, 7), uint64] */;
    %329 = %316.2;
    %330 = %319.0;
    %331 = less_equal(%326, %327) /* ty=Tensor[(1512), bool] */;
    (%328, %329, meta[relay.Constant][17] /* ty=Tensor[(1540), float64] */, %330, %331)
  };
  %332(%var_2191, %var_2192, %var_2193, %var_2194) /* ty=(Tensor[(1, 16, 7), uint64], Tensor[(10, 14, 11), float32], Tensor[(1540), float64], Tensor[(12, 4, 4), uint16], Tensor[(1512), bool]) */
}

def @func_1667(%var_1665: Tensor[(7, 13, 7), int32], %var_1666: Tensor[(7, 13, 7), int32]) -> (Tensor[(12, 4, 4), float64], Tensor[(7, 13, 7), bool]) {
  %352 = fn (%var_1634: Tensor[(7, 13, 7), int32], %var_1635: Tensor[(7, 13, 7), int32]) -> (Tensor[(12, 4, 4), float64], Tensor[(7, 13, 7), bool]) {
    %333 = cast(meta[relay.Constant][18] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %334 = reshape(%333, newshape=[]) /* ty=uint16 */;
    %335 = @func_1137(%334) /* ty=(Tensor[(12, 4, 4), uint16],) */;
    %336 = %335.0;
    %337 = cast(%336, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
    %338 = cast(meta[relay.Constant][18] /* ty=uint16 */, dtype="float64") /* ty=float64 */;
    %339 = cast(%var_1635, dtype="int32") /* ty=Tensor[(7, 13, 7), int32] */;
    %340 = shape_of(%var_1634, dtype="int32") /* ty=Tensor[(3), int32] */;
    %341 = cast(%var_1634, dtype="int32") /* ty=Tensor[(7, 13, 7), int32] */;
    %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %343 = bitwise_xor(%341, %342) /* ty=Tensor[(7, 13, 7), int32] */;
    %344 = cast(%343, dtype="float64") /* ty=Tensor[(7, 13, 7), float64] */;
    %345 = sinh(%344) /* ty=Tensor[(7, 13, 7), float64] */;
    %346 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 13, 7), float64] */, dtype="bool") /* ty=Tensor[(7, 13, 7), bool] */;
    %347 = shape_of(%345, dtype="int32") /* ty=Tensor[(3), int32] */;
    %348 = cast(%345, dtype="bool") /* ty=Tensor[(7, 13, 7), bool] */;
    %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %350 = mod(%337, %338) /* ty=Tensor[(12, 4, 4), float64] */;
    %351 = greater(%348, %349) /* ty=Tensor[(7, 13, 7), bool] */;
    (%350, %351)
  };
  %352(%var_1665, %var_1666) /* ty=(Tensor[(12, 4, 4), float64], Tensor[(7, 13, 7), bool]) */
}

def @func_5908(%var_5906: Tensor[(1092, 1), float32], %var_5907: Tensor[(1092, 9), float32]) -> (Tensor[(12, 14, 9), float64], Tensor[(12, 1, 7), float64], Tensor[(1092, 9), bool], Tensor[(12, 11, 7), float32], Tensor[(924), float64]) {
  %367 = fn (%var_5895: Tensor[(1092, 1), float32], %var_5897: Tensor[(1092, 9), float32]) -> (Tensor[(12, 14, 9), float64], Tensor[(12, 1, 7), float64], Tensor[(1092, 9), bool], Tensor[(12, 11, 7), float32], Tensor[(924), float64]) {
    %353 = @func_4838() /* ty=(Tensor[(12, 14, 9), float64],) */;
    %354 = cast(%var_5895, dtype="float32") /* ty=Tensor[(1092, 1), float32] */;
    %355 = reshape(%354, newshape=[12, 13, 7]) /* ty=Tensor[(12, 13, 7), float32] */;
    %356 = @func_3196(%355) /* ty=(Tensor[(12, 13, 7), bool], Tensor[(12, 1, 7), float64]) */;
    %357 = cast(%var_5895, dtype="bool") /* ty=Tensor[(1092, 1), bool] */;
    %358 = cast(%var_5897, dtype="bool") /* ty=Tensor[(1092, 9), bool] */;
    %359 = cast(meta[relay.Constant][20] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %360 = cast(meta[relay.Constant][20] /* ty=Tensor[(924), float64] */, dtype="int8") /* ty=Tensor[(924), int8] */;
    %361 = reshape(%359, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), float64] */;
    %362 = reshape(%360, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), int8] */;
    %363 = %353.0;
    %364 = %356.1;
    %365 = greater_equal(%357, %358) /* ty=Tensor[(1092, 9), bool] */;
    %366 = @func_3323(%361, %362) /* ty=Tensor[(12, 11, 7), float32] */;
    (%363, %364, %365, %366, meta[relay.Constant][20] /* ty=Tensor[(924), float64] */)
  };
  %367(%var_5906, %var_5907) /* ty=(Tensor[(12, 14, 9), float64], Tensor[(12, 1, 7), float64], Tensor[(1092, 9), bool], Tensor[(12, 11, 7), float32], Tensor[(924), float64]) */
}

def @func_1278(%var_1268: Tensor[(6, 12, 4), float32], %var_1269: Tensor[(6, 12, 4), float32]) -> (Tensor[(6, 12, 4), float32],) {
  %368 = cast(%var_1269, dtype="float32") /* ty=Tensor[(6, 12, 4), float32] */;
  %369 = shape_of(%var_1268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%var_1268, dtype="float32") /* ty=Tensor[(6, 12, 4), float32] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %372 = minimum(%370, %371) /* ty=Tensor[(6, 12, 4), float32] */;
  (%372,)
}

def @func_4043() -> Tensor[(1512), float64] {
  @func_4041() /* ty=Tensor[(1512), float64] */
}

def @func_4507() -> Tensor[(12, 1, 7), float32] {
  %373 = fn () -> Tensor[(12, 1, 7), float32] {
    @func_3232() /* ty=Tensor[(12, 1, 7), float32] */
  };
  %373() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_2252() -> Tensor[(12, 1, 7), float64] {
  %374 = fn () -> Tensor[(12, 1, 7), float64] {
    @func_2154() /* ty=Tensor[(12, 1, 7), float64] */
  };
  %374() /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_3029() -> (Tensor[(12, 14, 9), bool],) {
  %375 = @func_2345() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %376 = %375.0;
  (%376,)
}

def @func_4159() -> (Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) {
  %377 = @func_2228() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %378 = %377.0;
  %379 = @func_2251() /* ty=Tensor[(12, 1, 7), float64] */;
  (%378, %379)
}

def @func_6432() -> (Tensor[(3, 84), float32], Tensor[(12, 1, 7), float32], Tensor[(637), uint64]) {
  @func_6430() /* ty=(Tensor[(3, 84), float32], Tensor[(12, 1, 7), float32], Tensor[(637), uint64]) */
}

def @func_3234() -> Tensor[(12, 1, 7), float32] {
  @func_3232() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_7430(%var_7425: Tensor[(14, 10, 6), float64], %var_7426: Tensor[(14, 10, 6), float64]) -> Tensor[(14, 10, 6), bool] {
  %380 = cast(%var_7426, dtype="bool") /* ty=Tensor[(14, 10, 6), bool] */;
  %381 = shape_of(%var_7425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%var_7425, dtype="bool") /* ty=Tensor[(14, 10, 6), bool] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%382, %383) /* ty=Tensor[(14, 10, 6), bool] */
}

def @func_7190() -> (Tensor[(12, 1, 7), float32],) {
  %384 = @func_5039() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %385 = %384.0;
  (%385,)
}

def @func_1474(%var_1451: Tensor[(2, 8, 16), uint64]) -> (Tensor[(2, 8, 16), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1, 1512), float64], Tensor[(12, 14, 9), bool]) {
  %386 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 8, 16), uint64] */, dtype="bool") /* ty=Tensor[(2, 8, 16), bool] */;
  %387 = shape_of(%var_1451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%var_1451, dtype="bool") /* ty=Tensor[(2, 8, 16), bool] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %390 = less_equal(%388, %389) /* ty=Tensor[(2, 8, 16), bool] */;
  %391 = cast(%390, dtype="float64") /* ty=Tensor[(2, 8, 16), float64] */;
  %392 = cast(0.74052f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %393 = cast(meta[relay.Constant][22] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %394 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 1512), float64] */, dtype="float64") /* ty=Tensor[(1, 1512), float64] */;
  %395 = reshape(%392, newshape=[]) /* ty=float64 */;
  %396 = reshape(%393, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float64] */;
  %397 = reshape(%394, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %398 = @func_804(%395, %396, %397) /* ty=(Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) */;
  %399 = cast(0.74052f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %400 = cast(meta[relay.Constant][22] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %401 = %398.0;
  %402 = cast(%401, dtype="float64") /* ty=Tensor[(12, 14, 9), float64] */;
  %403 = reshape(%399, newshape=[]) /* ty=float64 */;
  %404 = reshape(%400, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float64] */;
  %405 = reshape(%402, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %406 = @func_804(%403, %404, %405) /* ty=(Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) */;
  %407 = acosh(%391) /* ty=Tensor[(2, 8, 16), float64] */;
  %408 = %406.0;
  (%407, %401, 0.74052f64 /* ty=float64 */, meta[relay.Constant][22] /* ty=Tensor[(1540), float64] */, meta[relay.Constant][23] /* ty=Tensor[(1, 1512), float64] */, %408)
}

def @func_5690() -> Tensor[(12, 1, 7), float64] {
  @func_2154() /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_7383() -> (Tensor[(12, 1, 7), float64], Tensor[(12, 1, 7), float64]) {
  %409 = @func_5278() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %410 = @func_5776() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(12, 15, 7), float64]) */;
  %411 = %409.0;
  %412 = %410.0;
  (%411, %412)
}

def @func_2729() -> (Tensor[(637), int32],) {
  %415 = fn () -> (Tensor[(637), int32],) {
    %413 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
    %414 = %413.2;
    (%414,)
  };
  %415() /* ty=(Tensor[(637), int32],) */
}

def @func_7267() -> Tensor[(12, 1, 7), float64] {
  @func_7265() /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_4247(%var_4245: Tensor[(637), int32]) -> (Tensor[(637), float64], Tensor[(637), float64]) {
  @func_4244(%var_4245) /* ty=(Tensor[(637), float64], Tensor[(637), float64]) */
}

def @func_620(%var_618: Tensor[(12, 14, 9), float64]) -> (Tensor[(12, 14, 9), uint32], Tensor[(12, 14, 9), bool]) {
  @func_617(%var_618) /* ty=(Tensor[(12, 14, 9), uint32], Tensor[(12, 14, 9), bool]) */
}

def @func_5278() -> (Tensor[(12, 1, 7), float64],) {
  %416 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
  (%416,)
}

def @func_4602() -> (Tensor[(637), int32],) {
  %419 = fn () -> (Tensor[(637), int32],) {
    %417 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
    %418 = %417.0;
    (%418,)
  };
  %419() /* ty=(Tensor[(637), int32],) */
}

def @func_1139(%var_1138: uint16) -> (Tensor[(12, 4, 4), uint16],) {
  %423 = fn (%var_1130: uint16) -> (Tensor[(12, 4, 4), uint16],) {
    %420 = cast(%var_1130, dtype="uint16") /* ty=uint16 */;
    %421 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 4, 4), uint16] */, dtype="uint16") /* ty=Tensor[(12, 4, 4), uint16] */;
    %422 = bitwise_and(%420, %421) /* ty=Tensor[(12, 4, 4), uint16] */;
    (%422,)
  };
  %423(%var_1138) /* ty=(Tensor[(12, 4, 4), uint16],) */
}

def @func_3963(%var_3955: Tensor[(12, 15, 7), float32], %var_3956: Tensor[(12, 15, 7), bool], %var_3957: Tensor[(143), float32], %var_3958: Tensor[(2145), float32], %var_3959: float64, %var_3960: Tensor[(252), float32], %var_3961: Tensor[(12, 14, 7), float32], %var_3962: Tensor[(150, 2), uint64]) -> (Tensor[(12, 15, 7), uint64], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(12, 14, 7), bool], Tensor[(256, 1), uint64], Tensor[(12, ?, 7), float32], Tensor[(6, 10, 5), uint64], Tensor[(150, 2), uint64], Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) {
  %473 = fn (%var_3801: Tensor[(12, 15, 7), float32], %var_3814: Tensor[(12, 15, 7), bool], %var_3855: Tensor[(143), float32], %var_3856: Tensor[(2145), float32], %var_3857: float64, %var_3865: Tensor[(252), float32], %var_3867: Tensor[(12, 14, 7), float32], %var_3893: Tensor[(150, 2), uint64]) -> (Tensor[(12, 15, 7), uint64], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(12, 14, 7), bool], Tensor[(256, 1), uint64], Tensor[(12, ?, 7), float32], Tensor[(6, 10, 5), uint64], Tensor[(150, 2), uint64], Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) {
    %424 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
    %425 = cast(%424, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
    %426 = cast(%var_3801, dtype="bool") /* ty=Tensor[(12, 15, 7), bool] */;
    %427 = greater_equal(%425, %426) /* ty=Tensor[(12, 15, 7), bool] */;
    %428 = cast(%427, dtype="bool") /* ty=Tensor[(12, 15, 7), bool] */;
    %429 = cast(%424, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
    %430 = less(%428, %429) /* ty=Tensor[(12, 15, 7), bool] */;
    %431 = cast(%var_3814, dtype="uint64") /* ty=Tensor[(12, 15, 7), uint64] */;
    %432 = shape_of(%430, dtype="int32") /* ty=Tensor[(3), int32] */;
    %433 = cast(%430, dtype="uint64") /* ty=Tensor[(12, 15, 7), uint64] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %435 = cast(%var_3855, dtype="float32") /* ty=Tensor[(143), float32] */;
    %436 = cast(%var_3856, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %437 = cast(%var_3857, dtype="float64") /* ty=float64 */;
    %438 = cast(meta[relay.Constant][25] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %439 = reshape(%435, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
    %440 = reshape(%436, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), float32] */;
    %441 = reshape(%437, newshape=[]) /* ty=float64 */;
    %442 = reshape(%438, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
    %443 = @func_1829(%439, %440, %441, %442) /* ty=(Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) */;
    %444 = cast(meta[relay.Constant][26] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
    %445 = cast(%var_3865, dtype="float32") /* ty=Tensor[(252), float32] */;
    %446 = reshape(%444, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), float32] */;
    %447 = reshape(%445, newshape=[126, 2]) /* ty=Tensor[(126, 2), float32] */;
    %448 = @func_3401(%446, %447) /* ty=(Tensor[(12, 11, 7), uint32], Tensor[(12, 11, 7), float32], Tensor[(126, 2), float32], Tensor[(12, 4, 4), float64]) */;
    %449 = cast(%424, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
    %450 = cast(%var_3867, dtype="bool") /* ty=Tensor[(12, 14, 7), bool] */;
    %451 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
    %452 = cast(%424, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
    %453 = sin(%452) /* ty=Tensor[(12, 1, 7), float32] */;
    %454 = cast(%453, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
    %455 = cosh(%454) /* ty=Tensor[(12, 1, 7), float32] */;
    %456 = cast(%453, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
    %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
    %458 = cast(%455, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
    %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %460 = cast(%var_3893, dtype="uint64") /* ty=Tensor[(150, 2), uint64] */;
    %461 = reshape(%460, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), uint64] */;
    %462 = @func_2325(%461) /* ty=(Tensor[(6, 10, 5), uint64],) */;
    %463 = cast(%453, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
    %464 = maximum(%433, %434) /* ty=Tensor[(12, 15, 7), uint64] */;
    %465 = %443.6;
    %466 = %448.2;
    %467 = greater_equal(%449, %450) /* ty=Tensor[(12, 14, 7), bool] */;
    %468 = %451.4;
    %469 = subtract(%458, %459) /* ty=Tensor[(12, ?, 7), float32] */;
    %470 = %462.0;
    %471 = exp(%463) /* ty=Tensor[(12, 1, 7), float32] */;
    %472 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
    (%464, %465, %var_3855, %var_3856, %var_3857, meta[relay.Constant][25] /* ty=Tensor[(1512), float64] */, %466, meta[relay.Constant][26] /* ty=Tensor[(924), float32] */, %var_3865, %467, %468, %469, %470, %var_3893, %471, %472)
  };
  %473(%var_3955, %var_3956, %var_3957, %var_3958, %var_3959, %var_3960, %var_3961, %var_3962) /* ty=(Tensor[(12, 15, 7), uint64], Tensor[(1, 11, 13), float32], Tensor[(143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(126, 2), float32], Tensor[(924), float32], Tensor[(252), float32], Tensor[(12, 14, 7), bool], Tensor[(256, 1), uint64], Tensor[(12, ?, 7), float32], Tensor[(6, 10, 5), uint64], Tensor[(150, 2), uint64], Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) */
}

def @func_5596(%var_5594: Tensor[(1512), float64]) -> (Tensor[(1512), bool], Tensor[(12, 14, 9), bool]) {
  @func_5593(%var_5594) /* ty=(Tensor[(1512), bool], Tensor[(12, 14, 9), bool]) */
}

def @func_4646() -> Tensor[(637), int32] {
  @func_4644() /* ty=Tensor[(637), int32] */
}

def @func_2370() -> (Tensor[(12, 1, 7), float64],) {
  %475 = fn () -> (Tensor[(12, 1, 7), float64],) {
    %474 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
    (%474,)
  };
  %475() /* ty=(Tensor[(12, 1, 7), float64],) */
}

def @func_4116() -> (Tensor[(12, 14, 9), float32], Tensor[(12, 3, 7), int64], Tensor[(3, 84), float32], Tensor[(12, 15, 7), int16], Tensor[(1260), float64], Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), uint32], Tensor[(12, 3, 7), int8], Tensor[(6, 10, 5), uint64], Tensor[(300), uint64]) {
  %476 = @func_3029() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %477 = %476.0;
  %478 = cast(%477, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %479 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 84), float32] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %480 = reshape(%479, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
  %481 = @func_3078(%480) /* ty=(Tensor[(12, 3, 7), int64],) */;
  %482 = cast(meta[relay.Constant][28] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %483 = reshape(%482, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
  %484 = acos(%478) /* ty=Tensor[(12, 14, 9), float32] */;
  %485 = cast(%484, dtype="float64") /* ty=Tensor[(12, 14, 9), float64] */;
  %486 = reshape(%485, newshape=[12, 14, 9]) /* ty=Tensor[(12, 14, 9), float64] */;
  %487 = @func_617(%486) /* ty=(Tensor[(12, 14, 9), uint32], Tensor[(12, 14, 9), bool]) */;
  %488 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 84), float32] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %489 = reshape(%488, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
  %490 = @func_3741(%489) /* ty=(Tensor[(12, 3, 7), int8], Tensor[(637), int32]) */;
  %491 = cast(meta[relay.Constant][29] /* ty=Tensor[(300), uint64] */, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %492 = reshape(%491, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), uint64] */;
  %493 = @func_2325(%492) /* ty=(Tensor[(6, 10, 5), uint64],) */;
  %494 = %481.0;
  %495 = @func_2831(%483) /* ty=Tensor[(12, 15, 7), int16] */;
  %496 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
  %497 = %487.0;
  %498 = %490.0;
  %499 = %493.0;
  (%484, %494, meta[relay.Constant][27] /* ty=Tensor[(3, 84), float32] */, %495, meta[relay.Constant][28] /* ty=Tensor[(1260), float64] */, %496, %497, %498, %499, meta[relay.Constant][29] /* ty=Tensor[(300), uint64] */)
}

def @func_5661(%var_5660: Tensor[(252), float32]) -> (Tensor[(12, 14, 7), uint32], Tensor[(12, ?, 7), bool], Tensor[(12, 3, 7), int8], Tensor[(252), float32], Tensor[(6, 196), float32]) {
  %518 = fn (%var_5649: Tensor[(252), float32]) -> (Tensor[(12, 14, 7), uint32], Tensor[(12, ?, 7), bool], Tensor[(12, 3, 7), int8], Tensor[(252), float32], Tensor[(6, 196), float32]) {
    %500 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 196), float64] */, dtype="float64") /* ty=Tensor[(6, 196), float64] */;
    %501 = reshape(%500, newshape=[12, 14, 7]) /* ty=Tensor[(12, 14, 7), float64] */;
    %502 = @func_4809(%501) /* ty=(Tensor[(12, 14, 7), uint32],) */;
    %503 = @func_2212() /* ty=(Tensor[(12, 1, 7), float32],) */;
    %504 = %503.0;
    %505 = @func_4897() /* ty=Tensor[(12, 1, 7), float32] */;
    %506 = cast(%505, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
    %507 = shape_of(%504, dtype="int32") /* ty=Tensor[(3), int32] */;
    %508 = cast(%504, dtype="bool") /* ty=Tensor[(12, 1, 7), bool] */;
    %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %510 = cast(%var_5649, dtype="float32") /* ty=Tensor[(252), float32] */;
    %511 = reshape(%510, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
    %512 = @func_3741(%511) /* ty=(Tensor[(12, 3, 7), int8], Tensor[(637), int32]) */;
    %513 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 196), float64] */, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
    %514 = %502.0;
    %515 = not_equal(%508, %509) /* ty=Tensor[(12, ?, 7), bool] */;
    %516 = %512.0;
    %517 = sin(%513) /* ty=Tensor[(6, 196), float32] */;
    (%514, %515, %516, %var_5649, %517)
  };
  %518(%var_5660) /* ty=(Tensor[(12, 14, 7), uint32], Tensor[(12, ?, 7), bool], Tensor[(12, 3, 7), int8], Tensor[(252), float32], Tensor[(6, 196), float32]) */
}

def @func_4478(%var_4475: Tensor[(6, 42), float32], %var_4476: Tensor[(6, 42), float32], %var_4477: Tensor[(924), float32]) -> (Tensor[(637), int32], Tensor[(12, 1, 7), float64], Tensor[(637), int32], Tensor[(6, 42), uint32], Tensor[(12, 11, 7), float32], Tensor[(924), float32]) {
  @func_4473(%var_4475, %var_4476, %var_4477) /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float64], Tensor[(637), int32], Tensor[(6, 42), uint32], Tensor[(12, 11, 7), float32], Tensor[(924), float32]) */
}

def @func_6004() -> (Tensor[(12, 14, 9), bool],) {
  @func_6002() /* ty=(Tensor[(12, 14, 9), bool],) */
}

def @func_6121() -> Tensor[(12, 1, 7), float64] {
  %520 = fn () -> Tensor[(12, 1, 7), float64] {
    %519 = @func_4159() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) */;
    %519.1
  };
  %520() /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_7385() -> (Tensor[(12, 1, 7), float64], Tensor[(12, 1, 7), float64]) {
  @func_7383() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(12, 1, 7), float64]) */
}

def @func_6783() -> Tensor[(637), float32] {
  @func_6781() /* ty=Tensor[(637), float32] */
}

def @func_5913() -> Tensor[(12, 1, 7), float32] {
  %521 = fn () -> Tensor[(12, 1, 7), float32] {
    @func_3129() /* ty=Tensor[(12, 1, 7), float32] */
  };
  %521() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_5040() -> (Tensor[(12, 1, 7), float32],) {
  %523 = fn () -> (Tensor[(12, 1, 7), float32],) {
    %522 = @func_3232() /* ty=Tensor[(12, 1, 7), float32] */;
    (%522,)
  };
  %523() /* ty=(Tensor[(12, 1, 7), float32],) */
}

def @func_1834(%var_1830: Tensor[(1, 11, 13), float32], %var_1831: Tensor[(15, 11, 13), float32], %var_1832: float64, %var_1833: Tensor[(1512), float64]) -> (Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) {
  %547 = fn (%var_1774: Tensor[(1, 11, 13), float32], %var_1782: Tensor[(15, 11, 13), float32], %var_1790: float64, %var_1792: Tensor[(1512), float64]) -> (Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) {
    %524 = cast(%var_1774, dtype="float32") /* ty=Tensor[(1, 11, 13), float32] */;
    %525 = sigmoid(%524) /* ty=Tensor[(1, 11, 13), float32] */;
    %526 = cast(%525, dtype="int8") /* ty=Tensor[(1, 11, 13), int8] */;
    %527 = cast(%var_1782, dtype="int8") /* ty=Tensor[(15, 11, 13), int8] */;
    %528 = cast(%var_1790, dtype="float64") /* ty=float64 */;
    %529 = cast(meta[relay.Constant][31] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
    %530 = cast(%var_1792, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %531 = reshape(%528, newshape=[]) /* ty=float64 */;
    %532 = reshape(%529, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float64] */;
    %533 = reshape(%530, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
    %534 = @func_804(%531, %532, %533) /* ty=(Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) */;
    %535 = cast(%var_1790, dtype="float64") /* ty=float64 */;
    %536 = cast(meta[relay.Constant][31] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
    %537 = cast(%var_1792, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %538 = reshape(%535, newshape=[]) /* ty=float64 */;
    %539 = reshape(%536, newshape=[10, 14, 11]) /* ty=Tensor[(10, 14, 11), float64] */;
    %540 = reshape(%537, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
    %541 = @func_804(%538, %539, %540) /* ty=(Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) */;
    %542 = cast(%525, dtype="float32") /* ty=Tensor[(1, 11, 13), float32] */;
    %543 = bitwise_xor(%526, %527) /* ty=Tensor[(15, 11, 13), int8] */;
    %544 = %534.0;
    %545 = %541.2;
    %546 = acosh(%542) /* ty=Tensor[(1, 11, 13), float32] */;
    (%543, %544, %var_1790, meta[relay.Constant][31] /* ty=Tensor[(1540), float64] */, %var_1792, %545, %546)
  };
  %547(%var_1830, %var_1831, %var_1832, %var_1833) /* ty=(Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) */
}

def @func_617(%var_562: Tensor[(12, 14, 9), float64]) -> (Tensor[(12, 14, 9), uint32], Tensor[(12, 14, 9), bool]) {
  %548 = cast(%var_562, dtype="float64") /* ty=Tensor[(12, 14, 9), float64] */;
  %549 = log(%548) /* ty=Tensor[(12, 14, 9), float64] */;
  %550 = cast(%var_562, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %551 = shape_of(%549, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%549, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %554 = floor_mod(%552, %553) /* ty=Tensor[(12, 14, 9), float32] */;
  %555 = cast(%554, dtype="uint32") /* ty=Tensor[(12, 14, 9), uint32] */;
  %556 = shape_of(%var_562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%var_562, dtype="uint32") /* ty=Tensor[(12, 14, 9), uint32] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %559 = cast(%554, dtype="bool") /* ty=Tensor[(12, 14, 9), bool] */;
  %560 = shape_of(%549, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%549, dtype="bool") /* ty=Tensor[(12, 14, 9), bool] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %563 = right_shift(%557, %558) /* ty=Tensor[(12, 14, 9), uint32] */;
  %564 = less_equal(%561, %562) /* ty=Tensor[(12, 14, 9), bool] */;
  (%563, %564)
}

def @func_3129() -> Tensor[(12, 1, 7), float32] {
  %565 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
  %565.1
}

def @func_1477(%var_1475: Tensor[(2, 8, 16), uint64]) -> (Tensor[(2, 8, 16), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1, 1512), float64], Tensor[(12, 14, 9), bool]) {
  @func_1474(%var_1475) /* ty=(Tensor[(2, 8, 16), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1, 1512), float64], Tensor[(12, 14, 9), bool]) */
}

def @func_3522(%var_3520: Tensor[(252), float32], %var_3521: Tensor[(256), uint64]) -> (Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 14, 9), bool], Tensor[(12, 14, 9), float32], Tensor[(12, 14, 9), bool], Tensor[(256), uint64]) {
  %582 = fn (%var_3507: Tensor[(252), float32], %var_3517: Tensor[(256), uint64]) -> (Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 14, 9), bool], Tensor[(12, 14, 9), float32], Tensor[(12, 14, 9), bool], Tensor[(256), uint64]) {
    %566 = cast(%var_3507, dtype="float32") /* ty=Tensor[(252), float32] */;
    %567 = reshape(%566, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
    %568 = @func_3078(%567) /* ty=(Tensor[(12, 3, 7), int64],) */;
    %569 = @func_3029() /* ty=(Tensor[(12, 14, 9), bool],) */;
    %570 = @func_3029() /* ty=(Tensor[(12, 14, 9), bool],) */;
    %571 = %570.0;
    %572 = cast(%571, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
    %573 = asinh(%572) /* ty=Tensor[(12, 14, 9), float32] */;
    %574 = cast(%573, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
    %575 = cast(%var_3517, dtype="uint64") /* ty=Tensor[(256), uint64] */;
    %576 = reshape(%575, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), uint64] */;
    %577 = @func_1474(%576) /* ty=(Tensor[(2, 8, 16), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1, 1512), float64], Tensor[(12, 14, 9), bool]) */;
    %578 = %568.0;
    %579 = %569.0;
    %580 = sigmoid(%574) /* ty=Tensor[(12, 14, 9), float32] */;
    %581 = %577.5;
    (%578, %var_3507, %579, %580, %581, %var_3517)
  };
  %582(%var_3520, %var_3521) /* ty=(Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 14, 9), bool], Tensor[(12, 14, 9), float32], Tensor[(12, 14, 9), bool], Tensor[(256), uint64]) */
}

def @func_4118() -> (Tensor[(12, 14, 9), float32], Tensor[(12, 3, 7), int64], Tensor[(3, 84), float32], Tensor[(12, 15, 7), int16], Tensor[(1260), float64], Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), uint32], Tensor[(12, 3, 7), int8], Tensor[(6, 10, 5), uint64], Tensor[(300), uint64]) {
  @func_4116() /* ty=(Tensor[(12, 14, 9), float32], Tensor[(12, 3, 7), int64], Tensor[(3, 84), float32], Tensor[(12, 15, 7), int16], Tensor[(1260), float64], Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), uint32], Tensor[(12, 3, 7), int8], Tensor[(6, 10, 5), uint64], Tensor[(300), uint64]) */
}

def @func_3131() -> Tensor[(12, 1, 7), float32] {
  @func_3129() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_3078(%var_3068: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), int64],) {
  %583 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
  %584 = %583.1;
  %585 = cast(%584, dtype="int64") /* ty=Tensor[(12, 1, 7), int64] */;
  %586 = cast(%var_3068, dtype="int64") /* ty=Tensor[(12, 3, 7), int64] */;
  %587 = maximum(%585, %586) /* ty=Tensor[(12, 3, 7), int64] */;
  (%587,)
}

def @func_3633(%var_3587: Tensor[(112), uint64], %var_3608: Tensor[(252), float32]) -> (Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(7, 13, 7), bool], Tensor[(1512), bool], Tensor[(112), uint64], Tensor[(12, 1, 7), float32], Tensor[(252), float32], Tensor[(252), float32], Tensor[(12, 14, 9), bool], Tensor[(1, 637), float32]) {
  %588 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
  %589 = @func_3029() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %590 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 637), int32] */, dtype="int32") /* ty=Tensor[(1, 637), int32] */;
  %591 = reshape(%590, newshape=[637]) /* ty=Tensor[(637), int32] */;
  %592 = @func_2968(%591) /* ty=(Tensor[(637), float32], float64, Tensor[(1, 143), float32], Tensor[(2145), float32], float64, Tensor[(378, 4), float64]) */;
  %593 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 637), int32] */, dtype="int32") /* ty=Tensor[(1, 637), int32] */;
  %594 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 637), int32] */, dtype="int32") /* ty=Tensor[(1, 637), int32] */;
  %595 = reshape(%593, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), int32] */;
  %596 = reshape(%594, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), int32] */;
  %597 = @func_1664(%595, %596) /* ty=(Tensor[(12, 4, 4), float64], Tensor[(7, 13, 7), bool]) */;
  %598 = %592.1;
  %599 = cast(%598, dtype="uint64") /* ty=uint64 */;
  %600 = cast(%var_3587, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %601 = %589.0;
  %602 = cast(%601, dtype="float64") /* ty=Tensor[(12, 14, 9), float64] */;
  %603 = cast(%601, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %604 = reshape(%599, newshape=[]) /* ty=uint64 */;
  %605 = reshape(%600, newshape=[1, 16, 7]) /* ty=Tensor[(1, 16, 7), uint64] */;
  %606 = reshape(%602, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %607 = reshape(%603, newshape=[1512]) /* ty=Tensor[(1512), float32] */;
  %608 = @func_2190(%604, %605, %606, %607) /* ty=(Tensor[(1, 16, 7), uint64], Tensor[(10, 14, 11), float32], Tensor[(1540), float64], Tensor[(12, 4, 4), uint16], Tensor[(1512), bool]) */;
  %609 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %610 = cast(%var_3608, dtype="float32") /* ty=Tensor[(252), float32] */;
  %611 = reshape(%610, newshape=[252]) /* ty=Tensor[(252), float32] */;
  %612 = @func_3112(%611) /* ty=(Tensor[(12, 1, 7), float64], Tensor[(12, 3, 7), int64], Tensor[(252), float32], Tensor[(12, 4, 4), uint16], uint16) */;
  %613 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %614 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 637), int32] */, dtype="float32") /* ty=Tensor[(1, 637), float32] */;
  %615 = %588.0;
  %616 = %597.1;
  %617 = %608.4;
  %618 = %609.0;
  %619 = %612.2;
  %620 = %613.1;
  %621 = acosh(%614) /* ty=Tensor[(1, 637), float32] */;
  (%615, %601, %598, %616, %617, %var_3587, %618, %619, %var_3608, %620, %621)
}

def @func_5988() -> Tensor[(12, 1, 7), float32] {
  %622 = @func_3656() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %622.0
}

def @func_3081(%var_3079: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), int64],) {
  @func_3078(%var_3079) /* ty=(Tensor[(12, 3, 7), int64],) */
}

def @func_2833(%var_2832: Tensor[(12, 15, 7), float64]) -> Tensor[(12, 15, 7), int16] {
  %626 = fn (%var_2823: Tensor[(12, 15, 7), float64]) -> Tensor[(12, 15, 7), int16] {
    %623 = @func_2251() /* ty=Tensor[(12, 1, 7), float64] */;
    %624 = cast(%623, dtype="int16") /* ty=Tensor[(12, 1, 7), int16] */;
    %625 = cast(%var_2823, dtype="int16") /* ty=Tensor[(12, 15, 7), int16] */;
    subtract(%624, %625) /* ty=Tensor[(12, 15, 7), int16] */
  };
  %626(%var_2832) /* ty=Tensor[(12, 15, 7), int16] */
}

def @func_6002() -> (Tensor[(12, 14, 9), bool],) {
  %627 = @func_2345() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %628 = %627.0;
  (%628,)
}

def @func_6193() -> Tensor[(12, 1, 7), float32] {
  %630 = fn () -> Tensor[(12, 1, 7), float32] {
    %629 = @func_2998() /* ty=(Tensor[(637), int32], Tensor[(12, 1, 7), float32]) */;
    %629.1
  };
  %630() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_7179(%var_7177: Tensor[(1512), float64]) -> (Tensor[(12, 1, 7), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(12, 1, 7), float32]) {
  @func_7176(%var_7177) /* ty=(Tensor[(12, 1, 7), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(12, 1, 7), float32]) */
}

def @func_4412() -> (Tensor[(12, 1, 7), float32],) {
  %632 = fn () -> (Tensor[(12, 1, 7), float32],) {
    %631 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
    (%631,)
  };
  %632() /* ty=(Tensor[(12, 1, 7), float32],) */
}

def @func_5243() -> (Tensor[(?, 15, 3), int32], Tensor[(12, 14, 9), float64], Tensor[(?, 15, 3), float64]) {
  %654 = fn () -> (Tensor[(?, 15, 3), int32], Tensor[(12, 14, 9), float64], Tensor[(?, 15, 3), float64]) {
    %633 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 15, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 3), float64] */;
    %634 = tan(%633) /* ty=Tensor[(1, 15, 3), float64] */;
    %635 = cast(%634, dtype="float32") /* ty=Tensor[(1, 15, 3), float32] */;
    %636 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(1, 15, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %637 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 15, 3), float64] */, dtype="float32") /* ty=Tensor[(1, 15, 3), float32] */;
    %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %639 = floor_divide(%637, %638) /* ty=Tensor[(?, 15, 3), float32] */;
    %640 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 15, 3), float64] */, dtype="int32") /* ty=Tensor[(1, 15, 3), int32] */;
    %641 = shape_of(%639, dtype="int32") /* ty=Tensor[(3), int32] */;
    %642 = cast(%639, dtype="int32") /* ty=Tensor[(?, 15, 3), int32] */;
    %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %644 = @func_4838() /* ty=(Tensor[(12, 14, 9), float64],) */;
    %645 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 15, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 3), float64] */;
    %646 = asin(%645) /* ty=Tensor[(1, 15, 3), float64] */;
    %647 = cast(%639, dtype="float64") /* ty=Tensor[(?, 15, 3), float64] */;
    %648 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
    %649 = cast(%646, dtype="float64") /* ty=Tensor[(1, 15, 3), float64] */;
    %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %651 = bitwise_and(%642, %643) /* ty=Tensor[(?, 15, 3), int32] */;
    %652 = %644.0;
    %653 = divide(%649, %650) /* ty=Tensor[(?, 15, 3), float64] */;
    (%651, %652, %653)
  };
  %654() /* ty=(Tensor[(?, 15, 3), int32], Tensor[(12, 14, 9), float64], Tensor[(?, 15, 3), float64]) */
}

def @func_5593(%var_5557: Tensor[(1512), float64]) -> (Tensor[(1512), bool], Tensor[(12, 14, 9), bool]) {
  %655 = @func_4041() /* ty=Tensor[(1512), float64] */;
  %656 = cast(%var_5557, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %657 = shape_of(%655, dtype="int32") /* ty=Tensor[(1), int32] */;
  %658 = cast(%655, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?), bool] */;
  %660 = @func_2345() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %661 = greater(%658, %659) /* ty=Tensor[(1512), bool] */;
  %662 = %660.0;
  (%661, %662)
}

def @func_2347() -> (Tensor[(12, 14, 9), bool],) {
  @func_2345() /* ty=(Tensor[(12, 14, 9), bool],) */
}

def @func_5435(%var_5434: Tensor[(2, 9, 14), uint8]) -> (Tensor[(2, 9, 14), uint8], Tensor[(2, 9, 14), float32], Tensor[(2, 9, 14), float32]) {
  %672 = fn (%var_5417: Tensor[(2, 9, 14), uint8]) -> (Tensor[(2, 9, 14), uint8], Tensor[(2, 9, 14), float32], Tensor[(2, 9, 14), float32]) {
    %663 = cast(%var_5417, dtype="uint8") /* ty=Tensor[(2, 9, 14), uint8] */;
    %664 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(2, 9, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %665 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 9, 14), uint8] */, dtype="uint8") /* ty=Tensor[(2, 9, 14), uint8] */;
    %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %667 = cast(%var_5417, dtype="float32") /* ty=Tensor[(2, 9, 14), float32] */;
    %668 = cast(%var_5417, dtype="float32") /* ty=Tensor[(2, 9, 14), float32] */;
    %669 = minimum(%665, %666) /* ty=Tensor[(2, 9, 14), uint8] */;
    %670 = sinh(%667) /* ty=Tensor[(2, 9, 14), float32] */;
    %671 = cosh(%668) /* ty=Tensor[(2, 9, 14), float32] */;
    (%669, %670, %671)
  };
  %672(%var_5434) /* ty=(Tensor[(2, 9, 14), uint8], Tensor[(2, 9, 14), float32], Tensor[(2, 9, 14), float32]) */
}

def @func_7176(%var_7129: Tensor[(1512), float64]) -> (Tensor[(12, 1, 7), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 143), float32], Tensor[(2145), float32], float64, Tensor[(1512), float64], Tensor[(12, 1, 7), float32]) {
  %673 = @func_5278() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %674 = %673.0;
  %675 = cast(%674, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
  %676 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 143), float32] */, dtype="float32") /* ty=Tensor[(1, 143), float32] */;
  %677 = cast(meta[relay.Constant][36] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %678 = cast(1.16552f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %679 = cast(%var_7129, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %680 = reshape(%676, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
  %681 = reshape(%677, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), float32] */;
  %682 = reshape(%678, newshape=[]) /* ty=float64 */;
  %683 = reshape(%679, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %684 = @func_1829(%680, %681, %682, %683) /* ty=(Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) */;
  %685 = @func_4159() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) */;
  %686 = log(%675) /* ty=Tensor[(12, 1, 7), float64] */;
  %687 = %684.5;
  %688 = %685.0;
  (%686, %687, meta[relay.Constant][35] /* ty=Tensor[(1, 143), float32] */, meta[relay.Constant][36] /* ty=Tensor[(2145), float32] */, 1.16552f64 /* ty=float64 */, %var_7129, %688)
}

def @func_2645() -> (Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) {
  %689 = cast(meta[relay.Constant][37] /* ty=Tensor[(637), int32] */, dtype="int32") /* ty=Tensor[(637), int32] */;
  %690 = cast(meta[relay.Constant][37] /* ty=Tensor[(637), int32] */, dtype="int32") /* ty=Tensor[(637), int32] */;
  %691 = reshape(%689, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), int32] */;
  %692 = reshape(%690, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), int32] */;
  %693 = @func_1664(%691, %692) /* ty=(Tensor[(12, 4, 4), float64], Tensor[(7, 13, 7), bool]) */;
  %694 = cast(meta[relay.Constant][38] /* ty=Tensor[(256, 1), uint64] */, dtype="uint64") /* ty=Tensor[(256, 1), uint64] */;
  %695 = reshape(%694, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), uint64] */;
  %696 = @func_1474(%695) /* ty=(Tensor[(2, 8, 16), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1, 1512), float64], Tensor[(12, 14, 9), bool]) */;
  %697 = @func_2251() /* ty=Tensor[(12, 1, 7), float64] */;
  %698 = %693.1;
  %699 = %696.5;
  (%697, %698, meta[relay.Constant][37] /* ty=Tensor[(637), int32] */, %699, meta[relay.Constant][38] /* ty=Tensor[(256, 1), uint64] */)
}

def @func_3052() -> Tensor[(12, 1, 7), float32] {
  %700 = @func_2228() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %700.0
}

def @func_4331() -> (Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool]) {
  %701 = @func_3029() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %702 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
  %703 = %701.0;
  (%702, %703)
}

def @func_808(%var_805: float64, %var_806: Tensor[(10, 14, 11), float64], %var_807: Tensor[(1512), float64]) -> (Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) {
  %719 = fn (%var_776: float64, %var_777: Tensor[(10, 14, 11), float64], %var_791: Tensor[(1512), float64]) -> (Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) {
    %704 = cast(%var_791, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %705 = reshape(%704, newshape=[12, 14, 9]) /* ty=Tensor[(12, 14, 9), float64] */;
    %706 = @func_617(%705) /* ty=(Tensor[(12, 14, 9), uint32], Tensor[(12, 14, 9), bool]) */;
    %707 = cast(%var_791, dtype="uint8") /* ty=Tensor[(1512), uint8] */;
    %708 = cast(%var_776, dtype="uint8") /* ty=uint8 */;
    %709 = cast(%var_776, dtype="bool") /* ty=bool */;
    %710 = cast(%var_777, dtype="bool") /* ty=Tensor[(10, 14, 11), bool] */;
    %711 = less_equal(%709, %710) /* ty=Tensor[(10, 14, 11), bool] */;
    %712 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 14, 11), bool] */, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
    %713 = shape_of(%711, dtype="int32") /* ty=Tensor[(3), int32] */;
    %714 = cast(%711, dtype="float32") /* ty=Tensor[(10, 14, 11), float32] */;
    %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %716 = %706.1;
    %717 = add(%707, %708) /* ty=Tensor[(1512), uint8] */;
    %718 = mod(%714, %715) /* ty=Tensor[(10, 14, 11), float32] */;
    (%716, %717, %718)
  };
  %719(%var_805, %var_806, %var_807) /* ty=(Tensor[(12, 14, 9), bool], Tensor[(1512), uint8], Tensor[(10, 14, 11), float32]) */
}

def @func_4935() -> (Tensor[(12, 1, 7), float32],) {
  @func_4933() /* ty=(Tensor[(12, 1, 7), float32],) */
}

def @func_3547() -> Tensor[(637), int32] {
  %721 = fn () -> Tensor[(637), int32] {
    %720 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
    %720.2
  };
  %721() /* ty=Tensor[(637), int32] */
}

def @func_4933() -> (Tensor[(12, 1, 7), float32],) {
  %722 = @func_3129() /* ty=Tensor[(12, 1, 7), float32] */;
  (%722,)
}

def @func_5778() -> (Tensor[(12, 1, 7), float64], Tensor[(12, 15, 7), float64]) {
  @func_5776() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(12, 15, 7), float64]) */
}

def @func_2970(%var_2969: Tensor[(637), int32]) -> (Tensor[(637), float32], float64, Tensor[(1, 143), float32], Tensor[(2145), float32], float64, Tensor[(378, 4), float64]) {
  %740 = fn (%var_2955: Tensor[(637), int32]) -> (Tensor[(637), float32], float64, Tensor[(1, 143), float32], Tensor[(2145), float32], float64, Tensor[(378, 4), float64]) {
    %723 = @func_2728() /* ty=(Tensor[(637), int32],) */;
    %724 = %723.0;
    %725 = cast(%var_2955, dtype="float32") /* ty=Tensor[(637), float32] */;
    %726 = shape_of(%724, dtype="int32") /* ty=Tensor[(1), int32] */;
    %727 = cast(%724, dtype="float32") /* ty=Tensor[(637), float32] */;
    %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?), float32] */;
    %729 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 143), float32] */, dtype="float32") /* ty=Tensor[(1, 143), float32] */;
    %730 = cast(meta[relay.Constant][41] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %731 = cast(-3.31846f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %732 = cast(meta[relay.Constant][42] /* ty=Tensor[(378, 4), float64] */, dtype="float64") /* ty=Tensor[(378, 4), float64] */;
    %733 = reshape(%729, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), float32] */;
    %734 = reshape(%730, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), float32] */;
    %735 = reshape(%731, newshape=[]) /* ty=float64 */;
    %736 = reshape(%732, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
    %737 = @func_1829(%733, %734, %735, %736) /* ty=(Tensor[(15, 11, 13), int8], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1512), float64], Tensor[(10, 14, 11), float32], Tensor[(1, 11, 13), float32]) */;
    %738 = floor_mod(%727, %728) /* ty=Tensor[(637), float32] */;
    %739 = %737.2;
    (%738, %739, meta[relay.Constant][40] /* ty=Tensor[(1, 143), float32] */, meta[relay.Constant][41] /* ty=Tensor[(2145), float32] */, -3.31846f64 /* ty=float64 */, meta[relay.Constant][42] /* ty=Tensor[(378, 4), float64] */)
  };
  %740(%var_2969) /* ty=(Tensor[(637), float32], float64, Tensor[(1, 143), float32], Tensor[(2145), float32], float64, Tensor[(378, 4), float64]) */
}

def @func_7338() -> (Tensor[(3, 84), float32], Tensor[(9, 8, 8), int32], Tensor[(576), int32]) {
  %749 = fn () -> (Tensor[(3, 84), float32], Tensor[(9, 8, 8), int32], Tensor[(576), int32]) {
    %741 = @func_4853() /* ty=(Tensor[(3, 84), float32],) */;
    %742 = cast(meta[relay.Constant][43] /* ty=Tensor[(576), int32] */, dtype="int32") /* ty=Tensor[(576), int32] */;
    %743 = cast(meta[relay.Constant][43] /* ty=Tensor[(576), int32] */, dtype="int32") /* ty=Tensor[(576), int32] */;
    %744 = reshape(%742, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), int32] */;
    %745 = reshape(%743, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), int32] */;
    %746 = @func_2933(%744, %745) /* ty=(Tensor[(9, 8, 8), int32], Tensor[(12, 1, 7), float32], Tensor[(504), float32]) */;
    %747 = %741.0;
    %748 = %746.0;
    (%747, %748, meta[relay.Constant][43] /* ty=Tensor[(576), int32] */)
  };
  %749() /* ty=(Tensor[(3, 84), float32], Tensor[(9, 8, 8), int32], Tensor[(576), int32]) */
}

def @func_6180() -> (Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), float64]) {
  %754 = fn () -> (Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), float64]) {
    %750 = @func_2645() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(7, 13, 7), bool], Tensor[(637), int32], Tensor[(12, 14, 9), bool], Tensor[(256, 1), uint64]) */;
    %751 = @func_4838() /* ty=(Tensor[(12, 14, 9), float64],) */;
    %752 = %750.0;
    %753 = %751.0;
    (%752, %753)
  };
  %754() /* ty=(Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), float64]) */
}

def @func_4041() -> Tensor[(1512), float64] {
  %755 = @func_2302() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %756 = %755.2;
  %757 = cast(meta[relay.Constant][44] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(1), int32] */;
  %759 = cast(%756, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?), float64] */;
  floor_mod(%759, %760) /* ty=Tensor[(1512), float64] */
}

def @func_2933(%var_2909: Tensor[(9, 8, 8), int32], %var_2910: Tensor[(9, 8, 8), int32]) -> (Tensor[(9, 8, 8), int32], Tensor[(12, 1, 7), float32], Tensor[(504), float32]) {
  %761 = cast(%var_2910, dtype="int32") /* ty=Tensor[(9, 8, 8), int32] */;
  %762 = shape_of(%var_2909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%var_2909, dtype="int32") /* ty=Tensor[(9, 8, 8), int32] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %765 = cast(meta[relay.Constant][45] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %766 = reshape(%765, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %767 = @func_2486(%766) /* ty=(Tensor[(12, 6, 7), bool], Tensor[(12, 4, 4), uint16], uint16, Tensor[(12, 1, 7), float32]) */;
  %768 = bitwise_xor(%763, %764) /* ty=Tensor[(9, 8, 8), int32] */;
  %769 = %767.3;
  (%768, %769, meta[relay.Constant][45] /* ty=Tensor[(504), float32] */)
}

def @func_4898() -> Tensor[(12, 1, 7), float32] {
  %771 = fn () -> Tensor[(12, 1, 7), float32] {
    %770 = @func_3656() /* ty=(Tensor[(12, 1, 7), float32],) */;
    %770.0
  };
  %771() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_4473(%var_4452: Tensor[(6, 42), float32], %var_4454: Tensor[(6, 42), float32], %var_4471: Tensor[(924), float32]) -> (Tensor[(637), int32], Tensor[(12, 1, 7), float64], Tensor[(637), int32], Tensor[(6, 42), uint32], Tensor[(12, 11, 7), float32], Tensor[(924), float32]) {
  %772 = @func_2728() /* ty=(Tensor[(637), int32],) */;
  %773 = @func_3021() /* ty=(Tensor[(12, 1, 7), float64],) */;
  %774 = cast(%var_4452, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
  %775 = reshape(%774, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
  %776 = @func_3741(%775) /* ty=(Tensor[(12, 3, 7), int8], Tensor[(637), int32]) */;
  %777 = cast(%var_4454, dtype="uint32") /* ty=Tensor[(6, 42), uint32] */;
  %778 = shape_of(%var_4452, dtype="int32") /* ty=Tensor[(2), int32] */;
  %779 = cast(%var_4452, dtype="uint32") /* ty=Tensor[(6, 42), uint32] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %781 = cast(%var_4471, dtype="float32") /* ty=Tensor[(924), float32] */;
  %782 = cast(%var_4452, dtype="float32") /* ty=Tensor[(6, 42), float32] */;
  %783 = reshape(%781, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), float32] */;
  %784 = reshape(%782, newshape=[126, 2]) /* ty=Tensor[(126, 2), float32] */;
  %785 = @func_3401(%783, %784) /* ty=(Tensor[(12, 11, 7), uint32], Tensor[(12, 11, 7), float32], Tensor[(126, 2), float32], Tensor[(12, 4, 4), float64]) */;
  %786 = %772.0;
  %787 = %773.0;
  %788 = %776.1;
  %789 = left_shift(%779, %780) /* ty=Tensor[(6, 42), uint32] */;
  %790 = %785.1;
  (%786, %787, %788, %789, %790, %var_4471)
}

def @func_6971() -> Tensor[(12, 1, 7), float64] {
  @func_6969() /* ty=Tensor[(12, 1, 7), float64] */
}

def @func_4644() -> Tensor[(637), int32] {
  @func_3546() /* ty=Tensor[(637), int32] */
}

def @func_865(%var_864: Tensor[(5, 3, 5), float64]) -> Tensor[(5, 3, 5), bool] {
  %795 = fn (%var_854: Tensor[(5, 3, 5), float64]) -> Tensor[(5, 3, 5), bool] {
    %791 = cast(meta[relay.Constant][46] /* ty=Tensor[(5, 3, 5), float64] */, dtype="bool") /* ty=Tensor[(5, 3, 5), bool] */;
    %792 = shape_of(%var_854, dtype="int32") /* ty=Tensor[(3), int32] */;
    %793 = cast(%var_854, dtype="bool") /* ty=Tensor[(5, 3, 5), bool] */;
    %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%793, %794) /* ty=Tensor[(5, 3, 5), bool] */
  };
  %795(%var_864) /* ty=Tensor[(5, 3, 5), bool] */
}

def @func_5079() -> (Tensor[(12, 1, 7), float32], Tensor[(12, 15, 7), int16], Tensor[(630, 2), float64], Tensor[(3, 84), float32]) {
  %803 = fn () -> (Tensor[(12, 1, 7), float32], Tensor[(12, 15, 7), int16], Tensor[(630, 2), float64], Tensor[(3, 84), float32]) {
    %796 = @func_3656() /* ty=(Tensor[(12, 1, 7), float32],) */;
    %797 = cast(meta[relay.Constant][47] /* ty=Tensor[(630, 2), float64] */, dtype="float64") /* ty=Tensor[(630, 2), float64] */;
    %798 = reshape(%797, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
    %799 = @func_4853() /* ty=(Tensor[(3, 84), float32],) */;
    %800 = %796.0;
    %801 = @func_2831(%798) /* ty=Tensor[(12, 15, 7), int16] */;
    %802 = %799.0;
    (%800, %801, meta[relay.Constant][47] /* ty=Tensor[(630, 2), float64] */, %802)
  };
  %803() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 15, 7), int16], Tensor[(630, 2), float64], Tensor[(3, 84), float32]) */
}

def @func_5990() -> Tensor[(12, 1, 7), float32] {
  @func_5988() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_2083(%var_2081: Tensor[(7, 5, 13), float64]) -> Tensor[(7, 5, 13), float64] {
  @func_2080(%var_2081) /* ty=Tensor[(7, 5, 13), float64] */
}

def @func_4333() -> (Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool]) {
  @func_4331() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool]) */
}

def @main(%var_7547: Tensor[(12, 3, 7), float32]) -> Tensor[(12, 3, 7), int16] {
  %804 = @func_2304() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 14, 9), bool], Tensor[(1512), float64]) */;
  %805 = %804.0;
  %806 = cast(%805, dtype="int16") /* ty=Tensor[(12, 1, 7), int16] */;
  %807 = cast(%var_7547, dtype="int16") /* ty=Tensor[(12, 3, 7), int16] */;
  bitwise_or(%806, %807) /* ty=Tensor[(12, 3, 7), int16] */
}

def @func_4161() -> (Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) {
  @func_4159() /* ty=(Tensor[(12, 1, 7), float32], Tensor[(12, 1, 7), float64]) */
}

def @func_4854() -> (Tensor[(3, 84), float32],) {
  %812 = fn () -> (Tensor[(3, 84), float32],) {
    %808 = @func_4116() /* ty=(Tensor[(12, 14, 9), float32], Tensor[(12, 3, 7), int64], Tensor[(3, 84), float32], Tensor[(12, 15, 7), int16], Tensor[(1260), float64], Tensor[(12, 1, 7), float64], Tensor[(12, 14, 9), uint32], Tensor[(12, 3, 7), int8], Tensor[(6, 10, 5), uint64], Tensor[(300), uint64]) */;
    %809 = %808.2;
    %810 = cast(%809, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
    %811 = acosh(%810) /* ty=Tensor[(3, 84), float32] */;
    (%811,)
  };
  %812() /* ty=(Tensor[(3, 84), float32],) */
}

def @func_6781() -> Tensor[(637), float32] {
  %813 = @func_3546() /* ty=Tensor[(637), int32] */;
  %814 = cast(%813, dtype="float32") /* ty=Tensor[(637), float32] */;
  asinh(%814) /* ty=Tensor[(637), float32] */
}

def @func_5252() -> (Tensor[(3, 84), float32],) {
  %815 = @func_4853() /* ty=(Tensor[(3, 84), float32],) */;
  %816 = %815.0;
  (%816,)
}

def @func_4838() -> (Tensor[(12, 14, 9), float64],) {
  %817 = @func_2345() /* ty=(Tensor[(12, 14, 9), bool],) */;
  %818 = %817.0;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(12, 14, 9), float64] */;
  %820 = atanh(%819) /* ty=Tensor[(12, 14, 9), float64] */;
  (%820,)
}

def @func_5547(%var_5546: Tensor[(13, 15, 8), float64]) -> (Tensor[(13, 15, 8), float64], Tensor[(1540), float64], Tensor[(256), uint64]) {
  %827 = fn (%var_5529: Tensor[(13, 15, 8), float64]) -> (Tensor[(13, 15, 8), float64], Tensor[(1540), float64], Tensor[(256), uint64]) {
    %821 = cast(%var_5529, dtype="float64") /* ty=Tensor[(13, 15, 8), float64] */;
    %822 = cast(meta[relay.Constant][48] /* ty=Tensor[(256), uint64] */, dtype="uint64") /* ty=Tensor[(256), uint64] */;
    %823 = reshape(%822, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), uint64] */;
    %824 = @func_1474(%823) /* ty=(Tensor[(2, 8, 16), float64], Tensor[(12, 14, 9), bool], float64, Tensor[(1540), float64], Tensor[(1, 1512), float64], Tensor[(12, 14, 9), bool]) */;
    %825 = sigmoid(%821) /* ty=Tensor[(13, 15, 8), float64] */;
    %826 = %824.3;
    (%825, %826, meta[relay.Constant][48] /* ty=Tensor[(256), uint64] */)
  };
  %827(%var_5546) /* ty=(Tensor[(13, 15, 8), float64], Tensor[(1540), float64], Tensor[(256), uint64]) */
}

def @func_5480() -> (Tensor[(12, 1, 7), float32],) {
  %828 = @func_2228() /* ty=(Tensor[(12, 1, 7), float32],) */;
  %829 = %828.0;
  (%829,)
}

def @func_5254() -> (Tensor[(3, 84), float32],) {
  @func_5252() /* ty=(Tensor[(3, 84), float32],) */
}

def @func_3054() -> Tensor[(12, 1, 7), float32] {
  @func_3052() /* ty=Tensor[(12, 1, 7), float32] */
}

def @func_2213() -> (Tensor[(12, 1, 7), float32],) {
  %833 = fn () -> (Tensor[(12, 1, 7), float32],) {
    %830 = @func_2154() /* ty=Tensor[(12, 1, 7), float64] */;
    %831 = cast(%830, dtype="float32") /* ty=Tensor[(12, 1, 7), float32] */;
    %832 = atan(%831) /* ty=Tensor[(12, 1, 7), float32] */;
    (%832,)
  };
  %833() /* ty=(Tensor[(12, 1, 7), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

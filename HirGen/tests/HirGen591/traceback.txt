==========mod==========
#[version = "0.0.5"]
def @func_8052() -> (Tensor[(10, 12, 16), float32],) {
  %0 = @func_7955() /* ty=Tensor[(10, 12, 16), float32] */;
  (%0,)
}

def @func_6905() -> Tensor[(13, 2, 7), float32] {
  @func_6409() /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_7898() -> (Tensor[(10, 12, 16), float32],) {
  %1 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %2 = %1.0;
  (%2,)
}

def @func_8977(%var_8918: Tensor[(1920), float64]) -> (Tensor[(13, 2, 7), float32], Tensor[(10, 12, 16), bool], Tensor[(1920), float32], Tensor[(15, 6, 13), float32], Tensor[(150), float32], Tensor[(1920), float32]) {
  %3 = @func_8080() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %4 = cast(%var_8918, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %5 = reshape(%4, newshape=[10, 12, 16]) /* ty=Tensor[(10, 12, 16), float64] */;
  %6 = @func_5993(%5) /* ty=(Tensor[(10, 12, 16), bool],) */;
  %7 = cast(%var_8918, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %8 = exp(%7) /* ty=Tensor[(1920), float64] */;
  %9 = cast(%8, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %11 = reshape(%10, newshape=[15, 1, 10]) /* ty=Tensor[(15, 1, 10), float32] */;
  %12 = @func_5288(%11) /* ty=(Tensor[(15, 1, 10), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(5, 63), float32], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(15, 6, 13), float32]) */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(1920), float64] */, dtype="int16") /* ty=Tensor[(1920), int16] */;
  %14 = shape_of(%8, dtype="int32") /* ty=Tensor[(1), int32] */;
  %15 = cast(%8, dtype="int16") /* ty=Tensor[(1920), int16] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?), int16] */;
  %17 = multiply(%15, %16) /* ty=Tensor[(1920), int16] */;
  %18 = cast(%17, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %19 = %3.0;
  %20 = %6.0;
  %21 = acos(%9) /* ty=Tensor[(1920), float32] */;
  %22 = %12.6;
  %23 = log(%18) /* ty=Tensor[(1920), float32] */;
  (%19, %20, %21, %22, meta[relay.Constant][0] /* ty=Tensor[(150), float32] */, %23)
}

def @func_7664(%var_7653: Tensor[(8, 8, 8), float32], %var_7661: Tensor[(5, 63), float32]) -> (Tensor[(8, 8, 8), float32], Tensor[(7, 5, 9), bool], Tensor[(5, 63), float32]) {
  %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 1, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 8), float32] */;
  %25 = cast(%var_7653, dtype="float32") /* ty=Tensor[(8, 8, 8), float32] */;
  %26 = cast(%var_7661, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
  %27 = cast(%var_7661, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
  %28 = reshape(%26, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %29 = reshape(%27, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %30 = mod(%24, %25) /* ty=Tensor[(8, 8, 8), float32] */;
  %31 = @func_268(%28, %29) /* ty=Tensor[(7, 5, 9), bool] */;
  (%30, %31, %var_7661)
}

def @func_10493() -> (Tensor[(10, 12, 16), float32], Tensor[(50, 9), float32], Tensor[(450), float32], Tensor[(315), float32]) {
  %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %33 = cast(meta[relay.Constant][4] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %34 = reshape(%32, newshape=[50, 9]) /* ty=Tensor[(50, 9), float32] */;
  %35 = reshape(%33, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %36 = @func_3255(%34, %35) /* ty=(Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
  %37 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
  %38 = %36.4;
  (%37, %38, meta[relay.Constant][3] /* ty=Tensor[(450), float32] */, meta[relay.Constant][4] /* ty=Tensor[(315), float32] */)
}

def @func_7053(%var_7016: Tensor[(18), uint64]) -> (Tensor[(13, 2, 7), float32], Tensor[(150), uint32], Tensor[(18), uint64]) {
  %39 = cast(%var_7016, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %40 = reshape(%39, newshape=[18]) /* ty=Tensor[(18), uint64] */;
  %41 = @func_5427(%40) /* ty=(Tensor[(7, 11, 8), bool], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(15, 5, 2), bool], Tensor[(150), uint32]) */;
  %42 = @func_6409() /* ty=Tensor[(13, 2, 7), float32] */;
  %43 = %41.4;
  (%42, %43, %var_7016)
}

def @func_9639(%var_9628: uint32, %var_9629: Tensor[(2, 672), uint32], %var_9630: Tensor[(450), float32], %var_9631: Tensor[(150), uint32]) -> (Tensor[(13, 2, 7), float32], Tensor[(315, 1), float32], Tensor[(132, 1), float32], uint32, Tensor[(2, 672), uint32], Tensor[(450), float32], Tensor[(150), uint32]) {
  %44 = @func_8269() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %45 = cast(meta[relay.Constant][5] /* ty=Tensor[(132, 1), float32] */, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
  %46 = cast(%var_9628, dtype="uint32") /* ty=uint32 */;
  %47 = cast(%var_9629, dtype="uint32") /* ty=Tensor[(2, 672), uint32] */;
  %48 = cast(%var_9630, dtype="float32") /* ty=Tensor[(450), float32] */;
  %49 = cast(%var_9631, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %50 = reshape(%45, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %51 = reshape(%46, newshape=[]) /* ty=uint32 */;
  %52 = reshape(%47, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
  %53 = reshape(%48, newshape=[150, 3]) /* ty=Tensor[(150, 3), float32] */;
  %54 = reshape(%49, newshape=[150]) /* ty=Tensor[(150), uint32] */;
  %55 = @func_4785(%50, %51, %52, %53, %54) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(1170), float32], Tensor[(1008), float32], Tensor[(315, 1), float32], Tensor[(6, 16, 14), uint32], uint32, Tensor[(1344), uint32], Tensor[(150, 3), float32], Tensor[(315), float32], Tensor[(150), uint32]) */;
  %56 = %44.0;
  %57 = %55.3;
  (%56, %57, meta[relay.Constant][5] /* ty=Tensor[(132, 1), float32] */, %var_9628, %var_9629, %var_9630, %var_9631)
}

def @func_6847(%var_6834: Tensor[(150), uint32], %var_6843: Tensor[(182), float32]) -> (Tensor[(16, 14, 13), float64], Tensor[(315), float32], Tensor[(1, 315), float32], Tensor[(7, 5, 9), bool], Tensor[(150), uint32], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(182), float32]) {
  %58 = @func_6144() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) */;
  %59 = %58.3;
  %60 = cast(%59, dtype="float64") /* ty=Tensor[(16, 14, 13), float64] */;
  %61 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 315), float32] */, dtype="float32") /* ty=Tensor[(1, 315), float32] */;
  %62 = reshape(%61, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %63 = @func_965(%62) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %64 = cast(%var_6834, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %65 = reshape(%64, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), uint32] */;
  %66 = @func_2096(%65) /* ty=(Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %67 = cast(meta[relay.Constant][7] /* ty=Tensor[(18), uint64] */, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %68 = cast(%var_6843, dtype="float32") /* ty=Tensor[(182), float32] */;
  %69 = reshape(%67, newshape=[18]) /* ty=Tensor[(18), uint64] */;
  %70 = reshape(%68, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %71 = @func_6789(%69, %70) /* ty=(Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(7, 5, 9), bool], Tensor[(15, 5, 2), bool], Tensor[(150), uint32], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) */;
  %72 = sin(%60) /* ty=Tensor[(16, 14, 13), float64] */;
  %73 = %63.2;
  %74 = %66.1;
  %75 = %71.0;
  (%72, %73, meta[relay.Constant][6] /* ty=Tensor[(1, 315), float32] */, %74, %var_6834, %75, meta[relay.Constant][7] /* ty=Tensor[(18), uint64] */, %var_6843)
}

def @func_4404(%var_4372: Tensor[(4, 13, 8), float64]) -> (Tensor[(4, 13, 8), float64], Tensor[(36), float32], Tensor[(3, 5, 14), float32], Tensor[(35, 6), int64]) {
  %76 = cast(%var_4372, dtype="float64") /* ty=Tensor[(4, 13, 8), float64] */;
  %77 = cast(meta[relay.Constant][8] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %78 = cast(meta[relay.Constant][9] /* ty=Tensor[(35, 6), int16] */, dtype="int16") /* ty=Tensor[(35, 6), int16] */;
  %79 = reshape(%77, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), float32] */;
  %80 = reshape(%78, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %81 = @func_2901(%79, %80) /* ty=(Tensor[(3, 5, 14), bool], Tensor[(210), int16], Tensor[(2, 9, 2), float64]) */;
  %82 = %81.0;
  %83 = cast(meta[relay.Constant][9] /* ty=Tensor[(35, 6), int16] */, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%82, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %87 = cast(meta[relay.Constant][9] /* ty=Tensor[(35, 6), int16] */, dtype="int16") /* ty=Tensor[(35, 6), int16] */;
  %88 = reshape(%87, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), int16] */;
  %89 = @func_1642(%88) /* ty=(Tensor[(3, 5, 14), bool],) */;
  %90 = %89.0;
  %91 = cast(%90, dtype="int64") /* ty=Tensor[(3, 5, 14), int64] */;
  %92 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(35, 6), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %93 = cast(meta[relay.Constant][9] /* ty=Tensor[(35, 6), int16] */, dtype="int64") /* ty=Tensor[(35, 6), int64] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %95 = sinh(%76) /* ty=Tensor[(4, 13, 8), float64] */;
  %96 = mod(%85, %86) /* ty=Tensor[(3, 5, 14), float32] */;
  %97 = subtract(%93, %94) /* ty=Tensor[(35, 6), int64] */;
  (%95, meta[relay.Constant][8] /* ty=Tensor[(36), float32] */, %96, %97)
}

def @func_6231(%var_6213: Tensor[(10, 12, 16), float64], %var_6223: Tensor[(182), float32]) -> (Tensor[(10, 12, 16), bool], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) {
  %98 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  %99 = cast(%var_6213, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%98, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %103 = cast(%var_6223, dtype="float32") /* ty=Tensor[(182), float32] */;
  %104 = reshape(%103, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), float32] */;
  %105 = less_equal(%101, %102) /* ty=Tensor[(10, 12, 16), bool] */;
  %106 = @func_2373(%104) /* ty=Tensor[(13, 2, 7), float32] */;
  (%105, %106, %var_6223)
}

def @func_3148(%var_3144: Tensor[(11, 12, 1), float32]) -> Tensor[(11, 12, 1), float32] {
  %107 = cast(%var_3144, dtype="float32") /* ty=Tensor[(11, 12, 1), float32] */;
  atanh(%107) /* ty=Tensor[(11, 12, 1), float32] */
}

def @func_5030(%var_4990: Tensor[(16, 14, 13), uint32]) -> (Tensor[(16, 14, 13), uint32], Tensor[(5, 4, 4), float32], Tensor[(36), float32], Tensor[(105, 2), int16], Tensor[(16, 1, 13), float64], Tensor[(36), float32], Tensor[(50, 9), float32], Tensor[(450), float32], Tensor[(315), float32]) {
  %108 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 1, 13), uint32] */, dtype="uint32") /* ty=Tensor[(16, 1, 13), uint32] */;
  %109 = cast(%var_4990, dtype="uint32") /* ty=Tensor[(16, 14, 13), uint32] */;
  %110 = cast(meta[relay.Constant][11] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %111 = cast(meta[relay.Constant][12] /* ty=Tensor[(105, 2), int16] */, dtype="int16") /* ty=Tensor[(105, 2), int16] */;
  %112 = reshape(%110, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %113 = reshape(%111, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %114 = @func_3811(%112, %113) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */;
  %115 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 1, 13), uint32] */, dtype="float64") /* ty=Tensor[(16, 1, 13), float64] */;
  %116 = cast(meta[relay.Constant][11] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %117 = cast(meta[relay.Constant][12] /* ty=Tensor[(105, 2), int16] */, dtype="int16") /* ty=Tensor[(105, 2), int16] */;
  %118 = reshape(%116, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %119 = reshape(%117, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %120 = @func_3811(%118, %119) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */;
  %121 = cast(meta[relay.Constant][13] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %122 = cast(meta[relay.Constant][14] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %123 = reshape(%121, newshape=[50, 9]) /* ty=Tensor[(50, 9), float32] */;
  %124 = reshape(%122, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %125 = @func_3255(%123, %124) /* ty=(Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
  %126 = left_shift(%108, %109) /* ty=Tensor[(16, 14, 13), uint32] */;
  %127 = %114.0;
  %128 = sin(%115) /* ty=Tensor[(16, 1, 13), float64] */;
  %129 = %120.2;
  %130 = %125.4;
  (%126, %127, meta[relay.Constant][11] /* ty=Tensor[(36), float32] */, meta[relay.Constant][12] /* ty=Tensor[(105, 2), int16] */, %128, %129, %130, meta[relay.Constant][13] /* ty=Tensor[(450), float32] */, meta[relay.Constant][14] /* ty=Tensor[(315), float32] */)
}

def @func_8613(%var_8601: Tensor[(210), int16]) -> (Tensor[(10, 12, 16), float32], Tensor[(10, 12, 16), float64], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) {
  %131 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  %132 = cast(%131, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %133 = log2(%132) /* ty=Tensor[(10, 12, 16), float32] */;
  %134 = cast(%133, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %135 = cast(meta[relay.Constant][15] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %136 = cast(%var_8601, dtype="int16") /* ty=Tensor[(210), int16] */;
  %137 = reshape(%135, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %138 = reshape(%136, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %139 = @func_3811(%137, %138) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */;
  %140 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
  %141 = asin(%134) /* ty=Tensor[(10, 12, 16), float64] */;
  %142 = %139.1;
  (%140, %141, %142, meta[relay.Constant][15] /* ty=Tensor[(36), float32] */, %var_8601)
}

def @func_10905() -> (Tensor[(9, 1, 1), float32], Tensor[(5, 6, 15), float64]) {
  %143 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 1), float32] */;
  %144 = cosh(%143) /* ty=Tensor[(9, 1, 1), float32] */;
  %145 = @func_9148() /* ty=Tensor[(5, 6, 15), float64] */;
  (%144, %145)
}

def @func_7460() -> Tensor[(315), float32] {
  %146 = @func_6353() /* ty=(Tensor[(315), float32],) */;
  %146.0
}

def @func_8457(%var_8409: uint32, %var_8411: Tensor[(150), uint32], %var_8420: Tensor[(210), int16]) -> (Tensor[(10, 12, 16), float32], Tensor[(15, 16, 8), float64], Tensor[(315), float32], Tensor[(450), float32], Tensor[(6, 16, 14), uint32], Tensor[(132), float32], uint32, Tensor[(84, 16), uint32], Tensor[(150), uint32], Tensor[(36), float32], Tensor[(36), float32], Tensor[(210), int16], Tensor[(13, 2, 7), float32], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64]) {
  %147 = @func_7955() /* ty=Tensor[(10, 12, 16), float32] */;
  %148 = cast(%147, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %149 = reshape(%148, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %150 = @func_7552(%149) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(13, 2, 7), float32], Tensor[(1920), uint32], Tensor[(15, 16, 8), float64], Tensor[(450), float32], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
  %151 = @func_7089() /* ty=(Tensor[(315), float32],) */;
  %152 = cast(meta[relay.Constant][17] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %153 = cast(%var_8409, dtype="uint32") /* ty=uint32 */;
  %154 = cast(meta[relay.Constant][18] /* ty=Tensor[(84, 16), uint32] */, dtype="uint32") /* ty=Tensor[(84, 16), uint32] */;
  %155 = @func_6654() /* ty=Tensor[(450), float32] */;
  %156 = cast(%155, dtype="float32") /* ty=Tensor[(450), float32] */;
  %157 = cast(%var_8411, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %158 = reshape(%152, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %159 = reshape(%153, newshape=[]) /* ty=uint32 */;
  %160 = reshape(%154, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
  %161 = reshape(%156, newshape=[150, 3]) /* ty=Tensor[(150, 3), float32] */;
  %162 = reshape(%157, newshape=[150]) /* ty=Tensor[(150), uint32] */;
  %163 = @func_4785(%158, %159, %160, %161, %162) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(1170), float32], Tensor[(1008), float32], Tensor[(315, 1), float32], Tensor[(6, 16, 14), uint32], uint32, Tensor[(1344), uint32], Tensor[(150, 3), float32], Tensor[(315), float32], Tensor[(150), uint32]) */;
  %164 = cast(meta[relay.Constant][19] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %165 = cast(%var_8420, dtype="int16") /* ty=Tensor[(210), int16] */;
  %166 = reshape(%164, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %167 = reshape(%165, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %168 = @func_3811(%166, %167) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */;
  %169 = @func_8128() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %170 = cast(meta[relay.Constant][20] /* ty=Tensor[(18), uint64] */, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %171 = reshape(%170, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), uint64] */;
  %172 = @func_2699(%171) /* ty=(Tensor[(2, 9, ?), uint64],) */;
  %173 = %150.5;
  %174 = %151.0;
  %175 = %163.4;
  %176 = %168.2;
  %177 = %169.0;
  %178 = %172.0;
  (%147, %173, %174, %155, %175, meta[relay.Constant][17] /* ty=Tensor[(132), float32] */, %var_8409, meta[relay.Constant][18] /* ty=Tensor[(84, 16), uint32] */, %var_8411, %176, meta[relay.Constant][19] /* ty=Tensor[(36), float32] */, %var_8420, %177, %178, meta[relay.Constant][20] /* ty=Tensor[(18), uint64] */)
}

def @func_10107() -> (Tensor[(10, 12, 16), int32], Tensor[(35, 6), int64], Tensor[(2, 208), float64]) {
  %179 = @func_9437() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(315), float32], Tensor[(315), float32]) */;
  %180 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 208), float64] */, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
  %181 = reshape(%180, newshape=[4, 13, 8]) /* ty=Tensor[(4, 13, 8), float64] */;
  %182 = @func_4404(%181) /* ty=(Tensor[(4, 13, 8), float64], Tensor[(36), float32], Tensor[(3, 5, 14), float32], Tensor[(35, 6), int64]) */;
  %183 = %179.0;
  %184 = %182.3;
  (%183, %184, meta[relay.Constant][21] /* ty=Tensor[(2, 208), float64] */)
}

def @func_11928(%var_11921: Tensor[(1, 8, 11), float64]) -> (Tensor[(1, 8, 11), float64],) {
  %185 = cast(%var_11921, dtype="float64") /* ty=Tensor[(1, 8, 11), float64] */;
  %186 = sqrt(%185) /* ty=Tensor[(1, 8, 11), float64] */;
  (%186,)
}

def @func_7226(%var_7165: Tensor[(315), float32]) -> (Tensor[(315), float32], Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(1920), float64], Tensor[(182), float32]) {
  %187 = cast(%var_7165, dtype="float32") /* ty=Tensor[(315), float32] */;
  %188 = reshape(%187, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %189 = @func_965(%188) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %190 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %191 = %190.0;
  %192 = cast(meta[relay.Constant][22] /* ty=Tensor[(10, 12, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%191, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %196 = cast(meta[relay.Constant][23] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %197 = reshape(%196, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %198 = @func_6296(%197) /* ty=(Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), bool], Tensor[(1920), float64], Tensor[(182), float32]) */;
  %199 = %189.2;
  %200 = power(%194, %195) /* ty=Tensor[(10, 12, 16), float64] */;
  %201 = %198.2;
  (%199, %var_7165, %200, %201, meta[relay.Constant][23] /* ty=Tensor[(182), float32] */)
}

def @func_7921() -> Tensor[(10, 12, 16), float32] {
  %202 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %202.0
}

def @func_7792() -> (Tensor[(10, 12, 16), int32], Tensor[(450), float32]) {
  %203 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  %204 = cast(%203, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %205 = cos(%204) /* ty=Tensor[(10, 12, 16), float32] */;
  %206 = cast(%205, dtype="int32") /* ty=Tensor[(10, 12, 16), int32] */;
  %207 = shape_of(%203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%203, dtype="int32") /* ty=Tensor[(10, 12, 16), int32] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %210 = bitwise_or(%208, %209) /* ty=Tensor[(10, 12, 16), int32] */;
  %211 = @func_6654() /* ty=Tensor[(450), float32] */;
  (%210, %211)
}

def @func_7981(%var_7972: Tensor[(36), float32], %var_7973: Tensor[(210), int16]) -> (Tensor[(315), float32], Tensor[(210), int16], Tensor[(210), int16], Tensor[(36), float32]) {
  %212 = cast(%var_7972, dtype="float32") /* ty=Tensor[(36), float32] */;
  %213 = cast(%var_7973, dtype="int16") /* ty=Tensor[(210), int16] */;
  %214 = reshape(%212, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), float32] */;
  %215 = reshape(%213, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %216 = @func_2901(%214, %215) /* ty=(Tensor[(3, 5, 14), bool], Tensor[(210), int16], Tensor[(2, 9, 2), float64]) */;
  %217 = cast(%var_7972, dtype="float32") /* ty=Tensor[(36), float32] */;
  %218 = @func_7460() /* ty=Tensor[(315), float32] */;
  %219 = %216.1;
  %220 = cos(%217) /* ty=Tensor[(36), float32] */;
  (%218, %219, %var_7973, %220)
}

def @func_11891(%var_11864: Tensor[(14, 14, 9), int16], %var_11865: Tensor[(14, 14, 9), int16]) -> (Tensor[(14, 14, 9), int16], Tensor[(7, 5, 9), bool], Tensor[(512), float32], Tensor[(315), float32], Tensor[(14, 14, 9), float64]) {
  %221 = cast(%var_11865, dtype="int16") /* ty=Tensor[(14, 14, 9), int16] */;
  %222 = shape_of(%var_11864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%var_11864, dtype="int16") /* ty=Tensor[(14, 14, 9), int16] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %225 = cast(meta[relay.Constant][24] /* ty=Tensor[(512), float32] */, dtype="float32") /* ty=Tensor[(512), float32] */;
  %226 = cast(meta[relay.Constant][25] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %227 = reshape(%225, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %228 = reshape(%226, newshape=[5, 63]) /* ty=Tensor[(5, 63), float32] */;
  %229 = @func_7664(%227, %228) /* ty=(Tensor[(8, 8, 8), float32], Tensor[(7, 5, 9), bool], Tensor[(5, 63), float32]) */;
  %230 = cast(%var_11864, dtype="float64") /* ty=Tensor[(14, 14, 9), float64] */;
  %231 = bitwise_xor(%223, %224) /* ty=Tensor[(14, 14, 9), int16] */;
  %232 = %229.1;
  %233 = sinh(%230) /* ty=Tensor[(14, 14, 9), float64] */;
  (%231, %232, meta[relay.Constant][24] /* ty=Tensor[(512), float32] */, meta[relay.Constant][25] /* ty=Tensor[(315), float32] */, %233)
}

def @func_8349() -> Tensor[(10, 12, 16), int64] {
  %234 = @func_6553() /* ty=(Tensor[(10, 12, 16), int64],) */;
  %234.0
}

def @func_9148() -> Tensor[(5, 6, 15), float64] {
  %235 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 6, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 6, 15), float64] */;
  asin(%235) /* ty=Tensor[(5, 6, 15), float64] */
}

def @func_11086() -> (Tensor[(13, 2, 7), float32], Tensor[(9, 1, 1), float32], Tensor[(10, 12, 16), float64], uint16) {
  %236 = @func_8093() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %237 = @func_10905() /* ty=(Tensor[(9, 1, 1), float32], Tensor[(5, 6, 15), float64]) */;
  %238 = %237.0;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(9, 1, 1), float32] */;
  %240 = cast(meta[relay.Constant][27] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %241 = reshape(%240, newshape=[]) /* ty=uint16 */;
  %242 = @func_6276(%241) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(11, 5, 9), float64], uint16, Tensor[(1, 495), uint16]) */;
  %243 = %236.0;
  %244 = rsqrt(%239) /* ty=Tensor[(9, 1, 1), float32] */;
  %245 = %242.0;
  (%243, %244, %245, meta[relay.Constant][27] /* ty=uint16 */)
}

def @func_2486(%var_2476: Tensor[(8, 14, 9), float32], %var_2484: Tensor[(315), float32]) -> (Tensor[(8, 14, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) {
  %246 = cast(%var_2476, dtype="float32") /* ty=Tensor[(8, 14, 9), float32] */;
  %247 = cast(meta[relay.Constant][28] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %248 = cast(%var_2484, dtype="float32") /* ty=Tensor[(315), float32] */;
  %249 = reshape(%247, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
  %250 = reshape(%248, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
  %251 = @func_442(%249, %250) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
  %252 = sqrt(%246) /* ty=Tensor[(8, 14, 9), float32] */;
  %253 = %251.4;
  (%252, %253, meta[relay.Constant][28] /* ty=Tensor[(1170), float32] */, %var_2484)
}

def @func_11191() -> (uint16,) {
  %254 = @func_11086() /* ty=(Tensor[(13, 2, 7), float32], Tensor[(9, 1, 1), float32], Tensor[(10, 12, 16), float64], uint16) */;
  %255 = %254.3;
  (%255,)
}

def @func_7089() -> (Tensor[(315), float32],) {
  %256 = @func_6353() /* ty=(Tensor[(315), float32],) */;
  %257 = %256.0;
  (%257,)
}

def @func_10886() -> (Tensor[(10, 12, 16), float64],) {
  %258 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  (%258,)
}

def @func_8080() -> (Tensor[(13, 2, 7), float32],) {
  %259 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %260 = %259.1;
  (%260,)
}

def @func_8093() -> (Tensor[(13, 2, 7), float32],) {
  %261 = @func_8080() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %262 = %261.0;
  (%262,)
}

def @func_574(%var_568: Tensor[(15, 2, 15), float32]) -> Tensor[(15, 2, 15), float32] {
  %263 = cast(%var_568, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
  erf(%263) /* ty=Tensor[(15, 2, 15), float32] */
}

def @func_2096(%var_2083: Tensor[(15, 5, 2), uint32]) -> (Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) {
  %264 = cast(%var_2083, dtype="bool") /* ty=Tensor[(15, 5, 2), bool] */;
  %265 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(15, 5, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 5, 2), uint32] */, dtype="bool") /* ty=Tensor[(15, 5, 2), bool] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %268 = cast(meta[relay.Constant][30] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %269 = reshape(%268, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %270 = @func_965(%269) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %271 = greater(%266, %267) /* ty=Tensor[(15, 5, 2), bool] */;
  %272 = %270.1;
  (%271, %272, meta[relay.Constant][30] /* ty=Tensor[(315), float32] */)
}

def @func_2901(%var_2864: Tensor[(2, 9, 2), float32], %var_2868: Tensor[(210), int16]) -> (Tensor[(3, 5, 14), bool], Tensor[(210), int16], Tensor[(2, 9, 2), float64]) {
  %273 = cast(%var_2868, dtype="int16") /* ty=Tensor[(210), int16] */;
  %274 = reshape(%273, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), int16] */;
  %275 = @func_1642(%274) /* ty=(Tensor[(3, 5, 14), bool],) */;
  %276 = cast(%var_2864, dtype="float32") /* ty=Tensor[(2, 9, 2), float32] */;
  %277 = cosh(%276) /* ty=Tensor[(2, 9, 2), float32] */;
  %278 = cast(%277, dtype="float64") /* ty=Tensor[(2, 9, 2), float64] */;
  %279 = %275.0;
  %280 = tan(%278) /* ty=Tensor[(2, 9, 2), float64] */;
  (%279, %var_2868, %280)
}

def @func_6500() -> Tensor[(10, 12, 16), float32] {
  %281 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %281.0
}

def @func_5993(%var_5981: Tensor[(10, 12, 16), float64]) -> (Tensor[(10, 12, 16), bool],) {
  %282 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  %283 = cast(%var_5981, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%282, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %287 = less(%285, %286) /* ty=Tensor[(10, 12, 16), bool] */;
  (%287,)
}

def @func_6353() -> (Tensor[(315), float32],) {
  %288 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %289 = %288.3;
  (%289,)
}

def @func_6409() -> Tensor[(13, 2, 7), float32] {
  %290 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %290.1
}

def @func_11372() -> uint16 {
  %291 = @func_11191() /* ty=(uint16,) */;
  %291.0
}

def @func_4901(%var_4856: Tensor[(1, 210), int16]) -> (Tensor[(36), float32], Tensor[(9, 4), float32], Tensor[(1, 210), int16], Tensor[(9, 4, 16), float64]) {
  %292 = cast(meta[relay.Constant][31] /* ty=Tensor[(9, 4), float32] */, dtype="float32") /* ty=Tensor[(9, 4), float32] */;
  %293 = cast(%var_4856, dtype="int16") /* ty=Tensor[(1, 210), int16] */;
  %294 = reshape(%292, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %295 = reshape(%293, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %296 = @func_3811(%294, %295) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */;
  %297 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %298 = log10(%297) /* ty=Tensor[(9, 4, 16), float64] */;
  %299 = cast(%298, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %300 = %296.2;
  %301 = sqrt(%299) /* ty=Tensor[(9, 4, 16), float64] */;
  (%300, meta[relay.Constant][31] /* ty=Tensor[(9, 4), float32] */, %var_4856, %301)
}

def @func_1192(%var_1164: uint64, %var_1165: Tensor[(15, 12, 13), uint64]) -> (Tensor[(15, 6, 13), float32], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(15, 12, 13), float32], Tensor[(315), float32]) {
  %302 = cast(meta[relay.Constant][33] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %303 = cast(meta[relay.Constant][34] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %304 = reshape(%302, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
  %305 = reshape(%303, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
  %306 = @func_442(%304, %305) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
  %307 = cast(%var_1164, dtype="bool") /* ty=bool */;
  %308 = cast(%var_1165, dtype="bool") /* ty=Tensor[(15, 12, 13), bool] */;
  %309 = greater_equal(%307, %308) /* ty=Tensor[(15, 12, 13), bool] */;
  %310 = cast(%309, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  %311 = cast(meta[relay.Constant][34] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %312 = reshape(%311, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %313 = @func_965(%312) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %314 = %306.0;
  %315 = exp(%310) /* ty=Tensor[(15, 12, 13), float32] */;
  %316 = %313.2;
  (%314, meta[relay.Constant][33] /* ty=Tensor[(1170), float32] */, meta[relay.Constant][34] /* ty=Tensor[(315), float32] */, %315, %316)
}

def @func_9437() -> (Tensor[(10, 12, 16), int32], Tensor[(315), float32], Tensor[(315), float32]) {
  %317 = @func_7792() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(450), float32]) */;
  %318 = cast(meta[relay.Constant][35] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %319 = reshape(%318, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %320 = @func_965(%319) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %321 = %317.0;
  %322 = %320.2;
  (%321, %322, meta[relay.Constant][35] /* ty=Tensor[(315), float32] */)
}

def @func_10378(%var_10271: Tensor[(440, 2), uint32]) -> (Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(440, 2), uint32], Tensor[(150), float32], Tensor[(7, 5, 9), bool], Tensor[(182), float32], Tensor[(7, 5, 9), bool], Tensor[(1008), float32]) {
  %323 = cast(%var_10271, dtype="uint32") /* ty=Tensor[(440, 2), uint32] */;
  %324 = reshape(%323, newshape=[880]) /* ty=Tensor[(880), uint32] */;
  %325 = @func_7003(%324) /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) */;
  %326 = %325.1;
  %327 = cast(%326, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %328 = reshape(%327, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %329 = @func_8977(%328) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(10, 12, 16), bool], Tensor[(1920), float32], Tensor[(15, 6, 13), float32], Tensor[(150), float32], Tensor[(1920), float32]) */;
  %330 = %329.4;
  %331 = cast(%330, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %332 = cast(meta[relay.Constant][36] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %333 = reshape(%331, newshape=[150]) /* ty=Tensor[(150), uint32] */;
  %334 = reshape(%332, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %335 = @func_6847(%333, %334) /* ty=(Tensor[(16, 14, 13), float64], Tensor[(315), float32], Tensor[(1, 315), float32], Tensor[(7, 5, 9), bool], Tensor[(150), uint32], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(182), float32]) */;
  %336 = cast(meta[relay.Constant][37] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %337 = %335.3;
  %338 = cast(%337, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
  %339 = reshape(%336, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), float32] */;
  %340 = reshape(%338, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %341 = @func_2486(%339, %340) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
  %342 = @func_10168() /* ty=Tensor[(315), float32] */;
  %343 = %341.1;
  (%342, %326, %var_10271, %330, %337, meta[relay.Constant][36] /* ty=Tensor[(182), float32] */, %343, meta[relay.Constant][37] /* ty=Tensor[(1008), float32] */)
}

def @func_9882(%var_9756: Tensor[(18), uint64], %var_9768: Tensor[(880), uint32], %var_9815: uint32, %var_9816: Tensor[(1344), uint32]) -> (Tensor[(10, 12, 16), float32], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(2, 9, ?), uint64], Tensor[(5, 6, 15), float64], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32], Tensor[(315, 18), float64], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(6, 16, 14), uint32], Tensor[(1344), uint32], uint16, Tensor[(13, 2, 7), float32], Tensor[(1, 495), uint16], Tensor[(8, ?, 15), uint32], Tensor[(13, 2, 7), float32], Tensor[(8, 1, 15), float32]) {
  %344 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %345 = cast(meta[relay.Constant][38] /* ty=Tensor[(315, 1), float32] */, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
  %346 = reshape(%345, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %347 = @func_7226(%346) /* ty=(Tensor[(315), float32], Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(1920), float64], Tensor[(182), float32]) */;
  %348 = cast(%var_9756, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %349 = reshape(%348, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), uint64] */;
  %350 = @func_2699(%349) /* ty=(Tensor[(2, 9, ?), uint64],) */;
  %351 = cast(%var_9768, dtype="uint32") /* ty=Tensor[(880), uint32] */;
  %352 = reshape(%351, newshape=[880]) /* ty=Tensor[(880), uint32] */;
  %353 = @func_7282(%352) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(10, 12, 16), float32], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) */;
  %354 = cast(%var_9756, dtype="float64") /* ty=Tensor[(18), float64] */;
  %355 = cast(meta[relay.Constant][38] /* ty=Tensor[(315, 1), float32] */, dtype="float64") /* ty=Tensor[(315, 1), float64] */;
  %356 = @func_7089() /* ty=(Tensor[(315), float32],) */;
  %357 = cast(%var_9815, dtype="uint32") /* ty=uint32 */;
  %358 = cast(%var_9816, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %359 = @func_9148() /* ty=Tensor[(5, 6, 15), float64] */;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(5, 6, 15), float32] */;
  %361 = reshape(%357, newshape=[]) /* ty=uint32 */;
  %362 = reshape(%358, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), uint32] */;
  %363 = reshape(%360, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %364 = @func_2976(%361, %362, %363) /* ty=(Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) */;
  %365 = cast(%var_9815, dtype="uint16") /* ty=uint16 */;
  %366 = reshape(%365, newshape=[]) /* ty=uint16 */;
  %367 = @func_6276(%366) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(11, 5, 9), float64], uint16, Tensor[(1, 495), uint16]) */;
  %368 = @func_8080() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %369 = %367.2;
  %370 = cast(%369, dtype="uint16") /* ty=uint16 */;
  %371 = reshape(%370, newshape=[]) /* ty=uint16 */;
  %372 = @func_6276(%371) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(11, 5, 9), float64], uint16, Tensor[(1, 495), uint16]) */;
  %373 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 15), float32] */;
  %374 = cos(%373) /* ty=Tensor[(8, 1, 15), float32] */;
  %375 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 1, 15), float32] */, dtype="uint32") /* ty=Tensor[(8, 1, 15), uint32] */;
  %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%374, dtype="uint32") /* ty=Tensor[(8, 1, 15), uint32] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %379 = bitwise_xor(%377, %378) /* ty=Tensor[(8, ?, 15), uint32] */;
  %380 = cast(%379, dtype="uint32") /* ty=Tensor[(8, ?, 15), uint32] */;
  %381 = cast(%var_9815, dtype="uint32") /* ty=uint32 */;
  %382 = @func_8093() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %383 = cast(%374, dtype="float32") /* ty=Tensor[(8, 1, 15), float32] */;
  %384 = %344.0;
  %385 = %347.0;
  %386 = @func_6905() /* ty=Tensor[(13, 2, 7), float32] */;
  %387 = %350.0;
  %388 = %353.2;
  %389 = floor_divide(%354, %355) /* ty=Tensor[(315, 18), float64] */;
  %390 = %356.0;
  %391 = @func_9475() /* ty=Tensor[(13, 2, 7), float32] */;
  %392 = %364.0;
  %393 = %368.0;
  %394 = %372.3;
  %395 = add(%380, %381) /* ty=Tensor[(8, ?, 15), uint32] */;
  %396 = %382.0;
  %397 = atan(%383) /* ty=Tensor[(8, 1, 15), float32] */;
  (%384, %385, %386, %387, %359, %388, %var_9768, %389, %390, %391, %392, %var_9816, %369, %393, %394, %395, %396, %397)
}

def @func_10975() -> (Tensor[(10, 12, 16), int64], Tensor[(315), float32]) {
  %398 = @func_8349() /* ty=Tensor[(10, 12, 16), int64] */;
  %399 = @func_10168() /* ty=Tensor[(315), float32] */;
  (%398, %399)
}

def @func_6168() -> (Tensor[(10, 12, 16), float32],) {
  %400 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  %401 = cast(%400, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %402 = sinh(%401) /* ty=Tensor[(10, 12, 16), float32] */;
  (%402,)
}

def @func_8269() -> (Tensor[(13, 2, 7), float32],) {
  %403 = @func_8080() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %404 = %403.0;
  (%404,)
}

def @func_10033() -> (Tensor[(10, 12, 16), float32],) {
  %405 = @func_7955() /* ty=Tensor[(10, 12, 16), float32] */;
  (%405,)
}

def @func_7395(%var_7374: Tensor[(15, 16, 8), float64], %var_7375: Tensor[(15, 16, 8), float64]) -> (Tensor[(15, 16, 8), float64],) {
  %406 = cast(%var_7375, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %407 = shape_of(%var_7374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%var_7374, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %410 = floor_mod(%408, %409) /* ty=Tensor[(15, 16, 8), float64] */;
  (%410,)
}

def @func_9475() -> Tensor[(13, 2, 7), float32] {
  @func_7337() /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_10057() -> (Tensor[(10, 12, 16), int64],) {
  %411 = @func_9092() /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), int64]) */;
  %412 = %411.1;
  (%412,)
}

def @func_11383() -> Tensor[(10, 12, 16), float32] {
  %413 = @func_10033() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %413.0
}

def @func_10219(%var_10184: Tensor[(1344), uint32], %var_10185: Tensor[(450), float32], %var_10206: Tensor[(16), float64]) -> (Tensor[(315), float32], Tensor[(450), float32], Tensor[(1344), uint32], Tensor[(450), float32], Tensor[(315), float32], Tensor[(16), float64], Tensor[(8, 1, 2), bool]) {
  %414 = cast(meta[relay.Constant][40] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %415 = cast(%var_10184, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %416 = cast(%var_10185, dtype="float32") /* ty=Tensor[(450), float32] */;
  %417 = reshape(%414, newshape=[]) /* ty=uint32 */;
  %418 = reshape(%415, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), uint32] */;
  %419 = reshape(%416, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %420 = @func_2976(%417, %418, %419) /* ty=(Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) */;
  %421 = @func_9437() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(315), float32], Tensor[(315), float32]) */;
  %422 = cast(%var_10206, dtype="float64") /* ty=Tensor[(16), float64] */;
  %423 = reshape(%422, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float64] */;
  %424 = @func_7315(%423) /* ty=Tensor[(8, 1, 2), float64] */;
  %425 = cast(%424, dtype="bool") /* ty=Tensor[(8, 1, 2), bool] */;
  %426 = cast(meta[relay.Constant][40] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %427 = @func_10168() /* ty=Tensor[(315), float32] */;
  %428 = %420.3;
  %429 = %421.2;
  %430 = equal(%425, %426) /* ty=Tensor[(8, 1, 2), bool] */;
  (%427, %428, %var_10184, %var_10185, %429, %var_10206, %430)
}

def @func_7103() -> (Tensor[(450), float32],) {
  %431 = @func_6654() /* ty=Tensor[(450), float32] */;
  (%431,)
}

def @func_5654(%var_5628: Tensor[(16, 5, 11), uint32], %var_5629: Tensor[(16, 5, 11), uint32]) -> (Tensor[(16, 5, 11), uint32],) {
  %432 = cast(%var_5629, dtype="uint32") /* ty=Tensor[(16, 5, 11), uint32] */;
  %433 = shape_of(%var_5628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %434 = cast(%var_5628, dtype="uint32") /* ty=Tensor[(16, 5, 11), uint32] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %436 = bitwise_and(%434, %435) /* ty=Tensor[(16, 5, 11), uint32] */;
  (%436,)
}

def @func_6200() -> (Tensor[(10, 12, 16), float32],) {
  %437 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %438 = %437.0;
  (%438,)
}

def @func_11260(%var_11253: Tensor[(1540), float32], %var_11254: Tensor[(132), float32]) -> (Tensor[(10, 12, 16), int32], Tensor[(11, 12, 1), float32], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(10, 12, 16), float64]) {
  %439 = @func_7792() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(450), float32]) */;
  %440 = cast(%var_11253, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %441 = cast(%var_11254, dtype="float32") /* ty=Tensor[(132), float32] */;
  %442 = reshape(%440, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
  %443 = reshape(%441, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %444 = @func_4153(%442, %443) /* ty=(Tensor[(11, 12, 1), float32], Tensor[(132), float32], Tensor[(14, 10, 11), float64], Tensor[(14, 10, 11), float32]) */;
  %445 = @func_8672() /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64]) */;
  %446 = %439.0;
  %447 = %444.0;
  %448 = %445.1;
  (%446, %447, %var_11253, %var_11254, %448)
}

def @func_8306(%var_8299: Tensor[(9, 9, 4), float32]) -> Tensor[(9, 9, 4), float32] {
  %449 = cast(%var_8299, dtype="float32") /* ty=Tensor[(9, 9, 4), float32] */;
  cosh(%449) /* ty=Tensor[(9, 9, 4), float32] */
}

def @func_9706() -> Tensor[(13, 2, 7), float32] {
  @func_6409() /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_11477() -> (Tensor[(315), float32], Tensor[(450), float32]) {
  %450 = @func_8910() /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), float32]) */;
  %451 = @func_7103() /* ty=(Tensor[(450), float32],) */;
  %452 = %450.0;
  %453 = %451.0;
  (%452, %453)
}

def @func_7315(%var_7312: Tensor[(8, 1, 2), float64]) -> Tensor[(8, 1, 2), float64] {
  %454 = cast(%var_7312, dtype="float64") /* ty=Tensor[(8, 1, 2), float64] */;
  log(%454) /* ty=Tensor[(8, 1, 2), float64] */
}

def @func_2062(%var_2012: uint16, %var_2013: Tensor[(11, 5, 9), uint16], %var_2021: Tensor[(11, 5, 9), uint16]) -> (Tensor[(11, 5, 9), uint16], Tensor[(11, 5, 9), float64], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32]) {
  %455 = cast(%var_2012, dtype="uint16") /* ty=uint16 */;
  %456 = cast(%var_2013, dtype="uint16") /* ty=Tensor[(11, 5, 9), uint16] */;
  %457 = cast(%var_2021, dtype="float64") /* ty=Tensor[(11, 5, 9), float64] */;
  %458 = shape_of(%var_2013, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%var_2013, dtype="float64") /* ty=Tensor[(11, 5, 9), float64] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %461 = cast(meta[relay.Constant][41] /* ty=Tensor[(50, 9), float32] */, dtype="float32") /* ty=Tensor[(50, 9), float32] */;
  %462 = reshape(%461, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %463 = maximum(%455, %456) /* ty=Tensor[(11, 5, 9), uint16] */;
  %464 = mod(%459, %460) /* ty=Tensor[(11, 5, 9), float64] */;
  %465 = @func_574(%462) /* ty=Tensor[(15, 2, 15), float32] */;
  (%463, %464, %465, meta[relay.Constant][41] /* ty=Tensor[(50, 9), float32] */)
}

def @func_11746(%var_11648: Tensor[(10, 12, 16), float32], %var_11715: Tensor[(10, 12, 16), float32], %var_11724: uint64, %var_11735: Tensor[(450), float32]) -> (Tensor[(10, 12, 16), float32], Tensor[(10, 12, 16), float32], Tensor[(1170), float32], uint64, Tensor[(2340), uint64], Tensor[(10, 12, 16), bool], Tensor[(150), uint8], Tensor[(1344), uint32], Tensor[(450), float32]) {
  %466 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %467 = @func_10023() /* ty=Tensor[(10, 12, 16), float32] */;
  %468 = cast(%var_11715, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%467, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %472 = cast(%var_11724, dtype="uint64") /* ty=uint64 */;
  %473 = cast(meta[relay.Constant][42] /* ty=Tensor[(2340), uint64] */, dtype="uint64") /* ty=Tensor[(2340), uint64] */;
  %474 = reshape(%472, newshape=[]) /* ty=uint64 */;
  %475 = reshape(%473, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), uint64] */;
  %476 = @func_1192(%474, %475) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(15, 12, 13), float32], Tensor[(315), float32]) */;
  %477 = @func_8672() /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64]) */;
  %478 = %477.1;
  %479 = cast(%var_11648, dtype="int32") /* ty=Tensor[(10, 12, 16), int32] */;
  %480 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%467, dtype="int32") /* ty=Tensor[(10, 12, 16), int32] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %483 = maximum(%481, %482) /* ty=Tensor[(10, 12, 16), int32] */;
  %484 = cast(%483, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %485 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%478, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %488 = cast(%var_11724, dtype="uint32") /* ty=uint32 */;
  %489 = cast(meta[relay.Constant][43] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %490 = cast(%var_11735, dtype="float32") /* ty=Tensor[(450), float32] */;
  %491 = reshape(%488, newshape=[]) /* ty=uint32 */;
  %492 = reshape(%489, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), uint32] */;
  %493 = reshape(%490, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %494 = @func_2976(%491, %492, %493) /* ty=(Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) */;
  %495 = %466.0;
  %496 = divide(%470, %471) /* ty=Tensor[(10, 12, 16), float32] */;
  %497 = %476.1;
  %498 = greater(%486, %487) /* ty=Tensor[(10, 12, 16), bool] */;
  %499 = %494.2;
  (%495, %496, %497, %var_11724, meta[relay.Constant][42] /* ty=Tensor[(2340), uint64] */, %498, %499, meta[relay.Constant][43] /* ty=Tensor[(1344), uint32] */, %var_11735)
}

def @func_10813() -> Tensor[(4, 6, 7), float64] {
  %500 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  atanh(%500) /* ty=Tensor[(4, 6, 7), float64] */
}

def @func_6522() -> Tensor[(10, 12, 16), float32] {
  %501 = @func_6200() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %501.0
}

def @func_8699() -> (Tensor[(10, 12, 16), int64],) {
  %502 = @func_6553() /* ty=(Tensor[(10, 12, 16), int64],) */;
  %503 = %502.0;
  (%503,)
}

def @func_6050() -> (Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) {
  %504 = cast(meta[relay.Constant][45] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %505 = cast(meta[relay.Constant][46] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %506 = reshape(%504, newshape=[50, 9]) /* ty=Tensor[(50, 9), float32] */;
  %507 = reshape(%505, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %508 = @func_3255(%506, %507) /* ty=(Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
  %509 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  %510 = %508.1;
  (%509, %510, meta[relay.Constant][45] /* ty=Tensor[(450), float32] */, meta[relay.Constant][46] /* ty=Tensor[(315), float32] */)
}

def @func_11557(%var_11551: Tensor[(40, 22), uint32]) -> (Tensor[(10, 12, 16), int64], Tensor[(1008), float32], Tensor[(40, 22), uint32]) {
  %511 = @func_8699() /* ty=(Tensor[(10, 12, 16), int64],) */;
  %512 = cast(%var_11551, dtype="uint32") /* ty=Tensor[(40, 22), uint32] */;
  %513 = reshape(%512, newshape=[440, 2]) /* ty=Tensor[(440, 2), uint32] */;
  %514 = @func_10378(%513) /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(440, 2), uint32], Tensor[(150), float32], Tensor[(7, 5, 9), bool], Tensor[(182), float32], Tensor[(7, 5, 9), bool], Tensor[(1008), float32]) */;
  %515 = %511.0;
  %516 = %514.7;
  (%515, %516, %var_11551)
}

def @func_8128() -> (Tensor[(13, 2, 7), float32],) {
  %517 = @func_6905() /* ty=Tensor[(13, 2, 7), float32] */;
  (%517,)
}

def @func_11946() -> (Tensor[(10, 12, 16), float64],) {
  %518 = @func_6701() /* ty=(Tensor[(10, 12, 16), float64],) */;
  %519 = %518.0;
  (%519,)
}

def @func_5427(%var_5415: Tensor[(18), uint64]) -> (Tensor[(7, 11, 8), bool], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(15, 5, 2), bool], Tensor[(150), uint32]) {
  %520 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 11, 8), uint8] */, dtype="bool") /* ty=Tensor[(7, 11, 8), bool] */;
  %521 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(7, 11, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 11, 8), uint8] */, dtype="bool") /* ty=Tensor[(7, 11, 8), bool] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %524 = cast(%var_5415, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %525 = reshape(%524, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), uint64] */;
  %526 = @func_2699(%525) /* ty=(Tensor[(2, 9, ?), uint64],) */;
  %527 = cast(meta[relay.Constant][49] /* ty=Tensor[(150), uint32] */, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %528 = reshape(%527, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), uint32] */;
  %529 = @func_2096(%528) /* ty=(Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %530 = less(%522, %523) /* ty=Tensor[(7, 11, 8), bool] */;
  %531 = %526.0;
  %532 = %529.0;
  (%530, %531, %var_5415, %532, meta[relay.Constant][49] /* ty=Tensor[(150), uint32] */)
}

def @func_965(%var_949: Tensor[(315), float32]) -> (Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) {
  %533 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 5), float32] */;
  %534 = cast(%var_949, dtype="float32") /* ty=Tensor[(315), float32] */;
  %535 = cast(%var_949, dtype="float32") /* ty=Tensor[(315), float32] */;
  %536 = reshape(%534, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %537 = reshape(%535, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %538 = atan(%533) /* ty=Tensor[(2, 11, 5), float32] */;
  %539 = @func_268(%536, %537) /* ty=Tensor[(7, 5, 9), bool] */;
  (%538, %539, %var_949)
}

def @func_7067() -> (Tensor[(450), float32],) {
  %540 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %541 = %540.2;
  (%541,)
}

def @func_9932(%var_9920: Tensor[(13, 2, 7), float32]) -> (Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), uint64], Tensor[(315), float32]) {
  %542 = @func_8672() /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64]) */;
  %543 = @func_9706() /* ty=Tensor[(13, 2, 7), float32] */;
  %544 = cast(%var_9920, dtype="uint64") /* ty=Tensor[(13, 2, 7), uint64] */;
  %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%543, dtype="uint64") /* ty=Tensor[(13, 2, 7), uint64] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %548 = @func_9437() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(315), float32], Tensor[(315), float32]) */;
  %549 = %542.1;
  %550 = bitwise_or(%546, %547) /* ty=Tensor[(13, 2, 7), uint64] */;
  %551 = %548.2;
  (%549, %550, %551)
}

def @func_2699(%var_2685: Tensor[(2, 9, 1), uint64]) -> (Tensor[(2, 9, ?), uint64],) {
  %552 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 9, 1), uint64] */, dtype="uint64") /* ty=Tensor[(2, 9, 1), uint64] */;
  %553 = shape_of(%var_2685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%var_2685, dtype="uint64") /* ty=Tensor[(2, 9, 1), uint64] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %556 = bitwise_xor(%554, %555) /* ty=Tensor[(2, 9, ?), uint64] */;
  (%556,)
}

def @func_7552(%var_7491: Tensor[(1920), float64]) -> (Tensor[(13, 2, 7), float32], Tensor[(13, 2, 7), float32], Tensor[(1920), uint32], Tensor[(15, 16, 8), float64], Tensor[(450), float32], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) {
  %557 = cast(%var_7491, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %558 = cast(%var_7491, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %559 = reshape(%557, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
  %560 = reshape(%558, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
  %561 = @func_7395(%559, %560) /* ty=(Tensor[(15, 16, 8), float64],) */;
  %562 = %561.0;
  %563 = cast(%562, dtype="uint32") /* ty=Tensor[(15, 16, 8), uint32] */;
  %564 = shape_of(%var_7491, dtype="int32") /* ty=Tensor[(1), int32] */;
  %565 = cast(%var_7491, dtype="uint32") /* ty=Tensor[(1920), uint32] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %567 = cast(%var_7491, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %568 = cast(%562, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %569 = reshape(%567, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
  %570 = reshape(%568, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
  %571 = @func_7395(%569, %570) /* ty=(Tensor[(15, 16, 8), float64],) */;
  %572 = %571.0;
  %573 = cast(%572, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %574 = cast(%var_7491, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %575 = reshape(%573, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
  %576 = reshape(%574, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
  %577 = @func_7395(%575, %576) /* ty=(Tensor[(15, 16, 8), float64],) */;
  %578 = cast(%562, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %579 = exp(%578) /* ty=Tensor[(15, 16, 8), float32] */;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %581 = @func_6905() /* ty=Tensor[(13, 2, 7), float32] */;
  %582 = @func_6409() /* ty=Tensor[(13, 2, 7), float32] */;
  %583 = left_shift(%565, %566) /* ty=Tensor[(1920), uint32] */;
  %584 = @func_6654() /* ty=Tensor[(450), float32] */;
  %585 = %577.0;
  %586 = asin(%580) /* ty=Tensor[(15, 16, 8), float32] */;
  (%581, %582, %583, %572, %584, %585, %586)
}

def @func_10611(%var_10602: Tensor[(9, 4, 5), float64]) -> (Tensor[(9, 4, 5), float64],) {
  %587 = cast(%var_10602, dtype="float64") /* ty=Tensor[(9, 4, 5), float64] */;
  %588 = cosh(%587) /* ty=Tensor[(9, 4, 5), float64] */;
  (%588,)
}

def @func_11631() -> uint16 {
  @func_11372() /* ty=uint16 */
}

def @func_10168() -> Tensor[(315), float32] {
  %589 = @func_9092() /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), int64]) */;
  %589.0
}

def @func_6553() -> (Tensor[(10, 12, 16), int64],) {
  %590 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
  %591 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
  %592 = cast(%591, dtype="int64") /* ty=Tensor[(10, 12, 16), int64] */;
  %593 = shape_of(%590, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%590, dtype="int64") /* ty=Tensor[(10, 12, 16), int64] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %596 = minimum(%594, %595) /* ty=Tensor[(10, 12, 16), int64] */;
  (%596,)
}

def @func_10999(%var_10990: Tensor[(10, 7, 14), float64]) -> Tensor[(10, 7, 14), float64] {
  %597 = cast(%var_10990, dtype="float64") /* ty=Tensor[(10, 7, 14), float64] */;
  exp(%597) /* ty=Tensor[(10, 7, 14), float64] */
}

def @func_6789(%var_6729: Tensor[(18), uint64], %var_6783: Tensor[(182), float32]) -> (Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(7, 5, 9), bool], Tensor[(15, 5, 2), bool], Tensor[(150), uint32], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) {
  %598 = cast(%var_6729, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %599 = reshape(%598, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), uint64] */;
  %600 = @func_2699(%599) /* ty=(Tensor[(2, 9, ?), uint64],) */;
  %601 = cast(meta[relay.Constant][52] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %602 = @func_6353() /* ty=(Tensor[(315), float32],) */;
  %603 = %602.0;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(315), float32] */;
  %605 = reshape(%601, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
  %606 = reshape(%604, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
  %607 = @func_442(%605, %606) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
  %608 = cast(%603, dtype="float32") /* ty=Tensor[(315), float32] */;
  %609 = cast(%603, dtype="float32") /* ty=Tensor[(315), float32] */;
  %610 = reshape(%609, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %611 = @func_965(%610) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %612 = cast(meta[relay.Constant][53] /* ty=Tensor[(150), uint32] */, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %613 = reshape(%612, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), uint32] */;
  %614 = @func_2096(%613) /* ty=(Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %615 = cast(%var_6783, dtype="float32") /* ty=Tensor[(182), float32] */;
  %616 = reshape(%615, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), float32] */;
  %617 = %600.0;
  %618 = %607.5;
  %619 = sqrt(%608) /* ty=Tensor[(315), float32] */;
  %620 = %611.1;
  %621 = %614.0;
  %622 = @func_2373(%616) /* ty=Tensor[(13, 2, 7), float32] */;
  (%617, %var_6729, %618, meta[relay.Constant][52] /* ty=Tensor[(1170), float32] */, %619, %620, %621, meta[relay.Constant][53] /* ty=Tensor[(150), uint32] */, %622, %var_6783)
}

def @func_6701() -> (Tensor[(10, 12, 16), float64],) {
  %623 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %624 = %623.0;
  (%624,)
}

def @func_5960() -> Tensor[(10, 12, 16), float64] {
  %625 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 12, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  rsqrt(%625) /* ty=Tensor[(10, 12, 16), float64] */
}

def @func_268(%var_244: Tensor[(7, 5, 9), float32], %var_245: Tensor[(7, 5, 9), float32]) -> Tensor[(7, 5, 9), bool] {
  %626 = cast(%var_245, dtype="bool") /* ty=Tensor[(7, 5, 9), bool] */;
  %627 = shape_of(%var_244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(%var_244, dtype="bool") /* ty=Tensor[(7, 5, 9), bool] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%628, %629) /* ty=Tensor[(7, 5, 9), bool] */
}

def @func_1463(%var_1427: uint8, %var_1428: Tensor[(15, 10, 1), uint8], %var_1436: Tensor[(450), float32]) -> (Tensor[(15, 10, 1), uint8], Tensor[(15, 2, 15), float32], Tensor[(15, 12, 13), float32], Tensor[(2340), uint64], Tensor[(15, 2, 15), uint16], Tensor[(15, 6, 13), float32]) {
  %630 = cast(%var_1427, dtype="uint8") /* ty=uint8 */;
  %631 = cast(%var_1428, dtype="uint8") /* ty=Tensor[(15, 10, 1), uint8] */;
  %632 = cast(%var_1436, dtype="float32") /* ty=Tensor[(450), float32] */;
  %633 = reshape(%632, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %634 = @func_574(%633) /* ty=Tensor[(15, 2, 15), float32] */;
  %635 = cast(%634, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
  %636 = reshape(%635, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %637 = cast(%var_1427, dtype="uint64") /* ty=uint64 */;
  %638 = cast(meta[relay.Constant][55] /* ty=Tensor[(2340), uint64] */, dtype="uint64") /* ty=Tensor[(2340), uint64] */;
  %639 = reshape(%637, newshape=[]) /* ty=uint64 */;
  %640 = reshape(%638, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), uint64] */;
  %641 = @func_1192(%639, %640) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(15, 12, 13), float32], Tensor[(315), float32]) */;
  %642 = cast(%var_1436, dtype="uint16") /* ty=Tensor[(450), uint16] */;
  %643 = shape_of(%634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%634, dtype="uint16") /* ty=Tensor[(15, 2, 15), uint16] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %646 = cast(%var_1427, dtype="uint64") /* ty=uint64 */;
  %647 = cast(meta[relay.Constant][55] /* ty=Tensor[(2340), uint64] */, dtype="uint64") /* ty=Tensor[(2340), uint64] */;
  %648 = reshape(%646, newshape=[]) /* ty=uint64 */;
  %649 = reshape(%647, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), uint64] */;
  %650 = @func_1192(%648, %649) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(15, 12, 13), float32], Tensor[(315), float32]) */;
  %651 = bitwise_xor(%630, %631) /* ty=Tensor[(15, 10, 1), uint8] */;
  %652 = @func_574(%636) /* ty=Tensor[(15, 2, 15), float32] */;
  %653 = %641.3;
  %654 = bitwise_xor(%644, %645) /* ty=Tensor[(15, 2, 15), uint16] */;
  %655 = %650.0;
  (%651, %652, %653, meta[relay.Constant][55] /* ty=Tensor[(2340), uint64] */, %654, %655)
}

def @func_8910() -> (Tensor[(315), float32], Tensor[(10, 12, 16), float32]) {
  %656 = @func_6353() /* ty=(Tensor[(315), float32],) */;
  %657 = @func_8052() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %658 = %656.0;
  %659 = %657.0;
  (%658, %659)
}

def @func_4594(%var_4557: Tensor[(1, 3, 1), int8], %var_4558: Tensor[(13, 3, 7), int8], %var_4588: uint16, %var_4592: Tensor[(1008), float32]) -> (Tensor[(13, 3, 7), int8], Tensor[(315), float32], Tensor[(1, 3, 150), float64], Tensor[(50, 9), float32], uint16, Tensor[(495), uint16], Tensor[(1170), float32], Tensor[(1008), float32]) {
  %660 = cast(%var_4557, dtype="int8") /* ty=Tensor[(1, 3, 1), int8] */;
  %661 = cast(%var_4558, dtype="int8") /* ty=Tensor[(13, 3, 7), int8] */;
  %662 = cast(meta[relay.Constant][56] /* ty=Tensor[(150), uint32] */, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %663 = reshape(%662, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), uint32] */;
  %664 = @func_2096(%663) /* ty=(Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %665 = cast(meta[relay.Constant][56] /* ty=Tensor[(150), uint32] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %666 = cast(%var_4557, dtype="uint64") /* ty=Tensor[(1, 3, 1), uint64] */;
  %667 = bitwise_xor(%665, %666) /* ty=Tensor[(1, 3, 150), uint64] */;
  %668 = cast(%667, dtype="float64") /* ty=Tensor[(1, 3, 150), float64] */;
  %669 = cast(%var_4588, dtype="uint16") /* ty=uint16 */;
  %670 = cast(meta[relay.Constant][57] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %671 = cast(meta[relay.Constant][57] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %672 = reshape(%669, newshape=[]) /* ty=uint16 */;
  %673 = reshape(%670, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), uint16] */;
  %674 = reshape(%671, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), uint16] */;
  %675 = @func_2062(%672, %673, %674) /* ty=(Tensor[(11, 5, 9), uint16], Tensor[(11, 5, 9), float64], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32]) */;
  %676 = cast(%var_4592, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %677 = %664.2;
  %678 = cast(%677, dtype="float32") /* ty=Tensor[(315), float32] */;
  %679 = reshape(%676, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), float32] */;
  %680 = reshape(%678, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %681 = @func_2486(%679, %680) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
  %682 = left_shift(%660, %661) /* ty=Tensor[(13, 3, 7), int8] */;
  %683 = sin(%668) /* ty=Tensor[(1, 3, 150), float64] */;
  %684 = %675.3;
  %685 = %681.2;
  (%682, %677, %683, %684, %var_4588, meta[relay.Constant][57] /* ty=Tensor[(495), uint16] */, %685, %var_4592)
}

def @func_8823(%var_8809: Tensor[(10, 12, 16), int32]) -> Tensor[(10, 12, 16), float32] {
  %686 = @func_7792() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(450), float32]) */;
  %687 = %686.0;
  %688 = cast(%var_8809, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%687, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%690, %691) /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_11846() -> (Tensor[(10, 12, 16), float32], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(10, 12, 16), float64]) {
  %692 = @func_9092() /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), int64]) */;
  %693 = @func_8128() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %694 = @func_10023() /* ty=Tensor[(10, 12, 16), float32] */;
  %695 = %692.0;
  %696 = %693.0;
  %697 = @func_10722() /* ty=Tensor[(10, 12, 16), float64] */;
  (%694, %695, %696, %697)
}

def @func_7868(%var_7860: Tensor[(5, 234), float32]) -> (Tensor[(10, 12, 16), float64], Tensor[(35, 9), float32], Tensor[(5, 234), float32], Tensor[(315), float32]) {
  %698 = @func_6701() /* ty=(Tensor[(10, 12, 16), float64],) */;
  %699 = cast(%var_7860, dtype="float32") /* ty=Tensor[(5, 234), float32] */;
  %700 = cast(meta[relay.Constant][58] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %701 = reshape(%699, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
  %702 = reshape(%700, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
  %703 = @func_442(%701, %702) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
  %704 = %698.0;
  %705 = %703.2;
  (%704, %705, %var_7860, meta[relay.Constant][58] /* ty=Tensor[(315), float32] */)
}

def @func_7955() -> Tensor[(10, 12, 16), float32] {
  @func_6522() /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_3255(%var_3243: Tensor[(50, 9), float32], %var_3251: Tensor[(315), float32]) -> (Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) {
  %706 = cast(meta[relay.Constant][60] /* ty=Tensor[(10, 7, 9), int64] */, dtype="int64") /* ty=Tensor[(10, 7, 9), int64] */;
  %707 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(10, 7, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(meta[relay.Constant][59] /* ty=Tensor[(10, 7, 9), int64] */, dtype="int64") /* ty=Tensor[(10, 7, 9), int64] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %710 = cast(meta[relay.Constant][61] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %711 = reshape(%710, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), float32] */;
  %712 = cast(%var_3243, dtype="float32") /* ty=Tensor[(50, 9), float32] */;
  %713 = reshape(%712, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %714 = cast(meta[relay.Constant][62] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %715 = cast(%var_3251, dtype="float32") /* ty=Tensor[(315), float32] */;
  %716 = reshape(%714, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
  %717 = reshape(%715, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
  %718 = @func_442(%716, %717) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
  %719 = bitwise_xor(%708, %709) /* ty=Tensor[(10, 7, 9), int64] */;
  %720 = @func_2373(%711) /* ty=Tensor[(13, 2, 7), float32] */;
  %721 = @func_574(%713) /* ty=Tensor[(15, 2, 15), float32] */;
  %722 = %718.5;
  (%719, %720, meta[relay.Constant][61] /* ty=Tensor[(182), float32] */, %721, %var_3243, %722, meta[relay.Constant][62] /* ty=Tensor[(1170), float32] */, %var_3251)
}

def @func_4153(%var_4111: Tensor[(14, 10, 11), float32], %var_4127: Tensor[(132), float32]) -> (Tensor[(11, 12, 1), float32], Tensor[(132), float32], Tensor[(14, 10, 11), float64], Tensor[(14, 10, 11), float32]) {
  %723 = cast(%var_4127, dtype="float32") /* ty=Tensor[(132), float32] */;
  %724 = reshape(%723, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
  %725 = cast(%var_4111, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
  %726 = rsqrt(%725) /* ty=Tensor[(14, 10, 11), float32] */;
  %727 = cast(%726, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
  %728 = log2(%727) /* ty=Tensor[(14, 10, 11), float64] */;
  %729 = cast(%726, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
  %730 = shape_of(%728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%728, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %733 = cast(%726, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
  %734 = @func_3148(%724) /* ty=Tensor[(11, 12, 1), float32] */;
  %735 = divide(%731, %732) /* ty=Tensor[(14, 10, 11), float64] */;
  %736 = asin(%733) /* ty=Tensor[(14, 10, 11), float32] */;
  (%734, %var_4127, %735, %736)
}

def @func_10536() -> (Tensor[(10, 12, 16), float32], Tensor[(1920), uint32]) {
  %737 = @func_7898() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %738 = %737.0;
  %739 = cast(%738, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %740 = reshape(%739, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %741 = @func_7552(%740) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(13, 2, 7), float32], Tensor[(1920), uint32], Tensor[(15, 16, 8), float64], Tensor[(450), float32], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
  %742 = %741.2;
  (%738, %742)
}

def @func_2976(%var_2959: uint32, %var_2960: Tensor[(6, 16, 14), uint32], %var_2968: Tensor[(450), float32]) -> (Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) {
  %743 = cast(%var_2959, dtype="uint32") /* ty=uint32 */;
  %744 = cast(%var_2960, dtype="uint32") /* ty=Tensor[(6, 16, 14), uint32] */;
  %745 = cast(%var_2959, dtype="uint8") /* ty=uint8 */;
  %746 = cast(meta[relay.Constant][63] /* ty=Tensor[(150), uint8] */, dtype="uint8") /* ty=Tensor[(150), uint8] */;
  %747 = cast(%var_2968, dtype="float32") /* ty=Tensor[(450), float32] */;
  %748 = reshape(%745, newshape=[]) /* ty=uint8 */;
  %749 = reshape(%746, newshape=[15, 10, 1]) /* ty=Tensor[(15, 10, 1), uint8] */;
  %750 = reshape(%747, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %751 = @func_1463(%748, %749, %750) /* ty=(Tensor[(15, 10, 1), uint8], Tensor[(15, 2, 15), float32], Tensor[(15, 12, 13), float32], Tensor[(2340), uint64], Tensor[(15, 2, 15), uint16], Tensor[(15, 6, 13), float32]) */;
  %752 = logical_xor(%743, %744) /* ty=Tensor[(6, 16, 14), uint32] */;
  %753 = %751.1;
  (%752, %753, meta[relay.Constant][63] /* ty=Tensor[(150), uint8] */, %var_2968)
}

def @main(%var_11993: Tensor[(16, 15, 11), float64]) -> Tensor[(16, 15, 11), float64] {
  %754 = cast(%var_11993, dtype="float64") /* ty=Tensor[(16, 15, 11), float64] */;
  cosh(%754) /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_7907(%var_7901: Tensor[(14, 4, 4), float32]) -> (Tensor[(14, 4, 4), float32],) {
  %755 = cast(%var_7901, dtype="float32") /* ty=Tensor[(14, 4, 4), float32] */;
  %756 = sin(%755) /* ty=Tensor[(14, 4, 4), float32] */;
  (%756,)
}

def @func_6654() -> Tensor[(450), float32] {
  %757 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %757.2
}

def @func_9309(%var_9302: Tensor[(16, 3, 10), float32]) -> (Tensor[(16, 3, 10), float64],) {
  %758 = cast(%var_9302, dtype="float32") /* ty=Tensor[(16, 3, 10), float32] */;
  %759 = tan(%758) /* ty=Tensor[(16, 3, 10), float32] */;
  %760 = cast(%759, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
  %761 = acosh(%760) /* ty=Tensor[(16, 3, 10), float64] */;
  (%761,)
}

def @func_11808() -> (Tensor[(4, 6, 7), float64], Tensor[(450), float32]) {
  %762 = @func_7103() /* ty=(Tensor[(450), float32],) */;
  %763 = @func_10813() /* ty=Tensor[(4, 6, 7), float64] */;
  %764 = %762.0;
  (%763, %764)
}

def @func_1642(%var_1636: Tensor[(3, 5, 14), int16]) -> (Tensor[(3, 5, 14), bool],) {
  %765 = cast(%var_1636, dtype="bool") /* ty=Tensor[(3, 5, 14), bool] */;
  %766 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(3, 5, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(meta[relay.Constant][64] /* ty=Tensor[(3, 5, 14), int16] */, dtype="bool") /* ty=Tensor[(3, 5, 14), bool] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %769 = equal(%767, %768) /* ty=Tensor[(3, 5, 14), bool] */;
  (%769,)
}

def @func_7003(%var_6999: Tensor[(880), uint32]) -> (Tensor[(450), float32], Tensor[(10, 12, 16), float64], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) {
  %770 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %771 = @func_6144() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) */;
  %772 = cast(%var_6999, dtype="uint32") /* ty=Tensor[(880), uint32] */;
  %773 = cast(%var_6999, dtype="uint32") /* ty=Tensor[(880), uint32] */;
  %774 = reshape(%772, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), uint32] */;
  %775 = reshape(%773, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), uint32] */;
  %776 = @func_5654(%774, %775) /* ty=(Tensor[(16, 5, 11), uint32],) */;
  %777 = %770.2;
  %778 = %771.2;
  %779 = %776.0;
  (%777, %778, %779, %var_6999)
}

def @func_7337() -> Tensor[(13, 2, 7), float32] {
  @func_6409() /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_9692() -> (Tensor[(450), float32], Tensor[(13, 2, 7), float32]) {
  %780 = @func_7103() /* ty=(Tensor[(450), float32],) */;
  %781 = %780.0;
  %782 = @func_6409() /* ty=Tensor[(13, 2, 7), float32] */;
  (%781, %782)
}

def @func_9371() -> Tensor[(12, 8, 9), float64] {
  %783 = cast(meta[relay.Constant][65] /* ty=Tensor[(12, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(12, 8, 9), float64] */;
  cos(%783) /* ty=Tensor[(12, 8, 9), float64] */
}

def @func_10023() -> Tensor[(10, 12, 16), float32] {
  @func_7955() /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_11209(%var_11204: Tensor[(16, 1, 5), float32]) -> Tensor[(16, 1, 5), float32] {
  %784 = cast(%var_11204, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
  log2(%784) /* ty=Tensor[(16, 1, 5), float32] */
}

def @func_9092() -> (Tensor[(315), float32], Tensor[(10, 12, 16), int64]) {
  %785 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %786 = @func_6553() /* ty=(Tensor[(10, 12, 16), int64],) */;
  %787 = %785.3;
  %788 = %786.0;
  (%787, %788)
}

def @func_7282(%var_7279: Tensor[(880), uint32]) -> (Tensor[(10, 12, 16), float64], Tensor[(10, 12, 16), float32], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) {
  %789 = @func_6701() /* ty=(Tensor[(10, 12, 16), float64],) */;
  %790 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
  %791 = cast(%790, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %792 = cast(%var_7279, dtype="uint32") /* ty=Tensor[(880), uint32] */;
  %793 = cast(%var_7279, dtype="uint32") /* ty=Tensor[(880), uint32] */;
  %794 = reshape(%792, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), uint32] */;
  %795 = reshape(%793, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), uint32] */;
  %796 = @func_5654(%794, %795) /* ty=(Tensor[(16, 5, 11), uint32],) */;
  %797 = %789.0;
  %798 = sigmoid(%791) /* ty=Tensor[(10, 12, 16), float32] */;
  %799 = %796.0;
  (%797, %798, %799, %var_7279)
}

def @func_10515() -> Tensor[(10, 12, 16), float32] {
  @func_10023() /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_11453(%var_11396: uint32, %var_11397: Tensor[(1344), uint32], %var_11410: Tensor[(4, 4), float64]) -> (uint32, Tensor[(1, 450), float32], Tensor[(150), uint32], Tensor[(450), float32], Tensor[(4, 4), float64], Tensor[(450), float32], Tensor[(315, ?), int32], Tensor[(315, 1344), int32], Tensor[(315, 1), float32]) {
  %800 = cast(%var_11397, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %801 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 450), float32] */, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
  %802 = cast(%var_11410, dtype="float64") /* ty=Tensor[(4, 4), float64] */;
  %803 = reshape(%800, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
  %804 = reshape(%801, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %805 = reshape(%802, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %806 = @func_10219(%803, %804, %805) /* ty=(Tensor[(315), float32], Tensor[(450), float32], Tensor[(1344), uint32], Tensor[(450), float32], Tensor[(315), float32], Tensor[(16), float64], Tensor[(8, 1, 2), bool]) */;
  %807 = @func_7067() /* ty=(Tensor[(450), float32],) */;
  %808 = cast(%var_11396, dtype="uint32") /* ty=uint32 */;
  %809 = cast(%var_11397, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %810 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 450), float32] */, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
  %811 = cast(meta[relay.Constant][67] /* ty=Tensor[(150), uint32] */, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %812 = reshape(%808, newshape=[]) /* ty=uint32 */;
  %813 = reshape(%809, newshape=[2, 672]) /* ty=Tensor[(2, 672), uint32] */;
  %814 = reshape(%810, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %815 = reshape(%811, newshape=[150]) /* ty=Tensor[(150), uint32] */;
  %816 = @func_9639(%812, %813, %814, %815) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(315, 1), float32], Tensor[(132, 1), float32], uint32, Tensor[(2, 672), uint32], Tensor[(450), float32], Tensor[(150), uint32]) */;
  %817 = %816.1;
  %818 = @func_6353() /* ty=(Tensor[(315), float32],) */;
  %819 = %818.0;
  %820 = cast(%819, dtype="int32") /* ty=Tensor[(315), int32] */;
  %821 = shape_of(%817, dtype="int32") /* ty=Tensor[(2), int32] */;
  %822 = cast(%817, dtype="int32") /* ty=Tensor[(315, 1), int32] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %824 = cast(%var_11397, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %825 = cast(%817, dtype="int32") /* ty=Tensor[(315, 1), int32] */;
  %826 = cast(%817, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
  %827 = %806.3;
  %828 = %807.0;
  %829 = minimum(%822, %823) /* ty=Tensor[(315, ?), int32] */;
  %830 = maximum(%824, %825) /* ty=Tensor[(315, 1344), int32] */;
  %831 = atan(%826) /* ty=Tensor[(315, 1), float32] */;
  (%var_11396, meta[relay.Constant][66] /* ty=Tensor[(1, 450), float32] */, meta[relay.Constant][67] /* ty=Tensor[(150), uint32] */, %827, %var_11410, %828, %829, %830, %831)
}

def @func_8672() -> (Tensor[(450), float32], Tensor[(10, 12, 16), float64]) {
  %832 = @func_6654() /* ty=Tensor[(450), float32] */;
  %833 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  (%832, %833)
}

def @func_2373(%var_2370: Tensor[(13, 2, 7), float32]) -> Tensor[(13, 2, 7), float32] {
  %834 = cast(%var_2370, dtype="float32") /* ty=Tensor[(13, 2, 7), float32] */;
  log10(%834) /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_10252() -> (Tensor[(10, 12, 16), int64], Tensor[(13, 2, 7), float32]) {
  %835 = @func_8699() /* ty=(Tensor[(10, 12, 16), int64],) */;
  %836 = @func_8128() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %837 = %835.0;
  %838 = %836.0;
  (%837, %838)
}

def @func_9125() -> Tensor[(315), float32] {
  @func_7460() /* ty=Tensor[(315), float32] */
}

def @func_4785(%var_4738: Tensor[(11, 2, 6), float32], %var_4759: uint32, %var_4760: Tensor[(1344), uint32], %var_4761: Tensor[(150, 3), float32], %var_4765: Tensor[(150), uint32]) -> (Tensor[(11, 2, 6), float32], Tensor[(1170), float32], Tensor[(1008), float32], Tensor[(315, 1), float32], Tensor[(6, 16, 14), uint32], uint32, Tensor[(1344), uint32], Tensor[(150, 3), float32], Tensor[(315), float32], Tensor[(150), uint32]) {
  %839 = cast(%var_4738, dtype="float32") /* ty=Tensor[(11, 2, 6), float32] */;
  %840 = cast(meta[relay.Constant][68] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %841 = cast(meta[relay.Constant][69] /* ty=Tensor[(315, 1), float32] */, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
  %842 = reshape(%840, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), float32] */;
  %843 = reshape(%841, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %844 = @func_2486(%842, %843) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
  %845 = cast(%var_4759, dtype="uint32") /* ty=uint32 */;
  %846 = cast(%var_4760, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %847 = cast(%var_4761, dtype="float32") /* ty=Tensor[(150, 3), float32] */;
  %848 = reshape(%845, newshape=[]) /* ty=uint32 */;
  %849 = reshape(%846, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), uint32] */;
  %850 = reshape(%847, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %851 = @func_2976(%848, %849, %850) /* ty=(Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) */;
  %852 = cast(%var_4765, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %853 = reshape(%852, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), uint32] */;
  %854 = @func_2096(%853) /* ty=(Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %855 = acos(%839) /* ty=Tensor[(11, 2, 6), float32] */;
  %856 = %844.2;
  %857 = %851.0;
  %858 = %854.2;
  (%855, %856, meta[relay.Constant][68] /* ty=Tensor[(1008), float32] */, meta[relay.Constant][69] /* ty=Tensor[(315, 1), float32] */, %857, %var_4759, %var_4760, %var_4761, %858, %var_4765)
}

def @func_10722() -> Tensor[(10, 12, 16), float64] {
  %859 = @func_6522() /* ty=Tensor[(10, 12, 16), float32] */;
  %860 = cast(%859, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  atanh(%860) /* ty=Tensor[(10, 12, 16), float64] */
}

def @func_10776() -> Tensor[(450), float32] {
  @func_6654() /* ty=Tensor[(450), float32] */
}

def @func_442(%var_400: Tensor[(15, 6, 13), float32], %var_413: Tensor[(35, 9), float32]) -> (Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) {
  %861 = cast(%var_400, dtype="float32") /* ty=Tensor[(15, 6, 13), float32] */;
  %862 = cast(%var_413, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
  %863 = cast(%var_413, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
  %864 = reshape(%862, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %865 = reshape(%863, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %866 = @func_268(%864, %865) /* ty=Tensor[(7, 5, 9), bool] */;
  %867 = cast(%866, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
  %868 = cast(%var_413, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
  %869 = reshape(%867, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %870 = reshape(%868, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %871 = cast(%var_413, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
  %872 = cast(%866, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
  %873 = reshape(%871, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %874 = reshape(%872, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %875 = @func_268(%869, %870) /* ty=Tensor[(7, 5, 9), bool] */;
  %876 = cast(%875, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
  %877 = @func_268(%873, %874) /* ty=Tensor[(7, 5, 9), bool] */;
  %878 = cast(%877, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
  %879 = reshape(%876, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %880 = reshape(%878, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %881 = sinh(%861) /* ty=Tensor[(15, 6, 13), float32] */;
  %882 = @func_268(%879, %880) /* ty=Tensor[(7, 5, 9), bool] */;
  (%881, %866, %var_413, %875, %877, %882)
}

def @func_11779() -> (Tensor[(10, 12, 16), float64],) {
  %883 = @func_11324() /* ty=Tensor[(10, 12, 16), float64] */;
  (%883,)
}

def @func_11324() -> Tensor[(10, 12, 16), float64] {
  %884 = @func_8672() /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64]) */;
  %884.1
}

def @func_11519() -> (Tensor[(10, 12, 16), int32], Tensor[(450), float32], Tensor[(10, 12, 16), int32], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(450), float32]) {
  %885 = @func_7792() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(450), float32]) */;
  %886 = cast(meta[relay.Constant][70] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %887 = cast(meta[relay.Constant][71] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %888 = reshape(%886, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %889 = reshape(%887, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %890 = @func_11260(%888, %889) /* ty=(Tensor[(10, 12, 16), int32], Tensor[(11, 12, 1), float32], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(10, 12, 16), float64]) */;
  %891 = @func_7067() /* ty=(Tensor[(450), float32],) */;
  %892 = %885.0;
  %893 = @func_6654() /* ty=Tensor[(450), float32] */;
  %894 = %890.0;
  %895 = %891.0;
  (%892, %893, %894, meta[relay.Constant][70] /* ty=Tensor[(1540), float32] */, meta[relay.Constant][71] /* ty=Tensor[(132), float32] */, %895)
}

def @func_10826(%var_10815: Tensor[(16, 10, 11), int16], %var_10816: Tensor[(16, 10, 11), int16]) -> (Tensor[(16, 10, 11), int16], Tensor[(10, 12, 16), float32]) {
  %896 = cast(%var_10816, dtype="int16") /* ty=Tensor[(16, 10, 11), int16] */;
  %897 = shape_of(%var_10815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%var_10815, dtype="int16") /* ty=Tensor[(16, 10, 11), int16] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %900 = maximum(%898, %899) /* ty=Tensor[(16, 10, 11), int16] */;
  %901 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
  (%900, %901)
}

def @func_5288(%var_5263: Tensor[(15, 1, 10), float32]) -> (Tensor[(15, 1, 10), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(5, 63), float32], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(15, 6, 13), float32]) {
  %902 = cast(%var_5263, dtype="float32") /* ty=Tensor[(15, 1, 10), float32] */;
  %903 = cast(meta[relay.Constant][72] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %904 = cast(meta[relay.Constant][73] /* ty=Tensor[(5, 63), float32] */, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
  %905 = reshape(%903, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
  %906 = reshape(%904, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
  %907 = @func_442(%905, %906) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
  %908 = cast(meta[relay.Constant][74] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %909 = cast(meta[relay.Constant][73] /* ty=Tensor[(5, 63), float32] */, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
  %910 = reshape(%908, newshape=[50, 9]) /* ty=Tensor[(50, 9), float32] */;
  %911 = reshape(%909, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %912 = @func_3255(%910, %911) /* ty=(Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
  %913 = cast(meta[relay.Constant][72] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %914 = cast(meta[relay.Constant][73] /* ty=Tensor[(5, 63), float32] */, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
  %915 = reshape(%913, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
  %916 = reshape(%914, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
  %917 = @func_442(%915, %916) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
  %918 = log2(%902) /* ty=Tensor[(15, 1, 10), float32] */;
  %919 = %907.3;
  %920 = %912.3;
  %921 = %917.0;
  (%918, %919, meta[relay.Constant][72] /* ty=Tensor[(1170), float32] */, meta[relay.Constant][73] /* ty=Tensor[(5, 63), float32] */, %920, meta[relay.Constant][74] /* ty=Tensor[(450), float32] */, %921)
}

def @func_3811(%var_3803: Tensor[(36), float32], %var_3804: Tensor[(210), int16]) -> (Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) {
  %922 = cast(meta[relay.Constant][75] /* ty=Tensor[(5, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 4, 4), float32] */;
  %923 = cast(%var_3803, dtype="float32") /* ty=Tensor[(36), float32] */;
  %924 = cast(%var_3804, dtype="int16") /* ty=Tensor[(210), int16] */;
  %925 = reshape(%923, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), float32] */;
  %926 = reshape(%924, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %927 = @func_2901(%925, %926) /* ty=(Tensor[(3, 5, 14), bool], Tensor[(210), int16], Tensor[(2, 9, 2), float64]) */;
  %928 = tan(%922) /* ty=Tensor[(5, 4, 4), float32] */;
  %929 = %927.0;
  (%928, %929, %var_3803, %var_3804)
}

def @func_6296(%var_6288: Tensor[(182), float32]) -> (Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), bool], Tensor[(1920), float64], Tensor[(182), float32]) {
  %930 = @func_6144() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) */;
  %931 = cast(meta[relay.Constant][76] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %932 = cast(%var_6288, dtype="float32") /* ty=Tensor[(182), float32] */;
  %933 = reshape(%931, newshape=[10, 12, 16]) /* ty=Tensor[(10, 12, 16), float64] */;
  %934 = reshape(%932, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %935 = @func_6231(%933, %934) /* ty=(Tensor[(10, 12, 16), bool], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) */;
  %936 = %930.1;
  %937 = %935.0;
  (%936, %937, meta[relay.Constant][76] /* ty=Tensor[(1920), float64] */, %var_6288)
}

def @func_6144() -> (Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) {
  %938 = cast(meta[relay.Constant][77] /* ty=Tensor[(2912), uint32] */, dtype="uint32") /* ty=Tensor[(2912), uint32] */;
  %939 = reshape(%938, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), uint32] */;
  %940 = @func_5030(%939) /* ty=(Tensor[(16, 14, 13), uint32], Tensor[(5, 4, 4), float32], Tensor[(36), float32], Tensor[(105, 2), int16], Tensor[(16, 1, 13), float64], Tensor[(36), float32], Tensor[(50, 9), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %941 = %940.0;
  %942 = cast(meta[relay.Constant][77] /* ty=Tensor[(2912), uint32] */, dtype="uint16") /* ty=Tensor[(2912), uint16] */;
  %943 = shape_of(%941, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(%941, dtype="uint16") /* ty=Tensor[(16, 14, 13), uint16] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %946 = minimum(%944, %945) /* ty=Tensor[(16, 14, 13), uint16] */;
  %947 = cast(%946, dtype="int16") /* ty=Tensor[(16, 14, 13), int16] */;
  %948 = shape_of(%941, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(%941, dtype="int16") /* ty=Tensor[(16, 14, 13), int16] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %951 = cast(%946, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
  %952 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  %953 = bitwise_xor(%949, %950) /* ty=Tensor[(16, 14, 13), int16] */;
  %954 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  %955 = log(%951) /* ty=Tensor[(16, 14, 13), float32] */;
  (%952, %953, %954, %955)
}

def @func_10762(%var_10748: Tensor[(13, 2, 7), float32]) -> Tensor[(13, 2, 7), bool] {
  %956 = @func_9706() /* ty=Tensor[(13, 2, 7), float32] */;
  %957 = cast(%var_10748, dtype="bool") /* ty=Tensor[(13, 2, 7), bool] */;
  %958 = shape_of(%956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %959 = cast(%956, dtype="bool") /* ty=Tensor[(13, 2, 7), bool] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%959, %960) /* ty=Tensor[(13, 2, 7), bool] */
}

def @func_6276(%var_6273: uint16) -> (Tensor[(10, 12, 16), float64], Tensor[(11, 5, 9), float64], uint16, Tensor[(1, 495), uint16]) {
  %961 = @func_6144() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) */;
  %962 = %961.0;
  %963 = cast(%962, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %964 = cast(%var_6273, dtype="uint16") /* ty=uint16 */;
  %965 = cast(meta[relay.Constant][78] /* ty=Tensor[(1, 495), uint16] */, dtype="uint16") /* ty=Tensor[(1, 495), uint16] */;
  %966 = cast(meta[relay.Constant][78] /* ty=Tensor[(1, 495), uint16] */, dtype="uint16") /* ty=Tensor[(1, 495), uint16] */;
  %967 = reshape(%964, newshape=[]) /* ty=uint16 */;
  %968 = reshape(%965, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), uint16] */;
  %969 = reshape(%966, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), uint16] */;
  %970 = @func_2062(%967, %968, %969) /* ty=(Tensor[(11, 5, 9), uint16], Tensor[(11, 5, 9), float64], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32]) */;
  %971 = erf(%963) /* ty=Tensor[(10, 12, 16), float64] */;
  %972 = %970.1;
  (%971, %972, %var_6273, meta[relay.Constant][78] /* ty=Tensor[(1, 495), uint16] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7909(%var_7908: Tensor[(14, 4, 4), float32]) -> (Tensor[(14, 4, 4), float32],) {
  %2 = fn (%var_7901: Tensor[(14, 4, 4), float32]) -> (Tensor[(14, 4, 4), float32],) {
    %0 = cast(%var_7901, dtype="float32") /* ty=Tensor[(14, 4, 4), float32] */;
    %1 = sin(%0) /* ty=Tensor[(14, 4, 4), float32] */;
    (%1,)
  };
  %2(%var_7908) /* ty=(Tensor[(14, 4, 4), float32],) */
}

def @func_8081() -> (Tensor[(13, 2, 7), float32],) {
  %5 = fn () -> (Tensor[(13, 2, 7), float32],) {
    %3 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
    %4 = %3.1;
    (%4,)
  };
  %5() /* ty=(Tensor[(13, 2, 7), float32],) */
}

def @func_2375(%var_2374: Tensor[(13, 2, 7), float32]) -> Tensor[(13, 2, 7), float32] {
  %7 = fn (%var_2370: Tensor[(13, 2, 7), float32]) -> Tensor[(13, 2, 7), float32] {
    %6 = cast(%var_2370, dtype="float32") /* ty=Tensor[(13, 2, 7), float32] */;
    log10(%6) /* ty=Tensor[(13, 2, 7), float32] */
  };
  %7(%var_2374) /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_9094() -> (Tensor[(315), float32], Tensor[(10, 12, 16), int64]) {
  @func_9092() /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), int64]) */
}

def @func_7226(%var_7165: Tensor[(315), float32]) -> (Tensor[(315), float32], Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(1920), float64], Tensor[(182), float32]) {
  %8 = cast(%var_7165, dtype="float32") /* ty=Tensor[(315), float32] */;
  %9 = reshape(%8, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %10 = @func_965(%9) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %11 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %12 = %11.0;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 12, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%12, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %18 = reshape(%17, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %19 = @func_6296(%18) /* ty=(Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), bool], Tensor[(1920), float64], Tensor[(182), float32]) */;
  %20 = %10.2;
  %21 = power(%15, %16) /* ty=Tensor[(10, 12, 16), float64] */;
  %22 = %19.2;
  (%20, %var_7165, %21, %22, meta[relay.Constant][1] /* ty=Tensor[(182), float32] */)
}

def @func_8093() -> (Tensor[(13, 2, 7), float32],) {
  %23 = @func_8080() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %24 = %23.0;
  (%24,)
}

def @func_7871(%var_7869: Tensor[(5, 234), float32]) -> (Tensor[(10, 12, 16), float64], Tensor[(35, 9), float32], Tensor[(5, 234), float32], Tensor[(315), float32]) {
  @func_7868(%var_7869) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(35, 9), float32], Tensor[(5, 234), float32], Tensor[(315), float32]) */
}

def @func_8309(%var_8307: Tensor[(9, 9, 4), float32]) -> Tensor[(9, 9, 4), float32] {
  @func_8306(%var_8307) /* ty=Tensor[(9, 9, 4), float32] */
}

def @func_7284(%var_7283: Tensor[(880), uint32]) -> (Tensor[(10, 12, 16), float64], Tensor[(10, 12, 16), float32], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) {
  %36 = fn (%var_7279: Tensor[(880), uint32]) -> (Tensor[(10, 12, 16), float64], Tensor[(10, 12, 16), float32], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) {
    %25 = @func_6701() /* ty=(Tensor[(10, 12, 16), float64],) */;
    %26 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
    %27 = cast(%26, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
    %28 = cast(%var_7279, dtype="uint32") /* ty=Tensor[(880), uint32] */;
    %29 = cast(%var_7279, dtype="uint32") /* ty=Tensor[(880), uint32] */;
    %30 = reshape(%28, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), uint32] */;
    %31 = reshape(%29, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), uint32] */;
    %32 = @func_5654(%30, %31) /* ty=(Tensor[(16, 5, 11), uint32],) */;
    %33 = %25.0;
    %34 = sigmoid(%27) /* ty=Tensor[(10, 12, 16), float32] */;
    %35 = %32.0;
    (%33, %34, %35, %var_7279)
  };
  %36(%var_7283) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(10, 12, 16), float32], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) */
}

def @func_8130() -> (Tensor[(13, 2, 7), float32],) {
  @func_8128() /* ty=(Tensor[(13, 2, 7), float32],) */
}

def @func_6654() -> Tensor[(450), float32] {
  %37 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %37.2
}

def @func_8616(%var_8614: Tensor[(210), int16]) -> (Tensor[(10, 12, 16), float32], Tensor[(10, 12, 16), float64], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) {
  @func_8613(%var_8614) /* ty=(Tensor[(10, 12, 16), float32], Tensor[(10, 12, 16), float64], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */
}

def @func_5960() -> Tensor[(10, 12, 16), float64] {
  %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 12, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  rsqrt(%38) /* ty=Tensor[(10, 12, 16), float64] */
}

def @func_8613(%var_8601: Tensor[(210), int16]) -> (Tensor[(10, 12, 16), float32], Tensor[(10, 12, 16), float64], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) {
  %39 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %41 = log2(%40) /* ty=Tensor[(10, 12, 16), float32] */;
  %42 = cast(%41, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %43 = cast(meta[relay.Constant][3] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %44 = cast(%var_8601, dtype="int16") /* ty=Tensor[(210), int16] */;
  %45 = reshape(%43, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %46 = reshape(%44, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %47 = @func_3811(%45, %46) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */;
  %48 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
  %49 = asin(%42) /* ty=Tensor[(10, 12, 16), float64] */;
  %50 = %47.1;
  (%48, %49, %50, meta[relay.Constant][3] /* ty=Tensor[(36), float32] */, %var_8601)
}

def @func_10219(%var_10184: Tensor[(1344), uint32], %var_10185: Tensor[(450), float32], %var_10206: Tensor[(16), float64]) -> (Tensor[(315), float32], Tensor[(450), float32], Tensor[(1344), uint32], Tensor[(450), float32], Tensor[(315), float32], Tensor[(16), float64], Tensor[(8, 1, 2), bool]) {
  %51 = cast(meta[relay.Constant][4] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %52 = cast(%var_10184, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %53 = cast(%var_10185, dtype="float32") /* ty=Tensor[(450), float32] */;
  %54 = reshape(%51, newshape=[]) /* ty=uint32 */;
  %55 = reshape(%52, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), uint32] */;
  %56 = reshape(%53, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %57 = @func_2976(%54, %55, %56) /* ty=(Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) */;
  %58 = @func_9437() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(315), float32], Tensor[(315), float32]) */;
  %59 = cast(%var_10206, dtype="float64") /* ty=Tensor[(16), float64] */;
  %60 = reshape(%59, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float64] */;
  %61 = @func_7315(%60) /* ty=Tensor[(8, 1, 2), float64] */;
  %62 = cast(%61, dtype="bool") /* ty=Tensor[(8, 1, 2), bool] */;
  %63 = cast(meta[relay.Constant][4] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %64 = @func_10168() /* ty=Tensor[(315), float32] */;
  %65 = %57.3;
  %66 = %58.2;
  %67 = equal(%62, %63) /* ty=Tensor[(8, 1, 2), bool] */;
  (%64, %65, %var_10184, %var_10185, %66, %var_10206, %67)
}

def @func_11457(%var_11454: uint32, %var_11455: Tensor[(1344), uint32], %var_11456: Tensor[(4, 4), float64]) -> (uint32, Tensor[(1, 450), float32], Tensor[(150), uint32], Tensor[(450), float32], Tensor[(4, 4), float64], Tensor[(450), float32], Tensor[(315, ?), int32], Tensor[(315, 1344), int32], Tensor[(315, 1), float32]) {
  %100 = fn (%var_11396: uint32, %var_11397: Tensor[(1344), uint32], %var_11410: Tensor[(4, 4), float64]) -> (uint32, Tensor[(1, 450), float32], Tensor[(150), uint32], Tensor[(450), float32], Tensor[(4, 4), float64], Tensor[(450), float32], Tensor[(315, ?), int32], Tensor[(315, 1344), int32], Tensor[(315, 1), float32]) {
    %68 = cast(%var_11397, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
    %69 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 450), float32] */, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
    %70 = cast(%var_11410, dtype="float64") /* ty=Tensor[(4, 4), float64] */;
    %71 = reshape(%68, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
    %72 = reshape(%69, newshape=[450]) /* ty=Tensor[(450), float32] */;
    %73 = reshape(%70, newshape=[16]) /* ty=Tensor[(16), float64] */;
    %74 = @func_10219(%71, %72, %73) /* ty=(Tensor[(315), float32], Tensor[(450), float32], Tensor[(1344), uint32], Tensor[(450), float32], Tensor[(315), float32], Tensor[(16), float64], Tensor[(8, 1, 2), bool]) */;
    %75 = @func_7067() /* ty=(Tensor[(450), float32],) */;
    %76 = cast(%var_11396, dtype="uint32") /* ty=uint32 */;
    %77 = cast(%var_11397, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
    %78 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 450), float32] */, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
    %79 = cast(meta[relay.Constant][6] /* ty=Tensor[(150), uint32] */, dtype="uint32") /* ty=Tensor[(150), uint32] */;
    %80 = reshape(%76, newshape=[]) /* ty=uint32 */;
    %81 = reshape(%77, newshape=[2, 672]) /* ty=Tensor[(2, 672), uint32] */;
    %82 = reshape(%78, newshape=[450]) /* ty=Tensor[(450), float32] */;
    %83 = reshape(%79, newshape=[150]) /* ty=Tensor[(150), uint32] */;
    %84 = @func_9639(%80, %81, %82, %83) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(315, 1), float32], Tensor[(132, 1), float32], uint32, Tensor[(2, 672), uint32], Tensor[(450), float32], Tensor[(150), uint32]) */;
    %85 = %84.1;
    %86 = @func_6353() /* ty=(Tensor[(315), float32],) */;
    %87 = %86.0;
    %88 = cast(%87, dtype="int32") /* ty=Tensor[(315), int32] */;
    %89 = shape_of(%85, dtype="int32") /* ty=Tensor[(2), int32] */;
    %90 = cast(%85, dtype="int32") /* ty=Tensor[(315, 1), int32] */;
    %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %92 = cast(%var_11397, dtype="int32") /* ty=Tensor[(1344), int32] */;
    %93 = cast(%85, dtype="int32") /* ty=Tensor[(315, 1), int32] */;
    %94 = cast(%85, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
    %95 = %74.3;
    %96 = %75.0;
    %97 = minimum(%90, %91) /* ty=Tensor[(315, ?), int32] */;
    %98 = maximum(%92, %93) /* ty=Tensor[(315, 1344), int32] */;
    %99 = atan(%94) /* ty=Tensor[(315, 1), float32] */;
    (%var_11396, meta[relay.Constant][5] /* ty=Tensor[(1, 450), float32] */, meta[relay.Constant][6] /* ty=Tensor[(150), uint32] */, %95, %var_11410, %96, %97, %98, %99)
  };
  %100(%var_11454, %var_11455, %var_11456) /* ty=(uint32, Tensor[(1, 450), float32], Tensor[(150), uint32], Tensor[(450), float32], Tensor[(4, 4), float64], Tensor[(450), float32], Tensor[(315, ?), int32], Tensor[(315, 1344), int32], Tensor[(315, 1), float32]) */
}

def @func_9148() -> Tensor[(5, 6, 15), float64] {
  %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 6, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 6, 15), float64] */;
  asin(%101) /* ty=Tensor[(5, 6, 15), float64] */
}

def @func_11781() -> (Tensor[(10, 12, 16), float64],) {
  @func_11779() /* ty=(Tensor[(10, 12, 16), float64],) */
}

def @func_6524() -> Tensor[(10, 12, 16), float32] {
  @func_6522() /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_7091() -> (Tensor[(315), float32],) {
  @func_7089() /* ty=(Tensor[(315), float32],) */
}

def @func_11810() -> (Tensor[(4, 6, 7), float64], Tensor[(450), float32]) {
  @func_11808() /* ty=(Tensor[(4, 6, 7), float64], Tensor[(450), float32]) */
}

def @func_9476() -> Tensor[(13, 2, 7), float32] {
  %102 = fn () -> Tensor[(13, 2, 7), float32] {
    @func_7337() /* ty=Tensor[(13, 2, 7), float32] */
  };
  %102() /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_10495() -> (Tensor[(10, 12, 16), float32], Tensor[(50, 9), float32], Tensor[(450), float32], Tensor[(315), float32]) {
  @func_10493() /* ty=(Tensor[(10, 12, 16), float32], Tensor[(50, 9), float32], Tensor[(450), float32], Tensor[(315), float32]) */
}

def @func_5032(%var_5031: Tensor[(16, 14, 13), uint32]) -> (Tensor[(16, 14, 13), uint32], Tensor[(5, 4, 4), float32], Tensor[(36), float32], Tensor[(105, 2), int16], Tensor[(16, 1, 13), float64], Tensor[(36), float32], Tensor[(50, 9), float32], Tensor[(450), float32], Tensor[(315), float32]) {
  %126 = fn (%var_4990: Tensor[(16, 14, 13), uint32]) -> (Tensor[(16, 14, 13), uint32], Tensor[(5, 4, 4), float32], Tensor[(36), float32], Tensor[(105, 2), int16], Tensor[(16, 1, 13), float64], Tensor[(36), float32], Tensor[(50, 9), float32], Tensor[(450), float32], Tensor[(315), float32]) {
    %103 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 1, 13), uint32] */, dtype="uint32") /* ty=Tensor[(16, 1, 13), uint32] */;
    %104 = cast(%var_4990, dtype="uint32") /* ty=Tensor[(16, 14, 13), uint32] */;
    %105 = cast(meta[relay.Constant][9] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
    %106 = cast(meta[relay.Constant][10] /* ty=Tensor[(105, 2), int16] */, dtype="int16") /* ty=Tensor[(105, 2), int16] */;
    %107 = reshape(%105, newshape=[36]) /* ty=Tensor[(36), float32] */;
    %108 = reshape(%106, newshape=[210]) /* ty=Tensor[(210), int16] */;
    %109 = @func_3811(%107, %108) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */;
    %110 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 1, 13), uint32] */, dtype="float64") /* ty=Tensor[(16, 1, 13), float64] */;
    %111 = cast(meta[relay.Constant][9] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
    %112 = cast(meta[relay.Constant][10] /* ty=Tensor[(105, 2), int16] */, dtype="int16") /* ty=Tensor[(105, 2), int16] */;
    %113 = reshape(%111, newshape=[36]) /* ty=Tensor[(36), float32] */;
    %114 = reshape(%112, newshape=[210]) /* ty=Tensor[(210), int16] */;
    %115 = @func_3811(%113, %114) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */;
    %116 = cast(meta[relay.Constant][11] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %117 = cast(meta[relay.Constant][12] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %118 = reshape(%116, newshape=[50, 9]) /* ty=Tensor[(50, 9), float32] */;
    %119 = reshape(%117, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %120 = @func_3255(%118, %119) /* ty=(Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
    %121 = left_shift(%103, %104) /* ty=Tensor[(16, 14, 13), uint32] */;
    %122 = %109.0;
    %123 = sin(%110) /* ty=Tensor[(16, 1, 13), float64] */;
    %124 = %115.2;
    %125 = %120.4;
    (%121, %122, meta[relay.Constant][9] /* ty=Tensor[(36), float32] */, meta[relay.Constant][10] /* ty=Tensor[(105, 2), int16] */, %123, %124, %125, meta[relay.Constant][11] /* ty=Tensor[(450), float32] */, meta[relay.Constant][12] /* ty=Tensor[(315), float32] */)
  };
  %126(%var_5031) /* ty=(Tensor[(16, 14, 13), uint32], Tensor[(5, 4, 4), float32], Tensor[(36), float32], Tensor[(105, 2), int16], Tensor[(16, 1, 13), float64], Tensor[(36), float32], Tensor[(50, 9), float32], Tensor[(450), float32], Tensor[(315), float32]) */
}

def @func_8979(%var_8978: Tensor[(1920), float64]) -> (Tensor[(13, 2, 7), float32], Tensor[(10, 12, 16), bool], Tensor[(1920), float32], Tensor[(15, 6, 13), float32], Tensor[(150), float32], Tensor[(1920), float32]) {
  %148 = fn (%var_8918: Tensor[(1920), float64]) -> (Tensor[(13, 2, 7), float32], Tensor[(10, 12, 16), bool], Tensor[(1920), float32], Tensor[(15, 6, 13), float32], Tensor[(150), float32], Tensor[(1920), float32]) {
    %127 = @func_8080() /* ty=(Tensor[(13, 2, 7), float32],) */;
    %128 = cast(%var_8918, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %129 = reshape(%128, newshape=[10, 12, 16]) /* ty=Tensor[(10, 12, 16), float64] */;
    %130 = @func_5993(%129) /* ty=(Tensor[(10, 12, 16), bool],) */;
    %131 = cast(%var_8918, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %132 = exp(%131) /* ty=Tensor[(1920), float64] */;
    %133 = cast(%132, dtype="float32") /* ty=Tensor[(1920), float32] */;
    %134 = cast(meta[relay.Constant][13] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
    %135 = reshape(%134, newshape=[15, 1, 10]) /* ty=Tensor[(15, 1, 10), float32] */;
    %136 = @func_5288(%135) /* ty=(Tensor[(15, 1, 10), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(5, 63), float32], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(15, 6, 13), float32]) */;
    %137 = cast(meta[relay.Constant][14] /* ty=Tensor[(1920), float64] */, dtype="int16") /* ty=Tensor[(1920), int16] */;
    %138 = shape_of(%132, dtype="int32") /* ty=Tensor[(1), int32] */;
    %139 = cast(%132, dtype="int16") /* ty=Tensor[(1920), int16] */;
    %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?), int16] */;
    %141 = multiply(%139, %140) /* ty=Tensor[(1920), int16] */;
    %142 = cast(%141, dtype="float32") /* ty=Tensor[(1920), float32] */;
    %143 = %127.0;
    %144 = %130.0;
    %145 = acos(%133) /* ty=Tensor[(1920), float32] */;
    %146 = %136.6;
    %147 = log(%142) /* ty=Tensor[(1920), float32] */;
    (%143, %144, %145, %146, meta[relay.Constant][13] /* ty=Tensor[(150), float32] */, %147)
  };
  %148(%var_8978) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(10, 12, 16), bool], Tensor[(1920), float32], Tensor[(15, 6, 13), float32], Tensor[(150), float32], Tensor[(1920), float32]) */
}

def @func_9092() -> (Tensor[(315), float32], Tensor[(10, 12, 16), int64]) {
  %149 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %150 = @func_6553() /* ty=(Tensor[(10, 12, 16), int64],) */;
  %151 = %149.3;
  %152 = %150.0;
  (%151, %152)
}

def @func_6169() -> (Tensor[(10, 12, 16), float32],) {
  %156 = fn () -> (Tensor[(10, 12, 16), float32],) {
    %153 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
    %154 = cast(%153, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
    %155 = sinh(%154) /* ty=Tensor[(10, 12, 16), float32] */;
    (%155,)
  };
  %156() /* ty=(Tensor[(10, 12, 16), float32],) */
}

def @func_11632() -> uint16 {
  %157 = fn () -> uint16 {
    @func_11372() /* ty=uint16 */
  };
  %157() /* ty=uint16 */
}

def @func_445(%var_443: Tensor[(15, 6, 13), float32], %var_444: Tensor[(35, 9), float32]) -> (Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) {
  %180 = fn (%var_400: Tensor[(15, 6, 13), float32], %var_413: Tensor[(35, 9), float32]) -> (Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) {
    %158 = cast(%var_400, dtype="float32") /* ty=Tensor[(15, 6, 13), float32] */;
    %159 = cast(%var_413, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
    %160 = cast(%var_413, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
    %161 = reshape(%159, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
    %162 = reshape(%160, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
    %163 = @func_268(%161, %162) /* ty=Tensor[(7, 5, 9), bool] */;
    %164 = cast(%163, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
    %165 = cast(%var_413, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
    %166 = reshape(%164, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
    %167 = reshape(%165, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
    %168 = cast(%var_413, dtype="float32") /* ty=Tensor[(35, 9), float32] */;
    %169 = cast(%163, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
    %170 = reshape(%168, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
    %171 = reshape(%169, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
    %172 = @func_268(%166, %167) /* ty=Tensor[(7, 5, 9), bool] */;
    %173 = cast(%172, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
    %174 = @func_268(%170, %171) /* ty=Tensor[(7, 5, 9), bool] */;
    %175 = cast(%174, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
    %176 = reshape(%173, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
    %177 = reshape(%175, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
    %178 = sinh(%158) /* ty=Tensor[(15, 6, 13), float32] */;
    %179 = @func_268(%176, %177) /* ty=Tensor[(7, 5, 9), bool] */;
    (%178, %163, %var_413, %172, %174, %179)
  };
  %180(%var_443, %var_444) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */
}

def @func_11209(%var_11204: Tensor[(16, 1, 5), float32]) -> Tensor[(16, 1, 5), float32] {
  %181 = cast(%var_11204, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
  log2(%181) /* ty=Tensor[(16, 1, 5), float32] */
}

def @func_9150() -> Tensor[(5, 6, 15), float64] {
  @func_9148() /* ty=Tensor[(5, 6, 15), float64] */
}

def @func_7898() -> (Tensor[(10, 12, 16), float32],) {
  %182 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %183 = %182.0;
  (%183,)
}

def @func_1196(%var_1194: uint64, %var_1195: Tensor[(15, 12, 13), uint64]) -> (Tensor[(15, 6, 13), float32], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(15, 12, 13), float32], Tensor[(315), float32]) {
  @func_1192(%var_1194, %var_1195) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(15, 12, 13), float32], Tensor[(315), float32]) */
}

def @func_1642(%var_1636: Tensor[(3, 5, 14), int16]) -> (Tensor[(3, 5, 14), bool],) {
  %184 = cast(%var_1636, dtype="bool") /* ty=Tensor[(3, 5, 14), bool] */;
  %185 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(3, 5, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 5, 14), int16] */, dtype="bool") /* ty=Tensor[(3, 5, 14), bool] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %188 = equal(%186, %187) /* ty=Tensor[(3, 5, 14), bool] */;
  (%188,)
}

def @func_7338() -> Tensor[(13, 2, 7), float32] {
  %189 = fn () -> Tensor[(13, 2, 7), float32] {
    @func_6409() /* ty=Tensor[(13, 2, 7), float32] */
  };
  %189() /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_7554(%var_7553: Tensor[(1920), float64]) -> (Tensor[(13, 2, 7), float32], Tensor[(13, 2, 7), float32], Tensor[(1920), uint32], Tensor[(15, 16, 8), float64], Tensor[(450), float32], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) {
  %220 = fn (%var_7491: Tensor[(1920), float64]) -> (Tensor[(13, 2, 7), float32], Tensor[(13, 2, 7), float32], Tensor[(1920), uint32], Tensor[(15, 16, 8), float64], Tensor[(450), float32], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) {
    %190 = cast(%var_7491, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %191 = cast(%var_7491, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %192 = reshape(%190, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
    %193 = reshape(%191, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
    %194 = @func_7395(%192, %193) /* ty=(Tensor[(15, 16, 8), float64],) */;
    %195 = %194.0;
    %196 = cast(%195, dtype="uint32") /* ty=Tensor[(15, 16, 8), uint32] */;
    %197 = shape_of(%var_7491, dtype="int32") /* ty=Tensor[(1), int32] */;
    %198 = cast(%var_7491, dtype="uint32") /* ty=Tensor[(1920), uint32] */;
    %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %200 = cast(%var_7491, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %201 = cast(%195, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
    %202 = reshape(%200, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
    %203 = reshape(%201, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
    %204 = @func_7395(%202, %203) /* ty=(Tensor[(15, 16, 8), float64],) */;
    %205 = %204.0;
    %206 = cast(%205, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
    %207 = cast(%var_7491, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %208 = reshape(%206, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
    %209 = reshape(%207, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
    %210 = @func_7395(%208, %209) /* ty=(Tensor[(15, 16, 8), float64],) */;
    %211 = cast(%195, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
    %212 = exp(%211) /* ty=Tensor[(15, 16, 8), float32] */;
    %213 = cast(%212, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
    %214 = @func_6905() /* ty=Tensor[(13, 2, 7), float32] */;
    %215 = @func_6409() /* ty=Tensor[(13, 2, 7), float32] */;
    %216 = left_shift(%198, %199) /* ty=Tensor[(1920), uint32] */;
    %217 = @func_6654() /* ty=Tensor[(450), float32] */;
    %218 = %210.0;
    %219 = asin(%213) /* ty=Tensor[(15, 16, 8), float32] */;
    (%214, %215, %216, %205, %217, %218, %219)
  };
  %220(%var_7553) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(13, 2, 7), float32], Tensor[(1920), uint32], Tensor[(15, 16, 8), float64], Tensor[(450), float32], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */
}

def @func_7664(%var_7653: Tensor[(8, 8, 8), float32], %var_7661: Tensor[(5, 63), float32]) -> (Tensor[(8, 8, 8), float32], Tensor[(7, 5, 9), bool], Tensor[(5, 63), float32]) {
  %221 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 1, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 8), float32] */;
  %222 = cast(%var_7653, dtype="float32") /* ty=Tensor[(8, 8, 8), float32] */;
  %223 = cast(%var_7661, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
  %224 = cast(%var_7661, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
  %225 = reshape(%223, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %226 = reshape(%224, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
  %227 = mod(%221, %222) /* ty=Tensor[(8, 8, 8), float32] */;
  %228 = @func_268(%225, %226) /* ty=Tensor[(7, 5, 9), bool] */;
  (%227, %228, %var_7661)
}

def @func_10224(%var_10221: Tensor[(1344), uint32], %var_10222: Tensor[(450), float32], %var_10223: Tensor[(16), float64]) -> (Tensor[(315), float32], Tensor[(450), float32], Tensor[(1344), uint32], Tensor[(450), float32], Tensor[(315), float32], Tensor[(16), float64], Tensor[(8, 1, 2), bool]) {
  @func_10219(%var_10221, %var_10222, %var_10223) /* ty=(Tensor[(315), float32], Tensor[(450), float32], Tensor[(1344), uint32], Tensor[(450), float32], Tensor[(315), float32], Tensor[(16), float64], Tensor[(8, 1, 2), bool]) */
}

def @func_7395(%var_7374: Tensor[(15, 16, 8), float64], %var_7375: Tensor[(15, 16, 8), float64]) -> (Tensor[(15, 16, 8), float64],) {
  %229 = cast(%var_7375, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %230 = shape_of(%var_7374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%var_7374, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %233 = floor_mod(%231, %232) /* ty=Tensor[(15, 16, 8), float64] */;
  (%233,)
}

def @func_9639(%var_9628: uint32, %var_9629: Tensor[(2, 672), uint32], %var_9630: Tensor[(450), float32], %var_9631: Tensor[(150), uint32]) -> (Tensor[(13, 2, 7), float32], Tensor[(315, 1), float32], Tensor[(132, 1), float32], uint32, Tensor[(2, 672), uint32], Tensor[(450), float32], Tensor[(150), uint32]) {
  %234 = @func_8269() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %235 = cast(meta[relay.Constant][17] /* ty=Tensor[(132, 1), float32] */, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
  %236 = cast(%var_9628, dtype="uint32") /* ty=uint32 */;
  %237 = cast(%var_9629, dtype="uint32") /* ty=Tensor[(2, 672), uint32] */;
  %238 = cast(%var_9630, dtype="float32") /* ty=Tensor[(450), float32] */;
  %239 = cast(%var_9631, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %240 = reshape(%235, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %241 = reshape(%236, newshape=[]) /* ty=uint32 */;
  %242 = reshape(%237, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
  %243 = reshape(%238, newshape=[150, 3]) /* ty=Tensor[(150, 3), float32] */;
  %244 = reshape(%239, newshape=[150]) /* ty=Tensor[(150), uint32] */;
  %245 = @func_4785(%240, %241, %242, %243, %244) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(1170), float32], Tensor[(1008), float32], Tensor[(315, 1), float32], Tensor[(6, 16, 14), uint32], uint32, Tensor[(1344), uint32], Tensor[(150, 3), float32], Tensor[(315), float32], Tensor[(150), uint32]) */;
  %246 = %234.0;
  %247 = %245.3;
  (%246, %247, meta[relay.Constant][17] /* ty=Tensor[(132, 1), float32] */, %var_9628, %var_9629, %var_9630, %var_9631)
}

def @func_4156(%var_4154: Tensor[(14, 10, 11), float32], %var_4155: Tensor[(132), float32]) -> (Tensor[(11, 12, 1), float32], Tensor[(132), float32], Tensor[(14, 10, 11), float64], Tensor[(14, 10, 11), float32]) {
  %262 = fn (%var_4111: Tensor[(14, 10, 11), float32], %var_4127: Tensor[(132), float32]) -> (Tensor[(11, 12, 1), float32], Tensor[(132), float32], Tensor[(14, 10, 11), float64], Tensor[(14, 10, 11), float32]) {
    %248 = cast(%var_4127, dtype="float32") /* ty=Tensor[(132), float32] */;
    %249 = reshape(%248, newshape=[11, 12, 1]) /* ty=Tensor[(11, 12, 1), float32] */;
    %250 = cast(%var_4111, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
    %251 = rsqrt(%250) /* ty=Tensor[(14, 10, 11), float32] */;
    %252 = cast(%251, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
    %253 = log2(%252) /* ty=Tensor[(14, 10, 11), float64] */;
    %254 = cast(%251, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
    %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
    %256 = cast(%253, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
    %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %258 = cast(%251, dtype="float32") /* ty=Tensor[(14, 10, 11), float32] */;
    %259 = @func_3148(%249) /* ty=Tensor[(11, 12, 1), float32] */;
    %260 = divide(%256, %257) /* ty=Tensor[(14, 10, 11), float64] */;
    %261 = asin(%258) /* ty=Tensor[(14, 10, 11), float32] */;
    (%259, %var_4127, %260, %261)
  };
  %262(%var_4154, %var_4155) /* ty=(Tensor[(11, 12, 1), float32], Tensor[(132), float32], Tensor[(14, 10, 11), float64], Tensor[(14, 10, 11), float32]) */
}

def @func_11374() -> uint16 {
  @func_11372() /* ty=uint16 */
}

def @func_5427(%var_5415: Tensor[(18), uint64]) -> (Tensor[(7, 11, 8), bool], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(15, 5, 2), bool], Tensor[(150), uint32]) {
  %263 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 11, 8), uint8] */, dtype="bool") /* ty=Tensor[(7, 11, 8), bool] */;
  %264 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(7, 11, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 11, 8), uint8] */, dtype="bool") /* ty=Tensor[(7, 11, 8), bool] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %267 = cast(%var_5415, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %268 = reshape(%267, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), uint64] */;
  %269 = @func_2699(%268) /* ty=(Tensor[(2, 9, ?), uint64],) */;
  %270 = cast(meta[relay.Constant][20] /* ty=Tensor[(150), uint32] */, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %271 = reshape(%270, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), uint32] */;
  %272 = @func_2096(%271) /* ty=(Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %273 = less(%265, %266) /* ty=Tensor[(7, 11, 8), bool] */;
  %274 = %269.0;
  %275 = %272.0;
  (%273, %274, %var_5415, %275, meta[relay.Constant][20] /* ty=Tensor[(150), uint32] */)
}

def @func_7922() -> Tensor[(10, 12, 16), float32] {
  %277 = fn () -> Tensor[(10, 12, 16), float32] {
    %276 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
    %276.0
  };
  %277() /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_9708() -> Tensor[(13, 2, 7), float32] {
  @func_9706() /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_6145() -> (Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) {
  %296 = fn () -> (Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) {
    %278 = cast(meta[relay.Constant][21] /* ty=Tensor[(2912), uint32] */, dtype="uint32") /* ty=Tensor[(2912), uint32] */;
    %279 = reshape(%278, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), uint32] */;
    %280 = @func_5030(%279) /* ty=(Tensor[(16, 14, 13), uint32], Tensor[(5, 4, 4), float32], Tensor[(36), float32], Tensor[(105, 2), int16], Tensor[(16, 1, 13), float64], Tensor[(36), float32], Tensor[(50, 9), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
    %281 = %280.0;
    %282 = cast(meta[relay.Constant][21] /* ty=Tensor[(2912), uint32] */, dtype="uint16") /* ty=Tensor[(2912), uint16] */;
    %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
    %284 = cast(%281, dtype="uint16") /* ty=Tensor[(16, 14, 13), uint16] */;
    %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %286 = minimum(%284, %285) /* ty=Tensor[(16, 14, 13), uint16] */;
    %287 = cast(%286, dtype="int16") /* ty=Tensor[(16, 14, 13), int16] */;
    %288 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
    %289 = cast(%281, dtype="int16") /* ty=Tensor[(16, 14, 13), int16] */;
    %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %291 = cast(%286, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
    %292 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
    %293 = bitwise_xor(%289, %290) /* ty=Tensor[(16, 14, 13), int16] */;
    %294 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
    %295 = log(%291) /* ty=Tensor[(16, 14, 13), float32] */;
    (%292, %293, %294, %295)
  };
  %296() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) */
}

def @func_11212(%var_11210: Tensor[(16, 1, 5), float32]) -> Tensor[(16, 1, 5), float32] {
  @func_11209(%var_11210) /* ty=Tensor[(16, 1, 5), float32] */
}

def @func_8095() -> (Tensor[(13, 2, 7), float32],) {
  @func_8093() /* ty=(Tensor[(13, 2, 7), float32],) */
}

def @func_9645(%var_9641: uint32, %var_9642: Tensor[(2, 672), uint32], %var_9643: Tensor[(450), float32], %var_9644: Tensor[(150), uint32]) -> (Tensor[(13, 2, 7), float32], Tensor[(315, 1), float32], Tensor[(132, 1), float32], uint32, Tensor[(2, 672), uint32], Tensor[(450), float32], Tensor[(150), uint32]) {
  @func_9639(%var_9641, %var_9642, %var_9643, %var_9644) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(315, 1), float32], Tensor[(132, 1), float32], uint32, Tensor[(2, 672), uint32], Tensor[(450), float32], Tensor[(150), uint32]) */
}

def @func_576(%var_575: Tensor[(15, 2, 15), float32]) -> Tensor[(15, 2, 15), float32] {
  %298 = fn (%var_568: Tensor[(15, 2, 15), float32]) -> Tensor[(15, 2, 15), float32] {
    %297 = cast(%var_568, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
    erf(%297) /* ty=Tensor[(15, 2, 15), float32] */
  };
  %298(%var_575) /* ty=Tensor[(15, 2, 15), float32] */
}

def @func_2702(%var_2700: Tensor[(2, 9, 1), uint64]) -> (Tensor[(2, 9, ?), uint64],) {
  @func_2699(%var_2700) /* ty=(Tensor[(2, 9, ?), uint64],) */
}

def @func_8054() -> (Tensor[(10, 12, 16), float32],) {
  @func_8052() /* ty=(Tensor[(10, 12, 16), float32],) */
}

def @func_1645(%var_1643: Tensor[(3, 5, 14), int16]) -> (Tensor[(3, 5, 14), bool],) {
  @func_1642(%var_1643) /* ty=(Tensor[(3, 5, 14), bool],) */
}

def @func_9935(%var_9933: Tensor[(13, 2, 7), float32]) -> (Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), uint64], Tensor[(315), float32]) {
  @func_9932(%var_9933) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), uint64], Tensor[(315), float32]) */
}

def @func_2099(%var_2097: Tensor[(15, 5, 2), uint32]) -> (Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) {
  @func_2096(%var_2097) /* ty=(Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */
}

def @func_11264(%var_11262: Tensor[(1540), float32], %var_11263: Tensor[(132), float32]) -> (Tensor[(10, 12, 16), int32], Tensor[(11, 12, 1), float32], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(10, 12, 16), float64]) {
  @func_11260(%var_11262, %var_11263) /* ty=(Tensor[(10, 12, 16), int32], Tensor[(11, 12, 1), float32], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(10, 12, 16), float64]) */
}

def @func_4901(%var_4856: Tensor[(1, 210), int16]) -> (Tensor[(36), float32], Tensor[(9, 4), float32], Tensor[(1, 210), int16], Tensor[(9, 4, 16), float64]) {
  %299 = cast(meta[relay.Constant][22] /* ty=Tensor[(9, 4), float32] */, dtype="float32") /* ty=Tensor[(9, 4), float32] */;
  %300 = cast(%var_4856, dtype="int16") /* ty=Tensor[(1, 210), int16] */;
  %301 = reshape(%299, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %302 = reshape(%300, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %303 = @func_3811(%301, %302) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */;
  %304 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %305 = log10(%304) /* ty=Tensor[(9, 4, 16), float64] */;
  %306 = cast(%305, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %307 = %303.2;
  %308 = sqrt(%306) /* ty=Tensor[(9, 4, 16), float64] */;
  (%307, meta[relay.Constant][22] /* ty=Tensor[(9, 4), float32] */, %var_4856, %308)
}

def @func_7089() -> (Tensor[(315), float32],) {
  %309 = @func_6353() /* ty=(Tensor[(315), float32],) */;
  %310 = %309.0;
  (%310,)
}

def @func_7104() -> (Tensor[(450), float32],) {
  %312 = fn () -> (Tensor[(450), float32],) {
    %311 = @func_6654() /* ty=Tensor[(450), float32] */;
    (%311,)
  };
  %312() /* ty=(Tensor[(450), float32],) */
}

def @func_10611(%var_10602: Tensor[(9, 4, 5), float64]) -> (Tensor[(9, 4, 5), float64],) {
  %313 = cast(%var_10602, dtype="float64") /* ty=Tensor[(9, 4, 5), float64] */;
  %314 = cosh(%313) /* ty=Tensor[(9, 4, 5), float64] */;
  (%314,)
}

def @func_7981(%var_7972: Tensor[(36), float32], %var_7973: Tensor[(210), int16]) -> (Tensor[(315), float32], Tensor[(210), int16], Tensor[(210), int16], Tensor[(36), float32]) {
  %315 = cast(%var_7972, dtype="float32") /* ty=Tensor[(36), float32] */;
  %316 = cast(%var_7973, dtype="int16") /* ty=Tensor[(210), int16] */;
  %317 = reshape(%315, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), float32] */;
  %318 = reshape(%316, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %319 = @func_2901(%317, %318) /* ty=(Tensor[(3, 5, 14), bool], Tensor[(210), int16], Tensor[(2, 9, 2), float64]) */;
  %320 = cast(%var_7972, dtype="float32") /* ty=Tensor[(36), float32] */;
  %321 = @func_7460() /* ty=Tensor[(315), float32] */;
  %322 = %319.1;
  %323 = cos(%320) /* ty=Tensor[(36), float32] */;
  (%321, %322, %var_7973, %323)
}

def @func_9887(%var_9883: Tensor[(18), uint64], %var_9884: Tensor[(880), uint32], %var_9885: uint32, %var_9886: Tensor[(1344), uint32]) -> (Tensor[(10, 12, 16), float32], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(2, 9, ?), uint64], Tensor[(5, 6, 15), float64], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32], Tensor[(315, 18), float64], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(6, 16, 14), uint32], Tensor[(1344), uint32], uint16, Tensor[(13, 2, 7), float32], Tensor[(1, 495), uint16], Tensor[(8, ?, 15), uint32], Tensor[(13, 2, 7), float32], Tensor[(8, 1, 15), float32]) {
  %378 = fn (%var_9756: Tensor[(18), uint64], %var_9768: Tensor[(880), uint32], %var_9815: uint32, %var_9816: Tensor[(1344), uint32]) -> (Tensor[(10, 12, 16), float32], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(2, 9, ?), uint64], Tensor[(5, 6, 15), float64], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32], Tensor[(315, 18), float64], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(6, 16, 14), uint32], Tensor[(1344), uint32], uint16, Tensor[(13, 2, 7), float32], Tensor[(1, 495), uint16], Tensor[(8, ?, 15), uint32], Tensor[(13, 2, 7), float32], Tensor[(8, 1, 15), float32]) {
    %324 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
    %325 = cast(meta[relay.Constant][24] /* ty=Tensor[(315, 1), float32] */, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
    %326 = reshape(%325, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %327 = @func_7226(%326) /* ty=(Tensor[(315), float32], Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(1920), float64], Tensor[(182), float32]) */;
    %328 = cast(%var_9756, dtype="uint64") /* ty=Tensor[(18), uint64] */;
    %329 = reshape(%328, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), uint64] */;
    %330 = @func_2699(%329) /* ty=(Tensor[(2, 9, ?), uint64],) */;
    %331 = cast(%var_9768, dtype="uint32") /* ty=Tensor[(880), uint32] */;
    %332 = reshape(%331, newshape=[880]) /* ty=Tensor[(880), uint32] */;
    %333 = @func_7282(%332) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(10, 12, 16), float32], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) */;
    %334 = cast(%var_9756, dtype="float64") /* ty=Tensor[(18), float64] */;
    %335 = cast(meta[relay.Constant][24] /* ty=Tensor[(315, 1), float32] */, dtype="float64") /* ty=Tensor[(315, 1), float64] */;
    %336 = @func_7089() /* ty=(Tensor[(315), float32],) */;
    %337 = cast(%var_9815, dtype="uint32") /* ty=uint32 */;
    %338 = cast(%var_9816, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
    %339 = @func_9148() /* ty=Tensor[(5, 6, 15), float64] */;
    %340 = cast(%339, dtype="float32") /* ty=Tensor[(5, 6, 15), float32] */;
    %341 = reshape(%337, newshape=[]) /* ty=uint32 */;
    %342 = reshape(%338, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), uint32] */;
    %343 = reshape(%340, newshape=[450]) /* ty=Tensor[(450), float32] */;
    %344 = @func_2976(%341, %342, %343) /* ty=(Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) */;
    %345 = cast(%var_9815, dtype="uint16") /* ty=uint16 */;
    %346 = reshape(%345, newshape=[]) /* ty=uint16 */;
    %347 = @func_6276(%346) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(11, 5, 9), float64], uint16, Tensor[(1, 495), uint16]) */;
    %348 = @func_8080() /* ty=(Tensor[(13, 2, 7), float32],) */;
    %349 = %347.2;
    %350 = cast(%349, dtype="uint16") /* ty=uint16 */;
    %351 = reshape(%350, newshape=[]) /* ty=uint16 */;
    %352 = @func_6276(%351) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(11, 5, 9), float64], uint16, Tensor[(1, 495), uint16]) */;
    %353 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 15), float32] */;
    %354 = cos(%353) /* ty=Tensor[(8, 1, 15), float32] */;
    %355 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 1, 15), float32] */, dtype="uint32") /* ty=Tensor[(8, 1, 15), uint32] */;
    %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
    %357 = cast(%354, dtype="uint32") /* ty=Tensor[(8, 1, 15), uint32] */;
    %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %359 = bitwise_xor(%357, %358) /* ty=Tensor[(8, ?, 15), uint32] */;
    %360 = cast(%359, dtype="uint32") /* ty=Tensor[(8, ?, 15), uint32] */;
    %361 = cast(%var_9815, dtype="uint32") /* ty=uint32 */;
    %362 = @func_8093() /* ty=(Tensor[(13, 2, 7), float32],) */;
    %363 = cast(%354, dtype="float32") /* ty=Tensor[(8, 1, 15), float32] */;
    %364 = %324.0;
    %365 = %327.0;
    %366 = @func_6905() /* ty=Tensor[(13, 2, 7), float32] */;
    %367 = %330.0;
    %368 = %333.2;
    %369 = floor_divide(%334, %335) /* ty=Tensor[(315, 18), float64] */;
    %370 = %336.0;
    %371 = @func_9475() /* ty=Tensor[(13, 2, 7), float32] */;
    %372 = %344.0;
    %373 = %348.0;
    %374 = %352.3;
    %375 = add(%360, %361) /* ty=Tensor[(8, ?, 15), uint32] */;
    %376 = %362.0;
    %377 = atan(%363) /* ty=Tensor[(8, 1, 15), float32] */;
    (%364, %365, %366, %367, %339, %368, %var_9768, %369, %370, %371, %372, %var_9816, %349, %373, %374, %375, %376, %377)
  };
  %378(%var_9883, %var_9884, %var_9885, %var_9886) /* ty=(Tensor[(10, 12, 16), float32], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(2, 9, ?), uint64], Tensor[(5, 6, 15), float64], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32], Tensor[(315, 18), float64], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(6, 16, 14), uint32], Tensor[(1344), uint32], uint16, Tensor[(13, 2, 7), float32], Tensor[(1, 495), uint16], Tensor[(8, ?, 15), uint32], Tensor[(13, 2, 7), float32], Tensor[(8, 1, 15), float32]) */
}

def @func_11557(%var_11551: Tensor[(40, 22), uint32]) -> (Tensor[(10, 12, 16), int64], Tensor[(1008), float32], Tensor[(40, 22), uint32]) {
  %379 = @func_8699() /* ty=(Tensor[(10, 12, 16), int64],) */;
  %380 = cast(%var_11551, dtype="uint32") /* ty=Tensor[(40, 22), uint32] */;
  %381 = reshape(%380, newshape=[440, 2]) /* ty=Tensor[(440, 2), uint32] */;
  %382 = @func_10378(%381) /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(440, 2), uint32], Tensor[(150), float32], Tensor[(7, 5, 9), bool], Tensor[(182), float32], Tensor[(7, 5, 9), bool], Tensor[(1008), float32]) */;
  %383 = %379.0;
  %384 = %382.7;
  (%383, %384, %var_11551)
}

def @func_10907() -> (Tensor[(9, 1, 1), float32], Tensor[(5, 6, 15), float64]) {
  @func_10905() /* ty=(Tensor[(9, 1, 1), float32], Tensor[(5, 6, 15), float64]) */
}

def @func_10830(%var_10828: Tensor[(16, 10, 11), int16], %var_10829: Tensor[(16, 10, 11), int16]) -> (Tensor[(16, 10, 11), int16], Tensor[(10, 12, 16), float32]) {
  @func_10826(%var_10828, %var_10829) /* ty=(Tensor[(16, 10, 11), int16], Tensor[(10, 12, 16), float32]) */
}

def @func_8306(%var_8299: Tensor[(9, 9, 4), float32]) -> Tensor[(9, 9, 4), float32] {
  %385 = cast(%var_8299, dtype="float32") /* ty=Tensor[(9, 9, 4), float32] */;
  cosh(%385) /* ty=Tensor[(9, 9, 4), float32] */
}

def @func_11894(%var_11892: Tensor[(14, 14, 9), int16], %var_11893: Tensor[(14, 14, 9), int16]) -> (Tensor[(14, 14, 9), int16], Tensor[(7, 5, 9), bool], Tensor[(512), float32], Tensor[(315), float32], Tensor[(14, 14, 9), float64]) {
  %399 = fn (%var_11864: Tensor[(14, 14, 9), int16], %var_11865: Tensor[(14, 14, 9), int16]) -> (Tensor[(14, 14, 9), int16], Tensor[(7, 5, 9), bool], Tensor[(512), float32], Tensor[(315), float32], Tensor[(14, 14, 9), float64]) {
    %386 = cast(%var_11865, dtype="int16") /* ty=Tensor[(14, 14, 9), int16] */;
    %387 = shape_of(%var_11864, dtype="int32") /* ty=Tensor[(3), int32] */;
    %388 = cast(%var_11864, dtype="int16") /* ty=Tensor[(14, 14, 9), int16] */;
    %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %390 = cast(meta[relay.Constant][26] /* ty=Tensor[(512), float32] */, dtype="float32") /* ty=Tensor[(512), float32] */;
    %391 = cast(meta[relay.Constant][27] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %392 = reshape(%390, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
    %393 = reshape(%391, newshape=[5, 63]) /* ty=Tensor[(5, 63), float32] */;
    %394 = @func_7664(%392, %393) /* ty=(Tensor[(8, 8, 8), float32], Tensor[(7, 5, 9), bool], Tensor[(5, 63), float32]) */;
    %395 = cast(%var_11864, dtype="float64") /* ty=Tensor[(14, 14, 9), float64] */;
    %396 = bitwise_xor(%388, %389) /* ty=Tensor[(14, 14, 9), int16] */;
    %397 = %394.1;
    %398 = sinh(%395) /* ty=Tensor[(14, 14, 9), float64] */;
    (%396, %397, meta[relay.Constant][26] /* ty=Tensor[(512), float32] */, meta[relay.Constant][27] /* ty=Tensor[(315), float32] */, %398)
  };
  %399(%var_11892, %var_11893) /* ty=(Tensor[(14, 14, 9), int16], Tensor[(7, 5, 9), bool], Tensor[(512), float32], Tensor[(315), float32], Tensor[(14, 14, 9), float64]) */
}

def @func_7792() -> (Tensor[(10, 12, 16), int32], Tensor[(450), float32]) {
  %400 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  %401 = cast(%400, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %402 = cos(%401) /* ty=Tensor[(10, 12, 16), float32] */;
  %403 = cast(%402, dtype="int32") /* ty=Tensor[(10, 12, 16), int32] */;
  %404 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%400, dtype="int32") /* ty=Tensor[(10, 12, 16), int32] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %407 = bitwise_or(%405, %406) /* ty=Tensor[(10, 12, 16), int32] */;
  %408 = @func_6654() /* ty=Tensor[(450), float32] */;
  (%407, %408)
}

def @func_2490(%var_2488: Tensor[(8, 14, 9), float32], %var_2489: Tensor[(315), float32]) -> (Tensor[(8, 14, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) {
  @func_2486(%var_2488, %var_2489) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */
}

def @func_7317(%var_7316: Tensor[(8, 1, 2), float64]) -> Tensor[(8, 1, 2), float64] {
  %410 = fn (%var_7312: Tensor[(8, 1, 2), float64]) -> Tensor[(8, 1, 2), float64] {
    %409 = cast(%var_7312, dtype="float64") /* ty=Tensor[(8, 1, 2), float64] */;
    log(%409) /* ty=Tensor[(8, 1, 2), float64] */
  };
  %410(%var_7316) /* ty=Tensor[(8, 1, 2), float64] */
}

def @func_6656() -> Tensor[(450), float32] {
  @func_6654() /* ty=Tensor[(450), float32] */
}

def @func_8911() -> (Tensor[(315), float32], Tensor[(10, 12, 16), float32]) {
  %415 = fn () -> (Tensor[(315), float32], Tensor[(10, 12, 16), float32]) {
    %411 = @func_6353() /* ty=(Tensor[(315), float32],) */;
    %412 = @func_8052() /* ty=(Tensor[(10, 12, 16), float32],) */;
    %413 = %411.0;
    %414 = %412.0;
    (%413, %414)
  };
  %415() /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), float32]) */
}

def @func_1463(%var_1427: uint8, %var_1428: Tensor[(15, 10, 1), uint8], %var_1436: Tensor[(450), float32]) -> (Tensor[(15, 10, 1), uint8], Tensor[(15, 2, 15), float32], Tensor[(15, 12, 13), float32], Tensor[(2340), uint64], Tensor[(15, 2, 15), uint16], Tensor[(15, 6, 13), float32]) {
  %416 = cast(%var_1427, dtype="uint8") /* ty=uint8 */;
  %417 = cast(%var_1428, dtype="uint8") /* ty=Tensor[(15, 10, 1), uint8] */;
  %418 = cast(%var_1436, dtype="float32") /* ty=Tensor[(450), float32] */;
  %419 = reshape(%418, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %420 = @func_574(%419) /* ty=Tensor[(15, 2, 15), float32] */;
  %421 = cast(%420, dtype="float32") /* ty=Tensor[(15, 2, 15), float32] */;
  %422 = reshape(%421, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %423 = cast(%var_1427, dtype="uint64") /* ty=uint64 */;
  %424 = cast(meta[relay.Constant][28] /* ty=Tensor[(2340), uint64] */, dtype="uint64") /* ty=Tensor[(2340), uint64] */;
  %425 = reshape(%423, newshape=[]) /* ty=uint64 */;
  %426 = reshape(%424, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), uint64] */;
  %427 = @func_1192(%425, %426) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(15, 12, 13), float32], Tensor[(315), float32]) */;
  %428 = cast(%var_1436, dtype="uint16") /* ty=Tensor[(450), uint16] */;
  %429 = shape_of(%420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%420, dtype="uint16") /* ty=Tensor[(15, 2, 15), uint16] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %432 = cast(%var_1427, dtype="uint64") /* ty=uint64 */;
  %433 = cast(meta[relay.Constant][28] /* ty=Tensor[(2340), uint64] */, dtype="uint64") /* ty=Tensor[(2340), uint64] */;
  %434 = reshape(%432, newshape=[]) /* ty=uint64 */;
  %435 = reshape(%433, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), uint64] */;
  %436 = @func_1192(%434, %435) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(15, 12, 13), float32], Tensor[(315), float32]) */;
  %437 = bitwise_xor(%416, %417) /* ty=Tensor[(15, 10, 1), uint8] */;
  %438 = @func_574(%422) /* ty=Tensor[(15, 2, 15), float32] */;
  %439 = %427.3;
  %440 = bitwise_xor(%430, %431) /* ty=Tensor[(15, 2, 15), uint16] */;
  %441 = %436.0;
  (%437, %438, %439, meta[relay.Constant][28] /* ty=Tensor[(2340), uint64] */, %440, %441)
}

def @func_8052() -> (Tensor[(10, 12, 16), float32],) {
  %442 = @func_7955() /* ty=Tensor[(10, 12, 16), float32] */;
  (%442,)
}

def @func_6051() -> (Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) {
  %450 = fn () -> (Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) {
    %443 = cast(meta[relay.Constant][29] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %444 = cast(meta[relay.Constant][30] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %445 = reshape(%443, newshape=[50, 9]) /* ty=Tensor[(50, 9), float32] */;
    %446 = reshape(%444, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %447 = @func_3255(%445, %446) /* ty=(Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
    %448 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
    %449 = %447.1;
    (%448, %449, meta[relay.Constant][29] /* ty=Tensor[(450), float32] */, meta[relay.Constant][30] /* ty=Tensor[(315), float32] */)
  };
  %450() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */
}

def @func_7067() -> (Tensor[(450), float32],) {
  %451 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %452 = %451.2;
  (%452,)
}

def @func_6554() -> (Tensor[(10, 12, 16), int64],) {
  %460 = fn () -> (Tensor[(10, 12, 16), int64],) {
    %453 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
    %454 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
    %455 = cast(%454, dtype="int64") /* ty=Tensor[(10, 12, 16), int64] */;
    %456 = shape_of(%453, dtype="int32") /* ty=Tensor[(3), int32] */;
    %457 = cast(%453, dtype="int64") /* ty=Tensor[(10, 12, 16), int64] */;
    %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %459 = minimum(%457, %458) /* ty=Tensor[(10, 12, 16), int64] */;
    (%459,)
  };
  %460() /* ty=(Tensor[(10, 12, 16), int64],) */
}

def @func_5430(%var_5428: Tensor[(18), uint64]) -> (Tensor[(7, 11, 8), bool], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(15, 5, 2), bool], Tensor[(150), uint32]) {
  @func_5427(%var_5428) /* ty=(Tensor[(7, 11, 8), bool], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(15, 5, 2), bool], Tensor[(150), uint32]) */
}

def @func_11846() -> (Tensor[(10, 12, 16), float32], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(10, 12, 16), float64]) {
  %461 = @func_9092() /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), int64]) */;
  %462 = @func_8128() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %463 = @func_10023() /* ty=Tensor[(10, 12, 16), float32] */;
  %464 = %461.0;
  %465 = %462.0;
  %466 = @func_10722() /* ty=Tensor[(10, 12, 16), float64] */;
  (%463, %464, %465, %466)
}

def @func_10777() -> Tensor[(450), float32] {
  %467 = fn () -> Tensor[(450), float32] {
    @func_6654() /* ty=Tensor[(450), float32] */
  };
  %467() /* ty=Tensor[(450), float32] */
}

def @func_6702() -> (Tensor[(10, 12, 16), float64],) {
  %470 = fn () -> (Tensor[(10, 12, 16), float64],) {
    %468 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
    %469 = %468.0;
    (%469,)
  };
  %470() /* ty=(Tensor[(10, 12, 16), float64],) */
}

def @func_11477() -> (Tensor[(315), float32], Tensor[(450), float32]) {
  %471 = @func_8910() /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), float32]) */;
  %472 = @func_7103() /* ty=(Tensor[(450), float32],) */;
  %473 = %471.0;
  %474 = %472.0;
  (%473, %474)
}

def @func_11779() -> (Tensor[(10, 12, 16), float64],) {
  %475 = @func_11324() /* ty=Tensor[(10, 12, 16), float64] */;
  (%475,)
}

def @func_11848() -> (Tensor[(10, 12, 16), float32], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(10, 12, 16), float64]) {
  @func_11846() /* ty=(Tensor[(10, 12, 16), float32], Tensor[(315), float32], Tensor[(13, 2, 7), float32], Tensor[(10, 12, 16), float64]) */
}

def @func_10724() -> Tensor[(10, 12, 16), float64] {
  @func_10722() /* ty=Tensor[(10, 12, 16), float64] */
}

def @func_268(%var_244: Tensor[(7, 5, 9), float32], %var_245: Tensor[(7, 5, 9), float32]) -> Tensor[(7, 5, 9), bool] {
  %476 = cast(%var_245, dtype="bool") /* ty=Tensor[(7, 5, 9), bool] */;
  %477 = shape_of(%var_244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%var_244, dtype="bool") /* ty=Tensor[(7, 5, 9), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%478, %479) /* ty=Tensor[(7, 5, 9), bool] */
}

def @func_7985(%var_7983: Tensor[(36), float32], %var_7984: Tensor[(210), int16]) -> (Tensor[(315), float32], Tensor[(210), int16], Tensor[(210), int16], Tensor[(36), float32]) {
  @func_7981(%var_7983, %var_7984) /* ty=(Tensor[(315), float32], Tensor[(210), int16], Tensor[(210), int16], Tensor[(36), float32]) */
}

def @func_4599(%var_4595: Tensor[(1, 3, 1), int8], %var_4596: Tensor[(13, 3, 7), int8], %var_4597: uint16, %var_4598: Tensor[(1008), float32]) -> (Tensor[(13, 3, 7), int8], Tensor[(315), float32], Tensor[(1, 3, 150), float64], Tensor[(50, 9), float32], uint16, Tensor[(495), uint16], Tensor[(1170), float32], Tensor[(1008), float32]) {
  %506 = fn (%var_4557: Tensor[(1, 3, 1), int8], %var_4558: Tensor[(13, 3, 7), int8], %var_4588: uint16, %var_4592: Tensor[(1008), float32]) -> (Tensor[(13, 3, 7), int8], Tensor[(315), float32], Tensor[(1, 3, 150), float64], Tensor[(50, 9), float32], uint16, Tensor[(495), uint16], Tensor[(1170), float32], Tensor[(1008), float32]) {
    %480 = cast(%var_4557, dtype="int8") /* ty=Tensor[(1, 3, 1), int8] */;
    %481 = cast(%var_4558, dtype="int8") /* ty=Tensor[(13, 3, 7), int8] */;
    %482 = cast(meta[relay.Constant][31] /* ty=Tensor[(150), uint32] */, dtype="uint32") /* ty=Tensor[(150), uint32] */;
    %483 = reshape(%482, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), uint32] */;
    %484 = @func_2096(%483) /* ty=(Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
    %485 = cast(meta[relay.Constant][31] /* ty=Tensor[(150), uint32] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
    %486 = cast(%var_4557, dtype="uint64") /* ty=Tensor[(1, 3, 1), uint64] */;
    %487 = bitwise_xor(%485, %486) /* ty=Tensor[(1, 3, 150), uint64] */;
    %488 = cast(%487, dtype="float64") /* ty=Tensor[(1, 3, 150), float64] */;
    %489 = cast(%var_4588, dtype="uint16") /* ty=uint16 */;
    %490 = cast(meta[relay.Constant][32] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
    %491 = cast(meta[relay.Constant][32] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
    %492 = reshape(%489, newshape=[]) /* ty=uint16 */;
    %493 = reshape(%490, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), uint16] */;
    %494 = reshape(%491, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), uint16] */;
    %495 = @func_2062(%492, %493, %494) /* ty=(Tensor[(11, 5, 9), uint16], Tensor[(11, 5, 9), float64], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32]) */;
    %496 = cast(%var_4592, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %497 = %484.2;
    %498 = cast(%497, dtype="float32") /* ty=Tensor[(315), float32] */;
    %499 = reshape(%496, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), float32] */;
    %500 = reshape(%498, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %501 = @func_2486(%499, %500) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
    %502 = left_shift(%480, %481) /* ty=Tensor[(13, 3, 7), int8] */;
    %503 = sin(%488) /* ty=Tensor[(1, 3, 150), float64] */;
    %504 = %495.3;
    %505 = %501.2;
    (%502, %497, %503, %504, %var_4588, meta[relay.Constant][32] /* ty=Tensor[(495), uint16] */, %505, %var_4592)
  };
  %506(%var_4595, %var_4596, %var_4597, %var_4598) /* ty=(Tensor[(13, 3, 7), int8], Tensor[(315), float32], Tensor[(1, 3, 150), float64], Tensor[(50, 9), float32], uint16, Tensor[(495), uint16], Tensor[(1170), float32], Tensor[(1008), float32]) */
}

def @func_6411() -> Tensor[(13, 2, 7), float32] {
  @func_6409() /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_2699(%var_2685: Tensor[(2, 9, 1), uint64]) -> (Tensor[(2, 9, ?), uint64],) {
  %507 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 9, 1), uint64] */, dtype="uint64") /* ty=Tensor[(2, 9, 1), uint64] */;
  %508 = shape_of(%var_2685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%var_2685, dtype="uint64") /* ty=Tensor[(2, 9, 1), uint64] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %511 = bitwise_xor(%509, %510) /* ty=Tensor[(2, 9, ?), uint64] */;
  (%511,)
}

def @func_10516() -> Tensor[(10, 12, 16), float32] {
  %512 = fn () -> Tensor[(10, 12, 16), float32] {
    @func_10023() /* ty=Tensor[(10, 12, 16), float32] */
  };
  %512() /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_6235(%var_6233: Tensor[(10, 12, 16), float64], %var_6234: Tensor[(182), float32]) -> (Tensor[(10, 12, 16), bool], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) {
  @func_6231(%var_6233, %var_6234) /* ty=(Tensor[(10, 12, 16), bool], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) */
}

def @func_7229(%var_7227: Tensor[(315), float32]) -> (Tensor[(315), float32], Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(1920), float64], Tensor[(182), float32]) {
  @func_7226(%var_7227) /* ty=(Tensor[(315), float32], Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(1920), float64], Tensor[(182), float32]) */
}

def @func_11479() -> (Tensor[(315), float32], Tensor[(450), float32]) {
  @func_11477() /* ty=(Tensor[(315), float32], Tensor[(450), float32]) */
}

def @func_10976() -> (Tensor[(10, 12, 16), int64], Tensor[(315), float32]) {
  %515 = fn () -> (Tensor[(10, 12, 16), int64], Tensor[(315), float32]) {
    %513 = @func_8349() /* ty=Tensor[(10, 12, 16), int64] */;
    %514 = @func_10168() /* ty=Tensor[(315), float32] */;
    (%513, %514)
  };
  %515() /* ty=(Tensor[(10, 12, 16), int64], Tensor[(315), float32]) */
}

def @func_9932(%var_9920: Tensor[(13, 2, 7), float32]) -> (Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), uint64], Tensor[(315), float32]) {
  %516 = @func_8672() /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64]) */;
  %517 = @func_9706() /* ty=Tensor[(13, 2, 7), float32] */;
  %518 = cast(%var_9920, dtype="uint64") /* ty=Tensor[(13, 2, 7), uint64] */;
  %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%517, dtype="uint64") /* ty=Tensor[(13, 2, 7), uint64] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %522 = @func_9437() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(315), float32], Tensor[(315), float32]) */;
  %523 = %516.1;
  %524 = bitwise_or(%520, %521) /* ty=Tensor[(13, 2, 7), uint64] */;
  %525 = %522.2;
  (%523, %524, %525)
}

def @func_10169() -> Tensor[(315), float32] {
  %527 = fn () -> Tensor[(315), float32] {
    %526 = @func_9092() /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), int64]) */;
    %526.0
  };
  %527() /* ty=Tensor[(315), float32] */
}

def @func_11088() -> (Tensor[(13, 2, 7), float32], Tensor[(9, 1, 1), float32], Tensor[(10, 12, 16), float64], uint16) {
  @func_11086() /* ty=(Tensor[(13, 2, 7), float32], Tensor[(9, 1, 1), float32], Tensor[(10, 12, 16), float64], uint16) */
}

def @func_6355() -> (Tensor[(315), float32],) {
  @func_6353() /* ty=(Tensor[(315), float32],) */
}

def @func_11086() -> (Tensor[(13, 2, 7), float32], Tensor[(9, 1, 1), float32], Tensor[(10, 12, 16), float64], uint16) {
  %528 = @func_8093() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %529 = @func_10905() /* ty=(Tensor[(9, 1, 1), float32], Tensor[(5, 6, 15), float64]) */;
  %530 = %529.0;
  %531 = cast(%530, dtype="float32") /* ty=Tensor[(9, 1, 1), float32] */;
  %532 = cast(meta[relay.Constant][34] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %533 = reshape(%532, newshape=[]) /* ty=uint16 */;
  %534 = @func_6276(%533) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(11, 5, 9), float64], uint16, Tensor[(1, 495), uint16]) */;
  %535 = %528.0;
  %536 = rsqrt(%531) /* ty=Tensor[(9, 1, 1), float32] */;
  %537 = %534.0;
  (%535, %536, %537, meta[relay.Constant][34] /* ty=uint16 */)
}

def @func_3258(%var_3256: Tensor[(50, 9), float32], %var_3257: Tensor[(315), float32]) -> (Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) {
  %555 = fn (%var_3243: Tensor[(50, 9), float32], %var_3251: Tensor[(315), float32]) -> (Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) {
    %538 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 7, 9), int64] */, dtype="int64") /* ty=Tensor[(10, 7, 9), int64] */;
    %539 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(10, 7, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %540 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 7, 9), int64] */, dtype="int64") /* ty=Tensor[(10, 7, 9), int64] */;
    %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %542 = cast(meta[relay.Constant][37] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %543 = reshape(%542, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), float32] */;
    %544 = cast(%var_3243, dtype="float32") /* ty=Tensor[(50, 9), float32] */;
    %545 = reshape(%544, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
    %546 = cast(meta[relay.Constant][38] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %547 = cast(%var_3251, dtype="float32") /* ty=Tensor[(315), float32] */;
    %548 = reshape(%546, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
    %549 = reshape(%547, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
    %550 = @func_442(%548, %549) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
    %551 = bitwise_xor(%540, %541) /* ty=Tensor[(10, 7, 9), int64] */;
    %552 = @func_2373(%543) /* ty=Tensor[(13, 2, 7), float32] */;
    %553 = @func_574(%545) /* ty=Tensor[(15, 2, 15), float32] */;
    %554 = %550.5;
    (%551, %552, meta[relay.Constant][37] /* ty=Tensor[(182), float32] */, %553, %var_3243, %554, meta[relay.Constant][38] /* ty=Tensor[(1170), float32] */, %var_3251)
  };
  %555(%var_3256, %var_3257) /* ty=(Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */
}

def @func_8461(%var_8458: uint32, %var_8459: Tensor[(150), uint32], %var_8460: Tensor[(210), int16]) -> (Tensor[(10, 12, 16), float32], Tensor[(15, 16, 8), float64], Tensor[(315), float32], Tensor[(450), float32], Tensor[(6, 16, 14), uint32], Tensor[(132), float32], uint32, Tensor[(84, 16), uint32], Tensor[(150), uint32], Tensor[(36), float32], Tensor[(36), float32], Tensor[(210), int16], Tensor[(13, 2, 7), float32], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64]) {
  %588 = fn (%var_8409: uint32, %var_8411: Tensor[(150), uint32], %var_8420: Tensor[(210), int16]) -> (Tensor[(10, 12, 16), float32], Tensor[(15, 16, 8), float64], Tensor[(315), float32], Tensor[(450), float32], Tensor[(6, 16, 14), uint32], Tensor[(132), float32], uint32, Tensor[(84, 16), uint32], Tensor[(150), uint32], Tensor[(36), float32], Tensor[(36), float32], Tensor[(210), int16], Tensor[(13, 2, 7), float32], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64]) {
    %556 = @func_7955() /* ty=Tensor[(10, 12, 16), float32] */;
    %557 = cast(%556, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
    %558 = reshape(%557, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %559 = @func_7552(%558) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(13, 2, 7), float32], Tensor[(1920), uint32], Tensor[(15, 16, 8), float64], Tensor[(450), float32], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
    %560 = @func_7089() /* ty=(Tensor[(315), float32],) */;
    %561 = cast(meta[relay.Constant][39] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %562 = cast(%var_8409, dtype="uint32") /* ty=uint32 */;
    %563 = cast(meta[relay.Constant][40] /* ty=Tensor[(84, 16), uint32] */, dtype="uint32") /* ty=Tensor[(84, 16), uint32] */;
    %564 = @func_6654() /* ty=Tensor[(450), float32] */;
    %565 = cast(%564, dtype="float32") /* ty=Tensor[(450), float32] */;
    %566 = cast(%var_8411, dtype="uint32") /* ty=Tensor[(150), uint32] */;
    %567 = reshape(%561, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
    %568 = reshape(%562, newshape=[]) /* ty=uint32 */;
    %569 = reshape(%563, newshape=[1344]) /* ty=Tensor[(1344), uint32] */;
    %570 = reshape(%565, newshape=[150, 3]) /* ty=Tensor[(150, 3), float32] */;
    %571 = reshape(%566, newshape=[150]) /* ty=Tensor[(150), uint32] */;
    %572 = @func_4785(%567, %568, %569, %570, %571) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(1170), float32], Tensor[(1008), float32], Tensor[(315, 1), float32], Tensor[(6, 16, 14), uint32], uint32, Tensor[(1344), uint32], Tensor[(150, 3), float32], Tensor[(315), float32], Tensor[(150), uint32]) */;
    %573 = cast(meta[relay.Constant][41] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
    %574 = cast(%var_8420, dtype="int16") /* ty=Tensor[(210), int16] */;
    %575 = reshape(%573, newshape=[36]) /* ty=Tensor[(36), float32] */;
    %576 = reshape(%574, newshape=[210]) /* ty=Tensor[(210), int16] */;
    %577 = @func_3811(%575, %576) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */;
    %578 = @func_8128() /* ty=(Tensor[(13, 2, 7), float32],) */;
    %579 = cast(meta[relay.Constant][42] /* ty=Tensor[(18), uint64] */, dtype="uint64") /* ty=Tensor[(18), uint64] */;
    %580 = reshape(%579, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), uint64] */;
    %581 = @func_2699(%580) /* ty=(Tensor[(2, 9, ?), uint64],) */;
    %582 = %559.5;
    %583 = %560.0;
    %584 = %572.4;
    %585 = %577.2;
    %586 = %578.0;
    %587 = %581.0;
    (%556, %582, %583, %564, %584, meta[relay.Constant][39] /* ty=Tensor[(132), float32] */, %var_8409, meta[relay.Constant][40] /* ty=Tensor[(84, 16), uint32] */, %var_8411, %585, meta[relay.Constant][41] /* ty=Tensor[(36), float32] */, %var_8420, %586, %587, meta[relay.Constant][42] /* ty=Tensor[(18), uint64] */)
  };
  %588(%var_8458, %var_8459, %var_8460) /* ty=(Tensor[(10, 12, 16), float32], Tensor[(15, 16, 8), float64], Tensor[(315), float32], Tensor[(450), float32], Tensor[(6, 16, 14), uint32], Tensor[(132), float32], uint32, Tensor[(84, 16), uint32], Tensor[(150), uint32], Tensor[(36), float32], Tensor[(36), float32], Tensor[(210), int16], Tensor[(13, 2, 7), float32], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64]) */
}

def @func_2096(%var_2083: Tensor[(15, 5, 2), uint32]) -> (Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) {
  %589 = cast(%var_2083, dtype="bool") /* ty=Tensor[(15, 5, 2), bool] */;
  %590 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(15, 5, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(meta[relay.Constant][43] /* ty=Tensor[(15, 5, 2), uint32] */, dtype="bool") /* ty=Tensor[(15, 5, 2), bool] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %593 = cast(meta[relay.Constant][44] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %594 = reshape(%593, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %595 = @func_965(%594) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %596 = greater(%591, %592) /* ty=Tensor[(15, 5, 2), bool] */;
  %597 = %595.1;
  (%596, %597, meta[relay.Constant][44] /* ty=Tensor[(315), float32] */)
}

def @func_11520() -> (Tensor[(10, 12, 16), int32], Tensor[(450), float32], Tensor[(10, 12, 16), int32], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(450), float32]) {
  %609 = fn () -> (Tensor[(10, 12, 16), int32], Tensor[(450), float32], Tensor[(10, 12, 16), int32], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(450), float32]) {
    %598 = @func_7792() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(450), float32]) */;
    %599 = cast(meta[relay.Constant][45] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %600 = cast(meta[relay.Constant][46] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %601 = reshape(%599, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
    %602 = reshape(%600, newshape=[132]) /* ty=Tensor[(132), float32] */;
    %603 = @func_11260(%601, %602) /* ty=(Tensor[(10, 12, 16), int32], Tensor[(11, 12, 1), float32], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(10, 12, 16), float64]) */;
    %604 = @func_7067() /* ty=(Tensor[(450), float32],) */;
    %605 = %598.0;
    %606 = @func_6654() /* ty=Tensor[(450), float32] */;
    %607 = %603.0;
    %608 = %604.0;
    (%605, %606, %607, meta[relay.Constant][45] /* ty=Tensor[(1540), float32] */, meta[relay.Constant][46] /* ty=Tensor[(132), float32] */, %608)
  };
  %609() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(450), float32], Tensor[(10, 12, 16), int32], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(450), float32]) */
}

def @func_10058() -> (Tensor[(10, 12, 16), int64],) {
  %612 = fn () -> (Tensor[(10, 12, 16), int64],) {
    %610 = @func_9092() /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), int64]) */;
    %611 = %610.1;
    (%611,)
  };
  %612() /* ty=(Tensor[(10, 12, 16), int64],) */
}

def @func_5995(%var_5994: Tensor[(10, 12, 16), float64]) -> (Tensor[(10, 12, 16), bool],) {
  %619 = fn (%var_5981: Tensor[(10, 12, 16), float64]) -> (Tensor[(10, 12, 16), bool],) {
    %613 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
    %614 = cast(%var_5981, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
    %615 = shape_of(%613, dtype="int32") /* ty=Tensor[(3), int32] */;
    %616 = cast(%613, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
    %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %618 = less(%616, %617) /* ty=Tensor[(10, 12, 16), bool] */;
    (%618,)
  };
  %619(%var_5994) /* ty=(Tensor[(10, 12, 16), bool],) */
}

def @func_9126() -> Tensor[(315), float32] {
  %620 = fn () -> Tensor[(315), float32] {
    @func_7460() /* ty=Tensor[(315), float32] */
  };
  %620() /* ty=Tensor[(315), float32] */
}

def @func_5962() -> Tensor[(10, 12, 16), float64] {
  @func_5960() /* ty=Tensor[(10, 12, 16), float64] */
}

def @func_6298(%var_6297: Tensor[(182), float32]) -> (Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), bool], Tensor[(1920), float64], Tensor[(182), float32]) {
  %629 = fn (%var_6288: Tensor[(182), float32]) -> (Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), bool], Tensor[(1920), float64], Tensor[(182), float32]) {
    %621 = @func_6144() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) */;
    %622 = cast(meta[relay.Constant][47] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %623 = cast(%var_6288, dtype="float32") /* ty=Tensor[(182), float32] */;
    %624 = reshape(%622, newshape=[10, 12, 16]) /* ty=Tensor[(10, 12, 16), float64] */;
    %625 = reshape(%623, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %626 = @func_6231(%624, %625) /* ty=(Tensor[(10, 12, 16), bool], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) */;
    %627 = %621.1;
    %628 = %626.0;
    (%627, %628, meta[relay.Constant][47] /* ty=Tensor[(1920), float64] */, %var_6288)
  };
  %629(%var_6297) /* ty=(Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), bool], Tensor[(1920), float64], Tensor[(182), float32]) */
}

def @func_10614(%var_10612: Tensor[(9, 4, 5), float64]) -> (Tensor[(9, 4, 5), float64],) {
  @func_10611(%var_10612) /* ty=(Tensor[(9, 4, 5), float64],) */
}

def @func_5654(%var_5628: Tensor[(16, 5, 11), uint32], %var_5629: Tensor[(16, 5, 11), uint32]) -> (Tensor[(16, 5, 11), uint32],) {
  %630 = cast(%var_5629, dtype="uint32") /* ty=Tensor[(16, 5, 11), uint32] */;
  %631 = shape_of(%var_5628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%var_5628, dtype="uint32") /* ty=Tensor[(16, 5, 11), uint32] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %634 = bitwise_and(%632, %633) /* ty=Tensor[(16, 5, 11), uint32] */;
  (%634,)
}

def @func_6231(%var_6213: Tensor[(10, 12, 16), float64], %var_6223: Tensor[(182), float32]) -> (Tensor[(10, 12, 16), bool], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) {
  %635 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  %636 = cast(%var_6213, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%635, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %640 = cast(%var_6223, dtype="float32") /* ty=Tensor[(182), float32] */;
  %641 = reshape(%640, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), float32] */;
  %642 = less_equal(%638, %639) /* ty=Tensor[(10, 12, 16), bool] */;
  %643 = @func_2373(%641) /* ty=Tensor[(13, 2, 7), float32] */;
  (%642, %643, %var_6223)
}

def @func_10888() -> (Tensor[(10, 12, 16), float64],) {
  @func_10886() /* ty=(Tensor[(10, 12, 16), float64],) */
}

def @func_11946() -> (Tensor[(10, 12, 16), float64],) {
  %644 = @func_6701() /* ty=(Tensor[(10, 12, 16), float64],) */;
  %645 = %644.0;
  (%645,)
}

def @func_4404(%var_4372: Tensor[(4, 13, 8), float64]) -> (Tensor[(4, 13, 8), float64], Tensor[(36), float32], Tensor[(3, 5, 14), float32], Tensor[(35, 6), int64]) {
  %646 = cast(%var_4372, dtype="float64") /* ty=Tensor[(4, 13, 8), float64] */;
  %647 = cast(meta[relay.Constant][48] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %648 = cast(meta[relay.Constant][49] /* ty=Tensor[(35, 6), int16] */, dtype="int16") /* ty=Tensor[(35, 6), int16] */;
  %649 = reshape(%647, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), float32] */;
  %650 = reshape(%648, newshape=[210]) /* ty=Tensor[(210), int16] */;
  %651 = @func_2901(%649, %650) /* ty=(Tensor[(3, 5, 14), bool], Tensor[(210), int16], Tensor[(2, 9, 2), float64]) */;
  %652 = %651.0;
  %653 = cast(meta[relay.Constant][49] /* ty=Tensor[(35, 6), int16] */, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %654 = shape_of(%652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(%652, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %657 = cast(meta[relay.Constant][49] /* ty=Tensor[(35, 6), int16] */, dtype="int16") /* ty=Tensor[(35, 6), int16] */;
  %658 = reshape(%657, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), int16] */;
  %659 = @func_1642(%658) /* ty=(Tensor[(3, 5, 14), bool],) */;
  %660 = %659.0;
  %661 = cast(%660, dtype="int64") /* ty=Tensor[(3, 5, 14), int64] */;
  %662 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(35, 6), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %663 = cast(meta[relay.Constant][49] /* ty=Tensor[(35, 6), int16] */, dtype="int64") /* ty=Tensor[(35, 6), int64] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %665 = sinh(%646) /* ty=Tensor[(4, 13, 8), float64] */;
  %666 = mod(%655, %656) /* ty=Tensor[(3, 5, 14), float32] */;
  %667 = subtract(%663, %664) /* ty=Tensor[(35, 6), int64] */;
  (%665, meta[relay.Constant][48] /* ty=Tensor[(36), float32] */, %666, %667)
}

def @func_4407(%var_4405: Tensor[(4, 13, 8), float64]) -> (Tensor[(4, 13, 8), float64], Tensor[(36), float32], Tensor[(3, 5, 14), float32], Tensor[(35, 6), int64]) {
  @func_4404(%var_4405) /* ty=(Tensor[(4, 13, 8), float64], Tensor[(36), float32], Tensor[(3, 5, 14), float32], Tensor[(35, 6), int64]) */
}

def @func_10722() -> Tensor[(10, 12, 16), float64] {
  %668 = @func_6522() /* ty=Tensor[(10, 12, 16), float32] */;
  %669 = cast(%668, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  atanh(%669) /* ty=Tensor[(10, 12, 16), float64] */
}

def @func_7668(%var_7666: Tensor[(8, 8, 8), float32], %var_7667: Tensor[(5, 63), float32]) -> (Tensor[(8, 8, 8), float32], Tensor[(7, 5, 9), bool], Tensor[(5, 63), float32]) {
  @func_7664(%var_7666, %var_7667) /* ty=(Tensor[(8, 8, 8), float32], Tensor[(7, 5, 9), bool], Tensor[(5, 63), float32]) */
}

def @func_9438() -> (Tensor[(10, 12, 16), int32], Tensor[(315), float32], Tensor[(315), float32]) {
  %676 = fn () -> (Tensor[(10, 12, 16), int32], Tensor[(315), float32], Tensor[(315), float32]) {
    %670 = @func_7792() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(450), float32]) */;
    %671 = cast(meta[relay.Constant][50] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %672 = reshape(%671, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %673 = @func_965(%672) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
    %674 = %670.0;
    %675 = %673.2;
    (%674, %675, meta[relay.Constant][50] /* ty=Tensor[(315), float32] */)
  };
  %676() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(315), float32], Tensor[(315), float32]) */
}

def @func_7794() -> (Tensor[(10, 12, 16), int32], Tensor[(450), float32]) {
  @func_7792() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(450), float32]) */
}

def @func_9311(%var_9310: Tensor[(16, 3, 10), float32]) -> (Tensor[(16, 3, 10), float64],) {
  %681 = fn (%var_9302: Tensor[(16, 3, 10), float32]) -> (Tensor[(16, 3, 10), float64],) {
    %677 = cast(%var_9302, dtype="float32") /* ty=Tensor[(16, 3, 10), float32] */;
    %678 = tan(%677) /* ty=Tensor[(16, 3, 10), float32] */;
    %679 = cast(%678, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
    %680 = acosh(%679) /* ty=Tensor[(16, 3, 10), float64] */;
    (%680,)
  };
  %681(%var_9310) /* ty=(Tensor[(16, 3, 10), float64],) */
}

def @func_11384() -> Tensor[(10, 12, 16), float32] {
  %683 = fn () -> Tensor[(10, 12, 16), float32] {
    %682 = @func_10033() /* ty=(Tensor[(10, 12, 16), float32],) */;
    %682.0
  };
  %683() /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_11928(%var_11921: Tensor[(1, 8, 11), float64]) -> (Tensor[(1, 8, 11), float64],) {
  %684 = cast(%var_11921, dtype="float64") /* ty=Tensor[(1, 8, 11), float64] */;
  %685 = sqrt(%684) /* ty=Tensor[(1, 8, 11), float64] */;
  (%685,)
}

def @func_7056(%var_7054: Tensor[(18), uint64]) -> (Tensor[(13, 2, 7), float32], Tensor[(150), uint32], Tensor[(18), uint64]) {
  @func_7053(%var_7054) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(150), uint32], Tensor[(18), uint64]) */
}

def @func_10886() -> (Tensor[(10, 12, 16), float64],) {
  %686 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
  (%686,)
}

def @func_2901(%var_2864: Tensor[(2, 9, 2), float32], %var_2868: Tensor[(210), int16]) -> (Tensor[(3, 5, 14), bool], Tensor[(210), int16], Tensor[(2, 9, 2), float64]) {
  %687 = cast(%var_2868, dtype="int16") /* ty=Tensor[(210), int16] */;
  %688 = reshape(%687, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), int16] */;
  %689 = @func_1642(%688) /* ty=(Tensor[(3, 5, 14), bool],) */;
  %690 = cast(%var_2864, dtype="float32") /* ty=Tensor[(2, 9, 2), float32] */;
  %691 = cosh(%690) /* ty=Tensor[(2, 9, 2), float32] */;
  %692 = cast(%691, dtype="float64") /* ty=Tensor[(2, 9, 2), float64] */;
  %693 = %689.0;
  %694 = tan(%692) /* ty=Tensor[(2, 9, 2), float64] */;
  (%693, %var_2868, %694)
}

def @func_8673() -> (Tensor[(450), float32], Tensor[(10, 12, 16), float64]) {
  %697 = fn () -> (Tensor[(450), float32], Tensor[(10, 12, 16), float64]) {
    %695 = @func_6654() /* ty=Tensor[(450), float32] */;
    %696 = @func_5960() /* ty=Tensor[(10, 12, 16), float64] */;
    (%695, %696)
  };
  %697() /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64]) */
}

def @func_7956() -> Tensor[(10, 12, 16), float32] {
  %698 = fn () -> Tensor[(10, 12, 16), float32] {
    @func_6522() /* ty=Tensor[(10, 12, 16), float32] */
  };
  %698() /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_8699() -> (Tensor[(10, 12, 16), int64],) {
  %699 = @func_6553() /* ty=(Tensor[(10, 12, 16), int64],) */;
  %700 = %699.0;
  (%700,)
}

def @func_6501() -> Tensor[(10, 12, 16), float32] {
  %702 = fn () -> Tensor[(10, 12, 16), float32] {
    %701 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
    %701.0
  };
  %702() /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_2067(%var_2064: uint16, %var_2065: Tensor[(11, 5, 9), uint16], %var_2066: Tensor[(11, 5, 9), uint16]) -> (Tensor[(11, 5, 9), uint16], Tensor[(11, 5, 9), float64], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32]) {
  @func_2062(%var_2064, %var_2065, %var_2066) /* ty=(Tensor[(11, 5, 9), uint16], Tensor[(11, 5, 9), float64], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32]) */
}

def @func_8271() -> (Tensor[(13, 2, 7), float32],) {
  @func_8269() /* ty=(Tensor[(13, 2, 7), float32],) */
}

def @func_6522() -> Tensor[(10, 12, 16), float32] {
  %703 = @func_6200() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %703.0
}

def @func_10253() -> (Tensor[(10, 12, 16), int64], Tensor[(13, 2, 7), float32]) {
  %708 = fn () -> (Tensor[(10, 12, 16), int64], Tensor[(13, 2, 7), float32]) {
    %704 = @func_8699() /* ty=(Tensor[(10, 12, 16), int64],) */;
    %705 = @func_8128() /* ty=(Tensor[(13, 2, 7), float32],) */;
    %706 = %704.0;
    %707 = %705.0;
    (%706, %707)
  };
  %708() /* ty=(Tensor[(10, 12, 16), int64], Tensor[(13, 2, 7), float32]) */
}

def @func_10380(%var_10379: Tensor[(440, 2), uint32]) -> (Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(440, 2), uint32], Tensor[(150), float32], Tensor[(7, 5, 9), bool], Tensor[(182), float32], Tensor[(7, 5, 9), bool], Tensor[(1008), float32]) {
  %730 = fn (%var_10271: Tensor[(440, 2), uint32]) -> (Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(440, 2), uint32], Tensor[(150), float32], Tensor[(7, 5, 9), bool], Tensor[(182), float32], Tensor[(7, 5, 9), bool], Tensor[(1008), float32]) {
    %709 = cast(%var_10271, dtype="uint32") /* ty=Tensor[(440, 2), uint32] */;
    %710 = reshape(%709, newshape=[880]) /* ty=Tensor[(880), uint32] */;
    %711 = @func_7003(%710) /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) */;
    %712 = %711.1;
    %713 = cast(%712, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
    %714 = reshape(%713, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %715 = @func_8977(%714) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(10, 12, 16), bool], Tensor[(1920), float32], Tensor[(15, 6, 13), float32], Tensor[(150), float32], Tensor[(1920), float32]) */;
    %716 = %715.4;
    %717 = cast(%716, dtype="uint32") /* ty=Tensor[(150), uint32] */;
    %718 = cast(meta[relay.Constant][51] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %719 = reshape(%717, newshape=[150]) /* ty=Tensor[(150), uint32] */;
    %720 = reshape(%718, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %721 = @func_6847(%719, %720) /* ty=(Tensor[(16, 14, 13), float64], Tensor[(315), float32], Tensor[(1, 315), float32], Tensor[(7, 5, 9), bool], Tensor[(150), uint32], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(182), float32]) */;
    %722 = cast(meta[relay.Constant][52] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %723 = %721.3;
    %724 = cast(%723, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
    %725 = reshape(%722, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), float32] */;
    %726 = reshape(%724, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %727 = @func_2486(%725, %726) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
    %728 = @func_10168() /* ty=Tensor[(315), float32] */;
    %729 = %727.1;
    (%728, %712, %var_10271, %716, %723, meta[relay.Constant][51] /* ty=Tensor[(182), float32] */, %729, meta[relay.Constant][52] /* ty=Tensor[(1008), float32] */)
  };
  %730(%var_10379) /* ty=(Tensor[(315), float32], Tensor[(10, 12, 16), float64], Tensor[(440, 2), uint32], Tensor[(150), float32], Tensor[(7, 5, 9), bool], Tensor[(182), float32], Tensor[(7, 5, 9), bool], Tensor[(1008), float32]) */
}

def @func_10826(%var_10815: Tensor[(16, 10, 11), int16], %var_10816: Tensor[(16, 10, 11), int16]) -> (Tensor[(16, 10, 11), int16], Tensor[(10, 12, 16), float32]) {
  %731 = cast(%var_10816, dtype="int16") /* ty=Tensor[(16, 10, 11), int16] */;
  %732 = shape_of(%var_10815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%var_10815, dtype="int16") /* ty=Tensor[(16, 10, 11), int16] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %735 = maximum(%733, %734) /* ty=Tensor[(16, 10, 11), int16] */;
  %736 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
  (%735, %736)
}

def @func_1468(%var_1465: uint8, %var_1466: Tensor[(15, 10, 1), uint8], %var_1467: Tensor[(450), float32]) -> (Tensor[(15, 10, 1), uint8], Tensor[(15, 2, 15), float32], Tensor[(15, 12, 13), float32], Tensor[(2340), uint64], Tensor[(15, 2, 15), uint16], Tensor[(15, 6, 13), float32]) {
  @func_1463(%var_1465, %var_1466, %var_1467) /* ty=(Tensor[(15, 10, 1), uint8], Tensor[(15, 2, 15), float32], Tensor[(15, 12, 13), float32], Tensor[(2340), uint64], Tensor[(15, 2, 15), uint16], Tensor[(15, 6, 13), float32]) */
}

def @func_11325() -> Tensor[(10, 12, 16), float64] {
  %738 = fn () -> Tensor[(10, 12, 16), float64] {
    %737 = @func_8672() /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64]) */;
    %737.1
  };
  %738() /* ty=Tensor[(10, 12, 16), float64] */
}

def @func_2905(%var_2903: Tensor[(2, 9, 2), float32], %var_2904: Tensor[(210), int16]) -> (Tensor[(3, 5, 14), bool], Tensor[(210), int16], Tensor[(2, 9, 2), float64]) {
  @func_2901(%var_2903, %var_2904) /* ty=(Tensor[(3, 5, 14), bool], Tensor[(210), int16], Tensor[(2, 9, 2), float64]) */
}

def @func_7006(%var_7004: Tensor[(880), uint32]) -> (Tensor[(450), float32], Tensor[(10, 12, 16), float64], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) {
  @func_7003(%var_7004) /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) */
}

def @func_9693() -> (Tensor[(450), float32], Tensor[(13, 2, 7), float32]) {
  %742 = fn () -> (Tensor[(450), float32], Tensor[(13, 2, 7), float32]) {
    %739 = @func_7103() /* ty=(Tensor[(450), float32],) */;
    %740 = %739.0;
    %741 = @func_6409() /* ty=Tensor[(13, 2, 7), float32] */;
    (%740, %741)
  };
  %742() /* ty=(Tensor[(450), float32], Tensor[(13, 2, 7), float32]) */
}

def @main(%var_11993: Tensor[(16, 15, 11), float64]) -> Tensor[(16, 15, 11), float64] {
  %743 = cast(%var_11993, dtype="float64") /* ty=Tensor[(16, 15, 11), float64] */;
  cosh(%743) /* ty=Tensor[(16, 15, 11), float64] */
}

def @func_10764(%var_10763: Tensor[(13, 2, 7), float32]) -> Tensor[(13, 2, 7), bool] {
  %749 = fn (%var_10748: Tensor[(13, 2, 7), float32]) -> Tensor[(13, 2, 7), bool] {
    %744 = @func_9706() /* ty=Tensor[(13, 2, 7), float32] */;
    %745 = cast(%var_10748, dtype="bool") /* ty=Tensor[(13, 2, 7), bool] */;
    %746 = shape_of(%744, dtype="int32") /* ty=Tensor[(3), int32] */;
    %747 = cast(%744, dtype="bool") /* ty=Tensor[(13, 2, 7), bool] */;
    %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%747, %748) /* ty=Tensor[(13, 2, 7), bool] */
  };
  %749(%var_10763) /* ty=Tensor[(13, 2, 7), bool] */
}

def @func_11948() -> (Tensor[(10, 12, 16), float64],) {
  @func_11946() /* ty=(Tensor[(10, 12, 16), float64],) */
}

def @func_272(%var_270: Tensor[(7, 5, 9), float32], %var_271: Tensor[(7, 5, 9), float32]) -> Tensor[(7, 5, 9), bool] {
  @func_268(%var_270, %var_271) /* ty=Tensor[(7, 5, 9), bool] */
}

def @func_1192(%var_1164: uint64, %var_1165: Tensor[(15, 12, 13), uint64]) -> (Tensor[(15, 6, 13), float32], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(15, 12, 13), float32], Tensor[(315), float32]) {
  %750 = cast(meta[relay.Constant][53] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %751 = cast(meta[relay.Constant][54] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %752 = reshape(%750, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
  %753 = reshape(%751, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
  %754 = @func_442(%752, %753) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
  %755 = cast(%var_1164, dtype="bool") /* ty=bool */;
  %756 = cast(%var_1165, dtype="bool") /* ty=Tensor[(15, 12, 13), bool] */;
  %757 = greater_equal(%755, %756) /* ty=Tensor[(15, 12, 13), bool] */;
  %758 = cast(%757, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  %759 = cast(meta[relay.Constant][54] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %760 = reshape(%759, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %761 = @func_965(%760) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %762 = %754.0;
  %763 = exp(%758) /* ty=Tensor[(15, 12, 13), float32] */;
  %764 = %761.2;
  (%762, meta[relay.Constant][53] /* ty=Tensor[(1170), float32] */, meta[relay.Constant][54] /* ty=Tensor[(315), float32] */, %763, %764)
}

def @func_7900() -> (Tensor[(10, 12, 16), float32],) {
  @func_7898() /* ty=(Tensor[(10, 12, 16), float32],) */
}

def @func_11192() -> (uint16,) {
  %767 = fn () -> (uint16,) {
    %765 = @func_11086() /* ty=(Tensor[(13, 2, 7), float32], Tensor[(9, 1, 1), float32], Tensor[(10, 12, 16), float64], uint16) */;
    %766 = %765.3;
    (%766,)
  };
  %767() /* ty=(uint16,) */
}

def @func_10493() -> (Tensor[(10, 12, 16), float32], Tensor[(50, 9), float32], Tensor[(450), float32], Tensor[(315), float32]) {
  %768 = cast(meta[relay.Constant][55] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %769 = cast(meta[relay.Constant][56] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %770 = reshape(%768, newshape=[50, 9]) /* ty=Tensor[(50, 9), float32] */;
  %771 = reshape(%769, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %772 = @func_3255(%770, %771) /* ty=(Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
  %773 = @func_6500() /* ty=Tensor[(10, 12, 16), float32] */;
  %774 = %772.4;
  (%773, %774, meta[relay.Constant][55] /* ty=Tensor[(450), float32] */, meta[relay.Constant][56] /* ty=Tensor[(315), float32] */)
}

def @func_11001(%var_11000: Tensor[(10, 7, 14), float64]) -> Tensor[(10, 7, 14), float64] {
  %776 = fn (%var_10990: Tensor[(10, 7, 14), float64]) -> Tensor[(10, 7, 14), float64] {
    %775 = cast(%var_10990, dtype="float64") /* ty=Tensor[(10, 7, 14), float64] */;
    exp(%775) /* ty=Tensor[(10, 7, 14), float64] */
  };
  %776(%var_11000) /* ty=Tensor[(10, 7, 14), float64] */
}

def @func_10814() -> Tensor[(4, 6, 7), float64] {
  %778 = fn () -> Tensor[(4, 6, 7), float64] {
    %777 = cast(meta[relay.Constant][57] /* ty=Tensor[(4, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
    atanh(%777) /* ty=Tensor[(4, 6, 7), float64] */
  };
  %778() /* ty=Tensor[(4, 6, 7), float64] */
}

def @func_8701() -> (Tensor[(10, 12, 16), int64],) {
  @func_8699() /* ty=(Tensor[(10, 12, 16), int64],) */
}

def @func_6847(%var_6834: Tensor[(150), uint32], %var_6843: Tensor[(182), float32]) -> (Tensor[(16, 14, 13), float64], Tensor[(315), float32], Tensor[(1, 315), float32], Tensor[(7, 5, 9), bool], Tensor[(150), uint32], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(182), float32]) {
  %779 = @func_6144() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) */;
  %780 = %779.3;
  %781 = cast(%780, dtype="float64") /* ty=Tensor[(16, 14, 13), float64] */;
  %782 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 315), float32] */, dtype="float32") /* ty=Tensor[(1, 315), float32] */;
  %783 = reshape(%782, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %784 = @func_965(%783) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %785 = cast(%var_6834, dtype="uint32") /* ty=Tensor[(150), uint32] */;
  %786 = reshape(%785, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), uint32] */;
  %787 = @func_2096(%786) /* ty=(Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
  %788 = cast(meta[relay.Constant][59] /* ty=Tensor[(18), uint64] */, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %789 = cast(%var_6843, dtype="float32") /* ty=Tensor[(182), float32] */;
  %790 = reshape(%788, newshape=[18]) /* ty=Tensor[(18), uint64] */;
  %791 = reshape(%789, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %792 = @func_6789(%790, %791) /* ty=(Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(7, 5, 9), bool], Tensor[(15, 5, 2), bool], Tensor[(150), uint32], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) */;
  %793 = sin(%781) /* ty=Tensor[(16, 14, 13), float64] */;
  %794 = %784.2;
  %795 = %787.1;
  %796 = %792.0;
  (%793, %794, meta[relay.Constant][58] /* ty=Tensor[(1, 315), float32] */, %795, %var_6834, %796, meta[relay.Constant][59] /* ty=Tensor[(18), uint64] */, %var_6843)
}

def @func_6353() -> (Tensor[(315), float32],) {
  %797 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %798 = %797.3;
  (%798,)
}

def @func_7003(%var_6999: Tensor[(880), uint32]) -> (Tensor[(450), float32], Tensor[(10, 12, 16), float64], Tensor[(16, 5, 11), uint32], Tensor[(880), uint32]) {
  %799 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %800 = @func_6144() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) */;
  %801 = cast(%var_6999, dtype="uint32") /* ty=Tensor[(880), uint32] */;
  %802 = cast(%var_6999, dtype="uint32") /* ty=Tensor[(880), uint32] */;
  %803 = reshape(%801, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), uint32] */;
  %804 = reshape(%802, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), uint32] */;
  %805 = @func_5654(%803, %804) /* ty=(Tensor[(16, 5, 11), uint32],) */;
  %806 = %799.2;
  %807 = %800.2;
  %808 = %805.0;
  (%806, %807, %808, %var_6999)
}

def @func_9372() -> Tensor[(12, 8, 9), float64] {
  %810 = fn () -> Tensor[(12, 8, 9), float64] {
    %809 = cast(meta[relay.Constant][60] /* ty=Tensor[(12, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(12, 8, 9), float64] */;
    cos(%809) /* ty=Tensor[(12, 8, 9), float64] */
  };
  %810() /* ty=Tensor[(12, 8, 9), float64] */
}

def @func_11260(%var_11253: Tensor[(1540), float32], %var_11254: Tensor[(132), float32]) -> (Tensor[(10, 12, 16), int32], Tensor[(11, 12, 1), float32], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(10, 12, 16), float64]) {
  %811 = @func_7792() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(450), float32]) */;
  %812 = cast(%var_11253, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %813 = cast(%var_11254, dtype="float32") /* ty=Tensor[(132), float32] */;
  %814 = reshape(%812, newshape=[14, 10, 11]) /* ty=Tensor[(14, 10, 11), float32] */;
  %815 = reshape(%813, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %816 = @func_4153(%814, %815) /* ty=(Tensor[(11, 12, 1), float32], Tensor[(132), float32], Tensor[(14, 10, 11), float64], Tensor[(14, 10, 11), float32]) */;
  %817 = @func_8672() /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64]) */;
  %818 = %811.0;
  %819 = %816.0;
  %820 = %817.1;
  (%818, %819, %var_11253, %var_11254, %820)
}

def @func_5658(%var_5656: Tensor[(16, 5, 11), uint32], %var_5657: Tensor[(16, 5, 11), uint32]) -> (Tensor[(16, 5, 11), uint32],) {
  @func_5654(%var_5656, %var_5657) /* ty=(Tensor[(16, 5, 11), uint32],) */
}

def @func_6907() -> Tensor[(13, 2, 7), float32] {
  @func_6905() /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_7053(%var_7016: Tensor[(18), uint64]) -> (Tensor[(13, 2, 7), float32], Tensor[(150), uint32], Tensor[(18), uint64]) {
  %821 = cast(%var_7016, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %822 = reshape(%821, newshape=[18]) /* ty=Tensor[(18), uint64] */;
  %823 = @func_5427(%822) /* ty=(Tensor[(7, 11, 8), bool], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(15, 5, 2), bool], Tensor[(150), uint32]) */;
  %824 = @func_6409() /* ty=Tensor[(13, 2, 7), float32] */;
  %825 = %823.4;
  (%824, %825, %var_7016)
}

def @func_6851(%var_6849: Tensor[(150), uint32], %var_6850: Tensor[(182), float32]) -> (Tensor[(16, 14, 13), float64], Tensor[(315), float32], Tensor[(1, 315), float32], Tensor[(7, 5, 9), bool], Tensor[(150), uint32], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(182), float32]) {
  @func_6847(%var_6849, %var_6850) /* ty=(Tensor[(16, 14, 13), float64], Tensor[(315), float32], Tensor[(1, 315), float32], Tensor[(7, 5, 9), bool], Tensor[(150), uint32], Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(182), float32]) */
}

def @func_3150(%var_3149: Tensor[(11, 12, 1), float32]) -> Tensor[(11, 12, 1), float32] {
  %827 = fn (%var_3144: Tensor[(11, 12, 1), float32]) -> Tensor[(11, 12, 1), float32] {
    %826 = cast(%var_3144, dtype="float32") /* ty=Tensor[(11, 12, 1), float32] */;
    atanh(%826) /* ty=Tensor[(11, 12, 1), float32] */
  };
  %827(%var_3149) /* ty=Tensor[(11, 12, 1), float32] */
}

def @func_11752(%var_11748: Tensor[(10, 12, 16), float32], %var_11749: Tensor[(10, 12, 16), float32], %var_11750: uint64, %var_11751: Tensor[(450), float32]) -> (Tensor[(10, 12, 16), float32], Tensor[(10, 12, 16), float32], Tensor[(1170), float32], uint64, Tensor[(2340), uint64], Tensor[(10, 12, 16), bool], Tensor[(150), uint8], Tensor[(1344), uint32], Tensor[(450), float32]) {
  @func_11746(%var_11748, %var_11749, %var_11750, %var_11751) /* ty=(Tensor[(10, 12, 16), float32], Tensor[(10, 12, 16), float32], Tensor[(1170), float32], uint64, Tensor[(2340), uint64], Tensor[(10, 12, 16), bool], Tensor[(150), uint8], Tensor[(1344), uint32], Tensor[(450), float32]) */
}

def @func_10537() -> (Tensor[(10, 12, 16), float32], Tensor[(1920), uint32]) {
  %834 = fn () -> (Tensor[(10, 12, 16), float32], Tensor[(1920), uint32]) {
    %828 = @func_7898() /* ty=(Tensor[(10, 12, 16), float32],) */;
    %829 = %828.0;
    %830 = cast(%829, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
    %831 = reshape(%830, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %832 = @func_7552(%831) /* ty=(Tensor[(13, 2, 7), float32], Tensor[(13, 2, 7), float32], Tensor[(1920), uint32], Tensor[(15, 16, 8), float64], Tensor[(450), float32], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
    %833 = %832.2;
    (%829, %833)
  };
  %834() /* ty=(Tensor[(10, 12, 16), float32], Tensor[(1920), uint32]) */
}

def @func_967(%var_966: Tensor[(315), float32]) -> (Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) {
  %842 = fn (%var_949: Tensor[(315), float32]) -> (Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) {
    %835 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 5), float32] */;
    %836 = cast(%var_949, dtype="float32") /* ty=Tensor[(315), float32] */;
    %837 = cast(%var_949, dtype="float32") /* ty=Tensor[(315), float32] */;
    %838 = reshape(%836, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
    %839 = reshape(%837, newshape=[7, 5, 9]) /* ty=Tensor[(7, 5, 9), float32] */;
    %840 = atan(%835) /* ty=Tensor[(2, 11, 5), float32] */;
    %841 = @func_268(%838, %839) /* ty=Tensor[(7, 5, 9), bool] */;
    (%840, %841, %var_949)
  };
  %842(%var_966) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */
}

def @func_2486(%var_2476: Tensor[(8, 14, 9), float32], %var_2484: Tensor[(315), float32]) -> (Tensor[(8, 14, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) {
  %843 = cast(%var_2476, dtype="float32") /* ty=Tensor[(8, 14, 9), float32] */;
  %844 = cast(meta[relay.Constant][62] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %845 = cast(%var_2484, dtype="float32") /* ty=Tensor[(315), float32] */;
  %846 = reshape(%844, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
  %847 = reshape(%845, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
  %848 = @func_442(%846, %847) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
  %849 = sqrt(%843) /* ty=Tensor[(8, 14, 9), float32] */;
  %850 = %848.4;
  (%849, %850, meta[relay.Constant][62] /* ty=Tensor[(1170), float32] */, %var_2484)
}

def @func_8825(%var_8824: Tensor[(10, 12, 16), int32]) -> Tensor[(10, 12, 16), float32] {
  %857 = fn (%var_8809: Tensor[(10, 12, 16), int32]) -> Tensor[(10, 12, 16), float32] {
    %851 = @func_7792() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(450), float32]) */;
    %852 = %851.0;
    %853 = cast(%var_8809, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
    %854 = shape_of(%852, dtype="int32") /* ty=Tensor[(3), int32] */;
    %855 = cast(%852, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
    %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%855, %856) /* ty=Tensor[(10, 12, 16), float32] */
  };
  %857(%var_8824) /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_3814(%var_3812: Tensor[(36), float32], %var_3813: Tensor[(210), int16]) -> (Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) {
  %866 = fn (%var_3803: Tensor[(36), float32], %var_3804: Tensor[(210), int16]) -> (Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) {
    %858 = cast(meta[relay.Constant][63] /* ty=Tensor[(5, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 4, 4), float32] */;
    %859 = cast(%var_3803, dtype="float32") /* ty=Tensor[(36), float32] */;
    %860 = cast(%var_3804, dtype="int16") /* ty=Tensor[(210), int16] */;
    %861 = reshape(%859, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), float32] */;
    %862 = reshape(%860, newshape=[210]) /* ty=Tensor[(210), int16] */;
    %863 = @func_2901(%861, %862) /* ty=(Tensor[(3, 5, 14), bool], Tensor[(210), int16], Tensor[(2, 9, 2), float64]) */;
    %864 = tan(%858) /* ty=Tensor[(5, 4, 4), float32] */;
    %865 = %863.0;
    (%864, %865, %var_3803, %var_3804)
  };
  %866(%var_3812, %var_3813) /* ty=(Tensor[(5, 4, 4), float32], Tensor[(3, 5, 14), bool], Tensor[(36), float32], Tensor[(210), int16]) */
}

def @func_9706() -> Tensor[(13, 2, 7), float32] {
  @func_6409() /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_10108() -> (Tensor[(10, 12, 16), int32], Tensor[(35, 6), int64], Tensor[(2, 208), float64]) {
  %873 = fn () -> (Tensor[(10, 12, 16), int32], Tensor[(35, 6), int64], Tensor[(2, 208), float64]) {
    %867 = @func_9437() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(315), float32], Tensor[(315), float32]) */;
    %868 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 208), float64] */, dtype="float64") /* ty=Tensor[(2, 208), float64] */;
    %869 = reshape(%868, newshape=[4, 13, 8]) /* ty=Tensor[(4, 13, 8), float64] */;
    %870 = @func_4404(%869) /* ty=(Tensor[(4, 13, 8), float64], Tensor[(36), float32], Tensor[(3, 5, 14), float32], Tensor[(35, 6), int64]) */;
    %871 = %867.0;
    %872 = %870.3;
    (%871, %872, meta[relay.Constant][64] /* ty=Tensor[(2, 208), float64] */)
  };
  %873() /* ty=(Tensor[(10, 12, 16), int32], Tensor[(35, 6), int64], Tensor[(2, 208), float64]) */
}

def @func_11808() -> (Tensor[(4, 6, 7), float64], Tensor[(450), float32]) {
  %874 = @func_7103() /* ty=(Tensor[(450), float32],) */;
  %875 = @func_10813() /* ty=Tensor[(4, 6, 7), float64] */;
  %876 = %874.0;
  (%875, %876)
}

def @func_8350() -> Tensor[(10, 12, 16), int64] {
  %878 = fn () -> Tensor[(10, 12, 16), int64] {
    %877 = @func_6553() /* ty=(Tensor[(10, 12, 16), int64],) */;
    %877.0
  };
  %878() /* ty=Tensor[(10, 12, 16), int64] */
}

def @func_11931(%var_11929: Tensor[(1, 8, 11), float64]) -> (Tensor[(1, 8, 11), float64],) {
  @func_11928(%var_11929) /* ty=(Tensor[(1, 8, 11), float64],) */
}

def @func_8269() -> (Tensor[(13, 2, 7), float32],) {
  %879 = @func_8080() /* ty=(Tensor[(13, 2, 7), float32],) */;
  %880 = %879.0;
  (%880,)
}

def @func_10024() -> Tensor[(10, 12, 16), float32] {
  %881 = fn () -> Tensor[(10, 12, 16), float32] {
    @func_7955() /* ty=Tensor[(10, 12, 16), float32] */
  };
  %881() /* ty=Tensor[(10, 12, 16), float32] */
}

def @func_11746(%var_11648: Tensor[(10, 12, 16), float32], %var_11715: Tensor[(10, 12, 16), float32], %var_11724: uint64, %var_11735: Tensor[(450), float32]) -> (Tensor[(10, 12, 16), float32], Tensor[(10, 12, 16), float32], Tensor[(1170), float32], uint64, Tensor[(2340), uint64], Tensor[(10, 12, 16), bool], Tensor[(150), uint8], Tensor[(1344), uint32], Tensor[(450), float32]) {
  %882 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
  %883 = @func_10023() /* ty=Tensor[(10, 12, 16), float32] */;
  %884 = cast(%var_11715, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(%883, dtype="float32") /* ty=Tensor[(10, 12, 16), float32] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %888 = cast(%var_11724, dtype="uint64") /* ty=uint64 */;
  %889 = cast(meta[relay.Constant][65] /* ty=Tensor[(2340), uint64] */, dtype="uint64") /* ty=Tensor[(2340), uint64] */;
  %890 = reshape(%888, newshape=[]) /* ty=uint64 */;
  %891 = reshape(%889, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), uint64] */;
  %892 = @func_1192(%890, %891) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(15, 12, 13), float32], Tensor[(315), float32]) */;
  %893 = @func_8672() /* ty=(Tensor[(450), float32], Tensor[(10, 12, 16), float64]) */;
  %894 = %893.1;
  %895 = cast(%var_11648, dtype="int32") /* ty=Tensor[(10, 12, 16), int32] */;
  %896 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%883, dtype="int32") /* ty=Tensor[(10, 12, 16), int32] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %899 = maximum(%897, %898) /* ty=Tensor[(10, 12, 16), int32] */;
  %900 = cast(%899, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %901 = shape_of(%894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %902 = cast(%894, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %904 = cast(%var_11724, dtype="uint32") /* ty=uint32 */;
  %905 = cast(meta[relay.Constant][66] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %906 = cast(%var_11735, dtype="float32") /* ty=Tensor[(450), float32] */;
  %907 = reshape(%904, newshape=[]) /* ty=uint32 */;
  %908 = reshape(%905, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), uint32] */;
  %909 = reshape(%906, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %910 = @func_2976(%907, %908, %909) /* ty=(Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) */;
  %911 = %882.0;
  %912 = divide(%886, %887) /* ty=Tensor[(10, 12, 16), float32] */;
  %913 = %892.1;
  %914 = greater(%902, %903) /* ty=Tensor[(10, 12, 16), bool] */;
  %915 = %910.2;
  (%911, %912, %913, %var_11724, meta[relay.Constant][65] /* ty=Tensor[(2340), uint64] */, %914, %915, meta[relay.Constant][66] /* ty=Tensor[(1344), uint32] */, %var_11735)
}

def @func_4791(%var_4786: Tensor[(11, 2, 6), float32], %var_4787: uint32, %var_4788: Tensor[(1344), uint32], %var_4789: Tensor[(150, 3), float32], %var_4790: Tensor[(150), uint32]) -> (Tensor[(11, 2, 6), float32], Tensor[(1170), float32], Tensor[(1008), float32], Tensor[(315, 1), float32], Tensor[(6, 16, 14), uint32], uint32, Tensor[(1344), uint32], Tensor[(150, 3), float32], Tensor[(315), float32], Tensor[(150), uint32]) {
  %936 = fn (%var_4738: Tensor[(11, 2, 6), float32], %var_4759: uint32, %var_4760: Tensor[(1344), uint32], %var_4761: Tensor[(150, 3), float32], %var_4765: Tensor[(150), uint32]) -> (Tensor[(11, 2, 6), float32], Tensor[(1170), float32], Tensor[(1008), float32], Tensor[(315, 1), float32], Tensor[(6, 16, 14), uint32], uint32, Tensor[(1344), uint32], Tensor[(150, 3), float32], Tensor[(315), float32], Tensor[(150), uint32]) {
    %916 = cast(%var_4738, dtype="float32") /* ty=Tensor[(11, 2, 6), float32] */;
    %917 = cast(meta[relay.Constant][67] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %918 = cast(meta[relay.Constant][68] /* ty=Tensor[(315, 1), float32] */, dtype="float32") /* ty=Tensor[(315, 1), float32] */;
    %919 = reshape(%917, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), float32] */;
    %920 = reshape(%918, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %921 = @func_2486(%919, %920) /* ty=(Tensor[(8, 14, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
    %922 = cast(%var_4759, dtype="uint32") /* ty=uint32 */;
    %923 = cast(%var_4760, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
    %924 = cast(%var_4761, dtype="float32") /* ty=Tensor[(150, 3), float32] */;
    %925 = reshape(%922, newshape=[]) /* ty=uint32 */;
    %926 = reshape(%923, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), uint32] */;
    %927 = reshape(%924, newshape=[450]) /* ty=Tensor[(450), float32] */;
    %928 = @func_2976(%925, %926, %927) /* ty=(Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) */;
    %929 = cast(%var_4765, dtype="uint32") /* ty=Tensor[(150), uint32] */;
    %930 = reshape(%929, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), uint32] */;
    %931 = @func_2096(%930) /* ty=(Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
    %932 = acos(%916) /* ty=Tensor[(11, 2, 6), float32] */;
    %933 = %921.2;
    %934 = %928.0;
    %935 = %931.2;
    (%932, %933, meta[relay.Constant][67] /* ty=Tensor[(1008), float32] */, meta[relay.Constant][68] /* ty=Tensor[(315, 1), float32] */, %934, %var_4759, %var_4760, %var_4761, %935, %var_4765)
  };
  %936(%var_4786, %var_4787, %var_4788, %var_4789, %var_4790) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(1170), float32], Tensor[(1008), float32], Tensor[(315, 1), float32], Tensor[(6, 16, 14), uint32], uint32, Tensor[(1344), uint32], Tensor[(150, 3), float32], Tensor[(315), float32], Tensor[(150), uint32]) */
}

def @func_2980(%var_2977: uint32, %var_2978: Tensor[(6, 16, 14), uint32], %var_2979: Tensor[(450), float32]) -> (Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) {
  %948 = fn (%var_2959: uint32, %var_2960: Tensor[(6, 16, 14), uint32], %var_2968: Tensor[(450), float32]) -> (Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) {
    %937 = cast(%var_2959, dtype="uint32") /* ty=uint32 */;
    %938 = cast(%var_2960, dtype="uint32") /* ty=Tensor[(6, 16, 14), uint32] */;
    %939 = cast(%var_2959, dtype="uint8") /* ty=uint8 */;
    %940 = cast(meta[relay.Constant][69] /* ty=Tensor[(150), uint8] */, dtype="uint8") /* ty=Tensor[(150), uint8] */;
    %941 = cast(%var_2968, dtype="float32") /* ty=Tensor[(450), float32] */;
    %942 = reshape(%939, newshape=[]) /* ty=uint8 */;
    %943 = reshape(%940, newshape=[15, 10, 1]) /* ty=Tensor[(15, 10, 1), uint8] */;
    %944 = reshape(%941, newshape=[450]) /* ty=Tensor[(450), float32] */;
    %945 = @func_1463(%942, %943, %944) /* ty=(Tensor[(15, 10, 1), uint8], Tensor[(15, 2, 15), float32], Tensor[(15, 12, 13), float32], Tensor[(2340), uint64], Tensor[(15, 2, 15), uint16], Tensor[(15, 6, 13), float32]) */;
    %946 = logical_xor(%937, %938) /* ty=Tensor[(6, 16, 14), uint32] */;
    %947 = %945.1;
    (%946, %947, meta[relay.Constant][69] /* ty=Tensor[(150), uint8] */, %var_2968)
  };
  %948(%var_2977, %var_2978, %var_2979) /* ty=(Tensor[(6, 16, 14), uint32], Tensor[(15, 2, 15), float32], Tensor[(150), uint8], Tensor[(450), float32]) */
}

def @func_5290(%var_5289: Tensor[(15, 1, 10), float32]) -> (Tensor[(15, 1, 10), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(5, 63), float32], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(15, 6, 13), float32]) {
  %969 = fn (%var_5263: Tensor[(15, 1, 10), float32]) -> (Tensor[(15, 1, 10), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(5, 63), float32], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(15, 6, 13), float32]) {
    %949 = cast(%var_5263, dtype="float32") /* ty=Tensor[(15, 1, 10), float32] */;
    %950 = cast(meta[relay.Constant][70] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %951 = cast(meta[relay.Constant][71] /* ty=Tensor[(5, 63), float32] */, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
    %952 = reshape(%950, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
    %953 = reshape(%951, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
    %954 = @func_442(%952, %953) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
    %955 = cast(meta[relay.Constant][72] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %956 = cast(meta[relay.Constant][71] /* ty=Tensor[(5, 63), float32] */, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
    %957 = reshape(%955, newshape=[50, 9]) /* ty=Tensor[(50, 9), float32] */;
    %958 = reshape(%956, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %959 = @func_3255(%957, %958) /* ty=(Tensor[(10, 7, 9), int64], Tensor[(13, 2, 7), float32], Tensor[(182), float32], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32]) */;
    %960 = cast(meta[relay.Constant][70] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %961 = cast(meta[relay.Constant][71] /* ty=Tensor[(5, 63), float32] */, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
    %962 = reshape(%960, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
    %963 = reshape(%961, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
    %964 = @func_442(%962, %963) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
    %965 = log2(%949) /* ty=Tensor[(15, 1, 10), float32] */;
    %966 = %954.3;
    %967 = %959.3;
    %968 = %964.0;
    (%965, %966, meta[relay.Constant][70] /* ty=Tensor[(1170), float32] */, meta[relay.Constant][71] /* ty=Tensor[(5, 63), float32] */, %967, meta[relay.Constant][72] /* ty=Tensor[(450), float32] */, %968)
  };
  %969(%var_5289) /* ty=(Tensor[(15, 1, 10), float32], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(5, 63), float32], Tensor[(15, 2, 15), float32], Tensor[(450), float32], Tensor[(15, 6, 13), float32]) */
}

def @func_4904(%var_4902: Tensor[(1, 210), int16]) -> (Tensor[(36), float32], Tensor[(9, 4), float32], Tensor[(1, 210), int16], Tensor[(9, 4, 16), float64]) {
  @func_4901(%var_4902) /* ty=(Tensor[(36), float32], Tensor[(9, 4), float32], Tensor[(1, 210), int16], Tensor[(9, 4, 16), float64]) */
}

def @func_6278(%var_6277: uint16) -> (Tensor[(10, 12, 16), float64], Tensor[(11, 5, 9), float64], uint16, Tensor[(1, 495), uint16]) {
  %982 = fn (%var_6273: uint16) -> (Tensor[(10, 12, 16), float64], Tensor[(11, 5, 9), float64], uint16, Tensor[(1, 495), uint16]) {
    %970 = @func_6144() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), int16], Tensor[(10, 12, 16), float64], Tensor[(16, 14, 13), float32]) */;
    %971 = %970.0;
    %972 = cast(%971, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
    %973 = cast(%var_6273, dtype="uint16") /* ty=uint16 */;
    %974 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 495), uint16] */, dtype="uint16") /* ty=Tensor[(1, 495), uint16] */;
    %975 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 495), uint16] */, dtype="uint16") /* ty=Tensor[(1, 495), uint16] */;
    %976 = reshape(%973, newshape=[]) /* ty=uint16 */;
    %977 = reshape(%974, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), uint16] */;
    %978 = reshape(%975, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), uint16] */;
    %979 = @func_2062(%976, %977, %978) /* ty=(Tensor[(11, 5, 9), uint16], Tensor[(11, 5, 9), float64], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32]) */;
    %980 = erf(%972) /* ty=Tensor[(10, 12, 16), float64] */;
    %981 = %979.1;
    (%980, %981, %var_6273, meta[relay.Constant][73] /* ty=Tensor[(1, 495), uint16] */)
  };
  %982(%var_6277) /* ty=(Tensor[(10, 12, 16), float64], Tensor[(11, 5, 9), float64], uint16, Tensor[(1, 495), uint16]) */
}

def @func_7461() -> Tensor[(315), float32] {
  %984 = fn () -> Tensor[(315), float32] {
    %983 = @func_6353() /* ty=(Tensor[(315), float32],) */;
    %983.0
  };
  %984() /* ty=Tensor[(315), float32] */
}

def @func_10034() -> (Tensor[(10, 12, 16), float32],) {
  %986 = fn () -> (Tensor[(10, 12, 16), float32],) {
    %985 = @func_7955() /* ty=Tensor[(10, 12, 16), float32] */;
    (%985,)
  };
  %986() /* ty=(Tensor[(10, 12, 16), float32],) */
}

def @func_2062(%var_2012: uint16, %var_2013: Tensor[(11, 5, 9), uint16], %var_2021: Tensor[(11, 5, 9), uint16]) -> (Tensor[(11, 5, 9), uint16], Tensor[(11, 5, 9), float64], Tensor[(15, 2, 15), float32], Tensor[(50, 9), float32]) {
  %987 = cast(%var_2012, dtype="uint16") /* ty=uint16 */;
  %988 = cast(%var_2013, dtype="uint16") /* ty=Tensor[(11, 5, 9), uint16] */;
  %989 = cast(%var_2021, dtype="float64") /* ty=Tensor[(11, 5, 9), float64] */;
  %990 = shape_of(%var_2013, dtype="int32") /* ty=Tensor[(3), int32] */;
  %991 = cast(%var_2013, dtype="float64") /* ty=Tensor[(11, 5, 9), float64] */;
  %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %993 = cast(meta[relay.Constant][74] /* ty=Tensor[(50, 9), float32] */, dtype="float32") /* ty=Tensor[(50, 9), float32] */;
  %994 = reshape(%993, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), float32] */;
  %995 = maximum(%987, %988) /* ty=Tensor[(11, 5, 9), uint16] */;
  %996 = mod(%991, %992) /* ty=Tensor[(11, 5, 9), float64] */;
  %997 = @func_574(%994) /* ty=Tensor[(15, 2, 15), float32] */;
  (%995, %996, %997, meta[relay.Constant][74] /* ty=Tensor[(50, 9), float32] */)
}

def @func_8128() -> (Tensor[(13, 2, 7), float32],) {
  %998 = @func_6905() /* ty=Tensor[(13, 2, 7), float32] */;
  (%998,)
}

def @func_7069() -> (Tensor[(450), float32],) {
  @func_7067() /* ty=(Tensor[(450), float32],) */
}

def @func_6201() -> (Tensor[(10, 12, 16), float32],) {
  %1001 = fn () -> (Tensor[(10, 12, 16), float32],) {
    %999 = @func_6168() /* ty=(Tensor[(10, 12, 16), float32],) */;
    %1000 = %999.0;
    (%1000,)
  };
  %1001() /* ty=(Tensor[(10, 12, 16), float32],) */
}

def @func_6905() -> Tensor[(13, 2, 7), float32] {
  @func_6409() /* ty=Tensor[(13, 2, 7), float32] */
}

def @func_11560(%var_11558: Tensor[(40, 22), uint32]) -> (Tensor[(10, 12, 16), int64], Tensor[(1008), float32], Tensor[(40, 22), uint32]) {
  @func_11557(%var_11558) /* ty=(Tensor[(10, 12, 16), int64], Tensor[(1008), float32], Tensor[(40, 22), uint32]) */
}

def @func_6792(%var_6790: Tensor[(18), uint64], %var_6791: Tensor[(182), float32]) -> (Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(7, 5, 9), bool], Tensor[(15, 5, 2), bool], Tensor[(150), uint32], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) {
  %1027 = fn (%var_6729: Tensor[(18), uint64], %var_6783: Tensor[(182), float32]) -> (Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(7, 5, 9), bool], Tensor[(15, 5, 2), bool], Tensor[(150), uint32], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) {
    %1002 = cast(%var_6729, dtype="uint64") /* ty=Tensor[(18), uint64] */;
    %1003 = reshape(%1002, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), uint64] */;
    %1004 = @func_2699(%1003) /* ty=(Tensor[(2, 9, ?), uint64],) */;
    %1005 = cast(meta[relay.Constant][75] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %1006 = @func_6353() /* ty=(Tensor[(315), float32],) */;
    %1007 = %1006.0;
    %1008 = cast(%1007, dtype="float32") /* ty=Tensor[(315), float32] */;
    %1009 = reshape(%1005, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
    %1010 = reshape(%1008, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
    %1011 = @func_442(%1009, %1010) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
    %1012 = cast(%1007, dtype="float32") /* ty=Tensor[(315), float32] */;
    %1013 = cast(%1007, dtype="float32") /* ty=Tensor[(315), float32] */;
    %1014 = reshape(%1013, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %1015 = @func_965(%1014) /* ty=(Tensor[(2, 11, 5), float32], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
    %1016 = cast(meta[relay.Constant][76] /* ty=Tensor[(150), uint32] */, dtype="uint32") /* ty=Tensor[(150), uint32] */;
    %1017 = reshape(%1016, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), uint32] */;
    %1018 = @func_2096(%1017) /* ty=(Tensor[(15, 5, 2), bool], Tensor[(7, 5, 9), bool], Tensor[(315), float32]) */;
    %1019 = cast(%var_6783, dtype="float32") /* ty=Tensor[(182), float32] */;
    %1020 = reshape(%1019, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), float32] */;
    %1021 = %1004.0;
    %1022 = %1011.5;
    %1023 = sqrt(%1012) /* ty=Tensor[(315), float32] */;
    %1024 = %1015.1;
    %1025 = %1018.0;
    %1026 = @func_2373(%1020) /* ty=Tensor[(13, 2, 7), float32] */;
    (%1021, %var_6729, %1022, meta[relay.Constant][75] /* ty=Tensor[(1170), float32] */, %1023, %1024, %1025, meta[relay.Constant][76] /* ty=Tensor[(150), uint32] */, %1026, %var_6783)
  };
  %1027(%var_6790, %var_6791) /* ty=(Tensor[(2, 9, ?), uint64], Tensor[(18), uint64], Tensor[(7, 5, 9), bool], Tensor[(1170), float32], Tensor[(315), float32], Tensor[(7, 5, 9), bool], Tensor[(15, 5, 2), bool], Tensor[(150), uint32], Tensor[(13, 2, 7), float32], Tensor[(182), float32]) */
}

def @func_10905() -> (Tensor[(9, 1, 1), float32], Tensor[(5, 6, 15), float64]) {
  %1028 = cast(meta[relay.Constant][77] /* ty=Tensor[(9, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 1), float32] */;
  %1029 = cosh(%1028) /* ty=Tensor[(9, 1, 1), float32] */;
  %1030 = @func_9148() /* ty=Tensor[(5, 6, 15), float64] */;
  (%1029, %1030)
}

def @func_7399(%var_7397: Tensor[(15, 16, 8), float64], %var_7398: Tensor[(15, 16, 8), float64]) -> (Tensor[(15, 16, 8), float64],) {
  @func_7395(%var_7397, %var_7398) /* ty=(Tensor[(15, 16, 8), float64],) */
}

def @func_7868(%var_7860: Tensor[(5, 234), float32]) -> (Tensor[(10, 12, 16), float64], Tensor[(35, 9), float32], Tensor[(5, 234), float32], Tensor[(315), float32]) {
  %1031 = @func_6701() /* ty=(Tensor[(10, 12, 16), float64],) */;
  %1032 = cast(%var_7860, dtype="float32") /* ty=Tensor[(5, 234), float32] */;
  %1033 = cast(meta[relay.Constant][78] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %1034 = reshape(%1032, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float32] */;
  %1035 = reshape(%1033, newshape=[35, 9]) /* ty=Tensor[(35, 9), float32] */;
  %1036 = @func_442(%1034, %1035) /* ty=(Tensor[(15, 6, 13), float32], Tensor[(7, 5, 9), bool], Tensor[(35, 9), float32], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool], Tensor[(7, 5, 9), bool]) */;
  %1037 = %1031.0;
  %1038 = %1036.2;
  (%1037, %1038, %var_7860, meta[relay.Constant][78] /* ty=Tensor[(315), float32] */)
}

def @func_6409() -> Tensor[(13, 2, 7), float32] {
  %1039 = @func_6050() /* ty=(Tensor[(10, 12, 16), float64], Tensor[(13, 2, 7), float32], Tensor[(450), float32], Tensor[(315), float32]) */;
  %1039.1
}

def @func_11372() -> uint16 {
  %1040 = @func_11191() /* ty=(uint16,) */;
  %1040.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen591/build/output.py:2781: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen591/build/output.py", line 2786, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_cosh_kernel0(double* __restrict__ T_cosh, double* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 2640) {
    T_cosh[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = cosh(placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


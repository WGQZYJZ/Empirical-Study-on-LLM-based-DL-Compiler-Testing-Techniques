==========mod==========
#[version = "0.0.5"]
def @func_12070(%var_12067: Tensor[(13, 14, 15), float64]) -> Tensor[(13, 14, 15), float64] {
  %0 = cast(%var_12067, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
  log2(%0) /* ty=Tensor[(13, 14, 15), float64] */
}

def @func_11965() -> (Tensor[(1, 12, 2), float64], Tensor[(5, 14, 2), float32], Tensor[(1, 140), float32]) {
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 140), float32] */, dtype="float32") /* ty=Tensor[(1, 140), float32] */;
  %2 = reshape(%1, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), float32] */;
  %3 = @func_10730(%2) /* ty=(Tensor[(5, 14, 2), float32],) */;
  %4 = @func_9123() /* ty=Tensor[(1, 12, 2), float64] */;
  %5 = %3.0;
  (%4, %5, meta[relay.Constant][0] /* ty=Tensor[(1, 140), float32] */)
}

def @func_7082(%var_7005: Tensor[(15, 5, 6), float32]) -> (Tensor[(9, 13, 11), float32], Tensor[(15, 5, 6), int8], Tensor[(15, 5, 6), bool], Tensor[(15, 5, 6), bool]) {
  %6 = @func_4336() /* ty=(Tensor[(9, 13, 11), float32],) */;
  %7 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 6), float32] */;
  %8 = shape_of(%var_7005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%var_7005, dtype="float32") /* ty=Tensor[(15, 5, 6), float32] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %11 = floor_divide(%9, %10) /* ty=Tensor[(15, 5, 6), float32] */;
  %12 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 5, 6), float32] */, dtype="int8") /* ty=Tensor[(15, 5, 6), int8] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%11, dtype="int8") /* ty=Tensor[(15, 5, 6), int8] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %16 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 5, 6), float32] */, dtype="bool") /* ty=Tensor[(15, 5, 6), bool] */;
  %17 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(15, 5, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 5, 6), float32] */, dtype="bool") /* ty=Tensor[(15, 5, 6), bool] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 5, 6), float32] */, dtype="bool") /* ty=Tensor[(15, 5, 6), bool] */;
  %21 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(15, 5, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 5, 6), float32] */, dtype="bool") /* ty=Tensor[(15, 5, 6), bool] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %24 = %6.0;
  %25 = maximum(%14, %15) /* ty=Tensor[(15, 5, 6), int8] */;
  %26 = logical_and(%18, %19) /* ty=Tensor[(15, 5, 6), bool] */;
  %27 = less(%22, %23) /* ty=Tensor[(15, 5, 6), bool] */;
  (%24, %25, %26, %27)
}

def @func_7405() -> (Tensor[(1, 12, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(990), float64]) {
  %28 = cast(meta[relay.Constant][4] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %29 = reshape(%28, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), float64] */;
  %30 = @func_5711(%29) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(?, 12, 2), bool]) */;
  %31 = @func_7292() /* ty=Tensor[(1, 12, 2), float32] */;
  %32 = %30.0;
  (%31, %32, meta[relay.Constant][4] /* ty=Tensor[(990), float64] */)
}

def @func_10397() -> Tensor[(?, 12, 2), bool] {
  @func_6789() /* ty=Tensor[(?, 12, 2), bool] */
}

def @func_10935(%var_10920: Tensor[(700), int32]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32], Tensor[(5, 10, 14), int32], Tensor[(700), int32]) {
  %33 = @func_9293() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(16, 12, 2), int64], Tensor[(384), float64]) */;
  %34 = @func_1537() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %35 = @func_5356() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32]) */;
  %36 = cast(%var_10920, dtype="int32") /* ty=Tensor[(700), int32] */;
  %37 = cast(%var_10920, dtype="int32") /* ty=Tensor[(700), int32] */;
  %38 = reshape(%36, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int32] */;
  %39 = reshape(%37, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int32] */;
  %40 = @func_8032(%38, %39) /* ty=(Tensor[(5, 10, 14), int32],) */;
  %41 = %33.0;
  %42 = %34.0;
  %43 = %35.1;
  %44 = %40.0;
  (%41, %42, %43, %44, %var_10920)
}

def @func_5325() -> (Tensor[(?, 12, 2), int8], Tensor[(336), int32]) {
  %45 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %46 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %47 = %45.0;
  %48 = %46.2;
  (%47, %48)
}

def @func_10553() -> (Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  %49 = @func_7723() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %50 = @func_10355() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32]) */;
  %51 = %49.0;
  %52 = %50.3;
  (%51, %52)
}

def @func_8700(%var_8673: Tensor[(54), int8]) -> (Tensor[(11, 5, 4), float32], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(3, 9, 2), float32], Tensor[(54), int8]) {
  %53 = cast(meta[relay.Constant][5] /* ty=Tensor[(11, 5, 4), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 4), float32] */;
  %54 = cast(meta[relay.Constant][6] /* ty=Tensor[(330), float64] */, dtype="float64") /* ty=Tensor[(330), float64] */;
  %55 = reshape(%54, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float64] */;
  %56 = @func_42(%55) /* ty=(Tensor[(11, 6, 5), float64],) */;
  %57 = cast(%var_8673, dtype="int8") /* ty=Tensor[(54), int8] */;
  %58 = cast(%var_8673, dtype="int8") /* ty=Tensor[(54), int8] */;
  %59 = reshape(%57, newshape=[3, 9, 2]) /* ty=Tensor[(3, 9, 2), int8] */;
  %60 = reshape(%58, newshape=[3, 9, 2]) /* ty=Tensor[(3, 9, 2), int8] */;
  %61 = @func_2342(%59, %60) /* ty=(Tensor[(3, 9, 2), bool], Tensor[(3, 9, 2), float32]) */;
  %62 = acos(%53) /* ty=Tensor[(11, 5, 4), float32] */;
  %63 = %56.0;
  %64 = %61.1;
  (%62, %63, meta[relay.Constant][6] /* ty=Tensor[(330), float64] */, %64, %var_8673)
}

def @func_11578(%var_11545: Tensor[(6, 60), float32]) -> (Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(11, 5, 4), float32], Tensor[(54), int8], Tensor[(?, 12, 2), int8], Tensor[(?, 12, 2), int8], Tensor[(15, 12, 2), uint16], Tensor[(6, 60), float32], Tensor[(?, 12, 2), int8]) {
  %65 = @func_11029() /* ty=(Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */;
  %66 = cast(meta[relay.Constant][7] /* ty=Tensor[(54), int8] */, dtype="int8") /* ty=Tensor[(54), int8] */;
  %67 = reshape(%66, newshape=[54]) /* ty=Tensor[(54), int8] */;
  %68 = @func_8700(%67) /* ty=(Tensor[(11, 5, 4), float32], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(3, 9, 2), float32], Tensor[(54), int8]) */;
  %69 = @func_2773() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %70 = cast(%var_11545, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %71 = reshape(%70, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), float32] */;
  %72 = %65.0;
  %73 = @func_10961() /* ty=Tensor[(1, 12, 2), float64] */;
  %74 = %68.0;
  %75 = %69.0;
  %76 = @func_9100() /* ty=Tensor[(?, 12, 2), int8] */;
  %77 = @func_6624(%71) /* ty=Tensor[(15, 12, 2), uint16] */;
  %78 = @func_8934() /* ty=Tensor[(?, 12, 2), int8] */;
  (%72, %73, %74, meta[relay.Constant][7] /* ty=Tensor[(54), int8] */, %75, %76, %77, %var_11545, %78)
}

def @func_4336() -> (Tensor[(9, 13, 11), float32],) {
  %79 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 13, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 11), float32] */;
  %80 = cosh(%79) /* ty=Tensor[(9, 13, 11), float32] */;
  (%80,)
}

def @func_3660() -> Tensor[(?, 8, 12), int64] {
  %81 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 8, 12), float64] */;
  %82 = log2(%81) /* ty=Tensor[(1, 8, 12), float64] */;
  %83 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 8, 12), float64] */, dtype="int64") /* ty=Tensor[(1, 8, 12), int64] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%82, dtype="int64") /* ty=Tensor[(1, 8, 12), int64] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%85, %86) /* ty=Tensor[(?, 8, 12), int64] */
}

def @func_11451() -> Tensor[(5, 4, 10), float64] {
  %87 = cast(meta[relay.Constant][10] /* ty=Tensor[(5, 4, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 4, 10), float64] */;
  cos(%87) /* ty=Tensor[(5, 4, 10), float64] */
}

def @func_4756() -> Tensor[(1, 12, 2), float32] {
  %88 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %88.0
}

def @func_2149() -> (Tensor[(1, 12, 2), float64],) {
  %89 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %90 = %89.0;
  (%90,)
}

def @func_1472() -> Tensor[(1, 12, 2), float64] {
  %91 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %91.0
}

def @func_6322(%var_6289: Tensor[(2, 12, 2), uint64], %var_6299: Tensor[(16, 12, 2), float64]) -> (Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32], Tensor[(2, 12, 2), bool], Tensor[(16, 12, 2), float32]) {
  %92 = @func_5548() /* ty=(Tensor[(14, 12, 2), bool],) */;
  %93 = @func_5561() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %94 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %95 = @func_5002() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */;
  %96 = %95.0;
  %97 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 12, 2), int8] */, dtype="uint64") /* ty=Tensor[(1, 12, 2), uint64] */;
  %98 = shape_of(%96, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%96, dtype="uint64") /* ty=Tensor[(?, 12, 2), uint64] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %101 = bitwise_xor(%99, %100) /* ty=Tensor[(?, 12, 2), uint64] */;
  %102 = cast(%101, dtype="bool") /* ty=Tensor[(?, 12, 2), bool] */;
  %103 = cast(%var_6289, dtype="bool") /* ty=Tensor[(2, 12, 2), bool] */;
  %104 = @func_6133() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %105 = %104.0;
  %106 = cast(%105, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %107 = cast(%var_6299, dtype="float32") /* ty=Tensor[(16, 12, 2), float32] */;
  %108 = %92.0;
  %109 = %93.0;
  %110 = %94.0;
  %111 = greater_equal(%102, %103) /* ty=Tensor[(2, 12, 2), bool] */;
  %112 = floor_mod(%106, %107) /* ty=Tensor[(16, 12, 2), float32] */;
  (%108, %109, %110, %111, %112)
}

def @func_6683() -> (Tensor[(168), bool],) {
  %113 = @func_4729() /* ty=(Tensor[(168), bool],) */;
  %114 = %113.0;
  (%114,)
}

def @func_2920() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) {
  %115 = @func_2773() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %116 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
  %117 = @func_2683() /* ty=Tensor[(1, 12, 2), float64] */;
  %118 = %115.0;
  (%116, %117, %118)
}

def @func_4729() -> (Tensor[(168), bool],) {
  %119 = @func_3895() /* ty=(Tensor[(5, 12, 2), uint16], Tensor[(7, 12, 2), int32], Tensor[(168), bool]) */;
  %120 = %119.2;
  (%120,)
}

def @func_3895() -> (Tensor[(5, 12, 2), uint16], Tensor[(7, 12, 2), int32], Tensor[(168), bool]) {
  %121 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %122 = %121.0;
  %123 = cast(%122, dtype="uint16") /* ty=Tensor[(1, 12, 2), uint16] */;
  %124 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 12, 2), float32] */, dtype="uint16") /* ty=Tensor[(5, 12, 2), uint16] */;
  %125 = cast(meta[relay.Constant][13] /* ty=Tensor[(168), bool] */, dtype="bool") /* ty=Tensor[(168), bool] */;
  %126 = reshape(%125, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), bool] */;
  %127 = @func_2275(%126) /* ty=(Tensor[(7, 12, 2), int32],) */;
  %128 = bitwise_xor(%123, %124) /* ty=Tensor[(5, 12, 2), uint16] */;
  %129 = %127.0;
  (%128, %129, meta[relay.Constant][13] /* ty=Tensor[(168), bool] */)
}

def @func_7114(%var_7099: Tensor[(16, 12, 2), float64]) -> (Tensor[(16, 12, 2), int16], Tensor[(1, 12, 2), float32]) {
  %130 = @func_5106() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %131 = %130.0;
  %132 = cast(%131, dtype="int16") /* ty=Tensor[(1, 12, 2), int16] */;
  %133 = cast(%var_7099, dtype="int16") /* ty=Tensor[(16, 12, 2), int16] */;
  %134 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %135 = multiply(%132, %133) /* ty=Tensor[(16, 12, 2), int16] */;
  %136 = %134.0;
  (%135, %136)
}

def @func_2342(%var_2298: Tensor[(3, 9, 2), int8], %var_2299: Tensor[(3, 9, 2), int8]) -> (Tensor[(3, 9, 2), bool], Tensor[(3, 9, 2), float32]) {
  %137 = cast(%var_2299, dtype="bool") /* ty=Tensor[(3, 9, 2), bool] */;
  %138 = shape_of(%var_2298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%var_2298, dtype="bool") /* ty=Tensor[(3, 9, 2), bool] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %141 = cast(%var_2298, dtype="float32") /* ty=Tensor[(3, 9, 2), float32] */;
  %142 = less(%139, %140) /* ty=Tensor[(3, 9, 2), bool] */;
  %143 = acosh(%141) /* ty=Tensor[(3, 9, 2), float32] */;
  (%142, %143)
}

def @func_2773() -> (Tensor[(?, 12, 2), int8],) {
  %144 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %145 = %144.0;
  (%145,)
}

def @func_7672(%var_7639: Tensor[(7, 12, 2), int8], %var_7650: Tensor[(7, 12, 2), uint16]) -> (Tensor[(336), int32], Tensor[(10, 144), int8], Tensor[(7, 12, 2), uint32]) {
  %146 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 144), int8] */, dtype="int8") /* ty=Tensor[(10, 144), int8] */;
  %147 = reshape(%146, newshape=[360, 4]) /* ty=Tensor[(360, 4), int8] */;
  %148 = @func_2078(%147) /* ty=(Tensor[(336), int32], Tensor[(?, 12, 2), int32], Tensor[(1, 12, 2), float32], Tensor[(360, 4), int8], Tensor[(3, 12, 2), float32], Tensor[(6, 12), float64]) */;
  %149 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %150 = %149.0;
  %151 = cast(%150, dtype="uint16") /* ty=Tensor[(?, 12, 2), uint16] */;
  %152 = cast(%var_7639, dtype="uint16") /* ty=Tensor[(7, 12, 2), uint16] */;
  %153 = left_shift(%151, %152) /* ty=Tensor[(7, 12, 2), uint16] */;
  %154 = cast(%var_7650, dtype="uint32") /* ty=Tensor[(7, 12, 2), uint32] */;
  %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%153, dtype="uint32") /* ty=Tensor[(7, 12, 2), uint32] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %158 = %148.0;
  %159 = bitwise_and(%156, %157) /* ty=Tensor[(7, 12, 2), uint32] */;
  (%158, meta[relay.Constant][14] /* ty=Tensor[(10, 144), int8] */, %159)
}

def @func_4318(%var_4308: Tensor[(16, 12, 2), float64]) -> (Tensor[(16, 12, 2), int64], Tensor[(336), int32]) {
  %160 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  %161 = cast(%160, dtype="int64") /* ty=Tensor[(1, 12, 2), int64] */;
  %162 = cast(%var_4308, dtype="int64") /* ty=Tensor[(16, 12, 2), int64] */;
  %163 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %164 = maximum(%161, %162) /* ty=Tensor[(16, 12, 2), int64] */;
  %165 = %163.2;
  (%164, %165)
}

def @func_6456(%var_6371: Tensor[(10, 12, 2), int8], %var_6434: Tensor[(10, 12, 2), uint64], %var_6451: Tensor[(10, 12, 2), float64]) -> (Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(10, 12, 2), float32], Tensor[(10, 12, 2), bool]) {
  %166 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %167 = @func_5325() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(336), int32]) */;
  %168 = %167.0;
  %169 = cast(%168, dtype="bool") /* ty=Tensor[(?, 12, 2), bool] */;
  %170 = cast(%var_6371, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
  %171 = logical_and(%169, %170) /* ty=Tensor[(10, 12, 2), bool] */;
  %172 = cast(%171, dtype="float64") /* ty=Tensor[(10, 12, 2), float64] */;
  %173 = asin(%172) /* ty=Tensor[(10, 12, 2), float64] */;
  %174 = cast(%173, dtype="float32") /* ty=Tensor[(10, 12, 2), float32] */;
  %175 = cast(%168, dtype="float32") /* ty=Tensor[(?, 12, 2), float32] */;
  %176 = multiply(%174, %175) /* ty=Tensor[(10, 12, 2), float32] */;
  %177 = cast(%176, dtype="uint64") /* ty=Tensor[(10, 12, 2), uint64] */;
  %178 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%173, dtype="uint64") /* ty=Tensor[(10, 12, 2), uint64] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %181 = bitwise_xor(%179, %180) /* ty=Tensor[(10, 12, 2), uint64] */;
  %182 = cast(%var_6434, dtype="float32") /* ty=Tensor[(10, 12, 2), float32] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%181, dtype="float32") /* ty=Tensor[(10, 12, 2), float32] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %186 = cast(%var_6451, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
  %187 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%173, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %190 = %166.0;
  %191 = @func_2683() /* ty=Tensor[(1, 12, 2), float64] */;
  %192 = subtract(%184, %185) /* ty=Tensor[(10, 12, 2), float32] */;
  %193 = greater(%188, %189) /* ty=Tensor[(10, 12, 2), bool] */;
  (%190, %191, %192, %193)
}

def @func_5468() -> Tensor[(1, 12, 2), float64] {
  %194 = @func_2361() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %194.0
}

def @func_6624(%var_6611: Tensor[(15, 12, 2), float32]) -> Tensor[(15, 12, 2), uint16] {
  %195 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %196 = %195.0;
  %197 = cast(%196, dtype="uint16") /* ty=Tensor[(1, 12, 2), uint16] */;
  %198 = cast(%var_6611, dtype="uint16") /* ty=Tensor[(15, 12, 2), uint16] */;
  bitwise_or(%197, %198) /* ty=Tensor[(15, 12, 2), uint16] */
}

def @func_7791() -> Tensor[(1, 12, 2), float64] {
  @func_517() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_8294(%var_8281: Tensor[(156, 2), float32]) -> (Tensor[(1, 12, 2), float32], Tensor[(660), float32], Tensor[(156, 2), float32], Tensor[(1, 72), float64], Tensor[(72), float64]) {
  %199 = cast(%var_8281, dtype="float32") /* ty=Tensor[(156, 2), float32] */;
  %200 = reshape(%199, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), float32] */;
  %201 = @func_884(%200) /* ty=(Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) */;
  %202 = cast(meta[relay.Constant][15] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %203 = reshape(%202, newshape=[1, 72]) /* ty=Tensor[(1, 72), float64] */;
  %204 = @func_2135(%203) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(1, 72), float64]) */;
  %205 = @func_4804() /* ty=Tensor[(1, 12, 2), float32] */;
  %206 = %201.4;
  %207 = %204.2;
  (%205, %206, %var_8281, %207, meta[relay.Constant][15] /* ty=Tensor[(72), float64] */)
}

def @func_9688() -> (Tensor[(1, 12, 2), float64],) {
  %208 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %209 = %208.0;
  (%209,)
}

def @func_8986(%var_8947: Tensor[(36, 2), float64], %var_8971: Tensor[(36, 2), float64]) -> (Tensor[(?, 12, 2), int8], Tensor[(3, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(36, 2), float64], Tensor[(36, 2), float32]) {
  %210 = @func_8908() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %211 = cast(%var_8947, dtype="float64") /* ty=Tensor[(36, 2), float64] */;
  %212 = reshape(%211, newshape=[3, 12, 2]) /* ty=Tensor[(3, 12, 2), float64] */;
  %213 = @func_810(%212) /* ty=(Tensor[(3, 12, 2), float32],) */;
  %214 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %215 = cast(%var_8971, dtype="float64") /* ty=Tensor[(36, 2), float64] */;
  %216 = shape_of(%var_8947, dtype="int32") /* ty=Tensor[(2), int32] */;
  %217 = cast(%var_8947, dtype="float64") /* ty=Tensor[(36, 2), float64] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %219 = cast(%var_8971, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %220 = %210.0;
  %221 = %213.0;
  %222 = %214.0;
  %223 = multiply(%217, %218) /* ty=Tensor[(36, 2), float64] */;
  %224 = acosh(%219) /* ty=Tensor[(36, 2), float32] */;
  (%220, %221, %222, %223, %224)
}

def @func_11969() -> (Tensor[(5, 4, 10), float64],) {
  %225 = @func_11451() /* ty=Tensor[(5, 4, 10), float64] */;
  (%225,)
}

def @func_4128() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(1440), int8], Tensor[(11, 12, 2), bool], Tensor[(264), float32]) {
  %226 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %227 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %228 = cast(meta[relay.Constant][16] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %229 = reshape(%228, newshape=[360, 4]) /* ty=Tensor[(360, 4), int8] */;
  %230 = @func_2078(%229) /* ty=(Tensor[(336), int32], Tensor[(?, 12, 2), int32], Tensor[(1, 12, 2), float32], Tensor[(360, 4), int8], Tensor[(3, 12, 2), float32], Tensor[(6, 12), float64]) */;
  %231 = cast(meta[relay.Constant][17] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %232 = reshape(%231, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float32] */;
  %233 = @func_3626(%232) /* ty=(Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(11, 12, 2), bool]) */;
  %234 = %226.0;
  %235 = %227.0;
  %236 = %230.4;
  %237 = %233.2;
  (%234, %235, %236, meta[relay.Constant][16] /* ty=Tensor[(1440), int8] */, %237, meta[relay.Constant][17] /* ty=Tensor[(264), float32] */)
}

def @func_3449() -> (Tensor[(1, 12, 2), float32],) {
  %238 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %239 = %238.0;
  (%239,)
}

def @func_6883() -> (Tensor[(?, 12, 2), float32],) {
  %240 = @func_5356() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32]) */;
  %241 = %240.1;
  (%241,)
}

def @func_8101() -> (Tensor[(?, 12, 2), bool],) {
  %242 = @func_6789() /* ty=Tensor[(?, 12, 2), bool] */;
  (%242,)
}

def @func_8838() -> Tensor[(?, 12, 2), int8] {
  %243 = @func_5934() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
  %243.1
}

def @func_8934() -> Tensor[(?, 12, 2), int8] {
  %244 = @func_8908() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %244.0
}

def @func_4868() -> (Tensor[(1, 12, 2), float64],) {
  %245 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  (%245,)
}

def @func_6193() -> Tensor[(9, 13, 11), float32] {
  %246 = @func_4336() /* ty=(Tensor[(9, 13, 11), float32],) */;
  %246.0
}

def @func_9880() -> Tensor[(1, 12, 2), float64] {
  %247 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %247.0
}

def @func_884(%var_827: Tensor[(13, 8, 3), float32]) -> (Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) {
  %248 = cast(%var_827, dtype="float32") /* ty=Tensor[(13, 8, 3), float32] */;
  %249 = cast(meta[relay.Constant][18] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
  %250 = cast(meta[relay.Constant][18] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
  %251 = reshape(%249, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
  %252 = reshape(%250, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
  %253 = @func_237(%251, %252) /* ty=(Tensor[(14, 12, 2), bool],) */;
  %254 = cast(meta[relay.Constant][19] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %255 = reshape(%254, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), float32] */;
  %256 = @func_102(%255) /* ty=(Tensor[(12, 11, 5), bool],) */;
  %257 = cosh(%248) /* ty=Tensor[(13, 8, 3), float32] */;
  %258 = %253.0;
  %259 = %256.0;
  (%257, %258, meta[relay.Constant][18] /* ty=Tensor[(336), int32] */, %259, meta[relay.Constant][19] /* ty=Tensor[(660), float32] */)
}

def @func_10068() -> Tensor[(1, 12, 2), float64] {
  @func_7791() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_11276() -> Tensor[(1, 12, 2), float64] {
  @func_10961() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_10601() -> Tensor[(?, 8, 12), int64] {
  %260 = @func_6831() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(?, 8, 12), int64]) */;
  %260.1
}

def @func_8728(%var_8706: Tensor[(5, 14, 11), float32]) -> Tensor[(5, 14, 11), bool] {
  %261 = cast(%var_8706, dtype="float32") /* ty=Tensor[(5, 14, 11), float32] */;
  %262 = erf(%261) /* ty=Tensor[(5, 14, 11), float32] */;
  %263 = cast(%var_8706, dtype="int64") /* ty=Tensor[(5, 14, 11), int64] */;
  %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%262, dtype="int64") /* ty=Tensor[(5, 14, 11), int64] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %267 = left_shift(%265, %266) /* ty=Tensor[(5, 14, 11), int64] */;
  %268 = cast(%267, dtype="bool") /* ty=Tensor[(5, 14, 11), bool] */;
  %269 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%262, dtype="bool") /* ty=Tensor[(5, 14, 11), bool] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%270, %271) /* ty=Tensor[(5, 14, 11), bool] */
}

def @func_585() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %272 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %273 = %272.0;
  %274 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  (%273, %274)
}

def @func_5711(%var_5703: Tensor[(10, 9, 11), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(?, 12, 2), bool]) {
  %275 = cast(%var_5703, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
  %276 = log(%275) /* ty=Tensor[(10, 9, 11), float64] */;
  %277 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
  (%276, %277)
}

def @func_7975() -> (Tensor[(?, 12, 2), bool],) {
  %278 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
  (%278,)
}

def @func_7263() -> Tensor[(1, 12, 2), float64] {
  @func_5468() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_9974() -> (Tensor[(1, 12, 2), float64], Tensor[(990), float64]) {
  %279 = @func_5026() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(12, 11, 5), bool], Tensor[(110, 6), float32]) */;
  %280 = @func_7405() /* ty=(Tensor[(1, 12, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(990), float64]) */;
  %281 = %279.0;
  %282 = %280.2;
  (%281, %282)
}

def @func_11354() -> (Tensor[(9, 13, 11), float32], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  %283 = @func_9370() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(9, 13, 11), float32], Tensor[(?, 12, 2), uint16]) */;
  %284 = @func_8193() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %285 = @func_10553() /* ty=(Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) */;
  %286 = %283.1;
  %287 = %284.0;
  %288 = @func_10397() /* ty=Tensor[(?, 12, 2), bool] */;
  %289 = %285.1;
  (%286, %287, %288, %289)
}

def @func_1067() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) {
  %290 = @func_958() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %291 = %290.0;
  %292 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  %293 = cast(%292, dtype="int8") /* ty=Tensor[(1, 12, 2), int8] */;
  %294 = shape_of(%291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(%291, dtype="int8") /* ty=Tensor[(1, 12, 2), int8] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %297 = cast(%292, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %298 = right_shift(%295, %296) /* ty=Tensor[(?, 12, 2), int8] */;
  %299 = atanh(%297) /* ty=Tensor[(1, 12, 2), float32] */;
  (%298, %299)
}

def @func_8470() -> (Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  %300 = @func_4447() /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %301 = @func_8253() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %302 = %300.0;
  %303 = %301.0;
  (%302, %303)
}

def @func_3356() -> Tensor[(1, 12, 2), float64] {
  %304 = @func_2920() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
  %304.1
}

def @func_8601() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), uint16], Tensor[(156, 2), float32], Tensor[(1, 12, 2), float32]) {
  %305 = @func_4447() /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %306 = cast(meta[relay.Constant][20] /* ty=Tensor[(156, 2), float32] */, dtype="float32") /* ty=Tensor[(156, 2), float32] */;
  %307 = reshape(%306, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %308 = @func_1695(%307) /* ty=(Tensor[(14, 12, 2), bool], Tensor[(9, 10, 16), int8], Tensor[(1440), int8], Tensor[(?, 12, 2), int8], Tensor[(336), int32], Tensor[(312), float32], Tensor[(?, 12, 2), uint16], Tensor[(1, 12, 2), float64]) */;
  %309 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %310 = %305.2;
  %311 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
  %312 = %308.6;
  %313 = %309.0;
  (%310, %311, %312, meta[relay.Constant][20] /* ty=Tensor[(156, 2), float32] */, %313)
}

def @func_2209(%var_2169: Tensor[(14, 12, 2), float64], %var_2180: Tensor[(330), float64]) -> (Tensor[(14, 12, 2), int8], Tensor[(1440), int8], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(1, 12, 2), float64], Tensor[(336), int32], Tensor[(312), float32]) {
  %314 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %315 = %314.0;
  %316 = cast(%315, dtype="int8") /* ty=Tensor[(1, 12, 2), int8] */;
  %317 = cast(%var_2169, dtype="int8") /* ty=Tensor[(14, 12, 2), int8] */;
  %318 = cast(%var_2180, dtype="float64") /* ty=Tensor[(330), float64] */;
  %319 = reshape(%318, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float64] */;
  %320 = @func_42(%319) /* ty=(Tensor[(11, 6, 5), float64],) */;
  %321 = cast(meta[relay.Constant][21] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %322 = cast(meta[relay.Constant][21] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %323 = reshape(%321, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int8] */;
  %324 = reshape(%322, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int8] */;
  %325 = @func_729(%323, %324) /* ty=(Tensor[(9, 10, 16), int8], Tensor[(1, 12, 2), float64]) */;
  %326 = %325.1;
  %327 = cast(%326, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
  %328 = cast(meta[relay.Constant][22] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %329 = reshape(%328, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), float32] */;
  %330 = @func_884(%329) /* ty=(Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) */;
  %331 = bitwise_or(%316, %317) /* ty=Tensor[(14, 12, 2), int8] */;
  %332 = %320.0;
  %333 = log2(%327) /* ty=Tensor[(1, 12, 2), float64] */;
  %334 = %330.2;
  (%331, meta[relay.Constant][21] /* ty=Tensor[(1440), int8] */, %332, %var_2180, %333, %334, meta[relay.Constant][22] /* ty=Tensor[(312), float32] */)
}

def @func_9230() -> (Tensor[(?, 12, 2), bool],) {
  %335 = @func_7723() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %336 = %335.0;
  (%336,)
}

def @func_3221(%var_3188: Tensor[(12, 12, 8), int64]) -> (Tensor[(12, 12, 8), int64], Tensor[(336), int32]) {
  %337 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 12, 1), int64] */, dtype="int64") /* ty=Tensor[(12, 12, 1), int64] */;
  %338 = cast(%var_3188, dtype="int64") /* ty=Tensor[(12, 12, 8), int64] */;
  %339 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %340 = bitwise_xor(%337, %338) /* ty=Tensor[(12, 12, 8), int64] */;
  %341 = %339.2;
  (%340, %341)
}

def @func_4804() -> Tensor[(1, 12, 2), float32] {
  %342 = @func_2577() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %342.0
}

def @func_4782(%var_4768: Tensor[(9, 4, 16), int32]) -> Tensor[(9, 4, 16), bool] {
  %343 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 4, 16), int32] */, dtype="int32") /* ty=Tensor[(9, 4, 16), int32] */;
  %344 = shape_of(%var_4768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %345 = cast(%var_4768, dtype="int32") /* ty=Tensor[(9, 4, 16), int32] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %347 = bitwise_and(%345, %346) /* ty=Tensor[(9, 4, 16), int32] */;
  %348 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 4, 16), int32] */, dtype="bool") /* ty=Tensor[(9, 4, 16), bool] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="bool") /* ty=Tensor[(9, 4, 16), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%350, %351) /* ty=Tensor[(9, 4, 16), bool] */
}

def @func_8193() -> (Tensor[(1, 12, 2), float64],) {
  %352 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  (%352,)
}

def @func_10432(%var_10424: Tensor[(12, 12, 2), float64]) -> (Tensor[(12, 12, 2), float32],) {
  %353 = @func_8536() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %354 = %353.0;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %356 = cast(%var_10424, dtype="float32") /* ty=Tensor[(12, 12, 2), float32] */;
  %357 = divide(%355, %356) /* ty=Tensor[(12, 12, 2), float32] */;
  (%357,)
}

def @func_10206() -> Tensor[(1, 12, 2), float64] {
  %358 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %358.1
}

def @func_5561() -> (Tensor[(1, 12, 2), float64],) {
  %359 = @func_5106() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %360 = %359.0;
  (%360,)
}

def @func_102(%var_94: Tensor[(12, 11, 5), float32]) -> (Tensor[(12, 11, 5), bool],) {
  %361 = cast(%var_94, dtype="float32") /* ty=Tensor[(12, 11, 5), float32] */;
  %362 = sinh(%361) /* ty=Tensor[(12, 11, 5), float32] */;
  %363 = cast(%var_94, dtype="bool") /* ty=Tensor[(12, 11, 5), bool] */;
  %364 = shape_of(%362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%362, dtype="bool") /* ty=Tensor[(12, 11, 5), bool] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %367 = equal(%365, %366) /* ty=Tensor[(12, 11, 5), bool] */;
  (%367,)
}

def @func_517() -> Tensor[(1, 12, 2), float64] {
  %368 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %368.0
}

def @func_6133() -> (Tensor[(1, 12, 2), float64],) {
  %369 = @func_958() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %370 = %369.0;
  %371 = cast(%370, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
  %372 = atan(%371) /* ty=Tensor[(1, 12, 2), float64] */;
  (%372,)
}

def @func_4005(%var_3971: Tensor[(3, 12, 2), int8]) -> (Tensor[(3, 12, 2), uint8], Tensor[(1, 12, 2), float64]) {
  %373 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %374 = %373.0;
  %375 = cast(%374, dtype="uint8") /* ty=Tensor[(?, 12, 2), uint8] */;
  %376 = cast(%var_3971, dtype="uint8") /* ty=Tensor[(3, 12, 2), uint8] */;
  %377 = @func_2149() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %378 = add(%375, %376) /* ty=Tensor[(3, 12, 2), uint8] */;
  %379 = %377.0;
  (%378, %379)
}

def @func_3715() -> Tensor[(1, 12, 2), float64] {
  @func_3356() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_3419() -> (Tensor[(?, 12, 2), int8],) {
  %380 = @func_2773() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %381 = %380.0;
  (%381,)
}

def @func_7123() -> (Tensor[(1, 12, 2), float64],) {
  %382 = @func_5468() /* ty=Tensor[(1, 12, 2), float64] */;
  (%382,)
}

def @func_1127() -> (Tensor[(1, 12, 2), float32],) {
  %383 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %384 = %383.0;
  %385 = cast(%384, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %386 = tan(%385) /* ty=Tensor[(1, 12, 2), float32] */;
  (%386,)
}

def @func_8206() -> Tensor[(1, 12, 2), float64] {
  %387 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %387.1
}

def @main(%var_12137: Tensor[(110, 6), float32]) -> (Tensor[(110, 6), bool],) {
  %388 = @func_5026() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(12, 11, 5), bool], Tensor[(110, 6), float32]) */;
  %389 = %388.2;
  %390 = cast(%var_12137, dtype="bool") /* ty=Tensor[(110, 6), bool] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(2), int32] */;
  %392 = cast(%389, dtype="bool") /* ty=Tensor[(110, 6), bool] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %394 = logical_and(%392, %393) /* ty=Tensor[(110, 6), bool] */;
  (%394,)
}

def @func_5002() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
  %395 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %396 = %395.0;
  %397 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
  (%396, %397)
}

def @func_5194(%var_5175: Tensor[(12, 4, 5), float32], %var_5181: Tensor[(12, 4, 5), float32]) -> (Tensor[(12, 4, 5), bool], Tensor[(4, 13, 3), float64], Tensor[(156), float64]) {
  %398 = cast(%var_5175, dtype="float32") /* ty=Tensor[(12, 4, 5), float32] */;
  %399 = atanh(%398) /* ty=Tensor[(12, 4, 5), float32] */;
  %400 = cast(%var_5181, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
  %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%399, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %404 = cast(meta[relay.Constant][25] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %405 = reshape(%404, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float64] */;
  %406 = @func_472(%405) /* ty=(Tensor[(4, 13, 3), float64],) */;
  %407 = not_equal(%402, %403) /* ty=Tensor[(12, 4, 5), bool] */;
  %408 = %406.0;
  (%407, %408, meta[relay.Constant][25] /* ty=Tensor[(156), float64] */)
}

def @func_4241(%var_4238: Tensor[(96), float32]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(96), float32]) {
  %409 = cast(%var_4238, dtype="float32") /* ty=Tensor[(96), float32] */;
  %410 = cast(%var_4238, dtype="float32") /* ty=Tensor[(96), float32] */;
  %411 = cast(%var_4238, dtype="float32") /* ty=Tensor[(96), float32] */;
  %412 = reshape(%409, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %413 = reshape(%410, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %414 = reshape(%411, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %415 = @func_3096(%412, %413, %414) /* ty=(Tensor[(8, 3, 4), float32], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(1, 12, 2), float64]) */;
  %416 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
  %417 = %415.3;
  (%416, %417, %var_4238)
}

def @func_8536() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %418 = @func_7563() /* ty=(Tensor[(156, 3), int32], Tensor[(156, 3), uint64], Tensor[(1, 12, 2), float64]) */;
  %419 = @func_7123() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %420 = %418.2;
  %421 = %419.0;
  (%420, %421)
}

def @func_8032(%var_8027: Tensor[(5, 10, 14), int32], %var_8028: Tensor[(5, 10, 14), int32]) -> (Tensor[(5, 10, 14), int32],) {
  %422 = cast(%var_8028, dtype="int32") /* ty=Tensor[(5, 10, 14), int32] */;
  %423 = shape_of(%var_8027, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%var_8027, dtype="int32") /* ty=Tensor[(5, 10, 14), int32] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %426 = add(%424, %425) /* ty=Tensor[(5, 10, 14), int32] */;
  (%426,)
}

def @func_10730(%var_10723: Tensor[(5, 14, 2), float32]) -> (Tensor[(5, 14, 2), float32],) {
  %427 = cast(%var_10723, dtype="float32") /* ty=Tensor[(5, 14, 2), float32] */;
  %428 = sqrt(%427) /* ty=Tensor[(5, 14, 2), float32] */;
  (%428,)
}

def @func_7243() -> (Tensor[(1, 12, 2), float64], Tensor[(156, 1), float64], Tensor[(1, 12, 2), float64]) {
  %429 = @func_958() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %430 = @func_4904() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), int8], Tensor[(1152), int64], Tensor[(156, 1), float64]) */;
  %431 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %432 = %429.0;
  %433 = %430.4;
  %434 = %431.0;
  (%432, %433, %434)
}

def @func_2078(%var_2059: Tensor[(360, 4), int8]) -> (Tensor[(336), int32], Tensor[(?, 12, 2), int32], Tensor[(1, 12, 2), float32], Tensor[(360, 4), int8], Tensor[(3, 12, 2), float32], Tensor[(6, 12), float64]) {
  %435 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %436 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %437 = %436.1;
  %438 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
  %439 = cast(%438, dtype="int32") /* ty=Tensor[(?, 12, 2), int32] */;
  %440 = shape_of(%437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%437, dtype="int32") /* ty=Tensor[(1, 12, 2), int32] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %443 = cast(%var_2059, dtype="int8") /* ty=Tensor[(360, 4), int8] */;
  %444 = reshape(%443, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %445 = @func_1327(%444) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) */;
  %446 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %447 = reshape(%446, newshape=[3, 12, 2]) /* ty=Tensor[(3, 12, 2), float64] */;
  %448 = @func_810(%447) /* ty=(Tensor[(3, 12, 2), float32],) */;
  %449 = %435.2;
  %450 = add(%441, %442) /* ty=Tensor[(?, 12, 2), int32] */;
  %451 = %445.0;
  %452 = %448.0;
  (%449, %450, %451, %var_2059, %452, meta[relay.Constant][26] /* ty=Tensor[(6, 12), float64] */)
}

def @func_472(%var_468: Tensor[(4, 13, 3), float64]) -> (Tensor[(4, 13, 3), float64],) {
  %453 = cast(%var_468, dtype="float64") /* ty=Tensor[(4, 13, 3), float64] */;
  %454 = log(%453) /* ty=Tensor[(4, 13, 3), float64] */;
  (%454,)
}

def @func_9558() -> Tensor[(?, 12, 2), bool] {
  %455 = @func_7835() /* ty=(Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) */;
  %455.0
}

def @func_444() -> (Tensor[(1, 12, 2), float64],) {
  %456 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 12, 2), float64] */, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
  %457 = asin(%456) /* ty=Tensor[(1, 12, 2), float64] */;
  (%457,)
}

def @func_5026() -> (Tensor[(1, 12, 2), float64], Tensor[(12, 11, 5), bool], Tensor[(110, 6), float32]) {
  %458 = cast(meta[relay.Constant][28] /* ty=Tensor[(110, 6), float32] */, dtype="float32") /* ty=Tensor[(110, 6), float32] */;
  %459 = reshape(%458, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), float32] */;
  %460 = @func_102(%459) /* ty=(Tensor[(12, 11, 5), bool],) */;
  %461 = @func_3715() /* ty=Tensor[(1, 12, 2), float64] */;
  %462 = %460.0;
  (%461, %462, meta[relay.Constant][28] /* ty=Tensor[(110, 6), float32] */)
}

def @func_1695(%var_1663: Tensor[(312), float32]) -> (Tensor[(14, 12, 2), bool], Tensor[(9, 10, 16), int8], Tensor[(1440), int8], Tensor[(?, 12, 2), int8], Tensor[(336), int32], Tensor[(312), float32], Tensor[(?, 12, 2), uint16], Tensor[(1, 12, 2), float64]) {
  %463 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %464 = cast(meta[relay.Constant][29] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %465 = reshape(%464, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %466 = @func_1327(%465) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) */;
  %467 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %468 = cast(%var_1663, dtype="float32") /* ty=Tensor[(312), float32] */;
  %469 = reshape(%468, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), float32] */;
  %470 = @func_884(%469) /* ty=(Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) */;
  %471 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %472 = %471.1;
  %473 = cast(%472, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %474 = erf(%473) /* ty=Tensor[(1, 12, 2), float32] */;
  %475 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %476 = %475.0;
  %477 = cast(%476, dtype="uint16") /* ty=Tensor[(1, 12, 2), uint16] */;
  %478 = shape_of(%474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%474, dtype="uint16") /* ty=Tensor[(1, 12, 2), uint16] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %481 = @func_1537() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %482 = %463.1;
  %483 = %466.1;
  %484 = %467.0;
  %485 = %470.2;
  %486 = left_shift(%479, %480) /* ty=Tensor[(?, 12, 2), uint16] */;
  %487 = %481.0;
  (%482, %483, meta[relay.Constant][29] /* ty=Tensor[(1440), int8] */, %484, %485, %var_1663, %486, %487)
}

def @func_1935(%var_1854: Tensor[(156), float64], %var_1886: Tensor[(330), float64], %var_1933: Tensor[(10, 144), int8]) -> (Tensor[(4, 13, 3), float64], Tensor[(156), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), float64], Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(10, 144), int8]) {
  %488 = cast(%var_1854, dtype="float64") /* ty=Tensor[(156), float64] */;
  %489 = reshape(%488, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float64] */;
  %490 = @func_472(%489) /* ty=(Tensor[(4, 13, 3), float64],) */;
  %491 = cast(%var_1886, dtype="float64") /* ty=Tensor[(330), float64] */;
  %492 = reshape(%491, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float64] */;
  %493 = @func_42(%492) /* ty=(Tensor[(11, 6, 5), float64],) */;
  %494 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %495 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %496 = cast(%var_1854, dtype="float64") /* ty=Tensor[(156), float64] */;
  %497 = reshape(%496, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float64] */;
  %498 = @func_472(%497) /* ty=(Tensor[(4, 13, 3), float64],) */;
  %499 = @func_1537() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %500 = %499.0;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
  %502 = rsqrt(%501) /* ty=Tensor[(1, 12, 2), float64] */;
  %503 = cast(%500, dtype="int8") /* ty=Tensor[(1, 12, 2), int8] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%502, dtype="int8") /* ty=Tensor[(1, 12, 2), int8] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %507 = maximum(%505, %506) /* ty=Tensor[(?, 12, 2), int8] */;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(?, 12, 2), float64] */;
  %509 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %510 = cast(%var_1933, dtype="int8") /* ty=Tensor[(10, 144), int8] */;
  %511 = reshape(%510, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %512 = @func_1327(%511) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) */;
  %513 = %490.0;
  %514 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
  %515 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  %516 = %493.0;
  %517 = %494.1;
  %518 = %495.0;
  %519 = %498.0;
  %520 = sqrt(%508) /* ty=Tensor[(?, 12, 2), float64] */;
  %521 = %509.0;
  %522 = %512.1;
  (%513, %var_1854, %514, %515, %516, %var_1886, %517, %518, %519, %520, %521, %522, %var_1933)
}

def @func_6979(%var_6961: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), uint8], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) {
  %523 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
  %524 = cast(%523, dtype="uint8") /* ty=Tensor[(1, 12, 2), uint8] */;
  %525 = cast(%var_6961, dtype="uint8") /* ty=Tensor[(5, 12, 2), uint8] */;
  %526 = cast(meta[relay.Constant][30] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %527 = reshape(%526, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %528 = @func_2824(%527) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) */;
  %529 = maximum(%524, %525) /* ty=Tensor[(5, 12, 2), uint8] */;
  %530 = %528.2;
  (%529, %530, meta[relay.Constant][30] /* ty=Tensor[(72), float64] */)
}

def @func_9445() -> (Tensor[(9, 13, 11), float32],) {
  %531 = @func_4336() /* ty=(Tensor[(9, 13, 11), float32],) */;
  %532 = %531.0;
  (%532,)
}

def @func_7174() -> Tensor[(1, 12, 2), float64] {
  %533 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %533.0
}

def @func_7835() -> (Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  %534 = @func_7723() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %535 = %534.0;
  %536 = @func_7174() /* ty=Tensor[(1, 12, 2), float64] */;
  (%535, %536)
}

def @func_1592() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %537 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %538 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  %539 = %537.0;
  (%538, %539)
}

def @func_10372(%var_10361: Tensor[(10, 12, 2), float32]) -> Tensor[(10, 12, 2), bool] {
  %540 = @func_8601() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), uint16], Tensor[(156, 2), float32], Tensor[(1, 12, 2), float32]) */;
  %541 = %540.4;
  %542 = cast(%541, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %543 = cast(%var_10361, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
  equal(%542, %543) /* ty=Tensor[(10, 12, 2), bool] */
}

def @func_741() -> (Tensor[(1, 12, 2), float64],) {
  %544 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  (%544,)
}

def @func_10585(%var_10581: Tensor[(384, 1), float64]) -> (Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(48, 1), uint64], Tensor[(384, 1), float64]) {
  %545 = @func_6133() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %546 = cast(meta[relay.Constant][31] /* ty=Tensor[(48, 1), uint64] */, dtype="uint64") /* ty=Tensor[(48, 1), uint64] */;
  %547 = cast(%var_10581, dtype="float64") /* ty=Tensor[(384, 1), float64] */;
  %548 = reshape(%546, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), uint64] */;
  %549 = reshape(%547, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), float64] */;
  %550 = @func_6322(%548, %549) /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32], Tensor[(2, 12, 2), bool], Tensor[(16, 12, 2), float32]) */;
  %551 = %545.0;
  %552 = %550.0;
  (%551, %552, meta[relay.Constant][31] /* ty=Tensor[(48, 1), uint64] */, %var_10581)
}

def @func_9312() -> (Tensor[(10, 9, 11), float64],) {
  %553 = @func_7405() /* ty=(Tensor[(1, 12, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(990), float64]) */;
  %554 = %553.1;
  (%554,)
}

def @func_10231() -> (Tensor[(1, 12, 2), float32],) {
  %555 = @func_7292() /* ty=Tensor[(1, 12, 2), float32] */;
  (%555,)
}

def @func_2577() -> (Tensor[(1, 12, 2), float32],) {
  %556 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %557 = %556.1;
  (%557,)
}

def @func_2449(%var_2409: Tensor[(156, 1), float64], %var_2444: Tensor[(14, 12, 2), bool]) -> (Tensor[(1, 12, 2), float32], Tensor[(4, 13, 3), float64], Tensor[(156, 1), float64], Tensor[(14, 12, 2), bool]) {
  %558 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %559 = cast(%var_2409, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %560 = reshape(%559, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float64] */;
  %561 = @func_472(%560) /* ty=(Tensor[(4, 13, 3), float64],) */;
  %562 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
  %563 = cast(%562, dtype="bool") /* ty=Tensor[(?, 12, 2), bool] */;
  %564 = cast(%var_2444, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
  %565 = %558.1;
  %566 = %561.0;
  %567 = greater_equal(%563, %564) /* ty=Tensor[(14, 12, 2), bool] */;
  (%565, %566, %var_2409, %567)
}

def @func_42(%var_31: Tensor[(11, 6, 5), float64]) -> (Tensor[(11, 6, 5), float64],) {
  %568 = cast(%var_31, dtype="float64") /* ty=Tensor[(11, 6, 5), float64] */;
  %569 = tan(%568) /* ty=Tensor[(11, 6, 5), float64] */;
  (%569,)
}

def @func_5106() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %570 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %571 = @func_4447() /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %572 = %570.1;
  %573 = %571.2;
  (%572, %573)
}

def @func_6659() -> (Tensor[(1, 12, 2), float32],) {
  %574 = @func_4756() /* ty=Tensor[(1, 12, 2), float32] */;
  (%574,)
}

def @func_9616() -> Tensor[(9, 13, 11), float32] {
  %575 = @func_9445() /* ty=(Tensor[(9, 13, 11), float32],) */;
  %575.0
}

def @func_6224() -> (Tensor[(1, 12, 2), float64],) {
  %576 = @func_2920() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
  %577 = %576.1;
  (%577,)
}

def @func_4200(%var_4164: Tensor[(16, 1, 3), float64], %var_4165: Tensor[(16, 3, 3), float64]) -> (Tensor[(16, 3, 3), float64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(96), float32], Tensor[(16, 1, 3), float32]) {
  %578 = cast(%var_4164, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
  %579 = cast(%var_4165, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
  %580 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %581 = cast(meta[relay.Constant][32] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %582 = cast(meta[relay.Constant][32] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %583 = cast(meta[relay.Constant][32] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %584 = reshape(%581, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %585 = reshape(%582, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %586 = reshape(%583, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %587 = @func_3096(%584, %585, %586) /* ty=(Tensor[(8, 3, 4), float32], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(1, 12, 2), float64]) */;
  %588 = cast(%var_4164, dtype="float32") /* ty=Tensor[(16, 1, 3), float32] */;
  %589 = power(%578, %579) /* ty=Tensor[(16, 3, 3), float64] */;
  %590 = %580.1;
  %591 = %587.2;
  %592 = atanh(%588) /* ty=Tensor[(16, 1, 3), float32] */;
  (%589, %590, %591, meta[relay.Constant][32] /* ty=Tensor[(96), float32] */, %592)
}

def @func_6831() -> (Tensor[(?, 12, 2), int8], Tensor[(?, 8, 12), int64]) {
  %593 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %594 = %593.0;
  %595 = @func_3660() /* ty=Tensor[(?, 8, 12), int64] */;
  (%594, %595)
}

def @func_3326() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1440), int8], Tensor[(180, 8), int8], Tensor[(1, 12, 2), float64]) {
  %596 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %597 = cast(meta[relay.Constant][33] /* ty=Tensor[(180, 8), int8] */, dtype="int8") /* ty=Tensor[(180, 8), int8] */;
  %598 = reshape(%597, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %599 = @func_1327(%598) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) */;
  %600 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %601 = %596.0;
  %602 = @func_3138() /* ty=Tensor[(1, 12, 2), float64] */;
  %603 = %599.2;
  %604 = %600.1;
  (%601, %602, %603, meta[relay.Constant][33] /* ty=Tensor[(180, 8), int8] */, %604)
}

def @func_2361() -> (Tensor[(1, 12, 2), float64],) {
  %605 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
  (%605,)
}

def @func_8401() -> (Tensor[(336), int32], Tensor[(1, 12, 2), float64]) {
  %606 = @func_5325() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(336), int32]) */;
  %607 = %606.1;
  %608 = @func_7602() /* ty=Tensor[(1, 12, 2), float64] */;
  (%607, %608)
}

def @func_3626(%var_3600: Tensor[(11, 12, 2), float32]) -> (Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(11, 12, 2), bool]) {
  %609 = @func_2577() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %610 = %609.0;
  %611 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  %612 = cast(%611, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %613 = shape_of(%610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%610, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %616 = cast(%610, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %617 = cast(%var_3600, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
  %618 = not_equal(%614, %615) /* ty=Tensor[(?, 12, 2), bool] */;
  %619 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
  %620 = greater_equal(%616, %617) /* ty=Tensor[(11, 12, 2), bool] */;
  (%618, %619, %620)
}

def @func_11842() -> (Tensor[(?, 8, 12), int64], Tensor[(1, 12, 2), float64]) {
  %621 = @func_6133() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %622 = @func_3660() /* ty=Tensor[(?, 8, 12), int64] */;
  %623 = %621.0;
  (%622, %623)
}

def @func_9818() -> Tensor[(1, 12, 2), float64] {
  %624 = @func_2920() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
  %624.0
}

def @func_4447() -> (Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %625 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %626 = @func_2149() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %627 = %625.1;
  %628 = %626.0;
  %629 = @func_2683() /* ty=Tensor[(1, 12, 2), float64] */;
  (%627, %628, %629)
}

def @func_9293() -> (Tensor[(1, 12, 2), float64], Tensor[(16, 12, 2), int64], Tensor[(384), float64]) {
  %630 = @func_8536() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %631 = cast(meta[relay.Constant][34] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %632 = reshape(%631, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), float64] */;
  %633 = @func_4318(%632) /* ty=(Tensor[(16, 12, 2), int64], Tensor[(336), int32]) */;
  %634 = %630.1;
  %635 = %633.0;
  (%634, %635, meta[relay.Constant][34] /* ty=Tensor[(384), float64] */)
}

def @func_8908() -> (Tensor[(?, 12, 2), int8],) {
  %636 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %637 = %636.0;
  (%637,)
}

def @func_10763() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
  %638 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %639 = @func_8536() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %640 = %638.0;
  %641 = %639.1;
  (%640, %641)
}

def @func_958() -> (Tensor[(1, 12, 2), float64],) {
  %642 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %643 = %642.0;
  (%643,)
}

def @func_6666(%var_6661: Tensor[(14, 5, 6), uint16]) -> (Tensor[(14, 5, 6), uint16],) {
  %644 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 5, 6), uint16] */, dtype="uint16") /* ty=Tensor[(14, 5, 6), uint16] */;
  %645 = shape_of(%var_6661, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%var_6661, dtype="uint16") /* ty=Tensor[(14, 5, 6), uint16] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %648 = bitwise_or(%646, %647) /* ty=Tensor[(14, 5, 6), uint16] */;
  (%648,)
}

def @func_7971() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %649 = @func_5934() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
  %650 = %649.0;
  %651 = @func_7791() /* ty=Tensor[(1, 12, 2), float64] */;
  (%650, %651)
}

def @func_7292() -> Tensor[(1, 12, 2), float32] {
  @func_4804() /* ty=Tensor[(1, 12, 2), float32] */
}

def @func_11767() -> Tensor[(?, 12, 2), bool] {
  %652 = @func_7723() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %652.0
}

def @func_11887() -> (Tensor[(9, 13, 11), float32],) {
  %653 = @func_9445() /* ty=(Tensor[(9, 13, 11), float32],) */;
  %654 = %653.0;
  (%654,)
}

def @func_5051() -> Tensor[(1, 12, 2), float64] {
  @func_3356() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_7723() -> (Tensor[(?, 12, 2), bool],) {
  %655 = @func_6224() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %656 = %655.0;
  %657 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  %658 = cast(%657, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %659 = shape_of(%656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%656, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %662 = logical_and(%660, %661) /* ty=Tensor[(?, 12, 2), bool] */;
  (%662,)
}

def @func_4394(%var_4346: Tensor[(11, 12, 2), float32]) -> (Tensor[(11, 12, 2), uint8], Tensor[(312), float32], Tensor[(660), float64]) {
  %663 = @func_2577() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %664 = %663.0;
  %665 = cast(%664, dtype="uint8") /* ty=Tensor[(1, 12, 2), uint8] */;
  %666 = cast(%var_4346, dtype="uint8") /* ty=Tensor[(11, 12, 2), uint8] */;
  %667 = cast(meta[relay.Constant][36] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %668 = reshape(%667, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), float32] */;
  %669 = @func_884(%668) /* ty=(Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) */;
  %670 = %669.4;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(660), float64] */;
  %672 = minimum(%665, %666) /* ty=Tensor[(11, 12, 2), uint8] */;
  %673 = erf(%671) /* ty=Tensor[(660), float64] */;
  (%672, meta[relay.Constant][36] /* ty=Tensor[(312), float32] */, %673)
}

def @func_3138() -> Tensor[(1, 12, 2), float64] {
  %674 = @func_2920() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
  %674.1
}

def @func_11091() -> (Tensor[(1, 12, 2), float64],) {
  %675 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
  (%675,)
}

def @func_11916() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8], Tensor[(?, 12, 2), float32]) {
  %676 = @func_4128() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(1440), int8], Tensor[(11, 12, 2), bool], Tensor[(264), float32]) */;
  %677 = @func_1537() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %678 = @func_6883() /* ty=(Tensor[(?, 12, 2), float32],) */;
  %679 = %676.0;
  %680 = %677.0;
  %681 = @func_8934() /* ty=Tensor[(?, 12, 2), int8] */;
  %682 = %678.0;
  (%679, %680, %681, %682)
}

def @func_1327(%var_1309: Tensor[(1440), int8]) -> (Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) {
  %683 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %684 = cast(%var_1309, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %685 = cast(%var_1309, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %686 = reshape(%684, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int8] */;
  %687 = reshape(%685, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int8] */;
  %688 = @func_729(%686, %687) /* ty=(Tensor[(9, 10, 16), int8], Tensor[(1, 12, 2), float64]) */;
  %689 = %683.0;
  %690 = %688.0;
  (%689, %690, %var_1309)
}

def @func_2882() -> (Tensor[(1, 12, 2), float64],) {
  %691 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %692 = %691.0;
  (%692,)
}

def @func_2135(%var_2133: Tensor[(1, 72), float64]) -> (Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(1, 72), float64]) {
  %693 = cast(%var_2133, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %694 = reshape(%693, newshape=[3, 12, 2]) /* ty=Tensor[(3, 12, 2), float64] */;
  %695 = @func_810(%694) /* ty=(Tensor[(3, 12, 2), float32],) */;
  %696 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  %697 = %695.0;
  (%696, %697, %var_2133)
}

def @func_11029() -> (Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
  %698 = @func_8908() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %699 = @func_4756() /* ty=Tensor[(1, 12, 2), float32] */;
  %700 = %698.0;
  %701 = @func_5051() /* ty=Tensor[(1, 12, 2), float64] */;
  (%699, %700, %701)
}

def @func_4583(%var_4555: Tensor[(48), float64]) -> (Tensor[(?, 8, 12), int64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(48), float64], Tensor[(144), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %702 = @func_2361() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %703 = cast(%var_4555, dtype="float64") /* ty=Tensor[(48), float64] */;
  %704 = cast(meta[relay.Constant][37] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %705 = reshape(%703, newshape=[16, 1, 3]) /* ty=Tensor[(16, 1, 3), float64] */;
  %706 = reshape(%704, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
  %707 = @func_4200(%705, %706) /* ty=(Tensor[(16, 3, 3), float64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(96), float32], Tensor[(16, 1, 3), float32]) */;
  %708 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %709 = @func_2361() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %710 = @func_3660() /* ty=Tensor[(?, 8, 12), int64] */;
  %711 = %702.0;
  %712 = %707.2;
  %713 = @func_2683() /* ty=Tensor[(1, 12, 2), float64] */;
  %714 = %708.0;
  %715 = %709.0;
  (%710, %711, %712, %var_4555, meta[relay.Constant][37] /* ty=Tensor[(144), float64] */, %713, %714, %715)
}

def @func_9123() -> Tensor[(1, 12, 2), float64] {
  %716 = @func_5002() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */;
  %716.1
}

def @func_9780() -> Tensor[(?, 12, 2), bool] {
  %717 = @func_7975() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %717.0
}

def @func_12099(%var_12091: Tensor[(4, 2, 1), float32]) -> Tensor[(4, 2, 1), float32] {
  %718 = cast(%var_12091, dtype="float32") /* ty=Tensor[(4, 2, 1), float32] */;
  atanh(%718) /* ty=Tensor[(4, 2, 1), float32] */
}

def @func_6789() -> Tensor[(?, 12, 2), bool] {
  %719 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %720 = %719.0;
  %721 = @func_4868() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %722 = %721.0;
  %723 = cast(%722, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %724 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%720, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%725, %726) /* ty=Tensor[(?, 12, 2), bool] */
}

def @func_11633() -> (Tensor[(?, 12, 2), bool],) {
  %727 = @func_8101() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %728 = %727.0;
  (%728,)
}

def @func_10961() -> Tensor[(1, 12, 2), float64] {
  %729 = @func_8871() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %729.0
}

def @func_5934() -> (Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) {
  %730 = @func_958() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %731 = @func_2773() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %732 = %730.0;
  %733 = %731.0;
  (%732, %733)
}

def @func_2275(%var_2257: Tensor[(7, 12, 2), bool]) -> (Tensor[(7, 12, 2), int32],) {
  %734 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
  %735 = cast(%734, dtype="int32") /* ty=Tensor[(?, 12, 2), int32] */;
  %736 = cast(%var_2257, dtype="int32") /* ty=Tensor[(7, 12, 2), int32] */;
  %737 = bitwise_or(%735, %736) /* ty=Tensor[(7, 12, 2), int32] */;
  (%737,)
}

def @func_11079() -> (Tensor[(1, 12, 2), float64],) {
  %738 = @func_2882() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %739 = %738.0;
  (%739,)
}

def @func_729(%var_712: Tensor[(9, 10, 16), int8], %var_713: Tensor[(9, 10, 16), int8]) -> (Tensor[(9, 10, 16), int8], Tensor[(1, 12, 2), float64]) {
  %740 = cast(%var_713, dtype="int8") /* ty=Tensor[(9, 10, 16), int8] */;
  %741 = shape_of(%var_712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%var_712, dtype="int8") /* ty=Tensor[(9, 10, 16), int8] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %744 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %745 = right_shift(%742, %743) /* ty=Tensor[(9, 10, 16), int8] */;
  %746 = %744.0;
  (%745, %746)
}

def @func_1393(%var_1380: Tensor[(10, 6, 7), float64]) -> (Tensor[(10, 6, 7), float64],) {
  %747 = cast(%var_1380, dtype="float64") /* ty=Tensor[(10, 6, 7), float64] */;
  %748 = log10(%747) /* ty=Tensor[(10, 6, 7), float64] */;
  (%748,)
}

def @func_1285() -> Tensor[(1, 12, 2), float64] {
  %749 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %750 = %749.0;
  %751 = cast(%750, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
  sin(%751) /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_5830(%var_5824: Tensor[(16, 12, 2), float32]) -> (Tensor[(16, 12, 2), float64],) {
  %752 = @func_4804() /* ty=Tensor[(1, 12, 2), float32] */;
  %753 = cast(%752, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
  %754 = cast(%var_5824, dtype="float64") /* ty=Tensor[(16, 12, 2), float64] */;
  %755 = mod(%753, %754) /* ty=Tensor[(16, 12, 2), float64] */;
  (%755,)
}

def @func_1360() -> (Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) {
  %756 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %757 = cast(meta[relay.Constant][38] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
  %758 = cast(meta[relay.Constant][38] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
  %759 = reshape(%757, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
  %760 = reshape(%758, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
  %761 = @func_237(%759, %760) /* ty=(Tensor[(14, 12, 2), bool],) */;
  %762 = %756.0;
  %763 = %761.0;
  (%762, %763, meta[relay.Constant][38] /* ty=Tensor[(336), int32] */)
}

def @func_8633(%var_8626: Tensor[(4, 24), float32]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(4, 24), float32]) {
  %764 = @func_8536() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %765 = cast(%var_8626, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %766 = cast(%var_8626, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %767 = cast(%var_8626, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %768 = reshape(%765, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %769 = reshape(%766, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %770 = reshape(%767, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %771 = @func_3096(%768, %769, %770) /* ty=(Tensor[(8, 3, 4), float32], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(1, 12, 2), float64]) */;
  %772 = %764.1;
  %773 = @func_7174() /* ty=Tensor[(1, 12, 2), float64] */;
  %774 = %771.2;
  (%772, %773, %774, %var_8626)
}

def @func_8149() -> (Tensor[(1, 12, 2), float64],) {
  %775 = @func_5051() /* ty=Tensor[(1, 12, 2), float64] */;
  (%775,)
}

def @func_1202() -> (Tensor[(1, 12, 2), float64],) {
  %776 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %777 = %776.1;
  (%777,)
}

def @func_10192() -> Tensor[(1, 12, 2), float32] {
  %778 = @func_4128() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(1440), int8], Tensor[(11, 12, 2), bool], Tensor[(264), float32]) */;
  %778.1
}

def @func_9466() -> (Tensor[(1, 12, 2), float64],) {
  %779 = @func_1202() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %780 = %779.0;
  (%780,)
}

def @func_8871() -> (Tensor[(1, 12, 2), float64],) {
  %781 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %782 = %781.1;
  (%782,)
}

def @func_8253() -> (Tensor[(1, 12, 2), float64],) {
  %783 = @func_8193() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %784 = %783.0;
  (%784,)
}

def @func_9100() -> Tensor[(?, 12, 2), int8] {
  @func_8934() /* ty=Tensor[(?, 12, 2), int8] */
}

def @func_237(%var_232: Tensor[(14, 12, 2), int32], %var_233: Tensor[(14, 12, 2), int32]) -> (Tensor[(14, 12, 2), bool],) {
  %785 = cast(%var_233, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
  %786 = shape_of(%var_232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%var_232, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %789 = not_equal(%787, %788) /* ty=Tensor[(14, 12, 2), bool] */;
  (%789,)
}

def @func_11176(%var_11161: Tensor[(72), float64]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(72), float64], Tensor[(4, 13, 3), float64], Tensor[(9, 13, 11), float32]) {
  %790 = cast(%var_11161, dtype="float64") /* ty=Tensor[(72), float64] */;
  %791 = reshape(%790, newshape=[1, 72]) /* ty=Tensor[(1, 72), float64] */;
  %792 = @func_2135(%791) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(1, 72), float64]) */;
  %793 = @func_4904() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), int8], Tensor[(1152), int64], Tensor[(156, 1), float64]) */;
  %794 = @func_9445() /* ty=(Tensor[(9, 13, 11), float32],) */;
  %795 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  %796 = %792.0;
  %797 = %793.1;
  %798 = %794.0;
  (%795, %796, %var_11161, %797, %798)
}

def @func_2824(%var_2819: Tensor[(72), float64]) -> (Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) {
  %799 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %800 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  %801 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
  %802 = cast(%801, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %803 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%800, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %806 = cast(%var_2819, dtype="float64") /* ty=Tensor[(72), float64] */;
  %807 = reshape(%806, newshape=[1, 72]) /* ty=Tensor[(1, 72), float64] */;
  %808 = @func_2135(%807) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(1, 72), float64]) */;
  %809 = %799.1;
  %810 = floor_mod(%804, %805) /* ty=Tensor[(?, 12, 2), float32] */;
  %811 = %808.1;
  (%809, %810, %811, %var_2819)
}

def @func_4904() -> (Tensor[(?, 12, 2), int8], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), int8], Tensor[(1152), int64], Tensor[(156, 1), float64]) {
  %812 = @func_4128() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(1440), int8], Tensor[(11, 12, 2), bool], Tensor[(264), float32]) */;
  %813 = cast(meta[relay.Constant][39] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %814 = reshape(%813, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float64] */;
  %815 = @func_472(%814) /* ty=(Tensor[(4, 13, 3), float64],) */;
  %816 = cast(meta[relay.Constant][40] /* ty=Tensor[(1152), int64] */, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %817 = reshape(%816, newshape=[12, 8, 12]) /* ty=Tensor[(12, 8, 12), int64] */;
  %818 = @func_3843(%817) /* ty=(Tensor[(?, 12, 2), int8], Tensor[(12, 8, 12), float64], Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), bool], Tensor[(336), int32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */;
  %819 = cast(meta[relay.Constant][39] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %820 = %812.0;
  %821 = %815.0;
  %822 = %818.0;
  %823 = cos(%819) /* ty=Tensor[(156, 1), float64] */;
  (%820, %821, %822, meta[relay.Constant][40] /* ty=Tensor[(1152), int64] */, %823)
}

def @func_4962(%var_4959: Tensor[(264), float32]) -> (Tensor[(1, 12, 2), float64], Tensor[(11, 12, 2), uint8], Tensor[(264), float32]) {
  %824 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %825 = cast(%var_4959, dtype="float32") /* ty=Tensor[(264), float32] */;
  %826 = reshape(%825, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float32] */;
  %827 = @func_4394(%826) /* ty=(Tensor[(11, 12, 2), uint8], Tensor[(312), float32], Tensor[(660), float64]) */;
  %828 = %824.0;
  %829 = %827.0;
  (%828, %829, %var_4959)
}

def @func_9178() -> (Tensor[(?, 12, 2), bool],) {
  %830 = @func_8101() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %831 = %830.0;
  (%831,)
}

def @func_2683() -> Tensor[(1, 12, 2), float64] {
  @func_1472() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_9568() -> (Tensor[(1, 12, 2), float32],) {
  %832 = @func_7292() /* ty=Tensor[(1, 12, 2), float32] */;
  (%832,)
}

def @func_3843(%var_3776: Tensor[(12, 8, 12), int64]) -> (Tensor[(?, 12, 2), int8], Tensor[(12, 8, 12), float64], Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), bool], Tensor[(336), int32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
  %833 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %834 = @func_3660() /* ty=Tensor[(?, 8, 12), int64] */;
  %835 = cast(%834, dtype="int8") /* ty=Tensor[(?, 8, 12), int8] */;
  %836 = cast(%var_3776, dtype="int8") /* ty=Tensor[(12, 8, 12), int8] */;
  %837 = add(%835, %836) /* ty=Tensor[(12, 8, 12), int8] */;
  %838 = cast(%837, dtype="float64") /* ty=Tensor[(12, 8, 12), float64] */;
  %839 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %840 = @func_1537() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %841 = cast(%var_3776, dtype="int64") /* ty=Tensor[(12, 8, 12), int64] */;
  %842 = reshape(%841, newshape=[12, 12, 8]) /* ty=Tensor[(12, 12, 8), int64] */;
  %843 = @func_3221(%842) /* ty=(Tensor[(12, 12, 8), int64], Tensor[(336), int32]) */;
  %844 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %845 = @func_1202() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %846 = %833.0;
  %847 = sigmoid(%838) /* ty=Tensor[(12, 8, 12), float64] */;
  %848 = %839.0;
  %849 = %840.0;
  %850 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
  %851 = %843.1;
  %852 = %844.0;
  %853 = %845.0;
  (%846, %847, %848, %849, %850, %851, %852, %853)
}

def @func_11762() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %854 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %855 = @func_5106() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %856 = @func_7263() /* ty=Tensor[(1, 12, 2), float64] */;
  %857 = %854.0;
  %858 = %855.1;
  (%856, %857, %858)
}

def @func_7911() -> Tensor[(?, 12, 2), float32] {
  %859 = @func_5356() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32]) */;
  %859.1
}

def @func_1537() -> (Tensor[(1, 12, 2), float64],) {
  %860 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  (%860,)
}

def @func_10355() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32]) {
  %861 = @func_2920() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
  %862 = @func_10231() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %863 = @func_2683() /* ty=Tensor[(1, 12, 2), float64] */;
  %864 = @func_7602() /* ty=Tensor[(1, 12, 2), float64] */;
  %865 = %861.1;
  %866 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
  %867 = %862.0;
  (%863, %864, %865, %866, %867)
}

def @func_1462() -> Tensor[(?, 12, 2), bool] {
  %868 = @func_1202() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %869 = %868.0;
  %870 = cast(%869, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %871 = acosh(%870) /* ty=Tensor[(1, 12, 2), float32] */;
  %872 = cast(%871, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %873 = shape_of(%869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%869, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%874, %875) /* ty=Tensor[(?, 12, 2), bool] */
}

def @func_11823(%var_11817: Tensor[(5, 12, 2), float32]) -> Tensor[(5, 12, 2), int16] {
  %876 = @func_3895() /* ty=(Tensor[(5, 12, 2), uint16], Tensor[(7, 12, 2), int32], Tensor[(168), bool]) */;
  %877 = %876.0;
  %878 = cast(%877, dtype="float32") /* ty=Tensor[(5, 12, 2), float32] */;
  %879 = exp(%878) /* ty=Tensor[(5, 12, 2), float32] */;
  %880 = cast(%var_11817, dtype="int16") /* ty=Tensor[(5, 12, 2), int16] */;
  %881 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
  %882 = cast(%879, dtype="int16") /* ty=Tensor[(5, 12, 2), int16] */;
  %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%882, %883) /* ty=Tensor[(5, 12, 2), int16] */
}

def @func_5548() -> (Tensor[(14, 12, 2), bool],) {
  %884 = @func_4447() /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %885 = %884.0;
  (%885,)
}

def @func_4657(%var_4640: Tensor[(5, 12, 2), float64], %var_4650: Tensor[(5, 12, 2), uint64]) -> (Tensor[(1, 12, 2), float64], Tensor[(5, 12, 2), bool]) {
  %886 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  %887 = cast(%886, dtype="uint64") /* ty=Tensor[(1, 12, 2), uint64] */;
  %888 = cast(%var_4640, dtype="uint64") /* ty=Tensor[(5, 12, 2), uint64] */;
  %889 = add(%887, %888) /* ty=Tensor[(5, 12, 2), uint64] */;
  %890 = cast(%var_4650, dtype="bool") /* ty=Tensor[(5, 12, 2), bool] */;
  %891 = shape_of(%889, dtype="int32") /* ty=Tensor[(3), int32] */;
  %892 = cast(%889, dtype="bool") /* ty=Tensor[(5, 12, 2), bool] */;
  %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %894 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
  %895 = greater(%892, %893) /* ty=Tensor[(5, 12, 2), bool] */;
  (%894, %895)
}

def @func_11706() -> (Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64]) {
  %896 = @func_2577() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %897 = @func_10763() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */;
  %898 = %896.0;
  %899 = %897.1;
  (%898, %899)
}

def @func_5356() -> (Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32]) {
  %900 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %901 = %900.0;
  %902 = @func_3715() /* ty=Tensor[(1, 12, 2), float64] */;
  %903 = cast(%902, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %904 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(%901, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %907 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
  %908 = divide(%905, %906) /* ty=Tensor[(?, 12, 2), float32] */;
  (%907, %908)
}

def @func_7602() -> Tensor[(1, 12, 2), float64] {
  %909 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %909.0
}

def @func_1790(%var_1746: Tensor[(13, 12, 2), float64]) -> (Tensor[(13, 12, 2), int64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) {
  %910 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %911 = %910.0;
  %912 = cast(%911, dtype="int64") /* ty=Tensor[(1, 12, 2), int64] */;
  %913 = cast(%var_1746, dtype="int64") /* ty=Tensor[(13, 12, 2), int64] */;
  %914 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %915 = cast(meta[relay.Constant][41] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %916 = reshape(%915, newshape=[3, 12, 2]) /* ty=Tensor[(3, 12, 2), float64] */;
  %917 = @func_810(%916) /* ty=(Tensor[(3, 12, 2), float32],) */;
  %918 = bitwise_or(%912, %913) /* ty=Tensor[(13, 12, 2), int64] */;
  %919 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  %920 = %914.0;
  %921 = %917.0;
  (%918, %919, %920, %921, meta[relay.Constant][41] /* ty=Tensor[(72), float64] */)
}

def @func_9370() -> (Tensor[(1, 12, 2), float64], Tensor[(9, 13, 11), float32], Tensor[(?, 12, 2), uint16]) {
  %922 = @func_8253() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %923 = @func_6193() /* ty=Tensor[(9, 13, 11), float32] */;
  %924 = cast(%923, dtype="float32") /* ty=Tensor[(9, 13, 11), float32] */;
  %925 = @func_8601() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), uint16], Tensor[(156, 2), float32], Tensor[(1, 12, 2), float32]) */;
  %926 = %922.0;
  %927 = exp(%924) /* ty=Tensor[(9, 13, 11), float32] */;
  %928 = %925.2;
  (%926, %927, %928)
}

def @func_5653(%var_5626: Tensor[(3, 13, 6), float32], %var_5627: Tensor[(3, 13, 6), float32]) -> Tensor[(3, 13, 6), float32] {
  %929 = cast(%var_5627, dtype="float32") /* ty=Tensor[(3, 13, 6), float32] */;
  %930 = shape_of(%var_5626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%var_5626, dtype="float32") /* ty=Tensor[(3, 13, 6), float32] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%931, %932) /* ty=Tensor[(3, 13, 6), float32] */
}

def @func_7563() -> (Tensor[(156, 3), int32], Tensor[(156, 3), uint64], Tensor[(1, 12, 2), float64]) {
  %933 = @func_7243() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(156, 1), float64], Tensor[(1, 12, 2), float64]) */;
  %934 = %933.1;
  %935 = cast(%934, dtype="int32") /* ty=Tensor[(156, 1), int32] */;
  %936 = cast(meta[relay.Constant][42] /* ty=Tensor[(156, 3), float64] */, dtype="int32") /* ty=Tensor[(156, 3), int32] */;
  %937 = cast(%934, dtype="uint64") /* ty=Tensor[(156, 1), uint64] */;
  %938 = cast(meta[relay.Constant][42] /* ty=Tensor[(156, 3), float64] */, dtype="uint64") /* ty=Tensor[(156, 3), uint64] */;
  %939 = bitwise_and(%937, %938) /* ty=Tensor[(156, 3), uint64] */;
  %940 = cast(%939, dtype="uint64") /* ty=Tensor[(156, 3), uint64] */;
  %941 = cast(%934, dtype="uint64") /* ty=Tensor[(156, 1), uint64] */;
  %942 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %943 = minimum(%935, %936) /* ty=Tensor[(156, 3), int32] */;
  %944 = maximum(%940, %941) /* ty=Tensor[(156, 3), uint64] */;
  %945 = %942.0;
  (%943, %944, %945)
}

def @func_810(%var_803: Tensor[(3, 12, 2), float64]) -> (Tensor[(3, 12, 2), float32],) {
  %946 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %947 = %946.0;
  %948 = cast(%947, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %949 = cast(%var_803, dtype="float32") /* ty=Tensor[(3, 12, 2), float32] */;
  %950 = floor_mod(%948, %949) /* ty=Tensor[(3, 12, 2), float32] */;
  (%950,)
}

def @func_3096(%var_3060: Tensor[(8, 3, 4), float32], %var_3061: Tensor[(8, 3, 4), float32], %var_3089: Tensor[(8, 3, 4), float32]) -> (Tensor[(8, 3, 4), float32], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(1, 12, 2), float64]) {
  %951 = cast(%var_3061, dtype="float32") /* ty=Tensor[(8, 3, 4), float32] */;
  %952 = shape_of(%var_3060, dtype="int32") /* ty=Tensor[(3), int32] */;
  %953 = cast(%var_3060, dtype="float32") /* ty=Tensor[(8, 3, 4), float32] */;
  %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %955 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %956 = cast(%var_3089, dtype="int32") /* ty=Tensor[(8, 3, 4), int32] */;
  %957 = shape_of(%var_3061, dtype="int32") /* ty=Tensor[(3), int32] */;
  %958 = cast(%var_3061, dtype="int32") /* ty=Tensor[(8, 3, 4), int32] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %960 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %961 = mod(%953, %954) /* ty=Tensor[(8, 3, 4), float32] */;
  %962 = %955.0;
  %963 = bitwise_or(%958, %959) /* ty=Tensor[(8, 3, 4), int32] */;
  %964 = %960.0;
  (%961, %962, %963, %964)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5561() -> (Tensor[(1, 12, 2), float64],) {
  %0 = @func_5106() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %1 = %0.0;
  (%1,)
}

def @func_1473() -> Tensor[(1, 12, 2), float64] {
  %3 = fn () -> Tensor[(1, 12, 2), float64] {
    %2 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %2.0
  };
  %3() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_7116(%var_7115: Tensor[(16, 12, 2), float64]) -> (Tensor[(16, 12, 2), int16], Tensor[(1, 12, 2), float32]) {
  %11 = fn (%var_7099: Tensor[(16, 12, 2), float64]) -> (Tensor[(16, 12, 2), int16], Tensor[(1, 12, 2), float32]) {
    %4 = @func_5106() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %5 = %4.0;
    %6 = cast(%5, dtype="int16") /* ty=Tensor[(1, 12, 2), int16] */;
    %7 = cast(%var_7099, dtype="int16") /* ty=Tensor[(16, 12, 2), int16] */;
    %8 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
    %9 = multiply(%6, %7) /* ty=Tensor[(16, 12, 2), int16] */;
    %10 = %8.0;
    (%9, %10)
  };
  %11(%var_7115) /* ty=(Tensor[(16, 12, 2), int16], Tensor[(1, 12, 2), float32]) */
}

def @func_7565() -> (Tensor[(156, 3), int32], Tensor[(156, 3), uint64], Tensor[(1, 12, 2), float64]) {
  @func_7563() /* ty=(Tensor[(156, 3), int32], Tensor[(156, 3), uint64], Tensor[(1, 12, 2), float64]) */
}

def @func_732(%var_730: Tensor[(9, 10, 16), int8], %var_731: Tensor[(9, 10, 16), int8]) -> (Tensor[(9, 10, 16), int8], Tensor[(1, 12, 2), float64]) {
  %19 = fn (%var_712: Tensor[(9, 10, 16), int8], %var_713: Tensor[(9, 10, 16), int8]) -> (Tensor[(9, 10, 16), int8], Tensor[(1, 12, 2), float64]) {
    %12 = cast(%var_713, dtype="int8") /* ty=Tensor[(9, 10, 16), int8] */;
    %13 = shape_of(%var_712, dtype="int32") /* ty=Tensor[(3), int32] */;
    %14 = cast(%var_712, dtype="int8") /* ty=Tensor[(9, 10, 16), int8] */;
    %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %16 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %17 = right_shift(%14, %15) /* ty=Tensor[(9, 10, 16), int8] */;
    %18 = %16.0;
    (%17, %18)
  };
  %19(%var_730, %var_731) /* ty=(Tensor[(9, 10, 16), int8], Tensor[(1, 12, 2), float64]) */
}

def @func_11762() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %20 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %21 = @func_5106() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %22 = @func_7263() /* ty=Tensor[(1, 12, 2), float64] */;
  %23 = %20.0;
  %24 = %21.1;
  (%22, %23, %24)
}

def @func_11580(%var_11579: Tensor[(6, 60), float32]) -> (Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(11, 5, 4), float32], Tensor[(54), int8], Tensor[(?, 12, 2), int8], Tensor[(?, 12, 2), int8], Tensor[(15, 12, 2), uint16], Tensor[(6, 60), float32], Tensor[(?, 12, 2), int8]) {
  %39 = fn (%var_11545: Tensor[(6, 60), float32]) -> (Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(11, 5, 4), float32], Tensor[(54), int8], Tensor[(?, 12, 2), int8], Tensor[(?, 12, 2), int8], Tensor[(15, 12, 2), uint16], Tensor[(6, 60), float32], Tensor[(?, 12, 2), int8]) {
    %25 = @func_11029() /* ty=(Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */;
    %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(54), int8] */, dtype="int8") /* ty=Tensor[(54), int8] */;
    %27 = reshape(%26, newshape=[54]) /* ty=Tensor[(54), int8] */;
    %28 = @func_8700(%27) /* ty=(Tensor[(11, 5, 4), float32], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(3, 9, 2), float32], Tensor[(54), int8]) */;
    %29 = @func_2773() /* ty=(Tensor[(?, 12, 2), int8],) */;
    %30 = cast(%var_11545, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
    %31 = reshape(%30, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), float32] */;
    %32 = %25.0;
    %33 = @func_10961() /* ty=Tensor[(1, 12, 2), float64] */;
    %34 = %28.0;
    %35 = %29.0;
    %36 = @func_9100() /* ty=Tensor[(?, 12, 2), int8] */;
    %37 = @func_6624(%31) /* ty=Tensor[(15, 12, 2), uint16] */;
    %38 = @func_8934() /* ty=Tensor[(?, 12, 2), int8] */;
    (%32, %33, %34, meta[relay.Constant][0] /* ty=Tensor[(54), int8] */, %35, %36, %37, %var_11545, %38)
  };
  %39(%var_11579) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(11, 5, 4), float32], Tensor[(54), int8], Tensor[(?, 12, 2), int8], Tensor[(?, 12, 2), int8], Tensor[(15, 12, 2), uint16], Tensor[(6, 60), float32], Tensor[(?, 12, 2), int8]) */
}

def @func_5108() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  @func_5106() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */
}

def @func_7725() -> (Tensor[(?, 12, 2), bool],) {
  @func_7723() /* ty=(Tensor[(?, 12, 2), bool],) */
}

def @func_9102() -> Tensor[(?, 12, 2), int8] {
  @func_9100() /* ty=Tensor[(?, 12, 2), int8] */
}

def @func_7975() -> (Tensor[(?, 12, 2), bool],) {
  %40 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
  (%40,)
}

def @func_11356() -> (Tensor[(9, 13, 11), float32], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  @func_11354() /* ty=(Tensor[(9, 13, 11), float32], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) */
}

def @func_11091() -> (Tensor[(1, 12, 2), float64],) {
  %41 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
  (%41,)
}

def @func_7977() -> (Tensor[(?, 12, 2), bool],) {
  @func_7975() /* ty=(Tensor[(?, 12, 2), bool],) */
}

def @func_42(%var_31: Tensor[(11, 6, 5), float64]) -> (Tensor[(11, 6, 5), float64],) {
  %42 = cast(%var_31, dtype="float64") /* ty=Tensor[(11, 6, 5), float64] */;
  %43 = tan(%42) /* ty=Tensor[(11, 6, 5), float64] */;
  (%43,)
}

def @func_6226() -> (Tensor[(1, 12, 2), float64],) {
  @func_6224() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_11707() -> (Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64]) {
  %48 = fn () -> (Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64]) {
    %44 = @func_2577() /* ty=(Tensor[(1, 12, 2), float32],) */;
    %45 = @func_10763() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */;
    %46 = %44.0;
    %47 = %45.1;
    (%46, %47)
  };
  %48() /* ty=(Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64]) */
}

def @func_5470() -> Tensor[(1, 12, 2), float64] {
  @func_5468() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_7972() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %52 = fn () -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
    %49 = @func_5934() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
    %50 = %49.0;
    %51 = @func_7791() /* ty=Tensor[(1, 12, 2), float64] */;
    (%50, %51)
  };
  %52() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */
}

def @func_2452(%var_2450: Tensor[(156, 1), float64], %var_2451: Tensor[(14, 12, 2), bool]) -> (Tensor[(1, 12, 2), float32], Tensor[(4, 13, 3), float64], Tensor[(156, 1), float64], Tensor[(14, 12, 2), bool]) {
  %63 = fn (%var_2409: Tensor[(156, 1), float64], %var_2444: Tensor[(14, 12, 2), bool]) -> (Tensor[(1, 12, 2), float32], Tensor[(4, 13, 3), float64], Tensor[(156, 1), float64], Tensor[(14, 12, 2), bool]) {
    %53 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
    %54 = cast(%var_2409, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
    %55 = reshape(%54, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float64] */;
    %56 = @func_472(%55) /* ty=(Tensor[(4, 13, 3), float64],) */;
    %57 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
    %58 = cast(%57, dtype="bool") /* ty=Tensor[(?, 12, 2), bool] */;
    %59 = cast(%var_2444, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
    %60 = %53.1;
    %61 = %56.0;
    %62 = greater_equal(%58, %59) /* ty=Tensor[(14, 12, 2), bool] */;
    (%60, %61, %var_2409, %62)
  };
  %63(%var_2450, %var_2451) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(4, 13, 3), float64], Tensor[(156, 1), float64], Tensor[(14, 12, 2), bool]) */
}

def @func_4448() -> (Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %69 = fn () -> (Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
    %64 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
    %65 = @func_2149() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %66 = %64.1;
    %67 = %65.0;
    %68 = @func_2683() /* ty=Tensor[(1, 12, 2), float64] */;
    (%66, %67, %68)
  };
  %69() /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */
}

def @func_4730() -> (Tensor[(168), bool],) {
  %72 = fn () -> (Tensor[(168), bool],) {
    %70 = @func_3895() /* ty=(Tensor[(5, 12, 2), uint16], Tensor[(7, 12, 2), int32], Tensor[(168), bool]) */;
    %71 = %70.2;
    (%71,)
  };
  %72() /* ty=(Tensor[(168), bool],) */
}

def @func_9617() -> Tensor[(9, 13, 11), float32] {
  %74 = fn () -> Tensor[(9, 13, 11), float32] {
    %73 = @func_9445() /* ty=(Tensor[(9, 13, 11), float32],) */;
    %73.0
  };
  %74() /* ty=Tensor[(9, 13, 11), float32] */
}

def @func_7602() -> Tensor[(1, 12, 2), float64] {
  %75 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %75.0
}

def @func_8036(%var_8034: Tensor[(5, 10, 14), int32], %var_8035: Tensor[(5, 10, 14), int32]) -> (Tensor[(5, 10, 14), int32],) {
  @func_8032(%var_8034, %var_8035) /* ty=(Tensor[(5, 10, 14), int32],) */
}

def @func_7837() -> (Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  @func_7835() /* ty=(Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) */
}

def @func_9180() -> (Tensor[(?, 12, 2), bool],) {
  @func_9178() /* ty=(Tensor[(?, 12, 2), bool],) */
}

def @func_7085(%var_7083: Tensor[(15, 5, 6), float32]) -> (Tensor[(9, 13, 11), float32], Tensor[(15, 5, 6), int8], Tensor[(15, 5, 6), bool], Tensor[(15, 5, 6), bool]) {
  @func_7082(%var_7083) /* ty=(Tensor[(9, 13, 11), float32], Tensor[(15, 5, 6), int8], Tensor[(15, 5, 6), bool], Tensor[(15, 5, 6), bool]) */
}

def @func_4397(%var_4395: Tensor[(11, 12, 2), float32]) -> (Tensor[(11, 12, 2), uint8], Tensor[(312), float32], Tensor[(660), float64]) {
  @func_4394(%var_4395) /* ty=(Tensor[(11, 12, 2), uint8], Tensor[(312), float32], Tensor[(660), float64]) */
}

def @func_11093() -> (Tensor[(1, 12, 2), float64],) {
  @func_11091() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_5028() -> (Tensor[(1, 12, 2), float64], Tensor[(12, 11, 5), bool], Tensor[(110, 6), float32]) {
  @func_5026() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(12, 11, 5), bool], Tensor[(110, 6), float32]) */
}

def @func_958() -> (Tensor[(1, 12, 2), float64],) {
  %76 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %77 = %76.0;
  (%77,)
}

def @func_2685() -> Tensor[(1, 12, 2), float64] {
  @func_2683() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_5711(%var_5703: Tensor[(10, 9, 11), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(?, 12, 2), bool]) {
  %78 = cast(%var_5703, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
  %79 = log(%78) /* ty=Tensor[(10, 9, 11), float64] */;
  %80 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
  (%79, %80)
}

def @func_5026() -> (Tensor[(1, 12, 2), float64], Tensor[(12, 11, 5), bool], Tensor[(110, 6), float32]) {
  %81 = cast(meta[relay.Constant][1] /* ty=Tensor[(110, 6), float32] */, dtype="float32") /* ty=Tensor[(110, 6), float32] */;
  %82 = reshape(%81, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), float32] */;
  %83 = @func_102(%82) /* ty=(Tensor[(12, 11, 5), bool],) */;
  %84 = @func_3715() /* ty=Tensor[(1, 12, 2), float64] */;
  %85 = %83.0;
  (%84, %85, meta[relay.Constant][1] /* ty=Tensor[(110, 6), float32] */)
}

def @func_7125() -> (Tensor[(1, 12, 2), float64],) {
  @func_7123() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_4661(%var_4659: Tensor[(5, 12, 2), float64], %var_4660: Tensor[(5, 12, 2), uint64]) -> (Tensor[(1, 12, 2), float64], Tensor[(5, 12, 2), bool]) {
  @func_4657(%var_4659, %var_4660) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(5, 12, 2), bool]) */
}

def @func_7604() -> Tensor[(1, 12, 2), float64] {
  @func_7602() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_1069() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) {
  @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */
}

def @func_3662() -> Tensor[(?, 8, 12), int64] {
  @func_3660() /* ty=Tensor[(?, 8, 12), int64] */
}

def @func_8472() -> (Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  @func_8470() /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64]) */
}

def @func_4321(%var_4319: Tensor[(16, 12, 2), float64]) -> (Tensor[(16, 12, 2), int64], Tensor[(336), int32]) {
  @func_4318(%var_4319) /* ty=(Tensor[(16, 12, 2), int64], Tensor[(336), int32]) */
}

def @func_1393(%var_1380: Tensor[(10, 6, 7), float64]) -> (Tensor[(10, 6, 7), float64],) {
  %86 = cast(%var_1380, dtype="float64") /* ty=Tensor[(10, 6, 7), float64] */;
  %87 = log10(%86) /* ty=Tensor[(10, 6, 7), float64] */;
  (%87,)
}

def @func_1790(%var_1746: Tensor[(13, 12, 2), float64]) -> (Tensor[(13, 12, 2), int64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) {
  %88 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %89 = %88.0;
  %90 = cast(%89, dtype="int64") /* ty=Tensor[(1, 12, 2), int64] */;
  %91 = cast(%var_1746, dtype="int64") /* ty=Tensor[(13, 12, 2), int64] */;
  %92 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %93 = cast(meta[relay.Constant][2] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %94 = reshape(%93, newshape=[3, 12, 2]) /* ty=Tensor[(3, 12, 2), float64] */;
  %95 = @func_810(%94) /* ty=(Tensor[(3, 12, 2), float32],) */;
  %96 = bitwise_or(%90, %91) /* ty=Tensor[(13, 12, 2), int64] */;
  %97 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  %98 = %92.0;
  %99 = %95.0;
  (%96, %97, %98, %99, meta[relay.Constant][2] /* ty=Tensor[(72), float64] */)
}

def @func_8536() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %100 = @func_7563() /* ty=(Tensor[(156, 3), int32], Tensor[(156, 3), uint64], Tensor[(1, 12, 2), float64]) */;
  %101 = @func_7123() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %102 = %100.2;
  %103 = %101.0;
  (%102, %103)
}

def @func_10602() -> Tensor[(?, 8, 12), int64] {
  %105 = fn () -> Tensor[(?, 8, 12), int64] {
    %104 = @func_6831() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(?, 8, 12), int64]) */;
    %104.1
  };
  %105() /* ty=Tensor[(?, 8, 12), int64] */
}

def @func_2773() -> (Tensor[(?, 12, 2), int8],) {
  %106 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %107 = %106.0;
  (%107,)
}

def @func_3897() -> (Tensor[(5, 12, 2), uint16], Tensor[(7, 12, 2), int32], Tensor[(168), bool]) {
  @func_3895() /* ty=(Tensor[(5, 12, 2), uint16], Tensor[(7, 12, 2), int32], Tensor[(168), bool]) */
}

def @func_4005(%var_3971: Tensor[(3, 12, 2), int8]) -> (Tensor[(3, 12, 2), uint8], Tensor[(1, 12, 2), float64]) {
  %108 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %109 = %108.0;
  %110 = cast(%109, dtype="uint8") /* ty=Tensor[(?, 12, 2), uint8] */;
  %111 = cast(%var_3971, dtype="uint8") /* ty=Tensor[(3, 12, 2), uint8] */;
  %112 = @func_2149() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %113 = add(%110, %111) /* ty=Tensor[(3, 12, 2), uint8] */;
  %114 = %112.0;
  (%113, %114)
}

def @func_9230() -> (Tensor[(?, 12, 2), bool],) {
  %115 = @func_7723() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %116 = %115.0;
  (%116,)
}

def @func_4318(%var_4308: Tensor[(16, 12, 2), float64]) -> (Tensor[(16, 12, 2), int64], Tensor[(336), int32]) {
  %117 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  %118 = cast(%117, dtype="int64") /* ty=Tensor[(1, 12, 2), int64] */;
  %119 = cast(%var_4308, dtype="int64") /* ty=Tensor[(16, 12, 2), int64] */;
  %120 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %121 = maximum(%118, %119) /* ty=Tensor[(16, 12, 2), int64] */;
  %122 = %120.2;
  (%121, %122)
}

def @func_2213(%var_2211: Tensor[(14, 12, 2), float64], %var_2212: Tensor[(330), float64]) -> (Tensor[(14, 12, 2), int8], Tensor[(1440), int8], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(1, 12, 2), float64], Tensor[(336), int32], Tensor[(312), float32]) {
  @func_2209(%var_2211, %var_2212) /* ty=(Tensor[(14, 12, 2), int8], Tensor[(1440), int8], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(1, 12, 2), float64], Tensor[(336), int32], Tensor[(312), float32]) */
}

def @func_5106() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %123 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %124 = @func_4447() /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %125 = %123.1;
  %126 = %124.2;
  (%125, %126)
}

def @func_11079() -> (Tensor[(1, 12, 2), float64],) {
  %127 = @func_2882() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %128 = %127.0;
  (%128,)
}

def @func_9560() -> Tensor[(?, 12, 2), bool] {
  @func_9558() /* ty=Tensor[(?, 12, 2), bool] */
}

def @func_5935() -> (Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) {
  %133 = fn () -> (Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) {
    %129 = @func_958() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %130 = @func_2773() /* ty=(Tensor[(?, 12, 2), int8],) */;
    %131 = %129.0;
    %132 = %130.0;
    (%131, %132)
  };
  %133() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */
}

def @func_8730(%var_8729: Tensor[(5, 14, 11), float32]) -> Tensor[(5, 14, 11), bool] {
  %145 = fn (%var_8706: Tensor[(5, 14, 11), float32]) -> Tensor[(5, 14, 11), bool] {
    %134 = cast(%var_8706, dtype="float32") /* ty=Tensor[(5, 14, 11), float32] */;
    %135 = erf(%134) /* ty=Tensor[(5, 14, 11), float32] */;
    %136 = cast(%var_8706, dtype="int64") /* ty=Tensor[(5, 14, 11), int64] */;
    %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
    %138 = cast(%135, dtype="int64") /* ty=Tensor[(5, 14, 11), int64] */;
    %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %140 = left_shift(%138, %139) /* ty=Tensor[(5, 14, 11), int64] */;
    %141 = cast(%140, dtype="bool") /* ty=Tensor[(5, 14, 11), bool] */;
    %142 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
    %143 = cast(%135, dtype="bool") /* ty=Tensor[(5, 14, 11), bool] */;
    %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%143, %144) /* ty=Tensor[(5, 14, 11), bool] */
  };
  %145(%var_8729) /* ty=Tensor[(5, 14, 11), bool] */
}

def @func_3420() -> (Tensor[(?, 12, 2), int8],) {
  %148 = fn () -> (Tensor[(?, 12, 2), int8],) {
    %146 = @func_2773() /* ty=(Tensor[(?, 12, 2), int8],) */;
    %147 = %146.0;
    (%147,)
  };
  %148() /* ty=(Tensor[(?, 12, 2), int8],) */
}

def @func_3326() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1440), int8], Tensor[(180, 8), int8], Tensor[(1, 12, 2), float64]) {
  %149 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %150 = cast(meta[relay.Constant][3] /* ty=Tensor[(180, 8), int8] */, dtype="int8") /* ty=Tensor[(180, 8), int8] */;
  %151 = reshape(%150, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %152 = @func_1327(%151) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) */;
  %153 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %154 = %149.0;
  %155 = @func_3138() /* ty=Tensor[(1, 12, 2), float64] */;
  %156 = %152.2;
  %157 = %153.1;
  (%154, %155, %156, meta[relay.Constant][3] /* ty=Tensor[(180, 8), int8] */, %157)
}

def @func_813(%var_811: Tensor[(3, 12, 2), float64]) -> (Tensor[(3, 12, 2), float32],) {
  @func_810(%var_811) /* ty=(Tensor[(3, 12, 2), float32],) */
}

def @func_2150() -> (Tensor[(1, 12, 2), float64],) {
  %160 = fn () -> (Tensor[(1, 12, 2), float64],) {
    %158 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %159 = %158.0;
    (%159,)
  };
  %160() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_4657(%var_4640: Tensor[(5, 12, 2), float64], %var_4650: Tensor[(5, 12, 2), uint64]) -> (Tensor[(1, 12, 2), float64], Tensor[(5, 12, 2), bool]) {
  %161 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  %162 = cast(%161, dtype="uint64") /* ty=Tensor[(1, 12, 2), uint64] */;
  %163 = cast(%var_4640, dtype="uint64") /* ty=Tensor[(5, 12, 2), uint64] */;
  %164 = add(%162, %163) /* ty=Tensor[(5, 12, 2), uint64] */;
  %165 = cast(%var_4650, dtype="bool") /* ty=Tensor[(5, 12, 2), bool] */;
  %166 = shape_of(%164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%164, dtype="bool") /* ty=Tensor[(5, 12, 2), bool] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %169 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
  %170 = greater(%167, %168) /* ty=Tensor[(5, 12, 2), bool] */;
  (%169, %170)
}

def @func_8702(%var_8701: Tensor[(54), int8]) -> (Tensor[(11, 5, 4), float32], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(3, 9, 2), float32], Tensor[(54), int8]) {
  %183 = fn (%var_8673: Tensor[(54), int8]) -> (Tensor[(11, 5, 4), float32], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(3, 9, 2), float32], Tensor[(54), int8]) {
    %171 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 5, 4), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 4), float32] */;
    %172 = cast(meta[relay.Constant][5] /* ty=Tensor[(330), float64] */, dtype="float64") /* ty=Tensor[(330), float64] */;
    %173 = reshape(%172, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float64] */;
    %174 = @func_42(%173) /* ty=(Tensor[(11, 6, 5), float64],) */;
    %175 = cast(%var_8673, dtype="int8") /* ty=Tensor[(54), int8] */;
    %176 = cast(%var_8673, dtype="int8") /* ty=Tensor[(54), int8] */;
    %177 = reshape(%175, newshape=[3, 9, 2]) /* ty=Tensor[(3, 9, 2), int8] */;
    %178 = reshape(%176, newshape=[3, 9, 2]) /* ty=Tensor[(3, 9, 2), int8] */;
    %179 = @func_2342(%177, %178) /* ty=(Tensor[(3, 9, 2), bool], Tensor[(3, 9, 2), float32]) */;
    %180 = acos(%171) /* ty=Tensor[(11, 5, 4), float32] */;
    %181 = %174.0;
    %182 = %179.1;
    (%180, %181, meta[relay.Constant][5] /* ty=Tensor[(330), float64] */, %182, %var_8673)
  };
  %183(%var_8701) /* ty=(Tensor[(11, 5, 4), float32], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(3, 9, 2), float32], Tensor[(54), int8]) */
}

def @func_742() -> (Tensor[(1, 12, 2), float64],) {
  %185 = fn () -> (Tensor[(1, 12, 2), float64],) {
    %184 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
    (%184,)
  };
  %185() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_5656(%var_5654: Tensor[(3, 13, 6), float32], %var_5655: Tensor[(3, 13, 6), float32]) -> Tensor[(3, 13, 6), float32] {
  %190 = fn (%var_5626: Tensor[(3, 13, 6), float32], %var_5627: Tensor[(3, 13, 6), float32]) -> Tensor[(3, 13, 6), float32] {
    %186 = cast(%var_5627, dtype="float32") /* ty=Tensor[(3, 13, 6), float32] */;
    %187 = shape_of(%var_5626, dtype="int32") /* ty=Tensor[(3), int32] */;
    %188 = cast(%var_5626, dtype="float32") /* ty=Tensor[(3, 13, 6), float32] */;
    %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%188, %189) /* ty=Tensor[(3, 13, 6), float32] */
  };
  %190(%var_5654, %var_5655) /* ty=Tensor[(3, 13, 6), float32] */
}

def @func_5550() -> (Tensor[(14, 12, 2), bool],) {
  @func_5548() /* ty=(Tensor[(14, 12, 2), bool],) */
}

def @func_8195() -> (Tensor[(1, 12, 2), float64],) {
  @func_8193() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_1361() -> (Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) {
  %199 = fn () -> (Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) {
    %191 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %192 = cast(meta[relay.Constant][6] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
    %193 = cast(meta[relay.Constant][6] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
    %194 = reshape(%192, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
    %195 = reshape(%193, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
    %196 = @func_237(%194, %195) /* ty=(Tensor[(14, 12, 2), bool],) */;
    %197 = %191.0;
    %198 = %196.0;
    (%197, %198, meta[relay.Constant][6] /* ty=Tensor[(336), int32] */)
  };
  %199() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */
}

def @func_1793(%var_1791: Tensor[(13, 12, 2), float64]) -> (Tensor[(13, 12, 2), int64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) {
  @func_1790(%var_1791) /* ty=(Tensor[(13, 12, 2), int64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) */
}

def @func_6195() -> Tensor[(9, 13, 11), float32] {
  @func_6193() /* ty=Tensor[(9, 13, 11), float32] */
}

def @func_5357() -> (Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32]) {
  %209 = fn () -> (Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32]) {
    %200 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %201 = %200.0;
    %202 = @func_3715() /* ty=Tensor[(1, 12, 2), float64] */;
    %203 = cast(%202, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
    %204 = shape_of(%201, dtype="int32") /* ty=Tensor[(3), int32] */;
    %205 = cast(%201, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
    %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %207 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
    %208 = divide(%205, %206) /* ty=Tensor[(?, 12, 2), float32] */;
    (%207, %208)
  };
  %209() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32]) */
}

def @func_2209(%var_2169: Tensor[(14, 12, 2), float64], %var_2180: Tensor[(330), float64]) -> (Tensor[(14, 12, 2), int8], Tensor[(1440), int8], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(1, 12, 2), float64], Tensor[(336), int32], Tensor[(312), float32]) {
  %210 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %211 = %210.0;
  %212 = cast(%211, dtype="int8") /* ty=Tensor[(1, 12, 2), int8] */;
  %213 = cast(%var_2169, dtype="int8") /* ty=Tensor[(14, 12, 2), int8] */;
  %214 = cast(%var_2180, dtype="float64") /* ty=Tensor[(330), float64] */;
  %215 = reshape(%214, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float64] */;
  %216 = @func_42(%215) /* ty=(Tensor[(11, 6, 5), float64],) */;
  %217 = cast(meta[relay.Constant][7] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %218 = cast(meta[relay.Constant][7] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %219 = reshape(%217, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int8] */;
  %220 = reshape(%218, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int8] */;
  %221 = @func_729(%219, %220) /* ty=(Tensor[(9, 10, 16), int8], Tensor[(1, 12, 2), float64]) */;
  %222 = %221.1;
  %223 = cast(%222, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
  %224 = cast(meta[relay.Constant][8] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %225 = reshape(%224, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), float32] */;
  %226 = @func_884(%225) /* ty=(Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) */;
  %227 = bitwise_or(%212, %213) /* ty=Tensor[(14, 12, 2), int8] */;
  %228 = %216.0;
  %229 = log2(%223) /* ty=Tensor[(1, 12, 2), float64] */;
  %230 = %226.2;
  (%227, meta[relay.Constant][7] /* ty=Tensor[(1440), int8] */, %228, %var_2180, %229, %230, meta[relay.Constant][8] /* ty=Tensor[(312), float32] */)
}

def @func_7563() -> (Tensor[(156, 3), int32], Tensor[(156, 3), uint64], Tensor[(1, 12, 2), float64]) {
  %231 = @func_7243() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(156, 1), float64], Tensor[(1, 12, 2), float64]) */;
  %232 = %231.1;
  %233 = cast(%232, dtype="int32") /* ty=Tensor[(156, 1), int32] */;
  %234 = cast(meta[relay.Constant][9] /* ty=Tensor[(156, 3), float64] */, dtype="int32") /* ty=Tensor[(156, 3), int32] */;
  %235 = cast(%232, dtype="uint64") /* ty=Tensor[(156, 1), uint64] */;
  %236 = cast(meta[relay.Constant][9] /* ty=Tensor[(156, 3), float64] */, dtype="uint64") /* ty=Tensor[(156, 3), uint64] */;
  %237 = bitwise_and(%235, %236) /* ty=Tensor[(156, 3), uint64] */;
  %238 = cast(%237, dtype="uint64") /* ty=Tensor[(156, 3), uint64] */;
  %239 = cast(%232, dtype="uint64") /* ty=Tensor[(156, 1), uint64] */;
  %240 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %241 = minimum(%233, %234) /* ty=Tensor[(156, 3), int32] */;
  %242 = maximum(%238, %239) /* ty=Tensor[(156, 3), uint64] */;
  %243 = %240.0;
  (%241, %242, %243)
}

def @func_10555() -> (Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  @func_10553() /* ty=(Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) */
}

def @func_11969() -> (Tensor[(5, 4, 10), float64],) {
  %244 = @func_11451() /* ty=Tensor[(5, 4, 10), float64] */;
  (%244,)
}

def @func_2827(%var_2825: Tensor[(72), float64]) -> (Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) {
  @func_2824(%var_2825) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) */
}

def @func_9881() -> Tensor[(1, 12, 2), float64] {
  %246 = fn () -> Tensor[(1, 12, 2), float64] {
    %245 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
    %245.0
  };
  %246() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_3140() -> Tensor[(1, 12, 2), float64] {
  @func_3138() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_7723() -> (Tensor[(?, 12, 2), bool],) {
  %247 = @func_6224() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %248 = %247.0;
  %249 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  %250 = cast(%249, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %251 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%248, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %254 = logical_and(%252, %253) /* ty=Tensor[(?, 12, 2), bool] */;
  (%254,)
}

def @func_6831() -> (Tensor[(?, 12, 2), int8], Tensor[(?, 8, 12), int64]) {
  %255 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %256 = %255.0;
  %257 = @func_3660() /* ty=Tensor[(?, 8, 12), int64] */;
  (%256, %257)
}

def @func_12102(%var_12100: Tensor[(4, 2, 1), float32]) -> Tensor[(4, 2, 1), float32] {
  @func_12099(%var_12100) /* ty=Tensor[(4, 2, 1), float32] */
}

def @func_1287() -> Tensor[(1, 12, 2), float64] {
  @func_1285() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_9688() -> (Tensor[(1, 12, 2), float64],) {
  %258 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %259 = %258.0;
  (%259,)
}

def @func_9690() -> (Tensor[(1, 12, 2), float64],) {
  @func_9688() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_3101(%var_3098: Tensor[(8, 3, 4), float32], %var_3099: Tensor[(8, 3, 4), float32], %var_3100: Tensor[(8, 3, 4), float32]) -> (Tensor[(8, 3, 4), float32], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(1, 12, 2), float64]) {
  @func_3096(%var_3098, %var_3099, %var_3100) /* ty=(Tensor[(8, 3, 4), float32], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(1, 12, 2), float64]) */
}

def @func_2920() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) {
  %260 = @func_2773() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %261 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
  %262 = @func_2683() /* ty=Tensor[(1, 12, 2), float64] */;
  %263 = %260.0;
  (%261, %262, %263)
}

def @func_10432(%var_10424: Tensor[(12, 12, 2), float64]) -> (Tensor[(12, 12, 2), float32],) {
  %264 = @func_8536() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %265 = %264.0;
  %266 = cast(%265, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %267 = cast(%var_10424, dtype="float32") /* ty=Tensor[(12, 12, 2), float32] */;
  %268 = divide(%266, %267) /* ty=Tensor[(12, 12, 2), float32] */;
  (%268,)
}

def @func_4805() -> Tensor[(1, 12, 2), float32] {
  %270 = fn () -> Tensor[(1, 12, 2), float32] {
    %269 = @func_2577() /* ty=(Tensor[(1, 12, 2), float32],) */;
    %269.0
  };
  %270() /* ty=Tensor[(1, 12, 2), float32] */
}

def @func_1698(%var_1696: Tensor[(312), float32]) -> (Tensor[(14, 12, 2), bool], Tensor[(9, 10, 16), int8], Tensor[(1440), int8], Tensor[(?, 12, 2), int8], Tensor[(336), int32], Tensor[(312), float32], Tensor[(?, 12, 2), uint16], Tensor[(1, 12, 2), float64]) {
  @func_1695(%var_1696) /* ty=(Tensor[(14, 12, 2), bool], Tensor[(9, 10, 16), int8], Tensor[(1440), int8], Tensor[(?, 12, 2), int8], Tensor[(336), int32], Tensor[(312), float32], Tensor[(?, 12, 2), uint16], Tensor[(1, 12, 2), float64]) */
}

def @func_9780() -> Tensor[(?, 12, 2), bool] {
  %271 = @func_7975() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %271.0
}

def @func_7407() -> (Tensor[(1, 12, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(990), float64]) {
  @func_7405() /* ty=(Tensor[(1, 12, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(990), float64]) */
}

def @func_10070() -> Tensor[(1, 12, 2), float64] {
  @func_10068() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_6883() -> (Tensor[(?, 12, 2), float32],) {
  %272 = @func_5356() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32]) */;
  %273 = %272.1;
  (%273,)
}

def @func_4869() -> (Tensor[(1, 12, 2), float64],) {
  %275 = fn () -> (Tensor[(1, 12, 2), float64],) {
    %274 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
    (%274,)
  };
  %275() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_6193() -> Tensor[(9, 13, 11), float32] {
  %276 = @func_4336() /* ty=(Tensor[(9, 13, 11), float32],) */;
  %276.0
}

def @func_10356() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32]) {
  %284 = fn () -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32]) {
    %277 = @func_2920() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
    %278 = @func_10231() /* ty=(Tensor[(1, 12, 2), float32],) */;
    %279 = @func_2683() /* ty=Tensor[(1, 12, 2), float64] */;
    %280 = @func_7602() /* ty=Tensor[(1, 12, 2), float64] */;
    %281 = %277.1;
    %282 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
    %283 = %278.0;
    (%279, %280, %281, %282, %283)
  };
  %284() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32]) */
}

def @func_6626(%var_6625: Tensor[(15, 12, 2), float32]) -> Tensor[(15, 12, 2), uint16] {
  %289 = fn (%var_6611: Tensor[(15, 12, 2), float32]) -> Tensor[(15, 12, 2), uint16] {
    %285 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
    %286 = %285.0;
    %287 = cast(%286, dtype="uint16") /* ty=Tensor[(1, 12, 2), uint16] */;
    %288 = cast(%var_6611, dtype="uint16") /* ty=Tensor[(15, 12, 2), uint16] */;
    bitwise_or(%287, %288) /* ty=Tensor[(15, 12, 2), uint16] */
  };
  %289(%var_6625) /* ty=Tensor[(15, 12, 2), uint16] */
}

def @func_886(%var_885: Tensor[(13, 8, 3), float32]) -> (Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) {
  %302 = fn (%var_827: Tensor[(13, 8, 3), float32]) -> (Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) {
    %290 = cast(%var_827, dtype="float32") /* ty=Tensor[(13, 8, 3), float32] */;
    %291 = cast(meta[relay.Constant][10] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
    %292 = cast(meta[relay.Constant][10] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
    %293 = reshape(%291, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
    %294 = reshape(%292, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
    %295 = @func_237(%293, %294) /* ty=(Tensor[(14, 12, 2), bool],) */;
    %296 = cast(meta[relay.Constant][11] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %297 = reshape(%296, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), float32] */;
    %298 = @func_102(%297) /* ty=(Tensor[(12, 11, 5), bool],) */;
    %299 = cosh(%290) /* ty=Tensor[(13, 8, 3), float32] */;
    %300 = %295.0;
    %301 = %298.0;
    (%299, %300, meta[relay.Constant][10] /* ty=Tensor[(336), int32] */, %301, meta[relay.Constant][11] /* ty=Tensor[(660), float32] */)
  };
  %302(%var_885) /* ty=(Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) */
}

def @func_9294() -> (Tensor[(1, 12, 2), float64], Tensor[(16, 12, 2), int64], Tensor[(384), float64]) {
  %309 = fn () -> (Tensor[(1, 12, 2), float64], Tensor[(16, 12, 2), int64], Tensor[(384), float64]) {
    %303 = @func_8536() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %304 = cast(meta[relay.Constant][12] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %305 = reshape(%304, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), float64] */;
    %306 = @func_4318(%305) /* ty=(Tensor[(16, 12, 2), int64], Tensor[(336), int32]) */;
    %307 = %303.1;
    %308 = %306.0;
    (%307, %308, meta[relay.Constant][12] /* ty=Tensor[(384), float64] */)
  };
  %309() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(16, 12, 2), int64], Tensor[(384), float64]) */
}

def @func_11917() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8], Tensor[(?, 12, 2), float32]) {
  %317 = fn () -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8], Tensor[(?, 12, 2), float32]) {
    %310 = @func_4128() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(1440), int8], Tensor[(11, 12, 2), bool], Tensor[(264), float32]) */;
    %311 = @func_1537() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %312 = @func_6883() /* ty=(Tensor[(?, 12, 2), float32],) */;
    %313 = %310.0;
    %314 = %311.0;
    %315 = @func_8934() /* ty=Tensor[(?, 12, 2), int8] */;
    %316 = %312.0;
    (%313, %314, %315, %316)
  };
  %317() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8], Tensor[(?, 12, 2), float32]) */
}

def @func_1939(%var_1936: Tensor[(156), float64], %var_1937: Tensor[(330), float64], %var_1938: Tensor[(10, 144), int8]) -> (Tensor[(4, 13, 3), float64], Tensor[(156), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), float64], Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(10, 144), int8]) {
  %353 = fn (%var_1854: Tensor[(156), float64], %var_1886: Tensor[(330), float64], %var_1933: Tensor[(10, 144), int8]) -> (Tensor[(4, 13, 3), float64], Tensor[(156), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), float64], Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(10, 144), int8]) {
    %318 = cast(%var_1854, dtype="float64") /* ty=Tensor[(156), float64] */;
    %319 = reshape(%318, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float64] */;
    %320 = @func_472(%319) /* ty=(Tensor[(4, 13, 3), float64],) */;
    %321 = cast(%var_1886, dtype="float64") /* ty=Tensor[(330), float64] */;
    %322 = reshape(%321, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float64] */;
    %323 = @func_42(%322) /* ty=(Tensor[(11, 6, 5), float64],) */;
    %324 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
    %325 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %326 = cast(%var_1854, dtype="float64") /* ty=Tensor[(156), float64] */;
    %327 = reshape(%326, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float64] */;
    %328 = @func_472(%327) /* ty=(Tensor[(4, 13, 3), float64],) */;
    %329 = @func_1537() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %330 = %329.0;
    %331 = cast(%330, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
    %332 = rsqrt(%331) /* ty=Tensor[(1, 12, 2), float64] */;
    %333 = cast(%330, dtype="int8") /* ty=Tensor[(1, 12, 2), int8] */;
    %334 = shape_of(%332, dtype="int32") /* ty=Tensor[(3), int32] */;
    %335 = cast(%332, dtype="int8") /* ty=Tensor[(1, 12, 2), int8] */;
    %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %337 = maximum(%335, %336) /* ty=Tensor[(?, 12, 2), int8] */;
    %338 = cast(%337, dtype="float64") /* ty=Tensor[(?, 12, 2), float64] */;
    %339 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
    %340 = cast(%var_1933, dtype="int8") /* ty=Tensor[(10, 144), int8] */;
    %341 = reshape(%340, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
    %342 = @func_1327(%341) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) */;
    %343 = %320.0;
    %344 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
    %345 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
    %346 = %323.0;
    %347 = %324.1;
    %348 = %325.0;
    %349 = %328.0;
    %350 = sqrt(%338) /* ty=Tensor[(?, 12, 2), float64] */;
    %351 = %339.0;
    %352 = %342.1;
    (%343, %var_1854, %344, %345, %346, %var_1886, %347, %348, %349, %350, %351, %352, %var_1933)
  };
  %353(%var_1936, %var_1937, %var_1938) /* ty=(Tensor[(4, 13, 3), float64], Tensor[(156), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(11, 6, 5), float64], Tensor[(330), float64], Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), float64], Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(10, 144), int8]) */
}

def @func_2883() -> (Tensor[(1, 12, 2), float64],) {
  %356 = fn () -> (Tensor[(1, 12, 2), float64],) {
    %354 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %355 = %354.0;
    (%355,)
  };
  %356() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_2138(%var_2136: Tensor[(1, 72), float64]) -> (Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(1, 72), float64]) {
  @func_2135(%var_2136) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(1, 72), float64]) */
}

def @func_10399() -> Tensor[(?, 12, 2), bool] {
  @func_10397() /* ty=Tensor[(?, 12, 2), bool] */
}

def @func_9100() -> Tensor[(?, 12, 2), int8] {
  @func_8934() /* ty=Tensor[(?, 12, 2), int8] */
}

def @func_9820() -> Tensor[(1, 12, 2), float64] {
  @func_9818() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_7176() -> Tensor[(1, 12, 2), float64] {
  @func_7174() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_5326() -> (Tensor[(?, 12, 2), int8], Tensor[(336), int32]) {
  %361 = fn () -> (Tensor[(?, 12, 2), int8], Tensor[(336), int32]) {
    %357 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
    %358 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
    %359 = %357.0;
    %360 = %358.2;
    (%359, %360)
  };
  %361() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(336), int32]) */
}

def @func_7244() -> (Tensor[(1, 12, 2), float64], Tensor[(156, 1), float64], Tensor[(1, 12, 2), float64]) {
  %368 = fn () -> (Tensor[(1, 12, 2), float64], Tensor[(156, 1), float64], Tensor[(1, 12, 2), float64]) {
    %362 = @func_958() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %363 = @func_4904() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), int8], Tensor[(1152), int64], Tensor[(156, 1), float64]) */;
    %364 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %365 = %362.0;
    %366 = %363.4;
    %367 = %364.0;
    (%365, %366, %367)
  };
  %368() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(156, 1), float64], Tensor[(1, 12, 2), float64]) */
}

def @func_7835() -> (Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  %369 = @func_7723() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %370 = %369.0;
  %371 = @func_7174() /* ty=Tensor[(1, 12, 2), float64] */;
  (%370, %371)
}

def @func_11354() -> (Tensor[(9, 13, 11), float32], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  %372 = @func_9370() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(9, 13, 11), float32], Tensor[(?, 12, 2), uint16]) */;
  %373 = @func_8193() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %374 = @func_10553() /* ty=(Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) */;
  %375 = %372.1;
  %376 = %373.0;
  %377 = @func_10397() /* ty=Tensor[(?, 12, 2), bool] */;
  %378 = %374.1;
  (%375, %376, %377, %378)
}

def @func_2775() -> (Tensor[(?, 12, 2), int8],) {
  @func_2773() /* ty=(Tensor[(?, 12, 2), int8],) */
}

def @func_2922() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) {
  @func_2920() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */
}

def @func_10732(%var_10731: Tensor[(5, 14, 2), float32]) -> (Tensor[(5, 14, 2), float32],) {
  %381 = fn (%var_10723: Tensor[(5, 14, 2), float32]) -> (Tensor[(5, 14, 2), float32],) {
    %379 = cast(%var_10723, dtype="float32") /* ty=Tensor[(5, 14, 2), float32] */;
    %380 = sqrt(%379) /* ty=Tensor[(5, 14, 2), float32] */;
    (%380,)
  };
  %381(%var_10731) /* ty=(Tensor[(5, 14, 2), float32],) */
}

def @func_2135(%var_2133: Tensor[(1, 72), float64]) -> (Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(1, 72), float64]) {
  %382 = cast(%var_2133, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %383 = reshape(%382, newshape=[3, 12, 2]) /* ty=Tensor[(3, 12, 2), float64] */;
  %384 = @func_810(%383) /* ty=(Tensor[(3, 12, 2), float32],) */;
  %385 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  %386 = %384.0;
  (%385, %386, %var_2133)
}

def @func_4758() -> Tensor[(1, 12, 2), float32] {
  @func_4756() /* ty=Tensor[(1, 12, 2), float32] */
}

def @func_10207() -> Tensor[(1, 12, 2), float64] {
  %388 = fn () -> Tensor[(1, 12, 2), float64] {
    %387 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %387.1
  };
  %388() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_11452() -> Tensor[(5, 4, 10), float64] {
  %390 = fn () -> Tensor[(5, 4, 10), float64] {
    %389 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 4, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 4, 10), float64] */;
    cos(%389) /* ty=Tensor[(5, 4, 10), float64] */
  };
  %390() /* ty=Tensor[(5, 4, 10), float64] */
}

def @func_8255() -> (Tensor[(1, 12, 2), float64],) {
  @func_8253() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_7676(%var_7674: Tensor[(7, 12, 2), int8], %var_7675: Tensor[(7, 12, 2), uint16]) -> (Tensor[(336), int32], Tensor[(10, 144), int8], Tensor[(7, 12, 2), uint32]) {
  @func_7672(%var_7674, %var_7675) /* ty=(Tensor[(336), int32], Tensor[(10, 144), int8], Tensor[(7, 12, 2), uint32]) */
}

def @func_3715() -> Tensor[(1, 12, 2), float64] {
  @func_3356() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_9782() -> Tensor[(?, 12, 2), bool] {
  @func_9780() /* ty=Tensor[(?, 12, 2), bool] */
}

def @func_6134() -> (Tensor[(1, 12, 2), float64],) {
  %395 = fn () -> (Tensor[(1, 12, 2), float64],) {
    %391 = @func_958() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %392 = %391.0;
    %393 = cast(%392, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
    %394 = atan(%393) /* ty=Tensor[(1, 12, 2), float64] */;
    (%394,)
  };
  %395() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_6668(%var_6667: Tensor[(14, 5, 6), uint16]) -> (Tensor[(14, 5, 6), uint16],) {
  %401 = fn (%var_6661: Tensor[(14, 5, 6), uint16]) -> (Tensor[(14, 5, 6), uint16],) {
    %396 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 5, 6), uint16] */, dtype="uint16") /* ty=Tensor[(14, 5, 6), uint16] */;
    %397 = shape_of(%var_6661, dtype="int32") /* ty=Tensor[(3), int32] */;
    %398 = cast(%var_6661, dtype="uint16") /* ty=Tensor[(14, 5, 6), uint16] */;
    %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %400 = bitwise_or(%398, %399) /* ty=Tensor[(14, 5, 6), uint16] */;
    (%400,)
  };
  %401(%var_6667) /* ty=(Tensor[(14, 5, 6), uint16],) */
}

def @func_11635() -> (Tensor[(?, 12, 2), bool],) {
  @func_11633() /* ty=(Tensor[(?, 12, 2), bool],) */
}

def @func_960() -> (Tensor[(1, 12, 2), float64],) {
  @func_958() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_10397() -> Tensor[(?, 12, 2), bool] {
  @func_6789() /* ty=Tensor[(?, 12, 2), bool] */
}

def @func_8601() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), uint16], Tensor[(156, 2), float32], Tensor[(1, 12, 2), float32]) {
  %402 = @func_4447() /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %403 = cast(meta[relay.Constant][15] /* ty=Tensor[(156, 2), float32] */, dtype="float32") /* ty=Tensor[(156, 2), float32] */;
  %404 = reshape(%403, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %405 = @func_1695(%404) /* ty=(Tensor[(14, 12, 2), bool], Tensor[(9, 10, 16), int8], Tensor[(1440), int8], Tensor[(?, 12, 2), int8], Tensor[(336), int32], Tensor[(312), float32], Tensor[(?, 12, 2), uint16], Tensor[(1, 12, 2), float64]) */;
  %406 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %407 = %402.2;
  %408 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
  %409 = %405.6;
  %410 = %406.0;
  (%407, %408, %409, meta[relay.Constant][15] /* ty=Tensor[(156, 2), float32] */, %410)
}

def @func_11769() -> Tensor[(?, 12, 2), bool] {
  @func_11767() /* ty=Tensor[(?, 12, 2), bool] */
}

def @func_10587(%var_10586: Tensor[(384, 1), float64]) -> (Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(48, 1), uint64], Tensor[(384, 1), float64]) {
  %419 = fn (%var_10581: Tensor[(384, 1), float64]) -> (Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(48, 1), uint64], Tensor[(384, 1), float64]) {
    %411 = @func_6133() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %412 = cast(meta[relay.Constant][16] /* ty=Tensor[(48, 1), uint64] */, dtype="uint64") /* ty=Tensor[(48, 1), uint64] */;
    %413 = cast(%var_10581, dtype="float64") /* ty=Tensor[(384, 1), float64] */;
    %414 = reshape(%412, newshape=[2, 12, 2]) /* ty=Tensor[(2, 12, 2), uint64] */;
    %415 = reshape(%413, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), float64] */;
    %416 = @func_6322(%414, %415) /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32], Tensor[(2, 12, 2), bool], Tensor[(16, 12, 2), float32]) */;
    %417 = %411.0;
    %418 = %416.0;
    (%417, %418, meta[relay.Constant][16] /* ty=Tensor[(48, 1), uint64] */, %var_10581)
  };
  %419(%var_10586) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(48, 1), uint64], Tensor[(384, 1), float64]) */
}

def @func_1592() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %420 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %421 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  %422 = %420.0;
  (%421, %422)
}

def @func_1127() -> (Tensor[(1, 12, 2), float32],) {
  %423 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %424 = %423.0;
  %425 = cast(%424, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %426 = tan(%425) /* ty=Tensor[(1, 12, 2), float32] */;
  (%426,)
}

def @func_7672(%var_7639: Tensor[(7, 12, 2), int8], %var_7650: Tensor[(7, 12, 2), uint16]) -> (Tensor[(336), int32], Tensor[(10, 144), int8], Tensor[(7, 12, 2), uint32]) {
  %427 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 144), int8] */, dtype="int8") /* ty=Tensor[(10, 144), int8] */;
  %428 = reshape(%427, newshape=[360, 4]) /* ty=Tensor[(360, 4), int8] */;
  %429 = @func_2078(%428) /* ty=(Tensor[(336), int32], Tensor[(?, 12, 2), int32], Tensor[(1, 12, 2), float32], Tensor[(360, 4), int8], Tensor[(3, 12, 2), float32], Tensor[(6, 12), float64]) */;
  %430 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %431 = %430.0;
  %432 = cast(%431, dtype="uint16") /* ty=Tensor[(?, 12, 2), uint16] */;
  %433 = cast(%var_7639, dtype="uint16") /* ty=Tensor[(7, 12, 2), uint16] */;
  %434 = left_shift(%432, %433) /* ty=Tensor[(7, 12, 2), uint16] */;
  %435 = cast(%var_7650, dtype="uint32") /* ty=Tensor[(7, 12, 2), uint32] */;
  %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%434, dtype="uint32") /* ty=Tensor[(7, 12, 2), uint32] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %439 = %429.0;
  %440 = bitwise_and(%437, %438) /* ty=Tensor[(7, 12, 2), uint32] */;
  (%439, meta[relay.Constant][17] /* ty=Tensor[(10, 144), int8] */, %440)
}

def @main(%var_12137: Tensor[(110, 6), float32]) -> (Tensor[(110, 6), bool],) {
  %441 = @func_5028() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(12, 11, 5), bool], Tensor[(110, 6), float32]) */;
  %442 = %441.2;
  %443 = cast(%var_12137, dtype="bool") /* ty=Tensor[(110, 6), bool] */;
  %444 = shape_of(%442, dtype="int32") /* ty=Tensor[(2), int32] */;
  %445 = cast(%442, dtype="bool") /* ty=Tensor[(110, 6), bool] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %447 = logical_and(%445, %446) /* ty=Tensor[(110, 6), bool] */;
  (%447,)
}

def @func_240(%var_238: Tensor[(14, 12, 2), int32], %var_239: Tensor[(14, 12, 2), int32]) -> (Tensor[(14, 12, 2), bool],) {
  %453 = fn (%var_232: Tensor[(14, 12, 2), int32], %var_233: Tensor[(14, 12, 2), int32]) -> (Tensor[(14, 12, 2), bool],) {
    %448 = cast(%var_233, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
    %449 = shape_of(%var_232, dtype="int32") /* ty=Tensor[(3), int32] */;
    %450 = cast(%var_232, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %452 = not_equal(%450, %451) /* ty=Tensor[(14, 12, 2), bool] */;
    (%452,)
  };
  %453(%var_238, %var_239) /* ty=(Tensor[(14, 12, 2), bool],) */
}

def @func_11888() -> (Tensor[(9, 13, 11), float32],) {
  %456 = fn () -> (Tensor[(9, 13, 11), float32],) {
    %454 = @func_9445() /* ty=(Tensor[(9, 13, 11), float32],) */;
    %455 = %454.0;
    (%455,)
  };
  %456() /* ty=(Tensor[(9, 13, 11), float32],) */
}

def @func_1203() -> (Tensor[(1, 12, 2), float64],) {
  %459 = fn () -> (Tensor[(1, 12, 2), float64],) {
    %457 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %458 = %457.1;
    (%458,)
  };
  %459() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_105(%var_103: Tensor[(12, 11, 5), float32]) -> (Tensor[(12, 11, 5), bool],) {
  @func_102(%var_103) /* ty=(Tensor[(12, 11, 5), bool],) */
}

def @func_9975() -> (Tensor[(1, 12, 2), float64], Tensor[(990), float64]) {
  %464 = fn () -> (Tensor[(1, 12, 2), float64], Tensor[(990), float64]) {
    %460 = @func_5026() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(12, 11, 5), bool], Tensor[(110, 6), float32]) */;
    %461 = @func_7405() /* ty=(Tensor[(1, 12, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(990), float64]) */;
    %462 = %460.0;
    %463 = %461.2;
    (%462, %463)
  };
  %464() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(990), float64]) */
}

def @func_45(%var_43: Tensor[(11, 6, 5), float64]) -> (Tensor[(11, 6, 5), float64],) {
  @func_42(%var_43) /* ty=(Tensor[(11, 6, 5), float64],) */
}

def @func_7792() -> Tensor[(1, 12, 2), float64] {
  %465 = fn () -> Tensor[(1, 12, 2), float64] {
    @func_517() /* ty=Tensor[(1, 12, 2), float64] */
  };
  %465() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_4129() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(1440), int8], Tensor[(11, 12, 2), bool], Tensor[(264), float32]) {
  %478 = fn () -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(1440), int8], Tensor[(11, 12, 2), bool], Tensor[(264), float32]) {
    %466 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
    %467 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
    %468 = cast(meta[relay.Constant][18] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %469 = reshape(%468, newshape=[360, 4]) /* ty=Tensor[(360, 4), int8] */;
    %470 = @func_2078(%469) /* ty=(Tensor[(336), int32], Tensor[(?, 12, 2), int32], Tensor[(1, 12, 2), float32], Tensor[(360, 4), int8], Tensor[(3, 12, 2), float32], Tensor[(6, 12), float64]) */;
    %471 = cast(meta[relay.Constant][19] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
    %472 = reshape(%471, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float32] */;
    %473 = @func_3626(%472) /* ty=(Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(11, 12, 2), bool]) */;
    %474 = %466.0;
    %475 = %467.0;
    %476 = %470.4;
    %477 = %473.2;
    (%474, %475, %476, meta[relay.Constant][18] /* ty=Tensor[(1440), int8] */, %477, meta[relay.Constant][19] /* ty=Tensor[(264), float32] */)
  };
  %478() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(1440), int8], Tensor[(11, 12, 2), bool], Tensor[(264), float32]) */
}

def @func_3846(%var_3844: Tensor[(12, 8, 12), int64]) -> (Tensor[(?, 12, 2), int8], Tensor[(12, 8, 12), float64], Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), bool], Tensor[(336), int32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
  @func_3843(%var_3844) /* ty=(Tensor[(?, 12, 2), int8], Tensor[(12, 8, 12), float64], Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), bool], Tensor[(336), int32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */
}

def @func_8253() -> (Tensor[(1, 12, 2), float64],) {
  %479 = @func_8193() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %480 = %479.0;
  (%480,)
}

def @func_5198(%var_5196: Tensor[(12, 4, 5), float32], %var_5197: Tensor[(12, 4, 5), float32]) -> (Tensor[(12, 4, 5), bool], Tensor[(4, 13, 3), float64], Tensor[(156), float64]) {
  @func_5194(%var_5196, %var_5197) /* ty=(Tensor[(12, 4, 5), bool], Tensor[(4, 13, 3), float64], Tensor[(156), float64]) */
}

def @func_8149() -> (Tensor[(1, 12, 2), float64],) {
  %481 = @func_5051() /* ty=Tensor[(1, 12, 2), float64] */;
  (%481,)
}

def @func_4008(%var_4006: Tensor[(3, 12, 2), int8]) -> (Tensor[(3, 12, 2), uint8], Tensor[(1, 12, 2), float64]) {
  @func_4005(%var_4006) /* ty=(Tensor[(3, 12, 2), uint8], Tensor[(1, 12, 2), float64]) */
}

def @func_1537() -> (Tensor[(1, 12, 2), float64],) {
  %482 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  (%482,)
}

def @func_1396(%var_1394: Tensor[(10, 6, 7), float64]) -> (Tensor[(10, 6, 7), float64],) {
  @func_1393(%var_1394) /* ty=(Tensor[(10, 6, 7), float64],) */
}

def @func_7294() -> Tensor[(1, 12, 2), float32] {
  @func_7292() /* ty=Tensor[(1, 12, 2), float32] */
}

def @func_10764() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
  %487 = fn () -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
    %483 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
    %484 = @func_8536() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %485 = %483.0;
    %486 = %484.1;
    (%485, %486)
  };
  %487() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */
}

def @func_810(%var_803: Tensor[(3, 12, 2), float64]) -> (Tensor[(3, 12, 2), float32],) {
  %488 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %489 = %488.0;
  %490 = cast(%489, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %491 = cast(%var_803, dtype="float32") /* ty=Tensor[(3, 12, 2), float32] */;
  %492 = floor_mod(%490, %491) /* ty=Tensor[(3, 12, 2), float32] */;
  (%492,)
}

def @func_6789() -> Tensor[(?, 12, 2), bool] {
  %493 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %494 = %493.0;
  %495 = @func_4868() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %496 = %495.0;
  %497 = cast(%496, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %498 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(%494, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%499, %500) /* ty=Tensor[(?, 12, 2), bool] */
}

def @func_8840() -> Tensor[(?, 12, 2), int8] {
  @func_8838() /* ty=Tensor[(?, 12, 2), int8] */
}

def @func_10962() -> Tensor[(1, 12, 2), float64] {
  %502 = fn () -> Tensor[(1, 12, 2), float64] {
    %501 = @func_8871() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %501.0
  };
  %502() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_1129() -> (Tensor[(1, 12, 2), float32],) {
  @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */
}

def @func_11966() -> (Tensor[(1, 12, 2), float64], Tensor[(5, 14, 2), float32], Tensor[(1, 140), float32]) {
  %508 = fn () -> (Tensor[(1, 12, 2), float64], Tensor[(5, 14, 2), float32], Tensor[(1, 140), float32]) {
    %503 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 140), float32] */, dtype="float32") /* ty=Tensor[(1, 140), float32] */;
    %504 = reshape(%503, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), float32] */;
    %505 = @func_10730(%504) /* ty=(Tensor[(5, 14, 2), float32],) */;
    %506 = @func_9123() /* ty=Tensor[(1, 12, 2), float64] */;
    %507 = %505.0;
    (%506, %507, meta[relay.Constant][20] /* ty=Tensor[(1, 140), float32] */)
  };
  %508() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(5, 14, 2), float32], Tensor[(1, 140), float32]) */
}

def @func_6683() -> (Tensor[(168), bool],) {
  %509 = @func_4729() /* ty=(Tensor[(168), bool],) */;
  %510 = %509.0;
  (%510,)
}

def @func_7405() -> (Tensor[(1, 12, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(990), float64]) {
  %511 = cast(meta[relay.Constant][21] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %512 = reshape(%511, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), float64] */;
  %513 = @func_5711(%512) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(?, 12, 2), bool]) */;
  %514 = @func_7292() /* ty=Tensor[(1, 12, 2), float32] */;
  %515 = %513.0;
  (%514, %515, meta[relay.Constant][21] /* ty=Tensor[(990), float64] */)
}

def @func_9124() -> Tensor[(1, 12, 2), float64] {
  %517 = fn () -> Tensor[(1, 12, 2), float64] {
    %516 = @func_5002() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */;
    %516.1
  };
  %517() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_9371() -> (Tensor[(1, 12, 2), float64], Tensor[(9, 13, 11), float32], Tensor[(?, 12, 2), uint16]) {
  %525 = fn () -> (Tensor[(1, 12, 2), float64], Tensor[(9, 13, 11), float32], Tensor[(?, 12, 2), uint16]) {
    %518 = @func_8253() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %519 = @func_6193() /* ty=Tensor[(9, 13, 11), float32] */;
    %520 = cast(%519, dtype="float32") /* ty=Tensor[(9, 13, 11), float32] */;
    %521 = @func_8601() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), uint16], Tensor[(156, 2), float32], Tensor[(1, 12, 2), float32]) */;
    %522 = %518.0;
    %523 = exp(%520) /* ty=Tensor[(9, 13, 11), float32] */;
    %524 = %521.2;
    (%522, %523, %524)
  };
  %525() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(9, 13, 11), float32], Tensor[(?, 12, 2), uint16]) */
}

def @func_5004() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
  @func_5002() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */
}

def @func_5002() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
  %526 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %527 = %526.0;
  %528 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
  (%527, %528)
}

def @func_6833() -> (Tensor[(?, 12, 2), int8], Tensor[(?, 8, 12), int64]) {
  @func_6831() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(?, 8, 12), int64]) */
}

def @func_6224() -> (Tensor[(1, 12, 2), float64],) {
  %529 = @func_2920() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
  %530 = %529.1;
  (%530,)
}

def @func_9232() -> (Tensor[(?, 12, 2), bool],) {
  @func_9230() /* ty=(Tensor[(?, 12, 2), bool],) */
}

def @func_3628(%var_3627: Tensor[(11, 12, 2), float32]) -> (Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(11, 12, 2), bool]) {
  %543 = fn (%var_3600: Tensor[(11, 12, 2), float32]) -> (Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(11, 12, 2), bool]) {
    %531 = @func_2577() /* ty=(Tensor[(1, 12, 2), float32],) */;
    %532 = %531.0;
    %533 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
    %534 = cast(%533, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
    %535 = shape_of(%532, dtype="int32") /* ty=Tensor[(3), int32] */;
    %536 = cast(%532, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
    %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %538 = cast(%532, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
    %539 = cast(%var_3600, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
    %540 = not_equal(%536, %537) /* ty=Tensor[(?, 12, 2), bool] */;
    %541 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
    %542 = greater_equal(%538, %539) /* ty=Tensor[(11, 12, 2), bool] */;
    (%540, %541, %542)
  };
  %543(%var_3627) /* ty=(Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(11, 12, 2), bool]) */
}

def @func_10553() -> (Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  %544 = @func_7723() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %545 = @func_10355() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32]) */;
  %546 = %544.0;
  %547 = %545.3;
  (%546, %547)
}

def @func_10193() -> Tensor[(1, 12, 2), float32] {
  %549 = fn () -> Tensor[(1, 12, 2), float32] {
    %548 = @func_4128() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(1440), int8], Tensor[(11, 12, 2), bool], Tensor[(264), float32]) */;
    %548.1
  };
  %549() /* ty=Tensor[(1, 12, 2), float32] */
}

def @func_8989(%var_8987: Tensor[(36, 2), float64], %var_8988: Tensor[(36, 2), float64]) -> (Tensor[(?, 12, 2), int8], Tensor[(3, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(36, 2), float64], Tensor[(36, 2), float32]) {
  %565 = fn (%var_8947: Tensor[(36, 2), float64], %var_8971: Tensor[(36, 2), float64]) -> (Tensor[(?, 12, 2), int8], Tensor[(3, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(36, 2), float64], Tensor[(36, 2), float32]) {
    %550 = @func_8908() /* ty=(Tensor[(?, 12, 2), int8],) */;
    %551 = cast(%var_8947, dtype="float64") /* ty=Tensor[(36, 2), float64] */;
    %552 = reshape(%551, newshape=[3, 12, 2]) /* ty=Tensor[(3, 12, 2), float64] */;
    %553 = @func_810(%552) /* ty=(Tensor[(3, 12, 2), float32],) */;
    %554 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %555 = cast(%var_8971, dtype="float64") /* ty=Tensor[(36, 2), float64] */;
    %556 = shape_of(%var_8947, dtype="int32") /* ty=Tensor[(2), int32] */;
    %557 = cast(%var_8947, dtype="float64") /* ty=Tensor[(36, 2), float64] */;
    %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %559 = cast(%var_8971, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
    %560 = %550.0;
    %561 = %553.0;
    %562 = %554.0;
    %563 = multiply(%557, %558) /* ty=Tensor[(36, 2), float64] */;
    %564 = acosh(%559) /* ty=Tensor[(36, 2), float32] */;
    (%560, %561, %562, %563, %564)
  };
  %565(%var_8987, %var_8988) /* ty=(Tensor[(?, 12, 2), int8], Tensor[(3, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(36, 2), float64], Tensor[(36, 2), float32]) */
}

def @func_8032(%var_8027: Tensor[(5, 10, 14), int32], %var_8028: Tensor[(5, 10, 14), int32]) -> (Tensor[(5, 10, 14), int32],) {
  %566 = cast(%var_8028, dtype="int32") /* ty=Tensor[(5, 10, 14), int32] */;
  %567 = shape_of(%var_8027, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(%var_8027, dtype="int32") /* ty=Tensor[(5, 10, 14), int32] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %570 = add(%568, %569) /* ty=Tensor[(5, 10, 14), int32] */;
  (%570,)
}

def @func_8102() -> (Tensor[(?, 12, 2), bool],) {
  %572 = fn () -> (Tensor[(?, 12, 2), bool],) {
    %571 = @func_6789() /* ty=Tensor[(?, 12, 2), bool] */;
    (%571,)
  };
  %572() /* ty=(Tensor[(?, 12, 2), bool],) */
}

def @func_2683() -> Tensor[(1, 12, 2), float64] {
  @func_1472() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_8296(%var_8295: Tensor[(156, 2), float32]) -> (Tensor[(1, 12, 2), float32], Tensor[(660), float32], Tensor[(156, 2), float32], Tensor[(1, 72), float64], Tensor[(72), float64]) {
  %582 = fn (%var_8281: Tensor[(156, 2), float32]) -> (Tensor[(1, 12, 2), float32], Tensor[(660), float32], Tensor[(156, 2), float32], Tensor[(1, 72), float64], Tensor[(72), float64]) {
    %573 = cast(%var_8281, dtype="float32") /* ty=Tensor[(156, 2), float32] */;
    %574 = reshape(%573, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), float32] */;
    %575 = @func_884(%574) /* ty=(Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) */;
    %576 = cast(meta[relay.Constant][22] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %577 = reshape(%576, newshape=[1, 72]) /* ty=Tensor[(1, 72), float64] */;
    %578 = @func_2135(%577) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(1, 72), float64]) */;
    %579 = @func_4804() /* ty=Tensor[(1, 12, 2), float32] */;
    %580 = %575.4;
    %581 = %578.2;
    (%579, %580, %var_8281, %581, meta[relay.Constant][22] /* ty=Tensor[(72), float64] */)
  };
  %582(%var_8295) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(660), float32], Tensor[(156, 2), float32], Tensor[(1, 72), float64], Tensor[(72), float64]) */
}

def @func_11825(%var_11824: Tensor[(5, 12, 2), float32]) -> Tensor[(5, 12, 2), int16] {
  %591 = fn (%var_11817: Tensor[(5, 12, 2), float32]) -> Tensor[(5, 12, 2), int16] {
    %583 = @func_3895() /* ty=(Tensor[(5, 12, 2), uint16], Tensor[(7, 12, 2), int32], Tensor[(168), bool]) */;
    %584 = %583.0;
    %585 = cast(%584, dtype="float32") /* ty=Tensor[(5, 12, 2), float32] */;
    %586 = exp(%585) /* ty=Tensor[(5, 12, 2), float32] */;
    %587 = cast(%var_11817, dtype="int16") /* ty=Tensor[(5, 12, 2), int16] */;
    %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
    %589 = cast(%586, dtype="int16") /* ty=Tensor[(5, 12, 2), int16] */;
    %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_and(%589, %590) /* ty=Tensor[(5, 12, 2), int16] */
  };
  %591(%var_11824) /* ty=Tensor[(5, 12, 2), int16] */
}

def @func_518() -> Tensor[(1, 12, 2), float64] {
  %593 = fn () -> Tensor[(1, 12, 2), float64] {
    %592 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %592.0
  };
  %593() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_7174() -> Tensor[(1, 12, 2), float64] {
  %594 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %594.0
}

def @func_8193() -> (Tensor[(1, 12, 2), float64],) {
  %595 = @func_1472() /* ty=Tensor[(1, 12, 2), float64] */;
  (%595,)
}

def @func_3357() -> Tensor[(1, 12, 2), float64] {
  %597 = fn () -> Tensor[(1, 12, 2), float64] {
    %596 = @func_2920() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
    %596.1
  };
  %597() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_2578() -> (Tensor[(1, 12, 2), float32],) {
  %600 = fn () -> (Tensor[(1, 12, 2), float32],) {
    %598 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
    %599 = %598.1;
    (%599,)
  };
  %600() /* ty=(Tensor[(1, 12, 2), float32],) */
}

def @func_8206() -> Tensor[(1, 12, 2), float64] {
  %601 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %601.1
}

def @func_9467() -> (Tensor[(1, 12, 2), float64],) {
  %604 = fn () -> (Tensor[(1, 12, 2), float64],) {
    %602 = @func_1202() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %603 = %602.0;
    (%603,)
  };
  %604() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_1463() -> Tensor[(?, 12, 2), bool] {
  %613 = fn () -> Tensor[(?, 12, 2), bool] {
    %605 = @func_1202() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %606 = %605.0;
    %607 = cast(%606, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
    %608 = acosh(%607) /* ty=Tensor[(1, 12, 2), float32] */;
    %609 = cast(%608, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
    %610 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
    %611 = cast(%606, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
    %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%611, %612) /* ty=Tensor[(?, 12, 2), bool] */
  };
  %613() /* ty=Tensor[(?, 12, 2), bool] */
}

def @func_2078(%var_2059: Tensor[(360, 4), int8]) -> (Tensor[(336), int32], Tensor[(?, 12, 2), int32], Tensor[(1, 12, 2), float32], Tensor[(360, 4), int8], Tensor[(3, 12, 2), float32], Tensor[(6, 12), float64]) {
  %614 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %615 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %616 = %615.1;
  %617 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
  %618 = cast(%617, dtype="int32") /* ty=Tensor[(?, 12, 2), int32] */;
  %619 = shape_of(%616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%616, dtype="int32") /* ty=Tensor[(1, 12, 2), int32] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %622 = cast(%var_2059, dtype="int8") /* ty=Tensor[(360, 4), int8] */;
  %623 = reshape(%622, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %624 = @func_1327(%623) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) */;
  %625 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %626 = reshape(%625, newshape=[3, 12, 2]) /* ty=Tensor[(3, 12, 2), float64] */;
  %627 = @func_810(%626) /* ty=(Tensor[(3, 12, 2), float32],) */;
  %628 = %614.2;
  %629 = add(%620, %621) /* ty=Tensor[(?, 12, 2), int32] */;
  %630 = %624.0;
  %631 = %627.0;
  (%628, %629, %630, %var_2059, %631, meta[relay.Constant][23] /* ty=Tensor[(6, 12), float64] */)
}

def @func_6461(%var_6458: Tensor[(10, 12, 2), int8], %var_6459: Tensor[(10, 12, 2), uint64], %var_6460: Tensor[(10, 12, 2), float64]) -> (Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(10, 12, 2), float32], Tensor[(10, 12, 2), bool]) {
  @func_6456(%var_6458, %var_6459, %var_6460) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(10, 12, 2), float32], Tensor[(10, 12, 2), bool]) */
}

def @func_446() -> (Tensor[(1, 12, 2), float64],) {
  @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_472(%var_468: Tensor[(4, 13, 3), float64]) -> (Tensor[(4, 13, 3), float64],) {
  %632 = cast(%var_468, dtype="float64") /* ty=Tensor[(4, 13, 3), float64] */;
  %633 = log(%632) /* ty=Tensor[(4, 13, 3), float64] */;
  (%633,)
}

def @func_8603() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), uint16], Tensor[(156, 2), float32], Tensor[(1, 12, 2), float32]) {
  @func_8601() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), uint16], Tensor[(156, 2), float32], Tensor[(1, 12, 2), float32]) */
}

def @func_586() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %637 = fn () -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
    %634 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %635 = %634.0;
    %636 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
    (%635, %636)
  };
  %637() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */
}

def @func_7912() -> Tensor[(?, 12, 2), float32] {
  %639 = fn () -> Tensor[(?, 12, 2), float32] {
    %638 = @func_5356() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32]) */;
    %638.1
  };
  %639() /* ty=Tensor[(?, 12, 2), float32] */
}

def @func_8934() -> Tensor[(?, 12, 2), int8] {
  %640 = @func_8908() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %640.0
}

def @func_4756() -> Tensor[(1, 12, 2), float32] {
  %641 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %641.0
}

def @func_1539() -> (Tensor[(1, 12, 2), float64],) {
  @func_1537() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_3224(%var_3222: Tensor[(12, 12, 8), int64]) -> (Tensor[(12, 12, 8), int64], Tensor[(336), int32]) {
  @func_3221(%var_3222) /* ty=(Tensor[(12, 12, 8), int64], Tensor[(336), int32]) */
}

def @func_9558() -> Tensor[(?, 12, 2), bool] {
  %642 = @func_7835() /* ty=(Tensor[(?, 12, 2), bool], Tensor[(1, 12, 2), float64]) */;
  %642.0
}

def @func_8871() -> (Tensor[(1, 12, 2), float64],) {
  %643 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %644 = %643.1;
  (%644,)
}

def @func_10374(%var_10373: Tensor[(10, 12, 2), float32]) -> Tensor[(10, 12, 2), bool] {
  %649 = fn (%var_10361: Tensor[(10, 12, 2), float32]) -> Tensor[(10, 12, 2), bool] {
    %645 = @func_8601() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), uint16], Tensor[(156, 2), float32], Tensor[(1, 12, 2), float32]) */;
    %646 = %645.4;
    %647 = cast(%646, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
    %648 = cast(%var_10361, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
    equal(%647, %648) /* ty=Tensor[(10, 12, 2), bool] */
  };
  %649(%var_10373) /* ty=Tensor[(10, 12, 2), bool] */
}

def @func_11179(%var_11177: Tensor[(72), float64]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(72), float64], Tensor[(4, 13, 3), float64], Tensor[(9, 13, 11), float32]) {
  @func_11176(%var_11177) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(72), float64], Tensor[(4, 13, 3), float64], Tensor[(9, 13, 11), float32]) */
}

def @func_4965(%var_4963: Tensor[(264), float32]) -> (Tensor[(1, 12, 2), float64], Tensor[(11, 12, 2), uint8], Tensor[(264), float32]) {
  @func_4962(%var_4963) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(11, 12, 2), uint8], Tensor[(264), float32]) */
}

def @func_2345(%var_2343: Tensor[(3, 9, 2), int8], %var_2344: Tensor[(3, 9, 2), int8]) -> (Tensor[(3, 9, 2), bool], Tensor[(3, 9, 2), float32]) {
  %657 = fn (%var_2298: Tensor[(3, 9, 2), int8], %var_2299: Tensor[(3, 9, 2), int8]) -> (Tensor[(3, 9, 2), bool], Tensor[(3, 9, 2), float32]) {
    %650 = cast(%var_2299, dtype="bool") /* ty=Tensor[(3, 9, 2), bool] */;
    %651 = shape_of(%var_2298, dtype="int32") /* ty=Tensor[(3), int32] */;
    %652 = cast(%var_2298, dtype="bool") /* ty=Tensor[(3, 9, 2), bool] */;
    %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %654 = cast(%var_2298, dtype="float32") /* ty=Tensor[(3, 9, 2), float32] */;
    %655 = less(%652, %653) /* ty=Tensor[(3, 9, 2), bool] */;
    %656 = acosh(%654) /* ty=Tensor[(3, 9, 2), float32] */;
    (%655, %656)
  };
  %657(%var_2343, %var_2344) /* ty=(Tensor[(3, 9, 2), bool], Tensor[(3, 9, 2), float32]) */
}

def @func_7123() -> (Tensor[(1, 12, 2), float64],) {
  %658 = @func_5468() /* ty=Tensor[(1, 12, 2), float64] */;
  (%658,)
}

def @func_10068() -> Tensor[(1, 12, 2), float64] {
  @func_7791() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_2277(%var_2276: Tensor[(7, 12, 2), bool]) -> (Tensor[(7, 12, 2), int32],) {
  %663 = fn (%var_2257: Tensor[(7, 12, 2), bool]) -> (Tensor[(7, 12, 2), int32],) {
    %659 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
    %660 = cast(%659, dtype="int32") /* ty=Tensor[(?, 12, 2), int32] */;
    %661 = cast(%var_2257, dtype="int32") /* ty=Tensor[(7, 12, 2), int32] */;
    %662 = bitwise_or(%660, %661) /* ty=Tensor[(7, 12, 2), int32] */;
    (%662,)
  };
  %663(%var_2276) /* ty=(Tensor[(7, 12, 2), int32],) */
}

def @func_12099(%var_12091: Tensor[(4, 2, 1), float32]) -> Tensor[(4, 2, 1), float32] {
  %664 = cast(%var_12091, dtype="float32") /* ty=Tensor[(4, 2, 1), float32] */;
  atanh(%664) /* ty=Tensor[(4, 2, 1), float32] */
}

def @func_11277() -> Tensor[(1, 12, 2), float64] {
  %665 = fn () -> Tensor[(1, 12, 2), float64] {
    @func_10961() /* ty=Tensor[(1, 12, 2), float64] */
  };
  %665() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_4243(%var_4242: Tensor[(96), float32]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(96), float32]) {
  %675 = fn (%var_4238: Tensor[(96), float32]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(96), float32]) {
    %666 = cast(%var_4238, dtype="float32") /* ty=Tensor[(96), float32] */;
    %667 = cast(%var_4238, dtype="float32") /* ty=Tensor[(96), float32] */;
    %668 = cast(%var_4238, dtype="float32") /* ty=Tensor[(96), float32] */;
    %669 = reshape(%666, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
    %670 = reshape(%667, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
    %671 = reshape(%668, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
    %672 = @func_3096(%669, %670, %671) /* ty=(Tensor[(8, 3, 4), float32], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(1, 12, 2), float64]) */;
    %673 = @func_3356() /* ty=Tensor[(1, 12, 2), float64] */;
    %674 = %672.3;
    (%673, %674, %var_4238)
  };
  %675(%var_4242) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(96), float32]) */
}

def @func_6660() -> (Tensor[(1, 12, 2), float32],) {
  %677 = fn () -> (Tensor[(1, 12, 2), float32],) {
    %676 = @func_4756() /* ty=Tensor[(1, 12, 2), float32] */;
    (%676,)
  };
  %677() /* ty=(Tensor[(1, 12, 2), float32],) */
}

def @func_3843(%var_3776: Tensor[(12, 8, 12), int64]) -> (Tensor[(?, 12, 2), int8], Tensor[(12, 8, 12), float64], Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), bool], Tensor[(336), int32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
  %678 = @func_3419() /* ty=(Tensor[(?, 12, 2), int8],) */;
  %679 = @func_3660() /* ty=Tensor[(?, 8, 12), int64] */;
  %680 = cast(%679, dtype="int8") /* ty=Tensor[(?, 8, 12), int8] */;
  %681 = cast(%var_3776, dtype="int8") /* ty=Tensor[(12, 8, 12), int8] */;
  %682 = add(%680, %681) /* ty=Tensor[(12, 8, 12), int8] */;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(12, 8, 12), float64] */;
  %684 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %685 = @func_1537() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %686 = cast(%var_3776, dtype="int64") /* ty=Tensor[(12, 8, 12), int64] */;
  %687 = reshape(%686, newshape=[12, 12, 8]) /* ty=Tensor[(12, 12, 8), int64] */;
  %688 = @func_3221(%687) /* ty=(Tensor[(12, 12, 8), int64], Tensor[(336), int32]) */;
  %689 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %690 = @func_1202() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %691 = %678.0;
  %692 = sigmoid(%683) /* ty=Tensor[(12, 8, 12), float64] */;
  %693 = %684.0;
  %694 = %685.0;
  %695 = @func_1462() /* ty=Tensor[(?, 12, 2), bool] */;
  %696 = %688.1;
  %697 = %689.0;
  %698 = %690.0;
  (%691, %692, %693, %694, %695, %696, %697, %698)
}

def @func_5052() -> Tensor[(1, 12, 2), float64] {
  %699 = fn () -> Tensor[(1, 12, 2), float64] {
    @func_3356() /* ty=Tensor[(1, 12, 2), float64] */
  };
  %699() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_11764() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  @func_11762() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */
}

def @func_102(%var_94: Tensor[(12, 11, 5), float32]) -> (Tensor[(12, 11, 5), bool],) {
  %700 = cast(%var_94, dtype="float32") /* ty=Tensor[(12, 11, 5), float32] */;
  %701 = sinh(%700) /* ty=Tensor[(12, 11, 5), float32] */;
  %702 = cast(%var_94, dtype="bool") /* ty=Tensor[(12, 11, 5), bool] */;
  %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%701, dtype="bool") /* ty=Tensor[(12, 11, 5), bool] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %706 = equal(%704, %705) /* ty=Tensor[(12, 11, 5), bool] */;
  (%706,)
}

def @func_9570() -> (Tensor[(1, 12, 2), float32],) {
  @func_9568() /* ty=(Tensor[(1, 12, 2), float32],) */
}

def @func_3450() -> (Tensor[(1, 12, 2), float32],) {
  %709 = fn () -> (Tensor[(1, 12, 2), float32],) {
    %707 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
    %708 = %707.0;
    (%708,)
  };
  %709() /* ty=(Tensor[(1, 12, 2), float32],) */
}

def @func_3221(%var_3188: Tensor[(12, 12, 8), int64]) -> (Tensor[(12, 12, 8), int64], Tensor[(336), int32]) {
  %710 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 12, 1), int64] */, dtype="int64") /* ty=Tensor[(12, 12, 1), int64] */;
  %711 = cast(%var_3188, dtype="int64") /* ty=Tensor[(12, 12, 8), int64] */;
  %712 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %713 = bitwise_xor(%710, %711) /* ty=Tensor[(12, 12, 8), int64] */;
  %714 = %712.2;
  (%713, %714)
}

def @func_3717() -> Tensor[(1, 12, 2), float64] {
  @func_3715() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_4784(%var_4783: Tensor[(9, 4, 16), int32]) -> Tensor[(9, 4, 16), bool] {
  %724 = fn (%var_4768: Tensor[(9, 4, 16), int32]) -> Tensor[(9, 4, 16), bool] {
    %715 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 4, 16), int32] */, dtype="int32") /* ty=Tensor[(9, 4, 16), int32] */;
    %716 = shape_of(%var_4768, dtype="int32") /* ty=Tensor[(3), int32] */;
    %717 = cast(%var_4768, dtype="int32") /* ty=Tensor[(9, 4, 16), int32] */;
    %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %719 = bitwise_and(%717, %718) /* ty=Tensor[(9, 4, 16), int32] */;
    %720 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 4, 16), int32] */, dtype="bool") /* ty=Tensor[(9, 4, 16), bool] */;
    %721 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
    %722 = cast(%719, dtype="bool") /* ty=Tensor[(9, 4, 16), bool] */;
    %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%722, %723) /* ty=Tensor[(9, 4, 16), bool] */
  };
  %724(%var_4783) /* ty=Tensor[(9, 4, 16), bool] */
}

def @func_1594() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */
}

def @func_4905() -> (Tensor[(?, 12, 2), int8], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), int8], Tensor[(1152), int64], Tensor[(156, 1), float64]) {
  %737 = fn () -> (Tensor[(?, 12, 2), int8], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), int8], Tensor[(1152), int64], Tensor[(156, 1), float64]) {
    %725 = @func_4128() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(1440), int8], Tensor[(11, 12, 2), bool], Tensor[(264), float32]) */;
    %726 = cast(meta[relay.Constant][26] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
    %727 = reshape(%726, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float64] */;
    %728 = @func_472(%727) /* ty=(Tensor[(4, 13, 3), float64],) */;
    %729 = cast(meta[relay.Constant][27] /* ty=Tensor[(1152), int64] */, dtype="int64") /* ty=Tensor[(1152), int64] */;
    %730 = reshape(%729, newshape=[12, 8, 12]) /* ty=Tensor[(12, 8, 12), int64] */;
    %731 = @func_3843(%730) /* ty=(Tensor[(?, 12, 2), int8], Tensor[(12, 8, 12), float64], Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), bool], Tensor[(336), int32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */;
    %732 = cast(meta[relay.Constant][26] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
    %733 = %725.0;
    %734 = %728.0;
    %735 = %731.0;
    %736 = cos(%732) /* ty=Tensor[(156, 1), float64] */;
    (%733, %734, %735, meta[relay.Constant][27] /* ty=Tensor[(1152), int64] */, %736)
  };
  %737() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), int8], Tensor[(1152), int64], Tensor[(156, 1), float64]) */
}

def @func_9178() -> (Tensor[(?, 12, 2), bool],) {
  %738 = @func_8101() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %739 = %738.0;
  (%739,)
}

def @func_4204(%var_4202: Tensor[(16, 1, 3), float64], %var_4203: Tensor[(16, 3, 3), float64]) -> (Tensor[(16, 3, 3), float64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(96), float32], Tensor[(16, 1, 3), float32]) {
  @func_4200(%var_4202, %var_4203) /* ty=(Tensor[(16, 3, 3), float64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(96), float32], Tensor[(16, 1, 3), float32]) */
}

def @func_8538() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  @func_8536() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */
}

def @func_6791() -> Tensor[(?, 12, 2), bool] {
  @func_6789() /* ty=Tensor[(?, 12, 2), bool] */
}

def @func_9818() -> Tensor[(1, 12, 2), float64] {
  %740 = @func_2920() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
  %740.0
}

def @func_2081(%var_2079: Tensor[(360, 4), int8]) -> (Tensor[(336), int32], Tensor[(?, 12, 2), int32], Tensor[(1, 12, 2), float32], Tensor[(360, 4), int8], Tensor[(3, 12, 2), float32], Tensor[(6, 12), float64]) {
  @func_2078(%var_2079) /* ty=(Tensor[(336), int32], Tensor[(?, 12, 2), int32], Tensor[(1, 12, 2), float32], Tensor[(360, 4), int8], Tensor[(3, 12, 2), float32], Tensor[(6, 12), float64]) */
}

def @func_6322(%var_6289: Tensor[(2, 12, 2), uint64], %var_6299: Tensor[(16, 12, 2), float64]) -> (Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32], Tensor[(2, 12, 2), bool], Tensor[(16, 12, 2), float32]) {
  %741 = @func_5548() /* ty=(Tensor[(14, 12, 2), bool],) */;
  %742 = @func_5561() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %743 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %744 = @func_5002() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */;
  %745 = %744.0;
  %746 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 12, 2), int8] */, dtype="uint64") /* ty=Tensor[(1, 12, 2), uint64] */;
  %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%745, dtype="uint64") /* ty=Tensor[(?, 12, 2), uint64] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %750 = bitwise_xor(%748, %749) /* ty=Tensor[(?, 12, 2), uint64] */;
  %751 = cast(%750, dtype="bool") /* ty=Tensor[(?, 12, 2), bool] */;
  %752 = cast(%var_6289, dtype="bool") /* ty=Tensor[(2, 12, 2), bool] */;
  %753 = @func_6133() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %754 = %753.0;
  %755 = cast(%754, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %756 = cast(%var_6299, dtype="float32") /* ty=Tensor[(16, 12, 2), float32] */;
  %757 = %741.0;
  %758 = %742.0;
  %759 = %743.0;
  %760 = greater_equal(%751, %752) /* ty=Tensor[(2, 12, 2), bool] */;
  %761 = floor_mod(%755, %756) /* ty=Tensor[(16, 12, 2), float32] */;
  (%757, %758, %759, %760, %761)
}

def @func_10935(%var_10920: Tensor[(700), int32]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32], Tensor[(5, 10, 14), int32], Tensor[(700), int32]) {
  %762 = @func_9293() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(16, 12, 2), int64], Tensor[(384), float64]) */;
  %763 = @func_1537() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %764 = @func_5356() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32]) */;
  %765 = cast(%var_10920, dtype="int32") /* ty=Tensor[(700), int32] */;
  %766 = cast(%var_10920, dtype="int32") /* ty=Tensor[(700), int32] */;
  %767 = reshape(%765, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int32] */;
  %768 = reshape(%766, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), int32] */;
  %769 = @func_8032(%767, %768) /* ty=(Tensor[(5, 10, 14), int32],) */;
  %770 = %762.0;
  %771 = %763.0;
  %772 = %764.1;
  %773 = %769.0;
  (%770, %771, %772, %773, %var_10920)
}

def @func_7292() -> Tensor[(1, 12, 2), float32] {
  @func_4804() /* ty=Tensor[(1, 12, 2), float32] */
}

def @func_3138() -> Tensor[(1, 12, 2), float64] {
  %774 = @func_2920() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
  %774.1
}

def @func_4962(%var_4959: Tensor[(264), float32]) -> (Tensor[(1, 12, 2), float64], Tensor[(11, 12, 2), uint8], Tensor[(264), float32]) {
  %775 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %776 = cast(%var_4959, dtype="float32") /* ty=Tensor[(264), float32] */;
  %777 = reshape(%776, newshape=[11, 12, 2]) /* ty=Tensor[(11, 12, 2), float32] */;
  %778 = @func_4394(%777) /* ty=(Tensor[(11, 12, 2), uint8], Tensor[(312), float32], Tensor[(660), float64]) */;
  %779 = %775.0;
  %780 = %778.0;
  (%779, %780, %var_4959)
}

def @func_11844() -> (Tensor[(?, 8, 12), int64], Tensor[(1, 12, 2), float64]) {
  @func_11842() /* ty=(Tensor[(?, 8, 12), int64], Tensor[(1, 12, 2), float64]) */
}

def @func_4200(%var_4164: Tensor[(16, 1, 3), float64], %var_4165: Tensor[(16, 3, 3), float64]) -> (Tensor[(16, 3, 3), float64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(96), float32], Tensor[(16, 1, 3), float32]) {
  %781 = cast(%var_4164, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
  %782 = cast(%var_4165, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
  %783 = @func_1592() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %784 = cast(meta[relay.Constant][29] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %785 = cast(meta[relay.Constant][29] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %786 = cast(meta[relay.Constant][29] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %787 = reshape(%784, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %788 = reshape(%785, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %789 = reshape(%786, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
  %790 = @func_3096(%787, %788, %789) /* ty=(Tensor[(8, 3, 4), float32], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(1, 12, 2), float64]) */;
  %791 = cast(%var_4164, dtype="float32") /* ty=Tensor[(16, 1, 3), float32] */;
  %792 = power(%781, %782) /* ty=Tensor[(16, 3, 3), float64] */;
  %793 = %783.1;
  %794 = %790.2;
  %795 = atanh(%791) /* ty=Tensor[(16, 1, 3), float32] */;
  (%792, %793, %794, meta[relay.Constant][29] /* ty=Tensor[(96), float32] */, %795)
}

def @func_8151() -> (Tensor[(1, 12, 2), float64],) {
  @func_8149() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_8909() -> (Tensor[(?, 12, 2), int8],) {
  %798 = fn () -> (Tensor[(?, 12, 2), int8],) {
    %796 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
    %797 = %796.0;
    (%797,)
  };
  %798() /* ty=(Tensor[(?, 12, 2), int8],) */
}

def @func_5563() -> (Tensor[(1, 12, 2), float64],) {
  @func_5561() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_5468() -> Tensor[(1, 12, 2), float64] {
  %799 = @func_2361() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %799.0
}

def @func_4585(%var_4584: Tensor[(48), float64]) -> (Tensor[(?, 8, 12), int64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(48), float64], Tensor[(144), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
  %814 = fn (%var_4555: Tensor[(48), float64]) -> (Tensor[(?, 8, 12), int64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(48), float64], Tensor[(144), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) {
    %800 = @func_2361() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %801 = cast(%var_4555, dtype="float64") /* ty=Tensor[(48), float64] */;
    %802 = cast(meta[relay.Constant][30] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %803 = reshape(%801, newshape=[16, 1, 3]) /* ty=Tensor[(16, 1, 3), float64] */;
    %804 = reshape(%802, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float64] */;
    %805 = @func_4200(%803, %804) /* ty=(Tensor[(16, 3, 3), float64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(96), float32], Tensor[(16, 1, 3), float32]) */;
    %806 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %807 = @func_2361() /* ty=(Tensor[(1, 12, 2), float64],) */;
    %808 = @func_3660() /* ty=Tensor[(?, 8, 12), int64] */;
    %809 = %800.0;
    %810 = %805.2;
    %811 = @func_2683() /* ty=Tensor[(1, 12, 2), float64] */;
    %812 = %806.0;
    %813 = %807.0;
    (%808, %809, %810, %var_4555, meta[relay.Constant][30] /* ty=Tensor[(144), float64] */, %811, %812, %813)
  };
  %814(%var_4584) /* ty=(Tensor[(?, 8, 12), int64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(48), float64], Tensor[(144), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */
}

def @func_8402() -> (Tensor[(336), int32], Tensor[(1, 12, 2), float64]) {
  %818 = fn () -> (Tensor[(336), int32], Tensor[(1, 12, 2), float64]) {
    %815 = @func_5325() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(336), int32]) */;
    %816 = %815.1;
    %817 = @func_7602() /* ty=Tensor[(1, 12, 2), float64] */;
    (%816, %817)
  };
  %818() /* ty=(Tensor[(336), int32], Tensor[(1, 12, 2), float64]) */
}

def @func_11767() -> Tensor[(?, 12, 2), bool] {
  %819 = @func_7723() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %819.0
}

def @func_11176(%var_11161: Tensor[(72), float64]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(72), float64], Tensor[(4, 13, 3), float64], Tensor[(9, 13, 11), float32]) {
  %820 = cast(%var_11161, dtype="float64") /* ty=Tensor[(72), float64] */;
  %821 = reshape(%820, newshape=[1, 72]) /* ty=Tensor[(1, 72), float64] */;
  %822 = @func_2135(%821) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(1, 72), float64]) */;
  %823 = @func_4904() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(4, 13, 3), float64], Tensor[(?, 12, 2), int8], Tensor[(1152), int64], Tensor[(156, 1), float64]) */;
  %824 = @func_9445() /* ty=(Tensor[(9, 13, 11), float32],) */;
  %825 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  %826 = %822.0;
  %827 = %823.1;
  %828 = %824.0;
  (%825, %826, %var_11161, %827, %828)
}

def @func_3895() -> (Tensor[(5, 12, 2), uint16], Tensor[(7, 12, 2), int32], Tensor[(168), bool]) {
  %829 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %830 = %829.0;
  %831 = cast(%830, dtype="uint16") /* ty=Tensor[(1, 12, 2), uint16] */;
  %832 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 12, 2), float32] */, dtype="uint16") /* ty=Tensor[(5, 12, 2), uint16] */;
  %833 = cast(meta[relay.Constant][32] /* ty=Tensor[(168), bool] */, dtype="bool") /* ty=Tensor[(168), bool] */;
  %834 = reshape(%833, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), bool] */;
  %835 = @func_2275(%834) /* ty=(Tensor[(7, 12, 2), int32],) */;
  %836 = bitwise_xor(%831, %832) /* ty=Tensor[(5, 12, 2), uint16] */;
  %837 = %835.0;
  (%836, %837, meta[relay.Constant][32] /* ty=Tensor[(168), bool] */)
}

def @func_2824(%var_2819: Tensor[(72), float64]) -> (Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) {
  %838 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %839 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  %840 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
  %841 = cast(%840, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %842 = shape_of(%839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%839, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %845 = cast(%var_2819, dtype="float64") /* ty=Tensor[(72), float64] */;
  %846 = reshape(%845, newshape=[1, 72]) /* ty=Tensor[(1, 72), float64] */;
  %847 = @func_2135(%846) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(3, 12, 2), float32], Tensor[(1, 72), float64]) */;
  %848 = %838.1;
  %849 = floor_mod(%843, %844) /* ty=Tensor[(?, 12, 2), float32] */;
  %850 = %847.1;
  (%848, %849, %850, %var_2819)
}

def @func_11842() -> (Tensor[(?, 8, 12), int64], Tensor[(1, 12, 2), float64]) {
  %851 = @func_6133() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %852 = @func_3660() /* ty=Tensor[(?, 8, 12), int64] */;
  %853 = %851.0;
  (%852, %853)
}

def @func_11030() -> (Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
  %858 = fn () -> (Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) {
    %854 = @func_8908() /* ty=(Tensor[(?, 12, 2), int8],) */;
    %855 = @func_4756() /* ty=Tensor[(1, 12, 2), float32] */;
    %856 = %854.0;
    %857 = @func_5051() /* ty=Tensor[(1, 12, 2), float64] */;
    (%855, %856, %857)
  };
  %858() /* ty=(Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float64]) */
}

def @func_8208() -> Tensor[(1, 12, 2), float64] {
  @func_8206() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_3660() -> Tensor[(?, 8, 12), int64] {
  %859 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 8, 12), float64] */;
  %860 = log2(%859) /* ty=Tensor[(1, 8, 12), float64] */;
  %861 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 8, 12), float64] */, dtype="int64") /* ty=Tensor[(1, 8, 12), int64] */;
  %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%860, dtype="int64") /* ty=Tensor[(1, 8, 12), int64] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%863, %864) /* ty=Tensor[(?, 8, 12), int64] */
}

def @func_444() -> (Tensor[(1, 12, 2), float64],) {
  %865 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 12, 2), float64] */, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
  %866 = asin(%865) /* ty=Tensor[(1, 12, 2), float64] */;
  (%866,)
}

def @func_5714(%var_5712: Tensor[(10, 9, 11), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(?, 12, 2), bool]) {
  @func_5711(%var_5712) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(?, 12, 2), bool]) */
}

def @func_3096(%var_3060: Tensor[(8, 3, 4), float32], %var_3061: Tensor[(8, 3, 4), float32], %var_3089: Tensor[(8, 3, 4), float32]) -> (Tensor[(8, 3, 4), float32], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(1, 12, 2), float64]) {
  %867 = cast(%var_3061, dtype="float32") /* ty=Tensor[(8, 3, 4), float32] */;
  %868 = shape_of(%var_3060, dtype="int32") /* ty=Tensor[(3), int32] */;
  %869 = cast(%var_3060, dtype="float32") /* ty=Tensor[(8, 3, 4), float32] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %871 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %872 = cast(%var_3089, dtype="int32") /* ty=Tensor[(8, 3, 4), int32] */;
  %873 = shape_of(%var_3061, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%var_3061, dtype="int32") /* ty=Tensor[(8, 3, 4), int32] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %876 = @func_444() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %877 = mod(%869, %870) /* ty=Tensor[(8, 3, 4), float32] */;
  %878 = %871.0;
  %879 = bitwise_or(%874, %875) /* ty=Tensor[(8, 3, 4), int32] */;
  %880 = %876.0;
  (%877, %878, %879, %880)
}

def @func_10435(%var_10433: Tensor[(12, 12, 2), float64]) -> (Tensor[(12, 12, 2), float32],) {
  @func_10432(%var_10433) /* ty=(Tensor[(12, 12, 2), float32],) */
}

def @func_3328() -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1440), int8], Tensor[(180, 8), int8], Tensor[(1, 12, 2), float64]) {
  @func_3326() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(1440), int8], Tensor[(180, 8), int8], Tensor[(1, 12, 2), float64]) */
}

def @func_11081() -> (Tensor[(1, 12, 2), float64],) {
  @func_11079() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_8873() -> (Tensor[(1, 12, 2), float64],) {
  @func_8871() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_6326(%var_6324: Tensor[(2, 12, 2), uint64], %var_6325: Tensor[(16, 12, 2), float64]) -> (Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32], Tensor[(2, 12, 2), bool], Tensor[(16, 12, 2), float32]) {
  @func_6322(%var_6324, %var_6325) /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float32], Tensor[(2, 12, 2), bool], Tensor[(16, 12, 2), float32]) */
}

def @func_6981(%var_6980: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), uint8], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) {
  %889 = fn (%var_6961: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), uint8], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) {
    %881 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
    %882 = cast(%881, dtype="uint8") /* ty=Tensor[(1, 12, 2), uint8] */;
    %883 = cast(%var_6961, dtype="uint8") /* ty=Tensor[(5, 12, 2), uint8] */;
    %884 = cast(meta[relay.Constant][35] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %885 = reshape(%884, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %886 = @func_2824(%885) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(?, 12, 2), float32], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) */;
    %887 = maximum(%882, %883) /* ty=Tensor[(5, 12, 2), uint8] */;
    %888 = %886.2;
    (%887, %888, meta[relay.Constant][35] /* ty=Tensor[(72), float64] */)
  };
  %889(%var_6980) /* ty=(Tensor[(5, 12, 2), uint8], Tensor[(3, 12, 2), float32], Tensor[(72), float64]) */
}

def @func_9312() -> (Tensor[(10, 9, 11), float64],) {
  %890 = @func_7405() /* ty=(Tensor[(1, 12, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(990), float64]) */;
  %891 = %890.1;
  (%891,)
}

def @func_5194(%var_5175: Tensor[(12, 4, 5), float32], %var_5181: Tensor[(12, 4, 5), float32]) -> (Tensor[(12, 4, 5), bool], Tensor[(4, 13, 3), float64], Tensor[(156), float64]) {
  %892 = cast(%var_5175, dtype="float32") /* ty=Tensor[(12, 4, 5), float32] */;
  %893 = atanh(%892) /* ty=Tensor[(12, 4, 5), float32] */;
  %894 = cast(%var_5181, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
  %895 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%893, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %898 = cast(meta[relay.Constant][36] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %899 = reshape(%898, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float64] */;
  %900 = @func_472(%899) /* ty=(Tensor[(4, 13, 3), float64],) */;
  %901 = not_equal(%896, %897) /* ty=Tensor[(12, 4, 5), bool] */;
  %902 = %900.0;
  (%901, %902, meta[relay.Constant][36] /* ty=Tensor[(156), float64] */)
}

def @func_9568() -> (Tensor[(1, 12, 2), float32],) {
  %903 = @func_7292() /* ty=Tensor[(1, 12, 2), float32] */;
  (%903,)
}

def @func_7263() -> Tensor[(1, 12, 2), float64] {
  @func_5468() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_1067() -> (Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) {
  %904 = @func_958() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %905 = %904.0;
  %906 = @func_517() /* ty=Tensor[(1, 12, 2), float64] */;
  %907 = cast(%906, dtype="int8") /* ty=Tensor[(1, 12, 2), int8] */;
  %908 = shape_of(%905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(%905, dtype="int8") /* ty=Tensor[(1, 12, 2), int8] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %911 = cast(%906, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %912 = right_shift(%909, %910) /* ty=Tensor[(?, 12, 2), int8] */;
  %913 = atanh(%911) /* ty=Tensor[(1, 12, 2), float32] */;
  (%912, %913)
}

def @func_8838() -> Tensor[(?, 12, 2), int8] {
  %914 = @func_5934() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), int8]) */;
  %914.1
}

def @func_475(%var_473: Tensor[(4, 13, 3), float64]) -> (Tensor[(4, 13, 3), float64],) {
  @func_472(%var_473) /* ty=(Tensor[(4, 13, 3), float64],) */
}

def @func_11971() -> (Tensor[(5, 4, 10), float64],) {
  @func_11969() /* ty=(Tensor[(5, 4, 10), float64],) */
}

def @func_4338() -> (Tensor[(9, 13, 11), float32],) {
  @func_4336() /* ty=(Tensor[(9, 13, 11), float32],) */
}

def @func_12072(%var_12071: Tensor[(13, 14, 15), float64]) -> Tensor[(13, 14, 15), float64] {
  %916 = fn (%var_12067: Tensor[(13, 14, 15), float64]) -> Tensor[(13, 14, 15), float64] {
    %915 = cast(%var_12067, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
    log2(%915) /* ty=Tensor[(13, 14, 15), float64] */
  };
  %916(%var_12071) /* ty=Tensor[(13, 14, 15), float64] */
}

def @func_9445() -> (Tensor[(9, 13, 11), float32],) {
  %917 = @func_4336() /* ty=(Tensor[(9, 13, 11), float32],) */;
  %918 = %917.0;
  (%918,)
}

def @func_5832(%var_5831: Tensor[(16, 12, 2), float32]) -> (Tensor[(16, 12, 2), float64],) {
  %923 = fn (%var_5824: Tensor[(16, 12, 2), float32]) -> (Tensor[(16, 12, 2), float64],) {
    %919 = @func_4804() /* ty=Tensor[(1, 12, 2), float32] */;
    %920 = cast(%919, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
    %921 = cast(%var_5824, dtype="float64") /* ty=Tensor[(16, 12, 2), float64] */;
    %922 = mod(%920, %921) /* ty=Tensor[(16, 12, 2), float64] */;
    (%922,)
  };
  %923(%var_5831) /* ty=(Tensor[(16, 12, 2), float64],) */
}

def @func_6885() -> (Tensor[(?, 12, 2), float32],) {
  @func_6883() /* ty=(Tensor[(?, 12, 2), float32],) */
}

def @func_11633() -> (Tensor[(?, 12, 2), bool],) {
  %924 = @func_8101() /* ty=(Tensor[(?, 12, 2), bool],) */;
  %925 = %924.0;
  (%925,)
}

def @func_8470() -> (Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64]) {
  %926 = @func_4447() /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %927 = @func_8253() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %928 = %926.0;
  %929 = %927.0;
  (%928, %929)
}

def @func_5548() -> (Tensor[(14, 12, 2), bool],) {
  %930 = @func_4447() /* ty=(Tensor[(14, 12, 2), bool], Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %931 = %930.0;
  (%931,)
}

def @func_10232() -> (Tensor[(1, 12, 2), float32],) {
  %933 = fn () -> (Tensor[(1, 12, 2), float32],) {
    %932 = @func_7292() /* ty=Tensor[(1, 12, 2), float32] */;
    (%932,)
  };
  %933() /* ty=(Tensor[(1, 12, 2), float32],) */
}

def @func_4336() -> (Tensor[(9, 13, 11), float32],) {
  %934 = cast(meta[relay.Constant][37] /* ty=Tensor[(9, 13, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 11), float32] */;
  %935 = cosh(%934) /* ty=Tensor[(9, 13, 11), float32] */;
  (%935,)
}

def @func_10938(%var_10936: Tensor[(700), int32]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32], Tensor[(5, 10, 14), int32], Tensor[(700), int32]) {
  @func_10935(%var_10936) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(?, 12, 2), float32], Tensor[(5, 10, 14), int32], Tensor[(700), int32]) */
}

def @func_7082(%var_7005: Tensor[(15, 5, 6), float32]) -> (Tensor[(9, 13, 11), float32], Tensor[(15, 5, 6), int8], Tensor[(15, 5, 6), bool], Tensor[(15, 5, 6), bool]) {
  %936 = @func_4336() /* ty=(Tensor[(9, 13, 11), float32],) */;
  %937 = cast(meta[relay.Constant][38] /* ty=Tensor[(15, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 6), float32] */;
  %938 = shape_of(%var_7005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%var_7005, dtype="float32") /* ty=Tensor[(15, 5, 6), float32] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %941 = floor_divide(%939, %940) /* ty=Tensor[(15, 5, 6), float32] */;
  %942 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 5, 6), float32] */, dtype="int8") /* ty=Tensor[(15, 5, 6), int8] */;
  %943 = shape_of(%941, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(%941, dtype="int8") /* ty=Tensor[(15, 5, 6), int8] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %946 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 5, 6), float32] */, dtype="bool") /* ty=Tensor[(15, 5, 6), bool] */;
  %947 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(15, 5, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %948 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 5, 6), float32] */, dtype="bool") /* ty=Tensor[(15, 5, 6), bool] */;
  %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %950 = cast(meta[relay.Constant][38] /* ty=Tensor[(15, 5, 6), float32] */, dtype="bool") /* ty=Tensor[(15, 5, 6), bool] */;
  %951 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(15, 5, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %952 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 5, 6), float32] */, dtype="bool") /* ty=Tensor[(15, 5, 6), bool] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %954 = %936.0;
  %955 = maximum(%944, %945) /* ty=Tensor[(15, 5, 6), int8] */;
  %956 = logical_and(%948, %949) /* ty=Tensor[(15, 5, 6), bool] */;
  %957 = less(%952, %953) /* ty=Tensor[(15, 5, 6), bool] */;
  (%954, %955, %956, %957)
}

def @func_6685() -> (Tensor[(168), bool],) {
  @func_6683() /* ty=(Tensor[(168), bool],) */
}

def @func_9447() -> (Tensor[(9, 13, 11), float32],) {
  @func_9445() /* ty=(Tensor[(9, 13, 11), float32],) */
}

def @func_6456(%var_6371: Tensor[(10, 12, 2), int8], %var_6434: Tensor[(10, 12, 2), uint64], %var_6451: Tensor[(10, 12, 2), float64]) -> (Tensor[(1, 12, 2), float32], Tensor[(1, 12, 2), float64], Tensor[(10, 12, 2), float32], Tensor[(10, 12, 2), bool]) {
  %958 = @func_3449() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %959 = @func_5325() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(336), int32]) */;
  %960 = %959.0;
  %961 = cast(%960, dtype="bool") /* ty=Tensor[(?, 12, 2), bool] */;
  %962 = cast(%var_6371, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
  %963 = logical_and(%961, %962) /* ty=Tensor[(10, 12, 2), bool] */;
  %964 = cast(%963, dtype="float64") /* ty=Tensor[(10, 12, 2), float64] */;
  %965 = asin(%964) /* ty=Tensor[(10, 12, 2), float64] */;
  %966 = cast(%965, dtype="float32") /* ty=Tensor[(10, 12, 2), float32] */;
  %967 = cast(%960, dtype="float32") /* ty=Tensor[(?, 12, 2), float32] */;
  %968 = multiply(%966, %967) /* ty=Tensor[(10, 12, 2), float32] */;
  %969 = cast(%968, dtype="uint64") /* ty=Tensor[(10, 12, 2), uint64] */;
  %970 = shape_of(%965, dtype="int32") /* ty=Tensor[(3), int32] */;
  %971 = cast(%965, dtype="uint64") /* ty=Tensor[(10, 12, 2), uint64] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %973 = bitwise_xor(%971, %972) /* ty=Tensor[(10, 12, 2), uint64] */;
  %974 = cast(%var_6434, dtype="float32") /* ty=Tensor[(10, 12, 2), float32] */;
  %975 = shape_of(%973, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%973, dtype="float32") /* ty=Tensor[(10, 12, 2), float32] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %978 = cast(%var_6451, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
  %979 = shape_of(%965, dtype="int32") /* ty=Tensor[(3), int32] */;
  %980 = cast(%965, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
  %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %982 = %958.0;
  %983 = @func_2683() /* ty=Tensor[(1, 12, 2), float64] */;
  %984 = subtract(%976, %977) /* ty=Tensor[(10, 12, 2), float32] */;
  %985 = greater(%980, %981) /* ty=Tensor[(10, 12, 2), bool] */;
  (%982, %983, %984, %985)
}

def @func_4394(%var_4346: Tensor[(11, 12, 2), float32]) -> (Tensor[(11, 12, 2), uint8], Tensor[(312), float32], Tensor[(660), float64]) {
  %986 = @func_2577() /* ty=(Tensor[(1, 12, 2), float32],) */;
  %987 = %986.0;
  %988 = cast(%987, dtype="uint8") /* ty=Tensor[(1, 12, 2), uint8] */;
  %989 = cast(%var_4346, dtype="uint8") /* ty=Tensor[(11, 12, 2), uint8] */;
  %990 = cast(meta[relay.Constant][41] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %991 = reshape(%990, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), float32] */;
  %992 = @func_884(%991) /* ty=(Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) */;
  %993 = %992.4;
  %994 = cast(%993, dtype="float64") /* ty=Tensor[(660), float64] */;
  %995 = minimum(%988, %989) /* ty=Tensor[(11, 12, 2), uint8] */;
  %996 = erf(%994) /* ty=Tensor[(660), float64] */;
  (%995, meta[relay.Constant][41] /* ty=Tensor[(312), float32] */, %996)
}

def @func_7265() -> Tensor[(1, 12, 2), float64] {
  @func_7263() /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_2362() -> (Tensor[(1, 12, 2), float64],) {
  %998 = fn () -> (Tensor[(1, 12, 2), float64],) {
    %997 = @func_1285() /* ty=Tensor[(1, 12, 2), float64] */;
    (%997,)
  };
  %998() /* ty=(Tensor[(1, 12, 2), float64],) */
}

def @func_8936() -> Tensor[(?, 12, 2), int8] {
  @func_8934() /* ty=Tensor[(?, 12, 2), int8] */
}

def @func_1285() -> Tensor[(1, 12, 2), float64] {
  %999 = @func_741() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %1000 = %999.0;
  %1001 = cast(%1000, dtype="float64") /* ty=Tensor[(1, 12, 2), float64] */;
  sin(%1001) /* ty=Tensor[(1, 12, 2), float64] */
}

def @func_8635(%var_8634: Tensor[(4, 24), float32]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(4, 24), float32]) {
  %1013 = fn (%var_8626: Tensor[(4, 24), float32]) -> (Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(4, 24), float32]) {
    %1002 = @func_8536() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
    %1003 = cast(%var_8626, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
    %1004 = cast(%var_8626, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
    %1005 = cast(%var_8626, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
    %1006 = reshape(%1003, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
    %1007 = reshape(%1004, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
    %1008 = reshape(%1005, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), float32] */;
    %1009 = @func_3096(%1006, %1007, %1008) /* ty=(Tensor[(8, 3, 4), float32], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(1, 12, 2), float64]) */;
    %1010 = %1002.1;
    %1011 = @func_7174() /* ty=Tensor[(1, 12, 2), float64] */;
    %1012 = %1009.2;
    (%1010, %1011, %1012, %var_8626)
  };
  %1013(%var_8634) /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64], Tensor[(8, 3, 4), int32], Tensor[(4, 24), float32]) */
}

def @func_1695(%var_1663: Tensor[(312), float32]) -> (Tensor[(14, 12, 2), bool], Tensor[(9, 10, 16), int8], Tensor[(1440), int8], Tensor[(?, 12, 2), int8], Tensor[(336), int32], Tensor[(312), float32], Tensor[(?, 12, 2), uint16], Tensor[(1, 12, 2), float64]) {
  %1014 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %1015 = cast(meta[relay.Constant][42] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %1016 = reshape(%1015, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %1017 = @func_1327(%1016) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) */;
  %1018 = @func_1067() /* ty=(Tensor[(?, 12, 2), int8], Tensor[(1, 12, 2), float32]) */;
  %1019 = cast(%var_1663, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1020 = reshape(%1019, newshape=[13, 8, 3]) /* ty=Tensor[(13, 8, 3), float32] */;
  %1021 = @func_884(%1020) /* ty=(Tensor[(13, 8, 3), float32], Tensor[(14, 12, 2), bool], Tensor[(336), int32], Tensor[(12, 11, 5), bool], Tensor[(660), float32]) */;
  %1022 = @func_585() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(1, 12, 2), float64]) */;
  %1023 = %1022.1;
  %1024 = cast(%1023, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %1025 = erf(%1024) /* ty=Tensor[(1, 12, 2), float32] */;
  %1026 = @func_1360() /* ty=(Tensor[(1, 12, 2), float64], Tensor[(14, 12, 2), bool], Tensor[(336), int32]) */;
  %1027 = %1026.0;
  %1028 = cast(%1027, dtype="uint16") /* ty=Tensor[(1, 12, 2), uint16] */;
  %1029 = shape_of(%1025, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1030 = cast(%1025, dtype="uint16") /* ty=Tensor[(1, 12, 2), uint16] */;
  %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1032 = @func_1537() /* ty=(Tensor[(1, 12, 2), float64],) */;
  %1033 = %1014.1;
  %1034 = %1017.1;
  %1035 = %1018.0;
  %1036 = %1021.2;
  %1037 = left_shift(%1030, %1031) /* ty=Tensor[(?, 12, 2), uint16] */;
  %1038 = %1032.0;
  (%1033, %1034, meta[relay.Constant][42] /* ty=Tensor[(1440), int8] */, %1035, %1036, %var_1663, %1037, %1038)
}

def @func_9314() -> (Tensor[(10, 9, 11), float64],) {
  @func_9312() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_1329(%var_1328: Tensor[(1440), int8]) -> (Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) {
  %1047 = fn (%var_1309: Tensor[(1440), int8]) -> (Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) {
    %1039 = @func_1127() /* ty=(Tensor[(1, 12, 2), float32],) */;
    %1040 = cast(%var_1309, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %1041 = cast(%var_1309, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %1042 = reshape(%1040, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int8] */;
    %1043 = reshape(%1041, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int8] */;
    %1044 = @func_729(%1042, %1043) /* ty=(Tensor[(9, 10, 16), int8], Tensor[(1, 12, 2), float64]) */;
    %1045 = %1039.0;
    %1046 = %1044.0;
    (%1045, %1046, %var_1309)
  };
  %1047(%var_1328) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(9, 10, 16), int8], Tensor[(1440), int8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_70 = relay.const([[[4.639449,-1.967916,4.487648,4.119151,-0.893582,5.843389,2.684968,-7.334389,0.128717,7.637848,-5.758699,2.168880,0.776932,8.955600],[9.000904,-1.160826,-6.041157,6.037986,1.789019,-6.375988,4.989533,-2.190277,-6.434033,-1.166848,-8.364657,7.424389,-9.148524,-7.605393],[1.731332,6.112173,-6.042155,-3.499044,-2.419030,1.284530,-0.881768,9.956530,7.821165,-4.388568,8.753287,4.647240,-7.978836,-7.457027],[2.484807,-0.292665,6.021969,-1.287874,1.154700,-7.834620,-6.270141,2.002537,3.755117,-1.507818,-1.458892,-5.011831,5.079334,-5.604633],[7.741321,-4.796211,9.423679,8.757094,9.366838,-7.506039,-9.924436,-9.912965,-3.067033,3.485703,3.798065,-6.502994,-7.907240,6.740073],[8.601351,1.422848,-7.796729,6.893782,-0.281579,-2.032883,-5.648260,-3.323749,-7.473417,1.521324,-0.050009,-6.800466,-3.329019,-9.563133],[-3.447800,8.188853,7.970711,-7.297066,-7.886489,5.050672,-2.735660,-4.943693,-1.899263,-0.778149,-7.778798,-8.670036,-3.091178,-0.563125],[7.618710,-0.778368,-0.555192,7.370215,-8.101016,8.351173,-2.014605,-2.483328,1.611702,7.179338,1.287743,-4.480321,-0.728124,3.209078],[6.266339,1.665871,-1.377381,-3.143559,9.841110,-1.792793,2.386770,2.799060,-8.289984,3.073048,-1.281231,5.028563,-6.622112,8.303919],[-2.335037,7.970423,-5.558379,5.577024,-9.870669,0.271493,4.597635,-4.793231,-4.605100,-9.006711,7.597519,-9.945897,8.429732,0.952015],[4.032561,-6.371923,7.170374,5.870012,-4.616066,-4.901276,4.825289,2.334087,2.931857,7.427780,0.545137,-9.954803,6.237120,-4.789663]],[[3.765828,-5.132537,0.086343,-6.791183,8.536741,-5.652937,-4.820556,-6.847112,5.827591,7.589320,7.666604,-4.456711,-8.105998,0.658183],[0.193577,-5.382378,-1.621085,1.940052,8.158127,-5.809797,8.943831,0.507855,-3.714350,8.659516,3.243188,-1.472887,-9.214460,9.193843],[-4.931590,-1.632759,-9.834969,-7.854721,-8.516487,-7.560615,0.634935,-6.077196,-3.177063,6.694863,6.379742,-5.985768,7.411725,-2.124228],[1.704068,-6.069064,-2.713550,7.669894,-6.185403,4.868527,1.366736,-9.635664,6.398271,0.093363,-3.049146,-5.430522,-2.784525,-6.436862],[4.448125,0.293863,-0.116082,-5.772270,-8.834635,-1.253890,2.539112,5.467758,6.215605,-3.577755,-8.049247,-9.146002,-6.800587,6.809570],[2.526355,-3.987499,-9.772821,9.713340,2.032182,2.718363,1.080054,-1.922156,-2.639185,4.806782,-9.016685,-4.590263,-5.560080,5.533887],[4.064283,2.188254,8.542518,2.324490,6.640677,-6.845677,3.258986,-7.997352,6.967882,3.619586,6.785765,-0.675041,-3.532498,-8.188864],[2.842464,5.384967,-2.539793,-8.451084,-4.251507,7.498452,-2.598004,5.266465,-3.178335,6.354528,-2.543123,1.835359,5.205090,0.893885],[-3.294154,-4.191624,-5.620881,-4.805963,-8.432463,-1.938573,-8.655434,-2.140337,2.319144,-3.052479,-9.590700,-7.605775,9.107588,-1.625310],[6.665764,-8.005186,9.986441,3.665975,4.986067,0.673788,-7.273459,-6.154568,8.462013,-6.785245,-4.179701,-5.737266,-0.805134,-4.249988],[-0.650066,-6.776915,-0.198426,8.861160,-9.169828,6.243701,-0.482392,6.538438,-7.836088,-1.956771,1.620698,0.391976,6.083725,-3.572835]],[[-8.578922,0.080510,1.128076,-5.845204,0.360728,5.951006,-5.632454,8.712895,6.461999,-2.236504,-2.123500,-4.791977,8.738103,-4.968280],[4.175901,-3.958496,4.233059,7.472455,1.773963,-0.399868,7.506704,-4.643943,6.140865,5.564331,7.286509,-7.975604,-0.197425,9.457039],[-4.539648,-6.072814,-9.160551,4.857471,9.919789,-8.299341,-0.348353,7.366159,-6.521621,-6.345455,3.622424,4.133681,3.155271,-6.860390],[-7.166374,1.230344,9.358376,-5.932722,-4.583288,4.294492,-4.591248,-8.271618,9.767681,6.363299,-2.962872,0.328143,5.808216,-5.606538],[-9.493648,-0.607476,-2.420904,-3.540943,4.074403,0.409832,-9.166277,1.251467,-1.831631,-6.736967,1.112893,4.247026,8.622315,3.847115],[4.598571,6.149326,3.956723,-8.891348,6.804624,5.672764,-8.682780,-7.539125,-0.087231,7.925464,2.261046,-1.664968,7.139363,-1.907291],[-4.068033,0.389579,3.250520,5.895076,-2.873023,-3.677227,-8.571105,9.681690,-2.428420,-2.046832,9.841217,5.877096,1.313399,-8.880304],[-0.474523,1.066920,-2.528913,-1.571177,8.997785,-3.100548,-0.712856,1.051227,1.242263,9.748094,-2.497218,-5.021237,6.217020,-6.732200],[5.759582,-7.125761,-4.956292,-0.014958,-6.834699,-2.656018,-3.877273,-0.014914,-4.171798,-1.559113,-4.072429,7.288867,1.397073,-9.759760],[-3.975832,7.318958,5.813154,8.017491,0.259416,1.684788,-5.117502,7.771152,-0.868862,4.711268,0.031818,-4.372546,9.141779,-7.329786],[3.430761,-0.131707,3.612502,9.031051,0.998014,-8.710284,-9.796763,-3.132628,-4.578848,-2.775016,7.783194,4.243033,6.194341,-0.396897]],[[6.517689,2.963828,-4.351446,-0.385860,3.891039,-6.042135,-8.865396,1.400193,-9.949081,-4.512194,9.518461,-2.198101,-6.914423,9.811087],[2.308310,0.785956,-7.686950,-9.742420,-2.504376,-0.135576,-5.900237,-3.876280,-7.613821,-0.129090,3.978476,3.701667,1.928453,-4.542050],[3.343375,8.365497,2.291264,3.686385,3.057176,-0.710357,0.427978,9.473060,-3.253962,-1.062577,6.671521,6.397774,5.176566,2.322412],[-9.897407,2.773998,5.422989,9.194121,1.345224,-0.707194,-0.686075,-6.669913,4.001831,3.983928,6.857323,-4.825008,-1.650696,5.503371],[-5.466054,-1.020499,-6.675079,-2.209646,-0.586513,1.244967,3.167325,-5.590571,-7.811782,2.870354,-7.550849,9.621972,-0.746022,-4.064250],[-1.170800,5.646589,-9.938772,4.384313,8.631441,-7.912629,7.802892,8.690726,0.651806,-5.932944,-1.949995,-0.774111,8.968562,-2.383464],[4.249210,-3.235612,-6.747454,1.447602,-3.730350,-9.608026,-7.796210,9.723398,-3.683294,-9.200063,8.042171,9.449139,-5.193762,-6.109447],[-7.941890,-9.130035,-9.683486,3.224048,-2.349755,1.619837,0.337809,-1.751559,3.713212,-9.157079,-6.373473,4.602680,4.899199,3.586843],[-1.679777,6.712753,-1.716129,2.979486,5.368598,6.043102,4.062334,-0.770275,-9.802080,-0.971234,-5.910555,2.478814,-8.484376,-7.710519],[-7.321085,1.944789,-0.996216,6.128832,-8.438672,6.220226,7.623878,9.809320,6.010240,5.583097,-7.225642,3.797400,-6.165756,3.809171],[-6.203213,4.295886,7.387630,7.086322,6.851483,-2.253130,8.470928,0.701774,6.795771,6.896151,-4.547794,-3.063633,8.920600,-4.464257]],[[2.408249,-1.758541,1.444799,-2.856863,-8.729614,-0.906965,-7.576305,-2.026640,-3.344670,-9.592232,-2.501733,7.810570,-7.175808,-7.200872],[7.541419,-4.741693,-1.388342,-1.613788,-4.979422,1.259155,6.944586,-8.942793,-0.233698,4.244437,9.663204,-8.975805,-4.824075,-8.046676],[-1.812670,-4.326775,0.450905,-2.487709,3.178601,-0.302071,9.343062,-5.899716,0.011920,-3.324323,0.345393,8.226244,4.520348,7.059011],[0.261521,-2.728027,-4.095571,6.015965,0.173169,0.425194,4.084200,-0.281085,7.219639,3.795567,-3.407829,4.697308,3.959102,-6.961901],[-7.345552,-1.381938,4.562760,8.015015,1.238462,-6.485362,-0.691724,9.143233,0.506201,-8.176398,2.892103,4.991477,6.420786,2.833881],[5.642560,3.189428,3.985340,1.165009,6.012579,-7.393034,-3.018982,6.133442,4.494701,-2.195710,9.561116,1.988254,-7.107420,-4.479189],[3.031130,-5.850677,0.398105,1.376048,-5.437735,9.481426,7.104153,-8.270322,-8.298129,5.786275,1.299187,-2.915563,-9.931841,2.500064],[3.646257,9.788477,1.348309,9.220817,0.175077,-0.993023,-2.468762,4.072622,2.859434,9.167849,-3.409966,5.406389,-3.876066,-5.449174],[-7.567609,3.175516,7.452645,-7.365368,-8.553478,0.320104,-7.049597,2.051451,3.986097,4.777660,8.224473,7.423442,7.606325,4.183377],[-4.102889,-6.499502,4.841448,-3.471403,-2.697927,1.347492,5.154531,0.324530,-9.162588,-0.087479,3.195199,2.115383,-5.212940,-6.318706],[5.644145,9.473209,4.893182,-1.914702,1.792294,1.505989,-4.210399,-4.592844,3.339492,2.351539,0.091490,-2.724934,9.234524,0.955447]],[[-4.897199,4.478926,3.250489,8.951139,1.664857,0.461373,3.491637,-2.536167,0.450646,5.911145,-8.124810,8.419894,-4.386462,3.608128],[1.727540,2.606348,-2.155408,1.073567,6.147623,5.376891,1.963955,0.106200,5.367281,-8.111496,-4.984123,-8.933308,-6.345942,-6.153071],[7.124501,7.142175,-4.651209,-4.700524,3.681539,-3.884503,-1.315915,3.398192,-2.293609,-6.064780,2.782014,2.472662,-2.844223,-7.614628],[3.638620,1.111382,-6.157797,3.580098,8.401144,-7.404467,3.187816,7.059159,-9.435271,7.496350,7.154166,-0.707989,-5.656148,6.087509],[5.482550,-1.619420,-4.787014,0.858236,-9.676286,-4.117753,-4.220525,-2.509475,1.587645,-6.361354,5.282810,0.320972,2.960134,5.704518],[5.997033,2.395772,-5.625906,2.815512,1.286368,-7.585355,8.054000,-9.346895,7.714786,3.861278,-9.720477,-2.407178,-5.995422,1.851011],[2.967961,2.420882,2.234546,-6.948954,-1.972728,-3.382747,-0.773745,3.537600,1.938664,-9.884481,5.573123,-1.170845,8.094853,4.574246],[-9.638641,5.995882,4.956810,-7.075928,6.643392,-4.449253,-4.703813,-8.462118,4.533964,-3.200469,3.428983,3.567751,-6.982619,-8.814612],[-8.938068,4.668573,-4.333503,8.705408,-2.565494,-9.826815,-3.570701,9.107310,-4.059533,6.001121,-4.231682,-3.701864,-3.052141,-1.512902],[9.387602,-8.583119,-0.597342,-7.159852,0.804847,-2.735644,3.862450,9.372377,9.831434,-3.105628,-2.081817,-9.216271,1.723535,-6.847404],[-0.827686,7.914733,-4.173724,-2.441326,4.395850,4.991978,-5.569525,-3.419799,8.836902,8.436032,8.192193,-0.136583,4.729603,-2.125509]]], dtype = "float32")#candidate|70|(6, 11, 14)|const|float32
uop_71 = relay.log10(const_70.astype('float32')) # shape=(6, 11, 14)
const_74 = relay.const([[[-1.241220,-4.488342,-6.310891,-7.028237,-1.361843,-3.892719,5.172048,7.867907,-2.364697,3.092991,-0.523142,-7.259415,8.499120,-9.485586],[-5.149354,-7.946175,-2.787440,7.408246,0.150720,-8.615385,7.082289,-8.713790,-7.883306,-7.964476,-9.238078,2.888319,-2.206741,5.101577],[9.281511,-5.394289,-2.640119,1.679663,-8.470835,1.433684,-6.932558,4.514357,-1.283631,-6.345805,6.221160,6.447884,-1.523563,-3.890098],[-9.282999,2.358664,2.967403,6.452170,-0.105525,-6.750479,6.003958,-2.339374,-0.570898,1.562795,3.766390,9.181834,-4.699468,8.878301],[6.210014,7.089080,4.528154,-2.843004,7.036398,-7.737658,-2.892042,-9.433768,-1.302377,8.099365,-8.845119,1.117843,-7.738550,-2.180699],[-1.468171,1.375253,5.665486,2.326249,7.514041,6.386627,-1.369032,0.518630,-7.618270,-1.288312,-6.993530,0.641810,0.931410,0.509953],[1.026598,-0.245788,5.255657,-7.774053,3.491915,1.481563,6.004283,2.657484,6.794342,-8.836459,-7.846814,-7.626149,-3.522245,9.341076],[1.295284,6.960212,-3.752124,-7.883612,8.361958,-6.083387,-4.844001,-7.774786,-3.001958,4.429570,-5.056056,2.840796,5.336307,1.357639],[-4.968282,7.375538,8.784861,-5.371134,-3.259713,3.461795,8.263007,-6.927274,-1.929978,1.605586,-2.274964,-4.725662,-7.017319,5.970928],[3.091943,4.162217,2.896651,2.742359,9.935461,-5.566633,-6.787024,-7.365247,6.253388,-0.618093,2.739447,-8.109419,-5.045907,-1.941858],[2.182592,-3.913905,-0.314442,-2.064238,-0.113549,6.205202,3.366464,-5.830692,4.796604,-3.298277,0.193225,-4.774299,-3.797956,4.697465]],[[5.748227,-0.944036,5.289266,-5.499331,-9.495626,-5.630606,-7.497379,9.617648,2.725558,-6.545243,-5.219798,-4.608640,4.823132,-3.298641],[2.212527,-5.647645,7.996201,2.013180,-1.182188,-6.626525,-1.402037,1.362811,-0.246713,8.525104,-8.635131,5.296368,-1.103979,8.339747],[-7.535812,4.645011,7.187300,3.200719,-5.988944,4.531775,-8.356426,-9.682351,-0.424394,9.273822,-9.164623,7.426432,-8.542197,7.549884],[-8.169469,-3.139474,-6.063649,-8.622877,-9.994551,-2.592658,2.471790,1.219525,2.249892,-4.928255,0.537435,8.228233,-7.701926,8.620594],[9.560695,0.887644,5.715854,-0.023895,-4.562404,7.412778,-1.130111,0.753743,9.810694,7.993947,-7.909050,2.682178,-2.927688,6.939316],[1.143947,1.943712,0.268352,-1.537001,6.988415,-9.479192,5.434659,-4.322443,5.471334,0.454448,-7.112277,-6.298582,2.266071,-8.854766],[-8.542984,-9.165459,-1.693311,-2.643666,8.730394,-1.995270,3.743136,-9.221799,-8.670352,4.458459,-7.188188,4.461227,3.490260,-3.106672],[8.453257,-1.757524,-7.922571,8.882008,1.991003,6.784018,-8.852978,9.713481,-1.924867,-6.923371,-7.158068,0.078690,0.290249,4.057956],[-5.835952,1.357885,-3.665223,3.180176,-0.491425,-4.687435,-8.249600,-5.405762,4.725971,-1.335048,7.042272,0.825035,-3.506781,1.640841],[7.508347,5.085819,-7.003176,6.338837,-7.674175,6.436905,6.320227,-0.690131,2.968753,-3.317450,-1.246668,8.592101,2.369734,5.759341],[1.778605,7.781579,0.124684,-7.633792,0.115292,4.584914,-1.855817,2.806433,-0.946464,7.846010,-3.167685,-6.474306,-0.862550,3.874191]],[[-1.805780,-4.494297,8.031463,-0.612442,-4.026746,-8.575472,-5.943772,0.728666,-5.584334,-0.280640,2.453696,4.757840,6.426818,-3.031674],[1.216672,-0.345634,6.881402,4.774873,-2.218932,3.723467,-3.159422,7.809702,5.040191,2.310491,1.943742,-6.110778,4.587508,-5.170330],[-9.476969,-0.397876,-9.476065,1.023742,6.458785,-3.626390,9.763742,-8.280322,9.966672,-0.484973,2.592306,7.490383,-9.070217,7.280560],[1.066280,-9.799282,-2.288253,1.820134,0.935176,-8.171761,6.701748,0.838855,8.028063,-9.425278,2.735397,8.068739,-3.553048,8.819171],[6.160214,-4.653181,-6.187728,-0.695997,2.836573,-2.277881,-5.721406,-8.465445,9.522062,-8.172464,4.827856,-6.817958,-8.232220,6.498317],[-0.591926,4.172767,1.586570,-7.587307,-6.147543,5.862295,-5.040071,5.366540,-2.881656,-7.878011,2.150413,-5.014028,4.385686,7.240685],[1.522082,-2.632813,7.598468,7.965180,8.868664,-4.092828,-4.609433,8.296135,1.028460,1.192064,-9.388860,-5.580189,9.243256,2.271433],[4.798032,-0.800827,9.795701,-2.412235,-0.628854,-5.311751,2.764426,8.142950,-4.203925,-5.250941,5.978667,6.451785,2.657252,3.030615],[8.035998,1.530198,3.623170,2.583281,-0.106658,6.303958,5.835196,-2.680107,5.182929,-5.260005,-1.912556,1.990549,-7.668876,-9.321884],[-7.322170,-6.568427,-4.269966,-7.635949,2.403790,-9.732032,7.677392,-0.716963,4.408366,3.104363,7.077641,-8.243681,-9.205372,9.740299],[6.582163,-0.327618,-7.585120,2.694488,-1.959648,-7.226079,1.482007,1.568974,9.510905,1.771362,-8.745068,0.399822,-2.237855,-7.021840]],[[1.913579,0.746698,1.421994,4.946026,8.557040,-2.247740,-8.646837,6.730834,0.296934,1.565828,8.136350,-0.674007,2.708474,5.887669],[6.803915,9.212903,9.859326,9.130121,-2.576247,-1.756521,9.059373,-6.648751,-4.256910,7.833646,-5.007079,-4.056402,8.879763,-9.579677],[-3.900762,-4.431740,9.112950,-8.441108,0.775518,1.887547,-3.378217,3.755313,-0.520280,-8.526573,8.655461,-8.014532,-7.529084,4.409338],[5.107755,-6.330781,4.627875,-8.344558,-6.599841,-1.823857,-3.516669,-4.962052,6.636109,6.483256,4.793517,-7.880183,9.946903,-1.722480],[0.236458,-2.296963,5.151255,-5.195936,6.869495,8.177553,-4.943195,2.831327,9.318645,9.248486,5.445016,-5.252513,-9.171753,-5.126717],[-9.875141,8.647400,-8.867444,-9.556368,2.874117,1.099155,0.739280,-8.340603,-0.210510,8.759389,3.353464,-5.342987,7.704479,5.609434],[-7.258265,0.615215,8.408470,-4.752653,-1.051741,6.648628,-3.077194,9.261546,-6.041488,5.701229,9.601272,-1.307680,0.624570,-7.835095],[-1.967132,0.943544,8.475267,2.998160,9.617431,-5.791703,-2.738447,5.501244,-2.781716,3.818185,0.741658,0.943062,5.963150,5.688019],[4.884932,1.698896,-0.240794,-4.222695,8.958242,-5.747517,4.336751,0.065342,-9.181722,-0.414036,0.074118,2.980835,-6.537900,4.063303],[2.477213,2.353580,-3.944908,-5.808979,9.972332,-2.340346,-5.454042,5.299513,-2.927744,2.325608,-5.134203,7.690849,4.786118,-8.037667],[-5.087591,1.723136,-2.250949,-0.086111,6.811257,9.057848,5.363122,-3.965489,-0.730950,8.279258,-5.606796,-8.831084,3.717721,-5.572033]],[[-3.326790,-7.243668,-3.428253,-8.790850,-1.829605,-1.045324,7.046420,-3.738234,2.480843,-5.106844,7.734442,-0.145013,6.030073,-9.489366],[8.612183,8.367454,0.871398,-8.675528,-0.011301,-3.309558,2.433272,-1.861484,7.197850,7.552615,6.966032,-1.775963,2.845526,-0.065359],[2.758774,9.410789,7.136317,6.613596,0.336590,0.305624,-2.788045,-7.472994,-1.986080,4.187755,-3.486870,-1.402432,-5.509404,-0.095436],[-4.890719,-6.945978,9.053586,-2.119713,0.376706,3.239758,9.846036,-8.041924,-3.300088,3.561143,3.611235,-1.675393,5.090912,-7.322990],[-4.596984,9.327416,7.019754,-2.097228,-3.349335,-0.068799,-5.526509,-5.432467,-2.623866,-3.566460,0.782808,8.274920,-9.029611,-8.654909],[-5.940786,1.084586,5.685291,3.768504,4.972739,4.251744,-7.198484,7.663544,4.068648,-3.256625,-3.605852,7.809967,-2.941264,-1.749184],[-7.595353,-0.125098,4.248564,8.277637,3.038562,-2.477490,3.453559,-7.107506,2.757304,-6.985822,0.189888,-6.209128,7.541832,2.735609],[-1.133371,-0.023343,9.512738,7.632066,2.293672,3.390469,-5.460389,4.390303,-6.818153,1.539350,7.068463,-2.199586,5.582166,-5.104910],[-3.835641,-3.907973,9.621683,-5.312311,-2.375110,-1.401711,-2.027986,-4.635559,3.479198,-3.536492,8.487768,8.092141,-7.880736,9.301683],[-5.979799,-4.306593,4.669809,4.690640,-6.415120,4.392066,4.673363,-0.270438,-3.307801,-7.508394,-0.621979,1.407746,9.914649,-3.062444],[-3.078762,7.498371,7.266420,-5.045451,-5.412763,5.098768,9.803735,1.440309,-4.851044,-6.266819,-4.062248,-6.952376,-5.664610,-8.821286]],[[-6.952865,7.083242,-2.613433,6.509208,-1.515879,6.845875,0.342495,2.597803,0.024130,-2.746292,-1.763622,-4.354415,5.051361,3.613388],[-5.234201,2.388866,-1.157598,-1.497263,5.019134,-5.203425,8.736123,5.557499,3.969270,4.659005,1.492566,-2.744137,-8.057861,7.161760],[-8.832534,3.272179,-8.369587,8.535099,7.702212,-3.195812,-3.232312,8.744755,-7.317376,-7.655875,2.467598,-7.105500,4.581345,0.741575],[-7.272870,-7.589211,1.850195,8.412174,-6.602442,9.219923,-1.511074,6.850042,-2.494295,-9.760591,5.389648,-0.598585,-7.689563,7.942919],[-5.672156,-3.000268,4.231857,2.648960,-3.469373,0.645194,7.348100,4.174872,-6.593425,-3.640199,3.970146,9.788854,-0.623133,4.350393],[-1.353786,-4.054613,6.247216,6.894866,8.159093,-3.126933,-1.378066,5.072342,-3.328390,3.386150,3.619035,4.355796,0.493292,1.078260],[4.721874,-5.904590,4.252727,-8.387811,8.573828,-1.008611,-6.246952,2.683655,-5.651073,-9.293115,7.234858,8.718866,-5.543242,6.285646],[5.319604,5.478614,5.004974,-1.122938,-4.892982,-0.811507,9.803030,2.613489,9.043526,-2.166689,7.112298,-0.338611,-2.543273,3.774589],[-7.402823,-0.569543,5.760095,-7.192640,-1.643774,9.056383,5.434054,-1.246472,-2.216609,-1.741402,-8.132837,2.207456,-5.746566,-1.654096],[2.021222,4.876600,-4.838949,8.633092,2.360372,2.838093,3.685784,-0.775685,-7.077350,7.597823,-8.293029,-9.761438,-0.011118,-5.372223],[2.845700,2.902447,-3.764322,-6.819326,0.920639,-8.643646,-0.022828,-3.808570,6.805854,-7.064929,0.585996,-5.848417,-4.146357,8.149903]]], dtype = "float32")#candidate|74|(6, 11, 14)|const|float32
bop_75 = relay.bitwise_or(const_70.astype('int32'), relay.reshape(const_74.astype('int32'), relay.shape_of(const_70))) # shape=(6, 11, 14)
output = relay.Tuple([uop_71,bop_75,])
output2 = relay.Tuple([uop_71,bop_75,])
func_104 = relay.Function([], output)
mod['func_104'] = func_104
mod = relay.transform.InferType()(mod)
output = func_104()
func_105 = relay.Function([], output)
mutated_mod['func_105'] = func_105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_104_call = mod.get_global_var('func_104')
func_105_call = mutated_mod.get_global_var('func_105')
call_117 = relay.TupleGetItem(func_104_call(), 1)
call_118 = relay.TupleGetItem(func_105_call(), 1)
uop_127 = relay.atanh(call_117.astype('float32')) # shape=(6, 11, 14)
uop_129 = relay.atanh(call_118.astype('float32')) # shape=(6, 11, 14)
output = relay.Tuple([uop_127,])
output2 = relay.Tuple([uop_129,])
func_139 = relay.Function([], output)
mod['func_139'] = func_139
mod = relay.transform.InferType()(mod)
output = func_139()
func_140 = relay.Function([], output)
mutated_mod['func_140'] = func_140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_150 = relay.var("var_150", dtype = "uint16", shape = (14, 16, 15))#candidate|150|(14, 16, 15)|var|uint16
var_151 = relay.var("var_151", dtype = "uint16", shape = (14, 16, 15))#candidate|151|(14, 16, 15)|var|uint16
bop_152 = relay.greater(var_150.astype('bool'), relay.reshape(var_151.astype('bool'), relay.shape_of(var_150))) # shape=(14, 16, 15)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_162 = relay.TupleGetItem(func_139_call(), 0)
call_163 = relay.TupleGetItem(func_140_call(), 0)
var_170 = relay.var("var_170", dtype = "uint16", shape = (14, 16, 15))#candidate|170|(14, 16, 15)|var|uint16
bop_171 = relay.floor_divide(var_151.astype('float32'), relay.reshape(var_170.astype('float32'), relay.shape_of(var_151))) # shape=(14, 16, 15)
func_104_call = mod.get_global_var('func_104')
func_105_call = mutated_mod.get_global_var('func_105')
call_203 = relay.TupleGetItem(func_104_call(), 0)
call_204 = relay.TupleGetItem(func_105_call(), 0)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_222 = relay.TupleGetItem(func_139_call(), 0)
call_223 = relay.TupleGetItem(func_140_call(), 0)
output = relay.Tuple([bop_152,call_162,bop_171,call_203,call_222,])
output2 = relay.Tuple([bop_152,call_163,bop_171,call_204,call_223,])
func_236 = relay.Function([var_150,var_151,var_170,], output)
mod['func_236'] = func_236
mod = relay.transform.InferType()(mod)
mutated_mod['func_236'] = func_236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_236_call = mutated_mod.get_global_var('func_236')
var_238 = relay.var("var_238", dtype = "uint16", shape = (14, 16, 15))#candidate|238|(14, 16, 15)|var|uint16
var_239 = relay.var("var_239", dtype = "uint16", shape = (14, 16, 15))#candidate|239|(14, 16, 15)|var|uint16
var_240 = relay.var("var_240", dtype = "uint16", shape = (14, 16, 15))#candidate|240|(14, 16, 15)|var|uint16
call_237 = func_236_call(var_238,var_239,var_240,)
output = call_237
func_241 = relay.Function([var_238,var_239,var_240,], output)
mutated_mod['func_241'] = func_241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_243 = relay.TupleGetItem(func_139_call(), 0)
call_244 = relay.TupleGetItem(func_140_call(), 0)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
var_264 = relay.var("var_264", dtype = "uint16", shape = (3360,))#candidate|264|(3360,)|var|uint16
call_263 = relay.TupleGetItem(func_236_call(relay.reshape(var_264.astype('uint16'), [14, 16, 15]), relay.reshape(var_264.astype('uint16'), [14, 16, 15]), relay.reshape(var_264.astype('uint16'), [14, 16, 15]), ), 2)
call_265 = relay.TupleGetItem(func_241_call(relay.reshape(var_264.astype('uint16'), [14, 16, 15]), relay.reshape(var_264.astype('uint16'), [14, 16, 15]), relay.reshape(var_264.astype('uint16'), [14, 16, 15]), ), 2)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
call_290 = relay.TupleGetItem(func_236_call(relay.reshape(var_264.astype('uint16'), [14, 16, 15]), relay.reshape(var_264.astype('uint16'), [14, 16, 15]), relay.reshape(var_264.astype('uint16'), [14, 16, 15]), ), 2)
call_291 = relay.TupleGetItem(func_241_call(relay.reshape(var_264.astype('uint16'), [14, 16, 15]), relay.reshape(var_264.astype('uint16'), [14, 16, 15]), relay.reshape(var_264.astype('uint16'), [14, 16, 15]), ), 2)
output = relay.Tuple([call_243,call_263,var_264,call_290,])
output2 = relay.Tuple([call_244,call_265,var_264,call_291,])
func_293 = relay.Function([var_264,], output)
mod['func_293'] = func_293
mod = relay.transform.InferType()(mod)
mutated_mod['func_293'] = func_293
mutated_mod = relay.transform.InferType()(mutated_mod)
var_294 = relay.var("var_294", dtype = "uint16", shape = (3360,))#candidate|294|(3360,)|var|uint16
func_293_call = mutated_mod.get_global_var('func_293')
call_295 = func_293_call(var_294)
output = call_295
func_296 = relay.Function([var_294], output)
mutated_mod['func_296'] = func_296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_419 = relay.TupleGetItem(func_139_call(), 0)
call_420 = relay.TupleGetItem(func_140_call(), 0)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
var_428 = relay.var("var_428", dtype = "uint16", shape = (14, 240))#candidate|428|(14, 240)|var|uint16
call_427 = relay.TupleGetItem(func_236_call(relay.reshape(var_428.astype('uint16'), [14, 16, 15]), relay.reshape(var_428.astype('uint16'), [14, 16, 15]), relay.reshape(var_428.astype('uint16'), [14, 16, 15]), ), 4)
call_429 = relay.TupleGetItem(func_241_call(relay.reshape(var_428.astype('uint16'), [14, 16, 15]), relay.reshape(var_428.astype('uint16'), [14, 16, 15]), relay.reshape(var_428.astype('uint16'), [14, 16, 15]), ), 4)
output = relay.Tuple([call_419,call_427,var_428,])
output2 = relay.Tuple([call_420,call_429,var_428,])
func_434 = relay.Function([var_428,], output)
mod['func_434'] = func_434
mod = relay.transform.InferType()(mod)
mutated_mod['func_434'] = func_434
mutated_mod = relay.transform.InferType()(mutated_mod)
var_435 = relay.var("var_435", dtype = "uint16", shape = (14, 240))#candidate|435|(14, 240)|var|uint16
func_434_call = mutated_mod.get_global_var('func_434')
call_436 = func_434_call(var_435)
output = call_436
func_437 = relay.Function([var_435], output)
mutated_mod['func_437'] = func_437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_439 = relay.TupleGetItem(func_139_call(), 0)
call_440 = relay.TupleGetItem(func_140_call(), 0)
uop_441 = relay.asin(call_439.astype('float32')) # shape=(6, 11, 14)
uop_443 = relay.asin(call_440.astype('float32')) # shape=(6, 11, 14)
output = relay.Tuple([uop_441,])
output2 = relay.Tuple([uop_443,])
func_446 = relay.Function([], output)
mod['func_446'] = func_446
mod = relay.transform.InferType()(mod)
output = func_446()
func_447 = relay.Function([], output)
mutated_mod['func_447'] = func_447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_457 = relay.TupleGetItem(func_139_call(), 0)
call_458 = relay.TupleGetItem(func_140_call(), 0)
var_480 = relay.var("var_480", dtype = "float32", shape = (6, 11, 14))#candidate|480|(6, 11, 14)|var|float32
bop_481 = relay.less(call_457.astype('bool'), relay.reshape(var_480.astype('bool'), relay.shape_of(call_457))) # shape=(6, 11, 14)
bop_484 = relay.less(call_458.astype('bool'), relay.reshape(var_480.astype('bool'), relay.shape_of(call_458))) # shape=(6, 11, 14)
uop_492 = relay.log(call_457.astype('float32')) # shape=(6, 11, 14)
uop_494 = relay.log(call_458.astype('float32')) # shape=(6, 11, 14)
output = relay.Tuple([bop_481,uop_492,])
output2 = relay.Tuple([bop_484,uop_494,])
func_495 = relay.Function([var_480,], output)
mod['func_495'] = func_495
mod = relay.transform.InferType()(mod)
var_496 = relay.var("var_496", dtype = "float32", shape = (6, 11, 14))#candidate|496|(6, 11, 14)|var|float32
output = func_495(var_496)
func_497 = relay.Function([var_496], output)
mutated_mod['func_497'] = func_497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_104_call = mod.get_global_var('func_104')
func_105_call = mutated_mod.get_global_var('func_105')
call_518 = relay.TupleGetItem(func_104_call(), 0)
call_519 = relay.TupleGetItem(func_105_call(), 0)
func_446_call = mod.get_global_var('func_446')
func_447_call = mutated_mod.get_global_var('func_447')
call_546 = relay.TupleGetItem(func_446_call(), 0)
call_547 = relay.TupleGetItem(func_447_call(), 0)
func_293_call = mod.get_global_var('func_293')
func_296_call = mutated_mod.get_global_var('func_296')
var_552 = relay.var("var_552", dtype = "uint16", shape = (3360,))#candidate|552|(3360,)|var|uint16
call_551 = relay.TupleGetItem(func_293_call(relay.reshape(var_552.astype('uint16'), [3360,])), 0)
call_553 = relay.TupleGetItem(func_296_call(relay.reshape(var_552.astype('uint16'), [3360,])), 0)
func_293_call = mod.get_global_var('func_293')
func_296_call = mutated_mod.get_global_var('func_296')
call_555 = relay.TupleGetItem(func_293_call(relay.reshape(var_552.astype('uint16'), [3360,])), 3)
call_556 = relay.TupleGetItem(func_296_call(relay.reshape(var_552.astype('uint16'), [3360,])), 3)
var_559 = relay.var("var_559", dtype = "float32", shape = (14, 16, 15))#candidate|559|(14, 16, 15)|var|float32
bop_560 = relay.multiply(call_555.astype('int8'), relay.reshape(var_559.astype('int8'), relay.shape_of(call_555))) # shape=(14, 16, 15)
bop_563 = relay.multiply(call_556.astype('int8'), relay.reshape(var_559.astype('int8'), relay.shape_of(call_556))) # shape=(14, 16, 15)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
call_570 = relay.TupleGetItem(func_236_call(relay.reshape(call_555.astype('uint16'), [14, 16, 15]), relay.reshape(var_552.astype('uint16'), [14, 16, 15]), relay.reshape(var_552.astype('uint16'), [14, 16, 15]), ), 1)
call_571 = relay.TupleGetItem(func_241_call(relay.reshape(call_555.astype('uint16'), [14, 16, 15]), relay.reshape(var_552.astype('uint16'), [14, 16, 15]), relay.reshape(var_552.astype('uint16'), [14, 16, 15]), ), 1)
func_104_call = mod.get_global_var('func_104')
func_105_call = mutated_mod.get_global_var('func_105')
call_585 = relay.TupleGetItem(func_104_call(), 1)
call_586 = relay.TupleGetItem(func_105_call(), 1)
func_446_call = mod.get_global_var('func_446')
func_447_call = mutated_mod.get_global_var('func_447')
call_588 = relay.TupleGetItem(func_446_call(), 0)
call_589 = relay.TupleGetItem(func_447_call(), 0)
bop_603 = relay.maximum(call_546.astype('int8'), relay.reshape(call_518.astype('int8'), relay.shape_of(call_546))) # shape=(6, 11, 14)
bop_606 = relay.maximum(call_547.astype('int8'), relay.reshape(call_519.astype('int8'), relay.shape_of(call_547))) # shape=(6, 11, 14)
uop_620 = relay.atan(call_518.astype('float64')) # shape=(6, 11, 14)
uop_622 = relay.atan(call_519.astype('float64')) # shape=(6, 11, 14)
output = relay.Tuple([call_551,var_552,bop_560,call_570,call_585,call_588,bop_603,uop_620,])
output2 = relay.Tuple([call_553,var_552,bop_563,call_571,call_586,call_589,bop_606,uop_622,])
func_626 = relay.Function([var_552,var_559,], output)
mod['func_626'] = func_626
mod = relay.transform.InferType()(mod)
var_627 = relay.var("var_627", dtype = "uint16", shape = (3360,))#candidate|627|(3360,)|var|uint16
var_628 = relay.var("var_628", dtype = "float32", shape = (14, 16, 15))#candidate|628|(14, 16, 15)|var|float32
output = func_626(var_627,var_628,)
func_629 = relay.Function([var_627,var_628,], output)
mutated_mod['func_629'] = func_629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_686 = relay.TupleGetItem(func_139_call(), 0)
call_687 = relay.TupleGetItem(func_140_call(), 0)
func_446_call = mod.get_global_var('func_446')
func_447_call = mutated_mod.get_global_var('func_447')
call_691 = relay.TupleGetItem(func_446_call(), 0)
call_692 = relay.TupleGetItem(func_447_call(), 0)
output = relay.Tuple([call_686,call_691,])
output2 = relay.Tuple([call_687,call_692,])
func_725 = relay.Function([], output)
mod['func_725'] = func_725
mod = relay.transform.InferType()(mod)
output = func_725()
func_726 = relay.Function([], output)
mutated_mod['func_726'] = func_726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_104_call = mod.get_global_var('func_104')
func_105_call = mutated_mod.get_global_var('func_105')
call_732 = relay.TupleGetItem(func_104_call(), 1)
call_733 = relay.TupleGetItem(func_105_call(), 1)
var_736 = relay.var("var_736", dtype = "int32", shape = (6, 11, 14))#candidate|736|(6, 11, 14)|var|int32
bop_737 = relay.equal(call_732.astype('bool'), relay.reshape(var_736.astype('bool'), relay.shape_of(call_732))) # shape=(6, 11, 14)
bop_740 = relay.equal(call_733.astype('bool'), relay.reshape(var_736.astype('bool'), relay.shape_of(call_733))) # shape=(6, 11, 14)
output = bop_737
output2 = bop_740
func_748 = relay.Function([var_736,], output)
mod['func_748'] = func_748
mod = relay.transform.InferType()(mod)
var_749 = relay.var("var_749", dtype = "int32", shape = (6, 11, 14))#candidate|749|(6, 11, 14)|var|int32
output = func_748(var_749)
func_750 = relay.Function([var_749], output)
mutated_mod['func_750'] = func_750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_104_call = mod.get_global_var('func_104')
func_105_call = mutated_mod.get_global_var('func_105')
call_765 = relay.TupleGetItem(func_104_call(), 0)
call_766 = relay.TupleGetItem(func_105_call(), 0)
output = relay.Tuple([call_765,])
output2 = relay.Tuple([call_766,])
func_772 = relay.Function([], output)
mod['func_772'] = func_772
mod = relay.transform.InferType()(mod)
output = func_772()
func_773 = relay.Function([], output)
mutated_mod['func_773'] = func_773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_725_call = mod.get_global_var('func_725')
func_726_call = mutated_mod.get_global_var('func_726')
call_777 = relay.TupleGetItem(func_725_call(), 0)
call_778 = relay.TupleGetItem(func_726_call(), 0)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_779 = relay.TupleGetItem(func_139_call(), 0)
call_780 = relay.TupleGetItem(func_140_call(), 0)
output = relay.Tuple([call_777,call_779,])
output2 = relay.Tuple([call_778,call_780,])
func_787 = relay.Function([], output)
mod['func_787'] = func_787
mod = relay.transform.InferType()(mod)
mutated_mod['func_787'] = func_787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_787_call = mutated_mod.get_global_var('func_787')
call_788 = func_787_call()
output = call_788
func_789 = relay.Function([], output)
mutated_mod['func_789'] = func_789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_787_call = mod.get_global_var('func_787')
func_789_call = mutated_mod.get_global_var('func_789')
call_813 = relay.TupleGetItem(func_787_call(), 0)
call_814 = relay.TupleGetItem(func_789_call(), 0)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
var_823 = relay.var("var_823", dtype = "uint16", shape = (3360,))#candidate|823|(3360,)|var|uint16
call_822 = relay.TupleGetItem(func_434_call(relay.reshape(var_823.astype('uint16'), [14, 240])), 2)
call_824 = relay.TupleGetItem(func_437_call(relay.reshape(var_823.astype('uint16'), [14, 240])), 2)
var_825 = relay.var("var_825", dtype = "uint16", shape = (14, 240))#candidate|825|(14, 240)|var|uint16
bop_826 = relay.less(call_822.astype('bool'), relay.reshape(var_825.astype('bool'), relay.shape_of(call_822))) # shape=(14, 240)
bop_829 = relay.less(call_824.astype('bool'), relay.reshape(var_825.astype('bool'), relay.shape_of(call_824))) # shape=(14, 240)
uop_842 = relay.tan(var_825.astype('float32')) # shape=(14, 240)
uop_847 = relay.log10(bop_826.astype('float32')) # shape=(14, 240)
uop_849 = relay.log10(bop_829.astype('float32')) # shape=(14, 240)
output = relay.Tuple([call_813,var_823,uop_842,uop_847,])
output2 = relay.Tuple([call_814,var_823,uop_842,uop_849,])
func_858 = relay.Function([var_823,var_825,], output)
mod['func_858'] = func_858
mod = relay.transform.InferType()(mod)
mutated_mod['func_858'] = func_858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_858_call = mutated_mod.get_global_var('func_858')
var_860 = relay.var("var_860", dtype = "uint16", shape = (3360,))#candidate|860|(3360,)|var|uint16
var_861 = relay.var("var_861", dtype = "uint16", shape = (14, 240))#candidate|861|(14, 240)|var|uint16
call_859 = func_858_call(var_860,var_861,)
output = call_859
func_862 = relay.Function([var_860,var_861,], output)
mutated_mod['func_862'] = func_862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_773_call = mutated_mod.get_global_var('func_773')
call_913 = relay.TupleGetItem(func_772_call(), 0)
call_914 = relay.TupleGetItem(func_773_call(), 0)
func_748_call = mod.get_global_var('func_748')
func_750_call = mutated_mod.get_global_var('func_750')
call_915 = func_748_call(relay.reshape(call_913.astype('int32'), [6, 11, 14]))
call_916 = func_748_call(relay.reshape(call_913.astype('int32'), [6, 11, 14]))
output = relay.Tuple([call_913,call_915,])
output2 = relay.Tuple([call_914,call_916,])
func_921 = relay.Function([], output)
mod['func_921'] = func_921
mod = relay.transform.InferType()(mod)
mutated_mod['func_921'] = func_921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mutated_mod.get_global_var('func_921')
call_922 = func_921_call()
output = call_922
func_923 = relay.Function([], output)
mutated_mod['func_923'] = func_923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_787_call = mod.get_global_var('func_787')
func_789_call = mutated_mod.get_global_var('func_789')
call_999 = relay.TupleGetItem(func_787_call(), 0)
call_1000 = relay.TupleGetItem(func_789_call(), 0)
output = relay.Tuple([call_999,])
output2 = relay.Tuple([call_1000,])
func_1012 = relay.Function([], output)
mod['func_1012'] = func_1012
mod = relay.transform.InferType()(mod)
mutated_mod['func_1012'] = func_1012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mutated_mod.get_global_var('func_1012')
call_1013 = func_1012_call()
output = call_1013
func_1014 = relay.Function([], output)
mutated_mod['func_1014'] = func_1014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_104_call = mod.get_global_var('func_104')
func_105_call = mutated_mod.get_global_var('func_105')
call_1034 = relay.TupleGetItem(func_104_call(), 0)
call_1035 = relay.TupleGetItem(func_105_call(), 0)
var_1049 = relay.var("var_1049", dtype = "float32", shape = (6, 11, 14))#candidate|1049|(6, 11, 14)|var|float32
bop_1050 = relay.greater_equal(call_1034.astype('bool'), relay.reshape(var_1049.astype('bool'), relay.shape_of(call_1034))) # shape=(6, 11, 14)
bop_1053 = relay.greater_equal(call_1035.astype('bool'), relay.reshape(var_1049.astype('bool'), relay.shape_of(call_1035))) # shape=(6, 11, 14)
output = bop_1050
output2 = bop_1053
func_1060 = relay.Function([var_1049,], output)
mod['func_1060'] = func_1060
mod = relay.transform.InferType()(mod)
var_1061 = relay.var("var_1061", dtype = "float32", shape = (6, 11, 14))#candidate|1061|(6, 11, 14)|var|float32
output = func_1060(var_1061)
func_1062 = relay.Function([var_1061], output)
mutated_mod['func_1062'] = func_1062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_773_call = mutated_mod.get_global_var('func_773')
call_1075 = relay.TupleGetItem(func_772_call(), 0)
call_1076 = relay.TupleGetItem(func_773_call(), 0)
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_1096 = relay.TupleGetItem(func_495_call(relay.reshape(call_1075.astype('float32'), [6, 11, 14])), 0)
call_1097 = relay.TupleGetItem(func_497_call(relay.reshape(call_1075.astype('float32'), [6, 11, 14])), 0)
func_104_call = mod.get_global_var('func_104')
func_105_call = mutated_mod.get_global_var('func_105')
call_1123 = relay.TupleGetItem(func_104_call(), 1)
call_1124 = relay.TupleGetItem(func_105_call(), 1)
func_858_call = mod.get_global_var('func_858')
func_862_call = mutated_mod.get_global_var('func_862')
var_1131 = relay.var("var_1131", dtype = "uint16", shape = (3360,))#candidate|1131|(3360,)|var|uint16
call_1130 = relay.TupleGetItem(func_858_call(relay.reshape(var_1131.astype('uint16'), [3360,]), relay.reshape(var_1131.astype('uint16'), [14, 240]), ), 2)
call_1132 = relay.TupleGetItem(func_862_call(relay.reshape(var_1131.astype('uint16'), [3360,]), relay.reshape(var_1131.astype('uint16'), [14, 240]), ), 2)
output = relay.Tuple([call_1075,call_1096,call_1123,call_1130,var_1131,])
output2 = relay.Tuple([call_1076,call_1097,call_1124,call_1132,var_1131,])
func_1150 = relay.Function([var_1131,], output)
mod['func_1150'] = func_1150
mod = relay.transform.InferType()(mod)
mutated_mod['func_1150'] = func_1150
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1151 = relay.var("var_1151", dtype = "uint16", shape = (3360,))#candidate|1151|(3360,)|var|uint16
func_1150_call = mutated_mod.get_global_var('func_1150')
call_1152 = func_1150_call(var_1151)
output = call_1152
func_1153 = relay.Function([var_1151], output)
mutated_mod['func_1153'] = func_1153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_787_call = mod.get_global_var('func_787')
func_789_call = mutated_mod.get_global_var('func_789')
call_1168 = relay.TupleGetItem(func_787_call(), 1)
call_1169 = relay.TupleGetItem(func_789_call(), 1)
uop_1188 = relay.erf(call_1168.astype('float64')) # shape=(6, 11, 14)
uop_1190 = relay.erf(call_1169.astype('float64')) # shape=(6, 11, 14)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_1194 = relay.TupleGetItem(func_139_call(), 0)
call_1195 = relay.TupleGetItem(func_140_call(), 0)
output = relay.Tuple([uop_1188,call_1194,])
output2 = relay.Tuple([uop_1190,call_1195,])
func_1202 = relay.Function([], output)
mod['func_1202'] = func_1202
mod = relay.transform.InferType()(mod)
mutated_mod['func_1202'] = func_1202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mutated_mod.get_global_var('func_1202')
call_1203 = func_1202_call()
output = call_1203
func_1204 = relay.Function([], output)
mutated_mod['func_1204'] = func_1204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_1223 = relay.TupleGetItem(func_1202_call(), 1)
call_1224 = relay.TupleGetItem(func_1204_call(), 1)
output = relay.Tuple([call_1223,])
output2 = relay.Tuple([call_1224,])
func_1230 = relay.Function([], output)
mod['func_1230'] = func_1230
mod = relay.transform.InferType()(mod)
output = func_1230()
func_1231 = relay.Function([], output)
mutated_mod['func_1231'] = func_1231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_104_call = mod.get_global_var('func_104')
func_105_call = mutated_mod.get_global_var('func_105')
call_1244 = relay.TupleGetItem(func_104_call(), 1)
call_1245 = relay.TupleGetItem(func_105_call(), 1)
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_1252 = relay.TupleGetItem(func_495_call(relay.reshape(call_1244.astype('float32'), [6, 11, 14])), 1)
call_1253 = relay.TupleGetItem(func_497_call(relay.reshape(call_1244.astype('float32'), [6, 11, 14])), 1)
func_787_call = mod.get_global_var('func_787')
func_789_call = mutated_mod.get_global_var('func_789')
call_1262 = relay.TupleGetItem(func_787_call(), 0)
call_1263 = relay.TupleGetItem(func_789_call(), 0)
output = relay.Tuple([call_1244,call_1252,call_1262,])
output2 = relay.Tuple([call_1245,call_1253,call_1263,])
func_1264 = relay.Function([], output)
mod['func_1264'] = func_1264
mod = relay.transform.InferType()(mod)
output = func_1264()
func_1265 = relay.Function([], output)
mutated_mod['func_1265'] = func_1265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1264_call = mod.get_global_var('func_1264')
func_1265_call = mutated_mod.get_global_var('func_1265')
call_1372 = relay.TupleGetItem(func_1264_call(), 2)
call_1373 = relay.TupleGetItem(func_1265_call(), 2)
output = relay.Tuple([call_1372,])
output2 = relay.Tuple([call_1373,])
func_1380 = relay.Function([], output)
mod['func_1380'] = func_1380
mod = relay.transform.InferType()(mod)
output = func_1380()
func_1381 = relay.Function([], output)
mutated_mod['func_1381'] = func_1381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_1494 = relay.TupleGetItem(func_1380_call(), 0)
call_1495 = relay.TupleGetItem(func_1381_call(), 0)
func_725_call = mod.get_global_var('func_725')
func_726_call = mutated_mod.get_global_var('func_726')
call_1503 = relay.TupleGetItem(func_725_call(), 1)
call_1504 = relay.TupleGetItem(func_726_call(), 1)
output = relay.Tuple([call_1494,call_1503,])
output2 = relay.Tuple([call_1495,call_1504,])
func_1505 = relay.Function([], output)
mod['func_1505'] = func_1505
mod = relay.transform.InferType()(mod)
output = func_1505()
func_1506 = relay.Function([], output)
mutated_mod['func_1506'] = func_1506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_1533 = relay.TupleGetItem(func_921_call(), 1)
call_1534 = relay.TupleGetItem(func_923_call(), 1)
output = call_1533
output2 = call_1534
func_1545 = relay.Function([], output)
mod['func_1545'] = func_1545
mod = relay.transform.InferType()(mod)
mutated_mod['func_1545'] = func_1545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1545_call = mutated_mod.get_global_var('func_1545')
call_1546 = func_1545_call()
output = call_1546
func_1547 = relay.Function([], output)
mutated_mod['func_1547'] = func_1547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_1565 = relay.TupleGetItem(func_921_call(), 0)
call_1566 = relay.TupleGetItem(func_923_call(), 0)
func_1264_call = mod.get_global_var('func_1264')
func_1265_call = mutated_mod.get_global_var('func_1265')
call_1574 = relay.TupleGetItem(func_1264_call(), 1)
call_1575 = relay.TupleGetItem(func_1265_call(), 1)
output = relay.Tuple([call_1565,call_1574,])
output2 = relay.Tuple([call_1566,call_1575,])
func_1579 = relay.Function([], output)
mod['func_1579'] = func_1579
mod = relay.transform.InferType()(mod)
output = func_1579()
func_1580 = relay.Function([], output)
mutated_mod['func_1580'] = func_1580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1264_call = mod.get_global_var('func_1264')
func_1265_call = mutated_mod.get_global_var('func_1265')
call_1612 = relay.TupleGetItem(func_1264_call(), 2)
call_1613 = relay.TupleGetItem(func_1265_call(), 2)
const_1617 = relay.const([[[-2.956309,-2.470472,-0.798507,4.789229,-0.295188,2.883299,-4.054115,2.045205,-4.263611,-0.984964,2.425939,-4.431622,-8.989389,5.092016],[1.302330,1.328688,-1.522824,-2.302561,3.317986,-1.339925,1.937542,-9.997833,-9.510286,-1.630380,-0.668820,-0.811027,-5.028542,3.759723],[4.311415,9.367072,8.930505,-8.725934,-8.416570,-5.541583,-6.338411,8.551413,9.927838,-4.515967,-6.318088,-7.273018,6.773145,-3.004449],[3.183305,-6.396486,-2.546020,-8.064409,-1.885590,4.373844,1.227505,-0.778492,-6.116166,8.067379,-9.628995,2.272775,-1.943224,6.368101],[6.694358,6.283412,5.142738,6.030310,9.367445,-1.126174,-4.562172,9.679557,4.156802,-8.817592,9.734277,1.384279,7.995133,-9.686120],[-8.734893,5.114685,9.157137,5.235433,3.153930,-1.094423,-0.081844,-3.805510,-2.366601,-5.739458,-3.126124,5.500174,-3.520141,2.150433],[-3.587031,3.109479,7.833327,-0.908566,6.456136,5.789881,-0.634139,-3.723170,-8.358790,2.985299,-9.382742,7.716497,-8.856826,-9.418921],[3.279405,-7.944004,-3.238414,8.646924,9.885354,-2.879196,2.307351,2.928446,-8.665521,-1.536640,-9.452878,7.443773,0.582286,1.957541],[-0.404641,-4.729459,4.462149,3.054710,-0.882071,1.753390,-6.096773,-7.184023,-7.238857,5.110900,3.982974,0.428877,2.469440,-6.210739],[5.810657,1.592440,-0.398600,-3.300293,-6.787456,0.374475,-5.408195,-0.574931,-3.473267,-9.056627,-2.960066,9.617805,6.317457,-0.739038],[-7.150938,2.802588,-3.695861,1.206559,-1.450805,0.546028,6.215531,5.943870,8.530659,-6.180864,-1.983452,-0.298453,-6.810924,0.618913]],[[5.142020,-7.313249,-2.272457,1.270033,-4.038850,1.916016,-2.046316,-0.847233,7.132313,5.013952,6.091493,8.931239,-5.215608,8.304073],[2.593101,-8.839094,-8.287383,-2.906546,-0.304511,9.834302,-7.732111,8.875586,3.535838,-9.568910,1.835023,-4.302084,7.082807,4.563123],[5.765020,-5.289396,6.273104,1.397408,-5.331940,-4.898484,-7.233717,0.926724,3.612374,9.302867,-9.297641,0.261756,-4.888150,5.937641],[7.158730,4.467202,4.221910,-6.862285,4.509863,-4.109639,5.935402,-3.655147,-9.163790,2.934677,1.641604,5.575356,-8.756582,5.723365],[-4.913392,9.401964,1.399728,-8.905061,-5.627680,6.408192,7.102910,7.935193,2.491330,-4.848801,-9.946612,7.730255,-3.370702,2.196395],[2.600946,0.071467,5.433910,-7.694970,-0.342259,4.663317,7.109418,-6.021309,-1.922117,6.740359,5.964771,-6.375124,6.775704,7.060210],[-1.453108,3.604801,-4.753839,4.895732,4.175295,-2.289546,-2.505937,-9.048304,1.305163,-2.972673,0.666919,9.137137,9.680960,-4.883207],[9.519304,8.467789,-2.067991,6.311138,6.638770,2.369090,-5.500288,-1.659451,5.341289,-2.310674,6.553304,7.817642,8.138350,-8.469656],[-1.925756,2.786463,-1.712954,8.373125,6.798211,0.419378,7.146502,4.543389,4.062800,-0.573928,8.910224,5.675466,-1.587662,9.533096],[4.177573,-3.152933,-4.884538,5.329772,-6.751685,6.172689,0.267394,8.757962,1.352936,0.789622,-7.740724,-0.148989,-4.098442,6.198234],[-0.827736,-8.905788,-8.704138,4.153107,5.611596,8.175850,0.347375,5.773942,-8.525842,4.507945,-1.493842,-0.151757,-4.765024,-4.508856]],[[-8.369252,8.195240,-3.487235,-6.711001,5.344961,1.778016,-3.276085,-6.217898,1.774080,-9.800913,-9.557068,-3.375824,-3.355931,-0.329459],[3.161628,-2.515770,-8.464272,-4.636028,1.773578,0.457580,-7.540245,1.888667,8.364130,-8.035860,-4.428591,-7.620739,-3.669132,6.625273],[8.444956,7.561003,-6.157773,-9.196054,-7.676739,3.166725,5.990505,-8.539760,2.381283,-9.605043,5.246806,2.530016,-0.124155,2.797043],[-3.998088,9.773851,-9.173982,-1.301770,-8.244563,3.933883,4.035027,1.270581,5.178592,-5.465549,2.618385,7.163505,2.381151,-0.573226],[4.155288,-8.389251,-2.988364,1.469088,6.354963,5.483795,5.950149,-7.612868,4.726818,4.716161,2.292373,5.956260,5.513484,2.353209],[-7.257128,-8.349709,4.336757,2.103652,-8.296382,-3.605249,0.626378,-5.639676,-7.010664,9.795317,-4.348253,-5.365308,9.082802,-1.199251],[3.243132,0.962029,-2.856307,2.008710,2.184693,4.939792,1.192650,0.769351,-1.192868,3.281546,-9.502461,-7.608044,-3.608979,-5.252972],[1.826300,-9.706188,-1.915573,-8.830581,8.259731,5.007960,-6.936436,-3.048346,-7.370680,-6.830108,7.873030,-9.822941,0.736583,-9.185366],[7.138831,6.832734,-0.678879,3.197652,5.472284,1.119817,2.270451,1.505214,7.278767,-3.992319,1.713938,-9.333209,-4.246036,-8.547153],[-3.589807,2.060667,0.182572,-1.703565,-2.098812,9.560217,5.935545,-8.304174,2.643068,-2.060189,-1.258629,-5.025455,-3.079801,-1.420404],[2.077817,-4.211716,-7.129420,-9.681072,-7.276262,7.440677,-5.311068,-7.779117,3.107468,6.190757,5.436617,1.124577,-6.090632,0.947797]],[[9.882008,9.506996,4.680455,-9.159397,-7.703329,8.319135,9.663566,0.828074,9.689737,2.347620,1.336395,6.144123,-4.461816,-0.746659],[7.766278,0.395523,4.041082,8.489432,-0.914540,-2.657817,-9.747510,4.800786,-0.975692,-9.623862,5.652239,-7.474181,-8.787069,3.485417],[2.130913,0.278185,1.631799,7.077349,5.472183,7.995753,-3.567564,-3.228884,-1.118628,-4.841364,3.725579,-0.544821,-5.340759,0.834729],[4.435295,6.127073,-2.044003,3.776399,-7.155877,-4.057664,2.732855,3.280015,-2.173254,1.855858,-4.151673,1.165343,-8.788006,-7.253735],[7.213322,0.462644,-7.963286,5.328202,2.008742,-9.417694,7.580909,0.092200,7.103260,-8.565803,8.951735,-4.830353,2.951748,0.655027],[8.379489,-7.814083,2.887943,7.983666,-0.371854,-4.366346,9.493907,5.511865,7.715477,-5.790073,-5.953298,-2.439144,-2.415795,6.355446],[9.353672,5.585445,-6.486618,1.956630,6.865653,8.198982,1.118346,2.058585,-2.830542,2.850410,7.722463,-5.460755,-7.594785,1.838329],[7.164870,-7.798226,5.675221,-7.953484,0.071629,4.247361,-5.881626,-6.317490,-7.521745,5.940169,1.799565,5.363955,-2.715376,-7.225219],[-3.825583,7.149365,-0.049647,-7.621039,5.339070,5.415412,-2.806991,8.915909,8.760762,-9.968360,1.609921,-5.903667,-7.044163,9.484878],[-0.902849,4.756998,-2.491512,-6.824342,-4.155997,-0.785460,7.311094,-2.498592,5.995772,2.294343,-6.365297,-8.270441,9.039083,-7.696008],[-5.291150,-1.293761,5.253129,-5.905597,-3.023658,-6.799759,4.979138,-6.262489,-9.768168,0.946292,-0.094789,-5.624884,-1.308484,-7.021873]],[[3.097999,-2.590544,-8.473602,-3.563091,-6.059983,5.080068,-1.918576,-0.763033,5.676942,-3.224720,0.540833,6.003127,-4.731303,-9.281319],[-1.002881,-6.025122,2.478052,-9.864336,5.974714,1.045726,1.043902,-8.419529,-4.235070,4.978747,0.801356,2.088387,6.853992,-0.717052],[-0.242865,3.152448,9.523922,0.808919,-9.746677,9.870431,-3.565679,1.206651,2.138753,4.024086,-0.146494,0.837499,2.753585,2.645933],[2.597532,-0.197336,-1.521959,3.928208,-5.904219,2.610546,-6.396400,-9.642693,5.011694,-8.314654,-7.707543,8.265709,-5.643064,-0.374279],[0.297010,4.753210,-2.061071,3.831840,0.824964,-1.012984,8.900709,-5.545128,-3.672149,-7.540690,-6.892422,9.859698,1.418399,-1.714682],[7.843113,3.771250,-6.710012,-9.082401,-8.041035,8.507541,-9.506927,6.248800,0.121569,5.887483,6.411120,-0.059882,-7.094189,-4.365245],[-1.421157,0.790174,2.505172,-2.919578,9.984693,-9.752953,-5.654279,4.522273,-7.207465,-1.659388,-8.455590,8.661131,-0.779842,-3.615783],[1.772253,-5.597035,0.724717,-8.362608,-4.369164,-8.148927,0.237785,8.319461,-5.075933,-8.224265,-4.082522,5.909315,-4.853154,-9.885772],[-8.520806,8.133851,7.128498,2.927354,9.537239,5.911101,-1.007705,-8.943184,8.495469,-1.350675,-2.597814,-4.518302,3.588241,-3.377464],[-1.075791,-4.358723,1.672697,3.195776,2.516154,2.488023,-1.201471,-6.882149,-7.959135,-2.691161,8.449315,2.976996,3.352817,-1.912910],[3.948513,-5.550925,4.858750,-0.990579,-9.448800,3.892434,-3.712424,-2.853431,1.893383,-9.196917,2.157936,2.385916,3.572091,7.729012]],[[-7.914335,4.446310,-1.424544,-6.774858,7.680377,-3.313953,-4.340439,8.597572,-5.615515,2.113143,0.568198,4.072622,-0.928008,5.924067],[4.486969,-2.697224,-7.677503,-3.567545,0.592234,-4.491932,3.240479,-2.065720,-3.247139,9.829075,9.819995,-1.792094,-1.152802,-2.704586],[1.504486,-5.413629,-0.355841,-3.463470,-5.301093,2.457127,2.827996,-4.295793,-3.928463,-6.671856,0.971999,8.203186,-2.529121,6.940677],[3.258672,1.637946,6.091377,3.810999,-7.452071,-0.850344,-1.600051,-4.752154,5.770218,6.391379,1.813611,-7.721408,5.036396,-5.061418],[9.057033,-0.211636,7.572417,9.527339,6.726558,-0.716059,5.946146,-2.894684,-5.898571,4.040918,-4.530918,0.516011,0.441630,-4.730334],[4.852724,-7.735835,-6.603788,6.479117,4.923767,-5.426666,7.236145,-6.435787,5.948250,1.711453,-0.524627,9.093534,0.808925,-3.028668],[-7.196886,5.026911,9.802100,-8.792211,-4.302329,4.336575,0.725903,-9.937346,-7.863918,4.032994,3.935390,7.468364,6.573177,-9.458098],[6.403535,6.437777,4.507423,0.139020,2.198880,-9.966069,8.153907,5.740321,9.540487,-6.553973,-9.364354,6.955390,-1.601696,2.483186],[9.990463,-7.557038,3.829840,-4.628429,-8.513690,7.373323,-3.935466,8.045526,-9.822384,-8.700060,-1.723459,1.781495,-2.706438,-1.503803],[-5.359065,-9.047668,-6.809850,-3.304843,6.020047,-6.544417,4.995199,3.020606,-7.762848,4.585260,6.406848,-7.175330,-4.841532,-3.378756],[8.403496,7.536779,9.944243,5.446267,-4.374853,3.355039,7.288478,6.572482,5.648285,-7.090187,1.636648,-3.087996,0.109982,-1.615384]]], dtype = "float32")#candidate|1617|(6, 11, 14)|const|float32
bop_1618 = relay.logical_or(call_1612.astype('bool'), relay.reshape(const_1617.astype('bool'), relay.shape_of(call_1612))) # shape=(6, 11, 14)
bop_1621 = relay.logical_or(call_1613.astype('bool'), relay.reshape(const_1617.astype('bool'), relay.shape_of(call_1613))) # shape=(6, 11, 14)
output = relay.Tuple([bop_1618,])
output2 = relay.Tuple([bop_1621,])
func_1637 = relay.Function([], output)
mod['func_1637'] = func_1637
mod = relay.transform.InferType()(mod)
mutated_mod['func_1637'] = func_1637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1637_call = mutated_mod.get_global_var('func_1637')
call_1638 = func_1637_call()
output = call_1638
func_1639 = relay.Function([], output)
mutated_mod['func_1639'] = func_1639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_1648 = relay.TupleGetItem(func_921_call(), 1)
call_1649 = relay.TupleGetItem(func_923_call(), 1)
output = call_1648
output2 = call_1649
func_1650 = relay.Function([], output)
mod['func_1650'] = func_1650
mod = relay.transform.InferType()(mod)
mutated_mod['func_1650'] = func_1650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1650_call = mutated_mod.get_global_var('func_1650')
call_1651 = func_1650_call()
output = call_1651
func_1652 = relay.Function([], output)
mutated_mod['func_1652'] = func_1652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1579_call = mod.get_global_var('func_1579')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_1653 = relay.TupleGetItem(func_1579_call(), 0)
call_1654 = relay.TupleGetItem(func_1580_call(), 0)
func_1202_call = mod.get_global_var('func_1202')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_1706 = relay.TupleGetItem(func_1202_call(), 1)
call_1707 = relay.TupleGetItem(func_1204_call(), 1)
func_1150_call = mod.get_global_var('func_1150')
func_1153_call = mutated_mod.get_global_var('func_1153')
var_1713 = relay.var("var_1713", dtype = "uint16", shape = (3360,))#candidate|1713|(3360,)|var|uint16
call_1712 = relay.TupleGetItem(func_1150_call(relay.reshape(var_1713.astype('uint16'), [3360,])), 4)
call_1714 = relay.TupleGetItem(func_1153_call(relay.reshape(var_1713.astype('uint16'), [3360,])), 4)
output = relay.Tuple([call_1653,call_1706,call_1712,var_1713,])
output2 = relay.Tuple([call_1654,call_1707,call_1714,var_1713,])
func_1736 = relay.Function([var_1713,], output)
mod['func_1736'] = func_1736
mod = relay.transform.InferType()(mod)
mutated_mod['func_1736'] = func_1736
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1737 = relay.var("var_1737", dtype = "uint16", shape = (3360,))#candidate|1737|(3360,)|var|uint16
func_1736_call = mutated_mod.get_global_var('func_1736')
call_1738 = func_1736_call(var_1737)
output = call_1738
func_1739 = relay.Function([var_1737], output)
mutated_mod['func_1739'] = func_1739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1506_call = mutated_mod.get_global_var('func_1506')
call_1791 = relay.TupleGetItem(func_1505_call(), 0)
call_1792 = relay.TupleGetItem(func_1506_call(), 0)
output = relay.Tuple([call_1791,])
output2 = relay.Tuple([call_1792,])
func_1795 = relay.Function([], output)
mod['func_1795'] = func_1795
mod = relay.transform.InferType()(mod)
output = func_1795()
func_1796 = relay.Function([], output)
mutated_mod['func_1796'] = func_1796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1230_call = mod.get_global_var('func_1230')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_1806 = relay.TupleGetItem(func_1230_call(), 0)
call_1807 = relay.TupleGetItem(func_1231_call(), 0)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_1809 = relay.TupleGetItem(func_1380_call(), 0)
call_1810 = relay.TupleGetItem(func_1381_call(), 0)
func_748_call = mod.get_global_var('func_748')
func_750_call = mutated_mod.get_global_var('func_750')
call_1826 = func_748_call(relay.reshape(call_1809.astype('int32'), [6, 11, 14]))
call_1827 = func_748_call(relay.reshape(call_1809.astype('int32'), [6, 11, 14]))
output = relay.Tuple([call_1806,call_1809,call_1826,])
output2 = relay.Tuple([call_1807,call_1810,call_1827,])
func_1851 = relay.Function([], output)
mod['func_1851'] = func_1851
mod = relay.transform.InferType()(mod)
output = func_1851()
func_1852 = relay.Function([], output)
mutated_mod['func_1852'] = func_1852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1579_call = mod.get_global_var('func_1579')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_1890 = relay.TupleGetItem(func_1579_call(), 0)
call_1891 = relay.TupleGetItem(func_1580_call(), 0)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
var_1894 = relay.var("var_1894", dtype = "uint16", shape = (3360,))#candidate|1894|(3360,)|var|uint16
call_1893 = relay.TupleGetItem(func_434_call(relay.reshape(var_1894.astype('uint16'), [14, 240])), 0)
call_1895 = relay.TupleGetItem(func_437_call(relay.reshape(var_1894.astype('uint16'), [14, 240])), 0)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_1897 = relay.TupleGetItem(func_1795_call(), 0)
call_1898 = relay.TupleGetItem(func_1796_call(), 0)
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_1903 = relay.TupleGetItem(func_495_call(relay.reshape(call_1897.astype('float32'), [6, 11, 14])), 1)
call_1904 = relay.TupleGetItem(func_497_call(relay.reshape(call_1897.astype('float32'), [6, 11, 14])), 1)
func_1579_call = mod.get_global_var('func_1579')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_1910 = relay.TupleGetItem(func_1579_call(), 0)
call_1911 = relay.TupleGetItem(func_1580_call(), 0)
func_1202_call = mod.get_global_var('func_1202')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_1912 = relay.TupleGetItem(func_1202_call(), 1)
call_1913 = relay.TupleGetItem(func_1204_call(), 1)
output = relay.Tuple([call_1890,call_1893,var_1894,call_1897,call_1903,call_1910,call_1912,])
output2 = relay.Tuple([call_1891,call_1895,var_1894,call_1898,call_1904,call_1911,call_1913,])
func_1915 = relay.Function([var_1894,], output)
mod['func_1915'] = func_1915
mod = relay.transform.InferType()(mod)
mutated_mod['func_1915'] = func_1915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1916 = relay.var("var_1916", dtype = "uint16", shape = (3360,))#candidate|1916|(3360,)|var|uint16
func_1915_call = mutated_mod.get_global_var('func_1915')
call_1917 = func_1915_call(var_1916)
output = call_1917
func_1918 = relay.Function([var_1916], output)
mutated_mod['func_1918'] = func_1918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_1944 = relay.TupleGetItem(func_1202_call(), 0)
call_1945 = relay.TupleGetItem(func_1204_call(), 0)
func_1230_call = mod.get_global_var('func_1230')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_1978 = relay.TupleGetItem(func_1230_call(), 0)
call_1979 = relay.TupleGetItem(func_1231_call(), 0)
output = relay.Tuple([call_1944,call_1978,])
output2 = relay.Tuple([call_1945,call_1979,])
func_1998 = relay.Function([], output)
mod['func_1998'] = func_1998
mod = relay.transform.InferType()(mod)
output = func_1998()
func_1999 = relay.Function([], output)
mutated_mod['func_1999'] = func_1999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_2053 = relay.TupleGetItem(func_1202_call(), 0)
call_2054 = relay.TupleGetItem(func_1204_call(), 0)
func_104_call = mod.get_global_var('func_104')
func_105_call = mutated_mod.get_global_var('func_105')
call_2067 = relay.TupleGetItem(func_104_call(), 1)
call_2068 = relay.TupleGetItem(func_105_call(), 1)
output = relay.Tuple([call_2053,call_2067,])
output2 = relay.Tuple([call_2054,call_2068,])
func_2072 = relay.Function([], output)
mod['func_2072'] = func_2072
mod = relay.transform.InferType()(mod)
mutated_mod['func_2072'] = func_2072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2072_call = mutated_mod.get_global_var('func_2072')
call_2073 = func_2072_call()
output = call_2073
func_2074 = relay.Function([], output)
mutated_mod['func_2074'] = func_2074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1264_call = mod.get_global_var('func_1264')
func_1265_call = mutated_mod.get_global_var('func_1265')
call_2075 = relay.TupleGetItem(func_1264_call(), 1)
call_2076 = relay.TupleGetItem(func_1265_call(), 1)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_2088 = relay.TupleGetItem(func_921_call(), 1)
call_2089 = relay.TupleGetItem(func_923_call(), 1)
func_1505_call = mod.get_global_var('func_1505')
func_1506_call = mutated_mod.get_global_var('func_1506')
call_2094 = relay.TupleGetItem(func_1505_call(), 0)
call_2095 = relay.TupleGetItem(func_1506_call(), 0)
output = relay.Tuple([call_2075,call_2088,call_2094,])
output2 = relay.Tuple([call_2076,call_2089,call_2095,])
func_2106 = relay.Function([], output)
mod['func_2106'] = func_2106
mod = relay.transform.InferType()(mod)
output = func_2106()
func_2107 = relay.Function([], output)
mutated_mod['func_2107'] = func_2107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1637_call = mod.get_global_var('func_1637')
func_1639_call = mutated_mod.get_global_var('func_1639')
call_2124 = relay.TupleGetItem(func_1637_call(), 0)
call_2125 = relay.TupleGetItem(func_1639_call(), 0)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_2127 = relay.TupleGetItem(func_1012_call(), 0)
call_2128 = relay.TupleGetItem(func_1014_call(), 0)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_2150 = relay.TupleGetItem(func_1380_call(), 0)
call_2151 = relay.TupleGetItem(func_1381_call(), 0)
func_236_call = mod.get_global_var('func_236')
func_241_call = mutated_mod.get_global_var('func_241')
const_2155 = relay.const([[-7,1,6,-5],[-7,1,-1,-8],[-6,8,-4,-6],[5,7,-3,2],[-1,3,-7,4],[7,8,8,9],[-2,-4,8,-9],[9,-9,-7,4],[6,-5,6,-10],[5,-2,-2,8],[8,10,-9,-8],[-5,1,-10,9],[-4,10,4,-4],[-6,1,-7,-3],[1,2,-2,-8],[-7,-10,8,2],[4,4,10,6],[-6,5,7,10],[-9,8,1,10],[-7,-5,-10,8],[9,-3,-10,6],[-7,9,8,2],[4,-1,-5,4],[-3,-8,-6,-8],[-6,5,-9,2],[-1,-10,4,6],[-1,2,-10,-10],[5,-6,4,-5],[3,8,10,-8],[5,-10,1,7],[-3,-7,-7,-5],[-5,-3,-5,1],[8,-1,-9,9],[-8,-3,5,10],[10,10,-4,-10],[-8,-10,-9,4],[-8,6,-6,3],[6,-5,-7,8],[2,-7,-4,7],[-7,-6,8,6],[5,-5,-8,6],[-6,2,6,3],[9,6,6,-5],[10,1,-1,4],[-10,-8,-9,2],[-7,-1,6,1],[-5,-9,10,-5],[-3,-10,3,2],[-5,2,7,1],[10,-7,5,2],[-4,-2,4,7],[-2,-2,3,8],[4,-3,-4,5],[4,10,9,-3],[4,-9,1,-6],[5,9,3,7],[5,-8,-2,-3],[-4,-10,-7,-8],[-8,-9,-5,3],[-4,1,8,-7],[-7,4,-8,8],[1,5,-2,-1],[9,9,-7,-7],[3,-10,-5,-7],[-4,2,9,-3],[1,-10,-2,1],[-3,7,-1,4],[-2,8,-1,-10],[6,-6,3,5],[1,6,6,-5],[8,-10,-8,-6],[9,10,6,7],[-3,9,6,9],[-9,9,2,8],[-5,10,3,6],[9,5,5,9],[7,-5,2,-8],[-8,-10,-2,2],[-7,3,-10,3],[4,-7,10,-8],[-4,9,6,8],[-6,-4,-5,8],[-1,-3,9,-10],[-3,-3,-3,-1],[-3,-4,10,2],[-8,-6,5,8],[-6,-6,-6,9],[5,6,4,-4],[8,5,10,3],[6,-5,-3,8],[4,4,2,1],[7,5,5,-6],[9,-2,-1,-7],[2,9,-4,5],[-10,-8,-4,8],[-8,-1,-4,9],[-10,-10,-4,7],[8,-3,2,-10],[1,-5,-9,-6],[-7,2,-6,3],[-10,9,2,1],[-4,2,-6,-10],[-10,-2,9,-6],[5,-8,-6,10],[-3,-9,-7,-7],[-7,-8,-3,8],[3,-2,7,9],[-5,4,-7,9],[-5,7,1,6],[-2,8,5,9],[-5,-2,-1,4],[-7,1,-5,6],[-1,6,6,7],[-8,-5,1,3],[-7,8,-4,-7],[-1,5,-9,7],[-5,-1,5,-10],[2,-6,-9,9],[-1,-5,-9,8],[-1,5,-5,1],[5,2,9,-5],[-9,-6,-9,4],[3,-9,-2,-2],[1,4,-10,-9],[-8,-7,4,9],[-2,-2,9,-4],[-7,-5,-9,3],[-4,9,3,-1],[8,-9,-7,-6],[1,-1,-5,-5],[8,-1,-8,-9],[1,-6,-4,7],[-4,-4,3,1],[9,-8,-7,-5],[4,-3,10,5],[-10,10,-8,7],[3,5,5,-2],[6,-9,3,-9],[1,9,4,7],[-5,-9,1,-6],[-9,-10,7,-9],[2,-7,1,3],[-5,-5,6,-2],[-6,7,9,4],[6,-4,-6,5],[10,-4,-7,-3],[9,1,10,8],[8,-5,-1,-5],[-1,-10,-2,6],[7,3,8,6],[5,-5,-5,-3],[10,-10,-5,10],[5,-6,4,-9],[3,-3,-1,8],[-8,-3,8,6],[1,3,-10,-3],[-10,2,-10,-5],[4,-4,8,-2],[-9,-1,-8,6],[-10,7,-1,-5],[-9,7,7,-4],[1,-7,-4,-7],[-4,9,-5,3],[-6,-5,1,8],[-6,-1,6,-5],[3,-7,-1,-7],[3,6,3,-5],[-10,-7,-2,-10],[1,-1,-5,3],[-8,-5,5,3],[10,-7,-1,-5],[3,-9,-7,3],[-10,-5,3,-5],[10,-10,-3,-4],[4,-9,6,-5],[6,-5,-3,-10],[-3,10,-3,-6],[4,-8,1,-4],[-7,-2,-7,-1],[-1,3,-5,10],[8,-3,-4,3],[-5,9,-7,4],[3,5,3,10],[-2,-1,-8,4],[-9,-6,-6,-5],[2,-8,4,-10],[-8,-9,-3,-6],[-4,2,5,7],[-3,-1,1,-9],[-7,-3,6,1],[10,-6,9,-8],[6,4,-5,7],[3,4,-1,9],[9,10,7,1],[1,2,7,2],[1,-5,8,-4],[-8,-7,3,-9],[-9,-10,-2,6],[10,3,8,-3],[1,7,1,-10],[-4,-10,-2,1],[-9,10,6,3],[3,-3,1,-2],[-3,-4,4,5],[-1,-7,3,-6],[1,-4,-1,-10],[4,7,-9,-10],[2,9,7,4],[-9,1,-8,-6],[5,5,8,-2],[3,8,2,6],[-1,10,1,4],[-4,3,3,1],[7,4,5,8],[5,10,3,1],[-5,1,-4,7],[1,-8,-7,-2],[8,2,2,-3],[-5,4,1,1],[6,-5,9,8],[1,-4,-6,-5],[-10,10,-6,-9],[-6,-8,-10,-6],[-2,-9,-10,-1],[-3,-9,9,5],[-10,3,6,6],[9,-10,6,-5],[6,1,1,6],[7,2,1,7],[-10,9,4,-1],[-1,2,-6,6],[-3,7,7,5],[-1,9,-4,-3],[-9,-2,8,-8],[4,-6,8,-4],[7,4,-7,7],[8,9,-6,-8],[-5,-10,4,3],[9,-8,-9,8],[6,-1,5,-10],[-6,6,-3,7],[-5,-2,6,-4],[-5,1,-9,-10],[-3,7,-1,-4],[9,-8,-4,-2],[-3,-7,2,-3],[-6,-10,3,9],[3,5,-4,-10],[9,-5,5,2],[-4,9,10,2],[4,2,-4,-5],[-6,10,1,5],[9,3,-9,-4],[-5,10,4,-3],[6,10,-6,-8],[5,-4,-9,6],[-9,4,7,-3],[-2,10,-5,-8],[10,-10,1,9],[-7,4,-2,-5],[-1,-10,-8,1],[-6,-8,7,9],[-4,-4,-8,-2],[-7,-10,-9,1],[6,8,-4,4],[3,-8,-9,-8],[7,-7,6,-9],[-10,-2,-6,8],[-4,-3,-9,-8],[-10,1,-3,-10],[10,5,-1,-10],[3,-9,-5,-8],[5,-9,10,-7],[2,-8,6,7],[-9,3,-5,2],[-5,9,-10,-2],[10,-9,9,-1],[-3,-7,-10,8],[-7,1,4,-1],[6,2,7,-3],[5,7,10,-4],[8,-4,8,-8],[-5,-8,-4,-9],[-9,6,-6,4],[3,-5,1,7],[-3,-6,3,5],[-2,-8,-1,7],[-9,-7,4,-6],[7,1,1,5],[-9,4,-6,-1],[-9,7,5,2],[-8,8,-4,-8],[-4,-7,7,8],[5,-9,10,-3],[8,-10,3,6],[3,-3,6,6],[-2,-6,6,-4],[-7,-6,-4,7],[7,4,1,1],[-4,1,-8,2],[1,-9,-4,-10],[8,8,-4,-4],[2,3,8,7],[2,3,-4,-10],[-5,-4,1,-9],[-1,-1,-2,8],[-2,9,-6,-1],[-6,-8,9,5],[-6,2,4,-8],[-8,10,3,6],[-8,5,-3,2],[-3,10,-8,-8],[6,2,9,5],[-9,7,-2,9],[-10,-3,3,4],[6,7,-1,-8],[5,6,-10,-3],[-7,-2,5,-10],[6,-10,1,-6],[-8,-2,-10,-5],[-10,10,6,-8],[-4,-4,2,6],[7,8,1,-4],[-8,7,7,-2],[-5,-7,-4,1],[-3,-8,9,4],[3,-4,7,3],[-6,-3,2,-10],[-6,7,-9,-9],[-5,9,5,10],[7,-2,1,10],[-6,10,8,7],[6,5,2,10],[-3,1,-4,3],[4,6,1,-5],[-10,-8,-7,-2],[1,-10,1,10],[3,-9,-4,-8],[10,-8,-3,9],[-9,10,4,-1],[-7,-7,5,2],[1,-4,-6,5],[-10,4,-7,-5],[-1,-4,-4,9],[-8,-2,4,-10],[5,-1,-6,-6],[3,-10,-4,7],[-7,-10,6,6],[4,6,2,-6],[-9,10,5,-4],[6,9,6,-7],[4,5,5,-1],[-9,-10,2,2],[2,7,-7,-6],[-2,5,8,2],[-9,2,-10,4],[2,2,7,3],[5,-7,-10,7],[9,-1,-6,-10],[2,9,-7,-1],[7,2,5,-5],[7,5,6,-3],[-6,3,9,-4],[-7,1,8,-2],[-5,-2,10,-3],[1,6,9,-4],[4,-6,-3,4],[-5,-6,8,1],[2,6,-3,1],[-8,-3,8,4],[9,5,-10,3],[-5,-10,7,-8],[5,1,4,1],[-10,-1,-4,-2],[-4,-4,-7,10],[6,-5,-3,1],[7,-5,-5,5],[3,-8,10,1],[-7,8,3,-6],[-10,-1,-5,1],[8,7,4,-1],[-9,-5,8,-4],[-10,9,-10,2],[9,1,10,8],[-9,1,6,-2],[10,-5,-3,3],[9,9,-8,-9],[8,3,-3,-6],[-5,-6,9,-7],[7,-9,-10,6],[-8,-9,7,5],[2,-3,-6,-9],[-6,-3,5,5],[-3,2,9,-3],[4,3,-3,-9],[6,-10,-3,-5],[-6,-1,2,10],[-2,-9,2,-8],[-3,2,-3,1],[-4,-4,-9,-5],[9,5,4,7],[2,7,-7,2],[9,-5,6,-10],[6,9,-2,2],[10,5,5,-10],[-9,10,-5,5],[8,-4,4,9],[9,7,2,-5],[7,8,5,6],[6,-9,10,-5],[-3,-5,3,9],[1,3,3,6],[9,1,-4,7],[5,-3,9,-5],[4,-1,3,-1],[6,-8,2,-1],[9,-7,1,5],[10,-2,3,-3],[-7,-6,-4,7],[-10,1,2,-5],[3,6,-7,-9],[10,-6,-9,1],[-3,10,-5,9],[3,-9,9,-8],[7,-6,6,1],[-7,8,-8,-3],[8,-10,10,8],[7,-10,1,-1],[-3,-1,2,-4],[9,-4,3,-7],[9,-5,7,4],[-9,4,-2,8],[-4,6,-1,5],[-4,-8,-8,-1],[-4,-8,8,-9],[-6,-6,-8,8],[3,9,4,-7],[-5,-9,-2,10],[7,-9,9,1],[-10,8,3,-1],[-7,4,4,-2],[-6,2,3,4],[-9,4,-2,7],[-4,-10,-8,5],[1,9,-9,-2],[3,-5,-7,4],[-3,-6,-3,-6],[8,6,-7,1],[8,-3,2,6],[-1,-2,9,6],[6,6,5,-8],[10,-8,5,-6],[1,4,7,9],[-8,-6,-8,-8],[4,-4,7,-3],[6,-5,3,5],[-1,7,6,3],[8,-10,2,1],[-3,-7,8,9],[-3,6,4,-2],[-10,-10,-7,-10],[-4,3,10,6],[-2,-6,-2,6],[-9,-3,-8,7],[-4,-4,-2,7],[-9,-6,6,-4],[2,9,-7,3],[-1,-9,9,-7],[-3,-5,-7,2],[5,-5,-7,-1],[3,7,7,5],[4,5,10,-8],[2,9,-8,-5],[7,7,-1,5],[6,-5,9,1],[6,7,-9,-10],[-10,2,7,4],[9,10,-10,5],[4,-1,10,6],[-9,3,-10,10],[-9,2,2,-2],[9,-3,6,7],[8,2,-1,5],[3,-9,-10,-7],[-1,-8,8,4],[-1,-8,-4,8],[-4,-9,1,4],[-3,-9,2,-1],[8,8,9,-3],[10,9,8,-8],[-8,-9,3,4],[-8,7,10,5],[-9,-4,-8,3],[10,-3,-1,-5],[10,-9,7,6],[-6,-5,5,4],[6,6,-5,-3],[-1,7,9,-1],[6,-9,1,10],[2,-4,7,3],[-6,-7,-6,-9],[-7,10,-8,5],[1,9,-1,1],[-4,10,-3,-7],[10,1,4,-6],[4,-9,7,8],[-7,-3,-6,10],[1,3,3,-4],[-4,10,5,-1],[1,3,3,7],[-10,8,5,6],[-10,-2,9,-5],[-1,2,-2,-4],[6,-1,1,-1],[-8,-5,-7,-1],[-1,9,8,-4],[-2,2,-3,6],[-4,-10,-7,-5],[8,-10,-2,3],[3,-5,7,-10],[10,-2,8,2],[-7,8,1,-10],[5,5,2,-3],[1,6,9,-6],[7,2,6,-1],[6,6,5,10],[6,9,5,-3],[-10,-6,-6,-8],[2,10,3,2],[3,9,-4,9],[-4,7,8,8],[10,7,-6,-9],[-4,-6,-2,-8],[-6,2,6,9],[-8,3,-8,-6],[-3,-2,-9,-7],[10,9,2,7],[-4,8,-10,2],[-5,8,6,-10],[6,-7,-5,-5],[8,6,-1,7],[-4,5,-2,-6],[4,10,5,-6],[-4,-5,9,-3],[-5,-6,4,2],[-10,3,-6,1],[-10,-9,-1,-5],[9,-3,1,-5],[6,5,-7,-9],[-5,-1,1,2],[-10,-6,5,-5],[3,-5,7,3],[1,5,-6,-9],[9,4,9,-1],[7,2,-1,8],[-9,2,-3,9],[-4,6,-3,9],[-2,-1,-8,-3],[-10,-9,-4,-4],[-10,-8,3,8],[6,-5,6,8],[-8,-2,9,-1],[10,9,9,-8],[-2,-3,-8,10],[3,-10,1,1],[-6,6,-8,-6],[9,4,-1,-6],[-1,-7,9,10],[5,3,7,-5],[-6,-10,-8,-3],[-2,-4,1,7],[8,-10,3,9],[1,4,-7,-3],[-10,7,9,-6],[1,5,1,-4],[6,-5,4,-7],[-7,3,9,-7],[10,8,8,-2],[5,8,1,-4],[6,6,-3,-6],[-5,4,-6,-5],[-7,-6,9,1],[-7,-10,3,-7],[-5,-10,7,9],[-7,-6,-4,-1],[-3,5,7,6],[6,-6,1,-7],[-6,5,5,5],[-8,6,1,-4],[-6,-6,4,-1],[-9,-7,-8,-9],[3,10,-1,-1],[6,-3,-7,-3],[6,10,-3,-10],[7,7,4,-2],[1,7,4,10],[-7,1,2,1],[-5,-9,1,3],[7,-3,-5,9],[4,-7,-2,-2],[-2,5,7,3],[4,-10,-1,2],[2,-2,8,-4],[-5,-1,-2,8],[-6,-9,8,2],[-5,-8,5,8],[-5,8,-10,-6],[-7,-4,1,-2],[-6,9,4,9],[-4,-10,8,10],[-8,5,-3,3],[-9,7,-10,7],[2,3,5,-7],[-8,10,3,-7],[8,-9,4,-9],[2,3,6,9],[5,-4,-3,-1],[-6,-6,3,-9],[7,2,-1,-6],[-10,4,-10,4],[6,-6,-8,9],[2,-4,9,5],[-3,-7,1,-9],[4,-7,-8,-8],[10,3,-2,4],[6,-8,3,-10],[4,3,3,-4],[-7,9,-3,-10],[-2,-1,-5,-10],[-2,7,4,4],[-7,1,8,4],[8,1,-2,-4],[-5,-1,-9,3],[-9,-9,-10,-1],[9,-6,1,2],[-5,1,-3,-2],[-2,-9,3,-6],[-4,5,7,10],[10,-1,-8,-10],[-6,-2,8,5],[8,2,-6,2],[-3,-4,5,-4],[-2,5,10,2],[-6,4,10,-5],[3,-8,8,-9],[-8,-1,8,9],[-4,9,10,1],[8,2,-3,4],[8,5,3,7],[8,6,7,6],[-10,5,-6,5],[-2,-10,6,2],[-6,-8,-2,2],[-4,6,4,3],[6,-1,6,6],[3,-4,-2,2],[3,8,-6,-5],[-9,-4,-2,-6],[-4,-1,-2,-10],[-5,-5,9,4],[9,9,-2,-8],[5,3,-8,6],[-5,4,-3,4],[7,2,9,9],[-8,5,-3,3],[4,5,-5,6],[7,-7,4,-8],[-3,8,8,9],[-8,-8,-7,8],[6,-3,-4,1],[1,-2,1,8],[10,-5,-7,-4],[9,5,4,-7],[-7,-1,3,2],[4,-9,-2,1],[4,10,-2,-4],[10,-9,3,5],[10,10,-10,5],[4,8,-10,-10],[5,-6,8,-10],[-9,1,4,-3],[3,-6,-4,6],[-7,-6,3,1],[-7,7,-7,4],[-3,-10,-2,-3],[-4,8,2,-8],[8,5,-9,1],[5,1,-4,-8],[1,-8,-10,-8],[2,4,9,4],[-5,1,7,-2],[-2,4,10,-7],[-9,4,5,-6],[7,2,4,-5],[5,5,-10,4],[-9,-1,10,2],[2,1,-7,8],[-10,1,-4,-3],[2,3,-4,-5],[-5,4,4,-5],[1,6,4,3],[4,-8,-10,-9],[10,4,7,6],[6,7,5,6],[7,-3,8,7],[-10,10,7,-4],[-9,10,8,10],[-8,-3,7,7],[5,-9,6,3],[-2,-7,2,5],[-8,9,-10,1],[6,-1,7,-8],[-7,-5,2,8],[3,-2,-7,-8],[1,2,-8,1],[8,6,-9,-8],[-1,9,1,7],[5,10,-6,6],[10,1,2,2],[4,-7,-4,9],[-10,-1,6,-6],[7,2,6,3],[7,-4,7,-10],[5,4,-4,7],[1,-6,5,-9],[-8,8,-10,-10],[6,-7,1,8],[7,-7,6,7],[-3,-6,5,-3],[-8,-8,3,-9],[-3,5,-4,-10],[-6,-3,5,10],[3,10,-3,4],[5,2,-2,-8],[7,-7,-6,-3],[-7,5,-8,-4],[2,10,7,7],[-6,2,1,-2],[-3,1,-9,-6],[-3,-10,7,-4],[6,-4,-10,6],[3,-5,-6,-3],[6,-2,10,-1],[8,-8,3,-4],[7,-3,9,6],[-5,-6,-8,4],[5,-8,6,2],[1,9,-3,5],[8,-1,-7,-1],[-8,7,-8,-9],[-9,-1,-10,-6],[-4,-9,7,9],[3,-4,-6,5],[4,9,5,8],[-9,-6,4,10],[-9,7,2,-1],[5,-7,4,3],[6,-1,-2,-2],[10,7,-1,3],[7,-6,-7,6],[-6,-3,7,-8],[9,-3,-8,9],[-4,-1,-7,-7],[-6,7,-1,3],[8,-6,3,-9],[3,1,-6,1],[-1,4,-7,-4],[3,-4,6,2],[5,-8,-1,-9],[8,6,-4,-3],[9,5,-8,1],[-2,-6,4,2],[-5,10,-9,10],[10,-1,-5,1],[4,2,-7,-5],[-7,5,10,-5],[-10,-1,-3,-6],[7,9,-4,5],[-6,-1,-9,-10],[-9,2,-4,4],[-9,1,-6,-6],[4,4,-4,7],[-8,-3,-7,7],[-9,5,3,7],[4,5,5,-4],[7,-9,9,-2],[-6,-5,-9,-9],[1,-4,-5,10],[1,1,7,8],[-3,4,5,-10],[3,4,-10,-2],[8,7,1,3],[3,9,-9,-5],[-4,-6,-6,-9],[-4,1,-5,4],[3,7,1,5],[5,-5,10,9],[-8,2,1,-5],[6,8,-10,-5],[8,-6,-3,2],[-4,-4,-6,6],[-10,-9,2,8],[9,9,2,2],[-9,6,7,2],[4,6,1,-5],[-2,3,-8,2],[-9,-7,-9,1],[-7,-10,7,-8],[9,3,5,2],[2,-1,-8,-8],[-8,-8,-3,-4],[5,7,-5,-5],[8,-4,-3,10],[4,6,8,1],[-8,-10,-7,3],[10,6,-4,2],[8,-5,-4,8],[10,-2,-7,-2],[-9,8,-9,-9],[-1,-6,7,-7],[4,6,10,-8],[8,-9,-10,-4],[7,6,-4,-7],[-4,-10,-1,-6],[2,6,7,-4],[-3,-4,8,-3],[-1,-3,6,10],[4,-2,8,3],[1,-5,3,-5],[-4,7,-8,-9],[9,-2,1,-6],[-1,-2,-6,10],[-4,8,-4,-2],[-4,2,-1,-1],[-2,-7,4,-10],[4,7,-8,-9],[-1,8,10,8],[10,7,1,-4],[-10,8,6,2],[-1,-10,-5,-1]], dtype = "uint16")#candidate|2155|(840, 4)|const|uint16
call_2154 = relay.TupleGetItem(func_236_call(relay.reshape(const_2155.astype('uint16'), [14, 16, 15]), relay.reshape(const_2155.astype('uint16'), [14, 16, 15]), relay.reshape(const_2155.astype('uint16'), [14, 16, 15]), ), 0)
call_2156 = relay.TupleGetItem(func_241_call(relay.reshape(const_2155.astype('uint16'), [14, 16, 15]), relay.reshape(const_2155.astype('uint16'), [14, 16, 15]), relay.reshape(const_2155.astype('uint16'), [14, 16, 15]), ), 0)
func_1060_call = mod.get_global_var('func_1060')
func_1062_call = mutated_mod.get_global_var('func_1062')
call_2158 = func_1060_call(relay.reshape(call_2124.astype('float32'), [6, 11, 14]))
call_2159 = func_1060_call(relay.reshape(call_2124.astype('float32'), [6, 11, 14]))
output = relay.Tuple([call_2124,call_2127,call_2150,call_2154,const_2155,call_2158,])
output2 = relay.Tuple([call_2125,call_2128,call_2151,call_2156,const_2155,call_2159,])
func_2173 = relay.Function([], output)
mod['func_2173'] = func_2173
mod = relay.transform.InferType()(mod)
output = func_2173()
func_2174 = relay.Function([], output)
mutated_mod['func_2174'] = func_2174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_773_call = mutated_mod.get_global_var('func_773')
call_2206 = relay.TupleGetItem(func_772_call(), 0)
call_2207 = relay.TupleGetItem(func_773_call(), 0)
output = call_2206
output2 = call_2207
func_2211 = relay.Function([], output)
mod['func_2211'] = func_2211
mod = relay.transform.InferType()(mod)
mutated_mod['func_2211'] = func_2211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mutated_mod.get_global_var('func_2211')
call_2212 = func_2211_call()
output = call_2212
func_2213 = relay.Function([], output)
mutated_mod['func_2213'] = func_2213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_2232 = relay.TupleGetItem(func_1012_call(), 0)
call_2233 = relay.TupleGetItem(func_1014_call(), 0)
func_1579_call = mod.get_global_var('func_1579')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_2238 = relay.TupleGetItem(func_1579_call(), 0)
call_2239 = relay.TupleGetItem(func_1580_call(), 0)
func_1736_call = mod.get_global_var('func_1736')
func_1739_call = mutated_mod.get_global_var('func_1739')
const_2282 = relay.const([-7,4,-4,-8,-8,4,-6,4,5,-6,7,4,2,6,-8,-2,9,-10,-10,-4,3,-8,8,8,6,-4,-9,-5,-8,-7,-3,-1,4,-5,-10,-3,-7,-9,-3,-10,-2,-1,5,-3,10,3,-10,-4,-6,7,8,-6,-10,-9,3,-1,-6,-7,10,-7,-2,2,3,-4,-6,4,10,-8,6,-3,-9,-5,9,-7,1,-9,-2,-5,-10,-5,-10,2,-10,10,10,-8,-10,-3,4,1,-1,10,-3,10,4,2,6,-3,4,6,-9,-2,-7,9,4,9,-10,1,-6,9,-8,-1,2,-5,-9,10,-3,-6,-7,4,-7,-7,3,-2,-10,-8,-9,3,5,10,8,2,2,4,5,1,10,-8,-7,-4,1,-3,1,4,5,9,-5,7,-1,7,8,9,-7,2,9,-8,6,-3,-9,-2,-2,-10,-4,-4,-7,-2,-8,-2,7,-8,-8,7,8,-2,8,3,-6,6,-9,6,1,8,6,4,-4,10,-9,-9,-6,5,-4,1,-1,-4,7,-4,-8,8,4,7,-4,-1,3,-1,-10,2,-5,8,2,-4,-1,-7,-3,-3,7,-7,9,8,-10,1,-5,6,8,4,5,10,8,-5,2,-2,-9,2,6,10,-10,8,5,-5,-7,6,-9,-9,4,2,3,-5,-2,10,10,4,4,3,-5,4,-7,7,7,-7,-2,-4,-2,9,9,-1,-3,7,8,-7,-8,6,-3,5,1,-10,-10,9,-7,-7,-2,-5,5,2,-2,8,-4,-9,-9,9,-6,-4,5,-10,4,1,8,-10,-8,8,-3,-1,-3,6,-5,-4,3,-9,9,-3,9,-8,-9,-9,3,6,6,-5,-8,-10,5,3,-10,-8,-2,-4,4,7,4,-10,-3,-5,4,7,10,-4,-1,-2,-9,-4,1,1,1,3,-4,-4,-7,-6,-8,2,10,2,-3,4,5,5,5,-5,4,4,9,6,5,-9,-5,-3,-7,10,-9,3,2,2,-6,8,5,9,-7,1,7,9,1,10,-6,9,5,-1,-2,8,10,-7,5,-10,-10,-8,-1,10,-6,-9,1,10,-1,-4,-6,8,-6,2,2,-8,4,-1,1,-6,-2,-3,-6,8,6,8,-6,-7,-3,6,2,8,-7,9,-10,9,4,6,5,-5,8,10,-2,-6,7,-10,5,-2,-7,-4,-10,1,-3,5,-3,-6,6,4,-4,-2,-4,9,-10,-6,6,6,-3,1,5,3,-6,8,-6,9,5,-2,-4,2,5,-3,-8,-6,-9,6,-5,-2,9,-5,4,-4,7,-2,8,-7,2,4,10,-2,9,2,6,-6,-6,9,-7,1,-10,7,8,10,5,-9,-6,-5,-8,10,1,-8,-1,8,-9,-3,3,6,-3,1,-4,2,-1,6,4,-3,4,-3,-8,2,-10,-6,-5,2,1,-6,4,-5,-5,-6,7,-3,1,-5,-6,6,-3,7,-5,4,4,10,-7,5,-6,-2,-2,-5,2,-4,8,-2,-2,-7,-2,2,-2,-6,-9,-5,-3,7,2,8,1,-10,-2,10,-5,-3,-9,-3,-9,-3,3,3,-5,-1,10,10,-3,-10,5,1,6,-5,8,9,-10,-8,-10,-8,9,1,3,3,-4,-3,5,-6,-9,-8,-2,8,1,4,-5,6,4,-5,1,-4,-5,3,-4,-10,2,2,7,6,4,-9,4,4,7,8,-1,2,-1,3,3,-8,3,1,-2,10,-8,-6,6,-2,-1,-10,3,6,8,7,5,8,-7,-2,5,6,10,-6,4,-1,10,-7,5,5,5,5,-1,-1,-2,-9,4,-10,7,-3,6,6,-5,-7,6,-4,-7,-4,3,-7,8,-2,1,-7,8,9,-5,-9,6,3,-9,-7,-7,7,6,-5,-1,-5,8,1,3,9,-5,-8,-6,6,-9,6,-4,6,-6,-2,-7,-7,10,-1,10,-3,-2,-7,-4,-6,6,7,-4,7,5,4,8,-6,-3,-1,9,-9,5,-9,-1,-9,8,6,-2,-1,2,-8,-9,9,1,7,4,-1,2,-7,7,-9,-6,7,7,5,-5,10,-9,-6,-8,2,-8,10,-5,4,-7,-8,-7,-10,-5,6,10,-4,2,9,2,2,4,-2,1,2,-1,2,5,4,9,-8,3,-9,-1,-7,-2,4,2,-7,-4,-2,7,-2,-8,-2,4,7,3,6,-6,8,-3,4,-2,10,-7,-10,-8,7,-9,-2,-9,4,-7,-6,3,-9,-10,-2,3,8,-6,-4,-1,8,-2,-2,-1,2,7,9,6,6,10,-8,-10,2,-7,8,-9,-5,-9,1,5,6,-5,-2,4,7,-6,8,3,1,8,7,8,-10,1,6,7,8,8,3,7,-5,-6,10,3,-1,-1,-10,-10,-7,-2,-9,-7,-10,-8,-5,4,-10,5,2,-1,8,-1,2,-9,-4,-4,-9,-1,-5,6,6,2,-10,5,-2,7,8,-2,-1,1,-1,10,5,-3,-2,10,8,-3,-6,2,-5,-2,1,3,-5,9,9,-10,-3,-3,-1,-3,3,-7,6,-9,-2,-6,-4,-7,5,-5,-5,9,7,3,4,-6,3,10,-7,-4,1,-4,-1,4,-4,10,-3,1,10,-9,-1,-5,-10,-8,3,8,10,-9,-2,6,-1,7,-5,5,4,4,-8,-2,4,-9,-1,-3,8,1,4,-6,-6,-10,-3,8,8,3,-1,-6,4,-3,2,-6,-9,-10,6,1,-1,3,-5,-9,1,9,-6,6,-2,-3,-9,5,-7,3,3,5,5,7,-7,3,10,-1,-8,-6,-7,5,1,-4,-6,-2,-2,-2,3,5,8,9,9,-6,-6,-7,3,-1,-3,3,-3,-8,-9,10,-4,3,4,-9,3,-1,-10,-4,-10,9,1,3,-6,8,5,-9,-6,10,4,2,7,-8,2,9,-8,-5,2,-2,-1,2,-2,-5,-3,8,-6,-7,-6,9,-7,-9,-9,-4,4,-7,-8,-3,2,-9,-4,-4,-9,-3,-4,-10,3,5,-6,4,5,-7,4,5,1,-1,-1,7,-6,5,-5,2,-6,3,-6,-6,-10,-7,-4,-10,-6,-9,-8,9,7,7,-10,-1,5,-10,10,-5,-8,7,-5,-6,10,10,-2,-3,4,10,-8,-2,-6,8,-10,-10,-5,2,-4,3,-4,3,3,-6,7,-2,-8,9,-9,-1,8,-7,8,5,8,5,10,-9,-5,1,-10,6,9,1,2,5,5,7,1,-3,-7,-2,-8,9,3,-7,4,10,-1,-1,7,7,10,-5,-3,2,9,-6,-5,2,8,1,-3,7,-6,-8,-4,4,8,-5,-8,-2,10,-7,6,3,9,8,-6,7,-5,6,-4,3,10,5,-4,-8,-9,-9,2,-1,-5,4,-5,-5,10,10,-10,5,1,-9,-9,1,-1,2,-2,6,-1,-9,3,-7,-5,-4,1,6,-9,9,3,-3,2,-8,8,10,-4,8,-4,10,-3,4,-4,-6,-7,-1,6,-5,-9,1,-6,-9,-3,-10,1,4,-4,7,-1,1,9,8,-5,-4,-5,4,-9,6,9,6,-5,5,3,7,7,1,9,-1,-2,9,-1,1,-3,1,10,-1,2,-6,7,8,-1,-10,-6,-3,10,-6,-4,-3,1,-8,-3,-7,4,-9,-7,7,-4,8,-9,-8,4,10,-10,-4,6,3,-4,4,4,-1,10,8,-4,-6,9,4,8,1,6,9,1,3,2,3,1,-6,-1,-7,-5,2,8,7,-9,-4,-8,-8,4,-2,7,2,-1,-2,-5,9,-3,3,-6,-7,-1,-1,3,7,9,2,7,7,-2,-2,8,-8,4,-2,4,-5,-10,3,6,-9,-9,2,-6,-4,7,-9,7,10,9,-2,-1,7,5,-3,7,-5,-6,2,7,-2,2,-3,-9,10,3,4,-1,5,10,-5,3,-5,9,3,-5,-10,8,-8,4,-8,2,-5,10,6,-10,-9,3,4,-3,-5,3,7,-9,-8,-5,-4,-6,-9,-8,8,-10,-3,-3,4,-5,6,4,-9,10,-10,2,3,10,6,-1,-8,-3,3,-9,2,3,1,-3,4,6,10,7,-9,9,7,-2,-8,-5,9,-7,-7,8,10,8,5,-8,-5,-10,2,-10,7,1,4,-8,9,5,6,3,5,1,-5,-6,-6,5,-4,-6,-6,10,-4,-5,4,8,-3,7,2,1,9,-10,-4,2,1,-10,-4,8,-9,-10,3,4,-10,-6,-10,-4,4,3,-10,-7,2,9,-10,-5,-10,-3,-4,-10,9,-9,-5,-8,-8,9,8,8,-3,-6,-3,-1,8,5,10,-10,-1,8,3,-5,8,8,9,-6,2,5,-4,8,10,-8,9,9,-7,6,-2,-3,-6,-6,7,-7,-3,6,-1,-3,-8,-3,-7,6,9,7,4,4,9,5,2,-4,-6,-4,5,-10,-8,-1,-9,-10,1,-2,7,7,3,-1,3,10,8,-6,3,7,3,6,-6,-10,6,-4,-7,-9,10,-5,-9,-2,-1,9,8,-3,3,3,-6,6,7,4,-10,4,5,3,-4,-1,5,9,8,-4,-3,-2,-10,-2,-10,-10,-1,2,-4,10,-2,-5,2,10,-7,-3,-9,-1,5,5,10,-8,10,7,-5,-1,7,-3,1,-1,6,-9,8,6,-3,-9,-6,2,-6,-9,-5,7,-6,2,-2,6,-6,-2,6,8,-9,-2,3,-3,4,-10,-4,-2,-5,-8,7,4,-10,8,6,-7,2,-2,-3,5,-8,-6,-2,-5,-3,6,8,3,-8,-5,-6,9,-2,-4,7,4,-6,10,-9,7,-7,-1,-2,-4,-5,5,3,-1,7,2,9,-9,-8,-3,1,10,2,4,8,-4,-9,8,5,7,-7,3,-8,-10,-1,-5,4,2,-9,-10,2,-1,3,3,9,9,2,3,-6,8,8,10,1,8,6,-8,-9,1,10,-9,7,-6,-2,1,-4,3,-2,-1,-5,-4,6,3,-3,-7,-2,2,8,10,-9,-6,-10,4,-2,-7,-6,9,-5,7,-9,-8,3,-10,-2,-1,-1,-5,-5,-5,5,-5,-6,-3,1,6,-4,-10,-6,10,-1,10,-7,5,5,-9,5,-1,10,-10,4,10,-2,-7,-1,8,-7,5,7,-3,1,3,8,7,-8,1,-6,-1,1,9,-4,-5,-9,-4,2,9,1,-1,7,-7,8,-8,8,3,7,1,-10,2,-9,-6,-6,-4,8,-4,-5,2,10,8,-9,-7,-4,8,7,5,-8,6,-7,-1,-8,-2,9,-6,1,-6,4,9,-4,-2,-8,-6,10,-2,-4,2,7,5,-7,4,-5,-10,-4,9,-5,8,9,-2,5,6,5,1,3,10,7,7,6,2,-6,9,-3,-5,-10,1,-8,-7,4,-9,-4,-6,2,-10,1,-10,3,10,-4,-10,1,4,-8,-6,-8,1,3,2,3,6,4,-2,-3,4,-7,-6,8,10,10,10,9,2,1,9,-6,7,-9,8,1,-1,-10,7,-6,2,2,-6,5,5,1,-1,7,8,9,7,-2,10,-5,8,5,7,-3,-10,-2,8,1,10,-7,5,6,6,2,10,3,9,7,7,1,-2,-4,-4,-8,-2,-7,-1,-1,-1,-2,-10,-6,-5,7,4,-1,10,-7,-10,-1,9,1,10,-8,-5,-1,-9,6,-1,8,-2,2,-4,-6,-3,7,4,-6,2,-5,-8,3,-3,-1,-3,-10,8,5,-4,-6,-8,10,3,-8,2,1,10,-7,-3,9,-9,-9,4,9,-4,4,-8,-4,4,5,5,-6,-7,2,-1,-6,-2,7,8,6,1,-4,8,-9,1,-8,7,3,-5,6,8,8,6,9,-5,7,-7,-4,-10,5,6,-8,-5,9,-10,10,6,9,7,-5,5,6,-5,-4,5,6,3,4,-9,-2,9,-6,-1,-6,-6,-9,-3,10,-9,-2,-4,-6,4,-6,5,9,-7,-9,-3,7,6,-8,-4,8,3,-8,10,-5,-3,5,-7,2,-3,-4,-5,-6,8,-9,-4,-8,9,-5,9,1,-9,10,5,1,2,-4,6,-8,-4,1,-6,-7,4,-1,-2,-4,1,6,-5,-3,2,-6,7,-7,4,1,8,4,9,-4,10,-1,-2,-6,-6,8,6,8,-1,-6,-6,3,-4,5,-2,4,7,-4,4,9,-1,-8,2,-10,-5,-6,-3,3,5,1,-7,1,2,-6,-5,6,2,3,-4,-5,-9,-7,9,2,-10,-1,-9,4,8,-10,4,1,2,8,-6,4,-1,2,5,-3,-6,-3,-9,-8,6,1,6,4,5,5,-4,-1,-9,6,-4,8,-3,6,-9,-10,4,5,-3,-9,2,2,-2,2,3,-5,6,10,6,3,2,-8,-3,8,3,-4,1,10,8,-5,9,1,-5,7,7,-5,-1,7,8,-2,5,6,4,9,10,-5,6,-6,-5,10,-3,10,10,2,3,8,1,-3,-10,1,10,10,-1,7,-9,7,4,8,5,1,-3,7,3,-3,4,-4,7,8,-8,4,-4,1,-10,-3,6,-4,-4,-3,1,-9,-7,7,5,-3,-2,4,8,5,2,-5,-3,7,10,-2,7,5,-6,-9,-10,6,7,-8,-5,5,1,6,-8,1,5,8,7,-6,-6,4,7,-7,-1,-1,8,-6,3,4,6,-9,9,5,-1,-10,5,-4,-5,-7,4,5,-4,-4,2,8,3,1,7,1,6,-6,3,-3,8,5,10,5,-10,2,-7,1,10,-4,-9,-6,6,6,-1,-8,-1,-3,2,4,9,3,6,7,-8,-4,8,2,9,1,-8,-1,3,-1,-3,8,-3,-7,-7,-7,-7,-1,-1,7,2,-2,-9,1,-6,-1,-9,1,10,-3,2,1,10,-2,-5,-1,-9,7,-5,-1,3,9,1,-6,-8,5,10,9,7,1,2,-9,8,-8,6,-5,1,5,-4,2,-1,-1,-4,10,-4,1,6,7,-8,6,-4,7,3,-9,4,-10,-10,-5,-3,-6,-8,5,9,-6,4,-2,-3,8,-10,4,10,-10,-6,7,-10,10,-9,1,-4,-4,-1,9,-5,9,-5,1,8,8,-4,5,7,3,-10,-2,3,3,2,7,2,-5,8,4,5,10,-8,-5,-2,-1,-5,7,8,-2,-3,-2,-5,-1,2,1,-1,9,7,4,-4,-2,-7,9,-8,-10,1,7,8,1,7,-7,4,-8,10,2,9,5,2,3,-6,-4,-6,5,1,2,-9,-8,5,-5,10,-2,-1,6,2,7,4,-5,2,-4,7,3,-5,8,-7,-8,10,7,-7,-5,4,-5,3,1,-1,2,-1,3,-8,-9,-5,3,4,-7,4,-8,-5,-1,4,-6,8,-4,-3,-6,-9,5,1,9,9,-6,9,-3,8,3,-7,10,6,-6,-10,-9,9,-3,3,6,10,-5,8,3,4,-10,6,-8,-2,3,-7,3,8,6,9,-1,6,10,-6,9,-1,-10,-7,-1,-1,2,-7,-3,10,4,3,-10,1,-4,3,6,-2,-2,7,9,8,-7,6,-7,1,-8,9,7,8,-9,-3,-6,3,4,-1,-7,6,-3,-6,-1,-4,-5,-8,4,-2,-8,10,-1,-4,-3,8,6,-4,8,-1,-8,9,9,6,5,8,4,-7,-9,10,6,1,-3,10,6,-2,8,10,1,1,-5,-9,-7,5,-7,-9,4,6,-7,-1,-10,9,-6,-5,6,-3,7,3,-8,1,5,10,-9,7,5,-9,4,-2,9,-9,3,10,-4,3,1,-7,3,-6,-6,-8,-4,5,-7,6,2,10,7,-7,-3,5,6,2,1,-4,2,7,1,2,7,-1,-5,-6,5,5,6,3,4,-5,-5,2,-1,5,-9,9,7,6,-4,-6,8,6,3,-9,-7,2,3,1,-2,-7,3,8,-7,2,7,-8,-1,-2,-6,-1,-5,-4,6,-2,4,-1,3,-7,-2,-2,8,7,-6,4,-1,-2,-8,3,-6,4,4,6,-5,-10,1,7,1,1,-4,-9,1,-1,2,5,-1,-5,-4,-4,4,-7,7,-6,-9,-8,-1,-10,-10,1,5,7,7,-10,-5,-2,-2,5,3,8,6,7,-2,-10,-5,4,9,5,7,6,4,10,5,5,-7,-9,8,-10,2,5,-3,7,-2,5,-2,9,9,1,-7,3,9,6,-10,8,-8,-7,-3,2,-9,-3,10,-6,-3,6,-3,-3,2,10,6,4,-2,-5,-7,8,-8,8,5,8,3,8,-4,8,8,10,5,-8,-4,2,1,-9,3,6,3,3,-9,-10,4,1,-6,-6,4,8,8,-9,-1,8,8,-1,-10,-5,-7,-6,-2,3,-7,-1,-4,8,10,-10,6,7,4,2,-2,4,3,2,-6,-5,5,-3,4,2,-7,-7,2,8,1,9,9,5,-3,7,-4,-2,6,-10,5,6,-6,-8,6,6,5,1,1,6,-6,3,3,9,-1,2,2,-9,-3,-1,-2,-6,-4,-1,-6,-1,9,-2,-1,4,1,7,5,4,-4,7,-1,3,2,2,-2,-8,-1,3,-1,-4,-2,6,1,-5,4,-9,5,-8,-7,-4,-5,9,-3,8,9,6,6,-9,3,-10,-8,-10,2,-1,-10,9,7,1,-10,6,10,-1,6,-1,-5,-6,1,-9,5,3,5,3,10,6,1,-9,3,-9,-1,-8,3,-3,-1,9,-2,-3,4,3,-10,-6,-8,-3,-7,2,5,8,5,4,4,3,-8,3,4,6,4,6,8,-4,4,-5,-7,6,-4,9,-4,2,-1,-3,-4,1,-2,-9,-8,5,1,10,-5,-8,-9,-5,-9,6,-5,-7,10,6,-2,-2,9,4,-1,6,3,3,2,6,8,-5,10,1,-7,2,3,2,3,-2,10,-10,-5,-4,2,2,1,4,-7,-9,-3,6,7,8,1,6,-9,4,-9,2,-10,3,2,-3,2,5,-5,1,-6,3,8,-1,-8,-2,-3,10,1,-5,9,-3,-9,8,9,7,-8,-5], dtype = "uint16")#candidate|2282|(3360,)|const|uint16
call_2281 = relay.TupleGetItem(func_1736_call(relay.reshape(const_2282.astype('uint16'), [3360,])), 1)
call_2283 = relay.TupleGetItem(func_1739_call(relay.reshape(const_2282.astype('uint16'), [3360,])), 1)
output = relay.Tuple([call_2232,call_2238,call_2281,const_2282,])
output2 = relay.Tuple([call_2233,call_2239,call_2283,const_2282,])
func_2295 = relay.Function([], output)
mod['func_2295'] = func_2295
mod = relay.transform.InferType()(mod)
mutated_mod['func_2295'] = func_2295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2295_call = mutated_mod.get_global_var('func_2295')
call_2296 = func_2295_call()
output = call_2296
func_2297 = relay.Function([], output)
mutated_mod['func_2297'] = func_2297
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2303 = relay.const([[[-1.404567,-0.770093,4.888190,3.170668,-7.536942,-7.610376,-0.695611,-7.290140,1.949468,-7.401965,1.410932,2.877972,-8.654661,-3.930925],[9.415035,6.627116,2.589086,-0.595721,-5.898504,-7.429436,-9.614994,6.470718,3.354006,-8.478797,3.971496,-9.061518,0.615225,-8.468879],[-6.313967,-3.359549,-6.948260,6.374413,8.155178,6.935124,-4.508816,-7.831719,-7.986221,1.985231,-9.439066,1.170329,-6.228513,-2.060941]],[[8.791400,6.840033,2.211724,9.740953,4.733225,-9.062132,-0.103488,4.003922,1.258238,6.091885,6.555622,5.448467,-1.886708,2.451258],[-4.509898,0.582136,9.223116,1.286279,-1.726377,-1.757888,-7.504477,4.773629,-9.035738,1.215874,-7.540700,-7.232448,5.067274,5.487630],[-1.829612,-8.477854,8.837219,-2.390939,-3.590040,3.521083,9.626391,-6.704825,-1.792606,-3.901202,-0.016771,-4.494631,6.800303,-1.741773]],[[9.247873,-9.967744,5.294467,-3.463178,-8.993808,9.374067,3.447755,-3.149025,-4.722325,-0.884743,-4.112366,-5.364176,-7.267912,6.395571],[6.398471,-2.635030,-9.274196,-9.158597,5.049828,-8.179095,8.276424,-0.263735,-1.044524,3.038686,0.299610,-1.769115,1.408309,8.864568],[9.405830,4.381631,-8.057375,3.858168,-1.273876,-4.060797,4.965886,-4.626889,-2.370279,1.669178,0.485161,-9.733819,-8.821984,-6.543726]],[[9.831266,1.240754,-3.660159,8.415353,-3.502225,1.804707,-2.301955,-7.586220,-1.766298,-0.137146,7.454404,-0.062918,3.197035,3.361132],[9.228172,6.040515,7.632566,1.517003,0.627147,9.569869,-7.950409,-1.705490,-5.291175,-2.955014,3.512884,-4.710302,-1.759482,6.770861],[9.404287,2.438189,-9.383883,6.197762,3.723271,-9.050275,5.776574,-0.080754,-6.396610,-3.470085,6.577548,-1.473115,3.876391,1.056677]],[[5.414566,5.016925,2.323195,3.583417,4.608707,-4.125472,6.313628,0.738479,-9.983659,-2.397339,0.703608,0.471238,9.443293,5.523762],[-6.483504,-6.672839,-3.595334,-8.469120,-8.919885,4.812032,-3.613096,-3.199866,-3.264746,-5.529151,8.198266,-2.397540,9.599237,6.432591],[1.620224,-2.782310,9.097204,5.204789,-6.093315,-9.616252,8.665093,6.131287,3.830944,3.813729,3.470824,-6.864781,7.458063,3.400050]],[[-5.692982,7.538009,-9.689105,-2.078852,4.481936,8.513086,7.875612,-0.891221,2.445083,1.128188,-9.591034,0.520785,-8.778725,-3.550397],[-2.611582,9.019406,9.611757,-5.312370,-8.140088,0.445672,-0.517541,9.121999,-6.689125,-1.292659,3.836060,-2.804704,-7.992816,-8.818102],[5.000323,-8.578583,-0.492786,0.109233,7.635821,5.434419,-5.736606,1.611824,2.690052,-3.308941,-0.759473,-3.658533,-9.711742,9.250028]],[[-9.182628,-5.144575,5.914676,8.121880,-5.475056,0.479781,-2.848832,1.424705,4.928739,2.467726,3.599933,4.984530,-5.811066,-8.198349],[-4.224395,7.584250,0.764888,2.084675,0.381818,-7.132476,3.973236,2.147446,0.390424,-3.286724,6.242870,2.849028,0.319404,-9.328858],[-3.928402,3.230227,1.106918,7.362695,-8.448134,5.448218,3.556629,5.157886,0.622802,-9.897640,2.921126,7.569636,-3.420121,6.283359]],[[7.536588,1.447955,-1.402204,2.170036,-0.622579,-1.318893,8.081972,-8.394432,-6.563065,0.097047,-6.833139,-7.220442,-4.364341,-7.398313],[-1.995216,-7.499063,2.162553,-2.964888,-1.288317,5.687051,-2.067585,5.037488,6.575528,5.749529,8.491198,6.095084,-7.565499,8.812282],[-3.971339,-0.831260,-6.682834,-9.297524,-1.366553,4.224182,-3.432556,8.657480,2.036229,-3.503728,-5.008112,-0.092413,-7.956841,6.053437]]], dtype = "float64")#candidate|2303|(8, 3, 14)|const|float64
uop_2304 = relay.log2(const_2303.astype('float64')) # shape=(8, 3, 14)
func_1637_call = mod.get_global_var('func_1637')
func_1639_call = mutated_mod.get_global_var('func_1639')
call_2312 = relay.TupleGetItem(func_1637_call(), 0)
call_2313 = relay.TupleGetItem(func_1639_call(), 0)
output = relay.Tuple([uop_2304,call_2312,])
output2 = relay.Tuple([uop_2304,call_2313,])
func_2314 = relay.Function([], output)
mod['func_2314'] = func_2314
mod = relay.transform.InferType()(mod)
mutated_mod['func_2314'] = func_2314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2314_call = mutated_mod.get_global_var('func_2314')
call_2315 = func_2314_call()
output = call_2315
func_2316 = relay.Function([], output)
mutated_mod['func_2316'] = func_2316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1230_call = mod.get_global_var('func_1230')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_2427 = relay.TupleGetItem(func_1230_call(), 0)
call_2428 = relay.TupleGetItem(func_1231_call(), 0)
uop_2445 = relay.acos(call_2427.astype('float32')) # shape=(6, 11, 14)
uop_2447 = relay.acos(call_2428.astype('float32')) # shape=(6, 11, 14)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_2455 = func_2211_call()
call_2456 = func_2211_call()
func_446_call = mod.get_global_var('func_446')
func_447_call = mutated_mod.get_global_var('func_447')
call_2462 = relay.TupleGetItem(func_446_call(), 0)
call_2463 = relay.TupleGetItem(func_447_call(), 0)
output = relay.Tuple([uop_2445,call_2455,call_2462,])
output2 = relay.Tuple([uop_2447,call_2456,call_2463,])
func_2467 = relay.Function([], output)
mod['func_2467'] = func_2467
mod = relay.transform.InferType()(mod)
output = func_2467()
func_2468 = relay.Function([], output)
mutated_mod['func_2468'] = func_2468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_2499 = relay.TupleGetItem(func_2467_call(), 0)
call_2500 = relay.TupleGetItem(func_2468_call(), 0)
func_1505_call = mod.get_global_var('func_1505')
func_1506_call = mutated_mod.get_global_var('func_1506')
call_2502 = relay.TupleGetItem(func_1505_call(), 0)
call_2503 = relay.TupleGetItem(func_1506_call(), 0)
func_1150_call = mod.get_global_var('func_1150')
func_1153_call = mutated_mod.get_global_var('func_1153')
var_2523 = relay.var("var_2523", dtype = "uint16", shape = (3360,))#candidate|2523|(3360,)|var|uint16
call_2522 = relay.TupleGetItem(func_1150_call(relay.reshape(var_2523.astype('uint16'), [3360,])), 1)
call_2524 = relay.TupleGetItem(func_1153_call(relay.reshape(var_2523.astype('uint16'), [3360,])), 1)
func_2295_call = mod.get_global_var('func_2295')
func_2297_call = mutated_mod.get_global_var('func_2297')
call_2528 = relay.TupleGetItem(func_2295_call(), 0)
call_2529 = relay.TupleGetItem(func_2297_call(), 0)
output = relay.Tuple([call_2499,call_2502,call_2522,var_2523,call_2528,])
output2 = relay.Tuple([call_2500,call_2503,call_2524,var_2523,call_2529,])
func_2553 = relay.Function([var_2523,], output)
mod['func_2553'] = func_2553
mod = relay.transform.InferType()(mod)
mutated_mod['func_2553'] = func_2553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2554 = relay.var("var_2554", dtype = "uint16", shape = (3360,))#candidate|2554|(3360,)|var|uint16
func_2553_call = mutated_mod.get_global_var('func_2553')
call_2555 = func_2553_call(var_2554)
output = call_2555
func_2556 = relay.Function([var_2554], output)
mutated_mod['func_2556'] = func_2556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_2617 = relay.TupleGetItem(func_1012_call(), 0)
call_2618 = relay.TupleGetItem(func_1014_call(), 0)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_2623 = relay.TupleGetItem(func_1795_call(), 0)
call_2624 = relay.TupleGetItem(func_1796_call(), 0)
bop_2637 = relay.add(call_2623.astype('int16'), relay.reshape(call_2617.astype('int16'), relay.shape_of(call_2623))) # shape=(6, 11, 14)
bop_2640 = relay.add(call_2624.astype('int16'), relay.reshape(call_2618.astype('int16'), relay.shape_of(call_2624))) # shape=(6, 11, 14)
output = relay.Tuple([bop_2637,])
output2 = relay.Tuple([bop_2640,])
func_2645 = relay.Function([], output)
mod['func_2645'] = func_2645
mod = relay.transform.InferType()(mod)
mutated_mod['func_2645'] = func_2645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mutated_mod.get_global_var('func_2645')
call_2646 = func_2645_call()
output = call_2646
func_2647 = relay.Function([], output)
mutated_mod['func_2647'] = func_2647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_787_call = mod.get_global_var('func_787')
func_789_call = mutated_mod.get_global_var('func_789')
call_2693 = relay.TupleGetItem(func_787_call(), 1)
call_2694 = relay.TupleGetItem(func_789_call(), 1)
func_2553_call = mod.get_global_var('func_2553')
func_2556_call = mutated_mod.get_global_var('func_2556')
var_2698 = relay.var("var_2698", dtype = "uint16", shape = (420, 8))#candidate|2698|(420, 8)|var|uint16
call_2697 = relay.TupleGetItem(func_2553_call(relay.reshape(var_2698.astype('uint16'), [3360,])), 2)
call_2699 = relay.TupleGetItem(func_2556_call(relay.reshape(var_2698.astype('uint16'), [3360,])), 2)
func_2173_call = mod.get_global_var('func_2173')
func_2174_call = mutated_mod.get_global_var('func_2174')
call_2700 = relay.TupleGetItem(func_2173_call(), 2)
call_2701 = relay.TupleGetItem(func_2174_call(), 2)
func_2173_call = mod.get_global_var('func_2173')
func_2174_call = mutated_mod.get_global_var('func_2174')
call_2708 = relay.TupleGetItem(func_2173_call(), 1)
call_2709 = relay.TupleGetItem(func_2174_call(), 1)
var_2724 = relay.var("var_2724", dtype = "uint16", shape = (420, 8))#candidate|2724|(420, 8)|var|uint16
bop_2725 = relay.bitwise_xor(var_2698.astype('uint64'), relay.reshape(var_2724.astype('uint64'), relay.shape_of(var_2698))) # shape=(420, 8)
uop_2731 = relay.asinh(var_2724.astype('float64')) # shape=(420, 8)
uop_2743 = relay.cos(uop_2731.astype('float64')) # shape=(420, 8)
func_1505_call = mod.get_global_var('func_1505')
func_1506_call = mutated_mod.get_global_var('func_1506')
call_2745 = relay.TupleGetItem(func_1505_call(), 1)
call_2746 = relay.TupleGetItem(func_1506_call(), 1)
uop_2756 = relay.log10(uop_2731.astype('float32')) # shape=(420, 8)
output = relay.Tuple([call_2693,call_2697,call_2700,call_2708,bop_2725,uop_2743,call_2745,uop_2756,])
output2 = relay.Tuple([call_2694,call_2699,call_2701,call_2709,bop_2725,uop_2743,call_2746,uop_2756,])
func_2759 = relay.Function([var_2698,var_2724,], output)
mod['func_2759'] = func_2759
mod = relay.transform.InferType()(mod)
mutated_mod['func_2759'] = func_2759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2759_call = mutated_mod.get_global_var('func_2759')
var_2761 = relay.var("var_2761", dtype = "uint16", shape = (420, 8))#candidate|2761|(420, 8)|var|uint16
var_2762 = relay.var("var_2762", dtype = "uint16", shape = (420, 8))#candidate|2762|(420, 8)|var|uint16
call_2760 = func_2759_call(var_2761,var_2762,)
output = call_2760
func_2763 = relay.Function([var_2761,var_2762,], output)
mutated_mod['func_2763'] = func_2763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2314_call = mod.get_global_var('func_2314')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_2788 = relay.TupleGetItem(func_2314_call(), 1)
call_2789 = relay.TupleGetItem(func_2316_call(), 1)
var_2798 = relay.var("var_2798", dtype = "bool", shape = (6, 11, 14))#candidate|2798|(6, 11, 14)|var|bool
bop_2799 = relay.power(call_2788.astype('float64'), relay.reshape(var_2798.astype('float64'), relay.shape_of(call_2788))) # shape=(6, 11, 14)
bop_2802 = relay.power(call_2789.astype('float64'), relay.reshape(var_2798.astype('float64'), relay.shape_of(call_2789))) # shape=(6, 11, 14)
output = relay.Tuple([bop_2799,])
output2 = relay.Tuple([bop_2802,])
func_2803 = relay.Function([var_2798,], output)
mod['func_2803'] = func_2803
mod = relay.transform.InferType()(mod)
mutated_mod['func_2803'] = func_2803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2804 = relay.var("var_2804", dtype = "bool", shape = (6, 11, 14))#candidate|2804|(6, 11, 14)|var|bool
func_2803_call = mutated_mod.get_global_var('func_2803')
call_2805 = func_2803_call(var_2804)
output = call_2805
func_2806 = relay.Function([var_2804], output)
mutated_mod['func_2806'] = func_2806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_2826 = relay.TupleGetItem(func_921_call(), 1)
call_2827 = relay.TupleGetItem(func_923_call(), 1)
func_2759_call = mod.get_global_var('func_2759')
func_2763_call = mutated_mod.get_global_var('func_2763')
const_2845 = relay.const([4,9,-9,7,4,-6,-6,4,3,-1,4,5,-4,-6,-8,-10,-4,10,-5,-3,-1,-8,1,-8,1,-9,-7,-10,5,-1,-10,-3,-8,-10,-2,-4,4,-1,3,9,-1,1,-5,6,-9,-2,8,5,-8,10,8,2,5,6,3,4,-8,-1,-7,2,7,-9,9,10,-9,-9,6,8,7,1,-3,-5,9,-1,-6,-6,-9,6,7,7,-10,-2,10,-8,-7,-8,-2,-9,-10,9,5,8,10,-2,-4,4,7,-8,7,-5,-5,-5,7,-9,-4,4,-6,5,-8,5,-8,-6,5,4,-10,-8,-6,-3,7,-2,2,2,10,-4,-4,2,7,9,-10,6,5,-8,-7,4,2,-6,-3,2,6,4,6,6,-2,5,-7,5,-9,3,-1,-1,-2,-9,5,-8,1,5,-6,9,3,1,9,3,8,-5,2,3,-2,9,-8,-10,-9,-4,-5,4,-1,9,-2,7,10,-8,-7,-8,-7,-6,-6,-4,3,-9,-3,6,9,-5,10,10,5,4,-10,10,-9,-2,5,9,6,-6,-4,-4,-6,3,-2,-5,10,-8,2,-8,6,-8,-8,1,-9,-4,7,-6,-8,10,4,6,7,-4,1,9,-4,8,-6,-5,-6,-7,-6,10,4,1,-7,1,10,-10,9,-8,-8,4,-7,-10,7,-6,10,6,-5,-3,-5,-6,-2,-6,10,6,2,4,9,2,1,1,-3,-7,-4,-3,-5,-6,7,-9,-7,5,-5,1,-2,1,1,7,7,-4,-6,-3,-6,-9,-10,10,-3,1,3,-1,-4,-2,-4,-9,-5,-3,-10,6,-3,8,5,-5,2,-8,7,-2,4,6,-3,7,9,-2,6,6,-5,5,10,-10,-7,7,-8,6,3,9,10,5,-8,10,-5,3,9,-7,1,3,-6,1,9,7,1,9,2,1,-1,3,-5,3,8,5,9,-7,-8,10,-8,-3,-5,-8,-6,-6,-10,-2,-7,3,7,3,7,3,-8,7,2,-5,-2,-3,-4,5,7,-2,-2,-10,-2,7,2,-7,2,10,-3,2,-10,2,-5,-9,-6,-9,-6,9,1,-9,3,7,9,-1,2,6,10,5,6,-10,-7,-1,7,10,6,-2,5,-6,7,-5,-3,-1,8,10,2,-8,-8,-9,-1,-4,-10,5,8,-8,-9,3,5,-6,-10,8,-6,-8,-5,1,9,2,4,3,-9,6,-7,9,-3,-4,3,4,8,8,-10,-1,6,8,-3,1,-3,9,8,-1,-6,3,-7,-9,-10,10,7,8,-7,3,-9,-3,3,-4,1,-9,2,-6,-10,6,3,-1,7,4,-6,-5,1,-9,1,3,-9,-1,-8,-10,4,-10,9,-9,-1,-4,10,-3,-7,-5,-4,-10,-5,-3,-10,3,8,4,5,6,6,4,-9,-9,9,-7,-6,-7,-10,6,-5,3,-10,-3,-10,-10,10,6,-1,8,-1,-5,3,-10,4,2,-4,-3,4,9,4,4,-3,3,-5,6,-7,-7,-2,-5,2,6,-4,2,4,4,3,1,-6,2,7,-9,8,7,2,6,7,2,8,9,-7,9,-1,-8,5,10,9,-8,-5,6,-5,3,-4,-5,-1,6,9,10,6,-9,-1,4,-8,10,9,1,8,-8,-1,7,-1,-3,-6,2,-4,-6,-8,6,5,7,2,8,4,-6,-2,8,-4,6,4,4,7,-3,-10,-8,7,-9,-5,-10,-6,3,-9,-3,-2,3,-5,5,8,-6,9,5,1,-4,4,7,-2,10,-3,-2,-10,-2,5,8,5,4,-7,-9,-5,-5,7,-1,-2,10,-3,-2,-9,-9,-4,-10,10,5,4,-4,-7,10,-10,-2,-1,10,7,9,8,2,5,-1,5,2,9,8,6,-1,8,-1,-8,-5,2,-10,-1,2,-2,3,-10,7,-3,-7,-5,-7,2,6,-8,-2,4,-3,-2,-3,8,6,-2,-7,-9,4,-1,-1,-9,-2,7,-9,5,5,7,-4,5,2,2,-2,4,-7,9,9,-4,-6,2,-9,9,6,2,-10,-9,-4,-2,4,-4,-2,-10,2,-9,-4,-6,-9,6,1,-5,-7,-5,-7,-9,6,5,-6,-6,-10,7,-9,-6,-7,4,-2,-1,3,-4,-7,-5,-6,-9,-7,3,4,-9,4,-9,-10,9,2,-3,-9,9,-9,7,5,2,-2,9,-4,9,6,8,-1,-9,8,9,-8,3,3,7,-5,1,-3,-5,3,-4,2,-4,-1,-7,5,-8,4,-4,-1,-6,9,8,-10,-8,7,-1,-6,-3,9,9,7,1,-1,10,-6,-10,6,7,-1,8,-7,-6,-5,1,8,-10,-7,8,-5,-2,5,-8,-10,-6,7,8,2,-6,-10,2,5,4,-4,10,1,2,3,-6,2,5,-7,-3,6,7,-6,-7,3,-3,-2,-6,-6,-8,8,-6,-7,2,-6,4,-6,-10,-9,3,8,9,-2,10,5,7,-3,6,3,-5,-6,-1,-9,-7,9,2,-8,7,8,-8,-7,-6,9,10,1,3,4,10,-6,-2,8,4,5,-8,9,5,2,-4,-3,-2,-2,2,8,7,-8,3,-3,4,6,-10,-7,-1,-6,1,-1,-6,8,9,9,-4,-5,4,1,5,-1,4,-1,8,-2,-9,-2,8,-4,-7,-2,-3,-7,-6,-7,10,7,-6,9,-6,-3,-5,-1,-4,-1,9,4,-2,-8,-3,-3,-1,-7,9,-2,-8,-1,9,-8,-6,-4,4,-4,2,7,7,8,-10,-6,2,3,5,7,-5,-5,-5,5,-8,6,-3,5,4,-9,-10,-3,-4,-6,-2,1,9,-10,6,2,8,-5,-2,2,-6,10,5,10,-2,8,-1,-5,4,3,-5,-5,-4,6,3,-9,7,6,-5,-1,5,2,6,-4,-5,2,3,-2,10,-2,4,-1,-3,2,5,4,1,-6,5,9,9,9,1,-9,-9,-1,4,-5,10,4,1,5,-4,-10,9,9,1,9,1,-2,-1,-5,-6,4,8,-1,-6,10,5,10,-1,3,-7,5,-2,-8,1,-8,4,5,9,-10,2,6,-1,-5,-3,6,1,-10,6,4,3,-4,-5,8,5,-1,-1,-8,1,-7,-10,-8,2,-3,-8,-8,10,-8,3,1,8,-8,-8,1,8,6,1,-10,-4,3,-10,2,7,9,10,9,-1,-4,3,-8,5,10,10,9,3,-5,-7,6,-1,-3,4,-6,8,4,7,-4,-8,8,-6,-1,3,5,6,-3,6,-7,-9,-5,-5,10,-1,-4,-1,-6,-1,8,-6,3,4,-1,1,3,3,7,-7,1,1,8,10,-9,-4,5,9,5,4,-8,-6,-5,8,-8,-8,6,4,3,9,-7,10,6,1,-5,-5,-10,-3,-9,-8,6,6,7,-6,-6,-4,-10,4,-4,-7,-10,1,3,-6,2,1,-1,-2,7,-1,-4,3,-7,-2,-1,-9,1,-2,3,9,3,-7,-7,5,6,-4,-8,6,5,6,7,9,-7,-4,-3,8,-5,2,-2,3,-2,-10,-3,8,6,-3,1,-3,-7,9,-10,-5,9,-6,-6,-3,-5,1,-1,7,2,10,-6,-2,-10,10,-7,6,4,-1,2,-9,4,6,-8,3,-6,3,-8,2,7,9,-9,-2,-6,5,4,4,5,-5,6,3,3,-2,3,8,-8,-6,1,-3,-10,4,4,3,-1,-4,-8,-8,5,9,-6,9,-3,4,-2,8,5,7,-3,1,-1,-10,-2,-10,-10,4,-6,-3,-10,1,-4,-6,-5,10,-5,2,6,5,-2,-4,3,-10,2,10,-10,4,1,3,-4,4,6,5,9,1,-6,4,4,2,5,6,2,9,9,-1,-7,-2,2,4,-1,3,-9,-1,-10,8,3,-3,3,10,6,-7,-8,-5,-8,2,-5,9,3,-8,2,-8,-10,-2,5,-7,3,1,2,-2,6,-2,-10,-6,2,5,9,-9,-6,-4,-2,9,4,7,-7,-8,6,5,-4,10,-6,10,-10,-6,9,-5,-10,6,-6,2,5,-8,2,8,6,-2,5,-8,8,-1,-2,7,3,-6,10,4,-7,-6,-6,5,-4,-4,8,4,-4,4,-3,7,-6,-5,-2,4,1,-8,-6,-9,-3,-1,-5,-6,2,-4,-3,-1,6,7,-2,7,1,-2,-2,9,-6,-4,-7,-7,-2,-6,-3,-6,-10,9,4,-7,3,1,-2,1,-3,6,-7,1,-7,-6,3,-1,5,-8,6,-1,7,-6,-4,-7,-2,-9,8,-2,-8,-5,-10,-7,-8,1,2,-5,-6,8,-8,9,7,-2,-9,-2,-3,-1,5,6,-2,-7,1,-1,-3,-8,-5,-2,6,-9,-8,-3,8,-4,9,4,8,-4,-5,7,6,-2,4,-3,-8,3,-3,-9,-10,2,2,1,-1,-1,1,-6,-5,10,-2,10,-5,-8,-1,7,-9,-1,7,2,-6,-6,-3,6,1,-9,-6,5,-4,-2,-1,6,-10,-10,6,6,-7,1,-5,9,-10,2,-9,-9,-1,8,10,9,-9,-8,1,9,6,-7,4,8,-8,1,-7,-10,3,-10,2,-4,10,-7,6,8,-5,-3,-5,-4,1,-10,-8,-7,-10,4,6,-10,10,7,3,-5,2,-9,9,10,1,-8,-2,-1,-2,4,-3,-4,2,-8,-9,-5,-1,10,10,-1,1,1,4,8,7,6,6,4,5,7,2,-5,-8,4,4,-2,-7,-2,7,9,-2,5,-8,8,-10,7,8,-7,-6,4,-8,-9,-1,8,-1,-1,3,-10,4,6,4,-6,-3,7,-5,1,9,-2,1,6,6,-2,3,4,2,1,-1,-6,-1,-6,-8,-4,9,7,4,9,-3,3,-4,5,-6,2,5,-4,5,-3,-6,-9,-2,4,-2,-10,-5,2,9,-7,-4,-4,1,3,5,8,-4,-8,-3,-4,5,-9,6,-2,-9,-2,2,-1,-4,-10,2,-10,-2,7,-1,2,5,-6,5,10,1,-6,-9,-7,-1,10,2,4,-10,-1,9,7,-5,9,-5,3,-10,-8,-5,-10,9,-2,3,6,4,-6,-1,9,10,-5,6,8,6,-4,10,-7,-7,-9,-4,6,2,-1,7,-8,-9,-1,-2,2,4,9,4,-2,-7,-3,-5,9,3,2,-1,8,-5,6,7,-5,7,-4,2,-2,-6,-9,4,-2,-7,8,7,9,-4,-9,-4,1,-8,2,10,10,9,-10,-7,-9,-9,4,2,7,-8,-6,-1,-4,9,-1,-10,-8,10,1,10,-4,8,4,9,7,-8,-10,7,7,1,-8,9,-9,3,6,1,-2,-6,-10,-8,2,9,4,-9,-3,-9,1,-6,4,-2,3,-10,2,-1,-1,-9,-4,7,4,7,6,10,-3,-10,6,-7,5,3,-3,10,-1,9,7,3,1,1,-5,7,-7,-5,8,1,-1,-3,-7,10,-3,-5,-6,2,-6,5,3,-1,8,3,-10,-1,7,7,6,1,-8,-10,5,-2,-6,-4,10,7,-3,-5,-5,4,-2,-5,10,-8,4,-1,-1,-10,1,-5,-1,-8,-5,7,-1,1,4,10,1,10,-9,4,5,6,-10,-6,3,3,-7,7,1,-9,-1,-9,-10,-10,2,-8,8,5,-5,8,5,6,-2,-9,-9,10,-9,4,7,-8,-10,8,-10,-7,-3,5,-6,9,-5,3,-5,6,1,3,8,1,-8,5,1,5,4,-4,-2,-10,-9,1,-7,10,-8,8,-4,1,7,10,-7,3,-4,4,10,-2,-9,7,-7,2,1,1,-8,-9,-10,4,-5,-3,-8,6,-2,-8,-9,-5,-3,-4,-8,10,-9,2,8,-7,6,4,6,1,6,9,4,4,10,2,4,7,-10,1,6,3,-9,-6,-6,-4,-8,-10,6,2,3,-5,5,-10,-10,5,10,-10,4,5,4,-2,2,-7,-7,4,2,-9,-1,1,10,7,-3,-9,4,-7,-3,3,3,4,6,2,-7,-4,-7,-10,-3,7,8,3,1,-2,-8,-10,4,1,-3,-9,-3,1,-10,-9,1,-6,-3,1,-8,-10,10,5,5,-6,-8,-1,8,3,4,-10,9,2,-5,-9,7,-9,-1,-3,-10,-7,3,-1,1,-8,7,9,-4,-1,-5,-3,-8,-1,7,-7,2,5,-1,6,-2,6,4,5,-6,10,7,-6,-6,-5,-9,-9,-4,6,-3,-9,9,-4,1,-3,-8,-10,6,1,1,4,6,-2,-8,-10,-1,5,4,-4,-1,-4,10,3,10,-8,7,2,5,-8,2,-3,-6,-4,-8,-7,-5,-7,7,-3,-1,9,-4,3,-4,-2,8,-1,6,5,4,-2,-7,6,-8,-2,-1,-6,9,-4,-10,-1,-2,5,6,1,-3,10,3,-3,-6,-9,-3,2,4,-9,4,5,10,3,9,7,8,-4,-5,1,2,-8,5,-1,8,5,7,8,-9,5,-9,-2,2,-10,-2,8,-1,1,8,4,9,10,9,-5,-10,-8,5,-6,5,5,6,-3,2,4,-3,10,10,-8,-9,-7,3,8,5,-8,1,-10,-9,-8,5,2,2,10,3,1,10,1,-5,-5,4,-3,-7,5,-7,6,5,-10,2,-7,9,-5,7,-6,6,3,3,6,-10,-5,-2,-9,-8,3,10,-3,9,-9,5,-7,5,10,7,-9,4,3,2,4,10,10,-7,-8,2,-1,3,7,-9,7,10,10,-9,-4,3,-2,3,-5,-6,7,2,-6,-7,2,-7,-9,-6,-5,-3,7,4,1,1,2,-8,-7,8,-3,4,10,-8,-2,-1,1,-5,10,-8,-9,-6,6,9,-4,7,-3,-7,-4,-3,9,-3,-7,-9,-8,-7,-7,9,9,-7,8,-10,-6,-3,2,-9,9,3,2,3,10,10,-5,1,8,4,-3,-4,-1,-3,4,-4,-8,1,1,-10,3,8,-9,-1,8,-3,-10,-4,-6,6,9,-5,8,-6,9,2,8,-2,-1,-5,8,2,5,-1,-10,-10,-8,7,8,-7,-1,-9,-10,-7,-3,10,8,-1,5,-3,10,8,-8,-4,-8,3,9,-8,4,10,8,9,1,9,2,2,7,10,5,-2,-6,-2,-9,-3,-8,10,-2,-1,9,-8,-4,-6,10,-6,1,-8,7,1,-10,8,-9,3,-9,4,-4,2,-3,-9,-4,8,7,2,7,9,-8,-5,-7,-8,-3,-8,-5,5,9,-2,10,-8,-7,-10,-4,2,-6,-10,-7,3,1,7,10,-5,-5,-1,9,2,10,10,9,-7,-1,1,-5,10,-4,5,8,-4,-7,7,-6,1,9,1,3,6,-5,6,9,-10,-2,8,3,2,-1,-5,8,-5,7,-8,4,-8,8,10,7,-4,-5,10,6,-9,3,-6,-1,-9,-6,3,-10,2,-3,7,4,-1,-4,8,-3,9,-2,8,-5,-4,-3,-3,-7,10,9,10,-9,-2,-1,6,-7,1,-9,5,-7,5,7,2,-4,4,10,-7,-4,-5,-9,-1,4,-8,-3,9,5,10,3,-7,-4,10,-6,6,-8,-7,10,5,-3,10,-9,8,2,-7,-1,4,5,1,3,-3,8,7,-9,-3,7,-10,10,-10,5,-7,-10,-2,-5,8,10,-8,-1,-6,9,-5,-1,-3,-3,5,-10,4,5,7,-9,-9,-8,9,4,-2,-5,9,1,10,7,-4,8,-9,4,-3,2,-3,-9,-10,8,-5,-8,-10,8,-5,-5,-4,-4,6,-8,10,10,-10,6,3,-9,-8,5,-8,-9,-10,1,-9,-4,5,-3,3,10,4,1,-3,-6,-9,-2,3,-1,8,-4,9,2,-3,-10,-10,-8,-10,2,1,-6,-8,-9,-10,4,4,-4,10,-8,-1,-7,-1,-5,-4,-6,-6,5,-9,-7,-7,-6,10,6,4,-3,4,-5,-3,-8,9,1,-6,-3,3,3,-2,-2,9,-4,-4,9,5,5,-6,6,-8,-5,5,9,-10,9,1,6,-9,-4,-5,1,9,-9,-10,10,-4,-10,5,-9,2,-4,-9,-5,-1,3,2,-6,-1,-5,4,7,-2,-8,-8,9,5,3,6,-4,6,2,3,-10,5,-3,1,-6,9,-10,-1,9,4,3,1,-6,-7,7,-6,-2,2,-9,-7,6,1,5,6,-9,7,10,-9,4,-7,-4,10,6,-3,-3,-4,-6,-6,6,-6,-2,-6,10,-3,3,-7,-4,5,7,9,-6,-2,7,-7,9,7,-6,-6,-2,5,10,2,-9,6,-5,-9,-7,7,-8,-4,-8,10,5,4,-6,3,-1,10,4,-7,10,-3,-6,8,5,-2,-4,-10,-10,-8,-1,4,8,1,9,-2,-5,-5,-7,6,-8,6,-3,-3,-9,9,2,2,-7,-3,-3,7,-1,-9,-7,10,-5,7,3,1,1,-3,-3,-6,-10,-9,5,10,-10,4,-6,-5,1,9,2,-5,9,-9,-3,-7,5,5,-3,5,6,3,4,-4,-9,-8,-4,7,2,-8,-2,-5,10,-6,7,-8,-1,-6,8,1,-5,-10,3,-2,5,8,-4,2,-7,1,-10,-6,10,5,9,7,4,-3,-7,1,-7,-7,6,-7,10,6,6,10,-1,4,-2,6,-10,-6,-5,7,10,3,7,-10,7,-6,7,9,-4,9,-5,5,-5,-2,-8,4,-5,3,-8,-9,-8,-10,-5,-2,-3,7,6,-3,1,-5,6,-6,-6,-5,1,-3,-8,-3,-1,4,-7,-2,-10,-6,-4,-1,-8,-3,7,3,9,8,-7,2,7,-2,6,-7,-2,-9,-4,5,7,-8,-6,-2,-7,4,-3,-1,-4,-5,10,-7,7,-7,6,4,-9,-6,5,10,10,5,-2,-4,-3,9,2,-4,-1,1,4,-1,-8,-8,6,-5,3,10,8,6,-2,5,-10,-5,1,-10,-1,-7,-9,2,-4,2,8,-5,-5,-8,-5,-2,-3,7,5,6,-8,5,-8,3,-5,-1,6,-9,-6,-9,-9,7,-10,-5,-2,2,-6,7,5,5,-6,3,2,-4,-9,1,-4,10,-1,-2,8], dtype = "uint16")#candidate|2845|(3360,)|const|uint16
call_2844 = relay.TupleGetItem(func_2759_call(relay.reshape(const_2845.astype('uint16'), [420, 8]), relay.reshape(const_2845.astype('uint16'), [420, 8]), ), 4)
call_2846 = relay.TupleGetItem(func_2763_call(relay.reshape(const_2845.astype('uint16'), [420, 8]), relay.reshape(const_2845.astype('uint16'), [420, 8]), ), 4)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_2863 = relay.TupleGetItem(func_2467_call(), 1)
call_2864 = relay.TupleGetItem(func_2468_call(), 1)
output = relay.Tuple([call_2826,call_2844,const_2845,call_2863,])
output2 = relay.Tuple([call_2827,call_2846,const_2845,call_2864,])
func_2866 = relay.Function([], output)
mod['func_2866'] = func_2866
mod = relay.transform.InferType()(mod)
mutated_mod['func_2866'] = func_2866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2866_call = mutated_mod.get_global_var('func_2866')
call_2867 = func_2866_call()
output = call_2867
func_2868 = relay.Function([], output)
mutated_mod['func_2868'] = func_2868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1637_call = mod.get_global_var('func_1637')
func_1639_call = mutated_mod.get_global_var('func_1639')
call_2977 = relay.TupleGetItem(func_1637_call(), 0)
call_2978 = relay.TupleGetItem(func_1639_call(), 0)
func_1736_call = mod.get_global_var('func_1736')
func_1739_call = mutated_mod.get_global_var('func_1739')
const_2987 = relay.const([-2,-1,-5,-7,-3,-9,-8,-8,5,-9,-9,-1,4,-8,-2,8,-3,10,-5,-6,5,-5,-2,-9,4,3,-7,-10,8,7,-2,-7,-8,-2,-5,9,6,5,8,-4,-2,-6,1,3,-7,-1,-5,-3,-5,-6,-3,-2,-1,-6,1,-3,-9,3,6,-9,-6,1,9,6,9,6,-7,1,-5,8,9,10,-2,-7,-1,-1,-7,10,-6,-3,8,-5,10,-4,-4,-3,-6,2,8,-8,6,-7,2,2,-4,1,4,1,-3,-9,9,-2,4,5,-3,-10,2,3,-5,-2,-8,4,-10,-6,-10,-1,-8,6,-9,4,5,3,3,3,-1,-10,-7,-2,9,-1,-4,8,7,4,6,-2,-3,-8,10,-6,-6,9,1,2,1,9,-6,-7,-2,3,-6,8,-9,-6,10,10,-6,-1,2,7,7,-9,6,9,5,-5,-6,-2,3,-4,2,1,6,-7,5,2,-1,-8,6,-4,-7,6,5,-8,8,1,7,7,4,-2,9,3,-6,6,6,5,-8,9,-10,2,-1,9,-5,-3,-2,9,10,1,3,-8,-5,6,-5,-9,-4,-7,5,6,4,-10,6,-8,-1,10,4,5,-2,-5,8,6,-6,-10,10,-1,-5,3,-10,6,9,7,6,5,5,-7,-7,-6,7,-3,9,-1,7,-8,4,2,1,-7,3,7,3,10,8,-2,-9,-1,-9,5,-8,-4,-6,-6,-6,-6,-4,-5,-8,8,1,2,-4,-8,-7,10,-5,-8,1,-10,6,5,8,8,7,3,-5,-5,7,-2,10,10,6,-8,1,-5,-5,-6,10,-10,-9,2,7,-4,5,-9,-10,10,-8,-5,8,5,-10,-8,-4,-7,1,-10,1,3,2,10,-10,9,1,-6,-6,2,-1,-8,9,9,-7,10,-2,5,-4,5,-7,3,-10,9,-1,4,3,8,-9,4,5,5,7,-3,-5,9,7,-2,-3,5,-1,-8,2,6,3,7,-6,-7,-2,-5,3,9,-8,-6,-1,6,9,4,-10,-3,2,10,2,-10,10,-1,1,-2,2,-9,9,5,-9,-9,1,1,4,9,1,-10,7,5,-3,7,4,-10,-1,-1,4,-1,-4,10,4,-3,1,5,5,5,6,5,8,-3,10,3,-5,-1,-7,-6,10,-5,3,10,1,-5,-7,-6,-6,6,-2,10,-1,6,-1,10,-10,-6,-6,-10,-2,-5,7,-4,2,-9,-8,10,9,9,8,5,4,-2,8,9,-9,6,6,7,9,2,4,-9,10,6,5,8,3,-10,-2,-8,3,-6,-6,-9,-10,2,-3,-10,-9,2,8,-3,-10,3,-4,-4,6,8,-3,-7,-7,9,-2,-4,-3,-4,6,5,4,9,-8,-7,-1,4,-3,8,-2,2,6,-6,6,-2,-9,10,3,-3,2,-5,6,-8,-2,1,-3,-9,-2,-8,7,1,-8,-1,-10,-2,-4,-5,8,-1,2,-6,4,-6,2,-5,7,-5,6,-6,10,-7,6,-7,9,-7,-10,8,8,-2,-9,9,4,-10,8,5,3,4,-7,-4,-1,-7,-3,8,-10,-4,-9,6,-5,-2,-2,2,-2,-5,-9,5,-1,4,-9,7,-3,2,-2,-5,-5,-1,-5,-2,-9,-4,-7,2,-1,-4,-7,2,2,1,-2,-2,-3,-8,5,-3,-9,5,-8,-6,1,3,-2,7,-9,-7,-5,2,1,-6,9,1,8,4,4,9,1,-3,-7,5,1,8,3,5,7,-2,-1,-4,10,-9,7,8,-9,1,5,1,9,3,-7,-8,10,-3,-3,-1,5,5,-7,-2,-8,-2,10,-1,3,3,-4,6,-2,-4,6,-8,-7,-6,8,3,-10,10,-8,-9,7,-3,-4,5,-10,1,-6,8,1,-10,-2,6,-9,4,-7,10,-6,5,2,3,8,-7,-2,10,10,2,-4,-6,7,10,-2,10,-3,-5,4,4,-4,10,9,9,9,-1,-2,-6,4,2,6,1,6,2,-6,4,1,-5,-4,-8,-6,8,4,4,7,4,-6,3,-1,-2,3,-6,-1,-3,-3,-10,9,-4,1,1,-2,3,9,9,-1,6,8,8,-3,4,1,-5,-3,3,7,-6,-10,8,-5,9,10,1,7,7,10,6,-7,-2,-7,8,3,-4,3,10,1,-5,7,6,5,4,5,9,-8,-4,-7,1,-6,-3,-9,8,-4,-10,1,5,-9,3,6,8,2,8,-6,-9,6,-1,5,-6,2,-10,-1,-1,1,-6,4,10,6,5,-1,-4,6,-3,-5,-10,2,-2,-6,-3,6,3,-3,-6,-4,-1,-5,1,2,-2,10,6,5,-5,2,5,7,-8,4,-9,4,1,-7,-1,-6,-8,7,10,-3,-1,5,4,8,2,5,10,3,7,4,9,-10,-8,-10,-9,1,1,-7,-8,7,7,-3,-1,8,6,-7,4,3,-6,-8,9,6,7,-3,8,-7,1,-4,6,-10,6,9,-5,-3,7,-8,5,4,-7,9,6,2,5,10,10,6,-7,9,7,-5,-5,1,-6,4,-2,1,-8,-7,-1,-6,9,10,-7,10,-10,10,-9,-9,-6,10,-5,-5,-4,-6,1,9,-4,-6,7,-6,-2,-4,7,-7,6,10,8,4,10,-8,-2,1,-5,8,4,9,-2,10,-8,-2,-4,-6,8,4,-10,8,-9,-9,-7,-6,-4,-10,10,6,7,-2,10,1,8,7,8,-1,6,3,8,8,-4,6,8,-10,2,6,-10,10,-4,5,2,-1,5,-4,1,4,-10,-9,-4,5,-1,-8,10,10,-4,-8,-10,-7,-10,7,-4,-9,5,7,9,5,-5,-2,2,-10,6,5,6,-10,-6,10,-1,-6,-10,-6,-5,8,6,4,3,-4,-2,6,4,4,4,8,6,-10,7,3,6,9,-5,-10,8,9,5,-8,1,9,-10,1,-2,-10,8,8,-7,6,9,2,1,9,-5,7,1,-1,2,6,-4,3,-10,-6,8,-10,-7,6,4,-6,-2,-6,6,5,9,3,8,5,-7,-6,2,-1,10,9,-3,-4,-5,-10,-8,-2,-6,2,1,3,-8,-10,-7,-1,8,-3,-4,-6,7,-1,-10,-2,8,-10,3,6,2,-4,-8,-8,-7,-9,-7,-10,-10,-9,-4,7,-5,4,8,-1,-7,-1,-2,-5,-1,-9,-9,3,10,10,-3,9,-3,7,-2,-4,-3,-5,-8,-3,-7,7,1,-7,-4,-6,-3,-6,-7,-10,1,-9,-2,9,-7,9,5,9,-10,9,-3,-2,2,-5,-10,10,-2,6,-3,4,-7,5,-10,10,-1,3,-5,-2,-2,-8,5,-4,6,1,-6,1,-1,-7,-9,1,5,-3,9,-7,-4,3,-2,-6,-8,-8,-5,8,-5,7,2,-5,-1,9,-6,9,3,9,9,-4,4,1,-2,5,4,1,-9,-6,5,-8,-4,-2,9,2,7,-4,1,10,4,1,7,-5,10,-7,-7,-7,2,-7,9,8,9,-8,-5,4,-6,-9,-8,-1,8,-3,-5,-5,8,-7,-3,-6,4,3,-4,3,1,-5,8,7,-6,-10,-1,-7,9,7,-8,4,-6,-5,5,10,-10,7,3,-4,2,-1,1,3,3,-3,2,-4,6,1,-7,-7,10,-7,-8,3,6,-5,3,8,8,6,9,-2,-9,-4,6,5,7,-8,-4,-7,6,-7,9,-4,7,7,-9,-8,-2,9,8,-5,-8,10,-5,-10,8,-1,-3,4,-4,-5,-9,-5,7,-10,-8,2,7,7,8,4,-7,4,9,-1,8,6,-10,10,-5,-4,7,-10,-5,-8,-6,-2,-7,-6,-6,-7,-2,-4,6,-10,6,7,-10,-8,5,2,8,6,-10,-2,-9,1,-6,6,10,-4,-9,-2,9,6,5,7,1,1,-6,-8,-3,-8,7,-10,9,-5,-6,-9,-6,9,4,5,1,-7,-8,-4,7,10,8,-2,6,7,-4,-7,5,2,-3,-5,2,3,-10,-2,3,-10,10,7,-9,7,5,4,3,-7,2,3,5,-5,-5,3,-7,-8,-5,4,-1,9,-9,6,-6,8,-7,1,9,9,3,1,-5,10,5,-5,-6,-4,7,5,-3,1,-6,-1,8,-8,-10,-2,9,4,-7,2,-5,-8,-6,-6,-8,6,9,8,7,-10,-4,-3,-6,8,-10,-7,-9,-7,-10,2,10,-1,-7,-8,-2,5,-3,-10,7,-2,-10,-2,-4,2,10,1,5,-8,-10,9,5,9,-4,6,-6,-10,7,-3,-9,-4,-2,8,8,10,-2,-9,4,-2,-8,-2,7,1,4,-7,-3,-1,-10,10,4,-6,-10,-1,5,-5,-4,-7,10,8,-4,-6,-8,1,5,5,-3,6,-6,-8,-4,3,-1,-10,-2,5,-3,-4,6,-10,7,2,6,3,-5,-2,7,9,-8,9,7,-6,6,3,5,5,-9,-4,-3,7,-10,-8,-4,5,6,-2,9,-5,-7,-7,2,-6,8,-7,7,-2,-1,-3,7,-7,-3,8,-6,-9,1,-7,9,-7,-3,10,6,-6,2,2,-7,-4,7,-4,-7,9,-10,-5,2,-8,6,-3,-9,1,-10,1,-3,10,1,4,9,-7,10,10,4,6,-5,2,10,5,6,7,-5,9,3,5,9,-2,4,10,9,7,7,-10,-3,-8,1,8,2,-3,3,6,-7,-10,10,8,9,5,-5,4,-10,-6,-6,8,-4,-5,-6,-10,7,6,1,9,1,6,9,-3,2,9,-6,8,-9,-8,1,-9,-7,10,-1,9,-10,-10,-7,-7,2,7,-4,-7,-7,7,-2,-8,1,8,6,-6,2,-7,-6,-6,-2,-8,7,1,-2,-3,7,5,9,2,9,-2,-1,-10,5,9,2,-6,-7,-4,-5,5,-8,2,2,-5,-9,3,-7,-10,2,10,7,2,10,2,3,-9,-6,10,-4,-10,-1,-4,-8,1,-4,-6,4,6,4,-3,-5,-9,3,10,2,2,-3,-4,-3,-4,5,-9,-6,4,10,8,-10,-6,-6,-2,-6,-2,3,1,10,-2,-5,-3,-3,-2,6,10,-9,-1,-5,-3,-7,10,-10,3,-8,4,-5,4,-6,5,-8,-8,-3,2,-1,-7,-10,8,9,2,8,1,-5,-5,1,4,5,8,2,6,-5,-2,1,6,3,7,6,-7,3,3,-2,-5,1,-4,1,6,2,-2,-10,-3,8,6,-8,-4,-5,-6,4,-3,-5,7,5,-4,3,-10,-4,-8,10,6,-9,2,-7,-10,-10,-7,-9,10,8,-1,-10,6,3,-8,-1,3,-5,3,-5,-5,7,-9,4,2,-5,-5,-5,3,-6,-1,7,7,2,6,-7,2,10,-4,-5,8,-1,-7,3,-6,-2,8,-2,-3,-6,-2,7,9,-7,4,9,-2,-5,9,-10,1,-2,5,-3,-10,7,-6,-6,-4,7,-5,-9,9,9,-4,-2,4,3,8,8,-8,10,9,-8,10,-2,4,-5,5,-2,2,-3,6,6,3,3,-6,3,10,-2,-7,-7,-4,-7,-6,-10,-10,7,-1,3,-6,3,-9,9,8,-10,-4,9,1,10,2,8,-3,2,-9,-7,-1,-6,7,-10,7,-3,8,2,7,-9,-2,-2,3,10,-1,6,7,2,7,10,-3,6,4,-5,2,9,2,-8,7,8,4,10,5,-5,6,-8,-8,-2,-6,1,-10,9,-4,-10,6,-9,-1,-4,-2,3,-4,-7,-7,3,8,1,-6,2,9,1,10,-10,10,1,2,-10,-5,9,7,-5,-7,5,-9,3,8,5,-5,-1,8,-7,-4,-5,5,10,5,9,4,-7,-2,2,6,10,-2,-6,-4,1,1,8,-1,8,-8,9,-4,6,9,-5,-5,8,-9,8,-9,-1,6,-4,10,2,-2,1,-9,9,-2,5,-3,-5,-7,-6,-3,-7,-10,7,-5,-7,1,-3,4,-8,-10,4,-8,-8,5,3,2,-8,-1,2,5,4,-9,6,-3,-10,9,-6,4,-2,-7,6,5,4,10,-5,-7,-8,-8,-10,1,3,3,-9,-3,-7,-7,4,8,9,3,-2,3,-7,-6,-1,4,-9,1,-7,8,-9,-8,7,8,-5,-10,-3,6,-1,6,9,3,-8,-5,-3,10,6,-2,5,10,4,6,-10,-7,9,4,3,8,-4,-8,-4,8,8,4,1,-3,2,2,6,-5,-5,2,6,1,3,-8,10,8,5,1,-5,-3,-8,1,6,-10,4,-1,2,-2,-3,-1,-6,3,10,-7,10,4,-7,-3,-2,8,-5,-8,-8,3,3,-4,-2,10,3,-8,9,3,8,3,-9,8,7,-2,-8,-8,-10,2,1,7,-9,-7,7,-8,-5,7,-1,7,-10,-5,-7,-3,-7,-2,-5,2,-4,-4,-8,9,3,-7,-8,-2,-7,-1,2,-3,9,7,4,9,8,-2,8,-10,-5,5,3,-6,-6,7,10,-7,7,2,1,1,7,-6,5,5,-4,5,-10,10,-7,6,-8,6,-6,7,2,-1,-1,1,4,8,-8,7,-4,-6,5,10,-8,7,5,-3,1,-5,10,10,3,4,-3,-1,-10,-9,10,8,-6,-4,-8,9,3,-6,9,9,-6,-5,-5,-7,5,10,5,-5,-3,-3,6,-2,3,1,4,8,-4,10,-1,-2,2,4,-10,-10,8,5,5,-2,-5,-2,5,-2,5,8,-8,-4,4,10,7,-6,5,-8,9,9,-4,-7,-5,10,1,-7,10,-1,-9,8,-3,10,6,-8,-9,10,-2,-4,4,-6,-4,3,-6,10,-7,3,5,-10,3,-7,-9,-6,4,5,-6,4,-7,7,3,-1,10,-2,7,-7,2,-5,-10,9,2,1,-8,-9,-2,-8,-6,5,3,10,-9,-2,-10,9,7,4,-5,-7,-10,8,5,-6,3,6,1,5,2,1,4,3,-10,-9,2,8,4,-3,-1,9,-2,-1,-10,3,6,5,-3,-9,7,-10,6,10,-3,9,2,10,-3,-7,9,-7,1,3,2,9,-4,8,-8,-9,1,-6,6,-7,7,1,1,1,2,7,7,-3,6,10,2,-4,-9,-6,-6,-3,-4,-3,4,8,-7,10,-1,-7,-6,9,-8,1,-5,2,7,-8,-2,7,-2,-2,9,5,4,-7,10,-10,-10,8,7,7,-7,-6,-4,7,-9,-7,10,8,-5,-6,-2,-5,-9,-8,-3,2,-9,-3,3,-1,8,1,-9,1,4,8,6,-8,6,-3,10,3,4,-4,-5,-7,10,-2,-7,-2,-4,8,-6,7,4,-1,5,-6,9,4,-3,-10,1,4,6,-2,8,10,-8,-6,-9,9,-2,-3,-4,-8,9,10,9,-9,-1,7,3,-5,-6,-5,9,-9,8,-3,-8,-9,-8,-9,2,6,-1,3,10,-2,9,3,1,1,5,-2,-7,-2,-10,4,10,-5,2,-2,-6,-1,4,-6,-8,-6,3,6,9,-6,10,10,1,9,-3,-6,-7,-5,10,8,8,-9,-10,-10,-4,7,-10,3,10,5,-5,2,7,-3,-9,-5,4,8,10,2,-6,-9,6,8,-6,-1,3,2,-3,6,-7,8,6,5,4,3,10,6,4,4,-6,-10,2,-8,-9,8,-7,7,-2,1,-2,6,8,10,6,1,-10,-1,-5,9,3,-9,-4,4,-1,-2,1,6,9,-1,-9,9,5,4,-6,3,-2,10,1,2,2,6,1,3,8,-9,8,8,7,-5,-7,-4,5,7,-9,9,-4,-7,6,6,-5,3,-4,-9,3,4,6,-10,-4,-6,-7,-6,-9,5,2,1,8,-1,3,1,-7,9,-5,-2,-6,-3,3,-4,-2,-8,-10,-4,-3,1,6,-3,9,6,-10,4,-9,1,-6,-6,1,3,-5,10,-3,-3,4,-1,7,-8,10,-5,7,-2,-8,-1,4,-2,2,-6,-4,-3,-4,-1,6,10,-1,4,2,3,8,-10,-2,1,6,-9,4,-9,10,3,-1,-1,-9,-10,-5,-10,-9,-5,-5,-4,-2,1,9,-6,2,-5,2,5,3,4,-8,-10,7,7,10,4,8,-1,9,-6,-7,-4,-8,-4,-6,-10,-3,3,-8,5,-4,1,6,9,-9,6,7,-9,-1,-10,1,1,-4,7,7,-9,1,-4,-4,-2,-1,3,10,-5,-4,10,-6,-3,-7,2,10,-6,-3,-8,5,-2,-10,-4,-6,3,-7,9,-2,-4,1,-3,-9,-4,9,-9,-3,1,-7,-4,-8,-7,10,8,6,-2,-10,-2,4,-1,-9,7,3,-7,-5,-5,10,7,8,1,-9,-5,-6,8,-2,-4,9,-2,1,5,2,10,4,9,3,7,3,-1,-6,10,5,-8,-5,-7,2,2,-1,-6,-10,-6,5,4,-5,6,5,-9,9,-5,8,9,-3,3,-3,-1,-4,-5,2,8,6,7,9,2,-3,-2,-10,-2,4,-10,-6,2,-8,10,8,-7,1,6,10,-8,6,8,3,-10,5,5,-1,-1,4,10,9,-4,1,-10,1,-6,10,-4,3,-9,6,-2,-1,-7,-4,4,-4,4,2,6,4,10,-7,-6,-10,1,-10,-2,-5,5,6,5,-10,5,4,5,5,-9,-10,5,1,4,10,-2,3,-8,-7,-8,3,8,5,3,-9,-4,-9,-6,6,2,6,-3,-3,9,-4,-6,-2,-2,8,-9,-10,-3,-4,9,-1,-8,-9,9,1,-10,6,-10,2,7,7,-6,-3,-6,-2,-8,10,-1,8,8,7,-2,8,3,-4,-10,8,-10,9,-9,2,5,5,10,-5,1,-8,8,7,-6,4,3,-5,5,10,-4,-1,-6,-4,-8,-5,-4,-1,1,-4,10,2,-9,8,-1,-6,-3,-4,1,-3,9,-7,-3,5,-8,-10,4,2,10,-5,-8,-8,8,-8,-1,8,-3,3,5,1,-5,-2,4,2,3,7,-8,2,6,-3,-3,9,7,-3,1,6,4,5,-3,3,4,-7,6,6,-1,1,1,-9], dtype = "uint16")#candidate|2987|(3360,)|const|uint16
call_2986 = relay.TupleGetItem(func_1736_call(relay.reshape(const_2987.astype('uint16'), [3360,])), 0)
call_2988 = relay.TupleGetItem(func_1739_call(relay.reshape(const_2987.astype('uint16'), [3360,])), 0)
func_1202_call = mod.get_global_var('func_1202')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_3001 = relay.TupleGetItem(func_1202_call(), 1)
call_3002 = relay.TupleGetItem(func_1204_call(), 1)
output = relay.Tuple([call_2977,call_2986,const_2987,call_3001,])
output2 = relay.Tuple([call_2978,call_2988,const_2987,call_3002,])
func_3003 = relay.Function([], output)
mod['func_3003'] = func_3003
mod = relay.transform.InferType()(mod)
output = func_3003()
func_3004 = relay.Function([], output)
mutated_mod['func_3004'] = func_3004
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3007 = relay.var("var_3007", dtype = "float64", shape = (11, 3, 4))#candidate|3007|(11, 3, 4)|var|float64
uop_3008 = relay.cos(var_3007.astype('float64')) # shape=(11, 3, 4)
output = relay.Tuple([uop_3008,])
output2 = relay.Tuple([uop_3008,])
func_3027 = relay.Function([var_3007,], output)
mod['func_3027'] = func_3027
mod = relay.transform.InferType()(mod)
mutated_mod['func_3027'] = func_3027
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3028 = relay.var("var_3028", dtype = "float64", shape = (11, 3, 4))#candidate|3028|(11, 3, 4)|var|float64
func_3027_call = mutated_mod.get_global_var('func_3027')
call_3029 = func_3027_call(var_3028)
output = call_3029
func_3030 = relay.Function([var_3028], output)
mutated_mod['func_3030'] = func_3030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_3098 = func_2211_call()
call_3099 = func_2211_call()
output = relay.Tuple([call_3098,])
output2 = relay.Tuple([call_3099,])
func_3143 = relay.Function([], output)
mod['func_3143'] = func_3143
mod = relay.transform.InferType()(mod)
mutated_mod['func_3143'] = func_3143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3143_call = mutated_mod.get_global_var('func_3143')
call_3144 = func_3143_call()
output = call_3144
func_3145 = relay.Function([], output)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_3163 = relay.TupleGetItem(func_1795_call(), 0)
call_3164 = relay.TupleGetItem(func_1796_call(), 0)
output = relay.Tuple([call_3163,])
output2 = relay.Tuple([call_3164,])
func_3173 = relay.Function([], output)
mod['func_3173'] = func_3173
mod = relay.transform.InferType()(mod)
output = func_3173()
func_3174 = relay.Function([], output)
mutated_mod['func_3174'] = func_3174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_3280 = relay.TupleGetItem(func_2467_call(), 1)
call_3281 = relay.TupleGetItem(func_2468_call(), 1)
func_1264_call = mod.get_global_var('func_1264')
func_1265_call = mutated_mod.get_global_var('func_1265')
call_3287 = relay.TupleGetItem(func_1264_call(), 0)
call_3288 = relay.TupleGetItem(func_1265_call(), 0)
output = relay.Tuple([call_3280,call_3287,])
output2 = relay.Tuple([call_3281,call_3288,])
func_3296 = relay.Function([], output)
mod['func_3296'] = func_3296
mod = relay.transform.InferType()(mod)
mutated_mod['func_3296'] = func_3296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3296_call = mutated_mod.get_global_var('func_3296')
call_3297 = func_3296_call()
output = call_3297
func_3298 = relay.Function([], output)
mutated_mod['func_3298'] = func_3298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1998_call = mod.get_global_var('func_1998')
func_1999_call = mutated_mod.get_global_var('func_1999')
call_3302 = relay.TupleGetItem(func_1998_call(), 0)
call_3303 = relay.TupleGetItem(func_1999_call(), 0)
func_1851_call = mod.get_global_var('func_1851')
func_1852_call = mutated_mod.get_global_var('func_1852')
call_3311 = relay.TupleGetItem(func_1851_call(), 1)
call_3312 = relay.TupleGetItem(func_1852_call(), 1)
func_626_call = mod.get_global_var('func_626')
func_629_call = mutated_mod.get_global_var('func_629')
var_3322 = relay.var("var_3322", dtype = "uint16", shape = (3360,))#candidate|3322|(3360,)|var|uint16
call_3321 = relay.TupleGetItem(func_626_call(relay.reshape(var_3322.astype('uint16'), [3360,]), relay.reshape(var_3322.astype('float32'), [14, 16, 15]), ), 7)
call_3323 = relay.TupleGetItem(func_629_call(relay.reshape(var_3322.astype('uint16'), [3360,]), relay.reshape(var_3322.astype('float32'), [14, 16, 15]), ), 7)
output = relay.Tuple([call_3302,call_3311,call_3321,var_3322,])
output2 = relay.Tuple([call_3303,call_3312,call_3323,var_3322,])
func_3325 = relay.Function([var_3322,], output)
mod['func_3325'] = func_3325
mod = relay.transform.InferType()(mod)
var_3326 = relay.var("var_3326", dtype = "uint16", shape = (3360,))#candidate|3326|(3360,)|var|uint16
output = func_3325(var_3326)
func_3327 = relay.Function([var_3326], output)
mutated_mod['func_3327'] = func_3327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2866_call = mod.get_global_var('func_2866')
func_2868_call = mutated_mod.get_global_var('func_2868')
call_3345 = relay.TupleGetItem(func_2866_call(), 1)
call_3346 = relay.TupleGetItem(func_2868_call(), 1)
output = call_3345
output2 = call_3346
func_3347 = relay.Function([], output)
mod['func_3347'] = func_3347
mod = relay.transform.InferType()(mod)
output = func_3347()
func_3348 = relay.Function([], output)
mutated_mod['func_3348'] = func_3348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2173_call = mod.get_global_var('func_2173')
func_2174_call = mutated_mod.get_global_var('func_2174')
call_3359 = relay.TupleGetItem(func_2173_call(), 4)
call_3360 = relay.TupleGetItem(func_2174_call(), 4)
uop_3371 = relay.log(call_3359.astype('float64')) # shape=(840, 4)
uop_3373 = relay.log(call_3360.astype('float64')) # shape=(840, 4)
uop_3376 = relay.sigmoid(call_3359.astype('float64')) # shape=(840, 4)
uop_3378 = relay.sigmoid(call_3360.astype('float64')) # shape=(840, 4)
bop_3382 = relay.logical_or(uop_3371.astype('bool'), relay.reshape(uop_3376.astype('bool'), relay.shape_of(uop_3371))) # shape=(840, 4)
bop_3385 = relay.logical_or(uop_3373.astype('bool'), relay.reshape(uop_3378.astype('bool'), relay.shape_of(uop_3373))) # shape=(840, 4)
output = bop_3382
output2 = bop_3385
func_3391 = relay.Function([], output)
mod['func_3391'] = func_3391
mod = relay.transform.InferType()(mod)
output = func_3391()
func_3392 = relay.Function([], output)
mutated_mod['func_3392'] = func_3392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2072_call = mod.get_global_var('func_2072')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_3424 = relay.TupleGetItem(func_2072_call(), 1)
call_3425 = relay.TupleGetItem(func_2074_call(), 1)
output = call_3424
output2 = call_3425
func_3444 = relay.Function([], output)
mod['func_3444'] = func_3444
mod = relay.transform.InferType()(mod)
mutated_mod['func_3444'] = func_3444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3444_call = mutated_mod.get_global_var('func_3444')
call_3445 = func_3444_call()
output = call_3445
func_3446 = relay.Function([], output)
mutated_mod['func_3446'] = func_3446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2295_call = mod.get_global_var('func_2295')
func_2297_call = mutated_mod.get_global_var('func_2297')
call_3502 = relay.TupleGetItem(func_2295_call(), 0)
call_3503 = relay.TupleGetItem(func_2297_call(), 0)
func_725_call = mod.get_global_var('func_725')
func_726_call = mutated_mod.get_global_var('func_726')
call_3514 = relay.TupleGetItem(func_725_call(), 1)
call_3515 = relay.TupleGetItem(func_726_call(), 1)
output = relay.Tuple([call_3502,call_3514,])
output2 = relay.Tuple([call_3503,call_3515,])
func_3532 = relay.Function([], output)
mod['func_3532'] = func_3532
mod = relay.transform.InferType()(mod)
mutated_mod['func_3532'] = func_3532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mutated_mod.get_global_var('func_3532')
call_3533 = func_3532_call()
output = call_3533
func_3534 = relay.Function([], output)
mutated_mod['func_3534'] = func_3534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2866_call = mod.get_global_var('func_2866')
func_2868_call = mutated_mod.get_global_var('func_2868')
call_3566 = relay.TupleGetItem(func_2866_call(), 1)
call_3567 = relay.TupleGetItem(func_2868_call(), 1)
output = call_3566
output2 = call_3567
func_3591 = relay.Function([], output)
mod['func_3591'] = func_3591
mod = relay.transform.InferType()(mod)
mutated_mod['func_3591'] = func_3591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3591_call = mutated_mod.get_global_var('func_3591')
call_3592 = func_3591_call()
output = call_3592
func_3593 = relay.Function([], output)
mutated_mod['func_3593'] = func_3593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1264_call = mod.get_global_var('func_1264')
func_1265_call = mutated_mod.get_global_var('func_1265')
call_3597 = relay.TupleGetItem(func_1264_call(), 2)
call_3598 = relay.TupleGetItem(func_1265_call(), 2)
output = call_3597
output2 = call_3598
func_3605 = relay.Function([], output)
mod['func_3605'] = func_3605
mod = relay.transform.InferType()(mod)
mutated_mod['func_3605'] = func_3605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3605_call = mutated_mod.get_global_var('func_3605')
call_3606 = func_3605_call()
output = call_3606
func_3607 = relay.Function([], output)
mutated_mod['func_3607'] = func_3607
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3665 = relay.const([[[-5.332662,5.564201,-6.686828],[2.245593,9.689418,4.397828],[8.558128,2.727939,7.636165],[6.784339,4.755611,5.322044]],[[4.079694,4.007777,-2.009986],[6.243556,-5.268913,-8.339580],[-2.245962,7.939053,-7.655543],[8.960788,7.605648,8.664096]],[[7.221678,0.062241,-1.971097],[-3.076864,-3.783945,-7.302715],[-6.826943,-2.292425,3.450221],[-5.442517,-2.814161,2.271070]],[[-5.521485,-6.175591,3.911349],[-2.498412,4.158667,6.970320],[-3.397543,6.990213,7.012215],[-9.281639,3.941318,-3.579820]]], dtype = "float32")#candidate|3665|(4, 4, 3)|const|float32
uop_3666 = relay.log10(const_3665.astype('float32')) # shape=(4, 4, 3)
output = relay.Tuple([uop_3666,])
output2 = relay.Tuple([uop_3666,])
func_3669 = relay.Function([], output)
mod['func_3669'] = func_3669
mod = relay.transform.InferType()(mod)
mutated_mod['func_3669'] = func_3669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3669_call = mutated_mod.get_global_var('func_3669')
call_3670 = func_3669_call()
output = call_3670
func_3671 = relay.Function([], output)
mutated_mod['func_3671'] = func_3671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3391_call = mod.get_global_var('func_3391')
func_3392_call = mutated_mod.get_global_var('func_3392')
call_3679 = func_3391_call()
call_3680 = func_3391_call()
uop_3681 = relay.acosh(call_3679.astype('float32')) # shape=(840, 4)
uop_3683 = relay.acosh(call_3680.astype('float32')) # shape=(840, 4)
func_3173_call = mod.get_global_var('func_3173')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_3685 = relay.TupleGetItem(func_3173_call(), 0)
call_3686 = relay.TupleGetItem(func_3174_call(), 0)
uop_3687 = relay.asin(uop_3681.astype('float64')) # shape=(840, 4)
uop_3689 = relay.asin(uop_3683.astype('float64')) # shape=(840, 4)
bop_3699 = relay.not_equal(uop_3687.astype('bool'), relay.reshape(uop_3681.astype('bool'), relay.shape_of(uop_3687))) # shape=(840, 4)
bop_3702 = relay.not_equal(uop_3689.astype('bool'), relay.reshape(uop_3683.astype('bool'), relay.shape_of(uop_3689))) # shape=(840, 4)
const_3710 = relay.const([[-5.101219,6.870052,6.909467,-2.660452],[-8.437976,6.110491,-6.047904,-8.244505],[5.348339,3.715338,6.571420,9.819037],[-0.953516,6.573947,-9.205824,6.222471],[1.131089,7.019334,5.373572,-1.596880],[0.585233,-1.561939,6.839330,0.490520],[6.089213,-5.226509,-7.885520,1.339158],[-9.178728,-3.027627,1.028588,8.698021],[-2.695610,2.718619,-9.097138,-5.478004],[2.612448,-6.080376,5.665159,9.302795],[-3.749947,3.522774,4.847770,4.147696],[4.585407,6.355070,-1.577503,-5.406418],[1.833829,-1.642779,0.281666,5.788941],[3.460855,5.918863,3.997185,-4.490698],[-5.975803,1.039521,-6.848269,-6.292601],[-6.797743,-8.617662,-8.885304,2.065986],[9.673754,-7.644617,-4.531661,8.626720],[3.693777,-2.252687,-4.334859,-0.364879],[-9.880835,-4.197161,1.648012,4.378535],[-6.156015,-0.786924,-5.678084,-3.263856],[0.327791,-9.233339,7.424255,-4.373385],[8.367855,6.076022,0.516506,-7.646399],[2.686481,-6.261764,7.311241,-3.333177],[6.461750,7.847906,3.418638,6.337164],[-3.289856,-8.799371,-9.948856,-3.603263],[-0.998734,3.833886,2.941116,3.061700],[-3.701568,6.175039,6.380901,-2.731399],[-0.988206,-4.463848,6.669149,6.282628],[-3.998139,6.583032,-9.768267,-2.675581],[-7.477577,-0.918185,9.401627,-1.646886],[9.154638,-8.245788,-7.288946,6.523715],[-9.523083,-1.524871,-9.415010,8.730066],[9.233201,4.073510,-7.154797,-1.219205],[9.604341,-9.178542,0.619290,-7.105334],[1.106706,1.231667,8.451127,-3.736786],[7.560972,-7.666914,-0.964183,-9.392405],[-5.082188,5.128378,8.514871,0.484636],[-0.828790,9.561893,9.480851,-9.126216],[-3.071393,-0.424222,7.109151,6.534162],[7.900681,-6.455061,7.967862,1.616921],[-9.156411,-5.603939,9.328273,-2.127574],[-1.644052,6.160082,2.968138,-6.316155],[5.769366,-9.578470,7.215843,0.590204],[2.058229,9.740228,-3.158052,-8.243187],[4.247278,-1.348542,6.755760,5.567430],[3.593523,8.009900,-0.717164,-8.815858],[-7.993364,-8.434022,5.601265,-0.027102],[2.901861,6.597643,-3.858434,-6.419512],[5.712228,-6.291520,7.770926,-9.761179],[-1.773136,-7.435923,6.031556,7.583379],[6.042101,5.705328,8.387146,4.288603],[9.573644,8.145196,-0.727938,-9.273325],[-1.098892,-1.624849,-6.673497,-0.350392],[-7.498490,9.747392,-1.528290,9.628872],[8.022307,-3.837848,-8.313816,8.875205],[-3.297225,-8.927091,1.116845,-1.977079],[4.957180,0.663380,7.455042,4.852406],[-7.519424,0.978052,3.078735,-1.509627],[-8.156662,4.733537,-6.072502,-1.649070],[7.148030,-2.860814,3.334830,2.128567],[3.909402,-4.669284,-5.377827,1.519087],[5.250916,9.931161,3.402933,8.024661],[-2.759292,8.639572,1.834788,-6.224710],[-2.093754,6.119465,4.447388,-9.642431],[-9.050681,-0.880001,-6.315346,4.955753],[-2.919592,-8.810011,8.372865,0.781622],[4.456470,-8.159807,1.698512,9.191718],[8.187297,7.805994,2.646098,-8.845862],[6.767808,8.125338,-8.964300,6.119048],[3.678052,-3.786183,1.803366,9.721837],[-0.920497,4.954928,-0.623306,8.919936],[-1.245047,-6.297176,5.120201,1.747152],[4.578139,-6.692806,0.789843,4.268157],[-4.087866,4.275510,2.490888,-0.021325],[8.543264,9.928821,-3.799576,4.961337],[-2.803801,9.003508,-9.709283,-4.410064],[4.695635,4.679130,-7.281027,2.547656],[5.327062,-2.475262,3.556020,-9.101822],[-2.028120,-6.447369,5.732966,4.429554],[-1.337253,6.326131,0.235069,-2.299230],[-0.932554,-7.220965,-7.003216,8.600375],[-6.334431,5.331674,-2.987041,-2.505080],[5.355287,-4.373445,9.256978,-5.197861],[-3.222148,-2.574296,6.313556,-4.899188],[4.657076,-8.780115,-6.757346,4.222772],[7.161006,5.769235,-1.197259,9.705822],[-9.756775,-7.874520,3.673632,4.672157],[-2.457866,-8.997526,8.696006,-4.113950],[7.708138,-5.651432,-3.215527,-7.921968],[-6.997263,-0.468893,-7.070081,8.996516],[5.452824,-6.906051,-6.600409,-3.665349],[9.579628,3.845469,8.393634,8.867099],[-5.702119,-8.075550,9.483449,0.261863],[-3.086947,5.426698,3.766153,-3.875793],[-9.075181,1.739125,-6.853430,-7.432376],[-5.870090,-0.489642,7.761660,-2.074645],[-5.893764,-1.804946,-5.870102,3.553538],[4.204686,8.977801,4.385238,7.157768],[-4.928354,0.463544,-2.707246,-1.721006],[2.963719,-5.330799,9.617016,-3.655989],[-0.509603,2.703037,-5.095781,7.664517],[6.597544,-9.478058,-1.876014,6.487115],[4.214224,-6.904458,-1.839016,-1.856013],[0.394396,-9.248293,-2.971712,-1.023814],[8.111531,2.396411,7.397823,-8.357907],[8.710549,1.216522,-9.416475,-4.608426],[3.184469,-9.391290,5.143822,8.550351],[5.093484,1.643735,1.973134,-2.366473],[-2.424185,-7.564488,3.896985,-9.421473],[-4.036925,-5.954224,-6.040948,-6.316757],[1.311085,7.438472,4.657765,-9.172890],[-4.009691,-8.078491,3.029746,5.931446],[-2.039736,2.272214,-3.827441,-9.773887],[-9.613717,3.542973,1.766591,-8.604135],[-5.570285,-4.692712,6.212266,6.830891],[-6.500133,0.064754,-4.692674,5.940503],[-2.396874,-0.246118,9.788986,9.450183],[-0.246249,-6.576077,-3.317802,-0.402772],[5.639082,6.117853,6.467212,-1.976436],[-8.426099,-8.730033,-7.227379,-1.962844],[-6.487984,5.954283,0.526677,8.948523],[-9.368410,-9.748073,2.494780,9.561972],[3.739092,9.526099,5.504742,-9.057491],[2.234082,9.197886,5.387832,-3.011017],[-5.178590,3.160628,6.227056,7.250636],[-7.966571,-5.412552,9.758890,-7.916066],[-2.891388,7.003966,-8.869182,-2.452675],[-5.465403,8.214187,1.975460,-9.999884],[-5.958546,0.542656,-6.742800,1.557815],[-4.880065,-9.821353,2.729280,-2.492796],[-1.101974,-0.411383,-5.843764,-2.032300],[-7.396744,-0.366492,-7.194075,6.912969],[-9.821805,-6.818577,-5.932636,2.327658],[0.969665,-6.166790,2.063628,4.962455],[-5.687104,-5.681716,-6.762795,-6.752522],[-2.183425,-5.471302,3.963245,8.493701],[-3.545618,-2.222061,9.087035,-8.963330],[-5.619542,-4.323745,1.185502,3.940071],[3.474542,-5.940264,4.605581,-0.195140],[1.067562,-5.205228,-9.687513,-7.620466],[1.018401,6.365913,5.440407,2.502475],[-5.117166,5.501068,6.508424,-8.562917],[-6.478563,-4.902213,3.689645,6.928357],[1.447815,7.755336,-6.095613,9.157856],[-9.395720,-9.115092,-7.425043,2.522596],[9.628253,-8.329314,-5.358261,5.544193],[-6.536051,-9.199586,-8.460561,-6.367530],[1.929544,-5.432010,-5.363410,9.497747],[-8.914948,-6.401767,2.891313,-9.672119],[-9.001957,-8.239608,9.829979,0.361169],[0.155591,6.510581,5.898063,-3.802907],[6.890234,-8.311851,-3.784144,-2.202381],[-9.144945,7.062714,1.190198,-0.981577],[-1.092204,-6.623111,2.799369,7.375700],[0.155140,-5.734737,5.864377,5.164703],[0.777212,-6.355859,0.982326,9.174645],[3.079280,1.332495,-3.487354,-4.902230],[-1.546843,-7.472116,-8.710780,3.861683],[-2.423174,-6.488264,-4.867030,-6.041883],[-8.128254,0.254432,1.816272,0.129074],[8.409487,6.154183,-1.301334,-6.108012],[-6.094453,-2.787793,6.258257,-6.096276],[-7.343580,0.370115,-3.093117,-2.364847],[-4.150230,-7.479717,-9.271829,-9.287630],[2.993040,5.649122,8.177188,-4.082563],[-3.982925,-7.174400,-9.022622,5.447650],[6.443034,4.404958,-5.507120,-7.131827],[8.807253,6.358368,-8.070040,1.592870],[8.552230,-2.085101,8.538170,1.736583],[0.741750,2.893165,-8.564046,-1.308098],[5.663036,-9.965538,-9.834302,-3.508225],[8.952508,7.725979,4.348793,6.468826],[-8.664677,5.325095,7.138167,6.085764],[-1.380859,-5.758555,-7.187892,-0.515403],[3.984444,3.073390,-8.484969,2.165425],[2.055049,0.573230,-2.634205,-4.895225],[-7.437294,-1.590659,-3.631618,4.490336],[-6.158008,9.806331,-5.788012,-0.294247],[-7.366335,0.339450,9.663929,1.593325],[-4.743347,3.208766,5.128342,8.704290],[9.595771,5.497239,1.227532,-1.385045],[8.537391,-4.997949,6.403612,0.870474],[5.551368,-2.383413,3.265170,7.189151],[0.580514,-1.836442,-3.723753,-1.019765],[7.174100,4.702874,-3.491210,-4.645855],[-2.076710,-6.509808,0.240896,6.617081],[-5.304622,4.018842,4.980346,1.131131],[5.127671,-4.065384,2.016454,7.399015],[-0.063710,-8.588294,-0.379494,-4.315760],[3.796597,6.246016,-7.888724,1.240030],[-0.873998,8.719376,-4.760217,-9.308815],[-6.673788,5.724506,-2.112930,0.900490],[-2.511160,3.942910,-8.023455,3.194704],[-1.696799,2.852446,7.075611,-2.949705],[6.404249,-4.167915,-4.738098,-2.636625],[2.133150,3.412141,-0.944250,-8.433496],[-3.570836,-3.909616,-1.383941,-7.413099],[-6.668347,1.460166,5.784229,2.767891],[9.289652,-0.816745,0.503799,7.537312],[-2.453526,-5.273218,5.578505,0.240117],[-0.610294,-4.568768,5.732721,-0.668369],[-5.021838,-7.764106,1.568954,0.068145],[1.170932,-0.364297,-9.025620,1.449007],[-1.690724,8.708908,-2.024542,9.474953],[-5.633047,7.720809,2.279110,9.763814],[-1.770271,1.408447,-9.242920,-5.536756],[-0.345780,-7.513982,-1.189659,8.738710],[1.306138,-7.237658,-1.641622,-9.019508],[-3.711829,-0.178387,0.011445,5.606088],[1.981715,8.731623,9.811179,6.025681],[1.150901,-6.247995,6.024552,-2.469711],[2.182247,8.381754,3.632865,-4.498846],[9.291771,4.621458,8.270780,-8.780664],[2.981749,-0.560068,-5.430339,-2.767428],[6.136573,6.404287,-9.995316,1.187287],[1.018471,3.373266,-1.580935,-6.017012],[9.194567,3.556309,-0.374702,6.334446],[7.966788,0.022200,-1.751818,2.665866],[-0.358695,-5.307167,6.272793,-9.450142],[-2.423371,5.852067,-2.312176,9.711907],[7.084245,-9.598463,-8.439161,0.018032],[2.569146,1.805389,-3.727886,9.503998],[-9.166543,6.529030,3.655465,-7.968527],[-3.954853,-6.441513,8.548040,-5.304289],[-5.168315,-1.359550,-4.236188,3.293148],[-0.198806,9.083335,0.585369,-3.558422],[2.875045,0.452433,9.162537,-5.849397],[4.231113,-1.340526,-7.010001,7.159028],[0.625366,-4.165186,5.871260,7.569847],[-1.874502,-6.813291,8.700341,6.096986],[9.305918,3.032591,-7.893458,-2.962414],[0.560597,-5.777547,2.181017,-6.914738],[-5.720805,-7.395616,-5.812439,4.576814],[0.920716,2.539883,-6.613846,3.975039],[2.548265,2.650635,-4.138844,-5.337084],[-7.998821,-7.089870,-3.099489,4.736612],[9.819456,6.497683,3.877213,-4.863216],[-4.092781,-9.296261,6.224120,-6.947515],[-1.789040,-4.835338,6.756899,-5.953119],[-7.368593,7.265882,-4.974241,8.357553],[4.626606,6.989586,2.671418,6.479959],[2.185013,1.100967,8.036935,-1.289713],[1.603087,-7.831419,7.191390,-8.531072],[8.563991,-5.076729,-9.141949,0.576556],[-3.947625,2.561937,8.903220,-3.522258],[-1.124476,5.276025,3.589037,8.982642],[-1.860111,-0.982576,9.486731,9.858304],[-4.783829,-3.142583,7.648716,-7.215529],[-1.652694,-8.932655,-4.158252,6.486862],[-8.976825,-4.257165,-4.877398,-2.988236],[-0.905412,-7.390814,8.437468,-4.252708],[3.007390,6.596349,9.459961,9.801912],[0.827294,1.260037,-8.423690,-7.858913],[5.338093,-4.824054,-9.437071,-0.841146],[9.530813,-4.712719,5.733099,5.342008],[3.173192,4.496172,-2.359183,6.879657],[-1.101242,-1.507092,3.441357,0.338782],[7.200801,-3.425948,-8.350371,-8.300400],[9.525051,3.633925,-4.451565,0.497916],[2.585776,-1.889331,0.165245,0.836183],[-2.452078,-1.424346,-7.321746,-3.437503],[-3.837139,6.814380,0.334368,-8.255388],[7.892727,1.618594,-2.344769,5.992896],[-2.038587,-0.567804,8.152581,5.936371],[7.150087,6.144830,-0.519586,6.638156],[-5.270940,1.313136,6.579409,-1.721698],[8.151480,-8.560738,6.495837,5.255858],[9.964607,8.999528,4.796793,-5.971125],[1.862097,-0.737327,9.098207,-4.078596],[1.477970,6.364592,2.739668,2.614907],[-2.832650,2.272485,0.980107,1.585750],[-5.857395,-4.042337,3.688523,-8.028767],[-7.158633,-2.373595,-4.141644,-3.158098],[8.682941,-5.783602,7.994216,4.597263],[0.447697,4.727367,-0.979696,1.431083],[-3.450212,-8.152942,-6.397061,-6.008893],[-7.652718,-3.623415,9.852884,-8.647206],[8.498727,1.429745,-3.630999,-7.167333],[8.664641,-3.677412,-3.689525,-9.987292],[5.570383,-4.250709,8.249323,2.433050],[-0.984526,6.717025,-4.730783,-0.818919],[-9.405209,-7.127945,-9.031040,0.875384],[4.389357,1.057405,1.069341,-3.719217],[3.367531,7.170283,4.500021,-5.539768],[-0.131887,6.135613,8.709521,-8.921430],[4.432674,-9.377000,7.146171,-5.718365],[0.391229,-4.070635,6.834750,-3.163012],[-4.522140,-8.646602,-0.603238,9.238962],[-4.964445,2.793242,-7.228086,2.886130],[-6.219771,7.847551,6.919383,-7.759336],[-4.990797,-6.633281,2.035202,-1.225421],[-8.244071,4.033356,8.638906,2.122120],[0.667103,4.593029,8.108868,-7.222202],[-5.045394,6.676524,9.293104,-7.084949],[8.292047,0.592168,6.226356,-6.925369],[-2.519570,-0.242492,-6.152350,8.133344],[-4.673322,9.899725,-1.197600,-6.913920],[0.515047,-9.865352,9.988161,-7.421181],[7.083769,-0.359714,3.729897,-6.727378],[-4.458464,6.977668,1.044926,0.812076],[2.010299,9.147873,-2.483491,-0.925110],[8.297878,-8.671780,-7.739204,9.345999],[-4.371006,-5.106277,-4.881634,-3.890519],[-1.117232,6.163190,-6.801517,9.170530],[4.065517,8.079187,-7.526449,-9.050722],[3.373483,8.055142,3.874449,1.955834],[-6.562744,-0.671610,0.858264,7.744372],[-3.758774,8.151094,8.749118,4.088867],[4.479516,-5.500599,-0.753851,3.788605],[5.196656,3.467719,-4.235853,8.265468],[7.397801,3.604625,-6.902764,-0.509249],[-4.114422,5.831238,-0.264936,-8.048480],[-5.053858,-3.115209,7.459540,-6.435555],[-5.396103,-5.882810,-4.116756,8.006020],[7.979398,-9.925780,4.545083,-2.021586],[-3.385644,-1.739981,-8.878004,-2.469781],[4.528129,-9.340103,8.199946,-8.742271],[-0.493981,-7.401116,-6.792344,-5.350116],[-7.104894,6.936405,5.703515,6.353176],[9.051026,2.089925,4.879988,-5.104470],[-1.713359,2.909329,0.054260,8.695843],[-1.155335,6.933433,0.081587,-8.787376],[-8.899230,1.261422,-9.032328,-1.276173],[-1.934964,7.309803,2.635766,2.760207],[-8.586585,9.222834,-9.062684,-7.768235],[-0.748427,9.409111,1.214684,-7.845012],[1.672635,-7.106785,-2.401071,3.632910],[-5.053272,-9.738563,3.456117,1.279945],[5.220869,2.140585,0.252845,-9.833760],[8.136681,3.620064,-7.058258,5.443789],[6.247142,0.542884,-0.185203,9.421384],[4.157451,-7.973588,1.415980,4.965660],[6.759548,-8.600107,-9.524464,-2.213570],[-0.312768,-8.130253,7.920204,-8.693282],[2.427875,6.652818,-2.281122,-3.629049],[-5.735192,-9.731076,-0.836459,-9.416316],[5.667799,-5.670431,-6.937512,7.587887],[-9.683877,7.887301,4.379670,6.991740],[4.340791,-5.064496,8.674036,2.284665],[-8.611539,0.776326,4.735041,-3.797327],[-9.034441,-8.981784,0.627833,7.645248],[-7.224791,-2.256971,-0.489687,-1.798903],[-2.253480,2.807824,-3.925420,2.838630],[6.529904,2.459453,3.206076,5.306337],[3.803009,-9.606175,6.334199,-7.389608],[-3.497861,-7.827894,-1.886651,-6.714256],[2.164551,-2.482355,-0.966655,-1.013440],[-0.108302,5.255796,2.020387,9.454472],[-1.289249,-3.034822,2.983349,8.599615],[4.161240,-4.252619,3.379376,-7.425872],[8.021899,-3.093967,-2.018569,1.321979],[-6.983172,-3.781581,8.419777,-6.562150],[5.847532,9.974921,-2.952342,-3.566448],[-7.556928,4.305884,7.545397,2.102346],[9.450141,8.571907,-2.421690,-0.915129],[3.183109,0.552696,2.921909,-0.708230],[-7.609964,7.711666,7.614578,-1.052442],[1.421460,4.018938,0.950246,3.882384],[-8.550839,-2.360009,6.371926,6.044173],[-9.071805,1.225665,3.534588,-8.720690],[7.620125,-1.976142,-5.855266,9.922830],[-4.372389,-2.924967,5.246822,-2.712695],[-4.767647,-0.471844,-8.491673,-9.856604],[-8.181691,-3.200381,-6.239443,0.137211],[-1.279989,-6.756074,-7.556648,-8.770932],[-0.480273,-8.709799,-7.483800,0.642791],[-0.040546,-8.200587,3.835985,3.457029],[-9.157854,1.924169,-7.749933,2.212312],[-5.163455,7.511400,2.542311,-0.930842],[9.831109,6.399032,9.279099,-1.917686],[-5.119623,-8.546936,-7.178854,-3.263305],[7.814689,8.646102,-0.542699,4.655605],[-0.385453,-5.077712,-6.293003,1.441142],[1.015093,-5.970772,6.320370,-4.067147],[2.541546,9.169140,-9.688178,6.294878],[-0.466765,-9.354363,0.146379,3.825535],[-4.319307,8.281653,-3.757533,-4.109991],[1.468433,1.159268,-0.571791,-0.974113],[-7.131788,5.301038,5.103166,4.885627],[3.163370,6.460128,5.571117,-3.047329],[-8.307030,-4.131612,-1.631900,-9.244126],[4.387293,-0.216442,-3.612940,-2.274122],[-6.085140,6.511751,-4.289750,2.950780],[-4.234646,-8.380988,-1.376260,-7.651051],[-1.390986,1.666636,3.187020,-5.982820],[0.589564,-7.021187,3.614254,9.249840],[-2.626980,-2.697467,3.881699,-0.657694],[-6.846120,3.005014,6.303975,8.772114],[-4.544877,-9.946431,-2.760159,5.617690],[4.902765,7.507958,-3.804472,8.345655],[-9.191583,4.841132,4.718829,4.082865],[-1.001705,-1.923289,-1.753574,5.694160],[1.589546,6.319726,-0.777845,1.794674],[-6.990882,-4.136477,2.370942,-7.572103],[7.213666,7.940128,3.831908,-7.108574],[9.327180,-7.674369,-6.395948,4.196235],[1.046822,-0.312019,4.438494,-1.344242],[-2.310311,-8.376840,-0.611172,1.711828],[-5.304030,-5.825007,-4.158488,6.615084],[-4.913099,8.788593,0.683185,-2.754352],[0.729489,-7.976105,-5.538852,4.741527],[4.377308,1.169389,-2.744668,-0.227423],[7.799703,-2.438762,1.038755,-1.852939],[8.951711,4.111064,-2.774094,-9.690171],[-7.982912,-4.232266,3.790686,2.022377],[1.794628,-4.276431,-1.183260,-9.852116],[0.371364,4.199139,-9.217804,-0.992884],[6.136258,-6.068662,3.139209,-2.228257],[1.043209,4.504063,-8.373423,8.705950],[6.417898,0.828938,-6.534622,2.380875],[-3.842290,3.388428,-7.191918,4.387465],[0.545887,0.507526,-7.471470,-5.706377],[-4.844907,-4.678780,-9.324058,-6.053656],[8.283690,5.809010,0.378950,1.197301],[9.611379,-3.664997,9.015132,-6.446643],[8.893681,2.372767,1.672813,1.571383],[9.676763,-5.274124,-1.969483,0.714409],[-7.962352,4.639912,-9.150541,0.932160],[1.642477,5.750968,6.535103,3.105353],[-0.999089,-4.033718,-3.199627,5.686543],[8.202491,-0.369275,3.455206,5.592142],[-3.094720,9.906091,-7.721670,4.724797],[3.326963,-0.054344,-5.475595,6.844717],[-0.722733,-6.255193,-4.734593,7.371759],[3.633796,2.514439,9.357729,-8.946678],[8.023377,-0.230998,-6.169105,-7.090510],[9.078336,1.492336,-0.359568,-4.538950],[-9.616731,-8.324594,-5.376501,0.321380],[5.829279,-9.528277,2.143570,-6.319317],[2.265062,-5.338627,-0.609985,8.314338],[1.093769,3.710727,8.915451,1.547953],[-1.506382,-9.128330,0.157760,-5.896343],[-6.518350,5.041640,2.377885,6.773151],[1.717264,3.410856,-0.313093,1.998470],[5.138037,5.510764,-0.932495,-5.353408],[-1.522313,1.436151,-9.493632,-6.829573],[2.929804,0.579892,-9.365228,6.513167],[-6.232677,2.208811,8.169675,8.929640],[-7.496711,4.036435,1.059104,2.393710],[2.807931,1.895484,1.951472,-8.356238],[2.758262,9.710764,-8.927315,2.201022],[2.058320,1.549454,3.714488,1.372700],[-6.748225,-8.607003,8.519245,6.480602],[3.946340,-2.958696,8.321982,0.490931],[-4.056812,-0.133138,3.250678,-7.261088],[-5.885520,1.343746,-5.424295,7.947079],[4.502679,-8.532474,-4.401184,7.050158],[-6.536652,-1.320729,9.615265,-2.850233],[-1.570061,-2.108276,7.406391,7.918444],[4.167592,8.556300,6.609527,-8.865693],[1.684453,4.961720,-5.683413,4.040539],[8.656582,-3.261558,1.521064,-2.918580],[1.041733,7.027362,5.966990,5.151049],[6.234859,-1.885445,6.942345,0.958071],[5.104445,-2.518241,-4.741074,-6.096609],[2.078930,-6.836805,-2.378023,9.832530],[7.305980,-7.953661,8.323420,9.499452],[-2.075183,8.437346,-1.828424,-4.711041],[-6.036938,-1.144829,-6.074790,-7.051669],[6.838155,-7.611876,3.214703,-0.079574],[-0.315604,-3.896550,-1.400485,-1.697193],[3.671453,-3.937669,1.105933,-6.420976],[-8.694681,-4.069238,5.794609,-0.448633],[3.174249,-3.825042,-4.328926,1.077425],[4.968324,-4.084223,-7.172147,2.668278],[8.501886,7.520397,-9.685447,-9.915575],[-6.148095,-6.637220,3.662152,8.312541],[9.465175,5.499270,-6.353675,0.029367],[-0.615060,1.200064,-8.413416,2.659180],[-5.487943,-7.969634,-6.661316,3.130465],[2.305096,-1.091023,9.626174,2.215202],[-0.014784,-0.583311,-7.884512,-8.201929],[-3.113526,9.045171,-8.062598,-9.235676],[5.417748,-6.566841,7.656045,6.422347],[8.089127,7.574932,5.319607,1.914666],[4.856831,-3.853129,5.622718,9.205099],[-5.893738,9.131774,8.543857,6.745646],[-7.642688,-1.520817,-6.872270,2.565636],[7.531099,-4.598412,0.153007,-3.686602],[8.210632,-5.326513,-2.402249,-6.468164],[-3.738358,2.601954,6.058241,4.427857],[-9.757647,9.757898,4.807541,-1.732435],[5.127296,5.458876,6.331777,-6.883510],[-6.574545,3.126053,-3.535447,8.977332],[5.179565,-6.162690,5.137799,4.633617],[4.085746,-1.873518,6.448111,9.282042],[5.310705,6.080798,8.700276,-2.514630],[9.216206,-6.024968,8.059676,-3.250232],[-5.257895,-5.257545,-2.377020,-8.729690],[-1.240973,-1.627954,1.781166,9.285183],[-2.720553,4.961844,-5.944846,2.027085],[-0.024362,1.118414,2.382528,-9.551142],[-4.718473,-0.423375,-9.982970,-1.617225],[3.078232,-5.327206,-4.140814,-9.885894],[1.542772,-8.856040,1.041199,4.347181],[0.939177,1.794914,-6.586172,1.981778],[-2.633235,-6.172343,-4.073712,-0.178729],[4.932258,-2.485897,-3.113788,9.529196],[2.126318,9.086989,9.081538,-1.990140],[1.981660,-8.803966,6.782530,-7.853539],[7.336070,6.162455,4.762539,6.720119],[-5.096706,-3.975009,-4.763346,-1.019567],[-0.782143,-3.507086,-5.364299,-0.126661],[7.375492,-2.371372,-7.534359,-1.214460],[5.172318,3.414014,2.976428,0.794695],[9.826652,-0.538279,7.944222,5.415381],[-3.092826,-3.876009,-9.674984,-1.097283],[5.559587,-1.072619,2.378192,3.307296],[-2.960125,0.262626,5.367142,-8.603671],[2.972829,0.394157,5.367945,-8.280030],[-7.176314,3.288332,5.889520,-5.833238],[-3.086190,6.021504,-3.885793,-2.489956],[5.425960,-5.560618,-0.948542,8.442197],[-6.857837,5.234132,6.159984,2.261190],[-2.001805,-2.323935,6.484248,-2.639749],[-4.873278,1.697861,-9.860354,6.608121],[-2.037798,-4.057145,-1.882332,-3.918947],[-4.258723,9.598705,8.908785,-2.075608],[5.821493,4.976573,1.121150,-2.961538],[4.788699,-7.893758,6.097515,-0.101149],[-9.258471,-0.109991,-8.288666,9.497950],[-2.570591,3.341159,7.137627,4.366722],[-7.026096,2.193970,-1.260903,6.200978],[-2.314200,4.834576,-0.377057,8.316012],[4.521041,3.393858,-1.413248,-6.444063],[8.942234,-3.743824,2.860441,7.064165],[-9.991464,-4.588816,-1.473813,9.329483],[7.175676,-4.561811,-2.863640,-8.858833],[-6.263075,4.790145,-6.410831,1.653763],[1.532387,2.167488,-4.984649,2.602098],[2.899682,2.928117,5.838949,-4.521518],[-3.413449,-3.341746,-8.000908,-8.840537],[0.911302,5.213916,3.793402,1.188799],[-8.684629,-7.139577,-5.448034,-7.820246],[2.486492,8.373322,-9.820485,5.030258],[4.758545,4.046910,5.036847,-1.987931],[4.025182,-0.112774,-4.853635,-3.795956],[-6.801131,4.485859,-2.187042,3.237763],[-8.919596,-9.669498,-6.712434,0.186824],[-0.913666,-8.703032,-3.363299,-9.080160],[-6.053206,-9.532294,-6.678425,-9.304120],[4.902703,0.890491,5.047547,7.231101],[-9.285436,-3.156182,-2.173242,-9.617646],[-7.795074,-6.263782,8.295622,-2.552776],[8.486569,-1.979043,2.574221,0.567602],[5.912728,-9.706707,3.291560,-7.269919],[-6.101514,-9.018600,-7.232434,1.098843],[1.162466,6.458708,-7.587272,2.268426],[-3.125759,0.138577,-9.890624,2.049141],[-8.011549,-2.723378,7.616340,0.791228],[7.856200,-7.590401,-5.774002,-6.339837],[7.460116,-0.030323,2.346807,-9.825435],[0.812659,-0.691450,-4.899150,2.398652],[1.421113,-0.379984,-6.677990,-0.543165],[9.923868,6.348526,-0.650989,-2.253370],[2.078378,0.256747,-3.345273,7.896042],[-0.363554,9.870709,9.134385,8.575884],[-5.800886,1.984412,7.975912,-4.196031],[7.308495,-1.902356,5.190723,6.155896],[3.031637,7.166981,-1.717997,8.485531],[-2.763149,7.529064,-0.591186,7.139708],[-4.395660,4.768587,-4.704716,2.301151],[-9.434089,-1.754969,-4.091156,-8.995343],[-3.571383,9.972821,-4.682234,9.610821],[2.726756,-3.570237,1.053173,-6.125920],[8.609233,8.976840,9.353968,2.067783],[-6.148495,5.061160,5.971041,-5.961389],[7.686145,7.395923,0.483050,3.551305],[5.500812,-5.871666,0.583361,4.053956],[-1.028299,-6.302896,1.210878,2.121947],[7.184006,-2.945594,8.100736,5.372095],[-4.369353,-5.914672,8.583951,-1.143340],[-8.168598,-5.743954,5.039072,-3.198522],[-1.384475,1.397888,-2.929928,-8.557250],[8.028614,-2.913153,1.378993,4.359496],[-7.889347,9.602433,4.758583,0.380330],[-7.846547,3.645948,5.672489,-6.576006],[4.382827,0.943792,-9.175868,0.464474],[-8.180901,-9.054521,3.485267,1.259027],[-1.884327,-6.704287,-0.892751,6.132906],[5.507264,-1.775916,-8.080993,-1.357592],[-0.414721,4.635818,7.341074,-7.128414],[-0.118144,-2.110215,-4.766798,-9.546211],[-7.401506,7.556920,-1.963416,-6.413783],[7.157760,-6.946598,8.121031,5.141580],[-9.528680,-9.275536,-8.917656,0.915154],[-5.040167,-8.579130,7.204246,3.915138],[8.475009,-4.976174,4.236233,5.093989],[9.840455,-7.102119,2.252041,-8.710821],[-7.022901,3.548414,1.834825,3.391372],[-5.687358,-4.867749,-0.396900,-9.781153],[-0.487736,4.240344,4.952135,9.295398],[-7.540389,4.337611,5.839669,8.346971],[-3.537924,-3.285751,0.422846,8.085987],[-4.314678,3.693405,4.885548,-6.739041],[-5.566628,3.092083,5.625299,-5.581819],[-9.944743,5.517896,9.193096,7.979781],[6.606243,0.147203,-6.616333,3.991414],[1.013707,0.043856,-1.181223,-7.241691],[-5.870288,-9.107054,-9.407001,9.876905],[-9.306319,9.499357,-4.062874,0.299076],[-2.360177,-5.318958,-8.526508,9.346294],[5.119442,-7.154546,3.564425,-3.634753],[1.176060,3.483252,-6.736340,-4.356276],[2.348594,-1.306058,0.956654,3.945322],[3.579140,-9.462565,4.875276,6.171747],[-1.795818,-7.610435,-4.723680,3.198255],[5.850426,-7.938294,-3.787818,-4.730908],[-9.616882,1.889084,4.915297,5.171026],[-6.565897,-3.071077,-9.572804,-9.869693],[6.181946,-3.520238,-4.018355,6.029839],[-0.626899,3.439197,8.700655,-1.395927],[-3.218398,0.903187,-4.546708,-0.151983],[-4.936424,2.107969,-1.865446,5.598834],[-1.725951,-0.600757,-2.249892,3.353636],[4.193693,5.878997,-9.688327,-9.533121],[0.672868,-7.068605,-2.734896,-9.155854],[9.136667,9.050677,-0.600160,-6.655283],[-5.833034,6.148431,-9.346208,4.770132],[0.589048,-7.663669,-6.802932,-9.862494],[-5.320334,-1.481710,-7.582313,8.361159],[-4.050563,0.339370,-2.082325,3.470640],[-4.497935,6.824660,2.865967,-6.759818],[1.148064,8.608729,0.329804,3.759904],[-4.793404,2.769212,-9.547830,5.327377],[7.676399,9.365493,-8.718217,9.271947],[6.173906,1.693247,0.584854,7.564554],[4.770198,7.790001,1.810527,-2.035580],[-2.562743,-5.347234,5.433692,2.049017],[-9.095894,-5.487341,4.025629,-9.004311],[-6.116162,-4.493699,2.321205,-3.332950],[-9.235897,-1.353181,-0.044428,5.050886],[-0.998669,3.228545,2.588282,-8.879133],[-0.166464,-8.308906,-7.832189,-1.971783],[6.331916,3.515273,7.314844,4.387965],[2.679453,5.946545,-4.022470,-8.595812],[-3.704202,-4.137839,-2.415214,2.097689],[9.616762,-6.479802,-8.199833,-3.965174],[6.371776,2.674873,8.019187,-7.294419],[-7.021586,-2.900852,9.409754,4.913497],[3.520307,7.119476,-3.637879,-2.524072],[0.409359,-1.369472,3.713302,5.205153],[-9.186355,4.801513,4.481058,-3.385265],[1.481717,-2.916551,0.182182,-1.302328],[-3.065968,-4.623378,2.537372,-8.278228],[7.562653,-0.215390,-4.647479,-1.717547],[-6.099885,-0.593166,0.165752,2.789111],[-1.705693,1.728557,1.720500,-0.961480],[-0.174600,7.181142,5.558980,-4.547889],[-7.963013,9.535582,-9.506456,9.633852],[-6.920195,-6.193146,-1.722127,-3.702586],[7.039847,-8.312947,-4.976331,-4.425898],[5.035993,-3.051178,-6.128874,8.887477],[4.202203,4.824077,-7.850225,8.570048],[-6.612489,5.589532,5.752059,1.255595],[4.769397,-2.007058,-1.306641,-2.802868],[-7.505316,-3.821217,7.821626,9.701539],[0.631048,-5.805154,1.612249,-9.208944],[1.821822,-3.110517,4.527750,-7.932898],[8.864496,-2.607239,1.097257,5.299590],[5.386257,-3.462325,1.130837,-4.755960],[-3.179567,1.008989,-9.682605,-6.019251],[7.038593,-1.801837,-4.971651,2.751849],[0.423702,-5.644246,2.092180,-4.034063],[5.263891,4.052158,-0.672821,2.685358],[4.916670,-2.391863,-1.289976,8.169759],[9.608973,7.849388,-6.309670,8.511279],[-4.962174,8.581093,1.463376,0.402641],[-4.020770,-3.352786,-5.375953,-1.027141],[-4.011386,1.876122,5.747710,-5.314284],[-3.992335,-7.826069,-4.337743,1.753179],[3.798245,-2.977542,-4.953428,-6.635773],[1.119258,-2.282703,-9.015506,4.012054],[5.950173,-8.807208,1.374235,-3.059733],[-0.525915,9.121360,-9.242598,2.755678],[5.085835,6.864209,3.888258,-9.669260],[-8.025573,-2.274660,7.479598,7.715011],[-8.699970,4.616821,-9.034061,-2.945817],[9.529572,1.640384,-1.053350,5.849333],[4.541593,0.315027,-5.942938,0.895557],[-0.191918,-1.494250,4.756374,2.991459],[8.255293,5.262951,-8.141289,-0.792708],[5.927442,9.068013,-4.604250,1.487206],[7.611612,2.095359,3.693317,-4.980531],[-1.170007,4.516563,-7.900732,-2.996224],[-6.783621,7.925775,3.877943,-9.610560],[-6.804767,-5.842603,-1.367089,-2.463293],[-1.139677,-2.701072,-8.742678,-5.261195],[5.262805,-6.395070,-9.078362,8.304044],[-4.815940,8.618472,-2.465957,0.294672],[0.738467,6.299338,2.347346,-5.295140],[8.927450,1.829714,0.091931,4.137861],[-5.013098,2.634774,-6.496209,5.527419],[4.245258,-4.129572,-3.825568,-1.221471],[9.084979,1.697951,1.412562,-8.711668],[-1.871273,-5.391875,2.106174,-7.450876],[9.196357,-7.489032,-4.513612,3.116800],[-6.565038,5.141285,3.109270,7.260852],[-8.895272,6.520792,-3.171424,-8.957267],[-8.077119,-4.636169,-8.879985,7.961952],[-0.432203,0.511498,6.293933,8.295698],[-5.377396,-1.200505,-3.364686,-9.468689],[-9.800987,4.114664,-6.752337,-0.426187],[-5.191343,-8.408234,5.335906,5.309196],[-4.200532,2.001674,5.205699,7.271247],[8.152033,5.832050,1.948450,-2.516126],[5.586168,-7.137002,-5.623466,-7.587719],[-2.635923,7.729236,-5.921357,7.686332],[-8.174432,-3.705796,7.822586,4.422834],[8.249610,2.139595,8.840239,6.028963],[0.222828,-3.938152,-8.794438,-1.425378],[3.020553,-5.531695,-8.332942,-3.028424],[-2.083616,-2.590974,4.471743,2.765924],[-7.853701,1.473002,-0.507891,1.851182],[1.400090,4.391270,-0.701925,-6.176083],[-5.640319,-1.797156,-3.145835,8.544785],[8.144739,3.301234,1.822445,-5.899048],[5.419740,2.888115,-1.914553,8.015765],[-8.208797,3.835847,-7.836429,9.545777],[-6.776303,-4.649523,-6.022041,-7.728936],[2.284540,-4.663700,-4.208006,1.505494],[8.800707,5.078189,7.538007,4.419774],[-6.867323,-1.991180,-8.731454,6.051917],[9.804358,3.909776,2.441432,-5.848007],[1.623095,8.150559,9.761116,2.343937],[-1.931145,-7.528646,1.530971,4.533767],[-6.759397,7.375783,2.031622,7.538327],[-6.679552,6.692552,-0.829669,-0.987665],[-2.442252,9.727545,-5.798595,-7.634698],[-9.965983,-4.806319,-4.479347,4.166247],[-5.487527,6.212102,6.787106,-8.222592],[-8.286691,7.270007,9.229485,-6.213043],[4.607309,1.388236,0.838890,-9.834963],[-6.662745,5.729524,5.103491,2.546453],[1.774409,7.793932,-9.197520,-6.837922],[4.588655,9.069776,-2.106016,3.804991],[-5.564847,1.986032,-9.416034,1.660622],[3.832532,-5.156507,5.918321,-0.893759],[-9.031727,4.356579,9.922143,6.900226],[1.109405,-2.300225,2.284686,2.611962],[-9.789118,5.975299,4.603536,-1.683783],[5.893986,7.347250,-0.784139,-6.580719],[2.991994,6.283375,3.573260,-8.952226],[-3.602813,-8.124580,-2.150230,4.296370],[3.596745,4.179753,5.113381,3.556194],[-1.674605,8.507776,-9.080672,-3.072170],[6.052381,-0.119064,-1.887982,4.829966],[7.725282,-0.356173,9.784960,4.166972],[-8.514724,9.615894,-5.093757,7.641105],[1.386162,5.372010,-1.903599,-6.585552],[-1.744025,-4.755455,0.029202,0.507304],[-0.566605,-5.261525,2.900463,-4.688451],[-6.069480,8.449606,-2.208119,-2.305511],[8.504288,6.880539,1.351498,1.341659],[-8.615108,-4.777373,8.687502,4.573874],[-4.845747,6.781943,7.642696,4.423375],[-4.766347,-1.434571,8.555886,-1.630156],[-5.864654,-2.945625,7.737515,2.153805],[-0.056969,6.900831,0.755287,4.300355],[-5.945775,3.325826,-9.897590,-9.254916],[0.444932,6.402076,7.964953,5.745816],[7.220978,0.329004,4.953508,-2.065459],[-8.613948,6.650945,-9.538934,5.105253],[-3.483119,-0.898229,-6.794308,6.899172],[2.274127,-8.408161,-6.391242,8.228737],[-9.740588,0.574126,2.459830,7.714751],[0.981242,-9.820158,6.857007,7.631875],[-5.287723,-3.921175,-3.483315,1.291014],[-9.106590,-8.896351,2.876274,-3.574524],[-8.997112,-9.645878,5.304246,1.461300],[-1.026976,1.765943,-3.183839,5.415706],[-4.665089,0.551176,3.160108,9.296802],[-6.670301,0.593286,7.455183,7.953698],[9.559200,4.923212,8.282253,4.695632],[-7.499000,2.416659,7.566553,-2.117674],[-2.030809,-2.389301,-4.660492,2.802212],[6.305450,-2.018254,-5.569232,-9.308605],[2.297950,6.093993,2.400350,7.051508],[2.279810,-5.574222,5.410001,-4.715258],[-0.607105,-4.962203,-1.974940,3.962317],[-5.455633,-8.878729,-4.359795,-9.812959],[7.900936,-6.055375,-6.699517,-7.218411],[3.479086,6.898848,4.292942,-7.072344],[-4.454554,-9.236970,6.400319,9.136927],[-9.000102,-0.735726,-0.380300,-5.992902],[-4.555587,-8.269898,-1.689609,-4.792501],[5.540094,6.856813,-4.221372,-3.138342],[-2.420255,9.535310,7.552022,3.028746],[9.782624,-9.003395,-2.118437,3.263504],[5.067431,2.507067,-5.052834,5.247214],[2.592046,9.635708,0.645331,6.400006],[-8.431435,2.636105,0.275020,2.138577],[-6.468678,-3.602997,7.715308,-0.786662],[-0.526267,-6.745990,4.455304,-4.113288],[-6.806412,-3.254509,-5.299747,8.305862],[2.285302,-9.737405,8.200549,8.650703],[8.122788,-5.985750,5.753456,6.343005],[7.901830,-2.843008,-3.458586,1.854154],[-8.363024,-0.320445,3.561724,-8.889533],[-7.679371,8.998369,-4.752006,1.190843],[8.561518,-0.875215,-0.629253,-4.842221],[-3.849635,7.077459,0.432311,4.358166],[-4.062171,-2.465490,-1.421566,-2.381568],[4.418500,-2.511520,-6.346826,7.508440],[-2.453359,-8.551966,-0.658143,-1.997118],[-6.384013,9.102316,-5.903543,7.395005],[-5.624633,9.555310,-1.372839,3.064082],[6.295858,-9.956558,9.017279,3.794557],[5.238498,7.205643,-8.122929,-6.357024],[1.329052,8.384738,6.177378,-4.079729],[-4.363072,-1.780289,-2.629436,5.778214],[6.353463,0.409822,5.076969,-4.963252],[0.533541,-5.402728,2.566095,-6.137362],[-3.745645,3.822895,-2.934180,5.559025],[4.995852,-8.632851,6.937475,9.296492],[9.090403,-9.876972,-3.152978,7.877362],[-3.788152,6.373576,9.625816,-8.759287],[6.655955,2.811411,3.168439,8.800953],[-5.869586,-6.769183,6.200034,-2.246741],[4.021373,3.708018,-3.797067,3.572875],[0.187383,-1.636308,-6.071267,-1.525339],[-1.821914,6.803157,2.561488,-3.554346],[-3.917261,2.201618,9.134400,-6.841616],[-0.908367,-3.458369,4.383494,1.645510],[-6.079878,7.047436,-2.437087,2.736062],[4.069851,7.764008,7.245630,-3.583391],[-9.742441,6.726108,0.960715,-6.518747],[3.265579,-9.557811,-9.993264,5.196644],[-6.290298,8.341481,2.413509,2.700174],[-7.330899,1.341536,5.503182,3.990020],[7.939805,0.900110,7.964261,8.262769],[-8.985393,3.539910,8.281172,9.437401],[7.646018,2.756849,0.091729,8.126990],[5.432885,6.191150,-2.046408,-9.842098],[0.928832,-1.710078,-0.056228,-3.151274],[-7.547017,0.508495,-1.761087,2.673456],[-2.664104,-8.840570,0.098839,8.656758],[-5.712232,2.296474,0.156423,7.187906],[5.565267,1.396559,2.154206,-2.574867],[7.374237,4.819930,1.850597,3.026020]], dtype = "float32")#candidate|3710|(840, 4)|const|float32
bop_3711 = relay.bitwise_or(uop_3681.astype('uint64'), relay.reshape(const_3710.astype('uint64'), relay.shape_of(uop_3681))) # shape=(840, 4)
bop_3714 = relay.bitwise_or(uop_3683.astype('uint64'), relay.reshape(const_3710.astype('uint64'), relay.shape_of(uop_3683))) # shape=(840, 4)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
call_3725 = relay.TupleGetItem(func_434_call(relay.reshape(bop_3699.astype('uint16'), [14, 240])), 0)
call_3726 = relay.TupleGetItem(func_437_call(relay.reshape(bop_3699.astype('uint16'), [14, 240])), 0)
output = relay.Tuple([call_3685,bop_3699,bop_3711,call_3725,])
output2 = relay.Tuple([call_3686,bop_3702,bop_3714,call_3726,])
func_3728 = relay.Function([], output)
mod['func_3728'] = func_3728
mod = relay.transform.InferType()(mod)
output = func_3728()
func_3729 = relay.Function([], output)
mutated_mod['func_3729'] = func_3729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3728_call = mod.get_global_var('func_3728')
func_3729_call = mutated_mod.get_global_var('func_3729')
call_3789 = relay.TupleGetItem(func_3728_call(), 1)
call_3790 = relay.TupleGetItem(func_3729_call(), 1)
var_3795 = relay.var("var_3795", dtype = "bool", shape = (840, 4))#candidate|3795|(840, 4)|var|bool
bop_3796 = relay.bitwise_xor(call_3789.astype('uint16'), relay.reshape(var_3795.astype('uint16'), relay.shape_of(call_3789))) # shape=(840, 4)
bop_3799 = relay.bitwise_xor(call_3790.astype('uint16'), relay.reshape(var_3795.astype('uint16'), relay.shape_of(call_3790))) # shape=(840, 4)
func_3605_call = mod.get_global_var('func_3605')
func_3607_call = mutated_mod.get_global_var('func_3607')
call_3804 = func_3605_call()
call_3805 = func_3605_call()
bop_3807 = relay.maximum(var_3795.astype('uint64'), relay.reshape(call_3789.astype('uint64'), relay.shape_of(var_3795))) # shape=(840, 4)
bop_3810 = relay.maximum(var_3795.astype('uint64'), relay.reshape(call_3790.astype('uint64'), relay.shape_of(var_3795))) # shape=(840, 4)
output = relay.Tuple([bop_3796,call_3804,bop_3807,])
output2 = relay.Tuple([bop_3799,call_3805,bop_3810,])
func_3816 = relay.Function([var_3795,], output)
mod['func_3816'] = func_3816
mod = relay.transform.InferType()(mod)
var_3817 = relay.var("var_3817", dtype = "bool", shape = (840, 4))#candidate|3817|(840, 4)|var|bool
output = func_3816(var_3817)
func_3818 = relay.Function([var_3817], output)
mutated_mod['func_3818'] = func_3818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3591_call = mod.get_global_var('func_3591')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_3820 = func_3591_call()
call_3821 = func_3591_call()
func_3347_call = mod.get_global_var('func_3347')
func_3348_call = mutated_mod.get_global_var('func_3348')
call_3827 = func_3347_call()
call_3828 = func_3347_call()
bop_3834 = relay.bitwise_and(call_3827.astype('int32'), relay.reshape(call_3820.astype('int32'), relay.shape_of(call_3827))) # shape=(420, 8)
bop_3837 = relay.bitwise_and(call_3828.astype('int32'), relay.reshape(call_3821.astype('int32'), relay.shape_of(call_3828))) # shape=(420, 8)
output = bop_3834
output2 = bop_3837
func_3840 = relay.Function([], output)
mod['func_3840'] = func_3840
mod = relay.transform.InferType()(mod)
mutated_mod['func_3840'] = func_3840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3840_call = mutated_mod.get_global_var('func_3840')
call_3841 = func_3840_call()
output = call_3841
func_3842 = relay.Function([], output)
mutated_mod['func_3842'] = func_3842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3843 = relay.var("var_3843", dtype = "float32", shape = (15, 10, 12))#candidate|3843|(15, 10, 12)|var|float32
uop_3844 = relay.sqrt(var_3843.astype('float32')) # shape=(15, 10, 12)
func_446_call = mod.get_global_var('func_446')
func_447_call = mutated_mod.get_global_var('func_447')
call_3849 = relay.TupleGetItem(func_446_call(), 0)
call_3850 = relay.TupleGetItem(func_447_call(), 0)
func_626_call = mod.get_global_var('func_626')
func_629_call = mutated_mod.get_global_var('func_629')
var_3854 = relay.var("var_3854", dtype = "uint16", shape = (3360,))#candidate|3854|(3360,)|var|uint16
call_3853 = relay.TupleGetItem(func_626_call(relay.reshape(var_3854.astype('uint16'), [3360,]), relay.reshape(var_3854.astype('float32'), [14, 16, 15]), ), 7)
call_3855 = relay.TupleGetItem(func_629_call(relay.reshape(var_3854.astype('uint16'), [3360,]), relay.reshape(var_3854.astype('float32'), [14, 16, 15]), ), 7)
uop_3856 = relay.asinh(uop_3844.astype('float32')) # shape=(15, 10, 12)
func_3591_call = mod.get_global_var('func_3591')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_3862 = func_3591_call()
call_3863 = func_3591_call()
func_104_call = mod.get_global_var('func_104')
func_105_call = mutated_mod.get_global_var('func_105')
call_3864 = relay.TupleGetItem(func_104_call(), 0)
call_3865 = relay.TupleGetItem(func_105_call(), 0)
output = relay.Tuple([call_3849,call_3853,var_3854,uop_3856,call_3862,call_3864,])
output2 = relay.Tuple([call_3850,call_3855,var_3854,uop_3856,call_3863,call_3865,])
func_3867 = relay.Function([var_3843,var_3854,], output)
mod['func_3867'] = func_3867
mod = relay.transform.InferType()(mod)
var_3868 = relay.var("var_3868", dtype = "float32", shape = (15, 10, 12))#candidate|3868|(15, 10, 12)|var|float32
var_3869 = relay.var("var_3869", dtype = "uint16", shape = (3360,))#candidate|3869|(3360,)|var|uint16
output = func_3867(var_3868,var_3869,)
func_3870 = relay.Function([var_3868,var_3869,], output)
mutated_mod['func_3870'] = func_3870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2072_call = mod.get_global_var('func_2072')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_3874 = relay.TupleGetItem(func_2072_call(), 1)
call_3875 = relay.TupleGetItem(func_2074_call(), 1)
output = relay.Tuple([call_3874,])
output2 = relay.Tuple([call_3875,])
func_3884 = relay.Function([], output)
mod['func_3884'] = func_3884
mod = relay.transform.InferType()(mod)
mutated_mod['func_3884'] = func_3884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mutated_mod.get_global_var('func_3884')
call_3885 = func_3884_call()
output = call_3885
func_3886 = relay.Function([], output)
mutated_mod['func_3886'] = func_3886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1998_call = mod.get_global_var('func_1998')
func_1999_call = mutated_mod.get_global_var('func_1999')
call_3887 = relay.TupleGetItem(func_1998_call(), 1)
call_3888 = relay.TupleGetItem(func_1999_call(), 1)
func_1150_call = mod.get_global_var('func_1150')
func_1153_call = mutated_mod.get_global_var('func_1153')
const_3895 = relay.const([-8,5,9,5,1,-2,7,-7,-4,9,3,-9,8,-1,8,8,-8,-5,10,-6,5,6,-3,-6,1,2,-7,-5,1,-1,-1,-4,-9,-7,-9,9,-2,-8,9,10,1,4,-5,2,-6,-2,9,7,4,-8,8,7,-4,4,10,5,-8,-9,9,-8,2,5,9,-9,7,-6,-7,-6,-9,-6,6,2,10,8,1,-6,7,4,5,-9,-1,9,9,8,-6,8,-4,8,2,-5,2,-5,5,7,5,2,2,-3,-9,-2,5,-8,10,5,2,6,3,4,-3,8,8,3,3,2,6,8,-4,2,-4,8,9,9,7,10,6,-7,9,-4,-5,6,-2,7,-3,-2,8,-3,5,-8,5,2,7,-6,1,-9,-8,-2,-1,8,7,-9,9,-3,3,-7,-1,-2,10,5,1,2,10,2,2,-3,8,-6,-5,-1,2,1,-7,-4,-4,-10,4,4,5,-3,-6,6,2,2,10,-8,-1,6,1,-5,-8,9,7,5,-9,-7,-7,-10,-4,6,6,-6,2,-3,3,-9,-4,-2,2,-1,8,-6,2,5,8,9,7,9,9,-6,1,-3,4,6,-5,-8,4,1,10,1,9,-10,-7,-10,2,-1,1,-9,-1,2,-1,-2,-4,2,-9,4,5,6,2,10,-10,-8,-5,8,2,-6,2,-10,9,4,5,7,9,-3,7,-8,4,-10,3,-7,-1,9,-10,-2,1,8,2,-9,7,6,3,3,-10,-8,-2,-9,9,8,9,10,-6,7,6,-10,7,-8,-10,10,5,-4,-5,2,2,-3,10,10,-6,5,-2,4,3,-10,5,4,9,9,-10,8,-10,3,-8,7,10,3,-7,3,-9,4,4,3,5,-7,-2,-8,-8,2,6,10,-1,9,-10,-9,-7,2,-10,-7,9,-3,1,-3,4,4,5,5,-7,-6,-7,5,-8,5,3,5,6,-3,1,5,-1,7,-5,4,7,8,-4,7,-9,10,-6,4,-4,10,-2,3,6,-3,-2,-2,8,-2,2,-4,4,2,2,-4,4,-4,-9,-2,-6,-5,-2,5,6,2,-9,-8,2,-2,8,1,-10,-8,1,-1,7,-5,-4,8,-10,-7,-9,-1,-4,5,1,-4,2,-9,4,-2,-7,-1,-9,-10,-1,7,1,-1,3,9,-6,6,-4,1,-4,-10,-1,-9,-10,-9,-5,1,6,-10,-1,-4,1,5,4,5,10,-6,-6,1,-3,7,9,-3,3,8,4,3,4,1,5,-4,3,5,-7,5,1,6,-1,6,4,-10,-6,2,-10,-7,-2,9,1,5,2,-7,-2,-4,-4,7,-4,4,9,-9,-2,-1,7,10,-5,5,-4,2,-7,-9,7,-9,-4,-1,1,-1,6,7,-3,1,-9,5,1,1,4,-1,5,-1,4,-1,10,8,-3,1,-10,-4,-1,6,8,3,5,-2,5,1,-5,-6,6,3,9,-7,-8,-1,10,2,3,2,1,-2,9,-8,8,9,8,-5,-8,7,3,-5,-3,3,-4,6,10,4,1,-4,-5,-5,7,-9,4,10,-4,-2,-4,5,-1,5,-8,3,-10,10,-9,8,7,-2,-3,-8,-7,-4,-7,-9,9,-2,-3,-10,-1,8,-7,8,6,-5,-2,6,5,-10,-8,-3,-3,7,1,10,-10,-1,-7,-3,9,-1,-2,10,-8,2,-1,6,1,1,3,-3,2,-9,5,1,9,6,-3,-9,-9,9,-7,6,-10,-1,10,3,-9,10,-4,9,5,5,4,-10,-4,-2,4,10,-7,-7,6,-1,-4,-9,4,-2,-5,-8,10,9,7,-4,3,6,-6,9,3,-6,-2,5,-5,6,3,-7,2,-6,1,-9,-7,-4,-8,-2,-4,-7,-3,2,-3,-8,-10,1,4,10,-9,-10,2,9,1,-10,-2,-1,3,-5,-2,5,1,-4,3,-2,3,-1,8,-6,3,-3,-6,2,-8,8,-1,1,-8,6,-1,6,-10,10,8,8,3,-6,6,8,4,-3,8,-6,-9,8,1,-3,-2,1,-6,-1,10,7,7,1,3,6,-6,-10,5,6,-3,-6,-9,-4,8,5,5,6,-9,-3,9,-4,2,-3,-3,2,7,10,9,-2,-9,4,10,6,-5,2,8,10,-3,8,9,1,-2,-1,-4,7,-3,-9,-9,4,6,7,-3,8,9,1,8,3,2,-2,-10,-2,-7,5,10,9,7,-3,-4,-6,7,-2,-1,8,10,10,6,-4,4,1,9,1,-8,6,-3,7,-4,-8,4,8,5,-6,9,6,-9,9,-8,6,3,10,-8,10,5,-7,-4,-5,-1,2,2,5,-6,3,-5,2,3,-3,-10,-3,1,-6,-4,-5,-3,-7,6,8,8,-6,2,-8,1,-8,-6,-5,-2,3,-1,3,7,1,-3,5,-2,-4,-10,-1,-8,1,-1,-3,7,-3,6,2,-7,7,2,3,5,-10,2,8,-2,3,7,-10,-2,1,-8,-1,6,5,2,-3,5,-3,-7,-6,2,-6,-5,-3,9,5,7,-2,-6,2,-5,4,-10,-7,-10,8,2,2,10,6,-9,7,-9,-10,6,-2,9,-8,-2,8,10,7,9,1,5,1,2,-2,6,7,-6,-2,-2,-3,-7,-8,6,1,7,9,1,7,-7,-6,1,-7,-10,-1,3,-1,-3,-7,6,-6,-2,-4,4,-6,-10,-6,-6,7,5,-2,-10,-9,2,5,6,1,-6,-10,-6,-3,-1,-7,-5,-4,-4,7,9,-8,3,-9,7,-4,-4,-3,-1,7,7,-8,10,-3,10,10,-5,8,-4,-7,-6,-3,-5,1,5,7,-3,4,-9,-10,6,-8,-10,1,5,2,8,2,-2,-1,-2,-10,-7,2,1,7,-2,8,-1,-6,8,-10,3,-2,-6,3,5,-6,-8,-8,-10,6,-10,-4,5,1,-7,-2,2,7,-8,9,6,6,4,2,-1,-8,5,5,-3,5,-5,2,10,-9,-4,4,6,3,-3,3,-3,6,4,-8,-8,-9,-8,2,2,8,2,5,1,-5,3,10,-3,-4,8,4,-4,8,-3,2,4,1,-4,-1,4,-1,7,5,-8,7,-10,1,-1,6,1,-1,-1,-10,-1,-10,-10,4,-2,5,7,-7,2,-10,1,9,5,-9,-2,-1,-2,10,4,9,-4,-10,-8,-7,-7,3,5,9,2,6,7,-7,-10,2,2,4,6,6,-10,-4,1,4,9,-6,1,7,1,10,-2,7,-2,1,-4,-3,9,1,5,6,1,7,3,-2,7,-8,-4,2,-6,5,-9,6,6,-9,-3,4,-4,5,-2,-4,1,-7,-6,3,3,4,8,1,-7,2,-3,5,-7,9,-9,8,4,7,6,2,7,1,-7,-7,1,6,8,-5,4,-4,-4,5,8,8,1,3,-7,3,-7,10,-2,3,-8,4,-2,-6,-1,-4,4,-4,3,5,2,-6,8,8,-2,1,1,3,6,-10,2,-9,-8,-3,10,3,-4,2,6,-6,-1,10,4,7,-3,-8,-3,-3,-2,3,2,6,6,-10,8,-1,-2,-2,4,-8,-6,-4,-5,-1,-3,9,-2,-3,-2,1,10,-10,-4,-1,-2,5,-7,-1,8,-9,8,-6,10,-1,6,-2,-5,-9,5,-7,-10,8,-3,-10,-1,-10,5,-1,9,9,5,10,-4,-9,2,7,-10,7,-4,-2,6,-3,-10,-5,-8,4,6,3,6,8,-10,8,-9,-1,4,7,-7,-10,-7,-6,9,-6,6,6,3,-10,10,5,4,2,1,-7,-2,-5,-4,-1,3,-10,1,10,10,9,9,9,9,-3,-3,-7,9,-1,3,6,3,4,3,-8,-8,-3,8,-10,5,7,6,-2,-6,-10,5,4,3,2,5,-9,4,8,5,-10,5,-10,-3,-8,3,7,-3,8,10,9,9,-8,1,-8,6,-9,-7,-4,9,-7,-9,2,7,9,1,5,-8,-4,9,-3,10,-7,-1,7,-2,-2,-1,4,-8,9,1,-9,7,5,-5,-2,-2,-2,-8,3,-3,1,-3,4,-8,-1,7,7,3,-9,-2,-5,-7,-9,8,-7,9,7,-4,3,5,2,-4,-5,1,-7,-4,1,-1,-8,-4,-10,-6,-5,9,4,-4,6,-5,4,5,-3,4,-2,-4,-2,9,1,10,-6,6,4,8,7,-1,3,2,6,-10,1,-1,4,6,5,-3,-6,3,-8,-10,-8,6,8,9,-6,-6,-5,-1,-9,4,4,5,6,-9,-2,-1,-1,-2,-9,-7,-2,-1,10,-5,10,2,-7,-5,6,-9,-5,9,-1,9,3,-2,-8,1,-6,8,-4,-1,7,3,-4,-4,-5,6,-7,4,10,-5,3,-6,-10,7,5,6,6,9,-4,-10,9,2,3,-6,-4,-1,4,-5,4,-10,-10,4,8,9,-8,8,6,-3,-8,2,-7,8,-2,8,7,-6,-8,4,-6,7,-1,-1,-9,-6,1,-8,2,-4,10,-10,-1,3,-9,-5,-1,10,1,9,-6,-4,4,9,-9,8,-4,8,9,5,10,6,6,3,7,-5,6,2,-3,-6,2,6,6,-1,5,4,10,5,6,-3,-2,6,10,-8,8,9,-9,6,-9,10,-7,-7,4,4,4,3,-8,3,-4,2,6,4,6,-1,-8,-9,5,1,10,1,3,-9,10,10,3,-10,3,4,-3,-6,-6,-6,-1,-2,4,-6,-7,9,-4,-5,-1,8,6,-5,7,-10,4,-5,6,-7,-1,9,-7,7,-7,10,7,4,-2,-4,10,-3,1,1,-5,10,-3,-6,-7,-4,7,-4,4,10,7,-4,-8,-1,-4,8,3,5,-7,6,4,-2,-6,5,-6,-5,-7,-10,-7,-5,7,8,3,6,4,6,4,9,6,-1,7,5,-4,-10,-8,-1,2,5,-5,-5,-6,9,1,-1,1,1,-7,-3,-3,-3,-2,8,-6,-7,-5,-1,5,3,9,-5,8,-8,2,8,-8,8,7,-4,-8,-5,-5,-6,-8,8,-6,8,1,-1,-9,10,-9,-9,-2,-9,-4,-3,-3,-1,9,8,6,-9,4,-2,8,10,10,-6,-2,3,1,7,7,5,-1,1,-1,-4,10,-7,8,8,9,-10,-8,9,1,5,5,-3,-7,4,5,-2,-4,3,-8,-7,4,-10,-10,-4,-4,-8,1,7,-8,-5,-7,-7,-5,2,-1,2,8,-10,10,1,2,-5,3,-10,-3,5,1,-10,2,4,2,-1,-8,9,4,6,-1,1,-2,-6,-6,-4,3,-5,-7,10,-5,-10,-9,-2,10,9,8,-7,10,7,6,-5,9,-6,7,6,5,6,6,7,6,7,-7,-8,2,5,1,7,-7,6,8,-7,-9,-7,3,-1,1,4,-4,6,-2,-4,-8,2,-5,-3,-2,6,-5,6,-8,-6,-5,-8,7,-5,-5,-3,-9,2,5,6,6,-1,-2,1,-2,-10,9,5,4,-6,-6,-3,4,-10,-9,-8,-6,-9,4,10,-7,4,-8,4,9,-10,9,-2,9,1,8,-6,-8,5,-3,9,-5,5,-4,-5,9,9,-1,10,-5,-7,-10,-7,7,10,7,9,-4,5,-5,10,8,-3,-4,-6,-4,4,-7,2,-3,2,-2,1,-7,-4,7,-8,5,3,-4,8,3,2,3,1,-4,7,6,-2,4,-7,7,-7,9,-2,8,-1,-2,-10,4,-2,-6,4,6,-7,1,-5,-1,3,-2,-3,4,3,6,10,7,-8,-10,-5,8,9,3,-8,-6,-6,-5,-3,2,7,-1,8,1,-9,8,-9,3,8,2,2,-6,-8,-7,1,7,9,-7,6,-5,-8,6,-3,-5,-8,-6,7,-9,4,8,-9,-5,2,7,7,2,7,3,10,-9,-5,9,9,-6,5,-10,8,-3,9,-10,-2,-4,-2,-6,-2,-9,10,-6,-5,3,6,-4,-1,7,-7,-6,9,7,-6,-6,-8,5,2,-8,-6,8,-4,-8,-1,7,-2,-8,-3,-6,8,7,-6,3,-6,6,-3,5,9,4,-8,8,4,-3,-1,-7,-9,-2,-1,-3,-7,8,-3,7,6,-2,4,4,-7,6,6,-6,2,-9,4,-9,-3,3,9,10,3,10,3,5,1,-8,9,-3,10,3,6,-7,8,-4,9,-4,5,10,-8,-8,8,-7,7,-9,1,-3,3,-5,9,10,5,-10,10,8,7,-6,-1,-4,-2,-7,5,10,-9,1,-6,8,6,2,10,-3,-8,-3,-3,-7,-8,-10,4,10,-6,-3,-3,2,1,-7,-5,-7,9,-2,-7,-9,-3,7,-8,-1,2,-7,-5,6,2,-6,-4,-8,4,-7,-10,5,5,1,3,-10,-9,9,5,-9,-1,-3,-9,7,-2,-4,1,6,-3,3,-10,-8,9,3,5,10,9,8,-6,-3,9,1,-7,8,-3,-6,4,-1,1,9,-8,-9,-4,-8,4,-9,1,5,-6,-9,-5,-1,7,4,-8,4,-1,4,4,6,-5,2,-6,3,-1,-8,-7,5,-2,4,1,-5,-2,8,5,5,10,4,-4,5,-1,-2,-3,-2,8,-5,3,1,-3,3,-4,5,-6,1,10,-7,-10,-7,8,10,-5,-4,4,-4,-6,-4,5,-8,10,3,5,1,1,-2,9,-4,4,-3,-5,7,3,-4,1,-1,9,-1,4,-4,9,-3,-6,1,8,2,10,-5,-9,1,-8,10,-6,4,10,6,-3,-6,-9,1,-2,9,2,-6,10,10,-10,5,-1,10,6,1,-7,8,-7,-1,4,2,3,-9,-5,-3,1,-5,-9,-6,-10,-4,-7,3,5,-4,6,-7,3,-4,-4,5,6,-10,4,-2,4,-1,10,6,8,6,-7,2,8,-2,4,-10,9,7,-9,-10,-7,-5,-7,-4,-2,-10,3,2,-10,6,2,-6,9,6,6,-10,-9,2,7,-2,8,9,-3,-7,-5,-9,-10,-8,10,-6,10,-9,-2,-6,9,-7,9,2,-8,7,9,-8,10,-7,-2,9,8,4,1,6,-7,8,-2,-7,7,-2,9,5,-8,2,-5,5,-8,-3,6,-6,-4,-8,-5,7,-9,8,10,9,-8,-9,9,8,10,6,-1,-10,9,3,3,3,8,-1,-5,-6,1,-7,1,8,7,9,6,-2,7,8,5,3,-3,2,7,2,-5,-6,6,-10,-10,8,-8,3,-8,-9,-2,-6,9,2,8,-1,5,-9,-5,-4,8,3,4,5,-6,-5,-7,1,1,-9,9,3,-9,-7,-3,-9,2,-9,7,8,-8,-10,-4,-8,-4,7,9,9,2,2,6,-8,-3,-7,-3,-2,6,6,2,-8,-3,2,-4,-1,9,-4,7,5,9,2,5,-2,7,4,2,-6,6,8,-8,-6,4,-2,-2,-3,-1,2,9,8,2,3,-5,-10,8,-2,-6,-3,-10,3,6,-2,9,10,8,3,-1,3,-7,8,8,4,-10,-8,4,2,-5,6,8,3,-5,5,5,3,-10,9,-2,-4,2,3,-3,-7,-9,4,8,-5,-4,-10,-8,-10,5,-6,2,1,4,-9,9,5,8,5,-5,-8,1,-7,-10,-7,6,-6,-7,-2,1,8,-9,5,-10,-1,1,5,7,10,7,-4,5,3,7,3,-1,7,1,7,-2,-8,10,-6,-5,6,-6,-7,2,-10,-7,6,-3,-8,-5,-8,5,-2,1,-2,4,8,-8,-10,-7,9,5,-2,8,-1,-4,10,6,4,9,2,6,3,9,6,4,-1,-3,-5,10,-2,6,-4,5,10,6,5,-3,7,2,9,-9,4,1,2,7,8,7,8,1,-4,-9,8,7,-6,-9,4,-5,-9,-10,-10,5,2,9,4,7,7,-6,10,2,-4,-10,8,-9,-2,8,-3,9,4,5,-9,5,10,3,-9,-3,6,1,1,-1,-8,4,-1,-9,2,-5,8,-9,5,6,6,7,5,6,-10,10,7,1,8,4,-4,2,-3,10,-4,-4,-8,-4,2,10,8,-2,-5,-2,-1,-4,7,8,-9,-10,7,-3,6,9,-7,10,10,-8,-4,-7,-7,3,6,-8,10,-6,-1,-1,6,6,10,9,-9,6,-7,10,1,-2,5,-2,7,1,8,-8,3,-10,-10,-4,5,-4,-2,-10,10,-1,-1,9,2,-7,-1,7,-9,-8,5,7,3,-4,-6,1,8,8,-5,-7,-8,-7,3,4,8,-8,7,5,-7,-6,-5,8,8,-3,4,2,-8,10,1,-1,7,6,-7,3,-9,-6,7,-10,-9,-10,2,-4,10,-10,-1,2,2,-1,8,-2,6,-5,-1,9,-5,2,2,-8,3,3,-2,-3,4,3,1,-1,3,-1,-9,4,-9,1,-6,4,-8,-5,-2,5,2,8,-5,-10,4,-3,-2,-7,5,4,9,-1,5,-9,4,-2,4,-10,10,-7,1,-7,7,6,4,-3,6,-1,-2,7,-6,2,1,-9,6,-7,-4,-10,10,2,5,-10,1,-1,4,9,-7,10,-5,-10,2,9,-4,8,-6,10,8,-2,1,-2,-9,7,-1,7,5,-8,7,-5,-6,-4,7,-4,6,-6,7,-4,-6,-6,7,5,-1,8,-10,-8,10,-1,-8,4,10,2,5,-8,6,-9,7,4,-9,-5,-7,-9,7,-6,6,-10,7,6,10,6,-7,-1,-1,2,9,-2,2,-5,-3,5,-10,-10,9,-10,9,4,-1,10,-10,-5,-10,5,-8,3,1,5,-3,10,-10,-10,8,-6,-1,-2,-9,-9,-4,2,-9,5,5,3,6,9,-4,6,-2,-1,-9,3,-10,8,1,7,-9,9,-4,-1,6,6,-8,1,5,3,5,-3,-2,-10,-2,-2,1,4,-4,6,4,9,4,-2,-2,-4,-2,-3,-7,9,1,-2,-5,-8,1,10,-7,7,-8,10,-3,8,-1,-4,-5,-10,4,-9,-10,9,-2,-7,7,10,-3,7,5,5,-6,6,10], dtype = "uint16")#candidate|3895|(3360,)|const|uint16
call_3894 = relay.TupleGetItem(func_1150_call(relay.reshape(const_3895.astype('uint16'), [3360,])), 3)
call_3896 = relay.TupleGetItem(func_1153_call(relay.reshape(const_3895.astype('uint16'), [3360,])), 3)
const_3899 = relay.const([[3.012219,-4.763992,0.619192,7.631167,-7.308677,-7.694909,-4.911859,-9.653759,-7.462378,-7.795987,1.330292,-0.499939,8.403379,-9.240964,-4.391848,4.275505,4.523369,-5.811778,-6.005893,-2.852891,9.186892,9.503193,-7.571148,-0.461505,4.924719,-9.573005,-7.293950,-2.569935,-7.196513,6.249554,9.554382,0.190649,-1.625652,3.285464,6.787854,1.797827,-1.310003,-1.076063,-0.564782,4.696650,8.846754,-6.591393,-9.381503,-1.437026,-1.505640,6.691064,-2.679190,-1.642642,1.077380,-2.057682,6.374266,4.155988,-6.363184,-1.394045,-6.530237,5.067131,-4.726776,-7.063106,-8.288196,4.227085,-3.159896,-7.540903,3.604995,8.692169,-9.319869,-3.003061,5.792503,4.847448,0.341458,-8.273788,2.536068,-6.713218,-2.111256,0.106664,1.421190,0.765646,0.647265,-4.808659,-5.503701,9.727336,1.473169,1.559909,-8.636454,4.261009,-0.632155,6.763733,8.964750,4.013006,-0.378992,-8.931333,-3.287641,4.748711,-5.934218,-2.457137,4.572626,1.366691,0.933667,4.530976,-2.925641,-7.736582,3.397948,-4.098638,7.458510,-9.233169,-0.350578,6.955952,-0.046431,9.472648,-7.284763,8.331074,6.410758,3.821057,5.243184,-6.402261,7.495916,1.260349,1.666617,2.316818,8.083781,-4.073321,-8.588756,-3.523832,3.358333,0.150826,-4.028950,9.458981,-0.530379,-4.087712,-3.300210,6.017959,4.443036,-2.189761,-6.416987,3.099380,5.561099,-0.022885,9.915011,-1.062526,-8.382961,1.700638,-3.471266,-5.747521,5.859505,2.221484,-8.012279,9.344287,4.784084,-8.687407,9.382508,1.355493,2.912620,-2.956655,8.945167,3.079804,7.749025,-6.853021,-3.581315,-6.004523,8.222261,0.678191,-4.842972,-3.274899,-1.548371,4.247508,-8.319829,-4.223713,-8.371046,1.906733,8.231867,9.811973,8.495004,-9.626919,7.777285,4.741116,-6.439928,-2.523886,1.360745,-9.876633,2.982438,2.989809,0.029924,1.011502,-4.717745,0.630824,-1.378741,-2.977646,-9.113850,1.256132,4.504083,-7.026198,3.431402,-2.430055,6.540065,-7.021445,2.139158,3.285947,4.427577,-9.474056,0.804207,6.604971,8.925899,7.475665,-1.503317,4.675384,9.018984,-9.097676,-1.230403,2.281503,4.280351,-0.321284,8.666125,9.788961,-5.256135,-8.450129,5.181994,8.546932,-8.290076,-5.418350,3.789633,-1.597036,-3.225374,5.638014,-7.489378,-2.592613,-6.012739,-7.842628,-2.910847,-1.225907,5.798652,-0.485296,-6.558430,3.784857,-6.584528,-9.525854,7.380429,-6.025637,9.060126,-0.728015,-3.356749,2.834274],[6.823183,-2.881539,-3.106264,7.329271,-9.045314,-5.485747,3.579933,8.003131,-3.636547,-6.655002,-2.322454,7.630557,-8.049945,2.374185,-2.827804,-1.414749,-1.341608,-9.819866,1.312475,3.665582,0.708968,1.822386,7.089547,2.779203,-9.030952,-2.086165,-0.476789,-2.572388,8.865228,-6.342271,-4.767803,-0.048261,3.746858,8.655264,-5.552671,-3.638610,8.363550,-7.340513,-2.811903,-2.328097,7.958219,-8.946104,-0.743935,7.151910,-9.637234,2.408872,-7.403634,-5.560036,-0.850652,-2.390531,-0.795132,5.323891,-3.563536,-2.220712,0.553939,6.056846,7.639277,-0.732610,-9.106617,-3.043438,5.874427,-8.908029,9.308306,-5.249020,-2.211465,-4.125864,4.344920,-2.844259,2.229698,3.631698,0.782697,-4.384486,-1.128966,-4.273606,-1.391084,7.658220,9.908040,7.823939,-3.628031,-6.342483,-9.342997,9.338429,-7.525211,-1.666980,9.066490,-0.403431,-5.611085,8.030856,-7.057463,-8.974185,-3.133858,-8.248060,9.388141,-7.449562,5.085606,-6.888606,2.824278,-3.776590,-8.865056,-6.554782,-3.678507,-7.055947,2.375110,9.667872,-3.527570,-0.599724,4.681338,-4.038592,-6.386184,5.874046,4.458332,5.635453,8.924683,6.570066,-0.708647,2.936910,-2.274379,-4.771358,-5.262140,1.196108,5.213831,1.787543,4.984015,8.627375,3.603678,4.054893,-9.290854,2.430462,-2.068784,4.995741,-5.195653,9.845991,1.420215,-6.540334,6.377544,-2.446845,3.572064,-8.146319,6.881937,-4.361667,-1.020957,2.633512,5.173733,-8.415613,8.234044,-8.074611,1.838099,1.261227,1.991533,-2.019401,4.183582,5.804013,-5.096743,7.584444,4.346652,-8.238342,-3.867406,4.744492,8.866486,2.570369,9.677430,-1.720000,-8.012087,1.509904,-4.694800,-6.355875,-4.098735,-8.461525,5.750224,-5.610968,-1.979818,-0.823892,0.236702,-0.234548,-8.758788,4.083627,8.263741,-2.001344,0.522550,-6.229325,0.114287,-8.498561,-0.262529,-3.738627,-9.532588,9.216265,-0.503880,8.318913,1.322585,-5.323622,-7.293951,2.494123,5.789658,4.977311,-9.651783,-0.952198,-6.757388,0.520465,-7.578667,0.527083,4.777430,5.315640,-0.368061,3.237375,-1.912530,9.458884,9.607276,-1.755311,-2.659947,-8.559491,2.423646,-1.854777,5.093297,1.611230,-9.918315,-6.803936,9.132845,4.726868,2.295299,4.847466,-9.139823,-8.175657,4.296323,-4.512880,-0.167532,-9.752217,-5.445102,8.920079,0.083251,7.623178,8.574518,4.348384,7.930658,0.570999,9.258523,-3.662613,8.628782,7.836028,4.121357,2.580954],[-6.102827,-0.971025,-3.888500,-1.189398,-1.827861,1.934924,-3.183449,-1.616596,7.605827,-1.604350,-5.734480,-9.181018,9.837418,-7.182414,-9.898536,-3.174464,-4.793917,1.742573,-5.207888,-3.309739,1.050356,9.348480,-7.676081,9.771068,1.532162,-5.890628,-5.748342,4.663580,-9.595802,-0.029419,8.568306,-2.876636,2.184822,2.394854,6.201780,-5.570025,6.426767,-3.927398,7.638883,-7.278726,6.854623,-2.317158,2.560175,9.074701,-7.666336,-3.164684,-4.605121,4.320623,-6.646717,-2.305869,-8.106912,-1.964347,-7.906769,1.729011,-9.071713,-5.242436,-8.730273,5.753600,-5.506437,1.891914,5.963804,7.971223,-1.454892,5.797496,3.757599,8.724879,8.000593,2.245505,-9.726652,7.285270,-4.741565,0.727471,4.833543,0.712595,7.942248,-9.732110,-8.117404,9.288901,-6.992024,-4.529322,-2.254410,9.339421,3.255503,8.608364,7.518067,5.549293,-2.018095,-2.806681,2.057434,7.344980,-0.726283,3.402971,0.311126,-2.237662,-6.513507,5.878705,-4.338791,-5.799436,-6.303021,0.826776,-6.325719,6.487961,4.445806,-8.421562,0.183216,-5.595594,1.975467,0.122269,-9.183320,-8.655337,-2.065341,3.210446,-8.466962,-5.752957,8.246785,-5.012339,-2.103177,-2.287847,8.589118,6.621261,-4.589525,1.835162,1.009463,2.726455,-9.941222,-1.379369,9.278137,3.150513,0.412215,-2.096739,1.519559,5.153617,2.304725,-1.579139,-6.380564,1.180522,6.526525,8.360535,9.583581,-3.960802,-3.630624,-8.677214,-6.151024,-5.832551,-3.196970,-9.267427,0.973193,1.755009,9.185601,-9.716656,3.430890,-3.184607,-2.855912,-0.496919,-2.138117,9.683343,2.943790,5.741915,0.234958,-3.449577,-6.144931,0.485726,-4.795052,-2.403816,-6.285278,4.595649,2.934032,-5.123143,5.656983,0.561460,6.231733,8.154545,5.989851,-1.815821,-2.985972,-3.087554,7.718103,-4.315351,-0.826378,2.035509,1.304135,0.704762,7.441744,-0.390887,-0.709331,-7.650290,-0.503410,-2.167112,-2.755554,-9.664968,1.027798,-5.757278,7.497526,-9.113470,4.045376,-7.505461,8.422412,1.255024,-4.216314,2.278395,-8.444221,-0.073197,3.676493,-9.503581,-4.774422,-8.359837,3.613063,-3.884808,-2.616882,-9.124287,1.508134,-7.724372,-6.974359,2.697376,-2.090056,1.523854,-8.869395,8.635779,5.553629,-1.099443,0.867651,6.844268,2.193881,8.892475,8.521193,6.044012,-3.143003,8.892843,-1.406020,9.118821,8.916136,8.168303,9.706837,-2.749748,-9.570734,-2.713037,4.858213,-9.232098,5.021396,-9.067867],[1.626603,4.483041,-5.171888,0.039402,9.700075,2.788896,7.442946,3.983038,1.306443,5.585253,-0.030891,6.917914,-0.382326,-7.049189,4.972651,-3.736831,-8.653572,6.091523,-2.744267,0.345438,6.368702,-9.719874,3.120187,2.598999,7.228926,-9.232819,-8.785631,-7.012811,1.892560,1.199588,8.626032,-9.056363,8.607354,-1.350823,-3.419445,-8.241648,-3.584790,-1.015758,-6.004693,3.590877,1.166731,7.975928,4.920860,-7.804349,-4.876149,-8.591455,7.069970,9.371748,-0.973566,-8.752956,-5.846119,-4.798864,8.715631,-6.281420,3.508831,-7.792309,-7.881782,-5.712674,9.639101,-8.394704,-2.404027,4.731806,3.287208,3.997091,0.131083,-4.631742,-5.809082,-7.173720,-5.418446,7.884425,-0.694709,-6.703220,6.802445,3.477181,6.975657,-6.997884,-9.699519,1.075045,-4.544309,2.951016,-9.895686,0.007289,-0.190539,-3.826910,0.736695,-6.032337,9.835848,-7.302697,-5.499623,6.750478,1.442137,7.219833,-6.773056,-7.350858,6.519185,-1.599181,4.262734,-9.820858,3.655588,-7.219646,-6.352860,6.651591,7.263844,-4.073526,8.512474,5.106409,6.351394,-8.376687,0.386352,5.275542,-3.653039,-3.723795,6.624621,7.589846,-0.248725,8.987879,4.735166,-2.278509,-7.016041,-4.345923,2.209203,7.271499,-7.929483,-7.548130,-2.631204,1.522831,0.594097,-5.215453,-4.186984,6.192411,-8.728156,-1.945371,6.392431,-3.124632,5.861172,6.736827,4.260031,-7.078026,-7.194428,7.279126,-4.416071,9.715063,9.205473,-2.175663,-9.802886,-9.279306,1.591906,-4.077346,5.880084,-6.400566,9.809597,6.853313,-4.325998,-9.672056,-1.974683,6.358671,-2.289298,-6.181797,1.891187,-5.184476,0.910641,-8.340122,2.567648,9.976860,9.015630,0.082737,-0.252609,9.012869,-7.455691,7.096784,-5.425593,1.305477,-1.670651,-8.124128,0.088411,4.061620,6.481200,5.650597,-1.284226,7.996701,-8.864534,-9.479565,-7.352157,-8.695676,3.319169,8.715565,-6.648553,1.135548,6.598606,-3.334854,-6.945364,6.136047,8.412164,-6.307304,5.740945,-5.594391,-8.336032,-5.491918,-9.116409,-7.048349,8.314341,9.292561,-9.025374,-0.953881,-2.672233,-7.990935,-1.176636,-6.737872,-4.355697,6.964917,6.228891,-3.501143,-8.700554,-3.019786,2.826666,-3.824262,-8.467856,-5.910966,-0.233660,-8.159291,-2.821190,4.443485,-7.052999,-0.551479,-7.650108,3.961719,7.209123,-7.827631,-5.629882,7.793665,3.376432,-2.485159,3.790956,-0.797036,1.020646,3.486287,-3.422044,-3.814426,-0.938157,9.120121],[-8.856795,-7.248031,-4.161604,0.788737,9.991941,-4.675401,8.844626,2.418983,-9.187007,-3.805130,-1.210534,9.886589,0.662827,-1.953703,-0.089497,-8.110985,-6.624208,8.982806,7.792345,1.557629,7.394551,0.709001,9.286438,2.537439,0.034941,7.752674,5.028189,-7.388067,9.627274,2.556025,-7.467681,-0.032230,-5.327858,-6.441410,1.234954,4.072203,0.540454,6.522046,3.352713,-5.861297,-4.275728,-0.175209,-3.130988,-3.831393,5.728840,-5.899726,-3.246272,-3.337869,-8.687478,-7.315940,5.084089,-9.477644,6.439498,4.527980,-6.423196,2.362237,4.287039,7.403122,-6.564551,5.833303,4.341675,5.912846,2.788038,-2.653390,-8.693255,0.134083,-9.208054,7.956641,5.086602,-1.604347,-4.525204,-4.558719,-2.636602,-9.641980,-9.269347,-4.565526,8.230594,9.981259,-0.005497,-0.746614,-3.236161,-9.269276,8.266174,-2.508810,-8.806526,-0.904522,-6.196483,-5.765859,-3.847154,7.879273,0.744048,-9.009337,-2.204036,5.777803,-3.068421,5.152278,3.785573,8.935160,0.469800,1.219817,9.601973,6.052828,-4.847173,-5.796096,-2.450972,5.129346,0.262408,-6.500001,4.946587,-3.156117,7.368471,8.732421,5.491502,6.958776,-4.366380,-9.277895,-8.489251,-1.143644,-3.120764,-5.284046,-9.296178,-1.114063,9.907811,5.578609,-9.951306,-2.240509,-0.516611,-6.194442,7.675653,-6.850012,-7.921066,4.046722,-0.123517,5.479831,-7.930211,6.193578,-0.155253,-8.643126,-9.759457,-4.506308,-1.676572,-9.223436,-1.804610,-6.291304,-7.555109,-8.355950,-2.564265,-9.948955,6.317661,7.425988,5.533585,-1.726833,-9.262534,0.948035,2.348699,0.454108,4.692548,-3.296323,-0.987552,2.691133,9.849465,0.308209,7.168531,8.590901,1.403214,-6.229163,3.837951,-3.790859,9.083522,5.719436,-3.985347,-1.533042,-6.017706,4.941283,-3.210467,-3.490670,-0.654791,4.085859,7.391067,-4.357032,8.347395,1.005525,-1.528314,-4.287338,0.607758,-7.746835,-4.001880,6.577854,8.496238,8.457699,3.218676,0.785527,1.988911,3.148059,4.890887,6.382826,-9.428256,-5.068981,2.485776,6.007215,-9.282872,-7.578662,-4.553395,7.057014,-8.084891,9.125762,-9.445842,-6.212279,8.352836,-0.743494,2.321258,8.414490,-3.889783,-0.100944,-9.161963,5.760413,3.419392,7.967479,3.258196,0.064563,6.960122,-4.614079,-0.746238,1.133616,-4.782395,-1.155802,-1.539858,-3.179197,3.478150,-1.000578,-3.320501,-4.972739,9.277650,9.631005,6.752149,-5.673136,-3.878299,-1.145785,7.776496,-9.561969],[-6.500379,-3.488240,3.505367,2.466021,0.422268,-6.871623,5.911154,-1.861922,2.940491,-8.050355,-6.295447,9.583228,6.326449,7.418687,-2.758489,-3.933155,2.149466,8.143757,3.626703,8.615842,-4.882043,-5.461696,1.938894,-0.996369,7.745419,5.428754,1.074150,-1.098621,-3.848178,-2.889380,1.178070,2.538040,3.905230,1.078313,-5.475798,7.870245,7.233395,-2.332676,-2.891208,9.992361,1.468984,-4.488011,5.599081,1.173765,-8.490277,-4.675886,6.582914,-1.595526,-0.541610,4.616915,9.045856,3.893880,7.122253,4.018578,-7.868318,2.250803,8.996250,8.922150,-2.998893,-3.578801,-2.403071,-0.170951,9.389086,-5.916195,4.861479,-4.591074,-1.364093,2.415058,1.311294,-8.090407,1.400561,-5.586026,1.093057,2.081243,-1.286968,-2.511079,2.178956,-6.063720,-5.429092,-3.857166,9.342115,-4.717920,0.194929,8.826283,-5.730403,-1.011506,0.862315,-9.249584,-7.933463,-2.151344,9.431194,2.218625,8.030614,0.724997,-1.491065,8.069461,-3.228022,-2.756499,6.674362,2.002575,8.269362,9.972050,-5.803416,2.903678,-4.116379,9.077012,-1.304235,-5.456484,1.152602,4.894306,9.754635,2.515808,-8.554703,4.203567,2.252445,7.612322,8.343220,0.466519,-1.386112,-1.894393,-9.467067,4.962630,1.977322,-3.463379,9.875139,-0.626165,0.745575,5.977903,2.250721,4.729907,6.136308,7.928358,-1.617307,-9.245113,1.782994,9.431837,-2.403854,9.382372,-9.548745,-0.360005,7.296289,-0.996711,-7.586310,1.195822,7.368731,-3.665790,4.391903,1.245066,-8.542973,4.628037,-6.053252,1.507127,1.049913,-4.314844,6.835170,7.028586,-7.189160,1.384866,6.735868,-4.982390,5.900371,5.326234,2.629034,-9.431477,-8.873404,9.490852,-6.978317,-1.756749,4.866149,9.850513,6.555445,-0.964441,9.895411,7.462495,-9.989594,9.532150,-3.046006,-6.451817,6.973361,-5.677845,-8.947252,-3.831859,-4.841749,-3.936963,-6.138001,-0.137626,4.385376,5.187461,-3.108486,5.741455,-6.268942,6.057482,-1.905178,-5.639831,-1.061723,9.572648,4.361311,-5.371432,-2.453154,0.056334,-6.786819,2.308891,-7.507173,-0.192482,5.269739,1.900929,-9.813578,-6.689625,6.147487,-2.497375,2.017927,-7.718723,-9.468172,7.072607,-9.978487,3.650473,-8.152160,-5.560514,0.815332,-1.405910,-8.321050,-3.981550,-5.972933,4.929335,-7.475551,8.067499,-6.148564,-9.313482,-0.596597,7.456936,-2.218252,-5.000952,8.305540,-8.543172,7.589514,8.149474,-7.651249,4.403846,1.505573,-6.606719],[-0.499644,0.069924,-3.461990,4.577028,4.050728,0.273009,7.409462,7.782632,-7.149270,4.374121,-7.320957,5.490415,2.388563,5.466362,-8.363817,-0.048543,9.148097,1.309571,5.971043,0.454442,1.981175,-7.659999,-1.351654,-6.275792,8.578493,-7.375034,-2.996414,7.884060,-5.869801,-6.599588,-1.938748,-3.463167,1.307091,1.678698,-3.377523,2.997078,9.620090,0.497108,3.838088,-5.857572,3.664459,-2.524536,7.698822,5.230559,-0.742424,-7.751116,-6.207407,6.803699,-2.103486,-5.555455,1.903715,-2.514167,-8.305655,-1.008839,3.895982,-7.557169,5.270281,6.936778,-0.572520,9.843872,-0.219830,-4.098203,-5.759502,-5.641613,-5.470057,7.674465,0.154481,5.403842,8.244189,2.408394,-0.084270,-4.339471,5.969783,-0.317003,-0.823029,-7.117234,9.175878,-5.825064,-8.431115,-0.636050,8.190538,-8.029479,-7.765284,-4.152223,2.018826,-9.526771,-9.947117,-6.020868,-3.554324,6.127269,-9.492449,-9.491135,-9.952733,7.003199,4.983573,-0.396091,6.930103,1.544252,-1.265072,-9.330465,-3.943339,0.782198,9.970551,-4.006387,6.320716,-8.644924,2.870571,7.903280,4.718845,5.844455,4.745087,-6.867693,-9.993722,-4.478284,6.887704,9.475091,6.048946,-7.805169,-3.272659,5.511009,5.812953,3.976957,-0.547599,-1.789340,4.640514,-5.451951,0.597175,3.165886,7.451211,-0.353529,-3.532312,-0.269418,6.043469,-4.661558,3.418551,7.735789,-2.190135,8.800380,8.430748,-9.429445,4.803031,9.084358,2.772972,2.180617,-2.436888,-0.144893,9.576487,3.089709,6.116007,-0.907157,4.428283,9.343533,-1.016335,-4.219869,8.864875,-8.512257,3.434771,3.505628,-2.813514,7.687342,9.485646,-2.637214,-5.704143,1.492521,2.206393,-3.723147,9.493313,-3.806439,7.419704,8.916193,-0.850808,3.801358,-7.871497,-1.279820,5.517008,6.279087,1.144659,1.451224,5.891852,-9.805401,-3.545363,0.275241,-2.511936,1.055542,-9.337546,-7.734881,-3.632152,5.592284,5.745765,-4.525221,6.409173,6.995404,0.542717,1.901231,6.153036,3.438447,-7.384874,7.156511,1.800073,-8.308505,8.789878,-6.062652,2.064249,-7.167130,2.320474,0.668467,3.575752,-5.611638,-3.776964,4.578060,2.220577,4.786305,-4.257717,-8.971640,-3.136481,7.988659,-7.285946,4.267159,3.190157,-4.813695,-1.204028,-2.746543,-3.357251,-6.272404,-3.746406,-6.160672,3.822152,7.634828,-2.215903,9.560739,0.513118,-8.319753,-6.096519,7.748427,-2.165747,-5.627328,3.131742,-6.034068,6.245646,-1.275745],[-5.035198,2.820048,4.858810,6.575723,6.034847,-1.640718,-8.145341,-9.306850,-0.583361,-1.121505,7.264732,-1.873967,4.488788,-7.709140,8.995842,-7.510968,1.076886,8.719652,7.674479,-3.875896,4.064631,6.094088,0.425448,-7.503635,6.561185,-1.343244,-8.216034,1.695493,7.727177,-7.763812,4.777175,5.494739,1.869452,1.102332,7.740783,9.312940,-4.209132,-4.812534,-7.305546,4.025794,-0.706281,-0.156477,-7.603326,-1.120432,5.006545,9.172284,-3.861917,9.420195,1.715480,-5.722816,-8.931119,-4.831429,-2.409545,-1.435090,4.789375,-9.635698,-2.658387,-8.511690,-1.959869,-8.256744,-6.506991,-7.222176,-3.230738,-2.465335,-2.978496,7.753016,-5.591313,3.134699,-5.424583,8.522420,-9.445189,1.896113,-2.127747,2.730134,6.341695,-6.486821,2.073318,-8.737096,-8.421468,-7.643726,6.630233,9.529239,4.648974,-3.731296,-6.000452,9.726110,8.193063,7.392033,1.337416,-8.906961,7.329051,-1.012990,-6.111608,-1.827705,6.992024,4.860120,-1.245127,-3.202770,-4.819138,-5.930907,-3.861362,3.278365,-5.106309,4.465430,9.109835,-3.199262,-4.238482,-6.889174,4.850089,1.789365,9.337657,7.227078,7.201817,0.554031,-6.175752,-8.001100,3.895188,-0.189352,5.343935,1.427182,-0.863300,8.373729,-4.213777,6.993972,-8.174986,-4.551008,2.342960,-9.030893,1.764498,-4.189231,5.896846,-2.396902,-7.817178,-1.417236,-3.278932,0.827252,-4.972748,3.081212,-9.756286,-4.803824,5.384358,-9.780900,5.151820,4.960860,-8.437112,-2.231427,1.771796,-1.489712,-2.928988,9.177466,2.046082,2.747388,4.879018,-3.653702,3.233848,-0.913651,-7.978107,0.927410,8.776123,-1.574394,6.158414,1.902316,-8.694026,-0.364010,3.021651,5.591858,-7.371436,-5.858646,-2.662357,3.319947,1.881920,-0.445697,-3.458466,7.286232,1.776707,6.286732,5.247016,1.442305,4.196119,-2.295543,1.707210,6.906195,-1.555937,3.381040,-0.431410,-3.861094,-7.511341,0.345918,-9.563434,7.282323,2.197802,-4.185742,8.694915,-8.473224,-6.978175,9.670223,-4.828151,6.112059,-3.378615,9.630329,-5.966481,6.817732,8.421498,2.390213,9.679889,9.695732,-5.619521,0.702317,2.044786,-7.759568,-9.526828,6.585831,-7.386773,7.015132,8.925618,1.673861,-5.171069,-2.660900,-9.819598,-8.189003,-8.382059,-8.878512,8.672867,5.418037,5.439073,-4.420102,1.006777,-2.984124,3.287948,4.537888,8.636781,-2.469428,3.104475,7.100976,-8.803748,7.384227,9.113458,5.967179,-5.010543,5.870862],[-0.009747,9.302715,1.063497,2.393269,-8.131094,9.169839,-0.824932,8.356476,-9.000533,8.196410,-5.337701,-1.821919,-4.521040,8.779713,-8.314629,-6.992738,-1.889270,-9.483696,4.063139,-8.482380,-1.988815,9.031500,3.096066,-7.098983,5.776445,8.160723,7.169222,0.909422,2.707808,-5.815531,4.590552,4.992325,-4.905191,7.312413,4.443896,5.485782,9.163522,-6.053808,-2.578981,3.348421,-4.229493,2.966614,-9.971543,6.177307,5.234575,9.570061,-1.018100,7.992004,-2.059281,9.513592,-2.013891,-3.975970,1.179768,7.893625,7.982144,-4.342432,1.539104,9.910003,-0.875204,3.033051,-9.584527,8.025959,2.335400,-8.456198,7.208356,-8.909934,-0.686777,-6.678962,2.624558,5.785298,-8.378081,2.711420,-1.379700,8.388161,9.157914,-2.946330,0.384342,6.358166,-4.869157,-2.242745,9.544187,-4.138749,1.382091,2.558234,-0.125338,-8.042145,-7.235533,-3.572681,-9.946376,-0.506317,-1.474645,-6.167535,-8.613696,1.696674,9.446815,-8.721253,-2.282959,-7.886145,2.261399,-6.890321,6.655398,-4.465426,-9.317195,-9.324235,-2.974385,8.133553,4.735015,-8.599450,9.275030,7.323899,-3.481170,5.967126,-3.247817,-5.585363,8.185065,0.544284,2.910743,5.997572,-1.185041,9.203172,-9.069593,1.204359,-7.624117,8.849349,8.502940,-7.833416,-3.803803,-0.976951,2.372323,6.239501,-6.819103,7.250179,-4.302958,8.729122,-4.219676,-2.506901,0.581819,1.414860,9.775018,3.468618,0.877874,-9.040824,9.306063,-3.749667,-9.668544,-9.055824,-4.397955,-7.440262,-5.184075,5.174260,-5.746863,4.588381,1.955860,7.041667,4.384493,-6.935974,-7.974067,-9.889041,5.486433,9.499830,-2.364487,-1.090075,7.634420,-9.546630,8.800733,5.082485,3.603668,0.683620,2.066768,7.324880,-1.381577,6.706786,6.796327,-6.670363,-7.521917,-2.986559,0.376854,5.939695,6.986127,-9.039357,9.085558,8.446259,-1.466218,4.973384,5.773392,-4.181908,-2.291203,0.087364,-8.310340,0.699521,9.413796,4.727718,-3.618554,6.860648,-4.249296,-8.556041,0.751705,-6.692527,5.423741,9.857376,1.757382,-7.008557,9.788608,1.026655,7.053491,-6.349554,-4.407618,-9.561677,-1.907946,-6.380617,4.590145,-5.821875,-8.988228,8.658989,6.115070,8.126387,-6.093843,-0.199275,2.148173,4.400643,-3.142951,3.021580,-8.599741,-7.833691,0.011572,2.244017,6.361164,-1.735755,0.379737,9.378138,-0.361049,9.080546,-0.460890,7.430381,5.686000,7.663648,-6.651872,-3.580089,-4.228880,-3.432231],[2.887695,-3.471012,1.776240,0.493337,-2.966718,1.893578,9.028473,-7.731533,7.746782,2.432266,-4.629077,-4.539782,7.598312,9.431545,5.146504,8.790083,-5.309006,-1.340393,-5.858927,-1.177937,-3.009154,-2.356634,-7.321815,-3.026183,-8.244237,-6.210610,-8.421118,8.837518,1.335711,0.893997,-0.576352,1.932102,-0.283627,9.556137,3.630070,-7.810588,7.956906,3.701540,3.773560,2.179081,6.294962,-8.968210,6.551831,1.350924,4.933933,7.722552,-2.196884,-3.494083,-0.215004,0.310237,8.855660,-6.665853,-9.262895,-6.797916,2.888424,3.348958,6.455622,-1.226464,-2.316646,2.690263,-5.234085,3.425951,5.617833,5.102884,0.993250,-2.618006,-8.079570,-0.929425,-8.811322,-4.656323,-2.239424,6.412483,-7.528378,-0.820475,8.867968,-1.043805,8.172123,-0.217783,3.991334,-8.381311,2.665235,5.592688,7.734555,-7.391820,-5.247704,6.289535,9.321610,-5.444012,-4.092419,-5.042913,-7.495044,7.331721,-6.745059,-0.027327,-3.057807,3.390686,7.791900,3.788699,-4.282474,2.959933,1.596726,1.285854,8.167370,-9.263805,6.216306,7.380431,6.567356,7.646599,7.397321,0.382421,-2.606201,1.687870,3.274099,4.955313,-3.998513,-7.640002,4.522116,-8.530999,4.434683,8.012110,7.294693,-9.457647,4.007439,5.457400,8.926998,-8.631438,3.649132,-0.279869,3.289518,-4.287972,-4.748545,6.958735,-8.058777,-9.836725,-2.811070,-5.343429,-3.904782,-4.493356,-3.498661,-0.918738,-0.571510,-4.735124,-5.403030,-9.434177,-9.659019,-9.332390,8.588919,-6.853713,0.376987,9.302391,-3.519978,-8.069035,-0.352476,8.330143,-6.894425,-9.022512,-0.859407,-2.681562,8.456253,-9.651856,5.075496,-0.518154,-4.343400,-7.606260,3.002581,1.026433,-9.742999,8.037929,-1.221218,4.351885,-2.148204,8.954557,-0.138799,-7.294493,-3.444955,6.696509,0.934457,-9.601556,5.765976,8.731549,-9.304891,-3.009852,-6.212207,4.870882,-0.947451,7.966433,6.316043,-0.716693,-3.284581,9.754494,5.214721,-2.424179,7.212624,5.517950,-2.415816,6.899193,4.405929,2.410221,0.377357,5.498092,0.994921,5.983883,3.395359,1.645779,-2.177840,7.638397,6.567124,-1.057717,-7.396422,5.707547,-2.120981,-7.601386,9.747102,-0.007207,-2.436708,-4.183576,-4.134816,-6.624786,6.262849,-8.189986,7.584024,-8.440940,9.402814,2.895529,-8.530827,-4.655258,4.968659,-5.125642,-6.013155,-9.168662,-1.235846,8.546278,-3.325598,4.081682,7.579693,2.603812,0.727248,5.916990,-4.949959,-5.207696],[-7.407660,9.604466,3.970670,-9.283180,-5.765612,8.598019,4.186499,-4.940386,-8.852092,-5.596862,8.159123,-0.591905,1.184224,7.413406,-6.033031,-9.460813,9.821970,5.127888,4.878843,-3.971334,-7.118816,0.825494,-0.660329,1.031797,0.541123,-0.154618,8.629044,7.480741,6.448348,-8.312969,-9.736550,-5.560268,-9.989197,7.677433,9.099696,-5.477440,7.262159,0.448302,9.616890,-4.690635,-6.466185,6.956228,-1.500487,-2.392388,0.465404,9.022897,5.451310,3.700217,9.141142,-0.856588,3.728891,-2.995597,-4.282270,-3.472131,-9.172290,-4.899530,-2.373182,-3.377916,-6.974906,-8.703705,1.791585,5.340957,4.777344,4.207134,5.006413,8.818082,-5.290488,2.870139,7.561666,-5.364448,7.408672,6.503385,-6.451907,-9.847279,-9.784112,-4.756164,-4.743915,7.759742,7.016326,1.662687,-2.130410,6.292754,-6.786885,3.836206,-7.371234,-5.721064,-4.655957,6.566511,3.483616,7.887117,-5.913585,-3.452145,1.926745,-1.205857,-5.300460,-1.036379,-6.981649,7.986651,-2.823222,4.590517,-5.495594,-0.083470,0.657652,8.895157,5.054502,-5.461828,-6.925825,5.593507,-4.428694,-8.598718,8.122038,2.048293,-0.983304,-7.986030,1.140732,-8.676296,2.724547,-1.539255,-0.854387,-0.611018,-8.214710,-6.404574,5.678167,8.511186,8.310182,-4.412798,-9.365001,0.995053,-7.452335,1.319598,1.062341,4.586808,9.139205,5.815520,4.588069,9.388055,-3.570873,-8.540837,2.655710,-9.893643,-8.550488,7.583764,-3.702318,8.991277,3.946260,3.367191,-6.874154,3.979002,-3.936540,-4.748132,-9.843995,-6.708706,4.876848,-2.700964,-3.146693,6.512155,7.678208,2.419923,3.017340,-1.199416,0.293223,2.353625,-0.067934,1.634931,5.349961,-4.588944,-9.410531,9.643726,-0.599522,-4.160181,-6.780128,8.982913,6.559619,0.418047,9.356731,5.640087,7.252136,1.848121,2.331103,4.426725,-6.043197,9.687894,-5.550260,-0.853863,-4.818076,4.211488,-6.044992,1.897907,9.148990,9.441928,-3.918901,6.116116,3.062372,-3.524083,-8.649572,-4.068372,6.737336,4.087057,-0.696830,-3.621835,-5.214864,3.002480,-8.711862,-8.282265,5.914478,9.405779,-3.956003,-2.793426,3.123034,8.428976,-9.239152,-2.526104,5.207719,0.954827,1.630591,-8.508920,5.186636,-6.908458,-2.977154,7.473489,-1.715201,-2.152444,1.590309,1.820776,8.489832,-4.038746,-7.794849,6.119112,-9.613657,3.821476,9.236974,-9.391505,8.288159,-2.781254,6.357263,4.504383,-0.780799,7.262354,-6.944640,-3.342764],[3.440307,8.143607,1.996357,5.566891,4.815478,2.066261,-6.337196,0.894475,3.605047,-7.219889,2.743028,-5.516116,0.356602,-4.837868,-5.192367,7.001149,2.181913,4.176032,1.053559,6.856468,8.842171,1.859124,-2.575759,6.638315,5.741152,-4.598784,-0.986861,-9.346321,-6.449399,5.520486,-9.349187,-5.216650,-0.578534,-9.026023,-6.065227,-7.794675,2.295808,-9.137441,5.945148,6.018014,3.148028,8.614235,-5.092915,2.688362,-8.295455,-3.954081,4.406862,5.215015,-1.853675,4.648613,8.715166,4.390770,-6.357368,-6.679823,9.776216,-6.669983,1.688243,-0.015396,3.709222,3.072910,5.321135,-2.443767,-9.752511,-6.609722,-6.145268,-9.046158,9.210761,-5.542294,6.605253,8.167083,-9.051309,9.310972,-4.509493,6.067909,4.328884,3.681075,-6.167219,0.758144,7.633131,-3.084194,2.802756,9.055407,-3.126032,-7.388246,-6.566474,-8.179359,1.054675,8.368866,-6.683337,-1.268795,9.794440,-7.897648,2.180715,-6.517139,5.471094,-7.986498,9.125520,8.195780,7.234989,6.252409,-7.951340,-5.775212,2.001784,8.987094,5.412424,2.940268,3.988440,-1.724938,5.055842,-3.072611,4.794109,-7.661992,-5.071921,-9.064291,1.640368,-1.515658,-5.620778,-5.480806,-6.338657,5.022203,8.353760,-4.222383,-2.768884,6.378783,7.471752,-7.649793,4.762708,-2.026190,-9.622892,6.697281,-1.822203,1.217149,7.776945,2.707565,9.462994,9.921009,4.460296,-6.815686,-8.761558,-3.859867,3.063250,4.825066,6.723664,-7.281089,-9.256964,7.691287,7.560837,2.739258,-4.034362,-2.949412,2.796535,-4.344182,0.479808,-4.403639,2.665228,-1.692991,2.764839,8.658184,8.409894,4.255687,1.591719,-4.410859,1.938074,9.982936,-9.405648,-2.205125,6.194464,3.974652,2.079560,2.298521,-9.279394,6.051093,0.568642,-2.081363,-2.092026,-0.549280,-5.845926,4.411010,0.509567,-0.151948,-1.291995,9.610533,3.715630,2.906810,2.239518,6.385411,-5.461545,8.733477,5.024042,-3.428977,0.036859,-4.402698,2.573743,-1.081516,-0.999073,0.292018,5.210966,7.982355,5.631341,1.802082,2.753967,-6.044846,3.584283,0.398073,8.277640,-3.362510,-8.896628,-5.330647,-5.211705,-7.726332,1.452233,-9.974734,3.950838,-4.421731,-0.126825,7.855259,-7.154131,0.950560,0.707003,6.136158,-2.347867,-5.660463,-2.782224,-8.184080,4.708551,7.085483,-9.351166,2.281529,4.834643,-4.945454,6.347824,2.646748,2.123849,7.673388,9.346234,7.946255,-9.294424,2.270114,1.698268,-2.019654],[-0.967105,3.272675,4.639627,-0.446008,-9.381045,-1.059818,-7.790525,-2.487998,-1.363893,0.563626,-6.943060,3.322096,-2.371292,0.288632,-7.876687,-3.262591,2.885619,-0.396016,-7.266603,-9.896180,9.891387,-1.010727,-9.727786,-9.463354,-6.225275,6.228240,-2.161435,3.910419,2.513410,-7.154175,-1.065596,-4.024583,6.226920,-7.250106,-2.874002,-7.377273,4.915227,8.719578,0.708568,-1.436387,2.432597,-6.489683,-0.160088,-6.455823,-9.899550,-2.411781,4.490126,9.985997,2.442876,-1.985144,-0.816657,3.671604,5.619344,6.560823,-4.952870,-6.953506,1.809434,-9.619761,7.968720,6.483330,0.032823,-5.681794,2.150011,8.987456,-2.437312,-2.704308,8.230202,-8.898391,-0.812104,6.527113,-2.630843,6.087912,8.977431,0.805367,-7.204441,-6.325957,-3.462421,5.294803,-5.605046,-5.314288,-8.493416,7.305951,1.598102,2.778921,-6.738590,-3.118058,-0.041750,-1.948386,9.452711,-9.582321,4.845619,-1.806513,-9.835263,1.658488,-5.228432,2.126753,-8.927148,-1.092566,-5.494273,4.119911,8.476772,2.120598,6.825701,9.298318,-9.087734,7.053826,-8.098988,0.397637,9.620911,-7.476967,1.975525,-5.534615,-3.495701,5.243368,-7.585251,3.553858,-7.242074,-7.080743,6.654472,0.882890,7.227029,2.765841,-1.424700,-3.664014,8.121019,3.940523,-8.068463,-8.142496,7.817964,-5.369278,-3.437425,6.615419,-1.058113,5.960761,1.019891,4.505551,3.533361,-5.749947,-5.060918,3.799369,2.029965,-9.683257,-9.430912,9.897635,-3.502099,-7.700503,2.675845,6.209473,0.521683,5.274813,6.641019,2.929195,4.291158,-2.277154,8.664272,1.819501,1.139921,-0.041326,-8.095679,9.468730,2.839130,-2.439449,4.877005,8.998705,-8.204503,9.798564,5.170734,-8.125240,-0.103920,-0.736458,-4.199864,3.211520,4.481573,0.784854,0.101560,-8.105807,-2.601206,9.382008,3.283686,-2.400538,-8.811778,5.423612,9.960335,-4.909850,0.179736,2.451173,6.321015,9.371787,-4.333472,-7.892596,6.713284,4.020127,6.185595,1.700115,8.216224,-4.193925,6.053207,6.620946,2.274353,-3.783797,4.941674,-5.332511,-0.492680,8.243516,6.915469,-8.611273,9.284026,-3.534605,0.580905,3.533643,-6.011984,-9.515686,8.042008,-1.059572,3.045904,4.025170,-6.469248,1.177599,6.693219,8.787818,9.798327,7.218691,3.765648,7.633214,1.797810,3.702590,7.545098,4.071120,-3.555133,9.326506,4.641220,-5.031048,3.838263,-7.768412,-2.914479,2.884674,-1.677980,-2.615662,-9.554457,-8.884276],[-6.898004,3.703875,0.862097,7.684109,-9.535258,6.720539,3.676420,0.536921,-3.798488,-0.020596,-9.038325,-1.791768,-0.786962,-6.467109,-3.204291,6.673605,3.086743,-7.534004,1.251041,-9.948013,5.416703,6.392394,9.023533,9.806885,5.484504,-2.809094,1.874146,-5.162379,-1.130194,-8.168884,4.889684,3.984898,4.715956,4.763720,9.180213,-6.900955,8.807744,-0.036582,3.168987,-5.530358,6.763625,-2.606564,1.651657,-8.064022,7.842419,9.497700,-4.392311,6.906342,-9.347381,2.680423,-0.796006,-5.073855,2.165047,-1.341961,-6.635974,9.845546,-1.736359,-9.533989,-1.771360,3.707259,-6.128573,-7.319746,6.566949,-4.319456,-8.915581,-9.745464,1.361057,9.641686,1.947466,8.700694,-0.530156,6.846288,-7.140048,7.739099,-2.060721,8.005275,5.175111,-6.935340,2.606272,-8.709467,-8.184576,2.631790,-2.194338,-5.204316,-1.701346,9.125810,9.351268,6.336146,1.048878,-9.043951,1.689343,-2.260881,-0.985672,-4.214933,8.878084,9.343401,6.548893,0.841731,8.486865,8.297379,-8.583941,8.827763,8.709601,1.677753,3.166285,-9.078131,3.415612,3.969876,0.563479,-2.221782,-1.583442,-7.019921,-8.767191,9.461435,-1.841640,3.561588,-8.495938,-4.116680,-8.674622,-5.398884,9.946039,-3.511949,4.973181,-8.457351,4.368601,4.048825,0.489327,2.161012,0.072807,8.011003,8.402208,-3.674102,9.067172,1.013528,2.201297,4.476243,6.642257,5.956073,7.532262,1.372265,-8.056096,1.652823,2.145112,4.069827,8.580981,-9.513803,-5.870939,-9.740758,4.823492,1.357328,2.702362,5.653849,-4.845917,6.308907,0.394697,7.245264,0.941153,1.139243,5.648303,-9.381450,8.710268,-7.063858,5.540910,-3.356292,-6.266005,5.992875,-4.109446,-1.808885,-9.984491,2.641204,0.055478,2.642290,6.309404,4.945487,-5.671782,4.571721,-6.570966,7.796235,3.618596,-0.807445,5.646935,1.093124,-7.125905,-3.204114,-3.430900,-2.950337,-5.235316,-1.116950,-0.391004,4.913342,6.321375,1.413078,-7.010809,-4.259059,-4.589832,9.510865,-6.769481,8.774112,1.576004,8.818578,9.684368,5.823578,-0.004812,4.616928,8.661748,1.116583,-2.484399,-9.456904,3.171441,-6.690775,6.078116,2.264674,-9.057484,-9.647925,-3.476995,2.491174,-3.102701,-1.529548,7.077137,0.016183,-0.787551,0.182245,8.222783,4.075955,-7.917617,-1.174736,4.986992,-0.440832,7.653495,5.688034,-5.208337,0.104195,0.527777,3.427212,-3.647756,9.719788,6.105798,0.791049,-8.831774,2.657310]], dtype = "float32")#candidate|3899|(14, 240)|const|float32
bop_3900 = relay.subtract(call_3894.astype('int8'), relay.reshape(const_3899.astype('int8'), relay.shape_of(call_3894))) # shape=(14, 240)
bop_3903 = relay.subtract(call_3896.astype('int8'), relay.reshape(const_3899.astype('int8'), relay.shape_of(call_3896))) # shape=(14, 240)
func_3325_call = mod.get_global_var('func_3325')
func_3327_call = mutated_mod.get_global_var('func_3327')
call_3906 = relay.TupleGetItem(func_3325_call(relay.reshape(const_3895.astype('uint16'), [3360,])), 0)
call_3907 = relay.TupleGetItem(func_3327_call(relay.reshape(const_3895.astype('uint16'), [3360,])), 0)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_3908 = relay.TupleGetItem(func_1795_call(), 0)
call_3909 = relay.TupleGetItem(func_1796_call(), 0)
func_2803_call = mod.get_global_var('func_2803')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_3910 = relay.TupleGetItem(func_2803_call(relay.reshape(call_3887.astype('bool'), [6, 11, 14])), 0)
call_3911 = relay.TupleGetItem(func_2806_call(relay.reshape(call_3887.astype('bool'), [6, 11, 14])), 0)
uop_3914 = relay.log2(const_3899.astype('float32')) # shape=(14, 240)
func_3003_call = mod.get_global_var('func_3003')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_3918 = relay.TupleGetItem(func_3003_call(), 2)
call_3919 = relay.TupleGetItem(func_3004_call(), 2)
bop_3926 = relay.bitwise_or(uop_3914.astype('int64'), relay.reshape(const_3899.astype('int64'), relay.shape_of(uop_3914))) # shape=(14, 240)
uop_3934 = relay.sinh(bop_3926.astype('float32')) # shape=(14, 240)
output = relay.Tuple([call_3887,const_3895,bop_3900,call_3906,call_3908,call_3910,call_3918,uop_3934,])
output2 = relay.Tuple([call_3888,const_3895,bop_3903,call_3907,call_3909,call_3911,call_3919,uop_3934,])
func_3940 = relay.Function([], output)
mod['func_3940'] = func_3940
mod = relay.transform.InferType()(mod)
output = func_3940()
func_3941 = relay.Function([], output)
mutated_mod['func_3941'] = func_3941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_3983 = relay.TupleGetItem(func_1795_call(), 0)
call_3984 = relay.TupleGetItem(func_1796_call(), 0)
func_772_call = mod.get_global_var('func_772')
func_773_call = mutated_mod.get_global_var('func_773')
call_3987 = relay.TupleGetItem(func_772_call(), 0)
call_3988 = relay.TupleGetItem(func_773_call(), 0)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_4003 = relay.TupleGetItem(func_1380_call(), 0)
call_4004 = relay.TupleGetItem(func_1381_call(), 0)
func_725_call = mod.get_global_var('func_725')
func_726_call = mutated_mod.get_global_var('func_726')
call_4042 = relay.TupleGetItem(func_725_call(), 1)
call_4043 = relay.TupleGetItem(func_726_call(), 1)
func_3605_call = mod.get_global_var('func_3605')
func_3607_call = mutated_mod.get_global_var('func_3607')
call_4053 = func_3605_call()
call_4054 = func_3605_call()
output = relay.Tuple([call_3983,call_3987,call_4003,call_4042,call_4053,])
output2 = relay.Tuple([call_3984,call_3988,call_4004,call_4043,call_4054,])
func_4058 = relay.Function([], output)
mod['func_4058'] = func_4058
mod = relay.transform.InferType()(mod)
mutated_mod['func_4058'] = func_4058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4058_call = mutated_mod.get_global_var('func_4058')
call_4059 = func_4058_call()
output = call_4059
func_4060 = relay.Function([], output)
mutated_mod['func_4060'] = func_4060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_773_call = mutated_mod.get_global_var('func_773')
call_4105 = relay.TupleGetItem(func_772_call(), 0)
call_4106 = relay.TupleGetItem(func_773_call(), 0)
func_3884_call = mod.get_global_var('func_3884')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_4115 = relay.TupleGetItem(func_3884_call(), 0)
call_4116 = relay.TupleGetItem(func_3886_call(), 0)
output = relay.Tuple([call_4105,call_4115,])
output2 = relay.Tuple([call_4106,call_4116,])
func_4119 = relay.Function([], output)
mod['func_4119'] = func_4119
mod = relay.transform.InferType()(mod)
mutated_mod['func_4119'] = func_4119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4119_call = mutated_mod.get_global_var('func_4119')
call_4120 = func_4119_call()
output = call_4120
func_4121 = relay.Function([], output)
mutated_mod['func_4121'] = func_4121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_4263 = relay.TupleGetItem(func_921_call(), 1)
call_4264 = relay.TupleGetItem(func_923_call(), 1)
output = relay.Tuple([call_4263,])
output2 = relay.Tuple([call_4264,])
func_4315 = relay.Function([], output)
mod['func_4315'] = func_4315
mod = relay.transform.InferType()(mod)
mutated_mod['func_4315'] = func_4315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4315_call = mutated_mod.get_global_var('func_4315')
call_4316 = func_4315_call()
output = call_4316
func_4317 = relay.Function([], output)
mutated_mod['func_4317'] = func_4317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_4329 = relay.TupleGetItem(func_1012_call(), 0)
call_4330 = relay.TupleGetItem(func_1014_call(), 0)
output = relay.Tuple([call_4329,])
output2 = relay.Tuple([call_4330,])
func_4331 = relay.Function([], output)
mod['func_4331'] = func_4331
mod = relay.transform.InferType()(mod)
output = func_4331()
func_4332 = relay.Function([], output)
mutated_mod['func_4332'] = func_4332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3534_call = mutated_mod.get_global_var('func_3534')
call_4415 = relay.TupleGetItem(func_3532_call(), 0)
call_4416 = relay.TupleGetItem(func_3534_call(), 0)
output = relay.Tuple([call_4415,])
output2 = relay.Tuple([call_4416,])
func_4423 = relay.Function([], output)
mod['func_4423'] = func_4423
mod = relay.transform.InferType()(mod)
mutated_mod['func_4423'] = func_4423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mutated_mod.get_global_var('func_4423')
call_4424 = func_4423_call()
output = call_4424
func_4425 = relay.Function([], output)
mutated_mod['func_4425'] = func_4425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_4461 = relay.TupleGetItem(func_4423_call(), 0)
call_4462 = relay.TupleGetItem(func_4425_call(), 0)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
var_4478 = relay.var("var_4478", dtype = "uint16", shape = (3360,))#candidate|4478|(3360,)|var|uint16
call_4477 = relay.TupleGetItem(func_434_call(relay.reshape(var_4478.astype('uint16'), [14, 240])), 0)
call_4479 = relay.TupleGetItem(func_437_call(relay.reshape(var_4478.astype('uint16'), [14, 240])), 0)
func_2553_call = mod.get_global_var('func_2553')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_4494 = relay.TupleGetItem(func_2553_call(relay.reshape(var_4478.astype('uint16'), [3360,])), 4)
call_4495 = relay.TupleGetItem(func_2556_call(relay.reshape(var_4478.astype('uint16'), [3360,])), 4)
func_1736_call = mod.get_global_var('func_1736')
func_1739_call = mutated_mod.get_global_var('func_1739')
call_4499 = relay.TupleGetItem(func_1736_call(relay.reshape(var_4478.astype('uint16'), [3360,])), 1)
call_4500 = relay.TupleGetItem(func_1739_call(relay.reshape(var_4478.astype('uint16'), [3360,])), 1)
output = relay.Tuple([call_4461,call_4477,var_4478,call_4494,call_4499,])
output2 = relay.Tuple([call_4462,call_4479,var_4478,call_4495,call_4500,])
func_4501 = relay.Function([var_4478,], output)
mod['func_4501'] = func_4501
mod = relay.transform.InferType()(mod)
mutated_mod['func_4501'] = func_4501
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4502 = relay.var("var_4502", dtype = "uint16", shape = (3360,))#candidate|4502|(3360,)|var|uint16
func_4501_call = mutated_mod.get_global_var('func_4501')
call_4503 = func_4501_call(var_4502)
output = call_4503
func_4504 = relay.Function([var_4502], output)
mutated_mod['func_4504'] = func_4504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3728_call = mod.get_global_var('func_3728')
func_3729_call = mutated_mod.get_global_var('func_3729')
call_4506 = relay.TupleGetItem(func_3728_call(), 1)
call_4507 = relay.TupleGetItem(func_3729_call(), 1)
output = relay.Tuple([call_4506,])
output2 = relay.Tuple([call_4507,])
func_4527 = relay.Function([], output)
mod['func_4527'] = func_4527
mod = relay.transform.InferType()(mod)
output = func_4527()
func_4528 = relay.Function([], output)
mutated_mod['func_4528'] = func_4528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4315_call = mod.get_global_var('func_4315')
func_4317_call = mutated_mod.get_global_var('func_4317')
call_4596 = relay.TupleGetItem(func_4315_call(), 0)
call_4597 = relay.TupleGetItem(func_4317_call(), 0)
output = call_4596
output2 = call_4597
func_4604 = relay.Function([], output)
mod['func_4604'] = func_4604
mod = relay.transform.InferType()(mod)
mutated_mod['func_4604'] = func_4604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4604_call = mutated_mod.get_global_var('func_4604')
call_4605 = func_4604_call()
output = call_4605
func_4606 = relay.Function([], output)
mutated_mod['func_4606'] = func_4606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1650_call = mod.get_global_var('func_1650')
func_1652_call = mutated_mod.get_global_var('func_1652')
call_4671 = func_1650_call()
call_4672 = func_1650_call()
output = relay.Tuple([call_4671,])
output2 = relay.Tuple([call_4672,])
func_4673 = relay.Function([], output)
mod['func_4673'] = func_4673
mod = relay.transform.InferType()(mod)
mutated_mod['func_4673'] = func_4673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4673_call = mutated_mod.get_global_var('func_4673')
call_4674 = func_4673_call()
output = call_4674
func_4675 = relay.Function([], output)
mutated_mod['func_4675'] = func_4675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2106_call = mod.get_global_var('func_2106')
func_2107_call = mutated_mod.get_global_var('func_2107')
call_4689 = relay.TupleGetItem(func_2106_call(), 2)
call_4690 = relay.TupleGetItem(func_2107_call(), 2)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_4707 = relay.TupleGetItem(func_1012_call(), 0)
call_4708 = relay.TupleGetItem(func_1014_call(), 0)
output = relay.Tuple([call_4689,call_4707,])
output2 = relay.Tuple([call_4690,call_4708,])
func_4715 = relay.Function([], output)
mod['func_4715'] = func_4715
mod = relay.transform.InferType()(mod)
output = func_4715()
func_4716 = relay.Function([], output)
mutated_mod['func_4716'] = func_4716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_4871 = relay.TupleGetItem(func_1380_call(), 0)
call_4872 = relay.TupleGetItem(func_1381_call(), 0)
output = call_4871
output2 = call_4872
func_4901 = relay.Function([], output)
mod['func_4901'] = func_4901
mod = relay.transform.InferType()(mod)
mutated_mod['func_4901'] = func_4901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4901_call = mutated_mod.get_global_var('func_4901')
call_4902 = func_4901_call()
output = call_4902
func_4903 = relay.Function([], output)
mutated_mod['func_4903'] = func_4903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4058_call = mod.get_global_var('func_4058')
func_4060_call = mutated_mod.get_global_var('func_4060')
call_4909 = relay.TupleGetItem(func_4058_call(), 2)
call_4910 = relay.TupleGetItem(func_4060_call(), 2)
func_3816_call = mod.get_global_var('func_3816')
func_3818_call = mutated_mod.get_global_var('func_3818')
const_4916 = relay.const([[False,False,False,True,False,False,True,False],[False,True,True,False,False,False,False,True],[True,True,True,False,True,False,False,False],[True,False,False,False,False,True,False,False],[False,False,True,False,False,False,True,False],[True,False,False,True,False,False,True,True],[True,False,False,True,True,False,True,False],[False,True,False,False,True,False,False,True],[False,True,True,False,False,False,False,True],[False,True,True,False,True,False,False,True],[False,False,False,True,False,True,True,False],[False,False,False,True,False,False,False,True],[True,False,True,True,False,False,True,True],[True,False,True,False,False,True,True,False],[True,True,False,True,False,True,True,True],[True,True,False,False,True,True,True,True],[True,False,False,True,False,True,False,True],[True,False,False,True,True,True,False,True],[True,False,False,True,True,False,False,True],[True,True,True,True,False,False,False,True],[False,False,False,True,False,True,False,True],[True,False,True,False,False,True,True,True],[True,False,False,False,False,True,True,True],[False,False,False,False,False,False,True,True],[True,True,False,True,False,False,False,True],[True,True,False,True,False,True,False,True],[True,False,False,True,True,True,True,True],[False,True,True,False,False,False,True,True],[False,True,False,False,False,False,False,True],[False,False,False,False,True,False,False,True],[False,False,False,False,True,True,True,True],[True,True,False,True,True,True,False,True],[True,False,False,True,False,False,False,False],[False,False,True,True,False,True,False,False],[True,True,False,False,False,False,False,True],[True,False,False,False,True,False,False,False],[False,False,True,True,False,True,True,False],[True,False,True,True,True,False,False,False],[True,False,True,True,False,True,True,True],[True,True,False,False,False,False,True,False],[False,False,True,False,False,True,False,True],[True,True,True,True,True,True,True,False],[True,False,False,False,True,True,True,False],[False,True,True,False,True,False,True,True],[False,False,True,False,True,True,False,True],[True,True,False,False,False,True,True,True],[False,True,True,True,False,True,False,False],[False,True,True,False,True,False,True,True],[False,True,False,False,False,False,True,True],[True,True,False,True,False,True,False,False],[False,False,False,False,True,False,False,True],[True,True,True,False,True,True,True,False],[False,True,False,False,True,True,False,False],[False,False,True,False,True,False,True,True],[False,True,True,True,True,True,False,False],[True,False,False,False,True,True,False,True],[True,False,True,False,True,True,True,True],[True,False,False,False,False,True,True,False],[False,False,True,True,False,False,True,True],[False,True,True,True,False,False,False,True],[False,True,False,False,True,True,True,False],[True,True,True,False,False,False,False,False],[True,False,True,True,False,False,False,False],[True,True,True,False,True,True,True,False],[False,True,False,True,False,True,False,False],[True,True,False,True,True,False,False,False],[False,True,True,False,False,True,False,True],[True,True,True,False,False,True,False,True],[False,False,False,True,False,False,True,True],[True,True,False,True,True,False,True,False],[False,True,False,False,False,True,True,True],[False,True,False,True,False,False,False,False],[True,False,True,True,True,False,False,False],[True,False,True,True,True,True,True,True],[False,True,True,False,False,False,False,True],[True,False,False,True,False,False,False,True],[False,True,False,True,False,False,False,True],[True,True,False,False,False,True,True,False],[True,False,True,True,False,True,False,False],[True,False,True,True,False,True,True,True],[True,True,False,True,False,False,False,True],[False,True,True,False,False,False,True,True],[False,False,True,False,True,True,False,False],[False,False,True,False,True,False,True,False],[False,False,True,False,False,False,True,False],[True,False,True,True,False,False,True,False],[False,False,False,True,True,True,True,True],[True,False,False,False,True,True,True,True],[True,False,True,False,False,False,False,True],[False,True,True,False,True,False,False,True],[False,False,False,True,True,True,True,False],[False,True,True,True,False,False,False,False],[False,True,False,True,True,False,False,True],[False,True,True,True,True,True,True,True],[True,True,True,True,True,False,True,True],[True,False,False,True,False,False,True,True],[True,True,False,False,False,False,True,False],[False,False,True,True,True,False,True,False],[False,False,True,True,False,True,False,True],[True,False,False,False,False,False,True,True],[True,True,True,True,True,False,True,True],[False,True,True,True,True,False,True,True],[False,True,False,False,False,False,True,True],[False,True,True,False,True,False,True,True],[True,False,False,True,False,False,False,False],[True,True,True,False,True,True,False,True],[False,False,True,False,True,False,True,True],[False,True,False,True,True,True,False,True],[False,True,False,False,True,False,True,False],[False,False,False,True,True,False,True,True],[True,False,True,False,True,True,True,True],[False,True,False,True,True,True,False,True],[False,False,True,True,True,False,True,True],[True,True,False,False,False,True,False,True],[False,True,True,True,False,False,False,False],[False,False,False,True,True,False,False,True],[True,True,False,False,False,True,True,True],[True,True,True,True,True,True,False,True],[True,True,False,True,True,False,False,True],[False,False,False,False,False,False,True,True],[False,False,True,False,True,False,True,False],[False,False,True,True,False,True,False,True],[False,False,False,False,False,False,True,False],[False,False,False,True,False,False,False,False],[False,False,False,True,False,True,False,False],[False,True,True,False,True,True,True,True],[True,True,True,True,False,True,False,False],[True,False,True,True,False,False,False,False],[False,False,False,False,False,False,True,False],[True,False,False,False,False,True,False,True],[False,True,True,False,False,True,True,True],[True,False,True,False,False,True,False,False],[True,False,True,True,False,False,True,False],[False,True,False,False,False,False,False,True],[False,True,True,False,False,False,False,True],[True,True,True,True,False,False,False,True],[False,True,True,True,True,False,True,True],[False,True,False,False,False,False,True,False],[True,True,False,True,True,False,False,False],[True,False,False,True,False,False,True,False],[True,False,True,False,False,False,True,False],[False,True,True,False,True,False,False,False],[True,False,True,True,True,False,True,False],[False,True,False,False,True,True,False,False],[True,False,False,True,False,False,False,False],[True,True,False,True,True,False,True,True],[True,True,False,False,True,True,False,True],[True,False,True,False,True,True,True,False],[True,True,False,False,True,False,False,True],[True,True,False,False,True,True,True,False],[False,True,False,True,True,True,False,False],[True,True,False,True,True,True,True,False],[True,True,False,False,True,True,True,False],[False,True,True,True,True,False,False,True],[False,False,True,True,True,True,True,True],[True,True,False,False,True,True,False,False],[True,True,False,False,False,False,True,False],[True,False,True,False,False,True,False,False],[False,True,True,True,False,False,False,True],[False,False,True,True,False,False,True,True],[True,True,True,True,True,False,True,True],[False,False,True,True,False,True,True,False],[False,True,True,True,True,False,False,True],[False,False,False,False,False,True,True,True],[True,True,False,False,True,True,True,False],[True,True,True,True,False,False,True,True],[True,True,False,True,True,False,False,True],[False,True,False,False,False,True,True,True],[False,True,False,False,False,True,False,False],[False,True,True,True,True,True,False,True],[False,False,False,True,False,False,False,True],[True,False,True,False,False,True,True,False],[False,True,False,True,True,False,True,True],[True,False,False,True,True,False,False,True],[False,False,False,True,False,True,False,False],[True,True,False,True,False,True,False,True],[True,False,False,False,True,True,True,False],[True,False,True,True,False,True,False,True],[True,True,False,False,False,False,False,True],[True,False,True,False,True,True,True,False],[True,True,False,False,False,False,True,True],[False,False,False,False,False,True,True,True],[False,True,True,False,True,True,True,True],[True,False,True,True,True,False,True,True],[True,False,True,True,False,False,False,False],[True,True,False,True,False,False,False,False],[True,False,False,True,True,True,False,True],[False,True,False,True,True,True,False,False],[True,False,True,True,False,True,True,True],[False,False,False,False,False,True,False,True],[True,False,False,False,False,False,True,False],[True,True,True,False,True,False,False,False],[False,True,False,False,True,True,False,True],[True,False,False,True,True,False,True,False],[True,True,True,True,False,False,True,True],[False,False,False,True,False,False,True,False],[False,True,True,True,True,True,False,False],[True,False,False,True,True,True,True,False],[False,False,True,False,True,False,False,True],[False,False,False,True,False,True,True,False],[True,False,True,False,True,False,False,True],[False,False,False,True,True,True,True,False],[False,False,False,True,False,False,False,True],[False,False,False,True,True,True,True,False],[False,True,False,True,True,True,False,True],[True,False,True,True,False,False,True,False],[True,True,True,True,False,True,False,False],[True,False,True,False,False,True,True,False],[False,True,True,True,False,False,False,False],[False,True,True,False,False,False,False,True],[True,True,False,True,False,True,False,True],[True,True,False,True,False,True,True,False],[False,True,True,True,True,False,True,True],[True,False,False,True,False,False,False,True],[False,True,True,False,False,True,False,True],[False,False,True,True,True,False,True,True],[True,True,False,False,True,True,False,False],[True,False,False,True,False,False,True,False],[True,False,True,True,True,True,True,True],[True,False,False,False,False,False,True,False],[True,False,False,False,True,False,False,True],[False,False,False,True,True,True,True,False],[True,False,False,False,True,True,False,False],[True,False,False,True,False,False,True,True],[False,False,True,True,False,False,False,True],[False,True,False,True,False,True,False,False],[False,False,False,True,True,False,False,False],[True,False,True,True,False,True,True,False],[True,False,False,True,False,False,False,True],[True,False,False,False,False,False,False,False],[False,False,True,True,True,True,True,False],[False,True,True,False,False,False,True,True],[True,True,False,True,True,True,False,True],[True,True,True,True,True,True,True,False],[True,True,True,False,False,True,False,False],[False,False,True,False,False,False,True,True],[True,True,True,False,False,True,True,False],[False,False,True,False,True,True,False,True],[False,True,True,False,False,False,True,False],[False,False,False,False,False,True,False,True],[True,True,True,True,False,True,True,True],[True,True,True,True,False,True,False,False],[False,True,False,True,True,True,True,True],[True,False,False,True,True,False,False,False],[True,False,False,True,True,True,False,False],[False,True,True,False,False,True,False,True],[True,True,False,False,False,True,False,False],[True,False,True,True,False,False,True,True],[False,True,False,True,True,True,True,True],[False,True,False,True,False,False,False,True],[True,False,False,False,True,False,False,True],[False,True,False,False,True,True,True,True],[True,True,False,False,False,False,True,True],[True,True,False,True,False,False,True,True],[False,True,True,True,True,True,False,True],[True,False,True,False,False,False,False,True],[True,False,True,False,False,False,True,True],[False,True,True,False,True,False,True,True],[True,True,False,False,False,True,True,True],[True,False,False,True,False,False,False,True],[False,True,True,True,False,False,False,False],[True,True,False,False,True,True,True,False],[False,False,False,True,True,True,False,False],[True,False,False,True,False,False,True,True],[False,False,False,False,True,False,False,False],[False,False,True,True,True,False,False,False],[False,False,True,True,False,True,False,True],[False,False,True,False,False,False,True,False],[False,True,False,True,False,False,False,False],[False,True,True,False,True,True,False,False],[False,True,True,False,False,True,True,False],[True,False,True,False,False,False,False,True],[False,True,False,False,True,False,False,False],[True,True,False,True,True,False,True,True],[True,False,True,True,False,False,False,True],[True,True,True,True,True,False,False,True],[True,True,True,False,True,True,False,True],[True,False,False,False,False,True,True,True],[True,False,True,True,False,True,True,True],[False,False,True,True,False,True,True,True],[False,False,False,False,False,False,True,True],[True,True,True,True,False,False,True,True],[False,False,True,False,True,False,False,True],[False,True,False,True,False,True,False,True],[False,False,True,False,True,False,True,False],[True,False,True,True,False,False,False,False],[False,True,False,True,True,False,False,False],[True,True,True,False,False,True,True,False],[False,False,False,True,False,True,True,True],[True,False,False,True,True,False,True,True],[False,False,True,True,False,True,True,False],[False,False,False,True,False,True,True,False],[True,False,True,True,True,False,False,True],[False,False,False,True,False,False,True,False],[False,False,False,False,True,True,False,False],[False,False,True,False,True,False,False,False],[False,True,True,False,True,True,True,True],[True,True,True,False,True,False,False,True],[False,False,False,True,False,False,True,False],[True,False,False,False,True,False,True,True],[True,False,True,False,False,False,True,True],[False,False,True,True,False,False,True,False],[False,True,False,False,True,True,False,False],[False,False,True,True,False,False,False,True],[False,False,True,False,False,True,False,False],[True,True,False,False,True,True,False,False],[False,False,False,True,False,True,False,False],[True,True,True,False,True,True,True,True],[True,True,False,False,False,False,False,True],[True,False,True,True,True,False,True,True],[False,True,True,False,False,True,False,False],[False,True,False,True,True,True,False,False],[False,False,False,False,False,True,False,False],[True,True,True,True,True,False,False,False],[True,True,False,False,False,True,False,False],[False,False,True,True,True,False,False,False],[False,False,False,True,True,False,True,True],[False,False,False,True,False,False,True,True],[False,False,True,False,True,True,True,True],[True,False,True,True,False,True,True,True],[True,True,False,True,False,True,False,False],[True,False,True,True,False,True,False,False],[True,False,True,False,True,False,True,True],[False,False,False,True,True,True,False,True],[False,False,False,False,True,False,False,False],[False,False,True,False,True,True,True,False],[True,False,False,True,False,True,False,False],[False,False,True,True,True,True,False,True],[True,False,False,False,False,False,False,False],[False,True,True,True,True,False,True,False],[False,True,True,False,True,True,False,True],[True,False,False,False,True,True,False,True],[True,False,True,False,False,False,False,True],[True,True,False,False,True,False,True,True],[True,False,True,False,False,False,True,True],[False,False,False,True,True,False,False,False],[False,False,False,False,False,True,True,True],[False,False,False,False,False,True,True,True],[True,True,False,True,True,True,True,True],[True,True,False,False,True,True,True,True],[True,True,True,True,False,True,False,True],[True,False,True,True,True,False,False,True],[True,False,False,False,False,True,True,True],[False,False,False,True,True,True,False,False],[False,False,True,True,True,True,False,False],[False,True,True,True,True,True,False,True],[False,True,True,False,False,True,True,True],[True,True,False,False,False,True,False,True],[True,True,False,False,False,False,False,False],[True,True,False,False,False,False,True,False],[True,True,False,False,False,False,True,True],[True,True,True,False,False,True,True,True],[False,True,True,False,True,True,True,False],[False,True,False,True,True,False,True,True],[True,False,True,True,False,False,False,True],[True,True,True,False,False,False,True,False],[True,True,False,False,False,True,False,True],[False,True,False,False,True,True,True,False],[True,False,True,True,False,True,True,True],[False,False,True,False,True,True,False,False],[False,False,True,False,False,True,True,False],[False,True,False,True,True,True,True,False],[True,False,False,True,True,True,True,True],[True,False,True,False,True,True,True,True],[False,False,False,False,True,True,False,False],[True,True,True,False,False,True,False,False],[True,False,True,True,True,False,False,True],[True,False,True,False,True,False,False,True],[False,False,True,False,True,False,False,False],[True,True,False,True,False,True,True,False],[True,True,True,True,True,True,False,False],[True,True,True,True,False,True,False,False],[True,False,False,False,False,False,True,True],[False,True,False,False,False,False,False,False],[True,True,True,False,True,True,True,False],[False,False,True,False,True,False,True,False],[False,True,False,False,False,True,True,False],[True,True,False,True,True,True,True,False],[False,False,True,True,True,False,False,False],[False,True,False,True,True,True,True,True],[True,True,True,True,True,False,True,False],[False,True,True,True,False,True,False,True],[True,True,False,True,True,False,True,True],[False,True,False,True,True,True,True,False],[False,False,True,True,True,False,True,True],[True,True,False,False,False,False,True,True],[True,True,False,False,False,True,True,False],[True,True,True,False,False,False,False,True],[True,True,False,False,True,False,True,False],[True,True,False,True,False,True,False,True],[True,True,False,True,False,True,True,True],[True,False,True,True,True,True,False,False],[False,True,False,True,True,True,False,False],[False,False,True,False,False,True,False,True],[False,False,False,True,True,True,False,False],[True,False,False,False,True,False,False,False],[True,False,True,False,True,True,False,False],[False,True,False,False,True,False,True,True],[False,True,False,False,False,True,False,True],[True,False,False,False,True,False,False,False],[True,False,True,False,True,True,False,True],[True,True,True,False,True,False,True,False],[True,False,False,True,True,False,True,False],[True,True,False,False,True,True,False,False],[True,True,True,False,True,True,False,False],[False,True,False,False,False,True,False,True],[True,False,True,False,False,False,False,True],[True,True,True,False,False,False,True,True],[True,False,True,False,True,True,False,False],[True,False,False,True,False,False,False,True],[False,True,False,False,True,False,False,False],[True,True,True,True,True,False,False,True],[False,False,True,True,True,False,True,False],[False,True,True,False,True,False,False,True],[True,False,False,True,False,False,True,False],[True,False,True,True,False,False,False,False],[False,True,False,True,True,True,False,False],[True,True,False,False,True,False,False,True],[False,False,False,True,False,True,True,True],[False,False,False,False,False,False,True,False]], dtype = "bool")#candidate|4916|(420, 8)|const|bool
call_4915 = relay.TupleGetItem(func_3816_call(relay.reshape(const_4916.astype('bool'), [840, 4])), 1)
call_4917 = relay.TupleGetItem(func_3818_call(relay.reshape(const_4916.astype('bool'), [840, 4])), 1)
output = relay.Tuple([call_4909,call_4915,const_4916,])
output2 = relay.Tuple([call_4910,call_4917,const_4916,])
func_4918 = relay.Function([], output)
mod['func_4918'] = func_4918
mod = relay.transform.InferType()(mod)
output = func_4918()
func_4919 = relay.Function([], output)
mutated_mod['func_4919'] = func_4919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_4965 = relay.TupleGetItem(func_139_call(), 0)
call_4966 = relay.TupleGetItem(func_140_call(), 0)
var_4971 = relay.var("var_4971", dtype = "float32", shape = (6, 11, 14))#candidate|4971|(6, 11, 14)|var|float32
bop_4972 = relay.logical_xor(call_4965.astype('int32'), relay.reshape(var_4971.astype('int32'), relay.shape_of(call_4965))) # shape=(6, 11, 14)
bop_4975 = relay.logical_xor(call_4966.astype('int32'), relay.reshape(var_4971.astype('int32'), relay.shape_of(call_4966))) # shape=(6, 11, 14)
output = relay.Tuple([bop_4972,])
output2 = relay.Tuple([bop_4975,])
func_4979 = relay.Function([var_4971,], output)
mod['func_4979'] = func_4979
mod = relay.transform.InferType()(mod)
mutated_mod['func_4979'] = func_4979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4980 = relay.var("var_4980", dtype = "float32", shape = (6, 11, 14))#candidate|4980|(6, 11, 14)|var|float32
func_4979_call = mutated_mod.get_global_var('func_4979')
call_4981 = func_4979_call(var_4980)
output = call_4981
func_4982 = relay.Function([var_4980], output)
mutated_mod['func_4982'] = func_4982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2072_call = mod.get_global_var('func_2072')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_4986 = relay.TupleGetItem(func_2072_call(), 1)
call_4987 = relay.TupleGetItem(func_2074_call(), 1)
func_772_call = mod.get_global_var('func_772')
func_773_call = mutated_mod.get_global_var('func_773')
call_4988 = relay.TupleGetItem(func_772_call(), 0)
call_4989 = relay.TupleGetItem(func_773_call(), 0)
output = relay.Tuple([call_4986,call_4988,])
output2 = relay.Tuple([call_4987,call_4989,])
func_4992 = relay.Function([], output)
mod['func_4992'] = func_4992
mod = relay.transform.InferType()(mod)
output = func_4992()
func_4993 = relay.Function([], output)
mutated_mod['func_4993'] = func_4993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_5009 = relay.TupleGetItem(func_3940_call(), 5)
call_5010 = relay.TupleGetItem(func_3941_call(), 5)
func_3669_call = mod.get_global_var('func_3669')
func_3671_call = mutated_mod.get_global_var('func_3671')
call_5015 = relay.TupleGetItem(func_3669_call(), 0)
call_5016 = relay.TupleGetItem(func_3671_call(), 0)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_5024 = relay.TupleGetItem(func_4423_call(), 0)
call_5025 = relay.TupleGetItem(func_4425_call(), 0)
output = relay.Tuple([call_5009,call_5015,call_5024,])
output2 = relay.Tuple([call_5010,call_5016,call_5025,])
func_5032 = relay.Function([], output)
mod['func_5032'] = func_5032
mod = relay.transform.InferType()(mod)
mutated_mod['func_5032'] = func_5032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5032_call = mutated_mod.get_global_var('func_5032')
call_5033 = func_5032_call()
output = call_5033
func_5034 = relay.Function([], output)
mutated_mod['func_5034'] = func_5034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_773_call = mutated_mod.get_global_var('func_773')
call_5145 = relay.TupleGetItem(func_772_call(), 0)
call_5146 = relay.TupleGetItem(func_773_call(), 0)
const_5147 = relay.const([[[4.964964,6.195906,6.744972,-4.953066,7.441528,-8.152795,-2.273740,9.044634,1.661999,2.054278,-1.547183,8.677016,1.647156,-6.069258],[1.019261,-0.718207,8.554200,9.210762,5.290749,-1.772374,-5.187226,9.784541,-0.543884,-4.394516,-9.549326,-4.154643,-5.855009,0.583632],[5.179485,2.170364,7.319890,5.946427,2.986100,-6.973654,-5.908437,1.863276,9.133467,7.189932,5.084774,4.609169,0.345085,2.626081],[-8.779473,-4.122190,-1.082984,-8.123990,6.196006,-1.776907,-1.721225,1.418284,8.281558,8.337921,8.785345,4.320665,3.288370,-1.306560],[-3.119689,-7.758104,-5.826623,-3.351326,-4.814634,7.907292,4.537080,-8.436039,-4.953901,-6.822365,3.338489,-5.015198,6.717867,9.133563],[-4.784434,0.806180,3.742318,2.396920,-1.752099,-3.033635,-5.507806,1.782317,-4.575204,-5.383319,2.228638,-8.098908,-7.154025,-8.813180],[-4.415291,-8.895441,1.499879,6.139863,-6.346249,1.703444,3.273449,1.869618,6.566937,1.064943,9.257081,-0.278827,-3.693054,3.758170],[7.235378,-7.282652,4.490407,-9.498361,7.761463,-1.117811,8.388155,-9.285687,5.590163,-2.805318,-8.471567,-2.903229,5.618659,9.216909],[-4.729866,4.528235,-0.476080,5.648118,-3.698396,-6.291030,-4.648438,0.642190,-5.300039,-7.337520,-9.768295,-9.986417,-6.969682,-9.818877],[7.603979,8.669913,-0.047440,4.757569,7.837373,-8.422542,2.954233,3.458153,5.431451,8.485325,-7.526723,-2.947532,-7.275739,-0.531421],[4.473430,3.731542,-5.007852,-0.439806,9.325862,5.739672,1.428805,-1.125525,-7.561373,-5.715075,0.495056,-5.389683,4.402131,-5.081482]],[[2.163038,-3.373142,7.334657,-8.174589,-9.913233,-0.012064,-4.881174,-1.676289,9.010459,-1.850196,-3.342646,-5.932183,-0.648563,-0.643172],[8.037640,-2.050108,1.406376,5.758913,-1.376396,-8.200959,5.175338,-8.756989,-5.940769,9.651394,6.117174,9.877170,-8.420976,1.296749],[-8.487735,-3.565588,-8.191743,2.888019,2.631096,-5.931466,-7.988484,-9.777133,3.506170,2.883837,-6.266646,-6.374129,4.966851,5.961138],[4.063278,-6.406273,-7.188173,4.085391,6.668048,-5.928531,4.403034,-2.731799,2.637474,2.843973,0.327550,-3.895724,3.627403,-9.722455],[0.745423,-4.427626,-7.515381,-3.449313,9.475775,-2.503762,-4.131535,2.177663,3.055279,9.782942,2.988813,-9.345875,-2.092603,-7.033073],[6.859123,-2.099856,-0.910782,6.886601,1.102717,-3.613583,3.959061,-7.015204,3.769349,9.947174,8.794724,-7.583382,-6.421072,-4.024434],[6.242675,-6.061369,7.963418,9.413589,-2.371258,-6.335335,0.369858,-8.978335,5.895023,-2.191833,7.171945,-2.724254,2.479388,0.651439],[9.000712,-2.226060,-5.385467,4.537251,3.850100,0.300771,1.487843,9.782269,-4.311558,2.420866,-7.710279,9.020245,1.278035,6.425746],[-8.199032,-6.598163,-4.974255,-0.414145,-0.502444,-1.941368,7.308589,8.955968,5.910834,9.508052,-4.251100,-2.609042,-2.557577,-8.115901],[3.148920,-6.954573,-1.953790,2.208786,9.497310,8.797020,3.119626,3.970276,-5.327739,2.848964,-2.544291,5.726084,6.870698,9.917021],[4.514575,1.067873,2.656750,-3.389297,3.255053,-8.685598,-9.268977,-9.659153,3.886294,-5.127241,-7.518893,-8.527172,-2.480914,5.343316]],[[3.877011,7.552407,2.622106,0.034330,9.032173,-5.402981,0.967841,0.128686,7.699226,0.810591,-1.998435,-2.144327,6.909831,4.763811],[-0.337278,2.597140,1.718758,9.188886,7.300655,-3.273207,-7.916978,3.743974,9.414547,0.848248,-8.340642,-9.765107,-6.754490,5.654860],[0.377882,7.070333,-2.883112,3.815659,-5.630951,-6.197764,2.535526,-2.385642,4.187247,7.558255,-0.636891,8.407946,5.966780,1.353556],[-4.228604,9.719893,4.832543,-0.061231,6.331709,-6.856730,-5.504475,5.959403,6.855515,7.587842,-7.468051,1.925146,-9.316581,6.637443],[-2.054196,3.575048,-7.577823,-3.437384,-0.624440,3.626686,-1.052659,0.259995,-9.988410,-2.219666,-0.836661,-0.709361,-9.141165,1.072486],[9.447274,-7.021913,-5.079290,-8.762392,-3.772684,-6.875971,0.301375,-6.468051,1.265033,-7.802767,4.725401,3.709848,3.180192,-2.228481],[-0.398067,-7.804228,-2.345961,5.891811,-2.570824,0.542683,9.081948,6.133110,2.696383,-6.086474,2.828827,-1.476691,-0.356225,-1.741028],[-4.775450,3.485240,5.055678,-0.104399,9.563408,-6.402801,0.922885,-6.355276,1.126141,-8.342368,-0.154680,-6.692978,1.103226,-6.199125],[-7.152265,0.591520,3.043097,3.054671,-4.069860,-9.519065,-3.028453,-4.614236,0.475362,-0.860640,-2.238994,3.829839,6.196587,8.258321],[6.370701,-1.828498,-7.702277,-3.357834,0.422563,-0.171115,1.193155,9.463447,2.686175,3.943926,-5.591926,-8.878813,-5.517214,8.171307],[4.415690,9.215222,-6.519591,-0.681804,0.419771,-7.172631,2.036614,7.904107,-1.764240,-8.954653,-8.644203,-2.251456,4.397076,2.320870]],[[-0.426447,7.045575,7.973771,-7.253246,5.130430,7.985958,2.030673,1.518742,-5.496730,6.730914,4.173858,5.018037,-8.023320,-3.891257],[-7.477577,2.069942,9.378842,-2.748140,7.163317,-6.756517,9.064661,-9.427631,-1.401785,6.776334,-2.466042,6.990354,-2.127369,7.876627],[-4.179857,-6.902911,9.953818,3.148021,1.469265,-6.763727,3.390827,0.166506,-3.660221,7.227461,3.700257,7.862099,-6.517460,4.338736],[0.370311,2.458487,-8.798658,-9.191263,2.366024,-7.596564,7.595276,-3.414680,-9.251914,-0.374620,7.836575,6.772070,-5.065353,-3.464247],[0.347709,-2.266890,-4.907322,-2.403687,6.589841,-5.203865,-4.583574,1.951151,0.557180,-9.262802,1.887699,-1.536480,2.278710,6.845526],[8.361485,-1.503988,2.152374,4.114385,-2.218018,1.504235,5.578400,-0.083410,-3.750237,1.573623,5.609774,7.626839,-7.973401,8.967512],[5.927017,-2.548967,-3.079026,0.212051,1.870149,9.489080,-3.729668,3.883605,3.228978,-2.650339,-6.930784,9.991602,4.717627,-5.167148],[8.988906,6.920608,1.085294,0.030366,-5.449409,8.095627,2.123647,9.549054,2.379761,4.965274,6.757571,8.673645,-7.266084,1.333774],[1.075546,2.095485,-8.310242,-7.593640,-3.292208,7.707811,-6.628075,-7.536189,-7.313298,-6.714382,2.994406,-0.401498,1.260757,-0.499026],[-8.137262,1.455976,9.225416,-8.540264,-6.670307,2.878912,-5.888149,2.022085,-4.057030,0.398178,-7.520286,-3.529143,3.150550,-8.653349],[-8.842047,-8.667009,-1.057940,9.104237,3.017494,3.357171,-8.380110,-4.406885,-9.531437,5.911674,-0.172062,7.412979,-2.003804,-6.545122]],[[-2.581726,-4.428983,0.943388,5.498447,1.266953,1.474649,1.197985,-5.719450,-0.007974,-9.677637,-0.289631,9.662626,-2.013516,6.456331],[-0.008520,2.495724,-4.749107,-5.034716,-0.331783,-1.288021,-9.667632,-5.902536,-5.540161,6.584852,-6.996883,8.559923,0.433116,5.626013],[6.347698,6.323106,-1.422723,-5.042981,-4.536998,-3.823520,2.992533,-5.190810,-1.589687,1.689620,8.268412,9.075467,-8.948086,0.757610],[9.420796,-3.227271,7.222783,5.773974,-1.518006,4.496730,-0.641581,1.026243,-6.701296,8.736155,8.581276,6.429020,1.881838,-1.968264],[-8.546154,8.384275,-2.846493,-2.731178,4.934771,9.577389,-6.834449,8.237230,-7.691345,-7.807027,-8.231841,5.626137,-1.961444,5.448100],[-8.054054,9.488073,2.764280,-0.273978,-2.096014,3.625256,-2.720146,1.506810,8.515388,6.868885,-5.219644,-0.365211,0.404440,-9.572331],[9.204586,7.302099,1.937432,-9.239292,-9.834550,-9.098487,7.847868,-1.586539,-7.917865,-1.184137,-2.179812,3.846080,1.946012,-6.365288],[7.323252,-9.570652,-8.433656,-8.255288,6.042664,-3.323601,-1.803966,-9.450606,-2.304386,5.506567,3.662270,5.155650,-1.919439,-6.214409],[-2.220171,-3.197146,6.261189,-0.948060,1.150477,7.826649,9.164564,-5.558647,-2.214584,-9.934495,1.349331,9.466735,5.012058,6.600990],[1.676831,-2.858456,-2.963644,0.288986,0.735222,5.961955,2.057707,5.585975,-0.935732,-5.873365,7.231737,4.397487,-1.026387,6.850003],[4.126965,7.922574,-5.227510,0.778504,1.461374,-1.704036,-3.378918,0.493277,-1.687700,0.980354,-3.455711,4.947378,-1.669374,-3.861734]],[[4.006828,-0.833766,-2.941123,3.625869,6.601730,4.835404,7.433813,-5.456474,2.485136,4.303995,-3.622647,-7.254943,-4.839235,-6.187849],[4.184661,-7.916042,-9.503760,6.808262,-8.090778,2.074667,8.406859,-5.976911,-8.359425,1.763784,-8.075997,2.782537,0.021087,3.654098],[1.815388,-0.194000,7.687049,8.132584,1.231805,-0.119179,3.227863,-2.932716,1.888233,-4.893382,4.024999,4.801192,-0.027285,-1.205580],[8.502300,-7.701183,-3.946571,8.131725,4.620245,3.778620,3.077356,-9.854298,-1.875632,-9.928840,-6.367686,6.435990,-9.589178,3.489500],[-6.862547,-7.453290,-8.691308,-5.966495,5.478865,-2.588432,4.020296,5.969237,7.429722,5.844406,-3.492556,2.872526,-0.984956,-9.312955],[-1.644213,-4.446969,-5.649398,-9.198567,4.407360,0.815287,-2.327899,3.800167,9.973230,-8.677677,-5.072829,-7.481477,0.930372,7.518756],[4.802002,-6.683309,-5.138348,-8.531048,3.765059,3.311447,2.507516,2.117290,-6.998965,4.569324,-0.547836,-3.960340,-3.813697,1.444178],[0.923360,6.755199,1.756328,-0.913712,-0.284704,-3.060678,9.695083,-5.478675,-5.460541,-6.225884,-2.746605,-1.511802,5.822824,-1.296230],[-8.164466,-7.507155,-3.255847,-6.606084,4.298845,9.643861,9.503404,-7.970510,4.171375,2.941190,-2.748726,-4.061040,-6.424268,5.108222],[-2.897504,6.436153,-2.070026,-5.509056,8.827505,-6.864166,5.219161,8.072408,2.985378,1.991404,-4.493666,-0.959459,-8.899828,-8.628111],[8.565308,-9.758595,4.895905,-0.674758,8.290740,-2.790322,9.199927,-9.152961,0.579677,7.672311,5.189281,6.877791,-1.850074,-5.735274]]], dtype = "float32")#candidate|5147|(6, 11, 14)|const|float32
bop_5148 = relay.divide(call_5145.astype('float64'), relay.reshape(const_5147.astype('float64'), relay.shape_of(call_5145))) # shape=(6, 11, 14)
bop_5151 = relay.divide(call_5146.astype('float64'), relay.reshape(const_5147.astype('float64'), relay.shape_of(call_5146))) # shape=(6, 11, 14)
output = bop_5148
output2 = bop_5151
func_5152 = relay.Function([], output)
mod['func_5152'] = func_5152
mod = relay.transform.InferType()(mod)
output = func_5152()
func_5153 = relay.Function([], output)
mutated_mod['func_5153'] = func_5153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3591_call = mod.get_global_var('func_3591')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_5154 = func_3591_call()
call_5155 = func_3591_call()
output = relay.Tuple([call_5154,])
output2 = relay.Tuple([call_5155,])
func_5163 = relay.Function([], output)
mod['func_5163'] = func_5163
mod = relay.transform.InferType()(mod)
mutated_mod['func_5163'] = func_5163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mutated_mod.get_global_var('func_5163')
call_5164 = func_5163_call()
output = call_5164
func_5165 = relay.Function([], output)
mutated_mod['func_5165'] = func_5165
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5214 = relay.const([[[1.805964,9.084790,1.198560,-2.797081,4.920155,-7.773938,-8.604166,-7.713343,9.856747],[-7.341007,7.671722,-1.107470,3.686130,-5.953624,6.772482,-1.114524,6.822069,8.353940],[6.768124,-0.508316,-0.012592,-4.187939,-5.457228,-4.095025,-3.111609,8.005209,0.585906],[5.484917,-4.437963,4.317423,-4.300928,-7.536717,-5.305788,-3.554075,4.155924,-9.929283],[9.315690,-3.232276,4.800344,5.982771,-2.646643,-6.656341,-0.040865,-2.367901,1.213618],[-4.391622,1.901287,3.282285,-0.090767,8.966562,5.927240,9.104939,-2.217574,-2.810565],[6.751361,6.803911,-5.443346,9.435537,-1.524330,2.771438,-3.863112,9.706752,-0.713840],[0.808594,-3.664373,-0.088735,-9.334603,-7.561724,-0.100366,0.379484,-2.124420,0.947694],[-3.859140,5.012737,-6.647234,-8.939936,-6.311878,0.518472,0.272163,6.897183,9.149213],[3.142108,-6.297068,1.949308,-2.513268,-6.634293,0.311959,1.630090,-0.462543,-4.080632],[-7.871012,4.089390,-8.084641,7.107910,4.974934,3.722054,5.559354,8.807979,-3.865356],[-2.847711,1.910371,5.577239,-8.542067,-0.202767,4.981586,9.811769,9.942144,-8.112288],[8.153720,3.455921,8.479652,-6.836369,7.897230,-6.684888,-9.600660,-2.250488,8.540129],[-3.543753,7.700027,-4.321575,-5.198448,-3.418775,3.772128,3.502686,-8.920641,7.169447],[-3.534753,-2.683683,3.926630,1.359762,9.550436,9.855696,-4.058444,-0.833145,-9.996207]],[[-7.249600,6.565098,8.392033,-6.595403,5.326604,8.600937,-4.840376,-8.339722,-8.586934],[5.580214,4.304209,3.963329,4.094973,2.258758,9.496244,-0.841467,-8.006401,-2.184498],[-0.371169,-7.578005,-6.412080,1.753560,7.478043,4.693343,1.110358,-4.599592,-1.806661],[-4.548551,1.266320,4.824284,5.622079,-0.146370,7.421505,1.989444,2.907353,-3.219165],[-8.272932,-6.483599,2.170178,8.889028,-5.758846,-5.356784,4.653788,-0.133323,-1.926028],[-2.724323,-1.564534,6.292767,4.047165,3.022751,-8.025557,-4.383855,0.336351,2.667713],[1.890642,-3.132885,-4.538047,-0.984572,7.039202,-9.941579,-7.971285,9.599413,2.579381],[4.007422,-1.674116,-9.563505,-1.143675,6.193154,4.682512,-9.291268,1.106027,7.544313],[1.987596,7.813153,-6.735837,-6.901714,-6.999147,2.166804,-3.236587,7.571731,-0.354811],[-7.676329,-5.847624,-5.587625,-0.165895,-4.849949,1.164286,8.131427,0.315256,8.768572],[-3.885527,5.268545,-1.318216,-3.365183,5.669266,7.954465,9.942356,-6.376407,7.300740],[-6.767207,7.414869,5.834157,-9.762113,-0.782434,6.517334,8.238495,1.590391,4.032877],[-9.224364,3.541856,6.445159,0.863260,-4.953164,-7.806249,-6.229575,1.767923,-3.589313],[8.220164,5.796386,-1.018144,6.988404,-9.740010,-6.047611,-0.766410,3.959061,-3.724866],[-7.616837,-3.945203,2.591503,-0.870289,4.746297,-8.510292,-4.979187,-1.048373,3.322493]],[[2.335238,-5.976766,2.130148,0.148302,5.129136,5.992599,9.005512,2.540814,-4.683347],[-6.888411,8.995856,-0.486913,7.470370,6.979656,-0.217767,5.986698,0.935807,9.033842],[-5.159552,2.754758,-3.881444,-5.389277,-9.601646,7.408339,-3.318945,-2.380196,7.655786],[6.180951,5.933467,-7.500941,2.553580,9.546117,2.111675,-5.917591,2.739688,-1.621160],[-1.910083,0.300225,-9.167829,-5.561422,5.081752,-9.347964,4.984040,9.598945,-6.292971],[2.748406,9.866770,6.094243,2.119031,5.672604,2.020422,-8.010254,-9.970963,-8.586763],[-9.220583,7.813205,4.523181,-6.518437,-3.465518,-8.005855,0.734772,-4.506234,-5.804217],[-7.432594,9.440304,6.041705,6.775111,0.976047,5.696061,-7.968518,-1.006244,1.307527],[-3.787719,-8.395654,-9.615532,1.647516,-4.070151,-1.843942,9.553550,8.645021,-7.336343],[0.245638,-0.572479,7.817977,8.694138,-4.005801,-5.176566,5.493492,5.235163,4.962220],[-9.735080,-7.598612,-1.249156,-7.279773,6.383360,3.565077,-6.411984,4.002959,0.051189],[-2.122376,-1.318983,-9.236225,5.888131,0.697222,2.130713,-7.204971,-5.596763,7.271111],[8.814688,-9.659153,0.616204,1.744614,7.533333,-3.929209,7.955630,0.355572,4.126218],[-8.484454,3.809792,-8.354525,-2.895378,1.903965,6.559439,-5.274014,-6.236133,8.191799],[-6.642891,1.148515,8.170447,-9.222407,-7.705272,-0.701063,1.302909,-7.438485,7.979273]],[[3.306421,1.412607,-7.266274,2.071046,-2.166610,0.401245,1.285330,-1.310713,8.285203],[2.541848,-7.536506,5.896384,1.969697,-8.131890,-4.147259,-4.368970,4.337777,-4.759950],[-4.004768,-6.790018,5.858934,-8.080333,7.600697,6.576856,-0.884991,-3.156909,-1.029830],[-2.458986,-5.839628,-1.400269,-6.529402,1.559008,-0.722570,0.613485,6.454893,1.397188],[7.747528,-2.485024,-3.366182,-1.724901,-6.452861,-4.800116,-2.471334,-2.701093,6.937122],[4.042273,-7.827692,8.731719,-0.148145,2.354356,3.031848,-9.799500,6.921108,3.217442],[-3.148780,-2.490079,1.113891,-1.453704,3.674314,-7.343637,7.662802,-0.517007,-6.902221],[-8.798598,-9.030032,1.873177,3.369841,9.087389,-3.303068,-5.532992,-4.831728,8.212337],[6.202765,0.928436,-0.440375,8.877358,-9.142610,5.888329,-0.222683,1.934309,-2.828567],[-2.911678,3.294220,-8.194447,-6.922363,-0.283677,1.756921,-0.859767,6.251658,-7.762043],[-2.411684,5.577759,9.943844,7.422409,3.011969,7.305937,0.938763,5.020425,7.012449],[-2.698490,-7.017837,-9.574953,-1.376833,5.884160,-5.471614,-6.106515,5.242832,4.053760],[-4.379642,-8.924520,-5.427831,6.524893,1.425638,-0.523281,-2.435361,8.657208,4.125328],[5.490084,-6.344907,-6.557067,-8.164369,4.934171,-1.560659,-3.143950,-5.027568,-8.358366],[-9.268331,-3.707801,-8.752573,-5.261668,-7.937029,-1.939177,3.153898,3.361078,-4.312564]],[[2.847722,-1.659724,-9.371043,9.827239,-5.359887,-1.971183,-8.549939,-8.718783,-2.438384],[7.504353,-0.879747,-2.958005,-6.686440,-9.958234,-7.546795,6.708679,4.383145,-8.973870],[-4.588932,-6.585812,7.125551,-7.659893,-9.659860,2.593632,2.184130,0.276648,-6.026111],[-5.149770,-8.905922,-8.754847,4.719943,-3.741203,-2.894881,8.455973,-0.047923,8.957691],[-3.147279,-9.297357,-5.591604,3.560326,-9.973063,4.576436,0.367128,8.994111,-0.786659],[-8.321778,4.746698,-8.676938,6.181733,2.039832,-3.686694,-7.959174,-2.621633,9.166080],[-6.950799,-0.301224,0.927270,9.636773,-2.995374,-8.298252,-5.379886,-3.229059,6.839995],[1.689106,-0.918089,0.929325,3.756515,9.046136,-5.587475,3.084734,-8.467697,6.527017],[8.734423,-5.898631,-2.087318,6.044498,0.923741,-8.281703,-0.301705,1.295723,-8.338685],[3.004561,-9.427152,2.091055,9.129719,5.073647,6.091312,-1.713771,5.580175,-4.411597],[0.636159,6.223361,9.373137,-1.079514,1.191714,6.660558,-1.162528,-2.691022,5.027721],[7.523883,-5.489918,-1.597910,6.740466,-5.077671,9.147804,-8.460265,-5.943697,0.792061],[-3.790621,-8.882760,-0.844301,4.365543,-1.978773,2.625014,-6.873021,5.788335,-0.529183],[-3.687268,-4.724209,-2.278268,4.134555,-6.979971,-5.176494,0.783434,3.380242,9.697251],[0.936944,-0.835353,-3.714937,-8.277863,-5.775725,9.797172,7.071287,0.610737,-2.690195]],[[-9.781733,-4.304621,-9.006752,-0.735720,5.288460,2.935867,3.818630,-1.865632,-9.412556],[-7.748721,2.091804,-2.005208,8.846243,-9.904176,8.132423,-5.643232,-5.866937,4.169676],[-1.463529,-2.562058,1.934825,-2.730259,7.364682,2.600324,8.938319,-2.831368,-9.983503],[7.626134,-1.708161,-7.109857,-6.406625,0.763173,-4.678522,8.666608,0.526287,-7.137530],[9.597167,7.021929,3.729614,2.761197,-9.135617,3.027122,-0.692656,-6.995779,-5.478584],[9.077601,-7.351122,0.731011,2.915358,4.933792,1.796108,8.098365,-5.609511,8.113604],[6.705502,-2.983644,-4.248759,0.082270,-5.755151,3.036206,-7.106598,6.330942,-8.088239],[7.221831,-1.039154,-4.759063,6.591109,-5.406779,-8.332649,7.764921,-2.430540,-3.215764],[-5.115646,-4.142051,3.463855,1.476354,-0.392272,-1.219333,-5.903869,-5.719186,-3.087847],[-8.024097,-6.853925,4.759448,-9.599317,6.473955,-8.140297,3.654995,6.606591,7.091725],[3.118646,-4.555730,-1.449655,-7.639566,1.814632,5.910760,7.322595,4.941797,-9.949549],[1.859482,2.012625,-8.251318,-6.254999,-8.386720,0.570477,-9.070457,7.360868,-9.713748],[-2.493042,-6.357199,9.938377,6.013674,5.294715,-7.998347,-5.821750,-9.862713,-1.462714],[4.619998,-9.870283,-2.435738,-2.155515,-3.225207,-4.605789,7.703115,-1.329227,-5.486193],[8.219388,-2.634374,-0.906940,-6.519913,-2.290562,-5.392766,9.215641,2.135799,-7.479355]],[[4.330401,0.793422,-8.815399,-7.388833,-6.156803,5.974035,-2.046959,-8.713399,4.508016],[-4.346610,5.513232,-7.476783,3.877426,-1.621023,4.004901,0.668352,0.488196,-1.145283],[-1.305551,3.623411,0.196310,7.690221,5.076971,2.097931,-0.767584,-2.096135,-1.118798],[2.041101,1.968651,5.987415,-4.104067,3.832737,7.402101,6.092344,7.728786,-1.423514],[4.343630,-9.395534,7.412674,7.791642,9.283259,-4.802006,-6.011173,-9.664685,9.248953],[-6.674033,-8.145432,1.684975,-3.424788,3.226038,0.731699,-3.180016,9.012261,0.580288],[-2.056006,-0.775534,-7.280864,-1.983592,-4.519533,-8.556829,-8.516417,-3.490140,3.700922],[-2.981731,-5.012086,5.075059,0.187708,4.919333,-3.277477,0.912667,3.795685,7.358504],[-6.332333,9.555087,-6.072037,-8.584395,-0.347822,3.648513,-2.514076,0.415912,1.910358],[-2.069692,9.038578,6.038933,-5.018133,-7.283820,-7.577754,-1.770680,4.364613,4.351759],[2.874704,-3.117387,-8.900179,3.181528,7.503470,-1.612122,8.346136,5.256820,-7.195600],[8.015281,-2.444452,-6.402991,0.201755,5.989168,-0.228812,-8.000441,1.746570,-0.593794],[-3.589520,-6.123252,-4.788490,-9.565216,-1.194712,-1.429534,-4.228384,0.250639,-6.072930],[9.032850,-3.910764,-8.018871,3.154545,6.965717,-9.312863,7.981937,5.803865,-7.460692],[-8.491872,-6.597809,9.403032,0.692166,-5.110566,-3.405008,-8.318977,-7.789942,-2.283917]],[[-5.528830,8.081107,-4.481332,5.307716,-1.226549,-8.748153,-7.525688,7.333359,4.295418],[-9.008805,-5.638740,7.357404,9.325121,-0.549142,1.763606,-4.364140,-4.190935,9.446969],[7.717559,-3.220230,7.646455,7.146205,2.825543,-1.586135,1.727340,3.625362,8.561727],[-2.430237,6.747679,-3.150155,8.841851,-2.727922,-6.402170,5.397265,-9.988020,3.801551],[-6.398560,2.925234,5.650133,-8.902297,-8.992086,-7.800318,-9.833773,-0.981715,5.266227],[-0.025126,-0.357084,0.747731,-2.361594,-9.474677,-2.629479,0.472518,-3.967222,0.239103],[-6.638402,-4.292790,6.801778,8.454205,5.223823,6.818267,-2.347567,-7.789555,-0.170649],[-6.241631,-3.817357,2.765106,-9.827194,1.125965,-3.464385,5.543287,-3.228606,3.470123],[-7.628336,7.756351,1.790086,2.503510,2.204418,-4.744995,9.889170,-9.942206,5.748188],[-3.284474,-7.646768,7.268261,-9.729865,-2.701087,-3.625537,3.039173,-4.787790,1.829960],[6.450124,5.184934,-0.661237,9.958418,-3.912057,6.947697,9.265634,-3.575603,8.238952],[-6.468602,-7.125617,-2.499303,4.397045,1.167229,-3.646158,0.131865,5.076697,-4.546305],[-2.344663,5.478685,-4.792579,-1.024248,6.741802,2.563026,-7.243485,-7.118491,-7.301873],[-3.649600,-7.111423,7.059058,-7.182175,8.415239,-0.355956,0.746814,7.144466,4.694166],[3.721286,4.610809,-4.894277,7.675006,3.388129,7.844718,-4.011285,0.601738,-8.260494]],[[9.341838,7.673180,-4.718543,2.224545,-1.267856,1.498022,-9.203843,5.697919,5.430708],[-0.737811,4.216900,-8.950435,-1.423302,-6.377705,-0.650058,-0.177151,8.524061,-4.630585],[7.798738,0.337057,-6.043990,-2.372192,6.861395,-5.618487,4.344695,9.002836,-5.751338],[-5.099927,-8.334369,-9.064146,1.699334,-6.300706,-6.035444,-2.737169,-4.984297,5.663833],[-3.645735,3.131940,-7.152680,-5.234945,4.044891,-6.452755,-7.940437,-1.723707,6.733288],[4.757722,6.656986,2.900067,-2.497141,-2.875018,1.315788,7.014810,1.760253,8.973789],[-4.523971,0.391514,2.917338,-7.611188,-4.484079,-6.403317,6.725999,-9.114982,2.628861],[0.412050,-2.409236,5.220738,3.954905,6.321518,3.891839,-2.268761,9.820897,6.929770],[3.794192,-7.320748,-9.258279,5.979643,-1.604911,0.423446,0.855367,7.949603,-4.362033],[2.447015,6.223833,-7.422644,7.602847,-1.422951,-9.638618,9.532272,4.218878,-0.094722],[-3.675492,-1.913612,1.541600,9.608096,-7.275137,-8.238369,7.409030,-5.566899,4.076576],[1.108131,-4.013293,0.954047,-7.851780,-3.836940,-0.542301,7.415031,4.989208,7.122268],[9.441618,7.160530,4.280777,-8.149416,-2.116560,1.571667,6.140278,-6.832629,-0.689970],[2.070468,4.193357,5.802117,-0.302950,-0.568303,-4.326591,-9.141609,-9.186599,2.986126],[-8.091787,-8.905301,-3.379386,-2.248332,8.196179,2.834033,-6.117509,-2.943274,3.369399]],[[4.768926,-9.305805,0.133884,3.836326,0.708972,1.946733,7.733594,-3.727140,-0.877168],[8.462304,2.164757,-0.671821,-6.910850,9.605081,-1.267003,-4.485719,-1.111190,9.318318],[6.765965,2.196935,0.452389,2.304564,-6.469376,-0.479575,0.164021,0.938159,-5.374720],[5.363577,-8.014226,0.052623,0.549453,-0.665070,0.478997,4.519253,-0.287305,9.025320],[-8.279806,-5.752697,-3.511700,5.414478,-9.863116,-5.132259,-5.164556,-9.126870,-6.005760],[6.988521,6.752918,9.041994,-7.654165,-2.151646,-4.715119,-8.816143,-9.656203,7.681948],[9.609663,-1.850584,-0.744952,6.696343,7.716547,8.641581,2.907112,4.979189,1.319778],[4.526207,-8.747562,-6.724116,4.284922,8.509809,-5.636990,8.123570,6.073747,1.011253],[-2.256293,3.698491,-8.811617,-6.652766,1.119088,1.098296,-3.536625,-9.138045,-9.115849],[4.943442,5.747239,5.994012,-8.505599,-9.552331,8.788533,7.342712,-3.236002,9.531890],[4.374756,-0.901914,4.226825,5.730279,2.804346,-9.389809,9.100164,4.871991,-1.336951],[-1.929603,7.183013,3.361972,-7.784969,6.964004,6.560661,-6.257718,-4.112783,6.477517],[-1.932441,4.992242,5.126059,8.030447,-9.562400,1.157579,4.927765,8.032126,-9.535435],[3.915259,0.762551,2.013587,9.240459,1.656415,6.832130,-6.423067,-7.019457,3.842473],[3.713227,-5.470670,7.430584,1.406003,2.493881,-3.258023,3.661703,-1.236306,-4.672349]]], dtype = "float32")#candidate|5214|(10, 15, 9)|const|float32
uop_5215 = relay.log(const_5214.astype('float32')) # shape=(10, 15, 9)
output = relay.Tuple([uop_5215,])
output2 = relay.Tuple([uop_5215,])
func_5227 = relay.Function([], output)
mod['func_5227'] = func_5227
mod = relay.transform.InferType()(mod)
output = func_5227()
func_5228 = relay.Function([], output)
mutated_mod['func_5228'] = func_5228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5231 = relay.var("var_5231", dtype = "float32", shape = (9, 10, 11))#candidate|5231|(9, 10, 11)|var|float32
uop_5232 = relay.asinh(var_5231.astype('float32')) # shape=(9, 10, 11)
output = uop_5232
output2 = uop_5232
func_5244 = relay.Function([var_5231,], output)
mod['func_5244'] = func_5244
mod = relay.transform.InferType()(mod)
mutated_mod['func_5244'] = func_5244
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5245 = relay.var("var_5245", dtype = "float32", shape = (9, 10, 11))#candidate|5245|(9, 10, 11)|var|float32
func_5244_call = mutated_mod.get_global_var('func_5244')
call_5246 = func_5244_call(var_5245)
output = call_5246
func_5247 = relay.Function([var_5245], output)
mutated_mod['func_5247'] = func_5247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4604_call = mod.get_global_var('func_4604')
func_4606_call = mutated_mod.get_global_var('func_4606')
call_5288 = func_4604_call()
call_5289 = func_4604_call()
output = relay.Tuple([call_5288,])
output2 = relay.Tuple([call_5289,])
func_5290 = relay.Function([], output)
mod['func_5290'] = func_5290
mod = relay.transform.InferType()(mod)
mutated_mod['func_5290'] = func_5290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5290_call = mutated_mod.get_global_var('func_5290')
call_5291 = func_5290_call()
output = call_5291
func_5292 = relay.Function([], output)
mutated_mod['func_5292'] = func_5292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2173_call = mod.get_global_var('func_2173')
func_2174_call = mutated_mod.get_global_var('func_2174')
call_5319 = relay.TupleGetItem(func_2173_call(), 1)
call_5320 = relay.TupleGetItem(func_2174_call(), 1)
func_2072_call = mod.get_global_var('func_2072')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_5330 = relay.TupleGetItem(func_2072_call(), 0)
call_5331 = relay.TupleGetItem(func_2074_call(), 0)
uop_5333 = relay.sqrt(call_5319.astype('float32')) # shape=(6, 11, 14)
uop_5335 = relay.sqrt(call_5320.astype('float32')) # shape=(6, 11, 14)
func_3173_call = mod.get_global_var('func_3173')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_5338 = relay.TupleGetItem(func_3173_call(), 0)
call_5339 = relay.TupleGetItem(func_3174_call(), 0)
output = relay.Tuple([call_5330,uop_5333,call_5338,])
output2 = relay.Tuple([call_5331,uop_5335,call_5339,])
func_5341 = relay.Function([], output)
mod['func_5341'] = func_5341
mod = relay.transform.InferType()(mod)
output = func_5341()
func_5342 = relay.Function([], output)
mutated_mod['func_5342'] = func_5342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_5357 = relay.TupleGetItem(func_1202_call(), 1)
call_5358 = relay.TupleGetItem(func_1204_call(), 1)
output = call_5357
output2 = call_5358
func_5359 = relay.Function([], output)
mod['func_5359'] = func_5359
mod = relay.transform.InferType()(mod)
output = func_5359()
func_5360 = relay.Function([], output)
mutated_mod['func_5360'] = func_5360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4331_call = mod.get_global_var('func_4331')
func_4332_call = mutated_mod.get_global_var('func_4332')
call_5361 = relay.TupleGetItem(func_4331_call(), 0)
call_5362 = relay.TupleGetItem(func_4332_call(), 0)
output = relay.Tuple([call_5361,])
output2 = relay.Tuple([call_5362,])
func_5376 = relay.Function([], output)
mod['func_5376'] = func_5376
mod = relay.transform.InferType()(mod)
mutated_mod['func_5376'] = func_5376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5376_call = mutated_mod.get_global_var('func_5376')
call_5377 = func_5376_call()
output = call_5377
func_5378 = relay.Function([], output)
mutated_mod['func_5378'] = func_5378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5165_call = mutated_mod.get_global_var('func_5165')
call_5397 = relay.TupleGetItem(func_5163_call(), 0)
call_5398 = relay.TupleGetItem(func_5165_call(), 0)
func_4992_call = mod.get_global_var('func_4992')
func_4993_call = mutated_mod.get_global_var('func_4993')
call_5399 = relay.TupleGetItem(func_4992_call(), 0)
call_5400 = relay.TupleGetItem(func_4993_call(), 0)
output = relay.Tuple([call_5397,call_5399,])
output2 = relay.Tuple([call_5398,call_5400,])
func_5407 = relay.Function([], output)
mod['func_5407'] = func_5407
mod = relay.transform.InferType()(mod)
mutated_mod['func_5407'] = func_5407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5407_call = mutated_mod.get_global_var('func_5407')
call_5408 = func_5407_call()
output = call_5408
func_5409 = relay.Function([], output)
mutated_mod['func_5409'] = func_5409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_787_call = mod.get_global_var('func_787')
func_789_call = mutated_mod.get_global_var('func_789')
call_5416 = relay.TupleGetItem(func_787_call(), 0)
call_5417 = relay.TupleGetItem(func_789_call(), 0)
func_4604_call = mod.get_global_var('func_4604')
func_4606_call = mutated_mod.get_global_var('func_4606')
call_5428 = func_4604_call()
call_5429 = func_4604_call()
func_5032_call = mod.get_global_var('func_5032')
func_5034_call = mutated_mod.get_global_var('func_5034')
call_5432 = relay.TupleGetItem(func_5032_call(), 1)
call_5433 = relay.TupleGetItem(func_5034_call(), 1)
func_772_call = mod.get_global_var('func_772')
func_773_call = mutated_mod.get_global_var('func_773')
call_5438 = relay.TupleGetItem(func_772_call(), 0)
call_5439 = relay.TupleGetItem(func_773_call(), 0)
output = relay.Tuple([call_5416,call_5428,call_5432,call_5438,])
output2 = relay.Tuple([call_5417,call_5429,call_5433,call_5439,])
func_5474 = relay.Function([], output)
mod['func_5474'] = func_5474
mod = relay.transform.InferType()(mod)
output = func_5474()
func_5475 = relay.Function([], output)
mutated_mod['func_5475'] = func_5475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1506_call = mutated_mod.get_global_var('func_1506')
call_5498 = relay.TupleGetItem(func_1505_call(), 0)
call_5499 = relay.TupleGetItem(func_1506_call(), 0)
output = call_5498
output2 = call_5499
func_5503 = relay.Function([], output)
mod['func_5503'] = func_5503
mod = relay.transform.InferType()(mod)
output = func_5503()
func_5504 = relay.Function([], output)
mutated_mod['func_5504'] = func_5504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2106_call = mod.get_global_var('func_2106')
func_2107_call = mutated_mod.get_global_var('func_2107')
call_5509 = relay.TupleGetItem(func_2106_call(), 1)
call_5510 = relay.TupleGetItem(func_2107_call(), 1)
func_2866_call = mod.get_global_var('func_2866')
func_2868_call = mutated_mod.get_global_var('func_2868')
call_5517 = relay.TupleGetItem(func_2866_call(), 2)
call_5518 = relay.TupleGetItem(func_2868_call(), 2)
func_2759_call = mod.get_global_var('func_2759')
func_2763_call = mutated_mod.get_global_var('func_2763')
call_5519 = relay.TupleGetItem(func_2759_call(relay.reshape(call_5517.astype('uint16'), [420, 8]), relay.reshape(call_5517.astype('uint16'), [420, 8]), ), 3)
call_5520 = relay.TupleGetItem(func_2763_call(relay.reshape(call_5517.astype('uint16'), [420, 8]), relay.reshape(call_5517.astype('uint16'), [420, 8]), ), 3)
output = relay.Tuple([call_5509,call_5517,call_5519,])
output2 = relay.Tuple([call_5510,call_5518,call_5520,])
func_5533 = relay.Function([], output)
mod['func_5533'] = func_5533
mod = relay.transform.InferType()(mod)
mutated_mod['func_5533'] = func_5533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5533_call = mutated_mod.get_global_var('func_5533')
call_5534 = func_5533_call()
output = call_5534
func_5535 = relay.Function([], output)
mutated_mod['func_5535'] = func_5535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4331_call = mod.get_global_var('func_4331')
func_4332_call = mutated_mod.get_global_var('func_4332')
call_5553 = relay.TupleGetItem(func_4331_call(), 0)
call_5554 = relay.TupleGetItem(func_4332_call(), 0)
output = call_5553
output2 = call_5554
func_5557 = relay.Function([], output)
mod['func_5557'] = func_5557
mod = relay.transform.InferType()(mod)
mutated_mod['func_5557'] = func_5557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5557_call = mutated_mod.get_global_var('func_5557')
call_5558 = func_5557_call()
output = call_5558
func_5559 = relay.Function([], output)
mutated_mod['func_5559'] = func_5559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_5665 = func_2211_call()
call_5666 = func_2211_call()
output = call_5665
output2 = call_5666
func_5714 = relay.Function([], output)
mod['func_5714'] = func_5714
mod = relay.transform.InferType()(mod)
mutated_mod['func_5714'] = func_5714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5714_call = mutated_mod.get_global_var('func_5714')
call_5715 = func_5714_call()
output = call_5715
func_5716 = relay.Function([], output)
mutated_mod['func_5716'] = func_5716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5165_call = mutated_mod.get_global_var('func_5165')
call_5764 = relay.TupleGetItem(func_5163_call(), 0)
call_5765 = relay.TupleGetItem(func_5165_call(), 0)
uop_5766 = relay.asin(call_5764.astype('float64')) # shape=(420, 8)
uop_5768 = relay.asin(call_5765.astype('float64')) # shape=(420, 8)
func_3840_call = mod.get_global_var('func_3840')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_5775 = func_3840_call()
call_5776 = func_3840_call()
output = relay.Tuple([uop_5766,call_5775,])
output2 = relay.Tuple([uop_5768,call_5776,])
func_5781 = relay.Function([], output)
mod['func_5781'] = func_5781
mod = relay.transform.InferType()(mod)
output = func_5781()
func_5782 = relay.Function([], output)
mutated_mod['func_5782'] = func_5782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4604_call = mod.get_global_var('func_4604')
func_4606_call = mutated_mod.get_global_var('func_4606')
call_5804 = func_4604_call()
call_5805 = func_4604_call()
output = relay.Tuple([call_5804,])
output2 = relay.Tuple([call_5805,])
func_5820 = relay.Function([], output)
mod['func_5820'] = func_5820
mod = relay.transform.InferType()(mod)
output = func_5820()
func_5821 = relay.Function([], output)
mutated_mod['func_5821'] = func_5821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2866_call = mod.get_global_var('func_2866')
func_2868_call = mutated_mod.get_global_var('func_2868')
call_5833 = relay.TupleGetItem(func_2866_call(), 0)
call_5834 = relay.TupleGetItem(func_2868_call(), 0)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_5843 = func_2211_call()
call_5844 = func_2211_call()
func_2759_call = mod.get_global_var('func_2759')
func_2763_call = mutated_mod.get_global_var('func_2763')
const_5873 = relay.const([7,-6,5,9,6,10,7,-6,4,-6,3,-9,9,7,2,-9,9,-5,1,-4,5,3,-3,-2,1,7,3,4,5,-2,-7,-7,6,-1,-3,6,-10,-10,5,1,2,-2,2,-7,-5,-6,-1,1,5,6,8,6,8,10,-9,-1,-8,6,-7,1,-1,6,-9,9,8,2,5,3,-5,1,5,7,-7,5,5,7,2,9,-2,-3,-4,-6,2,-6,-2,3,1,1,4,-1,2,6,-3,5,-3,-8,3,8,3,2,-1,5,8,9,3,-2,9,-1,5,10,2,7,-1,-1,-8,-2,-2,10,-4,-2,8,4,-4,-2,8,-6,-9,6,-7,6,1,-4,-6,1,-1,7,-8,7,-5,-10,-10,-3,-1,-10,-7,-6,4,-1,2,8,-6,-5,5,6,-2,3,5,10,7,6,6,-2,10,9,-5,7,2,-8,3,-9,2,-6,7,3,-8,8,3,-4,-3,-6,10,2,7,-10,-3,7,2,2,-1,-3,-8,-7,-9,3,-4,2,4,7,-3,-2,-8,2,4,7,-1,-6,-1,7,4,4,2,-1,8,-10,4,7,-2,-2,-5,2,1,-4,-3,-4,2,4,-4,2,2,4,3,10,4,-2,2,4,3,8,10,10,2,8,10,9,-2,-8,8,-2,1,-1,9,-6,3,6,-6,5,-2,-3,3,-6,8,-9,3,9,7,-5,-7,-7,-5,-4,-1,8,-2,-8,4,9,8,-8,-9,-5,9,1,10,-6,2,5,-1,-9,-5,-7,2,1,-3,-3,8,-9,7,-4,-9,-4,-10,-4,-4,-3,1,8,-5,-3,9,-3,3,7,3,1,-10,4,-5,-9,1,-10,2,-6,-6,-9,5,6,-5,10,-2,3,7,2,-6,-1,-4,9,-8,5,4,-2,8,-8,9,-3,10,-3,-1,-9,7,-4,-2,7,10,7,-7,-4,7,6,-2,8,-4,9,7,4,7,-5,3,-10,-3,6,5,5,-1,-9,1,-3,10,2,-9,3,4,-6,1,9,-2,-6,-4,1,1,6,-7,8,-2,-9,7,-6,2,-10,-7,-7,-6,8,-3,5,8,7,-4,-5,7,7,7,-7,-7,-2,-9,-5,-1,5,1,7,5,5,8,4,-5,1,4,3,-6,6,-3,10,-4,-5,7,4,-5,-9,-10,-8,4,9,7,1,-8,-1,-8,2,-6,-6,-8,-6,9,5,10,6,-5,4,-8,9,2,4,1,-1,-4,1,-9,-4,4,-8,7,8,9,-5,-9,-1,-4,-2,-3,-1,1,-9,-1,-9,-4,-7,2,-10,1,8,-2,2,5,1,6,5,6,-10,-6,-1,-7,-1,6,-10,9,-9,-6,-6,-5,-1,9,-2,9,-1,2,-7,-10,8,10,-5,5,-9,-2,-3,2,-10,9,7,4,5,1,5,-10,9,2,-10,-7,9,4,8,6,-10,-2,5,6,-1,3,10,10,5,5,-10,-4,2,3,-7,-8,3,3,-5,9,-10,4,10,-1,-10,10,-9,-9,6,10,10,-10,9,3,4,2,6,6,-3,-1,-5,3,9,4,-3,-7,-2,7,2,-7,-4,10,6,8,-3,2,-1,-2,8,-4,-10,-5,-9,6,-2,8,4,8,6,-1,6,-6,10,-7,-4,9,-5,-6,5,-8,5,-5,-5,-10,10,9,5,-2,5,-3,-2,5,-5,2,5,8,-5,10,7,-1,1,2,-9,-1,4,7,4,-3,-5,8,-6,-1,-1,-3,10,5,7,-7,2,3,10,1,-10,-5,-9,4,-9,-6,-7,-9,4,8,3,-6,-1,-10,8,9,6,-4,6,10,-2,-8,-7,6,2,1,-9,-8,-7,-3,8,3,-5,8,-5,-7,-7,8,1,-5,9,-6,-6,-9,5,-8,-6,-8,9,10,-6,-3,-9,9,6,-3,-4,1,7,3,-2,6,3,8,-10,6,-5,-1,9,-6,-5,-7,-2,-9,8,3,-2,-9,1,-6,6,-6,-10,-7,6,1,-6,10,-7,-9,8,7,8,-8,-3,-1,8,-2,-4,-7,-4,-2,9,8,-9,-2,-10,-1,-7,9,-3,9,-8,10,-9,4,7,6,10,-3,3,-7,6,-3,-7,3,3,-3,-4,-6,-4,-8,8,9,8,-8,1,5,-5,2,-1,6,-8,8,4,7,-4,-10,-1,-2,-5,3,6,-5,4,-5,-2,-10,9,-4,-2,2,-8,-10,-3,9,3,-4,-9,9,6,-10,-4,9,-8,8,-6,6,5,4,-8,-6,6,-9,-10,-8,-2,-3,9,-10,8,5,-8,-7,-6,-1,-3,-3,-8,4,1,-2,-10,-9,-10,-6,-9,-2,1,-2,-8,1,-1,-10,7,6,-6,10,7,5,-2,-8,1,10,7,10,4,-9,-6,-5,-5,-10,1,-6,-1,8,1,6,5,-3,9,-8,-5,-9,9,3,-5,4,-4,6,3,-3,-1,-6,5,9,-5,9,5,10,-2,-8,9,-2,-4,10,-4,2,2,-2,-9,2,-7,3,-9,-7,-9,5,-7,-1,-7,8,6,9,-8,-6,1,3,9,3,1,6,-3,8,-1,-8,-1,-2,-6,4,3,3,8,-3,1,4,3,4,2,-5,2,-1,-2,2,3,4,-6,9,4,-10,7,-9,-3,-8,6,7,-1,-2,1,-2,10,2,6,9,-5,-7,10,-7,-10,7,10,-3,-10,5,9,-8,5,4,-3,-1,9,-3,3,-3,4,-8,-1,7,-8,-5,-10,-3,-4,6,9,6,-3,-10,-6,9,2,-4,10,6,-2,2,-5,6,-3,5,-8,-3,-7,-9,-3,-2,-6,8,6,4,7,1,-5,9,9,-4,-6,-2,-8,-7,9,-6,6,3,-9,3,6,-8,-2,1,-5,-10,9,-6,-3,8,4,9,1,3,10,8,9,5,4,-3,-10,-2,9,4,2,-3,7,8,5,-7,-7,-9,10,-10,-1,-5,-7,9,-6,-7,-4,-7,-4,8,8,4,-2,-4,10,-9,6,-3,-5,-1,5,1,10,-10,-5,-6,6,8,7,-10,-5,-10,-5,4,-3,-10,2,-8,1,9,-10,9,-6,-4,9,8,5,5,-10,1,-5,-4,4,1,3,1,4,-9,-9,1,-9,3,8,-5,6,-4,6,-10,-1,4,-1,-5,-9,5,-9,7,7,1,8,6,9,9,-9,6,7,1,-6,-3,3,4,-6,10,-3,-1,-9,8,-6,-3,-3,-4,-10,-2,-3,3,5,-10,10,-4,-2,-7,3,-9,2,5,-3,-10,4,-9,-7,5,-2,2,-6,7,3,-9,9,5,-1,7,-9,-7,8,-2,-10,4,-3,-4,-3,6,-4,2,4,5,8,-9,10,10,4,1,-8,-6,1,9,-10,10,2,9,9,-1,-5,-4,6,3,5,-4,8,5,9,-3,-10,4,5,8,-5,-1,-9,7,10,-7,-3,9,10,-1,9,-7,7,1,-5,5,9,-2,2,6,-9,-8,-4,4,-2,-3,8,-8,-3,6,9,8,7,8,9,-1,7,-3,-6,-6,-3,-9,-1,8,7,4,5,-6,1,-2,-8,-1,2,-7,-4,-9,4,-9,-5,10,1,10,3,-8,1,-7,3,-3,5,-3,5,-5,10,-3,-1,8,7,7,5,-6,-3,7,-2,-1,2,-3,10,3,2,-6,9,4,-4,-5,4,7,-6,-5,5,-5,-4,4,-6,3,-3,10,4,5,3,-9,3,8,2,-8,-1,-4,1,10,-4,-5,3,8,-9,5,5,1,-2,9,-4,9,-10,-2,-2,6,7,-5,-9,6,-6,-2,-5,-10,3,8,-6,5,-3,-7,-9,-3,6,-7,-10,5,-5,8,-3,6,-10,5,5,-4,-7,5,3,4,-5,8,-5,-3,1,2,-10,2,-5,5,-7,8,7,-1,3,-4,8,6,-5,6,8,2,6,-5,-4,-1,-9,-6,2,1,-5,-4,4,-8,8,-9,-2,4,6,7,2,-1,-6,-1,4,-4,6,-2,7,-1,4,1,10,3,5,-8,-7,1,-5,4,4,-8,5,1,2,8,2,1,7,2,4,-10,-8,-6,3,4,-7,6,-4,7,10,1,7,6,8,7,-5,-4,-7,-7,10,8,4,1,-2,4,-4,-4,9,-6,-7,10,9,8,-4,-10,6,4,-1,-8,3,-5,-10,-1,-10,-7,-9,10,9,-8,2,-9,-4,-8,8,-2,-9,2,-7,-8,10,-5,-2,-9,-4,6,-4,4,-10,7,-10,2,5,1,-5,-8,-6,-5,9,-9,-2,-8,-4,4,-7,-3,-7,8,-9,3,-10,10,-5,4,1,-8,-10,7,1,7,4,6,-7,5,-5,-1,-3,-1,-7,4,-8,-9,1,4,1,1,-3,7,5,-5,2,5,8,4,3,-1,10,-1,8,-2,-7,2,-2,-10,-3,-9,-3,-8,2,-4,10,6,-7,-9,-10,-4,4,7,-7,4,3,4,-8,9,-4,5,-10,2,-7,2,1,-4,-4,-2,-7,-10,8,8,-6,-7,2,4,2,7,8,7,-7,-6,-2,-1,-5,-1,7,-10,-8,5,9,-2,-7,10,-10,7,-8,6,9,2,8,-6,5,-8,-3,5,-4,2,-7,1,9,-3,-8,8,-8,-3,4,-1,-7,5,4,3,6,3,8,-1,1,6,4,-9,6,9,5,-10,3,-4,5,6,5,-5,3,-1,-9,-6,-1,-5,8,7,-8,-8,2,7,-1,9,4,8,9,4,6,-2,4,6,-5,-7,-1,1,7,1,1,-4,3,2,9,1,-5,-4,2,5,2,8,7,5,7,3,-7,3,-7,3,1,3,8,-9,7,6,5,1,5,-7,-3,10,-5,9,6,-10,-5,-6,-2,3,-6,7,5,3,-3,2,-9,5,3,-8,5,9,2,-4,10,-6,-8,-10,-2,-3,-3,2,-7,-8,10,-3,-5,-6,8,3,-7,6,1,-10,-1,7,-10,-8,5,-9,-3,9,-5,-6,7,2,-8,1,6,-4,4,3,-2,1,10,-2,2,-10,8,-9,5,9,4,7,-1,9,4,-7,4,6,8,6,1,7,3,-4,-1,-6,-5,5,3,9,-7,-4,4,4,7,-2,-9,10,6,4,9,10,-2,1,-10,-3,-9,-7,-6,-7,-2,-3,-9,-5,-9,2,-9,-5,1,6,-6,-6,5,-2,-6,-6,-9,1,4,-6,-7,2,-3,6,-2,-5,1,-5,-7,-7,-5,3,-4,5,2,-10,10,-6,-10,6,7,8,3,2,10,2,2,3,-10,3,-8,3,-6,10,3,6,9,8,1,1,3,9,1,-1,-8,6,-9,5,-10,-1,-1,5,-5,2,-4,7,10,-3,8,5,10,4,-10,5,4,-5,7,6,2,9,-3,-5,4,6,-4,10,2,-3,2,4,-6,-2,-6,8,-6,-6,-3,4,9,-9,-10,-6,4,-7,-9,-4,-8,9,-5,-2,4,-2,8,-4,7,-9,4,-1,7,3,-9,-3,3,2,9,-1,-1,7,2,-8,7,-7,-5,7,8,-9,9,5,4,-2,-1,-5,7,-4,5,9,9,1,6,-7,-10,-5,-8,2,8,-4,-6,-3,-1,3,1,8,-8,4,-6,2,9,6,-8,9,2,-6,4,-3,-10,-1,-10,9,-7,-4,7,-1,-3,-4,-5,6,-8,-6,-4,7,7,5,4,-7,-8,-4,-7,1,-1,-9,-10,4,9,-2,10,9,7,7,7,-4,5,1,-4,1,9,-4,7,9,-7,-3,10,4,-3,1,-5,8,-3,-1,3,-4,4,-3,5,8,-5,-9,-10,-4,-4,-6,10,-8,-3,3,8,8,5,-2,-5,4,-3,5,-8,8,-6,2,8,-2,-6,7,-2,8,6,2,4,1,1,-1,-7,-2,3,2,3,-2,-8,-6,4,2,6,1,-9,5,8,-8,5,9,-5,9,6,-8,-2,7,-8,4,-10,-4,-7,9,-3,10,9,7,-2,-4,10,3,6,-6,8,8,6,6,-1,9,-2,-3,10,-6,6,1,2,8,3,-2,-5,-8,2,-4,-1,-6,-2,5,-9,-4,-3,-1,-10,-2,-2,-5,-5,-7,9,2,2,4,-9,6,1,2,-7,-8,-1,-10,-5,9,-8,-8,6,6,10,-4,10,-4,9,5,-9,3,-1,3,5,-7,6,9,-7,-2,6,3,-5,7,5,2,-2,3,7,9,-10,7,4,-10,3,-8,-5,5,10,-3,-1,-8,-9,8,9,-8,-6,4,10,-10,3,4,-9,-9,-2,-1,-7,-7,1,2,3,-8,-4,-8,8,9,-8,-1,-3,-5,3,9,-6,-6,-2,-7,-10,-3,-1,9,2,1,3,6,-2,-3,8,7,-8,1,5,6,-4,8,-1,5,6,-3,7,9,10,-6,-5,2,-10,-5,10,-8,10,2,-4,-5,2,-3,9,10,-5,-8,3,-4,-3,-8,8,-1,-4,10,-1,-2,4,2,9,-3,-10,5,-10,-4,7,8,-10,4,4,-3,10,8,1,7,1,4,-10,-5,-7,-5,-3,-10,6,6,-9,-4,4,-2,3,-7,-9,8,-2,-4,-1,3,-6,6,8,-1,-9,-5,7,8,-9,6,7,-9,-6,8,-4,1,6,9,7,3,4,-1,-7,3,-3,4,-5,-9,-8,10,7,-9,9,7,9,-6,-7,-6,-5,10,1,7,7,-7,-10,6,-8,-10,-6,-7,-8,7,-7,2,3,-9,6,-10,-2,9,-4,1,1,-1,10,-9,10,-6,1,8,-9,-8,-4,9,7,-8,-10,-5,2,-7,3,-5,-4,-9,-10,-10,-5,-6,-9,3,-3,-7,3,6,-7,10,-9,-4,-7,-7,-9,7,-7,2,-8,-2,-7,-5,-10,-6,4,-6,10,-5,2,-5,10,6,5,-3,-3,5,1,-10,9,-7,-1,-5,2,9,3,-6,6,-10,10,-5,6,2,-9,8,6,2,-10,-2,6,-8,-5,-6,8,3,9,10,-7,-7,-5,-4,-2,-10,-3,5,-6,-2,9,4,-4,-5,5,2,-10,-6,-4,5,9,8,-10,3,6,-6,1,-2,7,8,5,-3,9,-7,2,-8,-9,-2,1,-4,-1,4,2,-7,-3,2,6,-2,-5,-7,1,1,-4,-3,-10,-4,9,3,3,-2,-6,4,-10,-5,5,3,9,-10,-8,-10,9,-7,1,2,9,-10,-8,7,3,2,-5,-8,10,-7,-8,-5,2,-7,-6,-7,-1,-2,-3,7,-10,-6,4,9,-9,-10,-7,5,-1,-10,-1,1,-4,-3,1,-3,-6,6,-4,-4,5,-1,3,10,8,10,-7,-3,4,-7,3,6,2,1,-10,8,-9,8,7,-5,-9,6,5,-8,3,-4,9,8,-3,-5,2,-6,4,-4,-3,-6,3,8,-1,-7,-4,-3,-10,-2,9,-5,5,-3,-7,-8,5,3,-7,-6,-9,-5,3,-6,10,-7,7,10,-3,-9,-2,-3,4,-7,-8,1,5,10,5,-2,-6,-2,8,5,8,4,-2,9,4,10,8,-9,9,-10,7,-9,-8,6,-4,-9,-4,2,-3,-3,-6,9,4,6,9,-8,-7,-1,-8,5,5,-4,-9,6,-7,9,2,7,5,-1,-1,-3,6,7,9,7,6,-5,-10,-8,-10,2,4,9,-5,6,-1,-6,10,-4,3,-5,3,-5,10,9,10,-1,-1,6,3,3,10,3,-3,1,8,-7,7,-3,-5,5,6,-2,8,-4,-1,-5,6,-2,-4,-7,10,-3,-5,-4,-3,-6,6,-7,-7,5,7,8,1,6,-3,-8,-6,10,1,4,2,2,-9,2,9,-3,-1,-4,10,-10,1,-8,2,2,1,-5,7,2,-6,5,6,-4,10,-1,-5,5,-10,-7,-10,-4,-7,5,8,-2,-6,10,7,-10,1,9,-4,-4,-7,7,-9,10,3,10,7,-6,2,-2,1,6,-5,7,-9,-4,-1,-4,5,6,1,9,-1,8,2,-10,4,-4,1,8,2,6,6,-6,8,-9,10,-7,-3,-2,-9,-8,10,-3,3,5,-5,1,-3,-2,-6,9,7,7,-3,4,5,4,-4,-10,-10,2,-6,-7,-9,1,8,-3,6,-8,3,10,6,5,2,-6,-8,8,-3,-4,-3,-8,-5,-9,-3,1,-9,-3,-8,4,2,2,10,6,6,6,7,2,6,-6,-8,-4,1,-1,-6,8,-3,-9,-2,-6,9,8,5,9,-1,10,-1,6,2,10,10,-7,10,-8,3,1,-6,-7,8,4,-2,-9,-1,-4,2,-2,-3,7,-4,-6,-1,-8,-5,-9,4,4,-10,-8,10,3,-7,-4,1,-2,6,-2,4,-3,-9,-5,8,7,-2,8,-9,2,5,4,7,2,5,-10,6,-1,-8,7,6,5,-1,8,3,3,7,-5,-7,-10,3,-5,-3,-5,3,-8,-6,-4,5,6,-5,-9,10,9,-1,10,-8,2,-1,4,-8,2,-5,-2,10,2,1,-10,-5,6,7,-1,-1,6,-1,6,3,5,6,-10,-7,4,4,-7,-4,-5,1,5,1,3,-2,-1,-1,-2,-4,-3,-5,-1,2,7,2,-6,10,-4,3,-2,10,-7,-10,6,-1,8,-8,6,8,-6,7,-3,3,7,5,-10,-5,-4,8,-2,10,7,-1,-6,6,9,-3,-10,8,-2,-9,7,-1,-10,10,-10,-3,8,1,3,5,-1,-2,7,-10,-2,3,-4,8,-5,-5,-1,-3,-2,-3,4,-5,-8,-7,7,-8,-8,-6,-7,-4,5,9,-10,4,-7,-9,5,-5,2,-10,1,8,8,10,10,-10,-5,-10,-1,1,9,8,-5,-7,-7,6,4,5,-7,9,-1,2,-8,-5,7,7,-5,10,-10,-6,5,-4,5,-4,6,-8,4,5,2,-1,3,5,-4,7,-5,10,-7,10,6,2,9,9,2,5,3,3,5,3,6,-3,4,-10,10,3,-5,-9,7,-6,-3,2,-7,1,6,1,-5,10,2,10,-1,-9,8,-9], dtype = "uint16")#candidate|5873|(3360,)|const|uint16
call_5872 = relay.TupleGetItem(func_2759_call(relay.reshape(const_5873.astype('uint16'), [420, 8]), relay.reshape(const_5873.astype('uint16'), [420, 8]), ), 7)
call_5874 = relay.TupleGetItem(func_2763_call(relay.reshape(const_5873.astype('uint16'), [420, 8]), relay.reshape(const_5873.astype('uint16'), [420, 8]), ), 7)
func_3173_call = mod.get_global_var('func_3173')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_5875 = relay.TupleGetItem(func_3173_call(), 0)
call_5876 = relay.TupleGetItem(func_3174_call(), 0)
func_4119_call = mod.get_global_var('func_4119')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_5889 = relay.TupleGetItem(func_4119_call(), 0)
call_5890 = relay.TupleGetItem(func_4121_call(), 0)
output = relay.Tuple([call_5833,call_5843,call_5872,const_5873,call_5875,call_5889,])
output2 = relay.Tuple([call_5834,call_5844,call_5874,const_5873,call_5876,call_5890,])
func_5893 = relay.Function([], output)
mod['func_5893'] = func_5893
mod = relay.transform.InferType()(mod)
mutated_mod['func_5893'] = func_5893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5893_call = mutated_mod.get_global_var('func_5893')
call_5894 = func_5893_call()
output = call_5894
func_5895 = relay.Function([], output)
mutated_mod['func_5895'] = func_5895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_5916 = relay.TupleGetItem(func_2645_call(), 0)
call_5917 = relay.TupleGetItem(func_2647_call(), 0)
output = call_5916
output2 = call_5917
func_5924 = relay.Function([], output)
mod['func_5924'] = func_5924
mod = relay.transform.InferType()(mod)
mutated_mod['func_5924'] = func_5924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5924_call = mutated_mod.get_global_var('func_5924')
call_5925 = func_5924_call()
output = call_5925
func_5926 = relay.Function([], output)
mutated_mod['func_5926'] = func_5926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3296_call = mod.get_global_var('func_3296')
func_3298_call = mutated_mod.get_global_var('func_3298')
call_5927 = relay.TupleGetItem(func_3296_call(), 1)
call_5928 = relay.TupleGetItem(func_3298_call(), 1)
func_1579_call = mod.get_global_var('func_1579')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_5963 = relay.TupleGetItem(func_1579_call(), 0)
call_5964 = relay.TupleGetItem(func_1580_call(), 0)
func_5244_call = mod.get_global_var('func_5244')
func_5247_call = mutated_mod.get_global_var('func_5247')
const_5972 = relay.const([-2.850992,-0.867914,-8.388415,0.667537,-2.601683,1.465076,-3.086380,-6.443290,7.329918,-2.587917,-3.953601,5.945286,2.927270,1.816536,0.757528,-2.346359,0.066703,-1.468726,1.017674,9.786499,-3.198720,2.574263,6.400148,-1.726633,8.768482,2.481578,1.081245,-0.147929,-4.003531,3.257495,2.976332,5.770364,-3.414095,-0.803767,-5.646501,-7.735550,9.963482,5.549285,4.462005,1.777580,-0.565380,-9.304260,-4.630032,9.816172,-1.219722,-8.905841,-7.261400,-0.626602,4.666959,-2.188303,1.405653,-1.043589,-4.171644,5.093121,1.520757,-9.261817,9.135410,5.960610,-2.489507,0.365720,-6.198742,-1.606098,1.125848,9.375109,-3.273157,-4.433252,-2.261921,-6.299449,1.041612,-9.594562,-1.330681,-8.522067,-3.552340,2.121679,-6.692604,2.708361,-3.925419,-5.882662,2.983988,-9.548904,8.016987,5.422431,5.665617,5.660437,8.400280,6.481348,-4.721233,-8.806991,-8.009929,1.519471,-0.900910,8.455287,3.288496,-6.169897,3.234994,-2.848439,-5.198559,0.813898,7.487658,-0.910462,-3.236960,-1.334907,0.449015,0.410208,5.106556,0.815101,-2.457770,-2.546469,-3.153568,-7.919166,-0.089242,-3.284923,-7.023691,-0.649739,-4.761765,-8.123928,6.413408,-2.357576,2.169234,-0.023399,-7.677341,-6.259326,-2.811508,-5.049880,-3.274859,-7.481572,9.964343,8.760948,-7.266067,2.961191,-2.532074,-5.174337,9.331739,-6.683986,-1.710642,7.899655,-3.321452,2.367404,-9.074744,8.263802,-7.233680,7.020371,8.595710,4.805101,1.722093,-4.480261,6.270380,1.190643,2.101758,2.353030,-9.513667,1.175415,1.610263,1.735326,-5.043090,-8.063346,-9.588689,3.021656,-1.103686,-1.555429,0.629237,4.224499,1.729290,1.889501,-4.278352,-2.554746,6.619173,-5.385915,3.969152,0.259839,-0.135035,-7.097917,5.390617,-1.695606,8.121619,2.000830,-6.054896,5.473419,6.316445,-5.291224,0.364949,-6.020219,-8.484797,4.487427,-7.596622,-3.250970,-8.755190,-6.042735,-1.348087,3.410875,3.202875,-8.205785,1.064975,6.152970,5.617281,3.157999,-7.427327,8.939897,-1.273239,-9.303892,4.703636,7.342729,-4.318256,-6.596041,9.750592,-6.575215,-1.034483,-8.261369,-0.412612,1.093333,1.605110,-7.144803,-3.026405,2.862583,3.640940,-5.559693,-4.431781,-8.400575,4.976400,0.354650,8.867273,9.906772,-1.176857,9.056938,9.264132,-1.082444,2.048896,-9.325790,6.085276,-8.490654,-2.496118,4.030024,7.333400,1.426831,-0.062314,2.847476,-3.913903,-8.060837,-4.394821,8.038011,-9.433935,-6.216262,-5.497048,0.636032,-0.417180,-7.307857,-4.067584,6.231110,-3.923466,-2.711353,7.373517,-9.585378,-1.946094,0.170800,-4.877359,-2.413258,-4.080368,8.432639,-7.665299,-1.268554,-7.164627,7.835894,5.657765,-7.447980,0.552082,-7.181502,-7.816043,-5.750754,6.833424,8.501877,-7.402175,-8.931301,9.947638,4.162455,9.620292,-4.926605,4.653879,-8.826958,8.243884,-6.724817,-0.772250,3.344244,6.676603,4.621878,9.763616,-1.205811,9.307966,5.001126,-9.171087,-7.661981,-5.483172,-6.759453,-6.604313,-8.260111,7.842556,-4.705704,-7.294751,9.205669,0.213214,-6.225911,4.598418,-8.274572,-0.599563,3.245553,-9.945251,-0.160827,3.175953,-6.754364,4.895009,5.758850,0.588980,-6.653404,4.724449,5.527706,3.352308,-4.515317,8.286757,6.484519,-9.200469,-1.223430,-1.008919,9.038587,9.062777,1.752049,4.883233,-8.380870,-4.268457,-5.596998,-8.403847,-9.640415,1.105817,-7.105059,1.326987,-9.214683,3.331602,-5.113737,1.053680,3.294427,-4.505243,-4.354803,9.923074,-2.378076,4.400001,3.058267,3.955782,7.384162,-7.021881,3.963407,4.471105,1.989015,-7.135745,-5.826181,-4.148915,4.933344,-1.072899,-3.666011,-0.532890,6.572420,3.497602,1.035810,-8.929640,5.060865,-5.651872,-8.131879,6.318422,-1.483566,-5.666326,7.989334,-7.873053,7.023149,-3.442192,-5.375602,-1.438498,3.874071,2.022277,-6.562276,9.381523,-8.400996,-4.681732,-8.583263,2.797775,-9.105709,5.247800,-7.106141,-7.765449,1.742405,5.603178,8.947408,4.601708,2.027329,6.381031,4.687689,7.244568,-3.851069,-0.307439,8.078301,-5.771099,1.763309,-3.123095,0.005233,6.956870,8.477182,4.713302,1.406257,2.479829,3.587791,-7.258598,-6.132115,-4.990240,-3.160463,4.437392,-7.083701,4.700758,7.876578,3.370786,-8.642014,5.376987,3.712420,-4.150088,-5.575229,2.258685,-0.724647,-2.253019,-9.429181,6.255243,2.182956,-0.369607,-9.715939,-7.477964,3.951573,0.466288,-6.259806,-5.834003,1.188066,-0.782356,-8.997205,5.716946,-3.846157,5.406498,-2.508495,6.782548,8.036937,-5.741927,7.915132,-7.794813,-9.240940,-8.131070,-9.653809,4.914970,8.856424,3.399977,0.220703,-8.940038,-0.335177,-9.430071,-5.558948,0.180378,-8.935100,-6.210153,-7.783345,-2.102618,-3.583339,3.203607,4.418219,-6.872291,9.337704,0.799643,-2.079137,-5.285545,5.840838,4.944923,-1.858570,-3.636075,-6.809496,-6.417863,3.841935,-9.545445,5.054559,-0.094613,-1.753847,3.386470,0.421640,-0.754402,-5.185710,-1.552064,-8.258475,4.052912,-4.545929,3.972977,-0.141340,4.059769,-2.593071,6.093735,-3.920101,8.851516,-6.632671,-2.834596,4.360756,8.804377,0.013594,2.260812,-1.362053,-3.010274,-1.639239,2.497214,6.983515,-3.159315,-3.284156,8.094115,-8.391843,2.307660,5.228968,-8.968785,6.437307,-3.172244,7.453459,-6.829224,-6.187141,8.601979,-8.880688,-6.520733,0.389956,7.026072,-2.061741,-8.287206,8.492616,-2.646903,0.838841,8.546396,-9.596649,1.540305,-3.436699,0.542441,-1.298125,8.659890,-6.678068,-9.151502,0.706137,3.371250,-0.654871,-7.257271,-3.958405,-1.363848,6.275643,-3.864359,5.113127,0.741698,8.271785,8.768234,7.271853,-8.623831,-6.191608,-1.954512,-0.067674,3.217519,2.725892,3.373105,-1.391544,-8.860383,5.021971,-5.662756,-1.941158,-4.610879,-3.556586,-5.448344,2.066754,4.712790,1.554856,8.068128,-6.293732,3.150424,-5.594160,4.350347,-2.019304,-4.059532,-5.384910,0.299833,-5.116348,-0.171384,3.949425,4.237852,6.701134,-5.446025,-7.556708,-0.488541,-4.693514,-0.499043,-0.019656,-1.600852,6.511514,8.070782,7.029231,4.741567,-0.478169,-2.738173,-7.228666,-5.342729,4.306370,-1.789905,-3.568502,-7.449314,-8.439546,0.570804,-0.969108,-3.034070,-9.658306,4.970256,-8.354936,-2.847967,-9.885480,-3.005485,-0.975075,-4.434143,3.812762,9.048150,7.941209,-7.925187,-0.395052,4.423381,9.288379,9.523773,8.963135,3.227807,7.191233,-4.931049,2.334081,-6.141880,-1.538169,4.207660,7.641443,0.403422,-9.634184,3.826850,-1.409153,7.033637,-0.235544,8.713550,5.881967,1.494945,-1.420260,-2.739768,-5.310842,4.769398,9.779314,-8.200771,0.152948,1.400776,9.589048,0.915580,1.130936,-6.278612,9.445867,1.690175,-8.318847,6.399030,9.440046,-6.080663,-4.657597,-3.065547,-6.500561,-8.828053,-9.865522,4.299705,-1.060049,4.520314,8.997965,2.492481,-8.741315,3.716660,0.025227,0.278763,-6.103403,-9.778348,-7.911950,-3.552845,1.244155,-8.738283,1.298246,-1.012718,-6.194545,1.135357,6.529513,-1.078542,-6.157162,-0.297175,-8.575134,-6.311622,-3.995755,5.438940,6.268408,1.069075,1.569137,-9.505908,-4.904519,-2.823961,9.109281,-6.536426,3.839499,-7.907597,3.871851,5.777683,-6.593348,-4.045599,3.635821,4.614588,-6.061291,5.444912,4.825786,-0.095367,-7.244816,-6.546199,-5.466855,-4.339758,-8.030342,4.525227,-1.256065,1.151640,-1.312515,5.677019,-7.104552,-6.891194,8.258383,-1.243572,-1.841118,-7.916663,7.818262,-6.508422,-8.656928,3.135953,3.529865,-0.693768,-0.006942,-0.148698,8.617753,-2.041058,7.878869,-3.223994,-2.991277,5.326147,5.070269,-8.324984,-9.072282,3.452718,7.461092,6.599326,1.451342,-3.096606,-5.176872,5.070902,-4.782298,3.361594,-4.262904,6.080989,-9.499773,6.099658,-6.876964,-1.668322,-4.159949,2.555006,4.348986,-4.383623,-5.625013,-3.161005,-8.157887,6.420466,8.373857,-2.258070,-6.846458,-7.702344,-1.182012,4.350877,1.347257,7.917485,9.567807,-9.818696,-3.828657,2.438805,6.696733,6.048583,2.658296,3.795523,1.251870,7.429572,2.858880,-5.100186,3.364030,-9.229326,6.359003,1.530664,5.132285,2.199206,-0.722617,-1.918673,-8.475215,9.258054,-6.651244,-2.441913,-0.881714,-7.889017,-4.988828,0.518300,-8.482178,-7.584551,-5.653461,-3.347616,4.097996,4.466931,-5.458895,-6.268637,2.161712,1.403864,-4.828383,2.363767,9.687829,-1.858531,-0.723292,3.062930,8.436617,-4.397874,3.910508,9.429456,2.311725,5.289531,4.918824,-4.102775,0.185302,-3.127066,-3.093047,4.554974,5.595173,8.788264,9.654106,-2.984255,-6.951182,-6.796936,6.786567,7.839618,-7.785800,3.904341,-8.714746,-9.426490,4.695784,8.220179,-6.689965,7.592738,-2.177497,9.052305,3.337621,-8.768362,6.437107,-2.202257,9.925093,0.577800,-5.302705,2.117544,-3.329118,-3.795091,-1.509642,2.772575,-5.585609,4.972509,7.264821,8.475385,-0.116329,8.664452,-5.565884,7.036410,4.390919,-3.538206,6.473074,-9.709431,7.278982,0.506138,-6.832415,8.368021,7.318726,3.755355,9.745991,4.798558,-3.500325,1.483359,-0.286223,-9.268382,1.292656,6.686514,-2.433892,3.792013,2.428601,-7.924633,1.308485,-5.357150,-1.805592,-1.503913,-0.038991,7.927741,-0.874744,-3.738926,9.826355,-2.591054,0.542493,5.316365,8.939251,1.542917,2.025835,-3.112588,7.180893,9.578642,-6.330064,-9.204226,-2.695351,7.154038,-5.259628,3.128772,7.465975,7.625732,-4.592335,-9.753459,1.142718,-9.933545,8.041874,3.254534,6.058750,-6.942389,-3.468438,0.806752,4.111024,9.832680,-5.730634,9.947457,-1.345273,-8.906549,-6.218764,-4.212867,-8.330552,-7.496309,8.446508,6.198862,9.366412,-9.137974,-5.226868,-7.524638,4.407768,8.466466,-2.938492,8.871513,5.053446,0.370013,-4.577911,2.127712,-8.256193,1.061424,-7.709007,6.467109,-0.264380,5.459046,6.751072,-6.330688,-7.072601,-9.504965,4.999513,1.736526,1.056915,-6.343204,1.111592,-9.648222,6.771998,7.728594,-7.321406,4.333766,4.784186,7.002923,-4.306899,1.343810,-8.102022,-9.099087,0.716381,-8.954725,-9.559378,-5.737786,9.445498,-9.028743,-2.155143,-7.939739,-2.069988,-5.669400,-0.043759,-9.107376,5.476129,4.274722,2.012347], dtype = "float32")#candidate|5972|(990,)|const|float32
call_5971 = func_5244_call(relay.reshape(const_5972.astype('float32'), [9, 10, 11]))
call_5973 = func_5244_call(relay.reshape(const_5972.astype('float32'), [9, 10, 11]))
output = relay.Tuple([call_5927,call_5963,call_5971,const_5972,])
output2 = relay.Tuple([call_5928,call_5964,call_5973,const_5972,])
func_6010 = relay.Function([], output)
mod['func_6010'] = func_6010
mod = relay.transform.InferType()(mod)
mutated_mod['func_6010'] = func_6010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6010_call = mutated_mod.get_global_var('func_6010')
call_6011 = func_6010_call()
output = call_6011
func_6012 = relay.Function([], output)
mutated_mod['func_6012'] = func_6012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_6042 = relay.TupleGetItem(func_921_call(), 0)
call_6043 = relay.TupleGetItem(func_923_call(), 0)
output = relay.Tuple([call_6042,])
output2 = relay.Tuple([call_6043,])
func_6044 = relay.Function([], output)
mod['func_6044'] = func_6044
mod = relay.transform.InferType()(mod)
output = func_6044()
func_6045 = relay.Function([], output)
mutated_mod['func_6045'] = func_6045
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6107 = relay.var("var_6107", dtype = "float32", shape = (1, 15, 11))#candidate|6107|(1, 15, 11)|var|float32
uop_6108 = relay.asinh(var_6107.astype('float32')) # shape=(1, 15, 11)
bop_6120 = relay.floor_divide(uop_6108.astype('float32'), relay.reshape(var_6107.astype('float32'), relay.shape_of(uop_6108))) # shape=(1, 15, 11)
func_1851_call = mod.get_global_var('func_1851')
func_1852_call = mutated_mod.get_global_var('func_1852')
call_6136 = relay.TupleGetItem(func_1851_call(), 2)
call_6137 = relay.TupleGetItem(func_1852_call(), 2)
bop_6138 = relay.greater_equal(bop_6120.astype('bool'), relay.reshape(var_6107.astype('bool'), relay.shape_of(bop_6120))) # shape=(1, 15, 11)
bop_6141 = relay.logical_and(uop_6108.astype('bool'), relay.reshape(var_6107.astype('bool'), relay.shape_of(uop_6108))) # shape=(1, 15, 11)
func_5407_call = mod.get_global_var('func_5407')
func_5409_call = mutated_mod.get_global_var('func_5409')
call_6155 = relay.TupleGetItem(func_5407_call(), 1)
call_6156 = relay.TupleGetItem(func_5409_call(), 1)
func_4315_call = mod.get_global_var('func_4315')
func_4317_call = mutated_mod.get_global_var('func_4317')
call_6159 = relay.TupleGetItem(func_4315_call(), 0)
call_6160 = relay.TupleGetItem(func_4317_call(), 0)
func_2072_call = mod.get_global_var('func_2072')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_6163 = relay.TupleGetItem(func_2072_call(), 0)
call_6164 = relay.TupleGetItem(func_2074_call(), 0)
output = relay.Tuple([call_6136,bop_6138,bop_6141,call_6155,call_6159,call_6163,])
output2 = relay.Tuple([call_6137,bop_6138,bop_6141,call_6156,call_6160,call_6164,])
func_6175 = relay.Function([var_6107,], output)
mod['func_6175'] = func_6175
mod = relay.transform.InferType()(mod)
var_6176 = relay.var("var_6176", dtype = "float32", shape = (1, 15, 11))#candidate|6176|(1, 15, 11)|var|float32
output = func_6175(var_6176)
func_6177 = relay.Function([var_6176], output)
mutated_mod['func_6177'] = func_6177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6190 = relay.var("var_6190", dtype = "uint32", shape = ())#candidate|6190|()|var|uint32
var_6191 = relay.var("var_6191", dtype = "uint32", shape = (11, 1, 4))#candidate|6191|(11, 1, 4)|var|uint32
bop_6192 = relay.add(var_6190.astype('uint32'), var_6191.astype('uint32')) # shape=(11, 1, 4)
func_4331_call = mod.get_global_var('func_4331')
func_4332_call = mutated_mod.get_global_var('func_4332')
call_6204 = relay.TupleGetItem(func_4331_call(), 0)
call_6205 = relay.TupleGetItem(func_4332_call(), 0)
bop_6210 = relay.less(var_6191.astype('bool'), var_6190.astype('bool')) # shape=(11, 1, 4)
func_725_call = mod.get_global_var('func_725')
func_726_call = mutated_mod.get_global_var('func_726')
call_6216 = relay.TupleGetItem(func_725_call(), 1)
call_6217 = relay.TupleGetItem(func_726_call(), 1)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_6223 = relay.TupleGetItem(func_3940_call(), 2)
call_6224 = relay.TupleGetItem(func_3941_call(), 2)
bop_6227 = relay.less_equal(var_6191.astype('bool'), relay.reshape(bop_6210.astype('bool'), relay.shape_of(var_6191))) # shape=(11, 1, 4)
func_3532_call = mod.get_global_var('func_3532')
func_3534_call = mutated_mod.get_global_var('func_3534')
call_6232 = relay.TupleGetItem(func_3532_call(), 1)
call_6233 = relay.TupleGetItem(func_3534_call(), 1)
func_2072_call = mod.get_global_var('func_2072')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_6237 = relay.TupleGetItem(func_2072_call(), 1)
call_6238 = relay.TupleGetItem(func_2074_call(), 1)
output = relay.Tuple([bop_6192,call_6204,call_6216,call_6223,bop_6227,call_6232,call_6237,])
output2 = relay.Tuple([bop_6192,call_6205,call_6217,call_6224,bop_6227,call_6233,call_6238,])
func_6240 = relay.Function([var_6190,var_6191,], output)
mod['func_6240'] = func_6240
mod = relay.transform.InferType()(mod)
var_6241 = relay.var("var_6241", dtype = "uint32", shape = ())#candidate|6241|()|var|uint32
var_6242 = relay.var("var_6242", dtype = "uint32", shape = (11, 1, 4))#candidate|6242|(11, 1, 4)|var|uint32
output = func_6240(var_6241,var_6242,)
func_6243 = relay.Function([var_6241,var_6242,], output)
mutated_mod['func_6243'] = func_6243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6044_call = mod.get_global_var('func_6044')
func_6045_call = mutated_mod.get_global_var('func_6045')
call_6259 = relay.TupleGetItem(func_6044_call(), 0)
call_6260 = relay.TupleGetItem(func_6045_call(), 0)
func_3591_call = mod.get_global_var('func_3591')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_6263 = func_3591_call()
call_6264 = func_3591_call()
func_626_call = mod.get_global_var('func_626')
func_629_call = mutated_mod.get_global_var('func_629')
call_6274 = relay.TupleGetItem(func_626_call(relay.reshape(call_6263.astype('uint16'), [3360,]), relay.reshape(call_6263.astype('float32'), [14, 16, 15]), ), 1)
call_6275 = relay.TupleGetItem(func_629_call(relay.reshape(call_6263.astype('uint16'), [3360,]), relay.reshape(call_6263.astype('float32'), [14, 16, 15]), ), 1)
func_1915_call = mod.get_global_var('func_1915')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_6294 = relay.TupleGetItem(func_1915_call(relay.reshape(call_6274.astype('uint16'), [3360,])), 6)
call_6295 = relay.TupleGetItem(func_1918_call(relay.reshape(call_6274.astype('uint16'), [3360,])), 6)
output = relay.Tuple([call_6259,call_6263,call_6274,call_6294,])
output2 = relay.Tuple([call_6260,call_6264,call_6275,call_6295,])
func_6309 = relay.Function([], output)
mod['func_6309'] = func_6309
mod = relay.transform.InferType()(mod)
output = func_6309()
func_6310 = relay.Function([], output)
mutated_mod['func_6310'] = func_6310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5503_call = mod.get_global_var('func_5503')
func_5504_call = mutated_mod.get_global_var('func_5504')
call_6422 = func_5503_call()
call_6423 = func_5503_call()
output = relay.Tuple([call_6422,])
output2 = relay.Tuple([call_6423,])
func_6426 = relay.Function([], output)
mod['func_6426'] = func_6426
mod = relay.transform.InferType()(mod)
mutated_mod['func_6426'] = func_6426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6426_call = mutated_mod.get_global_var('func_6426')
call_6427 = func_6426_call()
output = call_6427
func_6428 = relay.Function([], output)
mutated_mod['func_6428'] = func_6428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5032_call = mod.get_global_var('func_5032')
func_5034_call = mutated_mod.get_global_var('func_5034')
call_6443 = relay.TupleGetItem(func_5032_call(), 2)
call_6444 = relay.TupleGetItem(func_5034_call(), 2)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_6445 = relay.TupleGetItem(func_1795_call(), 0)
call_6446 = relay.TupleGetItem(func_1796_call(), 0)
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_6448 = relay.TupleGetItem(func_495_call(relay.reshape(call_6445.astype('float32'), [6, 11, 14])), 0)
call_6449 = relay.TupleGetItem(func_497_call(relay.reshape(call_6445.astype('float32'), [6, 11, 14])), 0)
output = relay.Tuple([call_6443,call_6445,call_6448,])
output2 = relay.Tuple([call_6444,call_6446,call_6449,])
func_6451 = relay.Function([], output)
mod['func_6451'] = func_6451
mod = relay.transform.InferType()(mod)
mutated_mod['func_6451'] = func_6451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6451_call = mutated_mod.get_global_var('func_6451')
call_6452 = func_6451_call()
output = call_6452
func_6453 = relay.Function([], output)
mutated_mod['func_6453'] = func_6453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6010_call = mod.get_global_var('func_6010')
func_6012_call = mutated_mod.get_global_var('func_6012')
call_6456 = relay.TupleGetItem(func_6010_call(), 3)
call_6457 = relay.TupleGetItem(func_6012_call(), 3)
func_5474_call = mod.get_global_var('func_5474')
func_5475_call = mutated_mod.get_global_var('func_5475')
call_6467 = relay.TupleGetItem(func_5474_call(), 2)
call_6468 = relay.TupleGetItem(func_5475_call(), 2)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_6503 = relay.TupleGetItem(func_2467_call(), 1)
call_6504 = relay.TupleGetItem(func_2468_call(), 1)
output = relay.Tuple([call_6456,call_6467,call_6503,])
output2 = relay.Tuple([call_6457,call_6468,call_6504,])
func_6505 = relay.Function([], output)
mod['func_6505'] = func_6505
mod = relay.transform.InferType()(mod)
output = func_6505()
func_6506 = relay.Function([], output)
mutated_mod['func_6506'] = func_6506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1545_call = mod.get_global_var('func_1545')
func_1547_call = mutated_mod.get_global_var('func_1547')
call_6607 = func_1545_call()
call_6608 = func_1545_call()
output = call_6607
output2 = call_6608
func_6609 = relay.Function([], output)
mod['func_6609'] = func_6609
mod = relay.transform.InferType()(mod)
mutated_mod['func_6609'] = func_6609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6609_call = mutated_mod.get_global_var('func_6609')
call_6610 = func_6609_call()
output = call_6610
func_6611 = relay.Function([], output)
mutated_mod['func_6611'] = func_6611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_6649 = relay.TupleGetItem(func_1795_call(), 0)
call_6650 = relay.TupleGetItem(func_1796_call(), 0)
output = call_6649
output2 = call_6650
func_6662 = relay.Function([], output)
mod['func_6662'] = func_6662
mod = relay.transform.InferType()(mod)
mutated_mod['func_6662'] = func_6662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6662_call = mutated_mod.get_global_var('func_6662')
call_6663 = func_6662_call()
output = call_6663
func_6664 = relay.Function([], output)
mutated_mod['func_6664'] = func_6664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mod.get_global_var('func_3884')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_6717 = relay.TupleGetItem(func_3884_call(), 0)
call_6718 = relay.TupleGetItem(func_3886_call(), 0)
output = relay.Tuple([call_6717,])
output2 = relay.Tuple([call_6718,])
func_6719 = relay.Function([], output)
mod['func_6719'] = func_6719
mod = relay.transform.InferType()(mod)
mutated_mod['func_6719'] = func_6719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6719_call = mutated_mod.get_global_var('func_6719')
call_6720 = func_6719_call()
output = call_6720
func_6721 = relay.Function([], output)
mutated_mod['func_6721'] = func_6721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1998_call = mod.get_global_var('func_1998')
func_1999_call = mutated_mod.get_global_var('func_1999')
call_6725 = relay.TupleGetItem(func_1998_call(), 0)
call_6726 = relay.TupleGetItem(func_1999_call(), 0)
func_4901_call = mod.get_global_var('func_4901')
func_4903_call = mutated_mod.get_global_var('func_4903')
call_6731 = func_4901_call()
call_6732 = func_4901_call()
output = relay.Tuple([call_6725,call_6731,])
output2 = relay.Tuple([call_6726,call_6732,])
func_6742 = relay.Function([], output)
mod['func_6742'] = func_6742
mod = relay.transform.InferType()(mod)
mutated_mod['func_6742'] = func_6742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6742_call = mutated_mod.get_global_var('func_6742')
call_6743 = func_6742_call()
output = call_6743
func_6744 = relay.Function([], output)
mutated_mod['func_6744'] = func_6744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1998_call = mod.get_global_var('func_1998')
func_1999_call = mutated_mod.get_global_var('func_1999')
call_6747 = relay.TupleGetItem(func_1998_call(), 1)
call_6748 = relay.TupleGetItem(func_1999_call(), 1)
func_4527_call = mod.get_global_var('func_4527')
func_4528_call = mutated_mod.get_global_var('func_4528')
call_6751 = relay.TupleGetItem(func_4527_call(), 0)
call_6752 = relay.TupleGetItem(func_4528_call(), 0)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_6760 = relay.TupleGetItem(func_2645_call(), 0)
call_6761 = relay.TupleGetItem(func_2647_call(), 0)
func_5032_call = mod.get_global_var('func_5032')
func_5034_call = mutated_mod.get_global_var('func_5034')
call_6767 = relay.TupleGetItem(func_5032_call(), 2)
call_6768 = relay.TupleGetItem(func_5034_call(), 2)
func_5359_call = mod.get_global_var('func_5359')
func_5360_call = mutated_mod.get_global_var('func_5360')
call_6783 = func_5359_call()
call_6784 = func_5359_call()
output = relay.Tuple([call_6747,call_6751,call_6760,call_6767,call_6783,])
output2 = relay.Tuple([call_6748,call_6752,call_6761,call_6768,call_6784,])
func_6800 = relay.Function([], output)
mod['func_6800'] = func_6800
mod = relay.transform.InferType()(mod)
mutated_mod['func_6800'] = func_6800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6800_call = mutated_mod.get_global_var('func_6800')
call_6801 = func_6800_call()
output = call_6801
func_6802 = relay.Function([], output)
mutated_mod['func_6802'] = func_6802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1637_call = mod.get_global_var('func_1637')
func_1639_call = mutated_mod.get_global_var('func_1639')
call_6866 = relay.TupleGetItem(func_1637_call(), 0)
call_6867 = relay.TupleGetItem(func_1639_call(), 0)
output = call_6866
output2 = call_6867
func_6872 = relay.Function([], output)
mod['func_6872'] = func_6872
mod = relay.transform.InferType()(mod)
output = func_6872()
func_6873 = relay.Function([], output)
mutated_mod['func_6873'] = func_6873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5165_call = mutated_mod.get_global_var('func_5165')
call_6946 = relay.TupleGetItem(func_5163_call(), 0)
call_6947 = relay.TupleGetItem(func_5165_call(), 0)
func_6719_call = mod.get_global_var('func_6719')
func_6721_call = mutated_mod.get_global_var('func_6721')
call_6961 = relay.TupleGetItem(func_6719_call(), 0)
call_6962 = relay.TupleGetItem(func_6721_call(), 0)
output = relay.Tuple([call_6946,call_6961,])
output2 = relay.Tuple([call_6947,call_6962,])
func_6965 = relay.Function([], output)
mod['func_6965'] = func_6965
mod = relay.transform.InferType()(mod)
output = func_6965()
func_6966 = relay.Function([], output)
mutated_mod['func_6966'] = func_6966
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6967 = relay.const([[[-5.247484,-8.491201,2.170788,-7.257827,5.245410,-1.698769,8.489447,-1.396394],[6.449122,-9.745811,-0.494621,-8.161173,-3.972814,-6.928952,-0.132042,0.272133],[-1.969497,-0.889708,-3.231471,6.221410,-1.417428,-2.587389,1.100056,-7.903885],[-1.517705,-4.305446,6.504511,5.294431,-3.165836,-2.653950,-9.817438,-0.294380],[-0.213883,-3.849026,1.986699,-6.018553,5.670185,7.848081,-5.001102,-2.223234],[-7.256169,1.742616,8.025000,-4.161362,-2.188442,-6.861569,-4.232484,0.287402],[-4.633689,5.203110,-9.839763,8.079433,-6.120291,-5.074055,-0.491675,-1.277600],[8.862926,0.438997,-1.138066,8.933579,-1.740662,1.215217,-9.921848,7.619197],[-9.023272,-1.347981,0.115366,7.582510,4.376217,-9.160139,-3.326173,-2.337639],[-3.668958,-5.730679,5.657096,-7.757676,3.588591,5.367536,-8.683871,-7.238876],[5.706747,1.434983,4.967385,3.472266,8.658318,-0.525602,-8.065034,0.250480]],[[-3.356714,2.207572,9.581105,-0.509212,-6.322019,-9.352862,-0.035714,3.434968],[-7.787213,-9.374137,9.089255,-4.339283,4.730557,-2.060598,9.418378,5.974675],[7.967994,-0.587857,-8.839110,-3.827908,-2.762886,0.458784,0.353559,-3.209034],[-0.528576,4.094800,-0.481133,-2.043670,3.309304,7.334491,-9.948029,-9.191174],[-3.591330,4.734192,3.648356,1.495034,-0.996336,4.319829,1.902145,0.078093],[-3.664531,-2.240072,-3.554886,1.756635,9.679007,9.826886,5.045447,-2.470054],[-4.515573,-4.349372,1.724885,6.547961,-4.380696,5.326115,-1.191654,0.403241],[-6.504778,-3.534379,-5.154641,-3.674294,-4.152748,-2.562939,5.663331,9.633348],[-3.853068,-9.475425,1.238361,6.327020,-9.009607,-8.063269,-6.524827,6.403560],[8.890542,0.847021,4.572983,6.515588,2.133680,5.664038,-2.236801,-3.900867],[-7.740624,-4.664564,-8.890740,-5.903552,7.874453,-3.931454,-4.768967,-0.448062]],[[6.456374,-0.924980,5.073292,-7.388714,8.529858,1.547606,5.778617,-6.464401],[-7.772881,4.703358,-2.638181,9.754116,-5.742783,2.425731,-2.139591,-5.656298],[-2.141604,-1.838946,3.197637,-9.926758,2.955430,-0.377310,-6.050722,-0.846510],[-7.457750,5.596361,5.211730,-5.159541,-7.757192,7.860306,4.890626,-8.338877],[-3.727797,6.437590,-6.588805,-7.323950,6.761646,-5.315079,0.734971,1.798403],[-5.039944,-0.860532,9.063819,-2.521485,7.678998,-8.960979,1.809896,-9.685573],[-9.137534,9.048984,0.404706,-9.237877,3.224757,-6.912488,8.869198,-6.215328],[8.585926,-3.076375,0.824507,-5.110180,-0.689916,5.588843,-6.668713,5.941255],[3.907853,9.605009,-9.047856,9.180313,-2.195100,-3.536290,6.265369,5.963867],[3.743564,-0.423449,-1.003737,4.519514,0.452933,4.524742,-0.730971,-8.009720],[8.806615,2.396423,0.060346,7.126087,-8.211519,-1.352100,-4.889687,-5.281133]],[[7.301727,-2.131336,-3.374508,-8.645072,-2.683727,9.378616,-2.773333,-9.537179],[0.250159,0.023727,7.190812,-0.732464,-6.042050,3.636303,-2.978539,-9.474677],[-6.263403,-4.849670,2.195145,4.056508,-8.235802,-0.753407,-6.636478,-0.714293],[-9.838263,4.633367,8.883863,-5.688248,-3.292170,-5.703355,8.791864,-7.743472],[-4.291072,-9.793402,3.591169,4.069456,-3.568143,-5.821845,3.706612,-8.586694],[-0.584363,1.118993,9.262353,3.825205,4.235335,7.220025,-8.341250,4.981869],[-2.463472,-1.867762,6.048892,7.960493,-3.173748,-5.168751,-6.119219,1.006118],[-5.086010,-3.816279,-0.879939,6.516252,-1.014915,2.358934,-7.795746,9.507199],[-3.580483,-5.318475,7.923262,-5.203521,1.066416,1.165143,1.541073,-9.466879],[4.626627,-0.588982,-3.905044,-0.424434,-4.212303,-7.095441,-1.797693,3.953568],[5.356033,-5.765590,6.652734,-1.299862,2.421947,-5.114665,0.376176,1.311544]]], dtype = "float64")#candidate|6967|(4, 11, 8)|const|float64
uop_6968 = relay.acosh(const_6967.astype('float64')) # shape=(4, 11, 8)
output = uop_6968
output2 = uop_6968
func_7002 = relay.Function([], output)
mod['func_7002'] = func_7002
mod = relay.transform.InferType()(mod)
mutated_mod['func_7002'] = func_7002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7002_call = mutated_mod.get_global_var('func_7002')
call_7003 = func_7002_call()
output = call_7003
func_7004 = relay.Function([], output)
mutated_mod['func_7004'] = func_7004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6872_call = mod.get_global_var('func_6872')
func_6873_call = mutated_mod.get_global_var('func_6873')
call_7079 = func_6872_call()
call_7080 = func_6872_call()
output = relay.Tuple([call_7079,])
output2 = relay.Tuple([call_7080,])
func_7101 = relay.Function([], output)
mod['func_7101'] = func_7101
mod = relay.transform.InferType()(mod)
mutated_mod['func_7101'] = func_7101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7101_call = mutated_mod.get_global_var('func_7101')
call_7102 = func_7101_call()
output = call_7102
func_7103 = relay.Function([], output)
mutated_mod['func_7103'] = func_7103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7140 = relay.var("var_7140", dtype = "float32", shape = ())#candidate|7140|()|var|float32
var_7141 = relay.var("var_7141", dtype = "float32", shape = (5, 10, 15))#candidate|7141|(5, 10, 15)|var|float32
bop_7142 = relay.not_equal(var_7140.astype('bool'), var_7141.astype('bool')) # shape=(5, 10, 15)
output = relay.Tuple([bop_7142,])
output2 = relay.Tuple([bop_7142,])
func_7174 = relay.Function([var_7140,var_7141,], output)
mod['func_7174'] = func_7174
mod = relay.transform.InferType()(mod)
mutated_mod['func_7174'] = func_7174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7174_call = mutated_mod.get_global_var('func_7174')
var_7176 = relay.var("var_7176", dtype = "float32", shape = ())#candidate|7176|()|var|float32
var_7177 = relay.var("var_7177", dtype = "float32", shape = (5, 10, 15))#candidate|7177|(5, 10, 15)|var|float32
call_7175 = func_7174_call(var_7176,var_7177,)
output = call_7175
func_7178 = relay.Function([var_7176,var_7177,], output)
mutated_mod['func_7178'] = func_7178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1579_call = mod.get_global_var('func_1579')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_7192 = relay.TupleGetItem(func_1579_call(), 1)
call_7193 = relay.TupleGetItem(func_1580_call(), 1)
func_5924_call = mod.get_global_var('func_5924')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_7203 = func_5924_call()
call_7204 = func_5924_call()
func_2072_call = mod.get_global_var('func_2072')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_7205 = relay.TupleGetItem(func_2072_call(), 1)
call_7206 = relay.TupleGetItem(func_2074_call(), 1)
output = relay.Tuple([call_7192,call_7203,call_7205,])
output2 = relay.Tuple([call_7193,call_7204,call_7206,])
func_7215 = relay.Function([], output)
mod['func_7215'] = func_7215
mod = relay.transform.InferType()(mod)
mutated_mod['func_7215'] = func_7215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7215_call = mutated_mod.get_global_var('func_7215')
call_7216 = func_7215_call()
output = call_7216
func_7217 = relay.Function([], output)
mutated_mod['func_7217'] = func_7217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_7238 = relay.TupleGetItem(func_139_call(), 0)
call_7239 = relay.TupleGetItem(func_140_call(), 0)
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_7264 = relay.TupleGetItem(func_495_call(relay.reshape(call_7238.astype('float32'), [6, 11, 14])), 1)
call_7265 = relay.TupleGetItem(func_497_call(relay.reshape(call_7238.astype('float32'), [6, 11, 14])), 1)
output = relay.Tuple([call_7238,call_7264,])
output2 = relay.Tuple([call_7239,call_7265,])
func_7266 = relay.Function([], output)
mod['func_7266'] = func_7266
mod = relay.transform.InferType()(mod)
mutated_mod['func_7266'] = func_7266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7266_call = mutated_mod.get_global_var('func_7266')
call_7267 = func_7266_call()
output = call_7267
func_7268 = relay.Function([], output)
mutated_mod['func_7268'] = func_7268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6662_call = mod.get_global_var('func_6662')
func_6664_call = mutated_mod.get_global_var('func_6664')
call_7282 = func_6662_call()
call_7283 = func_6662_call()
output = call_7282
output2 = call_7283
func_7289 = relay.Function([], output)
mod['func_7289'] = func_7289
mod = relay.transform.InferType()(mod)
mutated_mod['func_7289'] = func_7289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7289_call = mutated_mod.get_global_var('func_7289')
call_7290 = func_7289_call()
output = call_7290
func_7291 = relay.Function([], output)
mutated_mod['func_7291'] = func_7291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3840_call = mod.get_global_var('func_3840')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_7304 = func_3840_call()
call_7305 = func_3840_call()
output = call_7304
output2 = call_7305
func_7316 = relay.Function([], output)
mod['func_7316'] = func_7316
mod = relay.transform.InferType()(mod)
output = func_7316()
func_7317 = relay.Function([], output)
mutated_mod['func_7317'] = func_7317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4119_call = mod.get_global_var('func_4119')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_7355 = relay.TupleGetItem(func_4119_call(), 1)
call_7356 = relay.TupleGetItem(func_4121_call(), 1)
output = call_7355
output2 = call_7356
func_7364 = relay.Function([], output)
mod['func_7364'] = func_7364
mod = relay.transform.InferType()(mod)
output = func_7364()
func_7365 = relay.Function([], output)
mutated_mod['func_7365'] = func_7365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6662_call = mod.get_global_var('func_6662')
func_6664_call = mutated_mod.get_global_var('func_6664')
call_7429 = func_6662_call()
call_7430 = func_6662_call()
output = call_7429
output2 = call_7430
func_7432 = relay.Function([], output)
mod['func_7432'] = func_7432
mod = relay.transform.InferType()(mod)
mutated_mod['func_7432'] = func_7432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7432_call = mutated_mod.get_global_var('func_7432')
call_7433 = func_7432_call()
output = call_7433
func_7434 = relay.Function([], output)
mutated_mod['func_7434'] = func_7434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1545_call = mod.get_global_var('func_1545')
func_1547_call = mutated_mod.get_global_var('func_1547')
call_7437 = func_1545_call()
call_7438 = func_1545_call()
output = relay.Tuple([call_7437,])
output2 = relay.Tuple([call_7438,])
func_7442 = relay.Function([], output)
mod['func_7442'] = func_7442
mod = relay.transform.InferType()(mod)
output = func_7442()
func_7443 = relay.Function([], output)
mutated_mod['func_7443'] = func_7443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3391_call = mod.get_global_var('func_3391')
func_3392_call = mutated_mod.get_global_var('func_3392')
call_7516 = func_3391_call()
call_7517 = func_3391_call()
func_2072_call = mod.get_global_var('func_2072')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_7521 = relay.TupleGetItem(func_2072_call(), 1)
call_7522 = relay.TupleGetItem(func_2074_call(), 1)
output = relay.Tuple([call_7516,call_7521,])
output2 = relay.Tuple([call_7517,call_7522,])
func_7540 = relay.Function([], output)
mod['func_7540'] = func_7540
mod = relay.transform.InferType()(mod)
mutated_mod['func_7540'] = func_7540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7540_call = mutated_mod.get_global_var('func_7540')
call_7541 = func_7540_call()
output = call_7541
func_7542 = relay.Function([], output)
mutated_mod['func_7542'] = func_7542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7540_call = mod.get_global_var('func_7540')
func_7542_call = mutated_mod.get_global_var('func_7542')
call_7602 = relay.TupleGetItem(func_7540_call(), 1)
call_7603 = relay.TupleGetItem(func_7542_call(), 1)
output = call_7602
output2 = call_7603
func_7604 = relay.Function([], output)
mod['func_7604'] = func_7604
mod = relay.transform.InferType()(mod)
mutated_mod['func_7604'] = func_7604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7604_call = mutated_mod.get_global_var('func_7604')
call_7605 = func_7604_call()
output = call_7605
func_7606 = relay.Function([], output)
mutated_mod['func_7606'] = func_7606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3173_call = mod.get_global_var('func_3173')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_7640 = relay.TupleGetItem(func_3173_call(), 0)
call_7641 = relay.TupleGetItem(func_3174_call(), 0)
func_5227_call = mod.get_global_var('func_5227')
func_5228_call = mutated_mod.get_global_var('func_5228')
call_7666 = relay.TupleGetItem(func_5227_call(), 0)
call_7667 = relay.TupleGetItem(func_5228_call(), 0)
output = relay.Tuple([call_7640,call_7666,])
output2 = relay.Tuple([call_7641,call_7667,])
func_7675 = relay.Function([], output)
mod['func_7675'] = func_7675
mod = relay.transform.InferType()(mod)
output = func_7675()
func_7676 = relay.Function([], output)
mutated_mod['func_7676'] = func_7676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5474_call = mod.get_global_var('func_5474')
func_5475_call = mutated_mod.get_global_var('func_5475')
call_7677 = relay.TupleGetItem(func_5474_call(), 2)
call_7678 = relay.TupleGetItem(func_5475_call(), 2)
func_3728_call = mod.get_global_var('func_3728')
func_3729_call = mutated_mod.get_global_var('func_3729')
call_7682 = relay.TupleGetItem(func_3728_call(), 1)
call_7683 = relay.TupleGetItem(func_3729_call(), 1)
output = relay.Tuple([call_7677,call_7682,])
output2 = relay.Tuple([call_7678,call_7683,])
func_7687 = relay.Function([], output)
mod['func_7687'] = func_7687
mod = relay.transform.InferType()(mod)
mutated_mod['func_7687'] = func_7687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7687_call = mutated_mod.get_global_var('func_7687')
call_7688 = func_7687_call()
output = call_7688
func_7689 = relay.Function([], output)
mutated_mod['func_7689'] = func_7689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1637_call = mod.get_global_var('func_1637')
func_1639_call = mutated_mod.get_global_var('func_1639')
call_7703 = relay.TupleGetItem(func_1637_call(), 0)
call_7704 = relay.TupleGetItem(func_1639_call(), 0)
func_6719_call = mod.get_global_var('func_6719')
func_6721_call = mutated_mod.get_global_var('func_6721')
call_7707 = relay.TupleGetItem(func_6719_call(), 0)
call_7708 = relay.TupleGetItem(func_6721_call(), 0)
output = relay.Tuple([call_7703,call_7707,])
output2 = relay.Tuple([call_7704,call_7708,])
func_7714 = relay.Function([], output)
mod['func_7714'] = func_7714
mod = relay.transform.InferType()(mod)
output = func_7714()
func_7715 = relay.Function([], output)
mutated_mod['func_7715'] = func_7715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4604_call = mod.get_global_var('func_4604')
func_4606_call = mutated_mod.get_global_var('func_4606')
call_7747 = func_4604_call()
call_7748 = func_4604_call()
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_7749 = relay.TupleGetItem(func_1380_call(), 0)
call_7750 = relay.TupleGetItem(func_1381_call(), 0)
func_3325_call = mod.get_global_var('func_3325')
func_3327_call = mutated_mod.get_global_var('func_3327')
var_7755 = relay.var("var_7755", dtype = "uint16", shape = (3360,))#candidate|7755|(3360,)|var|uint16
call_7754 = relay.TupleGetItem(func_3325_call(relay.reshape(var_7755.astype('uint16'), [3360,])), 1)
call_7756 = relay.TupleGetItem(func_3327_call(relay.reshape(var_7755.astype('uint16'), [3360,])), 1)
func_4918_call = mod.get_global_var('func_4918')
func_4919_call = mutated_mod.get_global_var('func_4919')
call_7757 = relay.TupleGetItem(func_4918_call(), 0)
call_7758 = relay.TupleGetItem(func_4919_call(), 0)
func_2553_call = mod.get_global_var('func_2553')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_7766 = relay.TupleGetItem(func_2553_call(relay.reshape(var_7755.astype('uint16'), [3360,])), 3)
call_7767 = relay.TupleGetItem(func_2556_call(relay.reshape(var_7755.astype('uint16'), [3360,])), 3)
func_5163_call = mod.get_global_var('func_5163')
func_5165_call = mutated_mod.get_global_var('func_5165')
call_7768 = relay.TupleGetItem(func_5163_call(), 0)
call_7769 = relay.TupleGetItem(func_5165_call(), 0)
uop_7775 = relay.log2(call_7768.astype('float64')) # shape=(420, 8)
uop_7777 = relay.log2(call_7769.astype('float64')) # shape=(420, 8)
bop_7794 = relay.bitwise_or(uop_7775.astype('int16'), relay.reshape(var_7755.astype('int16'), relay.shape_of(uop_7775))) # shape=(420, 8)
bop_7797 = relay.bitwise_or(uop_7777.astype('int16'), relay.reshape(var_7755.astype('int16'), relay.shape_of(uop_7777))) # shape=(420, 8)
uop_7813 = relay.exp(bop_7794.astype('float64')) # shape=(420, 8)
uop_7815 = relay.exp(bop_7797.astype('float64')) # shape=(420, 8)
func_4673_call = mod.get_global_var('func_4673')
func_4675_call = mutated_mod.get_global_var('func_4675')
call_7822 = relay.TupleGetItem(func_4673_call(), 0)
call_7823 = relay.TupleGetItem(func_4675_call(), 0)
output = relay.Tuple([call_7747,call_7749,call_7754,call_7757,call_7766,uop_7813,call_7822,])
output2 = relay.Tuple([call_7748,call_7750,call_7756,call_7758,call_7767,uop_7815,call_7823,])
func_7827 = relay.Function([var_7755,], output)
mod['func_7827'] = func_7827
mod = relay.transform.InferType()(mod)
mutated_mod['func_7827'] = func_7827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7828 = relay.var("var_7828", dtype = "uint16", shape = (3360,))#candidate|7828|(3360,)|var|uint16
func_7827_call = mutated_mod.get_global_var('func_7827')
call_7829 = func_7827_call(var_7828)
output = call_7829
func_7830 = relay.Function([var_7828], output)
mutated_mod['func_7830'] = func_7830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4119_call = mod.get_global_var('func_4119')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_7855 = relay.TupleGetItem(func_4119_call(), 0)
call_7856 = relay.TupleGetItem(func_4121_call(), 0)
func_3867_call = mod.get_global_var('func_3867')
func_3870_call = mutated_mod.get_global_var('func_3870')
var_7869 = relay.var("var_7869", dtype = "float32", shape = (1800,))#candidate|7869|(1800,)|var|float32
const_7870 = relay.const([8,3,-2,1,-9,9,8,-5,10,5,4,-8,8,4,-1,5,6,3,4,-6,-6,-10,4,-1,1,-2,6,9,-2,-5,8,2,-9,-2,1,-7,2,-1,-1,1,-8,9,2,7,1,-7,-1,4,6,-2,5,3,-7,4,-5,-1,9,-7,10,-3,6,-1,-8,9,-3,10,2,-5,-8,-8,5,7,1,-5,10,1,9,-4,-7,3,-4,7,-8,5,-1,-8,4,10,-9,-4,4,-4,-7,2,-1,-3,-7,1,3,1,10,-10,-5,8,9,5,-9,-6,7,-10,10,3,6,-5,9,4,-5,2,9,6,-3,-9,1,-9,-3,7,4,3,4,-2,-3,-4,3,10,7,-9,-8,5,4,-10,-2,-10,-6,10,-2,3,-1,6,5,5,4,2,-2,5,-10,-5,-9,3,-2,5,7,9,-7,1,1,-3,2,10,4,-4,-8,9,5,-3,6,1,10,-3,-3,8,-2,2,6,-10,7,5,2,-3,7,-6,-7,-6,4,-1,-6,4,10,4,8,-6,-9,-10,-6,-9,-10,6,1,2,3,-6,-4,9,-6,10,8,-9,-9,-9,2,8,5,9,5,-3,7,-9,10,5,-2,2,-2,-6,-9,-8,5,3,9,3,-5,4,8,5,1,3,-6,3,5,-3,-6,-5,6,-8,10,-10,-10,7,10,-5,1,-6,5,6,-1,-4,7,-8,7,-1,9,-10,-8,8,-6,-10,-3,3,-6,-9,6,-5,-3,10,-1,5,-2,1,-3,-1,4,-5,8,6,-6,4,-8,-9,-2,-1,9,2,-2,-5,-6,3,8,8,7,-3,-10,-7,3,-1,6,-5,9,-10,2,7,2,9,-9,7,2,-1,4,-3,3,-2,-8,-5,8,-10,-1,-10,9,2,-6,-4,-8,1,2,-8,7,-5,1,-2,5,9,10,-8,7,-7,-6,1,5,-5,5,-5,5,9,-1,-5,4,-4,-3,1,10,-5,10,-2,8,-3,3,9,-9,-6,-1,9,-4,10,-5,9,1,-4,10,6,-5,2,9,6,10,-8,-2,6,2,-5,-7,2,10,8,4,-7,5,7,-3,-1,4,1,8,3,-3,9,-3,-7,9,-5,9,3,3,7,-10,8,8,9,-7,8,-1,10,-7,8,-2,10,5,3,-3,6,9,-9,-3,4,3,2,8,9,-8,-5,2,-10,-1,6,5,9,-6,-10,-9,1,-8,-7,4,6,-6,10,6,-4,-7,3,4,8,2,-1,4,-4,-2,1,-8,-7,5,10,-9,10,-9,-2,7,-7,7,10,9,-6,-5,-6,-1,7,2,1,6,-9,-6,-9,10,10,3,1,-3,2,3,3,1,-3,-1,-6,6,3,-6,-5,-8,6,-6,-3,5,1,5,3,5,-1,-10,3,-2,-6,-9,-5,-7,-10,9,3,1,3,5,-2,-1,9,7,5,-8,-8,-3,6,5,2,1,9,7,-8,7,7,2,-9,-9,8,7,-6,8,-4,-2,-8,-2,-5,-8,-5,4,3,7,-2,-6,4,6,-8,6,9,8,8,-4,-1,7,-7,8,-6,-2,3,-9,-3,-9,-1,-3,-10,8,3,5,6,9,-5,-5,-4,-9,7,4,-5,3,7,-6,8,-6,-8,4,3,1,-2,6,3,5,-3,2,-3,4,2,6,6,3,-3,9,-2,-5,-5,2,-8,10,5,1,-6,7,-5,-9,7,4,-9,-9,3,7,4,-10,8,4,-1,-1,-10,-6,-3,7,-7,3,5,-6,5,8,5,-2,7,6,2,8,8,-10,-9,5,1,-1,-10,-7,-2,-6,5,8,7,4,3,-3,6,-4,-2,2,-6,10,-1,3,-3,10,9,10,4,-5,-5,-8,4,5,-10,9,-9,-4,-7,-4,7,8,2,10,-1,-2,3,-7,-1,-3,9,-7,-3,1,-9,10,-8,2,6,5,8,4,-5,-10,-5,-7,7,5,6,-9,10,3,-6,8,-10,9,-10,1,6,-4,-4,-7,7,-10,7,-10,-9,-5,-1,-8,7,8,4,3,-1,-3,7,6,2,-7,-7,8,-3,2,-7,4,10,9,1,6,-10,7,-8,1,10,1,-6,-3,1,2,8,1,-8,-3,-4,-1,9,2,-10,7,1,-7,-6,-8,8,4,6,5,8,2,-9,6,10,3,-3,10,-10,-2,7,-1,10,2,-3,-9,-5,2,-6,1,-8,-6,7,-4,-2,1,-6,6,-10,-1,3,3,-3,-3,-5,4,9,4,-3,10,7,-5,-4,1,7,-8,-4,-2,5,-7,-8,-6,1,10,10,-9,1,-2,-7,2,4,6,-10,6,-4,8,4,-8,3,8,7,-2,5,7,6,-6,7,10,-2,3,-7,-7,-4,-5,4,10,-3,2,-6,-10,8,3,-1,5,9,-1,-8,9,-5,8,-10,-1,-9,-10,3,7,7,-9,5,4,-1,-10,5,-10,6,10,-4,-6,5,10,-10,-1,1,7,-3,7,8,-10,9,-3,-8,10,5,9,-3,-8,-7,10,-9,3,-10,4,2,-10,8,5,-6,9,10,-1,-8,6,10,-5,-4,2,9,-9,4,1,3,-7,2,2,6,8,6,9,-1,6,-3,9,-6,4,-10,-9,2,3,4,7,-1,-3,-1,3,-9,7,-7,5,-9,-3,-3,-3,10,10,-1,5,-3,9,3,4,-10,3,1,3,6,-6,-10,-3,-5,6,9,10,-10,-4,2,6,-2,1,8,1,10,2,-8,-10,-5,1,-8,5,-3,-2,8,-6,8,2,-3,-9,-10,-3,-3,3,9,-1,6,-8,7,-3,7,-5,-1,10,-10,7,7,10,2,7,7,2,-8,-4,10,9,-1,4,-1,-3,1,-3,-9,10,4,7,-9,-7,-9,1,-10,-9,-3,10,7,-5,5,-9,-10,-10,-8,8,-7,-2,7,6,-4,-8,-7,-2,-4,-3,6,-7,-2,-3,-5,-6,7,7,-3,-1,9,5,8,10,-6,-2,6,-9,6,7,-4,-4,-2,2,5,2,3,-1,5,-2,6,-5,3,1,7,-3,-2,9,9,1,7,9,3,8,1,10,3,-10,-9,-6,-8,5,-7,5,-8,-1,10,-4,9,-10,1,10,3,-8,10,9,4,-7,10,6,-8,2,6,10,7,8,10,-2,7,-7,6,4,-10,3,-4,-8,8,2,-6,-1,-4,3,-6,-9,4,1,-2,2,-7,1,-5,-6,9,-9,2,-9,9,-2,-6,-10,-9,-2,4,-6,-10,4,8,-10,-2,3,7,10,-6,10,5,6,-9,-8,2,-7,1,-10,3,-5,1,9,-1,-3,-5,-3,-5,6,-7,10,-8,-4,8,7,5,6,-1,-3,8,-3,3,3,5,3,-6,1,-7,5,10,9,-4,-1,-2,9,-2,-2,8,-2,-5,-5,7,-4,-3,-2,-1,-8,5,-3,-6,6,-5,-3,-4,-8,-2,-9,-8,-3,-4,-4,3,-1,3,-5,6,-7,2,6,6,2,-4,7,5,-5,-5,3,10,6,8,2,-7,-5,-8,-2,2,4,-8,-1,1,2,-4,-3,9,-10,3,10,-9,-6,5,-3,5,-6,10,-5,-3,6,10,-4,9,5,-3,1,-2,-3,6,-8,5,5,1,-6,-5,-2,10,-5,9,2,-6,8,-9,-7,-6,7,6,9,-9,2,7,-2,-9,7,-6,-9,-9,2,-7,2,-1,7,10,5,-10,7,10,-4,4,-4,-8,5,-2,-5,4,-2,-8,-4,-4,-10,-7,-2,6,-3,-7,3,4,3,6,2,-5,7,-3,4,10,-4,2,-4,-1,-1,8,2,-3,-5,-2,9,3,-3,-6,6,10,5,-5,10,-7,-4,6,-6,-2,-8,-10,-4,-4,9,-3,-6,-6,-6,-1,7,-9,3,-9,-4,10,5,-2,2,7,4,8,-4,-2,-5,9,10,-3,3,2,2,3,1,-8,9,-6,-9,4,9,6,-8,-6,-2,1,-10,5,4,-1,1,-8,7,3,8,-9,-5,3,-9,2,-7,-7,8,8,7,-9,-1,1,2,-5,-3,-9,1,-2,10,-2,-10,5,10,-2,-5,9,7,-5,4,-1,-4,5,-4,-6,2,-3,-8,10,4,-6,2,-4,-3,-10,-8,-4,-5,10,6,6,-5,-10,-9,-10,2,-1,-3,-5,-1,5,-8,-2,6,4,9,9,1,4,8,5,1,-6,1,3,6,3,-5,-9,-8,-4,-3,8,2,7,7,-2,10,-5,9,4,5,1,2,-4,3,7,1,-1,9,-5,-10,7,6,10,1,3,1,8,4,-8,-10,-4,-10,5,2,8,-6,-3,-10,-8,-9,6,4,7,-6,6,10,8,-4,-1,-1,-8,5,-1,-6,-5,9,9,7,-3,1,-10,7,10,9,8,2,10,9,4,10,4,-3,5,9,5,-7,-10,5,8,3,5,-1,-5,-6,-10,10,-10,-7,5,4,7,-8,-10,8,6,-1,9,8,6,4,-2,10,-9,10,-2,-7,8,5,-6,-3,4,-3,-9,8,-5,-1,-9,3,-5,-4,-7,-5,6,-2,-3,-7,10,2,3,7,4,-6,-9,3,-10,-3,9,2,10,-10,-9,-9,-8,-10,-3,-6,-5,10,-1,-7,3,8,8,9,-3,10,-5,1,-2,-4,-8,-1,-5,6,-7,9,-5,-2,-8,-10,10,-3,10,10,-6,8,7,8,2,9,9,7,-6,6,10,9,7,-8,-7,-1,-5,9,-8,-3,1,8,-2,3,-6,6,-4,-9,-6,-9,7,7,9,-5,3,7,-2,3,4,3,-4,9,3,-8,-6,3,-7,9,-6,-4,4,2,-8,1,-2,1,5,-3,-9,1,-6,-1,5,-10,4,-10,3,4,1,-3,-2,-9,6,9,-3,-1,5,3,-1,2,4,4,4,-1,3,-7,2,-6,-10,-6,-5,3,10,-1,8,6,5,-1,8,-5,-10,8,10,10,8,2,-2,5,-10,3,-10,-2,-9,-6,-7,-7,-3,8,-8,-3,2,-2,-2,-6,-3,-2,8,-10,7,5,4,4,7,-1,8,-3,-1,5,-2,-6,10,10,2,-6,-5,-6,10,-6,-9,6,-3,10,-6,7,-5,-4,1,-2,3,5,-8,-7,-10,-7,-2,-8,4,8,2,7,-8,-4,-5,3,4,-6,-8,1,7,-7,-3,-5,5,-8,-9,-4,-5,8,-5,-8,1,-3,8,-9,6,-6,-2,-7,-4,-4,9,2,8,-6,2,-4,-9,-4,-3,-1,-10,9,8,9,-10,-7,-2,-4,10,3,-5,7,-6,-10,5,-9,8,6,-3,-8,-1,5,-5,-2,-1,6,-2,10,3,8,-1,2,-6,-5,-7,-3,9,2,8,-6,-8,5,-5,-1,-6,8,-5,-9,3,9,7,10,1,10,5,8,-8,5,-9,4,5,-5,6,-3,-5,1,-6,10,1,5,-5,9,-8,-9,-3,2,-8,-10,10,3,6,9,-5,9,10,3,-9,-9,9,1,4,1,10,-4,7,-8,-1,4,8,3,-7,1,9,10,1,-1,7,-5,-5,9,-8,4,-4,5,-2,-9,-5,5,-4,1,8,-8,-5,-6,-4,4,-4,1,-9,-9,7,9,10,-5,9,-8,7,4,3,-4,-6,8,9,7,8,-8,-6,8,-1,8,8,-6,6,-8,-3,5,-3,9,-2,3,-4,6,9,6,8,9,2,10,-9,-6,-3,10,-1,1,7,7,4,-1,-9,3,3,-1,9,-4,4,-9,-10,-6,-9,-8,10,8,-9,8,-10,-5,-5,1,-2,2,-6,2,1,-10,-4,7,-4,-1,-7,-2,2,-1,6,10,-6,5,-3,-9,4,5,8,5,8,-4,2,4,-5,-10,-7,-10,-3,7,1,-10,-5,-4,-6,2,2,-3,-4,-10,-3,10,3,5,3,3,5,-9,-8,-3,2,2,-3,-2,-1,-6,7,4,-5,7,8,2,-5,6,-3,-2,6,3,-9,6,9,6,-9,-5,9,2,4,-5,-2,6,1,4,-2,-7,-2,-2,-7,7,9,10,-6,7,6,-10,-4,6,4,3,7,-6,-4,-9,7,9,-10,5,-3,7,-4,-10,5,6,-5,5,10,10,2,-7,7,-4,-4,4,-1,9,-10,-6,4,-2,10,3,-1,-3,4,1,-5,10,-5,-9,7,-4,6,10,1,-8,-1,2,-4,2,-7,1,9,-3,6,-9,-1,-10,2,-6,-1,-7,-7,-4,-5,1,1,-8,-5,-3,5,6,6,5,-5,10,-7,-10,-7,9,3,6,4,-2,-4,-10,8,9,1,9,-6,3,7,10,-8,-6,9,-2,-7,-1,-1,2,-8,-3,-6,6,3,-5,-1,-6,4,-1,-7,7,9,-5,-3,-2,-9,-2,7,-4,5,5,-6,8,-5,6,-2,-6,-3,3,-9,6,8,-2,6,-7,7,9,-5,7,6,3,-6,-8,1,4,-6,7,-10,1,7,7,2,-1,-4,6,-2,7,8,-9,-7,-9,5,9,7,1,9,-1,-3,5,-1,-7,-10,10,-2,-6,-2,-3,3,4,3,-7,3,-3,-8,-6,-1,-1,9,-10,-10,1,-3,3,-8,9,2,4,-2,4,5,-1,4,7,3,4,6,-7,4,7,7,-3,-2,6,4,-5,9,5,-10,-7,-2,8,10,8,-5,6,-1,-3,-8,8,-1,2,1,-3,2,5,3,-3,-1,7,-6,-10,-1,-1,-3,2,-1,4,-4,4,9,3,5,6,-4,1,-5,-8,-5,-7,5,-2,6,8,-5,9,2,-7,-7,-2,-8,-1,-6,-9,-8,-1,8,9,1,7,2,1,7,2,3,-4,-6,3,-6,5,1,-6,1,-4,-7,-8,8,-4,9,6,9,-2,7,-9,10,-6,9,-9,-1,3,-7,-8,2,7,-7,3,6,-1,5,-7,-3,3,7,4,-8,-6,10,7,6,-3,-10,1,4,-9,3,3,9,1,9,-5,-4,1,7,-6,-5,-7,5,-8,-9,7,1,9,-5,7,8,2,-3,6,4,-2,-8,1,7,2,6,-10,-1,-10,-1,-2,-7,1,-9,1,-6,2,1,9,3,-6,5,10,8,2,-5,8,-1,3,5,-3,8,-7,9,9,-9,2,2,8,10,-9,6,-8,-8,5,6,4,-5,2,-9,5,7,-2,9,-9,1,5,-9,2,-3,-1,-9,2,-8,-8,-7,-2,2,3,5,-10,2,-2,8,8,-5,2,-4,5,-1,6,8,10,4,-1,7,-5,-9,-10,3,10,-7,-1,9,10,1,-7,7,-8,5,2,-3,1,-6,-10,-10,-8,-5,5,-6,-3,4,5,1,4,5,8,-3,-1,-9,-7,-9,6,-3,-7,8,6,-4,-5,8,-3,-3,2,-9,4,-2,-8,7,5,5,-9,-4,6,9,4,-1,10,-7,10,3,-5,7,6,-7,4,-6,8,-9,9,8,-5,2,10,8,-5,-8,-8,6,-8,6,7,-4,-4,-1,-3,6,-5,3,-8,-9,-4,5,-9,5,-4,-9,4,7,-8,-1,-7,-1,5,-10,-7,-8,-6,-2,-4,4,9,-10,-9,-9,5,-10,-6,5,-6,-6,7,-5,-5,-10,3,6,9,5,2,7,-3,-10,-9,-2,-1,8,-2,-1,-10,-5,-8,5,6,-7,3,6,10,-8,-10,-4,9,-10,-2,10,-5,5,8,1,9,4,10,1,-5,-1,-7,9,4,9,-4,10,-5,-1,6,-9,-9,-10,-3,1,7,-7,4,2,-7,7,-1,-1,5,-7,5,7,-9,3,5,-1,5,-7,-6,-10,-2,-4,-6,-9,-8,-2,-4,-7,6,-6,3,3,7,-10,1,-6,8,7,-7,-7,-5,-8,-7,-4,4,-2,-9,-8,5,9,-7,-10,-5,9,5,6,4,-3,-8,4,8,10,10,-4,-3,4,8,-7,3,6,3,-10,-8,7,-9,-8,6,-6,6,-5,3,-1,3,5,-3,4,4,2,-6,-8,10,1,3,-6,7,8,-1,2,-4,-2,7,2,7,-3,-2,7,6,2,7,-8,9,6,-4,6,5,-6,3,4,-3,2,-10,9,-8,5,9,2,9,10,4,5,5,2,1,-7,-4,2,-9,-8,-4,-4,8,10,2,3,7,5,-1,-7,2,-7,-2,-10,3,-10,3,-9,8,10,-1,-5,-3,10,5,4,-1,4,3,-6,4,-1,-10,7,2,-7,2,-1,10,7,-9,5,-6,-5,4,3,-9,-6,7,-6,-3,-1,-5,-10,-4,-2,-1,-4,7,6,-5,1,7,5,-3,2,4,-10,8,5,8,4,6,6,9,9,3,8,-7,4,3,-5,1,-7,-5,10,2,3,-4,-5,5,5,-4,-9,-5,3,1,5,1,-1,-6,2,-5,-10,-5,9,9,-7,-8,-5,9,3,6,-2,-1,5,-1,9,-1,-4,4,-6,1,7,10,-6,-2,9,-8,4,3,9,6,2,7,-4,3,-5,3,-6,5,-4,-1,-4,-5,10,-10,1,-9,5,-3,6,-9,10,4,-7,-8,-6,5,7,2,7,6,-10,-5,10,4,-3,8,6,-1,-1,-5,9,-10,-1,6,4,6,-7,-1,-8,-7,-7,-6,9,8,-8,8,5,4,2,-4,1,2,-2,9,7,2,-10,-9,-6,10,1,9,-8,2,4,6,-5,-5,3,-6,9,6,-6,10,-3,-6,-10,2,10,10,1,1,-6,4,10,10,10,3,-3,8,5,2,-10,5,-10,6,-3,-9,3,8,3,-7,6,-9,-2,6,-2,5,5,-4,7,8,6,8,-9,5,6,7,1,-2,-2,2,-9,5,-7,2,-10,-3,-8,-8,-7,10,-4,-9,2,9,2,-9,-6,-6,5,8,-8,10,2,-4,-10,6,1,10,-7,-7,-10,-1,-1,9,6,-1,-10,2,-8,5,-1,5,-6,-5,-6,1,9,2,8,-7,-1,-1,-7,5,7,7,-10,-2,-9,-9,-9,1,-2,-9,-4], dtype = "uint16")#candidate|7870|(3360,)|const|uint16
call_7868 = relay.TupleGetItem(func_3867_call(relay.reshape(var_7869.astype('float32'), [15, 10, 12]), relay.reshape(const_7870.astype('uint16'), [3360,]), ), 2)
call_7871 = relay.TupleGetItem(func_3870_call(relay.reshape(var_7869.astype('float32'), [15, 10, 12]), relay.reshape(const_7870.astype('uint16'), [3360,]), ), 2)
output = relay.Tuple([call_7855,call_7868,var_7869,const_7870,])
output2 = relay.Tuple([call_7856,call_7871,var_7869,const_7870,])
func_7890 = relay.Function([var_7869,], output)
mod['func_7890'] = func_7890
mod = relay.transform.InferType()(mod)
mutated_mod['func_7890'] = func_7890
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7891 = relay.var("var_7891", dtype = "float32", shape = (1800,))#candidate|7891|(1800,)|var|float32
func_7890_call = mutated_mod.get_global_var('func_7890')
call_7892 = func_7890_call(var_7891)
output = call_7892
func_7893 = relay.Function([var_7891], output)
mutated_mod['func_7893'] = func_7893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3391_call = mod.get_global_var('func_3391')
func_3392_call = mutated_mod.get_global_var('func_3392')
call_7911 = func_3391_call()
call_7912 = func_3391_call()
func_3325_call = mod.get_global_var('func_3325')
func_3327_call = mutated_mod.get_global_var('func_3327')
call_7923 = relay.TupleGetItem(func_3325_call(relay.reshape(call_7911.astype('uint16'), [3360,])), 2)
call_7924 = relay.TupleGetItem(func_3327_call(relay.reshape(call_7911.astype('uint16'), [3360,])), 2)
func_4901_call = mod.get_global_var('func_4901')
func_4903_call = mutated_mod.get_global_var('func_4903')
call_7925 = func_4901_call()
call_7926 = func_4901_call()
var_7954 = relay.var("var_7954", dtype = "bool", shape = (840, 4))#candidate|7954|(840, 4)|var|bool
bop_7955 = relay.mod(call_7911.astype('float64'), relay.reshape(var_7954.astype('float64'), relay.shape_of(call_7911))) # shape=(840, 4)
bop_7958 = relay.mod(call_7912.astype('float64'), relay.reshape(var_7954.astype('float64'), relay.shape_of(call_7912))) # shape=(840, 4)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_7959 = relay.TupleGetItem(func_139_call(), 0)
call_7960 = relay.TupleGetItem(func_140_call(), 0)
uop_7973 = relay.cos(bop_7955.astype('float64')) # shape=(840, 4)
uop_7975 = relay.cos(bop_7958.astype('float64')) # shape=(840, 4)
func_7890_call = mod.get_global_var('func_7890')
func_7893_call = mutated_mod.get_global_var('func_7893')
var_7977 = relay.var("var_7977", dtype = "float32", shape = (1800,))#candidate|7977|(1800,)|var|float32
call_7976 = relay.TupleGetItem(func_7890_call(relay.reshape(var_7977.astype('float32'), [1800,])), 1)
call_7978 = relay.TupleGetItem(func_7893_call(relay.reshape(var_7977.astype('float32'), [1800,])), 1)
var_7979 = relay.var("var_7979", dtype = "uint16", shape = (3360,))#candidate|7979|(3360,)|var|uint16
bop_7980 = relay.less(call_7976.astype('bool'), relay.reshape(var_7979.astype('bool'), relay.shape_of(call_7976))) # shape=(3360,)
bop_7983 = relay.less(call_7978.astype('bool'), relay.reshape(var_7979.astype('bool'), relay.shape_of(call_7978))) # shape=(3360,)
bop_7988 = relay.right_shift(call_7911.astype('int32'), relay.reshape(var_7979.astype('int32'), relay.shape_of(call_7911))) # shape=(840, 4)
bop_7991 = relay.right_shift(call_7912.astype('int32'), relay.reshape(var_7979.astype('int32'), relay.shape_of(call_7912))) # shape=(840, 4)
bop_7994 = relay.minimum(uop_7973.astype('int32'), relay.reshape(call_7976.astype('int32'), relay.shape_of(uop_7973))) # shape=(840, 4)
bop_7997 = relay.minimum(uop_7975.astype('int32'), relay.reshape(call_7978.astype('int32'), relay.shape_of(uop_7975))) # shape=(840, 4)
uop_8001 = relay.sin(uop_7973.astype('float32')) # shape=(840, 4)
uop_8003 = relay.sin(uop_7975.astype('float32')) # shape=(840, 4)
func_5032_call = mod.get_global_var('func_5032')
func_5034_call = mutated_mod.get_global_var('func_5034')
call_8008 = relay.TupleGetItem(func_5032_call(), 0)
call_8009 = relay.TupleGetItem(func_5034_call(), 0)
output = relay.Tuple([call_7923,call_7925,call_7959,var_7977,bop_7980,bop_7988,bop_7994,uop_8001,call_8008,])
output2 = relay.Tuple([call_7924,call_7926,call_7960,var_7977,bop_7983,bop_7991,bop_7997,uop_8003,call_8009,])
func_8013 = relay.Function([var_7954,var_7977,var_7979,], output)
mod['func_8013'] = func_8013
mod = relay.transform.InferType()(mod)
var_8014 = relay.var("var_8014", dtype = "bool", shape = (840, 4))#candidate|8014|(840, 4)|var|bool
var_8015 = relay.var("var_8015", dtype = "float32", shape = (1800,))#candidate|8015|(1800,)|var|float32
var_8016 = relay.var("var_8016", dtype = "uint16", shape = (3360,))#candidate|8016|(3360,)|var|uint16
output = func_8013(var_8014,var_8015,var_8016,)
func_8017 = relay.Function([var_8014,var_8015,var_8016,], output)
mutated_mod['func_8017'] = func_8017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7604_call = mod.get_global_var('func_7604')
func_7606_call = mutated_mod.get_global_var('func_7606')
call_8021 = func_7604_call()
call_8022 = func_7604_call()
output = call_8021
output2 = call_8022
func_8024 = relay.Function([], output)
mod['func_8024'] = func_8024
mod = relay.transform.InferType()(mod)
mutated_mod['func_8024'] = func_8024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8024_call = mutated_mod.get_global_var('func_8024')
call_8025 = func_8024_call()
output = call_8025
func_8026 = relay.Function([], output)
mutated_mod['func_8026'] = func_8026
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8030 = relay.const([[[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True]],[[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False]],[[False],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False]],[[False],[True],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True]],[[True],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False]],[[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[False],[True]],[[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False]],[[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[False]],[[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False]],[[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False]],[[True],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True]],[[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False]]], dtype = "bool")#candidate|8030|(12, 15, 1)|const|bool
var_8031 = relay.var("var_8031", dtype = "bool", shape = (12, 15, 1))#candidate|8031|(12, 15, 1)|var|bool
bop_8032 = relay.logical_or(const_8030.astype('bool'), relay.reshape(var_8031.astype('bool'), relay.shape_of(const_8030))) # shape=(12, 15, 1)
output = bop_8032
output2 = bop_8032
func_8035 = relay.Function([var_8031,], output)
mod['func_8035'] = func_8035
mod = relay.transform.InferType()(mod)
var_8036 = relay.var("var_8036", dtype = "bool", shape = (12, 15, 1))#candidate|8036|(12, 15, 1)|var|bool
output = func_8035(var_8036)
func_8037 = relay.Function([var_8036], output)
mutated_mod['func_8037'] = func_8037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_725_call = mod.get_global_var('func_725')
func_726_call = mutated_mod.get_global_var('func_726')
call_8056 = relay.TupleGetItem(func_725_call(), 0)
call_8057 = relay.TupleGetItem(func_726_call(), 0)
func_4715_call = mod.get_global_var('func_4715')
func_4716_call = mutated_mod.get_global_var('func_4716')
call_8060 = relay.TupleGetItem(func_4715_call(), 0)
call_8061 = relay.TupleGetItem(func_4716_call(), 0)
output = relay.Tuple([call_8056,call_8060,])
output2 = relay.Tuple([call_8057,call_8061,])
func_8067 = relay.Function([], output)
mod['func_8067'] = func_8067
mod = relay.transform.InferType()(mod)
mutated_mod['func_8067'] = func_8067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8067_call = mutated_mod.get_global_var('func_8067')
call_8068 = func_8067_call()
output = call_8068
func_8069 = relay.Function([], output)
mutated_mod['func_8069'] = func_8069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4715_call = mod.get_global_var('func_4715')
func_4716_call = mutated_mod.get_global_var('func_4716')
call_8113 = relay.TupleGetItem(func_4715_call(), 0)
call_8114 = relay.TupleGetItem(func_4716_call(), 0)
output = relay.Tuple([call_8113,])
output2 = relay.Tuple([call_8114,])
func_8133 = relay.Function([], output)
mod['func_8133'] = func_8133
mod = relay.transform.InferType()(mod)
output = func_8133()
func_8134 = relay.Function([], output)
mutated_mod['func_8134'] = func_8134
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8167 = relay.const([[[-5.824231,1.130348,-3.575824,-3.639037,-7.471355,1.581152,-5.890831],[-6.989793,3.223134,0.876585,-2.215167,-2.273097,4.874343,5.009331],[3.521180,1.267036,-4.095359,8.722204,-5.478713,-9.744617,4.716127],[0.753699,-3.816918,-1.846576,-5.231892,3.678504,-9.806460,6.101777],[7.113087,-1.915236,0.920768,-4.381959,-4.037977,5.610931,-2.470554],[3.119939,1.956237,7.695103,-6.487120,4.914494,4.853964,8.774345],[-9.522867,7.023447,-1.412854,3.361306,-0.671963,0.140533,5.762167],[3.208916,-4.035663,4.251370,4.762001,-7.858967,6.283115,-1.481825],[-9.245424,-4.414414,-2.891718,-6.941349,8.853060,2.364005,-1.302536],[-8.165256,9.566015,0.296923,-5.127370,7.438571,6.660369,6.560694]],[[8.025500,7.851781,-8.158445,4.361264,-7.302354,0.996455,5.881512],[3.841691,4.688942,2.591100,7.417108,7.562986,5.604262,1.078474],[-4.864683,5.634333,-6.041094,8.764303,-4.631143,6.100146,2.614589],[-2.856289,4.971185,-3.839804,5.592103,0.983921,-7.383299,-9.645883],[7.142857,-4.896064,4.188496,-8.658737,-8.707973,-4.148831,-1.990456],[5.145181,-0.207283,-3.434983,1.278765,-2.310283,-5.080070,1.907397],[-3.797569,-2.708395,6.054175,8.158860,1.422496,-1.189865,-9.030442],[-1.606383,7.838562,-8.469510,-8.556281,7.229665,0.198358,-8.390556],[-3.780781,-0.046986,-5.697806,-9.175356,9.295604,-1.833903,9.698910],[-3.433352,6.226339,-0.423672,3.140513,-1.831545,9.116167,9.801973]],[[8.317127,-2.106539,-5.525841,0.176395,-5.396920,-8.361451,3.087468],[-5.869922,-5.692117,-9.991120,5.622871,-1.902503,8.209805,-9.332292],[-2.991081,5.535798,-5.831266,4.325295,-1.012164,1.198572,4.456119],[-6.943118,-0.911749,1.324245,-6.326786,-0.565871,8.708879,-6.360501],[9.387156,4.938146,-3.115484,5.903239,9.696132,9.423642,1.136396],[-1.243285,4.437186,-2.024270,0.023320,-9.230399,0.340337,4.686920],[6.173714,-7.886834,0.141399,-0.506667,-8.028448,-6.891451,1.547132],[-9.382867,-1.235455,1.357518,5.443673,3.127448,0.608535,-4.818485],[-0.682920,8.327215,8.823773,-1.804057,-0.656455,6.965982,-9.408756],[-1.102346,6.264619,7.747435,4.676589,7.122158,-4.789696,7.903608]],[[-9.888927,-6.587140,2.462703,-6.756491,9.633781,7.090778,-4.639693],[3.282244,-3.995632,-4.622329,-5.008035,1.785367,-4.621763,-7.064797],[0.688669,-8.404468,-6.838376,-2.776614,8.805678,-7.885927,7.894130],[-1.395070,-9.857164,6.318813,1.157453,6.765946,8.727077,3.215122],[0.206327,-0.131520,2.110709,2.702552,4.992810,9.242456,-5.766610],[-9.357269,-7.149451,0.975033,-7.826616,8.113564,-9.557407,8.476685],[-3.236741,2.496683,-7.385057,-9.478056,9.871164,1.149660,-3.319839],[8.619868,2.189408,-6.768839,-7.414108,-8.953225,-5.248976,-6.344884],[-3.431316,-4.647230,-2.391461,7.349632,6.794036,-9.405322,3.955648],[-2.761481,-2.444742,-3.866563,1.090505,7.711082,5.807767,-7.784563]],[[-4.297843,-0.082677,-9.454707,5.053620,5.316721,1.282737,-6.342155],[6.710694,-5.330363,6.040423,8.758599,-6.295874,9.377546,-6.137133],[2.808626,-2.894301,7.319108,4.320858,-4.427305,-6.133683,6.578259],[-8.132077,6.037402,4.072645,9.487448,-8.606710,-5.415583,7.279485],[0.925329,-1.814583,-9.068271,-2.634915,-0.245075,3.767147,-7.056594],[-7.154574,-4.504022,8.692820,-3.432697,4.029813,-2.839036,-4.196272],[-4.896531,-3.499836,4.454381,-9.346929,1.928808,3.803036,-0.283815],[-0.471168,-9.510171,-8.758449,-0.935170,-5.294397,-7.368101,-2.771717],[3.559181,-5.039916,3.803034,7.165326,9.441725,-3.950417,-1.357065],[-5.402715,3.012899,6.503667,0.903417,-0.225312,-7.653465,-7.877187]],[[-6.230512,0.725086,3.360277,6.792249,-5.056409,5.592311,-3.894834],[-7.747919,5.391908,-6.398552,-2.466459,-7.914128,6.994993,5.760141],[2.084305,4.299599,-3.897632,-2.832193,-0.477084,-6.060010,-9.028938],[-1.004150,-7.479222,-4.266232,-6.175773,-2.862537,-0.043800,-6.475131],[9.634977,7.865589,-1.027486,-2.427515,1.171299,-7.913893,-3.203983],[-2.326643,9.767861,0.790484,-8.249779,9.305145,-8.103674,9.378348],[1.710297,5.946159,9.838362,6.320395,7.451172,-1.788885,-7.547884],[-2.749111,-1.239232,-5.339893,6.592450,4.959088,9.154203,-1.057397],[-3.245553,-3.423545,-4.803497,-7.982300,8.623588,9.104207,5.502288],[7.192701,-9.325448,-2.396655,6.769925,-1.698696,-6.496715,-0.380259]]], dtype = "float32")#candidate|8167|(6, 10, 7)|const|float32
uop_8168 = relay.cos(const_8167.astype('float32')) # shape=(6, 10, 7)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_8201 = relay.TupleGetItem(func_4423_call(), 0)
call_8202 = relay.TupleGetItem(func_4425_call(), 0)
func_8035_call = mod.get_global_var('func_8035')
func_8037_call = mutated_mod.get_global_var('func_8037')
const_8225 = relay.const([False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,True,False,False,False,False], dtype = "bool")#candidate|8225|(180,)|const|bool
call_8224 = func_8035_call(relay.reshape(const_8225.astype('bool'), [12, 15, 1]))
call_8226 = func_8035_call(relay.reshape(const_8225.astype('bool'), [12, 15, 1]))
uop_8230 = relay.acos(uop_8168.astype('float64')) # shape=(6, 10, 7)
func_6451_call = mod.get_global_var('func_6451')
func_6453_call = mutated_mod.get_global_var('func_6453')
call_8244 = relay.TupleGetItem(func_6451_call(), 0)
call_8245 = relay.TupleGetItem(func_6453_call(), 0)
func_6309_call = mod.get_global_var('func_6309')
func_6310_call = mutated_mod.get_global_var('func_6310')
call_8275 = relay.TupleGetItem(func_6309_call(), 2)
call_8276 = relay.TupleGetItem(func_6310_call(), 2)
bop_8280 = relay.maximum(uop_8230.astype('float32'), relay.reshape(const_8167.astype('float32'), relay.shape_of(uop_8230))) # shape=(6, 10, 7)
output = relay.Tuple([call_8201,call_8224,const_8225,call_8244,call_8275,bop_8280,])
output2 = relay.Tuple([call_8202,call_8226,const_8225,call_8245,call_8276,bop_8280,])
func_8289 = relay.Function([], output)
mod['func_8289'] = func_8289
mod = relay.transform.InferType()(mod)
output = func_8289()
func_8290 = relay.Function([], output)
mutated_mod['func_8290'] = func_8290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1851_call = mod.get_global_var('func_1851')
func_1852_call = mutated_mod.get_global_var('func_1852')
call_8304 = relay.TupleGetItem(func_1851_call(), 2)
call_8305 = relay.TupleGetItem(func_1852_call(), 2)
output = relay.Tuple([call_8304,])
output2 = relay.Tuple([call_8305,])
func_8319 = relay.Function([], output)
mod['func_8319'] = func_8319
mod = relay.transform.InferType()(mod)
mutated_mod['func_8319'] = func_8319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8319_call = mutated_mod.get_global_var('func_8319')
call_8320 = func_8319_call()
output = call_8320
func_8321 = relay.Function([], output)
mutated_mod['func_8321'] = func_8321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1506_call = mutated_mod.get_global_var('func_1506')
call_8344 = relay.TupleGetItem(func_1505_call(), 0)
call_8345 = relay.TupleGetItem(func_1506_call(), 0)
output = relay.Tuple([call_8344,])
output2 = relay.Tuple([call_8345,])
func_8360 = relay.Function([], output)
mod['func_8360'] = func_8360
mod = relay.transform.InferType()(mod)
output = func_8360()
func_8361 = relay.Function([], output)
mutated_mod['func_8361'] = func_8361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6426_call = mod.get_global_var('func_6426')
func_6428_call = mutated_mod.get_global_var('func_6428')
call_8427 = relay.TupleGetItem(func_6426_call(), 0)
call_8428 = relay.TupleGetItem(func_6428_call(), 0)
output = relay.Tuple([call_8427,])
output2 = relay.Tuple([call_8428,])
func_8434 = relay.Function([], output)
mod['func_8434'] = func_8434
mod = relay.transform.InferType()(mod)
mutated_mod['func_8434'] = func_8434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8434_call = mutated_mod.get_global_var('func_8434')
call_8435 = func_8434_call()
output = call_8435
func_8436 = relay.Function([], output)
mutated_mod['func_8436'] = func_8436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3444_call = mod.get_global_var('func_3444')
func_3446_call = mutated_mod.get_global_var('func_3446')
call_8451 = func_3444_call()
call_8452 = func_3444_call()
output = relay.Tuple([call_8451,])
output2 = relay.Tuple([call_8452,])
func_8463 = relay.Function([], output)
mod['func_8463'] = func_8463
mod = relay.transform.InferType()(mod)
output = func_8463()
func_8464 = relay.Function([], output)
mutated_mod['func_8464'] = func_8464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1264_call = mod.get_global_var('func_1264')
func_1265_call = mutated_mod.get_global_var('func_1265')
call_8516 = relay.TupleGetItem(func_1264_call(), 1)
call_8517 = relay.TupleGetItem(func_1265_call(), 1)
func_4315_call = mod.get_global_var('func_4315')
func_4317_call = mutated_mod.get_global_var('func_4317')
call_8561 = relay.TupleGetItem(func_4315_call(), 0)
call_8562 = relay.TupleGetItem(func_4317_call(), 0)
func_4918_call = mod.get_global_var('func_4918')
func_4919_call = mutated_mod.get_global_var('func_4919')
call_8570 = relay.TupleGetItem(func_4918_call(), 0)
call_8571 = relay.TupleGetItem(func_4919_call(), 0)
func_4715_call = mod.get_global_var('func_4715')
func_4716_call = mutated_mod.get_global_var('func_4716')
call_8577 = relay.TupleGetItem(func_4715_call(), 0)
call_8578 = relay.TupleGetItem(func_4716_call(), 0)
func_5290_call = mod.get_global_var('func_5290')
func_5292_call = mutated_mod.get_global_var('func_5292')
call_8579 = relay.TupleGetItem(func_5290_call(), 0)
call_8580 = relay.TupleGetItem(func_5292_call(), 0)
func_1202_call = mod.get_global_var('func_1202')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_8581 = relay.TupleGetItem(func_1202_call(), 1)
call_8582 = relay.TupleGetItem(func_1204_call(), 1)
output = relay.Tuple([call_8516,call_8561,call_8570,call_8577,call_8579,call_8581,])
output2 = relay.Tuple([call_8517,call_8562,call_8571,call_8578,call_8580,call_8582,])
func_8586 = relay.Function([], output)
mod['func_8586'] = func_8586
mod = relay.transform.InferType()(mod)
mutated_mod['func_8586'] = func_8586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8586_call = mutated_mod.get_global_var('func_8586')
call_8587 = func_8586_call()
output = call_8587
func_8588 = relay.Function([], output)
mutated_mod['func_8588'] = func_8588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7289_call = mod.get_global_var('func_7289')
func_7291_call = mutated_mod.get_global_var('func_7291')
call_8643 = func_7289_call()
call_8644 = func_7289_call()
output = relay.Tuple([call_8643,])
output2 = relay.Tuple([call_8644,])
func_8648 = relay.Function([], output)
mod['func_8648'] = func_8648
mod = relay.transform.InferType()(mod)
output = func_8648()
func_8649 = relay.Function([], output)
mutated_mod['func_8649'] = func_8649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6505_call = mod.get_global_var('func_6505')
func_6506_call = mutated_mod.get_global_var('func_6506')
call_8693 = relay.TupleGetItem(func_6505_call(), 2)
call_8694 = relay.TupleGetItem(func_6506_call(), 2)
output = relay.Tuple([call_8693,])
output2 = relay.Tuple([call_8694,])
func_8705 = relay.Function([], output)
mod['func_8705'] = func_8705
mod = relay.transform.InferType()(mod)
output = func_8705()
func_8706 = relay.Function([], output)
mutated_mod['func_8706'] = func_8706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7675_call = mod.get_global_var('func_7675')
func_7676_call = mutated_mod.get_global_var('func_7676')
call_8710 = relay.TupleGetItem(func_7675_call(), 1)
call_8711 = relay.TupleGetItem(func_7676_call(), 1)
output = call_8710
output2 = call_8711
func_8720 = relay.Function([], output)
mod['func_8720'] = func_8720
mod = relay.transform.InferType()(mod)
mutated_mod['func_8720'] = func_8720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8720_call = mutated_mod.get_global_var('func_8720')
call_8721 = func_8720_call()
output = call_8721
func_8722 = relay.Function([], output)
mutated_mod['func_8722'] = func_8722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7687_call = mod.get_global_var('func_7687')
func_7689_call = mutated_mod.get_global_var('func_7689')
call_8723 = relay.TupleGetItem(func_7687_call(), 1)
call_8724 = relay.TupleGetItem(func_7689_call(), 1)
var_8728 = relay.var("var_8728", dtype = "bool", shape = (840, 4))#candidate|8728|(840, 4)|var|bool
bop_8729 = relay.floor_mod(call_8723.astype('float32'), relay.reshape(var_8728.astype('float32'), relay.shape_of(call_8723))) # shape=(840, 4)
bop_8732 = relay.floor_mod(call_8724.astype('float32'), relay.reshape(var_8728.astype('float32'), relay.shape_of(call_8724))) # shape=(840, 4)
func_7604_call = mod.get_global_var('func_7604')
func_7606_call = mutated_mod.get_global_var('func_7606')
call_8738 = func_7604_call()
call_8739 = func_7604_call()
bop_8740 = relay.add(call_8723.astype('float32'), relay.reshape(bop_8729.astype('float32'), relay.shape_of(call_8723))) # shape=(840, 4)
bop_8743 = relay.add(call_8724.astype('float32'), relay.reshape(bop_8732.astype('float32'), relay.shape_of(call_8724))) # shape=(840, 4)
output = relay.Tuple([call_8738,bop_8740,])
output2 = relay.Tuple([call_8739,bop_8743,])
func_8764 = relay.Function([var_8728,], output)
mod['func_8764'] = func_8764
mod = relay.transform.InferType()(mod)
mutated_mod['func_8764'] = func_8764
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8765 = relay.var("var_8765", dtype = "bool", shape = (840, 4))#candidate|8765|(840, 4)|var|bool
func_8764_call = mutated_mod.get_global_var('func_8764')
call_8766 = func_8764_call(var_8765)
output = call_8766
func_8767 = relay.Function([var_8765], output)
mutated_mod['func_8767'] = func_8767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8586_call = mod.get_global_var('func_8586')
func_8588_call = mutated_mod.get_global_var('func_8588')
call_8798 = relay.TupleGetItem(func_8586_call(), 2)
call_8799 = relay.TupleGetItem(func_8588_call(), 2)
output = relay.Tuple([call_8798,])
output2 = relay.Tuple([call_8799,])
func_8808 = relay.Function([], output)
mod['func_8808'] = func_8808
mod = relay.transform.InferType()(mod)
mutated_mod['func_8808'] = func_8808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8808_call = mutated_mod.get_global_var('func_8808')
call_8809 = func_8808_call()
output = call_8809
func_8810 = relay.Function([], output)
mutated_mod['func_8810'] = func_8810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6451_call = mod.get_global_var('func_6451')
func_6453_call = mutated_mod.get_global_var('func_6453')
call_8813 = relay.TupleGetItem(func_6451_call(), 2)
call_8814 = relay.TupleGetItem(func_6453_call(), 2)
output = call_8813
output2 = call_8814
func_8830 = relay.Function([], output)
mod['func_8830'] = func_8830
mod = relay.transform.InferType()(mod)
output = func_8830()
func_8831 = relay.Function([], output)
mutated_mod['func_8831'] = func_8831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1230_call = mod.get_global_var('func_1230')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_8899 = relay.TupleGetItem(func_1230_call(), 0)
call_8900 = relay.TupleGetItem(func_1231_call(), 0)
func_7890_call = mod.get_global_var('func_7890')
func_7893_call = mutated_mod.get_global_var('func_7893')
const_8907 = relay.const([[-1.862632,1.230160],[-9.517530,-4.455507],[-4.382749,0.179885],[0.411416,-4.542227],[-7.084211,5.044663],[-5.655478,7.152273],[-7.793263,-2.382644],[9.864861,9.717305],[-6.356452,-2.633983],[-0.872819,-9.842530],[5.463538,-7.881785],[-5.493846,-6.409064],[1.383260,2.622680],[5.708911,-1.445835],[2.798046,-4.024043],[-5.195378,-7.902450],[7.787972,5.019229],[7.457642,-9.365230],[-2.369772,-0.090892],[2.118415,0.737200],[-8.524869,-3.121210],[0.142697,0.653076],[5.685076,2.200114],[2.698039,-3.874091],[8.537901,-7.985440],[8.479017,2.958712],[8.757870,3.411362],[-5.696695,1.138015],[6.510868,-3.042755],[-1.446301,4.812797],[-0.162945,3.367352],[0.184954,-8.549343],[-7.737178,6.709119],[5.339209,4.325582],[-4.045039,-8.595073],[4.209386,0.347428],[5.351507,3.153871],[6.324786,-1.951945],[-6.297977,9.551002],[4.784649,-6.397366],[-8.565952,-2.013540],[-3.909591,1.607661],[-1.381247,8.975123],[7.436582,-9.082191],[9.252109,0.966958],[-0.510957,-3.291928],[6.324575,-8.944782],[5.932870,-7.849377],[3.888757,5.325758],[-0.137839,-8.255566],[-6.880958,-5.890797],[8.031352,6.638892],[9.911677,5.958124],[-4.222847,-4.429041],[-0.047045,-8.996803],[6.093496,1.491567],[7.476886,-0.262249],[6.617655,-3.761193],[-5.732520,-9.201645],[7.507271,-5.125852],[-9.222008,3.959273],[7.348235,-2.750406],[-3.592081,3.139898],[-0.704939,-4.757237],[-6.648332,8.758148],[-6.270180,9.913003],[0.746334,-1.361550],[6.749838,2.598456],[-3.490636,-3.345394],[-5.387078,9.685413],[-3.496080,-3.458801],[-9.788838,-2.656739],[0.899982,-7.395148],[-6.889233,-3.156716],[6.948343,-4.383236],[-8.149192,-9.027530],[-0.754320,-1.312784],[-2.732781,-8.593069],[6.911187,4.355712],[8.367777,-4.723410],[7.076509,-6.269654],[-1.898162,3.107654],[8.882355,8.307051],[3.674670,3.592994],[-9.867522,-3.929647],[4.585893,1.181938],[3.942041,-2.933998],[4.078563,4.526794],[-9.671494,-6.568911],[6.929163,-8.436798],[5.983589,-8.358278],[-4.842110,8.565459],[2.178485,4.243302],[-1.638856,9.003006],[1.040245,-2.728784],[-4.904749,2.865009],[-9.909004,-8.286086],[-0.552345,-8.756889],[-0.748516,-4.179585],[-8.410845,6.618084],[-4.166645,3.644261],[-1.503253,-2.077323],[-3.675748,-3.037865],[3.284914,8.870019],[3.731823,3.262689],[8.531058,1.186855],[-4.360694,-1.651994],[3.975909,-7.209799],[-2.879396,-7.530638],[9.524204,-1.139191],[-7.114905,-2.118560],[-3.756807,4.870741],[2.169771,4.067147],[-2.935831,-6.432667],[6.181197,-8.977469],[1.146931,-5.185645],[-2.215532,-6.699085],[4.351641,4.746635],[7.778672,2.299578],[-2.074966,6.454588],[5.343782,-8.423677],[6.372857,-0.636941],[1.231716,-9.638394],[-6.599389,-6.471861],[2.068601,-3.890651],[9.083252,-9.754233],[4.921572,-2.542945],[-6.750079,-2.209485],[3.004795,-6.555604],[2.871140,5.841287],[4.393559,3.898680],[-7.740783,-0.880098],[-7.826546,-9.847910],[-7.901140,-8.203549],[2.418545,7.545223],[-1.120596,0.956732],[-0.810640,5.602221],[2.423655,-3.584052],[-4.785854,-7.987194],[0.720494,-5.019950],[5.886758,8.689211],[-0.363001,4.551752],[3.656114,5.223393],[-2.928240,3.290608],[-7.469121,7.063417],[7.990981,-7.025088],[0.877880,-6.515914],[5.624461,5.571410],[3.298264,2.103867],[-7.747480,8.017663],[6.859048,-3.077537],[-1.551238,3.865245],[-0.971725,-0.235920],[-3.581320,2.048645],[7.039723,9.862765],[-2.374037,3.418591],[3.052785,0.761544],[0.528242,5.491018],[-6.575806,9.317978],[6.195140,7.135279],[1.919444,8.488344],[4.489666,2.781508],[-0.550775,5.298184],[9.884407,1.881957],[4.929301,6.103133],[0.949316,-8.835474],[-9.218745,-7.311287],[-7.178037,9.662049],[1.644165,0.123392],[0.693150,7.982466],[8.482395,-5.901064],[9.672520,-9.316567],[2.628856,-6.829836],[-3.116938,-7.233518],[-7.695930,7.141010],[-0.246635,-1.934976],[6.302726,-2.237408],[-4.338817,2.223448],[6.480059,8.770599],[1.691941,7.923772],[0.844581,3.469783],[-7.304988,-6.471294],[4.284717,5.565717],[-4.733172,6.869048],[-3.824052,-4.230424],[-4.278332,-0.368390],[8.149406,-9.181472],[3.883828,8.674432],[5.692710,8.665168],[-6.208161,-1.129652],[9.084667,-6.828512],[5.105742,3.769397],[0.460672,8.285204],[0.437562,3.408171],[6.007810,4.206561],[-1.143271,7.734053],[-9.264174,5.832265],[-3.199150,-0.140648],[-9.433991,3.497530],[-7.731807,7.659606],[-2.983601,2.614850],[-6.119507,-1.243171],[6.550551,3.988867],[0.066589,2.310700],[4.755993,-5.233441],[8.482827,2.032561],[0.860922,7.705920],[9.723955,-3.039593],[8.384556,-2.861374],[-8.347852,6.727680],[-3.501959,7.473684],[4.627308,9.218148],[-0.456511,-1.841696],[-8.976860,8.531308],[-8.020326,-7.474397],[8.356976,1.038194],[-0.049668,-8.088269],[3.580062,-3.406192],[-7.799910,9.445988],[4.318944,-8.995600],[-9.569847,1.259377],[-1.000210,4.192974],[3.311842,7.899309],[-6.417995,-7.844018],[-4.005636,5.288498],[-5.332993,2.515243],[-7.114037,2.923624],[-3.545829,3.427649],[-4.409843,8.832748],[8.542937,-2.971619],[-3.539356,9.123406],[-6.209304,-5.691059],[-7.726203,-3.859451],[2.247758,-3.487691],[-4.030217,3.718002],[3.257827,-7.395378],[1.140469,3.086613],[-0.271558,-7.016918],[2.281233,5.613864],[2.603258,-9.754950],[9.515804,-2.656964],[-2.277440,-5.127843],[-6.970950,6.399690],[-0.726297,-3.720458],[-8.974962,-5.597280],[8.932374,0.419765],[-7.799402,-7.518144],[-7.043367,-9.858089],[-5.856104,3.781389],[5.807931,7.012075],[9.246418,4.715749],[-8.560101,-8.267000],[8.652668,1.981921],[4.700662,2.568952],[4.706331,8.521940],[-6.363559,-6.765120],[-4.980209,-8.993390],[6.999257,-3.107031],[-8.592063,8.697061],[4.810490,8.134903],[-7.490561,1.087330],[-6.142204,-0.220476],[-4.470176,1.564314],[4.715057,3.239414],[5.587739,5.522652],[-7.478871,-7.888740],[2.713858,8.475871],[0.409131,-9.895087],[-2.220053,5.288468],[-3.825541,-6.421226],[2.299539,-7.420822],[7.601967,-7.082588],[0.641859,-3.871257],[9.434006,-9.717135],[-8.379274,4.919261],[7.053180,7.947947],[5.474752,-7.473494],[-4.568106,2.829861],[-3.188256,-0.672582],[0.961912,0.580425],[-7.721637,-7.902422],[-7.536105,1.231193],[7.498482,-3.261096],[-0.390388,-4.719810],[-3.453383,9.015114],[4.463616,-5.440745],[-7.929242,-4.674265],[2.898632,-4.255851],[6.122842,-6.342424],[-6.914715,-1.815843],[-7.872369,-6.271885],[-2.593320,9.814685],[4.970042,-9.590125],[2.411405,-7.892535],[7.526519,8.832968],[-9.916351,4.077312],[0.383849,4.037035],[2.239704,6.685107],[-1.558374,-9.002156],[-7.625013,7.678186],[-5.044154,-2.038887],[-9.116761,-8.973325],[4.536147,7.157864],[3.995874,1.487971],[-5.761112,-7.474421],[-7.807054,1.538503],[4.361644,-8.305528],[6.858880,8.441329],[7.546868,7.036843],[1.672788,9.388390],[-2.298615,-8.876588],[2.097979,-3.291499],[2.983216,0.806150],[-9.335717,-7.805332],[-1.913164,1.216520],[3.697650,-5.125101],[-8.005409,-5.551023],[9.974023,3.364252],[-5.652214,2.432364],[3.305673,9.841953],[0.077122,1.836166],[-2.444687,2.176988],[-2.274927,-3.108994],[-3.885533,-9.508100],[3.229260,-5.846613],[-6.766457,-6.598610],[0.782365,7.644900],[8.946492,3.234128],[4.905285,-3.459687],[7.075190,7.992396],[-8.012097,7.251240],[-2.340254,4.263409],[-6.087531,-9.578993],[7.698565,-9.923509],[-8.216921,-0.919262],[-9.324174,-4.266103],[-7.229467,5.478741],[9.354473,9.603609],[6.493703,-5.792353],[-9.722984,8.987454],[7.096321,4.911135],[-6.295185,7.723767],[8.639190,-7.017919],[-1.974285,-7.465309],[1.587763,-4.834579],[-4.094186,-2.944502],[-6.017118,7.643528],[-3.811151,2.206424],[-8.540212,6.146146],[-8.002553,3.600838],[-1.069749,-7.474775],[8.231814,8.278434],[-9.258867,2.435990],[8.298834,-1.500271],[-5.399507,-8.183034],[-9.126493,-6.239461],[-9.315193,4.848462],[-5.599556,8.207506],[-4.471492,3.822090],[-5.914478,-0.564319],[-8.390261,8.644010],[8.241640,6.749177],[0.919069,5.219310],[-3.561936,-7.779302],[4.544264,5.682951],[-2.431164,-4.901029],[-3.126741,-2.656841],[-7.356907,-8.339711],[-9.255914,-2.367489],[7.567660,1.265408],[4.975101,0.072717],[-5.103912,-5.895625],[2.036173,-5.826413],[-7.051340,2.688513],[-1.602503,7.551088],[-6.330683,-8.300050],[2.808863,0.216822],[-0.084079,1.953576],[6.820470,9.362219],[-1.627928,9.560822],[-4.875331,-4.549426],[-4.822472,0.812552],[6.055285,4.691398],[-4.688351,1.306973],[-7.600677,6.626060],[5.589876,-5.246803],[1.315197,5.018856],[4.181838,7.535904],[-9.487221,8.009897],[3.611489,1.000702],[4.544239,0.623998],[-7.794041,-9.665161],[7.609244,-3.274603],[-7.777915,4.705102],[-5.394449,-7.611732],[6.129171,1.761971],[8.826011,-6.476341],[-3.592163,5.443205],[-3.838491,8.845235],[7.036469,9.816415],[2.073547,-2.874514],[-1.594369,3.704587],[-5.490055,-6.830371],[-1.610070,7.393474],[-4.712510,-1.892573],[3.821616,8.700420],[-2.137976,7.758756],[-2.491022,-4.413306],[-7.760736,7.385268],[-0.989164,5.223010],[-2.003085,-1.999519],[-1.128378,-2.089864],[0.421003,8.019820],[2.002951,-2.472439],[1.258995,1.189675],[-4.276057,-1.238135],[-7.306812,8.047036],[-5.627367,5.072566],[0.890651,3.198569],[8.400989,-3.279551],[0.354397,-2.587904],[-5.792758,-4.919230],[-0.904405,9.321029],[-4.804786,9.647433],[-8.274898,8.937284],[3.950602,0.127558],[8.445462,-6.784959],[6.189511,1.488568],[-8.246528,7.062614],[9.884783,5.545910],[7.604181,-3.863715],[-0.293777,4.941416],[7.946492,3.975950],[4.982226,6.379806],[-3.807888,-1.360017],[-4.588331,-4.480143],[9.585424,-1.351104],[6.889517,-2.801874],[-1.688173,-8.485914],[-4.391494,5.374049],[8.287158,-9.173633],[-7.456658,7.402708],[-5.612975,-8.784430],[3.505798,2.575583],[-5.629408,0.068033],[1.091324,-4.050715],[1.884368,-6.114424],[-2.023761,1.735325],[4.603350,6.611737],[3.861221,-6.424021],[-0.984340,-6.042120],[3.232326,-0.459202],[8.307979,1.213304],[8.487074,7.624074],[6.689414,-7.333936],[7.190038,0.619686],[5.520265,-9.979848],[6.183776,-9.111382],[7.110323,5.853865],[2.019591,-8.889295],[-0.153516,3.660536],[-0.087034,-0.056710],[9.987223,9.408686],[-7.130771,2.139491],[2.348643,-8.918667],[-5.197110,-2.899972],[4.352402,-1.144092],[9.063021,-0.532840],[-0.577993,0.267231],[-2.118003,-1.232944],[-2.263635,-1.511713],[-9.590161,9.440957],[-3.543656,-3.422818],[-3.871516,-1.686307],[2.152441,-5.908675],[-2.787311,-9.052789],[6.645303,0.633371],[3.965687,3.117518],[4.039391,-4.150842],[5.204385,-4.691362],[3.872662,-5.589732],[1.134928,9.156784],[7.555072,-2.088681],[-9.740481,-1.748551],[-8.569398,4.522661],[-2.248009,-7.601261],[1.286998,0.880101],[-3.104380,-5.900329],[9.980425,3.842047],[3.207734,2.719254],[1.269722,-1.905723],[-6.253813,7.615959],[-6.206287,-9.474921],[7.206486,5.832290],[0.419154,2.657609],[-1.641232,5.950377],[-0.743729,-6.201332],[0.381503,-8.241295],[3.677313,1.354210],[8.285335,0.673535],[0.852921,-9.747253],[-1.391510,0.511282],[4.062579,3.723723],[-9.520598,1.183801],[6.483309,8.186122],[8.751745,6.545496],[-9.836317,-5.223594],[5.757994,-3.522816],[4.155167,6.484606],[-1.606356,3.672681],[0.040902,9.026293],[5.868782,-1.547974],[-4.824400,3.465442],[9.191744,3.295114],[6.854765,-8.505447],[4.145010,-0.592875],[7.596003,-0.407356],[-8.031822,0.286261],[-6.900275,-2.645896],[6.786172,-4.502794],[-0.945455,6.808539],[3.747260,0.080179],[-8.284356,4.971189],[-9.042296,-2.122217],[-2.822489,1.366732],[-8.190590,-4.914727],[2.567627,-6.938533],[-2.893423,8.400611],[8.564568,-0.372171],[0.447236,3.545261],[2.815399,1.894576],[-5.750285,-7.160905],[-6.334237,-0.330037],[-6.814915,3.343006],[0.036568,8.175832],[-3.251296,-8.691061],[5.044067,-0.409643],[-1.775747,3.547563],[9.051478,-3.692376],[-7.960997,-9.203641],[-1.230638,-3.239640],[5.795096,9.566579],[3.852266,-6.424947],[0.185355,4.183290],[-3.124446,6.433810],[-7.469168,-4.269278],[4.838407,2.470958],[1.435716,-5.062013],[-7.736586,5.370375],[-0.648747,-3.354673],[9.274897,0.671423],[6.679726,6.065136],[2.658307,8.297330],[8.589656,6.454745],[-4.171487,0.454630],[-8.671082,0.887295],[-6.204262,-3.801446],[3.118839,-4.582392],[-2.673024,9.820425],[5.711298,9.545713],[5.905521,-3.607091],[-4.859149,8.178232],[-9.219407,3.476895],[-7.414940,-6.585569],[5.798351,6.020449],[6.670876,7.350646],[-2.850292,-6.972828],[6.920376,-4.265759],[-9.481283,-5.953376],[-7.284262,9.880490],[-6.849092,6.178742],[4.902451,5.476539],[-3.370133,-5.430840],[-0.853355,6.135353],[-3.074983,-0.026907],[6.213042,9.369479],[7.403487,2.461320],[5.309454,4.844442],[0.972322,5.369661],[-8.749995,4.717519],[5.593154,-3.890989],[5.521483,-2.610948],[4.390377,0.437475],[9.801713,-8.162976],[-0.191960,-2.496071],[-2.067599,1.197167],[-9.669745,3.081158],[0.718140,-1.202060],[-8.075791,3.489293],[-2.247729,8.351898],[-4.528641,0.932188],[3.520508,4.765399],[8.298085,-9.220582],[9.624387,6.820526],[-2.646711,-0.806116],[5.284685,-2.045426],[7.470025,8.203916],[-3.265900,-0.015677],[7.334037,-1.877622],[2.133009,0.947087],[-3.334141,7.900762],[9.206892,0.835247],[1.948656,-7.327375],[-8.821741,-9.378877],[-4.553362,-1.990138],[-0.100119,9.382240],[-1.832358,5.306481],[0.640374,-2.292587],[-5.588138,7.541531],[-5.287674,8.013243],[-4.502248,-2.435652],[-1.224812,6.908653],[-6.505249,9.928601],[-5.316820,-2.118963],[0.309113,-6.473342],[-1.600473,-3.730119],[-3.157199,0.176266],[-3.727483,-0.786117],[-5.533967,-7.199166],[4.860621,9.785789],[5.192813,8.626483],[6.858917,-5.375599],[1.040460,-0.515332],[3.611637,-3.996942],[-5.838157,-3.057435],[-2.682344,-6.842092],[1.555495,2.468847],[-5.190612,-1.246382],[-3.325943,8.132779],[6.523205,-7.804617],[-6.887391,9.103211],[1.436404,-9.688847],[0.833417,-9.802421],[3.702180,-5.704275],[4.458201,-8.502059],[-7.938221,3.470533],[-4.154200,-3.832612],[-9.957092,-8.999468],[7.943847,-1.931922],[1.111949,3.195833],[2.950943,-3.117740],[-2.870808,5.512104],[-8.381434,2.832210],[-6.441263,8.856740],[4.128983,1.314861],[-9.693165,-7.166439],[0.290424,-5.382467],[4.707619,5.199201],[-2.466037,-4.916002],[-4.347149,-1.995539],[5.028122,4.298463],[9.988172,-7.072359],[-0.233551,-9.183635],[2.390880,6.468372],[-3.845526,4.661854],[8.595492,-9.729540],[-6.978658,-4.461360],[9.311845,2.169796],[-7.161856,-6.893491],[-9.471997,-1.369132],[-5.269546,0.094293],[3.271334,-1.764508],[6.132529,-4.203377],[-8.818385,-8.772125],[6.412831,2.610410],[5.010224,0.488934],[4.373224,8.931734],[-7.709623,3.523119],[1.040287,-1.638257],[5.170025,-0.826453],[-1.455868,5.116530],[6.574823,1.703005],[-9.080573,8.474797],[7.153756,0.506347],[9.377561,-6.359536],[-1.974623,-0.401950],[7.285681,-2.220720],[-4.316726,0.593593],[8.447662,4.794468],[-1.157846,0.975714],[-5.296935,-9.036985],[5.678199,-4.474230],[9.521527,-4.545968],[-3.399327,9.676476],[9.159285,-2.379484],[-5.085754,-1.432858],[-0.410483,-6.363442],[-2.788986,0.475999],[9.641353,9.715855],[2.311599,2.211918],[-5.184331,-8.211774],[-4.392597,-7.323781],[-4.771590,9.620692],[-9.035590,-4.309154],[-2.433395,9.792070],[5.269617,9.211506],[2.495918,2.856047],[-1.863614,0.759863],[9.786374,-0.281709],[5.448882,1.056023],[9.648157,-3.048960],[7.652718,6.745443],[8.746346,-8.827518],[2.454457,1.377724],[-7.383292,-3.398281],[1.589914,-7.029015],[6.246678,4.750395],[3.098070,-4.716834],[0.346697,0.144465],[-3.437783,-5.507825],[1.803044,-3.827785],[-3.512186,8.014102],[-0.443521,-3.031013],[0.301494,-4.123670],[0.602742,0.401875],[5.538462,7.405128],[-1.950702,8.478872],[4.272486,1.598260],[-2.985058,-4.457604],[7.461628,-2.181899],[7.018845,-3.260757],[7.365009,7.986819],[-1.832904,0.506328],[7.919606,-0.610766],[4.655067,-2.579189],[-8.873729,-2.019871],[9.280064,1.417574],[-8.132289,-2.317606],[-1.929381,4.093514],[-2.634292,-0.286772],[5.809914,-0.471370],[9.575521,7.902103],[-4.007826,9.287327],[2.663413,5.491448],[-7.500067,6.471423],[-4.941740,-3.495978],[-4.095042,-6.171650],[7.433902,3.589985],[8.427566,1.976721],[3.612351,5.049803],[-3.087914,-1.235449],[-3.216959,-6.565627],[-0.324619,-4.536237],[8.556117,-1.118643],[-5.432312,-2.097301],[2.087622,-3.263576],[6.993403,5.834345],[-4.442576,-1.051784],[-4.237832,-7.116373],[0.957007,7.865404],[1.241175,-4.614463],[1.245444,-6.355703],[-3.552922,3.075278],[7.440509,-9.710480],[2.084363,3.308512],[-1.112648,-0.343971],[-6.647749,-5.476711],[3.820129,5.262969],[2.283428,0.791377],[-8.884854,-4.186022],[7.492088,1.113147],[3.059309,3.226288],[1.854656,9.631341],[3.789382,-4.839274],[-5.305276,7.273145],[2.974768,-2.829466],[-5.286965,4.845652],[-1.813163,3.792122],[2.405669,-2.930639],[-5.539264,0.177095],[-2.308505,-8.397344],[-7.794932,4.809734],[6.211676,-1.741692],[8.743072,4.588428],[-0.294546,2.691433],[-4.244105,-4.137894],[2.801519,-5.117847],[0.099506,3.467385],[-5.512965,2.277270],[2.966015,-3.679298],[8.894606,3.817515],[2.587530,-5.516760],[2.365298,-0.049011],[7.620231,9.599092],[4.383236,-5.598594],[7.682885,-1.270353],[5.737023,-1.941656],[-1.410396,6.308396],[1.458628,8.116000],[2.103067,-0.012056],[0.827664,-0.270434],[-5.496046,5.575740],[-7.405796,-7.961294],[7.007409,9.493031],[-3.512247,5.519930],[-5.697640,-8.444573],[9.043343,5.095227],[2.273291,9.204999],[-3.970758,4.662868],[7.586896,0.098300],[8.430294,0.200963],[-5.293802,8.394874],[-2.103989,-8.163795],[-6.889182,-4.554872],[-7.611503,-5.644018],[-8.829968,-2.964773],[-4.487986,6.031300],[-6.495309,6.574669],[-0.841612,-0.347425],[1.599646,1.455587],[2.493124,5.781399],[-8.338640,0.089958],[0.783401,-6.553046],[-8.439080,-1.599156],[6.859102,-9.419893],[-9.067267,7.779239],[0.921250,-3.369815],[8.998317,-1.382725],[4.289142,-5.726157],[-1.990078,-3.961282],[-5.127008,8.909745],[0.652482,9.169293],[6.164957,-8.211318],[1.339041,-1.304263],[7.488190,3.830821],[-9.014000,6.115338],[7.381696,3.991945],[-1.483782,1.335418],[-6.876891,5.714780],[7.203465,-8.226729],[-4.270322,-2.438438],[-6.588557,-5.947152],[3.797755,7.008557],[-3.105428,5.215042],[-3.007410,4.413788],[-1.644951,0.597878],[6.964090,-6.393806],[3.385863,6.916009],[9.623166,7.707583],[-7.481669,-6.482845],[-9.771958,9.741036],[-6.980796,-7.351343],[3.748537,6.127058],[1.076080,-9.013090],[1.497152,7.559147],[-2.755259,1.555175],[-4.530870,4.840597],[-0.202193,1.659434],[6.965676,1.349113],[1.314632,1.293964],[7.883156,1.136155],[7.111438,1.975378],[-3.979193,-0.361800],[2.613374,6.964140],[-1.736587,-0.305226],[-9.049569,7.198378],[-9.340936,6.085977],[7.339700,-5.816562],[-6.581350,0.353435],[-6.233963,-1.354654],[2.390944,1.867421],[-3.812188,-3.582870],[2.703061,-1.565217],[-0.059620,-0.684893],[-7.608643,7.929163],[-7.239787,3.302852],[3.355559,-6.075395],[9.944644,-2.419068],[1.885945,-6.617446],[-0.809243,2.241429],[2.155769,8.149410],[5.715484,5.622964],[-9.327985,7.781772],[-6.452973,1.337822],[3.824985,4.733100],[-1.963947,0.975875],[8.781921,-6.257304],[9.425185,-3.105084],[2.110736,-7.345950],[5.263045,-5.297705],[-8.511589,-5.398337],[-4.799881,-3.280900],[1.989822,8.452775],[-4.304617,-0.564002],[-9.043986,0.613688],[-2.123084,-6.901549],[-9.483038,-8.348411],[-0.959097,7.982153],[6.842858,-1.607641],[2.979367,8.730133],[-1.705770,-1.744782],[-5.218456,0.586127],[2.590862,-4.680551],[-4.785361,8.229254],[6.058346,-1.254111],[4.535646,9.573416],[5.135288,-9.949949],[-9.250605,9.036868],[-2.400575,4.114257],[-9.205199,0.218001]], dtype = "float32")#candidate|8907|(900, 2)|const|float32
call_8906 = relay.TupleGetItem(func_7890_call(relay.reshape(const_8907.astype('float32'), [1800,])), 1)
call_8908 = relay.TupleGetItem(func_7893_call(relay.reshape(const_8907.astype('float32'), [1800,])), 1)
const_8930 = relay.const([[5.339823,9.339648],[-4.728178,-8.728336],[-6.175297,5.725375],[-1.221159,0.440472],[8.476428,9.142818],[-7.015901,-1.524379],[-1.888136,5.943229],[-1.573166,8.180875],[-1.324301,-4.033050],[-2.758218,-3.855520],[2.680676,-3.137851],[5.078651,-8.703942],[2.092555,-4.142098],[7.422206,-7.857130],[-5.137091,3.396546],[-1.158984,-6.289944],[3.049425,2.105148],[7.198318,-0.190114],[-3.769563,-5.291360],[7.379255,-6.957622],[-6.137809,-6.431186],[0.574430,8.690259],[9.903144,-4.495531],[-9.714981,-5.755204],[6.505459,6.528729],[7.655371,-2.878464],[5.886899,5.764148],[9.629060,6.765410],[-7.576865,7.143789],[9.328221,5.330642],[0.247046,-5.253804],[-3.178034,0.328658],[9.358961,-0.768345],[5.347586,-8.192405],[9.263717,4.353437],[6.779309,-8.075840],[-5.643422,0.895626],[6.272463,-0.541872],[-9.199314,-0.551210],[8.348794,-7.329192],[-4.214100,6.974753],[7.889058,-0.733711],[4.132844,-9.292567],[0.770662,7.755616],[-9.112106,1.901073],[1.298622,4.760615],[-3.676456,8.845158],[4.636843,-8.591172],[-4.553778,9.319073],[7.591066,4.315577],[0.093689,2.984162],[-4.713099,0.224777],[2.542770,-2.137104],[-8.452294,-4.882955],[4.307224,2.028741],[-8.014273,1.243937],[9.437571,-5.269890],[-4.911010,-3.483667],[0.663801,-2.159701],[-3.051881,2.934005],[-8.277699,-0.087183],[4.491116,-0.508227],[-3.877509,3.007663],[4.933778,-5.352316],[-3.700639,-9.391901],[-8.564463,-2.409700],[-3.891682,3.281606],[-8.045809,6.000946],[6.345639,-0.584365],[-5.398499,4.134040],[-9.668852,4.389381],[5.072054,-5.541159],[2.119212,6.804568],[1.061450,9.101115],[-8.137488,-6.053419],[1.146574,-6.013891],[-6.676439,2.604866],[0.368829,1.092849],[-5.568589,4.582404],[-7.233027,7.577986],[-7.228879,2.038991],[-6.410149,-5.191176],[-5.790344,-0.654619],[-7.588586,-3.621099],[5.586927,7.229857],[-3.047462,-5.781018],[-0.471343,3.715160],[1.553454,-1.536022],[4.866539,-6.161339],[-3.479222,-8.421370],[8.868417,0.707316],[2.396013,-5.048199],[8.988196,6.770248],[8.234273,-6.105580],[-2.109446,-2.579908],[-0.032206,5.621351],[1.722779,-2.054479],[-2.109578,-9.792447],[4.099933,9.085411],[2.062469,8.744712],[-2.650694,-3.027157],[-9.991709,0.051732],[-8.521100,-0.389908],[-7.468452,-0.085685],[0.828731,6.885137],[-0.120026,-2.519275],[3.537055,-5.109329],[7.346815,-6.521630],[0.300426,1.197439],[3.486448,-2.629136],[4.273106,6.723188],[-1.495655,6.131151],[-6.208842,-3.451365],[-6.942873,-7.873474],[-8.536005,-0.358458],[-1.037034,6.799289],[0.169806,8.906034],[9.204775,5.816555],[-9.490484,-0.124763],[-4.179128,8.614889],[4.727948,9.286442],[-3.563663,8.215444],[0.320877,-5.275282],[-2.780324,7.121892],[6.249200,0.686281],[-2.289653,8.312450],[2.444943,6.467904],[6.774570,-0.066195],[-8.633706,-6.429465],[5.885840,-1.802004],[4.141216,-2.064730],[-7.813235,9.569244],[-7.531642,2.464753],[4.974832,1.637078],[-9.069700,8.939568],[7.483168,-0.611647],[1.346608,-5.487508],[2.737699,0.123631],[-1.126665,-7.514510],[3.033316,-6.337788],[-0.400492,-8.239899],[-4.341161,-1.661068],[5.693246,-7.730625],[6.129989,-0.586079],[9.332023,4.048807],[5.185552,0.829303],[-1.622590,8.091194],[2.171768,9.354177],[4.895219,-4.864672],[-2.378104,-6.741641],[-8.857940,-0.732966],[-0.254778,-8.583662],[-8.144672,-3.647217],[0.919352,2.510200],[0.318095,0.266109],[-8.740648,4.158052],[0.845814,1.145881],[-1.182506,7.397411],[-3.903859,1.816147],[-5.303407,-2.313991],[1.565980,4.422122],[-8.530048,6.201144],[6.838740,-5.917415],[6.179196,2.906417],[6.669913,-6.706670],[-3.219477,-5.917485],[-5.866590,7.256781],[-0.895658,7.241077],[-9.621406,-9.412682],[5.019957,6.301288],[-9.692322,-2.197544],[7.328077,-8.683880],[-6.830662,-6.966247],[-8.650583,5.266321],[-2.278568,-7.771556],[-8.140734,1.831705],[-2.652693,0.140819],[5.437871,-1.642455],[-3.119928,1.714024],[-4.399234,0.456395],[5.339528,8.925324],[-3.830732,-0.458663],[-3.322685,8.460235],[-6.344589,3.879542],[-7.402907,-1.081507],[6.611806,-8.740763],[9.020157,9.376082],[7.573314,-2.130575],[0.766129,6.417704],[-3.797008,-2.711791],[-9.973203,7.678915],[-5.961827,4.720956],[5.914550,-2.746284],[-2.981171,-4.002254],[6.159970,5.250801],[-2.195663,6.590659],[3.836075,-6.920484],[-5.247496,-0.224782],[-8.957423,6.628381],[1.733057,-2.704630],[-1.096954,9.704152],[2.960046,-4.474611],[-5.165657,0.959833],[4.603354,-4.120879],[1.382359,-8.078122],[1.801066,-6.489302],[-4.066702,5.336562],[-3.069317,-3.211622],[-3.115732,3.096286],[7.703021,-3.480171],[9.746124,5.603442],[-8.048446,-7.421118],[-6.352776,7.280495],[3.703496,9.837557],[8.683500,8.077556],[-8.947451,-9.689529],[-0.811537,-5.952709],[5.469100,8.362149],[9.432782,1.964381],[-9.045712,3.995438],[-8.444101,-0.619530],[3.533445,9.170521],[-1.504749,-9.565502],[-9.833205,-0.382683],[6.366781,1.762209],[2.995214,8.391222],[0.350514,5.377399],[-1.207217,-4.321047],[6.305296,1.199477],[-3.641475,-1.409836],[5.504137,-8.695975],[5.399119,-0.970712],[2.397182,-9.583217],[-1.704381,9.963103],[-1.159140,3.496613],[-6.726470,-0.047072],[9.469080,-4.440567],[-1.872095,-4.945832],[3.622591,-1.682923],[2.495381,6.531311],[-8.162198,-1.317820],[-6.356336,-7.758155],[-9.454011,3.495698],[6.275290,-6.502961],[7.394267,-5.208756],[0.177292,-6.898942],[1.237591,-9.940035],[3.720878,-0.952967],[3.201948,9.472151],[-3.238048,-3.336847],[3.606460,3.227180],[8.607840,0.471038],[-1.347124,4.147885],[5.124543,6.226260],[-8.892512,8.757411],[4.263364,7.359680],[-8.879531,-1.573877],[-0.491901,7.162630],[1.302561,-7.860329],[4.137900,6.427408],[5.418908,1.010338],[-6.838430,-1.856117],[-2.070601,7.831642],[4.384990,-0.136092],[4.285462,-3.366128],[-1.503514,4.405423],[9.512716,-8.512731],[-2.938853,-0.694831],[-7.278094,-9.566408],[-4.399601,0.515562],[-2.963806,4.288707],[0.560003,-1.568651],[-9.175884,-1.382665],[-1.004033,-0.309631],[9.002415,-3.464510],[5.553872,-1.942036],[1.276397,-6.234285],[8.023787,-6.881979],[-0.711578,0.918430],[-9.902366,-9.896281],[-6.576434,6.511401],[1.676723,-0.718207],[-7.798894,-0.820999],[-3.406761,-2.392292],[6.767595,0.946165],[-6.588715,-7.629005],[1.360827,2.744923],[1.829303,8.990754],[-2.226189,9.988063],[-0.795061,9.761044],[-7.522684,-8.303357],[-3.538726,-6.031272],[-7.556726,-0.698313],[-1.374117,2.190949],[-9.034789,0.888538],[2.635188,1.465633],[8.241034,6.285857],[3.721039,-1.060267],[-1.058682,-6.282389],[0.673886,-1.643906],[-0.985923,8.498768],[7.158017,8.999703],[5.244117,-8.686418],[8.377170,-6.412117],[-1.060341,-7.434032],[-4.373499,7.177197],[-2.683067,8.585243],[0.326913,8.005803],[-6.686322,-7.316215],[9.713050,2.052221],[-3.074667,6.133593],[-3.739214,-7.765429],[7.898133,-7.447015],[5.815762,-0.603534],[0.964165,-5.601296],[2.707611,-1.702356],[-1.438766,-7.848648],[-5.156236,-4.658947],[2.045354,-7.203757],[7.084655,-6.625527],[-5.616453,9.015804],[-6.232339,7.261492],[5.137284,-2.169062],[7.996769,6.370805],[6.292086,6.078306],[2.742102,-9.477230],[-3.757620,-9.951036],[9.056640,-4.758001],[4.605564,-2.257316],[-7.894133,8.533933],[7.326252,-3.124162],[7.917855,-3.833276],[7.477411,-0.978522],[1.769860,6.549662],[-5.854647,0.178733],[-4.388864,1.038832],[1.621995,-5.673396],[0.079301,-8.364818],[1.806766,9.301636],[-0.034127,-6.998885],[4.119278,-7.184910],[4.733220,-5.341367],[-3.930213,-1.667401],[-3.458487,-6.277722],[8.480322,6.679008],[2.719516,2.784787],[-5.208872,5.044471],[-1.070151,3.569488],[-5.164109,-9.351726],[4.479003,7.669846],[-8.519274,5.540962],[9.492963,9.830109],[-6.667995,9.932802],[-0.592580,-8.319725],[0.439025,1.180561],[8.380228,-0.782784],[-5.003480,-7.155104],[5.943194,3.597035],[1.460848,-3.152600],[1.658754,9.118053],[-7.641430,6.566700],[0.696231,-8.010758],[8.060932,-9.229592],[-8.630923,-5.292077],[9.760737,-8.905317],[6.598247,-4.546518],[-0.293698,6.225203],[-2.720454,1.492351],[-1.805262,6.716051],[1.382069,-1.037636],[7.896453,9.869525],[2.595968,4.593907],[-2.801011,-9.844624],[2.055504,-1.993910],[3.159960,4.763250],[-3.135210,8.396649],[4.359163,-4.582939],[-0.024049,2.127703],[9.595739,1.396824],[2.633385,3.242159],[-2.409542,1.665619],[2.037229,-3.628890],[4.441402,-9.272025],[-6.514296,-1.746325],[9.438005,-3.194266],[-4.104225,1.634527],[1.491770,-6.876521],[0.756786,-0.915673],[3.533419,-2.801177],[-0.519477,-6.960517],[-6.612725,3.695869],[-2.564033,8.955528],[8.893473,9.914781],[8.899494,1.063754],[0.068548,1.062943],[-3.106849,-4.019442],[8.457880,-9.207773],[2.727200,-8.811619],[6.088589,1.024767],[9.191692,7.119677],[-3.026459,-5.293026],[-4.789545,-8.943687],[-8.309406,-1.618203],[-4.496148,-4.733632],[2.334299,2.200073],[9.573860,9.681388],[5.600311,-8.434540],[4.628526,7.677603],[-6.065568,3.238036],[-7.947424,-5.003907],[-6.478179,3.412024],[-6.011563,-9.564865],[-9.658911,-8.398465],[2.780280,-8.077012],[-7.168157,-7.430698],[8.288280,-5.347957],[5.638566,-2.740825],[3.154093,-1.603461],[8.768201,-3.689581],[-7.979630,-7.061762],[-5.222112,-3.657786],[-7.546901,1.632356],[-1.285350,-5.768715],[6.287881,1.151129],[-2.038914,-1.392990],[9.666811,2.582144],[-3.060390,-2.017083],[9.318104,2.410278],[3.054025,7.759660],[8.589755,9.561295],[-0.315864,5.188794],[-1.964629,7.890635],[-3.814825,-6.751373],[-5.220979,-3.848677],[-4.233902,7.298762],[4.036547,9.445837],[8.571574,-3.458581],[2.995074,-7.291330],[3.724645,-7.129771],[-5.928620,8.811147],[0.030382,-8.226203],[6.057315,4.461803],[7.316808,7.766947],[7.740939,-6.156266],[-1.836700,9.025066],[-7.121918,9.460917],[2.931183,0.121205],[7.958339,-8.418056],[-5.591855,3.778613],[-6.968543,4.277891],[1.869550,-6.611737],[-0.700111,3.471896],[-5.230143,-7.386514],[-3.793703,-1.071381],[4.520368,-5.828956],[-4.038934,-9.621806],[3.816379,6.914806],[-4.788696,-2.700203],[2.872038,-6.435106],[4.217608,-6.544770],[2.457702,-7.776658],[4.993679,4.846149],[-6.438662,0.726108],[7.655691,2.268309],[7.374126,-9.148267],[-1.501741,-7.931868],[8.835856,3.999743],[-2.375908,-0.146665],[-4.055077,-0.665699],[-2.196669,4.733794],[4.900838,9.244170],[-9.748551,6.662448],[6.967844,1.949802],[-8.297686,-0.936780],[-4.705870,-5.222690],[8.494296,-4.561929],[9.317573,7.968831],[1.843295,-5.376865],[-6.981765,4.285865],[1.569766,-9.728163],[-4.684865,-0.526619],[3.806246,-5.362542],[-2.086967,2.263208],[-4.534074,0.077305],[-7.339195,8.779906],[3.754527,-4.658398],[9.965688,-8.355953],[-2.690130,-4.760490],[-7.856821,-0.789718],[9.750803,-4.397257],[7.331792,9.326363],[6.513831,-0.321198],[-5.989575,5.111244],[1.377385,2.070928],[7.681037,9.376723],[-8.422972,-4.882298],[-0.446485,5.378209],[-8.531952,2.205388],[0.546931,3.172766],[-8.577520,-1.971523],[2.927445,-9.034157],[1.490912,1.842412],[-0.389684,-6.640561],[-0.379947,1.648017],[2.117427,-2.155872],[-6.270624,-1.448317],[8.843895,4.282554],[1.510141,-4.601659],[5.542201,1.098791],[-8.177634,-4.661488],[-1.362720,8.221315],[6.107827,7.023165],[1.959100,-5.112299],[-7.736912,4.213344],[-1.716875,1.591126],[-8.166428,-6.916373],[-3.869440,-0.999307],[5.802768,3.260390],[-0.143910,-8.374898],[-9.390369,-2.070426],[-3.092094,4.695500],[7.475440,-2.848793],[0.899894,8.855962],[2.223849,-2.250417],[-5.683707,-1.017940],[6.825261,3.909254],[-8.058424,6.636224],[6.314132,3.850860],[3.717785,-3.275855],[8.757490,-1.991232],[-4.695342,6.773136],[-4.591407,-0.363738],[-9.450699,-3.503053],[-7.467251,9.625447],[2.444171,1.313796],[2.007749,-7.283095],[-1.022693,7.030283],[9.977592,-5.010432],[-6.942168,5.738422],[5.285357,1.336909],[-9.269114,6.131033],[1.940266,-8.624810],[-3.575310,8.464742],[-9.494169,-9.420736],[0.296144,-4.237634],[6.955375,-9.391978],[-8.987705,-6.960707],[4.052135,-6.530457],[1.484194,3.212812],[-3.702929,-5.475594],[3.245697,-1.547728],[9.967701,-6.894246],[5.360431,-9.387755],[-0.962902,-0.140705],[-0.474630,-1.819648],[-1.788923,-3.066657],[4.283559,-9.118909],[6.751016,-5.568349],[-4.059258,-5.990920],[1.925757,-3.979369],[2.625074,1.653155],[-3.409052,5.051492],[9.409743,-0.481461],[-3.634210,0.391843],[-2.660796,0.426585],[-5.337356,8.074388],[1.783918,1.722511],[-3.501069,8.618679],[-5.486674,5.487334],[-7.998498,5.525018],[8.530230,0.124207],[-2.725241,5.229442],[-4.927547,-7.485079],[-3.827071,3.365421],[6.839712,-7.258681],[2.382175,-9.862451],[-3.474118,-7.198454],[-2.972157,-7.244743],[0.691007,5.265147],[0.538924,1.516261],[6.905974,-8.892818],[1.355447,9.434429],[-2.544669,-7.327869],[9.778241,8.804685],[9.868384,-7.747271],[-5.172166,5.802663],[-8.419971,0.673432],[0.552811,4.551727],[0.436771,-2.013691],[-0.942408,6.456431],[8.458493,-0.028640],[-9.272527,-2.399668],[4.492314,6.576535],[-2.056139,4.094646],[3.040640,-6.506196],[7.926975,-9.268626],[4.220002,2.544130],[-7.069078,3.202040],[5.540170,7.688391],[9.074323,8.136151],[-1.475154,-8.013801],[6.916429,-2.929858],[0.212293,5.864206],[-4.818382,9.922198],[-7.237282,9.693555],[1.317196,-8.315870],[-8.363819,5.531147],[7.476804,-6.830429],[3.120679,-8.692195],[3.838822,-6.570988],[3.353872,0.356822],[4.702911,-6.459034],[-2.126099,-7.836367],[-8.120724,-9.499009],[-7.525890,-2.563088],[-0.043698,-0.001855],[-8.557850,-8.149572],[3.006531,-1.835718],[-9.080730,-0.872421],[-7.166556,5.164178],[2.628984,-5.691433],[-7.054588,-4.072953],[-8.308825,-0.926427],[-6.209773,8.416291],[-6.422731,-1.091415],[-8.909274,-6.340141],[-2.070429,-3.746570],[1.642095,7.282446],[7.117795,-6.399288],[-9.994690,4.451567],[-4.985622,1.499067],[-3.668058,8.896535],[-0.376385,-0.468691],[-1.279109,2.989953],[2.996735,8.093703],[5.370961,8.069474],[-4.234102,-8.930571],[1.498478,-2.526630],[-5.880039,-1.147570],[-1.455744,5.755900],[4.822511,8.796636],[-6.038720,-8.273642],[-4.290758,3.998551],[2.782494,-5.363544],[-6.576120,-5.797950],[-6.885021,6.045842],[0.557908,4.333440],[2.188496,-3.670745],[-5.804408,-6.430358],[8.522791,6.102853],[-7.105391,6.280324],[1.091870,-5.574614],[9.087064,0.439354],[5.214029,-2.212131],[-2.950279,-2.571713],[-8.499917,-5.834299],[-2.577752,8.665163],[-2.019202,3.745087],[7.707987,-8.274978],[-5.790572,5.817532],[4.797340,-5.393630],[1.001594,3.498645],[-7.760113,-8.796121],[9.629357,-1.338615],[3.930825,4.159281],[-2.496055,5.828488],[1.742522,-0.712227],[-5.141547,6.644772],[4.496283,-4.607374],[-7.997448,-4.159958],[6.348565,6.117893],[-3.182557,-2.416021],[-0.336087,2.454532],[-6.410304,-4.970836],[-4.712152,3.546464],[-5.121363,-2.843043],[-8.192504,9.194995],[1.050454,-7.909312],[-6.951862,8.663235],[2.856149,-1.317868],[8.036956,-6.087948],[-4.464512,7.128906],[0.608377,6.047089],[-8.382209,7.425844],[-0.738938,5.522334],[4.740697,-9.208480],[-5.234884,-0.213088],[7.272241,5.663420],[-5.640024,-9.817413],[-6.464136,4.487375],[9.144470,-6.643153],[-7.592714,-2.498628],[-5.574083,-2.972307],[0.972959,2.355859],[-3.155195,9.745583],[-2.456875,-8.183643],[-5.553074,-8.353351],[6.534522,5.996430],[-7.477501,-6.530751],[6.004714,-5.609449],[-7.730629,6.058839],[1.246035,2.906158],[-2.899447,-4.383619],[3.875255,8.368624],[5.776518,0.754079],[4.427495,4.044323],[-8.602957,7.956621],[9.755387,3.371922],[-7.622800,2.634820],[1.057436,-7.790175],[-9.631910,-1.506881],[0.750887,5.065224],[3.900643,9.328945],[4.480736,1.891113],[-0.023127,-2.045985],[-5.696223,-9.841111],[-0.473973,-8.534964],[-6.211008,-6.272432],[2.120852,5.499229],[-6.093172,-5.730899],[3.958248,7.208086],[-4.232081,-3.246765],[3.372193,-5.585901],[-3.655267,-9.921903],[8.887221,-8.059132],[6.144912,-3.352728],[5.349581,-5.254365],[-3.204859,-3.470305],[-8.485259,4.334319],[-7.890754,-8.307480],[-7.862910,4.449482],[6.473829,8.347785],[-8.555418,-1.705212],[-6.874824,2.809468],[-5.621052,-6.558256],[-2.547412,-2.769062],[-0.863022,4.662071],[2.969255,-5.796488],[6.129665,-9.827384],[6.071027,7.314601],[4.759139,-9.529486],[-6.286649,-7.340955],[0.617809,1.523122],[0.348121,-5.507145],[0.620372,-2.785888],[8.478425,-7.669510],[-8.236284,2.416441],[6.897570,1.682728],[1.182914,-8.488562],[2.594813,-2.842480],[6.390801,-7.872924],[-5.367306,-6.924103],[0.756367,-1.183086],[8.472498,7.266052],[-6.628741,-4.899250],[6.193321,-5.196607],[0.438738,-8.377791],[4.335464,6.201566],[-2.014203,5.222155],[-6.695904,9.294120],[-9.283177,9.685863],[-6.863033,6.130302],[9.748998,-3.440428],[-4.702377,1.908245],[-8.969006,-6.938236],[0.513157,-6.297241],[-2.451342,-4.838347],[-8.055202,-8.736963],[8.521011,-7.445053],[-3.569252,-8.637243],[3.588569,-0.786863],[-4.233113,6.483403],[3.333070,-6.622430],[6.955495,-7.443433],[3.434660,3.491084],[-3.619054,-1.286278],[3.397401,-1.712879],[6.974606,3.594028],[1.608377,-0.714219],[-1.657932,-7.833011],[6.091358,-1.098832],[-2.875781,-8.553029],[3.442880,6.822212],[5.849041,6.508217],[-5.169248,-4.082577],[3.614914,4.744836],[9.568949,-8.252589],[6.325870,2.456338],[3.300625,-8.996936],[4.897112,4.984974],[-8.857449,-6.701264],[2.005267,-8.018878],[9.703003,3.023043],[-3.043954,-9.073275],[-7.339109,9.386486],[5.930646,-6.110309],[-1.287576,-5.048944],[-7.647907,-6.874348],[-8.069209,-1.529175],[7.488304,-0.166141],[-1.242756,1.299645],[-5.771156,-3.653559],[-8.466913,-4.342363],[5.662121,-9.741523],[3.573511,2.363515],[5.513387,-4.074471],[-9.326908,5.042484],[6.737302,0.578362],[2.001479,6.340421],[-0.813682,-4.125974],[2.505654,-7.118652],[8.039348,5.138540],[-9.503676,-1.731103],[-1.728708,9.673886],[-0.016162,-3.273178],[-5.233485,2.548335],[-6.986413,3.569678],[-0.976131,6.692884],[3.237430,-6.242612],[1.772036,8.491194],[-8.393314,3.830131],[9.655431,-9.381775],[9.197962,5.581917],[-8.976809,4.091507],[4.143852,5.749370],[-6.203965,-2.182840],[-0.822485,-1.470842],[-4.619193,8.125936],[-0.128319,3.987239],[-9.160652,9.279302],[1.878564,8.177701],[0.984888,-2.877222],[-3.863913,-2.933040],[6.224235,-7.097360],[-9.833189,3.406137],[-1.145529,2.498431],[3.885116,-1.470026],[-1.103535,9.670165],[6.156915,6.242903],[2.214138,5.089452],[6.402877,-6.438647],[-3.252801,8.944142],[2.540115,6.952407],[4.038412,-6.246612],[-6.530901,-2.352018],[-8.283768,-6.441830],[6.321831,-8.719267],[8.382624,-7.824626],[-0.702925,4.883072],[4.393401,8.484593],[0.753615,-5.896070],[2.113447,4.403267],[-9.840502,2.059126],[9.203877,-8.603467],[7.678817,1.270111],[-8.466339,-4.162012],[-2.507690,-0.886879],[-5.840919,7.727611],[-7.021133,-5.390137],[-0.431400,9.549860],[-0.648307,-4.216243],[-4.903817,-6.377449],[0.335307,0.827941],[7.041990,-7.521551],[3.129100,0.414045],[-2.352198,-1.174233],[-6.646260,4.607036],[-2.813087,5.214374],[7.107074,0.086789],[-1.727345,4.695740],[4.398504,-9.278747],[-1.533753,2.216660],[8.897355,8.546511],[9.558166,-1.025144],[1.468404,-1.801295],[3.664302,-4.086909],[2.894468,-0.992917],[6.590070,-1.728309],[-0.704963,6.638035],[4.796448,7.414096],[5.881671,5.873329],[-6.609692,-5.389592],[9.088942,3.318643],[1.328963,8.214960],[8.066249,-0.590984],[3.541221,-7.497728],[2.595979,6.261930],[-4.250652,9.299349],[6.308243,-6.146858],[6.569116,4.005455],[3.677819,1.653546],[-7.371927,-3.673412],[-9.366303,-0.221199],[9.318031,-0.921658],[-7.941223,8.507451],[-6.698377,-9.957064],[4.318748,4.019119],[-6.302617,7.588024],[6.662404,-1.641339],[3.836413,-0.024268]], dtype = "float32")#candidate|8930|(900, 2)|const|float32
bop_8931 = relay.logical_and(const_8907.astype('bool'), relay.reshape(const_8930.astype('bool'), relay.shape_of(const_8907))) # shape=(900, 2)
bop_8938 = relay.left_shift(bop_8931.astype('int32'), relay.reshape(const_8907.astype('int32'), relay.shape_of(bop_8931))) # shape=(900, 2)
uop_8953 = relay.cos(call_8906.astype('float64')) # shape=(3360,)
uop_8955 = relay.cos(call_8908.astype('float64')) # shape=(3360,)
output = relay.Tuple([call_8899,bop_8938,uop_8953,])
output2 = relay.Tuple([call_8900,bop_8938,uop_8955,])
func_8956 = relay.Function([], output)
mod['func_8956'] = func_8956
mod = relay.transform.InferType()(mod)
mutated_mod['func_8956'] = func_8956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8956_call = mutated_mod.get_global_var('func_8956')
call_8957 = func_8956_call()
output = call_8957
func_8958 = relay.Function([], output)
mutated_mod['func_8958'] = func_8958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4673_call = mod.get_global_var('func_4673')
func_4675_call = mutated_mod.get_global_var('func_4675')
call_8975 = relay.TupleGetItem(func_4673_call(), 0)
call_8976 = relay.TupleGetItem(func_4675_call(), 0)
func_8133_call = mod.get_global_var('func_8133')
func_8134_call = mutated_mod.get_global_var('func_8134')
call_8981 = relay.TupleGetItem(func_8133_call(), 0)
call_8982 = relay.TupleGetItem(func_8134_call(), 0)
output = relay.Tuple([call_8975,call_8981,])
output2 = relay.Tuple([call_8976,call_8982,])
func_8991 = relay.Function([], output)
mod['func_8991'] = func_8991
mod = relay.transform.InferType()(mod)
output = func_8991()
func_8992 = relay.Function([], output)
mutated_mod['func_8992'] = func_8992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5407_call = mod.get_global_var('func_5407')
func_5409_call = mutated_mod.get_global_var('func_5409')
call_9003 = relay.TupleGetItem(func_5407_call(), 1)
call_9004 = relay.TupleGetItem(func_5409_call(), 1)
func_7364_call = mod.get_global_var('func_7364')
func_7365_call = mutated_mod.get_global_var('func_7365')
call_9027 = func_7364_call()
call_9028 = func_7364_call()
output = relay.Tuple([call_9003,call_9027,])
output2 = relay.Tuple([call_9004,call_9028,])
func_9035 = relay.Function([], output)
mod['func_9035'] = func_9035
mod = relay.transform.InferType()(mod)
output = func_9035()
func_9036 = relay.Function([], output)
mutated_mod['func_9036'] = func_9036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4527_call = mod.get_global_var('func_4527')
func_4528_call = mutated_mod.get_global_var('func_4528')
call_9040 = relay.TupleGetItem(func_4527_call(), 0)
call_9041 = relay.TupleGetItem(func_4528_call(), 0)
func_3027_call = mod.get_global_var('func_3027')
func_3030_call = mutated_mod.get_global_var('func_3030')
const_9058 = relay.const([1.051255,-6.111910,9.679003,-3.465207,0.382783,2.045170,1.914077,-3.719304,-8.747825,7.256893,-8.596655,-9.554603,2.066041,1.627770,0.101185,-9.046686,7.210484,-3.937029,3.017370,5.950369,0.695158,-0.318378,2.021604,1.146955,-1.431124,0.819105,-2.429981,0.502540,4.833750,-1.878401,8.005267,9.907866,3.096231,0.686523,-2.794671,0.387682,3.861404,-2.414464,3.974801,-7.940143,-3.761010,-7.353700,9.755293,-3.154799,4.095299,8.397197,3.563129,1.152161,3.317993,-6.333265,8.253905,6.745432,4.441253,0.649251,6.526711,5.060922,7.967187,-6.984120,8.882114,6.587897,-2.209512,5.083976,7.097903,-8.662913,8.922000,5.095425,0.045560,-8.105983,-4.575081,8.872252,4.102141,-1.561155,-3.596313,-9.349261,8.870868,-3.313690,-7.646692,-6.670172,-5.216280,-2.162887,9.082445,-5.711343,-1.344228,0.559753,-8.116529,-8.685907,4.216535,-8.012891,-3.018622,1.763624,-4.287630,2.109834,4.117409,9.225613,-5.604146,-4.847827,3.587294,-3.909557,7.836274,-8.365480,-8.407437,6.882658,8.934866,-7.194418,-8.518486,-2.928431,9.387288,-3.991950,6.288409,0.821037,6.990401,4.417669,-5.299843,3.390943,0.864216,-4.165189,-3.383928,-2.776186,1.185064,2.709913,-1.090156,0.988687,2.475900,9.192295,5.670606,8.369508,-2.227230,6.532949,-7.205612,-1.403630,-2.993067,-7.450606], dtype = "float64")#candidate|9058|(132,)|const|float64
call_9057 = relay.TupleGetItem(func_3027_call(relay.reshape(const_9058.astype('float64'), [11, 3, 4])), 0)
call_9059 = relay.TupleGetItem(func_3030_call(relay.reshape(const_9058.astype('float64'), [11, 3, 4])), 0)
uop_9063 = relay.log2(call_9057.astype('float32')) # shape=(11, 3, 4)
uop_9065 = relay.log2(call_9059.astype('float32')) # shape=(11, 3, 4)
output = relay.Tuple([call_9040,const_9058,uop_9063,])
output2 = relay.Tuple([call_9041,const_9058,uop_9065,])
func_9092 = relay.Function([], output)
mod['func_9092'] = func_9092
mod = relay.transform.InferType()(mod)
output = func_9092()
func_9093 = relay.Function([], output)
mutated_mod['func_9093'] = func_9093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7266_call = mod.get_global_var('func_7266')
func_7268_call = mutated_mod.get_global_var('func_7268')
call_9126 = relay.TupleGetItem(func_7266_call(), 1)
call_9127 = relay.TupleGetItem(func_7268_call(), 1)
output = relay.Tuple([call_9126,])
output2 = relay.Tuple([call_9127,])
func_9133 = relay.Function([], output)
mod['func_9133'] = func_9133
mod = relay.transform.InferType()(mod)
mutated_mod['func_9133'] = func_9133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9133_call = mutated_mod.get_global_var('func_9133')
call_9134 = func_9133_call()
output = call_9134
func_9135 = relay.Function([], output)
mutated_mod['func_9135'] = func_9135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3605_call = mod.get_global_var('func_3605')
func_3607_call = mutated_mod.get_global_var('func_3607')
call_9179 = func_3605_call()
call_9180 = func_3605_call()
func_7540_call = mod.get_global_var('func_7540')
func_7542_call = mutated_mod.get_global_var('func_7542')
call_9187 = relay.TupleGetItem(func_7540_call(), 1)
call_9188 = relay.TupleGetItem(func_7542_call(), 1)
func_5032_call = mod.get_global_var('func_5032')
func_5034_call = mutated_mod.get_global_var('func_5034')
call_9209 = relay.TupleGetItem(func_5032_call(), 1)
call_9210 = relay.TupleGetItem(func_5034_call(), 1)
output = relay.Tuple([call_9179,call_9187,call_9209,])
output2 = relay.Tuple([call_9180,call_9188,call_9210,])
func_9220 = relay.Function([], output)
mod['func_9220'] = func_9220
mod = relay.transform.InferType()(mod)
output = func_9220()
func_9221 = relay.Function([], output)
mutated_mod['func_9221'] = func_9221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_9265 = relay.TupleGetItem(func_2645_call(), 0)
call_9266 = relay.TupleGetItem(func_2647_call(), 0)
output = relay.Tuple([call_9265,])
output2 = relay.Tuple([call_9266,])
func_9273 = relay.Function([], output)
mod['func_9273'] = func_9273
mod = relay.transform.InferType()(mod)
mutated_mod['func_9273'] = func_9273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9273_call = mutated_mod.get_global_var('func_9273')
call_9274 = func_9273_call()
output = call_9274
func_9275 = relay.Function([], output)
mutated_mod['func_9275'] = func_9275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_9294 = relay.TupleGetItem(func_2645_call(), 0)
call_9295 = relay.TupleGetItem(func_2647_call(), 0)
func_1579_call = mod.get_global_var('func_1579')
func_1580_call = mutated_mod.get_global_var('func_1580')
call_9305 = relay.TupleGetItem(func_1579_call(), 0)
call_9306 = relay.TupleGetItem(func_1580_call(), 0)
func_4315_call = mod.get_global_var('func_4315')
func_4317_call = mutated_mod.get_global_var('func_4317')
call_9323 = relay.TupleGetItem(func_4315_call(), 0)
call_9324 = relay.TupleGetItem(func_4317_call(), 0)
output = relay.Tuple([call_9294,call_9305,call_9323,])
output2 = relay.Tuple([call_9295,call_9306,call_9324,])
func_9325 = relay.Function([], output)
mod['func_9325'] = func_9325
mod = relay.transform.InferType()(mod)
mutated_mod['func_9325'] = func_9325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9325_call = mutated_mod.get_global_var('func_9325')
call_9326 = func_9325_call()
output = call_9326
func_9327 = relay.Function([], output)
mutated_mod['func_9327'] = func_9327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8463_call = mod.get_global_var('func_8463')
func_8464_call = mutated_mod.get_global_var('func_8464')
call_9365 = relay.TupleGetItem(func_8463_call(), 0)
call_9366 = relay.TupleGetItem(func_8464_call(), 0)
output = relay.Tuple([call_9365,])
output2 = relay.Tuple([call_9366,])
func_9371 = relay.Function([], output)
mod['func_9371'] = func_9371
mod = relay.transform.InferType()(mod)
output = func_9371()
func_9372 = relay.Function([], output)
mutated_mod['func_9372'] = func_9372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_9385 = relay.TupleGetItem(func_7714_call(), 0)
call_9386 = relay.TupleGetItem(func_7715_call(), 0)
output = relay.Tuple([call_9385,])
output2 = relay.Tuple([call_9386,])
func_9395 = relay.Function([], output)
mod['func_9395'] = func_9395
mod = relay.transform.InferType()(mod)
output = func_9395()
func_9396 = relay.Function([], output)
mutated_mod['func_9396'] = func_9396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4715_call = mod.get_global_var('func_4715')
func_4716_call = mutated_mod.get_global_var('func_4716')
call_9400 = relay.TupleGetItem(func_4715_call(), 0)
call_9401 = relay.TupleGetItem(func_4716_call(), 0)
func_5557_call = mod.get_global_var('func_5557')
func_5559_call = mutated_mod.get_global_var('func_5559')
call_9409 = func_5557_call()
call_9410 = func_5557_call()
output = relay.Tuple([call_9400,call_9409,])
output2 = relay.Tuple([call_9401,call_9410,])
func_9420 = relay.Function([], output)
mod['func_9420'] = func_9420
mod = relay.transform.InferType()(mod)
mutated_mod['func_9420'] = func_9420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9420_call = mutated_mod.get_global_var('func_9420')
call_9421 = func_9420_call()
output = call_9421
func_9422 = relay.Function([], output)
mutated_mod['func_9422'] = func_9422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_9455 = func_2211_call()
call_9456 = func_2211_call()
output = call_9455
output2 = call_9456
func_9470 = relay.Function([], output)
mod['func_9470'] = func_9470
mod = relay.transform.InferType()(mod)
output = func_9470()
func_9471 = relay.Function([], output)
mutated_mod['func_9471'] = func_9471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_9478 = relay.TupleGetItem(func_139_call(), 0)
call_9479 = relay.TupleGetItem(func_140_call(), 0)
output = relay.Tuple([call_9478,])
output2 = relay.Tuple([call_9479,])
func_9493 = relay.Function([], output)
mod['func_9493'] = func_9493
mod = relay.transform.InferType()(mod)
mutated_mod['func_9493'] = func_9493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9493_call = mutated_mod.get_global_var('func_9493')
call_9494 = func_9493_call()
output = call_9494
func_9495 = relay.Function([], output)
mutated_mod['func_9495'] = func_9495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8648_call = mod.get_global_var('func_8648')
func_8649_call = mutated_mod.get_global_var('func_8649')
call_9610 = relay.TupleGetItem(func_8648_call(), 0)
call_9611 = relay.TupleGetItem(func_8649_call(), 0)
func_5503_call = mod.get_global_var('func_5503')
func_5504_call = mutated_mod.get_global_var('func_5504')
call_9612 = func_5503_call()
call_9613 = func_5503_call()
output = relay.Tuple([call_9610,call_9612,])
output2 = relay.Tuple([call_9611,call_9613,])
func_9617 = relay.Function([], output)
mod['func_9617'] = func_9617
mod = relay.transform.InferType()(mod)
output = func_9617()
func_9618 = relay.Function([], output)
mutated_mod['func_9618'] = func_9618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1264_call = mod.get_global_var('func_1264')
func_1265_call = mutated_mod.get_global_var('func_1265')
call_9634 = relay.TupleGetItem(func_1264_call(), 1)
call_9635 = relay.TupleGetItem(func_1265_call(), 1)
func_787_call = mod.get_global_var('func_787')
func_789_call = mutated_mod.get_global_var('func_789')
call_9665 = relay.TupleGetItem(func_787_call(), 1)
call_9666 = relay.TupleGetItem(func_789_call(), 1)
output = relay.Tuple([call_9634,call_9665,])
output2 = relay.Tuple([call_9635,call_9666,])
func_9682 = relay.Function([], output)
mod['func_9682'] = func_9682
mod = relay.transform.InferType()(mod)
mutated_mod['func_9682'] = func_9682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9682_call = mutated_mod.get_global_var('func_9682')
call_9683 = func_9682_call()
output = call_9683
func_9684 = relay.Function([], output)
mutated_mod['func_9684'] = func_9684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9220_call = mod.get_global_var('func_9220')
func_9221_call = mutated_mod.get_global_var('func_9221')
call_9715 = relay.TupleGetItem(func_9220_call(), 1)
call_9716 = relay.TupleGetItem(func_9221_call(), 1)
func_8764_call = mod.get_global_var('func_8764')
func_8767_call = mutated_mod.get_global_var('func_8767')
const_9725 = relay.const([False,True,True,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,True,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,False], dtype = "bool")#candidate|9725|(3360,)|const|bool
call_9724 = relay.TupleGetItem(func_8764_call(relay.reshape(const_9725.astype('bool'), [840, 4])), 0)
call_9726 = relay.TupleGetItem(func_8767_call(relay.reshape(const_9725.astype('bool'), [840, 4])), 0)
output = relay.Tuple([call_9715,call_9724,const_9725,])
output2 = relay.Tuple([call_9716,call_9726,const_9725,])
func_9750 = relay.Function([], output)
mod['func_9750'] = func_9750
mod = relay.transform.InferType()(mod)
mutated_mod['func_9750'] = func_9750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9750_call = mutated_mod.get_global_var('func_9750')
call_9751 = func_9750_call()
output = call_9751
func_9752 = relay.Function([], output)
mutated_mod['func_9752'] = func_9752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6662_call = mod.get_global_var('func_6662')
func_6664_call = mutated_mod.get_global_var('func_6664')
call_9782 = func_6662_call()
call_9783 = func_6662_call()
output = call_9782
output2 = call_9783
func_9786 = relay.Function([], output)
mod['func_9786'] = func_9786
mod = relay.transform.InferType()(mod)
output = func_9786()
func_9787 = relay.Function([], output)
mutated_mod['func_9787'] = func_9787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6309_call = mod.get_global_var('func_6309')
func_6310_call = mutated_mod.get_global_var('func_6310')
call_9812 = relay.TupleGetItem(func_6309_call(), 0)
call_9813 = relay.TupleGetItem(func_6310_call(), 0)
func_6240_call = mod.get_global_var('func_6240')
func_6243_call = mutated_mod.get_global_var('func_6243')
const_9819 = relay.const(10, dtype = "uint32")#candidate|9819|()|const|uint32
const_9820 = relay.const([-1,10,4,-10,7,10,6,4,4,-4,-9,-2,2,10,-9,7,-2,7,2,-2,1,-2,5,-6,-4,-3,-7,6,2,9,9,-3,-2,6,8,-4,-3,8,4,6,-6,3,-6,3], dtype = "uint32")#candidate|9820|(44,)|const|uint32
call_9818 = relay.TupleGetItem(func_6240_call(relay.reshape(const_9819.astype('uint32'), []), relay.reshape(const_9820.astype('uint32'), [11, 1, 4]), ), 5)
call_9821 = relay.TupleGetItem(func_6243_call(relay.reshape(const_9819.astype('uint32'), []), relay.reshape(const_9820.astype('uint32'), [11, 1, 4]), ), 5)
output = relay.Tuple([call_9812,call_9818,const_9819,const_9820,])
output2 = relay.Tuple([call_9813,call_9821,const_9819,const_9820,])
func_9838 = relay.Function([], output)
mod['func_9838'] = func_9838
mod = relay.transform.InferType()(mod)
output = func_9838()
func_9839 = relay.Function([], output)
mutated_mod['func_9839'] = func_9839
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9887 = relay.var("var_9887", dtype = "float32", shape = (6, 6, 15))#candidate|9887|(6, 6, 15)|var|float32
uop_9888 = relay.sin(var_9887.astype('float32')) # shape=(6, 6, 15)
func_748_call = mod.get_global_var('func_748')
func_750_call = mutated_mod.get_global_var('func_750')
const_9893 = relay.const([-4,2,-7,8,4,6,10,3,8,3,9,-10,-6,-1,-7,-4,9,6,4,9,9,10,-9,-1,8,6,10,2,-10,-2,1,-9,-3,6,10,5,-1,1,7,6,-7,-3,-10,-4,9,-9,-1,-3,-3,10,-4,-3,10,-4,-5,2,-5,-1,-1,-7,-3,3,3,6,4,-9,3,-5,5,1,10,-4,-10,9,-3,4,-3,8,2,1,-4,-6,2,1,1,-9,-5,5,1,-7,-2,-8,7,-10,2,6,-4,2,-4,-5,-4,5,9,-3,5,5,-10,-4,-1,-5,-8,8,1,-7,-4,9,7,5,3,-6,-9,-8,4,-3,6,7,-9,5,-4,5,5,5,-8,-9,10,9,-6,6,9,-6,-7,1,7,-6,-10,-10,6,8,6,5,3,-5,3,3,-3,8,-4,-8,7,-6,6,4,9,-6,-9,1,6,-5,9,10,-8,4,5,5,-7,-9,-4,6,4,10,-4,-9,9,9,1,2,6,-3,9,5,6,-2,6,6,2,5,-9,8,8,9,-7,-1,8,-5,2,6,3,-10,8,9,2,-7,10,-10,-5,2,-2,6,-6,9,-3,6,5,-5,2,2,-1,6,6,-2,6,6,6,10,-5,2,5,1,3,-10,1,-8,3,-4,3,2,9,-9,-10,-8,7,-10,-7,-2,-9,5,6,-10,9,-8,9,4,-7,-2,-10,-9,-10,1,2,-8,-8,8,-6,3,-4,8,2,-3,2,4,-6,1,4,5,-5,-4,4,7,4,-5,-2,4,-4,-10,2,10,-7,-6,-5,6,4,1,3,5,-9,-8,3,2,6,-6,6,-6,9,5,-3,-3,10,-4,-3,2,1,-10,9,2,2,4,5,2,-2,-7,-5,-1,-4,9,3,-7,1,-1,-9,-8,2,-10,1,-1,8,-7,8,-9,-4,10,-2,-4,-4,5,-7,-4,-2,5,6,-6,4,9,-3,4,9,-7,-1,-3,-5,10,-9,2,-1,-5,-5,-3,-4,2,-1,7,2,-8,-4,-10,9,-2,4,-10,-2,-2,-5,5,7,1,6,5,-1,-1,-6,-5,-8,-3,-4,7,-9,-3,6,-8,-5,-1,6,-9,3,-3,8,3,-6,8,9,-5,6,5,-6,-5,9,-4,-3,1,10,4,1,-5,6,-8,-9,-5,1,-7,10,-9,-7,3,5,-6,7,4,9,-6,5,2,-7,8,-5,-6,-4,-6,-8,-3,-5,10,10,10,5,6,10,-3,5,4,6,-6,6,5,5,7,-6,-3,-4,8,1,-1,-4,-7,-6,8,2,6,8,-2,-9,4,-9,-2,2,-2,5,-3,8,5,-2,9,9,-3,-7,1,-5,1,-1,-7,-4,5,4,8,7,-7,-8,-4,4,-5,4,8,2,5,4,-8,3,-10,3,-1,3,1,8,10,5,-2,-3,8,2,9,-5,6,2,7,4,-6,-9,8,-4,-7,4,-6,4,10,-7,-3,8,2,-5,-5,-8,6,10,5,2,1,-3,-1,-4,4,2,6,7,1,-9,-1,-7,-6,-10,-9,3,6,-10,5,-10,5,-6,-3,1,5,10,6,-2,4,-1,4,-6,4,-9,-2,-7,2,-10,-6,-1,-8,6,10,-6,2,1,3,-6,5,-7,-4,-4,10,3,4,7,-7,-5,3,-5,-1,10,-4,-3,2,6,6,4,3,-2,-3,8,-3,9,6,-2,-10,1,1,-3,-5,8,-8,-7,-10,-9,-9,-3,1,10,-7,6,-7,1,10,10,2,7,10,2,-3,3,9,-4,-9,10,9,3,-3,-5,-8,-10,-4,-10,-1,6,-5,-5,6,-5,-4,-3,2,-8,-10,-2,9,-9,-1,7,3,-7,2,-3,9,-5,4,5,-4,5,-7,2,-10,-9,2,-4,-1,3,3,4,-3,-7,7,-5,5,4,-8,8,-9,-1,-4,4,-8,-1,-1,4,-5,3,3,2,-9,-1,-5,4,-7,3,-10,9,5,10,4,-2,-7,1,-2,-9,1,9,-3,8,-10,1,1,9,-9,-2,2,-4,-10,10,-7,-4,-1,4,7,-3,-6,-6,-4,1,-1,6,10,4,-4,1,-3,2,7,9,-10,1,-7,-3,10,-6,-8,6,-4,-7,5,2,2,-4,-1,-4,-3,7,2,3,-3,-4,-1,10,-1,4,4,3,-1,4,10,-3,3,-5,1,6,8,8,2,-5,-4,10,6,-1,-10,8,-4,-5,2,-3,-7,-8,1,-4,-5,-6,9,-6,-9,1,3,1,2,-6,5,9,8,-9,-5,-2,4,-9,3,-10,-2,4,-4,-5,-3,1,8,-10,-9,-5,-1,-7,4,10,1,10,4,-9,10,-5,4,-1,-5,-9,9,1,1,-7,-3,-10,10,8,-5,2,-2,10,-2,6,-1,4,-1,10,-10,-4,-5,-7,-6,8,-3,-1,-7,1,-2,-9,-4,-3,-5,-4,1,9,-4,-2,3,-6,-2,1,7], dtype = "int32")#candidate|9893|(924,)|const|int32
call_9892 = func_748_call(relay.reshape(const_9893.astype('int32'), [6, 11, 14]))
call_9894 = func_748_call(relay.reshape(const_9893.astype('int32'), [6, 11, 14]))
output = relay.Tuple([uop_9888,call_9892,const_9893,])
output2 = relay.Tuple([uop_9888,call_9894,const_9893,])
func_9898 = relay.Function([var_9887,], output)
mod['func_9898'] = func_9898
mod = relay.transform.InferType()(mod)
mutated_mod['func_9898'] = func_9898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9899 = relay.var("var_9899", dtype = "float32", shape = (6, 6, 15))#candidate|9899|(6, 6, 15)|var|float32
func_9898_call = mutated_mod.get_global_var('func_9898')
call_9900 = func_9898_call(var_9899)
output = call_9900
func_9901 = relay.Function([var_9899], output)
mutated_mod['func_9901'] = func_9901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8956_call = mod.get_global_var('func_8956')
func_8958_call = mutated_mod.get_global_var('func_8958')
call_9987 = relay.TupleGetItem(func_8956_call(), 0)
call_9988 = relay.TupleGetItem(func_8958_call(), 0)
func_787_call = mod.get_global_var('func_787')
func_789_call = mutated_mod.get_global_var('func_789')
call_9992 = relay.TupleGetItem(func_787_call(), 1)
call_9993 = relay.TupleGetItem(func_789_call(), 1)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_9998 = func_2211_call()
call_9999 = func_2211_call()
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_10013 = relay.TupleGetItem(func_2645_call(), 0)
call_10014 = relay.TupleGetItem(func_2647_call(), 0)
output = relay.Tuple([call_9987,call_9992,call_9998,call_10013,])
output2 = relay.Tuple([call_9988,call_9993,call_9999,call_10014,])
func_10047 = relay.Function([], output)
mod['func_10047'] = func_10047
mod = relay.transform.InferType()(mod)
mutated_mod['func_10047'] = func_10047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10047_call = mutated_mod.get_global_var('func_10047')
call_10048 = func_10047_call()
output = call_10048
func_10049 = relay.Function([], output)
mutated_mod['func_10049'] = func_10049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6451_call = mod.get_global_var('func_6451')
func_6453_call = mutated_mod.get_global_var('func_6453')
call_10059 = relay.TupleGetItem(func_6451_call(), 0)
call_10060 = relay.TupleGetItem(func_6453_call(), 0)
func_7687_call = mod.get_global_var('func_7687')
func_7689_call = mutated_mod.get_global_var('func_7689')
call_10061 = relay.TupleGetItem(func_7687_call(), 1)
call_10062 = relay.TupleGetItem(func_7689_call(), 1)
uop_10073 = relay.sqrt(call_10061.astype('float32')) # shape=(840, 4)
uop_10075 = relay.sqrt(call_10062.astype('float32')) # shape=(840, 4)
output = relay.Tuple([call_10059,uop_10073,])
output2 = relay.Tuple([call_10060,uop_10075,])
func_10076 = relay.Function([], output)
mod['func_10076'] = func_10076
mod = relay.transform.InferType()(mod)
mutated_mod['func_10076'] = func_10076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10076_call = mutated_mod.get_global_var('func_10076')
call_10077 = func_10076_call()
output = call_10077
func_10078 = relay.Function([], output)
mutated_mod['func_10078'] = func_10078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2173_call = mod.get_global_var('func_2173')
func_2174_call = mutated_mod.get_global_var('func_2174')
call_10196 = relay.TupleGetItem(func_2173_call(), 3)
call_10197 = relay.TupleGetItem(func_2174_call(), 3)
output = call_10196
output2 = call_10197
func_10205 = relay.Function([], output)
mod['func_10205'] = func_10205
mod = relay.transform.InferType()(mod)
output = func_10205()
func_10206 = relay.Function([], output)
mutated_mod['func_10206'] = func_10206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4715_call = mod.get_global_var('func_4715')
func_4716_call = mutated_mod.get_global_var('func_4716')
call_10229 = relay.TupleGetItem(func_4715_call(), 1)
call_10230 = relay.TupleGetItem(func_4716_call(), 1)
output = call_10229
output2 = call_10230
func_10236 = relay.Function([], output)
mod['func_10236'] = func_10236
mod = relay.transform.InferType()(mod)
output = func_10236()
func_10237 = relay.Function([], output)
mutated_mod['func_10237'] = func_10237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3143_call = mod.get_global_var('func_3143')
func_3145_call = mutated_mod.get_global_var('func_3145')
call_10274 = relay.TupleGetItem(func_3143_call(), 0)
call_10275 = relay.TupleGetItem(func_3145_call(), 0)
output = relay.Tuple([call_10274,])
output2 = relay.Tuple([call_10275,])
func_10276 = relay.Function([], output)
mod['func_10276'] = func_10276
mod = relay.transform.InferType()(mod)
output = func_10276()
func_10277 = relay.Function([], output)
mutated_mod['func_10277'] = func_10277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_10285 = relay.TupleGetItem(func_4423_call(), 0)
call_10286 = relay.TupleGetItem(func_4425_call(), 0)
output = relay.Tuple([call_10285,])
output2 = relay.Tuple([call_10286,])
func_10287 = relay.Function([], output)
mod['func_10287'] = func_10287
mod = relay.transform.InferType()(mod)
output = func_10287()
func_10288 = relay.Function([], output)
mutated_mod['func_10288'] = func_10288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5781_call = mod.get_global_var('func_5781')
func_5782_call = mutated_mod.get_global_var('func_5782')
call_10292 = relay.TupleGetItem(func_5781_call(), 0)
call_10293 = relay.TupleGetItem(func_5782_call(), 0)
func_3728_call = mod.get_global_var('func_3728')
func_3729_call = mutated_mod.get_global_var('func_3729')
call_10313 = relay.TupleGetItem(func_3728_call(), 0)
call_10314 = relay.TupleGetItem(func_3729_call(), 0)
output = relay.Tuple([call_10292,call_10313,])
output2 = relay.Tuple([call_10293,call_10314,])
func_10315 = relay.Function([], output)
mod['func_10315'] = func_10315
mod = relay.transform.InferType()(mod)
mutated_mod['func_10315'] = func_10315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10315_call = mutated_mod.get_global_var('func_10315')
call_10316 = func_10315_call()
output = call_10316
func_10317 = relay.Function([], output)
mutated_mod['func_10317'] = func_10317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3728_call = mod.get_global_var('func_3728')
func_3729_call = mutated_mod.get_global_var('func_3729')
call_10320 = relay.TupleGetItem(func_3728_call(), 2)
call_10321 = relay.TupleGetItem(func_3729_call(), 2)
func_7675_call = mod.get_global_var('func_7675')
func_7676_call = mutated_mod.get_global_var('func_7676')
call_10333 = relay.TupleGetItem(func_7675_call(), 0)
call_10334 = relay.TupleGetItem(func_7676_call(), 0)
uop_10342 = relay.tan(call_10320.astype('float32')) # shape=(840, 4)
uop_10344 = relay.tan(call_10321.astype('float32')) # shape=(840, 4)
func_5244_call = mod.get_global_var('func_5244')
func_5247_call = mutated_mod.get_global_var('func_5247')
const_10350 = relay.const([-5.837583,-5.447139,-3.482480,-5.340082,6.543635,4.128347,4.674424,3.724669,-9.615540,-3.087652,-5.360660,5.788269,-6.551465,-9.216782,5.014272,-4.055568,-6.518432,-8.280531,4.015525,0.913493,-1.712401,4.001399,-2.125981,-7.616567,-9.970184,-3.086517,0.138863,8.444815,-1.563336,9.785348,6.037848,9.778384,-6.385682,-7.547821,-0.629801,-2.078639,-2.693524,7.741161,-4.866481,-4.673692,-5.573791,5.182713,-3.587497,-2.630533,1.692052,-7.979315,2.871245,-3.126711,5.792539,2.405151,8.945949,2.341100,-0.088600,-7.352669,-5.206778,7.084357,6.797227,-0.296522,2.539031,-7.589426,-9.833624,7.222413,-6.314490,6.297732,5.411383,-2.021635,-7.811572,-0.710701,-0.260028,9.734058,8.634594,7.124271,8.841898,6.211528,-9.540642,8.691378,-6.038179,-6.094544,7.918637,3.840130,2.772445,4.217831,3.903046,-9.039919,-1.143912,-9.572995,-9.601830,-3.829060,2.202774,2.349400,2.938486,-3.610340,6.748489,-6.107358,-1.675837,2.791520,8.925852,5.468498,7.034116,-3.644062,1.464691,3.499401,0.555345,9.454053,2.712864,-8.986700,-6.280345,3.150868,-4.878532,-7.467371,8.791114,-0.724367,-8.380266,5.813615,3.851942,4.864814,-7.515720,-2.289478,-7.210597,-5.452603,-4.803925,-0.381362,4.615579,3.116222,8.501888,-3.239053,1.960754,-4.809567,-7.515308,9.942436,2.674419,-1.588200,-4.431471,8.796088,-1.821298,-8.904234,3.415379,3.747948,-4.588687,-6.221196,-7.525425,-5.238675,7.044237,7.603634,-0.577381,3.558821,2.694032,2.196917,-6.333855,-4.351484,-3.465095,-2.478936,4.505907,-0.835033,-6.851664,-5.108701,3.582707,-6.021336,9.326833,-3.918651,6.030132,1.552058,6.529636,-4.246700,-7.807149,0.681920,5.240847,-0.804484,4.236927,8.005059,5.289568,4.457586,-1.700135,4.079797,1.543411,-2.125638,3.830898,-8.632223,-7.472989,-0.671880,0.542452,-9.474316,8.833920,-3.247544,1.568661,-7.022190,1.059321,-1.967288,-0.367335,1.714343,6.258735,-5.671599,1.131798,-5.453609,3.590120,-6.997976,-7.362657,4.849477,0.209622,-4.130614,1.489990,0.921663,-3.156941,6.445241,1.779728,9.079782,-7.722556,7.845140,-0.477276,8.664863,4.127872,-8.435039,-3.526249,6.116437,2.396232,3.043042,9.948017,3.743730,-1.904844,-8.431370,0.794530,-4.953358,6.243467,-5.889399,6.384318,3.456774,6.976881,-2.583199,8.785944,-7.310557,-9.465910,-4.639675,-4.224802,2.405422,-5.394479,9.173576,4.204812,2.471191,6.819123,-3.093311,5.310743,6.661660,-2.900698,1.069080,-7.575416,-5.349231,5.207021,-9.447466,3.740092,-8.061839,5.860166,1.295458,8.633509,7.785901,-4.149527,-4.820029,3.139401,0.871406,5.879489,1.817057,-8.457067,-0.321035,-0.195289,5.467986,0.466670,0.596849,0.032843,3.426279,9.933757,-5.496114,8.958860,-5.059144,-3.377622,-7.392330,-4.048848,4.314643,1.372385,-4.541628,-2.018758,5.387083,5.659463,-3.864099,-7.153799,1.256370,-0.896890,7.555171,-7.306832,-2.538227,5.663395,7.381101,0.448482,-0.533303,-7.987033,-7.345187,8.952902,-0.881776,5.652135,0.785386,8.547269,4.450768,-0.884853,9.125742,-5.480428,-4.282939,-4.474198,9.571905,-7.471137,-1.066442,-3.243476,-4.981230,5.393715,-9.540628,8.367173,-5.555405,9.748430,9.061238,-1.919204,-6.689953,-6.971353,9.704149,-7.723350,-2.058566,-4.062730,-0.529916,-6.709800,-4.641689,0.710372,-8.447500,1.561620,2.312391,-4.610167,-0.780584,2.837829,-5.126080,7.850386,-8.765534,-8.338694,9.821053,-1.107009,-7.868250,-0.776684,-4.205342,7.235211,-6.695700,1.042239,8.242305,-6.892583,-5.602674,7.299257,-0.563516,-2.847568,-9.301280,6.806546,-6.389106,2.114838,-9.379745,9.850791,-1.973178,4.714181,7.581973,-6.818434,7.054336,7.194356,7.774788,-7.652457,2.449455,-9.323367,6.944137,9.434177,5.745860,-0.525146,-4.989629,-0.972207,6.217412,-1.306985,-4.529019,2.951860,2.334818,-8.823889,1.992118,-1.682216,8.248819,4.393650,2.389956,-0.833175,9.042027,-8.809630,7.281653,-0.906403,8.251016,3.242757,-0.904095,2.389471,1.130952,-2.182329,-2.165688,-0.642641,9.929432,-5.561045,-3.423152,-8.873067,-1.213620,-7.480013,7.803998,-2.786058,4.971164,2.594726,-5.261329,4.326206,-6.721817,5.817448,0.984777,-8.705428,5.732376,5.259558,-0.496931,4.523996,-9.464278,-0.225200,8.290131,-5.141145,-9.251097,-7.536607,-3.458342,2.346282,8.121640,3.763105,-8.636760,9.508649,7.174956,1.833422,-4.374729,-2.898303,-9.628682,1.793444,0.729806,-9.825045,1.341597,-5.485814,5.175626,-5.519452,-6.255920,0.306826,4.101256,-0.982298,0.192765,-7.940629,6.369547,-4.732870,9.480073,2.272755,-0.978862,9.362687,-2.024081,8.525760,1.272599,-0.321321,-8.551253,-0.403754,-2.374420,-1.716697,-0.991316,-5.527377,2.987681,-8.054068,-3.036648,5.655067,5.098849,-2.349594,-5.251707,4.497096,8.575347,-2.271450,5.210862,6.053465,3.622560,8.068089,8.491681,7.041405,8.214395,2.516072,5.663645,-0.851773,3.345423,-1.684224,-6.345852,6.687988,9.962466,1.700687,-4.747332,1.266739,-2.239376,-1.038014,-7.515834,-6.336477,8.763719,9.537616,-5.842169,2.887802,-2.165552,-6.360129,-3.310634,-3.593516,9.219401,-7.999938,-6.280772,8.064052,8.616243,-7.378335,-9.122344,3.689809,6.358769,-0.751500,-9.825684,3.399865,-4.400751,6.727838,-3.016119,-6.490789,-2.830486,0.552249,-6.351680,1.884289,-5.164096,1.163192,8.633031,-2.222007,9.906463,-2.314209,9.959947,-9.942813,4.935983,-3.926518,7.787767,5.677351,6.671702,6.458572,-3.115372,2.462229,-4.228979,5.789788,7.516907,-5.073264,-1.613145,-6.811122,8.916116,1.467951,0.265195,-1.732670,2.179953,-2.839548,-2.516687,-6.939048,-2.299989,-1.962155,2.267622,-5.180568,1.447398,3.241900,-9.657423,6.373959,7.596136,-0.758117,-6.137538,7.574967,4.899790,9.496206,8.268092,-9.871705,7.034238,1.728807,-9.594371,-5.716905,-0.152015,3.949185,8.954784,-4.226984,-6.966801,3.060198,7.642059,-5.050567,-9.538220,2.582664,8.860785,-0.248426,-8.302847,6.767743,6.986503,-4.167363,-6.838938,-2.936783,2.273311,-8.780167,-7.044684,-2.823342,-1.731102,-4.462005,-1.523185,6.460187,3.166991,5.821120,4.608760,-1.318420,-9.098112,-7.713023,-5.139077,-5.344970,-9.709010,3.587164,9.888036,-9.537391,-1.951743,-7.521387,-3.484480,7.039004,4.235445,1.070297,9.805481,-9.325011,8.246261,-1.675012,1.096866,7.802524,5.744075,-1.945560,-9.881785,4.303829,7.532935,-0.795048,4.155012,6.695080,-9.050945,6.241567,-5.284803,3.292615,-4.324480,-4.648052,-4.987459,9.834877,-4.588762,-7.575506,1.547875,-5.056516,-5.710281,-5.876877,-6.889515,-9.262170,4.367531,-8.777671,5.939804,1.130779,-6.376465,-9.345121,0.791139,-2.149420,8.206571,-2.852243,-1.196653,-1.801139,8.552422,-7.689590,-9.515372,-3.625621,-5.312844,-0.461781,-9.286269,-7.519041,9.863012,-5.582037,-9.442784,-4.936023,4.669503,-3.656149,2.914301,-7.463222,-3.059135,-6.819978,-5.314059,-6.734882,-8.675132,-6.143462,-9.884063,3.381132,7.344951,-8.645585,-3.427576,-6.367163,4.070075,-8.201308,0.560798,-9.238580,3.901136,-9.393719,6.729463,4.015302,4.093344,8.081179,-1.345940,4.382605,-3.409212,1.815291,1.300492,-7.593659,4.386790,3.247157,-4.296264,-3.803919,5.614789,8.981986,9.471592,-9.223980,-8.637705,-0.960477,-5.283504,0.614513,2.189345,6.096025,-9.369994,2.888252,-3.441552,-5.804971,-3.033011,5.534930,3.400386,1.598078,0.769550,-4.377453,2.147987,-0.980576,-2.708432,-3.197498,-3.876059,-4.332270,6.086118,-0.368126,1.196918,-6.202844,4.116861,0.856725,-4.237973,7.326704,-2.687607,-1.468121,-8.072918,4.333599,-5.634113,-1.129597,9.007834,4.880325,9.320907,6.590051,-5.983561,-2.641906,2.373928,-3.105682,-8.647364,9.142930,9.782700,-9.588286,-7.014595,7.353682,5.913079,2.246116,-6.915420,-8.307069,5.322085,-5.382286,4.858736,7.727821,-6.117890,2.930899,-1.974340,5.854973,-8.154020,9.973637,3.651890,8.609326,2.248249,-2.696503,5.608398,8.993805,-8.842833,-4.891953,-4.621971,-2.382208,9.460642,-2.792583,-6.639887,-4.341309,4.649218,8.233961,-8.907437,-4.863317,1.038897,9.741748,3.993288,2.177346,6.997715,6.369320,-7.478837,-1.929543,7.448418,5.396027,3.897001,-1.761789,7.837080,4.284623,-2.087149,3.742030,-3.631549,-2.075515,7.008039,0.660016,2.082936,2.189536,-4.571690,-8.548408,-0.673136,0.074131,5.370337,-4.261319,9.713903,-2.611517,5.068192,-3.655866,-0.411049,4.350889,-2.355161,-4.214144,-1.597161,3.665126,-7.035327,-4.234899,8.773145,-5.336886,-2.842418,-7.562995,-8.099081,4.765077,-8.009877,-6.979699,0.851218,0.818166,-1.669843,6.157577,0.966780,-1.990767,-7.637393,-1.993030,-7.210650,-9.018724,2.144067,5.704439,4.648226,-1.552528,-4.168076,6.581593,-4.333907,7.943305,-0.176730,4.003274,-7.403022,0.160569,8.086153,-5.474761,-8.069284,-0.372739,2.704391,-9.373389,-6.535995,3.382544,4.794661,-8.087332,9.850725,-8.131286,3.662205,9.744602,4.697186,-5.772966,-1.936773,4.375757,-9.681557,-8.279274,5.973326,-2.983887,5.135832,-5.979343,-8.288304,3.285410,-6.992880,-2.472280,8.255475,8.982545,-8.428785,0.098647,3.322874,-5.633391,-4.881242,2.203337,5.870810,-1.985404,9.186645,5.010666,9.897605,2.744760,-8.647800,3.390645,8.971017,7.610386,3.002789,-7.645343,3.687079,-6.579291,-3.414953,6.076835,9.003629,-8.036204,-2.071770,1.217656,-6.455278,4.773473,-1.044598,5.409614,-8.293833,9.586239,8.582751,-1.601356,-3.415092,2.774744,-4.556698,-9.733813,-8.295190,9.453723,-5.403670,-0.529423,9.910001,-2.500885,8.315826,-6.267873,-1.486058,3.810113,3.518850,-5.257776,-9.478729,-1.187225,-9.073823,-5.931706,-8.192529,5.615931,-3.880289,3.234518,2.625643,5.667495,2.939131,-1.169659,-1.411176,-0.279910,6.064554,5.136226,-0.423297,4.323843,1.079304,2.499633,2.789171,-0.908804,-7.919127,2.230425,2.457807,-2.565800,-2.907944,-3.769021,-3.189661,6.827095,8.502824,3.063506,-2.514500,-7.933799,3.770981,7.845466,-8.392419,-5.802850,-1.745914,9.948590,2.017588,-3.139917,-1.518012,-2.798528,1.920374,6.008109,-8.531887], dtype = "float32")#candidate|10350|(990,)|const|float32
call_10349 = func_5244_call(relay.reshape(const_10350.astype('float32'), [9, 10, 11]))
call_10351 = func_5244_call(relay.reshape(const_10350.astype('float32'), [9, 10, 11]))
output = relay.Tuple([call_10333,uop_10342,call_10349,const_10350,])
output2 = relay.Tuple([call_10334,uop_10344,call_10351,const_10350,])
func_10363 = relay.Function([], output)
mod['func_10363'] = func_10363
mod = relay.transform.InferType()(mod)
output = func_10363()
func_10364 = relay.Function([], output)
mutated_mod['func_10364'] = func_10364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7215_call = mod.get_global_var('func_7215')
func_7217_call = mutated_mod.get_global_var('func_7217')
call_10372 = relay.TupleGetItem(func_7215_call(), 0)
call_10373 = relay.TupleGetItem(func_7217_call(), 0)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_10388 = relay.TupleGetItem(func_921_call(), 1)
call_10389 = relay.TupleGetItem(func_923_call(), 1)
output = relay.Tuple([call_10372,call_10388,])
output2 = relay.Tuple([call_10373,call_10389,])
func_10390 = relay.Function([], output)
mod['func_10390'] = func_10390
mod = relay.transform.InferType()(mod)
output = func_10390()
func_10391 = relay.Function([], output)
mutated_mod['func_10391'] = func_10391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9395_call = mod.get_global_var('func_9395')
func_9396_call = mutated_mod.get_global_var('func_9396')
call_10392 = relay.TupleGetItem(func_9395_call(), 0)
call_10393 = relay.TupleGetItem(func_9396_call(), 0)
output = call_10392
output2 = call_10393
func_10409 = relay.Function([], output)
mod['func_10409'] = func_10409
mod = relay.transform.InferType()(mod)
mutated_mod['func_10409'] = func_10409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10409_call = mutated_mod.get_global_var('func_10409')
call_10410 = func_10409_call()
output = call_10410
func_10411 = relay.Function([], output)
mutated_mod['func_10411'] = func_10411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_10542 = relay.TupleGetItem(func_1202_call(), 0)
call_10543 = relay.TupleGetItem(func_1204_call(), 0)
output = call_10542
output2 = call_10543
func_10549 = relay.Function([], output)
mod['func_10549'] = func_10549
mod = relay.transform.InferType()(mod)
mutated_mod['func_10549'] = func_10549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10549_call = mutated_mod.get_global_var('func_10549')
call_10550 = func_10549_call()
output = call_10550
func_10551 = relay.Function([], output)
mutated_mod['func_10551'] = func_10551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9682_call = mod.get_global_var('func_9682')
func_9684_call = mutated_mod.get_global_var('func_9684')
call_10593 = relay.TupleGetItem(func_9682_call(), 1)
call_10594 = relay.TupleGetItem(func_9684_call(), 1)
func_8720_call = mod.get_global_var('func_8720')
func_8722_call = mutated_mod.get_global_var('func_8722')
call_10610 = func_8720_call()
call_10611 = func_8720_call()
func_10047_call = mod.get_global_var('func_10047')
func_10049_call = mutated_mod.get_global_var('func_10049')
call_10654 = relay.TupleGetItem(func_10047_call(), 1)
call_10655 = relay.TupleGetItem(func_10049_call(), 1)
output = relay.Tuple([call_10593,call_10610,call_10654,])
output2 = relay.Tuple([call_10594,call_10611,call_10655,])
func_10662 = relay.Function([], output)
mod['func_10662'] = func_10662
mod = relay.transform.InferType()(mod)
mutated_mod['func_10662'] = func_10662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10662_call = mutated_mod.get_global_var('func_10662')
call_10663 = func_10662_call()
output = call_10663
func_10664 = relay.Function([], output)
mutated_mod['func_10664'] = func_10664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4901_call = mod.get_global_var('func_4901')
func_4903_call = mutated_mod.get_global_var('func_4903')
call_10677 = func_4901_call()
call_10678 = func_4901_call()
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_10685 = relay.TupleGetItem(func_3940_call(), 0)
call_10686 = relay.TupleGetItem(func_3941_call(), 0)
func_8808_call = mod.get_global_var('func_8808')
func_8810_call = mutated_mod.get_global_var('func_8810')
call_10694 = relay.TupleGetItem(func_8808_call(), 0)
call_10695 = relay.TupleGetItem(func_8810_call(), 0)
func_5227_call = mod.get_global_var('func_5227')
func_5228_call = mutated_mod.get_global_var('func_5228')
call_10715 = relay.TupleGetItem(func_5227_call(), 0)
call_10716 = relay.TupleGetItem(func_5228_call(), 0)
output = relay.Tuple([call_10677,call_10685,call_10694,call_10715,])
output2 = relay.Tuple([call_10678,call_10686,call_10695,call_10716,])
func_10720 = relay.Function([], output)
mod['func_10720'] = func_10720
mod = relay.transform.InferType()(mod)
mutated_mod['func_10720'] = func_10720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10720_call = mutated_mod.get_global_var('func_10720')
call_10721 = func_10720_call()
output = call_10721
func_10722 = relay.Function([], output)
mutated_mod['func_10722'] = func_10722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6505_call = mod.get_global_var('func_6505')
func_6506_call = mutated_mod.get_global_var('func_6506')
call_10751 = relay.TupleGetItem(func_6505_call(), 0)
call_10752 = relay.TupleGetItem(func_6506_call(), 0)
output = relay.Tuple([call_10751,])
output2 = relay.Tuple([call_10752,])
func_10758 = relay.Function([], output)
mod['func_10758'] = func_10758
mod = relay.transform.InferType()(mod)
output = func_10758()
func_10759 = relay.Function([], output)
mutated_mod['func_10759'] = func_10759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7442_call = mod.get_global_var('func_7442')
func_7443_call = mutated_mod.get_global_var('func_7443')
call_10760 = relay.TupleGetItem(func_7442_call(), 0)
call_10761 = relay.TupleGetItem(func_7443_call(), 0)
func_8434_call = mod.get_global_var('func_8434')
func_8436_call = mutated_mod.get_global_var('func_8436')
call_10766 = relay.TupleGetItem(func_8434_call(), 0)
call_10767 = relay.TupleGetItem(func_8436_call(), 0)
output = relay.Tuple([call_10760,call_10766,])
output2 = relay.Tuple([call_10761,call_10767,])
func_10773 = relay.Function([], output)
mod['func_10773'] = func_10773
mod = relay.transform.InferType()(mod)
mutated_mod['func_10773'] = func_10773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10773_call = mutated_mod.get_global_var('func_10773')
call_10774 = func_10773_call()
output = call_10774
func_10775 = relay.Function([], output)
mutated_mod['func_10775'] = func_10775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9395_call = mod.get_global_var('func_9395')
func_9396_call = mutated_mod.get_global_var('func_9396')
call_10782 = relay.TupleGetItem(func_9395_call(), 0)
call_10783 = relay.TupleGetItem(func_9396_call(), 0)
func_1998_call = mod.get_global_var('func_1998')
func_1999_call = mutated_mod.get_global_var('func_1999')
call_10789 = relay.TupleGetItem(func_1998_call(), 0)
call_10790 = relay.TupleGetItem(func_1999_call(), 0)
func_626_call = mod.get_global_var('func_626')
func_629_call = mutated_mod.get_global_var('func_629')
const_10796 = relay.const([[7,-9,-5,5,-1,4,-9,6,6,9,10,-5,-6,-7,4,4,-7,10,-2,-3,1,6,2,9,7,5,-5,-4,-7,2,2,-3,-1,-10,7,9,-3,-9,-4,3,6,3,-8,2,7,7,4,-8,-2,-1,4,-6,-2,9,3,9,10,3,-10,3,3,-7,-9,-1,5,-9,-1,-3,-2,-8,4,6,-3,4,-4,-1,9,3,2,9,7,4,5,-8,10,3,7,-2,6,4,-4,-8,-2,1,6,-1,9,8,5,-2,6,-10,3,-5,-9,1,-3,-4,-2,9,4,1,-7,9,7,-6,-7,7,-10,10,-3,-3,-2,1,2,1,2,-3,-1,1,-4,-2,-7,2,3,-7,3,-3,6,8,-8,8,-3,8,-3,-3,-8,-9,-3,-2,-1,3,8,-6,3,-6,4,-8,-3,10,-9,-5,5,-2,3,7,5,-5,-7,1,6,1,-1,9,-7,-2,-2,-3,-8,-7,1,2,-5,2,9,-4,-1,9,3,-6,6,7,2,7,5,9,-10,-5,-10,-9,-8,-8,-5,1,-2,8,-2,6,-5,3,6,7,5,-1,8,-5,-2,-7,7,-6,-2,9,-7,7,-7,-1,2,-1,1,3,-3,-6,-1,-3,-1,-9,3,-7,2,-2],[4,-4,-5,-5,-8,-6,5,7,6,-4,8,2,-1,2,4,-4,1,-7,4,3,-8,-4,-10,1,-10,-5,-8,10,5,-5,-9,-7,9,-7,4,9,-8,7,4,5,2,-4,6,-4,-7,-10,-9,7,1,-3,5,-8,-2,4,-2,-2,1,-9,-10,-8,1,3,6,-8,-7,1,2,6,4,-2,9,3,7,-6,4,-4,-3,4,9,6,2,8,7,-8,4,-7,3,2,1,-7,-4,-1,9,8,-5,4,2,-1,-7,-9,-8,-5,-8,1,7,-6,8,-9,1,5,-2,5,-2,-4,-5,2,-9,4,-6,-7,-4,3,10,-1,7,-1,6,4,2,8,9,3,-9,-7,2,7,9,-8,-1,-2,-4,7,8,-7,-9,10,-7,8,-9,-4,-9,9,-10,-6,7,-9,-10,-10,-10,-3,-3,5,-7,9,-7,1,3,-3,6,-4,-9,3,-1,-10,-9,8,-7,4,-7,1,6,-2,-9,-2,6,9,8,7,-4,-10,1,7,-10,-1,5,-3,-4,-10,1,10,-7,-3,1,-4,-6,-10,-2,-4,-1,1,8,9,-10,7,-10,-9,5,1,1,-3,-2,5,-1,8,7,-7,7,7,2,7,10,-8,7,3,7,-8,-8,-4,-3,8],[-6,-4,-1,-10,-6,5,-4,-1,4,-10,9,-1,10,-5,-10,2,-9,8,-1,3,7,1,2,-2,-5,9,-10,-2,-6,5,1,-3,-6,-8,-9,-2,10,-10,7,-1,4,-8,-10,7,7,-3,9,-9,-5,4,10,4,1,-2,-4,3,-3,-6,-3,-9,5,1,6,-1,-6,8,-2,6,4,4,-1,10,1,-6,-9,7,9,-9,7,-9,-6,-9,-9,4,2,-3,-6,-6,-9,1,1,3,7,6,-4,7,4,-10,2,8,1,-7,-4,-2,-7,-10,-3,10,-7,-2,-3,-2,-8,10,6,1,9,4,1,6,-1,8,-1,3,-7,8,-5,-7,-5,-10,6,8,-9,9,-10,-10,3,-6,8,-4,-4,5,5,2,-10,2,-4,-9,5,-7,-5,8,6,-6,-1,9,5,5,-5,-3,-9,-9,5,8,-10,-5,-3,-4,-6,3,-3,3,6,1,4,6,-6,6,7,-9,10,-1,-6,-2,-5,10,-9,7,2,7,-1,7,10,-7,9,1,2,2,6,4,1,1,-8,3,8,4,-5,-7,6,1,1,-5,-5,-5,-3,2,3,-1,-6,1,-8,-1,7,9,1,-9,3,9,10,-7,-1,6,6,6,-4,6,-3,-5,5,4],[-4,-2,6,5,3,9,-4,-1,2,2,6,8,-5,10,6,9,8,9,3,1,5,-2,-5,-9,2,-5,-7,6,7,-3,-1,-5,4,-4,-7,2,7,2,9,-10,-3,9,-9,4,-2,-1,9,-3,-1,7,4,-3,-5,4,6,-5,1,1,-9,-8,-3,-6,-6,-5,-10,6,-4,-4,1,3,1,8,-1,2,3,-3,-8,1,9,-10,10,2,6,-5,5,-6,-5,10,1,-6,-3,-3,7,4,9,5,-3,-5,5,6,7,8,-4,8,10,2,-4,-6,-8,-8,-8,6,10,-8,3,-4,-6,4,1,-7,-7,-6,-5,-3,5,-8,4,4,-9,-10,-8,5,-7,6,-3,10,-4,-3,9,10,7,6,-5,-7,3,-7,2,-7,-10,-8,5,-3,4,-10,1,-8,-9,2,-5,8,-8,10,-8,-10,9,-3,6,5,-3,-3,-6,-5,-5,9,-7,9,4,5,4,10,3,-10,-1,-7,10,9,10,1,2,-5,-8,4,2,6,7,1,-1,-9,6,5,7,-3,9,-2,7,1,2,9,-7,3,-1,3,7,-4,-7,10,4,-1,-1,-5,-2,6,-4,-7,-2,-4,-7,6,-7,7,-1,8,-2,10,3,4,4,9,-8,6],[9,6,-6,-7,5,9,-3,-1,9,10,9,-7,-7,10,5,5,7,-9,4,-8,-2,-4,5,9,9,5,-7,-10,1,10,-5,9,8,4,3,-10,-8,-9,-2,-8,10,-8,10,-9,-7,6,-6,5,-2,-4,1,-2,-10,4,7,-2,7,-4,-9,7,-4,1,9,-1,-5,8,1,-6,10,7,-4,-6,1,10,-3,-10,-2,-6,-7,4,2,-7,-3,-7,3,-10,-3,9,-4,-7,-6,5,-8,-10,8,4,-9,4,-3,5,-5,10,9,3,8,4,7,-3,10,7,-1,-7,-3,2,-2,-2,10,-8,-3,4,-10,-5,-8,1,6,-6,-2,-7,4,3,-6,4,6,7,-2,9,1,-1,4,7,-4,7,5,-3,3,4,10,5,9,-5,5,5,10,7,1,-6,-8,-3,8,2,1,-3,4,-6,2,-6,-7,-4,-6,-3,-4,2,-5,-5,-10,-4,-2,3,-7,-1,-4,5,-7,-8,-10,1,-3,4,-9,-9,-5,-1,2,-5,7,-5,4,-2,-10,3,3,-2,7,2,-6,-5,6,9,4,-4,-3,-1,2,5,4,-2,4,-3,1,-8,-8,9,1,-9,-4,-5,5,-4,-1,-9,-9,-4,-4,-5,-2,-3,6,-2,1,-3],[8,4,5,-10,-6,-3,-9,-9,4,7,7,-6,-1,-1,2,7,-3,5,8,-6,4,1,-6,6,6,-4,3,-9,8,7,3,4,-5,-6,6,-9,-1,4,3,-5,-5,-4,-1,-5,3,3,-7,4,7,7,1,-4,6,-8,-9,-8,6,-3,6,-7,9,9,-8,10,-2,-7,-2,-3,-8,-7,-8,1,8,-10,-3,7,1,-10,6,2,-6,1,1,-6,9,-8,-8,-8,5,3,8,-10,6,6,9,-2,-1,2,-8,-1,-10,3,-9,6,-10,-2,1,-7,-1,8,3,4,2,-3,2,9,-4,2,5,7,-9,6,-10,-6,6,-10,6,2,-10,10,1,-6,2,-8,7,4,4,-7,-3,-5,7,-7,-9,-10,-5,1,-2,5,-6,-2,-8,-9,6,-9,9,9,1,-10,6,9,2,1,8,9,9,-5,10,1,9,7,6,-5,-4,7,-5,-3,-8,-3,2,-8,-5,-10,-8,1,3,-7,-3,-3,-7,9,7,-1,8,-1,5,-9,-4,-3,2,-4,-3,-3,3,-5,6,-4,-6,10,-6,4,10,-2,-4,1,-3,10,-7,-4,9,-3,-5,-10,10,7,-10,-9,-6,-9,8,-6,-6,-4,-9,3,10,-3,-3,-6,-2,10],[3,6,-10,10,4,6,-4,1,1,-9,2,-5,-6,9,-5,-4,8,-10,3,-4,-7,5,3,5,1,-4,-8,9,4,-4,7,-7,-5,1,6,5,6,-7,9,2,7,-5,8,9,-10,-9,10,-1,-3,-5,8,6,-3,4,4,1,3,-6,-10,3,9,-8,-7,6,-1,-3,-2,-4,2,6,-5,7,3,-9,6,2,3,4,8,2,-2,10,-3,-8,4,1,1,7,9,6,5,3,-7,-8,9,-4,-6,-5,-1,-4,-9,4,4,3,-5,-1,4,-10,10,-5,1,-2,-6,-6,1,1,8,9,5,5,10,2,-9,6,2,10,3,-10,10,5,7,-3,-1,5,4,-6,6,-8,-2,-4,-8,-10,8,-9,6,-2,-9,-8,-7,6,2,8,2,1,-2,10,1,8,-2,8,2,2,2,4,4,-3,-2,4,-8,-9,2,-10,-1,-2,7,2,-9,1,-4,-3,4,5,-8,1,-6,6,-2,-10,-7,6,2,3,2,-3,10,-7,3,-2,10,4,-6,5,9,10,10,1,-6,5,2,-4,-5,9,-2,-6,-6,10,5,1,1,-1,9,-4,8,-3,-7,-3,10,10,-4,-6,-1,4,10,-1,9,3,-5,3,6,4],[-4,8,8,8,8,-2,-10,6,-4,-2,-10,10,-2,9,-10,-3,-9,-10,1,-10,-2,10,1,-2,3,-9,-1,-8,-4,2,1,2,-6,-6,-2,6,1,6,1,8,-5,9,-7,-10,-8,-7,-6,7,-3,9,-1,9,-2,-3,-6,1,7,-7,8,7,8,5,5,7,6,3,-2,1,-1,7,5,-9,7,-9,5,-3,10,-8,1,-2,1,8,2,-7,4,-10,-1,3,9,7,6,9,-9,2,2,10,-1,-9,6,6,8,-8,9,9,3,-1,5,6,7,-5,-4,-4,-1,-8,7,-8,-3,7,10,-9,-1,4,10,-1,10,8,3,6,5,3,-1,-10,-9,-6,3,10,6,2,-5,-3,-1,6,-2,-9,8,2,5,4,7,3,-7,-5,-8,-1,10,-6,4,6,-6,-7,-9,6,9,7,1,-7,2,1,9,-3,-5,-1,-2,-9,5,5,-2,-7,-2,-10,-6,-1,-9,10,-4,6,-3,2,-7,4,-6,-6,-1,-1,1,5,-8,-6,1,-4,9,6,-10,-7,-9,1,-1,4,-1,-2,8,-10,4,-5,3,9,1,6,-4,-2,-4,-8,9,-7,-1,-3,-4,5,-10,-2,10,-7,-9,-6,-7,-7,9,-8,-1,1],[1,9,8,7,4,10,-3,7,-1,-6,-1,-9,-10,9,1,-3,5,-10,-8,8,6,-6,-9,10,7,-8,9,-9,8,2,9,2,9,-4,8,-9,-3,3,1,2,9,4,-1,7,-10,-7,-6,2,10,2,-9,-4,9,2,1,6,8,-6,-5,-8,-3,6,5,-7,-2,-5,-2,-3,6,-1,-1,-7,-8,-8,7,8,1,1,9,-1,7,-4,-4,-1,4,7,8,-6,8,-7,-10,-7,8,8,-8,-2,6,-5,3,-5,6,4,-8,10,4,1,4,-6,-5,-2,5,7,10,-6,-8,1,4,7,6,6,-7,-4,4,-5,-6,4,-1,-7,-3,-5,5,-6,-1,-9,-2,-5,-1,-2,-2,-5,-6,-2,-10,-7,3,5,-7,-4,-5,5,7,8,2,-2,9,-3,-6,1,3,8,-1,3,-3,-8,10,-6,5,5,-4,-10,-6,-7,7,6,-7,7,5,-5,6,7,-9,3,6,1,-6,-4,-5,3,-10,-3,3,-2,1,9,3,5,10,3,-7,8,7,-6,-7,-4,7,-2,9,-1,3,10,-5,-5,-5,10,5,5,-4,-4,-9,-7,-6,-7,3,5,-7,2,-2,-6,7,8,8,4,4,2,-6,10,-8,-7,6,-6],[9,-4,5,9,-7,-4,10,-6,7,8,9,-5,6,5,-6,-4,9,5,7,5,-10,-9,-8,5,-5,1,10,8,-8,5,-5,8,-6,-7,-6,6,-1,8,-2,-5,5,-10,1,-10,-2,-2,5,-3,4,3,2,8,6,3,7,4,5,7,-1,-5,-4,-4,-9,-10,-6,-3,-2,-2,-6,-6,-4,-7,4,4,-2,10,8,-5,-10,-9,7,5,-4,-8,3,-5,6,-5,-7,6,10,7,2,4,-6,8,-9,-1,-3,3,-4,-4,-2,1,-10,1,6,7,-10,10,5,7,5,7,10,-4,10,-7,1,-4,-6,10,-4,2,9,10,-1,10,-9,-2,8,-5,7,3,-9,-8,3,-9,-4,-1,-2,-7,-9,7,-3,-9,8,-9,6,-3,-10,-2,-7,-2,-1,-4,-5,5,9,6,-4,2,8,7,5,9,-8,-10,1,8,6,-4,-4,-7,-3,-2,7,-9,5,-7,5,-8,4,-8,2,6,7,-1,2,-3,-10,-4,-10,1,8,-8,1,-5,-5,-1,-8,-7,10,-7,5,-7,-6,-1,3,-2,10,-1,-5,8,-9,7,8,4,9,10,3,10,-8,6,4,10,5,7,-8,-7,5,-6,-7,3,-4,-1,-8,-8,5,8],[9,3,9,-3,-6,6,6,4,-4,1,-10,7,-5,-6,9,2,-2,-4,-5,-10,7,2,-7,9,5,-1,4,5,-5,2,3,-3,-8,-7,-4,-4,2,6,-6,3,5,-6,-4,-8,10,-4,-3,1,6,4,3,-2,-6,6,-5,3,5,-9,-2,9,-9,6,-9,-3,5,4,-5,-4,-5,5,1,2,-1,4,-9,5,5,-2,-10,-9,2,4,-2,-2,-9,8,9,6,10,1,-5,1,-10,4,10,7,-9,-3,7,7,-4,-8,5,-1,5,6,2,10,10,4,-9,4,-1,-8,-4,-8,2,-9,1,-1,6,6,3,-2,2,-5,-8,-9,-7,9,4,8,-3,-2,-1,-9,-8,-6,5,-6,-3,-5,1,8,-3,-7,-4,2,6,-10,-6,-5,-7,5,-7,6,1,1,-7,10,-5,6,4,7,-3,8,-7,4,-1,4,2,-10,-3,-7,-9,10,-3,-5,8,10,8,-3,-8,9,-7,-1,-4,2,-9,6,5,2,-4,-9,-9,-6,-5,-6,-3,6,7,-9,-6,8,9,3,-2,3,4,-10,9,3,-2,-8,-3,7,10,3,-6,-3,-5,-8,-3,-2,-1,3,-6,-3,-5,-5,5,-8,-5,-3,10,-5,-2,1,-4,-4],[5,4,-4,-2,-9,-7,9,1,6,5,8,2,-3,-7,8,-3,-9,-6,5,3,-5,2,6,7,7,-10,2,-5,7,-3,3,9,2,-6,5,4,-8,3,-8,-7,-2,10,-1,10,-6,6,-10,3,10,10,-7,-5,-9,-10,-1,-1,-4,-9,-7,6,6,5,6,-8,7,4,-10,-10,1,7,-7,-5,1,-7,-6,2,-4,8,6,8,3,9,3,2,9,6,-10,-6,-6,9,-5,-6,9,1,-9,3,3,3,1,-9,-7,-6,-5,-7,-7,-5,-7,-3,4,-6,-5,2,10,3,3,4,7,8,-4,5,3,-4,-10,9,-3,6,3,-7,3,6,1,9,-2,2,-4,-9,-8,7,2,-3,-2,-4,-6,10,10,-9,-6,3,-7,-5,-3,-8,-7,-8,-3,-5,-9,-2,1,-8,7,-6,-6,-4,3,4,4,-6,8,-4,-6,-10,10,-3,3,4,9,-5,-8,-7,-8,8,6,-5,-7,-7,-7,-9,8,-10,3,3,3,-6,6,-3,-8,-8,-2,-9,3,-5,5,-9,-7,-4,-10,-2,-6,5,2,8,-6,4,-1,-10,-1,5,8,10,1,-6,2,8,-4,10,9,-8,4,5,-7,10,-10,5,-10,-5,-1,-6,9,-9],[-4,-1,-8,-2,-4,-10,1,-10,-6,1,2,-9,-9,5,6,10,-4,-7,-1,5,-5,8,-4,9,5,-5,9,1,-8,3,10,-8,-4,5,3,3,-4,5,9,-7,7,-3,-10,4,1,-4,1,-5,6,-2,-1,-8,-6,-4,-1,1,-7,-4,-1,4,6,-2,9,-9,1,-5,-6,9,8,-7,6,-6,-2,-7,9,-4,-9,-9,6,-3,-1,9,-1,-9,4,7,4,3,4,-9,-1,-7,9,-7,5,-2,-8,6,-3,-8,3,-7,9,-2,-1,-5,4,-3,9,10,1,2,6,9,-5,6,-2,-4,4,5,9,-8,-1,7,-2,-4,10,-4,-4,-6,2,6,5,-7,7,6,2,-10,6,3,-6,-3,-2,5,-10,4,10,-5,1,-8,4,4,-8,10,-4,2,-9,8,-1,-9,3,2,5,-10,1,-5,-2,4,-3,-5,-7,-7,-1,-10,-10,-3,4,6,-5,6,-6,3,-9,-9,-9,-9,1,-5,-3,-5,3,5,3,7,-8,4,-5,4,-3,-4,7,-1,9,1,10,-4,5,-10,-1,-6,3,4,6,10,1,6,-9,-8,-4,10,-6,6,-6,-8,7,-9,-4,8,1,1,-4,-9,5,-1,6,-10,-10,4,5,4],[-7,-4,-5,1,10,7,-1,7,6,3,-1,-6,1,6,1,-2,2,9,6,-3,-4,-2,-1,-10,-1,8,-10,-3,-4,1,-1,-4,-6,-2,5,-1,-10,-3,-4,-5,-10,6,-9,2,-10,-1,-3,5,9,4,-5,-2,-9,-3,10,9,2,1,-6,7,6,-8,4,-10,1,7,-8,8,-4,2,10,5,7,-7,10,1,-3,-7,-2,-10,-3,-8,3,-10,-8,10,-4,-2,-2,-7,3,10,-7,-3,-8,-10,9,1,6,1,-4,4,8,10,-6,-4,-5,7,5,-10,2,-1,-10,4,-4,9,-6,7,-10,-5,5,7,8,-3,3,-6,-3,-7,1,-10,8,4,-4,-9,-1,-1,8,8,2,-8,5,10,-3,3,-10,-1,-2,-4,8,-1,10,7,9,-3,-7,6,7,9,4,-3,5,-5,-9,-3,4,7,-5,-3,10,-7,-7,8,-10,-3,9,1,10,-10,4,-9,7,-2,10,1,1,6,3,-1,1,7,10,5,-3,10,-10,4,4,-2,-1,-4,-10,-10,4,-6,-5,-4,-3,6,4,3,-2,-3,-5,1,-5,8,-7,8,2,-8,-9,4,3,-7,-4,3,9,4,-9,10,2,-3,8,2,-7,7,-5,7,-10,7]], dtype = "uint16")#candidate|10796|(14, 240)|const|uint16
call_10795 = relay.TupleGetItem(func_626_call(relay.reshape(const_10796.astype('uint16'), [3360,]), relay.reshape(const_10796.astype('float32'), [14, 16, 15]), ), 2)
call_10797 = relay.TupleGetItem(func_629_call(relay.reshape(const_10796.astype('uint16'), [3360,]), relay.reshape(const_10796.astype('float32'), [14, 16, 15]), ), 2)
output = relay.Tuple([call_10782,call_10789,call_10795,const_10796,])
output2 = relay.Tuple([call_10783,call_10790,call_10797,const_10796,])
func_10814 = relay.Function([], output)
mod['func_10814'] = func_10814
mod = relay.transform.InferType()(mod)
output = func_10814()
func_10815 = relay.Function([], output)
mutated_mod['func_10815'] = func_10815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8024_call = mod.get_global_var('func_8024')
func_8026_call = mutated_mod.get_global_var('func_8026')
call_10824 = func_8024_call()
call_10825 = func_8024_call()
func_4527_call = mod.get_global_var('func_4527')
func_4528_call = mutated_mod.get_global_var('func_4528')
call_10844 = relay.TupleGetItem(func_4527_call(), 0)
call_10845 = relay.TupleGetItem(func_4528_call(), 0)
output = relay.Tuple([call_10824,call_10844,])
output2 = relay.Tuple([call_10825,call_10845,])
func_10852 = relay.Function([], output)
mod['func_10852'] = func_10852
mod = relay.transform.InferType()(mod)
mutated_mod['func_10852'] = func_10852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10852_call = mutated_mod.get_global_var('func_10852')
call_10853 = func_10852_call()
output = call_10853
func_10854 = relay.Function([], output)
mutated_mod['func_10854'] = func_10854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_10890 = relay.TupleGetItem(func_921_call(), 1)
call_10891 = relay.TupleGetItem(func_923_call(), 1)
output = call_10890
output2 = call_10891
func_10892 = relay.Function([], output)
mod['func_10892'] = func_10892
mod = relay.transform.InferType()(mod)
output = func_10892()
func_10893 = relay.Function([], output)
mutated_mod['func_10893'] = func_10893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9470_call = mod.get_global_var('func_9470')
func_9471_call = mutated_mod.get_global_var('func_9471')
call_10903 = func_9470_call()
call_10904 = func_9470_call()
output = relay.Tuple([call_10903,])
output2 = relay.Tuple([call_10904,])
func_10934 = relay.Function([], output)
mod['func_10934'] = func_10934
mod = relay.transform.InferType()(mod)
mutated_mod['func_10934'] = func_10934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10934_call = mutated_mod.get_global_var('func_10934')
call_10935 = func_10934_call()
output = call_10935
func_10936 = relay.Function([], output)
mutated_mod['func_10936'] = func_10936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5165_call = mutated_mod.get_global_var('func_5165')
call_10940 = relay.TupleGetItem(func_5163_call(), 0)
call_10941 = relay.TupleGetItem(func_5165_call(), 0)
uop_10946 = relay.sinh(call_10940.astype('float32')) # shape=(420, 8)
uop_10948 = relay.sinh(call_10941.astype('float32')) # shape=(420, 8)
uop_10961 = relay.atanh(uop_10946.astype('float64')) # shape=(420, 8)
uop_10963 = relay.atanh(uop_10948.astype('float64')) # shape=(420, 8)
bop_10966 = relay.logical_xor(uop_10961.astype('uint64'), relay.reshape(uop_10946.astype('uint64'), relay.shape_of(uop_10961))) # shape=(420, 8)
bop_10969 = relay.logical_xor(uop_10963.astype('uint64'), relay.reshape(uop_10948.astype('uint64'), relay.shape_of(uop_10963))) # shape=(420, 8)
func_4331_call = mod.get_global_var('func_4331')
func_4332_call = mutated_mod.get_global_var('func_4332')
call_10979 = relay.TupleGetItem(func_4331_call(), 0)
call_10980 = relay.TupleGetItem(func_4332_call(), 0)
output = relay.Tuple([bop_10966,call_10979,])
output2 = relay.Tuple([bop_10969,call_10980,])
func_10989 = relay.Function([], output)
mod['func_10989'] = func_10989
mod = relay.transform.InferType()(mod)
output = func_10989()
func_10990 = relay.Function([], output)
mutated_mod['func_10990'] = func_10990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6742_call = mod.get_global_var('func_6742')
func_6744_call = mutated_mod.get_global_var('func_6744')
call_11202 = relay.TupleGetItem(func_6742_call(), 1)
call_11203 = relay.TupleGetItem(func_6744_call(), 1)
output = relay.Tuple([call_11202,])
output2 = relay.Tuple([call_11203,])
func_11219 = relay.Function([], output)
mod['func_11219'] = func_11219
mod = relay.transform.InferType()(mod)
mutated_mod['func_11219'] = func_11219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11219_call = mutated_mod.get_global_var('func_11219')
call_11220 = func_11219_call()
output = call_11220
func_11221 = relay.Function([], output)
mutated_mod['func_11221'] = func_11221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2295_call = mod.get_global_var('func_2295')
func_2297_call = mutated_mod.get_global_var('func_2297')
call_11243 = relay.TupleGetItem(func_2295_call(), 1)
call_11244 = relay.TupleGetItem(func_2297_call(), 1)
func_10852_call = mod.get_global_var('func_10852')
func_10854_call = mutated_mod.get_global_var('func_10854')
call_11276 = relay.TupleGetItem(func_10852_call(), 0)
call_11277 = relay.TupleGetItem(func_10854_call(), 0)
output = relay.Tuple([call_11243,call_11276,])
output2 = relay.Tuple([call_11244,call_11277,])
func_11279 = relay.Function([], output)
mod['func_11279'] = func_11279
mod = relay.transform.InferType()(mod)
output = func_11279()
func_11280 = relay.Function([], output)
mutated_mod['func_11280'] = func_11280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5359_call = mod.get_global_var('func_5359')
func_5360_call = mutated_mod.get_global_var('func_5360')
call_11281 = func_5359_call()
call_11282 = func_5359_call()
output = relay.Tuple([call_11281,])
output2 = relay.Tuple([call_11282,])
func_11291 = relay.Function([], output)
mod['func_11291'] = func_11291
mod = relay.transform.InferType()(mod)
mutated_mod['func_11291'] = func_11291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11291_call = mutated_mod.get_global_var('func_11291')
call_11292 = func_11291_call()
output = call_11292
func_11293 = relay.Function([], output)
mutated_mod['func_11293'] = func_11293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1998_call = mod.get_global_var('func_1998')
func_1999_call = mutated_mod.get_global_var('func_1999')
call_11299 = relay.TupleGetItem(func_1998_call(), 1)
call_11300 = relay.TupleGetItem(func_1999_call(), 1)
output = call_11299
output2 = call_11300
func_11331 = relay.Function([], output)
mod['func_11331'] = func_11331
mod = relay.transform.InferType()(mod)
mutated_mod['func_11331'] = func_11331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11331_call = mutated_mod.get_global_var('func_11331')
call_11332 = func_11331_call()
output = call_11332
func_11333 = relay.Function([], output)
mutated_mod['func_11333'] = func_11333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9493_call = mod.get_global_var('func_9493')
func_9495_call = mutated_mod.get_global_var('func_9495')
call_11462 = relay.TupleGetItem(func_9493_call(), 0)
call_11463 = relay.TupleGetItem(func_9495_call(), 0)
output = relay.Tuple([call_11462,])
output2 = relay.Tuple([call_11463,])
func_11485 = relay.Function([], output)
mod['func_11485'] = func_11485
mod = relay.transform.InferType()(mod)
output = func_11485()
func_11486 = relay.Function([], output)
mutated_mod['func_11486'] = func_11486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6719_call = mod.get_global_var('func_6719')
func_6721_call = mutated_mod.get_global_var('func_6721')
call_11504 = relay.TupleGetItem(func_6719_call(), 0)
call_11505 = relay.TupleGetItem(func_6721_call(), 0)
func_10276_call = mod.get_global_var('func_10276')
func_10277_call = mutated_mod.get_global_var('func_10277')
call_11519 = relay.TupleGetItem(func_10276_call(), 0)
call_11520 = relay.TupleGetItem(func_10277_call(), 0)
func_5924_call = mod.get_global_var('func_5924')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_11533 = func_5924_call()
call_11534 = func_5924_call()
output = relay.Tuple([call_11504,call_11519,call_11533,])
output2 = relay.Tuple([call_11505,call_11520,call_11534,])
func_11547 = relay.Function([], output)
mod['func_11547'] = func_11547
mod = relay.transform.InferType()(mod)
mutated_mod['func_11547'] = func_11547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11547_call = mutated_mod.get_global_var('func_11547')
call_11548 = func_11547_call()
output = call_11548
func_11549 = relay.Function([], output)
mutated_mod['func_11549'] = func_11549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_11561 = relay.TupleGetItem(func_4423_call(), 0)
call_11562 = relay.TupleGetItem(func_4425_call(), 0)
output = relay.Tuple([call_11561,])
output2 = relay.Tuple([call_11562,])
func_11564 = relay.Function([], output)
mod['func_11564'] = func_11564
mod = relay.transform.InferType()(mod)
mutated_mod['func_11564'] = func_11564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11564_call = mutated_mod.get_global_var('func_11564')
call_11565 = func_11564_call()
output = call_11565
func_11566 = relay.Function([], output)
mutated_mod['func_11566'] = func_11566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5533_call = mod.get_global_var('func_5533')
func_5535_call = mutated_mod.get_global_var('func_5535')
call_11633 = relay.TupleGetItem(func_5533_call(), 0)
call_11634 = relay.TupleGetItem(func_5535_call(), 0)
func_4604_call = mod.get_global_var('func_4604')
func_4606_call = mutated_mod.get_global_var('func_4606')
call_11635 = func_4604_call()
call_11636 = func_4604_call()
func_4527_call = mod.get_global_var('func_4527')
func_4528_call = mutated_mod.get_global_var('func_4528')
call_11637 = relay.TupleGetItem(func_4527_call(), 0)
call_11638 = relay.TupleGetItem(func_4528_call(), 0)
var_11646 = relay.var("var_11646", dtype = "bool", shape = (840, 4))#candidate|11646|(840, 4)|var|bool
bop_11647 = relay.less(call_11637.astype('bool'), relay.reshape(var_11646.astype('bool'), relay.shape_of(call_11637))) # shape=(840, 4)
bop_11650 = relay.less(call_11638.astype('bool'), relay.reshape(var_11646.astype('bool'), relay.shape_of(call_11638))) # shape=(840, 4)
output = relay.Tuple([call_11633,call_11635,bop_11647,])
output2 = relay.Tuple([call_11634,call_11636,bop_11650,])
func_11659 = relay.Function([var_11646,], output)
mod['func_11659'] = func_11659
mod = relay.transform.InferType()(mod)
var_11660 = relay.var("var_11660", dtype = "bool", shape = (840, 4))#candidate|11660|(840, 4)|var|bool
output = func_11659(var_11660)
func_11661 = relay.Function([var_11660], output)
mutated_mod['func_11661'] = func_11661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5227_call = mod.get_global_var('func_5227')
func_5228_call = mutated_mod.get_global_var('func_5228')
call_11700 = relay.TupleGetItem(func_5227_call(), 0)
call_11701 = relay.TupleGetItem(func_5228_call(), 0)
uop_11717 = relay.tan(call_11700.astype('float64')) # shape=(10, 15, 9)
uop_11719 = relay.tan(call_11701.astype('float64')) # shape=(10, 15, 9)
uop_11722 = relay.log2(call_11700.astype('float64')) # shape=(10, 15, 9)
uop_11724 = relay.log2(call_11701.astype('float64')) # shape=(10, 15, 9)
bop_11725 = relay.floor_divide(call_11700.astype('float32'), relay.reshape(uop_11722.astype('float32'), relay.shape_of(call_11700))) # shape=(10, 15, 9)
bop_11728 = relay.floor_divide(call_11701.astype('float32'), relay.reshape(uop_11724.astype('float32'), relay.shape_of(call_11701))) # shape=(10, 15, 9)
output = relay.Tuple([uop_11717,bop_11725,])
output2 = relay.Tuple([uop_11719,bop_11728,])
func_11733 = relay.Function([], output)
mod['func_11733'] = func_11733
mod = relay.transform.InferType()(mod)
mutated_mod['func_11733'] = func_11733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11733_call = mutated_mod.get_global_var('func_11733')
call_11734 = func_11733_call()
output = call_11734
func_11735 = relay.Function([], output)
mutated_mod['func_11735'] = func_11735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_11798 = relay.TupleGetItem(func_139_call(), 0)
call_11799 = relay.TupleGetItem(func_140_call(), 0)
func_7827_call = mod.get_global_var('func_7827')
func_7830_call = mutated_mod.get_global_var('func_7830')
const_11825 = relay.const([9,9,-1,-5,1,6,4,-5,-1,6,-9,-4,9,-1,2,-8,3,4,-8,-4,-10,4,-10,-6,-1,6,5,4,-5,-1,-2,1,6,9,2,-4,6,8,-8,-6,5,10,-4,-4,-1,8,-5,9,2,-7,1,-9,-9,2,1,6,-4,6,1,4,6,-5,1,-4,10,-9,3,8,7,3,10,2,8,-1,-9,-2,9,9,1,-2,7,4,1,5,-3,-4,10,8,-5,6,4,-2,-7,-2,6,-1,-5,-6,10,2,2,8,-3,9,-3,-3,-4,1,-8,10,-5,1,-8,6,-10,1,6,3,6,-7,-8,-10,-7,-2,2,-9,2,8,-6,-10,-5,-8,2,8,5,9,-8,-4,7,-10,-7,-7,8,1,-10,-2,-3,5,6,-1,1,-4,8,3,-5,4,1,-5,7,-7,-8,-3,1,-4,3,8,9,4,2,-3,-10,3,8,-2,-3,-1,8,-1,2,-6,5,1,-5,-9,10,-6,-9,-2,6,-2,-3,-1,7,-9,-9,5,8,8,-9,-2,1,1,-10,6,9,6,-3,4,-1,10,-10,6,1,3,2,-10,7,4,-6,-3,10,-8,8,-2,5,-9,-7,4,10,7,-5,7,-10,-9,-5,1,4,8,-9,1,2,-10,-6,8,-2,-9,2,6,1,8,8,9,9,3,10,4,5,-3,-6,8,6,4,-5,9,8,2,-7,7,10,5,-6,-4,-3,-4,9,-9,-1,-2,5,-2,1,8,-5,-5,7,-7,-9,3,-7,2,-9,1,-6,-6,-6,-2,4,-6,-7,6,-1,8,-1,1,-10,-5,6,8,-1,-2,5,-6,6,-6,3,8,4,-3,8,4,-8,6,-5,5,9,4,5,-10,2,-5,-9,-10,-10,-7,-6,6,-2,-8,-7,2,2,7,-6,8,5,4,8,-7,4,9,-9,-1,-7,5,-4,9,2,3,5,5,-7,-3,10,5,8,-3,-9,5,5,-2,-8,5,7,10,-9,1,4,1,6,10,-10,-10,-9,-8,6,3,9,5,-4,-7,10,1,1,-9,-9,-10,4,-9,4,7,-7,3,-6,3,3,-5,7,-8,7,5,6,5,5,3,3,-9,-8,-6,3,6,-9,-1,-6,-7,4,-9,7,-10,-1,-2,-3,-5,-5,7,10,6,-2,-8,-3,3,6,10,7,-8,5,3,4,10,8,-9,-1,-8,9,-3,-2,2,8,3,-5,6,-4,-1,8,8,-9,4,2,-6,9,-5,-6,9,10,3,-7,-7,-1,-9,-10,-5,-6,2,1,8,7,-1,10,-1,1,6,-5,9,3,-3,7,-3,-6,-10,3,7,9,5,7,10,9,6,-10,8,-2,-6,10,1,-6,-5,9,7,9,5,-7,3,-10,-8,3,6,10,6,3,7,10,-6,-1,5,6,-5,-5,-7,-7,-7,-4,6,5,3,1,7,10,-8,-10,-3,3,9,8,2,2,6,2,-7,3,-7,10,4,1,10,-5,8,-3,-5,-5,-6,8,-3,3,-1,4,1,-4,-1,-8,-8,6,-10,-5,9,2,8,-5,-2,5,-5,3,-10,-2,4,5,-3,-10,-9,-8,6,6,-3,7,9,1,10,1,-1,-4,-5,6,8,-10,2,9,-9,-2,-6,-10,-2,1,2,-3,-7,5,3,-9,-9,2,-9,9,-6,10,3,-8,-10,-6,-3,5,-7,-1,4,-5,-8,-4,10,5,-6,7,-7,-4,-6,-9,-1,-10,-5,-1,2,1,5,-9,9,-10,-10,-4,-3,-6,-9,9,-1,10,-9,-6,7,3,5,6,5,-8,-4,-6,1,8,-8,1,6,-7,10,-8,-3,8,2,-9,-9,-3,-3,10,10,-5,-4,10,-6,5,-10,-5,-1,-8,-9,9,8,-3,-1,-5,10,9,-6,2,-6,10,-9,9,-9,4,-8,8,-6,-6,-3,-6,-3,-4,4,1,-4,-3,5,2,1,-4,8,-4,4,-9,-3,9,-2,4,-1,-3,5,6,10,-6,4,1,-3,-8,4,-3,4,2,-6,-9,9,-2,10,6,5,-4,-1,3,-9,-2,-8,-10,8,-8,8,1,-1,-4,8,4,2,-6,-2,-9,-10,6,10,2,-9,2,10,-7,-6,-6,2,10,10,9,7,-3,-2,6,-6,-10,1,-2,-5,5,-3,6,1,-1,3,2,-9,8,-5,-3,-5,6,5,8,-9,1,-2,-9,-6,5,-10,9,4,-3,2,-8,9,2,3,3,-10,4,-5,8,-3,1,8,5,9,-10,1,9,-3,-3,-10,-8,5,4,-7,1,5,-3,4,-6,-5,-6,-6,6,4,6,8,-6,-6,-2,5,2,5,-3,-5,-2,5,7,-10,1,-4,2,2,6,-10,-10,-4,-5,10,-8,8,5,7,-7,7,-5,-6,7,-4,-6,3,-1,2,6,5,7,5,9,6,-2,-3,-7,3,6,9,4,-10,1,-3,4,-10,-1,4,8,5,6,7,6,-7,9,-4,10,-10,-6,7,-10,10,3,-3,-8,10,-4,-5,-7,5,-10,3,-3,-8,-7,-10,1,10,5,-4,-2,7,1,10,-6,-6,-2,-4,-3,5,-7,-8,-4,-2,-4,4,-1,5,2,-2,8,5,-8,-6,-1,-2,7,-7,-10,2,7,1,-6,2,10,8,-5,-10,2,-5,-9,1,8,-7,-9,2,8,4,2,3,3,1,-4,10,-7,9,1,-1,10,-7,10,4,7,-3,-5,10,-8,3,-4,-10,-7,6,-10,9,9,-8,-9,7,10,4,6,3,-9,-8,1,-3,-8,8,-7,8,7,5,6,-4,9,2,-4,-1,-3,-5,8,5,-6,-4,2,-9,7,4,3,10,8,1,-8,6,-3,8,-6,9,-5,-4,-4,5,6,-7,-1,-3,10,10,6,3,-6,1,5,-3,5,-7,-10,-2,-6,-7,5,-6,4,3,4,1,9,4,-4,-2,4,-7,6,3,8,10,10,6,-6,7,-7,1,-2,9,2,6,3,-2,-3,-4,7,-2,-4,2,-1,1,7,3,-9,-7,4,-8,-7,9,-7,10,-6,10,5,9,1,4,-6,-9,-9,-7,-10,-3,7,-8,2,-10,-2,-10,2,-1,-3,-3,3,-3,8,7,-7,6,2,-10,-2,5,-3,-1,8,10,-8,-10,4,-3,-5,2,-1,-8,4,7,10,-10,-9,-10,4,8,-4,2,2,-2,-6,-1,-5,-9,-8,-5,-10,-5,-7,-8,6,4,2,10,1,-3,8,-3,-4,2,-9,-4,3,10,4,-4,1,2,3,-1,6,1,-9,-5,-7,7,-5,6,10,-9,-3,-7,-8,-10,-3,-5,-7,10,-1,9,5,3,-8,-7,7,7,6,4,4,-7,7,5,10,-9,4,8,-5,9,-2,-6,-2,-8,-6,4,-8,-7,3,-8,9,4,5,-3,7,-8,8,-7,-6,9,-7,1,4,-10,-10,-1,-4,-4,-9,3,-1,-4,-4,1,7,-1,-5,-10,10,7,6,1,-3,1,4,-7,-5,-3,-3,1,4,-4,6,-5,2,10,-10,-10,-8,6,-6,-4,-5,4,-9,7,8,-10,5,-5,-9,-9,-8,1,-1,-5,-9,10,7,-1,-8,10,2,-2,-7,-8,-4,7,-7,5,7,-4,2,-10,7,-5,-4,1,-5,6,2,2,10,-5,8,-4,-1,-1,4,1,-5,-6,-9,6,2,8,6,9,9,-5,-5,2,-9,10,-4,-5,-5,-1,-8,10,9,-3,10,-2,-7,6,8,-7,-10,-2,-7,-7,-10,7,-3,9,7,-8,-5,5,-1,-3,8,-8,8,-5,9,-7,10,8,-1,7,10,-6,-10,-8,-2,10,4,10,-9,6,9,-8,7,4,4,7,-9,-8,4,7,-8,5,4,3,2,-3,3,2,7,2,-7,5,4,4,9,3,8,-9,-5,8,-4,-2,2,8,10,-3,1,-3,-1,-2,-8,-10,-2,1,-3,-7,-1,3,3,-5,3,9,5,-8,9,-1,-2,-3,1,-4,-2,3,-1,7,10,-6,9,7,-5,4,-5,-1,5,-3,-6,5,9,-3,6,4,-1,9,6,-6,10,-5,5,2,-9,-8,-4,-7,1,-5,8,-3,10,1,-7,-6,-8,-2,8,3,-2,4,-4,-1,9,-1,7,-7,7,4,-6,-3,-3,7,10,1,-1,-8,-6,-1,6,5,8,-10,-2,9,5,4,6,1,1,9,-7,-6,-7,9,1,-7,-5,-3,3,7,-3,-8,-10,6,3,3,2,4,-8,-3,8,-7,-8,2,-4,3,-7,8,-2,-1,10,6,3,3,6,10,7,6,10,9,6,5,5,-3,10,1,-9,-3,-8,6,2,7,-5,-7,1,-1,9,2,-9,-8,-2,10,7,-4,10,10,-5,-1,10,-5,3,-9,4,-4,-10,-4,5,-2,5,-9,5,7,4,10,6,-6,3,-1,9,-2,2,-1,-7,-9,-10,-7,8,5,-2,8,2,6,9,2,5,-7,7,-3,-1,-9,1,-6,-2,10,7,1,-2,-3,-4,-7,1,5,-1,4,-1,5,-1,-10,3,4,-10,7,1,2,-9,4,4,7,8,-7,6,-10,2,-9,-1,-5,9,-2,-6,-4,3,4,-7,-3,4,-3,-2,7,-10,1,1,-2,-7,-9,-9,5,-2,1,10,4,6,6,8,-3,2,-2,7,-3,8,-7,-6,-9,3,-8,6,1,-9,9,10,8,6,-5,3,9,-10,6,-3,4,9,-3,6,-6,-8,-4,8,10,-3,-9,3,-8,6,-8,-1,7,6,4,1,-7,-6,9,5,8,-4,-4,4,-1,6,-9,4,8,5,2,-3,-7,1,2,5,6,4,-8,4,9,1,-10,6,-6,1,7,10,4,9,-1,-6,4,9,-10,-3,4,9,-10,-1,5,8,-7,-5,-2,-6,9,-10,-2,4,1,-1,1,10,-4,-10,2,-1,8,9,-2,-5,-5,-3,3,6,-5,10,6,1,-10,9,1,-2,-7,1,7,10,10,-8,-1,8,3,3,-7,-1,5,2,9,-7,6,-8,3,-7,-1,5,-1,-9,-10,-8,-7,5,-7,2,-2,4,6,-10,-2,-3,4,-5,10,3,-6,-8,-8,-9,-1,-2,-9,-10,10,7,9,-5,7,-9,-3,10,1,-6,-2,-3,7,5,-2,2,-6,-6,-8,-9,-10,-5,-1,6,-2,1,9,-4,-1,-2,-5,7,-3,10,1,-10,10,-5,10,-2,-2,-4,-9,7,9,-3,6,-8,2,-2,-7,-5,8,7,9,-8,-4,-4,-3,3,2,6,7,-9,-2,-3,5,-4,-7,-3,-10,-1,-5,9,10,10,9,2,-2,8,-3,-2,10,3,9,-6,-9,5,-4,2,6,5,-9,-3,7,-4,-2,-9,4,-2,8,-2,-6,10,1,3,-5,-5,7,-7,9,5,10,6,5,-7,-7,-9,7,-3,1,-6,-8,1,8,10,-7,-1,-8,-1,6,-6,-8,-5,2,3,-6,8,-9,9,-4,5,5,-10,-6,4,10,4,-4,-3,7,-8,7,6,4,3,6,3,7,-4,6,-4,9,6,-5,8,7,4,3,-9,-9,6,4,7,-3,-4,-1,7,6,-1,-2,-2,6,-4,10,-7,8,6,-5,5,4,-6,8,4,7,-5,-4,-10,7,-1,-7,-7,4,-9,6,6,1,-6,-7,3,6,3,-6,-2,6,1,-4,8,-10,4,9,6,1,-1,2,2,-5,-8,9,6,-5,-9,-5,-4,2,-1,-7,-2,-8,-7,-10,-8,6,-6,10,-10,-10,4,4,10,-8,-8,9,3,7,-10,1,-2,6,1,1,-10,10,6,-6,1,-7,-8,3,4,5,8,3,-2,9,6,-7,-1,-2,1,3,-1,3,9,-3,5,-8,-4,3,2,3,4,-4,-7,3,-6,9,1,9,9,4,1,-9,4,3,5,-4,6,-5,-6,-10,-7,2,-3,7,-4,-8,-2,10,-10,-10,10,4,-1,8,7,2,9,1,4,5,-6,2,9,-4,8,-4,9,6,-6,9,-4,-9,-6,4,8,-9,2,4,5,10,1,2,1,10,-2,-5,2,9,4,-10,-3,-9,-2,6,-1,1,-2,2,10,-3,4,1,1,6,3,10,-6,-1,-1,4,-5,4,9,-1,1,-3,3,3,-4,-3,-4,3,1,-6,10,4,6,-3,5,6,-9,3,5,-9,-2,5,5,-5,9,9,-5,5,3,8,1,6,-3,3,2,6,-6,1,7,8,-9,-5,1,6,5,4,8,-7,8,8,4,5,2,-1,-3,-5,9,-9,-10,-6,10,5,9,-10,4,8,-1,9,-10,4,-1,-8,-1,-3,-1,-9,9,1,-6,5,-7,7,8,3,6,3,-10,-10,-7,3,-9,1,8,6,-10,-3,7,-7,6,5,1,1,-9,2,1,-8,-10,10,10,2,-10,1,5,-2,-1,-4,5,2,4,1,-1,-10,7,-1,-8,9,7,5,9,4,-6,-10,2,6,8,-5,-6,10,-5,-2,-3,10,2,-2,7,-3,-4,4,7,-4,-9,1,-4,-3,-9,1,-8,2,8,-3,1,8,8,-3,-5,-9,-6,2,-1,-6,-9,-4,9,9,1,-4,9,-10,-7,-4,-10,7,-3,-3,-5,5,-7,3,7,3,5,10,1,-10,5,-9,7,8,-6,-4,-1,6,-10,-1,-2,-4,-4,-10,-6,-3,4,-3,-7,-3,-3,5,8,9,-2,-4,9,-1,4,-7,-2,1,-2,9,9,-4,8,4,5,-5,-8,-1,-7,-9,4,3,-4,-9,1,8,9,2,-3,5,-2,7,9,6,-10,9,10,-7,-6,-3,-6,9,-2,7,7,-5,2,10,10,9,10,-4,-2,7,9,9,8,5,6,5,-3,2,-2,9,8,-2,10,1,6,3,5,-3,9,4,1,9,-2,1,5,6,2,4,-3,-5,2,-6,-10,-3,-8,-4,-6,3,6,-2,6,6,7,1,6,10,-5,-6,-7,6,6,6,-5,-2,5,-3,3,10,-9,1,-6,-3,7,-8,10,2,3,10,7,2,5,2,3,7,2,7,-6,8,2,8,9,-8,7,4,-9,3,-10,-1,8,6,5,-7,4,6,3,-7,-5,-7,-6,-6,5,-8,-6,-9,6,-4,1,-4,7,2,-6,-2,-8,5,8,-7,-1,-10,-4,1,6,-3,-7,3,-6,3,4,7,4,3,1,7,-7,-1,7,10,-9,10,9,1,-8,1,10,3,-10,-4,-8,-5,7,5,9,-7,10,6,3,-9,2,3,8,3,-2,-10,-9,7,-2,2,-10,4,8,-1,7,-2,-2,10,10,-9,-4,7,6,1,-4,1,-4,6,-5,7,-9,-1,-3,-2,-6,-9,9,-4,-8,5,10,8,1,9,2,-7,4,-1,-1,-2,-3,-5,-5,-9,4,6,10,-9,9,6,-4,2,3,5,-4,8,7,10,-4,6,-3,-3,8,3,-2,9,-3,3,2,-7,8,6,1,-9,6,-3,10,1,10,7,4,9,5,-3,-4,7,-8,-7,-10,-3,4,5,-4,3,-4,-7,4,-6,-9,-8,-1,-3,8,5,-8,4,4,5,-8,3,9,-10,5,-4,7,5,8,5,10,4,10,-10,-7,-4,5,7,-7,-9,-5,5,8,1,2,2,8,9,-5,-2,-4,-9,4,-3,5,3,8,3,2,1,-10,5,8,7,5,-6,-8,9,3,2,7,-9,3,-8,7,-8,-2,-6,1,4,3,-6,-6,-4,9,6,-1,-9,-8,1,6,-2,-2,-1,-2,-8,4,5,-9,9,-4,3,10,2,-1,-1,2,-7,2,9,2,8,-1,8,-3,-7,-1,-4,2,-9,7,-10,-5,-3,-5,-2,10,-3,-4,-3,7,6,2,-9,6,-7,-1,-3,-6,-5,9,-7,9,1,10,-4,4,7,10,10,7,10,-8,4,9,4,1,10,3,5,5,-4,-1,-7,-6,-8,8,-1,-1,10,-8,-2,10,-9,3,-8,-5,-9,3,7,5,-2,-5,9,10,8,6,7,1,-8,-1,-3,1,5,10,-3,9,-9,-10,2,10,8,-1,-3,-2,-7,1,1,3,-4,-10,-9,-2,-7,9,-2,9,-6,-6,5,1,-1,3,2,2,1,3,-2,2,-7,9,9,-1,10,-5,-5,6,-1,-2,5,1,5,-9,8,6,-10,5,5,-6,3,-10,10,-6,7,3,9,9,7,1,-9,1,2,-1,-1,-3,-10,5,-1,8,9,1,5,-4,-7,-8,-1,-6,-4,-1,-3,1,9,3,7,1,7,5,-9,-4,3,-3,-10,9,-7,9,9,5,-6,-2,-2,-10,-3,10,-6,-10,-6,-3,-5,10,-7,2,-9,-3,-5,-1,-8,-5,7,-4,-10,4,-1,-4,-1,6,3,3,-3,10,-3,-7,1,-9,7,-3,-10,-7,-4,-5,5,-5,9,4,-6,4,-3,-8,10,5,3,-6,-7,-1,-4,-7,10,-9,2,5,-8,-5,7,-5,3,6,-10,-6,-5,-9,5,-10,-8,6,-4,7,-7,1,6,-10,-10,4,9,6,-6,5,-10,8,5,7,-4,-9,7,-4,-10,3,-3,9,-6,7,9,-7,4,7,9,9,10,-4,-2,3,7,1,4,3,4,-6,-10,1,8,5,6,1,-4,7,5,7,6,3,5,-2,6,3,10,-1,-6,6,-4,9,3,-5,4,10,9,3,-9,-4,-4,-10,1,-3,-2,8,-7,4,-3,-8,-1,8,-4,-6,6,6,7,4,-9,-6,9,7,-2,-6,1,1,-4,2,10,1,-9,5,4,5,-10,4,-6,-7,-3,-1,-9,-6,1,-3,7,-6,10,2,3,-7,8,-4,2,1,6,-10,6,10,-6,-6,-6,9,4,-9,-9,-3,6,1,9,-3,-6,2,9,-9,6,7,-8,7,10,-10,-10,7,-10,-6,-10], dtype = "uint16")#candidate|11825|(3360,)|const|uint16
call_11824 = relay.TupleGetItem(func_7827_call(relay.reshape(const_11825.astype('uint16'), [3360,])), 3)
call_11826 = relay.TupleGetItem(func_7830_call(relay.reshape(const_11825.astype('uint16'), [3360,])), 3)
output = relay.Tuple([call_11798,call_11824,const_11825,])
output2 = relay.Tuple([call_11799,call_11826,const_11825,])
func_11856 = relay.Function([], output)
mod['func_11856'] = func_11856
mod = relay.transform.InferType()(mod)
output = func_11856()
func_11857 = relay.Function([], output)
mutated_mod['func_11857'] = func_11857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7604_call = mod.get_global_var('func_7604')
func_7606_call = mutated_mod.get_global_var('func_7606')
call_11892 = func_7604_call()
call_11893 = func_7604_call()
output = call_11892
output2 = call_11893
func_11895 = relay.Function([], output)
mod['func_11895'] = func_11895
mod = relay.transform.InferType()(mod)
output = func_11895()
func_11896 = relay.Function([], output)
mutated_mod['func_11896'] = func_11896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_139_call = mod.get_global_var('func_139')
func_140_call = mutated_mod.get_global_var('func_140')
call_11934 = relay.TupleGetItem(func_139_call(), 0)
call_11935 = relay.TupleGetItem(func_140_call(), 0)
output = call_11934
output2 = call_11935
func_11938 = relay.Function([], output)
mod['func_11938'] = func_11938
mod = relay.transform.InferType()(mod)
output = func_11938()
func_11939 = relay.Function([], output)
mutated_mod['func_11939'] = func_11939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10892_call = mod.get_global_var('func_10892')
func_10893_call = mutated_mod.get_global_var('func_10893')
call_12005 = func_10892_call()
call_12006 = func_10892_call()
func_6010_call = mod.get_global_var('func_6010')
func_6012_call = mutated_mod.get_global_var('func_6012')
call_12020 = relay.TupleGetItem(func_6010_call(), 1)
call_12021 = relay.TupleGetItem(func_6012_call(), 1)
func_6742_call = mod.get_global_var('func_6742')
func_6744_call = mutated_mod.get_global_var('func_6744')
call_12028 = relay.TupleGetItem(func_6742_call(), 1)
call_12029 = relay.TupleGetItem(func_6744_call(), 1)
func_9420_call = mod.get_global_var('func_9420')
func_9422_call = mutated_mod.get_global_var('func_9422')
call_12033 = relay.TupleGetItem(func_9420_call(), 0)
call_12034 = relay.TupleGetItem(func_9422_call(), 0)
func_10662_call = mod.get_global_var('func_10662')
func_10664_call = mutated_mod.get_global_var('func_10664')
call_12037 = relay.TupleGetItem(func_10662_call(), 0)
call_12038 = relay.TupleGetItem(func_10664_call(), 0)
func_6451_call = mod.get_global_var('func_6451')
func_6453_call = mutated_mod.get_global_var('func_6453')
call_12057 = relay.TupleGetItem(func_6451_call(), 2)
call_12058 = relay.TupleGetItem(func_6453_call(), 2)
output = relay.Tuple([call_12005,call_12020,call_12028,call_12033,call_12037,call_12057,])
output2 = relay.Tuple([call_12006,call_12021,call_12029,call_12034,call_12038,call_12058,])
func_12060 = relay.Function([], output)
mod['func_12060'] = func_12060
mod = relay.transform.InferType()(mod)
mutated_mod['func_12060'] = func_12060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12060_call = mutated_mod.get_global_var('func_12060')
call_12061 = func_12060_call()
output = call_12061
func_12062 = relay.Function([], output)
mutated_mod['func_12062'] = func_12062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5893_call = mod.get_global_var('func_5893')
func_5895_call = mutated_mod.get_global_var('func_5895')
call_12066 = relay.TupleGetItem(func_5893_call(), 1)
call_12067 = relay.TupleGetItem(func_5895_call(), 1)
output = relay.Tuple([call_12066,])
output2 = relay.Tuple([call_12067,])
func_12069 = relay.Function([], output)
mod['func_12069'] = func_12069
mod = relay.transform.InferType()(mod)
output = func_12069()
func_12070 = relay.Function([], output)
mutated_mod['func_12070'] = func_12070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1998_call = mod.get_global_var('func_1998')
func_1999_call = mutated_mod.get_global_var('func_1999')
call_12077 = relay.TupleGetItem(func_1998_call(), 0)
call_12078 = relay.TupleGetItem(func_1999_call(), 0)
func_8463_call = mod.get_global_var('func_8463')
func_8464_call = mutated_mod.get_global_var('func_8464')
call_12079 = relay.TupleGetItem(func_8463_call(), 0)
call_12080 = relay.TupleGetItem(func_8464_call(), 0)
func_8360_call = mod.get_global_var('func_8360')
func_8361_call = mutated_mod.get_global_var('func_8361')
call_12089 = relay.TupleGetItem(func_8360_call(), 0)
call_12090 = relay.TupleGetItem(func_8361_call(), 0)
func_4058_call = mod.get_global_var('func_4058')
func_4060_call = mutated_mod.get_global_var('func_4060')
call_12119 = relay.TupleGetItem(func_4058_call(), 3)
call_12120 = relay.TupleGetItem(func_4060_call(), 3)
output = relay.Tuple([call_12077,call_12079,call_12089,call_12119,])
output2 = relay.Tuple([call_12078,call_12080,call_12090,call_12120,])
func_12125 = relay.Function([], output)
mod['func_12125'] = func_12125
mod = relay.transform.InferType()(mod)
output = func_12125()
func_12126 = relay.Function([], output)
mutated_mod['func_12126'] = func_12126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7687_call = mod.get_global_var('func_7687')
func_7689_call = mutated_mod.get_global_var('func_7689')
call_12151 = relay.TupleGetItem(func_7687_call(), 1)
call_12152 = relay.TupleGetItem(func_7689_call(), 1)
uop_12154 = relay.exp(call_12151.astype('float32')) # shape=(840, 4)
uop_12156 = relay.exp(call_12152.astype('float32')) # shape=(840, 4)
bop_12160 = relay.subtract(uop_12154.astype('float32'), relay.reshape(call_12151.astype('float32'), relay.shape_of(uop_12154))) # shape=(840, 4)
bop_12163 = relay.subtract(uop_12156.astype('float32'), relay.reshape(call_12152.astype('float32'), relay.shape_of(uop_12156))) # shape=(840, 4)
output = relay.Tuple([bop_12160,])
output2 = relay.Tuple([bop_12163,])
func_12165 = relay.Function([], output)
mod['func_12165'] = func_12165
mod = relay.transform.InferType()(mod)
output = func_12165()
func_12166 = relay.Function([], output)
mutated_mod['func_12166'] = func_12166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6426_call = mod.get_global_var('func_6426')
func_6428_call = mutated_mod.get_global_var('func_6428')
call_12186 = relay.TupleGetItem(func_6426_call(), 0)
call_12187 = relay.TupleGetItem(func_6428_call(), 0)
output = call_12186
output2 = call_12187
func_12209 = relay.Function([], output)
mod['func_12209'] = func_12209
mod = relay.transform.InferType()(mod)
output = func_12209()
func_12210 = relay.Function([], output)
mutated_mod['func_12210'] = func_12210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10409_call = mod.get_global_var('func_10409')
func_10411_call = mutated_mod.get_global_var('func_10411')
call_12231 = func_10409_call()
call_12232 = func_10409_call()
func_1150_call = mod.get_global_var('func_1150')
func_1153_call = mutated_mod.get_global_var('func_1153')
const_12248 = relay.const([6,-8,-3,-7,1,-2,10,-6,7,-4,-7,-1,8,5,7,-9,-6,-6,-1,-5,2,-3,9,3,-3,8,-3,9,10,-7,6,2,5,2,-10,10,6,-6,-3,10,10,-8,-6,-4,-2,3,-1,9,-2,3,8,6,7,9,-3,-7,-9,-5,1,3,-4,-1,-1,10,3,-7,-7,5,3,3,4,-8,-7,10,-2,-3,-9,-1,7,6,-5,9,6,-5,9,-6,1,6,6,-6,-8,7,5,8,9,10,-8,7,4,-2,3,-7,-1,2,8,-8,-9,4,2,6,7,-7,-6,9,-10,4,-1,8,6,1,-2,-10,3,4,7,1,5,-1,4,-10,4,-8,5,-7,7,-4,-7,9,2,9,5,-5,8,9,9,6,3,8,-1,-10,-3,7,-1,-3,-4,-2,10,7,-5,-2,6,-8,4,-9,-1,3,-3,7,1,-9,-2,-1,-10,2,5,-10,2,3,3,10,1,9,6,-10,-4,9,9,8,-8,-5,-4,5,-2,-3,10,-9,7,-7,-2,7,3,1,5,1,2,6,10,4,-10,7,8,-1,5,-7,4,-4,1,-8,9,-10,5,6,5,-7,7,-5,1,-10,-3,-5,3,5,-7,8,4,4,4,-5,10,-6,-8,-1,-8,-5,-10,-9,10,-4,-6,-10,2,10,-5,-5,-6,3,-1,-3,9,-9,8,9,9,-6,8,5,-3,-4,-7,5,-9,7,7,6,-8,3,2,-8,7,-7,-2,-5,-7,-1,-7,8,-9,3,-7,-1,7,-2,8,-1,4,10,-2,8,3,2,10,-5,8,-6,-8,-9,3,-3,1,-5,-3,2,-1,3,-2,3,8,2,7,-1,4,-1,1,-7,-9,-9,1,-10,-2,6,9,-7,-9,-4,-6,3,-5,9,8,8,10,10,9,-6,4,-4,-3,-1,-9,-1,2,-6,-6,-2,-1,-2,10,-4,3,-9,-2,-9,5,9,8,8,6,6,-9,8,1,-10,-3,9,4,4,-10,-3,6,-8,4,4,-1,1,9,9,1,-2,-6,2,-8,8,-3,4,4,4,9,9,-6,-10,-2,-6,10,7,8,8,10,-3,-6,2,8,-10,-2,7,-1,-7,-5,6,-1,-1,-4,5,2,9,-7,-10,7,-2,-8,8,-5,2,10,-3,-1,-1,3,3,8,-7,-2,-9,-6,-7,1,4,2,6,-6,-4,5,-3,3,-6,-7,3,-8,8,7,-10,3,-4,2,9,-9,4,-10,2,5,2,1,-1,2,-4,-7,7,6,6,-1,5,-2,4,6,-3,4,-2,5,-5,-5,3,-1,1,-10,-7,-6,3,-9,-7,-2,5,10,-4,-3,9,6,-9,10,6,6,3,6,-9,-2,2,-9,-4,4,-1,5,-6,-1,9,2,-5,1,-2,3,-3,-8,-3,-2,7,4,-7,-9,3,-6,3,-10,-8,-6,9,4,6,-9,-2,-5,8,-6,-10,6,4,6,1,4,8,-2,9,10,-9,-4,1,7,-9,-4,9,-2,3,-8,3,-6,2,-9,5,8,-10,6,-2,-1,-7,1,9,8,-1,-8,10,7,-5,5,-8,5,-5,-1,5,9,-9,7,6,-1,2,5,-5,-4,-1,-2,9,-8,8,1,-3,5,-5,-1,-8,9,-4,-9,-9,9,1,-8,9,-7,7,-2,10,-4,2,5,-8,7,9,10,1,7,-3,4,-2,2,-9,-2,4,4,-1,-3,5,10,-7,3,2,-10,6,-8,5,10,4,2,5,-1,9,7,5,-10,-10,10,3,-8,4,-9,-5,2,10,5,-4,-4,-2,6,8,2,9,3,-2,2,8,6,10,-3,5,-6,6,-3,10,-10,7,8,3,-7,4,-2,3,-6,-9,-1,-6,-7,-6,-5,-10,-5,-4,-3,4,-2,1,1,-6,-7,3,-1,-9,-3,9,-1,2,7,1,-5,-2,-3,4,9,10,-5,7,4,-6,-9,7,-3,-8,-7,10,3,-2,5,10,-6,-1,3,-8,-2,-6,-9,-2,1,3,-6,1,-5,6,9,-5,8,7,-3,-10,9,-7,8,1,9,9,-8,-5,-5,4,-10,-10,-6,4,2,-4,2,1,3,9,-5,7,9,6,-6,-10,9,5,-7,-5,-4,1,-4,-6,-4,7,3,3,-8,8,9,-10,-7,4,-5,4,1,3,-8,2,-4,-9,3,-1,-1,4,-6,-8,9,-9,-2,2,-8,1,-6,8,-2,-8,-1,5,-7,-1,3,-10,-3,7,-3,1,7,-9,-4,4,-6,-10,-1,-10,-8,-5,-2,5,3,-1,4,8,-3,-6,-6,5,-3,10,4,4,4,-4,2,10,-3,2,2,-9,-8,3,5,5,-5,-2,8,-2,3,7,-3,-3,-7,-4,-8,5,9,-10,-8,-10,2,3,-8,-10,-10,10,-5,2,1,-2,-10,-3,-5,-1,7,-7,5,-9,-6,8,8,-9,-3,5,-6,1,4,-5,8,-5,9,-6,-3,-1,-3,-6,7,4,-8,-3,7,-10,-1,-3,1,4,9,6,4,-2,-6,-8,6,4,4,-8,-3,-4,-5,1,-3,8,6,4,3,7,-6,6,-8,8,10,-2,6,5,-3,1,-5,9,-5,1,1,-1,2,1,-10,1,6,-10,9,8,-6,-9,-8,-2,1,2,1,1,3,-3,-2,10,6,-2,7,-7,9,-4,4,9,-7,-7,4,-2,-9,-9,-9,-1,-1,2,-5,3,-6,-10,-10,4,-9,8,9,2,4,9,8,-8,4,-9,8,-4,6,3,-2,7,-7,7,-4,-4,-10,-2,6,7,10,1,-7,-2,-9,-3,3,-6,-5,-8,4,9,-8,2,3,-4,-7,-10,-9,9,9,-1,-2,-5,-2,7,-7,-9,7,9,-1,2,-9,10,7,8,-1,-10,-7,-9,-8,-4,1,1,3,8,6,-9,4,-3,-1,7,-9,5,2,5,-10,-8,-10,-3,-1,-6,2,-2,-9,7,7,1,1,-3,2,4,7,-7,2,-10,10,10,5,8,8,-3,-9,2,-2,4,1,8,-3,4,4,6,4,-5,9,-1,9,3,-8,-8,8,-6,4,-8,8,10,-8,7,-6,10,-6,-4,7,-10,2,5,4,10,5,6,-2,9,-7,-3,-9,-8,-8,-9,-10,9,-1,-2,8,-4,2,10,10,-7,6,-10,6,9,10,6,8,-2,2,3,-7,-4,-1,-6,-4,8,4,-6,-7,2,-2,7,-8,9,2,1,-3,2,-1,-4,1,6,1,-4,6,6,-8,10,-4,5,4,-7,3,10,-8,-3,-10,2,1,-2,4,7,-2,8,-7,-4,-1,8,2,1,4,-7,-3,6,9,-10,-7,-6,3,5,-9,1,-1,7,6,-1,2,-7,-1,8,2,-4,5,7,4,-6,-10,6,-5,-5,2,3,8,-8,4,8,4,-4,1,-6,3,1,-10,-7,9,8,-9,-7,3,-3,-3,-5,-4,5,2,10,5,1,8,2,1,1,3,7,5,-4,-3,-5,-10,2,-4,-9,6,4,-9,3,6,-2,-2,-6,-8,-5,-1,-8,1,-3,2,5,2,-2,-6,3,-9,-3,-1,-9,-9,-10,3,1,7,10,-6,7,-4,10,-2,-4,-7,3,3,-7,-4,-3,4,-2,8,10,7,-5,-6,3,-8,-10,-1,3,3,-8,-8,6,5,-2,-2,-10,-2,9,9,-6,8,-2,-7,5,-6,8,4,-3,-2,5,-9,-2,-9,9,-5,-5,-8,-2,-3,-6,-1,-10,-8,5,9,-3,-4,-1,10,-9,4,-9,-2,-9,9,-1,-10,7,-5,8,-2,-6,10,7,9,6,-3,-8,-10,-9,2,1,-2,-10,1,-3,-10,7,-6,1,-4,9,-6,2,3,4,3,9,-4,-2,-6,-7,-4,8,3,-7,8,4,-4,7,8,-3,9,-6,-1,-7,5,-5,10,-1,3,-8,4,5,10,5,5,9,-2,-6,-3,-1,-7,-9,2,-10,8,7,1,1,-6,-9,6,7,-3,2,6,-4,10,1,-3,-6,-8,4,7,-1,4,5,8,-10,3,-4,-5,-5,4,-8,7,-8,9,6,-7,-8,-7,-1,-5,3,-2,8,-7,-4,-10,-8,6,-4,7,-10,7,5,3,8,-6,-5,-9,-6,5,-9,-10,-2,4,1,5,6,-1,7,-7,-9,7,-3,-6,-7,1,-8,5,-9,-7,8,4,-8,-7,1,2,-8,6,7,4,-7,-2,-6,-6,-5,7,-8,9,8,-1,-1,10,3,-3,-8,-6,10,9,-4,2,9,-5,10,3,10,-8,-8,-10,-2,5,2,6,-1,9,-3,7,8,-9,5,-8,-7,-8,5,-9,-3,-1,-6,-8,-4,-2,-5,9,10,6,1,2,2,-6,-10,-6,-9,-9,-3,-4,1,4,-5,-3,-2,-10,-5,-2,2,4,4,6,-6,-10,1,8,10,-2,-6,9,4,-2,2,3,-5,-6,8,4,-7,5,-8,2,8,4,8,3,-5,-10,2,-10,2,-5,8,-6,-4,6,5,-2,3,6,-3,3,5,-4,-7,-1,-10,9,4,6,-6,9,-2,4,-9,5,9,-10,1,9,-6,-7,7,-6,-3,10,-5,-3,-2,-10,-7,-2,5,1,6,6,-2,-8,-10,3,-5,5,2,6,-4,4,1,8,-10,4,2,-7,4,5,-10,-9,3,-6,1,8,6,7,-10,5,-5,-5,10,3,-5,-10,-9,9,-3,7,-7,-1,7,-10,4,-8,-8,-8,-2,6,9,2,5,10,-8,-3,-1,8,2,-6,7,7,-4,-6,6,-6,8,-5,-1,10,-9,6,7,8,2,-6,-8,4,10,10,4,10,-4,-2,9,6,-4,10,6,1,-3,-7,-1,-5,-3,-6,-3,-6,3,-1,1,-10,2,8,-7,-6,-7,-3,5,9,7,4,4,-4,-1,9,6,9,-9,-4,6,-9,2,-9,-2,-5,-4,8,1,4,8,-4,-3,2,9,-2,-7,-6,-5,-8,-5,-7,-3,8,-6,8,6,-10,-4,-2,-8,8,3,4,10,6,-4,6,-7,-3,-5,-9,-4,9,-1,1,-3,-5,-2,6,-3,-9,7,-6,8,-7,2,-5,5,4,-4,5,5,-6,1,3,6,10,-5,-8,-8,9,3,6,-7,5,-9,-9,-10,-3,6,-4,-8,-6,3,-8,-8,-10,-1,10,1,9,4,6,2,-7,-5,-1,-5,8,10,10,-4,-1,-9,5,4,1,4,6,-7,6,-3,-7,-3,-8,-10,1,1,9,2,-1,9,-8,9,1,-6,8,-4,-2,7,-2,-10,-10,-6,10,-4,6,-3,6,-8,-6,4,6,8,-6,9,3,-10,8,-4,4,9,1,4,-4,4,9,-5,-5,4,-9,7,2,-4,5,-9,8,-1,-2,6,-1,9,8,6,8,-5,5,-10,1,-7,4,7,6,10,-5,7,9,-8,1,-2,-6,-7,-1,5,-2,10,8,7,9,3,6,-10,5,3,1,-6,-4,-7,-1,9,-5,-9,-10,9,4,3,-2,-4,-2,5,-4,-10,4,-5,2,-6,7,-9,2,6,10,5,-4,-8,-7,10,4,2,-7,-2,-3,5,-6,8,-4,3,4,5,8,-2,8,8,2,-9,9,8,-2,3,-9,3,5,-7,-5,-7,-6,7,1,-6,-7,1,-8,7,6,-5,1,8,5,7,8,2,2,-9,-7,5,-2,10,-9,-10,-9,10,7,7,3,-2,7,6,5,10,10,8,4,-4,6,-6,2,-8,3,-1,-9,-9,6,6,1,-5,-1,-5,-2,-8,2,5,9,3,9,10,4,6,7,1,-8,-10,-9,4,1,-2,-5,9,10,-5,3,-9,-9,8,5,-3,-8,-1,-8,-10,8,-4,-7,-4,4,-6,-9,5,-9,1,4,6,8,9,-4,-5,-9,3,3,-4,1,7,6,5,6,-9,1,-2,-3,-5,10,-7,-10,-6,10,-1,2,8,-9,-1,-10,-5,6,-1,8,3,-7,-6,1,-1,4,9,-9,1,-9,-3,5,-1,5,7,8,-1,2,-2,-1,-5,5,10,2,-2,-6,-1,4,1,2,1,1,4,1,-8,9,7,7,5,-1,-2,3,9,5,-5,9,8,-1,-3,10,-5,5,10,1,3,4,10,-1,5,10,-5,-9,1,9,2,-5,6,-9,2,-4,2,10,-7,3,-9,5,4,-8,4,8,7,-3,3,-1,-1,-10,7,9,3,10,-4,5,-9,-4,-2,-10,-4,-4,-4,2,4,-2,-3,6,10,-5,1,6,-5,-6,1,-8,1,-3,-8,2,-6,2,-3,5,-4,-2,2,-8,8,-6,10,-5,-5,-5,3,7,-4,-1,7,2,6,-10,-4,5,-10,1,2,-10,2,4,-5,-5,9,-7,1,10,5,-6,-8,-9,10,10,-3,3,-6,-3,5,1,3,10,7,-1,-2,1,6,10,-1,-1,1,-2,-10,-9,2,-1,-9,-8,3,-9,6,8,-2,-1,-7,9,-6,-4,-5,-1,6,-3,3,1,3,-2,2,3,8,-8,4,-4,10,7,2,4,10,-3,1,8,4,4,-1,1,-1,-6,-8,-7,8,-4,10,10,-7,2,5,-3,1,4,-6,-3,5,2,-10,10,3,-2,-3,-4,5,2,5,10,5,-9,-10,8,2,7,-10,-1,2,-5,-6,-7,4,-1,-5,8,5,-2,10,10,-9,5,3,-10,1,-10,-6,-6,-6,-1,9,2,-7,-1,-4,2,-8,-1,-4,6,10,-2,4,-7,6,3,7,9,10,2,1,-7,10,-9,-1,-10,4,-7,2,9,2,-5,-7,-5,-6,-1,1,-5,-6,-5,-1,9,-9,-6,-2,10,6,5,2,2,-6,-3,3,-8,-4,9,10,-3,-6,-1,-3,-2,-8,4,-6,-8,-3,1,-10,-6,-2,2,-3,-2,-3,5,7,6,-6,-5,-1,7,3,10,5,-10,3,10,4,-4,6,-4,9,-10,2,-7,8,7,-2,-7,-4,-5,-6,2,-8,8,6,-8,-1,9,-4,6,-2,3,9,2,-6,10,-1,-1,-7,-4,-2,9,1,-7,-6,-4,6,-2,-7,8,-1,-5,-1,3,9,2,-10,-5,8,-5,-6,3,-6,7,-1,-1,3,7,4,1,-9,-3,5,9,3,-10,-3,-1,9,-6,-10,3,3,-7,-1,-10,-3,-1,-2,-4,4,-4,-6,-10,10,5,5,5,-9,-4,-1,1,7,2,2,-4,9,-7,-2,2,-5,6,-7,5,-1,6,-3,-6,1,-2,6,-3,-6,10,9,2,10,-3,8,3,-9,1,-10,-4,7,-5,-2,7,-1,5,-10,-4,-6,-7,5,4,-1,-7,4,-1,7,-5,6,-8,1,-7,-2,-3,-9,3,-2,-7,-1,-3,6,-7,10,4,6,-3,5,1,-2,-8,-7,-3,7,4,-6,5,9,-9,-6,4,-4,10,-6,9,-5,7,5,3,-3,9,3,5,6,2,-4,-3,-1,8,-3,-5,1,4,-5,-9,3,-10,-2,10,-9,-1,7,3,-8,-7,-7,3,6,7,4,10,4,6,4,-5,8,-6,-1,-7,10,-3,-8,-7,4,6,8,5,-7,-9,9,-4,3,4,-10,4,-4,-7,5,-7,-7,-5,2,-8,-5,9,-4,-10,6,-10,4,-6,-3,9,6,5,10,10,-3,10,-9,9,6,10,-3,6,-6,-6,-5,7,2,9,-5,5,-9,-6,-7,-4,6,3,-6,-9,-3,-3,1,-4,-3,6,-1,-8,7,1,-10,-5,10,-10,-10,3,5,4,6,-8,8,-9,-4,-1,2,4,-8,-10,8,-7,10,-2,5,-10,3,-10,-3,-1,-7,-7,4,-10,-2,-1,10,-1,-7,5,10,-3,-5,-5,3,3,-6,-8,6,3,8,-10,-1,9,5,-9,9,-7,4,-3,6,8,8,4,-6,4,10,-4,-5,8,9,3,9,4,-10,2,-3,-9,10,7,-2,-10,4,-3,9,9,1,5,1,-5,6,-10,2,2,-5,-6,9,-9,-3,2,-4,-9,-4,-6,6,8,1,-1,-9,2,1,3,7,-4,4,2,8,4,-6,9,-2,-3,6,5,-8,-1,5,8,-6,2,-10,-10,6,10,-6,5,5,10,-6,9,10,-1,-4,10,-3,1,-9,-2,5,-8,-1,9,-4,9,4,2,-6,2,3,-1,4,-8,3,7,-1,8,-1,8,-8,5,-5,-7,-1,-2,-8,-3,-4,-5,-2,-6,-9,-5,-3,-8,-1,2,-2,-6,7,9,2,-10,-2,5,9,-7,8,-1,-6,-2,1,-5,-3,8,-1,-7,-9,-1,-4,-5,10,3,3,-6,2,7,4,-6,3,8,1,8,4,2,-6,3,8,-3,-8,3,-9,-3,2,-9,-5,10,-4,-7,8,8,-6,-1,5,-7,-2,-4,3,-3,9,2,1,-10,-2,5,6,-7,4,-9,9,5,8,-2,7,6,7,9,-3,5,8,7,-3,6,-2,10,3,-5,-5,2,4,1,9,9,1,-7,-4,-2,-9,-8,-5,4,-6,-1,-8,4,-4,-1,-4,-2,6,3,4,-1,-8,-5,9,-3,8,5,-10,6,-3,4,1,4,5,-9,5,-3,-1,5,6,5,3,-10,1,4,4,1,4,-5,3,10,-6,-8,-1,-6,-1,3,-3,5,-10,7,-9,-1,4,-3,-10,6,8,-2,6,-6,-1,3,1,-7,8,-6,2,1,-5,-6,9,-2,5,6,4,-10,-10,-10,-10,-3,-2,-5,-8,2,-1,8,-8,9,-4,7,-4,6,8,4,-4,-8,5,1,-10,-7,-1,2,-5,5,5,-9,8,2,3,6,2,6,-7,-3,1,-9,4,4,-4,9,10,8,-5,-4,6,-8,3,-10,-10,-7,-2,5,-2,5,7,-5,4,-5,-4,9,-8,-2,2,1,-4,5,7,-10,-9,6,1,-3,7,-5,-8,4,-3,4,8,-9,6,-6,4,-3,-3,8,-2,-8,-10], dtype = "uint16")#candidate|12248|(3360,)|const|uint16
call_12247 = relay.TupleGetItem(func_1150_call(relay.reshape(const_12248.astype('uint16'), [3360,])), 0)
call_12249 = relay.TupleGetItem(func_1153_call(relay.reshape(const_12248.astype('uint16'), [3360,])), 0)
func_10758_call = mod.get_global_var('func_10758')
func_10759_call = mutated_mod.get_global_var('func_10759')
call_12250 = relay.TupleGetItem(func_10758_call(), 0)
call_12251 = relay.TupleGetItem(func_10759_call(), 0)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_12269 = relay.TupleGetItem(func_1012_call(), 0)
call_12270 = relay.TupleGetItem(func_1014_call(), 0)
func_3728_call = mod.get_global_var('func_3728')
func_3729_call = mutated_mod.get_global_var('func_3729')
call_12271 = relay.TupleGetItem(func_3728_call(), 1)
call_12272 = relay.TupleGetItem(func_3729_call(), 1)
func_5290_call = mod.get_global_var('func_5290')
func_5292_call = mutated_mod.get_global_var('func_5292')
call_12273 = relay.TupleGetItem(func_5290_call(), 0)
call_12274 = relay.TupleGetItem(func_5292_call(), 0)
output = relay.Tuple([call_12231,call_12247,const_12248,call_12250,call_12269,call_12271,call_12273,])
output2 = relay.Tuple([call_12232,call_12249,const_12248,call_12251,call_12270,call_12272,call_12274,])
func_12281 = relay.Function([], output)
mod['func_12281'] = func_12281
mod = relay.transform.InferType()(mod)
output = func_12281()
func_12282 = relay.Function([], output)
mutated_mod['func_12282'] = func_12282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4119_call = mod.get_global_var('func_4119')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_12383 = relay.TupleGetItem(func_4119_call(), 1)
call_12384 = relay.TupleGetItem(func_4121_call(), 1)
func_8067_call = mod.get_global_var('func_8067')
func_8069_call = mutated_mod.get_global_var('func_8069')
call_12385 = relay.TupleGetItem(func_8067_call(), 1)
call_12386 = relay.TupleGetItem(func_8069_call(), 1)
output = relay.Tuple([call_12383,call_12385,])
output2 = relay.Tuple([call_12384,call_12386,])
func_12428 = relay.Function([], output)
mod['func_12428'] = func_12428
mod = relay.transform.InferType()(mod)
mutated_mod['func_12428'] = func_12428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12428_call = mutated_mod.get_global_var('func_12428')
call_12429 = func_12428_call()
output = call_12429
func_12430 = relay.Function([], output)
mutated_mod['func_12430'] = func_12430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_12437 = relay.TupleGetItem(func_1380_call(), 0)
call_12438 = relay.TupleGetItem(func_1381_call(), 0)
func_3003_call = mod.get_global_var('func_3003')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_12444 = relay.TupleGetItem(func_3003_call(), 0)
call_12445 = relay.TupleGetItem(func_3004_call(), 0)
func_7540_call = mod.get_global_var('func_7540')
func_7542_call = mutated_mod.get_global_var('func_7542')
call_12446 = relay.TupleGetItem(func_7540_call(), 0)
call_12447 = relay.TupleGetItem(func_7542_call(), 0)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_12459 = relay.TupleGetItem(func_1012_call(), 0)
call_12460 = relay.TupleGetItem(func_1014_call(), 0)
func_3173_call = mod.get_global_var('func_3173')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_12464 = relay.TupleGetItem(func_3173_call(), 0)
call_12465 = relay.TupleGetItem(func_3174_call(), 0)
func_9092_call = mod.get_global_var('func_9092')
func_9093_call = mutated_mod.get_global_var('func_9093')
call_12485 = relay.TupleGetItem(func_9092_call(), 1)
call_12486 = relay.TupleGetItem(func_9093_call(), 1)
output = relay.Tuple([call_12437,call_12444,call_12446,call_12459,call_12464,call_12485,])
output2 = relay.Tuple([call_12438,call_12445,call_12447,call_12460,call_12465,call_12486,])
func_12494 = relay.Function([], output)
mod['func_12494'] = func_12494
mod = relay.transform.InferType()(mod)
output = func_12494()
func_12495 = relay.Function([], output)
mutated_mod['func_12495'] = func_12495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5503_call = mod.get_global_var('func_5503')
func_5504_call = mutated_mod.get_global_var('func_5504')
call_12600 = func_5503_call()
call_12601 = func_5503_call()
func_10236_call = mod.get_global_var('func_10236')
func_10237_call = mutated_mod.get_global_var('func_10237')
call_12602 = func_10236_call()
call_12603 = func_10236_call()
output = relay.Tuple([call_12600,call_12602,])
output2 = relay.Tuple([call_12601,call_12603,])
func_12646 = relay.Function([], output)
mod['func_12646'] = func_12646
mod = relay.transform.InferType()(mod)
mutated_mod['func_12646'] = func_12646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12646_call = mutated_mod.get_global_var('func_12646')
call_12647 = func_12646_call()
output = call_12647
func_12648 = relay.Function([], output)
mutated_mod['func_12648'] = func_12648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_12653 = relay.TupleGetItem(func_4423_call(), 0)
call_12654 = relay.TupleGetItem(func_4425_call(), 0)
func_10236_call = mod.get_global_var('func_10236')
func_10237_call = mutated_mod.get_global_var('func_10237')
call_12674 = func_10236_call()
call_12675 = func_10236_call()
output = relay.Tuple([call_12653,call_12674,])
output2 = relay.Tuple([call_12654,call_12675,])
func_12678 = relay.Function([], output)
mod['func_12678'] = func_12678
mod = relay.transform.InferType()(mod)
output = func_12678()
func_12679 = relay.Function([], output)
mutated_mod['func_12679'] = func_12679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5474_call = mod.get_global_var('func_5474')
func_5475_call = mutated_mod.get_global_var('func_5475')
call_12704 = relay.TupleGetItem(func_5474_call(), 0)
call_12705 = relay.TupleGetItem(func_5475_call(), 0)
output = relay.Tuple([call_12704,])
output2 = relay.Tuple([call_12705,])
func_12712 = relay.Function([], output)
mod['func_12712'] = func_12712
mod = relay.transform.InferType()(mod)
mutated_mod['func_12712'] = func_12712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12712_call = mutated_mod.get_global_var('func_12712')
call_12713 = func_12712_call()
output = call_12713
func_12714 = relay.Function([], output)
mutated_mod['func_12714'] = func_12714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7675_call = mod.get_global_var('func_7675')
func_7676_call = mutated_mod.get_global_var('func_7676')
call_12784 = relay.TupleGetItem(func_7675_call(), 1)
call_12785 = relay.TupleGetItem(func_7676_call(), 1)
func_8648_call = mod.get_global_var('func_8648')
func_8649_call = mutated_mod.get_global_var('func_8649')
call_12810 = relay.TupleGetItem(func_8648_call(), 0)
call_12811 = relay.TupleGetItem(func_8649_call(), 0)
output = relay.Tuple([call_12784,call_12810,])
output2 = relay.Tuple([call_12785,call_12811,])
func_12853 = relay.Function([], output)
mod['func_12853'] = func_12853
mod = relay.transform.InferType()(mod)
mutated_mod['func_12853'] = func_12853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12853_call = mutated_mod.get_global_var('func_12853')
call_12854 = func_12853_call()
output = call_12854
func_12855 = relay.Function([], output)
mutated_mod['func_12855'] = func_12855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3444_call = mod.get_global_var('func_3444')
func_3446_call = mutated_mod.get_global_var('func_3446')
call_12978 = func_3444_call()
call_12979 = func_3444_call()
output = relay.Tuple([call_12978,])
output2 = relay.Tuple([call_12979,])
func_13023 = relay.Function([], output)
mod['func_13023'] = func_13023
mod = relay.transform.InferType()(mod)
mutated_mod['func_13023'] = func_13023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13023_call = mutated_mod.get_global_var('func_13023')
call_13024 = func_13023_call()
output = call_13024
func_13025 = relay.Function([], output)
mutated_mod['func_13025'] = func_13025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4315_call = mod.get_global_var('func_4315')
func_4317_call = mutated_mod.get_global_var('func_4317')
call_13026 = relay.TupleGetItem(func_4315_call(), 0)
call_13027 = relay.TupleGetItem(func_4317_call(), 0)
func_8133_call = mod.get_global_var('func_8133')
func_8134_call = mutated_mod.get_global_var('func_8134')
call_13028 = relay.TupleGetItem(func_8133_call(), 0)
call_13029 = relay.TupleGetItem(func_8134_call(), 0)
output = relay.Tuple([call_13026,call_13028,])
output2 = relay.Tuple([call_13027,call_13029,])
func_13036 = relay.Function([], output)
mod['func_13036'] = func_13036
mod = relay.transform.InferType()(mod)
output = func_13036()
func_13037 = relay.Function([], output)
mutated_mod['func_13037'] = func_13037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11856_call = mod.get_global_var('func_11856')
func_11857_call = mutated_mod.get_global_var('func_11857')
call_13046 = relay.TupleGetItem(func_11856_call(), 1)
call_13047 = relay.TupleGetItem(func_11857_call(), 1)
func_1637_call = mod.get_global_var('func_1637')
func_1639_call = mutated_mod.get_global_var('func_1639')
call_13053 = relay.TupleGetItem(func_1637_call(), 0)
call_13054 = relay.TupleGetItem(func_1639_call(), 0)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_13055 = relay.TupleGetItem(func_2467_call(), 1)
call_13056 = relay.TupleGetItem(func_2468_call(), 1)
output = relay.Tuple([call_13046,call_13053,call_13055,])
output2 = relay.Tuple([call_13047,call_13054,call_13056,])
func_13062 = relay.Function([], output)
mod['func_13062'] = func_13062
mod = relay.transform.InferType()(mod)
output = func_13062()
func_13063 = relay.Function([], output)
mutated_mod['func_13063'] = func_13063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8434_call = mod.get_global_var('func_8434')
func_8436_call = mutated_mod.get_global_var('func_8436')
call_13129 = relay.TupleGetItem(func_8434_call(), 0)
call_13130 = relay.TupleGetItem(func_8436_call(), 0)
func_2314_call = mod.get_global_var('func_2314')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_13141 = relay.TupleGetItem(func_2314_call(), 0)
call_13142 = relay.TupleGetItem(func_2316_call(), 0)
output = relay.Tuple([call_13129,call_13141,])
output2 = relay.Tuple([call_13130,call_13142,])
func_13154 = relay.Function([], output)
mod['func_13154'] = func_13154
mod = relay.transform.InferType()(mod)
output = func_13154()
func_13155 = relay.Function([], output)
mutated_mod['func_13155'] = func_13155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11219_call = mod.get_global_var('func_11219')
func_11221_call = mutated_mod.get_global_var('func_11221')
call_13198 = relay.TupleGetItem(func_11219_call(), 0)
call_13199 = relay.TupleGetItem(func_11221_call(), 0)
func_12069_call = mod.get_global_var('func_12069')
func_12070_call = mutated_mod.get_global_var('func_12070')
call_13217 = relay.TupleGetItem(func_12069_call(), 0)
call_13218 = relay.TupleGetItem(func_12070_call(), 0)
output = relay.Tuple([call_13198,call_13217,])
output2 = relay.Tuple([call_13199,call_13218,])
func_13223 = relay.Function([], output)
mod['func_13223'] = func_13223
mod = relay.transform.InferType()(mod)
mutated_mod['func_13223'] = func_13223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13223_call = mutated_mod.get_global_var('func_13223')
call_13224 = func_13223_call()
output = call_13224
func_13225 = relay.Function([], output)
mutated_mod['func_13225'] = func_13225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11564_call = mod.get_global_var('func_11564')
func_11566_call = mutated_mod.get_global_var('func_11566')
call_13235 = relay.TupleGetItem(func_11564_call(), 0)
call_13236 = relay.TupleGetItem(func_11566_call(), 0)
output = relay.Tuple([call_13235,])
output2 = relay.Tuple([call_13236,])
func_13247 = relay.Function([], output)
mod['func_13247'] = func_13247
mod = relay.transform.InferType()(mod)
output = func_13247()
func_13248 = relay.Function([], output)
mutated_mod['func_13248'] = func_13248
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13265 = relay.const([[[-1.282993,-3.667151,5.462343,-5.538446,-3.902409,-6.049657,3.361165,9.454923,5.720205,-7.225818,-1.629336,-4.830900,2.384530,-1.007020],[2.219797,5.581198,-5.304668,5.165836,-4.956539,4.307539,-8.123182,-7.219476,1.318359,6.384202,-5.258413,-1.343829,-9.247357,-2.464606],[-1.743812,-6.336847,-5.015379,1.813782,6.856166,-0.128740,-6.525174,-4.316699,-3.547817,-5.501328,-3.457050,-5.328567,-5.687842,2.846986],[2.008775,-2.044080,-1.578861,6.685820,-8.202631,4.763477,-8.944393,4.263389,7.362327,2.667756,3.042960,-5.296824,2.400397,-2.501722]]], dtype = "float32")#candidate|13265|(1, 4, 14)|const|float32
uop_13266 = relay.cos(const_13265.astype('float32')) # shape=(1, 4, 14)
output = uop_13266
output2 = uop_13266
func_13276 = relay.Function([], output)
mod['func_13276'] = func_13276
mod = relay.transform.InferType()(mod)
output = func_13276()
func_13277 = relay.Function([], output)
mutated_mod['func_13277'] = func_13277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3534_call = mutated_mod.get_global_var('func_3534')
call_13294 = relay.TupleGetItem(func_3532_call(), 0)
call_13295 = relay.TupleGetItem(func_3534_call(), 0)
func_5820_call = mod.get_global_var('func_5820')
func_5821_call = mutated_mod.get_global_var('func_5821')
call_13321 = relay.TupleGetItem(func_5820_call(), 0)
call_13322 = relay.TupleGetItem(func_5821_call(), 0)
output = relay.Tuple([call_13294,call_13321,])
output2 = relay.Tuple([call_13295,call_13322,])
func_13324 = relay.Function([], output)
mod['func_13324'] = func_13324
mod = relay.transform.InferType()(mod)
output = func_13324()
func_13325 = relay.Function([], output)
mutated_mod['func_13325'] = func_13325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_13337 = func_2211_call()
call_13338 = func_2211_call()
func_9750_call = mod.get_global_var('func_9750')
func_9752_call = mutated_mod.get_global_var('func_9752')
call_13355 = relay.TupleGetItem(func_9750_call(), 2)
call_13356 = relay.TupleGetItem(func_9752_call(), 2)
output = relay.Tuple([call_13337,call_13355,])
output2 = relay.Tuple([call_13338,call_13356,])
func_13382 = relay.Function([], output)
mod['func_13382'] = func_13382
mod = relay.transform.InferType()(mod)
mutated_mod['func_13382'] = func_13382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13382_call = mutated_mod.get_global_var('func_13382')
call_13383 = func_13382_call()
output = call_13383
func_13384 = relay.Function([], output)
mutated_mod['func_13384'] = func_13384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7432_call = mod.get_global_var('func_7432')
func_7434_call = mutated_mod.get_global_var('func_7434')
call_13407 = func_7432_call()
call_13408 = func_7432_call()
func_4901_call = mod.get_global_var('func_4901')
func_4903_call = mutated_mod.get_global_var('func_4903')
call_13418 = func_4901_call()
call_13419 = func_4901_call()
func_13023_call = mod.get_global_var('func_13023')
func_13025_call = mutated_mod.get_global_var('func_13025')
call_13435 = relay.TupleGetItem(func_13023_call(), 0)
call_13436 = relay.TupleGetItem(func_13025_call(), 0)
func_12209_call = mod.get_global_var('func_12209')
func_12210_call = mutated_mod.get_global_var('func_12210')
call_13444 = func_12209_call()
call_13445 = func_12209_call()
func_7101_call = mod.get_global_var('func_7101')
func_7103_call = mutated_mod.get_global_var('func_7103')
call_13447 = relay.TupleGetItem(func_7101_call(), 0)
call_13448 = relay.TupleGetItem(func_7103_call(), 0)
func_3173_call = mod.get_global_var('func_3173')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_13452 = relay.TupleGetItem(func_3173_call(), 0)
call_13453 = relay.TupleGetItem(func_3174_call(), 0)
func_9220_call = mod.get_global_var('func_9220')
func_9221_call = mutated_mod.get_global_var('func_9221')
call_13471 = relay.TupleGetItem(func_9220_call(), 1)
call_13472 = relay.TupleGetItem(func_9221_call(), 1)
output = relay.Tuple([call_13407,call_13418,call_13435,call_13444,call_13447,call_13452,call_13471,])
output2 = relay.Tuple([call_13408,call_13419,call_13436,call_13445,call_13448,call_13453,call_13472,])
func_13478 = relay.Function([], output)
mod['func_13478'] = func_13478
mod = relay.transform.InferType()(mod)
output = func_13478()
func_13479 = relay.Function([], output)
mutated_mod['func_13479'] = func_13479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12853_call = mod.get_global_var('func_12853')
func_12855_call = mutated_mod.get_global_var('func_12855')
call_13522 = relay.TupleGetItem(func_12853_call(), 0)
call_13523 = relay.TupleGetItem(func_12855_call(), 0)
uop_13541 = relay.sin(call_13522.astype('float64')) # shape=(10, 15, 9)
uop_13543 = relay.sin(call_13523.astype('float64')) # shape=(10, 15, 9)
output = relay.Tuple([uop_13541,])
output2 = relay.Tuple([uop_13543,])
func_13554 = relay.Function([], output)
mod['func_13554'] = func_13554
mod = relay.transform.InferType()(mod)
output = func_13554()
func_13555 = relay.Function([], output)
mutated_mod['func_13555'] = func_13555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7604_call = mod.get_global_var('func_7604')
func_7606_call = mutated_mod.get_global_var('func_7606')
call_13574 = func_7604_call()
call_13575 = func_7604_call()
func_10989_call = mod.get_global_var('func_10989')
func_10990_call = mutated_mod.get_global_var('func_10990')
call_13576 = relay.TupleGetItem(func_10989_call(), 1)
call_13577 = relay.TupleGetItem(func_10990_call(), 1)
func_1736_call = mod.get_global_var('func_1736')
func_1739_call = mutated_mod.get_global_var('func_1739')
const_13592 = relay.const([9,-2,-10,-7,1,-1,-3,-8,7,10,5,1,7,-7,8,1,-8,4,-8,-8,-8,10,4,-2,1,4,-10,-10,-3,-9,-6,2,3,-6,7,-2,5,-8,-9,7,-4,8,9,3,4,5,-4,6,5,10,5,8,-3,8,-9,-4,9,-7,9,-10,-3,4,4,-5,-3,-10,7,8,-4,-2,3,-4,-7,1,-4,-10,6,4,-4,-10,4,-5,7,10,4,-2,9,7,10,5,-9,-1,-9,-6,2,1,-5,6,2,3,2,-2,3,9,9,7,9,4,3,-10,-7,10,7,-6,-5,-6,-4,8,-2,-3,10,-9,-8,-4,7,5,-7,8,4,-5,-2,-6,3,-4,-10,4,-8,7,-9,6,-7,10,7,-7,3,-2,7,1,-9,-3,-3,8,-3,7,6,-8,6,4,-9,6,5,6,3,1,2,2,-2,-7,3,-7,-7,1,-6,-7,-8,-6,1,6,-7,8,1,-7,2,8,-7,-4,3,-10,-4,3,-9,6,10,6,9,9,7,2,1,5,-8,-4,6,-1,10,2,-2,-3,-2,-10,-4,10,-6,-1,6,-6,-4,-7,-6,-3,-2,-8,-5,9,-10,8,-9,-7,3,-3,-3,5,-1,10,-1,-6,7,-7,4,8,4,-2,-4,-7,7,8,-1,7,-5,1,-7,-9,2,-5,-2,2,8,-9,3,1,-8,-7,-4,-2,1,-5,10,-3,7,-1,-2,7,9,4,3,-9,6,1,2,7,9,-2,-3,3,6,3,9,7,5,7,9,-3,5,5,9,1,-5,7,1,-1,4,-4,-1,8,-4,-8,-2,-8,-4,4,-6,-9,1,8,-6,8,1,10,3,-2,2,2,10,2,-2,7,-5,-8,4,10,-4,-7,-10,-1,-6,4,2,3,3,-5,-4,-4,9,-7,9,-1,6,2,-7,-3,-5,-3,10,-8,-1,-1,-5,6,-8,-5,10,3,-7,4,-9,9,1,-2,5,-5,3,5,-2,2,-6,10,-6,-2,10,-7,2,-3,-7,5,7,10,7,-7,-10,2,7,-2,4,4,-9,-3,8,-5,10,-6,-1,6,6,10,4,10,1,-2,5,1,8,6,-9,-10,-10,-8,5,-10,9,4,9,5,-5,8,-7,-5,-2,-3,-1,-2,9,1,-3,-4,-2,-6,-2,2,-9,7,-1,3,5,-4,6,7,-3,-1,1,9,-2,4,-5,1,-1,2,-5,5,10,4,5,-3,-10,-5,10,4,-8,-5,-7,10,9,9,-6,3,2,-2,-9,-5,1,-1,3,-2,4,-7,8,-10,-1,10,-1,-3,-10,-10,-4,-9,-7,4,4,3,5,-2,9,-9,-8,8,-2,4,8,3,1,4,2,7,6,-5,-10,-2,-8,-9,-10,10,8,5,8,-7,-10,6,-3,-10,-3,-7,-4,3,-10,10,9,-1,4,4,-6,10,4,-9,-10,-5,4,7,-1,-9,5,10,-1,-1,-8,6,6,1,-3,8,-9,-8,6,-10,6,-9,-3,4,-1,9,-2,5,-3,1,-7,9,1,-1,-3,-4,-2,-1,-4,-9,4,6,2,-5,8,-1,2,-2,-9,1,-4,4,-2,3,2,8,-1,-3,6,10,-1,-8,2,9,3,-7,9,-4,-6,4,10,-5,8,6,3,7,-8,8,-7,5,-9,8,2,8,1,-8,-5,4,9,7,-7,-10,1,6,7,9,-4,5,-1,5,-6,-2,4,-4,5,8,10,-8,-8,-3,8,2,-1,9,9,-3,-7,-7,1,7,-5,-10,3,-7,4,5,-2,-5,3,4,-8,-10,-1,7,8,-8,8,-9,-5,3,6,1,-4,-2,10,2,4,4,-7,-7,-2,-10,-2,1,-5,7,2,-3,6,-7,3,4,-3,1,9,7,-3,-2,-5,-4,-9,4,-1,-2,-4,3,10,3,8,-3,3,6,6,1,-3,2,8,-5,-4,-5,-6,4,-8,9,-2,-10,-4,-1,8,-2,8,5,1,-4,7,-5,-8,2,7,-1,-6,4,-1,2,8,10,-7,2,7,5,5,-8,9,8,-1,-5,-4,-9,-5,-4,-5,8,9,4,-6,-9,-8,-2,9,5,3,-9,10,-1,10,-5,-10,-9,-3,-5,1,-7,-3,8,-3,3,2,2,-3,4,-8,10,-3,7,3,4,7,5,-2,-3,-5,-2,2,8,9,-9,-2,-5,10,-1,-3,9,8,-10,-6,-7,1,7,-5,9,8,1,10,6,-9,5,2,3,-7,-10,8,-5,9,4,-8,8,-2,-7,-8,-2,-10,10,-10,-3,10,3,3,8,-1,-5,-5,6,-3,-10,6,9,-9,-9,4,10,-7,1,-1,3,-1,-3,-3,-6,4,9,-7,7,9,-5,-1,-6,-7,10,6,-10,-4,-7,-3,-7,-6,6,-7,9,10,9,-8,10,2,3,-5,-8,7,-6,-6,-7,1,8,-6,-4,-3,-10,7,-8,1,-8,-4,3,-2,2,-4,-4,2,-5,-1,9,-1,4,-10,-7,-4,5,-1,-1,-1,-3,-4,2,-9,6,-5,3,-3,-1,1,-2,-3,5,9,-7,1,-7,-6,-10,-7,4,-9,-5,-8,-5,-4,-6,-6,-1,8,-7,-7,-3,3,-8,10,-2,1,-1,-4,9,-3,-5,9,6,-5,8,7,-4,5,-1,-6,-3,-10,7,3,2,-5,7,-4,-3,5,-10,3,3,8,4,-8,-2,-3,2,6,-2,-4,7,1,6,9,8,-2,1,-6,-5,-4,-5,-5,-3,-3,-4,-5,5,-10,3,7,-3,-2,-10,-9,-5,9,10,-6,-6,1,6,-10,-3,1,10,-7,8,5,-2,-4,-7,-6,8,-9,1,-2,-5,9,3,-6,-8,3,-4,8,5,2,5,-7,10,-5,8,-9,2,-1,-7,-5,1,3,-8,-1,2,-5,3,-10,-9,-3,4,10,-9,-8,-9,1,5,-5,-6,-6,-2,-7,-4,-8,-2,8,5,2,10,-10,5,6,7,2,10,4,-10,6,8,7,-7,7,-4,5,1,10,7,3,-9,-7,-5,-10,-4,1,10,-5,2,8,3,9,-9,7,8,9,-8,-4,-1,-10,-1,-8,-6,2,5,5,5,9,6,1,-9,-9,9,10,2,-5,-8,5,-6,-3,9,8,-5,-8,-6,-2,9,9,-9,-10,-6,3,9,-9,7,5,-3,7,-1,-6,-4,-9,-4,-3,-7,3,9,1,-5,3,4,5,-1,3,9,-7,2,6,-6,8,-5,9,8,-1,10,-5,2,-2,-2,4,-8,4,7,-5,-2,-6,-3,-10,7,-4,-7,-3,-8,-3,2,2,8,-10,-8,10,8,-5,-3,4,8,6,6,6,6,4,7,-8,4,2,2,1,7,3,-3,-7,4,8,-5,-3,6,-1,-3,-9,-8,8,2,2,-5,9,-1,-9,-2,-2,-3,-9,2,3,-8,4,-3,8,2,-7,4,-7,2,9,-4,2,5,8,9,3,-2,-5,-9,-2,-2,2,-5,-2,-6,1,-1,-9,4,4,-9,-3,3,-7,1,-7,-10,-1,-7,-2,-4,-3,5,9,-1,5,9,-10,7,9,9,-1,3,4,4,3,8,-1,7,-4,-7,6,-8,10,-6,-3,3,3,-7,7,2,9,3,-3,-4,-1,-6,6,-5,-9,-7,5,-8,7,-5,9,2,5,2,8,-7,-6,5,-8,2,1,-2,9,-5,7,3,-7,-8,2,10,-5,-8,9,6,-8,-5,-8,-7,8,7,2,-5,-5,-1,10,-7,-10,9,10,9,4,7,2,2,6,9,-7,6,5,9,1,-4,10,-2,-9,-10,-4,6,3,-8,-7,-6,9,-8,-3,4,2,-5,-1,7,-8,4,6,-10,10,-5,-2,1,6,10,8,-3,1,-5,9,-4,-10,10,10,2,-7,7,1,3,-9,9,6,-8,-4,-1,6,9,-6,2,9,4,-5,5,8,5,10,5,-8,5,7,-4,-1,-10,1,3,-8,-6,-9,-8,9,-6,-7,-7,5,8,7,-6,-4,7,2,5,-8,-2,-10,-4,6,-9,1,10,7,-10,10,3,6,-9,-2,8,-5,-7,-5,-5,-2,-5,-8,3,-5,-10,-8,-10,6,3,-4,-8,-5,4,-9,-10,3,6,-4,-9,-1,-5,3,-5,3,-7,-3,7,-1,8,10,-2,5,4,-6,-8,1,8,-7,3,5,8,-4,-5,-6,6,1,8,-6,3,9,-1,-5,6,-3,3,-10,5,-5,-10,1,8,-2,8,-3,9,2,-2,-10,8,-9,3,-1,-3,9,9,7,-4,6,-6,2,-8,-7,3,1,3,4,7,-4,-4,-4,-7,-2,10,10,6,-3,-8,7,8,-5,-7,-8,-4,7,-7,5,-9,-4,7,-7,8,1,2,9,7,-2,-3,-9,3,7,6,-4,10,-6,-2,2,-4,-7,-1,8,-10,-2,-1,10,-8,5,-2,9,-9,-1,-9,-2,-7,1,7,8,10,-10,5,-4,-10,7,10,-4,-4,-9,-1,7,-1,-8,8,6,7,8,8,5,2,8,1,-10,-8,-7,1,-6,10,1,-9,-5,-2,6,-6,-8,4,-10,-9,-9,1,-5,-10,7,5,10,-4,10,-8,8,9,2,-3,2,7,10,-9,-2,-7,1,-8,6,5,-10,4,9,-5,9,-5,1,-2,2,5,10,-5,-4,1,-5,-5,3,6,-3,3,10,-2,-2,1,8,7,7,-1,5,8,10,6,3,5,2,9,-8,2,-7,-3,8,-7,2,-6,9,8,9,5,3,-7,10,6,9,9,2,3,1,-6,7,1,-6,-7,10,-7,6,9,-10,-5,4,6,-3,9,10,-9,5,-3,9,-6,-6,2,-6,7,8,6,-5,10,-3,1,4,10,-10,-2,3,-7,-2,-10,-2,8,-8,-3,-9,10,-4,5,3,-9,8,-3,3,1,-3,-6,7,-6,-8,-7,-6,9,2,-9,-1,9,2,-2,3,2,4,2,10,6,9,-5,4,4,-7,-10,-1,-8,2,10,3,3,8,9,-3,5,2,-6,3,-10,-3,9,-9,9,-8,9,10,7,7,-7,-2,-2,-2,9,-8,-6,-1,-5,5,-4,-2,2,-4,2,-8,-2,1,3,2,-9,-4,1,1,8,9,-8,-6,5,-3,3,-5,-10,-1,-2,-6,5,-7,7,-2,5,-10,4,-5,-8,-7,-8,8,-1,-2,1,-7,9,-3,-3,3,8,-2,9,-3,-6,8,3,1,-4,-10,-10,-1,10,-5,-1,-4,2,-3,-3,-8,7,2,-3,-7,-5,-5,-3,-4,-2,-7,-9,-2,-4,4,1,8,-9,1,3,-2,-4,-3,-3,7,8,-8,4,-10,7,8,5,10,-6,9,-7,-10,-7,-6,-2,6,9,-8,8,-1,-1,4,5,-3,3,4,10,10,9,-8,3,2,9,-4,10,-1,4,-9,9,2,4,3,10,-3,-1,1,-6,5,2,2,3,-5,9,6,7,-10,-3,-7,6,3,3,-1,-6,-4,-6,-10,-10,-5,-10,4,10,10,-7,-8,9,10,3,2,-8,8,3,-4,-5,-1,-2,4,-1,7,1,8,-7,3,2,1,-2,-5,-9,9,7,-2,-6,-5,1,2,-9,4,-1,-8,-2,2,-10,-10,-5,6,8,-5,4,-1,1,-9,-6,-6,1,1,-5,-1,1,5,-10,-9,6,-5,1,-7,1,-5,-2,7,7,9,10,-6,-1,6,9,-2,-7,-9,-4,5,4,-4,10,-10,-9,8,10,10,-4,-3,-2,-10,-3,-9,5,6,-3,6,4,-2,-6,4,-4,-7,1,-1,-6,-1,-10,-10,4,6,6,3,-7,-3,-5,7,1,10,-4,6,4,1,-10,10,-6,-3,6,2,-1,4,-2,-7,-5,-7,-10,10,-10,5,-1,4,-1,10,5,1,-5,-3,-8,-9,7,-3,-9,-8,-6,-9,-2,-6,3,10,-6,-3,-6,1,7,8,-6,-1,-5,-5,6,8,10,10,-8,1,-9,-8,-9,10,8,1,10,2,3,-6,1,8,6,5,6,1,-10,-2,-7,-6,2,-1,-9,8,10,4,8,5,10,1,7,3,10,-10,-2,3,4,-8,9,-9,-2,2,-5,-5,10,2,7,-7,-3,-5,3,-10,-6,-2,-8,5,1,1,8,-2,-1,6,-10,-6,-1,-9,-3,-1,-1,5,3,-7,-9,2,-4,4,9,-5,6,-1,4,-1,-10,5,7,-1,10,-7,-6,-6,5,10,-1,-2,-6,-4,-4,-7,-7,-8,-10,7,6,-9,-4,7,-7,5,9,5,-2,-8,-3,-3,-7,5,9,-9,5,-9,5,10,2,1,5,-9,-4,3,3,-8,-6,-10,-4,-2,-1,7,7,-9,5,10,-6,6,7,-7,-5,1,-7,-6,3,9,-9,1,6,-4,-2,10,5,-7,-5,-3,1,-2,8,-9,-8,-7,5,-4,2,1,-4,1,8,4,-4,4,2,4,-3,-2,-9,7,-9,-2,-9,-4,-3,6,10,-5,-6,10,4,-9,4,8,-10,-7,6,-1,-4,1,7,1,7,4,4,1,-7,-6,2,6,1,-5,3,-5,9,4,-3,-5,-10,4,-4,-3,5,-2,3,1,1,10,-1,1,-1,8,-10,6,4,6,-5,1,-8,1,10,5,9,5,2,-10,1,-9,-4,2,5,8,-7,-3,1,-8,5,2,9,-2,3,6,-3,-6,-9,5,-8,-5,-9,2,2,10,-3,9,-8,-5,-6,-5,-5,4,-1,10,-1,4,5,1,-8,-5,3,-3,9,-2,-8,-4,9,-8,8,-8,5,10,-10,9,1,-8,-10,-5,-8,5,-3,-10,-8,3,-8,-4,4,5,6,3,10,2,-2,-10,-4,-8,-4,1,9,-8,4,-10,-8,2,10,9,-7,-1,-8,9,8,10,8,-5,-3,5,-5,-6,1,6,5,3,-6,1,7,-7,9,-8,9,5,-6,-9,-5,-3,5,8,-5,-2,-5,-9,2,9,1,10,1,-2,-6,-10,-10,-5,-2,-6,6,-2,-10,-5,-4,6,4,-7,-9,-3,-4,6,-6,8,6,7,-10,2,9,-4,4,2,4,-2,-10,10,6,5,-8,1,5,-7,8,-6,-7,-2,10,6,3,9,-2,5,-6,1,-3,10,-10,-4,-6,-5,-1,-3,-1,7,10,-5,-6,10,1,7,-4,2,4,10,6,-3,4,-2,-9,-7,6,1,10,-5,3,-7,-9,-10,-4,-2,-8,9,-3,5,9,-2,1,6,-5,6,-5,6,9,6,6,4,-5,6,-4,-3,-2,-8,6,-6,-5,10,3,-3,-2,8,10,-4,6,6,-10,5,-4,6,-6,-3,-7,2,-1,-4,5,4,3,2,-7,-1,5,-2,-6,-9,3,5,6,-9,2,3,5,-5,-5,-8,-3,-3,5,-9,4,-3,-1,4,-6,8,6,5,7,10,7,6,8,-10,5,-4,-7,-5,-5,-8,1,9,5,9,-4,-8,8,10,-3,9,-10,-8,-9,-5,-1,-5,1,2,-8,10,1,-2,1,-4,-2,4,-5,-9,5,-9,1,1,-8,7,-3,7,-4,4,10,-10,3,4,-6,4,-9,8,-9,-1,1,2,-3,-9,-7,-2,10,-9,8,1,-8,-5,-8,-8,-1,3,-5,7,3,4,-8,-6,2,1,1,-4,-9,-8,2,-5,3,7,2,-5,-10,6,9,8,9,9,-3,9,-4,8,-10,-10,-10,10,-1,-10,8,-10,-8,-6,8,-7,10,3,-10,1,6,5,-10,-10,4,3,6,8,-4,10,-4,4,-2,10,-10,4,-2,-9,-5,-3,-9,-10,-2,8,5,-9,-7,-2,10,1,-3,-3,3,7,-3,9,-9,-8,9,8,-3,2,-7,-9,6,-6,-4,-4,-3,6,-1,9,-8,-10,2,-1,-4,5,9,10,-3,-8,7,5,-3,7,8,4,2,2,-4,9,10,-1,9,8,-10,-8,-6,-7,3,-3,-10,8,-4,6,-5,-6,-10,-6,2,10,8,-9,10,-5,1,-6,8,-3,-4,8,3,-8,5,-1,-8,1,8,2,7,2,9,9,2,8,10,-9,4,-7,1,-5,10,7,-7,7,-10,2,-7,-5,-4,6,2,8,-3,4,2,5,7,-9,2,-6,4,-10,-10,9,1,-7,-1,7,-9,-9,2,4,-7,4,10,-2,10,5,-8,-4,-8,-9,6,-4,-9,-8,9,8,5,-5,-4,9,-10,3,-7,-6,8,7,-5,6,5,3,-6,-10,-5,-7,-6,10,-1,4,10,6,-9,-1,-5,6,-3,-4,2,-1,2,5,-6,-2,1,-8,9,-8,-8,-3,-8,-1,-10,9,10,10,-9,10,1,4,-9,3,-6,-6,-2,7,8,8,-2,1,-6,-6,5,10,-9,7,9,-9,3,-9,-4,4,4,-3,8,2,2,-10,-5,2,7,5,-3,10,10,10,8,10,-5,-10,-5,-10,-2,4,3,5,-9,-7,-5,-8,-8,2,4,10,5,4,-4,-8,5,8,-2,-7,3,3,2,-4,-10,8,8,-3,2,4,-2,-4,6,4,-5,9,6,8,1,-10,-10,-5,8,3,7,-8,10,5,-4,-4,-3,-8,4,9,-10,8,-9,8,3,9,-7,-9,9,-2,7,5,-2,-9,9,-4,6,6,-9,5,6,-1,1,9,-6,-4,-1,-2,-9,9,-8,-6,-7,2,-7,-7,8,-5,2,8,8,-2,10,2,-5,-9,6,-9,-8,-8,-5,9,6,4,-9,-5,-4,-8,9,6,-2,6,10,10,6,4,-6,-7,-6,-8,5,4,10,-6,1,-4,-6,-1,-6,6,-1,-3,1,9,1,4,3,-5,-7,6,2,-3,8,7,-6,-6,-3,-6,-9,4,4,-5,-6,-2,3,3,7,6,-9,-1,-7,-4,4,-7,-4,-2,-10,5,-9,-1,6,8,9,9,8,-4,7,-9,7,5,-8,-10,-5,-6,-6,7,-10,-5,8,8,-6,-4,2,5,9,3,-8], dtype = "uint16")#candidate|13592|(3360,)|const|uint16
call_13591 = relay.TupleGetItem(func_1736_call(relay.reshape(const_13592.astype('uint16'), [3360,])), 3)
call_13593 = relay.TupleGetItem(func_1739_call(relay.reshape(const_13592.astype('uint16'), [3360,])), 3)
func_5714_call = mod.get_global_var('func_5714')
func_5716_call = mutated_mod.get_global_var('func_5716')
call_13595 = func_5714_call()
call_13596 = func_5714_call()
output = relay.Tuple([call_13574,call_13576,call_13591,const_13592,call_13595,])
output2 = relay.Tuple([call_13575,call_13577,call_13593,const_13592,call_13596,])
func_13607 = relay.Function([], output)
mod['func_13607'] = func_13607
mod = relay.transform.InferType()(mod)
output = func_13607()
func_13608 = relay.Function([], output)
mutated_mod['func_13608'] = func_13608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11485_call = mod.get_global_var('func_11485')
func_11486_call = mutated_mod.get_global_var('func_11486')
call_13633 = relay.TupleGetItem(func_11485_call(), 0)
call_13634 = relay.TupleGetItem(func_11486_call(), 0)
func_12712_call = mod.get_global_var('func_12712')
func_12714_call = mutated_mod.get_global_var('func_12714')
call_13635 = relay.TupleGetItem(func_12712_call(), 0)
call_13636 = relay.TupleGetItem(func_12714_call(), 0)
func_8035_call = mod.get_global_var('func_8035')
func_8037_call = mutated_mod.get_global_var('func_8037')
var_13645 = relay.var("var_13645", dtype = "bool", shape = (180,))#candidate|13645|(180,)|var|bool
call_13644 = func_8035_call(relay.reshape(var_13645.astype('bool'), [12, 15, 1]))
call_13646 = func_8035_call(relay.reshape(var_13645.astype('bool'), [12, 15, 1]))
output = relay.Tuple([call_13633,call_13635,call_13644,var_13645,])
output2 = relay.Tuple([call_13634,call_13636,call_13646,var_13645,])
func_13647 = relay.Function([var_13645,], output)
mod['func_13647'] = func_13647
mod = relay.transform.InferType()(mod)
var_13648 = relay.var("var_13648", dtype = "bool", shape = (180,))#candidate|13648|(180,)|var|bool
output = func_13647(var_13648)
func_13649 = relay.Function([var_13648], output)
mutated_mod['func_13649'] = func_13649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2106_call = mod.get_global_var('func_2106')
func_2107_call = mutated_mod.get_global_var('func_2107')
call_13744 = relay.TupleGetItem(func_2106_call(), 2)
call_13745 = relay.TupleGetItem(func_2107_call(), 2)
output = relay.Tuple([call_13744,])
output2 = relay.Tuple([call_13745,])
func_13748 = relay.Function([], output)
mod['func_13748'] = func_13748
mod = relay.transform.InferType()(mod)
mutated_mod['func_13748'] = func_13748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13748_call = mutated_mod.get_global_var('func_13748')
call_13749 = func_13748_call()
output = call_13749
func_13750 = relay.Function([], output)
mutated_mod['func_13750'] = func_13750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11733_call = mod.get_global_var('func_11733')
func_11735_call = mutated_mod.get_global_var('func_11735')
call_13793 = relay.TupleGetItem(func_11733_call(), 0)
call_13794 = relay.TupleGetItem(func_11735_call(), 0)
func_3325_call = mod.get_global_var('func_3325')
func_3327_call = mutated_mod.get_global_var('func_3327')
var_13798 = relay.var("var_13798", dtype = "uint16", shape = (3360,))#candidate|13798|(3360,)|var|uint16
call_13797 = relay.TupleGetItem(func_3325_call(relay.reshape(var_13798.astype('uint16'), [3360,])), 0)
call_13799 = relay.TupleGetItem(func_3327_call(relay.reshape(var_13798.astype('uint16'), [3360,])), 0)
func_12060_call = mod.get_global_var('func_12060')
func_12062_call = mutated_mod.get_global_var('func_12062')
call_13800 = relay.TupleGetItem(func_12060_call(), 1)
call_13801 = relay.TupleGetItem(func_12062_call(), 1)
func_6451_call = mod.get_global_var('func_6451')
func_6453_call = mutated_mod.get_global_var('func_6453')
call_13810 = relay.TupleGetItem(func_6451_call(), 1)
call_13811 = relay.TupleGetItem(func_6453_call(), 1)
func_5924_call = mod.get_global_var('func_5924')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_13814 = func_5924_call()
call_13815 = func_5924_call()
func_2645_call = mod.get_global_var('func_2645')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_13833 = relay.TupleGetItem(func_2645_call(), 0)
call_13834 = relay.TupleGetItem(func_2647_call(), 0)
output = relay.Tuple([call_13793,call_13797,var_13798,call_13800,call_13810,call_13814,call_13833,])
output2 = relay.Tuple([call_13794,call_13799,var_13798,call_13801,call_13811,call_13815,call_13834,])
func_13848 = relay.Function([var_13798,], output)
mod['func_13848'] = func_13848
mod = relay.transform.InferType()(mod)
mutated_mod['func_13848'] = func_13848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13849 = relay.var("var_13849", dtype = "uint16", shape = (3360,))#candidate|13849|(3360,)|var|uint16
func_13848_call = mutated_mod.get_global_var('func_13848')
call_13850 = func_13848_call(var_13849)
output = call_13850
func_13851 = relay.Function([var_13849], output)
mutated_mod['func_13851'] = func_13851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10934_call = mod.get_global_var('func_10934')
func_10936_call = mutated_mod.get_global_var('func_10936')
call_13947 = relay.TupleGetItem(func_10934_call(), 0)
call_13948 = relay.TupleGetItem(func_10936_call(), 0)
func_2106_call = mod.get_global_var('func_2106')
func_2107_call = mutated_mod.get_global_var('func_2107')
call_13967 = relay.TupleGetItem(func_2106_call(), 2)
call_13968 = relay.TupleGetItem(func_2107_call(), 2)
func_9220_call = mod.get_global_var('func_9220')
func_9221_call = mutated_mod.get_global_var('func_9221')
call_13975 = relay.TupleGetItem(func_9220_call(), 1)
call_13976 = relay.TupleGetItem(func_9221_call(), 1)
output = relay.Tuple([call_13947,call_13967,call_13975,])
output2 = relay.Tuple([call_13948,call_13968,call_13976,])
func_13994 = relay.Function([], output)
mod['func_13994'] = func_13994
mod = relay.transform.InferType()(mod)
output = func_13994()
func_13995 = relay.Function([], output)
mutated_mod['func_13995'] = func_13995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7364_call = mod.get_global_var('func_7364')
func_7365_call = mutated_mod.get_global_var('func_7365')
call_14025 = func_7364_call()
call_14026 = func_7364_call()
output = relay.Tuple([call_14025,])
output2 = relay.Tuple([call_14026,])
func_14036 = relay.Function([], output)
mod['func_14036'] = func_14036
mod = relay.transform.InferType()(mod)
mutated_mod['func_14036'] = func_14036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14036_call = mutated_mod.get_global_var('func_14036')
call_14037 = func_14036_call()
output = call_14037
func_14038 = relay.Function([], output)
mutated_mod['func_14038'] = func_14038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mod.get_global_var('func_3884')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_14058 = relay.TupleGetItem(func_3884_call(), 0)
call_14059 = relay.TupleGetItem(func_3886_call(), 0)
output = relay.Tuple([call_14058,])
output2 = relay.Tuple([call_14059,])
func_14064 = relay.Function([], output)
mod['func_14064'] = func_14064
mod = relay.transform.InferType()(mod)
mutated_mod['func_14064'] = func_14064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14064_call = mutated_mod.get_global_var('func_14064')
call_14065 = func_14064_call()
output = call_14065
func_14066 = relay.Function([], output)
mutated_mod['func_14066'] = func_14066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_773_call = mutated_mod.get_global_var('func_773')
call_14141 = relay.TupleGetItem(func_772_call(), 0)
call_14142 = relay.TupleGetItem(func_773_call(), 0)
output = call_14141
output2 = call_14142
func_14158 = relay.Function([], output)
mod['func_14158'] = func_14158
mod = relay.transform.InferType()(mod)
mutated_mod['func_14158'] = func_14158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14158_call = mutated_mod.get_global_var('func_14158')
call_14159 = func_14158_call()
output = call_14159
func_14160 = relay.Function([], output)
mutated_mod['func_14160'] = func_14160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8289_call = mod.get_global_var('func_8289')
func_8290_call = mutated_mod.get_global_var('func_8290')
call_14174 = relay.TupleGetItem(func_8289_call(), 5)
call_14175 = relay.TupleGetItem(func_8290_call(), 5)
output = call_14174
output2 = call_14175
func_14178 = relay.Function([], output)
mod['func_14178'] = func_14178
mod = relay.transform.InferType()(mod)
mutated_mod['func_14178'] = func_14178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14178_call = mutated_mod.get_global_var('func_14178')
call_14179 = func_14178_call()
output = call_14179
func_14180 = relay.Function([], output)
mutated_mod['func_14180'] = func_14180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_14193 = relay.TupleGetItem(func_1012_call(), 0)
call_14194 = relay.TupleGetItem(func_1014_call(), 0)
func_748_call = mod.get_global_var('func_748')
func_750_call = mutated_mod.get_global_var('func_750')
call_14200 = func_748_call(relay.reshape(call_14193.astype('int32'), [6, 11, 14]))
call_14201 = func_748_call(relay.reshape(call_14193.astype('int32'), [6, 11, 14]))
output = relay.Tuple([call_14193,call_14200,])
output2 = relay.Tuple([call_14194,call_14201,])
func_14219 = relay.Function([], output)
mod['func_14219'] = func_14219
mod = relay.transform.InferType()(mod)
mutated_mod['func_14219'] = func_14219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14219_call = mutated_mod.get_global_var('func_14219')
call_14220 = func_14219_call()
output = call_14220
func_14221 = relay.Function([], output)
mutated_mod['func_14221'] = func_14221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_14267 = relay.TupleGetItem(func_3940_call(), 5)
call_14268 = relay.TupleGetItem(func_3941_call(), 5)
func_2295_call = mod.get_global_var('func_2295')
func_2297_call = mutated_mod.get_global_var('func_2297')
call_14284 = relay.TupleGetItem(func_2295_call(), 1)
call_14285 = relay.TupleGetItem(func_2297_call(), 1)
output = relay.Tuple([call_14267,call_14284,])
output2 = relay.Tuple([call_14268,call_14285,])
func_14300 = relay.Function([], output)
mod['func_14300'] = func_14300
mod = relay.transform.InferType()(mod)
output = func_14300()
func_14301 = relay.Function([], output)
mutated_mod['func_14301'] = func_14301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13748_call = mod.get_global_var('func_13748')
func_13750_call = mutated_mod.get_global_var('func_13750')
call_14304 = relay.TupleGetItem(func_13748_call(), 0)
call_14305 = relay.TupleGetItem(func_13750_call(), 0)
output = call_14304
output2 = call_14305
func_14329 = relay.Function([], output)
mod['func_14329'] = func_14329
mod = relay.transform.InferType()(mod)
mutated_mod['func_14329'] = func_14329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14329_call = mutated_mod.get_global_var('func_14329')
call_14330 = func_14329_call()
output = call_14330
func_14331 = relay.Function([], output)
mutated_mod['func_14331'] = func_14331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8586_call = mod.get_global_var('func_8586')
func_8588_call = mutated_mod.get_global_var('func_8588')
call_14377 = relay.TupleGetItem(func_8586_call(), 3)
call_14378 = relay.TupleGetItem(func_8588_call(), 3)
output = call_14377
output2 = call_14378
func_14394 = relay.Function([], output)
mod['func_14394'] = func_14394
mod = relay.transform.InferType()(mod)
output = func_14394()
func_14395 = relay.Function([], output)
mutated_mod['func_14395'] = func_14395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_14495 = relay.TupleGetItem(func_3940_call(), 3)
call_14496 = relay.TupleGetItem(func_3941_call(), 3)
func_1264_call = mod.get_global_var('func_1264')
func_1265_call = mutated_mod.get_global_var('func_1265')
call_14520 = relay.TupleGetItem(func_1264_call(), 0)
call_14521 = relay.TupleGetItem(func_1265_call(), 0)
output = relay.Tuple([call_14495,call_14520,])
output2 = relay.Tuple([call_14496,call_14521,])
func_14526 = relay.Function([], output)
mod['func_14526'] = func_14526
mod = relay.transform.InferType()(mod)
output = func_14526()
func_14527 = relay.Function([], output)
mutated_mod['func_14527'] = func_14527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6010_call = mod.get_global_var('func_6010')
func_6012_call = mutated_mod.get_global_var('func_6012')
call_14543 = relay.TupleGetItem(func_6010_call(), 1)
call_14544 = relay.TupleGetItem(func_6012_call(), 1)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_14547 = relay.TupleGetItem(func_2467_call(), 2)
call_14548 = relay.TupleGetItem(func_2468_call(), 2)
func_8133_call = mod.get_global_var('func_8133')
func_8134_call = mutated_mod.get_global_var('func_8134')
call_14572 = relay.TupleGetItem(func_8133_call(), 0)
call_14573 = relay.TupleGetItem(func_8134_call(), 0)
output = relay.Tuple([call_14543,call_14547,call_14572,])
output2 = relay.Tuple([call_14544,call_14548,call_14573,])
func_14576 = relay.Function([], output)
mod['func_14576'] = func_14576
mod = relay.transform.InferType()(mod)
mutated_mod['func_14576'] = func_14576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14576_call = mutated_mod.get_global_var('func_14576')
call_14577 = func_14576_call()
output = call_14577
func_14578 = relay.Function([], output)
mutated_mod['func_14578'] = func_14578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8024_call = mod.get_global_var('func_8024')
func_8026_call = mutated_mod.get_global_var('func_8026')
call_14584 = func_8024_call()
call_14585 = func_8024_call()
func_10047_call = mod.get_global_var('func_10047')
func_10049_call = mutated_mod.get_global_var('func_10049')
call_14610 = relay.TupleGetItem(func_10047_call(), 3)
call_14611 = relay.TupleGetItem(func_10049_call(), 3)
output = relay.Tuple([call_14584,call_14610,])
output2 = relay.Tuple([call_14585,call_14611,])
func_14628 = relay.Function([], output)
mod['func_14628'] = func_14628
mod = relay.transform.InferType()(mod)
mutated_mod['func_14628'] = func_14628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14628_call = mutated_mod.get_global_var('func_14628')
call_14629 = func_14628_call()
output = call_14629
func_14630 = relay.Function([], output)
mutated_mod['func_14630'] = func_14630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14394_call = mod.get_global_var('func_14394')
func_14395_call = mutated_mod.get_global_var('func_14395')
call_14711 = func_14394_call()
call_14712 = func_14394_call()
output = relay.Tuple([call_14711,])
output2 = relay.Tuple([call_14712,])
func_14737 = relay.Function([], output)
mod['func_14737'] = func_14737
mod = relay.transform.InferType()(mod)
output = func_14737()
func_14738 = relay.Function([], output)
mutated_mod['func_14738'] = func_14738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5503_call = mod.get_global_var('func_5503')
func_5504_call = mutated_mod.get_global_var('func_5504')
call_14779 = func_5503_call()
call_14780 = func_5503_call()
func_10549_call = mod.get_global_var('func_10549')
func_10551_call = mutated_mod.get_global_var('func_10551')
call_14797 = func_10549_call()
call_14798 = func_10549_call()
output = relay.Tuple([call_14779,call_14797,])
output2 = relay.Tuple([call_14780,call_14798,])
func_14812 = relay.Function([], output)
mod['func_14812'] = func_14812
mod = relay.transform.InferType()(mod)
mutated_mod['func_14812'] = func_14812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14812_call = mutated_mod.get_global_var('func_14812')
call_14813 = func_14812_call()
output = call_14813
func_14814 = relay.Function([], output)
mutated_mod['func_14814'] = func_14814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9325_call = mod.get_global_var('func_9325')
func_9327_call = mutated_mod.get_global_var('func_9327')
call_14864 = relay.TupleGetItem(func_9325_call(), 2)
call_14865 = relay.TupleGetItem(func_9327_call(), 2)
func_11485_call = mod.get_global_var('func_11485')
func_11486_call = mutated_mod.get_global_var('func_11486')
call_14876 = relay.TupleGetItem(func_11485_call(), 0)
call_14877 = relay.TupleGetItem(func_11486_call(), 0)
output = relay.Tuple([call_14864,call_14876,])
output2 = relay.Tuple([call_14865,call_14877,])
func_14886 = relay.Function([], output)
mod['func_14886'] = func_14886
mod = relay.transform.InferType()(mod)
mutated_mod['func_14886'] = func_14886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14886_call = mutated_mod.get_global_var('func_14886')
call_14887 = func_14886_call()
output = call_14887
func_14888 = relay.Function([], output)
mutated_mod['func_14888'] = func_14888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8434_call = mod.get_global_var('func_8434')
func_8436_call = mutated_mod.get_global_var('func_8436')
call_14924 = relay.TupleGetItem(func_8434_call(), 0)
call_14925 = relay.TupleGetItem(func_8436_call(), 0)
func_14329_call = mod.get_global_var('func_14329')
func_14331_call = mutated_mod.get_global_var('func_14331')
call_14928 = func_14329_call()
call_14929 = func_14329_call()
output = relay.Tuple([call_14924,call_14928,])
output2 = relay.Tuple([call_14925,call_14929,])
func_14932 = relay.Function([], output)
mod['func_14932'] = func_14932
mod = relay.transform.InferType()(mod)
mutated_mod['func_14932'] = func_14932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14932_call = mutated_mod.get_global_var('func_14932')
call_14933 = func_14932_call()
output = call_14933
func_14934 = relay.Function([], output)
mutated_mod['func_14934'] = func_14934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8586_call = mod.get_global_var('func_8586')
func_8588_call = mutated_mod.get_global_var('func_8588')
call_14959 = relay.TupleGetItem(func_8586_call(), 1)
call_14960 = relay.TupleGetItem(func_8588_call(), 1)
output = call_14959
output2 = call_14960
func_14967 = relay.Function([], output)
mod['func_14967'] = func_14967
mod = relay.transform.InferType()(mod)
output = func_14967()
func_14968 = relay.Function([], output)
mutated_mod['func_14968'] = func_14968
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14996 = relay.var("var_14996", dtype = "bool", shape = ())#candidate|14996|()|var|bool
var_14997 = relay.var("var_14997", dtype = "bool", shape = (1, 11, 10))#candidate|14997|(1, 11, 10)|var|bool
bop_14998 = relay.logical_or(var_14996.astype('bool'), var_14997.astype('bool')) # shape=(1, 11, 10)
bop_15002 = relay.multiply(var_14996.astype('uint64'), var_14997.astype('uint64')) # shape=(1, 11, 10)
bop_15012 = relay.power(bop_15002.astype('float32'), var_14996.astype('float32')) # shape=(1, 11, 10)
output = relay.Tuple([bop_14998,bop_15012,])
output2 = relay.Tuple([bop_14998,bop_15012,])
func_15017 = relay.Function([var_14996,var_14997,], output)
mod['func_15017'] = func_15017
mod = relay.transform.InferType()(mod)
var_15018 = relay.var("var_15018", dtype = "bool", shape = ())#candidate|15018|()|var|bool
var_15019 = relay.var("var_15019", dtype = "bool", shape = (1, 11, 10))#candidate|15019|(1, 11, 10)|var|bool
output = func_15017(var_15018,var_15019,)
func_15020 = relay.Function([var_15018,var_15019,], output)
mutated_mod['func_15020'] = func_15020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6426_call = mod.get_global_var('func_6426')
func_6428_call = mutated_mod.get_global_var('func_6428')
call_15049 = relay.TupleGetItem(func_6426_call(), 0)
call_15050 = relay.TupleGetItem(func_6428_call(), 0)
output = call_15049
output2 = call_15050
func_15059 = relay.Function([], output)
mod['func_15059'] = func_15059
mod = relay.transform.InferType()(mod)
output = func_15059()
func_15060 = relay.Function([], output)
mutated_mod['func_15060'] = func_15060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6505_call = mod.get_global_var('func_6505')
func_6506_call = mutated_mod.get_global_var('func_6506')
call_15072 = relay.TupleGetItem(func_6505_call(), 1)
call_15073 = relay.TupleGetItem(func_6506_call(), 1)
output = call_15072
output2 = call_15073
func_15090 = relay.Function([], output)
mod['func_15090'] = func_15090
mod = relay.transform.InferType()(mod)
output = func_15090()
func_15091 = relay.Function([], output)
mutated_mod['func_15091'] = func_15091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11219_call = mod.get_global_var('func_11219')
func_11221_call = mutated_mod.get_global_var('func_11221')
call_15211 = relay.TupleGetItem(func_11219_call(), 0)
call_15212 = relay.TupleGetItem(func_11221_call(), 0)
output = relay.Tuple([call_15211,])
output2 = relay.Tuple([call_15212,])
func_15243 = relay.Function([], output)
mod['func_15243'] = func_15243
mod = relay.transform.InferType()(mod)
output = func_15243()
func_15244 = relay.Function([], output)
mutated_mod['func_15244'] = func_15244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mod.get_global_var('func_3347')
func_3348_call = mutated_mod.get_global_var('func_3348')
call_15305 = func_3347_call()
call_15306 = func_3347_call()
func_11733_call = mod.get_global_var('func_11733')
func_11735_call = mutated_mod.get_global_var('func_11735')
call_15312 = relay.TupleGetItem(func_11733_call(), 1)
call_15313 = relay.TupleGetItem(func_11735_call(), 1)
output = relay.Tuple([call_15305,call_15312,])
output2 = relay.Tuple([call_15306,call_15313,])
func_15314 = relay.Function([], output)
mod['func_15314'] = func_15314
mod = relay.transform.InferType()(mod)
mutated_mod['func_15314'] = func_15314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15314_call = mutated_mod.get_global_var('func_15314')
call_15315 = func_15314_call()
output = call_15315
func_15316 = relay.Function([], output)
mutated_mod['func_15316'] = func_15316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10390_call = mod.get_global_var('func_10390')
func_10391_call = mutated_mod.get_global_var('func_10391')
call_15343 = relay.TupleGetItem(func_10390_call(), 1)
call_15344 = relay.TupleGetItem(func_10391_call(), 1)
func_5557_call = mod.get_global_var('func_5557')
func_5559_call = mutated_mod.get_global_var('func_5559')
call_15349 = func_5557_call()
call_15350 = func_5557_call()
output = relay.Tuple([call_15343,call_15349,])
output2 = relay.Tuple([call_15344,call_15350,])
func_15369 = relay.Function([], output)
mod['func_15369'] = func_15369
mod = relay.transform.InferType()(mod)
mutated_mod['func_15369'] = func_15369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15369_call = mutated_mod.get_global_var('func_15369')
call_15370 = func_15369_call()
output = call_15370
func_15371 = relay.Function([], output)
mutated_mod['func_15371'] = func_15371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3591_call = mod.get_global_var('func_3591')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_15387 = func_3591_call()
call_15388 = func_3591_call()
func_12712_call = mod.get_global_var('func_12712')
func_12714_call = mutated_mod.get_global_var('func_12714')
call_15402 = relay.TupleGetItem(func_12712_call(), 0)
call_15403 = relay.TupleGetItem(func_12714_call(), 0)
var_15410 = relay.var("var_15410", dtype = "uint64", shape = (420, 8))#candidate|15410|(420, 8)|var|uint64
bop_15411 = relay.floor_mod(call_15387.astype('float64'), relay.reshape(var_15410.astype('float64'), relay.shape_of(call_15387))) # shape=(420, 8)
bop_15414 = relay.floor_mod(call_15388.astype('float64'), relay.reshape(var_15410.astype('float64'), relay.shape_of(call_15388))) # shape=(420, 8)
output = relay.Tuple([call_15402,bop_15411,])
output2 = relay.Tuple([call_15403,bop_15414,])
func_15416 = relay.Function([var_15410,], output)
mod['func_15416'] = func_15416
mod = relay.transform.InferType()(mod)
var_15417 = relay.var("var_15417", dtype = "uint64", shape = (420, 8))#candidate|15417|(420, 8)|var|uint64
output = func_15416(var_15417)
func_15418 = relay.Function([var_15417], output)
mutated_mod['func_15418'] = func_15418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_773_call = mutated_mod.get_global_var('func_773')
call_15443 = relay.TupleGetItem(func_772_call(), 0)
call_15444 = relay.TupleGetItem(func_773_call(), 0)
func_5781_call = mod.get_global_var('func_5781')
func_5782_call = mutated_mod.get_global_var('func_5782')
call_15445 = relay.TupleGetItem(func_5781_call(), 1)
call_15446 = relay.TupleGetItem(func_5782_call(), 1)
output = relay.Tuple([call_15443,call_15445,])
output2 = relay.Tuple([call_15444,call_15446,])
func_15492 = relay.Function([], output)
mod['func_15492'] = func_15492
mod = relay.transform.InferType()(mod)
output = func_15492()
func_15493 = relay.Function([], output)
mutated_mod['func_15493'] = func_15493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5820_call = mod.get_global_var('func_5820')
func_5821_call = mutated_mod.get_global_var('func_5821')
call_15527 = relay.TupleGetItem(func_5820_call(), 0)
call_15528 = relay.TupleGetItem(func_5821_call(), 0)
func_6044_call = mod.get_global_var('func_6044')
func_6045_call = mutated_mod.get_global_var('func_6045')
call_15599 = relay.TupleGetItem(func_6044_call(), 0)
call_15600 = relay.TupleGetItem(func_6045_call(), 0)
func_5533_call = mod.get_global_var('func_5533')
func_5535_call = mutated_mod.get_global_var('func_5535')
call_15612 = relay.TupleGetItem(func_5533_call(), 1)
call_15613 = relay.TupleGetItem(func_5535_call(), 1)
func_11279_call = mod.get_global_var('func_11279')
func_11280_call = mutated_mod.get_global_var('func_11280')
call_15622 = relay.TupleGetItem(func_11279_call(), 0)
call_15623 = relay.TupleGetItem(func_11280_call(), 0)
output = relay.Tuple([call_15527,call_15599,call_15612,call_15622,])
output2 = relay.Tuple([call_15528,call_15600,call_15613,call_15623,])
func_15668 = relay.Function([], output)
mod['func_15668'] = func_15668
mod = relay.transform.InferType()(mod)
output = func_15668()
func_15669 = relay.Function([], output)
mutated_mod['func_15669'] = func_15669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7101_call = mod.get_global_var('func_7101')
func_7103_call = mutated_mod.get_global_var('func_7103')
call_15685 = relay.TupleGetItem(func_7101_call(), 0)
call_15686 = relay.TupleGetItem(func_7103_call(), 0)
output = call_15685
output2 = call_15686
func_15690 = relay.Function([], output)
mod['func_15690'] = func_15690
mod = relay.transform.InferType()(mod)
output = func_15690()
func_15691 = relay.Function([], output)
mutated_mod['func_15691'] = func_15691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7540_call = mod.get_global_var('func_7540')
func_7542_call = mutated_mod.get_global_var('func_7542')
call_15700 = relay.TupleGetItem(func_7540_call(), 1)
call_15701 = relay.TupleGetItem(func_7542_call(), 1)
output = relay.Tuple([call_15700,])
output2 = relay.Tuple([call_15701,])
func_15721 = relay.Function([], output)
mod['func_15721'] = func_15721
mod = relay.transform.InferType()(mod)
output = func_15721()
func_15722 = relay.Function([], output)
mutated_mod['func_15722'] = func_15722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8991_call = mod.get_global_var('func_8991')
func_8992_call = mutated_mod.get_global_var('func_8992')
call_15822 = relay.TupleGetItem(func_8991_call(), 0)
call_15823 = relay.TupleGetItem(func_8992_call(), 0)
func_14300_call = mod.get_global_var('func_14300')
func_14301_call = mutated_mod.get_global_var('func_14301')
call_15837 = relay.TupleGetItem(func_14300_call(), 1)
call_15838 = relay.TupleGetItem(func_14301_call(), 1)
output = relay.Tuple([call_15822,call_15837,])
output2 = relay.Tuple([call_15823,call_15838,])
func_15854 = relay.Function([], output)
mod['func_15854'] = func_15854
mod = relay.transform.InferType()(mod)
mutated_mod['func_15854'] = func_15854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15854_call = mutated_mod.get_global_var('func_15854')
call_15855 = func_15854_call()
output = call_15855
func_15856 = relay.Function([], output)
mutated_mod['func_15856'] = func_15856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10287_call = mod.get_global_var('func_10287')
func_10288_call = mutated_mod.get_global_var('func_10288')
call_15903 = relay.TupleGetItem(func_10287_call(), 0)
call_15904 = relay.TupleGetItem(func_10288_call(), 0)
func_4715_call = mod.get_global_var('func_4715')
func_4716_call = mutated_mod.get_global_var('func_4716')
call_15905 = relay.TupleGetItem(func_4715_call(), 1)
call_15906 = relay.TupleGetItem(func_4716_call(), 1)
output = relay.Tuple([call_15903,call_15905,])
output2 = relay.Tuple([call_15904,call_15906,])
func_15910 = relay.Function([], output)
mod['func_15910'] = func_15910
mod = relay.transform.InferType()(mod)
output = func_15910()
func_15911 = relay.Function([], output)
mutated_mod['func_15911'] = func_15911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11331_call = mod.get_global_var('func_11331')
func_11333_call = mutated_mod.get_global_var('func_11333')
call_16052 = func_11331_call()
call_16053 = func_11331_call()
output = call_16052
output2 = call_16053
func_16054 = relay.Function([], output)
mod['func_16054'] = func_16054
mod = relay.transform.InferType()(mod)
mutated_mod['func_16054'] = func_16054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16054_call = mutated_mod.get_global_var('func_16054')
call_16055 = func_16054_call()
output = call_16055
func_16056 = relay.Function([], output)
mutated_mod['func_16056'] = func_16056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3296_call = mod.get_global_var('func_3296')
func_3298_call = mutated_mod.get_global_var('func_3298')
call_16068 = relay.TupleGetItem(func_3296_call(), 1)
call_16069 = relay.TupleGetItem(func_3298_call(), 1)
func_7266_call = mod.get_global_var('func_7266')
func_7268_call = mutated_mod.get_global_var('func_7268')
call_16082 = relay.TupleGetItem(func_7266_call(), 1)
call_16083 = relay.TupleGetItem(func_7268_call(), 1)
func_9898_call = mod.get_global_var('func_9898')
func_9901_call = mutated_mod.get_global_var('func_9901')
const_16091 = relay.const([8.098972,3.940813,-2.142085,-8.228135,-1.735399,-3.542018,9.515169,4.113356,1.409059,-1.080178,-5.040242,-2.847320,6.766362,5.489530,5.035073,-3.780354,7.021019,3.948864,-6.815512,5.187755,1.788506,8.164156,9.859868,1.339158,3.325539,-8.209097,6.241861,0.388459,-2.755131,-3.714934,-4.815151,0.263809,-6.553735,2.546575,-2.452239,6.221111,-2.124233,8.745408,3.715026,9.069629,-7.165156,-8.325845,-4.398880,-0.974721,-8.774931,-4.875188,9.572426,-1.617441,-2.276736,-4.313512,0.244468,2.297978,2.633993,7.543398,6.764142,4.944786,-5.942414,3.453526,1.463972,7.478527,-6.662317,-8.234628,5.292882,-7.752324,7.924602,9.038937,-3.453639,-4.395524,9.501467,9.450151,-3.334736,-6.097192,-2.731372,1.763681,-3.991028,-4.407977,4.021851,-7.170950,1.806163,-4.113736,-2.181246,6.214658,-8.726094,-0.703080,1.896212,-4.850929,-1.684172,-5.198872,8.435075,7.094410,8.707343,-5.450776,-8.634283,9.261417,6.495570,-8.579103,3.728092,8.552733,-2.520441,5.195620,9.923724,0.278243,3.952090,-8.082868,-0.280625,-4.558403,9.659362,-7.189423,9.873112,-2.379830,9.910237,-6.135450,-6.595440,0.123246,7.522096,2.924872,-4.042364,8.982074,-7.961867,-2.739167,0.574108,-7.005289,-1.145465,-7.249299,8.709803,-4.028857,-8.831758,4.426331,-0.103008,1.417411,-7.196888,-6.537216,7.576283,-5.769959,-1.616213,-9.670120,7.769802,-5.446638,9.064254,4.025977,8.714706,-0.635282,8.210549,4.559569,-3.353963,1.807758,2.075792,9.916829,6.933718,-8.076483,7.875869,2.448295,-2.387221,-0.931284,0.119386,-8.916659,2.098288,-3.099713,-0.146920,5.624727,-3.406692,9.397361,-5.334193,-7.497553,-8.849517,3.969264,-7.978211,-3.755942,9.467476,-3.488916,1.144017,9.761110,5.190967,2.339224,7.477588,-1.267663,1.248860,0.761153,1.150740,-2.938681,6.763873,5.404234,-0.676617,-7.844291,-1.853769,-9.657065,3.459834,-3.299902,9.015044,-0.575361,-5.054592,-5.899463,8.872362,-4.996637,-5.014590,-8.143963,-6.990328,4.193683,-8.476682,-6.517028,-0.655801,-0.351348,5.475088,5.313650,-8.061769,0.199793,-1.179407,-3.449211,-7.196922,-2.205552,0.939318,-5.026445,-5.313285,0.458908,6.947654,6.822717,-7.328282,2.393358,9.216612,6.469613,-5.096292,-8.034018,-7.159764,-6.469841,1.211832,0.429467,-5.216772,2.558926,0.189168,8.559866,-9.427328,2.164303,-3.083397,-9.671608,7.163342,3.492912,1.774362,-6.101751,-3.809679,-3.571300,-3.383472,7.271942,9.863085,6.924830,6.157719,3.431690,-9.791043,-9.596753,2.776525,-8.549681,-3.691857,-5.269082,5.016396,-1.909081,-7.985144,-9.476789,-3.078450,2.768149,-5.499750,4.169592,6.422423,0.986196,1.623898,-7.605892,7.287554,8.654986,-4.924468,9.546033,-8.571365,4.417549,-4.750849,5.762086,0.082978,-5.776779,-6.295312,1.582720,-5.700206,1.717070,7.840922,-1.199877,-0.664180,-5.447909,4.370353,-9.034551,9.153252,-7.007666,0.733298,0.449646,-8.444014,-5.101304,2.642059,-8.318129,6.186120,9.567367,4.669178,2.997325,1.259216,-4.948155,7.622563,-3.922228,0.026382,-9.960123,9.400494,5.841571,1.109075,-7.866758,-2.153628,-8.648603,-9.686389,-8.005483,1.357701,5.018769,1.887419,8.621732,-6.492843,-7.117849,1.648019,4.878212,-0.435655,-6.811384,-2.316908,-5.739345,-6.272694,-8.707347,-8.733577,-4.922705,-6.136147,-1.745636,-2.229301,-6.911117,1.731610,-2.250981,1.057567,4.747761,-0.929407,4.654114,-2.975542,7.796976,-2.387958,7.217727,-8.812894,-7.756275,6.224843,7.033264,4.097914,4.940507,-7.734153,2.875960,2.306085,0.786760,-3.235316,-3.698712,-5.936729,6.056349,-6.994054,1.578118,6.850647,6.491356,-1.356845,-3.878245,1.151892,-7.192097,7.242598,4.370643,8.234195,-3.868962,-8.181165,-1.449385,7.403338,6.395454,5.963970,-6.894740,7.105481,0.060583,-3.980593,2.784433,4.527009,5.898298,0.456299,3.581042,5.728615,-0.546733,5.410654,-5.393159,2.602495,-5.674287,-3.994894,1.398847,-1.650859,4.215953,-4.030588,-5.893439,7.743906,-8.916270,4.004384,5.194120,0.042763,-9.713568,-4.299301,5.783462,-1.030255,-1.764546,6.832920,-0.377979,6.495761,-8.552613,-0.412824,2.150924,6.421388,-3.446116,-7.870077,1.481513,-8.691751,-5.723265,0.864126,-3.973152,8.914266,-8.593723,-2.360595,-0.652883,1.189854,1.267588,-2.201582,1.861631,-1.250156,-7.907035,5.130349,-1.392026,4.043444,-0.275640,6.799824,-4.086366,-4.104015,1.098706,-7.052127,-0.798115,-5.053098,2.052151,-8.956547,-2.517602,6.400040,8.610048,4.715119,-4.894358,-9.281164,2.263966,6.805735,-9.344742,-0.507137,-6.569407,-4.832195,-2.343497,-7.486623,6.744651,-6.063160,0.638219,-4.712112,-8.309624,-1.377806,-9.767586,-4.813385,-0.560399,4.983383,5.614056,-4.547905,-8.324340,-4.381847,-4.426440,9.388415,0.339903,2.515867,8.745901,-7.820805,5.622692,-8.167445,3.019926,4.973931,-7.909100,3.946884,3.226671,4.870903,-3.782198,-1.368664,-9.694196,-6.195369,-8.702116,-9.930809,1.607078,8.455203,9.298601,-7.053637,-1.395873,5.252504,-2.862873,-5.641254,-7.512236,-5.997011,1.143803,7.511924,-8.713079,-8.116371,-5.359522,-4.286955,8.531881,-8.953341,1.743124,3.265814,3.090887,-6.602069,1.843852,0.789486,-2.543336,-4.330471,-0.651848,6.192590,0.204067,7.710202,-1.719994,8.523537,-9.665826,-9.299666,-7.162186,1.081738,-6.830748,-5.739279,1.433043,-7.317757,7.400784,5.970215,-3.501615,-5.259374,-9.149493,2.883957,2.213612,-6.523816,9.353399,7.113316,5.816111,8.097910,-7.226780], dtype = "float32")#candidate|16091|(540,)|const|float32
call_16090 = relay.TupleGetItem(func_9898_call(relay.reshape(const_16091.astype('float32'), [6, 6, 15])), 1)
call_16092 = relay.TupleGetItem(func_9901_call(relay.reshape(const_16091.astype('float32'), [6, 6, 15])), 1)
output = relay.Tuple([call_16068,call_16082,call_16090,const_16091,])
output2 = relay.Tuple([call_16069,call_16083,call_16092,const_16091,])
func_16100 = relay.Function([], output)
mod['func_16100'] = func_16100
mod = relay.transform.InferType()(mod)
output = func_16100()
func_16101 = relay.Function([], output)
mutated_mod['func_16101'] = func_16101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5533_call = mod.get_global_var('func_5533')
func_5535_call = mutated_mod.get_global_var('func_5535')
call_16119 = relay.TupleGetItem(func_5533_call(), 1)
call_16120 = relay.TupleGetItem(func_5535_call(), 1)
func_748_call = mod.get_global_var('func_748')
func_750_call = mutated_mod.get_global_var('func_750')
const_16130 = relay.const([7,-9,-6,-6,-10,5,1,-9,2,-6,-4,8,-9,-10,-10,-8,-10,-3,1,-7,6,2,-10,2,10,10,7,7,3,-3,-10,-1,-8,-7,6,2,8,9,5,-1,-9,3,2,-4,-7,7,-9,-8,-5,-8,10,4,5,7,5,7,10,-4,9,-7,-4,-6,5,10,10,2,7,8,-9,4,-5,-10,10,-9,-1,-7,-3,9,-6,9,-6,-4,8,7,-8,-3,-1,-10,-8,-1,-5,5,-1,5,3,3,-6,-4,-10,-2,-1,3,-8,4,2,-5,6,-5,4,4,6,7,-4,-4,4,-5,1,-9,-1,-4,-2,9,1,-5,-4,4,-8,-1,4,7,1,2,-1,10,-6,4,3,6,-7,-1,-1,2,6,2,-9,5,-2,-10,10,5,-4,5,-4,3,3,-4,-7,-4,10,-10,-6,6,3,-10,-8,8,4,1,-4,1,6,-2,2,5,-3,-10,1,-6,6,5,1,-7,-9,-4,1,-10,9,-2,-9,4,2,-10,1,-7,-2,-10,8,-7,-4,-7,4,-3,-3,-7,-2,6,-6,6,2,4,-6,4,-2,10,-2,4,-6,3,10,2,3,-7,-4,-8,-8,8,-9,-9,-5,-8,6,7,6,1,-1,1,3,-5,-1,-3,5,3,6,-4,9,-2,-3,8,10,-9,-4,-5,6,-4,-10,4,-8,9,8,-9,-3,-3,1,-6,-1,-9,5,2,5,6,2,-1,8,-8,-3,-5,-9,5,-2,-8,5,-9,-3,-2,8,-4,-10,5,-6,4,10,-8,-2,7,-3,8,-4,10,2,8,10,2,-8,5,10,5,-3,-8,-5,10,2,6,6,7,-8,10,6,5,1,-10,-1,10,10,-8,5,-3,-7,4,6,1,-6,-1,5,8,6,-6,5,-3,-5,1,1,6,-6,-1,-4,6,7,2,-3,-7,-10,-8,-8,1,-5,3,10,-6,-2,7,-3,-5,2,2,10,4,2,-5,4,6,-10,-5,-10,5,10,-9,-8,-1,4,4,3,-1,10,7,-4,3,-2,4,-1,-6,-4,-4,-9,-3,-8,-6,4,6,-5,-8,-6,3,-1,-1,-8,3,-2,-6,-2,4,5,3,-7,-3,-3,-9,4,-8,1,-7,-6,2,-7,-9,-7,-9,10,10,-2,-8,-4,4,1,2,3,10,10,-7,2,6,-6,-10,8,6,4,4,10,-7,4,-2,1,-6,8,7,-9,7,-9,-6,10,-6,-5,-4,2,8,3,3,-4,4,-4,9,-4,-1,-7,10,8,-4,10,-7,-1,8,-5,-9,-2,10,-4,9,9,-10,8,6,8,8,7,-10,-10,-2,1,-5,-4,7,6,-7,6,3,-9,-10,6,7,-3,2,5,-8,7,9,8,1,-2,9,8,-1,-1,-8,-1,8,1,-7,4,-5,9,-4,8,1,4,7,3,2,3,9,-2,7,-9,-4,-10,-5,10,5,5,-9,7,-2,6,-4,-4,2,-2,-3,-5,-5,3,3,-9,5,-6,2,2,4,10,8,1,-1,-1,5,9,-9,9,-8,-4,-10,-7,6,8,9,9,3,-7,4,-9,2,-8,2,6,-4,3,3,-8,-1,-10,-4,6,-9,-2,-3,-4,8,-7,-9,-10,-3,9,-5,4,3,6,3,5,-7,6,7,-4,-4,-7,3,-10,-2,-2,-7,-3,-10,-10,-1,4,-1,7,-2,4,1,1,-9,-10,-9,10,-9,-8,1,2,10,-3,6,-10,-2,-4,-6,-7,-5,9,-9,4,1,-9,-8,6,6,-1,-9,3,-7,-4,-4,-9,-10,-5,-7,-1,10,1,-10,8,-6,8,-1,-9,-10,1,-6,2,-1,8,-7,6,-8,5,-6,2,1,-7,3,-1,9,-4,6,-2,7,7,-9,-1,-2,5,-7,-9,-8,-1,2,-5,-5,9,-7,8,-1,7,-8,8,-3,7,1,2,-2,-2,6,9,-6,-3,-9,6,8,3,2,-7,4,6,-9,5,-1,8,-4,-1,5,-5,4,4,5,-9,9,-1,-7,-8,-7,-8,10,8,-2,6,2,10,1,8,-3,4,-1,5,-3,-8,6,9,-1,1,5,-1,-7,2,8,7,-7,5,5,9,5,-6,-3,-8,-5,10,-6,-6,-5,-2,-10,-4,7,6,1,10,5,8,5,4,5,-10,8,-6,6,-4,7,3,1,-8,7,8,-5,1,2,-8,1,10,3,10,3,6,-6,-6,8,-9,1,8,6,6,5,7,-1,7,2,-5,-5,-5,-10,8,-2,-5,-8,10,2,-2,-9,7,7,-8,-1,-3,4,7,-6,1,6,2,-9,-8,8,2,-10,-9,-2,3,10,2,-4,5,8,10,4,-7,-6,-5,-4,2,-5,8,-6,3,-9,-9,3,-4,1,-4,8,7,-4,-8,9,-10,-9,-2,-3,2,-9,4,-4,-3,-2,2,-8,-4,9,-1,-10,-3,-1,-7,-1,6,-9,-3,9,-9,-3], dtype = "int32")#candidate|16130|(924,)|const|int32
call_16129 = func_748_call(relay.reshape(const_16130.astype('int32'), [6, 11, 14]))
call_16131 = func_748_call(relay.reshape(const_16130.astype('int32'), [6, 11, 14]))
func_5924_call = mod.get_global_var('func_5924')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_16155 = func_5924_call()
call_16156 = func_5924_call()
output = relay.Tuple([call_16119,call_16129,const_16130,call_16155,])
output2 = relay.Tuple([call_16120,call_16131,const_16130,call_16156,])
func_16161 = relay.Function([], output)
mod['func_16161'] = func_16161
mod = relay.transform.InferType()(mod)
output = func_16161()
func_16162 = relay.Function([], output)
mutated_mod['func_16162'] = func_16162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16236 = relay.var("var_16236", dtype = "float32", shape = (9, 7, 15))#candidate|16236|(9, 7, 15)|var|float32
uop_16237 = relay.asinh(var_16236.astype('float32')) # shape=(9, 7, 15)
func_6872_call = mod.get_global_var('func_6872')
func_6873_call = mutated_mod.get_global_var('func_6873')
call_16244 = func_6872_call()
call_16245 = func_6872_call()
func_4058_call = mod.get_global_var('func_4058')
func_4060_call = mutated_mod.get_global_var('func_4060')
call_16265 = relay.TupleGetItem(func_4058_call(), 3)
call_16266 = relay.TupleGetItem(func_4060_call(), 3)
func_10549_call = mod.get_global_var('func_10549')
func_10551_call = mutated_mod.get_global_var('func_10551')
call_16272 = func_10549_call()
call_16273 = func_10549_call()
func_2866_call = mod.get_global_var('func_2866')
func_2868_call = mutated_mod.get_global_var('func_2868')
call_16276 = relay.TupleGetItem(func_2866_call(), 3)
call_16277 = relay.TupleGetItem(func_2868_call(), 3)
func_9898_call = mod.get_global_var('func_9898')
func_9901_call = mutated_mod.get_global_var('func_9901')
const_16279 = relay.const([3.732332,-1.449034,2.470773,3.578782,-5.256656,6.841561,0.616303,-2.171638,7.733928,-0.744918,8.119593,4.590160,7.038995,3.935701,-3.583587,-3.494568,9.166191,1.150421,-1.614810,-0.558371,-6.537799,0.546051,5.350310,8.132031,-5.155704,-1.546987,7.666021,-3.334644,-1.301304,3.374032,-4.858699,8.011793,5.318353,4.554571,1.964566,-4.471696,1.603240,5.881946,8.223498,-0.702348,9.989023,7.319502,-8.835953,1.412780,2.603646,-9.486822,-5.874393,8.010590,-1.747281,-0.700951,5.534535,0.757822,-0.444985,5.688391,7.697603,2.136807,-8.548938,9.261298,-0.701153,9.164975,-8.312852,-8.734988,2.328073,-9.225085,-8.147586,-3.450611,9.834078,-2.310203,-5.383061,6.920623,1.709200,-1.067868,9.967338,5.016635,-5.639494,2.888332,-4.665996,-3.032327,4.156897,0.767133,1.313901,2.734055,-8.798545,-8.958138,2.384512,-0.412379,-6.019677,-6.505283,7.789101,-0.521224,3.772274,-1.319690,2.557969,7.354174,5.276022,-8.971802,-4.423465,7.538487,2.723858,-4.406107,3.149355,-6.266394,0.911914,5.035393,-8.301845,2.618324,2.029471,9.951184,-3.655048,8.560387,5.877275,-7.659838,-8.546005,-7.393553,4.311925,-3.911345,-9.014531,-2.994362,-9.111388,-8.600683,1.450305,-2.646974,9.076668,8.124369,-4.934450,0.843671,-9.770988,-1.859404,6.647306,2.515970,7.457231,3.666419,-2.852720,5.786575,2.623861,5.974261,5.993075,7.621910,6.377507,-7.282351,4.492646,7.288990,9.888723,-0.403474,6.584143,5.638338,-8.410604,-9.317476,3.344219,5.116552,0.508062,5.709081,-5.223768,1.824632,-4.591277,7.312382,8.214077,1.397709,-1.834691,9.483380,9.056366,-5.627847,3.792949,-6.502785,6.554389,2.077319,-9.640886,9.185960,2.833876,-9.746954,9.628764,0.163833,4.925406,3.025566,8.352198,7.118403,-2.175348,-8.896431,-2.934554,-7.058030,-8.932035,-3.466630,-5.362064,9.665422,-1.199598,7.620808,2.753493,-8.913365,-6.405824,0.230934,-8.361007,-1.222906,-0.946738,-3.731353,-7.402339,-9.703241,-5.417637,9.674492,5.175759,-8.406534,4.168588,2.531303,-8.077043,0.774055,4.188153,-0.052633,2.116675,-8.627997,8.298088,-3.234748,6.973203,-2.668886,5.036208,9.807841,-8.428240,-3.790383,0.415078,9.198268,7.560645,-6.154620,7.291078,-7.170655,-5.782358,-1.158771,9.490447,4.385344,-9.511878,-4.122813,8.134692,-8.441544,1.313827,4.216743,-5.338410,-5.269223,5.976515,-7.252990,-4.192912,0.567525,-0.748893,-6.743092,-7.754926,-8.918318,-5.931833,-1.228814,-1.122342,5.347584,3.411097,0.281890,0.097666,2.157561,-2.233086,9.063626,-5.877621,7.711213,3.661959,-3.489867,8.970449,-6.022077,8.939136,-4.982962,4.297993,9.347932,-5.981486,-7.412839,8.868927,3.430479,9.994051,-1.262351,1.808776,-8.254783,5.989569,7.372053,-0.729896,-0.577004,-3.088296,9.974052,8.581364,8.321618,5.160900,9.699091,7.553596,2.701624,-8.765899,9.130914,9.764349,-0.362487,-8.966800,-7.032765,8.734809,4.224499,6.343896,2.868868,3.058343,-4.589979,-5.440827,5.277130,-2.577089,-5.920270,-6.770537,0.101042,-9.117313,9.698101,8.246954,1.735138,-6.413151,-8.734485,9.828938,-9.244963,-7.593291,-2.307745,3.611472,3.591057,-1.881448,-6.953634,8.241797,-2.916209,9.150811,-2.862346,7.352895,0.198975,-7.851311,0.486504,9.192671,5.008431,8.152075,-2.913462,3.793387,-5.149729,5.267389,4.015681,-1.692077,-2.050773,8.345800,-2.285950,-7.272850,-2.715623,-6.835102,7.449185,-7.141241,9.840418,-7.955106,-7.424368,6.180229,0.579701,9.299190,6.296146,-5.161447,8.669125,1.393994,0.382975,8.233249,-2.643052,7.406929,9.127608,-4.076795,1.533669,-1.004230,6.590971,3.553525,-6.556174,7.623245,-4.591878,-0.414635,9.363977,-0.136277,4.159422,-4.089905,9.892777,8.370763,2.382063,7.957062,-6.477482,-8.582577,-1.769229,-0.005823,-6.271687,-2.730435,-5.193170,-0.058686,-6.180777,-8.136883,-3.157888,-0.992748,-4.585422,-7.054466,1.700384,6.627896,4.491022,9.126695,7.027061,0.731888,8.666886,-7.186641,-5.137402,7.289424,0.262557,-1.740359,6.661245,5.728112,6.091903,5.421823,-6.271379,-4.755133,4.846277,6.069441,-0.874506,-3.825524,-8.277431,6.976963,-7.596052,-6.690503,-7.490680,1.295783,9.591447,1.638718,7.163223,5.218676,6.656855,1.715355,-3.207710,0.698572,8.682463,-3.792537,2.733875,-0.244360,0.815444,1.343408,-8.330473,7.842997,-4.572018,-0.642885,4.101233,9.319230,3.530416,7.292969,8.632485,-5.505380,3.470108,-7.526880,-0.549488,-4.972336,4.437990,0.909150,-3.089150,5.227479,-7.300710,-9.229575,-6.484246,-9.656225,6.343949,7.200047,6.891698,1.720938,-5.808159,1.429992,9.332222,-0.983694,4.993477,-2.140430,-8.191761,-8.716647,9.662100,7.293966,-9.790723,9.880751,9.896364,-1.013391,6.418994,5.356179,-5.049993,-7.451675,-1.590770,-6.047466,1.731434,-8.626391,2.931041,-5.264448,7.578121,-8.674606,4.961185,1.006191,-6.818118,2.168755,-9.862813,6.846669,0.544722,-0.863016,9.527421,-6.964245,8.092994,-2.703262,5.372361,2.266396,-1.018614,9.778045,9.498243,7.306183,-9.141833,2.888767,6.236348,6.960567,7.261421,8.151820,3.164910,4.516291,-5.853228,9.979456,-1.208375,-0.678161,-9.044956,-7.745479,9.099394,4.131266,2.106029,-7.551561,3.372154,4.647612,7.663241,4.575158,-3.675976,5.033371,0.887899,0.946638,9.232501,-6.839449,9.461283,9.163942,-5.615230,-9.383172,-9.624096,4.837587,2.602685,-9.680314,0.804044,5.587239,-2.413994,-7.685205,8.558939,8.356976,4.838899], dtype = "float32")#candidate|16279|(540,)|const|float32
call_16278 = relay.TupleGetItem(func_9898_call(relay.reshape(const_16279.astype('float32'), [6, 6, 15])), 0)
call_16280 = relay.TupleGetItem(func_9901_call(relay.reshape(const_16279.astype('float32'), [6, 6, 15])), 0)
output = relay.Tuple([uop_16237,call_16244,call_16265,call_16272,call_16276,call_16278,const_16279,])
output2 = relay.Tuple([uop_16237,call_16245,call_16266,call_16273,call_16277,call_16280,const_16279,])
func_16285 = relay.Function([var_16236,], output)
mod['func_16285'] = func_16285
mod = relay.transform.InferType()(mod)
var_16286 = relay.var("var_16286", dtype = "float32", shape = (9, 7, 15))#candidate|16286|(9, 7, 15)|var|float32
output = func_16285(var_16286)
func_16287 = relay.Function([var_16286], output)
mutated_mod['func_16287'] = func_16287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15059_call = mod.get_global_var('func_15059')
func_15060_call = mutated_mod.get_global_var('func_15060')
call_16293 = func_15059_call()
call_16294 = func_15059_call()
func_7174_call = mod.get_global_var('func_7174')
func_7178_call = mutated_mod.get_global_var('func_7178')
const_16359 = relay.const(-6.167309, dtype = "float32")#candidate|16359|()|const|float32
var_16360 = relay.var("var_16360", dtype = "float32", shape = (5, 150))#candidate|16360|(5, 150)|var|float32
call_16358 = relay.TupleGetItem(func_7174_call(relay.reshape(const_16359.astype('float32'), []), relay.reshape(var_16360.astype('float32'), [5, 10, 15]), ), 0)
call_16361 = relay.TupleGetItem(func_7178_call(relay.reshape(const_16359.astype('float32'), []), relay.reshape(var_16360.astype('float32'), [5, 10, 15]), ), 0)
bop_16371 = relay.multiply(var_16360.astype('uint64'), const_16359.astype('uint64')) # shape=(5, 150)
output = relay.Tuple([call_16293,call_16358,bop_16371,])
output2 = relay.Tuple([call_16294,call_16361,bop_16371,])
func_16378 = relay.Function([var_16360,], output)
mod['func_16378'] = func_16378
mod = relay.transform.InferType()(mod)
mutated_mod['func_16378'] = func_16378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16379 = relay.var("var_16379", dtype = "float32", shape = (5, 150))#candidate|16379|(5, 150)|var|float32
func_16378_call = mutated_mod.get_global_var('func_16378')
call_16380 = func_16378_call(var_16379)
output = call_16380
func_16381 = relay.Function([var_16379], output)
mutated_mod['func_16381'] = func_16381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9092_call = mod.get_global_var('func_9092')
func_9093_call = mutated_mod.get_global_var('func_9093')
call_16450 = relay.TupleGetItem(func_9092_call(), 1)
call_16451 = relay.TupleGetItem(func_9093_call(), 1)
output = call_16450
output2 = call_16451
func_16468 = relay.Function([], output)
mod['func_16468'] = func_16468
mod = relay.transform.InferType()(mod)
output = func_16468()
func_16469 = relay.Function([], output)
mutated_mod['func_16469'] = func_16469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9786_call = mod.get_global_var('func_9786')
func_9787_call = mutated_mod.get_global_var('func_9787')
call_16470 = func_9786_call()
call_16471 = func_9786_call()
output = relay.Tuple([call_16470,])
output2 = relay.Tuple([call_16471,])
func_16477 = relay.Function([], output)
mod['func_16477'] = func_16477
mod = relay.transform.InferType()(mod)
output = func_16477()
func_16478 = relay.Function([], output)
mutated_mod['func_16478'] = func_16478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_16485 = relay.TupleGetItem(func_7714_call(), 1)
call_16486 = relay.TupleGetItem(func_7715_call(), 1)
output = call_16485
output2 = call_16486
func_16489 = relay.Function([], output)
mod['func_16489'] = func_16489
mod = relay.transform.InferType()(mod)
output = func_16489()
func_16490 = relay.Function([], output)
mutated_mod['func_16490'] = func_16490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13036_call = mod.get_global_var('func_13036')
func_13037_call = mutated_mod.get_global_var('func_13037')
call_16545 = relay.TupleGetItem(func_13036_call(), 1)
call_16546 = relay.TupleGetItem(func_13037_call(), 1)
output = relay.Tuple([call_16545,])
output2 = relay.Tuple([call_16546,])
func_16554 = relay.Function([], output)
mod['func_16554'] = func_16554
mod = relay.transform.InferType()(mod)
mutated_mod['func_16554'] = func_16554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16554_call = mutated_mod.get_global_var('func_16554')
call_16555 = func_16554_call()
output = call_16555
func_16556 = relay.Function([], output)
mutated_mod['func_16556'] = func_16556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10047_call = mod.get_global_var('func_10047')
func_10049_call = mutated_mod.get_global_var('func_10049')
call_16557 = relay.TupleGetItem(func_10047_call(), 0)
call_16558 = relay.TupleGetItem(func_10049_call(), 0)
output = call_16557
output2 = call_16558
func_16574 = relay.Function([], output)
mod['func_16574'] = func_16574
mod = relay.transform.InferType()(mod)
mutated_mod['func_16574'] = func_16574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16574_call = mutated_mod.get_global_var('func_16574')
call_16575 = func_16574_call()
output = call_16575
func_16576 = relay.Function([], output)
mutated_mod['func_16576'] = func_16576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5290_call = mod.get_global_var('func_5290')
func_5292_call = mutated_mod.get_global_var('func_5292')
call_16595 = relay.TupleGetItem(func_5290_call(), 0)
call_16596 = relay.TupleGetItem(func_5292_call(), 0)
func_15090_call = mod.get_global_var('func_15090')
func_15091_call = mutated_mod.get_global_var('func_15091')
call_16603 = func_15090_call()
call_16604 = func_15090_call()
func_14394_call = mod.get_global_var('func_14394')
func_14395_call = mutated_mod.get_global_var('func_14395')
call_16621 = func_14394_call()
call_16622 = func_14394_call()
func_9371_call = mod.get_global_var('func_9371')
func_9372_call = mutated_mod.get_global_var('func_9372')
call_16634 = relay.TupleGetItem(func_9371_call(), 0)
call_16635 = relay.TupleGetItem(func_9372_call(), 0)
output = relay.Tuple([call_16595,call_16603,call_16621,call_16634,])
output2 = relay.Tuple([call_16596,call_16604,call_16622,call_16635,])
func_16646 = relay.Function([], output)
mod['func_16646'] = func_16646
mod = relay.transform.InferType()(mod)
output = func_16646()
func_16647 = relay.Function([], output)
mutated_mod['func_16647'] = func_16647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8434_call = mod.get_global_var('func_8434')
func_8436_call = mutated_mod.get_global_var('func_8436')
call_16772 = relay.TupleGetItem(func_8434_call(), 0)
call_16773 = relay.TupleGetItem(func_8436_call(), 0)
output = call_16772
output2 = call_16773
func_16782 = relay.Function([], output)
mod['func_16782'] = func_16782
mod = relay.transform.InferType()(mod)
output = func_16782()
func_16783 = relay.Function([], output)
mutated_mod['func_16783'] = func_16783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14886_call = mod.get_global_var('func_14886')
func_14888_call = mutated_mod.get_global_var('func_14888')
call_16928 = relay.TupleGetItem(func_14886_call(), 1)
call_16929 = relay.TupleGetItem(func_14888_call(), 1)
func_13324_call = mod.get_global_var('func_13324')
func_13325_call = mutated_mod.get_global_var('func_13325')
call_16930 = relay.TupleGetItem(func_13324_call(), 1)
call_16931 = relay.TupleGetItem(func_13325_call(), 1)
func_5376_call = mod.get_global_var('func_5376')
func_5378_call = mutated_mod.get_global_var('func_5378')
call_16944 = relay.TupleGetItem(func_5376_call(), 0)
call_16945 = relay.TupleGetItem(func_5378_call(), 0)
func_7675_call = mod.get_global_var('func_7675')
func_7676_call = mutated_mod.get_global_var('func_7676')
call_16946 = relay.TupleGetItem(func_7675_call(), 1)
call_16947 = relay.TupleGetItem(func_7676_call(), 1)
output = relay.Tuple([call_16928,call_16930,call_16944,call_16946,])
output2 = relay.Tuple([call_16929,call_16931,call_16945,call_16947,])
func_16951 = relay.Function([], output)
mod['func_16951'] = func_16951
mod = relay.transform.InferType()(mod)
output = func_16951()
func_16952 = relay.Function([], output)
mutated_mod['func_16952'] = func_16952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5290_call = mod.get_global_var('func_5290')
func_5292_call = mutated_mod.get_global_var('func_5292')
call_16964 = relay.TupleGetItem(func_5290_call(), 0)
call_16965 = relay.TupleGetItem(func_5292_call(), 0)
output = relay.Tuple([call_16964,])
output2 = relay.Tuple([call_16965,])
func_16974 = relay.Function([], output)
mod['func_16974'] = func_16974
mod = relay.transform.InferType()(mod)
output = func_16974()
func_16975 = relay.Function([], output)
mutated_mod['func_16975'] = func_16975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7364_call = mod.get_global_var('func_7364')
func_7365_call = mutated_mod.get_global_var('func_7365')
call_16988 = func_7364_call()
call_16989 = func_7364_call()
output = call_16988
output2 = call_16989
func_17019 = relay.Function([], output)
mod['func_17019'] = func_17019
mod = relay.transform.InferType()(mod)
output = func_17019()
func_17020 = relay.Function([], output)
mutated_mod['func_17020'] = func_17020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6872_call = mod.get_global_var('func_6872')
func_6873_call = mutated_mod.get_global_var('func_6873')
call_17027 = func_6872_call()
call_17028 = func_6872_call()
func_12712_call = mod.get_global_var('func_12712')
func_12714_call = mutated_mod.get_global_var('func_12714')
call_17050 = relay.TupleGetItem(func_12712_call(), 0)
call_17051 = relay.TupleGetItem(func_12714_call(), 0)
output = relay.Tuple([call_17027,call_17050,])
output2 = relay.Tuple([call_17028,call_17051,])
func_17073 = relay.Function([], output)
mod['func_17073'] = func_17073
mod = relay.transform.InferType()(mod)
output = func_17073()
func_17074 = relay.Function([], output)
mutated_mod['func_17074'] = func_17074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10549_call = mod.get_global_var('func_10549')
func_10551_call = mutated_mod.get_global_var('func_10551')
call_17098 = func_10549_call()
call_17099 = func_10549_call()
output = relay.Tuple([call_17098,])
output2 = relay.Tuple([call_17099,])
func_17100 = relay.Function([], output)
mod['func_17100'] = func_17100
mod = relay.transform.InferType()(mod)
output = func_17100()
func_17101 = relay.Function([], output)
mutated_mod['func_17101'] = func_17101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8586_call = mod.get_global_var('func_8586')
func_8588_call = mutated_mod.get_global_var('func_8588')
call_17181 = relay.TupleGetItem(func_8586_call(), 4)
call_17182 = relay.TupleGetItem(func_8588_call(), 4)
func_13994_call = mod.get_global_var('func_13994')
func_13995_call = mutated_mod.get_global_var('func_13995')
call_17203 = relay.TupleGetItem(func_13994_call(), 2)
call_17204 = relay.TupleGetItem(func_13995_call(), 2)
func_9273_call = mod.get_global_var('func_9273')
func_9275_call = mutated_mod.get_global_var('func_9275')
call_17232 = relay.TupleGetItem(func_9273_call(), 0)
call_17233 = relay.TupleGetItem(func_9275_call(), 0)
func_8956_call = mod.get_global_var('func_8956')
func_8958_call = mutated_mod.get_global_var('func_8958')
call_17244 = relay.TupleGetItem(func_8956_call(), 2)
call_17245 = relay.TupleGetItem(func_8958_call(), 2)
output = relay.Tuple([call_17181,call_17203,call_17232,call_17244,])
output2 = relay.Tuple([call_17182,call_17204,call_17233,call_17245,])
func_17251 = relay.Function([], output)
mod['func_17251'] = func_17251
mod = relay.transform.InferType()(mod)
output = func_17251()
func_17252 = relay.Function([], output)
mutated_mod['func_17252'] = func_17252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10205_call = mod.get_global_var('func_10205')
func_10206_call = mutated_mod.get_global_var('func_10206')
call_17286 = func_10205_call()
call_17287 = func_10205_call()
output = call_17286
output2 = call_17287
func_17290 = relay.Function([], output)
mod['func_17290'] = func_17290
mod = relay.transform.InferType()(mod)
output = func_17290()
func_17291 = relay.Function([], output)
mutated_mod['func_17291'] = func_17291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10934_call = mod.get_global_var('func_10934')
func_10936_call = mutated_mod.get_global_var('func_10936')
call_17307 = relay.TupleGetItem(func_10934_call(), 0)
call_17308 = relay.TupleGetItem(func_10936_call(), 0)
output = call_17307
output2 = call_17308
func_17330 = relay.Function([], output)
mod['func_17330'] = func_17330
mod = relay.transform.InferType()(mod)
mutated_mod['func_17330'] = func_17330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17330_call = mutated_mod.get_global_var('func_17330')
call_17331 = func_17330_call()
output = call_17331
func_17332 = relay.Function([], output)
mutated_mod['func_17332'] = func_17332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3003_call = mod.get_global_var('func_3003')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_17335 = relay.TupleGetItem(func_3003_call(), 0)
call_17336 = relay.TupleGetItem(func_3004_call(), 0)
func_8067_call = mod.get_global_var('func_8067')
func_8069_call = mutated_mod.get_global_var('func_8069')
call_17346 = relay.TupleGetItem(func_8067_call(), 0)
call_17347 = relay.TupleGetItem(func_8069_call(), 0)
func_8808_call = mod.get_global_var('func_8808')
func_8810_call = mutated_mod.get_global_var('func_8810')
call_17349 = relay.TupleGetItem(func_8808_call(), 0)
call_17350 = relay.TupleGetItem(func_8810_call(), 0)
output = relay.Tuple([call_17335,call_17346,call_17349,])
output2 = relay.Tuple([call_17336,call_17347,call_17350,])
func_17361 = relay.Function([], output)
mod['func_17361'] = func_17361
mod = relay.transform.InferType()(mod)
output = func_17361()
func_17362 = relay.Function([], output)
mutated_mod['func_17362'] = func_17362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10662_call = mod.get_global_var('func_10662')
func_10664_call = mutated_mod.get_global_var('func_10664')
call_17403 = relay.TupleGetItem(func_10662_call(), 2)
call_17404 = relay.TupleGetItem(func_10664_call(), 2)
output = relay.Tuple([call_17403,])
output2 = relay.Tuple([call_17404,])
func_17409 = relay.Function([], output)
mod['func_17409'] = func_17409
mod = relay.transform.InferType()(mod)
mutated_mod['func_17409'] = func_17409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17409_call = mutated_mod.get_global_var('func_17409')
call_17410 = func_17409_call()
output = call_17410
func_17411 = relay.Function([], output)
mutated_mod['func_17411'] = func_17411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12165_call = mod.get_global_var('func_12165')
func_12166_call = mutated_mod.get_global_var('func_12166')
call_17416 = relay.TupleGetItem(func_12165_call(), 0)
call_17417 = relay.TupleGetItem(func_12166_call(), 0)
uop_17420 = relay.erf(call_17416.astype('float64')) # shape=(840, 4)
uop_17422 = relay.erf(call_17417.astype('float64')) # shape=(840, 4)
output = relay.Tuple([uop_17420,])
output2 = relay.Tuple([uop_17422,])
func_17425 = relay.Function([], output)
mod['func_17425'] = func_17425
mod = relay.transform.InferType()(mod)
output = func_17425()
func_17426 = relay.Function([], output)
mutated_mod['func_17426'] = func_17426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7442_call = mod.get_global_var('func_7442')
func_7443_call = mutated_mod.get_global_var('func_7443')
call_17429 = relay.TupleGetItem(func_7442_call(), 0)
call_17430 = relay.TupleGetItem(func_7443_call(), 0)
output = call_17429
output2 = call_17430
func_17443 = relay.Function([], output)
mod['func_17443'] = func_17443
mod = relay.transform.InferType()(mod)
output = func_17443()
func_17444 = relay.Function([], output)
mutated_mod['func_17444'] = func_17444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15314_call = mod.get_global_var('func_15314')
func_15316_call = mutated_mod.get_global_var('func_15316')
call_17468 = relay.TupleGetItem(func_15314_call(), 1)
call_17469 = relay.TupleGetItem(func_15316_call(), 1)
func_11733_call = mod.get_global_var('func_11733')
func_11735_call = mutated_mod.get_global_var('func_11735')
call_17475 = relay.TupleGetItem(func_11733_call(), 0)
call_17476 = relay.TupleGetItem(func_11735_call(), 0)
output = relay.Tuple([call_17468,call_17475,])
output2 = relay.Tuple([call_17469,call_17476,])
func_17478 = relay.Function([], output)
mod['func_17478'] = func_17478
mod = relay.transform.InferType()(mod)
output = func_17478()
func_17479 = relay.Function([], output)
mutated_mod['func_17479'] = func_17479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13023_call = mod.get_global_var('func_13023')
func_13025_call = mutated_mod.get_global_var('func_13025')
call_17485 = relay.TupleGetItem(func_13023_call(), 0)
call_17486 = relay.TupleGetItem(func_13025_call(), 0)
output = call_17485
output2 = call_17486
func_17517 = relay.Function([], output)
mod['func_17517'] = func_17517
mod = relay.transform.InferType()(mod)
mutated_mod['func_17517'] = func_17517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17517_call = mutated_mod.get_global_var('func_17517')
call_17518 = func_17517_call()
output = call_17518
func_17519 = relay.Function([], output)
mutated_mod['func_17519'] = func_17519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14628_call = mod.get_global_var('func_14628')
func_14630_call = mutated_mod.get_global_var('func_14630')
call_17589 = relay.TupleGetItem(func_14628_call(), 1)
call_17590 = relay.TupleGetItem(func_14630_call(), 1)
output = call_17589
output2 = call_17590
func_17594 = relay.Function([], output)
mod['func_17594'] = func_17594
mod = relay.transform.InferType()(mod)
mutated_mod['func_17594'] = func_17594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17594_call = mutated_mod.get_global_var('func_17594')
call_17595 = func_17594_call()
output = call_17595
func_17596 = relay.Function([], output)
mutated_mod['func_17596'] = func_17596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11279_call = mod.get_global_var('func_11279')
func_11280_call = mutated_mod.get_global_var('func_11280')
call_17640 = relay.TupleGetItem(func_11279_call(), 1)
call_17641 = relay.TupleGetItem(func_11280_call(), 1)
output = call_17640
output2 = call_17641
func_17643 = relay.Function([], output)
mod['func_17643'] = func_17643
mod = relay.transform.InferType()(mod)
mutated_mod['func_17643'] = func_17643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17643_call = mutated_mod.get_global_var('func_17643')
call_17644 = func_17643_call()
output = call_17644
func_17645 = relay.Function([], output)
mutated_mod['func_17645'] = func_17645
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17651 = relay.var("var_17651", dtype = "float32", shape = (14, 7, 5))#candidate|17651|(14, 7, 5)|var|float32
uop_17652 = relay.sigmoid(var_17651.astype('float32')) # shape=(14, 7, 5)
output = uop_17652
output2 = uop_17652
F = relay.Function([var_17651,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_17651,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

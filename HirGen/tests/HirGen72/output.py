import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_173 = relay.const([[[8,-2,-3,-10,2,10,4,-2,-4,-4,4,9,-5,-4,8,-2],[1,7,-7,-8,-4,3,-4,1,-6,2,-3,7,-7,-10,8,-1],[-8,-2,5,5,10,7,5,-1,-5,2,-5,7,-1,-7,10,7],[-6,6,8,-1,1,4,10,-8,10,4,-10,-7,9,-9,4,1],[-4,-3,8,3,-4,7,4,-10,7,2,-6,-8,7,-7,3,2],[5,-2,-9,-2,3,8,5,4,3,-9,6,-3,-7,5,8,-1],[-3,6,9,-9,-7,2,7,6,-3,-7,4,-4,-10,-5,6,-1],[-9,3,5,10,10,-6,9,5,6,-3,-3,3,5,4,-4,-2],[-4,-10,-6,-2,2,3,9,3,1,-8,-4,10,9,-1,-10,5],[-10,2,-5,4,4,9,5,-1,-10,1,-9,3,4,2,-9,-8],[4,-4,-6,-8,-6,-8,-1,-7,7,4,10,6,3,8,5,-10],[-5,9,7,-4,4,-3,-10,-7,2,-2,1,6,4,-8,7,-9],[4,-4,3,3,-9,-4,1,-5,-5,5,3,-1,-3,-9,7,-5],[-3,-2,-6,-8,3,5,5,5,4,-7,-1,-7,5,7,1,-3],[-10,5,-3,-2,-4,10,-6,9,-5,1,5,2,-2,-4,-8,1]],[[5,3,-8,-2,-3,-2,-7,9,9,10,7,-6,1,-6,-8,-7],[3,-8,-7,3,-5,7,6,-6,7,1,-9,5,-6,9,7,4],[5,1,4,-2,-7,-1,-6,-9,4,-8,-6,5,3,-3,-9,10],[-3,-6,3,6,-6,4,-5,-6,3,-5,7,1,3,8,-5,6],[9,4,1,-1,-8,-10,10,-3,-9,1,8,4,8,-3,-2,8],[2,-1,-2,9,-9,-3,2,1,-6,-7,-6,6,-3,-6,8,6],[6,3,2,-9,9,-10,-10,4,5,10,10,-7,7,-2,7,-4],[-7,-4,9,10,3,-8,-10,9,-4,7,7,1,-7,-10,10,1],[3,6,9,7,-5,7,9,-3,4,-9,5,-6,2,1,2,-1],[7,4,-3,-8,-9,-8,-10,3,2,-7,-3,-3,1,-1,4,-7],[-7,-7,-3,1,-9,-10,9,-2,-7,-9,-6,-7,4,9,10,-1],[8,-7,4,-10,-4,-1,-6,-3,-6,5,-5,-8,-10,9,4,7],[9,-2,2,5,4,1,10,3,10,-7,-10,-6,-3,-2,-6,-10],[5,-9,4,4,-1,-8,-3,-9,10,-8,3,5,-10,5,-8,-2],[-7,-1,-6,-8,2,-7,10,-7,-2,-3,8,10,-6,3,-2,-8]],[[-7,-1,-4,7,-9,-2,-10,9,4,4,-1,10,-3,-1,10,-7],[8,8,-9,9,-1,6,2,3,9,-9,-4,-10,-6,4,-2,-2],[9,4,7,7,-4,9,-8,3,-10,2,5,-2,2,-6,-9,5],[-10,-9,2,-7,8,-4,8,6,4,-3,9,-2,5,5,8,-5],[9,-5,7,9,8,2,3,-4,-7,7,-6,6,7,-5,-1,3],[-4,3,10,7,-5,4,8,-6,8,-10,2,-6,-7,-6,-1,8],[-7,7,3,7,-4,6,10,-8,5,1,-3,-10,7,-9,-5,6],[-10,-3,-8,8,9,5,-8,-8,-10,-2,-5,3,8,-2,1,-9],[2,3,-10,3,7,-1,-10,7,7,3,2,1,10,-3,1,3],[3,5,-6,-5,4,-9,-6,-4,-8,4,-5,-9,10,5,3,-7],[3,-2,-8,-4,-4,7,-3,-4,10,-10,4,-7,9,-6,-1,1],[-4,-2,9,-5,3,6,4,5,-7,-8,-2,5,-8,-8,-3,2],[-3,10,-2,-6,8,1,1,6,2,-8,9,-10,6,8,8,-9],[-6,-2,3,-5,1,2,3,1,-4,-2,4,-1,-9,-10,-9,-7],[-7,5,-8,-10,6,2,-2,7,-3,10,-8,-8,2,-3,8,-7]],[[-8,4,1,-6,7,-8,-10,-6,1,-8,9,-7,5,-1,1,-7],[-10,-6,6,8,9,-4,-9,2,6,-1,8,-5,10,-4,-6,2],[2,5,-2,-3,10,-10,8,1,3,-1,9,-4,4,10,8,3],[1,-2,-4,-6,2,3,9,6,-5,-3,-4,3,-4,7,-6,4],[10,-2,10,-9,3,4,6,-6,-8,-7,-5,-10,5,2,8,1],[-1,2,-1,4,3,-10,10,1,-4,-10,-9,7,-10,7,5,7],[1,7,-2,-9,-9,-5,-2,6,-5,4,-1,-7,-10,-10,-2,-10],[6,-8,8,-5,-6,-7,7,6,-2,-5,1,-5,-8,-7,9,5],[5,-8,-1,-4,-1,7,6,9,2,-2,-8,6,-1,-6,10,-10],[5,2,8,4,8,-9,-5,-4,-2,1,-3,-8,2,7,-5,1],[-4,7,8,3,-3,10,-1,-6,-1,5,-6,10,-6,1,3,-3],[-4,9,4,-6,4,-6,10,-10,-8,5,-7,-1,-2,-6,4,-4],[-10,8,4,-10,2,3,-7,-3,7,9,2,9,-2,-1,-2,5],[-7,-5,-1,-1,-2,-4,-7,-6,-4,-8,-4,-2,-2,5,7,10],[-6,-7,2,9,2,5,-2,-2,5,-5,-1,-7,10,-10,3,3]]], dtype = "uint16")#candidate|173|(4, 15, 16)|const|uint16
var_174 = relay.var("var_174", dtype = "uint16", shape = (4, 15, 16))#candidate|174|(4, 15, 16)|var|uint16
bop_175 = relay.maximum(const_173.astype('uint16'), relay.reshape(var_174.astype('uint16'), relay.shape_of(const_173))) # shape=(4, 15, 16)
uop_185 = relay.atan(const_173.astype('float64')) # shape=(4, 15, 16)
uop_187 = relay.sinh(uop_185.astype('float32')) # shape=(4, 15, 16)
output = relay.Tuple([bop_175,uop_187,])
output2 = relay.Tuple([bop_175,uop_187,])
func_219 = relay.Function([var_174,], output)
mod['func_219'] = func_219
mod = relay.transform.InferType()(mod)
var_220 = relay.var("var_220", dtype = "uint16", shape = (4, 15, 16))#candidate|220|(4, 15, 16)|var|uint16
output = func_219(var_220)
func_221 = relay.Function([var_220], output)
mutated_mod['func_221'] = func_221
mutated_mod = relay.transform.InferType()(mutated_mod)
var_486 = relay.var("var_486", dtype = "int64", shape = ())#candidate|486|()|var|int64
const_487 = relay.const([[[-2,-1,-2,-9,7,-9,4,-8,6,-9,6,-8,7],[10,-6,-3,-6,7,9,8,-9,-4,-3,-5,-6,8],[10,-10,3,-4,-3,-9,-3,6,-6,7,1,8,6],[3,-8,5,-8,-4,7,9,-8,10,9,-3,-10,10],[-4,7,2,1,2,9,-2,-10,2,10,2,-3,-4],[7,9,-7,-8,10,-6,-1,8,8,-2,1,-10,5],[-1,-2,-7,10,8,6,4,5,8,10,-7,-7,9],[-4,9,10,10,-6,2,-2,3,-4,3,-9,-9,-8],[-9,5,3,6,3,-3,-9,1,-4,10,10,-6,-7],[-5,-4,-3,7,1,-1,3,5,8,-6,-5,-1,-8],[1,3,9,-4,-8,7,5,7,-7,10,8,-7,-7],[5,-7,7,6,-6,8,9,-7,3,-6,-9,-3,-6],[5,5,6,-9,2,-3,-6,3,-10,-9,-7,-8,3],[6,6,-6,7,-4,1,8,-9,-10,-9,-6,3,6]],[[8,-5,-3,6,4,10,-3,-4,8,-8,10,-2,10],[8,3,-7,9,-3,-2,-2,1,8,8,10,2,3],[-5,3,-2,3,6,-8,2,7,-2,-10,3,-9,-10],[7,9,7,6,1,2,7,6,7,9,-1,5,6],[-9,-8,-5,2,6,8,-9,4,-5,-3,8,-8,-4],[-10,8,6,10,-8,-9,-7,-10,-9,-5,10,5,2],[3,-2,7,-5,-7,-4,-3,2,-3,-8,-5,9,1],[-2,5,10,4,-5,6,-7,1,2,4,-7,-2,-7],[4,-8,9,1,-4,4,-5,-10,-10,-5,-6,6,-10],[6,-10,10,-1,6,10,6,8,-3,-10,5,-8,9],[-7,4,10,1,3,1,-2,5,-4,-6,-4,5,-2],[2,-1,3,-7,-5,-7,4,-10,5,2,3,-5,-8],[10,1,-4,-3,7,2,5,1,-6,1,2,9,9],[9,3,-1,1,-8,-8,-9,-6,-6,-8,2,-4,9]],[[2,9,2,-3,5,9,-7,-10,-7,-9,10,4,4],[2,-3,-5,3,-4,2,-9,3,-5,-6,-7,-6,5],[-4,5,-9,8,-10,-6,-7,-7,8,-7,3,-5,-1],[-1,9,-4,-9,2,8,9,-1,10,-3,-6,-2,-6],[-7,3,3,6,1,6,-8,7,6,-3,-9,6,1],[-5,-5,9,1,-9,-7,-8,-4,8,3,-10,-1,8],[10,-2,-6,-6,-9,4,-9,6,-9,-8,-1,8,2],[-2,1,-3,-6,1,-3,4,4,-3,4,-2,-6,-7],[-7,-10,3,1,4,4,-10,-3,-6,4,8,4,9],[-4,-4,-1,-5,9,-2,1,-6,-7,4,7,8,9],[-1,7,-6,-6,-1,-1,-9,-6,3,-9,4,5,-8],[9,6,-2,-10,-10,8,-9,4,-7,2,-7,3,-4],[-4,7,3,-5,-2,7,-6,8,-2,4,7,-2,7],[6,7,-6,-10,2,9,-2,6,4,-6,-5,1,6]],[[-1,9,-8,-7,-4,6,6,-5,7,5,-9,-3,-3],[-5,8,-2,-2,6,-5,-6,5,-1,10,-5,5,10],[1,9,4,6,-5,-10,9,-6,-10,-1,2,6,-10],[-1,-1,9,6,3,9,-1,-10,-1,10,3,-8,7],[-10,6,-3,5,9,5,-1,5,-2,6,1,10,5],[-3,2,4,10,2,-6,9,-2,-1,7,-4,-6,10],[8,-9,7,-3,-10,1,-7,-7,-3,-10,-3,7,-9],[-8,1,-2,-9,-9,5,-5,1,8,10,-2,-2,-9],[3,4,7,9,-1,7,6,-4,10,-5,-7,8,8],[2,2,6,7,9,3,4,-1,-2,8,5,7,-6],[4,-4,4,2,-7,-1,-8,10,8,-5,-6,-5,7],[2,-3,8,2,10,8,-4,-10,-1,5,2,-5,4],[6,-6,3,-6,-6,-4,8,6,5,1,5,6,3],[-5,4,2,9,2,-5,10,5,-2,7,-9,10,-2]],[[3,-6,5,-5,-1,1,-4,-3,3,2,7,-3,4],[9,-1,10,8,-10,-7,3,9,-9,-9,4,6,-10],[-10,7,4,-7,-8,10,-4,8,5,-1,-5,9,-3],[-6,9,-1,-10,10,-8,-10,7,-10,-10,4,10,-2],[-8,-9,-6,-1,10,3,-4,-3,-1,7,-2,-8,-7],[-10,10,2,-6,8,-5,-8,-2,-6,-3,7,1,-3],[2,7,-6,4,2,-1,-8,-2,-7,-1,-1,-5,3],[2,7,7,9,-9,-1,-8,-1,-3,7,4,-6,-4],[2,-5,5,-9,3,2,-9,6,5,5,2,-5,-3],[-2,5,-8,-7,-2,-8,-5,-6,-4,9,5,3,-10],[-7,-1,-7,9,-1,1,-8,2,-3,-9,-7,3,5],[10,9,-3,6,-7,9,6,-1,-1,9,6,-10,2],[10,-3,-5,-10,-4,3,7,4,-3,9,7,-4,-1],[8,-5,-1,6,-7,9,-7,2,-7,-9,-8,-1,-8]],[[-5,3,-3,9,3,-3,4,-2,-1,7,1,4,-3],[4,-9,2,-7,10,-8,-9,9,-2,4,-5,4,-8],[-4,-5,-5,2,-3,8,1,-9,-6,-2,10,7,7],[-9,-4,8,-1,6,3,-2,4,4,7,-8,4,10],[-3,8,-1,-3,-5,-2,3,2,7,2,-3,1,-4],[7,-9,1,-5,2,-7,-10,3,9,-1,-3,7,4],[-6,2,-3,5,5,2,7,6,8,-6,-8,-10,-8],[-7,-10,2,5,-3,2,-8,4,-9,-5,-4,-10,5],[-5,-7,6,7,7,2,-5,8,-3,-6,-8,7,-9],[6,1,-9,4,1,-2,-8,10,-8,-4,-4,-5,-5],[5,-8,-5,6,-8,6,1,-4,8,1,-5,-4,-7],[8,-1,7,-9,2,9,-1,3,1,-7,-6,-10,-6],[5,-3,-10,-2,-6,-7,-4,-8,-7,2,-10,-1,-9],[-3,-3,1,1,-8,-5,-2,-1,-7,-9,10,7,3]],[[6,-4,2,-1,8,-3,-5,2,3,-4,-4,-9,-7],[-9,2,10,10,10,-3,7,4,2,2,3,9,-8],[-8,8,-8,10,2,6,5,-4,-9,-10,2,2,8],[-9,-5,-10,6,10,6,1,-1,-10,5,7,-6,4],[-10,3,-4,-3,-1,-1,2,2,3,-5,-2,-3,10],[10,-8,5,-3,-6,-1,7,3,-3,-1,-4,-10,-1],[4,1,5,-10,-6,-10,3,5,6,-8,-1,-5,-7],[9,8,4,-5,5,-4,4,10,-8,-2,7,-6,7],[9,10,-1,-5,-8,-10,-2,6,10,8,5,-2,-1],[-5,5,6,5,10,-6,4,4,8,9,-3,-3,-2],[9,5,3,10,-3,-4,4,-6,-8,4,-6,-9,-6],[5,-5,10,-1,7,5,3,-4,8,-10,-8,-5,-2],[5,-6,-6,-2,10,-9,7,4,-3,-1,6,7,-4],[-6,-9,9,-2,7,-8,10,-1,6,5,9,10,7]],[[7,-4,10,9,-8,5,3,-7,1,6,6,-9,5],[1,5,-3,-3,-3,-5,-4,3,3,3,7,-7,5],[9,8,-1,-1,-8,-9,1,8,6,-9,5,-5,1],[-2,6,-6,3,-9,3,-1,4,6,1,1,7,-8],[-3,-1,-6,-5,-2,9,2,-2,-8,10,10,-7,-1],[2,-8,10,-5,6,-6,8,-9,-7,-3,-10,9,-2],[3,2,8,1,4,5,-6,5,-1,4,-7,3,-8],[-2,-10,-8,6,8,-5,7,-4,-3,5,-4,8,-6],[-9,-7,-1,-7,-5,-7,-6,2,6,3,6,-2,-1],[-5,6,-5,2,3,-9,6,7,5,-8,5,8,6],[3,3,8,-2,-1,1,-7,7,-7,1,4,-5,5],[-6,7,7,2,3,-1,-4,2,-6,-10,-8,-5,8],[7,2,5,-4,-2,4,4,5,2,8,5,-6,6],[-1,-5,10,4,3,-2,4,2,1,5,1,-3,5]],[[2,2,-5,1,-4,1,7,-9,-5,-4,-1,2,8],[5,-2,-1,10,-4,-6,7,8,-8,-4,-3,-10,-5],[-3,-6,10,-4,2,7,-9,-8,-8,5,-3,-10,-7],[-7,1,7,8,-6,-7,-1,8,-2,10,1,7,3],[-6,8,-5,2,6,1,3,4,-10,8,4,-2,-1],[2,9,-7,-8,2,-7,-1,-4,-7,-10,6,6,7],[-5,4,-1,4,-2,7,-6,-3,-3,-6,-7,-3,-3],[-8,-6,-1,-3,7,-3,-6,-1,-7,1,-10,4,-3],[-8,-9,-7,2,-1,4,-9,-8,3,-9,8,-1,-6],[5,-8,3,5,9,-1,7,5,8,4,8,1,-2],[-3,-9,-4,9,3,10,-7,1,-1,2,2,1,7],[1,-5,8,-6,7,1,5,-1,3,-1,6,5,-9],[-7,2,8,-3,-8,2,-7,-7,-6,-2,5,-3,-10],[-10,6,-1,-10,10,-6,-2,3,8,1,-10,-6,-4]],[[-6,9,5,-10,-9,-7,-3,6,9,4,1,3,7],[-1,-6,6,-1,7,-4,-10,-9,1,-3,3,-6,5],[1,1,3,-3,-4,-10,-3,4,7,8,10,-2,-10],[-4,-2,-4,-1,2,-7,-3,-3,-8,4,-2,6,9],[-1,9,-5,-8,4,-1,8,-10,-6,8,8,6,9],[-4,-7,-1,3,-2,4,7,-5,-4,-10,10,7,-9],[-7,8,-10,1,5,-10,3,-9,5,5,-2,4,3],[-2,-3,5,4,8,-8,-5,-2,-3,8,-9,6,2],[-3,4,10,6,6,7,-7,-8,-3,-7,-10,7,-2],[9,-2,-10,7,3,-1,-5,2,-1,-7,5,-3,-5],[5,-9,10,-7,-2,9,10,-9,1,-9,5,4,-8],[2,-3,2,-8,-5,2,-3,10,4,-2,-2,-8,-5],[-9,-5,-8,-8,-3,-9,3,1,5,-10,4,4,8],[10,-6,-8,-4,2,1,2,-10,5,4,-1,-10,3]],[[-4,9,-2,-5,-3,-3,-6,-10,-7,-1,3,2,-3],[-6,3,-6,-8,-8,-3,-9,6,5,9,10,-8,-4],[-8,10,-1,-2,-8,9,3,-6,-10,5,5,9,5],[-1,-10,-8,1,-10,4,7,10,8,5,2,-7,3],[-8,9,2,10,4,10,4,10,-2,2,2,7,-5],[5,9,7,2,3,-3,8,9,-3,-10,2,7,-5],[-7,-8,-5,-4,3,-2,-5,-9,-7,6,-4,10,-3],[7,-8,10,-7,8,3,6,3,-1,2,9,-6,5],[5,4,-10,7,-3,5,-9,-4,5,10,-8,6,-10],[1,-9,6,4,3,2,3,-9,7,-9,2,-1,-2],[5,2,3,1,-2,8,-6,-1,1,4,-10,9,4],[-5,-6,-5,-7,6,2,3,-4,-1,2,-1,-4,6],[-7,-5,-8,5,1,5,-9,-7,-8,-5,1,-5,8],[7,-10,-5,-8,8,-5,2,-5,4,-9,4,-3,-2]]], dtype = "int64")#candidate|487|(11, 14, 13)|const|int64
bop_488 = relay.subtract(var_486.astype('int64'), const_487.astype('int64')) # shape=(11, 14, 13)
output = bop_488
output2 = bop_488
func_513 = relay.Function([var_486,], output)
mod['func_513'] = func_513
mod = relay.transform.InferType()(mod)
mutated_mod['func_513'] = func_513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_514 = relay.var("var_514", dtype = "int64", shape = ())#candidate|514|()|var|int64
func_513_call = mutated_mod.get_global_var('func_513')
call_515 = func_513_call(var_514)
output = call_515
func_516 = relay.Function([var_514], output)
mutated_mod['func_516'] = func_516
mutated_mod = relay.transform.InferType()(mutated_mod)
var_549 = relay.var("var_549", dtype = "uint64", shape = (7, 1, 2))#candidate|549|(7, 1, 2)|var|uint64
var_550 = relay.var("var_550", dtype = "uint64", shape = (7, 6, 2))#candidate|550|(7, 6, 2)|var|uint64
bop_551 = relay.less_equal(var_549.astype('bool'), var_550.astype('bool')) # shape=(7, 6, 2)
uop_558 = relay.rsqrt(bop_551.astype('float32')) # shape=(7, 6, 2)
output = relay.Tuple([uop_558,])
output2 = relay.Tuple([uop_558,])
func_571 = relay.Function([var_549,var_550,], output)
mod['func_571'] = func_571
mod = relay.transform.InferType()(mod)
var_572 = relay.var("var_572", dtype = "uint64", shape = (7, 1, 2))#candidate|572|(7, 1, 2)|var|uint64
var_573 = relay.var("var_573", dtype = "uint64", shape = (7, 6, 2))#candidate|573|(7, 6, 2)|var|uint64
output = func_571(var_572,var_573,)
func_574 = relay.Function([var_572,var_573,], output)
mutated_mod['func_574'] = func_574
mutated_mod = relay.transform.InferType()(mutated_mod)
var_987 = relay.var("var_987", dtype = "int32", shape = (3, 8, 4))#candidate|987|(3, 8, 4)|var|int32
const_988 = relay.const([[[10,-4,-9,-4],[9,-1,6,-7],[-7,-3,-6,6],[10,-9,-6,10],[9,4,7,6],[-6,8,-4,-5],[10,5,-8,5],[6,6,9,10]],[[4,-7,-2,6],[-9,-1,1,-5],[3,-8,-3,-9],[-9,3,-5,-7],[8,9,-6,-9],[-1,-9,4,5],[5,8,-6,-1],[6,-4,-8,9]],[[4,6,-4,6],[-5,8,-10,9],[-8,-5,6,9],[1,-2,-4,-5],[-10,8,-7,-9],[-9,2,-2,5],[7,-4,8,-6],[7,-8,-10,9]]], dtype = "int32")#candidate|988|(3, 8, 4)|const|int32
bop_989 = relay.bitwise_xor(var_987.astype('int32'), relay.reshape(const_988.astype('int32'), relay.shape_of(var_987))) # shape=(3, 8, 4)
func_219_call = mod.get_global_var('func_219')
func_221_call = mutated_mod.get_global_var('func_221')
var_998 = relay.var("var_998", dtype = "uint16", shape = (960,))#candidate|998|(960,)|var|uint16
call_997 = relay.TupleGetItem(func_219_call(relay.reshape(var_998.astype('uint16'), [4, 15, 16])), 1)
call_999 = relay.TupleGetItem(func_221_call(relay.reshape(var_998.astype('uint16'), [4, 15, 16])), 1)
bop_1001 = relay.power(var_998.astype('float64'), relay.reshape(call_997.astype('float64'), relay.shape_of(var_998))) # shape=(960,)
bop_1004 = relay.power(var_998.astype('float64'), relay.reshape(call_999.astype('float64'), relay.shape_of(var_998))) # shape=(960,)
output = relay.Tuple([bop_989,bop_1001,])
output2 = relay.Tuple([bop_989,bop_1004,])
func_1021 = relay.Function([var_987,var_998,], output)
mod['func_1021'] = func_1021
mod = relay.transform.InferType()(mod)
var_1022 = relay.var("var_1022", dtype = "int32", shape = (3, 8, 4))#candidate|1022|(3, 8, 4)|var|int32
var_1023 = relay.var("var_1023", dtype = "uint16", shape = (960,))#candidate|1023|(960,)|var|uint16
output = func_1021(var_1022,var_1023,)
func_1024 = relay.Function([var_1022,var_1023,], output)
mutated_mod['func_1024'] = func_1024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1110 = relay.var("var_1110", dtype = "int32", shape = (14, 1, 9))#candidate|1110|(14, 1, 9)|var|int32
const_1111 = relay.const([[[-9,-2,6,8,10,3,9,-9,8],[-3,4,6,-2,-2,-1,1,-10,3],[-1,-10,-6,-6,-4,-8,-10,7,6],[-1,-10,-3,10,2,-7,5,-5,8],[7,6,10,6,-6,-3,6,1,9],[-8,-8,-6,-5,-2,8,-4,5,-8],[6,4,-7,-4,-10,-3,-9,-7,-1],[-1,-6,9,-4,-8,-4,5,-10,-2],[5,-2,-1,6,-5,-6,-6,7,9],[-7,-10,5,1,6,8,-10,1,1],[-8,1,-8,4,-1,7,6,4,-8],[1,-8,3,-2,2,7,-7,-10,10],[3,-3,2,6,-3,5,-1,5,5]],[[7,2,-3,3,-6,8,1,10,6],[6,-2,-2,2,-5,-3,4,-8,-1],[9,-2,-9,1,-2,5,-4,9,2],[3,7,3,-8,3,-5,-10,-10,-9],[1,-10,2,-10,-8,2,-4,-4,-5],[-2,5,-3,-10,5,3,9,-8,8],[4,-6,-1,-2,7,4,2,7,3],[-8,-2,3,10,3,10,-8,1,7],[-4,5,-5,-3,8,4,1,2,-8],[-3,6,-4,7,-1,6,10,-4,-3],[-5,6,8,5,-6,5,4,2,-1],[-6,-10,9,-4,-8,-4,-7,-7,4],[-5,-7,6,4,-9,9,3,-10,-4]],[[-1,-8,7,1,-2,-9,6,-5,-4],[6,-2,4,-4,-9,-2,-5,-1,5],[4,-4,-6,3,6,6,3,-9,6],[-8,-2,7,10,-8,-3,-9,-9,-3],[5,-7,-6,-10,-5,-3,2,-1,8],[10,-10,-9,1,1,-2,-5,2,7],[-4,-8,7,10,-3,-6,1,-1,4],[3,1,-7,10,-9,3,4,-6,-10],[6,-4,3,1,8,2,-3,1,-10],[-4,-10,5,-10,5,-1,-1,-5,5],[-7,-9,-8,10,5,-5,10,7,4],[-5,1,2,-3,7,8,-3,8,-3],[-2,-10,-4,3,-4,-4,-2,-5,-7]],[[3,2,7,3,6,-3,-10,1,3],[4,-9,-6,-9,2,-1,10,10,-5],[-1,-8,-10,7,-7,9,-6,-5,1],[8,10,-3,8,5,7,-4,8,7],[-4,-7,5,-8,-1,5,-4,4,-10],[7,2,5,-3,10,-2,9,-3,6],[2,-10,9,-7,-8,-9,7,6,9],[1,-2,-1,-9,-10,-7,-4,-4,-4],[-2,8,-9,8,-4,-7,8,2,8],[4,-6,-2,3,-3,-10,10,5,10],[6,4,-6,10,9,-4,9,-6,2],[-9,-4,4,9,-4,1,-10,3,6],[5,3,-1,-2,-7,-7,-6,6,9]],[[4,3,2,-1,2,6,-5,-3,4],[-7,4,5,-5,-6,-3,-10,-2,-2],[-8,7,-10,7,6,6,-3,8,-9],[9,-8,-4,1,-5,-6,7,3,-3],[1,-10,9,8,-1,9,1,-1,-2],[-9,8,6,-4,-9,9,10,3,6],[6,-1,-10,6,-8,-2,3,-3,-9],[6,-2,-10,8,-8,2,2,-7,6],[5,3,-8,-4,-8,3,-8,1,-5],[-8,3,-5,-1,4,9,-7,9,-8],[7,-9,2,4,-2,-7,-8,-1,4],[-7,-2,-3,8,-7,-2,-5,8,-3],[5,-8,4,3,2,-4,-1,-1,9]],[[-5,-6,5,7,6,-3,8,6,-4],[-3,2,-4,-2,-5,-9,-9,-3,-7],[2,8,3,-6,-9,9,3,-4,-9],[-1,-3,-6,-3,9,9,-6,-1,-8],[8,-7,6,-4,-8,-6,-5,8,5],[2,-8,-6,6,7,-10,4,-8,-7],[-9,-5,-9,1,-8,-4,2,1,-7],[-6,-2,-2,7,2,-9,10,-2,-4],[-6,5,-6,6,-6,-10,5,8,9],[2,10,-9,-3,-6,4,5,6,3],[-10,-2,6,-3,-9,10,3,-4,-6],[-1,-4,5,8,9,2,8,10,10],[5,9,-4,-2,1,-1,10,5,10]],[[3,9,-6,5,3,-5,3,6,-3],[-1,1,-4,-8,-4,-10,4,-4,7],[-4,-3,10,-1,7,-5,2,-7,9],[-3,6,9,-2,1,-5,-4,-3,-9],[-5,5,2,4,5,6,5,-10,-7],[-10,1,-6,2,-9,-9,7,1,-7],[2,-6,5,1,-1,2,10,-8,-5],[-1,-4,-3,1,6,4,4,5,2],[-9,-1,-4,10,-6,8,3,-8,10],[-10,1,-2,9,10,-5,5,7,-4],[-2,-6,-3,2,4,4,3,-6,10],[-9,3,5,4,-1,8,4,2,-10],[6,2,4,-5,-10,1,-6,-8,-2]],[[8,3,-8,7,-10,-4,5,-4,10],[-2,5,6,1,8,3,-2,-7,10],[-5,7,-5,10,1,-6,-2,-7,-10],[2,-7,3,-10,2,-10,-3,9,-2],[3,4,-6,6,-9,-4,6,-2,-6],[-6,10,6,-10,4,-10,-6,8,4],[8,-1,-3,-6,1,-5,-5,-3,-8],[-4,7,10,6,-10,-5,10,4,-8],[8,-7,6,-6,-2,-5,-10,-1,-8],[-6,-8,-1,-9,-4,-4,-2,-10,1],[-3,-4,-6,7,7,2,-2,10,-3],[1,-3,8,1,2,-3,9,8,2],[2,1,-9,7,-1,1,9,9,1]],[[1,-9,5,-6,7,8,9,1,1],[2,1,-4,-9,-6,-7,8,-1,1],[-7,10,10,-3,10,-10,4,-1,-7],[-9,8,-7,-4,-2,-1,3,-9,-4],[-1,-9,-1,-3,3,1,-9,-8,-10],[3,-9,-1,8,-10,6,-8,-3,1],[-6,-8,-8,-8,-1,-5,1,-7,3],[-3,-1,-7,-9,8,-2,5,-3,8],[5,-8,2,9,1,4,-3,4,3],[3,-4,5,9,-5,-6,2,7,-8],[-3,-2,3,8,-6,10,-2,3,-3],[6,-10,-2,2,-6,6,-9,10,-5],[1,7,-6,7,9,7,-8,-3,2]],[[5,-9,-6,-4,6,-8,7,6,5],[10,-9,-3,2,-7,-2,-8,4,5],[-6,5,-4,-5,-10,-4,3,10,4],[6,5,-1,-4,-3,8,-8,-8,8],[-6,1,-6,-5,-1,-8,-8,-1,10],[1,2,-4,-1,-7,-5,-1,10,9],[8,-4,8,-4,-6,1,-10,2,6],[2,-8,10,-6,4,-4,-3,-6,-1],[-6,-3,3,-2,8,-3,-10,4,6],[1,5,-9,10,-1,-6,5,7,-8],[-1,3,2,4,3,-10,-3,10,-10],[-7,10,9,10,9,1,8,-8,9],[-9,4,2,10,6,-3,10,7,8]],[[7,9,5,-5,-1,-6,-3,-5,4],[10,3,5,-2,-6,4,-6,-9,-10],[4,7,-8,-6,-5,-7,-8,-2,-5],[-5,-1,-8,2,-9,9,-5,-7,-8],[3,-8,-5,-7,4,-2,-8,7,-7],[-6,9,9,-7,8,-7,8,10,-8],[3,-8,9,-7,6,-8,-1,1,2],[-5,-6,-2,1,3,-6,-8,10,-5],[7,-8,7,5,2,7,10,4,9],[9,4,5,6,-8,-1,-7,-6,-9],[-3,-3,2,3,-4,-8,-3,-4,10],[8,3,4,10,2,8,-10,-8,10],[-3,-2,9,3,-8,10,8,-5,5]],[[-7,-5,-10,-10,8,3,8,10,-4],[-1,-3,-6,8,-3,5,4,-1,-10],[-4,1,-8,7,-10,-7,9,3,-8],[7,1,9,-7,9,-4,1,1,7],[8,-7,-2,-3,2,-5,5,6,-1],[3,10,8,-10,9,2,-3,9,-9],[4,-3,9,9,-9,7,10,8,1],[3,6,5,9,8,-5,10,-10,8],[-1,1,-9,-10,10,10,-3,-5,6],[-6,-7,4,3,3,-9,3,5,-9],[-4,-7,6,-8,-4,-9,4,-7,4],[-4,5,10,-8,3,-7,-2,-1,7],[-8,-8,9,-3,5,-3,3,-5,7]],[[-2,8,-10,10,-6,-3,-10,-10,-3],[6,-2,-10,-9,6,-1,7,10,1],[-10,4,-1,1,-9,-10,1,-10,6],[-10,3,6,9,-7,1,-8,8,7],[10,1,-10,-2,6,4,4,-6,9],[10,7,6,-5,9,8,-3,5,-8],[6,7,-3,-3,-6,3,10,5,3],[5,8,1,9,4,9,-10,1,-8],[-8,-1,-7,10,-10,-5,6,10,2],[-10,7,-5,-8,-3,2,-3,-2,5],[-9,-7,1,3,-1,-3,-4,6,-9],[-10,-5,5,-6,-8,-5,8,-9,4],[-8,-7,-7,4,5,7,-10,-10,1]],[[2,6,-6,4,-4,10,3,4,-6],[2,6,-9,-3,9,-6,1,-2,10],[9,-1,-7,2,8,9,6,-4,-9],[5,-4,5,9,-7,-4,-6,-1,5],[-9,-7,2,-8,7,3,5,-10,-4],[-8,-3,-1,-2,-10,-7,2,-4,10],[-6,6,-2,-9,-7,-5,-4,-4,-8],[3,-4,-6,10,5,-8,1,5,5],[-6,-4,5,-4,4,7,-2,3,-5],[-7,8,2,8,8,-3,-1,-1,-4],[6,-7,-7,-2,7,5,6,-9,-5],[-8,4,-8,-1,8,4,10,9,10],[-4,-4,-10,2,-2,-10,-4,2,8]]], dtype = "int32")#candidate|1111|(14, 13, 9)|const|int32
bop_1112 = relay.minimum(var_1110.astype('int32'), const_1111.astype('int32')) # shape=(14, 13, 9)
func_1021_call = mod.get_global_var('func_1021')
func_1024_call = mutated_mod.get_global_var('func_1024')
var_1118 = relay.var("var_1118", dtype = "int32", shape = (96, 1))#candidate|1118|(96, 1)|var|int32
const_1119 = relay.const([-2,-3,-10,-7,-4,3,-9,7,10,-8,6,-3,6,9,5,7,8,4,-7,-10,-10,-8,-4,4,1,-8,-5,-5,6,8,-9,-9,-7,5,-3,-6,8,1,-10,-7,-6,-8,-7,3,-9,5,6,-5,8,-8,4,2,-9,-5,8,10,8,7,2,-9,1,-1,9,-3,-5,-5,-6,-1,2,5,-10,5,4,-3,4,-9,5,5,7,8,8,1,4,8,-9,-7,-8,9,6,10,6,-6,-3,-5,-8,2,-10,-7,-6,10,8,8,-10,9,9,-8,1,5,5,-4,-5,-9,9,7,3,-3,-5,-8,-8,-2,8,-1,4,-3,-6,-3,3,-5,-10,-8,-10,-3,-1,-9,-7,5,1,-4,-2,5,6,-10,-2,1,-7,-6,-1,-1,1,1,-1,5,2,6,-8,3,-10,3,8,-5,-5,6,-9,6,9,10,-4,1,-4,-8,-7,-6,-4,9,5,10,7,3,3,8,7,-9,10,-4,6,-7,-5,-9,4,-2,6,-6,-8,-8,8,-10,-3,3,10,10,-1,8,-1,-6,7,-1,-2,5,-4,10,1,7,10,1,-9,-5,-7,-8,-1,3,-6,2,-9,-9,-2,-5,10,10,1,-9,2,3,-8,10,-7,7,5,-3,-8,9,3,4,-7,-5,-6,1,2,-7,-6,10,-10,-9,8,-9,-8,6,-4,7,7,-2,-10,-2,6,1,-6,7,7,1,2,2,10,-1,10,-8,2,1,10,4,-3,-9,-7,-7,4,2,1,6,-3,8,5,-2,3,-8,-9,10,-9,-4,-7,1,-2,9,-6,-5,-10,-4,-6,-1,-4,-1,-3,-6,1,-9,5,-2,-2,8,-6,6,-5,-2,-9,-1,3,-7,-4,9,4,-6,7,-4,10,6,7,3,-4,-5,7,-7,10,9,6,-1,-7,9,-8,-10,7,6,9,9,4,8,2,4,-7,7,-10,-4,-9,10,6,-6,7,8,-1,1,1,-9,-5,6,-3,-5,-3,-1,-10,10,10,-10,9,-2,4,-8,-3,9,-9,9,-10,-6,-3,-5,-7,-10,2,5,-9,4,10,-10,8,-10,6,8,4,-7,4,-10,9,-9,10,-2,10,-2,-7,-5,4,1,-5,-4,-6,5,-6,-10,-3,-6,2,-1,4,-7,6,6,-9,7,-8,4,5,4,2,-6,5,-9,-10,1,4,4,10,-9,9,-5,-1,2,8,-7,4,-7,-7,-7,-9,-2,-8,2,-10,-9,8,-7,2,-7,9,-1,9,-9,-4,-5,5,-7,-6,3,1,5,5,-10,-3,-5,1,3,-4,8,1,5,1,-10,-1,2,-4,-3,9,4,-8,-2,7,-9,-2,-2,-10,-10,7,7,3,-9,-4,-4,6,5,-8,-3,4,7,10,-8,6,-1,-8,-2,8,9,-6,7,2,-5,8,-9,-1,10,-6,2,-8,7,-3,-8,2,5,10,-7,-5,-7,2,7,2,5,-8,2,-1,-2,9,7,9,9,-5,4,-1,-5,6,-6,-1,-6,9,-5,-8,7,8,9,8,-7,-6,-5,1,-10,1,-5,7,9,1,6,-2,-9,7,-8,-5,9,5,8,3,-4,4,-5,5,6,-10,7,7,4,3,-10,6,-2,3,-8,-8,1,6,-2,1,-6,4,7,-1,-7,1,-5,-9,8,8,10,-10,7,-8,4,-1,-4,-8,-6,10,-5,3,9,-8,-5,5,-2,8,-1,-10,-6,9,-6,1,-6,-7,5,1,-3,-5,5,6,6,-7,-8,6,-8,8,-2,7,-1,8,-4,1,8,-6,7,10,-5,4,2,1,-5,-5,7,6,6,-3,-5,-8,4,7,7,7,-4,7,-1,7,5,-4,2,8,5,8,10,4,3,5,9,-2,-3,9,5,-9,-8,3,-4,-7,6,9,-3,-10,-6,-6,9,8,-7,5,4,4,-8,1,-10,10,-4,-4,4,1,10,-5,-7,2,-1,-8,2,5,1,-1,4,8,2,3,7,6,-3,-8,-3,6,7,6,-8,-9,-7,-3,-2,9,5,10,9,-7,4,-5,-6,-8,5,-2,7,5,4,6,-8,-9,-8,3,4,10,-7,-4,5,8,8,-6,-3,-10,6,-2,1,-9,2,-6,6,-4,-2,8,4,9,5,-8,4,-5,4,-9,1,-5,2,9,7,10,4,7,1,-2,1,7,10,8,-9,2,-4,1,6,1,5,-3,9,-9,-5,-9,2,2,7,-9,-8,6,-8,8,-9,9,2,3,1,-2,-4,5,-6,-2,-8,9,2,9,-2,-3,-8,5,4,9,-3,-4,-1,-4,7,-10,-5,-2,-4,-6,-8,9,1,3,-5,3,-5,-4,-7,5,-2,-2,4,7,-4,6,4,-7,-1,-2,-5,2,-3,8,5,-5,-8,8,-10,-10,8,8,1,-6,-8,-9,-3,-2,-9,8,2,5,-2,-2,7,-9,-9,-6,-4,3,1,2,-4,2,-7,-9,6,8,6,2,-3,-8,-10,3,9,6,1,-7,4,-10,2,9,3,7,9,-3,-2,7,9,6,9,9,-9,4,-6,4,4,-5,3,6,-1,6,-2], dtype = "uint16")#candidate|1119|(960,)|const|uint16
call_1117 = relay.TupleGetItem(func_1021_call(relay.reshape(var_1118.astype('int32'), [3, 8, 4]), relay.reshape(const_1119.astype('uint16'), [960,]), ), 1)
call_1120 = relay.TupleGetItem(func_1024_call(relay.reshape(var_1118.astype('int32'), [3, 8, 4]), relay.reshape(const_1119.astype('uint16'), [960,]), ), 1)
bop_1125 = relay.right_shift(var_1110.astype('uint8'), const_1111.astype('uint8')) # shape=(14, 13, 9)
output = relay.Tuple([bop_1112,call_1117,var_1118,const_1119,bop_1125,])
output2 = relay.Tuple([bop_1112,call_1120,var_1118,const_1119,bop_1125,])
func_1136 = relay.Function([var_1110,var_1118,], output)
mod['func_1136'] = func_1136
mod = relay.transform.InferType()(mod)
mutated_mod['func_1136'] = func_1136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1136_call = mutated_mod.get_global_var('func_1136')
var_1138 = relay.var("var_1138", dtype = "int32", shape = (14, 1, 9))#candidate|1138|(14, 1, 9)|var|int32
var_1139 = relay.var("var_1139", dtype = "int32", shape = (96, 1))#candidate|1139|(96, 1)|var|int32
call_1137 = func_1136_call(var_1138,var_1139,)
output = call_1137
func_1140 = relay.Function([var_1138,var_1139,], output)
mutated_mod['func_1140'] = func_1140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1327 = relay.var("var_1327", dtype = "float32", shape = (9, 16, 3))#candidate|1327|(9, 16, 3)|var|float32
uop_1328 = relay.asin(var_1327.astype('float32')) # shape=(9, 16, 3)
func_1136_call = mod.get_global_var('func_1136')
func_1140_call = mutated_mod.get_global_var('func_1140')
var_1348 = relay.var("var_1348", dtype = "int32", shape = (126,))#candidate|1348|(126,)|var|int32
const_1349 = relay.const([8,2,-9,3,-6,-4,7,3,1,-3,5,2,-8,5,6,7,-6,-7,-5,4,3,10,-6,-8,-4,-4,1,-7,4,6,-7,-3,-1,-9,-3,8,1,-5,-10,-5,-6,-5,6,5,-3,-9,-2,-5,-5,9,-9,3,4,-6,1,-9,2,-1,6,-10,6,3,-4,-1,5,8,-7,-4,8,-5,3,5,10,6,1,6,7,-7,8,-9,-8,-6,7,7,-2,-4,10,4,5,-7,8,-6,-3,-6,-9,-5], dtype = "int32")#candidate|1349|(96,)|const|int32
call_1347 = relay.TupleGetItem(func_1136_call(relay.reshape(var_1348.astype('int32'), [14, 1, 9]), relay.reshape(const_1349.astype('int32'), [96, 1]), ), 2)
call_1350 = relay.TupleGetItem(func_1140_call(relay.reshape(var_1348.astype('int32'), [14, 1, 9]), relay.reshape(const_1349.astype('int32'), [96, 1]), ), 2)
output = relay.Tuple([uop_1328,call_1347,var_1348,const_1349,])
output2 = relay.Tuple([uop_1328,call_1350,var_1348,const_1349,])
func_1352 = relay.Function([var_1327,var_1348,], output)
mod['func_1352'] = func_1352
mod = relay.transform.InferType()(mod)
var_1353 = relay.var("var_1353", dtype = "float32", shape = (9, 16, 3))#candidate|1353|(9, 16, 3)|var|float32
var_1354 = relay.var("var_1354", dtype = "int32", shape = (126,))#candidate|1354|(126,)|var|int32
output = func_1352(var_1353,var_1354,)
func_1355 = relay.Function([var_1353,var_1354,], output)
mutated_mod['func_1355'] = func_1355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1416 = relay.var("var_1416", dtype = "float64", shape = (9, 3, 5))#candidate|1416|(9, 3, 5)|var|float64
uop_1417 = relay.acos(var_1416.astype('float64')) # shape=(9, 3, 5)
output = relay.Tuple([uop_1417,])
output2 = relay.Tuple([uop_1417,])
func_1420 = relay.Function([var_1416,], output)
mod['func_1420'] = func_1420
mod = relay.transform.InferType()(mod)
var_1421 = relay.var("var_1421", dtype = "float64", shape = (9, 3, 5))#candidate|1421|(9, 3, 5)|var|float64
output = func_1420(var_1421)
func_1422 = relay.Function([var_1421], output)
mutated_mod['func_1422'] = func_1422
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1643 = relay.const([[[6,-8,-2,5,-9,-2,10,1]],[[-3,-9,-9,7,4,-4,-4,6]],[[-8,-9,3,-2,8,1,5,8]],[[-7,1,9,-6,2,7,-2,-5]],[[1,-1,-8,9,7,4,4,-2]],[[-8,-6,10,7,2,7,-8,4]],[[-8,4,-8,-4,4,6,9,-10]],[[-10,-3,8,2,5,-4,6,2]],[[3,-2,10,-5,-7,6,-9,-4]]], dtype = "int64")#candidate|1643|(9, 1, 8)|const|int64
var_1644 = relay.var("var_1644", dtype = "int64", shape = (9, 7, 8))#candidate|1644|(9, 7, 8)|var|int64
bop_1645 = relay.bitwise_or(const_1643.astype('int64'), var_1644.astype('int64')) # shape=(9, 7, 8)
output = relay.Tuple([bop_1645,])
output2 = relay.Tuple([bop_1645,])
func_1648 = relay.Function([var_1644,], output)
mod['func_1648'] = func_1648
mod = relay.transform.InferType()(mod)
mutated_mod['func_1648'] = func_1648
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1649 = relay.var("var_1649", dtype = "int64", shape = (9, 7, 8))#candidate|1649|(9, 7, 8)|var|int64
func_1648_call = mutated_mod.get_global_var('func_1648')
call_1650 = func_1648_call(var_1649)
output = call_1650
func_1651 = relay.Function([var_1649], output)
mutated_mod['func_1651'] = func_1651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1936 = relay.var("var_1936", dtype = "float32", shape = (7, 2, 9))#candidate|1936|(7, 2, 9)|var|float32
uop_1937 = relay.acosh(var_1936.astype('float32')) # shape=(7, 2, 9)
bop_1948 = relay.mod(uop_1937.astype('float32'), relay.reshape(var_1936.astype('float32'), relay.shape_of(uop_1937))) # shape=(7, 2, 9)
output = relay.Tuple([bop_1948,])
output2 = relay.Tuple([bop_1948,])
func_1953 = relay.Function([var_1936,], output)
mod['func_1953'] = func_1953
mod = relay.transform.InferType()(mod)
mutated_mod['func_1953'] = func_1953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1954 = relay.var("var_1954", dtype = "float32", shape = (7, 2, 9))#candidate|1954|(7, 2, 9)|var|float32
func_1953_call = mutated_mod.get_global_var('func_1953')
call_1955 = func_1953_call(var_1954)
output = call_1955
func_1956 = relay.Function([var_1954], output)
mutated_mod['func_1956'] = func_1956
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2069 = relay.const([[[7,-4,-8,-3,6,4,3],[-4,9,-1,4,4,5,-8],[-7,4,9,-1,2,-7,-5],[8,9,3,5,-5,-2,-4],[8,-7,-1,1,10,-8,-5],[-1,-5,6,-2,-4,-3,-7],[-9,-1,2,-4,-8,4,6],[-2,-6,9,3,-7,-6,-3],[1,3,10,-9,-9,-7,7],[-7,-3,3,-4,-3,2,2],[-1,5,5,-2,-2,-9,-5],[10,-6,-6,-7,-10,-5,-8]],[[3,3,4,-7,-7,-6,-1],[10,1,-7,-8,-8,2,-6],[1,4,-3,-9,8,-8,7],[4,10,2,-5,-10,2,7],[-6,-2,8,-2,-4,10,8],[-9,-5,-1,-8,-8,-1,-5],[8,6,-9,-2,6,-8,4],[-4,-7,5,7,-6,-10,7],[5,-4,-8,-7,-1,-3,-1],[-9,10,-7,-8,8,-10,-8],[1,4,1,-8,-10,-5,-2],[-10,-9,7,-4,-6,-9,-6]],[[3,9,-3,-1,-1,-3,-2],[4,7,8,-4,-5,1,1],[-6,-7,2,4,-9,10,-1],[-10,1,8,9,2,-3,2],[-8,2,-1,-4,6,-8,2],[4,-1,8,-10,8,4,-5],[-8,-1,-1,4,-1,-6,-6],[-2,4,-4,2,-5,-10,-4],[-4,1,7,10,-4,-9,-3],[-2,1,9,-1,10,-3,-10],[9,-9,-4,-7,-2,-8,-3],[3,-3,-7,10,2,7,7]],[[-9,6,10,3,6,4,10],[6,8,-9,4,-7,-2,-4],[-1,2,7,-9,1,-2,3],[5,-7,-9,10,-5,-4,7],[-1,6,3,3,-5,-10,6],[5,9,7,3,-10,-1,-5],[9,-2,4,-6,7,-8,4],[9,1,3,4,-3,-3,-9],[-10,-1,8,-1,3,-1,9],[-3,9,-4,7,-8,7,-7],[-6,7,1,-9,5,-1,-9],[9,2,-2,-7,1,6,-5]],[[5,-5,10,-9,2,-10,-9],[-5,5,-6,-9,10,-7,-8],[-2,-7,-6,-8,-6,5,-6],[-5,8,-1,8,-10,8,-3],[-2,-7,3,-9,-8,-3,-5],[-4,-7,-4,-1,-8,4,5],[9,-4,-8,-5,-7,-2,-3],[-1,5,-9,-4,-7,-8,5],[-4,-4,10,-4,-1,1,-3],[-6,10,-5,3,-7,-7,-6],[-1,8,3,8,10,-4,-1],[10,2,10,-3,6,1,5]],[[-10,-4,1,-8,-6,10,8],[-8,2,3,-5,-5,10,-4],[-7,-10,9,-9,7,-9,-4],[10,4,1,9,-10,-10,1],[-8,-10,6,-1,-3,-9,10],[7,6,5,7,-8,1,9],[4,-1,6,7,-3,-9,1],[-9,6,4,-5,-4,7,9],[1,-1,-1,-9,-6,-1,5],[7,9,-8,4,-9,-2,-9],[4,-7,7,3,-10,5,7],[7,7,9,-10,3,10,10]],[[4,1,9,-4,-7,6,-9],[5,8,-9,6,5,6,9],[-9,-8,-10,2,6,-8,4],[10,7,-9,-7,-4,-8,-8],[-6,-10,4,7,-6,5,-4],[5,-9,1,-10,2,1,-10],[-6,5,3,-6,-3,3,1],[-3,1,3,1,-5,-6,-8],[-7,-8,-7,5,-8,9,4],[-3,9,10,-2,-7,8,-5],[1,3,-2,-10,-2,8,-4],[1,6,2,2,5,-4,-8]],[[-6,-9,8,6,-3,-8,-9],[-4,3,2,-3,-5,4,-8],[4,-3,9,-7,3,7,-10],[-2,-3,-2,6,-6,-8,-2],[2,-1,8,-7,7,5,9],[-8,9,8,8,8,5,3],[-8,-6,-8,9,2,-2,3],[-10,9,1,-2,2,10,6],[-8,9,-7,-8,-1,-9,-4],[3,-8,2,-3,-9,-4,4],[3,-1,8,-8,-4,-10,-3],[9,1,7,-5,1,1,-10]],[[1,1,4,8,2,9,-2],[3,9,5,2,-1,10,-4],[10,-8,-9,-8,10,7,9],[8,-6,-9,2,4,9,-2],[5,-1,-1,-9,-7,5,10],[7,-9,-3,7,9,7,5],[1,4,-5,-3,6,-9,9],[-8,6,-8,-2,10,-4,-1],[4,-6,5,-3,9,-9,9],[5,9,-5,-9,-8,6,2],[-8,-3,-9,7,3,4,-7],[-4,-10,2,-2,-2,2,2]],[[9,9,7,10,-1,1,7],[3,-10,-8,-5,8,9,-8],[2,-8,6,-6,7,10,-3],[3,6,-5,4,5,-6,-9],[-4,4,9,-5,-9,-1,-7],[6,1,9,7,4,-7,-3],[3,-6,10,-1,3,-5,6],[-9,-6,2,-8,3,-5,7],[5,7,-3,-4,-4,-2,-10],[-9,3,-9,7,-4,-4,-8],[-3,3,6,-7,4,2,6],[-8,8,-3,7,10,5,9]],[[-1,10,-4,6,-4,1,-4],[-9,6,9,5,7,-5,-6],[-8,-2,3,-5,-7,-9,3],[1,6,10,-9,5,2,-8],[6,-9,-10,-5,3,10,-10],[10,-2,1,-3,9,3,-8],[6,1,-9,-10,1,1,-5],[5,3,-7,8,-2,-2,-5],[-5,-9,8,-6,-10,7,2],[-9,-3,2,-10,1,-8,9],[4,-4,-8,1,-3,-4,-3],[-8,2,-2,10,9,5,-5]],[[2,5,-9,-4,-4,-2,4],[-1,8,-4,7,-3,1,6],[-3,9,7,1,4,3,-4],[6,3,-7,-7,1,-8,-10],[8,7,6,-9,1,-1,7],[3,-2,-1,6,-4,-8,6],[1,9,1,1,1,2,-9],[-6,-10,-10,-8,7,-7,-7],[-8,-5,9,6,-9,7,8],[3,-6,-4,8,9,2,-9],[9,-8,-1,3,6,-9,-8],[-4,-8,4,5,-2,-3,-2]]], dtype = "int32")#candidate|2069|(12, 12, 7)|const|int32
const_2070 = relay.const([[[-3,7,-5,-9,6,-1,-8],[6,1,-4,-8,-2,-10,10],[9,1,4,-2,-8,-5,9],[-1,-4,-10,10,1,2,4],[2,-6,-4,5,-5,-7,7],[7,-2,2,5,9,7,3],[5,-3,-3,-10,-6,-5,1],[3,-7,-2,1,5,6,-3],[-7,-2,6,-9,-4,6,-5],[2,6,-4,8,-2,-9,-8],[4,-10,8,3,-9,2,3],[-5,2,4,3,-1,-3,-3]],[[-3,-1,-10,7,-5,1,5],[7,-3,8,-10,-3,2,5],[6,-10,-8,-5,-4,-8,5],[2,5,1,2,3,-4,6],[-10,-1,-10,3,-2,8,-3],[4,6,-9,5,-10,9,-10],[2,9,8,6,1,-8,2],[-10,10,2,-7,-6,-10,1],[10,4,-7,3,3,3,-1],[-8,7,-7,-1,3,-9,-2],[7,-8,-3,8,5,7,-1],[1,-3,6,-6,-7,1,5]],[[-10,10,-10,-4,-1,5,4],[-6,-2,10,8,5,10,-3],[1,2,4,-7,-10,-9,3],[-9,-6,3,-3,-5,-10,5],[2,2,5,-3,6,5,-10],[9,10,10,4,-6,-8,-6],[-1,2,-10,-7,8,5,-9],[-2,-7,-4,-8,3,-10,8],[9,-10,-8,4,-7,-2,10],[-1,-2,-9,1,-5,10,2],[8,9,6,6,2,-10,10],[3,3,-8,-6,-3,-2,7]],[[-8,-1,-1,-2,2,8,9],[-2,-4,-8,9,-2,-4,-2],[-3,8,10,-6,2,7,-7],[7,-5,-8,1,7,-3,-5],[-4,-5,7,-8,5,-5,3],[10,-7,7,-5,4,-10,-8],[-10,2,-9,10,-10,-3,2],[3,-2,-5,-3,2,9,4],[6,4,6,-1,3,-10,-2],[2,-3,-9,-2,-3,-9,1],[-2,9,8,8,-1,10,2],[1,-5,6,-9,-10,-9,4]],[[-9,-8,-3,-10,4,6,7],[-3,5,1,-8,5,-3,-10],[1,2,10,-10,-1,-3,-8],[-2,2,4,-1,7,-1,1],[-1,-6,-7,-2,-10,-10,-5],[-8,2,10,7,-3,-6,-2],[-5,2,-3,8,-9,-7,-5],[2,1,-4,9,-9,7,-5],[-4,-1,9,5,-4,-2,-3],[1,-7,9,2,1,7,-10],[-1,5,-1,4,-2,3,-2],[-8,-7,5,4,2,-7,-9]],[[-2,-7,5,8,-10,7,-1],[-7,-7,-2,-4,8,2,5],[-2,4,-5,-7,-4,-6,7],[-8,6,-5,-10,7,5,5],[-3,9,-7,9,3,-4,-1],[1,6,8,5,-4,2,3],[5,7,8,-5,-10,-9,-8],[-9,-3,-7,-10,-2,-8,-1],[8,-10,-10,2,4,3,10],[6,-2,7,5,-6,-8,-9],[-5,-9,-4,7,-5,-2,-6],[2,6,6,-2,5,8,2]],[[2,-4,-4,1,9,4,8],[-2,10,2,1,5,-2,1],[-4,6,6,4,-1,8,4],[6,9,-6,-2,-6,-6,-6],[-1,-8,2,10,4,-8,10],[6,9,6,10,6,10,-4],[-10,7,-9,-6,-1,-7,-2],[-1,-2,-6,9,-6,6,10],[1,-4,-6,4,-10,-8,-9],[-7,1,-3,6,-1,-1,-5],[-8,-3,-1,-2,2,4,-8],[-2,-9,-8,-6,1,-10,9]],[[9,10,-9,6,4,8,-8],[7,-5,3,-7,-4,3,8],[-6,-7,-1,4,-2,9,-10],[9,9,4,-6,-10,1,7],[-7,-7,2,-2,3,-10,-6],[-10,-7,-4,6,2,8,-4],[-6,-1,5,-10,6,-9,-5],[3,-9,-8,3,-5,-2,8],[9,-7,4,-9,-9,-6,-10],[3,4,-5,-10,-1,6,1],[-3,8,-2,8,-4,-5,-8],[8,-5,-1,9,-4,-2,-4]],[[-1,4,6,5,-6,4,-1],[-3,-7,7,3,3,-8,3],[-1,6,-1,-5,4,-3,-4],[10,-5,6,-5,-5,3,-10],[-4,10,-9,-7,-9,-5,2],[-5,6,-4,10,4,3,6],[7,8,9,7,6,-8,6],[-10,-5,9,-10,-4,-2,-8],[8,-2,9,6,-10,6,7],[-3,-9,-5,7,8,6,-10],[8,5,3,1,-1,-10,8],[-7,3,-1,-2,-7,-10,-8]],[[4,-7,9,10,-1,-4,6],[1,3,2,-9,-8,-7,10],[9,6,-8,-8,2,9,-1],[-6,-8,-2,7,6,-6,7],[-9,-3,-6,4,1,-1,1],[8,2,8,3,2,5,5],[4,5,10,-4,6,-8,-1],[1,8,4,3,3,-4,-5],[-7,-10,-4,-6,2,9,-9],[8,8,2,9,10,-9,-8],[-10,-2,3,7,7,-2,-7],[-1,-9,-6,8,-7,-5,-9]],[[-9,-7,-1,-7,-3,2,10],[-2,-6,-1,4,2,-7,-9],[5,7,4,-7,7,9,-6],[3,-8,3,10,7,-3,-5],[9,5,1,-9,9,2,-8],[7,6,2,-5,-6,-10,8],[-3,8,-5,5,6,-3,-2],[1,7,-7,-6,-5,-5,5],[-5,3,-3,9,5,-6,-1],[-5,3,6,4,1,2,2],[-10,-7,9,2,-2,-2,8],[-7,6,-4,8,8,-3,1]],[[-8,7,9,10,5,-9,-6],[3,8,3,-9,-4,-6,8],[-3,7,3,7,5,9,-3],[6,-9,3,6,-3,2,-4],[10,-10,-3,4,8,-6,-3],[4,5,-5,-8,4,-4,-10],[6,7,-8,-1,-5,-4,8],[-7,-9,7,10,6,2,-3],[-9,-3,9,-3,10,-7,-8],[-7,5,9,4,5,10,1],[3,8,-6,-9,4,1,5],[-6,-9,1,-6,5,8,1]]], dtype = "int32")#candidate|2070|(12, 12, 7)|const|int32
bop_2071 = relay.multiply(const_2069.astype('int32'), relay.reshape(const_2070.astype('int32'), relay.shape_of(const_2069))) # shape=(12, 12, 7)
output = bop_2071
output2 = bop_2071
func_2075 = relay.Function([], output)
mod['func_2075'] = func_2075
mod = relay.transform.InferType()(mod)
mutated_mod['func_2075'] = func_2075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2075_call = mutated_mod.get_global_var('func_2075')
call_2076 = func_2075_call()
output = call_2076
func_2077 = relay.Function([], output)
mutated_mod['func_2077'] = func_2077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2075_call = mod.get_global_var('func_2075')
func_2077_call = mutated_mod.get_global_var('func_2077')
call_2118 = func_2075_call()
call_2119 = func_2075_call()
uop_2140 = relay.tan(call_2118.astype('float64')) # shape=(12, 12, 7)
uop_2142 = relay.tan(call_2119.astype('float64')) # shape=(12, 12, 7)
func_1352_call = mod.get_global_var('func_1352')
func_1355_call = mutated_mod.get_global_var('func_1355')
const_2155 = relay.const([-0.447462,-5.077090,-5.648224,-6.584587,-9.598113,8.831498,6.109846,-0.457349,-7.967136,9.581508,5.390589,1.971117,-1.081078,2.915785,-6.299535,-6.473225,-8.751238,4.588840,-5.421835,7.696410,-7.583038,8.680037,-8.819439,7.409367,5.354730,-9.127050,-4.775217,-3.744750,4.920135,-6.714271,-8.251447,-7.761005,8.248450,8.588226,-2.602120,-1.436946,-5.075410,-6.524411,0.003176,3.355186,-7.695099,-7.065052,-5.172895,8.110850,-6.957968,2.727469,-7.102765,6.370453,5.769719,8.026953,-7.840996,-5.566840,5.081014,7.523928,-6.822848,3.371798,-1.334219,1.337146,7.966066,1.690664,-5.106955,-5.771348,-5.336779,-3.658276,-0.923371,2.181554,-2.207319,0.692994,-5.270559,-1.502718,-6.646805,-1.275883,7.260859,7.932105,-0.468336,-4.184817,5.655959,-4.970423,3.704228,0.216883,-2.615115,-2.101022,8.973246,3.558314,-8.841459,-8.728529,9.900476,-1.156202,9.740700,9.498938,-1.464625,-6.585409,-0.300265,9.484853,-3.702812,-1.626213,-7.992455,4.322591,-0.988438,2.594386,-8.888657,6.165328,-4.391034,2.814771,4.599010,-0.941857,-0.823633,9.180559,1.282502,-7.301420,-1.977126,-1.900536,3.625202,-0.304924,-0.055237,7.880972,0.796717,7.874077,-6.079519,2.362126,7.883099,3.366016,5.805372,1.165969,5.210434,-6.700674,-5.188666,-3.022380,-7.005614,9.959124,1.750492,3.737316,-8.904213,-4.031714,0.204576,-9.787075,8.242825,4.825494,2.608313,1.414380,-0.541618,-5.264138,8.437358,1.630272,0.720627,-1.635791,9.301295,8.673355,-5.541503,-3.761235,-4.365037,1.788707,-4.089958,-6.152554,7.971487,-0.911863,7.816970,-3.915771,-4.181649,-8.922966,-0.138769,-8.053045,-8.120368,5.522309,5.411424,3.071022,1.858929,-9.224042,9.908582,9.615974,-3.671312,-7.599952,-5.297616,-4.026301,-3.235381,-2.994342,-6.512073,-3.458194,-3.869019,6.975388,7.992818,0.722417,2.368402,-4.464788,-8.464445,5.781962,-5.924935,-4.803536,-6.185619,1.942204,9.912949,-1.022685,-1.663074,3.640665,-2.813406,-2.835943,5.960457,-6.219625,4.643379,9.365865,-9.431384,6.198264,-7.733190,3.694536,-5.852341,-7.280338,-2.567349,8.539415,3.459156,-2.858087,-0.819220,-6.102513,-9.746238,-9.762901,7.110395,-1.051358,1.263693,-4.558064,9.802337,-4.172486,-7.575701,-6.411281,5.081862,2.794587,-2.629480,3.393323,4.017881,-6.282897,-7.693648,3.093775,-0.113592,-7.732472,5.663441,4.051864,-8.357435,8.934940,-8.224163,-8.386350,1.889268,7.918018,9.487843,-8.739978,-7.810888,-5.166472,-6.003406,-5.763371,1.424137,-7.085670,-0.554799,-1.548202,7.799575,9.401061,2.926210,-8.357004,-4.507875,-8.092389,-5.275542,-8.716360,4.901643,8.255186,-6.712022,-0.915169,-5.525431,1.605740,-9.474289,-4.217409,5.568584,-8.496082,1.999277,2.029291,-3.996834,2.085986,4.424688,1.136380,-3.779667,-0.779893,-6.828803,6.522432,6.866834,3.404008,-2.533853,2.365752,-8.074287,-1.643101,-9.060666,3.381775,6.852279,1.749456,-8.435068,1.508365,-3.455085,8.852594,-4.486677,3.592395,8.501576,8.314368,-7.848291,6.580989,-8.520463,-6.198505,-0.317588,9.379593,-4.574868,-5.174269,5.641046,-1.080857,7.393147,7.287114,-6.687097,2.130722,0.895216,9.911946,1.571316,-0.290909,-5.886718,0.023345,-3.985049,-0.715350,7.544092,7.244878,-4.919922,-0.225415,-0.204949,0.282531,8.168960,-1.801160,4.359813,-2.833279,6.488178,2.383334,-0.020064,-1.995828,4.933860,5.034507,9.320166,-3.369649,-5.575425,9.836774,-9.115101,2.411432,4.946281,-5.602114,2.910619,3.391927,-2.599704,-7.178499,0.250344,4.186129,1.259287,-0.858051,-1.754835,-6.333655,0.708247,8.713239,-4.641607,9.837301,-7.651147,7.599141,3.005087,-2.115064,9.206471,-6.524539,0.275578,3.176411,-5.504837,4.222800,-6.250845,-6.924874,9.990514,2.511054,-7.262641,4.630274,9.861490,7.745507,-3.042068,-6.471589,-5.390744,-9.144229,-1.238948,3.356679,2.537280,8.312804,-0.274070,-5.722780,3.153501,-1.201356,-7.423554,4.778697,-0.461210,-4.026968,-0.649250,-8.838827,0.770423,9.794748,-3.700955,5.893172,0.623275,-7.570327,-8.855351,-3.441349,-1.485827,2.636428,-1.694390,-7.934438,2.901696,0.456965,9.640762,8.232784,7.040373,4.055982,7.958905,4.180407,5.716906,-3.449084,-4.326390,-7.057727,7.815918,-3.247906,-8.420663,-8.564325,3.045427,6.423633,6.159463,-9.695379,8.343775,7.895193,-2.788827,-3.557316,-2.978311,4.407017,7.414684,7.790892], dtype = "float32")#candidate|2155|(432,)|const|float32
const_2156 = relay.const([-5,5,6,-7,-5,1,-1,-2,-1,-10,3,-6,4,-8,9,7,8,6,-3,-6,-9,6,5,-8,-4,5,-6,6,-10,-6,-4,5,-5,7,-3,-6,9,-4,-3,1,1,-9,-4,4,9,-4,-2,-6,-9,-7,-5,-7,-9,9,3,1,3,-10,5,2,3,1,-7,2,-8,-10,-4,-7,8,-4,5,5,-5,6,7,6,-6,-7,3,-10,-10,6,-7,-4,-1,8,-4,-6,5,1,-10,6,-5,10,2,-9,-10,4,-9,4,9,-8,4,3,5,-5,-10,-4,2,1,2,6,-8,-1,1,9,-7,4,-2,-3,1,-4,9,-4,-2,6], dtype = "int32")#candidate|2156|(126,)|const|int32
call_2154 = relay.TupleGetItem(func_1352_call(relay.reshape(const_2155.astype('float32'), [9, 16, 3]), relay.reshape(const_2156.astype('int32'), [126,]), ), 1)
call_2157 = relay.TupleGetItem(func_1355_call(relay.reshape(const_2155.astype('float32'), [9, 16, 3]), relay.reshape(const_2156.astype('int32'), [126,]), ), 1)
func_513_call = mod.get_global_var('func_513')
func_516_call = mutated_mod.get_global_var('func_516')
const_2159 = relay.const(5, dtype = "int64")#candidate|2159|()|const|int64
call_2158 = func_513_call(relay.reshape(const_2159.astype('int64'), []))
call_2160 = func_513_call(relay.reshape(const_2159.astype('int64'), []))
bop_2169 = relay.bitwise_xor(uop_2140.astype('uint64'), const_2159.astype('uint64')) # shape=(12, 12, 7)
bop_2172 = relay.bitwise_xor(uop_2142.astype('uint64'), const_2159.astype('uint64')) # shape=(12, 12, 7)
output = relay.Tuple([call_2154,const_2155,const_2156,call_2158,bop_2169,])
output2 = relay.Tuple([call_2157,const_2155,const_2156,call_2160,bop_2172,])
func_2176 = relay.Function([], output)
mod['func_2176'] = func_2176
mod = relay.transform.InferType()(mod)
output = func_2176()
func_2177 = relay.Function([], output)
mutated_mod['func_2177'] = func_2177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2176_call = mod.get_global_var('func_2176')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_2180 = relay.TupleGetItem(func_2176_call(), 4)
call_2181 = relay.TupleGetItem(func_2177_call(), 4)
output = call_2180
output2 = call_2181
func_2185 = relay.Function([], output)
mod['func_2185'] = func_2185
mod = relay.transform.InferType()(mod)
mutated_mod['func_2185'] = func_2185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2185_call = mutated_mod.get_global_var('func_2185')
call_2186 = func_2185_call()
output = call_2186
func_2187 = relay.Function([], output)
mutated_mod['func_2187'] = func_2187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2176_call = mod.get_global_var('func_2176')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_2188 = relay.TupleGetItem(func_2176_call(), 1)
call_2189 = relay.TupleGetItem(func_2177_call(), 1)
func_2176_call = mod.get_global_var('func_2176')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_2190 = relay.TupleGetItem(func_2176_call(), 2)
call_2191 = relay.TupleGetItem(func_2177_call(), 2)
output = relay.Tuple([call_2188,call_2190,])
output2 = relay.Tuple([call_2189,call_2191,])
func_2213 = relay.Function([], output)
mod['func_2213'] = func_2213
mod = relay.transform.InferType()(mod)
mutated_mod['func_2213'] = func_2213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2213_call = mutated_mod.get_global_var('func_2213')
call_2214 = func_2213_call()
output = call_2214
func_2215 = relay.Function([], output)
mutated_mod['func_2215'] = func_2215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2176_call = mod.get_global_var('func_2176')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_2253 = relay.TupleGetItem(func_2176_call(), 0)
call_2254 = relay.TupleGetItem(func_2177_call(), 0)
func_571_call = mod.get_global_var('func_571')
func_574_call = mutated_mod.get_global_var('func_574')
const_2266 = relay.const([[9],[-4],[10],[6],[-2],[10],[-5],[6],[1],[4],[-2],[-3],[-9],[-10]], dtype = "uint64")#candidate|2266|(14, 1)|const|uint64
const_2267 = relay.const([9,-1,-10,-6,3,-9,8,1,9,-3,10,-9,-10,1,1,1,5,2,3,2,-6,2,-2,-9,4,5,9,6,2,-1,-9,-2,6,-10,10,6,10,1,8,-4,-1,-6,-2,-10,-10,-7,7,3,-1,-2,-4,8,-4,-7,-8,7,-1,10,7,-10,-4,6,-6,3,-4,10,-3,4,-7,2,-6,-5,-5,-2,6,9,-1,-1,6,6,-9,1,-7,1], dtype = "uint64")#candidate|2267|(84,)|const|uint64
call_2265 = relay.TupleGetItem(func_571_call(relay.reshape(const_2266.astype('uint64'), [7, 1, 2]), relay.reshape(const_2267.astype('uint64'), [7, 6, 2]), ), 0)
call_2268 = relay.TupleGetItem(func_574_call(relay.reshape(const_2266.astype('uint64'), [7, 1, 2]), relay.reshape(const_2267.astype('uint64'), [7, 6, 2]), ), 0)
uop_2273 = relay.erf(call_2253.astype('float32')) # shape=(96, 1)
uop_2275 = relay.erf(call_2254.astype('float32')) # shape=(96, 1)
uop_2283 = relay.log10(uop_2273.astype('float32')) # shape=(96, 1)
uop_2285 = relay.log10(uop_2275.astype('float32')) # shape=(96, 1)
func_2176_call = mod.get_global_var('func_2176')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_2290 = relay.TupleGetItem(func_2176_call(), 3)
call_2291 = relay.TupleGetItem(func_2177_call(), 3)
func_2185_call = mod.get_global_var('func_2185')
func_2187_call = mutated_mod.get_global_var('func_2187')
call_2292 = func_2185_call()
call_2293 = func_2185_call()
var_2298 = relay.var("var_2298", dtype = "float32", shape = (96, 1))#candidate|2298|(96, 1)|var|float32
bop_2299 = relay.bitwise_or(uop_2283.astype('int16'), relay.reshape(var_2298.astype('int16'), relay.shape_of(uop_2283))) # shape=(96, 1)
bop_2302 = relay.bitwise_or(uop_2285.astype('int16'), relay.reshape(var_2298.astype('int16'), relay.shape_of(uop_2285))) # shape=(96, 1)
bop_2303 = relay.not_equal(var_2298.astype('bool'), relay.reshape(uop_2283.astype('bool'), relay.shape_of(var_2298))) # shape=(96, 1)
bop_2306 = relay.not_equal(var_2298.astype('bool'), relay.reshape(uop_2285.astype('bool'), relay.shape_of(var_2298))) # shape=(96, 1)
bop_2307 = relay.logical_xor(uop_2273.astype('uint16'), relay.reshape(bop_2299.astype('uint16'), relay.shape_of(uop_2273))) # shape=(96, 1)
bop_2310 = relay.logical_xor(uop_2275.astype('uint16'), relay.reshape(bop_2302.astype('uint16'), relay.shape_of(uop_2275))) # shape=(96, 1)
func_2213_call = mod.get_global_var('func_2213')
func_2215_call = mutated_mod.get_global_var('func_2215')
call_2312 = relay.TupleGetItem(func_2213_call(), 0)
call_2313 = relay.TupleGetItem(func_2215_call(), 0)
func_571_call = mod.get_global_var('func_571')
func_574_call = mutated_mod.get_global_var('func_574')
call_2317 = relay.TupleGetItem(func_571_call(relay.reshape(const_2266.astype('uint64'), [7, 1, 2]), relay.reshape(const_2267.astype('uint64'), [7, 6, 2]), ), 0)
call_2318 = relay.TupleGetItem(func_574_call(relay.reshape(const_2266.astype('uint64'), [7, 1, 2]), relay.reshape(const_2267.astype('uint64'), [7, 6, 2]), ), 0)
func_2176_call = mod.get_global_var('func_2176')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_2321 = relay.TupleGetItem(func_2176_call(), 3)
call_2322 = relay.TupleGetItem(func_2177_call(), 3)
func_2185_call = mod.get_global_var('func_2185')
func_2187_call = mutated_mod.get_global_var('func_2187')
call_2323 = func_2185_call()
call_2324 = func_2185_call()
output = relay.Tuple([call_2265,const_2266,const_2267,call_2290,call_2292,bop_2303,bop_2307,call_2312,call_2317,call_2321,call_2323,])
output2 = relay.Tuple([call_2268,const_2266,const_2267,call_2291,call_2293,bop_2306,bop_2310,call_2313,call_2318,call_2322,call_2324,])
func_2327 = relay.Function([var_2298,], output)
mod['func_2327'] = func_2327
mod = relay.transform.InferType()(mod)
mutated_mod['func_2327'] = func_2327
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2328 = relay.var("var_2328", dtype = "float32", shape = (96, 1))#candidate|2328|(96, 1)|var|float32
func_2327_call = mutated_mod.get_global_var('func_2327')
call_2329 = func_2327_call(var_2328)
output = call_2329
func_2330 = relay.Function([var_2328], output)
mutated_mod['func_2330'] = func_2330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2075_call = mod.get_global_var('func_2075')
func_2077_call = mutated_mod.get_global_var('func_2077')
call_2352 = func_2075_call()
call_2353 = func_2075_call()
uop_2361 = relay.erf(call_2352.astype('float64')) # shape=(12, 12, 7)
uop_2363 = relay.erf(call_2353.astype('float64')) # shape=(12, 12, 7)
func_1648_call = mod.get_global_var('func_1648')
func_1651_call = mutated_mod.get_global_var('func_1651')
var_2384 = relay.var("var_2384", dtype = "int64", shape = (504,))#candidate|2384|(504,)|var|int64
call_2383 = relay.TupleGetItem(func_1648_call(relay.reshape(var_2384.astype('int64'), [9, 7, 8])), 0)
call_2385 = relay.TupleGetItem(func_1651_call(relay.reshape(var_2384.astype('int64'), [9, 7, 8])), 0)
func_571_call = mod.get_global_var('func_571')
func_574_call = mutated_mod.get_global_var('func_574')
const_2394 = relay.const([[3],[-4],[-3],[2],[-5],[-3],[-1],[10],[-3],[-6],[3],[2],[-3],[-7]], dtype = "uint64")#candidate|2394|(14, 1)|const|uint64
var_2395 = relay.var("var_2395", dtype = "uint64", shape = (84,))#candidate|2395|(84,)|var|uint64
call_2393 = relay.TupleGetItem(func_571_call(relay.reshape(const_2394.astype('uint64'), [7, 1, 2]), relay.reshape(var_2395.astype('uint64'), [7, 6, 2]), ), 0)
call_2396 = relay.TupleGetItem(func_574_call(relay.reshape(const_2394.astype('uint64'), [7, 1, 2]), relay.reshape(var_2395.astype('uint64'), [7, 6, 2]), ), 0)
output = relay.Tuple([uop_2361,call_2383,var_2384,call_2393,const_2394,var_2395,])
output2 = relay.Tuple([uop_2363,call_2385,var_2384,call_2396,const_2394,var_2395,])
func_2401 = relay.Function([var_2384,var_2395,], output)
mod['func_2401'] = func_2401
mod = relay.transform.InferType()(mod)
var_2402 = relay.var("var_2402", dtype = "int64", shape = (504,))#candidate|2402|(504,)|var|int64
var_2403 = relay.var("var_2403", dtype = "uint64", shape = (84,))#candidate|2403|(84,)|var|uint64
output = func_2401(var_2402,var_2403,)
func_2404 = relay.Function([var_2402,var_2403,], output)
mutated_mod['func_2404'] = func_2404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2075_call = mod.get_global_var('func_2075')
func_2077_call = mutated_mod.get_global_var('func_2077')
call_2422 = func_2075_call()
call_2423 = func_2075_call()
uop_2425 = relay.log2(call_2422.astype('float64')) # shape=(12, 12, 7)
uop_2427 = relay.log2(call_2423.astype('float64')) # shape=(12, 12, 7)
var_2432 = relay.var("var_2432", dtype = "float64", shape = (12, 12, 7))#candidate|2432|(12, 12, 7)|var|float64
bop_2433 = relay.equal(uop_2425.astype('bool'), relay.reshape(var_2432.astype('bool'), relay.shape_of(uop_2425))) # shape=(12, 12, 7)
bop_2436 = relay.equal(uop_2427.astype('bool'), relay.reshape(var_2432.astype('bool'), relay.shape_of(uop_2427))) # shape=(12, 12, 7)
bop_2437 = relay.divide(bop_2433.astype('float64'), relay.reshape(uop_2425.astype('float64'), relay.shape_of(bop_2433))) # shape=(12, 12, 7)
bop_2440 = relay.divide(bop_2436.astype('float64'), relay.reshape(uop_2427.astype('float64'), relay.shape_of(bop_2436))) # shape=(12, 12, 7)
bop_2445 = relay.less_equal(uop_2425.astype('bool'), relay.reshape(bop_2437.astype('bool'), relay.shape_of(uop_2425))) # shape=(12, 12, 7)
bop_2448 = relay.less_equal(uop_2427.astype('bool'), relay.reshape(bop_2440.astype('bool'), relay.shape_of(uop_2427))) # shape=(12, 12, 7)
output = relay.Tuple([bop_2445,])
output2 = relay.Tuple([bop_2448,])
func_2451 = relay.Function([var_2432,], output)
mod['func_2451'] = func_2451
mod = relay.transform.InferType()(mod)
mutated_mod['func_2451'] = func_2451
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2452 = relay.var("var_2452", dtype = "float64", shape = (12, 12, 7))#candidate|2452|(12, 12, 7)|var|float64
func_2451_call = mutated_mod.get_global_var('func_2451')
call_2453 = func_2451_call(var_2452)
output = call_2453
func_2454 = relay.Function([var_2452], output)
mutated_mod['func_2454'] = func_2454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2075_call = mod.get_global_var('func_2075')
func_2077_call = mutated_mod.get_global_var('func_2077')
call_2498 = func_2075_call()
call_2499 = func_2075_call()
output = call_2498
output2 = call_2499
func_2508 = relay.Function([], output)
mod['func_2508'] = func_2508
mod = relay.transform.InferType()(mod)
output = func_2508()
func_2509 = relay.Function([], output)
mutated_mod['func_2509'] = func_2509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2185_call = mod.get_global_var('func_2185')
func_2187_call = mutated_mod.get_global_var('func_2187')
call_2525 = func_2185_call()
call_2526 = func_2185_call()
func_1420_call = mod.get_global_var('func_1420')
func_1422_call = mutated_mod.get_global_var('func_1422')
const_2539 = relay.const([-8.256823,7.529364,-8.049057,8.287359,9.040210,-2.412043,-8.176172,5.946600,-4.796717,-4.584412,4.102244,2.641123,7.678226,-5.642923,4.580473,6.666410,-9.997444,-5.672849,5.389723,1.281073,-9.337301,-5.406046,5.125366,3.918157,0.393426,-5.189492,-9.602629,7.281753,1.490299,3.903704,8.587736,-6.663192,3.866843,5.110460,-1.123047,8.172755,-0.254111,3.555537,9.497794,-5.596077,0.160698,-8.656819,-9.951947,4.878617,5.206821,-2.472524,4.708098,-6.511663,4.386203,1.129650,-1.560758,-6.015070,-8.542770,-7.765219,2.904000,-2.200106,-8.130769,-6.013419,-9.147804,-1.740142,-0.559950,-4.993026,4.407723,-4.980660,-5.360527,6.890130,9.244764,-1.752965,4.573553,0.022088,5.570588,8.195785,-2.635146,-3.752835,1.550937,-5.103519,8.981324,8.811015,-3.987976,-9.307146,8.776928,5.546421,5.160743,-7.971494,8.415146,5.799523,1.191244,-2.257332,0.996203,-3.727781,0.259206,-6.251781,-0.882071,0.201551,-8.164271,5.314645,8.786477,-6.798645,-7.017649,-1.000067,-1.894129,-6.368723,-4.292536,-0.264573,9.610932,2.490447,1.675245,-3.133304,2.859000,-0.097986,2.452573,-5.650460,9.197560,5.057428,4.639018,9.168091,-9.285237,-5.408068,-3.105045,-1.576965,6.565548,-7.746669,6.303072,-3.408538,-3.498818,-3.253312,7.477069,8.080058,2.414959,-4.995040,-7.030718,8.660244,-5.887432,4.256453,-6.288570], dtype = "float64")#candidate|2539|(135,)|const|float64
call_2538 = relay.TupleGetItem(func_1420_call(relay.reshape(const_2539.astype('float64'), [9, 3, 5])), 0)
call_2540 = relay.TupleGetItem(func_1422_call(relay.reshape(const_2539.astype('float64'), [9, 3, 5])), 0)
uop_2548 = relay.asin(call_2525.astype('float64')) # shape=(12, 12, 7)
uop_2550 = relay.asin(call_2526.astype('float64')) # shape=(12, 12, 7)
func_571_call = mod.get_global_var('func_571')
func_574_call = mutated_mod.get_global_var('func_574')
const_2555 = relay.const([[-9,-7,10,-2,1,-1,-8,-8,4,7,-7,1,4,4]], dtype = "uint64")#candidate|2555|(1, 14)|const|uint64
var_2556 = relay.var("var_2556", dtype = "uint64", shape = (84,))#candidate|2556|(84,)|var|uint64
call_2554 = relay.TupleGetItem(func_571_call(relay.reshape(const_2555.astype('uint64'), [7, 1, 2]), relay.reshape(var_2556.astype('uint64'), [7, 6, 2]), ), 0)
call_2557 = relay.TupleGetItem(func_574_call(relay.reshape(const_2555.astype('uint64'), [7, 1, 2]), relay.reshape(var_2556.astype('uint64'), [7, 6, 2]), ), 0)
output = relay.Tuple([call_2538,const_2539,uop_2548,call_2554,const_2555,var_2556,])
output2 = relay.Tuple([call_2540,const_2539,uop_2550,call_2557,const_2555,var_2556,])
func_2561 = relay.Function([var_2556,], output)
mod['func_2561'] = func_2561
mod = relay.transform.InferType()(mod)
mutated_mod['func_2561'] = func_2561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2562 = relay.var("var_2562", dtype = "uint64", shape = (84,))#candidate|2562|(84,)|var|uint64
func_2561_call = mutated_mod.get_global_var('func_2561')
call_2563 = func_2561_call(var_2562)
output = call_2563
func_2564 = relay.Function([var_2562], output)
mutated_mod['func_2564'] = func_2564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2508_call = mod.get_global_var('func_2508')
func_2509_call = mutated_mod.get_global_var('func_2509')
call_2576 = func_2508_call()
call_2577 = func_2508_call()
output = relay.Tuple([call_2576,])
output2 = relay.Tuple([call_2577,])
func_2578 = relay.Function([], output)
mod['func_2578'] = func_2578
mod = relay.transform.InferType()(mod)
output = func_2578()
func_2579 = relay.Function([], output)
mutated_mod['func_2579'] = func_2579
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2596 = relay.var("var_2596", dtype = "float64", shape = (11, 9, 7))#candidate|2596|(11, 9, 7)|var|float64
uop_2597 = relay.tan(var_2596.astype('float64')) # shape=(11, 9, 7)
output = relay.Tuple([uop_2597,])
output2 = relay.Tuple([uop_2597,])
func_2605 = relay.Function([var_2596,], output)
mod['func_2605'] = func_2605
mod = relay.transform.InferType()(mod)
var_2606 = relay.var("var_2606", dtype = "float64", shape = (11, 9, 7))#candidate|2606|(11, 9, 7)|var|float64
output = func_2605(var_2606)
func_2607 = relay.Function([var_2606], output)
mutated_mod['func_2607'] = func_2607
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2613 = relay.var("var_2613", dtype = "float64", shape = (10, 15, 8))#candidate|2613|(10, 15, 8)|var|float64
uop_2614 = relay.atan(var_2613.astype('float64')) # shape=(10, 15, 8)
func_2185_call = mod.get_global_var('func_2185')
func_2187_call = mutated_mod.get_global_var('func_2187')
call_2631 = func_2185_call()
call_2632 = func_2185_call()
func_1648_call = mod.get_global_var('func_1648')
func_1651_call = mutated_mod.get_global_var('func_1651')
var_2645 = relay.var("var_2645", dtype = "int64", shape = (1, 504))#candidate|2645|(1, 504)|var|int64
call_2644 = relay.TupleGetItem(func_1648_call(relay.reshape(var_2645.astype('int64'), [9, 7, 8])), 0)
call_2646 = relay.TupleGetItem(func_1651_call(relay.reshape(var_2645.astype('int64'), [9, 7, 8])), 0)
output = relay.Tuple([uop_2614,call_2631,call_2644,var_2645,])
output2 = relay.Tuple([uop_2614,call_2632,call_2646,var_2645,])
func_2649 = relay.Function([var_2613,var_2645,], output)
mod['func_2649'] = func_2649
mod = relay.transform.InferType()(mod)
var_2650 = relay.var("var_2650", dtype = "float64", shape = (10, 15, 8))#candidate|2650|(10, 15, 8)|var|float64
var_2651 = relay.var("var_2651", dtype = "int64", shape = (1, 504))#candidate|2651|(1, 504)|var|int64
output = func_2649(var_2650,var_2651,)
func_2652 = relay.Function([var_2650,var_2651,], output)
mutated_mod['func_2652'] = func_2652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2185_call = mod.get_global_var('func_2185')
func_2187_call = mutated_mod.get_global_var('func_2187')
call_2666 = func_2185_call()
call_2667 = func_2185_call()
func_1953_call = mod.get_global_var('func_1953')
func_1956_call = mutated_mod.get_global_var('func_1956')
const_2673 = relay.const([-7.383491,-7.919629,4.625488,-3.330335,-5.363149,-0.481181,2.572309,-1.111505,-2.281401,-8.557109,-2.571032,1.126307,-4.604966,-0.805636,7.555940,-6.809708,-2.766927,-8.539152,5.425719,2.576699,4.942212,8.610176,0.303827,4.396052,5.099361,7.066250,-5.935932,1.663793,0.518368,-5.604068,-5.717109,-9.729728,6.208731,7.813215,3.628290,8.031337,-8.600426,9.433342,-2.462015,-3.264746,-0.278665,0.948565,-5.968308,5.406205,3.575205,-8.301843,-7.702894,-3.739337,-6.954224,9.574433,-6.780959,-2.938771,4.666388,3.858708,-4.516223,6.003059,6.038668,-8.423491,1.384837,3.042438,0.840155,9.690513,-0.267910,-1.151510,2.407868,7.496268,-6.324262,-6.643007,7.010155,2.774848,4.920603,9.609344,-5.901888,3.959435,5.437591,-4.560433,-9.235549,0.297076,7.199087,8.065499,8.749355,7.434327,7.043070,3.046401,4.572428,-7.234215,-1.895494,9.600402,6.494199,-9.474666,3.881189,-7.999885,-7.952067,-9.576073,5.988526,-4.732367,-9.316160,-0.220674,-3.705606,7.638939,-7.360377,-7.966265,6.713407,9.191795,-3.076542,9.580089,-3.768117,-1.139943,2.944981,4.453204,-5.912375,7.807845,8.750687,-7.913883,-6.080394,7.011305,-9.665308,3.217866,4.442451,-1.208853,-4.119976,9.831449,2.786475,-0.598695,-7.723695,5.384928], dtype = "float32")#candidate|2673|(126,)|const|float32
call_2672 = relay.TupleGetItem(func_1953_call(relay.reshape(const_2673.astype('float32'), [7, 2, 9])), 0)
call_2674 = relay.TupleGetItem(func_1956_call(relay.reshape(const_2673.astype('float32'), [7, 2, 9])), 0)
output = relay.Tuple([call_2666,call_2672,const_2673,])
output2 = relay.Tuple([call_2667,call_2674,const_2673,])
func_2675 = relay.Function([], output)
mod['func_2675'] = func_2675
mod = relay.transform.InferType()(mod)
output = func_2675()
func_2676 = relay.Function([], output)
mutated_mod['func_2676'] = func_2676
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2677 = relay.var("var_2677", dtype = "float32", shape = (16, 14, 14))#candidate|2677|(16, 14, 14)|var|float32
var_2678 = relay.var("var_2678", dtype = "float32", shape = (16, 14, 14))#candidate|2678|(16, 14, 14)|var|float32
bop_2679 = relay.subtract(var_2677.astype('float32'), relay.reshape(var_2678.astype('float32'), relay.shape_of(var_2677))) # shape=(16, 14, 14)
func_1648_call = mod.get_global_var('func_1648')
func_1651_call = mutated_mod.get_global_var('func_1651')
const_2686 = relay.const([9,-10,9,-1,4,-8,-6,6,-7,6,8,7,-2,2,-9,5,9,5,1,4,5,-6,2,-8,10,9,3,-8,10,-2,7,9,3,5,-9,-3,-2,-3,10,-3,7,-6,5,-5,6,-6,-5,10,-10,-5,-5,-3,-7,9,-10,-8,2,7,-2,4,10,-10,8,4,-4,-9,9,-5,-10,4,7,-9,7,-8,-6,6,4,-10,7,-10,-3,9,-3,-10,9,3,5,-6,-7,1,7,-7,3,-3,1,1,-4,-8,5,10,-2,-1,-6,-1,-1,4,8,-9,9,1,-7,6,3,8,1,-3,10,2,-10,7,-3,-9,4,-4,-2,-5,-7,10,-4,-9,6,-10,5,2,-4,7,4,10,4,3,1,6,-8,10,-5,-8,9,9,9,1,2,1,-4,4,-9,3,-4,9,-5,5,-8,-3,3,2,3,7,9,-1,-1,10,-1,-1,4,-10,-1,-1,10,-5,-5,-6,8,6,-1,2,-2,-3,5,-2,6,-10,-7,-3,4,-9,-4,-9,-8,2,2,3,-6,8,10,2,10,-2,-2,3,4,-9,8,-3,-3,-8,-10,-8,7,10,6,5,6,2,-4,-6,-8,7,2,-2,6,1,-9,2,7,-7,-6,8,2,1,-6,4,-3,9,10,4,9,2,6,-8,-6,5,-7,-5,4,5,-5,3,-8,5,4,-4,5,-3,-9,-4,-5,-8,-4,1,1,8,-3,-5,-3,-8,2,-10,-7,-9,-3,1,4,10,2,-3,-5,10,4,-8,-8,6,10,8,-8,-4,-10,10,-4,-9,10,-3,5,-5,-9,-7,-1,6,8,9,-10,8,-9,3,9,-2,-6,-5,8,-3,3,5,-1,-5,6,-5,-8,6,1,3,-3,-10,1,3,5,8,4,-4,-8,-5,7,-1,-5,4,-8,8,3,-4,5,-4,3,-10,7,3,-7,10,-2,-10,-9,5,-1,-1,-2,7,-10,10,4,2,6,-5,-6,6,5,5,2,1,4,8,-7,-5,-7,-2,-5,-2,-10,5,-3,3,8,-4,-9,-4,9,1,8,-4,-1,5,3,-8,-6,10,-3,-7,-3,1,-6,-5,6,2,3,8,6,-1,-1,-3,-1,6,8,-7,4,2,-5,-6,4,5,-6,3,-6,-1,3,-6,7,-10,-5,3,-7,1,4,4,-5,-9,-4,3,7,9,-5,6,-4,4,-3,1,4,3,9,-9,-6,7,1,10,-1,-1,3,-8,-4,-8,-1,-9,1,4,7,6,4,-3,-3,-6,-1,1,-4,1,-9,-5,10,-7,5,-2,-7,-6,-2,-7,-2,-9,9,7,7,9,10,8,9,-10,-7,7,-1,-6,-3,-7], dtype = "int64")#candidate|2686|(504,)|const|int64
call_2685 = relay.TupleGetItem(func_1648_call(relay.reshape(const_2686.astype('int64'), [9, 7, 8])), 0)
call_2687 = relay.TupleGetItem(func_1651_call(relay.reshape(const_2686.astype('int64'), [9, 7, 8])), 0)
func_2605_call = mod.get_global_var('func_2605')
func_2607_call = mutated_mod.get_global_var('func_2607')
var_2696 = relay.var("var_2696", dtype = "float64", shape = (693,))#candidate|2696|(693,)|var|float64
call_2695 = relay.TupleGetItem(func_2605_call(relay.reshape(var_2696.astype('float64'), [11, 9, 7])), 0)
call_2697 = relay.TupleGetItem(func_2607_call(relay.reshape(var_2696.astype('float64'), [11, 9, 7])), 0)
output = relay.Tuple([bop_2679,call_2685,const_2686,call_2695,var_2696,])
output2 = relay.Tuple([bop_2679,call_2687,const_2686,call_2697,var_2696,])
func_2704 = relay.Function([var_2677,var_2678,var_2696,], output)
mod['func_2704'] = func_2704
mod = relay.transform.InferType()(mod)
var_2705 = relay.var("var_2705", dtype = "float32", shape = (16, 14, 14))#candidate|2705|(16, 14, 14)|var|float32
var_2706 = relay.var("var_2706", dtype = "float32", shape = (16, 14, 14))#candidate|2706|(16, 14, 14)|var|float32
var_2707 = relay.var("var_2707", dtype = "float64", shape = (693,))#candidate|2707|(693,)|var|float64
output = func_2704(var_2705,var_2706,var_2707,)
func_2708 = relay.Function([var_2705,var_2706,var_2707,], output)
mutated_mod['func_2708'] = func_2708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2213_call = mod.get_global_var('func_2213')
func_2215_call = mutated_mod.get_global_var('func_2215')
call_2731 = relay.TupleGetItem(func_2213_call(), 0)
call_2732 = relay.TupleGetItem(func_2215_call(), 0)
func_571_call = mod.get_global_var('func_571')
func_574_call = mutated_mod.get_global_var('func_574')
var_2742 = relay.var("var_2742", dtype = "uint64", shape = (14, 1))#candidate|2742|(14, 1)|var|uint64
const_2743 = relay.const([3,6,-2,2,4,-3,-7,4,-4,2,3,-10,-1,-3,-5,-7,-2,2,6,2,-9,5,-9,-6,2,-9,-3,5,3,7,4,6,-6,4,4,4,-8,9,-9,-10,-2,-5,9,9,2,2,1,-4,8,-1,-3,-8,-5,10,-2,5,1,-9,2,4,5,9,-6,2,-10,-10,9,4,5,-10,-4,10,-4,6,8,-1,-8,8,-3,9,5,-6,7,2], dtype = "uint64")#candidate|2743|(84,)|const|uint64
call_2741 = relay.TupleGetItem(func_571_call(relay.reshape(var_2742.astype('uint64'), [7, 1, 2]), relay.reshape(const_2743.astype('uint64'), [7, 6, 2]), ), 0)
call_2744 = relay.TupleGetItem(func_574_call(relay.reshape(var_2742.astype('uint64'), [7, 1, 2]), relay.reshape(const_2743.astype('uint64'), [7, 6, 2]), ), 0)
func_2401_call = mod.get_global_var('func_2401')
func_2404_call = mutated_mod.get_global_var('func_2404')
var_2747 = relay.var("var_2747", dtype = "int64", shape = (504,))#candidate|2747|(504,)|var|int64
call_2746 = relay.TupleGetItem(func_2401_call(relay.reshape(var_2747.astype('int64'), [504,]), relay.reshape(call_2741.astype('uint64'), [84,]), ), 4)
call_2748 = relay.TupleGetItem(func_2404_call(relay.reshape(var_2747.astype('int64'), [504,]), relay.reshape(call_2741.astype('uint64'), [84,]), ), 4)
func_2176_call = mod.get_global_var('func_2176')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_2749 = relay.TupleGetItem(func_2176_call(), 2)
call_2750 = relay.TupleGetItem(func_2177_call(), 2)
output = relay.Tuple([call_2731,call_2741,var_2742,const_2743,call_2746,var_2747,call_2749,])
output2 = relay.Tuple([call_2732,call_2744,var_2742,const_2743,call_2748,var_2747,call_2750,])
func_2754 = relay.Function([var_2742,var_2747,], output)
mod['func_2754'] = func_2754
mod = relay.transform.InferType()(mod)
mutated_mod['func_2754'] = func_2754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2754_call = mutated_mod.get_global_var('func_2754')
var_2756 = relay.var("var_2756", dtype = "uint64", shape = (14, 1))#candidate|2756|(14, 1)|var|uint64
var_2757 = relay.var("var_2757", dtype = "int64", shape = (504,))#candidate|2757|(504,)|var|int64
call_2755 = func_2754_call(var_2756,var_2757,)
output = call_2755
func_2758 = relay.Function([var_2756,var_2757,], output)
mutated_mod['func_2758'] = func_2758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2185_call = mod.get_global_var('func_2185')
func_2187_call = mutated_mod.get_global_var('func_2187')
call_2760 = func_2185_call()
call_2761 = func_2185_call()
func_2754_call = mod.get_global_var('func_2754')
func_2758_call = mutated_mod.get_global_var('func_2758')
var_2781 = relay.var("var_2781", dtype = "uint64", shape = (14,))#candidate|2781|(14,)|var|uint64
var_2782 = relay.var("var_2782", dtype = "int64", shape = (504,))#candidate|2782|(504,)|var|int64
call_2780 = relay.TupleGetItem(func_2754_call(relay.reshape(var_2781.astype('uint64'), [14, 1]), relay.reshape(var_2782.astype('int64'), [504,]), ), 5)
call_2783 = relay.TupleGetItem(func_2758_call(relay.reshape(var_2781.astype('uint64'), [14, 1]), relay.reshape(var_2782.astype('int64'), [504,]), ), 5)
output = relay.Tuple([call_2760,call_2780,var_2781,var_2782,])
output2 = relay.Tuple([call_2761,call_2783,var_2781,var_2782,])
func_2786 = relay.Function([var_2781,var_2782,], output)
mod['func_2786'] = func_2786
mod = relay.transform.InferType()(mod)
mutated_mod['func_2786'] = func_2786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mutated_mod.get_global_var('func_2786')
var_2788 = relay.var("var_2788", dtype = "uint64", shape = (14,))#candidate|2788|(14,)|var|uint64
var_2789 = relay.var("var_2789", dtype = "int64", shape = (504,))#candidate|2789|(504,)|var|int64
call_2787 = func_2786_call(var_2788,var_2789,)
output = call_2787
func_2790 = relay.Function([var_2788,var_2789,], output)
mutated_mod['func_2790'] = func_2790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2508_call = mod.get_global_var('func_2508')
func_2509_call = mutated_mod.get_global_var('func_2509')
call_2813 = func_2508_call()
call_2814 = func_2508_call()
output = relay.Tuple([call_2813,])
output2 = relay.Tuple([call_2814,])
func_2825 = relay.Function([], output)
mod['func_2825'] = func_2825
mod = relay.transform.InferType()(mod)
mutated_mod['func_2825'] = func_2825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2825_call = mutated_mod.get_global_var('func_2825')
call_2826 = func_2825_call()
output = call_2826
func_2827 = relay.Function([], output)
mutated_mod['func_2827'] = func_2827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_2878 = relay.TupleGetItem(func_2675_call(), 0)
call_2879 = relay.TupleGetItem(func_2676_call(), 0)
output = call_2878
output2 = call_2879
func_2882 = relay.Function([], output)
mod['func_2882'] = func_2882
mod = relay.transform.InferType()(mod)
mutated_mod['func_2882'] = func_2882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2882_call = mutated_mod.get_global_var('func_2882')
call_2883 = func_2882_call()
output = call_2883
func_2884 = relay.Function([], output)
mutated_mod['func_2884'] = func_2884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2825_call = mod.get_global_var('func_2825')
func_2827_call = mutated_mod.get_global_var('func_2827')
call_2885 = relay.TupleGetItem(func_2825_call(), 0)
call_2886 = relay.TupleGetItem(func_2827_call(), 0)
var_2891 = relay.var("var_2891", dtype = "int32", shape = (12, 12, 7))#candidate|2891|(12, 12, 7)|var|int32
bop_2892 = relay.mod(call_2885.astype('float64'), relay.reshape(var_2891.astype('float64'), relay.shape_of(call_2885))) # shape=(12, 12, 7)
bop_2895 = relay.mod(call_2886.astype('float64'), relay.reshape(var_2891.astype('float64'), relay.shape_of(call_2886))) # shape=(12, 12, 7)
func_2327_call = mod.get_global_var('func_2327')
func_2330_call = mutated_mod.get_global_var('func_2330')
var_2921 = relay.var("var_2921", dtype = "float32", shape = (96,))#candidate|2921|(96,)|var|float32
call_2920 = relay.TupleGetItem(func_2327_call(relay.reshape(var_2921.astype('float32'), [96, 1])), 2)
call_2922 = relay.TupleGetItem(func_2330_call(relay.reshape(var_2921.astype('float32'), [96, 1])), 2)
output = relay.Tuple([bop_2892,call_2920,var_2921,])
output2 = relay.Tuple([bop_2895,call_2922,var_2921,])
func_2937 = relay.Function([var_2891,var_2921,], output)
mod['func_2937'] = func_2937
mod = relay.transform.InferType()(mod)
var_2938 = relay.var("var_2938", dtype = "int32", shape = (12, 12, 7))#candidate|2938|(12, 12, 7)|var|int32
var_2939 = relay.var("var_2939", dtype = "float32", shape = (96,))#candidate|2939|(96,)|var|float32
output = func_2937(var_2938,var_2939,)
func_2940 = relay.Function([var_2938,var_2939,], output)
mutated_mod['func_2940'] = func_2940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2176_call = mod.get_global_var('func_2176')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_2946 = relay.TupleGetItem(func_2176_call(), 0)
call_2947 = relay.TupleGetItem(func_2177_call(), 0)
func_2937_call = mod.get_global_var('func_2937')
func_2940_call = mutated_mod.get_global_var('func_2940')
const_2956 = relay.const([-2,-6,10,-7,8,-1,10,5,10,10,5,-6,-5,-5,4,3,-3,-2,-4,3,-4,-10,-4,8,-1,7,-10,-1,1,7,5,1,9,-1,6,-7,-10,7,-2,-8,-5,10,-8,-10,8,6,9,3,5,-3,10,1,6,6,5,10,-10,7,3,1,-7,5,6,-4,-4,2,-6,3,-3,2,4,-9,-4,6,-6,-7,2,8,3,-1,-8,8,5,8,4,-7,-1,5,-5,-3,6,5,-3,9,5,-3,-2,9,-4,-7,-4,-9,1,2,-4,10,-4,-1,-9,5,10,-9,8,-10,-2,3,1,4,-5,-1,-1,1,5,-2,-2,-8,-6,-5,-4,9,3,-3,3,6,2,-6,-8,8,-9,-10,9,5,7,-10,-6,7,10,-2,5,-8,7,2,1,9,-2,2,6,-9,-7,4,-7,-1,-10,9,-2,4,2,-5,10,4,-4,5,2,-3,-2,-10,-7,-7,5,2,-2,-7,6,7,7,-8,-8,10,-9,-8,-1,2,-1,-7,-7,-4,-7,3,-2,-1,-4,7,-4,-1,-10,-5,-7,-1,8,-5,-8,3,-7,-1,9,-7,1,-4,-10,7,1,-3,9,-7,3,-1,8,-6,-10,-3,9,3,-3,-6,-9,-3,6,-9,1,3,7,-2,-8,1,5,9,5,7,-9,10,-7,8,-2,-10,2,-6,-7,-5,7,7,9,10,-7,1,10,-4,6,-10,-9,-1,4,-2,-6,-8,-1,6,10,-4,-1,-5,-6,-7,10,-1,8,10,9,-4,6,-7,6,7,-9,5,5,2,8,4,-7,-7,-8,6,8,10,2,3,1,6,-2,-2,10,8,5,5,8,-6,8,2,4,10,-1,3,-4,2,9,-4,-9,-8,6,-6,-5,1,-6,7,-6,5,-1,-9,-9,-2,-8,9,9,-2,1,9,2,-9,-2,-10,5,-8,-6,-5,10,3,-4,-5,-10,-7,-7,-8,6,-9,4,-9,-5,-7,-3,-5,-2,1,1,-8,-3,5,-3,10,8,6,-9,3,1,6,-4,7,9,1,-1,4,-6,-5,10,8,5,2,-10,-1,-6,-5,5,-6,9,6,-6,6,-9,-3,-6,-7,-5,-8,-5,-6,-3,-1,2,-5,-5,-10,3,-5,7,-1,8,-6,8,-10,3,2,-6,6,-10,-8,4,-6,-4,-9,-10,3,-10,-3,-5,1,-8,3,8,3,-2,1,-6,5,9,-10,4,-6,-6,-3,1,-10,9,-4,-5,-4,-7,5,3,5,3,8,-3,-2,-5,-2,8,-7,5,3,8,9,2,1,3,7,1,3,-2,-3,-9,5,-6,6,4,5,7,-9,7,6,6,-6,-1,-3,6,-1,-2,4,-9,-3,-2,-6,2,9,7,-1,-9,2,-8,2,-2,10,-7,1,-7,-8,-3,-7,2,-6,1,4,8,7,-10,9,2,-3,4,-7,-10,-9,1,-10,1,-2,5,10,1,-7,-8,2,-8,9,10,-2,-10,5,-6,-4,9,9,3,5,-9,-6,3,-7,2,-4,3,-5,6,4,-5,10,6,7,-1,5,9,6,-9,4,10,-6,-3,-6,10,-4,8,-8,3,4,-2,-5,10,4,6,-1,-5,9,-9,-8,5,-6,7,-7,-1,-6,2,5,-3,-3,4,-5,-4,-8,9,2,9,-9,3,-7,-9,-1,-2,-6,3,4,-7,8,-5,-2,2,10,-5,-6,-5,5,3,8,2,10,7,-5,-5,4,9,6,-2,-1,-5,7,9,7,-8,9,1,5,5,10,3,2,2,1,4,2,10,-9,-9,-5,1,9,5,-10,4,-4,6,8,4,1,-5,7,-10,8,-3,8,-7,8,3,-6,-9,-5,-6,10,-4,8,-4,7,-1,3,6,-10,10,-6,-5,1,1,-9,-9,-7,-10,4,-9,-7,-4,4,4,4,1,9,2,-10,-6,-2,-7,-7,3,10,2,2,-10,5,-10,9,9,-7,-8,6,5,-6,-8,-9,6,-4,-9,-4,3,-10,-8,-6,7,-10,10,6,5,-8,-6,-3,-8,-3,-3,3,-6,-1,-4,-3,-8,-5,-10,-6,4,5,10,-6,-5,7,-6,4,-5,-8,1,9,8,-10,8,3,-9,-4,8,-1,-7,-3,-7,6,-3,3,6,5,-8,2,2,-8,6,2,-1,9,1,2,-8,-2,-3,-4,6,2,-6,-2,2,9,-1,5,6,-2,7,-5,-4,-5,1,-5,1,-1,-4,7,-2,-5,9,-6,4,-2,-4,6,-5,5,2,-10,-7,-2,-3,-8,-7,-9,3,-3,-5,-9,-3,9,8,3,3,-5,-6,3,7,-8,4,-3,3,3,-1,7,7,-6,-9,5,4,-4,10,-4,7,-3,7,8,-2,-8,-3,-10,10,-7,5,-10,-3,-9,-2,-2,-3,9,-3,-2,8,-9,-2,3,-5,10,2,8,6,10,10,-6,9,7,-2,6,-6,1,3,9,-4,-7,2,-2,3,-8,-4,-10,-2,4,5,-6,-6,-8,-4,-7,9,-3,-1,1,6,9,-6,2,7,5,-5,-2,1,10,-8,-2,-4,9,-1,-9,10,7,-10,-5,5,8,3,3,-1,-7,-1,-9,-5,10,9,-1,9,6,-6,-6,-2,-1,6,9,6,-10,7,3,6,-8,-5,7,-8,3,5,-5,4,4,-9,-9,8,-5,9,-7,-3,1,5,-10,-10,-6,-2,3,-6,-8], dtype = "int32")#candidate|2956|(1008,)|const|int32
call_2955 = relay.TupleGetItem(func_2937_call(relay.reshape(const_2956.astype('int32'), [12, 12, 7]), relay.reshape(call_2946.astype('float32'), [96,]), ), 2)
call_2957 = relay.TupleGetItem(func_2940_call(relay.reshape(const_2956.astype('int32'), [12, 12, 7]), relay.reshape(call_2946.astype('float32'), [96,]), ), 2)
output = relay.Tuple([call_2946,call_2955,const_2956,])
output2 = relay.Tuple([call_2947,call_2957,const_2956,])
func_2962 = relay.Function([], output)
mod['func_2962'] = func_2962
mod = relay.transform.InferType()(mod)
output = func_2962()
func_2963 = relay.Function([], output)
mutated_mod['func_2963'] = func_2963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2962_call = mod.get_global_var('func_2962')
func_2963_call = mutated_mod.get_global_var('func_2963')
call_3000 = relay.TupleGetItem(func_2962_call(), 0)
call_3001 = relay.TupleGetItem(func_2963_call(), 0)
uop_3011 = relay.tan(call_3000.astype('float64')) # shape=(96, 1)
uop_3013 = relay.tan(call_3001.astype('float64')) # shape=(96, 1)
output = relay.Tuple([uop_3011,])
output2 = relay.Tuple([uop_3013,])
func_3017 = relay.Function([], output)
mod['func_3017'] = func_3017
mod = relay.transform.InferType()(mod)
mutated_mod['func_3017'] = func_3017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3017_call = mutated_mod.get_global_var('func_3017')
call_3018 = func_3017_call()
output = call_3018
func_3019 = relay.Function([], output)
mutated_mod['func_3019'] = func_3019
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3042 = relay.const(-2.434742, dtype = "float32")#candidate|3042|()|const|float32
var_3043 = relay.var("var_3043", dtype = "float32", shape = (5, 3, 1))#candidate|3043|(5, 3, 1)|var|float32
bop_3044 = relay.divide(const_3042.astype('float32'), var_3043.astype('float32')) # shape=(5, 3, 1)
func_1648_call = mod.get_global_var('func_1648')
func_1651_call = mutated_mod.get_global_var('func_1651')
var_3049 = relay.var("var_3049", dtype = "int64", shape = (504,))#candidate|3049|(504,)|var|int64
call_3048 = relay.TupleGetItem(func_1648_call(relay.reshape(var_3049.astype('int64'), [9, 7, 8])), 0)
call_3050 = relay.TupleGetItem(func_1651_call(relay.reshape(var_3049.astype('int64'), [9, 7, 8])), 0)
bop_3059 = relay.left_shift(const_3042.astype('uint16'), call_3048.astype('uint16')) # shape=(9, 7, 8)
bop_3062 = relay.left_shift(const_3042.astype('uint16'), call_3050.astype('uint16')) # shape=(9, 7, 8)
output = relay.Tuple([bop_3044,var_3049,bop_3059,])
output2 = relay.Tuple([bop_3044,var_3049,bop_3062,])
func_3063 = relay.Function([var_3043,var_3049,], output)
mod['func_3063'] = func_3063
mod = relay.transform.InferType()(mod)
var_3064 = relay.var("var_3064", dtype = "float32", shape = (5, 3, 1))#candidate|3064|(5, 3, 1)|var|float32
var_3065 = relay.var("var_3065", dtype = "int64", shape = (504,))#candidate|3065|(504,)|var|int64
output = func_3063(var_3064,var_3065,)
func_3066 = relay.Function([var_3064,var_3065,], output)
mutated_mod['func_3066'] = func_3066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2213_call = mod.get_global_var('func_2213')
func_2215_call = mutated_mod.get_global_var('func_2215')
call_3074 = relay.TupleGetItem(func_2213_call(), 0)
call_3075 = relay.TupleGetItem(func_2215_call(), 0)
func_2508_call = mod.get_global_var('func_2508')
func_2509_call = mutated_mod.get_global_var('func_2509')
call_3090 = func_2508_call()
call_3091 = func_2508_call()
output = relay.Tuple([call_3074,call_3090,])
output2 = relay.Tuple([call_3075,call_3091,])
func_3103 = relay.Function([], output)
mod['func_3103'] = func_3103
mod = relay.transform.InferType()(mod)
output = func_3103()
func_3104 = relay.Function([], output)
mutated_mod['func_3104'] = func_3104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3108 = relay.var("var_3108", dtype = "float64", shape = (15, 2, 7))#candidate|3108|(15, 2, 7)|var|float64
uop_3109 = relay.atan(var_3108.astype('float64')) # shape=(15, 2, 7)
func_2451_call = mod.get_global_var('func_2451')
func_2454_call = mutated_mod.get_global_var('func_2454')
const_3113 = relay.const([4.728382,-0.969912,-3.680019,6.203378,-9.234482,3.171932,-6.312896,-6.878946,9.192158,6.971598,9.563016,8.160320,-9.300140,-6.712657,9.845727,-8.119838,-3.857007,-1.074766,-9.904496,9.501630,-5.933914,7.522585,-0.350252,-1.237126,-4.743812,-5.188204,3.240814,-7.435076,-0.513052,8.133493,3.123559,-5.860126,-1.023709,5.767542,4.256313,-3.360246,3.902150,-1.414306,6.237169,0.195593,-2.385199,1.178429,1.713483,4.474552,-1.831374,2.150202,-2.709910,-8.411453,-2.101533,-5.741805,-3.044515,9.984380,-3.424154,4.352677,6.686346,3.973514,-3.595891,9.556288,-0.004389,-8.119375,-9.534689,6.731640,4.076361,9.873879,9.281366,2.003584,-4.807555,8.528463,-9.799639,-6.320712,6.243551,6.858490,-5.464034,7.906610,-1.624665,-4.780052,2.844683,1.128970,4.437865,-2.122231,-1.762173,-5.987479,-3.718621,4.163458,7.579322,-1.566326,-3.888725,-2.653750,2.887396,5.533754,3.657852,-6.542128,5.173104,-6.836024,-1.194086,5.393915,-3.690545,-2.497203,4.724464,-8.121362,4.351815,2.457204,-8.596166,5.009805,8.494865,1.289936,-5.457940,4.960591,-6.228649,-7.592721,-9.373063,9.557836,4.211555,-6.598530,-3.688540,8.605930,1.158816,4.896850,5.086773,2.580415,1.094959,4.564232,-9.150183,-5.382841,-5.705500,-2.072398,-1.980149,-9.175595,9.734766,3.518710,7.187603,7.305379,2.410461,-5.307617,5.229145,-9.832047,0.621912,-6.389888,-8.844683,-1.615841,2.009582,-0.947927,-7.438353,-3.138410,5.081866,7.371916,-6.460005,5.289156,1.063670,-7.851522,-4.846240,-0.965335,6.721830,1.026104,3.344803,-1.234636,-2.379488,-2.704263,1.141168,-5.638003,-6.244636,0.102687,8.849433,9.843221,6.427442,6.804410,-1.150863,9.301152,9.842792,0.549592,-3.057088,6.798964,-9.435933,8.524769,-3.030530,-2.213812,-7.504695,-2.747673,4.886464,-4.811316,3.736724,-2.579199,1.785048,2.134305,-2.901249,3.301818,2.348057,-9.001791,1.461085,0.211897,9.459355,-1.663853,-9.776825,7.042686,-1.468226,-1.744912,-5.347677,5.958237,-4.674417,-1.965559,-2.743423,8.510891,-1.706976,1.915574,8.987600,-2.389862,6.093592,-2.465250,3.160053,6.794977,-1.699724,0.969699,-0.043976,-8.885627,-7.866803,2.031457,3.376028,-4.871880,-2.949415,0.661783,-0.880726,7.117774,-9.704701,5.988427,7.022603,-6.649474,-4.796191,-1.661158,-5.616587,6.244841,1.735964,7.055529,5.993993,4.817204,-2.929639,-5.877327,-1.693814,-8.354826,7.481722,-2.648929,-0.286609,-0.399187,-4.037707,9.693098,-1.447242,6.560076,1.600292,-0.863864,-7.793756,9.012127,-3.198509,-7.243053,2.122845,4.379018,-0.717056,4.870659,-1.079567,-2.614190,5.919755,-8.727234,-2.354146,6.476754,-9.929614,2.554032,8.226069,3.753603,-8.188133,-1.631272,-2.762183,-3.252122,0.136371,7.434603,-7.243475,4.160980,3.695926,8.226516,0.070283,-1.071610,-4.848198,9.301564,-3.936157,8.205853,-9.056062,-6.081105,3.051588,5.352354,-5.709415,4.907346,-6.346708,-5.794205,-0.680367,-6.305371,0.019597,7.631813,-0.438892,7.733909,-1.360546,0.747423,1.873587,3.048684,-8.280270,5.763628,-6.279553,5.280212,0.560984,-8.210078,8.014431,-6.280527,6.143355,-5.661012,-7.933483,-1.547213,-9.894175,9.746963,7.771939,8.870978,9.975040,1.740559,0.055118,6.044532,-9.180590,-6.556441,-6.249320,-1.400261,-3.225001,3.621615,7.904994,0.472556,5.036860,7.151150,-3.408210,-0.895057,8.197864,1.998909,9.889104,-3.879986,-7.267307,7.837273,9.499485,2.078187,7.530780,-5.006261,-9.611946,-0.419598,-3.757248,4.219187,-3.316622,-5.697780,4.385744,-1.483359,-0.173322,-9.510751,4.229960,3.660743,-1.114065,1.400310,1.589623,-3.538476,6.870017,4.538536,-3.799101,-3.919775,2.188786,-1.300897,-4.711345,6.750708,6.291125,-3.043951,7.926716,7.727953,-4.017348,4.851255,-8.657634,1.069916,7.946343,2.631188,9.906648,-8.798428,9.125502,0.590334,-4.201174,-6.922482,1.714248,-0.097811,7.561239,-4.901248,-1.276666,4.938025,7.197673,0.031989,-5.429625,-1.914743,-7.532589,-3.550330,2.687861,-6.799123,-3.303268,-2.803716,5.081090,-6.774104,-5.595707,-8.826245,0.613104,-0.557615,-5.087380,3.767040,-1.010396,8.509381,-5.047536,-0.301417,0.594249,9.248207,-8.604507,0.567204,3.952462,-1.286149,-5.468305,-2.856467,-5.447665,-1.093622,-0.929542,9.431876,8.229242,-9.953277,-1.703050,-3.288389,5.259295,3.986655,9.058043,1.783183,8.598033,-1.251677,-5.166424,6.552088,9.405896,1.652912,6.135661,4.126529,5.254813,-6.251311,-5.791914,-3.110436,5.062009,1.855763,-8.388921,0.694327,-5.386459,-1.377729,-3.533038,-1.708103,6.791241,-6.745277,-0.214966,-0.666469,3.820500,-0.506890,4.831776,8.109155,-0.156642,9.990121,0.079906,-8.644735,-7.170988,-4.581563,-9.421634,4.361237,-1.320621,-9.990802,7.483699,0.507965,-0.455273,-6.910118,-0.151464,-3.627201,8.083093,8.615578,-7.839975,-8.070608,-2.268117,9.387464,2.194165,3.198215,-6.994934,9.909153,-5.832225,-1.543800,-9.731095,-4.648607,-7.820436,9.975113,-8.048651,-0.305105,2.954017,6.053364,3.407106,-0.955058,9.765501,4.211218,-7.172494,7.047575,5.473528,1.490419,8.275634,-2.301412,-6.502581,8.419598,-8.787688,6.558449,-1.944893,-0.774786,1.842764,7.929695,-3.600189,0.050052,6.300684,0.192419,-8.329753,-6.149722,-4.479376,-1.973288,-3.312032,2.139599,5.897980,-0.161056,9.599124,-1.433043,-2.385666,-7.375491,-6.533470,3.533642,-9.399778,-6.352648,4.949232,-9.236203,9.723836,-6.382860,-0.635269,-3.185056,-6.640319,-3.754829,5.232630,-4.333486,-4.533754,-5.537887,-4.572854,-4.549785,-4.922083,-0.828116,1.913977,9.105483,3.997590,-2.725621,1.518982,4.386424,-8.620727,-7.750698,-7.770746,4.269192,4.765700,8.738879,5.661436,-8.821911,-0.383975,2.408299,-9.911571,-4.575111,-4.545404,7.380703,-0.400819,3.220430,-1.924808,-2.691723,-5.645005,8.844393,-0.762385,-3.956516,-2.691775,7.470196,2.912139,-3.446617,-2.873522,5.707472,-3.034221,-7.930473,7.874187,9.080620,7.132347,2.604303,9.025838,5.634409,8.876243,6.349579,7.037745,2.500590,6.761560,-4.154054,-5.984421,-3.704868,-3.002768,9.292842,-2.053881,-2.520747,1.143628,4.340051,-2.739972,-9.409540,-9.996038,-6.696105,-2.708504,-9.423715,4.004016,3.362023,-2.789783,-5.401107,6.507785,7.786328,-9.142431,0.256235,2.771949,-9.708927,-3.118737,0.324798,-4.396583,-9.064549,9.976328,-1.026728,2.718144,9.641097,7.128758,-6.308242,5.346719,-9.064804,2.001554,1.955107,6.518535,2.410925,-0.625188,-2.318359,-7.989372,-8.193515,-8.384594,-0.159454,-9.174099,1.254165,-9.749551,-8.676816,8.381720,8.076157,8.584286,4.489169,9.786185,-7.321937,-5.287593,-8.608026,5.359390,-4.348228,-7.823620,3.887212,-2.455838,-7.823235,-7.402424,4.046148,-9.279854,0.053496,6.450766,-2.433712,0.262272,6.771987,4.830129,-4.993533,-4.137184,-8.279497,0.357205,8.971572,2.009234,-3.587902,7.662885,4.891921,4.801131,0.691543,-4.371789,1.647523,-7.579097,3.553715,-9.618400,-9.318968,-9.012699,8.057951,-1.648148,-7.132364,9.513711,4.026182,-4.156008,-0.484199,1.112484,-5.396446,8.378631,1.052266,-0.832947,9.372560,-8.053843,2.424451,9.441083,5.085858,-1.701116,6.489710,-6.591299,-0.960235,7.409296,-3.658305,-0.214716,-2.851594,-4.337079,4.624691,-5.491904,-7.570983,-5.030755,-2.734324,-8.927335,5.113913,1.836139,-7.638843,3.944109,-5.736037,1.387606,-3.004947,8.571038,5.732773,-1.332295,9.727491,-8.753658,-0.332799,3.933401,-1.667270,-8.328872,-2.025257,-1.814635,5.312182,4.601744,-4.752367,6.910048,-9.971436,-2.421778,-1.934174,-4.996594,8.429137,7.758782,3.455217,-8.558163,1.450861,7.083965,-1.346604,-8.658988,-1.010324,6.250683,7.141178,6.080715,-4.998501,5.774866,-7.253490,-3.372148,-7.422979,6.012231,-2.325126,7.524298,-9.058795,-8.546391,-6.992037,0.791516,-7.061011,-4.333519,3.498497,-0.769635,8.763503,-0.729234,8.135253,8.992763,1.135084,-6.326658,1.857891,2.050420,-1.906807,-1.928182,-3.103428,4.056994,6.421825,-6.720036,3.707117,-7.853006,9.657048,2.749255,2.002262,-7.967338,7.972854,-2.606334,4.966444,8.410693,6.404065,-7.241971,7.639481,6.221331,4.725097,7.434374,-1.105988,0.428762,-4.115973,-7.458838,-6.312542,-9.298412,2.203699,-5.009779,-4.771590,0.070333,7.509389,-7.241531,4.515527,6.244957,9.294195,-1.970450,-8.449721,2.737834,-2.978650,-0.614063,5.388896,-3.101198,-7.504034,4.305907,-4.059264,-6.814970,-5.101561,-4.215784,-9.398321,9.689527,-8.728219,9.436369,8.151166,-5.702481,9.831918,-5.990756,0.760374,1.501551,9.118773,5.642530,7.967075,-2.451623,-7.133297,-1.483681,-6.413080,-1.849491,9.146456,-3.372730,4.988609,-8.647352,3.663768,0.563338,5.888798,-5.145459,1.093172,9.077256,-2.611511,-9.170328,-8.436585,5.580281,-0.150863,-7.475433,-2.966203,4.124688,5.528308,-3.790481,-8.077120,3.907471,-9.812800,0.133107,3.898805,6.481368,-1.422991,-7.101939,-9.390661,9.059362,-4.104965,-6.031220,-7.622255,-9.065862,3.105560,6.442973,-5.717446,5.016042,-0.294526,-2.032867,7.634506,6.416165,6.148166,2.257759,-6.166531,4.226246,-7.778146,0.213450,3.911248,-1.404710,-6.763874,-3.720835,-3.732077,3.724231,-1.893635,1.456320,7.906837,0.778940,-8.052714,-7.560686,-8.493128,0.661585,8.313631,6.811165,-8.399415,6.915290,8.722737,4.992434,-6.618440,2.358634,-5.140629,-1.246009,7.953921,7.080351,-5.265863,-6.754824,0.404391,5.083818,-8.270641,6.176309,-7.189321,9.186545,-9.890636,-9.560897,-7.371922,-2.048363,-6.835139,-8.231867,-3.733331,8.527951,-2.589756,2.959002,-7.257695,-5.382383,-5.315981,0.091809,2.495604,-0.560289,-8.238149,-6.227397,-8.106149,9.023085,7.231033,6.525539,5.038734,7.059450,-0.366812,1.250044,9.907996,-0.038035,3.600471,4.623060,-2.194108,2.559822,-4.922460,2.976468,-8.442476,0.804485,3.761195,0.178756,0.611016,-6.243840,-2.213321,-2.056018,3.531178,0.652708,7.458120,4.854676,-2.804880,-0.398528,-7.983638,-1.381018,-8.647752,0.793598,-7.313697,8.313498,6.704738,6.927352,6.077751,3.675059,-9.117226,-7.731597,3.893436,-5.385109,-7.076500,-8.794401,-3.984640,8.785264,-6.057468,-4.147436,9.450520,6.631476,8.315544,-0.873231,-9.117468,-4.121900,-6.590307,-8.245329,-0.746803], dtype = "float64")#candidate|3113|(1008,)|const|float64
call_3112 = relay.TupleGetItem(func_2451_call(relay.reshape(const_3113.astype('float64'), [12, 12, 7])), 0)
call_3114 = relay.TupleGetItem(func_2454_call(relay.reshape(const_3113.astype('float64'), [12, 12, 7])), 0)
output = relay.Tuple([uop_3109,call_3112,const_3113,])
output2 = relay.Tuple([uop_3109,call_3114,const_3113,])
func_3115 = relay.Function([var_3108,], output)
mod['func_3115'] = func_3115
mod = relay.transform.InferType()(mod)
mutated_mod['func_3115'] = func_3115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3116 = relay.var("var_3116", dtype = "float64", shape = (15, 2, 7))#candidate|3116|(15, 2, 7)|var|float64
func_3115_call = mutated_mod.get_global_var('func_3115')
call_3117 = func_3115_call(var_3116)
output = call_3117
func_3118 = relay.Function([var_3116], output)
mutated_mod['func_3118'] = func_3118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3132 = relay.var("var_3132", dtype = "float32", shape = (14, 3, 10))#candidate|3132|(14, 3, 10)|var|float32
uop_3133 = relay.log(var_3132.astype('float32')) # shape=(14, 3, 10)
bop_3138 = relay.power(uop_3133.astype('float32'), relay.reshape(var_3132.astype('float32'), relay.shape_of(uop_3133))) # shape=(14, 3, 10)
output = bop_3138
output2 = bop_3138
func_3142 = relay.Function([var_3132,], output)
mod['func_3142'] = func_3142
mod = relay.transform.InferType()(mod)
mutated_mod['func_3142'] = func_3142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3143 = relay.var("var_3143", dtype = "float32", shape = (14, 3, 10))#candidate|3143|(14, 3, 10)|var|float32
func_3142_call = mutated_mod.get_global_var('func_3142')
call_3144 = func_3142_call(var_3143)
output = call_3144
func_3145 = relay.Function([var_3143], output)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3017_call = mod.get_global_var('func_3017')
func_3019_call = mutated_mod.get_global_var('func_3019')
call_3157 = relay.TupleGetItem(func_3017_call(), 0)
call_3158 = relay.TupleGetItem(func_3019_call(), 0)
output = relay.Tuple([call_3157,])
output2 = relay.Tuple([call_3158,])
func_3161 = relay.Function([], output)
mod['func_3161'] = func_3161
mod = relay.transform.InferType()(mod)
mutated_mod['func_3161'] = func_3161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3161_call = mutated_mod.get_global_var('func_3161')
call_3162 = func_3161_call()
output = call_3162
func_3163 = relay.Function([], output)
mutated_mod['func_3163'] = func_3163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2962_call = mod.get_global_var('func_2962')
func_2963_call = mutated_mod.get_global_var('func_2963')
call_3174 = relay.TupleGetItem(func_2962_call(), 2)
call_3175 = relay.TupleGetItem(func_2963_call(), 2)
output = call_3174
output2 = call_3175
func_3179 = relay.Function([], output)
mod['func_3179'] = func_3179
mod = relay.transform.InferType()(mod)
output = func_3179()
func_3180 = relay.Function([], output)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2075_call = mod.get_global_var('func_2075')
func_2077_call = mutated_mod.get_global_var('func_2077')
call_3186 = func_2075_call()
call_3187 = func_2075_call()
output = call_3186
output2 = call_3187
func_3209 = relay.Function([], output)
mod['func_3209'] = func_3209
mod = relay.transform.InferType()(mod)
output = func_3209()
func_3210 = relay.Function([], output)
mutated_mod['func_3210'] = func_3210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3103_call = mod.get_global_var('func_3103')
func_3104_call = mutated_mod.get_global_var('func_3104')
call_3281 = relay.TupleGetItem(func_3103_call(), 1)
call_3282 = relay.TupleGetItem(func_3104_call(), 1)
output = call_3281
output2 = call_3282
func_3287 = relay.Function([], output)
mod['func_3287'] = func_3287
mod = relay.transform.InferType()(mod)
mutated_mod['func_3287'] = func_3287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3287_call = mutated_mod.get_global_var('func_3287')
call_3288 = func_3287_call()
output = call_3288
func_3289 = relay.Function([], output)
mutated_mod['func_3289'] = func_3289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2075_call = mod.get_global_var('func_2075')
func_2077_call = mutated_mod.get_global_var('func_2077')
call_3302 = func_2075_call()
call_3303 = func_2075_call()
var_3334 = relay.var("var_3334", dtype = "int32", shape = (12, 12, 7))#candidate|3334|(12, 12, 7)|var|int32
bop_3335 = relay.bitwise_or(call_3302.astype('int32'), relay.reshape(var_3334.astype('int32'), relay.shape_of(call_3302))) # shape=(12, 12, 7)
bop_3338 = relay.bitwise_or(call_3303.astype('int32'), relay.reshape(var_3334.astype('int32'), relay.shape_of(call_3303))) # shape=(12, 12, 7)
func_2649_call = mod.get_global_var('func_2649')
func_2652_call = mutated_mod.get_global_var('func_2652')
var_3340 = relay.var("var_3340", dtype = "float64", shape = (1200,))#candidate|3340|(1200,)|var|float64
var_3341 = relay.var("var_3341", dtype = "int64", shape = (504,))#candidate|3341|(504,)|var|int64
call_3339 = relay.TupleGetItem(func_2649_call(relay.reshape(var_3340.astype('float64'), [10, 15, 8]), relay.reshape(var_3341.astype('int64'), [1, 504]), ), 1)
call_3342 = relay.TupleGetItem(func_2652_call(relay.reshape(var_3340.astype('float64'), [10, 15, 8]), relay.reshape(var_3341.astype('int64'), [1, 504]), ), 1)
func_1648_call = mod.get_global_var('func_1648')
func_1651_call = mutated_mod.get_global_var('func_1651')
call_3346 = relay.TupleGetItem(func_1648_call(relay.reshape(var_3341.astype('int64'), [9, 7, 8])), 0)
call_3347 = relay.TupleGetItem(func_1651_call(relay.reshape(var_3341.astype('int64'), [9, 7, 8])), 0)
func_2754_call = mod.get_global_var('func_2754')
func_2758_call = mutated_mod.get_global_var('func_2758')
const_3363 = relay.const([[6,6],[5,5],[-6,-10],[1,9],[-6,8],[5,4],[7,9]], dtype = "uint64")#candidate|3363|(7, 2)|const|uint64
call_3362 = relay.TupleGetItem(func_2754_call(relay.reshape(const_3363.astype('uint64'), [14, 1]), relay.reshape(call_3346.astype('int64'), [504,]), ), 4)
call_3364 = relay.TupleGetItem(func_2758_call(relay.reshape(const_3363.astype('uint64'), [14, 1]), relay.reshape(call_3346.astype('int64'), [504,]), ), 4)
func_2882_call = mod.get_global_var('func_2882')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_3367 = func_2882_call()
call_3368 = func_2882_call()
output = relay.Tuple([bop_3335,call_3339,var_3340,var_3341,call_3346,call_3362,const_3363,call_3367,])
output2 = relay.Tuple([bop_3338,call_3342,var_3340,var_3341,call_3347,call_3364,const_3363,call_3368,])
func_3381 = relay.Function([var_3334,var_3340,var_3341,], output)
mod['func_3381'] = func_3381
mod = relay.transform.InferType()(mod)
var_3382 = relay.var("var_3382", dtype = "int32", shape = (12, 12, 7))#candidate|3382|(12, 12, 7)|var|int32
var_3383 = relay.var("var_3383", dtype = "float64", shape = (1200,))#candidate|3383|(1200,)|var|float64
var_3384 = relay.var("var_3384", dtype = "int64", shape = (504,))#candidate|3384|(504,)|var|int64
output = func_3381(var_3382,var_3383,var_3384,)
func_3385 = relay.Function([var_3382,var_3383,var_3384,], output)
mutated_mod['func_3385'] = func_3385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2882_call = mod.get_global_var('func_2882')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_3410 = func_2882_call()
call_3411 = func_2882_call()
var_3412 = relay.var("var_3412", dtype = "uint64", shape = (12, 12, 7))#candidate|3412|(12, 12, 7)|var|uint64
bop_3413 = relay.subtract(call_3410.astype('int64'), relay.reshape(var_3412.astype('int64'), relay.shape_of(call_3410))) # shape=(12, 12, 7)
bop_3416 = relay.subtract(call_3411.astype('int64'), relay.reshape(var_3412.astype('int64'), relay.shape_of(call_3411))) # shape=(12, 12, 7)
uop_3422 = relay.cos(bop_3413.astype('float64')) # shape=(12, 12, 7)
uop_3424 = relay.cos(bop_3416.astype('float64')) # shape=(12, 12, 7)
bop_3432 = relay.minimum(uop_3422.astype('int64'), relay.reshape(call_3410.astype('int64'), relay.shape_of(uop_3422))) # shape=(12, 12, 7)
bop_3435 = relay.minimum(uop_3424.astype('int64'), relay.reshape(call_3411.astype('int64'), relay.shape_of(uop_3424))) # shape=(12, 12, 7)
output = relay.Tuple([bop_3432,])
output2 = relay.Tuple([bop_3435,])
func_3438 = relay.Function([var_3412,], output)
mod['func_3438'] = func_3438
mod = relay.transform.InferType()(mod)
mutated_mod['func_3438'] = func_3438
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3439 = relay.var("var_3439", dtype = "uint64", shape = (12, 12, 7))#candidate|3439|(12, 12, 7)|var|uint64
func_3438_call = mutated_mod.get_global_var('func_3438')
call_3440 = func_3438_call(var_3439)
output = call_3440
func_3441 = relay.Function([var_3439], output)
mutated_mod['func_3441'] = func_3441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3179_call = mod.get_global_var('func_3179')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3467 = func_3179_call()
call_3468 = func_3179_call()
output = call_3467
output2 = call_3468
func_3475 = relay.Function([], output)
mod['func_3475'] = func_3475
mod = relay.transform.InferType()(mod)
mutated_mod['func_3475'] = func_3475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3475_call = mutated_mod.get_global_var('func_3475')
call_3476 = func_3475_call()
output = call_3476
func_3477 = relay.Function([], output)
mutated_mod['func_3477'] = func_3477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3492 = relay.var("var_3492", dtype = "float64", shape = (13, 16, 12))#candidate|3492|(13, 16, 12)|var|float64
uop_3493 = relay.atan(var_3492.astype('float64')) # shape=(13, 16, 12)
bop_3503 = relay.power(uop_3493.astype('float64'), relay.reshape(var_3492.astype('float64'), relay.shape_of(uop_3493))) # shape=(13, 16, 12)
func_3063_call = mod.get_global_var('func_3063')
func_3066_call = mutated_mod.get_global_var('func_3066')
var_3509 = relay.var("var_3509", dtype = "float32", shape = (15,))#candidate|3509|(15,)|var|float32
var_3510 = relay.var("var_3510", dtype = "int64", shape = (504,))#candidate|3510|(504,)|var|int64
call_3508 = relay.TupleGetItem(func_3063_call(relay.reshape(var_3509.astype('float32'), [5, 3, 1]), relay.reshape(var_3510.astype('int64'), [504,]), ), 0)
call_3511 = relay.TupleGetItem(func_3066_call(relay.reshape(var_3509.astype('float32'), [5, 3, 1]), relay.reshape(var_3510.astype('int64'), [504,]), ), 0)
func_2754_call = mod.get_global_var('func_2754')
func_2758_call = mutated_mod.get_global_var('func_2758')
var_3515 = relay.var("var_3515", dtype = "uint64", shape = (14, 1))#candidate|3515|(14, 1)|var|uint64
call_3514 = relay.TupleGetItem(func_2754_call(relay.reshape(var_3515.astype('uint64'), [14, 1]), relay.reshape(var_3510.astype('int64'), [504,]), ), 5)
call_3516 = relay.TupleGetItem(func_2758_call(relay.reshape(var_3515.astype('uint64'), [14, 1]), relay.reshape(var_3510.astype('int64'), [504,]), ), 5)
output = relay.Tuple([bop_3503,call_3508,var_3509,var_3510,call_3514,var_3515,])
output2 = relay.Tuple([bop_3503,call_3511,var_3509,var_3510,call_3516,var_3515,])
func_3521 = relay.Function([var_3492,var_3509,var_3510,var_3515,], output)
mod['func_3521'] = func_3521
mod = relay.transform.InferType()(mod)
var_3522 = relay.var("var_3522", dtype = "float64", shape = (13, 16, 12))#candidate|3522|(13, 16, 12)|var|float64
var_3523 = relay.var("var_3523", dtype = "float32", shape = (15,))#candidate|3523|(15,)|var|float32
var_3524 = relay.var("var_3524", dtype = "int64", shape = (504,))#candidate|3524|(504,)|var|int64
var_3525 = relay.var("var_3525", dtype = "uint64", shape = (14, 1))#candidate|3525|(14, 1)|var|uint64
output = func_3521(var_3522,var_3523,var_3524,var_3525,)
func_3526 = relay.Function([var_3522,var_3523,var_3524,var_3525,], output)
mutated_mod['func_3526'] = func_3526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3554 = relay.var("var_3554", dtype = "float64", shape = (15, 7, 2))#candidate|3554|(15, 7, 2)|var|float64
uop_3555 = relay.acos(var_3554.astype('float64')) # shape=(15, 7, 2)
output = uop_3555
output2 = uop_3555
func_3565 = relay.Function([var_3554,], output)
mod['func_3565'] = func_3565
mod = relay.transform.InferType()(mod)
var_3566 = relay.var("var_3566", dtype = "float64", shape = (15, 7, 2))#candidate|3566|(15, 7, 2)|var|float64
output = func_3565(var_3566)
func_3567 = relay.Function([var_3566], output)
mutated_mod['func_3567'] = func_3567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3287_call = mod.get_global_var('func_3287')
func_3289_call = mutated_mod.get_global_var('func_3289')
call_3576 = func_3287_call()
call_3577 = func_3287_call()
output = call_3576
output2 = call_3577
func_3578 = relay.Function([], output)
mod['func_3578'] = func_3578
mod = relay.transform.InferType()(mod)
output = func_3578()
func_3579 = relay.Function([], output)
mutated_mod['func_3579'] = func_3579
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3620 = relay.var("var_3620", dtype = "float64", shape = (15, 12, 11))#candidate|3620|(15, 12, 11)|var|float64
uop_3621 = relay.log10(var_3620.astype('float64')) # shape=(15, 12, 11)
output = uop_3621
output2 = uop_3621
func_3623 = relay.Function([var_3620,], output)
mod['func_3623'] = func_3623
mod = relay.transform.InferType()(mod)
var_3624 = relay.var("var_3624", dtype = "float64", shape = (15, 12, 11))#candidate|3624|(15, 12, 11)|var|float64
output = func_3623(var_3624)
func_3625 = relay.Function([var_3624], output)
mutated_mod['func_3625'] = func_3625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2578_call = mod.get_global_var('func_2578')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_3657 = relay.TupleGetItem(func_2578_call(), 0)
call_3658 = relay.TupleGetItem(func_2579_call(), 0)
uop_3659 = relay.acosh(call_3657.astype('float64')) # shape=(12, 12, 7)
uop_3661 = relay.acosh(call_3658.astype('float64')) # shape=(12, 12, 7)
func_2561_call = mod.get_global_var('func_2561')
func_2564_call = mutated_mod.get_global_var('func_2564')
const_3679 = relay.const([2,1,8,9,5,-6,7,-6,7,3,-5,2,-8,9,3,-2,1,9,7,-1,-7,7,-6,-10,-7,10,-5,1,1,5,-10,-8,-2,2,-7,2,-3,-10,4,-2,7,4,2,-5,5,-6,-9,-10,3,10,7,6,3,-9,-7,9,-4,-4,-8,1,9,10,4,-8,-4,-1,-2,-10,-4,-3,3,5,-7,-6,-7,10,-6,3,2,9,2,6,-8,1], dtype = "uint64")#candidate|3679|(84,)|const|uint64
call_3678 = relay.TupleGetItem(func_2561_call(relay.reshape(const_3679.astype('uint64'), [84,])), 1)
call_3680 = relay.TupleGetItem(func_2564_call(relay.reshape(const_3679.astype('uint64'), [84,])), 1)
output = relay.Tuple([uop_3659,call_3678,const_3679,])
output2 = relay.Tuple([uop_3661,call_3680,const_3679,])
func_3681 = relay.Function([], output)
mod['func_3681'] = func_3681
mod = relay.transform.InferType()(mod)
mutated_mod['func_3681'] = func_3681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3681_call = mutated_mod.get_global_var('func_3681')
call_3682 = func_3681_call()
output = call_3682
func_3683 = relay.Function([], output)
mutated_mod['func_3683'] = func_3683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3475_call = mod.get_global_var('func_3475')
func_3477_call = mutated_mod.get_global_var('func_3477')
call_3742 = func_3475_call()
call_3743 = func_3475_call()
output = relay.Tuple([call_3742,])
output2 = relay.Tuple([call_3743,])
func_3750 = relay.Function([], output)
mod['func_3750'] = func_3750
mod = relay.transform.InferType()(mod)
mutated_mod['func_3750'] = func_3750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mutated_mod.get_global_var('func_3750')
call_3751 = func_3750_call()
output = call_3751
func_3752 = relay.Function([], output)
mutated_mod['func_3752'] = func_3752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3210_call = mutated_mod.get_global_var('func_3210')
call_3757 = func_3209_call()
call_3758 = func_3209_call()
output = call_3757
output2 = call_3758
func_3800 = relay.Function([], output)
mod['func_3800'] = func_3800
mod = relay.transform.InferType()(mod)
mutated_mod['func_3800'] = func_3800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3800_call = mutated_mod.get_global_var('func_3800')
call_3801 = func_3800_call()
output = call_3801
func_3802 = relay.Function([], output)
mutated_mod['func_3802'] = func_3802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2185_call = mod.get_global_var('func_2185')
func_2187_call = mutated_mod.get_global_var('func_2187')
call_3857 = func_2185_call()
call_3858 = func_2185_call()
func_3179_call = mod.get_global_var('func_3179')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3870 = func_3179_call()
call_3871 = func_3179_call()
func_2882_call = mod.get_global_var('func_2882')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_3885 = func_2882_call()
call_3886 = func_2882_call()
uop_3896 = relay.sqrt(call_3857.astype('float64')) # shape=(12, 12, 7)
uop_3898 = relay.sqrt(call_3858.astype('float64')) # shape=(12, 12, 7)
output = relay.Tuple([call_3870,call_3885,uop_3896,])
output2 = relay.Tuple([call_3871,call_3886,uop_3898,])
func_3906 = relay.Function([], output)
mod['func_3906'] = func_3906
mod = relay.transform.InferType()(mod)
mutated_mod['func_3906'] = func_3906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3906_call = mutated_mod.get_global_var('func_3906')
call_3907 = func_3906_call()
output = call_3907
func_3908 = relay.Function([], output)
mutated_mod['func_3908'] = func_3908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2578_call = mod.get_global_var('func_2578')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_3976 = relay.TupleGetItem(func_2578_call(), 0)
call_3977 = relay.TupleGetItem(func_2579_call(), 0)
output = relay.Tuple([call_3976,])
output2 = relay.Tuple([call_3977,])
func_3978 = relay.Function([], output)
mod['func_3978'] = func_3978
mod = relay.transform.InferType()(mod)
output = func_3978()
func_3979 = relay.Function([], output)
mutated_mod['func_3979'] = func_3979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3982 = relay.var("var_3982", dtype = "uint64", shape = (12, 9, 5))#candidate|3982|(12, 9, 5)|var|uint64
var_3983 = relay.var("var_3983", dtype = "uint64", shape = (12, 9, 5))#candidate|3983|(12, 9, 5)|var|uint64
bop_3984 = relay.subtract(var_3982.astype('uint64'), relay.reshape(var_3983.astype('uint64'), relay.shape_of(var_3982))) # shape=(12, 9, 5)
output = bop_3984
output2 = bop_3984
func_3992 = relay.Function([var_3982,var_3983,], output)
mod['func_3992'] = func_3992
mod = relay.transform.InferType()(mod)
mutated_mod['func_3992'] = func_3992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3992_call = mutated_mod.get_global_var('func_3992')
var_3994 = relay.var("var_3994", dtype = "uint64", shape = (12, 9, 5))#candidate|3994|(12, 9, 5)|var|uint64
var_3995 = relay.var("var_3995", dtype = "uint64", shape = (12, 9, 5))#candidate|3995|(12, 9, 5)|var|uint64
call_3993 = func_3992_call(var_3994,var_3995,)
output = call_3993
func_3996 = relay.Function([var_3994,var_3995,], output)
mutated_mod['func_3996'] = func_3996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2508_call = mod.get_global_var('func_2508')
func_2509_call = mutated_mod.get_global_var('func_2509')
call_4043 = func_2508_call()
call_4044 = func_2508_call()
var_4059 = relay.var("var_4059", dtype = "int32", shape = (12, 12, 7))#candidate|4059|(12, 12, 7)|var|int32
bop_4060 = relay.not_equal(call_4043.astype('bool'), relay.reshape(var_4059.astype('bool'), relay.shape_of(call_4043))) # shape=(12, 12, 7)
bop_4063 = relay.not_equal(call_4044.astype('bool'), relay.reshape(var_4059.astype('bool'), relay.shape_of(call_4044))) # shape=(12, 12, 7)
func_3578_call = mod.get_global_var('func_3578')
func_3579_call = mutated_mod.get_global_var('func_3579')
call_4064 = func_3578_call()
call_4065 = func_3578_call()
output = relay.Tuple([bop_4060,call_4064,])
output2 = relay.Tuple([bop_4063,call_4065,])
func_4066 = relay.Function([var_4059,], output)
mod['func_4066'] = func_4066
mod = relay.transform.InferType()(mod)
mutated_mod['func_4066'] = func_4066
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4067 = relay.var("var_4067", dtype = "int32", shape = (12, 12, 7))#candidate|4067|(12, 12, 7)|var|int32
func_4066_call = mutated_mod.get_global_var('func_4066')
call_4068 = func_4066_call(var_4067)
output = call_4068
func_4069 = relay.Function([var_4067], output)
mutated_mod['func_4069'] = func_4069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_4078 = relay.TupleGetItem(func_2675_call(), 2)
call_4079 = relay.TupleGetItem(func_2676_call(), 2)
func_2649_call = mod.get_global_var('func_2649')
func_2652_call = mutated_mod.get_global_var('func_2652')
const_4105 = relay.const([5.718184,-0.610755,-8.908208,2.871051,-4.169139,-7.223274,4.181826,-6.097948,-7.360050,6.176196,-6.352929,5.594768,9.260673,0.893828,3.978504,-9.001061,-0.915862,-2.528857,5.710742,4.324260,-5.421698,6.456700,-2.092422,-0.525967,6.119369,1.077281,6.204130,8.665862,-7.495697,4.180417,-9.897126,-6.469182,2.543099,2.898060,-9.041974,-3.951937,-8.929580,-1.215976,5.345298,8.990913,6.783799,-4.498390,-8.727934,5.724259,4.407647,-5.698658,-8.617586,-5.270591,6.995107,-4.795817,-4.768580,-7.064090,-9.058361,3.864743,4.657304,-2.123175,6.161106,-9.828160,5.982498,-1.076326,-8.720344,-5.863960,-1.965666,-6.811259,-3.337632,6.645358,9.173374,1.790435,0.936166,-4.353601,2.606181,3.771159,6.655490,-7.732423,6.879758,5.473040,0.021058,-1.694912,-8.318919,9.863422,-9.635367,0.716480,0.177638,4.565021,-5.973211,5.442013,7.862716,-3.544839,-2.771703,0.682247,-0.235525,-3.234640,-6.113744,8.726316,3.459372,5.314511,6.643896,-1.854509,4.526745,0.717226,0.278039,3.043733,9.644361,7.376992,9.374516,8.049308,-1.454928,5.187893,6.916657,4.546281,-2.497703,-1.659912,-3.495434,-4.142733,-8.101031,0.830927,-5.644756,-7.081671,-2.936229,-7.185732,-1.339954,0.186352,5.151179,4.114094,9.163130,1.423317,2.730004,-1.496268,-1.485274,8.322986,-4.072568,-4.435289,-3.585190,3.778315,8.627217,-5.267177,5.064770,-2.005970,-6.419478,1.574913,-9.518111,0.444862,-6.869340,2.796579,-9.436016,-7.694741,1.517379,-3.387370,6.337559,5.949208,5.687498,2.137508,9.270285,5.274656,3.356879,-0.174936,9.011923,-4.186797,7.928497,9.754854,-1.807496,-9.899826,-7.050840,3.207147,-3.763017,-1.741070,-3.286330,1.398908,6.215235,-3.456332,7.952099,3.569153,-0.210976,6.553735,7.699536,-4.735778,-0.161433,-4.628026,3.490047,-2.723420,-8.870796,8.228152,-5.279702,-4.041102,0.369759,2.803679,6.339591,7.224618,-8.236925,8.298996,5.380973,2.600533,0.192263,4.893325,-1.328643,-8.556218,-7.545525,2.992546,-0.323994,6.354834,-6.068047,4.171321,3.657228,-9.612447,2.743704,3.013870,4.023602,-0.693444,-3.130419,7.508440,4.078917,3.714982,1.193100,5.473264,7.943330,2.414063,6.374358,2.901672,9.500393,-9.602284,-3.541934,-5.639103,-0.672528,-2.887201,-1.141893,2.741957,4.572958,4.162670,-4.207769,7.858942,7.878252,4.185731,6.088925,2.433199,-7.809132,0.571215,-9.122755,-0.256359,-3.273502,7.837109,-1.979011,-6.582862,-0.680223,-8.513204,-6.476303,-5.435967,-8.060239,-2.733934,-1.971774,3.581344,3.086275,0.797658,-7.504781,9.251185,-2.182857,9.562606,9.640500,3.369936,4.805297,-1.588017,0.575221,-8.166044,5.868867,8.427520,-9.241378,-1.433823,1.074714,6.453973,-1.052473,-8.104173,-5.972886,0.586752,9.265160,7.021416,5.697838,1.765280,-8.999030,-2.521349,-5.933191,4.818758,-4.632128,8.754219,-8.618184,7.264240,1.412438,1.252258,8.428831,3.012112,8.042724,-1.508724,0.922783,6.812072,4.472331,7.105822,7.068007,-3.590609,-1.438725,5.349800,1.300469,4.049427,-7.724496,-1.861056,-1.047272,9.749592,-3.805376,-6.873748,6.748496,9.801413,1.520175,-4.498462,0.337915,3.656493,-4.339577,-3.066730,7.120320,-8.208862,9.054183,-1.194859,2.271377,7.485365,4.597365,2.061071,-9.377142,0.777661,5.853777,-5.254047,-0.754517,-3.812760,6.186136,-3.585427,3.846560,-8.674086,7.330411,-8.782315,-7.093481,-7.391167,4.608761,-8.923617,-6.605453,1.269133,-0.223414,3.851241,6.474189,6.398809,-0.688611,-4.258487,2.656718,-0.541620,5.042723,1.819792,1.728712,1.835168,2.668425,-4.726661,7.348363,8.934752,5.554825,-4.633514,-1.918113,7.498231,-4.965844,-5.784221,8.654364,-6.314450,9.665099,-2.392816,-2.802929,8.130377,-0.038147,4.674825,-6.900193,8.768775,5.917591,-7.993681,7.008359,7.642566,9.143094,6.480129,-2.422991,1.299655,4.063740,-7.347706,9.531552,4.223321,6.714720,7.744463,3.306737,-2.164005,3.419858,6.625324,-6.574655,-4.940590,-7.392391,-4.141077,0.721664,9.442651,-7.093995,-1.545803,4.880393,9.136850,1.406964,-4.641976,5.139280,6.077950,-0.139154,4.703373,8.837113,-4.133259,-0.466682,5.715081,9.032113,-7.336100,-1.964165,4.780425,3.174707,6.451143,-0.843371,2.733882,-3.007865,-7.437750,9.988660,5.913346,9.656990,6.116938,1.600929,9.798676,4.959038,-6.081156,9.592487,9.748937,-9.793247,8.095798,5.802025,-3.751997,2.199928,-2.196609,-7.651364,-4.626741,0.653357,2.781067,-3.397641,1.241086,8.528066,0.599767,-0.108138,4.862456,5.334679,0.808034,4.691136,-6.788347,-6.308652,-1.743005,2.433994,-4.621378,-0.941999,7.369586,-0.331954,-5.588756,-4.142003,-9.119280,-0.764613,3.193451,-6.568295,-1.040292,-1.983829,1.052605,3.844667,3.057257,-0.908780,-1.328243,-5.920561,9.620497,-5.886619,-2.963660,0.892165,0.299690,-8.139720,-7.971942,0.361166,-8.785163,4.839068,-3.232086,3.719539,7.919391,7.237362,-2.668345,0.477379,9.437703,9.320708,-7.692880,-4.074745,3.968219,-7.032623,-4.454177,-5.315663,7.415185,-8.901678,4.317271,-4.079064,0.292381,-7.040341,4.319991,8.533876,2.536020,-4.110537,4.753425,-6.089953,7.247847,-5.669909,-4.916552,-1.754189,2.715369,-8.124140,3.437243,6.726195,-9.117063,-5.827362,-8.626492,-2.983107,9.570647,7.887757,-6.672268,0.194086,0.074589,1.262069,-7.164223,4.695168,-3.146508,-8.318866,-7.522307,-2.078227,6.160466,-3.422572,-5.601444,-5.877783,8.756451,-3.431702,5.275075,7.012493,-9.667048,-0.507950,8.017902,-2.694914,4.648069,2.275326,-5.731050,9.520086,-5.938989,6.431120,-5.544959,-0.612560,-7.163164,9.252168,-2.407860,-0.641635,5.785183,-4.261457,-5.530100,-9.672933,3.593352,-3.151556,6.222116,-5.703460,3.765760,-1.114463,3.442881,-7.787736,-9.490115,6.676084,-2.288633,0.034435,-1.709005,-8.904589,-6.215464,5.963277,-9.604571,9.712267,1.877475,-4.158919,-4.533003,-2.169514,6.509903,9.561511,1.257924,4.563499,-9.242066,6.679424,-0.793357,3.488418,3.624006,-0.799032,-4.498310,3.618853,9.120029,4.016858,9.003880,1.514992,-4.808616,-9.221222,8.110420,4.159679,-2.179718,0.197062,5.440775,7.090154,8.755638,-2.231559,2.688552,0.479553,1.163206,-4.940790,-1.073870,-5.800963,-2.598147,-8.687579,-4.320521,2.719334,3.636868,2.589420,-9.827697,2.004587,-5.459922,1.351333,4.647686,9.135115,2.731979,6.945361,1.857143,-3.934379,-3.991480,-4.561778,9.774869,6.246878,-2.392875,2.298103,2.177332,-4.927178,-2.914508,-5.604597,-4.718406,9.423935,8.404978,6.193303,-3.156020,1.018857,8.348125,5.966779,1.158830,4.767621,9.436397,-1.553335,8.808891,-2.188746,3.847334,1.762294,-3.716602,1.078676,-5.530649,2.693114,4.843386,9.842836,-0.308496,2.252484,-1.550586,2.953368,2.058228,-8.716829,-3.017570,-2.979650,2.392586,7.977366,-8.443228,-7.221871,7.412266,3.679872,-8.319268,9.953471,1.298918,-0.301524,7.181430,8.559230,-9.389020,7.319582,4.800084,-7.915649,-8.018880,-1.161745,-6.410542,3.242834,-0.392210,-2.200420,4.509986,1.323537,-8.932777,-8.522424,7.417049,-9.838709,-1.337224,-1.918670,-5.035046,-5.266775,-9.861611,3.743028,7.005202,5.350692,-0.524104,-1.047743,1.010720,-9.577400,-0.955276,-7.360009,8.735356,0.592614,-4.971439,1.274915,-2.811646,3.358128,-7.163452,4.844788,7.817652,-6.433445,8.261166,-2.380624,-0.670149,-8.382510,8.296090,6.230964,-9.031546,-0.189085,-8.332815,2.147239,-6.570879,-4.644501,5.799954,-1.726069,-2.947608,-4.186593,-6.958989,-4.890811,-7.408606,5.551226,3.276246,-0.911349,7.201921,6.331301,-9.285477,-9.828447,8.128723,1.819964,-0.641367,-8.822294,-1.310216,-9.818298,6.052755,-2.994561,-1.337315,2.402293,-8.952643,2.139326,3.488967,5.240237,0.209918,-0.707854,-0.898243,7.498328,0.679315,6.876913,4.640531,-6.269251,3.795056,-6.110989,-2.072944,7.096053,5.501055,-9.872785,2.264928,-3.490106,3.105665,-9.712250,-8.619687,1.802868,3.028419,-6.286207,-7.691247,0.912090,7.536562,9.938512,5.059423,-7.102972,9.521217,2.992895,-3.633359,4.143062,-3.656244,-8.664704,-4.945275,7.184851,-5.237625,-1.370482,-9.312774,-6.000833,6.373924,-8.489374,8.894356,8.546567,7.731321,3.167491,-0.710781,-7.930303,-6.021182,7.768135,-2.951242,-2.587463,-4.794294,1.130220,-1.211952,-9.971000,-2.374033,7.033773,0.196447,-3.228531,8.620545,8.242297,2.065542,2.408636,-8.047910,-7.949543,5.162247,4.448580,2.009377,-4.849442,1.234663,0.440911,9.939756,2.674214,8.274964,-7.183794,6.176382,-6.747608,7.953640,5.884330,-8.510815,-2.888125,-0.898150,-6.421303,-2.676306,-9.123534,9.226991,6.605705,-3.844434,-1.512970,7.501650,-7.068892,-8.568977,7.493374,-4.146741,4.709503,-2.178396,-5.109027,5.283550,-3.069901,-4.868609,6.421607,-4.854409,-3.626282,9.373419,-4.801947,3.901537,-0.150548,7.277747,8.599342,-1.844218,-6.112025,-0.952147,4.606488,4.403054,-2.375228,-0.161530,-4.372261,-8.404422,9.537320,7.641633,-3.145752,5.376857,-9.201833,-1.159525,-1.574381,-4.030735,5.497984,-7.204246,-4.585544,-8.544394,9.643217,6.197228,0.030188,-5.730226,6.957757,-4.713702,8.618291,-2.521040,-5.558518,6.109072,7.106002,-6.485455,6.434741,-7.497585,-9.525991,-2.152887,4.604263,6.421494,3.231605,-9.255246,6.829797,7.858352,-3.113788,-4.317850,-8.907451,8.934717,9.251898,2.874291,-7.828189,1.464571,-8.092505,-7.904899,5.478393,5.171870,-2.876948,2.902642,-3.997430,-7.692204,7.326533,-1.286772,-4.973782,0.967216,2.881399,-2.031525,-0.704836,-9.197318,0.835483,4.413740,1.387181,-1.744342,-3.630925,2.119672,-0.144728,9.755688,1.630946,0.331847,2.286696,5.622602,8.690397,6.177910,6.374075,9.236051,-3.314475,6.051395,0.416218,4.516526,-1.343294,-4.742147,-7.769210,-4.305579,1.585908,-9.562839,-0.736070,7.705923,3.865810,-0.370195,4.506243,-3.430463,-5.388879,4.712768,4.784064,0.957491,9.048610,-2.379639,6.895000,7.197712,-1.328366,1.903571,-8.990125,4.445257,3.126281,-9.203033,3.934075,0.493837,1.531852,5.657711,8.283793,-2.173267,-2.015587,7.935229,6.493034,0.507912,-5.690660,-0.833215,5.499396,-7.870473,4.184923,6.986876,6.657381,-8.803200,7.651419,5.848442,-3.300352,-3.519436,-1.475877,-1.087088,-0.840407,-2.733056,8.195118,2.750481,-0.191402,9.645067,0.296252,-3.558720,9.221250,6.895505,-9.903783,-8.560553,-0.598203,4.494782,-6.376724,-7.759158,0.461773,2.060935,5.539402,-9.760946,-6.284116,-7.881222,-3.542112,4.572823,7.911701,6.259994,9.777856,2.110654,-8.532264,5.997166,-4.062971,4.396480,-2.529294,-1.639995,-8.801746,2.841018,8.624552,-6.343764,-8.279671,9.540089,-6.233107,2.999309,-3.192672,4.656056,7.510305,5.723509,-8.625951,-8.456782,8.724880,-1.656467,1.899614,2.150680,4.853076,-9.250309,7.252284,-5.566022,-3.603229,2.892879,-9.422188,6.671892,9.535826,5.552402,-4.716102,-2.475555,4.235947,8.471242,-1.159975,1.978290,-9.020133,9.100364,5.138287,5.839499,0.951649,1.184944,9.149170,-2.958349,3.725915,-1.182424,2.467697,-3.506342,4.114564,0.373948,-8.379004,-8.374647,-2.359121,-1.509386,8.156301,-3.166624,-7.409052,-9.597356,-9.470933,8.988035,-2.303322,8.975965,-4.919113,-6.183143,5.839495,-3.744283,-3.094831,-9.920569,-1.883139,6.844965,-8.321805,3.962908,6.328183,-1.891963,-9.247289,2.167631,3.740398,-6.644970,-9.257273,-5.730411,-1.785615,3.784362,1.917801,2.813621,-9.981846,5.131944,-9.104595,-5.852041,-9.029267,-8.379774,-5.748278,6.615094,-5.751499,1.268485,4.928748,1.561033,-3.710734,-9.054252,-0.492493,-1.568281,-3.220118,-5.738331,-3.171191,-6.765488,3.962750,3.982600,4.347618,-8.497637,-2.118393,-3.502540,0.796345,2.941768,6.254858,8.328062,3.197333,-5.879996,5.352394,3.907954,7.564571,-9.163405,-0.291001,-4.120897,-1.896032,7.511330,8.248019,-7.910351,3.940670,-0.762111,-6.698486,3.969600,4.195980,2.931838,-5.052441,-0.961655,1.102576,-9.044378,-5.766719,1.731656,0.714988,1.761653,-4.383977,4.129078,3.929567,-1.594747,4.322044,-4.706905,-5.439773,0.159142,-5.603874,-9.632240,-4.230193,8.946522,-2.610194,-3.900569,5.430670,-2.386668,5.230972,-6.254961,6.707370,-3.866124], dtype = "float64")#candidate|4105|(1200,)|const|float64
var_4106 = relay.var("var_4106", dtype = "int64", shape = (6, 84))#candidate|4106|(6, 84)|var|int64
call_4104 = relay.TupleGetItem(func_2649_call(relay.reshape(const_4105.astype('float64'), [10, 15, 8]), relay.reshape(var_4106.astype('int64'), [1, 504]), ), 1)
call_4107 = relay.TupleGetItem(func_2652_call(relay.reshape(const_4105.astype('float64'), [10, 15, 8]), relay.reshape(var_4106.astype('int64'), [1, 504]), ), 1)
func_1420_call = mod.get_global_var('func_1420')
func_1422_call = mutated_mod.get_global_var('func_1422')
var_4117 = relay.var("var_4117", dtype = "float64", shape = (135,))#candidate|4117|(135,)|var|float64
call_4116 = relay.TupleGetItem(func_1420_call(relay.reshape(var_4117.astype('float64'), [9, 3, 5])), 0)
call_4118 = relay.TupleGetItem(func_1422_call(relay.reshape(var_4117.astype('float64'), [9, 3, 5])), 0)
output = relay.Tuple([call_4078,call_4104,const_4105,var_4106,call_4116,var_4117,])
output2 = relay.Tuple([call_4079,call_4107,const_4105,var_4106,call_4118,var_4117,])
func_4130 = relay.Function([var_4106,var_4117,], output)
mod['func_4130'] = func_4130
mod = relay.transform.InferType()(mod)
var_4131 = relay.var("var_4131", dtype = "int64", shape = (6, 84))#candidate|4131|(6, 84)|var|int64
var_4132 = relay.var("var_4132", dtype = "float64", shape = (135,))#candidate|4132|(135,)|var|float64
output = func_4130(var_4131,var_4132,)
func_4133 = relay.Function([var_4131,var_4132,], output)
mutated_mod['func_4133'] = func_4133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2185_call = mod.get_global_var('func_2185')
func_2187_call = mutated_mod.get_global_var('func_2187')
call_4135 = func_2185_call()
call_4136 = func_2185_call()
output = relay.Tuple([call_4135,])
output2 = relay.Tuple([call_4136,])
func_4139 = relay.Function([], output)
mod['func_4139'] = func_4139
mod = relay.transform.InferType()(mod)
output = func_4139()
func_4140 = relay.Function([], output)
mutated_mod['func_4140'] = func_4140
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4146 = relay.const([[[-4.347044,-9.981998,-3.265382,-4.558003,-6.176232,2.709217,7.940895],[9.555005,4.892379,-1.743399,-3.520698,-3.974690,8.609845,-1.838304],[-6.797731,9.640251,8.910433,6.278587,7.397267,6.538502,-4.407491],[9.218102,9.256000,8.907148,1.287416,-1.789529,-9.787276,8.995452],[-2.530366,-1.798358,1.880660,4.403145,7.156980,8.287622,-5.932882],[6.450403,4.478458,-1.577144,2.278264,1.214281,5.243284,-7.672155],[6.082431,-8.621765,4.640977,-3.746545,-2.812508,6.192684,-3.196207],[-5.942037,-4.992130,5.157148,7.104259,-5.561731,1.639692,9.004236],[7.609908,-0.732977,4.269023,-9.416465,5.118923,-3.653104,6.353118]],[[-7.802424,-0.914034,-6.689770,-3.838305,-9.738733,-0.386925,-8.844103],[0.369460,-3.788857,2.949465,3.442042,3.546997,0.336917,-9.665111],[-2.631917,7.141515,4.878587,-8.584392,-8.268271,-2.792501,-3.056378],[-5.556985,-0.052339,-3.207134,-7.062814,-8.723191,-5.786224,-0.401030],[-9.467723,3.105988,-0.922382,4.913017,-6.603388,5.113277,-5.672549],[-8.088182,-4.328562,4.517656,-3.420173,-4.886412,8.739297,-9.219857],[-1.570186,4.839744,1.329143,-2.935500,-0.715925,3.186033,8.809023],[8.655529,-2.192740,-7.690415,-1.694484,-3.800033,7.043101,-3.998547],[6.353697,-4.343922,5.704961,-7.865516,1.258560,-3.630712,5.827428]],[[-9.268219,-8.763936,-1.545658,8.637766,-4.663207,4.880602,-1.857645],[0.839012,8.376568,1.642331,-6.470120,-9.168347,5.275726,2.560425],[1.304593,-1.547406,2.191787,6.781899,2.957281,-3.265729,7.740388],[-7.408404,-1.819187,-3.631231,-0.957423,-3.280163,-9.536063,-1.834080],[-2.736839,2.772074,-1.831846,2.663361,-9.101209,3.708237,-2.541874],[8.597212,6.576449,7.853397,7.741831,-3.630070,-2.838226,0.862880],[6.384081,-6.727045,6.114232,0.177234,3.031346,-1.930422,2.065213],[-9.498236,2.032228,1.642738,5.902720,9.223051,-6.662006,1.972911],[-6.761606,2.273581,-7.802808,8.478797,0.292330,7.521725,8.136297]],[[6.613415,6.494964,-3.427403,4.620553,-1.269270,6.247000,-4.175671],[7.113730,-0.887948,-8.442138,0.802098,3.427709,-3.150491,0.687991],[-2.301681,2.642123,3.681838,7.612953,-1.306034,-5.857545,1.301584],[-1.013151,6.195628,6.915887,0.507116,-3.703513,-2.338237,0.606105],[-1.251740,-8.993199,4.678117,-2.304194,1.232941,2.403444,1.235956],[-2.851008,0.680840,-4.129503,-8.917359,-3.703675,7.405936,-4.465550],[-9.288189,-8.359234,-2.773614,5.922355,2.573783,-3.800843,2.446167],[-7.056516,9.397444,-7.833780,2.008627,-2.809229,-0.458373,3.855702],[8.588628,-5.337862,9.375886,-0.352359,8.935630,1.658848,-7.162223]],[[2.917561,5.007175,-1.149406,-6.521121,5.612413,7.270275,2.284723],[-4.081745,2.289560,-8.213911,-9.370074,-6.757397,3.591472,-8.542055],[-7.326841,0.897506,7.234968,8.791134,4.952821,-7.043031,0.554569],[-3.506311,5.992675,5.207528,-1.412985,-5.778760,5.530872,-2.464139],[7.822340,-2.759857,0.460270,0.999249,-8.544559,-6.854857,2.384969],[6.479271,-5.326587,8.401174,-5.377503,-0.045988,6.843107,7.175395],[6.949275,7.478247,4.704795,8.552470,3.597669,9.348410,4.543858],[-0.923864,-4.464930,-0.834184,7.727486,-4.769846,-6.470943,8.490740],[-7.037256,9.243453,-6.681115,-2.825468,-0.865095,-4.036247,-5.358877]],[[9.571437,1.437541,-9.922752,1.590131,-9.941672,3.162174,3.323634],[1.089807,7.880995,6.369937,0.320231,9.374430,4.283718,1.454523],[-5.060084,7.132092,-2.583135,8.223107,-8.379351,4.232998,1.446112],[-2.563466,-1.012916,6.994902,0.435463,-1.480572,-5.207667,-8.506501],[9.468833,0.260120,7.749795,-8.966914,3.312659,1.343912,-1.285071],[-6.388526,0.859637,-5.190914,-3.954592,4.723070,9.727569,6.066804],[7.851117,6.533081,8.004349,-6.938956,-3.895166,-9.471786,-3.103981],[3.081009,-7.939258,2.556469,-6.053375,-7.828212,6.632943,-9.101315],[5.118685,2.520758,1.022470,-2.706597,1.188763,-6.682159,2.702297]],[[-8.397175,-8.699405,-8.350884,5.780888,-6.429256,-5.022617,7.077478],[-7.785073,-9.048167,3.582136,-8.243727,-9.683349,1.905053,-4.043979],[1.752205,8.206681,8.948194,-9.771458,-7.293333,4.662172,2.564428],[7.611244,-4.067161,4.934843,-9.021643,-4.286520,3.351132,7.710444],[-4.879368,-4.856563,9.898227,7.256207,8.031989,-6.625345,-3.226117],[-5.363173,0.463884,-1.393722,1.785367,-6.975344,-2.014340,0.777863],[-6.092398,-8.976954,-3.720685,-4.482003,-8.168169,-2.000127,5.376534],[-6.190205,2.033000,-9.843434,-7.801842,-1.345821,-8.590747,4.955036],[1.397048,-9.887483,9.514518,-6.241664,-6.715092,4.489843,3.076299]],[[-9.399071,8.787907,-8.119069,-7.378158,1.556019,7.428835,-2.772217],[4.477178,-1.924119,-0.784079,-6.403245,2.676161,5.939197,7.723240],[9.211221,3.848694,-8.786722,-3.591242,6.077227,4.217767,5.991118],[-5.738110,-2.561522,-6.491138,-4.689997,0.135897,-3.320657,7.385515],[-5.656897,8.213645,7.591449,-9.698772,6.314745,-3.071047,3.207666],[6.558029,-7.444447,-1.198325,2.478854,3.362196,-5.324634,-8.577971],[-5.008092,-3.494796,4.049314,-0.426549,-9.804068,-2.489441,0.445273],[-5.449737,-8.502259,8.441389,0.375536,2.354652,-7.194107,-7.786911],[3.835129,-0.146350,9.640401,0.415664,-8.989935,5.420255,-5.111608]],[[-3.868766,6.045428,-9.808293,-8.782637,-8.491259,8.403637,1.584800],[3.128632,-7.026199,-2.093991,-7.801760,-4.058140,-7.152468,0.038044],[6.235223,4.056418,6.384388,8.898679,-7.922017,8.223138,3.068623],[-5.803717,7.579573,9.699074,4.715517,-2.992653,2.492329,2.397036],[5.833074,6.596537,-0.517934,-8.760174,1.765561,0.615492,5.521049],[8.335512,2.269595,2.792541,6.721093,4.836809,5.090238,-6.372451],[-4.695461,-3.738385,-7.855013,-3.754473,4.261763,-8.741042,-9.866875],[-3.912065,-4.652161,2.448575,-6.281656,-4.302065,4.265115,-9.733093],[8.643541,4.735319,-5.985656,8.211771,1.719293,9.240231,-5.525783]],[[-5.799624,3.528690,7.154445,-8.942638,2.320707,8.766334,-9.012853],[6.840675,5.533657,5.928738,-5.866524,0.702992,-8.487240,-3.226336],[1.301087,3.460199,0.772805,-5.262048,-1.841722,1.435730,5.822021],[-3.355333,9.126497,-2.599285,-3.660990,6.897640,1.016589,2.730439],[-2.443867,1.510994,-2.458793,9.374071,6.850002,-3.528704,-8.837732],[-1.575489,4.435646,1.136984,-1.923229,9.680281,0.319780,-6.960244],[6.174612,-6.119687,2.774025,7.079813,-9.755227,5.080206,5.516598],[2.314778,-9.203234,0.759416,-1.625955,-6.964118,3.363587,-3.736540],[8.626358,3.586856,-4.733736,-1.331386,-6.614580,3.893360,-0.413375]],[[-9.982850,9.919787,3.235901,7.697128,5.490750,9.059683,9.461408],[4.909371,5.585983,-6.408042,-5.037460,-3.030896,-3.351744,-2.920980],[8.771995,-8.243589,-4.848024,0.986890,2.739063,2.562230,6.766410],[0.707610,7.500555,-8.997188,9.182821,5.124472,4.708104,-7.313269],[-7.191134,8.810565,4.122086,-1.376222,8.545907,9.613068,-3.115729],[2.856734,3.047243,-1.806725,-1.810234,8.352498,9.225674,5.761098],[-5.339420,-6.929609,-7.608205,-7.695947,-7.225660,-6.832606,-3.884094],[-6.381713,-8.701880,-8.197328,-1.998959,-8.015685,8.505493,-0.162486],[-0.196858,5.984110,6.012462,-3.223428,-7.307628,6.075286,4.645747]],[[-1.706007,3.145534,-7.414093,2.807887,1.727531,-7.391025,-6.120849],[0.986424,-5.387991,-7.666392,-1.714947,-9.499778,6.027950,1.327709],[9.516337,-9.351112,7.433867,-8.925189,1.578677,-8.360253,-0.122122],[-4.567979,5.617728,2.732045,-8.447788,1.549942,-6.983237,7.743548],[-6.911107,-3.715511,9.663637,-9.807497,9.715904,-4.868564,-3.273310],[9.010642,7.197428,6.688730,-0.847677,5.160025,-3.487807,5.802431],[-9.592082,-6.585657,-1.616050,-9.706513,-4.587207,-9.712798,7.540426],[-5.784096,0.071512,-2.448940,-5.781020,0.396307,0.239230,2.030848],[-4.899066,-8.319542,6.433533,8.700154,6.030221,8.324464,-2.219958]],[[7.530809,-2.346684,9.340869,-0.381140,6.493887,5.415326,3.142083],[8.407643,-2.825671,2.535862,-6.036362,-0.255872,-2.227556,2.734314],[2.856848,0.056703,6.265110,-2.549078,-1.114793,1.491425,3.411003],[-5.106062,4.792157,7.514752,4.712988,-8.158099,0.382283,-6.531805],[-9.113984,5.619081,3.301360,5.018757,0.541554,-1.578481,-6.987241],[3.796923,-0.375442,-4.291923,5.048727,-5.816588,-3.849308,-7.691170],[5.302189,-5.124625,-3.839010,5.044868,-2.368804,-8.259735,-3.174618],[6.436672,-4.017638,5.812771,2.963209,-4.313830,5.237636,3.630275],[6.985633,-1.369711,-3.337393,7.921678,-6.558131,0.264313,1.543429]],[[-1.576847,-5.431728,-6.299058,-2.165152,5.904541,8.183540,-8.811516],[-1.040954,-2.942054,3.001527,-9.172951,9.830880,-7.995618,-3.749548],[6.251068,-9.709956,-5.888093,5.678967,6.689407,-5.021803,0.896144],[1.928190,-5.066156,-6.555284,3.754148,7.755511,9.923859,8.605196],[0.714027,8.589772,6.211406,-9.013293,-4.581322,-1.951025,-5.906754],[2.441741,-5.943282,7.962069,-8.442307,-5.480206,-2.109368,-4.364738],[-1.395790,5.667554,5.274160,-2.314744,-6.246104,-4.306882,2.854672],[6.892243,5.834641,6.202516,6.745017,1.751555,-4.762634,6.867228],[2.946686,5.060767,-7.671460,0.434427,4.683302,-5.489228,3.124141]],[[2.988406,-3.249643,-2.593539,2.323395,7.519873,-9.526672,-1.655375],[-2.534759,3.555081,3.962818,-9.577521,-7.825287,-8.789455,8.444966],[1.190291,9.477126,4.165190,2.819899,-0.695590,-1.318092,5.848654],[-0.825844,8.368515,-7.029855,-7.602617,3.191607,7.487974,3.637903],[-4.377450,-4.497136,7.469744,-2.311439,7.563626,-0.879190,-6.830174],[-4.640530,2.257950,1.759209,3.944115,-3.440502,-4.930867,-9.758148],[0.528107,0.627920,7.727106,9.391030,4.570017,1.971930,-9.311677],[-6.021924,-8.528683,-8.852297,7.094883,0.782022,0.259972,1.638439],[5.389403,3.761624,1.889405,-3.295741,6.471419,0.285511,2.149156]]], dtype = "float64")#candidate|4146|(15, 9, 7)|const|float64
uop_4147 = relay.exp(const_4146.astype('float64')) # shape=(15, 9, 7)
uop_4168 = relay.log10(const_4146.astype('float32')) # shape=(15, 9, 7)
output = relay.Tuple([uop_4147,uop_4168,])
output2 = relay.Tuple([uop_4147,uop_4168,])
func_4174 = relay.Function([], output)
mod['func_4174'] = func_4174
mod = relay.transform.InferType()(mod)
output = func_4174()
func_4175 = relay.Function([], output)
mutated_mod['func_4175'] = func_4175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3578_call = mod.get_global_var('func_3578')
func_3579_call = mutated_mod.get_global_var('func_3579')
call_4176 = func_3578_call()
call_4177 = func_3578_call()
var_4183 = relay.var("var_4183", dtype = "int32", shape = (12, 12, 7))#candidate|4183|(12, 12, 7)|var|int32
bop_4184 = relay.left_shift(call_4176.astype('int64'), relay.reshape(var_4183.astype('int64'), relay.shape_of(call_4176))) # shape=(12, 12, 7)
bop_4187 = relay.left_shift(call_4177.astype('int64'), relay.reshape(var_4183.astype('int64'), relay.shape_of(call_4177))) # shape=(12, 12, 7)
bop_4189 = relay.bitwise_and(var_4183.astype('int64'), relay.reshape(call_4176.astype('int64'), relay.shape_of(var_4183))) # shape=(12, 12, 7)
bop_4192 = relay.bitwise_and(var_4183.astype('int64'), relay.reshape(call_4177.astype('int64'), relay.shape_of(var_4183))) # shape=(12, 12, 7)
output = relay.Tuple([bop_4184,bop_4189,])
output2 = relay.Tuple([bop_4187,bop_4192,])
func_4197 = relay.Function([var_4183,], output)
mod['func_4197'] = func_4197
mod = relay.transform.InferType()(mod)
mutated_mod['func_4197'] = func_4197
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4198 = relay.var("var_4198", dtype = "int32", shape = (12, 12, 7))#candidate|4198|(12, 12, 7)|var|int32
func_4197_call = mutated_mod.get_global_var('func_4197')
call_4199 = func_4197_call(var_4198)
output = call_4199
func_4200 = relay.Function([var_4198], output)
mutated_mod['func_4200'] = func_4200
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4229 = relay.const(-4, dtype = "uint16")#candidate|4229|()|const|uint16
var_4230 = relay.var("var_4230", dtype = "uint16", shape = (13, 4, 9))#candidate|4230|(13, 4, 9)|var|uint16
bop_4231 = relay.not_equal(const_4229.astype('bool'), var_4230.astype('bool')) # shape=(13, 4, 9)
bop_4244 = relay.greater_equal(bop_4231.astype('bool'), const_4229.astype('bool')) # shape=(13, 4, 9)
func_4197_call = mod.get_global_var('func_4197')
func_4200_call = mutated_mod.get_global_var('func_4200')
const_4248 = relay.const([-7,-9,-2,-4,-2,9,9,5,9,-3,2,-9,7,-8,5,-10,6,7,-4,2,-1,7,5,2,-2,5,2,10,-3,-2,-2,3,2,3,-3,1,7,2,2,4,-8,-9,2,-10,8,5,4,5,10,-1,4,-4,10,1,-9,7,5,-10,5,-3,-3,2,-8,7,-4,8,-10,1,8,5,6,-9,-8,-7,10,-6,10,-4,5,-6,-2,9,7,-4,-1,-4,-1,-9,1,-1,-7,8,5,6,5,-10,-6,-9,-8,-6,3,7,3,4,1,-7,-4,-8,6,10,-5,6,-9,2,7,-8,10,-6,-1,-8,-6,3,-9,9,-4,-9,-9,-10,-2,-6,2,9,9,-6,-6,5,1,-9,8,8,-9,2,-1,-6,5,-2,-8,-1,-8,9,3,-3,-1,-3,-4,-10,-7,1,-5,1,-3,-8,-5,9,-6,-7,-2,1,5,-2,-6,-2,-7,1,1,1,-4,-6,8,2,4,2,10,-9,9,5,-4,-10,-3,-2,-2,10,-3,-5,-2,4,-6,1,-2,-2,2,10,-8,6,9,6,2,-7,2,6,9,-9,-8,1,-1,-5,-2,-10,3,-2,5,-6,-5,1,-5,3,-7,-8,-3,7,2,8,4,4,3,4,5,-6,-2,-10,-4,-10,-5,5,9,-3,-1,7,-8,-7,-9,10,8,2,3,-7,-5,5,7,-8,-2,-7,2,2,-5,1,-9,-7,9,7,3,6,-2,8,10,6,-6,7,-9,8,-8,-7,1,6,-5,-9,-8,4,5,1,-7,1,4,-1,-9,-6,-7,-5,-8,8,3,-10,4,5,8,-9,5,-8,8,-1,-8,5,3,-6,1,4,1,9,2,7,9,2,-3,-4,-10,9,5,3,-6,-9,-3,2,-9,-1,4,10,1,-1,2,7,-2,10,-2,3,4,-4,-7,2,1,8,1,-1,9,7,7,3,-2,-7,10,4,-2,-10,7,6,5,-3,9,7,6,-9,-1,2,-7,-10,9,-10,2,-1,-2,-7,8,-1,6,4,5,-4,-6,-2,5,10,7,8,-10,8,-5,-8,7,-1,1,-2,7,-5,-4,5,-2,-5,5,-6,-2,8,1,2,7,-10,9,9,10,8,-2,3,-10,-2,-2,1,-5,3,4,6,9,2,-10,5,-4,3,-7,-1,-7,-1,1,4,10,-2,3,6,3,-1,10,4,8,-1,6,-2,-4,3,-7,-3,-6,-1,-2,4,-6,8,-10,9,10,5,-3,2,-1,5,3,5,3,-10,-3,-10,-9,5,3,-9,4,-10,2,6,-8,-3,1,2,-6,-8,-7,7,9,7,-6,6,2,-8,-9,-8,-9,7,1,-3,2,-5,2,-8,4,4,2,9,-7,8,3,-2,-7,2,8,4,-9,-2,-10,5,-4,3,10,-1,3,10,7,10,-2,-3,-10,-2,-7,1,3,-3,-6,6,-2,-10,8,1,-5,-9,-3,-7,1,-1,4,-8,-9,-5,-9,10,7,6,-3,1,8,-5,6,4,-1,-6,7,1,4,3,-6,5,-7,1,8,8,-5,6,4,9,-3,8,10,9,7,7,7,9,3,-3,-3,6,3,9,10,-3,-2,6,-2,4,-7,3,5,9,1,10,3,1,-7,-5,6,-3,-9,-8,4,-10,-7,6,-4,-3,-4,-8,8,-7,8,4,-10,-4,-6,9,6,-10,2,-6,-10,1,1,-5,7,-8,3,-2,-8,9,-9,-5,-6,10,2,4,7,8,-3,9,-4,-8,8,8,-4,-2,-7,-8,4,1,-5,10,10,-10,-10,4,5,-10,2,10,9,1,-1,-9,6,-10,6,-3,-7,-9,3,2,-5,-2,2,-5,6,-7,4,1,-5,-2,-3,5,-7,9,-10,-7,-3,4,-3,-8,-4,7,8,-7,-10,-2,-4,-3,3,-3,2,10,1,3,-4,4,-4,3,8,5,-10,3,5,-7,9,-3,-3,6,-8,9,-10,7,1,-7,1,9,8,5,7,6,-5,-6,-4,2,3,-4,-4,8,5,8,-7,7,-8,-1,-8,10,-5,-2,1,3,-7,7,-1,1,-2,2,-6,7,5,9,-6,-7,-5,2,-4,10,-3,7,3,10,6,3,4,4,-9,-1,1,-5,-8,2,1,5,8,10,7,7,5,-5,-1,6,-1,-4,-6,9,-6,-8,-5,-3,-3,6,-4,-5,-4,-7,9,-4,2,-5,7,-4,6,-1,5,6,8,9,-5,-2,5,4,3,-6,-6,-5,4,-5,1,3,-10,3,-1,2,7,6,3,5,10,1,2,-10,-5,-1,10,2,3,2,8,-3,-9,-6,-1,-8,-2,-8,5,3,4,6,-7,6,6,7,3,10,1,2,-8,-4,9,7,1,-4,5,10,10,4,-3,1,-1,8,6,-5,-2,7,4,-7,-5,1,-3,-3,-7,1,8,-8,5,-2,-5,7,7,-1,7,7,9,3,-8,-6,-3,-5,-1,1,-6,-6,1,10,-9,-10,-7,10,4,-7,-10,-7,2,-4,-2,8,10,-3,-1,-1,-2,-7,-8,6,-10,6,7,-1,-3,3,-1,-7,9,10,-1,-8,-1,-3,-10,3,-3,10,-10,1,7,3,9,7,-8,-5,9,5,8,1,8,-10,10,-2,-2,-6,-1,6,-8,5,1,8,-7,2,-2,5,-4,10,-6,6,7,6,-2,-7,7,-8], dtype = "int32")#candidate|4248|(1008,)|const|int32
call_4247 = relay.TupleGetItem(func_4197_call(relay.reshape(const_4248.astype('int32'), [12, 12, 7])), 0)
call_4249 = relay.TupleGetItem(func_4200_call(relay.reshape(const_4248.astype('int32'), [12, 12, 7])), 0)
func_3142_call = mod.get_global_var('func_3142')
func_3145_call = mutated_mod.get_global_var('func_3145')
var_4251 = relay.var("var_4251", dtype = "float32", shape = (420,))#candidate|4251|(420,)|var|float32
call_4250 = func_3142_call(relay.reshape(var_4251.astype('float32'), [14, 3, 10]))
call_4252 = func_3142_call(relay.reshape(var_4251.astype('float32'), [14, 3, 10]))
output = relay.Tuple([bop_4244,call_4247,const_4248,call_4250,var_4251,])
output2 = relay.Tuple([bop_4244,call_4249,const_4248,call_4252,var_4251,])
func_4268 = relay.Function([var_4230,var_4251,], output)
mod['func_4268'] = func_4268
mod = relay.transform.InferType()(mod)
var_4269 = relay.var("var_4269", dtype = "uint16", shape = (13, 4, 9))#candidate|4269|(13, 4, 9)|var|uint16
var_4270 = relay.var("var_4270", dtype = "float32", shape = (420,))#candidate|4270|(420,)|var|float32
output = func_4268(var_4269,var_4270,)
func_4271 = relay.Function([var_4269,var_4270,], output)
mutated_mod['func_4271'] = func_4271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4295 = relay.var("var_4295", dtype = "uint16", shape = (7, 10, 10))#candidate|4295|(7, 10, 10)|var|uint16
const_4296 = relay.const([[[8,5,-1,-1,5,-2,-1,9,-10,4],[-3,7,1,-5,-8,10,4,-1,2,5],[-7,8,2,7,-10,-9,-5,4,-2,3],[-1,-6,-2,-7,1,4,1,-8,-1,-4],[4,-3,-4,5,7,3,-4,-2,-8,-3],[-3,6,8,8,9,-10,9,-3,2,8],[7,7,2,10,-10,-8,-9,-10,8,-6],[-10,-1,-2,2,2,3,-3,3,-4,5],[5,9,-8,10,-7,-5,3,-9,-8,-8],[3,2,-6,1,-7,5,2,7,-5,5]],[[3,2,-6,2,-2,-6,6,8,4,-3],[8,2,-2,-9,6,-10,6,7,-2,7],[1,-6,-3,8,-8,6,-9,-5,9,-9],[-1,-6,-10,8,3,-6,9,1,10,9],[10,-3,6,-1,3,-4,8,1,4,-2],[5,3,-1,7,-6,9,-2,7,10,4],[8,8,-9,-6,6,-2,-7,8,3,-1],[-10,5,3,-1,-1,-6,5,5,-3,-9],[-10,-2,7,-4,5,-9,8,-8,-7,-3],[4,-7,3,2,-4,5,-1,-10,-8,1]],[[2,8,-4,-10,-5,-1,-2,9,4,-3],[2,2,-6,-6,-9,-8,4,10,4,1],[2,-10,2,-2,-3,-5,-3,-10,1,5],[-2,-10,3,-6,-1,6,-9,-8,8,-7],[4,-5,1,10,-3,2,10,-2,4,-7],[5,8,2,4,5,8,-5,8,10,8],[3,-9,-3,-5,8,-2,7,-6,-6,-8],[4,-2,-1,-5,-8,-6,-4,-3,5,4],[10,-8,-5,-6,7,-4,10,-9,8,-3],[10,7,-4,1,-6,5,-10,-3,-9,10]],[[2,6,1,4,3,6,-7,-7,1,10],[-10,3,10,-7,-2,-5,-10,-6,-10,10],[8,-7,7,5,2,7,-10,6,-4,-9],[9,-3,-8,-1,9,-2,-9,3,-4,6],[-4,10,3,4,-8,-6,-8,9,5,-4],[5,-3,-8,-2,5,-10,3,2,5,-3],[-10,1,5,-6,2,-9,8,1,10,-10],[-1,3,10,10,-1,10,2,-1,-3,-1],[7,-2,-4,4,-6,9,3,-1,-9,-8],[-6,4,-10,-4,2,-8,5,-7,-2,-3]],[[3,6,-3,-9,-10,5,-3,-1,-3,-4],[2,3,1,-8,-9,9,-2,8,-4,10],[-3,-9,3,7,-6,-1,4,-10,4,-8],[-9,-6,4,8,2,9,2,-2,-9,-1],[2,5,-5,-3,-1,5,9,-10,-9,8],[-8,-9,-6,-7,9,-10,-9,-1,8,-5],[-6,-10,2,-6,10,-2,-3,-9,1,-2],[4,-5,6,9,-9,-4,5,-10,6,9],[1,6,-4,3,-1,-6,-8,9,-7,8],[3,3,-8,6,-8,-3,8,-3,6,-8]],[[4,3,-6,-5,-1,1,7,-3,-6,10],[-5,4,-2,-6,6,7,-7,-9,-3,8],[-7,7,4,8,10,-5,-1,-2,10,3],[-1,4,-9,3,-7,-5,9,-8,-3,-2],[-4,-1,7,-8,-1,-3,-1,2,-9,-3],[3,1,-3,4,5,10,6,4,5,10],[-5,8,-9,-8,-3,-7,3,2,-8,2],[4,-3,-5,4,9,6,9,1,-4,8],[-2,-6,2,-2,4,-4,-10,-9,-1,5],[-8,-5,-6,-7,-5,-6,8,3,9,8]],[[1,-4,-8,6,-7,-1,-3,-4,-3,7],[-3,-5,8,1,-5,-3,-3,-7,-9,2],[5,2,10,-7,6,10,-9,-2,-5,6],[-4,-6,5,9,8,1,5,-9,9,9],[-10,-7,-4,-7,2,8,-2,6,-10,1],[-6,-1,-6,-9,6,10,-7,-8,6,7],[-9,-7,-1,-8,7,9,10,8,10,-10],[-5,6,-9,-2,-10,-6,-6,-1,5,-8],[-7,-10,6,-2,5,-5,-4,2,-3,-2],[-3,-3,-1,-6,2,-1,-10,7,-8,2]]], dtype = "uint16")#candidate|4296|(7, 10, 10)|const|uint16
bop_4297 = relay.left_shift(var_4295.astype('uint16'), relay.reshape(const_4296.astype('uint16'), relay.shape_of(var_4295))) # shape=(7, 10, 10)
output = relay.Tuple([bop_4297,])
output2 = relay.Tuple([bop_4297,])
func_4300 = relay.Function([var_4295,], output)
mod['func_4300'] = func_4300
mod = relay.transform.InferType()(mod)
var_4301 = relay.var("var_4301", dtype = "uint16", shape = (7, 10, 10))#candidate|4301|(7, 10, 10)|var|uint16
output = func_4300(var_4301)
func_4302 = relay.Function([var_4301], output)
mutated_mod['func_4302'] = func_4302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_4304 = relay.TupleGetItem(func_2675_call(), 1)
call_4305 = relay.TupleGetItem(func_2676_call(), 1)
func_3161_call = mod.get_global_var('func_3161')
func_3163_call = mutated_mod.get_global_var('func_3163')
call_4310 = relay.TupleGetItem(func_3161_call(), 0)
call_4311 = relay.TupleGetItem(func_3163_call(), 0)
var_4317 = relay.var("var_4317", dtype = "float64", shape = (96, 3))#candidate|4317|(96, 3)|var|float64
bop_4318 = relay.not_equal(call_4310.astype('bool'), var_4317.astype('bool')) # shape=(96, 3)
bop_4321 = relay.not_equal(call_4311.astype('bool'), var_4317.astype('bool')) # shape=(96, 3)
uop_4323 = relay.tan(bop_4318.astype('float64')) # shape=(96, 3)
uop_4325 = relay.tan(bop_4321.astype('float64')) # shape=(96, 3)
output = relay.Tuple([call_4304,uop_4323,])
output2 = relay.Tuple([call_4305,uop_4325,])
func_4328 = relay.Function([var_4317,], output)
mod['func_4328'] = func_4328
mod = relay.transform.InferType()(mod)
mutated_mod['func_4328'] = func_4328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4329 = relay.var("var_4329", dtype = "float64", shape = (96, 3))#candidate|4329|(96, 3)|var|float64
func_4328_call = mutated_mod.get_global_var('func_4328')
call_4330 = func_4328_call(var_4329)
output = call_4330
func_4331 = relay.Function([var_4329], output)
mutated_mod['func_4331'] = func_4331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3287_call = mod.get_global_var('func_3287')
func_3289_call = mutated_mod.get_global_var('func_3289')
call_4335 = func_3287_call()
call_4336 = func_3287_call()
output = call_4335
output2 = call_4336
func_4342 = relay.Function([], output)
mod['func_4342'] = func_4342
mod = relay.transform.InferType()(mod)
output = func_4342()
func_4343 = relay.Function([], output)
mutated_mod['func_4343'] = func_4343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2075_call = mod.get_global_var('func_2075')
func_2077_call = mutated_mod.get_global_var('func_2077')
call_4349 = func_2075_call()
call_4350 = func_2075_call()
uop_4370 = relay.exp(call_4349.astype('float64')) # shape=(12, 12, 7)
uop_4372 = relay.exp(call_4350.astype('float64')) # shape=(12, 12, 7)
var_4381 = relay.var("var_4381", dtype = "float64", shape = (12, 12, 7))#candidate|4381|(12, 12, 7)|var|float64
bop_4382 = relay.floor_mod(uop_4370.astype('float64'), relay.reshape(var_4381.astype('float64'), relay.shape_of(uop_4370))) # shape=(12, 12, 7)
bop_4385 = relay.floor_mod(uop_4372.astype('float64'), relay.reshape(var_4381.astype('float64'), relay.shape_of(uop_4372))) # shape=(12, 12, 7)
output = bop_4382
output2 = bop_4385
func_4391 = relay.Function([var_4381,], output)
mod['func_4391'] = func_4391
mod = relay.transform.InferType()(mod)
mutated_mod['func_4391'] = func_4391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4392 = relay.var("var_4392", dtype = "float64", shape = (12, 12, 7))#candidate|4392|(12, 12, 7)|var|float64
func_4391_call = mutated_mod.get_global_var('func_4391')
call_4393 = func_4391_call(var_4392)
output = call_4393
func_4394 = relay.Function([var_4392], output)
mutated_mod['func_4394'] = func_4394
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4410 = relay.var("var_4410", dtype = "float64", shape = (1, 14, 13))#candidate|4410|(1, 14, 13)|var|float64
uop_4411 = relay.log2(var_4410.astype('float64')) # shape=(1, 14, 13)
output = uop_4411
output2 = uop_4411
func_4416 = relay.Function([var_4410,], output)
mod['func_4416'] = func_4416
mod = relay.transform.InferType()(mod)
var_4417 = relay.var("var_4417", dtype = "float64", shape = (1, 14, 13))#candidate|4417|(1, 14, 13)|var|float64
output = func_4416(var_4417)
func_4418 = relay.Function([var_4417], output)
mutated_mod['func_4418'] = func_4418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4342_call = mod.get_global_var('func_4342')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_4514 = func_4342_call()
call_4515 = func_4342_call()
const_4539 = relay.const([[[5,-8,-8,-9,-4,7,8],[-4,-9,-10,-8,2,-1,4],[-10,1,-5,-10,3,-5,10],[4,1,8,-8,3,-3,-10],[3,10,-9,9,-1,4,-10],[-4,2,8,-5,-5,7,9],[-3,8,2,-9,10,-4,9],[-6,6,-1,5,4,-8,-3],[7,6,-2,5,-4,-5,-2],[-5,7,-4,-1,-3,-4,6],[-8,-6,-2,4,-1,-8,-3],[9,-3,10,8,-5,9,-5]],[[7,-5,-2,-9,-5,8,3],[-1,8,6,8,3,10,-5],[8,-1,1,1,9,8,6],[-10,-2,7,-4,-3,-9,-8],[-4,9,5,8,-8,-1,-10],[10,5,-5,4,-8,5,1],[-8,4,-6,-6,2,6,5],[-4,-6,-3,8,-7,9,1],[7,-9,-2,8,3,8,-8],[-5,10,9,6,7,9,-4],[-7,4,8,-8,-4,8,-10],[5,1,-4,1,-8,-5,-1]],[[-9,3,-2,2,8,-10,-8],[-2,-7,8,-8,10,6,-6],[-5,5,4,1,-3,-5,5],[-5,-6,-1,7,10,4,5],[-9,2,8,7,-3,5,1],[9,7,-9,3,5,-1,-5],[6,6,-9,-9,-4,-8,-5],[5,4,2,-9,4,10,2],[-4,-8,-7,8,-3,-2,5],[7,2,6,7,-7,8,10],[1,-1,1,7,-4,-3,-4],[-7,6,9,-8,-5,-2,3]],[[6,-9,-5,1,-10,3,3],[-4,-4,6,-6,9,-9,-9],[9,-2,-5,-1,1,-6,2],[6,7,2,10,-1,-2,-8],[-7,1,-9,2,-4,-4,-6],[-6,4,-6,10,2,8,6],[-6,-9,1,8,1,-6,2],[9,-2,8,7,-7,-4,8],[-4,9,9,10,8,-10,5],[-5,7,9,-1,5,1,-8],[1,-6,-10,-5,-5,-7,-1],[3,4,-7,3,2,2,-3]],[[-9,9,-7,-7,2,-4,-4],[-1,9,-5,1,7,7,-10],[-7,2,-4,-8,-6,7,-6],[6,-3,7,10,-8,3,6],[3,8,1,-5,-9,-7,5],[-4,7,1,6,4,1,6],[5,5,-10,-9,-1,7,5],[-8,9,3,1,-8,3,10],[1,-9,9,-6,5,1,10],[-9,-3,-7,-6,-10,6,1],[-9,-5,-8,-9,-6,-8,-2],[10,-7,7,3,-4,-6,-7]],[[4,2,-10,6,-1,5,-3],[10,-1,5,9,-8,8,3],[-8,-4,8,-8,3,6,-10],[-3,3,-8,6,-2,7,-9],[-4,7,-3,-6,9,1,9],[-7,-8,4,4,8,3,-6],[4,5,10,-1,3,5,-3],[-5,4,3,-2,5,-7,7],[5,-2,9,-8,-7,1,8],[3,4,6,-10,10,-4,-8],[-10,-10,-6,-5,-8,-3,3],[9,2,5,-10,4,7,-1]],[[-10,9,2,4,-2,5,1],[-6,-4,6,-7,-3,-9,8],[-2,-7,6,2,-7,-7,5],[-10,-2,3,-3,3,9,8],[7,-5,3,-1,10,-10,-2],[-6,1,-5,6,8,-8,-9],[8,-8,3,4,-7,-8,10],[6,5,1,9,8,8,5],[8,3,-3,-1,-6,4,-1],[2,10,-5,9,-2,6,4],[-7,-9,4,1,5,-4,8],[-6,-2,-2,4,9,7,-4]],[[3,-6,8,5,7,9,-9],[-5,-1,-6,7,5,-7,-7],[-10,-7,2,5,-9,1,-8],[10,-3,6,3,-5,2,-4],[-8,5,-5,-1,6,-6,-6],[-2,9,-6,4,4,-6,10],[3,-8,8,-7,6,1,-3],[6,5,-6,8,5,-3,-3],[-10,-8,-10,1,10,2,-5],[-7,-9,-8,10,7,7,2],[-2,1,-10,4,7,-8,5],[-2,-1,9,-1,4,-4,-1]],[[-4,-2,-10,10,-4,-9,-2],[-10,7,9,3,9,6,7],[-4,-2,-3,-7,-7,-2,1],[-6,10,-10,-7,6,9,-4],[-7,-7,-9,-1,1,-5,5],[3,-3,-9,-4,10,9,9],[-1,3,6,-9,8,9,-8],[-2,-6,-8,-4,1,-7,-9],[-9,4,-3,-8,-6,-4,-8],[6,7,-10,-2,1,-5,-6],[-3,9,-3,-4,10,5,-10],[2,10,-6,5,2,-4,5]],[[-3,-10,-6,-10,1,-5,-5],[-9,-7,-5,-1,8,6,-5],[-10,10,3,-10,8,-8,-4],[-10,-1,-4,-1,9,-9,-10],[-4,-9,-9,-8,8,9,-1],[-5,-10,-4,5,3,-8,-10],[9,5,-6,10,1,6,-9],[5,4,5,-4,-8,8,5],[-4,-4,-4,8,3,-3,-9],[4,-6,8,-9,-7,-3,-10],[-4,8,9,-3,-10,10,1],[8,6,8,10,-3,8,-2]],[[5,-1,-8,-9,2,7,-6],[-7,-4,-7,-8,-2,2,9],[-7,10,-2,3,1,-4,-5],[-6,2,8,-8,-6,-3,-7],[8,-2,7,-7,4,-7,-1],[7,-4,8,6,-3,2,-3],[10,7,-7,2,-2,1,8],[-10,-10,6,-10,9,-10,-10],[-2,7,-4,9,-7,5,2],[5,5,1,-2,9,-3,6],[1,-8,-9,-6,-3,-4,7],[-8,-7,-9,10,-8,-10,4]],[[5,9,-8,-10,3,-1,2],[5,-7,8,-7,6,10,-10],[1,2,-6,2,9,2,-10],[8,-8,-3,7,-1,-10,-4],[1,1,-7,-7,-5,6,3],[-5,1,-6,8,6,-1,-2],[3,3,9,5,-6,-1,-3],[4,7,10,-5,-8,6,-10],[2,9,-7,1,-6,-4,-1],[3,3,10,9,5,6,8],[-9,8,10,7,10,5,-6],[-8,3,-3,-3,6,4,-7]]], dtype = "int32")#candidate|4539|(12, 12, 7)|const|int32
bop_4540 = relay.greater_equal(call_4514.astype('bool'), relay.reshape(const_4539.astype('bool'), relay.shape_of(call_4514))) # shape=(12, 12, 7)
bop_4543 = relay.greater_equal(call_4515.astype('bool'), relay.reshape(const_4539.astype('bool'), relay.shape_of(call_4515))) # shape=(12, 12, 7)
output = bop_4540
output2 = bop_4543
func_4548 = relay.Function([], output)
mod['func_4548'] = func_4548
mod = relay.transform.InferType()(mod)
mutated_mod['func_4548'] = func_4548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4548_call = mutated_mod.get_global_var('func_4548')
call_4549 = func_4548_call()
output = call_4549
func_4550 = relay.Function([], output)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2176_call = mod.get_global_var('func_2176')
func_2177_call = mutated_mod.get_global_var('func_2177')
call_4558 = relay.TupleGetItem(func_2176_call(), 1)
call_4559 = relay.TupleGetItem(func_2177_call(), 1)
func_3287_call = mod.get_global_var('func_3287')
func_3289_call = mutated_mod.get_global_var('func_3289')
call_4569 = func_3287_call()
call_4570 = func_3287_call()
output = relay.Tuple([call_4558,call_4569,])
output2 = relay.Tuple([call_4559,call_4570,])
func_4572 = relay.Function([], output)
mod['func_4572'] = func_4572
mod = relay.transform.InferType()(mod)
mutated_mod['func_4572'] = func_4572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4572_call = mutated_mod.get_global_var('func_4572')
call_4573 = func_4572_call()
output = call_4573
func_4574 = relay.Function([], output)
mutated_mod['func_4574'] = func_4574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3179_call = mod.get_global_var('func_3179')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_4590 = func_3179_call()
call_4591 = func_3179_call()
uop_4597 = relay.asinh(call_4590.astype('float32')) # shape=(1008,)
uop_4599 = relay.asinh(call_4591.astype('float32')) # shape=(1008,)
func_3578_call = mod.get_global_var('func_3578')
func_3579_call = mutated_mod.get_global_var('func_3579')
call_4600 = func_3578_call()
call_4601 = func_3578_call()
uop_4603 = relay.cos(uop_4597.astype('float32')) # shape=(1008,)
uop_4605 = relay.cos(uop_4599.astype('float32')) # shape=(1008,)
output = relay.Tuple([call_4600,uop_4603,])
output2 = relay.Tuple([call_4601,uop_4605,])
func_4607 = relay.Function([], output)
mod['func_4607'] = func_4607
mod = relay.transform.InferType()(mod)
output = func_4607()
func_4608 = relay.Function([], output)
mutated_mod['func_4608'] = func_4608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2213_call = mod.get_global_var('func_2213')
func_2215_call = mutated_mod.get_global_var('func_2215')
call_4614 = relay.TupleGetItem(func_2213_call(), 0)
call_4615 = relay.TupleGetItem(func_2215_call(), 0)
func_2075_call = mod.get_global_var('func_2075')
func_2077_call = mutated_mod.get_global_var('func_2077')
call_4641 = func_2075_call()
call_4642 = func_2075_call()
func_2675_call = mod.get_global_var('func_2675')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_4647 = relay.TupleGetItem(func_2675_call(), 0)
call_4648 = relay.TupleGetItem(func_2676_call(), 0)
output = relay.Tuple([call_4614,call_4641,call_4647,])
output2 = relay.Tuple([call_4615,call_4642,call_4648,])
func_4667 = relay.Function([], output)
mod['func_4667'] = func_4667
mod = relay.transform.InferType()(mod)
mutated_mod['func_4667'] = func_4667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4667_call = mutated_mod.get_global_var('func_4667')
call_4668 = func_4667_call()
output = call_4668
func_4669 = relay.Function([], output)
mutated_mod['func_4669'] = func_4669
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4702 = relay.const([[[-8.894744,-6.083712,5.429030,2.602324,-4.849416,-0.966824,-9.677815,-5.168132,5.676945,5.347872,4.079805,-2.440439,5.870288],[2.273179,-7.432816,2.081439,7.723224,-9.998759,3.927752,-6.872932,2.129261,7.943391,-6.450363,-8.488139,1.851942,-7.615392],[-8.190235,-7.239577,4.740853,-9.401576,-7.627814,6.010685,7.154019,-3.191834,5.447300,-8.242853,2.386124,-5.254959,7.200752],[3.915569,6.708843,-1.335258,8.581648,2.256866,-9.130372,-6.140767,0.998725,-4.909092,6.098172,-4.192547,3.323877,3.287640],[-9.089804,-3.306427,-5.402796,-5.270637,-3.278290,7.821532,9.834475,-2.261539,-1.266600,-9.675884,-8.372253,-7.653068,2.481551],[9.712334,6.570341,-4.029412,-4.290804,-6.223250,-8.063417,-0.163682,7.853009,-7.688442,0.620624,-3.445309,4.952288,9.888604],[-8.634380,7.918038,-4.879858,-1.780681,9.622596,-8.069567,-0.977021,4.041647,6.993277,3.946622,1.585790,-7.777177,-9.064384],[3.027229,2.946198,-4.895505,-2.736940,-4.467894,-0.206190,9.459463,3.665340,5.013658,-8.144657,-4.796087,2.796666,-5.571111]],[[-0.744402,4.509165,0.877762,-6.516888,4.940075,-8.121425,2.424385,4.027704,-7.367866,3.981401,-6.803951,3.235411,9.499032],[-0.184829,7.663445,-5.803708,6.482277,-7.919092,-4.550554,-0.004667,2.771221,8.099706,6.256416,-6.698010,3.995361,1.037612],[2.468230,-7.111005,-9.426212,5.394315,6.785074,5.284848,8.158950,-1.386580,2.743967,1.137740,9.894217,5.472349,2.993074],[-1.545730,7.775301,-9.705565,-3.056557,-9.993187,-5.735745,-3.959328,3.629956,-1.131842,-3.316748,-9.087233,4.846898,-1.912834],[-3.254572,7.725996,-0.299957,4.562967,4.311458,-1.953120,-5.043598,4.037008,-4.947704,7.831187,6.083396,-3.932374,-4.747761],[2.117555,-1.860025,-8.307730,5.485134,1.021217,-0.023804,-9.061423,-3.461395,4.677569,7.905731,9.122408,8.021352,8.916665],[8.244947,-0.915619,-6.030225,9.524052,7.885459,4.832484,-8.673690,-9.337595,9.678948,-5.318477,9.671023,7.343970,-3.174118],[-5.062464,5.029495,9.602156,0.499739,-9.697338,1.364957,9.725244,9.516679,-5.051928,6.125635,-5.834913,2.470178,-0.443175]],[[5.894283,8.548395,5.747116,4.399572,7.293387,5.926717,-0.024647,-6.483387,5.514975,-7.809015,-4.884245,-7.426918,-9.300896],[6.626828,-7.386575,-2.817551,7.693918,3.537796,-5.350244,5.501092,9.028196,-7.061323,-3.936991,-2.160675,-5.100442,-5.240767],[4.170986,-3.988320,-0.384087,1.225891,-7.196293,-2.222000,9.422889,-9.929458,-7.245378,3.904231,-1.950808,6.117243,-6.315594],[-7.258642,-5.034678,4.408096,-6.442128,9.693713,5.951828,2.702590,1.925563,6.207516,6.127404,-9.864969,7.039033,-5.664353],[7.256089,-8.516493,2.236767,4.150303,-4.322976,0.907242,-6.858396,5.755897,8.314101,8.684498,-4.059678,9.269924,-4.211497],[4.697752,6.857519,8.118597,1.250448,-4.797612,1.296837,-4.058385,-2.851086,-0.095549,8.469542,7.924462,-5.801381,3.784383],[6.348796,-0.533473,-2.275311,-4.555834,5.800123,-8.207391,0.946905,8.921550,-6.818739,-1.216882,5.908037,-4.547681,-5.970649],[5.338066,-9.560578,4.716693,0.372684,-3.209287,3.029089,1.812605,-0.803165,7.094166,-5.534973,-7.483446,4.329778,-5.470252]],[[5.159932,4.066013,-1.340648,-2.519435,0.789945,-8.307921,-0.197388,-6.126968,0.532716,-7.077428,9.832843,-7.503102,3.621882],[3.016173,5.266984,4.147184,-5.313794,4.491295,-8.927344,3.399753,8.082681,-1.402459,-6.039187,-4.689423,8.213177,-1.441720],[-8.891719,-1.312311,2.097182,-7.966517,0.158195,-9.213912,-0.739902,-5.499750,8.640323,-1.007347,-3.784384,-8.460540,1.266750],[-8.462879,-4.171568,-0.815841,0.454250,-1.169735,-9.122092,-4.492634,-6.315221,8.870344,-1.687870,5.188772,1.368086,-4.638577],[4.951905,9.369559,6.475753,3.520079,-0.749324,6.962587,-2.363809,-4.919782,-1.016353,0.656987,4.517979,-0.585910,-7.918010],[-8.754280,4.227459,3.703410,7.911546,-3.533234,3.244263,-8.566203,6.845966,4.855022,1.738693,-7.161240,-3.529872,4.612059],[-6.005354,0.677784,5.526713,-2.882706,0.185587,4.214356,-7.002961,6.219103,4.239690,2.212863,2.577310,0.657636,0.690418],[7.527235,7.797783,5.264810,-3.294958,-7.856953,-6.429026,-3.629014,9.330391,3.003201,0.455419,2.927249,-6.933548,2.347266]],[[4.469474,8.287306,-0.829116,0.796403,8.249542,5.014199,7.766711,8.176770,3.435052,4.652699,-4.204008,-4.374880,-6.901767],[-0.864631,5.928194,-4.759499,-3.293169,6.406082,-6.588122,-7.714835,7.411434,6.895931,-7.769576,3.547402,2.923266,-2.199098],[5.663955,9.957900,-0.629496,-1.904191,-6.087471,-9.004638,-6.777327,7.092184,-2.986275,-3.220373,-2.902051,8.882744,6.673420],[-5.130348,7.147444,-7.457044,8.197273,-0.884321,2.710467,4.592976,-9.750051,1.725150,3.464150,8.413740,-6.092576,-7.771272],[-2.762417,5.355942,-7.063306,-1.389816,-3.985154,-9.895205,-5.116250,6.112551,9.030779,1.896021,5.010181,2.495498,-1.500286],[-4.383610,-9.780626,8.440374,-2.663768,-1.711682,-8.694950,9.627733,6.065857,-9.186024,-7.217298,-3.100198,7.134026,9.427289],[-6.811971,1.195287,-2.772583,0.807085,-3.673797,1.476156,-4.481263,4.044278,-4.940643,9.994885,-1.614702,2.175264,-3.517738],[9.696810,-3.181906,-3.972596,3.613674,3.345264,2.885818,-7.739141,1.309829,1.186817,-4.000631,-8.281153,4.471474,-9.787395]],[[6.899318,-0.980584,5.836146,2.684849,9.292071,-3.167434,-1.559201,-4.573125,0.883388,6.507495,-7.627535,-4.877993,-9.274589],[0.600860,-0.435333,3.077785,9.407046,9.391171,7.336275,-2.737290,-9.095234,0.892882,-7.586565,3.703074,5.311559,-9.690307],[5.810830,-5.415542,9.541557,7.987872,7.368322,-1.420288,-6.866381,-3.751427,-5.844221,-9.326426,8.785111,9.031209,0.698581],[7.875879,-8.261773,-7.325849,-1.381566,2.350954,-7.563686,-6.524123,0.461594,5.477876,-7.471060,-8.318631,-1.815218,-7.722984],[-6.666200,-2.323370,-6.654812,-2.328486,5.448957,-4.142466,9.068350,-7.933337,-1.653992,-2.817487,1.932619,4.438326,2.281510],[-9.748477,6.320940,1.585102,2.415600,1.621196,-7.515281,-0.472117,1.762322,7.033168,-5.758091,-8.281243,-8.798013,-3.985865],[-1.126166,-4.475733,8.308322,-1.301019,4.178427,8.800522,3.466544,-1.830751,-6.903193,7.026850,0.587311,3.874465,-1.248711],[-2.650470,-1.909971,-8.001426,-8.502827,-5.860954,-2.475682,-3.093766,-1.219233,-8.638451,5.241308,6.325345,9.012021,5.458680]],[[-9.293625,-3.353635,-6.181605,0.973672,8.415120,-6.002988,-2.988955,-7.829608,2.807283,-3.494327,-9.822517,3.501557,8.259890],[4.337834,3.834462,8.235753,2.740408,9.738270,-3.727021,-9.554080,-3.628345,-1.477729,9.704748,3.816432,7.673472,6.287185],[-2.251104,5.295809,2.964555,-6.249878,5.579890,-6.800854,0.965587,1.318958,1.538304,-0.023408,-9.366698,-3.992508,4.281931],[-2.075003,-5.330684,-6.389411,-9.300287,-4.270989,-1.779478,-2.849568,7.803146,1.812952,-4.463769,-5.488403,-6.629330,-9.887410],[3.548029,6.974155,-0.006135,-9.982361,7.384940,-2.273638,-0.542451,2.974711,3.807362,1.574322,7.527434,-6.198543,7.368077],[5.558696,4.486296,-3.034206,-4.561178,0.921433,8.978643,8.522321,-6.956995,-3.077918,7.167724,0.389736,3.749730,6.162316],[9.466860,9.477050,-1.956299,8.111079,-9.759446,8.650112,9.317820,1.011554,-1.126190,8.308118,-8.265247,8.681820,4.374918],[9.495134,3.272313,4.770515,-7.307793,1.650724,6.378024,-5.221127,-9.581888,3.214147,-3.929895,-2.599403,0.026927,3.437995]],[[1.322196,0.396995,6.038984,-4.298373,8.916144,-6.099401,-8.436263,1.289026,-7.388020,3.051102,7.898497,-2.080523,6.030475],[-1.646734,-6.180138,1.926972,-5.591987,-2.589713,3.669861,9.435759,4.924313,-7.608354,1.142950,4.855078,2.379003,2.095833],[8.717250,-0.906562,-9.337122,-8.318827,-5.708283,8.981436,-7.183153,-1.167563,-4.198722,4.230886,5.365142,5.641577,8.711322],[-5.499280,3.462758,5.328665,5.831576,3.108517,-5.813484,-2.027304,2.666279,6.978927,-7.802477,6.444620,3.630938,-2.903604],[-7.115036,-2.090490,-3.992456,-0.713743,-2.766654,4.004646,4.073047,2.987744,-1.447333,-1.879043,7.669252,8.265174,-0.172247],[-3.953443,0.307662,-4.979874,-6.031348,7.349448,-1.728833,-8.093224,1.037925,-2.477351,2.338134,-9.480046,-4.391712,9.826217],[3.731946,2.943893,-7.878363,7.778313,-8.400128,2.762404,-9.713753,9.113931,8.850754,8.720240,3.129899,0.222534,-2.274349],[-6.560706,8.381545,-2.460427,9.161672,-3.718698,-2.460241,5.982921,7.104248,4.857390,-7.554655,-1.004228,3.259280,-0.530488]]], dtype = "float64")#candidate|4702|(8, 8, 13)|const|float64
var_4703 = relay.var("var_4703", dtype = "float64", shape = (8, 8, 13))#candidate|4703|(8, 8, 13)|var|float64
bop_4704 = relay.subtract(const_4702.astype('float64'), relay.reshape(var_4703.astype('float64'), relay.shape_of(const_4702))) # shape=(8, 8, 13)
var_4718 = relay.var("var_4718", dtype = "float64", shape = (8, 8, 13))#candidate|4718|(8, 8, 13)|var|float64
bop_4719 = relay.maximum(const_4702.astype('float64'), relay.reshape(var_4718.astype('float64'), relay.shape_of(const_4702))) # shape=(8, 8, 13)
output = relay.Tuple([bop_4704,bop_4719,])
output2 = relay.Tuple([bop_4704,bop_4719,])
func_4728 = relay.Function([var_4703,var_4718,], output)
mod['func_4728'] = func_4728
mod = relay.transform.InferType()(mod)
mutated_mod['func_4728'] = func_4728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4728_call = mutated_mod.get_global_var('func_4728')
var_4730 = relay.var("var_4730", dtype = "float64", shape = (8, 8, 13))#candidate|4730|(8, 8, 13)|var|float64
var_4731 = relay.var("var_4731", dtype = "float64", shape = (8, 8, 13))#candidate|4731|(8, 8, 13)|var|float64
call_4729 = func_4728_call(var_4730,var_4731,)
output = call_4729
func_4732 = relay.Function([var_4730,var_4731,], output)
mutated_mod['func_4732'] = func_4732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2882_call = mod.get_global_var('func_2882')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_4750 = func_2882_call()
call_4751 = func_2882_call()
func_3179_call = mod.get_global_var('func_3179')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_4781 = func_3179_call()
call_4782 = func_3179_call()
func_1021_call = mod.get_global_var('func_1021')
func_1024_call = mutated_mod.get_global_var('func_1024')
const_4785 = relay.const([-9,-6,-3,8,10,-10,3,9,4,-9,3,7,-1,5,1,9,-9,6,-1,7,-8,-4,4,-6,1,3,3,4,-2,-7,9,3,-10,9,1,-5,-2,-10,2,-7,1,7,-1,7,-1,4,-10,-7,4,-4,-3,6,5,4,-3,-10,-2,-10,7,-4,-4,10,5,-6,5,-6,6,4,9,1,-10,6,-8,-6,-6,5,9,5,5,7,-9,8,6,-7,1,-4,-8,6,-1,-3,1,6,-3,7,2,8], dtype = "int32")#candidate|4785|(96,)|const|int32
var_4786 = relay.var("var_4786", dtype = "uint16", shape = (960,))#candidate|4786|(960,)|var|uint16
call_4784 = relay.TupleGetItem(func_1021_call(relay.reshape(const_4785.astype('int32'), [3, 8, 4]), relay.reshape(var_4786.astype('uint16'), [960,]), ), 1)
call_4787 = relay.TupleGetItem(func_1024_call(relay.reshape(const_4785.astype('int32'), [3, 8, 4]), relay.reshape(var_4786.astype('uint16'), [960,]), ), 1)
output = relay.Tuple([call_4750,call_4781,call_4784,const_4785,var_4786,])
output2 = relay.Tuple([call_4751,call_4782,call_4787,const_4785,var_4786,])
func_4797 = relay.Function([var_4786,], output)
mod['func_4797'] = func_4797
mod = relay.transform.InferType()(mod)
var_4798 = relay.var("var_4798", dtype = "uint16", shape = (960,))#candidate|4798|(960,)|var|uint16
output = func_4797(var_4798)
func_4799 = relay.Function([var_4798], output)
mutated_mod['func_4799'] = func_4799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mod.get_global_var('func_3750')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_4862 = relay.TupleGetItem(func_3750_call(), 0)
call_4863 = relay.TupleGetItem(func_3752_call(), 0)
uop_4877 = relay.acos(call_4862.astype('float32')) # shape=(1008,)
uop_4879 = relay.acos(call_4863.astype('float32')) # shape=(1008,)
const_4883 = relay.const([0.367997,3.489585,3.762614,-6.723639,-9.978377,3.578323,4.067912,0.300938,-6.620344,8.200662,-3.026530,5.389301,6.351426,-7.315196,-3.422298,8.155778,5.765711,-2.626836,-5.609320,-3.955132,-0.501384,1.737476,-8.990385,-5.488167,0.639404,0.601402,0.694551,0.646301,5.400551,-8.246147,0.154635,9.511386,-5.255837,4.986896,0.570084,9.972169,3.168228,9.433085,6.962422,-7.414489,0.634562,2.707451,1.754927,4.588781,-5.635225,-3.589491,7.658663,6.678555,4.745098,1.301539,-4.544717,9.202238,9.901959,8.700815,-2.182890,1.276045,0.422063,7.576628,6.386788,0.428517,-4.651576,2.051666,-4.195012,-0.570986,7.092210,-1.329593,-2.596274,5.040882,-2.504835,3.337495,-8.624243,3.717618,6.206982,-5.268048,7.952902,-6.090861,6.239736,-8.894737,-3.439328,-2.310290,-6.981917,-9.576177,-4.487940,-9.158562,-3.751596,2.074212,-9.062595,1.792970,6.094440,-0.950618,9.920127,7.591051,-1.849918,-1.695826,-3.627179,-6.288306,8.110046,0.520921,-4.263416,4.969859,4.106966,6.130376,8.671929,5.616953,7.996030,5.001981,7.979895,3.867212,-3.477078,-4.037185,-1.810009,9.048276,8.668747,3.835244,-5.123524,0.933793,-8.279979,5.369445,5.851467,-0.263009,-4.005229,6.048863,-4.618168,5.874531,1.369468,5.796637,-1.169826,1.420600,-6.740715,9.704196,3.118000,-6.016303,-7.895912,6.226608,9.658120,-4.750217,-9.573282,0.030751,-6.919821,8.913317,-7.189556,-0.333184,-1.196101,8.214523,-9.074225,4.827428,7.157820,4.089934,-5.372534,1.018765,0.501517,7.428801,8.597589,-5.645876,-4.642688,5.508778,3.271848,6.098281,-7.195346,-9.748478,-7.438494,-2.580253,6.940812,8.906581,5.523035,8.668190,-3.804842,-1.020757,8.064834,1.636767,-5.436790,9.872294,-6.021246,7.924644,2.023660,-9.507557,-2.435806,8.628186,-3.060502,3.476881,4.765332,-7.064948,6.438338,7.313249,-1.418528,-9.480868,-8.486614,-0.780394,4.131623,0.294889,0.172676,-3.382694,-0.275172,5.560316,-0.018137,-7.298447,-3.944012,9.783929,2.702123,-4.058452,1.556176,9.081636,-3.574437,2.293183,8.432134,-3.060759,-2.865982,-1.956776,-2.243785,3.094806,-6.527619,-3.266940,6.120917,6.404279,7.004961,-4.923774,-4.776260,-3.302748,6.725406,-0.493954,-6.590970,5.583420,0.541746,5.696937,3.699578,-6.898938,6.027652,-3.417660,-4.299424,8.372570,-8.527372,1.812788,7.562632,7.236909,4.679446,-7.549015,2.761429,-9.841242,8.494626,-4.961056,-3.378044,1.871856,-9.927478,-6.287542,0.306699,-7.548307,1.688971,-5.239465,0.957241,2.318004,-3.124801,-5.777766,3.220103,-4.010719,-8.545079,-4.752142,-7.307205,-2.987468,6.232074,6.474879,9.521218,-4.735843,4.052960,3.013873,8.662935,2.891176,-9.173028,5.877368,-2.020989,2.218556,-8.701351,-0.416494,8.918272,0.011281,2.334034,2.759145,-3.753461,-7.047611,-4.193046,-0.460252,-4.930289,4.928135,4.895596,4.098172,5.193874,0.304972,-7.452871,-1.054175,-8.634122,-7.562474,-2.712759,-5.397868,-1.842778,2.786531,1.516985,-7.889092,2.735448,-8.394294,-1.735251,7.607883,-0.489033,7.062286,-3.574222,-5.576555,-9.992987,-6.211670,-7.360377,3.703443,4.322930,-1.810060,8.974909,1.744796,-3.353436,4.620707,1.674168,-4.345457,0.105527,-4.452263,4.584491,5.046794,9.758732,9.373161,-6.729462,-9.530162,0.920097,-7.797934,8.345205,1.970136,-8.938479,-9.318551,6.059491,8.786866,6.645737,-8.640172,8.732657,-5.546769,-9.193303,-9.296626,-8.127244,-5.660766,0.502579,-9.818027,-5.171245,3.078506,7.490799,-2.595377,-9.495082,2.709890,9.306976,1.613100,1.257883,-7.565895,4.896560,8.070427,4.614593,9.657596,-2.391428,-7.176024,3.372941,4.048219,5.200119,-8.407843,-0.772763,4.284111,8.739995,-0.396199,-4.124388,-8.286241,3.324854,-4.639893,-6.973408,-6.980996,7.041888,9.604659,-6.656785,8.005822,4.828313,5.675202,-0.822691,7.225677,1.839127,-7.431417,-8.987886,9.742272,-7.819527,2.549988,8.919476,-8.080641,-6.453233,-8.162988,-4.463758,-8.234763,7.696499,4.922043,3.433305,1.462794,-1.722284,-9.823783,2.685447,1.973453,7.009275,-4.725697,-6.360157,-7.708266,-2.043311,2.853702,-3.227528,-4.710063,8.216201,5.737696,7.799723,-9.713637,9.706980,-5.665082,-9.571175,-1.669425,-4.430290,7.989554,9.529879,6.433509,-1.232317,1.971318,6.705041,-8.395684,6.325217,7.738880,-2.368613,7.851165,-6.582307,-1.724942,7.127582,9.205445,9.935512,-6.206141,-5.141324,2.348421,-8.937279,8.977767,-2.622970,-2.214874,-8.916253,-1.099469,0.570349,-7.692883,-2.387631,2.794472,3.433325,3.821078,5.565295,-0.894912,-9.097998,-6.869365,-1.678670,-4.769832,8.235016,-0.345876,-0.984335,-7.076637,-7.316416,3.610353,-1.905651,-1.569298,5.395445,-9.888031,7.623551,-8.223617,-4.096264,-6.815972,7.828519,-5.122531,-4.905120,-6.863113,3.477256,-9.632612,9.902676,-1.165427,-2.534770,3.839883,8.690452,-0.141191,-5.586197,-3.065729,8.338606,0.582871,5.893951,7.324808,6.153279,-3.457904,5.492658,-8.586855,-6.790402,-8.660744,-2.157876,3.672510,9.425172,-3.768353,-7.785422,9.355824,-8.281834,-7.822171,-6.121631,3.418835,7.272736,-6.614694,-9.015628,8.622978,-7.038287,-4.622698,-9.542409,-7.052808,8.489112,2.622016,8.301325,-8.932472,-9.454145,0.033768,-1.866520,-1.055037,-2.103582,-7.128650,1.375863,4.341871,2.552230,-3.356233,2.605917,-9.485590,-7.372919,5.116407,-4.090561,1.779438,-8.789648,9.126279,9.139554,7.566463,-7.362827,-6.884913,4.274731,5.758516,9.203344,-1.222782,-1.266864,-4.385459,9.031721,-1.360033,7.893358,-4.306542,-1.687815,-1.591940,1.205372,0.124961,-0.296172,3.885752,-2.895534,-5.093720,8.956485,-5.112739,2.791222,-8.026514,-4.478096,-8.440332,-0.734794,-6.916754,-0.576921,-6.285537,-2.291056,-1.402675,4.499833,-8.428833,-1.024333,-6.240860,-2.578275,-6.690076,7.480747,-3.724691,6.720630,1.245690,3.740398,2.002647,-3.899635,0.727703,7.608669,0.621628,9.107041,-0.110514,6.251494,7.232982,-3.345531,7.610064,-0.482237,3.600268,9.093711,7.057692,-4.780710,-3.315372,-5.931244,2.166654,4.744436,1.699686,8.241572,2.961423,-9.142252,-2.480321,-7.268167,-5.077916,5.598788,-2.325318,-4.537471,2.190466,-9.918207,0.508308,0.726376,8.348485,-3.224379,8.890851,-2.310559,-7.314856,-1.781314,8.607219,-3.514568,7.996228,-6.450904,-9.435728,-7.842585,3.421728,-3.401523,2.650589,-5.733596,-1.605621,5.944222,-8.270703,-7.676435,-7.662317,5.560898,4.299852,2.940049,5.154170,7.446552,-9.796538,1.775958,-6.122816,5.877099,0.275426,-5.625406,-4.230185,2.816037,-2.195384,7.479533,-2.721525,-5.041809,-1.723540,7.149475,1.241032,-1.862745,-6.192097,-7.848417,4.980505,-5.633666,4.508728,-2.635829,9.411807,-5.315987,-6.225773,-2.635567,-7.319587,-3.189522,1.191986,-1.131284,-6.183836,-9.376278,-5.232961,-3.484994,-2.681997,-3.399757,0.024417,6.660724,-0.861476,-6.241077,6.352708,-8.998037,-2.762312,1.977860,-7.936282,-6.260542,-1.743792,3.966556,9.891211,-8.505903,-0.920731,3.093236,1.287910,-8.118702,-6.281023,-1.997852,-8.283078,4.497109,-1.360577,-8.631521,-3.971387,5.382522,5.294120,8.096709,-2.129553,9.033525,-5.990256,1.165708,6.133313,-8.960707,-3.636224,-5.913709,1.084111,8.874644,-8.600073,-9.897341,9.751227,7.258986,-8.864556,5.430422,-6.517907,2.243104,-9.110376,-5.277266,1.365256,7.526456,-2.856613,-9.730571,-5.823450,3.708495,1.188358,3.433711,4.798880,3.101925,-4.578622,2.413022,2.644236,8.922859,2.114797,-4.815372,-2.268574,-1.676473,3.629390,-8.948342,3.566192,-0.829671,9.271568,7.065052,-9.795554,-2.727746,2.900532,4.139856,1.552676,-3.229635,-7.281991,5.452885,8.438613,0.463235,-6.816546,-0.688652,6.985657,-0.001183,-9.689200,-3.078486,-1.044524,6.284894,-6.098634,1.083665,-6.344410,-1.642895,-4.808405,5.871927,1.423397,-9.986729,4.775705,3.425407,1.636065,1.547358,6.444895,-2.899883,1.983386,-1.115758,-6.583108,3.052653,4.553894,4.023831,8.029734,7.411969,-7.278116,-4.610598,-4.063676,-5.902324,8.223952,-2.974044,1.587839,-0.659664,-1.809050,-8.794948,-3.617886,4.439358,6.580353,2.515344,-0.716489,-5.627325,-0.193330,-3.899274,-3.522698,-6.349500,-0.554246,2.830530,5.261833,-5.677256,-4.147685,-7.349692,-8.710662,-6.915157,2.200006,-1.450153,4.651556,-6.249938,2.566822,-4.141244,2.641737,2.788598,1.827179,-2.281175,6.133569,3.960911,3.794430,-6.659955,6.439803,-6.651906,3.546802,-9.856111,5.926264,-8.233084,5.089223,-8.095225,-7.911961,3.200476,-2.196722,-6.253552,-4.367918,8.925134,-8.015844,-3.882274,4.008140,-1.219560,0.123196,2.159665,2.594026,-7.533151,-9.632876,2.039064,-9.244491,0.373991,-2.309685,-9.011796,0.322371,6.948971,-1.483300,0.948597,-8.019427,-6.298927,0.950326,-6.359389,6.099025,2.911191,4.547504,-7.400489,7.170612,7.182884,-4.903429,2.476232,6.754527,4.902835,-1.072845,7.990883,-8.995850,-4.784727,5.472892,-8.274061,5.348087,0.398683,-3.900939,3.238962,5.028968,-0.986069,-5.275404,6.201365,-4.368027,0.695936,9.694713,6.311418,-8.194593,9.077849,-2.333518,5.614233,-3.382345,-0.797950,-7.969673,-3.437711,-2.903679,0.983049,-4.423140,0.241198,3.212401,4.536385,1.788154,-3.039855,4.586280,-1.700142,2.786093,1.829606,-7.353200,6.992060,2.232142,-1.937035,-8.694888,8.942574,-6.457598,0.306512,5.033646,-6.011319,7.493292,8.904909,6.833597,-5.880742,6.065003,-3.381707,7.203837,-4.270548,3.537115,3.773779,3.990024,3.778502,8.021290,1.685152,3.749114,2.110434,4.660044,2.769050,-1.734619,3.976619,-3.601573,1.819711,9.482629,-4.495071,-3.619298,-5.225560,-8.151488,8.881324,-2.543999,0.821905,3.330441,-2.319528,9.202306,3.539082,8.245083,2.852677,-8.255814,-9.640129,-9.553394,-5.092045,-6.304184,-9.113766,-4.643410,-2.052431,0.950149,0.014918,-9.739188,1.988262,9.252493,-7.485143,6.929787,-7.657192,-0.073765,-9.515798,-4.941965,-9.658836,6.931673,0.631741,-5.219978,0.295291,4.401540,-0.237230,-1.573757,1.754627,-3.813314,2.007325,7.714831,7.513784,-7.124140,2.255137,5.206643,0.896139,-1.784163,-6.371765,-9.318074,-0.800363,-9.770136,7.042424,-4.270602,5.261099,-0.556735,1.323758,-3.503833,-0.273761,-4.268175,9.114505,7.246800], dtype = "float32")#candidate|4883|(1008,)|const|float32
bop_4884 = relay.greater(uop_4877.astype('bool'), relay.reshape(const_4883.astype('bool'), relay.shape_of(uop_4877))) # shape=(1008,)
bop_4887 = relay.greater(uop_4879.astype('bool'), relay.reshape(const_4883.astype('bool'), relay.shape_of(uop_4879))) # shape=(1008,)
func_2213_call = mod.get_global_var('func_2213')
func_2215_call = mutated_mod.get_global_var('func_2215')
call_4894 = relay.TupleGetItem(func_2213_call(), 0)
call_4895 = relay.TupleGetItem(func_2215_call(), 0)
output = relay.Tuple([bop_4884,call_4894,])
output2 = relay.Tuple([bop_4887,call_4895,])
func_4904 = relay.Function([], output)
mod['func_4904'] = func_4904
mod = relay.transform.InferType()(mod)
output = func_4904()
func_4905 = relay.Function([], output)
mutated_mod['func_4905'] = func_4905
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4911 = relay.var("var_4911", dtype = "float32", shape = (16, 7, 2))#candidate|4911|(16, 7, 2)|var|float32
uop_4912 = relay.sin(var_4911.astype('float32')) # shape=(16, 7, 2)
func_2882_call = mod.get_global_var('func_2882')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_4914 = func_2882_call()
call_4915 = func_2882_call()
func_3115_call = mod.get_global_var('func_3115')
func_3118_call = mutated_mod.get_global_var('func_3118')
const_4925 = relay.const([[6.671632,-7.113330,-4.107902,-2.210099,-4.983144,4.982772],[-1.334369,3.953693,-7.865171,7.694010,-8.389858,8.346106],[5.398165,-6.987214,-8.072812,0.625255,-1.006336,9.664997],[-0.313385,5.307720,6.981376,-3.724721,2.460784,-6.268488],[1.899480,9.063255,4.951101,4.629419,-4.046472,-5.774158],[6.572061,-8.954507,3.417504,-9.916299,9.172908,-0.382467],[-3.104614,-9.984806,5.585897,-3.607412,-6.706907,-8.016018],[-3.270873,-6.635155,8.213233,8.748163,3.816781,-8.686948],[8.734858,-7.383443,-7.716060,1.195317,1.302540,-9.369128],[6.752762,3.631464,1.048793,0.218807,6.562395,-6.976803],[-6.643927,7.359325,2.316665,2.716173,-7.754166,1.924282],[-9.087249,-8.432928,-7.906130,-2.839161,8.173815,4.463662],[7.925070,-0.112414,3.488808,0.730799,-3.064821,6.130245],[-5.147710,0.760778,-0.414244,-6.386045,3.136793,-8.930740],[1.811129,1.538409,3.722933,6.952523,4.389700,2.316717],[-6.572310,9.339812,-8.919557,-2.797317,2.660455,6.391529],[-1.748671,-0.984055,-6.134098,6.537767,-9.355226,-6.353155],[-1.556404,-9.616686,3.503354,-7.216084,2.787025,2.540137],[-9.671949,-1.935262,0.781730,3.738331,2.765836,2.261011],[-4.033882,-0.812460,-8.311682,-3.389048,-0.320537,-9.583705],[9.337913,-8.625367,-3.160232,-4.297439,8.290140,-5.403404],[-4.233646,6.917271,-9.273518,-2.964153,2.415795,0.715805],[4.374230,-2.116663,-0.916765,-2.111120,9.016132,-6.561068],[-2.798808,-7.090276,-4.755562,-2.563441,-5.855617,-9.767846],[-0.755229,-7.473454,3.176272,9.865474,1.489231,2.498973],[4.889866,9.966376,-0.230990,-5.065884,-0.841508,-7.580596],[-2.681005,-0.368745,-6.327269,0.399065,1.654268,7.109267],[1.355524,0.823627,-9.763328,-9.557668,-9.969162,0.206356],[-3.161037,9.646846,-4.129876,6.935913,-9.191348,-4.806362],[-7.647218,-7.547531,8.106886,1.044820,-9.748043,9.880708],[5.595585,-5.401970,-6.524405,-1.618366,-0.818926,2.315027],[0.732658,5.059572,-2.885289,0.944276,3.827361,-9.248363],[2.988250,5.431097,5.705522,-3.335791,-8.265054,-0.713085],[-6.199620,8.797591,2.915943,-8.075918,4.911343,-4.391421],[4.083231,3.057413,9.642146,1.768054,0.709999,7.771616]], dtype = "float64")#candidate|4925|(35, 6)|const|float64
call_4924 = relay.TupleGetItem(func_3115_call(relay.reshape(const_4925.astype('float64'), [15, 2, 7])), 0)
call_4926 = relay.TupleGetItem(func_3118_call(relay.reshape(const_4925.astype('float64'), [15, 2, 7])), 0)
bop_4941 = relay.less_equal(uop_4912.astype('bool'), relay.reshape(var_4911.astype('bool'), relay.shape_of(uop_4912))) # shape=(16, 7, 2)
bop_4956 = relay.logical_and(bop_4941.astype('bool'), relay.reshape(uop_4912.astype('bool'), relay.shape_of(bop_4941))) # shape=(16, 7, 2)
output = relay.Tuple([call_4914,call_4924,const_4925,bop_4956,])
output2 = relay.Tuple([call_4915,call_4926,const_4925,bop_4956,])
func_4961 = relay.Function([var_4911,], output)
mod['func_4961'] = func_4961
mod = relay.transform.InferType()(mod)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4962 = relay.var("var_4962", dtype = "float32", shape = (16, 7, 2))#candidate|4962|(16, 7, 2)|var|float32
func_4961_call = mutated_mod.get_global_var('func_4961')
call_4963 = func_4961_call(var_4962)
output = call_4963
func_4964 = relay.Function([var_4962], output)
mutated_mod['func_4964'] = func_4964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4342_call = mod.get_global_var('func_4342')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_4981 = func_4342_call()
call_4982 = func_4342_call()
uop_4988 = relay.asinh(call_4981.astype('float32')) # shape=(12, 12, 7)
uop_4990 = relay.asinh(call_4982.astype('float32')) # shape=(12, 12, 7)
output = relay.Tuple([uop_4988,])
output2 = relay.Tuple([uop_4990,])
func_5001 = relay.Function([], output)
mod['func_5001'] = func_5001
mod = relay.transform.InferType()(mod)
output = func_5001()
func_5002 = relay.Function([], output)
mutated_mod['func_5002'] = func_5002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3681_call = mod.get_global_var('func_3681')
func_3683_call = mutated_mod.get_global_var('func_3683')
call_5043 = relay.TupleGetItem(func_3681_call(), 2)
call_5044 = relay.TupleGetItem(func_3683_call(), 2)
func_1352_call = mod.get_global_var('func_1352')
func_1355_call = mutated_mod.get_global_var('func_1355')
var_5064 = relay.var("var_5064", dtype = "float32", shape = (432,))#candidate|5064|(432,)|var|float32
var_5065 = relay.var("var_5065", dtype = "int32", shape = (126,))#candidate|5065|(126,)|var|int32
call_5063 = relay.TupleGetItem(func_1352_call(relay.reshape(var_5064.astype('float32'), [9, 16, 3]), relay.reshape(var_5065.astype('int32'), [126,]), ), 2)
call_5066 = relay.TupleGetItem(func_1355_call(relay.reshape(var_5064.astype('float32'), [9, 16, 3]), relay.reshape(var_5065.astype('int32'), [126,]), ), 2)
output = relay.Tuple([call_5043,call_5063,var_5064,var_5065,])
output2 = relay.Tuple([call_5044,call_5066,var_5064,var_5065,])
func_5088 = relay.Function([var_5064,var_5065,], output)
mod['func_5088'] = func_5088
mod = relay.transform.InferType()(mod)
mutated_mod['func_5088'] = func_5088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5088_call = mutated_mod.get_global_var('func_5088')
var_5090 = relay.var("var_5090", dtype = "float32", shape = (432,))#candidate|5090|(432,)|var|float32
var_5091 = relay.var("var_5091", dtype = "int32", shape = (126,))#candidate|5091|(126,)|var|int32
call_5089 = func_5088_call(var_5090,var_5091,)
output = call_5089
func_5092 = relay.Function([var_5090,var_5091,], output)
mutated_mod['func_5092'] = func_5092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3578_call = mod.get_global_var('func_3578')
func_3579_call = mutated_mod.get_global_var('func_3579')
call_5098 = func_3578_call()
call_5099 = func_3578_call()
output = call_5098
output2 = call_5099
func_5104 = relay.Function([], output)
mod['func_5104'] = func_5104
mod = relay.transform.InferType()(mod)
mutated_mod['func_5104'] = func_5104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5104_call = mutated_mod.get_global_var('func_5104')
call_5105 = func_5104_call()
output = call_5105
func_5106 = relay.Function([], output)
mutated_mod['func_5106'] = func_5106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4904_call = mod.get_global_var('func_4904')
func_4905_call = mutated_mod.get_global_var('func_4905')
call_5110 = relay.TupleGetItem(func_4904_call(), 1)
call_5111 = relay.TupleGetItem(func_4905_call(), 1)
output = call_5110
output2 = call_5111
func_5112 = relay.Function([], output)
mod['func_5112'] = func_5112
mod = relay.transform.InferType()(mod)
mutated_mod['func_5112'] = func_5112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5112_call = mutated_mod.get_global_var('func_5112')
call_5113 = func_5112_call()
output = call_5113
func_5114 = relay.Function([], output)
mutated_mod['func_5114'] = func_5114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5125 = relay.var("var_5125", dtype = "int64", shape = (1, 3, 16))#candidate|5125|(1, 3, 16)|var|int64
var_5126 = relay.var("var_5126", dtype = "int64", shape = (9, 3, 16))#candidate|5126|(9, 3, 16)|var|int64
bop_5127 = relay.add(var_5125.astype('int64'), var_5126.astype('int64')) # shape=(9, 3, 16)
func_4391_call = mod.get_global_var('func_4391')
func_4394_call = mutated_mod.get_global_var('func_4394')
var_5133 = relay.var("var_5133", dtype = "float64", shape = (1008,))#candidate|5133|(1008,)|var|float64
call_5132 = func_4391_call(relay.reshape(var_5133.astype('float64'), [12, 12, 7]))
call_5134 = func_4391_call(relay.reshape(var_5133.astype('float64'), [12, 12, 7]))
bop_5144 = relay.logical_or(var_5126.astype('bool'), relay.reshape(bop_5127.astype('bool'), relay.shape_of(var_5126))) # shape=(9, 3, 16)
bop_5152 = relay.add(var_5133.astype('uint8'), relay.reshape(call_5132.astype('uint8'), relay.shape_of(var_5133))) # shape=(1008,)
bop_5155 = relay.add(var_5133.astype('uint8'), relay.reshape(call_5134.astype('uint8'), relay.shape_of(var_5133))) # shape=(1008,)
const_5156 = relay.const([[[2,1,-6,7,5,-4,5,3,6,-2,10,3,1,5,-4,-3],[6,10,-7,1,-8,-8,-4,-8,3,-7,5,-8,1,6,4,6],[3,4,-2,-4,10,3,3,4,-1,-8,4,5,-1,-5,-10,7]],[[-4,5,-7,-8,1,1,-5,1,-8,4,-6,9,2,2,-2,7],[-9,-4,1,3,3,9,1,-6,10,-10,1,-4,1,6,7,1],[-8,-2,7,5,1,10,4,10,-7,2,10,-2,-4,-6,4,6]],[[-2,-2,-6,-9,-9,-9,-2,-8,-1,-9,-8,4,1,-2,-9,6],[-9,-8,-5,3,5,-8,-3,8,-9,-7,-7,-9,-10,3,1,1],[-10,-4,8,-9,-1,10,5,10,-4,-1,5,-1,-2,6,-4,3]],[[8,8,-7,6,4,-4,5,-3,8,-2,-5,-1,7,-10,6,6],[-1,9,1,-5,-3,-4,-2,7,-4,-4,4,-5,5,-4,9,5],[2,9,9,-8,3,-3,2,5,-1,-2,6,-7,-3,10,-9,-1]],[[8,6,-3,2,-8,-3,6,-6,-8,-1,-8,-5,-9,4,-1,3],[-6,-9,-5,7,5,-6,1,-8,-2,5,-9,-4,5,-10,-4,6],[-2,-9,5,10,7,10,10,6,1,4,2,-10,-6,3,-3,-8]],[[-1,2,4,-7,10,8,7,1,-5,-8,5,-4,-8,10,4,-4],[6,5,10,8,9,-1,10,-4,9,2,10,4,2,9,2,5],[1,-8,9,-2,-2,5,-5,8,3,-7,-7,10,4,7,3,6]],[[9,-7,-7,-7,2,-4,-2,-2,-6,7,9,-3,7,1,-2,-7],[8,-9,5,-8,9,5,-6,-8,5,6,-3,6,-10,3,5,-3],[2,-10,2,-3,1,4,-4,-10,8,-2,4,2,-9,8,-4,7]],[[-6,4,-8,-9,-6,8,7,-10,3,-5,-4,-3,-3,6,-3,-5],[3,-7,6,-10,10,4,-6,-2,8,8,-6,6,-3,9,9,-4],[-1,1,-6,-10,1,-2,10,-5,-1,4,-7,9,5,7,9,-4]],[[2,-8,10,-5,-3,7,-2,4,7,-3,8,-6,9,7,-5,-10],[8,-7,7,-7,-10,-6,9,8,-9,2,-4,-10,-2,-2,-8,5],[-10,4,6,-8,6,-1,-5,10,-1,-1,1,-7,-10,1,9,4]]], dtype = "int64")#candidate|5156|(9, 3, 16)|const|int64
bop_5157 = relay.bitwise_xor(bop_5127.astype('int32'), relay.reshape(const_5156.astype('int32'), relay.shape_of(bop_5127))) # shape=(9, 3, 16)
output = relay.Tuple([bop_5144,bop_5152,bop_5157,])
output2 = relay.Tuple([bop_5144,bop_5155,bop_5157,])
func_5162 = relay.Function([var_5125,var_5126,var_5133,], output)
mod['func_5162'] = func_5162
mod = relay.transform.InferType()(mod)
mutated_mod['func_5162'] = func_5162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5162_call = mutated_mod.get_global_var('func_5162')
var_5164 = relay.var("var_5164", dtype = "int64", shape = (1, 3, 16))#candidate|5164|(1, 3, 16)|var|int64
var_5165 = relay.var("var_5165", dtype = "int64", shape = (9, 3, 16))#candidate|5165|(9, 3, 16)|var|int64
var_5166 = relay.var("var_5166", dtype = "float64", shape = (1008,))#candidate|5166|(1008,)|var|float64
call_5163 = func_5162_call(var_5164,var_5165,var_5166,)
output = call_5163
func_5167 = relay.Function([var_5164,var_5165,var_5166,], output)
mutated_mod['func_5167'] = func_5167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3161_call = mod.get_global_var('func_3161')
func_3163_call = mutated_mod.get_global_var('func_3163')
call_5198 = relay.TupleGetItem(func_3161_call(), 0)
call_5199 = relay.TupleGetItem(func_3163_call(), 0)
uop_5202 = relay.asinh(call_5198.astype('float64')) # shape=(96, 1)
uop_5204 = relay.asinh(call_5199.astype('float64')) # shape=(96, 1)
func_3578_call = mod.get_global_var('func_3578')
func_3579_call = mutated_mod.get_global_var('func_3579')
call_5216 = func_3578_call()
call_5217 = func_3578_call()
bop_5226 = relay.greater(uop_5202.astype('bool'), relay.reshape(call_5198.astype('bool'), relay.shape_of(uop_5202))) # shape=(96, 1)
bop_5229 = relay.greater(uop_5204.astype('bool'), relay.reshape(call_5199.astype('bool'), relay.shape_of(uop_5204))) # shape=(96, 1)
func_4268_call = mod.get_global_var('func_4268')
func_4271_call = mutated_mod.get_global_var('func_4271')
const_5242 = relay.const([[-1],[9],[-8],[5],[2],[-10],[10],[5],[10],[7],[-3],[-1],[-2],[-8],[6],[-3],[8],[-10],[-5],[-2],[6],[9],[-5],[-9],[-6],[-7],[7],[-1],[-6],[10],[-10],[9],[-7],[6],[-4],[10],[-10],[6],[-3],[-10],[-5],[-9],[2],[1],[-2],[10],[-8],[-10],[9],[-8],[4],[-3],[-8],[10],[5],[-2],[7],[-5],[3],[9],[-1],[-5],[-9],[3],[-3],[-9],[2],[1],[-2],[-1],[3],[9],[5],[10],[-2],[-3],[-7],[9],[5],[6],[-4],[5],[8],[5],[-9],[6],[4],[-3],[-9],[-8],[2],[-1],[10],[-7],[-3],[-3],[7],[-4],[3],[4],[10],[7],[5],[-2],[3],[-5],[-1],[-3],[10],[6],[-2],[-2],[-6],[-7],[-10],[5],[3],[3],[-10],[-4],[6],[7],[8],[6],[10],[1],[2],[3],[2],[9],[1],[1],[3],[-3],[10],[7],[7],[-3],[2],[4],[3],[5],[1],[-3],[10],[-6],[-5],[-6],[-4],[5],[-6],[-1],[-4],[7],[4],[-9],[-9],[2],[6],[4],[9],[-8],[8],[5],[3],[-5],[10],[-2],[-8],[2],[2],[-9],[-10],[2],[6],[10],[7],[-10],[-2],[-6],[-6],[-3],[-7],[-3],[-6],[9],[8],[9],[-10],[-2],[7],[4],[1],[-9],[-10],[1],[-6],[-2],[-9],[-7],[2],[3],[7],[10],[2],[-4],[5],[5],[3],[-3],[6],[8],[-8],[4],[7],[-4],[-9],[-9],[-8],[-4],[10],[-1],[7],[4],[-7],[10],[9],[-5],[10],[6],[-1],[4],[-5],[8],[3],[-6],[-9],[9],[3],[3],[-8],[-5],[-3],[-6],[10],[-8],[-10],[4],[-7],[-1],[-2],[3],[-3],[7],[-4],[8],[-5],[1],[-1],[-1],[-8],[-5],[1],[-8],[-10],[9],[7],[5],[-4],[8],[7],[2],[-6],[10],[-1],[-2],[9],[-9],[-5],[-9],[7],[10],[1],[6],[10],[-3],[-9],[-8],[7],[4],[-8],[9],[4],[-10],[-9],[5],[-8],[-10],[2],[2],[1],[8],[-2],[6],[-6],[-9],[9],[-4],[10],[-3],[2],[2],[4],[-8],[-9],[8],[-8],[1],[3],[-9],[-10],[-5],[-8],[3],[10],[4],[-7],[-3],[2],[7],[2],[3],[-2],[-1],[-2],[5],[-1],[-2],[-9],[7],[-4],[-3],[-1],[9],[-6],[5],[4],[9],[4],[2],[-2],[-9],[-9],[-2],[-9],[-8],[-3],[-1],[-5],[-8],[-9],[-2],[-4],[-10],[1],[-6],[2],[6],[8],[8],[8],[-2],[4],[7],[-6],[-4],[-9],[9],[-7],[2],[4],[3],[-3],[5],[-6],[3],[-8],[-8],[8],[6],[10],[8],[-4],[5],[-9],[-1],[6],[7],[10],[5],[7],[-3],[10],[-9],[-5],[-2],[-5],[-8],[-9],[-2],[1],[1],[7],[9],[10],[-5],[-9],[-3],[-10],[-9],[7],[3],[4],[-5],[-4],[3],[-2],[5],[2],[7],[7],[10],[2],[8],[6],[-6],[9],[-9],[1],[-7],[-10],[-2],[-7],[-10],[-10],[-1],[-10],[-4],[-6],[2],[-10],[-7],[10],[-3],[9],[-7],[4],[-9],[-6],[-8],[-7],[7],[1],[8],[4],[1],[2],[6]], dtype = "uint16")#candidate|5242|(468, 1)|const|uint16
const_5243 = relay.const([-8.898997,8.695764,-5.432167,6.754085,0.045216,-1.399804,5.276067,2.675854,1.735934,-6.495375,8.660225,-3.327211,0.475267,4.599266,3.254775,-2.869331,8.341430,-2.960450,-0.114273,-1.328730,-5.061434,9.063730,5.080424,-7.005187,8.673060,-6.571695,8.450974,-1.051075,9.148186,9.352552,8.627681,-5.805864,-8.084324,-7.334218,-0.276395,-4.967458,0.234666,-9.310302,-4.464272,-7.411363,-5.889185,-0.104155,4.053240,-3.621938,0.764299,-7.954428,9.061168,4.693897,1.539841,-4.226051,3.422909,-0.016993,-6.499378,4.823338,6.637045,-6.547051,-1.361992,1.782948,0.256382,-4.659104,-7.840223,4.240486,-7.251046,8.882656,8.767444,5.600278,-4.933362,7.542718,3.580846,5.558073,-0.807800,-8.558692,6.465231,0.181160,2.294677,8.199300,-4.156207,-5.797709,0.507537,-2.635713,2.536902,8.870094,0.111297,2.560982,9.052229,0.427751,-6.179928,5.772232,-2.497412,3.640510,-0.108372,1.063271,6.223535,3.809961,4.921918,5.299314,-9.987100,-8.206273,-2.138777,-6.126182,-3.327406,6.715076,2.589493,-6.137592,4.557610,8.705340,-5.274664,-1.547449,-9.317896,2.085647,4.236128,5.060855,7.341850,0.885907,9.197061,-4.472931,-6.934601,-7.308225,-6.582469,8.649858,-0.912352,7.844072,9.916643,8.967112,-4.962694,5.362813,4.373210,0.914638,-9.506959,-8.799514,-0.291576,3.896688,4.726060,-2.882753,3.459622,9.224025,-2.994711,-8.566813,9.638689,-3.437907,-2.986039,3.848790,-6.777749,3.011872,-0.195605,-2.502592,-9.705367,6.669076,4.812072,8.662010,6.632486,3.979825,6.800953,9.725248,3.839130,-2.922312,8.701729,0.383556,-8.573341,-1.541836,4.504351,5.940678,-9.080916,7.909317,-9.241427,-4.178252,5.878809,-7.773501,-0.955727,3.894235,4.497135,3.103597,-2.995816,-2.828637,0.882198,8.174756,6.771851,-9.378886,3.613378,1.106361,-2.609642,8.080717,1.302333,0.990781,6.557764,9.721861,-9.831377,0.133967,-2.597158,-2.779098,-1.474534,-8.978198,-2.618237,2.855200,-0.668896,-0.595133,9.014883,-6.288618,2.623521,-7.669570,1.751407,7.920903,-6.175589,-1.894165,-6.951212,5.911258,-6.189553,-1.095453,-9.883869,-8.486587,-0.977111,-2.316564,-0.365341,7.329655,-2.328368,-6.894145,4.320701,2.263873,-4.097188,-3.741319,-1.057965,7.819936,5.723032,-5.520486,2.655474,-1.910380,5.055807,3.967748,-7.456141,5.330621,-5.188195,-6.705384,1.417106,-6.739098,2.988340,-7.516721,-5.345731,-4.606593,1.367597,3.140079,0.148248,-5.284805,-5.760536,-0.787579,-4.304962,0.845621,4.568570,7.114348,-4.777728,-6.420521,-0.301725,7.041122,-7.393248,3.303609,-3.114074,-1.083362,-8.210432,-4.395058,3.365808,2.570044,-5.244750,-9.785540,-9.166042,-0.558121,7.238198,-1.330667,1.077597,-4.914955,3.374662,9.041266,3.083225,0.665778,9.996425,-7.376825,-1.775342,-1.799828,0.885152,-9.116587,-9.257386,-7.280550,9.138886,-9.544233,-5.700679,-8.494119,-6.338049,-2.942676,-6.419812,0.175465,7.622475,-9.242200,-5.432171,2.631514,6.622312,2.257038,-5.793281,-3.734677,8.733591,2.942537,1.456678,6.345579,1.511996,7.618786,-4.985334,3.391194,1.198620,6.853433,4.416035,3.140398,5.095318,-3.983592,-3.058484,0.018815,5.700556,6.317292,0.896382,-9.169070,-9.806887,-2.284713,1.608665,1.508847,3.207617,-1.503406,1.544822,2.957714,-8.383530,-6.778902,-8.715488,-6.337588,-3.552151,0.766939,8.272834,6.151991,4.828363,-6.509872,2.716475,8.508863,-2.832038,1.973149,6.833939,-9.109704,8.103912,-9.412752,2.670340,7.727807,2.510597,9.947869,4.391877,-8.495808,-8.779728,5.235252,-0.162757,-6.416486,-3.802137,-8.608646,-7.999878,1.508546,-1.370227,-5.611080,8.763479,0.906470,-2.057430,6.808579,4.683112,-0.059226,-1.053094,-5.817700,5.134482,9.901260,-1.121421,0.441065,5.466644,-7.583678,0.261832,5.062546,1.989501,0.433692,4.578751,1.380030,-2.491976,-0.915170,6.287559,-7.385857,0.011987,-1.569111,4.048792,-0.711531,-7.860072,-8.101845,6.804585,-3.709772,5.522565,-4.561434,-9.564498,7.165947,-4.200043,3.729021,-1.853816,-8.506266,-7.229228,-3.101276,-8.541950,-7.349931,1.773673,-1.068518,-4.453520,7.601337,-3.220600,-7.419896,0.009517,-4.699858,0.567423,7.956637,5.013627,1.897589,-0.013181,6.856509,-7.375260,-2.124669,7.419586,3.187813], dtype = "float32")#candidate|5243|(420,)|const|float32
call_5241 = relay.TupleGetItem(func_4268_call(relay.reshape(const_5242.astype('uint16'), [13, 4, 9]), relay.reshape(const_5243.astype('float32'), [420,]), ), 0)
call_5244 = relay.TupleGetItem(func_4271_call(relay.reshape(const_5242.astype('uint16'), [13, 4, 9]), relay.reshape(const_5243.astype('float32'), [420,]), ), 0)
bop_5252 = relay.left_shift(const_5242.astype('int16'), relay.reshape(call_5241.astype('int16'), relay.shape_of(const_5242))) # shape=(468, 1)
bop_5255 = relay.left_shift(const_5242.astype('int16'), relay.reshape(call_5244.astype('int16'), relay.shape_of(const_5242))) # shape=(468, 1)
output = relay.Tuple([call_5216,bop_5226,const_5243,bop_5252,])
output2 = relay.Tuple([call_5217,bop_5229,const_5243,bop_5255,])
func_5257 = relay.Function([], output)
mod['func_5257'] = func_5257
mod = relay.transform.InferType()(mod)
mutated_mod['func_5257'] = func_5257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5257_call = mutated_mod.get_global_var('func_5257')
call_5258 = func_5257_call()
output = call_5258
func_5259 = relay.Function([], output)
mutated_mod['func_5259'] = func_5259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3800_call = mod.get_global_var('func_3800')
func_3802_call = mutated_mod.get_global_var('func_3802')
call_5268 = func_3800_call()
call_5269 = func_3800_call()
func_4961_call = mod.get_global_var('func_4961')
func_4964_call = mutated_mod.get_global_var('func_4964')
var_5276 = relay.var("var_5276", dtype = "float32", shape = (224,))#candidate|5276|(224,)|var|float32
call_5275 = relay.TupleGetItem(func_4961_call(relay.reshape(var_5276.astype('float32'), [16, 7, 2])), 0)
call_5277 = relay.TupleGetItem(func_4964_call(relay.reshape(var_5276.astype('float32'), [16, 7, 2])), 0)
func_4572_call = mod.get_global_var('func_4572')
func_4574_call = mutated_mod.get_global_var('func_4574')
call_5280 = relay.TupleGetItem(func_4572_call(), 0)
call_5281 = relay.TupleGetItem(func_4574_call(), 0)
func_4904_call = mod.get_global_var('func_4904')
func_4905_call = mutated_mod.get_global_var('func_4905')
call_5293 = relay.TupleGetItem(func_4904_call(), 0)
call_5294 = relay.TupleGetItem(func_4905_call(), 0)
func_2605_call = mod.get_global_var('func_2605')
func_2607_call = mutated_mod.get_global_var('func_2607')
const_5296 = relay.const([4.700444,-5.954157,-7.060227,-6.423007,-0.727939,8.732368,-8.174643,-3.631029,5.513203,-0.499606,-0.090920,-8.087737,-2.547295,-4.708509,4.629191,-5.187671,7.625942,2.140401,4.135648,-0.412794,-1.099005,-6.312387,-2.699183,5.460735,1.171347,0.810306,-4.426091,-5.078105,-0.507910,-6.426058,-2.150248,-3.923103,0.018707,7.522729,9.717997,-7.695168,-2.064575,-2.247143,7.221358,-5.166975,-9.059615,-4.884003,-2.144269,6.760727,-8.432239,-6.791124,3.035982,-7.224890,3.502110,4.696398,-5.375700,-4.527025,8.717221,0.836163,-4.786595,6.848161,1.453346,0.732325,-2.690680,7.109521,-2.719923,-2.291725,-4.693740,9.809179,-0.992139,7.869571,-8.903213,0.766872,-9.409079,3.319014,6.116627,2.632160,-5.274645,-1.350330,-2.092284,1.240254,5.394001,-6.029386,8.580738,3.266227,-1.115577,-7.779140,-2.000245,-2.671459,-7.289087,3.948283,-4.375526,9.302288,0.773720,-1.720350,5.672848,7.726638,8.809097,-8.874862,8.587718,-6.861558,-6.613661,-6.525420,6.961133,-7.970201,-9.617095,8.975440,-2.980751,-0.614674,-7.466354,6.035204,-9.684635,-4.869450,-3.718123,-4.463878,9.546732,-7.360131,8.799796,-3.662450,3.701638,4.110947,0.506049,6.661503,7.172120,3.258112,-8.260224,7.497872,3.615628,-0.752969,-3.317008,3.747210,2.883784,-8.682443,7.345961,4.957147,8.121301,-9.447137,7.809076,-7.719589,1.737110,-8.377190,7.533407,0.455616,-0.057305,-3.781361,-0.823598,-4.313833,4.957264,6.636976,0.304066,-4.831778,1.093542,0.829359,-4.204699,5.837615,-9.527288,0.932641,6.024681,-5.544894,-5.770524,-0.394509,2.789670,-7.205103,9.017409,1.004756,5.129604,6.896780,-2.921412,4.927988,5.537854,3.106494,3.267749,8.758412,3.498278,-4.275763,-6.014577,-7.363052,7.430219,5.839218,-1.339814,1.546217,-7.796048,-6.140235,-3.282476,4.861415,-8.930451,3.137246,6.519293,-4.071036,-6.476818,-2.366387,-2.435491,-7.787059,7.494678,-7.983718,-0.375041,9.121702,6.763156,-0.076217,-5.877409,0.664380,-7.326618,-4.056498,7.317430,-2.755544,8.282189,-2.460883,6.661739,9.660043,-2.135503,3.176241,5.882185,7.530212,-3.598598,-0.105561,7.740451,-6.937304,-9.194245,6.070081,1.397921,-8.384639,-7.605982,-4.978920,6.872859,4.318274,-6.631090,3.402228,2.521654,-6.569940,-6.845551,-7.038908,-0.204830,7.070683,1.528031,-7.498350,-9.476523,7.160273,4.930420,-9.375132,0.820836,3.720383,-6.513845,-9.475074,0.114390,-6.052503,1.627095,-7.839586,2.702765,8.201240,-5.949165,0.530436,-6.377839,-3.681049,8.767374,-9.433996,-8.169955,-7.990824,-7.982853,-6.990314,7.422604,9.525279,-8.187080,-2.041785,2.719183,-1.903597,2.083182,-0.647414,0.716991,2.867189,-6.111727,6.067101,6.637638,6.116211,-5.741313,-3.634238,-4.389342,9.507490,4.633608,-2.958457,2.314339,-1.052502,4.662529,-5.929526,3.055753,2.111036,5.378923,-2.219021,-3.625809,2.071848,-3.314886,-4.495733,0.528865,1.526786,6.565411,-5.596616,-6.789210,2.368268,0.034922,-3.674078,5.830946,-8.810489,6.508970,-2.046381,5.975430,-6.160843,5.937975,-9.922662,-4.266151,6.119689,-2.315214,-6.917214,-7.263912,-2.300608,4.859347,7.438698,-1.803633,-0.458760,-4.080267,0.439495,-7.468322,4.389374,-9.267782,-5.247552,7.154498,-6.705088,8.735012,6.878216,-5.705194,-5.133341,-7.549358,-8.185517,3.485422,-6.859771,2.959213,0.972605,-9.368073,0.935329,9.148506,0.028707,5.817883,-7.244030,9.118185,5.562967,3.660169,5.511305,0.807419,-6.004820,-5.332906,-9.290378,-0.317540,3.717051,7.204432,7.137564,7.099548,6.918600,-8.119742,8.245570,1.670632,6.973564,-1.983108,3.662353,-3.244595,6.726024,-7.011372,9.473233,9.044721,4.257197,9.086166,9.903553,-7.530444,-5.781060,-7.900613,-0.961433,-0.028416,-3.660870,-8.135670,-3.816120,4.503302,-5.707475,8.882581,-5.685406,-1.821559,9.734925,-1.792897,-1.899912,-8.681551,5.334921,6.296192,-5.746075,9.533697,-0.200919,-5.688502,0.748562,-4.478185,-3.004925,5.496159,8.985842,-3.359270,2.848511,7.819604,6.679458,-8.392099,5.175801,-2.955928,0.480354,-0.250058,-3.343430,-7.345529,6.653078,2.138736,2.510055,-7.821006,-5.718030,1.480087,-2.452720,-0.004795,-6.666935,-8.365545,-6.731206,-7.252662,3.990205,0.513715,8.324451,4.096917,2.489272,-0.256369,8.085957,4.599901,-0.670537,6.599050,2.342289,-4.583775,5.765687,9.105870,-9.431912,4.197836,5.562252,4.504964,2.938306,0.044183,9.095570,2.304719,-7.159654,-1.542583,1.809832,0.620230,6.364272,2.470223,6.199674,-1.945519,-5.601150,9.884390,9.922910,-5.651549,7.891427,8.399040,-4.057277,5.090822,8.410656,4.242474,2.506414,4.439623,-1.185791,1.830453,-0.569648,1.177418,-1.890753,-5.509989,0.774522,-4.368125,-5.148801,5.737008,-3.226651,3.680315,9.428439,-4.211087,-2.921923,1.603036,-0.903591,-0.475563,3.615520,5.162058,-9.620256,8.463206,2.690796,-6.673239,0.464820,-1.613497,-9.025996,1.404382,-0.522961,-5.174644,6.398604,9.537872,0.283036,-5.949501,-5.658966,-7.906250,4.116630,-6.480730,8.905511,-5.396942,3.227378,-3.853918,1.304980,1.072327,2.177300,-6.724046,4.125687,8.367583,8.872640,6.945244,6.373282,-4.451189,0.303225,3.918448,4.852984,6.065423,-7.783111,-1.055339,7.903931,3.208903,3.575895,-6.199424,-5.384068,9.417208,1.810205,8.761824,-8.575434,-5.012953,-5.741680,-2.440615,4.863364,-5.722181,3.596206,4.843625,-3.035934,-4.247885,-8.587726,3.831309,-3.543974,-7.118129,6.849566,-7.586295,5.354866,-7.267178,5.009296,2.549530,-7.079468,-9.675086,-6.601032,6.740981,5.689378,0.477874,-0.270867,-7.188310,9.225519,-9.488972,-8.116899,8.460353,7.374722,8.712977,-8.835439,-6.725734,2.121162,9.639665,-5.411869,-5.704497,-1.524185,-7.616966,-4.838341,5.612533,4.613327,3.193507,-3.452505,-9.633296,-1.205103,-5.153181,-2.653103,2.075051,-4.740045,-0.040494,1.329275,-7.041042,-8.054484,-7.613781,5.614787,-5.428845,-4.659471,-2.545529,-1.181769,-6.195180,-4.438275,-1.032926,8.955043,-1.305349,-5.206702,1.180115,-5.924535,5.073874,-6.531865,5.788764,7.275909,-3.838530,5.759337,-8.508770,6.008901,-2.971925,-6.253397,7.639525,0.464086,4.738641,-6.733918,1.128992,-5.767850,6.534939,7.483179,-1.327555,-8.253625,-2.553913,1.827520,-2.556518,2.468105,-5.039138,9.868654,-5.035436,-3.189625,-0.410044,-3.291227,3.623925,-1.996873,3.241005,1.041047,-1.914507,-2.246863,-0.852547,1.829617,9.835219,0.430724,-3.996456,5.500194,7.420723,-8.510827,-4.718126,-7.188238,6.524030,-4.113388,-3.289168,-4.692677,1.792872,8.657345,-8.406509,-7.431930,1.606148,-9.109746,-4.882873,-6.105425,7.950863,7.638583,0.778865,5.346208,-5.397839,1.768110,8.019502,0.414503,3.019662,-4.875791,-4.138888,1.501422,9.839485,8.159996,5.050758,7.794683,8.725009,-5.366006,-7.782845,8.011907,2.065823,7.040931,4.239804,4.659967,1.317003,-9.344538,7.263712,-2.922216,0.888768,-8.662295,1.235095,9.133364,6.691806,-0.407861,8.801635,-0.288645,-1.916965,-5.160341,2.187708,-6.541083,6.411609], dtype = "float64")#candidate|5296|(693,)|const|float64
call_5295 = relay.TupleGetItem(func_2605_call(relay.reshape(const_5296.astype('float64'), [11, 9, 7])), 0)
call_5297 = relay.TupleGetItem(func_2607_call(relay.reshape(const_5296.astype('float64'), [11, 9, 7])), 0)
func_4607_call = mod.get_global_var('func_4607')
func_4608_call = mutated_mod.get_global_var('func_4608')
call_5305 = relay.TupleGetItem(func_4607_call(), 0)
call_5306 = relay.TupleGetItem(func_4608_call(), 0)
bop_5315 = relay.add(const_5296.astype('uint64'), relay.reshape(call_5295.astype('uint64'), relay.shape_of(const_5296))) # shape=(693,)
bop_5318 = relay.add(const_5296.astype('uint64'), relay.reshape(call_5297.astype('uint64'), relay.shape_of(const_5296))) # shape=(693,)
func_3750_call = mod.get_global_var('func_3750')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_5321 = relay.TupleGetItem(func_3750_call(), 0)
call_5322 = relay.TupleGetItem(func_3752_call(), 0)
output = relay.Tuple([call_5268,call_5275,var_5276,call_5280,call_5293,call_5305,bop_5315,call_5321,])
output2 = relay.Tuple([call_5269,call_5277,var_5276,call_5281,call_5294,call_5306,bop_5318,call_5322,])
func_5336 = relay.Function([var_5276,], output)
mod['func_5336'] = func_5336
mod = relay.transform.InferType()(mod)
mutated_mod['func_5336'] = func_5336
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5337 = relay.var("var_5337", dtype = "float32", shape = (224,))#candidate|5337|(224,)|var|float32
func_5336_call = mutated_mod.get_global_var('func_5336')
call_5338 = func_5336_call(var_5337)
output = call_5338
func_5339 = relay.Function([var_5337], output)
mutated_mod['func_5339'] = func_5339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5257_call = mod.get_global_var('func_5257')
func_5259_call = mutated_mod.get_global_var('func_5259')
call_5364 = relay.TupleGetItem(func_5257_call(), 1)
call_5365 = relay.TupleGetItem(func_5259_call(), 1)
const_5368 = relay.const([[True,True,True,False,False,False,True,True],[False,True,False,False,True,False,True,True],[True,False,True,True,True,True,False,True],[False,False,True,True,False,True,True,True],[False,False,True,False,False,False,True,True],[True,True,True,True,False,False,False,True],[False,True,False,False,True,False,True,True],[False,True,False,True,False,True,False,False],[True,False,False,False,False,True,True,False],[True,False,True,True,False,True,False,False],[False,False,False,True,True,False,True,True],[True,True,False,True,True,True,True,False],[True,True,False,True,False,True,True,True],[True,False,False,True,True,False,False,False],[True,False,True,False,False,False,True,True],[False,False,False,True,True,True,True,False],[False,False,True,True,True,True,False,True],[True,True,False,True,True,False,True,False],[True,False,False,True,True,False,True,True],[False,True,False,True,True,True,True,True],[True,False,False,True,True,True,False,True],[False,False,False,True,True,True,False,False],[True,False,True,False,False,False,True,False],[False,True,True,True,True,False,False,False],[True,True,True,False,False,True,True,False],[False,True,True,True,False,True,True,False],[False,False,False,False,True,False,True,True],[True,False,False,False,True,False,True,False],[True,False,False,True,False,False,True,False],[True,True,True,False,False,False,False,False],[False,False,True,True,False,False,False,False],[False,False,False,True,True,True,True,False],[False,False,False,False,False,True,False,True],[False,True,True,True,True,True,True,True],[False,False,True,False,False,True,False,True],[False,True,False,True,False,False,True,False],[False,True,False,False,True,False,True,True],[True,True,False,False,False,False,False,False],[False,True,True,True,False,True,False,False],[False,False,True,True,False,True,True,False],[False,False,False,True,False,False,True,False],[True,True,False,True,True,False,False,False],[True,True,True,False,False,True,False,True],[True,False,False,False,True,True,False,True],[True,True,True,False,True,False,False,False],[True,False,True,True,True,True,True,False],[False,False,False,True,True,True,False,False],[True,False,False,False,True,True,True,True],[False,False,True,True,False,True,True,False],[True,False,True,False,False,False,True,False],[False,True,True,True,False,True,True,True],[True,False,True,True,True,True,False,True],[True,True,False,False,False,True,False,True],[True,True,False,True,True,True,False,True],[False,True,False,True,True,True,False,False],[True,False,True,False,True,True,True,False],[False,True,False,False,False,False,False,False],[True,False,True,False,True,True,True,True],[True,True,False,False,True,True,False,False],[True,False,True,False,True,False,False,False],[False,True,False,False,True,False,False,True],[False,False,True,True,True,True,True,False],[False,True,False,True,False,True,False,True],[True,True,True,False,True,False,False,True],[True,True,False,False,True,False,True,False],[False,True,True,False,False,False,False,False],[False,True,False,False,False,False,False,True],[True,True,True,False,True,False,False,False],[True,False,True,False,False,False,False,True],[True,False,True,True,False,True,False,False],[False,False,True,False,False,True,True,True],[False,True,True,False,True,True,False,False],[True,True,False,False,False,True,True,True],[True,False,True,True,True,True,False,False],[True,True,False,True,False,False,False,False],[True,True,False,False,True,True,False,False],[False,False,False,False,True,True,False,False],[True,True,False,True,False,False,True,True],[True,True,False,True,True,False,True,False],[True,False,False,False,True,False,True,True],[True,True,False,False,True,False,True,False],[True,True,True,True,True,False,False,False],[False,False,True,True,False,False,False,True],[False,False,False,True,True,True,True,False],[False,True,False,True,True,True,False,False],[False,True,True,True,False,True,True,False],[True,False,True,True,True,True,False,True],[False,False,True,True,True,False,True,False],[True,True,True,False,True,True,False,True],[True,True,True,True,False,False,True,True],[True,False,False,False,False,False,True,False],[True,False,True,False,False,False,False,True],[True,False,True,False,True,True,False,False],[False,True,True,False,True,False,True,False],[True,True,False,True,False,False,True,True],[False,False,True,True,False,False,False,True]], dtype = "bool")#candidate|5368|(96, 8)|const|bool
bop_5369 = relay.left_shift(call_5364.astype('int64'), const_5368.astype('int64')) # shape=(96, 8)
bop_5372 = relay.left_shift(call_5365.astype('int64'), const_5368.astype('int64')) # shape=(96, 8)
func_2401_call = mod.get_global_var('func_2401')
func_2404_call = mutated_mod.get_global_var('func_2404')
const_5377 = relay.const([[6,-5,-9,6,10,-7,-5,6,-2,-6,4,-2,8,6,7,-3,10,-7,-4,2,-2,1,-1,9,9,-6,3,-8,3,10,-5,-2,-2,5,-1,-2,-7,-2,9,4,7,2],[7,2,5,-7,-9,-7,-7,7,-9,-2,-1,9,-8,-9,-4,-6,1,8,-1,8,5,1,8,-1,-8,-5,9,-10,-8,1,-7,10,4,6,4,-7,9,-2,-5,-4,-8,-3],[-5,-4,-9,-5,-2,6,3,-3,-6,-8,8,4,7,-8,8,-1,-2,6,-10,8,5,9,-8,7,-3,-10,8,-6,-1,9,-6,4,5,-1,-10,8,5,-5,10,-6,8,-7],[10,-9,-8,2,-1,3,-6,-3,-3,4,-8,10,1,-4,4,3,-5,-6,-3,6,-7,-9,3,-1,-5,-4,-4,-3,-2,1,-6,-1,9,3,-10,-5,10,-9,-6,-1,5,-3],[2,1,-3,-10,-7,10,-10,7,4,6,5,-8,6,-3,-5,-8,-2,-10,1,4,3,-5,6,5,-3,-5,6,1,-5,3,-9,-8,9,-6,10,-10,3,-7,7,-3,3,-9],[3,3,4,-9,-6,-4,7,-5,1,9,9,4,-10,-6,-7,3,7,-10,-1,-4,10,-2,-9,3,10,-5,-9,-5,-8,-1,-10,-6,2,9,-7,-10,2,-3,9,-2,-7,8],[-8,5,7,-10,2,-5,-2,-8,7,5,10,-10,-3,7,-9,-7,9,-2,10,3,-10,6,1,2,-2,7,4,-10,-10,-8,-10,-6,9,-5,-2,10,-5,5,-10,5,-3,-1],[-8,5,-8,6,9,8,4,6,-2,-9,5,-4,-8,-5,1,-9,9,-8,-6,-6,8,3,-7,-9,7,5,-1,-7,8,-1,9,10,1,-6,2,-4,-6,-4,7,-10,-3,-6],[-6,5,-6,4,6,3,10,6,1,-4,-8,8,2,-2,6,9,-3,-7,3,-4,5,-6,-9,9,-4,-7,-1,-2,6,8,-3,2,-3,7,-2,5,-10,-4,-3,9,6,-4],[2,2,1,7,-6,2,-10,7,9,9,1,8,-6,5,-4,3,-6,-3,-2,9,-1,-1,-1,5,8,-9,7,7,6,-9,3,-6,4,4,-10,-8,-5,4,-7,5,-2,6],[-6,5,5,4,-6,4,2,10,2,-4,8,4,8,-3,-6,4,-2,-3,4,4,8,4,8,3,-3,-9,-7,-8,-2,7,-10,9,-9,10,10,5,-3,-7,4,-1,6,-10],[2,-8,-1,-4,6,-4,4,10,7,1,4,-1,9,-5,-3,-10,5,3,6,8,9,-9,-5,8,-6,-1,10,-9,5,5,-3,7,6,-5,-5,4,-4,-8,2,10,-6,10]], dtype = "int64")#candidate|5377|(12, 42)|const|int64
const_5378 = relay.const([6,5,10,-8,-7,6,7,-4,7,4,8,1,5,10,-5,4,-7,-5,-8,-5,-9,8,2,7,-1,-5,8,-6,-5,-8,-1,6,-5,4,-5,-10,-10,2,-2,3,3,-2,-4,-6,7,3,-8,6,9,-7,-1,-1,-7,4,6,-3,-5,-10,5,10,-9,10,2,-3,7,5,8,10,-3,-5,4,-7,-4,10,4,9,-4,3,4,9,7,-1,2,-10], dtype = "uint64")#candidate|5378|(84,)|const|uint64
call_5376 = relay.TupleGetItem(func_2401_call(relay.reshape(const_5377.astype('int64'), [504,]), relay.reshape(const_5378.astype('uint64'), [84,]), ), 1)
call_5379 = relay.TupleGetItem(func_2404_call(relay.reshape(const_5377.astype('int64'), [504,]), relay.reshape(const_5378.astype('uint64'), [84,]), ), 1)
output = relay.Tuple([bop_5369,call_5376,const_5377,const_5378,])
output2 = relay.Tuple([bop_5372,call_5379,const_5377,const_5378,])
func_5382 = relay.Function([], output)
mod['func_5382'] = func_5382
mod = relay.transform.InferType()(mod)
mutated_mod['func_5382'] = func_5382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5382_call = mutated_mod.get_global_var('func_5382')
call_5383 = func_5382_call()
output = call_5383
func_5384 = relay.Function([], output)
mutated_mod['func_5384'] = func_5384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4342_call = mod.get_global_var('func_4342')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_5415 = func_4342_call()
call_5416 = func_4342_call()
func_3142_call = mod.get_global_var('func_3142')
func_3145_call = mutated_mod.get_global_var('func_3145')
const_5418 = relay.const([-1.155031,-4.784443,-2.916867,8.665192,9.951439,-9.755867,-8.105241,1.424111,1.766768,1.601209,5.552892,8.334394,-7.499110,3.599916,-7.801580,-5.774318,9.209723,-7.169527,-3.622035,5.621311,-8.832286,-4.616715,-4.195574,2.150956,-7.166189,5.259154,-4.350747,-5.287417,-7.564301,-9.800448,-5.514768,0.851898,-3.696160,8.363383,0.630864,-4.834759,1.931276,-2.108887,0.186567,2.013991,-1.288634,2.544081,-0.653040,7.697549,5.741592,5.920535,0.460946,-6.403883,-8.396146,-9.690864,-6.555502,2.997938,-7.784192,4.710870,8.877760,2.236249,5.455389,-4.457009,6.189395,9.774224,9.531360,-8.605830,7.644226,-6.038016,6.285932,-3.827166,-2.572572,0.825215,7.881623,-6.410903,0.321172,9.798464,-4.930081,-4.281857,6.518072,0.494408,-1.713935,1.825444,-0.566786,9.184630,1.652363,2.076369,3.558530,-7.299470,0.243745,8.996137,-5.567474,-2.254007,-5.457733,-2.668262,-6.049350,9.141294,-0.897499,-0.522907,-4.056048,-7.370960,9.971555,2.304067,-2.127215,-2.573126,-1.031238,-8.998240,-2.458547,-1.943240,-6.067460,-5.081223,-4.846681,7.362680,3.690613,6.685535,-3.724984,5.150638,2.176928,-9.028944,-4.250765,9.784481,3.996963,5.184829,-9.601379,-3.280381,6.585079,1.937309,-9.514158,-7.236396,8.021457,-9.485652,4.297296,9.683795,-9.263574,-3.816400,-5.326180,-4.504051,7.134568,8.555381,1.786375,-3.061404,6.145348,-0.002348,7.486860,7.929513,-4.251485,-0.043836,3.877219,-4.294283,3.523445,-5.037403,-9.620343,9.608889,-8.827861,-2.780737,9.841298,-6.501278,-1.505707,-0.177654,0.426226,-9.525221,7.451581,2.541041,5.361905,0.467357,-5.002321,-9.323973,-7.539444,1.199076,7.347593,-2.945141,-4.055931,6.341764,8.754124,-4.315731,9.827593,-7.467723,4.660852,8.641241,5.738895,-9.066496,-5.665805,-1.832013,-4.031563,7.133055,2.765178,-4.109225,3.921059,3.547016,-8.184934,2.138131,-4.241194,-7.784498,-4.539381,-2.883671,-0.444543,7.761594,-3.460881,7.913182,6.136429,-2.313166,-1.732400,1.798007,-8.894613,-1.840622,-9.394207,-4.318452,1.285930,3.801184,-6.808113,4.681843,-6.721858,1.215886,3.945618,9.126020,8.816251,7.796541,9.475143,5.375764,7.352649,-0.992509,-3.678343,9.760803,2.309724,3.308180,-9.657567,0.514326,3.426774,1.806142,3.308803,-4.125877,-4.810917,5.591802,-0.464082,8.645447,-9.108118,3.248844,-3.588154,7.329191,3.551554,6.625978,6.420421,-6.348487,0.731820,7.596283,9.250322,-0.546500,-2.583565,5.550749,-0.787292,-7.919200,-7.932529,7.905535,-3.766059,-4.211363,9.246066,-5.124711,-9.724159,-6.275751,-4.555631,5.886425,0.718174,-1.641398,6.598650,-5.050032,-5.616688,-2.784408,-9.617570,-0.365497,-4.075309,1.214780,-1.928518,3.369195,-0.970930,8.401729,2.861886,-2.851308,-1.095900,-7.291516,-5.934001,1.977455,-8.694700,2.744646,-8.034262,4.067614,1.378674,-1.754817,-3.374302,-0.147122,3.668738,-8.792193,-7.925497,8.705077,4.452296,-4.242529,-1.411027,-3.946766,-6.471615,-5.093876,3.175362,0.824883,-8.783958,3.563181,0.649039,4.000952,7.628639,-2.368863,5.247804,-6.904574,7.147637,-3.063194,-0.896565,-5.881402,4.484052,4.135725,3.167728,7.089576,2.773874,-0.290756,-5.813394,8.708708,2.340917,-8.652280,-8.550891,6.974910,6.427556,4.098687,0.796025,-7.863034,-9.844060,5.376408,6.744177,0.885470,5.133868,7.137386,-9.580399,5.283807,-2.962683,-7.732160,-3.527110,3.603557,9.358726,-9.859821,-8.425700,6.735122,-8.385925,-8.786065,9.310675,-4.311353,-8.539733,7.920659,3.369461,-0.083710,-0.141945,-1.777576,9.519573,-5.161131,-6.162795,3.960756,-6.772281,-1.582029,7.826422,-7.184354,-1.800506,-1.219053,-0.849610,3.321981,-1.627352,-7.341992,-8.260666,-2.685295,-6.799016,9.625648,7.670280,2.110287,5.226029,-9.767619,6.179198,-7.350820,-6.648690,-1.403787,-9.528775,-2.834328,4.864691,2.255527,3.345320,8.597427,-1.340800,-5.288363,8.239401,7.109368,7.986072,-4.977242,-3.683995,4.164713,7.571805,-5.714969,8.389034,-9.512027,2.733129,6.468154,9.243816,-4.863199,9.892214,5.364609,-7.991676,3.947809,7.426935,-8.643755,-4.207593,-7.007290,1.893265,6.900750,6.442273,-0.561861,7.731568,7.922592,-3.044086,2.956893,-3.918376,8.757884,2.387840,0.601431,-8.886516,3.879898], dtype = "float32")#candidate|5418|(420,)|const|float32
call_5417 = func_3142_call(relay.reshape(const_5418.astype('float32'), [14, 3, 10]))
call_5419 = func_3142_call(relay.reshape(const_5418.astype('float32'), [14, 3, 10]))
func_4667_call = mod.get_global_var('func_4667')
func_4669_call = mutated_mod.get_global_var('func_4669')
call_5439 = relay.TupleGetItem(func_4667_call(), 0)
call_5440 = relay.TupleGetItem(func_4669_call(), 0)
uop_5441 = relay.rsqrt(call_5417.astype('float64')) # shape=(14, 3, 10)
uop_5443 = relay.rsqrt(call_5419.astype('float64')) # shape=(14, 3, 10)
output = relay.Tuple([call_5415,const_5418,call_5439,uop_5441,])
output2 = relay.Tuple([call_5416,const_5418,call_5440,uop_5443,])
func_5451 = relay.Function([], output)
mod['func_5451'] = func_5451
mod = relay.transform.InferType()(mod)
output = func_5451()
func_5452 = relay.Function([], output)
mutated_mod['func_5452'] = func_5452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5112_call = mod.get_global_var('func_5112')
func_5114_call = mutated_mod.get_global_var('func_5114')
call_5521 = func_5112_call()
call_5522 = func_5112_call()
func_4066_call = mod.get_global_var('func_4066')
func_4069_call = mutated_mod.get_global_var('func_4069')
var_5527 = relay.var("var_5527", dtype = "int32", shape = (1008,))#candidate|5527|(1008,)|var|int32
call_5526 = relay.TupleGetItem(func_4066_call(relay.reshape(var_5527.astype('int32'), [12, 12, 7])), 0)
call_5528 = relay.TupleGetItem(func_4069_call(relay.reshape(var_5527.astype('int32'), [12, 12, 7])), 0)
uop_5531 = relay.cosh(call_5526.astype('float32')) # shape=(12, 12, 7)
uop_5533 = relay.cosh(call_5528.astype('float32')) # shape=(12, 12, 7)
output = relay.Tuple([call_5521,var_5527,uop_5531,])
output2 = relay.Tuple([call_5522,var_5527,uop_5533,])
func_5541 = relay.Function([var_5527,], output)
mod['func_5541'] = func_5541
mod = relay.transform.InferType()(mod)
var_5542 = relay.var("var_5542", dtype = "int32", shape = (1008,))#candidate|5542|(1008,)|var|int32
output = func_5541(var_5542)
func_5543 = relay.Function([var_5542], output)
mutated_mod['func_5543'] = func_5543
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5561 = relay.var("var_5561", dtype = "int32", shape = (11, 5, 6))#candidate|5561|(11, 5, 6)|var|int32
var_5562 = relay.var("var_5562", dtype = "int32", shape = (11, 5, 6))#candidate|5562|(11, 5, 6)|var|int32
bop_5563 = relay.right_shift(var_5561.astype('int32'), relay.reshape(var_5562.astype('int32'), relay.shape_of(var_5561))) # shape=(11, 5, 6)
func_3142_call = mod.get_global_var('func_3142')
func_3145_call = mutated_mod.get_global_var('func_3145')
var_5571 = relay.var("var_5571", dtype = "float32", shape = (420, 1))#candidate|5571|(420, 1)|var|float32
call_5570 = func_3142_call(relay.reshape(var_5571.astype('float32'), [14, 3, 10]))
call_5572 = func_3142_call(relay.reshape(var_5571.astype('float32'), [14, 3, 10]))
output = relay.Tuple([bop_5563,call_5570,var_5571,])
output2 = relay.Tuple([bop_5563,call_5572,var_5571,])
func_5578 = relay.Function([var_5561,var_5562,var_5571,], output)
mod['func_5578'] = func_5578
mod = relay.transform.InferType()(mod)
var_5579 = relay.var("var_5579", dtype = "int32", shape = (11, 5, 6))#candidate|5579|(11, 5, 6)|var|int32
var_5580 = relay.var("var_5580", dtype = "int32", shape = (11, 5, 6))#candidate|5580|(11, 5, 6)|var|int32
var_5581 = relay.var("var_5581", dtype = "float32", shape = (420, 1))#candidate|5581|(420, 1)|var|float32
output = func_5578(var_5579,var_5580,var_5581,)
func_5582 = relay.Function([var_5579,var_5580,var_5581,], output)
mutated_mod['func_5582'] = func_5582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3800_call = mod.get_global_var('func_3800')
func_3802_call = mutated_mod.get_global_var('func_3802')
call_5587 = func_3800_call()
call_5588 = func_3800_call()
output = relay.Tuple([call_5587,])
output2 = relay.Tuple([call_5588,])
func_5597 = relay.Function([], output)
mod['func_5597'] = func_5597
mod = relay.transform.InferType()(mod)
output = func_5597()
func_5598 = relay.Function([], output)
mutated_mod['func_5598'] = func_5598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3017_call = mod.get_global_var('func_3017')
func_3019_call = mutated_mod.get_global_var('func_3019')
call_5599 = relay.TupleGetItem(func_3017_call(), 0)
call_5600 = relay.TupleGetItem(func_3019_call(), 0)
var_5604 = relay.var("var_5604", dtype = "float64", shape = (96, 4))#candidate|5604|(96, 4)|var|float64
bop_5605 = relay.not_equal(call_5599.astype('bool'), var_5604.astype('bool')) # shape=(96, 4)
bop_5608 = relay.not_equal(call_5600.astype('bool'), var_5604.astype('bool')) # shape=(96, 4)
bop_5617 = relay.left_shift(bop_5605.astype('uint32'), call_5599.astype('uint32')) # shape=(96, 4)
bop_5620 = relay.left_shift(bop_5608.astype('uint32'), call_5600.astype('uint32')) # shape=(96, 4)
output = relay.Tuple([bop_5617,])
output2 = relay.Tuple([bop_5620,])
func_5621 = relay.Function([var_5604,], output)
mod['func_5621'] = func_5621
mod = relay.transform.InferType()(mod)
mutated_mod['func_5621'] = func_5621
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5622 = relay.var("var_5622", dtype = "float64", shape = (96, 4))#candidate|5622|(96, 4)|var|float64
func_5621_call = mutated_mod.get_global_var('func_5621')
call_5623 = func_5621_call(var_5622)
output = call_5623
func_5624 = relay.Function([var_5622], output)
mutated_mod['func_5624'] = func_5624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3210_call = mutated_mod.get_global_var('func_3210')
call_5631 = func_3209_call()
call_5632 = func_3209_call()
output = relay.Tuple([call_5631,])
output2 = relay.Tuple([call_5632,])
func_5633 = relay.Function([], output)
mod['func_5633'] = func_5633
mod = relay.transform.InferType()(mod)
output = func_5633()
func_5634 = relay.Function([], output)
mutated_mod['func_5634'] = func_5634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5104_call = mod.get_global_var('func_5104')
func_5106_call = mutated_mod.get_global_var('func_5106')
call_5730 = func_5104_call()
call_5731 = func_5104_call()
uop_5742 = relay.atanh(call_5730.astype('float64')) # shape=(12, 12, 7)
uop_5744 = relay.atanh(call_5731.astype('float64')) # shape=(12, 12, 7)
func_4728_call = mod.get_global_var('func_4728')
func_4732_call = mutated_mod.get_global_var('func_4732')
const_5766 = relay.const([2.926937,-5.742492,-5.571671,2.013632,-2.954915,-2.132885,-4.840505,-8.190269,6.571766,-5.025757,-6.560358,7.469798,-9.683758,0.568940,-7.030871,-6.769504,1.119789,-9.624498,5.823089,-6.894601,3.365604,-6.703931,0.126390,1.051142,-7.132511,2.799889,4.045620,-8.830157,0.515065,-1.447132,-4.345240,-4.481795,3.337051,-5.650165,-0.120536,-6.697595,2.113812,7.606565,-2.831327,0.440570,-1.454360,7.957948,5.892762,-6.301252,9.846789,-5.903577,3.267529,-8.569239,4.964194,-0.955417,8.810035,-1.709299,7.759479,6.705704,-5.364638,-4.254581,3.289473,-6.344534,3.243486,-5.791696,9.951660,4.384532,6.769038,-2.978862,-8.131958,-1.281862,8.982008,-6.369626,5.837159,-2.838633,-9.058402,-8.911466,-1.505634,-0.151967,4.634447,9.749506,-8.674516,-2.594700,-3.064310,-3.970161,1.992110,-4.875907,2.922648,1.968444,-9.686626,-0.957067,-0.019702,-0.939466,-4.515541,-9.678280,1.460835,-9.152500,-6.795355,4.923261,1.216444,1.070404,0.083458,-3.855994,-4.618821,7.958934,7.536058,1.243392,-8.226887,1.655309,3.881167,5.804165,3.510635,-4.956533,-6.113532,-2.398891,8.636920,-6.095014,6.939029,-6.739534,-9.845802,-0.323496,1.925565,2.470226,0.899544,-1.988804,-7.656003,-6.644900,-6.739000,-6.065871,-3.468829,-9.662517,-3.151770,-4.401059,2.952289,-6.302244,-9.089277,-3.022351,-7.432367,-1.054435,-4.275687,-6.723607,-0.135247,-1.223723,3.223201,6.317603,1.178924,-9.616366,-8.827674,3.225033,0.176837,4.399316,-9.891280,9.625112,6.738736,-8.316827,7.333003,-8.927184,0.419354,-0.957771,9.561601,0.095994,5.813969,6.925695,-0.330060,-3.087636,-2.227061,-9.257719,4.115734,9.859475,1.828880,-1.654776,1.139252,-3.942739,5.543206,4.641309,-3.521077,7.106049,-8.462564,8.918999,6.509462,-1.775398,6.039921,-2.502618,4.706342,9.205858,7.160750,6.258755,-3.887861,-0.497819,-4.384141,6.227648,-4.833604,-5.209061,7.021716,6.052631,6.621569,-9.664450,-5.845325,4.745908,-7.299747,-3.954166,-3.851709,-7.494466,2.366822,-2.665049,1.458649,-8.382462,-9.341510,-3.402599,-8.395259,-8.196930,-7.181655,-2.687890,3.332423,-0.134788,-0.107492,-4.373464,-1.390944,-7.627337,2.221350,1.172214,-2.724471,-7.688505,-0.886651,-3.908739,-8.725785,3.619191,5.460937,-6.233867,7.552382,-3.322317,1.561869,1.534253,-6.122769,-0.003573,-3.722173,-9.270260,7.756690,-6.323145,7.780386,8.997433,3.282763,-6.229917,-8.619392,-6.792442,5.235777,-9.390324,7.218014,-5.147315,6.000581,9.332168,-5.300097,-1.309413,-3.155107,-7.168151,4.465242,7.729672,-4.851627,6.514227,-9.479042,-7.907394,-0.986904,4.590195,-7.324061,9.060251,-0.611240,-8.143638,-2.882001,-6.221104,9.910405,1.356535,-2.152301,5.831134,-4.791751,-1.877331,-0.141719,7.679295,4.359808,-2.482610,-1.433659,2.427646,-1.264017,-6.295179,-9.045292,4.802915,4.663631,-5.910108,-0.448294,-9.473966,-1.062655,9.106559,5.694147,1.922463,6.211626,4.640202,-6.740751,-4.297203,-0.190190,6.290594,-6.272388,-1.659530,9.542363,3.360123,-3.259625,5.398664,-9.785710,-4.956624,9.122506,-3.580340,3.889311,-1.111106,-3.028703,6.591737,7.149247,3.917645,8.201795,5.054022,-2.110954,-1.132554,-6.703523,0.482496,7.201000,7.556751,-6.901181,1.803510,7.393162,8.327136,5.196903,-0.484770,7.802030,-6.838273,2.694108,-7.991696,-3.429288,-6.913935,-6.668246,-0.789821,3.199472,-2.821501,6.863946,-6.982648,0.831381,0.921073,-6.616331,-7.548054,8.618715,-7.275794,-1.643433,9.629037,-5.807567,-7.198383,0.479574,-1.293057,-3.500179,-0.061478,-8.925500,-3.918112,-1.069018,-1.604773,7.090860,0.654264,5.280353,3.964283,-5.031699,0.267927,-6.703073,6.102775,-5.444629,4.223157,-0.057583,-9.246271,-9.522948,-2.285877,-3.851671,7.578748,3.941474,3.331683,-7.976299,8.290390,3.266525,9.938636,-5.769200,9.553026,-9.370403,5.191536,7.279708,-6.738537,-7.215366,-2.020296,8.986830,-2.332202,-1.856295,-8.522353,-2.506232,8.565540,-3.456698,5.179694,2.435752,6.395224,9.253992,-3.753313,-4.311313,-2.831127,-5.206413,-9.401829,-7.315090,-4.275335,-6.736383,-8.515578,-5.050067,-1.596162,-1.312557,3.395618,-5.931100,-9.650410,7.215617,-1.716013,5.132466,-1.549044,-2.282525,7.477117,9.480446,9.270785,-4.353570,-8.530626,-3.644857,8.559505,3.330922,-6.338454,0.067483,2.483912,-9.606435,0.966906,5.374795,7.437822,-8.050705,-9.092048,-2.086196,6.360382,3.102241,-2.661728,-0.303212,8.064437,-3.642504,0.999038,-2.807182,9.428396,6.448054,-3.191556,-8.309432,-5.062303,-7.437778,2.438243,-3.341602,-3.220228,-1.367268,5.701205,-6.147088,-9.741196,2.119661,7.966776,5.053414,-4.797487,0.712701,8.181723,-0.529676,-7.860204,-4.296838,2.789286,-3.328910,0.951895,-1.766954,6.591160,5.713203,-6.496736,4.277784,-3.564305,-4.908379,6.623707,9.084441,7.466195,-1.353984,-3.471640,7.659939,-4.450566,8.082022,2.485300,-6.752329,4.127556,-1.078585,-6.867205,9.009856,-1.720804,5.907426,0.009083,-1.102732,-9.531417,-3.738446,-0.551850,7.374384,6.890652,-6.478574,-1.222178,8.377916,-5.622649,0.066042,4.053326,5.320754,-4.043048,-7.963004,6.444948,3.690220,2.245290,-1.947485,3.242588,-1.542911,6.191842,3.370242,-1.320296,9.817222,2.255021,0.371417,1.367989,-6.747918,-7.415820,3.590175,-4.504287,1.157059,-2.574609,1.598570,3.507084,-1.745052,-1.010871,6.538098,-7.242620,4.950153,7.653803,-8.879292,2.222833,1.230286,0.873084,3.490983,7.247858,-7.868606,-4.684435,7.425128,9.282090,-5.910879,-3.734296,-8.375629,-7.097413,-1.720762,8.947805,-0.841632,1.684036,-1.771610,-6.795786,-0.855182,-4.013223,4.566867,-6.244225,0.430678,-3.420329,3.370903,1.787877,9.596742,5.046596,4.386664,9.061474,6.805166,1.003404,4.009323,7.041135,5.944160,-8.607036,8.455031,-5.860641,3.654107,-8.365441,3.949630,-0.879337,-9.534800,-8.123660,-4.862659,8.079793,-5.952245,7.990673,6.321918,-8.524923,8.612001,8.773634,9.870141,5.096219,2.444803,-1.229944,3.090152,2.391628,-9.449368,1.172015,7.573330,7.801937,-4.625918,-1.811881,8.152375,-2.011954,0.577495,8.859021,4.801367,2.379641,8.648265,0.418232,2.081082,-3.535639,-4.076261,-2.770044,-9.531522,-8.941844,9.705576,-6.382648,4.321379,0.366466,4.874250,2.815697,3.249033,4.197054,-3.840375,6.982831,5.022325,-4.241165,3.289841,-0.048570,-1.942541,-0.228762,9.354333,-9.711685,-6.919003,7.580680,9.012407,-2.620736,-1.892738,3.900348,9.569226,-4.275228,-2.746665,-5.321273,0.474666,6.537810,4.666001,7.010239,5.087482,0.641609,3.003097,9.693750,-4.588433,0.674633,4.289369,6.753359,5.525949,2.627269,-5.154740,-9.378227,-9.413979,9.088614,5.726969,-5.053833,5.375744,-3.890434,6.257962,0.180041,-3.220778,-0.095168,4.853400,-2.142497,7.854163,-1.081212,9.149686,1.960907,-4.241272,-6.919231,-7.599088,-2.585818,-6.698628,-4.116938,-8.278904,4.563589,1.079346,-3.679927,-4.993134,8.447352,1.057454,4.621806,-4.047293,-8.544964,-1.798362,8.367518,-0.882212,-4.491443,-6.291910,-9.009653,-4.300980,9.851374,5.861937,-1.742071,-9.609206,5.936111,5.944610,8.590877,3.839830,-8.371545,-3.687235,-6.864367,-5.751337,0.370274,-2.054077,9.201882,-6.823396,-2.927025,4.237810,9.960334,-4.375117,0.027472,1.853416,-6.959397,-5.290768,-6.474247,-5.644060,3.855973,8.556169,0.094463,-6.309213,-2.616842,-0.741607,-2.381666,8.912146,0.721011,-2.338113,3.580349,2.894583,6.373334,6.268571,-4.169605,-0.446006,-1.693385,5.410579,6.418882,-5.154479,-2.645632,-9.794718,-7.920146,-6.516770,-1.265206,-5.788251,-3.993635,6.380910,-8.614053,-3.030249,-5.278417,-0.589670,-4.010324,-4.562887,-7.018729,-2.936723,7.264347,4.386459,-1.376131,-5.862057,6.675325,3.244663,-2.487101,7.443390,9.916311,-2.557572,-7.625570,-5.546312,-2.533927,5.316126,5.251515,1.241785,-4.656232,1.143542,-7.341790,1.823853,-3.532903,2.081388,6.028327,3.557893,-0.836228,-6.979157,9.543870,-1.652159,-2.610284,-5.114911,0.421426,-0.507726,-5.921089,-3.053806,1.499073,-8.993560,-0.461062,2.857366,-8.410564,-0.299388,-2.453970,-0.623313,9.315989,8.305635,-1.664487,-4.044605,4.171835,2.174748,-6.412563,-8.146752,-0.231646,8.778082,-4.305583,-8.263573,-5.301261,-8.453742,-1.867834,-6.901070,7.607685,9.424103,9.286374,6.091281,-4.951261,-5.170348,-9.588472,4.436794,-9.772269,-1.098953,8.579208,7.255467,6.781265,-7.804525,-3.097510,-2.804266,-2.542729], dtype = "float64")#candidate|5766|(832,)|const|float64
call_5765 = relay.TupleGetItem(func_4728_call(relay.reshape(const_5766.astype('float64'), [8, 8, 13]), relay.reshape(const_5766.astype('float64'), [8, 8, 13]), ), 0)
call_5767 = relay.TupleGetItem(func_4732_call(relay.reshape(const_5766.astype('float64'), [8, 8, 13]), relay.reshape(const_5766.astype('float64'), [8, 8, 13]), ), 0)
output = relay.Tuple([uop_5742,call_5765,const_5766,])
output2 = relay.Tuple([uop_5744,call_5767,const_5766,])
func_5772 = relay.Function([], output)
mod['func_5772'] = func_5772
mod = relay.transform.InferType()(mod)
mutated_mod['func_5772'] = func_5772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5772_call = mutated_mod.get_global_var('func_5772')
call_5773 = func_5772_call()
output = call_5773
func_5774 = relay.Function([], output)
mutated_mod['func_5774'] = func_5774
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5790 = relay.var("var_5790", dtype = "float32", shape = (5, 9, 1))#candidate|5790|(5, 9, 1)|var|float32
uop_5791 = relay.asinh(var_5790.astype('float32')) # shape=(5, 9, 1)
func_2962_call = mod.get_global_var('func_2962')
func_2963_call = mutated_mod.get_global_var('func_2963')
call_5798 = relay.TupleGetItem(func_2962_call(), 2)
call_5799 = relay.TupleGetItem(func_2963_call(), 2)
func_3565_call = mod.get_global_var('func_3565')
func_3567_call = mutated_mod.get_global_var('func_3567')
const_5803 = relay.const([-4.525584,1.739665,8.539804,3.785899,-5.997175,-2.061754,3.040352,1.125654,9.428855,0.136485,0.708131,5.679442,5.922274,-8.295358,-1.150959,7.564879,0.722524,-4.581673,5.486872,6.001621,1.772412,-6.239743,8.271567,0.049628,-4.625737,-9.284538,1.285220,-6.123473,-8.978428,7.179475,-6.312915,1.583474,9.216076,2.758287,1.778852,-1.782130,-1.463959,-0.651193,9.244096,-3.952207,-6.194400,6.482614,4.705609,-5.278431,-5.963774,-7.755562,-8.807020,-0.287955,8.492003,-0.764925,-6.597105,-1.985456,7.599202,-9.624262,-3.661760,2.524238,6.606068,-7.297899,-6.123165,-7.079269,-0.404916,7.454023,8.682683,-8.705845,4.286345,8.660954,-0.987235,-8.482182,-9.846214,-6.068062,-5.751519,5.793111,-2.551460,-1.657039,-2.631597,1.358195,3.715077,-5.656585,-6.197929,5.449564,5.745273,4.031844,-7.425559,-3.411339,-3.399372,4.529972,-9.855317,-9.378761,-2.802600,1.183972,4.281877,9.941679,7.227069,9.575609,6.751129,-3.557716,-6.333444,-7.914959,1.463415,9.330147,9.825369,-0.079377,-6.873271,-6.362154,3.117579,7.049209,-5.935351,5.264539,-6.381797,9.361538,-8.420758,4.651721,9.205834,2.879795,-6.567810,-4.690621,-7.635401,8.604967,0.656372,2.698492,6.239957,6.060281,-8.221321,9.658136,-7.092664,-6.196245,-6.075823,6.964036,8.351098,0.770355,6.627468,6.907529,-8.403530,-2.212357,-0.288153,6.139787,5.868392,3.223122,3.061693,-1.167598,6.284560,-3.369307,-7.595032,3.057418,1.738078,7.602519,-3.492938,-6.824890,2.333975,-5.952937,-8.240211,8.571525,-7.217041,8.689464,-2.401857,2.029440,-2.272454,1.787340,1.960062,-6.802782,5.090061,-7.625129,-2.289959,3.396615,6.511328,5.866361,6.570054,1.491735,0.111838,4.429118,6.993038,5.575049,0.358574,-6.240048,1.746819,6.915001,6.908566,-7.785502,-5.989031,4.377183,7.736515,4.568346,-2.504107,0.919038,-4.154021,9.243971,9.698968,8.893250,1.368398,-1.031478,2.928969,-2.839851,7.065675,-4.152930,-0.447009,5.173280,3.478213,-5.012842,-7.869305,6.441129,-6.791762,-3.300917,-1.450746,-6.992922,0.473631,-0.703145,-3.645658,8.471637,-4.432608,2.403811], dtype = "float64")#candidate|5803|(210,)|const|float64
call_5802 = func_3565_call(relay.reshape(const_5803.astype('float64'), [15, 7, 2]))
call_5804 = func_3565_call(relay.reshape(const_5803.astype('float64'), [15, 7, 2]))
output = relay.Tuple([uop_5791,call_5798,call_5802,const_5803,])
output2 = relay.Tuple([uop_5791,call_5799,call_5804,const_5803,])
func_5805 = relay.Function([var_5790,], output)
mod['func_5805'] = func_5805
mod = relay.transform.InferType()(mod)
var_5806 = relay.var("var_5806", dtype = "float32", shape = (5, 9, 1))#candidate|5806|(5, 9, 1)|var|float32
output = func_5805(var_5806)
func_5807 = relay.Function([var_5806], output)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5812 = relay.const([[[-1.511192,0.852726,3.177522,-0.627183],[-1.742610,-8.433470,6.770250,4.026226],[-4.467769,4.004117,0.028913,3.481733],[7.167201,-4.340683,-0.387847,-3.091233],[-4.537312,-5.004150,-0.760595,-4.302389],[-5.229329,3.722314,5.955527,7.657451],[9.526086,-7.298785,-2.816020,5.648605],[3.292715,3.695208,5.585908,-3.114829],[-5.775466,-5.620422,4.140856,8.214160],[6.010191,-8.874632,1.535650,-0.175309],[-2.594706,-1.906199,-6.848462,-8.564642],[9.161286,-2.768358,-2.268186,8.182068],[4.225168,0.022989,-6.715744,-8.221220],[1.764589,-0.168215,-5.787349,-0.406560],[-7.304438,6.493461,-7.042415,-4.697679]]], dtype = "float32")#candidate|5812|(1, 15, 4)|const|float32
uop_5813 = relay.cosh(const_5812.astype('float32')) # shape=(1, 15, 4)
func_2754_call = mod.get_global_var('func_2754')
func_2758_call = mutated_mod.get_global_var('func_2758')
var_5820 = relay.var("var_5820", dtype = "uint64", shape = (14,))#candidate|5820|(14,)|var|uint64
var_5821 = relay.var("var_5821", dtype = "int64", shape = (504,))#candidate|5821|(504,)|var|int64
call_5819 = relay.TupleGetItem(func_2754_call(relay.reshape(var_5820.astype('uint64'), [14, 1]), relay.reshape(var_5821.astype('int64'), [504,]), ), 6)
call_5822 = relay.TupleGetItem(func_2758_call(relay.reshape(var_5820.astype('uint64'), [14, 1]), relay.reshape(var_5821.astype('int64'), [504,]), ), 6)
bop_5829 = relay.mod(uop_5813.astype('float64'), relay.reshape(const_5812.astype('float64'), relay.shape_of(uop_5813))) # shape=(1, 15, 4)
output = relay.Tuple([call_5819,var_5820,var_5821,bop_5829,])
output2 = relay.Tuple([call_5822,var_5820,var_5821,bop_5829,])
func_5849 = relay.Function([var_5820,var_5821,], output)
mod['func_5849'] = func_5849
mod = relay.transform.InferType()(mod)
var_5850 = relay.var("var_5850", dtype = "uint64", shape = (14,))#candidate|5850|(14,)|var|uint64
var_5851 = relay.var("var_5851", dtype = "int64", shape = (504,))#candidate|5851|(504,)|var|int64
output = func_5849(var_5850,var_5851,)
func_5852 = relay.Function([var_5850,var_5851,], output)
mutated_mod['func_5852'] = func_5852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5451_call = mod.get_global_var('func_5451')
func_5452_call = mutated_mod.get_global_var('func_5452')
call_5888 = relay.TupleGetItem(func_5451_call(), 3)
call_5889 = relay.TupleGetItem(func_5452_call(), 3)
func_2704_call = mod.get_global_var('func_2704')
func_2708_call = mutated_mod.get_global_var('func_2708')
var_5891 = relay.var("var_5891", dtype = "float32", shape = (3136,))#candidate|5891|(3136,)|var|float32
var_5892 = relay.var("var_5892", dtype = "float64", shape = (693,))#candidate|5892|(693,)|var|float64
call_5890 = relay.TupleGetItem(func_2704_call(relay.reshape(var_5891.astype('float32'), [16, 14, 14]), relay.reshape(var_5891.astype('float32'), [16, 14, 14]), relay.reshape(var_5892.astype('float64'), [693,]), ), 3)
call_5893 = relay.TupleGetItem(func_2708_call(relay.reshape(var_5891.astype('float32'), [16, 14, 14]), relay.reshape(var_5891.astype('float32'), [16, 14, 14]), relay.reshape(var_5892.astype('float64'), [693,]), ), 3)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
var_5902 = relay.var("var_5902", dtype = "int32", shape = (1008,))#candidate|5902|(1008,)|var|int32
call_5901 = relay.TupleGetItem(func_5541_call(relay.reshape(var_5902.astype('int32'), [1008,])), 0)
call_5903 = relay.TupleGetItem(func_5543_call(relay.reshape(var_5902.astype('int32'), [1008,])), 0)
uop_5911 = relay.sigmoid(call_5890.astype('float64')) # shape=(11, 9, 7)
uop_5913 = relay.sigmoid(call_5893.astype('float64')) # shape=(11, 9, 7)
bop_5916 = relay.logical_xor(uop_5911.astype('uint32'), relay.reshape(var_5892.astype('uint32'), relay.shape_of(uop_5911))) # shape=(11, 9, 7)
bop_5919 = relay.logical_xor(uop_5913.astype('uint32'), relay.reshape(var_5892.astype('uint32'), relay.shape_of(uop_5913))) # shape=(11, 9, 7)
func_5257_call = mod.get_global_var('func_5257')
func_5259_call = mutated_mod.get_global_var('func_5259')
call_5935 = relay.TupleGetItem(func_5257_call(), 2)
call_5936 = relay.TupleGetItem(func_5259_call(), 2)
output = relay.Tuple([call_5888,var_5891,call_5901,var_5902,bop_5916,call_5935,])
output2 = relay.Tuple([call_5889,var_5891,call_5903,var_5902,bop_5919,call_5936,])
func_5945 = relay.Function([var_5891,var_5892,var_5902,], output)
mod['func_5945'] = func_5945
mod = relay.transform.InferType()(mod)
var_5946 = relay.var("var_5946", dtype = "float32", shape = (3136,))#candidate|5946|(3136,)|var|float32
var_5947 = relay.var("var_5947", dtype = "float64", shape = (693,))#candidate|5947|(693,)|var|float64
var_5948 = relay.var("var_5948", dtype = "int32", shape = (1008,))#candidate|5948|(1008,)|var|int32
output = func_5945(var_5946,var_5947,var_5948,)
func_5949 = relay.Function([var_5946,var_5947,var_5948,], output)
mutated_mod['func_5949'] = func_5949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2578_call = mod.get_global_var('func_2578')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_5956 = relay.TupleGetItem(func_2578_call(), 0)
call_5957 = relay.TupleGetItem(func_2579_call(), 0)
func_2185_call = mod.get_global_var('func_2185')
func_2187_call = mutated_mod.get_global_var('func_2187')
call_5966 = func_2185_call()
call_5967 = func_2185_call()
func_4268_call = mod.get_global_var('func_4268')
func_4271_call = mutated_mod.get_global_var('func_4271')
const_5973 = relay.const([[-10,2,-5,5,10,7,1,-10,-3,1,-5,10,-10,1,-8,-3,-2,-2,-8,3,10,-10,5,9,-2,-5,-1,-4,-9,8,-2,6,6,10,-9,-3,-2,-8,-6,6,-7,4,7,-10,5,-6,9,-2,1,2,-7,-9,-10,6,3,-4,5,10,-8,-10,10,-1,-9,-5,-4,-10,-2,10,5,-9,-9,9,-1,-10,1,1,8,-10],[4,7,2,1,-6,7,-8,-10,-9,3,-1,-10,-4,4,2,9,1,4,-3,7,-5,-3,-1,9,3,2,8,-6,1,-4,-6,-9,-7,2,7,1,6,-2,-6,-6,7,-5,-10,-5,3,-5,2,-7,4,-1,9,-2,4,1,-9,1,5,-8,8,-7,7,-1,-4,10,-8,-1,-2,3,9,8,-10,-1,-4,1,6,-3,10,2],[2,3,10,8,-9,10,4,-5,6,1,-6,-3,10,5,-2,7,-8,6,6,-2,5,-2,-7,-3,-4,-4,-7,-5,5,-1,9,-10,8,-7,-2,-1,8,-7,-2,-9,-5,7,3,10,-1,4,-9,-7,2,1,-2,2,8,6,-2,-4,-1,10,10,10,3,1,10,-8,3,-10,-4,4,4,9,8,-4,4,-1,-5,8,-6,-9],[1,3,-9,-9,-5,-2,-5,-6,6,-10,-3,-9,-3,-6,7,9,5,2,-7,4,3,3,-10,-3,-7,9,5,8,-4,-10,10,-9,-1,8,1,2,-1,-6,-3,7,1,2,3,-5,-4,8,-4,10,9,5,-1,5,-1,-3,7,6,6,-5,8,4,5,-8,10,-4,6,-10,-8,1,6,-6,5,-3,10,8,8,-9,-7,-9],[3,-5,-5,-9,9,-2,5,-10,-10,1,-2,7,4,-2,1,7,9,6,-6,8,-5,2,8,10,8,-9,2,-2,-10,-5,-8,-6,4,-10,6,-8,8,-3,-4,8,4,-4,-3,-3,9,-5,-10,-3,-4,-5,-2,-1,2,9,-7,-8,4,9,8,-10,10,5,8,-2,-2,-1,9,7,6,-7,-4,-3,-9,-6,4,6,-1,2],[1,-2,-3,9,4,5,-3,2,9,6,8,7,-9,-6,3,2,5,9,6,2,-4,-2,9,-4,9,-10,-3,-1,-1,-5,-6,-10,-8,1,-5,-5,-9,-7,3,9,-5,-3,8,-3,2,3,2,10,-2,-5,1,-7,-9,9,8,-5,8,3,1,-3,1,-10,-3,2,-9,-4,9,3,8,9,1,-10,2,-5,7,-4,7,-3]], dtype = "uint16")#candidate|5973|(6, 78)|const|uint16
var_5974 = relay.var("var_5974", dtype = "float32", shape = (420,))#candidate|5974|(420,)|var|float32
call_5972 = relay.TupleGetItem(func_4268_call(relay.reshape(const_5973.astype('uint16'), [13, 4, 9]), relay.reshape(var_5974.astype('float32'), [420,]), ), 0)
call_5975 = relay.TupleGetItem(func_4271_call(relay.reshape(const_5973.astype('uint16'), [13, 4, 9]), relay.reshape(var_5974.astype('float32'), [420,]), ), 0)
output = relay.Tuple([call_5956,call_5966,call_5972,const_5973,var_5974,])
output2 = relay.Tuple([call_5957,call_5967,call_5975,const_5973,var_5974,])
func_5978 = relay.Function([var_5974,], output)
mod['func_5978'] = func_5978
mod = relay.transform.InferType()(mod)
var_5979 = relay.var("var_5979", dtype = "float32", shape = (420,))#candidate|5979|(420,)|var|float32
output = func_5978(var_5979)
func_5980 = relay.Function([var_5979], output)
mutated_mod['func_5980'] = func_5980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2075_call = mod.get_global_var('func_2075')
func_2077_call = mutated_mod.get_global_var('func_2077')
call_6047 = func_2075_call()
call_6048 = func_2075_call()
func_5945_call = mod.get_global_var('func_5945')
func_5949_call = mutated_mod.get_global_var('func_5949')
const_6053 = relay.const([[7.201178,-5.061619,-7.384888,-6.944369],[2.766292,-8.552615,8.221829,-5.199451],[-3.094200,-5.673294,-0.737393,-2.682047],[1.177791,8.670983,-5.891159,6.777197],[-3.027228,5.540585,-6.384480,0.298287],[-1.220984,-1.311118,-0.300791,7.069789],[8.484066,-7.639044,-5.121255,-6.338067],[-3.788032,-6.567303,-0.524892,-4.897175],[4.577149,3.895180,-2.600039,1.817925],[-5.350045,-0.360139,-8.992704,-7.932688],[-7.133391,1.525485,8.433761,-9.737366],[7.699886,3.363907,6.758105,-3.430549],[5.680137,-7.344602,-4.902003,-6.441381],[0.925570,-1.219109,-4.762253,3.492735],[8.698122,-6.955155,-0.309921,-5.637271],[9.000257,9.202198,-6.944780,0.322795],[8.251566,5.574477,2.205870,8.331414],[-4.431858,5.125169,-4.509825,6.192338],[6.352708,-6.878606,9.997375,-7.358705],[-9.689570,1.663529,7.511344,-3.337733],[-1.000031,5.478700,2.067174,-3.380618],[-9.720269,4.414020,-0.416006,-8.733296],[-4.230470,-8.168964,3.327574,-9.878910],[-6.078853,-8.704577,-5.649085,3.142454],[-2.944181,-6.218991,5.508852,-8.614612],[-6.460222,-8.194276,-6.171805,9.515689],[5.923283,-7.497929,-9.276613,1.100141],[-5.779628,-4.553336,-1.647582,1.558430],[-6.565988,6.055568,-7.664630,9.258313],[8.851136,-4.341218,-6.145527,-1.838870],[8.269317,8.008196,5.714382,-8.386924],[-6.323886,-1.798003,-9.521386,-9.307517],[9.305258,-9.655969,2.437448,1.449059],[8.870961,-7.247899,1.807809,-2.106281],[-3.049490,-2.383245,-4.237172,1.008115],[5.650304,9.675364,-8.601778,8.695332],[4.487474,3.319867,7.527304,5.901935],[-3.869168,7.909759,-8.689341,-0.890738],[8.451834,-8.499875,-8.732467,-7.771478],[3.142212,0.021079,6.260733,-5.900670],[2.400785,3.721623,-9.768136,2.919816],[3.822683,-1.242033,-8.134393,-0.398201],[6.257397,4.788680,-6.794170,9.055012],[-9.538479,3.487490,1.676589,-1.063872],[-4.545780,-0.996964,9.501654,3.930019],[-2.599058,-8.959703,3.202333,-4.521532],[-8.170206,-6.783892,9.369413,-0.831588],[-1.886478,-4.179647,5.276924,-9.272823],[-4.355224,-3.921838,4.414423,-0.035158],[3.233456,-9.034630,2.018854,4.088043],[4.036195,9.011161,-7.137119,-3.886172],[4.721057,-9.109578,5.907131,-9.304028],[1.240849,0.189175,9.562202,-8.255913],[8.001303,7.778215,3.123562,-0.294920],[-3.371631,-5.458563,1.630202,5.091548],[9.857429,-5.633638,7.849279,-8.772840],[4.016664,1.511145,-9.101936,-8.867973],[-6.779555,-7.705655,-9.666177,-9.496648],[-2.829915,8.893784,5.858520,2.274321],[0.993909,-1.717522,-7.653291,4.138889],[-0.397794,-0.138623,3.334163,-9.336925],[-4.035581,6.619768,1.403400,0.329990],[-4.527127,-6.211343,-0.120336,-6.551189],[3.499981,-5.549367,-3.384074,7.538306],[-9.795372,1.672467,-9.486925,9.054785],[-9.587379,-7.889264,8.325557,-7.236054],[-2.825421,4.065413,-4.820097,-1.028216],[-3.899745,5.806031,8.174987,-4.753648],[3.539091,1.328179,4.066841,-1.918592],[5.021402,-2.473886,3.802950,5.441686],[2.934834,-1.198481,-9.692578,5.939203],[2.261626,4.287545,0.952660,-6.155378],[3.855711,8.699893,-8.851177,0.361724],[-2.366757,-0.781827,-0.752957,0.712307],[5.006636,8.377153,5.638724,-2.896045],[1.377191,5.408760,8.801075,2.906058],[9.846793,-3.384738,9.782732,5.916105],[7.542596,9.169668,3.807501,6.114375],[-7.842355,3.563163,7.847473,-0.691098],[9.440934,4.419277,0.656155,-1.839335],[6.828481,-5.586729,-5.266439,-0.370247],[-7.036575,8.545495,4.439556,-6.780052],[6.018151,4.877077,3.376256,4.928917],[7.610782,-7.218387,-0.184826,7.731674],[5.844409,-9.124911,4.868869,9.088855],[-0.306358,-6.546237,6.316482,9.444036],[-1.201400,4.135522,-7.080820,-3.911425],[6.020586,-9.414565,5.782026,-3.831184],[9.757235,-1.382932,0.072426,-3.959845],[-1.507722,9.715158,4.443726,-5.008713],[7.288160,-0.081670,2.446287,3.536113],[4.552601,-0.051424,5.276159,0.021666],[3.915249,-6.780286,2.982665,-8.370191],[5.962589,5.700882,-4.545934,-2.143216],[9.418778,6.187734,2.024114,9.788655],[-4.440282,-2.484145,-2.926018,-6.793968],[4.450828,3.763079,-4.264406,0.818131],[8.130953,-1.938212,-6.177130,-7.339238],[3.997681,-9.733782,-0.093094,6.342563],[9.432180,6.903209,7.457892,0.239568],[-9.596438,6.546481,-5.218125,-6.758772],[8.372072,7.247147,0.177909,4.755376],[7.826039,4.241129,-2.156270,-7.717949],[-8.269319,5.171475,-0.554205,8.514458],[2.899637,2.948467,6.181947,-5.165684],[-5.103179,-5.704279,2.458853,3.218420],[-9.867309,-5.314780,4.749938,-4.370841],[-3.846768,-2.567319,5.253980,4.933482],[-0.536483,-2.306036,-3.151928,9.131487],[1.134904,-2.368051,8.969997,6.152084],[0.843351,-0.494990,4.867552,-4.959421],[7.231714,-4.951000,-2.168689,2.472168],[-8.811305,-3.209346,-9.014658,7.880829],[-9.201525,-5.617577,0.542659,1.826150],[-7.034344,-7.437994,-7.956625,0.235845],[5.815854,-1.994888,-0.008830,-0.847458],[-5.777923,8.049376,-2.164090,-3.026989],[9.557007,5.827082,-1.117404,6.839534],[-1.791510,-9.142588,-0.301274,-4.637107],[8.426169,-3.078763,7.616961,-0.293866],[4.447968,-5.901594,3.458166,-5.861208],[-8.325855,9.607508,-8.731732,0.906455],[-3.685927,-6.239320,1.120258,-2.852010],[2.701150,-4.852203,-9.434147,-7.008731],[8.938047,3.462924,6.471921,1.136042],[2.105762,1.256824,2.456855,5.108455],[-8.824496,-2.708253,-7.507272,4.402353],[5.827879,-5.386440,-7.475810,-5.796269],[-2.539905,-7.116670,8.032321,3.484001],[4.846428,4.157867,0.800392,-4.206643],[-7.826581,4.384830,-5.041962,-3.394326],[1.992388,5.871360,-1.007787,6.770956],[4.118495,-5.489118,3.346157,-0.435513],[-6.539117,5.051468,-5.276674,-3.036463],[-3.558884,7.923205,-2.433738,6.142673],[4.691728,0.958647,-9.437906,-3.261818],[8.231661,-3.620553,-8.343712,5.661924],[-1.893416,-0.443563,-4.116348,8.083382],[-3.772093,4.227991,6.186975,-4.692682],[7.696250,-6.120874,-9.699696,-0.477303],[8.712505,-2.724998,2.687594,1.833255],[-8.463384,-2.836197,-0.512814,-0.314194],[-9.045876,0.065151,-5.418443,-3.265374],[6.810128,4.340465,4.767268,3.623913],[-5.531377,-3.303763,1.729299,-9.202955],[7.288099,3.189488,-0.230065,1.691811],[9.280901,-7.439147,-2.344105,-7.335709],[3.764630,-6.613853,7.987106,-1.618494],[3.523320,7.202984,-3.537384,3.410985],[-0.713734,6.857289,-6.701433,8.876446],[7.010260,8.019889,5.700372,4.664720],[8.425299,0.283981,-6.240913,-4.361782],[3.401282,-4.345537,1.397814,9.765551],[-4.080629,2.259698,6.647574,8.640697],[-4.986207,6.400689,-8.553764,2.350561],[-1.388213,-6.374047,-6.810218,-2.157099],[-3.703355,9.111058,-7.886963,4.764400],[9.493418,4.252213,7.091335,7.855131],[9.578537,9.713526,5.916884,2.899794],[-0.614003,-4.224098,1.147636,-4.321264],[-6.976271,5.583047,-6.762019,4.732279],[9.130447,9.860088,8.305818,1.120618],[4.841107,-7.962324,0.306112,-2.043096],[3.384873,-3.333759,1.762916,-7.019357],[-3.770248,7.666121,-5.319830,-8.459363],[5.764957,8.924715,-5.446475,-5.113719],[4.937122,-4.542706,-4.830102,-3.059798],[-6.428688,-3.154933,4.736221,3.076854],[0.763882,7.276816,6.340305,2.033031],[1.116156,-5.363708,5.001863,1.551902],[7.480813,2.624903,-3.722750,-6.366244],[-8.810668,-3.651959,4.263005,2.332280],[-0.345701,8.799537,-6.243876,7.185039],[9.175439,9.871670,-7.021666,4.267446],[5.083383,7.346828,5.591162,-6.607442],[4.536506,2.866423,-0.734262,0.774625],[1.093086,-7.267851,8.391299,4.929806],[1.195831,-7.224058,3.652268,-7.958515],[-3.671010,-4.820044,5.260163,-1.787789],[-8.130259,9.787296,-0.975662,6.172238],[0.913558,-2.937694,3.092608,5.871142],[-5.264089,-8.394219,-7.084172,-3.155096],[2.382363,-3.956333,7.013335,8.611309],[-4.680901,-4.505764,6.104158,6.862384],[-5.321679,2.928335,0.630540,-6.417855],[-6.999485,-7.753987,1.971450,-5.769535],[6.108868,5.876552,8.579224,-3.434034],[-9.314512,-3.556972,6.015745,-4.630161],[1.203630,4.602215,6.260909,3.657230],[8.940156,-3.399106,-1.155477,1.393862],[7.189314,9.893744,0.060852,-9.574317],[-3.338770,3.980772,-9.100398,6.434565],[2.701613,6.184246,7.972608,1.319100],[-6.471321,0.322796,-2.965842,-0.352720],[-3.564444,-0.644121,-8.876082,7.285620],[4.448237,-1.598933,-2.725425,-7.478969],[-8.162350,-1.809236,-7.682554,-6.156206],[9.951468,9.228429,-2.328375,3.743993],[0.144105,-9.761159,1.467849,9.420914],[-8.609214,-9.612105,0.015381,4.299726],[-4.017170,2.508720,3.984865,5.689360],[-0.581344,-9.212825,8.256796,4.702639],[6.255719,-8.600309,4.389788,7.397492],[3.330536,-4.805273,-2.193187,-5.020268],[-2.830019,7.388886,-9.837545,-6.838400],[-4.856492,4.678753,3.396603,-9.694883],[1.686697,3.226767,-7.382053,-5.470104],[-8.849443,9.574930,-4.739346,-8.889059],[9.063705,-8.889028,-1.804162,-7.471941],[0.336359,-0.006890,-0.624295,9.915338],[4.298971,-6.319151,-3.727348,9.806485],[-6.477002,3.240228,0.997528,1.795355],[-9.303752,-5.783761,-4.717686,6.713424],[-5.460457,-4.486615,-0.271097,-1.937238],[-1.118078,-4.397764,-0.317526,-6.991442],[-5.597816,6.510447,0.380775,-0.021561],[2.358668,-4.429720,-8.629908,3.867860],[-6.231057,0.332002,-9.066859,-1.597048],[6.466090,0.958197,9.263099,-1.267498],[9.052925,8.809228,-3.793233,-0.846443],[-3.828237,9.763021,-3.289427,9.021960],[3.141227,-3.525227,3.909402,-9.061511],[7.051046,-1.863843,5.384491,-1.109888],[-7.127569,4.279374,9.229764,-4.866909],[6.095513,-3.499070,4.805495,-0.153866],[2.989619,-2.196894,7.376404,9.579349],[-8.837558,6.843652,-5.852047,-3.671709],[4.769324,5.681827,-1.908981,-6.991545],[2.664240,3.049100,9.400810,3.762451],[-4.661174,2.625196,0.408600,-6.711598],[-5.595254,0.061355,2.038346,1.033451],[-2.073770,-6.693199,9.348574,-0.688141],[2.598024,3.347213,2.370425,3.100408],[-3.539248,7.324879,3.400447,9.156788],[-3.870159,-0.380908,-9.322435,-2.003368],[-2.088945,7.524813,-5.400291,6.500229],[-7.946247,-9.130574,7.216178,1.021491],[-9.996845,8.128632,6.863283,5.132528],[-7.949061,7.418188,2.140031,6.291432],[-8.115839,0.801162,-5.692114,6.128433],[6.387108,-2.423138,2.387327,-7.889361],[-3.361292,-2.389347,-7.778932,7.920333],[8.407454,-8.174041,9.797727,5.035765],[-7.123362,-6.023701,1.892210,7.206567],[7.597568,0.838164,-0.673062,-6.808373],[-5.056250,-0.591699,-1.280769,3.244134],[-3.128301,-5.756166,3.926599,-2.746074],[4.566387,-8.313975,-2.559226,8.222151],[2.823034,-9.803217,9.436564,-7.133214],[3.953170,-6.732443,5.525020,-1.293216],[3.580051,4.089519,-3.875287,4.875344],[-3.776793,-2.791258,0.493782,-9.056950],[-7.422612,-8.344499,8.455668,4.788492],[6.625895,-9.602066,3.343967,1.623937],[8.653718,9.338391,-4.964516,8.229684],[-7.453141,0.479624,-0.615312,-2.131289],[-5.853339,-4.639452,-4.534129,3.697972],[7.092654,-0.457730,-3.354178,-4.295686],[-0.189787,6.008860,-6.181124,2.657904],[-7.505917,-5.919659,-0.736080,6.155562],[-7.159662,-4.959952,-2.245181,-9.739677],[8.376869,-1.791661,-2.453252,7.738999],[7.903656,1.871793,-1.359295,-8.115744],[4.623602,2.139961,-1.755992,0.138385],[-0.293339,7.827093,2.831926,-7.427723],[-4.078693,-7.399072,6.125353,6.724894],[-2.956103,-0.610668,3.358968,5.320704],[-5.653964,-8.616918,1.688150,4.760936],[3.316480,-7.175855,-4.289677,9.665840],[-5.437072,-6.206884,8.665385,-5.060791],[-6.028119,-3.969324,7.664691,8.990869],[-3.714842,-6.959863,2.923083,4.738030],[-3.293666,5.415531,2.918234,2.436316],[-1.025034,1.731007,6.477028,7.071862],[9.863451,7.510290,8.897533,-0.086074],[-8.360281,8.174855,-9.729933,-0.279986],[7.855398,1.066228,-2.305419,-1.311761],[-1.448879,4.714226,1.585875,-7.095204],[-2.118304,1.625569,-3.260873,-5.532895],[4.565447,-6.921055,-0.973425,-9.611802],[-3.633889,-3.870814,3.436871,7.379698],[3.549917,7.191211,1.325115,9.823702],[-7.995398,6.768660,-7.528646,5.024877],[5.008456,6.839032,9.609049,3.615997],[5.361409,-5.874332,-8.314728,0.584053],[-7.805858,-8.391448,-2.475653,-4.038754],[9.027364,3.042774,5.526498,9.727388],[-7.861982,-4.184786,-0.199462,9.250713],[-8.721245,-0.913166,1.067012,-4.108837],[5.591120,7.398445,-8.169533,-0.638680],[0.905541,3.099457,-5.598030,2.580160],[1.217418,-2.507145,-2.935448,0.846377],[-1.922068,2.881878,3.959590,9.988991],[0.566453,-8.397506,-1.879078,5.105767],[-6.176453,-8.049150,6.591787,5.668941],[-6.780145,-3.026191,0.075879,2.669410],[-4.442481,2.950721,-2.921567,-4.928088],[4.636866,8.324184,4.558267,1.493479],[5.634766,-3.464771,-6.050989,8.603548],[-8.109029,7.460534,8.732977,3.802427],[5.854098,-3.435740,3.488464,7.647588],[5.618675,2.042685,4.941747,8.290777],[-9.415850,8.726942,5.548587,7.698597],[0.607000,-1.716543,1.961424,-1.342276],[-7.316930,-3.722650,6.099638,2.825378],[-6.962399,2.906861,3.394315,-0.993206],[-4.195256,-2.374682,-6.766707,9.482036],[-8.001459,2.401840,2.706354,4.405292],[-8.313333,-1.473492,6.836886,-7.139412],[-5.533691,-6.790960,-9.819473,6.949871],[-1.026839,7.135307,-2.306762,-8.732083],[-1.228290,-2.513302,3.864656,5.471354],[-3.983376,6.946110,4.561962,5.581320],[7.092703,-5.322956,4.657730,4.537913],[5.408456,-1.231263,5.187594,9.819963],[-9.852687,-9.865715,1.094129,5.509516],[4.804640,1.385613,4.930431,-5.488444],[-5.551454,-7.192266,-0.290858,-4.017268],[-2.790477,4.206242,0.093822,5.953587],[1.891541,-3.134780,-3.954627,-5.884177],[-1.790097,-5.047535,-2.030927,8.200316],[4.383763,-3.525889,1.086129,-0.009705],[-4.550566,2.820270,-1.422071,1.369843],[-5.913278,-6.860053,-2.346003,-7.376859],[-0.140101,-9.072139,8.518401,-2.222468],[0.073566,0.632195,1.751410,9.293137],[0.997446,4.884222,0.538478,3.025672],[-7.623928,-2.154835,-1.497556,-8.950799],[-7.612563,-6.575610,-8.083587,-4.241797],[9.292938,-1.110237,9.474913,-0.442466],[-2.489252,-1.663812,1.777491,-1.582581],[7.927414,-1.422766,2.452368,4.198727],[2.123615,-5.119569,-3.473269,9.453610],[-2.760726,-6.188265,3.986781,-3.011555],[-0.233985,-6.395073,5.290627,-3.309027],[7.584988,-1.401048,4.357110,-0.856649],[3.243839,-1.274426,-0.591668,-1.670916],[0.168612,-6.337434,5.049746,-7.500875],[-1.876220,8.071881,4.466884,-1.258896],[-6.002679,-5.500793,-8.136834,-6.687546],[0.822003,7.918161,7.043842,-5.738297],[-9.760649,4.760545,2.806462,-6.001180],[-2.411524,8.228182,8.063427,5.638266],[5.282469,5.751166,-1.636895,1.098152],[-3.753171,3.883157,-6.196721,-5.574757],[4.429700,2.106118,2.797372,-2.314473],[3.811522,-4.708041,1.596784,7.237283],[9.055497,8.038116,-7.346677,0.642283],[8.816051,-6.445857,-1.173171,5.425015],[8.872998,-1.418441,-3.857088,-7.117002],[3.507524,-0.703913,-6.953236,2.583567],[-4.396110,-5.122966,8.301306,5.704817],[-6.953079,8.162381,-0.163860,-3.333305],[1.720299,-8.085045,8.384687,4.825043],[4.883239,-6.706987,7.679698,3.364749],[-6.487954,5.430517,7.075361,-9.205536],[-6.834111,-6.608062,-3.938681,-0.668913],[-7.899609,7.526871,-4.011472,-6.440121],[-2.096182,5.374183,-4.851517,5.067517],[-4.613834,-4.876132,0.665638,-6.195313],[-4.620187,-7.074227,8.880860,-6.374505],[-4.651994,-4.797185,3.593633,-9.041979],[7.161216,4.131415,7.048887,-7.062164],[7.727157,8.185231,3.816221,3.335402],[2.114846,4.009424,-3.740440,-4.159333],[9.509991,9.708965,9.890242,1.478026],[-7.841822,-8.361000,6.816543,2.693494],[7.016394,-0.438919,-7.273933,3.609675],[6.180616,6.442445,-1.786546,-5.074908],[-6.715534,-4.650804,-8.860806,-6.458312],[2.375721,-3.034907,0.279862,8.465208],[-9.162797,7.375557,1.480401,-1.716258],[5.616675,8.123814,1.719440,-2.068967],[9.003519,3.882880,-9.573936,-6.883641],[-1.982757,-1.166570,0.130159,8.120464],[0.850030,-9.074116,5.885877,-9.214899],[-5.666007,-3.437331,3.023857,6.103186],[-2.184744,-4.063960,-0.248818,-8.096841],[0.334117,-4.061614,-6.976481,7.669854],[6.788750,0.281108,-1.459563,0.352180],[9.554963,2.815601,-0.139615,8.164565],[3.472947,1.422840,6.509850,0.040347],[8.524353,3.785249,1.387688,5.163492],[-6.246071,4.284975,-3.657158,-8.968039],[-2.051265,4.309690,-9.350293,6.814987],[-4.926041,-8.024889,-4.814484,4.449716],[3.350090,-6.403897,2.036868,2.178584],[-9.674938,-3.944473,-7.954647,-3.942151],[-3.147492,9.587514,-9.035388,8.335829],[-2.901674,-1.755631,8.882074,-5.923694],[-8.738256,9.402730,-2.381087,-8.013833],[0.611058,-3.787734,5.770257,-6.643032],[-5.769405,-1.646148,2.511927,8.185956],[3.542038,-5.826714,4.617352,-5.631617],[1.408506,9.187024,-6.879621,-9.900814],[6.761968,6.639541,0.602706,-6.737627],[-3.560243,1.345113,-3.472115,8.525014],[-7.462958,-7.515086,-9.092000,-4.481313],[-9.308967,3.779159,7.815799,-4.780906],[-9.822396,1.905873,-9.083676,3.646586],[-0.057563,-0.446777,-2.846415,8.788491],[2.344605,-5.200614,-8.524504,-0.792435],[8.677714,3.572177,8.880510,8.194225],[-1.444157,-5.247090,-7.450564,9.975393],[-8.945273,-7.796319,7.192051,7.454211],[4.775635,-7.124819,-6.268732,5.517161],[-9.833776,-8.928218,-2.063632,-5.234578],[-9.383035,4.548265,-7.745868,-1.348122],[-8.195604,8.444867,-1.247498,6.565425],[1.563735,5.148293,-1.408223,5.940355],[1.266737,-2.581913,7.858082,-1.836864],[3.858682,-0.793190,-1.715013,-4.021006],[0.570122,-5.616269,6.800501,-8.036629],[6.722079,-4.615972,-0.400450,3.119125],[-6.904572,3.363617,-5.127783,6.975048],[-3.537861,6.449862,-2.156946,2.613044],[-8.567162,1.803412,7.350504,-1.776086],[8.750074,-1.922373,-3.121841,-2.514956],[-8.808220,-1.604934,9.024688,-4.050378],[9.501547,3.061143,-3.371172,-9.157049],[-5.442660,-8.317332,6.767087,6.327283],[4.994279,-0.213674,7.397485,-5.751933],[-8.284347,-8.149114,9.895902,2.744900],[-3.722953,-7.893798,-7.370722,1.617263],[6.681176,-7.651647,-0.773169,7.556369],[-0.338941,8.142816,-7.819025,3.576286],[-1.179976,9.670588,-6.076110,1.429641],[8.442041,9.413994,-2.627797,-6.661398],[-3.723995,-8.197732,-7.200622,7.488732],[8.764088,-9.740060,-7.502393,-2.895730],[4.169990,-4.757448,4.944072,9.718568],[-2.914994,-9.439283,7.332577,-1.384114],[9.878065,0.571552,-1.231936,-5.109399],[2.345905,-7.863588,-0.616916,8.709900],[-7.231547,-9.581487,7.001856,-9.711429],[-0.813983,-5.157777,8.271746,-1.864101],[5.288393,6.667701,-5.064031,8.158558],[-6.048977,0.525783,-3.033904,3.056946],[7.650506,-2.598426,0.572779,-3.003148],[0.241777,2.556822,0.697033,-4.985022],[4.987214,-7.206530,0.238217,-9.926672],[4.253640,5.678600,-0.164692,-2.490072],[-4.870218,-4.927808,5.370032,0.597204],[7.022635,-8.475072,-8.211186,5.317438],[-4.676609,5.982472,9.562059,6.523069],[-5.665904,-8.033393,0.078751,-6.246926],[-4.652609,0.410123,0.475623,-0.184390],[-4.103855,1.148068,6.728054,-2.613535],[-5.118960,-1.450871,5.551116,9.861080],[-9.222518,-8.304989,-4.391827,4.874627],[5.583865,1.100501,6.884846,4.391507],[-6.623328,3.965868,6.871119,1.385996],[0.814076,5.812865,0.426227,-0.270881],[6.992212,-2.648694,1.750651,-4.031560],[-7.013122,0.635286,4.459003,6.130676],[1.527401,-3.176688,2.823259,7.305983],[3.574496,7.035400,5.993161,-8.005086],[3.154799,-8.406064,-1.877616,1.339693],[-9.470364,-2.409250,-6.472693,6.247001],[-8.857969,-1.497550,3.542970,3.113966],[2.454346,-8.978525,-0.487883,7.510893],[3.907000,8.360926,-9.969983,-9.803997],[5.104239,-3.906746,1.006488,-9.189282],[8.180918,4.442439,-5.284208,9.504035],[8.040458,-5.593791,-8.449393,8.029994],[6.727530,9.827092,-0.409984,3.581955],[3.375865,3.032183,5.946253,-8.761399],[-9.874530,-5.107268,-6.442516,-3.731208],[9.244136,-8.749248,-3.214399,8.773195],[-7.834874,3.854661,-6.012358,-5.395906],[6.235942,-0.972501,7.582479,6.215431],[-1.903083,-0.109343,-2.672629,4.488892],[1.457235,0.361050,2.419673,-7.541887],[-6.631371,-2.777263,-6.125091,-5.600424],[-2.213610,-5.746822,4.989372,-8.241635],[2.286789,9.538759,4.922009,0.992413],[-8.575296,7.669136,8.481120,1.551893],[5.449192,4.012068,-2.441813,7.952061],[-9.544535,4.629577,-1.084799,-9.413318],[-8.135091,8.981117,-2.974982,7.074861],[9.837573,-5.140702,-8.628127,-1.323188],[-3.502985,2.750286,2.833441,6.669559],[-4.290893,-9.223700,-0.667129,3.817240],[-1.334148,2.949140,4.844239,4.847127],[7.505323,-0.643157,3.940814,3.541672],[-8.133119,-8.131589,-4.427888,9.491172],[-2.892448,8.866537,-5.750314,-6.600787],[6.285768,1.084548,-7.332036,3.266726],[9.632742,0.296230,8.500190,-2.144410],[8.954936,2.672791,-9.804760,-9.243104],[-6.042087,-8.814131,-4.152172,6.106812],[-2.297714,9.128992,0.109169,-3.060846],[-1.693004,4.883168,-8.134818,4.470600],[5.977229,6.296418,7.688146,-5.835971],[6.194924,8.414220,1.312556,2.980003],[0.970833,-6.754770,-4.420176,9.244171],[-5.549363,-9.490648,-4.661609,-7.767078],[-4.418997,-2.165433,-2.616807,-7.023498],[5.838106,9.512194,-5.721701,-5.283798],[4.108085,2.647639,5.863374,-3.691346],[4.576485,-1.879539,-8.613324,1.104269],[9.561441,4.530813,6.949452,0.469257],[5.246116,3.482158,-7.452228,3.105349],[1.312114,5.388309,-9.431105,-2.892784],[-3.215031,5.857856,-0.033048,0.237304],[-7.666455,7.699427,-6.916428,-9.600197],[6.710707,-1.338442,0.230184,-9.429642],[-9.946355,5.197599,3.087110,-8.730520],[3.145555,5.167269,4.646213,2.783530],[0.412379,8.840991,1.211493,2.051089],[5.672448,-1.727053,5.750090,8.200651],[-5.383498,-0.312530,8.779428,0.693460],[0.810854,-6.727771,-2.664596,-1.123415],[-4.813849,0.633581,-3.205626,-6.086809],[-1.915808,-8.376013,9.372436,0.519546],[5.764792,-3.823362,3.886299,8.628845],[-9.426519,5.926683,3.755018,-1.348195],[6.399101,6.600641,-6.316687,1.547914],[2.917060,-2.647079,-1.088844,-0.922640],[-5.559004,-6.623680,2.461676,-3.925651],[0.710109,-5.405539,2.106123,-5.815161],[-2.841034,-1.384990,2.833470,-0.316744],[-5.479124,-7.989920,-4.257023,-7.036094],[9.366182,-9.986876,-1.609357,-5.066131],[-7.330836,-4.621114,8.202655,-4.033565],[-2.013936,-6.766767,6.726623,-5.996894],[2.030235,-9.316219,-5.303037,-1.466885],[2.071350,-1.104364,6.479001,2.096108],[4.724217,-8.813141,-9.003243,-3.054804],[3.571697,-8.206224,6.963133,-8.011667],[2.834730,2.482813,6.481569,3.034128],[-4.806552,-0.346278,-5.774512,-1.069409],[9.555058,-1.208348,8.294987,7.740022],[1.069298,4.494376,-5.071560,-5.254788],[-9.657770,1.402905,4.918402,-0.646263],[-9.056203,-2.248238,-7.992458,-7.827032],[0.641661,8.097845,-0.719732,4.331412],[6.685457,-7.498808,1.661882,3.864719],[-2.917128,5.793460,-0.038172,-7.352158],[2.484478,1.557990,8.114211,2.154879],[8.403343,4.261453,5.556710,3.154425],[-2.806438,5.137843,-2.961669,8.900942],[4.040748,1.317511,7.024374,3.663182],[-1.012027,-4.691271,-5.015589,-4.676557],[3.938713,5.999049,-5.641607,4.031787],[4.562376,-3.366508,6.156537,-3.915974],[7.794999,-9.498353,1.393295,5.935160],[3.655150,3.774596,0.435303,1.286636],[-0.472957,-7.710236,6.771569,9.558588],[-6.996291,9.908369,8.253611,-7.449302],[3.556127,0.099420,-6.348318,-0.265127],[9.970679,-5.278096,6.903530,7.168575],[-4.472102,-5.722059,8.848741,-5.089892],[-3.676308,6.542115,-9.407766,-3.982871],[6.350980,-8.567626,-4.430283,7.835918],[7.609989,-5.192165,5.362435,-4.785252],[8.629626,9.671175,-5.354862,-3.235197],[6.558346,-1.570063,-5.142109,5.487747],[6.791772,8.237317,-0.615302,6.995535],[-7.590642,-3.665077,8.882493,-6.047648],[-1.156007,6.490332,0.330348,5.877274],[9.171245,-8.657359,-2.424023,7.423025],[-9.580558,0.828133,5.994777,-1.787959],[-7.004948,5.325618,3.778972,0.195448],[-3.830131,-1.590289,-9.746137,-0.436001],[1.515698,7.580808,2.931130,5.308257],[-7.479946,-8.151992,2.574013,0.679820],[-9.072343,6.618741,-0.760918,0.622009],[3.770657,0.573649,1.682720,-7.419709],[-8.420431,-9.076713,-0.327791,0.243693],[-8.949522,7.756052,-3.403200,7.875244],[1.498774,-4.407281,5.933701,-7.554312],[8.720541,2.287565,-2.032580,-8.355336],[4.528025,-3.226719,-0.454919,-3.767126],[6.331319,6.760561,6.372778,-3.984209],[2.779738,-0.432194,-5.904234,-7.655725],[-2.346259,-3.434370,1.379031,-6.528419],[2.158571,-8.924728,-9.895568,-2.721323],[-8.651362,-3.472614,8.509082,7.025430],[1.291442,9.687695,-1.247040,-8.145412],[3.882200,5.547232,8.628279,-6.245483],[-3.283080,-7.549651,4.887152,3.913821],[-0.731105,5.309455,-6.692625,8.654799],[0.393533,-4.686484,-2.741185,-2.471567],[4.013449,-4.843487,3.267429,-8.133951],[1.105942,8.572329,6.220286,3.281586],[-6.018030,8.302089,5.827872,-1.642366],[-3.214755,-4.910895,9.619752,-8.167406],[2.298688,7.515318,9.975083,-7.479006],[0.198222,-6.668331,-8.424482,-0.401305],[-2.896664,-8.261709,-6.756077,-7.325983],[5.560532,3.822721,-4.607455,9.013702],[-1.426838,-0.018281,-4.116378,6.994041],[-9.582636,5.537005,1.550388,2.110955],[8.798235,0.403437,8.198849,-5.566196],[-9.378605,3.581522,-2.663092,-8.427242],[-0.759811,-3.120317,-3.858099,-2.292398],[2.160796,6.788431,7.483966,3.495978],[-7.912695,7.978990,-2.643746,-0.429481],[0.896224,1.407198,0.582921,5.491159],[2.157338,-5.737613,7.309298,-7.735941],[-5.601750,1.991796,5.411687,1.993863],[4.380521,2.477295,-7.637993,-8.890655],[4.313433,4.074812,-4.775387,-7.418810],[2.928867,0.491098,2.068719,1.112296],[2.297240,-1.508291,8.408509,8.835516],[-5.819168,0.767286,-3.355802,-3.969645],[8.876291,-8.224627,-4.255220,4.755696],[-3.566268,-8.534186,2.167464,8.834388],[-4.157688,0.336473,6.697531,-6.945614],[9.414779,7.074899,-2.794409,5.019751],[2.035413,4.142126,1.160686,6.847916],[8.644342,9.165159,-9.645955,7.315988],[-3.200996,-4.223105,5.587483,9.373713],[-8.037147,4.953283,9.722375,0.736677],[-1.753019,-8.999481,2.945632,5.830103],[-3.139619,9.026584,-3.128112,5.382581],[4.482907,-9.323150,0.484652,2.133663],[-5.562070,-1.362760,-6.176766,0.377535],[-5.359348,-5.256461,5.998115,-3.272945],[-5.587637,-7.290954,-1.710858,-9.747299],[-7.421306,3.829737,-6.014145,7.487013],[8.797818,-3.625514,9.827447,-4.274454],[-5.383854,-7.500492,4.935540,6.352874],[-1.027116,-1.834922,1.920237,8.587693],[6.592392,5.895041,4.431766,9.845515],[-6.688068,-9.154012,3.590979,6.429070],[7.507443,7.972741,-6.468222,8.445368],[5.751253,-1.388310,-3.584057,-8.460225],[-0.571410,5.541428,-8.095269,-2.301341],[9.695853,7.081317,2.169647,-7.675142],[-1.334355,8.417149,-5.995455,3.029150],[-2.537497,-2.242889,8.125729,9.295889],[6.141846,-9.566024,7.116917,-7.987610],[5.709457,6.120439,0.537214,-7.215446],[0.025002,-3.093976,-3.559181,4.770035],[5.052121,5.572340,-8.412721,-9.655043],[1.476725,-6.273279,8.729976,5.417992],[-4.189007,-3.132192,-2.772752,5.709880],[-0.701464,3.535561,0.756169,-3.920108],[6.414473,-2.053495,-7.569585,8.377265],[1.856581,-0.236121,-0.897830,4.993587],[-4.727438,-2.886952,-1.944212,-5.312147],[-2.093102,8.498927,8.693365,-4.644670],[1.198873,-9.679789,-4.458036,-9.846994],[7.988961,-7.119019,-6.080850,-9.773122],[1.035077,-6.073130,-4.800906,7.233629],[-4.207449,6.343330,-7.457143,-8.064007],[-7.439242,3.366294,-1.451628,-8.609161],[-1.638840,-9.191709,-2.635967,5.693749],[0.728080,-2.173837,-1.268503,-2.237056],[-6.425970,-1.102716,-2.808502,3.728476],[-3.870626,3.188438,-7.396340,-0.145811],[-0.446939,4.058378,-8.762069,8.134835],[-7.226500,0.516587,3.896145,-4.125989],[8.231380,-9.173814,2.627785,-5.188359],[-7.084849,8.036634,7.441307,3.745019],[-9.989344,4.203247,5.496593,-1.777200],[-0.377838,-7.490829,-6.314048,6.786289],[-7.624349,6.991893,2.664240,1.984884],[2.653332,-8.442915,-8.424772,-2.075201],[3.072803,6.746973,-1.411200,-4.832694],[-8.620283,-7.447814,9.644584,-9.004854],[4.946167,-2.615368,-7.795278,-1.633707],[-1.660013,-0.763277,-5.240947,5.777428],[-2.106537,-6.529073,-5.378059,8.608159],[-7.755515,9.232832,-7.844759,8.070533],[4.459057,-2.114992,0.343623,4.954666],[-0.368802,-3.564749,8.506675,-4.858118],[5.955256,-5.779798,8.007880,-8.852994],[-2.112228,-1.175258,2.047157,-6.979296],[5.914636,-7.146605,-7.564665,-5.119159],[-5.301735,0.992680,-3.984187,5.322200],[0.500946,6.754966,-3.845609,-1.733072],[-6.419629,2.296247,-3.658383,-0.309258],[-8.127557,-7.784349,4.215014,4.435326],[4.964377,5.627834,-6.858034,8.130011],[-7.329475,0.703596,-7.467742,5.335445],[-8.643194,1.513608,6.142151,-3.047845],[-9.340807,-8.942159,9.784333,1.251987],[-2.500741,-9.647608,-8.188872,-1.090435],[-1.762731,4.580417,6.551981,3.353263],[9.563035,-2.256214,8.611346,-4.164846],[9.033083,9.851791,7.654387,-7.741177],[4.074688,-8.324041,-5.306908,-2.543027],[-0.567126,-2.382463,3.089819,5.763484],[-5.773709,3.278092,-3.982129,6.147326],[-2.760364,-0.456775,-8.047892,9.162185],[2.773678,1.820790,6.215240,0.907387],[3.778107,7.506999,1.344300,6.170243],[7.591519,4.051071,-2.969814,5.445370],[9.858202,-7.491057,-4.161856,7.780314],[-7.868404,-4.992003,8.411824,6.018489],[1.961669,4.620120,-9.530720,-6.110136],[5.226922,5.429677,-2.686613,-9.022523],[7.927146,0.641913,-4.318666,3.902797],[1.533113,-8.438793,0.511507,3.647729],[3.930655,-3.057662,5.800618,0.561069],[-0.201207,0.555816,1.321398,6.026217],[-4.609738,0.456163,3.187936,8.031288],[-3.538535,7.883777,-9.693846,-8.115701],[1.374052,8.274602,2.581866,9.661897],[1.616086,-5.142901,-6.818026,3.362556],[6.151513,-6.962140,-1.573117,7.901505],[3.846761,-9.435236,-3.669935,7.327214],[5.601654,-8.016640,9.371038,9.653145],[-6.655336,-3.308751,6.311961,-2.401369],[-8.873334,5.852534,-4.079889,5.083326],[-0.669838,9.200217,-8.154579,-2.860939],[6.192211,-4.590494,6.961658,-2.220333],[2.657778,-2.155779,-6.109382,6.742466],[6.952267,1.517132,-6.827185,-7.496716],[2.297236,7.445513,-9.152061,5.734286],[-7.361825,5.925309,3.972957,-6.549039],[-5.987660,3.380167,5.124362,6.088060],[-4.197460,-1.273274,8.800581,8.720494],[3.028034,-4.863630,-0.584250,6.688757],[7.643139,-4.821869,-5.335385,2.130774],[-0.208613,-1.345287,-8.364198,-9.838862],[-5.509554,8.331605,7.161312,-3.641692],[7.258871,3.922261,6.617750,-0.569153],[2.917545,1.270831,0.314303,-5.513043],[-8.328866,9.745756,-8.291206,9.642172],[7.764962,-9.733731,9.249671,6.062061],[3.895892,-9.312318,0.012814,0.950640],[-0.245465,5.487514,1.350501,7.722449],[-2.951020,-5.793353,-8.838128,2.142353],[-8.793391,1.976358,0.234955,-9.271937],[5.864017,2.979980,-4.123422,0.806098],[5.052772,-2.964046,-2.478926,-8.753007],[8.396063,6.455911,-4.187589,4.964814],[-1.477100,-8.907365,8.637786,-8.845103],[-6.666612,1.233325,-9.015119,6.155055],[0.925660,-6.636805,5.597087,-7.756937],[-5.934328,-5.974145,3.351199,1.964261],[-4.648904,1.911575,6.916260,-8.999324],[9.158142,-6.118047,-3.195697,3.481817],[9.199151,9.917407,1.546222,7.276618],[5.653343,-6.910964,7.335626,-5.794799],[-5.772679,1.032477,9.762491,5.581078],[-2.058722,-9.234299,0.452389,-8.331158],[-8.769248,3.338497,-2.144666,2.569943],[-6.973353,-2.512991,4.395961,-3.005684],[-1.661975,8.242419,2.862962,-1.034577],[-6.396528,6.243725,-2.262190,0.013774],[2.466826,-5.845575,1.030228,-4.163838],[-6.340171,-9.017444,5.002169,6.046649],[-0.457652,-3.934130,9.825832,5.034679],[3.595492,0.315046,5.867590,-6.095143],[6.606680,-3.480292,-3.078735,-0.108435],[9.587329,8.351748,2.669372,-8.203695],[0.607128,-7.255077,6.587590,5.145683],[-7.228730,-9.116157,5.876112,-6.820235],[-6.495540,5.087867,6.894443,8.294592],[-5.956105,-8.769726,6.909728,-1.689696],[4.819842,0.610243,-9.599026,4.157696],[1.380738,-4.782115,4.098228,4.864136],[2.160168,-7.492970,-0.078622,9.032716],[-1.521667,6.766435,-9.903528,9.818185],[-3.459798,-0.996266,7.468812,6.115983],[-7.138622,2.728660,-1.852222,6.398750],[1.670363,6.281943,8.759495,7.231269],[-5.556335,3.925052,-7.909397,-6.137826],[1.436825,7.282780,-5.866252,9.339776],[1.141459,-6.960305,3.716905,6.577425],[-0.640693,-1.549507,-7.177411,1.707461],[-7.971098,4.036090,2.529178,1.911066],[2.100563,6.416315,1.446205,-4.234931],[2.306207,0.373984,-8.215861,-3.417863],[1.350263,-4.714857,-8.868198,-1.584658],[-3.591400,1.540759,4.310381,-3.623732],[6.233651,-9.163728,-1.509604,5.059716],[-4.860854,-8.754049,-7.469859,4.271488],[9.162295,4.285607,7.585098,9.119647],[9.751579,-0.862320,5.126870,5.964449],[-9.508337,-7.225384,-6.499501,1.659747],[-9.679879,0.610556,-0.318839,-7.025426],[-1.645394,6.256518,1.581178,6.305012],[6.186190,3.274454,-1.519049,7.059271],[-9.037907,0.992627,-1.634416,3.773308],[-0.256621,5.284116,2.863499,7.871975],[6.010240,-6.564368,0.886693,5.713226],[5.866704,2.523750,-1.603426,-7.709287],[-4.343658,1.582572,-2.446462,2.548061]], dtype = "float32")#candidate|6053|(784, 4)|const|float32
var_6054 = relay.var("var_6054", dtype = "float64", shape = (693,))#candidate|6054|(693,)|var|float64
call_6052 = relay.TupleGetItem(func_5945_call(relay.reshape(const_6053.astype('float32'), [3136,]), relay.reshape(var_6054.astype('float64'), [693,]), relay.reshape(call_6047.astype('int32'), [1008,]), ), 2)
call_6055 = relay.TupleGetItem(func_5949_call(relay.reshape(const_6053.astype('float32'), [3136,]), relay.reshape(var_6054.astype('float64'), [693,]), relay.reshape(call_6047.astype('int32'), [1008,]), ), 2)
func_4197_call = mod.get_global_var('func_4197')
func_4200_call = mutated_mod.get_global_var('func_4200')
call_6081 = relay.TupleGetItem(func_4197_call(relay.reshape(call_6047.astype('int32'), [12, 12, 7])), 0)
call_6082 = relay.TupleGetItem(func_4200_call(relay.reshape(call_6047.astype('int32'), [12, 12, 7])), 0)
func_3521_call = mod.get_global_var('func_3521')
func_3526_call = mutated_mod.get_global_var('func_3526')
var_6084 = relay.var("var_6084", dtype = "float64", shape = (2496,))#candidate|6084|(2496,)|var|float64
const_6085 = relay.const([[-5.066060,-4.846421,3.103048],[2.859126,4.909298,-2.737130],[-8.632586,3.218071,-5.753625],[-0.679798,5.044770,-2.948380],[5.171298,-1.018248,-5.678270]], dtype = "float32")#candidate|6085|(5, 3)|const|float32
const_6086 = relay.const([1,2,9,-2,10,2,8,-10,-4,8,-7,2,3,-9,-8,-7,8,2,3,10,4,1,-6,6,5,-1,-1,4,-6,2,-3,6,10,9,-1,-9,10,7,-10,-7,7,7,-10,3,-8,-3,-7,2,-6,3,1,2,-1,-9,-10,-7,-4,-4,-7,-2,3,6,4,-9,1,8,3,5,-7,-6,1,-5,-8,-9,7,10,9,-1,-7,5,-2,2,-3,1,9,8,-1,-5,3,1,-9,3,8,3,6,-3,-1,4,-2,-5,-2,-3,7,9,-5,-1,3,4,-9,7,5,4,7,-3,2,-1,10,-7,-1,-6,-9,1,-2,-3,2,-6,2,-6,-7,9,4,6,-2,-10,7,9,4,8,-5,-8,-3,-5,-6,3,9,-5,-1,-6,1,-6,-1,-6,7,2,7,10,-6,-4,-7,8,-10,-8,3,2,1,6,-2,-8,8,-10,9,4,4,-10,4,6,10,-3,-7,8,-2,9,-9,-5,-8,2,5,-5,-4,2,10,4,-2,-4,3,-9,8,-10,-7,-4,10,-2,-1,-3,-9,-5,-3,-2,5,3,8,4,10,-3,-1,-1,10,-5,8,10,-5,8,-3,2,-6,9,-9,-2,-6,-7,9,-7,1,3,-10,-9,-7,2,9,1,10,-1,-2,-9,7,5,-4,-8,4,4,-4,8,10,-5,-3,4,6,-2,6,5,7,-1,4,-4,1,-2,-1,-6,8,1,8,5,-9,-10,-8,2,9,-6,1,9,10,-6,-2,3,6,3,9,7,7,-7,-4,-10,-10,-4,-6,4,-8,8,-3,-10,-5,4,-1,4,-8,-2,-7,5,-1,-10,-6,5,-3,2,4,-8,6,-4,10,-6,-8,1,3,3,-7,-10,-7,6,8,7,-1,2,6,-8,-4,5,5,7,5,1,-5,4,-10,4,-10,9,-8,1,-8,10,-3,4,-4,5,5,1,1,-1,-8,8,-6,9,9,-7,9,9,-4,-10,-5,8,-5,9,-4,6,5,-10,-10,-6,1,5,1,-5,-6,5,-2,-1,-10,2,3,8,9,-3,-8,-7,2,-10,6,2,-10,3,-8,8,9,3,-7,1,8,-6,-3,-5,5,-2,1,-2,10,3,-4,-7,-3,4,-1,6,1,8,-7,2,8,-4,7,10,-3,-5,-5,9,-3,8,10,-7,-9,4,8,7,-10,-7,-9,4,1,1,2,-6,3,-10,9,5,-2,4,-4,6,-4,-3,-9,8,-8,7,-9,4,-8,-6,-4,7,-9,-6,3,-9,6,-1,10,-6,-8,-6,-8,8,9,-5,6,-8,2,-10,-7,-2,-2,7,-2,-8,-8,7,9,3,3,10,7,-4,4,-2], dtype = "int64")#candidate|6086|(504,)|const|int64
var_6087 = relay.var("var_6087", dtype = "uint64", shape = (14,))#candidate|6087|(14,)|var|uint64
call_6083 = relay.TupleGetItem(func_3521_call(relay.reshape(var_6084.astype('float64'), [13, 16, 12]), relay.reshape(const_6085.astype('float32'), [15,]), relay.reshape(const_6086.astype('int64'), [504,]), relay.reshape(var_6087.astype('uint64'), [14, 1]), ), 3)
call_6088 = relay.TupleGetItem(func_3526_call(relay.reshape(var_6084.astype('float64'), [13, 16, 12]), relay.reshape(const_6085.astype('float32'), [15,]), relay.reshape(const_6086.astype('int64'), [504,]), relay.reshape(var_6087.astype('uint64'), [14, 1]), ), 3)
func_5945_call = mod.get_global_var('func_5945')
func_5949_call = mutated_mod.get_global_var('func_5949')
call_6097 = relay.TupleGetItem(func_5945_call(relay.reshape(const_6053.astype('float32'), [3136,]), relay.reshape(var_6054.astype('float64'), [693,]), relay.reshape(call_6047.astype('int32'), [1008,]), ), 5)
call_6098 = relay.TupleGetItem(func_5949_call(relay.reshape(const_6053.astype('float32'), [3136,]), relay.reshape(var_6054.astype('float64'), [693,]), relay.reshape(call_6047.astype('int32'), [1008,]), ), 5)
func_4728_call = mod.get_global_var('func_4728')
func_4732_call = mutated_mod.get_global_var('func_4732')
var_6121 = relay.var("var_6121", dtype = "float64", shape = (832,))#candidate|6121|(832,)|var|float64
call_6120 = relay.TupleGetItem(func_4728_call(relay.reshape(var_6121.astype('float64'), [8, 8, 13]), relay.reshape(var_6121.astype('float64'), [8, 8, 13]), ), 1)
call_6122 = relay.TupleGetItem(func_4732_call(relay.reshape(var_6121.astype('float64'), [8, 8, 13]), relay.reshape(var_6121.astype('float64'), [8, 8, 13]), ), 1)
output = relay.Tuple([call_6047,call_6052,const_6053,var_6054,call_6081,call_6083,var_6084,const_6085,const_6086,var_6087,call_6097,call_6120,var_6121,])
output2 = relay.Tuple([call_6048,call_6055,const_6053,var_6054,call_6082,call_6088,var_6084,const_6085,const_6086,var_6087,call_6098,call_6122,var_6121,])
func_6138 = relay.Function([var_6054,var_6084,var_6087,var_6121,], output)
mod['func_6138'] = func_6138
mod = relay.transform.InferType()(mod)
mutated_mod['func_6138'] = func_6138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6138_call = mutated_mod.get_global_var('func_6138')
var_6140 = relay.var("var_6140", dtype = "float64", shape = (693,))#candidate|6140|(693,)|var|float64
var_6141 = relay.var("var_6141", dtype = "float64", shape = (2496,))#candidate|6141|(2496,)|var|float64
var_6142 = relay.var("var_6142", dtype = "uint64", shape = (14,))#candidate|6142|(14,)|var|uint64
var_6143 = relay.var("var_6143", dtype = "float64", shape = (832,))#candidate|6143|(832,)|var|float64
call_6139 = func_6138_call(var_6140,var_6141,var_6142,var_6143,)
output = call_6139
func_6144 = relay.Function([var_6140,var_6141,var_6142,var_6143,], output)
mutated_mod['func_6144'] = func_6144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6165 = relay.var("var_6165", dtype = "int16", shape = (9, 1, 4))#candidate|6165|(9, 1, 4)|var|int16
const_6166 = relay.const([[[-9,-2,-3,-10],[8,-8,-9,8]],[[-9,-10,-2,-4],[-7,-10,-7,-5]],[[-3,7,-3,5],[-10,-4,5,-5]],[[-9,-7,-1,1],[-8,-5,1,3]],[[-6,-10,-7,10],[7,-6,-8,-9]],[[6,-9,7,-5],[8,1,-1,-1]],[[-5,7,5,-1],[5,-9,10,9]],[[5,5,7,6],[1,3,2,-10]],[[-7,2,4,6],[-3,-2,4,3]]], dtype = "int16")#candidate|6166|(9, 2, 4)|const|int16
bop_6167 = relay.subtract(var_6165.astype('int16'), const_6166.astype('int16')) # shape=(9, 2, 4)
func_4904_call = mod.get_global_var('func_4904')
func_4905_call = mutated_mod.get_global_var('func_4905')
call_6172 = relay.TupleGetItem(func_4904_call(), 1)
call_6173 = relay.TupleGetItem(func_4905_call(), 1)
func_5772_call = mod.get_global_var('func_5772')
func_5774_call = mutated_mod.get_global_var('func_5774')
call_6199 = relay.TupleGetItem(func_5772_call(), 1)
call_6200 = relay.TupleGetItem(func_5774_call(), 1)
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
const_6210 = relay.const([-7.060626,-3.212954,7.809220,-8.325176,6.222618,-5.203416,-3.695705,9.061865,-9.572558,6.090977,7.314365,1.912140,2.522659,7.953460,-0.408975,2.752589,-8.986664,-6.519826,-0.375631,3.252427,9.174050,-8.532022,4.464018,1.877217,-7.761226,3.946410,4.125815,3.572819,-3.284555,3.711815,-8.922899,-2.720727,-4.888915,9.122864,3.766732,-1.011012,-8.984597,-8.151415,-3.002674,-3.414378,-1.129789,-4.484889,-8.002833,4.423433,1.204379,0.950594,1.531840,-9.137453,-3.105281,-6.475937,-6.169600,-0.567154,-7.608781,2.991448,5.585294,1.021834,3.621306,4.445448,-4.871294,9.145590,6.850829,6.742569,-9.140367,3.961701,1.806239,-6.500132,-8.129083,6.367657,-8.773400,-6.804096,-3.905230,1.334295,7.931584,4.453471,2.727056,7.532106,3.075785,9.346198,7.948775,-3.086161,5.277085,-0.529319,9.251279,-7.794287,-9.234017,2.406503,-3.019440,0.021609,4.772558,6.422216,7.427147,-9.440983,-9.554779,-4.241308,-8.096722,-2.210189,7.153395,2.229804,-8.658839,-9.058177,-3.981265,4.523666,7.865929,3.443847,9.018507,7.802624,1.488508,0.471524,-1.635421,1.089393,-2.549759,-6.756901,0.745277,8.101816,2.399880,-7.555764,8.382401,-9.758226,-4.972950,-8.961637,2.475312,-7.558236,6.179276,-6.002067,6.911686,-9.438199,6.894315,-7.923396,-9.054039,9.730351,3.152610,-7.247011,4.706072,5.593594,-0.789382,-0.655504,-2.326087,-0.781477,-9.817084,7.932683,1.566654,-4.522723,-4.104574,4.911930,-9.392916,-5.571476,-6.472913,-6.191497,3.010407,-6.607947,2.406692,5.912248,2.451648,0.950095,-0.119167,-1.821912,-1.599932,3.083121,2.206334,-9.482435,9.017828,4.288984,0.338053,6.167341,-7.327647,-7.027094,-2.555602,3.269342,6.379655,-1.742270,5.829815,6.101410,9.104562,-0.377375,9.024902,-8.542372,9.062243,2.049946,3.991277,5.716317,-2.667616,-6.806120], dtype = "float64")#candidate|6210|(182,)|const|float64
call_6209 = func_4416_call(relay.reshape(const_6210.astype('float64'), [1, 14, 13]))
call_6211 = func_4416_call(relay.reshape(const_6210.astype('float64'), [1, 14, 13]))
uop_6217 = relay.atan(call_6199.astype('float64')) # shape=(8, 8, 13)
uop_6219 = relay.atan(call_6200.astype('float64')) # shape=(8, 8, 13)
output = relay.Tuple([bop_6167,call_6172,call_6209,const_6210,uop_6217,])
output2 = relay.Tuple([bop_6167,call_6173,call_6211,const_6210,uop_6219,])
func_6227 = relay.Function([var_6165,], output)
mod['func_6227'] = func_6227
mod = relay.transform.InferType()(mod)
mutated_mod['func_6227'] = func_6227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6228 = relay.var("var_6228", dtype = "int16", shape = (9, 1, 4))#candidate|6228|(9, 1, 4)|var|int16
func_6227_call = mutated_mod.get_global_var('func_6227')
call_6229 = func_6227_call(var_6228)
output = call_6229
func_6230 = relay.Function([var_6228], output)
mutated_mod['func_6230'] = func_6230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4572_call = mod.get_global_var('func_4572')
func_4574_call = mutated_mod.get_global_var('func_4574')
call_6265 = relay.TupleGetItem(func_4572_call(), 1)
call_6266 = relay.TupleGetItem(func_4574_call(), 1)
output = relay.Tuple([call_6265,])
output2 = relay.Tuple([call_6266,])
func_6270 = relay.Function([], output)
mod['func_6270'] = func_6270
mod = relay.transform.InferType()(mod)
output = func_6270()
func_6271 = relay.Function([], output)
mutated_mod['func_6271'] = func_6271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3578_call = mod.get_global_var('func_3578')
func_3579_call = mutated_mod.get_global_var('func_3579')
call_6409 = func_3578_call()
call_6410 = func_3578_call()
func_4728_call = mod.get_global_var('func_4728')
func_4732_call = mutated_mod.get_global_var('func_4732')
var_6412 = relay.var("var_6412", dtype = "float64", shape = (832,))#candidate|6412|(832,)|var|float64
call_6411 = relay.TupleGetItem(func_4728_call(relay.reshape(var_6412.astype('float64'), [8, 8, 13]), relay.reshape(var_6412.astype('float64'), [8, 8, 13]), ), 1)
call_6413 = relay.TupleGetItem(func_4732_call(relay.reshape(var_6412.astype('float64'), [8, 8, 13]), relay.reshape(var_6412.astype('float64'), [8, 8, 13]), ), 1)
func_2213_call = mod.get_global_var('func_2213')
func_2215_call = mutated_mod.get_global_var('func_2215')
call_6444 = relay.TupleGetItem(func_2213_call(), 0)
call_6445 = relay.TupleGetItem(func_2215_call(), 0)
func_2825_call = mod.get_global_var('func_2825')
func_2827_call = mutated_mod.get_global_var('func_2827')
call_6467 = relay.TupleGetItem(func_2825_call(), 0)
call_6468 = relay.TupleGetItem(func_2827_call(), 0)
func_4139_call = mod.get_global_var('func_4139')
func_4140_call = mutated_mod.get_global_var('func_4140')
call_6472 = relay.TupleGetItem(func_4139_call(), 0)
call_6473 = relay.TupleGetItem(func_4140_call(), 0)
output = relay.Tuple([call_6409,call_6411,var_6412,call_6444,call_6467,call_6472,])
output2 = relay.Tuple([call_6410,call_6413,var_6412,call_6445,call_6468,call_6473,])
func_6479 = relay.Function([var_6412,], output)
mod['func_6479'] = func_6479
mod = relay.transform.InferType()(mod)
mutated_mod['func_6479'] = func_6479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6480 = relay.var("var_6480", dtype = "float64", shape = (832,))#candidate|6480|(832,)|var|float64
func_6479_call = mutated_mod.get_global_var('func_6479')
call_6481 = func_6479_call(var_6480)
output = call_6481
func_6482 = relay.Function([var_6480], output)
mutated_mod['func_6482'] = func_6482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4904_call = mod.get_global_var('func_4904')
func_4905_call = mutated_mod.get_global_var('func_4905')
call_6488 = relay.TupleGetItem(func_4904_call(), 1)
call_6489 = relay.TupleGetItem(func_4905_call(), 1)
output = relay.Tuple([call_6488,])
output2 = relay.Tuple([call_6489,])
func_6510 = relay.Function([], output)
mod['func_6510'] = func_6510
mod = relay.transform.InferType()(mod)
mutated_mod['func_6510'] = func_6510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6510_call = mutated_mod.get_global_var('func_6510')
call_6511 = func_6510_call()
output = call_6511
func_6512 = relay.Function([], output)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3681_call = mod.get_global_var('func_3681')
func_3683_call = mutated_mod.get_global_var('func_3683')
call_6552 = relay.TupleGetItem(func_3681_call(), 0)
call_6553 = relay.TupleGetItem(func_3683_call(), 0)
func_3578_call = mod.get_global_var('func_3578')
func_3579_call = mutated_mod.get_global_var('func_3579')
call_6554 = func_3578_call()
call_6555 = func_3578_call()
output = relay.Tuple([call_6552,call_6554,])
output2 = relay.Tuple([call_6553,call_6555,])
func_6570 = relay.Function([], output)
mod['func_6570'] = func_6570
mod = relay.transform.InferType()(mod)
mutated_mod['func_6570'] = func_6570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6570_call = mutated_mod.get_global_var('func_6570')
call_6571 = func_6570_call()
output = call_6571
func_6572 = relay.Function([], output)
mutated_mod['func_6572'] = func_6572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3906_call = mod.get_global_var('func_3906')
func_3908_call = mutated_mod.get_global_var('func_3908')
call_6573 = relay.TupleGetItem(func_3906_call(), 2)
call_6574 = relay.TupleGetItem(func_3908_call(), 2)
func_2605_call = mod.get_global_var('func_2605')
func_2607_call = mutated_mod.get_global_var('func_2607')
var_6588 = relay.var("var_6588", dtype = "float64", shape = (693,))#candidate|6588|(693,)|var|float64
call_6587 = relay.TupleGetItem(func_2605_call(relay.reshape(var_6588.astype('float64'), [11, 9, 7])), 0)
call_6589 = relay.TupleGetItem(func_2607_call(relay.reshape(var_6588.astype('float64'), [11, 9, 7])), 0)
func_4391_call = mod.get_global_var('func_4391')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_6598 = func_4391_call(relay.reshape(call_6573.astype('float64'), [12, 12, 7]))
call_6599 = func_4391_call(relay.reshape(call_6573.astype('float64'), [12, 12, 7]))
output = relay.Tuple([call_6573,call_6587,var_6588,call_6598,])
output2 = relay.Tuple([call_6574,call_6589,var_6588,call_6599,])
func_6601 = relay.Function([var_6588,], output)
mod['func_6601'] = func_6601
mod = relay.transform.InferType()(mod)
var_6602 = relay.var("var_6602", dtype = "float64", shape = (693,))#candidate|6602|(693,)|var|float64
output = func_6601(var_6602)
func_6603 = relay.Function([var_6602], output)
mutated_mod['func_6603'] = func_6603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5451_call = mod.get_global_var('func_5451')
func_5452_call = mutated_mod.get_global_var('func_5452')
call_6608 = relay.TupleGetItem(func_5451_call(), 1)
call_6609 = relay.TupleGetItem(func_5452_call(), 1)
func_4667_call = mod.get_global_var('func_4667')
func_4669_call = mutated_mod.get_global_var('func_4669')
call_6621 = relay.TupleGetItem(func_4667_call(), 2)
call_6622 = relay.TupleGetItem(func_4669_call(), 2)
func_4066_call = mod.get_global_var('func_4066')
func_4069_call = mutated_mod.get_global_var('func_4069')
call_6627 = relay.TupleGetItem(func_4066_call(relay.reshape(call_6621.astype('int32'), [12, 12, 7])), 0)
call_6628 = relay.TupleGetItem(func_4069_call(relay.reshape(call_6621.astype('int32'), [12, 12, 7])), 0)
output = relay.Tuple([call_6608,call_6621,call_6627,])
output2 = relay.Tuple([call_6609,call_6622,call_6628,])
func_6642 = relay.Function([], output)
mod['func_6642'] = func_6642
mod = relay.transform.InferType()(mod)
output = func_6642()
func_6643 = relay.Function([], output)
mutated_mod['func_6643'] = func_6643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6644 = relay.var("var_6644", dtype = "int8", shape = (1, 12, 7))#candidate|6644|(1, 12, 7)|var|int8
var_6645 = relay.var("var_6645", dtype = "int8", shape = (10, 12, 7))#candidate|6645|(10, 12, 7)|var|int8
bop_6646 = relay.less(var_6644.astype('bool'), var_6645.astype('bool')) # shape=(10, 12, 7)
func_2882_call = mod.get_global_var('func_2882')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_6649 = func_2882_call()
call_6650 = func_2882_call()
bop_6653 = relay.not_equal(bop_6646.astype('bool'), var_6644.astype('bool')) # shape=(10, 12, 7)
func_5849_call = mod.get_global_var('func_5849')
func_5852_call = mutated_mod.get_global_var('func_5852')
var_6683 = relay.var("var_6683", dtype = "uint64", shape = (14,))#candidate|6683|(14,)|var|uint64
const_6684 = relay.const([[1,3,3,4,-10,4,2,-6,-5,-10,-3,-1,-3,-8],[8,-10,2,-1,-7,-7,-7,-10,4,-8,6,-3,4,-5],[-2,-1,9,-1,5,5,10,2,4,4,7,-6,-1,-3],[2,-2,-9,5,6,-10,-10,6,7,-7,9,1,-5,-2],[-6,1,-3,2,-10,1,-5,-9,-3,6,3,3,5,2],[10,8,7,4,4,1,5,2,-2,-8,7,7,7,6],[3,-6,9,9,-3,7,10,-1,-1,-6,5,-8,-8,-4],[6,-1,-5,-3,8,2,4,-9,7,-9,5,1,-9,-2],[-7,-6,-6,3,-5,-8,10,-6,-1,-9,5,7,5,-1],[9,5,-2,9,9,3,-8,-9,-3,3,8,-2,-1,-6],[-9,3,10,3,1,4,-4,6,-8,-10,-9,-4,-6,1],[-7,8,-4,1,-10,-10,6,3,-10,10,5,10,-5,-1],[3,10,3,-4,-8,-2,1,1,5,5,-4,-5,7,5],[10,-4,-9,2,4,-10,-3,3,4,1,-8,7,3,3],[7,-3,3,9,2,6,9,8,-8,-8,-5,-4,-5,-8],[-4,8,8,-8,9,-7,-3,8,-10,-6,7,3,-2,6],[-1,-6,5,6,-5,8,-4,-6,-1,8,1,2,-7,2],[3,7,-2,8,-6,3,-1,-5,8,-3,-4,-10,5,2],[6,-1,2,4,-10,-1,9,8,-7,-6,-6,1,9,4],[-1,10,-2,8,-1,-8,-9,9,-3,9,-2,4,-5,10],[6,10,2,-7,-10,-8,9,2,-3,7,8,7,-2,-9],[-5,1,-3,-9,10,1,2,1,-3,1,-3,-5,8,-4],[4,7,2,-1,10,4,-7,-10,-2,2,3,3,-6,1],[-10,-4,8,-4,-1,9,-8,-1,-8,5,3,7,-3,-4],[-1,-2,-9,7,-10,-2,-7,-4,6,1,-8,5,-6,-9],[-3,9,-7,-6,7,-6,4,10,8,8,1,7,-6,3],[5,10,-5,3,-9,-10,10,-5,-3,6,1,5,-3,-3],[5,8,8,-7,8,6,-6,-4,-2,1,-8,-7,10,10],[8,-2,-1,-2,-10,-3,10,-6,4,5,2,9,2,8],[-2,7,4,-3,-2,6,-4,2,6,10,-9,4,-10,1],[3,-6,-10,4,-4,8,2,10,1,-1,2,-7,-6,-4],[5,10,7,-2,-1,-10,3,-1,-4,-2,4,3,5,-9],[-10,7,10,-5,3,3,-6,-7,1,-6,10,1,9,10],[-4,5,3,9,-9,-10,2,6,-4,-8,2,3,10,-8],[6,3,8,-3,-9,-4,-9,-3,-8,10,4,1,10,10],[6,8,-5,-3,8,3,10,-8,-2,9,-9,-1,7,-1]], dtype = "int64")#candidate|6684|(36, 14)|const|int64
call_6682 = relay.TupleGetItem(func_5849_call(relay.reshape(var_6683.astype('uint64'), [14,]), relay.reshape(const_6684.astype('int64'), [504,]), ), 1)
call_6685 = relay.TupleGetItem(func_5852_call(relay.reshape(var_6683.astype('uint64'), [14,]), relay.reshape(const_6684.astype('int64'), [504,]), ), 1)
uop_6713 = relay.cosh(var_6644.astype('float64')) # shape=(1, 12, 7)
output = relay.Tuple([call_6649,bop_6653,call_6682,var_6683,const_6684,uop_6713,])
output2 = relay.Tuple([call_6650,bop_6653,call_6685,var_6683,const_6684,uop_6713,])
func_6715 = relay.Function([var_6644,var_6645,var_6683,], output)
mod['func_6715'] = func_6715
mod = relay.transform.InferType()(mod)
var_6716 = relay.var("var_6716", dtype = "int8", shape = (1, 12, 7))#candidate|6716|(1, 12, 7)|var|int8
var_6717 = relay.var("var_6717", dtype = "int8", shape = (10, 12, 7))#candidate|6717|(10, 12, 7)|var|int8
var_6718 = relay.var("var_6718", dtype = "uint64", shape = (14,))#candidate|6718|(14,)|var|uint64
output = func_6715(var_6716,var_6717,var_6718,)
func_6719 = relay.Function([var_6716,var_6717,var_6718,], output)
mutated_mod['func_6719'] = func_6719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3103_call = mod.get_global_var('func_3103')
func_3104_call = mutated_mod.get_global_var('func_3104')
call_6754 = relay.TupleGetItem(func_3103_call(), 1)
call_6755 = relay.TupleGetItem(func_3104_call(), 1)
const_6756 = relay.const([[[-8,-2,7,8,1,-10,7],[-6,10,-7,-1,6,-9,2],[-2,6,1,10,1,6,9],[9,-7,2,10,-4,8,-10],[2,9,-4,-5,-2,-3,-2],[4,-4,-7,8,10,9,-1],[-4,3,5,-10,-4,4,-10],[10,-5,-3,-7,-1,10,-3],[7,-3,6,-5,-8,8,1],[-2,8,-5,6,1,10,8],[-5,-8,-4,-3,9,-9,-4],[10,10,8,-2,10,-3,-1]],[[3,3,-10,-10,4,-3,1],[9,-3,-1,-1,-3,-2,-2],[4,-7,5,-4,-1,-9,8],[-5,6,-6,-4,-1,8,9],[7,-4,-7,7,-1,6,7],[-6,-7,-4,8,1,-9,-7],[6,-6,9,5,2,-7,5],[6,7,7,-6,7,2,-6],[-10,-5,-8,1,-10,-3,-10],[-5,2,-5,5,4,-2,3],[-9,-3,1,5,-9,-7,5],[-9,-10,8,-6,-2,-4,2]],[[9,9,4,5,2,-7,8],[-9,-3,6,3,-7,6,1],[8,-7,9,-5,10,10,-9],[4,-2,10,1,9,7,-4],[5,-4,-1,10,-7,-4,-4],[-2,3,2,-8,1,8,5],[5,-10,-9,3,-5,7,-9],[-2,7,-6,9,6,-2,-9],[4,-6,7,9,-2,3,7],[-9,3,9,-5,-10,5,-4],[-2,7,-8,7,1,-9,-10],[10,2,-6,-3,5,-2,-2]],[[3,-5,-8,-1,7,2,-3],[9,-3,5,-8,-2,-5,-9],[-4,-7,-7,-1,5,3,-9],[-10,-6,-8,-7,6,-3,8],[-7,-7,10,-7,-6,-3,-10],[5,-9,-4,3,4,4,-9],[8,4,-6,6,7,-2,4],[6,-10,-5,-5,6,10,9],[-1,10,-8,5,-9,10,8],[1,-7,-10,-7,8,6,9],[5,10,8,5,6,8,5],[-1,9,-7,-8,-5,-3,-8]],[[-8,-5,-7,-7,6,-9,-4],[-10,-4,-1,5,-1,-8,10],[9,10,-5,10,-1,6,-1],[-2,1,-5,4,-10,-8,4],[7,-5,1,6,2,9,5],[3,-10,4,-8,6,6,1],[-7,8,-8,-10,2,-7,2],[-10,-1,4,9,-3,-6,8],[-5,6,3,-5,10,-10,-3],[-7,-2,3,-1,5,6,8],[6,-6,7,4,7,-3,-7],[9,1,-5,6,-8,-7,-8]],[[2,-7,-6,-1,6,-4,-5],[9,-3,1,6,-7,-6,-1],[10,7,9,-10,8,7,7],[6,2,5,6,9,4,6],[3,-6,-9,2,-9,-1,4],[-3,-3,6,-4,1,6,4],[6,-1,-9,1,-10,-4,-7],[-7,6,3,-9,-5,9,5],[-5,-7,-8,1,5,-5,-5],[5,-5,5,2,-1,7,4],[-9,3,-7,-5,9,4,10],[-1,10,8,-10,-7,1,5]],[[-3,3,-9,5,7,5,-8],[3,8,-2,2,4,-3,6],[10,-1,10,4,-10,-7,1],[-6,1,-6,3,-9,-9,7],[-5,-3,2,-7,-8,6,-10],[-9,-7,7,-2,8,2,-10],[-10,1,8,10,8,4,8],[5,3,6,-9,-7,-7,-8],[-2,-8,-3,-10,2,3,-9],[7,-7,5,8,-1,4,8],[4,-10,4,3,-6,-10,-2],[10,10,-9,10,10,-5,5]],[[-10,3,-10,-4,-3,-2,9],[7,7,-5,5,-5,-7,-4],[-5,-6,-1,10,-3,6,1],[-5,1,2,-1,4,-10,-2],[-1,1,-5,-10,-5,-10,5],[6,-5,4,3,4,2,10],[7,9,8,2,7,4,2],[-4,-1,1,-9,1,-3,-6],[3,7,7,7,-5,1,-3],[-8,10,-10,-10,4,-7,3],[-10,-7,4,4,-7,9,10],[-6,6,5,-5,6,9,-5]],[[4,8,-7,-8,6,-4,-3],[-9,-6,5,10,-7,-7,8],[-4,-2,-3,4,-5,2,-6],[-8,-1,1,1,-9,-6,-4],[1,8,-7,4,3,9,-2],[-3,9,-5,-6,10,-10,8],[7,-8,-8,-6,1,6,-9],[3,-7,-8,-8,9,-9,3],[7,-7,7,-5,-4,-1,-2],[-10,-1,-2,1,-5,5,3],[2,-3,-9,-3,8,1,-10],[8,9,-3,-10,9,7,2]],[[-9,-5,-3,1,-1,-10,4],[-10,6,-8,-3,-3,8,-6],[-7,6,-3,10,9,10,6],[6,1,-6,-3,2,-5,-1],[-9,7,-5,-4,4,-6,5],[-5,-4,-3,-9,4,3,-8],[-10,-3,-7,-5,-5,-3,-4],[4,-3,-10,-1,3,-4,-2],[2,-9,-10,-9,3,1,4],[-9,-1,8,1,2,-3,-2],[2,7,-5,-6,7,3,-1],[9,6,-4,10,-10,1,5]],[[-7,-4,2,-4,-6,-1,6],[-4,-8,-4,1,-1,1,-2],[-3,8,-3,-10,-2,1,5],[-2,7,9,10,-8,-1,-10],[2,7,-8,-7,5,-7,4],[-6,9,1,5,1,-3,-4],[10,1,7,-9,-2,9,6],[6,-3,8,-2,10,-8,3],[-2,10,-3,5,-8,9,3],[-7,2,-8,8,9,-4,9],[9,-5,-1,2,7,-7,2],[-5,2,3,-7,-10,-4,7]],[[5,-9,-8,-3,1,-4,-3],[-3,5,-9,10,-2,10,4],[-9,1,4,8,6,2,7],[8,-7,4,-9,-10,2,7],[-3,5,9,6,7,9,7],[5,-7,3,-1,7,-9,-10],[8,2,-6,5,-4,3,7],[9,3,-6,-4,-6,8,-9],[-2,-10,6,-4,-9,-10,-10],[-6,-4,8,8,10,7,-9],[9,3,-4,-4,5,5,-6],[8,-9,-2,-9,2,6,-9]]], dtype = "int32")#candidate|6756|(12, 12, 7)|const|int32
bop_6757 = relay.logical_or(call_6754.astype('bool'), relay.reshape(const_6756.astype('bool'), relay.shape_of(call_6754))) # shape=(12, 12, 7)
bop_6760 = relay.logical_or(call_6755.astype('bool'), relay.reshape(const_6756.astype('bool'), relay.shape_of(call_6755))) # shape=(12, 12, 7)
output = bop_6757
output2 = bop_6760
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

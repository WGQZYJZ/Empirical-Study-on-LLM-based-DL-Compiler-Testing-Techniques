==========mod==========
#[version = "0.0.5"]
def @func_8999(%var_8986: Tensor[(8, 28), float64], %var_8989: Tensor[(40, 12), float32]) -> (Tensor[(9, 2, 6), bool], Tensor[(8, 28), float64], Tensor[(40, 12), bool]) {
  %0 = @func_7075() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %1 = cast(%var_8986, dtype="float64") /* ty=Tensor[(8, 28), float64] */;
  %2 = reshape(%1, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %3 = @func_7420(%2) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 140), uint32], Tensor[(1260), int64], Tensor[(8, 4, 15), bool], Tensor[(224), float64], Tensor[(896), uint64], Tensor[(40, 12), float32], Tensor[(8, 4, 15), bool], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) */;
  %4 = %3.6;
  %5 = cast(%var_8989, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
  %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(2), int32] */;
  %7 = cast(%4, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %9 = %0.0;
  %10 = not_equal(%7, %8) /* ty=Tensor[(40, 12), bool] */;
  (%9, %var_8986, %10)
}

def @func_824(%var_784: Tensor[(8, 16), float32], %var_798: Tensor[(70), uint32]) -> (Tensor[(8, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) {
  %11 = cast(%var_784, dtype="float32") /* ty=Tensor[(8, 16), float32] */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %14 = cast(%var_798, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %15 = reshape(%12, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
  %16 = reshape(%13, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
  %17 = reshape(%14, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %18 = @func_690(%15, %16, %17) /* ty=(Tensor[(16, 14, 4), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) */;
  %19 = erf(%11) /* ty=Tensor[(8, 16), float32] */;
  %20 = %18.1;
  (%19, %20, meta[relay.Constant][0] /* ty=Tensor[(896), uint64] */, %var_798)
}

def @func_5829(%var_5816: Tensor[(16, 9, 13), float64], %var_5821: Tensor[(21), float64], %var_5826: Tensor[(660), int64]) -> (Tensor[(16, 9, 13), float64], Tensor[(7, 3, ?), uint64], Tensor[(21), float64], Tensor[(7, 7, 10), uint32], Tensor[(660), int64], Tensor[(224, 4), uint64]) {
  %21 = cast(%var_5816, dtype="float64") /* ty=Tensor[(16, 9, 13), float64] */;
  %22 = cast(%var_5821, dtype="float64") /* ty=Tensor[(21), float64] */;
  %23 = reshape(%22, newshape=[7, 3, 1]) /* ty=Tensor[(7, 3, 1), float64] */;
  %24 = cast(%var_5826, dtype="int64") /* ty=Tensor[(660), int64] */;
  %25 = cast(%var_5826, dtype="int64") /* ty=Tensor[(660), int64] */;
  %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(224, 4), uint64] */, dtype="uint64") /* ty=Tensor[(224, 4), uint64] */;
  %27 = reshape(%24, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %28 = reshape(%25, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %29 = reshape(%26, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %30 = @func_1128(%27, %28, %29) /* ty=(Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
  %31 = cosh(%21) /* ty=Tensor[(16, 9, 13), float64] */;
  %32 = @func_1022(%23) /* ty=Tensor[(7, 3, ?), uint64] */;
  %33 = %30.2;
  (%31, %32, %var_5821, %33, %var_5826, meta[relay.Constant][1] /* ty=Tensor[(224, 4), uint64] */)
}

def @main(%var_9774: Tensor[(16, 6, 5), float64]) -> (Tensor[(16, 6, 5), float64],) {
  %34 = cast(%var_9774, dtype="float64") /* ty=Tensor[(16, 6, 5), float64] */;
  %35 = asinh(%34) /* ty=Tensor[(16, 6, 5), float64] */;
  %36 = cast(%35, dtype="float64") /* ty=Tensor[(16, 6, 5), float64] */;
  %37 = shape_of(%var_9774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%var_9774, dtype="float64") /* ty=Tensor[(16, 6, 5), float64] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %40 = power(%38, %39) /* ty=Tensor[(16, 6, 5), float64] */;
  %41 = cast(%40, dtype="float64") /* ty=Tensor[(16, 6, 5), float64] */;
  %42 = cosh(%41) /* ty=Tensor[(16, 6, 5), float64] */;
  (%42,)
}

def @func_6430(%var_6424: Tensor[(9, 140), int64]) -> Tensor[(9, 140), uint32] {
  %43 = @func_6227() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) */;
  %44 = %43.2;
  %45 = cast(%var_6424, dtype="uint32") /* ty=Tensor[(9, 140), uint32] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(2), int32] */;
  %47 = cast(%44, dtype="uint32") /* ty=Tensor[(9, 140), uint32] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  multiply(%47, %48) /* ty=Tensor[(9, 140), uint32] */
}

def @func_6669(%var_6643: Tensor[(72), uint64]) -> (Tensor[(9, 2, 6), float32], Tensor[(1080), float64], Tensor[(72), uint64], Tensor[(288), uint64], Tensor[(1080), float64], Tensor[(11, 7, 14), bool], Tensor[(1078), bool]) {
  %49 = cast(%var_6643, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %51 = cast(meta[relay.Constant][3] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %52 = reshape(%49, newshape=[1, 8, 9]) /* ty=Tensor[(1, 8, 9), uint64] */;
  %53 = reshape(%50, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint64] */;
  %54 = reshape(%51, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
  %55 = @func_5363(%52, %53, %54) /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(9, 12, 10), float64], Tensor[(1080), float64]) */;
  %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(1078), bool] */, dtype="bool") /* ty=Tensor[(1078), bool] */;
  %57 = reshape(%56, newshape=[11, 7, 14]) /* ty=Tensor[(11, 7, 14), bool] */;
  %58 = @func_5978() /* ty=Tensor[(9, 2, 6), float32] */;
  %59 = %55.2;
  %60 = @func_4574(%57) /* ty=Tensor[(11, 7, 14), bool] */;
  (%58, %59, %var_6643, meta[relay.Constant][2] /* ty=Tensor[(288), uint64] */, meta[relay.Constant][3] /* ty=Tensor[(1080), float64] */, %60, meta[relay.Constant][4] /* ty=Tensor[(1078), bool] */)
}

def @func_6134() -> (Tensor[(9, 2, 6), float32],) {
  %61 = @func_5773() /* ty=Tensor[(9, 2, 6), float32] */;
  (%61,)
}

def @func_2703(%var_2692: Tensor[(8, 4, 15), bool], %var_2693: Tensor[(8, 4, 15), bool]) -> Tensor[(8, 4, 15), bool] {
  %62 = cast(%var_2693, dtype="bool") /* ty=Tensor[(8, 4, 15), bool] */;
  %63 = shape_of(%var_2692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%var_2692, dtype="bool") /* ty=Tensor[(8, 4, 15), bool] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%64, %65) /* ty=Tensor[(8, 4, 15), bool] */
}

def @func_690(%var_679: Tensor[(16, 14, 4), uint64], %var_680: Tensor[(16, 14, 4), uint64], %var_687: Tensor[(70), uint32]) -> (Tensor[(16, 14, 4), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) {
  %66 = cast(%var_680, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
  %67 = shape_of(%var_679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(%var_679, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %70 = cast(%var_687, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %71 = reshape(%70, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %72 = less_equal(%68, %69) /* ty=Tensor[(16, 14, 4), bool] */;
  %73 = @func_456(%71) /* ty=Tensor[(7, 7, 10), uint32] */;
  (%72, %73, %var_687)
}

def @func_7075() -> (Tensor[(9, 2, 6), bool],) {
  %74 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
  %75 = %74.0;
  (%75,)
}

def @func_5363(%var_5342: Tensor[(1, 8, 9), uint64], %var_5343: Tensor[(4, 8, 9), uint64], %var_5355: Tensor[(1080), float64]) -> (Tensor[(4, 8, 9), uint64], Tensor[(9, 12, 10), float64], Tensor[(1080), float64]) {
  %76 = cast(%var_5342, dtype="uint64") /* ty=Tensor[(1, 8, 9), uint64] */;
  %77 = cast(%var_5343, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
  %78 = cast(%var_5355, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %79 = cast(%var_5355, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %80 = reshape(%78, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float64] */;
  %81 = reshape(%79, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float64] */;
  %82 = @func_1719(%80, %81) /* ty=(Tensor[(9, 12, 10), float64],) */;
  %83 = bitwise_xor(%76, %77) /* ty=Tensor[(4, 8, 9), uint64] */;
  %84 = %82.0;
  (%83, %84, %var_5355)
}

def @func_7829() -> (Tensor[(9, 140), int64],) {
  %85 = @func_6227() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) */;
  %86 = %85.2;
  (%86,)
}

def @func_7447() -> Tensor[(9, 2, 6), float64] {
  @func_6336() /* ty=Tensor[(9, 2, 6), float64] */
}

def @func_6928() -> Tensor[(9, 2, 6), bool] {
  %87 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
  %87.0
}

def @func_6472(%var_6443: Tensor[(5, 4), float64], %var_6444: Tensor[(5, 4), float64], %var_6461: Tensor[(882), float32], %var_6468: Tensor[(128), float32], %var_6469: Tensor[(70), uint32]) -> (Tensor[(5, 4), float64], Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float64], Tensor[(882), float32], Tensor[(70), uint32], Tensor[(128), float32], Tensor[(70), uint32]) {
  %88 = cast(%var_6444, dtype="float64") /* ty=Tensor[(5, 4), float64] */;
  %89 = shape_of(%var_6443, dtype="int32") /* ty=Tensor[(2), int32] */;
  %90 = cast(%var_6443, dtype="float64") /* ty=Tensor[(5, 4), float64] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %92 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %93 = cast(%var_6461, dtype="float32") /* ty=Tensor[(882), float32] */;
  %94 = reshape(%93, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float32] */;
  %95 = @func_2128(%94) /* ty=(Tensor[(9, 7, 14), float32], Tensor[(9, 7, 14), float64]) */;
  %96 = cast(%var_6468, dtype="float32") /* ty=Tensor[(128), float32] */;
  %97 = cast(%var_6469, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %98 = reshape(%96, newshape=[8, 16]) /* ty=Tensor[(8, 16), float32] */;
  %99 = reshape(%97, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %100 = @func_824(%98, %99) /* ty=(Tensor[(8, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
  %101 = floor_mod(%90, %91) /* ty=Tensor[(5, 4), float64] */;
  %102 = %92.0;
  %103 = %95.1;
  %104 = %100.3;
  (%101, %102, %103, %var_6461, %104, %var_6468, %var_6469)
}

def @func_7275(%var_7249: Tensor[(1872), float64], %var_7264: Tensor[(16, 9, 13), float64], %var_7270: Tensor[(3, 60), int32]) -> (Tensor[(9, 2, 6), float32], Tensor[(1872), float64], Tensor[(21), float64], Tensor[(660), int64], Tensor[(16, 9, 13), bool], Tensor[(4, 11, 15), int64], Tensor[(3, 60), int32], Tensor[(540, 2), int32], Tensor[(896), uint64], Tensor[(1, 70), uint32]) {
  %105 = @func_6841() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %106 = cast(%var_7249, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %107 = cast(meta[relay.Constant][5] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %108 = cast(meta[relay.Constant][6] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %109 = reshape(%106, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), float64] */;
  %110 = reshape(%107, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %111 = reshape(%108, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %112 = @func_5829(%109, %110, %111) /* ty=(Tensor[(16, 9, 13), float64], Tensor[(7, 3, ?), uint64], Tensor[(21), float64], Tensor[(7, 7, 10), uint32], Tensor[(660), int64], Tensor[(224, 4), uint64]) */;
  %113 = %112.0;
  %114 = cast(%var_7264, dtype="bool") /* ty=Tensor[(16, 9, 13), bool] */;
  %115 = shape_of(%113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(%113, dtype="bool") /* ty=Tensor[(16, 9, 13), bool] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %118 = cast(%var_7270, dtype="int32") /* ty=Tensor[(3, 60), int32] */;
  %119 = cast(meta[relay.Constant][7] /* ty=Tensor[(540, 2), int32] */, dtype="int32") /* ty=Tensor[(540, 2), int32] */;
  %120 = cast(meta[relay.Constant][8] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %121 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 70), uint32] */, dtype="uint32") /* ty=Tensor[(1, 70), uint32] */;
  %122 = reshape(%118, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
  %123 = reshape(%119, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
  %124 = reshape(%120, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %125 = reshape(%121, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
  %126 = @func_1580(%122, %123, %124, %125) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
  %127 = %105.0;
  %128 = less(%116, %117) /* ty=Tensor[(16, 9, 13), bool] */;
  %129 = %126.4;
  (%127, %var_7249, meta[relay.Constant][5] /* ty=Tensor[(21), float64] */, meta[relay.Constant][6] /* ty=Tensor[(660), int64] */, %128, %129, %var_7270, meta[relay.Constant][7] /* ty=Tensor[(540, 2), int32] */, meta[relay.Constant][8] /* ty=Tensor[(896), uint64] */, meta[relay.Constant][9] /* ty=Tensor[(1, 70), uint32] */)
}

def @func_8046() -> (Tensor[(9, 2, 6), float64],) {
  %130 = @func_7786() /* ty=(Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64]) */;
  %131 = %130.2;
  (%131,)
}

def @func_8513() -> Tensor[(10, 14, 9), int64] {
  %132 = @func_6227() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) */;
  %132.1
}

def @func_9528() -> Tensor[(9, 2, 6), float32] {
  %133 = @func_6841() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %134 = %133.0;
  %135 = cast(%134, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %136 = acosh(%135) /* ty=Tensor[(9, 2, 6), float32] */;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  rsqrt(%137) /* ty=Tensor[(9, 2, 6), float32] */
}

def @func_910(%var_903: Tensor[(10, 14, 9), int64]) -> (Tensor[(10, 14, 9), int64],) {
  %138 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 14, 9), int64] */, dtype="int64") /* ty=Tensor[(10, 14, 9), int64] */;
  %139 = shape_of(%var_903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(%var_903, dtype="int64") /* ty=Tensor[(10, 14, 9), int64] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %142 = bitwise_and(%140, %141) /* ty=Tensor[(10, 14, 9), int64] */;
  (%142,)
}

def @func_1286(%var_1255: Tensor[(6, 10, 15), int32], %var_1256: Tensor[(6, 10, 15), int32]) -> (Tensor[(6, 10, 15), int32], Tensor[(7, 7, 10), uint32], Tensor[(14, 5), uint32]) {
  %143 = cast(%var_1256, dtype="int32") /* ty=Tensor[(6, 10, 15), int32] */;
  %144 = shape_of(%var_1255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%var_1255, dtype="int32") /* ty=Tensor[(6, 10, 15), int32] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %147 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 5), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5), uint32] */;
  %148 = reshape(%147, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %149 = maximum(%145, %146) /* ty=Tensor[(6, 10, 15), int32] */;
  %150 = @func_456(%148) /* ty=Tensor[(7, 7, 10), uint32] */;
  (%149, %150, meta[relay.Constant][11] /* ty=Tensor[(14, 5), uint32] */)
}

def @func_8668(%var_8603: Tensor[(72), uint64], %var_8604: Tensor[(288), uint64], %var_8645: Tensor[(224), float64]) -> (Tensor[(9, 12, 10), float64], Tensor[(288), uint64], Tensor[(1080), float64], Tensor[(9, 2, 6), int64], Tensor[(40, 12), float32], Tensor[(224), float64], Tensor[(72), float32], Tensor[(10, 14, 9), int64], Tensor[(33, 1), float64]) {
  %151 = cast(%var_8603, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %152 = cast(%var_8604, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %153 = cast(meta[relay.Constant][12] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %154 = reshape(%151, newshape=[1, 8, 9]) /* ty=Tensor[(1, 8, 9), uint64] */;
  %155 = reshape(%152, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint64] */;
  %156 = reshape(%153, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
  %157 = @func_5363(%154, %155, %156) /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(9, 12, 10), float64], Tensor[(1080), float64]) */;
  %158 = @func_7342() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %159 = %158.0;
  %160 = @func_5955() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %161 = %160.0;
  %162 = cast(%161, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
  %163 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%159, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %166 = cast(%var_8645, dtype="float64") /* ty=Tensor[(224), float64] */;
  %167 = reshape(%166, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %168 = @func_7420(%167) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 140), uint32], Tensor[(1260), int64], Tensor[(8, 4, 15), bool], Tensor[(224), float64], Tensor[(896), uint64], Tensor[(40, 12), float32], Tensor[(8, 4, 15), bool], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) */;
  %169 = cast(%var_8603, dtype="float32") /* ty=Tensor[(72), float32] */;
  %170 = cast(meta[relay.Constant][13] /* ty=Tensor[(33, 1), float64] */, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
  %171 = reshape(%170, newshape=[1, 11, 3]) /* ty=Tensor[(1, 11, 3), float64] */;
  %172 = @func_4229(%171) /* ty=(Tensor[(1, 11, 3), float64], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) */;
  %173 = %157.1;
  %174 = right_shift(%164, %165) /* ty=Tensor[(9, 2, 6), int64] */;
  %175 = %168.6;
  %176 = sqrt(%169) /* ty=Tensor[(72), float32] */;
  %177 = %172.1;
  (%173, %var_8604, meta[relay.Constant][12] /* ty=Tensor[(1080), float64] */, %174, %175, %var_8645, %176, %177, meta[relay.Constant][13] /* ty=Tensor[(33, 1), float64] */)
}

def @func_2104(%var_2090: Tensor[(7, 16, 9), float32]) -> (Tensor[(7, 16, 9), float32],) {
  %178 = cast(%var_2090, dtype="float32") /* ty=Tensor[(7, 16, 9), float32] */;
  %179 = log(%178) /* ty=Tensor[(7, 16, 9), float32] */;
  (%179,)
}

def @func_256(%var_236: Tensor[(6, 8, 14), float32]) -> Tensor[(6, 8, 14), float64] {
  %180 = cast(%var_236, dtype="float32") /* ty=Tensor[(6, 8, 14), float32] */;
  %181 = cosh(%180) /* ty=Tensor[(6, 8, 14), float32] */;
  %182 = cast(%181, dtype="float32") /* ty=Tensor[(6, 8, 14), float32] */;
  %183 = erf(%182) /* ty=Tensor[(6, 8, 14), float32] */;
  %184 = cast(%183, dtype="float64") /* ty=Tensor[(6, 8, 14), float64] */;
  tan(%184) /* ty=Tensor[(6, 8, 14), float64] */
}

def @func_4870(%var_4823: Tensor[(2, 8, 14), float64], %var_4852: Tensor[(672), float32], %var_4853: Tensor[(180), int32], %var_4855: Tensor[(896), uint64]) -> (Tensor[(7, 16, 9), float32], Tensor[(1008), float32], Tensor[(672), float32], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(2, 8, 14), int32], Tensor[(896), uint8]) {
  %185 = cast(meta[relay.Constant][14] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %186 = reshape(%185, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), float32] */;
  %187 = @func_2104(%186) /* ty=(Tensor[(7, 16, 9), float32],) */;
  %188 = cast(meta[relay.Constant][15] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %189 = cast(meta[relay.Constant][15] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %190 = cast(meta[relay.Constant][16] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %191 = cast(%var_4852, dtype="float32") /* ty=Tensor[(672), float32] */;
  %192 = cast(%var_4853, dtype="int32") /* ty=Tensor[(180), int32] */;
  %193 = cast(meta[relay.Constant][17] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %194 = cast(%var_4855, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %195 = reshape(%188, newshape=[9, 16]) /* ty=Tensor[(9, 16), float32] */;
  %196 = reshape(%189, newshape=[9, 16]) /* ty=Tensor[(9, 16), float32] */;
  %197 = reshape(%190, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %198 = reshape(%191, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %199 = reshape(%192, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %200 = reshape(%193, newshape=[1080]) /* ty=Tensor[(1080), int32] */;
  %201 = reshape(%194, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %202 = @func_2561(%195, %196, %197, %198, %199, %200, %201) /* ty=(Tensor[(9, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(70, ?), float64], Tensor[(70, ?), int64], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(6, 8, 14), float64], Tensor[(672), float32], Tensor[(896), uint64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64]) */;
  %203 = cast(%var_4823, dtype="float64") /* ty=Tensor[(2, 8, 14), float64] */;
  %204 = asin(%203) /* ty=Tensor[(2, 8, 14), float64] */;
  %205 = cast(%var_4823, dtype="int32") /* ty=Tensor[(2, 8, 14), int32] */;
  %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%204, dtype="int32") /* ty=Tensor[(2, 8, 14), int32] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %209 = cast(meta[relay.Constant][18] /* ty=Tensor[(896), uint64] */, dtype="uint8") /* ty=Tensor[(896), uint8] */;
  %210 = shape_of(%var_4855, dtype="int32") /* ty=Tensor[(1), int32] */;
  %211 = cast(%var_4855, dtype="uint8") /* ty=Tensor[(896), uint8] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %213 = %187.0;
  %214 = %202.7;
  %215 = multiply(%207, %208) /* ty=Tensor[(2, 8, 14), int32] */;
  %216 = add(%211, %212) /* ty=Tensor[(896), uint8] */;
  (%213, meta[relay.Constant][14] /* ty=Tensor[(1008), float32] */, %214, meta[relay.Constant][15] /* ty=Tensor[(144), float32] */, meta[relay.Constant][16] /* ty=Tensor[(320), float32] */, %var_4852, %var_4853, meta[relay.Constant][17] /* ty=Tensor[(1080), int32] */, %215, %216)
}

def @func_8328() -> (Tensor[(9, 2, 6), float32], Tensor[(13, 15, 9), float64]) {
  %217 = @func_6841() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %218 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %219 = sigmoid(%218) /* ty=Tensor[(13, 15, 9), float32] */;
  %220 = cast(%219, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
  %221 = %217.0;
  %222 = cos(%220) /* ty=Tensor[(13, 15, 9), float64] */;
  (%221, %222)
}

def @func_5978() -> Tensor[(9, 2, 6), float32] {
  %223 = @func_5955() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %223.0
}

def @func_3985(%var_3977: int64, %var_3978: Tensor[(15, 15, 16), int64]) -> Tensor[(15, 15, 16), int64] {
  %224 = cast(%var_3977, dtype="int64") /* ty=int64 */;
  %225 = cast(%var_3978, dtype="int64") /* ty=Tensor[(15, 15, 16), int64] */;
  bitwise_xor(%224, %225) /* ty=Tensor[(15, 15, 16), int64] */
}

def @func_6824() -> Tensor[(9, 2, 6), float64] {
  @func_6336() /* ty=Tensor[(9, 2, 6), float64] */
}

def @func_9024() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) {
  %226 = @func_7837() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32], Tensor[(7, 126), float32]) */;
  %227 = @func_8442() /* ty=(Tensor[(9, 2, 6), float64],) */;
  %228 = %226.0;
  %229 = %227.0;
  (%228, %229)
}

def @func_6336() -> Tensor[(9, 2, 6), float64] {
  %230 = @func_5773() /* ty=Tensor[(9, 2, 6), float32] */;
  %231 = cast(%230, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  cos(%231) /* ty=Tensor[(9, 2, 6), float64] */
}

def @func_7924() -> Tensor[(9, 2, 6), bool] {
  @func_6928() /* ty=Tensor[(9, 2, 6), bool] */
}

def @func_7521(%var_7484: Tensor[(224), float64], %var_7485: Tensor[(672), float32], %var_7515: Tensor[(180), int32]) -> (Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(180), int16]) {
  %232 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
  %233 = cast(%var_7484, dtype="float64") /* ty=Tensor[(224), float64] */;
  %234 = cast(%var_7485, dtype="float32") /* ty=Tensor[(672), float32] */;
  %235 = cast(meta[relay.Constant][20] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %236 = reshape(%233, newshape=[112, 2]) /* ty=Tensor[(112, 2), float64] */;
  %237 = reshape(%234, newshape=[56, 12]) /* ty=Tensor[(56, 12), float32] */;
  %238 = reshape(%235, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %239 = @func_7056(%236, %237, %238) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(180), int32], Tensor[(56, 12), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(112, 2), uint16]) */;
  %240 = cast(%var_7515, dtype="int16") /* ty=Tensor[(180), int16] */;
  %241 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %242 = cast(meta[relay.Constant][20] /* ty=Tensor[(180), int32] */, dtype="int16") /* ty=Tensor[(180), int16] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?), int16] */;
  %244 = %232.0;
  %245 = %239.0;
  %246 = bitwise_xor(%242, %243) /* ty=Tensor[(180), int16] */;
  (%244, %245, %var_7484, %var_7485, %246)
}

def @func_7675(%var_7656: Tensor[(1320), bool], %var_7669: Tensor[(1872), float64]) -> (Tensor[(9, 2, 6), bool], Tensor[(8, 11, 15), bool], Tensor[(1320), bool], Tensor[(70), uint32], Tensor[(3, 60), int32], Tensor[(1872), float64], Tensor[(30, 6), int32]) {
  %247 = @func_7075() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %248 = cast(%var_7656, dtype="bool") /* ty=Tensor[(1320), bool] */;
  %249 = cast(meta[relay.Constant][21] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %250 = reshape(%248, newshape=[8, 11, 15]) /* ty=Tensor[(8, 11, 15), bool] */;
  %251 = reshape(%249, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %252 = @func_1745(%250, %251) /* ty=(Tensor[(8, 11, 15), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) */;
  %253 = cast(%var_7669, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %254 = cast(%var_7669, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %255 = cast(meta[relay.Constant][22] /* ty=Tensor[(30, 6), int32] */, dtype="int32") /* ty=Tensor[(30, 6), int32] */;
  %256 = reshape(%253, newshape=[1872]) /* ty=Tensor[(1872), float64] */;
  %257 = reshape(%254, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), float64] */;
  %258 = reshape(%255, newshape=[3, 60]) /* ty=Tensor[(3, 60), int32] */;
  %259 = @func_7275(%256, %257, %258) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(1872), float64], Tensor[(21), float64], Tensor[(660), int64], Tensor[(16, 9, 13), bool], Tensor[(4, 11, 15), int64], Tensor[(3, 60), int32], Tensor[(540, 2), int32], Tensor[(896), uint64], Tensor[(1, 70), uint32]) */;
  %260 = %247.0;
  %261 = %252.0;
  %262 = %259.6;
  (%260, %261, %var_7656, meta[relay.Constant][21] /* ty=Tensor[(70), uint32] */, %262, %var_7669, meta[relay.Constant][22] /* ty=Tensor[(30, 6), int32] */)
}

def @func_8775(%var_8739: Tensor[(9, 2, 6), float64], %var_8745: Tensor[(225), int64]) -> (Tensor[(9, 2, 6), uint32], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(9, 2, 6), float64]) {
  %263 = @func_7447() /* ty=Tensor[(9, 2, 6), float64] */;
  %264 = cast(%var_8739, dtype="uint32") /* ty=Tensor[(9, 2, 6), uint32] */;
  %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%263, dtype="uint32") /* ty=Tensor[(9, 2, 6), uint32] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %268 = cast(%var_8745, dtype="int64") /* ty=Tensor[(225), int64] */;
  %269 = cast(%var_8745, dtype="int64") /* ty=Tensor[(225), int64] */;
  %270 = reshape(%268, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int64] */;
  %271 = reshape(%269, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int64] */;
  %272 = cast(%var_8745, dtype="float32") /* ty=Tensor[(225), float32] */;
  %273 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
  %274 = logical_xor(%266, %267) /* ty=Tensor[(9, 2, 6), uint32] */;
  %275 = @func_6694(%270, %271) /* ty=Tensor[(5, 3, 15), int64] */;
  %276 = sigmoid(%272) /* ty=Tensor[(225), float32] */;
  %277 = %273.1;
  (%274, %275, %276, %277)
}

def @func_5955() -> (Tensor[(9, 2, 6), float32],) {
  %278 = @func_5773() /* ty=Tensor[(9, 2, 6), float32] */;
  (%278,)
}

def @func_5313(%var_5266: Tensor[(10, 12, 10), float32], %var_5299: Tensor[(224, 4), uint64]) -> (Tensor[(10, 12, 10), float64], Tensor[(10, 12, 10), uint16], Tensor[(7, 7, 10), uint32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(70), uint32], Tensor[(224, 4), float32]) {
  %279 = cast(%var_5266, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
  %280 = cast(%var_5266, dtype="float32") /* ty=Tensor[(10, 12, 10), float32] */;
  %281 = exp(%280) /* ty=Tensor[(10, 12, 10), float32] */;
  %282 = cast(%var_5266, dtype="uint16") /* ty=Tensor[(10, 12, 10), uint16] */;
  %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%281, dtype="uint16") /* ty=Tensor[(10, 12, 10), uint16] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %286 = cast(meta[relay.Constant][23] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %287 = cast(meta[relay.Constant][24] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %288 = cast(%var_5299, dtype="uint64") /* ty=Tensor[(224, 4), uint64] */;
  %289 = cast(meta[relay.Constant][25] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %290 = reshape(%286, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
  %291 = reshape(%287, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
  %292 = reshape(%288, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %293 = reshape(%289, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
  %294 = @func_1580(%290, %291, %292, %293) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
  %295 = cast(%var_5299, dtype="float32") /* ty=Tensor[(224, 4), float32] */;
  %296 = log(%279) /* ty=Tensor[(10, 12, 10), float64] */;
  %297 = subtract(%284, %285) /* ty=Tensor[(10, 12, 10), uint16] */;
  %298 = %294.10;
  %299 = atanh(%295) /* ty=Tensor[(224, 4), float32] */;
  (%296, %297, %298, meta[relay.Constant][23] /* ty=Tensor[(180), int32] */, meta[relay.Constant][24] /* ty=Tensor[(1080), int32] */, meta[relay.Constant][25] /* ty=Tensor[(70), uint32] */, %299)
}

def @func_2041(%var_1925: Tensor[(16, 8, 3), bool], %var_1926: Tensor[(16, 8, 3), bool], %var_1936: Tensor[(180), int32], %var_1937: Tensor[(1080), int32]) -> (Tensor[(4, 11, 15), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64], Tensor[(14, 5), uint32], Tensor[(70), uint32], Tensor[(16, 8, 3), uint8]) {
  %300 = cast(%var_1936, dtype="int32") /* ty=Tensor[(180), int32] */;
  %301 = cast(%var_1937, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %302 = cast(meta[relay.Constant][26] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %303 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 5), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5), uint32] */;
  %304 = reshape(%300, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
  %305 = reshape(%301, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
  %306 = reshape(%302, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %307 = reshape(%303, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
  %308 = @func_1580(%304, %305, %306, %307) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
  %309 = %308.7;
  %310 = cast(%309, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
  %311 = cast(%309, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
  %312 = cast(meta[relay.Constant][26] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %313 = reshape(%310, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %314 = reshape(%311, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %315 = reshape(%312, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %316 = @func_1128(%313, %314, %315) /* ty=(Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
  %317 = cast(%var_1926, dtype="bool") /* ty=Tensor[(16, 8, 3), bool] */;
  %318 = shape_of(%var_1925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%var_1925, dtype="bool") /* ty=Tensor[(16, 8, 3), bool] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %321 = logical_or(%319, %320) /* ty=Tensor[(16, 8, 3), bool] */;
  %322 = cast(%321, dtype="uint32") /* ty=Tensor[(16, 8, 3), uint32] */;
  %323 = shape_of(%var_1925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%var_1925, dtype="uint32") /* ty=Tensor[(16, 8, 3), uint32] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %326 = left_shift(%324, %325) /* ty=Tensor[(16, 8, 3), uint32] */;
  %327 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 8, 3), uint32] */, dtype="uint8") /* ty=Tensor[(16, 8, 3), uint8] */;
  %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%326, dtype="uint8") /* ty=Tensor[(16, 8, 3), uint8] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %331 = %316.4;
  %332 = right_shift(%329, %330) /* ty=Tensor[(16, 8, 3), uint8] */;
  (%309, %var_1936, %var_1937, meta[relay.Constant][26] /* ty=Tensor[(896), uint64] */, meta[relay.Constant][27] /* ty=Tensor[(14, 5), uint32] */, %331, %332)
}

def @func_6727() -> Tensor[(9, 2, 6), float32] {
  %333 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %333.0
}

def @func_7121() -> (Tensor[(9, 2, 6), float32],) {
  %334 = @func_6727() /* ty=Tensor[(9, 2, 6), float32] */;
  (%334,)
}

def @func_6514(%var_6505: Tensor[(1, 16, 13), int8], %var_6506: Tensor[(9, 16, 13), int8]) -> (Tensor[(9, 16, 13), int8],) {
  %335 = cast(%var_6505, dtype="int8") /* ty=Tensor[(1, 16, 13), int8] */;
  %336 = cast(%var_6506, dtype="int8") /* ty=Tensor[(9, 16, 13), int8] */;
  %337 = add(%335, %336) /* ty=Tensor[(9, 16, 13), int8] */;
  (%337,)
}

def @func_1022(%var_1005: Tensor[(7, 3, 1), float64]) -> Tensor[(7, 3, ?), uint64] {
  %338 = cast(%var_1005, dtype="float64") /* ty=Tensor[(7, 3, 1), float64] */;
  %339 = atan(%338) /* ty=Tensor[(7, 3, 1), float64] */;
  %340 = cast(%339, dtype="float64") /* ty=Tensor[(7, 3, 1), float64] */;
  %341 = sinh(%340) /* ty=Tensor[(7, 3, 1), float64] */;
  %342 = cast(%339, dtype="uint64") /* ty=Tensor[(7, 3, 1), uint64] */;
  %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(%341, dtype="uint64") /* ty=Tensor[(7, 3, 1), uint64] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%344, %345) /* ty=Tensor[(7, 3, ?), uint64] */
}

def @func_4229(%var_4216: Tensor[(1, 11, 3), float64]) -> (Tensor[(1, 11, 3), float64], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) {
  %346 = cast(%var_4216, dtype="float64") /* ty=Tensor[(1, 11, 3), float64] */;
  %347 = cast(meta[relay.Constant][29] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %348 = reshape(%347, newshape=[10, 14, 9]) /* ty=Tensor[(10, 14, 9), int64] */;
  %349 = @func_910(%348) /* ty=(Tensor[(10, 14, 9), int64],) */;
  %350 = sigmoid(%346) /* ty=Tensor[(1, 11, 3), float64] */;
  %351 = %349.0;
  (%350, %351, meta[relay.Constant][29] /* ty=Tensor[(1260), int64] */)
}

def @func_6355(%var_6346: Tensor[(9, 2, 6), float32]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32]) {
  %352 = @func_6227() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) */;
  %353 = %352.0;
  %354 = cast(%var_6346, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%353, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %358 = cast(%var_6346, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %359 = floor_divide(%356, %357) /* ty=Tensor[(9, 2, 6), float32] */;
  %360 = sqrt(%358) /* ty=Tensor[(9, 2, 6), float32] */;
  (%359, %360)
}

def @func_6227() -> (Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) {
  %361 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 140), int64] */, dtype="int64") /* ty=Tensor[(9, 140), int64] */;
  %362 = reshape(%361, newshape=[10, 14, 9]) /* ty=Tensor[(10, 14, 9), int64] */;
  %363 = @func_910(%362) /* ty=(Tensor[(10, 14, 9), int64],) */;
  %364 = @func_5978() /* ty=Tensor[(9, 2, 6), float32] */;
  %365 = %363.0;
  (%364, %365, meta[relay.Constant][30] /* ty=Tensor[(9, 140), int64] */)
}

def @func_7786() -> (Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64]) {
  %366 = @func_6928() /* ty=Tensor[(9, 2, 6), bool] */;
  %367 = cast(%366, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %368 = @func_7075() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %369 = %368.0;
  %370 = cast(%366, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %371 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%369, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %374 = asin(%367) /* ty=Tensor[(9, 2, 6), float64] */;
  %375 = floor_mod(%372, %373) /* ty=Tensor[(9, 2, 6), float64] */;
  %376 = @func_6824() /* ty=Tensor[(9, 2, 6), float64] */;
  (%374, %375, %376)
}

def @func_4574(%var_4568: Tensor[(11, 7, 14), bool]) -> Tensor[(11, 7, 14), bool] {
  %377 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 7, 14), bool] */, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
  %378 = shape_of(%var_4568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %379 = cast(%var_4568, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%379, %380) /* ty=Tensor[(11, 7, 14), bool] */
}

def @func_7056(%var_7035: Tensor[(112, 2), float64], %var_7036: Tensor[(56, 12), float32], %var_7037: Tensor[(180), int32]) -> (Tensor[(9, 2, 6), float32], Tensor[(180), int32], Tensor[(56, 12), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(112, 2), uint16]) {
  %381 = cast(%var_7035, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %382 = cast(%var_7036, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
  %383 = cast(%var_7037, dtype="int32") /* ty=Tensor[(180), int32] */;
  %384 = cast(meta[relay.Constant][32] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %385 = reshape(%381, newshape=[2, 8, 14]) /* ty=Tensor[(2, 8, 14), float64] */;
  %386 = reshape(%382, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %387 = reshape(%383, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %388 = reshape(%384, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %389 = @func_4870(%385, %386, %387, %388) /* ty=(Tensor[(7, 16, 9), float32], Tensor[(1008), float32], Tensor[(672), float32], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(2, 8, 14), int32], Tensor[(896), uint8]) */;
  %390 = cast(meta[relay.Constant][33] /* ty=Tensor[(112, 2), float64] */, dtype="uint16") /* ty=Tensor[(112, 2), uint16] */;
  %391 = shape_of(%var_7035, dtype="int32") /* ty=Tensor[(2), int32] */;
  %392 = cast(%var_7035, dtype="uint16") /* ty=Tensor[(112, 2), uint16] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %394 = @func_5978() /* ty=Tensor[(9, 2, 6), float32] */;
  %395 = %389.6;
  %396 = subtract(%392, %393) /* ty=Tensor[(112, 2), uint16] */;
  (%394, %395, %var_7036, %var_7037, meta[relay.Constant][32] /* ty=Tensor[(896), uint64] */, %396)
}

def @func_9641(%var_9631: Tensor[(9, 2, 6), float32]) -> (Tensor[(9, 2, 6), int32], Tensor[(9, 2, 6), float64]) {
  %397 = @func_9024() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) */;
  %398 = %397.0;
  %399 = cast(%var_9631, dtype="int32") /* ty=Tensor[(9, 2, 6), int32] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="int32") /* ty=Tensor[(9, 2, 6), int32] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %403 = add(%401, %402) /* ty=Tensor[(9, 2, 6), int32] */;
  %404 = @func_7447() /* ty=Tensor[(9, 2, 6), float64] */;
  (%403, %404)
}

def @func_8704() -> (Tensor[(5, 14, 3), uint32],) {
  %405 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 3), float64] */;
  %406 = sigmoid(%405) /* ty=Tensor[(5, 14, 3), float64] */;
  %407 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 14, 3), float64] */, dtype="uint32") /* ty=Tensor[(5, 14, 3), uint32] */;
  %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%406, dtype="uint32") /* ty=Tensor[(5, 14, 3), uint32] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %411 = bitwise_or(%409, %410) /* ty=Tensor[(5, 14, 3), uint32] */;
  (%411,)
}

def @func_9258(%var_9224: Tensor[(9, 12, 4), float64]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 12, 4), float64], Tensor[(5, 3, 15), int64], Tensor[(75, 3), int64], Tensor[(9, 12, 4), float64]) {
  %412 = @func_8964() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) */;
  %413 = cast(%var_9224, dtype="float64") /* ty=Tensor[(9, 12, 4), float64] */;
  %414 = asinh(%413) /* ty=Tensor[(9, 12, 4), float64] */;
  %415 = cast(%414, dtype="float64") /* ty=Tensor[(9, 12, 4), float64] */;
  %416 = %412.0;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %418 = cast(meta[relay.Constant][35] /* ty=Tensor[(75, 3), int64] */, dtype="int64") /* ty=Tensor[(75, 3), int64] */;
  %419 = reshape(%417, newshape=[9, 2, 6]) /* ty=Tensor[(9, 2, 6), float64] */;
  %420 = reshape(%418, newshape=[225]) /* ty=Tensor[(225), int64] */;
  %421 = @func_8775(%419, %420) /* ty=(Tensor[(9, 2, 6), uint32], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(9, 2, 6), float64]) */;
  %422 = cast(%414, dtype="float64") /* ty=Tensor[(9, 12, 4), float64] */;
  %423 = log10(%415) /* ty=Tensor[(9, 12, 4), float64] */;
  %424 = %421.1;
  %425 = sigmoid(%422) /* ty=Tensor[(9, 12, 4), float64] */;
  (%416, %423, %424, meta[relay.Constant][35] /* ty=Tensor[(75, 3), int64] */, %425)
}

def @func_9199() -> (Tensor[(13, 15, 9), float64],) {
  %426 = @func_8400() /* ty=(Tensor[(13, 15, 9), float64],) */;
  %427 = %426.0;
  (%427,)
}

def @func_6841() -> (Tensor[(9, 2, 6), float32],) {
  %428 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %429 = %428.0;
  (%429,)
}

def @func_1745(%var_1726: Tensor[(8, 11, 15), bool], %var_1734: Tensor[(70), uint32]) -> (Tensor[(8, 11, 15), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) {
  %430 = cast(%var_1726, dtype="bool") /* ty=Tensor[(8, 11, 15), bool] */;
  %431 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(8, 11, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 11, 15), bool] */, dtype="bool") /* ty=Tensor[(8, 11, 15), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %434 = cast(%var_1734, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %435 = reshape(%434, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %436 = logical_or(%432, %433) /* ty=Tensor[(8, 11, 15), bool] */;
  %437 = @func_456(%435) /* ty=Tensor[(7, 7, 10), uint32] */;
  (%436, %437, %var_1734)
}

def @func_8123(%var_8064: Tensor[(30, 6), int32], %var_8095: Tensor[(882), float32], %var_8096: Tensor[(8, 16), float32], %var_8112: Tensor[(160), float64]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(30, 6), int32], Tensor[(9, 2, 6), bool], Tensor[(128), float32], Tensor[(20), float64], Tensor[(882), float32], Tensor[(8, 16), float32], Tensor[(70), uint32], Tensor[(70), uint32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32], Tensor[(896), uint64]) {
  %438 = @func_7121() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %439 = cast(meta[relay.Constant][37] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %440 = cast(meta[relay.Constant][38] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %441 = cast(%var_8064, dtype="int32") /* ty=Tensor[(30, 6), int32] */;
  %442 = reshape(%439, newshape=[112, 2]) /* ty=Tensor[(112, 2), float64] */;
  %443 = reshape(%440, newshape=[56, 12]) /* ty=Tensor[(56, 12), float32] */;
  %444 = reshape(%441, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %445 = @func_7056(%442, %443, %444) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(180), int32], Tensor[(56, 12), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(112, 2), uint16]) */;
  %446 = cast(meta[relay.Constant][39] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %447 = cast(meta[relay.Constant][39] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %448 = cast(%var_8095, dtype="float32") /* ty=Tensor[(882), float32] */;
  %449 = cast(%var_8096, dtype="float32") /* ty=Tensor[(8, 16), float32] */;
  %450 = cast(meta[relay.Constant][40] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %451 = reshape(%446, newshape=[5, 4]) /* ty=Tensor[(5, 4), float64] */;
  %452 = reshape(%447, newshape=[5, 4]) /* ty=Tensor[(5, 4), float64] */;
  %453 = reshape(%448, newshape=[882]) /* ty=Tensor[(882), float32] */;
  %454 = reshape(%449, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %455 = reshape(%450, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %456 = @func_6472(%451, %452, %453, %454, %455) /* ty=(Tensor[(5, 4), float64], Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float64], Tensor[(882), float32], Tensor[(70), uint32], Tensor[(128), float32], Tensor[(70), uint32]) */;
  %457 = cast(meta[relay.Constant][39] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %458 = cast(meta[relay.Constant][39] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %459 = cast(%var_8095, dtype="float32") /* ty=Tensor[(882), float32] */;
  %460 = cast(%var_8096, dtype="float32") /* ty=Tensor[(8, 16), float32] */;
  %461 = cast(meta[relay.Constant][40] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %462 = reshape(%457, newshape=[5, 4]) /* ty=Tensor[(5, 4), float64] */;
  %463 = reshape(%458, newshape=[5, 4]) /* ty=Tensor[(5, 4), float64] */;
  %464 = reshape(%459, newshape=[882]) /* ty=Tensor[(882), float32] */;
  %465 = reshape(%460, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %466 = reshape(%461, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %467 = @func_6472(%462, %463, %464, %465, %466) /* ty=(Tensor[(5, 4), float64], Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float64], Tensor[(882), float32], Tensor[(70), uint32], Tensor[(128), float32], Tensor[(70), uint32]) */;
  %468 = cast(%var_8112, dtype="float64") /* ty=Tensor[(160), float64] */;
  %469 = cast(meta[relay.Constant][41] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %470 = reshape(%468, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %471 = reshape(%469, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %472 = @func_5096(%470, %471) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(896), uint64], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180, 1), int32], Tensor[(1080, 1), int32], Tensor[(896), uint64]) */;
  %473 = cast(%var_8112, dtype="float64") /* ty=Tensor[(160), float64] */;
  %474 = cast(meta[relay.Constant][41] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %475 = reshape(%473, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %476 = reshape(%474, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %477 = @func_5899(%475, %476) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32]) */;
  %478 = %438.0;
  %479 = %445.0;
  %480 = @func_7924() /* ty=Tensor[(9, 2, 6), bool] */;
  %481 = %456.5;
  %482 = %467.6;
  %483 = %472.1;
  %484 = %477.1;
  (%478, %479, meta[relay.Constant][37] /* ty=Tensor[(224), float64] */, meta[relay.Constant][38] /* ty=Tensor[(672), float32] */, %var_8064, %480, %481, meta[relay.Constant][39] /* ty=Tensor[(20), float64] */, %var_8095, %var_8096, meta[relay.Constant][40] /* ty=Tensor[(70), uint32] */, %482, %483, %var_8112, meta[relay.Constant][41] /* ty=Tensor[(320), float32] */, %484)
}

def @func_2128(%var_2116: Tensor[(9, 7, 14), float32]) -> (Tensor[(9, 7, 14), float32], Tensor[(9, 7, 14), float64]) {
  %485 = cast(%var_2116, dtype="float32") /* ty=Tensor[(9, 7, 14), float32] */;
  %486 = cast(%var_2116, dtype="float64") /* ty=Tensor[(9, 7, 14), float64] */;
  %487 = acos(%485) /* ty=Tensor[(9, 7, 14), float32] */;
  %488 = log10(%486) /* ty=Tensor[(9, 7, 14), float64] */;
  (%487, %488)
}

def @func_6983() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32]) {
  %489 = @func_6841() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %490 = @func_6727() /* ty=Tensor[(9, 2, 6), float32] */;
  %491 = %489.0;
  (%490, %491)
}

def @func_8730() -> (Tensor[(9, 2, 6), float32],) {
  %492 = @func_7350() /* ty=Tensor[(9, 2, 6), float64] */;
  %493 = cast(%492, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %494 = erf(%493) /* ty=Tensor[(9, 2, 6), float32] */;
  (%494,)
}

def @func_2561(%var_2471: Tensor[(9, 16), float32], %var_2472: Tensor[(9, 16), float32], %var_2522: Tensor[(320), float32], %var_2530: Tensor[(672), float32], %var_2546: Tensor[(180), int32], %var_2547: Tensor[(1080), int32], %var_2548: Tensor[(896), uint64]) -> (Tensor[(9, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(70, ?), float64], Tensor[(70, ?), int64], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(6, 8, 14), float64], Tensor[(672), float32], Tensor[(896), uint64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64]) {
  %495 = cast(%var_2472, dtype="float32") /* ty=Tensor[(9, 16), float32] */;
  %496 = shape_of(%var_2471, dtype="int32") /* ty=Tensor[(2), int32] */;
  %497 = cast(%var_2471, dtype="float32") /* ty=Tensor[(9, 16), float32] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %499 = cast(meta[relay.Constant][42] /* ty=Tensor[(70, 1), uint32] */, dtype="uint32") /* ty=Tensor[(70, 1), uint32] */;
  %500 = reshape(%499, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %501 = cast(meta[relay.Constant][42] /* ty=Tensor[(70, 1), uint32] */, dtype="float32") /* ty=Tensor[(70, 1), float32] */;
  %502 = asinh(%501) /* ty=Tensor[(70, 1), float32] */;
  %503 = cast(meta[relay.Constant][42] /* ty=Tensor[(70, 1), uint32] */, dtype="float64") /* ty=Tensor[(70, 1), float64] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(2), int32] */;
  %505 = cast(%502, dtype="float64") /* ty=Tensor[(70, 1), float64] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %507 = cast(meta[relay.Constant][42] /* ty=Tensor[(70, 1), uint32] */, dtype="int64") /* ty=Tensor[(70, 1), int64] */;
  %508 = shape_of(%502, dtype="int32") /* ty=Tensor[(2), int32] */;
  %509 = cast(%502, dtype="int64") /* ty=Tensor[(70, 1), int64] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %511 = cast(%var_2522, dtype="float32") /* ty=Tensor[(320), float32] */;
  %512 = reshape(%511, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), float32] */;
  %513 = cast(%var_2530, dtype="float32") /* ty=Tensor[(672), float32] */;
  %514 = reshape(%513, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %515 = cast(%var_2546, dtype="int32") /* ty=Tensor[(180), int32] */;
  %516 = cast(%var_2547, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %517 = cast(%var_2548, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %518 = floor_divide(%505, %506) /* ty=Tensor[(70, ?), float64] */;
  %519 = cast(%518, dtype="uint32") /* ty=Tensor[(70, ?), uint32] */;
  %520 = reshape(%515, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
  %521 = reshape(%516, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
  %522 = reshape(%517, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %523 = reshape(%519, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
  %524 = @func_1580(%520, %521, %522, %523) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
  %525 = power(%497, %498) /* ty=Tensor[(9, 16), float32] */;
  %526 = @func_456(%500) /* ty=Tensor[(7, 7, 10), uint32] */;
  %527 = subtract(%509, %510) /* ty=Tensor[(70, ?), int64] */;
  %528 = @func_927(%512) /* ty=Tensor[(10, 2, 16), float32] */;
  %529 = @func_256(%514) /* ty=Tensor[(6, 8, 14), float64] */;
  %530 = %524.3;
  (%525, %526, %518, %527, %528, %var_2522, %529, %var_2530, %530, %var_2546, %var_2547, %var_2548)
}

def @func_7817() -> Tensor[(9, 2, 6), bool] {
  %531 = @func_7342() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %531.0
}

def @func_7342() -> (Tensor[(9, 2, 6), bool],) {
  %532 = @func_7075() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %533 = %532.0;
  (%533,)
}

def @func_8400() -> (Tensor[(13, 15, 9), float64],) {
  %534 = @func_8328() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(13, 15, 9), float64]) */;
  %535 = %534.1;
  (%535,)
}

def @func_8243(%var_8236: Tensor[(15, 2, 12), float32]) -> (Tensor[(15, 2, 12), float32],) {
  %536 = cast(%var_8236, dtype="float32") /* ty=Tensor[(15, 2, 12), float32] */;
  %537 = atan(%536) /* ty=Tensor[(15, 2, 12), float32] */;
  (%537,)
}

def @func_9301() -> (Tensor[(7, 126), float32],) {
  %538 = @func_7837() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32], Tensor[(7, 126), float32]) */;
  %539 = %538.2;
  (%539,)
}

def @func_2688(%var_2685: Tensor[(6, 16, 12), float64]) -> (Tensor[(6, 16, 12), float64],) {
  %540 = cast(%var_2685, dtype="float64") /* ty=Tensor[(6, 16, 12), float64] */;
  %541 = tan(%540) /* ty=Tensor[(6, 16, 12), float64] */;
  (%541,)
}

def @func_6208(%var_6197: Tensor[(9, 2, 6), float32], %var_6203: Tensor[(9, 2, 6), int64]) -> (Tensor[(9, 2, 6), uint64], Tensor[(9, 2, 6), bool]) {
  %542 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %543 = %542.0;
  %544 = cast(%543, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %545 = reshape(%544, newshape=[9, 2, 6]) /* ty=Tensor[(9, 2, 6), float32] */;
  %546 = @func_6121(%545) /* ty=(Tensor[(9, 2, 6), uint64],) */;
  %547 = cast(%var_6197, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
  %548 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%543, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %551 = maximum(%549, %550) /* ty=Tensor[(9, 2, 6), int64] */;
  %552 = cast(%var_6203, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%551, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %556 = %546.0;
  %557 = greater_equal(%554, %555) /* ty=Tensor[(9, 2, 6), bool] */;
  (%556, %557)
}

def @func_7885() -> (Tensor[(9, 7, 14), float64], Tensor[(13, 9, 3), bool]) {
  %558 = @func_7837() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32], Tensor[(7, 126), float32]) */;
  %559 = %558.1;
  %560 = cast(%559, dtype="float64") /* ty=Tensor[(9, 7, 14), float64] */;
  %561 = @func_6815() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(13, 9, 3), bool], Tensor[(39, 9), int16]) */;
  %562 = sin(%560) /* ty=Tensor[(9, 7, 14), float64] */;
  %563 = %561.1;
  (%562, %563)
}

def @func_7187(%var_7172: Tensor[(7, 14, 9), int16], %var_7173: Tensor[(7, 14, 9), int16], %var_7179: Tensor[(1260), int64]) -> (Tensor[(7, 14, 9), int16], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) {
  %564 = cast(%var_7173, dtype="int16") /* ty=Tensor[(7, 14, 9), int16] */;
  %565 = shape_of(%var_7172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%var_7172, dtype="int16") /* ty=Tensor[(7, 14, 9), int16] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %568 = cast(%var_7179, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %569 = reshape(%568, newshape=[10, 14, 9]) /* ty=Tensor[(10, 14, 9), int64] */;
  %570 = @func_910(%569) /* ty=(Tensor[(10, 14, 9), int64],) */;
  %571 = bitwise_and(%566, %567) /* ty=Tensor[(7, 14, 9), int16] */;
  %572 = %570.0;
  (%571, %572, %var_7179)
}

def @func_9607() -> (Tensor[(9, 2, 6), float32],) {
  %573 = @func_7924() /* ty=Tensor[(9, 2, 6), bool] */;
  %574 = @func_8365() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32]) */;
  %575 = %574.0;
  %576 = cast(%575, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %577 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%573, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %580 = power(%578, %579) /* ty=Tensor[(9, 2, 6), float32] */;
  (%580,)
}

def @func_7467() -> Tensor[(10, 14, 9), float64] {
  %581 = @func_6227() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) */;
  %582 = %581.1;
  %583 = cast(%582, dtype="float64") /* ty=Tensor[(10, 14, 9), float64] */;
  log10(%583) /* ty=Tensor[(10, 14, 9), float64] */
}

def @func_8442() -> (Tensor[(9, 2, 6), float64],) {
  %584 = @func_6824() /* ty=Tensor[(9, 2, 6), float64] */;
  (%584,)
}

def @func_8365() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32]) {
  %585 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %586 = @func_7848() /* ty=(Tensor[(39, 9), int16], Tensor[(9, 7, 14), float32], Tensor[(1, 882), float32]) */;
  %587 = %585.0;
  %588 = %586.1;
  (%587, %588)
}

def @func_5096(%var_5079: Tensor[(8, 4, 5), float64], %var_5085: Tensor[(320), float32]) -> (Tensor[(8, 4, 5), float64], Tensor[(896), uint64], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180, 1), int32], Tensor[(1080, 1), int32], Tensor[(896), uint64]) {
  %589 = cast(%var_5079, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
  %590 = cast(meta[relay.Constant][43] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %591 = cast(meta[relay.Constant][43] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %592 = cast(%var_5085, dtype="float32") /* ty=Tensor[(320), float32] */;
  %593 = cast(meta[relay.Constant][44] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %594 = cast(meta[relay.Constant][45] /* ty=Tensor[(180, 1), int32] */, dtype="int32") /* ty=Tensor[(180, 1), int32] */;
  %595 = cast(meta[relay.Constant][46] /* ty=Tensor[(1080, 1), int32] */, dtype="int32") /* ty=Tensor[(1080, 1), int32] */;
  %596 = cast(meta[relay.Constant][47] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %597 = reshape(%590, newshape=[9, 16]) /* ty=Tensor[(9, 16), float32] */;
  %598 = reshape(%591, newshape=[9, 16]) /* ty=Tensor[(9, 16), float32] */;
  %599 = reshape(%592, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %600 = reshape(%593, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %601 = reshape(%594, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %602 = reshape(%595, newshape=[1080]) /* ty=Tensor[(1080), int32] */;
  %603 = reshape(%596, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %604 = @func_2561(%597, %598, %599, %600, %601, %602, %603) /* ty=(Tensor[(9, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(70, ?), float64], Tensor[(70, ?), int64], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(6, 8, 14), float64], Tensor[(672), float32], Tensor[(896), uint64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64]) */;
  %605 = atanh(%589) /* ty=Tensor[(8, 4, 5), float64] */;
  %606 = %604.8;
  (%605, %606, meta[relay.Constant][43] /* ty=Tensor[(144), float32] */, %var_5085, meta[relay.Constant][44] /* ty=Tensor[(672), float32] */, meta[relay.Constant][45] /* ty=Tensor[(180, 1), int32] */, meta[relay.Constant][46] /* ty=Tensor[(1080, 1), int32] */, meta[relay.Constant][47] /* ty=Tensor[(896), uint64] */)
}

def @func_6694(%var_6685: Tensor[(5, 3, 15), int64], %var_6686: Tensor[(5, 3, 15), int64]) -> Tensor[(5, 3, 15), int64] {
  %607 = cast(%var_6686, dtype="int64") /* ty=Tensor[(5, 3, 15), int64] */;
  %608 = shape_of(%var_6685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %609 = cast(%var_6685, dtype="int64") /* ty=Tensor[(5, 3, 15), int64] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%609, %610) /* ty=Tensor[(5, 3, 15), int64] */
}

def @func_8174() -> (Tensor[(9, 2, 6), float64],) {
  %611 = @func_6727() /* ty=Tensor[(9, 2, 6), float32] */;
  %612 = cast(%611, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %613 = cosh(%612) /* ty=Tensor[(9, 2, 6), float64] */;
  (%613,)
}

def @func_5773() -> Tensor[(9, 2, 6), float32] {
  %614 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 2, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  log(%614) /* ty=Tensor[(9, 2, 6), float32] */
}

def @func_9433(%var_9348: Tensor[(224), float64], %var_9355: Tensor[(8, 20), float64], %var_9359: Tensor[(75, 3), int64], %var_9371: Tensor[(896), uint64]) -> (Tensor[(9, 2, 6), float64], Tensor[(72), float32], Tensor[(6, 12), uint64], Tensor[(288), uint64], Tensor[(224), float64], Tensor[(672), float32], Tensor[(8, 20), float64], Tensor[(320), float32], Tensor[(5, 3, 15), int64], Tensor[(75, 3), int64], Tensor[(4, 11, 15), int64], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(70), uint32], Tensor[(4, 11, 15), int64], Tensor[(1080), int32], Tensor[(9, 2, 6), bool]) {
  %615 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
  %616 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 12), uint64] */, dtype="uint64") /* ty=Tensor[(6, 12), uint64] */;
  %617 = cast(meta[relay.Constant][50] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %618 = cast(%var_9348, dtype="float64") /* ty=Tensor[(224), float64] */;
  %619 = reshape(%616, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %620 = reshape(%617, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %621 = reshape(%618, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %622 = @func_8668(%619, %620, %621) /* ty=(Tensor[(9, 12, 10), float64], Tensor[(288), uint64], Tensor[(1080), float64], Tensor[(9, 2, 6), int64], Tensor[(40, 12), float32], Tensor[(224), float64], Tensor[(72), float32], Tensor[(10, 14, 9), int64], Tensor[(33, 1), float64]) */;
  %623 = cast(%var_9355, dtype="float64") /* ty=Tensor[(8, 20), float64] */;
  %624 = cast(meta[relay.Constant][51] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %625 = reshape(%623, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %626 = reshape(%624, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %627 = @func_5096(%625, %626) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(896), uint64], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180, 1), int32], Tensor[(1080, 1), int32], Tensor[(896), uint64]) */;
  %628 = cast(%var_9359, dtype="int64") /* ty=Tensor[(75, 3), int64] */;
  %629 = cast(%var_9359, dtype="int64") /* ty=Tensor[(75, 3), int64] */;
  %630 = reshape(%628, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int64] */;
  %631 = reshape(%629, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int64] */;
  %632 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %633 = cast(%var_9371, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %634 = cast(meta[relay.Constant][53] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %635 = reshape(%632, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %636 = reshape(%633, newshape=[14, 64]) /* ty=Tensor[(14, 64), uint64] */;
  %637 = reshape(%634, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %638 = @func_7018(%635, %636, %637) /* ty=(Tensor[(9, 2, 6), bool], Tensor[(4, 11, 15), int64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(14, 64), uint64], Tensor[(70), uint32]) */;
  %639 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %640 = cast(meta[relay.Constant][54] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %641 = cast(%var_9371, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %642 = cast(meta[relay.Constant][53] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %643 = reshape(%639, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
  %644 = reshape(%640, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
  %645 = reshape(%641, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %646 = reshape(%642, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
  %647 = @func_1580(%643, %644, %645, %646) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
  %648 = @func_7075() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %649 = %615.1;
  %650 = %622.6;
  %651 = %627.4;
  %652 = @func_6694(%630, %631) /* ty=Tensor[(5, 3, 15), int64] */;
  %653 = %638.1;
  %654 = %647.4;
  %655 = %648.0;
  (%649, %650, meta[relay.Constant][49] /* ty=Tensor[(6, 12), uint64] */, meta[relay.Constant][50] /* ty=Tensor[(288), uint64] */, %var_9348, %651, %var_9355, meta[relay.Constant][51] /* ty=Tensor[(320), float32] */, %652, %var_9359, %653, meta[relay.Constant][52] /* ty=Tensor[(180), int32] */, %var_9371, meta[relay.Constant][53] /* ty=Tensor[(70), uint32] */, %654, meta[relay.Constant][54] /* ty=Tensor[(1080), int32] */, %655)
}

def @func_9748() -> Tensor[(9, 2, 6), bool] {
  @func_7924() /* ty=Tensor[(9, 2, 6), bool] */
}

def @func_1719(%var_1710: Tensor[(9, 12, 10), float64], %var_1711: Tensor[(9, 12, 10), float64]) -> (Tensor[(9, 12, 10), float64],) {
  %656 = cast(%var_1711, dtype="float64") /* ty=Tensor[(9, 12, 10), float64] */;
  %657 = shape_of(%var_1710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%var_1710, dtype="float64") /* ty=Tensor[(9, 12, 10), float64] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %660 = floor_divide(%658, %659) /* ty=Tensor[(9, 12, 10), float64] */;
  (%660,)
}

def @func_456(%var_436: Tensor[(7, 1, 10), uint32]) -> Tensor[(7, 7, 10), uint32] {
  %661 = cast(%var_436, dtype="uint32") /* ty=Tensor[(7, 1, 10), uint32] */;
  %662 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 7, 10), uint32] */, dtype="uint32") /* ty=Tensor[(7, 7, 10), uint32] */;
  left_shift(%661, %662) /* ty=Tensor[(7, 7, 10), uint32] */
}

def @func_8964() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) {
  %663 = @func_8174() /* ty=(Tensor[(9, 2, 6), float64],) */;
  %664 = @func_5978() /* ty=Tensor[(9, 2, 6), float32] */;
  %665 = %663.0;
  (%664, %665)
}

def @func_7625() -> (Tensor[(9, 2, 6), float64],) {
  %666 = @func_6824() /* ty=Tensor[(9, 2, 6), float64] */;
  (%666,)
}

def @func_8026() -> (Tensor[(9, 2, 6), int16], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), int64]) {
  %667 = @func_7121() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %668 = %667.0;
  %669 = @func_6824() /* ty=Tensor[(9, 2, 6), float64] */;
  %670 = cast(%669, dtype="int16") /* ty=Tensor[(9, 2, 6), int16] */;
  %671 = shape_of(%668, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%668, dtype="int16") /* ty=Tensor[(9, 2, 6), int16] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %674 = cast(%668, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %675 = acos(%674) /* ty=Tensor[(9, 2, 6), float64] */;
  %676 = cast(%668, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%675, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %680 = cast(%668, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
  %681 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%675, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %684 = minimum(%672, %673) /* ty=Tensor[(9, 2, 6), int16] */;
  %685 = mod(%678, %679) /* ty=Tensor[(9, 2, 6), float64] */;
  %686 = left_shift(%682, %683) /* ty=Tensor[(9, 2, 6), int64] */;
  (%684, %685, %686)
}

def @func_2446(%var_2441: Tensor[(10, 10, 15), float32]) -> Tensor[(10, 10, 15), float32] {
  %687 = cast(%var_2441, dtype="float32") /* ty=Tensor[(10, 10, 15), float32] */;
  sin(%687) /* ty=Tensor[(10, 10, 15), float32] */
}

def @func_7350() -> Tensor[(9, 2, 6), float64] {
  @func_6336() /* ty=Tensor[(9, 2, 6), float64] */
}

def @func_7018(%var_7005: Tensor[(180), int32], %var_7007: Tensor[(14, 64), uint64], %var_7008: Tensor[(70), uint32]) -> (Tensor[(9, 2, 6), bool], Tensor[(4, 11, 15), int64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(14, 64), uint64], Tensor[(70), uint32]) {
  %688 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
  %689 = %688.1;
  %690 = cast(%689, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %691 = tan(%690) /* ty=Tensor[(9, 2, 6), float32] */;
  %692 = cast(%691, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
  %693 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %694 = cast(%689, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %696 = cast(%var_7005, dtype="int32") /* ty=Tensor[(180), int32] */;
  %697 = cast(meta[relay.Constant][56] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %698 = cast(%var_7007, dtype="uint64") /* ty=Tensor[(14, 64), uint64] */;
  %699 = cast(%var_7008, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %700 = reshape(%696, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
  %701 = reshape(%697, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
  %702 = reshape(%698, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %703 = reshape(%699, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
  %704 = @func_1580(%700, %701, %702, %703) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
  %705 = less(%694, %695) /* ty=Tensor[(9, 2, 6), bool] */;
  %706 = %704.4;
  (%705, %706, %var_7005, meta[relay.Constant][56] /* ty=Tensor[(1080), int32] */, %var_7007, %var_7008)
}

def @func_7420(%var_7376: Tensor[(224), float64]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 140), uint32], Tensor[(1260), int64], Tensor[(8, 4, 15), bool], Tensor[(224), float64], Tensor[(896), uint64], Tensor[(40, 12), float32], Tensor[(8, 4, 15), bool], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) {
  %707 = @func_5955() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %708 = %707.0;
  %709 = cast(%708, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %710 = cast(meta[relay.Constant][57] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %711 = reshape(%710, newshape=[9, 140]) /* ty=Tensor[(9, 140), int64] */;
  %712 = cast(%var_7376, dtype="float64") /* ty=Tensor[(224), float64] */;
  %713 = cast(meta[relay.Constant][58] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %714 = cast(meta[relay.Constant][59] /* ty=Tensor[(40, 12), bool] */, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
  %715 = reshape(%712, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %716 = reshape(%713, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %717 = reshape(%714, newshape=[480]) /* ty=Tensor[(480), bool] */;
  %718 = @func_6028(%715, %716, %717) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(8, 4, 15), bool], Tensor[(480), bool], Tensor[(672), float64]) */;
  %719 = cast(meta[relay.Constant][60] /* ty=Tensor[(40, 12), bool] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %720 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(40, 12), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %721 = cast(meta[relay.Constant][59] /* ty=Tensor[(40, 12), bool] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %723 = %718.5;
  %724 = cast(%723, dtype="bool") /* ty=Tensor[(8, 4, 15), bool] */;
  %725 = cast(meta[relay.Constant][59] /* ty=Tensor[(40, 12), bool] */, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
  %726 = reshape(%724, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
  %727 = reshape(%725, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
  %728 = cast(meta[relay.Constant][61] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %729 = reshape(%728, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), float32] */;
  %730 = @func_2104(%729) /* ty=(Tensor[(7, 16, 9), float32],) */;
  %731 = sigmoid(%709) /* ty=Tensor[(9, 2, 6), float32] */;
  %732 = @func_6430(%711) /* ty=Tensor[(9, 140), uint32] */;
  %733 = maximum(%721, %722) /* ty=Tensor[(40, 12), float32] */;
  %734 = @func_2703(%726, %727) /* ty=Tensor[(8, 4, 15), bool] */;
  %735 = %730.0;
  (%731, %732, meta[relay.Constant][57] /* ty=Tensor[(1260), int64] */, %723, %var_7376, meta[relay.Constant][58] /* ty=Tensor[(896), uint64] */, %733, %734, %735, meta[relay.Constant][61] /* ty=Tensor[(1008), float32] */)
}

def @func_4304(%var_4275: Tensor[(13, 8, 7), int64], %var_4276: Tensor[(13, 8, 7), int64], %var_4283: Tensor[(480), bool]) -> (Tensor[(13, 8, 7), int64], Tensor[(480), bool], Tensor[(8, 4, 15), float32]) {
  %736 = cast(%var_4276, dtype="int64") /* ty=Tensor[(13, 8, 7), int64] */;
  %737 = shape_of(%var_4275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_4275, dtype="int64") /* ty=Tensor[(13, 8, 7), int64] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %740 = cast(%var_4283, dtype="bool") /* ty=Tensor[(480), bool] */;
  %741 = cast(%var_4283, dtype="bool") /* ty=Tensor[(480), bool] */;
  %742 = reshape(%740, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
  %743 = reshape(%741, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
  %744 = @func_2703(%742, %743) /* ty=Tensor[(8, 4, 15), bool] */;
  %745 = cast(%744, dtype="float32") /* ty=Tensor[(8, 4, 15), float32] */;
  %746 = bitwise_xor(%738, %739) /* ty=Tensor[(13, 8, 7), int64] */;
  %747 = rsqrt(%745) /* ty=Tensor[(8, 4, 15), float32] */;
  (%746, %var_4283, %747)
}

def @func_5899(%var_5893: Tensor[(160), float64], %var_5894: Tensor[(320), float32]) -> (Tensor[(9, 2, 6), float32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32]) {
  %748 = cast(%var_5893, dtype="float64") /* ty=Tensor[(160), float64] */;
  %749 = cast(%var_5894, dtype="float32") /* ty=Tensor[(320), float32] */;
  %750 = reshape(%748, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %751 = reshape(%749, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %752 = @func_5096(%750, %751) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(896), uint64], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180, 1), int32], Tensor[(1080, 1), int32], Tensor[(896), uint64]) */;
  %753 = @func_5773() /* ty=Tensor[(9, 2, 6), float32] */;
  %754 = %752.7;
  (%753, %754, %var_5893, %var_5894)
}

def @func_1580(%var_1505: Tensor[(1, 12, 15), int32], %var_1506: Tensor[(6, 12, 15), int32], %var_1535: Tensor[(896), uint64], %var_1542: Tensor[(7, 10), uint32]) -> (Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) {
  %755 = cast(%var_1505, dtype="int32") /* ty=Tensor[(1, 12, 15), int32] */;
  %756 = cast(%var_1506, dtype="int32") /* ty=Tensor[(6, 12, 15), int32] */;
  %757 = cast(meta[relay.Constant][62] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %758 = cast(meta[relay.Constant][62] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %759 = cast(%var_1535, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %760 = reshape(%757, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %761 = reshape(%758, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %762 = reshape(%759, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %763 = @func_1128(%760, %761, %762) /* ty=(Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
  %764 = cast(meta[relay.Constant][62] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %765 = cast(meta[relay.Constant][62] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %766 = cast(%var_1535, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %767 = reshape(%764, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %768 = reshape(%765, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %769 = reshape(%766, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %770 = @func_1128(%767, %768, %769) /* ty=(Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
  %771 = cast(%var_1535, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %772 = cast(%var_1535, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %773 = cast(%var_1542, dtype="uint32") /* ty=Tensor[(7, 10), uint32] */;
  %774 = reshape(%771, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
  %775 = reshape(%772, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
  %776 = reshape(%773, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %777 = @func_690(%774, %775, %776) /* ty=(Tensor[(16, 14, 4), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) */;
  %778 = %763.0;
  %779 = cast(%778, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
  %780 = %770.0;
  %781 = cast(%780, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
  %782 = cast(%var_1535, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %783 = reshape(%779, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %784 = reshape(%781, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %785 = reshape(%782, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %786 = @func_1128(%783, %784, %785) /* ty=(Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
  %787 = %786.0;
  %788 = cast(%787, dtype="float32") /* ty=Tensor[(4, 11, 15), float32] */;
  %789 = cast(meta[relay.Constant][63] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %790 = reshape(%789, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), float32] */;
  %791 = cast(%var_1542, dtype="uint32") /* ty=Tensor[(7, 10), uint32] */;
  %792 = reshape(%791, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %793 = right_shift(%755, %756) /* ty=Tensor[(6, 12, 15), int32] */;
  %794 = %777.1;
  %795 = sqrt(%788) /* ty=Tensor[(4, 11, 15), float32] */;
  %796 = @func_927(%790) /* ty=Tensor[(10, 2, 16), float32] */;
  %797 = @func_456(%792) /* ty=Tensor[(7, 7, 10), uint32] */;
  (%793, %778, meta[relay.Constant][62] /* ty=Tensor[(660), int64] */, %var_1535, %780, %794, %var_1542, %795, %796, meta[relay.Constant][63] /* ty=Tensor[(320), float32] */, %797)
}

def @func_6815() -> (Tensor[(9, 2, 6), float32], Tensor[(13, 9, 3), bool], Tensor[(39, 9), int16]) {
  %798 = cast(meta[relay.Constant][64] /* ty=Tensor[(39, 9), int16] */, dtype="int16") /* ty=Tensor[(39, 9), int16] */;
  %799 = reshape(%798, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), int16] */;
  %800 = @func_6727() /* ty=Tensor[(9, 2, 6), float32] */;
  %801 = @func_2959(%799) /* ty=Tensor[(13, 9, 3), bool] */;
  (%800, %801, meta[relay.Constant][64] /* ty=Tensor[(39, 9), int16] */)
}

def @func_7848() -> (Tensor[(39, 9), int16], Tensor[(9, 7, 14), float32], Tensor[(1, 882), float32]) {
  %802 = @func_6815() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(13, 9, 3), bool], Tensor[(39, 9), int16]) */;
  %803 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 882), float32] */, dtype="float32") /* ty=Tensor[(1, 882), float32] */;
  %804 = reshape(%803, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float32] */;
  %805 = @func_2128(%804) /* ty=(Tensor[(9, 7, 14), float32], Tensor[(9, 7, 14), float64]) */;
  %806 = %802.2;
  %807 = %805.0;
  (%806, %807, meta[relay.Constant][65] /* ty=Tensor[(1, 882), float32] */)
}

def @func_2959(%var_2950: Tensor[(13, 9, 3), int16]) -> Tensor[(13, 9, 3), bool] {
  %808 = cast(%var_2950, dtype="bool") /* ty=Tensor[(13, 9, 3), bool] */;
  %809 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(13, 9, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(meta[relay.Constant][66] /* ty=Tensor[(13, 9, 3), int16] */, dtype="bool") /* ty=Tensor[(13, 9, 3), bool] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%810, %811) /* ty=Tensor[(13, 9, 3), bool] */
}

def @func_6121(%var_6110: Tensor[(9, 2, 6), float32]) -> (Tensor[(9, 2, 6), uint64],) {
  %812 = @func_5773() /* ty=Tensor[(9, 2, 6), float32] */;
  %813 = cast(%var_6110, dtype="uint64") /* ty=Tensor[(9, 2, 6), uint64] */;
  %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%812, dtype="uint64") /* ty=Tensor[(9, 2, 6), uint64] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %817 = bitwise_and(%815, %816) /* ty=Tensor[(9, 2, 6), uint64] */;
  (%817,)
}

def @func_927(%var_923: Tensor[(10, 2, 16), float32]) -> Tensor[(10, 2, 16), float32] {
  %818 = cast(%var_923, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
  exp(%818) /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_1128(%var_1097: Tensor[(4, 11, 15), int64], %var_1098: Tensor[(4, 11, 15), int64], %var_1120: Tensor[(896), uint64]) -> (Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) {
  %819 = cast(%var_1098, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
  %820 = shape_of(%var_1097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%var_1097, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %823 = cast(meta[relay.Constant][67] /* ty=Tensor[(4, 11, 15), int64] */, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
  %824 = shape_of(%var_1098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%var_1098, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %827 = cast(%var_1120, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %828 = cast(%var_1120, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %829 = cast(meta[relay.Constant][68] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %830 = reshape(%827, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
  %831 = reshape(%828, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
  %832 = reshape(%829, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %833 = @func_690(%830, %831, %832) /* ty=(Tensor[(16, 14, 4), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) */;
  %834 = add(%821, %822) /* ty=Tensor[(4, 11, 15), int64] */;
  %835 = bitwise_or(%825, %826) /* ty=Tensor[(4, 11, 15), int64] */;
  %836 = %833.1;
  (%834, %835, %836, %var_1120, meta[relay.Constant][68] /* ty=Tensor[(70), uint32] */)
}

def @func_9768() -> (Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), int16]) {
  %837 = @func_7342() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %838 = @func_8026() /* ty=(Tensor[(9, 2, 6), int16], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), int64]) */;
  %839 = %837.0;
  %840 = %838.0;
  (%839, %840)
}

def @func_6028(%var_5985: Tensor[(224), float64], %var_5988: Tensor[(896), uint64], %var_5993: Tensor[(480), bool]) -> (Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(8, 4, 15), bool], Tensor[(480), bool], Tensor[(672), float64]) {
  %841 = @func_5955() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %842 = cast(%var_5993, dtype="bool") /* ty=Tensor[(480), bool] */;
  %843 = cast(%var_5993, dtype="bool") /* ty=Tensor[(480), bool] */;
  %844 = reshape(%842, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
  %845 = reshape(%843, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
  %846 = cast(%var_5985, dtype="float64") /* ty=Tensor[(224), float64] */;
  %847 = cast(meta[relay.Constant][69] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %848 = cast(meta[relay.Constant][70] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %849 = cast(%var_5988, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %850 = reshape(%846, newshape=[2, 8, 14]) /* ty=Tensor[(2, 8, 14), float64] */;
  %851 = reshape(%847, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %852 = reshape(%848, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %853 = reshape(%849, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %854 = @func_4870(%850, %851, %852, %853) /* ty=(Tensor[(7, 16, 9), float32], Tensor[(1008), float32], Tensor[(672), float32], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(2, 8, 14), int32], Tensor[(896), uint8]) */;
  %855 = %854.5;
  %856 = cast(%855, dtype="float64") /* ty=Tensor[(672), float64] */;
  %857 = %841.0;
  %858 = @func_2703(%844, %845) /* ty=Tensor[(8, 4, 15), bool] */;
  %859 = tan(%856) /* ty=Tensor[(672), float64] */;
  (%857, %var_5985, meta[relay.Constant][69] /* ty=Tensor[(672), float32] */, meta[relay.Constant][70] /* ty=Tensor[(180), int32] */, %var_5988, %858, %var_5993, %859)
}

def @func_6909() -> (Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) {
  %860 = @func_5978() /* ty=Tensor[(9, 2, 6), float32] */;
  %861 = @func_6841() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %862 = %861.0;
  %863 = cast(%862, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
  %864 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %865 = cast(%860, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %867 = cast(%862, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %868 = less_equal(%865, %866) /* ty=Tensor[(9, 2, 6), bool] */;
  %869 = sin(%867) /* ty=Tensor[(9, 2, 6), float64] */;
  (%868, %869)
}

def @func_7837() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32], Tensor[(7, 126), float32]) {
  %870 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %871 = cast(meta[relay.Constant][71] /* ty=Tensor[(7, 126), float32] */, dtype="float32") /* ty=Tensor[(7, 126), float32] */;
  %872 = reshape(%871, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float32] */;
  %873 = @func_2128(%872) /* ty=(Tensor[(9, 7, 14), float32], Tensor[(9, 7, 14), float64]) */;
  %874 = %870.0;
  %875 = %873.0;
  (%874, %875, meta[relay.Constant][71] /* ty=Tensor[(7, 126), float32] */)
}

def @func_8939(%var_8912: Tensor[(882), int16], %var_8920: Tensor[(160), float64]) -> (Tensor[(1260), int64], Tensor[(882), int16], Tensor[(10, 14, 9), float32], Tensor[(70), uint32], Tensor[(180), int32], Tensor[(32, 4), float32], Tensor[(160), float64]) {
  %876 = cast(%var_8912, dtype="int16") /* ty=Tensor[(882), int16] */;
  %877 = cast(%var_8912, dtype="int16") /* ty=Tensor[(882), int16] */;
  %878 = @func_8513() /* ty=Tensor[(10, 14, 9), int64] */;
  %879 = cast(%878, dtype="int64") /* ty=Tensor[(10, 14, 9), int64] */;
  %880 = reshape(%876, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), int16] */;
  %881 = reshape(%877, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), int16] */;
  %882 = reshape(%879, newshape=[1260]) /* ty=Tensor[(1260), int64] */;
  %883 = @func_7187(%880, %881, %882) /* ty=(Tensor[(7, 14, 9), int16], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) */;
  %884 = cast(%878, dtype="float32") /* ty=Tensor[(10, 14, 9), float32] */;
  %885 = cast(meta[relay.Constant][72] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %886 = cast(%var_8912, dtype="float32") /* ty=Tensor[(882), float32] */;
  %887 = cast(meta[relay.Constant][73] /* ty=Tensor[(32, 4), float32] */, dtype="float32") /* ty=Tensor[(32, 4), float32] */;
  %888 = cast(%var_8920, dtype="float64") /* ty=Tensor[(160), float64] */;
  %889 = reshape(%885, newshape=[30, 6]) /* ty=Tensor[(30, 6), int32] */;
  %890 = reshape(%886, newshape=[882]) /* ty=Tensor[(882), float32] */;
  %891 = reshape(%887, newshape=[8, 16]) /* ty=Tensor[(8, 16), float32] */;
  %892 = reshape(%888, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %893 = @func_8123(%889, %890, %891, %892) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(30, 6), int32], Tensor[(9, 2, 6), bool], Tensor[(128), float32], Tensor[(20), float64], Tensor[(882), float32], Tensor[(8, 16), float32], Tensor[(70), uint32], Tensor[(70), uint32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32], Tensor[(896), uint64]) */;
  %894 = %883.2;
  %895 = sigmoid(%884) /* ty=Tensor[(10, 14, 9), float32] */;
  %896 = %893.11;
  (%894, %var_8912, %895, %896, meta[relay.Constant][72] /* ty=Tensor[(180), int32] */, meta[relay.Constant][73] /* ty=Tensor[(32, 4), float32] */, %var_8920)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_459(%var_457: Tensor[(7, 1, 10), uint32]) -> Tensor[(7, 7, 10), uint32] {
  @func_456(%var_457) /* ty=Tensor[(7, 7, 10), uint32] */
}

def @func_2046(%var_2042: Tensor[(16, 8, 3), bool], %var_2043: Tensor[(16, 8, 3), bool], %var_2044: Tensor[(180), int32], %var_2045: Tensor[(1080), int32]) -> (Tensor[(4, 11, 15), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64], Tensor[(14, 5), uint32], Tensor[(70), uint32], Tensor[(16, 8, 3), uint8]) {
  %33 = fn (%var_1925: Tensor[(16, 8, 3), bool], %var_1926: Tensor[(16, 8, 3), bool], %var_1936: Tensor[(180), int32], %var_1937: Tensor[(1080), int32]) -> (Tensor[(4, 11, 15), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64], Tensor[(14, 5), uint32], Tensor[(70), uint32], Tensor[(16, 8, 3), uint8]) {
    %0 = cast(%var_1936, dtype="int32") /* ty=Tensor[(180), int32] */;
    %1 = cast(%var_1937, dtype="int32") /* ty=Tensor[(1080), int32] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 5), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5), uint32] */;
    %4 = reshape(%0, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
    %5 = reshape(%1, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
    %6 = reshape(%2, newshape=[896]) /* ty=Tensor[(896), uint64] */;
    %7 = reshape(%3, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
    %8 = @func_1580(%4, %5, %6, %7) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
    %9 = %8.7;
    %10 = cast(%9, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
    %11 = cast(%9, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
    %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %13 = reshape(%10, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
    %14 = reshape(%11, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
    %15 = reshape(%12, newshape=[896]) /* ty=Tensor[(896), uint64] */;
    %16 = @func_1128(%13, %14, %15) /* ty=(Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
    %17 = cast(%var_1926, dtype="bool") /* ty=Tensor[(16, 8, 3), bool] */;
    %18 = shape_of(%var_1925, dtype="int32") /* ty=Tensor[(3), int32] */;
    %19 = cast(%var_1925, dtype="bool") /* ty=Tensor[(16, 8, 3), bool] */;
    %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %21 = logical_or(%19, %20) /* ty=Tensor[(16, 8, 3), bool] */;
    %22 = cast(%21, dtype="uint32") /* ty=Tensor[(16, 8, 3), uint32] */;
    %23 = shape_of(%var_1925, dtype="int32") /* ty=Tensor[(3), int32] */;
    %24 = cast(%var_1925, dtype="uint32") /* ty=Tensor[(16, 8, 3), uint32] */;
    %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %26 = left_shift(%24, %25) /* ty=Tensor[(16, 8, 3), uint32] */;
    %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 8, 3), uint32] */, dtype="uint8") /* ty=Tensor[(16, 8, 3), uint8] */;
    %28 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
    %29 = cast(%26, dtype="uint8") /* ty=Tensor[(16, 8, 3), uint8] */;
    %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %31 = %16.4;
    %32 = right_shift(%29, %30) /* ty=Tensor[(16, 8, 3), uint8] */;
    (%9, %var_1936, %var_1937, meta[relay.Constant][0] /* ty=Tensor[(896), uint64] */, meta[relay.Constant][1] /* ty=Tensor[(14, 5), uint32] */, %31, %32)
  };
  %33(%var_2042, %var_2043, %var_2044, %var_2045) /* ty=(Tensor[(4, 11, 15), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64], Tensor[(14, 5), uint32], Tensor[(70), uint32], Tensor[(16, 8, 3), uint8]) */
}

def @func_5096(%var_5079: Tensor[(8, 4, 5), float64], %var_5085: Tensor[(320), float32]) -> (Tensor[(8, 4, 5), float64], Tensor[(896), uint64], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180, 1), int32], Tensor[(1080, 1), int32], Tensor[(896), uint64]) {
  %34 = cast(%var_5079, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %36 = cast(meta[relay.Constant][3] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %37 = cast(%var_5085, dtype="float32") /* ty=Tensor[(320), float32] */;
  %38 = cast(meta[relay.Constant][4] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %39 = cast(meta[relay.Constant][5] /* ty=Tensor[(180, 1), int32] */, dtype="int32") /* ty=Tensor[(180, 1), int32] */;
  %40 = cast(meta[relay.Constant][6] /* ty=Tensor[(1080, 1), int32] */, dtype="int32") /* ty=Tensor[(1080, 1), int32] */;
  %41 = cast(meta[relay.Constant][7] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %42 = reshape(%35, newshape=[9, 16]) /* ty=Tensor[(9, 16), float32] */;
  %43 = reshape(%36, newshape=[9, 16]) /* ty=Tensor[(9, 16), float32] */;
  %44 = reshape(%37, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %45 = reshape(%38, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %46 = reshape(%39, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %47 = reshape(%40, newshape=[1080]) /* ty=Tensor[(1080), int32] */;
  %48 = reshape(%41, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %49 = @func_2561(%42, %43, %44, %45, %46, %47, %48) /* ty=(Tensor[(9, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(70, ?), float64], Tensor[(70, ?), int64], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(6, 8, 14), float64], Tensor[(672), float32], Tensor[(896), uint64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64]) */;
  %50 = atanh(%34) /* ty=Tensor[(8, 4, 5), float64] */;
  %51 = %49.8;
  (%50, %51, meta[relay.Constant][3] /* ty=Tensor[(144), float32] */, %var_5085, meta[relay.Constant][4] /* ty=Tensor[(672), float32] */, meta[relay.Constant][5] /* ty=Tensor[(180, 1), int32] */, meta[relay.Constant][6] /* ty=Tensor[(1080, 1), int32] */, meta[relay.Constant][7] /* ty=Tensor[(896), uint64] */)
}

def @func_7448() -> Tensor[(9, 2, 6), float64] {
  %52 = fn () -> Tensor[(9, 2, 6), float64] {
    @func_6336() /* ty=Tensor[(9, 2, 6), float64] */
  };
  %52() /* ty=Tensor[(9, 2, 6), float64] */
}

def @func_8128(%var_8124: Tensor[(30, 6), int32], %var_8125: Tensor[(882), float32], %var_8126: Tensor[(8, 16), float32], %var_8127: Tensor[(160), float64]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(30, 6), int32], Tensor[(9, 2, 6), bool], Tensor[(128), float32], Tensor[(20), float64], Tensor[(882), float32], Tensor[(8, 16), float32], Tensor[(70), uint32], Tensor[(70), uint32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32], Tensor[(896), uint64]) {
  %100 = fn (%var_8064: Tensor[(30, 6), int32], %var_8095: Tensor[(882), float32], %var_8096: Tensor[(8, 16), float32], %var_8112: Tensor[(160), float64]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(30, 6), int32], Tensor[(9, 2, 6), bool], Tensor[(128), float32], Tensor[(20), float64], Tensor[(882), float32], Tensor[(8, 16), float32], Tensor[(70), uint32], Tensor[(70), uint32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32], Tensor[(896), uint64]) {
    %53 = @func_7121() /* ty=(Tensor[(9, 2, 6), float32],) */;
    %54 = cast(meta[relay.Constant][8] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
    %55 = cast(meta[relay.Constant][9] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %56 = cast(%var_8064, dtype="int32") /* ty=Tensor[(30, 6), int32] */;
    %57 = reshape(%54, newshape=[112, 2]) /* ty=Tensor[(112, 2), float64] */;
    %58 = reshape(%55, newshape=[56, 12]) /* ty=Tensor[(56, 12), float32] */;
    %59 = reshape(%56, newshape=[180]) /* ty=Tensor[(180), int32] */;
    %60 = @func_7056(%57, %58, %59) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(180), int32], Tensor[(56, 12), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(112, 2), uint16]) */;
    %61 = cast(meta[relay.Constant][10] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %62 = cast(meta[relay.Constant][10] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %63 = cast(%var_8095, dtype="float32") /* ty=Tensor[(882), float32] */;
    %64 = cast(%var_8096, dtype="float32") /* ty=Tensor[(8, 16), float32] */;
    %65 = cast(meta[relay.Constant][11] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %66 = reshape(%61, newshape=[5, 4]) /* ty=Tensor[(5, 4), float64] */;
    %67 = reshape(%62, newshape=[5, 4]) /* ty=Tensor[(5, 4), float64] */;
    %68 = reshape(%63, newshape=[882]) /* ty=Tensor[(882), float32] */;
    %69 = reshape(%64, newshape=[128]) /* ty=Tensor[(128), float32] */;
    %70 = reshape(%65, newshape=[70]) /* ty=Tensor[(70), uint32] */;
    %71 = @func_6472(%66, %67, %68, %69, %70) /* ty=(Tensor[(5, 4), float64], Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float64], Tensor[(882), float32], Tensor[(70), uint32], Tensor[(128), float32], Tensor[(70), uint32]) */;
    %72 = cast(meta[relay.Constant][10] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %73 = cast(meta[relay.Constant][10] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %74 = cast(%var_8095, dtype="float32") /* ty=Tensor[(882), float32] */;
    %75 = cast(%var_8096, dtype="float32") /* ty=Tensor[(8, 16), float32] */;
    %76 = cast(meta[relay.Constant][11] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %77 = reshape(%72, newshape=[5, 4]) /* ty=Tensor[(5, 4), float64] */;
    %78 = reshape(%73, newshape=[5, 4]) /* ty=Tensor[(5, 4), float64] */;
    %79 = reshape(%74, newshape=[882]) /* ty=Tensor[(882), float32] */;
    %80 = reshape(%75, newshape=[128]) /* ty=Tensor[(128), float32] */;
    %81 = reshape(%76, newshape=[70]) /* ty=Tensor[(70), uint32] */;
    %82 = @func_6472(%77, %78, %79, %80, %81) /* ty=(Tensor[(5, 4), float64], Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float64], Tensor[(882), float32], Tensor[(70), uint32], Tensor[(128), float32], Tensor[(70), uint32]) */;
    %83 = cast(%var_8112, dtype="float64") /* ty=Tensor[(160), float64] */;
    %84 = cast(meta[relay.Constant][12] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %85 = reshape(%83, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
    %86 = reshape(%84, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %87 = @func_5096(%85, %86) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(896), uint64], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180, 1), int32], Tensor[(1080, 1), int32], Tensor[(896), uint64]) */;
    %88 = cast(%var_8112, dtype="float64") /* ty=Tensor[(160), float64] */;
    %89 = cast(meta[relay.Constant][12] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %90 = reshape(%88, newshape=[160]) /* ty=Tensor[(160), float64] */;
    %91 = reshape(%89, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %92 = @func_5899(%90, %91) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32]) */;
    %93 = %53.0;
    %94 = %60.0;
    %95 = @func_7924() /* ty=Tensor[(9, 2, 6), bool] */;
    %96 = %71.5;
    %97 = %82.6;
    %98 = %87.1;
    %99 = %92.1;
    (%93, %94, meta[relay.Constant][8] /* ty=Tensor[(224), float64] */, meta[relay.Constant][9] /* ty=Tensor[(672), float32] */, %var_8064, %95, %96, meta[relay.Constant][10] /* ty=Tensor[(20), float64] */, %var_8095, %var_8096, meta[relay.Constant][11] /* ty=Tensor[(70), uint32] */, %97, %98, %var_8112, meta[relay.Constant][12] /* ty=Tensor[(320), float32] */, %99)
  };
  %100(%var_8124, %var_8125, %var_8126, %var_8127) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(30, 6), int32], Tensor[(9, 2, 6), bool], Tensor[(128), float32], Tensor[(20), float64], Tensor[(882), float32], Tensor[(8, 16), float32], Tensor[(70), uint32], Tensor[(70), uint32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32], Tensor[(896), uint64]) */
}

def @func_7191(%var_7188: Tensor[(7, 14, 9), int16], %var_7189: Tensor[(7, 14, 9), int16], %var_7190: Tensor[(1260), int64]) -> (Tensor[(7, 14, 9), int16], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) {
  %110 = fn (%var_7172: Tensor[(7, 14, 9), int16], %var_7173: Tensor[(7, 14, 9), int16], %var_7179: Tensor[(1260), int64]) -> (Tensor[(7, 14, 9), int16], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) {
    %101 = cast(%var_7173, dtype="int16") /* ty=Tensor[(7, 14, 9), int16] */;
    %102 = shape_of(%var_7172, dtype="int32") /* ty=Tensor[(3), int32] */;
    %103 = cast(%var_7172, dtype="int16") /* ty=Tensor[(7, 14, 9), int16] */;
    %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %105 = cast(%var_7179, dtype="int64") /* ty=Tensor[(1260), int64] */;
    %106 = reshape(%105, newshape=[10, 14, 9]) /* ty=Tensor[(10, 14, 9), int64] */;
    %107 = @func_910(%106) /* ty=(Tensor[(10, 14, 9), int64],) */;
    %108 = bitwise_and(%103, %104) /* ty=Tensor[(7, 14, 9), int16] */;
    %109 = %107.0;
    (%108, %109, %var_7179)
  };
  %110(%var_7188, %var_7189, %var_7190) /* ty=(Tensor[(7, 14, 9), int16], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) */
}

def @func_7422(%var_7421: Tensor[(224), float64]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 140), uint32], Tensor[(1260), int64], Tensor[(8, 4, 15), bool], Tensor[(224), float64], Tensor[(896), uint64], Tensor[(40, 12), float32], Tensor[(8, 4, 15), bool], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) {
  %140 = fn (%var_7376: Tensor[(224), float64]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 140), uint32], Tensor[(1260), int64], Tensor[(8, 4, 15), bool], Tensor[(224), float64], Tensor[(896), uint64], Tensor[(40, 12), float32], Tensor[(8, 4, 15), bool], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) {
    %111 = @func_5955() /* ty=(Tensor[(9, 2, 6), float32],) */;
    %112 = %111.0;
    %113 = cast(%112, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
    %114 = cast(meta[relay.Constant][13] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
    %115 = reshape(%114, newshape=[9, 140]) /* ty=Tensor[(9, 140), int64] */;
    %116 = cast(%var_7376, dtype="float64") /* ty=Tensor[(224), float64] */;
    %117 = cast(meta[relay.Constant][14] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %118 = cast(meta[relay.Constant][15] /* ty=Tensor[(40, 12), bool] */, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
    %119 = reshape(%116, newshape=[224]) /* ty=Tensor[(224), float64] */;
    %120 = reshape(%117, newshape=[896]) /* ty=Tensor[(896), uint64] */;
    %121 = reshape(%118, newshape=[480]) /* ty=Tensor[(480), bool] */;
    %122 = @func_6028(%119, %120, %121) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(8, 4, 15), bool], Tensor[(480), bool], Tensor[(672), float64]) */;
    %123 = cast(meta[relay.Constant][16] /* ty=Tensor[(40, 12), bool] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
    %124 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(40, 12), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %125 = cast(meta[relay.Constant][15] /* ty=Tensor[(40, 12), bool] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
    %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %127 = %122.5;
    %128 = cast(%127, dtype="bool") /* ty=Tensor[(8, 4, 15), bool] */;
    %129 = cast(meta[relay.Constant][15] /* ty=Tensor[(40, 12), bool] */, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
    %130 = reshape(%128, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
    %131 = reshape(%129, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
    %132 = cast(meta[relay.Constant][17] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %133 = reshape(%132, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), float32] */;
    %134 = @func_2104(%133) /* ty=(Tensor[(7, 16, 9), float32],) */;
    %135 = sigmoid(%113) /* ty=Tensor[(9, 2, 6), float32] */;
    %136 = @func_6430(%115) /* ty=Tensor[(9, 140), uint32] */;
    %137 = maximum(%125, %126) /* ty=Tensor[(40, 12), float32] */;
    %138 = @func_2703(%130, %131) /* ty=Tensor[(8, 4, 15), bool] */;
    %139 = %134.0;
    (%135, %136, meta[relay.Constant][13] /* ty=Tensor[(1260), int64] */, %127, %var_7376, meta[relay.Constant][14] /* ty=Tensor[(896), uint64] */, %137, %138, %139, meta[relay.Constant][17] /* ty=Tensor[(1008), float32] */)
  };
  %140(%var_7421) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 140), uint32], Tensor[(1260), int64], Tensor[(8, 4, 15), bool], Tensor[(224), float64], Tensor[(896), uint64], Tensor[(40, 12), float32], Tensor[(8, 4, 15), bool], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) */
}

def @func_6033(%var_6030: Tensor[(224), float64], %var_6031: Tensor[(896), uint64], %var_6032: Tensor[(480), bool]) -> (Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(8, 4, 15), bool], Tensor[(480), bool], Tensor[(672), float64]) {
  @func_6028(%var_6030, %var_6031, %var_6032) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(8, 4, 15), bool], Tensor[(480), bool], Tensor[(672), float64]) */
}

def @func_929(%var_928: Tensor[(10, 2, 16), float32]) -> Tensor[(10, 2, 16), float32] {
  %142 = fn (%var_923: Tensor[(10, 2, 16), float32]) -> Tensor[(10, 2, 16), float32] {
    %141 = cast(%var_923, dtype="float32") /* ty=Tensor[(10, 2, 16), float32] */;
    exp(%141) /* ty=Tensor[(10, 2, 16), float32] */
  };
  %142(%var_928) /* ty=Tensor[(10, 2, 16), float32] */
}

def @func_6517(%var_6515: Tensor[(1, 16, 13), int8], %var_6516: Tensor[(9, 16, 13), int8]) -> (Tensor[(9, 16, 13), int8],) {
  %146 = fn (%var_6505: Tensor[(1, 16, 13), int8], %var_6506: Tensor[(9, 16, 13), int8]) -> (Tensor[(9, 16, 13), int8],) {
    %143 = cast(%var_6505, dtype="int8") /* ty=Tensor[(1, 16, 13), int8] */;
    %144 = cast(%var_6506, dtype="int8") /* ty=Tensor[(9, 16, 13), int8] */;
    %145 = add(%143, %144) /* ty=Tensor[(9, 16, 13), int8] */;
    (%145,)
  };
  %146(%var_6515, %var_6516) /* ty=(Tensor[(9, 16, 13), int8],) */
}

def @func_2690(%var_2689: Tensor[(6, 16, 12), float64]) -> (Tensor[(6, 16, 12), float64],) {
  %149 = fn (%var_2685: Tensor[(6, 16, 12), float64]) -> (Tensor[(6, 16, 12), float64],) {
    %147 = cast(%var_2685, dtype="float64") /* ty=Tensor[(6, 16, 12), float64] */;
    %148 = tan(%147) /* ty=Tensor[(6, 16, 12), float64] */;
    (%148,)
  };
  %149(%var_2689) /* ty=(Tensor[(6, 16, 12), float64],) */
}

def @func_7925() -> Tensor[(9, 2, 6), bool] {
  %150 = fn () -> Tensor[(9, 2, 6), bool] {
    @func_6928() /* ty=Tensor[(9, 2, 6), bool] */
  };
  %150() /* ty=Tensor[(9, 2, 6), bool] */
}

def @func_8943(%var_8941: Tensor[(882), int16], %var_8942: Tensor[(160), float64]) -> (Tensor[(1260), int64], Tensor[(882), int16], Tensor[(10, 14, 9), float32], Tensor[(70), uint32], Tensor[(180), int32], Tensor[(32, 4), float32], Tensor[(160), float64]) {
  @func_8939(%var_8941, %var_8942) /* ty=(Tensor[(1260), int64], Tensor[(882), int16], Tensor[(10, 14, 9), float32], Tensor[(70), uint32], Tensor[(180), int32], Tensor[(32, 4), float32], Tensor[(160), float64]) */
}

def @func_4870(%var_4823: Tensor[(2, 8, 14), float64], %var_4852: Tensor[(672), float32], %var_4853: Tensor[(180), int32], %var_4855: Tensor[(896), uint64]) -> (Tensor[(7, 16, 9), float32], Tensor[(1008), float32], Tensor[(672), float32], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(2, 8, 14), int32], Tensor[(896), uint8]) {
  %151 = cast(meta[relay.Constant][18] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %152 = reshape(%151, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), float32] */;
  %153 = @func_2104(%152) /* ty=(Tensor[(7, 16, 9), float32],) */;
  %154 = cast(meta[relay.Constant][19] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %155 = cast(meta[relay.Constant][19] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %156 = cast(meta[relay.Constant][20] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %157 = cast(%var_4852, dtype="float32") /* ty=Tensor[(672), float32] */;
  %158 = cast(%var_4853, dtype="int32") /* ty=Tensor[(180), int32] */;
  %159 = cast(meta[relay.Constant][21] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %160 = cast(%var_4855, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %161 = reshape(%154, newshape=[9, 16]) /* ty=Tensor[(9, 16), float32] */;
  %162 = reshape(%155, newshape=[9, 16]) /* ty=Tensor[(9, 16), float32] */;
  %163 = reshape(%156, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %164 = reshape(%157, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %165 = reshape(%158, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %166 = reshape(%159, newshape=[1080]) /* ty=Tensor[(1080), int32] */;
  %167 = reshape(%160, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %168 = @func_2561(%161, %162, %163, %164, %165, %166, %167) /* ty=(Tensor[(9, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(70, ?), float64], Tensor[(70, ?), int64], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(6, 8, 14), float64], Tensor[(672), float32], Tensor[(896), uint64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64]) */;
  %169 = cast(%var_4823, dtype="float64") /* ty=Tensor[(2, 8, 14), float64] */;
  %170 = asin(%169) /* ty=Tensor[(2, 8, 14), float64] */;
  %171 = cast(%var_4823, dtype="int32") /* ty=Tensor[(2, 8, 14), int32] */;
  %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%170, dtype="int32") /* ty=Tensor[(2, 8, 14), int32] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %175 = cast(meta[relay.Constant][22] /* ty=Tensor[(896), uint64] */, dtype="uint8") /* ty=Tensor[(896), uint8] */;
  %176 = shape_of(%var_4855, dtype="int32") /* ty=Tensor[(1), int32] */;
  %177 = cast(%var_4855, dtype="uint8") /* ty=Tensor[(896), uint8] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %179 = %153.0;
  %180 = %168.7;
  %181 = multiply(%173, %174) /* ty=Tensor[(2, 8, 14), int32] */;
  %182 = add(%177, %178) /* ty=Tensor[(896), uint8] */;
  (%179, meta[relay.Constant][18] /* ty=Tensor[(1008), float32] */, %180, meta[relay.Constant][19] /* ty=Tensor[(144), float32] */, meta[relay.Constant][20] /* ty=Tensor[(320), float32] */, %var_4852, %var_4853, meta[relay.Constant][21] /* ty=Tensor[(1080), int32] */, %181, %182)
}

def @func_456(%var_436: Tensor[(7, 1, 10), uint32]) -> Tensor[(7, 7, 10), uint32] {
  %183 = cast(%var_436, dtype="uint32") /* ty=Tensor[(7, 1, 10), uint32] */;
  %184 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 7, 10), uint32] */, dtype="uint32") /* ty=Tensor[(7, 7, 10), uint32] */;
  left_shift(%183, %184) /* ty=Tensor[(7, 7, 10), uint32] */
}

def @func_8400() -> (Tensor[(13, 15, 9), float64],) {
  %185 = @func_8328() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(13, 15, 9), float64]) */;
  %186 = %185.1;
  (%186,)
}

def @func_9026() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) {
  @func_9024() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) */
}

def @func_6671(%var_6670: Tensor[(72), uint64]) -> (Tensor[(9, 2, 6), float32], Tensor[(1080), float64], Tensor[(72), uint64], Tensor[(288), uint64], Tensor[(1080), float64], Tensor[(11, 7, 14), bool], Tensor[(1078), bool]) {
  %199 = fn (%var_6643: Tensor[(72), uint64]) -> (Tensor[(9, 2, 6), float32], Tensor[(1080), float64], Tensor[(72), uint64], Tensor[(288), uint64], Tensor[(1080), float64], Tensor[(11, 7, 14), bool], Tensor[(1078), bool]) {
    %187 = cast(%var_6643, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %188 = cast(meta[relay.Constant][24] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %189 = cast(meta[relay.Constant][25] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %190 = reshape(%187, newshape=[1, 8, 9]) /* ty=Tensor[(1, 8, 9), uint64] */;
    %191 = reshape(%188, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint64] */;
    %192 = reshape(%189, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
    %193 = @func_5363(%190, %191, %192) /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(9, 12, 10), float64], Tensor[(1080), float64]) */;
    %194 = cast(meta[relay.Constant][26] /* ty=Tensor[(1078), bool] */, dtype="bool") /* ty=Tensor[(1078), bool] */;
    %195 = reshape(%194, newshape=[11, 7, 14]) /* ty=Tensor[(11, 7, 14), bool] */;
    %196 = @func_5978() /* ty=Tensor[(9, 2, 6), float32] */;
    %197 = %193.2;
    %198 = @func_4574(%195) /* ty=Tensor[(11, 7, 14), bool] */;
    (%196, %197, %var_6643, meta[relay.Constant][24] /* ty=Tensor[(288), uint64] */, meta[relay.Constant][25] /* ty=Tensor[(1080), float64] */, %198, meta[relay.Constant][26] /* ty=Tensor[(1078), bool] */)
  };
  %199(%var_6670) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(1080), float64], Tensor[(72), uint64], Tensor[(288), uint64], Tensor[(1080), float64], Tensor[(11, 7, 14), bool], Tensor[(1078), bool]) */
}

def @func_6338() -> Tensor[(9, 2, 6), float64] {
  @func_6336() /* ty=Tensor[(9, 2, 6), float64] */
}

def @func_4229(%var_4216: Tensor[(1, 11, 3), float64]) -> (Tensor[(1, 11, 3), float64], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) {
  %200 = cast(%var_4216, dtype="float64") /* ty=Tensor[(1, 11, 3), float64] */;
  %201 = cast(meta[relay.Constant][27] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %202 = reshape(%201, newshape=[10, 14, 9]) /* ty=Tensor[(10, 14, 9), int64] */;
  %203 = @func_910(%202) /* ty=(Tensor[(10, 14, 9), int64],) */;
  %204 = sigmoid(%200) /* ty=Tensor[(1, 11, 3), float64] */;
  %205 = %203.0;
  (%204, %205, meta[relay.Constant][27] /* ty=Tensor[(1260), int64] */)
}

def @func_9199() -> (Tensor[(13, 15, 9), float64],) {
  %206 = @func_8400() /* ty=(Tensor[(13, 15, 9), float64],) */;
  %207 = %206.0;
  (%207,)
}

def @func_7787() -> (Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64]) {
  %219 = fn () -> (Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64]) {
    %208 = @func_6928() /* ty=Tensor[(9, 2, 6), bool] */;
    %209 = cast(%208, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
    %210 = @func_7075() /* ty=(Tensor[(9, 2, 6), bool],) */;
    %211 = %210.0;
    %212 = cast(%208, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
    %213 = shape_of(%211, dtype="int32") /* ty=Tensor[(3), int32] */;
    %214 = cast(%211, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
    %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %216 = asin(%209) /* ty=Tensor[(9, 2, 6), float64] */;
    %217 = floor_mod(%214, %215) /* ty=Tensor[(9, 2, 6), float64] */;
    %218 = @func_6824() /* ty=Tensor[(9, 2, 6), float64] */;
    (%216, %217, %218)
  };
  %219() /* ty=(Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64]) */
}

def @func_6910() -> (Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) {
  %230 = fn () -> (Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) {
    %220 = @func_5978() /* ty=Tensor[(9, 2, 6), float32] */;
    %221 = @func_6841() /* ty=(Tensor[(9, 2, 6), float32],) */;
    %222 = %221.0;
    %223 = cast(%222, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
    %224 = shape_of(%220, dtype="int32") /* ty=Tensor[(3), int32] */;
    %225 = cast(%220, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
    %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %227 = cast(%222, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
    %228 = less_equal(%225, %226) /* ty=Tensor[(9, 2, 6), bool] */;
    %229 = sin(%227) /* ty=Tensor[(9, 2, 6), float64] */;
    (%228, %229)
  };
  %230() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */
}

def @func_2106(%var_2105: Tensor[(7, 16, 9), float32]) -> (Tensor[(7, 16, 9), float32],) {
  %233 = fn (%var_2090: Tensor[(7, 16, 9), float32]) -> (Tensor[(7, 16, 9), float32],) {
    %231 = cast(%var_2090, dtype="float32") /* ty=Tensor[(7, 16, 9), float32] */;
    %232 = log(%231) /* ty=Tensor[(7, 16, 9), float32] */;
    (%232,)
  };
  %233(%var_2105) /* ty=(Tensor[(7, 16, 9), float32],) */
}

def @func_2962(%var_2960: Tensor[(13, 9, 3), int16]) -> Tensor[(13, 9, 3), bool] {
  @func_2959(%var_2960) /* ty=Tensor[(13, 9, 3), bool] */
}

def @func_6228() -> (Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) {
  %239 = fn () -> (Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) {
    %234 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 140), int64] */, dtype="int64") /* ty=Tensor[(9, 140), int64] */;
    %235 = reshape(%234, newshape=[10, 14, 9]) /* ty=Tensor[(10, 14, 9), int64] */;
    %236 = @func_910(%235) /* ty=(Tensor[(10, 14, 9), int64],) */;
    %237 = @func_5978() /* ty=Tensor[(9, 2, 6), float32] */;
    %238 = %236.0;
    (%237, %238, meta[relay.Constant][28] /* ty=Tensor[(9, 140), int64] */)
  };
  %239() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) */
}

def @func_827(%var_825: Tensor[(8, 16), float32], %var_826: Tensor[(70), uint32]) -> (Tensor[(8, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) {
  %250 = fn (%var_784: Tensor[(8, 16), float32], %var_798: Tensor[(70), uint32]) -> (Tensor[(8, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) {
    %240 = cast(%var_784, dtype="float32") /* ty=Tensor[(8, 16), float32] */;
    %241 = cast(meta[relay.Constant][29] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %242 = cast(meta[relay.Constant][29] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %243 = cast(%var_798, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %244 = reshape(%241, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
    %245 = reshape(%242, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
    %246 = reshape(%243, newshape=[70]) /* ty=Tensor[(70), uint32] */;
    %247 = @func_690(%244, %245, %246) /* ty=(Tensor[(16, 14, 4), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) */;
    %248 = erf(%240) /* ty=Tensor[(8, 16), float32] */;
    %249 = %247.1;
    (%248, %249, meta[relay.Constant][29] /* ty=Tensor[(896), uint64] */, %var_798)
  };
  %250(%var_825, %var_826) /* ty=(Tensor[(8, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */
}

def @func_8964() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) {
  %251 = @func_8174() /* ty=(Tensor[(9, 2, 6), float64],) */;
  %252 = @func_5978() /* ty=Tensor[(9, 2, 6), float32] */;
  %253 = %251.0;
  (%252, %253)
}

def @func_9024() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) {
  %254 = @func_7837() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32], Tensor[(7, 126), float32]) */;
  %255 = @func_8442() /* ty=(Tensor[(9, 2, 6), float64],) */;
  %256 = %254.0;
  %257 = %255.0;
  (%256, %257)
}

def @func_2130(%var_2129: Tensor[(9, 7, 14), float32]) -> (Tensor[(9, 7, 14), float32], Tensor[(9, 7, 14), float64]) {
  %262 = fn (%var_2116: Tensor[(9, 7, 14), float32]) -> (Tensor[(9, 7, 14), float32], Tensor[(9, 7, 14), float64]) {
    %258 = cast(%var_2116, dtype="float32") /* ty=Tensor[(9, 7, 14), float32] */;
    %259 = cast(%var_2116, dtype="float64") /* ty=Tensor[(9, 7, 14), float64] */;
    %260 = acos(%258) /* ty=Tensor[(9, 7, 14), float32] */;
    %261 = log10(%259) /* ty=Tensor[(9, 7, 14), float64] */;
    (%260, %261)
  };
  %262(%var_2129) /* ty=(Tensor[(9, 7, 14), float32], Tensor[(9, 7, 14), float64]) */
}

def @func_5979() -> Tensor[(9, 2, 6), float32] {
  %264 = fn () -> Tensor[(9, 2, 6), float32] {
    %263 = @func_5955() /* ty=(Tensor[(9, 2, 6), float32],) */;
    %263.0
  };
  %264() /* ty=Tensor[(9, 2, 6), float32] */
}

def @func_4876(%var_4872: Tensor[(2, 8, 14), float64], %var_4873: Tensor[(672), float32], %var_4874: Tensor[(180), int32], %var_4875: Tensor[(896), uint64]) -> (Tensor[(7, 16, 9), float32], Tensor[(1008), float32], Tensor[(672), float32], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(2, 8, 14), int32], Tensor[(896), uint8]) {
  @func_4870(%var_4872, %var_4873, %var_4874, %var_4875) /* ty=(Tensor[(7, 16, 9), float32], Tensor[(1008), float32], Tensor[(672), float32], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(2, 8, 14), int32], Tensor[(896), uint8]) */
}

def @func_8775(%var_8739: Tensor[(9, 2, 6), float64], %var_8745: Tensor[(225), int64]) -> (Tensor[(9, 2, 6), uint32], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(9, 2, 6), float64]) {
  %265 = @func_7447() /* ty=Tensor[(9, 2, 6), float64] */;
  %266 = cast(%var_8739, dtype="uint32") /* ty=Tensor[(9, 2, 6), uint32] */;
  %267 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%265, dtype="uint32") /* ty=Tensor[(9, 2, 6), uint32] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %270 = cast(%var_8745, dtype="int64") /* ty=Tensor[(225), int64] */;
  %271 = cast(%var_8745, dtype="int64") /* ty=Tensor[(225), int64] */;
  %272 = reshape(%270, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int64] */;
  %273 = reshape(%271, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int64] */;
  %274 = cast(%var_8745, dtype="float32") /* ty=Tensor[(225), float32] */;
  %275 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
  %276 = logical_xor(%268, %269) /* ty=Tensor[(9, 2, 6), uint32] */;
  %277 = @func_6694(%272, %273) /* ty=Tensor[(5, 3, 15), int64] */;
  %278 = sigmoid(%274) /* ty=Tensor[(225), float32] */;
  %279 = %275.1;
  (%276, %277, %278, %279)
}

def @func_9303() -> (Tensor[(7, 126), float32],) {
  @func_9301() /* ty=(Tensor[(7, 126), float32],) */
}

def @func_9258(%var_9224: Tensor[(9, 12, 4), float64]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 12, 4), float64], Tensor[(5, 3, 15), int64], Tensor[(75, 3), int64], Tensor[(9, 12, 4), float64]) {
  %280 = @func_8964() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) */;
  %281 = cast(%var_9224, dtype="float64") /* ty=Tensor[(9, 12, 4), float64] */;
  %282 = asinh(%281) /* ty=Tensor[(9, 12, 4), float64] */;
  %283 = cast(%282, dtype="float64") /* ty=Tensor[(9, 12, 4), float64] */;
  %284 = %280.0;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %286 = cast(meta[relay.Constant][30] /* ty=Tensor[(75, 3), int64] */, dtype="int64") /* ty=Tensor[(75, 3), int64] */;
  %287 = reshape(%285, newshape=[9, 2, 6]) /* ty=Tensor[(9, 2, 6), float64] */;
  %288 = reshape(%286, newshape=[225]) /* ty=Tensor[(225), int64] */;
  %289 = @func_8775(%287, %288) /* ty=(Tensor[(9, 2, 6), uint32], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(9, 2, 6), float64]) */;
  %290 = cast(%282, dtype="float64") /* ty=Tensor[(9, 12, 4), float64] */;
  %291 = log10(%283) /* ty=Tensor[(9, 12, 4), float64] */;
  %292 = %289.1;
  %293 = sigmoid(%290) /* ty=Tensor[(9, 12, 4), float64] */;
  (%284, %291, %292, meta[relay.Constant][30] /* ty=Tensor[(75, 3), int64] */, %293)
}

def @func_1745(%var_1726: Tensor[(8, 11, 15), bool], %var_1734: Tensor[(70), uint32]) -> (Tensor[(8, 11, 15), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) {
  %294 = cast(%var_1726, dtype="bool") /* ty=Tensor[(8, 11, 15), bool] */;
  %295 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(8, 11, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 11, 15), bool] */, dtype="bool") /* ty=Tensor[(8, 11, 15), bool] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %298 = cast(%var_1734, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %299 = reshape(%298, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %300 = logical_or(%296, %297) /* ty=Tensor[(8, 11, 15), bool] */;
  %301 = @func_456(%299) /* ty=Tensor[(7, 7, 10), uint32] */;
  (%300, %301, %var_1734)
}

def @func_8706() -> (Tensor[(5, 14, 3), uint32],) {
  @func_8704() /* ty=(Tensor[(5, 14, 3), uint32],) */
}

def @func_6430(%var_6424: Tensor[(9, 140), int64]) -> Tensor[(9, 140), uint32] {
  %302 = @func_6227() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) */;
  %303 = %302.2;
  %304 = cast(%var_6424, dtype="uint32") /* ty=Tensor[(9, 140), uint32] */;
  %305 = shape_of(%303, dtype="int32") /* ty=Tensor[(2), int32] */;
  %306 = cast(%303, dtype="uint32") /* ty=Tensor[(9, 140), uint32] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  multiply(%306, %307) /* ty=Tensor[(9, 140), uint32] */
}

def @func_8966() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) {
  @func_8964() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) */
}

def @func_6123(%var_6122: Tensor[(9, 2, 6), float32]) -> (Tensor[(9, 2, 6), uint64],) {
  %314 = fn (%var_6110: Tensor[(9, 2, 6), float32]) -> (Tensor[(9, 2, 6), uint64],) {
    %308 = @func_5773() /* ty=Tensor[(9, 2, 6), float32] */;
    %309 = cast(%var_6110, dtype="uint64") /* ty=Tensor[(9, 2, 6), uint64] */;
    %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(3), int32] */;
    %311 = cast(%308, dtype="uint64") /* ty=Tensor[(9, 2, 6), uint64] */;
    %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %313 = bitwise_and(%311, %312) /* ty=Tensor[(9, 2, 6), uint64] */;
    (%313,)
  };
  %314(%var_6122) /* ty=(Tensor[(9, 2, 6), uint64],) */
}

def @func_6478(%var_6473: Tensor[(5, 4), float64], %var_6474: Tensor[(5, 4), float64], %var_6475: Tensor[(882), float32], %var_6476: Tensor[(128), float32], %var_6477: Tensor[(70), uint32]) -> (Tensor[(5, 4), float64], Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float64], Tensor[(882), float32], Tensor[(70), uint32], Tensor[(128), float32], Tensor[(70), uint32]) {
  %332 = fn (%var_6443: Tensor[(5, 4), float64], %var_6444: Tensor[(5, 4), float64], %var_6461: Tensor[(882), float32], %var_6468: Tensor[(128), float32], %var_6469: Tensor[(70), uint32]) -> (Tensor[(5, 4), float64], Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float64], Tensor[(882), float32], Tensor[(70), uint32], Tensor[(128), float32], Tensor[(70), uint32]) {
    %315 = cast(%var_6444, dtype="float64") /* ty=Tensor[(5, 4), float64] */;
    %316 = shape_of(%var_6443, dtype="int32") /* ty=Tensor[(2), int32] */;
    %317 = cast(%var_6443, dtype="float64") /* ty=Tensor[(5, 4), float64] */;
    %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %319 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
    %320 = cast(%var_6461, dtype="float32") /* ty=Tensor[(882), float32] */;
    %321 = reshape(%320, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float32] */;
    %322 = @func_2128(%321) /* ty=(Tensor[(9, 7, 14), float32], Tensor[(9, 7, 14), float64]) */;
    %323 = cast(%var_6468, dtype="float32") /* ty=Tensor[(128), float32] */;
    %324 = cast(%var_6469, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %325 = reshape(%323, newshape=[8, 16]) /* ty=Tensor[(8, 16), float32] */;
    %326 = reshape(%324, newshape=[70]) /* ty=Tensor[(70), uint32] */;
    %327 = @func_824(%325, %326) /* ty=(Tensor[(8, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
    %328 = floor_mod(%317, %318) /* ty=Tensor[(5, 4), float64] */;
    %329 = %319.0;
    %330 = %322.1;
    %331 = %327.3;
    (%328, %329, %330, %var_6461, %331, %var_6468, %var_6469)
  };
  %332(%var_6473, %var_6474, %var_6475, %var_6476, %var_6477) /* ty=(Tensor[(5, 4), float64], Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float64], Tensor[(882), float32], Tensor[(70), uint32], Tensor[(128), float32], Tensor[(70), uint32]) */
}

def @func_8672(%var_8669: Tensor[(72), uint64], %var_8670: Tensor[(288), uint64], %var_8671: Tensor[(224), float64]) -> (Tensor[(9, 12, 10), float64], Tensor[(288), uint64], Tensor[(1080), float64], Tensor[(9, 2, 6), int64], Tensor[(40, 12), float32], Tensor[(224), float64], Tensor[(72), float32], Tensor[(10, 14, 9), int64], Tensor[(33, 1), float64]) {
  %360 = fn (%var_8603: Tensor[(72), uint64], %var_8604: Tensor[(288), uint64], %var_8645: Tensor[(224), float64]) -> (Tensor[(9, 12, 10), float64], Tensor[(288), uint64], Tensor[(1080), float64], Tensor[(9, 2, 6), int64], Tensor[(40, 12), float32], Tensor[(224), float64], Tensor[(72), float32], Tensor[(10, 14, 9), int64], Tensor[(33, 1), float64]) {
    %333 = cast(%var_8603, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %334 = cast(%var_8604, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %335 = cast(meta[relay.Constant][32] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %336 = reshape(%333, newshape=[1, 8, 9]) /* ty=Tensor[(1, 8, 9), uint64] */;
    %337 = reshape(%334, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint64] */;
    %338 = reshape(%335, newshape=[1080]) /* ty=Tensor[(1080), float64] */;
    %339 = @func_5363(%336, %337, %338) /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(9, 12, 10), float64], Tensor[(1080), float64]) */;
    %340 = @func_7342() /* ty=(Tensor[(9, 2, 6), bool],) */;
    %341 = %340.0;
    %342 = @func_5955() /* ty=(Tensor[(9, 2, 6), float32],) */;
    %343 = %342.0;
    %344 = cast(%343, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
    %345 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
    %346 = cast(%341, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
    %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %348 = cast(%var_8645, dtype="float64") /* ty=Tensor[(224), float64] */;
    %349 = reshape(%348, newshape=[224]) /* ty=Tensor[(224), float64] */;
    %350 = @func_7420(%349) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 140), uint32], Tensor[(1260), int64], Tensor[(8, 4, 15), bool], Tensor[(224), float64], Tensor[(896), uint64], Tensor[(40, 12), float32], Tensor[(8, 4, 15), bool], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) */;
    %351 = cast(%var_8603, dtype="float32") /* ty=Tensor[(72), float32] */;
    %352 = cast(meta[relay.Constant][33] /* ty=Tensor[(33, 1), float64] */, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
    %353 = reshape(%352, newshape=[1, 11, 3]) /* ty=Tensor[(1, 11, 3), float64] */;
    %354 = @func_4229(%353) /* ty=(Tensor[(1, 11, 3), float64], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) */;
    %355 = %339.1;
    %356 = right_shift(%346, %347) /* ty=Tensor[(9, 2, 6), int64] */;
    %357 = %350.6;
    %358 = sqrt(%351) /* ty=Tensor[(72), float32] */;
    %359 = %354.1;
    (%355, %var_8604, meta[relay.Constant][32] /* ty=Tensor[(1080), float64] */, %356, %357, %var_8645, %358, %359, meta[relay.Constant][33] /* ty=Tensor[(33, 1), float64] */)
  };
  %360(%var_8669, %var_8670, %var_8671) /* ty=(Tensor[(9, 12, 10), float64], Tensor[(288), uint64], Tensor[(1080), float64], Tensor[(9, 2, 6), int64], Tensor[(40, 12), float32], Tensor[(224), float64], Tensor[(72), float32], Tensor[(10, 14, 9), int64], Tensor[(33, 1), float64]) */
}

def @func_1719(%var_1710: Tensor[(9, 12, 10), float64], %var_1711: Tensor[(9, 12, 10), float64]) -> (Tensor[(9, 12, 10), float64],) {
  %361 = cast(%var_1711, dtype="float64") /* ty=Tensor[(9, 12, 10), float64] */;
  %362 = shape_of(%var_1710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%var_1710, dtype="float64") /* ty=Tensor[(9, 12, 10), float64] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %365 = floor_divide(%363, %364) /* ty=Tensor[(9, 12, 10), float64] */;
  (%365,)
}

def @func_9770() -> (Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), int16]) {
  @func_9768() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), int16]) */
}

def @func_8779(%var_8777: Tensor[(9, 2, 6), float64], %var_8778: Tensor[(225), int64]) -> (Tensor[(9, 2, 6), uint32], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(9, 2, 6), float64]) {
  @func_8775(%var_8777, %var_8778) /* ty=(Tensor[(9, 2, 6), uint32], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(9, 2, 6), float64]) */
}

def @func_1723(%var_1721: Tensor[(9, 12, 10), float64], %var_1722: Tensor[(9, 12, 10), float64]) -> (Tensor[(9, 12, 10), float64],) {
  @func_1719(%var_1721, %var_1722) /* ty=(Tensor[(9, 12, 10), float64],) */
}

def @func_5774() -> Tensor[(9, 2, 6), float32] {
  %367 = fn () -> Tensor[(9, 2, 6), float32] {
    %366 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 2, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
    log(%366) /* ty=Tensor[(9, 2, 6), float32] */
  };
  %367() /* ty=Tensor[(9, 2, 6), float32] */
}

def @func_258(%var_257: Tensor[(6, 8, 14), float32]) -> Tensor[(6, 8, 14), float64] {
  %373 = fn (%var_236: Tensor[(6, 8, 14), float32]) -> Tensor[(6, 8, 14), float64] {
    %368 = cast(%var_236, dtype="float32") /* ty=Tensor[(6, 8, 14), float32] */;
    %369 = cosh(%368) /* ty=Tensor[(6, 8, 14), float32] */;
    %370 = cast(%369, dtype="float32") /* ty=Tensor[(6, 8, 14), float32] */;
    %371 = erf(%370) /* ty=Tensor[(6, 8, 14), float32] */;
    %372 = cast(%371, dtype="float64") /* ty=Tensor[(6, 8, 14), float64] */;
    tan(%372) /* ty=Tensor[(6, 8, 14), float64] */
  };
  %373(%var_257) /* ty=Tensor[(6, 8, 14), float64] */
}

def @func_1580(%var_1505: Tensor[(1, 12, 15), int32], %var_1506: Tensor[(6, 12, 15), int32], %var_1535: Tensor[(896), uint64], %var_1542: Tensor[(7, 10), uint32]) -> (Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) {
  %374 = cast(%var_1505, dtype="int32") /* ty=Tensor[(1, 12, 15), int32] */;
  %375 = cast(%var_1506, dtype="int32") /* ty=Tensor[(6, 12, 15), int32] */;
  %376 = cast(meta[relay.Constant][35] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %377 = cast(meta[relay.Constant][35] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %378 = cast(%var_1535, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %379 = reshape(%376, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %380 = reshape(%377, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %381 = reshape(%378, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %382 = @func_1128(%379, %380, %381) /* ty=(Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
  %383 = cast(meta[relay.Constant][35] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %384 = cast(meta[relay.Constant][35] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %385 = cast(%var_1535, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %386 = reshape(%383, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %387 = reshape(%384, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %388 = reshape(%385, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %389 = @func_1128(%386, %387, %388) /* ty=(Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
  %390 = cast(%var_1535, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %391 = cast(%var_1535, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %392 = cast(%var_1542, dtype="uint32") /* ty=Tensor[(7, 10), uint32] */;
  %393 = reshape(%390, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
  %394 = reshape(%391, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
  %395 = reshape(%392, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %396 = @func_690(%393, %394, %395) /* ty=(Tensor[(16, 14, 4), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) */;
  %397 = %382.0;
  %398 = cast(%397, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
  %399 = %389.0;
  %400 = cast(%399, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
  %401 = cast(%var_1535, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %402 = reshape(%398, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %403 = reshape(%400, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
  %404 = reshape(%401, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %405 = @func_1128(%402, %403, %404) /* ty=(Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
  %406 = %405.0;
  %407 = cast(%406, dtype="float32") /* ty=Tensor[(4, 11, 15), float32] */;
  %408 = cast(meta[relay.Constant][36] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %409 = reshape(%408, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), float32] */;
  %410 = cast(%var_1542, dtype="uint32") /* ty=Tensor[(7, 10), uint32] */;
  %411 = reshape(%410, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %412 = right_shift(%374, %375) /* ty=Tensor[(6, 12, 15), int32] */;
  %413 = %396.1;
  %414 = sqrt(%407) /* ty=Tensor[(4, 11, 15), float32] */;
  %415 = @func_927(%409) /* ty=Tensor[(10, 2, 16), float32] */;
  %416 = @func_456(%411) /* ty=Tensor[(7, 7, 10), uint32] */;
  (%412, %397, meta[relay.Constant][35] /* ty=Tensor[(660), int64] */, %var_1535, %399, %413, %var_1542, %414, %415, meta[relay.Constant][36] /* ty=Tensor[(320), float32] */, %416)
}

def @func_7675(%var_7656: Tensor[(1320), bool], %var_7669: Tensor[(1872), float64]) -> (Tensor[(9, 2, 6), bool], Tensor[(8, 11, 15), bool], Tensor[(1320), bool], Tensor[(70), uint32], Tensor[(3, 60), int32], Tensor[(1872), float64], Tensor[(30, 6), int32]) {
  %417 = @func_7075() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %418 = cast(%var_7656, dtype="bool") /* ty=Tensor[(1320), bool] */;
  %419 = cast(meta[relay.Constant][37] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %420 = reshape(%418, newshape=[8, 11, 15]) /* ty=Tensor[(8, 11, 15), bool] */;
  %421 = reshape(%419, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %422 = @func_1745(%420, %421) /* ty=(Tensor[(8, 11, 15), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) */;
  %423 = cast(%var_7669, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %424 = cast(%var_7669, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %425 = cast(meta[relay.Constant][38] /* ty=Tensor[(30, 6), int32] */, dtype="int32") /* ty=Tensor[(30, 6), int32] */;
  %426 = reshape(%423, newshape=[1872]) /* ty=Tensor[(1872), float64] */;
  %427 = reshape(%424, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), float64] */;
  %428 = reshape(%425, newshape=[3, 60]) /* ty=Tensor[(3, 60), int32] */;
  %429 = @func_7275(%426, %427, %428) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(1872), float64], Tensor[(21), float64], Tensor[(660), int64], Tensor[(16, 9, 13), bool], Tensor[(4, 11, 15), int64], Tensor[(3, 60), int32], Tensor[(540, 2), int32], Tensor[(896), uint64], Tensor[(1, 70), uint32]) */;
  %430 = %417.0;
  %431 = %422.0;
  %432 = %429.6;
  (%430, %431, %var_7656, meta[relay.Constant][37] /* ty=Tensor[(70), uint32] */, %432, %var_7669, meta[relay.Constant][38] /* ty=Tensor[(30, 6), int32] */)
}

def @func_8515() -> Tensor[(10, 14, 9), int64] {
  @func_8513() /* ty=Tensor[(10, 14, 9), int64] */
}

def @func_8048() -> (Tensor[(9, 2, 6), float64],) {
  @func_8046() /* ty=(Tensor[(9, 2, 6), float64],) */
}

def @func_1024(%var_1023: Tensor[(7, 3, 1), float64]) -> Tensor[(7, 3, ?), uint64] {
  %441 = fn (%var_1005: Tensor[(7, 3, 1), float64]) -> Tensor[(7, 3, ?), uint64] {
    %433 = cast(%var_1005, dtype="float64") /* ty=Tensor[(7, 3, 1), float64] */;
    %434 = atan(%433) /* ty=Tensor[(7, 3, 1), float64] */;
    %435 = cast(%434, dtype="float64") /* ty=Tensor[(7, 3, 1), float64] */;
    %436 = sinh(%435) /* ty=Tensor[(7, 3, 1), float64] */;
    %437 = cast(%434, dtype="uint64") /* ty=Tensor[(7, 3, 1), uint64] */;
    %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
    %439 = cast(%436, dtype="uint64") /* ty=Tensor[(7, 3, 1), uint64] */;
    %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_or(%439, %440) /* ty=Tensor[(7, 3, ?), uint64] */
  };
  %441(%var_1023) /* ty=Tensor[(7, 3, ?), uint64] */
}

def @func_3989(%var_3987: int64, %var_3988: Tensor[(15, 15, 16), int64]) -> Tensor[(15, 15, 16), int64] {
  @func_3985(%var_3987, %var_3988) /* ty=Tensor[(15, 15, 16), int64] */
}

def @func_7521(%var_7484: Tensor[(224), float64], %var_7485: Tensor[(672), float32], %var_7515: Tensor[(180), int32]) -> (Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(180), int16]) {
  %442 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
  %443 = cast(%var_7484, dtype="float64") /* ty=Tensor[(224), float64] */;
  %444 = cast(%var_7485, dtype="float32") /* ty=Tensor[(672), float32] */;
  %445 = cast(meta[relay.Constant][39] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %446 = reshape(%443, newshape=[112, 2]) /* ty=Tensor[(112, 2), float64] */;
  %447 = reshape(%444, newshape=[56, 12]) /* ty=Tensor[(56, 12), float32] */;
  %448 = reshape(%445, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %449 = @func_7056(%446, %447, %448) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(180), int32], Tensor[(56, 12), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(112, 2), uint16]) */;
  %450 = cast(%var_7515, dtype="int16") /* ty=Tensor[(180), int16] */;
  %451 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %452 = cast(meta[relay.Constant][39] /* ty=Tensor[(180), int32] */, dtype="int16") /* ty=Tensor[(180), int16] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?), int16] */;
  %454 = %442.0;
  %455 = %449.0;
  %456 = bitwise_xor(%452, %453) /* ty=Tensor[(180), int16] */;
  (%454, %455, %var_7484, %var_7485, %456)
}

def @func_7838() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32], Tensor[(7, 126), float32]) {
  %463 = fn () -> (Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32], Tensor[(7, 126), float32]) {
    %457 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
    %458 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 126), float32] */, dtype="float32") /* ty=Tensor[(7, 126), float32] */;
    %459 = reshape(%458, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float32] */;
    %460 = @func_2128(%459) /* ty=(Tensor[(9, 7, 14), float32], Tensor[(9, 7, 14), float64]) */;
    %461 = %457.0;
    %462 = %460.0;
    (%461, %462, meta[relay.Constant][40] /* ty=Tensor[(7, 126), float32] */)
  };
  %463() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32], Tensor[(7, 126), float32]) */
}

def @func_8731() -> (Tensor[(9, 2, 6), float32],) {
  %467 = fn () -> (Tensor[(9, 2, 6), float32],) {
    %464 = @func_7350() /* ty=Tensor[(9, 2, 6), float64] */;
    %465 = cast(%464, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
    %466 = erf(%465) /* ty=Tensor[(9, 2, 6), float32] */;
    (%466,)
  };
  %467() /* ty=(Tensor[(9, 2, 6), float32],) */
}

def @func_6729() -> Tensor[(9, 2, 6), float32] {
  @func_6727() /* ty=Tensor[(9, 2, 6), float32] */
}

def @func_6355(%var_6346: Tensor[(9, 2, 6), float32]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32]) {
  %468 = @func_6227() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) */;
  %469 = %468.0;
  %470 = cast(%var_6346, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%469, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %474 = cast(%var_6346, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
  %475 = floor_divide(%472, %473) /* ty=Tensor[(9, 2, 6), float32] */;
  %476 = sqrt(%474) /* ty=Tensor[(9, 2, 6), float32] */;
  (%475, %476)
}

def @func_8026() -> (Tensor[(9, 2, 6), int16], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), int64]) {
  %477 = @func_7121() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %478 = %477.0;
  %479 = @func_6824() /* ty=Tensor[(9, 2, 6), float64] */;
  %480 = cast(%479, dtype="int16") /* ty=Tensor[(9, 2, 6), int16] */;
  %481 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%478, dtype="int16") /* ty=Tensor[(9, 2, 6), int16] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %484 = cast(%478, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %485 = acos(%484) /* ty=Tensor[(9, 2, 6), float64] */;
  %486 = cast(%478, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%485, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %490 = cast(%478, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
  %491 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%485, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %494 = minimum(%482, %483) /* ty=Tensor[(9, 2, 6), int16] */;
  %495 = mod(%488, %489) /* ty=Tensor[(9, 2, 6), float64] */;
  %496 = left_shift(%492, %493) /* ty=Tensor[(9, 2, 6), int64] */;
  (%494, %495, %496)
}

def @func_8939(%var_8912: Tensor[(882), int16], %var_8920: Tensor[(160), float64]) -> (Tensor[(1260), int64], Tensor[(882), int16], Tensor[(10, 14, 9), float32], Tensor[(70), uint32], Tensor[(180), int32], Tensor[(32, 4), float32], Tensor[(160), float64]) {
  %497 = cast(%var_8912, dtype="int16") /* ty=Tensor[(882), int16] */;
  %498 = cast(%var_8912, dtype="int16") /* ty=Tensor[(882), int16] */;
  %499 = @func_8513() /* ty=Tensor[(10, 14, 9), int64] */;
  %500 = cast(%499, dtype="int64") /* ty=Tensor[(10, 14, 9), int64] */;
  %501 = reshape(%497, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), int16] */;
  %502 = reshape(%498, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), int16] */;
  %503 = reshape(%500, newshape=[1260]) /* ty=Tensor[(1260), int64] */;
  %504 = @func_7187(%501, %502, %503) /* ty=(Tensor[(7, 14, 9), int16], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) */;
  %505 = cast(%499, dtype="float32") /* ty=Tensor[(10, 14, 9), float32] */;
  %506 = cast(meta[relay.Constant][41] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %507 = cast(%var_8912, dtype="float32") /* ty=Tensor[(882), float32] */;
  %508 = cast(meta[relay.Constant][42] /* ty=Tensor[(32, 4), float32] */, dtype="float32") /* ty=Tensor[(32, 4), float32] */;
  %509 = cast(%var_8920, dtype="float64") /* ty=Tensor[(160), float64] */;
  %510 = reshape(%506, newshape=[30, 6]) /* ty=Tensor[(30, 6), int32] */;
  %511 = reshape(%507, newshape=[882]) /* ty=Tensor[(882), float32] */;
  %512 = reshape(%508, newshape=[8, 16]) /* ty=Tensor[(8, 16), float32] */;
  %513 = reshape(%509, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %514 = @func_8123(%510, %511, %512, %513) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(30, 6), int32], Tensor[(9, 2, 6), bool], Tensor[(128), float32], Tensor[(20), float64], Tensor[(882), float32], Tensor[(8, 16), float32], Tensor[(70), uint32], Tensor[(70), uint32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32], Tensor[(896), uint64]) */;
  %515 = %504.2;
  %516 = sigmoid(%505) /* ty=Tensor[(10, 14, 9), float32] */;
  %517 = %514.11;
  (%515, %var_8912, %516, %517, meta[relay.Constant][41] /* ty=Tensor[(180), int32] */, meta[relay.Constant][42] /* ty=Tensor[(32, 4), float32] */, %var_8920)
}

def @func_9002(%var_9000: Tensor[(8, 28), float64], %var_9001: Tensor[(40, 12), float32]) -> (Tensor[(9, 2, 6), bool], Tensor[(8, 28), float64], Tensor[(40, 12), bool]) {
  %529 = fn (%var_8986: Tensor[(8, 28), float64], %var_8989: Tensor[(40, 12), float32]) -> (Tensor[(9, 2, 6), bool], Tensor[(8, 28), float64], Tensor[(40, 12), bool]) {
    %518 = @func_7075() /* ty=(Tensor[(9, 2, 6), bool],) */;
    %519 = cast(%var_8986, dtype="float64") /* ty=Tensor[(8, 28), float64] */;
    %520 = reshape(%519, newshape=[224]) /* ty=Tensor[(224), float64] */;
    %521 = @func_7420(%520) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 140), uint32], Tensor[(1260), int64], Tensor[(8, 4, 15), bool], Tensor[(224), float64], Tensor[(896), uint64], Tensor[(40, 12), float32], Tensor[(8, 4, 15), bool], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) */;
    %522 = %521.6;
    %523 = cast(%var_8989, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
    %524 = shape_of(%522, dtype="int32") /* ty=Tensor[(2), int32] */;
    %525 = cast(%522, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
    %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %527 = %518.0;
    %528 = not_equal(%525, %526) /* ty=Tensor[(40, 12), bool] */;
    (%527, %var_8986, %528)
  };
  %529(%var_9000, %var_9001) /* ty=(Tensor[(9, 2, 6), bool], Tensor[(8, 28), float64], Tensor[(40, 12), bool]) */
}

def @func_2569(%var_2562: Tensor[(9, 16), float32], %var_2563: Tensor[(9, 16), float32], %var_2564: Tensor[(320), float32], %var_2565: Tensor[(672), float32], %var_2566: Tensor[(180), int32], %var_2567: Tensor[(1080), int32], %var_2568: Tensor[(896), uint64]) -> (Tensor[(9, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(70, ?), float64], Tensor[(70, ?), int64], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(6, 8, 14), float64], Tensor[(672), float32], Tensor[(896), uint64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64]) {
  %566 = fn (%var_2471: Tensor[(9, 16), float32], %var_2472: Tensor[(9, 16), float32], %var_2522: Tensor[(320), float32], %var_2530: Tensor[(672), float32], %var_2546: Tensor[(180), int32], %var_2547: Tensor[(1080), int32], %var_2548: Tensor[(896), uint64]) -> (Tensor[(9, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(70, ?), float64], Tensor[(70, ?), int64], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(6, 8, 14), float64], Tensor[(672), float32], Tensor[(896), uint64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64]) {
    %530 = cast(%var_2472, dtype="float32") /* ty=Tensor[(9, 16), float32] */;
    %531 = shape_of(%var_2471, dtype="int32") /* ty=Tensor[(2), int32] */;
    %532 = cast(%var_2471, dtype="float32") /* ty=Tensor[(9, 16), float32] */;
    %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %534 = cast(meta[relay.Constant][43] /* ty=Tensor[(70, 1), uint32] */, dtype="uint32") /* ty=Tensor[(70, 1), uint32] */;
    %535 = reshape(%534, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
    %536 = cast(meta[relay.Constant][43] /* ty=Tensor[(70, 1), uint32] */, dtype="float32") /* ty=Tensor[(70, 1), float32] */;
    %537 = asinh(%536) /* ty=Tensor[(70, 1), float32] */;
    %538 = cast(meta[relay.Constant][43] /* ty=Tensor[(70, 1), uint32] */, dtype="float64") /* ty=Tensor[(70, 1), float64] */;
    %539 = shape_of(%537, dtype="int32") /* ty=Tensor[(2), int32] */;
    %540 = cast(%537, dtype="float64") /* ty=Tensor[(70, 1), float64] */;
    %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %542 = cast(meta[relay.Constant][43] /* ty=Tensor[(70, 1), uint32] */, dtype="int64") /* ty=Tensor[(70, 1), int64] */;
    %543 = shape_of(%537, dtype="int32") /* ty=Tensor[(2), int32] */;
    %544 = cast(%537, dtype="int64") /* ty=Tensor[(70, 1), int64] */;
    %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %546 = cast(%var_2522, dtype="float32") /* ty=Tensor[(320), float32] */;
    %547 = reshape(%546, newshape=[10, 2, 16]) /* ty=Tensor[(10, 2, 16), float32] */;
    %548 = cast(%var_2530, dtype="float32") /* ty=Tensor[(672), float32] */;
    %549 = reshape(%548, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
    %550 = cast(%var_2546, dtype="int32") /* ty=Tensor[(180), int32] */;
    %551 = cast(%var_2547, dtype="int32") /* ty=Tensor[(1080), int32] */;
    %552 = cast(%var_2548, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %553 = floor_divide(%540, %541) /* ty=Tensor[(70, ?), float64] */;
    %554 = cast(%553, dtype="uint32") /* ty=Tensor[(70, ?), uint32] */;
    %555 = reshape(%550, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
    %556 = reshape(%551, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
    %557 = reshape(%552, newshape=[896]) /* ty=Tensor[(896), uint64] */;
    %558 = reshape(%554, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
    %559 = @func_1580(%555, %556, %557, %558) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
    %560 = power(%532, %533) /* ty=Tensor[(9, 16), float32] */;
    %561 = @func_456(%535) /* ty=Tensor[(7, 7, 10), uint32] */;
    %562 = subtract(%544, %545) /* ty=Tensor[(70, ?), int64] */;
    %563 = @func_927(%547) /* ty=Tensor[(10, 2, 16), float32] */;
    %564 = @func_256(%549) /* ty=Tensor[(6, 8, 14), float64] */;
    %565 = %559.3;
    (%560, %561, %553, %562, %563, %var_2522, %564, %var_2530, %565, %var_2546, %var_2547, %var_2548)
  };
  %566(%var_2562, %var_2563, %var_2564, %var_2565, %var_2566, %var_2567, %var_2568) /* ty=(Tensor[(9, 16), float32], Tensor[(7, 7, 10), uint32], Tensor[(70, ?), float64], Tensor[(70, ?), int64], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(6, 8, 14), float64], Tensor[(672), float32], Tensor[(896), uint64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(896), uint64]) */
}

def @func_4577(%var_4575: Tensor[(11, 7, 14), bool]) -> Tensor[(11, 7, 14), bool] {
  @func_4574(%var_4575) /* ty=Tensor[(11, 7, 14), bool] */
}

def @func_7076() -> (Tensor[(9, 2, 6), bool],) {
  %569 = fn () -> (Tensor[(9, 2, 6), bool],) {
    %567 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
    %568 = %567.0;
    (%568,)
  };
  %569() /* ty=(Tensor[(9, 2, 6), bool],) */
}

def @func_4574(%var_4568: Tensor[(11, 7, 14), bool]) -> Tensor[(11, 7, 14), bool] {
  %570 = cast(meta[relay.Constant][44] /* ty=Tensor[(11, 7, 14), bool] */, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
  %571 = shape_of(%var_4568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%var_4568, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%572, %573) /* ty=Tensor[(11, 7, 14), bool] */
}

def @func_5957() -> (Tensor[(9, 2, 6), float32],) {
  @func_5955() /* ty=(Tensor[(9, 2, 6), float32],) */
}

def @func_8028() -> (Tensor[(9, 2, 6), int16], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), int64]) {
  @func_8026() /* ty=(Tensor[(9, 2, 6), int16], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), int64]) */
}

def @func_6842() -> (Tensor[(9, 2, 6), float32],) {
  %576 = fn () -> (Tensor[(9, 2, 6), float32],) {
    %574 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
    %575 = %574.0;
    (%575,)
  };
  %576() /* ty=(Tensor[(9, 2, 6), float32],) */
}

def @func_1132(%var_1129: Tensor[(4, 11, 15), int64], %var_1130: Tensor[(4, 11, 15), int64], %var_1131: Tensor[(896), uint64]) -> (Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) {
  %595 = fn (%var_1097: Tensor[(4, 11, 15), int64], %var_1098: Tensor[(4, 11, 15), int64], %var_1120: Tensor[(896), uint64]) -> (Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) {
    %577 = cast(%var_1098, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
    %578 = shape_of(%var_1097, dtype="int32") /* ty=Tensor[(3), int32] */;
    %579 = cast(%var_1097, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
    %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %581 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 11, 15), int64] */, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
    %582 = shape_of(%var_1098, dtype="int32") /* ty=Tensor[(3), int32] */;
    %583 = cast(%var_1098, dtype="int64") /* ty=Tensor[(4, 11, 15), int64] */;
    %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %585 = cast(%var_1120, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %586 = cast(%var_1120, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %587 = cast(meta[relay.Constant][46] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %588 = reshape(%585, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
    %589 = reshape(%586, newshape=[16, 14, 4]) /* ty=Tensor[(16, 14, 4), uint64] */;
    %590 = reshape(%587, newshape=[70]) /* ty=Tensor[(70), uint32] */;
    %591 = @func_690(%588, %589, %590) /* ty=(Tensor[(16, 14, 4), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) */;
    %592 = add(%579, %580) /* ty=Tensor[(4, 11, 15), int64] */;
    %593 = bitwise_or(%583, %584) /* ty=Tensor[(4, 11, 15), int64] */;
    %594 = %591.1;
    (%592, %593, %594, %var_1120, meta[relay.Constant][46] /* ty=Tensor[(70), uint32] */)
  };
  %595(%var_1129, %var_1130, %var_1131) /* ty=(Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */
}

def @func_7526(%var_7523: Tensor[(224), float64], %var_7524: Tensor[(672), float32], %var_7525: Tensor[(180), int32]) -> (Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(180), int16]) {
  @func_7521(%var_7523, %var_7524, %var_7525) /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(180), int16]) */
}

def @func_912(%var_911: Tensor[(10, 14, 9), int64]) -> (Tensor[(10, 14, 9), int64],) {
  %601 = fn (%var_903: Tensor[(10, 14, 9), int64]) -> (Tensor[(10, 14, 9), int64],) {
    %596 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 14, 9), int64] */, dtype="int64") /* ty=Tensor[(10, 14, 9), int64] */;
    %597 = shape_of(%var_903, dtype="int32") /* ty=Tensor[(3), int32] */;
    %598 = cast(%var_903, dtype="int64") /* ty=Tensor[(10, 14, 9), int64] */;
    %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %600 = bitwise_and(%598, %599) /* ty=Tensor[(10, 14, 9), int64] */;
    (%600,)
  };
  %601(%var_911) /* ty=(Tensor[(10, 14, 9), int64],) */
}

def @func_2959(%var_2950: Tensor[(13, 9, 3), int16]) -> Tensor[(13, 9, 3), bool] {
  %602 = cast(%var_2950, dtype="bool") /* ty=Tensor[(13, 9, 3), bool] */;
  %603 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(13, 9, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(meta[relay.Constant][48] /* ty=Tensor[(13, 9, 3), int16] */, dtype="bool") /* ty=Tensor[(13, 9, 3), bool] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%604, %605) /* ty=Tensor[(13, 9, 3), bool] */
}

def @func_5367(%var_5364: Tensor[(1, 8, 9), uint64], %var_5365: Tensor[(4, 8, 9), uint64], %var_5366: Tensor[(1080), float64]) -> (Tensor[(4, 8, 9), uint64], Tensor[(9, 12, 10), float64], Tensor[(1080), float64]) {
  %615 = fn (%var_5342: Tensor[(1, 8, 9), uint64], %var_5343: Tensor[(4, 8, 9), uint64], %var_5355: Tensor[(1080), float64]) -> (Tensor[(4, 8, 9), uint64], Tensor[(9, 12, 10), float64], Tensor[(1080), float64]) {
    %606 = cast(%var_5342, dtype="uint64") /* ty=Tensor[(1, 8, 9), uint64] */;
    %607 = cast(%var_5343, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
    %608 = cast(%var_5355, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %609 = cast(%var_5355, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %610 = reshape(%608, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float64] */;
    %611 = reshape(%609, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float64] */;
    %612 = @func_1719(%610, %611) /* ty=(Tensor[(9, 12, 10), float64],) */;
    %613 = bitwise_xor(%606, %607) /* ty=Tensor[(4, 8, 9), uint64] */;
    %614 = %612.0;
    (%613, %614, %var_5355)
  };
  %615(%var_5364, %var_5365, %var_5366) /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(9, 12, 10), float64], Tensor[(1080), float64]) */
}

def @func_7849() -> (Tensor[(39, 9), int16], Tensor[(9, 7, 14), float32], Tensor[(1, 882), float32]) {
  %622 = fn () -> (Tensor[(39, 9), int16], Tensor[(9, 7, 14), float32], Tensor[(1, 882), float32]) {
    %616 = @func_6815() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(13, 9, 3), bool], Tensor[(39, 9), int16]) */;
    %617 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 882), float32] */, dtype="float32") /* ty=Tensor[(1, 882), float32] */;
    %618 = reshape(%617, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float32] */;
    %619 = @func_2128(%618) /* ty=(Tensor[(9, 7, 14), float32], Tensor[(9, 7, 14), float64]) */;
    %620 = %616.2;
    %621 = %619.0;
    (%620, %621, meta[relay.Constant][49] /* ty=Tensor[(1, 882), float32] */)
  };
  %622() /* ty=(Tensor[(39, 9), int16], Tensor[(9, 7, 14), float32], Tensor[(1, 882), float32]) */
}

def @func_1749(%var_1747: Tensor[(8, 11, 15), bool], %var_1748: Tensor[(70), uint32]) -> (Tensor[(8, 11, 15), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) {
  @func_1745(%var_1747, %var_1748) /* ty=(Tensor[(8, 11, 15), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) */
}

def @func_6929() -> Tensor[(9, 2, 6), bool] {
  %624 = fn () -> Tensor[(9, 2, 6), bool] {
    %623 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
    %623.0
  };
  %624() /* ty=Tensor[(9, 2, 6), bool] */
}

def @func_2449(%var_2447: Tensor[(10, 10, 15), float32]) -> Tensor[(10, 10, 15), float32] {
  @func_2446(%var_2447) /* ty=Tensor[(10, 10, 15), float32] */
}

def @func_5903(%var_5901: Tensor[(160), float64], %var_5902: Tensor[(320), float32]) -> (Tensor[(9, 2, 6), float32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32]) {
  @func_5899(%var_5901, %var_5902) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32]) */
}

def @func_8175() -> (Tensor[(9, 2, 6), float64],) {
  %628 = fn () -> (Tensor[(9, 2, 6), float64],) {
    %625 = @func_6727() /* ty=Tensor[(9, 2, 6), float32] */;
    %626 = cast(%625, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
    %627 = cosh(%626) /* ty=Tensor[(9, 2, 6), float64] */;
    (%627,)
  };
  %628() /* ty=(Tensor[(9, 2, 6), float64],) */
}

def @func_7122() -> (Tensor[(9, 2, 6), float32],) {
  %630 = fn () -> (Tensor[(9, 2, 6), float32],) {
    %629 = @func_6727() /* ty=Tensor[(9, 2, 6), float32] */;
    (%629,)
  };
  %630() /* ty=(Tensor[(9, 2, 6), float32],) */
}

def @func_7887() -> (Tensor[(9, 7, 14), float64], Tensor[(13, 9, 3), bool]) {
  @func_7885() /* ty=(Tensor[(9, 7, 14), float64], Tensor[(13, 9, 3), bool]) */
}

def @func_8245(%var_8244: Tensor[(15, 2, 12), float32]) -> (Tensor[(15, 2, 12), float32],) {
  %633 = fn (%var_8236: Tensor[(15, 2, 12), float32]) -> (Tensor[(15, 2, 12), float32],) {
    %631 = cast(%var_8236, dtype="float32") /* ty=Tensor[(15, 2, 12), float32] */;
    %632 = atan(%631) /* ty=Tensor[(15, 2, 12), float32] */;
    (%632,)
  };
  %633(%var_8244) /* ty=(Tensor[(15, 2, 12), float32],) */
}

def @func_8329() -> (Tensor[(9, 2, 6), float32], Tensor[(13, 15, 9), float64]) {
  %640 = fn () -> (Tensor[(9, 2, 6), float32], Tensor[(13, 15, 9), float64]) {
    %634 = @func_6841() /* ty=(Tensor[(9, 2, 6), float32],) */;
    %635 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
    %636 = sigmoid(%635) /* ty=Tensor[(13, 15, 9), float32] */;
    %637 = cast(%636, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
    %638 = %634.0;
    %639 = cos(%637) /* ty=Tensor[(13, 15, 9), float64] */;
    (%638, %639)
  };
  %640() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(13, 15, 9), float64]) */
}

def @func_8513() -> Tensor[(10, 14, 9), int64] {
  %641 = @func_6227() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) */;
  %641.1
}

def @main(%var_9774: Tensor[(16, 6, 5), float64]) -> (Tensor[(16, 6, 5), float64],) {
  %642 = cast(%var_9774, dtype="float64") /* ty=Tensor[(16, 6, 5), float64] */;
  %643 = asinh(%642) /* ty=Tensor[(16, 6, 5), float64] */;
  %644 = cast(%643, dtype="float64") /* ty=Tensor[(16, 6, 5), float64] */;
  %645 = shape_of(%var_9774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%var_9774, dtype="float64") /* ty=Tensor[(16, 6, 5), float64] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %648 = power(%646, %647) /* ty=Tensor[(16, 6, 5), float64] */;
  %649 = cast(%648, dtype="float64") /* ty=Tensor[(16, 6, 5), float64] */;
  %650 = cosh(%649) /* ty=Tensor[(16, 6, 5), float64] */;
  (%650,)
}

def @func_7344() -> (Tensor[(9, 2, 6), bool],) {
  @func_7342() /* ty=(Tensor[(9, 2, 6), bool],) */
}

def @func_7352() -> Tensor[(9, 2, 6), float64] {
  @func_7350() /* ty=Tensor[(9, 2, 6), float64] */
}

def @func_7056(%var_7035: Tensor[(112, 2), float64], %var_7036: Tensor[(56, 12), float32], %var_7037: Tensor[(180), int32]) -> (Tensor[(9, 2, 6), float32], Tensor[(180), int32], Tensor[(56, 12), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(112, 2), uint16]) {
  %651 = cast(%var_7035, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %652 = cast(%var_7036, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
  %653 = cast(%var_7037, dtype="int32") /* ty=Tensor[(180), int32] */;
  %654 = cast(meta[relay.Constant][51] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %655 = reshape(%651, newshape=[2, 8, 14]) /* ty=Tensor[(2, 8, 14), float64] */;
  %656 = reshape(%652, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %657 = reshape(%653, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %658 = reshape(%654, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %659 = @func_4870(%655, %656, %657, %658) /* ty=(Tensor[(7, 16, 9), float32], Tensor[(1008), float32], Tensor[(672), float32], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(2, 8, 14), int32], Tensor[(896), uint8]) */;
  %660 = cast(meta[relay.Constant][52] /* ty=Tensor[(112, 2), float64] */, dtype="uint16") /* ty=Tensor[(112, 2), uint16] */;
  %661 = shape_of(%var_7035, dtype="int32") /* ty=Tensor[(2), int32] */;
  %662 = cast(%var_7035, dtype="uint16") /* ty=Tensor[(112, 2), uint16] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %664 = @func_5978() /* ty=Tensor[(9, 2, 6), float32] */;
  %665 = %659.6;
  %666 = subtract(%662, %663) /* ty=Tensor[(112, 2), uint16] */;
  (%664, %665, %var_7036, %var_7037, meta[relay.Constant][51] /* ty=Tensor[(896), uint64] */, %666)
}

def @func_7885() -> (Tensor[(9, 7, 14), float64], Tensor[(13, 9, 3), bool]) {
  %667 = @func_7837() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32], Tensor[(7, 126), float32]) */;
  %668 = %667.1;
  %669 = cast(%668, dtype="float64") /* ty=Tensor[(9, 7, 14), float64] */;
  %670 = @func_6815() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(13, 9, 3), bool], Tensor[(39, 9), int16]) */;
  %671 = sin(%669) /* ty=Tensor[(9, 7, 14), float64] */;
  %672 = %670.1;
  (%671, %672)
}

def @func_7275(%var_7249: Tensor[(1872), float64], %var_7264: Tensor[(16, 9, 13), float64], %var_7270: Tensor[(3, 60), int32]) -> (Tensor[(9, 2, 6), float32], Tensor[(1872), float64], Tensor[(21), float64], Tensor[(660), int64], Tensor[(16, 9, 13), bool], Tensor[(4, 11, 15), int64], Tensor[(3, 60), int32], Tensor[(540, 2), int32], Tensor[(896), uint64], Tensor[(1, 70), uint32]) {
  %673 = @func_6841() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %674 = cast(%var_7249, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %675 = cast(meta[relay.Constant][53] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %676 = cast(meta[relay.Constant][54] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %677 = reshape(%674, newshape=[16, 9, 13]) /* ty=Tensor[(16, 9, 13), float64] */;
  %678 = reshape(%675, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %679 = reshape(%676, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %680 = @func_5829(%677, %678, %679) /* ty=(Tensor[(16, 9, 13), float64], Tensor[(7, 3, ?), uint64], Tensor[(21), float64], Tensor[(7, 7, 10), uint32], Tensor[(660), int64], Tensor[(224, 4), uint64]) */;
  %681 = %680.0;
  %682 = cast(%var_7264, dtype="bool") /* ty=Tensor[(16, 9, 13), bool] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%681, dtype="bool") /* ty=Tensor[(16, 9, 13), bool] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %686 = cast(%var_7270, dtype="int32") /* ty=Tensor[(3, 60), int32] */;
  %687 = cast(meta[relay.Constant][55] /* ty=Tensor[(540, 2), int32] */, dtype="int32") /* ty=Tensor[(540, 2), int32] */;
  %688 = cast(meta[relay.Constant][56] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %689 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 70), uint32] */, dtype="uint32") /* ty=Tensor[(1, 70), uint32] */;
  %690 = reshape(%686, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
  %691 = reshape(%687, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
  %692 = reshape(%688, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %693 = reshape(%689, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
  %694 = @func_1580(%690, %691, %692, %693) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
  %695 = %673.0;
  %696 = less(%684, %685) /* ty=Tensor[(16, 9, 13), bool] */;
  %697 = %694.4;
  (%695, %var_7249, meta[relay.Constant][53] /* ty=Tensor[(21), float64] */, meta[relay.Constant][54] /* ty=Tensor[(660), int64] */, %696, %697, %var_7270, meta[relay.Constant][55] /* ty=Tensor[(540, 2), int32] */, meta[relay.Constant][56] /* ty=Tensor[(896), uint64] */, meta[relay.Constant][57] /* ty=Tensor[(1, 70), uint32] */)
}

def @func_7625() -> (Tensor[(9, 2, 6), float64],) {
  %698 = @func_6824() /* ty=Tensor[(9, 2, 6), float64] */;
  (%698,)
}

def @func_7350() -> Tensor[(9, 2, 6), float64] {
  @func_6336() /* ty=Tensor[(9, 2, 6), float64] */
}

def @func_7469() -> Tensor[(10, 14, 9), float64] {
  @func_7467() /* ty=Tensor[(10, 14, 9), float64] */
}

def @func_7817() -> Tensor[(9, 2, 6), bool] {
  %699 = @func_7342() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %699.0
}

def @func_6698(%var_6696: Tensor[(5, 3, 15), int64], %var_6697: Tensor[(5, 3, 15), int64]) -> Tensor[(5, 3, 15), int64] {
  @func_6694(%var_6696, %var_6697) /* ty=Tensor[(5, 3, 15), int64] */
}

def @func_7829() -> (Tensor[(9, 140), int64],) {
  %700 = @func_6227() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) */;
  %701 = %700.2;
  (%701,)
}

def @func_8443() -> (Tensor[(9, 2, 6), float64],) {
  %703 = fn () -> (Tensor[(9, 2, 6), float64],) {
    %702 = @func_6824() /* ty=Tensor[(9, 2, 6), float64] */;
    (%702,)
  };
  %703() /* ty=(Tensor[(9, 2, 6), float64],) */
}

def @func_7467() -> Tensor[(10, 14, 9), float64] {
  %704 = @func_6227() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(10, 14, 9), int64], Tensor[(9, 140), int64]) */;
  %705 = %704.1;
  %706 = cast(%705, dtype="float64") /* ty=Tensor[(10, 14, 9), float64] */;
  log10(%706) /* ty=Tensor[(10, 14, 9), float64] */
}

def @func_8402() -> (Tensor[(13, 15, 9), float64],) {
  @func_8400() /* ty=(Tensor[(13, 15, 9), float64],) */
}

def @func_9750() -> Tensor[(9, 2, 6), bool] {
  @func_9748() /* ty=Tensor[(9, 2, 6), bool] */
}

def @func_695(%var_692: Tensor[(16, 14, 4), uint64], %var_693: Tensor[(16, 14, 4), uint64], %var_694: Tensor[(70), uint32]) -> (Tensor[(16, 14, 4), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) {
  @func_690(%var_692, %var_693, %var_694) /* ty=(Tensor[(16, 14, 4), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) */
}

def @func_9748() -> Tensor[(9, 2, 6), bool] {
  @func_7924() /* ty=Tensor[(9, 2, 6), bool] */
}

def @func_6336() -> Tensor[(9, 2, 6), float64] {
  %707 = @func_5773() /* ty=Tensor[(9, 2, 6), float32] */;
  %708 = cast(%707, dtype="float64") /* ty=Tensor[(9, 2, 6), float64] */;
  cos(%708) /* ty=Tensor[(9, 2, 6), float64] */
}

def @func_4232(%var_4230: Tensor[(1, 11, 3), float64]) -> (Tensor[(1, 11, 3), float64], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) {
  @func_4229(%var_4230) /* ty=(Tensor[(1, 11, 3), float64], Tensor[(10, 14, 9), int64], Tensor[(1260), int64]) */
}

def @func_2706(%var_2704: Tensor[(8, 4, 15), bool], %var_2705: Tensor[(8, 4, 15), bool]) -> Tensor[(8, 4, 15), bool] {
  %713 = fn (%var_2692: Tensor[(8, 4, 15), bool], %var_2693: Tensor[(8, 4, 15), bool]) -> Tensor[(8, 4, 15), bool] {
    %709 = cast(%var_2693, dtype="bool") /* ty=Tensor[(8, 4, 15), bool] */;
    %710 = shape_of(%var_2692, dtype="int32") /* ty=Tensor[(3), int32] */;
    %711 = cast(%var_2692, dtype="bool") /* ty=Tensor[(8, 4, 15), bool] */;
    %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%711, %712) /* ty=Tensor[(8, 4, 15), bool] */
  };
  %713(%var_2704, %var_2705) /* ty=Tensor[(8, 4, 15), bool] */
}

def @func_6816() -> (Tensor[(9, 2, 6), float32], Tensor[(13, 9, 3), bool], Tensor[(39, 9), int16]) {
  %718 = fn () -> (Tensor[(9, 2, 6), float32], Tensor[(13, 9, 3), bool], Tensor[(39, 9), int16]) {
    %714 = cast(meta[relay.Constant][58] /* ty=Tensor[(39, 9), int16] */, dtype="int16") /* ty=Tensor[(39, 9), int16] */;
    %715 = reshape(%714, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), int16] */;
    %716 = @func_6727() /* ty=Tensor[(9, 2, 6), float32] */;
    %717 = @func_2959(%715) /* ty=Tensor[(13, 9, 3), bool] */;
    (%716, %717, meta[relay.Constant][58] /* ty=Tensor[(39, 9), int16] */)
  };
  %718() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(13, 9, 3), bool], Tensor[(39, 9), int16]) */
}

def @func_7819() -> Tensor[(9, 2, 6), bool] {
  @func_7817() /* ty=Tensor[(9, 2, 6), bool] */
}

def @func_9261(%var_9259: Tensor[(9, 12, 4), float64]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 12, 4), float64], Tensor[(5, 3, 15), int64], Tensor[(75, 3), int64], Tensor[(9, 12, 4), float64]) {
  @func_9258(%var_9259) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 12, 4), float64], Tensor[(5, 3, 15), int64], Tensor[(75, 3), int64], Tensor[(9, 12, 4), float64]) */
}

def @func_7342() -> (Tensor[(9, 2, 6), bool],) {
  %719 = @func_7075() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %720 = %719.0;
  (%720,)
}

def @func_5833(%var_5830: Tensor[(16, 9, 13), float64], %var_5831: Tensor[(21), float64], %var_5832: Tensor[(660), int64]) -> (Tensor[(16, 9, 13), float64], Tensor[(7, 3, ?), uint64], Tensor[(21), float64], Tensor[(7, 7, 10), uint32], Tensor[(660), int64], Tensor[(224, 4), uint64]) {
  %734 = fn (%var_5816: Tensor[(16, 9, 13), float64], %var_5821: Tensor[(21), float64], %var_5826: Tensor[(660), int64]) -> (Tensor[(16, 9, 13), float64], Tensor[(7, 3, ?), uint64], Tensor[(21), float64], Tensor[(7, 7, 10), uint32], Tensor[(660), int64], Tensor[(224, 4), uint64]) {
    %721 = cast(%var_5816, dtype="float64") /* ty=Tensor[(16, 9, 13), float64] */;
    %722 = cast(%var_5821, dtype="float64") /* ty=Tensor[(21), float64] */;
    %723 = reshape(%722, newshape=[7, 3, 1]) /* ty=Tensor[(7, 3, 1), float64] */;
    %724 = cast(%var_5826, dtype="int64") /* ty=Tensor[(660), int64] */;
    %725 = cast(%var_5826, dtype="int64") /* ty=Tensor[(660), int64] */;
    %726 = cast(meta[relay.Constant][59] /* ty=Tensor[(224, 4), uint64] */, dtype="uint64") /* ty=Tensor[(224, 4), uint64] */;
    %727 = reshape(%724, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
    %728 = reshape(%725, newshape=[4, 11, 15]) /* ty=Tensor[(4, 11, 15), int64] */;
    %729 = reshape(%726, newshape=[896]) /* ty=Tensor[(896), uint64] */;
    %730 = @func_1128(%727, %728, %729) /* ty=(Tensor[(4, 11, 15), int64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(896), uint64], Tensor[(70), uint32]) */;
    %731 = cosh(%721) /* ty=Tensor[(16, 9, 13), float64] */;
    %732 = @func_1022(%723) /* ty=Tensor[(7, 3, ?), uint64] */;
    %733 = %730.2;
    (%731, %732, %var_5821, %733, %var_5826, meta[relay.Constant][59] /* ty=Tensor[(224, 4), uint64] */)
  };
  %734(%var_5830, %var_5831, %var_5832) /* ty=(Tensor[(16, 9, 13), float64], Tensor[(7, 3, ?), uint64], Tensor[(21), float64], Tensor[(7, 7, 10), uint32], Tensor[(660), int64], Tensor[(224, 4), uint64]) */
}

def @func_9529() -> Tensor[(9, 2, 6), float32] {
  %740 = fn () -> Tensor[(9, 2, 6), float32] {
    %735 = @func_6841() /* ty=(Tensor[(9, 2, 6), float32],) */;
    %736 = %735.0;
    %737 = cast(%736, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
    %738 = acosh(%737) /* ty=Tensor[(9, 2, 6), float32] */;
    %739 = cast(%738, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
    rsqrt(%739) /* ty=Tensor[(9, 2, 6), float32] */
  };
  %740() /* ty=Tensor[(9, 2, 6), float32] */
}

def @func_6358(%var_6356: Tensor[(9, 2, 6), float32]) -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32]) {
  @func_6355(%var_6356) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32]) */
}

def @func_6211(%var_6209: Tensor[(9, 2, 6), float32], %var_6210: Tensor[(9, 2, 6), int64]) -> (Tensor[(9, 2, 6), uint64], Tensor[(9, 2, 6), bool]) {
  %757 = fn (%var_6197: Tensor[(9, 2, 6), float32], %var_6203: Tensor[(9, 2, 6), int64]) -> (Tensor[(9, 2, 6), uint64], Tensor[(9, 2, 6), bool]) {
    %741 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
    %742 = %741.0;
    %743 = cast(%742, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
    %744 = reshape(%743, newshape=[9, 2, 6]) /* ty=Tensor[(9, 2, 6), float32] */;
    %745 = @func_6121(%744) /* ty=(Tensor[(9, 2, 6), uint64],) */;
    %746 = cast(%var_6197, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
    %747 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
    %748 = cast(%742, dtype="int64") /* ty=Tensor[(9, 2, 6), int64] */;
    %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %750 = maximum(%748, %749) /* ty=Tensor[(9, 2, 6), int64] */;
    %751 = cast(%var_6203, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
    %752 = shape_of(%750, dtype="int32") /* ty=Tensor[(3), int32] */;
    %753 = cast(%750, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
    %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %755 = %745.0;
    %756 = greater_equal(%753, %754) /* ty=Tensor[(9, 2, 6), bool] */;
    (%755, %756)
  };
  %757(%var_6209, %var_6210) /* ty=(Tensor[(9, 2, 6), uint64], Tensor[(9, 2, 6), bool]) */
}

def @func_7022(%var_7019: Tensor[(180), int32], %var_7020: Tensor[(14, 64), uint64], %var_7021: Tensor[(70), uint32]) -> (Tensor[(9, 2, 6), bool], Tensor[(4, 11, 15), int64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(14, 64), uint64], Tensor[(70), uint32]) {
  %777 = fn (%var_7005: Tensor[(180), int32], %var_7007: Tensor[(14, 64), uint64], %var_7008: Tensor[(70), uint32]) -> (Tensor[(9, 2, 6), bool], Tensor[(4, 11, 15), int64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(14, 64), uint64], Tensor[(70), uint32]) {
    %758 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
    %759 = %758.1;
    %760 = cast(%759, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
    %761 = tan(%760) /* ty=Tensor[(9, 2, 6), float32] */;
    %762 = cast(%761, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
    %763 = shape_of(%759, dtype="int32") /* ty=Tensor[(3), int32] */;
    %764 = cast(%759, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
    %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %766 = cast(%var_7005, dtype="int32") /* ty=Tensor[(180), int32] */;
    %767 = cast(meta[relay.Constant][60] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
    %768 = cast(%var_7007, dtype="uint64") /* ty=Tensor[(14, 64), uint64] */;
    %769 = cast(%var_7008, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %770 = reshape(%766, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
    %771 = reshape(%767, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
    %772 = reshape(%768, newshape=[896]) /* ty=Tensor[(896), uint64] */;
    %773 = reshape(%769, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
    %774 = @func_1580(%770, %771, %772, %773) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
    %775 = less(%764, %765) /* ty=Tensor[(9, 2, 6), bool] */;
    %776 = %774.4;
    (%775, %776, %var_7005, meta[relay.Constant][60] /* ty=Tensor[(1080), int32] */, %var_7007, %var_7008)
  };
  %777(%var_7019, %var_7020, %var_7021) /* ty=(Tensor[(9, 2, 6), bool], Tensor[(4, 11, 15), int64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(14, 64), uint64], Tensor[(70), uint32]) */
}

def @func_6135() -> (Tensor[(9, 2, 6), float32],) {
  %779 = fn () -> (Tensor[(9, 2, 6), float32],) {
    %778 = @func_5773() /* ty=Tensor[(9, 2, 6), float32] */;
    (%778,)
  };
  %779() /* ty=(Tensor[(9, 2, 6), float32],) */
}

def @func_8046() -> (Tensor[(9, 2, 6), float64],) {
  %780 = @func_7786() /* ty=(Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), float64]) */;
  %781 = %780.2;
  (%781,)
}

def @func_6028(%var_5985: Tensor[(224), float64], %var_5988: Tensor[(896), uint64], %var_5993: Tensor[(480), bool]) -> (Tensor[(9, 2, 6), float32], Tensor[(224), float64], Tensor[(672), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(8, 4, 15), bool], Tensor[(480), bool], Tensor[(672), float64]) {
  %782 = @func_5955() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %783 = cast(%var_5993, dtype="bool") /* ty=Tensor[(480), bool] */;
  %784 = cast(%var_5993, dtype="bool") /* ty=Tensor[(480), bool] */;
  %785 = reshape(%783, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
  %786 = reshape(%784, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
  %787 = cast(%var_5985, dtype="float64") /* ty=Tensor[(224), float64] */;
  %788 = cast(meta[relay.Constant][61] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %789 = cast(meta[relay.Constant][62] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %790 = cast(%var_5988, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %791 = reshape(%787, newshape=[2, 8, 14]) /* ty=Tensor[(2, 8, 14), float64] */;
  %792 = reshape(%788, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %793 = reshape(%789, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %794 = reshape(%790, newshape=[896]) /* ty=Tensor[(896), uint64] */;
  %795 = @func_4870(%791, %792, %793, %794) /* ty=(Tensor[(7, 16, 9), float32], Tensor[(1008), float32], Tensor[(672), float32], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(2, 8, 14), int32], Tensor[(896), uint8]) */;
  %796 = %795.5;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(672), float64] */;
  %798 = %782.0;
  %799 = @func_2703(%785, %786) /* ty=Tensor[(8, 4, 15), bool] */;
  %800 = tan(%797) /* ty=Tensor[(672), float64] */;
  (%798, %var_5985, meta[relay.Constant][61] /* ty=Tensor[(672), float32] */, meta[relay.Constant][62] /* ty=Tensor[(180), int32] */, %var_5988, %799, %var_5993, %800)
}

def @func_6433(%var_6431: Tensor[(9, 140), int64]) -> Tensor[(9, 140), uint32] {
  @func_6430(%var_6431) /* ty=Tensor[(9, 140), uint32] */
}

def @func_6983() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32]) {
  %801 = @func_6841() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %802 = @func_6727() /* ty=Tensor[(9, 2, 6), float32] */;
  %803 = %801.0;
  (%802, %803)
}

def @func_7280(%var_7277: Tensor[(1872), float64], %var_7278: Tensor[(16, 9, 13), float64], %var_7279: Tensor[(3, 60), int32]) -> (Tensor[(9, 2, 6), float32], Tensor[(1872), float64], Tensor[(21), float64], Tensor[(660), int64], Tensor[(16, 9, 13), bool], Tensor[(4, 11, 15), int64], Tensor[(3, 60), int32], Tensor[(540, 2), int32], Tensor[(896), uint64], Tensor[(1, 70), uint32]) {
  @func_7275(%var_7277, %var_7278, %var_7279) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(1872), float64], Tensor[(21), float64], Tensor[(660), int64], Tensor[(16, 9, 13), bool], Tensor[(4, 11, 15), int64], Tensor[(3, 60), int32], Tensor[(540, 2), int32], Tensor[(896), uint64], Tensor[(1, 70), uint32]) */
}

def @func_8704() -> (Tensor[(5, 14, 3), uint32],) {
  %804 = cast(meta[relay.Constant][63] /* ty=Tensor[(5, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 3), float64] */;
  %805 = sigmoid(%804) /* ty=Tensor[(5, 14, 3), float64] */;
  %806 = cast(meta[relay.Constant][63] /* ty=Tensor[(5, 14, 3), float64] */, dtype="uint32") /* ty=Tensor[(5, 14, 3), uint32] */;
  %807 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%805, dtype="uint32") /* ty=Tensor[(5, 14, 3), uint32] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %810 = bitwise_or(%808, %809) /* ty=Tensor[(5, 14, 3), uint32] */;
  (%810,)
}

def @func_9768() -> (Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), int16]) {
  %811 = @func_7342() /* ty=(Tensor[(9, 2, 6), bool],) */;
  %812 = @func_8026() /* ty=(Tensor[(9, 2, 6), int16], Tensor[(9, 2, 6), float64], Tensor[(9, 2, 6), int64]) */;
  %813 = %811.0;
  %814 = %812.0;
  (%813, %814)
}

def @func_8365() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32]) {
  %815 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %816 = @func_7848() /* ty=(Tensor[(39, 9), int16], Tensor[(9, 7, 14), float32], Tensor[(1, 882), float32]) */;
  %817 = %815.0;
  %818 = %816.1;
  (%817, %818)
}

def @func_9438(%var_9434: Tensor[(224), float64], %var_9435: Tensor[(8, 20), float64], %var_9436: Tensor[(75, 3), int64], %var_9437: Tensor[(896), uint64]) -> (Tensor[(9, 2, 6), float64], Tensor[(72), float32], Tensor[(6, 12), uint64], Tensor[(288), uint64], Tensor[(224), float64], Tensor[(672), float32], Tensor[(8, 20), float64], Tensor[(320), float32], Tensor[(5, 3, 15), int64], Tensor[(75, 3), int64], Tensor[(4, 11, 15), int64], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(70), uint32], Tensor[(4, 11, 15), int64], Tensor[(1080), int32], Tensor[(9, 2, 6), bool]) {
  %860 = fn (%var_9348: Tensor[(224), float64], %var_9355: Tensor[(8, 20), float64], %var_9359: Tensor[(75, 3), int64], %var_9371: Tensor[(896), uint64]) -> (Tensor[(9, 2, 6), float64], Tensor[(72), float32], Tensor[(6, 12), uint64], Tensor[(288), uint64], Tensor[(224), float64], Tensor[(672), float32], Tensor[(8, 20), float64], Tensor[(320), float32], Tensor[(5, 3, 15), int64], Tensor[(75, 3), int64], Tensor[(4, 11, 15), int64], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(70), uint32], Tensor[(4, 11, 15), int64], Tensor[(1080), int32], Tensor[(9, 2, 6), bool]) {
    %819 = @func_6909() /* ty=(Tensor[(9, 2, 6), bool], Tensor[(9, 2, 6), float64]) */;
    %820 = cast(meta[relay.Constant][64] /* ty=Tensor[(6, 12), uint64] */, dtype="uint64") /* ty=Tensor[(6, 12), uint64] */;
    %821 = cast(meta[relay.Constant][65] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %822 = cast(%var_9348, dtype="float64") /* ty=Tensor[(224), float64] */;
    %823 = reshape(%820, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %824 = reshape(%821, newshape=[288]) /* ty=Tensor[(288), uint64] */;
    %825 = reshape(%822, newshape=[224]) /* ty=Tensor[(224), float64] */;
    %826 = @func_8668(%823, %824, %825) /* ty=(Tensor[(9, 12, 10), float64], Tensor[(288), uint64], Tensor[(1080), float64], Tensor[(9, 2, 6), int64], Tensor[(40, 12), float32], Tensor[(224), float64], Tensor[(72), float32], Tensor[(10, 14, 9), int64], Tensor[(33, 1), float64]) */;
    %827 = cast(%var_9355, dtype="float64") /* ty=Tensor[(8, 20), float64] */;
    %828 = cast(meta[relay.Constant][66] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %829 = reshape(%827, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
    %830 = reshape(%828, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %831 = @func_5096(%829, %830) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(896), uint64], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180, 1), int32], Tensor[(1080, 1), int32], Tensor[(896), uint64]) */;
    %832 = cast(%var_9359, dtype="int64") /* ty=Tensor[(75, 3), int64] */;
    %833 = cast(%var_9359, dtype="int64") /* ty=Tensor[(75, 3), int64] */;
    %834 = reshape(%832, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int64] */;
    %835 = reshape(%833, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int64] */;
    %836 = cast(meta[relay.Constant][67] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
    %837 = cast(%var_9371, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %838 = cast(meta[relay.Constant][68] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %839 = reshape(%836, newshape=[180]) /* ty=Tensor[(180), int32] */;
    %840 = reshape(%837, newshape=[14, 64]) /* ty=Tensor[(14, 64), uint64] */;
    %841 = reshape(%838, newshape=[70]) /* ty=Tensor[(70), uint32] */;
    %842 = @func_7018(%839, %840, %841) /* ty=(Tensor[(9, 2, 6), bool], Tensor[(4, 11, 15), int64], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(14, 64), uint64], Tensor[(70), uint32]) */;
    %843 = cast(meta[relay.Constant][67] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
    %844 = cast(meta[relay.Constant][69] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
    %845 = cast(%var_9371, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %846 = cast(meta[relay.Constant][68] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %847 = reshape(%843, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
    %848 = reshape(%844, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
    %849 = reshape(%845, newshape=[896]) /* ty=Tensor[(896), uint64] */;
    %850 = reshape(%846, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
    %851 = @func_1580(%847, %848, %849, %850) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
    %852 = @func_7075() /* ty=(Tensor[(9, 2, 6), bool],) */;
    %853 = %819.1;
    %854 = %826.6;
    %855 = %831.4;
    %856 = @func_6694(%834, %835) /* ty=Tensor[(5, 3, 15), int64] */;
    %857 = %842.1;
    %858 = %851.4;
    %859 = %852.0;
    (%853, %854, meta[relay.Constant][64] /* ty=Tensor[(6, 12), uint64] */, meta[relay.Constant][65] /* ty=Tensor[(288), uint64] */, %var_9348, %855, %var_9355, meta[relay.Constant][66] /* ty=Tensor[(320), float32] */, %856, %var_9359, %857, meta[relay.Constant][67] /* ty=Tensor[(180), int32] */, %var_9371, meta[relay.Constant][68] /* ty=Tensor[(70), uint32] */, %858, meta[relay.Constant][69] /* ty=Tensor[(1080), int32] */, %859)
  };
  %860(%var_9434, %var_9435, %var_9436, %var_9437) /* ty=(Tensor[(9, 2, 6), float64], Tensor[(72), float32], Tensor[(6, 12), uint64], Tensor[(288), uint64], Tensor[(224), float64], Tensor[(672), float32], Tensor[(8, 20), float64], Tensor[(320), float32], Tensor[(5, 3, 15), int64], Tensor[(75, 3), int64], Tensor[(4, 11, 15), int64], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(70), uint32], Tensor[(4, 11, 15), int64], Tensor[(1080), int32], Tensor[(9, 2, 6), bool]) */
}

def @func_690(%var_679: Tensor[(16, 14, 4), uint64], %var_680: Tensor[(16, 14, 4), uint64], %var_687: Tensor[(70), uint32]) -> (Tensor[(16, 14, 4), bool], Tensor[(7, 7, 10), uint32], Tensor[(70), uint32]) {
  %861 = cast(%var_680, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
  %862 = shape_of(%var_679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%var_679, dtype="bool") /* ty=Tensor[(16, 14, 4), bool] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %865 = cast(%var_687, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %866 = reshape(%865, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
  %867 = less_equal(%863, %864) /* ty=Tensor[(16, 14, 4), bool] */;
  %868 = @func_456(%866) /* ty=Tensor[(7, 7, 10), uint32] */;
  (%867, %868, %var_687)
}

def @func_7679(%var_7677: Tensor[(1320), bool], %var_7678: Tensor[(1872), float64]) -> (Tensor[(9, 2, 6), bool], Tensor[(8, 11, 15), bool], Tensor[(1320), bool], Tensor[(70), uint32], Tensor[(3, 60), int32], Tensor[(1872), float64], Tensor[(30, 6), int32]) {
  @func_7675(%var_7677, %var_7678) /* ty=(Tensor[(9, 2, 6), bool], Tensor[(8, 11, 15), bool], Tensor[(1320), bool], Tensor[(70), uint32], Tensor[(3, 60), int32], Tensor[(1872), float64], Tensor[(30, 6), int32]) */
}

def @func_6694(%var_6685: Tensor[(5, 3, 15), int64], %var_6686: Tensor[(5, 3, 15), int64]) -> Tensor[(5, 3, 15), int64] {
  %869 = cast(%var_6686, dtype="int64") /* ty=Tensor[(5, 3, 15), int64] */;
  %870 = shape_of(%var_6685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%var_6685, dtype="int64") /* ty=Tensor[(5, 3, 15), int64] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%871, %872) /* ty=Tensor[(5, 3, 15), int64] */
}

def @func_6985() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32]) {
  @func_6983() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float32]) */
}

def @func_3985(%var_3977: int64, %var_3978: Tensor[(15, 15, 16), int64]) -> Tensor[(15, 15, 16), int64] {
  %873 = cast(%var_3977, dtype="int64") /* ty=int64 */;
  %874 = cast(%var_3978, dtype="int64") /* ty=Tensor[(15, 15, 16), int64] */;
  bitwise_xor(%873, %874) /* ty=Tensor[(15, 15, 16), int64] */
}

def @func_4308(%var_4305: Tensor[(13, 8, 7), int64], %var_4306: Tensor[(13, 8, 7), int64], %var_4307: Tensor[(480), bool]) -> (Tensor[(13, 8, 7), int64], Tensor[(480), bool], Tensor[(8, 4, 15), float32]) {
  %887 = fn (%var_4275: Tensor[(13, 8, 7), int64], %var_4276: Tensor[(13, 8, 7), int64], %var_4283: Tensor[(480), bool]) -> (Tensor[(13, 8, 7), int64], Tensor[(480), bool], Tensor[(8, 4, 15), float32]) {
    %875 = cast(%var_4276, dtype="int64") /* ty=Tensor[(13, 8, 7), int64] */;
    %876 = shape_of(%var_4275, dtype="int32") /* ty=Tensor[(3), int32] */;
    %877 = cast(%var_4275, dtype="int64") /* ty=Tensor[(13, 8, 7), int64] */;
    %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %879 = cast(%var_4283, dtype="bool") /* ty=Tensor[(480), bool] */;
    %880 = cast(%var_4283, dtype="bool") /* ty=Tensor[(480), bool] */;
    %881 = reshape(%879, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
    %882 = reshape(%880, newshape=[8, 4, 15]) /* ty=Tensor[(8, 4, 15), bool] */;
    %883 = @func_2703(%881, %882) /* ty=Tensor[(8, 4, 15), bool] */;
    %884 = cast(%883, dtype="float32") /* ty=Tensor[(8, 4, 15), float32] */;
    %885 = bitwise_xor(%877, %878) /* ty=Tensor[(13, 8, 7), int64] */;
    %886 = rsqrt(%884) /* ty=Tensor[(8, 4, 15), float32] */;
    (%885, %var_4283, %886)
  };
  %887(%var_4305, %var_4306, %var_4307) /* ty=(Tensor[(13, 8, 7), int64], Tensor[(480), bool], Tensor[(8, 4, 15), float32]) */
}

def @func_7627() -> (Tensor[(9, 2, 6), float64],) {
  @func_7625() /* ty=(Tensor[(9, 2, 6), float64],) */
}

def @func_5100(%var_5098: Tensor[(8, 4, 5), float64], %var_5099: Tensor[(320), float32]) -> (Tensor[(8, 4, 5), float64], Tensor[(896), uint64], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180, 1), int32], Tensor[(1080, 1), int32], Tensor[(896), uint64]) {
  @func_5096(%var_5098, %var_5099) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(896), uint64], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180, 1), int32], Tensor[(1080, 1), int32], Tensor[(896), uint64]) */
}

def @func_1586(%var_1582: Tensor[(1, 12, 15), int32], %var_1583: Tensor[(6, 12, 15), int32], %var_1584: Tensor[(896), uint64], %var_1585: Tensor[(7, 10), uint32]) -> (Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) {
  @func_1580(%var_1582, %var_1583, %var_1584, %var_1585) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */
}

def @func_5955() -> (Tensor[(9, 2, 6), float32],) {
  %888 = @func_5773() /* ty=Tensor[(9, 2, 6), float32] */;
  (%888,)
}

def @func_9643(%var_9642: Tensor[(9, 2, 6), float32]) -> (Tensor[(9, 2, 6), int32], Tensor[(9, 2, 6), float64]) {
  %897 = fn (%var_9631: Tensor[(9, 2, 6), float32]) -> (Tensor[(9, 2, 6), int32], Tensor[(9, 2, 6), float64]) {
    %889 = @func_9024() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 2, 6), float64]) */;
    %890 = %889.0;
    %891 = cast(%var_9631, dtype="int32") /* ty=Tensor[(9, 2, 6), int32] */;
    %892 = shape_of(%890, dtype="int32") /* ty=Tensor[(3), int32] */;
    %893 = cast(%890, dtype="int32") /* ty=Tensor[(9, 2, 6), int32] */;
    %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %895 = add(%893, %894) /* ty=Tensor[(9, 2, 6), int32] */;
    %896 = @func_7447() /* ty=Tensor[(9, 2, 6), float64] */;
    (%895, %896)
  };
  %897(%var_9642) /* ty=(Tensor[(9, 2, 6), int32], Tensor[(9, 2, 6), float64]) */
}

def @func_7061(%var_7058: Tensor[(112, 2), float64], %var_7059: Tensor[(56, 12), float32], %var_7060: Tensor[(180), int32]) -> (Tensor[(9, 2, 6), float32], Tensor[(180), int32], Tensor[(56, 12), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(112, 2), uint16]) {
  @func_7056(%var_7058, %var_7059, %var_7060) /* ty=(Tensor[(9, 2, 6), float32], Tensor[(180), int32], Tensor[(56, 12), float32], Tensor[(180), int32], Tensor[(896), uint64], Tensor[(112, 2), uint16]) */
}

def @func_6825() -> Tensor[(9, 2, 6), float64] {
  %898 = fn () -> Tensor[(9, 2, 6), float64] {
    @func_6336() /* ty=Tensor[(9, 2, 6), float64] */
  };
  %898() /* ty=Tensor[(9, 2, 6), float64] */
}

def @func_9301() -> (Tensor[(7, 126), float32],) {
  %899 = @func_7837() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32], Tensor[(7, 126), float32]) */;
  %900 = %899.2;
  (%900,)
}

def @func_9608() -> (Tensor[(9, 2, 6), float32],) {
  %909 = fn () -> (Tensor[(9, 2, 6), float32],) {
    %901 = @func_7924() /* ty=Tensor[(9, 2, 6), bool] */;
    %902 = @func_8365() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32]) */;
    %903 = %902.0;
    %904 = cast(%903, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
    %905 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
    %906 = cast(%901, dtype="float32") /* ty=Tensor[(9, 2, 6), float32] */;
    %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %908 = power(%906, %907) /* ty=Tensor[(9, 2, 6), float32] */;
    (%908,)
  };
  %909() /* ty=(Tensor[(9, 2, 6), float32],) */
}

def @func_7831() -> (Tensor[(9, 140), int64],) {
  @func_7829() /* ty=(Tensor[(9, 140), int64],) */
}

def @func_5316(%var_5314: Tensor[(10, 12, 10), float32], %var_5315: Tensor[(224, 4), uint64]) -> (Tensor[(10, 12, 10), float64], Tensor[(10, 12, 10), uint16], Tensor[(7, 7, 10), uint32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(70), uint32], Tensor[(224, 4), float32]) {
  %931 = fn (%var_5266: Tensor[(10, 12, 10), float32], %var_5299: Tensor[(224, 4), uint64]) -> (Tensor[(10, 12, 10), float64], Tensor[(10, 12, 10), uint16], Tensor[(7, 7, 10), uint32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(70), uint32], Tensor[(224, 4), float32]) {
    %910 = cast(%var_5266, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
    %911 = cast(%var_5266, dtype="float32") /* ty=Tensor[(10, 12, 10), float32] */;
    %912 = exp(%911) /* ty=Tensor[(10, 12, 10), float32] */;
    %913 = cast(%var_5266, dtype="uint16") /* ty=Tensor[(10, 12, 10), uint16] */;
    %914 = shape_of(%912, dtype="int32") /* ty=Tensor[(3), int32] */;
    %915 = cast(%912, dtype="uint16") /* ty=Tensor[(10, 12, 10), uint16] */;
    %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %917 = cast(meta[relay.Constant][70] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
    %918 = cast(meta[relay.Constant][71] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
    %919 = cast(%var_5299, dtype="uint64") /* ty=Tensor[(224, 4), uint64] */;
    %920 = cast(meta[relay.Constant][72] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %921 = reshape(%917, newshape=[1, 12, 15]) /* ty=Tensor[(1, 12, 15), int32] */;
    %922 = reshape(%918, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), int32] */;
    %923 = reshape(%919, newshape=[896]) /* ty=Tensor[(896), uint64] */;
    %924 = reshape(%920, newshape=[7, 10]) /* ty=Tensor[(7, 10), uint32] */;
    %925 = @func_1580(%921, %922, %923, %924) /* ty=(Tensor[(6, 12, 15), int32], Tensor[(4, 11, 15), int64], Tensor[(660), int64], Tensor[(896), uint64], Tensor[(4, 11, 15), int64], Tensor[(7, 7, 10), uint32], Tensor[(7, 10), uint32], Tensor[(4, 11, 15), float32], Tensor[(10, 2, 16), float32], Tensor[(320), float32], Tensor[(7, 7, 10), uint32]) */;
    %926 = cast(%var_5299, dtype="float32") /* ty=Tensor[(224, 4), float32] */;
    %927 = log(%910) /* ty=Tensor[(10, 12, 10), float64] */;
    %928 = subtract(%915, %916) /* ty=Tensor[(10, 12, 10), uint16] */;
    %929 = %925.10;
    %930 = atanh(%926) /* ty=Tensor[(224, 4), float32] */;
    (%927, %928, %929, meta[relay.Constant][70] /* ty=Tensor[(180), int32] */, meta[relay.Constant][71] /* ty=Tensor[(1080), int32] */, meta[relay.Constant][72] /* ty=Tensor[(70), uint32] */, %930)
  };
  %931(%var_5314, %var_5315) /* ty=(Tensor[(10, 12, 10), float64], Tensor[(10, 12, 10), uint16], Tensor[(7, 7, 10), uint32], Tensor[(180), int32], Tensor[(1080), int32], Tensor[(70), uint32], Tensor[(224, 4), float32]) */
}

def @func_2446(%var_2441: Tensor[(10, 10, 15), float32]) -> Tensor[(10, 10, 15), float32] {
  %932 = cast(%var_2441, dtype="float32") /* ty=Tensor[(10, 10, 15), float32] */;
  sin(%932) /* ty=Tensor[(10, 10, 15), float32] */
}

def @func_6727() -> Tensor[(9, 2, 6), float32] {
  %933 = @func_6134() /* ty=(Tensor[(9, 2, 6), float32],) */;
  %933.0
}

def @func_9201() -> (Tensor[(13, 15, 9), float64],) {
  @func_9199() /* ty=(Tensor[(13, 15, 9), float64],) */
}

def @func_8367() -> (Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32]) {
  @func_8365() /* ty=(Tensor[(9, 2, 6), float32], Tensor[(9, 7, 14), float32]) */
}

def @func_1289(%var_1287: Tensor[(6, 10, 15), int32], %var_1288: Tensor[(6, 10, 15), int32]) -> (Tensor[(6, 10, 15), int32], Tensor[(7, 7, 10), uint32], Tensor[(14, 5), uint32]) {
  %942 = fn (%var_1255: Tensor[(6, 10, 15), int32], %var_1256: Tensor[(6, 10, 15), int32]) -> (Tensor[(6, 10, 15), int32], Tensor[(7, 7, 10), uint32], Tensor[(14, 5), uint32]) {
    %934 = cast(%var_1256, dtype="int32") /* ty=Tensor[(6, 10, 15), int32] */;
    %935 = shape_of(%var_1255, dtype="int32") /* ty=Tensor[(3), int32] */;
    %936 = cast(%var_1255, dtype="int32") /* ty=Tensor[(6, 10, 15), int32] */;
    %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %938 = cast(meta[relay.Constant][73] /* ty=Tensor[(14, 5), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5), uint32] */;
    %939 = reshape(%938, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), uint32] */;
    %940 = maximum(%936, %937) /* ty=Tensor[(6, 10, 15), int32] */;
    %941 = @func_456(%939) /* ty=Tensor[(7, 7, 10), uint32] */;
    (%940, %941, meta[relay.Constant][73] /* ty=Tensor[(14, 5), uint32] */)
  };
  %942(%var_1287, %var_1288) /* ty=(Tensor[(6, 10, 15), int32], Tensor[(7, 7, 10), uint32], Tensor[(14, 5), uint32]) */
}

def @func_5899(%var_5893: Tensor[(160), float64], %var_5894: Tensor[(320), float32]) -> (Tensor[(9, 2, 6), float32], Tensor[(896), uint64], Tensor[(160), float64], Tensor[(320), float32]) {
  %943 = cast(%var_5893, dtype="float64") /* ty=Tensor[(160), float64] */;
  %944 = cast(%var_5894, dtype="float32") /* ty=Tensor[(320), float32] */;
  %945 = reshape(%943, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %946 = reshape(%944, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %947 = @func_5096(%945, %946) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(896), uint64], Tensor[(144), float32], Tensor[(320), float32], Tensor[(672), float32], Tensor[(180, 1), int32], Tensor[(1080, 1), int32], Tensor[(896), uint64]) */;
  %948 = @func_5773() /* ty=Tensor[(9, 2, 6), float32] */;
  %949 = %947.7;
  (%948, %949, %var_5893, %var_5894)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen87/build/output.py:2154: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen87/build/output.py", line 2159, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(480) tvmgen_default_fused_asinh_reshape_power_cosh_kernel0(double* __restrict__ T_cosh, double* __restrict__ placeholder) {
  T_cosh[(((int)threadIdx.x))] = cosh(pow(placeholder[(((int)threadIdx.x))], asinh(placeholder[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_83 = relay.var("var_83", dtype = "float32", shape = (13, 10, 13))#candidate|83|(13, 10, 13)|var|float32
uop_84 = relay.acos(var_83.astype('float32')) # shape=(13, 10, 13)
output = relay.Tuple([uop_84,])
output2 = relay.Tuple([uop_84,])
func_92 = relay.Function([var_83,], output)
mod['func_92'] = func_92
mod = relay.transform.InferType()(mod)
var_93 = relay.var("var_93", dtype = "float32", shape = (13, 10, 13))#candidate|93|(13, 10, 13)|var|float32
output = func_92(var_93)
func_94 = relay.Function([var_93], output)
mutated_mod['func_94'] = func_94
mutated_mod = relay.transform.InferType()(mutated_mod)
var_99 = relay.var("var_99", dtype = "float64", shape = ())#candidate|99|()|var|float64
const_100 = relay.const([[[-5.471102],[3.861747],[-4.907798],[7.908041],[2.234556],[-9.240438],[0.168547],[-5.585146],[9.868153],[8.908170],[7.770077],[8.003958],[-3.394623]],[[-8.475416],[2.706242],[-1.090103],[-5.441566],[-3.214905],[8.562447],[-0.637406],[2.787954],[2.781394],[4.312211],[6.350452],[3.141980],[0.597724]],[[3.203342],[-4.782425],[3.120019],[7.940492],[-1.115915],[-3.355121],[0.088493],[-7.215485],[-0.497927],[-7.618023],[5.332809],[-3.319008],[6.434717]],[[1.382943],[-3.423449],[0.971572],[7.517808],[2.264633],[-8.461080],[-0.265226],[1.889140],[7.853089],[4.889644],[9.036685],[7.386894],[-9.662237]],[[8.212133],[9.891010],[-0.650350],[0.011073],[0.496034],[-6.489579],[-8.722081],[-6.806937],[0.680203],[4.621992],[6.776640],[7.036868],[-5.270191]],[[9.537763],[-7.967277],[-0.870740],[-5.316924],[-6.100336],[0.717946],[-8.278567],[6.805729],[3.451286],[-7.015543],[-1.533595],[-9.743102],[-1.042611]],[[0.739571],[6.312475],[-8.416538],[0.999533],[-8.969707],[-3.369826],[5.615015],[3.306502],[-7.140114],[-9.602698],[3.943521],[1.541798],[7.719473]],[[7.955491],[-7.307683],[1.799891],[4.564010],[2.558356],[9.624595],[1.453518],[4.839231],[3.805939],[-3.468523],[2.858955],[-2.454149],[-3.477424]],[[9.720856],[4.703969],[-0.803343],[7.600830],[9.891812],[-9.254594],[6.443676],[-3.086419],[-6.469358],[-9.567761],[-9.299116],[-0.828722],[-8.010100]],[[2.701892],[2.296022],[-0.119899],[-0.005588],[5.089834],[-5.955319],[9.377685],[-2.745861],[3.803023],[4.461589],[-8.480151],[9.699281],[3.475653]],[[-2.981841],[-6.832917],[3.671999],[9.718980],[-0.581786],[-7.451217],[-6.523659],[6.311617],[-7.047609],[-4.514599],[-0.039474],[-1.259938],[1.681700]],[[4.914405],[3.790729],[-6.904547],[-7.154947],[-9.382178],[4.043063],[6.132845],[-2.979413],[-3.906671],[3.178161],[6.311571],[-1.123947],[-6.562136]],[[1.290705],[-1.588987],[-7.386568],[8.839302],[4.302320],[1.050849],[4.108636],[8.819204],[-5.011415],[-1.626001],[-8.507460],[2.515377],[-6.552953]],[[8.776470],[-7.156282],[6.971251],[-0.656245],[-9.968807],[3.989945],[-0.926271],[-4.076082],[-8.250708],[-2.065954],[-4.415779],[-5.805380],[1.595152]]], dtype = "float64")#candidate|100|(14, 13, 1)|const|float64
bop_101 = relay.floor_divide(var_99.astype('float64'), const_100.astype('float64')) # shape=(14, 13, 1)
bop_108 = relay.power(const_100.astype('float64'), relay.reshape(bop_101.astype('float64'), relay.shape_of(const_100))) # shape=(14, 13, 1)
func_92_call = mod.get_global_var('func_92')
func_94_call = mutated_mod.get_global_var('func_94')
var_112 = relay.var("var_112", dtype = "float32", shape = (1690,))#candidate|112|(1690,)|var|float32
call_111 = relay.TupleGetItem(func_92_call(relay.reshape(var_112.astype('float32'), [13, 10, 13])), 0)
call_113 = relay.TupleGetItem(func_94_call(relay.reshape(var_112.astype('float32'), [13, 10, 13])), 0)
uop_124 = relay.log10(var_112.astype('float64')) # shape=(1690,)
func_92_call = mod.get_global_var('func_92')
func_94_call = mutated_mod.get_global_var('func_94')
call_126 = relay.TupleGetItem(func_92_call(relay.reshape(uop_124.astype('float32'), [13, 10, 13])), 0)
call_127 = relay.TupleGetItem(func_94_call(relay.reshape(uop_124.astype('float32'), [13, 10, 13])), 0)
bop_128 = relay.logical_or(bop_108.astype('bool'), uop_124.astype('bool')) # shape=(14, 13, 1690)
output = relay.Tuple([call_111,call_126,bop_128,])
output2 = relay.Tuple([call_113,call_127,bop_128,])
func_131 = relay.Function([var_99,var_112,], output)
mod['func_131'] = func_131
mod = relay.transform.InferType()(mod)
mutated_mod['func_131'] = func_131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_131_call = mutated_mod.get_global_var('func_131')
var_133 = relay.var("var_133", dtype = "float64", shape = ())#candidate|133|()|var|float64
var_134 = relay.var("var_134", dtype = "float32", shape = (1690,))#candidate|134|(1690,)|var|float32
call_132 = func_131_call(var_133,var_134,)
output = call_132
func_135 = relay.Function([var_133,var_134,], output)
mutated_mod['func_135'] = func_135
mutated_mod = relay.transform.InferType()(mutated_mod)
const_166 = relay.const([[[False,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True],[False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True],[True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True]],[[False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,False],[True,True,True,False,False,True,True,True,True,True,False,False,True,False,True,True],[True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True]],[[False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False],[True,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False],[False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,False]],[[False,False,True,False,True,False,True,True,True,True,True,True,False,True,True,True],[False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True],[True,False,True,False,False,False,False,True,False,True,False,False,False,True,True,True]],[[False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True],[True,False,True,False,False,True,True,False,True,False,True,True,True,False,False,False],[False,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False]],[[True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False],[False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True],[False,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True]],[[True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False],[True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True],[False,False,True,True,False,True,False,True,True,False,True,True,True,True,True,False]],[[True,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False],[True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True],[False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False]],[[False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False],[False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False],[False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,True]],[[False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,True],[True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True],[True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,False]],[[False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False],[False,False,True,True,False,True,False,False,True,True,False,True,False,True,True,True],[True,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False]],[[True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False],[True,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True],[False,False,True,False,True,True,False,False,True,True,False,False,False,False,False,True]]], dtype = "bool")#candidate|166|(12, 3, 16)|const|bool
var_167 = relay.var("var_167", dtype = "bool", shape = (12, 3, 16))#candidate|167|(12, 3, 16)|var|bool
bop_168 = relay.logical_or(const_166.astype('bool'), relay.reshape(var_167.astype('bool'), relay.shape_of(const_166))) # shape=(12, 3, 16)
uop_172 = relay.atanh(const_166.astype('float32')) # shape=(12, 3, 16)
func_92_call = mod.get_global_var('func_92')
func_94_call = mutated_mod.get_global_var('func_94')
const_183 = relay.const([9.106627,9.085586,-0.996884,7.924433,-2.957341,1.404340,-1.717788,7.403215,-8.032502,7.575609,-6.821391,9.678607,6.817487,6.341099,9.155659,-7.800677,5.769725,-2.984610,-3.021552,1.517429,6.318790,-7.575538,6.645133,-0.944838,5.266895,4.435515,8.369180,-5.329020,-5.151736,9.048467,-7.038707,-7.086098,-7.714664,8.857838,-0.209269,5.820974,5.296700,1.885772,8.467061,0.074160,3.840606,-5.767415,3.669446,-2.638474,-4.407332,8.677989,8.680777,8.258288,-7.051858,-0.113387,7.710300,-2.630194,5.297878,9.266198,-1.716963,9.010155,4.345687,-8.861348,-6.599655,-1.450751,2.978948,2.858565,-5.432185,-5.836309,-6.096909,9.116711,-3.884045,-2.215691,-0.013811,-6.600116,-7.765281,-5.060637,8.162848,-9.840118,8.421333,-8.594409,-2.241177,4.768316,-3.215527,5.715486,-7.092278,-7.675358,7.345708,-6.294118,1.805690,-0.950253,1.804146,1.100397,1.903278,-8.773998,9.324493,9.195312,8.810064,-6.776293,-5.049089,-1.455966,-4.269482,0.708586,5.179861,4.340448,-3.665944,2.992186,4.685393,-3.262958,-2.213559,4.745816,-6.378735,-3.692055,-8.770547,5.334162,-4.452141,6.305430,4.761568,-0.250891,1.027629,3.629472,8.212996,2.326464,3.937166,-6.487523,-6.461852,0.246283,-5.599032,-4.725908,-1.263306,-4.801950,5.522636,-7.745652,-5.025069,-5.582268,-6.030882,-6.729463,-3.041096,-6.163826,9.444079,7.541190,0.767797,-0.345742,-3.781956,-1.609482,0.836995,-2.510625,-3.294827,7.827370,5.581742,-6.354162,0.878847,-5.857322,-1.223115,9.443008,1.935428,-1.592651,-6.927643,-5.671382,5.726484,9.572546,1.473571,-6.707737,-8.631532,6.941692,5.351216,-8.201927,-0.639015,-6.302827,2.040329,-7.898121,-5.583603,1.498535,-2.255387,-8.511431,-9.249631,-7.531424,8.164210,-8.313585,-1.028608,5.199737,3.543332,-3.983872,-9.575186,3.884865,-9.034422,-5.968337,-2.267153,0.977726,-6.869461,-9.371939,-8.200232,-7.359546,5.870857,9.465482,-9.008127,0.195242,-7.335821,0.921893,-9.816468,0.718835,9.062091,-8.212105,7.836426,-4.160338,3.047583,8.820067,0.185710,9.162221,-1.838476,-5.103771,0.675612,-1.639827,3.932575,4.850210,-4.549117,-2.678148,-6.150941,7.444132,0.662760,6.926932,4.629882,-1.376033,4.770779,2.798584,-9.532843,-7.349838,-0.823999,-9.418358,7.722420,9.894579,-1.617971,0.087728,-2.226747,-6.207633,-4.330874,-7.143979,-3.912310,-2.005729,-1.586103,3.131011,0.297137,1.680892,7.818297,7.104953,4.496395,-3.301388,-5.408479,-2.030626,0.118474,-0.460867,9.274886,4.800423,8.202348,1.600757,7.122163,5.365004,-5.833900,-8.883266,-3.485109,-0.563717,3.566016,3.463428,-5.334576,-2.286774,-1.372995,3.870779,-9.347799,-7.003525,-0.374758,0.709338,-9.440424,-4.579330,4.230281,-3.910723,-6.049118,4.195827,-0.964143,-4.699499,4.410060,-0.282880,7.128793,2.961343,-7.912524,-0.569923,9.149783,-5.551634,-1.078783,-4.625271,-7.806502,8.903498,-7.389426,-9.838942,7.617369,1.927150,7.362292,-2.081626,-2.619699,-9.453382,7.922321,1.529545,1.936512,4.249366,4.583411,4.505696,-6.109107,-7.199328,-4.239870,7.379716,6.787897,-4.058182,-2.121860,-2.807028,-0.107847,4.012495,1.428740,-7.881367,8.456932,-5.646712,2.341675,-3.833225,-2.537001,-1.001495,0.875851,-7.481241,1.536824,0.886556,2.845310,-1.429751,5.858185,-7.145971,-8.608954,5.798648,-2.667699,-6.983978,4.525276,1.140291,-7.764388,-9.374707,-2.763605,-9.675985,7.280714,3.854341,4.895392,-2.840082,-0.878655,2.498392,3.318418,-1.523935,-6.777518,-3.436589,2.675900,0.365374,1.078947,7.247599,-1.159782,9.522337,5.647946,7.095745,-2.123947,7.140312,-6.317300,-5.191383,3.269405,7.207243,6.913239,-8.695202,3.557723,-4.502141,5.356445,-0.766823,-4.820333,-5.815165,6.528770,-5.427496,5.558655,-3.326952,1.758918,-5.465691,0.540293,-5.650236,0.324369,6.896673,5.059397,7.152315,8.743085,-3.849353,-3.638971,0.561170,-7.914601,9.893434,-6.152359,4.205933,-6.105978,-8.311812,9.806432,6.936240,6.777566,-1.175451,-6.794950,-8.524220,3.857336,6.498333,3.462360,4.105573,7.897303,7.942339,-9.447729,7.948343,-3.061350,-7.901142,-2.774385,-9.875081,-5.993258,-2.240853,5.915986,-1.315659,-3.866613,-0.854982,3.727090,7.442293,-8.102427,-4.431375,-5.042508,-7.314980,3.954602,-6.218187,-7.698765,-9.876057,7.190773,5.423635,3.788173,-6.601554,-4.228948,2.405940,-6.116102,-9.562907,9.729672,-5.890494,-1.736712,0.589144,1.066725,9.901696,-1.670166,2.715950,3.399207,-7.099035,-2.410340,-0.235965,5.762498,-4.798453,-3.197034,4.092091,6.287621,6.498260,-5.758813,-5.228242,3.717267,0.992762,2.924664,0.537997,4.855169,2.010986,-6.700525,-7.527475,0.956322,-1.581048,4.462812,1.460659,1.105961,-3.429165,0.242659,3.694935,9.109667,1.738446,3.427885,1.058169,-7.956435,7.956797,-3.497390,3.324281,-1.990243,3.655838,1.501169,2.931976,-9.796111,-3.919732,-9.905596,-9.797322,-1.279658,-6.386472,-8.303205,-8.995506,-9.934065,-2.515980,-9.636166,-3.721913,0.469183,-3.567634,-3.526910,5.571777,-3.373369,6.825045,2.467257,-4.167569,6.750226,-7.934495,-6.395441,-4.865672,-6.206166,3.994781,-1.753320,0.516191,3.002870,-3.558542,2.592749,-3.278339,8.719899,-0.127184,1.915660,-9.036523,2.338209,5.972167,-3.727664,-1.693974,-0.821608,0.887328,1.160514,-5.492211,-6.412949,5.168176,-8.385945,7.548437,7.286852,-9.731876,-0.791146,4.421115,4.772579,6.172226,-2.091013,-8.378228,7.178944,-6.305374,6.260717,-2.300958,1.546398,6.933622,9.395559,-9.115074,8.246724,-1.190414,9.967771,6.347216,-2.979291,-5.540368,8.244892,0.189396,-5.066079,2.815155,-7.444012,-0.819732,4.234150,7.704670,-4.059641,2.633250,-7.612309,-5.538096,0.161688,0.493749,-7.927829,2.426368,-5.702638,2.068888,-2.277691,-4.566469,-4.889658,-0.443163,9.724218,-2.227537,4.037740,3.289700,7.393050,-6.236704,1.283610,-2.910280,0.110378,8.757889,-3.780251,0.476643,-6.057649,1.944190,-9.123016,-4.974475,2.817258,8.160410,3.453498,3.925213,-2.573756,4.108320,4.814180,-8.286871,4.047515,-5.619679,-1.968619,-6.300275,-7.765233,4.840027,-5.300640,-8.482045,-2.601533,-6.473886,-7.484229,7.190198,1.294174,-3.708328,-2.555278,-1.381572,0.900283,-9.105548,-9.398220,-6.608788,-2.979444,3.307731,9.225854,3.210419,7.391927,8.028619,7.428511,0.227560,-4.055715,3.429544,-6.048333,-0.123768,-1.545249,2.933782,-4.385672,5.463014,5.896734,6.426097,-8.217241,-6.165462,-2.292740,7.509926,-1.249338,6.205943,7.014112,-9.560167,-7.564408,2.198127,7.349573,0.366129,-8.742571,-3.532267,8.439384,-8.374277,-8.072677,9.839407,1.085857,-5.443745,5.602597,-5.381292,-5.879316,-2.216542,0.726480,-6.479845,-9.955627,-2.769324,-6.503813,-9.482306,-4.915758,-4.228463,-8.879422,-5.409735,-2.921709,2.199525,-0.864351,-8.055138,-5.358025,6.299037,-9.332337,-4.149783,3.800234,3.439025,-3.118831,1.305846,3.365512,6.863666,8.568212,6.683124,1.110505,-8.503852,-3.909099,-3.511401,0.880858,-2.755565,7.196957,3.833907,-0.982776,6.273787,-4.718744,3.647718,-9.089025,7.053030,-3.117424,4.782667,-7.466207,3.008573,2.891157,7.761306,9.559097,-3.740192,0.533184,6.917761,7.423800,-6.859823,5.941126,3.357800,-3.397818,-7.837067,7.695433,-2.249297,3.239932,-9.241579,-8.652328,8.255948,6.501493,-8.691003,8.932228,-0.917970,-9.446199,6.084845,2.414174,3.037058,2.491693,-3.411371,-9.817436,-4.587548,4.180347,-4.518179,1.580951,0.802897,1.339708,8.198015,-7.623921,7.618976,-9.650972,-4.268175,7.698517,8.978825,1.894132,2.762807,8.476105,1.379960,-7.454809,-3.563949,-4.107673,9.032671,7.334950,-2.765589,-0.611757,3.128380,-0.901440,-1.325724,7.923575,2.658265,-6.368989,-9.798747,-8.167621,-3.554626,6.211036,-8.209029,-9.239531,-0.773623,-2.476836,6.562735,-3.580909,3.019373,6.710180,2.544136,-1.160252,5.537117,4.487674,-8.066046,-3.183649,1.333418,4.750971,1.261498,0.742009,2.499349,-6.880653,-4.182920,2.592506,-3.025851,-9.905033,-2.653822,-0.727302,8.525734,1.593591,0.529049,-9.109922,-1.369341,7.575882,3.602483,4.631142,-9.701175,-1.226293,-9.665324,0.464479,-7.034071,-1.022567,-5.761146,-5.376479,7.471635,1.922798,1.792976,7.362275,3.204847,4.430242,4.859804,6.941463,4.724992,-9.706616,-4.090243,-3.670545,3.542025,1.199024,2.291340,3.155532,2.508217,1.740115,-5.284382,-4.267127,3.215860,0.277932,-7.287196,8.159614,-2.902100,-8.960647,2.770098,8.174727,4.243149,-6.349589,-9.673240,3.931700,-6.079524,0.886292,6.451265,-0.307091,0.284060,0.080173,-5.641401,0.256444,9.861806,7.525822,-4.806035,4.929442,4.880976,-8.662596,-0.640996,-2.186593,4.389820,7.121588,7.159873,4.127335,6.615432,1.763459,7.695379,-7.299548,-4.354963,8.269793,-5.615171,-8.618174,-7.303242,-9.621696,9.293244,6.534365,-1.686346,2.453481,-1.250694,-4.060389,-0.463197,-8.714169,6.620371,-6.587783,-9.650983,-6.183367,-3.970602,5.963952,-4.772498,5.936299,-4.061600,-2.806384,-4.432314,-1.693495,-3.199453,-4.655115,-1.842245,6.549394,-4.157359,6.422267,9.073648,6.859195,2.370694,4.565571,-5.412983,0.412050,7.782860,7.809935,7.490663,5.469258,3.268603,-5.528431,-3.913634,5.837780,8.285273,9.582480,-3.907461,6.697984,2.923957,9.468127,1.023470,-3.601251,-8.657903,-4.314836,-8.644906,-6.366613,-1.716889,1.136582,-6.462035,2.636959,-8.197188,-8.873984,2.364430,-2.201049,-3.405227,1.339264,-5.819180,1.440449,2.518622,-7.111608,1.078667,8.449166,-6.283768,-8.545442,9.479714,-7.700779,-5.043744,6.217447,-0.870643,0.421963,2.514288,6.830148,-4.945166,7.819274,-5.971452,1.604342,-8.312322,6.365409,-3.445470,0.513839,7.628039,9.640282,-4.104565,-4.422786,-4.002193,-7.685416,-7.328049,9.587950,-2.433661,-0.379972,-7.072056,-8.792356,3.779387,2.693403,5.552169,3.292073,6.112946,-3.307082,5.040944,-1.775950,-5.629979,-4.240893,-1.825672,-8.958766,-9.007408,-9.671191,-6.490667,7.474181,-0.674144,7.128470,6.489428,6.843523,9.997037,-9.291433,-7.490202,-9.019982,5.515908,8.803888,-7.651945,-4.924056,-5.646935,-6.907975,4.690775,-8.812097,-8.683384,2.240816,5.619412,-4.696564,1.816299,5.910582,-9.316727,-2.732660,-4.133190,0.267888,7.405592,9.914413,-6.719838,6.126612,8.060431,-8.134445,0.023383,0.247931,-1.336327,-3.523018,3.735522,9.422077,7.751699,5.192594,4.135297,9.403598,6.534980,-2.730687,-9.957164,5.040237,-9.447136,6.924724,-3.147626,-2.425398,6.606734,-9.848658,-2.787040,-5.529343,3.983450,-8.230727,-9.045046,-1.508130,-1.101722,-8.551191,-3.377090,0.120899,2.451379,-9.635148,3.197271,-5.814668,1.438050,2.923020,-0.918774,-8.454501,-1.881975,-1.584175,-6.680969,-1.556287,3.683531,5.250181,-6.908729,-5.081303,4.944579,1.615633,8.176385,8.654249,-0.420361,3.888705,-0.109346,5.692479,-1.204058,-1.623590,-2.900717,5.862336,1.893993,6.394121,8.735637,6.069570,-4.259074,-9.282212,-5.695177,7.140766,-9.124787,3.997082,-5.016508,8.318170,-3.619689,6.109569,-4.808280,-9.091785,2.592758,-8.901605,-0.129817,5.781680,-5.262870,-3.177815,-6.052910,-9.210039,-6.044630,1.598252,-4.443898,2.220703,-8.488175,1.819537,-1.599164,-9.359266,1.218011,-3.302041,-8.813864,-5.652559,0.022927,3.799296,-4.167568,0.356464,4.869573,0.652921,4.946760,-6.034788,7.021359,2.572510,-1.009211,2.781765,-0.561685,7.473447,-5.094698,3.820351,-7.184769,2.678538,-9.953009,-8.261979,9.240229,2.247930,-5.547840,7.530279,0.286145,8.574393,-0.210603,0.960288,9.516118,-1.009633,2.934995,5.571620,-0.387385,-3.448700,6.511064,4.018042,6.098216,-9.613417,-5.793238,2.446286,-4.121359,9.534204,-3.018562,6.296623,2.841762,4.440323,3.594384,5.651356,1.264198,0.200264,-4.519102,2.910968,4.231419,8.453869,7.518793,-5.638320,-2.658789,1.013898,-3.407280,-2.062032,-0.911416,-3.928483,-6.742367,4.333209,-8.966339,9.551411,5.275821,-6.792262,-2.278391,3.349494,-5.675002,7.328596,5.304152,0.179490,4.607643,-4.741530,9.748753,4.891760,-7.441400,9.917973,6.534295,4.510052,-7.054496,-2.600654,6.480473,-8.078570,7.823733,-1.504954,-3.729395,-2.004367,9.389375,2.700385,-8.159549,8.768060,-5.219318,5.343233,3.723416,-9.170448,-1.970029,-4.955420,-6.910730,7.139825,-9.091004,5.102556,-0.224305,-1.825921,-1.887444,-6.246290,-5.996660,4.280051,3.748891,6.952306,7.998834,-9.946652,-5.173732,4.448351,6.568752,-3.637772,5.129461,1.604303,6.082292,4.742038,6.290387,-2.208800,1.089042,-3.139796,-1.309981,1.480660,-6.801491,7.962334,-5.095231,8.700741,-5.569735,3.277679,4.390759,5.859534,-1.729314,-0.237996,-5.383254,-5.972947,-8.732793,-4.024463,-7.019083,-3.675563,8.012927,6.914966,9.209825,-0.828491,-2.448592,1.439519,-0.634510,-3.047490,8.467024,-0.313596,-1.503087,-9.320600,-7.030033,2.932215,-0.294561,9.863956,-6.214204,-8.409129,0.927838,2.977231,-2.283965,-7.722002,6.120734,-2.691228,6.896278,-1.434359,4.693022,9.498124,-8.845894,-4.617661,-7.201555,-3.485745,-3.967879,-5.718348,6.591159,0.397849,-5.556294,-0.312460,-1.455906,5.910028,-6.986547,9.582118,-4.116782,4.559187,-9.734135,9.539702,3.849170,2.013673,-4.890427,2.405718,6.281154,-1.939547,-2.624812,9.854957,7.865854,9.995135,-1.095943,8.628333,5.036987,6.692511,-4.659365,-2.706606,4.613082,0.683928,-7.529005,6.366875,1.993182,5.939937,3.091165,-4.944488,7.330417,-8.552833,8.854965,-6.280375,-2.792134,-8.468162,2.286979,-1.510887,-7.919194,-9.565553,-8.270788,-8.439465,0.558311,-9.038358,-3.892587,6.896173,-2.287152,2.659512,2.426801,-5.360249,-9.639390,-6.857250,2.512535,-2.343845,-4.088930,-9.192743,-0.171917,-6.306204,0.666552,-0.163953,-3.590234,8.707299,3.429031,-9.818085,6.020199,-5.774721,3.192333,8.331494,7.391265,-2.544895,-5.871652,6.027259,2.160806,0.683766,-6.555877,-9.735737,8.884385,7.659620,-2.279320,-0.608384,-3.731039,2.783353,4.430846,-5.264149,-5.999997,0.789081,-8.886782,-0.943872,-3.601483,-3.103180,6.891047,1.523489,-4.130490,-6.545037,-5.514065,-8.322758,5.850483,-2.973265,-3.426023,-1.414430,4.376665,-8.147741,-1.346814,5.656512,-0.163983,8.424765,-5.047274,-3.247832,3.578014,-5.481690,7.745191,-0.173897,-2.403220,-2.929410,5.017476,-5.277170,-3.364415,-9.440484,0.446017,2.067536,6.548500,7.469231,-0.821906,4.460041,-4.350470,9.444264,-6.819245,1.353694,8.354312,-8.686690,-7.681761,9.076480,0.852519,0.900923,-6.795718,-7.123047,0.927345,7.541250,3.257486,1.617564,-8.264609,-6.941438,-7.788772,-9.718123,0.519454,-6.220016,8.509266,-8.836663,-3.974263,3.719854,-1.583454,-9.804367,1.985690,9.197081,-1.031607,9.203367,-6.616122,-0.536185,5.900011,-4.324158,9.028263,-2.821073,-7.539703,2.888189,-8.687551,7.998104,-1.632190,-4.149802,-0.875584,-1.971479,-9.000223,0.529613,7.667823,0.588644,-5.309738,7.009766,-2.373765,-5.278246,-8.281044,4.035593,-8.116592,-3.338529,2.026947,1.120305,-3.475020,-7.080652,0.359612,4.365872,8.995992,4.752576,-8.341477,0.972677,-2.566978,-4.544557,9.781460,9.579705,-4.630588,-8.565783,-8.042179,5.143615,-1.839177,5.644531,-3.274743,-2.968608,1.866314,6.669296,3.425255,-6.766287,1.696905,-2.333791,1.495950,-2.112975,2.098852,7.502207,-5.564920,9.003359,-7.032979,-5.882378,6.975283,7.046957,-6.554407,0.299756,3.081906,5.000260,-0.094808,-3.174890,1.491559,4.654658,0.664821,-8.277482,-1.506225,-6.444282,-5.663894,5.503618,-2.135483,-9.838844,2.661891,-5.629138,-3.696422,4.388701,0.012896,-0.807908,7.100778,-4.629184,-1.074852,-9.733944,-4.134750,7.803304,-4.958243,-0.335953,1.351993,1.516449,-1.528182,-7.108499,-3.062781,6.149552,5.778954,-3.255297,-9.401677,6.642677,-7.151249,3.817821,0.391585,0.271198,4.119331,-5.287570,4.592229,7.733481,5.577902,-1.357943,-3.712209,8.242403,6.354422,-4.437643,-0.775751,-3.809312,7.005743,6.985085,-6.635584,-2.148182,3.394093,4.724908,0.569824,-7.138695,-1.484768,-6.419557,9.319271,-1.912099,4.211907,-9.121594,-3.231090,-2.820918,-7.231409,-3.512076,3.860742,-0.424354,1.392793,6.265321,-6.085870,7.913072,-7.848668,3.153346,-2.962892,-3.408605,-6.208100,5.092040,4.294348,6.337869,-8.345600,-2.372543,-9.822478,-5.043978,-3.934119,-6.791885,8.891913,0.869869,1.139621,9.099785,-3.683814,-3.696173,-3.124680,-7.674905,8.240502,5.561754,7.503119,8.600825,-7.013592,-6.731170,0.593401,-6.400132,-7.075579,-8.420587,-3.506779,1.627637,9.694256,-3.696981,-5.384554,2.203942,-6.292533,3.464221,0.459996,2.845713,-9.176950,-7.670391,9.003413,-0.357216,4.497373,5.341963,4.910794,-5.759627,-9.359626,-7.140142,3.156047,3.488234,3.924965,-8.289519,3.260665,-3.352969,5.696292,-3.357189,1.052012,-7.321371,3.676103,4.321636,0.917945,-1.877853,-1.933782,-8.616562,-2.131911,0.498021,-8.044247,-8.281492,5.785157,8.826122,-8.033704,5.752008,-7.789389,-2.920707,-1.212337,-9.247354,7.891889,8.440218,-6.230111,-7.236939,2.211030,-3.534568,8.893584,-8.901644,2.939055,7.739302,1.995955,-6.823489,-0.357206,7.876696,-8.294028,-3.560600,-8.995878], dtype = "float32")#candidate|183|(1690,)|const|float32
call_182 = relay.TupleGetItem(func_92_call(relay.reshape(const_183.astype('float32'), [13, 10, 13])), 0)
call_184 = relay.TupleGetItem(func_94_call(relay.reshape(const_183.astype('float32'), [13, 10, 13])), 0)
output = relay.Tuple([bop_168,uop_172,call_182,const_183,])
output2 = relay.Tuple([bop_168,uop_172,call_184,const_183,])
func_191 = relay.Function([var_167,], output)
mod['func_191'] = func_191
mod = relay.transform.InferType()(mod)
mutated_mod['func_191'] = func_191
mutated_mod = relay.transform.InferType()(mutated_mod)
var_192 = relay.var("var_192", dtype = "bool", shape = (12, 3, 16))#candidate|192|(12, 3, 16)|var|bool
func_191_call = mutated_mod.get_global_var('func_191')
call_193 = func_191_call(var_192)
output = call_193
func_194 = relay.Function([var_192], output)
mutated_mod['func_194'] = func_194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_330 = relay.var("var_330", dtype = "float32", shape = (6, 12, 12))#candidate|330|(6, 12, 12)|var|float32
var_331 = relay.var("var_331", dtype = "float32", shape = (6, 12, 12))#candidate|331|(6, 12, 12)|var|float32
bop_332 = relay.mod(var_330.astype('float32'), relay.reshape(var_331.astype('float32'), relay.shape_of(var_330))) # shape=(6, 12, 12)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
const_342 = relay.const(-6.171381, dtype = "float64")#candidate|342|()|const|float64
var_343 = relay.var("var_343", dtype = "float32", shape = (1690,))#candidate|343|(1690,)|var|float32
call_341 = relay.TupleGetItem(func_131_call(relay.reshape(const_342.astype('float64'), []), relay.reshape(var_343.astype('float32'), [1690,]), ), 0)
call_344 = relay.TupleGetItem(func_135_call(relay.reshape(const_342.astype('float64'), []), relay.reshape(var_343.astype('float32'), [1690,]), ), 0)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
call_347 = relay.TupleGetItem(func_131_call(relay.reshape(const_342.astype('float64'), []), relay.reshape(var_343.astype('float32'), [1690,]), ), 2)
call_348 = relay.TupleGetItem(func_135_call(relay.reshape(const_342.astype('float64'), []), relay.reshape(var_343.astype('float32'), [1690,]), ), 2)
output = relay.Tuple([bop_332,call_341,const_342,var_343,call_347,])
output2 = relay.Tuple([bop_332,call_344,const_342,var_343,call_348,])
func_355 = relay.Function([var_330,var_331,var_343,], output)
mod['func_355'] = func_355
mod = relay.transform.InferType()(mod)
var_356 = relay.var("var_356", dtype = "float32", shape = (6, 12, 12))#candidate|356|(6, 12, 12)|var|float32
var_357 = relay.var("var_357", dtype = "float32", shape = (6, 12, 12))#candidate|357|(6, 12, 12)|var|float32
var_358 = relay.var("var_358", dtype = "float32", shape = (1690,))#candidate|358|(1690,)|var|float32
output = func_355(var_356,var_357,var_358,)
func_359 = relay.Function([var_356,var_357,var_358,], output)
mutated_mod['func_359'] = func_359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_448 = relay.var("var_448", dtype = "float32", shape = (10, 3, 4))#candidate|448|(10, 3, 4)|var|float32
const_449 = relay.const([[[5.767498,-9.633102,-4.148938,-5.582652],[-0.092785,8.025443,9.868517,2.980655],[1.363279,4.547768,7.343724,-2.414683]],[[6.575167,-0.312631,2.843992,7.259001],[-9.689798,-9.545726,7.950101,-8.242688],[-3.639908,2.102009,-2.709016,-5.199413]],[[-8.108481,-6.714553,-3.687712,6.584400],[1.521224,1.646407,8.403879,6.906866],[-4.044488,-3.469373,9.304311,7.530616]],[[7.494325,4.844907,2.849270,3.171842],[6.836906,-9.792158,-1.829461,-0.860143],[2.491685,-5.836914,-0.892240,-4.272010]],[[5.313674,-7.931513,-5.912244,4.369360],[-8.391052,7.796800,-6.807542,-5.731242],[-6.911206,3.982844,-3.630533,-2.679020]],[[5.762995,-6.702584,0.575759,5.907758],[0.710208,2.770459,4.060253,3.070062],[8.211186,-4.084106,6.991266,-0.886664]],[[3.801839,-7.666028,7.641388,1.939150],[-2.287631,-9.696071,5.548275,-2.577773],[0.251404,-6.407661,-2.180027,-1.732020]],[[-6.382502,-3.319818,8.670150,-9.984393],[-0.787663,-4.503258,1.295205,2.622642],[6.355934,8.852684,1.173334,-0.574756]],[[6.665579,8.338276,-1.931932,-5.270848],[-2.141784,0.351984,8.525425,-8.973304],[-5.752877,8.984172,7.306499,6.545063]],[[-3.314413,5.540687,7.338888,-8.603158],[-1.577637,-1.544818,6.966951,5.293531],[9.438781,-0.250221,-0.712295,2.584907]]], dtype = "float32")#candidate|449|(10, 3, 4)|const|float32
bop_450 = relay.equal(var_448.astype('bool'), relay.reshape(const_449.astype('bool'), relay.shape_of(var_448))) # shape=(10, 3, 4)
uop_455 = relay.log2(const_449.astype('float32')) # shape=(10, 3, 4)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
var_461 = relay.var("var_461", dtype = "float64", shape = ())#candidate|461|()|var|float64
const_462 = relay.const([-5.336747,-5.893527,-6.827220,-3.799889,-0.603900,9.972173,5.678509,8.631493,4.644432,4.851896,4.556321,1.388378,-2.915131,-1.723652,8.731084,-2.902283,0.964888,-3.331325,5.216879,4.561826,-3.266351,-8.394367,-9.341445,-0.345331,9.359966,7.723787,-7.876387,0.418705,2.203901,-1.476325,-1.232285,-0.949383,7.554388,3.864000,-5.774939,-8.624473,0.687176,-6.187104,-6.656862,4.713888,-5.731047,-1.631682,0.035609,0.822279,3.998303,9.937431,-6.094572,-6.657137,-4.535131,2.546127,-5.226322,5.888216,-4.303221,3.356039,-3.074284,-6.876947,6.759839,2.130492,-0.282715,4.462865,-6.283832,2.338834,4.587085,-2.727056,7.035159,-5.640731,3.553318,5.264997,4.393724,4.446218,2.520889,-1.537164,-4.354134,9.934454,-9.360875,3.740973,9.817979,-5.463311,-6.792064,-1.141595,-0.655322,5.182315,-2.078532,2.463709,6.946098,-5.501388,-4.396906,4.120064,-1.208392,1.023383,-6.086269,-7.700336,-1.472415,-2.911210,1.547412,-8.559874,7.024190,-2.799543,7.327774,1.111135,-7.651933,6.149371,-5.709894,3.965434,-5.431775,6.636161,7.925414,-6.950514,-6.461468,-7.158161,-5.282691,3.930389,-4.973432,9.073062,9.862878,-9.688074,-5.276979,-2.124831,1.261118,-6.320520,4.890255,-1.087742,0.850735,-2.137631,1.671851,9.976813,4.744913,2.356273,-3.953113,4.138782,3.718160,5.445544,-0.795606,-9.197722,-6.538645,4.684078,-6.238846,-1.982123,-0.990657,-9.664605,-8.516929,6.927843,-0.378755,7.621419,-6.062986,6.868908,2.134559,3.305576,-1.229334,6.087287,-4.771228,-9.258848,-7.712487,-9.437737,1.703174,-9.261039,9.823350,-1.744208,-2.914750,-6.700260,-5.899958,-8.033056,9.473182,7.138137,1.167254,-8.124537,5.258560,-8.095267,7.873884,3.736789,3.730880,-2.104897,9.463811,4.175033,7.805556,-4.218401,0.210157,0.165971,1.882827,-6.316677,2.779457,-4.258795,-6.832651,-4.775010,-3.598280,-4.216975,4.807094,-4.896231,2.231107,-9.861645,4.778405,6.345231,6.412351,9.387609,6.496332,2.170059,-6.847242,-5.402462,-1.886511,4.264183,-9.937596,5.506752,-7.942348,-4.391682,0.732448,-8.467049,-1.705783,2.129921,-9.004202,-8.715360,-9.647944,-7.273352,0.526401,2.140256,1.369493,-9.421665,8.256746,5.339656,4.386651,2.739769,-8.485601,-8.832557,5.158963,-5.981850,-7.292399,-7.609908,-2.974145,-7.244071,6.545868,-9.392433,-5.819982,-6.384261,-0.882662,4.513207,2.590697,-3.250498,8.442311,-5.515012,-1.376499,-6.738363,6.008085,2.558419,-5.419750,-8.479040,-8.833531,-6.574925,3.205447,-4.229672,0.085346,-0.789641,-1.957290,-6.846996,2.504449,6.831015,-3.415620,-0.930175,-7.198361,5.246119,6.541221,-5.744300,-3.693731,-2.210518,1.170403,0.984346,1.600013,1.681179,-5.061802,4.975411,8.424831,4.604840,-0.149027,7.965652,-8.933863,5.425135,-1.884427,2.974796,3.245763,5.300827,-5.382419,7.498635,-1.808481,9.402620,-7.075553,-8.091056,0.410505,3.093227,3.679168,-9.991442,-6.308196,-1.145930,1.707515,4.693311,9.880263,8.786350,-3.427220,8.875467,-8.047469,0.457857,3.319518,-0.758400,-1.206574,0.219018,-0.028452,9.723693,5.834269,-5.019178,0.429809,1.411622,-8.932850,-0.953501,1.845383,9.629766,-5.698168,9.953585,-9.500246,9.218009,5.006417,-9.775846,-3.176250,-9.481277,7.452002,2.577282,9.499182,-2.437519,5.922888,-2.071378,-9.042426,-0.543254,-3.829467,6.057486,6.636796,6.026146,3.368240,2.348030,3.164525,0.370913,-5.193299,6.231490,-4.457523,7.267188,-9.978417,-2.636945,8.123573,-5.481794,-0.378041,-3.147960,-3.790022,0.567394,5.703197,4.844559,-8.147364,-8.374661,7.219356,-2.293007,4.053293,-5.829171,7.525035,-3.143670,3.563235,6.851703,-0.356500,-1.209913,4.447195,-8.040566,-2.598930,-5.645802,9.531575,7.427284,-0.845631,-8.357526,8.617096,-3.302274,3.349261,0.436025,2.549173,2.217288,-9.040748,-4.427841,8.286045,-8.583902,-2.793493,-8.419221,4.712256,5.365597,-0.643551,0.740823,-3.772466,-7.919905,9.671113,-8.896469,-4.862377,-0.131546,3.755494,8.092645,-5.960369,-3.634946,-6.865936,-9.520708,-7.214266,0.055420,0.806060,-3.545354,-2.357653,9.021292,-7.759143,-4.931353,9.001052,8.826761,1.925531,0.644666,3.235165,1.009486,1.174678,3.993269,5.288969,-9.462773,-1.641005,-7.030007,9.896445,-5.325816,8.029716,4.269215,8.529043,-9.771539,9.523440,-9.401088,4.344343,-6.162140,5.779028,4.450943,-6.826081,6.828206,-1.193655,-4.671779,-1.965389,-4.624034,9.928867,-6.047375,-4.381511,-8.873528,9.346515,-2.145015,-3.361244,7.748472,7.472223,-5.571812,-4.835073,-0.375132,9.991989,-6.608661,5.288333,4.132300,-0.254817,1.241163,-1.864301,-5.698782,6.747190,7.424116,2.671603,4.185534,5.440134,4.169366,-8.073690,-2.624359,-4.679984,3.632002,1.837640,-2.784561,-4.409796,4.942436,0.443278,-4.699870,-9.460711,-2.926757,-4.271896,-7.278442,4.074232,7.462710,2.508435,7.403679,5.902877,6.466580,-1.020141,-5.227313,-1.854476,2.613266,-0.966057,-9.216771,2.825378,-2.429209,-9.938327,5.707248,-6.350257,0.069021,9.249325,0.691332,0.115646,1.515570,2.065401,5.022942,6.178371,0.037909,-2.252560,7.477175,7.528827,-0.443982,-7.998993,9.215649,-7.798826,0.267472,-2.001355,-0.190447,4.869527,6.433948,-8.187910,-0.264706,0.540155,7.823936,2.041636,-6.757458,-0.281947,5.714511,-4.956482,-1.164789,9.619903,-0.681527,-0.809289,-7.591356,6.367772,-9.688152,-7.413917,7.243530,1.677301,9.223263,4.353070,3.965600,-4.715015,4.517293,0.996953,-3.198977,3.325996,-5.068263,0.813486,3.398008,-1.145597,-2.659013,2.497841,2.460566,-8.211885,8.343973,-6.783484,-9.098466,3.078331,4.888004,5.291383,-5.410063,7.588216,-3.859734,8.775365,8.813991,-2.767224,-6.491146,4.716030,-4.389483,-6.343863,-3.718733,-8.075253,-9.624146,-6.960487,-4.175364,3.318579,-3.651651,-6.229365,2.699686,-3.329632,9.941157,5.430809,-5.546710,5.199835,-5.248290,5.727669,-9.166699,0.855781,2.036222,8.984801,8.574458,-7.279041,5.695960,5.320227,-5.005479,9.535300,-9.517035,6.913419,2.301683,5.863867,1.845307,-7.114976,-7.556799,-0.398536,7.532998,3.448168,-9.205799,-1.153499,-0.334341,-3.337965,-5.267833,9.974260,-1.038613,8.807287,5.964158,-3.307034,5.328075,3.804338,-8.613398,-6.353285,2.645416,5.202786,8.658999,2.002338,7.654848,1.913102,5.750048,-6.437248,1.730184,5.936656,-2.796724,6.946203,6.229664,8.053053,-3.719340,2.700991,8.017679,5.750859,2.140235,6.653661,1.468712,-4.501300,7.153178,-2.277584,-9.436310,4.198084,3.533061,9.136332,4.511266,0.721124,-7.275210,0.278711,2.487762,-9.807349,3.813148,6.863545,-6.091420,1.981506,-3.542935,5.407586,-7.444913,7.932453,3.245095,-2.070834,7.936608,0.591885,-3.672989,1.098709,1.574576,-3.408888,9.889740,6.727867,0.332684,4.926141,7.086355,0.596762,-8.339536,0.135716,0.686925,-3.076237,4.849244,-7.304099,6.686227,4.358358,4.701657,0.643123,8.602108,2.608421,-8.650571,-1.205363,5.045940,5.443145,-3.176900,0.313639,-1.678449,-9.441764,8.701288,0.766668,9.425497,-2.118331,4.555243,7.513394,-6.975750,2.065467,-5.485265,-4.723463,7.352414,2.520057,9.385598,2.820114,-0.574843,6.102449,-4.621487,-6.209810,-3.891692,3.031660,1.650413,-7.187983,1.291322,-4.029206,-7.150693,7.076661,-8.133355,1.472699,6.001461,2.463984,4.064676,-6.306387,4.866432,4.602460,7.194184,6.433018,1.352110,-5.330196,-3.937702,-1.377135,-4.107897,-6.170736,-4.378271,-4.770119,5.075874,-6.261692,-4.788416,-9.005567,5.415361,6.335374,-0.060929,0.077061,1.844962,-4.818515,-7.856191,-5.460950,-9.160827,6.194592,-8.772530,3.527619,8.339750,-6.433310,-6.378352,-1.554284,-3.200837,-4.788791,-6.119042,2.577865,2.391243,5.812328,-6.007040,-6.235033,8.140806,-5.908165,1.183357,7.683171,1.736386,3.599181,-2.668353,8.734858,0.208179,-0.082995,-1.457238,0.535217,0.621217,4.437056,-8.314199,5.723056,-5.401942,-9.431276,3.267655,-3.096276,0.714320,-6.359598,0.614707,4.242792,5.676428,7.153884,7.710935,0.843516,5.462501,-0.824552,5.952811,2.356770,7.185802,1.656664,4.267670,4.394241,2.888093,2.354023,-7.661958,-2.638119,-1.430043,3.653349,-2.594556,-9.945253,4.151016,-2.829005,-2.605325,-1.945333,7.482925,-6.985070,-0.224965,0.373924,6.199192,-9.976326,1.190447,9.570546,-1.894437,6.605373,-0.614785,5.217420,7.737107,-1.764109,7.682355,1.556855,-5.715724,-9.701110,-8.033729,4.174018,-4.963835,0.151929,-5.227642,4.581646,2.414921,0.956154,-1.908248,6.783741,-6.173884,-1.794985,1.977089,-0.695737,0.423481,-1.040056,2.255000,-8.115764,2.503456,0.400619,-8.396619,8.462647,-7.751980,6.338710,5.691835,-4.451675,-8.756584,9.842961,-4.507118,-3.240380,-9.782756,7.095202,-2.409803,8.587195,0.212872,9.269121,0.098642,8.506332,0.583716,1.867568,-8.963940,2.156676,-4.932384,-0.036671,-2.793149,-2.658579,7.478824,-2.824178,9.651748,5.610492,5.839740,5.790961,7.660477,-7.424905,3.203101,5.012270,4.479231,2.626560,-8.850807,-6.621092,-8.214788,7.270254,8.903424,8.042565,-0.892424,9.930585,9.848865,-3.895523,-0.244902,9.420199,-6.222777,9.166763,6.449328,2.666888,-9.792585,1.404908,0.019318,-8.681477,-9.499607,8.847043,-2.385656,-2.367115,9.406671,4.872011,5.874698,-2.145224,5.426907,8.341643,-0.087237,-3.249459,8.335682,8.803231,5.111571,1.837259,3.281838,-5.919619,9.027868,1.773451,2.120225,-4.591376,8.076628,4.699744,-9.454332,-1.398656,7.721739,3.819127,-5.086102,6.825492,-3.483772,6.129402,-9.120514,-7.114669,8.492782,-3.697961,-5.630756,2.257652,4.606197,-8.868054,-1.445860,-4.670367,-8.982674,-3.709630,-2.722240,-0.997973,-8.614609,-0.693588,8.852237,-7.830771,-5.501498,3.705663,-4.967855,4.217570,3.111974,8.226805,-1.784471,-2.810761,-7.150878,4.463335,-2.578214,6.876875,9.471838,1.205800,-6.207414,8.006143,3.435482,3.967229,-0.953002,7.993870,5.913766,0.087744,7.240870,-8.091912,-1.798854,-1.431161,4.603284,4.361095,-9.758173,8.915581,-5.258001,9.534642,4.246366,9.698430,9.538531,-9.491634,-3.349705,-2.081874,8.927903,5.911448,-0.762577,-5.931396,5.440763,1.284916,3.510059,7.528905,1.516494,6.347290,3.803660,-9.179306,6.403164,2.704315,-1.616413,2.932526,-4.199588,7.057324,3.258644,-8.171715,3.620813,-5.172941,-2.455873,4.849025,-4.513116,7.489481,5.474954,9.585359,-6.456530,-9.337094,-3.443561,-6.463727,-4.348540,-7.122177,4.542091,7.481369,-0.739971,5.508942,1.422395,-9.817393,9.736844,0.780941,-4.892868,-8.121625,-9.732370,8.766460,-1.302641,5.727285,-7.127755,-6.672911,4.233859,-7.593252,6.360725,-4.662936,-6.619913,2.347971,-8.642252,7.823467,9.198105,5.217608,-9.685387,-9.674447,-6.960213,-5.045486,6.865512,1.303978,-4.450994,-5.226350,4.079331,-1.781844,-3.489300,-6.762253,-2.179526,0.557094,4.244367,2.025098,6.399320,-1.279748,-3.757250,-9.853346,-3.869614,-2.274131,-8.635913,-7.800021,6.521701,5.198044,-5.847738,0.761248,7.618377,-7.558431,6.990399,1.754901,-0.704045,6.247972,-6.843052,-2.494567,0.827908,3.384244,-5.586447,0.648386,-6.421066,2.689343,-7.880915,7.426226,1.549533,-4.039061,-9.165740,7.707055,-4.201421,6.098362,7.103499,7.962230,-5.127783,-8.921155,-6.223095,-8.367530,-8.327527,-9.118891,-6.622445,1.392106,5.238336,1.788764,0.894260,-5.555194,5.168183,-3.437886,-8.461344,9.619835,-0.277690,9.216613,8.416775,9.927735,3.238731,7.273525,2.390131,9.877629,-2.193658,-5.447757,1.311435,6.704526,-7.890961,5.596162,4.387961,1.120733,-1.218370,2.087268,9.917812,-8.304388,-9.111132,-7.760101,-5.002051,-2.074256,-8.353761,-6.810002,-4.692028,-1.417985,1.642418,8.601369,-5.672085,-8.750096,7.917266,6.421523,-6.214996,3.027116,4.964349,-2.737716,6.807626,-0.086520,-3.956637,0.541370,0.738056,7.027766,-5.798871,5.002638,-7.978010,2.694352,2.114456,-7.709197,-5.970387,-4.825341,2.179758,2.233655,-6.497678,7.545803,-8.919252,5.991939,-9.394908,-4.490716,9.802414,-9.406737,1.487171,6.718808,-8.983599,-7.144200,1.798079,-8.578962,-7.361079,4.734520,0.487351,4.681382,6.722511,1.076687,5.391368,-4.698674,-3.373597,-5.975312,0.991549,-6.972590,5.108421,-5.098757,-5.694252,-2.436805,3.692173,0.598100,-7.525864,-4.394033,3.778393,2.739737,-9.899653,6.982580,-3.023934,-2.357100,7.291387,5.325098,-2.935069,5.804330,-4.938325,8.308571,3.862273,8.374602,3.691537,9.389890,7.819835,8.978531,1.191800,-6.923601,7.852658,8.452607,-1.449640,8.358630,-7.449992,5.471122,-9.651056,-0.060496,4.701905,5.976452,-5.292105,6.767607,-3.693661,8.447609,1.697435,8.180562,-5.026156,0.591047,-5.045519,4.177643,5.861424,5.680555,4.937030,5.950467,8.728182,5.657017,5.716719,-1.538371,-2.426823,9.923330,2.567292,-3.300422,4.313632,-7.781631,-5.751528,2.277796,-3.990214,-2.410968,-0.533792,-4.700217,-1.589050,7.780901,-8.034805,7.694103,4.676730,-2.474930,-6.174557,6.565864,-6.839364,7.730267,7.979337,-0.389151,2.772823,-5.730997,-9.680862,-9.111799,-3.177853,1.035123,3.018561,4.608142,8.473444,1.321476,-6.648235,-2.678120,7.711744,-6.287028,-0.614484,-6.545222,3.341998,2.093653,-4.455241,-7.834928,-7.929735,6.623164,1.703830,-8.012401,3.813011,-6.813307,-7.941354,-4.455070,-6.787848,0.822834,-3.723587,-5.431004,-0.343215,4.317465,7.991037,1.226431,7.303996,9.818317,-8.906119,-2.912685,-1.742906,8.004465,0.262021,-3.961811,-9.343768,-2.002049,4.949319,-8.115517,-1.551465,-7.983296,-5.667353,3.190897,1.564870,-0.218837,8.829151,8.252765,7.515053,-9.181161,-6.716856,-4.396059,-8.767083,3.626607,7.988990,7.007672,-7.744356,-9.608710,-9.736235,-5.966551,-3.242740,2.896334,4.931344,8.836726,0.714388,1.759120,-9.917994,1.527988,-6.536698,5.316575,-7.333776,-5.958706,-1.246258,2.642931,-3.633530,-4.527629,-8.545390,-4.285077,-6.721607,-9.103245,-5.791850,-5.029837,5.274476,8.277339,-4.570479,-7.777047,-9.541713,2.188997,4.578511,9.326020,9.312940,-8.532807,2.680681,7.650551,8.230173,9.370591,-4.845715,-4.669472,8.567961,9.308153,-3.484580,0.888300,-2.319427,-5.677090,9.488819,-2.381051,4.981823,7.028358,0.959592,3.613869,-6.637365,-8.087643,-0.821784,1.322618,5.487711,7.326504,-1.454934,-0.467128,-8.677659,-1.901451,-3.183438,-6.375020,9.824023,-7.035985,-6.683151,8.750650,-9.809422,2.855338,6.572485,4.652832,-5.963496,-8.449702,5.651882,3.817523,8.923345,8.822972,-4.051738,-9.489246,9.104731,4.516550,-6.663268,6.122853,-0.958497,8.185197,7.159454,-5.508649,6.697856,-0.574332,3.570397,-7.912406,1.669733,-5.635958,7.325573,3.221773,4.657918,7.367218,-6.411295,8.812810,5.244170,-0.661039,0.848611,-5.542407,6.745684,8.827929,4.109434,-4.742195,5.624218,-6.461648,8.817148,-5.149411,-3.033157,-0.957603,-4.292878,-8.687428,-9.937544,-2.640085,4.735659,-9.296085,6.140374,-5.923786,-6.310166,9.171430,1.459832,-2.542827,1.793797,-4.796214,-9.669727,-0.690833,-6.273442,5.312467,2.118405,-4.761973,-9.055140,-2.586559,-9.482023,-8.479619,8.745346,-8.892081,-6.035871,5.771008,3.072597,2.280563,-8.315234,-7.417641,-1.662828,5.346679,3.869654,9.397596,-8.261438,1.136482,-0.078832,7.982328,5.578361,-8.225368,1.786432,-3.679535,3.802372,-5.922632,7.578603,-7.025685,-1.405113,-5.763848,4.009987,-1.946030,8.898979,-0.753546,1.248286,4.810979,-8.200896,-3.150275,6.115673,-5.340735,0.515602,-3.143384,-1.709374,-5.280096,-8.585504,-7.797798,-3.360369,9.466776,4.601312,9.056923,-1.846185,4.829559,4.920996,-2.841361,-4.719532,2.081626,1.046958,9.262042,4.453072,9.446889,-8.631288,0.957405,-5.629587,-7.165725,0.305028,-1.938261,-6.139479,-1.689564,-5.780673,-7.041402,0.587243,-1.892203,7.151299,-6.601865,0.319859,-8.827032,-9.663146,8.401446,-7.674491,-9.058865,6.822347,4.212160,-6.009848,7.724895,-9.858903,-8.893876,-1.114161,0.547184,-1.522368,-9.937014,9.007268,0.674473,-5.487174,-7.101962,-4.600615,-4.256758,9.141139,0.981604,1.894435,-1.830474,-6.975619,-3.391233,4.563522,-1.401549,7.377154,-0.552637,7.378832,-8.574566,-7.430708,-6.715419,7.837363,-9.589153,4.544273,8.592900,4.236772,-1.939816,-1.070419,-2.815569,-3.549658,4.547770,6.215679,-2.965253,2.768162,-7.039082,8.519013,-5.084010,-4.177461,-2.145458,-7.997524,-5.325905,1.746131,6.653398,8.144576,-5.765249,-0.051607,-0.578325,4.544093,-0.837858,3.447391,-5.159094,5.725811,-6.384374,8.230350,9.526334,-2.481903,1.511630,4.217647,5.619004,-3.390265,-2.496005,0.470787,-3.208255,-8.240528,1.050485,-5.759050,-7.964206,-7.889943,0.672433,5.143520,6.065669,-1.518348,-8.351006,1.178805,1.379589,1.124964,-5.012551,-5.185615,1.762169,9.304095,-2.122354,-1.611123,5.076298,8.583626,-2.545792,-7.300591,-6.817994,5.212637,-2.119111,-5.242473,-6.220160,3.634858,-3.115604,-5.072251,-1.134722,-5.455224,0.033610,-1.850874,8.331130,8.941269,-2.061545,1.271167,-9.987609,0.890492,3.804303,-8.423720,8.072731,-0.985005,7.572797,3.655974,-6.002824,2.305637,-4.202237,8.097593,7.386933,-3.708802,-1.969828,3.030757], dtype = "float32")#candidate|462|(1690,)|const|float32
call_460 = relay.TupleGetItem(func_131_call(relay.reshape(var_461.astype('float64'), []), relay.reshape(const_462.astype('float32'), [1690,]), ), 1)
call_463 = relay.TupleGetItem(func_135_call(relay.reshape(var_461.astype('float64'), []), relay.reshape(const_462.astype('float32'), [1690,]), ), 1)
func_191_call = mod.get_global_var('func_191')
func_194_call = mutated_mod.get_global_var('func_194')
var_466 = relay.var("var_466", dtype = "bool", shape = (1, 576))#candidate|466|(1, 576)|var|bool
call_465 = relay.TupleGetItem(func_191_call(relay.reshape(var_466.astype('bool'), [12, 3, 16])), 0)
call_467 = relay.TupleGetItem(func_194_call(relay.reshape(var_466.astype('bool'), [12, 3, 16])), 0)
uop_469 = relay.acos(uop_455.astype('float32')) # shape=(10, 3, 4)
output = relay.Tuple([bop_450,call_460,var_461,const_462,call_465,var_466,uop_469,])
output2 = relay.Tuple([bop_450,call_463,var_461,const_462,call_467,var_466,uop_469,])
func_480 = relay.Function([var_448,var_461,var_466,], output)
mod['func_480'] = func_480
mod = relay.transform.InferType()(mod)
mutated_mod['func_480'] = func_480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_480_call = mutated_mod.get_global_var('func_480')
var_482 = relay.var("var_482", dtype = "float32", shape = (10, 3, 4))#candidate|482|(10, 3, 4)|var|float32
var_483 = relay.var("var_483", dtype = "float64", shape = ())#candidate|483|()|var|float64
var_484 = relay.var("var_484", dtype = "bool", shape = (1, 576))#candidate|484|(1, 576)|var|bool
call_481 = func_480_call(var_482,var_483,var_484,)
output = call_481
func_485 = relay.Function([var_482,var_483,var_484,], output)
mutated_mod['func_485'] = func_485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_541 = relay.var("var_541", dtype = "int16", shape = (11, 2, 4))#candidate|541|(11, 2, 4)|var|int16
const_542 = relay.const([[[8,-2,-9,4],[-2,-1,-8,-2]],[[-6,7,7,3],[-1,5,1,-9]],[[-3,-5,-1,-6],[-10,10,5,1]],[[6,-7,9,-7],[8,-6,-1,-9]],[[-7,-9,-5,-3],[-4,-5,6,10]],[[-5,5,6,6],[3,-4,6,1]],[[10,-4,-8,4],[-2,1,-4,-10]],[[-10,6,-6,-2],[4,-3,1,-6]],[[5,10,6,7],[10,6,1,-6]],[[2,8,4,-6],[8,-9,-5,-4]],[[4,6,-5,-8],[1,10,3,-4]]], dtype = "int16")#candidate|542|(11, 2, 4)|const|int16
bop_543 = relay.right_shift(var_541.astype('int16'), relay.reshape(const_542.astype('int16'), relay.shape_of(var_541))) # shape=(11, 2, 4)
output = bop_543
output2 = bop_543
func_547 = relay.Function([var_541,], output)
mod['func_547'] = func_547
mod = relay.transform.InferType()(mod)
mutated_mod['func_547'] = func_547
mutated_mod = relay.transform.InferType()(mutated_mod)
var_548 = relay.var("var_548", dtype = "int16", shape = (11, 2, 4))#candidate|548|(11, 2, 4)|var|int16
func_547_call = mutated_mod.get_global_var('func_547')
call_549 = func_547_call(var_548)
output = call_549
func_550 = relay.Function([var_548], output)
mutated_mod['func_550'] = func_550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1398 = relay.var("var_1398", dtype = "float64", shape = (12, 14, 12))#candidate|1398|(12, 14, 12)|var|float64
uop_1399 = relay.sinh(var_1398.astype('float64')) # shape=(12, 14, 12)
func_355_call = mod.get_global_var('func_355')
func_359_call = mutated_mod.get_global_var('func_359')
const_1415 = relay.const([5.590092,3.342453,-5.344031,2.248916,4.216583,-0.307081,5.177741,-9.092656,0.584696,-1.645661,-9.271542,-4.685667,-5.032111,-2.741973,1.282072,-1.305586,-5.701150,2.998583,-7.380733,-2.864184,5.222094,8.606850,6.398450,6.689120,2.063871,-5.664610,-0.740573,-8.154369,8.568653,1.457626,1.455187,9.976408,3.040999,-3.453079,5.303586,4.590908,0.492742,5.421537,3.605561,0.292541,-2.541411,-7.516952,6.395817,-9.364825,2.771033,5.522138,9.778513,-9.836934,-0.862770,-1.458552,1.583914,-0.661763,-9.322581,-9.908132,6.430728,-5.866650,4.745968,-5.367936,-8.984802,1.067514,-9.984850,-4.941907,8.469346,-6.808293,9.113967,-1.581204,0.625840,-4.350458,-8.867212,5.996899,-6.125968,-5.775024,-6.729654,-9.004294,5.877606,-4.622498,6.096975,3.901542,-0.454990,-8.935446,-7.340377,-4.987847,7.320523,3.580071,9.814914,3.171173,5.520397,-2.295961,1.283187,-3.436172,-2.669023,-9.047654,9.868991,5.551251,-8.601147,3.198941,-8.344659,-1.491572,-2.004304,6.331280,-9.737310,-3.086668,-8.904419,0.579125,9.841095,-1.590126,-4.579713,9.512098,-6.642588,0.785646,-3.476178,1.982344,3.572048,1.353676,-3.044427,2.455085,6.693791,-0.536491,-1.993144,6.436591,1.511868,-1.029520,9.505929,9.074116,-8.731052,-8.564365,2.282584,7.104506,3.446099,0.358600,7.302629,-7.738562,-8.177571,2.920121,-4.468815,-9.525374,-4.154524,5.626834,6.020207,-1.366277,-5.579241,-3.605254,-2.162426,-5.344999,-2.974513,1.001470,-6.091034,9.328595,-0.593997,-9.488772,9.229817,-9.142541,4.893918,3.787623,-2.571293,-3.621160,-7.306834,4.109595,-6.292183,-2.382780,3.510939,-4.870049,0.033122,-2.568491,-9.333081,-0.106268,5.529814,-7.807316,4.689722,8.758070,6.586927,-8.278062,3.393511,-4.525943,2.840498,-7.716420,0.759722,-4.760715,-7.560223,-1.001465,4.268419,1.206593,-0.264838,2.307241,8.318984,2.978334,-1.984848,0.884430,1.581757,4.210198,-1.354615,0.435955,8.616747,4.689018,-9.943825,-0.784764,-3.892985,9.929182,9.791733,-2.786347,2.168457,9.880788,5.305504,7.370128,1.907425,3.246920,5.061553,3.004508,7.410020,-5.114183,-7.936818,1.624780,-3.300095,6.637504,-7.802323,0.163958,-6.877958,9.271858,6.426510,-5.764796,-4.464730,-2.397911,0.955488,-6.914476,-8.407646,-0.929462,0.858981,-9.170967,-9.174972,-7.734410,7.941102,8.247822,-5.892358,-7.404901,7.560495,-1.322963,-1.958762,2.154505,-9.263041,-9.319311,7.924226,-9.770565,2.265361,-8.773887,-8.680370,-0.611812,-9.603854,0.752994,-6.658675,-8.623941,0.423434,4.488304,-9.062477,1.900286,-1.451630,0.240755,-6.841463,3.876909,-9.588214,-2.949055,-0.443748,1.064137,-5.555337,9.052963,-6.595582,-6.315747,5.234015,5.279999,5.496766,-4.489735,2.050429,4.159306,8.343422,5.843365,-7.339091,8.230201,-5.268708,-3.151194,7.825819,6.904310,4.945662,1.395734,-7.842804,-3.777809,7.078212,3.178339,4.634741,6.331020,0.525907,-9.628101,-5.226445,-2.014903,-2.293850,0.978342,1.280424,9.075261,-0.375600,1.097023,-2.876582,-1.250806,-4.378297,-0.621280,-0.427365,5.519474,-4.450187,-6.333739,2.226565,4.870057,3.772981,0.444503,3.010630,3.572615,-3.690208,-0.939004,7.402318,-5.592695,9.020760,9.085596,-9.018851,5.539837,-8.109983,3.693890,9.917920,-9.420991,4.241540,3.832623,-0.893619,1.061384,1.637733,5.076218,-9.805455,-4.991957,-8.212815,-3.604063,-4.038434,2.781868,1.147209,-6.614207,3.723845,2.394288,8.045103,-9.035476,7.483742,-1.993567,2.003525,1.302061,2.076011,1.154474,6.841748,1.885148,-6.164519,2.456483,7.538319,-3.211819,-2.064164,-4.548048,-3.598684,9.141979,-9.424294,-6.654816,-5.684862,7.908907,3.751804,6.456782,-1.998175,3.105831,-6.438264,-9.384956,-1.179556,-8.094031,-4.781187,-4.087939,4.284735,6.198859,2.413652,-5.326210,8.712734,-2.319814,-0.468505,-7.944717,-3.119991,6.118488,-6.730477,-0.063191,-2.993037,0.167962,3.789246,8.057524,5.513070,-2.525895,-2.079109,-2.314612,4.018257,4.829284,2.586905,-6.461083,2.704038,-3.844965,-1.682283,-0.222313,1.093906,9.936989,-2.725089,-7.578451,2.457146,-7.715764,9.853922,-2.824032,8.661403,-7.081173,4.189511,-5.021758,3.522124,-4.229429,-1.394348,-4.986368,-2.303794,-1.391231,0.009659,-5.220085,-1.428598,-2.783107,-9.113226,-6.252733,-7.656522,-8.776350,1.823604,-0.841066,7.488728,-5.401615,-7.496895,9.531219,3.950368,2.627920,-6.609226,1.754594,-2.213365,-7.401763,-3.126297,2.557559,-8.128396,-3.921751,-6.787992,-4.569184,6.236713,7.541107,2.212692,-7.600706,4.789141,9.114296,-7.775581,-3.405457,7.590344,3.692514,4.111748,-7.540847,-5.270526,5.388649,-8.677847,-9.619180,4.674112,4.062591,-9.914737,7.408982,4.735767,-6.134970,1.492964,-9.387862,3.135146,7.076382,-2.157704,-2.640367,-4.368552,-4.341230,2.019245,8.380629,-2.583607,-2.056877,-0.619075,-9.804625,-3.003528,4.844178,4.334155,-4.777828,7.896306,8.051034,-8.797867,-4.116957,-0.452772,2.827604,1.147033,-7.788628,2.194450,5.093849,-6.607259,4.537849,-8.115624,-4.587281,-3.641099,-8.761309,-2.738150,-2.636899,-4.927206,-5.222515,5.070614,-1.369793,-6.451020,-5.760710,0.995387,3.191410,-8.308474,9.671847,-8.355529,-4.944343,-3.331109,-9.978863,2.092530,7.403522,-5.729221,-1.252237,3.991239,-9.735135,2.559656,2.524824,-2.882369,-9.887827,1.908693,3.572555,1.278306,8.728267,7.280328,7.758143,-8.240779,-3.592174,-1.845082,-7.868429,5.557795,0.622463,3.194739,-8.355060,0.497339,-1.305937,-0.714430,-4.156799,-9.099786,1.952481,-2.576543,-1.126726,-8.409268,6.752227,6.444960,-7.883477,-4.361566,8.831263,8.910734,-5.679243,-7.247430,4.384522,-8.885216,-7.558202,2.458347,-6.640257,-0.249994,-7.195777,2.818176,4.327904,4.379828,-3.107063,1.536080,-9.203147,7.976121,-8.298720,8.419984,-2.237297,0.065412,-1.186757,-8.942120,-0.442761,0.528768,9.489585,-1.801663,8.782868,5.969880,-5.840330,7.207669,4.163171,6.603055,-4.761376,2.125972,-3.599213,-7.217201,-1.686307,-4.325379,4.394989,3.090043,-3.286694,-4.152461,-1.632418,8.665423,-7.798343,7.622863,5.960598,0.327610,5.460805,-7.413858,-9.777013,3.548227,-1.278347,2.219480,5.844124,-4.798171,5.847070,-3.205443,-3.118267,-4.933972,-3.458870,-5.088925,-2.429619,-8.436926,8.708985,9.967815,9.216363,-9.794326,-7.372132,8.293652,-5.227211,-7.691122,-6.749727,6.326124,-2.365162,-6.288048,9.150477,5.327292,-7.979245,-9.670405,-5.522840,0.119533,-1.114703,3.342586,-0.113112,-1.821410,2.956016,-6.791711,5.777112,-7.766353,9.964447,0.112728,-8.471642,-6.675098,-0.557690,-4.516647,-6.799407,-6.135507,3.286551,-7.581152,-0.513574,-0.938660,4.233610,-1.410281,0.319974,-5.479833,9.677054,4.765855,-5.181692,-4.887429,-5.357343,-1.856292,1.658456,9.177140,-8.857098,-7.801487,2.094031,-8.804121,0.901236,6.522540,-9.375448,0.377668,1.704074,0.896805,-8.287797,-8.271094,-8.215768,1.773382,0.565766,-4.781850,-7.392340,9.814928,5.325460,-9.650677,-8.720084,8.988542,-7.853882,-2.758154,-6.333601,1.447584,7.944439,6.078476,-9.170967,3.226058,-1.126706,-3.888043,-3.529843,-5.735453,4.016685,-5.088321,-5.652342,-6.924412,-1.907475,2.211450,-3.298972,5.265525,-2.741666,4.198394,-3.830739,2.486198,-6.643855,5.170124,4.947165,2.250940,9.492339,-8.049153,8.946417,-2.735995,1.425290,-1.913513,-7.328711,3.503510,7.100006,-2.300456,-3.438653,-1.016312,3.254833,2.551202,2.374625,5.791090,2.185704,-7.767388,9.721072,-8.679749,-7.968059,-8.013041,6.499007,-7.498255,7.015209,-8.993405,-6.505872,-4.960453,-6.216882,-4.612672,-7.580821,-3.711032,6.178160,1.323618,0.616744,5.792349,-8.298866,7.499054,7.989504,-3.630593,-5.134473,-0.622354,6.088223,-1.575357,9.311228,2.638096,-7.556630,1.908478,4.912104,-4.682032,-9.204730,-8.321047,-6.197045,-9.763444,6.530969,-7.264999,8.029644,-6.819413,4.084123,6.866107,5.977216,9.456449,-4.761492,5.459024,0.362024,7.638902,8.720379,-3.668375,7.253131,-3.987924,-1.188265,-2.348090,9.537042,-6.416977,7.572900,0.151586,8.311884,-9.367794,1.026737,7.645209,-2.524900,4.342522,-2.276549,0.212042,-7.501942,1.940702,-2.547495,9.771379,-2.157587,-9.213075,6.567666,1.744113,-3.510562,-9.812430,7.534094,-3.361882,-4.490703,-1.946852,-7.400082,-9.928540,8.555177,6.271494,1.859139,9.126452,-0.362795,4.803874,-0.441738,-2.360511,8.026133,-9.697818,-1.257063,-1.800504,-1.630784,-4.598512,-7.183223,-0.388135,-7.435301,9.623229,-2.262187,5.115820,-4.266442,-0.103723,3.385551,-9.358318,2.310126,-5.656939,7.594898,6.528732,1.166899,-8.841857,-7.598291,2.150552,-9.991623,9.112075,9.789435,-0.057851,6.791745,-7.636517,3.171437,5.111455,-5.796442,4.222399,-4.063260,4.580878,-8.176634], dtype = "float32")#candidate|1415|(864,)|const|float32
var_1416 = relay.var("var_1416", dtype = "float32", shape = (1690,))#candidate|1416|(1690,)|var|float32
call_1414 = relay.TupleGetItem(func_355_call(relay.reshape(const_1415.astype('float32'), [6, 12, 12]), relay.reshape(const_1415.astype('float32'), [6, 12, 12]), relay.reshape(var_1416.astype('float32'), [1690,]), ), 1)
call_1417 = relay.TupleGetItem(func_359_call(relay.reshape(const_1415.astype('float32'), [6, 12, 12]), relay.reshape(const_1415.astype('float32'), [6, 12, 12]), relay.reshape(var_1416.astype('float32'), [1690,]), ), 1)
bop_1423 = relay.logical_xor(var_1416.astype('int32'), relay.reshape(call_1414.astype('int32'), relay.shape_of(var_1416))) # shape=(1690,)
bop_1426 = relay.logical_xor(var_1416.astype('int32'), relay.reshape(call_1417.astype('int32'), relay.shape_of(var_1416))) # shape=(1690,)
func_191_call = mod.get_global_var('func_191')
func_194_call = mutated_mod.get_global_var('func_194')
var_1429 = relay.var("var_1429", dtype = "bool", shape = (576,))#candidate|1429|(576,)|var|bool
call_1428 = relay.TupleGetItem(func_191_call(relay.reshape(var_1429.astype('bool'), [12, 3, 16])), 2)
call_1430 = relay.TupleGetItem(func_194_call(relay.reshape(var_1429.astype('bool'), [12, 3, 16])), 2)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
var_1438 = relay.var("var_1438", dtype = "float64", shape = ())#candidate|1438|()|var|float64
call_1437 = relay.TupleGetItem(func_131_call(relay.reshape(var_1438.astype('float64'), []), relay.reshape(call_1414.astype('float32'), [1690,]), ), 2)
call_1439 = relay.TupleGetItem(func_135_call(relay.reshape(var_1438.astype('float64'), []), relay.reshape(call_1414.astype('float32'), [1690,]), ), 2)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
call_1441 = relay.TupleGetItem(func_131_call(relay.reshape(var_1438.astype('float64'), []), relay.reshape(var_1416.astype('float32'), [1690,]), ), 2)
call_1442 = relay.TupleGetItem(func_135_call(relay.reshape(var_1438.astype('float64'), []), relay.reshape(var_1416.astype('float32'), [1690,]), ), 2)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
call_1454 = relay.TupleGetItem(func_131_call(relay.reshape(var_1438.astype('float64'), []), relay.reshape(var_1416.astype('float32'), [1690,]), ), 1)
call_1455 = relay.TupleGetItem(func_135_call(relay.reshape(var_1438.astype('float64'), []), relay.reshape(var_1416.astype('float32'), [1690,]), ), 1)
bop_1460 = relay.logical_and(uop_1399.astype('bool'), var_1438.astype('bool')) # shape=(12, 14, 12)
func_355_call = mod.get_global_var('func_355')
func_359_call = mutated_mod.get_global_var('func_359')
call_1466 = relay.TupleGetItem(func_355_call(relay.reshape(const_1415.astype('float32'), [6, 12, 12]), relay.reshape(const_1415.astype('float32'), [6, 12, 12]), relay.reshape(call_1414.astype('float32'), [1690,]), ), 0)
call_1467 = relay.TupleGetItem(func_359_call(relay.reshape(const_1415.astype('float32'), [6, 12, 12]), relay.reshape(const_1415.astype('float32'), [6, 12, 12]), relay.reshape(call_1414.astype('float32'), [1690,]), ), 0)
func_191_call = mod.get_global_var('func_191')
func_194_call = mutated_mod.get_global_var('func_194')
call_1468 = relay.TupleGetItem(func_191_call(relay.reshape(var_1429.astype('bool'), [12, 3, 16])), 3)
call_1469 = relay.TupleGetItem(func_194_call(relay.reshape(var_1429.astype('bool'), [12, 3, 16])), 3)
output = relay.Tuple([const_1415,bop_1423,call_1428,var_1429,call_1437,call_1441,call_1454,bop_1460,call_1466,call_1468,])
output2 = relay.Tuple([const_1415,bop_1426,call_1430,var_1429,call_1439,call_1442,call_1455,bop_1460,call_1467,call_1469,])
func_1470 = relay.Function([var_1398,var_1416,var_1429,var_1438,], output)
mod['func_1470'] = func_1470
mod = relay.transform.InferType()(mod)
mutated_mod['func_1470'] = func_1470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1470_call = mutated_mod.get_global_var('func_1470')
var_1472 = relay.var("var_1472", dtype = "float64", shape = (12, 14, 12))#candidate|1472|(12, 14, 12)|var|float64
var_1473 = relay.var("var_1473", dtype = "float32", shape = (1690,))#candidate|1473|(1690,)|var|float32
var_1474 = relay.var("var_1474", dtype = "bool", shape = (576,))#candidate|1474|(576,)|var|bool
var_1475 = relay.var("var_1475", dtype = "float64", shape = ())#candidate|1475|()|var|float64
call_1471 = func_1470_call(var_1472,var_1473,var_1474,var_1475,)
output = call_1471
func_1476 = relay.Function([var_1472,var_1473,var_1474,var_1475,], output)
mutated_mod['func_1476'] = func_1476
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1487 = relay.const([[[1.533912,-2.298635,-8.250515,-3.728090,4.486593,4.024905,4.704423,4.631699,-6.229378,0.100406,-4.533633,-7.296198,0.813455,6.421491,9.914484,2.708798],[-1.717367,2.591752,-0.032570,2.424060,-7.923955,8.316507,8.412917,-0.779151,2.505072,8.052953,-3.745518,-6.183360,-3.374071,5.180748,3.990873,-6.654619],[-5.694110,-9.901035,0.918247,-6.555691,4.936026,8.022995,-3.017751,-7.660442,2.476461,2.946199,6.293758,4.303258,-0.374704,1.521454,8.074278,0.500226],[3.268351,-4.265111,-9.148785,-9.100939,-9.042890,-5.882434,-6.530295,8.591251,-6.615805,6.606519,-0.908394,3.698386,4.287574,-3.191829,-0.191374,-8.061535],[-8.397907,-4.850738,8.549499,-7.400086,-0.345872,-4.014929,1.872319,-0.451220,-3.179550,4.176020,9.700153,2.923275,7.785008,3.737188,-9.599551,-0.340312],[3.180116,5.700357,4.628375,-9.237322,-9.771009,-3.923708,-2.826849,8.128485,-3.258890,-9.993354,0.243547,-9.383681,8.671528,-9.129436,8.234570,-1.446422],[9.086815,8.935370,0.386206,-8.170888,-2.324125,9.018747,4.951622,-2.780161,5.177034,0.613921,-6.916360,-5.513930,-0.819065,2.113135,0.177956,-9.412657],[5.311488,2.150879,1.386049,-7.480490,9.897637,1.535756,-6.425515,-5.764394,-0.241877,-7.999253,-4.391034,-2.347333,7.805612,-2.968503,-6.319722,0.739091],[5.852822,-9.956880,-7.894168,-1.896147,7.288222,5.122737,9.999051,5.563783,2.642094,1.591601,-5.031116,-2.100358,5.168166,-7.866173,8.069314,-8.117430],[4.141171,-0.057455,3.564711,8.427376,-4.723284,7.975958,-4.761788,3.370569,-6.202380,5.762412,-6.287530,2.411405,3.685087,0.639694,3.125774,7.454330]],[[2.275031,2.400024,-0.561653,1.519201,1.064234,8.622490,7.074384,3.576347,8.929849,0.288403,4.145402,7.747273,-9.457173,9.315309,-1.155991,-1.324480],[-5.284491,9.914865,-7.797875,8.891969,5.553276,-7.632107,7.428043,-9.931076,-4.366788,1.321944,-8.436837,-8.307828,1.188469,8.896387,-7.317395,6.393306],[3.028157,-3.223085,3.680385,2.914276,-5.017664,-8.183899,9.338643,-3.018741,-2.439307,3.907231,-1.692898,3.701728,-8.318961,-2.840694,2.887994,0.244998],[-9.133055,-9.295148,-0.993123,-4.324864,3.970326,-6.558689,3.495096,4.189633,-6.504341,6.341728,-9.756818,5.869891,9.895460,-6.216514,3.063522,9.545856],[9.589062,-7.935666,6.353708,-6.846416,1.366047,4.941252,6.833502,-7.739168,-2.521099,-5.916662,-2.800424,6.417598,6.604299,-6.699519,6.781499,-3.102359],[-9.027474,-8.102455,0.735507,-5.704570,-0.439029,-1.797129,-5.275288,2.219237,-2.338252,-7.479690,1.565248,-8.907126,4.368681,-5.170063,-2.233471,0.749885],[0.046515,-5.744969,-3.138923,6.033568,-7.362109,-2.076524,-4.543984,0.827188,9.143057,5.673700,6.679728,-3.987623,6.112602,-5.054244,7.936578,-5.828208],[9.896313,-1.211193,6.500476,-2.872685,4.024186,8.266987,1.230927,-6.868829,-5.451946,5.692699,2.766165,-8.055488,-7.137761,-7.310252,-4.345589,-8.061364],[6.435573,6.113067,-0.768084,-9.457500,-3.214800,6.429805,2.297380,-1.481934,-5.075492,8.830772,5.613331,-7.566853,-4.307855,-7.396523,3.808761,5.570868],[9.034136,6.247411,-3.361165,9.015516,6.285052,-4.239770,-7.855616,-7.850325,7.622797,-7.072166,6.673475,-2.399742,3.283179,-0.392513,-2.687761,7.900650]]], dtype = "float64")#candidate|1487|(2, 10, 16)|const|float64
uop_1488 = relay.rsqrt(const_1487.astype('float64')) # shape=(2, 10, 16)
output = relay.Tuple([uop_1488,])
output2 = relay.Tuple([uop_1488,])
func_1490 = relay.Function([], output)
mod['func_1490'] = func_1490
mod = relay.transform.InferType()(mod)
mutated_mod['func_1490'] = func_1490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mutated_mod.get_global_var('func_1490')
call_1491 = func_1490_call()
output = call_1491
func_1492 = relay.Function([], output)
mutated_mod['func_1492'] = func_1492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_1531 = relay.TupleGetItem(func_1490_call(), 0)
call_1532 = relay.TupleGetItem(func_1492_call(), 0)
var_1548 = relay.var("var_1548", dtype = "float64", shape = (2, 10, 16))#candidate|1548|(2, 10, 16)|var|float64
bop_1549 = relay.bitwise_or(call_1531.astype('int16'), relay.reshape(var_1548.astype('int16'), relay.shape_of(call_1531))) # shape=(2, 10, 16)
bop_1552 = relay.bitwise_or(call_1532.astype('int16'), relay.reshape(var_1548.astype('int16'), relay.shape_of(call_1532))) # shape=(2, 10, 16)
output = bop_1549
output2 = bop_1552
func_1567 = relay.Function([var_1548,], output)
mod['func_1567'] = func_1567
mod = relay.transform.InferType()(mod)
var_1568 = relay.var("var_1568", dtype = "float64", shape = (2, 10, 16))#candidate|1568|(2, 10, 16)|var|float64
output = func_1567(var_1568)
func_1569 = relay.Function([var_1568], output)
mutated_mod['func_1569'] = func_1569
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1611 = relay.var("var_1611", dtype = "float64", shape = (10, 7, 14))#candidate|1611|(10, 7, 14)|var|float64
uop_1612 = relay.log2(var_1611.astype('float64')) # shape=(10, 7, 14)
func_547_call = mod.get_global_var('func_547')
func_550_call = mutated_mod.get_global_var('func_550')
const_1637 = relay.const([-4,6,-7,-9,-7,10,9,6,-7,-4,2,-1,-8,2,-3,-5,-4,-10,-1,5,-3,6,4,-6,4,9,-9,-6,9,6,8,2,6,3,9,3,-5,-6,10,8,-1,1,-7,-8,6,-10,-7,6,-4,-9,9,7,-3,-10,4,-7,7,8,5,-2,-9,-5,9,-8,-2,-8,-10,-2,-5,-4,-2,-5,-8,-5,-8,-4,-3,3,-2,-5,-9,3,5,10,10,2,-4,-3], dtype = "int16")#candidate|1637|(88,)|const|int16
call_1636 = func_547_call(relay.reshape(const_1637.astype('int16'), [11, 2, 4]))
call_1638 = func_547_call(relay.reshape(const_1637.astype('int16'), [11, 2, 4]))
func_1470_call = mod.get_global_var('func_1470')
func_1476_call = mutated_mod.get_global_var('func_1476')
const_1641 = relay.const([[2.410308],[5.543819],[8.564138],[6.315139],[-0.203965],[-9.449565],[-8.364302],[6.126424],[-1.174545],[-6.489499],[8.381009],[1.594585],[-6.746454],[-8.048634],[-4.868541],[6.303078],[-8.220788],[7.209412],[-6.368262],[-7.892972],[-2.471408],[-8.845589],[-0.713295],[5.498918],[7.219691],[-7.528217],[-3.858028],[-9.352640],[-6.719451],[7.532574],[8.822549],[-8.766486],[-7.670369],[2.339907],[2.979137],[0.094205],[-3.502312],[-3.806384],[7.170959],[7.513373],[-5.217703],[5.794241],[-4.127664],[1.037375],[-2.989459],[5.947849],[-6.511022],[-3.965564],[8.449012],[0.643880],[7.612691],[0.302588],[3.867205],[5.507156],[9.142053],[9.809276],[-1.485928],[-6.759787],[-0.594401],[3.997610],[2.292668],[-9.332357],[-2.035487],[-7.929381],[9.499087],[-6.943816],[-2.675072],[-1.083489],[-7.548893],[3.979975],[7.456483],[6.545040],[4.085065],[-0.892775],[3.865391],[7.166963],[-5.114906],[-2.302937],[-4.615090],[-5.251591],[3.978531],[-5.638510],[-8.001773],[8.902118],[-2.561977],[-0.230168],[0.118013],[5.022786],[-0.719692],[9.787189],[6.165298],[-9.874644],[-0.294583],[5.119462],[8.495449],[-0.237450],[-6.402533],[-0.809503],[-8.917953],[2.848792],[-2.750796],[-4.160543],[8.182286],[2.148978],[0.184601],[-4.709313],[5.855930],[-9.239801],[4.148590],[-1.805509],[9.206022],[4.782307],[2.120389],[4.359780],[2.124752],[9.121363],[-3.258813],[-3.345159],[5.287043],[0.679996],[-9.238007],[-1.515164],[-9.313415],[1.967634],[-1.620178],[-2.101497],[2.112735],[3.239525],[-5.106931],[-3.048069],[-7.302190],[8.425433],[6.588045],[-6.495532],[0.760138],[6.952095],[2.253990],[3.786142],[-1.816116],[-3.582340],[-9.275618],[-5.949685],[-0.192462],[0.595580],[-4.175139],[1.454297],[7.306121],[-9.490581],[-7.175305],[5.122928],[-5.097922],[2.664947],[-9.663795],[-9.873383],[2.939310],[8.056920],[1.511858],[7.011515],[-7.974399],[-8.376940],[-9.140888],[9.547651],[5.139909],[-4.157646],[-3.376960],[3.607693],[-1.694420],[9.236899],[-8.727034],[8.760157],[-8.343552],[2.231858],[7.382748],[8.371571],[3.819153],[-2.510339],[5.221765],[0.002975],[7.721652],[-3.882735],[-4.929926],[1.317979],[-5.694871],[9.217848],[-2.492868],[2.124152],[-1.266301],[-8.664368],[8.905347],[3.235495],[-0.583498],[9.019927],[5.495732],[-9.804904],[-3.362944],[-9.521272],[-7.837807],[-7.697397],[-6.397703],[8.460352],[-8.250749],[3.883981],[-9.464646],[-1.734216],[-7.193260],[-7.935388],[-7.137925],[-5.175086],[7.974426],[-6.449880],[-9.092860],[-6.705456],[-0.438750],[8.891363],[-7.335952],[4.709685],[9.648700],[3.920754],[3.621217],[-7.636207],[8.089523],[-0.302732],[-7.260259],[9.197311],[0.104450],[9.243139],[5.216033],[-3.952123],[-0.483971],[-4.524984],[7.207411],[-3.908517],[5.005963],[-7.259862],[0.762102],[-9.277484],[7.905024],[-4.208744],[5.348913],[1.932183],[-9.022769],[-9.474244],[-2.602559],[8.724166],[4.132861],[-4.203142],[-4.830192],[1.365071],[-8.069869],[-7.291450],[-6.875058],[4.541396],[6.920763],[3.003850],[7.572542],[7.538125],[-8.149687],[3.727219],[-0.197881],[1.773651],[3.280285],[-5.314438],[-2.940629],[7.000694],[3.967028],[4.701291],[-1.424716],[-7.306677],[-0.955475],[-4.766586],[-7.474605],[7.152071],[-8.206422],[-1.942359],[-8.255863],[-7.548700],[3.194927],[7.356533],[-9.610110],[-6.427502],[-8.663682],[-9.412965],[-2.629563],[-2.503364],[-0.581726],[2.543457],[-6.939391],[1.560977],[3.309908],[5.614036],[-9.837641],[8.524028],[1.816556],[8.783646],[3.676150],[3.424805],[5.961884],[-5.882711],[-8.421979],[4.125454],[-2.150326],[-5.918097],[6.599865],[0.057487],[7.488730],[-9.328392],[-9.290390],[1.732388],[-7.778514],[3.180546],[-0.230156],[6.769694],[-5.853275],[-5.611662],[-8.086351],[-8.034491],[-8.433797],[1.866331],[-3.439570],[-8.096185],[-1.911361],[6.596349],[6.413331],[-2.087042],[-8.774180],[7.775655],[-2.815906],[-9.902186],[1.377841],[-2.447033],[-8.338565],[-8.094100],[7.765940],[1.118194],[-2.276551],[1.255030],[-6.477697],[1.175170],[7.281212],[-2.651172],[3.456757],[-4.120781],[-0.763499],[3.712573],[9.295901],[-9.042962],[-4.862654],[-1.519890],[-4.799865],[5.937762],[-3.414975],[5.977558],[-7.486048],[-1.644422],[-7.874788],[0.701792],[-6.681737],[-9.869763],[-0.568832],[-4.657844],[0.006770],[-9.840582],[3.718622],[4.498904],[-4.699428],[-6.093962],[4.636517],[6.822337],[-6.296511],[5.563493],[-4.805058],[0.796965],[-6.796785],[-1.114121],[9.318670],[3.151880],[2.469399],[-2.583105],[-0.675212],[-7.638362],[-8.763461],[5.279005],[2.273739],[1.976632],[-9.676388],[-6.363518],[4.462478],[-7.004970],[2.239642],[7.469121],[5.647871],[0.766477],[-3.908583],[-6.820922],[6.265568],[9.689883],[4.989048],[7.003944],[9.860834],[6.294470],[9.313815],[5.367776],[6.247638],[3.251615],[-1.823973],[0.067901],[4.855274],[-4.527716],[-3.897675],[-2.848603],[2.867143],[0.442480],[9.612007],[3.342145],[-2.367915],[-5.432879],[3.944771],[-5.632120],[8.805685],[0.216176],[-5.892858],[-4.705128],[-7.067252],[2.480984],[6.845445],[-3.547428],[3.158685],[9.600349],[3.994615],[-5.456093],[5.233117],[0.453705],[-7.822301],[2.598401],[2.599983],[9.589049],[4.236039],[1.719897],[-7.217062],[-1.928532],[0.450742],[-4.797166],[8.300119],[6.208292],[6.517106],[-0.857718],[-6.395765],[3.868469],[9.097941],[6.756072],[6.583850],[8.635051],[-2.797698],[-1.347192],[6.862867],[-7.498856],[-3.021774],[-9.957099],[-2.328231],[-6.679144],[0.706256],[8.486200],[-9.970900],[-5.107520],[9.255620],[0.933988],[-0.947962],[-3.740445],[8.269192],[8.210001],[4.468415],[3.246894],[-3.728584],[1.217475],[1.811735],[-2.128582],[-9.479027],[5.393553],[-4.455221],[7.830680],[1.010219],[9.778724],[8.862560],[-9.033073],[-8.128808],[0.944463],[6.761655],[7.112392],[-8.724996],[-1.325094],[-0.219802],[-1.573850],[-4.735715],[-0.670513],[9.890927],[5.786332],[-2.070115],[-6.074499],[-9.567441],[-1.289795],[-5.177082],[-1.909805],[0.258801],[-0.311323],[5.721243],[0.311364],[1.508024],[-9.323474],[2.354885],[5.747566],[-1.185485],[7.862784],[8.417688],[-3.706798],[-1.696936],[-4.616355],[0.685256],[-3.081554],[3.002570],[-5.103690],[-6.340530],[-9.064685],[-1.253510],[9.509974],[9.255454],[-0.317882],[4.968825],[-7.982735],[-0.294124],[-2.710632],[-0.561012],[9.042132],[-5.357016],[-4.176999],[-9.690917],[-9.175217],[-1.467837],[1.606145],[5.412969],[2.847495],[9.534708],[2.971435],[7.737500],[5.780677],[-3.698662],[4.560885],[-4.128784],[-0.484731],[-8.589854],[-5.973422],[-6.202945],[9.943823],[-6.846056],[7.766905],[-1.164693],[-0.431873],[-8.067376],[-5.851111],[-8.247682],[4.113716],[-7.877593],[3.988622],[-9.607207],[9.287652],[-4.103833],[5.232852],[-6.588351],[3.586790],[7.650187],[-3.033617],[9.553441],[4.326165],[-5.377282],[-2.870531],[6.123490],[-2.233711],[-7.366584],[4.120163],[6.516732],[4.600224],[-6.633823],[-6.607095],[-5.604232],[8.675830],[-7.606224],[1.577062],[1.104425],[-4.031946],[-8.743668],[-3.873566],[-3.450481],[4.248508],[-9.386780],[3.958022],[2.353450],[5.773607],[-7.336381],[-4.736284],[6.048209],[-4.769705],[-8.951900],[-4.612707],[5.266404],[8.399428],[9.239816],[9.240733],[-2.859576],[-7.060000],[0.561403],[3.025815],[-1.729983],[0.191495],[-9.959245],[1.569525],[8.803706],[-4.149435],[5.688598],[0.976370],[6.146832],[3.451907],[-7.196292],[-2.813664],[5.312144],[6.120934],[0.568942],[-9.275971],[4.412133],[-7.066031],[0.547143],[-3.679080],[2.212967],[-2.088012],[9.634227],[9.400886],[3.150700],[3.583897],[-1.911011],[-9.404564],[-0.362674],[-4.252873],[-0.923306],[1.165095],[-7.505205],[-3.379300],[-8.944421],[4.658603],[9.118294],[-3.379233],[3.999981],[4.320264],[-0.321079],[6.686561],[-5.566813],[9.632231],[0.730946],[-3.429709],[-6.021456],[-7.721679],[2.657064],[-0.405895],[0.137459],[-0.712791],[-0.074527],[4.722704],[-8.393560],[-1.899328],[4.314911],[4.722800],[2.340595],[-9.138819],[0.031265],[7.051776],[-4.385109],[-2.530315],[-5.859268],[3.661802],[-9.001681],[-0.122206],[7.750508],[3.178651],[-4.063365],[-9.235196],[3.083824],[1.422520],[-9.788359],[9.350621],[0.808497],[6.245920],[-8.326061],[6.996941],[1.601681],[-4.679532],[-8.546711],[-3.218694],[-4.517206],[-8.801980],[8.023226],[-6.617395],[-8.357311],[4.007927],[6.337828],[-9.915632],[6.503510],[4.626761],[-8.951621],[-0.359928],[5.417440],[0.772235],[9.858077],[9.609098],[2.696268],[-0.032524],[1.153665],[2.628271],[9.661653],[-4.017184],[-3.812085],[3.518435],[9.126811],[4.290925],[5.226087],[1.056534],[9.417786],[3.255061],[-0.992403],[-2.078118],[-9.402072],[-6.678757],[-8.331474],[6.674951],[-1.507631],[-7.042451],[1.429979],[3.777134],[-1.731426],[-0.377771],[-7.458102],[1.835904],[-5.523437],[9.052530],[2.719468],[4.153616],[-0.152123],[2.989603],[4.709755],[-4.042165],[0.406957],[-4.351382],[-3.843288],[3.029783],[3.449750],[1.033776],[0.148225],[1.767731],[0.887648],[-5.053347],[-3.762747],[-7.851982],[6.389012],[8.138016],[-0.573737],[-1.808964],[4.596346],[-5.159194],[-9.110294],[-4.680680],[9.105194],[-8.094881],[-8.844451],[4.513607],[-7.846112],[5.949496],[8.264157],[6.576093],[5.612567],[2.985577],[0.273533],[5.037027],[0.371959],[-8.520767],[1.636689],[7.680770],[-1.225463],[8.262877],[0.478365],[-5.378134],[-5.488881],[-3.795846],[7.940718],[-2.579821],[6.593578],[2.238684],[-5.365480],[7.867051],[-6.166469],[5.349007],[-0.145675],[1.293811],[-1.856061],[-5.846435],[6.645808],[0.021291],[-5.968145],[7.434324],[-8.478153],[-3.183588],[1.477821],[-4.213260],[0.040070],[2.534261],[3.223527],[8.571161],[1.318695],[1.914214],[-5.112213],[1.725724],[-8.858009],[0.186091],[9.084047],[8.968684],[8.737357],[4.871052],[2.401650],[-8.680539],[9.901138],[-3.817742],[-1.323462],[-0.275916],[-7.145062],[-0.689590],[5.100932],[-8.997169],[-5.540436],[-2.195942],[-6.493388],[5.322492],[-9.298671],[5.521510],[-3.613241],[-9.117638],[6.644187],[4.558106],[-5.479964],[-8.926856],[9.378207],[1.586251],[-4.346077],[-8.591665],[-2.469889],[-8.659711],[-6.023835],[-2.152371],[-7.681222],[-3.400971],[3.025367],[-6.461020],[-9.085578],[-5.801726],[-5.241453],[7.203468],[5.760368],[-0.307159],[2.364895],[7.994537],[-6.415501],[-5.767743],[4.091296],[7.758231],[-6.186264],[6.630217],[-9.694033],[8.608232],[4.237677],[0.597201],[-1.264041],[5.002829],[-5.776094],[6.136596],[-9.402669],[0.180628],[5.424434],[-1.952010],[-0.594745],[-2.280071],[7.480772],[-7.472089],[-1.047557],[-5.741832],[1.771380],[6.168964],[6.961893],[-6.577397],[-8.765964],[7.746115],[-8.256573],[8.629033],[-6.619452],[-7.877592],[8.738403],[-4.794516],[-9.641116],[-5.118484],[-6.258871],[-9.721642],[8.902798],[2.637361],[-8.364587],[-8.477830],[8.270710],[-2.032733],[-4.485302],[9.680727],[7.150120],[2.503918],[3.553371],[4.034071],[-7.813703],[-4.166966],[6.352386],[-0.568045],[-7.169306],[5.340838],[4.989257],[1.134719],[9.431749],[-0.357992],[-9.607291],[-5.281162],[-0.734067],[-6.470705],[7.076473],[7.173081],[-2.529561],[-8.669676],[8.856079],[-1.254145],[-3.300954],[-8.668609],[6.045723],[6.792699],[4.316451],[-6.850216],[5.009198],[1.914085],[-1.017301],[1.624334],[-9.272812],[6.540164],[-2.140684],[-3.674267],[-6.654291],[9.500366],[-4.798474],[1.950947],[-3.030532],[-3.665359],[-7.697600],[9.721438],[5.278522],[6.466109],[-5.089486],[-9.621183],[-5.883186],[9.814804],[3.759563],[-9.756007],[-3.227011],[9.388983],[3.467246],[-0.945819],[4.599612],[-5.381741],[6.648322],[9.984544],[-5.492823],[-0.735970],[-4.058702],[1.301669],[-4.365652],[3.557147],[-3.159774],[-7.974835],[-6.100970],[4.137611],[-0.036356],[0.824304],[-8.183916],[7.886629],[6.949702],[9.630700],[-9.764924],[-1.209750],[-3.834460],[1.922652],[7.104332],[-3.794872],[-0.544880],[-5.689524],[-4.649311],[-1.674817],[-9.235854],[-7.769127],[4.312565],[-5.353156],[5.287025],[7.974575],[-3.267496],[-2.043272],[4.931164],[5.065281],[-2.936722],[3.674783],[-1.540540],[6.686561],[4.798538],[9.287869],[3.570728],[1.770417],[-0.570806],[6.433600],[4.069062],[1.720342],[7.123161],[-7.602560],[5.592356],[8.142974],[0.774707],[-2.120397],[-8.400211],[1.138848],[2.434502],[6.462324],[-0.957182],[-9.996015],[3.177855],[-7.096510],[-8.850690],[-1.918360],[6.197300],[-1.455442],[-1.232555],[6.809142],[-8.566899],[-0.986921],[5.083630],[9.544893],[-8.004975],[-1.177017],[3.162506],[7.111675],[-7.996986],[0.134332],[3.073064],[-7.581206],[-4.174906],[6.575646],[-4.276141],[-6.427412],[-8.853618],[-8.033564],[-8.204097],[5.496261],[-6.450497],[-6.301350],[-8.532203],[-8.868533],[2.452505],[4.517787],[0.409339],[-2.879987],[-3.298758],[7.343355],[-4.627298],[-5.404186],[-7.992171],[-7.906860],[-1.998044],[3.961936],[3.124962],[-6.323233],[-2.527357],[9.077897],[-1.700169],[-3.593978],[-1.814278],[3.863500],[2.781293],[-2.093692],[-1.892943],[-5.410037],[0.360852],[-1.355506],[-9.113036],[-9.737398],[7.140174],[4.606724],[-6.400471],[8.774618],[8.047035],[-7.392309],[-1.005314],[5.123526],[-7.808715],[1.738246],[-5.958947],[8.410132],[2.799908],[2.388776],[-8.937818],[9.164189],[-2.892824],[8.459649],[9.101552],[5.985336],[-2.723611],[3.931577],[6.644574],[-6.588384],[-6.324706],[-7.743063],[-6.655619],[-5.213490],[7.726742],[6.594930],[4.890382],[4.773051],[-7.984121],[-7.610400],[-5.710958],[-1.182009],[-2.991989],[0.068112],[-4.861158],[4.000983],[-8.412699],[1.125500],[-6.283347],[-8.448683],[8.890435],[4.396367],[-8.167940],[-7.339830],[4.370316],[4.490824],[-3.783676],[-5.901725],[8.927467],[-6.275873],[-7.087963],[-1.013817],[-0.533707],[9.067053],[2.258299],[-4.453743],[8.237919],[2.485479],[4.473867],[-6.776098],[4.285749],[-0.140601],[-9.084579],[-8.020989],[-9.391625],[6.393598],[-9.750134],[9.517073],[-2.723798],[7.237285],[-4.313248],[-3.185786],[6.892283],[-1.521490],[-6.161081],[2.529215],[-7.517018],[9.555367],[1.503170],[-1.691911],[1.894195],[-9.307864],[2.895730],[-0.111608],[-1.200038],[0.234307],[7.825973],[-3.005254],[9.392200],[2.702594],[-5.533339],[6.752883],[-8.506879],[8.577386],[-1.947870],[-7.767628],[2.120273],[-4.890601],[-2.792923],[-5.529022],[-0.753874],[-0.377160],[-4.435758],[2.525406],[7.179931],[1.119269],[8.346344],[-5.046590],[9.164998],[9.573448],[0.215682],[7.967668],[-6.670565],[0.062913],[-9.632970],[7.483690],[6.107834],[3.118603],[9.310583],[5.162963],[1.260220],[-2.625789],[-8.731041],[1.376577],[-4.217595],[3.189721],[-7.428883],[-4.037268],[-8.082599],[4.573403],[-3.683950],[-8.845801],[-8.818197],[2.807492],[-7.198584],[-8.030255],[8.180153],[-1.577671],[9.922175],[6.966751],[8.014600],[4.159298],[-5.403307],[-0.342913],[5.757686],[9.092784],[3.196967],[1.486328],[9.945521],[0.609349],[-9.062285],[-3.115013],[-8.156647],[4.847657],[-4.464562],[9.380639],[9.994572],[3.835353],[-7.477460],[9.657961],[0.653375],[1.607461],[-5.375914],[8.105097],[9.315466],[3.202044],[-1.336356],[6.008842],[-0.737306],[8.458638],[-2.573622],[-5.108712],[9.619971],[1.281622],[-7.727276],[-7.927528],[4.672956],[-2.437926],[-4.034095],[-1.321704],[-4.909490],[5.685913],[9.397550],[4.288952],[3.233336],[-8.614826],[0.258251],[-0.020165],[-2.804214],[-4.921026],[-5.738626],[-9.120176],[0.564581],[7.802234],[-0.687013],[9.074614],[2.314013],[-5.067690],[-3.301183],[-7.265912],[-4.618198],[2.102154],[-2.178273],[-9.243396],[6.702225],[5.908956],[7.455308],[0.593928],[-8.868562],[8.685634],[-6.672117],[8.508631],[1.955150],[-0.379755],[8.218169],[-3.319139],[6.739703],[6.370923],[0.746125],[-4.850774],[-2.689779],[-6.889363],[-6.461725],[-1.874656],[-8.263354],[5.995893],[8.134578],[-8.479655],[-1.511858],[-1.933918],[6.406829],[6.223393],[-7.450420],[-1.496189],[9.601587],[-4.730241],[-0.122473],[1.486111],[-0.342848],[9.178705],[4.274815],[-0.929829],[0.251666],[-7.896728],[9.197925],[8.600487],[9.405260],[-1.170621],[0.781115],[7.949576],[5.489861],[6.216056],[-7.219103],[-9.378440],[-6.289503],[5.120310],[2.397473],[-3.711842],[-5.311702],[-5.220790],[2.060518],[-4.035119],[8.667074],[-5.938055],[-9.716716],[3.189191],[7.190422],[7.184594],[8.752135],[6.386039],[-5.669012],[-1.619305],[-8.717504],[-4.075924],[1.489471],[-2.291284],[1.166183],[2.016291],[5.336481],[6.989295],[1.867941],[-2.380384],[3.029749],[-5.819903],[2.587853],[8.174310],[-1.119411],[4.910490],[-8.853304],[8.453527],[4.280754],[0.065559],[-1.551408],[3.012902],[-5.319622],[8.539751],[2.239027],[8.482310],[-2.727696],[3.364850],[9.002091],[8.794417],[-7.050295],[-1.478671],[-3.676331],[-4.741841],[0.231750],[-7.784234],[-0.572679],[-1.101609],[7.963054],[-8.819452],[6.962546],[5.363650],[9.946983],[5.789034],[7.598602],[-4.536094],[-5.757262],[7.093525],[-5.155399],[-5.803803],[4.171878],[-7.221315],[-2.157999],[-5.121130],[-5.471556],[-8.944921],[-3.971024],[8.942288],[-8.020576],[-4.322225],[5.820468],[-8.173003],[8.558902],[4.311909],[8.950973],[-1.421880],[-8.154925],[9.184021],[6.568083],[-6.214316],[-2.874528],[8.826964],[5.886291],[0.560226],[1.977262],[6.026495],[-6.356415],[-6.200565],[1.684066],[-3.433316],[6.368617],[1.185252],[8.530541],[-3.063655],[6.387413],[-0.567413],[1.789688],[-7.318740],[5.476557],[0.014870],[-6.823609],[1.799024],[-3.707047],[-2.477399],[9.328295],[-4.940577],[4.984468],[5.049695],[-6.194806],[0.371408],[-6.379828],[-6.428927],[5.439033],[-6.018845],[-6.969347],[-7.299666],[1.272277],[0.484488],[6.055351],[3.509702],[-5.167039],[-3.288710],[-4.990285],[-2.650657],[4.174179],[-1.160921],[-9.723535],[-0.440545],[3.879175],[-0.386313],[-3.842909],[-0.334381],[-4.801366],[5.395837],[-8.638487],[7.949972],[-5.785341],[-7.578398],[2.085516],[-2.860514],[6.076544],[-1.115828],[8.301197],[6.998241],[-6.648032],[-8.243470],[-2.923146],[-4.356379],[-2.263585],[9.240395],[-2.638855],[-3.802922],[-6.435726],[5.728446],[8.386083],[-8.776842],[-8.208367],[-0.044091],[0.258209],[1.678396],[8.903851],[-8.542394],[-2.363771],[8.216040],[-9.213262],[0.877144],[6.429964],[-2.165946],[1.959952],[1.987102],[1.557060],[9.569373],[-4.525475],[6.163380],[9.552442],[1.056134],[-3.812018],[3.555422],[-1.531727],[6.571297],[1.540431],[-2.631027],[-8.846823],[-6.405824],[-7.667666],[0.582256],[1.170260],[-6.793941],[-9.906723],[-9.331450],[-3.893357],[7.068223],[4.944816],[0.113838],[2.756524],[3.562935],[-0.508141],[7.114323],[-6.048841],[-2.284476],[1.282602],[-4.123588],[-8.223208],[-2.936339],[-8.245831],[-0.245031],[1.179276],[0.631524],[-3.100632],[-4.829207],[8.286350],[-5.643654],[2.493049],[9.788053],[7.249338],[3.026090],[7.481319],[-8.827575],[-0.966045],[-5.398247],[0.901713],[5.491305],[-6.741981],[7.875437],[8.054117],[-0.343527],[6.984695],[-4.329823],[-7.750278],[-5.468428],[1.629807],[-2.103310],[6.141374],[-9.637458],[-3.538208],[-1.294683],[-7.695061],[-0.738479],[-2.863217],[3.435729],[6.953006],[6.665207],[4.717111],[-3.772372],[1.708579],[0.470786],[-0.576413],[6.515015],[-5.155277],[4.538679],[-0.702225],[-8.145204],[2.241995],[-5.522730],[4.444207],[7.665640],[7.599114],[1.195324],[6.970432],[3.148025],[6.310286],[6.120283],[-8.510374],[2.706742],[5.358704],[5.122252],[9.562816],[-6.743496],[-9.120226],[-0.079626],[-9.370141],[9.589787],[-9.139417],[-8.016706],[-2.279689],[-4.499876],[6.170939],[5.545989],[-3.179116],[-1.843098],[0.956872],[-9.924029],[-7.789613],[2.752376],[3.443156],[-6.490641],[5.346380],[2.741796],[-7.178982],[2.505587],[1.741087],[-9.963943],[-6.856649],[8.057341],[2.440957],[-9.627170],[6.652435],[2.867623],[8.540814],[6.482457],[-9.073780],[-0.562078],[3.549252],[-1.442606],[-7.169282],[-9.412038],[2.814072],[-6.100890],[-0.040484],[3.983552],[1.794527],[-1.887527],[-3.195600],[-5.075456],[-7.166124],[-4.584245],[7.320964],[-8.989766],[-6.841516],[5.481914],[9.395189],[0.292500],[-7.143494],[-5.454128],[4.038396],[-7.674542],[4.009633],[2.166278],[-0.027781],[4.928819],[9.713069],[-6.499110],[-9.227803],[4.997335],[8.175636],[9.775012],[-2.534201],[2.194196],[-0.138508],[1.812153],[1.394935],[9.342211],[-9.464058],[-6.480734],[-4.173341],[4.868769],[8.794706],[1.415037],[7.423827],[8.685013],[0.799896],[1.828358],[5.581231],[-6.001423],[-7.061925],[9.699122],[-6.602889],[-9.217790],[0.223891],[1.911090],[-7.991818],[-9.033498],[-9.106204],[2.764448],[-2.091800],[-9.980439],[-5.468027],[-2.451418],[3.818223],[3.776381],[-0.053463],[8.146611],[0.091826],[-2.112539],[5.308782],[6.544926],[-3.088164],[2.243594],[6.462076],[-8.812407],[1.482904],[8.036107],[-7.052056],[1.375093],[-0.560845],[7.429912],[7.555559],[5.542240],[-7.707487],[-8.261331],[-3.557519],[4.969847],[8.759210],[4.426612],[-7.256324],[-5.777210],[0.703949],[4.511618],[8.429729],[5.845912],[8.580293],[1.774342],[8.346778],[-9.616267],[-3.319936],[4.550901],[-9.495612],[5.085868],[-8.524453],[-3.986638],[1.378070],[-7.283428],[-6.046558],[-8.137186],[8.327649],[7.565993],[1.738110],[6.822252],[-8.835332],[-0.100788],[-5.440067],[4.128177],[7.920231],[-8.098397],[9.263294],[-9.041089],[-1.300184],[5.460783],[-6.465455],[-4.737672],[8.758225],[-0.272984],[-6.888211],[-2.213188],[6.366864],[1.783643],[-0.327494],[-2.732024],[-9.515444],[7.300239],[2.244683],[-3.383518],[9.898596],[-3.363153],[2.263454],[1.434339],[5.854456],[8.821806],[3.028879],[-3.353898],[6.871036],[1.274803],[-5.339829],[5.801990],[-1.509149],[-3.680094],[-7.590326],[4.706062],[7.679211],[2.369433],[1.944772],[8.636972],[-5.753947],[-7.867640],[-5.304531],[5.544678],[2.769333],[-5.203274],[-6.681481],[-4.563606],[-6.531731],[3.761780],[9.383273],[-3.251653],[-5.839659],[3.651683],[-8.653711],[-4.261653],[-6.298461],[1.208370],[9.596349],[-5.458996],[3.956504],[-0.768042],[-7.505998],[-2.499934],[-6.047590],[3.612474],[0.459401],[-1.738974],[0.312241],[4.775260],[-7.642604],[-2.831487],[-4.435502],[-0.994279],[-0.317621],[-7.352380],[3.774734],[-9.293704],[8.058661],[-6.682490],[-5.253736],[4.739493],[-5.141676],[3.636674],[-5.054996],[0.869480],[8.729576],[9.096116],[6.129539],[6.800581],[-2.036496],[0.871618],[2.318344],[1.199067],[0.062731],[-2.115543],[7.299301],[6.929441],[9.055954],[6.859587],[9.794829],[-3.647832],[-9.499245],[-0.423187],[7.054051],[-8.521750],[-2.611972],[7.381974],[1.441782],[-6.837397],[5.846051],[-9.162559],[7.891852],[-9.308000],[-6.403676],[-2.349804],[-9.811767],[-0.235428],[-7.851147],[7.749218],[1.311156],[0.074458],[0.088890],[3.044547],[3.198150],[9.855277],[-1.534019],[3.873026],[3.317289],[-9.017732],[6.662225],[9.344182],[3.820051],[-9.519585],[9.054757],[-7.107410],[9.756826],[-8.036959],[-7.860554],[3.844773],[2.209171],[-7.873172],[-4.186750],[5.380832],[0.705397],[-2.561736],[-3.624157],[6.446066],[9.247972],[7.824428],[9.506160],[7.531754],[1.112196],[9.190650],[2.008717],[7.935020],[-2.707292],[-1.731869],[7.345953],[-9.231540],[4.313153],[6.005537],[9.844138],[-9.981077],[0.409517],[7.273662],[7.023424],[0.320985],[-8.361964],[-9.969388],[-0.414642],[-8.935669],[-4.931742],[0.913216],[1.100915],[-4.685685],[-6.482789],[-9.804345],[-8.819842],[7.005659],[1.553585],[-3.320957],[8.306440],[2.389009],[7.711773],[-5.823027],[-1.742161],[-7.968840],[7.397270],[-1.371805],[1.621613],[-8.405468],[2.404311],[0.029541],[4.711280],[5.674066],[6.496426],[9.664762],[0.257170],[-8.172667],[-4.057671],[-3.069379],[-6.726786],[3.375767],[1.319312],[-1.974382],[3.288418],[-4.751090],[3.357025],[-7.240176],[-8.034871],[2.627047],[-0.991245],[9.190497],[-5.386099],[-4.340924],[-4.845194],[7.385684],[2.215775],[-8.473388],[-9.740824],[7.104714],[0.342585],[-0.715279],[-4.800306],[2.165899],[-9.845025],[-6.130282],[0.737972],[6.226166],[-2.498407],[5.583943],[-2.335165],[7.328829]], dtype = "float64")#candidate|1641|(2016, 1)|const|float64
const_1642 = relay.const([-3.629969,4.820559,-2.333880,-0.098685,9.626748,8.684935,8.532630,-8.312051,8.682249,-1.873264,8.868098,-9.568155,-0.591236,4.882609,-6.448834,4.707194,1.258195,-2.424629,6.511441,-0.569873,0.164387,-5.999944,-1.898317,0.709471,-2.946411,3.862166,2.566372,-0.416599,5.170566,-6.532245,4.787884,-0.735337,-6.149727,-7.202169,2.227795,-0.080883,1.501183,9.236325,4.385624,4.505787,-2.280208,4.233550,6.575998,7.963448,7.715702,-6.331548,-5.814081,-9.137140,3.703777,-9.957645,2.944214,5.838035,9.465260,-2.955835,-7.575448,3.338364,-7.300916,-5.964894,-1.788671,-2.593072,9.923440,-4.127994,4.372671,1.688203,-2.422510,-5.166175,-7.750044,-7.744600,-2.163941,6.831219,-1.935237,-2.554141,2.387358,-6.589858,-3.944283,-3.245663,4.251205,5.994869,1.173605,-8.777978,-9.693257,0.198952,-0.518492,4.878652,4.997250,2.222938,9.527492,-6.581393,2.586994,-7.245893,-8.456499,0.261231,2.632827,-2.728463,0.151965,-3.928766,1.093842,6.824028,0.881781,1.784766,3.276466,4.404115,-2.735993,5.670036,-9.806430,8.333469,-3.260802,1.374620,-0.999992,-7.916804,-1.821551,5.712465,1.638230,8.761819,4.578833,5.899760,-3.034270,8.147814,-1.006598,-8.788378,-7.871159,9.992106,-3.504347,8.173776,1.916126,4.197090,-0.659088,6.382108,9.330302,0.487414,5.997066,8.871161,3.936797,-4.066638,7.467017,-0.178134,8.442482,9.858536,-9.283099,-9.230760,-9.376746,8.294425,-8.595110,-4.371783,-6.776087,4.015020,-9.193089,4.809759,6.445605,-1.793055,-3.914623,3.712998,-2.405412,6.764990,5.959513,-6.091296,7.431163,-0.582873,8.394862,4.573748,-2.965811,2.075478,7.550542,-3.891794,3.706754,-1.998017,-0.264469,9.939579,-6.091210,0.117853,-3.076192,4.407468,-4.721457,1.347154,9.050517,3.443869,7.780375,-9.256956,9.664692,-3.207531,3.337022,-3.060614,-0.709544,7.832814,-0.756673,-0.489020,-4.474420,4.900997,2.248928,-6.209309,7.245136,2.308487,6.177453,-6.495597,-6.620771,4.542468,2.368952,1.752976,3.341221,-4.362676,-6.754203,-2.514023,-1.524528,5.161704,-4.937387,-6.590266,3.071483,2.648263,-5.134350,2.308299,-4.191376,-3.786038,-0.408130,3.766800,-3.605806,2.878218,-7.448419,-8.820743,7.795261,-2.119334,1.852485,-6.674067,-5.991386,6.198723,7.501172,-0.233002,1.848287,3.239098,-4.080003,8.035495,-8.612283,4.252209,-9.894567,6.677316,8.624702,-1.183328,1.452967,4.865576,-8.776864,-2.057423,3.998458,3.155806,9.066067,-2.809410,4.838617,5.753521,0.837135,-1.200004,-0.622547,2.603918,9.505874,-6.142826,-6.997808,6.547822,9.426059,-6.539925,-9.779251,0.293673,-2.802931,7.913482,-6.634611,2.778963,-5.927339,5.633747,-5.847174,-5.438507,-9.173986,-9.397387,5.530218,7.926910,7.032999,4.872754,0.887398,9.005145,3.023857,6.171613,3.928117,5.849982,-9.914551,-7.043613,2.412736,8.883457,-5.563779,4.049705,7.615697,-0.121682,-0.848298,-2.587858,-3.208743,-0.214691,-9.235122,5.220959,-9.496405,8.394461,-6.146816,7.311970,5.335502,3.665949,-9.248863,6.370294,-9.221865,-5.278496,0.073003,-2.253568,6.913122,5.024776,1.198392,0.687314,1.611765,-3.519670,9.913669,-6.029654,-6.349538,-1.482936,-2.537708,-0.969743,1.900008,1.227291,1.555865,-9.900972,-5.921370,6.811230,0.636721,-4.891875,7.108043,-7.465146,-9.682147,5.487003,-1.079509,-9.580057,0.881800,4.814734,6.894164,-5.604226,1.114500,9.335712,-2.995962,9.982208,-2.236862,9.995450,-4.606137,-0.517949,-5.119168,-2.514288,4.690063,1.854688,0.372472,4.613041,8.152417,-7.313559,-4.556724,1.998335,-8.662289,-9.159721,-2.039840,-7.133421,6.226135,9.543057,8.740387,3.945392,-1.054386,9.429189,0.748195,4.592747,-1.764225,4.554352,4.479597,-9.936687,0.904411,-4.061851,-2.919771,3.606437,9.117092,9.571596,-4.767527,9.854929,5.166632,-3.509384,9.213683,9.697700,3.886311,8.664370,6.257221,-8.426392,-0.239599,-5.452378,-7.630125,5.264754,1.914477,-3.335798,1.733406,-9.881484,-3.371953,8.914534,-4.236709,-3.675258,-1.691930,1.342780,6.553360,-7.657128,-0.990162,-8.609029,-0.013039,0.422085,-3.114250,7.299614,2.839739,-5.096398,0.959369,-9.627625,-5.900532,5.038724,-6.832963,9.326735,5.034850,9.880461,-0.734260,-9.523653,1.393418,-2.619321,8.787072,7.551335,-0.131364,-0.929523,-0.271242,2.435534,9.818228,4.613460,0.663352,4.092331,-4.538182,7.361273,-4.552268,-6.419789,9.184722,3.758312,-9.128400,7.293613,-2.731332,-2.150573,-6.181204,-3.774012,4.638679,5.774346,-6.417900,9.433801,-5.111065,5.181653,-2.650482,-2.147454,3.851683,-6.628998,7.231344,-7.213540,9.544887,-1.395573,-6.313866,-9.502911,-3.148856,4.422987,-3.652343,1.927453,9.663287,-6.704520,-9.259645,0.327791,-9.885644,-4.919812,1.425201,-2.445718,6.546267,1.800528,8.557374,8.129697,1.945156,-0.304527,9.191705,-3.964575,-2.349576,-6.344632,-9.800891,-6.013609,7.206399,-1.743621,6.475616,-3.291977,5.716700,3.019411,1.644205,-5.839478,7.585294,-7.219181,-8.005281,8.301167,0.823261,-6.816963,0.470985,7.016547,6.580241,0.268020,-8.990566,1.006115,3.877893,-6.019837,-8.004824,-5.862292,6.802459,-2.499619,0.461795,-8.924714,-1.964073,-6.986688,-2.840385,-6.924352,5.765527,-0.590245,8.870016,1.424601,-0.142304,2.395571,-1.372651,-8.946944,2.388968,-9.382999,-8.615058,3.267671,7.404790,-3.306645,9.031235,5.712363,0.675843,-9.747307,3.430099,4.669481,3.431050,-6.669429,-2.856163,8.561193,-8.173854,7.026962,8.959043,8.830280,-9.906031,-1.092264,-1.453203,0.545664,7.482433,1.391619,1.793741,5.164467,7.506304,0.919236,-8.915818,4.821880,-4.118254,-8.903224,-4.548063,-3.700042,9.876554,-8.967354,-6.031081,9.237025,-9.235976,-1.192528,-8.049961,-8.768312,-0.218669,6.524067,5.650674,6.884516,7.207979,2.063234,6.086668,1.816244,-9.162068,-2.930949,5.834313,-5.079505,-2.644331,7.852159,-6.583520,7.972093,0.932765,-5.172847,1.775587,-8.997414,4.983221,-2.118882,3.445201,0.939085,-6.308816,-6.852422,-1.954298,5.197332,-7.265788,6.500602,-5.809317,0.552630,6.308540,-4.478034,4.553397,-3.493344,-8.753909,5.647305,-6.700291,8.155845,-6.878221,-4.016709,6.518518,-0.946209,-6.254198,-2.064407,-6.142050,7.750846,7.425459,-8.210093,-3.317622,5.666081,-7.959097,3.634030,-5.759883,9.412062,-6.804310,7.508672,0.458682,8.322041,4.930762,-6.093171,4.276365,5.675066,-7.365692,6.060567,-4.791127,8.487308,0.034391,0.031015,-1.799949,9.354298,-4.949167,-5.736349,-5.991249,-2.320462,5.251470,3.039714,-3.737107,-6.459307,-6.036632,9.472799,-8.629020,9.912754,8.828331,2.944857,5.897815,7.561287,7.908387,2.893359,6.966707,1.171056,3.948009,-3.803071,-4.876522,-6.214834,-6.717973,8.227246,-9.318203,6.682038,-6.953784,4.860841,1.759668,4.618045,-6.495571,-4.844775,-3.451251,8.199730,-3.455771,0.753927,-1.726505,2.596396,-0.153511,7.732657,-4.786557,-0.524250,-5.443657,-1.188361,-5.422819,-5.656558,6.249137,6.651230,4.102715,6.804306,-3.268561,-8.919519,-9.031616,9.882551,-5.199518,9.799764,3.962105,0.984047,-1.832552,2.988453,-4.264852,9.905342,-1.728529,3.523461,2.766035,1.279636,-7.826238,-3.288449,-6.517054,4.371652,9.302100,8.575865,-9.201681,-8.150425,-5.899407,-2.048986,7.033980,-0.370159,-3.860278,5.681854,-4.727750,7.332199,-6.462777,2.282437,9.528806,-9.393581,-2.345119,-3.744004,-4.718402,8.574734,-6.353942,4.682247,1.211078,-8.845977,-9.139679,-5.465435,-3.452230,4.000046,6.352027,6.555363,1.719387,5.035240,6.146829,-1.918021,-9.433453,0.046783,1.372320,1.240137,-2.181465,-8.758618,9.704467,-8.698942,-6.897259,2.897727,-8.179639,3.398145,-6.564614,3.931275,-6.097381,3.148980,4.808856,6.701515,-7.280146,-5.579880,-1.954047,1.480153,3.874989,-9.589198,5.939003,0.108338,-4.123116,0.674207,-3.803394,7.456903,-6.784347,1.991338,6.488915,5.035672,2.214555,-2.869431,-2.550726,-5.996044,8.569501,-9.817107,-2.963288,3.523910,-2.906605,0.430696,0.637686,3.586979,7.234858,-4.128415,3.707139,-6.611348,2.613543,9.645577,-8.174792,8.249947,-0.313827,-6.430884,2.849850,1.030656,-9.807921,-4.430670,5.284554,-1.905055,5.351151,9.792109,-1.468959,5.731004,5.637761,4.483830,-7.711872,5.394601,-3.296538,5.598896,0.936089,9.083445,9.008655,-3.311534,4.157804,-5.548776,6.739934,-1.275100,8.414754,0.818397,-4.885172,9.295574,5.062997,3.929999,-5.653171,0.374775,1.595898,-2.473462,5.806974,-4.090453,7.605656,4.794024,-2.360922,-1.301831,7.942723,-5.794411,-1.063549,6.790517,8.573954,-0.272373,4.542701,4.345614,-4.267247,-4.776228,-6.160932,3.485389,7.269406,-6.417274,-4.127762,1.994954,-7.515578,0.059313,3.886242,-8.934105,1.974152,6.633750,3.687810,9.562757,-3.486589,3.009712,-5.775148,-8.144067,3.620430,-1.780192,4.595500,8.065803,3.783417,-7.042715,6.680645,9.434842,3.071742,-6.917573,-6.283783,3.398115,4.015635,5.638371,9.491564,7.809384,4.422823,-2.587088,8.748958,-5.790009,-5.139464,-5.760913,-5.086107,-8.808472,-6.934066,-3.312511,-2.355184,7.276926,-3.224973,-2.535445,-6.062916,-2.157933,6.429787,-9.433760,-3.540819,7.920199,3.778140,0.710658,-7.716085,-1.197575,-2.705628,5.169157,-0.666771,-2.086711,7.684552,-6.145052,-1.387751,4.214942,0.253367,-9.695530,2.976728,-3.821330,2.314279,-7.358518,8.076575,-0.449142,3.574508,-9.601104,-4.192373,-9.201907,4.790080,8.194638,6.045338,1.768585,-9.804275,-1.812690,-2.687008,4.245029,-8.407113,9.070548,-2.592959,6.386951,0.969006,8.858602,-4.741906,4.991907,-4.074469,0.714921,-9.591048,-4.261463,8.328795,-8.910439,2.162938,2.853890,3.945705,6.628554,2.903264,0.642525,-2.085291,-4.093572,-3.760872,5.166134,7.659112,-6.167692,9.810919,-6.157976,8.074208,-2.814507,-6.468227,2.016366,-9.484619,3.386556,6.416158,-7.248764,2.308172,3.723525,7.866210,-4.409513,0.568498,-3.852920,1.864973,2.835750,8.752681,5.424039,-7.169429,5.284549,3.307430,-9.468914,1.365147,9.223515,9.054481,-1.384169,1.651379,5.791719,0.927485,0.136274,6.606214,1.953174,4.049964,-0.331496,9.940554,-1.563665,6.840829,-8.358065,-6.697798,8.244393,-1.030644,-5.587054,0.081570,-3.103066,4.710111,9.296289,8.423716,1.858262,-9.288903,-4.031016,5.370919,-5.412050,7.623293,8.505032,-0.672748,7.321917,-8.310965,-0.719776,-5.845202,-7.682906,4.694208,-1.438202,-8.872077,9.073479,2.484518,0.516948,-6.107477,7.124095,-4.871272,3.065998,-0.977381,7.085440,-9.075889,-2.105376,-9.224232,-2.117190,-8.675560,-2.463412,-9.282396,2.475620,6.171506,-1.739777,3.353507,9.895555,-9.917964,-1.777244,-2.235120,5.259469,-4.837581,2.159487,-5.460580,-5.690799,-5.079375,-0.732086,-3.710010,-5.729675,-3.053244,0.165369,0.087629,1.366299,-7.587761,-0.473045,4.022778,8.599213,8.196115,-6.113414,9.926906,-7.982068,-1.776562,-0.524678,4.142186,-3.572011,-4.626589,6.392954,3.755849,0.141649,-8.238886,-9.238733,-2.213896,3.057673,-6.231473,4.772225,-4.757991,5.723231,-4.264282,2.642574,-4.545921,5.480925,-1.995009,-2.956331,5.062282,7.213947,9.331934,5.653751,3.991926,6.397197,8.650430,8.412348,5.112087,-2.724914,1.691841,2.096562,8.377603,-8.600875,2.342084,2.364361,-9.616048,-5.296062,-4.417251,4.652588,8.358393,2.740844,-4.385491,-1.620767,8.056046,5.121701,9.498641,7.988077,-3.676817,-3.181812,-2.124071,-1.398909,-8.362737,5.912934,9.008789,-6.600219,7.858693,2.442802,1.829026,9.317487,-6.943275,1.353366,9.898874,-4.467766,-5.926331,7.566939,3.008688,7.692400,7.868285,-9.391055,-9.527618,5.419962,9.319626,7.113046,-2.573793,1.147946,3.354963,-5.658264,4.615532,-5.890469,5.521742,2.215369,-4.509815,-1.008348,1.739842,-0.577075,-8.192638,4.704431,-3.618589,-3.009467,-7.173197,9.665651,-3.873975,-2.804566,-1.181687,1.481069,9.349249,-9.198415,4.427031,4.506467,-1.705321,-2.690973,0.377379,-9.458814,-9.405207,-2.928259,-4.271682,8.465029,-4.897822,5.846672,-6.358035,-9.676928,8.010593,1.883132,-1.147759,6.038202,-7.785641,2.141335,4.317034,5.481301,-0.589330,-2.778645,7.260676,5.558629,-2.508026,4.077036,7.484227,-2.455538,-5.291331,1.119992,-1.422693,4.164405,5.309936,-8.527450,-7.868771,-8.756240,7.115113,-8.268717,-7.013373,-8.866599,-2.294264,-7.381659,-5.288138,-0.566700,-8.160364,4.465009,-0.512540,-8.631152,3.931722,-8.939546,-2.719251,-4.733218,-4.834378,5.018857,-8.084662,2.678871,2.670042,-1.880729,-0.040789,-5.170435,-0.885965,3.355430,0.837480,-5.969061,-5.375554,-2.775095,-1.807328,-5.884681,4.513960,4.630386,-6.861076,-1.486051,-3.499943,0.634330,4.935960,-0.140712,5.637454,-8.316477,5.042065,4.076630,-5.854107,-3.408488,-7.820114,0.888508,-5.244069,2.689350,5.845172,-3.192605,-6.484428,-4.947374,-1.056119,3.430092,-8.652997,-2.916463,9.747491,0.428987,0.770919,-1.246638,-6.594269,-6.355200,-1.446730,5.097113,7.929670,-8.782866,6.980057,-6.081894,3.552672,7.321367,0.808864,0.892671,5.019138,-1.129591,-4.525958,-2.915270,-2.404638,-8.698032,-1.253229,-1.109191,4.248320,0.099210,0.500687,-7.141656,-0.252794,-4.338174,2.385556,-4.601173,-1.429149,-5.721934,6.155711,-1.863413,8.144812,-0.657500,-7.203619,7.943355,2.370700,3.133475,-3.722114,4.924646,7.565669,6.580602,4.619176,-6.491079,-3.647019,2.055317,1.564587,-4.081800,-5.169021,2.701740,7.469322,-9.906010,7.126447,-9.997379,-0.746822,-6.333372,2.109127,-0.633523,0.238375,7.750327,3.742097,4.840589,-5.292998,9.844099,2.225412,1.349034,-2.579703,5.600742,3.988984,5.983168,-2.504207,-7.327997,0.196401,-3.543794,6.366646,9.968417,-1.228479,3.324134,-8.031756,7.379565,5.991127,-2.127096,0.995997,-4.438692,0.502602,-7.613932,8.614593,-5.831325,9.070431,-2.526582,-5.794183,-0.399193,-7.712833,5.617680,-5.041387,-0.460704,7.102105,6.822750,9.927298,-5.749995,-4.197745,-1.610666,4.455857,-6.476699,9.982503,7.034134,-6.510299,8.515431,9.269442,1.948323,7.316219,-8.641472,0.579084,7.174503,0.342214,2.056760,-4.123346,6.186105,-5.823482,9.260057,-2.601941,7.235417,-6.133617,-7.306082,5.021544,6.713588,8.153019,-7.102316,-4.724251,6.332478,0.924482,5.071698,-7.661594,0.758639,-1.530071,2.835631,4.601929,-2.766976,6.062371,0.556205,-9.758512,2.184386,-1.605121,-6.188742,-3.665372,-0.833816,2.636460,2.650324,0.370888,-9.148642,5.226473,-1.344703,5.033848,-2.877443,7.529785,4.721932,9.002270,-3.044935,-2.441725,-3.586854,-2.973719,-8.622156,-9.116218,-4.617145,-1.772190,3.059078,-5.501950,-9.883254,-5.604426,-2.059954,1.720433,-3.138932,-0.822994,-0.141556,2.165534,4.402537,-7.617490,5.168811,-4.294136,-9.542320,6.616326,-3.242537,3.401805,9.096760,-9.566624,-1.624204,8.867941,-1.316488,6.512601,8.545914,2.033666,-2.360633,-3.720191,-5.566503,9.275087,-1.726264,-9.557706,-9.831568,5.344951,-6.027682,5.611902,1.071126,3.312595,9.634454,3.182832,3.879888,3.948205,-0.945911,-6.329478,-4.298372,8.421242,-5.218580,-2.212463,2.023499,-9.713757,3.634890,-3.080367,-1.867617,-5.565306,-6.559505,-5.510590,-5.252910,-9.371087,-2.357204,4.568131,-6.579352,5.549068,-1.623149,-9.152705,3.589366,5.107328,-7.531105,-7.688282,6.130232,-8.558272,-9.905520,-4.188152,2.772990,9.911374,7.617252,-4.252785,8.435385,-9.217493,4.374064,4.910592,5.128857,8.952595,7.079503,-8.452371,-1.141407,-4.228708,-4.939276,3.233582,1.423956,9.483013,7.014337,5.436710,2.650536,5.387171,-4.809991,5.643966,8.448608,0.033263,-7.376985,-6.720767,0.440379,8.187212,5.751956,4.622778,0.463467,3.140090,-6.045394,7.708806,-2.812362,3.172738,-3.629933,-5.887640,5.988531,-9.899205,6.151573,2.322601,6.141136,-5.925023,5.453912,-8.286287,-7.372774,-4.886952,-3.302822,-1.853323,-8.677800,2.990581,5.768816,-8.751546,4.545909,-6.003033,1.998526,9.212142,4.402591,7.796876,0.480590,6.576925,9.191764,0.119559,-4.196889,-9.219273,5.167367,1.456102,3.966551,9.408854,-9.517472,-9.710503,1.429002,-1.723917,7.270412,-8.657612,2.293511,6.338798,7.311465,-0.510601,-8.660806,-3.574446,-6.401182,-2.387481,2.570991,0.763060,-4.590332,-2.677499,1.697473,-1.345537,-4.432036,-7.261142,-8.320158,3.094779,-2.613052,0.837528,-0.212314,-6.438996,7.571203,5.113332,-3.301662,-6.217499,-8.779008,7.515264,-1.989112,-0.725597,-1.094289,-5.184961,-2.234166,-7.212612,-8.290408,-4.606781,0.490365,2.118211,7.023313,2.128003,1.378492,-2.008581,-6.369231,-8.561975,7.025968,-4.763119,9.047342,0.115965,-6.712084,-4.637509,4.929823,1.124452,4.210602,-7.932060,5.619324,-2.296824,4.930727,-4.251017,-0.177815,-5.901027,-4.307524,6.767925,-9.677576,2.047517,-7.205777,7.275028,-9.778358,-4.256687,3.944217,0.303594,6.294011,-2.391877,-1.863960,-1.028147,5.793301,9.772410,4.083069,6.698253,6.091050,-3.396757,-6.890938,2.809877,0.479819,-7.030901,-2.508062,5.501627,1.035295,8.649267,0.077349,5.107606,-2.297052,-7.937587,2.736810,0.950521,-3.056186,1.791573,3.117265,-6.353933,-5.672863,-4.199519,-5.413986,-2.462094,8.732011], dtype = "float32")#candidate|1642|(1690,)|const|float32
const_1643 = relay.const([[False,True,False,False,True,True,True,True],[False,False,True,False,False,True,False,False],[False,True,False,False,True,True,True,False],[False,False,False,False,False,True,False,True],[False,False,True,True,True,False,False,True],[True,False,True,True,True,False,True,False],[True,False,False,False,True,True,False,True],[True,False,True,True,True,True,False,False],[True,False,True,False,False,False,True,True],[False,False,True,True,False,False,True,True],[False,True,True,True,False,False,False,True],[False,True,True,False,False,True,False,True],[True,True,True,False,True,False,True,True],[True,False,True,True,True,False,True,True],[False,False,True,False,False,True,False,True],[True,True,True,True,False,True,True,False],[False,False,False,False,True,True,True,False],[False,False,True,True,True,False,False,True],[True,True,True,True,True,True,False,False],[False,True,True,True,False,False,True,True],[True,True,True,False,False,False,False,False],[True,True,True,False,False,False,True,True],[True,False,False,False,False,True,False,False],[False,False,True,True,False,False,False,True],[True,True,True,False,True,True,False,False],[True,False,False,True,False,True,False,True],[False,False,False,False,True,False,False,False],[False,False,True,True,False,True,False,False],[False,False,False,True,True,False,False,False],[False,False,True,False,False,True,False,False],[False,False,False,True,False,False,True,True],[False,False,False,True,True,False,True,True],[False,True,True,False,True,True,False,False],[True,False,False,True,True,False,True,True],[False,True,True,True,False,False,False,False],[True,False,True,False,False,False,False,True],[True,True,True,True,False,True,True,True],[True,True,True,True,False,False,False,False],[False,True,True,False,False,True,False,True],[True,False,True,False,False,True,True,False],[False,False,True,False,True,False,False,True],[True,True,False,True,True,False,False,True],[False,True,True,False,True,False,True,False],[False,False,False,False,False,True,False,False],[True,True,True,True,True,True,False,True],[False,False,False,True,False,False,True,False],[False,False,False,True,False,True,True,False],[False,False,True,False,True,True,False,True],[True,True,False,False,False,False,True,False],[False,False,False,False,False,True,True,False],[True,True,True,False,True,True,False,True],[True,True,True,False,True,True,True,False],[True,True,False,True,True,False,False,True],[False,False,False,False,True,True,True,False],[False,False,False,True,True,True,False,False],[False,True,True,True,True,False,True,False],[False,False,True,True,False,True,True,False],[True,True,False,False,False,True,True,False],[False,True,False,True,False,False,False,True],[False,True,False,True,True,False,True,True],[False,False,True,False,False,False,False,True],[True,False,False,True,False,True,True,False],[False,True,True,True,False,True,False,False],[False,False,True,False,False,False,True,False],[False,False,False,False,False,False,False,True],[True,False,False,True,True,False,True,True],[True,False,False,True,False,False,True,False],[True,False,False,True,False,False,False,True],[False,False,True,True,True,True,False,False],[True,True,True,False,True,False,False,False],[False,False,False,False,True,True,True,False],[False,True,True,False,True,True,True,False]], dtype = "bool")#candidate|1643|(72, 8)|const|bool
const_1644 = relay.const(-1.135083, dtype = "float64")#candidate|1644|()|const|float64
call_1640 = relay.TupleGetItem(func_1470_call(relay.reshape(const_1641.astype('float64'), [12, 14, 12]), relay.reshape(const_1642.astype('float32'), [1690,]), relay.reshape(const_1643.astype('bool'), [576,]), relay.reshape(const_1644.astype('float64'), []), ), 4)
call_1645 = relay.TupleGetItem(func_1476_call(relay.reshape(const_1641.astype('float64'), [12, 14, 12]), relay.reshape(const_1642.astype('float32'), [1690,]), relay.reshape(const_1643.astype('bool'), [576,]), relay.reshape(const_1644.astype('float64'), []), ), 4)
bop_1649 = relay.less(const_1644.astype('bool'), const_1642.astype('bool')) # shape=(1690,)
output = relay.Tuple([uop_1612,call_1636,const_1637,call_1640,const_1641,const_1643,bop_1649,])
output2 = relay.Tuple([uop_1612,call_1638,const_1637,call_1645,const_1641,const_1643,bop_1649,])
func_1671 = relay.Function([var_1611,], output)
mod['func_1671'] = func_1671
mod = relay.transform.InferType()(mod)
mutated_mod['func_1671'] = func_1671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1672 = relay.var("var_1672", dtype = "float64", shape = (10, 7, 14))#candidate|1672|(10, 7, 14)|var|float64
func_1671_call = mutated_mod.get_global_var('func_1671')
call_1673 = func_1671_call(var_1672)
output = call_1673
func_1674 = relay.Function([var_1672], output)
mutated_mod['func_1674'] = func_1674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_1803 = relay.TupleGetItem(func_1490_call(), 0)
call_1804 = relay.TupleGetItem(func_1492_call(), 0)
uop_1810 = relay.asin(call_1803.astype('float32')) # shape=(2, 10, 16)
uop_1812 = relay.asin(call_1804.astype('float32')) # shape=(2, 10, 16)
func_92_call = mod.get_global_var('func_92')
func_94_call = mutated_mod.get_global_var('func_94')
var_1820 = relay.var("var_1820", dtype = "float32", shape = (1690, 1))#candidate|1820|(1690, 1)|var|float32
call_1819 = relay.TupleGetItem(func_92_call(relay.reshape(var_1820.astype('float32'), [13, 10, 13])), 0)
call_1821 = relay.TupleGetItem(func_94_call(relay.reshape(var_1820.astype('float32'), [13, 10, 13])), 0)
func_92_call = mod.get_global_var('func_92')
func_94_call = mutated_mod.get_global_var('func_94')
call_1824 = relay.TupleGetItem(func_92_call(relay.reshape(var_1820.astype('float32'), [13, 10, 13])), 0)
call_1825 = relay.TupleGetItem(func_94_call(relay.reshape(var_1820.astype('float32'), [13, 10, 13])), 0)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
var_1828 = relay.var("var_1828", dtype = "float64", shape = ())#candidate|1828|()|var|float64
call_1827 = relay.TupleGetItem(func_131_call(relay.reshape(var_1828.astype('float64'), []), relay.reshape(call_1819.astype('float32'), [1690,]), ), 2)
call_1829 = relay.TupleGetItem(func_135_call(relay.reshape(var_1828.astype('float64'), []), relay.reshape(call_1819.astype('float32'), [1690,]), ), 2)
output = relay.Tuple([uop_1810,call_1819,var_1820,call_1824,call_1827,var_1828,])
output2 = relay.Tuple([uop_1812,call_1821,var_1820,call_1825,call_1829,var_1828,])
func_1839 = relay.Function([var_1820,var_1828,], output)
mod['func_1839'] = func_1839
mod = relay.transform.InferType()(mod)
var_1840 = relay.var("var_1840", dtype = "float32", shape = (1690, 1))#candidate|1840|(1690, 1)|var|float32
var_1841 = relay.var("var_1841", dtype = "float64", shape = ())#candidate|1841|()|var|float64
output = func_1839(var_1840,var_1841,)
func_1842 = relay.Function([var_1840,var_1841,], output)
mutated_mod['func_1842'] = func_1842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_1879 = relay.TupleGetItem(func_1490_call(), 0)
call_1880 = relay.TupleGetItem(func_1492_call(), 0)
func_191_call = mod.get_global_var('func_191')
func_194_call = mutated_mod.get_global_var('func_194')
var_1895 = relay.var("var_1895", dtype = "bool", shape = (576,))#candidate|1895|(576,)|var|bool
call_1894 = relay.TupleGetItem(func_191_call(relay.reshape(var_1895.astype('bool'), [12, 3, 16])), 2)
call_1896 = relay.TupleGetItem(func_194_call(relay.reshape(var_1895.astype('bool'), [12, 3, 16])), 2)
var_1899 = relay.var("var_1899", dtype = "float64", shape = (2, 10, 16))#candidate|1899|(2, 10, 16)|var|float64
bop_1900 = relay.floor_divide(call_1879.astype('float32'), relay.reshape(var_1899.astype('float32'), relay.shape_of(call_1879))) # shape=(2, 10, 16)
bop_1903 = relay.floor_divide(call_1880.astype('float32'), relay.reshape(var_1899.astype('float32'), relay.shape_of(call_1880))) # shape=(2, 10, 16)
func_1567_call = mod.get_global_var('func_1567')
func_1569_call = mutated_mod.get_global_var('func_1569')
call_1916 = func_1567_call(relay.reshape(bop_1900.astype('float64'), [2, 10, 16]))
call_1917 = func_1567_call(relay.reshape(bop_1900.astype('float64'), [2, 10, 16]))
func_92_call = mod.get_global_var('func_92')
func_94_call = mutated_mod.get_global_var('func_94')
call_1936 = relay.TupleGetItem(func_92_call(relay.reshape(call_1894.astype('float32'), [13, 10, 13])), 0)
call_1937 = relay.TupleGetItem(func_94_call(relay.reshape(call_1894.astype('float32'), [13, 10, 13])), 0)
output = relay.Tuple([call_1894,var_1895,bop_1900,call_1916,call_1936,])
output2 = relay.Tuple([call_1896,var_1895,bop_1903,call_1917,call_1937,])
func_1955 = relay.Function([var_1895,var_1899,], output)
mod['func_1955'] = func_1955
mod = relay.transform.InferType()(mod)
var_1956 = relay.var("var_1956", dtype = "bool", shape = (576,))#candidate|1956|(576,)|var|bool
var_1957 = relay.var("var_1957", dtype = "float64", shape = (2, 10, 16))#candidate|1957|(2, 10, 16)|var|float64
output = func_1955(var_1956,var_1957,)
func_1958 = relay.Function([var_1956,var_1957,], output)
mutated_mod['func_1958'] = func_1958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_1975 = relay.TupleGetItem(func_1490_call(), 0)
call_1976 = relay.TupleGetItem(func_1492_call(), 0)
output = relay.Tuple([call_1975,])
output2 = relay.Tuple([call_1976,])
func_1986 = relay.Function([], output)
mod['func_1986'] = func_1986
mod = relay.transform.InferType()(mod)
mutated_mod['func_1986'] = func_1986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1986_call = mutated_mod.get_global_var('func_1986')
call_1987 = func_1986_call()
output = call_1987
func_1988 = relay.Function([], output)
mutated_mod['func_1988'] = func_1988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_1998 = relay.TupleGetItem(func_1490_call(), 0)
call_1999 = relay.TupleGetItem(func_1492_call(), 0)
func_480_call = mod.get_global_var('func_480')
func_485_call = mutated_mod.get_global_var('func_485')
const_2004 = relay.const([-0.043631,9.944208,-9.217676,-6.623589,-3.939964,8.296834,0.133233,-4.691266,7.884157,6.331869,-8.989169,-2.233332,5.687084,-7.418525,6.356438,-2.262314,-9.294960,5.091939,9.128445,-3.677565,3.438302,-1.876698,-6.820894,1.404923,-2.642327,5.053798,-9.540293,0.042675,-7.192451,-0.294294,-2.563659,9.600464,5.908927,1.881732,7.918173,-6.517126,0.063539,8.067945,1.911287,-6.967656,4.474392,-6.602106,2.999287,-0.522862,8.696647,3.859949,8.197123,-1.880030,6.539940,9.691277,0.938615,-3.022262,1.212628,-9.467480,-5.542972,-3.082494,2.401442,1.734563,-9.164414,-3.969373,1.757295,5.894321,-4.565899,6.327417,7.728583,-0.642942,-3.046955,4.240095,-1.836692,-3.870016,-8.893138,0.021488,5.676627,2.629916,-1.591769,8.492260,3.930993,-3.583838,-8.267176,-0.020171,9.688660,6.514447,0.929090,1.226995,-8.256753,-3.450802,-7.299579,-1.698979,9.026815,5.370084,7.004176,8.730718,6.337112,4.379029,3.304227,9.283424,-1.857837,-2.565582,2.702795,-9.360085,6.339364,4.716889,-0.030165,0.948321,6.791898,9.302538,7.432500,0.884456,-9.008748,-3.706659,-0.977956,-2.864698,-3.591823,-6.565772,-3.586319,-9.175601,-6.341616,9.389558,5.853191,-3.251835], dtype = "float32")#candidate|2004|(120,)|const|float32
const_2005 = relay.const(-3.296083, dtype = "float64")#candidate|2005|()|const|float64
var_2006 = relay.var("var_2006", dtype = "bool", shape = (576,))#candidate|2006|(576,)|var|bool
call_2003 = relay.TupleGetItem(func_480_call(relay.reshape(const_2004.astype('float32'), [10, 3, 4]), relay.reshape(const_2005.astype('float64'), []), relay.reshape(var_2006.astype('bool'), [1, 576]), ), 5)
call_2007 = relay.TupleGetItem(func_485_call(relay.reshape(const_2004.astype('float32'), [10, 3, 4]), relay.reshape(const_2005.astype('float64'), []), relay.reshape(var_2006.astype('bool'), [1, 576]), ), 5)
bop_2009 = relay.multiply(call_1998.astype('uint16'), const_2005.astype('uint16')) # shape=(2, 10, 16)
bop_2012 = relay.multiply(call_1999.astype('uint16'), const_2005.astype('uint16')) # shape=(2, 10, 16)
uop_2015 = relay.cosh(call_2003.astype('float64')) # shape=(1, 576)
uop_2017 = relay.cosh(call_2007.astype('float64')) # shape=(1, 576)
output = relay.Tuple([const_2004,var_2006,bop_2009,uop_2015,])
output2 = relay.Tuple([const_2004,var_2006,bop_2012,uop_2017,])
func_2020 = relay.Function([var_2006,], output)
mod['func_2020'] = func_2020
mod = relay.transform.InferType()(mod)
var_2021 = relay.var("var_2021", dtype = "bool", shape = (576,))#candidate|2021|(576,)|var|bool
output = func_2020(var_2021)
func_2022 = relay.Function([var_2021], output)
mutated_mod['func_2022'] = func_2022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_2049 = relay.TupleGetItem(func_1490_call(), 0)
call_2050 = relay.TupleGetItem(func_1492_call(), 0)
output = call_2049
output2 = call_2050
func_2060 = relay.Function([], output)
mod['func_2060'] = func_2060
mod = relay.transform.InferType()(mod)
output = func_2060()
func_2061 = relay.Function([], output)
mutated_mod['func_2061'] = func_2061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mod.get_global_var('func_2060')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_2064 = func_2060_call()
call_2065 = func_2060_call()
output = relay.Tuple([call_2064,])
output2 = relay.Tuple([call_2065,])
func_2074 = relay.Function([], output)
mod['func_2074'] = func_2074
mod = relay.transform.InferType()(mod)
output = func_2074()
func_2075 = relay.Function([], output)
mutated_mod['func_2075'] = func_2075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_2099 = relay.TupleGetItem(func_1490_call(), 0)
call_2100 = relay.TupleGetItem(func_1492_call(), 0)
output = call_2099
output2 = call_2100
func_2101 = relay.Function([], output)
mod['func_2101'] = func_2101
mod = relay.transform.InferType()(mod)
output = func_2101()
func_2102 = relay.Function([], output)
mutated_mod['func_2102'] = func_2102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2074_call = mod.get_global_var('func_2074')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_2112 = relay.TupleGetItem(func_2074_call(), 0)
call_2113 = relay.TupleGetItem(func_2075_call(), 0)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_2115 = relay.TupleGetItem(func_1986_call(), 0)
call_2116 = relay.TupleGetItem(func_1988_call(), 0)
output = relay.Tuple([call_2112,call_2115,])
output2 = relay.Tuple([call_2113,call_2116,])
func_2118 = relay.Function([], output)
mod['func_2118'] = func_2118
mod = relay.transform.InferType()(mod)
mutated_mod['func_2118'] = func_2118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mutated_mod.get_global_var('func_2118')
call_2119 = func_2118_call()
output = call_2119
func_2120 = relay.Function([], output)
mutated_mod['func_2120'] = func_2120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mod.get_global_var('func_2101')
func_2102_call = mutated_mod.get_global_var('func_2102')
call_2135 = func_2101_call()
call_2136 = func_2101_call()
func_1567_call = mod.get_global_var('func_1567')
func_1569_call = mutated_mod.get_global_var('func_1569')
call_2137 = func_1567_call(relay.reshape(call_2135.astype('float64'), [2, 10, 16]))
call_2138 = func_1567_call(relay.reshape(call_2135.astype('float64'), [2, 10, 16]))
var_2149 = relay.var("var_2149", dtype = "float64", shape = (2, 10, 16))#candidate|2149|(2, 10, 16)|var|float64
bop_2150 = relay.left_shift(call_2135.astype('uint32'), relay.reshape(var_2149.astype('uint32'), relay.shape_of(call_2135))) # shape=(2, 10, 16)
bop_2153 = relay.left_shift(call_2136.astype('uint32'), relay.reshape(var_2149.astype('uint32'), relay.shape_of(call_2136))) # shape=(2, 10, 16)
uop_2158 = relay.atanh(call_2135.astype('float64')) # shape=(2, 10, 16)
uop_2160 = relay.atanh(call_2136.astype('float64')) # shape=(2, 10, 16)
const_2165 = relay.const([[[3.895084,-8.372179,-6.631960,6.694270,2.390855,-0.782587,-1.424598,-8.109222,-7.773753,-3.582003,-0.693119,-3.182381,1.117338,-5.802922,0.008989,0.891477],[-4.221902,7.432238,-8.551156,-0.952883,1.273989,-1.594157,9.322152,-8.497239,9.747719,-5.352793,6.812502,-8.604930,6.237709,-6.955508,-3.357061,9.469006],[9.184631,2.169176,-6.361768,4.396731,3.007521,8.881693,5.521792,-8.379332,-2.910117,-6.262664,5.705662,6.338323,5.518795,-6.938133,9.420641,-2.168304],[-8.075670,-7.032464,-4.427735,-2.221568,-2.618950,-2.452983,8.218818,-2.457870,0.960524,6.292126,1.849934,-8.261453,2.970708,-7.500969,-3.216806,6.062320],[-7.288627,3.159877,-2.364748,-4.311984,-4.188177,-9.526942,0.837146,3.905115,7.351069,-3.837515,3.639224,9.344215,3.328775,8.009451,-6.104100,-7.183463],[8.107111,6.680327,0.182153,-5.591014,6.961657,6.191545,6.342739,1.972001,8.660750,9.649030,-1.461413,9.480239,-0.504134,-8.419222,-7.812909,1.010337],[-9.025788,6.823513,1.817089,6.452365,-1.684028,9.707381,-5.816848,-2.497987,-2.167389,-5.804948,-0.898850,-0.130303,9.711853,4.573547,0.591813,4.137060],[-6.772612,9.276687,-2.970471,-2.510472,8.926123,-2.584030,-0.256963,-6.768987,-5.269285,-4.059421,-9.740477,8.973872,7.947397,4.508290,3.461181,-3.078296],[8.533861,2.838959,7.699026,-2.387254,-3.955450,-9.681016,4.072172,4.395538,2.710775,-1.434101,2.422948,4.006346,8.195712,0.690382,4.521246,-6.912037],[-1.608848,-8.458087,1.875569,-3.192230,0.744225,-5.166268,8.703735,-4.299990,5.094343,8.330993,-2.635665,4.836958,6.963886,3.719777,7.520616,-0.783815]],[[3.545026,3.965252,6.070121,-1.262534,-5.020859,-6.729420,3.332507,-5.314133,4.708631,9.851066,7.188901,9.648483,8.196097,1.852794,-0.075677,-7.838492],[7.252602,-1.127186,-9.237843,1.994971,-4.104064,-1.088331,9.620884,-7.978524,-6.818092,-2.757106,3.193448,8.350987,-6.079085,2.849131,-1.170910,3.297923],[5.517742,-6.623009,-8.188189,-4.176048,9.289569,-6.352158,3.773751,-6.028735,-7.303445,0.592292,-4.738620,4.671455,-2.598006,-1.199655,-0.282775,-6.187211],[5.580069,5.395459,-0.649700,-8.325260,4.008489,-4.833866,-4.152410,-1.948004,-0.205725,-8.814676,-1.860777,7.452229,-6.843965,4.119467,8.324562,-7.165011],[4.254516,2.836656,9.325511,1.189833,-9.808210,0.340157,-9.886634,-6.118434,-4.137978,-5.910046,-4.620521,2.332913,9.859684,2.668882,-8.477435,0.922320],[-1.823993,8.647693,6.617448,-5.293183,1.575946,-9.100438,9.725001,-0.163265,3.631439,7.777043,-7.236569,-2.884396,9.061446,9.724229,4.237967,7.617903],[2.016274,7.949642,-2.347850,-8.833962,4.136352,7.045640,2.265504,-9.562680,-8.524075,-5.052445,-6.357952,-9.151542,7.099419,1.737037,0.595695,-1.277298],[-9.408307,2.967285,3.176718,-8.422757,-8.018535,2.211395,4.312109,-0.949396,6.872182,-7.305417,6.012406,-5.322267,-9.629382,7.107490,-4.041387,-3.861028],[1.711573,5.695938,-1.177930,6.922766,-0.058451,-2.099259,3.587588,9.590673,-0.428040,-2.613599,6.919224,-8.769765,3.779592,0.340671,1.468091,-4.260217],[7.510799,4.209057,8.197116,-4.356317,8.821684,6.051537,9.789597,-6.129271,-2.172087,5.282942,5.938709,-7.048702,5.836377,-5.148987,8.073942,9.184485]]], dtype = "float64")#candidate|2165|(2, 10, 16)|const|float64
bop_2166 = relay.power(uop_2158.astype('float32'), relay.reshape(const_2165.astype('float32'), relay.shape_of(uop_2158))) # shape=(2, 10, 16)
bop_2169 = relay.power(uop_2160.astype('float32'), relay.reshape(const_2165.astype('float32'), relay.shape_of(uop_2160))) # shape=(2, 10, 16)
output = relay.Tuple([call_2137,bop_2150,bop_2166,])
output2 = relay.Tuple([call_2138,bop_2153,bop_2169,])
func_2181 = relay.Function([var_2149,], output)
mod['func_2181'] = func_2181
mod = relay.transform.InferType()(mod)
mutated_mod['func_2181'] = func_2181
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2182 = relay.var("var_2182", dtype = "float64", shape = (2, 10, 16))#candidate|2182|(2, 10, 16)|var|float64
func_2181_call = mutated_mod.get_global_var('func_2181')
call_2183 = func_2181_call(var_2182)
output = call_2183
func_2184 = relay.Function([var_2182], output)
mutated_mod['func_2184'] = func_2184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_2219 = relay.TupleGetItem(func_2118_call(), 0)
call_2220 = relay.TupleGetItem(func_2120_call(), 0)
output = call_2219
output2 = call_2220
func_2242 = relay.Function([], output)
mod['func_2242'] = func_2242
mod = relay.transform.InferType()(mod)
mutated_mod['func_2242'] = func_2242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2242_call = mutated_mod.get_global_var('func_2242')
call_2243 = func_2242_call()
output = call_2243
func_2244 = relay.Function([], output)
mutated_mod['func_2244'] = func_2244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_2286 = relay.TupleGetItem(func_2118_call(), 1)
call_2287 = relay.TupleGetItem(func_2120_call(), 1)
func_480_call = mod.get_global_var('func_480')
func_485_call = mutated_mod.get_global_var('func_485')
var_2289 = relay.var("var_2289", dtype = "float32", shape = (30, 4))#candidate|2289|(30, 4)|var|float32
var_2290 = relay.var("var_2290", dtype = "float64", shape = ())#candidate|2290|()|var|float64
const_2291 = relay.const([True,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,True], dtype = "bool")#candidate|2291|(576,)|const|bool
call_2288 = relay.TupleGetItem(func_480_call(relay.reshape(var_2289.astype('float32'), [10, 3, 4]), relay.reshape(var_2290.astype('float64'), []), relay.reshape(const_2291.astype('bool'), [1, 576]), ), 0)
call_2292 = relay.TupleGetItem(func_485_call(relay.reshape(var_2289.astype('float32'), [10, 3, 4]), relay.reshape(var_2290.astype('float64'), []), relay.reshape(const_2291.astype('bool'), [1, 576]), ), 0)
func_2074_call = mod.get_global_var('func_2074')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_2308 = relay.TupleGetItem(func_2074_call(), 0)
call_2309 = relay.TupleGetItem(func_2075_call(), 0)
func_1839_call = mod.get_global_var('func_1839')
func_1842_call = mutated_mod.get_global_var('func_1842')
const_2339 = relay.const([7.894227,3.797787,3.611333,-0.807444,-6.251335,-9.266554,5.715516,-0.877456,5.927056,-0.944871,-8.950692,3.893488,0.768056,8.253839,2.693899,-6.364315,-2.473223,7.391608,0.218939,8.469405,7.273145,6.473423,0.908231,-7.109131,-6.247158,-2.199880,-5.177483,-9.535824,-8.900464,-9.341669,-4.658838,1.757296,-6.518672,0.111104,-2.270605,0.970200,-1.161901,-1.787951,9.942450,-2.519698,-5.386025,-9.528149,7.756025,-4.424928,0.483849,0.778036,2.771918,-0.226926,2.974486,1.567213,-8.287387,4.778870,4.387530,2.614946,-7.541894,-3.869664,-4.946313,2.061922,-5.107283,2.498422,-0.866326,0.719985,9.628165,8.603169,2.363722,3.141115,6.339917,-9.586344,-1.999541,5.369084,-9.837762,1.870789,1.529757,-7.426388,-5.410644,3.661209,-9.369977,-2.843840,-1.958569,-8.516428,4.988296,-9.953654,-0.664045,4.210599,-4.720446,7.540021,4.776899,1.810671,0.085333,-9.943062,9.864521,-7.679755,-4.491021,-1.427807,-9.753143,5.624564,-3.045626,-5.724963,-5.709131,8.660498,7.611587,1.255582,-6.099329,2.261252,-6.943097,2.125943,7.602234,4.693448,5.262470,-9.114114,-5.551874,7.558337,8.980359,3.539803,6.108270,-1.023788,9.380642,8.016752,-7.124422,1.821758,-5.868515,6.959944,-1.671850,-7.892340,-5.960573,4.898133,-2.604929,5.991401,6.258317,7.699060,4.373681,5.131036,-4.444948,-5.866439,2.634628,2.167398,1.452407,4.005476,-5.849035,9.326092,-0.039927,1.981821,4.510694,6.655883,-3.969262,2.581195,-7.034241,-1.663821,-4.545372,-2.965207,6.663749,2.278526,-7.893152,-9.864406,-5.666603,9.596283,1.125097,3.914953,5.247048,1.429796,-1.787555,4.148683,5.155659,3.350011,9.158493,4.369406,8.315533,3.081766,3.531242,-3.649480,7.031888,-0.261966,9.738131,4.846052,-4.220800,-3.824537,2.405284,-2.078824,2.991374,-3.444251,7.967069,0.211554,2.492597,-7.848612,0.238372,-9.757980,-2.103068,4.479329,7.899933,-7.759202,7.146223,-3.009992,-2.894525,0.882529,-5.281907,-5.619680,9.538681,-3.515715,-4.553678,6.674035,-6.636564,-2.361195,-8.676382,-4.176020,-9.225864,-5.714240,5.188330,1.632749,3.783416,6.916182,-7.944821,3.591905,-5.761989,-5.813462,-9.868289,-3.999987,-7.985183,4.987118,-5.188085,-8.959267,-6.127180,-9.781399,8.580554,1.848426,-8.263021,-7.587827,2.888893,-5.271644,4.222810,-9.559274,-2.081516,-9.975237,-1.565406,1.118121,7.573905,7.886969,-6.827746,9.674097,3.279675,-4.931920,-9.416359,9.051095,-2.485938,4.552054,-9.610181,5.743988,-1.695326,3.149200,6.993930,5.471995,-9.349192,-9.051815,-0.637610,-5.276660,9.520113,4.459757,7.347185,6.256516,-2.692551,-4.008493,-0.356652,1.481228,4.242881,0.139645,1.027637,-7.278933,-3.811742,6.839805,-1.053004,-3.655489,-2.542174,1.118835,-4.078407,-1.230994,8.413967,-9.369853,-0.675037,-0.528632,-3.255219,5.427249,-8.561044,-9.082202,-0.611207,0.676540,3.866474,-2.782721,9.600262,-3.158635,-0.528668,-4.449991,9.445191,-1.934244,-5.867168,6.877191,-0.771977,3.654699,-4.932126,7.453458,4.317227,-5.823563,9.125418,-0.486910,-1.430415,-3.385872,0.812469,4.320670,2.298734,2.458040,-4.818881,4.662600,3.394825,-2.796654,-1.905922,-5.405180,-0.710130,-2.617993,-1.275960,2.098515,4.720449,9.485560,-1.649329,2.312801,-4.606673,-5.155314,-6.820830,-7.163540,-8.715756,9.969002,-2.941864,-0.019469,-4.769032,-5.777819,7.850836,-3.692210,-5.244334,-5.723062,-3.592973,-4.555758,-1.301997,8.898197,-8.313436,-9.411495,-3.053383,1.987927,0.451448,-0.150265,7.641210,-5.674864,-8.206755,7.058672,7.295942,2.354779,-5.879461,-6.296080,-7.372101,8.825383,1.135476,0.465725,6.095324,5.492077,-3.386503,2.964855,-6.749609,9.138665,-5.633519,9.456266,-4.185108,0.723122,1.041457,5.083592,8.677571,-2.999425,-7.873617,1.405055,7.252220,-8.317292,-3.025774,4.749155,-1.860893,7.502412,5.854021,-4.420680,9.486229,-1.482041,3.349242,6.188999,-3.358888,-1.804324,1.497171,2.519330,-6.938399,8.892022,7.026297,2.969624,9.287673,-5.418219,-1.750074,-3.023381,-2.386487,-5.901796,-2.389951,-5.151280,1.127500,2.937312,-1.734568,3.355911,-2.327692,5.822877,0.713996,3.068381,0.875840,-8.193515,-6.255235,-7.667643,7.975384,1.709326,-7.367206,7.214837,-1.925655,-6.175051,6.744087,7.448071,-7.381186,2.617016,7.099325,-4.401535,-9.944552,-1.400696,7.849579,0.984125,5.417051,-1.323942,-5.121435,-9.164436,-2.544450,-8.328049,-9.028842,-6.854632,-3.880019,5.047314,-0.990805,0.052706,-7.519421,-9.303881,-4.208376,-1.980453,-8.497482,2.131036,-2.515060,4.288881,-6.218765,-5.216422,0.302428,-1.071025,-6.713792,7.387386,3.305623,1.329653,9.156208,-3.767655,4.872719,3.480728,3.154724,8.988807,-0.970533,1.805403,-2.742512,-9.242564,-2.382224,7.929429,-3.571720,9.757002,4.304426,6.430604,-8.212571,-5.602127,-7.474608,8.148542,-6.364320,-7.330355,3.689126,-8.073056,9.102654,5.089844,7.501172,3.377252,-9.326153,6.601288,8.574483,-6.439625,-4.130252,-6.283491,-7.824624,5.960835,-9.579902,-8.206575,2.428287,2.164637,5.806598,-8.808675,1.251807,-8.451964,-7.903216,-7.241632,-1.342628,-9.909118,8.324504,0.023116,-9.024262,1.645577,-7.874921,0.028891,-3.036589,8.444082,3.259819,-2.515605,9.845264,-6.399085,-0.784825,8.551277,1.965504,-9.326649,-9.913616,6.701220,-9.507147,4.487854,-8.136296,-9.101619,3.669159,-6.428475,2.747048,-4.310253,1.084408,-5.281365,3.658171,-6.035174,0.486944,8.427590,-1.009600,9.337929,5.896136,-8.634403,2.974967,-9.597506,-5.060042,5.677378,6.774033,-9.135956,4.433570,0.570581,-8.702729,2.684211,-5.625961,-2.192584,9.378004,8.179697,-2.728062,-6.649948,-0.032481,1.028067,3.447275,-2.482794,-6.995158,5.152395,1.689507,-3.670370,-7.686176,-7.729642,-8.769767,-6.086753,-4.260281,0.896760,5.298038,-7.795983,-9.509594,-5.954765,-2.048249,8.882867,5.093831,-9.748255,1.758373,-5.509772,4.142217,-7.851845,6.033013,7.957753,-3.573144,7.178305,8.130886,7.074187,4.273248,2.411410,-5.241584,-8.372980,-3.329923,-6.351083,9.662387,2.014695,0.177033,-6.298310,-6.119391,-9.313507,-7.734617,-8.437635,7.735666,-8.168810,5.082046,3.845920,-7.656544,8.299295,-8.662551,-3.564027,0.635506,-6.658617,5.719253,2.466799,9.807916,-8.074489,0.550999,0.633584,-2.360166,2.762613,4.322493,2.582898,-5.677526,-8.961486,-1.494266,-7.053714,5.720129,1.881114,-3.023730,-5.766875,-3.309514,2.128968,-7.934916,9.986083,-3.309579,-0.132795,4.909521,5.921062,6.733721,-7.965589,-9.708759,2.197858,-2.417463,-0.509402,0.382355,-8.195232,0.205690,-3.993460,-0.347589,-3.553790,-3.458424,-8.417877,-2.987786,-6.513490,-8.829516,-0.310326,5.037571,-6.257159,-5.468086,-8.460623,7.565496,0.794324,3.454818,-4.472369,5.191332,-2.340423,-3.427132,6.089787,4.315009,-9.084133,0.539997,-2.063776,-6.756635,-5.794161,-4.001314,-5.452056,9.392487,-9.411108,2.848708,-7.241300,-2.195704,9.660529,2.185773,3.952324,-6.305918,-3.588905,-9.025294,-3.878827,1.572132,4.334426,-8.255624,-7.916336,-1.557270,-9.452212,9.561726,-8.545092,3.237381,-8.885732,6.759584,5.878242,7.440378,0.693570,2.700558,-6.539683,-9.320353,-9.900472,-5.104451,-4.216696,6.241187,-8.028275,4.749272,-9.490102,-7.813384,8.149065,9.478136,1.910767,1.055654,-8.895548,4.264376,1.166558,7.985434,-8.815785,-5.630580,-2.626426,7.554851,2.673366,1.098441,9.065509,-4.023152,6.412145,-1.321176,3.607756,2.816473,-9.468873,-6.875715,-7.870925,2.584219,4.345191,7.262657,2.541148,5.155744,2.295408,9.442540,-2.241320,-0.162319,6.136679,5.570627,-0.777831,-1.264427,2.119906,-1.448675,-2.582952,-8.433102,-4.593999,0.493146,-8.658339,-8.168042,-4.447446,-2.009838,6.571349,-5.275484,0.820467,7.607190,6.077623,-0.754843,7.779639,-4.809161,-0.514416,7.625570,4.263431,7.427441,6.055863,9.217372,9.238756,5.715012,-5.175375,1.767969,4.879569,7.997604,-6.571049,7.197915,6.152909,-1.731759,-8.954197,-5.052358,-3.485283,6.171835,4.447800,4.915797,-6.591551,2.042168,6.589518,8.921422,-5.172427,1.477589,-4.156911,-7.336495,-2.778912,-6.597144,-8.956252,-9.566317,-8.942264,7.574275,5.166161,-1.607562,7.316199,-6.095045,-6.023423,8.845302,3.778463,6.991864,6.539455,8.406015,-9.249329,-5.835686,-8.462649,-2.385792,-1.848514,-9.655381,-9.759021,9.444095,-5.875594,-2.205290,0.807836,0.682244,-8.862479,3.922570,-7.673042,-2.594699,-7.393795,-0.330967,4.430805,7.436137,-0.274336,1.656183,-8.398019,-2.122766,0.112519,3.517634,-0.063651,7.633991,5.855345,-3.327830,2.142002,4.642772,3.003222,-8.958272,-8.844237,-0.954008,4.301902,4.390085,-3.088865,-6.603648,2.164776,2.264402,6.432475,-2.173561,5.316380,-4.669913,2.006360,-9.984915,6.566157,-2.158939,-2.969491,-5.004543,-6.484622,5.322734,4.853294,-8.080652,5.472759,-0.027192,-2.371703,4.325462,0.462527,-3.865103,0.987862,1.777173,4.111265,-8.469240,-3.089369,9.353922,4.215533,-6.401463,3.583883,5.360194,-4.215413,8.623215,-5.649557,-6.878538,-5.149744,7.201034,0.448166,4.933429,-7.759982,-7.795314,-9.213692,5.431643,-7.676419,1.062892,9.747751,-0.484176,-4.908119,-1.017037,-8.997984,9.960288,-7.609755,0.386633,5.875828,-2.574415,-3.737560,0.799141,6.976360,-8.579092,-6.376781,5.196691,-1.103301,2.837069,0.139008,-9.404764,-5.078970,-7.721398,-1.004733,-4.260831,-7.453147,5.603422,8.498855,-8.133064,8.806488,-0.215901,-4.269670,4.997366,4.252665,6.994005,7.054930,-4.595096,7.038727,-5.273843,-6.084326,-9.710061,0.030009,-2.037795,-5.264551,0.447721,5.385901,7.597153,7.025505,7.742100,0.319824,4.823331,-5.123963,-7.994382,7.197845,7.726477,4.435150,-4.102555,4.838115,4.809306,8.540341,0.205182,-9.837938,-2.607459,-9.647155,-7.430885,7.560666,-0.310154,3.259770,9.759171,3.686039,8.954017,-1.162557,3.160018,-6.043242,6.077325,-7.199857,-4.638299,1.429581,-2.972972,-9.798139,9.266568,4.899035,1.752135,-2.857731,1.659203,5.267802,-5.642211,-3.247110,6.231095,-4.309309,4.821086,-5.818922,0.514315,-5.615984,4.756125,-9.404139,-0.229637,-6.303647,4.089926,6.801352,-8.948676,0.324570,-8.016454,-9.898652,-7.011847,1.184430,3.672373,0.355342,1.999889,8.556772,3.070262,-1.053926,3.771288,0.686361,1.650100,0.115441,-1.524213,5.215107,-0.445477,-6.139791,-6.361349,-9.198419,2.356325,1.599958,-0.050216,2.129331,-8.451537,0.799619,-5.345311,-5.862971,3.358306,5.819758,-5.354661,9.978716,9.084828,9.313991,7.940662,4.800116,-8.031103,0.451475,7.956624,-6.479181,-9.565339,4.022788,-0.506899,9.082218,2.870373,9.914220,1.109305,2.927215,3.855485,-4.090764,-4.663114,2.731297,-1.554695,6.453303,-6.537462,-5.779986,-4.172745,1.814237,3.643700,-8.875085,-3.216422,1.392585,-8.715140,-6.395165,1.495315,-0.774061,-9.396014,-8.587649,7.316343,1.404066,8.133149,-0.772373,3.828539,4.667607,-1.345779,-6.797111,9.649201,-1.322252,-5.345786,6.783198,-6.574089,4.029543,-3.897783,1.839856,-4.048641,5.417705,-0.926219,2.820463,6.745677,6.276649,-7.530754,-8.218174,6.557624,-1.570060,2.373364,5.697939,7.550981,1.082600,1.903437,0.625381,2.016580,6.999392,9.778770,0.196666,0.702748,-0.799367,-1.185379,-5.029526,-5.017009,6.313288,-8.897524,1.507145,-9.012518,4.113862,4.339288,3.297069,3.808700,9.518880,6.029124,-3.907692,1.632150,-3.256463,5.309329,6.747280,5.819374,-4.525321,8.962957,-0.230463,-1.394633,6.604803,-5.929260,-7.397429,-4.297116,-8.201030,-6.030756,-6.177154,-5.157598,-9.164860,6.159609,1.593444,-7.193718,3.797366,8.237730,9.733097,2.785379,3.413403,6.971806,-0.576432,1.907075,1.781337,9.306793,9.084199,8.755346,9.361810,8.006360,2.513434,-9.780452,-6.687705,-4.095552,5.499632,-9.858378,-4.534997,-4.312747,3.963185,5.742445,-8.954505,0.650408,-5.299392,5.657966,4.470022,-5.122617,-6.590983,1.211535,-3.709570,8.676976,-6.190994,3.679375,6.532493,4.447939,7.531999,-9.547386,0.018734,-7.381149,-4.772927,0.468468,-3.409297,-0.516144,0.441334,7.447944,-1.549340,9.080703,8.195407,6.145886,1.655511,0.732876,7.038775,-5.524033,0.183764,3.678749,-8.926644,-3.697734,-0.795881,1.770424,-5.236050,-3.480229,1.329145,2.366615,-5.762000,-6.451365,1.748423,-2.114276,4.506261,0.991634,2.033233,-2.381735,-4.503954,3.232667,3.670492,-9.635033,8.468697,-7.183766,-6.310320,8.723795,-2.392697,-2.631981,-7.995877,4.711899,2.268415,-5.036992,9.579308,-5.613594,1.830199,-2.169614,7.188931,2.195221,9.667044,8.970413,2.979133,-9.073975,-6.730458,-2.545860,-2.447525,-0.044738,-6.897896,-3.117232,3.260720,3.724305,-6.398170,-9.692831,-7.162658,9.436371,8.718418,-9.214598,6.767764,3.498424,7.069207,-2.090846,8.723540,-8.436028,-7.143495,8.951931,6.125296,-8.449198,-5.983006,6.758006,-4.857276,9.617531,-3.768046,8.400472,-7.290368,0.531062,-8.048990,6.634175,4.547978,1.020519,4.769618,0.933324,-7.524579,-1.787491,-4.449003,8.675107,-8.541886,5.151327,-2.085226,1.826507,7.618062,9.961317,-9.281947,4.361111,-2.176711,3.000691,9.574937,-9.568493,3.173945,-4.731757,6.786511,-0.979465,-8.322273,-5.215469,-6.882024,-6.563441,-9.331249,9.239217,-0.412490,-7.356867,-6.130603,-7.269951,8.388016,7.620901,-3.045336,-8.330734,3.068194,5.765552,-9.357371,3.720168,2.107975,-1.602559,9.824971,7.436230,-7.708700,-0.967278,2.632973,-5.597576,6.503123,4.922345,-9.661915,1.900402,8.764510,0.368206,-2.103036,-5.743795,-7.968490,-0.072967,4.051428,-5.917024,1.076388,-4.149215,3.387126,2.205426,-6.346965,-9.827236,6.837971,-1.303655,4.033491,-7.779331,-8.805844,2.476545,-3.771507,-0.369296,1.163050,3.514195,8.705157,-0.230812,9.066732,-3.566417,-9.492817,-4.838044,-8.954657,-9.656352,-6.957509,-3.232533,-6.688771,-6.949346,3.985955,-9.425715,8.363351,1.909198,8.017362,5.792842,-9.196103,-8.916186,3.596751,-5.026676,7.820871,5.065983,6.651628,2.508807,3.884961,-3.966451,-7.292783,-7.832794,3.932597,9.572821,8.626664,0.512204,-6.678321,-1.054585,-4.597683,1.490549,-7.513045,9.776763,-5.855710,6.438900,-4.862377,-3.096877,-3.801608,-0.197860,1.253575,-9.390234,5.560191,-1.372701,5.891507,8.161478,5.282385,5.711295,1.361855,7.481186,0.766299,7.065529,2.947646,2.592593,-0.378402,7.161810,5.853744,-8.657335,4.383359,-3.915821,-7.785033,-4.601831,-2.565976,5.464774,-6.268141,-2.225699,3.772822,-0.032084,2.840028,-3.523845,1.918308,4.168149,1.784286,8.066422,-2.390073,3.918835,1.163809,-2.435040,5.028149,3.377338,7.473095,-8.194343,-1.860094,7.103346,-1.491635,9.643278,6.803983,-7.963547,0.472578,4.695590,5.946700,-5.273197,-7.475385,-7.988391,-4.406389,8.452546,5.147328,-3.670635,-8.330344,-2.325947,5.954660,9.141993,-2.714053,6.064509,3.440540,-8.878969,7.138340,-6.748965,2.766574,7.595707,-7.824568,5.356847,-1.812670,9.562411,2.145278,6.916391,-3.278262,1.375187,-3.068963,-9.712846,1.168226,-7.574295,6.469257,-1.279039,-1.233578,-0.228230,2.865699,-7.643013,9.523898,-6.439485,0.179932,6.855245,-7.648271,1.822904,3.879466,5.096784,-4.191553,2.775038,-8.334064,-9.002409,2.286231,5.282443,3.702551,4.444901,-6.235605,7.591272,5.798527,4.461399,-6.970806,9.860128,-3.783513,-7.203597,-1.768373,-0.065130,-4.679734,4.812151,7.621699,-6.292939,2.033826,4.017986,3.012687,5.719422,9.140177,1.296001,2.294421,0.854549,7.249237,-9.765076,0.369699,-4.969013,-3.056841,3.372663,-1.168180,-1.849324,9.619649,2.413879,-8.859198,-7.440110,8.971222,3.921606,-3.225760,-7.661275,9.108473,4.734985,4.335398,-8.024778,-7.202815,2.859183,2.917814,-8.679946,4.047336,8.504815,-0.778349,3.573912,1.601236,8.221990,9.450132,2.983372,-8.729738,6.708032,-6.768693,0.716415,-9.742303,-2.730595,-3.579595,-4.765585,-2.358905,-0.495687,1.028291,1.835107,-4.433960,-6.958967,-3.872629,-4.048494,1.757361,3.528774,5.615151,-2.413343,1.970812,1.358343,1.117017,-2.701172,-0.075811,-4.251673,-0.227047,-1.211147,-7.326444,1.762481,5.179305,-4.996678,4.143492,-3.000342,-2.854724,-8.775314,0.119872,-9.505737,-1.421437,4.663109,1.029693,-8.596023,8.837053,-4.958138,-6.476015,-5.099032,-1.897777,-6.836130,-4.469765,-6.706606,5.546969,0.481384,7.849727,0.208977,-4.292937,-5.498616,-0.678505,6.261182,1.332563,-4.454760,6.775241,6.626620,8.334346,-0.772649,3.989581,-3.713644,9.593555,9.679843,1.733125,-8.134665,8.396525,2.568699,-8.661366,0.495595,3.155373,2.856789,7.473595,-1.002833,-2.675771,-9.359169,4.655290,-9.866796,-9.518294,6.249208,-0.654241,2.156005,-3.251979,4.006422,-5.323930,9.087562,-9.108436,-8.408771,8.117656,-4.080942,9.164617,2.300351,-4.402677,-4.933368,-9.727578,-1.834167,1.464003,-7.882925,6.509961,-7.913934,4.566117,1.789255,-3.228714,1.008078,-3.464991,5.302289,-5.891379,-9.651053,-4.046889,-4.570541,2.525242,6.982528,-4.173053,-3.089646,-6.034493,6.080340,-1.952314,4.132844,7.700307,6.261277,0.018710,2.319036,8.672020,-4.105400,-2.281883,-5.322543,3.340464,2.716228,-8.696113], dtype = "float32")#candidate|2339|(1690,)|const|float32
call_2338 = relay.TupleGetItem(func_1839_call(relay.reshape(const_2339.astype('float32'), [1690, 1]), relay.reshape(var_2290.astype('float64'), []), ), 0)
call_2340 = relay.TupleGetItem(func_1842_call(relay.reshape(const_2339.astype('float32'), [1690, 1]), relay.reshape(var_2290.astype('float64'), []), ), 0)
output = relay.Tuple([call_2286,call_2288,var_2289,var_2290,const_2291,call_2308,call_2338,const_2339,])
output2 = relay.Tuple([call_2287,call_2292,var_2289,var_2290,const_2291,call_2309,call_2340,const_2339,])
func_2343 = relay.Function([var_2289,var_2290,], output)
mod['func_2343'] = func_2343
mod = relay.transform.InferType()(mod)
var_2344 = relay.var("var_2344", dtype = "float32", shape = (30, 4))#candidate|2344|(30, 4)|var|float32
var_2345 = relay.var("var_2345", dtype = "float64", shape = ())#candidate|2345|()|var|float64
output = func_2343(var_2344,var_2345,)
func_2346 = relay.Function([var_2344,var_2345,], output)
mutated_mod['func_2346'] = func_2346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_2422 = relay.TupleGetItem(func_1490_call(), 0)
call_2423 = relay.TupleGetItem(func_1492_call(), 0)
const_2429 = relay.const([[[-2.505432,8.408345,1.752947,8.109177,-9.572407,-8.587240,-4.411769,5.208396,8.913067,1.958085,8.550074,-6.454068,-0.015233,6.752139,-7.331934,-9.002150],[-8.520892,-3.998769,-7.873375,-0.424361,-0.504917,8.614483,3.224717,-4.643360,-2.910032,-0.961260,3.832223,-4.395697,-2.835216,-0.163396,-4.328276,2.338025],[-4.202649,-8.833918,-6.491656,8.075463,9.173853,8.768465,4.645141,-3.024835,2.638151,3.249295,6.552601,-9.505313,-4.881926,-6.355129,5.124390,4.815029],[3.599287,-4.967886,-5.284401,-8.084495,8.754903,5.519671,8.097281,-8.216425,-1.177114,-6.033767,5.128053,2.844187,1.734988,0.251310,-0.042273,7.998644],[-2.811577,2.053765,9.945759,7.396218,6.084672,-4.455192,-0.977261,8.244509,-5.940292,-6.457015,3.985813,4.641693,8.429861,2.802038,6.702148,-8.040903],[3.796028,2.303414,5.057344,8.159174,0.211238,-9.696983,-7.634163,-4.922409,3.663645,8.850864,-2.129516,4.955807,6.776249,0.951745,0.557336,-0.842255],[5.456587,-8.128372,-3.397289,1.563898,3.629854,3.638158,-3.463770,-1.261552,-2.854773,-5.540768,8.636200,5.631249,-6.633018,2.997043,-7.425665,-0.971065],[1.471323,-9.955425,-3.844303,0.424770,5.618606,-3.043960,-1.652777,0.720491,-9.842531,-6.635722,-7.448953,-9.320020,-6.388456,-3.261557,5.082695,0.607792],[4.277266,1.931616,9.389455,8.266241,2.630997,-6.537841,2.938927,0.645502,9.448036,8.099872,7.673821,0.348723,7.777970,-3.649005,-9.896653,-0.327607],[2.666296,-5.117751,-0.437421,-2.210564,8.676193,-1.755274,-3.632960,-6.604502,1.804483,9.703502,7.747028,-9.764213,0.568764,7.895666,-7.865667,5.281387]],[[3.759914,7.485934,-8.697085,-1.110874,-9.159193,-9.401290,-9.078788,5.190565,-9.942140,-2.076456,9.703180,-1.086854,2.531976,-8.211521,0.913502,9.786729],[4.490526,8.770818,-5.506267,9.870370,-0.492815,-0.215076,-2.152344,-2.821577,-4.110266,-1.875045,2.653295,-9.848326,6.092200,1.843031,7.160271,3.833903],[0.460163,-0.134685,-1.567251,-7.770985,8.869414,6.590495,-8.256540,-6.735661,-3.927965,-1.105822,3.245463,-3.385458,-0.831464,-1.615761,6.211675,-6.404754],[-4.878616,-8.393124,8.079216,1.650345,3.100841,-3.384743,-7.734484,8.688447,-3.484802,-5.396700,-2.204943,-2.162229,-1.613410,-0.787632,-9.721173,-3.013043],[8.765668,-2.183680,-9.310155,1.241515,-3.274560,7.706784,-8.032570,-9.170380,7.149664,2.120011,4.626813,-3.743480,-7.628713,2.087180,2.246430,8.089880],[4.027248,3.783779,3.023461,5.762352,9.971751,-0.450702,9.011108,-9.655957,4.235019,7.333053,3.192713,6.880403,-2.246455,-8.706858,-1.693722,1.443433],[5.348084,8.601791,6.709125,3.117652,-4.602096,4.441603,-4.547581,-5.906364,5.143014,-3.185718,2.807997,-7.752924,9.881972,3.446597,-7.652643,8.729757],[-4.618750,-9.207335,9.532612,-7.568591,3.589545,-4.632162,9.452853,4.131262,-2.269891,7.924339,7.960534,8.456914,-5.028243,1.454661,7.831574,9.536884],[2.610901,-2.482398,0.900000,-8.234226,-2.849811,-4.600813,6.636628,-3.894621,6.114280,6.589317,6.700167,7.033278,-2.857753,-3.013625,3.458883,5.444369],[0.271427,-7.966074,-1.115612,3.186735,3.672447,-1.370490,3.736110,-9.212397,-2.810174,-3.787043,-2.097664,7.369802,-4.551368,6.332970,1.205930,-6.562018]]], dtype = "float64")#candidate|2429|(2, 10, 16)|const|float64
bop_2430 = relay.not_equal(call_2422.astype('bool'), relay.reshape(const_2429.astype('bool'), relay.shape_of(call_2422))) # shape=(2, 10, 16)
bop_2433 = relay.not_equal(call_2423.astype('bool'), relay.reshape(const_2429.astype('bool'), relay.shape_of(call_2423))) # shape=(2, 10, 16)
output = bop_2430
output2 = bop_2433
func_2458 = relay.Function([], output)
mod['func_2458'] = func_2458
mod = relay.transform.InferType()(mod)
output = func_2458()
func_2459 = relay.Function([], output)
mutated_mod['func_2459'] = func_2459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mod.get_global_var('func_2101')
func_2102_call = mutated_mod.get_global_var('func_2102')
call_2517 = func_2101_call()
call_2518 = func_2101_call()
func_2101_call = mod.get_global_var('func_2101')
func_2102_call = mutated_mod.get_global_var('func_2102')
call_2529 = func_2101_call()
call_2530 = func_2101_call()
output = relay.Tuple([call_2517,call_2529,])
output2 = relay.Tuple([call_2518,call_2530,])
func_2534 = relay.Function([], output)
mod['func_2534'] = func_2534
mod = relay.transform.InferType()(mod)
mutated_mod['func_2534'] = func_2534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2534_call = mutated_mod.get_global_var('func_2534')
call_2535 = func_2534_call()
output = call_2535
func_2536 = relay.Function([], output)
mutated_mod['func_2536'] = func_2536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_2561 = relay.TupleGetItem(func_2534_call(), 0)
call_2562 = relay.TupleGetItem(func_2536_call(), 0)
output = relay.Tuple([call_2561,])
output2 = relay.Tuple([call_2562,])
func_2563 = relay.Function([], output)
mod['func_2563'] = func_2563
mod = relay.transform.InferType()(mod)
mutated_mod['func_2563'] = func_2563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2563_call = mutated_mod.get_global_var('func_2563')
call_2564 = func_2563_call()
output = call_2564
func_2565 = relay.Function([], output)
mutated_mod['func_2565'] = func_2565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_2589 = relay.TupleGetItem(func_2118_call(), 0)
call_2590 = relay.TupleGetItem(func_2120_call(), 0)
var_2601 = relay.var("var_2601", dtype = "float64", shape = (2, 10, 16))#candidate|2601|(2, 10, 16)|var|float64
bop_2602 = relay.less_equal(call_2589.astype('bool'), relay.reshape(var_2601.astype('bool'), relay.shape_of(call_2589))) # shape=(2, 10, 16)
bop_2605 = relay.less_equal(call_2590.astype('bool'), relay.reshape(var_2601.astype('bool'), relay.shape_of(call_2590))) # shape=(2, 10, 16)
output = bop_2602
output2 = bop_2605
func_2619 = relay.Function([var_2601,], output)
mod['func_2619'] = func_2619
mod = relay.transform.InferType()(mod)
mutated_mod['func_2619'] = func_2619
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2620 = relay.var("var_2620", dtype = "float64", shape = (2, 10, 16))#candidate|2620|(2, 10, 16)|var|float64
func_2619_call = mutated_mod.get_global_var('func_2619')
call_2621 = func_2619_call(var_2620)
output = call_2621
func_2622 = relay.Function([var_2620], output)
mutated_mod['func_2622'] = func_2622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2242_call = mod.get_global_var('func_2242')
func_2244_call = mutated_mod.get_global_var('func_2244')
call_2629 = func_2242_call()
call_2630 = func_2242_call()
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
var_2635 = relay.var("var_2635", dtype = "float64", shape = ())#candidate|2635|()|var|float64
var_2636 = relay.var("var_2636", dtype = "float32", shape = (1690,))#candidate|2636|(1690,)|var|float32
call_2634 = relay.TupleGetItem(func_131_call(relay.reshape(var_2635.astype('float64'), []), relay.reshape(var_2636.astype('float32'), [1690,]), ), 0)
call_2637 = relay.TupleGetItem(func_135_call(relay.reshape(var_2635.astype('float64'), []), relay.reshape(var_2636.astype('float32'), [1690,]), ), 0)
uop_2645 = relay.acosh(var_2636.astype('float64')) # shape=(1690,)
uop_2649 = relay.log2(uop_2645.astype('float32')) # shape=(1690,)
func_92_call = mod.get_global_var('func_92')
func_94_call = mutated_mod.get_global_var('func_94')
call_2655 = relay.TupleGetItem(func_92_call(relay.reshape(var_2636.astype('float32'), [13, 10, 13])), 0)
call_2656 = relay.TupleGetItem(func_94_call(relay.reshape(var_2636.astype('float32'), [13, 10, 13])), 0)
output = relay.Tuple([call_2629,call_2634,var_2635,uop_2649,call_2655,])
output2 = relay.Tuple([call_2630,call_2637,var_2635,uop_2649,call_2656,])
func_2660 = relay.Function([var_2635,var_2636,], output)
mod['func_2660'] = func_2660
mod = relay.transform.InferType()(mod)
var_2661 = relay.var("var_2661", dtype = "float64", shape = ())#candidate|2661|()|var|float64
var_2662 = relay.var("var_2662", dtype = "float32", shape = (1690,))#candidate|2662|(1690,)|var|float32
output = func_2660(var_2661,var_2662,)
func_2663 = relay.Function([var_2661,var_2662,], output)
mutated_mod['func_2663'] = func_2663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_2705 = relay.TupleGetItem(func_1490_call(), 0)
call_2706 = relay.TupleGetItem(func_1492_call(), 0)
output = call_2705
output2 = call_2706
func_2734 = relay.Function([], output)
mod['func_2734'] = func_2734
mod = relay.transform.InferType()(mod)
mutated_mod['func_2734'] = func_2734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2734_call = mutated_mod.get_global_var('func_2734')
call_2735 = func_2734_call()
output = call_2735
func_2736 = relay.Function([], output)
mutated_mod['func_2736'] = func_2736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mod.get_global_var('func_2101')
func_2102_call = mutated_mod.get_global_var('func_2102')
call_2753 = func_2101_call()
call_2754 = func_2101_call()
func_1567_call = mod.get_global_var('func_1567')
func_1569_call = mutated_mod.get_global_var('func_1569')
call_2755 = func_1567_call(relay.reshape(call_2753.astype('float64'), [2, 10, 16]))
call_2756 = func_1567_call(relay.reshape(call_2753.astype('float64'), [2, 10, 16]))
output = relay.Tuple([call_2753,call_2755,])
output2 = relay.Tuple([call_2754,call_2756,])
func_2772 = relay.Function([], output)
mod['func_2772'] = func_2772
mod = relay.transform.InferType()(mod)
mutated_mod['func_2772'] = func_2772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2772_call = mutated_mod.get_global_var('func_2772')
call_2773 = func_2772_call()
output = call_2773
func_2774 = relay.Function([], output)
mutated_mod['func_2774'] = func_2774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_2904 = relay.TupleGetItem(func_1986_call(), 0)
call_2905 = relay.TupleGetItem(func_1988_call(), 0)
func_1839_call = mod.get_global_var('func_1839')
func_1842_call = mutated_mod.get_global_var('func_1842')
const_2917 = relay.const([[4.695124,5.667049,-3.355927,5.297503,-9.766928,-6.260155,9.151217,3.512952,-4.792092,5.193978,-3.085113,-6.183755,-7.624894,-1.569111,8.028987,-1.411773,6.172927,4.155508,-6.694990,6.721611,-4.818181,1.327638,-0.676632,7.012309,5.683354,1.481515,3.820967,3.694286,7.147834,-8.617025,3.889360,4.772517,6.825981,9.410756,-2.625778,-9.734883,-0.546663,-0.768160,-2.979688,6.938695,-6.968488,-3.012049,-6.615202,-1.976012,7.262073,-4.162790,0.366587,7.533734,-9.462695,-5.554146,7.722949,5.958479,8.139369,1.835652,4.856476,9.677261,9.936253,-8.565807,4.693501,0.046832,2.216169,-4.954960,8.482589,3.495779,-0.697835,-3.991778,5.559669,6.778255,3.491350,-6.639808,1.944034,8.530019,7.067430,-5.475353,-3.699758,3.449385,6.913010,-7.018318,3.546732,-5.372243,2.609664,-7.770476,-5.182833,4.964543,-0.629608,6.144477,-1.756543,-5.909411,-5.175230,-3.223584,-8.757141,-2.038111,8.586680,-3.826257,8.862245,-7.123801,-6.127319,9.715992,-8.660389,-3.459202,-8.506377,-7.103386,-7.535573,5.651382,5.979553,8.666612,2.826583,4.570421,-9.685339,-5.858096,-6.264202,6.506932,7.134430,-7.511093,0.742044,-0.517133,-7.784357,-1.189806,5.597479,7.873418,-8.650840,-1.255118,-1.781451,-7.666225,5.426011,-8.293913,-8.891337,-3.222334,-4.170372,9.457216,-8.702397,-2.148425,7.688181,4.992687,-0.216337,5.829645,-1.446582,-7.418061,-2.061189,7.017690,3.284035,1.900846,8.851299,2.971099,-9.667630,-0.164464,-6.344921,4.067621,6.143278,-1.501163,6.004973,-8.374098,1.648105,7.949669,-7.989623,-0.723233,-9.101049,8.590732,6.031567,-5.680454,1.963867,-5.751383,6.675419,8.063046,2.188431,-8.857153,-3.388315,-1.153666,7.579095,0.384259,-9.222508,-3.920517,8.742051,5.397699,-0.008996,2.093311,-4.621496,-8.443684,6.864928,-2.232600,0.488088,-8.055632,-4.777040,-8.307964,-3.681115,5.340697,1.698803,3.055808,2.624217,0.991231,-0.724628,9.484245,8.646816,-4.923798,-9.726353,0.837278,7.587983,2.530229,-0.272823,-3.072685,9.677087,6.452455,2.061027,7.911447,9.808298,-7.580511,2.418577,-8.592516,1.493249,-0.698781,-3.889628,-8.514303,6.512431,9.811566,6.597864,-7.940996,2.278184,9.110226,-1.863976,7.930589,1.114242,-5.895174,5.516994,7.029976,5.622235,-2.370292,2.487341,-3.360802,-1.068073,-6.919090,7.632486,-0.262001,8.134895,6.638193,8.251996,7.904908,-0.036659,5.122866,2.961418,3.889257,-8.711183,-8.687003,-5.545736,-1.912830,-9.210148,-1.621005,8.670294,-6.797403,-5.009240,2.603759,-2.334222,-2.394699,-2.759184,-1.882173,0.741440,-6.293589,-3.331394,6.456497,0.912635,0.708810,1.131761,6.746307,0.648129,6.357651,7.519775,4.595500,6.156404,9.221437,0.027661,3.902458,3.361421,5.559462,-5.988892,-1.386151,-7.755886,1.844449,1.329907,0.972383,-7.252892,-7.922203,9.534423,1.769717,7.073394,-0.695588,4.288963,6.169117,5.259713,-8.195475,-0.467597,-3.187505,-2.997563,-8.778531,-5.406908,-3.162122,-2.535808,3.830442,-7.425214,-0.781473,2.549900,4.497007,0.496072,0.070853,8.077845,-3.045632,-9.708806,-6.251631,3.375871,-5.989027,-0.323069,-3.178727,8.664805,-8.225604,5.858340,2.679684,2.991281,1.787127,-9.400441,-1.808656,-1.304979,5.118557,5.447913,3.246286,-4.272920,-7.620311,2.106578,7.315138,-4.409484,-2.814646,-7.205380,-3.800205,-4.441823,-1.412920,-2.575024,-6.103259,-7.546609,1.850461,-9.065439,-0.201660,-5.604667,3.164738,0.215716,-1.154436,2.923266,3.660520,4.643417,6.453377,1.010956,-7.956557,-4.959100,-9.954733,-9.454909,-2.510497,2.639238,1.451120,-7.272298,3.740785,5.127652,6.764365,-7.097618,-2.804565,9.242407,-1.883506,-4.896280,-4.066388,0.589616,6.954791,2.062026,-5.998933,-7.283225,-2.686923,6.694720,-5.206754,-7.248203,3.642684,4.214719,-1.847433,8.192711,5.441458,7.032519,2.432930,2.727863,-3.100284,-4.765430,8.820121,-8.016297,1.039768,7.889745,-2.588263,-4.261390,-3.589647,0.091790,-2.996344,3.502695,-7.417497,7.548843,-5.869554,-0.902376,4.255331,3.787323,2.571493,9.499675,9.074160,7.554121,-4.862379,3.902291,8.419807,0.474710,-8.380500,4.264624,8.718360,-4.017578,6.377745,-7.118037,7.879501,3.851998,7.617426,-3.935560,1.798199,-6.464223,9.131453,5.846837,-4.561407,-8.506513,3.984872,-3.514113,-0.384199,-7.759475,2.580281,3.469396,4.238661,-0.391674,5.299794,7.834918,-9.234887,-2.745618,-7.096097,-1.546319,-1.325909,5.492313,-3.261240,-1.889472,-2.120757,3.734437,9.693342,-5.832618,7.141815,6.330687,5.883144,-0.318728,-8.497070,0.715355,-8.696608,3.150632,-7.764429,-0.950138,-0.556664,-7.732474,-9.850644,1.058373,-6.046927,-0.847437,-6.809794,-9.615135,-8.309627,3.484126,1.646764,8.758880,-5.048359,-9.610432,7.967803,8.203065,1.649115,-3.421648,0.949719,4.384195,-7.014738,-8.760267,0.688194,-9.233069,0.378461,-3.767309,3.812378,-4.655387,-1.628233,-7.246714,5.250184,-9.077183,2.882599,-1.724798,-9.223176,-2.472741,3.614842,8.279346,4.449299,4.973782,1.210039,1.649290,4.855866,-7.778968,-7.648738,-6.768920,-2.115293,-9.476839,0.379405,4.061923,-9.483710,-9.522580,-0.441160,-4.355561,-4.902387,-4.167362,1.083464,-4.998146,4.018937,8.906393,9.826208,4.429098,-8.141457,-1.013834,6.891004,1.704619,7.793842,4.467317,3.656460,-2.290962,1.873691,8.195737,-1.036352,-5.657523,-6.303452,-3.372559,9.370150,3.134977,9.365294,9.129337,9.230919,8.885458,3.444127,-4.828068,-1.591365,-5.357156,0.350449,2.697192,6.770718,8.131759,9.828669,0.866803,-2.714213,-5.806706,-7.730050,-1.378214,-3.133572,2.098694,-9.487886,-5.902841,-9.411213,8.077432,-4.187853,6.948945,-9.894826,2.487373,-4.899300,-8.352554,3.880326,8.975044,-3.103455,-6.762169,9.182629,-7.300711,8.614352,-7.837634,4.958212,-5.467237,-0.538379,0.271985,-3.028307,-2.777454,-9.481512,4.159494,5.961627,2.697536,-0.754490,-3.356871,5.603128,-8.651041,3.096704,-0.563629,-0.338724,-4.005102,9.726617,1.662689,-8.236711,-2.435650,-1.942436,1.016743,-0.976586,2.353471,-1.984970,-3.516070,7.494614,-2.556725,-0.445502,1.414757,3.876690,6.936516,-8.706094,8.847123,4.432696,9.006043,5.248765,3.263333,6.044445,6.780868,0.095261,-7.247370,-8.492981,1.222270,2.916163,9.357085,1.942964,5.545881,1.067758,-9.312141,4.689390,-6.836737,-3.663690,-0.014185,-9.787249,8.481874,-9.074985,-4.133179,4.816305,4.382379,5.503305,5.602781,3.178921,-1.927261,8.811525,3.577943,-4.432139,-5.033552,-6.505930,-7.541389,-8.633475,-8.094228,4.725403,6.245996,-4.944215,-2.142635,3.313128,-3.541818,-3.413869,6.741631,-9.498612,-2.744127,-2.111800,1.379915,-5.795215,4.075752,-0.691183,3.211310,2.146634,-8.801429,1.386228,1.073146,-3.983996,9.901028,-0.671032,8.206419,-9.642290,7.979082,-3.175550,2.280764,-2.403946,9.505459,-2.574063,0.887790,6.078400,7.368913,-3.772858,7.239285,7.516636,7.372963,2.511079,-6.134346,0.810454,-7.720533,-3.620207,-7.076820,-2.446095,8.100482,-0.257288,-3.111935,-3.391094,-1.003457,-2.589513,-4.280046,-8.967766,6.714382,-9.300127,9.591157,3.681205,1.517618,8.048984,4.134800,6.718864,-5.359535,6.327974,9.791786,8.299443,-8.040153,6.970572,8.169022,-3.709456,8.205746,-7.275857,-9.212424,-5.127267,3.490711,9.945538,1.070317,-5.495295,-3.816348,4.178515,4.201721,7.182731,-6.075513,-8.561076,8.768072,3.867176,2.509645,7.932066,3.597874,2.257068,-2.696018,7.163308,5.983739,0.082144,5.776327,9.679083,0.564106,-3.019697,0.846793,0.463670,-1.246907,7.495470,-5.293539,2.262386,-6.126975,4.415126,-6.284357,5.730326,-4.223585,9.995921,5.991137,-3.809518,-1.785906,-0.594733,-3.398519,-3.985782,-4.079812,-1.380903,-6.272551,1.404233,2.564174,4.050130,1.663843,8.392302,-6.131394,-4.957476,-6.386255,-2.335840,9.309206,-6.101415,1.148037,-8.417448,3.576648,-2.667256,5.737475,-2.519088,-3.802619,-2.277360,-7.498552,8.883035,-2.092592,-3.573950,0.460192,3.513932,-6.476570,-7.139245,-9.202996,4.195295,9.610361,-5.971733,6.573460,6.568781,-6.120933,-0.023131,-3.295293,9.885495,1.123362,9.184267,5.604792,4.537511,-4.716807,7.016608,4.475551,-7.636951,-4.600415,6.339204,-9.659164,-6.687599,-5.375386,9.558808,-5.832255,1.093094,5.794614,-2.022447,-2.981352,-6.828362,4.007884,0.451308,-2.816985,-6.450911,-5.406030,1.426290,-4.824493,-2.092195,-6.810868,8.189792,-5.977347,-2.229520,8.337355,-8.606838,-2.060042,6.282476,-0.183623,-6.980243,-1.494384,-0.210294,-3.155721,2.174901,5.210050,4.493891,-8.083793,-0.485310,-3.310307,-3.472288,-2.816645,8.249857,7.763605,-6.558349,5.100264,-9.371285,7.387856,8.217372,-0.760216,3.092497,-4.637987,9.717158,1.072378,2.706912,-2.046933,-2.203832,2.063496,-0.593888,-8.734717,-8.836883,2.949207,0.885752,4.599921,0.171931,-2.465733,6.371397,8.368339,6.101580,2.725610,-3.195719,-5.966771,-7.054094,-5.531230,-7.498737,2.179583,5.675612,3.948104,-4.432173,0.052770,7.405516,-1.391658,-5.216654,9.080401,-2.840802,-5.172363,1.069333,0.796380,-2.129370,-3.852313,-5.838715,-9.589412,-3.240397,9.709695,-8.765099,-4.223139,-5.083657,0.341560,0.577054,-6.149882,3.387199,-4.820661,2.508529,-2.836227,-6.495988,-9.022498,-2.244323,-5.552027,-9.027828,5.813210,-2.874311,-9.220153,-7.152569,5.998244,1.977334,-0.161414,-1.011417,3.861673,-2.851177,-4.480417,-0.780157,-9.693673,4.101244,2.032004,-9.448718,-3.684497,0.682476,7.209249,-2.948976,2.248301,-3.458490,-6.323378,-8.250855,-9.487895,2.471232,3.356158,3.844350,5.397589,-0.508391,-2.511915,2.134135,5.285500,-5.980495,3.678656,6.543903,-7.057312,-0.189219,9.456186,-2.980676,1.983990,-3.306476,1.746371,-9.586595,-3.576559,9.992358,7.424163,8.419925,9.490196,8.197388,6.252360,5.042160,-6.646457,-7.908410,5.653940,9.607212,1.519090,7.437830,3.082516,2.960869,0.705445,4.946946,4.044597,0.715157,-7.444766,5.700045,-2.177996,5.745457,-6.491780,-1.864948,-0.303295,9.088711,5.996962,-9.034662,-5.137854,-4.751362,-3.019349,4.380709,-4.365772,9.195981,7.117016,-3.398059,5.949577,8.813714,-6.024179,6.969450,8.913025,-4.911719,-6.499973,-0.705743,-0.438712,-5.927455,-3.427179,-6.635293,-7.987726,6.050023,2.681427,4.498924,6.492270,-2.244945,-4.142125,-2.923668,-6.137711,-1.046631,2.956729,-5.825224,0.177014,-1.911251,-2.916444,7.582959,-1.723789,-3.772732,-8.775847,3.585684,-1.698461,0.817157,7.675061,2.053906,-9.531716,-3.087254,-4.706366,0.889046,0.888209,3.558878,1.007087,9.391788,2.744913,0.375753,8.764343,6.367093,-7.898665,1.011178,-2.338531,-9.247700,-7.877720,-8.865413,5.336515,3.988893,9.587121,-9.398520,8.835545,2.908247,0.406647,-6.123041,1.777491,8.403954,5.714087,1.975321,7.459601,-1.110652,1.134483,-7.003654,6.925869,2.042837,-0.900803,0.248328,2.745533,-7.285944,2.877666,-5.509149,-4.967401,-8.521429,-4.834500,8.573933,8.471957,3.397506,-2.955863,6.286997,9.107572,-5.554275,-5.136816,6.395713,-3.462414,8.823481,9.049882,-0.800662,2.205159,7.672861,0.365609,2.442459,-0.079944,3.969891,-9.815578,-3.263006,4.030767,9.919549,-7.493927,-1.118761,-2.875533,-7.348416,6.099466,2.653414,-8.846469,-6.101267,3.080529,-8.887237,-0.328801,-0.769385,6.128559,9.222356,1.617755,-0.313996,7.456110,5.531499,-0.939069,3.623297,-2.905846,-2.816153,6.252076,-2.142809,-1.432110,3.102848,-6.158215,8.897166,-8.156605,7.490574,0.527639,-0.375384,-0.676922,-8.161134,5.962328,-9.798819,-9.551758,-6.112613,8.969341,-8.646584,-2.906259,-6.081949,8.880735,-2.403213,-1.503098,-5.849889,8.901823,4.557871,-3.004032,6.275882,5.326644,7.760363,-6.042581,-6.780333,8.404325,-6.624343,-0.055185,-2.962881,-0.771336,8.629826,-2.588244,3.567092,-0.129232,8.314274,-3.774082,1.751720,-6.226620,-0.421583,-0.135999,-3.659509,5.778818,3.474362,-7.909164,-6.587765,-1.940606,7.169251,4.377452,7.886430,5.233059,-7.846081,4.174186,-7.614785,-1.356087,-2.233974,4.807961,-4.142708,3.633222,-2.976204,-0.189154,5.897852,-6.842675,2.331582,4.706470,-3.933779,-0.756523,-9.579341,-4.393331,2.013922,4.912670,2.728006,4.860195,-4.836090,-4.090354,-6.912356,4.678556,2.264001,-6.298599,6.371423,2.943491,6.480348,-0.713042,9.149016,-5.239450,4.029218,6.519363,-7.635384,5.285480,8.102492,6.208586,-9.449986,5.563527,-5.215988,-6.638475,1.676489,8.565205,3.197694,1.141807,-0.205060,-5.539962,2.202962,9.051324,-6.955436,-6.776818,-1.313583,6.635615,-9.087903,-6.459900,-9.656208,-8.060642,3.243676,-0.884857,9.676960,4.374542,4.300207,-0.315167,2.282253,-1.558458,-7.536832,-4.072381,-0.819354,6.586750,-2.028520,-7.410983,-9.380416,8.698625,-1.616385,9.191319,8.341478,-6.366039,-8.862628,5.025139,-3.264331,4.611172,1.878094,1.313985,6.767517,-1.109347,-7.066575,-7.601200,-6.951424,-4.187025,-3.097785,-7.362567,4.386961,-1.814875,1.981712,2.236347,-6.028769,-0.786379,-9.673421,4.233813,-4.492385,-2.645494,-9.516119,-6.574520,-3.774730,-4.223640,-1.849449,-9.821113,0.024344,6.737030,-1.434119,-8.096345,3.989826,-7.608891,-4.948997,6.328565,-1.228514,3.451407,-4.584901,7.303604,9.224219,0.039986,-8.688219,7.683136,3.889145,7.293391,7.544146,-8.770906,-2.797702,6.177886,-4.972253,-8.998749,-5.950143,-2.554692,4.491055,8.075724,7.030428,-5.645848,-6.430726,9.503989,-5.450118,7.719406,-2.077720,-0.801850,1.234713,3.802263,-1.515111,-5.508237,2.671053,7.715878,-4.462212,2.615819,-7.641871,7.799604,3.560665,-6.546327,5.569877,-5.201402,6.962877,2.841866,-8.200325,-8.961380,-7.128422,0.447183,1.293562,-8.878221,5.158303,8.520827,5.760887,-5.400373,7.096277,-3.156831,-8.480537,-7.632829,8.625562,-7.335674,-1.496184,-8.369967,4.627483,6.658127,-5.162423,-9.928039,9.366302,3.878371,6.007072,-7.539140,-9.498903,3.335293,0.342971,-8.220209,6.141023,-5.841474,-5.072702,-8.963564,-1.724075,-1.304182,6.963729,-2.608956,0.338201,3.533526,6.966747,1.407364,-8.351455,-4.931307,8.596019,-7.590150,-5.254483,-7.965728,6.308948,-8.920937,-5.870236,7.868310,-8.860566,3.325047,9.378361,-6.149188,-5.009956,1.987179,-7.472860,-7.430720,-2.034181,6.739691,6.607502,9.715696,-6.259682,-7.192094,3.055484,7.430138,2.585110,6.715009,9.085956,0.672314,3.509952,8.826022,-3.599161,0.066432,-9.963319,0.194398,5.202620,3.665960,0.615872,-7.852649,2.561795,-3.291417,-5.314590,1.944296,0.688393,1.631301,2.856735,-7.019743,-7.357432,4.693158,-6.048711,-8.707943,4.864241,-7.657340,0.673038,3.010406,-2.074529,3.392487,3.598745,-8.461333,1.048354,-2.345547,-0.485749,6.749063,-9.359490,-4.002112,9.429724,-9.897339,-6.276296,7.827402,-7.269032,-9.955902,-4.699082,2.135771,-5.338829,-4.058273,-0.286313,6.902832,-5.824224,7.450910,9.204913,7.059661,3.563875,5.204171,-3.528229,7.949955,-7.456643,9.030070,-5.344281,-2.149861,6.182956,-0.070180,8.570353,-6.467868,-6.515691,4.349628,8.996750,6.225212,-1.695720,-1.598467,7.517119,7.753671,3.123516,2.907676,-4.780913,4.095802,-0.377731,7.211102,7.889939,0.952628,2.697792,8.654989,-8.312083,4.583402,8.006113,2.987497,-1.208398,-5.450818,-2.916680,8.338703,-8.267657,-1.283244,-7.548108,-2.935041,5.401155,-3.470479,-4.652731,-1.905523,-6.070914,-4.456977,0.656223,-3.947390,-4.364538,-5.408336,-0.668043,7.487134,-4.970161,-2.879561,2.091934,-7.507906,-6.818004,-2.759117,-1.764012,9.882841,-2.147351,-3.205302,-4.119540,0.864687,-0.691914,4.169958,7.708610,1.599441,-6.795347,0.511422,-6.777617,-7.024541,-5.336957,-1.624896,4.624359,1.758432,4.926963,-9.853877,-2.096104,-3.886148,1.320298,-0.684332,1.608632,-7.557296,3.594834,3.261335,2.592053,-4.526453,-2.385088,-2.332227,5.761412,-7.220566,3.926566,-6.057599,-9.848363,-8.097379,-2.283685,5.278241,-9.826846,6.939685,1.501457,-8.320318,-0.389007,-8.606419,5.880288,3.924932,-4.092870,0.153993,-0.693187,8.675692,-4.161718,-5.402783,-4.185760,-6.499205,6.366910,-1.707935,0.467888,3.604121,-6.357015,-6.125936,-0.583587,-6.779546,1.466942,-2.848846,1.143594,6.845656,-3.734368,-3.278692,7.006436,3.224218,-6.532559,7.405582,-6.846556,0.707353,-2.394622,-9.286130,1.844072,4.082462,-3.955813,-2.894598,5.223392,-0.788295,2.154866,3.491475,4.548635,4.757813,-3.205928,7.527403,7.487278,3.882165,6.569572,-6.290926,-0.259543,8.857888,-6.280038,-0.183227,3.057038,6.222315,2.109142,4.055116,7.467861,-3.929143,2.765165,0.278056,0.286527,-3.384889,-4.710437,0.281142,-7.579297,-5.079759,3.689056,2.261454,4.194808,6.773003,6.456641,7.540916,-3.906012,-3.596091,-0.788088,-5.076754,4.323910,-2.377645,-2.790032,-9.793165,-2.389247,4.422388,-3.118986,2.238763,3.305625,-0.145030,9.251769,2.416531,-9.715562,-0.796190,2.647393,-2.171478,2.783049,5.189263,-4.696651,4.345919,-3.100306,-3.156537,1.688990,-0.425173,7.233232,4.122164,-6.249557,-2.274035,-0.343726,7.793864,2.146789,-6.816965,-5.433594,-3.954752,-4.552882,-2.689363,-3.369850,2.113744,-8.515972,-7.479974,-0.576527]], dtype = "float32")#candidate|2917|(1, 1690)|const|float32
var_2918 = relay.var("var_2918", dtype = "float64", shape = ())#candidate|2918|()|var|float64
call_2916 = relay.TupleGetItem(func_1839_call(relay.reshape(const_2917.astype('float32'), [1690, 1]), relay.reshape(var_2918.astype('float64'), []), ), 5)
call_2919 = relay.TupleGetItem(func_1842_call(relay.reshape(const_2917.astype('float32'), [1690, 1]), relay.reshape(var_2918.astype('float64'), []), ), 5)
output = relay.Tuple([call_2904,call_2916,const_2917,var_2918,])
output2 = relay.Tuple([call_2905,call_2919,const_2917,var_2918,])
func_2920 = relay.Function([var_2918,], output)
mod['func_2920'] = func_2920
mod = relay.transform.InferType()(mod)
mutated_mod['func_2920'] = func_2920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2921 = relay.var("var_2921", dtype = "float64", shape = ())#candidate|2921|()|var|float64
func_2920_call = mutated_mod.get_global_var('func_2920')
call_2922 = func_2920_call(var_2921)
output = call_2922
func_2923 = relay.Function([var_2921], output)
mutated_mod['func_2923'] = func_2923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_2938 = relay.TupleGetItem(func_2118_call(), 1)
call_2939 = relay.TupleGetItem(func_2120_call(), 1)
output = relay.Tuple([call_2938,])
output2 = relay.Tuple([call_2939,])
func_2942 = relay.Function([], output)
mod['func_2942'] = func_2942
mod = relay.transform.InferType()(mod)
output = func_2942()
func_2943 = relay.Function([], output)
mutated_mod['func_2943'] = func_2943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mod.get_global_var('func_2060')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_2951 = func_2060_call()
call_2952 = func_2060_call()
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_2956 = relay.TupleGetItem(func_2118_call(), 1)
call_2957 = relay.TupleGetItem(func_2120_call(), 1)
output = relay.Tuple([call_2951,call_2956,])
output2 = relay.Tuple([call_2952,call_2957,])
func_2970 = relay.Function([], output)
mod['func_2970'] = func_2970
mod = relay.transform.InferType()(mod)
output = func_2970()
func_2971 = relay.Function([], output)
mutated_mod['func_2971'] = func_2971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2734_call = mod.get_global_var('func_2734')
func_2736_call = mutated_mod.get_global_var('func_2736')
call_3020 = func_2734_call()
call_3021 = func_2734_call()
output = relay.Tuple([call_3020,])
output2 = relay.Tuple([call_3021,])
func_3046 = relay.Function([], output)
mod['func_3046'] = func_3046
mod = relay.transform.InferType()(mod)
mutated_mod['func_3046'] = func_3046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mutated_mod.get_global_var('func_3046')
call_3047 = func_3046_call()
output = call_3047
func_3048 = relay.Function([], output)
mutated_mod['func_3048'] = func_3048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2563_call = mod.get_global_var('func_2563')
func_2565_call = mutated_mod.get_global_var('func_2565')
call_3116 = relay.TupleGetItem(func_2563_call(), 0)
call_3117 = relay.TupleGetItem(func_2565_call(), 0)
func_92_call = mod.get_global_var('func_92')
func_94_call = mutated_mod.get_global_var('func_94')
var_3129 = relay.var("var_3129", dtype = "float32", shape = (1690,))#candidate|3129|(1690,)|var|float32
call_3128 = relay.TupleGetItem(func_92_call(relay.reshape(var_3129.astype('float32'), [13, 10, 13])), 0)
call_3130 = relay.TupleGetItem(func_94_call(relay.reshape(var_3129.astype('float32'), [13, 10, 13])), 0)
output = relay.Tuple([call_3116,call_3128,var_3129,])
output2 = relay.Tuple([call_3117,call_3130,var_3129,])
func_3145 = relay.Function([var_3129,], output)
mod['func_3145'] = func_3145
mod = relay.transform.InferType()(mod)
var_3146 = relay.var("var_3146", dtype = "float32", shape = (1690,))#candidate|3146|(1690,)|var|float32
output = func_3145(var_3146)
func_3147 = relay.Function([var_3146], output)
mutated_mod['func_3147'] = func_3147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_3193 = relay.TupleGetItem(func_3046_call(), 0)
call_3194 = relay.TupleGetItem(func_3048_call(), 0)
func_2020_call = mod.get_global_var('func_2020')
func_2022_call = mutated_mod.get_global_var('func_2022')
var_3206 = relay.var("var_3206", dtype = "bool", shape = (576,))#candidate|3206|(576,)|var|bool
call_3205 = relay.TupleGetItem(func_2020_call(relay.reshape(var_3206.astype('bool'), [576,])), 1)
call_3207 = relay.TupleGetItem(func_2022_call(relay.reshape(var_3206.astype('bool'), [576,])), 1)
output = relay.Tuple([call_3193,call_3205,var_3206,])
output2 = relay.Tuple([call_3194,call_3207,var_3206,])
func_3211 = relay.Function([var_3206,], output)
mod['func_3211'] = func_3211
mod = relay.transform.InferType()(mod)
var_3212 = relay.var("var_3212", dtype = "bool", shape = (576,))#candidate|3212|(576,)|var|bool
output = func_3211(var_3212)
func_3213 = relay.Function([var_3212], output)
mutated_mod['func_3213'] = func_3213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2970_call = mod.get_global_var('func_2970')
func_2971_call = mutated_mod.get_global_var('func_2971')
call_3241 = relay.TupleGetItem(func_2970_call(), 0)
call_3242 = relay.TupleGetItem(func_2971_call(), 0)
output = relay.Tuple([call_3241,])
output2 = relay.Tuple([call_3242,])
func_3254 = relay.Function([], output)
mod['func_3254'] = func_3254
mod = relay.transform.InferType()(mod)
mutated_mod['func_3254'] = func_3254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mutated_mod.get_global_var('func_3254')
call_3255 = func_3254_call()
output = call_3255
func_3256 = relay.Function([], output)
mutated_mod['func_3256'] = func_3256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2772_call = mod.get_global_var('func_2772')
func_2774_call = mutated_mod.get_global_var('func_2774')
call_3260 = relay.TupleGetItem(func_2772_call(), 0)
call_3261 = relay.TupleGetItem(func_2774_call(), 0)
func_92_call = mod.get_global_var('func_92')
func_94_call = mutated_mod.get_global_var('func_94')
var_3268 = relay.var("var_3268", dtype = "float32", shape = (1690,))#candidate|3268|(1690,)|var|float32
call_3267 = relay.TupleGetItem(func_92_call(relay.reshape(var_3268.astype('float32'), [13, 10, 13])), 0)
call_3269 = relay.TupleGetItem(func_94_call(relay.reshape(var_3268.astype('float32'), [13, 10, 13])), 0)
func_3145_call = mod.get_global_var('func_3145')
func_3147_call = mutated_mod.get_global_var('func_3147')
call_3278 = relay.TupleGetItem(func_3145_call(relay.reshape(var_3268.astype('float32'), [1690,])), 2)
call_3279 = relay.TupleGetItem(func_3147_call(relay.reshape(var_3268.astype('float32'), [1690,])), 2)
var_3296 = relay.var("var_3296", dtype = "float32", shape = (1690,))#candidate|3296|(1690,)|var|float32
bop_3297 = relay.multiply(var_3268.astype('uint16'), relay.reshape(var_3296.astype('uint16'), relay.shape_of(var_3268))) # shape=(1690,)
const_3308 = relay.const([-8.273558,4.998221,-6.296980,1.105068,-4.074595,7.052796,-3.440612,-4.970484,9.989902,4.992409,-7.843744,-8.221592,-8.582347,-9.900614,9.650560,-1.471671,9.232483,-6.124198,-2.356846,1.690223,-9.687062,4.164385,-7.940368,-0.429620,-6.825718,6.801958,-4.084310,6.446715,-7.722935,-7.354252,0.487690,-1.236082,-9.746739,5.299570,-0.481426,6.530131,9.204901,9.860901,0.957297,-1.143660,-8.466728,-3.989589,1.589440,6.135248,3.314314,8.450569,-2.035246,-5.767515,-7.473991,2.294054,-9.828876,4.261657,8.584203,8.789279,1.404667,4.930366,3.783390,-4.634824,7.613483,5.013033,-6.755110,1.981387,-2.118647,7.445029,2.872954,9.030041,-4.306260,-7.391919,9.339269,-7.790368,2.700130,-2.472371,9.347917,5.123150,1.905625,6.741532,8.109675,-2.342372,-0.439857,-0.476611,3.529118,8.851292,-7.874615,7.206974,-2.590684,-7.292100,9.343730,-5.723798,-8.898649,1.529711,-6.439342,7.201903,-0.205210,2.674778,3.027924,-4.543119,5.492305,-0.630775,6.554624,-2.067931,2.797697,8.803884,7.718020,3.718876,8.230050,7.014602,-8.459876,3.182744,0.873775,7.770198,-2.508637,5.988356,-8.675517,-5.434703,8.469952,5.343947,5.079375,-9.599021,-5.316570,-8.621034,-8.877892,-1.760285,-0.924693,3.033785,-2.431394,7.268118,5.217271,5.561809,-7.573074,4.331267,-9.608410,2.940562,-3.993197,-9.943698,8.594758,-2.152052,1.088064,-9.823372,7.899869,3.364515,1.708661,-7.330408,4.079124,-6.075571,9.716046,7.723974,-9.595270,-0.721069,-3.514945,9.656591,0.454925,-6.844661,-3.783362,0.468264,-1.522563,-0.798729,5.905645,-0.219993,-1.757813,-4.362247,3.174035,1.502672,-2.303385,-0.521468,-9.743068,7.430295,7.826487,-4.736392,-6.585421,2.139554,-4.445898,-8.130780,1.549890,-1.643626,1.910385,8.498086,3.590840,-2.687378,-3.041488,-8.586913,8.935423,2.378048,9.899497,-1.504408,2.262002,9.040082,8.314199,3.573399,-8.191129,-2.656985,-0.329986,-3.878476,-5.988487,-8.801077,8.386659,-2.069143,-1.271970,-8.932284,1.241566,1.797284,-9.411221,6.670476,3.098891,-4.551347,-1.984957,4.945507,4.404606,-9.174687,5.356336,-8.890606,-4.349820,4.607722,-5.811955,-1.416934,-9.537401,-6.415888,-6.886506,0.287556,-0.429837,-9.310319,-6.226665,-3.999443,5.310403,-0.598109,8.568862,-8.007462,8.439250,-6.984407,2.390545,7.492862,-7.933421,-0.716537,4.924551,-8.187714,-2.399510,1.683993,2.629446,-4.838652,-2.440653,7.583612,6.020265,4.333903,7.630034,0.395162,3.734423,-7.035143,-2.870615,-8.594520,-8.129429,-1.280533,6.729976,-1.827226,5.329601,-2.738443,9.357240,1.557264,1.479395,9.337632,-3.548518,1.485628,8.448392,4.811743,-4.164220,-1.523853,7.162531,6.857849,-3.776375,6.749391,-1.668841,4.470427,6.457943,2.436241,-6.975143,9.590896,6.312603,-4.859382,-9.526797,-3.639665,0.268957,-8.715457,5.500016,-9.140203,6.330633,9.300331,9.396531,3.559047,7.743884,0.102525,0.331899,-8.845704,8.895339,4.009787,6.921136,-0.188044,-5.031277,7.924618,2.301202,9.152529,0.743686,-9.030853,-2.431328,6.323776,-6.119411,1.363781,8.379409,-5.975760,-2.346158,-7.007033,-6.852625,-1.565680,5.455192,-3.113192,9.397437,6.848969,0.657493,8.658488,4.887481,5.925122,2.520584,0.933091,6.730999,4.047399,-7.810691,7.407220,2.861674,4.033213,6.302600,4.227871,-1.574076,2.979149,-6.231110,6.023645,8.389138,-2.151839,6.193138,3.955262,9.791409,-9.044432,-6.171471,-9.623222,6.889459,5.899888,-9.638487,-4.105433,8.328666,-4.905128,-2.347737,-8.471289,-5.292642,9.913359,-8.689729,-7.740466,8.451608,7.330564,-8.664512,3.186622,-5.964818,-0.517527,5.099238,3.524114,-1.251453,0.708489,7.199240,-5.164374,-5.151045,0.884009,-8.477136,-9.800417,-7.595715,-4.764644,-3.828050,-1.947065,-7.232755,1.822560,0.233817,-3.867121,-0.995181,7.186520,8.927149,5.536752,9.366101,6.145696,3.155406,3.322196,4.504287,-1.970584,-9.692275,-6.000145,-8.564687,-1.941591,-3.250835,1.539871,-2.194945,-4.394713,7.318672,2.842344,-1.463995,-3.405576,5.233995,9.559726,6.480999,-6.520601,3.427920,-4.205235,-6.615399,3.490047,-7.211773,9.975874,6.279527,-9.868579,4.934879,0.974523,-4.770642,9.433665,-1.482337,0.422646,7.797022,6.657932,-3.130591,-5.990202,-7.104402,-8.096343,-8.823445,-0.182811,4.099071,-1.662922,-8.450023,8.379094,-6.435659,-5.330406,5.777768,-1.076452,4.440092,0.832104,-8.438169,-6.814432,-2.998691,7.495668,-2.026671,-2.204033,-2.617584,2.768131,3.609453,-6.576725,2.963503,-2.036532,-6.755477,5.038829,-7.499202,4.041215,-1.731048,8.566389,-4.947789,-7.960316,-4.613283,1.205296,9.741194,-3.914776,4.162459,-4.525837,7.708376,0.907456,-7.789587,-5.680863,-9.966039,2.315955,8.783410,5.614862,2.284800,4.232137,-6.377865,-9.637051,2.268502,-9.531258,1.140460,6.268658,6.352126,-8.423195,-3.502887,-7.033014,6.970654,4.358109,6.891885,-9.460911,-3.772165,-2.739634,-4.558844,3.597953,1.837260,-6.552027,-2.707255,-2.485783,0.504374,2.162569,5.667589,-8.927224,1.966716,1.862313,-6.547941,9.874433,8.613664,0.580673,7.158042,7.432526,1.301293,1.401428,-2.473267,8.206470,7.863019,4.940931,8.049124,8.500300,9.839512,2.404041,-4.210127,1.363110,-4.247752,-7.139934,6.084475,0.362348,5.049954,-9.149901,-7.954138,6.000128,5.292791,-5.959853,-1.175042,3.512881,-1.606206,7.052843,-7.752485,1.146013,-6.732920,-5.818315,1.858802,-1.881226,-3.805253,-0.475281,-1.387575,-0.544168,-6.736295,-5.783668,-7.361074,0.802299,-1.239774,-2.170934,5.485554,-9.546547,3.498356,9.757688,-5.555309,3.100115,-3.129026,2.554567,-3.283642,-7.664270,-8.223481,2.060119,9.780420,8.909052,-8.002082,-5.335472,8.294626,6.002980,5.408397,-0.865488,-2.164905,-2.081650,4.185577,6.176295,-1.126942,3.402975,5.673981,3.391580,1.108672,-8.028375,-5.749510,1.452654,3.013081,-1.655911,1.306949,-8.302076,7.274523,-9.198149,-3.136319,-5.115460,-4.634724,7.024351,-2.573024,-7.432071,-2.594756,6.804881,4.809744,-0.819170,3.757050,7.525474,8.371067,-1.831339,-3.557880,-5.973489,5.205766,7.265777,-8.052615,4.209668,-8.391016,-4.610439,-4.548191,2.909453,-2.096657,5.256197,1.996096,-9.169891,-5.790902,7.761914,8.114353,-0.160932,-0.505093,-6.651040,-9.129108,6.078184,4.173269,9.533341,-6.233211,0.374251,4.839201,-7.212153,5.836987,0.579327,-8.555173,3.861366,-9.495950,-4.871052,4.909141,5.435521,-6.526483,-6.280980,-9.185035,8.079479,9.006103,2.055092,3.769470,1.959488,-9.629396,8.471432,3.353767,8.706808,-3.242595,-9.188008,-0.384396,6.843630,-0.626469,1.907149,-1.816320,9.808095,9.323964,-4.264379,7.801587,-0.762620,-2.041565,-2.460225,-2.900398,-9.878924,0.754689,-1.862970,-7.647273,-7.257305,-9.663263,-9.294794,-3.088131,-9.133318,-1.612727,9.997147,-6.248202,-3.672568,1.957616,-7.429383,-5.871416,-6.482004,3.842171,7.439442,-9.694170,-0.612553,5.797125,4.014594,2.737370,-6.767974,-2.117559,3.382414,8.706347,-0.253078,-2.225592,-2.258474,6.473875,-2.045106,8.101401,-8.467086,2.525920,-6.561501,4.875504,-7.319709,8.549073,6.485380,-1.891124,-3.033654,-3.475323,-0.063004,8.347087,5.208073,7.901397,4.535343,7.956523,1.711805,3.750384,-4.401853,1.023719,7.277832,9.846910,5.905316,5.867807,9.436730,-3.719471,-9.541401,-9.515820,-9.413946,7.325260,-2.832653,5.935653,5.425000,-2.821678,-9.380222,-0.028392,-4.891162,-3.106127,-7.049695,-2.983026,3.709650,5.018093,-1.461016,3.221262,-7.905791,2.324976,8.843748,-6.261983,2.287061,-6.892588,-8.042609,3.840276,-0.856317,-9.708594,9.195530,-3.355660,6.726870,-6.860089,5.822670,-5.951939,-1.118725,2.391261,0.731713,-4.073301,-6.687681,-0.488270,8.976130,3.502336,7.386970,-1.195648,-6.178104,3.655025,0.549323,-0.573585,0.369081,-6.576861,-9.174968,1.957400,7.477070,-2.457024,0.917530,-4.170187,-2.664057,-3.767046,-1.978398,-4.141437,-3.830716,-2.566752,6.871064,-2.682742,-1.156317,-2.232656,-6.377890,-7.183007,7.505582,1.057892,3.910146,7.315516,-3.755713,2.934933,3.042648,2.231932,9.523092,0.720833,-7.313120,9.539442,-2.985214,5.729000,0.929278,-7.265900,-1.815934,1.039779,2.920755,0.956938,0.685355,-7.263167,-8.826679,-7.455009,-6.331627,-8.247347,7.471362,0.943752,2.544393,1.526296,-0.578748,2.104828,4.108214,-5.036386,-5.716726,-4.918056,-8.304220,-2.996113,8.163599,-0.930360,-0.729010,-9.921986,-7.260362,4.843694,3.432637,-6.924028,-3.321998,-5.804437,7.266323,-4.943040,0.764511,2.772920,-4.625219,-0.122500,-6.944518,8.361685,-0.464896,-5.117607,6.095021,-6.553955,-2.265217,-3.184352,2.883640,2.207382,9.325320,-9.146838,-2.976839,-7.460241,7.340381,-8.811303,2.845571,-4.431041,-7.966581,-7.357742,-2.939552,-2.787342,9.558336,4.882036,1.883955,8.954963,-7.086908,9.661825,9.387655,8.511126,4.212418,-7.719386,6.232058,-1.535380,-8.746778,1.292027,7.605396,0.390903,-5.291903,4.496950,7.947469,-3.559362,-2.332716,5.739209,6.866075,-8.509787,-1.010202,3.605107,6.171953,4.598066,-4.399769,-9.278418,-1.177027,8.544302,-2.261693,8.934104,5.200840,-7.378765,7.464468,-5.462981,-9.315606,4.265619,6.755403,0.554109,-1.578624,-4.813317,6.233652,4.999456,4.068689,5.147094,2.142450,3.646859,-1.556368,3.538015,0.614991,9.153160,-0.589348,2.335954,5.174843,8.645151,9.455077,5.806110,-7.909627,1.017733,7.344611,-0.340383,1.455243,5.855773,8.240360,2.898368,-4.380581,-0.721764,-6.644695,8.479294,-1.186485,7.758924,-2.073725,1.874103,3.545518,-1.869997,6.556044,-8.709695,6.836070,-7.066006,-7.125704,8.102064,-3.889435,3.226699,0.024721,3.772010,8.130248,-5.524385,7.013876,8.441625,-5.406502,3.994393,-5.218961,-4.918631,3.361149,-1.474641,-9.368816,8.050619,0.742180,9.944071,2.529858,7.051095,-7.976432,-0.766780,6.291784,-1.400742,-8.210891,0.411383,5.769039,-8.891740,-9.625451,-2.488044,-1.006049,-4.452573,3.543151,4.108092,-7.714211,8.390635,-9.411993,-5.237771,4.677429,3.842195,-1.353215,-5.040795,-6.638072,-0.571920,1.302014,8.317366,-7.157766,-0.866779,-6.015208,-8.274521,-5.359272,5.264308,-8.794272,-0.983783,-1.584609,1.588269,-1.283659,2.981456,-8.346950,2.956877,-5.594045,5.745626,-0.330928,-4.940280,4.125767,2.019232,0.631405,-6.731109,-0.391063,4.052272,-0.147560,9.834702,1.434538,1.222455,0.670747,5.545824,-0.554469,-6.808498,-7.063654,2.622670,-6.439727,2.385809,6.060040,1.592032,-9.824722,-3.609312,8.591007,3.566960,-8.339877,-6.822448,-8.944379,-9.138452,-5.676349,8.982185,7.862539,4.588832,-7.676849,3.382669,-9.011950,2.814482,-5.398372,-3.500018,-8.920679,-0.067488,-8.983364,-8.053007,-2.073760,7.564417,6.414399,-9.905742,2.989264,-2.831974,-7.116013,0.618001,-3.459141,-9.123574,6.028687,-6.304183,-7.593664,-0.990871,6.965654,2.168304,2.617203,3.643174,-7.316480,-3.355111,1.199016,1.836223,-0.179737,-0.822599,7.927707,9.022439,0.548961,-7.527418,-3.643718,9.665384,4.185499,-4.826021,3.858417,-7.612178,6.244760,-9.626847,3.498910,-3.281251,-7.104029,6.943136,9.257646,-3.548660,-6.033225,9.159129,-5.871101,5.927800,6.584333,-1.309815,2.761609,-9.891880,1.737833,3.019871,-1.785410,9.450689,-5.337663,5.664254,0.390578,8.893106,-4.776240,2.671265,9.964626,7.154093,-5.613218,8.388891,-8.430586,-9.061282,-3.179935,-3.299366,0.714810,-8.741343,-0.001254,-5.903215,0.249393,-8.094430,-9.217532,-2.519065,-6.882250,-2.904189,-8.741115,-6.548577,-1.422904,-5.981371,-8.241650,3.668502,-7.440528,4.423679,0.340218,5.953757,1.037089,7.366820,7.910518,5.484187,2.452759,-7.991500,-9.941669,-8.252230,0.692541,8.726232,4.257560,0.884418,-6.923897,0.636349,-6.524360,4.273346,-7.042524,1.542490,-2.079680,9.430443,0.339890,3.432619,-3.336493,-6.447739,0.072841,7.639713,-0.887535,-2.384141,3.798728,8.000651,-1.221951,-5.844925,0.298039,-4.617790,-3.890547,2.928211,4.671149,2.163887,-4.227426,8.435195,-3.828715,-5.366742,-6.457586,2.587623,-7.330980,4.250227,9.595162,0.364897,-2.531878,2.056492,1.827952,-5.823091,3.073023,-7.191478,1.517403,4.159951,-5.781228,-0.382811,9.618838,3.269481,-0.862177,-4.239409,-3.195002,-4.459047,-1.898491,0.999667,-9.315232,-2.944593,-9.272405,0.410284,8.229283,6.895359,0.307276,-8.147296,4.904285,-7.032758,-9.289196,-6.886590,6.103707,0.428989,-2.806241,4.270480,-0.197686,-3.357411,2.639335,-3.724280,1.251257,-3.716348,-1.030060,3.500622,-9.826474,2.214185,-7.414799,4.066129,1.093598,5.623004,-8.906262,-3.322173,1.463605,0.530544,6.142723,9.539752,5.349754,4.947120,-6.177989,9.829755,-0.052477,9.308043,-9.703371,-8.356252,-1.926282,4.032362,7.401525,3.176045,7.628099,2.357576,8.471533,5.510138,-8.523899,-2.182776,2.406221,-4.679163,-6.647607,-3.945971,-8.658222,-4.686052,1.306127,6.153310,-7.341325,9.297683,6.644880,-6.577269,6.357244,5.458708,-3.857973,-7.204701,-9.199520,5.639593,-6.344791,6.127269,9.351330,8.742307,-2.360084,4.089985,-5.080696,-8.530819,6.066141,-7.748022,-1.271311,-1.571873,1.575799,-3.765273,7.385511,-9.446619,7.664148,6.738594,-9.969612,3.054772,4.868374,3.238071,8.564212,-5.113833,-4.069800,3.264184,-0.253584,5.427325,-0.599020,1.889494,9.234752,-9.595902,-7.988694,7.455844,-0.838016,2.173020,8.874650,4.037749,-6.830231,5.465537,-0.387054,9.039899,9.950518,-7.883452,-2.409708,0.688087,-2.144854,-9.412460,6.813029,9.563315,8.093063,-5.173296,7.026233,5.216464,7.342639,-2.608537,-6.517093,-0.381220,-2.902186,8.132445,2.458022,-5.318441,-0.267545,-6.473282,7.983972,-2.591358,-2.670980,2.335965,-4.414831,7.969404,-0.348424,-2.218769,6.622605,-2.451187,5.108470,-7.997583,-2.245081,-0.968988,3.694167,4.081157,-1.552300,1.728932,-7.757885,-9.236156,-0.267713,-4.280102,4.502543,1.287893,2.226274,-7.546383,0.176766,2.321739,-6.528653,1.583897,-1.709438,-3.695787,-5.191975,4.589349,-7.170019,5.854547,6.011719,3.947402,-3.061836,4.014097,-8.015150,4.112764,-9.810341,-4.278470,-4.930798,0.174162,-3.914729,-1.857211,3.701253,5.274845,0.238118,-9.840115,-5.647477,-8.900075,-8.460244,-5.684381,2.515699,3.571412,6.475500,-4.730544,5.100052,-6.010985,2.017404,-5.144772,4.777252,7.147865,-7.186378,1.576139,4.706170,-9.449479,-5.265685,2.503906,-4.141271,0.169668,-9.973100,2.338093,8.062163,5.225614,-5.903222,-4.142437,1.693832,7.069332,0.390905,-5.714295,-1.397531,8.557550,5.728633,-0.728107,0.483948,8.983708,-8.303812,8.784071,4.149956,-7.651220,-5.122212,6.431695,-7.689505,7.858062,8.530565,3.514934,-6.665136,-9.579939,9.464408,5.609298,4.851254,-6.048765,-5.294853,5.937566,-1.808909,5.696171,-7.319671,-1.842713,3.683924,0.220529,3.859611,-0.420502,4.318365,9.299000,-1.818636,0.724775,-8.021805,2.814954,0.133616,-4.878404,-2.310946,-7.260121,-8.686330,-0.767256,-6.035033,-0.176657,-9.079476,-3.600378,-1.722852,-8.487652,-1.948272,-3.311914,4.424644,1.409471,-5.948618,-4.008132,-8.200456,-5.005050,6.295533,-2.807136,-8.474733,2.321046,-4.611232,-7.669782,3.377489,4.838217,-5.170670,-3.102587,2.204031,-2.342641,1.897165,-8.499129,2.021853,-5.464106,5.091823,-6.925868,-1.254681,-2.933630,0.823521,4.799532,6.606650,7.810105,-4.971970,4.783549,8.006647,7.913860,-6.441979,-2.115499,-8.349334,-0.224236,-5.935864,8.923716,-7.539803,9.418615,-2.150642,7.358782,6.131556,4.029546,-1.333549,4.597993,-2.035379,0.964533,-7.251902,-0.034458,-7.170881,2.142426,-3.004576,1.904924,-9.945043,-7.085413,3.508340,1.062589,-4.605369,-6.925757,1.476358,6.367334,1.685776,9.997548,-2.166977,-8.631481,-4.789357,8.145742,2.740300,-4.187692,1.792137,-5.879072,-2.957082,1.454412,8.596253,0.688447,7.905843,-0.089910,2.073885,0.783607,-0.169380,6.339834,1.660980,5.599856,4.726149,-8.085162,-5.455335,-4.582310,-4.437505,-3.653665,2.501610,8.129626,-0.196459,7.568155,9.628086,8.433428,0.722436,-7.660276,-0.869325,4.507421,1.209534,-2.529064,-9.775877,-0.866865,1.034664,-8.126878,2.794757,5.540291,-4.227168,6.783356,7.762583,6.206302,1.911883,3.054483,1.479543,-8.440838,5.279995,-0.688677,0.504847,-6.158827,9.450584,7.292982,-0.272885,-4.357932,-1.829065,-9.333763,1.528328,-4.912980,-5.527230,-0.625889,-1.331096,-8.944775,0.080757,7.360017,-0.845860,6.833073,3.614074,-1.749519,-3.860074,-5.131267,-2.731372,-0.606717,-6.168555,1.770214,1.937508,-2.684373,-8.114173,5.725903,8.515859,-4.672125,-5.715248,-9.846935,-8.272466,-7.655458,9.688893,6.096268,1.807950,4.559108,-0.588012,-1.908822,-1.169604,2.731486,-8.199291,1.169551,-8.130649,8.300828,1.007397,-7.581798,-8.195150,-2.033905,1.941623,9.677699,-9.806890,-1.334201,4.439726,-5.649234,2.484375,-7.022673,-7.982348,9.372686,4.360375,6.240405,-4.537209,1.572769,-0.394764,0.332569,8.269766,7.344874,3.843728,2.603052,-0.584530,7.971464,1.200112,7.055004,4.706005,-4.871188,3.927892,4.355280,0.388300,-6.064071,9.942690,8.842433,8.083662,-0.827185,-2.944378,9.520842,0.743912], dtype = "float32")#candidate|3308|(1690,)|const|float32
bop_3309 = relay.power(call_3278.astype('float64'), relay.reshape(const_3308.astype('float64'), relay.shape_of(call_3278))) # shape=(1690,)
bop_3312 = relay.power(call_3279.astype('float64'), relay.reshape(const_3308.astype('float64'), relay.shape_of(call_3279))) # shape=(1690,)
bop_3328 = relay.right_shift(bop_3297.astype('uint32'), relay.reshape(call_3278.astype('uint32'), relay.shape_of(bop_3297))) # shape=(1690,)
bop_3331 = relay.right_shift(bop_3297.astype('uint32'), relay.reshape(call_3279.astype('uint32'), relay.shape_of(bop_3297))) # shape=(1690,)
func_2458_call = mod.get_global_var('func_2458')
func_2459_call = mutated_mod.get_global_var('func_2459')
call_3335 = func_2458_call()
call_3336 = func_2458_call()
output = relay.Tuple([call_3260,call_3267,bop_3309,bop_3328,call_3335,])
output2 = relay.Tuple([call_3261,call_3269,bop_3312,bop_3331,call_3336,])
func_3341 = relay.Function([var_3268,var_3296,], output)
mod['func_3341'] = func_3341
mod = relay.transform.InferType()(mod)
var_3342 = relay.var("var_3342", dtype = "float32", shape = (1690,))#candidate|3342|(1690,)|var|float32
var_3343 = relay.var("var_3343", dtype = "float32", shape = (1690,))#candidate|3343|(1690,)|var|float32
output = func_3341(var_3342,var_3343,)
func_3344 = relay.Function([var_3342,var_3343,], output)
mutated_mod['func_3344'] = func_3344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_3381 = relay.TupleGetItem(func_3254_call(), 0)
call_3382 = relay.TupleGetItem(func_3256_call(), 0)
func_2772_call = mod.get_global_var('func_2772')
func_2774_call = mutated_mod.get_global_var('func_2774')
call_3383 = relay.TupleGetItem(func_2772_call(), 0)
call_3384 = relay.TupleGetItem(func_2774_call(), 0)
output = relay.Tuple([call_3381,call_3383,])
output2 = relay.Tuple([call_3382,call_3384,])
func_3411 = relay.Function([], output)
mod['func_3411'] = func_3411
mod = relay.transform.InferType()(mod)
output = func_3411()
func_3412 = relay.Function([], output)
mutated_mod['func_3412'] = func_3412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2074_call = mod.get_global_var('func_2074')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_3433 = relay.TupleGetItem(func_2074_call(), 0)
call_3434 = relay.TupleGetItem(func_2075_call(), 0)
func_2060_call = mod.get_global_var('func_2060')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_3456 = func_2060_call()
call_3457 = func_2060_call()
func_480_call = mod.get_global_var('func_480')
func_485_call = mutated_mod.get_global_var('func_485')
var_3467 = relay.var("var_3467", dtype = "float32", shape = (120,))#candidate|3467|(120,)|var|float32
const_3468 = relay.const(2.346785, dtype = "float64")#candidate|3468|()|const|float64
const_3469 = relay.const([[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True]], dtype = "bool")#candidate|3469|(576, 1)|const|bool
call_3466 = relay.TupleGetItem(func_480_call(relay.reshape(var_3467.astype('float32'), [10, 3, 4]), relay.reshape(const_3468.astype('float64'), []), relay.reshape(const_3469.astype('bool'), [1, 576]), ), 3)
call_3470 = relay.TupleGetItem(func_485_call(relay.reshape(var_3467.astype('float32'), [10, 3, 4]), relay.reshape(const_3468.astype('float64'), []), relay.reshape(const_3469.astype('bool'), [1, 576]), ), 3)
output = relay.Tuple([call_3433,call_3456,call_3466,var_3467,const_3468,const_3469,])
output2 = relay.Tuple([call_3434,call_3457,call_3470,var_3467,const_3468,const_3469,])
func_3477 = relay.Function([var_3467,], output)
mod['func_3477'] = func_3477
mod = relay.transform.InferType()(mod)
var_3478 = relay.var("var_3478", dtype = "float32", shape = (120,))#candidate|3478|(120,)|var|float32
output = func_3477(var_3478)
func_3479 = relay.Function([var_3478], output)
mutated_mod['func_3479'] = func_3479
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3567 = relay.const(1, dtype = "uint16")#candidate|3567|()|const|uint16
var_3568 = relay.var("var_3568", dtype = "uint16", shape = (14, 3, 7))#candidate|3568|(14, 3, 7)|var|uint16
bop_3569 = relay.bitwise_and(const_3567.astype('uint16'), var_3568.astype('uint16')) # shape=(14, 3, 7)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_3589 = relay.TupleGetItem(func_1986_call(), 0)
call_3590 = relay.TupleGetItem(func_1988_call(), 0)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_3597 = relay.TupleGetItem(func_1986_call(), 0)
call_3598 = relay.TupleGetItem(func_1988_call(), 0)
output = relay.Tuple([bop_3569,call_3589,call_3597,])
output2 = relay.Tuple([bop_3569,call_3590,call_3598,])
func_3604 = relay.Function([var_3568,], output)
mod['func_3604'] = func_3604
mod = relay.transform.InferType()(mod)
var_3605 = relay.var("var_3605", dtype = "uint16", shape = (14, 3, 7))#candidate|3605|(14, 3, 7)|var|uint16
output = func_3604(var_3605)
func_3606 = relay.Function([var_3605], output)
mutated_mod['func_3606'] = func_3606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mod.get_global_var('func_2060')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_3623 = func_2060_call()
call_3624 = func_2060_call()
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_3630 = relay.TupleGetItem(func_2534_call(), 1)
call_3631 = relay.TupleGetItem(func_2536_call(), 1)
output = relay.Tuple([call_3623,call_3630,])
output2 = relay.Tuple([call_3624,call_3631,])
func_3640 = relay.Function([], output)
mod['func_3640'] = func_3640
mod = relay.transform.InferType()(mod)
mutated_mod['func_3640'] = func_3640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3640_call = mutated_mod.get_global_var('func_3640')
call_3641 = func_3640_call()
output = call_3641
func_3642 = relay.Function([], output)
mutated_mod['func_3642'] = func_3642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2074_call = mod.get_global_var('func_2074')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_3658 = relay.TupleGetItem(func_2074_call(), 0)
call_3659 = relay.TupleGetItem(func_2075_call(), 0)
output = call_3658
output2 = call_3659
func_3665 = relay.Function([], output)
mod['func_3665'] = func_3665
mod = relay.transform.InferType()(mod)
mutated_mod['func_3665'] = func_3665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3665_call = mutated_mod.get_global_var('func_3665')
call_3666 = func_3665_call()
output = call_3666
func_3667 = relay.Function([], output)
mutated_mod['func_3667'] = func_3667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_3671 = relay.TupleGetItem(func_2118_call(), 0)
call_3672 = relay.TupleGetItem(func_2120_call(), 0)
output = relay.Tuple([call_3671,])
output2 = relay.Tuple([call_3672,])
func_3679 = relay.Function([], output)
mod['func_3679'] = func_3679
mod = relay.transform.InferType()(mod)
mutated_mod['func_3679'] = func_3679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mutated_mod.get_global_var('func_3679')
call_3680 = func_3679_call()
output = call_3680
func_3681 = relay.Function([], output)
mutated_mod['func_3681'] = func_3681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_3732 = relay.TupleGetItem(func_1986_call(), 0)
call_3733 = relay.TupleGetItem(func_1988_call(), 0)
func_2942_call = mod.get_global_var('func_2942')
func_2943_call = mutated_mod.get_global_var('func_2943')
call_3734 = relay.TupleGetItem(func_2942_call(), 0)
call_3735 = relay.TupleGetItem(func_2943_call(), 0)
func_2242_call = mod.get_global_var('func_2242')
func_2244_call = mutated_mod.get_global_var('func_2244')
call_3769 = func_2242_call()
call_3770 = func_2242_call()
output = relay.Tuple([call_3732,call_3734,call_3769,])
output2 = relay.Tuple([call_3733,call_3735,call_3770,])
func_3778 = relay.Function([], output)
mod['func_3778'] = func_3778
mod = relay.transform.InferType()(mod)
mutated_mod['func_3778'] = func_3778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3778_call = mutated_mod.get_global_var('func_3778')
call_3779 = func_3778_call()
output = call_3779
func_3780 = relay.Function([], output)
mutated_mod['func_3780'] = func_3780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2942_call = mod.get_global_var('func_2942')
func_2943_call = mutated_mod.get_global_var('func_2943')
call_3792 = relay.TupleGetItem(func_2942_call(), 0)
call_3793 = relay.TupleGetItem(func_2943_call(), 0)
output = call_3792
output2 = call_3793
func_3819 = relay.Function([], output)
mod['func_3819'] = func_3819
mod = relay.transform.InferType()(mod)
mutated_mod['func_3819'] = func_3819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mutated_mod.get_global_var('func_3819')
call_3820 = func_3819_call()
output = call_3820
func_3821 = relay.Function([], output)
mutated_mod['func_3821'] = func_3821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_3822 = relay.TupleGetItem(func_2534_call(), 0)
call_3823 = relay.TupleGetItem(func_2536_call(), 0)
func_2458_call = mod.get_global_var('func_2458')
func_2459_call = mutated_mod.get_global_var('func_2459')
call_3826 = func_2458_call()
call_3827 = func_2458_call()
output = relay.Tuple([call_3822,call_3826,])
output2 = relay.Tuple([call_3823,call_3827,])
func_3836 = relay.Function([], output)
mod['func_3836'] = func_3836
mod = relay.transform.InferType()(mod)
output = func_3836()
func_3837 = relay.Function([], output)
mutated_mod['func_3837'] = func_3837
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3857 = relay.var("var_3857", dtype = "uint64", shape = (4, 11, 10))#candidate|3857|(4, 11, 10)|var|uint64
var_3858 = relay.var("var_3858", dtype = "uint64", shape = (4, 11, 10))#candidate|3858|(4, 11, 10)|var|uint64
bop_3859 = relay.bitwise_or(var_3857.astype('uint64'), relay.reshape(var_3858.astype('uint64'), relay.shape_of(var_3857))) # shape=(4, 11, 10)
uop_3864 = relay.erf(var_3857.astype('float64')) # shape=(4, 11, 10)
output = relay.Tuple([bop_3859,uop_3864,])
output2 = relay.Tuple([bop_3859,uop_3864,])
func_3897 = relay.Function([var_3857,var_3858,], output)
mod['func_3897'] = func_3897
mod = relay.transform.InferType()(mod)
var_3898 = relay.var("var_3898", dtype = "uint64", shape = (4, 11, 10))#candidate|3898|(4, 11, 10)|var|uint64
var_3899 = relay.var("var_3899", dtype = "uint64", shape = (4, 11, 10))#candidate|3899|(4, 11, 10)|var|uint64
output = func_3897(var_3898,var_3899,)
func_3900 = relay.Function([var_3898,var_3899,], output)
mutated_mod['func_3900'] = func_3900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2734_call = mod.get_global_var('func_2734')
func_2736_call = mutated_mod.get_global_var('func_2736')
call_3936 = func_2734_call()
call_3937 = func_2734_call()
output = call_3936
output2 = call_3937
func_3951 = relay.Function([], output)
mod['func_3951'] = func_3951
mod = relay.transform.InferType()(mod)
mutated_mod['func_3951'] = func_3951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3951_call = mutated_mod.get_global_var('func_3951')
call_3952 = func_3951_call()
output = call_3952
func_3953 = relay.Function([], output)
mutated_mod['func_3953'] = func_3953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2970_call = mod.get_global_var('func_2970')
func_2971_call = mutated_mod.get_global_var('func_2971')
call_3956 = relay.TupleGetItem(func_2970_call(), 1)
call_3957 = relay.TupleGetItem(func_2971_call(), 1)
func_2734_call = mod.get_global_var('func_2734')
func_2736_call = mutated_mod.get_global_var('func_2736')
call_3972 = func_2734_call()
call_3973 = func_2734_call()
func_2242_call = mod.get_global_var('func_2242')
func_2244_call = mutated_mod.get_global_var('func_2244')
call_4012 = func_2242_call()
call_4013 = func_2242_call()
func_3951_call = mod.get_global_var('func_3951')
func_3953_call = mutated_mod.get_global_var('func_3953')
call_4017 = func_3951_call()
call_4018 = func_3951_call()
func_355_call = mod.get_global_var('func_355')
func_359_call = mutated_mod.get_global_var('func_359')
var_4025 = relay.var("var_4025", dtype = "float32", shape = (864,))#candidate|4025|(864,)|var|float32
const_4026 = relay.const([-0.780868,9.482693,-4.925100,5.076067,7.783274,-2.010513,-1.626692,-1.550151,6.814453,-4.519847,8.903772,-7.665775,-8.828720,-9.694786,-5.202919,7.606761,6.203818,7.867637,3.332852,-2.887320,3.669662,-0.824944,7.043035,-8.520492,0.395177,-0.308717,3.149646,5.234482,-6.441562,0.702796,4.345484,3.363172,-4.421230,-5.245803,-4.132648,-0.791884,8.734033,0.784904,5.525777,9.766727,-9.614838,-2.023536,8.096255,6.199409,6.268522,-5.883653,-3.024116,9.405089,-0.247315,-3.866813,-5.613799,9.369541,2.325177,1.888899,-3.798974,-9.546492,-9.158192,-7.699477,-3.386753,-5.918057,-7.004997,-6.549710,-5.611240,4.295564,9.114247,5.586878,-0.005321,4.846074,0.310420,7.401642,2.919585,4.185438,-0.429763,5.393190,7.847582,-7.029396,-5.905504,-2.649187,1.552180,-8.996574,8.057994,-7.113111,-7.746231,-9.058643,-7.814665,8.745658,9.955382,-5.351617,-8.704589,-2.027117,6.258705,5.977947,4.775316,-3.224652,-3.307146,3.619231,9.625416,5.178936,3.649630,9.589338,3.562912,4.476112,2.312399,-4.280535,-4.744428,-1.045790,-4.072403,2.792139,6.573321,-1.322684,-7.416600,-2.758317,1.612921,1.803598,2.421907,7.854000,1.945277,4.973288,-4.040009,-4.886965,-2.993453,-9.120063,8.696800,-6.572856,4.926092,-8.652955,-0.159730,9.986573,-3.617840,-5.347502,-8.578659,8.552775,-6.413173,-7.379302,-2.810810,9.805272,8.784312,1.713727,-2.719481,-2.346503,-2.644935,3.324674,1.648828,1.905234,-9.353054,3.196597,4.497207,-2.003580,4.936882,-8.476337,-8.597542,-8.108765,2.480910,-2.116514,3.299696,3.001122,9.764719,-7.635871,-0.536171,-8.553694,8.509786,6.503001,-5.802667,-2.772108,-0.262165,-4.567761,4.356252,2.974933,-3.409390,-4.994772,-9.839618,-0.824963,-1.005636,-2.280074,-3.816469,9.324788,-2.140378,-1.424510,2.160567,-7.363753,0.456055,-1.892883,0.386592,6.638172,3.807067,4.232742,9.653378,7.040203,-1.484546,-2.360876,-6.950496,-0.279388,-6.878901,-2.785406,8.724535,-7.195617,1.655101,1.513048,-4.209832,-6.912469,-9.415717,5.720337,7.678452,-0.659156,-5.741147,-7.003361,-9.607129,5.560508,6.418551,-5.844807,-9.687914,4.029206,1.302280,-4.171140,8.814764,0.311896,-2.757064,-2.418897,1.420506,6.416503,7.794865,1.663162,-5.893627,4.685446,-5.024459,-2.928076,-1.982240,-6.203819,1.248181,9.144322,4.907892,-0.260306,3.959311,-9.420133,6.872141,-4.859774,0.118585,0.476235,-3.336458,-9.316935,-6.127532,8.761646,-9.834747,5.598382,-1.038468,7.912717,9.249933,0.780026,-8.823643,-9.059168,1.880797,-7.344164,-9.536489,-0.827536,-4.687374,7.089238,7.861461,6.796361,-6.413483,4.671140,9.925514,-1.960016,9.352454,6.586815,3.596341,9.054405,-9.486795,-8.280982,6.169236,4.327131,1.750249,7.231987,1.663240,-1.096370,9.324665,-9.913930,-3.305135,5.798550,-6.253605,0.805365,-5.999885,-7.208925,4.701295,9.093183,7.464346,-3.363203,0.199880,-8.331125,2.962533,-3.830691,-3.169667,7.195875,-5.657324,-7.648302,-5.616113,-5.836600,5.046670,7.559174,5.485666,3.609238,-2.296971,5.333062,8.414616,-8.770207,3.989028,8.889120,-0.228387,-9.360606,-9.304706,1.782375,5.320873,2.373112,2.383595,6.598509,-4.746952,5.505172,-4.822570,-0.240369,-5.780620,-4.395746,-1.454881,-8.407902,7.455865,5.170548,0.648941,-4.726667,-7.803843,4.397716,-5.493194,5.978666,-3.767039,3.950625,2.293139,-5.154104,3.630734,4.625795,7.647221,-3.112642,9.841178,-7.616102,-3.738548,1.527509,-1.255352,-5.155946,6.813300,0.154293,9.943857,-0.810439,3.094439,-6.412763,-2.868043,-8.445716,7.664573,-2.529308,-6.807856,-3.425150,6.957529,0.413357,-4.105141,-8.652163,4.302975,2.793142,1.385820,-5.569280,7.755472,6.692153,-6.590461,0.502542,-2.187089,-5.941228,-7.797116,4.171440,-8.942258,6.106427,4.999573,-8.124137,-3.082740,7.403324,-6.094437,-0.269740,-7.598363,3.309259,1.334064,2.335936,-3.580384,-5.420133,-9.621279,-4.634247,-1.099680,6.625460,7.102930,7.964755,-6.496299,9.361831,-9.164080,-6.485917,9.552117,3.549150,-2.980415,-5.053669,7.116263,2.301307,4.008489,-6.817699,8.536416,2.634067,-1.288452,-6.333857,4.742268,3.523861,6.120013,-6.144802,8.964424,2.756830,-3.103436,-2.271351,-5.474202,5.092821,9.849200,-6.974004,-9.783894,2.678673,-5.794210,1.615465,-1.594003,7.695154,-2.553666,-8.589535,7.088454,3.579864,-5.978624,6.075161,8.024622,-5.090471,1.120704,8.934520,-1.889352,-1.839055,1.730438,-6.335630,-2.638893,7.220351,1.508689,-6.025806,-5.259223,9.103494,2.495795,2.213129,9.398923,3.548886,-4.196102,-5.967497,7.049559,8.128233,-9.615575,-0.586735,0.025790,5.653809,-2.226027,-7.946866,1.410042,3.286121,-7.440831,6.198047,-1.604442,-2.387578,-2.509713,2.356161,8.730352,-4.369088,-0.281072,-8.578871,-5.535332,-4.834990,3.519042,3.746373,-3.121693,5.293424,-6.072169,7.596624,5.697533,0.239384,-8.553518,-8.905728,-0.736433,-3.167023,7.510589,-5.045146,-7.576916,-0.457340,3.539661,6.747666,-7.482615,2.391530,5.949476,5.522659,-0.859742,-9.106214,3.967136,1.366664,6.501831,-6.667662,-1.111425,7.906500,-3.365250,8.208363,1.028119,7.606270,8.671465,-5.805620,6.672287,-7.759754,6.909146,9.711055,2.047712,-1.626895,-1.379532,3.658433,7.054386,5.000104,5.149902,-7.302573,8.208363,-1.843138,-7.826676,-9.764297,6.808221,0.732971,6.162668,7.798660,1.213009,-7.299574,2.843081,6.989654,-9.049830,-3.069325,8.516929,-7.385835,-4.827678,6.133226,-6.186220,3.472660,-9.511090,-7.410819,1.185129,-2.016004,4.000298,-6.961637,8.534864,3.542633,-6.575527,0.563018,-2.549082,0.138487,-9.065080,5.632371,-9.658512,-9.473036,-8.991462,-5.814152,3.820986,-3.657836,7.830436,4.512269,-3.570912,-5.350295,-6.570708,-6.238936,-1.328374,1.120968,9.556335,8.830627,2.065257,-4.963504,-1.522452,1.099031,-4.576889,-3.483659,-3.347972,-9.259428,-1.594688,-1.926862,-2.756865,-3.852290,-5.390906,5.532809,-4.735663,5.775070,3.247790,0.320611,-7.271601,9.824365,6.483191,2.280469,7.401072,-9.169997,-7.273067,-6.277217,-3.905580,1.760877,-7.118427,-6.570303,2.322513,3.844789,9.486216,-4.192081,2.056485,-8.493478,9.800723,8.175676,3.133595,0.994943,-7.579908,-7.323673,-3.212401,1.273016,0.625942,6.933535,1.711641,9.819648,-4.218365,-7.723826,6.892422,-4.453342,-0.429078,0.855663,0.182539,-8.158481,-5.042553,-9.151895,-7.558027,8.401211,5.558493,9.086528,3.613438,-4.252509,-0.701448,-3.293276,8.889069,6.765331,-5.188605,-0.563314,9.331791,7.307011,8.744726,-6.492540,2.814479,3.287052,-1.566436,0.577803,6.218103,6.988232,-1.569629,6.115426,-7.211728,-5.865072,5.202056,1.976511,4.099349,-9.374593,-8.467728,-2.383806,7.398609,0.020919,-2.704715,5.680028,-0.108818,-5.977459,-1.297386,-6.530290,-8.266496,8.816893,1.582659,-9.333259,9.681091,-5.629176,9.806968,3.064664,-0.150742,-5.661903,3.635232,2.670283,4.628146,9.346987,1.273288,-8.273869,-9.038742,-0.976549,-2.256351,-3.908529,6.397799,-7.568630,8.111740,8.389153,-3.898201,3.778543,-5.428380,6.047353,-9.980736,6.468693,-9.934365,0.022055,-9.452355,8.304755,-5.946675,-9.797253,-8.756846,-8.054912,7.248456,3.658048,6.119837,5.592762,8.206461,3.291006,4.173923,-2.425492,7.297213,-4.938132,1.701683,-0.565681,8.048677,4.399900,9.301027,-9.208622,-4.036637,-7.703804,-3.095439,0.602556,-9.276835,5.335580,0.856487,-8.772136,5.494385,-3.108533,-9.013814,-4.290466,-4.319101,8.861950,5.644851,-9.949849,2.964223,3.918623,-2.868278,-1.074716,-1.135010,7.055375,1.093171,-1.808819,-2.345332,6.765146,4.572098,1.608347,8.500728,-1.650742,-9.671588,-5.175246,3.380877,7.729092,-3.157831,1.911131,8.553342,8.564914,-6.066470,5.905339,-5.357824,2.009633,-0.065851,2.953781,8.581725,-6.958871,-2.932001,4.114726,-8.656483,-6.180829,-0.889650,6.782298,-5.425628,-4.661320,-3.545154,0.833909,-6.446492,9.653823,0.377771,1.990867,-5.866603,-4.702909,-3.091954,-1.905170,-2.272105,-0.565854,-5.736023,-2.869738,-9.625443,2.741507,-8.017575,8.044994,5.860431,6.212684,-8.771834,3.873864,-2.747229,9.062450,-4.348486,-9.112196,-3.531554,4.293129,-8.407783,4.198789,7.694449,-4.406183,-4.828507,-7.205428,-5.750369,-1.663730,-4.943174,1.075208,-2.014693,-2.529619,-7.520662,6.866373,6.069356,-0.438910,0.111069,-6.627862,-6.938679,-9.944762,-4.448954,4.672527,5.753867,6.479473,1.228628,-6.532060,-5.924208,-0.977790,2.236526,7.876644,7.647291,4.861216,-2.262248,1.842711,-0.456563,8.287540,-0.436732,4.133882,-2.874350,-8.207825,9.894088,8.426887,9.084181,-5.174599,-3.629921,2.677135,9.809913,-8.881222,-3.621910,7.213689,5.383366,9.346997,0.419242,6.776418,-4.097117,5.329755,0.345042,7.011749,6.546970,2.679212,8.850658,0.012783,1.616878,-8.493843,7.477008,-5.476731,-0.478250,-5.148040,-0.836117,-3.184693,5.106383,-7.315032,-3.355517,6.324611,-0.606484,2.041417,6.527825,-0.041009,-6.368535,-9.892221,-8.981078,4.806594,1.669817,-6.994119,3.572234,-1.877328,6.409579,5.742433,-5.397656,0.409045,-1.843124,-6.810843,8.529492,-3.400114,-9.059249,0.844900,-2.844548,4.932266,-4.059516,4.185258,-7.458312,4.074663,9.322354,-3.834989,2.559953,-4.722658,-9.214003,-9.506242,7.504712,-6.329003,2.424504,9.844973,-2.134308,6.418050,-0.985753,-1.359018,-0.734602,-6.149946,3.876630,5.980251,-0.412808,-3.109344,7.508281,-8.617090,8.409333,-1.947359,-8.224804,-7.342090,-1.594802,-0.715235,1.410347,-2.847644,-7.090655,7.103111,3.709612,-5.420119,-6.311457,-0.702335,9.542450,-7.232309,2.200207,-5.074307,-1.987255,-1.667710,-0.366644,-9.333902,-2.530537,-7.500788,2.782622,-7.997851,-1.731643,3.489691,0.028923,-0.834389,-2.330068,3.593301,2.901154,-5.992162,0.912969,2.157905,6.006855,7.559429,-5.284492,-0.187633,9.413302,-2.029494,2.940464,-2.926969,3.027995,-2.194866,9.385748,-6.916449,0.285687,8.251812,2.743585,-6.408930,-3.240400,-7.115580,3.274874,-2.685908,5.674482,9.593023,-4.073779,2.190279,-5.901663,-4.417073,-3.727640,1.612901,7.493877,-8.554971,3.577037,1.793811,-4.113849,-6.181132,-2.592993,-6.487591,4.345711,-6.443043,8.062370,9.721284,3.523296,0.185888,-9.785795,2.746765,1.353729,5.891454,9.805653,-2.567272,-5.583956,7.815980,-1.895130,8.116195,3.402669,5.744780,3.377992,0.108258,-9.845469,-2.293623,7.804071,-0.084514,2.594281,1.910091,-1.777941,-9.284905,-0.130402,6.306126,2.688703,-5.569535,7.349621,6.079456,-7.505472,3.903697,-2.736856,-4.659429,-6.458313,-8.851570,-7.277636,-0.597799,-7.674108,6.853193,-2.513744,6.278866,2.084098,9.548687,7.223295,-1.007123,8.843355,2.474485,7.889710,2.205350,-9.072151,-2.199716,1.539213,-8.519215,7.641050,-5.163531,-1.709986,-7.971194,8.762214,-7.973543,-6.170301,-7.036217,7.479194,9.974443,6.311833,-2.934101,4.695290,-2.526562,2.846429,-1.157208,2.347975,-3.769518,-7.532488,9.606681,-0.422153,-0.243520,-3.317510,-7.361378,-4.604734,1.257847,-5.230267,-0.906361,-6.206189,-2.632212,5.909403,-6.971821,3.169997,-8.873017,1.672100,5.544693,-1.501434,4.957703,4.691777,-7.078737,6.943004,2.799454,8.626413,5.379779,8.860213,8.199754,-0.818318,4.339982,-0.805693,6.311700,3.890431,-7.255838,1.489970,9.995343,0.861642,-9.945769,9.029831,0.656681,2.141378,-7.036074,-6.242502,2.198335,1.038445,2.379794,5.587976,-2.513976,9.826752,-2.725094,-7.828361,4.479554,1.074767,-1.304114,-4.741620,3.669314,2.951718,-1.321024,4.931188,-8.579186,-2.430940,-2.808045,8.169427,-9.609460,0.932337,8.160315,-8.104702,-5.366800,-4.211185,-2.286955,-2.503808,0.279665,9.567141,5.496406,8.533497,-0.316054,4.278220,4.919639,1.161540,-4.896560,-3.354291,-6.230110,-9.247799,-6.565396,1.838971,3.999889,-2.223471,9.762804,-4.922304,-2.263424,5.027291,9.236046,-8.929358,2.762824,3.505587,-5.630319,1.358436,-8.633722,3.213404,-0.591251,-4.492728,-6.603396,-2.804859,-8.537311,3.745479,9.761516,3.391881,3.002302,5.411565,1.655431,-0.246653,6.795280,-1.036838,-2.241691,-6.318874,1.584269,-8.272430,-0.733226,7.115823,-0.727304,8.145949,1.250243,-2.701408,-4.487033,8.086947,-4.597995,-6.071336,0.902471,-4.038196,-2.933135,5.349885,6.837360,-4.338890,-2.020574,-3.322721,-7.388264,-8.189164,9.498661,-1.249293,8.711582,6.446344,-6.200046,9.029450,3.991969,2.887726,-4.928700,6.139277,-0.443088,3.726920,7.482853,1.312677,-9.572720,-2.702166,3.989329,5.623341,-9.004021,-4.313230,-4.683391,6.342456,5.491639,-9.309079,0.898320,3.403445,7.327659,-3.123477,7.056346,-9.668534,-9.672646,9.395389,2.014777,-9.999477,9.746002,-3.442937,-6.836217,4.803001,-8.076220,0.006353,0.477208,-3.554532,-7.601288,-4.358213,-2.073758,4.745942,0.354973,-6.922275,7.293988,-1.358706,-5.733230,0.139395,-1.988433,-3.142032,-7.574990,-8.923429,2.828649,-3.475404,-1.560175,7.746773,1.585274,4.328757,6.084851,8.334247,-6.852955,6.062126,5.366843,8.986321,-0.345424,-8.795438,2.093309,-7.014532,1.796961,-1.030971,5.285232,4.567536,-9.996284,1.487039,-6.136040,1.406878,7.950445,2.196684,3.937759,-2.112019,0.504674,-8.268933,-1.946474,6.927073,6.270041,3.723069,1.183816,4.210648,2.839037,4.523208,6.497727,-3.067353,2.373236,0.310201,-0.941055,-2.251501,1.639201,-5.727021,-9.450674,3.115768,-6.857119,-2.387731,6.698512,9.470624,7.775300,4.658148,7.503589,4.707474,9.857776,9.908481,-5.559373,4.390564,-5.970509,9.881264,4.590749,-1.691392,7.295955,7.377699,-6.563476,2.086158,6.507058,2.242790,-8.111992,-9.880951,6.347139,3.373978,4.013422,2.848703,1.464995,-0.033968,-7.412559,-0.209695,-4.541766,-2.432413,-5.156752,-8.555452,-2.770430,8.791601,-2.551472,9.943038,4.474976,1.508993,1.565811,6.719500,-2.815157,-0.926856,-0.884889,-9.383576,-5.094959,-3.367219,4.918438,9.297700,-2.210834,-5.599534,-6.480881,-8.064542,4.642111,-1.374825,5.144192,1.967891,-3.330524,-1.243317,-1.619851,5.780358,4.785539,1.938527,-2.533212,3.020714,0.785997,5.454983,2.107921,-8.147182,0.773228,6.295742,-3.572691,-7.562826,-1.280950,2.409246,-7.473744,-0.674214,-5.627032,-4.168629,-1.815498,3.534827,0.628980,8.527927,4.111672,9.658725,-4.042297,4.061456,3.141794,0.808478,-3.945576,-4.230903,1.364644,-2.054260,7.316526,-7.167534,-7.457428,6.305496,-4.556611,-4.323117,-5.032146,9.185341,7.989392,8.971676,-8.506732,-6.985950,-9.799401,7.998799,3.326626,1.709773,-3.915430,-3.161069,-0.943746,6.976171,-1.440588,-8.249357,1.027686,-2.105572,-7.181790,-7.651037,-1.144387,0.319677,3.600399,3.000196,-4.260629,8.831737,-8.820263,-3.462071,-4.939947,-3.115295,9.687701,0.770149,-3.024406,6.073972,-4.710494,1.809399,1.216461,9.391819,-9.905331,8.637095,2.571387,0.434645,2.723725,-8.636196,2.626404,-4.677841,9.641506,-4.375312,0.075030,-5.721497,8.381331,4.046122,-9.106698,1.007760,1.491885,-5.814747,-6.228158,-1.045890,6.898428,4.470843,9.912709,6.237425,0.829293,-6.089904,-1.666422,-8.451214,1.939323,-2.118587,-3.488263,-1.600191,-4.813724,8.324409,-2.020753,-3.812811,-3.238404,9.916073,-7.558344,9.297538,-5.205742,-1.167731,-5.118377,-0.241113,-3.806676,-3.372370,-3.394169,-6.157806,2.543114,0.846015,-6.736660,1.644655,6.207742,-5.796572,6.203822,-3.164842,-0.082122,-5.845854,5.949753,-9.923621,8.337475,6.213168,3.558116,5.597783,5.362048,-3.994538,-2.901802,-5.400478,-9.114508,4.976142,-3.089369,0.980376,1.368607,-7.507187,-9.800730,-8.230975,4.749191,-6.039295,-8.878145,7.441166,-8.585920,8.427545,3.248998,0.372742,-5.903740,1.176982,-8.294585,0.126050,6.712272,-3.423804,-2.431144,1.736873,-8.551210,-1.935741,6.833793,-1.447159,-5.374225,6.588813,-5.958576,6.035786,5.725174,9.025003,-2.493428,9.244691,-5.005368,8.076995,4.636861,-7.094284,-7.718948,-9.045249,-3.047921,-7.510236,-6.540415,-0.364447,-3.176749,0.432738,5.026082,7.759016,-5.231209,2.080268,-3.612539,3.480698,9.464533,-6.025471,2.704344,-0.717828,7.046282,-0.379853,-3.593500,-5.664343,-3.089572,-0.192282,0.646155,3.927384,3.401706,-3.101511,-4.594432,6.241315,-7.827121,9.547399,-2.766815,1.918042,-2.098533,6.180112,6.556030,1.295286,3.512721,1.186230,8.123251,-4.495016,6.780983,9.761721,7.086125,5.323212,-4.221265,7.136280,-6.578069,-3.309727,-1.402130,4.476966,-6.395323,4.792643,0.922118,-9.113808,-1.770093,9.747660,3.991998,7.011669,2.116400,-9.727697,3.231722,-4.655404,0.041865,1.733285,-9.308571,0.353744,3.984457,-5.709396,0.650436,-0.682452,-2.820231,5.200397,-6.183080,-7.395337,3.421184,3.166014,-3.837304,0.906021,-8.325632,3.484673,7.268736,4.608033,8.864413,3.174695,-9.511594,-0.937271,9.463285,5.384827,-1.518216,1.906068,-9.738780,9.972756,-9.553892,-2.525629,4.853847,3.187812,-1.654014,7.125568,2.845624,-7.088212,-9.711905,-7.320597,-5.977017,1.485329,5.251883,1.492871,9.364141,-2.558124,1.288644,7.314572,-8.899945,2.311707,8.876669,-5.952065,-1.124813,5.035331,-0.583439,-8.998208,9.129528,6.411794,6.714637], dtype = "float32")#candidate|4026|(1690,)|const|float32
call_4024 = relay.TupleGetItem(func_355_call(relay.reshape(var_4025.astype('float32'), [6, 12, 12]), relay.reshape(var_4025.astype('float32'), [6, 12, 12]), relay.reshape(const_4026.astype('float32'), [1690,]), ), 3)
call_4027 = relay.TupleGetItem(func_359_call(relay.reshape(var_4025.astype('float32'), [6, 12, 12]), relay.reshape(var_4025.astype('float32'), [6, 12, 12]), relay.reshape(const_4026.astype('float32'), [1690,]), ), 3)
output = relay.Tuple([call_3956,call_3972,call_4012,call_4017,call_4024,var_4025,const_4026,])
output2 = relay.Tuple([call_3957,call_3973,call_4013,call_4018,call_4027,var_4025,const_4026,])
func_4030 = relay.Function([var_4025,], output)
mod['func_4030'] = func_4030
mod = relay.transform.InferType()(mod)
mutated_mod['func_4030'] = func_4030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4031 = relay.var("var_4031", dtype = "float32", shape = (864,))#candidate|4031|(864,)|var|float32
func_4030_call = mutated_mod.get_global_var('func_4030')
call_4032 = func_4030_call(var_4031)
output = call_4032
func_4033 = relay.Function([var_4031], output)
mutated_mod['func_4033'] = func_4033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2970_call = mod.get_global_var('func_2970')
func_2971_call = mutated_mod.get_global_var('func_2971')
call_4079 = relay.TupleGetItem(func_2970_call(), 1)
call_4080 = relay.TupleGetItem(func_2971_call(), 1)
func_2619_call = mod.get_global_var('func_2619')
func_2622_call = mutated_mod.get_global_var('func_2622')
call_4096 = func_2619_call(relay.reshape(call_4079.astype('float64'), [2, 10, 16]))
call_4097 = func_2619_call(relay.reshape(call_4079.astype('float64'), [2, 10, 16]))
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_4102 = relay.TupleGetItem(func_1490_call(), 0)
call_4103 = relay.TupleGetItem(func_1492_call(), 0)
output = relay.Tuple([call_4079,call_4096,call_4102,])
output2 = relay.Tuple([call_4080,call_4097,call_4103,])
func_4112 = relay.Function([], output)
mod['func_4112'] = func_4112
mod = relay.transform.InferType()(mod)
output = func_4112()
func_4113 = relay.Function([], output)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_4135 = relay.TupleGetItem(func_2118_call(), 0)
call_4136 = relay.TupleGetItem(func_2120_call(), 0)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_4139 = relay.TupleGetItem(func_1490_call(), 0)
call_4140 = relay.TupleGetItem(func_1492_call(), 0)
output = relay.Tuple([call_4135,call_4139,])
output2 = relay.Tuple([call_4136,call_4140,])
func_4148 = relay.Function([], output)
mod['func_4148'] = func_4148
mod = relay.transform.InferType()(mod)
mutated_mod['func_4148'] = func_4148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4148_call = mutated_mod.get_global_var('func_4148')
call_4149 = func_4148_call()
output = call_4149
func_4150 = relay.Function([], output)
mutated_mod['func_4150'] = func_4150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3665_call = mod.get_global_var('func_3665')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_4185 = func_3665_call()
call_4186 = func_3665_call()
func_1839_call = mod.get_global_var('func_1839')
func_1842_call = mutated_mod.get_global_var('func_1842')
var_4201 = relay.var("var_4201", dtype = "float32", shape = (1690,))#candidate|4201|(1690,)|var|float32
const_4202 = relay.const(-9.565665, dtype = "float64")#candidate|4202|()|const|float64
call_4200 = relay.TupleGetItem(func_1839_call(relay.reshape(var_4201.astype('float32'), [1690, 1]), relay.reshape(const_4202.astype('float64'), []), ), 2)
call_4203 = relay.TupleGetItem(func_1842_call(relay.reshape(var_4201.astype('float32'), [1690, 1]), relay.reshape(const_4202.astype('float64'), []), ), 2)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_4208 = relay.TupleGetItem(func_3679_call(), 0)
call_4209 = relay.TupleGetItem(func_3681_call(), 0)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_4213 = relay.TupleGetItem(func_3679_call(), 0)
call_4214 = relay.TupleGetItem(func_3681_call(), 0)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_4215 = relay.TupleGetItem(func_3046_call(), 0)
call_4216 = relay.TupleGetItem(func_3048_call(), 0)
output = relay.Tuple([call_4185,call_4200,var_4201,const_4202,call_4208,call_4213,call_4215,])
output2 = relay.Tuple([call_4186,call_4203,var_4201,const_4202,call_4209,call_4214,call_4216,])
func_4217 = relay.Function([var_4201,], output)
mod['func_4217'] = func_4217
mod = relay.transform.InferType()(mod)
mutated_mod['func_4217'] = func_4217
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4218 = relay.var("var_4218", dtype = "float32", shape = (1690,))#candidate|4218|(1690,)|var|float32
func_4217_call = mutated_mod.get_global_var('func_4217')
call_4219 = func_4217_call(var_4218)
output = call_4219
func_4220 = relay.Function([var_4218], output)
mutated_mod['func_4220'] = func_4220
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4241 = relay.const([[[-6.479173,4.890043,6.117029,0.799526,9.037782,-8.160301],[2.838086,3.577257,-0.434457,3.804515,-3.076251,7.405270],[8.033658,5.818230,-7.040430,4.689965,7.372293,7.788546],[-2.195611,-7.855753,1.620152,0.386351,5.654060,-9.278790],[-3.688918,-0.252243,2.062859,0.327321,7.577449,3.092834],[-3.206446,-1.017498,7.894709,-1.010096,-9.923971,8.834882],[6.067413,7.211948,4.893249,7.215812,6.165954,-5.406580],[2.823263,2.928270,-3.548799,-8.373927,1.788051,3.805422],[1.187330,-9.979248,-2.260657,4.177373,-4.255057,-8.800282],[0.793609,1.198693,5.557630,0.731239,1.570668,9.096356],[4.933014,-6.380224,-7.356372,-7.301388,1.301119,-4.755146]],[[-2.959070,-5.967802,-3.366969,2.256256,-8.182786,-5.417089],[-4.823277,-7.327966,-8.412529,-2.461572,-5.816374,-9.321675],[-5.482870,-2.658016,7.328124,5.646457,-0.464691,-2.807940],[-5.144223,-8.951264,-2.039595,-4.917866,9.650017,-0.424241],[1.743240,6.669131,-6.407701,-9.420583,-1.386513,-6.991189],[9.851007,-0.502828,6.728785,-7.462736,-5.752546,-8.680863],[7.365372,2.451610,-3.154439,-4.877922,-0.833996,1.376346],[7.549995,3.135883,-4.673062,0.895892,7.458820,4.181292],[-9.642813,-7.235309,4.464597,6.426019,-4.373148,4.009864],[0.504627,-9.737780,6.957136,-1.921991,5.841631,6.079334],[8.333377,-9.229989,-2.269449,-8.559522,8.641125,9.260599]],[[9.869564,-5.630410,9.367922,-6.796846,9.664237,4.833140],[-7.541485,-6.373266,2.486267,7.181221,-4.082751,-0.497083],[-5.323449,-3.463618,2.260319,-6.705049,-5.735089,-8.185351],[-1.361852,-3.833254,0.803405,-0.723300,8.681587,-5.857247],[-4.199371,-6.366938,3.196966,0.685475,1.931163,0.289319],[5.147913,9.541237,-9.231061,-7.670979,9.682973,4.376630],[-0.592599,-7.983136,-4.253447,-5.100157,6.594765,9.404975],[1.296850,-8.615036,-4.232133,-4.256962,1.147862,-9.184146],[5.332069,-6.931903,3.857921,-5.403093,6.726988,-3.989424],[7.707232,9.478657,4.816942,1.681237,0.493705,1.513229],[1.964314,-8.478627,6.589343,7.807898,8.663427,9.699699]],[[6.300660,-8.345554,9.086631,-4.574261,5.341085,5.855209],[-1.699736,-5.686792,-5.371861,-2.320724,0.470595,-9.973802],[8.847084,9.304886,6.577440,6.551195,-9.597890,6.404854],[-9.652951,-5.040795,1.112518,-1.143089,-0.693215,-0.023976],[-5.840590,1.253047,1.395016,5.434854,0.261427,8.844196],[0.881370,4.247160,-5.728784,9.013853,-2.395116,-8.476002],[5.753835,8.887103,6.397360,-9.901023,-2.588404,2.080701],[6.145618,-6.907691,-0.287146,0.817054,6.189713,4.508946],[-3.782902,-4.213849,0.972618,-3.579394,-8.042121,-0.165606],[6.602543,4.053128,-3.123900,3.253676,0.398530,-7.322536],[8.989144,-1.186595,-0.533640,-7.610896,-2.849174,5.876359]]], dtype = "float32")#candidate|4241|(4, 11, 6)|const|float32
var_4242 = relay.var("var_4242", dtype = "float32", shape = (4, 11, 6))#candidate|4242|(4, 11, 6)|var|float32
bop_4243 = relay.mod(const_4241.astype('float32'), relay.reshape(var_4242.astype('float32'), relay.shape_of(const_4241))) # shape=(4, 11, 6)
output = relay.Tuple([bop_4243,])
output2 = relay.Tuple([bop_4243,])
func_4246 = relay.Function([var_4242,], output)
mod['func_4246'] = func_4246
mod = relay.transform.InferType()(mod)
var_4247 = relay.var("var_4247", dtype = "float32", shape = (4, 11, 6))#candidate|4247|(4, 11, 6)|var|float32
output = func_4246(var_4247)
func_4248 = relay.Function([var_4247], output)
mutated_mod['func_4248'] = func_4248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3411_call = mod.get_global_var('func_3411')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_4302 = relay.TupleGetItem(func_3411_call(), 0)
call_4303 = relay.TupleGetItem(func_3412_call(), 0)
func_3145_call = mod.get_global_var('func_3145')
func_3147_call = mutated_mod.get_global_var('func_3147')
const_4336 = relay.const([0.236114,-1.187505,6.849857,-1.580012,2.872338,-4.441946,-7.131828,3.450651,-1.675653,0.338866,-3.178704,1.141138,-3.692551,-6.264457,-7.517318,7.315816,7.000814,5.262619,-3.728413,-2.386706,0.028998,-2.550572,-1.083291,-7.686769,1.102699,-9.554241,3.719718,-3.286534,-5.883587,8.198665,-7.704450,-4.743884,-3.589926,-8.722229,-1.126746,-7.330332,6.536460,7.648658,8.006958,2.390266,3.187175,-4.979455,5.398757,-9.816250,-3.266988,-2.899030,2.726749,-2.439413,6.903177,-4.453017,5.060157,1.660791,3.445713,-5.615803,-1.065756,-6.448219,3.452838,-1.819911,5.942694,-7.821129,-8.035642,-6.672887,-1.230673,-3.071984,5.633365,1.553320,3.664295,-0.682167,4.798799,2.881542,-7.791344,5.073414,9.810783,-6.665893,-6.805275,-6.540291,-8.588111,-1.352824,1.653853,-5.870010,1.745295,9.749918,-9.579639,-9.798700,-0.087943,1.216713,7.401409,9.348909,-2.314159,9.822880,-8.179259,2.192584,-6.447070,1.679045,-9.398532,-2.496721,2.844335,2.329155,7.122351,3.621356,3.602992,-0.083636,5.623006,7.465344,-1.691984,8.109890,-2.120279,0.985594,-0.044506,-8.824119,-3.218081,6.636791,-9.362650,8.857388,-9.730430,-6.647804,5.753832,-4.725400,-8.747955,-4.038004,-0.808862,7.214973,-5.297071,1.980850,-4.907105,-4.935591,-9.985927,-8.263185,-4.374358,4.779761,4.900126,-9.701343,-6.802328,6.430913,6.592071,1.188333,8.249447,-7.636996,5.513278,3.457735,-0.021027,-7.793850,9.188073,0.324207,-0.846352,-6.049912,-7.114665,-7.989473,2.109071,1.609655,7.223392,-7.759406,-2.937109,5.176213,-0.583312,9.733634,-5.265364,5.649639,-9.024106,7.812571,4.600216,-8.713162,-4.260259,8.503789,8.667969,-2.802424,7.084745,2.219202,-0.772564,-7.953237,2.428670,7.587930,8.663053,4.772183,0.515923,6.212475,-1.383863,5.572918,-8.233706,-7.353902,0.350387,8.865393,3.786188,-7.655283,2.629086,-9.806249,-0.053379,-5.488633,7.204646,-0.659020,-4.398701,4.340180,5.310837,4.053715,5.300016,1.761965,8.270262,-2.751999,-7.507680,-6.865734,2.181025,-2.883494,-3.397350,2.763931,7.815417,-3.898869,3.012342,-8.412235,-5.281141,6.372775,-0.627175,8.078423,4.494624,-8.288063,-8.823170,5.414670,-0.628497,-1.312998,-1.894383,-8.253957,2.988994,6.458533,-8.262505,7.674842,8.152472,2.195866,-1.112640,7.922801,-5.687919,6.087888,-3.858755,-6.626819,-1.124832,7.390389,-4.472872,-0.232943,3.165639,0.801366,-7.154690,-2.682967,0.332969,2.473073,-9.400321,7.296818,-9.727786,-7.087693,5.310223,1.914702,2.902762,-0.494771,-3.995025,3.855031,-5.492552,-7.253118,9.575399,-7.745786,-7.635400,-5.371784,3.437644,8.662497,-9.264481,-8.467106,-6.030382,-9.589857,6.317911,8.168736,6.756892,6.490050,4.355560,-4.244900,-0.189826,5.679100,-5.626942,-7.788344,1.726640,-2.927627,6.465644,0.737011,-3.340156,9.113778,-9.624444,-1.450353,2.971637,4.354248,0.658226,7.693276,2.107072,-4.813745,8.670029,1.398563,-7.717016,-3.609870,-4.880480,0.792436,4.537213,-4.996651,1.019461,-2.721605,-3.767035,-7.044009,1.243170,-6.519463,-8.906639,0.582729,6.474017,2.530643,-3.738622,3.779320,8.527624,6.719084,1.808696,0.862900,-5.970184,8.541968,9.483058,-1.056556,7.889571,8.923670,4.504970,3.175184,1.089063,-5.268428,1.927053,7.906691,-8.465336,8.317324,-1.448114,8.263478,-3.635316,-2.114728,-9.748136,6.994940,6.237304,7.315418,2.004782,2.743288,1.603778,-5.226043,8.029020,-9.704335,-4.062581,9.243772,-4.594767,-8.934680,2.051990,-1.152892,7.840882,0.470644,9.485099,-0.001504,-9.991762,0.264990,5.947390,-3.636418,1.368840,7.178275,-4.879602,2.432347,6.232688,-2.010044,-2.062471,-4.840711,-3.545475,-3.032462,-1.961501,-6.378954,-9.778569,1.332781,1.610688,-2.613934,-4.510192,-6.997750,-4.205042,4.408510,6.634503,-2.507960,-2.671152,-2.887663,-5.170902,-6.555910,6.122274,6.296011,4.135931,2.912466,-5.206308,1.034126,0.406821,-0.148826,6.894830,9.453713,7.087337,-4.928845,-2.306752,-5.373051,6.091224,-7.657171,2.435141,-2.867425,-4.383878,8.392170,0.452597,4.521246,-4.557117,-0.368870,4.995091,3.174891,6.052369,-0.612098,-2.818841,4.381191,-9.076137,-4.155562,6.739579,-1.922342,-2.876605,1.230566,-0.213005,4.063063,-2.843714,5.098785,4.634371,-5.913352,-4.446253,9.636745,8.163754,5.939275,-1.327401,7.906439,-5.001452,7.311161,9.075159,8.125539,5.555537,-5.359424,-3.065915,6.244602,-2.888276,3.613239,-9.853129,0.428639,4.989154,6.005676,-2.535967,3.674950,-6.852015,-8.962062,0.633626,-3.609196,-0.735291,-7.102122,-3.675215,-8.670835,3.759340,4.818814,-3.779457,0.739250,0.665451,0.253300,6.841984,8.896325,4.589463,8.840132,3.020360,3.488104,0.690828,-4.038932,3.953758,-4.627691,-0.507287,6.384980,8.567701,-0.717652,5.555823,-1.174446,4.960842,9.764294,4.219842,1.110065,-2.138570,-0.824475,4.757471,8.890413,-9.887453,8.611885,8.645625,5.029078,-7.332620,-7.970361,-0.804413,-3.379500,-5.248951,-0.789663,2.755809,-9.394512,0.199725,8.328204,4.659708,8.752074,-3.631793,6.928845,1.950289,-2.642851,-5.628532,-5.898806,-5.923584,-7.004473,-0.095840,-9.715975,5.128695,4.455520,-7.537291,6.268257,7.457443,2.913229,2.088279,9.495933,7.794649,-1.333878,-4.965777,-8.691710,-7.955702,9.304356,-0.739229,-7.294644,-7.902307,-6.319100,-4.675287,5.840835,-7.386131,2.573577,3.835178,9.436607,3.687042,-5.989532,-0.680510,-3.080380,-5.223395,7.754482,0.983870,-5.863071,2.431882,-4.783029,-8.226214,9.047543,-2.990429,-0.876134,9.240218,2.279842,-3.147245,2.548897,-0.900094,8.211716,4.235267,3.378187,-1.930552,5.941447,-2.850803,8.510054,1.532816,-6.641310,9.543365,3.187875,-7.090139,1.996941,-8.945625,3.683411,-6.845398,7.814593,1.344224,8.308210,-3.932678,6.169563,-3.728459,6.620755,9.558159,-3.357641,2.248143,6.142887,-4.819885,-8.823808,5.814863,3.344731,-1.997223,-0.705239,-0.507954,3.946616,-0.749396,7.724372,5.168489,-5.106167,-8.877326,7.653595,-7.472788,7.738509,-8.260818,1.778239,5.114971,1.215597,-2.341761,9.774630,7.386707,3.421508,7.629239,9.835554,-8.919664,7.932077,-9.372209,-6.245085,-0.666194,4.208100,1.143011,-5.302680,7.513395,-4.912367,7.066291,-0.690352,-1.493228,-8.205509,6.387117,-5.636066,9.845079,-1.823163,-7.355029,-6.303889,7.289508,8.213479,7.478458,8.657448,-7.315587,-2.897371,-7.882045,-1.670346,-7.005493,-7.856759,-3.523421,1.682722,0.558937,5.751713,-1.514074,-2.685000,6.650906,-5.759973,1.555372,-7.682693,7.526628,-9.014795,2.524756,-6.598998,6.030042,9.761433,5.131126,-5.923653,4.893445,0.569787,2.020003,6.700486,1.800446,7.608620,9.742839,-7.419882,-8.661771,-5.389024,-3.772406,-8.733644,-8.508101,3.552243,-1.406140,-1.505862,-6.187573,-4.455576,2.947785,-1.375130,5.734906,9.171432,7.277839,-5.406447,-2.547678,-5.868539,0.608626,5.041554,-7.397212,-7.985622,-0.716939,-4.693891,-6.821815,-4.698129,-5.314534,-0.106447,0.659153,6.941883,-8.231752,-8.523800,-6.869387,2.870182,8.558505,5.593316,3.728898,5.995254,-5.892885,-3.969543,-1.379918,-2.406425,-9.969208,-5.949148,1.312164,-5.789258,1.141887,-2.068019,0.673743,-6.151156,-2.207612,2.258206,9.976237,4.564032,-6.940444,-6.095999,8.654844,-3.629715,4.955452,3.365606,-8.387514,-3.295704,-9.954110,0.636940,-6.119958,3.903783,-9.443871,1.759647,2.845789,8.801866,-6.002994,-7.558579,8.159494,6.964955,8.548615,8.107886,8.906821,-3.901584,-8.329181,9.859869,2.935462,-6.357229,2.440959,9.924499,-2.663024,9.894647,-2.343648,-3.332722,-4.776958,-7.505987,-4.352700,3.226997,-3.627751,-5.606596,8.348255,2.982358,-6.215431,-8.889941,8.953359,-4.644920,0.496980,4.943961,4.354053,0.460032,2.549688,2.403124,3.984985,0.467894,-3.772199,-5.435731,-3.592107,-1.466109,2.113311,-1.858173,-9.405030,5.064361,-4.712453,4.780712,-0.398149,1.543326,2.764665,-6.031684,2.068761,-7.210447,1.025598,-3.637832,-5.725226,-2.439691,4.457861,1.274319,3.300609,5.848656,4.389479,2.197907,8.876803,8.038840,6.457754,9.638298,-8.241503,4.182141,7.599435,2.288843,-6.443489,0.269037,-6.236694,-9.109511,1.902165,-0.921811,-3.783431,5.820181,-8.774212,-2.570733,-3.560778,7.271751,7.130284,-9.119993,-9.543950,4.072551,9.408691,-8.544446,7.668937,1.161959,9.920537,1.784950,2.168032,9.871769,6.980030,3.403237,-5.516739,-3.180751,4.486264,-4.470877,-1.535500,3.334169,-8.895151,-1.515055,-9.986209,7.569921,8.978685,6.667707,7.007677,-5.873160,2.709368,-0.572515,-2.925696,0.456681,2.157463,3.342164,1.610333,1.936434,1.757924,5.954037,4.137242,6.360035,8.214383,6.967034,5.243419,-3.919985,8.223545,-0.279974,9.126528,-4.806366,4.986901,6.554427,-1.186647,8.617356,-3.392894,4.117714,3.183029,-2.134597,4.254027,4.003788,4.324236,5.248001,-2.920408,9.639852,-6.848019,-4.306839,4.791601,-6.669555,-8.008743,2.381355,4.866825,-5.565881,3.576773,3.638857,-3.646732,-6.489684,-5.503621,-5.465150,0.460248,6.361999,3.330810,-1.632083,2.523831,-3.784989,-8.849564,-9.049998,-7.704847,-0.070189,0.517657,4.681800,-2.961127,1.634758,8.487727,5.142153,1.150051,-5.129113,-5.939372,-7.970567,-6.234548,9.521093,-8.100587,-7.068116,-0.205690,9.786214,-6.176846,7.150362,-4.505279,-8.755338,-2.778206,-4.389906,-0.146210,1.882242,7.453187,-1.976195,-5.037598,-4.646327,7.254252,-3.171926,9.928786,9.240652,-6.265295,-7.281117,6.138174,-1.192158,-0.217720,-9.684836,-7.999154,5.407316,0.228675,9.993640,9.114899,-8.395521,-2.287981,-4.599905,-3.804607,2.646047,-7.493624,2.350989,-2.993443,-4.741286,5.466844,9.113596,-2.848597,9.368154,-2.704498,3.384605,9.075098,-4.432730,-0.339175,1.981526,-9.785175,4.325703,8.528960,2.142837,6.762355,-4.685336,-7.084826,-4.274599,8.349710,-0.231392,-5.883929,3.465945,8.847859,1.375145,4.121195,0.242090,7.352864,-9.007076,1.669547,5.046189,5.731624,2.965056,3.618501,-9.588356,-2.759906,0.402651,3.114117,-8.694518,-2.161302,-7.706707,-4.291905,-1.930671,2.612591,-2.074559,-4.671744,2.319326,-6.547654,7.338154,-3.429680,-7.522681,-8.333426,3.944651,-2.061242,-1.469617,6.526836,-4.560437,-3.784004,4.453504,-9.796101,2.460795,8.858067,-6.551946,6.035380,-4.794598,-6.078107,-4.678857,-4.905841,-4.449204,8.720186,1.793947,4.666384,3.819003,-1.045545,0.664864,-9.979744,2.862719,5.855142,3.032669,4.892335,-0.166913,-9.676061,-1.003941,-9.424565,-6.703624,-6.940693,-2.085159,4.886371,9.315859,5.683613,-9.913406,0.950852,3.027025,-5.744262,-3.460474,-5.581982,2.117660,5.979374,3.162468,-3.243893,-3.165457,-0.680682,-8.561743,-4.412493,7.862759,2.951975,2.877848,-3.173121,6.123214,-6.486057,-8.264253,2.963638,3.965460,-4.062683,-3.371725,-7.203261,1.427753,-1.172130,3.088408,4.566817,-3.679573,-1.341785,-8.079490,-7.211979,0.927248,5.783525,-7.002827,8.871690,9.045089,-5.625615,-4.959034,-8.229434,3.322519,-7.908529,8.953980,-8.462265,-8.931335,-7.536875,2.935596,-2.037341,2.878875,-3.312179,-0.415376,0.657488,5.376694,-6.180477,7.695928,1.045724,0.070092,1.747553,-9.329610,-1.348814,-2.495965,4.386468,8.545653,5.382070,1.652037,-4.092754,4.767624,4.830430,-0.352813,1.033383,1.976538,-5.558285,-6.524500,4.211029,6.064401,8.326730,-4.444872,2.261960,-9.467368,-9.183870,1.443838,-0.158000,6.747115,7.791923,1.086328,1.911847,-3.839940,9.312999,5.386614,5.885662,-5.523708,-7.803054,7.864023,-1.265609,-3.035331,9.317020,-7.656636,9.678699,1.389097,9.579606,3.603869,3.855946,-8.941558,-7.443379,-7.061339,5.825843,-4.303240,9.083459,2.974244,4.466423,7.435004,9.142030,-8.700294,0.762222,-6.950368,-5.470602,4.476688,7.148140,-1.188452,7.981052,2.106847,5.963367,-6.246161,0.653766,2.735974,-4.150383,4.959570,-2.949380,-1.406288,2.342475,-0.490327,-3.977110,-8.701884,5.438121,9.440919,7.178121,1.112135,-8.885712,3.815218,-0.586391,-3.831526,5.264286,-3.993163,-5.266021,3.779569,0.656609,1.303433,1.945154,5.939267,7.620396,6.523458,9.421566,0.868965,5.629922,9.933337,1.119966,-5.827244,1.771170,-9.448838,6.122365,-5.640948,6.357873,-2.994386,6.017968,-0.795803,-3.064890,0.761790,-6.233985,2.040285,4.315982,6.930180,-9.691066,-1.268150,9.900005,8.233984,-1.960657,5.243594,-5.145964,9.408901,-2.623542,-5.416019,3.606450,-9.084529,-0.626001,1.500677,3.222494,2.857314,-7.006045,9.573293,-6.755384,-1.523315,-2.826496,4.642285,2.007195,-3.838435,-6.881669,-7.587610,-9.488924,1.119239,-2.202381,4.279807,-1.831665,-6.230859,-2.203441,-8.115037,-5.296424,7.946062,-5.871752,8.664693,3.995046,1.449460,-8.902455,-0.295663,1.471825,-0.994542,-2.784560,7.732018,-4.803446,-8.456722,1.801966,8.457623,6.756031,0.276651,1.105180,-7.863535,-0.268616,-9.416306,5.800046,-9.154364,7.345348,5.268079,-7.118094,-5.725535,-9.040457,8.177870,2.345874,2.979466,6.167399,-1.991465,-1.244393,-4.368091,6.488023,4.655660,2.870310,1.552412,-3.562709,-9.676482,8.596065,4.447909,6.906267,1.871414,-9.049290,-4.090235,7.840885,-9.127061,3.810128,9.729961,-4.438215,8.767431,-4.072570,-6.563136,0.247011,2.408794,8.141616,-8.476654,3.250771,5.074738,9.627377,8.647510,-8.871270,-4.315066,-0.930077,-3.700264,-5.547485,-1.472688,-8.016284,-9.760754,-6.612170,-5.522760,-8.085153,-8.990583,4.404905,5.929677,6.045137,2.200236,9.571359,7.012932,2.136741,-5.073364,-2.350813,-3.981788,5.882624,-0.371939,-7.418501,0.973718,-7.316543,-0.259748,3.507399,-4.917808,6.556767,-6.555056,5.248957,-8.351832,-7.979060,-5.983338,-2.429770,0.102201,6.469547,5.226246,4.583788,1.996681,-9.751211,7.589368,4.432237,9.598199,4.628589,1.432341,3.106942,-5.437675,-4.512531,-6.650685,1.846771,-9.504541,-8.176378,5.978774,-1.993403,9.921515,-5.893619,-9.785418,-3.937066,-5.471996,-8.379629,-9.915099,-2.394395,1.601268,8.427552,2.615976,6.538491,-8.412769,9.725780,7.317199,-5.661155,-0.336222,2.999224,-0.346790,-8.149701,-0.117222,3.034525,3.650662,2.939706,-9.314881,-6.873317,9.816391,-3.138711,5.318112,0.799613,3.272696,8.125728,2.686062,3.113327,-0.738865,-8.770037,-7.571214,0.365993,1.173900,-1.507746,-0.218367,5.558737,-2.626680,2.446353,9.517947,2.554718,-4.359593,7.640529,2.807723,6.656552,-7.345127,-2.554476,5.799914,-4.725065,-1.592168,1.427703,-1.996614,7.082535,-7.994738,-2.641379,9.376055,-6.083899,7.167742,9.962417,-9.883267,-6.506965,7.984315,1.560131,3.773073,7.254555,-2.335713,-0.272241,-4.861914,-8.461030,-7.246123,-7.544549,-9.001498,6.462508,-0.620178,-7.344216,7.537383,-0.020918,-2.396050,-9.748662,0.554035,8.882505,-8.833731,-3.514983,6.962827,0.394661,-4.675245,-9.465502,-3.764646,-9.393225,-3.259212,-0.565755,8.864692,-6.017806,-2.427941,1.211798,9.768266,-0.360888,-9.465862,-6.737858,8.746139,0.762195,8.656885,-3.189112,5.354432,3.687239,6.363153,-3.837910,-4.817275,-0.175098,7.022892,-9.052915,1.085435,-5.251947,-0.666064,3.268790,-1.029230,6.284102,-2.561492,7.632497,-5.069656,-3.897754,-3.660033,-5.416360,4.112970,-8.173162,6.105374,1.373323,1.341108,-9.546795,-3.972449,1.248230,5.024683,5.493568,-7.433327,9.844192,7.761415,-3.869575,-6.805281,-0.262093,-5.767187,-5.955617,1.036676,-0.345499,3.343549,-3.111494,-1.962234,-1.183768,-9.748928,-6.777813,3.177350,8.254166,5.916810,-2.887158,2.825848,4.910041,3.482500,9.985760,-4.537819,0.552564,-1.352150,0.895840,4.942072,-9.221113,7.265929,-9.924671,4.270141,4.876346,-8.068451,-8.076139,-4.896170,8.894783,-8.581256,4.036161,-4.940928,-6.557335,-2.188275,9.048322,-2.543017,-1.582306,-6.608231,-5.509213,-2.329124,-5.195402,0.737430,-6.398883,4.298505,-2.156877,-2.345459,-5.633050,-0.897776,-4.888942,-6.681325,1.146641,9.616455,3.180520,-3.383280,4.021262,2.525324,5.149951,4.929365,7.471010,3.676200,-5.854650,5.771994,-6.255724,6.078541,-3.981854,4.578815,-7.654399,5.942044,-9.540352,6.971719,9.205041,-2.506126,-2.035891,-6.641113,-9.647268,8.727684,-0.131260,1.112246,-6.568669,5.837138,-1.208776,-5.366244,2.277469,-8.193482,-9.862965,-5.253779,7.473784,-6.134794,-9.043048,3.015231,4.449406,3.676641,2.415745,-5.305098,0.058365,-1.399721,-5.616888,6.549152,5.069415,-2.845728,4.143343,5.599232,6.018627,-3.635532,-8.068016,-9.984619,-3.573340,0.580855,-5.020749,-5.360910,1.505328,0.500968,9.278968,-5.283007,3.918895,-3.697235,4.643108,2.785657,-6.355427,-7.541399,1.299383,-1.446185,-1.794293,1.957722,4.629708,-1.284643,-3.182863,1.715465,-3.549681,-0.705563,-4.578809,3.612160,-8.923196,-3.658718,-8.542056,-8.926460,0.619104,-1.632400,-7.015869,-3.066842,5.339549,9.159061,-4.548085,1.634908,-9.236490,-6.556579,4.039642,-4.968346,-8.419109,-5.057371,3.930344,-9.111697,3.499970,-1.642781,-3.291831,4.197852,0.449467,-9.405577,3.646657,2.573179,9.821004,-7.728116,8.966579,8.892096,3.822643,-3.981192,-7.922204,4.722400,2.949644,9.985309,-1.142256,2.444643,9.455000,-3.630988], dtype = "float32")#candidate|4336|(1690,)|const|float32
call_4335 = relay.TupleGetItem(func_3145_call(relay.reshape(const_4336.astype('float32'), [1690,])), 1)
call_4337 = relay.TupleGetItem(func_3147_call(relay.reshape(const_4336.astype('float32'), [1690,])), 1)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_4374 = relay.TupleGetItem(func_3679_call(), 0)
call_4375 = relay.TupleGetItem(func_3681_call(), 0)
output = relay.Tuple([call_4302,call_4335,const_4336,call_4374,])
output2 = relay.Tuple([call_4303,call_4337,const_4336,call_4375,])
func_4380 = relay.Function([], output)
mod['func_4380'] = func_4380
mod = relay.transform.InferType()(mod)
mutated_mod['func_4380'] = func_4380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mutated_mod.get_global_var('func_4380')
call_4381 = func_4380_call()
output = call_4381
func_4382 = relay.Function([], output)
mutated_mod['func_4382'] = func_4382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_4448 = relay.TupleGetItem(func_2118_call(), 1)
call_4449 = relay.TupleGetItem(func_2120_call(), 1)
output = relay.Tuple([call_4448,])
output2 = relay.Tuple([call_4449,])
func_4463 = relay.Function([], output)
mod['func_4463'] = func_4463
mod = relay.transform.InferType()(mod)
mutated_mod['func_4463'] = func_4463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4463_call = mutated_mod.get_global_var('func_4463')
call_4464 = func_4463_call()
output = call_4464
func_4465 = relay.Function([], output)
mutated_mod['func_4465'] = func_4465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_4494 = relay.TupleGetItem(func_2534_call(), 0)
call_4495 = relay.TupleGetItem(func_2536_call(), 0)
func_2734_call = mod.get_global_var('func_2734')
func_2736_call = mutated_mod.get_global_var('func_2736')
call_4496 = func_2734_call()
call_4497 = func_2734_call()
output = relay.Tuple([call_4494,call_4496,])
output2 = relay.Tuple([call_4495,call_4497,])
func_4514 = relay.Function([], output)
mod['func_4514'] = func_4514
mod = relay.transform.InferType()(mod)
mutated_mod['func_4514'] = func_4514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4514_call = mutated_mod.get_global_var('func_4514')
call_4515 = func_4514_call()
output = call_4515
func_4516 = relay.Function([], output)
mutated_mod['func_4516'] = func_4516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mod.get_global_var('func_2060')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_4549 = func_2060_call()
call_4550 = func_2060_call()
func_3836_call = mod.get_global_var('func_3836')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_4552 = relay.TupleGetItem(func_3836_call(), 0)
call_4553 = relay.TupleGetItem(func_3837_call(), 0)
uop_4558 = relay.sin(call_4552.astype('float32')) # shape=(2, 10, 16)
uop_4560 = relay.sin(call_4553.astype('float32')) # shape=(2, 10, 16)
output = relay.Tuple([call_4549,uop_4558,])
output2 = relay.Tuple([call_4550,uop_4560,])
func_4571 = relay.Function([], output)
mod['func_4571'] = func_4571
mod = relay.transform.InferType()(mod)
output = func_4571()
func_4572 = relay.Function([], output)
mutated_mod['func_4572'] = func_4572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2734_call = mod.get_global_var('func_2734')
func_2736_call = mutated_mod.get_global_var('func_2736')
call_4595 = func_2734_call()
call_4596 = func_2734_call()
func_3604_call = mod.get_global_var('func_3604')
func_3606_call = mutated_mod.get_global_var('func_3606')
var_4646 = relay.var("var_4646", dtype = "uint16", shape = (294,))#candidate|4646|(294,)|var|uint16
call_4645 = relay.TupleGetItem(func_3604_call(relay.reshape(var_4646.astype('uint16'), [14, 3, 7])), 0)
call_4647 = relay.TupleGetItem(func_3606_call(relay.reshape(var_4646.astype('uint16'), [14, 3, 7])), 0)
var_4652 = relay.var("var_4652", dtype = "uint16", shape = (14, 3, 7))#candidate|4652|(14, 3, 7)|var|uint16
bop_4653 = relay.maximum(call_4645.astype('float64'), relay.reshape(var_4652.astype('float64'), relay.shape_of(call_4645))) # shape=(14, 3, 7)
bop_4656 = relay.maximum(call_4647.astype('float64'), relay.reshape(var_4652.astype('float64'), relay.shape_of(call_4647))) # shape=(14, 3, 7)
uop_4662 = relay.exp(var_4652.astype('float32')) # shape=(14, 3, 7)
uop_4668 = relay.atan(var_4652.astype('float32')) # shape=(14, 3, 7)
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_4675 = relay.TupleGetItem(func_4514_call(), 1)
call_4676 = relay.TupleGetItem(func_4516_call(), 1)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_4678 = relay.TupleGetItem(func_1986_call(), 0)
call_4679 = relay.TupleGetItem(func_1988_call(), 0)
func_3211_call = mod.get_global_var('func_3211')
func_3213_call = mutated_mod.get_global_var('func_3213')
var_4692 = relay.var("var_4692", dtype = "bool", shape = (576,))#candidate|4692|(576,)|var|bool
call_4691 = relay.TupleGetItem(func_3211_call(relay.reshape(var_4692.astype('bool'), [576,])), 2)
call_4693 = relay.TupleGetItem(func_3213_call(relay.reshape(var_4692.astype('bool'), [576,])), 2)
output = relay.Tuple([call_4595,var_4646,bop_4653,uop_4662,uop_4668,call_4675,call_4678,call_4691,var_4692,])
output2 = relay.Tuple([call_4596,var_4646,bop_4656,uop_4662,uop_4668,call_4676,call_4679,call_4693,var_4692,])
func_4699 = relay.Function([var_4646,var_4652,var_4692,], output)
mod['func_4699'] = func_4699
mod = relay.transform.InferType()(mod)
mutated_mod['func_4699'] = func_4699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4699_call = mutated_mod.get_global_var('func_4699')
var_4701 = relay.var("var_4701", dtype = "uint16", shape = (294,))#candidate|4701|(294,)|var|uint16
var_4702 = relay.var("var_4702", dtype = "uint16", shape = (14, 3, 7))#candidate|4702|(14, 3, 7)|var|uint16
var_4703 = relay.var("var_4703", dtype = "bool", shape = (576,))#candidate|4703|(576,)|var|bool
call_4700 = func_4699_call(var_4701,var_4702,var_4703,)
output = call_4700
func_4704 = relay.Function([var_4701,var_4702,var_4703,], output)
mutated_mod['func_4704'] = func_4704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_4711 = relay.TupleGetItem(func_4112_call(), 0)
call_4712 = relay.TupleGetItem(func_4113_call(), 0)
output = relay.Tuple([call_4711,])
output2 = relay.Tuple([call_4712,])
func_4724 = relay.Function([], output)
mod['func_4724'] = func_4724
mod = relay.transform.InferType()(mod)
output = func_4724()
func_4725 = relay.Function([], output)
mutated_mod['func_4725'] = func_4725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_4782 = relay.TupleGetItem(func_1986_call(), 0)
call_4783 = relay.TupleGetItem(func_1988_call(), 0)
output = relay.Tuple([call_4782,])
output2 = relay.Tuple([call_4783,])
func_4797 = relay.Function([], output)
mod['func_4797'] = func_4797
mod = relay.transform.InferType()(mod)
output = func_4797()
func_4798 = relay.Function([], output)
mutated_mod['func_4798'] = func_4798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3411_call = mod.get_global_var('func_3411')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_4815 = relay.TupleGetItem(func_3411_call(), 0)
call_4816 = relay.TupleGetItem(func_3412_call(), 0)
func_1671_call = mod.get_global_var('func_1671')
func_1674_call = mutated_mod.get_global_var('func_1674')
const_4834 = relay.const([-9.791051,1.168207,-6.834401,5.661718,6.445025,-0.474536,6.258482,4.762176,-4.716715,4.035924,-7.327971,4.875397,6.888495,-1.755013,1.658507,-9.244066,6.720945,0.749548,-2.096072,7.965168,8.416120,5.064731,8.950579,-7.508517,-3.111460,-8.125104,-5.178245,-1.094783,-4.953418,-4.096574,1.250047,1.177044,-0.550877,8.146277,8.412298,-1.534698,-9.822208,-1.390114,5.740305,-0.593273,-1.711553,-6.959569,-0.306820,-1.821059,6.490394,-8.230986,-6.055389,9.146306,0.131813,4.916970,1.971249,7.772386,1.868691,9.838591,0.099162,-5.129385,-2.835105,-5.363562,8.655197,4.600720,9.879013,-1.944176,-6.633761,-5.326219,-5.150534,-7.573992,9.265847,4.750898,9.642399,1.631481,-2.047882,8.489321,-0.894325,-8.784984,-8.126000,-0.404335,4.887346,4.840545,-2.622844,0.377510,1.800239,3.441996,-3.679060,4.334834,3.995556,-3.389315,4.662403,7.141169,0.462216,4.268127,1.954230,8.450519,-6.856313,-7.232662,-8.750758,7.867867,-1.616912,-3.577326,-6.297307,-0.952077,3.563078,0.782743,-2.750512,-7.784680,-0.786033,-5.208799,-4.773121,7.563712,-5.860360,7.778661,1.109126,1.926368,5.353029,-7.703561,7.045538,-0.072603,0.060187,4.998960,-9.158814,2.810906,-9.240183,-3.387783,2.080218,1.403149,-3.406648,-3.026619,-5.822055,6.143676,-5.254521,2.219851,-9.297488,-5.365859,2.542174,-5.637721,3.554300,2.776868,6.356093,-0.864159,9.818689,-7.922464,3.936527,4.363151,-0.289565,8.950702,6.790092,1.021818,-9.262875,4.510125,5.765414,8.532311,-7.419876,-2.001876,9.638167,-1.329871,7.664150,-4.013674,-6.721122,-7.985870,-1.785472,3.976166,-4.387133,9.735786,-1.534217,-5.734129,-1.661388,-6.415690,-6.687289,-0.175250,-2.995838,-3.957989,-2.675613,-6.077236,4.226121,5.873944,-6.137535,6.740109,2.635768,-8.828997,4.029594,-0.733585,-9.121822,-8.447662,0.230144,-8.108712,-9.782037,0.831987,2.656932,5.147532,-1.669088,-5.921999,3.635832,3.746502,1.299707,-3.153939,7.279982,-5.448105,4.632908,-6.887406,-8.327234,-6.441048,-0.497047,8.946904,3.006672,-4.162555,6.771168,8.438527,-0.575187,-9.378238,-7.116675,-6.314445,2.538742,4.070556,-6.831542,5.503677,2.319018,5.753589,-6.665608,8.842936,4.365131,1.480620,7.633820,9.088766,-4.326439,2.494835,-8.134605,-2.750206,-7.235854,-6.302877,0.520475,3.590386,-1.295363,-4.282125,3.577770,-1.406178,0.956860,-2.982523,-5.182115,-9.038260,7.326155,1.471496,-1.437007,7.904080,-2.977249,5.497682,0.597128,-5.966074,1.286047,-7.837315,-3.400434,4.778711,8.678167,-2.330255,2.177833,-3.575184,-5.124256,-9.692565,0.399313,-0.230755,7.230329,2.950080,-4.151232,-1.726357,9.824103,9.642044,-0.773581,0.626195,-2.872397,1.033652,8.580624,-7.575611,-3.136999,-6.056475,-4.422998,2.017058,-1.060012,-2.568871,-0.157126,-9.041729,-5.683275,7.570080,-2.755674,-2.300775,0.018186,-9.671423,4.243719,-6.448626,7.633394,6.250105,9.216057,9.555084,5.732266,5.663545,9.762456,2.267747,0.526712,-3.052287,-9.027575,-0.788240,-9.096432,-8.041526,1.429060,2.862785,6.390715,-8.986327,9.891628,-8.020799,8.182148,-3.190159,6.668781,-5.726811,9.462283,-6.240832,0.989106,5.454926,1.959309,4.307237,-9.979610,3.107126,6.789369,5.394130,3.244390,-9.985805,3.256825,8.376834,-0.353058,5.343701,-1.919444,5.180677,-8.184057,-4.596264,-6.367286,-0.901433,-2.844197,-5.810286,8.815548,9.466740,7.372995,7.756998,-6.255216,7.066337,4.738165,-4.392348,-6.786120,0.108809,-3.737991,-1.135215,-2.692727,-0.745200,-9.287088,-1.230431,-4.143246,7.938975,6.174355,-3.899582,5.020189,6.521214,-2.417147,5.026284,8.014411,4.756778,-0.034597,5.875678,-8.524856,6.779168,-4.894744,-4.500566,9.066696,4.187407,-1.282956,8.103614,9.752472,-6.685934,-4.670172,8.561422,4.078056,-4.313857,-4.911684,-3.267517,8.570803,-5.824228,3.938544,-1.050806,-2.916725,-6.181931,3.210143,-5.741664,-7.664554,-2.822786,-4.098111,-2.335133,-0.373491,0.306226,-1.890426,7.543295,-0.682582,-2.291126,-7.939724,-2.228484,-1.183028,1.596219,-7.028629,-9.738291,9.872989,-6.857827,-3.809631,6.760907,0.964545,-8.675312,-4.135372,2.693594,5.552467,-8.235319,-4.322868,-1.688492,4.785288,-1.969807,9.747166,-9.433368,4.368936,3.565246,-2.974937,-5.272093,8.915265,6.832603,-4.903651,-3.354131,-7.728711,8.770860,-0.198090,0.110528,4.767282,0.210278,0.117604,3.578487,-9.907890,-7.860084,8.889869,-0.760018,4.169291,-0.657614,-3.640194,9.690500,-7.242882,2.689187,-1.094731,-9.573422,-8.997445,9.356866,-3.224402,-4.214124,2.897746,0.882008,0.445262,6.265434,9.017523,-9.901413,7.574527,2.704482,-6.299860,-4.452496,3.568264,2.442479,-5.160955,3.771142,0.338618,-0.872653,7.244813,-9.890951,1.625228,9.408175,3.141828,7.273207,-0.882105,-7.579838,9.857479,8.078648,-9.615492,8.035735,1.090781,1.622363,-4.128697,5.097871,1.798132,4.748458,-3.669494,3.338907,-1.846065,-9.482256,4.403305,-0.854559,9.177345,-7.766677,-4.577959,-6.470865,-8.715314,-3.484788,3.478528,-2.458930,4.355450,-5.630047,5.067599,-3.572773,-6.725749,-5.896112,4.053684,-1.084987,-6.307925,-5.807097,-6.069358,7.907115,-2.239021,-6.231771,5.880403,-3.850428,-8.188117,-2.905108,0.461591,8.253746,4.618024,5.322416,-1.022648,9.727700,-4.999440,3.913789,5.317327,-3.139377,6.303898,5.983213,1.131244,8.774083,-1.718643,8.230779,-0.480593,6.656172,-1.542878,5.026668,4.195211,-0.064716,-2.732175,-6.144071,-5.603500,-2.769098,8.322121,-8.895856,9.753897,-9.091085,-4.471956,7.147793,0.075232,-2.278945,-7.231687,-0.841384,1.030127,8.902134,7.671968,0.076018,-2.447519,5.858111,8.628163,3.736513,9.760428,0.235347,5.522117,3.250673,7.098674,2.322422,0.501244,1.677096,-4.225982,-6.880333,9.849002,2.161464,0.762269,0.219987,-8.341589,-0.596368,0.095979,6.770420,-3.699322,2.642955,2.245783,6.350280,-7.883565,5.910364,-7.235125,-5.070092,1.573951,4.627570,-3.030048,2.905656,4.181437,8.838968,1.134174,-4.751543,7.101859,-9.657527,-1.461455,0.552787,-9.723614,6.784305,-8.673688,-7.911056,5.785170,4.670143,9.816409,-2.686231,-3.918740,2.774630,9.647169,7.592040,8.061780,9.886222,-0.777444,-1.211577,1.181312,0.055249,-5.465040,7.313280,0.745990,7.693316,7.374262,-6.089552,2.860230,-9.559908,9.012104,6.113547,0.109718,-8.041708,2.408671,-1.068667,-0.103398,9.115105,-4.624167,-7.593641,6.269377,-1.560298,2.122322,-8.621670,-4.233121,2.862678,-4.608380,-2.419173,0.871615,3.124063,1.858393,8.773979,3.362567,-0.722438,2.343696,-2.237784,9.303975,-7.603732,1.908453,9.290664,3.520325,5.781006,-9.258195,3.954099,-1.980790,-8.491372,-7.229503,3.511462,-6.788050,1.446669,-1.099254,-1.284235,-3.093082,-4.130959,8.391554,4.148096,7.119964,4.489839,-5.585663,0.183361,8.546549,5.447629,-2.931545,-6.364307,-6.420495,-2.350728,9.081878,-7.403426,0.150013,4.589801,0.470387,3.309237,0.499805,-4.139444,6.929294,-4.381452,6.250490,2.025987,-4.792021,9.642713,1.371353,6.625783,-5.041253,3.688776,-6.581517,1.392650,6.743534,-5.837999,1.218654,3.245512,8.951103,4.671313,6.651294,-1.949681,-4.381673,-8.668735,9.270376,-7.316995,-5.576241,-3.756042,-1.120126,-8.598481,-3.056482,-6.964400,7.746857,5.125765,5.147142,1.444710,7.355345,-4.145705,2.412206,2.481527,-6.988725,9.344965,0.880650,-2.774344,8.911109,-1.301149,5.440015,8.576503,-9.737012,2.298571,2.942237,-5.082997,-7.052734,0.506875,0.065593,5.411819,-4.075795,-6.380193,-0.488727,-5.084666,0.117671,5.061810,5.904094,1.935854,9.208283,-8.560474,-0.428405,4.953056,9.938203,-8.063915,-0.748851,9.622708,-7.197377,-8.013282,-0.164944,-9.437884,6.249125,-1.145669,-7.386802,-7.346564,0.955965,6.248920,2.270282,-4.951771,3.197034,-6.335377,-5.220205,-0.374657,1.814835,0.059185,1.317828,-5.994823,-7.093712,-7.613717,-1.888495,-1.127536,8.999658,4.010410,8.353345,5.133399,5.532436,-7.746952,9.975787,-4.795157,9.945439,-5.590757,-5.502000,-9.762397,-0.745969,5.310453,4.463660,-8.485496,3.138552,-1.633479,9.122949,7.985697,2.386104,3.657605,6.760156,2.918948,7.722255,0.006810,-8.602305,-0.208804,-7.409009,-9.855912,-6.469419,-2.360887,-3.954005,-5.416406,0.653947,-8.346821,9.016505,1.441714,-9.556558,3.579627,2.396502,0.186842,-0.729287,-1.131425,9.747401,5.209416,2.979464,-0.003462,-1.263159,5.880512,-6.817235,-5.229934,5.059240,-3.473154,-2.465739,-1.215858,4.334684,-9.416750,4.619240,-2.189944,7.681575,-7.252371,-5.026125,-2.636049,4.531605,-7.151385,-3.871463,8.185765,-0.391151,8.633037,-5.786741,-0.842585,8.258614,0.897413,2.958930,0.308803,9.886309,2.192414,-8.619784,-0.848821,-3.217056,-6.349439,7.878813,-4.449148,5.735682,4.218847,4.329864,6.389458,-4.677590,-5.326189,2.451764,-6.411336,0.537051,-8.317197,6.487793,-2.645489,6.203315,-0.196790,-8.712451,-3.220164,-3.035139,2.311676,-2.118991,-6.618041,-6.414405,-2.843004,5.343693,-2.133789,9.033653,-0.222391,-9.663115,-3.395246,0.819606,-9.560690,9.075518,-5.084666,-3.687961,-3.807441,-3.747773,7.623200,6.173616,-4.297901,-1.042819,0.130535,8.983083,3.901700,-9.042286,8.374395,-8.375069,-7.538235,7.833336,-4.545457,-3.634076,-1.801819,0.655611,3.035709,7.712690,6.545454,2.309513,8.984719,7.730887,-0.997452,-9.247650,4.238452,3.809637,0.672971,-2.220854,9.890224,-1.781870,-9.709128,0.470787,-1.680409,9.614774,1.698719,-5.041586,-5.896716,6.593229,-3.651533,-5.758673,-8.966530,9.535878,-6.128515,6.316069,-5.376418,3.702297,-1.272999,3.801442,-7.871744,-2.462702,0.981118,-0.553025,-2.713872,-5.637420,-8.964443,3.398103,-6.306142,-4.700161,-9.341455,-0.234994,8.176714,0.940967,2.544613,-2.009462,-5.933134,4.768493,9.846646,7.454317,9.903378,-3.723105,-8.457844,-1.313292,-5.110912,-8.133697,8.840229,-7.973108,-3.099410,-9.291275,-0.477475], dtype = "float64")#candidate|4834|(980,)|const|float64
call_4833 = relay.TupleGetItem(func_1671_call(relay.reshape(const_4834.astype('float64'), [10, 7, 14])), 2)
call_4835 = relay.TupleGetItem(func_1674_call(relay.reshape(const_4834.astype('float64'), [10, 7, 14])), 2)
output = relay.Tuple([call_4815,call_4833,const_4834,])
output2 = relay.Tuple([call_4816,call_4835,const_4834,])
func_4840 = relay.Function([], output)
mod['func_4840'] = func_4840
mod = relay.transform.InferType()(mod)
output = func_4840()
func_4841 = relay.Function([], output)
mutated_mod['func_4841'] = func_4841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_4867 = relay.TupleGetItem(func_3679_call(), 0)
call_4868 = relay.TupleGetItem(func_3681_call(), 0)
func_3145_call = mod.get_global_var('func_3145')
func_3147_call = mutated_mod.get_global_var('func_3147')
var_4878 = relay.var("var_4878", dtype = "float32", shape = (1690,))#candidate|4878|(1690,)|var|float32
call_4877 = relay.TupleGetItem(func_3145_call(relay.reshape(var_4878.astype('float32'), [1690,])), 0)
call_4879 = relay.TupleGetItem(func_3147_call(relay.reshape(var_4878.astype('float32'), [1690,])), 0)
output = relay.Tuple([call_4867,call_4877,var_4878,])
output2 = relay.Tuple([call_4868,call_4879,var_4878,])
func_4886 = relay.Function([var_4878,], output)
mod['func_4886'] = func_4886
mod = relay.transform.InferType()(mod)
mutated_mod['func_4886'] = func_4886
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4887 = relay.var("var_4887", dtype = "float32", shape = (1690,))#candidate|4887|(1690,)|var|float32
func_4886_call = mutated_mod.get_global_var('func_4886')
call_4888 = func_4886_call(var_4887)
output = call_4888
func_4889 = relay.Function([var_4887], output)
mutated_mod['func_4889'] = func_4889
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4903 = relay.var("var_4903", dtype = "float32", shape = ())#candidate|4903|()|var|float32
var_4904 = relay.var("var_4904", dtype = "float32", shape = (9, 2, 4))#candidate|4904|(9, 2, 4)|var|float32
bop_4905 = relay.equal(var_4903.astype('bool'), var_4904.astype('bool')) # shape=(9, 2, 4)
output = bop_4905
output2 = bop_4905
func_4909 = relay.Function([var_4903,var_4904,], output)
mod['func_4909'] = func_4909
mod = relay.transform.InferType()(mod)
var_4910 = relay.var("var_4910", dtype = "float32", shape = ())#candidate|4910|()|var|float32
var_4911 = relay.var("var_4911", dtype = "float32", shape = (9, 2, 4))#candidate|4911|(9, 2, 4)|var|float32
output = func_4909(var_4910,var_4911,)
func_4912 = relay.Function([var_4910,var_4911,], output)
mutated_mod['func_4912'] = func_4912
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4951 = relay.const([[[1.225910,0.471645,-2.839029,1.890880,8.067283,2.203660,-5.876098,2.730286,7.894830,-9.257706],[-6.215388,1.892954,2.666961,2.979455,-8.982905,-6.958781,-5.841732,-7.594124,-7.560292,7.685015],[2.632668,9.725836,6.077520,9.232372,-8.166528,1.920876,-6.028317,-7.569965,4.552838,-7.451219],[-2.430910,-0.479865,-4.510253,-4.982129,-7.477740,-9.268005,-8.450099,7.716498,-9.590980,0.787237],[-5.911403,2.689881,1.864197,-8.104870,0.708835,-2.194567,-7.010451,1.896260,-9.469923,4.670353],[9.652849,-5.573122,4.153393,-1.999034,5.266375,-4.432537,-5.207580,-2.519491,3.873369,3.658384],[1.544873,7.479578,-1.282977,-6.956697,-7.246964,3.858413,-7.003667,0.853632,4.943635,5.946332],[6.698233,-1.105281,-0.966223,3.826415,-9.347099,-1.593890,5.803886,2.933256,-6.936199,-6.721116],[1.400967,1.360316,9.794090,-2.381539,-4.064826,3.385528,8.482091,9.010872,7.518569,-0.922303]],[[0.459066,2.866109,-9.240186,-3.899487,5.856912,2.610426,-6.013905,-7.476474,6.301616,-3.625197],[-8.238955,-3.212010,-2.824074,8.312465,-6.506832,5.263989,5.991945,-8.307553,4.047285,-0.782999],[4.409275,2.967357,-3.707207,-7.248965,-2.988655,0.126017,-1.108173,2.692394,-0.330382,-2.482352],[-4.830179,-8.021374,9.168095,2.737222,-7.007010,8.416978,3.742093,0.798290,-3.087999,1.051308],[1.903943,8.262344,-8.805851,-3.556685,-8.189308,-0.303599,-6.832349,-0.566792,4.304811,-1.036936],[7.427591,-0.615213,-7.885994,2.927385,6.672991,-7.997447,7.500679,-8.331599,-5.598317,-7.686477],[-5.828884,9.447916,-0.824092,-4.058743,5.174626,4.999349,-9.177596,9.612549,9.498524,4.431543],[6.238647,4.590877,8.743418,7.009366,-5.579015,-2.977674,-5.405052,8.127559,6.871490,-3.332611],[-2.035697,-6.096420,6.726144,-4.042904,-3.115443,9.367369,8.585590,-9.687102,6.371798,-1.086793]],[[-0.857001,-7.677686,-4.804147,4.095609,2.847446,-4.728615,2.427215,-1.887356,-8.523448,1.679028],[-8.308918,-2.308413,-1.850066,-5.978052,-9.942123,9.660219,-8.292953,5.422702,-7.921382,-3.939414],[0.052261,6.645808,8.106126,8.237352,-8.503347,-0.985441,-1.043326,-1.703038,-7.350917,-9.796868],[9.146571,7.455050,7.471089,-3.497923,3.744558,7.344717,7.165482,2.111515,-9.911488,-0.807899],[3.554424,8.645154,-8.775811,-0.563377,-7.892671,6.433632,7.668439,6.075208,-9.639312,-5.287892],[4.383191,-1.601663,-5.242079,3.921536,-6.736771,-1.100687,7.619130,2.536485,8.878071,-1.509559],[-5.198845,-0.769437,-7.770830,-9.799305,6.469648,-0.884016,-2.952001,-9.349290,-4.683533,9.280683],[5.810911,-7.336564,9.696497,-7.989684,-1.456510,9.267664,0.202525,-5.494440,2.391650,-8.520682],[7.915499,8.042025,4.824177,-1.804441,-7.598065,-8.692917,9.525318,-9.706003,9.057443,-9.141434]],[[7.756658,-7.191366,4.033098,-0.980587,-8.349615,1.457454,9.120872,0.198667,-3.652135,-5.777572],[-7.388635,2.395885,1.439476,-3.350416,-1.358501,-8.207556,-2.493606,-6.687707,9.920538,0.072337],[1.956318,3.895353,8.488708,8.614903,8.435945,-7.306979,0.227448,1.616780,8.580969,2.147204],[-1.166980,4.554732,-4.165548,-3.797040,-2.079639,5.556285,0.422010,-9.267601,-0.474460,-4.158941],[0.612909,1.817929,-3.809929,-4.960337,-4.839854,-6.702416,4.187474,-8.940922,1.313057,-8.134278],[-8.573850,-7.261490,-4.246751,-8.039850,-8.063803,-8.357672,-4.623444,-8.897539,7.818804,-8.151610],[-5.639435,-2.240400,8.348322,-0.813515,-6.613603,-9.164707,-0.949509,-4.873499,-5.084686,2.080366],[2.887450,-6.592186,0.350403,4.178452,0.462087,9.372858,-0.608684,-7.435810,-8.273315,-7.562987],[0.149741,6.366055,5.905679,-6.100134,-1.888959,6.759873,-2.737937,3.864244,-9.772519,-4.997641]],[[5.663798,-6.836217,8.362170,9.609227,2.176581,-6.436975,-7.043957,-5.306397,1.709248,8.926273],[1.880390,-6.088770,6.731241,3.428145,-1.576068,6.882998,5.108421,7.024746,-1.226138,-3.054946],[-2.242464,-5.846854,-8.542517,0.711378,-2.705731,-4.475743,5.088867,2.444771,-1.435774,-8.768870],[-1.120111,-1.656095,4.974203,-6.511445,-0.846936,6.703149,-8.463857,-4.573037,2.313960,-2.779985],[-5.959688,4.465724,9.668516,-9.272938,5.211899,-3.135161,7.826943,-7.747984,-8.488038,-8.596138],[1.774895,-4.004627,-2.081515,4.134125,-1.145230,3.605676,-2.156699,-2.019049,6.052454,2.618441],[5.208530,-9.049484,4.746999,-5.944950,1.716580,-7.772036,-3.380256,-9.037318,5.571638,-0.907079],[-5.165001,9.171098,-0.617378,-4.317492,-2.809543,3.540521,-7.261455,-0.796335,-7.149594,1.306770],[-4.511575,-5.399717,-0.545519,9.457738,-3.836066,3.537127,2.359170,9.695393,-4.404468,5.781129]],[[-9.865255,3.835905,-5.243506,-3.455289,-0.362276,-9.057607,2.976415,8.436698,-8.050713,-4.926251],[5.676363,9.926533,-2.597376,-5.397057,-4.393921,2.068768,-2.069475,2.986413,8.452575,5.881038],[-2.401627,-9.362950,4.921737,0.366594,-3.377144,-2.010112,-2.514493,-9.929638,0.316351,6.307368],[-3.745675,-2.300668,3.990906,9.359077,4.203826,-8.193093,-0.853554,2.592092,6.791590,0.337539],[-9.932780,7.351725,0.835656,6.351514,-4.290702,1.850667,-3.293739,-3.751646,6.087732,-2.914841],[-0.291381,-5.474817,7.668542,-5.862127,3.239642,-1.246532,-0.248101,-8.129280,7.728260,-5.709859],[-4.573555,-6.754956,8.052837,6.418256,-4.682729,9.338829,-7.932449,9.452343,4.938569,-3.730787],[-8.098864,8.728255,-9.405100,-4.381297,8.462306,-4.003928,-9.723277,-3.019161,9.544662,9.830176],[6.939753,-6.778806,-8.442406,1.475735,-5.625874,-4.827533,-2.276185,6.620421,8.641043,-4.024517]],[[-7.120773,4.875773,0.066915,-6.639598,6.402142,-9.840614,-4.008555,-1.108398,5.242804,-0.853609],[-8.807494,-6.060958,-0.272971,9.582360,0.327437,3.272262,-9.751895,8.970233,-4.732807,-0.620255],[9.208279,8.103910,-8.483560,-7.702551,2.660732,6.217831,-5.721803,4.111489,3.861265,-1.868729],[-1.048550,-1.125340,-0.082278,8.329274,8.810940,-9.187171,-7.401801,-7.538687,-5.131175,-7.534926],[9.555669,0.509286,3.875395,7.415129,0.435639,-1.955658,5.224980,1.494026,-2.722399,-0.203565],[-7.138656,-7.604653,-7.701945,5.462501,3.363720,0.360540,5.594356,-0.262264,9.972017,7.905963],[-8.500376,-7.607937,-4.561465,6.710182,-3.261067,-9.352291,3.041399,-6.512977,9.807548,-3.970225],[8.010330,-6.115293,-8.669270,-9.615360,-4.633849,-5.931080,1.080661,-0.045128,-7.310028,-5.692980],[1.310635,-4.414670,6.094064,8.813423,-4.719894,5.668139,7.524227,8.168579,5.948354,1.833989]],[[8.039028,-4.087214,-4.854173,4.052268,-2.538532,-0.040366,-4.908981,-2.613925,1.327317,3.685610],[5.008942,5.587432,-1.899608,-5.327335,-2.456257,6.579476,-9.685988,-0.228805,-3.650525,3.652535],[2.596802,-4.190578,-4.732527,6.028294,-7.748663,-5.490402,-9.359254,-0.165623,-3.310160,-3.269407],[-6.100724,-8.880434,9.008279,-5.613802,-5.024775,-8.412330,1.597175,-0.874566,-0.483321,1.390327],[-0.099392,-2.003391,2.671613,0.958769,-8.633353,1.752948,3.011040,7.270652,-4.468079,-9.871803],[1.131733,7.239056,6.075336,8.488259,3.955923,9.044355,-8.252892,-7.294577,-2.156670,8.169139],[5.611751,-5.122426,-4.331462,0.874761,3.093996,-3.316637,2.670351,5.570493,7.490841,-0.539098],[7.517082,-7.799937,9.926247,8.010111,-7.792512,-2.645245,3.290274,-4.263905,-2.974384,8.552260],[3.751099,2.783352,2.126325,6.450863,4.715897,6.483069,9.189228,-8.054211,7.921503,6.898300]],[[-7.885245,0.470050,-1.867314,8.102761,-7.499336,-3.204659,-0.676207,-0.088686,-0.850812,-6.152577],[1.593955,-2.840769,5.604979,1.761227,-4.789276,-0.653264,2.413492,0.570408,1.553464,-4.748383],[3.351248,7.712745,-4.311485,5.234026,-7.667510,-3.340485,9.571121,-5.124105,3.789271,9.062724],[-3.976990,-5.036843,-4.007122,7.118687,4.639352,4.918477,-4.196796,-1.256766,-9.780630,4.799507],[-4.519478,-7.715538,-7.560676,-0.798840,-0.833700,-1.005126,-6.299221,-2.217296,-8.857204,-9.083859],[-0.430648,-6.736619,4.189812,8.778783,-5.610426,-0.223055,9.374613,-3.861420,8.732564,5.115906],[4.379186,9.299725,4.018014,-2.436415,0.098268,4.269833,-3.198950,1.546358,-3.534295,4.305612],[8.536464,2.162471,-3.424520,4.462865,2.842144,7.435751,-8.993084,-7.981113,7.750133,8.451355],[4.911030,-0.141087,-9.058592,7.698691,-5.803973,1.166857,-0.770308,-4.297367,-8.023223,1.084814]],[[7.825751,-4.549510,4.934404,6.905317,9.491938,8.800067,3.073112,-1.067700,5.084484,-0.598152],[-6.230622,-5.984820,1.997211,7.762477,-2.615542,0.735645,-0.295663,2.839330,-5.000405,-9.578259],[5.536108,-0.044899,7.358154,-8.020822,9.449631,-6.564286,-0.759043,-9.370416,-0.955422,8.974493],[-5.871994,-0.950977,1.929995,-2.517474,-2.543309,1.079863,6.624679,-2.256715,8.756340,2.334648],[4.441617,-9.283303,-2.712544,2.907993,5.722351,5.030265,2.817378,-4.799415,1.536795,-0.869696],[1.142983,1.625131,-3.417907,8.854806,-8.631536,-1.224712,-9.199763,4.593508,1.888933,5.747648],[-4.857900,9.174245,-3.201875,-2.608333,-2.733610,6.120095,-3.952015,-4.899007,-3.151040,-2.245297],[4.411188,2.174604,-0.581886,-4.653467,6.296763,-2.114070,1.380675,-3.883317,6.538853,0.091881],[8.294230,1.978123,-3.505482,-8.989764,3.572004,9.935673,9.661735,-6.789021,-2.119026,-3.769535]],[[3.799348,7.408086,-2.988687,-3.126686,-8.720827,2.527562,9.212558,0.416292,6.002690,-4.142931],[2.043764,7.627739,-6.268040,-2.018307,-7.270949,3.978386,8.311917,-0.709756,-2.040778,7.853427],[3.970382,-1.352750,5.956135,-1.427285,-1.581561,8.572589,-0.605959,-0.138176,-1.078429,1.391174],[7.150113,-4.387821,7.391205,-9.495706,-6.008657,-2.471746,8.582753,-0.445459,8.125656,3.263721],[8.256572,6.203385,9.767923,0.261600,-1.488204,-0.954749,3.024147,-1.317536,-6.171002,-3.811117],[-1.435768,-6.839736,2.520057,-3.685057,4.730536,-2.160359,-4.780727,-4.752761,-6.062638,6.109446],[5.271748,-9.072455,1.622541,9.234954,-7.603267,-0.647128,7.634042,-7.815367,5.117403,4.671784],[-8.513292,9.967596,7.912548,-2.068513,3.847552,-3.076459,8.465046,4.644300,8.899920,-6.429896],[-3.770046,-5.767727,4.928245,8.243675,4.179408,0.931199,-7.813720,-4.940446,5.004398,1.660466]]], dtype = "float64")#candidate|4951|(11, 9, 10)|const|float64
var_4952 = relay.var("var_4952", dtype = "float64", shape = (11, 9, 10))#candidate|4952|(11, 9, 10)|var|float64
bop_4953 = relay.add(const_4951.astype('float64'), relay.reshape(var_4952.astype('float64'), relay.shape_of(const_4951))) # shape=(11, 9, 10)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_4956 = relay.TupleGetItem(func_1490_call(), 0)
call_4957 = relay.TupleGetItem(func_1492_call(), 0)
uop_4961 = relay.acos(const_4951.astype('float64')) # shape=(11, 9, 10)
output = relay.Tuple([bop_4953,call_4956,uop_4961,])
output2 = relay.Tuple([bop_4953,call_4957,uop_4961,])
func_4963 = relay.Function([var_4952,], output)
mod['func_4963'] = func_4963
mod = relay.transform.InferType()(mod)
mutated_mod['func_4963'] = func_4963
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4964 = relay.var("var_4964", dtype = "float64", shape = (11, 9, 10))#candidate|4964|(11, 9, 10)|var|float64
func_4963_call = mutated_mod.get_global_var('func_4963')
call_4965 = func_4963_call(var_4964)
output = call_4965
func_4966 = relay.Function([var_4964], output)
mutated_mod['func_4966'] = func_4966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2458_call = mod.get_global_var('func_2458')
func_2459_call = mutated_mod.get_global_var('func_2459')
call_4968 = func_2458_call()
call_4969 = func_2458_call()
output = call_4968
output2 = call_4969
func_4979 = relay.Function([], output)
mod['func_4979'] = func_4979
mod = relay.transform.InferType()(mod)
mutated_mod['func_4979'] = func_4979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4979_call = mutated_mod.get_global_var('func_4979')
call_4980 = func_4979_call()
output = call_4980
func_4981 = relay.Function([], output)
mutated_mod['func_4981'] = func_4981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mod.get_global_var('func_2060')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_5050 = func_2060_call()
call_5051 = func_2060_call()
var_5056 = relay.var("var_5056", dtype = "float64", shape = (2, 10, 16))#candidate|5056|(2, 10, 16)|var|float64
bop_5057 = relay.logical_or(call_5050.astype('bool'), relay.reshape(var_5056.astype('bool'), relay.shape_of(call_5050))) # shape=(2, 10, 16)
bop_5060 = relay.logical_or(call_5051.astype('bool'), relay.reshape(var_5056.astype('bool'), relay.shape_of(call_5051))) # shape=(2, 10, 16)
output = relay.Tuple([bop_5057,])
output2 = relay.Tuple([bop_5060,])
func_5071 = relay.Function([var_5056,], output)
mod['func_5071'] = func_5071
mod = relay.transform.InferType()(mod)
var_5072 = relay.var("var_5072", dtype = "float64", shape = (2, 10, 16))#candidate|5072|(2, 10, 16)|var|float64
output = func_5071(var_5072)
func_5073 = relay.Function([var_5072], output)
mutated_mod['func_5073'] = func_5073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2074_call = mod.get_global_var('func_2074')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_5112 = relay.TupleGetItem(func_2074_call(), 0)
call_5113 = relay.TupleGetItem(func_2075_call(), 0)
output = relay.Tuple([call_5112,])
output2 = relay.Tuple([call_5113,])
func_5151 = relay.Function([], output)
mod['func_5151'] = func_5151
mod = relay.transform.InferType()(mod)
output = func_5151()
func_5152 = relay.Function([], output)
mutated_mod['func_5152'] = func_5152
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5163 = relay.const([[[-6.641467,-6.688221],[9.195922,-6.620482],[-0.823434,-1.213555],[1.240246,1.131755],[-6.063624,3.145196],[-9.898626,3.934797],[1.823390,6.905377],[-2.094635,-0.237135]],[[4.821810,-1.097894],[-9.392351,-7.189662],[7.993428,8.506592],[9.931432,-5.212067],[8.035046,9.816012],[-7.462576,-9.176458],[-9.114591,8.233422],[-2.589141,8.378528]],[[-1.195013,8.588702],[5.057402,3.678427],[-9.044690,0.039886],[1.568598,4.598831],[9.460348,-3.335957],[2.634454,3.597766],[-4.445709,4.281549],[-0.825081,-5.529839]],[[-2.415845,9.513403],[6.877840,-4.836840],[4.511672,-6.949774],[-2.794553,-4.508144],[-6.030133,9.846605],[5.294300,-9.276595],[3.286483,-8.954458],[-2.856117,-3.500784]],[[-7.473429,-1.995443],[8.172937,4.104684],[1.350088,4.104328],[9.040558,6.159243],[7.107928,-7.538246],[-0.689113,-9.945956],[-4.184454,5.286518],[-2.164589,4.842338]],[[-5.370333,-0.112889],[1.534185,-6.267791],[9.305448,-2.102698],[4.258935,8.711282],[-0.469016,4.753543],[-4.526030,-3.221320],[8.435541,3.629417],[0.160536,-2.275906]],[[0.062176,8.161444],[0.123506,5.314635],[-8.033502,6.461189],[5.220709,-1.757639],[-9.547152,-4.166220],[7.184907,4.830643],[3.265652,-9.539032],[-7.984661,-4.595496]],[[-2.782460,-3.169441],[5.350178,-4.534221],[0.189990,-8.040279],[-4.622189,-5.324865],[-4.897059,8.912832],[3.836672,-9.369229],[-2.618288,4.223034],[-8.566723,-1.165167]],[[-6.023586,-4.540874],[-7.493096,6.626952],[-2.816762,-8.435807],[-3.007712,-2.005102],[-4.708648,-8.194592],[-9.799310,-0.920652],[-9.217134,8.892439],[0.385580,8.312509]],[[-6.190594,6.080531],[-9.428532,-4.669318],[-5.243958,-2.554215],[1.927075,-7.940378],[-1.189070,6.976992],[6.184984,0.091714],[-2.975029,-4.013035],[-4.182452,2.849060]],[[5.210957,3.902408],[2.815422,7.578969],[6.490301,-0.095655],[-6.808277,-5.557146],[5.844365,7.993663],[0.184920,-6.029206],[-2.764747,3.776810],[-4.977530,5.735300]],[[2.673734,-7.995835],[5.898481,3.606218],[1.379584,1.396560],[-5.319857,-0.537192],[-3.640527,-0.459123],[2.953879,0.850777],[-4.003696,-1.078713],[2.278631,-0.034270]],[[8.736783,9.380791],[-5.581339,5.770069],[-1.268101,4.904145],[-4.873896,-0.057794],[-5.473670,-8.892886],[-0.953106,9.590024],[-4.210536,1.581637],[6.357398,-7.541254]],[[-5.014135,7.926667],[-1.875063,-4.951111],[-3.613683,5.780920],[-5.311211,6.045394],[6.613557,-1.505689],[2.208989,-2.510763],[9.049185,1.540031],[8.118017,3.440421]],[[4.610449,5.990800],[5.408873,-0.783194],[7.354035,-8.901093],[3.125125,-1.087384],[0.965179,-4.535435],[-1.032385,-5.830799],[6.062783,1.431417],[-9.235739,-3.549209]]], dtype = "float64")#candidate|5163|(15, 8, 2)|const|float64
uop_5164 = relay.asinh(const_5163.astype('float64')) # shape=(15, 8, 2)
func_4886_call = mod.get_global_var('func_4886')
func_4889_call = mutated_mod.get_global_var('func_4889')
const_5177 = relay.const([7.615807,6.514385,-2.287474,6.914033,-9.800539,8.457299,3.077886,8.918524,0.257679,2.582198,6.650058,9.914148,-8.091595,9.886227,5.852175,-5.774028,-9.538242,0.080963,-7.709922,7.581651,1.614167,-9.621956,1.218739,-7.678139,5.818787,4.420827,-4.142413,4.366651,-4.930643,-7.287223,-0.328821,-4.547768,9.435857,5.518776,-9.265863,-3.680342,4.173411,1.993926,-2.025021,6.851621,0.066654,6.627259,3.260680,6.112583,1.994958,-4.633370,-3.433079,2.837431,-1.751144,1.345243,5.746004,-4.792684,-3.293930,-3.189532,8.094153,4.193736,-0.762579,9.926212,8.975714,0.038210,-8.165167,-7.149303,7.392257,-5.946181,6.847438,-5.087190,-2.430928,1.023288,-6.463383,1.154873,-5.765570,9.430372,6.840810,-1.237648,5.948291,-3.019640,1.320532,-8.926141,-8.072641,8.464418,-7.119777,-3.492934,-2.575798,-9.131667,7.138216,0.323413,-7.876535,-5.742992,1.545260,-9.375966,4.105827,-3.769035,-9.155317,5.844590,-5.266485,-1.355474,-3.562547,5.545927,-2.128737,-9.869427,8.817781,8.352271,-8.519804,-8.428846,9.884880,-4.498071,3.320099,7.647865,0.827004,-3.506637,9.717703,-7.132887,3.222829,3.134976,5.980691,-9.697636,4.356505,-9.873512,6.323179,9.498397,-0.719500,8.403377,-9.467897,2.504274,5.567885,7.216030,-6.389518,1.533061,8.331388,3.075499,-0.911966,-5.824100,-6.786283,9.924946,7.899133,-9.344583,-9.426124,1.563854,-8.092179,-2.228704,-5.515225,0.634207,6.054829,-2.375509,8.659974,-9.620014,7.548455,3.843311,3.778650,-3.078266,2.096988,-0.369105,-9.647769,-4.530514,-1.149302,0.995120,5.120336,6.932411,3.814361,1.547642,-9.155212,-4.129636,-9.505661,1.811516,-0.790284,-8.695139,-5.151469,1.609753,-8.281875,7.247485,-1.591330,3.442133,6.738122,-9.443347,9.133959,7.863248,1.509108,9.371975,7.359395,-0.405700,-9.175136,6.971607,7.855897,-7.203711,7.804145,8.666184,-8.720986,4.163329,1.511613,-1.749361,1.109473,-5.025536,0.528610,0.303158,-9.917554,-0.259428,-8.514125,9.968990,-5.874219,-9.852266,-3.049362,3.478084,-1.599461,-2.533355,-3.080878,-0.603728,9.519749,3.411236,0.801911,4.897581,-3.292783,-9.328123,-0.529792,-9.036535,0.337021,-8.953992,-0.835844,-7.580313,-5.263991,8.623283,7.984209,-6.125077,-6.296255,5.266138,-9.880885,-0.322471,-7.017465,-4.370489,-8.445369,8.550088,9.036963,5.693028,3.915690,-3.279930,5.997243,2.611605,-5.620341,2.288072,5.644444,-7.575974,6.705631,-2.373010,2.772779,-7.772149,6.784768,-2.929971,1.351147,4.862257,8.240677,-8.902988,9.141242,-2.254435,-5.550659,-3.488857,-2.889996,1.965735,7.524823,-5.413293,-5.159053,0.933405,-1.840062,-2.097444,1.249857,7.073860,-3.074760,1.816845,6.545755,4.244651,2.692862,5.038898,-6.478538,-9.944409,-5.039986,-2.537295,7.981932,-7.867568,0.052678,-4.137277,-6.078546,-6.519359,2.497469,-5.876976,1.770745,-3.445163,-6.381445,-1.067171,3.746726,-2.360794,1.994059,-7.036405,-9.555172,5.157171,-4.274251,5.935571,3.837850,8.445909,5.530065,4.953530,0.472783,-3.884534,1.989471,-2.356370,5.115151,-1.266527,9.059850,9.527883,6.353080,-1.809209,-6.703173,0.251249,2.847375,0.399126,-5.228106,3.651549,-7.041896,8.095733,-3.751401,-4.428225,9.015520,1.312495,-5.609307,-0.970769,6.093797,6.128435,-8.786460,0.649308,9.822485,7.528914,6.939837,3.181147,-6.507966,9.929887,-8.990560,-8.577779,-0.935482,-7.510802,-0.604823,-3.978594,2.450916,-1.278655,-6.435729,8.225571,-5.267716,-2.783630,6.602200,6.639938,-5.500956,3.203766,0.308485,-0.840697,8.973469,-3.161745,-0.404057,7.718844,-3.756594,7.116461,1.394057,-1.688989,8.831122,8.318930,-2.462181,-1.164492,2.903991,3.745969,9.740026,-0.575703,-2.593229,8.653235,9.684494,5.427589,-3.698177,1.990957,1.927964,6.161814,-2.363254,-2.371746,6.545652,4.425289,-7.342787,9.388083,7.162235,-5.155327,-6.099281,-2.013989,-1.708409,4.214260,-1.254333,-7.603175,-0.466868,8.430153,-2.098433,4.687407,-5.262293,-0.306905,8.665778,3.234116,5.835110,8.171798,6.002986,5.907818,4.575104,-4.992702,5.539605,7.613152,-2.632530,-1.756441,-3.769899,-4.718321,9.821043,9.084013,0.928507,5.183249,-6.487371,-4.583400,-0.398391,1.124486,3.205318,8.138210,-0.518678,-1.182367,3.622829,7.546367,1.186739,0.971019,-2.578699,0.250809,8.522347,-3.025089,2.969840,4.759555,2.929787,5.721548,-3.290821,9.050737,-5.828970,5.897632,0.438005,7.892605,-9.390609,9.572202,-1.024567,-5.986464,0.210451,7.280972,-2.964522,-7.163080,-4.735950,-2.652328,-5.787202,8.030236,6.166934,9.529137,-3.083572,4.936894,0.721559,2.861748,-7.425013,2.789996,6.266853,-8.354996,5.570693,2.329794,1.324901,-9.883484,6.621799,-6.924187,-8.732193,9.957571,-9.967789,2.641656,2.643070,6.823877,6.768564,4.077758,-7.821063,-9.865575,-1.235479,8.902721,2.872884,-7.749918,4.230664,5.592609,-2.455590,-1.760875,-5.943413,-4.355097,3.154497,0.294755,-0.079921,7.414459,-5.218177,-4.755306,7.528543,-3.141541,5.842875,1.145183,7.390132,-5.584767,-5.113131,7.102718,-0.551956,-1.832688,2.570251,-3.972580,3.627151,-6.276513,9.197137,-9.294030,-7.319286,7.830031,9.201167,3.177140,-9.465531,-3.454630,-8.901762,6.618912,9.933434,-8.720658,2.006251,-4.870509,-6.810390,-2.935745,4.668655,-2.346238,-7.045985,2.439206,8.138636,-6.625369,-0.804571,-9.300352,-0.220562,-2.036720,9.341214,1.423349,1.208029,4.332612,-2.013806,-5.691807,1.122291,-3.715300,-5.267441,8.862909,-5.723576,8.217889,6.271456,9.937466,5.034789,3.091405,5.673829,8.722491,4.591236,-7.220475,7.713277,9.679871,-6.862971,-7.941072,-2.359052,-7.629758,9.929319,3.396054,0.251706,2.317510,-1.341692,6.654184,2.910218,6.558835,-5.763471,-9.745474,-5.493941,-7.226121,0.807757,0.893510,-7.035328,-1.837364,-7.703250,-2.035331,9.419690,-6.105920,5.996631,7.856514,7.213258,3.826407,-7.850761,6.446156,7.394652,7.220244,-5.575929,-9.763196,-3.366025,-3.055884,7.078971,-3.072819,-1.660036,-8.953276,7.021465,-5.330159,-6.237040,-5.614602,-2.387617,1.882595,4.487656,-1.684266,-8.579211,-5.766088,-4.037951,9.413456,-3.131687,-2.578653,-3.608026,-6.287655,-2.500195,-2.316951,-5.708736,0.604229,-2.811497,-3.485854,-4.633774,5.403348,-0.554292,6.842352,2.042794,-0.677205,2.200647,-0.270268,3.382440,4.653193,-1.653433,4.610887,-2.299718,8.545033,9.875339,-0.722071,-0.652890,-0.070597,5.336525,7.442954,-2.538145,-7.093861,-2.016370,-3.610810,9.157141,7.174150,0.236417,-7.828938,-4.223040,4.132023,-2.803945,8.502312,2.222577,2.776774,7.387025,7.934486,-2.535865,9.833740,7.249153,-6.455408,3.396359,-0.843300,-8.230088,-0.695369,-1.755009,0.063228,2.479896,0.869223,-7.629356,-0.423441,-3.519063,-2.997357,2.035687,8.050012,7.553653,-6.521884,-1.311717,4.240346,2.256289,5.180287,9.699281,-0.043199,3.250735,-1.265290,-2.927635,9.208383,-4.254052,9.071272,-6.110478,-1.719517,1.714387,-1.102969,0.987169,-3.366684,-7.538353,-2.661897,-1.787986,-6.446653,7.851882,-5.540136,4.337952,-1.349910,4.459609,-3.458236,-2.322804,9.794163,9.131004,4.349093,7.671493,4.710888,5.587813,-2.101655,0.670516,8.505794,3.365304,-3.479452,-9.996104,-2.425916,1.427957,8.883082,-2.551210,8.851605,-6.849075,-8.397592,-2.625543,3.678852,-8.790489,-1.154690,1.758599,-6.371899,4.261569,8.724270,0.419788,5.437709,-1.281980,-1.129039,0.471371,-0.679945,5.881667,3.167510,4.246844,0.938038,-2.258152,3.773721,-7.742469,-3.575487,-1.830305,3.814632,-6.539709,-4.982588,7.334880,1.306469,-1.794770,-4.493944,-4.475742,-5.223733,2.498724,0.912793,8.869684,0.943144,-0.914000,3.236517,8.655678,-1.423447,4.987194,0.853453,-9.170112,7.455792,-8.150148,-4.688308,3.313886,-8.908290,-9.591236,8.670791,-9.713741,1.552882,-8.503553,-3.986989,7.404332,3.822771,1.487744,9.496657,8.170688,6.661868,7.475899,1.719701,-0.543890,7.478265,7.534218,-2.002963,2.089297,9.053153,-3.261039,3.096750,-4.658459,-5.610683,6.486028,1.298361,-7.155111,7.810867,-5.187853,-4.489075,-7.326136,-3.965162,-4.504978,-2.228506,-4.256006,-5.445272,8.755458,4.091547,-5.951310,7.607069,1.388664,0.209604,8.672761,3.792153,2.602311,-5.486030,5.646093,8.504434,0.846993,1.335714,0.370182,-7.491066,-3.500344,3.652776,2.580918,-6.813782,6.478581,-8.878232,-5.726856,5.758997,-9.017831,-0.785176,-8.452289,5.418592,2.790599,6.308165,-2.754973,7.394438,9.634370,-3.610082,2.048083,-1.097698,-3.610911,-6.105810,-3.237766,-3.930272,2.361213,4.970094,-4.948493,-0.521746,5.400963,5.490808,8.791446,-0.571815,5.904334,-8.895904,-4.603140,7.629199,9.220287,6.277019,0.081869,-8.614729,-2.562942,-8.531443,8.156943,-8.061340,8.014946,-5.321400,-3.955747,3.442805,7.547170,3.041671,-0.147629,-0.240983,-1.057847,-8.426175,3.473535,-0.536601,-6.895544,4.775147,2.987977,-1.820972,3.538161,-2.436062,-4.729243,1.751305,8.259798,3.941995,4.990244,8.286652,1.637869,-5.495705,1.397097,6.178213,7.394789,1.493986,-1.848058,0.314003,-2.641379,-8.894727,-5.899431,2.082733,-8.841298,0.771990,-5.320887,3.249873,-4.931822,4.146046,-4.103705,5.859685,7.720159,5.181730,9.630521,0.949051,-4.866428,-2.877561,3.130700,-0.739725,-3.309002,2.817019,-0.179628,-7.438256,-2.096717,-5.730677,-8.679097,0.400894,-2.327759,-2.345652,1.015560,-0.379434,0.099715,-7.859575,-6.899968,-0.193496,2.051838,1.919207,-5.885567,-4.356306,0.523734,1.000770,1.888938,1.012061,5.897326,6.835301,1.984954,-7.540391,-6.120200,3.870675,3.053723,3.690465,-3.297572,5.746834,-1.431772,2.271693,-0.868551,-0.131504,1.893441,-9.722642,4.861914,-7.816870,4.006144,2.723309,6.588792,-3.408227,-6.987185,0.145697,-3.025562,9.684516,1.457861,6.211752,6.572972,6.164811,9.168323,-4.816355,5.561683,-7.170245,0.123341,-7.292504,-6.503791,-6.373060,-2.318623,1.010333,-6.672072,3.243246,-5.887810,3.267255,-7.010767,-3.800997,-3.380769,-4.379789,2.932592,-7.514358,-0.013229,-3.625975,2.765918,9.005528,-4.535557,3.937152,8.125248,-3.823266,9.087106,-0.705731,-9.258598,2.978404,6.409774,-4.307424,-6.346269,9.098996,0.587514,-4.711655,-5.134325,-4.393734,-9.589111,9.829110,2.073040,1.347205,-0.455717,-9.767784,7.847593,9.622145,-0.822833,0.620992,5.734514,0.028748,-6.928916,6.100976,-0.916863,-2.469039,3.193440,-6.083169,8.003753,0.848593,9.972971,7.182956,-8.916477,6.322103,-7.470589,1.563802,-3.322376,7.513986,-5.503857,6.646239,-2.534513,-3.193748,-7.194911,-6.751514,-4.001696,1.401382,-1.520619,-2.378982,7.562095,2.029447,4.282202,7.385938,6.467211,-5.854907,-3.287386,-4.691298,5.861458,-2.710032,-5.741791,-3.367409,1.180550,-0.311166,-8.109535,-6.082425,1.823313,4.120977,-4.913996,-0.017730,4.233462,-8.577842,-2.588479,7.176316,2.237475,6.524862,-0.780264,-4.339242,8.529867,1.891220,-8.559001,-9.653762,1.488356,-3.170616,-7.302653,-0.146424,6.933501,3.391677,0.801493,-4.696847,6.601094,-2.153740,4.103692,8.534522,-9.256761,-1.193474,-7.421185,-4.828553,-9.817050,7.293954,3.752684,1.106189,-6.982337,-6.106324,3.936427,-5.521120,2.502164,-0.619459,-1.360586,5.662185,2.562629,4.635990,-0.163989,5.746999,-9.066253,-6.003766,-0.423225,-0.525861,-9.052898,4.429765,2.373724,-9.929485,-9.770786,1.571862,-5.649274,8.412710,-4.386953,9.165582,-5.563594,-2.293526,-0.588745,-1.964989,-3.100326,0.962792,-1.339879,-7.018082,2.770306,-2.193446,6.857437,-9.024901,-7.241786,2.722980,-4.652119,-2.344126,-5.083232,0.512591,1.748361,2.481137,-5.612981,-3.245146,8.865274,7.217382,-6.933171,3.490916,9.088422,7.560175,0.167046,4.074795,-5.519998,0.968326,-4.405130,8.495054,-2.926733,6.759621,8.803924,0.243367,-8.488508,3.129672,-3.064495,-0.619711,-8.823135,-1.880403,8.538763,1.840124,5.003488,-4.454172,9.772889,5.967163,-7.459892,5.552661,-8.281282,5.165254,0.141046,4.965585,8.820350,8.117091,-2.113052,6.470952,3.205099,9.559293,8.763903,-4.975441,4.202645,0.957383,-4.255537,4.609523,8.583832,5.983425,-6.715238,3.352998,6.440699,6.873189,-0.944448,7.381327,-0.910429,-9.546807,-5.862667,-4.948404,-4.400818,5.142182,-0.991998,2.103734,3.849412,-9.930646,-2.723406,9.518301,0.129937,5.018969,-2.244586,2.306455,1.767922,-2.859595,7.956122,4.825313,-3.823602,-2.090559,7.039464,0.674503,0.239765,-8.731239,8.341651,5.399310,7.297030,-9.708720,2.729229,-5.301610,2.711760,-0.856951,7.461461,-9.916272,-3.664072,6.743124,-2.732534,7.634743,-9.444678,0.677877,5.379298,-5.259013,6.624955,-2.853839,3.997153,6.914034,-1.614972,8.653202,3.303620,9.322580,-5.433788,-5.602540,7.866368,-0.136338,9.925185,6.637453,-7.434662,2.767452,-1.431356,-1.791461,-3.340131,-4.868041,3.353485,7.253707,8.188113,0.937167,1.038965,5.621213,2.572144,-7.000822,1.923635,4.255986,-4.395209,-4.675729,0.615199,-1.041234,-8.472195,-3.441975,-2.355886,2.757605,-3.073355,7.330806,-2.579574,1.404511,9.495304,-2.146871,8.289901,-7.905327,9.040174,2.572603,-0.475604,-7.471109,-4.489990,-0.653209,-1.719454,6.013901,-8.884133,-2.935442,8.529234,-0.960479,-9.342128,2.112823,9.060204,6.010524,-9.139641,9.080952,-1.668741,-7.421034,-1.725415,4.480739,-4.774329,9.554087,2.675416,6.707962,6.090432,0.275725,-3.547095,-8.345608,7.914245,-4.896045,-2.867560,-6.483060,-2.720844,7.160231,3.952790,1.531702,1.095370,2.366613,7.588296,3.942832,-7.258758,-0.665589,-1.094504,-4.223224,-0.018749,9.976762,-2.266779,5.565093,-1.338457,9.825761,5.860708,7.268807,-5.266878,4.049743,8.343142,-5.485281,-4.558418,0.465778,5.410871,-4.669827,-7.655554,-2.264356,4.679183,8.128451,5.618161,6.143967,-5.588280,2.213134,5.403980,-1.247451,-9.297239,1.153444,6.835677,1.249415,-5.339428,-6.697877,8.305144,-8.511086,-2.278396,9.419951,-4.335611,-2.640423,9.331479,3.097044,-2.865324,-9.860574,2.544320,0.670085,-0.470725,2.647069,-5.217716,6.724406,0.423803,-5.962049,-3.405214,1.703164,6.982946,1.760148,8.936647,7.959600,-1.133247,-6.459822,9.871319,-8.617273,-4.985252,4.054364,0.979532,0.091805,-1.128623,-3.909266,6.095248,8.416739,1.247514,7.610375,-8.728098,-1.849228,-3.200122,-3.441668,0.914958,6.380678,-7.285159,-3.011234,-0.689895,-7.224610,-1.485946,1.932336,-5.733629,-0.897598,4.972404,3.464510,-5.257757,-9.266751,-3.520823,5.449558,5.716096,-5.096773,0.130040,2.204054,-8.264614,-0.978663,-2.782886,-6.819213,-1.648030,-7.386875,-0.531005,8.504289,5.506851,-7.728899,-2.312339,0.727460,-3.054412,-8.614409,8.056526,5.603200,6.536610,-1.006746,2.497284,0.751609,4.021274,0.121667,2.603650,-6.681088,-7.226072,-4.943640,-4.123699,-0.793171,6.485651,-2.494612,-5.721412,-5.256443,8.557556,5.038371,3.398024,0.285776,-3.555427,9.112308,1.685055,4.350871,-6.250912,8.094485,8.650524,4.466790,-4.251409,6.740950,-0.949881,-9.626342,-7.783924,-1.472569,-9.950705,-4.553395,3.581820,-7.946318,-0.192967,-8.335553,-0.133091,6.958567,-9.300877,-9.726867,6.277151,5.992288,-6.146953,9.702146,-1.165317,-2.631508,1.095986,0.270201,-6.004517,-9.165296,9.111088,9.267362,-8.284269,-7.609884,-2.727675,1.457017,-7.040081,6.436368,-3.079830,-8.797144,-0.094613,-2.827995,1.556778,-6.942364,3.250748,-3.722156,-3.377362,-1.388153,6.119803,2.052695,-8.093490,9.007045,3.975878,8.696741,6.223803,-1.618464,-2.827407,-8.683056,6.979309,-1.821875,1.988954,4.390766,-5.966936,-2.948815,-7.924152,2.516051,-5.408010,-6.579734,9.259100,4.879673,9.463556,2.203176,-6.950731,3.520640,-8.351413,4.265688,2.721591,8.308618,-2.951103,3.045234,8.590172,4.890659,4.463317,-1.966072,4.956823,7.290938,8.356152,2.801771,-0.393154,9.672945,-0.459428,-0.114250,-9.867036,6.000669,2.666684,8.069853,-3.239590,-8.673327,-9.855404,-8.164234,3.266115,-3.129136,-2.960747,-2.845065,5.497215,-6.119836,-7.704954,1.585271,-2.598757,-7.034480,8.971152,9.478341,-7.818148,0.174188,-0.614331,9.898223,6.006431,-3.136317,0.417265,7.946580,2.433024,-6.698648,-0.859274,-3.083869,-0.920508,6.470224,-0.261200,4.920697,-4.930715,-6.582511,2.295205,-9.321442,4.829344,-2.482907,-4.877314,7.999285,2.158250,2.216175,5.109261,7.020416,-0.967483,5.027139,3.773934,-8.510385,7.359461,-8.604092,-1.434593,-4.564961,4.125408,-8.150208,-7.453020,6.791847,1.731198,4.272530,-4.682741,-1.884174,0.067337,-4.332583,4.613767,8.480539,4.767927,0.618934,-0.724124,2.426676,-7.045348,0.949996,-9.895898,6.825010,-1.375033,-0.205901,2.473309,4.306631,4.499873,7.409072,-1.082023,9.950649,-4.851879,9.317381,-3.529506,-5.679937,-5.030982,5.773575,5.082399,-1.389277,-3.005475,-2.295683,-7.886268,-4.125680,7.357427,-6.881628,-4.226900,0.120073,-7.063883,-2.314207,-8.111537,3.375874,-3.043907,2.441268,9.566108,2.748858,-5.326009,9.558276,-6.511400,-7.776399,5.128714,8.098372,8.486580,-4.992976,-8.807214,-7.445809,-1.084876,1.235001,1.158359,-8.308700,5.735157,-0.082982,7.888992,-0.520132], dtype = "float32")#candidate|5177|(1690,)|const|float32
call_5176 = relay.TupleGetItem(func_4886_call(relay.reshape(const_5177.astype('float32'), [1690,])), 0)
call_5178 = relay.TupleGetItem(func_4889_call(relay.reshape(const_5177.astype('float32'), [1690,])), 0)
output = relay.Tuple([uop_5164,call_5176,const_5177,])
output2 = relay.Tuple([uop_5164,call_5178,const_5177,])
func_5180 = relay.Function([], output)
mod['func_5180'] = func_5180
mod = relay.transform.InferType()(mod)
mutated_mod['func_5180'] = func_5180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5180_call = mutated_mod.get_global_var('func_5180')
call_5181 = func_5180_call()
output = call_5181
func_5182 = relay.Function([], output)
mutated_mod['func_5182'] = func_5182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5151_call = mod.get_global_var('func_5151')
func_5152_call = mutated_mod.get_global_var('func_5152')
call_5183 = relay.TupleGetItem(func_5151_call(), 0)
call_5184 = relay.TupleGetItem(func_5152_call(), 0)
output = call_5183
output2 = call_5184
func_5215 = relay.Function([], output)
mod['func_5215'] = func_5215
mod = relay.transform.InferType()(mod)
output = func_5215()
func_5216 = relay.Function([], output)
mutated_mod['func_5216'] = func_5216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5215_call = mod.get_global_var('func_5215')
func_5216_call = mutated_mod.get_global_var('func_5216')
call_5220 = func_5215_call()
call_5221 = func_5215_call()
var_5226 = relay.var("var_5226", dtype = "float64", shape = (2, 10, 16))#candidate|5226|(2, 10, 16)|var|float64
bop_5227 = relay.less(call_5220.astype('bool'), relay.reshape(var_5226.astype('bool'), relay.shape_of(call_5220))) # shape=(2, 10, 16)
bop_5230 = relay.less(call_5221.astype('bool'), relay.reshape(var_5226.astype('bool'), relay.shape_of(call_5221))) # shape=(2, 10, 16)
func_4030_call = mod.get_global_var('func_4030')
func_4033_call = mutated_mod.get_global_var('func_4033')
const_5234 = relay.const([7.164286,7.706425,2.394082,-6.978120,2.564915,5.804812,0.463333,-3.030468,-0.770671,4.862401,6.540832,0.065512,8.325438,5.180995,8.377774,0.003128,-9.134130,9.963472,-0.176870,-6.452720,2.422390,1.414994,7.331351,7.115077,-8.051717,0.697425,-8.503057,0.141122,-9.096377,-9.540478,-4.362447,-7.726766,-4.129005,-7.336069,-5.699304,-2.398129,-8.712461,-3.043218,4.512374,-3.000779,7.008521,3.954142,-9.950446,5.168074,5.883845,4.581917,7.540463,-7.842302,9.199488,-9.529760,-2.137602,-1.651963,-8.394068,-5.294933,-5.162784,9.639993,-9.345013,5.870877,-4.155535,-3.354351,-6.139753,2.446995,0.157120,8.110918,-4.953295,-0.571143,-2.632440,-5.107941,-5.014168,-0.719934,1.477553,-9.944893,-7.420304,-3.676260,-7.607685,-5.805376,-6.016539,-0.147781,-7.471401,6.328970,2.556643,6.943300,-6.685695,-4.463212,-4.385868,8.067122,6.984983,-1.102624,-0.805846,-5.692853,6.961575,7.861765,-9.449229,9.058343,-5.717490,5.542227,3.219854,9.742933,-9.098334,-1.602758,0.344336,-4.966379,6.095727,-3.483837,-3.302630,-2.976655,-0.495531,0.591205,2.537332,4.935349,6.463094,6.888616,6.328490,-2.708448,-9.237311,-0.454097,9.631751,-6.870648,9.230958,-4.457588,5.569489,0.087284,-9.034324,-8.802977,-6.042530,9.536828,0.043478,-2.618356,-7.077850,-4.907929,3.266731,-9.686182,-9.879438,1.687623,4.236764,0.959084,-4.318066,-8.925607,2.238921,-0.111956,-0.382660,-1.601770,-3.781931,-8.164888,6.686818,0.201325,-5.571565,8.017723,2.412838,-6.615785,-1.667602,4.036495,3.671505,-1.189486,0.047030,-5.092126,-3.293502,7.320269,6.149269,2.026612,-5.252270,6.067583,-2.399811,7.127490,3.100957,6.043204,2.625251,-9.696180,-0.040630,-4.041932,9.350692,-6.786646,5.672038,-9.005362,2.509193,1.018448,-4.018026,-9.117769,-3.648015,-2.412815,-8.521712,2.157753,9.448808,-9.012965,-2.283145,7.715359,5.133866,-2.767241,0.831573,3.854076,-7.668079,-4.513670,0.336361,-0.937430,5.677848,0.789319,-6.941893,8.564722,-8.517115,4.368427,-7.947451,-4.085020,-4.409303,-0.706982,2.863878,4.780522,0.578106,-3.803481,-5.516493,-1.608706,-2.569022,9.189031,-5.056959,-0.313385,-9.998791,-4.721176,-2.757690,-7.032116,3.686479,-8.130441,-6.523700,-2.982343,5.117326,-9.214501,0.363785,6.796028,-3.454555,-0.092857,-1.319963,3.516390,5.039715,6.453371,-0.813363,-8.870954,0.436992,-2.435542,-8.306667,0.382509,-6.791580,-5.247920,-0.768651,9.879577,-9.248410,5.846712,-5.057618,-1.487209,-3.968616,1.796206,4.968206,-0.371817,-6.841676,6.022614,-1.409783,-3.433007,-0.571453,-6.043330,1.175808,-4.486814,-9.982619,-8.900631,-9.201840,-5.600205,-2.616208,-2.934400,1.328070,-0.212446,8.514483,9.135190,-5.618642,-7.319376,-7.656577,2.691217,-5.978234,8.945499,-0.067223,6.129960,-6.102793,1.818509,6.477673,8.081670,2.701057,-4.940213,5.797328,-6.560166,-7.763569,-1.011827,2.082776,-6.956387,8.235752,-9.868134,9.672837,2.995413,3.834360,-5.320189,-1.116167,-0.214394,-0.400837,-0.176341,-9.964824,8.607315,-4.086269,2.789774,-8.083162,9.599561,1.550743,3.614876,-8.440301,9.394752,6.027064,-5.473740,3.270189,8.041727,-2.977890,5.202758,-3.151597,5.656965,-9.344432,8.698835,-5.960902,1.817982,-1.334048,-0.212864,0.127544,0.573744,8.917681,-4.483904,-7.285155,-2.838137,5.001315,9.211421,0.213221,-5.320973,9.408489,-4.962541,0.407569,1.821870,-9.463675,-7.126867,9.383828,-4.442749,3.387796,4.629925,5.293789,-1.048920,9.819365,-8.866708,-2.897311,1.442752,-0.418216,1.450667,0.393597,-6.416854,-7.262201,1.245098,-0.133714,7.454338,-3.042238,3.431363,-6.370047,-4.050714,8.052535,-0.771797,-5.358174,4.433422,7.442754,-7.824943,1.947078,-6.097011,7.602634,-4.649623,-7.318545,6.817954,-2.821280,-2.563233,5.576735,9.796676,1.053249,-4.632068,9.938449,6.955750,4.006998,6.767507,-5.288942,-8.710099,8.790648,7.910727,-5.346541,-5.471479,7.785122,-8.197339,7.282948,2.229901,8.207509,-9.692248,6.557857,-6.678244,9.141579,2.073900,8.798028,1.049374,-9.950051,-6.814290,-7.421987,-3.983997,6.741634,-5.417785,-2.507783,-0.622784,0.783678,-2.164280,-0.541442,2.719790,-5.936838,0.363395,8.729870,-2.336717,6.885843,-4.901610,1.636727,6.421202,8.548292,4.454721,6.229998,-6.027433,0.871673,5.239133,3.594150,7.236679,7.152899,1.022774,-9.989810,1.693463,2.082259,0.847962,-5.310054,3.740080,-9.104441,6.743322,-8.297566,-4.577497,-5.148950,3.443719,8.463859,7.666375,3.483870,5.383609,-4.024127,1.792582,-6.466757,-3.118274,1.642485,1.801324,-2.013780,6.160220,-0.792935,-3.851503,2.294995,-7.758030,6.420265,-2.643980,-6.630034,-8.513797,-5.435041,-2.703402,-9.407389,0.956551,8.382677,0.036784,1.180213,-6.374945,-0.349868,-3.793571,0.536401,-8.895927,-9.591431,4.420277,-6.177452,2.550906,-9.615046,-8.628160,-4.731017,-0.816810,-5.800479,4.072428,5.392984,0.590434,1.435791,4.990748,-5.165126,1.882975,-3.549724,2.982028,-6.890787,2.411591,6.067807,5.773389,1.266889,4.010021,4.839660,1.416017,-5.378639,-8.228418,-6.926758,-6.089898,-4.573265,4.913980,4.024114,3.078268,3.278273,-6.244808,-6.285233,-6.302023,9.267764,0.326773,0.268595,0.480266,4.503579,4.208017,-6.536576,-4.190722,6.006362,9.364590,9.580836,-2.488840,-9.393351,2.223315,-3.365452,-2.305657,4.336834,-8.836499,5.687891,-5.239114,5.196751,-7.069561,-3.364261,-3.383420,0.728629,-8.802354,1.312262,9.612338,3.810462,-3.111398,2.049489,8.544695,4.610691,0.318834,-7.638443,6.920731,3.951987,0.051379,7.747946,3.606112,4.020097,3.904477,-0.980114,-7.559468,3.467411,3.478861,-2.068147,4.425624,-1.331548,-1.299377,-5.056361,-8.737603,5.619508,4.044363,-5.977691,2.108137,-8.673399,-1.025073,-4.330831,-7.027959,7.428655,-7.087875,8.008741,7.015729,-4.190243,-7.686755,-0.244888,-2.463762,-1.271757,-5.820580,-1.208732,-3.296602,-7.288271,9.915510,-3.723012,-9.483886,7.632003,2.600336,-0.932796,-6.240303,-3.644667,2.391758,6.637654,-8.465276,-2.704422,-8.441052,6.908626,9.395211,7.943785,-7.269248,1.801398,-4.847517,7.277213,9.825832,-0.604043,-8.070747,-8.672863,2.015631,1.656376,8.770962,-3.876274,-3.110665,-7.011511,9.922103,-4.935883,6.178702,-0.655676,-2.019009,2.610176,0.587294,0.521988,-7.362469,-1.300934,3.429705,-8.887572,9.043333,9.842680,-5.492547,9.211137,9.946685,8.189236,4.611375,-1.708642,2.887482,9.244471,-8.597873,-8.963919,-0.081413,-9.974672,-0.401580,-1.264288,-9.410718,1.904450,-9.327081,-4.676933,-8.390177,-7.163951,-2.019872,3.101143,9.587617,-3.503990,2.791781,-4.153867,0.591299,1.001277,5.665126,9.086903,8.908616,-0.999070,-1.753343,-5.490930,-2.153535,-2.400131,3.875567,-2.494180,7.885402,-8.190915,2.090365,-5.651377,-2.869298,-5.225336,-3.638969,5.777275,-5.608612,1.847931,-2.389271,8.322215,-4.961468,4.373897,5.453766,-5.366268,7.580637,6.505660,-1.642932,9.505754,-8.590060,-7.569607,-0.737795,-3.988886,-9.414396,9.218763,5.080323,6.238646,-1.877715,-2.026479,6.959353,-9.123309,3.600555,9.907243,-3.359254,-7.134475,3.645924,4.587460,-6.285694,-5.373260,2.893807,-7.302862,4.959097,-3.192880,-6.125171,2.023500,-1.892558,-3.532983,-7.903259,4.418927,6.248132,8.297167,-1.362944,-5.729892,-8.892545,4.159718,-9.561717,0.862708,-5.489389,0.104280,-3.473507,-3.421694,2.804796,-2.463275,-3.119002,-4.771039,-8.462854,-3.704539,-1.766459,4.662665,-7.056106,-0.335252,-9.284102,-1.200819,0.182081,-2.109451,-0.670965,-8.784095,7.925423,6.352078,-7.578546,2.320408,6.011506,-3.247898,-1.680110,3.032087,-8.034412,2.083843,3.518018,4.563205,-3.017485,-5.637470,-0.419149,-0.859042,5.644116,-5.605368,9.068013,-7.395974,4.692426,-6.440475,0.633094,-9.680061,2.959731,-1.126353,8.473263,3.112428,5.044355,2.126257,9.500171,-7.516571,1.993773,-2.443180,-8.264394,-8.598402,9.598346,-8.984681,-3.620769,1.345112,-5.680812,-0.138819,0.370479,6.306439,1.512485,8.217364,-9.147235,8.240937,-4.646692,-1.173387,5.544802,-4.341314,6.590093,1.968392,-6.384555,7.211126,-6.535692,-5.465129,-2.058765,0.343721,-0.443306,-3.225736,-1.060935,9.168788,0.423723,6.934705,-3.485823,-5.096549,-2.626750,1.042658,-9.862802,-6.364356,-8.638461,-0.611112,-0.542404,-7.880073,-1.695438,-0.041296,-6.714458,9.583639,0.798959,-9.810354,2.351048,-5.627852,-3.539390,-6.154063,-4.133671,-0.031365,7.678705,9.716339,-2.256413,7.810740,-9.742758,3.806322,0.484206,0.926233,9.968354,-8.697496,-7.046396,4.772044,-9.148442,6.829394,-6.276321,8.510715,-1.508183,2.914406,-7.973998,-1.903670,-2.477557,7.976751,-0.633081,4.468740,5.523432,-2.070051,-9.917267,-1.956661,5.895621,8.375948,3.148931], dtype = "float32")#candidate|5234|(864,)|const|float32
call_5233 = relay.TupleGetItem(func_4030_call(relay.reshape(const_5234.astype('float32'), [864,])), 4)
call_5235 = relay.TupleGetItem(func_4033_call(relay.reshape(const_5234.astype('float32'), [864,])), 4)
func_480_call = mod.get_global_var('func_480')
func_485_call = mutated_mod.get_global_var('func_485')
var_5247 = relay.var("var_5247", dtype = "float32", shape = (120,))#candidate|5247|(120,)|var|float32
const_5248 = relay.const(4.688013, dtype = "float64")#candidate|5248|()|const|float64
const_5249 = relay.const([False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,True,False,False], dtype = "bool")#candidate|5249|(576,)|const|bool
call_5246 = relay.TupleGetItem(func_480_call(relay.reshape(var_5247.astype('float32'), [10, 3, 4]), relay.reshape(const_5248.astype('float64'), []), relay.reshape(const_5249.astype('bool'), [1, 576]), ), 1)
call_5250 = relay.TupleGetItem(func_485_call(relay.reshape(var_5247.astype('float32'), [10, 3, 4]), relay.reshape(const_5248.astype('float64'), []), relay.reshape(const_5249.astype('bool'), [1, 576]), ), 1)
output = relay.Tuple([bop_5227,call_5233,const_5234,call_5246,var_5247,const_5248,const_5249,])
output2 = relay.Tuple([bop_5230,call_5235,const_5234,call_5250,var_5247,const_5248,const_5249,])
func_5253 = relay.Function([var_5226,var_5247,], output)
mod['func_5253'] = func_5253
mod = relay.transform.InferType()(mod)
mutated_mod['func_5253'] = func_5253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5253_call = mutated_mod.get_global_var('func_5253')
var_5255 = relay.var("var_5255", dtype = "float64", shape = (2, 10, 16))#candidate|5255|(2, 10, 16)|var|float64
var_5256 = relay.var("var_5256", dtype = "float32", shape = (120,))#candidate|5256|(120,)|var|float32
call_5254 = func_5253_call(var_5255,var_5256,)
output = call_5254
func_5257 = relay.Function([var_5255,var_5256,], output)
mutated_mod['func_5257'] = func_5257
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5284 = relay.var("var_5284", dtype = "bool", shape = (14, 2, 2))#candidate|5284|(14, 2, 2)|var|bool
var_5285 = relay.var("var_5285", dtype = "bool", shape = (14, 2, 2))#candidate|5285|(14, 2, 2)|var|bool
bop_5286 = relay.logical_and(var_5284.astype('bool'), relay.reshape(var_5285.astype('bool'), relay.shape_of(var_5284))) # shape=(14, 2, 2)
func_2343_call = mod.get_global_var('func_2343')
func_2346_call = mutated_mod.get_global_var('func_2346')
const_5292 = relay.const([5.125735,-0.982278,-7.333453,-4.978901,8.913703,0.331231,-3.284989,-7.019152,6.860554,0.904413,-4.532004,-5.281029,-4.837417,1.355702,-5.604404,-1.395279,0.738999,7.967076,8.885147,6.591580,-5.592046,-5.536527,2.648355,-9.579070,-6.515716,4.826702,-0.548266,3.708884,9.983812,6.062397,9.923319,-9.656984,-4.200149,-6.276460,8.304881,-3.185297,-4.888547,-7.649004,-1.437358,-9.788970,-3.709978,1.259843,-1.336415,-9.510632,4.128970,0.978246,3.955928,-7.769740,1.230766,-3.959765,-9.543163,-4.702128,5.993909,-1.045966,0.803024,-1.057869,-6.192621,9.796894,-5.085927,9.067469,3.999071,-4.567348,-6.393551,-8.334607,3.990431,-6.999351,3.361421,0.430124,1.560652,-6.231604,-4.274450,-8.167526,-6.908750,0.829117,4.361702,9.451531,5.825336,-7.523905,-3.363703,9.219173,5.772764,1.539608,-8.678857,7.947432,-7.449358,1.172367,-9.939563,-5.590918,8.783049,-1.459052,-8.061224,1.379097,6.342833,3.244686,-6.561720,-9.745779,-3.036342,-4.424445,-1.040586,-5.095430,-8.580197,5.467467,9.739225,5.806653,-2.753517,-6.533742,8.987604,-6.638678,7.056263,-7.630912,8.039926,4.883060,-5.946098,-5.829965,9.865580,-7.356730,-5.075254,-5.095362,6.532709,-3.012047], dtype = "float32")#candidate|5292|(120,)|const|float32
const_5293 = relay.const(-9.262007, dtype = "float64")#candidate|5293|()|const|float64
call_5291 = relay.TupleGetItem(func_2343_call(relay.reshape(const_5292.astype('float32'), [30, 4]), relay.reshape(const_5293.astype('float64'), []), ), 0)
call_5294 = relay.TupleGetItem(func_2346_call(relay.reshape(const_5292.astype('float32'), [30, 4]), relay.reshape(const_5293.astype('float64'), []), ), 0)
output = relay.Tuple([bop_5286,call_5291,const_5292,const_5293,])
output2 = relay.Tuple([bop_5286,call_5294,const_5292,const_5293,])
func_5295 = relay.Function([var_5284,var_5285,], output)
mod['func_5295'] = func_5295
mod = relay.transform.InferType()(mod)
var_5296 = relay.var("var_5296", dtype = "bool", shape = (14, 2, 2))#candidate|5296|(14, 2, 2)|var|bool
var_5297 = relay.var("var_5297", dtype = "bool", shape = (14, 2, 2))#candidate|5297|(14, 2, 2)|var|bool
output = func_5295(var_5296,var_5297,)
func_5298 = relay.Function([var_5296,var_5297,], output)
mutated_mod['func_5298'] = func_5298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5151_call = mod.get_global_var('func_5151')
func_5152_call = mutated_mod.get_global_var('func_5152')
call_5371 = relay.TupleGetItem(func_5151_call(), 0)
call_5372 = relay.TupleGetItem(func_5152_call(), 0)
func_3836_call = mod.get_global_var('func_3836')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_5375 = relay.TupleGetItem(func_3836_call(), 1)
call_5376 = relay.TupleGetItem(func_3837_call(), 1)
func_4963_call = mod.get_global_var('func_4963')
func_4966_call = mutated_mod.get_global_var('func_4966')
const_5384 = relay.const([-1.715813,1.970238,1.609173,3.953231,1.899649,-7.667660,5.497457,-6.709417,-9.890173,-2.472391,1.928457,-6.462090,2.170060,3.805838,-6.113322,9.375613,-7.295320,8.126093,-8.718473,-7.321710,-0.089336,-2.015098,-2.704483,1.033061,2.412744,-3.470362,-0.127647,2.856329,-5.034021,-4.802224,9.759403,-8.260484,4.532394,-4.219155,-5.273957,7.007140,0.521059,-6.199849,-4.816416,-1.221173,3.249036,2.066344,6.135996,-3.169125,6.252821,-2.856014,-9.367770,-6.793711,0.654188,7.067809,7.785805,-7.832969,-9.665959,0.371469,1.188014,-3.565475,-3.763871,-2.066115,8.605168,2.113878,7.094342,5.533202,-4.984011,5.243478,-9.951651,2.182204,0.223605,-9.869817,4.801245,6.097143,0.610378,3.969569,4.946386,-0.312463,-6.920144,9.912725,7.866896,9.449166,3.610733,4.795849,8.399290,4.673453,0.269322,7.225113,9.071659,2.898420,-6.298063,-2.619245,-1.332406,-2.633742,8.566140,-9.718194,7.500039,-1.552106,7.801009,-8.588120,9.119602,5.467132,-9.773474,9.831142,1.716121,-8.025976,7.278102,1.002733,3.716135,4.080706,-9.252845,-0.119501,9.180949,-0.373573,-5.079823,-7.159540,-0.336500,-5.737878,-0.669545,3.221425,-5.078654,2.649918,-8.200577,9.125360,6.726882,-2.459541,1.470625,9.700695,-8.325766,6.043803,-1.137656,-5.139837,2.953210,0.107577,-6.263088,-2.793997,1.325851,-6.181214,-6.535570,8.126824,-8.103681,7.262774,-8.927445,5.759413,-6.348465,-9.256552,-8.537447,-1.722515,8.824328,9.019170,-0.079913,2.347410,5.114593,3.046137,5.825091,4.511348,5.940405,5.150757,2.323853,-2.581903,0.353995,3.513080,9.043095,-6.713780,1.095470,-0.700621,6.302002,9.083681,8.181914,-3.866985,-8.258176,2.012434,4.333033,8.269898,4.782624,-2.385736,-8.357687,-4.424977,2.651034,8.966254,-1.327450,-4.200387,4.702103,-8.866351,1.963928,3.131962,0.525135,9.466912,-3.897668,5.839151,-8.125893,-2.293333,1.090449,-7.091421,4.877028,-0.355600,7.423916,1.961230,-7.816842,5.237931,7.450238,9.634907,6.913067,1.688578,-2.460285,4.516410,-6.986369,4.079015,-6.999243,9.293330,7.353922,4.388374,-6.485511,1.841073,6.536386,-4.936674,-6.578680,0.416633,-1.050675,1.332360,0.903993,9.703343,-7.480614,-6.342552,-4.705344,3.041654,5.805751,-1.647667,7.516232,-1.995143,1.840305,9.498867,3.301454,2.573605,7.596176,-2.339194,-4.862068,0.060092,-6.600331,6.400099,7.081381,8.442540,-7.624711,-8.053855,7.044684,-7.384582,-1.345521,-9.263029,-5.806651,9.506875,-5.004075,-3.130689,-3.884911,-7.112167,2.227364,8.027189,-5.045476,4.861743,0.751017,-2.991515,4.868474,7.085063,2.461220,4.140966,8.954150,3.297181,-4.782726,-4.442974,1.829857,6.902724,0.382380,5.063671,8.911509,-1.116312,5.616699,-4.434042,1.472116,-3.013880,3.246037,-6.244200,-4.300290,9.903994,3.882063,2.755239,-9.879248,-5.766584,-7.947936,3.210289,-9.572286,-8.985776,-6.646641,-7.947710,-6.732501,-4.319351,-4.560846,-8.966112,0.478186,3.685380,-9.049578,5.103221,-7.233787,-1.509947,-7.737526,-4.887571,7.040209,-8.287188,1.646978,4.803587,1.421255,-7.966679,-9.167309,-0.378202,-1.589020,-5.650692,9.572261,1.788921,2.717463,-5.510337,8.168686,2.325212,7.688410,-5.192824,-5.234378,-7.470753,-8.791314,-1.585982,1.213145,-3.791648,-6.855605,-4.712064,-3.574116,0.318869,2.469071,4.387250,7.266951,4.244761,-9.762426,4.267600,6.360795,-9.474790,-9.741451,-8.711649,-3.598243,2.320564,-2.388662,-5.335130,6.795787,-3.089307,2.069747,3.256901,-5.625968,6.499613,9.051198,-6.023821,-2.314386,-3.204228,8.803134,-8.869843,1.488523,-6.291811,-1.718821,-8.049424,3.329850,-3.941743,6.408099,4.541736,0.663348,-9.453064,3.578814,7.422669,-7.911327,6.311035,6.892790,2.371035,9.721937,-1.160909,-9.174099,-0.401049,8.975694,-0.077535,-5.112782,7.393360,-1.420134,-4.716016,-9.645481,8.283913,8.576927,-1.985573,-0.982163,2.003566,3.423123,3.614785,3.911397,0.803193,7.884530,7.788631,0.102771,5.163904,-6.075655,-0.021223,3.547441,6.294684,-9.184372,0.066791,5.184091,-6.571327,-5.752964,-1.659468,1.406134,3.356436,1.758556,3.126923,8.401838,-0.019658,-5.208896,-2.147571,-1.208269,2.557493,6.430871,-4.709073,4.514394,6.329947,-3.903099,1.391475,-8.533700,-1.405685,1.371827,-1.693084,-1.829346,2.893419,6.868739,3.206950,8.294193,-5.796623,6.393459,-0.916986,-2.246683,1.171602,3.041893,-5.285442,0.597539,-2.091660,-4.709133,6.671736,5.031275,-0.007613,-8.230836,0.826839,-7.079709,-0.854167,-9.469589,-0.696001,-8.604267,6.633991,3.280516,1.333468,4.830083,3.176916,1.275165,-1.276215,8.746092,9.424406,-3.149511,-1.486455,9.678098,0.224495,3.120021,-4.947746,6.687809,7.635450,9.234681,1.986561,-3.808014,9.912663,1.383828,6.812512,-7.890497,-1.942144,6.673493,0.230941,1.750725,-5.141183,-0.848600,-1.543940,-8.867225,-6.302694,7.279710,-9.944419,8.019466,4.504207,-5.087512,4.747018,0.763265,1.236235,-5.299705,1.601119,3.208284,-0.367356,-4.358063,0.946267,1.553401,5.435190,8.185822,-0.436915,6.011836,9.638696,-8.179260,-1.798496,-7.805452,-2.983719,-7.432758,-6.513077,1.766534,7.575475,-4.858451,3.137331,2.154230,-3.946328,-0.795012,0.938529,-7.508714,6.583147,4.922678,-2.464554,-8.185195,3.488656,3.188821,-7.779865,-9.629613,-9.036117,8.897255,-6.833643,-0.816318,4.604395,-4.101700,-7.239110,-3.701148,5.330156,5.382468,8.826826,0.999624,-6.819360,1.458981,9.179585,6.449319,-1.944446,0.831244,2.431097,0.962933,2.028591,6.923046,-0.530104,3.398787,3.852077,5.911829,-5.304963,2.515845,7.272759,-5.937364,0.396576,8.517469,-0.404999,-2.285086,-6.464913,-3.259100,3.974207,-3.855880,9.383773,-0.507511,-8.817310,-6.917678,-1.907535,-6.340925,-9.332371,-2.390854,-1.407880,6.992261,6.245015,-1.357620,5.838635,9.697265,-2.673261,-4.857955,2.546806,-0.399199,-5.809663,4.846242,5.323919,9.284462,-8.291976,0.828028,7.363661,2.455119,-5.044026,-5.455216,-4.446680,8.583710,8.403370,7.052883,-8.630710,6.791878,-4.556389,8.245494,-5.341502,7.870658,-0.306709,6.650421,8.274279,-3.664707,-6.054493,7.115135,-0.327801,4.587967,-5.379556,6.201908,-0.736692,9.058293,9.446308,-4.071063,4.429262,-4.086137,-6.381094,0.278236,-0.408052,-8.278822,9.475554,4.553296,-7.364543,5.135450,0.237685,1.009924,8.775190,-6.322867,4.441407,-0.339418,-3.016144,-4.638996,-4.370427,-5.498489,-0.517602,8.889171,-1.270159,4.034879,2.216677,8.427953,2.148879,6.992052,-2.888452,8.699751,-1.003301,-0.787025,-1.551716,-2.891975,3.407131,7.635570,1.396492,0.726803,-7.213338,-5.927314,8.362963,-9.442986,-3.698281,-0.135037,-8.840686,-2.371761,4.674951,9.725223,8.833423,2.086743,8.294489,-8.670315,2.543861,-0.874664,9.724064,-9.512421,5.439028,9.183659,-9.532801,-9.331419,-1.305341,2.406427,4.080375,7.797511,-3.034761,4.652650,-7.592616,-5.897778,0.594995,2.638149,6.118672,-7.361087,-5.860783,-5.501858,1.950598,3.553936,5.517352,4.174740,-0.064008,-0.568120,5.452350,-8.314507,3.301752,-9.293519,0.397476,8.612946,9.161850,0.751909,-3.375483,-7.864046,-1.930720,9.488126,-9.161566,0.247484,8.595825,-6.437616,2.867790,-9.091259,3.657528,-8.111015,-5.472546,-9.890042,1.797993,-1.751499,7.694770,0.488385,-2.157854,-5.505967,0.965412,8.722448,2.331989,-4.562173,-4.103718,7.305773,4.509181,3.955790,-8.685091,0.371810,1.088929,0.858897,-3.495575,9.722092,9.357057,0.081001,7.785106,3.723275,-5.179590,5.062937,7.574396,5.581460,-4.290727,-2.353700,-0.080145,-3.398092,1.830136,-6.683757,-1.416863,6.073889,9.755564,6.195772,0.990889,9.118300,-0.657865,2.812363,-6.960382,-2.155498,9.390349,2.176986,-3.309386,7.521308,1.877616,2.625862,8.534801,1.018675,7.556287,7.012316,9.484416,8.146757,-1.113727,5.630278,3.668722,2.456706,8.481642,-6.257616,0.430005,8.784196,6.871052,-8.192021,0.365774,-4.120622,-8.743859,-6.970069,-4.124677,5.793432,-3.809503,0.741010,-1.133201,-6.346805,5.133324,1.092327,-1.123800,2.704121,1.247219,4.214201,2.094535,-0.020758,4.493783,-0.178665,-2.960932,-7.513380,-5.145543,-8.458578,3.735590,-8.220616,5.740081,6.880920,1.835123,2.882485,-3.143438,2.864032,-3.070258,-7.288487,-6.064234,-7.664873,-7.573105,1.474385,-0.513563,-8.526994,-7.544240,6.019605,-6.848673,-0.407649,6.112221,7.495991,-4.615074,-8.137802,-7.519911,-9.500454,6.944082,2.477418,-8.740977,-1.176958,-6.797890,-3.049903,-1.386262,-5.362600,-3.795699,-8.340574,-4.418812,5.371900,-2.622049,-8.858783,-8.104001,-8.535571,4.207430,-2.893489,-1.833683,-3.868134,2.352894,-8.123920,-3.911862,-8.594649,1.572142,2.828544,-9.293742,-9.818020,-3.069737,2.314968,2.811732,-4.477242,6.171305,-3.488737,2.673587,-5.391746,2.882220,-2.842969,7.100713,-7.606078,4.264600,6.458425,8.399596,0.973620,-9.621413,-1.134900,-9.033143,-0.063179,3.935430,7.257730,1.134924,8.847437,-4.102024,2.760261,3.492502,-9.385734,8.544374,-0.861019,9.867293,-3.094238,6.205398,-6.246625,3.001952,2.790733,5.234489,3.973852,2.032910,-6.121965,8.968734,7.420309,1.056287,2.768353,0.045001,2.510369,9.712696,-6.571397,1.965037,-9.209315,4.256090,7.880156,9.742620,-5.679334,-5.199655,-7.710934,-2.489258,-7.460392,-1.484112,-1.115963,4.320807,-8.668373,1.117246,0.479595,0.853619,9.336897,-1.944151,-8.483218,1.477943,-9.637910,0.452024,5.147168,-1.713301,8.179719,-4.529927,7.174808,-5.227175,-9.836286,-9.451175,-1.725098,-1.813203,1.917931,-9.140889,-8.273020,-4.785482,2.856318,8.266099,3.155006,-2.786799,-4.045530,-5.151608,0.924920,-5.827561,-2.651979,5.144196,-5.972353,-6.626461,-4.852400,2.442716,-2.355263,0.461923,7.613340,4.736821,4.541039,-6.150529,-9.534052,7.407365,1.774084,3.304551,-6.702179,-3.831369,-0.104559,-7.810289,4.280836,1.896961,2.586747,-0.524715,-8.402107,8.718728,4.183813,5.952180,-9.448211,0.265855,-5.648886,0.489787,-4.106768,-1.275846,-1.886319,6.167996], dtype = "float64")#candidate|5384|(990,)|const|float64
call_5383 = relay.TupleGetItem(func_4963_call(relay.reshape(const_5384.astype('float64'), [11, 9, 10])), 2)
call_5385 = relay.TupleGetItem(func_4966_call(relay.reshape(const_5384.astype('float64'), [11, 9, 10])), 2)
func_2920_call = mod.get_global_var('func_2920')
func_2923_call = mutated_mod.get_global_var('func_2923')
const_5394 = relay.const(-8.594227, dtype = "float64")#candidate|5394|()|const|float64
call_5393 = relay.TupleGetItem(func_2920_call(relay.reshape(const_5394.astype('float64'), [])), 1)
call_5395 = relay.TupleGetItem(func_2923_call(relay.reshape(const_5394.astype('float64'), [])), 1)
func_3897_call = mod.get_global_var('func_3897')
func_3900_call = mutated_mod.get_global_var('func_3900')
var_5399 = relay.var("var_5399", dtype = "uint64", shape = (1, 440))#candidate|5399|(1, 440)|var|uint64
call_5398 = relay.TupleGetItem(func_3897_call(relay.reshape(var_5399.astype('uint64'), [4, 11, 10]), relay.reshape(var_5399.astype('uint64'), [4, 11, 10]), ), 0)
call_5400 = relay.TupleGetItem(func_3900_call(relay.reshape(var_5399.astype('uint64'), [4, 11, 10]), relay.reshape(var_5399.astype('uint64'), [4, 11, 10]), ), 0)
bop_5401 = relay.power(call_5398.astype('float64'), relay.reshape(var_5399.astype('float64'), relay.shape_of(call_5398))) # shape=(4, 11, 10)
bop_5404 = relay.power(call_5400.astype('float64'), relay.reshape(var_5399.astype('float64'), relay.shape_of(call_5400))) # shape=(4, 11, 10)
uop_5405 = relay.asinh(var_5399.astype('float32')) # shape=(1, 440)
uop_5408 = relay.log10(uop_5405.astype('float32')) # shape=(1, 440)
func_2970_call = mod.get_global_var('func_2970')
func_2971_call = mutated_mod.get_global_var('func_2971')
call_5410 = relay.TupleGetItem(func_2970_call(), 0)
call_5411 = relay.TupleGetItem(func_2971_call(), 0)
output = relay.Tuple([call_5371,call_5375,call_5383,const_5384,call_5393,const_5394,bop_5401,uop_5408,call_5410,])
output2 = relay.Tuple([call_5372,call_5376,call_5385,const_5384,call_5395,const_5394,bop_5404,uop_5408,call_5411,])
func_5413 = relay.Function([var_5399,], output)
mod['func_5413'] = func_5413
mod = relay.transform.InferType()(mod)
var_5414 = relay.var("var_5414", dtype = "uint64", shape = (1, 440))#candidate|5414|(1, 440)|var|uint64
output = func_5413(var_5414)
func_5415 = relay.Function([var_5414], output)
mutated_mod['func_5415'] = func_5415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5215_call = mod.get_global_var('func_5215')
func_5216_call = mutated_mod.get_global_var('func_5216')
call_5428 = func_5215_call()
call_5429 = func_5215_call()
output = call_5428
output2 = call_5429
func_5436 = relay.Function([], output)
mod['func_5436'] = func_5436
mod = relay.transform.InferType()(mod)
mutated_mod['func_5436'] = func_5436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5436_call = mutated_mod.get_global_var('func_5436')
call_5437 = func_5436_call()
output = call_5437
func_5438 = relay.Function([], output)
mutated_mod['func_5438'] = func_5438
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5510 = relay.var("var_5510", dtype = "bool", shape = ())#candidate|5510|()|var|bool
var_5511 = relay.var("var_5511", dtype = "bool", shape = (7, 4, 3))#candidate|5511|(7, 4, 3)|var|bool
bop_5512 = relay.logical_and(var_5510.astype('bool'), var_5511.astype('bool')) # shape=(7, 4, 3)
func_2458_call = mod.get_global_var('func_2458')
func_2459_call = mutated_mod.get_global_var('func_2459')
call_5523 = func_2458_call()
call_5524 = func_2458_call()
func_5071_call = mod.get_global_var('func_5071')
func_5073_call = mutated_mod.get_global_var('func_5073')
call_5525 = relay.TupleGetItem(func_5071_call(relay.reshape(call_5523.astype('float64'), [2, 10, 16])), 0)
call_5526 = relay.TupleGetItem(func_5073_call(relay.reshape(call_5523.astype('float64'), [2, 10, 16])), 0)
func_2458_call = mod.get_global_var('func_2458')
func_2459_call = mutated_mod.get_global_var('func_2459')
call_5530 = func_2458_call()
call_5531 = func_2458_call()
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_5535 = func_3819_call()
call_5536 = func_3819_call()
func_4246_call = mod.get_global_var('func_4246')
func_4248_call = mutated_mod.get_global_var('func_4248')
const_5542 = relay.const([-9.219571,7.599159,-2.469355,-1.899334,-7.126953,-8.378990,7.252967,-1.554410,-9.445720,0.096837,-7.173051,4.419560,-2.312266,3.932731,1.115064,2.585297,1.443844,1.912475,2.871097,-8.735797,-0.792817,2.722923,-3.180125,3.217845,2.328667,9.643873,7.449247,-2.963498,-0.117499,5.286254,-0.778065,2.182351,-7.545630,3.004989,-7.778820,5.054529,-1.915230,-7.558816,-0.286779,7.168783,9.042680,7.908788,-7.565574,-0.390064,8.843480,-2.655180,-8.338222,-2.420902,-7.709767,-4.440620,1.775194,4.881924,-3.717115,-3.409814,3.510055,-6.233656,-2.012367,-8.308382,-2.624500,9.872235,-3.731464,1.263374,2.390534,1.417962,-0.846276,8.172883,-5.295459,9.771291,-7.568643,1.815413,-9.608102,-1.736111,-5.225168,5.701563,9.565698,-8.337046,-4.079883,0.448284,6.459511,-9.332203,-5.318788,5.854517,-0.408940,-5.459505,-4.405096,8.547468,8.282908,3.207585,-1.032588,-0.887177,6.075512,8.294082,3.503360,-8.784719,-1.208041,-2.910038,-3.340614,7.334078,-3.676150,3.256148,7.570004,8.080334,6.365764,-7.607016,3.970478,0.773171,-3.537370,7.625140,5.620795,-3.087324,-0.724341,0.163810,0.696763,9.201060,-2.578068,-1.979651,4.946768,-7.393126,2.534868,-8.954733,-0.916007,2.990486,2.930278,-7.616448,-2.539812,-5.531717,6.967975,6.021021,-7.521372,-6.868270,-2.517236,-8.713812,0.842065,-6.524338,-9.050068,6.313929,-0.135684,0.295768,3.438841,0.903954,-8.366035,-9.187047,8.072040,-9.209917,5.571043,-5.883516,-6.696862,0.408036,1.786105,-3.662737,9.544703,-4.296512,-1.021900,0.090112,2.364558,-6.447557,-1.910989,5.050408,-2.776009,4.849744,1.477465,4.263387,-9.476536,4.130131,-6.444397,3.567856,8.882859,-7.933152,0.663712,-1.540713,-8.925349,1.851347,1.928197,-0.337333,-5.057043,3.940769,6.498265,5.271108,-9.158429,0.927054,-4.495185,-4.222318,5.495198,-5.609212,-7.636612,2.277257,7.422084,2.163651,-4.504615,-9.563734,0.618588,-2.631690,3.875022,-3.439448,-0.932579,-9.612678,4.066807,-4.758992,2.356136,3.398945,4.410907,-8.566661,4.570294,-1.252768,7.023736,5.558771,-8.118703,6.539942,7.246727,7.715072,-2.866492,0.017050,-4.176480,-4.639733,-4.553952,5.545409,-1.516995,-0.830393,7.484311,4.436618,3.906731,9.907595,-2.026642,0.290747,1.689909,8.463007,9.281316,9.910262,7.444951,5.836443,6.874648,1.608970,3.707577,-6.255828,-7.645134,6.725417,-7.742421,-6.865212,-2.405670,-0.279024,-6.379025,9.247424,-5.901412,-3.204028,-5.076790,6.726546,-0.405099,2.076294,-9.070861,7.838693,-4.932521,3.671128,0.930206,2.561177,1.593639,5.984170,-4.012863,7.643069,1.300350,-1.091593,-5.176034,-5.455093,-7.138123,-3.908292], dtype = "float32")#candidate|5542|(264,)|const|float32
call_5541 = relay.TupleGetItem(func_4246_call(relay.reshape(const_5542.astype('float32'), [4, 11, 6])), 0)
call_5543 = relay.TupleGetItem(func_4248_call(relay.reshape(const_5542.astype('float32'), [4, 11, 6])), 0)
output = relay.Tuple([bop_5512,call_5523,call_5525,call_5530,call_5535,call_5541,const_5542,])
output2 = relay.Tuple([bop_5512,call_5524,call_5526,call_5531,call_5536,call_5543,const_5542,])
func_5549 = relay.Function([var_5510,var_5511,], output)
mod['func_5549'] = func_5549
mod = relay.transform.InferType()(mod)
mutated_mod['func_5549'] = func_5549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mutated_mod.get_global_var('func_5549')
var_5551 = relay.var("var_5551", dtype = "bool", shape = ())#candidate|5551|()|var|bool
var_5552 = relay.var("var_5552", dtype = "bool", shape = (7, 4, 3))#candidate|5552|(7, 4, 3)|var|bool
call_5550 = func_5549_call(var_5551,var_5552,)
output = call_5550
func_5553 = relay.Function([var_5551,var_5552,], output)
mutated_mod['func_5553'] = func_5553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5180_call = mod.get_global_var('func_5180')
func_5182_call = mutated_mod.get_global_var('func_5182')
call_5567 = relay.TupleGetItem(func_5180_call(), 1)
call_5568 = relay.TupleGetItem(func_5182_call(), 1)
func_5151_call = mod.get_global_var('func_5151')
func_5152_call = mutated_mod.get_global_var('func_5152')
call_5577 = relay.TupleGetItem(func_5151_call(), 0)
call_5578 = relay.TupleGetItem(func_5152_call(), 0)
func_2920_call = mod.get_global_var('func_2920')
func_2923_call = mutated_mod.get_global_var('func_2923')
const_5583 = relay.const(9.659011, dtype = "float64")#candidate|5583|()|const|float64
call_5582 = relay.TupleGetItem(func_2920_call(relay.reshape(const_5583.astype('float64'), [])), 2)
call_5584 = relay.TupleGetItem(func_2923_call(relay.reshape(const_5583.astype('float64'), [])), 2)
output = relay.Tuple([call_5567,call_5577,call_5582,const_5583,])
output2 = relay.Tuple([call_5568,call_5578,call_5584,const_5583,])
func_5591 = relay.Function([], output)
mod['func_5591'] = func_5591
mod = relay.transform.InferType()(mod)
mutated_mod['func_5591'] = func_5591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5591_call = mutated_mod.get_global_var('func_5591')
call_5592 = func_5591_call()
output = call_5592
func_5593 = relay.Function([], output)
mutated_mod['func_5593'] = func_5593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4840_call = mod.get_global_var('func_4840')
func_4841_call = mutated_mod.get_global_var('func_4841')
call_5603 = relay.TupleGetItem(func_4840_call(), 0)
call_5604 = relay.TupleGetItem(func_4841_call(), 0)
output = call_5603
output2 = call_5604
func_5626 = relay.Function([], output)
mod['func_5626'] = func_5626
mod = relay.transform.InferType()(mod)
mutated_mod['func_5626'] = func_5626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5626_call = mutated_mod.get_global_var('func_5626')
call_5627 = func_5626_call()
output = call_5627
func_5628 = relay.Function([], output)
mutated_mod['func_5628'] = func_5628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2060_call = mod.get_global_var('func_2060')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_5735 = func_2060_call()
call_5736 = func_2060_call()
output = relay.Tuple([call_5735,])
output2 = relay.Tuple([call_5736,])
func_5754 = relay.Function([], output)
mod['func_5754'] = func_5754
mod = relay.transform.InferType()(mod)
output = func_5754()
func_5755 = relay.Function([], output)
mutated_mod['func_5755'] = func_5755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2074_call = mod.get_global_var('func_2074')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_5765 = relay.TupleGetItem(func_2074_call(), 0)
call_5766 = relay.TupleGetItem(func_2075_call(), 0)
output = call_5765
output2 = call_5766
func_5767 = relay.Function([], output)
mod['func_5767'] = func_5767
mod = relay.transform.InferType()(mod)
output = func_5767()
func_5768 = relay.Function([], output)
mutated_mod['func_5768'] = func_5768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5180_call = mod.get_global_var('func_5180')
func_5182_call = mutated_mod.get_global_var('func_5182')
call_5769 = relay.TupleGetItem(func_5180_call(), 1)
call_5770 = relay.TupleGetItem(func_5182_call(), 1)
output = call_5769
output2 = call_5770
func_5796 = relay.Function([], output)
mod['func_5796'] = func_5796
mod = relay.transform.InferType()(mod)
mutated_mod['func_5796'] = func_5796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5796_call = mutated_mod.get_global_var('func_5796')
call_5797 = func_5796_call()
output = call_5797
func_5798 = relay.Function([], output)
mutated_mod['func_5798'] = func_5798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3665_call = mod.get_global_var('func_3665')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_5833 = func_3665_call()
call_5834 = func_3665_call()
output = relay.Tuple([call_5833,])
output2 = relay.Tuple([call_5834,])
func_5840 = relay.Function([], output)
mod['func_5840'] = func_5840
mod = relay.transform.InferType()(mod)
output = func_5840()
func_5841 = relay.Function([], output)
mutated_mod['func_5841'] = func_5841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5754_call = mod.get_global_var('func_5754')
func_5755_call = mutated_mod.get_global_var('func_5755')
call_5872 = relay.TupleGetItem(func_5754_call(), 0)
call_5873 = relay.TupleGetItem(func_5755_call(), 0)
func_3477_call = mod.get_global_var('func_3477')
func_3479_call = mutated_mod.get_global_var('func_3479')
const_5877 = relay.const([-5.810312,-7.176101,9.990464,-6.149280,3.320668,9.649865,6.445225,-2.768069,-0.520299,5.667387,0.826630,6.320366,4.171577,3.832796,-0.723270,-2.751721,7.455980,1.391071,-2.317439,1.069937,9.609743,-7.169663,-0.331029,-7.783957,4.793309,6.595730,3.098890,-5.833317,0.505582,9.176548,-9.700425,3.265064,-7.128223,-4.079360,-9.496202,8.359796,-8.713271,-9.191846,-0.596609,4.326920,-8.453731,-0.760568,-5.782069,2.502647,-2.898104,9.910388,-4.073949,-8.318011,2.684269,1.412919,-8.354813,9.408865,1.160643,-1.563615,2.522242,3.260503,-6.569615,9.688786,2.431104,-1.050185,4.535380,-9.662680,-3.177201,5.237797,-9.468900,5.378039,4.982954,7.085833,-3.759454,-6.962546,-0.325948,-7.896952,-1.841615,1.734389,-1.867445,8.359629,1.289765,1.204286,2.046472,-9.255513,-8.635606,-2.711086,-2.630980,-4.107326,4.446279,-9.618941,-6.571549,-9.497900,-4.010003,-3.521047,-6.486427,2.220635,-1.436330,7.831076,6.761740,7.730604,-8.633792,0.443203,6.398372,7.824787,-2.027768,-2.754668,-6.707206,5.995677,-5.780655,6.696382,-2.459113,2.773449,-6.226099,-5.709234,-2.105726,0.568301,8.581593,3.015578,-7.517527,-1.538017,5.323300,3.989501,8.552799,-5.321741], dtype = "float32")#candidate|5877|(120,)|const|float32
call_5876 = relay.TupleGetItem(func_3477_call(relay.reshape(const_5877.astype('float32'), [120,])), 4)
call_5878 = relay.TupleGetItem(func_3479_call(relay.reshape(const_5877.astype('float32'), [120,])), 4)
func_2343_call = mod.get_global_var('func_2343')
func_2346_call = mutated_mod.get_global_var('func_2346')
call_5880 = relay.TupleGetItem(func_2343_call(relay.reshape(const_5877.astype('float32'), [30, 4]), relay.reshape(call_5876.astype('float64'), []), ), 7)
call_5881 = relay.TupleGetItem(func_2346_call(relay.reshape(const_5877.astype('float32'), [30, 4]), relay.reshape(call_5876.astype('float64'), []), ), 7)
output = relay.Tuple([call_5872,call_5876,const_5877,call_5880,])
output2 = relay.Tuple([call_5873,call_5878,const_5877,call_5881,])
func_5895 = relay.Function([], output)
mod['func_5895'] = func_5895
mod = relay.transform.InferType()(mod)
mutated_mod['func_5895'] = func_5895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mutated_mod.get_global_var('func_5895')
call_5896 = func_5895_call()
output = call_5896
func_5897 = relay.Function([], output)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5591_call = mod.get_global_var('func_5591')
func_5593_call = mutated_mod.get_global_var('func_5593')
call_5919 = relay.TupleGetItem(func_5591_call(), 0)
call_5920 = relay.TupleGetItem(func_5593_call(), 0)
output = call_5919
output2 = call_5920
func_5922 = relay.Function([], output)
mod['func_5922'] = func_5922
mod = relay.transform.InferType()(mod)
output = func_5922()
func_5923 = relay.Function([], output)
mutated_mod['func_5923'] = func_5923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5591_call = mod.get_global_var('func_5591')
func_5593_call = mutated_mod.get_global_var('func_5593')
call_5967 = relay.TupleGetItem(func_5591_call(), 3)
call_5968 = relay.TupleGetItem(func_5593_call(), 3)
var_5971 = relay.var("var_5971", dtype = "float64", shape = (15, 11, 1))#candidate|5971|(15, 11, 1)|var|float64
bop_5972 = relay.divide(call_5967.astype('float64'), var_5971.astype('float64')) # shape=(15, 11, 1)
bop_5975 = relay.divide(call_5968.astype('float64'), var_5971.astype('float64')) # shape=(15, 11, 1)
output = relay.Tuple([bop_5972,])
output2 = relay.Tuple([bop_5975,])
func_5978 = relay.Function([var_5971,], output)
mod['func_5978'] = func_5978
mod = relay.transform.InferType()(mod)
var_5979 = relay.var("var_5979", dtype = "float64", shape = (15, 11, 1))#candidate|5979|(15, 11, 1)|var|float64
output = func_5978(var_5979)
func_5980 = relay.Function([var_5979], output)
mutated_mod['func_5980'] = func_5980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4979_call = mod.get_global_var('func_4979')
func_4981_call = mutated_mod.get_global_var('func_4981')
call_5993 = func_4979_call()
call_5994 = func_4979_call()
func_3341_call = mod.get_global_var('func_3341')
func_3344_call = mutated_mod.get_global_var('func_3344')
var_6014 = relay.var("var_6014", dtype = "float32", shape = (169, 10))#candidate|6014|(169, 10)|var|float32
call_6013 = relay.TupleGetItem(func_3341_call(relay.reshape(var_6014.astype('float32'), [1690,]), relay.reshape(var_6014.astype('float32'), [1690,]), ), 2)
call_6015 = relay.TupleGetItem(func_3344_call(relay.reshape(var_6014.astype('float32'), [1690,]), relay.reshape(var_6014.astype('float32'), [1690,]), ), 2)
output = relay.Tuple([call_5993,call_6013,var_6014,])
output2 = relay.Tuple([call_5994,call_6015,var_6014,])
func_6024 = relay.Function([var_6014,], output)
mod['func_6024'] = func_6024
mod = relay.transform.InferType()(mod)
mutated_mod['func_6024'] = func_6024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6025 = relay.var("var_6025", dtype = "float32", shape = (169, 10))#candidate|6025|(169, 10)|var|float32
func_6024_call = mutated_mod.get_global_var('func_6024')
call_6026 = func_6024_call(var_6025)
output = call_6026
func_6027 = relay.Function([var_6025], output)
mutated_mod['func_6027'] = func_6027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5215_call = mod.get_global_var('func_5215')
func_5216_call = mutated_mod.get_global_var('func_5216')
call_6069 = func_5215_call()
call_6070 = func_5215_call()
func_3211_call = mod.get_global_var('func_3211')
func_3213_call = mutated_mod.get_global_var('func_3213')
const_6072 = relay.const([True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,True,False,False,True,True,False], dtype = "bool")#candidate|6072|(576,)|const|bool
call_6071 = relay.TupleGetItem(func_3211_call(relay.reshape(const_6072.astype('bool'), [576,])), 1)
call_6073 = relay.TupleGetItem(func_3213_call(relay.reshape(const_6072.astype('bool'), [576,])), 1)
output = relay.Tuple([call_6069,call_6071,const_6072,])
output2 = relay.Tuple([call_6070,call_6073,const_6072,])
func_6077 = relay.Function([], output)
mod['func_6077'] = func_6077
mod = relay.transform.InferType()(mod)
output = func_6077()
func_6078 = relay.Function([], output)
mutated_mod['func_6078'] = func_6078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3411_call = mod.get_global_var('func_3411')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_6099 = relay.TupleGetItem(func_3411_call(), 1)
call_6100 = relay.TupleGetItem(func_3412_call(), 1)
output = relay.Tuple([call_6099,])
output2 = relay.Tuple([call_6100,])
func_6115 = relay.Function([], output)
mod['func_6115'] = func_6115
mod = relay.transform.InferType()(mod)
mutated_mod['func_6115'] = func_6115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6115_call = mutated_mod.get_global_var('func_6115')
call_6116 = func_6115_call()
output = call_6116
func_6117 = relay.Function([], output)
mutated_mod['func_6117'] = func_6117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_6136 = relay.TupleGetItem(func_1986_call(), 0)
call_6137 = relay.TupleGetItem(func_1988_call(), 0)
func_3341_call = mod.get_global_var('func_3341')
func_3344_call = mutated_mod.get_global_var('func_3344')
const_6139 = relay.const([1.331089,-6.337015,-8.795963,7.523722,7.394157,-1.309497,4.655394,5.634429,2.033591,7.994191,-8.563326,-3.287801,-2.959839,0.350670,-3.423958,2.942242,7.143595,-2.330050,1.222485,5.715901,-3.702421,4.510141,-9.927693,-7.837263,-5.656810,-1.398863,9.051178,-1.540799,-8.920207,7.828113,-8.353443,-1.404771,-9.949393,3.660311,-2.501491,-9.257598,-9.340643,-1.084936,-7.116536,3.997343,-1.261022,-0.775461,-3.102210,6.039160,-5.438845,0.350640,-8.376987,-2.087953,-1.274523,-4.258984,7.275906,2.295921,-5.032934,-0.417707,-1.696020,1.383213,4.044225,0.504929,-7.200713,-7.657635,2.104146,0.207526,3.502853,6.640704,-1.722838,-1.767395,-6.574075,3.450825,2.250666,-0.191910,6.406436,8.291191,8.859996,-2.243189,9.177418,-7.761450,-9.852594,-8.308334,-8.002648,5.631315,-0.076922,-1.050890,9.355596,5.890188,7.437386,6.571753,-2.702821,4.312280,9.099512,5.745564,-1.027154,8.866552,-7.368402,-8.925492,1.262263,1.384568,7.711482,9.602279,6.610333,9.790988,-1.744284,-2.973124,8.939621,-9.550218,6.154225,-6.474049,9.340278,1.815632,9.566437,-5.824872,7.355830,-7.747144,1.586372,-7.085743,6.420389,4.828779,-7.939403,-3.235990,6.406016,-0.409441,-7.488879,-4.377062,-0.398027,8.897586,3.570646,0.981922,2.140441,9.188216,1.470209,-7.936017,-2.068018,-8.256278,2.510347,-2.712496,7.845399,9.132608,6.158033,9.907945,3.576401,-9.752166,8.822261,-4.800241,5.594188,1.720996,9.471868,0.206998,-3.671252,-1.393144,-4.912835,-7.086926,6.407770,-2.795257,-7.296858,-0.751305,-4.073160,-6.059719,-6.171040,7.529298,4.793739,-9.346052,-1.615303,-0.100437,5.403023,-7.325693,0.116242,3.560596,-6.171854,-8.953146,-0.978238,8.950251,0.725536,-3.073155,-7.821549,8.000526,-6.239900,-7.221106,-9.391606,9.105287,6.067393,9.894680,3.878854,6.700320,-6.860238,-0.688811,-3.201544,-7.898920,7.193400,-8.466112,-2.234033,3.875002,2.852136,3.211189,-9.298373,-9.549810,-5.411209,5.415889,-6.439406,6.867623,-8.151508,6.087662,9.871519,-8.470549,-6.299665,-7.835755,-2.103865,-3.353137,2.330562,3.727048,-9.759573,6.966939,-2.396682,-7.905273,6.535585,4.354472,5.141519,8.271424,-4.225959,-0.423965,-5.147677,4.483155,-0.476185,-5.499663,3.503460,-7.217280,8.870545,-0.503435,-7.725040,8.402699,0.334196,3.150882,2.255723,1.346103,-1.192052,1.791996,6.146250,2.422323,-1.679620,4.942417,-0.870517,1.044533,-8.210929,0.377968,1.987026,-1.627525,9.360192,5.541556,-8.233576,7.419730,-5.570555,0.682729,0.781339,-3.398788,5.291486,-6.328943,4.748421,5.343398,3.294006,-4.312145,5.626809,2.507931,-2.019040,-8.811457,-8.308399,9.162620,-4.686135,-2.591586,1.556785,2.550896,-0.960787,-3.539912,6.578206,1.110500,-9.195142,0.447429,6.550333,8.352103,-6.544030,-4.613863,5.731493,0.360088,7.036681,8.046870,-6.497197,9.356873,-8.199243,-3.358970,7.799717,4.007840,6.283459,-3.581803,5.766243,-1.515063,9.225477,-1.697413,-3.018875,-9.046015,6.518318,3.772695,-2.331281,2.095124,-1.841079,-2.962566,0.314023,-4.588756,7.363646,6.748004,-5.249785,-3.201455,0.452758,-7.901855,-7.663444,1.848486,-0.232690,-2.865510,4.461773,-8.017053,2.763744,9.404060,-9.545810,-7.155471,-2.222346,-4.372013,3.959295,-9.126105,-7.523869,8.263811,0.990538,-6.482959,8.613527,-2.013787,-4.551328,-4.403525,-0.035016,8.535829,3.085170,-1.902990,0.204931,-7.876301,2.214506,5.922685,4.003500,-4.834276,1.403373,4.389408,5.399382,8.326509,-2.123236,-2.804791,-6.688919,1.875017,9.529120,5.809836,-3.881394,0.051434,8.815714,1.709145,6.825162,2.001042,6.295151,1.058292,7.436683,-3.835278,7.472797,-6.819822,-1.109426,2.285796,0.413658,6.075023,2.310462,4.402668,6.032516,6.478456,-7.625422,-1.847601,4.978889,3.132471,-2.713377,-6.216012,-0.528300,4.349755,-8.267074,-1.708849,-9.649675,-7.249903,-5.879863,-6.196593,-6.764802,8.076881,-1.722317,-5.358328,6.574227,-7.328474,-5.631562,2.276392,6.575234,0.186786,-9.852011,2.435132,7.178704,-0.719047,0.243968,-5.561908,-6.365960,4.263934,7.068327,4.714323,8.506851,-5.518034,-8.795137,-1.098340,2.052102,-1.374515,8.995632,-6.300601,0.516103,-3.502265,3.115162,-4.445707,-0.680333,-6.745442,-7.757804,5.378164,-9.880968,3.979938,8.531874,-7.844376,0.645239,-3.562749,8.043176,-6.967346,0.609225,2.324544,7.975827,0.743225,0.800649,9.243092,8.444916,6.093398,-1.512849,-2.201222,-9.291907,-7.180565,4.693457,-6.882812,7.253191,7.713829,-0.274719,3.869353,1.388405,2.009996,5.044832,-5.327167,5.709459,-9.283361,-4.730924,-7.891371,7.402290,-2.688872,4.024644,1.885710,9.780033,-7.775965,-7.654123,2.283916,-0.912986,-2.047131,8.189447,-8.215996,9.525363,7.376776,2.839648,-6.757005,-8.613747,-9.339555,-3.927257,3.618344,-4.017578,2.806763,1.323134,-1.467332,2.227987,0.496261,2.442608,-4.892031,-8.429177,-6.104439,3.687164,9.859607,-3.475567,7.031352,6.645177,-9.635720,-7.517315,-4.375347,7.554809,4.340879,-3.008674,1.013483,-4.884924,-8.364554,3.687370,7.633578,5.031361,0.622760,-5.949076,-5.417818,2.612704,2.271731,-1.311312,2.795422,0.307068,8.775044,-8.232627,2.862483,-0.973626,4.535608,9.121441,-2.758815,7.636508,-2.216839,-6.836356,-0.893940,6.534323,-0.331003,4.845668,7.879508,-2.639748,-7.426223,-2.242679,-7.537867,5.996231,-9.020912,-9.450121,-1.606019,-1.610799,4.770326,3.728750,-9.658466,7.622545,7.128478,5.261443,3.378679,5.405660,-2.102196,-3.494791,-8.779943,-0.016216,-5.824737,7.953353,3.133358,3.212767,-6.149409,-0.735769,9.351757,3.560473,-9.171187,-4.728281,2.033092,-7.972728,3.632116,-6.756174,-5.120828,-3.413584,1.217505,1.403223,-5.623638,0.451024,-0.213269,2.053537,8.650182,-5.262462,0.861830,-9.040813,-0.206686,-0.127496,8.391366,7.434408,-7.205371,-9.193644,8.510849,-5.119343,-5.819132,-1.798170,0.697568,-0.178333,9.679187,-0.387890,1.909830,0.629068,4.577555,0.401618,-9.677435,6.157519,4.485001,-4.840955,1.318055,-6.077207,-0.356258,-6.214631,-1.051249,-1.795226,6.533203,7.853226,3.060026,-0.781101,-2.490997,9.040173,-4.800349,5.844448,-7.146022,-4.849984,-0.550625,5.484799,-2.098246,-9.938136,8.098856,-2.899386,-2.446205,8.651154,-7.285089,-8.786827,-4.431732,8.072167,-1.482542,-8.155991,-9.531020,4.285398,2.746161,1.423701,-4.685880,-3.974838,-6.184287,8.384274,-8.938590,9.154351,-6.327055,-5.745191,4.199663,-3.773044,-6.266327,1.434266,2.651414,-3.345070,7.407426,-3.015377,3.743502,0.110799,1.354965,-4.746341,-8.443637,-0.993857,-7.970072,9.453943,-0.003280,4.249936,-5.261654,3.161660,8.545971,-8.342922,5.975414,4.341540,8.513261,8.400125,9.315736,1.222179,7.845306,-4.020647,-1.580493,2.311161,8.377569,9.568137,5.297194,-1.457900,-6.197620,-2.863509,5.586951,1.721687,-3.958465,-1.945850,-5.074431,9.783911,1.149321,1.467295,5.128351,1.029158,-0.580562,-0.379189,1.307276,-1.444753,4.766417,-5.378522,-2.697124,-0.657786,-4.256961,-1.616159,-4.316349,-8.209512,-7.253806,5.873492,-4.589064,-7.617762,2.283404,4.179698,6.679959,2.924397,-5.340089,-7.546604,9.649389,7.960341,7.432010,-5.877309,-6.620993,4.197205,8.498727,-2.063787,6.709136,-5.704540,-5.003361,-3.546951,4.636683,-2.768148,2.151840,6.779759,1.527985,-0.945797,-8.524488,-0.264639,1.279084,0.427025,-7.363516,-9.108449,9.672825,9.261799,-2.261778,0.861300,4.077886,5.481233,-2.340814,4.409721,-9.605761,-7.459664,-4.518709,6.237329,4.500897,-8.540437,-5.325656,3.105787,2.755385,8.049061,-1.192483,-0.187335,5.961908,-4.947052,-2.476185,1.199477,5.370840,1.174901,3.491611,1.571688,-6.034270,-5.560217,2.717620,-3.514431,-4.237983,-3.484830,-4.339097,-9.512648,0.480160,-7.716519,-4.701597,-8.436399,5.680097,-3.856522,-5.429124,5.388368,8.218665,3.665813,-4.626596,-3.239151,-8.541713,6.135554,5.597770,-4.531506,6.951249,-3.117816,-9.086266,5.030823,-6.246432,-1.220896,-6.491548,9.851682,-2.178030,-9.677096,-9.553180,3.435084,5.165946,-2.383256,2.869306,6.292197,0.452120,-7.151703,-7.784935,5.184428,8.234490,0.149202,-9.852204,-7.935503,-9.071964,6.857341,0.579966,0.262735,3.471653,6.583270,-9.403871,5.339538,-0.170101,9.371452,-2.319440,0.537352,7.339733,1.147512,-7.540195,-1.069851,-4.737343,7.487510,-7.299242,-6.069016,-4.063921,-9.877608,8.450217,-9.826947,-0.641920,-3.382111,2.453938,-0.869467,1.764857,-9.413933,7.216153,-6.490263,-8.828493,6.318312,-2.944296,-2.795358,4.460634,0.230230,1.787031,-9.704873,0.051131,-7.088017,1.070373,9.846371,-2.570342,-3.629293,-2.695359,3.264447,-8.837556,-1.776687,-6.024112,-8.551023,6.992525,-0.962282,7.293836,-8.558760,-0.572993,4.266179,-2.144122,-7.172289,-6.022479,-3.248685,8.420613,1.058143,7.839373,-6.748305,8.136330,2.785038,-3.872276,4.508761,0.352980,-0.772426,-2.662406,4.613704,3.066837,9.486461,-9.968733,-3.472520,4.041988,0.155067,0.298859,-4.204404,-6.397114,-2.178416,-4.190800,3.233941,9.620120,5.673524,5.426711,-8.688019,-2.363537,6.297405,-7.777548,-3.873388,4.923813,-6.963217,5.701465,8.087107,-7.456104,-3.699946,4.560295,-1.015550,9.415763,-7.083462,-6.965136,3.294194,-7.645035,2.045814,8.954651,-5.195511,-8.151215,4.118474,-5.933857,5.885835,-7.210107,5.625964,1.430782,0.415132,4.483765,-0.699820,-7.901124,-8.750464,-5.325812,9.566689,6.398415,-0.818001,-5.007872,5.758090,7.847755,-7.178146,-0.175450,0.988167,4.030533,-2.544473,2.645964,7.480174,3.703379,-6.194703,0.554572,7.461968,-3.320778,-8.869774,9.423951,6.936434,7.984914,2.669127,3.059685,1.515247,4.563334,0.132259,-2.685239,-5.171334,-8.254364,3.075680,3.292796,-5.154704,3.779203,-1.626946,-2.162942,2.088693,1.757100,1.328684,9.001276,-3.472316,-7.244562,2.933955,-9.755198,-7.887371,0.663130,-2.573068,-2.399380,-6.487330,-1.771667,5.889691,-0.558506,-8.516345,3.698432,-0.388205,-3.926509,9.907494,-1.808665,-8.533327,-8.909659,9.496458,-9.899989,-7.094915,-0.803879,-0.019172,-8.503799,9.046266,-6.806912,-0.077375,2.550293,7.597331,4.516838,-2.319501,9.356930,-1.497163,-4.503033,6.421956,-5.618011,4.422339,-7.377302,6.453996,9.374452,5.525936,-7.436280,9.681088,-8.588720,9.681786,1.811449,4.190232,-0.093594,6.927040,8.377065,-3.937440,-4.049214,-0.470235,2.389787,7.140736,-8.527097,5.166369,5.689528,-2.905169,7.146952,2.872029,-2.330288,3.701711,9.728084,2.745572,-2.744809,-5.891655,3.540005,0.088987,-2.119972,-8.197359,-8.263691,0.070572,-2.672303,1.786397,3.860295,9.124832,-8.086167,8.142788,0.303877,-1.257763,-1.135545,-4.548506,-9.393524,-2.276611,8.674713,7.323529,-2.145482,7.309793,0.415937,-9.434561,6.587995,-7.051558,3.553295,5.311335,-7.665126,-9.857105,-4.740106,-3.317319,-9.297741,6.707110,8.313358,2.672734,6.526743,4.896114,-4.617188,-4.076208,8.297770,5.545605,-1.544028,5.683497,-6.946876,3.875514,-0.825805,5.633969,-0.315449,-5.057496,-5.688333,-4.110248,-2.248442,-6.247213,5.901159,5.932724,1.580283,5.899068,8.233161,-3.226870,-0.154879,5.940511,5.073763,-4.666329,9.455069,-4.961486,-9.731197,-3.220254,-4.743014,9.667814,9.034652,-2.615066,9.740769,-7.732690,-9.857668,6.051752,-8.756303,7.749150,1.574772,1.871585,0.647904,-9.894183,-6.022684,-1.844586,8.224546,2.866403,-7.186329,6.372270,4.582908,0.719366,-6.598053,1.409011,5.227048,9.485849,-5.876051,8.813741,-5.461559,0.030953,-1.148805,7.892042,-2.716494,-7.063887,-8.977923,-2.399533,0.958194,4.401532,-7.965274,-3.550812,5.624254,6.109829,8.113898,1.383278,-1.691902,-9.689942,0.141464,3.311226,-0.001255,-9.050371,8.408446,6.954934,-8.794110,6.390242,4.804839,-7.803069,8.698540,-3.090062,8.554117,-2.747952,-3.900972,-1.384024,-1.885731,4.043855,-7.813681,8.357344,5.583918,-4.253973,2.711920,-4.345600,-0.729578,2.357655,-3.298968,-7.408605,-2.837693,-7.479404,4.752996,-0.356558,-9.687208,7.217301,5.721147,-3.945055,6.372627,8.091330,-7.472303,7.912018,-1.074191,-9.908710,-1.260639,-5.167607,8.990246,7.257072,-5.760523,-4.037096,-1.962135,5.966371,-2.361778,-7.311607,-4.921169,-6.502319,5.510840,8.158935,1.858834,1.590792,-5.486971,-7.959613,-1.317624,1.453955,6.904262,5.711757,5.937755,4.334942,-6.960267,8.673829,1.909936,-9.692654,6.283172,3.842298,8.465654,-4.929286,-9.579023,-0.033369,-5.197278,0.918540,8.216465,8.387548,2.587746,9.703146,-1.110557,5.893396,-2.990822,9.683960,7.046079,-1.492913,7.042878,5.779655,1.198348,-6.691759,2.733015,0.154030,-6.705682,1.427624,-3.645251,1.386797,8.790250,-5.484561,-0.420470,9.606187,-5.760960,6.756690,-3.856127,-0.087537,-2.881110,8.287095,-4.046409,-9.535065,-2.790555,5.236723,-1.896516,3.551723,4.967319,-8.578421,1.358502,6.819102,8.185347,3.980974,3.674864,-4.214433,-1.250237,7.524071,-9.094227,1.260712,7.399808,1.727814,-8.117657,0.998350,9.621914,3.914957,2.367236,-4.637800,3.514352,-9.390254,5.303392,-6.034315,0.799716,5.906028,-2.116990,-9.875317,9.245074,3.119316,-2.916494,8.555063,-7.596794,4.150756,8.622105,3.265525,3.074294,-5.328398,-1.670725,4.888017,-2.725372,7.750922,5.532477,1.249160,-6.264799,-5.582551,9.314114,-8.417858,1.142266,-4.742895,8.828869,4.131119,1.120940,-9.065161,0.953277,1.367176,-4.851526,-4.941047,-5.870061,-6.475362,-8.232707,-5.291877,-0.539007,-2.314291,-2.173860,-8.726470,-5.049936,-5.123007,6.855283,1.347065,-8.084199,5.260536,3.502897,4.892144,3.810917,-7.100918,-2.802523,1.878023,6.867269,-1.010030,-7.485740,-2.547212,7.432868,1.497607,4.361193,5.101594,1.693808,-5.557258,-1.537236,1.191006,2.608838,2.689008,-0.493313,-7.884739,-1.287166,5.209240,4.288200,7.223316,-8.991926,-1.151517,9.359211,-1.272396,-3.495108,-6.765670,-6.600926,-8.684117,4.053785,9.210985,-6.028000,-1.752934,6.905193,-1.764717,6.131877,1.698372,-9.813808,4.174740,1.555347,-8.473098,-9.048814,-2.858827,-4.763783,-1.415329,-3.608017,4.131911,9.290933,-0.304877,7.279788,8.148205,-1.249425,5.374638,-7.188131,0.119232,-6.116966,5.400194,-3.150408,7.773525,-0.654168,-3.161656,9.684046,-8.166970,9.932903,2.512487,6.268417,5.109661,8.374573,-1.982776,4.228078,9.718623,0.881807,-6.117592,-6.810326,4.757834,7.405370,-7.506874,1.593218,3.549922,5.019626,-6.886140,-6.140419,-1.658580,-9.017684,3.934936,-8.691582,8.271355,-4.980986,3.090401,9.538868,6.367893,1.621458,7.549807,-1.307805,5.978520,-8.485855,-8.871124,-3.382096,-5.155239,4.863715,-6.330486,7.253336,-5.645510,-1.743313,-9.490216,-6.857460,-6.375795,0.435768,-6.820402,4.819558,7.206105,3.862252,-2.616971,8.468370,-8.207281,-3.518106,-2.136628,-7.098819,4.014616,0.787620,-3.407631,-7.220851,4.324332,5.856903,7.808966,7.024597,-8.822977,2.310655,-0.620446,7.965964,4.826261,-2.865823,9.635230,-6.753673,6.825126,5.994241,4.633742,-3.977350,5.250895,2.044089,-3.722523,-4.269732,9.835345,6.422407,-1.347990,5.591434,3.330864,9.876263,-9.818027,4.156784,8.980567,-0.919682,-4.880883,9.232392,-1.566065,0.701817,-6.444635,8.686141,5.123291,6.994259,7.139072,0.140084,-7.758721,-4.207936,8.655533,-0.807523,-5.271954,8.407056,-5.284869,-6.223830,1.172284,5.975397,5.158167,-1.182910,-6.959280,-6.189411,-0.374873,-4.771994,1.959449,3.926094,-9.166550,7.259732,-9.576251,-7.331643,-8.629576,1.168110,-6.403573,6.351711,3.242184,-2.326782,5.504122,-8.938265,-1.305479,4.283726,0.101990,-6.816941,-8.697939,-8.811183,1.352893,1.298023,9.398816,5.254659,-9.984588,-1.249004,-8.839204,9.164351,8.319481,6.525919,-5.508971,4.464281,-4.795587,8.762364,-9.432592,5.554602,-7.257818,1.294722,-8.522794,0.141443,0.400973,-5.896412,-9.226107,8.607867,1.744903,-0.702513,2.088631,3.775890,6.922071,4.751289,-3.932787,1.614248,8.791271,7.936016,-4.500243,-3.610336,-5.036067,4.373550,-9.104668,-8.622643,-3.436593,0.011238,8.322107,2.658574,-5.396904,-1.995598,8.693320,9.255773,-9.817549,-2.487404,-8.469239,-1.772365,-3.454453,0.851403,-9.914426,-5.367172,-3.774414,9.471645,8.726564,0.606064,1.828043,-8.301112,0.815491,6.557002,-1.770275,-7.956800,8.571900,9.060383,8.688505,-6.224261,0.585994,-1.373516,1.546887,4.215066,-4.191076,-7.343714,-0.927592,-5.186020,-2.940148,2.848602,-9.456722,8.486276,-8.042695,9.098390,-1.481799,3.223571,-8.714018,2.049761,1.862764,-5.098889,5.587411,3.985310,-4.005581,-9.036604,-2.729866,8.641967,6.020795,-4.210744,-3.045510,4.540845,1.094672,-8.218528,-5.947865,9.000368,-6.865562,4.739902,-1.184139,0.653220,2.024214,-3.418797,9.085748,-2.592186,-0.172611,-9.247581,-2.933933,1.654120,-9.709391,5.733526,-7.392931,8.430777,3.236187,-6.686884,4.291748,-5.636745,5.350451,-8.982970,-5.607735,-3.606036,9.424143,5.390840,-7.231714,-5.184239,-8.169065,-7.930322,-2.024365,3.354307,-0.667590,-1.219125,5.356732,-8.237497,6.502725,0.968604,8.607889,-4.078585,-7.422335,-5.106650,0.143998,-5.256192], dtype = "float32")#candidate|6139|(1690,)|const|float32
call_6138 = relay.TupleGetItem(func_3341_call(relay.reshape(const_6139.astype('float32'), [1690,]), relay.reshape(const_6139.astype('float32'), [1690,]), ), 0)
call_6140 = relay.TupleGetItem(func_3344_call(relay.reshape(const_6139.astype('float32'), [1690,]), relay.reshape(const_6139.astype('float32'), [1690,]), ), 0)
output = relay.Tuple([call_6136,call_6138,const_6139,])
output2 = relay.Tuple([call_6137,call_6140,const_6139,])
func_6152 = relay.Function([], output)
mod['func_6152'] = func_6152
mod = relay.transform.InferType()(mod)
output = func_6152()
func_6153 = relay.Function([], output)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_6174 = relay.TupleGetItem(func_2118_call(), 1)
call_6175 = relay.TupleGetItem(func_2120_call(), 1)
func_2181_call = mod.get_global_var('func_2181')
func_2184_call = mutated_mod.get_global_var('func_2184')
call_6185 = relay.TupleGetItem(func_2181_call(relay.reshape(call_6174.astype('float64'), [2, 10, 16])), 2)
call_6186 = relay.TupleGetItem(func_2184_call(relay.reshape(call_6174.astype('float64'), [2, 10, 16])), 2)
bop_6187 = relay.logical_xor(call_6185.astype('uint64'), relay.reshape(call_6174.astype('uint64'), relay.shape_of(call_6185))) # shape=(2, 10, 16)
bop_6190 = relay.logical_xor(call_6186.astype('uint64'), relay.reshape(call_6175.astype('uint64'), relay.shape_of(call_6186))) # shape=(2, 10, 16)
func_4463_call = mod.get_global_var('func_4463')
func_4465_call = mutated_mod.get_global_var('func_4465')
call_6202 = relay.TupleGetItem(func_4463_call(), 0)
call_6203 = relay.TupleGetItem(func_4465_call(), 0)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_6233 = relay.TupleGetItem(func_3046_call(), 0)
call_6234 = relay.TupleGetItem(func_3048_call(), 0)
func_5754_call = mod.get_global_var('func_5754')
func_5755_call = mutated_mod.get_global_var('func_5755')
call_6260 = relay.TupleGetItem(func_5754_call(), 0)
call_6261 = relay.TupleGetItem(func_5755_call(), 0)
func_2181_call = mod.get_global_var('func_2181')
func_2184_call = mutated_mod.get_global_var('func_2184')
call_6292 = relay.TupleGetItem(func_2181_call(relay.reshape(call_6260.astype('float64'), [2, 10, 16])), 2)
call_6293 = relay.TupleGetItem(func_2184_call(relay.reshape(call_6260.astype('float64'), [2, 10, 16])), 2)
output = relay.Tuple([bop_6187,call_6202,call_6233,call_6260,call_6292,])
output2 = relay.Tuple([bop_6190,call_6203,call_6234,call_6261,call_6293,])
func_6298 = relay.Function([], output)
mod['func_6298'] = func_6298
mod = relay.transform.InferType()(mod)
mutated_mod['func_6298'] = func_6298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6298_call = mutated_mod.get_global_var('func_6298')
call_6299 = func_6298_call()
output = call_6299
func_6300 = relay.Function([], output)
mutated_mod['func_6300'] = func_6300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_6310 = func_3819_call()
call_6311 = func_3819_call()
output = call_6310
output2 = call_6311
func_6315 = relay.Function([], output)
mod['func_6315'] = func_6315
mod = relay.transform.InferType()(mod)
mutated_mod['func_6315'] = func_6315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6315_call = mutated_mod.get_global_var('func_6315')
call_6316 = func_6315_call()
output = call_6316
func_6317 = relay.Function([], output)
mutated_mod['func_6317'] = func_6317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5151_call = mod.get_global_var('func_5151')
func_5152_call = mutated_mod.get_global_var('func_5152')
call_6318 = relay.TupleGetItem(func_5151_call(), 0)
call_6319 = relay.TupleGetItem(func_5152_call(), 0)
func_3211_call = mod.get_global_var('func_3211')
func_3213_call = mutated_mod.get_global_var('func_3213')
var_6326 = relay.var("var_6326", dtype = "bool", shape = (1, 576))#candidate|6326|(1, 576)|var|bool
call_6325 = relay.TupleGetItem(func_3211_call(relay.reshape(var_6326.astype('bool'), [576,])), 0)
call_6327 = relay.TupleGetItem(func_3213_call(relay.reshape(var_6326.astype('bool'), [576,])), 0)
func_6077_call = mod.get_global_var('func_6077')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_6354 = relay.TupleGetItem(func_6077_call(), 2)
call_6355 = relay.TupleGetItem(func_6078_call(), 2)
func_2563_call = mod.get_global_var('func_2563')
func_2565_call = mutated_mod.get_global_var('func_2565')
call_6367 = relay.TupleGetItem(func_2563_call(), 0)
call_6368 = relay.TupleGetItem(func_2565_call(), 0)
var_6372 = relay.var("var_6372", dtype = "bool", shape = (15, 576))#candidate|6372|(15, 576)|var|bool
bop_6373 = relay.left_shift(var_6326.astype('uint8'), var_6372.astype('uint8')) # shape=(15, 576)
output = relay.Tuple([call_6318,call_6325,call_6354,call_6367,bop_6373,])
output2 = relay.Tuple([call_6319,call_6327,call_6355,call_6368,bop_6373,])
func_6381 = relay.Function([var_6326,var_6372,], output)
mod['func_6381'] = func_6381
mod = relay.transform.InferType()(mod)
var_6382 = relay.var("var_6382", dtype = "bool", shape = (1, 576))#candidate|6382|(1, 576)|var|bool
var_6383 = relay.var("var_6383", dtype = "bool", shape = (15, 576))#candidate|6383|(15, 576)|var|bool
output = func_6381(var_6382,var_6383,)
func_6384 = relay.Function([var_6382,var_6383,], output)
mutated_mod['func_6384'] = func_6384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6077_call = mod.get_global_var('func_6077')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_6422 = relay.TupleGetItem(func_6077_call(), 2)
call_6423 = relay.TupleGetItem(func_6078_call(), 2)
func_5180_call = mod.get_global_var('func_5180')
func_5182_call = mutated_mod.get_global_var('func_5182')
call_6428 = relay.TupleGetItem(func_5180_call(), 2)
call_6429 = relay.TupleGetItem(func_5182_call(), 2)
output = relay.Tuple([call_6422,call_6428,])
output2 = relay.Tuple([call_6423,call_6429,])
func_6432 = relay.Function([], output)
mod['func_6432'] = func_6432
mod = relay.transform.InferType()(mod)
mutated_mod['func_6432'] = func_6432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6432_call = mutated_mod.get_global_var('func_6432')
call_6433 = func_6432_call()
output = call_6433
func_6434 = relay.Function([], output)
mutated_mod['func_6434'] = func_6434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2970_call = mod.get_global_var('func_2970')
func_2971_call = mutated_mod.get_global_var('func_2971')
call_6468 = relay.TupleGetItem(func_2970_call(), 1)
call_6469 = relay.TupleGetItem(func_2971_call(), 1)
output = relay.Tuple([call_6468,])
output2 = relay.Tuple([call_6469,])
func_6473 = relay.Function([], output)
mod['func_6473'] = func_6473
mod = relay.transform.InferType()(mod)
mutated_mod['func_6473'] = func_6473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6473_call = mutated_mod.get_global_var('func_6473')
call_6474 = func_6473_call()
output = call_6474
func_6475 = relay.Function([], output)
mutated_mod['func_6475'] = func_6475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6315_call = mod.get_global_var('func_6315')
func_6317_call = mutated_mod.get_global_var('func_6317')
call_6500 = func_6315_call()
call_6501 = func_6315_call()
func_3778_call = mod.get_global_var('func_3778')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_6505 = relay.TupleGetItem(func_3778_call(), 2)
call_6506 = relay.TupleGetItem(func_3780_call(), 2)
output = relay.Tuple([call_6500,call_6505,])
output2 = relay.Tuple([call_6501,call_6506,])
func_6507 = relay.Function([], output)
mod['func_6507'] = func_6507
mod = relay.transform.InferType()(mod)
output = func_6507()
func_6508 = relay.Function([], output)
mutated_mod['func_6508'] = func_6508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3640_call = mod.get_global_var('func_3640')
func_3642_call = mutated_mod.get_global_var('func_3642')
call_6556 = relay.TupleGetItem(func_3640_call(), 1)
call_6557 = relay.TupleGetItem(func_3642_call(), 1)
func_3211_call = mod.get_global_var('func_3211')
func_3213_call = mutated_mod.get_global_var('func_3213')
const_6574 = relay.const([True,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False], dtype = "bool")#candidate|6574|(576,)|const|bool
call_6573 = relay.TupleGetItem(func_3211_call(relay.reshape(const_6574.astype('bool'), [576,])), 1)
call_6575 = relay.TupleGetItem(func_3213_call(relay.reshape(const_6574.astype('bool'), [576,])), 1)
func_2074_call = mod.get_global_var('func_2074')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_6578 = relay.TupleGetItem(func_2074_call(), 0)
call_6579 = relay.TupleGetItem(func_2075_call(), 0)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_6597 = relay.TupleGetItem(func_3254_call(), 0)
call_6598 = relay.TupleGetItem(func_3256_call(), 0)
var_6602 = relay.var("var_6602", dtype = "bool", shape = (576,))#candidate|6602|(576,)|var|bool
bop_6603 = relay.divide(call_6573.astype('float64'), relay.reshape(var_6602.astype('float64'), relay.shape_of(call_6573))) # shape=(576,)
bop_6606 = relay.divide(call_6575.astype('float64'), relay.reshape(var_6602.astype('float64'), relay.shape_of(call_6575))) # shape=(576,)
func_4246_call = mod.get_global_var('func_4246')
func_4248_call = mutated_mod.get_global_var('func_4248')
const_6616 = relay.const([-3.252110,-8.528552,-8.503798,7.233036,2.186867,-8.288014,5.040155,-9.916914,5.186046,7.986832,-5.241076,-8.756258,-3.598543,0.672242,8.294787,5.671209,0.067078,5.358283,-2.127673,-3.347141,1.656596,-5.435594,0.084295,-8.926011,-9.862093,7.823262,6.172673,1.366402,-3.595473,0.338533,0.754780,2.015875,1.578279,-0.679060,2.066496,7.523800,-5.961771,8.239210,-2.401306,-8.147369,9.226371,0.597679,-6.306259,-1.733892,-1.852521,-6.854262,-9.241215,-4.493457,-3.509155,-1.911225,2.005543,2.813152,7.935356,-8.997542,-0.381079,-9.509853,-5.711480,9.536766,-4.439394,7.588701,1.795233,-0.667986,8.079361,8.298760,-4.793111,1.581532,4.879863,6.531526,4.473180,-8.220196,-9.367038,9.630096,5.477891,6.375449,-3.538588,-2.034053,-5.809511,1.592881,5.351454,-3.622812,-3.237283,-3.762804,-0.645087,-1.542711,7.012110,6.764659,5.752050,-7.080201,8.386894,6.746292,-6.249067,-1.581284,-4.020063,-6.054609,-6.085749,0.848448,-4.198065,6.125479,8.317165,-1.375377,-5.779151,1.393622,-1.496163,-9.717233,9.020534,5.642408,1.866756,1.991459,6.546483,-1.175037,-1.967710,7.601568,9.241568,0.286517,-2.727191,1.614196,4.805562,7.903743,-3.909979,-3.458354,5.615347,6.250641,4.500403,-9.045688,-2.270297,-5.172243,2.043917,0.938063,-7.596503,9.857786,-6.914539,-6.134916,2.744463,8.321656,4.479760,-2.691422,5.283251,-1.263853,-0.247742,8.075917,6.361966,4.838680,9.711751,0.083418,2.054351,3.357520,9.244034,3.361103,8.840482,-2.137115,-3.778150,1.442966,-8.561681,-2.719814,-4.187444,2.894440,-6.129708,-9.628226,6.035624,6.301013,7.050426,-6.236386,-1.793099,1.536723,-7.999733,3.875381,-2.948564,-5.352147,-4.279291,0.397787,-2.137344,-0.722847,7.531809,3.253719,-7.478043,3.006520,0.846881,-0.532064,-6.759369,0.586646,4.516542,0.815414,6.979203,-9.211274,3.480284,-1.436977,-8.165150,-9.394485,-6.042907,-7.725650,-2.013132,-5.292524,8.707734,-5.771477,-7.292899,-9.361669,-6.617853,-1.397151,6.429262,5.079734,-9.277171,-2.815943,-6.577270,5.613291,-3.533120,9.174471,2.762767,-0.513141,-6.777234,-1.304427,-8.629367,-0.522612,0.450126,-7.404432,3.790212,9.004461,-6.386480,-1.054881,-4.846098,7.632745,3.103664,6.449021,-3.381650,3.439836,-1.561134,8.560824,-1.036471,7.437202,-7.548378,-1.610767,7.180804,-5.528763,8.733062,-7.720704,-0.654808,6.045806,-4.369669,-0.556348,-1.212287,6.283727,-6.357764,-0.375950,-6.822762,-7.513864,9.552340,-7.908378,-3.256455,-5.024825,0.701670,9.303411,-3.159393,3.384768,2.377606,0.073792,6.784558,0.282741,-1.166211,-3.509385,9.282253,4.743788,1.063332,-7.958282,-7.701285,-2.325624], dtype = "float32")#candidate|6616|(264,)|const|float32
call_6615 = relay.TupleGetItem(func_4246_call(relay.reshape(const_6616.astype('float32'), [4, 11, 6])), 0)
call_6617 = relay.TupleGetItem(func_4248_call(relay.reshape(const_6616.astype('float32'), [4, 11, 6])), 0)
output = relay.Tuple([call_6556,const_6574,call_6578,call_6597,bop_6603,call_6615,const_6616,])
output2 = relay.Tuple([call_6557,const_6574,call_6579,call_6598,bop_6606,call_6617,const_6616,])
func_6623 = relay.Function([var_6602,], output)
mod['func_6623'] = func_6623
mod = relay.transform.InferType()(mod)
var_6624 = relay.var("var_6624", dtype = "bool", shape = (576,))#candidate|6624|(576,)|var|bool
output = func_6623(var_6624)
func_6625 = relay.Function([var_6624], output)
mutated_mod['func_6625'] = func_6625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mod.get_global_var('func_5895')
func_5897_call = mutated_mod.get_global_var('func_5897')
call_6691 = relay.TupleGetItem(func_5895_call(), 0)
call_6692 = relay.TupleGetItem(func_5897_call(), 0)
output = call_6691
output2 = call_6692
func_6697 = relay.Function([], output)
mod['func_6697'] = func_6697
mod = relay.transform.InferType()(mod)
output = func_6697()
func_6698 = relay.Function([], output)
mutated_mod['func_6698'] = func_6698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4797_call = mod.get_global_var('func_4797')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_6706 = relay.TupleGetItem(func_4797_call(), 0)
call_6707 = relay.TupleGetItem(func_4798_call(), 0)
output = call_6706
output2 = call_6707
func_6712 = relay.Function([], output)
mod['func_6712'] = func_6712
mod = relay.transform.InferType()(mod)
mutated_mod['func_6712'] = func_6712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6712_call = mutated_mod.get_global_var('func_6712')
call_6713 = func_6712_call()
output = call_6713
func_6714 = relay.Function([], output)
mutated_mod['func_6714'] = func_6714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5840_call = mod.get_global_var('func_5840')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_6725 = relay.TupleGetItem(func_5840_call(), 0)
call_6726 = relay.TupleGetItem(func_5841_call(), 0)
output = call_6725
output2 = call_6726
func_6738 = relay.Function([], output)
mod['func_6738'] = func_6738
mod = relay.transform.InferType()(mod)
mutated_mod['func_6738'] = func_6738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6738_call = mutated_mod.get_global_var('func_6738')
call_6739 = func_6738_call()
output = call_6739
func_6740 = relay.Function([], output)
mutated_mod['func_6740'] = func_6740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6507_call = mod.get_global_var('func_6507')
func_6508_call = mutated_mod.get_global_var('func_6508')
call_6749 = relay.TupleGetItem(func_6507_call(), 1)
call_6750 = relay.TupleGetItem(func_6508_call(), 1)
output = call_6749
output2 = call_6750
func_6759 = relay.Function([], output)
mod['func_6759'] = func_6759
mod = relay.transform.InferType()(mod)
output = func_6759()
func_6760 = relay.Function([], output)
mutated_mod['func_6760'] = func_6760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6808 = relay.var("var_6808", dtype = "uint32", shape = (5, 15, 5))#candidate|6808|(5, 15, 5)|var|uint32
var_6809 = relay.var("var_6809", dtype = "uint32", shape = (5, 15, 5))#candidate|6809|(5, 15, 5)|var|uint32
bop_6810 = relay.less_equal(var_6808.astype('bool'), relay.reshape(var_6809.astype('bool'), relay.shape_of(var_6808))) # shape=(5, 15, 5)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
const_6817 = relay.const(4.620472, dtype = "float64")#candidate|6817|()|const|float64
var_6818 = relay.var("var_6818", dtype = "float32", shape = (1690,))#candidate|6818|(1690,)|var|float32
call_6816 = relay.TupleGetItem(func_131_call(relay.reshape(const_6817.astype('float64'), []), relay.reshape(var_6818.astype('float32'), [1690,]), ), 0)
call_6819 = relay.TupleGetItem(func_135_call(relay.reshape(const_6817.astype('float64'), []), relay.reshape(var_6818.astype('float32'), [1690,]), ), 0)
bop_6824 = relay.equal(var_6809.astype('bool'), relay.reshape(bop_6810.astype('bool'), relay.shape_of(var_6809))) # shape=(5, 15, 5)
output = relay.Tuple([call_6816,const_6817,var_6818,bop_6824,])
output2 = relay.Tuple([call_6819,const_6817,var_6818,bop_6824,])
func_6835 = relay.Function([var_6808,var_6809,var_6818,], output)
mod['func_6835'] = func_6835
mod = relay.transform.InferType()(mod)
var_6836 = relay.var("var_6836", dtype = "uint32", shape = (5, 15, 5))#candidate|6836|(5, 15, 5)|var|uint32
var_6837 = relay.var("var_6837", dtype = "uint32", shape = (5, 15, 5))#candidate|6837|(5, 15, 5)|var|uint32
var_6838 = relay.var("var_6838", dtype = "float32", shape = (1690,))#candidate|6838|(1690,)|var|float32
output = func_6835(var_6836,var_6837,var_6838,)
func_6839 = relay.Function([var_6836,var_6837,var_6838,], output)
mutated_mod['func_6839'] = func_6839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6507_call = mod.get_global_var('func_6507')
func_6508_call = mutated_mod.get_global_var('func_6508')
call_6852 = relay.TupleGetItem(func_6507_call(), 0)
call_6853 = relay.TupleGetItem(func_6508_call(), 0)
output = relay.Tuple([call_6852,])
output2 = relay.Tuple([call_6853,])
func_6856 = relay.Function([], output)
mod['func_6856'] = func_6856
mod = relay.transform.InferType()(mod)
output = func_6856()
func_6857 = relay.Function([], output)
mutated_mod['func_6857'] = func_6857
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6871 = relay.var("var_6871", dtype = "float32", shape = (1, 6, 8))#candidate|6871|(1, 6, 8)|var|float32
uop_6872 = relay.atan(var_6871.astype('float32')) # shape=(1, 6, 8)
func_2970_call = mod.get_global_var('func_2970')
func_2971_call = mutated_mod.get_global_var('func_2971')
call_6890 = relay.TupleGetItem(func_2970_call(), 1)
call_6891 = relay.TupleGetItem(func_2971_call(), 1)
output = relay.Tuple([uop_6872,call_6890,])
output2 = relay.Tuple([uop_6872,call_6891,])
func_6899 = relay.Function([var_6871,], output)
mod['func_6899'] = func_6899
mod = relay.transform.InferType()(mod)
mutated_mod['func_6899'] = func_6899
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6900 = relay.var("var_6900", dtype = "float32", shape = (1, 6, 8))#candidate|6900|(1, 6, 8)|var|float32
func_6899_call = mutated_mod.get_global_var('func_6899')
call_6901 = func_6899_call(var_6900)
output = call_6901
func_6902 = relay.Function([var_6900], output)
mutated_mod['func_6902'] = func_6902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6152_call = mod.get_global_var('func_6152')
func_6153_call = mutated_mod.get_global_var('func_6153')
call_6907 = relay.TupleGetItem(func_6152_call(), 2)
call_6908 = relay.TupleGetItem(func_6153_call(), 2)
output = call_6907
output2 = call_6908
func_6911 = relay.Function([], output)
mod['func_6911'] = func_6911
mod = relay.transform.InferType()(mod)
mutated_mod['func_6911'] = func_6911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6911_call = mutated_mod.get_global_var('func_6911')
call_6912 = func_6911_call()
output = call_6912
func_6913 = relay.Function([], output)
mutated_mod['func_6913'] = func_6913
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6948 = relay.var("var_6948", dtype = "uint16", shape = (15, 10, 12))#candidate|6948|(15, 10, 12)|var|uint16
var_6949 = relay.var("var_6949", dtype = "uint16", shape = (15, 10, 12))#candidate|6949|(15, 10, 12)|var|uint16
bop_6950 = relay.less(var_6948.astype('bool'), relay.reshape(var_6949.astype('bool'), relay.shape_of(var_6948))) # shape=(15, 10, 12)
func_2020_call = mod.get_global_var('func_2020')
func_2022_call = mutated_mod.get_global_var('func_2022')
const_6957 = relay.const([True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True], dtype = "bool")#candidate|6957|(576,)|const|bool
call_6956 = relay.TupleGetItem(func_2020_call(relay.reshape(const_6957.astype('bool'), [576,])), 0)
call_6958 = relay.TupleGetItem(func_2022_call(relay.reshape(const_6957.astype('bool'), [576,])), 0)
output = relay.Tuple([bop_6950,call_6956,const_6957,])
output2 = relay.Tuple([bop_6950,call_6958,const_6957,])
func_6961 = relay.Function([var_6948,var_6949,], output)
mod['func_6961'] = func_6961
mod = relay.transform.InferType()(mod)
var_6962 = relay.var("var_6962", dtype = "uint16", shape = (15, 10, 12))#candidate|6962|(15, 10, 12)|var|uint16
var_6963 = relay.var("var_6963", dtype = "uint16", shape = (15, 10, 12))#candidate|6963|(15, 10, 12)|var|uint16
output = func_6961(var_6962,var_6963,)
func_6964 = relay.Function([var_6962,var_6963,], output)
mutated_mod['func_6964'] = func_6964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_7009 = relay.TupleGetItem(func_4514_call(), 0)
call_7010 = relay.TupleGetItem(func_4516_call(), 0)
output = relay.Tuple([call_7009,])
output2 = relay.Tuple([call_7010,])
func_7039 = relay.Function([], output)
mod['func_7039'] = func_7039
mod = relay.transform.InferType()(mod)
output = func_7039()
func_7040 = relay.Function([], output)
mutated_mod['func_7040'] = func_7040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5840_call = mod.get_global_var('func_5840')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_7041 = relay.TupleGetItem(func_5840_call(), 0)
call_7042 = relay.TupleGetItem(func_5841_call(), 0)
func_7039_call = mod.get_global_var('func_7039')
func_7040_call = mutated_mod.get_global_var('func_7040')
call_7057 = relay.TupleGetItem(func_7039_call(), 0)
call_7058 = relay.TupleGetItem(func_7040_call(), 0)
output = relay.Tuple([call_7041,call_7057,])
output2 = relay.Tuple([call_7042,call_7058,])
func_7089 = relay.Function([], output)
mod['func_7089'] = func_7089
mod = relay.transform.InferType()(mod)
output = func_7089()
func_7090 = relay.Function([], output)
mutated_mod['func_7090'] = func_7090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_7099 = relay.TupleGetItem(func_3046_call(), 0)
call_7100 = relay.TupleGetItem(func_3048_call(), 0)
func_5767_call = mod.get_global_var('func_5767')
func_5768_call = mutated_mod.get_global_var('func_5768')
call_7106 = func_5767_call()
call_7107 = func_5767_call()
output = relay.Tuple([call_7099,call_7106,])
output2 = relay.Tuple([call_7100,call_7107,])
func_7108 = relay.Function([], output)
mod['func_7108'] = func_7108
mod = relay.transform.InferType()(mod)
mutated_mod['func_7108'] = func_7108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7108_call = mutated_mod.get_global_var('func_7108')
call_7109 = func_7108_call()
output = call_7109
func_7110 = relay.Function([], output)
mutated_mod['func_7110'] = func_7110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6759_call = mod.get_global_var('func_6759')
func_6760_call = mutated_mod.get_global_var('func_6760')
call_7129 = func_6759_call()
call_7130 = func_6759_call()
output = call_7129
output2 = call_7130
func_7134 = relay.Function([], output)
mod['func_7134'] = func_7134
mod = relay.transform.InferType()(mod)
output = func_7134()
func_7135 = relay.Function([], output)
mutated_mod['func_7135'] = func_7135
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7164 = relay.const([[[5,4,-8,9,7,9,-6,4,4,10,-3,6,-2,-9],[-9,10,7,-1,7,10,-9,5,-2,3,-6,3,-10,9],[2,-2,-9,4,-6,-2,7,6,-1,-1,1,8,-7,-7],[1,-10,2,-3,-4,-8,2,-3,1,6,2,6,3,1],[6,8,3,-2,2,7,-10,8,4,4,-5,-9,10,-2],[-1,3,-2,7,-1,-2,2,-10,-4,-6,-2,-8,-3,-3],[2,5,8,-1,1,8,6,-4,9,1,-2,6,9,10],[10,-6,9,-8,-1,9,-8,3,-7,10,-9,-1,-10,-5],[-8,-3,-6,-3,-2,2,-1,-7,-8,-2,-7,10,5,-7],[8,-8,-6,-7,1,7,-2,-9,2,1,-8,6,5,-1],[9,5,-9,4,-5,-8,-2,10,-6,4,-6,-1,-7,-10],[-4,1,7,1,-1,1,-5,-2,4,10,2,-1,10,-5],[-8,7,5,5,8,-8,-10,-6,-8,3,-10,-3,8,5],[3,-7,6,-4,4,3,-5,2,1,-2,6,-10,-10,-1],[6,-8,-7,-1,9,-3,7,6,8,9,7,8,-1,-10]],[[-3,1,10,-10,4,-1,9,9,-10,9,-4,7,4,-5],[-8,-7,-7,-2,-8,5,6,-7,9,-2,-1,-9,3,-6],[-5,-1,-5,4,7,-8,-10,6,-8,2,9,8,-7,4],[-3,9,9,-1,-10,-6,-2,-1,9,8,-10,-5,-6,-10],[-10,-5,3,2,-3,8,-9,10,1,4,7,-7,4,-8],[7,-5,2,-1,-3,-1,-8,-2,3,8,1,4,-8,7],[-7,4,4,-2,-1,-3,5,-3,-3,2,4,10,4,5],[6,-5,10,-6,1,3,10,8,-2,-10,5,10,2,7],[3,9,6,2,-1,2,-6,-4,5,-4,3,1,-6,9],[3,3,10,7,3,-5,10,8,4,-4,6,-7,2,8],[1,3,5,-9,-9,2,8,8,-5,-5,10,10,-7,-6],[-3,4,-2,-9,6,-2,6,7,-1,3,-3,7,-8,-3],[1,4,4,9,9,-4,8,8,-2,-8,-1,-3,9,-2],[-4,-2,4,1,5,5,10,9,-7,-1,-1,6,-10,-8],[6,8,5,-6,-7,5,9,-8,-9,-8,-3,7,-8,7]],[[1,-8,5,8,-5,7,3,6,3,-4,10,-1,9,-8],[-3,4,10,1,-8,-5,5,-7,-7,-2,-8,5,8,-2],[5,3,-2,-10,-1,-10,-9,-5,9,5,-6,8,-5,3],[-6,10,2,-9,-2,-9,-9,-3,-3,5,2,-10,8,4],[9,-7,-2,-8,10,-9,6,7,-6,-4,-1,-3,-10,1],[10,-1,3,-8,7,-9,3,9,-7,-5,-9,4,-9,-2],[9,-6,1,10,7,10,3,-1,9,-6,-8,-1,-1,4],[-1,2,2,-9,-7,-8,6,-8,-9,-5,-1,-7,3,6],[5,7,-8,8,-7,4,7,-8,-2,-1,-7,1,9,-9],[-8,-10,6,-10,4,-8,-4,-5,-6,3,-1,-1,3,8],[-10,8,-3,2,4,6,2,1,8,-9,8,2,-8,-2],[3,-7,-9,2,3,-1,-7,-7,1,-7,3,-3,7,4],[10,-8,-6,-7,-10,-4,2,2,-4,-10,-8,-4,-4,5],[4,-7,-5,-7,-10,5,3,2,9,-9,-4,8,8,4],[10,-3,9,9,7,-7,2,8,5,3,6,5,-10,2]],[[4,2,-5,10,-9,8,-7,-4,8,4,-3,-7,10,-1],[-4,10,8,4,9,7,-3,3,-1,10,-10,-3,3,4],[-2,4,7,-6,6,-10,3,2,-2,7,1,-3,4,-7],[-5,-8,7,5,-6,1,-8,-8,6,-9,4,-4,-5,-7],[4,-6,5,8,-8,6,-1,-7,-7,1,4,4,10,-2],[-6,4,4,-8,5,-1,-8,-6,-5,1,-1,-7,-4,4],[10,9,-6,-5,4,-9,1,10,6,-10,3,3,4,9],[-3,-4,-1,-9,9,-7,-7,-9,-6,-8,9,5,9,-5],[10,-3,-9,5,1,6,8,-2,-2,3,-4,-2,1,4],[-5,-3,5,7,-4,-5,-4,6,6,9,10,6,7,6],[5,-7,9,5,-7,-9,3,-7,-4,-3,4,-8,5,10],[-4,-7,-6,-9,-4,2,-7,2,4,-8,-4,-1,-2,5],[-5,-7,-1,7,-9,-4,-1,2,-7,7,-6,2,-8,10],[-1,7,-10,-6,9,8,-8,-10,-1,6,-9,-3,-9,-6],[-7,-7,1,-6,-8,-2,6,4,-6,-2,1,7,10,-6]],[[5,6,-10,2,-6,-2,3,-1,6,2,2,-9,1,-4],[7,9,-1,4,7,3,-4,-6,-9,-5,-4,4,-2,-10],[10,5,-1,-7,-1,-6,-9,-2,1,2,-6,-6,-6,6],[-5,1,10,3,2,6,3,10,10,-4,1,-3,-3,-5],[9,-6,-10,10,-3,-3,-2,-6,10,6,-9,1,6,-7],[2,9,5,-6,2,-7,8,10,9,-5,-6,-9,3,5],[3,-2,3,-8,5,-7,9,-2,4,-7,9,-9,4,10],[-9,1,-6,-9,-2,-1,-3,4,10,9,9,6,9,-5],[-5,-4,-9,-6,-6,5,-2,-7,-5,-6,-8,-1,-4,-6],[-2,8,5,10,7,-10,1,-2,-4,-9,-1,-3,4,5],[9,-1,-4,8,2,-3,4,-3,9,-1,6,1,6,4],[8,-8,-5,-7,1,-8,3,-4,-3,5,4,-4,-5,6],[8,3,-3,2,1,7,-7,5,-4,-9,7,2,8,-2],[2,-6,1,-6,-2,2,-10,-7,4,6,-4,9,-7,-3],[-7,-9,4,-9,9,-9,4,8,10,10,1,4,-1,7]],[[1,4,-6,7,10,-6,1,-2,7,-10,5,-1,-8,-10],[-7,4,8,6,-2,-3,-8,1,-4,-6,-3,10,-8,6],[7,4,4,9,-7,3,7,10,-7,-5,-8,-6,9,10],[-8,-5,4,-8,-7,-8,4,-2,1,6,-6,3,-4,-4],[-4,2,3,-6,5,5,10,6,7,5,-1,8,-4,1],[9,-10,-2,-2,8,-1,-1,-4,-10,-5,8,8,2,7],[6,-1,5,-7,-4,1,-8,-4,1,-10,-10,-9,-6,2],[-3,-2,-6,8,-6,8,6,1,-6,-3,-7,-7,9,-9],[-4,-10,9,10,5,-9,-2,1,8,2,-1,10,-9,4],[4,-10,4,7,-2,-9,4,-9,6,-4,6,-6,-2,-2],[3,8,1,8,-2,9,4,2,-7,-4,-5,-7,6,-7],[-2,-1,6,4,1,-3,9,-6,1,2,-3,2,7,-8],[-3,-3,-3,-9,4,-6,-5,8,2,-6,-4,-2,-7,6],[2,-6,8,-9,4,1,9,-2,8,-10,-6,5,5,8],[4,5,-7,-2,-10,7,6,1,7,2,5,-8,-8,-2]],[[2,6,-1,3,-4,4,-3,8,-3,7,-2,7,-2,-10],[-10,5,10,8,-4,3,6,-10,10,-10,-6,-3,9,8],[5,-2,-10,-6,8,-4,-7,-10,6,-3,7,9,10,2],[4,-1,-7,5,-9,8,9,2,10,-10,-2,-3,4,-2],[8,6,-5,-2,-1,10,7,9,-1,-1,-3,-7,2,3],[6,2,1,-5,-6,-9,-1,7,6,-6,-7,7,-8,4],[-6,7,4,5,1,2,-4,-4,-1,-5,-9,3,7,-5],[-4,-4,7,2,3,5,-5,1,9,8,-8,-6,-5,-4],[-6,-9,9,-1,-7,6,-8,3,-9,7,-2,7,-10,-1],[-9,-7,-6,-7,10,-1,-9,-8,-9,2,-7,-7,4,3],[8,-6,8,4,-2,9,7,10,9,4,-10,10,-3,-10],[-3,-8,-6,-10,2,10,-4,-5,-1,8,-4,1,-7,3],[8,-9,-6,-3,-3,-9,-6,-8,-8,-3,9,-2,-4,-9],[4,4,-5,4,-10,-2,-2,10,9,-8,3,9,-5,-7],[4,1,-7,-9,-8,4,1,-2,8,-1,-2,-6,-2,-8]],[[-6,5,2,7,3,-4,8,-8,5,-4,-2,1,-3,10],[4,4,5,-9,7,10,1,-10,3,9,-6,2,7,-3],[-8,8,2,-1,3,-6,7,2,-4,-10,10,7,-2,5],[10,-2,10,-2,3,-9,-7,-9,-5,-4,-5,5,4,1],[-9,-5,-4,-9,6,9,5,8,-7,6,-1,-10,-5,-4],[-7,6,3,6,10,-4,-7,8,2,-5,4,-10,4,-1],[-5,9,-10,-9,-6,-10,2,-3,-8,-2,6,1,9,-2],[1,1,8,9,4,-1,-5,-7,7,-6,2,7,-3,7],[-10,-6,-4,-9,8,-10,-6,-5,4,-7,-5,-7,-1,4],[-3,-10,9,3,3,-6,8,5,9,-6,-5,3,8,-6],[4,-6,10,7,-2,-3,-10,5,-4,-3,-2,5,4,7],[8,2,3,7,4,5,4,-10,-4,6,7,3,8,9],[4,3,-1,-3,3,-10,-6,4,10,8,-10,5,4,9],[4,4,-5,-1,4,-1,-6,7,-5,-5,6,2,-6,3],[5,-1,-1,-10,-6,1,6,10,-4,-5,-9,-7,-2,8]],[[7,9,7,-2,7,-5,2,-4,9,-10,10,-3,6,1],[-10,-7,4,9,-5,10,-5,-4,10,-5,1,-1,3,-9],[3,-8,-3,-9,2,-8,1,9,-4,4,3,2,-7,5],[6,-10,6,-3,-4,7,10,-2,-5,8,-6,-3,2,-10],[-6,-8,1,-3,-7,-9,9,-8,1,-2,3,-6,-4,5],[-4,-4,4,-3,1,5,2,-10,9,-10,8,-9,-3,7],[5,3,10,10,-3,-10,-10,-4,-8,3,-2,8,-6,8],[-3,7,10,-5,-9,-6,-7,9,-1,10,-7,9,-8,9],[5,3,4,-3,-10,-7,-3,-3,9,-10,5,2,-2,3],[-9,6,-10,9,9,-2,-2,9,-10,-6,6,-1,-5,-5],[5,9,-10,7,3,8,10,10,7,-7,-6,7,-8,-5],[1,-4,-9,10,9,1,-5,-4,9,7,5,-4,-7,-5],[9,-2,1,7,-8,-9,-6,8,1,6,-6,-7,-7,2],[-4,-10,6,-3,7,-4,9,-1,8,-6,-9,-1,7,6],[1,-7,4,9,-1,-6,4,-3,-7,-10,2,-4,-10,6]],[[4,-1,-1,-3,-8,-4,5,-7,-1,-4,3,-1,-9,7],[-1,7,6,-2,6,1,-8,-3,4,1,-8,-4,-8,7],[-2,-5,9,10,-9,10,10,1,6,-10,-6,8,8,7],[6,1,8,1,-9,-1,-3,-6,-4,-10,5,-3,-1,-4],[-2,4,5,-6,-3,-8,-7,-3,-4,5,7,8,-5,2],[-3,-6,-5,3,-6,-3,-7,1,2,6,2,3,7,3],[4,8,2,-2,-2,7,5,7,2,8,2,9,-5,7],[-6,4,8,9,5,6,-8,7,4,-5,-2,8,7,9],[-2,6,7,-9,-3,4,2,7,-3,-5,-10,3,3,7],[-1,-4,3,10,-1,6,9,-3,-9,3,7,-1,8,1],[7,3,-4,-10,8,-10,9,2,7,-9,6,-2,-1,9],[9,3,8,4,7,-3,-2,-4,1,8,-1,-8,-10,1],[-5,3,2,2,3,6,-9,-5,-3,3,4,4,2,-6],[2,6,-8,3,-6,-2,10,1,6,-2,4,3,-9,-5],[8,-5,-9,-10,-1,-6,10,6,-5,-1,2,8,-1,3]],[[-9,-2,2,-9,-10,7,-6,8,3,7,-10,9,-2,-7],[-1,4,1,-6,7,5,8,1,-8,-9,-5,-9,5,-9],[8,-3,-6,-6,4,3,1,1,1,3,-10,-10,-9,2],[-10,4,-6,-4,3,-1,-6,-8,-2,6,10,-3,-2,-7],[-4,6,1,10,4,-10,-8,3,7,10,-10,-5,4,3],[10,6,1,8,3,-9,-3,-5,10,-4,-9,8,-1,-2],[-10,-10,6,-6,1,1,1,-10,-9,-5,2,7,4,-3],[-6,-9,-1,-9,-6,-8,-7,10,6,-2,4,3,-9,-9],[6,9,10,-10,-8,10,2,-10,6,8,-1,-9,10,-2],[4,3,5,2,9,-6,1,-8,5,-3,-9,5,3,-4],[5,3,7,-7,-7,8,1,10,4,-6,-7,2,-9,-7],[-8,-9,-7,2,8,8,10,-1,2,4,9,-6,6,6],[4,2,-2,-5,-3,5,-6,-9,9,-9,1,-8,1,9],[-4,5,-8,-10,-9,-9,3,8,-7,6,-8,6,6,2],[-1,-7,7,3,-10,-6,-9,3,-9,1,-7,1,-4,5]],[[-4,-9,7,10,-9,-9,-7,10,-10,-7,-4,-4,-7,-6],[-3,-3,7,1,-8,-10,-3,8,2,5,-2,10,3,9],[-2,-3,8,-3,7,-3,-5,4,9,-8,-3,-4,5,3],[9,-8,-8,5,4,-5,2,-8,8,-4,5,2,5,2],[-10,-6,8,-10,-2,6,-5,-8,6,5,-5,3,-3,9],[10,7,-8,-1,-6,5,-7,5,2,2,-9,-2,-8,-6],[1,-10,-7,-1,2,5,4,-10,-3,-5,-10,10,4,4],[8,-4,5,10,-4,9,4,6,6,-8,-2,-1,-8,10],[5,-3,-5,-2,2,2,-4,2,7,-5,-5,-1,6,9],[-4,-7,4,2,8,10,9,-7,-7,2,-8,-8,-1,-2],[-10,10,-10,3,-8,5,-10,-5,-7,1,-3,7,-1,8],[3,-1,-1,-6,-10,6,3,-2,-4,-3,3,-6,-8,-10],[7,5,8,-2,-6,1,-7,-2,6,-7,-4,5,6,-4],[2,5,3,-9,5,9,2,-7,-7,-1,-4,-5,-9,-4],[2,1,-1,5,-8,5,8,5,6,-10,9,-5,-2,-1]],[[-3,-7,-2,-8,5,-7,10,6,-7,-9,-1,5,-2,2],[3,6,8,-10,2,-3,3,-9,1,-2,-6,-1,-2,6],[-7,10,4,3,-9,-2,2,9,-3,-10,-6,5,7,-9],[-2,-5,-5,-8,-10,3,-5,4,8,5,-6,8,-9,-5],[8,-7,1,1,6,-7,10,10,2,-5,9,-4,6,6],[6,4,-7,4,1,-4,-5,-5,-2,2,-9,6,8,-3],[-3,-2,10,3,-4,-5,-4,-6,-3,-6,8,-9,-7,-6],[-9,9,-8,3,6,-7,-4,-9,-3,-7,-6,9,1,2],[7,2,5,-9,4,-2,7,3,2,-10,-7,-9,-10,-8],[10,-10,5,4,3,4,-5,-8,-6,4,2,-2,10,3],[-4,2,8,3,-2,-5,2,4,6,10,4,-1,-7,-7],[-8,7,-1,8,-1,-5,1,9,7,-1,-7,8,-6,-2],[-6,1,1,-6,9,4,-8,-4,-6,2,-8,10,-7,-1],[-9,-7,-1,-7,-8,-5,-10,6,7,-6,-5,-8,-3,-10],[-5,5,-1,-9,3,-5,10,8,8,-9,-6,-7,5,-3]]], dtype = "uint32")#candidate|7164|(13, 15, 14)|const|uint32
var_7165 = relay.var("var_7165", dtype = "uint32", shape = (13, 15, 14))#candidate|7165|(13, 15, 14)|var|uint32
bop_7166 = relay.subtract(const_7164.astype('uint32'), relay.reshape(var_7165.astype('uint32'), relay.shape_of(const_7164))) # shape=(13, 15, 14)
func_4699_call = mod.get_global_var('func_4699')
func_4704_call = mutated_mod.get_global_var('func_4704')
var_7202 = relay.var("var_7202", dtype = "uint16", shape = (294,))#candidate|7202|(294,)|var|uint16
const_7203 = relay.const([True,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,False], dtype = "bool")#candidate|7203|(576,)|const|bool
call_7201 = relay.TupleGetItem(func_4699_call(relay.reshape(var_7202.astype('uint16'), [294,]), relay.reshape(var_7202.astype('uint16'), [14, 3, 7]), relay.reshape(const_7203.astype('bool'), [576,]), ), 3)
call_7204 = relay.TupleGetItem(func_4704_call(relay.reshape(var_7202.astype('uint16'), [294,]), relay.reshape(var_7202.astype('uint16'), [14, 3, 7]), relay.reshape(const_7203.astype('bool'), [576,]), ), 3)
uop_7207 = relay.cos(const_7164.astype('float64')) # shape=(13, 15, 14)
func_3665_call = mod.get_global_var('func_3665')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_7210 = func_3665_call()
call_7211 = func_3665_call()
output = relay.Tuple([bop_7166,call_7201,var_7202,const_7203,uop_7207,call_7210,])
output2 = relay.Tuple([bop_7166,call_7204,var_7202,const_7203,uop_7207,call_7211,])
func_7217 = relay.Function([var_7165,var_7202,], output)
mod['func_7217'] = func_7217
mod = relay.transform.InferType()(mod)
mutated_mod['func_7217'] = func_7217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7217_call = mutated_mod.get_global_var('func_7217')
var_7219 = relay.var("var_7219", dtype = "uint32", shape = (13, 15, 14))#candidate|7219|(13, 15, 14)|var|uint32
var_7220 = relay.var("var_7220", dtype = "uint16", shape = (294,))#candidate|7220|(294,)|var|uint16
call_7218 = func_7217_call(var_7219,var_7220,)
output = call_7218
func_7221 = relay.Function([var_7219,var_7220,], output)
mutated_mod['func_7221'] = func_7221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5767_call = mod.get_global_var('func_5767')
func_5768_call = mutated_mod.get_global_var('func_5768')
call_7260 = func_5767_call()
call_7261 = func_5767_call()
output = relay.Tuple([call_7260,])
output2 = relay.Tuple([call_7261,])
func_7276 = relay.Function([], output)
mod['func_7276'] = func_7276
mod = relay.transform.InferType()(mod)
mutated_mod['func_7276'] = func_7276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7276_call = mutated_mod.get_global_var('func_7276')
call_7277 = func_7276_call()
output = call_7277
func_7278 = relay.Function([], output)
mutated_mod['func_7278'] = func_7278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6738_call = mod.get_global_var('func_6738')
func_6740_call = mutated_mod.get_global_var('func_6740')
call_7281 = func_6738_call()
call_7282 = func_6738_call()
func_3665_call = mod.get_global_var('func_3665')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_7289 = func_3665_call()
call_7290 = func_3665_call()
func_3145_call = mod.get_global_var('func_3145')
func_3147_call = mutated_mod.get_global_var('func_3147')
var_7300 = relay.var("var_7300", dtype = "float32", shape = (169, 10))#candidate|7300|(169, 10)|var|float32
call_7299 = relay.TupleGetItem(func_3145_call(relay.reshape(var_7300.astype('float32'), [1690,])), 1)
call_7301 = relay.TupleGetItem(func_3147_call(relay.reshape(var_7300.astype('float32'), [1690,])), 1)
bop_7305 = relay.add(call_7299.astype('int8'), relay.reshape(var_7300.astype('int8'), relay.shape_of(call_7299))) # shape=(13, 10, 13)
bop_7308 = relay.add(call_7301.astype('int8'), relay.reshape(var_7300.astype('int8'), relay.shape_of(call_7301))) # shape=(13, 10, 13)
output = relay.Tuple([call_7281,call_7289,bop_7305,])
output2 = relay.Tuple([call_7282,call_7290,bop_7308,])
func_7311 = relay.Function([var_7300,], output)
mod['func_7311'] = func_7311
mod = relay.transform.InferType()(mod)
var_7312 = relay.var("var_7312", dtype = "float32", shape = (169, 10))#candidate|7312|(169, 10)|var|float32
output = func_7311(var_7312)
func_7313 = relay.Function([var_7312], output)
mutated_mod['func_7313'] = func_7313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6298_call = mod.get_global_var('func_6298')
func_6300_call = mutated_mod.get_global_var('func_6300')
call_7328 = relay.TupleGetItem(func_6298_call(), 3)
call_7329 = relay.TupleGetItem(func_6300_call(), 3)
output = relay.Tuple([call_7328,])
output2 = relay.Tuple([call_7329,])
func_7341 = relay.Function([], output)
mod['func_7341'] = func_7341
mod = relay.transform.InferType()(mod)
mutated_mod['func_7341'] = func_7341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7341_call = mutated_mod.get_global_var('func_7341')
call_7342 = func_7341_call()
output = call_7342
func_7343 = relay.Function([], output)
mutated_mod['func_7343'] = func_7343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6152_call = mod.get_global_var('func_6152')
func_6153_call = mutated_mod.get_global_var('func_6153')
call_7352 = relay.TupleGetItem(func_6152_call(), 1)
call_7353 = relay.TupleGetItem(func_6153_call(), 1)
output = relay.Tuple([call_7352,])
output2 = relay.Tuple([call_7353,])
func_7393 = relay.Function([], output)
mod['func_7393'] = func_7393
mod = relay.transform.InferType()(mod)
output = func_7393()
func_7394 = relay.Function([], output)
mutated_mod['func_7394'] = func_7394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7134_call = mod.get_global_var('func_7134')
func_7135_call = mutated_mod.get_global_var('func_7135')
call_7410 = func_7134_call()
call_7411 = func_7134_call()
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_7414 = relay.TupleGetItem(func_1490_call(), 0)
call_7415 = relay.TupleGetItem(func_1492_call(), 0)
output = relay.Tuple([call_7410,call_7414,])
output2 = relay.Tuple([call_7411,call_7415,])
func_7422 = relay.Function([], output)
mod['func_7422'] = func_7422
mod = relay.transform.InferType()(mod)
output = func_7422()
func_7423 = relay.Function([], output)
mutated_mod['func_7423'] = func_7423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7134_call = mod.get_global_var('func_7134')
func_7135_call = mutated_mod.get_global_var('func_7135')
call_7437 = func_7134_call()
call_7438 = func_7134_call()
func_4797_call = mod.get_global_var('func_4797')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_7446 = relay.TupleGetItem(func_4797_call(), 0)
call_7447 = relay.TupleGetItem(func_4798_call(), 0)
output = relay.Tuple([call_7437,call_7446,])
output2 = relay.Tuple([call_7438,call_7447,])
func_7481 = relay.Function([], output)
mod['func_7481'] = func_7481
mod = relay.transform.InferType()(mod)
output = func_7481()
func_7482 = relay.Function([], output)
mutated_mod['func_7482'] = func_7482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3665_call = mod.get_global_var('func_3665')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_7499 = func_3665_call()
call_7500 = func_3665_call()
func_1671_call = mod.get_global_var('func_1671')
func_1674_call = mutated_mod.get_global_var('func_1674')
const_7514 = relay.const([-1.394007,6.919771,5.940774,-0.416437,6.623510,2.220954,6.268777,1.812931,-3.598563,5.696165,-6.549258,9.279797,8.991777,-3.794444,4.809558,9.109733,-0.775921,4.498365,5.383514,-6.780841,-8.309070,-5.581253,0.016645,-3.931157,7.137228,0.121488,6.381410,9.484483,-2.486646,1.297515,4.844044,1.256312,0.773188,-3.092420,-6.345918,-2.111069,-4.289769,-7.977437,-1.349550,7.215527,1.820536,-9.363215,-8.098698,0.518532,0.640215,-4.531406,1.958075,-0.916922,-9.555262,-2.954052,2.516914,8.948169,6.430135,-7.702488,-8.057318,2.274669,-4.275013,1.887194,-6.501985,8.406389,5.097098,-3.644703,4.758959,-6.610574,9.291805,-3.458384,5.824785,0.211643,-2.710603,-5.355316,1.378167,-1.802997,8.655679,-9.718140,-8.363948,-5.049823,6.054970,-9.394068,3.451961,3.500824,9.969784,-3.815347,8.093425,-2.241441,4.847052,6.017453,-0.217273,-8.488124,7.043574,1.477697,-5.073052,1.754884,2.542229,-1.493609,-8.835597,8.631967,0.158911,-2.452497,3.552492,-8.825218,-1.709998,-3.616803,9.512477,-9.450355,6.420198,-8.358399,0.734865,-9.498279,-3.508065,-3.455315,-5.608766,-8.364549,3.989902,-6.408381,3.955274,5.208203,-4.080049,4.516219,-1.638971,-0.815076,1.505644,9.795748,7.532439,4.622312,-6.061955,-2.704429,-8.907325,-5.951043,-2.528177,-0.461892,-2.988344,5.891059,6.772170,-6.788707,-7.392129,-0.645159,-8.956725,0.270713,6.517060,6.303131,-4.246725,-2.580192,-2.533080,-5.267873,2.302542,5.529395,-2.697072,1.396609,9.005028,0.878641,-4.782602,9.800156,3.870768,-7.890202,-2.349851,-1.309500,-6.963069,0.298608,1.973953,6.466450,-8.975132,-1.612446,9.986248,2.835268,-6.881347,-7.393044,-5.594559,6.556559,-8.569668,-8.402893,7.253812,1.870478,0.228879,-6.847691,-5.873970,3.157835,-9.544864,3.458473,7.502186,-1.153081,9.548147,7.160903,9.388020,9.324454,-3.830890,-8.413252,-8.912696,5.543772,-0.996443,6.105056,0.796697,8.826859,-8.402043,6.097073,1.248286,6.741776,2.047271,-2.503941,0.305050,-9.405719,2.387380,1.942111,4.638786,8.107962,8.365322,-8.226402,-0.505721,-8.461270,0.718899,-7.024714,-8.588147,9.611397,-5.331278,-6.305858,-9.133486,-7.555622,9.602551,4.156747,-7.153113,-8.179812,4.944331,3.747353,-3.099163,4.571371,1.235277,6.009253,5.347834,7.069488,-4.346282,-9.225523,6.512047,3.656835,-5.498937,6.242947,1.844576,-6.715613,-2.469902,-2.255784,-7.817020,-3.863964,-7.008108,6.263765,9.026480,1.171739,-7.962611,-3.193776,-7.450859,-5.605205,-0.978925,-8.874657,6.699540,6.722436,-4.915904,-4.255403,9.868613,-3.441108,-1.722445,6.635643,4.414580,-0.466256,-6.125591,1.192037,-7.097912,-5.967407,0.172816,-2.118390,3.794256,-1.269767,-2.181840,-5.155455,-5.308276,2.735159,-4.870509,-3.564682,6.643362,7.800979,5.273512,5.576269,-3.822190,-7.568797,-5.726248,-1.212230,-8.592084,3.561824,-6.784156,-6.839699,-5.431616,7.688963,1.997265,-2.821980,-8.254259,-9.443493,-5.011814,6.224998,8.250478,-3.473036,0.599454,-9.104341,-5.991946,-4.406118,1.545261,2.139667,-1.939838,8.314506,-0.130165,-7.837510,7.186205,-9.394050,-9.206132,1.429349,2.252315,8.059172,-7.934284,7.398300,4.084530,6.726549,-9.330700,6.317370,-0.786015,-2.032494,-9.693778,9.445793,-2.029407,-6.534682,-6.175366,-6.514377,7.632280,-2.011821,0.646730,-2.225768,4.085143,-2.382992,-5.095752,-6.296478,-9.867719,9.460675,2.243839,-2.992416,-8.965089,6.132905,-8.300016,7.842282,6.366418,-8.641812,1.119759,-5.872917,-4.374530,-6.855894,-9.280571,7.628762,-2.533640,5.363777,-4.406430,2.982388,-1.285083,3.047408,-9.748388,6.127858,-4.597334,9.752260,-7.485922,-2.743722,-8.522831,-8.031495,6.134951,1.666296,-8.117222,6.302173,-8.467257,-4.064202,7.128178,-9.187336,-5.716543,-6.488126,6.636386,-4.772678,0.352500,-5.980825,5.281015,-2.111993,8.597845,-5.879905,-6.842569,-5.770109,-3.415042,-7.368084,-2.982989,-7.304651,-6.582070,8.565475,-1.995309,2.980283,-1.801736,2.409177,-3.224489,-2.030383,7.248156,-9.777554,-0.537696,-8.212128,5.554881,7.596044,0.511529,-2.965460,-1.039056,6.978261,6.316747,-8.878482,7.720190,2.537225,8.136453,2.110268,4.476527,-1.076284,-8.648364,-0.294876,6.773587,1.819653,1.046547,-5.518823,8.724309,-5.451978,0.628440,-1.534522,-8.719998,-4.041022,6.257413,-6.496598,4.415254,-6.149750,-5.075503,1.286705,-4.281181,-8.071555,-5.658888,0.317831,6.371312,-2.066248,-0.770875,7.528725,0.361047,-1.321574,8.148606,4.837517,-0.525323,-6.491371,-7.757966,-9.471307,-7.106216,6.827539,-9.037717,-5.814155,-0.793404,-2.517730,5.899423,-9.685157,7.880204,0.124085,6.403545,-6.470046,-5.408209,-8.536020,-8.280613,-3.130585,-4.166281,-3.790568,-5.631358,-3.102253,0.182997,-9.737303,-0.560505,6.622818,5.007667,-9.390101,0.381029,-1.753343,3.816551,4.664136,-0.948549,-7.427006,8.371918,6.133928,7.226636,-6.679978,-7.709994,4.255692,7.025498,-2.201404,4.306051,-5.626252,6.916812,-4.822516,5.275486,7.436722,5.152349,-1.742199,-1.167329,3.700330,4.576116,-8.632470,-8.619991,-3.048683,6.764960,-2.153282,6.483132,9.748004,-0.868650,4.676314,9.164752,7.116179,-7.758119,1.771446,0.115929,-9.573357,1.860899,-0.058015,-2.606855,0.501180,9.019808,-2.852300,-3.315501,-2.964404,-6.100568,5.373467,-2.519580,-0.427773,-3.912832,8.262666,-2.842228,5.247083,-3.527285,0.119166,-7.962769,-1.927056,3.874719,7.926578,5.370507,-7.693052,7.927544,0.588657,-7.757977,1.016140,-3.765662,-1.519247,-5.192408,-2.086227,7.187948,-9.894276,-8.213124,9.613812,8.470679,-0.141753,-5.588316,-2.340042,-9.509415,5.866871,-7.945953,7.188950,6.662122,1.407093,4.692590,2.759400,-6.319175,6.888882,-8.330075,-2.097511,4.523367,-8.295984,9.630052,6.586214,5.243249,-4.126911,7.526552,-1.162521,0.625939,7.993899,5.980876,5.435969,-5.915920,-2.305065,4.694633,-4.735570,7.945238,8.169418,-2.573162,-0.669289,8.673256,7.625916,2.638698,-6.189517,5.627439,3.524576,-5.349036,-6.216620,7.642054,1.807967,7.409677,5.409067,1.496359,6.204698,-2.743733,1.311692,-0.553706,-3.774559,-1.499247,-3.986114,-9.032874,-3.409545,-6.070917,1.770322,5.159287,1.778579,3.848450,-0.450741,5.790607,-6.224616,5.088555,0.266635,-7.078527,9.963286,-5.006361,-9.753764,-5.012161,9.043906,-4.914459,-5.018171,-6.272287,-7.040029,2.666408,-4.262177,5.668651,-1.044283,-9.500708,-2.700410,6.687058,9.853550,-2.870730,6.725448,-8.174032,9.801783,8.721275,-5.445800,8.640240,9.264036,8.665456,5.190551,-4.873946,-9.159522,-6.838725,5.433652,-0.867122,0.095213,0.431021,3.831009,-2.704158,-8.109445,5.604338,7.498793,6.718683,4.541424,-9.941376,8.026014,-6.701862,3.832572,9.323004,-7.604759,4.547838,-3.071373,-1.498635,-5.377182,-4.665601,9.587378,3.301551,4.737826,0.253664,-4.190114,1.406232,1.782148,8.210597,-0.872852,8.447427,-3.999286,7.794192,4.016153,3.831688,-8.362917,-7.005174,6.265237,-5.832466,6.587749,1.072532,9.415764,9.489887,-9.509836,8.145024,9.966366,3.025436,2.475217,-4.654687,6.890823,-3.977529,-2.596709,7.496353,-7.280423,-8.244193,5.418773,4.247499,-8.487008,7.089089,6.590917,-4.762428,-1.573394,2.537956,-7.641295,-2.365079,4.168765,3.313112,-6.006344,7.424982,-8.360108,-0.525539,1.633243,-3.499340,-3.003220,-7.054586,-3.807391,6.512117,-9.860001,-0.176051,-6.297053,-1.678011,7.923475,8.230614,-1.593586,-0.973493,-4.611687,4.966202,3.657801,-4.321480,9.570361,1.104625,0.632020,-8.150448,0.524510,-8.049016,-0.482426,1.446937,-9.518851,7.334412,2.402880,4.251876,-2.384633,5.953376,-3.079854,4.834189,-0.234565,3.296147,5.094955,-8.130668,-0.651144,5.070429,8.846563,-2.719579,1.905329,4.066415,5.497914,9.976537,0.462522,0.625118,-0.475387,7.128089,-8.623684,-6.024961,2.287874,-0.132186,1.794562,-1.368623,0.778727,-9.350594,-4.603096,7.152305,-3.095153,1.946717,-3.967972,4.360218,4.064101,5.053384,5.737049,-9.576662,-5.770251,-5.418910,-0.910058,6.275235,3.538470,-7.400521,9.206790,0.961469,-6.688977,9.293247,-5.368136,5.363895,0.183537,7.652663,-8.754222,2.093018,-5.026737,-9.476723,-1.630679,-9.169881,6.984792,1.502315,2.433909,-5.821117,3.006663,-6.469593,-6.329863,-2.483834,-3.613234,-1.418260,2.890787,-8.779522,3.369863,-5.945141,-1.461149,7.513850,5.992887,-0.430364,-2.908287,7.864831,-9.672069,7.176364,5.884372,-5.844927,0.759152,1.999972,4.080020,-7.856808,-1.823124,-0.591599,-7.080818,6.732977,1.097091,-7.724544,-8.948506,4.012057,9.628991,-7.396798,-8.946166,-6.625120,9.068617,-5.351893,5.510476,-3.237036,2.368603,-3.482197,-3.021280,-4.229644,2.836075,1.764498,-2.680330,-3.475710,6.959264,-8.508421,-4.453968,8.652980,-4.975843,-2.388880,5.681273,-5.843384,6.282455,-7.729859,-2.843784,6.528025,8.258206,7.447821,-1.470381,5.021895,-2.149672,6.325170,-4.390412,8.503978,0.729170,0.999012,-1.785822,7.262701,-4.796451,3.488202,-6.851931,3.968951,-7.213079,0.396800,-8.729977,-1.548654,6.063340,8.288910,0.275158,-7.747761,-8.807138,3.827439,4.821135,3.470110,-1.832323,-7.882958,4.627134,-1.447219,5.324879,-0.196273,-9.282435,-8.361344,1.808765,1.197968,-2.851666,9.577672,2.979678,9.679465,8.935740,6.695809,-7.464796,0.928908,3.966702,7.787315,5.354978,-5.779696,-0.847280,2.076142,1.756395,-8.148051,8.504229,-2.690274,-6.224299,0.763350,-9.699674,4.865896,9.121147,6.375111,-8.820983,7.872354,-1.296490,6.136849,-3.456936,-4.087313,-3.664197,-8.012381,-9.658021,-4.673054,-2.451746,8.517707,-4.053599,0.420391,7.112364,-1.164192,1.750083,1.123338,-3.552688,0.543522,-8.524249,-4.740057,-7.235686,-2.904131,5.544338,-4.127316,-1.295482,5.686206,-1.193764,-6.427538,2.391578,-3.900650,-4.677277,-8.451444,-6.114330,-5.665581,-4.641039,9.877382,6.084568,3.035795,3.457537,-0.698486,8.676938,-8.285308,7.941753], dtype = "float64")#candidate|7514|(980,)|const|float64
call_7513 = relay.TupleGetItem(func_1671_call(relay.reshape(const_7514.astype('float64'), [10, 7, 14])), 5)
call_7515 = relay.TupleGetItem(func_1674_call(relay.reshape(const_7514.astype('float64'), [10, 7, 14])), 5)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_7524 = func_3819_call()
call_7525 = func_3819_call()
output = relay.Tuple([call_7499,call_7513,const_7514,call_7524,])
output2 = relay.Tuple([call_7500,call_7515,const_7514,call_7525,])
func_7531 = relay.Function([], output)
mod['func_7531'] = func_7531
mod = relay.transform.InferType()(mod)
mutated_mod['func_7531'] = func_7531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7531_call = mutated_mod.get_global_var('func_7531')
call_7532 = func_7531_call()
output = call_7532
func_7533 = relay.Function([], output)
mutated_mod['func_7533'] = func_7533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_7545 = relay.TupleGetItem(func_2534_call(), 1)
call_7546 = relay.TupleGetItem(func_2536_call(), 1)
output = relay.Tuple([call_7545,])
output2 = relay.Tuple([call_7546,])
func_7554 = relay.Function([], output)
mod['func_7554'] = func_7554
mod = relay.transform.InferType()(mod)
mutated_mod['func_7554'] = func_7554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7554_call = mutated_mod.get_global_var('func_7554')
call_7555 = func_7554_call()
output = call_7555
func_7556 = relay.Function([], output)
mutated_mod['func_7556'] = func_7556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7134_call = mod.get_global_var('func_7134')
func_7135_call = mutated_mod.get_global_var('func_7135')
call_7571 = func_7134_call()
call_7572 = func_7134_call()
func_6077_call = mod.get_global_var('func_6077')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_7590 = relay.TupleGetItem(func_6077_call(), 0)
call_7591 = relay.TupleGetItem(func_6078_call(), 0)
func_131_call = mod.get_global_var('func_131')
func_135_call = mutated_mod.get_global_var('func_135')
const_7607 = relay.const(-8.047292, dtype = "float64")#candidate|7607|()|const|float64
var_7608 = relay.var("var_7608", dtype = "float32", shape = (1690,))#candidate|7608|(1690,)|var|float32
call_7606 = relay.TupleGetItem(func_131_call(relay.reshape(const_7607.astype('float64'), []), relay.reshape(var_7608.astype('float32'), [1690,]), ), 1)
call_7609 = relay.TupleGetItem(func_135_call(relay.reshape(const_7607.astype('float64'), []), relay.reshape(var_7608.astype('float32'), [1690,]), ), 1)
func_3211_call = mod.get_global_var('func_3211')
func_3213_call = mutated_mod.get_global_var('func_3213')
const_7616 = relay.const([True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False], dtype = "bool")#candidate|7616|(576,)|const|bool
call_7615 = relay.TupleGetItem(func_3211_call(relay.reshape(const_7616.astype('bool'), [576,])), 0)
call_7617 = relay.TupleGetItem(func_3213_call(relay.reshape(const_7616.astype('bool'), [576,])), 0)
uop_7618 = relay.asinh(var_7608.astype('float32')) # shape=(1690,)
func_5978_call = mod.get_global_var('func_5978')
func_5980_call = mutated_mod.get_global_var('func_5980')
var_7627 = relay.var("var_7627", dtype = "float64", shape = (165,))#candidate|7627|(165,)|var|float64
call_7626 = relay.TupleGetItem(func_5978_call(relay.reshape(var_7627.astype('float64'), [15, 11, 1])), 0)
call_7628 = relay.TupleGetItem(func_5980_call(relay.reshape(var_7627.astype('float64'), [15, 11, 1])), 0)
func_7108_call = mod.get_global_var('func_7108')
func_7110_call = mutated_mod.get_global_var('func_7110')
call_7639 = relay.TupleGetItem(func_7108_call(), 1)
call_7640 = relay.TupleGetItem(func_7110_call(), 1)
func_2563_call = mod.get_global_var('func_2563')
func_2565_call = mutated_mod.get_global_var('func_2565')
call_7644 = relay.TupleGetItem(func_2563_call(), 0)
call_7645 = relay.TupleGetItem(func_2565_call(), 0)
const_7647 = relay.const([1.155704,4.770151,9.744075,-0.660431,-6.258670,-0.894314,9.672532,-6.775096,-3.699591,-1.301308,-7.292281,4.164303,-6.111502,-0.844801,8.994562,7.584471,-7.998853,-1.558846,-2.598702,-7.367900,4.530276,-2.849033,-0.226630,-3.659384,-7.928675,-7.976995,-8.679679,0.240015,-1.078469,0.614720,2.171577,-4.099481,-3.260735,3.216229,3.657799,7.841445,-0.115024,2.963795,-1.196229,-4.512694,-8.185833,-7.029096,-2.615411,-2.191877,3.408209,-8.062048,-9.312022,-6.944375,-9.808292,6.014947,-4.501368,-3.705551,5.752139,3.431022,8.875709,-3.907226,-3.054021,-0.501533,-0.484479,6.147675,3.633515,-4.630218,-9.565693,-6.798487,-1.681519,-4.567391,-7.926793,-9.222127,-1.309320,3.109755,1.476345,-4.668653,-2.955539,-9.509254,1.065547,6.023317,-5.366454,-0.838274,-9.988055,4.228388,1.841130,2.853813,-3.994269,2.285018,4.340247,-9.334449,-9.880769,-8.723557,8.917500,-0.294887,-0.048645,0.897844,9.897949,6.027485,-7.959416,3.879772,-6.433674,5.422058,-5.360972,-7.597630,-6.492539,-8.977737,5.381012,5.152182,8.780515,4.873373,2.465876,-5.889226,-1.038850,9.079109,-4.542137,-6.287869,7.493122,9.011643,-6.945347,-5.699619,-2.136453,-0.061507,1.011375,6.188896,7.418379,9.860769,6.849806,3.889959,1.759439,9.569721,4.271408,4.476569,0.719283,-2.475633,-8.342485,-7.990029,6.345781,-3.506995,9.760190,-3.153761,-5.639989,1.980383,6.078834,7.596463,8.933582,0.665194,5.224688,-0.636444,9.576415,-4.345812,3.027895,0.560626,0.362909,5.202779,5.703104,7.326523,1.150048,6.553810,-3.687475,-4.603746,1.414069,-8.492439,-9.229932,-0.061383,-0.511074,6.431516,4.365913,-3.405410,-5.649923,5.699940,6.851752,2.918413,-9.664814,-3.636021,5.247030,-8.892109,-6.768457,2.167029,5.728358,-5.093378,0.280182,8.601839,-0.621090,2.972501,-1.724590,-0.468385,-0.620300,-5.136771,3.653520,7.413255,9.525034,0.351393,-1.967964,-1.611394,-4.513580,6.359375,-8.006632,3.460937,9.331512,0.564977,5.988362,7.504583,2.773380,-9.952501,-0.304414,-5.320323,-0.265386,0.807909,-3.903879,-6.977339,1.868901,-0.210700,0.310171,-3.163736,0.674061,-3.497340,-2.857702,-6.469340,5.746663,-2.985716,-2.118759,-9.876229,-6.154038,9.687319,3.857788,-7.643498,-9.275378,9.668126,-4.461866,-9.605543,3.584268,-5.786521,-5.722617,-8.344931,-3.477362,-1.943768,8.695354,3.004651,-3.762847,-0.683312,-1.182604,-0.575502,-1.650051,-9.845411,-0.512932,-8.318250,2.975858,7.509162,4.104062,-4.280361,-0.242113,-4.309693,1.331294,1.851543,-7.905824,6.345900,-3.689727,1.529906,5.231582,6.289830,-5.679077,-7.798779,9.292621,-6.768275,9.147775,-8.238099,0.113911,5.767341,-1.789869,-1.239041,-4.754123,1.799359,-9.423192,8.015084,8.798920,6.375363,-0.991994,6.588691,0.445890,-2.401278,-7.435684,-2.148675,6.350255,-7.919835,-9.799762,7.706350,7.600827,-1.691363,1.161736,5.007810,-3.420768,2.338193,-8.399843,-2.847428,-5.493892,-1.207444,8.901440,-3.300216,-3.621987,-6.195412,7.401511,-3.211744,6.769114,-1.330752,-7.161044,9.801753,-2.408226,-2.937295,3.921463,-9.975761,3.776060,8.008207,7.894464,-8.293904,-1.724937,3.789838,-9.750375,-4.828005,-8.035435,-4.584887,2.218776,2.986852,-5.141039,-0.653458,2.265406,1.754782,-7.477989,9.091480,-1.622204,0.872798,8.027338,0.068193,-7.445113,4.293239,-3.153022,-8.846625,9.049920,-8.637379,2.533732,0.580412,9.268430,7.131271,4.130976,-5.523863,-7.629730,3.720554,-3.075978,6.979183,-6.253325,3.158741,9.069329,-3.235839,7.551174,-6.284474,-9.203643,9.717362,6.462357,3.969528,-9.612245,-4.834178,0.970140,-5.862899,-6.438480,9.654437,-8.325707,-7.850526,-9.439212,-2.387791,8.924609,-6.099104,-1.505522,3.055638,-7.206134,2.535294,-8.144264,-0.920901,8.945202,5.546631,-0.584409,-3.952439,7.035537,-9.312205,-5.564109,-9.948592,-7.013674,6.240976,-9.975895,-7.039595,9.656940,8.954182,6.269608,5.588394,-8.513763,2.599764,6.715303,3.069170,-9.846539,-9.427038,-9.635559,-3.355172,7.325594,-8.193944,-9.021220,8.907026,-9.695534,-7.325878,-5.367739,-7.893865,-5.215907,0.240772,9.306738,4.049776,6.595081,-2.586911,-7.576717,-2.103629,-8.287051,2.161969,1.261492,-0.685295,-9.270777,8.764468,9.897064,1.700247,7.727266,2.994767,-5.880121,-7.690599,1.795019,2.403043,1.152463,0.794194,-7.388059,6.152253,5.464289,8.602529,-6.890344,-5.161699,-4.589471,4.729163,4.608127,6.136347,6.541783,5.469218,-8.729875,-3.069161,-7.309319,-7.617284,6.497194,-4.842828,5.157060,-8.859441,-1.072569,6.432765,-3.633547,1.974813,-8.842251,3.660678,-6.943094,-1.347766,-7.620427,4.088047,-7.372862,9.670601,6.434111,0.741496,-3.505547,-1.197735,-7.884594,5.218032,-5.926147,-0.302414,6.875507,2.574222,-7.110958,3.329762,-3.838395,9.642569,-9.292360,-0.447208,-8.284456,-9.377747,1.974963,-8.598976,9.636782,3.824843,-9.236761,-9.982742,0.036694,9.609480,5.541408,-0.146498,1.714859,-2.190405,0.051392,9.122891,-5.221006,-6.742193,-7.127999,-5.194649,-2.622255,-3.105823,9.170118,6.656575,-3.889387,1.392297,7.621643,8.596971,1.581618,-4.733950,2.761858,5.835022,0.681244,1.049637,-1.254323,4.613261,9.339392,6.291300,-1.215638,-4.157559,7.086883,-6.987972,2.990254,-2.546383,-1.268909,9.446255,-8.117171,5.867734,-3.325392,-5.935655,-3.242142,-6.975361,9.620085,2.617999,-3.156775,-7.955652,7.198933,-8.846775,-8.900308,9.872240,9.488709,-7.521927,7.755974,5.195538,5.124380,-4.111996,-0.918478,0.930534,-0.164872,3.271004,-5.255073,1.199950,0.818096,6.644515,-0.036871,-5.897721,4.473734,4.848876,-7.564409,8.255103,-9.209954,-5.788902,-0.075520,-1.844071,-7.153086,4.968944,2.181048,-7.388336,-2.698354,9.440021,-0.424849,-6.290798,-8.296239,3.894626,-7.723534,-4.755290,-2.686575,8.633411,6.264525,-5.851237,-5.659133,-9.182143,-4.252302,-4.675437,-3.267808,0.934231,3.465968,8.584762,9.089242,-3.985953,9.420769,6.119467,7.648840,-5.161945,-8.853819,-7.403695,-6.095701,1.724978,3.680904,3.513650,8.137818,9.351719,-7.046935,-1.922773,9.378462,2.887768,-3.635785,-6.424965,-3.121563,-6.185109,2.664259,1.086417,7.951059,-2.950626,-1.050221,5.899220,-5.741368,-3.813037,0.197458,7.319336,9.512828,4.659822,5.109192,-2.019566,-6.843209,-6.198268,7.373759,7.328085,-5.903748,-2.417318,0.439605,-6.423752,-7.830066,-2.315975,-3.055667,-4.893018,-0.812911,4.022887,0.803334,2.059127,-5.525236,-8.278451,8.940639,-7.254517,0.609732,-9.034960,-7.326260,4.065369,4.517750,-7.086772,8.002612,-4.216078,-8.142117,5.298899,3.572724,9.910661,-0.080790,7.272934,8.487557,-2.123114,-7.946485,4.991319,5.776110,6.573524,-4.363286,-1.506254,-4.413938,-4.735187,-2.488005,9.592729,-9.092635,4.246299,-6.485063,6.795051,7.241156,-5.711791,-0.630937,-8.639585,-2.647606,7.229440,-3.053650,-0.927808,-3.447787,3.323422,-4.350213,-3.219982,-0.075392,-5.799151,-6.913992,-8.965730,0.532407,-2.768030,3.346734,2.962682,-1.031647,-7.757403,7.048093,-2.049374,4.549456,-5.666473,-5.721427,2.308274,9.461683,5.723160,0.022364,1.333384,-7.194044,-9.962535,-8.645106,-2.688698,-9.633832,3.497201,6.143572,7.016377,-0.129881,5.184981,-3.303899,9.372876,-6.947268,-6.426274,-6.733202,-1.590108,1.368905,-2.497420,-1.962193,-7.219317,-3.236753,-9.019399,0.548624,-0.683459,-6.221204,-8.478475,-6.417090,-4.046841,-1.990246,-3.495310,-4.134452,-6.945352,-0.844612,3.734360,8.843195,2.680835,-8.630447,7.662256,-8.828217,5.218340,3.957853,1.018236,9.382484,-6.492839,-8.056105,-5.515511,2.737347,-5.998903,-0.481217,9.579062,-9.689405,8.245514,-0.162742,-3.118750,-0.041319,2.092037,-3.328528,-2.867174,-7.902086,6.243103,2.031681,4.288198,-9.958203,-8.381252,-6.914683,-5.293200,2.401673,5.785386,0.168122,-7.481690,4.389909,0.510510,-3.391398,6.514080,6.598076,-7.115596,-5.585668,0.758629,1.900810,4.570670,5.447286,-9.654738,8.318216,5.111758,-5.602297,8.331844,0.638758,2.807114,-8.868921,9.969730,7.507266,-1.513710,7.953352,6.601728,-0.686171,-4.300883,-4.700455,-4.777402,-6.980965,-4.101539,0.999429,-3.112050,8.221572,-1.406263,-8.873491,7.623927,9.105152,-1.922027,7.417224,-4.745577,-5.399738,-0.169495,8.187353,0.872654,-8.510068,-0.765585,4.212504,-8.848437,-3.592133,-6.977833,-7.621547,0.771524,9.367567,2.957860,7.214306,-9.660374,-1.015300,-0.392023,4.368109,-8.440225,-1.875898,3.972953,8.565983,-9.377681,2.684613,7.495517,-0.490654,2.547301,-3.071580,-4.236801,-5.295087,9.394308,6.404174,1.800291,1.327634,-7.217270,-1.452492,9.390500,-0.412373,-3.032007,-8.488923,1.778268,-7.031096,0.525566,6.761328,-4.267534,-7.631687,1.267102,5.122652,2.919945,-8.743363,-8.997582,3.133362,-1.645010,8.504456,5.642208,-7.983492,-8.269117,-5.592674,1.781837,-6.756172,4.558949,-5.516288,-3.198991,3.928675,-3.920786,-2.379050,8.226088,3.306471,9.766787,-3.008445,-8.624985,3.731194,9.909492,-8.946468,-7.981905,-5.272873,-2.359131,-4.319213,-8.282526,-8.503620,1.062277,-8.937270,-8.962866,-8.440919,-9.241930,8.574693,-9.182561,-9.174763,-6.896044,-1.868767,0.660199,-0.563270,2.144977,-9.336489,7.469039,7.663734,5.237481,4.472147,9.274062,0.532330,-3.138820,-0.228359,-2.001784,-1.780719,-3.559835,7.714421,9.958295,5.770214,-4.695020,-7.107167,-8.209377,-2.547466,6.052971,6.949220,0.853647,4.904851,8.364848,-7.904042,-1.895618,-6.525584,-9.517882,-5.416573,-8.316645,-7.936548,5.643073,-7.708894,-6.767219,-6.272800,-6.726883,-9.888910,-0.865229,6.036009,-7.436437,8.330875,-1.827115,7.770944,4.968292,-9.744183,1.816371,-6.879560,0.930207,-6.006625,0.449609,-6.773793,-7.253885,-1.854165,-0.791990,9.505464,1.827328,5.175997,-6.834245,-3.369046,-3.294930,0.754742,-7.481802,-2.790902,-7.337985,9.994195,8.410111,8.219360,8.202981,1.351005,5.546106,-7.525797,7.146988,-0.946565,-0.405781,-0.315253,4.474240,-4.040005,8.999543,-2.215636,2.051208,-3.763260,0.818840,-3.430599,7.106442,-4.397664,-1.165489,6.605980,-1.708343,-8.340666,1.017519,5.157885,-3.025321,-2.246794,-4.975424,-3.395081,-9.744009,4.983758,-5.250583,-0.936399,2.838012,9.870804,7.600414,3.373151,-9.515565,-2.979152,-7.775264,4.757979,8.654050,3.789397,-1.771240,2.619279,-6.610805,-7.172356,9.774498,-2.755706,4.263174,-2.495757,-3.777488,-0.860660,5.412984,-3.003735,-5.717049,8.915161,9.264428,3.014540,-5.353486,3.072171,2.146811,1.867393,-9.833909,7.835483,0.167719,4.135771,-4.968635,2.260470,-5.208125,4.057018,9.905015,7.309013,0.717231,-3.039025,2.354954,-7.033115,7.402399,9.863602,1.824101,1.457954,0.814398,5.840479,-0.433989,3.989283,-7.099982,8.809033,0.003090,8.852564,8.136957,-3.757556,4.119287,-1.484012,7.295963,-8.410290,-0.603465,0.796665,-2.814334,0.150993,9.577380,-9.797682,-8.847899,6.083452,-0.163768,-7.101333,-3.659834,-4.612279,-8.271116,-1.332811,9.955539,-1.058066,-2.184592,8.973295,-0.789673,7.003431,8.673676,-5.282364,5.280880,-2.986361,-3.799864,-8.946305,9.872527,-7.963168,9.111902,6.065398,0.561017,-5.963598,-3.814384,3.554091,2.235241,-8.048691,-9.368853,-2.373143,4.512703,7.781087,8.367540,-9.214588,-8.914236,-2.385140,-7.769085,-6.193367,-4.282089,6.875668,-1.574940,8.867767,-6.728042,9.645831,-4.339045,-4.956288,-3.209759,6.992245,3.081534,-5.726109,-1.607861,9.192697,3.930021,4.186752,4.359986,-6.770583,1.224278,3.000026,2.481651,-1.912550,-3.969315,8.693835,-2.891445,-5.635204,6.519657,4.016186,-3.599742,-4.603838,7.848827,7.975004,-1.548787,-1.272087,0.261555,7.159125,-0.356410,4.949068,4.095985,6.800338,4.423580,8.100611,6.640543,0.365361,-4.083613,1.240860,1.722080,-9.679161,-1.439650,3.406571,-9.219503,-9.222605,-1.385942,5.929364,6.179930,8.602683,-3.500923,4.608190,6.277696,8.106817,-6.669132,2.831847,6.436367,6.951566,6.235193,-6.938944,-5.006480,-1.185675,-3.287205,-4.231644,1.167218,-2.532764,-5.977648,7.455242,-2.392191,1.095795,9.479057,-9.776733,-0.093171,-5.584343,-0.927192,8.373682,3.482150,9.386055,8.963333,3.097251,1.829376,7.068144,5.199936,-6.676738,2.325554,-4.060892,-9.283407,-2.210679,0.168390,-8.279926,3.878217,-4.863669,-9.932607,-6.256647,4.333155,-1.197977,7.008773,-8.948806,-8.207499,2.080206,2.690939,-5.604418,-5.836783,-1.814421,9.542617,-3.349297,4.049116,5.740567,-8.754568,0.796670,-4.315297,0.218432,5.226426,-6.457862,-0.394453,-8.583164,-6.210127,4.173338,6.520996,-9.449523,4.054502,5.380634,7.670979,-2.054483,-2.366940,5.123437,0.512240,-8.933401,-0.574643,-1.350068,-5.863284,-3.350440,8.729801,-9.692360,-3.329679,5.414071,1.006052,-7.483771,1.483948,-9.564265,-7.162708,-1.823737,-4.969767,7.959366,-7.436314,6.594621,-9.699621,8.073309,-3.473330,-0.494752,-2.943714,-5.692141,-2.003369,-1.484412,1.362120,7.488255,-0.596128,3.137412,-8.604479,4.406402,-3.993444,-5.786941,6.909653,-6.926058,1.512000,-2.024869,-6.204301,6.429854,3.852146,-2.876601,-0.688471,-9.196129,-4.489086,-3.907684,-6.817014,3.883117,-4.969556,6.824009,6.541270,3.918813,-3.059951,-9.605364,-7.147538,6.361017,6.287626,-7.659029,5.034190,-4.217169,-6.643371,7.459979,-3.076848,7.859983,-3.339153,-5.703461,-7.792303,-3.155810,9.697569,3.549454,-7.700134,3.680409,1.680035,8.319768,2.963263,-3.785304,-8.124991,-6.061085,-9.846851,-6.309769,9.934914,-7.343188,-2.036953,-5.649627,2.716176,-8.726260,1.589442,0.711257,7.734700,1.503383,-8.270792,5.558094,8.448993,7.858233,3.873153,-3.792604,2.194608,8.446640,3.209565,6.563960,6.989547,-2.858603,-9.696471,6.304561,6.800992,-9.456355,-6.426632,-9.462316,6.045845,0.848747,1.841186,0.373232,-5.119820,7.440970,1.345055,-9.007237,-0.673902,1.012651,-7.390913,-4.862703,0.064249,3.729254,-5.548952,-5.901237,-1.253215,0.109855,4.356205,-8.784049,9.647523,-1.422042,-9.798257,3.102049,0.915454,3.991720,-3.647597,8.561332,-1.537131,8.426874,9.675515,1.380149,-3.222209,6.746700,4.981367,3.684801,6.681248,8.115827,8.563473,-8.377241,7.051378,-1.959250,-6.800238,-0.730410,8.782948,3.352109,9.364406,-8.293498,7.240054,7.812871,2.601210,8.260336,-7.679737,-4.104964,-9.540303,6.737225,3.029468,2.147188,3.184075,-9.423432,5.650078,9.613107,-7.309577,-5.471340,-7.805774,1.866793,8.948236,-5.834895,2.805285,9.294815,-4.004266,-3.518537,-5.998122,4.072772,6.358049,-9.750463,0.315600,8.587995,8.627365,-4.098884,4.713225,9.060947,-5.019267,1.751919,9.156144,2.237098,9.770864,5.660316,1.678070,4.313060,-9.128318,-6.216416,-6.302866,-6.400319,8.059811,1.422345,-4.446321,8.981235,-2.318889,-0.310220,0.623553,3.655697,3.529720,4.011533,0.511492,8.354342,-3.108617,-4.962304,4.224709,4.194319,7.416225,-0.453521,1.721241,-4.610448,-1.673562,9.325834,8.479009,-3.190041,8.578235,6.424566,-9.992635,7.239527,-5.527162,6.195403,-4.665595,3.742709,5.772659,0.020431,2.684664,3.720365,-2.112773,-8.536975,5.594140,6.931326,-4.962544,-3.699481,1.696390,3.271769,3.029303,-1.024308,6.931051,0.621720,5.523698,-8.679957,-2.832833,-3.827663,-7.203483,-0.288934,3.753099,5.463821,6.912279,-9.787537,2.866197,-4.458273,7.638875,-7.987369,-3.080123,5.885151,-6.206025,7.071802,0.715523,6.867626,-3.830268,-9.424131,9.141799,9.667431,8.357213,-9.703382,9.539979,2.469671,9.481838,-9.943221,3.839715,5.372210,1.883731,-4.683848,-9.236650,-3.867552,-6.794416,-9.156445,-8.670240,-5.345180,8.438785,-3.618348,1.956213,0.174203,6.227011,3.177932,-3.551903,-6.704386,0.967275,-7.105634,6.187803,-8.816778,9.805966,3.784681,-5.712209,3.799286,-4.820207,-9.223016,1.043285,-5.539526,8.761967,1.908197,-1.729729,3.769773,1.651332,9.943975,4.586328,-9.768962,-1.685104,-7.798229,5.709458,2.913405,-0.942323,4.455857,3.232366,-7.553281,4.542019,-7.788540,-8.010833,0.730319,-0.381238,-4.750714,-1.781611,-6.815778,-3.583610,1.748353,4.001944,-5.950067,3.899344,6.501945,9.970656,4.504588,-9.245189,0.456629,-1.932065,-3.534785,1.541109,-0.906455,0.731923,8.460225,8.528009,9.672727,0.080177,-2.882653,3.310338,3.814428,-7.931897,-8.397763,8.297964,9.044357,-6.958275,-1.578770,-2.297325,-1.803909,2.556715,8.302438,-5.340793,7.249593,-3.578332,-1.934796,-0.215956,2.653667,0.768126,7.533757,8.029463,-9.535177,-5.518067,7.675212,8.556714,-5.131448,2.375526,9.860821,-3.402322,6.498461,4.825336,-0.074106,-5.925322,-5.513614,7.526388,-4.310414,-7.888536,7.002574,5.126772,9.743132,-0.914859,7.017317,1.809901,6.621865,-0.702049,9.278716,4.691645,3.927895,6.136892,4.061056,2.049663,5.989675,-5.278105,-5.233976,8.720530,-4.625178,7.459404,-4.680081,-0.175893,-4.320281,-1.846366,-5.937521,7.259258,9.761804,9.768537,-8.391561,-0.690236,-9.072684,-9.896183,-4.960611,-6.745830,8.669982,9.006906,5.781682,8.203419,-6.185437,8.003560,1.403361,-6.682601,7.235598,4.770190,-0.353104,4.616382,-7.417514,3.823974,5.596022,5.161813,5.477497,-5.637618], dtype = "float32")#candidate|7647|(1690,)|const|float32
bop_7648 = relay.bitwise_xor(uop_7618.astype('int16'), relay.reshape(const_7647.astype('int16'), relay.shape_of(uop_7618))) # shape=(1690,)
func_2343_call = mod.get_global_var('func_2343')
func_2346_call = mutated_mod.get_global_var('func_2346')
const_7655 = relay.const([-6.527533,-1.377473,-5.235382,8.020669,-4.653192,-0.084918,-0.970853,-0.895553,-4.023145,-0.810214,3.461732,1.534280,9.990398,8.799913,-2.626595,7.683839,6.101284,2.520965,4.471664,2.641647,-9.512807,-0.206752,-4.343110,-6.246136,5.307010,-0.990568,-2.992490,-2.714300,6.329197,-9.947366,6.010485,-9.932299,-0.361609,-0.581808,-5.726315,6.275413,8.201918,2.069240,7.901039,-6.793544,-8.641767,5.630721,-5.675928,0.608885,4.100535,-4.370742,7.442140,-2.755559,-1.011540,5.445596,-0.002308,6.783691,-8.509336,9.398367,4.769154,-9.374843,7.810996,-5.039940,0.328713,1.049754,6.928621,3.088421,-2.253231,-3.882301,-3.569859,9.254921,3.729300,5.451896,-2.969590,2.461413,-6.789463,2.703169,0.565997,-6.714937,0.737684,-7.271884,7.578681,-4.300024,0.020346,-2.221060,-0.018869,-0.260382,3.562423,-4.551990,-7.063625,0.472624,7.533432,-8.449137,-9.996834,-0.211646,-0.471367,-4.403683,-4.355899,4.371049,-5.182294,-9.586639,-8.393625,-4.998622,-6.764155,4.039349,-3.300641,9.058543,2.685109,-3.152004,-9.456455,-9.417657,8.626381,-6.940876,6.156055,1.541165,-7.477660,-5.000735,-0.669139,-3.157292,8.365600,-8.761996,-8.672889,-1.112177,2.683165,6.062232], dtype = "float32")#candidate|7655|(120,)|const|float32
call_7654 = relay.TupleGetItem(func_2343_call(relay.reshape(const_7655.astype('float32'), [30, 4]), relay.reshape(const_7607.astype('float64'), []), ), 2)
call_7656 = relay.TupleGetItem(func_2346_call(relay.reshape(const_7655.astype('float32'), [30, 4]), relay.reshape(const_7607.astype('float64'), []), ), 2)
output = relay.Tuple([call_7571,call_7590,call_7606,const_7607,call_7615,const_7616,call_7626,var_7627,call_7639,call_7644,bop_7648,call_7654,const_7655,])
output2 = relay.Tuple([call_7572,call_7591,call_7609,const_7607,call_7617,const_7616,call_7628,var_7627,call_7640,call_7645,bop_7648,call_7656,const_7655,])
func_7680 = relay.Function([var_7608,var_7627,], output)
mod['func_7680'] = func_7680
mod = relay.transform.InferType()(mod)
mutated_mod['func_7680'] = func_7680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7680_call = mutated_mod.get_global_var('func_7680')
var_7682 = relay.var("var_7682", dtype = "float32", shape = (1690,))#candidate|7682|(1690,)|var|float32
var_7683 = relay.var("var_7683", dtype = "float64", shape = (165,))#candidate|7683|(165,)|var|float64
call_7681 = func_7680_call(var_7682,var_7683,)
output = call_7681
func_7684 = relay.Function([var_7682,var_7683,], output)
mutated_mod['func_7684'] = func_7684
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7753 = relay.var("var_7753", dtype = "float64", shape = ())#candidate|7753|()|var|float64
const_7754 = relay.const([[[2.060826,-8.221379,-4.326969,6.641309,2.243195,1.912816,-7.574183,2.588154,-7.950709,-0.233090,8.871792,-0.760725,4.034443],[-7.463258,7.890728,-5.788075,9.172141,9.090345,-3.445144,-9.077126,8.673860,2.616682,6.963203,6.941555,-9.336497,8.513248]],[[-4.657903,4.887956,-2.286484,-5.286503,7.836571,-5.738974,-4.749083,9.371133,-4.149987,-3.339961,3.095005,4.744479,-4.672030],[-3.854458,3.423803,-3.126427,7.454663,9.000752,1.418897,-8.788659,-2.033463,4.934309,-4.046155,4.251455,-9.720945,-0.413077]],[[0.311503,1.174599,0.700669,-5.866092,8.371606,-9.227091,-1.109338,-6.445023,-5.657425,1.383129,9.088790,4.252262,6.068476],[-9.600509,-0.447889,3.297563,-4.428554,6.192389,-2.408734,-4.340669,-0.225747,1.156711,-2.866863,-0.161948,-2.385661,7.040911]],[[6.122159,1.857396,1.934976,-4.017893,9.912379,-8.393645,-4.789532,4.557739,3.028904,-5.821654,-9.373369,5.357070,6.860849],[6.041472,5.213586,5.884579,9.181647,4.959822,-1.241078,-4.819050,9.699518,-2.529940,-5.063935,-0.268461,4.358386,8.600196]],[[-7.506291,5.987433,1.099545,1.074568,5.352134,9.725642,-2.219262,-8.423852,-5.351205,-9.562387,6.814187,-6.134115,-4.154305],[4.697711,2.595135,6.192820,5.321417,-7.979196,-1.861724,1.615780,-2.800946,-2.167716,0.554035,-9.215184,-3.221478,3.386836]],[[8.186455,9.677358,0.855492,8.503985,-3.871256,-1.124961,8.555690,-4.926166,1.696687,-1.322313,-8.448188,-8.644315,9.663196],[5.384892,6.442085,8.674591,-8.999066,-1.997921,8.721357,6.013008,-6.591901,-1.157652,-5.095589,4.757114,-4.063490,3.174686]],[[7.473611,6.155849,-3.096170,-9.183527,0.306126,-5.337783,-8.277227,9.241427,4.830828,9.631936,6.220668,2.166945,-1.139998],[5.551736,-9.590139,4.529233,-1.998267,-9.041644,-5.552468,-5.609117,-9.746403,2.003472,1.515094,9.363324,8.301519,-8.262977]],[[-1.437338,-6.903608,3.852662,1.154936,6.175905,0.767266,8.542752,-4.802971,-8.151143,-4.974798,-4.947054,3.445746,-7.027443],[-3.067978,-7.793924,-4.568019,-3.405520,7.129217,-5.225118,-4.127707,-3.033873,7.320999,0.864922,8.979002,-5.075955,5.607805]],[[9.299424,-8.562740,1.230214,-5.777431,-6.664944,-9.256729,4.386344,-2.757434,-7.901895,5.534267,-2.355016,0.996381,9.195912],[7.728777,-6.795175,-2.127094,4.070131,2.066622,0.614952,-2.624086,9.735090,-9.031080,1.380967,-0.860873,5.893262,-7.173065]],[[5.574135,-8.320183,-6.485687,-2.939305,-1.974427,-0.933596,-1.476279,-7.186224,5.726397,1.945346,8.145120,-2.130522,-4.875956],[-5.044520,-1.473220,2.237281,-6.510513,-7.171097,7.464577,0.492697,6.711177,7.903566,-3.910209,9.548853,0.034925,-0.248184]],[[6.298228,0.502777,7.524773,0.094969,-5.067873,9.270482,-9.931327,2.589960,5.813540,6.999609,-9.723008,-5.619480,-9.990031],[1.482538,-8.327736,-7.520970,-6.345196,2.268861,-1.840931,4.733328,2.513529,0.240046,9.385828,4.330261,-1.887054,5.396063]],[[4.248771,9.139210,-3.727379,1.198222,-7.764951,-1.112621,2.550221,-0.727176,-1.836084,-5.820136,3.789853,-9.813501,-2.582824],[8.765710,-1.068109,-8.059365,-3.149356,-6.022235,-5.868925,7.212043,6.920187,0.094084,7.318277,-3.938713,3.277334,1.187225]],[[4.457307,2.018962,6.610359,-4.151790,-5.527776,0.030928,-7.830265,3.928880,-7.694213,4.060042,-2.189280,-8.696802,-6.404184],[6.984529,-8.114258,-7.805270,-9.700661,3.821427,-5.771778,-0.370993,-2.910665,4.126963,4.699614,4.170483,7.013373,9.160931]],[[9.553503,2.013901,9.951584,-8.934066,5.322983,2.261433,-7.037625,2.827322,-0.576303,3.008378,-7.333890,1.583948,6.961375],[2.337696,2.320971,-0.557089,-0.134717,-1.204956,2.504047,7.204448,-7.649020,-7.502519,-0.153006,9.669137,5.091898,6.915243]],[[-1.916735,0.090448,-1.967021,-4.536737,-0.293084,-1.517404,7.627544,-9.319097,0.612245,2.270347,-7.489578,7.654658,-7.394160],[2.019022,6.718692,1.715834,3.626530,-0.374144,4.569492,9.749129,4.677497,-3.297639,-0.882809,4.243364,0.151527,2.187640]],[[8.270896,-6.558525,-7.396234,9.870585,-9.356105,6.568013,-8.979329,8.688466,-2.921128,1.202872,7.499434,-6.781162,-5.333459],[4.807039,4.883773,4.494919,4.523236,-7.841607,5.208557,-0.805310,-1.525305,3.569044,3.783981,-6.228511,0.885777,0.119913]]], dtype = "float64")#candidate|7754|(16, 2, 13)|const|float64
bop_7755 = relay.subtract(var_7753.astype('float64'), const_7754.astype('float64')) # shape=(16, 2, 13)
func_6835_call = mod.get_global_var('func_6835')
func_6839_call = mutated_mod.get_global_var('func_6839')
var_7778 = relay.var("var_7778", dtype = "uint32", shape = (375,))#candidate|7778|(375,)|var|uint32
var_7779 = relay.var("var_7779", dtype = "float32", shape = (1690, 1))#candidate|7779|(1690, 1)|var|float32
call_7777 = relay.TupleGetItem(func_6835_call(relay.reshape(var_7778.astype('uint32'), [5, 15, 5]), relay.reshape(var_7778.astype('uint32'), [5, 15, 5]), relay.reshape(var_7779.astype('float32'), [1690,]), ), 2)
call_7780 = relay.TupleGetItem(func_6839_call(relay.reshape(var_7778.astype('uint32'), [5, 15, 5]), relay.reshape(var_7778.astype('uint32'), [5, 15, 5]), relay.reshape(var_7779.astype('float32'), [1690,]), ), 2)
output = relay.Tuple([bop_7755,call_7777,var_7778,var_7779,])
output2 = relay.Tuple([bop_7755,call_7780,var_7778,var_7779,])
func_7784 = relay.Function([var_7753,var_7778,var_7779,], output)
mod['func_7784'] = func_7784
mod = relay.transform.InferType()(mod)
var_7785 = relay.var("var_7785", dtype = "float64", shape = ())#candidate|7785|()|var|float64
var_7786 = relay.var("var_7786", dtype = "uint32", shape = (375,))#candidate|7786|(375,)|var|uint32
var_7787 = relay.var("var_7787", dtype = "float32", shape = (1690, 1))#candidate|7787|(1690, 1)|var|float32
output = func_7784(var_7785,var_7786,var_7787,)
func_7788 = relay.Function([var_7785,var_7786,var_7787,], output)
mutated_mod['func_7788'] = func_7788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_7921 = relay.TupleGetItem(func_3254_call(), 0)
call_7922 = relay.TupleGetItem(func_3256_call(), 0)
func_5295_call = mod.get_global_var('func_5295')
func_5298_call = mutated_mod.get_global_var('func_5298')
var_7943 = relay.var("var_7943", dtype = "bool", shape = (56, 1))#candidate|7943|(56, 1)|var|bool
call_7942 = relay.TupleGetItem(func_5295_call(relay.reshape(var_7943.astype('bool'), [14, 2, 2]), relay.reshape(var_7943.astype('bool'), [14, 2, 2]), ), 3)
call_7944 = relay.TupleGetItem(func_5298_call(relay.reshape(var_7943.astype('bool'), [14, 2, 2]), relay.reshape(var_7943.astype('bool'), [14, 2, 2]), ), 3)
output = relay.Tuple([call_7921,call_7942,var_7943,])
output2 = relay.Tuple([call_7922,call_7944,var_7943,])
func_7971 = relay.Function([var_7943,], output)
mod['func_7971'] = func_7971
mod = relay.transform.InferType()(mod)
mutated_mod['func_7971'] = func_7971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7972 = relay.var("var_7972", dtype = "bool", shape = (56, 1))#candidate|7972|(56, 1)|var|bool
func_7971_call = mutated_mod.get_global_var('func_7971')
call_7973 = func_7971_call(var_7972)
output = call_7973
func_7974 = relay.Function([var_7972], output)
mutated_mod['func_7974'] = func_7974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_7976 = relay.TupleGetItem(func_3254_call(), 0)
call_7977 = relay.TupleGetItem(func_3256_call(), 0)
output = relay.Tuple([call_7976,])
output2 = relay.Tuple([call_7977,])
func_7987 = relay.Function([], output)
mod['func_7987'] = func_7987
mod = relay.transform.InferType()(mod)
mutated_mod['func_7987'] = func_7987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7987_call = mutated_mod.get_global_var('func_7987')
call_7988 = func_7987_call()
output = call_7988
func_7989 = relay.Function([], output)
mutated_mod['func_7989'] = func_7989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2734_call = mod.get_global_var('func_2734')
func_2736_call = mutated_mod.get_global_var('func_2736')
call_8004 = func_2734_call()
call_8005 = func_2734_call()
output = relay.Tuple([call_8004,])
output2 = relay.Tuple([call_8005,])
func_8011 = relay.Function([], output)
mod['func_8011'] = func_8011
mod = relay.transform.InferType()(mod)
mutated_mod['func_8011'] = func_8011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8011_call = mutated_mod.get_global_var('func_8011')
call_8012 = func_8011_call()
output = call_8012
func_8013 = relay.Function([], output)
mutated_mod['func_8013'] = func_8013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2242_call = mod.get_global_var('func_2242')
func_2244_call = mutated_mod.get_global_var('func_2244')
call_8039 = func_2242_call()
call_8040 = func_2242_call()
output = relay.Tuple([call_8039,])
output2 = relay.Tuple([call_8040,])
func_8044 = relay.Function([], output)
mod['func_8044'] = func_8044
mod = relay.transform.InferType()(mod)
mutated_mod['func_8044'] = func_8044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8044_call = mutated_mod.get_global_var('func_8044')
call_8045 = func_8044_call()
output = call_8045
func_8046 = relay.Function([], output)
mutated_mod['func_8046'] = func_8046
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8130 = relay.const([[[4.219749,-5.858207,9.999834,7.267972],[-1.979941,6.509183,-4.176106,9.858710],[1.461166,-8.716699,-4.781257,-0.645631],[-7.837681,9.972029,-0.172031,-5.080974],[6.970721,-1.094100,-5.263753,-9.367163],[2.289529,-1.491394,-5.941683,8.560218],[-6.006221,4.050259,-1.638420,8.885540],[1.935156,-7.469795,0.143255,5.298876],[2.235539,7.523045,3.837396,8.745461],[-7.665162,-3.488207,3.945939,-8.821316],[-8.907629,-3.916121,1.574223,8.956024],[-5.995719,-8.275043,-1.890789,-7.344827]],[[0.521083,-5.787865,0.045554,-2.582399],[1.438685,-9.244010,-8.464312,-4.622236],[6.526257,0.370424,-0.320046,7.639067],[-2.406760,-0.554325,4.728211,9.913597],[8.570176,0.433321,0.032212,-4.520600],[9.072221,9.588635,0.704892,-9.852699],[-7.752404,-3.656861,-3.566821,-8.067277],[9.529369,-9.555439,2.483598,-7.806746],[2.289641,-2.312866,9.135375,6.262297],[9.929902,-1.046505,-8.398714,5.400051],[-5.511105,4.534793,4.492945,-7.721460],[-1.472809,3.491914,-6.208328,-1.580883]],[[-0.635948,-1.475178,0.954290,-4.641908],[-4.000688,-7.885942,8.991177,9.393027],[3.594382,-8.884946,-5.334494,6.729281],[8.338759,2.109706,-4.291579,0.602380],[-1.277569,-9.717856,8.394879,-8.203960],[5.164979,-5.317138,2.450158,0.748650],[-6.300973,6.555744,-7.677404,-2.722981],[-5.360188,0.274759,0.162077,3.828471],[-7.815034,-3.500920,-1.143353,8.460419],[7.436577,-2.418514,3.359818,0.633352],[2.804981,9.313097,9.524217,-0.750495],[8.545673,4.535493,-7.089637,-5.987977]],[[-7.562367,0.646334,8.748727,6.609593],[-1.095469,8.809521,3.625016,-9.023682],[-4.928675,-6.338309,3.462568,6.143129],[-0.303310,3.316850,5.455153,8.882268],[-3.719353,-9.484149,1.310210,-8.202141],[1.986087,4.725838,-1.783220,3.084254],[5.781031,6.978473,-8.191244,8.707269],[3.168656,-4.137246,-2.541202,-3.922697],[-1.581284,2.927654,-5.705566,8.099365],[1.211900,-7.387075,-4.277863,-9.358636],[9.698866,-7.398860,-9.068183,-8.009474],[1.849577,-3.727173,-2.678196,-6.411147]],[[8.104499,-9.160584,-5.315906,9.984618],[2.091861,7.782955,-7.837507,5.136616],[2.992890,1.088683,-7.594693,9.196316],[-6.819901,7.982110,5.420787,9.043313],[2.699047,-9.945578,-6.501695,-0.133888],[-3.350881,3.119201,5.371892,-8.780978],[9.708097,2.341150,-2.012479,4.828823],[-2.864577,4.243122,-0.565228,4.751406],[7.507139,6.016998,5.986511,5.425216],[-5.408469,-3.403571,3.202260,-5.954525],[1.982571,-2.133468,9.187758,-2.365991],[7.145577,9.560557,6.497492,5.220292]],[[-6.777613,-0.282480,-0.394980,1.021490],[-3.472079,4.823167,1.576520,-1.751188],[0.830337,-6.147086,-6.529882,-2.435481],[-7.032626,-7.635487,-7.136413,-4.496149],[-7.298569,9.114567,-6.202515,3.954594],[-9.008447,8.020816,7.055375,-5.019417],[-2.492608,2.474007,-9.367144,-7.828841],[6.234091,-2.032202,6.293796,-6.118491],[5.625653,-4.912855,7.267916,-6.647142],[-5.575384,8.101183,-2.421312,-7.959645],[-7.240997,1.703713,-2.122537,3.671497],[-5.984593,3.118026,1.530066,-5.731740]]], dtype = "float32")#candidate|8130|(6, 12, 4)|const|float32
uop_8131 = relay.sinh(const_8130.astype('float32')) # shape=(6, 12, 4)
func_6432_call = mod.get_global_var('func_6432')
func_6434_call = mutated_mod.get_global_var('func_6434')
call_8136 = relay.TupleGetItem(func_6432_call(), 1)
call_8137 = relay.TupleGetItem(func_6434_call(), 1)
func_5215_call = mod.get_global_var('func_5215')
func_5216_call = mutated_mod.get_global_var('func_5216')
call_8148 = func_5215_call()
call_8149 = func_5215_call()
output = relay.Tuple([uop_8131,call_8136,call_8148,])
output2 = relay.Tuple([uop_8131,call_8137,call_8149,])
func_8154 = relay.Function([], output)
mod['func_8154'] = func_8154
mod = relay.transform.InferType()(mod)
mutated_mod['func_8154'] = func_8154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8154_call = mutated_mod.get_global_var('func_8154')
call_8155 = func_8154_call()
output = call_8155
func_8156 = relay.Function([], output)
mutated_mod['func_8156'] = func_8156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7108_call = mod.get_global_var('func_7108')
func_7110_call = mutated_mod.get_global_var('func_7110')
call_8174 = relay.TupleGetItem(func_7108_call(), 0)
call_8175 = relay.TupleGetItem(func_7110_call(), 0)
output = relay.Tuple([call_8174,])
output2 = relay.Tuple([call_8175,])
func_8178 = relay.Function([], output)
mod['func_8178'] = func_8178
mod = relay.transform.InferType()(mod)
mutated_mod['func_8178'] = func_8178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8178_call = mutated_mod.get_global_var('func_8178')
call_8179 = func_8178_call()
output = call_8179
func_8180 = relay.Function([], output)
mutated_mod['func_8180'] = func_8180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4797_call = mod.get_global_var('func_4797')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_8284 = relay.TupleGetItem(func_4797_call(), 0)
call_8285 = relay.TupleGetItem(func_4798_call(), 0)
func_4217_call = mod.get_global_var('func_4217')
func_4220_call = mutated_mod.get_global_var('func_4220')
const_8294 = relay.const([-6.822796,-7.514337,-8.466834,-1.822616,6.140506,-9.076215,7.882928,2.672506,6.623931,7.901467,1.545794,-0.401156,4.714209,9.564804,-8.166672,-5.200046,2.461687,7.030210,-0.559236,1.194451,-4.237996,-2.767918,-3.522601,0.177010,-0.509033,-1.118740,-2.981434,-7.379524,5.043163,-8.322256,7.869621,-4.152752,8.737551,0.189018,3.152725,-7.815534,-6.828161,5.857813,-9.215102,8.324328,0.665299,2.605837,-8.225624,6.002587,4.209409,8.365938,-0.848586,-7.280991,-1.825398,8.610249,-3.599510,8.123293,8.843281,0.495566,4.307060,-9.312219,-6.915502,-8.185602,8.219754,-5.646811,-6.139400,-0.506543,0.680105,-2.097626,-3.721471,-5.864828,5.745906,2.650654,-4.605254,1.950214,2.397278,3.043278,6.354199,-4.854299,7.640001,8.374413,6.414656,5.631998,-8.128444,-1.791928,1.905250,8.239653,-3.204284,6.315781,-7.817319,-1.236594,6.582105,8.043633,-8.458298,4.273358,2.195021,5.025179,-0.713764,3.733759,-5.408998,6.084586,-6.760222,3.773052,-9.939651,-4.086993,5.793689,-8.639029,-6.704605,1.074791,-1.291359,-6.000566,4.075157,-5.034305,-8.565329,5.919259,1.283902,0.256390,8.364501,-5.691656,4.684743,-1.984400,2.081282,0.640187,9.092375,-3.093307,-3.247602,4.967117,-0.803698,3.027185,7.786281,-0.026772,-0.223650,7.175210,-9.165361,5.861397,-7.842551,-0.390616,-5.417178,0.801401,-0.177986,0.302823,-9.277407,-1.664875,-7.239135,-7.607866,-3.628234,-8.135710,-4.526340,5.547906,1.563927,-6.345421,-8.930447,-4.180265,5.674612,-6.532870,8.215587,-0.601736,-6.942015,9.365485,-1.330052,8.074335,-2.410805,7.666058,4.429582,9.442116,7.719302,-6.500918,-4.838163,4.880146,-2.173916,6.307325,3.274731,6.457566,-9.171299,2.853106,-7.494785,-6.535760,-2.873928,7.030652,-4.509519,9.463854,1.305811,6.181586,-8.538984,5.493938,6.838379,-1.600199,-9.083950,-0.700993,-2.838090,8.047019,-6.352785,5.773070,-1.720993,-2.284162,7.639052,-3.640137,8.848561,-0.337475,-8.472930,-3.859086,-0.935447,1.683432,4.978184,-0.138975,1.153272,-7.152577,9.833559,-2.685241,6.830665,-2.220237,-9.038048,9.147493,-1.665830,0.895618,4.085329,-8.062149,1.124993,-6.554977,-8.286322,-4.664820,-8.941833,6.326016,0.301166,9.115484,6.589048,8.868172,7.311190,0.529811,4.859406,-9.323181,2.171378,-3.852653,-4.864592,1.449931,0.973469,-5.912318,-5.470016,1.829619,-8.792936,-7.940261,-2.115331,1.340505,-8.752916,-1.812679,-7.592373,-9.897614,3.985497,-2.070858,2.490040,-7.649331,9.946290,2.190677,2.458437,5.100743,7.237615,7.515444,-6.546072,3.403201,1.659163,-4.273669,7.142667,4.466618,8.761965,-3.965543,8.568038,-2.315262,-1.278757,9.383104,-5.074671,1.262854,-9.550477,-5.846446,3.044555,-9.068173,7.767122,-0.691192,6.482525,7.127256,8.812298,-5.824747,5.205901,-7.599492,-1.747763,2.679462,-8.592741,-4.638277,5.064833,8.024997,1.073480,5.848931,-9.744110,5.036933,-2.394473,0.216861,-1.201200,-0.767633,-6.740667,7.682114,-8.082730,9.872509,8.284227,-1.030582,-6.331329,-7.755117,4.192518,-8.585232,6.688890,9.822448,3.895198,-5.327864,-0.673200,7.175995,1.448842,8.592782,4.625470,-5.558476,7.963127,7.801968,7.690872,0.748133,7.484178,-9.883132,9.105165,-9.251574,-6.475251,-8.302705,-4.847891,5.094566,1.250947,4.171493,-7.001653,1.876628,-3.555319,2.746512,-3.281361,-8.151745,6.861937,7.414666,4.083722,2.795596,-7.690901,-7.168766,8.359276,-8.968710,5.993189,9.892711,9.431676,7.731254,2.575221,7.143668,4.714028,1.446181,1.626377,1.976524,9.800032,-1.051998,-8.698199,-7.488248,6.573836,-6.483715,-3.390951,-8.544043,0.398812,-9.989623,-0.518155,-7.978824,1.128756,-6.704100,-9.767751,9.147339,-8.974526,1.987631,5.741356,-5.350229,-4.907495,0.804340,-6.743590,1.688801,3.530773,-7.060765,2.239492,5.612622,7.268206,1.205698,4.996772,1.567017,7.340900,-9.949944,-1.607293,3.249068,-5.309249,4.761333,-0.374728,-6.693457,-9.426899,0.291632,9.789637,1.050012,6.218625,7.836787,7.378495,-8.905685,7.302112,0.723062,-6.835103,1.580989,3.949868,0.743364,6.205817,5.477150,5.867762,8.982722,1.803822,0.081997,-2.458832,7.523439,4.376159,-2.517268,7.432259,-7.357471,-2.499525,-1.201378,-0.187351,9.864497,2.069595,-7.688006,1.578018,9.897867,-8.038546,1.505023,2.886798,-5.589739,6.305416,-7.647724,7.955478,-2.008731,-0.452015,2.906982,-9.371043,-8.448352,-3.551090,-6.545227,-5.305745,-5.274302,-5.506298,6.864766,6.356424,-9.356990,-0.753833,7.585012,1.593331,1.274335,-0.847290,8.718655,0.578627,-6.901778,-9.943319,-7.015786,-9.585122,3.224499,-3.126783,9.905853,-8.330542,-8.036491,-0.286021,-1.789800,0.420131,7.250473,0.324811,7.286352,-6.091291,-6.124006,-6.769338,0.600454,2.104911,-0.719230,-4.321667,8.449739,5.076153,9.054621,0.493453,-3.173910,-5.817341,-8.883334,-1.017005,-8.209688,9.133735,5.906805,9.925498,5.883130,0.595479,7.866689,9.714350,-6.749121,-3.433077,-1.375494,-3.326026,7.528621,-9.896404,-3.628403,9.756792,1.537242,7.378469,-6.702463,9.076828,3.650436,8.887004,-6.755449,-7.126472,-4.829315,2.088500,-4.094588,4.322761,-2.219107,-8.212654,-0.460837,1.646333,-1.473052,-9.824338,-3.498543,-2.862960,-9.034468,-4.306745,-4.246865,7.131513,1.957761,8.099560,-4.001502,4.114476,-7.524034,4.885090,7.128543,-1.357217,0.212491,4.835790,2.049279,-9.728892,7.385204,-8.760109,5.266782,-5.970223,-7.284116,-9.201081,-8.750933,4.803913,9.157011,5.610063,-8.639583,0.742425,-7.451254,7.027079,-4.663865,4.926245,-9.784411,-9.201895,-4.373118,-6.016322,-0.220533,8.465473,2.424529,-3.804865,-3.815830,6.301745,8.616236,-2.139602,9.613201,7.368781,4.042660,-2.158719,4.037648,0.166582,7.502536,-1.297101,4.207545,3.805783,0.352114,7.091094,8.513853,-0.285697,8.255187,8.317195,-9.273350,6.776744,0.336942,5.243915,-3.876809,-5.737337,-2.531104,9.778226,0.836545,-0.529112,-4.465578,-1.131211,5.779854,9.439025,2.822202,9.729464,1.097183,-6.925811,-9.359098,9.531411,-6.731810,8.487374,5.169351,-3.546494,8.773950,8.786108,2.793968,7.568806,-8.847473,7.211739,8.086101,8.178925,6.170791,-1.664767,7.394861,-4.028220,8.457544,-6.157791,0.361361,5.567117,-8.622305,-6.380808,-6.144917,-4.570301,-1.973900,1.382556,-0.241105,8.209003,-2.927910,-1.676854,3.991424,4.824951,-7.790551,4.183743,0.090737,-0.663625,0.319044,9.587795,-5.554129,-1.376280,9.383465,4.121647,-2.870397,-6.099117,-6.668337,-2.158773,1.611436,-4.392321,-8.747438,4.978073,4.269169,9.353268,9.786085,-5.788820,-6.391919,-7.761199,-4.227817,4.545546,-3.577624,0.536405,-8.113392,0.923651,-0.660735,2.099394,6.094268,-9.678611,-4.076794,-3.182851,-8.484059,-1.091579,2.055331,-8.810861,-4.692723,3.223080,7.419758,5.365270,-0.601423,-1.226310,-8.357600,3.384420,-2.263183,-2.160956,7.864623,-7.402095,-1.703752,-1.702144,-5.854711,0.511769,4.583929,0.505355,-8.928257,-9.044349,3.379935,1.889266,2.899065,-1.128812,-2.428111,-2.848515,6.769573,8.662765,2.206654,7.803040,-1.392063,-4.343262,3.033793,4.396238,-9.702753,3.939724,-3.266284,-7.347923,0.087993,2.177745,7.088695,-4.231442,2.603756,-5.608462,9.211119,-7.351899,2.899533,5.728770,-6.881780,-3.560880,4.138635,5.172567,-8.123579,8.142016,-7.672350,8.541900,-7.104403,-0.847804,3.338405,4.355924,-9.638554,-7.872765,-9.194970,4.785550,-5.642536,-9.524921,2.221369,0.800825,4.763578,9.983472,-1.463527,4.789257,-7.390137,-8.452042,9.407944,8.091267,8.667600,2.294297,2.175194,-9.439915,-9.269712,9.250879,-1.555958,0.512434,4.137919,7.411005,0.174828,7.239641,-3.636595,8.255638,5.712628,-7.119296,-3.874136,-5.900305,-9.740445,-5.611429,4.042704,-0.675216,-8.088870,3.026959,-3.610278,6.018024,-1.889657,-8.189591,-4.802607,-2.044065,-4.335039,-2.407093,-7.142998,-3.303190,-4.819492,4.893889,3.961470,6.606610,9.331256,8.427452,-0.065148,8.860753,6.108026,6.242392,0.244064,5.189267,-4.342842,-1.263471,9.918567,6.491296,1.912264,1.615431,-5.723171,9.276339,-3.828285,-5.817810,3.407549,1.120089,9.051058,7.403922,-2.336328,-4.907010,-0.884188,2.235292,6.372596,0.271231,6.073158,8.513711,-7.443864,6.867456,-5.475085,5.402097,9.568608,-7.463840,5.249314,1.408835,7.036681,0.307134,-5.336267,0.189012,3.882794,6.942183,5.356623,0.445635,0.548121,-9.050994,-6.051317,8.356328,-1.100399,-0.514855,2.783712,0.574508,0.114036,2.895043,1.093095,8.327721,3.660941,5.693989,-2.786888,-9.169584,9.657552,1.801973,-9.180770,0.550212,-7.653606,6.021605,4.921876,-1.974746,2.201198,6.453099,-9.881228,4.028733,2.179384,4.210567,9.149446,3.277799,-7.763336,-9.846301,1.026235,-1.191170,5.605234,-1.764532,-6.495777,2.831762,-0.756743,5.987016,-9.842089,-2.182335,0.395203,3.499429,-0.098817,-8.307768,4.249067,7.009333,-8.634468,-9.739615,7.791963,6.440374,-2.327830,4.832263,1.290883,3.392467,-0.254100,8.650985,1.977807,-8.603107,2.641826,0.803619,-3.220124,2.734681,-8.399376,-8.490252,-2.388237,1.840237,8.139477,0.662463,1.498032,-7.626037,2.474685,-9.899191,-4.738192,-0.832940,2.462793,-9.296201,-8.657762,-8.701592,3.722718,0.699363,-4.331468,-7.885465,7.999734,-8.986761,3.710909,-2.217427,-0.512055,0.649908,-0.453137,-1.826106,5.910047,0.672439,5.925564,-9.045783,-3.385623,-0.776070,6.184222,-9.792132,8.687646,3.333174,4.488240,2.615873,-3.299037,-9.311418,-4.907891,-7.001539,3.858196,9.892654,-0.491846,-0.661015,6.982691,7.116673,7.686710,-4.083434,0.178795,4.263317,1.851872,-5.335766,-9.412509,-5.491177,-3.763752,-0.818840,-5.186376,-6.996557,-6.887597,-0.358666,5.228807,-2.547232,6.397358,2.928526,-1.469790,-4.304775,7.318287,-7.696317,1.428101,-6.160190,5.398942,-7.370759,2.573704,-2.015938,9.480746,0.794416,8.219095,1.973343,-8.902796,9.269857,-8.689352,4.607273,-7.991113,9.941470,-9.800569,1.779955,-3.740666,-2.362226,-2.189539,3.703811,7.695198,2.158013,-4.697379,3.098875,5.331267,-8.839756,-8.518832,-6.180307,8.585652,5.021555,8.760982,4.167401,-6.802682,5.443798,6.975926,-8.250318,-1.471979,3.059916,-7.630355,4.009191,9.363105,1.664346,0.460225,-8.532558,5.185672,1.187140,3.067662,0.861158,-8.927799,-4.410430,3.324916,-6.566021,-5.097651,6.647106,-3.481106,0.320230,-2.682768,-7.635995,-4.807649,-3.943282,-3.812935,-8.727669,-3.011812,9.608110,0.497322,-4.129116,-1.127256,-7.345367,-1.066774,5.013843,-5.825619,-5.688947,-8.265607,1.701378,-6.478419,-6.692699,0.799227,-4.201445,-2.383394,-6.148241,1.276965,4.526631,5.412859,0.319509,3.680573,-1.498574,7.519399,-8.464728,1.474507,-1.385417,0.433636,-4.869613,0.932909,-7.515973,-6.435856,2.034957,-4.869923,3.446453,-6.504449,8.443393,-6.158866,-6.169068,2.269166,5.907066,-1.447381,-1.674582,-1.386441,-9.948102,8.510822,-3.640131,9.538041,9.067933,-7.840954,9.851264,2.513945,-9.539754,-3.007806,1.045773,5.782705,3.180423,-5.235569,0.681848,-5.704795,9.288149,-8.810563,-7.044744,5.283720,0.321549,-2.431467,0.924783,-8.009394,1.253310,-4.275120,-5.668140,6.633585,0.079128,5.028962,5.257021,-4.316057,0.633929,-4.206280,-5.963362,0.120711,1.702010,-9.716872,-8.582633,-1.308954,1.177772,-5.786123,-2.016125,0.470264,-9.749412,-1.806997,5.413243,-9.070512,4.715696,-1.404273,-3.592291,-2.811076,6.690343,-7.004202,3.673333,-9.780136,0.381241,-1.726819,-3.807610,5.078798,-1.004864,-9.223683,-6.199272,-5.512394,9.707188,0.885665,-4.160857,0.631028,-9.080035,0.495597,-4.485604,9.824931,8.698697,3.425451,1.074686,-5.267061,-2.395998,7.165374,6.402441,0.136450,-6.048115,-3.717547,-0.487149,5.390962,-7.819450,-1.405453,-5.661289,-9.238337,0.739071,7.566156,6.912886,-0.071549,7.479587,-8.523417,2.915771,8.137409,7.710840,-8.170429,-6.876789,-4.614224,1.665986,9.539110,-1.011223,7.041953,-6.398495,3.622111,-5.248603,2.092812,2.020274,-7.565746,9.675369,2.958944,1.664855,-1.843366,0.498583,-0.935602,0.171496,-8.786544,-2.978554,0.698051,-8.498422,-6.546547,-7.575636,-2.296545,8.921267,-6.028718,4.269560,2.179982,-6.143577,-9.090673,6.937538,-2.416349,-8.461762,-8.515584,-3.460731,6.682654,-1.341089,6.905254,-5.310277,7.193806,-5.228594,-4.941878,0.923246,-4.153075,-4.477786,9.470243,-4.942251,-4.485678,-4.151872,2.464966,7.712305,0.586014,-1.120783,-7.933253,7.419900,-5.587669,-9.254108,5.042920,0.963954,5.687987,-7.890364,0.309818,-0.795372,1.968856,-1.825828,8.146854,-4.588213,-9.100069,1.872784,4.844688,-3.764734,-7.771051,-9.868605,-9.668027,0.138507,7.835167,-5.824883,-8.442599,7.625871,4.312006,-7.557310,4.493329,3.658459,9.949036,-2.558258,7.965726,5.207270,5.154248,0.478439,7.077097,8.459919,-0.350589,3.792131,-4.993975,8.226182,-4.368301,-8.657163,-0.514060,6.239854,-5.324678,-9.726073,-3.282586,0.719494,9.346755,4.540227,-8.978915,-3.844884,-1.960161,0.268854,-3.004100,-8.930430,3.414500,-0.772322,0.992751,3.211525,4.702796,3.626725,5.121856,-1.075614,-3.543547,6.605650,-4.135203,3.799668,9.481627,-2.010277,3.078782,3.350979,9.955907,-0.891774,6.357812,0.828292,3.821356,0.351488,6.344737,-9.486818,8.137714,-4.720521,6.490630,2.998886,1.722228,-3.914687,-9.562633,3.131525,6.851897,-5.578763,5.296662,9.469514,7.227015,-1.491109,-6.853630,-1.288244,-2.460160,-8.669154,-6.617269,0.211371,8.861837,5.017114,5.011064,6.220215,-9.060996,0.979358,6.845229,3.839703,8.932747,-5.984301,-2.172943,-9.409034,7.095316,-5.793932,-6.544727,8.290484,4.590051,2.621249,1.986771,2.402696,9.779818,-6.003156,4.674436,1.302293,8.863835,9.530456,-4.822221,-6.524459,-7.460711,0.269781,-9.243160,-0.286381,7.751475,-2.217795,-0.874271,5.637449,7.215070,7.009820,8.603588,1.572498,-0.955590,-6.426134,-3.649438,-2.468350,4.041797,3.290425,2.013970,5.205393,-5.015280,0.416005,2.840677,-8.974841,-9.894521,9.093310,-4.622344,-2.883576,7.831060,5.297988,-1.580234,-2.977541,3.151018,8.848683,5.012007,-2.573626,8.192554,4.296211,-9.820328,5.167285,8.071439,-6.354855,7.733249,-9.361214,7.179766,9.860388,4.430316,2.823376,4.187431,0.495227,8.294169,-3.980048,-6.651522,4.266282,0.056390,7.382868,6.709038,-7.618487,1.336705,-0.816443,-8.130093,-9.395570,0.742341,2.915770,-8.085115,-7.858578,-4.067788,-8.946413,-0.368452,5.314984,-4.882260,-5.833152,-7.215043,2.127706,2.154758,-7.758104,1.297030,8.338951,-9.221865,9.048218,-6.633438,-7.991600,6.897290,5.785354,-2.540972,9.179592,2.710048,-1.830557,8.922151,0.891077,2.926309,-1.429788,-4.462224,-3.468509,-3.338132,-4.427779,5.271050,2.116583,5.070425,-3.082278,6.703532,6.223033,9.585469,-0.390649,6.790119,0.655137,4.866197,7.518957,6.917580,-3.979309,3.402474,-3.437310,5.665008,0.022845,-2.024483,-3.388042,-9.198027,5.126232,-0.222810,-0.797156,0.892290,-5.215205,5.962715,6.292871,8.951073,1.100163,-7.272285,0.210554,8.326658,-6.406790,-0.444813,-0.169513,-1.751932,-7.141088,5.305904,-0.192918,-6.489948,-2.477654,-2.966241,0.831370,9.614860,9.583691,-6.645507,-4.789849,6.285798,-4.740378,0.589186,-8.083863,-6.589067,-0.651658,5.078421,-2.463483,-0.422712,-0.929445,-2.156020,-0.019859,-4.116925,7.663300,8.189261,-4.901597,8.288530,-0.630692,3.371415,-1.830118,-8.278671,-7.085108,-9.948023,3.091398,0.918527,6.975564,0.722698,9.409304,5.790463,4.434702,-0.124558,-2.954566,-6.069461,0.071297,6.286518,6.834865,-9.074925,-9.929399,-1.824280,9.507164,8.954362,-4.603598,0.540221,-3.782154,-9.861602,5.273990,9.472847,-5.467281,-8.960745,-8.931999,-7.456911,4.124797,2.626075,5.613508,-5.348529,8.385839,0.492225,-3.343637,1.147255,-7.403676,-4.946847,4.025912,3.263043,6.636605,7.844350,3.686870,0.199353,-9.448563,-6.166790,2.434160,3.550786,-7.331779,-8.763392,1.486913,8.632374,9.958878,9.881759,-8.844721,1.783145,-6.805820,0.594509,-4.553039,6.689222,2.808604,-2.301339,-6.911134,3.764396,-5.126182,0.176751,8.912059,5.753010,2.006723,2.775943,7.599070,5.026426,3.551694,-6.522089,-7.638788,9.013820,7.332354,-8.135670,9.339213,3.822825,1.109200,7.512133,1.300090,5.606697,4.860382,-9.384632,4.194038,-1.189510,-4.660188,-2.900347,-8.111528,-0.925696,6.053305,4.666209,-6.390273,5.173606,-3.316721,5.513336,0.327696,-1.192602,5.996197,-9.718397,-6.888047,-7.243367,7.772017,6.207910,-6.262100,2.513318,-8.263691,-0.505781,8.974171,-7.121060,-5.475069,-2.867986,9.130134,-6.840913,4.459083,3.718133,8.371098,8.864390,0.201792,3.847874,-3.818571,4.305112,7.446665,-1.662595,5.157496,-5.058904,-5.129718,-3.783523,3.628141,-6.044497,5.822690,8.035951,0.556489,9.967851,9.232820,-8.502695,2.862676,5.679767,7.609004,-6.734177,-4.221513,-0.850771,5.264592,-6.539438,8.505756,3.570883,4.695278,-3.217414,9.929878,2.326794,-8.919759,7.031943,4.451792,-1.800547,-8.034939,-8.313868,-6.246837,1.317051,6.461315,-8.097550,-4.369093,2.489736], dtype = "float32")#candidate|8294|(1690,)|const|float32
call_8293 = relay.TupleGetItem(func_4217_call(relay.reshape(const_8294.astype('float32'), [1690,])), 6)
call_8295 = relay.TupleGetItem(func_4220_call(relay.reshape(const_8294.astype('float32'), [1690,])), 6)
func_355_call = mod.get_global_var('func_355')
func_359_call = mutated_mod.get_global_var('func_359')
var_8298 = relay.var("var_8298", dtype = "float32", shape = (864,))#candidate|8298|(864,)|var|float32
call_8297 = relay.TupleGetItem(func_355_call(relay.reshape(var_8298.astype('float32'), [6, 12, 12]), relay.reshape(var_8298.astype('float32'), [6, 12, 12]), relay.reshape(const_8294.astype('float32'), [1690,]), ), 1)
call_8299 = relay.TupleGetItem(func_359_call(relay.reshape(var_8298.astype('float32'), [6, 12, 12]), relay.reshape(var_8298.astype('float32'), [6, 12, 12]), relay.reshape(const_8294.astype('float32'), [1690,]), ), 1)
output = relay.Tuple([call_8284,call_8293,const_8294,call_8297,var_8298,])
output2 = relay.Tuple([call_8285,call_8295,const_8294,call_8299,var_8298,])
func_8300 = relay.Function([var_8298,], output)
mod['func_8300'] = func_8300
mod = relay.transform.InferType()(mod)
mutated_mod['func_8300'] = func_8300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8301 = relay.var("var_8301", dtype = "float32", shape = (864,))#candidate|8301|(864,)|var|float32
func_8300_call = mutated_mod.get_global_var('func_8300')
call_8302 = func_8300_call(var_8301)
output = call_8302
func_8303 = relay.Function([var_8301], output)
mutated_mod['func_8303'] = func_8303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_8382 = func_3819_call()
call_8383 = func_3819_call()
func_5295_call = mod.get_global_var('func_5295')
func_5298_call = mutated_mod.get_global_var('func_5298')
var_8385 = relay.var("var_8385", dtype = "bool", shape = (14, 4))#candidate|8385|(14, 4)|var|bool
call_8384 = relay.TupleGetItem(func_5295_call(relay.reshape(var_8385.astype('bool'), [14, 2, 2]), relay.reshape(var_8385.astype('bool'), [14, 2, 2]), ), 1)
call_8386 = relay.TupleGetItem(func_5298_call(relay.reshape(var_8385.astype('bool'), [14, 2, 2]), relay.reshape(var_8385.astype('bool'), [14, 2, 2]), ), 1)
output = relay.Tuple([call_8382,call_8384,var_8385,])
output2 = relay.Tuple([call_8383,call_8386,var_8385,])
func_8401 = relay.Function([var_8385,], output)
mod['func_8401'] = func_8401
mod = relay.transform.InferType()(mod)
var_8402 = relay.var("var_8402", dtype = "bool", shape = (14, 4))#candidate|8402|(14, 4)|var|bool
output = func_8401(var_8402)
func_8403 = relay.Function([var_8402], output)
mutated_mod['func_8403'] = func_8403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8455 = relay.var("var_8455", dtype = "int32", shape = (9, 13, 15))#candidate|8455|(9, 13, 15)|var|int32
var_8456 = relay.var("var_8456", dtype = "int32", shape = (9, 13, 15))#candidate|8456|(9, 13, 15)|var|int32
bop_8457 = relay.logical_xor(var_8455.astype('int32'), relay.reshape(var_8456.astype('int32'), relay.shape_of(var_8455))) # shape=(9, 13, 15)
bop_8461 = relay.logical_or(var_8456.astype('bool'), relay.reshape(bop_8457.astype('bool'), relay.shape_of(var_8456))) # shape=(9, 13, 15)
bop_8468 = relay.add(bop_8457.astype('float32'), relay.reshape(var_8455.astype('float32'), relay.shape_of(bop_8457))) # shape=(9, 13, 15)
func_2458_call = mod.get_global_var('func_2458')
func_2459_call = mutated_mod.get_global_var('func_2459')
call_8485 = func_2458_call()
call_8486 = func_2458_call()
bop_8487 = relay.minimum(var_8456.astype('int64'), relay.reshape(bop_8457.astype('int64'), relay.shape_of(var_8456))) # shape=(9, 13, 15)
output = relay.Tuple([bop_8461,bop_8468,call_8485,bop_8487,])
output2 = relay.Tuple([bop_8461,bop_8468,call_8486,bop_8487,])
func_8506 = relay.Function([var_8455,var_8456,], output)
mod['func_8506'] = func_8506
mod = relay.transform.InferType()(mod)
mutated_mod['func_8506'] = func_8506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8506_call = mutated_mod.get_global_var('func_8506')
var_8508 = relay.var("var_8508", dtype = "int32", shape = (9, 13, 15))#candidate|8508|(9, 13, 15)|var|int32
var_8509 = relay.var("var_8509", dtype = "int32", shape = (9, 13, 15))#candidate|8509|(9, 13, 15)|var|int32
call_8507 = func_8506_call(var_8508,var_8509,)
output = call_8507
func_8510 = relay.Function([var_8508,var_8509,], output)
mutated_mod['func_8510'] = func_8510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_8569 = relay.TupleGetItem(func_2118_call(), 1)
call_8570 = relay.TupleGetItem(func_2120_call(), 1)
func_7108_call = mod.get_global_var('func_7108')
func_7110_call = mutated_mod.get_global_var('func_7110')
call_8580 = relay.TupleGetItem(func_7108_call(), 1)
call_8581 = relay.TupleGetItem(func_7110_call(), 1)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_8582 = relay.TupleGetItem(func_2534_call(), 1)
call_8583 = relay.TupleGetItem(func_2536_call(), 1)
output = relay.Tuple([call_8569,call_8580,call_8582,])
output2 = relay.Tuple([call_8570,call_8581,call_8583,])
func_8589 = relay.Function([], output)
mod['func_8589'] = func_8589
mod = relay.transform.InferType()(mod)
mutated_mod['func_8589'] = func_8589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8589_call = mutated_mod.get_global_var('func_8589')
call_8590 = func_8589_call()
output = call_8590
func_8591 = relay.Function([], output)
mutated_mod['func_8591'] = func_8591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_8614 = relay.TupleGetItem(func_1490_call(), 0)
call_8615 = relay.TupleGetItem(func_1492_call(), 0)
output = call_8614
output2 = call_8615
func_8623 = relay.Function([], output)
mod['func_8623'] = func_8623
mod = relay.transform.InferType()(mod)
output = func_8623()
func_8624 = relay.Function([], output)
mutated_mod['func_8624'] = func_8624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6152_call = mod.get_global_var('func_6152')
func_6153_call = mutated_mod.get_global_var('func_6153')
call_8642 = relay.TupleGetItem(func_6152_call(), 2)
call_8643 = relay.TupleGetItem(func_6153_call(), 2)
func_6697_call = mod.get_global_var('func_6697')
func_6698_call = mutated_mod.get_global_var('func_6698')
call_8658 = func_6697_call()
call_8659 = func_6697_call()
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_8664 = relay.TupleGetItem(func_2118_call(), 0)
call_8665 = relay.TupleGetItem(func_2120_call(), 0)
func_4571_call = mod.get_global_var('func_4571')
func_4572_call = mutated_mod.get_global_var('func_4572')
call_8667 = relay.TupleGetItem(func_4571_call(), 1)
call_8668 = relay.TupleGetItem(func_4572_call(), 1)
func_4148_call = mod.get_global_var('func_4148')
func_4150_call = mutated_mod.get_global_var('func_4150')
call_8669 = relay.TupleGetItem(func_4148_call(), 1)
call_8670 = relay.TupleGetItem(func_4150_call(), 1)
func_4963_call = mod.get_global_var('func_4963')
func_4966_call = mutated_mod.get_global_var('func_4966')
var_8726 = relay.var("var_8726", dtype = "float64", shape = (1, 990))#candidate|8726|(1, 990)|var|float64
call_8725 = relay.TupleGetItem(func_4963_call(relay.reshape(var_8726.astype('float64'), [11, 9, 10])), 1)
call_8727 = relay.TupleGetItem(func_4966_call(relay.reshape(var_8726.astype('float64'), [11, 9, 10])), 1)
func_8011_call = mod.get_global_var('func_8011')
func_8013_call = mutated_mod.get_global_var('func_8013')
call_8729 = relay.TupleGetItem(func_8011_call(), 0)
call_8730 = relay.TupleGetItem(func_8013_call(), 0)
func_8044_call = mod.get_global_var('func_8044')
func_8046_call = mutated_mod.get_global_var('func_8046')
call_8736 = relay.TupleGetItem(func_8044_call(), 0)
call_8737 = relay.TupleGetItem(func_8046_call(), 0)
output = relay.Tuple([call_8642,call_8658,call_8664,call_8667,call_8669,call_8725,var_8726,call_8729,call_8736,])
output2 = relay.Tuple([call_8643,call_8659,call_8665,call_8668,call_8670,call_8727,var_8726,call_8730,call_8737,])
func_8759 = relay.Function([var_8726,], output)
mod['func_8759'] = func_8759
mod = relay.transform.InferType()(mod)
var_8760 = relay.var("var_8760", dtype = "float64", shape = (1, 990))#candidate|8760|(1, 990)|var|float64
output = func_8759(var_8760)
func_8761 = relay.Function([var_8760], output)
mutated_mod['func_8761'] = func_8761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1490_call = mod.get_global_var('func_1490')
func_1492_call = mutated_mod.get_global_var('func_1492')
call_8806 = relay.TupleGetItem(func_1490_call(), 0)
call_8807 = relay.TupleGetItem(func_1492_call(), 0)
func_4840_call = mod.get_global_var('func_4840')
func_4841_call = mutated_mod.get_global_var('func_4841')
call_8817 = relay.TupleGetItem(func_4840_call(), 0)
call_8818 = relay.TupleGetItem(func_4841_call(), 0)
output = relay.Tuple([call_8806,call_8817,])
output2 = relay.Tuple([call_8807,call_8818,])
func_8824 = relay.Function([], output)
mod['func_8824'] = func_8824
mod = relay.transform.InferType()(mod)
mutated_mod['func_8824'] = func_8824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8824_call = mutated_mod.get_global_var('func_8824')
call_8825 = func_8824_call()
output = call_8825
func_8826 = relay.Function([], output)
mutated_mod['func_8826'] = func_8826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6298_call = mod.get_global_var('func_6298')
func_6300_call = mutated_mod.get_global_var('func_6300')
call_8849 = relay.TupleGetItem(func_6298_call(), 4)
call_8850 = relay.TupleGetItem(func_6300_call(), 4)
func_3145_call = mod.get_global_var('func_3145')
func_3147_call = mutated_mod.get_global_var('func_3147')
var_8852 = relay.var("var_8852", dtype = "float32", shape = (1690,))#candidate|8852|(1690,)|var|float32
call_8851 = relay.TupleGetItem(func_3145_call(relay.reshape(var_8852.astype('float32'), [1690,])), 1)
call_8853 = relay.TupleGetItem(func_3147_call(relay.reshape(var_8852.astype('float32'), [1690,])), 1)
uop_8868 = relay.atanh(var_8852.astype('float64')) # shape=(1690,)
func_7784_call = mod.get_global_var('func_7784')
func_7788_call = mutated_mod.get_global_var('func_7788')
var_8881 = relay.var("var_8881", dtype = "float64", shape = ())#candidate|8881|()|var|float64
const_8882 = relay.const([10,-8,-1,-9,3,-5,-1,6,4,5,7,1,5,3,-2,-4,8,-5,2,-4,-9,-3,-4,6,-10,-3,10,4,10,9,-8,6,-6,-5,-4,3,-7,-4,3,1,9,-10,-8,6,4,1,2,-7,8,-7,10,8,6,10,-1,3,-7,-1,-9,-4,-4,-6,4,-5,5,7,-1,7,-6,-9,10,-7,6,1,-4,-2,-9,5,2,-8,-3,4,-9,-3,8,1,5,4,-5,9,-9,10,-1,-3,-6,-2,5,2,9,-8,7,-6,9,-6,-6,-6,7,-4,10,1,-8,4,1,7,3,-6,7,3,-3,-10,5,5,-1,-8,8,-8,4,-10,-10,-2,4,-5,9,7,-8,-2,-3,3,-10,5,-2,-4,9,-1,3,-3,-1,-10,-6,-6,-5,5,9,-4,-1,-7,-3,3,-7,10,8,-10,2,3,8,2,10,-3,-7,8,-7,-5,5,2,-2,5,6,1,5,7,5,-9,9,6,1,8,-6,-8,-10,-5,3,-4,-3,-10,-3,6,-6,-5,-8,-3,-4,9,-3,-10,-9,9,7,2,10,-10,9,-3,10,-2,-8,1,5,1,-9,2,8,-10,7,-4,-6,-10,-10,-1,-10,3,7,9,6,-9,10,2,5,2,-6,8,1,-8,-10,5,2,-7,4,9,5,4,3,1,10,9,10,-9,-5,5,-5,-7,-8,4,-2,1,-2,3,3,-3,-9,-8,-10,-9,-1,2,5,-3,-8,7,9,-9,5,8,6,-10,6,4,-4,-2,-9,2,-6,9,1,5,-3,3,-6,7,-4,9,-4,5,5,-6,-2,10,-3,-1,4,2,-2,-7,-8,10,-1,2,-1,-7,2,3,-2,-1,2,7,10,5,-6,10,-7,8,1,-5,-6,-1,6,2,8,10,7,-8,-9,-9,-5,1,-9,-2,-8,3,9,-10,-7,-10,-8,-5,-8,-10,-5,-1,7,-4,10,7,3,10,1,7,-4,2,-7,-7,-1,-1,-7,1,-4], dtype = "uint32")#candidate|8882|(375,)|const|uint32
call_8880 = relay.TupleGetItem(func_7784_call(relay.reshape(var_8881.astype('float64'), []), relay.reshape(const_8882.astype('uint32'), [375,]), relay.reshape(call_8851.astype('float32'), [1690, 1]), ), 0)
call_8883 = relay.TupleGetItem(func_7788_call(relay.reshape(var_8881.astype('float64'), []), relay.reshape(const_8882.astype('uint32'), [375,]), relay.reshape(call_8851.astype('float32'), [1690, 1]), ), 0)
func_7311_call = mod.get_global_var('func_7311')
func_7313_call = mutated_mod.get_global_var('func_7313')
call_8892 = relay.TupleGetItem(func_7311_call(relay.reshape(var_8852.astype('float32'), [169, 10])), 0)
call_8893 = relay.TupleGetItem(func_7313_call(relay.reshape(var_8852.astype('float32'), [169, 10])), 0)
output = relay.Tuple([call_8849,call_8851,uop_8868,call_8880,var_8881,const_8882,call_8892,])
output2 = relay.Tuple([call_8850,call_8853,uop_8868,call_8883,var_8881,const_8882,call_8893,])
func_8894 = relay.Function([var_8852,var_8881,], output)
mod['func_8894'] = func_8894
mod = relay.transform.InferType()(mod)
var_8895 = relay.var("var_8895", dtype = "float32", shape = (1690,))#candidate|8895|(1690,)|var|float32
var_8896 = relay.var("var_8896", dtype = "float64", shape = ())#candidate|8896|()|var|float64
output = func_8894(var_8895,var_8896,)
func_8897 = relay.Function([var_8895,var_8896,], output)
mutated_mod['func_8897'] = func_8897
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8915 = relay.var("var_8915", dtype = "bool", shape = (16, 13, 10))#candidate|8915|(16, 13, 10)|var|bool
var_8916 = relay.var("var_8916", dtype = "bool", shape = (16, 13, 10))#candidate|8916|(16, 13, 10)|var|bool
bop_8917 = relay.logical_or(var_8915.astype('bool'), relay.reshape(var_8916.astype('bool'), relay.shape_of(var_8915))) # shape=(16, 13, 10)
func_5295_call = mod.get_global_var('func_5295')
func_5298_call = mutated_mod.get_global_var('func_5298')
var_8923 = relay.var("var_8923", dtype = "bool", shape = (56,))#candidate|8923|(56,)|var|bool
call_8922 = relay.TupleGetItem(func_5295_call(relay.reshape(var_8923.astype('bool'), [14, 2, 2]), relay.reshape(var_8923.astype('bool'), [14, 2, 2]), ), 0)
call_8924 = relay.TupleGetItem(func_5298_call(relay.reshape(var_8923.astype('bool'), [14, 2, 2]), relay.reshape(var_8923.astype('bool'), [14, 2, 2]), ), 0)
func_4463_call = mod.get_global_var('func_4463')
func_4465_call = mutated_mod.get_global_var('func_4465')
call_8943 = relay.TupleGetItem(func_4463_call(), 0)
call_8944 = relay.TupleGetItem(func_4465_call(), 0)
output = relay.Tuple([bop_8917,call_8922,var_8923,call_8943,])
output2 = relay.Tuple([bop_8917,call_8924,var_8923,call_8944,])
func_8958 = relay.Function([var_8915,var_8916,var_8923,], output)
mod['func_8958'] = func_8958
mod = relay.transform.InferType()(mod)
mutated_mod['func_8958'] = func_8958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8958_call = mutated_mod.get_global_var('func_8958')
var_8960 = relay.var("var_8960", dtype = "bool", shape = (16, 13, 10))#candidate|8960|(16, 13, 10)|var|bool
var_8961 = relay.var("var_8961", dtype = "bool", shape = (16, 13, 10))#candidate|8961|(16, 13, 10)|var|bool
var_8962 = relay.var("var_8962", dtype = "bool", shape = (56,))#candidate|8962|(56,)|var|bool
call_8959 = func_8958_call(var_8960,var_8961,var_8962,)
output = call_8959
func_8963 = relay.Function([var_8960,var_8961,var_8962,], output)
mutated_mod['func_8963'] = func_8963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7039_call = mod.get_global_var('func_7039')
func_7040_call = mutated_mod.get_global_var('func_7040')
call_8972 = relay.TupleGetItem(func_7039_call(), 0)
call_8973 = relay.TupleGetItem(func_7040_call(), 0)
func_7554_call = mod.get_global_var('func_7554')
func_7556_call = mutated_mod.get_global_var('func_7556')
call_8988 = relay.TupleGetItem(func_7554_call(), 0)
call_8989 = relay.TupleGetItem(func_7556_call(), 0)
func_3211_call = mod.get_global_var('func_3211')
func_3213_call = mutated_mod.get_global_var('func_3213')
var_8996 = relay.var("var_8996", dtype = "bool", shape = (576, 1))#candidate|8996|(576, 1)|var|bool
call_8995 = relay.TupleGetItem(func_3211_call(relay.reshape(var_8996.astype('bool'), [576,])), 1)
call_8997 = relay.TupleGetItem(func_3213_call(relay.reshape(var_8996.astype('bool'), [576,])), 1)
uop_8999 = relay.acos(var_8996.astype('float32')) # shape=(576, 1)
func_7134_call = mod.get_global_var('func_7134')
func_7135_call = mutated_mod.get_global_var('func_7135')
call_9003 = func_7134_call()
call_9004 = func_7134_call()
func_7341_call = mod.get_global_var('func_7341')
func_7343_call = mutated_mod.get_global_var('func_7343')
call_9012 = relay.TupleGetItem(func_7341_call(), 0)
call_9013 = relay.TupleGetItem(func_7343_call(), 0)
uop_9014 = relay.sigmoid(uop_8999.astype('float64')) # shape=(576, 1)
uop_9017 = relay.sqrt(uop_9014.astype('float64')) # shape=(576, 1)
bop_9025 = relay.bitwise_or(uop_9017.astype('uint32'), relay.reshape(uop_8999.astype('uint32'), relay.shape_of(uop_9017))) # shape=(576, 1)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_9032 = relay.TupleGetItem(func_3254_call(), 0)
call_9033 = relay.TupleGetItem(func_3256_call(), 0)
bop_9036 = relay.less_equal(uop_9017.astype('bool'), relay.reshape(bop_9025.astype('bool'), relay.shape_of(uop_9017))) # shape=(576, 1)
func_2772_call = mod.get_global_var('func_2772')
func_2774_call = mutated_mod.get_global_var('func_2774')
call_9049 = relay.TupleGetItem(func_2772_call(), 1)
call_9050 = relay.TupleGetItem(func_2774_call(), 1)
output = relay.Tuple([call_8972,call_8988,call_8995,call_9003,call_9012,call_9032,bop_9036,call_9049,])
output2 = relay.Tuple([call_8973,call_8989,call_8997,call_9004,call_9013,call_9033,bop_9036,call_9050,])
func_9058 = relay.Function([var_8996,], output)
mod['func_9058'] = func_9058
mod = relay.transform.InferType()(mod)
mutated_mod['func_9058'] = func_9058
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9059 = relay.var("var_9059", dtype = "bool", shape = (576, 1))#candidate|9059|(576, 1)|var|bool
func_9058_call = mutated_mod.get_global_var('func_9058')
call_9060 = func_9058_call(var_9059)
output = call_9060
func_9061 = relay.Function([var_9059], output)
mutated_mod['func_9061'] = func_9061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4148_call = mod.get_global_var('func_4148')
func_4150_call = mutated_mod.get_global_var('func_4150')
call_9077 = relay.TupleGetItem(func_4148_call(), 1)
call_9078 = relay.TupleGetItem(func_4150_call(), 1)
func_7531_call = mod.get_global_var('func_7531')
func_7533_call = mutated_mod.get_global_var('func_7533')
call_9097 = relay.TupleGetItem(func_7531_call(), 0)
call_9098 = relay.TupleGetItem(func_7533_call(), 0)
output = relay.Tuple([call_9077,call_9097,])
output2 = relay.Tuple([call_9078,call_9098,])
func_9111 = relay.Function([], output)
mod['func_9111'] = func_9111
mod = relay.transform.InferType()(mod)
mutated_mod['func_9111'] = func_9111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9111_call = mutated_mod.get_global_var('func_9111')
call_9112 = func_9111_call()
output = call_9112
func_9113 = relay.Function([], output)
mutated_mod['func_9113'] = func_9113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9128 = relay.var("var_9128", dtype = "float32", shape = (3, 15, 14))#candidate|9128|(3, 15, 14)|var|float32
var_9129 = relay.var("var_9129", dtype = "float32", shape = (3, 15, 14))#candidate|9129|(3, 15, 14)|var|float32
bop_9130 = relay.subtract(var_9128.astype('float32'), relay.reshape(var_9129.astype('float32'), relay.shape_of(var_9128))) # shape=(3, 15, 14)
func_355_call = mod.get_global_var('func_355')
func_359_call = mutated_mod.get_global_var('func_359')
const_9163 = relay.const([-4.976719,9.014910,-9.814312,-0.958831,5.051712,6.920503,-3.525765,-3.649727,-2.954153,7.501698,-7.197904,6.781000,-7.350185,-3.692462,7.572916,0.763153,-5.798902,3.359902,2.502865,1.756383,8.722596,3.618617,5.567117,-4.142142,-2.959200,-2.598262,6.898600,-4.221601,-2.829851,4.799573,-8.934710,1.523726,0.902163,4.742905,-7.857536,-0.141068,0.709308,1.055999,4.126325,-4.563363,6.645927,-3.935547,-5.671858,9.885254,5.596698,-2.072587,9.171831,-2.822376,-1.204890,2.426056,-5.197025,2.883850,-2.875226,-2.530999,-0.936822,2.135234,9.652674,-8.108734,-1.955611,-4.706175,-4.330697,1.847024,-6.158010,1.578166,1.666945,4.169421,-8.020518,4.445899,8.308091,-8.626375,-1.464112,-5.673033,8.555397,5.649643,-7.099744,2.041814,-8.367587,-8.308561,-4.320745,-4.543676,6.324986,1.965015,-3.242567,-5.797827,1.348996,6.810593,-2.993048,6.867969,7.597513,-0.593596,4.869385,-3.919734,-4.355493,-4.714434,-0.228393,1.623760,2.064189,6.596833,1.468042,3.318828,-1.989756,4.587037,-6.021037,-0.359210,8.677266,7.913813,-4.916480,0.915530,3.574418,1.127883,-1.750621,1.154560,-9.228956,7.440752,-3.442646,-2.053167,1.898789,4.520966,-7.513657,4.388971,-0.888281,-5.160781,0.409918,-0.487073,-3.020863,-0.439032,-9.681891,-2.442786,2.848818,-5.816589,-2.551320,-6.958826,-2.530949,-3.911710,-1.242666,4.754683,-5.396769,1.044017,3.127705,-1.740995,-4.128247,-0.146907,-6.677064,9.458399,-1.788557,7.914261,-7.442782,-7.221476,-0.786519,2.946947,6.931928,0.194454,0.811690,4.333435,-7.559556,-9.738284,-3.522890,7.749788,6.220114,-3.044716,1.806062,-9.642220,-3.851660,-6.113263,7.530561,7.803380,-5.931381,4.093990,5.353622,-0.308562,-5.246008,-9.861951,4.818496,-4.557249,-0.964135,-9.336538,-8.657929,6.053993,-4.571695,7.677587,-8.281237,-2.335792,-1.006877,-4.142047,-2.171735,2.318782,4.360812,5.134277,-8.816775,9.210725,1.892708,-1.876300,-7.039994,-5.666487,3.467957,7.381029,-0.014947,7.615028,7.199559,-8.469563,-7.961282,-4.425402,-0.848511,9.495131,2.868099,2.178311,-5.663372,0.346194,-4.796699,4.658701,2.669597,7.602311,-3.082752,-3.506564,-5.336463,2.880631,3.685544,-6.663040,-6.154632,-9.056515,-2.820675,-9.633646,5.424596,1.146145,3.272649,4.167099,2.965292,-5.150856,2.788258,5.018202,5.262162,1.253963,7.955308,-4.650448,7.727075,4.547557,4.883320,-7.823778,5.782579,-6.332830,6.547249,-4.790001,-4.404369,-1.802669,1.025885,0.530336,0.301966,1.533665,-5.156220,-0.125118,-3.525648,1.423346,7.737120,-6.955946,6.757258,3.268636,4.775115,-6.992304,-0.084544,3.225180,-9.893603,-4.806582,6.485629,-8.085833,-4.018488,9.838228,2.626937,-9.303190,1.293030,5.735479,6.577411,7.396554,-9.607016,-0.616940,-8.516703,5.590850,-5.581672,-8.172645,4.473193,4.757236,1.893205,8.790855,2.667912,4.680188,-9.158947,9.287360,9.567408,-5.720512,-1.827112,-9.088851,1.403320,-0.294834,-2.422210,5.404273,9.328628,0.803690,-0.914015,7.878626,-5.185300,-3.497811,-6.395194,-2.827491,-6.244499,2.128802,7.031796,9.226501,1.129212,-3.586427,7.867117,-1.440814,-2.836308,5.741749,-9.165395,-7.837566,-5.012050,8.871584,-3.265445,-5.412943,8.936477,-7.509543,-0.859941,1.715496,7.768778,1.684548,4.923853,5.474573,1.216569,-2.729618,-9.887290,-6.782463,5.316465,7.596260,1.300779,-5.210619,1.796532,4.698234,4.893656,-6.015821,-0.046138,2.835704,5.675452,0.039788,3.224847,-5.717348,-0.093309,-9.937999,-5.919340,3.820673,-5.381895,-5.407017,-2.511927,3.605590,-3.217437,-1.396457,7.336835,6.010048,2.946498,8.717020,-0.051782,-0.955118,-5.481600,2.677228,-2.974651,-3.758886,-4.996525,-0.010227,-3.520817,-8.541159,0.469323,7.385640,-4.146900,2.630402,0.303508,4.131972,-7.538341,-3.440873,-3.048612,-9.877609,-3.756679,7.212062,1.235249,-2.696889,1.315994,9.790629,6.149850,4.943586,7.091516,1.932468,3.420811,-8.838472,-9.300831,-0.087335,-4.386795,5.191841,1.326444,-0.944014,0.083892,-5.070453,3.593399,2.229724,-9.103204,0.854684,-3.418187,-8.853825,3.397865,9.851732,2.651321,-2.818355,-3.369571,3.446417,8.208545,3.059290,-5.533379,3.872119,1.033636,-7.792532,-0.463495,5.954321,5.416340,-3.512826,-1.200208,-3.489282,-9.032862,-0.959614,6.947907,-3.297849,4.133581,5.178407,-4.686297,5.596571,3.918175,9.786361,6.472959,-5.169336,1.023552,3.189623,2.378308,0.913645,6.977568,-0.848286,4.158071,8.823139,-3.377351,-2.480609,0.403699,-9.501187,-2.797123,-6.722949,-4.940327,-3.372867,-6.047962,-6.630712,3.800623,4.061747,2.433685,9.677564,-1.305256,9.927468,2.642591,6.933414,5.668244,-0.386036,-4.498872,-1.755627,4.508566,-4.036754,-3.808830,4.906283,-2.865860,-7.362831,1.169403,6.604038,-6.190117,-2.933113,-1.052828,8.601728,-9.171532,1.648848,-2.086045,1.954817,-4.927573,3.055315,-5.135220,6.267458,5.560374,-1.702000,8.048586,2.747972,-0.513397,-8.616136,7.761222,5.385993,1.682350,-4.989377,-8.673335,5.809620,9.385136,6.815800,-5.483995,9.119872,4.818615,-3.968199,3.150708,-3.821276,7.930684,-6.309476,-1.183716,-8.785709,0.136918,-8.376033,8.549058,-5.431887,-1.152339,-0.748960,-9.134461,3.854807,-2.836407,9.286367,5.853916,4.237673,-7.519637,5.914912,0.397755,-7.685218,1.136331,-5.591999,-1.015849,1.513626,2.417557,8.322807,7.938795,5.180821,-3.632505,6.532290,-7.352688,8.271105,2.684932,-5.266345,-9.742620,0.383828,9.127346,-9.310913,-1.586265,-1.892701,-9.705384,-4.221545,-7.843056,2.139759,-8.801292,-6.688681,9.984681,1.743150,7.145792,-5.706761,-2.095962,3.652365,6.614087,5.048914,6.949838,0.197707,-5.374809,-7.584748,5.992696,8.522356,-0.857793,4.712233,4.827393,-4.143995,-6.302400,0.153591,-0.892087,-9.213848,-0.491074,-5.470281,5.742182,3.447846,1.942969,1.848624,5.793076,-5.718816,-7.710480,-3.864180,-0.703759,-8.639471,8.813758,9.715751,-0.727968,7.711634,5.682670,3.027592,-0.747204,-3.523489,-1.456332,-0.023497,4.388645,0.657787,-1.440016,8.397234,4.783703,0.262382,9.245285,-1.162732,-8.879751,7.797755,3.249509,8.323313,2.861858,1.090370,9.006096,-8.245472,-2.310306,-1.992608,7.620729,8.599364,-1.010271,2.918389,5.593757,2.581054,0.303755,-0.114441,6.431668,-7.331380,8.420314,-7.832232,-6.575650,9.422941,9.859236,3.822739,-1.587623,1.181382,-4.160428,-1.758321,-8.855917,5.022059,-5.559020,1.513110,6.753556,1.685616,3.757370,9.929798,-5.868222,0.812095,5.164974,-5.290493,1.815645,-8.933321,-6.233611,-5.336666,-2.664069,-5.611320,0.961460,3.193845,-1.556657,3.763697,-1.924708,5.436229,-6.703546,-8.864132,0.074036,0.166442,-7.955362,-8.618532,-7.794473,-5.866240,9.424143,-7.136939,-9.361508,3.126139,-4.791539,-8.664867,-5.885535,6.027803,-4.793193,-4.612042,-7.513639,3.492685,5.462210,4.828682,-9.488034,-1.728462,-9.428125,-4.704841,-9.711944,4.557904,-3.021130,-5.651822,7.106004,5.778888,0.450547,-5.295087,2.455954,7.181653,7.518274,8.899344,-8.746080,9.540775,-9.586147,7.794006,-7.993662,8.324952,-2.631109,9.484001,0.293970,-0.683013,-4.501147,-1.037404,-3.123592,-1.650032,-6.317178,7.925109,4.037777,3.328467,-8.325207,6.457809,-7.398977,0.975266,-5.817174,-9.370855,-4.749341,-9.597155,2.211093,-0.036545,-1.118198,-5.885728,-9.653894,0.055617,-3.533579,6.733990,9.170623,9.468372,8.794734,5.967831,7.519975,0.965836,-0.759849,-8.880235,-3.327683,8.820337,0.275441,5.817227,6.016299,-4.910624,-0.251916,-3.365048,-2.709978,9.153462,-3.027702,8.182601,-7.070296,3.931108,-3.456677,1.684033,8.096668,-8.885990,-3.321582,-7.767787,-9.984277,9.490261,6.809407,0.373342,-3.951226,9.642366,8.720818,-3.820906,-8.268379,-7.829449,-4.052712,7.986558,-5.304452,-7.076116,-2.232334,-6.664555,4.435238,5.206152,2.548985,-2.312042,6.921816,-5.159521,-0.428277,-5.496940,3.868592,-9.383981,-4.803247,3.303954,9.587042,1.866838,-5.901385,-6.634871,-3.616139,-9.136087,-1.143995,2.474204,9.431199,-1.135591,-9.081515,-5.594150,1.481509,1.976599,-2.307739,-0.223306,6.397834,2.152121,6.818407,3.928276,3.322916,2.735960,8.366849,3.634639,6.884245,-4.894586,8.838059,8.199502,0.901990,-5.887563,8.101468,3.550463,8.637926,-4.769276,8.617673,-8.565680,-4.346750,-1.381106,-7.705282,-3.390186,-3.855442,2.121174,7.453461,-1.499689,-6.167914,-1.308942,-4.357849,-4.125944,0.549523,-7.974384,-9.509524,9.029366,5.466091,-8.271691,-0.822990,5.805318,-2.428959,-2.801230,4.865423,-5.525529,7.106299,0.356740,1.514009,8.634058,-3.034219,3.776310,-7.359406,7.130642,-7.958041,0.266225,-8.497616,2.246081,-4.926117,-4.938699,4.791116,6.254699,-1.926096,-9.517143,-1.866344,-3.554291], dtype = "float32")#candidate|9163|(864,)|const|float32
const_9164 = relay.const([[2.050860,6.535707,6.696385,-5.834681,-5.799821,2.903448,5.378864,7.051947,3.812943,3.706838],[6.602868,3.270750,7.525691,7.733317,5.500137,8.748006,4.849081,4.997146,6.177583,-7.798435],[-6.133575,8.657906,-8.830020,7.336852,-1.381611,0.437657,-9.891553,0.902898,-8.809242,-6.056264],[1.905104,-2.770257,-4.514901,-8.827651,2.571401,-5.199655,-1.116755,3.411398,-8.016326,5.367172],[-3.608237,-0.552841,0.671574,-8.094261,-5.032056,8.922175,-7.683892,3.733444,9.295292,3.243783],[-7.208306,2.706300,0.077745,-0.682018,9.254429,9.196864,-6.574653,6.608398,8.698254,9.216094],[-7.229151,3.074048,-4.018135,9.284529,-5.396950,-8.006515,-5.148188,-1.139665,9.035083,6.842771],[-7.089932,-3.684125,2.776722,-2.568005,3.074636,-4.635999,-3.193895,6.774859,-3.019706,5.781990],[0.199123,-7.401992,8.815356,1.685787,4.616396,2.076875,0.109387,-9.996997,8.929416,6.083914],[0.307463,-5.344269,-4.398315,-7.725276,2.994656,2.437769,-4.061843,-8.105165,-6.757879,-9.279170],[8.431139,9.524649,7.595257,1.043143,-1.346931,1.272092,-1.964074,-7.079893,8.681517,-9.889253],[-4.136835,3.728989,1.304139,-0.333853,-6.073166,7.261728,-2.626662,-9.348896,-7.473650,1.840622],[1.126374,-6.129549,-0.356842,-0.013157,-7.916622,-9.070102,-0.064787,7.726270,-2.854672,-2.915695],[-5.324980,-7.738385,-1.544523,-4.728797,-0.159015,-3.292759,-1.654679,5.405544,6.502471,0.191451],[-8.852096,-3.138149,4.293350,-5.090045,6.386851,-2.484054,-7.307432,-9.540497,-7.284577,-0.136714],[-9.367684,-7.404195,3.952772,-7.613784,9.658366,-2.351897,1.241253,-2.479888,-5.315825,-1.845007],[9.498143,0.183179,4.386478,8.129181,-2.295762,-4.352032,-0.159036,-4.375889,4.984257,-1.283666],[-0.363557,-4.933428,9.571398,-0.414752,-9.044550,4.785166,-1.029392,9.054028,-1.075557,3.387102],[-8.944597,-2.313879,-0.493112,8.265130,7.208637,-7.346051,-9.226492,0.636602,7.645260,-8.843964],[2.795622,-2.576450,-3.475189,1.455704,-8.340683,-3.600937,8.474073,2.950572,6.320650,1.121044],[-5.323168,-7.453845,-2.795469,-6.769463,7.869745,4.009005,-6.548728,-9.090208,-7.350101,8.552720],[-7.009599,4.636008,-4.171126,6.696853,6.768291,-3.577553,-2.650512,1.008474,1.301247,9.201947],[-6.156872,1.647636,-6.722808,1.573045,2.075308,8.402437,-5.778346,2.998333,5.817811,-9.925381],[7.787854,-1.385750,4.856608,0.998383,4.421306,-6.092895,6.620148,-5.601437,1.327122,-6.752335],[-0.156117,4.353122,8.538795,-7.206630,1.523210,5.734395,0.214225,2.044669,9.893997,5.647168],[0.874505,-2.078591,3.402392,-1.959422,8.765255,-3.009879,-2.897481,-3.084031,-5.882759,-9.844686],[-5.893041,8.708760,4.356839,-0.039400,3.583226,7.737398,1.066132,1.141857,-2.672841,-5.197561],[2.255924,0.267016,-1.097593,8.679933,-4.555502,-9.946410,1.351915,1.920103,-4.524704,-8.898106],[0.966443,-6.145346,9.339672,-7.651755,7.299761,1.304683,2.241740,-0.341189,2.379411,-4.680471],[1.740249,-9.782681,-4.533437,5.439131,1.309198,-8.841769,0.732849,-6.238213,1.773666,-3.384838],[1.070178,1.793538,7.426062,-4.792140,6.053417,-6.287886,7.361832,5.708640,-3.105612,8.199566],[-2.417591,6.327505,-0.909983,2.556199,-6.466580,4.197425,4.913847,-7.979757,-4.690938,4.304613],[1.645518,8.182795,-7.866110,0.024578,1.157577,3.256082,-0.583215,-5.800825,-7.713685,-7.637622],[6.143600,-6.664054,-0.488003,6.257233,6.493263,-6.396685,9.658157,7.149829,3.421832,-2.340372],[3.014468,-9.622661,-8.512028,2.251263,-8.636661,7.063273,8.868440,1.212559,-3.591003,-2.573902],[4.095521,9.327059,-5.143335,5.317340,0.152660,0.923642,9.582204,-8.109315,-8.540711,-0.360537],[-7.468758,-7.323119,1.693680,9.742020,7.476940,1.635653,8.923719,0.344404,7.860980,7.735016],[-3.694820,-8.558942,-7.949219,-2.396594,-6.864456,-7.879003,-6.648578,-6.932253,-9.117959,-5.968455],[1.504460,-3.780761,-7.730153,4.826940,-2.569687,-6.170844,3.620619,-7.379977,9.018258,-9.727496],[6.225259,-2.146384,0.233553,6.962052,0.483560,5.058541,9.416246,5.867840,1.612384,-3.718389],[4.066676,8.738837,7.872284,-7.606280,-8.697280,-8.281651,0.948117,6.429489,2.043667,-9.335874],[-6.323145,0.656222,-7.458587,2.458855,4.740944,8.271709,-0.513635,8.823018,2.257115,5.762202],[-5.611407,6.143272,-0.746436,8.754083,-2.151384,-1.072700,8.417248,-2.075460,-0.793422,-7.869692],[5.586202,-1.707219,-3.360424,2.994211,-6.187453,4.288256,-2.336338,-9.122582,3.275549,-5.552706],[-6.013004,6.003649,5.336462,3.588076,2.106418,6.512469,5.462080,3.227297,-6.894244,3.645615],[9.844264,5.647954,-6.110124,-1.186904,9.166399,2.373293,-8.057140,-5.836063,-2.224548,9.184465],[1.425389,9.860646,4.975899,-4.431717,1.753681,-2.944739,-3.616207,3.603381,1.385287,-8.548759],[-2.285607,-0.448574,-7.446149,-6.580485,-6.177522,7.302874,1.133795,9.051304,5.286602,-4.425494],[5.855953,8.989813,-0.862990,-3.773214,-6.733309,0.812424,-8.130256,7.761543,-0.404102,-5.659144],[-1.582223,-9.855209,-9.568757,-9.746494,7.233871,-7.403612,5.207429,-5.581410,-3.814547,4.958653],[5.565928,-0.692466,2.824220,4.461760,2.339820,-2.305172,9.442344,0.712087,-1.477677,9.160907],[-6.464839,4.734669,4.710477,-3.404955,-8.672719,-9.291748,-0.102064,-5.193284,3.682805,2.871164],[6.535719,-6.559092,-8.189002,-3.165802,3.884830,-5.452397,6.496557,0.645581,3.442072,5.898199],[9.959025,8.429226,-5.991054,8.070948,8.082334,-9.811745,1.022545,8.719798,5.768535,-5.560811],[7.325993,-5.911566,-5.772066,7.243581,4.078628,-4.003728,4.999273,-2.756422,3.662581,3.467685],[-3.385903,3.961194,-4.979714,9.091689,-4.775289,-4.353216,-3.362401,-0.946414,-6.397792,-9.774626],[-7.211107,-5.595487,6.070857,1.540999,8.632584,2.713147,6.913649,6.690426,-7.192771,6.261104],[-9.304106,-0.032455,-4.821508,-6.911011,4.295857,2.401397,5.406552,5.466764,-5.298254,4.440132],[6.613654,-1.553633,0.198389,-0.255050,-4.385213,-7.280145,8.904323,-3.959235,9.964816,-3.007861],[9.249607,7.200959,3.042237,6.855605,8.525228,5.232346,-4.683995,9.631991,0.022687,8.017723],[0.405156,3.774042,-5.034773,1.436780,-0.526269,-9.041749,2.587307,-2.769148,-5.627256,-2.854326],[-0.413567,-8.549843,7.506436,-5.558860,0.532662,1.444507,5.733048,0.582346,-8.190717,7.219725],[-8.367664,-0.416072,5.117199,0.264868,4.969618,-4.027942,9.342019,-0.507882,-4.022812,-1.981304],[-9.853312,9.689165,-4.632170,5.865633,8.149387,1.240218,5.063297,0.913511,-1.493189,-3.464722],[-2.871006,6.112260,-2.163168,0.866393,-0.255984,-0.204840,4.866996,-4.892522,4.945031,-0.233702],[-9.936631,-9.312133,3.748361,0.916669,-2.785250,3.679725,-6.721825,1.113728,-7.603243,5.479313],[-2.747703,4.429473,2.445470,2.894132,-9.311007,5.870067,2.966942,-5.232063,9.338322,-3.718397],[9.072455,1.431630,-6.290814,-2.604198,3.238882,8.680819,-0.183072,0.803066,-0.079312,-9.564425],[-6.135403,4.212620,6.819097,-3.477026,9.766186,6.110734,9.258949,-9.663224,7.125900,-6.940205],[3.774451,-6.167673,5.477919,1.376397,-5.878746,-8.384328,-9.126355,-5.878410,3.418145,-9.522714],[4.018548,2.470088,-1.773551,-5.449598,5.329328,-7.521175,-2.044883,-4.847534,-7.995405,2.938469],[4.144878,6.492014,4.163068,2.407797,8.755419,-5.303243,3.146332,3.149932,4.230684,2.776486],[-9.988760,4.380815,-6.942487,-4.110089,-6.886789,4.076183,2.527473,4.777713,-9.152743,3.800093],[-5.515841,-7.890629,-8.763260,-6.442491,6.249490,-4.595301,9.039075,-4.855267,7.322881,8.390031],[-8.029811,9.435053,7.423279,2.144465,9.296222,4.143767,-6.541216,-5.812277,5.780261,-2.666451],[-6.776287,4.061731,5.165165,-2.513961,-5.264824,-8.597553,-7.701951,6.061897,-8.672705,-3.232401],[2.626733,8.080299,9.492608,-7.458347,-2.285731,-8.340586,0.793456,8.594540,4.204727,9.848494],[8.006748,3.693116,9.520845,0.938602,9.706798,-0.353442,-6.380753,-7.771872,3.206119,-0.403907],[9.027986,-5.096497,-5.845065,2.756202,3.181748,-2.906527,-4.702909,0.112995,-6.116256,1.329858],[-9.872180,-4.392267,-2.685288,-7.424450,-5.017348,2.654171,9.532995,-6.115838,6.544019,-6.278816],[1.531252,2.557566,-3.777095,7.047925,-3.120358,-9.994128,-6.012683,4.537231,0.671830,-3.750132],[-3.327291,2.270537,-6.479315,-2.135853,-8.543878,-7.049397,5.082772,9.482239,-4.329701,-9.554571],[-5.503580,6.945515,9.689072,5.108028,8.025774,-5.836370,1.667371,8.625192,-2.202885,-1.420383],[-2.742296,-5.628783,-5.816099,6.522942,-8.243019,3.662874,-1.718234,-7.018449,0.053101,-0.684263],[3.215574,6.439867,9.333398,-1.001467,-9.894363,-9.501581,-3.141867,-6.751219,-4.700836,8.966059],[6.948714,1.695134,-3.551525,6.806504,6.556753,-5.587586,4.469947,-9.850080,-8.712324,-2.259145],[5.301826,-6.403036,4.851306,-4.855221,-4.033300,-0.353044,2.880904,-2.199044,9.414396,1.337863],[6.352843,-3.277950,3.025721,0.066323,0.451615,-7.524378,-6.358293,-9.055486,8.628720,-1.410395],[7.409616,3.427435,-8.139661,-6.708085,-8.733786,0.046612,9.197467,-6.349160,-7.586921,-9.492764],[3.937259,-4.836683,0.319951,0.777000,9.422135,6.516888,-8.425060,1.246997,-7.092805,3.377889],[-4.314313,-2.737402,-8.497750,-0.241429,7.682127,-1.936405,-7.529463,-7.830778,-1.557961,-3.521562],[0.221161,-5.527644,5.425026,9.451319,0.070002,-9.761801,7.537825,0.425646,2.920326,-1.538874],[-5.510359,6.148847,7.577591,6.884290,2.587080,0.375517,2.555166,-1.208262,-0.755177,-7.546041],[-6.051730,6.216032,3.625596,8.925892,-9.722791,4.762073,7.586562,1.792061,1.151440,-2.348142],[7.924917,0.533505,6.486574,7.482332,3.959108,8.190221,-4.732503,7.463823,9.353172,-9.722828],[-6.971956,-4.260783,-2.087629,-3.990221,-5.363866,-8.768205,2.203809,-6.262129,3.993875,-9.791488],[4.635878,3.203863,-4.151936,-8.299205,8.651822,5.454299,-7.236812,1.551216,-5.631436,-3.679930],[-9.494219,-1.553326,7.015744,-6.512716,-4.956183,0.020046,-2.634210,1.819666,-7.272739,-9.188486],[-7.046744,3.163620,-9.633236,7.813732,9.960719,9.594545,-0.325806,7.989781,4.744630,-3.297015],[-3.631439,1.045711,-3.136081,3.444901,-5.967959,8.895545,7.061698,-5.673066,7.182035,-8.275875],[2.451476,4.879144,3.663686,6.214434,-3.347988,-5.482763,-3.179170,-8.705521,-7.178575,4.437428],[5.469661,0.472969,8.215212,-5.422268,4.997064,6.413978,2.593016,-0.178164,2.129212,8.179209],[-5.417789,-9.249169,1.656471,3.525460,-4.997269,9.578242,1.211971,1.716381,-7.462622,-2.069074],[-6.406618,-3.795757,-8.297614,7.280661,3.587820,9.700012,-4.232447,-2.086222,-2.789379,-7.596115],[-7.725505,2.010226,-7.349105,-0.451188,-0.403439,9.737840,3.887460,-6.879543,-5.298731,0.375080],[-1.488162,4.951327,4.558974,5.299022,-0.345541,-2.186882,1.344462,-0.845475,-2.081913,-1.356361],[0.891648,-3.077503,7.020442,-1.337432,-7.559664,4.216897,8.072025,0.199495,-4.059244,-3.230268],[-5.100728,8.863808,-3.360129,-4.320196,2.374100,-5.079549,-4.707150,0.163683,1.290172,6.340794],[2.256951,8.009494,-1.670492,0.080672,1.034820,9.538571,0.943077,4.296542,-7.491218,-7.336094],[-8.913622,1.007653,3.270548,-3.001715,-2.802050,-6.032015,1.216475,-8.006646,4.615535,-6.824388],[-6.887834,-9.699660,0.088725,9.362158,0.122787,0.449562,-5.744442,-3.272203,3.546111,3.800332],[5.963707,7.219166,0.298086,-4.696251,-4.911999,8.992979,-0.984849,-0.789617,4.634239,7.328016],[2.485560,-2.576114,0.276545,-7.658054,1.433200,0.351963,8.480469,5.256340,-7.496286,3.580139],[2.904509,1.542687,3.362722,2.718419,-7.794038,1.697692,4.951853,6.662159,2.492544,8.522966],[1.015647,4.053030,4.778590,1.884675,-2.054689,-5.397326,5.349488,6.838919,1.841927,5.893703],[5.735948,-3.298568,-8.342756,-7.255096,8.111608,9.665094,-1.486416,7.220726,8.375292,0.827684],[-8.053069,2.868748,-8.683585,-6.834136,1.438244,3.939657,-0.340961,0.978152,5.145545,-1.385927],[3.219752,-2.360688,-3.055383,-9.365712,-2.721740,2.388134,0.514950,0.556346,1.218624,-4.631091],[6.841817,-4.979672,7.703015,4.395883,3.150350,6.184681,6.876496,-6.918863,5.485676,1.258506],[-9.858578,-0.497095,-8.543188,0.651924,7.126799,-7.620580,5.331011,9.869868,1.413433,-1.248019],[-7.547729,9.104243,5.098900,-4.081884,-0.771743,-2.813799,-5.214454,7.361352,-7.054512,4.614808],[-8.280924,8.960832,-5.645222,-6.098493,4.987273,-5.469324,-7.465123,4.180231,5.034191,-6.588214],[4.380488,-3.854589,-4.367937,-2.674166,8.031291,-3.902818,-4.224428,9.019521,-6.098417,-8.086046],[-0.209384,-1.270829,-7.525582,-5.407879,0.253091,-5.407250,-0.203024,-6.550311,-2.771657,8.182412],[-6.605198,7.651549,1.449148,6.707570,-6.303525,0.540214,-9.171885,4.974026,8.084308,-5.739820],[-1.098890,-1.243768,-0.246305,9.238804,0.732809,-7.201182,4.442107,-9.505263,-2.386589,-7.282519],[1.540488,-6.236086,8.808575,6.482912,7.557859,8.610179,-5.357860,-3.881779,5.641872,0.047903],[3.702850,-9.731159,4.007801,3.908206,9.552405,-9.289405,-7.583225,-6.289576,-1.958666,-7.487958],[-3.460802,7.511439,7.829652,7.616136,-5.970234,-9.349356,-2.676368,-9.506127,5.751852,7.322254],[3.811986,-7.648231,-2.154687,-5.707794,-8.854470,3.618795,-2.512746,7.591890,-8.226229,-0.081097],[9.897236,-1.749596,-9.484948,1.907723,6.855994,-1.141076,-1.882520,-7.943076,6.257187,0.489647],[8.384162,-6.349000,5.526057,-6.165253,-3.677562,-9.873043,5.859265,8.423750,5.473677,4.272155],[-3.805149,-4.820629,-5.722881,5.853199,3.187486,7.675237,5.774605,-7.479823,8.115964,6.076451],[-2.386061,7.548017,-9.419470,8.991178,9.560076,-6.523184,-7.728011,-8.089480,1.152515,-4.705280],[-4.129269,-9.917148,-1.384711,1.086252,1.851537,6.488111,-4.436222,2.610874,-3.637740,4.853085],[3.231306,3.467532,-8.261681,3.818213,2.083025,-5.780033,7.942758,-9.182863,2.543643,-3.674366],[-2.493699,-4.813283,-2.690636,6.280389,-0.719853,7.030643,1.199548,8.479297,-5.547713,4.633273],[9.116854,-6.471098,-7.384380,-4.704322,-5.549513,-0.151278,-1.479456,7.391295,-6.171223,4.695512],[1.624293,0.626188,4.649009,-0.432421,3.337535,-6.680184,9.050245,2.273482,4.390752,-9.480855],[-4.472377,-9.215775,3.274099,-3.021516,-4.991986,7.546175,-6.751358,-6.609449,8.654551,8.671174],[0.540820,8.785668,-1.937307,-8.563449,-6.183964,0.013290,-8.815462,-6.456437,-5.744589,7.347438],[-0.868355,-2.184876,3.389374,1.619334,-5.932250,6.424800,-5.689640,-5.345363,-9.642200,-0.708618],[7.074911,3.487895,6.735562,-0.548140,-3.732309,-1.324970,-7.172287,5.684179,-1.240600,-9.570219],[-8.966881,-7.292104,9.089300,1.448946,9.960495,-4.360362,-7.327776,-5.683938,3.792134,5.383632],[5.461214,4.762624,-3.444684,7.657237,6.609535,3.391555,-1.090328,-6.796274,4.685531,9.226391],[6.834630,2.217890,7.694523,2.286346,-4.970865,0.283587,-2.677231,8.986084,2.865943,4.891456],[9.851125,-5.222930,-1.385855,9.242009,6.296668,2.933122,-6.363726,-0.592623,-1.110866,9.515223],[-3.021557,-9.400481,4.180518,7.917241,8.903606,9.015307,-3.961720,-1.520414,-9.115124,-4.358530],[-6.035846,-4.505463,-9.965338,-7.614702,-2.880821,-5.778360,-7.021366,9.970036,-6.324818,3.217791],[-1.680266,-0.107318,-5.790517,5.058788,-1.291640,-6.848190,5.698350,-0.461852,6.265050,4.429373],[-9.942935,-8.865195,-7.945588,-9.977540,4.922219,-4.036396,-3.937676,-6.457750,7.791541,6.397226],[9.656514,-2.110144,-6.567217,-3.381563,-0.411872,0.033808,2.504566,5.714258,7.592116,2.228944],[4.239020,-7.018102,-7.488851,8.649794,0.127365,-4.641725,-7.403287,2.410716,9.095123,1.246442],[0.496331,-6.452439,-5.834714,1.054221,2.273288,-6.900009,-0.441876,-2.898765,1.204219,9.010318],[-2.546588,1.474084,-2.234880,5.370866,8.288903,2.190497,1.382715,3.837339,-8.346477,7.867015],[0.193345,-8.211721,1.998112,8.279950,-3.571771,5.989695,-0.513057,-8.673700,6.836439,-6.535886],[-1.299127,-2.488996,4.006518,4.261387,-4.796678,7.241315,8.252081,6.561535,-7.362126,1.429203],[6.795284,4.521807,-3.614077,7.536131,0.251952,-0.984381,5.679396,9.822921,-4.534493,-4.245681],[6.563859,2.691198,-3.792144,5.891090,4.567611,2.321961,5.706053,-1.872518,-6.693630,-5.348750],[5.879745,6.780132,5.526695,3.452153,-2.470559,-1.751996,3.040619,-3.442408,-1.322800,-5.986130],[-7.924740,3.453344,-1.722890,6.222103,7.976137,-0.811854,-4.359753,7.996849,-9.676862,-8.355752],[3.226968,-9.602960,-7.391447,-5.371702,6.232049,-2.783498,-6.982550,0.084225,6.698401,-4.737293],[-1.886458,8.748814,-1.860206,-9.586262,0.270170,7.118119,3.821473,4.793565,-8.145730,4.553765],[-4.563962,-9.092948,6.803528,1.788286,-7.759938,6.803020,-4.773508,-3.846213,3.459152,9.442216],[4.774880,9.707867,-3.950422,-5.092946,-1.300595,-8.775266,7.325199,-1.552743,8.495598,5.710678],[1.126602,-4.919094,8.312621,-3.353188,-5.873293,8.824053,1.574114,-4.530638,5.249893,-3.231047],[-3.456858,-7.501109,8.026552,-2.304405,-0.070180,6.722903,-8.470751,1.098332,-3.256304,8.339214],[7.154553,-0.752563,5.479027,-2.887284,3.337703,5.083208,-1.801424,0.701854,-8.955981,-3.139723],[8.564733,-7.831529,3.339357,4.771501,4.532532,-5.409332,9.391682,5.289291,-2.610317,8.765796]], dtype = "float32")#candidate|9164|(169, 10)|const|float32
call_9162 = relay.TupleGetItem(func_355_call(relay.reshape(const_9163.astype('float32'), [6, 12, 12]), relay.reshape(const_9163.astype('float32'), [6, 12, 12]), relay.reshape(const_9164.astype('float32'), [1690,]), ), 2)
call_9165 = relay.TupleGetItem(func_359_call(relay.reshape(const_9163.astype('float32'), [6, 12, 12]), relay.reshape(const_9163.astype('float32'), [6, 12, 12]), relay.reshape(const_9164.astype('float32'), [1690,]), ), 2)
func_9111_call = mod.get_global_var('func_9111')
func_9113_call = mutated_mod.get_global_var('func_9113')
call_9181 = relay.TupleGetItem(func_9111_call(), 0)
call_9182 = relay.TupleGetItem(func_9113_call(), 0)
bop_9187 = relay.mod(var_9129.astype('float32'), call_9162.astype('float32')) # shape=(3, 15, 14)
bop_9190 = relay.mod(var_9129.astype('float32'), call_9165.astype('float32')) # shape=(3, 15, 14)
func_7554_call = mod.get_global_var('func_7554')
func_7556_call = mutated_mod.get_global_var('func_7556')
call_9197 = relay.TupleGetItem(func_7554_call(), 0)
call_9198 = relay.TupleGetItem(func_7556_call(), 0)
output = relay.Tuple([bop_9130,const_9163,const_9164,call_9181,bop_9187,call_9197,])
output2 = relay.Tuple([bop_9130,const_9163,const_9164,call_9182,bop_9190,call_9198,])
func_9215 = relay.Function([var_9128,var_9129,], output)
mod['func_9215'] = func_9215
mod = relay.transform.InferType()(mod)
var_9216 = relay.var("var_9216", dtype = "float32", shape = (3, 15, 14))#candidate|9216|(3, 15, 14)|var|float32
var_9217 = relay.var("var_9217", dtype = "float32", shape = (3, 15, 14))#candidate|9217|(3, 15, 14)|var|float32
output = func_9215(var_9216,var_9217,)
func_9218 = relay.Function([var_9216,var_9217,], output)
mutated_mod['func_9218'] = func_9218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_9226 = relay.TupleGetItem(func_3254_call(), 0)
call_9227 = relay.TupleGetItem(func_3256_call(), 0)
func_3778_call = mod.get_global_var('func_3778')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_9271 = relay.TupleGetItem(func_3778_call(), 0)
call_9272 = relay.TupleGetItem(func_3780_call(), 0)
func_92_call = mod.get_global_var('func_92')
func_94_call = mutated_mod.get_global_var('func_94')
const_9274 = relay.const([[-6.445776,-2.849391,-4.079180,6.824474,-4.900979,9.640163,4.158071,-9.932609,-4.637239,3.021115,3.219449,9.248398,-7.746595,-0.162742,-6.347331,7.350083,-7.168346,-7.481329,-0.206449,4.274691,2.305373,-1.109951,-6.145582,5.875017,7.265320,-4.379325,-2.262526,4.296762,-6.696757,4.600226,0.430280,5.866526,-4.329373,-6.216255,-3.152925,2.130406,-4.099341,-8.455990,-1.039220,-6.845738,-9.012280,1.147366,-3.819581,-9.357643,-8.083473,8.242434,-2.921781,6.976581,-0.030619,6.942142,-4.866127,-8.154243,-6.029044,1.572938,-0.476314,-9.122561,-3.163419,7.543634,-2.029112,9.400503,6.748156,-6.563704,-0.573915,8.713999,1.149374,3.984746,8.745272,-6.289969,-1.890658,8.054601,6.112011,5.571111,9.912592,-4.485568,-3.647320,-8.262779,-1.765691,0.528530,4.013270,0.817671,6.107856,-9.044847,4.372711,-9.160807,-4.057770,-7.012824,4.111917,-5.979048,5.934579,-1.460599,-4.790795,4.014108,2.027858,4.526635,1.512337,8.824842,5.277443,-7.870820,8.566118,-3.563827,-6.837225,7.349962,9.329967,-5.681884,3.795991,-9.891497,1.565414,-4.706511,7.488353,9.939712,6.032631,9.370621,-4.892823,8.690537,9.330141,-7.742203,-9.500250,5.260224,0.931144,-8.032133,2.693991,-2.787853,1.210211,8.572979,2.718665,9.756892,-4.537363,6.122080,-0.798306,-8.680740],[5.153025,5.548960,-9.659373,8.803777,-7.007154,-7.195512,-0.608505,9.157135,-2.937278,-9.027819,5.304160,-2.260987,4.100583,7.457601,-3.233364,0.731680,-2.553620,7.592273,3.379611,-7.694364,4.204312,3.039802,9.379391,0.040968,-7.576800,6.915605,6.545763,3.020890,-8.597175,3.674872,-1.438870,-4.751030,6.846419,3.997768,-9.244256,5.229955,3.478499,0.311368,5.088066,-5.214661,5.181350,3.588305,7.169623,5.341231,9.952012,-4.871986,5.103237,-1.535512,-5.522547,6.630778,2.752013,-5.399104,-0.962939,-4.036688,-7.167403,5.831602,-2.132267,3.252084,3.347706,7.660004,8.377118,-0.544295,-4.585592,0.612346,-6.274017,4.086481,4.452219,-9.780450,-1.153194,1.403367,7.980396,-2.506142,-8.704457,6.938718,-4.723567,-5.450229,-7.867162,-1.476262,-0.830091,-0.664771,-7.090597,-3.177526,4.659324,5.419626,3.979865,6.615099,5.084900,4.047041,6.165782,4.211605,1.855455,5.221660,-4.155819,5.602311,5.926740,-5.443608,6.045279,-2.598673,8.774120,-9.012578,-8.782500,-7.104731,6.548808,4.563249,-9.413843,-1.080409,3.472632,-9.586835,6.164028,-2.704171,4.330032,3.447995,8.254512,2.506903,2.411020,-9.295948,2.748517,-1.140929,-3.099400,9.501698,-3.253700,-4.795084,1.564403,-7.415918,-9.665445,-0.235786,7.595297,7.356264,6.512737,5.515551],[-0.590414,-5.080179,-0.068442,0.360433,8.730142,-5.681438,-4.065791,7.961499,8.144172,8.023123,-5.726689,9.830400,9.059074,-7.227704,5.532604,3.578878,6.911940,-5.101335,-4.251686,-9.181988,-1.638968,-2.958686,-6.402817,2.841601,8.156069,0.982236,-1.165661,7.603310,4.418818,-4.838780,8.397620,0.418144,4.141594,6.381836,2.404591,8.442495,-4.559934,-8.885699,2.066994,-1.193871,-2.143662,-4.871666,-0.125608,-7.048826,-2.433984,-3.956401,3.530865,-9.960743,5.946115,-5.839165,-1.826518,4.304519,0.113449,5.746711,9.905030,8.364962,8.282983,-6.568858,4.608075,-6.993961,1.917732,-6.643756,-4.278638,9.831383,-0.223234,-4.012608,-9.739178,0.005464,2.223974,-7.889962,-3.332617,8.038866,-4.488541,1.411591,-6.554196,1.941406,-0.110219,-5.762986,-9.673368,6.130240,-3.287656,6.626376,8.196754,-8.312175,8.537173,3.929658,6.925944,-0.544690,-1.216476,4.235926,4.650160,-2.621798,-0.443721,-9.295313,-2.037701,5.784728,6.172511,5.322517,3.496377,9.658488,0.306081,-4.526184,0.971611,-1.844110,-5.221672,9.135080,-7.220699,-2.234077,-8.486531,2.316438,-8.443422,6.793012,-7.391015,-1.426560,7.350644,-1.472950,-8.837849,6.616304,6.332491,0.288685,1.641037,5.549252,-0.895164,2.511390,-3.726570,1.783380,4.842009,-0.041892,-0.212413,-8.079632],[9.582651,-4.108309,2.655392,8.798450,7.260033,1.031559,4.554024,-8.906018,-0.102041,8.416814,-9.889633,6.745582,2.783944,6.547814,-3.858977,0.986624,5.422103,4.515257,4.578898,8.338023,4.871960,-2.193793,-9.343657,-0.203436,-6.113636,8.213240,-2.739293,-2.374035,9.439756,2.590077,4.388024,1.780318,-8.358873,-5.090007,5.464146,-7.230423,-3.937225,-9.530302,4.464560,1.109224,-0.367172,3.283055,4.757904,-0.900423,4.616597,-2.637732,6.576494,0.689767,-6.346009,7.115036,-8.691870,-0.061179,-8.163416,0.721908,4.318164,2.887169,5.558905,-3.100713,7.966860,3.527773,6.174355,1.435664,3.178485,-0.488474,-8.556569,-6.528158,-3.909231,0.099870,8.671149,-5.971696,1.555483,-1.615006,-3.605368,3.283328,4.856447,1.048715,-4.509666,5.026039,6.576480,5.699890,-6.087909,-1.238101,-5.491325,2.997222,-3.946149,-9.062453,-5.747390,1.230339,-1.236125,-1.272327,8.038469,-9.495941,-5.210380,-5.952109,7.896711,-8.853584,9.179799,-0.397598,-6.067537,9.431498,-0.691940,1.417475,-1.304671,3.343711,8.320790,-5.303535,4.554918,3.849434,5.773032,-4.377970,3.506479,-1.417948,8.952493,5.636094,-7.728471,8.316507,-5.246865,7.621429,2.330510,6.530233,-5.742610,9.004123,-3.668868,-2.425709,-3.198605,1.986879,6.141980,-7.593985,-5.955053,-7.469508],[-8.774566,2.016328,-0.351754,8.675388,-2.309814,6.084170,4.812481,-1.318823,6.868430,4.369275,6.081421,1.591225,-8.284818,-1.883761,3.047445,6.273490,-3.174068,9.274001,-2.171712,-3.206551,9.276385,7.049923,-6.155612,6.123153,-9.028291,-4.775674,8.083824,-2.307494,3.787789,-8.681217,-1.712584,2.434663,9.718175,5.056499,8.068796,-2.048630,0.548665,0.668903,3.217465,2.758414,0.561913,-2.078296,-0.349182,-4.306324,0.105620,-7.966706,1.440591,-5.488431,-9.287234,-8.191598,6.112299,4.164419,-9.655961,-8.957760,9.539324,-4.111089,9.575495,8.022098,1.244250,-9.230548,-2.369711,-4.449385,-7.189495,-9.566112,0.962650,-0.846758,1.367029,1.423196,3.274615,-4.846411,-3.167072,9.236392,3.219078,3.529003,7.214124,0.253035,-1.558849,4.455048,-0.638421,-2.656299,-2.272285,-6.291627,-1.923968,1.566483,9.560947,-4.071484,-9.658432,-2.368305,-4.806612,6.458843,0.064748,8.739454,-1.454896,-2.918327,4.389622,-7.232483,5.494279,6.758940,6.631917,1.155914,-2.305635,-9.927458,-3.917747,-7.289524,-7.360911,-8.510118,-6.755834,7.297299,-8.782331,7.682929,-9.339315,4.683258,-5.193513,7.699261,0.354603,4.904720,-9.666807,3.023274,-7.544060,8.271582,2.288222,-9.860818,-8.646692,-3.237276,8.459361,-9.607950,-8.355239,5.750365,-2.051729,-8.572820],[-7.280940,-6.991558,0.580338,3.703388,7.461317,-6.628995,-9.648888,5.434661,-2.411831,6.189578,9.632369,-2.584262,5.161425,8.698469,-9.893429,2.632724,8.588194,-5.912117,1.067327,-6.509168,-4.260390,2.491564,8.205088,7.314209,2.219855,9.352154,-8.954327,-3.657803,1.968021,-3.185660,6.141379,-6.388263,0.853006,9.429229,-1.995591,6.372092,-4.779939,8.875606,2.966471,9.922095,2.717709,-9.903351,-3.445267,2.773640,-2.507514,-1.656452,-7.744062,-2.443506,8.827501,-1.645833,3.621395,-4.852998,6.834962,2.077412,8.759456,2.380388,5.476234,-7.133498,-9.716005,1.429032,0.913564,-1.542597,4.083140,0.130576,-2.341545,-0.496568,-3.607102,1.922544,7.998216,-2.635861,1.882820,7.531922,3.076793,3.427381,-8.276092,-4.408564,-1.075149,0.137575,0.451713,-4.222790,-5.020084,4.083407,6.083811,-4.522628,0.201119,4.507605,-1.308129,7.020978,8.365642,5.327575,-1.236851,6.758749,-0.792383,-6.689075,-0.555707,2.113685,4.959684,2.782475,4.340275,7.361323,-1.552871,-9.998528,-4.029505,1.463105,-7.417159,9.274700,-9.166136,5.703416,9.012070,5.446151,-9.311813,-1.639953,7.632312,-0.967403,-5.212343,-0.663083,2.727373,2.074931,-9.806145,5.577259,-5.624621,6.248631,3.490563,9.628460,-7.677503,-3.561187,-6.774311,5.378895,-8.886777,-5.721161],[1.256115,-2.227704,8.526140,-7.870382,-2.280128,-6.011532,-9.071074,3.293192,-1.506780,-2.643836,4.786639,9.605701,-6.985893,-9.687234,5.931490,0.278155,5.358258,3.955173,6.224749,-6.806393,6.282215,-8.578011,0.268239,1.354708,1.380160,-0.798597,4.669321,-3.931782,-4.333954,-5.595032,5.225996,1.015356,9.126870,-2.882721,-6.491155,-8.940881,2.631089,-3.901635,7.303970,7.534993,7.031942,7.418314,0.821641,-0.961472,-5.846509,6.903738,-2.923364,-7.155914,1.771575,1.195807,-3.606284,3.588083,-4.240283,-6.812994,-5.506683,-5.264191,5.321639,-7.495994,3.896896,5.421114,6.472973,-4.717633,8.643447,-4.675731,2.848866,-5.309498,7.939314,6.184488,3.751022,8.048088,3.145074,-1.514016,-7.603419,-1.364253,6.199834,4.724656,-3.003244,9.501980,0.718116,0.172464,8.875125,-4.078508,5.404630,-5.998598,8.251848,-2.574146,-2.544468,3.558203,3.621396,-4.632252,4.213189,-7.639957,3.517775,0.885032,9.353302,0.536226,3.048869,1.789827,-0.202965,6.832368,-6.044548,-0.485401,-6.307092,6.990461,7.391633,7.172098,8.722147,6.097082,8.550525,3.653923,9.549228,6.167621,-4.188717,5.697526,-4.384206,-2.761036,4.526735,9.245665,2.251835,5.693157,0.321202,9.235029,-3.344125,1.617776,-4.335702,-0.876675,-3.819895,-5.451898,3.756277,7.939933],[-4.915105,-6.505563,-5.587553,-1.676768,-0.436949,5.628494,-1.460691,-6.542144,8.366520,-6.379396,3.932239,0.184269,-1.980764,-3.575348,6.867851,8.330562,-5.760078,9.206262,-1.632710,-9.021911,-7.988821,-8.985437,-5.747098,7.578345,-4.636489,2.178512,2.580263,2.396977,-3.701486,7.052497,7.294315,-0.986109,-3.116847,2.285295,8.431356,0.859451,5.582739,-2.918745,-4.502036,1.584351,8.993308,-5.034392,9.705348,-2.506260,-6.085135,2.153978,-5.209465,4.891316,-8.414755,7.104100,-9.644647,3.100377,-4.227429,6.903759,1.257625,-3.632604,-6.406810,4.814449,-2.243275,1.896285,9.353864,3.475955,-9.286254,-1.931576,9.841059,-0.901753,-8.223247,6.663158,3.941141,-1.117659,5.036099,9.082277,7.086645,4.856603,-4.142085,-5.453270,6.812913,-1.150290,-0.329259,-2.552633,-9.424854,6.345167,-8.971776,-8.013745,-1.604448,1.432721,5.483979,6.161481,8.278741,-2.348517,2.276953,-2.855724,-2.530269,6.632078,4.081852,-4.164392,-9.453187,7.237576,-0.991991,1.928685,-8.972203,-9.397998,6.822138,-4.810363,-3.508371,4.536831,-2.632812,1.945724,-0.604900,1.715871,-5.553890,6.061829,-7.100083,-4.391451,-9.590132,3.716781,-8.409843,-4.667707,0.661314,-2.841215,-3.859556,5.499360,4.709843,2.977469,1.824296,-2.102248,6.430038,1.536395,-5.421458,-5.829558],[8.370398,1.825294,-9.613836,1.185552,-3.885989,9.860447,7.821095,9.771477,7.618297,-3.954484,-0.046771,5.649002,7.011720,6.550173,-8.649304,-1.826468,2.384336,4.566979,-8.101945,6.515562,-0.066077,0.120083,5.904876,8.030019,2.966146,-2.778662,-1.688867,5.305631,-7.241812,1.212661,9.621381,-6.023934,9.010884,-7.829490,-9.314002,-8.662586,-8.144448,9.467346,8.568771,0.609775,-9.698310,-8.781429,7.341432,-0.478258,-0.471755,-8.514018,-6.576254,-7.942136,-6.168387,9.837390,-2.112734,7.226520,9.920307,-2.099980,6.190974,0.455414,5.283564,-9.564632,-0.053090,-0.989574,-8.022839,-5.004538,7.055450,-5.367288,4.961677,8.949064,-7.887379,-2.273810,0.285418,-5.447069,-9.269839,-1.631894,2.129881,-8.535373,-5.426855,-4.700735,2.690774,3.422693,7.981430,-8.128720,6.815104,-5.942394,2.348552,8.063617,5.720933,3.737737,4.732807,-2.653150,4.566397,-9.751184,3.742109,-9.795421,6.258099,-1.860962,-9.652099,0.544995,-7.969590,8.474214,9.245297,-5.439268,-0.594550,-8.339520,0.760638,-4.766936,-2.120230,-5.441530,7.270117,-1.668900,-0.024588,8.284008,-9.478274,-1.571464,-6.869314,-3.311248,-3.898300,-9.290518,-9.820122,1.012192,1.512038,-2.091561,-4.868757,-3.636859,-0.913893,4.560294,3.376271,6.216295,4.089903,-6.756188,4.662120,8.563528],[7.451606,-5.013275,9.859124,5.873946,2.006829,-8.705298,9.299539,4.886328,6.879456,-4.171425,9.757165,-4.125919,-1.686704,-7.925241,0.597867,1.672822,1.234031,5.484368,6.988352,-7.438926,-1.314580,2.775024,7.577674,8.385132,7.580913,2.921108,9.956619,1.971850,-3.730768,1.820147,-0.016962,-4.589590,-9.544191,-3.676882,-2.680222,-7.860493,7.960264,-0.854778,-4.384835,4.445313,-5.189155,-0.556176,5.750204,1.852104,0.958915,5.549684,3.643239,-7.752133,9.125783,-3.605779,4.080043,1.176391,-3.286080,1.711954,7.833645,-5.662042,4.095172,-5.085412,-7.614996,-5.705239,-4.931578,5.403299,0.353853,-0.499507,-6.860930,-6.133627,0.909319,-7.775934,-5.991404,7.642994,0.280615,5.537063,-4.434458,4.056348,1.478995,4.676505,1.941436,7.302083,-5.294672,-8.867949,-4.524476,-8.416274,-2.386950,2.564793,-5.204039,-7.228520,-2.459297,-3.654059,7.210947,-4.374505,2.178726,7.252592,-9.946730,4.845723,-0.742005,-4.026075,-0.423975,-0.062816,5.379542,1.720816,-8.594595,9.065918,6.736449,-8.386462,3.613883,9.577515,-0.697232,-4.202282,-6.043014,5.418787,6.658086,5.951864,-8.528692,-3.140694,-8.513242,4.632560,4.148820,2.381791,-1.021629,-6.390368,-5.605735,-0.388342,-7.871157,-4.533571,-0.203889,9.801726,2.633600,0.986884,-1.592465,4.602397],[-3.357714,-5.960997,-9.619147,-9.025824,3.008550,-7.986306,2.591726,-7.118090,3.439491,-1.292778,-2.835403,7.113349,-8.337584,1.586105,-1.667383,5.858975,7.664767,9.317966,-9.729711,-9.218859,-4.208470,5.138742,4.874000,1.423991,-5.658031,-4.927140,3.430944,-0.847971,-8.991869,-0.354876,5.037398,0.889487,6.748264,-7.924364,6.208382,6.359454,2.747044,9.303306,-0.293584,-1.583937,-9.243911,3.217329,-6.892140,1.409590,5.855523,-9.563607,-1.241710,4.831400,-8.892305,0.141475,-6.019849,0.608737,6.013922,-6.093370,9.039533,5.303533,2.726752,7.431508,-5.385517,9.657262,-6.933831,-4.163902,7.879603,4.276493,2.661269,6.786871,7.265664,-5.809578,9.415434,0.254530,5.053711,-8.970042,6.195550,-0.457760,1.143578,-9.024969,3.071304,-4.716918,-7.517741,-8.690076,-3.558243,-5.326291,-7.861585,-4.072643,8.349140,-6.486301,-9.221148,-2.958263,-5.838822,-6.151847,-6.460688,-9.957728,4.239520,-0.918885,-9.495286,-9.290521,4.789739,-8.111021,7.062060,2.309171,-1.027000,1.244778,5.194303,3.287928,-0.851038,1.678243,-5.249266,0.250489,-0.293854,2.695065,-8.722505,8.310068,-4.953530,-7.302064,-4.936958,6.706227,3.007169,-3.687880,-7.587814,7.359224,0.592736,4.343260,-3.171202,2.440799,-6.667631,3.848812,-2.544288,-8.233139,-1.096544,-3.680307],[5.284180,-8.400890,-7.320101,2.488001,-1.559521,-2.523608,0.282946,2.692563,-9.408165,-6.906080,2.864132,3.543736,-2.130174,8.668334,-4.706368,9.815988,2.910793,3.045076,-9.411414,-0.202985,2.701482,-5.556595,-6.714654,-8.529172,2.417060,1.605090,-4.075982,-7.294797,4.435055,8.712462,-5.929005,0.317281,-2.112778,4.612988,0.175862,7.102399,-3.437166,5.528336,8.103407,0.902511,-1.459761,-0.917044,-2.420654,6.195671,-0.898367,8.730597,2.017438,-3.013419,4.418166,3.894893,2.280371,5.857082,-5.839801,-8.574084,-5.367504,-8.528279,-0.053324,7.596178,-8.192580,-3.547800,-5.713589,2.970029,-2.812797,3.349319,5.727833,-1.576650,-7.647609,1.692438,-2.524445,-9.122771,0.868417,0.264524,6.695173,-2.911715,6.182025,-3.616523,4.205398,-5.560443,8.250876,5.198047,-8.513742,4.416362,-8.565254,8.622020,-9.436364,2.649695,2.596357,-4.804497,-9.271707,-3.559753,9.331866,5.206405,-7.769977,4.783208,0.853763,-5.599550,-9.672091,-3.577154,-4.729789,-4.580601,-7.009168,9.978279,-3.280735,-2.160331,-5.850355,9.932916,-4.156708,-1.630313,-3.021579,-9.222968,1.416610,2.170318,9.106013,-0.004833,1.931312,-0.873633,-1.002337,8.786367,3.461765,2.566245,-5.569217,-1.909219,4.158967,0.809620,-1.504622,-4.052640,6.315067,3.599867,1.685684,-2.784239],[-5.237216,-9.091269,-4.430008,-2.273452,-1.428933,-6.413772,-7.702901,2.460472,9.212108,9.279936,-8.439397,3.309222,1.131351,-4.999573,-7.053529,9.331065,-0.921950,-0.055694,-3.778661,-5.757234,-9.369327,9.853767,4.030204,8.439170,-4.090471,-1.597469,-6.793395,-5.376021,8.532752,-2.585234,7.846446,-2.086924,-7.790252,6.883084,8.217854,8.301771,-5.108982,-2.147270,7.602042,-6.505059,-6.423745,-9.690059,0.565027,-8.743326,-9.552914,-9.491782,0.806083,5.858060,5.831520,-0.952262,-2.872244,2.574771,-3.391333,2.717151,9.356058,6.655161,-3.695166,-4.272514,-9.296421,-0.561593,3.691925,7.345398,-9.392535,-0.117474,4.623689,-2.299298,-2.753410,-9.876642,-0.597342,-3.353059,1.695485,4.369944,-5.333893,3.643087,7.038016,8.036651,6.850845,9.927421,2.159293,3.280806,-9.569903,-4.278141,1.816162,2.993935,-9.914039,1.267513,-4.539223,-3.116720,-5.165077,9.880963,0.230220,7.203962,8.653202,-0.356647,-3.747499,5.300454,-9.784459,-0.799609,-8.009651,8.297777,6.162462,4.577694,5.334171,-3.973327,1.565009,0.525084,-5.890445,1.444168,3.629351,-6.075802,-0.812091,-2.604555,-9.294250,-4.317152,6.413420,1.580108,8.931231,-0.604576,-9.161372,-1.081419,-2.715681,2.134774,-3.781672,2.077524,-5.560423,-8.349035,0.613273,3.684841,4.501640,9.429461]], dtype = "float32")#candidate|9274|(13, 130)|const|float32
call_9273 = relay.TupleGetItem(func_92_call(relay.reshape(const_9274.astype('float32'), [13, 10, 13])), 0)
call_9275 = relay.TupleGetItem(func_94_call(relay.reshape(const_9274.astype('float32'), [13, 10, 13])), 0)
bop_9297 = relay.less(const_9274.astype('bool'), relay.reshape(call_9273.astype('bool'), relay.shape_of(const_9274))) # shape=(13, 130)
bop_9300 = relay.less(const_9274.astype('bool'), relay.reshape(call_9275.astype('bool'), relay.shape_of(const_9274))) # shape=(13, 130)
output = relay.Tuple([call_9226,call_9271,bop_9297,])
output2 = relay.Tuple([call_9227,call_9272,bop_9300,])
func_9301 = relay.Function([], output)
mod['func_9301'] = func_9301
mod = relay.transform.InferType()(mod)
mutated_mod['func_9301'] = func_9301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9301_call = mutated_mod.get_global_var('func_9301')
call_9302 = func_9301_call()
output = call_9302
func_9303 = relay.Function([], output)
mutated_mod['func_9303'] = func_9303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8154_call = mod.get_global_var('func_8154')
func_8156_call = mutated_mod.get_global_var('func_8156')
call_9329 = relay.TupleGetItem(func_8154_call(), 0)
call_9330 = relay.TupleGetItem(func_8156_call(), 0)
output = call_9329
output2 = call_9330
func_9331 = relay.Function([], output)
mod['func_9331'] = func_9331
mod = relay.transform.InferType()(mod)
mutated_mod['func_9331'] = func_9331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9331_call = mutated_mod.get_global_var('func_9331')
call_9332 = func_9331_call()
output = call_9332
func_9333 = relay.Function([], output)
mutated_mod['func_9333'] = func_9333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6077_call = mod.get_global_var('func_6077')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_9376 = relay.TupleGetItem(func_6077_call(), 2)
call_9377 = relay.TupleGetItem(func_6078_call(), 2)
output = relay.Tuple([call_9376,])
output2 = relay.Tuple([call_9377,])
func_9379 = relay.Function([], output)
mod['func_9379'] = func_9379
mod = relay.transform.InferType()(mod)
output = func_9379()
func_9380 = relay.Function([], output)
mutated_mod['func_9380'] = func_9380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6507_call = mod.get_global_var('func_6507')
func_6508_call = mutated_mod.get_global_var('func_6508')
call_9461 = relay.TupleGetItem(func_6507_call(), 0)
call_9462 = relay.TupleGetItem(func_6508_call(), 0)
func_5754_call = mod.get_global_var('func_5754')
func_5755_call = mutated_mod.get_global_var('func_5755')
call_9470 = relay.TupleGetItem(func_5754_call(), 0)
call_9471 = relay.TupleGetItem(func_5755_call(), 0)
output = relay.Tuple([call_9461,call_9470,])
output2 = relay.Tuple([call_9462,call_9471,])
func_9477 = relay.Function([], output)
mod['func_9477'] = func_9477
mod = relay.transform.InferType()(mod)
output = func_9477()
func_9478 = relay.Function([], output)
mutated_mod['func_9478'] = func_9478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mod.get_global_var('func_2101')
func_2102_call = mutated_mod.get_global_var('func_2102')
call_9612 = func_2101_call()
call_9613 = func_2101_call()
func_8894_call = mod.get_global_var('func_8894')
func_8897_call = mutated_mod.get_global_var('func_8897')
var_9636 = relay.var("var_9636", dtype = "float32", shape = (1, 1690))#candidate|9636|(1, 1690)|var|float32
var_9637 = relay.var("var_9637", dtype = "float64", shape = ())#candidate|9637|()|var|float64
call_9635 = relay.TupleGetItem(func_8894_call(relay.reshape(var_9636.astype('float32'), [1690,]), relay.reshape(var_9637.astype('float64'), []), ), 3)
call_9638 = relay.TupleGetItem(func_8897_call(relay.reshape(var_9636.astype('float32'), [1690,]), relay.reshape(var_9637.astype('float64'), []), ), 3)
func_7784_call = mod.get_global_var('func_7784')
func_7788_call = mutated_mod.get_global_var('func_7788')
var_9640 = relay.var("var_9640", dtype = "uint32", shape = (1, 375))#candidate|9640|(1, 375)|var|uint32
call_9639 = relay.TupleGetItem(func_7784_call(relay.reshape(var_9637.astype('float64'), []), relay.reshape(var_9640.astype('uint32'), [375,]), relay.reshape(var_9636.astype('float32'), [1690, 1]), ), 2)
call_9641 = relay.TupleGetItem(func_7788_call(relay.reshape(var_9637.astype('float64'), []), relay.reshape(var_9640.astype('uint32'), [375,]), relay.reshape(var_9636.astype('float32'), [1690, 1]), ), 2)
uop_9642 = relay.cosh(var_9640.astype('float64')) # shape=(1, 375)
func_6381_call = mod.get_global_var('func_6381')
func_6384_call = mutated_mod.get_global_var('func_6384')
const_9652 = relay.const([[False,True,False,False],[False,False,False,True],[True,True,False,True],[False,False,True,False],[False,False,False,False],[True,False,True,False],[True,True,False,True],[False,True,True,False],[False,True,False,False],[True,False,True,False],[False,True,True,False],[True,True,False,False],[True,False,False,False],[True,False,False,False],[True,False,True,True],[False,False,True,False],[True,False,True,False],[False,False,True,False],[False,False,False,True],[True,False,True,False],[True,False,True,False],[False,True,False,True],[False,True,True,False],[True,False,False,False],[False,True,False,True],[False,True,True,False],[False,False,True,True],[False,True,False,True],[True,True,True,True],[False,True,False,False],[False,True,False,True],[False,True,True,False],[False,False,True,False],[True,True,False,True],[True,False,True,True],[True,True,True,False],[False,False,True,False],[False,True,True,False],[True,True,False,True],[False,True,True,True],[True,True,True,True],[False,False,False,True],[False,True,False,True],[False,True,True,False],[False,False,True,False],[True,False,False,False],[True,False,True,False],[False,True,True,True],[False,False,False,False],[False,True,True,False],[False,True,True,True],[True,False,True,True],[False,False,True,False],[False,True,False,False],[False,False,False,False],[True,True,True,True],[True,False,True,False],[True,False,False,True],[True,False,False,False],[False,False,True,True],[False,False,True,True],[False,True,True,False],[True,True,False,False],[False,True,True,True],[True,False,True,False],[False,False,False,False],[False,False,False,False],[False,False,True,True],[False,False,False,False],[False,True,False,True],[False,False,False,False],[False,True,True,True],[False,True,False,False],[True,False,False,True],[False,True,True,True],[True,True,False,True],[True,False,False,True],[True,False,True,True],[True,True,True,True],[False,False,False,False],[True,False,True,False],[False,True,True,True],[False,True,False,True],[False,False,True,True],[False,True,True,True],[True,False,False,False],[True,True,True,True],[True,False,False,True],[False,True,True,True],[False,True,False,True],[False,False,False,False],[False,True,True,False],[False,False,True,False],[False,True,False,True],[False,False,True,True],[False,True,False,False],[False,False,True,False],[True,True,True,True],[True,False,True,True],[True,False,True,False],[True,False,False,True],[True,False,True,True],[False,False,True,False],[True,True,True,True],[True,False,True,False],[False,True,True,True],[True,False,True,False],[True,False,False,False],[True,False,True,False],[True,False,False,True],[False,True,False,True],[False,True,False,False],[True,False,False,True],[True,False,True,False],[False,False,False,True],[False,True,True,True],[True,True,False,False],[True,False,False,False],[True,False,True,True],[True,False,True,False],[False,False,False,True],[False,True,True,False],[True,True,False,True],[False,True,True,False],[False,True,False,False],[True,False,False,False],[False,True,True,True],[True,True,False,True],[True,False,False,True],[True,True,True,False],[True,True,True,True],[True,False,True,True],[True,False,True,False],[False,True,False,True],[True,False,False,False],[True,False,False,False],[False,False,True,True],[False,False,True,True],[False,True,False,True],[True,False,False,True],[False,False,True,False],[True,False,True,False],[False,False,True,True],[False,True,True,True]], dtype = "bool")#candidate|9652|(144, 4)|const|bool
var_9653 = relay.var("var_9653", dtype = "bool", shape = (8640,))#candidate|9653|(8640,)|var|bool
call_9651 = relay.TupleGetItem(func_6381_call(relay.reshape(const_9652.astype('bool'), [1, 576]), relay.reshape(var_9653.astype('bool'), [15, 576]), ), 0)
call_9654 = relay.TupleGetItem(func_6384_call(relay.reshape(const_9652.astype('bool'), [1, 576]), relay.reshape(var_9653.astype('bool'), [15, 576]), ), 0)
bop_9658 = relay.logical_xor(uop_9642.astype('int16'), relay.reshape(call_9639.astype('int16'), relay.shape_of(uop_9642))) # shape=(1, 375)
bop_9661 = relay.logical_xor(uop_9642.astype('int16'), relay.reshape(call_9641.astype('int16'), relay.shape_of(uop_9642))) # shape=(1, 375)
output = relay.Tuple([call_9612,call_9635,var_9636,var_9637,call_9651,const_9652,var_9653,bop_9658,])
output2 = relay.Tuple([call_9613,call_9638,var_9636,var_9637,call_9654,const_9652,var_9653,bop_9661,])
func_9663 = relay.Function([var_9636,var_9637,var_9640,var_9653,], output)
mod['func_9663'] = func_9663
mod = relay.transform.InferType()(mod)
mutated_mod['func_9663'] = func_9663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9663_call = mutated_mod.get_global_var('func_9663')
var_9665 = relay.var("var_9665", dtype = "float32", shape = (1, 1690))#candidate|9665|(1, 1690)|var|float32
var_9666 = relay.var("var_9666", dtype = "float64", shape = ())#candidate|9666|()|var|float64
var_9667 = relay.var("var_9667", dtype = "uint32", shape = (1, 375))#candidate|9667|(1, 375)|var|uint32
var_9668 = relay.var("var_9668", dtype = "bool", shape = (8640,))#candidate|9668|(8640,)|var|bool
call_9664 = func_9663_call(var_9665,var_9666,var_9667,var_9668,)
output = call_9664
func_9669 = relay.Function([var_9665,var_9666,var_9667,var_9668,], output)
mutated_mod['func_9669'] = func_9669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9716 = relay.var("var_9716", dtype = "float64", shape = (2, 15, 3))#candidate|9716|(2, 15, 3)|var|float64
uop_9717 = relay.log10(var_9716.astype('float64')) # shape=(2, 15, 3)
output = relay.Tuple([uop_9717,])
output2 = relay.Tuple([uop_9717,])
func_9722 = relay.Function([var_9716,], output)
mod['func_9722'] = func_9722
mod = relay.transform.InferType()(mod)
var_9723 = relay.var("var_9723", dtype = "float64", shape = (2, 15, 3))#candidate|9723|(2, 15, 3)|var|float64
output = func_9722(var_9723)
func_9724 = relay.Function([var_9723], output)
mutated_mod['func_9724'] = func_9724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9751 = relay.var("var_9751", dtype = "float32", shape = ())#candidate|9751|()|var|float32
var_9752 = relay.var("var_9752", dtype = "float32", shape = (3, 10, 1))#candidate|9752|(3, 10, 1)|var|float32
bop_9753 = relay.power(var_9751.astype('float32'), var_9752.astype('float32')) # shape=(3, 10, 1)
output = bop_9753
output2 = bop_9753
func_9756 = relay.Function([var_9751,var_9752,], output)
mod['func_9756'] = func_9756
mod = relay.transform.InferType()(mod)
var_9757 = relay.var("var_9757", dtype = "float32", shape = ())#candidate|9757|()|var|float32
var_9758 = relay.var("var_9758", dtype = "float32", shape = (3, 10, 1))#candidate|9758|(3, 10, 1)|var|float32
output = func_9756(var_9757,var_9758,)
func_9759 = relay.Function([var_9757,var_9758,], output)
mutated_mod['func_9759'] = func_9759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7341_call = mod.get_global_var('func_7341')
func_7343_call = mutated_mod.get_global_var('func_7343')
call_9792 = relay.TupleGetItem(func_7341_call(), 0)
call_9793 = relay.TupleGetItem(func_7343_call(), 0)
output = call_9792
output2 = call_9793
func_9807 = relay.Function([], output)
mod['func_9807'] = func_9807
mod = relay.transform.InferType()(mod)
mutated_mod['func_9807'] = func_9807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9807_call = mutated_mod.get_global_var('func_9807')
call_9808 = func_9807_call()
output = call_9808
func_9809 = relay.Function([], output)
mutated_mod['func_9809'] = func_9809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7039_call = mod.get_global_var('func_7039')
func_7040_call = mutated_mod.get_global_var('func_7040')
call_9867 = relay.TupleGetItem(func_7039_call(), 0)
call_9868 = relay.TupleGetItem(func_7040_call(), 0)
func_5436_call = mod.get_global_var('func_5436')
func_5438_call = mutated_mod.get_global_var('func_5438')
call_9873 = func_5436_call()
call_9874 = func_5436_call()
func_2118_call = mod.get_global_var('func_2118')
func_2120_call = mutated_mod.get_global_var('func_2120')
call_9883 = relay.TupleGetItem(func_2118_call(), 1)
call_9884 = relay.TupleGetItem(func_2120_call(), 1)
func_4797_call = mod.get_global_var('func_4797')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_9904 = relay.TupleGetItem(func_4797_call(), 0)
call_9905 = relay.TupleGetItem(func_4798_call(), 0)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_9915 = relay.TupleGetItem(func_1986_call(), 0)
call_9916 = relay.TupleGetItem(func_1988_call(), 0)
output = relay.Tuple([call_9867,call_9873,call_9883,call_9904,call_9915,])
output2 = relay.Tuple([call_9868,call_9874,call_9884,call_9905,call_9916,])
func_9920 = relay.Function([], output)
mod['func_9920'] = func_9920
mod = relay.transform.InferType()(mod)
output = func_9920()
func_9921 = relay.Function([], output)
mutated_mod['func_9921'] = func_9921
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9927 = relay.const([[[-2.055978,-6.070780,4.994153,8.269435,8.476048,-1.443442,8.462488,-4.964674,-5.417992,1.278854,0.606096,0.077372,-3.184004]],[[-9.240031,-1.022787,2.729621,-5.896650,-0.186783,3.394134,-1.827258,6.636935,1.194645,-3.919701,1.914016,4.888121,1.845501]],[[3.163718,1.364854,9.753963,6.370481,-0.462825,4.778557,3.176526,-4.154468,3.806045,9.554370,6.917050,5.639818,1.528132]],[[7.251253,4.590341,4.212819,6.259526,-3.270036,-1.934974,-7.011865,-0.397790,4.278969,-7.945098,-7.783710,-1.466509,-7.977210]],[[6.013784,0.305667,-9.199443,9.104637,9.824115,-6.912375,-1.121461,-7.220324,0.071646,8.329134,-2.298842,7.825292,-4.207584]],[[-6.745833,1.197554,5.144284,6.155789,4.813028,0.497806,4.208335,1.695826,7.751603,7.100749,-7.928587,1.399486,-9.878786]],[[9.923300,-7.821655,-7.646678,-5.966485,2.690872,-0.561333,6.774615,-4.973240,-7.692519,6.337567,-9.170674,9.845287,-3.202723]],[[-6.524208,0.038752,1.252291,-4.544426,8.499175,4.228006,-8.598881,7.247694,5.020654,5.427545,8.252097,5.653725,1.653639]],[[8.150192,7.964272,4.161713,1.607243,6.234093,3.820096,-9.323752,-1.034985,-9.956034,-4.203658,4.715032,-4.605279,-3.780737]],[[-4.315136,9.939545,9.893028,2.915729,-0.042550,-0.329827,1.752373,4.530248,5.378871,4.765873,0.833989,-3.415197,2.981812]],[[5.737911,-8.511619,2.214104,0.876919,0.977534,-7.920625,-9.186679,9.174560,-0.420756,-6.726944,0.004530,-6.123487,1.141956]],[[-7.451461,6.644707,3.718489,-4.391638,-0.829672,-9.563860,-4.542064,-3.616183,-3.664065,9.527600,8.335583,8.667014,7.792701]],[[6.052952,4.290407,7.986609,4.394729,-5.428930,6.744299,-7.810649,-9.475925,-3.302196,-9.930979,1.098046,5.389255,-7.062173]],[[3.701270,-5.858726,-2.885491,-1.131273,-0.481507,-3.122772,-3.545148,-4.439529,3.348719,-2.937415,7.382451,-8.116713,9.282705]],[[3.575351,-8.160968,-7.220822,9.692636,6.933958,-6.171409,0.390421,3.038288,-8.088761,-4.800086,-0.442834,-3.472826,-1.710900]]], dtype = "float32")#candidate|9927|(15, 1, 13)|const|float32
uop_9928 = relay.log2(const_9927.astype('float32')) # shape=(15, 1, 13)
var_9940 = relay.var("var_9940", dtype = "float32", shape = (15, 4, 13))#candidate|9940|(15, 4, 13)|var|float32
bop_9941 = relay.bitwise_or(uop_9928.astype('int64'), var_9940.astype('int64')) # shape=(15, 4, 13)
bop_9944 = relay.bitwise_xor(bop_9941.astype('int64'), relay.reshape(var_9940.astype('int64'), relay.shape_of(bop_9941))) # shape=(15, 4, 13)
output = bop_9944
output2 = bop_9944
func_9948 = relay.Function([var_9940,], output)
mod['func_9948'] = func_9948
mod = relay.transform.InferType()(mod)
var_9949 = relay.var("var_9949", dtype = "float32", shape = (15, 4, 13))#candidate|9949|(15, 4, 13)|var|float32
output = func_9948(var_9949)
func_9950 = relay.Function([var_9949], output)
mutated_mod['func_9950'] = func_9950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7039_call = mod.get_global_var('func_7039')
func_7040_call = mutated_mod.get_global_var('func_7040')
call_9955 = relay.TupleGetItem(func_7039_call(), 0)
call_9956 = relay.TupleGetItem(func_7040_call(), 0)
output = call_9955
output2 = call_9956
func_9964 = relay.Function([], output)
mod['func_9964'] = func_9964
mod = relay.transform.InferType()(mod)
mutated_mod['func_9964'] = func_9964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9964_call = mutated_mod.get_global_var('func_9964')
call_9965 = func_9964_call()
output = call_9965
func_9966 = relay.Function([], output)
mutated_mod['func_9966'] = func_9966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2074_call = mod.get_global_var('func_2074')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_9990 = relay.TupleGetItem(func_2074_call(), 0)
call_9991 = relay.TupleGetItem(func_2075_call(), 0)
func_7089_call = mod.get_global_var('func_7089')
func_7090_call = mutated_mod.get_global_var('func_7090')
call_9998 = relay.TupleGetItem(func_7089_call(), 1)
call_9999 = relay.TupleGetItem(func_7090_call(), 1)
output = relay.Tuple([call_9990,call_9998,])
output2 = relay.Tuple([call_9991,call_9999,])
func_10003 = relay.Function([], output)
mod['func_10003'] = func_10003
mod = relay.transform.InferType()(mod)
output = func_10003()
func_10004 = relay.Function([], output)
mutated_mod['func_10004'] = func_10004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2242_call = mod.get_global_var('func_2242')
func_2244_call = mutated_mod.get_global_var('func_2244')
call_10036 = func_2242_call()
call_10037 = func_2242_call()
output = call_10036
output2 = call_10037
func_10050 = relay.Function([], output)
mod['func_10050'] = func_10050
mod = relay.transform.InferType()(mod)
output = func_10050()
func_10051 = relay.Function([], output)
mutated_mod['func_10051'] = func_10051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7039_call = mod.get_global_var('func_7039')
func_7040_call = mutated_mod.get_global_var('func_7040')
call_10066 = relay.TupleGetItem(func_7039_call(), 0)
call_10067 = relay.TupleGetItem(func_7040_call(), 0)
output = relay.Tuple([call_10066,])
output2 = relay.Tuple([call_10067,])
func_10074 = relay.Function([], output)
mod['func_10074'] = func_10074
mod = relay.transform.InferType()(mod)
mutated_mod['func_10074'] = func_10074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10074_call = mutated_mod.get_global_var('func_10074')
call_10075 = func_10074_call()
output = call_10075
func_10076 = relay.Function([], output)
mutated_mod['func_10076'] = func_10076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5436_call = mod.get_global_var('func_5436')
func_5438_call = mutated_mod.get_global_var('func_5438')
call_10085 = func_5436_call()
call_10086 = func_5436_call()
output = call_10085
output2 = call_10086
func_10109 = relay.Function([], output)
mod['func_10109'] = func_10109
mod = relay.transform.InferType()(mod)
output = func_10109()
func_10110 = relay.Function([], output)
mutated_mod['func_10110'] = func_10110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3836_call = mod.get_global_var('func_3836')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_10169 = relay.TupleGetItem(func_3836_call(), 1)
call_10170 = relay.TupleGetItem(func_3837_call(), 1)
output = call_10169
output2 = call_10170
func_10213 = relay.Function([], output)
mod['func_10213'] = func_10213
mod = relay.transform.InferType()(mod)
output = func_10213()
func_10214 = relay.Function([], output)
mutated_mod['func_10214'] = func_10214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10266 = relay.var("var_10266", dtype = "int64", shape = (5, 11, 4))#candidate|10266|(5, 11, 4)|var|int64
var_10267 = relay.var("var_10267", dtype = "int64", shape = (5, 11, 4))#candidate|10267|(5, 11, 4)|var|int64
bop_10268 = relay.equal(var_10266.astype('bool'), relay.reshape(var_10267.astype('bool'), relay.shape_of(var_10266))) # shape=(5, 11, 4)
func_92_call = mod.get_global_var('func_92')
func_94_call = mutated_mod.get_global_var('func_94')
var_10284 = relay.var("var_10284", dtype = "float32", shape = (1690,))#candidate|10284|(1690,)|var|float32
call_10283 = relay.TupleGetItem(func_92_call(relay.reshape(var_10284.astype('float32'), [13, 10, 13])), 0)
call_10285 = relay.TupleGetItem(func_94_call(relay.reshape(var_10284.astype('float32'), [13, 10, 13])), 0)
output = relay.Tuple([bop_10268,call_10283,var_10284,])
output2 = relay.Tuple([bop_10268,call_10285,var_10284,])
func_10286 = relay.Function([var_10266,var_10267,var_10284,], output)
mod['func_10286'] = func_10286
mod = relay.transform.InferType()(mod)
var_10287 = relay.var("var_10287", dtype = "int64", shape = (5, 11, 4))#candidate|10287|(5, 11, 4)|var|int64
var_10288 = relay.var("var_10288", dtype = "int64", shape = (5, 11, 4))#candidate|10288|(5, 11, 4)|var|int64
var_10289 = relay.var("var_10289", dtype = "float32", shape = (1690,))#candidate|10289|(1690,)|var|float32
output = func_10286(var_10287,var_10288,var_10289,)
func_10290 = relay.Function([var_10287,var_10288,var_10289,], output)
mutated_mod['func_10290'] = func_10290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4979_call = mod.get_global_var('func_4979')
func_4981_call = mutated_mod.get_global_var('func_4981')
call_10314 = func_4979_call()
call_10315 = func_4979_call()
func_10286_call = mod.get_global_var('func_10286')
func_10290_call = mutated_mod.get_global_var('func_10290')
const_10317 = relay.const([6,8,6,5,6,7,6,-7,-10,1,-4,5,-3,-3,4,4,1,-6,-2,3,6,-3,7,-1,-8,10,-7,5,-5,-2,2,10,9,-8,-6,-9,4,-5,2,5,-10,-4,-1,6,9,6,-5,-3,-4,-5,6,3,6,9,5,9,-1,2,-4,-8,10,2,-10,-10,-10,5,9,-5,7,4,-2,-9,8,2,2,2,-4,7,-3,-10,-2,-8,4,-5,-9,-5,1,-3,5,-10,-7,-9,1,7,-3,-5,-2,3,8,9,6,-8,5,-8,7,7,2,-5,2,-7,8,7,6,-8,-9,-2,10,-3,-3,3,-9,-4,-6,4,-10,2,-2,10,10,-2,6,5,-6,-8,7,9,-4,5,-3,-10,9,-2,3,-8,-1,-4,-6,10,-5,-3,4,8,-6,-9,-3,3,-1,2,-7,6,3,-5,-1,1,5,-10,-7,-4,5,-1,2,-2,-8,-6,-5,5,4,-6,-2,3,-2,-6,-3,-9,6,7,-5,1,-3,10,-1,7,2,-10,-10,-4,6,-9,-10,7,10,4,-3,1,-3,-6,-4,10,4,-2,5,-7,6,1,-6,-4,4,-2,-4,-5], dtype = "int64")#candidate|10317|(220,)|const|int64
var_10318 = relay.var("var_10318", dtype = "float32", shape = (1690,))#candidate|10318|(1690,)|var|float32
call_10316 = relay.TupleGetItem(func_10286_call(relay.reshape(const_10317.astype('int64'), [5, 11, 4]), relay.reshape(const_10317.astype('int64'), [5, 11, 4]), relay.reshape(var_10318.astype('float32'), [1690,]), ), 0)
call_10319 = relay.TupleGetItem(func_10290_call(relay.reshape(const_10317.astype('int64'), [5, 11, 4]), relay.reshape(const_10317.astype('int64'), [5, 11, 4]), relay.reshape(var_10318.astype('float32'), [1690,]), ), 0)
output = relay.Tuple([call_10314,call_10316,const_10317,var_10318,])
output2 = relay.Tuple([call_10315,call_10319,const_10317,var_10318,])
func_10325 = relay.Function([var_10318,], output)
mod['func_10325'] = func_10325
mod = relay.transform.InferType()(mod)
var_10326 = relay.var("var_10326", dtype = "float32", shape = (1690,))#candidate|10326|(1690,)|var|float32
output = func_10325(var_10326)
func_10327 = relay.Function([var_10326], output)
mutated_mod['func_10327'] = func_10327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4840_call = mod.get_global_var('func_4840')
func_4841_call = mutated_mod.get_global_var('func_4841')
call_10409 = relay.TupleGetItem(func_4840_call(), 0)
call_10410 = relay.TupleGetItem(func_4841_call(), 0)
func_547_call = mod.get_global_var('func_547')
func_550_call = mutated_mod.get_global_var('func_550')
var_10424 = relay.var("var_10424", dtype = "int16", shape = (22, 4))#candidate|10424|(22, 4)|var|int16
call_10423 = func_547_call(relay.reshape(var_10424.astype('int16'), [11, 2, 4]))
call_10425 = func_547_call(relay.reshape(var_10424.astype('int16'), [11, 2, 4]))
output = relay.Tuple([call_10409,call_10423,var_10424,])
output2 = relay.Tuple([call_10410,call_10425,var_10424,])
func_10428 = relay.Function([var_10424,], output)
mod['func_10428'] = func_10428
mod = relay.transform.InferType()(mod)
mutated_mod['func_10428'] = func_10428
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10429 = relay.var("var_10429", dtype = "int16", shape = (22, 4))#candidate|10429|(22, 4)|var|int16
func_10428_call = mutated_mod.get_global_var('func_10428')
call_10430 = func_10428_call(var_10429)
output = call_10430
func_10431 = relay.Function([var_10429], output)
mutated_mod['func_10431'] = func_10431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3778_call = mod.get_global_var('func_3778')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_10435 = relay.TupleGetItem(func_3778_call(), 1)
call_10436 = relay.TupleGetItem(func_3780_call(), 1)
output = relay.Tuple([call_10435,])
output2 = relay.Tuple([call_10436,])
func_10445 = relay.Function([], output)
mod['func_10445'] = func_10445
mod = relay.transform.InferType()(mod)
mutated_mod['func_10445'] = func_10445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10445_call = mutated_mod.get_global_var('func_10445')
call_10446 = func_10445_call()
output = call_10446
func_10447 = relay.Function([], output)
mutated_mod['func_10447'] = func_10447
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10455 = relay.var("var_10455", dtype = "float32", shape = (5, 14, 1))#candidate|10455|(5, 14, 1)|var|float32
var_10456 = relay.var("var_10456", dtype = "float32", shape = (5, 14, 15))#candidate|10456|(5, 14, 15)|var|float32
bop_10457 = relay.power(var_10455.astype('float32'), var_10456.astype('float32')) # shape=(5, 14, 15)
output = bop_10457
output2 = bop_10457
func_10475 = relay.Function([var_10455,var_10456,], output)
mod['func_10475'] = func_10475
mod = relay.transform.InferType()(mod)
mutated_mod['func_10475'] = func_10475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10475_call = mutated_mod.get_global_var('func_10475')
var_10477 = relay.var("var_10477", dtype = "float32", shape = (5, 14, 1))#candidate|10477|(5, 14, 1)|var|float32
var_10478 = relay.var("var_10478", dtype = "float32", shape = (5, 14, 15))#candidate|10478|(5, 14, 15)|var|float32
call_10476 = func_10475_call(var_10477,var_10478,)
output = call_10476
func_10479 = relay.Function([var_10477,var_10478,], output)
mutated_mod['func_10479'] = func_10479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10445_call = mod.get_global_var('func_10445')
func_10447_call = mutated_mod.get_global_var('func_10447')
call_10624 = relay.TupleGetItem(func_10445_call(), 0)
call_10625 = relay.TupleGetItem(func_10447_call(), 0)
func_9920_call = mod.get_global_var('func_9920')
func_9921_call = mutated_mod.get_global_var('func_9921')
call_10626 = relay.TupleGetItem(func_9920_call(), 3)
call_10627 = relay.TupleGetItem(func_9921_call(), 3)
func_4909_call = mod.get_global_var('func_4909')
func_4912_call = mutated_mod.get_global_var('func_4912')
const_10629 = relay.const(-6.632604, dtype = "float32")#candidate|10629|()|const|float32
var_10630 = relay.var("var_10630", dtype = "float32", shape = (72,))#candidate|10630|(72,)|var|float32
call_10628 = func_4909_call(relay.reshape(const_10629.astype('float32'), []), relay.reshape(var_10630.astype('float32'), [9, 2, 4]), )
call_10631 = func_4909_call(relay.reshape(const_10629.astype('float32'), []), relay.reshape(var_10630.astype('float32'), [9, 2, 4]), )
func_4246_call = mod.get_global_var('func_4246')
func_4248_call = mutated_mod.get_global_var('func_4248')
var_10639 = relay.var("var_10639", dtype = "float32", shape = (264,))#candidate|10639|(264,)|var|float32
call_10638 = relay.TupleGetItem(func_4246_call(relay.reshape(var_10639.astype('float32'), [4, 11, 6])), 0)
call_10640 = relay.TupleGetItem(func_4248_call(relay.reshape(var_10639.astype('float32'), [4, 11, 6])), 0)
output = relay.Tuple([call_10624,call_10626,call_10628,const_10629,var_10630,call_10638,var_10639,])
output2 = relay.Tuple([call_10625,call_10627,call_10631,const_10629,var_10630,call_10640,var_10639,])
func_10645 = relay.Function([var_10630,var_10639,], output)
mod['func_10645'] = func_10645
mod = relay.transform.InferType()(mod)
mutated_mod['func_10645'] = func_10645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10645_call = mutated_mod.get_global_var('func_10645')
var_10647 = relay.var("var_10647", dtype = "float32", shape = (72,))#candidate|10647|(72,)|var|float32
var_10648 = relay.var("var_10648", dtype = "float32", shape = (264,))#candidate|10648|(264,)|var|float32
call_10646 = func_10645_call(var_10647,var_10648,)
output = call_10646
func_10649 = relay.Function([var_10647,var_10648,], output)
mutated_mod['func_10649'] = func_10649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4979_call = mod.get_global_var('func_4979')
func_4981_call = mutated_mod.get_global_var('func_4981')
call_10706 = func_4979_call()
call_10707 = func_4979_call()
output = call_10706
output2 = call_10707
func_10708 = relay.Function([], output)
mod['func_10708'] = func_10708
mod = relay.transform.InferType()(mod)
output = func_10708()
func_10709 = relay.Function([], output)
mutated_mod['func_10709'] = func_10709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4797_call = mod.get_global_var('func_4797')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_10715 = relay.TupleGetItem(func_4797_call(), 0)
call_10716 = relay.TupleGetItem(func_4798_call(), 0)
output = call_10715
output2 = call_10716
func_10726 = relay.Function([], output)
mod['func_10726'] = func_10726
mod = relay.transform.InferType()(mod)
mutated_mod['func_10726'] = func_10726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10726_call = mutated_mod.get_global_var('func_10726')
call_10727 = func_10726_call()
output = call_10727
func_10728 = relay.Function([], output)
mutated_mod['func_10728'] = func_10728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_10732 = relay.TupleGetItem(func_3254_call(), 0)
call_10733 = relay.TupleGetItem(func_3256_call(), 0)
output = relay.Tuple([call_10732,])
output2 = relay.Tuple([call_10733,])
func_10735 = relay.Function([], output)
mod['func_10735'] = func_10735
mod = relay.transform.InferType()(mod)
mutated_mod['func_10735'] = func_10735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10735_call = mutated_mod.get_global_var('func_10735')
call_10736 = func_10735_call()
output = call_10736
func_10737 = relay.Function([], output)
mutated_mod['func_10737'] = func_10737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9111_call = mod.get_global_var('func_9111')
func_9113_call = mutated_mod.get_global_var('func_9113')
call_10742 = relay.TupleGetItem(func_9111_call(), 0)
call_10743 = relay.TupleGetItem(func_9113_call(), 0)
func_355_call = mod.get_global_var('func_355')
func_359_call = mutated_mod.get_global_var('func_359')
const_10758 = relay.const([9.071451,0.865657,9.429231,6.034067,-0.722584,9.003132,-5.347211,3.662398,-5.346750,1.820179,-4.920277,-0.873254,-5.035420,6.080140,-5.444598,-0.389548,-3.047901,2.523151,-7.393340,-8.031095,-0.275672,-0.168746,0.969728,-1.605714,-4.080391,5.910884,0.465743,3.582219,7.392571,6.655984,3.365240,3.591762,4.840739,6.333253,5.455466,7.336275,4.969043,4.744818,5.402462,-5.308730,1.980480,-7.219349,0.853015,-5.283282,-9.549053,8.290801,-4.546483,-8.709428,6.640932,6.624456,6.730387,-6.559108,-3.337587,5.702392,-8.910847,9.966875,2.760081,-0.223710,4.512663,4.167768,-3.710218,2.446744,2.967287,8.900444,0.880817,-7.683507,9.979032,0.450031,-0.226859,2.604145,-4.063776,-0.840609,2.063023,5.619993,-4.933006,-9.343914,7.869241,1.336518,6.627038,9.509637,2.514283,-0.726932,-4.591381,4.744477,-4.178847,2.618896,3.546145,1.423819,-2.255749,-5.259909,3.819932,-1.437381,-2.256785,-4.717494,-9.316420,5.025905,3.052732,-9.011501,3.869774,-2.302488,-3.021162,8.038824,6.156735,-9.901910,4.884196,-0.706839,-9.827960,5.598667,-0.643822,-9.999302,2.451972,8.738242,9.561062,-4.968633,0.086492,7.587516,0.240165,0.213826,0.267739,-4.769691,-7.999542,6.476961,8.487559,-6.186218,-6.293486,-4.862418,-7.695184,-9.637566,0.032706,-0.146418,3.424023,7.542040,-2.096835,-3.928220,-1.668633,-2.849394,0.092687,7.624754,-5.178698,8.455548,1.682629,-9.134991,5.871946,7.281390,-7.952591,3.140794,7.372038,-2.873377,0.459791,7.364209,8.453572,6.054635,-7.909943,-3.455068,-5.299987,2.946061,7.842239,2.266552,0.544820,-3.936567,-7.385531,6.367494,-8.355897,-9.335499,-1.329171,8.487184,1.788757,0.482420,-3.104301,2.614298,6.160678,-6.316845,-9.440716,1.398153,-6.213751,8.599071,5.359749,4.808263,-3.113100,8.350984,0.331100,6.504831,7.049680,-5.724865,-8.340046,-1.296329,1.733264,-1.934363,-8.533825,9.270613,9.356628,-3.147898,2.124379,-7.742830,0.462530,8.906092,1.640348,1.840981,4.769424,-6.651842,6.026106,4.952900,1.185328,9.847176,2.588590,-8.424316,6.376470,4.821711,-0.303046,9.495273,6.411000,9.340436,8.435275,-9.157458,-5.627708,-0.915490,9.928622,-8.078423,8.475381,4.478869,-1.671698,-2.315854,-1.614078,5.089917,2.810968,-8.197685,3.607149,3.919947,-2.764106,9.553744,-3.118580,3.485727,2.082588,-2.394663,9.555306,5.717790,-2.671449,8.666548,2.090288,9.570914,3.370667,2.463189,1.558328,3.841004,-5.708356,5.869558,-5.682145,6.988866,-0.968858,3.683648,7.535142,-3.749335,-8.959557,-9.506503,-6.939915,-3.410155,9.064503,-2.000503,3.513089,-5.457554,-7.811263,-7.253158,-8.689802,-2.148721,-5.641117,-5.586533,-0.085906,9.191045,2.739341,-1.371063,6.773551,8.512215,-9.831424,-4.662768,-9.139465,-2.445283,-5.595449,1.663844,-0.843052,1.278283,3.414892,-9.433773,-3.204725,-3.163225,7.381262,4.090426,-6.316428,8.253047,-0.357181,-9.892002,-4.573647,0.216540,1.338686,-3.769846,-4.185276,-2.081671,6.920508,2.841792,-6.773299,8.696702,-6.904149,1.235447,-0.857908,-6.109872,-1.118781,6.863735,7.016226,5.848935,2.197005,-5.131842,2.180889,-3.382784,5.488841,7.756560,8.447820,7.742286,4.900563,-7.564756,9.270784,3.997915,0.887078,-1.273469,5.071777,-4.091348,6.020203,5.497686,4.151641,-4.201059,1.902440,9.291203,-2.183453,4.898198,2.681609,3.005891,-1.840842,-5.607891,2.182863,-7.705995,-6.622162,-9.607649,2.903135,-7.785439,6.467040,2.587191,-3.406363,5.669352,8.604914,6.319056,0.365039,1.031441,2.336769,1.327928,-6.389292,2.653378,-8.798199,7.039626,4.674361,3.732579,-9.807046,-6.171563,5.524623,7.202365,-9.466778,2.318809,-5.340084,4.917303,-9.339203,-9.482564,-7.639872,2.724271,3.137405,-5.516066,-3.754635,7.720169,-5.081841,-6.903036,-3.388668,-4.077516,-4.470599,-4.679546,-9.107399,-2.058641,-9.924801,6.365930,-3.524813,-8.961863,2.744204,3.274606,-3.507814,-7.875525,-0.823619,-7.657612,9.110393,1.697233,-6.410540,-3.877622,4.399649,9.512056,7.477530,-3.950574,3.334482,-5.235535,7.583766,-1.890258,-2.094859,-3.464772,4.328624,6.973849,8.868510,-1.814620,-2.159859,-0.448724,9.884758,-5.856077,-8.772220,2.815475,7.188791,4.611061,8.105195,-6.896089,-3.742656,-5.589827,6.268781,-7.844508,-5.574953,-0.665193,2.920610,-1.528837,-1.081822,-6.435532,2.175180,-6.468628,8.778447,3.545565,4.104489,-0.146300,-0.617180,-9.700972,8.799669,-4.805839,3.597004,-0.602758,0.314417,-7.882641,4.767342,-2.614065,-7.147998,6.853971,-3.808413,-7.970596,-8.236646,-7.238154,6.923645,-5.454199,9.362203,-2.567414,4.806168,-4.985087,0.604858,-8.213487,7.786618,5.335276,8.907302,7.666427,7.786931,-6.320637,-7.398052,-0.419667,3.176575,-3.855925,4.252818,3.438667,-9.653834,7.672744,-3.491804,-3.545494,-2.721703,1.634724,8.944623,-7.030933,-2.057225,-8.518892,9.989746,-4.327553,-7.676451,4.224801,9.524686,-3.878409,-4.449789,0.880190,-4.719914,-3.245488,9.191385,-5.452567,-5.792682,7.160385,0.625803,-6.428080,-2.868771,1.184233,9.476813,-2.610596,-9.086957,-9.273889,-5.030502,2.022371,-1.124060,-9.641326,-4.323066,-6.832104,6.129723,7.937916,5.112626,6.987643,8.269596,-8.212447,7.669258,8.231020,-5.963463,7.399240,-1.840971,1.246303,-0.225877,-0.740386,-3.450190,-5.938722,5.791924,1.089476,9.787370,-6.617364,5.782067,6.115327,-8.057825,-7.136884,9.699625,2.542975,8.334861,-9.405143,-7.603638,-8.800962,7.433334,-7.595693,-8.416670,0.121436,-1.062501,-6.702280,8.723788,9.223152,6.334875,-9.227305,7.232926,-0.333620,-6.162415,-6.952291,5.284375,2.763439,7.609662,3.446615,7.101080,6.465654,8.954206,-5.947842,-3.105993,-6.972392,3.928258,-5.153790,-7.354760,2.931809,1.205148,-0.620604,-2.832646,3.900152,0.649079,-4.681316,3.350628,8.485321,2.786452,4.814898,7.150883,8.613130,-9.564081,1.609145,-0.122251,6.639009,-9.736466,9.524906,-1.414801,8.407634,3.225216,-5.202287,7.637952,7.736509,2.735795,-4.954037,-3.540155,-1.219537,2.324266,-3.383506,-8.653216,2.689746,4.394680,-0.576057,1.752520,5.461169,2.238823,-9.145273,3.249765,1.548250,-5.096469,5.444455,-4.259102,-1.063963,5.629442,5.825308,-4.630497,3.864961,6.765135,0.539187,7.496477,-8.328525,3.380943,7.223304,-7.517636,4.572452,4.542259,-0.979423,-7.634404,4.211352,5.545054,-7.349578,-5.683334,1.183046,7.025002,-1.729812,0.302112,5.753436,8.445088,-7.072777,7.827976,0.413235,-7.250641,-1.928513,-5.922543,5.112206,2.475099,6.507101,9.252382,8.751537,-6.777554,8.937466,-3.048215,-1.331309,7.642164,-4.464599,-9.336189,2.979378,3.662867,-6.183889,-4.270636,2.286992,5.404917,0.254518,4.296312,4.221923,-8.159058,9.337472,8.673451,5.966769,-6.694617,9.057163,3.273883,-6.492288,4.371279,-8.454914,-8.393800,0.278337,-0.704261,-2.085017,3.742074,9.066912,-9.057347,1.472167,-6.362680,-9.720523,-0.195028,-0.408034,7.697028,-1.673870,1.581806,-6.511386,-4.124260,2.948557,-5.825218,-3.985732,3.551052,2.039384,-6.020398,8.959289,8.434492,-1.689512,9.616559,0.144674,7.439449,3.347406,-7.957030,-0.744833,2.975755,-3.787043,0.981183,-6.282331,-3.359960,-4.175902,-9.081921,-0.788233,8.583754,3.500707,6.158798,7.640138,-2.566962,0.012897,-5.650981,1.080468,4.470331,5.988376,-4.041292,7.475477,-1.012794,0.234094,9.245993,-7.829068,-3.894729,7.235092,5.429454,-9.822089,-5.607194,-9.602579,4.075807,-0.484390,0.622599,1.802155,9.262031,7.688374,-3.758675,-1.926100,-6.459836,7.197298,-4.696901,-0.844660,3.790874,9.169908,-9.664706,8.427995,2.583902,-4.004128,7.022493,-9.173364,-8.380923,-3.867392,0.568610,-6.995746,-5.792922,-4.782939,-6.388762,-5.857880,-2.228260,9.796570,9.955138,-2.736360,3.391397,-9.406690,1.120568,3.388107,-1.779936,-4.457088,9.866449,7.749733,-2.865766,-4.099347,-0.780887,4.787501,6.930525,4.875236,3.469652,3.018846,-3.196994,0.937469,1.236881,7.726465,6.487810,7.587661,-6.640095,-5.161494,-8.275698,2.927893,6.677542,8.319207,-4.893120,0.866120,6.945955,-8.158981,-2.677902,2.837584,-0.963402,8.085273,-0.321338,-7.955875,7.452148,-6.257326,-4.539668,-5.090276,-7.132964,-6.760527,-6.866444,-3.473595,-9.982493,1.381669,-4.584813,-2.447222,5.661448,-0.843801,-6.676000,-3.598445,9.081622,-3.356040,1.680970,2.371785,-2.475241,-2.741877,-9.720268,-9.219354,8.116170,7.523889,-7.088684,-5.952042,-5.578323,-7.194959,-4.728775,-3.416370,2.397203,4.301436,-7.881812,-8.022657,-2.189309,1.417502,4.530621,1.527794,-4.916668,-6.104896,4.041041,-6.959709,-4.063057,-3.767891,-0.405745,-1.698175,9.948528,-0.766485,0.074808,7.603521,3.223399,-2.499338,-8.715975,2.509009,-5.571474,-5.215882], dtype = "float32")#candidate|10758|(864,)|const|float32
const_10759 = relay.const([5.849285,2.786866,1.350857,6.165054,-9.999015,-7.219623,-6.333461,-2.692272,-9.588219,1.047018,3.696096,2.764847,3.336847,0.360447,-2.449522,-5.461529,-7.953614,-2.161754,1.354227,7.687530,-1.233898,0.511115,0.716062,6.308351,-7.960802,3.814890,-4.939527,0.923777,-8.470562,0.793017,3.641530,7.850301,1.343910,6.685576,3.486758,-5.129491,-7.277986,2.580443,8.574418,4.597296,0.365579,-3.128358,-4.395252,9.126022,-7.356615,3.512430,-2.202097,7.612043,-4.722907,-5.071418,8.939146,3.772834,-7.904162,8.657423,4.498061,-1.367081,5.671680,5.779797,-4.359070,-4.662593,8.199109,8.882603,-0.483491,9.795568,3.291235,5.573243,-9.206684,4.884631,0.656908,-1.107236,1.433598,8.902118,3.505025,-6.148161,8.660274,-3.770134,7.474111,-0.827799,-7.903138,-9.695537,-4.085478,-8.882743,2.390895,4.519320,-5.025358,1.051803,-3.279634,-8.378768,7.745561,-7.637254,-4.309788,3.541132,-1.944213,8.349434,3.432442,-7.949520,2.400413,-3.799185,-3.355358,7.282884,-5.058135,8.369295,0.489558,-7.171214,-4.364487,0.973687,-7.796773,-1.956667,1.358252,8.251728,-7.647005,-9.939986,5.354976,-4.883142,-1.738890,-7.919320,-8.608654,-6.113692,-0.465080,7.826878,1.657130,5.679833,5.745773,-6.199759,4.483221,-3.409056,7.418760,-7.831443,8.758711,4.856669,-8.877380,-0.982052,8.017001,4.092735,-5.238278,-0.357479,8.529627,0.149603,-2.776184,0.309845,8.301019,4.821377,-9.136591,6.306882,-7.744092,-1.077302,6.440369,5.457372,1.191685,-1.858610,0.870315,0.275751,-3.409845,-1.114428,-5.006981,-4.207153,6.020345,-6.595462,1.303185,7.216686,-7.278479,7.619396,2.793239,-8.501154,6.584394,-9.351402,-9.485624,8.399991,-8.033875,6.975096,-3.116472,-3.531876,0.865760,2.213640,4.717532,-1.151811,-2.822182,3.779765,-1.705004,-0.450508,-7.989595,7.088311,-4.028214,7.890055,-6.348984,0.168645,-5.565513,-9.907370,0.308709,4.318234,-1.521215,-6.544084,2.476860,-3.296869,-2.734215,4.312086,9.023303,5.422415,7.461115,-2.694746,2.862153,-0.620723,-4.069477,7.245695,8.131682,-8.124866,-1.761648,-8.294641,-9.149957,9.916459,-1.943793,0.759564,4.287350,4.298785,6.427159,-7.117343,-6.574415,-2.731926,3.693733,-6.280408,-1.832187,9.799062,6.505240,-3.083725,-4.819397,-1.497834,-0.637287,5.721922,-5.326517,7.674865,-9.616677,-8.014507,-5.170809,4.390169,-3.716059,-7.240166,-2.632055,4.155519,-6.455574,2.996232,-6.913881,7.629684,7.374389,-1.988167,5.592991,3.879072,-0.810635,-3.800795,8.939849,-9.497773,2.560815,-5.525823,-5.762327,-8.575373,-5.372802,-4.943935,3.300822,3.165154,-8.876611,1.806020,5.383474,7.599445,-2.031330,4.260847,-8.868485,-6.954302,-3.045829,2.796368,-0.770808,2.670579,-4.638861,0.636076,3.144400,-4.120952,6.886086,-1.853557,9.452484,-1.646814,1.280173,4.330033,7.318861,-1.046129,-7.980755,0.572482,3.321589,0.843705,-8.267091,4.815265,-7.657914,6.721636,0.774031,-4.856188,9.350194,9.033283,-6.035206,-1.857110,-1.217614,-4.417617,2.677065,6.495869,-2.781596,-0.290332,-1.629172,1.248562,6.811326,-1.586634,-8.039993,5.214794,7.251752,-0.542164,8.646530,7.568673,6.387288,1.759075,2.211206,3.580665,9.817759,-0.733847,-1.241196,-0.612321,-2.546418,-9.459718,-3.280288,1.061959,-0.030445,7.958657,-5.915889,9.102147,-1.431482,-1.728544,-8.631498,-0.563123,6.423116,7.916143,-9.590620,-7.910383,-0.585709,3.296273,-5.133632,-2.458701,-0.807938,9.262600,-8.589009,4.894590,4.304256,3.253683,5.550726,2.904447,-5.565011,-7.485458,1.180238,-9.894722,-1.508368,-8.321235,-1.565883,9.802572,-0.711566,4.908335,-5.720624,-6.917233,9.284571,7.185124,8.395681,1.792048,0.713872,-9.385381,-3.330519,-6.909479,-8.377198,-2.309591,9.983148,2.870467,-9.526130,-2.515388,8.471608,-4.847795,-4.853490,-1.458909,-7.605367,-9.225376,4.329674,-5.021149,7.501673,-5.564784,0.709694,-5.191234,1.261052,3.857056,-0.677248,-4.406425,-4.529233,-5.340716,-4.992180,-0.025067,1.713006,-9.483362,0.597377,-0.314219,7.444142,-6.389125,5.223537,1.227543,-7.740062,-7.692671,-5.120917,3.918549,8.239911,-8.479454,-8.243809,1.279060,5.726499,-2.416088,-4.794518,7.681044,-1.383365,2.558429,-9.287080,-0.512741,9.384715,4.295613,8.353188,-9.621312,9.340643,-1.079049,0.270579,9.035851,1.841611,9.066912,-8.621732,2.313355,-9.107488,5.226675,3.645730,3.374007,-1.994283,-0.901028,9.728359,2.654295,9.935031,-3.664241,4.354977,7.177139,-1.096950,-7.025795,1.571141,8.900685,-8.895504,-1.701755,-3.688860,-8.975224,1.351385,-0.287830,8.971169,7.621941,1.397488,3.677963,5.600837,4.564127,5.624874,-1.331302,8.156107,-6.522008,-4.742953,1.018099,8.083613,-6.269127,-3.508748,6.005520,-3.720657,1.745589,2.717418,-1.571498,6.408282,-0.887209,2.190082,-2.467936,-8.090817,5.731673,2.193391,3.517874,-0.791616,1.951807,-4.320016,7.685150,4.478539,-3.700303,6.918026,7.755923,-1.954610,-1.099226,9.366428,-0.951710,4.192992,-0.121580,-6.266888,4.266214,2.538737,9.089059,-2.047320,-8.975870,1.680341,-4.118506,3.703402,-4.535125,2.421552,-5.058268,5.466081,-9.382268,-3.569076,0.380197,-5.959822,8.999058,-8.082756,2.175059,0.170836,-1.317539,-4.120667,-5.030769,8.687998,3.633632,5.266685,9.724183,-8.753280,1.001866,-8.713142,7.330639,-5.483567,3.106067,2.804400,6.088022,-8.102293,-7.936091,-7.134564,9.714940,9.845959,-3.208275,-1.737290,7.452164,1.035824,4.407505,2.515719,-8.916187,4.108059,-3.791825,-2.387856,-5.202166,-5.992288,7.420153,6.723583,-1.111315,2.632336,0.878378,-8.070622,-1.381438,4.194348,8.991473,-9.252071,-3.722709,3.449863,-8.440827,-8.353057,5.818951,0.731923,4.684641,9.687620,5.529374,-0.233575,-4.110829,3.680341,-1.968321,-5.231170,-8.712868,2.929959,-6.636221,9.959812,-9.754110,2.160496,-5.398616,-5.579639,6.508698,6.922692,-0.893055,9.430683,-2.377651,5.331903,-4.150336,2.985624,-4.242978,5.350145,8.908371,-0.059338,7.991423,1.980143,-5.281032,3.596940,3.160671,8.292164,2.004479,-4.868181,4.902025,-7.878312,5.957378,-9.480770,0.214513,8.805348,3.098465,-8.335198,2.141609,-8.962258,-5.512649,-3.350467,5.470122,3.148802,-1.976251,-6.888111,-0.941741,8.452104,-5.659783,1.399834,-3.818278,7.392114,-4.993034,-1.168089,6.232127,-6.530906,-1.180535,-4.796513,-6.267559,-7.712143,4.600515,-5.984065,-1.253213,-7.785176,-5.814997,-5.268774,-6.345649,-5.564388,6.794275,-8.108493,9.550775,-6.523462,2.641728,2.694678,7.972524,1.514790,6.716702,-1.525924,0.990840,-2.812210,-4.402550,-4.667177,-7.247209,-9.098418,7.904505,7.868509,2.320422,7.868404,-7.950823,-3.107069,-1.639705,-5.414534,4.264967,3.419911,3.777972,-9.406260,-9.766299,-6.044244,7.498379,1.616811,-5.163912,-8.725410,-9.251039,-1.259465,-6.206725,-1.884166,-8.934423,-3.824960,3.214711,0.386712,-1.515276,4.128353,-9.855231,3.501688,-8.210354,6.696023,6.618599,-7.508443,4.928969,-1.038825,7.553901,-0.794371,-6.289942,1.499861,5.606593,-5.363478,7.215679,-8.446447,-4.287304,7.887872,-4.255764,1.751936,-3.274958,-8.203659,-3.152569,-1.180746,9.475031,-0.363995,3.694173,-8.678872,-6.470961,-9.078023,-6.931264,6.886085,2.797963,2.842199,2.534112,7.784048,-2.429004,0.468941,0.759367,-9.701508,3.580333,-2.254005,-1.626057,8.642392,4.368929,-3.758827,-6.355700,-0.559982,9.553279,-2.452323,-6.346202,-3.280109,7.667502,-0.834180,2.251286,4.750657,0.663888,-9.969175,-2.942724,-0.371383,8.249771,4.410092,-1.827232,5.898948,9.330085,2.969326,-8.241954,-2.018873,4.611343,-8.266187,2.550909,8.814635,8.770750,4.807325,5.591877,8.847786,-8.094376,4.841908,5.123932,-9.954821,-6.515126,-8.624685,-3.999411,-9.472783,2.397300,-3.180512,-2.067899,9.479839,9.286929,-4.495501,-2.854024,-1.569291,-1.482683,-6.611195,-2.297821,6.654142,-5.297693,8.917588,-3.327367,-6.532212,-6.837083,2.646799,9.105493,-6.633924,7.192925,5.814440,4.427816,-4.096658,7.614766,3.646957,-8.654130,-6.093906,-2.665936,8.269396,9.705027,2.494682,-6.745614,5.084199,5.975467,4.850400,-5.505560,9.682721,-1.351015,3.603627,-2.880390,0.440436,3.195565,4.138067,-0.066719,3.061384,-0.757514,3.688415,5.940619,-6.198969,5.229639,4.721379,8.298504,6.252993,-6.506765,8.490873,0.412030,2.324561,8.200756,-1.708941,2.039832,1.010975,-4.949633,6.180008,8.934697,2.096983,2.102298,-9.329775,0.825614,-9.089896,5.227550,-3.159996,-8.653940,7.864188,-1.574396,8.727834,6.384434,8.946878,-0.702308,5.639144,3.844430,-2.720839,0.087109,9.374217,-2.527166,8.042242,2.479650,-1.621040,8.088123,0.909369,7.456451,-5.145534,-5.745731,9.576441,-0.982527,-1.824760,2.632513,-1.722117,-0.514699,5.705190,2.275731,-2.785520,-1.978676,-4.457527,-2.505541,2.324860,6.025874,0.051871,3.876186,-7.760739,2.269688,8.263084,1.590411,-9.338846,8.875828,-2.060513,-6.659297,-1.021229,0.042489,-1.903629,-7.150059,5.524250,8.467824,0.420062,8.888402,-3.322811,7.547622,3.318240,3.123439,-6.170130,6.221460,0.227480,8.501353,-3.554171,7.824553,-7.156175,-5.031948,5.273877,-3.171315,0.634977,-4.541276,2.694893,7.055694,-8.273206,-0.272687,-6.098960,8.712330,3.556073,7.906398,8.072310,-2.919100,-7.627485,8.235676,8.536348,4.358461,-0.735667,-1.320492,1.843655,-3.840502,9.702299,-6.150899,6.488158,9.327154,-0.054938,-0.175146,5.786135,4.593663,-1.566712,7.246232,5.811374,-8.435256,-2.127074,3.822911,-0.173148,4.248223,-1.294382,2.137527,8.648478,-5.967507,6.005549,8.417799,2.796914,7.844774,-3.193767,9.970991,3.968789,9.597895,1.594545,6.903500,-4.706306,2.818667,-8.138056,-1.469269,7.277486,2.940910,-9.109219,-1.208538,8.082823,8.829318,-5.031517,5.261404,-6.758162,-6.837571,7.217518,8.846744,-0.897325,-2.363217,-6.674411,5.084238,3.888535,-0.098922,7.418703,-2.743952,-1.087779,-9.293073,-7.347994,-4.679924,-6.162697,-5.870170,-7.730544,-7.335793,-7.737301,1.138636,8.307038,8.335837,6.905243,-1.901926,-5.838665,-5.474916,-2.353402,4.643528,-6.002143,7.384755,-8.092955,3.178640,-1.494234,-4.666569,-4.329468,4.466123,-0.797237,4.888093,-8.854784,-8.637191,-5.840210,-4.323294,-4.042118,2.232010,4.711461,1.947322,1.286880,7.194121,-9.663200,-1.317852,6.606894,7.148547,-8.173261,-3.169396,-0.320422,2.734698,4.722247,-0.099261,-1.513546,-4.509388,-6.316517,3.622588,-6.214802,3.626542,-1.429983,-0.275736,5.853649,6.390555,-3.211428,7.961415,2.204026,2.258402,-5.538268,-8.606101,2.788938,-2.512143,-0.156114,2.743678,-0.222383,-1.761066,8.873866,0.692621,-3.174208,-4.121104,-2.511666,1.238290,3.376550,-6.559391,-2.719471,-8.485212,9.698161,-9.569146,-3.792342,2.923127,-1.528144,-3.008976,-8.219684,8.893722,-0.237841,0.868083,8.731652,-9.566412,6.306067,-6.932530,9.798527,9.130824,5.719590,1.869158,-0.287011,1.139136,-5.713421,-8.233434,7.655915,3.881433,8.471291,-6.097529,4.020474,4.324059,9.459500,8.067959,-8.453183,5.399995,-1.756157,-3.609782,0.550873,6.344490,2.545202,-9.085394,9.224414,-8.403603,-9.200199,1.627078,-3.807864,-1.650911,-3.021524,-2.130340,3.288030,4.025268,-3.075164,-0.907173,4.292686,1.157302,6.625706,9.471038,4.632701,3.186671,-7.466540,-1.851996,-7.919602,-3.268004,-1.362020,2.686323,-6.251234,1.412213,-9.238462,2.162010,9.155461,-1.371713,-2.488749,-4.476371,-1.964405,-2.692088,-1.014995,6.957043,2.471558,-3.088240,-3.725695,1.752478,-6.052455,-8.775408,-6.392268,-6.722726,-2.691576,-0.185490,-4.180116,5.706878,5.067688,1.696468,-5.493318,-7.481226,-9.951901,5.291020,-7.954365,4.873983,8.622511,-8.236350,6.435582,3.669661,4.337052,5.128797,-7.033921,-4.004204,-0.904580,-3.027622,-8.937303,-1.586736,3.427263,-9.774276,1.651428,-3.497636,5.810875,-2.656771,5.711771,-5.307364,-2.153785,-1.553546,-6.293898,-0.634975,-5.223642,8.434230,7.334074,3.983744,1.526193,-8.087877,1.587436,1.260015,0.727806,-6.607265,-3.763517,-7.456298,-5.125972,2.122935,7.155721,6.513452,-8.083458,1.541664,-6.163703,-8.499990,-3.903550,-2.123309,7.471105,-7.648353,-1.467561,8.346415,4.196867,3.027737,-5.605057,4.541277,-3.933447,6.727618,4.581187,-2.023901,2.466169,-3.713557,3.213811,-9.473042,-7.165197,-6.886717,5.268092,7.721885,6.612420,-7.814964,-6.988389,4.723789,-0.565555,8.160804,2.471923,1.218186,2.730696,-2.481874,0.015564,1.553035,0.375365,-7.803545,-9.153087,-9.234796,-1.599232,8.494248,-8.516654,1.658218,-2.841202,-7.592557,-4.111485,-4.379659,1.535237,-2.267628,0.224049,6.710154,7.666841,7.390686,5.792310,4.853552,-3.176032,-9.931730,-7.047991,8.015278,8.128705,-9.810921,-5.425434,7.060803,-5.037008,-3.213537,7.617179,-9.499248,2.549696,-0.899143,6.347026,-7.319502,6.922687,-6.598878,-0.550092,-4.686312,-9.084050,1.793415,6.977504,-5.417306,-9.301540,-1.657670,-3.153028,1.650001,-1.941031,2.294513,6.160471,-9.703607,-8.658498,-0.650523,-5.993859,-1.404301,-0.171241,9.675848,-9.780165,2.107854,-5.081001,4.431319,-1.994323,-3.163601,-4.437370,0.124546,0.602611,-5.355694,-8.686278,-6.962239,3.591218,3.439517,-0.588915,-3.524968,5.389353,-5.001365,3.796546,-9.768417,-3.204918,-6.773065,-7.168430,-7.382267,4.665691,-4.915476,-8.480493,8.343137,2.987683,9.224094,8.931325,4.934571,1.848542,8.816365,4.861327,-5.956699,-8.765369,-2.910294,-5.053010,5.497409,-2.582850,-8.458954,-0.860876,-2.723441,-1.658617,-6.099453,7.371718,-7.679380,5.528692,3.116253,-5.249541,-6.304952,2.841863,3.039503,3.728077,5.887913,-3.971829,-8.465801,2.380933,4.520132,-8.666061,-1.046353,7.833489,-9.369656,-4.837850,9.372888,-0.389826,7.783486,-2.072742,9.111706,2.545737,8.032223,-3.430529,1.403551,7.957405,-1.023173,-2.461361,4.677258,7.949404,-6.468723,-4.310724,-5.383847,9.874388,-8.851133,8.748759,1.890339,-8.089860,-4.843991,9.418650,9.504642,-6.190333,-5.800840,-9.414362,-2.889803,-2.724710,5.021024,-9.577328,9.672648,1.062641,-6.196403,3.005531,-2.733868,-5.117704,5.444437,-2.411803,-0.076961,-1.035196,8.727715,0.744188,-9.709549,-1.538647,-1.782399,-8.775316,-2.639807,5.595737,-5.126129,-2.549352,-6.015157,9.034939,-7.162856,-7.840891,7.592630,-6.285990,0.921557,-8.243354,2.398624,0.936045,-5.024430,0.088364,-9.494886,8.686414,8.290218,6.906432,-9.780683,3.721579,-9.688057,-9.161825,-5.675510,-1.899805,-6.579320,-2.564920,0.891269,8.104582,0.485239,-2.285295,0.553833,-9.115780,1.188758,-6.459793,-5.291501,5.940047,-3.051067,-6.067321,-3.878224,-6.968338,-1.037055,-3.769847,4.962441,1.670618,-8.984746,-8.426273,6.867032,-8.882197,-8.593693,-0.650747,2.752947,8.191653,7.395694,-3.671426,-0.674887,-4.024717,1.201840,-2.335762,-8.660450,2.070397,0.204714,-8.922094,-4.747518,2.236752,-2.922731,-7.582637,6.266652,0.764745,9.323048,-6.907315,-7.443955,-4.887556,6.005259,-3.921280,-0.697717,-9.793041,7.467908,-7.637246,-6.215865,-4.981282,-3.785887,-5.396176,-5.505996,-9.524525,5.390801,4.038421,-6.039616,-4.682345,-0.631350,6.081358,-1.851290,-3.285210,3.005587,-3.973514,7.564439,-9.394155,1.410484,5.273781,-5.395527,1.957832,1.743527,0.709851,9.015130,4.159991,6.609676,-2.545311,2.139525,5.224617,-6.880644,-0.183763,2.342827,5.407589,0.828800,-6.589289,-3.020215,1.933696,0.381220,6.414067,-3.380663,-8.108065,-5.851260,-3.901508,-5.046028,-2.866102,8.127435,-7.613217,2.460851,8.006006,-8.599906,-7.489742,8.304027,-0.895270,-2.218541,7.663858,8.357992,-4.952094,4.407899,6.569674,9.279240,-9.951327,-4.219999,5.263630,-5.962060,-7.811155,-0.277062,0.675096,-3.880805,-6.528512,-1.456880,-5.700989,-1.046909,7.627514,7.364115,0.783614,-9.721369,6.331641,-6.844654,-4.881944,1.161341,6.767971,7.933190,3.140518,1.787494,-5.864270,-6.694246,7.111356,-9.856067,-7.636451,7.907233,-3.969778,8.372756,-0.778446,-8.954123,-6.047816,4.308685,1.165475,-6.686594,-1.630255,6.254360,7.351140,1.250156,-7.372905,2.566115,0.461064,-0.703470,-2.124956,2.018143,2.629209,4.916273,4.919997,9.589054,8.158239,-0.672232,5.653670,3.304942,5.063984,9.044957,-1.153974,-8.215620,2.199165,5.747760,-4.565453,-0.381861,-8.360624,3.017184,-9.517411,-1.953391,-8.177060,-1.048639,-7.574441,1.410810,-2.701257,0.734289,8.847953,8.732944,-5.101652,8.154457,9.317461,-1.046144,4.198849,-7.483747,4.004675,-1.373504,8.923846,0.253328,-5.340636,5.522267,-7.151955,6.640569,-3.445906,-5.612327,6.119544,3.508483,-0.926933,-1.377820,9.251042,5.642917,9.883216,-8.819650,-1.463976,4.243959,-1.530087,-8.902857,3.483326,7.744633,-6.045955,7.080613,9.489968,-6.013893,-4.862101,4.606425,2.631023,-8.646201,-8.967140,2.757732,6.462509,0.303383,0.234202,-8.323186,7.852639,-9.362425,1.113420,8.461151,-9.356992,-0.671232,-5.122447,-8.616168,6.418376,5.177844,-2.519383,-2.650661,9.632532,7.300451,4.562035,9.106436,9.249390,-8.677482,4.930875,9.913042,-7.625246,4.124572,-8.239548,-7.498072,-3.716603,8.957054,6.945476,-3.065805], dtype = "float32")#candidate|10759|(1690,)|const|float32
call_10757 = relay.TupleGetItem(func_355_call(relay.reshape(const_10758.astype('float32'), [6, 12, 12]), relay.reshape(const_10758.astype('float32'), [6, 12, 12]), relay.reshape(const_10759.astype('float32'), [1690,]), ), 0)
call_10760 = relay.TupleGetItem(func_359_call(relay.reshape(const_10758.astype('float32'), [6, 12, 12]), relay.reshape(const_10758.astype('float32'), [6, 12, 12]), relay.reshape(const_10759.astype('float32'), [1690,]), ), 0)
func_7531_call = mod.get_global_var('func_7531')
func_7533_call = mutated_mod.get_global_var('func_7533')
call_10778 = relay.TupleGetItem(func_7531_call(), 1)
call_10779 = relay.TupleGetItem(func_7533_call(), 1)
output = relay.Tuple([call_10742,call_10757,const_10758,const_10759,call_10778,])
output2 = relay.Tuple([call_10743,call_10760,const_10758,const_10759,call_10779,])
func_10790 = relay.Function([], output)
mod['func_10790'] = func_10790
mod = relay.transform.InferType()(mod)
mutated_mod['func_10790'] = func_10790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10790_call = mutated_mod.get_global_var('func_10790')
call_10791 = func_10790_call()
output = call_10791
func_10792 = relay.Function([], output)
mutated_mod['func_10792'] = func_10792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8178_call = mod.get_global_var('func_8178')
func_8180_call = mutated_mod.get_global_var('func_8180')
call_10813 = relay.TupleGetItem(func_8178_call(), 0)
call_10814 = relay.TupleGetItem(func_8180_call(), 0)
func_6712_call = mod.get_global_var('func_6712')
func_6714_call = mutated_mod.get_global_var('func_6714')
call_10823 = func_6712_call()
call_10824 = func_6712_call()
func_8154_call = mod.get_global_var('func_8154')
func_8156_call = mutated_mod.get_global_var('func_8156')
call_10825 = relay.TupleGetItem(func_8154_call(), 0)
call_10826 = relay.TupleGetItem(func_8156_call(), 0)
output = relay.Tuple([call_10813,call_10823,call_10825,])
output2 = relay.Tuple([call_10814,call_10824,call_10826,])
func_10832 = relay.Function([], output)
mod['func_10832'] = func_10832
mod = relay.transform.InferType()(mod)
mutated_mod['func_10832'] = func_10832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10832_call = mutated_mod.get_global_var('func_10832')
call_10833 = func_10832_call()
output = call_10833
func_10834 = relay.Function([], output)
mutated_mod['func_10834'] = func_10834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5151_call = mod.get_global_var('func_5151')
func_5152_call = mutated_mod.get_global_var('func_5152')
call_10865 = relay.TupleGetItem(func_5151_call(), 0)
call_10866 = relay.TupleGetItem(func_5152_call(), 0)
func_8044_call = mod.get_global_var('func_8044')
func_8046_call = mutated_mod.get_global_var('func_8046')
call_10891 = relay.TupleGetItem(func_8044_call(), 0)
call_10892 = relay.TupleGetItem(func_8046_call(), 0)
func_10109_call = mod.get_global_var('func_10109')
func_10110_call = mutated_mod.get_global_var('func_10110')
call_10901 = func_10109_call()
call_10902 = func_10109_call()
output = relay.Tuple([call_10865,call_10891,call_10901,])
output2 = relay.Tuple([call_10866,call_10892,call_10902,])
func_10909 = relay.Function([], output)
mod['func_10909'] = func_10909
mod = relay.transform.InferType()(mod)
mutated_mod['func_10909'] = func_10909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10909_call = mutated_mod.get_global_var('func_10909')
call_10910 = func_10909_call()
output = call_10910
func_10911 = relay.Function([], output)
mutated_mod['func_10911'] = func_10911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10956 = relay.var("var_10956", dtype = "float32", shape = (11, 15, 4))#candidate|10956|(11, 15, 4)|var|float32
uop_10957 = relay.sigmoid(var_10956.astype('float32')) # shape=(11, 15, 4)
uop_10968 = relay.sqrt(uop_10957.astype('float64')) # shape=(11, 15, 4)
output = relay.Tuple([uop_10968,])
output2 = relay.Tuple([uop_10968,])
func_10971 = relay.Function([var_10956,], output)
mod['func_10971'] = func_10971
mod = relay.transform.InferType()(mod)
mutated_mod['func_10971'] = func_10971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10972 = relay.var("var_10972", dtype = "float32", shape = (11, 15, 4))#candidate|10972|(11, 15, 4)|var|float32
func_10971_call = mutated_mod.get_global_var('func_10971')
call_10973 = func_10971_call(var_10972)
output = call_10973
func_10974 = relay.Function([var_10972], output)
mutated_mod['func_10974'] = func_10974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10708_call = mod.get_global_var('func_10708')
func_10709_call = mutated_mod.get_global_var('func_10709')
call_11033 = func_10708_call()
call_11034 = func_10708_call()
output = call_11033
output2 = call_11034
func_11054 = relay.Function([], output)
mod['func_11054'] = func_11054
mod = relay.transform.InferType()(mod)
output = func_11054()
func_11055 = relay.Function([], output)
mutated_mod['func_11055'] = func_11055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5840_call = mod.get_global_var('func_5840')
func_5841_call = mutated_mod.get_global_var('func_5841')
call_11107 = relay.TupleGetItem(func_5840_call(), 0)
call_11108 = relay.TupleGetItem(func_5841_call(), 0)
func_8759_call = mod.get_global_var('func_8759')
func_8761_call = mutated_mod.get_global_var('func_8761')
var_11125 = relay.var("var_11125", dtype = "float64", shape = (110, 9))#candidate|11125|(110, 9)|var|float64
call_11124 = relay.TupleGetItem(func_8759_call(relay.reshape(var_11125.astype('float64'), [1, 990])), 5)
call_11126 = relay.TupleGetItem(func_8761_call(relay.reshape(var_11125.astype('float64'), [1, 990])), 5)
output = relay.Tuple([call_11107,call_11124,var_11125,])
output2 = relay.Tuple([call_11108,call_11126,var_11125,])
func_11127 = relay.Function([var_11125,], output)
mod['func_11127'] = func_11127
mod = relay.transform.InferType()(mod)
var_11128 = relay.var("var_11128", dtype = "float64", shape = (110, 9))#candidate|11128|(110, 9)|var|float64
output = func_11127(var_11128)
func_11129 = relay.Function([var_11128], output)
mutated_mod['func_11129'] = func_11129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4979_call = mod.get_global_var('func_4979')
func_4981_call = mutated_mod.get_global_var('func_4981')
call_11185 = func_4979_call()
call_11186 = func_4979_call()
func_5071_call = mod.get_global_var('func_5071')
func_5073_call = mutated_mod.get_global_var('func_5073')
call_11198 = relay.TupleGetItem(func_5071_call(relay.reshape(call_11185.astype('float64'), [2, 10, 16])), 0)
call_11199 = relay.TupleGetItem(func_5073_call(relay.reshape(call_11185.astype('float64'), [2, 10, 16])), 0)
func_8300_call = mod.get_global_var('func_8300')
func_8303_call = mutated_mod.get_global_var('func_8303')
var_11208 = relay.var("var_11208", dtype = "float32", shape = (864,))#candidate|11208|(864,)|var|float32
call_11207 = relay.TupleGetItem(func_8300_call(relay.reshape(var_11208.astype('float32'), [864,])), 2)
call_11209 = relay.TupleGetItem(func_8303_call(relay.reshape(var_11208.astype('float32'), [864,])), 2)
output = relay.Tuple([call_11185,call_11198,call_11207,var_11208,])
output2 = relay.Tuple([call_11186,call_11199,call_11209,var_11208,])
func_11219 = relay.Function([var_11208,], output)
mod['func_11219'] = func_11219
mod = relay.transform.InferType()(mod)
mutated_mod['func_11219'] = func_11219
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11220 = relay.var("var_11220", dtype = "float32", shape = (864,))#candidate|11220|(864,)|var|float32
func_11219_call = mutated_mod.get_global_var('func_11219')
call_11221 = func_11219_call(var_11220)
output = call_11221
func_11222 = relay.Function([var_11220], output)
mutated_mod['func_11222'] = func_11222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10213_call = mod.get_global_var('func_10213')
func_10214_call = mutated_mod.get_global_var('func_10214')
call_11286 = func_10213_call()
call_11287 = func_10213_call()
func_4979_call = mod.get_global_var('func_4979')
func_4981_call = mutated_mod.get_global_var('func_4981')
call_11291 = func_4979_call()
call_11292 = func_4979_call()
func_3836_call = mod.get_global_var('func_3836')
func_3837_call = mutated_mod.get_global_var('func_3837')
call_11296 = relay.TupleGetItem(func_3836_call(), 1)
call_11297 = relay.TupleGetItem(func_3837_call(), 1)
output = relay.Tuple([call_11286,call_11291,call_11296,])
output2 = relay.Tuple([call_11287,call_11292,call_11297,])
func_11306 = relay.Function([], output)
mod['func_11306'] = func_11306
mod = relay.transform.InferType()(mod)
mutated_mod['func_11306'] = func_11306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11306_call = mutated_mod.get_global_var('func_11306')
call_11307 = func_11306_call()
output = call_11307
func_11308 = relay.Function([], output)
mutated_mod['func_11308'] = func_11308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4463_call = mod.get_global_var('func_4463')
func_4465_call = mutated_mod.get_global_var('func_4465')
call_11309 = relay.TupleGetItem(func_4463_call(), 0)
call_11310 = relay.TupleGetItem(func_4465_call(), 0)
output = call_11309
output2 = call_11310
func_11325 = relay.Function([], output)
mod['func_11325'] = func_11325
mod = relay.transform.InferType()(mod)
output = func_11325()
func_11326 = relay.Function([], output)
mutated_mod['func_11326'] = func_11326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10832_call = mod.get_global_var('func_10832')
func_10834_call = mutated_mod.get_global_var('func_10834')
call_11334 = relay.TupleGetItem(func_10832_call(), 0)
call_11335 = relay.TupleGetItem(func_10834_call(), 0)
func_7422_call = mod.get_global_var('func_7422')
func_7423_call = mutated_mod.get_global_var('func_7423')
call_11374 = relay.TupleGetItem(func_7422_call(), 0)
call_11375 = relay.TupleGetItem(func_7423_call(), 0)
func_9331_call = mod.get_global_var('func_9331')
func_9333_call = mutated_mod.get_global_var('func_9333')
call_11385 = func_9331_call()
call_11386 = func_9331_call()
func_8044_call = mod.get_global_var('func_8044')
func_8046_call = mutated_mod.get_global_var('func_8046')
call_11392 = relay.TupleGetItem(func_8044_call(), 0)
call_11393 = relay.TupleGetItem(func_8046_call(), 0)
func_9379_call = mod.get_global_var('func_9379')
func_9380_call = mutated_mod.get_global_var('func_9380')
call_11422 = relay.TupleGetItem(func_9379_call(), 0)
call_11423 = relay.TupleGetItem(func_9380_call(), 0)
uop_11435 = relay.log(call_11385.astype('float64')) # shape=(6, 12, 4)
uop_11437 = relay.log(call_11386.astype('float64')) # shape=(6, 12, 4)
func_3604_call = mod.get_global_var('func_3604')
func_3606_call = mutated_mod.get_global_var('func_3606')
const_11441 = relay.const([-10,-8,7,-4,10,-3,-10,-7,-3,9,5,6,-9,-7,2,-7,-1,7,-2,-2,6,3,2,-6,6,8,-5,7,9,-10,-8,-3,6,6,1,-10,-5,3,-6,-2,-6,-2,-5,2,-2,4,3,-10,7,7,-4,-5,4,6,-8,-10,9,5,10,-7,-4,-4,-8,8,-2,3,3,-7,-7,5,-1,10,-7,-3,4,1,1,-7,-2,4,7,10,-5,-7,9,-8,6,-10,4,-2,-5,8,-8,5,-7,2,6,6,-8,-2,6,5,7,-7,-1,9,9,2,-4,5,-5,7,-8,3,-9,-3,4,-7,5,1,-10,-2,10,6,10,-7,-10,-6,-9,-6,-3,-3,9,7,-3,-2,1,-4,7,-4,3,3,8,-2,10,7,-9,10,10,1,-6,-6,8,-7,-10,-3,-4,6,8,9,8,-3,6,-4,-1,-10,10,5,8,3,4,-10,-2,10,-4,10,-3,-8,6,-5,-7,-7,3,-2,-3,8,1,-6,4,-3,-5,2,-7,8,2,-2,8,-5,9,-1,-2,-10,9,-6,-3,5,3,5,10,3,7,-1,5,6,-5,8,10,-10,7,-3,-6,-6,8,1,5,9,9,6,8,-10,1,-2,-10,-1,10,-7,4,7,5,1,-2,-1,-2,7,-1,5,-8,4,-9,7,8,-6,-5,8,9,-1,10,3,1,4,-10,-5,-3,-8,-3,-10,9,5,8,-6,-3,-9,-3,4,6,-7,6,7,-10,-2,2,-5,-7,-4,6,-4,-9,1,-9,5,5,-4,-3,-8], dtype = "uint16")#candidate|11441|(294,)|const|uint16
call_11440 = relay.TupleGetItem(func_3604_call(relay.reshape(const_11441.astype('uint16'), [14, 3, 7])), 2)
call_11442 = relay.TupleGetItem(func_3606_call(relay.reshape(const_11441.astype('uint16'), [14, 3, 7])), 2)
output = relay.Tuple([call_11334,call_11374,call_11392,call_11422,uop_11435,call_11440,const_11441,])
output2 = relay.Tuple([call_11335,call_11375,call_11393,call_11423,uop_11437,call_11442,const_11441,])
func_11447 = relay.Function([], output)
mod['func_11447'] = func_11447
mod = relay.transform.InferType()(mod)
output = func_11447()
func_11448 = relay.Function([], output)
mutated_mod['func_11448'] = func_11448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mod.get_global_var('func_2101')
func_2102_call = mutated_mod.get_global_var('func_2102')
call_11524 = func_2101_call()
call_11525 = func_2101_call()
output = relay.Tuple([call_11524,])
output2 = relay.Tuple([call_11525,])
func_11528 = relay.Function([], output)
mod['func_11528'] = func_11528
mod = relay.transform.InferType()(mod)
mutated_mod['func_11528'] = func_11528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11528_call = mutated_mod.get_global_var('func_11528')
call_11529 = func_11528_call()
output = call_11529
func_11530 = relay.Function([], output)
mutated_mod['func_11530'] = func_11530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9807_call = mod.get_global_var('func_9807')
func_9809_call = mutated_mod.get_global_var('func_9809')
call_11533 = func_9807_call()
call_11534 = func_9807_call()
func_4148_call = mod.get_global_var('func_4148')
func_4150_call = mutated_mod.get_global_var('func_4150')
call_11539 = relay.TupleGetItem(func_4148_call(), 1)
call_11540 = relay.TupleGetItem(func_4150_call(), 1)
output = relay.Tuple([call_11533,call_11539,])
output2 = relay.Tuple([call_11534,call_11540,])
func_11542 = relay.Function([], output)
mod['func_11542'] = func_11542
mod = relay.transform.InferType()(mod)
mutated_mod['func_11542'] = func_11542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11542_call = mutated_mod.get_global_var('func_11542')
call_11543 = func_11542_call()
output = call_11543
func_11544 = relay.Function([], output)
mutated_mod['func_11544'] = func_11544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6298_call = mod.get_global_var('func_6298')
func_6300_call = mutated_mod.get_global_var('func_6300')
call_11549 = relay.TupleGetItem(func_6298_call(), 3)
call_11550 = relay.TupleGetItem(func_6300_call(), 3)
output = relay.Tuple([call_11549,])
output2 = relay.Tuple([call_11550,])
func_11554 = relay.Function([], output)
mod['func_11554'] = func_11554
mod = relay.transform.InferType()(mod)
mutated_mod['func_11554'] = func_11554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11554_call = mutated_mod.get_global_var('func_11554')
call_11555 = func_11554_call()
output = call_11555
func_11556 = relay.Function([], output)
mutated_mod['func_11556'] = func_11556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7422_call = mod.get_global_var('func_7422')
func_7423_call = mutated_mod.get_global_var('func_7423')
call_11580 = relay.TupleGetItem(func_7422_call(), 1)
call_11581 = relay.TupleGetItem(func_7423_call(), 1)
output = call_11580
output2 = call_11581
func_11585 = relay.Function([], output)
mod['func_11585'] = func_11585
mod = relay.transform.InferType()(mod)
output = func_11585()
func_11586 = relay.Function([], output)
mutated_mod['func_11586'] = func_11586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11617 = relay.var("var_11617", dtype = "float32", shape = (11, 7, 6))#candidate|11617|(11, 7, 6)|var|float32
const_11618 = relay.const([[[3.576680,4.380899,-6.504447,-8.826506,2.083822,-9.685825],[6.438622,4.894649,-1.515936,-3.902025,-8.365559,4.405502],[9.526380,-9.280343,-0.884346,-5.055924,1.086383,-7.175997],[-6.998850,6.979988,-6.343831,-9.811821,-5.417415,-1.192735],[6.470688,4.502391,7.891114,2.735588,2.793800,3.037141],[6.474231,9.510258,0.430755,-0.504502,9.529560,9.868032],[8.164586,8.602826,3.547750,-8.809751,-9.347418,-1.412824]],[[7.072254,-3.470485,5.707250,-4.808200,9.995352,4.353714],[2.491215,-7.696188,-8.730863,-0.280042,5.932073,4.031843],[-1.196547,6.241762,-9.974737,-1.674708,-6.355998,-1.205455],[-2.243658,-1.751745,-8.648761,-0.264030,-0.641947,-0.033581],[-7.301007,-6.932397,-8.767347,-0.320508,-9.632522,-0.564911],[0.406559,-7.333261,2.832156,7.301082,3.065507,-5.020172],[6.823453,9.855361,7.703667,-1.248003,-8.547460,-4.883715]],[[4.906709,6.443900,-0.629742,-0.593040,-5.888243,1.965142],[5.342148,5.859281,7.933155,-2.451242,-5.304092,-0.323678],[-5.586617,9.953276,1.629553,8.550977,-2.791471,-2.345710],[-6.752701,-2.233829,0.488686,7.776146,-0.699474,0.735106],[-9.479047,0.449058,6.944883,-4.910416,-8.556158,8.448744],[5.603808,-0.111351,4.575819,7.636133,9.144621,0.659843],[4.623852,6.856463,3.804900,6.397152,9.550118,4.377307]],[[-7.018482,-5.394381,4.824569,2.188759,-3.893431,3.471978],[-3.076523,-3.053610,-4.962590,9.933326,-1.271083,-6.467393],[6.578175,5.330820,-9.128354,-9.281515,-6.487120,8.063021],[-1.621936,7.623441,9.328046,-1.005124,7.830718,1.638470],[-5.073667,1.838541,-5.220450,8.441700,-0.050741,-3.551256],[3.831491,9.145633,7.880820,4.579805,1.252464,-8.467043],[5.165152,1.242417,5.198380,5.642697,8.950712,-4.157971]],[[-1.827810,3.803366,-5.534217,0.030378,-2.479981,-3.480943],[7.315476,7.799474,-9.463357,2.500485,3.141512,-6.503546],[-0.361803,-1.985443,-9.165571,5.333001,-6.160088,2.337262],[-0.551444,-6.750161,-5.008701,-5.111093,9.083285,-7.260048],[9.138455,5.200362,-2.753694,-3.058750,7.757614,-7.725549],[5.510497,-8.524594,9.966763,7.425890,-9.372034,-1.518347],[-0.625768,5.671390,5.465982,8.202924,4.496568,0.914287]],[[-5.170359,-0.474506,-5.114035,4.534162,-4.691095,-2.009345],[-9.932895,9.131048,6.139693,3.629496,-7.382154,2.689795],[-4.597917,0.297914,-8.869155,-3.600738,-9.484806,-1.680924],[2.126345,-7.283580,-9.259451,8.073847,-9.319060,4.253058],[4.441625,6.065376,6.440340,5.835702,2.869917,-6.233033],[5.428144,-5.626254,9.793079,-4.051326,7.588579,7.427719],[2.949316,-0.338696,6.399544,-2.433837,-3.290037,9.471618]],[[-2.433807,2.012370,0.875069,9.050186,-4.466482,-1.437731],[0.120024,1.220733,5.844835,-1.534560,7.712696,4.028317],[-5.792959,4.740254,4.878295,9.376828,1.113697,-9.796997],[-6.243593,4.083592,0.868850,-5.152824,1.534085,8.743582],[-8.666321,8.205184,-8.667467,2.692816,-4.768074,2.995291],[0.227730,-5.567649,-8.323091,2.278411,-4.796819,6.539092],[-4.583160,-8.918582,9.492482,-6.079488,1.398974,-6.587570]],[[-7.576977,3.595711,-4.089162,8.734914,7.230813,0.695578],[-0.120790,-5.177668,2.845987,-2.589453,2.540472,1.765365],[1.498224,0.500972,-8.849582,-4.921009,6.212521,0.039031],[0.494203,8.896352,-2.283619,-9.537309,2.262667,-2.154620],[-3.458689,-6.168681,0.494125,9.665120,3.684660,-0.608993],[-2.188287,3.399634,-5.920282,4.053194,3.925427,-3.714422],[6.830060,-0.962029,7.712451,-1.767163,0.792366,7.424852]],[[-4.424003,6.277051,4.876545,2.703686,9.418810,9.805274],[-1.049537,0.865851,5.508175,0.799852,-2.484857,6.208490],[-3.695329,8.863272,-8.891349,0.232789,0.331304,6.519962],[-6.423930,-8.251355,1.068273,5.044603,7.871883,6.043123],[-9.606309,6.733459,-7.486158,-1.067731,-8.593058,-9.172924],[-6.538226,-3.480890,7.387410,3.767859,-2.989858,1.457353],[9.948060,2.871630,2.520091,-3.540665,-5.885756,-0.939506]],[[-8.328458,1.968013,-1.836230,-3.504959,4.212859,2.558646],[-2.963228,-0.697363,-1.687115,-0.854325,-6.493508,-1.530769],[-1.037352,0.454663,4.495305,8.219331,-8.407013,-7.865820],[-5.127135,-8.436581,3.906685,-5.652575,-4.087375,7.189310],[-9.428980,-0.562834,8.967009,-0.653294,5.738101,-2.623470],[1.228064,7.384704,7.220190,2.082493,-8.517850,3.900381],[2.798620,0.005719,0.534805,-8.873022,-0.102605,-6.673257]],[[-8.169516,9.539445,7.236494,-8.957458,8.063747,-8.665843],[2.872853,-7.251024,4.927508,-8.016270,-5.971050,-3.141365],[-8.564567,0.624543,-0.963928,-7.894990,0.638821,-7.697844],[-2.025990,9.725039,-9.991244,-6.969828,6.320109,2.493223],[-2.480124,2.416947,2.614684,-5.473000,4.414394,-0.492229],[-0.071474,-7.111319,-7.656659,-0.228364,4.226224,-2.987418],[4.159163,0.770958,-9.436165,-4.719454,-0.056911,7.550316]]], dtype = "float32")#candidate|11618|(11, 7, 6)|const|float32
bop_11619 = relay.maximum(var_11617.astype('float32'), relay.reshape(const_11618.astype('float32'), relay.shape_of(var_11617))) # shape=(11, 7, 6)
var_11626 = relay.var("var_11626", dtype = "float32", shape = (11, 7, 6))#candidate|11626|(11, 7, 6)|var|float32
bop_11627 = relay.equal(bop_11619.astype('bool'), relay.reshape(var_11626.astype('bool'), relay.shape_of(bop_11619))) # shape=(11, 7, 6)
func_355_call = mod.get_global_var('func_355')
func_359_call = mutated_mod.get_global_var('func_359')
var_11636 = relay.var("var_11636", dtype = "float32", shape = (864,))#candidate|11636|(864,)|var|float32
const_11637 = relay.const([-6.817927,1.560300,-8.185983,0.569315,-6.277771,7.082185,-5.096331,5.662200,-3.990671,-6.847672,4.812993,-5.389008,-5.750265,3.022291,1.137408,-8.410177,-6.456651,-4.878214,7.140190,-5.071498,-9.795015,4.059079,1.860431,3.999838,6.373254,-3.650708,-7.623161,2.067976,-0.304884,2.847873,9.176064,3.559909,6.491881,-3.978858,7.298775,-9.490676,-4.197520,-4.932370,-3.675420,7.921748,-9.758994,-8.639109,7.151334,6.836036,0.958730,6.376139,-8.857066,-8.592944,-8.844574,-6.625589,1.399107,-5.790411,-7.534287,5.806352,-9.063839,-1.147664,-4.769599,9.708395,-3.371542,5.879005,1.042544,-0.984718,9.364994,3.068735,4.102598,-1.882182,-8.123219,-1.818296,1.556311,-3.405440,8.748821,-8.811619,0.431327,7.549702,-0.187551,2.921995,6.305976,6.704985,-6.348619,5.187128,-0.101641,-8.697105,-7.424937,-7.000737,-4.185507,4.548066,4.510208,2.955092,2.318787,1.309919,8.199040,-8.171427,-4.992792,-3.148296,-7.039840,7.614753,2.612964,-1.509411,-5.592090,1.195279,1.775390,-9.156105,7.524033,7.470286,-4.803528,-4.111989,-4.638310,2.492454,5.720886,7.555912,1.970592,-8.057010,0.379759,-4.020707,4.660560,-3.785106,-2.316063,-6.281599,1.557621,-5.955443,-1.619861,9.196911,6.840163,1.295422,-0.831229,0.279898,3.240507,-4.461051,-1.044771,4.975065,5.069395,-2.877814,-0.265681,7.532925,-9.405997,-8.150730,-4.619322,6.677348,-5.730495,-9.114270,-3.652320,-1.265423,-6.026440,-5.824833,1.493951,-4.211391,1.269508,-7.734969,2.910108,9.912160,3.445249,-0.572318,-3.045134,-4.711862,6.705206,3.010969,-2.109274,5.362484,6.874301,7.748118,4.550333,7.163450,-4.555071,7.799324,9.663712,5.931650,-3.419504,-3.154542,-2.147838,3.061356,-5.405969,1.284001,-0.740115,2.093947,-1.526325,-7.737890,-2.931139,-2.660614,7.690196,6.394717,1.445373,0.732902,-2.047223,-4.816753,-3.171494,-8.346974,-3.204518,4.699784,4.089756,-3.925618,8.995107,7.934290,-5.175318,-3.036595,2.120190,-8.015443,5.359026,-1.165147,-9.217391,-5.466905,-6.095337,8.195141,-4.553689,1.664044,9.475540,5.999277,-7.587668,-4.910390,-6.493369,-0.530623,-3.138172,-6.626321,6.437070,-4.139172,4.924987,-5.987407,2.019869,9.963185,9.401119,5.524485,-1.161181,9.038304,-8.739480,-4.195792,3.000646,-2.064251,6.201757,1.569311,-6.911928,-2.394179,-5.012626,4.853124,-9.249526,6.877187,-1.112527,-7.435400,1.843444,7.662779,-9.683123,-5.474562,0.858860,2.511127,-2.975282,5.322489,-9.669583,-1.137653,-0.791268,7.478151,-0.670429,-4.071252,1.097024,-7.535473,9.645593,-9.488994,2.875072,6.337388,-7.772555,3.283600,7.762935,3.057775,3.272648,-9.845234,1.349726,-7.038026,-6.278941,-0.908127,-7.753407,-4.355647,8.460861,4.898277,4.148023,5.243849,0.400268,-3.421766,4.022944,6.711824,-6.964557,-1.350469,9.145732,2.046075,-8.072414,4.966974,-0.393760,-4.415729,0.862665,-1.198305,-7.589091,-3.782137,8.476323,-8.135421,-0.508173,2.878910,2.173088,-0.585942,-7.526173,-4.154802,-6.577808,5.485539,1.822525,-7.779737,0.012084,6.594885,-9.564051,-8.478387,4.446230,-9.186732,-8.734753,-9.526044,2.186719,-5.284445,-8.432818,-0.001075,-3.891365,-3.089114,6.729482,-1.770950,5.836568,-4.949571,1.853288,8.363864,8.213595,-4.600567,3.771739,1.251875,-7.892182,2.605881,-3.711468,4.513621,8.596479,-6.717813,-8.730336,-6.605159,9.263632,9.889782,8.759630,4.639126,-1.234049,-0.098089,-5.842811,-0.316803,0.971203,2.867560,-5.574200,-7.926836,-8.127885,-8.141273,-6.039940,0.293519,-6.476993,-5.121558,4.367864,-3.275202,-0.882720,-1.479594,9.226619,5.421808,-1.005260,-4.877600,5.720928,-6.322944,-7.713259,-5.211254,7.004304,-4.662039,-2.187965,2.476838,-0.999698,3.764994,-8.205770,6.525503,-5.858322,-2.859063,5.211697,5.564175,-8.045666,0.348665,7.523265,7.747166,3.001808,-3.538782,-3.925285,5.500580,7.982211,7.515968,-0.823947,8.380253,0.014121,1.142278,4.355275,9.070939,5.142640,-7.687171,-9.290546,3.777364,0.360939,7.052270,-5.682240,-7.399848,8.823316,4.635454,-2.403860,5.719510,9.129760,-0.412701,5.182667,-0.810404,-1.933557,1.273011,-6.479252,-9.810254,-3.822280,7.358224,9.487690,7.009349,-0.856739,-5.204109,2.480833,-6.204098,9.729456,7.349254,7.189727,5.175262,-6.909798,-2.461367,9.267969,-2.608394,0.176591,-1.669831,6.854677,1.601236,2.022528,-4.815520,7.471247,1.238908,-5.995505,-5.840649,-6.626756,2.830532,-8.337145,7.719659,6.684687,-3.195415,1.994014,6.960621,-5.025472,-0.077377,-0.967519,-4.467788,-2.672148,-6.936115,1.791990,-9.862596,-3.005112,-2.289038,0.219463,3.172704,-1.543546,9.100658,-2.445481,-6.004712,-9.147389,-7.822797,-3.196612,-0.616779,-5.103844,1.213474,6.645548,9.280407,2.754951,9.655149,2.793877,3.842687,-4.005463,-2.391905,2.279099,5.194619,6.405266,1.496197,-6.731910,-5.970959,-7.034291,-4.770574,3.689033,-3.978154,-3.147156,-3.118758,-5.994897,8.505120,-7.199621,7.003325,-4.699519,2.172751,8.355236,4.863512,4.687317,-8.468118,0.279550,0.442804,7.258164,-3.017827,3.859409,7.608528,-9.089334,-0.580472,-6.727095,1.500061,-0.736980,8.753740,9.021624,-4.587940,-6.429800,-2.088013,7.224616,6.509380,6.551871,-4.653831,-0.240120,-4.798867,-7.462515,0.228327,3.167256,-0.886967,-2.717365,8.978475,-0.994930,-7.678350,-1.462021,5.405464,-1.980655,-6.619548,-7.400368,5.786518,5.778983,2.304712,-7.949421,-0.797840,7.568580,-8.894463,-1.648790,7.342670,5.679400,-9.759462,3.056469,1.101481,-5.404435,9.965952,9.380716,3.635720,5.480598,-2.602664,1.339150,3.736155,4.646215,-2.287190,9.471282,8.104225,6.270526,-6.728714,3.964473,9.253325,-5.478251,-1.695715,6.163258,-4.528042,-6.493705,-9.146547,4.505014,3.018047,7.446677,0.013517,1.775560,1.625573,-9.852283,6.077548,-1.664903,2.488849,-0.218742,-0.766394,3.833308,-8.527658,3.464311,2.410636,-7.987019,-6.153130,1.567864,-5.495817,-0.346540,1.823251,9.277046,-4.083541,9.811747,-5.014063,2.596362,9.687931,7.986741,-3.618158,5.003548,-8.017472,-8.320137,4.089026,-3.085956,8.134138,-9.788134,0.995144,6.796945,4.391744,4.234657,-0.183510,-1.129560,4.668817,1.808711,-7.910664,0.421292,-8.944180,8.502820,6.246309,2.815838,-9.727524,-9.803452,-9.294949,5.453269,-2.238986,3.003256,0.456000,3.131083,-9.881553,0.055324,1.785598,8.491766,-4.679364,9.400443,-9.096758,-6.608071,-8.850190,-5.718834,6.132876,-2.051709,-1.676819,-8.509128,1.118479,-6.250823,7.279245,6.165491,-2.051192,-0.148676,8.638131,6.934433,3.408003,0.720264,-3.418599,-1.547780,1.060751,9.312452,-3.808786,-8.173743,0.111420,5.564273,-9.720834,2.941348,5.449648,3.981632,-4.870752,-1.866404,2.181894,6.432656,0.453009,6.253523,2.200015,-0.375024,-2.338862,7.169091,3.714183,-3.051161,5.908802,1.955257,-3.239530,-3.615113,3.257024,-4.709246,-0.170832,-9.285840,1.882371,-0.988838,-6.817602,-2.459623,8.193700,2.096493,4.355249,-5.825122,6.481020,3.650784,3.864852,-7.958637,8.539023,4.586328,0.415871,0.761692,9.096031,7.158605,3.634207,-5.923770,3.497879,9.440947,-3.028992,-9.602674,0.723858,8.300686,4.148741,5.174254,-8.817811,-5.896863,-2.914760,-3.299648,0.764887,-8.380502,4.180662,-5.460329,-2.402501,6.299217,7.124029,-9.484602,-5.667305,7.849279,-7.183788,-2.517624,4.453497,-0.327058,-6.648904,8.054513,-0.244036,-9.406869,7.917418,-0.426708,0.173205,-5.400318,5.906454,2.211841,-7.554643,4.967439,-3.552246,8.209644,-3.974578,5.222804,-7.834185,5.906771,-9.254724,-9.792280,-7.706469,2.723130,4.767515,-7.350003,6.487862,-2.025083,7.002328,-1.777872,2.841260,9.456923,8.188803,-7.592687,-5.855638,-7.050623,-0.138592,-9.298285,0.574686,-6.091837,0.666603,-9.909547,-6.943709,-7.102141,-0.694079,3.224076,-0.671895,-3.069446,-9.368662,4.087935,-3.844761,5.970608,-6.130084,2.370084,-5.321552,-3.129174,-8.762064,-6.749184,1.417305,-6.590767,1.756473,2.344871,3.944218,2.974100,6.252446,-1.351004,-3.464807,-0.308251,3.742640,-8.283428,8.030660,2.897800,5.091555,-5.692172,-2.862097,7.773025,8.159936,0.597135,-9.357708,-2.662487,9.228052,8.055168,-8.713757,-6.913102,7.817856,6.068957,-1.487871,-5.934029,-9.348562,-6.139143,-5.301547,-5.214726,2.987881,-7.695920,-2.415667,7.774100,7.696538,2.831961,-9.716183,6.347977,9.647590,-7.297101,5.747245,2.637525,1.038127,-0.821685,4.709672,6.281116,-3.226947,-9.211341,-9.739591,-5.876413,-3.467119,-9.163621,5.587449,-4.979722,-4.729858,-0.126081,-4.208943,-1.755513,-0.720508,1.607071,1.331963,-4.015641,-0.595879,4.731942,-2.277738,-7.226077,8.953554,5.975357,-7.015063,7.208668,-9.830083,-2.704409,-1.858799,-8.150919,5.791825,-7.059417,0.867905,-5.990015,-7.798127,-7.043797,7.777471,3.135683,6.565641,6.067130,4.364488,7.031173,7.174430,-1.180615,-4.851286,-5.866210,-5.870262,-5.648992,9.136933,0.274246,-5.151451,-0.741402,-7.844616,8.638191,-0.674086,5.080923,6.712217,1.998446,-4.588615,-7.117384,-5.858105,-0.703619,-3.073848,-9.021809,7.332642,1.670265,-6.692808,7.799445,3.385774,-3.462111,2.194384,6.248088,-8.913048,6.419432,-2.653530,9.185122,-1.259616,7.380311,4.617272,-8.287963,4.543772,-3.992344,3.188336,-5.696202,-2.999982,-2.593893,-8.832208,8.884572,-1.826607,9.457565,-7.638047,-5.424312,-9.105226,9.386110,4.305026,-8.757179,2.296560,-2.499967,-1.457748,-3.655085,-7.463044,8.502430,-1.652473,0.367476,7.300753,-9.193905,-2.559141,2.372177,-6.804403,-8.616637,-4.283840,0.494008,4.702288,7.470255,-8.676817,5.283188,-2.467852,-5.182871,3.775376,-2.611248,-8.847874,-4.298491,2.842551,-9.432772,5.902490,4.184392,1.252518,6.621389,9.696742,5.475956,-9.439732,-3.217108,8.621745,-2.332347,-1.822297,9.964774,6.418726,8.416973,6.989877,-3.710467,-1.364776,7.123441,-9.589257,4.378611,5.712116,-4.811711,1.629646,-2.467824,5.946126,4.199083,0.848234,-7.031319,-4.054225,6.699861,2.193172,-6.280177,-3.774872,-9.708762,9.961051,-5.640136,-9.333285,-3.673467,3.045236,-0.245223,6.736244,-3.455380,-3.337623,0.293042,5.834117,8.199990,2.617013,-9.874462,8.567907,-2.402055,-4.449346,9.354956,7.799534,-6.824764,-0.652310,5.547563,-3.007975,3.446678,9.052948,-9.546961,7.329933,1.466913,2.678050,-2.755085,-2.150056,1.845400,2.734058,9.551782,6.914253,4.495018,-7.844917,7.589182,4.043156,-8.169861,-7.508089,6.483543,-8.134333,-9.445429,-5.768866,-0.245179,8.810063,-0.719627,-9.248529,-1.755633,3.928669,8.694989,-0.602194,8.800393,8.469708,-8.659680,-8.684240,-1.635331,8.297799,-0.649114,8.588729,-7.719019,3.511503,-3.445127,0.659923,6.394076,-5.584475,-1.824894,3.267084,-5.032797,4.448882,-5.075432,-5.740328,-7.171596,8.864448,-8.992036,3.005957,-4.399668,2.429315,-9.785805,4.239319,2.507231,0.754053,-1.172932,8.541854,2.567253,-3.762989,-0.205655,-0.998771,-8.149979,-5.337256,6.805137,9.617416,-7.505643,-6.575240,5.600762,-3.986326,4.678367,5.961873,-1.118907,7.386755,8.616728,-5.625955,-4.678091,1.119252,-3.707864,3.334540,6.540380,7.263697,7.543767,9.765455,8.272120,-0.133189,7.119648,0.074527,-9.565170,7.172728,-5.522115,-5.873327,8.146400,8.357053,2.580010,8.052804,2.871542,-6.843934,-2.917232,-2.560880,4.420710,-2.331387,-1.442969,-6.091087,-0.517362,-2.129128,1.905226,-3.952304,-1.696770,4.880638,-9.905727,8.116369,3.448258,8.644868,2.862631,-1.421102,-6.135655,3.092712,-8.464675,1.830579,4.634166,1.705400,-1.705142,0.164670,4.482821,-3.631298,3.476357,1.660724,6.835164,-2.333853,-4.081857,3.330111,-3.486071,9.204213,8.917204,1.729403,8.654478,4.246125,-9.636235,-5.688372,5.073287,-6.928752,-5.476394,-9.237107,-9.447641,-0.325170,8.743876,8.224698,-2.673646,-0.210144,2.380685,4.837922,-9.973259,9.600508,7.928707,-7.563835,-0.019414,-7.333417,-0.846897,9.770645,6.689183,-2.006337,8.610694,-1.606455,-2.141035,1.059503,3.671518,-3.206735,-7.038303,-1.330643,-5.623060,-5.776992,9.751669,0.932909,7.582949,-7.331059,8.324622,3.081990,-4.570641,-5.517753,-9.771408,9.594939,-7.653830,3.321635,6.813609,6.539806,-3.584325,-5.116148,-5.306666,-4.887379,-4.450118,-3.181274,6.021618,7.571620,-7.971096,-0.851684,5.187938,-4.596579,-9.195076,-9.430386,0.146459,8.013324,-2.369595,-6.203913,5.242604,-0.175633,2.798409,3.347037,1.629609,7.118018,0.927311,-2.737785,7.462976,-1.881448,5.420615,0.935571,-7.396166,-9.377256,-5.563820,6.102369,9.421290,-0.519180,9.082551,3.851676,-3.555391,-2.943557,4.874736,-1.932272,5.517514,-6.271872,-1.907305,4.784619,-4.636855,8.007667,-7.707121,-7.174861,-9.529540,0.908218,4.820307,-8.127587,6.205610,6.269511,-6.834821,8.512557,-9.197493,-4.440694,7.857308,-9.540761,6.279648,-0.122711,-8.769765,-6.179235,2.347559,-1.677375,-7.312099,-5.581427,4.722852,-9.936810,-4.214274,5.109546,6.254577,5.158485,-9.926809,-1.420267,8.135096,7.748488,-2.800333,-7.638905,5.809406,-5.367761,-3.449275,4.544404,-2.004583,3.196544,2.225840,9.589017,-2.478022,0.142036,-3.508797,-2.480889,5.180495,-9.800559,9.864587,7.174966,9.080257,6.608297,6.761421,-4.806483,-0.060311,-0.368601,-7.585317,2.737546,-9.899141,0.494294,-4.136880,-9.231917,-4.376482,1.458420,3.423273,-7.001268,-6.173574,-7.605040,4.226227,3.356520,-9.653349,1.536105,-9.572074,1.304264,-5.298819,2.544999,0.255864,-2.456432,-5.727108,9.826970,-4.957249,5.284738,7.639071,-0.443486,-0.762545,8.826690,2.338081,5.471317,8.582431,-1.405637,-8.294147,-2.342728,5.879402,9.060912,7.080784,-8.493445,-5.003299,-3.713005,5.593540,-3.706698,0.615799,3.955591,9.762841,-6.189699,2.021925,-2.120373,-1.482328,5.886906,9.160108,-0.965749,-4.905363,-6.098044,-1.396854,-0.061868,-4.444097,9.491926,-4.144842,-1.443478,3.778425,-3.595100,-9.816905,-4.430632,-7.082111,-3.913047,-0.614010,-3.732972,6.925347,-1.858850,4.595204,-9.752086,9.336627,7.136878,-8.264477,0.913439,-4.152724,-4.250547,-2.495513,-6.234118,9.759594,-7.176812,4.926998,-2.046775,-6.367606,-8.527361,1.122651,3.411319,-9.237775,1.978455,-0.871065,-9.535494,-8.925900,2.103941,-0.192988,7.210549,7.751521,7.596486,-0.969141,1.570732,-9.248828,2.923119,-5.977478,1.237711,6.756312,7.726997,9.857934,7.027732,2.557994,3.965141,-7.754521,6.675688,-1.836238,-2.782349,-1.407056,8.802997,4.195469,-0.258782,1.918587,-9.696459,-6.072485,7.747077,8.146824,-3.120534,5.467499,-7.342122,-5.510154,0.683362,9.310363,-2.559402,-9.460689,-3.876744,-8.199605,2.551480,-9.756711,-7.479372,-2.204741,4.414197,-8.716740,-9.899113,5.935630,2.816477,-0.667416,-9.979183,-1.206810,9.514454,8.424416,-5.148892,-1.437127,0.167104,3.501304,-9.697625,6.416046,-8.952905,4.397626,-6.584612,2.716340,-2.687383,-3.426453,2.431823,5.434310,6.711552,5.491051,-1.625885,-3.793837,-4.211045,-0.578861,7.527818,-9.356188,7.640371,-8.034093,-9.954160,-0.431827,4.454081,-8.661816,0.688855,1.837540,-7.475736,1.086790,-8.265083,-7.100860,6.598061,0.088857,5.239859,-5.258418,1.092393,-3.114771,0.218278,3.824884,1.834809,5.891147,2.942896,-2.603783,3.929500,0.670878,7.201214,7.055076,-9.240793,7.285838,-0.840829,-5.937788,-0.661857,-0.636016,5.303309,-2.593109,3.913064,-7.529070,-5.030890,-9.338629,-0.142526,9.366123,5.072896,-6.986147,-9.763550,1.589290,-9.473566,-4.570439,-7.939465,-3.672931,-6.480560,5.561452,-2.176331,6.785642,-3.671762,9.316692,3.732055,-4.530445,8.066470,-2.400158,-3.236087,-5.144938,3.361529,6.568442,5.846834,-8.748211,-6.211173,8.822580,4.303250,7.237877,-4.820117,-3.996202,1.668765,9.131320,3.824079,-7.460848,4.353149,-3.329581,-3.445725,5.877954,3.114131,7.636360,6.336519,0.972767,3.041653,-5.094313,7.823439,2.694685,7.529097,6.200452,-8.477368,-7.604899,-4.203864,1.881871,-1.305968,7.311949,-6.009212,1.645112,0.296707,-2.859033,6.234106,6.939417,4.252612,0.221266,0.366710,0.363871,9.809564,3.409359,0.951655,-4.520813,6.988195,4.871907,-8.829037,1.677607,5.681313,9.708194,-0.061250,2.682270,2.375096,-7.911356,5.713251,6.189576,1.374557,2.824856,2.956947,-2.535136,4.544811,-9.498804,-9.856664,4.182495,9.604898,-8.209485,5.614232,1.542004,9.269043,3.900945,2.256219,2.656887,-3.938291,4.484656,-7.778012,-9.323741,-7.564120,8.653294,9.505467,-6.816468,5.814384,-4.473884,1.396394,-3.287779,-8.466181,3.712849,-2.279855,-2.036539,5.524020,-1.137057,-4.112812,0.962116,8.521153,7.477857,-0.805802,2.846955,1.540607,-8.361791,5.303387,2.005771,4.829787,3.871494,1.471212,-7.293744,-3.211702,-9.988461,2.757626,7.960781,-5.391627,6.342077,-9.264740,7.180718,4.727992,-2.670070,-4.009568,-7.343561,2.135265,6.214988,4.774025,2.984426,-4.390242,-9.639162,-6.843251,-5.926986,5.611843,0.317429,-4.955350,2.463667,-5.202685,-8.605954,4.386826,-4.004521,-0.311057,2.861455,9.315229,5.293962,-4.532148,-8.590235,8.840385,5.860025,-7.936932,3.552094,7.031943,-1.311065,-8.983948,-9.687700,5.916153], dtype = "float32")#candidate|11637|(1690,)|const|float32
call_11635 = relay.TupleGetItem(func_355_call(relay.reshape(var_11636.astype('float32'), [6, 12, 12]), relay.reshape(var_11636.astype('float32'), [6, 12, 12]), relay.reshape(const_11637.astype('float32'), [1690,]), ), 4)
call_11638 = relay.TupleGetItem(func_359_call(relay.reshape(var_11636.astype('float32'), [6, 12, 12]), relay.reshape(var_11636.astype('float32'), [6, 12, 12]), relay.reshape(const_11637.astype('float32'), [1690,]), ), 4)
uop_11642 = relay.asin(call_11635.astype('float64')) # shape=(14, 13, 1690)
uop_11644 = relay.asin(call_11638.astype('float64')) # shape=(14, 13, 1690)
uop_11649 = relay.log10(uop_11642.astype('float64')) # shape=(14, 13, 1690)
uop_11651 = relay.log10(uop_11644.astype('float64')) # shape=(14, 13, 1690)
func_8623_call = mod.get_global_var('func_8623')
func_8624_call = mutated_mod.get_global_var('func_8624')
call_11667 = func_8623_call()
call_11668 = func_8623_call()
func_7276_call = mod.get_global_var('func_7276')
func_7278_call = mutated_mod.get_global_var('func_7278')
call_11670 = relay.TupleGetItem(func_7276_call(), 0)
call_11671 = relay.TupleGetItem(func_7278_call(), 0)
uop_11675 = relay.sqrt(uop_11649.astype('float64')) # shape=(14, 13, 1690)
uop_11677 = relay.sqrt(uop_11651.astype('float64')) # shape=(14, 13, 1690)
func_3640_call = mod.get_global_var('func_3640')
func_3642_call = mutated_mod.get_global_var('func_3642')
call_11680 = relay.TupleGetItem(func_3640_call(), 1)
call_11681 = relay.TupleGetItem(func_3642_call(), 1)
func_9058_call = mod.get_global_var('func_9058')
func_9061_call = mutated_mod.get_global_var('func_9061')
var_11693 = relay.var("var_11693", dtype = "bool", shape = (144, 4))#candidate|11693|(144, 4)|var|bool
call_11692 = relay.TupleGetItem(func_9058_call(relay.reshape(var_11693.astype('bool'), [576, 1])), 3)
call_11694 = relay.TupleGetItem(func_9061_call(relay.reshape(var_11693.astype('bool'), [576, 1])), 3)
uop_11705 = relay.cosh(uop_11649.astype('float64')) # shape=(14, 13, 1690)
uop_11707 = relay.cosh(uop_11651.astype('float64')) # shape=(14, 13, 1690)
bop_11708 = relay.logical_and(uop_11705.astype('bool'), relay.reshape(uop_11642.astype('bool'), relay.shape_of(uop_11705))) # shape=(14, 13, 1690)
bop_11711 = relay.logical_and(uop_11707.astype('bool'), relay.reshape(uop_11644.astype('bool'), relay.shape_of(uop_11707))) # shape=(14, 13, 1690)
output = relay.Tuple([bop_11627,var_11636,const_11637,call_11667,call_11670,uop_11675,call_11680,call_11692,var_11693,bop_11708,])
output2 = relay.Tuple([bop_11627,var_11636,const_11637,call_11668,call_11671,uop_11677,call_11681,call_11694,var_11693,bop_11711,])
F = relay.Function([var_11617,var_11626,var_11636,var_11693,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11617,var_11626,var_11636,var_11693,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_100 = relay.var("var_100", dtype = "float64", shape = (14, 2, 3))#candidate|100|(14, 2, 3)|var|float64
uop_101 = relay.sigmoid(var_100.astype('float64')) # shape=(14, 2, 3)
uop_105 = relay.asin(uop_101.astype('float32')) # shape=(14, 2, 3)
uop_122 = relay.atan(uop_105.astype('float64')) # shape=(14, 2, 3)
output = uop_122
output2 = uop_122
func_125 = relay.Function([var_100,], output)
mod['func_125'] = func_125
mod = relay.transform.InferType()(mod)
var_126 = relay.var("var_126", dtype = "float64", shape = (14, 2, 3))#candidate|126|(14, 2, 3)|var|float64
output = func_125(var_126)
func_127 = relay.Function([var_126], output)
mutated_mod['func_127'] = func_127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_306 = relay.var("var_306", dtype = "int64", shape = ())#candidate|306|()|var|int64
var_307 = relay.var("var_307", dtype = "int64", shape = (1, 7, 11))#candidate|307|(1, 7, 11)|var|int64
bop_308 = relay.maximum(var_306.astype('int64'), var_307.astype('int64')) # shape=(1, 7, 11)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
var_314 = relay.var("var_314", dtype = "float64", shape = (84,))#candidate|314|(84,)|var|float64
call_313 = func_125_call(relay.reshape(var_314.astype('float64'), [14, 2, 3]))
call_315 = func_125_call(relay.reshape(var_314.astype('float64'), [14, 2, 3]))
output = relay.Tuple([bop_308,call_313,var_314,])
output2 = relay.Tuple([bop_308,call_315,var_314,])
func_318 = relay.Function([var_306,var_307,var_314,], output)
mod['func_318'] = func_318
mod = relay.transform.InferType()(mod)
mutated_mod['func_318'] = func_318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_318_call = mutated_mod.get_global_var('func_318')
var_320 = relay.var("var_320", dtype = "int64", shape = ())#candidate|320|()|var|int64
var_321 = relay.var("var_321", dtype = "int64", shape = (1, 7, 11))#candidate|321|(1, 7, 11)|var|int64
var_322 = relay.var("var_322", dtype = "float64", shape = (84,))#candidate|322|(84,)|var|float64
call_319 = func_318_call(var_320,var_321,var_322,)
output = call_319
func_323 = relay.Function([var_320,var_321,var_322,], output)
mutated_mod['func_323'] = func_323
mutated_mod = relay.transform.InferType()(mutated_mod)
var_445 = relay.var("var_445", dtype = "bool", shape = (2, 7, 12))#candidate|445|(2, 7, 12)|var|bool
var_446 = relay.var("var_446", dtype = "bool", shape = (2, 7, 12))#candidate|446|(2, 7, 12)|var|bool
bop_447 = relay.logical_or(var_445.astype('bool'), relay.reshape(var_446.astype('bool'), relay.shape_of(var_445))) # shape=(2, 7, 12)
output = bop_447
output2 = bop_447
func_459 = relay.Function([var_445,var_446,], output)
mod['func_459'] = func_459
mod = relay.transform.InferType()(mod)
mutated_mod['func_459'] = func_459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_459_call = mutated_mod.get_global_var('func_459')
var_461 = relay.var("var_461", dtype = "bool", shape = (2, 7, 12))#candidate|461|(2, 7, 12)|var|bool
var_462 = relay.var("var_462", dtype = "bool", shape = (2, 7, 12))#candidate|462|(2, 7, 12)|var|bool
call_460 = func_459_call(var_461,var_462,)
output = call_460
func_463 = relay.Function([var_461,var_462,], output)
mutated_mod['func_463'] = func_463
mutated_mod = relay.transform.InferType()(mutated_mod)
var_576 = relay.var("var_576", dtype = "uint64", shape = ())#candidate|576|()|var|uint64
var_577 = relay.var("var_577", dtype = "uint64", shape = (16, 5, 3))#candidate|577|(16, 5, 3)|var|uint64
bop_578 = relay.logical_xor(var_576.astype('uint64'), var_577.astype('uint64')) # shape=(16, 5, 3)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
const_582 = relay.const([-4.878573,5.604330,7.109388,-8.860452,7.108061,9.924741,-4.480099,5.016824,-6.954773,-2.711831,-9.884820,-3.528236,-2.149991,5.413982,9.925131,-8.359178,-6.598163,-4.420300,9.622272,-8.124220,6.767751,3.452752,4.016502,4.548602,0.845884,-8.598816,-1.056973,6.396636,-1.792491,-3.501465,8.626405,0.042198,7.578308,9.664325,9.297534,2.007338,-8.985224,-8.740529,-3.107013,3.854665,6.713662,3.064289,1.857000,-7.121161,0.347384,6.782166,-5.060759,1.033365,-1.570866,-1.058718,-5.801808,-3.839285,-0.682800,0.445033,5.234607,-8.733421,-3.760585,-2.855395,-6.169573,2.135022,-2.600441,-8.929898,-7.266518,-9.437819,4.074516,-0.215815,-9.183204,-5.237362,2.439346,2.861652,-5.552574,2.729763,2.247194,-7.192145,3.821154,-6.597597,2.059341,-9.282230,-4.778783,-1.045663,6.731168,3.189258,-9.193101,0.940515], dtype = "float64")#candidate|582|(84,)|const|float64
call_581 = func_125_call(relay.reshape(const_582.astype('float64'), [14, 2, 3]))
call_583 = func_125_call(relay.reshape(const_582.astype('float64'), [14, 2, 3]))
output = relay.Tuple([bop_578,call_581,const_582,])
output2 = relay.Tuple([bop_578,call_583,const_582,])
func_599 = relay.Function([var_576,var_577,], output)
mod['func_599'] = func_599
mod = relay.transform.InferType()(mod)
mutated_mod['func_599'] = func_599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_599_call = mutated_mod.get_global_var('func_599')
var_601 = relay.var("var_601", dtype = "uint64", shape = ())#candidate|601|()|var|uint64
var_602 = relay.var("var_602", dtype = "uint64", shape = (16, 5, 3))#candidate|602|(16, 5, 3)|var|uint64
call_600 = func_599_call(var_601,var_602,)
output = call_600
func_603 = relay.Function([var_601,var_602,], output)
mutated_mod['func_603'] = func_603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_648 = relay.var("var_648", dtype = "float32", shape = (12, 11, 1))#candidate|648|(12, 11, 1)|var|float32
var_649 = relay.var("var_649", dtype = "float32", shape = (12, 11, 6))#candidate|649|(12, 11, 6)|var|float32
bop_650 = relay.multiply(var_648.astype('float32'), var_649.astype('float32')) # shape=(12, 11, 6)
output = bop_650
output2 = bop_650
func_656 = relay.Function([var_648,var_649,], output)
mod['func_656'] = func_656
mod = relay.transform.InferType()(mod)
mutated_mod['func_656'] = func_656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_656_call = mutated_mod.get_global_var('func_656')
var_658 = relay.var("var_658", dtype = "float32", shape = (12, 11, 1))#candidate|658|(12, 11, 1)|var|float32
var_659 = relay.var("var_659", dtype = "float32", shape = (12, 11, 6))#candidate|659|(12, 11, 6)|var|float32
call_657 = func_656_call(var_658,var_659,)
output = call_657
func_660 = relay.Function([var_658,var_659,], output)
mutated_mod['func_660'] = func_660
mutated_mod = relay.transform.InferType()(mutated_mod)
var_862 = relay.var("var_862", dtype = "uint8", shape = (2, 1, 9))#candidate|862|(2, 1, 9)|var|uint8
const_863 = relay.const([[[-7,-6,-3,2,-5,-4,-7,-4,-2],[6,-8,-8,3,2,-6,-9,-9,10],[3,7,2,1,-6,-8,-9,2,5],[6,4,8,-4,-3,-2,-5,4,5],[5,7,10,2,10,-7,-4,4,10],[-7,9,-9,2,9,8,-4,-7,6],[10,7,2,6,-8,3,2,-4,10],[5,-7,-10,8,8,6,-5,4,6],[-7,-3,3,-2,-7,-8,-8,-1,-9],[10,4,5,5,-6,-3,4,-5,2]],[[2,2,8,8,-7,3,-7,-3,4],[-3,-9,8,1,9,-9,-5,7,-2],[-9,3,9,-2,-10,1,7,2,1],[8,-2,-10,-2,-3,2,3,8,-9],[-3,-5,-6,-6,-10,-8,8,5,-7],[-10,1,5,1,-7,4,-5,-5,-10],[9,-5,-6,-10,-1,6,-1,6,-2],[-5,8,1,8,-9,-10,-7,6,-10],[6,-9,-6,-4,3,-8,10,-9,7],[-10,-8,9,7,9,-7,6,-8,10]]], dtype = "uint8")#candidate|863|(2, 10, 9)|const|uint8
bop_864 = relay.less(var_862.astype('bool'), const_863.astype('bool')) # shape=(2, 10, 9)
uop_872 = relay.log10(bop_864.astype('float32')) # shape=(2, 10, 9)
output = relay.Tuple([uop_872,])
output2 = relay.Tuple([uop_872,])
func_887 = relay.Function([var_862,], output)
mod['func_887'] = func_887
mod = relay.transform.InferType()(mod)
var_888 = relay.var("var_888", dtype = "uint8", shape = (2, 1, 9))#candidate|888|(2, 1, 9)|var|uint8
output = func_887(var_888)
func_889 = relay.Function([var_888], output)
mutated_mod['func_889'] = func_889
mutated_mod = relay.transform.InferType()(mutated_mod)
var_896 = relay.var("var_896", dtype = "float64", shape = (14, 16, 13))#candidate|896|(14, 16, 13)|var|float64
uop_897 = relay.atanh(var_896.astype('float64')) # shape=(14, 16, 13)
func_318_call = mod.get_global_var('func_318')
func_323_call = mutated_mod.get_global_var('func_323')
var_907 = relay.var("var_907", dtype = "int64", shape = ())#candidate|907|()|var|int64
const_908 = relay.const([-2,10,6,-8,4,7,4,-5,-6,-7,-7,5,-2,2,-2,3,-4,9,-6,-6,-8,-10,-9,-5,10,-8,-4,7,-8,9,-4,7,-5,9,-7,10,8,-8,-9,-1,-8,3,4,5,-1,-5,9,4,-10,3,-9,-1,-7,3,-5,-2,-5,-2,-7,2,-3,4,9,-6,-10,-6,-6,-6,-7,8,5,-2,6,-1,3,4,2], dtype = "int64")#candidate|908|(77,)|const|int64
var_909 = relay.var("var_909", dtype = "float64", shape = (84, 1))#candidate|909|(84, 1)|var|float64
call_906 = relay.TupleGetItem(func_318_call(relay.reshape(var_907.astype('int64'), []), relay.reshape(const_908.astype('int64'), [1, 7, 11]), relay.reshape(var_909.astype('float64'), [84,]), ), 0)
call_910 = relay.TupleGetItem(func_323_call(relay.reshape(var_907.astype('int64'), []), relay.reshape(const_908.astype('int64'), [1, 7, 11]), relay.reshape(var_909.astype('float64'), [84,]), ), 0)
output = relay.Tuple([uop_897,call_906,var_907,const_908,var_909,])
output2 = relay.Tuple([uop_897,call_910,var_907,const_908,var_909,])
func_920 = relay.Function([var_896,var_907,var_909,], output)
mod['func_920'] = func_920
mod = relay.transform.InferType()(mod)
mutated_mod['func_920'] = func_920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_920_call = mutated_mod.get_global_var('func_920')
var_922 = relay.var("var_922", dtype = "float64", shape = (14, 16, 13))#candidate|922|(14, 16, 13)|var|float64
var_923 = relay.var("var_923", dtype = "int64", shape = ())#candidate|923|()|var|int64
var_924 = relay.var("var_924", dtype = "float64", shape = (84, 1))#candidate|924|(84, 1)|var|float64
call_921 = func_920_call(var_922,var_923,var_924,)
output = call_921
func_925 = relay.Function([var_922,var_923,var_924,], output)
mutated_mod['func_925'] = func_925
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1059 = relay.var("var_1059", dtype = "float32", shape = (6, 16, 14))#candidate|1059|(6, 16, 14)|var|float32
uop_1060 = relay.cosh(var_1059.astype('float32')) # shape=(6, 16, 14)
bop_1069 = relay.maximum(var_1059.astype('int64'), relay.reshape(uop_1060.astype('int64'), relay.shape_of(var_1059))) # shape=(6, 16, 14)
func_656_call = mod.get_global_var('func_656')
func_660_call = mutated_mod.get_global_var('func_660')
var_1076 = relay.var("var_1076", dtype = "float32", shape = (132,))#candidate|1076|(132,)|var|float32
const_1077 = relay.const([8.969245,2.903170,1.418578,6.372254,-0.762299,-7.835309,8.691875,-8.187615,-8.313817,4.468851,6.380779,-6.889536,6.688410,7.337073,8.635353,2.792535,-8.918064,5.819154,-1.438821,0.283585,9.529557,0.087091,-3.461333,7.578019,-8.681950,2.807725,-4.661968,-8.286355,3.405058,-7.358822,-7.323696,6.840275,-1.170396,7.183194,3.848922,7.231827,-5.153454,-2.829613,-7.864538,-6.300813,-5.588086,-9.983223,1.138005,-8.725268,-8.981337,9.218473,5.486220,-0.586055,-3.737509,-0.335292,-2.701257,-7.311669,9.924908,7.756692,-7.676748,-2.620878,5.668089,6.986098,0.285960,7.640244,-1.782148,8.051066,4.651347,6.354421,8.721855,-8.069530,8.478587,-8.595551,4.751739,-3.175290,5.910999,-8.941922,3.960238,-3.817554,-5.351608,3.643530,-7.856319,-3.234788,-8.089576,6.139628,7.333039,4.470289,9.279757,4.695189,1.390487,-0.066315,9.413673,9.860004,5.754926,6.050098,6.525506,-6.344805,4.539495,3.667263,6.333692,2.064944,-8.756828,7.710740,5.443861,-6.041374,7.209290,4.093636,-2.081037,3.533676,-4.048353,5.807845,2.933708,-8.514899,-1.045802,-8.552843,-7.600944,-5.251978,-5.720866,-6.731834,5.296911,-8.575895,-6.757240,6.301818,-4.893076,-9.625487,2.715271,-6.698736,4.171264,-6.340505,9.595645,6.731677,-6.330624,-0.981066,-6.349013,-0.877079,-5.672564,-7.013118,3.597718,3.975757,-6.326821,-4.992273,0.734436,9.957421,2.204127,-8.726495,-7.373600,6.767492,8.148384,-5.552130,-1.790084,0.094757,3.423726,1.038113,4.149409,6.724423,-7.036418,-6.356006,-7.938222,7.773245,2.393764,-7.733522,5.335253,-3.323070,-4.409055,-9.592675,-1.429874,5.367166,7.705234,-2.277412,9.919069,6.453067,3.616304,5.555673,7.150256,-7.381780,-4.322076,-2.920272,-8.843456,-2.510109,8.573561,6.989679,2.432885,-6.999065,-8.880623,2.478926,-0.270968,7.954685,-8.022585,5.223315,8.139909,-5.752113,8.479834,-4.334048,-6.891944,-4.169188,5.968341,3.509719,-5.765533,-5.488466,-3.408118,-9.745521,-5.499186,-3.030718,-6.695093,-7.373060,7.229448,6.134611,4.345045,-4.177604,-8.414272,-4.764284,6.366337,-0.350375,7.277111,-6.549500,3.810034,-3.050558,-5.490389,-3.741511,-1.778826,2.296928,-3.277597,-5.731319,-2.219015,1.999415,8.267568,-9.800785,9.721695,-2.794937,9.882156,-5.439622,5.079647,-4.202145,4.881232,-6.687894,5.672146,-4.328542,-2.738928,-0.064268,1.064142,-7.252413,9.570749,3.660020,5.526449,6.037659,-8.264032,3.950555,-1.136155,-2.450830,5.787927,9.909258,-9.396783,-0.057799,0.531485,5.504043,-1.627073,3.368605,-7.604286,-8.361561,6.401854,3.205275,3.608246,7.984166,-2.741234,9.628588,6.369937,0.956225,-1.316193,-1.596954,-6.457267,8.570675,2.746216,-0.763956,5.922545,-9.336268,-1.674339,5.949988,-6.693030,9.612244,-1.625348,-5.917195,9.984826,9.460634,7.424996,4.928209,1.417567,-2.966422,-9.781554,-0.137210,2.561587,-3.967325,-2.891432,5.383188,-6.690195,-1.553228,-5.125874,-3.070024,-9.489994,1.279419,-4.746105,1.068664,2.949903,-1.365555,-8.237909,-4.191068,6.547429,1.533110,-8.761367,9.707951,2.038459,5.367312,-2.751285,8.239672,8.130324,0.383433,-2.149319,3.340786,-7.723966,8.548000,-8.520909,5.684510,-0.409937,-6.361071,0.986670,7.763135,7.006282,-0.670087,6.368200,-1.111541,0.756842,-0.998522,-2.622421,9.161105,7.986607,8.523554,-6.819269,-4.759195,6.863644,9.818668,-1.993800,5.337065,7.671623,4.895719,2.469448,0.780364,5.578516,-8.569323,6.771900,1.226378,-4.517153,6.728461,9.959519,5.221953,-2.697921,0.422245,-0.142210,-5.967737,5.973667,-9.678712,6.647472,3.998793,2.144391,-6.018713,4.689936,1.751442,-6.639612,7.408201,-6.438908,-3.545464,1.952289,5.722471,-7.995243,-4.311780,-3.377815,-4.271534,-3.145860,-2.888600,-3.357637,1.990577,-9.887361,3.548155,0.643191,-2.918293,-5.843285,-8.010935,6.667703,0.774946,7.331625,1.353215,-4.913533,1.296036,0.266282,-1.760760,-7.953277,0.523281,-5.378461,6.345424,5.399646,-1.873594,-4.708340,-5.238667,-2.439770,8.705370,2.477894,7.881661,-9.599796,-7.917907,4.713219,3.677662,-7.452858,-4.200895,-3.657702,-9.774352,-7.626581,3.909904,0.805442,-3.392971,8.386762,7.292946,-6.038269,-5.672429,1.123617,-6.859714,9.305473,-0.988035,-8.533897,-0.036438,-5.603358,8.490718,8.070326,5.622393,-7.818650,6.834559,2.801386,-9.572786,2.158515,0.668741,2.730121,8.357291,6.891408,2.932760,6.073174,-3.376372,-9.386376,-7.838493,-2.386320,1.603451,4.877502,-2.521596,1.682971,-9.864030,5.599845,-0.624323,2.007091,3.170609,8.130235,-0.343083,2.322500,0.860341,-2.854680,8.529701,3.831319,2.744557,6.561366,-3.586876,-3.469693,-2.234118,-1.844246,2.648527,-4.672778,-2.186353,3.789017,-7.551478,-4.428537,-1.372050,2.214249,4.803145,-8.400170,7.080174,8.205996,7.100173,-2.180242,5.109812,-4.903463,-6.842173,-2.736804,-6.174063,-2.051561,-3.159160,-8.207103,6.129327,-3.830745,3.236955,-1.724641,2.501118,-8.716027,2.411669,-1.247580,3.658668,3.641211,6.612146,-2.463892,7.617956,4.251520,6.004534,2.463738,0.111914,-0.888366,-6.653137,-4.097865,-5.879146,-3.486169,1.385126,-4.249060,9.070534,3.096275,1.696688,1.379327,-9.294287,-2.863787,-6.341655,-0.614636,-2.733320,-2.371304,4.211144,-6.725199,8.307956,-2.833379,7.370211,2.427021,-5.129109,4.307671,7.181512,7.698263,3.784460,5.889044,7.347864,-2.020919,-2.739352,-1.548842,1.655346,3.755287,-1.601293,3.335044,5.361450,-5.226490,6.984833,2.066346,-2.180256,-3.797738,3.308279,-7.279676,-9.272919,-4.846230,6.255905,-4.798610,5.029486,-3.697230,9.678430,1.626847,-9.100626,9.614743,4.805632,-3.422736,1.135709,-1.347553,2.922648,2.447412,6.034159,-5.689905,-8.030097,9.313738,9.025220,2.425729,6.592962,6.148681,6.420713,-4.525225,4.233470,-7.487033,8.876746,2.562087,4.255682,-2.555236,-7.586504,-4.411522,-2.154566,-0.807313,4.242496,-1.944170,-8.800418,-2.467329,-7.920697,6.696414,-8.495385,-4.396392,-3.967972,-8.723877,-7.334320,-4.487209,5.939691,-1.591824,-0.319609,9.714325,-4.693277,-4.156191,2.301312,-3.147046,1.900838,-2.708162,-9.772325,-6.129894,-6.774937,-2.924983,4.025967,-2.015611,8.544952,-3.069582,3.120785,3.860408,-8.847300,1.749645,9.928731,9.409006,1.789131,-1.121672,4.402692,-0.312353,5.477682,-7.487081,1.499028,3.264672,3.247563,-2.588659,-7.770693,9.178071,2.417361,-2.088808,-8.881383,-1.608446,8.003262,9.725251,5.318964,7.949087,9.352170,4.879836,-3.858120,1.116499,9.608327,-2.347792,-8.810957,-2.421953,-8.026480,-3.215910,-0.475016,-2.209340,6.094048,-1.377902,4.836046,8.097725,-8.036630,1.522848,1.181574,-1.501674,-5.961311,-0.320241,-5.399589,4.261686,-7.044216,-3.695763,-6.935630,-6.448138,-4.692615,-8.881564,-3.676149,-4.880363,-4.698566,8.009194,6.852361,-9.130377,9.595416,-2.646754,8.869740,-8.060815,6.261961,2.342595,-0.298359,0.350488,-2.271793,-2.895352,3.056293,5.888963,9.735782,1.265753,5.090953,-1.310686,7.992868,-6.142838,-6.996184,-9.583123,0.207418,3.532749,5.010926,6.411424,-6.475785,4.680645,-3.333064,-4.450224,2.004775,-7.481389,9.474133,0.110444,5.839354,-3.087435,5.250802,4.420628,-3.228143,-0.054835,4.183174,4.443609,6.721082,8.979674,-3.790072,7.546552,-7.712167,-7.904624,5.189763,-7.859939,6.745685,-0.039403,5.520049,-2.488628,0.040415,9.442100,-5.905083,-8.132123,1.453970,2.597462,3.502782,-9.254685,9.170409,-8.508008,-5.898330,3.578339,2.440544,-7.519196,-0.104392,-3.165841,6.300995,-9.460422,-6.011242,-6.455495,6.387130,8.967676,-9.903133,-1.052287,-6.433172,-3.397640,3.298601,0.501389,-8.007996,5.168796,-8.766120,-7.153117,5.988995,2.413422,5.137187,-4.192404,2.433150,-9.174649,1.454605,0.728662,5.237606,-4.486652,-5.584662,6.735848,-7.706900,6.516154,-1.650503,-9.068741,-8.709120,8.416109,1.517787,-7.716973,-5.130891,8.144427,1.657202,7.417138,-6.470966,5.501948,6.526419,4.437960,6.399729,-3.348257,-7.780993,-3.685984,-3.522065], dtype = "float32")#candidate|1077|(792,)|const|float32
call_1075 = func_656_call(relay.reshape(var_1076.astype('float32'), [12, 11, 1]), relay.reshape(const_1077.astype('float32'), [12, 11, 6]), )
call_1078 = func_656_call(relay.reshape(var_1076.astype('float32'), [12, 11, 1]), relay.reshape(const_1077.astype('float32'), [12, 11, 6]), )
output = relay.Tuple([bop_1069,call_1075,var_1076,const_1077,])
output2 = relay.Tuple([bop_1069,call_1078,var_1076,const_1077,])
func_1080 = relay.Function([var_1059,var_1076,], output)
mod['func_1080'] = func_1080
mod = relay.transform.InferType()(mod)
var_1081 = relay.var("var_1081", dtype = "float32", shape = (6, 16, 14))#candidate|1081|(6, 16, 14)|var|float32
var_1082 = relay.var("var_1082", dtype = "float32", shape = (132,))#candidate|1082|(132,)|var|float32
output = func_1080(var_1081,var_1082,)
func_1083 = relay.Function([var_1081,var_1082,], output)
mutated_mod['func_1083'] = func_1083
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1153 = relay.var("var_1153", dtype = "int16", shape = (16, 2, 1))#candidate|1153|(16, 2, 1)|var|int16
var_1154 = relay.var("var_1154", dtype = "int16", shape = (16, 2, 2))#candidate|1154|(16, 2, 2)|var|int16
bop_1155 = relay.subtract(var_1153.astype('int16'), var_1154.astype('int16')) # shape=(16, 2, 2)
func_887_call = mod.get_global_var('func_887')
func_889_call = mutated_mod.get_global_var('func_889')
const_1169 = relay.const([[-6,6,6],[4,-7,9],[8,-7,9],[2,-7,1],[-1,6,-10],[3,-3,7]], dtype = "uint8")#candidate|1169|(6, 3)|const|uint8
call_1168 = relay.TupleGetItem(func_887_call(relay.reshape(const_1169.astype('uint8'), [2, 1, 9])), 0)
call_1170 = relay.TupleGetItem(func_889_call(relay.reshape(const_1169.astype('uint8'), [2, 1, 9])), 0)
output = relay.Tuple([bop_1155,call_1168,const_1169,])
output2 = relay.Tuple([bop_1155,call_1170,const_1169,])
func_1177 = relay.Function([var_1153,var_1154,], output)
mod['func_1177'] = func_1177
mod = relay.transform.InferType()(mod)
mutated_mod['func_1177'] = func_1177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1177_call = mutated_mod.get_global_var('func_1177')
var_1179 = relay.var("var_1179", dtype = "int16", shape = (16, 2, 1))#candidate|1179|(16, 2, 1)|var|int16
var_1180 = relay.var("var_1180", dtype = "int16", shape = (16, 2, 2))#candidate|1180|(16, 2, 2)|var|int16
call_1178 = func_1177_call(var_1179,var_1180,)
output = call_1178
func_1181 = relay.Function([var_1179,var_1180,], output)
mutated_mod['func_1181'] = func_1181
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1433 = relay.const([[[-4,9,-8,1,-4,-8,3,-2,-2,5,8,5],[-5,9,-1,-7,3,-7,3,-7,-3,3,-4,-2],[-8,6,8,-6,-10,-6,3,7,9,6,-4,-1],[9,2,9,-10,10,4,9,-1,-6,-1,-10,6],[-4,3,7,-4,8,-2,9,-5,-9,-7,3,-9],[-2,-10,9,-2,-8,3,-9,-6,3,5,1,1]],[[10,-8,3,-2,10,-9,-9,3,8,-5,-1,5],[8,-5,9,-8,-1,2,6,1,7,4,-3,-5],[3,9,10,7,5,6,-6,-2,5,-3,9,6],[5,4,-8,-8,-9,-4,-4,-7,-3,-2,-1,9],[10,6,5,-9,-3,10,-2,-2,-7,1,9,10],[-3,2,9,-10,3,-10,8,-1,-2,2,-9,-4]],[[1,10,3,2,2,-2,7,-10,7,-1,9,8],[2,5,6,-10,5,9,-1,4,6,6,9,4],[-8,-5,-6,8,4,-1,-1,7,2,3,-8,-9],[-6,-8,1,-3,8,3,10,5,-5,2,9,3],[7,7,7,-10,10,-8,-3,-7,-6,6,-4,-9],[7,-6,-3,10,-6,-5,-4,6,4,-3,2,7]],[[-2,5,6,-6,7,1,-2,-10,-9,-3,-10,7],[2,1,9,5,1,-7,6,-1,-5,3,-5,-10],[-9,-7,4,3,3,-2,-9,4,-7,-8,4,5],[2,-9,-10,1,-1,-8,-4,1,-4,10,7,7],[6,-6,3,-10,-9,1,-7,1,-1,-3,2,2],[6,-1,-7,7,-4,-4,6,3,2,-9,6,-8]],[[-10,2,6,8,-8,-5,7,-10,8,-7,7,-2],[-4,9,10,5,-10,-2,2,8,-10,5,-8,-10],[9,1,-7,-7,3,-9,5,4,4,2,7,6],[-5,-7,-5,7,4,2,-2,-2,-4,9,8,3],[-3,-6,4,-10,-2,-2,-5,5,-7,-1,-5,-4],[-6,8,-10,6,7,6,3,-2,4,-5,1,8]],[[-4,-8,4,8,7,-3,-7,10,10,-7,1,-9],[-1,4,4,-1,1,-9,-1,4,-3,3,-6,5],[-9,9,2,-5,-4,-5,2,-9,7,-9,-5,6],[-10,1,4,-1,8,2,-10,3,7,2,-5,-2],[9,3,-4,5,8,9,-1,2,2,1,3,8],[3,-7,3,3,3,-7,2,3,5,1,-4,-7]],[[-9,8,2,1,-8,-4,-10,-4,-10,1,2,-4],[-4,4,8,-4,-10,8,-2,5,-7,-10,3,-1],[-4,9,-4,2,-5,-8,8,9,-8,-7,-6,-8],[-1,-4,-4,-9,7,2,-10,1,-1,-8,5,-4],[-4,1,3,-7,-2,1,5,-4,-8,4,-3,3],[8,-2,9,-5,-6,7,8,6,-4,-5,6,1]],[[-6,-4,-4,2,8,-4,-9,-10,-7,-6,10,6],[8,-4,1,-10,2,7,-9,-7,-2,-4,4,-7],[2,6,7,7,-5,10,6,-4,-2,-4,9,-9],[-6,1,-8,1,-2,-3,10,4,1,-3,4,7],[10,10,-5,-2,4,3,2,4,-2,4,-9,9],[-4,8,2,7,-7,3,8,4,-1,-5,-8,10]],[[8,-2,-2,-6,5,-6,9,1,10,5,1,9],[-4,-8,5,-4,2,9,-9,10,-9,1,10,2],[-7,-6,-8,-2,-9,-9,-6,7,-9,2,1,1],[2,10,3,-2,2,-9,-2,5,1,8,-6,-7],[-1,-4,3,-4,7,-7,-7,1,6,10,-2,3],[-8,3,6,-9,-9,1,8,6,-1,-8,-1,-10]],[[10,5,6,7,9,-7,10,-3,-1,-2,10,-4],[1,9,-10,9,10,4,-3,9,-3,-8,6,-1],[-4,6,10,-4,2,5,2,-4,1,8,10,-8],[8,5,7,-3,-10,-4,-10,5,2,6,7,8],[-9,-4,6,2,-7,-9,7,-5,8,-9,-8,10],[6,5,5,1,-10,3,-6,1,5,8,-10,9]],[[2,8,-6,-1,-6,6,-10,7,4,9,8,3],[-9,-5,6,1,-4,10,-9,2,7,-9,7,-10],[-8,10,10,9,-6,10,-8,10,2,-4,8,8],[-6,-4,-3,-3,-3,6,8,-3,-8,6,6,10],[3,10,-9,-9,-5,7,9,-8,-5,-6,-8,9],[5,-3,-9,-10,-6,6,-9,2,9,-10,3,1]],[[-2,3,7,7,-7,-5,-5,1,-5,9,-1,8],[2,6,-5,5,3,9,-10,-4,-1,3,3,-7],[10,-2,9,-1,-7,-8,4,-2,-1,-9,-1,8],[-1,8,-3,-2,-3,4,-2,4,-1,-2,6,-4],[-6,6,7,9,-4,-1,10,-2,8,4,10,-7],[-10,8,2,-1,-6,-8,-2,2,-2,3,-8,6]],[[10,4,-7,10,2,3,1,-4,10,9,-9,-8],[-6,2,5,-8,9,2,6,3,-2,-4,10,-8],[-10,-2,10,9,-10,-9,-10,-9,-10,-4,5,-4],[4,7,-6,2,-6,4,-6,-1,5,-3,-7,-3],[-3,3,4,2,3,-10,8,4,8,-9,10,-5],[10,-9,10,3,-9,-1,4,-9,-5,-4,10,-7]],[[8,5,8,3,7,4,-4,-1,5,-3,5,6],[8,-5,9,-9,9,-3,3,4,9,-7,7,5],[-8,-3,-10,-5,8,-1,1,4,-3,7,-4,-7],[-9,8,-4,1,3,7,10,6,-1,7,-6,-5],[7,-6,-3,5,-1,9,6,-7,2,4,7,4],[-4,1,-1,8,8,-10,-1,2,-10,5,-9,-6]],[[-8,6,8,-3,-10,-4,-1,-10,8,-10,7,-1],[3,4,10,-4,10,-6,-10,3,-5,1,-1,7],[-1,10,-8,-4,7,-10,7,9,-4,8,-4,-3],[9,-5,5,2,8,3,-1,5,-6,-8,1,-10],[10,10,-8,3,7,8,9,-5,1,2,-6,1],[4,-4,-7,-1,-4,-1,3,2,1,1,1,6]]], dtype = "int64")#candidate|1433|(15, 6, 12)|const|int64
const_1434 = relay.const([[[-7,10,-6,-8,8,2,-5,-10,10,-10,6,-6],[-1,-6,3,4,-4,5,-7,-5,-8,-10,-7,-1],[4,-3,-3,7,5,4,-3,-8,-3,6,-10,7],[-10,-3,7,6,-5,2,-6,-4,2,-9,-4,-1],[1,-9,10,9,4,7,-5,-5,-9,-10,5,6],[-10,4,1,5,5,-3,1,-5,3,8,-2,-10]],[[-9,-8,2,6,8,-10,-7,8,-8,-9,2,-3],[5,-5,-4,9,-3,10,10,9,-5,-4,-3,-4],[-3,9,-6,-2,-4,9,-10,-9,-5,10,4,1],[10,10,8,-4,9,-10,-6,6,-7,-5,-3,-2],[5,4,-3,9,-10,9,-4,-3,-8,8,3,-3],[-2,1,-7,6,7,3,4,-5,10,-4,-7,-7]],[[-10,-9,2,-5,-4,-10,9,3,5,-8,-6,3],[5,10,6,6,-4,-9,9,-1,-2,2,-6,-9],[-2,7,-8,-6,2,4,5,4,-5,8,-8,-6],[9,-2,-4,-3,6,6,4,6,8,-4,1,6],[10,1,2,-8,5,7,1,-8,4,2,4,6],[9,6,-7,-8,-6,-4,-6,3,-2,-3,-2,1]],[[-2,4,2,-9,9,3,-10,2,1,8,10,-9],[2,9,-10,10,5,10,-3,8,-4,7,-3,-4],[6,-10,-3,-1,10,1,-10,1,-4,-3,-10,10],[-2,-10,5,-9,-5,-9,7,-5,10,6,8,7],[10,10,1,-4,4,-9,-9,2,-7,-4,1,-3],[7,2,9,-7,1,7,-7,6,8,-4,6,-2]],[[-5,9,-8,-8,2,-10,1,-9,7,4,-8,7],[8,4,-7,6,3,-9,-10,3,9,4,-1,2],[-1,-3,-7,-7,-4,-6,5,5,9,-6,1,10],[5,9,9,7,8,-8,-10,9,-4,-5,8,7],[-3,6,-6,-5,-4,-10,-6,10,-5,-8,-3,-9],[3,-8,-1,8,-9,10,-5,-8,-1,-2,5,2]],[[2,5,6,-4,7,10,6,3,-6,-3,-10,-10],[9,-10,5,4,-10,5,-2,-5,-1,-8,4,-6],[-6,3,-10,-7,-6,3,6,9,6,-4,-4,-9],[5,-4,9,-1,-9,-1,7,7,-6,5,8,10],[9,-4,4,-8,1,1,-3,4,-7,10,4,9],[10,2,9,1,5,-3,-9,9,4,-9,-2,-1]],[[-10,5,10,4,8,-9,-9,9,8,-4,-4,6],[-4,-4,-9,-7,8,5,-8,8,-6,-4,-9,-10],[4,3,-8,5,7,-10,6,7,1,-2,2,4],[-8,4,3,4,9,-7,-8,1,-4,2,-10,6],[3,-10,-9,-3,-7,4,-3,7,-8,9,9,-3],[-10,-6,6,-2,9,3,10,-5,-5,5,7,-9]],[[10,-3,9,3,3,-10,9,-7,7,6,-8,-2],[-10,-2,-3,-4,-1,2,-6,-9,-2,7,2,2],[4,7,-9,-4,10,-9,-8,-5,-1,9,2,6],[9,-5,-7,-2,-7,2,2,6,-3,6,-8,-2],[-10,8,-1,5,-8,-2,-9,6,7,-3,-6,-2],[6,4,-1,-4,-7,2,-9,-7,9,-9,-6,-6]],[[5,-2,10,1,2,-1,2,-3,-10,-7,3,-5],[3,-5,-9,2,2,-4,-7,-2,2,1,1,-3],[10,1,3,-10,-7,7,-5,1,-2,4,10,6],[9,6,-1,10,-8,-9,-4,7,-1,1,-3,7],[-5,-5,-7,9,-10,4,5,-5,5,-3,-10,-2],[7,10,6,-7,8,-8,-5,-1,-3,8,-10,-10]],[[-6,6,5,10,-3,-4,-10,8,3,3,4,-4],[-8,4,3,3,-10,7,6,7,-8,8,2,-5],[3,-4,3,-3,-10,1,4,-5,2,10,-9,-9],[8,6,5,-6,3,-5,-7,9,5,1,3,-4],[7,-7,10,7,5,-7,-7,9,2,6,2,7],[5,-7,-3,5,4,8,2,-2,-9,9,4,5]],[[2,5,7,1,7,2,10,10,1,-10,3,10],[-4,7,-7,-4,-6,-2,9,6,-3,8,6,-1],[-7,-2,4,-4,2,-6,6,9,9,6,7,3],[-10,7,-10,5,-9,10,8,4,7,-1,2,-6],[3,6,-6,2,-2,2,-7,-9,-5,-10,3,4],[-5,-3,-5,5,-3,-8,2,4,10,5,-4,-6]],[[5,3,1,8,-10,-3,9,3,-9,-10,-4,6],[-2,-3,-5,-7,-4,-8,6,1,6,3,1,9],[10,2,6,7,-9,6,9,4,-2,8,-8,-7],[2,2,-7,-5,10,10,7,4,8,-10,3,-8],[-10,-4,7,3,-3,-3,5,7,7,-3,-5,-8],[9,9,6,7,-6,-4,-4,2,-3,-8,-5,6]],[[-4,-4,-8,-3,-4,6,-10,8,6,8,-1,5],[-7,4,10,2,9,-3,10,-3,-8,6,4,5],[6,-1,-6,-10,-1,-3,-6,-5,2,-3,3,9],[-5,-9,-7,-2,-8,9,-1,-6,-5,3,7,8],[5,-2,-7,10,-5,2,3,-4,-7,8,-2,-8],[5,-10,-9,-2,10,-1,-6,-9,-1,-3,-5,9]],[[10,7,2,-2,-9,9,-3,-2,-6,1,5,-3],[3,3,2,9,7,-7,3,8,-2,-2,10,9],[7,8,-10,-8,-4,8,-1,2,-4,9,-6,1],[-3,-4,-7,9,-1,-5,5,-3,-4,-8,9,-5],[7,-2,10,-5,-8,-6,-2,-8,9,3,9,-6],[8,-10,-2,-9,10,5,7,-4,7,-10,4,-3]],[[5,10,3,-7,-8,5,1,-10,-7,2,3,9],[-6,10,-8,7,-10,-7,1,-1,10,-10,1,-1],[-4,-2,-9,-10,1,6,-2,5,8,-4,-6,9],[-10,7,8,2,3,1,-5,6,1,-7,5,-7],[-4,3,6,5,2,9,-2,-3,5,6,7,7],[-5,2,-6,2,-10,7,-8,1,-6,9,-9,2]]], dtype = "int64")#candidate|1434|(15, 6, 12)|const|int64
bop_1435 = relay.minimum(const_1433.astype('int64'), relay.reshape(const_1434.astype('int64'), relay.shape_of(const_1433))) # shape=(15, 6, 12)
func_656_call = mod.get_global_var('func_656')
func_660_call = mutated_mod.get_global_var('func_660')
var_1439 = relay.var("var_1439", dtype = "float32", shape = (132,))#candidate|1439|(132,)|var|float32
var_1440 = relay.var("var_1440", dtype = "float32", shape = (396, 2))#candidate|1440|(396, 2)|var|float32
call_1438 = func_656_call(relay.reshape(var_1439.astype('float32'), [12, 11, 1]), relay.reshape(var_1440.astype('float32'), [12, 11, 6]), )
call_1441 = func_656_call(relay.reshape(var_1439.astype('float32'), [12, 11, 1]), relay.reshape(var_1440.astype('float32'), [12, 11, 6]), )
output = relay.Tuple([bop_1435,call_1438,var_1439,var_1440,])
output2 = relay.Tuple([bop_1435,call_1441,var_1439,var_1440,])
func_1447 = relay.Function([var_1439,var_1440,], output)
mod['func_1447'] = func_1447
mod = relay.transform.InferType()(mod)
var_1448 = relay.var("var_1448", dtype = "float32", shape = (132,))#candidate|1448|(132,)|var|float32
var_1449 = relay.var("var_1449", dtype = "float32", shape = (396, 2))#candidate|1449|(396, 2)|var|float32
output = func_1447(var_1448,var_1449,)
func_1450 = relay.Function([var_1448,var_1449,], output)
mutated_mod['func_1450'] = func_1450
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1598 = relay.var("var_1598", dtype = "float64", shape = ())#candidate|1598|()|var|float64
var_1599 = relay.var("var_1599", dtype = "float64", shape = (6, 11))#candidate|1599|(6, 11)|var|float64
bop_1600 = relay.floor_mod(var_1598.astype('float64'), var_1599.astype('float64')) # shape=(6, 11)
func_318_call = mod.get_global_var('func_318')
func_323_call = mutated_mod.get_global_var('func_323')
var_1607 = relay.var("var_1607", dtype = "int64", shape = (77,))#candidate|1607|(77,)|var|int64
const_1608 = relay.const([-7.924131,3.907989,1.026640,3.823326,-8.659369,9.731844,3.226371,6.601691,2.479011,-8.126683,-7.457953,-1.960145,7.573917,-9.509601,-6.536705,5.935799,-1.012452,9.880440,-1.813255,8.233326,8.260624,-3.309682,-8.541702,2.360121,0.191698,9.094664,-5.294646,-9.534069,8.835288,2.784617,-9.147466,2.591699,7.733431,1.397546,3.225475,-8.444822,7.878309,1.258430,-2.713386,4.661219,2.442658,-8.199457,5.833982,6.447079,1.511919,-9.443791,4.382378,-8.254078,-7.322852,5.063330,-1.943245,-9.212801,-8.254264,9.155310,-8.561855,-1.874286,-9.906206,-2.219979,-4.479842,-3.598981,-1.907842,8.378210,-8.493531,-5.153893,6.132387,-9.248833,-5.462453,5.355266,2.926905,9.533707,-1.076604,3.784831,-6.813232,-0.159526,7.811440,-7.047745,1.288358,-9.790849,5.305099,1.522435,-4.011178,-3.300816,-4.531741,8.179047], dtype = "float64")#candidate|1608|(84,)|const|float64
call_1606 = relay.TupleGetItem(func_318_call(relay.reshape(var_1598.astype('int64'), []), relay.reshape(var_1607.astype('int64'), [1, 7, 11]), relay.reshape(const_1608.astype('float64'), [84,]), ), 0)
call_1609 = relay.TupleGetItem(func_323_call(relay.reshape(var_1598.astype('int64'), []), relay.reshape(var_1607.astype('int64'), [1, 7, 11]), relay.reshape(const_1608.astype('float64'), [84,]), ), 0)
func_1447_call = mod.get_global_var('func_1447')
func_1450_call = mutated_mod.get_global_var('func_1450')
var_1644 = relay.var("var_1644", dtype = "float32", shape = (132,))#candidate|1644|(132,)|var|float32
const_1645 = relay.const([[6.355954,-8.035003,5.814009,-2.362855,2.715490,6.647563,-6.478566,-2.501753,-0.089903,6.658452,-4.382743,1.033598,-6.499689,9.329804,1.132546,2.394734,-9.307893,-9.327665,5.536401,4.523269,-2.441782,8.650615,-0.082348,7.921848,5.449284,-1.994737,2.121024,0.783522,-0.664625,-7.083401,0.931246,3.351949,-6.583681,-0.349725,-0.670688,-5.967770,-3.815270,-1.742970,2.125892,0.800222,-4.322784,-8.347879,-0.789335,9.851506,-8.002473,-0.008760,6.957415,3.773881,1.991277,-8.024957,6.235410,-7.453352,-0.672842,1.021633,6.876410,-5.858344,-4.005006,5.961707,3.634419,2.722335,-4.763308,1.271096,2.003772,3.785340,-3.394409,0.340428,-8.009557,0.036906,-6.606708,-0.773947,-0.203357,6.623586,7.973688,1.436502,2.769861,-7.716162,-3.449882,6.599987,3.022722,-4.495387,-5.438228,6.561124,-7.765432,-2.336217,3.085667,-7.789712,0.844085,-5.388004,-0.447389,4.430319,7.954976,9.149086,-9.477582,8.520217,-5.364441,8.907307,7.533563,6.921089,-6.085753,-9.732656,7.536763,6.967293,-5.826991,9.947755,3.700173,-1.961710,1.580767,-7.823913,1.572034,5.278867,2.262234,-4.226992,8.922999,-3.156752,3.198310,-3.822492,1.810695,-5.917107,0.597804,-9.493200,-4.980490,1.096477,3.174244,5.174722,-3.371278,-2.978280,-2.828131,-7.986873,-4.083373,2.820680,-7.686935,-7.713353,8.398055,3.828093,9.676433,3.595404,6.454441,7.917989,-5.758674,4.814742,8.854263,-3.970896,-2.286743,0.391857,-9.126773,9.083078,-2.338924,-1.799126,-8.431072,2.664257,-8.981549,3.427547,3.507077,-3.998964,-1.513184,-7.257536,9.500287,8.415215,-5.890937,-3.809652,1.536783,9.967205,-8.914423,9.411736,7.758406,-4.035257,4.129804,0.440323,-5.066269,-5.288230,1.648307,-8.190427,2.307541,8.850279,-8.993258,-4.666671,7.396798,-5.149409,-3.106690,-3.967772,-2.248426,2.929449,-2.208482,-4.519492,-5.994402,9.999242,-3.257782,-3.227978,3.731492,6.966748,1.596979,7.717266,7.745845,-5.838032,7.327536,4.336950,3.313673,5.329419,-1.614199,-0.385408,-2.734754,-0.918979,0.737459,0.418039,-2.449596,4.812562,-7.019764,-6.103636,-4.278149,9.697290,0.721836,6.003767,5.161545,4.001428,-7.343778,-7.121189,6.901540,7.174281,1.331304,-4.527848,2.860585,-3.848908,-7.774827,0.503770,6.887680,3.835945,-3.941446,-0.111757,7.521465,8.322835,3.415786,0.006698,-7.988592,-6.906836,9.165723,-1.896186,-6.472737,-1.393369,2.858796,2.196128,3.365855,-1.548883,2.955796,7.541220,-1.704385,-5.917337,6.048234,-3.152072,7.459574,5.145044,4.639142,7.068307,-7.157112,0.496857,-3.116653,5.214573,6.530163,6.266569,-1.241295,5.850906,9.291927,-9.590717,9.603458,-2.043004,5.990366,3.384513,3.746539,-8.315023,6.722923,-8.935549,-5.886302,2.451548,0.569304,-4.398837,8.901299,-3.425911,-7.241297,9.838851,6.261719,-3.046330,-1.324733,-8.586910,-4.499182,7.806472,-6.165361,7.172445,9.808877,-1.215116,8.540265,-8.942754,-4.194097,2.573590,-9.782497,1.366559,6.619797,-0.194687,7.942269,3.160543,-7.780483,3.191223,-1.815059,3.959908,3.255231,-2.113101,2.031178,-1.247988,0.406085,-5.256096,-2.366262,-0.233669,8.367337,3.801455,2.498534,-3.329736,-6.935074,-6.343866,1.797542,-4.096319,4.626326,1.457214,-5.061674,-5.930008,-2.705441,1.285046,-1.060636,-9.243523,-1.901695,6.842925,-3.598401,2.532144,5.534001,-5.600674,-5.698847,-5.087796,4.820362,-4.914903,0.420373,-1.017785,0.240313,-5.946398,2.127427,2.913057,5.386547,6.109697,-3.374854,-7.685748,-5.204710,-6.149115,4.618102,-7.635696,4.994060,-9.337928,4.081189,-3.159261,-1.137662,4.528883,2.766859,-9.557463,4.659148,-1.159469,-8.811817,5.888808,1.640896,5.575734,-8.653112,-8.641315,-9.266556,-9.151281,0.385958,-4.743039,-6.293691,1.562568,-1.019649,-2.120328,9.905646,-9.233259,5.595661,-6.296152,9.357484,4.316977,8.266712,4.338652,3.409875,1.465729,-4.389761,-1.063232,8.785750,-9.768169,3.881634,4.228705,-5.999429,0.445454,-3.179850,-1.404733,6.101026,3.763121],[6.137082,4.053729,4.972737,7.284692,-3.497827,-4.754278,9.413876,-6.131667,8.555975,4.787286,6.917621,3.022345,-4.741520,4.033709,4.370930,-7.788159,-0.316592,0.781973,1.352310,0.814098,0.194230,6.679461,2.373196,5.599131,-8.779231,-5.614390,0.463634,0.403542,6.512321,-7.956048,0.879128,-2.944683,-0.258891,7.321747,-5.894990,5.411754,-1.850307,9.270858,-4.149323,-5.098877,1.307079,-3.734245,-8.599953,4.144417,7.519817,2.263575,-0.272420,-8.355281,7.603165,-7.465782,-5.517322,1.063839,5.057701,-4.902578,-8.274916,-4.459093,9.029472,-8.621198,-9.146886,-9.614003,8.187839,-8.992292,2.679034,-8.903826,9.208549,-0.251038,8.268841,-2.502016,-1.288466,-9.606969,-1.605287,8.683367,-9.241862,3.477155,9.625883,-1.817989,5.840627,-2.655834,7.911379,-8.755689,-3.962789,-1.557120,-2.322153,-4.224205,-4.095485,3.242254,8.340771,-3.956721,6.973311,-1.309427,9.179342,4.442123,3.095252,4.173206,8.765142,6.796398,9.558584,2.420296,9.742356,-7.939501,-7.700326,-6.450511,-3.441003,7.891781,-2.967999,-0.867393,-9.585133,7.319770,-5.270802,-0.393522,-8.668657,2.202290,-7.674328,3.090076,-6.820408,2.727007,-3.603586,-5.225985,-0.839122,-1.055753,2.521037,4.478650,-5.467716,4.413844,3.258348,-1.885467,-4.675525,3.745705,-4.468573,-8.396488,5.929215,-7.717901,3.702604,-5.208347,-5.553789,-8.045226,-7.345214,-7.267695,-4.156953,4.060034,5.234124,5.715070,5.760240,-9.519830,-7.142830,-0.837296,-3.443163,4.065164,6.984873,-9.526970,-0.211712,6.925404,-8.535538,8.156026,3.133327,-0.112589,1.964647,-5.617557,3.605997,-6.053763,0.946144,1.370159,0.868517,4.751752,-0.784152,3.479873,8.288002,1.800745,-5.720632,-0.190536,5.600850,-7.361373,6.890563,6.677364,-1.791562,-8.530101,-8.111175,2.424678,-1.784516,-8.730363,-3.722963,8.665574,-1.854839,7.302067,0.624616,0.061715,5.348865,9.734053,-6.545309,1.020103,9.193515,9.540016,8.154829,1.952836,3.875674,-7.830152,6.426901,6.501287,2.162279,-8.498825,6.988144,3.626460,-5.540729,2.855063,-0.114570,6.695709,-0.557664,2.143310,4.523721,5.697654,4.046770,5.189894,0.711472,-9.038774,9.581114,3.401912,-8.056356,1.565938,-9.955320,-1.203989,5.081514,-4.420138,-5.119417,4.356154,-5.369722,-3.421435,2.494505,5.009843,5.903150,5.939058,-3.601286,6.631907,9.469274,0.571360,5.754886,-4.502739,8.936012,-5.187963,4.752285,-9.566486,-0.752342,2.573923,-4.053765,-8.390660,-8.419856,-6.250808,-2.983618,-4.557787,3.505608,5.069698,1.815460,0.766553,-5.881271,-0.339172,-6.781581,-5.530512,3.439308,-6.898626,-1.147738,3.205787,-6.027952,2.544108,9.571735,-6.978328,-5.181833,5.217628,-6.916444,-2.260025,-6.470958,-7.004428,5.347184,0.657503,-1.404642,-6.755166,-6.736281,6.149334,-4.312376,-5.370254,-0.301569,-1.548099,-3.754085,-9.297645,-2.326797,-6.751709,2.585693,1.430578,8.986894,-6.598823,-5.376201,-9.689998,-1.087548,3.308851,-0.065648,2.154945,5.403127,4.890706,3.770861,-4.445500,9.252904,4.235560,8.742410,0.587983,4.932342,-0.525266,1.643327,2.272130,-5.001954,-6.593550,-3.800729,-8.449869,7.433311,2.783146,7.077825,-4.984563,-7.579143,-6.216212,5.683564,-3.161374,1.458577,-9.788499,2.546495,-8.132407,4.607415,6.627105,-8.185724,0.335368,4.317626,5.780905,-5.468204,4.825377,8.832573,-9.349379,-9.835662,5.375402,5.372841,-3.200947,0.399506,-3.873960,4.142888,-0.702548,1.150498,0.511240,1.378666,-3.978681,-6.321272,-1.503276,5.762850,-8.471220,-0.750454,6.642728,-5.036899,-0.620924,-3.093022,-3.818954,-5.183869,-3.985787,-4.515930,6.538309,-1.349077,3.895766,7.303022,-3.645582,-5.934401,-7.904357,-7.548560,-8.061139,6.074989,4.522726,7.730924,9.146496,-0.660196,-7.092697,6.642911,-0.588934,7.425088,4.400866,-9.321319,7.047359,-0.167734,3.786403,8.433584,1.383403,-0.409462,-0.768075,-2.522610,-4.298991,5.034653,6.936665,-6.174595,-5.720562,2.459771,-7.891159,7.680019,-3.516275,-7.971646,3.538104]], dtype = "float32")#candidate|1645|(2, 396)|const|float32
call_1643 = relay.TupleGetItem(func_1447_call(relay.reshape(var_1644.astype('float32'), [132,]), relay.reshape(const_1645.astype('float32'), [396, 2]), ), 1)
call_1646 = relay.TupleGetItem(func_1450_call(relay.reshape(var_1644.astype('float32'), [132,]), relay.reshape(const_1645.astype('float32'), [396, 2]), ), 1)
func_887_call = mod.get_global_var('func_887')
func_889_call = mutated_mod.get_global_var('func_889')
var_1652 = relay.var("var_1652", dtype = "uint8", shape = (6, 3))#candidate|1652|(6, 3)|var|uint8
call_1651 = relay.TupleGetItem(func_887_call(relay.reshape(var_1652.astype('uint8'), [2, 1, 9])), 0)
call_1653 = relay.TupleGetItem(func_889_call(relay.reshape(var_1652.astype('uint8'), [2, 1, 9])), 0)
func_920_call = mod.get_global_var('func_920')
func_925_call = mutated_mod.get_global_var('func_925')
const_1667 = relay.const([[-2.265182,5.353499,-6.731714,-4.423663],[0.982764,7.950623,-5.364509,-1.013335],[-1.148594,2.184114,-1.713318,5.490480],[9.924748,7.905898,-8.951775,-4.903317],[-4.161079,5.965194,5.897814,6.628866],[7.975410,1.918899,-1.504831,8.192929],[-6.266042,2.987587,7.861066,-6.038661],[5.303592,-2.455922,8.481368,-6.182004],[1.292976,-9.448291,4.554083,1.166021],[-0.849540,6.424607,-3.159985,-1.092460],[2.736238,5.419465,-0.641579,8.552126],[-6.648127,4.923241,0.510028,0.551321],[0.402135,3.314310,0.856715,6.608096],[1.967261,-3.759006,1.949893,-1.700227],[-9.486624,-3.019473,6.032476,-7.455519],[8.723474,9.808719,6.709703,0.983256],[8.615885,-9.115530,1.048540,-2.180018],[-6.811389,6.223088,8.432724,-6.457152],[8.492855,-3.366133,1.532978,-0.626237],[-9.370059,8.621738,-5.538792,7.753226],[3.858991,2.077157,1.830282,6.174165],[-6.776690,-4.359605,-7.631142,-7.910305],[0.426286,2.488548,1.452688,4.366756],[0.844352,-1.904250,-3.069183,7.650733],[8.962338,-1.893953,0.549418,-2.534834],[-4.775911,6.845689,9.840320,0.611885],[9.331856,2.700502,-6.423335,-8.214512],[7.190352,-5.103198,-1.105553,3.069009],[-2.354093,2.352897,2.026688,1.991821],[-7.625614,5.926608,-9.293876,-1.076440],[8.598560,5.785978,-5.089057,5.235757],[-3.468228,9.941174,-1.951368,-2.381179],[8.699955,-7.935952,2.451337,-1.067419],[-1.444508,7.841092,-4.450032,-6.249355],[-2.881210,-1.238135,-4.970029,-7.656683],[6.627486,7.820055,1.136543,-3.228259],[7.711100,9.106295,-6.223722,-9.505564],[9.275728,-1.454901,8.641268,4.248971],[-1.749137,5.949357,-8.831394,6.746439],[4.014304,1.303927,-3.605299,7.680091],[-7.554314,-8.270142,6.874311,4.045454],[-7.109734,-3.209221,2.875028,9.643231],[5.004821,-6.517234,6.974289,6.958412],[-1.165913,2.488331,-0.412993,7.159753],[6.566416,-7.920318,-5.045675,-3.811874],[0.564193,9.594424,-2.290259,-4.357550],[8.570175,2.291606,-8.797426,8.039995],[4.649850,5.377713,-8.277803,-2.537446],[-7.880834,-2.129234,9.730327,8.014245],[9.497074,3.509649,-6.978966,-8.492351],[-1.927739,-0.429735,-8.753026,6.253972],[-5.472987,-6.135807,8.877003,-1.607237],[2.040438,9.615772,7.260421,5.126134],[9.920522,3.120876,-1.415338,2.826730],[6.005553,8.269307,3.686994,-5.197110],[3.097744,-0.586497,2.986778,-2.291678],[8.352344,5.206874,-2.884597,-3.759222],[5.840088,9.754702,4.324550,-6.846875],[-5.246638,-7.957537,9.258204,1.559028],[4.532559,9.544453,6.527084,2.446703],[2.171536,5.137513,4.935254,5.549852],[7.472506,-3.677714,0.097928,-4.778257],[-1.825710,-4.250447,1.454797,-8.265543],[9.186275,4.050938,2.155442,-8.422121],[-5.933247,1.351795,3.297827,-6.598591],[7.661513,9.450230,-5.829741,2.852571],[-4.990660,-7.312882,9.678668,5.383004],[-2.219655,7.033445,0.969787,6.129383],[-9.322117,-7.319434,0.574131,-3.790790],[0.371541,-5.151083,3.879005,3.115299],[7.382218,4.383750,-0.109841,1.141053],[-9.377015,9.864887,-4.964300,2.552193],[4.587689,-5.767718,-5.775106,5.958372],[-7.742735,8.513124,3.420010,-1.974383],[-6.842252,-3.007708,-7.943031,-2.043964],[-9.750384,-8.183477,-2.528399,2.819560],[7.821143,-4.194713,1.941089,-5.963278],[0.472823,7.855048,-7.842399,6.954224],[-2.350288,8.046797,-4.082024,7.078491],[7.968910,2.810955,9.129223,3.485195],[7.292878,-7.324055,-3.932790,-4.842051],[6.973151,-5.040890,8.793791,-0.349900],[8.624338,-7.435795,0.179469,7.117348],[-2.701830,-7.308368,9.110660,-6.596562],[-8.784988,2.936520,2.467243,-2.219070],[-3.391775,-3.213445,7.080088,1.607752],[0.611056,-3.976269,4.880550,2.699153],[-9.314861,3.459148,-5.492342,-4.143345],[-1.788768,1.503503,-5.268915,-9.938414],[-5.633033,-3.919381,-4.698516,8.046982],[-7.790272,-7.269582,2.818489,8.920548],[-2.015833,5.815327,-0.786063,9.710992],[-9.912489,0.203325,-7.170280,6.145971],[-8.113946,-5.238164,5.490437,-7.449419],[9.841311,0.325997,6.233946,3.947411],[5.636989,-9.532067,-4.089798,-2.303893],[-4.574533,6.705212,-5.857440,8.867951],[7.857278,5.115430,4.898072,-5.665430],[-8.676008,8.108434,-5.296746,1.211154],[-1.129708,1.513466,2.756855,3.689549],[0.086454,0.350486,7.615057,8.673180],[-2.259687,8.824541,-8.969274,6.708680],[8.332659,-3.253892,7.718072,9.546225],[8.572927,-8.532900,-6.902722,-9.959323],[0.091560,3.947211,5.361596,8.727761],[1.969923,5.073185,-1.298255,4.245597],[-9.730128,3.727371,9.224369,3.259893],[6.566999,-0.783930,0.226630,-4.100649],[-6.359997,2.784381,-0.956316,2.346254],[6.837216,9.776194,5.457613,8.128666],[1.833368,0.248289,1.223173,8.431345],[4.582769,-0.420559,3.858649,6.294573],[1.225130,6.284361,7.938572,1.690369],[6.817174,-6.707012,4.688748,-6.470251],[-2.697929,-6.393070,-7.009916,-0.424482],[2.722052,-7.231460,8.669006,-1.804111],[-6.790770,-2.666959,-9.404544,-1.175302],[8.611298,2.777080,-8.531054,2.003568],[3.971647,-7.290904,7.067100,6.441515],[-6.514595,9.558998,8.977247,-5.167066],[0.775214,2.752203,-4.246057,-7.530187],[-4.225421,8.168456,7.001001,7.153321],[-7.068867,7.926306,7.678429,-5.190619],[-8.733423,1.217594,1.052515,-0.531504],[3.882433,-3.898494,0.840169,0.188743],[-8.226594,3.111630,1.705804,4.755612],[-5.654490,4.700405,3.628026,1.139319],[-8.314186,-8.606701,-0.611365,-0.563159],[-6.849808,-4.662217,3.553544,-2.025251],[-8.015422,-2.906414,-3.105885,7.647334],[-2.990540,-8.501689,-4.068669,7.561012],[5.901008,-7.039396,-3.380715,3.370412],[4.183621,2.588766,0.047728,8.994097],[2.868096,0.952076,5.466192,-7.264477],[7.581149,8.992185,5.403350,-3.899862],[-7.040659,-2.873857,-1.860375,-2.512204],[4.411610,-4.408020,7.800130,-6.033541],[6.607536,-3.330109,-0.835469,-5.875646],[-6.788268,7.286997,6.412410,-3.738063],[-0.990933,-3.484677,-8.547432,0.925784],[-2.186999,-7.984220,5.448887,-4.027243],[-4.950857,7.721479,-6.566753,-3.485639],[5.995681,-6.804686,-6.750005,4.468487],[7.048055,7.505002,-9.478349,-6.166220],[-2.945157,-8.404122,2.645914,6.496114],[3.122136,6.253188,-0.528172,-9.108411],[5.640406,-3.608794,2.561332,0.463720],[-3.151584,-1.919242,8.839132,2.395770],[1.922729,0.210348,0.152230,-2.872331],[7.874194,-5.895052,-5.828798,0.619914],[0.191367,6.343046,9.095985,0.872498],[1.518266,-7.278575,-0.678087,-6.991965],[8.725955,3.689786,-1.532365,-2.353837],[7.460451,-9.117192,9.602310,3.286782],[5.647579,-1.182604,9.033618,-7.970931],[7.564731,7.334255,4.040068,-8.235005],[7.601375,9.030822,5.291357,0.960132],[-2.292443,-3.683990,-5.483340,-3.984106],[-1.645789,-1.084728,-2.801851,-0.460922],[-6.835513,-5.660319,-3.215220,-4.021579],[-2.050492,4.282954,3.063786,-1.003735],[-8.430036,-6.757752,-8.549057,5.778527],[5.400311,4.554078,-5.838907,1.705807],[1.119582,-1.181774,-2.091728,-3.935321],[-1.954404,9.633522,-6.073919,3.285284],[-9.807531,4.948469,-3.585495,-7.529780],[2.393389,-8.461194,7.718004,-7.370796],[2.535618,-2.759882,6.737896,-8.400881],[1.802226,-0.472241,4.306099,-4.275089],[9.034060,-7.702134,-5.158236,3.873207],[-8.481806,-8.072247,2.901954,0.174109],[0.227293,3.196997,-5.381776,4.823128],[0.392247,6.189798,7.295846,-0.285894],[-2.547664,7.884165,0.490433,-6.020772],[-7.190537,-4.900161,5.001773,-3.034146],[8.884419,1.054456,8.838106,9.805473],[-2.902899,1.578550,5.753322,-9.333584],[-2.491378,-1.457915,-5.483072,-9.195378],[7.938687,4.176400,-8.506941,-1.431042],[4.742101,4.640300,-0.238235,0.912297],[0.302372,-8.895387,-8.759582,-7.978715],[-1.391755,6.299721,5.839970,5.843582],[-3.707021,9.103599,-7.794485,-2.952450],[-5.986563,-0.980193,7.564776,2.254820],[-1.841683,2.609431,9.657073,-2.033235],[-9.363595,-5.320135,5.581520,3.654777],[-1.323645,-5.583557,-3.287439,-6.836489],[-2.975891,4.464049,-7.997648,-9.210912],[-1.385979,-2.011687,-7.672845,-0.603495],[-9.102262,-7.690699,-5.716702,5.782822],[8.124853,-7.752357,-0.327520,-6.231600],[4.714744,-8.002289,-2.002241,5.422207],[-9.415186,-7.288301,-9.583381,-0.045482],[-5.871331,-7.205242,-3.073071,6.909911],[4.657232,5.953367,2.729671,-0.221867],[7.374453,-4.681743,0.067387,-0.825879],[5.129372,-3.759756,4.098382,-8.636299],[-9.383901,6.834666,-1.069515,-0.929733],[-7.979359,-3.578107,2.255335,-8.772800],[8.326982,-0.087989,-4.396463,3.426255],[-7.561794,5.097271,-4.364715,7.730700],[-2.827851,2.127987,8.177410,-9.008366],[1.853639,3.869314,0.745521,7.523301],[7.984254,-7.610802,-7.911254,8.431668],[8.406837,2.256937,5.607100,-2.616766],[7.091816,-4.337995,8.324908,-5.592090],[0.767114,7.417392,4.034153,-7.699860],[7.568983,8.875403,-5.098153,-4.006675],[4.090063,6.271426,-9.807705,6.994496],[2.892838,-7.665179,-6.684032,8.960047],[1.824644,9.297996,7.646224,5.520180],[-6.182175,-1.668773,8.297143,-4.094070],[-1.131519,5.392098,-0.500107,-3.129767],[3.532417,-5.587654,8.851587,8.691336],[6.741171,-3.285792,-4.984880,1.007339],[-8.164659,3.226472,-1.728803,-0.320220],[0.078924,5.491709,-2.837086,8.875118],[-2.030264,-9.339990,9.933188,-8.446024],[-0.185086,2.265524,-6.688703,1.798430],[0.810297,0.869631,-3.576708,-9.032423],[4.149953,1.169715,-8.260314,7.798630],[7.321531,-8.356506,-1.017179,7.372786],[7.679666,2.787566,2.568772,-6.679426],[-3.699818,-1.689894,-4.291452,-9.774928],[-3.495492,8.168071,6.600210,7.262322],[-6.929130,2.312693,1.811456,4.146005],[-6.678384,-4.647398,5.206956,-0.770252],[-4.721252,6.131879,8.781399,6.113663],[0.287668,-9.036012,5.558002,6.241081],[-5.882970,-5.038079,9.315317,-0.704951],[7.976666,6.535551,-4.702034,-5.491261],[-3.076481,8.645489,0.945653,8.606127],[3.798493,3.030502,-7.004297,8.661366],[-4.000383,-5.935648,0.669083,4.343366],[9.597952,-4.729021,-7.687693,0.566891],[-4.425090,-6.428978,1.602360,-5.041722],[-7.168669,7.880483,9.919802,1.025623],[8.381714,7.200813,-1.005764,2.976992],[-7.092962,9.719380,-7.797178,6.087493],[6.138274,-8.799252,-4.294539,-8.581429],[3.920684,2.521983,-3.599935,-8.229237],[-6.751425,-9.768770,-8.763739,-9.886596],[0.191886,3.560363,-1.014429,-5.479761],[-6.629609,-9.733179,-9.284790,8.934685],[4.097418,-9.255262,5.035195,0.915904],[-2.847450,7.934606,0.662843,9.515010],[7.580582,-9.357382,-1.147193,-8.452699],[1.637928,9.992019,6.069382,1.753762],[5.800644,-6.258521,-4.810957,-2.561543],[8.887275,6.712980,1.960640,-2.562240],[2.371284,7.728728,9.998944,4.801558],[-4.935763,-0.362183,3.687915,-6.830388],[4.502036,-8.203842,-9.886665,5.919599],[-3.079738,-9.250001,5.436280,-9.862221],[0.650852,-9.294198,3.504575,-3.819414],[-4.058761,5.010312,-3.375391,-8.004350],[-2.241780,-5.862680,5.044054,4.984715],[-5.509104,-2.897991,-6.529080,2.995390],[-2.857777,-8.943359,7.107710,3.657099],[-5.332970,9.019360,1.880940,-6.477142],[-3.363310,-8.545524,-4.908586,8.463345],[-6.947528,6.530840,6.268570,-7.970314],[-8.193997,0.424846,2.617109,-5.942397],[-7.765140,3.544867,6.662023,0.564126],[-9.781674,-7.542842,1.444291,1.529380],[9.546337,-1.311493,6.300783,-1.867130],[-0.421288,9.337155,-8.633916,3.128667],[-3.715217,-0.263482,-0.087589,4.311660],[-7.285075,-4.737140,-2.303656,1.452202],[-3.077794,-4.254123,-5.663454,1.008181],[-1.913175,6.751265,-2.460174,5.168596],[0.576485,4.754000,-3.228477,-1.904172],[-5.174812,-3.489947,-2.399702,-8.473988],[-5.713545,3.524227,4.956999,7.491258],[6.246175,-3.742304,1.481297,-0.629248],[-3.480541,-0.947322,7.790542,4.441918],[9.830023,-0.823401,0.757173,-2.666685],[1.662169,-1.736966,9.649535,-7.171902],[-3.057140,-4.775006,2.384258,-6.422082],[-9.165824,-5.850707,7.554082,0.035512],[1.486184,4.700848,-7.622940,-3.296314],[3.821084,-6.405554,-0.436740,7.367112],[-0.729365,-8.050206,4.274489,2.217332],[-1.658315,5.415972,2.217165,-4.514404],[-3.220678,2.455271,-3.711805,-3.724866],[-8.768601,-2.814037,1.580815,-9.818917],[9.706464,9.472785,7.427114,2.576458],[-1.123639,-5.328424,9.131309,5.450356],[-1.041850,2.319050,-6.283095,-4.232757],[-2.632361,-2.616965,-0.459629,1.527386],[3.121383,-4.953868,7.943280,-0.859803],[-6.848108,6.684853,-2.319919,9.590574],[5.261710,5.849298,-7.939365,0.940219],[-1.947741,0.543489,-6.709805,-4.838167],[5.167941,-6.881680,-4.843520,3.244141],[1.383927,0.207176,5.585033,-0.159331],[2.563590,-0.690013,4.058353,-1.783644],[0.876850,1.453640,0.932028,-5.718590],[-2.809551,7.404309,8.098897,-1.931511],[-3.391992,-3.575124,-3.110910,-5.542072],[-3.005907,-1.610310,-0.720377,9.383415],[-2.216425,8.853485,3.186988,-4.706803],[5.410572,-5.124642,-8.542833,4.586133],[-6.359952,-0.631429,4.701779,-0.318618],[-7.001372,7.790577,-8.399321,-3.593405],[3.172108,-7.290278,9.975863,1.294407],[-9.454503,-4.397593,-4.614455,8.225385],[2.800624,8.775655,3.191780,0.205988],[-2.692188,-4.480141,8.666128,4.917630],[1.256534,8.061553,8.156585,5.408299],[4.699185,-0.861328,3.370599,-3.564413],[-3.382946,8.999271,-2.475774,3.317031],[-7.925055,9.263178,-3.473900,-5.221330],[-7.708284,5.562088,-9.340793,5.889018],[-4.282076,8.823313,-9.639022,-7.450001],[-6.348942,-4.564105,-2.762598,9.702368],[3.235235,1.080689,-1.196856,4.655462],[4.994942,-5.764377,8.156301,6.626543],[5.429092,-2.911739,4.990280,-0.197041],[-6.829523,-6.875447,-9.436570,0.403070],[-5.100295,-9.933785,3.280432,4.639798],[-0.177595,-4.048862,4.856386,0.945493],[0.089691,-0.986940,-4.072222,-2.625414],[9.137285,-1.814542,-7.028155,-4.643933],[-9.927747,5.649728,-4.916456,-5.385313],[-5.955286,5.324194,8.199656,2.149491],[-9.209340,5.700043,-7.289027,8.939790],[-4.992635,-9.536591,-8.546508,9.246570],[0.727866,-1.349330,6.857190,-3.392931],[7.705054,5.157682,-4.118161,6.583021],[9.954990,1.139283,-8.117721,7.367513],[-4.389824,-6.727097,-1.899833,6.589831],[-3.009980,-4.677070,8.338398,-4.136164],[-9.960796,5.091757,-0.090760,9.703772],[4.280576,4.992928,4.734932,-3.996371],[-3.745278,-3.136120,-6.851598,-7.916526],[4.620099,-2.919737,1.104887,-6.612187],[-0.317770,-3.910937,-9.232039,-3.133239],[5.435332,-4.442747,3.777628,-0.953123],[8.173265,-4.242829,7.775022,-8.029709],[6.263204,7.125578,5.127460,-8.849615],[8.378071,-3.019321,-3.477274,3.389684],[2.387079,9.246332,-4.433795,-7.076632],[-2.681219,2.834972,-9.316040,7.322044],[-8.041230,-9.083074,-3.016610,8.582472],[-0.903790,6.181459,8.069989,-8.731607],[-2.418923,4.380678,3.712854,-3.923777],[-8.061218,3.052671,-5.208089,2.164004],[7.307377,-3.730672,-3.051395,6.785067],[-4.788514,-4.602591,1.650506,-3.829537],[-9.952625,-9.846598,6.303646,9.717903],[-6.703884,-6.899406,3.782614,5.331631],[-0.859784,-8.715480,-3.763159,4.556340],[3.333376,-9.979373,-3.659712,-8.191764],[-4.283832,-8.889596,-1.655220,6.680251],[9.709259,0.561059,6.325899,1.208022],[-7.806933,5.980886,-0.670824,8.325071],[-9.204212,-3.517303,-4.674983,9.710105],[-4.371254,4.856643,7.737680,5.923427],[-9.986082,-3.048586,-7.783653,2.737286],[7.522028,7.409046,7.104861,6.583042],[-7.894556,-8.146142,1.515145,2.459536],[-6.609876,-3.418507,2.954854,-9.377447],[-0.997073,-3.285714,-3.336894,4.754534],[-7.241699,1.395746,-0.758246,4.310085],[9.036931,2.292507,3.382799,-5.985483],[1.564604,5.390258,-1.327795,3.411506],[-4.104508,0.941361,9.112060,8.345597],[6.819806,-6.924640,0.411489,-8.823307],[6.883987,6.679782,-3.742867,-8.720290],[-5.793542,2.855793,4.515581,5.532706],[-3.759510,0.996250,-3.982983,8.425658],[4.079042,4.107744,9.831266,6.992698],[0.293896,4.802162,-0.613372,-2.884363],[5.022896,-8.944876,-3.973073,3.660616],[-7.081261,-0.493290,9.859492,5.744375],[2.376015,5.086924,-9.442119,-4.414227],[-1.871851,-3.855935,7.338993,9.758372],[-3.308102,-4.347321,-6.228838,9.435577],[-9.703881,6.128298,1.687405,-9.439216],[4.705602,4.930425,6.383987,7.807371],[5.450328,-9.212221,-3.634408,1.092706],[6.336549,0.733813,8.888714,5.134623],[8.724023,0.927611,9.775719,7.155538],[-3.506566,-8.056264,-5.297726,6.626696],[8.050608,0.882292,8.377838,-1.022615],[-6.845185,-6.093585,-9.453154,6.987908],[-4.390224,-9.258178,-1.445624,-2.744312],[-5.145622,-7.704742,6.384092,-8.710946],[-0.030882,-8.887257,9.948433,-3.299360],[2.761127,1.392565,-3.402366,0.791150],[-4.301392,-9.638236,3.691407,3.101370],[-1.237702,0.175483,5.986736,-5.814686],[8.317549,9.642839,-9.660237,-7.168599],[0.758703,2.966763,-6.220234,-8.601869],[5.049384,3.514695,-7.926544,-7.292491],[7.302331,-7.012265,-6.715803,-8.562331],[6.479343,-2.088910,2.883433,6.707769],[-5.790884,2.944036,8.509624,7.016139],[-9.611973,-4.792727,9.481969,8.226451],[-2.685680,8.890134,4.526605,-6.688051],[-2.466362,-6.820877,3.335898,-4.419145],[-3.632183,-7.575330,2.576218,-3.405025],[-5.302458,-6.996859,-5.470397,-4.479482],[3.085060,8.796976,5.943263,-4.811494],[-9.892191,-2.732423,-8.612129,8.840062],[-7.001641,2.049089,-1.573312,9.380611],[-9.483637,-5.971282,-4.992044,8.237088],[4.720112,-8.265499,-3.381067,-1.192950],[7.223345,-8.850057,4.115210,-5.118968],[3.266695,8.837531,-4.772899,-6.253273],[3.831200,0.737840,-2.678617,3.459560],[3.936295,-3.116925,-9.343675,-5.097618],[6.817345,-3.261600,-5.970290,-8.429081],[-9.872817,3.410017,3.224994,0.738016],[5.686072,-1.413361,4.226831,7.948662],[4.552634,-0.009378,-2.718348,4.908277],[3.577754,-1.310431,-4.484422,3.946572],[-8.962614,4.075951,-1.444961,-9.996149],[2.952689,0.860813,0.993119,3.508512],[4.465848,-6.467279,-7.662261,7.753847],[4.402084,-3.983762,4.965864,-6.733120],[-6.015883,3.961417,-0.236635,-0.568673],[-9.116969,-8.353764,-8.927807,-0.282160],[4.284821,6.048181,-4.918737,9.704820],[-0.351973,8.181589,9.744968,-2.390617],[-3.639617,2.204737,6.679693,-1.649431],[4.910167,1.176356,4.636945,6.367722],[2.817558,-9.522986,-0.333328,9.312482],[6.853120,-0.039622,9.216128,2.088082],[-6.053161,-5.454745,-5.190363,3.382894],[-8.185816,-1.271469,-7.716619,-9.283966],[-9.261407,1.328728,6.983038,-4.627830],[0.590149,6.298249,4.242704,-1.428628],[7.950775,9.844243,-2.780052,-4.474134],[-7.301232,-5.767406,-7.148173,-8.921430],[4.165127,6.335137,-6.935240,-5.014169],[-0.825196,-7.201618,-1.790905,7.704007],[-3.104968,9.536359,3.848211,6.048887],[-5.202655,-3.169883,-0.160199,-5.840748],[-4.756401,-9.398103,7.223963,2.684713],[7.991217,9.039735,-2.720298,9.288817],[0.838306,8.747250,-6.526930,-5.263358],[-3.458184,-6.334806,0.785007,4.969272],[-9.055213,7.870605,-1.931145,-5.523484],[-8.361389,3.608938,-1.167843,0.666679],[4.914079,8.696013,4.778268,3.182122],[-8.787708,6.168559,-1.378000,-0.104014],[-9.920535,-6.950003,-8.942054,-7.250078],[-7.956695,0.761193,3.769382,-3.802738],[-5.447109,-6.999670,-1.734055,0.195048],[0.327662,-3.747948,1.922626,5.604545],[-9.525078,-5.344772,-4.364681,-9.776204],[-9.855922,3.201660,-7.714574,2.337836],[5.090470,2.672697,7.086850,3.085279],[6.966129,-3.266866,-3.387095,-0.139649],[9.905131,6.166172,-1.857979,-5.710957],[1.761292,-6.219568,2.383109,-9.603494],[5.810575,-8.578882,4.434469,-9.169774],[-6.621582,1.659402,-5.573937,7.687469],[1.622970,6.480783,-1.554756,-5.546915],[3.849807,-7.846904,-2.074610,-3.070422],[-6.617399,-9.779860,-3.714083,-0.326830],[9.274555,7.073604,3.052683,5.197031],[8.757394,-8.100987,-2.303126,6.105870],[9.629293,3.977483,9.368561,-4.666941],[-8.891969,8.115655,5.582299,4.688030],[9.550253,-6.585784,-9.722506,0.221588],[-1.744576,8.192605,0.044259,-6.409987],[-5.874334,-2.544522,5.416746,8.354357],[-5.431756,-0.582878,-3.016190,-3.168039],[-5.967398,5.914773,3.976338,-8.713708],[-8.158609,-2.834513,0.444350,0.140451],[-6.294089,5.760418,-5.448549,-7.551210],[6.072493,-1.946988,-7.393709,2.992946],[6.782628,6.027065,-0.222922,-4.186341],[-2.246799,-7.081098,9.959634,8.439303],[7.484505,-6.917029,-9.154617,-4.441957],[2.244457,4.177951,-1.913332,9.429259],[2.855163,-1.164214,-1.345287,8.486202],[2.528125,-8.477145,2.175896,5.205727],[-2.137975,-2.878644,-3.574605,-6.505314],[1.574001,5.966227,4.709313,6.972293],[-1.815921,-6.119345,-2.698144,0.621019],[4.650047,-5.628692,4.644226,0.674247],[7.825272,-7.168769,1.709142,-7.176531],[8.238225,-3.600841,-5.721898,9.802520],[2.572177,0.086389,9.501019,1.950117],[9.719868,0.417907,9.314631,-9.733168],[-7.465869,-7.376632,-2.632939,-6.586534],[1.089988,-0.713094,-1.718489,-2.775746],[7.617371,6.938316,-8.038352,0.583025],[3.848960,-6.754834,0.672952,5.419878],[-6.409398,9.135737,-1.575909,-0.782696],[-6.721139,8.952321,-5.416529,-5.415857],[-3.070169,0.597644,5.115019,-9.034033],[1.086310,9.236694,1.088321,9.880483],[1.482949,-2.186991,-5.183367,6.242079],[3.208221,-7.409042,-4.142901,4.551766],[-2.012281,3.340376,3.817031,-6.652462],[-3.614137,-7.213501,3.579106,4.571509],[-3.299201,-6.074563,-0.576568,-0.601503],[4.846848,-5.152614,0.269578,-1.574131],[-3.945440,7.891369,7.534418,-5.814504],[-7.550811,6.612381,-4.118157,-8.562646],[1.807072,-8.488331,-2.505928,0.346612],[3.531841,1.765077,-5.461809,-4.351454],[2.597292,-0.890614,-2.564144,-1.111359],[1.781063,-4.712049,4.543540,7.878962],[2.788790,-0.853715,-4.201269,5.180535],[3.544343,-2.679345,-0.818672,-6.949747],[0.526276,-3.678900,-6.616849,-4.422277],[2.874700,3.147275,1.475617,3.105295],[-3.469154,-5.183307,6.826889,-4.151121],[-3.759368,-7.087861,-2.726191,-6.595399],[-3.346580,7.587702,2.351153,-4.971358],[-2.147929,7.766468,-8.345174,-4.909465],[8.135597,3.748701,9.952119,8.561928],[2.031145,-2.002763,5.741527,4.445058],[-1.557772,-0.557810,-7.129799,-8.020569],[-5.600626,-4.802019,-6.442435,-1.971161],[8.470574,-2.858679,8.253469,-4.588360],[-5.212421,-9.648908,2.873759,2.898653],[-3.129537,9.784245,-9.771617,9.985926],[-8.105682,-6.724014,7.830854,-2.407873],[-7.469393,3.935152,-0.221007,-9.895370],[-7.691959,-5.985470,-2.289742,3.185393],[7.835606,6.225049,-9.952728,7.306901],[-0.028824,4.424728,-2.346862,-1.298315],[9.761733,-4.338080,8.369701,-7.124680],[-1.100475,1.917514,-0.863527,4.190845],[-2.393166,1.908521,-7.079316,1.838384],[-9.764864,-5.199189,-3.012722,-0.882975],[-1.509606,2.487817,2.214575,8.016354],[3.986232,4.242897,-2.283947,4.375914],[8.044498,0.029249,2.155225,9.971116],[-5.390217,-5.158370,-9.410794,-4.273313],[-7.432248,7.552734,1.725081,3.647411],[8.133387,-6.324636,4.052237,-1.054482],[-9.990984,-7.898539,-6.689351,-1.628769],[2.084632,1.708781,1.530011,-3.182344],[-6.477311,5.252215,8.653695,-6.340799],[5.398091,-0.280084,-4.445154,-8.330982],[-1.889340,6.039103,-8.936695,4.342888],[-4.139453,7.286926,-8.076776,4.811214],[6.289928,-7.803855,3.012512,-8.494367],[6.259690,-0.823899,6.716145,7.680182],[0.391112,3.200528,-2.418347,-6.302311],[4.056380,-7.559993,6.009638,-5.456771],[-2.476775,3.041286,1.194721,4.631068],[-8.368326,0.487363,-5.214424,-6.968870],[0.214588,1.842727,-5.653409,-3.623975],[9.114073,-5.854925,6.025626,-2.171788],[6.356699,1.717919,2.002839,-7.595359],[-0.452248,2.709654,-0.661991,4.395649],[7.667882,2.208871,-9.727969,-7.268341],[-3.207973,-4.590117,8.993998,7.757581],[8.830020,-3.194188,4.669741,-1.750298],[-4.878438,-4.304053,4.514734,-8.010075],[-9.649087,8.773823,4.692144,9.687277],[-9.594074,5.955781,-3.618543,-6.595018],[-2.201997,-3.607601,4.157212,8.387974],[-0.384723,-9.565113,7.889187,8.581352],[-8.065280,-9.728365,-7.425753,0.817832],[-4.502612,-5.913548,-3.252659,-3.074374],[6.344278,-0.857985,1.648136,-7.986217],[-8.137796,-1.612475,8.260636,1.717838],[-3.009623,-9.234693,6.757760,8.004746],[-5.948503,-8.538058,-0.882434,2.994999],[1.705921,4.766417,-4.516998,5.730187],[-1.134795,-8.860992,1.621648,-0.166793],[-8.356171,-6.394693,-6.509232,2.606924],[5.427653,0.765501,-4.163371,-2.159599],[7.469730,-6.838366,3.845754,-3.559221],[4.432244,-8.450859,-9.616878,-3.086973],[8.966030,3.019547,-3.213757,-5.436968],[-7.179758,-9.217024,1.964681,1.508585],[-1.926948,-1.251964,6.202442,6.945773],[4.238434,5.476539,-6.374712,-1.583211],[-8.153578,-5.764029,-3.400208,-5.207276],[-4.675059,5.753192,3.650867,-3.494960],[2.377951,-0.677352,6.810870,7.036774],[1.553395,3.460953,4.759761,7.514170],[7.717470,-1.512505,-7.515064,-8.196391],[6.281591,-5.415541,-0.728091,-9.108576],[2.768281,-0.656427,1.649560,-8.512742],[-0.152556,-1.960376,9.650105,6.520479],[6.575417,8.375959,7.861895,2.370602],[2.830995,3.827139,-1.447347,6.376574],[-9.905673,1.476904,-7.063458,-8.042201],[6.392756,-9.449163,-5.819982,3.267516],[1.591661,-4.032522,-2.420052,-1.047669],[8.809671,-3.739381,5.466600,-4.953856],[7.965897,9.771930,0.599401,0.838636],[6.140169,8.762606,8.490713,4.349032],[2.665236,1.986430,0.462246,-3.590048],[-4.674139,5.803133,-3.333504,2.853655],[2.102210,6.293562,0.307827,5.638114],[-4.274927,-2.243141,8.236439,1.946513],[0.412709,-1.637181,-7.736930,-2.278044],[8.493650,-3.530973,9.752142,-9.474561],[6.940632,6.189328,-7.689215,8.829217],[4.203116,-5.610854,5.253675,-2.035507],[8.556257,-3.933929,6.528033,-5.765745],[-4.433063,-9.059029,-8.027494,-0.924474],[3.592455,-1.107674,-2.182697,-6.227003],[-1.770839,-4.664960,-1.105438,-5.688370],[8.201222,0.935747,5.960354,-4.779519],[9.084720,3.531539,7.049140,4.581602],[0.034058,-4.031560,1.793097,-7.820655],[3.560542,6.048008,6.018825,6.535305],[-6.356529,0.121660,-2.837284,9.581381],[-4.467761,-6.770609,-5.308282,-6.031755],[8.794536,2.530031,-2.233452,-2.023798],[-2.166590,5.734391,-8.812991,0.256002],[-5.129657,-9.495660,-1.878235,-6.567991],[3.546364,-7.906366,-0.386712,3.320146],[5.872526,-7.540544,-4.109174,5.388294],[-5.648861,-1.593260,-9.288801,-3.428352],[-1.279438,8.266980,-3.872763,-1.531733],[-7.789490,-4.471834,4.826074,2.172227],[-0.600746,-0.514929,-2.246485,-3.725771],[8.877152,6.984631,-2.416764,-2.370858],[8.686910,0.966178,6.113477,0.250439],[-8.204171,-7.724476,0.590852,-8.039093],[7.202268,3.977416,-2.528978,-8.570741],[-9.768909,2.575154,1.952629,-2.144019],[-5.257054,9.952957,3.141894,9.999258],[-7.267910,3.204335,4.824162,1.045994],[1.113202,1.124123,-4.538373,7.648538],[0.990241,6.629862,-5.356217,5.664432],[9.378017,-9.031233,8.263801,-7.052956],[7.750118,-4.056469,0.914129,9.132367],[-6.920443,6.827179,-1.866108,6.076694],[3.970179,1.606171,-8.080293,-0.739789],[7.791630,-6.280874,8.816133,-5.137691],[5.394886,2.058038,-4.842342,7.756321],[0.869254,-2.772601,2.903211,-4.247996],[-0.507392,-2.394305,-6.666588,4.114250],[6.313636,1.755630,-2.363069,6.853409],[-7.464187,8.327587,1.581951,8.790900],[9.268922,-2.880988,8.650282,2.830155],[-4.316108,9.512074,8.408775,-5.151746],[-1.391182,9.470138,3.368891,-8.934607],[8.112720,3.460523,-7.629185,-0.694750],[-1.638702,-0.248649,8.353212,8.538417],[8.160699,-7.345235,9.685480,0.218781],[-0.088503,5.550336,2.421332,6.826272],[4.628426,9.429500,8.610664,0.555960],[0.094690,-0.325239,1.950190,-1.629860],[-1.014251,9.640076,-8.473846,2.522920],[7.865954,-2.778714,7.426236,-7.226203],[-9.771071,-9.040884,8.653796,1.952648],[-6.043388,1.904087,-5.714387,-7.738140],[-7.249319,-1.301009,2.241692,-5.912429],[-3.028196,3.794405,-5.299057,-3.797914],[-3.555240,6.551703,-6.543503,-1.661171],[-9.285793,7.985946,1.195002,7.286749],[5.102481,-7.979931,5.592195,-5.992280],[-7.778680,6.995095,2.054154,1.299118],[8.389050,9.028259,-9.374521,-1.592582],[8.565021,2.657791,3.703225,-8.603414],[-6.075208,8.491255,9.063446,-4.791727],[-7.380199,3.966233,6.173771,0.870898],[2.830780,1.283090,-4.723035,-4.422700],[5.861015,-7.094343,-9.710268,5.459449],[-3.637029,-6.297728,-9.581915,3.149816],[6.351764,-0.019490,2.661916,6.251783],[-1.418868,-0.780611,-2.505686,-6.556316],[-6.941797,-6.460298,-6.026512,-5.011131],[7.785028,-4.487545,5.855133,-4.388493],[-6.686751,8.272028,-7.014965,-6.604002],[9.011679,7.749707,3.483689,4.323714],[-4.323393,-7.968451,-7.822021,9.762731],[-8.309349,9.582513,8.144896,-0.663493],[8.845751,-4.948754,-5.969975,-0.447346],[3.830871,3.748711,-2.811380,9.382233],[-6.080311,2.760188,-4.667998,-9.410170],[-9.358734,-3.584863,3.300679,-5.211114],[-3.652554,-9.887307,3.181751,6.878134],[-2.279218,-5.182954,8.439895,-3.185031],[4.612759,-6.883115,-4.173116,-7.061293],[5.434912,3.378841,7.447224,3.895303],[-0.219564,-6.440109,-3.734663,-7.453711],[-8.449762,8.497226,-2.828350,-3.806584],[5.584228,8.914053,2.689485,8.298396],[-0.895631,-7.271276,-6.691225,-2.305478],[9.404317,-2.588158,-5.931026,5.629692],[8.472628,-6.923842,-9.548662,-2.010773],[-4.012688,4.378146,8.676190,-0.895628],[9.182020,-3.392496,-9.939918,-1.537312],[7.195982,8.154925,-6.375886,6.636734],[-9.950673,2.708274,-7.666607,-9.282803],[-1.823122,-2.824842,-9.134895,4.511345],[1.981816,3.609868,-7.374382,-0.282952],[6.812760,2.039493,-6.109767,6.134947],[4.544074,5.605147,-6.931667,-4.298582],[1.654359,0.845050,9.171547,-4.507060],[-0.639537,-9.343437,4.624291,-1.963700],[-7.613486,-8.350691,-7.190108,5.103069],[1.226926,1.376243,8.573699,-8.141717],[5.305268,-9.061498,-3.409959,5.925186],[9.181618,-3.990498,-6.202202,8.672627],[-9.586739,8.562093,1.432264,-2.073185],[8.803783,8.549252,0.119750,-0.577175],[6.825097,6.024190,8.562012,-6.986290],[-8.723814,6.625613,1.026027,-6.007448],[6.730332,0.178882,-8.529043,1.278679],[5.090058,-4.323618,-0.805307,3.893278],[-4.339982,9.817836,-3.407221,-0.177425],[-5.316596,1.455161,-9.733033,-6.852344],[-6.985935,-7.587499,3.863154,-8.912927],[-2.245515,-5.858683,1.625050,-4.346733],[-7.725501,2.247728,2.302715,-1.549166],[-0.313526,-1.848397,9.436443,-4.817895],[-1.431059,-1.444357,-0.828290,-9.352097],[-0.425971,1.244675,8.967320,3.988244],[6.374331,-0.768931,-5.370921,8.601099],[-5.428988,1.914375,-1.014366,8.934124],[-6.571176,-0.386041,9.616135,-9.001094],[0.062906,3.756583,2.130999,3.384497],[-5.719459,-6.533657,-3.624807,6.567194],[4.468240,-3.661546,-1.392049,-4.153452],[9.204770,8.155244,0.920456,-8.972461],[2.611814,0.978914,-7.474785,2.748026],[-5.080415,9.178235,1.641602,-2.651334],[6.163882,-4.992240,-6.315944,6.462166],[-4.309331,-6.976136,-5.134387,-9.242839]], dtype = "float64")#candidate|1667|(728, 4)|const|float64
call_1666 = relay.TupleGetItem(func_920_call(relay.reshape(const_1667.astype('float64'), [14, 16, 13]), relay.reshape(var_1598.astype('int64'), []), relay.reshape(const_1608.astype('float64'), [84, 1]), ), 4)
call_1668 = relay.TupleGetItem(func_925_call(relay.reshape(const_1667.astype('float64'), [14, 16, 13]), relay.reshape(var_1598.astype('int64'), []), relay.reshape(const_1608.astype('float64'), [84, 1]), ), 4)
func_459_call = mod.get_global_var('func_459')
func_463_call = mutated_mod.get_global_var('func_463')
var_1675 = relay.var("var_1675", dtype = "bool", shape = (168,))#candidate|1675|(168,)|var|bool
call_1674 = func_459_call(relay.reshape(var_1675.astype('bool'), [2, 7, 12]), relay.reshape(var_1675.astype('bool'), [2, 7, 12]), )
call_1676 = func_459_call(relay.reshape(var_1675.astype('bool'), [2, 7, 12]), relay.reshape(var_1675.astype('bool'), [2, 7, 12]), )
output = relay.Tuple([bop_1600,call_1606,var_1607,const_1608,call_1643,var_1644,const_1645,call_1651,var_1652,call_1666,const_1667,call_1674,var_1675,])
output2 = relay.Tuple([bop_1600,call_1609,var_1607,const_1608,call_1646,var_1644,const_1645,call_1653,var_1652,call_1668,const_1667,call_1676,var_1675,])
func_1683 = relay.Function([var_1598,var_1599,var_1607,var_1644,var_1652,var_1675,], output)
mod['func_1683'] = func_1683
mod = relay.transform.InferType()(mod)
var_1684 = relay.var("var_1684", dtype = "float64", shape = ())#candidate|1684|()|var|float64
var_1685 = relay.var("var_1685", dtype = "float64", shape = (6, 11))#candidate|1685|(6, 11)|var|float64
var_1686 = relay.var("var_1686", dtype = "int64", shape = (77,))#candidate|1686|(77,)|var|int64
var_1687 = relay.var("var_1687", dtype = "float32", shape = (132,))#candidate|1687|(132,)|var|float32
var_1688 = relay.var("var_1688", dtype = "uint8", shape = (6, 3))#candidate|1688|(6, 3)|var|uint8
var_1689 = relay.var("var_1689", dtype = "bool", shape = (168,))#candidate|1689|(168,)|var|bool
output = func_1683(var_1684,var_1685,var_1686,var_1687,var_1688,var_1689,)
func_1690 = relay.Function([var_1684,var_1685,var_1686,var_1687,var_1688,var_1689,], output)
mutated_mod['func_1690'] = func_1690
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1695 = relay.const([[[7.675658,4.527318,2.082316,1.182119,-5.300902,-1.964871,-3.234102,0.353927,3.383317,5.332411,5.772538,9.541607,-4.304487],[5.472866,7.815064,-1.045655,-0.692056,9.741131,-0.873586,-8.285577,-4.748628,9.055095,4.992048,6.256430,-2.955133,-7.284399],[-7.945940,-1.401968,3.770342,-6.200762,-1.942647,8.563588,-4.389869,0.648261,5.731979,-6.021179,-0.264897,9.633842,-4.859265]],[[-2.373079,6.753664,5.982384,-3.174617,1.947414,0.522167,7.745860,-2.810237,-1.954970,7.105558,9.073275,4.738602,-4.972478],[-2.833151,8.518139,-0.877317,5.463060,2.247947,3.102554,-2.068132,4.610345,8.566503,-7.149843,0.414394,-6.413952,-6.906907],[-8.093372,4.129336,2.740120,-1.259805,6.817043,-5.303423,-6.196358,0.860637,6.618878,-2.891507,0.836446,7.195181,0.097084]],[[-0.044815,5.628996,-8.760418,0.940894,7.460450,4.653894,4.984648,-5.937266,4.900000,1.735774,1.656213,-7.530904,7.231569],[6.631700,6.702066,-3.242917,-2.968791,-6.455565,4.331425,7.328776,-7.769832,-3.652234,2.408596,0.103077,1.020604,6.596848],[-6.178960,2.881641,9.704381,-8.885663,8.149516,-9.456754,0.906889,-3.327668,-0.531837,4.162854,-2.155048,7.914269,-1.969073]],[[-6.823941,0.816481,-2.158094,-5.740197,-9.027512,-6.079158,-5.346791,0.683217,-8.685051,-2.372488,0.530268,-2.159372,3.710381],[-6.578954,-7.701864,-5.016898,-7.537337,-3.184154,7.946743,-3.870143,-4.113077,-9.471159,0.834223,0.687915,-3.950258,-3.510124],[9.612003,-0.697946,-2.558334,4.640993,-0.227801,0.113944,7.273817,0.631698,-2.841512,-7.623612,6.308219,-0.339836,-7.519631]],[[-0.204237,0.536753,-8.863729,1.498284,4.709391,2.347030,-8.918137,-6.495313,8.824068,4.360686,-4.076429,-1.874060,-3.400921],[-3.625065,-1.401384,-4.490666,6.629941,-1.231779,-5.910822,1.807901,9.640752,-3.371297,-9.756186,2.202310,3.834150,-4.597455],[5.105820,-5.900246,-2.862558,-0.482810,-4.527157,4.734878,-3.518752,6.303442,4.685799,-4.923355,-4.412986,-7.107861,-8.037306]],[[-2.185366,-6.593897,9.180643,9.075545,4.790929,-6.013170,2.681475,1.435714,0.165824,-1.531499,-6.123652,4.780560,-9.776678],[-1.914044,-7.502955,-7.724062,-5.748876,2.381518,-3.172061,9.110520,6.382978,4.199673,-1.598619,1.803934,-2.667344,2.226002],[-0.282853,-5.644614,-1.965513,8.331975,3.961235,3.941452,6.158197,4.943814,1.121985,1.961920,6.152574,7.997442,9.818280]],[[5.698686,-1.739614,2.971627,1.525807,8.273059,-6.975733,-6.521391,6.947433,9.082622,-6.402963,-0.495976,9.769611,-1.171920],[9.310761,1.383705,9.104594,-2.279106,8.380432,-4.135164,0.444246,-6.532116,-6.101788,7.411200,-5.684275,-2.159360,-3.571269],[-7.845959,9.631442,-5.568291,6.674046,4.886495,-7.738516,-4.478948,7.116966,-0.516294,3.381418,-2.103005,4.873092,0.925483]]], dtype = "float32")#candidate|1695|(7, 3, 13)|const|float32
uop_1696 = relay.atanh(const_1695.astype('float32')) # shape=(7, 3, 13)
func_656_call = mod.get_global_var('func_656')
func_660_call = mutated_mod.get_global_var('func_660')
var_1702 = relay.var("var_1702", dtype = "float32", shape = (132,))#candidate|1702|(132,)|var|float32
var_1703 = relay.var("var_1703", dtype = "float32", shape = (792,))#candidate|1703|(792,)|var|float32
call_1701 = func_656_call(relay.reshape(var_1702.astype('float32'), [12, 11, 1]), relay.reshape(var_1703.astype('float32'), [12, 11, 6]), )
call_1704 = func_656_call(relay.reshape(var_1702.astype('float32'), [12, 11, 1]), relay.reshape(var_1703.astype('float32'), [12, 11, 6]), )
bop_1710 = relay.power(uop_1696.astype('float64'), relay.reshape(const_1695.astype('float64'), relay.shape_of(uop_1696))) # shape=(7, 3, 13)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
var_1717 = relay.var("var_1717", dtype = "float64", shape = (84, 1))#candidate|1717|(84, 1)|var|float64
call_1716 = func_125_call(relay.reshape(var_1717.astype('float64'), [14, 2, 3]))
call_1718 = func_125_call(relay.reshape(var_1717.astype('float64'), [14, 2, 3]))
func_887_call = mod.get_global_var('func_887')
func_889_call = mutated_mod.get_global_var('func_889')
const_1721 = relay.const([[-2,-10,-1],[-8,-2,10],[8,-8,1],[-1,-4,8],[3,-4,-3],[-6,3,5]], dtype = "uint8")#candidate|1721|(6, 3)|const|uint8
call_1720 = relay.TupleGetItem(func_887_call(relay.reshape(const_1721.astype('uint8'), [2, 1, 9])), 0)
call_1722 = relay.TupleGetItem(func_889_call(relay.reshape(const_1721.astype('uint8'), [2, 1, 9])), 0)
func_318_call = mod.get_global_var('func_318')
func_323_call = mutated_mod.get_global_var('func_323')
const_1725 = relay.const(-10, dtype = "int64")#candidate|1725|()|const|int64
var_1726 = relay.var("var_1726", dtype = "int64", shape = (77,))#candidate|1726|(77,)|var|int64
call_1724 = relay.TupleGetItem(func_318_call(relay.reshape(const_1725.astype('int64'), []), relay.reshape(var_1726.astype('int64'), [1, 7, 11]), relay.reshape(call_1716.astype('float64'), [84,]), ), 0)
call_1727 = relay.TupleGetItem(func_323_call(relay.reshape(const_1725.astype('int64'), []), relay.reshape(var_1726.astype('int64'), [1, 7, 11]), relay.reshape(call_1716.astype('float64'), [84,]), ), 0)
uop_1734 = relay.sigmoid(bop_1710.astype('float32')) # shape=(7, 3, 13)
output = relay.Tuple([call_1701,var_1702,var_1703,call_1716,var_1717,call_1720,const_1721,call_1724,const_1725,var_1726,uop_1734,])
output2 = relay.Tuple([call_1704,var_1702,var_1703,call_1718,var_1717,call_1722,const_1721,call_1727,const_1725,var_1726,uop_1734,])
func_1744 = relay.Function([var_1702,var_1703,var_1717,var_1726,], output)
mod['func_1744'] = func_1744
mod = relay.transform.InferType()(mod)
mutated_mod['func_1744'] = func_1744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1744_call = mutated_mod.get_global_var('func_1744')
var_1746 = relay.var("var_1746", dtype = "float32", shape = (132,))#candidate|1746|(132,)|var|float32
var_1747 = relay.var("var_1747", dtype = "float32", shape = (792,))#candidate|1747|(792,)|var|float32
var_1748 = relay.var("var_1748", dtype = "float64", shape = (84, 1))#candidate|1748|(84, 1)|var|float64
var_1749 = relay.var("var_1749", dtype = "int64", shape = (77,))#candidate|1749|(77,)|var|int64
call_1745 = func_1744_call(var_1746,var_1747,var_1748,var_1749,)
output = call_1745
func_1750 = relay.Function([var_1746,var_1747,var_1748,var_1749,], output)
mutated_mod['func_1750'] = func_1750
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2014 = relay.var("var_2014", dtype = "bool", shape = (3, 4, 14))#candidate|2014|(3, 4, 14)|var|bool
var_2015 = relay.var("var_2015", dtype = "bool", shape = (3, 4, 14))#candidate|2015|(3, 4, 14)|var|bool
bop_2016 = relay.logical_and(var_2014.astype('bool'), relay.reshape(var_2015.astype('bool'), relay.shape_of(var_2014))) # shape=(3, 4, 14)
uop_2037 = relay.sin(var_2015.astype('float32')) # shape=(3, 4, 14)
func_656_call = mod.get_global_var('func_656')
func_660_call = mutated_mod.get_global_var('func_660')
const_2045 = relay.const([-5.166155,2.926874,-9.355316,3.436405,1.736643,0.015762,1.006582,1.134609,8.451823,8.464211,-6.850619,1.112778,1.270522,-6.407698,-5.087240,-9.766374,-7.579784,-7.926116,-1.662580,3.646991,-9.557295,-8.260978,-0.380435,4.674852,-7.260735,-0.093093,-3.938225,6.261538,-5.930170,8.322686,-5.012139,-9.694789,2.888933,6.704535,-8.989900,-1.082811,6.856796,-7.830670,-2.996185,-0.273833,-4.151615,-3.684704,-9.717578,2.326912,9.215830,6.198096,-8.725949,3.470498,1.954384,5.102317,6.454959,-0.034450,-9.315089,-9.037640,0.284166,6.675109,5.217819,-6.640085,-2.515739,-3.319072,-7.502131,4.454559,7.814152,4.754192,-8.866026,-1.300009,-7.833797,-5.568440,-9.993703,5.541014,7.376477,6.976736,-0.351776,-0.527532,5.824386,4.845065,3.650041,-9.498042,4.216808,9.455030,-4.146172,9.954413,-5.809435,-8.206868,-6.947718,-1.495625,-1.838665,-3.757074,-7.244148,3.674200,1.399145,5.648443,-1.021690,-9.232856,6.246976,4.789311,5.304717,-5.806950,-2.151618,-8.917962,7.972278,7.204163,6.102720,-0.750319,-5.370783,5.194107,-4.958910,-9.537594,2.221301,-6.342358,-0.197480,-5.394444,-4.579209,-2.989862,4.241829,6.318753,2.957177,9.144571,-1.536763,-9.984050,7.666768,5.269266,4.271253,-8.227699,-8.413715,2.252598,-8.027599,-9.375939,5.102199,-2.432746,-1.601043,1.929180], dtype = "float32")#candidate|2045|(132,)|const|float32
var_2046 = relay.var("var_2046", dtype = "float32", shape = (6, 132))#candidate|2046|(6, 132)|var|float32
call_2044 = func_656_call(relay.reshape(const_2045.astype('float32'), [12, 11, 1]), relay.reshape(var_2046.astype('float32'), [12, 11, 6]), )
call_2047 = func_656_call(relay.reshape(const_2045.astype('float32'), [12, 11, 1]), relay.reshape(var_2046.astype('float32'), [12, 11, 6]), )
bop_2053 = relay.logical_or(uop_2037.astype('bool'), relay.reshape(bop_2016.astype('bool'), relay.shape_of(uop_2037))) # shape=(3, 4, 14)
bop_2060 = relay.multiply(bop_2053.astype('int64'), relay.reshape(uop_2037.astype('int64'), relay.shape_of(bop_2053))) # shape=(3, 4, 14)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
var_2064 = relay.var("var_2064", dtype = "float64", shape = (84,))#candidate|2064|(84,)|var|float64
call_2063 = func_125_call(relay.reshape(var_2064.astype('float64'), [14, 2, 3]))
call_2065 = func_125_call(relay.reshape(var_2064.astype('float64'), [14, 2, 3]))
output = relay.Tuple([call_2044,const_2045,var_2046,bop_2060,call_2063,var_2064,])
output2 = relay.Tuple([call_2047,const_2045,var_2046,bop_2060,call_2065,var_2064,])
func_2067 = relay.Function([var_2014,var_2015,var_2046,var_2064,], output)
mod['func_2067'] = func_2067
mod = relay.transform.InferType()(mod)
mutated_mod['func_2067'] = func_2067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mutated_mod.get_global_var('func_2067')
var_2069 = relay.var("var_2069", dtype = "bool", shape = (3, 4, 14))#candidate|2069|(3, 4, 14)|var|bool
var_2070 = relay.var("var_2070", dtype = "bool", shape = (3, 4, 14))#candidate|2070|(3, 4, 14)|var|bool
var_2071 = relay.var("var_2071", dtype = "float32", shape = (6, 132))#candidate|2071|(6, 132)|var|float32
var_2072 = relay.var("var_2072", dtype = "float64", shape = (84,))#candidate|2072|(84,)|var|float64
call_2068 = func_2067_call(var_2069,var_2070,var_2071,var_2072,)
output = call_2068
func_2073 = relay.Function([var_2069,var_2070,var_2071,var_2072,], output)
mutated_mod['func_2073'] = func_2073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2600 = relay.var("var_2600", dtype = "float32", shape = (10, 10, 13))#candidate|2600|(10, 10, 13)|var|float32
var_2601 = relay.var("var_2601", dtype = "float32", shape = (10, 10, 13))#candidate|2601|(10, 10, 13)|var|float32
bop_2602 = relay.power(var_2600.astype('float32'), relay.reshape(var_2601.astype('float32'), relay.shape_of(var_2600))) # shape=(10, 10, 13)
uop_2614 = relay.asin(var_2601.astype('float64')) # shape=(10, 10, 13)
func_459_call = mod.get_global_var('func_459')
func_463_call = mutated_mod.get_global_var('func_463')
const_2626 = relay.const([[True,False],[True,False],[True,False],[True,False],[False,True],[True,True],[True,True],[True,False],[False,False],[True,False],[True,False],[False,True],[False,True],[True,False],[True,True],[False,False],[True,True],[True,True],[True,False],[True,True],[True,False],[False,False],[True,True],[False,False],[False,True],[False,True],[False,False],[False,False],[True,False],[False,True],[True,False],[True,False],[False,False],[True,True],[False,False],[True,True],[False,True],[True,False],[True,False],[False,True],[True,False],[False,True],[True,True],[False,False],[True,False],[True,False],[True,True],[False,True],[True,False],[False,False],[False,True],[True,True],[True,True],[True,False],[True,True],[True,False],[True,True],[False,False],[False,False],[True,True],[False,False],[True,True],[True,False],[False,True],[False,True],[True,False],[False,False],[True,True],[True,False],[True,False],[True,False],[True,True],[False,True],[True,False],[True,False],[False,True],[True,True],[True,False],[True,True],[True,True],[False,False],[False,True],[True,True],[False,False]], dtype = "bool")#candidate|2626|(84, 2)|const|bool
call_2625 = func_459_call(relay.reshape(const_2626.astype('bool'), [2, 7, 12]), relay.reshape(const_2626.astype('bool'), [2, 7, 12]), )
call_2627 = func_459_call(relay.reshape(const_2626.astype('bool'), [2, 7, 12]), relay.reshape(const_2626.astype('bool'), [2, 7, 12]), )
func_920_call = mod.get_global_var('func_920')
func_925_call = mutated_mod.get_global_var('func_925')
const_2633 = relay.const([-2.608764,-4.190525,9.089871,4.003484,-1.444061,-5.577365,-5.703414,-2.892257,0.155024,-6.984696,-8.956415,5.213342,3.751787,6.500470,5.612443,6.376255,-3.701013,-8.436668,-6.255960,-2.348387,6.265662,-8.275386,-5.959316,-5.091386,-4.588987,-7.165194,-8.321859,-3.728100,-3.368814,-2.952950,-7.309190,0.457521,-4.717379,2.636070,0.971398,3.399971,-8.842742,-7.639350,-8.228075,-9.486409,-4.618651,4.897864,-2.903562,-5.362157,-4.217593,8.200195,8.830399,1.326857,-0.078015,-1.979836,-4.218266,-1.963848,-9.863913,4.636868,2.281216,1.004927,-5.858453,-0.548299,-8.682750,7.371464,-1.867788,-9.435470,-5.627883,4.715518,-4.388838,-0.096120,5.590491,2.150527,-6.908359,6.624634,4.727405,4.256661,6.020870,-8.244823,-1.796922,-8.581447,-2.211308,-3.260248,-1.861832,5.598166,-6.422576,4.361338,-8.071226,7.988634,-0.408324,-7.500992,0.211145,3.229321,-1.109775,-0.082174,-5.191321,9.621390,0.982726,6.630267,7.938353,-9.040174,-7.286184,0.913390,4.858089,0.627611,0.746175,4.098631,3.469779,-4.772284,-4.314836,6.874006,9.887943,-6.093891,-3.949227,5.014193,-0.830588,9.129275,7.722065,-5.072229,7.233107,-6.814189,6.555544,6.148005,3.060599,-2.147044,0.733317,-9.032475,-5.636170,7.383800,-4.242013,-3.981448,8.579070,5.649578,7.802132,4.566965,-2.719361,1.632277,6.537655,-1.267622,-8.753058,-8.927315,-0.516739,0.989250,7.085374,-4.035556,5.434243,7.853281,-5.708296,6.712524,-7.141114,8.824803,5.840457,-7.907921,8.422320,3.030366,-2.448888,3.175368,-2.958639,8.826816,-8.115758,3.554879,8.566207,-2.996817,7.004287,0.546447,-5.188179,-6.410778,3.152410,-2.324105,-6.766953,0.362102,1.973440,4.236863,2.834378,-2.477076,-0.007863,1.037649,-0.789233,-3.381806,5.352623,8.039789,-1.124997,0.813641,-0.882316,-1.364106,0.530122,8.052251,4.908189,-5.214485,-4.199867,-8.224494,-9.030953,-0.805670,5.240043,1.004416,-3.078815,-2.312043,-2.024790,-5.055389,0.277524,0.608454,-1.940790,9.879932,-3.959154,-8.597693,-5.201776,4.576113,-0.131075,2.338293,-8.156110,6.765472,1.934870,2.033152,8.874834,2.231203,4.101455,-5.371895,9.192671,0.964592,9.786489,-6.492280,-7.936158,5.234458,3.306110,-3.447274,9.591059,-9.239105,8.103009,-8.531251,-9.444390,0.075218,4.598417,6.504895,6.090308,-9.010399,2.509258,3.245942,-3.760552,-7.020768,0.911695,-8.099880,-9.216647,-1.710000,-8.119877,9.861082,-5.177726,-4.635900,-4.144863,-8.818215,-8.324122,-6.302051,-8.612020,5.184767,-2.024035,-3.043424,-3.389491,-7.863526,-2.969344,-6.106888,-9.278700,4.116983,-1.030908,-9.326897,5.724535,6.072748,8.322376,0.386875,9.847091,-8.469219,8.503487,7.819276,6.634066,-5.771740,-2.503880,3.894862,-9.928375,3.066517,-2.096433,1.465245,1.794024,-8.918566,3.576709,-4.447781,-5.406418,-5.688913,5.785819,-8.848534,-5.855166,-4.223278,7.620533,8.801562,-0.914116,0.062404,-4.951731,9.626411,6.223481,-8.275970,1.965278,8.844733,6.067286,8.879774,5.391094,-9.681200,5.253440,5.976416,-4.676061,-7.044029,9.344377,0.691757,3.729633,2.986362,-0.610156,8.809490,-0.566467,-2.745960,-2.571845,7.046794,1.160764,8.810471,-6.904881,2.205829,3.387979,-2.319375,8.923604,-8.620097,-1.623807,3.789708,0.244773,-4.591696,6.236915,-9.665423,5.629483,-6.275702,0.482778,4.334417,-5.815770,-2.530974,-9.893208,-4.406764,-2.377058,-0.336073,1.919222,-2.320816,-1.443694,-4.014793,9.140644,-1.686609,-5.935610,8.280804,-0.902038,-8.160454,2.747091,4.237205,4.843729,-1.068054,-9.617826,-1.325072,-3.799318,5.271751,7.426223,1.362143,-9.579311,7.876932,-0.428049,-1.649519,8.852402,6.819181,5.413113,7.202130,-2.223899,-1.640484,-4.247131,-8.377274,9.001744,-8.217329,-7.977239,1.208103,0.677350,2.815296,6.541179,-9.804530,-6.799487,-9.019974,-8.150020,-9.980958,3.700625,-3.479275,0.167123,-6.663127,-2.417778,-8.364279,-2.186013,3.552488,-5.640396,7.647720,-5.228527,4.981479,9.418962,-9.045366,7.251957,2.744106,3.466115,-5.347135,-4.382996,-7.189647,7.708932,5.431323,-7.751025,0.801539,-8.259934,4.580885,7.215097,7.762595,-4.012059,-8.451115,7.610190,-7.338004,9.135468,6.712663,7.306720,-4.409849,-7.076266,5.200932,-2.014715,-1.552235,0.041196,7.092535,-3.124819,-8.640052,-3.109089,-9.240833,-4.606666,6.143678,7.603236,0.238496,-3.885909,-8.450756,-9.535443,6.524827,-7.098670,8.932705,2.422744,-1.647718,7.839890,-5.665927,-7.994555,5.084597,0.075202,-5.898870,-1.001268,-4.208530,-2.354307,1.298971,-2.172178,0.244036,-8.487241,-1.556440,-9.609515,5.868486,7.603956,4.343050,-8.372165,-0.605733,9.398095,3.431703,5.423099,-7.904908,-0.378280,-1.574160,3.133416,8.760948,-4.940575,8.978051,3.198876,-0.742105,1.683062,-0.104843,9.870803,2.089053,0.744191,-6.536696,-6.412757,-7.444479,-5.312083,7.945714,2.224131,-4.636987,6.448443,-8.549740,-9.273997,8.039061,-2.290903,-1.060189,4.638527,9.975943,-7.172260,6.354498,-6.677659,6.613880,-8.243002,-6.176480,4.324731,9.929991,5.310112,6.801999,-1.730345,3.201830,-0.010958,-9.045760,4.599429,3.088099,7.930527,1.171246,-8.857260,3.152047,3.087950,-4.049070,-2.968043,7.491895,2.627237,7.907778,-2.440521,9.314226,-1.072384,-0.500091,2.011105,4.282595,-7.725558,-3.410882,5.234061,9.022948,-2.355771,-4.694655,1.423605,-4.657360,-8.686465,-2.189003,-9.327617,-6.184419,-8.405099,-1.005827,-2.537879,-4.252507,-7.005840,7.098166,-0.972259,8.481795,2.992006,7.100732,7.491156,4.776449,-2.069115,-5.889043,2.992355,2.789539,9.029548,5.127544,-5.694080,-0.792989,5.471622,-9.720855,-1.084583,-3.559832,1.946949,-5.806876,0.886532,6.954468,-7.650982,-4.066573,-9.151473,7.925007,9.820761,1.733667,-9.378897,5.258094,0.485680,-4.744919,6.149396,3.041889,-4.055140,3.034277,-0.930474,4.330749,2.426686,-7.645944,-2.793044,9.317376,5.444098,4.744862,2.183733,8.246459,-1.955556,-0.436593,-4.820111,5.119979,-7.073952,-8.218343,7.145968,2.309191,7.123233,-7.068851,0.796906,0.669349,-2.638097,-2.937439,4.580869,-5.285604,3.184381,0.946991,3.660257,6.985939,-3.087635,-3.533243,8.588544,-9.766120,8.474917,-3.845627,-7.023110,8.812962,-7.827264,-1.653482,7.485111,-3.847377,-0.997810,-5.325638,-0.914640,7.101312,7.554736,-1.034669,0.303760,1.843235,2.648647,2.859496,-1.545958,-1.126858,-1.527830,-9.338977,0.570344,6.426194,8.085582,0.799518,2.727319,-2.801295,-5.886778,0.069166,5.023314,2.168966,0.856318,-5.099802,0.377905,-6.676914,-7.519386,-3.188948,7.424522,6.891681,6.208955,-0.033690,8.342668,-3.304686,2.294105,0.019005,-9.148619,3.646593,3.187108,9.231880,-4.384986,-1.462789,9.719238,2.590471,-4.480990,0.480162,5.598805,-5.906627,-7.564315,9.761377,0.097574,-4.922548,7.041944,1.173799,2.991570,2.256933,-3.109053,-0.116427,-6.547294,0.314703,-0.059953,1.521905,-9.983294,-9.719067,-8.178325,3.293736,-2.851340,5.887850,2.234266,-2.832044,-7.574731,8.821950,-0.106839,-8.573319,8.369274,8.071515,-6.882769,4.435640,3.144842,4.230605,4.703467,3.679058,-7.941466,6.768475,9.512556,-3.512607,-5.676626,-4.962183,-4.855340,5.868345,-6.093779,0.617366,8.993037,-6.116543,6.739503,-3.364220,-1.149421,-0.462119,5.076751,-9.743488,-7.758260,-1.500790,-5.744471,5.858094,2.285165,-6.971508,9.668280,-5.125100,3.951016,6.850995,-2.301229,9.230727,1.240363,7.097012,-5.590767,9.212474,-0.995684,6.665740,6.210526,3.974687,5.120600,-8.968147,-7.916006,-8.704244,2.357670,-9.275537,8.524023,-9.559944,9.628411,9.085866,-3.926967,-9.505947,-7.499008,7.392553,-5.720665,-5.876269,7.972803,7.815269,0.826719,6.276053,3.912826,-1.362464,9.078507,-5.542562,-5.292009,-7.280793,-1.973690,-5.592547,-0.517538,-2.660682,-0.949705,9.385612,-5.906261,2.380804,-8.408428,-1.501151,-8.430411,-5.212777,-5.292719,5.676425,8.105931,7.411723,-0.679931,-8.145418,0.786863,-5.733038,-4.323692,4.959243,-8.421942,-5.936438,1.420513,-3.760604,-9.921582,-9.504974,8.702309,1.659272,3.802990,3.298444,-8.232513,7.517543,-8.306372,-1.018681,1.004021,3.988242,-3.900853,-2.259632,2.732469,-8.805807,9.269513,-4.221878,-0.196411,5.627441,-4.277257,2.387389,7.326224,-4.272520,-1.879142,-5.655916,2.692752,6.138501,9.989753,7.631923,8.711263,-0.606700,-0.458990,0.844567,8.099508,4.418820,8.570142,-5.345676,0.067992,6.149394,5.448194,7.113420,7.373478,9.197061,-4.058317,9.362436,-4.652754,-0.437605,-0.773160,2.445472,7.812489,2.837381,3.902672,9.730528,2.044358,9.903332,-0.668809,3.867122,0.023038,-3.555025,8.427302,0.714586,-4.272952,7.402507,-5.155719,-3.967391,2.426228,-8.481531,7.685441,9.214504,-3.522330,-0.604835,8.140079,7.640530,-1.664937,-8.562147,5.137600,9.150353,1.746077,3.866432,5.937453,1.911326,4.824831,4.447892,9.973175,7.235814,5.594395,-0.461294,6.383156,-1.652583,-4.479559,-2.872316,-8.628840,4.617488,-5.531717,0.952260,-7.938418,-9.350109,6.539245,-9.742445,-3.047724,-7.613848,6.997256,-7.997590,-4.315779,-6.813254,3.175990,0.396996,-5.365892,9.556702,0.730066,-7.195855,-6.810261,5.211929,1.287466,-3.694993,-8.765950,1.463451,-1.354575,-1.239545,-5.624497,2.968335,9.051093,-9.925554,4.245976,-7.741875,-2.359887,-0.591898,4.424890,-8.222764,3.730017,-6.934060,-1.969270,-5.055997,2.922844,0.922408,5.144918,5.161772,8.806645,1.639675,-9.832464,5.750091,-8.476818,1.349579,-9.129228,-4.688331,-8.709866,8.545804,3.324847,1.300666,-3.667939,-7.418924,5.286997,0.807995,9.435258,7.929174,-6.192767,8.794005,-2.117361,9.157436,-8.536728,0.769526,-2.434261,1.950180,-2.782023,6.542211,-7.454175,-5.242358,1.917501,-2.169071,-5.310827,-6.481134,4.340525,-1.792574,-2.038253,-0.898317,3.182192,-3.023544,-6.905287,3.016633,-5.257658,1.553124,8.117930,1.340398,5.243629,5.897602,4.280907,2.073785,4.793306,6.690394,1.972892,4.155126,1.256304,-2.898210,6.506344,-7.148824,-1.821309,-2.970512,8.281072,5.312024,-8.112626,9.113488,-4.628738,-8.015774,-5.011154,-1.290417,5.141733,-4.679753,1.081408,-8.129172,9.117161,-9.669500,-9.023219,7.028819,-0.265329,7.572865,1.423695,5.076540,1.536422,-9.171998,9.979953,8.062702,-5.746059,4.599916,-4.516986,-7.246703,-7.410722,-7.740367,-9.187759,-9.005185,-2.586074,1.191327,-0.485929,0.291239,-7.537806,7.862463,-7.414530,-3.344382,7.847713,-0.864194,4.259276,4.323285,-8.108086,-0.855392,5.481937,7.544853,-9.872340,0.817440,6.259221,-3.467363,-2.333471,0.246558,-0.433832,0.373376,5.357263,-2.107390,8.122469,-3.822546,5.647150,-1.949383,-4.847002,-9.870245,-4.917464,3.555233,-2.593318,0.900067,-4.970623,-9.398484,-9.659968,-1.617754,1.777430,-7.584601,-5.687957,-5.374919,4.636835,-1.714098,5.972693,6.697494,-0.899154,1.301807,-9.061653,-4.394739,-5.951562,-3.255301,-4.257023,-1.948649,2.537669,-3.344841,-0.771406,8.420303,5.186193,6.215737,-6.037318,-3.922346,6.963338,4.673647,-8.958613,-7.221120,-6.139357,9.006095,0.177303,1.998569,-8.777459,-5.572211,-8.199978,4.206384,3.966730,-1.740326,9.518193,8.523882,4.326088,-8.551664,-6.457286,-3.068375,7.376711,1.112096,8.403609,6.858825,5.995422,-3.034837,3.647689,5.363537,-1.923154,-5.682502,7.560296,4.446078,8.953825,-3.718661,-1.847864,-7.164665,8.267020,7.596643,-9.907676,-7.778086,-4.414708,-5.169913,-3.026197,9.000344,2.441414,-7.906488,0.152162,9.237380,-4.988863,-8.731714,-9.802681,-5.390784,-8.181274,4.997400,6.255925,-3.106850,-5.324558,6.017509,2.686843,-9.950432,9.742607,2.502026,-4.793603,5.168353,-1.377749,9.464961,-7.384816,-2.348948,9.398633,-7.826984,-6.141755,9.882442,1.917430,6.905017,8.510976,0.601436,6.171371,4.956331,-6.288359,-3.098598,-5.861142,0.458773,0.299208,5.342132,2.249606,8.323119,2.762204,4.549774,-7.507702,2.166614,-8.723922,-9.726387,3.011978,3.804837,-9.932076,-7.387466,7.594116,9.672959,-3.991112,-2.819836,-1.425462,1.768393,-6.336252,-7.277698,3.626234,-2.676689,2.174723,7.961887,-8.830442,-1.418809,-3.542342,8.391137,-1.060103,0.317750,6.623315,5.776831,1.763604,5.099116,2.717669,-4.384844,3.327927,-5.088853,3.724659,2.617064,-5.619342,-5.863713,4.164049,-4.907145,1.960514,-3.728218,6.392902,-4.864570,-6.422435,-1.804436,-9.704535,-4.302026,3.977481,-7.718865,7.156667,-5.201128,6.040962,-5.185139,-5.456558,-3.953996,-8.316434,8.102401,-2.987299,2.560070,8.025383,-1.987514,-9.126999,-5.771161,6.713840,5.854349,-9.272273,-2.777731,-2.917592,-0.812993,-3.731018,-4.012396,1.352400,-9.678564,-9.619687,-9.940430,-7.700822,2.635097,-0.979208,-8.176472,-2.009109,-1.464103,-7.139277,-3.955340,8.553448,0.888907,3.316442,9.228929,6.614839,2.312734,3.148419,-2.787071,-1.260467,-0.925270,5.513139,2.170603,-7.696602,-8.671650,-9.264946,-6.159038,-0.843393,3.776184,8.483107,-7.031921,5.234116,-3.214270,-7.979361,-5.544335,-2.745776,5.826113,8.852042,1.865009,-5.038561,-0.027056,-0.048671,-5.764174,4.000610,4.786062,-1.142933,2.724345,5.315210,-6.231206,-1.660737,-0.712591,-6.083038,-1.655212,-0.375592,0.066190,-2.213202,-3.739518,-1.189183,0.803800,-1.039937,7.724469,-0.407770,-5.273115,-2.004454,9.129269,6.290078,-0.199188,7.577411,-5.525395,-6.606935,-4.201025,5.107674,-1.854499,-3.949606,5.092589,-2.234943,1.285829,-6.269139,-7.217710,4.787815,4.582245,0.761294,-7.011240,0.871491,2.237049,-2.658236,-1.000411,-8.753756,-8.333453,-7.580467,3.876766,-1.282588,0.285147,4.383111,6.306910,-3.049288,3.557179,-6.587730,-4.715211,-3.881267,-9.998016,-7.723787,5.777594,4.192245,9.550459,0.207394,-5.077639,4.627669,-7.438247,7.809460,8.928008,3.940676,4.017276,-1.908817,2.480375,0.678131,-6.261552,-2.670338,-6.501506,4.277054,6.527330,7.130804,-4.198986,6.382379,3.062886,-9.092234,-6.868837,3.821409,-4.242533,-5.545444,0.914893,8.529180,0.171507,2.761591,6.619547,1.613837,4.503211,-7.947397,4.799550,2.412645,-4.785987,-6.152636,3.669892,-9.988770,3.253193,3.850721,4.785323,-4.377135,-9.088012,-9.575746,-2.013153,-5.831700,-5.839671,7.636951,-3.099651,-7.880788,6.633562,-7.100999,9.170954,-9.770831,5.789200,4.908968,-4.618623,0.526732,7.119075,-5.277781,3.540092,0.066478,5.064499,4.149821,8.841081,-8.812494,-6.128878,2.033348,2.352251,1.514831,6.944411,5.020752,-9.264696,-3.574827,1.136412,-0.273091,3.845621,-8.019629,-8.024400,3.135605,-5.976258,-5.044975,-0.026867,-0.168483,0.635756,-0.893510,-1.205490,-3.773038,-6.052775,-1.033821,6.964285,-9.417408,-1.534594,1.575246,-4.947877,5.286186,-6.414525,-9.973044,0.642519,0.735646,-5.762090,-3.191920,0.921665,1.445970,1.996104,2.354407,-5.516770,-4.028402,6.851692,-0.607194,-0.130551,-1.512749,8.075173,2.788963,2.096108,-4.085864,-7.436715,-6.780776,6.107608,9.478645,6.590585,-6.365089,-3.953670,-9.357611,-0.758595,6.506035,-4.015831,-9.060565,-7.360456,7.526144,-8.457553,0.781961,-0.567779,-1.702622,-9.440873,-7.972125,1.191456,1.222614,8.239022,7.608043,-9.809072,-3.239120,-2.365436,9.338523,-0.616373,-4.798988,-2.166778,1.119148,5.806960,-8.444764,2.155481,9.618601,7.448973,-4.145322,-9.900893,3.039508,3.947990,-7.158323,-3.514742,-5.690749,-7.570652,4.255617,3.267755,5.724468,-0.514960,-5.745328,-0.299140,-7.355387,-8.558116,9.180006,-4.253383,-8.479502,-8.967286,0.770578,-8.288768,-9.477998,-6.499583,3.356119,-9.203562,-5.757550,-4.360573,4.254140,-3.517611,9.191816,-3.691902,-1.331975,2.067571,-5.075718,4.160521,-3.402215,-2.734435,-3.122671,-2.583365,-9.226105,-5.173631,4.977143,3.136486,9.734375,1.041545,-1.590870,6.547455,-6.122326,1.418904,5.740716,1.899566,-3.138616,-1.379276,-6.664519,-6.850297,7.572179,-9.430593,-3.315142,0.375656,4.738997,-2.781394,4.044533,-3.641835,-6.553595,-5.802603,-6.953944,1.618655,6.471366,7.953202,-9.537403,-3.289650,-8.896391,-1.429411,-7.057440,3.782137,-6.537960,-5.838094,7.345665,-1.271360,-2.116233,6.654809,-3.273739,-7.117026,-6.328123,8.988527,0.889173,1.930107,-6.056339,-1.291664,5.558645,1.407398,0.055729,4.213533,-8.367397,-1.802992,3.660419,-6.606967,-4.853379,9.469334,-2.543665,8.194149,0.887837,-2.551060,2.052476,-6.199743,-3.347055,-1.080001,8.786125,-0.216134,9.600590,7.609468,5.936130,-0.674592,-2.397238,-7.034676,0.261036,-9.348618,-3.771404,-6.473212,-2.506066,9.395212,-8.010639,-0.750814,1.547455,-7.287466,-0.741560,7.992326,4.299806,8.727722,-1.863241,-7.810670,-8.232531,-3.863144,4.545604,-8.486245,2.850516,-3.899846,8.832206,-7.194271,-4.909065,-3.470755,-7.308284,-1.226957,2.585359,3.363070,1.497670,7.173189,-8.747697,3.888636,2.203270,2.051629,1.922557,-0.661599,8.366832,2.865333,6.550527,-2.136338,-5.643583,2.647846,-8.944351,5.294597,6.919175,4.174667,-8.558211,5.957483,-8.523801,-5.261695,6.584016,4.581387,9.620068,-3.681113,-8.609907,-3.488350,4.349436,-1.235381,-7.619614,3.304144,2.276434,-6.261459,3.094348,9.240452,-6.383289,5.864034,-2.507387,-9.510968,-5.904494,6.432284,9.009380,5.471104,2.018970,8.646862,5.763394,8.225281,3.020736,-8.253147,-2.973957,6.193805,7.179238,-0.690983,5.833318,-9.651534,3.534246,-1.827063,4.915044,4.215824,3.881480,0.487409,4.806445,6.283664,-4.141476,-4.871570,2.754934,3.440621,-3.701505,4.853036,4.858424,5.151925,2.659753,6.036818,4.092292,4.968378,9.353189,4.631571,-6.912528,-2.579515,-8.890244,9.083110,-4.171222,2.807675,-3.708345,-4.914256,-7.656309,-6.705748,4.349199,-7.408955,-2.476464,1.038236,-7.342835,-6.910800,-0.656014,6.729903,3.842069,-7.485786,-4.910432,6.745165,-9.271493,-3.791159,2.866250,-2.701845,-1.593666,-4.378551,2.965714,5.106813,-1.939684,-8.057223,-0.783839,-8.284723,-0.787105,9.832881,-0.975156,9.932657,-3.142148,2.984478,-4.824546,-3.143974,-4.601041,6.805460,-1.952411,-6.299802,-5.512665,6.811335,-9.418661,8.786921,2.957651,3.555971,6.338948,-8.911146,-6.256838,5.762232,-4.887393,-8.242368,-2.486568,-4.034657,-2.006924,-7.851429,8.787266,6.421912,9.122773,-9.981398,9.138562,-8.548787,-8.111808,-8.676903,-3.948240,8.964948,6.718552,3.334083,7.932037,-5.904017,-5.049538,-5.180467,9.051163,-7.336187,-2.841919,6.216200,-6.290824,-7.762675,-8.975005,-0.490410,9.169617,5.583772,7.532309,-1.085876,-6.781939,-6.341194,3.163118,-9.304964,-9.238079,9.779549,3.345518,-8.032884,-4.075288,-7.609128,7.460237,4.374283,-5.889933,4.996480,-3.694302,-2.595304,-8.925008,5.908871,-4.497698,-3.988037,-2.726448,8.548652,-5.049190,-7.028547,3.710508,-1.632068,8.412390,3.011159,-5.032783,1.191547,-0.035791,-2.788428,-8.814845,0.032357,4.265036,1.582492,5.195423,-6.494144,-1.071556,1.907377,0.175317,-2.914883,6.460351,0.525917,-7.759530,-4.924796,-8.263156,9.932216,3.352100,4.124024,6.353868,-0.817499,-2.700155,-0.528724,7.410638,-1.053273,8.815601,7.734470,-1.441572,1.431728,9.952252,7.883909,-1.003029,-9.585445,6.870561,-2.991945,-3.768171,-1.157621,0.023735,5.173671,-9.193016,-5.099040,-6.495831,-7.653980,-3.685065,1.304365,-4.493492,1.052684,-0.808029,-4.060591,-4.676797,-1.509740,4.926878,8.134927,6.186380,-3.174337,-5.353507,-8.428274,-8.677990,6.399195,-7.881583,9.074272,9.501523,5.092941,-6.130089,-3.742320,-4.791292,-2.848598,2.463175,8.611443,-6.123486,-3.376810,-5.393391,-9.676547,9.037906,2.847735,-1.041935,-1.204700,4.177470,0.973192,1.449705,-6.833019,-3.111039,-7.853088,-7.199011,0.279151,4.938389,7.217992,-0.470494,-1.611059,8.877515,2.754552,-3.738849,-8.055853,5.107546,-8.200696,9.585261,-4.057313,6.182857,0.975253,-3.793526,-6.106771,-7.100789,5.989248,2.705728,-7.418645,5.906809,1.796152,-2.821219,-8.459422,5.182460,-5.333047,1.468754,3.515499,4.978879,3.906164,1.503905,7.601907,2.699908,-5.047929,1.957552,-2.647087,-6.312857,-4.933259,8.444051,-4.510755,9.015540,8.279372,2.680920,8.034091,6.675364,4.121579,9.416630,-3.649358,2.239690,2.074975,0.608625,-9.669404,7.092389,-7.125804,5.462366,-6.213469,-7.311885,9.321980,-0.649334,-1.119764,5.901741,-2.427321,5.967019,-1.907046,1.815347,1.823024,3.075461,-9.593321,-6.151353,7.653371,8.302829,1.717147,7.018989,6.750081,0.084149,6.642529,1.947800,1.264367,-4.544232,-8.190035,-7.160413,-7.381776,7.124781,-7.787167,-6.319188,5.267122,8.365491,9.377322,9.178884,-1.812493,-4.385042,-9.463677,2.488096,-6.521925,1.531802,1.639018,-2.678689,4.154694,-9.803571,-0.899989,2.504620,-1.935295,-9.097292,6.861804,8.598421,-6.876776,8.085010,0.625307,5.273140,-2.058337,-7.927039,-8.020043,6.001594,-3.452268,9.863539,-0.701986,-5.346175,-2.104977,-2.976319,4.934067,9.615318,-0.511021,-7.198888,-7.105902,6.219406,-8.539771,-1.817084,9.747773,-0.299118,-4.199165,-2.529942,-6.943156,2.192595,6.818943,-9.195824,6.906549,-1.342751,-4.957381,-7.870115,-1.316052,8.975059,1.115645,3.804672,7.637203,2.907297,-0.354704,9.954485,-7.269715,0.762966,-3.986885,-9.645818,6.311135,9.752942,8.225866,-0.075594,-4.788988,-8.959820,-0.550864,-0.682059,1.497829,8.149469,9.882219,-7.631256,2.204280,9.352741,8.146835,-7.161301,-3.780952,-7.519891,9.741451,-1.267372,-4.154158,7.248418,-1.659886,6.486378,8.794635,2.915645,3.641718,1.056595,0.409906,-6.750733,-2.197592,-2.385018,3.996355,1.167143,5.562540,-0.100790,-0.209319,-2.749905,0.925529,5.454183,-0.196422,0.568320,-1.772037,9.007846,5.183448,5.195372,-3.599110,-0.028683,-9.105801,-2.609443,9.806779,-1.981861,-1.424617,2.487176,-2.120789,1.622543,2.031513,-5.789303,5.755931,-0.444938,1.208054,-9.444053,4.921544,2.346284,-3.411033,0.007529,-9.976554,-1.829150,2.493177,-6.895749,-1.676827,-5.006890,-2.965488,0.270027,-4.874321,-6.935712,3.689509,4.346422,-0.763897,6.311756,-3.514751,-3.602140,-3.030140,-7.620818,-8.401735,4.170707,-6.377195,0.141262,-0.194180,-8.880789,-3.377548,-1.511468,6.103521,-9.901404,5.005905,6.577426,-7.047268,-6.275472,-1.980771,-4.720091,-9.362946,6.748632,-5.154218,4.328808,6.784864,3.386532,4.186461,-9.244861,-8.753470,-7.454105,-7.637732,6.186076,7.447316,5.236704,-1.927011,2.051752,7.326318,4.912185,7.411814,-7.306842,-0.399759,-5.213356,6.723911,8.641975,5.713016,6.288734,9.382112,-5.075244,8.363402,-5.289275,-0.458386,-7.061009,-3.783251,1.815434,-6.411804,-1.210363,4.076141,-6.731914,4.133344,-4.371868,7.853894,-5.631928,7.307545,-7.698362,-0.682154,-6.134079,-0.029735,-7.356165,2.262149,-3.310556,2.208711,-7.666083,5.505752,-4.663377,-4.609188,0.229871,-8.003644,-5.781460,-6.931626,-4.103020,3.545643,7.396759,3.832504,-4.707226,0.065974,2.913248,-5.088214,-8.171633,-4.452159,-8.802937,0.560841,7.858576,-6.954045,9.496727,-2.582686,5.879209,7.074266,8.203325,4.566483,9.844615,-8.181945,3.819978,-0.470723,-1.567395,-1.543702,-0.001218,-0.217003,-8.920681,6.880727,2.885451,5.088734,-8.778828,-1.153928,-3.641201,8.477206,-4.473778,-5.842230,-4.292578,5.202662,1.230721,-8.845450,-0.933490,4.019723,2.700781,-1.715754,-9.063859,0.632694,-1.330194,-8.441364,6.082707,-7.003150,9.722969,-7.187340,-9.527280,-8.060425,1.150658,1.973450,9.815756,-7.505764,8.998055,-1.875013,4.751134,-0.039109,3.151136,-8.566328,8.146399,-6.137902,1.888750,-4.935626,9.969741,2.539413,2.044634,-9.485039,-3.395997,7.827482,4.614488,0.526069,-6.977791,4.653817,4.852512,-7.778626,-2.789962,1.197379,7.200569,9.085825,2.700347,-7.262252,7.111433,2.398465,8.296098,-9.093154,-6.056322,2.655438,4.045756,-9.914376,-3.344790,8.710457,-7.013200,-9.087925,9.180856,-2.080355,0.559615,4.859159,6.409647,-6.995465,-9.406176,6.983486,-3.104329,2.572087,2.756699,-3.179109,-7.076330,0.516004,7.672152,6.576666,0.381471,0.470841,-2.030053,-3.187992,2.123870,-9.972805,6.758727,2.536439,4.054920,9.446324,-3.945371,-1.865720,-6.818511,0.305179,-1.146615,-9.158437,-3.403848,-7.755541,-1.178598,-9.843065,3.561808,4.394981,8.524845,-0.136715,8.709090,8.858546,-1.150652,1.016840,0.368813,-4.355169,7.847050,-5.411943,-7.644533,-3.358164,4.721991,-0.775815,6.621691,3.851273,-4.817894,3.544304,2.167823,-5.346642,0.552413,-5.011761,-1.587918,-8.160313,6.789763,-0.046597,7.394816,9.159371,4.109839,6.313388,4.138760,0.357066,-3.674894,-3.175193,-0.637411,5.234499,-0.668557,-8.821128,-8.146491,-9.565261,9.252403,1.791850,2.308555,7.966740,3.902263,2.247830,0.313555,-8.431368,-2.399905,-7.991228,8.900371,-8.610807,4.000249,3.440030,0.765637,-8.606448,-7.591836,8.061689,-4.008973,-3.646314,4.726439,-9.537887,9.418718,-1.967352,1.666654,-1.445002,0.225113,-6.338261,0.232024,-0.323785,3.690646,-8.036177,4.475390,2.603307,-0.112118,0.764122,-3.073442,4.772074,-3.539492,7.919393,-8.929833,7.454251,-1.372629,-5.903581,4.343179,-5.490929,5.485318,-6.458158,-9.128521,-2.080894,1.380391,-7.519416,-0.183331,8.981539,3.036619,-0.293497,-1.176827,2.317888,-0.811947,4.663005,4.152325,-6.196223,-1.629352,3.048077,5.999918,8.653539,7.829926,-0.016597,3.386592,-3.133817,-4.823029,-7.409079,-8.485845,2.764117,-9.083791,-8.233546,-5.403029,-8.191099,4.118555,5.840893,-9.114376,-4.189211,-5.453817,5.286085,-3.350295,-0.999960,-5.539828,-5.674451,6.765741,7.210547,-4.221656,3.831822,6.379605,9.014977,0.883119,2.797470,5.082689,1.349415,-2.937159,-6.252343,-4.645525,2.176444,3.782576,-3.200917,5.790953,-8.598437,2.930252,-0.014016,-5.130439,-2.269697,-7.512204,1.939227,1.899388,8.699498,8.072158,-0.505724,-6.320856,-3.935645,0.363200,-4.873599,2.423091,-4.910760,-5.578103,2.363806,-9.695994,-7.980158,5.974878,7.756262,-3.233313,-0.079042,-1.484472,-6.904880,-3.721904,-3.776111,7.384931,-4.517001,-8.915353,8.731154,9.855912,6.242178,-9.579790,-7.196636,4.411811,-7.003914,-2.511639,2.598349,-8.111037,8.656264,-7.072427,-7.678749,4.468554,-3.664562,-0.812859,-8.491023,-3.929263,5.093244,-8.370128,-6.094984,0.907256,0.170859,6.600697,-8.360330,-6.422278,-3.500878,-1.499501,-6.986392,0.355335,8.179936,8.525684,5.263876,3.900795,-1.482975,-3.353105,6.975909,-0.895073,5.876947,4.467791,5.188668,-1.814026,-6.146310,-9.186461,-4.776810,-8.864784,9.948517,9.018105,7.784557,-1.024078,-0.046161,3.463516,-3.779200,2.955447,0.973599,-8.560753,-5.625738,0.500317,7.540733,-2.774466,9.204894,7.341279,-5.097096,-2.683888,2.273684,6.901145,5.734747,9.006913,-3.178022,-1.065395,6.341246,-6.227258,4.825702,-7.520186,-4.635266,-1.504965,2.663898,-2.903591,-2.597051,-7.033930,8.358465,-6.967096,-5.179495,3.669299,-3.937733,-3.579922,-6.979286,2.971059,-8.497782,-8.946795,-8.514044,5.088772,-4.860271,6.210977,-2.557346,-9.233962,-0.890489,-0.989414,-7.124573,1.659690,2.825912,-0.188234,2.118480,2.706253,9.969890,-1.047250,-5.546664,-9.734602,9.629999,-8.068662,6.770229,-9.989725,4.505537,-1.479558,-0.012996,-4.856646,8.107804,3.718855,-0.375451,9.198025,-3.108002,-1.353178,8.223588,3.293978,-0.959681,-9.417895,-7.094866,2.042916,2.965799,4.688045,-4.407107,-5.332296,-3.030021,-2.560563,-7.259766,-6.653432,5.984618,-2.606548,3.416822,2.555095,6.741695,7.370071,-2.764628,4.256600,-2.253218,8.991812,-6.564829,6.804790,0.520090,1.432907,3.996527,-7.182800,-3.946201,5.076285,-2.449784,-1.472781,-8.435818,5.327654,-5.072910,-0.895424,1.540482,5.153493,2.285923,-1.367016,-1.055992,9.721977,-7.444087,-4.582073,-8.567763,-9.929976,3.317033,-8.747908,4.576181,-9.732016,-8.009501,-4.279378,1.804520,5.491327,-2.648373,9.991904,7.095845,-3.151764,8.400808,5.477426,-4.888621,-6.420209,-2.340663,6.108971,7.580263,9.332083,9.632848,6.955063,-1.353956,9.835318,7.581874,9.444346,8.661408,-5.855396,7.879502,-8.620077,8.655300,4.653256,0.280426,6.555776,-2.979825,-0.919199,1.467517,-5.525343,-1.078509,-2.427207,3.948625,9.673379,-2.370831,9.782238,7.983740,6.910609,-8.139859,-5.800275,-5.262516,-1.393712,-9.165293,-5.300787,2.588581,3.713427,-2.606323,9.981406,-1.678216,3.518478,-0.149263,-8.658847,-7.624692,-8.880095,-1.450447,1.625130,5.402197,5.495048,-1.411502,2.963262,5.087939,-3.248637,-9.549951,0.022367,-8.181453,9.006945,6.237678,-1.277547,-1.778153,-2.998329,4.737651,1.576650,-6.511027,-3.832096,-6.791369,-4.912357,1.793019,9.373000,-1.504060,-3.378456,4.592094,7.483452,6.971818,8.570685,-3.007496,-8.838826,2.953339,-2.577467,-4.112134,-0.019715,-4.983259,-7.709140,9.151314,-3.889759,-2.288199,-1.621992,-4.604117,-6.335167,4.396936,5.006910,-7.920590,1.781555,4.487072,8.391715,2.632614,-3.737064,-3.696590,5.779116,0.431572,6.948300,-6.563006,1.799130,1.767473,-3.019140,2.336840,-1.108577,5.541112,9.816390,-4.366891,-2.047948,9.706205,8.462752,-1.167423,8.048731,-8.997982,0.691231,3.622652,-5.951438,9.104390,1.050984,-9.016835,-5.730270,-6.820385,2.405690,-0.823756,-8.797726,-8.749847,6.575913,-2.152144,-6.532352,9.361996,3.965814,1.602292,9.203679,-9.039946,0.394368,-5.463692,-6.828679,-8.114397,8.958742,9.956430,-7.166444,-3.119797,-5.165715,-2.617869,1.677436,2.573046,-1.553904,-3.763294,7.557887,2.158010,-6.643360,-3.169450,-5.156571,-5.139688,1.856612,2.079411,2.965001,1.600872,-3.437221,1.178393,4.345663,-8.429943], dtype = "float64")#candidate|2633|(2912,)|const|float64
const_2634 = relay.const(5, dtype = "int64")#candidate|2634|()|const|int64
const_2635 = relay.const([-4.574161,-9.219540,6.047413,-9.006494,3.963471,-3.340072,-7.166475,5.970429,-3.486487,-2.468617,-7.671979,-8.140957,-3.530258,-7.037876,0.389493,1.189679,0.217566,-4.405219,8.333383,0.647214,-1.120215,2.056727,-6.726128,-8.123705,1.377639,5.692758,-6.100411,0.506533,1.767638,0.059936,-8.526006,-4.333308,-3.861496,-0.538733,-9.200834,3.932207,8.439876,6.867378,4.698084,2.498926,-8.536699,-0.442283,-1.982546,7.402900,-2.418694,-8.560197,4.011714,-3.175837,5.653130,6.633543,8.231122,-2.070160,9.730424,-3.002748,-9.591269,4.216061,1.714753,2.078401,7.058422,6.267005,8.268710,-0.099523,4.717452,1.994701,-9.234609,-9.563718,0.697471,-0.410237,-5.898257,9.671119,-1.612308,3.264320,-2.604375,7.872930,7.903329,4.496484,-6.831859,8.675515,4.508435,-4.442772,6.900704,0.865629,-7.579200,9.738737], dtype = "float64")#candidate|2635|(84,)|const|float64
call_2632 = relay.TupleGetItem(func_920_call(relay.reshape(const_2633.astype('float64'), [14, 16, 13]), relay.reshape(const_2634.astype('int64'), []), relay.reshape(const_2635.astype('float64'), [84, 1]), ), 4)
call_2636 = relay.TupleGetItem(func_925_call(relay.reshape(const_2633.astype('float64'), [14, 16, 13]), relay.reshape(const_2634.astype('int64'), []), relay.reshape(const_2635.astype('float64'), [84, 1]), ), 4)
uop_2637 = relay.cosh(call_2625.astype('float64')) # shape=(2, 7, 12)
uop_2639 = relay.cosh(call_2627.astype('float64')) # shape=(2, 7, 12)
func_318_call = mod.get_global_var('func_318')
func_323_call = mutated_mod.get_global_var('func_323')
const_2642 = relay.const([-2,9,9,-6,-1,10,4,7,5,1,3,-4,3,-9,6,6,-4,-2,10,-10,8,4,-7,7,10,-7,9,1,1,2,7,7,-4,4,6,8,5,5,-4,3,-2,6,4,-5,7,-4,7,6,10,-9,4,-10,9,1,10,7,8,5,-1,9,-8,-2,4,-8,10,1,-3,4,-8,5,-1,-10,-4,-3,5,-2,-4], dtype = "int64")#candidate|2642|(77,)|const|int64
call_2641 = relay.TupleGetItem(func_318_call(relay.reshape(const_2634.astype('int64'), []), relay.reshape(const_2642.astype('int64'), [1, 7, 11]), relay.reshape(call_2632.astype('float64'), [84,]), ), 0)
call_2643 = relay.TupleGetItem(func_323_call(relay.reshape(const_2634.astype('int64'), []), relay.reshape(const_2642.astype('int64'), [1, 7, 11]), relay.reshape(call_2632.astype('float64'), [84,]), ), 0)
func_318_call = mod.get_global_var('func_318')
func_323_call = mutated_mod.get_global_var('func_323')
call_2658 = relay.TupleGetItem(func_318_call(relay.reshape(const_2634.astype('int64'), []), relay.reshape(call_2641.astype('int64'), [1, 7, 11]), relay.reshape(call_2632.astype('float64'), [84,]), ), 0)
call_2659 = relay.TupleGetItem(func_323_call(relay.reshape(const_2634.astype('int64'), []), relay.reshape(call_2641.astype('int64'), [1, 7, 11]), relay.reshape(call_2632.astype('float64'), [84,]), ), 0)
output = relay.Tuple([bop_2602,uop_2614,const_2626,call_2632,const_2633,const_2634,const_2635,uop_2637,call_2641,const_2642,call_2658,])
output2 = relay.Tuple([bop_2602,uop_2614,const_2626,call_2636,const_2633,const_2634,const_2635,uop_2639,call_2643,const_2642,call_2659,])
func_2662 = relay.Function([var_2600,var_2601,], output)
mod['func_2662'] = func_2662
mod = relay.transform.InferType()(mod)
mutated_mod['func_2662'] = func_2662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2662_call = mutated_mod.get_global_var('func_2662')
var_2664 = relay.var("var_2664", dtype = "float32", shape = (10, 10, 13))#candidate|2664|(10, 10, 13)|var|float32
var_2665 = relay.var("var_2665", dtype = "float32", shape = (10, 10, 13))#candidate|2665|(10, 10, 13)|var|float32
call_2663 = func_2662_call(var_2664,var_2665,)
output = call_2663
func_2666 = relay.Function([var_2664,var_2665,], output)
mutated_mod['func_2666'] = func_2666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2727 = relay.var("var_2727", dtype = "float64", shape = ())#candidate|2727|()|var|float64
var_2728 = relay.var("var_2728", dtype = "float64", shape = (16, 4, 4))#candidate|2728|(16, 4, 4)|var|float64
bop_2729 = relay.floor_divide(var_2727.astype('float64'), var_2728.astype('float64')) # shape=(16, 4, 4)
func_887_call = mod.get_global_var('func_887')
func_889_call = mutated_mod.get_global_var('func_889')
var_2734 = relay.var("var_2734", dtype = "uint8", shape = (18,))#candidate|2734|(18,)|var|uint8
call_2733 = relay.TupleGetItem(func_887_call(relay.reshape(var_2734.astype('uint8'), [2, 1, 9])), 0)
call_2735 = relay.TupleGetItem(func_889_call(relay.reshape(var_2734.astype('uint8'), [2, 1, 9])), 0)
output = relay.Tuple([bop_2729,call_2733,var_2734,])
output2 = relay.Tuple([bop_2729,call_2735,var_2734,])
func_2737 = relay.Function([var_2727,var_2728,var_2734,], output)
mod['func_2737'] = func_2737
mod = relay.transform.InferType()(mod)
var_2738 = relay.var("var_2738", dtype = "float64", shape = ())#candidate|2738|()|var|float64
var_2739 = relay.var("var_2739", dtype = "float64", shape = (16, 4, 4))#candidate|2739|(16, 4, 4)|var|float64
var_2740 = relay.var("var_2740", dtype = "uint8", shape = (18,))#candidate|2740|(18,)|var|uint8
output = func_2737(var_2738,var_2739,var_2740,)
func_2741 = relay.Function([var_2738,var_2739,var_2740,], output)
mutated_mod['func_2741'] = func_2741
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3439 = relay.var("var_3439", dtype = "float64", shape = ())#candidate|3439|()|var|float64
const_3440 = relay.const([[[-6.737481,-6.104535,3.027168,1.848088,-5.902769,6.493269,-0.780291,0.299440,0.850435],[-5.228430,5.163114,6.852884,5.891160,4.765117,9.235669,-6.670713,-7.524899,-6.534787],[5.663920,-8.086133,-0.734897,-2.715482,8.761877,-7.624694,-9.627531,-2.166271,-0.383138],[4.362773,-0.267170,-4.123246,6.945761,2.970390,-8.693048,-1.731791,1.614602,4.965096],[-5.068404,-6.918798,8.170043,-7.652586,-6.226206,4.668020,-2.080724,-5.107655,-1.921225],[-4.809665,-5.219860,5.005181,-3.565971,-3.981396,-4.188121,2.304664,-6.146954,-7.057787],[1.079625,8.740749,-6.329620,-0.431030,3.552298,5.452599,6.357980,-1.439231,1.726359],[-2.693064,8.782091,3.417079,-1.150503,-9.249845,-3.024599,-8.808064,5.021587,5.158994]],[[2.527157,-8.504407,4.969375,-9.194604,4.619040,-8.291281,-7.302461,-8.246098,3.939731],[0.749793,1.517897,-9.962548,-2.232678,7.385923,9.672356,5.469354,-7.842025,5.489952],[1.580852,-3.945790,-3.209633,3.683940,-3.367854,-3.934202,7.917759,9.400337,5.125726],[0.571497,1.054102,9.869050,2.528042,9.196732,-5.953766,5.876767,-0.498737,9.922180],[-2.151815,5.470083,-0.517958,1.259728,7.748041,-7.621393,-9.615917,-3.445450,-4.520422],[-0.488130,3.801829,3.052746,8.017302,2.351502,3.941258,-8.309159,-5.326694,-8.322491],[-5.917696,-5.602377,-7.424976,-0.560124,-4.468616,-3.268892,1.195912,1.144075,-1.778434],[-7.288567,3.354140,9.378341,-2.469396,6.389981,3.214882,-7.544540,6.972897,3.769399]],[[0.678521,-7.486526,6.737944,3.806987,-2.666709,0.788437,1.055694,-7.260765,6.305989],[7.262216,0.720251,-2.898789,-7.455236,-8.153170,-0.504808,-9.401243,-3.535052,6.351975],[6.581462,-3.533466,6.269388,2.653516,7.021986,-2.098112,0.045445,4.344814,-3.158559],[-0.982564,-3.292973,-3.906046,-0.671238,-7.111091,1.966338,-0.130147,-3.738948,-3.415356],[-1.721148,4.718693,2.764964,8.679131,7.623082,-2.694522,-4.157458,9.493251,0.303236],[5.722023,-8.866814,-6.240519,-1.645472,-9.288110,3.074844,-1.897003,-9.319013,-2.512283],[3.350822,2.415680,-3.590193,-6.499318,-8.229974,7.030974,3.700020,1.749224,-7.913758],[-6.846857,8.905742,-4.409610,6.348669,-4.125245,-0.878777,-9.831136,-7.776346,-2.276923]],[[4.209084,-9.444362,-3.412472,3.185359,-1.674902,2.111039,4.467040,5.491634,4.031855],[5.772185,7.730296,-4.577502,-5.511385,5.194830,-1.020290,2.848647,9.316806,7.573168],[3.417777,1.125702,-3.218401,4.213524,-2.035695,-2.829231,-2.280670,2.038870,6.617507],[9.062449,-3.546351,6.920146,-4.559289,-8.955205,-7.807946,-6.725902,-5.250787,8.172813],[-8.546195,-3.280429,-1.857458,-0.578644,1.949934,-4.138994,-4.459280,-4.581866,-4.654962],[4.849905,4.500330,-2.748214,-4.057262,5.938234,2.325246,2.278967,5.903443,-1.185967],[-7.273422,-3.888554,-9.995423,-0.412460,-2.030582,0.389812,-1.604926,-9.097395,-7.335418],[6.987326,4.512643,-8.673634,-5.014753,-1.160687,6.857078,0.888537,-4.444287,3.383752]],[[-4.149706,7.403792,8.009065,4.598599,7.582830,0.599895,1.312563,-2.707276,2.786487],[4.453633,-9.728107,-6.867024,-0.250725,6.825277,5.481384,-8.488209,0.404599,8.675821],[-7.868364,-0.020640,-9.962242,-6.966718,0.601231,-4.534688,8.022559,-9.466715,1.117559],[6.509987,-8.790329,-0.498668,-5.514331,8.959410,-2.505937,-3.064795,7.583698,4.039844],[-6.134370,4.087299,-0.875792,-6.612605,9.001807,-2.406168,2.267002,2.915096,-5.664340],[-2.401385,-4.731625,-6.736146,-8.391713,2.798768,-4.346228,8.113070,-7.344743,-1.296860],[-8.123934,-8.759194,9.252297,-5.150702,3.022907,-2.746870,-2.554587,-7.617890,-7.591458],[0.545771,8.081298,-7.818071,4.237365,-9.964282,5.464782,5.724435,3.114544,1.211614]],[[-7.345958,-3.101818,4.421578,1.280151,1.264998,-3.055728,1.550846,-4.106533,6.487505],[-8.340026,-0.578778,-5.071289,2.184631,5.223173,-8.091510,7.145413,-9.698625,-5.476638],[-8.121295,3.633233,7.243988,3.244973,-0.872124,6.355193,-6.288523,-5.863807,-1.977365],[-6.286129,-1.637125,-0.860805,7.958932,3.037641,4.791067,9.066234,-1.145486,6.628882],[3.175121,-4.257567,-7.284031,6.698311,0.664770,3.058688,-9.323242,9.028140,7.765114],[3.145075,0.931037,7.186914,-8.069900,-2.595398,3.488993,-6.994447,-5.271728,-0.467978],[-4.288012,9.513955,-1.147653,2.782399,2.682039,0.729873,9.386246,6.379988,-5.704274],[3.901491,8.369348,0.739968,-4.674205,7.786289,-2.798487,1.540887,1.957317,-7.723212]],[[-1.741475,7.106560,-6.668209,-2.767736,1.717684,-3.780315,-6.078249,4.285698,9.326286],[8.667098,-6.554486,-7.319441,-8.370181,-9.669179,-3.847487,3.867711,-1.127547,-8.852063],[-7.103846,-8.024964,-8.440748,6.707507,9.532870,0.757109,3.364829,-5.968661,5.798922],[-2.328124,-8.594323,-8.016976,9.861195,2.411614,-7.913689,-9.476373,9.430040,-3.016149],[0.733685,-3.802718,-9.955203,8.546784,-9.855748,-2.835805,-7.316069,-9.734042,8.017113],[2.431208,-2.069622,-7.267735,9.719348,6.524139,-7.938304,-1.364807,6.483566,-0.118230],[-0.539596,7.520603,6.270591,0.501269,-7.518425,-2.111197,-7.224734,-4.323518,9.739526],[8.423530,1.956177,4.574789,-1.173157,4.704710,-3.916534,-7.151925,7.306330,-4.466384]],[[5.325731,-1.950158,6.851946,1.492430,5.021951,-6.389154,-3.229467,6.044826,2.549306],[0.027888,-1.088898,1.663369,-3.504475,-9.633436,-4.088407,-1.376441,-1.213665,4.715555],[-7.759875,6.806287,6.308961,-9.710180,6.743741,3.212555,-9.093066,-0.140938,-4.517737],[4.185630,2.345986,-8.793425,-9.750453,7.963463,-3.404845,-6.020565,7.372862,-1.606707],[-5.867414,1.741344,-2.548131,-1.216099,6.257668,1.292782,-8.910673,6.249576,-9.370674],[1.372973,-9.449452,2.600146,-6.063906,5.016441,7.184539,-4.030938,-3.499377,2.071900],[-2.536051,9.243733,8.436222,5.087813,-7.752848,8.403156,6.182474,0.371042,-8.866556],[-0.424513,9.921854,-3.368210,0.519732,-5.450760,-2.817170,-6.379593,2.352193,6.127186]],[[-9.012917,-7.194701,5.482154,-4.926044,5.791043,-0.456168,-3.601105,-4.800105,9.564746],[9.914481,4.849040,-5.727385,2.101447,-7.519280,2.546283,5.874927,7.191671,-3.664322],[-7.840764,6.323372,-4.439681,9.546097,-7.032887,-0.510044,-3.722574,-0.945312,1.863052],[-0.351878,6.961178,5.975582,-2.532909,-6.192663,9.387825,-1.625161,4.272849,1.494573],[4.967644,6.149899,-5.595604,7.624048,4.652161,-2.136938,5.616970,4.604339,7.051423],[9.967627,-4.409570,0.486735,-0.958792,4.782857,5.563280,7.776033,4.232992,-7.005853],[5.626161,-2.564844,6.004964,4.670889,3.851324,2.526213,-4.958721,-4.871180,5.643879],[-1.402311,6.438802,6.709365,-5.830415,-9.160754,4.011686,9.908290,-7.308290,0.730409]],[[-3.879326,-6.334786,-4.687216,-8.282473,-7.386100,4.478121,9.652973,3.766216,4.728687],[3.461324,-5.188238,6.058193,5.351903,-9.824497,-6.546832,0.170531,-1.127105,1.321794],[-3.690639,3.426960,-3.826566,-0.010386,-6.928875,2.450811,-9.896435,0.818632,-2.283503],[6.362482,4.744292,0.802550,7.682732,-1.718456,0.166569,-6.390190,-2.287237,-7.092260],[-8.438006,-7.618553,8.274193,-4.564538,-8.000941,-2.983938,-8.215516,-3.581083,0.919523],[-3.020900,9.718157,-0.465648,-6.874233,-2.065161,2.193657,2.554357,9.180452,-7.172304],[8.183001,-7.849757,6.482144,-9.343683,-3.521670,9.026954,0.425762,3.517643,8.053225],[3.993151,-8.982152,-9.225761,-3.789562,-0.594738,0.251231,-1.858371,9.890718,-7.588931]],[[6.499328,2.782541,-7.627614,1.127126,-9.991523,-4.808738,0.665461,2.839064,2.244512],[6.735423,0.376463,3.812810,-3.313269,-9.033967,-1.797048,-0.414029,3.914716,-3.215936],[1.328782,5.576444,-5.100407,0.931339,2.452671,6.597968,-5.335283,1.568626,-0.367170],[-7.178338,-8.769093,1.455966,4.811174,2.953236,6.618818,-7.466010,2.512408,-9.751530],[4.435595,7.731937,-3.122219,4.253144,0.520371,-0.475693,7.419751,1.869063,0.090744],[6.430085,-4.148568,-8.442016,-6.604296,-5.294417,-0.041047,4.348984,-8.836393,3.792983],[8.457948,2.960489,2.999155,1.621805,-4.016513,-7.932577,7.072399,7.521731,-5.672030],[3.103496,-6.226905,5.078100,-4.364367,2.917271,7.566280,7.918191,8.772091,-1.038558]],[[-5.220106,-7.761885,-6.051651,8.340584,-3.719829,4.807851,-2.349094,9.026964,3.042225],[4.804540,4.646569,-1.633064,7.094894,1.364102,7.059581,3.536260,8.709998,-4.594628],[8.144174,3.574328,-4.521699,-5.996980,8.089057,-2.464418,-8.890935,-4.939359,-1.957606],[1.186745,-9.657448,-2.444313,-2.391085,-3.969576,5.903324,0.041516,-9.241029,-3.093059],[7.625663,4.934424,-6.354051,6.851411,1.573389,-7.916515,1.376441,-5.115569,0.594041],[7.912035,-3.060089,0.632862,-0.817251,-8.521220,-0.136803,-4.290276,-4.681028,-5.067358],[6.222311,2.511234,-5.602510,-5.558537,3.143724,5.160221,0.331054,-0.591172,-9.641004],[-1.720432,-3.690081,2.736745,7.157903,5.076104,6.295892,6.838484,3.849869,-5.191199]],[[-8.663986,6.313044,3.344795,-1.008237,2.305931,-5.372357,7.898700,7.670360,-5.528369],[-2.800228,-1.281963,6.705970,9.524336,-7.519774,6.327035,-0.132948,1.030108,-4.917529],[9.679940,4.920675,4.492183,-6.770549,-1.972077,7.582792,2.970053,1.245696,0.310544],[2.948236,0.811430,1.500286,-6.498350,-3.127940,-0.862818,-8.241555,-7.608348,-4.615218],[-1.413717,-0.519214,-7.525857,6.738191,4.000360,7.671183,1.037891,1.784308,-0.351850],[1.176812,2.749150,-6.038584,-2.566601,1.793738,8.933122,5.441690,-8.807892,-5.171501],[4.941886,-8.756446,-9.900561,0.823039,2.595948,-0.199861,9.226176,-2.559970,-8.684177],[-3.185206,-9.914061,6.869597,-5.332753,4.544334,-5.744453,0.238342,6.645116,-5.855869]],[[-9.417099,3.927954,-0.989724,9.064680,8.468600,-6.699196,7.471277,9.126120,-7.576577],[9.975437,2.641092,-7.449506,-0.477778,4.975120,4.660356,-6.023230,7.101762,1.469249],[4.355590,8.564657,4.413837,-7.425878,9.678466,-0.354558,-2.256796,-4.472038,-8.450105],[6.614299,-8.681560,-1.605874,-3.435286,0.091604,-9.540035,-6.969226,-0.226255,-2.563648],[1.936265,-0.921917,-6.499857,8.387279,-7.169358,-7.610054,-4.874193,7.167651,-9.339327],[-4.319691,-3.897774,-1.324758,4.768128,9.363570,1.203343,7.007626,-8.883517,5.814488],[-5.520737,-4.206568,-8.426566,1.527104,-4.765581,8.440287,-9.426722,-7.025291,-0.352577],[5.964096,8.422100,9.577432,-0.767247,3.944432,-6.475856,-5.610445,0.359150,4.125120]],[[3.264099,-3.659233,9.344962,0.306491,-3.278023,5.865765,-7.065987,-3.382354,1.550674],[-2.687813,-2.022576,-6.064123,-4.013434,8.802646,7.295101,5.231372,9.174379,1.082382],[-5.108575,-1.222632,-5.826923,8.984120,-8.674944,-2.566583,1.147943,8.983717,-6.898650],[-4.843425,-1.957730,1.695115,-0.542349,5.125309,-5.218594,-2.802295,6.979306,6.732013],[-7.195721,-7.110281,-8.073629,-1.318108,-2.819026,9.770119,-5.132849,0.534143,4.680686],[-1.234352,-7.001117,4.619033,-8.456802,0.267062,-4.376674,9.129846,2.210620,4.890868],[-3.903475,5.547729,-8.911091,-1.609884,-7.103295,0.698541,-0.693786,6.131318,2.783952],[0.632891,-0.082824,9.580905,-2.335029,-4.197520,7.619043,7.942131,4.020108,-4.491087]]], dtype = "float64")#candidate|3440|(15, 8, 9)|const|float64
bop_3441 = relay.floor_divide(var_3439.astype('float64'), const_3440.astype('float64')) # shape=(15, 8, 9)
output = relay.Tuple([bop_3441,])
output2 = relay.Tuple([bop_3441,])
func_3451 = relay.Function([var_3439,], output)
mod['func_3451'] = func_3451
mod = relay.transform.InferType()(mod)
var_3452 = relay.var("var_3452", dtype = "float64", shape = ())#candidate|3452|()|var|float64
output = func_3451(var_3452)
func_3453 = relay.Function([var_3452], output)
mutated_mod['func_3453'] = func_3453
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3463 = relay.var("var_3463", dtype = "int16", shape = (9, 3, 7))#candidate|3463|(9, 3, 7)|var|int16
const_3464 = relay.const([[[5,-5,-6,1,-5,4,-5],[8,2,-9,-4,-10,1,8],[-7,-9,5,-3,3,4,5]],[[9,-2,5,4,9,-7,6],[-9,9,7,10,-3,3,-9],[3,9,-3,-6,5,4,-10]],[[6,-10,-10,3,-8,9,6],[-5,-3,8,-10,-10,-3,8],[2,-8,-6,5,7,3,-1]],[[-5,6,-1,-8,-10,-1,-5],[-9,2,3,-2,-8,4,5],[1,2,2,-7,7,-1,6]],[[-9,-8,5,10,10,6,-6],[-3,8,6,1,-9,8,-6],[5,5,-4,-2,5,-9,-1]],[[2,5,-8,-9,-6,10,-9],[-1,1,8,2,1,10,-4],[-10,6,-2,-9,-8,5,-1]],[[7,-5,-4,8,2,-3,-2],[8,4,8,-2,-2,1,1],[4,-10,1,-3,2,8,-9]],[[-7,-4,6,-5,-9,-5,9],[-1,-1,-4,7,-6,2,-2],[-4,-9,-2,5,2,-10,-8]],[[2,-2,-10,9,6,1,8],[2,2,-9,-6,-6,8,-1],[-7,-5,6,3,2,2,-9]]], dtype = "int16")#candidate|3464|(9, 3, 7)|const|int16
bop_3465 = relay.less_equal(var_3463.astype('bool'), relay.reshape(const_3464.astype('bool'), relay.shape_of(var_3463))) # shape=(9, 3, 7)
func_887_call = mod.get_global_var('func_887')
func_889_call = mutated_mod.get_global_var('func_889')
const_3473 = relay.const([-5,10,10,2,1,-8,9,7,3,3,6,-3,2,6,-1,10,9,-5], dtype = "uint8")#candidate|3473|(18,)|const|uint8
call_3472 = relay.TupleGetItem(func_887_call(relay.reshape(const_3473.astype('uint8'), [2, 1, 9])), 0)
call_3474 = relay.TupleGetItem(func_889_call(relay.reshape(const_3473.astype('uint8'), [2, 1, 9])), 0)
func_459_call = mod.get_global_var('func_459')
func_463_call = mutated_mod.get_global_var('func_463')
var_3477 = relay.var("var_3477", dtype = "bool", shape = (1, 168))#candidate|3477|(1, 168)|var|bool
call_3476 = func_459_call(relay.reshape(var_3477.astype('bool'), [2, 7, 12]), relay.reshape(var_3477.astype('bool'), [2, 7, 12]), )
call_3478 = func_459_call(relay.reshape(var_3477.astype('bool'), [2, 7, 12]), relay.reshape(var_3477.astype('bool'), [2, 7, 12]), )
output = relay.Tuple([bop_3465,call_3472,const_3473,call_3476,var_3477,])
output2 = relay.Tuple([bop_3465,call_3474,const_3473,call_3478,var_3477,])
func_3480 = relay.Function([var_3463,var_3477,], output)
mod['func_3480'] = func_3480
mod = relay.transform.InferType()(mod)
mutated_mod['func_3480'] = func_3480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3480_call = mutated_mod.get_global_var('func_3480')
var_3482 = relay.var("var_3482", dtype = "int16", shape = (9, 3, 7))#candidate|3482|(9, 3, 7)|var|int16
var_3483 = relay.var("var_3483", dtype = "bool", shape = (1, 168))#candidate|3483|(1, 168)|var|bool
call_3481 = func_3480_call(var_3482,var_3483,)
output = call_3481
func_3484 = relay.Function([var_3482,var_3483,], output)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3546 = relay.const([[[2.091022,-7.063121,7.249793]],[[6.269019,-5.299362,4.604942]],[[-8.230080,6.153900,9.268817]],[[-6.322463,-5.625963,5.943321]],[[-3.674807,6.086560,-3.039247]],[[-4.382164,-2.978188,7.031551]],[[1.846568,-2.204369,0.983802]],[[-4.703267,3.386873,9.861873]],[[8.411257,2.497463,-8.950649]],[[-0.460734,-2.266623,-3.972908]],[[-6.714313,-9.517048,7.340358]],[[-6.617720,-0.036061,-7.643871]],[[-1.205158,4.532048,4.446361]],[[2.121742,-4.553174,-0.897069]]], dtype = "float64")#candidate|3546|(14, 1, 3)|const|float64
uop_3547 = relay.atanh(const_3546.astype('float64')) # shape=(14, 1, 3)
uop_3549 = relay.log(const_3546.astype('float32')) # shape=(14, 1, 3)
bop_3557 = relay.bitwise_xor(uop_3547.astype('uint32'), relay.reshape(uop_3549.astype('uint32'), relay.shape_of(uop_3547))) # shape=(14, 1, 3)
bop_3577 = relay.power(bop_3557.astype('float64'), relay.reshape(uop_3549.astype('float64'), relay.shape_of(bop_3557))) # shape=(14, 1, 3)
output = relay.Tuple([bop_3577,])
output2 = relay.Tuple([bop_3577,])
func_3582 = relay.Function([], output)
mod['func_3582'] = func_3582
mod = relay.transform.InferType()(mod)
output = func_3582()
func_3583 = relay.Function([], output)
mutated_mod['func_3583'] = func_3583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3602 = relay.var("var_3602", dtype = "float64", shape = (13, 1, 9))#candidate|3602|(13, 1, 9)|var|float64
uop_3603 = relay.log(var_3602.astype('float64')) # shape=(13, 1, 9)
func_1683_call = mod.get_global_var('func_1683')
func_1690_call = mutated_mod.get_global_var('func_1690')
var_3607 = relay.var("var_3607", dtype = "float64", shape = ())#candidate|3607|()|var|float64
var_3608 = relay.var("var_3608", dtype = "float64", shape = (66,))#candidate|3608|(66,)|var|float64
const_3609 = relay.const([3,10,-7,6,6,3,6,-9,5,-5,9,-4,4,7,9,1,-3,5,-9,7,8,-1,6,-1,-7,-3,-6,9,2,4,-2,-5,-6,-5,3,2,-2,8,-4,8,-7,10,-10,3,-6,7,-2,5,3,2,-1,-9,-9,2,8,-5,-1,-2,5,-4,4,1,2,-3,5,2,2,-3,-10,4,-3,7,-5,6,4,-3,9], dtype = "int64")#candidate|3609|(77,)|const|int64
var_3610 = relay.var("var_3610", dtype = "float32", shape = (132,))#candidate|3610|(132,)|var|float32
const_3611 = relay.const([7,3,-1,3,-7,9,5,10,5,-10,-5,10,3,-1,2,4,-5,-1], dtype = "uint8")#candidate|3611|(18,)|const|uint8
const_3612 = relay.const([True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,False,False], dtype = "bool")#candidate|3612|(168,)|const|bool
call_3606 = relay.TupleGetItem(func_1683_call(relay.reshape(var_3607.astype('float64'), []), relay.reshape(var_3608.astype('float64'), [6, 11]), relay.reshape(const_3609.astype('int64'), [77,]), relay.reshape(var_3610.astype('float32'), [132,]), relay.reshape(const_3611.astype('uint8'), [6, 3]), relay.reshape(const_3612.astype('bool'), [168,]), ), 12)
call_3613 = relay.TupleGetItem(func_1690_call(relay.reshape(var_3607.astype('float64'), []), relay.reshape(var_3608.astype('float64'), [6, 11]), relay.reshape(const_3609.astype('int64'), [77,]), relay.reshape(var_3610.astype('float32'), [132,]), relay.reshape(const_3611.astype('uint8'), [6, 3]), relay.reshape(const_3612.astype('bool'), [168,]), ), 12)
output = relay.Tuple([uop_3603,call_3606,var_3607,var_3608,const_3609,var_3610,const_3611,const_3612,])
output2 = relay.Tuple([uop_3603,call_3613,var_3607,var_3608,const_3609,var_3610,const_3611,const_3612,])
func_3616 = relay.Function([var_3602,var_3607,var_3608,var_3610,], output)
mod['func_3616'] = func_3616
mod = relay.transform.InferType()(mod)
var_3617 = relay.var("var_3617", dtype = "float64", shape = (13, 1, 9))#candidate|3617|(13, 1, 9)|var|float64
var_3618 = relay.var("var_3618", dtype = "float64", shape = ())#candidate|3618|()|var|float64
var_3619 = relay.var("var_3619", dtype = "float64", shape = (66,))#candidate|3619|(66,)|var|float64
var_3620 = relay.var("var_3620", dtype = "float32", shape = (132,))#candidate|3620|(132,)|var|float32
output = func_3616(var_3617,var_3618,var_3619,var_3620,)
func_3621 = relay.Function([var_3617,var_3618,var_3619,var_3620,], output)
mutated_mod['func_3621'] = func_3621
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3648 = relay.var("var_3648", dtype = "float32", shape = ())#candidate|3648|()|var|float32
var_3649 = relay.var("var_3649", dtype = "float32", shape = (3, 11, 7))#candidate|3649|(3, 11, 7)|var|float32
bop_3650 = relay.greater_equal(var_3648.astype('bool'), var_3649.astype('bool')) # shape=(3, 11, 7)
output = relay.Tuple([bop_3650,])
output2 = relay.Tuple([bop_3650,])
func_3657 = relay.Function([var_3648,var_3649,], output)
mod['func_3657'] = func_3657
mod = relay.transform.InferType()(mod)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3657_call = mutated_mod.get_global_var('func_3657')
var_3659 = relay.var("var_3659", dtype = "float32", shape = ())#candidate|3659|()|var|float32
var_3660 = relay.var("var_3660", dtype = "float32", shape = (3, 11, 7))#candidate|3660|(3, 11, 7)|var|float32
call_3658 = func_3657_call(var_3659,var_3660,)
output = call_3658
func_3661 = relay.Function([var_3659,var_3660,], output)
mutated_mod['func_3661'] = func_3661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3582_call = mod.get_global_var('func_3582')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_3668 = relay.TupleGetItem(func_3582_call(), 0)
call_3669 = relay.TupleGetItem(func_3583_call(), 0)
uop_3670 = relay.acos(call_3668.astype('float32')) # shape=(14, 1, 3)
uop_3672 = relay.acos(call_3669.astype('float32')) # shape=(14, 1, 3)
func_2662_call = mod.get_global_var('func_2662')
func_2666_call = mutated_mod.get_global_var('func_2666')
var_3676 = relay.var("var_3676", dtype = "float32", shape = (1300,))#candidate|3676|(1300,)|var|float32
call_3675 = relay.TupleGetItem(func_2662_call(relay.reshape(var_3676.astype('float32'), [10, 10, 13]), relay.reshape(var_3676.astype('float32'), [10, 10, 13]), ), 3)
call_3677 = relay.TupleGetItem(func_2666_call(relay.reshape(var_3676.astype('float32'), [10, 10, 13]), relay.reshape(var_3676.astype('float32'), [10, 10, 13]), ), 3)
output = relay.Tuple([uop_3670,call_3675,var_3676,])
output2 = relay.Tuple([uop_3672,call_3677,var_3676,])
func_3685 = relay.Function([var_3676,], output)
mod['func_3685'] = func_3685
mod = relay.transform.InferType()(mod)
mutated_mod['func_3685'] = func_3685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3686 = relay.var("var_3686", dtype = "float32", shape = (1300,))#candidate|3686|(1300,)|var|float32
func_3685_call = mutated_mod.get_global_var('func_3685')
call_3687 = func_3685_call(var_3686)
output = call_3687
func_3688 = relay.Function([var_3686], output)
mutated_mod['func_3688'] = func_3688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3582_call = mod.get_global_var('func_3582')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_3738 = relay.TupleGetItem(func_3582_call(), 0)
call_3739 = relay.TupleGetItem(func_3583_call(), 0)
output = call_3738
output2 = call_3739
func_3750 = relay.Function([], output)
mod['func_3750'] = func_3750
mod = relay.transform.InferType()(mod)
mutated_mod['func_3750'] = func_3750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mutated_mod.get_global_var('func_3750')
call_3751 = func_3750_call()
output = call_3751
func_3752 = relay.Function([], output)
mutated_mod['func_3752'] = func_3752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3582_call = mod.get_global_var('func_3582')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_3767 = relay.TupleGetItem(func_3582_call(), 0)
call_3768 = relay.TupleGetItem(func_3583_call(), 0)
uop_3769 = relay.sqrt(call_3767.astype('float32')) # shape=(14, 1, 3)
uop_3771 = relay.sqrt(call_3768.astype('float32')) # shape=(14, 1, 3)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
const_3773 = relay.const([-6.870364,6.699689,-3.996026,-3.598117,-9.085156,-2.960410,-5.416501,-1.371192,-1.202966,-3.309521,5.520806,-7.120211,5.271258,6.973381,-5.924315,8.167903,7.904368,-3.116064,-6.970943,-7.160190,-3.369621,-6.888109,2.717898,4.799795,6.308463,-8.403921,7.874248,6.965815,4.762013,5.904714,0.507061,-1.774713,3.297819,8.192779,6.144781,3.161057,-9.935786,-1.279259,-9.448378,8.191968,0.190037,-8.257417,-6.302641,-9.714544,-4.985061,-1.633058,-5.897344,7.975397,2.129993,0.766815,-9.729306,-0.847740,-1.889062,-8.408696,-3.058068,8.962499,-4.474657,-8.000271,3.884422,-8.148391,-1.153430,-2.831481,7.976280,0.520239,-2.903534,5.474225,3.219762,7.017765,-4.703061,-4.442844,-0.022960,-2.887799,1.350108,5.113098,1.560364,5.877934,-7.663619,-0.898220,0.169120,-6.927382,7.908229,-2.704169,9.521209,-3.385789], dtype = "float64")#candidate|3773|(84,)|const|float64
call_3772 = func_125_call(relay.reshape(const_3773.astype('float64'), [14, 2, 3]))
call_3774 = func_125_call(relay.reshape(const_3773.astype('float64'), [14, 2, 3]))
func_599_call = mod.get_global_var('func_599')
func_603_call = mutated_mod.get_global_var('func_603')
const_3776 = relay.const(9, dtype = "uint64")#candidate|3776|()|const|uint64
var_3777 = relay.var("var_3777", dtype = "uint64", shape = (240,))#candidate|3777|(240,)|var|uint64
call_3775 = relay.TupleGetItem(func_599_call(relay.reshape(const_3776.astype('uint64'), []), relay.reshape(var_3777.astype('uint64'), [16, 5, 3]), ), 2)
call_3778 = relay.TupleGetItem(func_603_call(relay.reshape(const_3776.astype('uint64'), []), relay.reshape(var_3777.astype('uint64'), [16, 5, 3]), ), 2)
bop_3785 = relay.floor_divide(uop_3769.astype('float32'), const_3776.astype('float32')) # shape=(14, 1, 3)
bop_3788 = relay.floor_divide(uop_3771.astype('float32'), const_3776.astype('float32')) # shape=(14, 1, 3)
output = relay.Tuple([call_3772,const_3773,call_3775,var_3777,bop_3785,])
output2 = relay.Tuple([call_3774,const_3773,call_3778,var_3777,bop_3788,])
func_3799 = relay.Function([var_3777,], output)
mod['func_3799'] = func_3799
mod = relay.transform.InferType()(mod)
mutated_mod['func_3799'] = func_3799
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3800 = relay.var("var_3800", dtype = "uint64", shape = (240,))#candidate|3800|(240,)|var|uint64
func_3799_call = mutated_mod.get_global_var('func_3799')
call_3801 = func_3799_call(var_3800)
output = call_3801
func_3802 = relay.Function([var_3800], output)
mutated_mod['func_3802'] = func_3802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3582_call = mod.get_global_var('func_3582')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_3804 = relay.TupleGetItem(func_3582_call(), 0)
call_3805 = relay.TupleGetItem(func_3583_call(), 0)
func_599_call = mod.get_global_var('func_599')
func_603_call = mutated_mod.get_global_var('func_603')
var_3808 = relay.var("var_3808", dtype = "uint64", shape = ())#candidate|3808|()|var|uint64
const_3809 = relay.const([-3,7,-1,-8,1,5,1,8,4,5,-3,7,-7,-10,7,10,-8,-4,9,1,7,5,10,3,-1,-7,3,8,-3,9,-2,10,7,6,-5,-6,-4,2,4,7,4,-2,10,-8,-10,2,5,3,-5,-10,7,5,-8,-3,-4,8,4,8,-1,6,-3,-5,-2,2,7,-2,-9,6,-5,8,1,9,7,1,4,-1,-8,5,3,1,-1,-4,9,-8,9,4,-5,5,-2,1,-6,3,7,5,-7,-1,7,-3,-5,1,-8,-4,-1,6,-9,-9,9,8,2,-7,-10,-9,4,-5,4,5,-2,6,1,-5,9,3,8,6,-5,-8,1,-3,-1,4,-2,-7,9,8,-7,8,8,6,5,5,4,6,-3,10,5,9,-4,-4,2,-3,-4,5,-4,-8,-2,10,8,-1,3,7,7,7,-4,6,-10,5,2,8,10,7,-10,-7,-1,3,10,-3,-10,2,-1,2,-9,-7,-6,9,2,-7,10,-3,2,6,8,1,-8,-1,-3,-2,9,-5,4,-10,-7,9,1,-10,-7,-5,4,2,10,2,-6,6,-6,10,-5,6,-7,3,8,9,10,2,-1,-7,-8,4,5,-9,3,1,-8,-3,-4,3,8,9,7,1,6,10], dtype = "uint64")#candidate|3809|(240,)|const|uint64
call_3807 = relay.TupleGetItem(func_599_call(relay.reshape(var_3808.astype('uint64'), []), relay.reshape(const_3809.astype('uint64'), [16, 5, 3]), ), 0)
call_3810 = relay.TupleGetItem(func_603_call(relay.reshape(var_3808.astype('uint64'), []), relay.reshape(const_3809.astype('uint64'), [16, 5, 3]), ), 0)
func_3799_call = mod.get_global_var('func_3799')
func_3802_call = mutated_mod.get_global_var('func_3802')
call_3811 = relay.TupleGetItem(func_3799_call(relay.reshape(const_3809.astype('uint64'), [240,])), 3)
call_3812 = relay.TupleGetItem(func_3802_call(relay.reshape(const_3809.astype('uint64'), [240,])), 3)
output = relay.Tuple([call_3804,call_3807,var_3808,const_3809,call_3811,])
output2 = relay.Tuple([call_3805,call_3810,var_3808,const_3809,call_3812,])
func_3824 = relay.Function([var_3808,], output)
mod['func_3824'] = func_3824
mod = relay.transform.InferType()(mod)
var_3825 = relay.var("var_3825", dtype = "uint64", shape = ())#candidate|3825|()|var|uint64
output = func_3824(var_3825)
func_3826 = relay.Function([var_3825], output)
mutated_mod['func_3826'] = func_3826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mod.get_global_var('func_3750')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_3853 = func_3750_call()
call_3854 = func_3750_call()
func_3480_call = mod.get_global_var('func_3480')
func_3484_call = mutated_mod.get_global_var('func_3484')
var_3857 = relay.var("var_3857", dtype = "int16", shape = (189,))#candidate|3857|(189,)|var|int16
const_3858 = relay.const([False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True], dtype = "bool")#candidate|3858|(168,)|const|bool
call_3856 = relay.TupleGetItem(func_3480_call(relay.reshape(var_3857.astype('int16'), [9, 3, 7]), relay.reshape(const_3858.astype('bool'), [1, 168]), ), 3)
call_3859 = relay.TupleGetItem(func_3484_call(relay.reshape(var_3857.astype('int16'), [9, 3, 7]), relay.reshape(const_3858.astype('bool'), [1, 168]), ), 3)
bop_3861 = relay.maximum(call_3856.astype('uint8'), relay.reshape(const_3858.astype('uint8'), relay.shape_of(call_3856))) # shape=(2, 7, 12)
bop_3864 = relay.maximum(call_3859.astype('uint8'), relay.reshape(const_3858.astype('uint8'), relay.shape_of(call_3859))) # shape=(2, 7, 12)
func_2737_call = mod.get_global_var('func_2737')
func_2741_call = mutated_mod.get_global_var('func_2741')
const_3866 = relay.const(0.921655, dtype = "float64")#candidate|3866|()|const|float64
const_3867 = relay.const([-1.450742,-7.571405,0.793228,-5.274598,7.293183,2.925288,2.437670,1.055406,-7.217927,-8.527420,-4.397637,3.149322,9.254073,-8.041090,7.721221,4.792381,3.934053,-3.062306,3.050855,6.834430,1.077924,2.606237,-8.081281,1.273212,1.903397,3.371192,-9.842909,5.324813,7.522690,1.425865,3.910525,-1.752615,-0.626762,1.497262,6.980344,-1.052932,2.470250,0.396193,7.814917,-1.926608,-7.226811,-2.352089,-6.222980,-9.158373,5.788807,-0.504557,4.923816,9.315343,3.555318,5.703076,4.377284,0.829164,2.990698,4.531048,-7.387150,9.215415,9.911076,0.584496,-5.729813,7.680263,1.267099,-2.951767,-6.709540,-1.022102,-4.439768,-0.149574,-7.694949,-2.372073,6.935137,-6.394085,2.708074,-7.792712,7.332960,-5.157923,-7.955025,-5.821362,6.426988,-1.054434,-3.638341,2.379293,-2.053640,3.526796,9.948674,-0.548057,5.649420,-9.601081,-2.648296,5.203966,8.656860,6.440868,2.864805,6.359461,-1.965482,-9.525723,7.653107,3.971070,2.753201,-1.765721,-9.385023,2.198086,9.578396,-2.494583,0.623211,8.385663,7.795860,-2.685765,-8.375740,5.720593,0.367815,-9.562682,7.466869,-6.811330,-8.482974,-2.777246,8.646589,-3.879771,0.120829,-3.430754,-6.406677,7.501481,5.790306,-6.819987,-9.439031,-5.676573,7.022894,-0.235605,9.544589,9.344313,8.333051,-8.544093,-9.628616,2.504547,-4.058452,-5.793710,9.357316,-6.876829,8.674081,3.200577,7.270602,2.561730,-5.162042,4.348289,-3.562828,1.473025,-5.191721,-3.437808,-7.712673,0.777856,5.045787,2.012253,0.405651,4.853233,-5.494735,-0.997319,6.707382,-0.742426,4.183448,5.472419,-6.989019,4.365070,-5.332923,9.233114,2.002364,3.823775,-7.936616,-8.721195,9.346303,-0.464131,-0.303841,2.320375,-7.010085,5.723315,5.445814,7.495637,0.234616,8.049826,-5.791561,-3.580950,7.113957,0.803783,-6.182585,9.074446,7.032088,3.418488,8.692529,2.686828,-3.782472,5.218024,9.084486,4.479756,-8.911343,7.009630,-8.646880,-8.441039,8.381966,0.454399,9.836638,8.407094,4.157862,-9.656715,9.439431,-1.538247,-4.160676,-6.998431,5.916680,-6.608003,-1.638926,-9.215547,6.871029,-3.635680,-6.892026,-2.935123,-0.863877,1.523718,-8.390292,-3.591640,9.298530,7.218261,3.799482,-9.973911,-1.084129,-7.212590,-9.288172,8.503075,1.647977,-5.085705,6.253660,-5.799395,7.776627,1.135154,3.556134,8.714892,3.568286,9.007626,-7.980075,4.169698,-1.049374,5.646680,-7.893682,6.009328,-9.838459,-9.081864,-4.859278,-7.477918,-8.692674,-4.786218,4.638925,-1.340259,-6.436853,5.589430,2.908866,2.841118,-7.806870,-3.234010,8.012353,2.323065], dtype = "float64")#candidate|3867|(256,)|const|float64
var_3868 = relay.var("var_3868", dtype = "uint8", shape = (18,))#candidate|3868|(18,)|var|uint8
call_3865 = relay.TupleGetItem(func_2737_call(relay.reshape(const_3866.astype('float64'), []), relay.reshape(const_3867.astype('float64'), [16, 4, 4]), relay.reshape(var_3868.astype('uint8'), [18,]), ), 2)
call_3869 = relay.TupleGetItem(func_2741_call(relay.reshape(const_3866.astype('float64'), []), relay.reshape(const_3867.astype('float64'), [16, 4, 4]), relay.reshape(var_3868.astype('uint8'), [18,]), ), 2)
func_1447_call = mod.get_global_var('func_1447')
func_1450_call = mutated_mod.get_global_var('func_1450')
var_3872 = relay.var("var_3872", dtype = "float32", shape = (1, 132))#candidate|3872|(1, 132)|var|float32
var_3873 = relay.var("var_3873", dtype = "float32", shape = (792,))#candidate|3873|(792,)|var|float32
call_3871 = relay.TupleGetItem(func_1447_call(relay.reshape(var_3872.astype('float32'), [132,]), relay.reshape(var_3873.astype('float32'), [396, 2]), ), 1)
call_3874 = relay.TupleGetItem(func_1450_call(relay.reshape(var_3872.astype('float32'), [132,]), relay.reshape(var_3873.astype('float32'), [396, 2]), ), 1)
func_2737_call = mod.get_global_var('func_2737')
func_2741_call = mutated_mod.get_global_var('func_2741')
call_3880 = relay.TupleGetItem(func_2737_call(relay.reshape(const_3866.astype('float64'), []), relay.reshape(const_3867.astype('float64'), [16, 4, 4]), relay.reshape(var_3868.astype('uint8'), [18,]), ), 2)
call_3881 = relay.TupleGetItem(func_2741_call(relay.reshape(const_3866.astype('float64'), []), relay.reshape(const_3867.astype('float64'), [16, 4, 4]), relay.reshape(var_3868.astype('uint8'), [18,]), ), 2)
output = relay.Tuple([call_3853,var_3857,bop_3861,call_3865,const_3866,const_3867,var_3868,call_3871,var_3872,var_3873,call_3880,])
output2 = relay.Tuple([call_3854,var_3857,bop_3864,call_3869,const_3866,const_3867,var_3868,call_3874,var_3872,var_3873,call_3881,])
func_3883 = relay.Function([var_3857,var_3868,var_3872,var_3873,], output)
mod['func_3883'] = func_3883
mod = relay.transform.InferType()(mod)
var_3884 = relay.var("var_3884", dtype = "int16", shape = (189,))#candidate|3884|(189,)|var|int16
var_3885 = relay.var("var_3885", dtype = "uint8", shape = (18,))#candidate|3885|(18,)|var|uint8
var_3886 = relay.var("var_3886", dtype = "float32", shape = (1, 132))#candidate|3886|(1, 132)|var|float32
var_3887 = relay.var("var_3887", dtype = "float32", shape = (792,))#candidate|3887|(792,)|var|float32
output = func_3883(var_3884,var_3885,var_3886,var_3887,)
func_3888 = relay.Function([var_3884,var_3885,var_3886,var_3887,], output)
mutated_mod['func_3888'] = func_3888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mod.get_global_var('func_3750')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_3890 = func_3750_call()
call_3891 = func_3750_call()
func_3657_call = mod.get_global_var('func_3657')
func_3661_call = mutated_mod.get_global_var('func_3661')
var_3893 = relay.var("var_3893", dtype = "float32", shape = ())#candidate|3893|()|var|float32
const_3894 = relay.const([4.597238,-2.829199,-6.578724,3.342108,-6.902824,-9.404950,6.730467,-9.843734,-1.692275,-2.411655,2.943061,-9.433037,5.329400,1.658505,-5.152444,-7.436445,-8.238940,4.892265,2.078223,6.401510,-7.926917,-4.252060,-9.107730,-7.419689,4.256165,0.106737,-3.698209,-5.169651,-8.645387,-3.412916,-5.102581,1.640951,-2.908949,3.256434,9.933836,1.362126,9.095948,-4.636206,-0.667367,-4.037917,8.973046,-3.430215,6.759645,5.848694,2.807587,-3.383788,-8.764433,-5.927940,-6.050579,-6.460286,-4.547224,-0.690582,5.606272,-4.714786,4.603596,-2.035729,-5.153591,-9.877410,9.863390,-2.274568,-6.973516,-7.959895,-1.990802,9.906911,9.679272,-1.814550,8.243828,7.990919,7.023522,-5.365855,-9.087429,3.152464,1.533455,-4.759161,-6.467421,6.103356,0.281321,3.122129,0.724286,0.347888,6.113725,-8.420073,-7.805951,0.184509,3.225913,-0.333941,-4.664840,6.148456,-8.003828,-4.618161,-4.227216,0.937566,-1.827844,5.633093,7.989230,-5.698010,-6.182210,5.673227,-2.325763,7.546001,-9.973113,4.659741,2.378355,-7.312003,-6.838175,-9.777928,7.007530,-4.849429,7.062253,6.245602,-8.411676,0.874653,-8.056796,6.611182,4.358873,8.719451,9.897423,5.426985,6.992993,-0.851582,-6.142722,-9.588244,-4.009378,8.339681,-5.770846,-7.799408,-3.096539,5.236951,-5.369906,5.374228,0.781913,4.719186,8.914226,-3.395732,-0.714892,-5.669813,6.029382,-7.263423,-8.590083,1.588915,-3.114790,4.735970,7.836069,-1.788091,-7.316618,-0.328109,-6.183631,-0.186369,-1.720000,-8.128227,7.985871,9.471960,7.943730,-2.195064,-4.377806,-9.998540,5.297856,4.092500,-4.157260,-3.189075,-3.509888,0.022873,-8.026032,-9.389212,-3.056988,7.762888,-4.209462,-0.079989,8.657327,1.189131,5.325516,-4.467244,2.704523,1.346674,4.253110,-9.100855,-5.533808,-3.384744,0.769788,3.916864,3.351544,3.693789,-7.517282,3.098773,-5.209217,6.232611,-0.663035,-1.961965,8.611791,-7.377915,9.634442,-3.442435,-5.850364,-0.215554,-7.051743,5.043822,5.010105,2.307446,-7.227475,4.737262,7.842974,-9.434721,-3.708415,3.925495,5.810312,9.722457,6.153040,-1.291668,-4.593763,5.269767,2.062458,2.823556,-9.582997,-5.220592,4.294788,1.719529,-0.125775,5.416934,7.316025,-1.281534,-2.345528,9.392793,-4.684732,3.691466,4.556002,2.844031,6.166522,4.437272,1.777408,-7.563180,8.441502], dtype = "float32")#candidate|3894|(231,)|const|float32
call_3892 = relay.TupleGetItem(func_3657_call(relay.reshape(var_3893.astype('float32'), []), relay.reshape(const_3894.astype('float32'), [3, 11, 7]), ), 0)
call_3895 = relay.TupleGetItem(func_3661_call(relay.reshape(var_3893.astype('float32'), []), relay.reshape(const_3894.astype('float32'), [3, 11, 7]), ), 0)
func_2737_call = mod.get_global_var('func_2737')
func_2741_call = mutated_mod.get_global_var('func_2741')
var_3910 = relay.var("var_3910", dtype = "float64", shape = (256,))#candidate|3910|(256,)|var|float64
var_3911 = relay.var("var_3911", dtype = "uint8", shape = (18,))#candidate|3911|(18,)|var|uint8
call_3909 = relay.TupleGetItem(func_2737_call(relay.reshape(var_3893.astype('float64'), []), relay.reshape(var_3910.astype('float64'), [16, 4, 4]), relay.reshape(var_3911.astype('uint8'), [18,]), ), 0)
call_3912 = relay.TupleGetItem(func_2741_call(relay.reshape(var_3893.astype('float64'), []), relay.reshape(var_3910.astype('float64'), [16, 4, 4]), relay.reshape(var_3911.astype('uint8'), [18,]), ), 0)
output = relay.Tuple([call_3890,call_3892,var_3893,const_3894,call_3909,var_3910,var_3911,])
output2 = relay.Tuple([call_3891,call_3895,var_3893,const_3894,call_3912,var_3910,var_3911,])
func_3922 = relay.Function([var_3893,var_3910,var_3911,], output)
mod['func_3922'] = func_3922
mod = relay.transform.InferType()(mod)
var_3923 = relay.var("var_3923", dtype = "float32", shape = ())#candidate|3923|()|var|float32
var_3924 = relay.var("var_3924", dtype = "float64", shape = (256,))#candidate|3924|(256,)|var|float64
var_3925 = relay.var("var_3925", dtype = "uint8", shape = (18,))#candidate|3925|(18,)|var|uint8
output = func_3922(var_3923,var_3924,var_3925,)
func_3926 = relay.Function([var_3923,var_3924,var_3925,], output)
mutated_mod['func_3926'] = func_3926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3582_call = mod.get_global_var('func_3582')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_4027 = relay.TupleGetItem(func_3582_call(), 0)
call_4028 = relay.TupleGetItem(func_3583_call(), 0)
func_3750_call = mod.get_global_var('func_3750')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_4032 = func_3750_call()
call_4033 = func_3750_call()
bop_4036 = relay.floor_mod(call_4027.astype('float64'), relay.reshape(call_4032.astype('float64'), relay.shape_of(call_4027))) # shape=(14, 1, 3)
bop_4039 = relay.floor_mod(call_4028.astype('float64'), relay.reshape(call_4033.astype('float64'), relay.shape_of(call_4028))) # shape=(14, 1, 3)
func_3883_call = mod.get_global_var('func_3883')
func_3888_call = mutated_mod.get_global_var('func_3888')
const_4041 = relay.const([4,-5,-8,3,-2,-6,10,4,-1,-4,3,2,-3,-7,6,8,-10,8,-3,-8,3,-5,-4,-8,-1,4,10,-8,-4,5,-9,-9,-7,8,9,4,-8,2,-9,-8,5,-6,6,9,-3,10,-9,-10,8,-6,-4,7,-1,-5,-1,3,-3,-2,5,8,8,-9,-9,-5,6,3,2,-3,9,3,1,8,5,2,5,-7,10,-2,-4,7,8,4,-10,-3,5,10,2,-7,-10,-6,-8,8,10,6,-8,-5,-3,-8,-6,-1,-9,-6,-1,-7,-3,-5,-7,-9,-4,-2,-10,-1,-6,5,2,-4,8,-1,4,-7,-10,-9,7,3,-5,-6,-1,-9,7,-2,1,-9,7,-6,-9,-7,-7,-5,4,-8,4,5,10,-6,-9,6,-4,7,-7,2,9,-3,6,3,-10,1,2,1,4,-6,6,3,7,9,4,-7,1,-9,2,8,-2,5,-9,-5,4,3,3,9,-7,-5,-10,-4,-4,9,-7,-7,-10,-3,9], dtype = "int16")#candidate|4041|(189,)|const|int16
const_4042 = relay.const([[-3,-4,-10],[6,-1,-10],[3,-9,-3],[4,-10,10],[8,-1,-9],[7,-5,2]], dtype = "uint8")#candidate|4042|(6, 3)|const|uint8
const_4043 = relay.const([9.394224,8.244959,6.296125,7.327900,-4.771661,2.448428,7.572094,9.582812,-1.519524,-5.628142,-6.281971,-6.810485,-5.537968,8.800887,7.315445,7.088668,-8.893967,-5.736188,7.618770,-8.236221,9.970859,0.276553,-7.477378,6.117053,2.776669,-9.302546,-8.649444,1.562273,-6.836501,9.949169,-7.000588,7.192718,1.026904,-4.984107,7.331779,6.898885,-1.001553,0.262009,4.364194,1.384353,-2.088214,-2.058593,-9.584680,2.622302,-1.502917,-9.192409,2.945281,5.665528,7.586298,8.004770,7.946736,-3.397301,1.521386,-1.462667,-6.911258,-8.252648,5.534052,-0.189912,-3.564928,4.328798,-8.869908,8.621466,8.186338,-5.918472,-4.202885,5.027919,-0.865723,0.230203,3.527058,-4.163539,3.113238,7.249502,4.790266,5.858371,8.006578,0.481896,-5.713966,-6.968662,6.899261,7.343321,-3.137558,9.674599,-7.991458,0.637847,-9.586037,6.650360,-2.967367,5.139168,-2.585140,8.282950,3.267578,4.217082,8.562746,6.778741,3.165747,-3.667871,9.328076,-9.884545,-9.003696,8.214378,-8.798778,-7.771747,2.823263,-2.183289,-9.541030,-6.119370,-2.629392,-1.955083,3.330523,5.302788,-0.687137,-1.042103,9.256541,8.715842,-0.952559,0.962441,8.130902,2.218472,9.651907,3.209595,1.726380,8.564957,4.395718,0.686028,6.298563,3.201086,-1.754038,5.343579,2.506296,6.680707,2.288896,-7.306859], dtype = "float32")#candidate|4043|(132,)|const|float32
const_4044 = relay.const([[-1.024598],[8.603847],[1.074062],[0.736207],[0.420491],[8.745772],[-2.007696],[-3.596597],[3.786587],[-8.642139],[-9.652956],[1.138434],[2.356082],[-5.594489],[9.304220],[1.697438],[2.117084],[9.732813],[4.385205],[7.793356],[9.059951],[-4.803251],[3.028208],[1.681891],[-7.242258],[1.721424],[-1.918507],[5.660175],[4.024955],[2.033995],[5.104147],[8.950773],[6.255437],[2.675988],[0.666880],[0.836406],[0.802131],[9.599719],[-7.371930],[-0.738265],[-2.199352],[2.477908],[-8.634117],[-3.539723],[1.986347],[3.867396],[-3.563542],[5.007412],[4.451832],[7.038555],[0.655469],[-4.448793],[-4.629345],[1.347266],[-6.788368],[2.415790],[-1.255823],[8.226585],[6.104517],[-4.663847],[6.815170],[0.552878],[-3.699572],[4.402606],[-5.386685],[7.181786],[8.561638],[-5.834517],[0.695465],[7.674405],[2.985253],[-3.847337],[9.341084],[5.036356],[-3.572579],[5.815446],[8.567955],[8.368264],[9.072525],[3.053146],[4.053307],[-8.031362],[-6.034491],[-4.011841],[-8.063478],[-5.485993],[-3.584083],[7.964433],[-1.166216],[-5.729441],[9.300857],[3.165663],[8.764675],[-6.398353],[9.517390],[-2.818886],[-9.166600],[-7.601842],[7.128961],[-5.513555],[-1.049836],[-5.374838],[-5.230071],[-7.212392],[-5.953253],[8.103117],[9.087284],[-8.360129],[1.441634],[4.518500],[-8.656626],[-6.796638],[-7.523421],[-4.163297],[3.067595],[-9.984428],[4.383116],[8.675619],[-8.912578],[-8.608421],[-1.939916],[-1.116205],[-1.875564],[-1.092688],[-1.277584],[6.237851],[2.396857],[1.474656],[-5.375291],[-0.352686],[7.856904],[0.401929],[1.939586],[-4.913522],[-7.776623],[-5.600209],[-6.652357],[-2.808541],[4.753055],[-0.562574],[6.608229],[-5.996400],[5.982792],[-7.834639],[2.974563],[-3.199862],[0.970242],[8.977623],[-1.682895],[6.078364],[0.082352],[1.085125],[-5.265621],[-3.542652],[2.444626],[9.176422],[-2.377691],[1.963355],[-7.861851],[2.925993],[-9.982646],[-2.942900],[8.340200],[-8.180902],[4.305609],[5.002865],[5.138731],[-9.042536],[-2.304772],[5.266886],[3.199320],[-9.263666],[7.521043],[-0.144125],[-8.225665],[3.210143],[0.274673],[-8.771680],[-5.375402],[-4.937405],[-1.662161],[-1.282643],[-4.205428],[-3.507183],[7.928329],[-5.351387],[-0.560534],[3.047685],[2.287862],[9.779100],[7.983985],[-7.165066],[-3.187940],[-6.025195],[-0.403554],[-7.986446],[-7.963006],[-8.054697],[1.887138],[9.387062],[6.883552],[-9.240920],[6.617053],[0.221260],[2.308380],[-5.069146],[4.867991],[2.048825],[7.678002],[-1.455413],[-2.063893],[1.407606],[6.024003],[5.660868],[-0.100179],[-2.221082],[4.818799],[2.924928],[-4.541985],[9.330235],[-1.416221],[-0.965064],[-8.737406],[4.634243],[8.413216],[3.009970],[8.221168],[-4.094674],[5.884549],[0.807243],[2.877333],[5.929193],[-7.773754],[9.644312],[5.295104],[-8.794719],[-8.025489],[9.109115],[-4.439011],[-0.305253],[2.970089],[7.787990],[-3.641441],[5.753191],[-2.242588],[3.559371],[-2.602594],[-7.129483],[-5.614235],[3.227646],[-8.200424],[8.851096],[8.912514],[2.813860],[4.294189],[0.208741],[-3.461576],[8.100519],[2.713241],[-4.201055],[-9.917722],[3.671273],[-3.078355],[0.934416],[9.576453],[-5.944725],[6.809405],[-0.897894],[-1.166778],[-9.948980],[4.092313],[-9.758579],[7.549525],[8.193300],[0.558563],[-9.287256],[5.604979],[-8.453957],[1.683178],[-2.362613],[4.414350],[-2.820783],[-7.373795],[9.532330],[-5.319166],[0.408819],[9.576320],[3.937006],[1.268085],[9.195950],[-8.869027],[-0.113395],[1.767782],[5.601247],[7.666631],[6.582229],[-5.176669],[6.810203],[-9.968090],[-9.548047],[-3.087545],[2.420955],[0.546585],[-4.721594],[6.990742],[1.508913],[9.120335],[2.909971],[3.726556],[5.445273],[7.801873],[2.351838],[-4.679507],[-7.450896],[4.069196],[-7.816131],[-6.419920],[3.545420],[-1.508159],[8.756875],[-2.862388],[-7.837769],[-2.107340],[-3.117551],[-1.916294],[-8.959387],[3.695205],[-9.750576],[-3.801957],[-9.409779],[3.742937],[-9.554486],[-6.140723],[5.728186],[8.365107],[-6.644094],[-0.596766],[-1.301797],[4.593461],[-1.900914],[-4.444025],[8.849304],[-7.625697],[-1.681347],[-6.289858],[-5.948787],[2.778557],[-8.243525],[-6.668389],[-6.570198],[-0.365901],[5.380909],[7.638733],[4.882649],[5.669622],[7.937245],[7.292304],[1.076987],[-5.464569],[-9.527198],[-0.927994],[-3.289196],[5.926771],[-9.066870],[-1.542617],[-8.913611],[8.541805],[0.621384],[0.928821],[9.036035],[-3.072770],[-8.455730],[9.751699],[9.363051],[4.474998],[9.779970],[-4.306276],[4.563243],[-6.684438],[-0.237046],[1.033260],[8.884524],[-3.506787],[6.353400],[7.557016],[-7.296129],[9.932100],[0.907836],[-0.782791],[-7.526473],[4.799627],[-8.417276],[8.251883],[2.856063],[0.529126],[4.708444],[-3.193408],[5.183292],[8.843617],[-9.372542],[-8.557172],[9.239003],[-1.587955],[-4.517824],[7.537983],[-5.069291],[-9.327400],[1.697927],[2.384563],[0.654503],[-6.868171],[7.187759],[2.069729],[7.332352],[0.506954],[-1.832164],[8.803396],[-0.239219],[-0.292011],[-9.608527],[8.252954],[-0.934106],[6.092003],[-5.590050],[3.124009],[3.584047],[-3.540032],[-9.285012],[-4.706896],[-0.534954],[-0.594859],[5.049191],[-7.628606],[4.324475],[-0.914772],[8.439473],[-8.238454],[-6.175900],[8.581632],[-0.471926],[-3.677744],[-3.781896],[-3.975851],[9.538759],[-6.204668],[9.831233],[-0.104684],[-9.688524],[-1.741511],[4.599466],[-1.712543],[-3.209836],[1.868308],[-4.577824],[3.521578],[4.029096],[4.902736],[-5.173410],[-5.454607],[-0.373619],[-6.633284],[3.274957],[-6.341692],[0.318096],[3.531383],[0.211994],[4.754046],[9.438773],[-0.811954],[4.861962],[-5.361271],[-9.325871],[-5.999588],[-2.402307],[-2.685154],[-8.150303],[-9.695948],[1.222531],[5.598097],[2.566676],[6.087374],[-0.308844],[-2.234917],[5.869776],[-5.856608],[8.108507],[0.845975],[-3.474776],[-6.491334],[9.503159],[5.754644],[2.862536],[8.972668],[-7.642279],[-0.414868],[-9.533788],[-5.018261],[-2.277883],[-1.793545],[-3.547046],[4.585898],[4.758714],[8.509979],[-8.871748],[-1.555273],[-9.074411],[7.750113],[9.303546],[-7.075109],[-8.592458],[5.034164],[-6.489070],[8.143998],[5.719113],[7.312643],[-7.390525],[2.851144],[5.168427],[8.380264],[-5.187203],[9.000268],[6.802821],[0.721182],[-5.497770],[-5.252153],[-1.350003],[4.189120],[-2.192595],[4.656057],[-6.847050],[2.420719],[4.031663],[-3.289622],[8.491232],[4.111725],[-3.277271],[-6.115879],[0.278066],[-5.177319],[0.312372],[-9.211949],[6.899504],[-7.087103],[7.781612],[3.275798],[-1.732106],[-4.436676],[8.441224],[5.965267],[5.700993],[-4.632557],[4.195395],[9.477263],[-0.754345],[-6.200774],[8.241756],[9.058103],[-5.085656],[-9.266229],[-8.732539],[1.528906],[-5.951868],[-9.208439],[2.881561],[-4.734899],[-7.131730],[-5.659473],[9.962232],[7.390314],[7.173505],[8.227073],[-3.241043],[6.518107],[-3.938857],[-2.756623],[4.229175],[-2.339449],[-2.927373],[9.875276],[-3.348621],[-8.504930],[3.302248],[-5.291104],[-3.310025],[-3.849511],[-3.231805],[-4.419061],[1.968737],[7.598705],[1.584746],[-8.948370],[-2.486114],[-3.160568],[7.202037],[-9.357778],[2.144840],[7.169455],[7.906596],[8.347032],[4.783391],[2.762459],[6.303636],[-6.401681],[-0.305595],[5.144322],[-0.145369],[-8.393806],[-7.334025],[4.661426],[1.826691],[3.244369],[-4.646242],[6.210929],[-3.839310],[9.811394],[-9.385568],[2.487836],[8.124077],[-1.647330],[-3.870253],[1.661178],[4.566934],[1.380613],[0.462380],[-8.073693],[-0.691436],[6.861083],[-9.172503],[-6.893178],[-0.735476],[-9.245560],[-3.169714],[-7.192578],[8.305971],[6.417607],[-2.042752],[-7.787442],[4.185788],[9.711364],[-6.056700],[7.175287],[3.007769],[8.762122],[6.870411],[6.465826],[-8.717435],[-6.934324],[0.775004],[-7.348418],[-1.275957],[-3.514825],[-8.108704],[-6.463388],[-5.594395],[-9.889392],[7.342208],[9.996783],[6.635264],[-4.657202],[-4.362520],[-1.383468],[0.122935],[-7.812152],[1.877684],[-5.525685],[-2.444243],[9.891012],[3.616916],[-4.466564],[7.165002],[7.841582],[-1.147636],[-4.335283],[0.928905],[-0.767175],[-6.717702],[-0.078138],[-1.893319],[-5.618359],[1.279789],[3.425214],[-6.885553],[2.545668],[-4.557484],[5.498491],[-1.675561],[6.949714],[-7.946821],[-8.814819],[-7.787434],[4.879572],[9.328287],[6.984930],[-0.151451],[-4.951538],[-4.882504],[-9.567136],[-1.947321],[-5.140780],[7.741839],[-6.871021],[-9.497832],[6.847265],[5.803794],[3.716331],[-7.196471],[-3.182379],[-4.755860],[4.670538],[-7.683060],[4.336695],[1.576264],[5.625123],[9.607288],[8.819981],[1.733325],[-4.817981],[3.361360],[-5.358457],[-4.015835],[-4.462719],[6.902831],[-9.842106],[-1.910909],[-0.316177],[1.157279],[0.151748],[2.360908],[-6.292339],[5.307717],[-4.528607],[-9.060215],[-8.202899],[-2.887467],[-7.904226],[-6.048412],[0.868847],[-7.030437],[-6.130732],[-9.020697],[6.411048],[-5.554778],[-4.114155],[2.240029],[-0.922456],[-7.806787],[7.558588],[7.324914],[-8.594143],[9.524721],[-2.787665],[-4.350294],[0.671749],[-5.607636],[0.607317],[-2.515745],[-2.509132],[-1.805319],[0.081520],[-6.463587],[-8.980448],[-9.437202],[2.469355],[9.762963],[5.642186],[-1.820311],[5.635550],[6.407273],[0.060878],[-0.466456],[-6.505977],[0.327983],[3.389925],[-3.017970],[2.503669],[-8.544746],[5.945527],[-3.686196],[-2.727632],[2.240939],[-8.553267],[-0.146124],[-1.351592],[-2.096132],[7.506235],[-9.467541],[9.852493],[-2.208527],[8.225055],[0.860716],[3.403401],[-4.565460]], dtype = "float32")#candidate|4044|(792, 1)|const|float32
call_4040 = relay.TupleGetItem(func_3883_call(relay.reshape(const_4041.astype('int16'), [189,]), relay.reshape(const_4042.astype('uint8'), [18,]), relay.reshape(const_4043.astype('float32'), [1, 132]), relay.reshape(const_4044.astype('float32'), [792,]), ), 6)
call_4045 = relay.TupleGetItem(func_3888_call(relay.reshape(const_4041.astype('int16'), [189,]), relay.reshape(const_4042.astype('uint8'), [18,]), relay.reshape(const_4043.astype('float32'), [1, 132]), relay.reshape(const_4044.astype('float32'), [792,]), ), 6)
bop_4047 = relay.less_equal(const_4044.astype('bool'), call_4040.astype('bool')) # shape=(792, 18)
bop_4050 = relay.less_equal(const_4044.astype('bool'), call_4045.astype('bool')) # shape=(792, 18)
uop_4052 = relay.rsqrt(call_4027.astype('float32')) # shape=(14, 1, 3)
uop_4054 = relay.rsqrt(call_4028.astype('float32')) # shape=(14, 1, 3)
output = relay.Tuple([bop_4036,const_4041,const_4042,const_4043,bop_4047,uop_4052,])
output2 = relay.Tuple([bop_4039,const_4041,const_4042,const_4043,bop_4050,uop_4054,])
func_4055 = relay.Function([], output)
mod['func_4055'] = func_4055
mod = relay.transform.InferType()(mod)
output = func_4055()
func_4056 = relay.Function([], output)
mutated_mod['func_4056'] = func_4056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4055_call = mod.get_global_var('func_4055')
func_4056_call = mutated_mod.get_global_var('func_4056')
call_4092 = relay.TupleGetItem(func_4055_call(), 4)
call_4093 = relay.TupleGetItem(func_4056_call(), 4)
var_4103 = relay.var("var_4103", dtype = "bool", shape = (792, 18))#candidate|4103|(792, 18)|var|bool
bop_4104 = relay.left_shift(call_4092.astype('int8'), relay.reshape(var_4103.astype('int8'), relay.shape_of(call_4092))) # shape=(792, 18)
bop_4107 = relay.left_shift(call_4093.astype('int8'), relay.reshape(var_4103.astype('int8'), relay.shape_of(call_4093))) # shape=(792, 18)
bop_4115 = relay.bitwise_xor(bop_4104.astype('uint32'), relay.reshape(call_4092.astype('uint32'), relay.shape_of(bop_4104))) # shape=(792, 18)
bop_4118 = relay.bitwise_xor(bop_4107.astype('uint32'), relay.reshape(call_4093.astype('uint32'), relay.shape_of(bop_4107))) # shape=(792, 18)
output = relay.Tuple([bop_4115,])
output2 = relay.Tuple([bop_4118,])
func_4124 = relay.Function([var_4103,], output)
mod['func_4124'] = func_4124
mod = relay.transform.InferType()(mod)
var_4125 = relay.var("var_4125", dtype = "bool", shape = (792, 18))#candidate|4125|(792, 18)|var|bool
output = func_4124(var_4125)
func_4126 = relay.Function([var_4125], output)
mutated_mod['func_4126'] = func_4126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3750_call = mod.get_global_var('func_3750')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_4173 = func_3750_call()
call_4174 = func_3750_call()
const_4175 = relay.const([[[-2.303683,-9.687448,2.038156],[6.098589,3.043317,5.648488],[-6.875251,-3.635660,8.887796],[-1.198340,2.769762,0.327593],[-6.049819,7.985455,9.581738],[-2.043194,-5.207141,2.571353],[-0.463276,2.747039,1.914741]],[[-3.285887,-3.857311,7.443933],[6.113091,4.980651,-2.996223],[-8.788243,-2.916494,3.690596],[-2.574300,3.669628,-8.185828],[-9.735121,-7.111138,-1.845613],[-6.082356,4.823975,-2.426337],[0.268592,7.337823,-6.057492]],[[7.613315,-1.371287,-9.629897],[7.380535,-2.798314,-9.626178],[3.681552,1.596357,-1.548963],[-6.164184,-9.111570,3.241897],[-3.316275,-7.648914,5.125318],[9.296350,7.010928,-4.524896],[6.317209,-5.070506,3.504561]],[[8.075787,-7.060282,-4.291415],[-4.615824,6.082895,-6.955492],[6.203258,3.555351,-8.982994],[6.386735,7.184722,-5.376620],[-5.190881,8.304125,3.588219],[6.218494,-7.902026,5.331074],[3.339046,5.914289,-8.092099]],[[1.096741,-0.715895,-8.101665],[-9.325442,-1.163272,-8.724021],[9.921729,1.098810,-1.141739],[7.451878,5.491586,8.096384],[-9.431813,-4.755785,6.021200],[-4.972249,8.755845,-2.625487],[9.258217,8.323754,-6.170304]],[[-0.823169,-8.505654,9.342264],[-1.211514,4.098676,-2.589718],[-0.364069,5.081094,-2.129079],[-6.294179,9.864308,3.080781],[8.801013,-4.657332,-4.038858],[-1.654351,9.646324,-4.876783],[3.902086,1.340578,-8.085601]],[[3.587958,1.464108,-4.793981],[-4.265340,-2.361407,-6.375210],[5.230160,-3.546278,-8.559800],[-0.388036,-1.757491,5.992753],[-4.414181,1.773051,6.648090],[8.734871,1.838272,1.688443],[-5.474636,-1.531540,-4.919333]],[[-2.559610,-1.900301,5.626597],[-9.160791,1.417263,6.793758],[1.987317,-7.044094,-6.970268],[6.982239,-2.882377,-6.284952],[-4.562616,3.593519,4.920539],[4.421258,2.405581,-4.779855],[-4.592834,4.189348,0.534318]],[[-1.143244,-0.024862,-1.481161],[5.935892,9.685989,-7.572357],[8.613693,-0.045659,1.029490],[-2.081433,-0.478899,-6.561911],[1.644837,1.379342,-8.401115],[7.391966,8.823459,7.582694],[-2.073555,2.743616,6.057479]],[[0.419941,-2.511819,6.556431],[0.056090,-2.218722,-1.566436],[1.769192,4.053274,-5.922778],[1.664678,2.051576,0.337207],[-3.904922,5.061730,9.472312],[8.346861,8.951281,5.654605],[8.610709,1.717611,-6.723694]],[[-0.257419,5.075104,-7.551982],[-1.706667,8.321142,-4.737579],[-0.646876,2.284775,3.571333],[-6.447650,5.285231,-1.085001],[9.520562,-8.454331,-8.967354],[-5.704651,-3.661684,-4.594319],[2.930032,-4.807360,-9.258012]],[[4.187360,-7.193612,-2.049025],[-0.188649,-7.659006,4.901432],[-6.239250,5.492094,2.745854],[5.303827,-5.022904,3.858408],[-0.547662,0.267691,9.333353],[0.766779,6.731481,9.519408],[9.254471,-5.402403,-0.603248]],[[2.088636,-5.962321,6.674661],[-2.825060,7.166836,-4.476721],[5.000158,0.486011,9.505699],[9.426483,-8.626548,-7.413751],[-0.954471,1.912474,-7.229724],[-1.490435,-2.633702,-8.291287],[-2.234191,-3.727791,5.017801]],[[-9.656493,9.584188,-1.774871],[2.075769,6.157202,-3.396492],[9.865733,-3.338015,6.911165],[-0.574792,-3.435931,8.893765],[-9.773927,0.504142,5.080581],[9.005496,0.690505,-5.369755],[-2.975629,1.380285,1.712209]]], dtype = "float64")#candidate|4175|(14, 7, 3)|const|float64
bop_4176 = relay.less_equal(call_4173.astype('bool'), const_4175.astype('bool')) # shape=(14, 7, 3)
bop_4179 = relay.less_equal(call_4174.astype('bool'), const_4175.astype('bool')) # shape=(14, 7, 3)
uop_4187 = relay.sinh(bop_4176.astype('float32')) # shape=(14, 7, 3)
uop_4189 = relay.sinh(bop_4179.astype('float32')) # shape=(14, 7, 3)
output = relay.Tuple([uop_4187,])
output2 = relay.Tuple([uop_4189,])
func_4193 = relay.Function([], output)
mod['func_4193'] = func_4193
mod = relay.transform.InferType()(mod)
mutated_mod['func_4193'] = func_4193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4193_call = mutated_mod.get_global_var('func_4193')
call_4194 = func_4193_call()
output = call_4194
func_4195 = relay.Function([], output)
mutated_mod['func_4195'] = func_4195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4055_call = mod.get_global_var('func_4055')
func_4056_call = mutated_mod.get_global_var('func_4056')
call_4206 = relay.TupleGetItem(func_4055_call(), 1)
call_4207 = relay.TupleGetItem(func_4056_call(), 1)
func_3685_call = mod.get_global_var('func_3685')
func_3688_call = mutated_mod.get_global_var('func_3688')
var_4209 = relay.var("var_4209", dtype = "float32", shape = (1300, 1))#candidate|4209|(1300, 1)|var|float32
call_4208 = relay.TupleGetItem(func_3685_call(relay.reshape(var_4209.astype('float32'), [1300,])), 2)
call_4210 = relay.TupleGetItem(func_3688_call(relay.reshape(var_4209.astype('float32'), [1300,])), 2)
bop_4211 = relay.multiply(call_4206.astype('uint64'), var_4209.astype('uint64')) # shape=(1300, 189)
bop_4214 = relay.multiply(call_4207.astype('uint64'), var_4209.astype('uint64')) # shape=(1300, 189)
uop_4220 = relay.log10(bop_4211.astype('float64')) # shape=(1300, 189)
uop_4222 = relay.log10(bop_4214.astype('float64')) # shape=(1300, 189)
bop_4224 = relay.logical_xor(uop_4220.astype('int64'), var_4209.astype('int64')) # shape=(1300, 189)
bop_4227 = relay.logical_xor(uop_4222.astype('int64'), var_4209.astype('int64')) # shape=(1300, 189)
bop_4230 = relay.mod(bop_4224.astype('float64'), relay.reshape(bop_4211.astype('float64'), relay.shape_of(bop_4224))) # shape=(1300, 189)
bop_4233 = relay.mod(bop_4227.astype('float64'), relay.reshape(bop_4214.astype('float64'), relay.shape_of(bop_4227))) # shape=(1300, 189)
uop_4238 = relay.cosh(call_4206.astype('float32')) # shape=(189,)
uop_4240 = relay.cosh(call_4207.astype('float32')) # shape=(189,)
uop_4247 = relay.sin(var_4209.astype('float32')) # shape=(1300, 1)
bop_4254 = relay.minimum(bop_4211.astype('uint8'), uop_4247.astype('uint8')) # shape=(1300, 189)
bop_4257 = relay.minimum(bop_4214.astype('uint8'), uop_4247.astype('uint8')) # shape=(1300, 189)
func_656_call = mod.get_global_var('func_656')
func_660_call = mutated_mod.get_global_var('func_660')
const_4282 = relay.const([-0.600845,-5.132510,4.507881,9.956487,1.328142,-9.495756,5.897266,2.552654,-2.699217,0.632647,7.676642,-5.435899,-0.627468,-1.596020,9.382896,-1.060587,4.734969,2.926271,9.419298,1.572486,-4.503337,-8.678359,0.982205,6.818352,4.125815,2.606611,-8.177922,-3.325595,-5.856774,-9.764851,-6.357244,-9.903748,6.199774,1.249341,-8.221616,5.825945,-8.463721,5.892609,-9.335426,8.852244,7.334698,-1.476782,-8.295490,-1.988493,8.792459,-7.832699,6.775412,8.716786,-8.616405,-0.104035,-4.784974,1.502967,4.691396,-6.213214,6.941126,6.856688,-4.375989,-5.354751,-0.925839,8.260125,-8.016453,-1.133808,-0.713841,-2.187161,-0.195680,-8.878431,9.189252,1.910617,-2.904064,-1.447117,6.439859,-0.620138,9.327412,-2.197604,-0.300686,8.404023,-6.820873,-0.627845,-9.123466,2.942943,7.299799,3.540594,-2.170756,-7.618543,-6.995093,-0.143485,-0.082606,5.282370,-6.793295,-7.368788,4.482016,5.404768,4.634841,5.192165,-0.542521,-7.926248,-6.525544,-8.577709,-3.883628,5.125318,1.925191,-5.422508,-4.312331,8.386474,1.165259,9.531435,-5.730347,-3.204397,3.155248,1.954696,0.844824,1.257538,3.683244,-8.728458,-2.651920,-8.764404,8.599929,-2.930405,-1.905160,-4.048876,6.906043,-0.985890,-1.368326,8.203680,-8.870251,-4.325963,-8.955990,2.902405,3.275616,7.209871,6.710168,-9.684823], dtype = "float32")#candidate|4282|(132,)|const|float32
var_4283 = relay.var("var_4283", dtype = "float32", shape = (792,))#candidate|4283|(792,)|var|float32
call_4281 = func_656_call(relay.reshape(const_4282.astype('float32'), [12, 11, 1]), relay.reshape(var_4283.astype('float32'), [12, 11, 6]), )
call_4284 = func_656_call(relay.reshape(const_4282.astype('float32'), [12, 11, 1]), relay.reshape(var_4283.astype('float32'), [12, 11, 6]), )
output = relay.Tuple([call_4208,bop_4230,uop_4238,bop_4254,call_4281,const_4282,var_4283,])
output2 = relay.Tuple([call_4210,bop_4233,uop_4240,bop_4257,call_4284,const_4282,var_4283,])
func_4289 = relay.Function([var_4209,var_4283,], output)
mod['func_4289'] = func_4289
mod = relay.transform.InferType()(mod)
mutated_mod['func_4289'] = func_4289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4289_call = mutated_mod.get_global_var('func_4289')
var_4291 = relay.var("var_4291", dtype = "float32", shape = (1300, 1))#candidate|4291|(1300, 1)|var|float32
var_4292 = relay.var("var_4292", dtype = "float32", shape = (792,))#candidate|4292|(792,)|var|float32
call_4290 = func_4289_call(var_4291,var_4292,)
output = call_4290
func_4293 = relay.Function([var_4291,var_4292,], output)
mutated_mod['func_4293'] = func_4293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4055_call = mod.get_global_var('func_4055')
func_4056_call = mutated_mod.get_global_var('func_4056')
call_4343 = relay.TupleGetItem(func_4055_call(), 2)
call_4344 = relay.TupleGetItem(func_4056_call(), 2)
func_2662_call = mod.get_global_var('func_2662')
func_2666_call = mutated_mod.get_global_var('func_2666')
var_4361 = relay.var("var_4361", dtype = "float32", shape = (650, 2))#candidate|4361|(650, 2)|var|float32
call_4360 = relay.TupleGetItem(func_2662_call(relay.reshape(var_4361.astype('float32'), [10, 10, 13]), relay.reshape(var_4361.astype('float32'), [10, 10, 13]), ), 0)
call_4362 = relay.TupleGetItem(func_2666_call(relay.reshape(var_4361.astype('float32'), [10, 10, 13]), relay.reshape(var_4361.astype('float32'), [10, 10, 13]), ), 0)
output = relay.Tuple([call_4343,call_4360,var_4361,])
output2 = relay.Tuple([call_4344,call_4362,var_4361,])
func_4366 = relay.Function([var_4361,], output)
mod['func_4366'] = func_4366
mod = relay.transform.InferType()(mod)
var_4367 = relay.var("var_4367", dtype = "float32", shape = (650, 2))#candidate|4367|(650, 2)|var|float32
output = func_4366(var_4367)
func_4368 = relay.Function([var_4367], output)
mutated_mod['func_4368'] = func_4368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3582_call = mod.get_global_var('func_3582')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_4381 = relay.TupleGetItem(func_3582_call(), 0)
call_4382 = relay.TupleGetItem(func_3583_call(), 0)
func_4193_call = mod.get_global_var('func_4193')
func_4195_call = mutated_mod.get_global_var('func_4195')
call_4390 = relay.TupleGetItem(func_4193_call(), 0)
call_4391 = relay.TupleGetItem(func_4195_call(), 0)
output = relay.Tuple([call_4381,call_4390,])
output2 = relay.Tuple([call_4382,call_4391,])
func_4409 = relay.Function([], output)
mod['func_4409'] = func_4409
mod = relay.transform.InferType()(mod)
output = func_4409()
func_4410 = relay.Function([], output)
mutated_mod['func_4410'] = func_4410
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4420 = relay.const([[[-4,-9,7,3],[-2,6,5,9],[7,4,7,9],[10,-10,1,-10],[-8,-6,-4,-8],[-1,10,-10,-9],[-7,8,10,4],[7,-2,-2,3],[-1,7,-1,6],[1,-7,6,-5],[10,-7,-1,10],[-4,6,7,8],[-10,5,-9,-3],[-6,-9,-8,-5],[8,-9,-4,-8]],[[-3,4,6,8],[-6,9,-6,6],[-3,-6,9,-1],[3,7,9,6],[2,2,4,3],[-6,5,-5,6],[4,-10,1,-2],[-1,4,6,4],[3,-5,-7,-7],[1,5,-3,-5],[-10,1,-6,10],[4,1,-5,8],[-10,-5,1,8],[-3,9,1,-2],[9,-6,8,6]],[[9,4,10,-4],[-4,7,-2,-7],[-7,1,-2,-1],[-8,-8,1,10],[1,6,5,2],[-10,5,4,-4],[-2,-9,10,3],[-6,-8,-5,9],[-4,7,-4,1],[8,5,-1,10],[-6,6,-10,-7],[2,-3,4,2],[8,9,10,7],[7,-7,1,-10],[8,-6,-4,5]],[[8,2,-2,10],[-8,4,-9,4],[-3,4,2,-4],[9,1,10,-9],[5,-2,10,9],[-3,3,-7,9],[2,7,-7,-6],[-8,-8,-2,9],[-10,6,-5,7],[-1,-9,9,-10],[1,-5,-6,-5],[-8,5,1,9],[6,-1,-4,6],[-9,4,7,9],[1,8,-6,2]],[[-5,-4,-2,8],[-10,-7,-9,10],[2,-8,-9,-6],[-10,8,7,-10],[6,9,-8,-5],[9,-5,-7,-8],[10,-7,-2,9],[-7,-10,6,7],[5,-1,-2,-3],[6,-9,4,1],[3,5,1,7],[-3,-2,-6,-1],[4,6,-6,-9],[9,-7,-7,-9],[6,-8,-9,5]],[[-4,1,6,3],[-3,10,-7,6],[-10,1,1,10],[5,4,-4,6],[-4,10,-8,-3],[-9,4,3,4],[-3,3,-4,-3],[2,2,4,4],[4,9,-6,-5],[-7,-2,9,6],[-10,7,-3,-2],[-8,2,10,-10],[-1,-6,-5,-1],[10,-5,-9,10],[-1,3,7,-8]],[[8,7,-8,-4],[-7,-6,-1,-5],[10,9,-10,-1],[6,-4,7,-10],[-3,-5,-3,10],[9,-2,-2,-3],[-8,2,-1,-10],[6,4,7,-8],[-8,-3,-2,-10],[-6,-3,-1,1],[-9,1,7,-1],[-7,-4,-6,5],[7,-4,1,-2],[-6,5,3,9],[10,-4,-1,-8]]], dtype = "int64")#candidate|4420|(7, 15, 4)|const|int64
const_4421 = relay.const([[[3,-4,-9,7],[-1,7,9,1],[1,-7,-9,7],[3,-2,2,-6],[1,2,-8,-7],[-5,-2,-10,-10],[-2,-7,-7,3],[-8,10,2,-4],[7,-4,-6,3],[5,-6,10,-6],[-4,5,7,-3],[2,6,-9,-8],[8,-1,-3,8],[2,5,-1,-4],[3,-8,9,7]],[[5,5,6,2],[7,10,2,10],[-9,3,3,7],[-9,6,4,-9],[-9,-5,-10,-8],[-4,7,-4,7],[-1,7,2,-1],[7,-10,3,2],[-6,6,7,10],[-2,-5,-3,2],[-7,-9,-3,9],[-8,-10,8,10],[2,7,9,1],[6,10,10,-7],[-2,-5,7,-4]],[[-3,-3,-8,-7],[10,-10,-3,2],[6,-3,5,3],[-4,-2,-4,-5],[1,-10,-4,1],[-2,5,-1,9],[9,6,-9,9],[9,8,8,-2],[3,9,-10,-1],[1,-10,-3,10],[10,-3,-6,6],[-6,9,-8,-2],[-5,-8,1,-7],[-7,5,-7,-1],[-2,8,1,-3]],[[6,2,5,7],[-6,2,6,10],[-8,5,-1,-4],[3,2,4,10],[1,6,-5,-3],[7,8,7,-9],[4,-4,-10,-1],[8,6,1,4],[7,8,-2,-5],[-8,-4,-5,-2],[9,-6,-4,-4],[2,-4,8,-7],[-9,-9,5,2],[10,-8,3,4],[8,2,6,-4]],[[-6,1,8,8],[-2,10,4,-1],[-2,-7,-1,-6],[10,-10,-4,7],[5,-5,-8,2],[-2,7,4,10],[7,10,10,-6],[4,9,2,-9],[5,-10,6,5],[4,-4,10,-6],[-1,4,2,4],[-5,5,10,-4],[7,10,-8,1],[-6,2,-1,4],[5,-5,-7,-3]],[[9,-10,4,-6],[8,4,10,9],[2,-6,10,-7],[10,-1,9,1],[-4,9,-7,-6],[-10,2,-8,5],[-10,5,1,-4],[5,9,-9,-4],[-3,10,-9,-4],[9,-8,-5,-8],[-6,-7,-6,1],[4,5,-10,6],[-3,1,3,2],[1,8,7,-3],[1,-3,10,-6]],[[1,8,2,5],[2,-9,1,-6],[3,10,-2,-4],[-4,-7,10,9],[-7,-5,2,-4],[5,-9,7,1],[-3,-2,6,7],[-3,-4,-2,-6],[-1,7,10,10],[-7,4,-6,3],[-7,-2,1,3],[-6,8,-2,-6],[-7,6,6,-3],[-5,-6,1,8],[-6,-1,4,2]]], dtype = "int64")#candidate|4421|(7, 15, 4)|const|int64
bop_4422 = relay.minimum(const_4420.astype('int64'), relay.reshape(const_4421.astype('int64'), relay.shape_of(const_4420))) # shape=(7, 15, 4)
func_459_call = mod.get_global_var('func_459')
func_463_call = mutated_mod.get_global_var('func_463')
const_4437 = relay.const([False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True], dtype = "bool")#candidate|4437|(168,)|const|bool
call_4436 = func_459_call(relay.reshape(const_4437.astype('bool'), [2, 7, 12]), relay.reshape(const_4437.astype('bool'), [2, 7, 12]), )
call_4438 = func_459_call(relay.reshape(const_4437.astype('bool'), [2, 7, 12]), relay.reshape(const_4437.astype('bool'), [2, 7, 12]), )
func_3582_call = mod.get_global_var('func_3582')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_4439 = relay.TupleGetItem(func_3582_call(), 0)
call_4440 = relay.TupleGetItem(func_3583_call(), 0)
func_3480_call = mod.get_global_var('func_3480')
func_3484_call = mutated_mod.get_global_var('func_3484')
const_4459 = relay.const([5,2,-8,-6,4,-4,-10,5,-9,1,-6,2,8,-6,-6,-3,-2,-1,-9,9,-10,2,-9,3,-10,2,7,9,-7,-6,-3,6,-3,-8,-5,-8,1,-6,8,2,6,-6,-9,8,-8,-1,-3,-8,5,1,-4,6,8,8,5,-6,4,-4,8,1,8,9,-10,-10,-7,-4,9,-6,5,-4,4,1,-5,2,-9,-9,4,8,9,8,8,-6,-3,-5,8,7,3,-3,3,2,-8,-8,-1,8,-6,-5,-8,1,-5,8,-8,-9,-2,-9,-8,8,-2,-10,-3,-4,-5,-3,-1,-4,5,-4,-8,-5,-7,-7,3,-3,-10,-9,-3,3,-1,-3,-3,1,-1,-2,-9,-9,-9,-3,2,9,-1,8,-1,-4,-7,7,5,9,-4,-7,6,-1,-4,9,-10,-9,-9,5,-8,-2,-7,7,6,10,-7,-7,6,-1,-2,-8,1,3,4,9,8,-9,10,-7,-3,10,-7,-6,5,-3,8,-1,-9,-10,-4,-7,10], dtype = "int16")#candidate|4459|(189,)|const|int16
call_4458 = relay.TupleGetItem(func_3480_call(relay.reshape(const_4459.astype('int16'), [9, 3, 7]), relay.reshape(const_4437.astype('bool'), [1, 168]), ), 3)
call_4460 = relay.TupleGetItem(func_3484_call(relay.reshape(const_4459.astype('int16'), [9, 3, 7]), relay.reshape(const_4437.astype('bool'), [1, 168]), ), 3)
bop_4468 = relay.greater(call_4458.astype('bool'), relay.reshape(call_4436.astype('bool'), relay.shape_of(call_4458))) # shape=(2, 7, 12)
bop_4471 = relay.greater(call_4460.astype('bool'), relay.reshape(call_4438.astype('bool'), relay.shape_of(call_4460))) # shape=(2, 7, 12)
const_4473 = relay.const([-1,7,-8,1,1,-5,6,-3,-8,3,7,-7,-9,-7,-8,-6,-6,5,9,7,5,2,-9,8,-8,-7,-2,-3,9,-7,7,-8,-8,6,-8,-7,4,2,6,1,4,-10,-4,1,-5,2,2,6,4,7,-4,5,-6,3,9,-8,4,3,-3,1,3,-1,-5,4,10,1,10,3,-3,9,-10,6,7,2,-4,-7,8,1,-6,3,8,9,8,-5,-8,-2,3,4,9,-9,9,-7,5,-10,-3,-8,-5,-1,7,-3,-4,5,4,9,-5,6,6,3,-9,6,-6,-5,9,5,5,3,6,7,7,-3,4,-6,-3,6,2,6,-6,10,-10,-3,4,2,-6,-9,-5,-7,2,-3,-2,8,3,-1,-8,4,5,-1,-5,-8,4,-6,-10,1,-8,-8,3,4,2,3,-8,8,-6,4,-3,-2,8,7,-3,-3,-3,1,8,2,-5,-10,3,6,-8,-9,-3,-10,-3,2,-5,6,3,-4,5,1,-10], dtype = "int16")#candidate|4473|(189,)|const|int16
bop_4474 = relay.mod(const_4459.astype('float32'), relay.reshape(const_4473.astype('float32'), relay.shape_of(const_4459))) # shape=(189,)
output = relay.Tuple([bop_4422,const_4437,call_4439,bop_4468,bop_4474,])
output2 = relay.Tuple([bop_4422,const_4437,call_4440,bop_4471,bop_4474,])
func_4492 = relay.Function([], output)
mod['func_4492'] = func_4492
mod = relay.transform.InferType()(mod)
mutated_mod['func_4492'] = func_4492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4492_call = mutated_mod.get_global_var('func_4492')
call_4493 = func_4492_call()
output = call_4493
func_4494 = relay.Function([], output)
mutated_mod['func_4494'] = func_4494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4492_call = mod.get_global_var('func_4492')
func_4494_call = mutated_mod.get_global_var('func_4494')
call_4498 = relay.TupleGetItem(func_4492_call(), 2)
call_4499 = relay.TupleGetItem(func_4494_call(), 2)
func_459_call = mod.get_global_var('func_459')
func_463_call = mutated_mod.get_global_var('func_463')
var_4501 = relay.var("var_4501", dtype = "bool", shape = (42, 4))#candidate|4501|(42, 4)|var|bool
call_4500 = func_459_call(relay.reshape(var_4501.astype('bool'), [2, 7, 12]), relay.reshape(var_4501.astype('bool'), [2, 7, 12]), )
call_4502 = func_459_call(relay.reshape(var_4501.astype('bool'), [2, 7, 12]), relay.reshape(var_4501.astype('bool'), [2, 7, 12]), )
output = relay.Tuple([call_4498,call_4500,var_4501,])
output2 = relay.Tuple([call_4499,call_4502,var_4501,])
func_4509 = relay.Function([var_4501,], output)
mod['func_4509'] = func_4509
mod = relay.transform.InferType()(mod)
mutated_mod['func_4509'] = func_4509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4510 = relay.var("var_4510", dtype = "bool", shape = (42, 4))#candidate|4510|(42, 4)|var|bool
func_4509_call = mutated_mod.get_global_var('func_4509')
call_4511 = func_4509_call(var_4510)
output = call_4511
func_4512 = relay.Function([var_4510], output)
mutated_mod['func_4512'] = func_4512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4055_call = mod.get_global_var('func_4055')
func_4056_call = mutated_mod.get_global_var('func_4056')
call_4552 = relay.TupleGetItem(func_4055_call(), 3)
call_4553 = relay.TupleGetItem(func_4056_call(), 3)
func_4366_call = mod.get_global_var('func_4366')
func_4368_call = mutated_mod.get_global_var('func_4368')
const_4562 = relay.const([-0.922042,-7.340374,-9.218121,-4.007008,-8.588777,-4.780608,-1.329879,-2.396838,3.791822,0.397192,-9.246807,-5.609455,-0.108312,-3.047786,0.946944,-6.945860,-0.969871,4.568661,-6.444717,-0.192455,2.128420,-8.044602,-7.437695,-8.254881,-8.410891,-2.208416,-3.632172,-7.866740,-6.393630,-2.187221,4.023955,-8.872906,4.306216,-1.602622,5.804683,-8.147215,5.017523,-3.184598,2.768107,5.409602,-3.081792,-6.258468,-0.860162,0.389214,5.381446,-8.746616,-9.300181,1.404599,2.398877,-6.389295,-7.266865,6.463868,3.692842,8.271718,-8.790604,-4.573999,-6.198151,6.648403,5.927896,-9.108487,-8.124188,2.088789,1.586753,-3.895599,0.268766,4.874729,8.909196,6.644126,4.611414,2.959953,-5.261460,-6.574758,7.478632,6.477091,3.061582,7.766271,5.247524,-6.355625,4.572221,0.319507,1.205003,2.083479,7.194498,-2.722137,6.787613,6.740082,2.181685,7.673907,5.720403,-6.965172,-7.004656,9.144058,-5.395360,-1.461662,-2.436654,-2.157677,-2.231108,1.810457,7.073426,-0.957689,7.390510,-4.428057,-3.855861,2.231808,-5.992028,-7.984955,-9.045839,-6.061483,6.661539,-7.021285,-6.637140,-0.079116,-5.801993,4.845872,6.127697,1.372258,7.369869,0.641811,9.780627,4.271751,-4.153166,-8.869529,7.008996,-1.241245,1.649995,6.118866,0.307423,-1.951985,5.921955,4.532121,-9.357796,5.309271,-1.901207,6.254987,-0.847133,-4.493789,-5.535807,5.850581,5.291191,-2.933221,-1.811902,4.478367,0.168172,-5.183349,1.134423,0.403348,-8.384809,4.823829,-2.244835,-3.293101,7.009646,1.208103,6.207164,-3.753972,-0.504451,6.953177,-9.077783,0.206783,-8.098964,-0.613321,7.813165,5.760278,-2.034622,6.447584,0.958769,7.606559,-3.947715,-7.741468,1.690771,-0.259638,-7.760684,2.854884,-7.031987,-8.852466,-3.167394,-9.776367,6.129744,3.671836,-6.329682,-5.611849,-2.490533,1.306466,-5.452143,-3.835726,-8.481300,-0.256663,-6.430141,2.553235,-7.010415,9.327922,-0.560340,-3.118463,-9.677123,0.567794,-0.531524,-3.045721,-6.279001,5.075999,-0.429792,-7.318354,9.823201,6.533742,-0.712551,-5.826457,-8.155854,2.351826,-9.460717,-5.757834,2.211070,3.984713,9.248667,-0.552217,5.180675,1.253235,0.936118,-3.012643,-5.643154,-8.812557,-7.430172,6.877512,6.624593,0.878762,-9.935653,-3.039550,-0.642358,-9.289324,6.161241,6.030378,-0.523545,-9.940089,-6.891138,-3.744675,-0.541915,-8.808346,-8.269936,-4.138724,-5.234452,4.095835,5.340947,5.349776,5.477830,-8.803918,-8.137297,-9.398071,-3.036141,0.988353,6.289164,3.386835,-4.050716,8.819795,1.857629,-0.757331,0.027561,-1.870925,0.566555,-7.339512,9.815731,-7.425781,-8.549697,6.460242,1.966204,-4.078773,-3.328762,4.627795,5.457586,5.223020,-9.328033,-7.597530,0.586736,-4.871377,-8.853511,-5.170244,6.962909,-9.640271,3.456896,-6.187580,-0.830314,6.046486,-5.937590,9.268328,8.870775,-7.517495,3.221230,-5.821387,-7.035519,5.562924,1.323267,-4.595967,-7.424955,4.590753,-7.693263,2.990697,-7.282829,-7.290395,6.641961,-8.810331,-8.901040,-4.539644,3.520651,1.105541,1.381745,7.604530,-7.237199,-3.296024,-9.699155,-4.989924,0.056673,8.186127,-7.819484,7.327973,2.260839,4.050862,-4.526562,5.626751,-8.323085,2.189853,-5.212214,-8.349713,5.120932,4.200832,-2.351284,-2.387081,7.007020,9.182032,0.960543,0.943961,-0.173442,3.478154,-7.851103,2.852497,5.780771,7.880784,7.137516,-4.368941,-6.825906,-5.088873,1.604271,-0.971840,-6.900506,-0.508698,-6.986920,-9.191548,-9.372236,-8.060840,0.980317,3.137865,-9.329770,-3.789475,4.240558,-1.959422,-9.510526,-3.679765,-9.055765,2.277878,5.104434,-0.049335,7.749542,-3.553904,-6.395584,6.665164,-8.189149,-6.903818,2.998941,-9.007883,4.353391,-4.401069,4.443804,9.182388,0.412589,-2.670897,0.680415,9.801670,-9.535008,-7.832076,-7.700967,-9.303689,8.460048,9.097363,2.679425,9.592988,6.974674,-9.420227,-2.106747,-0.797046,-1.512461,-4.744688,4.723232,6.184453,-5.966020,8.087148,6.663563,4.130087,-4.137822,7.436865,9.055291,8.881796,-2.394560,0.531602,8.241290,-0.646875,3.857461,9.389803,-6.719287,-8.581992,7.675831,0.212877,0.723185,7.615749,-8.540997,2.273758,7.051744,-8.155267,-2.581909,-8.121281,1.607179,-6.878699,-7.596564,5.762516,-5.713976,5.512695,1.275305,-0.073144,2.224422,3.897289,-9.462510,6.707864,1.400577,1.340906,-7.038826,2.116771,-4.727168,-6.524187,-1.166066,-5.992093,0.950119,-2.945869,-4.149338,9.999466,-5.385226,3.373591,5.137540,-9.156401,-4.935933,-6.368525,5.443124,-7.083929,2.917843,-3.301883,8.960462,-6.442518,-6.112407,7.117263,6.454216,5.203600,3.479728,-9.023238,2.941077,3.961586,-5.096130,-9.420760,-7.454536,-7.762737,7.396987,9.171482,0.970615,0.523866,-7.930883,-9.686184,9.481133,6.427700,9.980827,8.256136,-4.207867,-0.392007,0.805807,-8.864256,-3.957617,1.380050,-4.390881,-6.942812,1.734496,4.499012,-2.970724,7.157316,6.643692,6.380646,4.058486,-1.455668,8.008010,-5.740896,3.255385,-3.127549,4.913103,-2.265269,-9.793735,0.124564,-2.197953,1.020640,9.677596,6.865433,5.294131,7.743971,2.099746,-0.865315,-5.872073,5.709453,-9.872553,9.969300,-8.637850,3.921543,-9.660750,-1.431763,3.980980,-1.456520,-1.410424,-4.251279,-3.338680,-8.411112,8.301157,-2.710479,-8.378416,9.514427,-8.915595,-4.276371,-2.146800,5.977188,9.649140,-3.507967,-0.678850,9.612102,-3.437173,-9.275372,0.172003,-7.309911,-7.869424,-3.643935,3.891003,0.032607,5.806775,-4.101047,5.680291,-0.549544,4.813357,1.232885,1.160557,-7.205116,-2.457113,-1.968462,-4.779957,-8.226324,-3.111655,5.170571,3.133010,7.355406,-2.508447,-1.256895,2.487082,-7.995256,3.264610,-4.162360,-5.136724,-1.722211,-0.106286,-8.600089,-9.136022,3.134721,-3.627508,-1.455720,8.827077,-3.991651,4.801160,5.458787,1.082933,3.170627,8.567049,-6.687803,-1.845979,3.766506,7.648320,0.529475,-6.619071,-5.072092,9.537778,-8.923731,-2.550771,2.842612,-4.727652,1.361275,-8.779789,-0.670866,-8.775678,-2.396238,-8.224475,7.195527,9.135057,7.272831,5.329724,-1.912380,-2.481925,8.838226,0.895773,-4.619338,2.326021,-3.857733,-2.228511,-0.306480,3.123287,1.560580,-9.896594,5.920598,-0.655698,8.693409,3.423023,-4.520859,9.154492,-0.931125,-7.757429,-9.323170,-0.994046,-0.410958,6.724726,-7.112508,3.609787,-9.075645,-1.588562,6.934214,-8.766509,6.216940,7.929163,1.836127,4.991542,9.452232,-3.556942,-2.948465,-2.011485,3.637011,2.619417,-6.094912,-7.813010,-5.696237,2.206051,7.542635,-1.646667,7.579548,-5.838259,-3.521892,-2.896792,-0.934006,2.130581,-5.635608,7.129060,-5.834837,5.670301,5.193026,9.453157,-6.169885,8.496036,7.531527,-3.657812,1.452577,6.623319,9.285133,-2.348901,9.251085,-5.158232,9.280535,0.059998,-1.588188,9.898770,-7.517434,8.467548,7.840537,-4.307450,-2.215012,5.428510,-7.203567,-3.368262,-6.112086,2.149110,-9.561060,2.554188,3.590797,3.355014,1.038336,0.915409,-3.844814,7.457688,3.271693,-9.626399,-9.679411,-0.252790,-5.078158,-1.503107,6.008153,-3.582609,3.959856,6.287089,5.585714,-6.712972,8.044279,-4.332564,-3.574032,1.835206,-3.399661,-0.307911,0.274094,4.638946,8.475533,9.036262,2.659780,-4.191931,5.198208,7.440459,8.783792,-7.635205,2.872015,-0.499334,-6.285421,4.946889,9.885811,5.727134,-7.180626,-1.790303,0.902892,-1.582027,-6.068705,5.776352,2.973890,-6.440865,3.786590,3.669656,0.655484,-5.415541,-5.554861,-2.420342,7.630327,-5.671233,-2.870059,5.616242,-6.769188,-9.592538,0.787095,2.608530,-9.529238,9.010927,-4.812020,-5.268232,-3.930293,0.345551,7.396368,-0.419588,6.338850,-3.541120,3.899181,9.161635,-1.572939,-5.094472,-6.701013,-8.276708,6.949070,-9.190765,-9.296407,-0.928547,6.263982,6.762287,5.467867,-6.741631,2.344639,9.817294,-5.124260,-1.674404,-6.194999,-4.473912,-2.093011,-4.946701,-1.214632,9.711101,9.022266,3.066879,0.366850,7.901588,-7.794219,-3.488044,2.412971,6.322367,-2.043143,-1.049605,-7.554837,8.498639,3.432730,7.186148,-7.573267,-9.673474,-2.837766,9.558123,3.959893,-6.571801,-2.656074,5.697799,-9.231147,2.195340,-6.874756,-9.244570,4.853616,-0.906410,3.832597,-2.512168,-5.819997,2.846273,2.729266,1.698429,-3.750871,-9.568951,-5.680791,-5.400571,-5.843805,0.435537,6.935804,-4.159168,-6.267087,8.620825,-0.378986,2.776871,-3.656013,1.913660,5.538959,-0.446081,-7.959647,-1.104962,-2.865815,-8.244083,8.285938,-4.456213,9.185573,8.760186,6.612342,6.575702,-8.352881,-8.386782,8.770845,-5.990084,-2.048854,-6.713685,-5.053749,0.145024,0.440459,7.307393,-6.760448,4.654168,-4.154382,4.003044,6.226015,9.381042,9.455286,2.423886,2.790877,-7.050868,-6.439599,8.766165,4.584842,-4.364295,-5.718542,9.242892,5.607613,-1.782777,0.692655,0.853908,-8.802683,2.492304,-3.418534,-6.567567,-1.164717,-9.895514,-5.854660,9.292588,-1.173264,-1.926817,-2.153156,6.027392,4.008673,3.757526,4.901163,8.401346,-4.340311,-4.762230,3.387439,-3.569588,3.200897,2.062678,-3.335773,2.473051,-9.702056,5.935046,-8.519878,-1.649297,-1.018636,-5.481428,-0.154769,4.449637,-1.331484,8.019042,0.920577,-8.886878,-5.678432,-7.150766,-1.009118,-0.063501,0.480585,5.872636,-5.431622,1.082270,-5.093794,8.326526,-9.519379,5.450985,-8.238124,-8.004151,-8.847876,-0.542630,-0.418924,-7.929853,-1.532915,4.811382,-5.954593,2.917194,-5.401286,-5.115590,1.529389,4.374016,-7.186224,-2.683463,-1.941991,-8.860304,3.800108,5.193982,0.872633,6.985095,-5.608146,-0.320226,0.470450,-9.593081,-5.423776,-1.280645,-1.656522,3.721165,-5.824378,9.265725,5.640892,-2.384720,-9.902994,-0.653515,4.075749,5.541471,3.404008,-2.089266,-9.449875,-7.162901,0.130692,-9.463072,4.831903,3.226566,5.381963,-5.458154,-8.595594,-3.499730,-7.088126,1.502539,-2.175818,-0.799317,-6.702731,-1.214144,7.192173,5.795783,-3.980389,-8.108847,-8.056635,4.023289,-3.821456,-8.987603,-9.779873,4.176007,1.200103,-9.408514,6.860330,7.725147,-5.956290,-6.412626,8.878423,-3.303349,6.939572,9.594978,-1.557270,-5.404741,-9.560034,-7.421468,7.407789,8.518957,-6.435718,-4.723747,-7.130764,2.941924,5.082729,-8.678524,8.314265,-8.259373,0.892834,-9.143282,5.402187,-2.611253,4.698148,-4.302391,-3.252886,-6.231041,-9.052473,2.627511,-3.713941,5.498120,-7.100670,-7.643727,-8.428753,4.357633,-8.517627,-5.006740,-9.252495,4.490005,7.856995,-4.137702,-8.638274,-9.334091,4.204937,6.871918,-1.691092,0.533460,0.224804,-7.610552,7.450082,7.498084,-1.907810,8.835486,8.920817,-6.379022,-2.482924,-8.769240,6.059673,9.340462,-4.464695,5.535112,6.491045,-4.670353,-8.633619,4.232190,-3.954544,-8.778740,-7.752985,6.433690,-4.329254,-0.705720,-3.252761,1.849838,9.703985,-0.043632,-1.296048,-5.213485,-2.246630,-9.123221,9.066783,-9.476860,-9.426387,-0.491099,-8.563558,-6.835442,-0.392602,-7.960546,-3.132352,-7.557959,-5.394990,9.546392,-0.399754,6.361338,-8.536566,-3.408503,7.138151,6.611771,3.417781,-3.599029,2.581935,-5.269580,2.455705,-0.582822,8.058882,9.125655,2.559650,-8.723491,-8.951575,5.597174,9.421319,-8.613170,-1.962685,-0.280342,-0.585262,-5.171360,-5.465630,6.293492,0.186670,5.616826,-1.295069,-9.096823,0.781779,-3.058348,-6.090284,1.719905,2.044809,-6.618773,5.685165,7.907384,4.324149,-5.056922,-5.000802,1.162623,3.594496,-4.673399,2.138129,-6.349727,8.651201,-4.175252,-3.480753,6.271377,-0.513301,6.060817,7.371905,4.551654,-1.714648,-4.960395,0.752755,-3.171034,-9.842802,-0.355337,-5.899327,-3.680976,1.981057,1.009720,-4.604200,0.373780,4.133631,4.566513,3.744298,3.419210,-6.563661,2.779794,-2.886488,-9.826588,-3.985627,-7.105813,4.209527,2.381491,-4.580141,-2.071437,4.166244,0.001540,2.294306,2.245027,1.660712,-9.640046,-6.410496,8.291721,-7.088392,9.941716,-5.914130,2.196757,6.276946,2.006763,9.588024,-7.066840,3.846131,2.544358,-7.568670,-4.924675,-2.133786,0.783204,-6.299589,5.611477,9.340203,2.483041,-9.338182,2.605030,6.821064,1.680201,1.980374,-9.050584,7.385233,7.211568,-3.015727,0.068827,-9.184690,-3.147019,1.332918,1.401940,-0.975444,9.411109,5.387385,-5.343213,0.115139,-2.310004,-1.193009,5.122034,-5.159822,0.829169,-5.869155,3.736485,-3.867310,6.055974,9.090211,-2.709680,-4.638987,4.530390,-6.811895,-4.240427,2.909839,-6.225300,1.668714,-1.675183,-5.455754,8.537507,-6.108708,-2.746201,-8.998096,4.997146,-2.158227,1.256446,8.172584,8.859428,3.728488,1.412037,-8.618645,-6.421043,7.916563,5.888694,-2.524825,6.444039,-3.973593,0.949449,2.572197,-2.039531,-6.728255,-5.792598,-8.680965,-7.590191,-2.762486,6.065864,7.340155,-4.430342,-2.415417,8.928742,-0.688011,3.074911,-0.394275,2.628781,8.949308,8.635806,-9.670038,9.937187,5.537924,-0.570878,4.551527,-2.970713,5.089651,-2.074788,2.697492,-7.043960,-9.730915,-3.401497,7.539306,-8.457213,1.526079,-4.158066,-7.771020,5.171775,5.833274,4.814316,3.196766,-7.276402,-8.718629,-9.106107,-6.013672,-4.498704,-8.174118,0.680793,-3.030529,7.855168,2.390594,3.367962,5.571630,-0.521381,-8.352177,-1.826544,8.731576,-0.157264,3.816126,2.947648,-0.894171], dtype = "float32")#candidate|4562|(1300,)|const|float32
call_4561 = relay.TupleGetItem(func_4366_call(relay.reshape(const_4562.astype('float32'), [650, 2])), 2)
call_4563 = relay.TupleGetItem(func_4368_call(relay.reshape(const_4562.astype('float32'), [650, 2])), 2)
bop_4564 = relay.not_equal(call_4561.astype('bool'), relay.reshape(const_4562.astype('bool'), relay.shape_of(call_4561))) # shape=(650, 2)
bop_4567 = relay.not_equal(call_4563.astype('bool'), relay.reshape(const_4562.astype('bool'), relay.shape_of(call_4563))) # shape=(650, 2)
uop_4569 = relay.log10(bop_4564.astype('float32')) # shape=(650, 2)
uop_4571 = relay.log10(bop_4567.astype('float32')) # shape=(650, 2)
func_2662_call = mod.get_global_var('func_2662')
func_2666_call = mutated_mod.get_global_var('func_2666')
call_4572 = relay.TupleGetItem(func_2662_call(relay.reshape(bop_4564.astype('float32'), [10, 10, 13]), relay.reshape(uop_4569.astype('float32'), [10, 10, 13]), ), 2)
call_4573 = relay.TupleGetItem(func_2666_call(relay.reshape(bop_4564.astype('float32'), [10, 10, 13]), relay.reshape(uop_4569.astype('float32'), [10, 10, 13]), ), 2)
func_2662_call = mod.get_global_var('func_2662')
func_2666_call = mutated_mod.get_global_var('func_2666')
call_4578 = relay.TupleGetItem(func_2662_call(relay.reshape(call_4561.astype('float32'), [10, 10, 13]), relay.reshape(uop_4569.astype('float32'), [10, 10, 13]), ), 5)
call_4579 = relay.TupleGetItem(func_2666_call(relay.reshape(call_4561.astype('float32'), [10, 10, 13]), relay.reshape(uop_4569.astype('float32'), [10, 10, 13]), ), 5)
bop_4593 = relay.mod(uop_4569.astype('float32'), call_4578.astype('float32')) # shape=(650, 2)
bop_4596 = relay.mod(uop_4571.astype('float32'), call_4579.astype('float32')) # shape=(650, 2)
output = relay.Tuple([call_4552,call_4572,bop_4593,])
output2 = relay.Tuple([call_4553,call_4573,bop_4596,])
func_4603 = relay.Function([], output)
mod['func_4603'] = func_4603
mod = relay.transform.InferType()(mod)
output = func_4603()
func_4604 = relay.Function([], output)
mutated_mod['func_4604'] = func_4604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4603_call = mod.get_global_var('func_4603')
func_4604_call = mutated_mod.get_global_var('func_4604')
call_4616 = relay.TupleGetItem(func_4603_call(), 2)
call_4617 = relay.TupleGetItem(func_4604_call(), 2)
output = relay.Tuple([call_4616,])
output2 = relay.Tuple([call_4617,])
func_4638 = relay.Function([], output)
mod['func_4638'] = func_4638
mod = relay.transform.InferType()(mod)
output = func_4638()
func_4639 = relay.Function([], output)
mutated_mod['func_4639'] = func_4639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4193_call = mod.get_global_var('func_4193')
func_4195_call = mutated_mod.get_global_var('func_4195')
call_4655 = relay.TupleGetItem(func_4193_call(), 0)
call_4656 = relay.TupleGetItem(func_4195_call(), 0)
output = call_4655
output2 = call_4656
func_4669 = relay.Function([], output)
mod['func_4669'] = func_4669
mod = relay.transform.InferType()(mod)
output = func_4669()
func_4670 = relay.Function([], output)
mutated_mod['func_4670'] = func_4670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4492_call = mod.get_global_var('func_4492')
func_4494_call = mutated_mod.get_global_var('func_4494')
call_4732 = relay.TupleGetItem(func_4492_call(), 3)
call_4733 = relay.TupleGetItem(func_4494_call(), 3)
func_3657_call = mod.get_global_var('func_3657')
func_3661_call = mutated_mod.get_global_var('func_3661')
var_4736 = relay.var("var_4736", dtype = "float32", shape = ())#candidate|4736|()|var|float32
var_4737 = relay.var("var_4737", dtype = "float32", shape = (231,))#candidate|4737|(231,)|var|float32
call_4735 = relay.TupleGetItem(func_3657_call(relay.reshape(var_4736.astype('float32'), []), relay.reshape(var_4737.astype('float32'), [3, 11, 7]), ), 0)
call_4738 = relay.TupleGetItem(func_3661_call(relay.reshape(var_4736.astype('float32'), []), relay.reshape(var_4737.astype('float32'), [3, 11, 7]), ), 0)
func_4669_call = mod.get_global_var('func_4669')
func_4670_call = mutated_mod.get_global_var('func_4670')
call_4741 = func_4669_call()
call_4742 = func_4669_call()
output = relay.Tuple([call_4732,call_4735,var_4736,var_4737,call_4741,])
output2 = relay.Tuple([call_4733,call_4738,var_4736,var_4737,call_4742,])
func_4754 = relay.Function([var_4736,var_4737,], output)
mod['func_4754'] = func_4754
mod = relay.transform.InferType()(mod)
var_4755 = relay.var("var_4755", dtype = "float32", shape = ())#candidate|4755|()|var|float32
var_4756 = relay.var("var_4756", dtype = "float32", shape = (231,))#candidate|4756|(231,)|var|float32
output = func_4754(var_4755,var_4756,)
func_4757 = relay.Function([var_4755,var_4756,], output)
mutated_mod['func_4757'] = func_4757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4492_call = mod.get_global_var('func_4492')
func_4494_call = mutated_mod.get_global_var('func_4494')
call_4780 = relay.TupleGetItem(func_4492_call(), 4)
call_4781 = relay.TupleGetItem(func_4494_call(), 4)
func_3480_call = mod.get_global_var('func_3480')
func_3484_call = mutated_mod.get_global_var('func_3484')
const_4787 = relay.const([False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,True,False,False,True,False,False], dtype = "bool")#candidate|4787|(168,)|const|bool
call_4786 = relay.TupleGetItem(func_3480_call(relay.reshape(call_4780.astype('int16'), [9, 3, 7]), relay.reshape(const_4787.astype('bool'), [1, 168]), ), 2)
call_4788 = relay.TupleGetItem(func_3484_call(relay.reshape(call_4780.astype('int16'), [9, 3, 7]), relay.reshape(const_4787.astype('bool'), [1, 168]), ), 2)
func_4366_call = mod.get_global_var('func_4366')
func_4368_call = mutated_mod.get_global_var('func_4368')
var_4808 = relay.var("var_4808", dtype = "float32", shape = (1, 1300))#candidate|4808|(1, 1300)|var|float32
call_4807 = relay.TupleGetItem(func_4366_call(relay.reshape(var_4808.astype('float32'), [650, 2])), 0)
call_4809 = relay.TupleGetItem(func_4368_call(relay.reshape(var_4808.astype('float32'), [650, 2])), 0)
func_2737_call = mod.get_global_var('func_2737')
func_2741_call = mutated_mod.get_global_var('func_2741')
var_4811 = relay.var("var_4811", dtype = "float64", shape = ())#candidate|4811|()|var|float64
const_4812 = relay.const([-1.406873,-1.498632,-1.452817,-4.591398,9.692458,-0.592658,9.371332,-0.505335,4.379825,-1.002786,-1.017833,-7.866177,9.394323,-5.657283,-5.722312,6.414318,9.331820,-3.252487,-5.955974,3.140385,-3.400610,9.219755,-0.239660,7.577916,5.646709,2.445473,5.089238,-0.714744,-9.552992,6.577350,8.438944,9.709375,-7.303345,-9.534173,4.767498,-7.618176,0.546586,0.328790,-6.375251,6.522309,4.136685,4.055526,-4.519297,5.388377,-7.747670,-2.575164,4.974868,4.203167,0.102635,-0.972511,0.398950,-3.379251,3.906742,1.656075,-4.116762,4.833237,4.523362,-0.352488,-8.398627,-7.099845,-6.961139,-7.358201,8.349410,-0.093505,-6.922958,9.827427,7.971635,-1.509130,4.603856,-0.609104,2.599962,8.633147,-6.096440,-4.460075,-3.858332,-4.707016,6.382052,-9.554591,-3.559242,5.724302,-3.275931,-7.951285,-4.762348,-3.842589,-0.263715,1.788067,-3.535494,-7.649307,-8.437961,-7.129799,-6.789487,-6.317570,7.424190,-3.196867,3.899670,-4.432481,-0.961342,2.479154,-3.139212,-6.566109,9.117828,-8.831293,8.711916,-5.924535,8.085801,-2.441849,8.393577,-2.306564,3.964844,-1.642642,-0.200672,-0.493156,-2.169879,-6.949199,5.488128,5.311030,-0.225738,2.004747,4.846312,-6.916704,-5.415491,-4.486883,8.828682,-5.567416,7.020590,4.225515,-4.924559,-4.517813,8.331658,5.116178,3.849227,2.289468,-9.772341,6.524435,2.356281,-3.462125,-0.968947,1.305654,4.784987,3.165749,8.520833,1.094171,-8.383349,-2.366750,-1.075683,2.452395,-7.232258,6.234381,8.764128,-8.116783,-2.224804,-2.327242,1.756070,-8.304278,4.459692,8.084736,-1.880687,-4.919299,-4.858646,2.440033,-1.473447,5.504980,2.824679,2.112998,6.290128,8.249939,0.097989,8.750555,-8.334142,2.596429,5.659611,-9.647242,0.089803,-1.277889,1.334371,-3.260720,-0.307718,-2.512877,9.601056,-1.728850,-1.047588,-3.289357,9.022427,-3.797109,-5.453183,-6.519623,4.541780,7.800095,3.072139,-1.238907,9.200263,0.898865,-3.230758,-3.541383,1.233083,1.086948,-7.190144,3.503277,7.162978,0.220212,-5.778375,1.032309,-5.890125,-5.222586,-3.342642,-3.440281,-1.689132,-9.954965,-8.353623,-4.796293,6.331726,3.039054,1.159639,-2.999084,-5.590799,-8.854001,0.401877,-3.871485,4.936525,3.005072,-4.770795,1.312734,8.107864,1.966860,-7.461304,-8.791111,6.030654,-5.646319,-5.008174,0.197187,-0.793823,1.015143,9.205622,-5.592103,8.520100,7.605994,7.670858,-2.514313,-8.263583,-6.298460,4.986644,-9.924872,-8.444719,6.445164,0.063613,-2.148882,0.301146,3.925052,0.724376,2.085027,-5.381863,-9.838574,7.399816,-1.240853,8.798765,6.290949], dtype = "float64")#candidate|4812|(256,)|const|float64
call_4810 = relay.TupleGetItem(func_2737_call(relay.reshape(var_4811.astype('float64'), []), relay.reshape(const_4812.astype('float64'), [16, 4, 4]), relay.reshape(call_4786.astype('uint8'), [18,]), ), 1)
call_4813 = relay.TupleGetItem(func_2741_call(relay.reshape(var_4811.astype('float64'), []), relay.reshape(const_4812.astype('float64'), [16, 4, 4]), relay.reshape(call_4786.astype('uint8'), [18,]), ), 1)
func_4289_call = mod.get_global_var('func_4289')
func_4293_call = mutated_mod.get_global_var('func_4293')
var_4817 = relay.var("var_4817", dtype = "float32", shape = (792,))#candidate|4817|(792,)|var|float32
call_4816 = relay.TupleGetItem(func_4289_call(relay.reshape(var_4808.astype('float32'), [1300, 1]), relay.reshape(var_4817.astype('float32'), [792,]), ), 5)
call_4818 = relay.TupleGetItem(func_4293_call(relay.reshape(var_4808.astype('float32'), [1300, 1]), relay.reshape(var_4817.astype('float32'), [792,]), ), 5)
func_3883_call = mod.get_global_var('func_3883')
func_3888_call = mutated_mod.get_global_var('func_3888')
call_4825 = relay.TupleGetItem(func_3883_call(relay.reshape(call_4780.astype('int16'), [189,]), relay.reshape(call_4786.astype('uint8'), [18,]), relay.reshape(call_4816.astype('float32'), [1, 132]), relay.reshape(var_4817.astype('float32'), [792,]), ), 10)
call_4826 = relay.TupleGetItem(func_3888_call(relay.reshape(call_4780.astype('int16'), [189,]), relay.reshape(call_4786.astype('uint8'), [18,]), relay.reshape(call_4816.astype('float32'), [1, 132]), relay.reshape(var_4817.astype('float32'), [792,]), ), 10)
func_459_call = mod.get_global_var('func_459')
func_463_call = mutated_mod.get_global_var('func_463')
call_4827 = func_459_call(relay.reshape(const_4787.astype('bool'), [2, 7, 12]), relay.reshape(const_4787.astype('bool'), [2, 7, 12]), )
call_4828 = func_459_call(relay.reshape(const_4787.astype('bool'), [2, 7, 12]), relay.reshape(const_4787.astype('bool'), [2, 7, 12]), )
func_656_call = mod.get_global_var('func_656')
func_660_call = mutated_mod.get_global_var('func_660')
call_4844 = func_656_call(relay.reshape(call_4816.astype('float32'), [12, 11, 1]), relay.reshape(var_4817.astype('float32'), [12, 11, 6]), )
call_4845 = func_656_call(relay.reshape(call_4816.astype('float32'), [12, 11, 1]), relay.reshape(var_4817.astype('float32'), [12, 11, 6]), )
func_4409_call = mod.get_global_var('func_4409')
func_4410_call = mutated_mod.get_global_var('func_4410')
call_4849 = relay.TupleGetItem(func_4409_call(), 0)
call_4850 = relay.TupleGetItem(func_4410_call(), 0)
func_4193_call = mod.get_global_var('func_4193')
func_4195_call = mutated_mod.get_global_var('func_4195')
call_4856 = relay.TupleGetItem(func_4193_call(), 0)
call_4857 = relay.TupleGetItem(func_4195_call(), 0)
bop_4877 = relay.minimum(call_4810.astype('int8'), var_4811.astype('int8')) # shape=(2, 10, 9)
bop_4880 = relay.minimum(call_4813.astype('int8'), var_4811.astype('int8')) # shape=(2, 10, 9)
func_3480_call = mod.get_global_var('func_3480')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_4889 = relay.TupleGetItem(func_3480_call(relay.reshape(call_4780.astype('int16'), [9, 3, 7]), relay.reshape(call_4827.astype('bool'), [1, 168]), ), 1)
call_4890 = relay.TupleGetItem(func_3484_call(relay.reshape(call_4780.astype('int16'), [9, 3, 7]), relay.reshape(call_4827.astype('bool'), [1, 168]), ), 1)
func_3451_call = mod.get_global_var('func_3451')
func_3453_call = mutated_mod.get_global_var('func_3453')
call_4905 = relay.TupleGetItem(func_3451_call(relay.reshape(var_4811.astype('float64'), [])), 0)
call_4906 = relay.TupleGetItem(func_3453_call(relay.reshape(var_4811.astype('float64'), [])), 0)
uop_4916 = relay.cosh(var_4808.astype('float32')) # shape=(1, 1300)
func_4366_call = mod.get_global_var('func_4366')
func_4368_call = mutated_mod.get_global_var('func_4368')
call_4918 = relay.TupleGetItem(func_4366_call(relay.reshape(uop_4916.astype('float32'), [650, 2])), 1)
call_4919 = relay.TupleGetItem(func_4368_call(relay.reshape(uop_4916.astype('float32'), [650, 2])), 1)
output = relay.Tuple([call_4780,call_4786,const_4787,call_4807,const_4812,call_4816,var_4817,call_4825,call_4827,call_4844,call_4849,call_4856,bop_4877,call_4889,call_4905,uop_4916,call_4918,])
output2 = relay.Tuple([call_4781,call_4788,const_4787,call_4809,const_4812,call_4818,var_4817,call_4826,call_4828,call_4845,call_4850,call_4857,bop_4880,call_4890,call_4906,uop_4916,call_4919,])
func_4922 = relay.Function([var_4808,var_4811,var_4817,], output)
mod['func_4922'] = func_4922
mod = relay.transform.InferType()(mod)
mutated_mod['func_4922'] = func_4922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4922_call = mutated_mod.get_global_var('func_4922')
var_4924 = relay.var("var_4924", dtype = "float32", shape = (1, 1300))#candidate|4924|(1, 1300)|var|float32
var_4925 = relay.var("var_4925", dtype = "float64", shape = ())#candidate|4925|()|var|float64
var_4926 = relay.var("var_4926", dtype = "float32", shape = (792,))#candidate|4926|(792,)|var|float32
call_4923 = func_4922_call(var_4924,var_4925,var_4926,)
output = call_4923
func_4927 = relay.Function([var_4924,var_4925,var_4926,], output)
mutated_mod['func_4927'] = func_4927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4055_call = mod.get_global_var('func_4055')
func_4056_call = mutated_mod.get_global_var('func_4056')
call_4934 = relay.TupleGetItem(func_4055_call(), 4)
call_4935 = relay.TupleGetItem(func_4056_call(), 4)
func_1744_call = mod.get_global_var('func_1744')
func_1750_call = mutated_mod.get_global_var('func_1750')
const_4940 = relay.const([9.677227,-8.189155,-7.022958,7.658912,-2.230346,5.775564,-5.662572,-8.467146,6.858001,-2.566593,6.396995,-7.066868,-2.155618,1.104964,-7.333931,5.374823,-7.475061,0.131994,1.531122,-5.716112,5.238078,-1.214786,-6.139599,-8.089345,1.950645,7.297663,-4.595124,1.303032,-9.061962,-4.987806,6.985973,-9.017567,8.927262,-5.249462,-4.821181,9.845012,-4.860876,-3.923720,-2.266935,-7.428026,8.429744,-9.773809,4.465721,9.827484,5.206467,6.020816,2.490934,-8.471562,5.043652,-7.235151,1.121397,3.557510,4.114511,-5.631051,-8.330122,-7.700071,-2.635920,5.836729,-5.186053,8.072139,9.808158,-1.630051,-8.562819,7.054037,4.613060,-1.577262,7.558131,-4.039938,6.068571,7.439813,-0.726729,6.908680,-2.902254,-5.059438,9.181790,-7.948910,-3.872462,-4.264843,5.900649,-0.577609,7.273204,-6.557794,6.644839,2.596507,4.461637,-6.582138,-9.298833,1.323160,1.061202,8.329759,3.957405,9.994846,-0.860363,4.319934,1.233924,-6.083097,-0.556665,-6.464563,-2.307187,-1.807521,-9.882151,8.939845,-6.371592,9.485432,-9.864425,0.346413,8.702209,-7.785429,-0.551224,6.456049,7.233853,-1.404515,-6.186517,7.850007,-7.648994,5.843796,2.357195,-8.410343,9.135361,1.635168,-5.542105,2.009444,6.718718,-6.933081,9.485794,2.182017,7.428263,-0.236633,-4.712471,-3.174524,9.094672,6.129247], dtype = "float32")#candidate|4940|(132,)|const|float32
var_4941 = relay.var("var_4941", dtype = "float32", shape = (792,))#candidate|4941|(792,)|var|float32
var_4942 = relay.var("var_4942", dtype = "float64", shape = (1, 84))#candidate|4942|(1, 84)|var|float64
var_4943 = relay.var("var_4943", dtype = "int64", shape = (77,))#candidate|4943|(77,)|var|int64
call_4939 = relay.TupleGetItem(func_1744_call(relay.reshape(const_4940.astype('float32'), [132,]), relay.reshape(var_4941.astype('float32'), [792,]), relay.reshape(var_4942.astype('float64'), [84, 1]), relay.reshape(var_4943.astype('int64'), [77,]), ), 2)
call_4944 = relay.TupleGetItem(func_1750_call(relay.reshape(const_4940.astype('float32'), [132,]), relay.reshape(var_4941.astype('float32'), [792,]), relay.reshape(var_4942.astype('float64'), [84, 1]), relay.reshape(var_4943.astype('int64'), [77,]), ), 2)
func_656_call = mod.get_global_var('func_656')
func_660_call = mutated_mod.get_global_var('func_660')
call_4962 = func_656_call(relay.reshape(const_4940.astype('float32'), [12, 11, 1]), relay.reshape(var_4941.astype('float32'), [12, 11, 6]), )
call_4963 = func_656_call(relay.reshape(const_4940.astype('float32'), [12, 11, 1]), relay.reshape(var_4941.astype('float32'), [12, 11, 6]), )
func_4603_call = mod.get_global_var('func_4603')
func_4604_call = mutated_mod.get_global_var('func_4604')
call_4966 = relay.TupleGetItem(func_4603_call(), 1)
call_4967 = relay.TupleGetItem(func_4604_call(), 1)
output = relay.Tuple([call_4934,call_4939,const_4940,var_4941,var_4942,var_4943,call_4962,call_4966,])
output2 = relay.Tuple([call_4935,call_4944,const_4940,var_4941,var_4942,var_4943,call_4963,call_4967,])
func_4977 = relay.Function([var_4941,var_4942,var_4943,], output)
mod['func_4977'] = func_4977
mod = relay.transform.InferType()(mod)
var_4978 = relay.var("var_4978", dtype = "float32", shape = (792,))#candidate|4978|(792,)|var|float32
var_4979 = relay.var("var_4979", dtype = "float64", shape = (1, 84))#candidate|4979|(1, 84)|var|float64
var_4980 = relay.var("var_4980", dtype = "int64", shape = (77,))#candidate|4980|(77,)|var|int64
output = func_4977(var_4978,var_4979,var_4980,)
func_4981 = relay.Function([var_4978,var_4979,var_4980,], output)
mutated_mod['func_4981'] = func_4981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4603_call = mod.get_global_var('func_4603')
func_4604_call = mutated_mod.get_global_var('func_4604')
call_4997 = relay.TupleGetItem(func_4603_call(), 2)
call_4998 = relay.TupleGetItem(func_4604_call(), 2)
var_5036 = relay.var("var_5036", dtype = "float32", shape = (650, 2))#candidate|5036|(650, 2)|var|float32
bop_5037 = relay.floor_divide(call_4997.astype('float64'), relay.reshape(var_5036.astype('float64'), relay.shape_of(call_4997))) # shape=(650, 2)
bop_5040 = relay.floor_divide(call_4998.astype('float64'), relay.reshape(var_5036.astype('float64'), relay.shape_of(call_4998))) # shape=(650, 2)
func_2737_call = mod.get_global_var('func_2737')
func_2741_call = mutated_mod.get_global_var('func_2741')
const_5042 = relay.const(9.268542, dtype = "float64")#candidate|5042|()|const|float64
const_5043 = relay.const([-4.842914,-3.341843,9.827180,6.776921,3.174720,7.607561,-0.993936,-2.469524,-4.154275,4.392855,-9.390930,7.014628,9.389869,8.164450,1.174427,-7.934906,-4.145271,2.581041,-1.866981,2.909107,1.952094,0.140387,-2.718886,9.153344,-4.921757,-1.963991,9.149579,6.043587,-4.062921,7.268625,8.603799,-4.706688,-6.953200,7.032034,-2.206855,0.477991,9.042179,-8.130428,-5.898363,6.731943,-0.197876,-6.952727,0.620971,-4.757676,-4.801158,-9.983312,4.476311,6.341167,-3.486163,-5.770471,3.406029,3.627559,-1.728178,-9.112013,9.060667,-5.150314,-6.213552,6.109496,-9.705547,6.658328,4.721649,-3.795178,-9.917726,9.493641,-9.014242,-2.440466,6.459021,-8.058738,1.392461,-1.991941,-9.705703,-3.020592,6.601013,1.617959,2.834560,-1.244111,-0.329907,5.307201,-6.815606,6.183564,-2.731585,-7.648640,5.620456,1.650258,-4.114122,7.448229,-1.044437,7.244877,2.089095,6.437290,6.395327,-6.125529,-0.089062,2.057522,-6.633087,3.176172,-4.056538,-7.831823,9.473553,-6.271117,9.489917,-4.125278,7.161081,-5.648817,-0.030649,5.861409,5.402049,4.833866,8.830249,8.343569,-1.436265,-5.036251,-4.393636,-7.006675,-2.182673,5.764777,3.085540,-9.530410,5.061097,1.790420,-1.771781,-4.268629,-3.192588,-2.776065,-6.871725,8.194333,-0.316642,9.939360,-3.490967,-2.347843,-9.227842,0.378285,-3.158748,-3.474087,-0.454208,0.626022,-2.513369,-4.282365,-7.492839,-1.922450,-0.478070,8.453964,4.633935,-9.487850,-1.853795,-7.509949,-4.204563,-2.324500,3.424387,0.357319,5.914854,2.832652,-0.940375,-0.292067,-3.772225,2.200768,8.627395,9.310023,3.538758,-3.695827,6.978856,-9.029336,-5.132883,-7.829774,6.620084,6.538158,-2.314531,-7.039778,0.606473,4.360000,7.878468,-5.155503,2.140593,5.898750,2.821874,1.963751,-2.620251,5.647615,-4.493182,3.714131,4.745949,-3.260574,6.602838,-1.517074,-9.906394,-1.058715,-3.384810,-6.334144,-7.252565,-5.441913,0.671581,-4.288926,0.646097,2.705699,3.729264,6.982369,3.586838,6.133363,-7.037131,3.397479,5.672597,-4.228230,3.675487,-1.083634,-3.253711,4.356895,-6.243982,1.263543,9.952431,4.681267,5.518019,6.834279,3.604235,2.117936,-4.205102,-6.922126,-7.882264,6.123854,3.098223,-7.467480,-1.221804,0.114958,8.494829,-9.277403,2.749086,-1.232381,-8.056217,-4.825094,-6.853641,8.328292,-3.924729,-3.804868,-5.525065,-2.184418,2.277336,7.487960,6.181598,-6.932412,-5.448894,7.758766,9.553126,-8.858435,-6.933983,8.940053,4.325586,7.022223,-7.946545,-9.535127,-1.812159,-1.928605,1.668554,5.317624,-6.990941,-9.781819,0.756031,8.474237], dtype = "float64")#candidate|5043|(256,)|const|float64
const_5044 = relay.const([-4,5,-3,-1,9,-3,5,-5,1,-5,-9,9,2,-8,-3,-2,-7,-4], dtype = "uint8")#candidate|5044|(18,)|const|uint8
call_5041 = relay.TupleGetItem(func_2737_call(relay.reshape(const_5042.astype('float64'), []), relay.reshape(const_5043.astype('float64'), [16, 4, 4]), relay.reshape(const_5044.astype('uint8'), [18,]), ), 2)
call_5045 = relay.TupleGetItem(func_2741_call(relay.reshape(const_5042.astype('float64'), []), relay.reshape(const_5043.astype('float64'), [16, 4, 4]), relay.reshape(const_5044.astype('uint8'), [18,]), ), 2)
uop_5055 = relay.cos(bop_5037.astype('float64')) # shape=(650, 2)
uop_5057 = relay.cos(bop_5040.astype('float64')) # shape=(650, 2)
bop_5068 = relay.subtract(uop_5055.astype('int64'), relay.reshape(call_4997.astype('int64'), relay.shape_of(uop_5055))) # shape=(650, 2)
bop_5071 = relay.subtract(uop_5057.astype('int64'), relay.reshape(call_4998.astype('int64'), relay.shape_of(uop_5057))) # shape=(650, 2)
output = relay.Tuple([call_5041,const_5042,const_5043,const_5044,bop_5068,])
output2 = relay.Tuple([call_5045,const_5042,const_5043,const_5044,bop_5071,])
func_5073 = relay.Function([var_5036,], output)
mod['func_5073'] = func_5073
mod = relay.transform.InferType()(mod)
var_5074 = relay.var("var_5074", dtype = "float32", shape = (650, 2))#candidate|5074|(650, 2)|var|float32
output = func_5073(var_5074)
func_5075 = relay.Function([var_5074], output)
mutated_mod['func_5075'] = func_5075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4638_call = mod.get_global_var('func_4638')
func_4639_call = mutated_mod.get_global_var('func_4639')
call_5113 = relay.TupleGetItem(func_4638_call(), 0)
call_5114 = relay.TupleGetItem(func_4639_call(), 0)
var_5126 = relay.var("var_5126", dtype = "float32", shape = (650, 2))#candidate|5126|(650, 2)|var|float32
bop_5127 = relay.right_shift(call_5113.astype('int16'), relay.reshape(var_5126.astype('int16'), relay.shape_of(call_5113))) # shape=(650, 2)
bop_5130 = relay.right_shift(call_5114.astype('int16'), relay.reshape(var_5126.astype('int16'), relay.shape_of(call_5114))) # shape=(650, 2)
func_887_call = mod.get_global_var('func_887')
func_889_call = mutated_mod.get_global_var('func_889')
var_5135 = relay.var("var_5135", dtype = "uint8", shape = (6, 3))#candidate|5135|(6, 3)|var|uint8
call_5134 = relay.TupleGetItem(func_887_call(relay.reshape(var_5135.astype('uint8'), [2, 1, 9])), 0)
call_5136 = relay.TupleGetItem(func_889_call(relay.reshape(var_5135.astype('uint8'), [2, 1, 9])), 0)
func_459_call = mod.get_global_var('func_459')
func_463_call = mutated_mod.get_global_var('func_463')
var_5181 = relay.var("var_5181", dtype = "bool", shape = (42, 4))#candidate|5181|(42, 4)|var|bool
call_5180 = func_459_call(relay.reshape(var_5181.astype('bool'), [2, 7, 12]), relay.reshape(var_5181.astype('bool'), [2, 7, 12]), )
call_5182 = func_459_call(relay.reshape(var_5181.astype('bool'), [2, 7, 12]), relay.reshape(var_5181.astype('bool'), [2, 7, 12]), )
func_1683_call = mod.get_global_var('func_1683')
func_1690_call = mutated_mod.get_global_var('func_1690')
const_5184 = relay.const(1.288479, dtype = "float64")#candidate|5184|()|const|float64
var_5185 = relay.var("var_5185", dtype = "float64", shape = (66,))#candidate|5185|(66,)|var|float64
var_5186 = relay.var("var_5186", dtype = "int64", shape = (11, 7))#candidate|5186|(11, 7)|var|int64
const_5187 = relay.const([-3.762178,-3.689479,-3.239863,6.835933,3.629601,0.019792,-6.818875,1.611796,3.331438,-2.845256,5.025130,8.542989,7.516177,8.800371,-7.290869,-9.436082,-0.960264,-3.694804,8.059349,2.441009,-5.419589,6.870056,0.341075,8.634436,2.983219,0.700329,-7.149875,-1.871277,-9.250498,-4.150702,-4.404259,-8.718920,2.471096,7.213965,-1.881239,8.160158,8.368438,6.445770,-8.495231,9.503134,7.227887,-0.410403,2.667016,3.831757,2.470018,2.069597,7.759541,-9.630307,-9.010702,3.707194,5.489965,2.622710,6.483352,5.297465,3.017750,6.968784,-1.348008,-9.365022,-6.987227,7.875117,-4.068870,-6.415739,-2.286569,-5.338309,-3.312535,-7.534511,5.668472,5.923743,-6.555542,-8.266310,9.396924,-9.115722,9.390648,-2.529464,5.491271,7.695524,-5.971323,0.075642,3.147568,2.407978,8.939576,8.444180,5.999201,1.552300,7.072959,-3.435554,-6.121055,-9.419495,4.683673,8.764791,7.160594,-1.411119,-7.705820,-3.048255,-8.884402,-0.680811,9.487614,-3.232395,-7.151702,6.260555,8.647076,-2.805520,-1.510205,5.180037,1.330444,-9.728935,-9.583114,-5.555926,-9.837983,-5.924267,-3.994857,-5.825108,-5.672935,2.399783,5.494570,-3.244364,-9.416517,-8.237258,-3.082778,-9.460094,-5.061298,-6.984594,-7.885453,-6.767430,6.550820,5.827141,8.843456,-6.643212,-3.286323,-4.817860,-5.195052,-1.573526], dtype = "float32")#candidate|5187|(132,)|const|float32
call_5183 = relay.TupleGetItem(func_1683_call(relay.reshape(const_5184.astype('float64'), []), relay.reshape(var_5185.astype('float64'), [6, 11]), relay.reshape(var_5186.astype('int64'), [77,]), relay.reshape(const_5187.astype('float32'), [132,]), relay.reshape(var_5135.astype('uint8'), [6, 3]), relay.reshape(var_5181.astype('bool'), [168,]), ), 4)
call_5188 = relay.TupleGetItem(func_1690_call(relay.reshape(const_5184.astype('float64'), []), relay.reshape(var_5185.astype('float64'), [6, 11]), relay.reshape(var_5186.astype('int64'), [77,]), relay.reshape(const_5187.astype('float32'), [132,]), relay.reshape(var_5135.astype('uint8'), [6, 3]), relay.reshape(var_5181.astype('bool'), [168,]), ), 4)
bop_5191 = relay.floor_divide(call_5180.astype('float32'), relay.reshape(var_5181.astype('float32'), relay.shape_of(call_5180))) # shape=(2, 7, 12)
bop_5194 = relay.floor_divide(call_5182.astype('float32'), relay.reshape(var_5181.astype('float32'), relay.shape_of(call_5182))) # shape=(2, 7, 12)
output = relay.Tuple([bop_5127,call_5134,var_5135,call_5183,const_5184,var_5185,var_5186,const_5187,bop_5191,])
output2 = relay.Tuple([bop_5130,call_5136,var_5135,call_5188,const_5184,var_5185,var_5186,const_5187,bop_5194,])
func_5195 = relay.Function([var_5126,var_5135,var_5181,var_5185,var_5186,], output)
mod['func_5195'] = func_5195
mod = relay.transform.InferType()(mod)
var_5196 = relay.var("var_5196", dtype = "float32", shape = (650, 2))#candidate|5196|(650, 2)|var|float32
var_5197 = relay.var("var_5197", dtype = "uint8", shape = (6, 3))#candidate|5197|(6, 3)|var|uint8
var_5198 = relay.var("var_5198", dtype = "bool", shape = (42, 4))#candidate|5198|(42, 4)|var|bool
var_5199 = relay.var("var_5199", dtype = "float64", shape = (66,))#candidate|5199|(66,)|var|float64
var_5200 = relay.var("var_5200", dtype = "int64", shape = (11, 7))#candidate|5200|(11, 7)|var|int64
output = func_5195(var_5196,var_5197,var_5198,var_5199,var_5200,)
func_5201 = relay.Function([var_5196,var_5197,var_5198,var_5199,var_5200,], output)
mutated_mod['func_5201'] = func_5201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4409_call = mod.get_global_var('func_4409')
func_4410_call = mutated_mod.get_global_var('func_4410')
call_5214 = relay.TupleGetItem(func_4409_call(), 0)
call_5215 = relay.TupleGetItem(func_4410_call(), 0)
var_5217 = relay.var("var_5217", dtype = "float64", shape = (14, 11, 3))#candidate|5217|(14, 11, 3)|var|float64
bop_5218 = relay.maximum(call_5214.astype('float64'), var_5217.astype('float64')) # shape=(14, 11, 3)
bop_5221 = relay.maximum(call_5215.astype('float64'), var_5217.astype('float64')) # shape=(14, 11, 3)
output = relay.Tuple([bop_5218,])
output2 = relay.Tuple([bop_5221,])
func_5228 = relay.Function([var_5217,], output)
mod['func_5228'] = func_5228
mod = relay.transform.InferType()(mod)
mutated_mod['func_5228'] = func_5228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5229 = relay.var("var_5229", dtype = "float64", shape = (14, 11, 3))#candidate|5229|(14, 11, 3)|var|float64
func_5228_call = mutated_mod.get_global_var('func_5228')
call_5230 = func_5228_call(var_5229)
output = call_5230
func_5231 = relay.Function([var_5229], output)
mutated_mod['func_5231'] = func_5231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4492_call = mod.get_global_var('func_4492')
func_4494_call = mutated_mod.get_global_var('func_4494')
call_5297 = relay.TupleGetItem(func_4492_call(), 3)
call_5298 = relay.TupleGetItem(func_4494_call(), 3)
output = call_5297
output2 = call_5298
func_5313 = relay.Function([], output)
mod['func_5313'] = func_5313
mod = relay.transform.InferType()(mod)
output = func_5313()
func_5314 = relay.Function([], output)
mutated_mod['func_5314'] = func_5314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4603_call = mod.get_global_var('func_4603')
func_4604_call = mutated_mod.get_global_var('func_4604')
call_5417 = relay.TupleGetItem(func_4603_call(), 1)
call_5418 = relay.TupleGetItem(func_4604_call(), 1)
var_5426 = relay.var("var_5426", dtype = "bool", shape = (84, 2))#candidate|5426|(84, 2)|var|bool
bop_5427 = relay.not_equal(call_5417.astype('bool'), relay.reshape(var_5426.astype('bool'), relay.shape_of(call_5417))) # shape=(84, 2)
bop_5430 = relay.not_equal(call_5418.astype('bool'), relay.reshape(var_5426.astype('bool'), relay.shape_of(call_5418))) # shape=(84, 2)
bop_5431 = relay.greater_equal(call_5417.astype('bool'), relay.reshape(var_5426.astype('bool'), relay.shape_of(call_5417))) # shape=(84, 2)
bop_5434 = relay.greater_equal(call_5418.astype('bool'), relay.reshape(var_5426.astype('bool'), relay.shape_of(call_5418))) # shape=(84, 2)
output = relay.Tuple([bop_5427,bop_5431,])
output2 = relay.Tuple([bop_5430,bop_5434,])
func_5441 = relay.Function([var_5426,], output)
mod['func_5441'] = func_5441
mod = relay.transform.InferType()(mod)
var_5442 = relay.var("var_5442", dtype = "bool", shape = (84, 2))#candidate|5442|(84, 2)|var|bool
output = func_5441(var_5442)
func_5443 = relay.Function([var_5442], output)
mutated_mod['func_5443'] = func_5443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4638_call = mod.get_global_var('func_4638')
func_4639_call = mutated_mod.get_global_var('func_4639')
call_5471 = relay.TupleGetItem(func_4638_call(), 0)
call_5472 = relay.TupleGetItem(func_4639_call(), 0)
uop_5478 = relay.acosh(call_5471.astype('float32')) # shape=(650, 2)
uop_5480 = relay.acosh(call_5472.astype('float32')) # shape=(650, 2)
output = uop_5478
output2 = uop_5480
func_5481 = relay.Function([], output)
mod['func_5481'] = func_5481
mod = relay.transform.InferType()(mod)
output = func_5481()
func_5482 = relay.Function([], output)
mutated_mod['func_5482'] = func_5482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4669_call = mod.get_global_var('func_4669')
func_4670_call = mutated_mod.get_global_var('func_4670')
call_5490 = func_4669_call()
call_5491 = func_4669_call()
func_4922_call = mod.get_global_var('func_4922')
func_4927_call = mutated_mod.get_global_var('func_4927')
const_5495 = relay.const([0.071298,-3.366097,4.280700,-0.809125,-0.256875,9.796315,-0.791773,-2.883067,-3.090997,7.635800,-8.527464,-3.384340,9.618694,3.239306,9.338644,3.899295,0.935872,4.006251,0.679675,-0.236339,-6.146732,9.927531,3.023425,-4.701821,-1.952017,1.754777,0.651077,-9.161031,0.116081,5.728471,6.460662,4.349069,-4.103229,-7.878454,-4.443682,1.223995,-1.521526,-1.674755,-5.139201,7.169824,-3.605729,-7.927323,7.682286,-0.258210,-3.448907,6.469947,-4.293743,1.951776,8.766205,-5.786255,-8.823475,-2.001079,2.154766,5.687004,-2.016825,-8.872106,9.461693,-0.730181,4.868590,-7.157744,-7.184633,-9.847524,-7.718748,0.699391,2.946850,-8.769009,0.101870,-8.689170,2.860188,-5.873664,-3.544886,-2.399754,6.749075,-2.616924,5.494751,4.635548,2.864416,-1.899838,6.841300,6.838420,1.703150,-4.763918,2.028413,6.122487,-5.514380,-7.946793,-8.986067,8.156146,0.583314,6.115021,-0.980521,-1.590652,-9.710619,4.030447,-0.848791,-4.502751,-4.665821,-9.799857,7.373397,-6.197524,0.970393,-2.457542,6.944818,-2.436753,-0.441063,7.488433,-2.359747,-4.827684,-2.339179,-8.823841,-1.191284,4.236685,3.670820,-2.809989,0.080163,1.722049,8.705285,0.592719,8.915694,2.481044,5.869915,-2.907324,-5.013544,-5.664508,-8.021625,1.157801,8.487640,-0.558392,-0.780149,1.793574,7.470980,0.572832,-1.957026,-6.829193,-8.503601,5.496492,-8.691542,0.557315,-7.160954,-0.220669,-2.358216,-1.577816,-2.039093,-8.507626,7.389543,-0.410154,-1.600584,-8.944723,-3.022975,-0.715631,-3.969037,-5.879874,5.040814,-2.198492,3.648724,5.589737,-8.523930,4.272132,-9.504865,-3.010468,1.950832,-4.173913,-5.945410,8.705925,5.251985,9.371064,6.566558,8.942103,4.638260,9.218911,-3.471859,-7.120090,-9.116476,1.244602,3.178424,-5.795272,-7.180581,7.921197,6.291777,-4.888475,-8.651256,3.247434,6.676542,8.394498,-0.429563,-6.703009,3.978046,9.378396,-9.180511,-1.718667,-9.881741,5.173592,3.432278,7.070351,8.678256,-7.200385,5.527142,7.525442,-9.131814,6.427658,9.946298,7.395727,-8.591556,-1.754438,2.620189,7.369613,-7.951070,-5.970852,5.397996,-4.056378,0.019295,-4.926492,-0.729172,-6.388808,-3.048725,3.676501,7.864752,-6.506433,-9.653215,-0.746099,8.327864,9.144632,-4.579000,-8.581626,-3.654698,-4.457564,2.709930,-2.181336,5.043531,-2.673737,1.978046,3.368318,-6.120667,-1.585550,2.759484,-6.872782,-8.555748,-7.355073,5.281564,-9.487701,3.437376,-6.488732,-7.830886,7.813407,8.622916,2.561403,9.815926,9.740000,1.259076,-9.127236,-9.976926,4.958635,9.320328,-8.596765,-6.642562,-8.281432,4.545329,-6.932140,3.670330,4.916254,7.096315,6.529489,-5.139404,-4.714282,7.896766,-6.528393,2.887556,-7.436863,2.503899,-7.269286,-4.724532,8.268818,2.594907,3.025639,4.555492,5.894456,4.450331,-2.260640,9.782220,9.159961,7.711216,-1.207840,-0.334024,9.744293,4.905435,4.215359,-1.583455,-0.153401,5.821352,8.917679,-6.998083,0.236460,0.569975,2.899440,0.550538,2.579270,-8.467417,2.009333,9.388295,-8.578520,-0.006085,-8.034081,3.894249,-8.998093,-6.540896,1.049274,-4.587904,-2.745435,-0.736716,-8.206203,8.522311,9.999566,-1.569066,-6.508362,8.981869,-8.662302,-9.859409,9.846873,5.351208,-7.484480,9.355087,0.827201,9.777692,1.790615,8.916227,9.450823,-0.916058,1.627904,4.446006,-5.789474,-1.457332,6.658756,9.014084,-9.009211,-2.165159,-9.886097,7.018375,-7.489200,1.047295,-8.630235,5.929406,8.100799,-0.084582,-1.826513,-0.197046,2.715745,-1.913112,-5.973616,7.306706,-2.531221,8.594507,0.560121,-1.728264,6.470462,4.472683,4.194302,7.260062,-3.380114,4.683473,-3.624657,9.289503,-5.574962,-9.310219,2.162035,-6.658011,9.057359,-0.266609,-6.114702,-1.523933,5.378410,3.240697,5.116496,4.865268,7.799289,-9.031815,1.916286,8.783579,3.117155,-7.704769,5.286424,8.339870,-5.934433,6.175818,-1.174907,5.640087,0.078539,-9.775633,2.601621,9.067132,-3.315821,-9.464824,1.513858,-4.418241,6.879965,-3.392979,5.635055,-8.281979,9.302681,-1.630059,2.801642,2.751556,-1.130776,5.753969,-1.582621,-8.973343,7.435191,-3.315669,-5.922491,1.818297,2.978293,-2.714785,5.084797,-3.789266,-6.078125,9.271830,-5.619788,9.658217,-5.152533,2.031427,4.450619,-4.983695,-3.118211,3.837207,6.869127,4.863037,-5.136707,7.281928,-4.574659,2.473697,-8.204341,-7.595388,7.750323,5.117459,1.539286,-2.666542,4.539573,3.263411,3.625667,-4.781647,1.510043,4.958899,-6.951276,-4.061765,0.403379,1.510636,-9.496942,-0.890375,2.957367,0.811591,-8.801689,7.778079,-2.413798,-7.271125,-8.320390,-4.108994,-8.431004,2.967127,-1.653156,2.715718,1.143606,7.522612,-0.122491,-1.683856,-7.142496,-2.351478,1.960024,-0.045549,-3.173104,-2.228538,6.160693,8.112639,-5.006368,-2.809924,-5.275007,-4.357586,4.742523,7.367855,-8.706628,4.051330,5.638152,8.314312,-9.393583,3.839166,-3.380020,7.569077,-9.930506,3.440040,5.276910,-2.471098,7.919896,-4.808031,-6.801587,5.985106,4.112471,7.885648,-0.457460,9.363952,-7.552413,-7.461153,-8.010399,5.878592,-1.273900,-0.077742,-5.692962,6.361537,5.421711,-3.116193,6.183851,-2.343578,3.069308,6.353940,9.657300,-0.060290,9.520326,-9.688513,-4.267436,4.384394,0.253677,-4.626744,-5.810657,3.672737,2.349942,2.157535,5.825851,7.758666,-8.728313,6.480852,-5.522558,9.462543,-8.889165,4.361333,2.559362,0.719613,-6.095012,3.706435,4.351751,5.201493,-0.456916,2.423312,-2.499440,-4.535012,7.784915,-2.018374,9.364524,-0.403201,-9.427513,-3.475968,-3.625049,-8.591961,-9.335546,7.307823,-8.958880,-7.385414,1.544000,2.027379,2.002805,-3.456449,3.264167,-8.515876,5.269738,-4.994185,-0.711318,4.249879,-6.572537,-0.298428,0.857927,-3.520392,-5.159685,0.337206,-1.283401,1.632374,-9.538552,-1.679075,1.330782,5.782439,3.252880,-0.894285,-3.621211,-3.267601,3.418404,9.518021,-4.074927,-5.607129,0.271393,0.722877,-2.343534,8.498285,-6.532701,-1.618278,-5.807684,-8.545598,9.717978,3.495638,2.354145,-3.300737,-1.981231,1.937554,3.199471,0.106647,7.082507,-5.344345,-2.534808,8.186394,-1.831296,-9.161610,9.042274,-4.202572,4.138117,-0.929215,-9.655856,8.770892,6.926434,0.189117,-4.717113,9.605648,6.519954,-1.673390,5.837880,4.982611,6.035370,-3.037666,-8.508133,-8.480414,-3.646973,-0.955019,6.564994,-6.405079,4.972120,-3.618193,-7.429127,8.195148,8.215840,3.481047,4.571285,-7.251663,-9.378664,3.998237,-4.619693,-9.455186,2.342939,2.470512,-2.624155,6.134341,8.980017,-9.108230,9.089838,-4.849285,7.546508,8.499807,-5.276016,4.816401,-5.657801,2.803853,-4.961084,8.398652,0.481353,0.298454,-7.865433,5.704986,-4.820430,-1.522580,4.037194,-0.588661,-1.390321,-6.038016,-5.819754,-2.027405,-5.367667,6.287238,6.208726,-8.857163,9.922203,1.239271,-0.412884,0.539370,-1.300408,-1.187954,-9.964537,-1.164514,-8.365598,4.880362,-6.592726,6.300679,-9.107805,-3.646870,-1.285315,-4.409249,-7.658838,9.966720,-9.890776,5.992014,-2.842226,-3.997686,-9.883187,-1.188434,8.635285,9.317642,6.482701,7.446669,8.360294,5.373210,-3.783840,7.336152,7.619549,-0.535432,-7.585200,-5.692716,7.143464,2.699448,9.602143,9.981893,-9.418546,7.930252,1.847910,4.376242,-2.595018,-1.276599,-2.333282,4.440667,6.870982,9.353706,3.455421,-8.492362,-6.482722,-1.998613,1.945266,0.234614,6.230567,1.253567,6.071981,8.927995,-7.556859,-0.030137,-1.041393,-3.205701,6.731662,7.348320,-5.028743,-0.389350,2.637385,-1.503810,-2.880958,-3.825314,-8.754440,-6.533968,-5.767512,0.858061,-5.310486,5.775169,3.596434,-0.406138,8.234296,8.343326,4.274668,7.690624,2.768568,-5.678682,4.666269,4.865444,-8.745843,0.094420,9.709860,8.834938,-6.138631,-2.632625,4.893755,8.938429,-2.737762,-7.488039,-9.669889,1.750194,4.999195,2.635860,-6.978927,8.734947,-1.683887,-1.212318,8.748272,3.124610,-7.755866,-2.488754,-4.264910,3.363813,-2.613254,8.349306,8.704185,-1.315313,-4.584531,9.055204,-8.295334,5.428154,6.006876,6.378554,-6.373504,-7.014080,-0.972320,-9.628433,-3.154765,-7.130097,3.921813,2.266489,-0.007725,6.395794,1.743869,2.102215,9.967318,4.198822,-4.722992,-3.525248,1.507697,-9.830985,2.960587,6.619068,-0.187491,-6.318691,8.224527,-1.700056,-4.878107,-9.596876,-3.981752,0.019264,-3.403537,-1.993811,7.090802,2.777124,5.891513,3.067503,-4.879196,8.963254,-8.217345,-3.035702,2.988350,1.257789,6.419325,-9.459382,1.486861,3.163001,-2.801593,4.952315,-8.123282,-9.632436,-5.902230,-5.471579,-9.151812,3.375572,-3.122356,-7.547253,-4.356779,1.202220,1.156815,3.969256,3.798276,8.153782,-1.188220,-2.366549,9.388969,-1.172192,-4.823377,7.166590,-1.785327,1.272775,-5.830223,5.898238,7.124338,-8.379076,-7.148244,9.591846,6.018249,8.086942,7.001155,-4.860285,-9.720442,-0.565473,-3.143833,-2.194506,-8.847741,6.473709,5.040515,7.825093,7.576375,-7.937881,0.819639,3.956544,-6.914967,-4.616050,-1.493496,-1.392613,-1.797038,3.891709,-3.632259,3.644145,8.896730,-2.211069,2.483995,3.359120,4.193058,-4.670322,-7.547492,6.412868,-4.738633,-5.825113,9.747661,-7.162091,-4.005248,-7.298257,9.649603,3.180926,-2.156215,0.189386,-2.977448,-8.554144,-7.434454,-7.069182,-6.120588,4.963284,-4.486944,-2.014148,5.308442,2.758217,-0.412918,-6.991605,7.827166,9.324900,0.012120,-7.188426,5.104280,-5.583896,2.252433,-7.283242,-6.812758,7.355117,-9.980698,-4.312310,-2.183924,4.430232,3.782326,-5.637812,5.112710,-7.284568,-6.437764,-4.352569,2.703347,-7.483038,-9.214248,3.155866,-4.891258,3.674119,-6.601916,-1.161194,1.176281,8.103380,-3.928373,2.552773,3.686060,-0.407351,-0.251488,-5.378386,5.876460,2.962441,1.232273,3.276638,0.668338,-9.645453,-4.294900,-6.833422,-7.907544,0.514976,7.587032,4.490720,-5.631163,-2.896102,-2.484599,8.717653,7.601607,3.010514,1.963600,3.098397,1.121660,-6.719548,-6.606828,4.151536,-1.130499,6.648546,-6.872502,0.543700,1.923451,9.799400,-3.556289,5.302342,9.639327,-5.856630,0.334683,9.790047,-7.064614,8.256846,-9.249204,6.462244,0.915741,-3.205498,8.321618,-1.274660,-7.637051,1.717982,-6.438138,-5.347056,9.113152,-3.553982,-9.223355,-2.386949,0.913962,-7.308582,-1.500806,3.154398,-9.833659,8.660191,3.654090,-7.245249,-0.331572,-7.040321,3.395114,-1.967479,3.101906,9.062918,6.773329,-8.949458,6.271148,-2.081174,9.026908,1.837110,-1.286228,9.664810,4.191828,5.690336,7.418054,-0.440538,-5.522267,-0.853574,-4.258309,-8.015628,6.518692,-8.486824,3.622687,-4.402672,-1.657750,-4.033321,6.476862,-6.272727,-6.402606,-3.592809,2.216409,-2.133335,0.624127,-4.199127,-5.771247,3.360761,7.866742,3.660227,4.398623,7.455918,6.140172,-9.131308,-2.082898,2.378450,-1.093840,-3.574719,4.037408,0.515530,3.110554,-7.522508,-6.723933,5.071243,9.983887,-6.566005,5.316708,8.422502,-4.954758,2.309756,-5.637212,2.586825,-6.081243,8.918818,-0.674718,-3.712096,-0.216929,1.411843,9.329590,-2.238577,6.470473,3.392383,8.429947,-9.932489,-0.741245,-9.073056,-0.538664,7.450197,5.019929,-1.679365,6.482295,-9.027068,2.658566,3.089834,-7.955008,-8.521801,-9.486034,-6.069958,-5.328686,8.074867,-3.706110,2.908268,6.607098,1.872058,6.440870,-2.845760,1.939277,-3.320482,0.051014,8.575609,-9.774347,8.809052,9.024047,-1.246328,-7.741508,-0.099270,1.977247,-3.905538,-8.678464,1.707997,4.359505,-1.020445,-0.610374,-9.694131,-4.958970,-0.075222,8.428587,-7.335624,3.316598,-6.994501,-5.432019,9.547424,-2.020951,8.618649,8.990546,8.448252,-1.468517,1.700919,-4.149835,-0.923094,0.504113,6.055125,6.734717,9.379525,-9.343163,-8.611835,-4.569456,-7.939103,3.682568,0.624412,1.136234,-2.634886,3.495027,-1.722036,8.536402,-9.868333,7.351348,7.487465,1.713273,-7.482106,-0.279274,8.200742,-2.853036,5.902239,3.946525,-6.717299,3.381093,-2.599889,6.873569,7.428995,-6.706167,0.766048,3.029071,-4.516196,-2.464464,0.754789,0.613655,7.619197,-7.072835,-5.047113,-4.147407,-0.673772,6.689860,-8.148344,-0.887844,4.482544,7.075868,-5.095002,2.933066,-4.690099,4.926316,-4.250747,-7.395786,-1.264110,-6.751742,-5.449511,-7.104934,2.173058,6.881327,-4.620026,0.795826,-1.932210,-6.562381,7.720614,8.526631,7.184271,6.612293,-9.124880,-3.946329,0.831600,1.810864,4.490958,-4.093394,4.819248,-3.859498,2.221705,2.783161,-1.979425,8.938735,9.833365,2.912430,0.571621,-4.736445,-6.492533,3.580741,9.360817,4.957036,-7.932863,5.471329,-3.151206,6.842315,3.908734,5.282087,-0.607259,-7.966093,-5.441939,1.661793,-0.688474,5.414391,-7.598969,-4.637827,0.672239,-8.971596,-4.333116,0.249251,6.711852,-7.659467,1.217936,-4.165741,-9.232711,1.716079,5.791311,7.104103,-2.309420,-8.116514,8.279287,-2.399360,8.853086,-3.490471,8.710668,-4.240402,-9.831376,5.559105,-4.359778,3.049071,-5.236164,4.437281,3.853794,-7.796664,8.573218,-9.205682,2.629020,8.332060,6.295381,-6.296577,6.152952,1.008333,-3.843930,0.872292,2.491393,8.235400,6.349671,7.471002,1.017333,-3.541398,-0.209642,8.146912,-7.126577,-6.169553,-1.912505,-2.922798,9.991866,5.421335], dtype = "float32")#candidate|5495|(1300,)|const|float32
var_5496 = relay.var("var_5496", dtype = "float64", shape = ())#candidate|5496|()|var|float64
const_5497 = relay.const([-1.718020,6.130245,-4.160354,7.176208,-7.301055,-6.993745,0.064426,-2.985993,-9.330646,4.385720,2.507236,3.778329,-1.992243,9.848928,0.928592,-0.811874,-2.430878,7.956325,5.030550,2.071162,-9.504006,0.845350,-6.234981,-5.247936,7.337111,5.356743,-2.879093,4.792367,7.069818,-7.221755,-1.781527,-0.559856,1.305354,-8.665602,-0.498590,-4.162791,8.222240,-2.962948,0.667722,-1.248471,-8.789411,8.311604,-7.473023,7.244130,-7.596667,-1.877358,2.871729,7.152938,-7.238938,5.088772,7.456891,-1.040115,9.176618,1.249579,2.011380,4.413929,6.098956,-8.670634,-3.217425,0.117947,-9.171936,6.090583,-5.141125,-5.899688,-2.109063,4.438996,4.601669,-5.524329,5.160385,3.593723,-7.520334,-2.281726,-4.349155,0.847398,2.477293,5.866440,0.677089,8.525885,8.953973,-3.192654,3.554851,6.808910,9.126684,5.535289,3.770736,4.011545,-7.652811,-9.200714,5.931458,2.799281,-4.130857,-5.212326,5.826210,-5.583166,2.308940,8.345332,-0.716209,5.992963,-5.109206,-3.587131,5.327185,3.306942,-5.649574,-1.597544,-9.583074,-4.926154,-8.615750,-1.098748,-3.014453,-7.947799,2.084431,-7.672860,9.772742,-3.373005,-6.470682,3.306665,-8.983925,4.740251,-6.195316,-6.650707,9.647103,-8.462527,6.912620,-0.449571,1.758961,5.805191,-9.244084,-9.478189,1.718603,9.242932,-2.524759,-8.329192,-8.775686,4.113072,6.562711,1.174117,-8.471852,1.341500,-4.299086,0.556569,-5.579763,-7.695174,-2.549732,-3.118230,0.980617,5.059102,5.727971,5.732613,-4.935536,-2.716004,-2.378266,-6.352208,9.525623,0.204060,9.765188,4.633993,7.813048,-9.892777,0.999924,-7.011399,9.392885,-9.452623,0.639356,-7.851026,-1.792059,0.590104,-1.159221,9.588461,1.839431,0.871497,8.018652,4.386414,-1.093962,-6.547910,-2.531737,5.603491,-6.012653,-5.159330,0.311488,2.000457,-6.290146,-1.178110,0.961415,-6.870924,-1.254672,2.672962,4.680347,0.719467,4.920846,9.020952,-9.304216,1.595164,-7.614680,-0.057419,-0.107229,2.759010,-4.027003,0.161087,0.686090,3.226647,9.421953,8.844037,8.021490,-7.646579,-2.876831,-0.644296,-3.602186,8.315039,-0.137112,-1.488910,-2.979323,2.468147,-9.027597,-2.885374,-5.714473,1.071097,-3.569068,-3.477798,2.206778,-0.668187,-6.203093,-4.957230,-5.520075,3.574647,6.902596,9.818873,5.754449,7.470966,4.874039,7.503994,3.289446,8.312304,4.470812,5.238887,9.416846,-8.498801,-4.791108,-3.383446,4.847383,9.027428,-2.038666,-5.293464,9.463588,1.726245,9.394588,2.824199,9.836113,-8.373689,-0.210692,-0.437391,-5.661349,-4.781665,6.484707,9.604965,-7.048678,-0.620104,-7.674013,3.348100,-7.751145,-7.189947,4.999386,-7.382098,1.211643,-1.389012,-2.661358,9.439214,0.320047,5.854921,-3.310042,1.547959,-6.428716,8.221674,-6.533921,-1.300190,0.348164,-8.545602,-9.055089,-2.712917,-6.135197,-5.107643,0.357014,2.679789,2.616984,9.273473,2.639090,-9.174401,-7.459056,-4.214323,-8.584809,6.123716,-3.066446,6.155388,-7.525154,-8.477951,-5.997711,0.704834,-1.869269,-5.695430,-6.221733,6.106135,2.342317,6.323095,-5.497105,-4.998389,-6.972135,-7.452260,-2.303698,-9.692069,4.096676,6.076223,4.334511,5.692031,6.007886,1.359508,-0.623382,6.855779,-7.893251,3.101591,6.527514,-8.502553,-8.077731,-1.652314,-0.430938,9.044946,0.619403,3.996878,-2.360710,-5.534187,-9.712019,3.660612,-8.270925,-7.873616,2.139653,3.619606,-6.742923,-7.632871,5.520290,6.676576,0.851491,8.239990,2.399432,1.040109,-7.158693,7.201728,8.654443,7.522731,3.897900,9.463072,9.891183,8.742814,-7.760632,-3.475766,-7.623114,4.710478,8.070099,-7.550189,5.820307,-5.131900,5.388717,-7.514361,-6.835180,8.740768,-6.477422,-3.369404,8.996025,0.788716,6.581460,9.999811,6.053833,-0.588701,-9.676862,4.508087,-6.853150,9.417926,3.906009,6.785175,3.710289,4.721371,7.080557,0.276051,-8.430955,-8.744387,1.283466,8.543211,-5.156567,5.635331,1.559146,-5.739154,-0.530383,4.183086,2.489712,0.146575,8.172373,-9.978950,-8.110381,-1.574099,-3.338255,-1.648889,-9.950523,-4.393230,4.488987,1.833777,-6.122671,6.670707,8.660669,-8.652544,0.835190,2.258123,6.418841,2.998489,-2.893474,-0.790439,-3.366364,-4.246974,-2.121758,3.486501,-6.442287,-6.020056,-8.535586,2.593474,6.467740,-3.736988,1.887432,9.606777,-5.943154,-3.897253,-7.930576,7.800629,0.291402,-8.093552,6.103164,-5.986070,-1.618429,-6.615178,-2.354552,6.617462,-7.684479,-6.474249,0.996173,-3.988262,-2.017913,-3.309738,0.171609,5.505278,3.051984,-7.305251,9.692068,-8.788593,-6.863227,-9.562178,-1.310547,-3.495616,2.338564,-2.410363,-2.014227,-0.165368,5.497980,-8.660639,6.542615,-5.225713,9.936411,2.927946,3.620742,-4.041392,-8.146145,-4.535502,-1.013814,0.102507,6.551539,1.037755,-0.424360,-9.172795,-2.328978,-5.909443,-4.214170,5.557763,-2.366600,-8.177676,-5.453968,3.517189,8.687375,-3.777274,-1.988335,0.708272,5.743790,3.203165,5.326156,-8.317632,-7.628647,1.761030,6.752725,-5.224985,2.702166,5.156454,-2.122292,-8.816104,-9.345795,4.554024,6.455353,-8.146579,7.555581,-9.491286,8.269340,0.459789,-9.901152,-3.508426,2.918236,7.319828,1.932488,-3.318277,8.677338,5.741031,0.591467,-6.617434,6.675984,-2.162161,-0.739532,8.568154,8.092760,-9.917125,2.739926,8.951486,5.090648,3.455365,3.823012,-1.266682,4.728601,-8.740831,9.817225,9.842787,2.087568,0.061895,-2.260154,3.345801,9.083978,7.535939,-3.884805,6.033240,6.382919,-7.587300,9.200474,4.211509,-2.533337,3.073918,-3.740941,-5.751820,-3.561150,-9.891567,0.232859,-4.381694,6.300279,6.163849,-7.254690,4.352206,-8.009897,-9.106528,4.494421,-9.829428,4.560780,5.735345,-5.668993,3.733244,2.861395,4.717371,3.581917,-1.831376,-0.588008,-7.761947,-8.941553,-4.529209,3.210633,-7.218208,7.254433,-3.613053,6.554744,-8.969321,-2.417146,-8.168144,9.489472,-9.783097,-2.504268,1.449984,-5.678871,3.317685,-1.487590,2.437429,1.187495,-7.821182,-8.959983,7.484957,-4.008262,6.495847,-9.429179,-0.449345,-4.847302,-5.756462,7.278719,6.241811,-3.929293,1.156016,-2.496008,-2.622247,-3.866344,-5.718007,-4.613087,-5.886566,-2.147146,7.859304,-4.678416,-9.025900,-0.647679,3.916650,2.481367,4.899504,7.795656,-2.087172,-8.494488,5.547433,3.322888,5.591582,-2.872861,-9.069292,-2.605971,8.955992,4.624518,0.477126,-6.143782,-0.598455,3.734309,1.764394,-1.969943,-7.288355,3.327871,9.427413,-7.352450,-7.969797,3.901914,3.243466,-6.058839,-7.285090,-6.106478,2.031504,-6.691440,-1.572842,4.871169,-5.277276,3.180941,-5.622069,9.472045,9.130551,1.284176,-0.449987,-5.074134,-5.737925,-2.727540,3.827532,-5.751865,7.947300,-8.243299,-4.572484,-3.790698,4.804928,9.811689,-0.183243,8.938691,-8.233931,8.929562,6.468351,-4.701497,-5.242993,-4.726320,-9.657022,-2.382385,0.035507,8.885177,-7.866067,2.255393,-3.963893,-0.752391,0.573729,-0.416795,-3.306774,-0.228318,-8.979954,8.286602,8.064876,-9.300307,-0.882508,3.395457,3.172266,1.688990,-4.380247,2.705709,8.140948,9.544544,8.758986,0.251147,7.201042,-2.843404,-3.638667,-7.796584,6.457543,9.343614,5.300110,-0.903856,-4.497921,5.772094,-9.159364,6.534002,-3.062602,-2.020021,-3.041929,2.914551,3.348488,7.445849,0.142795,7.870033,-4.907901,-3.083515,3.647760,-5.951755,-6.415108,4.075883,-6.603244,-2.724915,5.450885,0.343115,-5.030820,-5.753027,-5.804744,-9.308259,2.788070,-3.348055,-8.191416,-0.180410,0.029634,9.078463,-0.666192,-0.675392,2.069371,3.066331,4.764495,1.293416,4.295368,9.134213,4.193875,3.921638,8.005100,6.792152,-2.581457,-9.727519,-9.661854,7.930968,-1.445147,-6.268735,-5.779584,-7.028962,-7.229565,-7.778793,8.427743,2.487395,5.051729,-2.061583,-2.778190,-3.529327,5.654953,9.629249,3.813266,-7.468229,-0.184460,8.016629,-3.090756,2.332892,1.583919,-0.407146,1.940060,-0.481202,-0.305838,-7.972897,-2.745024,1.895455,1.011312,1.313908,0.396031,-4.239566,-1.772800,-8.830140,7.656684,3.556896,9.509961,-2.688888,0.149939], dtype = "float32")#candidate|5497|(792,)|const|float32
call_5494 = relay.TupleGetItem(func_4922_call(relay.reshape(const_5495.astype('float32'), [1, 1300]), relay.reshape(var_5496.astype('float64'), []), relay.reshape(const_5497.astype('float32'), [792,]), ), 14)
call_5498 = relay.TupleGetItem(func_4927_call(relay.reshape(const_5495.astype('float32'), [1, 1300]), relay.reshape(var_5496.astype('float64'), []), relay.reshape(const_5497.astype('float32'), [792,]), ), 14)
uop_5506 = relay.log10(const_5495.astype('float32')) # shape=(1300,)
func_2737_call = mod.get_global_var('func_2737')
func_2741_call = mutated_mod.get_global_var('func_2741')
var_5516 = relay.var("var_5516", dtype = "float64", shape = (256,))#candidate|5516|(256,)|var|float64
var_5517 = relay.var("var_5517", dtype = "uint8", shape = (3, 6))#candidate|5517|(3, 6)|var|uint8
call_5515 = relay.TupleGetItem(func_2737_call(relay.reshape(var_5496.astype('float64'), []), relay.reshape(var_5516.astype('float64'), [16, 4, 4]), relay.reshape(var_5517.astype('uint8'), [18,]), ), 0)
call_5518 = relay.TupleGetItem(func_2741_call(relay.reshape(var_5496.astype('float64'), []), relay.reshape(var_5516.astype('float64'), [16, 4, 4]), relay.reshape(var_5517.astype('uint8'), [18,]), ), 0)
func_1744_call = mod.get_global_var('func_1744')
func_1750_call = mutated_mod.get_global_var('func_1750')
const_5524 = relay.const([-0.206169,3.992878,-0.514851,3.327310,4.223746,3.492315,-3.230832,-9.854445,-0.033847,-1.719557,-5.391140,-7.638220,-7.858650,9.045801,3.978822,8.823687,5.363702,-0.315291,-2.573195,-1.054012,2.386454,3.039078,0.168676,-9.365285,6.814684,2.772127,-1.612517,-1.853104,6.403191,-2.326756,2.496582,-9.331479,9.078809,3.047115,-4.030979,4.322717,2.323180,3.196383,-4.942199,-0.592348,0.370478,-3.708885,-9.285610,-6.387135,-5.970202,-9.804509,-2.567944,-3.520926,4.099014,7.137803,1.145134,9.345552,4.848945,1.651100,-4.104376,5.820757,-6.745985,-5.153677,-3.831922,-0.755293,7.549923,2.833146,0.103970,9.710629,0.993555,9.547805,4.932466,1.826256,0.165729,6.346805,-5.557755,5.774047,-2.724686,6.921545,1.003490,6.496017,4.065180,-4.825753,-6.333616,7.756909,1.885424,0.080999,-6.748866,9.825919,2.897132,0.921607,-1.802266,-4.503966,-2.740658,8.170079,7.103038,6.454110,4.260986,-2.373672,9.024490,0.278992,-8.791556,-1.640236,5.007997,-5.982434,-4.717001,4.241073,5.108478,8.888927,1.113182,4.932306,9.112524,7.998850,-6.407535,-5.135308,-6.626918,-3.218817,-0.532486,9.444449,0.042133,2.979622,3.782675,-3.618531,-3.690401,3.637430,-0.272121,6.231405,4.703011,6.536513,-8.222459,5.022323,6.329892,8.636913,-4.129768,-5.542712,-2.736868,9.046479], dtype = "float32")#candidate|5524|(132,)|const|float32
var_5525 = relay.var("var_5525", dtype = "float64", shape = (84,))#candidate|5525|(84,)|var|float64
var_5526 = relay.var("var_5526", dtype = "int64", shape = (77,))#candidate|5526|(77,)|var|int64
call_5523 = relay.TupleGetItem(func_1744_call(relay.reshape(const_5524.astype('float32'), [132,]), relay.reshape(const_5497.astype('float32'), [792,]), relay.reshape(var_5525.astype('float64'), [84, 1]), relay.reshape(var_5526.astype('int64'), [77,]), ), 1)
call_5527 = relay.TupleGetItem(func_1750_call(relay.reshape(const_5524.astype('float32'), [132,]), relay.reshape(const_5497.astype('float32'), [792,]), relay.reshape(var_5525.astype('float64'), [84, 1]), relay.reshape(var_5526.astype('int64'), [77,]), ), 1)
output = relay.Tuple([call_5490,call_5494,var_5496,const_5497,uop_5506,call_5515,var_5516,var_5517,call_5523,const_5524,var_5525,var_5526,])
output2 = relay.Tuple([call_5491,call_5498,var_5496,const_5497,uop_5506,call_5518,var_5516,var_5517,call_5527,const_5524,var_5525,var_5526,])
func_5529 = relay.Function([var_5496,var_5516,var_5517,var_5525,var_5526,], output)
mod['func_5529'] = func_5529
mod = relay.transform.InferType()(mod)
var_5530 = relay.var("var_5530", dtype = "float64", shape = ())#candidate|5530|()|var|float64
var_5531 = relay.var("var_5531", dtype = "float64", shape = (256,))#candidate|5531|(256,)|var|float64
var_5532 = relay.var("var_5532", dtype = "uint8", shape = (3, 6))#candidate|5532|(3, 6)|var|uint8
var_5533 = relay.var("var_5533", dtype = "float64", shape = (84,))#candidate|5533|(84,)|var|float64
var_5534 = relay.var("var_5534", dtype = "int64", shape = (77,))#candidate|5534|(77,)|var|int64
output = func_5529(var_5530,var_5531,var_5532,var_5533,var_5534,)
func_5535 = relay.Function([var_5530,var_5531,var_5532,var_5533,var_5534,], output)
mutated_mod['func_5535'] = func_5535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5313_call = mod.get_global_var('func_5313')
func_5314_call = mutated_mod.get_global_var('func_5314')
call_5543 = func_5313_call()
call_5544 = func_5313_call()
output = relay.Tuple([call_5543,])
output2 = relay.Tuple([call_5544,])
func_5549 = relay.Function([], output)
mod['func_5549'] = func_5549
mod = relay.transform.InferType()(mod)
output = func_5549()
func_5550 = relay.Function([], output)
mutated_mod['func_5550'] = func_5550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5608 = relay.var("var_5608", dtype = "int16", shape = (12, 6, 9))#candidate|5608|(12, 6, 9)|var|int16
var_5609 = relay.var("var_5609", dtype = "int16", shape = (12, 6, 9))#candidate|5609|(12, 6, 9)|var|int16
bop_5610 = relay.left_shift(var_5608.astype('int16'), relay.reshape(var_5609.astype('int16'), relay.shape_of(var_5608))) # shape=(12, 6, 9)
output = bop_5610
output2 = bop_5610
func_5626 = relay.Function([var_5608,var_5609,], output)
mod['func_5626'] = func_5626
mod = relay.transform.InferType()(mod)
var_5627 = relay.var("var_5627", dtype = "int16", shape = (12, 6, 9))#candidate|5627|(12, 6, 9)|var|int16
var_5628 = relay.var("var_5628", dtype = "int16", shape = (12, 6, 9))#candidate|5628|(12, 6, 9)|var|int16
output = func_5626(var_5627,var_5628,)
func_5629 = relay.Function([var_5627,var_5628,], output)
mutated_mod['func_5629'] = func_5629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5481_call = mod.get_global_var('func_5481')
func_5482_call = mutated_mod.get_global_var('func_5482')
call_5634 = func_5481_call()
call_5635 = func_5481_call()
const_5636 = relay.const([[-1.440520,7.538384],[-2.115486,-3.261786],[-4.326577,-6.134001],[0.997448,2.434776],[6.682069,9.805101],[9.747063,7.970831],[-5.196692,-4.136577],[4.649699,3.287379],[-3.784288,-6.291267],[4.131201,6.131974],[-2.974179,-1.790663],[-7.538084,5.702316],[-6.240944,-3.411621],[8.086362,9.983403],[0.183029,5.962793],[5.389015,5.264114],[1.532067,-9.394043],[-5.020286,-9.509471],[6.626537,-2.233260],[-2.264011,9.194493],[0.255276,-3.460810],[3.685137,-0.129333],[-3.333988,-8.536750],[-9.264061,0.658946],[0.978459,9.590429],[-2.569087,-9.943222],[-9.111286,1.408700],[7.334623,-7.821576],[5.569118,4.331825],[-5.363067,7.099423],[1.366298,-1.588514],[2.418643,8.596854],[3.155058,4.166523],[-6.542552,7.874910],[-3.874980,3.652481],[5.173438,-4.273583],[5.540964,-2.007840],[-2.932236,-8.945916],[2.576442,1.548148],[-5.483162,1.615298],[5.397249,7.723460],[-8.699380,4.809863],[-4.224023,-9.973510],[-1.390259,-3.752375],[6.022977,2.779191],[-3.583102,9.764071],[-4.517850,8.114625],[-4.136424,-2.574610],[5.089278,3.730295],[-6.323667,-3.720441],[-4.048263,-9.116198],[-2.473861,-0.232175],[9.038452,3.543178],[0.953608,2.596731],[9.401960,-4.448387],[4.385856,-2.404482],[6.900022,9.475042],[-2.251499,-7.643814],[-8.978220,7.463189],[6.456393,-6.700469],[7.584322,-4.989622],[9.057053,-1.204882],[-2.537054,-5.422680],[9.639965,-6.546025],[-9.011781,-7.174852],[-9.718009,5.346057],[1.632549,8.614511],[-9.789901,-9.813798],[1.709511,-8.543726],[-2.983940,1.977323],[-5.231236,9.474973],[-9.720008,-9.284013],[6.160059,2.408898],[2.717962,-7.975618],[3.453352,0.879238],[-8.919081,2.082222],[-5.030151,-4.982037],[-1.789518,-1.687863],[7.633658,-7.285544],[5.350517,-4.480438],[4.104325,-7.742379],[4.311958,-9.588015],[-5.443870,-7.911607],[8.712423,-7.260329],[-5.814428,-4.677106],[8.954710,6.190326],[-8.981417,-9.684198],[-3.800932,-6.436891],[2.469720,-0.593380],[-8.811535,6.806754],[-5.947993,3.594717],[-7.757955,4.946154],[-0.443577,4.192335],[-6.761644,-0.849404],[4.363747,2.849487],[6.242241,9.765371],[-7.987351,8.600162],[-9.050547,-4.970680],[8.654749,-7.842835],[4.342362,-7.148133],[-6.115017,9.051137],[-3.299502,4.908485],[6.119966,8.794537],[9.048847,0.746590],[-7.196812,-1.016074],[0.671452,3.323866],[-5.771950,-6.889005],[5.146163,8.417955],[8.992965,9.811193],[-0.248347,9.568888],[7.518038,-5.938048],[2.221674,-0.335848],[8.281594,5.377049],[5.767129,3.928740],[-2.853048,-7.787485],[-7.030740,6.942719],[-1.715796,9.170977],[-4.932640,-2.079489],[2.270202,-6.308669],[-1.556986,-8.016634],[7.076867,3.697742],[-6.919151,-6.725944],[-5.459977,-4.007230],[-4.723671,-1.886869],[-2.374150,6.083098],[-5.538043,-2.939697],[-1.235200,3.612784],[-9.966610,-6.503264],[9.685638,-9.104127],[-7.531209,-0.014607],[7.247594,6.158111],[9.858542,2.777934],[3.941176,-3.282143],[-2.885411,7.195576],[8.345243,-1.263121],[-0.266346,8.459318],[-0.463675,1.548009],[-8.017939,0.985919],[2.486766,3.380439],[9.255480,-1.008559],[5.061912,-8.380981],[-8.047870,-8.736469],[-0.230785,7.041505],[-6.105294,-3.265025],[-9.908434,2.273945],[-7.028863,5.275251],[-3.480812,-6.872622],[4.150498,-0.172844],[8.302199,-6.311670],[0.585679,7.688029],[2.619001,-0.107560],[4.900288,-9.292607],[4.947800,-9.811222],[5.782515,5.925471],[-7.720331,7.643916],[-0.329790,-7.405484],[-5.412226,0.233585],[7.230217,-5.773368],[9.892078,-4.272860],[6.527264,5.347362],[7.732351,-0.893070],[3.844902,-4.767470],[2.887161,7.946475],[1.890818,7.157905],[-9.809390,9.893052],[1.504019,8.698306],[8.366501,7.034138],[-4.430104,6.727528],[-0.871662,-5.230711],[6.622326,1.995372],[-1.404015,-5.526996],[-1.687170,-9.231708],[0.179476,2.062603],[4.516586,0.584540],[-1.786197,0.041597],[9.138344,-6.208431],[1.432121,4.283041],[6.661917,0.398039],[1.526194,-2.226349],[-7.070108,3.143561],[-0.576233,-6.936205],[3.874839,-6.548804],[4.605980,-2.326430],[-3.615179,-9.939570],[-2.565511,-9.636465],[3.098390,6.607523],[-7.948801,-0.995538],[-3.940839,-6.391073],[-9.767384,-8.933059],[-9.218051,-4.063277],[3.661825,7.478839],[6.333380,5.538794],[6.966278,-1.494568],[2.767575,-6.223379],[7.785845,-4.245607],[-5.307129,-9.035118],[-7.049994,-2.421244],[-0.610641,-9.112707],[5.782110,5.694630],[4.668378,-7.171707],[4.175090,7.148949],[3.285593,-9.225630],[7.542669,-8.271905],[0.477504,-8.519008],[-0.633091,-9.064789],[3.691864,-9.174696],[-7.965427,-6.249388],[-9.529676,6.949051],[6.621727,-7.418155],[-2.742979,5.068096],[-1.275385,6.160859],[-7.901898,0.939646],[-1.210705,9.913682],[-1.214048,-0.887393],[-6.846903,-2.142233],[-3.838648,-3.670224],[0.822570,-2.540096],[0.430923,6.127577],[1.467582,9.935173],[-3.582003,-8.771903],[-9.402802,3.465675],[7.072927,-9.742301],[-8.622093,-5.615062],[-4.276275,-0.149125],[-0.954592,3.217498],[-8.862998,5.555067],[2.813385,3.564514],[1.224771,-3.795941],[-0.317810,-0.527323],[1.215527,4.642113],[4.928651,-6.577065],[-0.368694,4.375766],[9.984429,-1.787507],[4.231633,-5.925558],[-6.407626,7.294859],[0.534983,1.310668],[6.158898,-1.457926],[-8.195722,-9.118214],[7.513329,7.198828],[1.443827,-1.165332],[0.690950,-0.532916],[-0.089756,3.840759],[-9.796447,-6.996340],[-6.457343,5.849038],[1.028562,7.892069],[6.519802,-0.441668],[-6.471291,-4.377657],[-9.519180,0.475962],[0.427501,9.693645],[-4.255313,-7.988652],[4.012817,-2.504904],[1.297811,0.715907],[5.158014,-3.945140],[-7.714783,-2.275824],[7.013943,-3.096598],[7.946207,5.037464],[5.386737,6.746481],[-9.489010,-9.637635],[-3.448991,5.326049],[9.645964,2.118650],[1.397803,9.504697],[-1.172233,7.891718],[2.477971,6.961405],[2.806786,7.536173],[6.213461,-1.702961],[5.389812,8.058968],[1.406663,8.795797],[3.899757,-6.051903],[-0.699048,-9.358964],[4.873411,-2.955601],[4.569701,3.138141],[9.205179,5.362606],[9.971697,-6.825801],[2.385899,6.039632],[-9.873813,9.674142],[3.198271,7.718954],[4.689127,-3.192688],[8.362508,0.126947],[-9.321958,6.728508],[-7.921308,5.688459],[-5.315916,-1.070458],[3.247332,-9.389265],[-9.006587,-1.723045],[1.624433,5.105272],[9.270444,9.659692],[1.061289,-8.641695],[-2.683305,6.889426],[-6.896660,-8.115269],[-2.340518,-2.347984],[-5.034281,3.015437],[-7.754861,-8.863322],[3.504352,5.473240],[7.018958,3.423400],[2.485447,3.380721],[1.751452,-2.294197],[6.979181,-4.497650],[9.803037,1.324177],[-6.215715,-7.019302],[-4.015202,-8.762827],[9.723200,7.869877],[7.384843,9.083519],[-7.877416,-1.942087],[5.893797,1.953271],[3.439358,-9.266529],[5.525328,9.896921],[-4.781757,-2.368335],[-1.610871,9.610392],[-6.655157,0.790247],[3.219633,8.461618],[8.473772,-3.616097],[-0.198988,4.862942],[4.166054,0.052291],[2.356984,-9.902662],[-7.130085,9.697162],[-5.380637,-3.637836],[7.181245,-4.380177],[-4.742846,-7.129006],[4.665824,-9.220490],[-8.821828,8.355932],[7.984010,-7.328181],[5.108840,8.683017],[-3.560220,8.317110],[1.188078,5.586320],[5.318112,5.582657],[4.885571,7.640111],[-4.318659,4.435943],[8.819846,8.240547],[4.395162,7.479695],[-8.313197,-8.187908],[8.211140,4.997195],[-6.422641,7.021212],[-5.479571,5.068882],[-3.312314,-4.568714],[1.902235,-7.959436],[9.647350,8.365863],[9.672605,0.261045],[6.750567,-3.063555],[4.208881,0.104845],[8.152391,6.224039],[-1.574463,4.049632],[3.378128,9.699156],[0.881436,6.299916],[5.711214,4.368668],[-3.222246,1.223719],[8.730680,-2.885353],[3.530834,-3.896038],[3.956696,7.274725],[-5.496131,-1.053758],[-3.721889,-1.690510],[3.791950,-4.812807],[8.508172,-6.810661],[5.260717,0.098396],[7.897393,5.308604],[-2.077881,2.289749],[-8.420521,0.229313],[-6.943123,-8.220020],[3.649181,-4.829229],[6.100674,-6.084986],[9.088637,-3.312155],[-6.500220,1.374622],[8.903750,-7.794955],[-7.630455,0.072348],[-0.037065,4.781316],[0.148372,-2.140252],[3.652567,1.465020],[1.718916,5.146251],[-1.797764,6.935554],[4.840085,8.757818],[-3.822318,-9.660107],[2.765097,4.557232],[-3.046318,-0.919359],[-4.943340,8.536588],[-9.253000,-9.746703],[-0.508427,-2.104550],[3.915161,3.848208],[-8.960798,-4.531923],[-5.827426,0.592989],[-5.217418,-9.880504],[5.459862,-6.493836],[9.952782,9.149732],[5.237508,3.002050],[6.286107,-6.970779],[-0.262924,-4.354623],[-0.978066,7.711680],[1.564120,7.989927],[5.362538,1.142016],[-9.666877,-2.115098],[3.015031,3.726744],[-2.666544,-1.142113],[-6.778557,-9.465005],[-5.835946,3.619589],[0.218553,0.262487],[9.404179,3.541421],[-2.945344,-4.442600],[-9.745406,-6.917716],[-3.902648,-9.955012],[1.112233,8.126829],[-1.088327,-3.529057],[-8.169414,9.317147],[-8.127184,-1.647447],[7.270411,-8.825124],[-0.761503,2.403473],[4.774131,-1.898800],[0.391370,-4.111812],[4.074907,0.332383],[-1.602264,-3.117858],[1.600850,-6.033625],[2.249899,-5.564692],[-8.351150,-3.816980],[6.668723,-3.795776],[-6.643438,-5.676488],[5.488390,-2.413371],[-0.586777,-5.492678],[4.655320,9.856994],[9.465076,-4.200304],[4.505809,4.139882],[1.372260,-0.135946],[3.071006,4.084492],[-7.637892,-9.425635],[3.519667,-0.092649],[-0.889363,-3.645933],[-8.328465,-5.964222],[6.751852,-6.847722],[6.169226,1.060107],[4.067150,3.553458],[-1.634677,-1.340790],[8.566588,-1.412285],[2.585726,-8.583029],[-1.095594,5.964603],[2.192884,-1.453976],[-7.780243,7.127384],[-5.534825,-1.000280],[-3.017488,7.402617],[3.162199,1.255784],[-7.466749,2.059984],[6.352832,6.209231],[-4.215855,-7.197533],[-7.246370,-2.183837],[0.733949,6.117121],[-8.193674,7.131920],[7.421994,6.003692],[7.380436,3.684677],[5.868817,3.375607],[9.344921,-4.310904],[-0.520295,5.408258],[8.282307,6.127940],[7.925011,-8.980290],[0.579670,-4.550795],[-1.431173,6.583798],[1.804174,1.256560],[6.578897,2.010649],[2.272454,-6.895015],[-3.873050,3.527866],[5.683892,-9.863755],[3.043471,2.853166],[-3.193711,2.181441],[0.425555,-8.616239],[-9.608240,4.302332],[6.439480,-7.319236],[-5.505867,-7.793356],[-8.777115,-3.587375],[-8.909721,-3.676946],[-1.271690,-8.203560],[1.643245,3.683432],[-8.487189,2.432747],[-0.877817,-7.285126],[6.438522,-1.548870],[7.113406,-1.541213],[-4.614938,-9.671221],[2.657594,-5.594022],[-8.558820,1.636669],[1.434487,-4.889415],[-1.805440,-3.229371],[9.186435,-2.525898],[5.931060,-6.276320],[8.847027,-6.781265],[-8.362044,8.042857],[9.242441,6.767241],[-0.682882,6.171035],[2.769526,-5.351892],[-1.023384,-0.910778],[0.277231,-4.789385],[-8.165185,-1.020876],[-4.370250,0.438217],[6.661999,-7.219180],[5.081882,-2.444781],[-0.899469,0.721119],[9.209779,-5.414261],[-4.816719,2.213542],[1.087724,-9.158199],[3.114856,-1.289455],[6.554760,-0.865599],[-4.231441,7.803404],[-3.390795,7.603004],[1.482033,-3.301950],[-6.675411,-2.746942],[-2.554491,9.820221],[-6.603632,8.279301],[-1.691736,2.118000],[5.036810,-2.682683],[-1.550334,8.255358],[9.125627,-8.994065],[4.529250,2.793922],[3.845494,-9.718412],[-6.909427,5.069141],[5.928491,-0.457014],[-0.116368,0.268702],[5.316631,2.502037],[5.991367,-4.451184],[-6.690683,-0.718580],[6.586019,6.144039],[3.944027,-7.869243],[4.321040,-8.685334],[-5.069083,-1.745456],[-3.719203,4.097618],[7.842096,-8.120346],[1.978631,3.433504],[9.012871,-0.630831],[-4.206935,2.659684],[0.802302,7.419883],[9.680372,-9.483963],[-1.261106,9.716910],[-2.938485,-5.322129],[3.561504,5.421735],[5.757987,-7.655689],[-2.283251,7.783972],[7.737212,-9.818109],[7.906242,9.533956],[-2.066663,-7.369418],[9.358553,8.616077],[-1.172022,9.944028],[-2.121391,3.502717],[-2.475061,-6.249081],[-2.396688,5.193402],[-0.548966,-5.032378],[1.237667,1.942844],[4.453301,-9.892563],[3.877358,9.456727],[3.623982,9.083993],[4.747266,9.864714],[9.295860,-0.270021],[6.980700,9.026693],[2.822248,3.311545],[4.049655,-1.657679],[4.714479,5.476034],[7.196772,-6.984661],[-1.320665,-4.804005],[-2.230086,4.720115],[-8.308047,2.137996],[4.536571,3.503205],[9.466391,8.210496],[3.672047,8.135168],[-3.016145,7.328895],[7.070349,-5.656240],[-3.874455,3.529247],[-5.969288,-6.070446],[-8.308269,-3.768108],[-8.679242,7.865551],[3.795591,-5.085643],[-2.796674,2.250469],[0.572458,-0.951350],[-7.862625,-2.566676],[-7.559880,-3.825209],[-1.097613,9.486629],[-6.434749,-8.390750],[9.315475,-0.344579],[-4.259199,-7.062637],[8.017966,9.386830],[-0.257661,3.648388],[-8.152083,9.999719],[-6.907914,1.810443],[-3.781879,8.515893],[-5.139904,2.012555],[6.308098,-6.095144],[6.769168,1.021498],[-0.503089,7.335806],[-3.164145,-3.919151],[-2.844828,3.265921],[8.328723,2.761710],[5.854842,-8.639665],[-3.606033,-9.907255],[-2.005929,1.313598],[1.034135,-6.818530],[8.716512,-1.380810],[-7.529890,-1.223097],[0.449985,3.005615],[-9.223663,-3.265177],[-1.296067,0.147798],[4.417315,-8.397241],[7.257501,1.023482],[-2.335515,-7.433057],[6.365173,-3.184457],[0.341039,-3.221944],[-9.492532,1.799856],[-6.205439,2.995112],[5.768835,0.359205],[-8.251599,-3.760108],[2.382127,-4.475581],[7.283557,8.233672],[3.170996,-6.223552],[-9.630635,4.551770],[6.144861,8.166267],[3.426155,-6.145435],[3.309265,0.682062],[9.644848,1.459089],[7.644690,4.919446],[5.043924,1.772570],[-5.607703,3.014109],[-2.882223,2.492770],[-8.607292,3.812641],[2.556544,-9.660191],[1.083931,-8.690536],[0.900127,0.849573],[8.260591,8.954159],[4.948897,-7.674190],[-4.222051,-0.472672],[-1.108773,-4.743222],[-7.605405,-1.979094],[0.090486,-2.654695],[-3.754736,-6.608192],[8.312416,-1.573537],[-4.153940,7.022548],[-7.306488,5.676259],[8.417301,5.944202],[0.014108,-2.172495],[3.117023,-0.645424],[0.327670,5.302915],[4.204128,6.132361],[2.697054,-6.171399],[2.639399,8.368152],[2.458393,6.319067],[-2.097000,-7.699273],[-7.164343,1.798768],[-1.171763,0.124983],[9.084837,5.627498],[-6.349182,8.208050],[1.152856,9.013803],[1.315281,-4.289514],[5.331742,9.874758],[0.848008,4.874729],[4.058119,5.299367],[-8.510928,3.245134],[-6.081608,9.315764],[-7.171887,-6.325639],[-1.548511,-2.262338],[2.613906,-6.236830],[-2.260421,-9.899263],[6.612273,-9.619780],[2.833970,-7.731166],[-6.371049,3.847533]], dtype = "float32")#candidate|5636|(650, 2)|const|float32
bop_5637 = relay.logical_and(call_5634.astype('bool'), relay.reshape(const_5636.astype('bool'), relay.shape_of(call_5634))) # shape=(650, 2)
bop_5640 = relay.logical_and(call_5635.astype('bool'), relay.reshape(const_5636.astype('bool'), relay.shape_of(call_5635))) # shape=(650, 2)
output = relay.Tuple([bop_5637,])
output2 = relay.Tuple([bop_5640,])
func_5644 = relay.Function([], output)
mod['func_5644'] = func_5644
mod = relay.transform.InferType()(mod)
output = func_5644()
func_5645 = relay.Function([], output)
mutated_mod['func_5645'] = func_5645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4638_call = mod.get_global_var('func_4638')
func_4639_call = mutated_mod.get_global_var('func_4639')
call_5651 = relay.TupleGetItem(func_4638_call(), 0)
call_5652 = relay.TupleGetItem(func_4639_call(), 0)
var_5665 = relay.var("var_5665", dtype = "float32", shape = (650, 2))#candidate|5665|(650, 2)|var|float32
bop_5666 = relay.logical_xor(call_5651.astype('uint8'), relay.reshape(var_5665.astype('uint8'), relay.shape_of(call_5651))) # shape=(650, 2)
bop_5669 = relay.logical_xor(call_5652.astype('uint8'), relay.reshape(var_5665.astype('uint8'), relay.shape_of(call_5652))) # shape=(650, 2)
var_5670 = relay.var("var_5670", dtype = "float32", shape = (650, 2))#candidate|5670|(650, 2)|var|float32
bop_5671 = relay.power(var_5665.astype('float64'), relay.reshape(var_5670.astype('float64'), relay.shape_of(var_5665))) # shape=(650, 2)
var_5678 = relay.var("var_5678", dtype = "float32", shape = (650, 2))#candidate|5678|(650, 2)|var|float32
bop_5679 = relay.greater_equal(call_5651.astype('bool'), relay.reshape(var_5678.astype('bool'), relay.shape_of(call_5651))) # shape=(650, 2)
bop_5682 = relay.greater_equal(call_5652.astype('bool'), relay.reshape(var_5678.astype('bool'), relay.shape_of(call_5652))) # shape=(650, 2)
func_5073_call = mod.get_global_var('func_5073')
func_5075_call = mutated_mod.get_global_var('func_5075')
call_5689 = relay.TupleGetItem(func_5073_call(relay.reshape(call_5651.astype('float32'), [650, 2])), 2)
call_5690 = relay.TupleGetItem(func_5075_call(relay.reshape(call_5651.astype('float32'), [650, 2])), 2)
output = relay.Tuple([bop_5666,bop_5671,bop_5679,call_5689,])
output2 = relay.Tuple([bop_5669,bop_5671,bop_5682,call_5690,])
func_5692 = relay.Function([var_5665,var_5670,var_5678,], output)
mod['func_5692'] = func_5692
mod = relay.transform.InferType()(mod)
mutated_mod['func_5692'] = func_5692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5692_call = mutated_mod.get_global_var('func_5692')
var_5694 = relay.var("var_5694", dtype = "float32", shape = (650, 2))#candidate|5694|(650, 2)|var|float32
var_5695 = relay.var("var_5695", dtype = "float32", shape = (650, 2))#candidate|5695|(650, 2)|var|float32
var_5696 = relay.var("var_5696", dtype = "float32", shape = (650, 2))#candidate|5696|(650, 2)|var|float32
call_5693 = func_5692_call(var_5694,var_5695,var_5696,)
output = call_5693
func_5697 = relay.Function([var_5694,var_5695,var_5696,], output)
mutated_mod['func_5697'] = func_5697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mod.get_global_var('func_5549')
func_5550_call = mutated_mod.get_global_var('func_5550')
call_5732 = relay.TupleGetItem(func_5549_call(), 0)
call_5733 = relay.TupleGetItem(func_5550_call(), 0)
output = relay.Tuple([call_5732,])
output2 = relay.Tuple([call_5733,])
func_5737 = relay.Function([], output)
mod['func_5737'] = func_5737
mod = relay.transform.InferType()(mod)
output = func_5737()
func_5738 = relay.Function([], output)
mutated_mod['func_5738'] = func_5738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5756 = relay.var("var_5756", dtype = "float32", shape = (7, 6, 2))#candidate|5756|(7, 6, 2)|var|float32
uop_5757 = relay.sin(var_5756.astype('float32')) # shape=(7, 6, 2)
func_656_call = mod.get_global_var('func_656')
func_660_call = mutated_mod.get_global_var('func_660')
const_5777 = relay.const([-3.541212,3.978646,-8.971513,3.431081,6.490550,3.553584,0.129822,4.396050,5.462282,1.575844,-0.551386,-7.315166,0.060415,3.949724,-4.099615,-5.234585,8.523075,0.405212,-9.943237,-9.043516,-5.877103,-3.440915,0.139508,9.993070,2.379904,2.838741,-6.421554,-2.321521,5.589484,7.358065,-3.796408,-8.533756,2.370684,-8.717587,7.101263,9.543722,-2.018954,7.124877,1.883641,1.294557,8.038027,3.906462,-9.789061,7.062433,5.536892,4.052246,-3.814609,-6.623552,1.601966,-8.295422,6.034058,5.480022,8.051881,5.807919,2.834479,1.416671,4.919093,2.908701,-9.798920,4.229887,9.108731,1.865632,-2.011636,2.608400,-4.661544,-0.456170,9.824873,-3.211639,-6.997922,-2.436099,-3.246722,6.745348,-8.181229,6.749882,6.081093,-6.344037,5.664034,0.512457,5.754072,2.614611,-5.090052,4.791894,3.879234,-6.984064,8.967681,-2.509186,-2.643246,5.026614,-1.634943,5.148639,7.349767,-3.083430,5.228344,6.012963,-9.249896,7.075897,-8.976735,-2.227112,-8.130728,-5.556659,6.700613,4.048452,-1.460410,-1.953340,1.362742,-4.212658,-7.704898,4.748036,-4.018213,-3.507596,1.199565,1.731064,6.448740,-2.255208,-4.327239,8.166386,9.042108,3.628374,-3.529864,-0.758324,4.408822,-7.239844,5.308706,-7.329126,-0.932562,-7.090109,-3.339831,-5.765151,7.215769,4.242279,3.561021,-9.976468], dtype = "float32")#candidate|5777|(132,)|const|float32
const_5778 = relay.const([7.940883,8.058837,7.632515,-6.932537,2.009332,4.039003,-8.563105,0.665885,9.377590,-6.897580,-7.411270,1.560714,-8.083095,-2.231760,0.984554,1.499666,8.105249,-8.897640,8.093020,2.602873,2.481227,-3.573184,-6.245603,-8.010857,9.883660,5.409891,-6.637433,1.761947,-8.534258,-0.844590,-4.495836,-7.983012,-8.882484,9.503306,-9.225807,-9.087452,6.396454,9.623667,-2.650597,0.624159,-6.796277,-0.285387,5.491359,2.274416,7.248643,-9.859776,-9.169168,-8.928717,1.132788,-7.435323,-6.650612,7.500866,0.282911,-0.644948,-9.607663,-6.472742,-7.825315,0.242809,-7.832532,0.678129,-9.263525,-4.914770,-3.730366,4.793802,-9.177877,9.054535,-2.439150,-1.416905,1.237613,1.261641,-0.962019,-5.128165,-1.292905,3.825091,5.277065,7.736757,-6.983929,-1.186291,-8.584854,-1.008050,5.081870,3.044875,-5.184436,7.857323,-3.705433,5.484576,-1.130168,9.053952,8.103027,-0.883045,7.629410,-7.511389,4.731617,3.718174,-7.033421,-6.302706,2.418685,9.148293,1.146895,-0.411600,4.400564,-9.661331,2.293025,2.836434,-7.178484,3.548185,1.330749,3.770464,-4.900644,-8.063368,-9.335336,-3.227688,-4.993837,2.426084,4.663213,-4.122218,4.177954,-5.637957,-7.472248,4.304777,7.602124,7.681147,-2.045066,5.769484,9.953085,5.794225,-0.846114,3.424312,2.764612,-9.177339,-9.650160,-2.694971,-4.988798,4.135841,-0.035672,4.502792,1.868522,-4.318027,-3.318320,3.910399,8.683164,3.108889,-3.146437,-6.319460,-6.258113,-9.813357,7.024503,-7.748790,-8.080289,3.127924,3.856910,-9.561891,7.259840,-7.836912,2.022027,7.034897,6.232782,-2.761008,3.406503,5.464084,-1.390570,1.670922,-1.801070,2.168176,9.105503,1.332806,1.514868,2.596956,-0.672293,-7.254252,6.700456,-9.401396,0.493733,9.965317,-8.237197,-2.018738,-2.422407,-6.659327,5.130521,5.930864,-8.264335,2.580012,2.354799,-6.383061,3.326999,9.252086,-7.188540,7.356000,-3.512727,5.562716,6.770138,7.584362,8.736451,6.814566,3.640454,9.824550,0.973043,-3.077590,7.875509,6.017792,9.035975,-0.505546,-6.875873,0.813255,-0.266302,1.739633,-5.321807,1.513593,5.326083,3.421339,-6.710454,-0.825030,3.449809,-0.161916,-3.961930,5.404426,-1.180845,7.294003,6.546630,0.343392,7.700722,-2.408595,-9.057670,1.462410,-6.418157,-6.385844,2.953651,-5.198463,5.676188,-1.679032,-5.933293,-4.654046,9.224119,-5.056926,-0.373124,-1.663325,-3.893699,-1.961367,-8.521803,-9.754642,-9.501592,0.204687,-9.032533,-2.614355,-5.314094,3.409765,1.736709,3.669444,8.962206,8.182263,-5.900955,-2.577945,-8.821760,3.890198,-4.616439,3.477751,-8.791606,2.050575,3.477392,7.028958,-1.937357,-5.755680,-4.469295,-5.490797,8.396861,5.882690,5.882366,8.333919,-0.675880,-6.737987,-2.276452,5.607399,5.475507,7.654895,6.084095,-5.226667,8.449264,8.067617,1.280346,-1.598221,6.726107,-8.356637,8.535070,3.403347,-2.693385,-3.369245,2.254314,1.560414,-6.698714,3.053565,7.344472,2.609939,3.863328,-2.473219,-6.916264,5.549250,4.629254,-8.006288,2.702402,-2.768725,-1.859492,3.177303,9.745973,-8.289842,4.826893,6.657288,3.783033,-5.030933,6.289561,3.453298,4.508488,5.759016,-2.220594,9.626081,6.175141,9.067181,-0.666549,-6.119922,-0.493811,-9.056446,-7.784255,-9.913960,-4.337143,-4.958437,-3.901432,-0.466381,2.907017,-5.839680,6.848126,0.612455,2.620064,-6.274113,7.598919,9.346594,3.694310,-6.636358,4.551720,-1.600900,6.621037,4.640952,-0.941298,5.540043,-3.912915,-5.611350,8.312975,-1.123977,-6.222663,-2.739126,6.986625,0.248742,4.503843,9.135494,6.982112,3.477122,-4.435367,-3.324613,-6.607735,-4.943423,5.035672,-1.003617,2.657283,2.189334,-8.295076,2.751983,-0.688646,-5.214481,-4.731449,-6.237521,6.582403,-8.075059,9.557227,7.900022,-3.084835,-4.487749,-9.240075,-7.915744,6.484115,9.509343,-1.131449,-7.024198,-0.592005,-8.811972,-2.919845,-6.549988,-7.947733,9.707187,1.629946,4.074207,3.294777,0.627314,1.490389,0.901607,4.877390,-6.885559,1.710025,-7.393496,5.442145,3.885731,-7.038661,-7.243213,-1.198269,-4.488101,-4.562539,-8.473096,3.700338,5.506943,3.638671,0.795760,6.081193,-1.084560,-2.457988,-7.739604,-8.883514,5.248357,2.770867,6.015078,-8.363412,9.911226,-6.442059,-2.591434,7.507278,-5.963167,-5.676668,-1.183456,2.544702,-5.854973,0.563118,2.555981,-5.884172,-7.248805,-3.964021,-7.726560,3.879641,3.218110,6.622935,3.671490,8.706633,2.936651,-4.813883,-6.529642,2.698422,7.855924,5.076646,-3.754413,-2.500605,-3.017850,-6.104708,2.483623,-3.429094,5.986217,-8.561976,5.753626,-0.505546,8.338899,-2.042283,-5.489397,-1.654342,-9.414307,4.177268,-4.538565,-6.795108,-0.223596,7.691343,-8.037814,5.705270,7.534041,2.207886,2.128661,1.430654,-7.451499,-9.410767,0.814421,-9.781956,2.098811,-5.348899,6.226208,-1.899919,-6.689547,4.613185,5.883548,-9.002500,-5.864599,7.568771,-0.082351,-0.040034,-4.981290,8.674694,-4.546601,-3.264018,9.493593,8.996211,5.452175,3.517808,5.663507,-5.530776,9.481617,9.737958,-3.009620,9.447220,1.896556,4.002900,0.978890,-8.627750,0.394147,8.602346,2.882592,4.905397,-2.884102,-6.948825,-7.375151,-2.097289,-3.446176,5.430773,7.667549,6.947633,5.485602,-7.750829,8.140782,-0.376140,8.251544,-1.513945,-8.563327,3.561134,-0.811971,-3.363349,9.678710,-0.234154,-3.007541,-3.245941,-1.935938,-6.261380,3.228511,-0.280492,2.368742,7.143974,-1.904679,-7.803244,2.249373,7.132467,4.289041,-7.518530,7.593188,-7.277914,3.683725,3.362740,-4.713579,1.826879,-7.273468,6.426009,-8.994852,0.222400,-1.875035,3.941565,7.864481,5.789735,-2.793086,2.491024,-6.957157,6.641278,9.288681,8.678136,-8.856790,7.281757,3.864615,5.389490,9.791720,-5.380485,-6.527438,8.744706,5.467992,-7.025288,9.695645,9.893783,-2.009351,7.887359,8.349026,6.174353,0.577445,-8.594052,0.667567,-8.034859,-6.176363,-7.174091,-0.847420,1.102880,-1.561499,6.726456,8.770852,0.619181,7.223877,7.825557,-2.599729,-9.216056,0.302978,-4.524581,-2.550316,9.824336,2.030441,4.837644,-2.302228,9.232820,8.662994,-6.195590,9.967271,-8.850075,-1.805453,6.000556,-2.929036,-5.859766,0.499356,4.033823,8.338399,-5.905457,-4.139683,-0.032022,-2.286089,-7.859613,-1.024879,5.654186,-6.511884,-7.090179,6.806946,7.898280,8.047537,-6.051075,-0.803713,8.513634,-6.391203,5.963065,0.800728,0.172906,5.913749,0.722912,-5.245659,-1.161115,-2.777720,0.792097,-8.979451,-9.018982,-6.149552,-5.681676,-8.716417,-7.457751,-5.916735,4.983267,4.794947,3.517974,-2.154463,-5.583181,9.483144,-5.295421,0.253042,-3.789001,-4.289677,-2.129881,9.271540,-1.331663,-4.655440,-0.143788,-2.206795,-1.590045,1.859675,-8.591318,3.123685,-7.504517,9.136994,-1.514817,5.370701,5.631243,4.995235,-9.679563,-9.052046,-6.853148,-9.683901,5.501568,7.255682,-6.171995,-7.116113,-0.421522,-1.782482,-2.962726,4.243561,-1.163406,9.851670,0.244428,8.480802,8.548517,-5.786329,-4.409398,8.528670,5.906302,-8.288398,5.706194,-5.605706,-2.301356,-1.690003,5.841128,5.663559,-9.967296,3.734095,-7.394562,-5.751895,-6.840013,0.358324,0.810190,0.702234,1.533775,-3.409896,-7.680103,0.109607,4.878666,0.703920,8.582763,4.062181,-6.894341,2.536142,0.072735,-6.127270,-5.623032,3.263592,-8.867855,-1.534493,-3.916699,-7.782019,-6.795047,0.649859,-5.671015,-8.481222,6.218713,3.686158,-6.268634,-2.697012,-4.707260,2.408211,1.638069,-0.185978,6.920286,6.613207,-2.686462,-9.127679,9.002393,-5.716338,3.578111,-0.933985,-2.235602,-6.832352,-0.223795,7.038909,0.256946,-2.412532,4.201456,2.772710,9.970921,-8.207665,-2.490332,-1.050490,-1.028321,2.757914,2.268554,-4.826775,-4.528276,-7.747746,-4.804895,3.347733,9.376859,-1.996730,8.329525,6.470180,-6.270464,-3.197821,0.270248,1.613609,2.336072,9.742052,-6.109265,7.566405,-2.730566,9.034309,8.262693,-7.855655,-7.985976,6.442886,-4.566056,0.604666,-2.865679,-6.921864,-2.962449,8.797385,-4.732323,9.378026,-5.191061,3.222666], dtype = "float32")#candidate|5778|(792,)|const|float32
call_5776 = func_656_call(relay.reshape(const_5777.astype('float32'), [12, 11, 1]), relay.reshape(const_5778.astype('float32'), [12, 11, 6]), )
call_5779 = func_656_call(relay.reshape(const_5777.astype('float32'), [12, 11, 1]), relay.reshape(const_5778.astype('float32'), [12, 11, 6]), )
func_3451_call = mod.get_global_var('func_3451')
func_3453_call = mutated_mod.get_global_var('func_3453')
var_5782 = relay.var("var_5782", dtype = "float64", shape = ())#candidate|5782|()|var|float64
call_5781 = relay.TupleGetItem(func_3451_call(relay.reshape(var_5782.astype('float64'), [])), 0)
call_5783 = relay.TupleGetItem(func_3453_call(relay.reshape(var_5782.astype('float64'), [])), 0)
uop_5784 = relay.atan(uop_5757.astype('float64')) # shape=(7, 6, 2)
bop_5787 = relay.logical_or(uop_5784.astype('bool'), relay.reshape(uop_5757.astype('bool'), relay.shape_of(uop_5784))) # shape=(7, 6, 2)
bop_5800 = relay.greater(uop_5784.astype('bool'), var_5782.astype('bool')) # shape=(7, 6, 2)
func_5644_call = mod.get_global_var('func_5644')
func_5645_call = mutated_mod.get_global_var('func_5645')
call_5803 = relay.TupleGetItem(func_5644_call(), 0)
call_5804 = relay.TupleGetItem(func_5645_call(), 0)
bop_5810 = relay.logical_xor(uop_5757.astype('int32'), relay.reshape(uop_5784.astype('int32'), relay.shape_of(uop_5757))) # shape=(7, 6, 2)
output = relay.Tuple([call_5776,const_5777,const_5778,call_5781,bop_5787,bop_5800,call_5803,bop_5810,])
output2 = relay.Tuple([call_5779,const_5777,const_5778,call_5783,bop_5787,bop_5800,call_5804,bop_5810,])
func_5822 = relay.Function([var_5756,var_5782,], output)
mod['func_5822'] = func_5822
mod = relay.transform.InferType()(mod)
var_5823 = relay.var("var_5823", dtype = "float32", shape = (7, 6, 2))#candidate|5823|(7, 6, 2)|var|float32
var_5824 = relay.var("var_5824", dtype = "float64", shape = ())#candidate|5824|()|var|float64
output = func_5822(var_5823,var_5824,)
func_5825 = relay.Function([var_5823,var_5824,], output)
mutated_mod['func_5825'] = func_5825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4409_call = mod.get_global_var('func_4409')
func_4410_call = mutated_mod.get_global_var('func_4410')
call_5838 = relay.TupleGetItem(func_4409_call(), 1)
call_5839 = relay.TupleGetItem(func_4410_call(), 1)
output = call_5838
output2 = call_5839
func_5842 = relay.Function([], output)
mod['func_5842'] = func_5842
mod = relay.transform.InferType()(mod)
output = func_5842()
func_5843 = relay.Function([], output)
mutated_mod['func_5843'] = func_5843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5481_call = mod.get_global_var('func_5481')
func_5482_call = mutated_mod.get_global_var('func_5482')
call_5850 = func_5481_call()
call_5851 = func_5481_call()
func_3657_call = mod.get_global_var('func_3657')
func_3661_call = mutated_mod.get_global_var('func_3661')
const_5856 = relay.const(-5.775850, dtype = "float32")#candidate|5856|()|const|float32
var_5857 = relay.var("var_5857", dtype = "float32", shape = (231,))#candidate|5857|(231,)|var|float32
call_5855 = relay.TupleGetItem(func_3657_call(relay.reshape(const_5856.astype('float32'), []), relay.reshape(var_5857.astype('float32'), [3, 11, 7]), ), 0)
call_5858 = relay.TupleGetItem(func_3661_call(relay.reshape(const_5856.astype('float32'), []), relay.reshape(var_5857.astype('float32'), [3, 11, 7]), ), 0)
output = relay.Tuple([call_5850,call_5855,const_5856,var_5857,])
output2 = relay.Tuple([call_5851,call_5858,const_5856,var_5857,])
func_5862 = relay.Function([var_5857,], output)
mod['func_5862'] = func_5862
mod = relay.transform.InferType()(mod)
var_5863 = relay.var("var_5863", dtype = "float32", shape = (231,))#candidate|5863|(231,)|var|float32
output = func_5862(var_5863)
func_5864 = relay.Function([var_5863], output)
mutated_mod['func_5864'] = func_5864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4409_call = mod.get_global_var('func_4409')
func_4410_call = mutated_mod.get_global_var('func_4410')
call_5866 = relay.TupleGetItem(func_4409_call(), 1)
call_5867 = relay.TupleGetItem(func_4410_call(), 1)
var_5870 = relay.var("var_5870", dtype = "float32", shape = (14, 7, 3))#candidate|5870|(14, 7, 3)|var|float32
bop_5871 = relay.right_shift(call_5866.astype('int8'), relay.reshape(var_5870.astype('int8'), relay.shape_of(call_5866))) # shape=(14, 7, 3)
bop_5874 = relay.right_shift(call_5867.astype('int8'), relay.reshape(var_5870.astype('int8'), relay.shape_of(call_5867))) # shape=(14, 7, 3)
const_5875 = relay.const([[[-9,4,-3],[10,7,9],[-8,-8,5],[-1,2,-9],[-8,-4,9],[8,-6,1],[-1,1,2]],[[1,-4,-3],[9,-10,-5],[-1,-5,3],[8,-1,4],[-6,-10,2],[-6,-6,-1],[1,-4,-10]],[[-2,-4,-8],[9,10,10],[2,10,2],[-6,6,9],[2,9,3],[-6,2,9],[9,-6,10]],[[7,-4,3],[-1,-4,-2],[6,5,1],[5,-10,-9],[7,-9,-1],[10,10,-4],[-10,4,4]],[[9,2,-7],[9,-2,9],[9,1,8],[10,9,2],[3,-8,7],[4,4,-9],[9,-1,10]],[[2,5,-9],[7,-10,9],[10,5,-10],[-10,8,10],[-4,-7,10],[4,-7,9],[-1,7,-1]],[[-3,-10,-8],[1,-5,-3],[8,6,2],[-3,9,-7],[-9,-5,10],[-1,-8,1],[1,4,-3]],[[-3,-4,-6],[-4,-3,2],[1,8,6],[-1,-3,9],[-5,-8,-10],[-7,1,3],[-8,-8,-2]],[[-10,-2,1],[6,-6,-3],[5,-7,8],[-3,2,8],[1,4,6],[-8,1,7],[-7,-3,2]],[[-9,-5,-9],[6,10,5],[-3,4,4],[3,8,-3],[5,-8,4],[-6,8,-9],[-4,10,-1]],[[2,1,-3],[-7,10,-10],[10,4,6],[9,-1,3],[7,-3,3],[-4,-1,-10],[4,1,-5]],[[-9,-8,5],[3,8,-3],[1,10,7],[-1,-8,-5],[-7,10,-3],[10,-9,4],[-6,8,-10]],[[5,-8,-7],[-10,-5,-1],[1,-1,7],[-5,5,9],[8,8,-9],[6,2,-1],[-1,9,1]],[[8,9,2],[-3,-3,1],[-10,7,-4],[8,10,-3],[9,4,-10],[8,-9,-7],[-3,10,-9]]], dtype = "int8")#candidate|5875|(14, 7, 3)|const|int8
bop_5876 = relay.logical_and(bop_5871.astype('bool'), relay.reshape(const_5875.astype('bool'), relay.shape_of(bop_5871))) # shape=(14, 7, 3)
bop_5879 = relay.logical_and(bop_5874.astype('bool'), relay.reshape(const_5875.astype('bool'), relay.shape_of(bop_5874))) # shape=(14, 7, 3)
uop_5882 = relay.atanh(const_5875.astype('float32')) # shape=(14, 7, 3)
func_3824_call = mod.get_global_var('func_3824')
func_3826_call = mutated_mod.get_global_var('func_3826')
const_5900 = relay.const(-3, dtype = "uint64")#candidate|5900|()|const|uint64
call_5899 = relay.TupleGetItem(func_3824_call(relay.reshape(const_5900.astype('uint64'), [])), 0)
call_5901 = relay.TupleGetItem(func_3826_call(relay.reshape(const_5900.astype('uint64'), [])), 0)
uop_5909 = relay.log(uop_5882.astype('float32')) # shape=(14, 7, 3)
bop_5920 = relay.bitwise_and(call_5866.astype('int8'), relay.reshape(var_5870.astype('int8'), relay.shape_of(call_5866))) # shape=(14, 7, 3)
bop_5923 = relay.bitwise_and(call_5867.astype('int8'), relay.reshape(var_5870.astype('int8'), relay.shape_of(call_5867))) # shape=(14, 7, 3)
func_4492_call = mod.get_global_var('func_4492')
func_4494_call = mutated_mod.get_global_var('func_4494')
call_5932 = relay.TupleGetItem(func_4492_call(), 2)
call_5933 = relay.TupleGetItem(func_4494_call(), 2)
output = relay.Tuple([bop_5876,call_5899,const_5900,uop_5909,bop_5920,call_5932,])
output2 = relay.Tuple([bop_5879,call_5901,const_5900,uop_5909,bop_5923,call_5933,])
func_5934 = relay.Function([var_5870,], output)
mod['func_5934'] = func_5934
mod = relay.transform.InferType()(mod)
mutated_mod['func_5934'] = func_5934
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5935 = relay.var("var_5935", dtype = "float32", shape = (14, 7, 3))#candidate|5935|(14, 7, 3)|var|float32
func_5934_call = mutated_mod.get_global_var('func_5934')
call_5936 = func_5934_call(var_5935)
output = call_5936
func_5937 = relay.Function([var_5935], output)
mutated_mod['func_5937'] = func_5937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5737_call = mod.get_global_var('func_5737')
func_5738_call = mutated_mod.get_global_var('func_5738')
call_5951 = relay.TupleGetItem(func_5737_call(), 0)
call_5952 = relay.TupleGetItem(func_5738_call(), 0)
func_5692_call = mod.get_global_var('func_5692')
func_5697_call = mutated_mod.get_global_var('func_5697')
const_5976 = relay.const([-7.324043,8.605364,-4.464672,1.993757,-8.016648,2.426020,4.232809,-4.199503,-1.289561,8.412689,-1.570957,4.948063,6.309875,-4.611179,1.435114,5.127355,3.843384,7.778650,1.377227,1.228178,2.755760,-1.616121,-8.955276,7.376273,-1.688398,0.070927,-1.657281,-9.638372,-2.704076,-4.437970,-0.087056,1.626784,7.396211,-1.402113,1.567931,-3.916824,-6.899821,7.740207,6.563768,5.380558,2.196043,-2.060828,0.775958,-7.172512,-1.865114,8.452300,-7.585625,-0.989845,3.038097,-1.470813,-3.858309,-8.428624,-9.096525,-9.717141,-1.337084,2.544474,-1.445453,6.246526,-3.261569,0.825729,0.491946,0.257740,-8.713994,1.398242,-0.617079,-0.095821,-1.921987,-9.631482,3.183899,-8.100204,-8.684099,3.450815,5.072725,5.034781,-0.930731,-6.738051,5.039084,-5.812780,-4.879290,-1.987649,1.213810,7.511950,8.394012,-7.794341,-8.441626,-3.771098,-3.284029,-3.299669,3.041054,7.654549,-4.765507,2.007717,-2.699963,5.692986,1.618702,4.544934,5.716482,-6.144788,-4.629512,3.897733,4.811054,-8.474237,1.581448,1.866328,-3.142767,1.777648,2.844299,-1.511167,-6.881673,-3.271296,3.892438,-2.330458,-7.983092,1.291983,-0.141373,-9.725608,8.623482,0.750866,7.645646,7.378060,-8.173825,-5.163470,5.547125,5.797539,5.629430,5.205640,9.534078,9.753095,-9.143523,0.008561,8.297507,-3.425592,-4.213151,2.631891,-8.166742,7.009656,1.007079,-0.195248,-0.880219,-1.514096,8.943408,3.014067,-4.657074,3.417437,5.397847,4.913608,-8.334811,1.518690,6.785978,-6.728748,2.321357,-4.834272,1.259604,7.796577,-9.677647,2.526715,2.687846,5.179059,4.783791,-4.451486,4.503342,1.904746,3.255697,-6.299688,-0.700082,1.976299,-7.750820,-8.738237,-5.242050,1.319854,-8.781708,9.600260,9.948392,5.295136,8.568709,-1.972480,5.964856,-2.259583,-1.120580,1.701142,1.199117,3.233618,8.012396,0.863780,8.611559,-4.868888,-9.119147,-2.644658,-6.524267,-6.911102,9.982742,-2.660292,0.266550,-2.709873,8.953168,-6.571369,-9.913290,-9.992437,8.208538,9.193620,1.060410,-2.119971,3.509187,2.643319,-2.989657,9.931886,-7.309126,-5.314523,-7.472006,-2.989781,1.460023,-8.201700,-7.505996,1.387339,1.792243,-8.438155,-3.108968,-7.549072,7.701534,-0.320408,5.327408,-8.306059,4.713950,8.494525,8.114581,-0.650640,-2.889072,-5.148327,3.948185,9.500567,-1.265972,2.945622,-0.300185,4.143990,-4.705030,-5.859664,6.859991,7.209610,0.404380,5.913323,-0.219812,4.927465,-0.036281,4.853687,5.448633,-4.111833,3.717667,1.916026,2.518797,5.246295,-2.469556,-5.701115,-4.425615,-9.844527,-9.200931,-6.338373,2.111727,-7.745623,1.216659,-1.973088,-9.013495,7.667228,-2.189864,5.001492,7.191734,3.744822,-7.362449,5.179375,-9.789656,6.347750,1.072798,3.042423,2.533675,2.359425,-6.979373,-4.163260,-1.089078,-5.103318,-3.806610,5.167297,-1.978419,7.098520,-0.296388,-3.577257,-9.368172,8.519076,2.845623,9.081514,-5.793282,-6.070139,-4.530907,3.287761,-2.799749,3.999514,-3.024570,-3.345767,-9.444307,2.093797,-4.400497,8.098803,8.041636,6.535309,7.703765,-4.186564,9.873160,-3.550821,6.607067,-1.925006,4.464853,-3.862030,-9.335176,3.147681,-3.299962,8.887111,-6.364539,9.674283,-9.970551,-5.907656,3.314236,0.415088,0.016424,-6.543020,-9.635420,-7.807329,9.045011,3.456780,8.639402,-8.688793,4.055563,4.334393,-6.513072,-8.424198,7.268439,-1.284922,4.292124,7.288394,-0.010150,1.250242,-9.153181,-5.507397,-9.667209,-3.849718,-5.402565,3.833650,-3.677477,0.073831,4.264829,5.306633,3.337016,-1.120174,-3.818890,8.305849,6.871408,0.314552,1.100219,6.042007,8.381679,4.748275,-2.970222,7.191421,7.478834,5.261602,-6.672954,2.849009,9.579542,-7.354321,3.358299,-5.625258,-1.507299,9.655577,1.231066,3.663466,-1.881168,4.578108,1.806448,7.568654,3.500004,-7.802912,-7.125243,9.616773,5.675274,1.620939,-7.333872,5.528791,0.041051,-6.255244,-3.651857,0.673226,-1.426616,1.922410,7.322538,8.816989,-6.392017,0.097858,3.419791,-3.148617,-4.691204,-5.657954,5.106577,-9.102968,-0.060481,2.406760,-6.441751,8.538641,7.734681,7.912589,4.976100,-0.920004,-5.154472,-7.279391,-4.782030,-4.055678,-4.635698,5.758416,-1.878105,-6.361988,-2.709651,5.315846,-3.748196,-4.690558,-4.958901,9.657526,-4.931745,4.560928,8.271461,-0.983193,-7.254185,-9.805910,1.163291,-0.686441,1.764435,-6.619565,-9.577194,3.035101,-8.035491,9.375744,0.823520,4.492384,-4.678128,-2.516806,-0.491738,7.591100,2.836695,-9.030167,-0.229653,-9.410403,5.299885,8.946193,3.732810,8.327508,-4.525657,-3.549707,5.697965,5.494531,-6.494496,0.413754,8.106462,7.840802,-9.956095,1.620566,-2.303585,4.458357,7.951122,7.390832,5.526577,-1.556400,3.600082,0.992118,-3.683147,-4.729981,-1.897100,-7.033522,7.635667,-4.745976,2.671413,-1.313177,6.689676,2.093629,-0.782517,7.529569,4.247587,-9.851213,-6.639195,6.890593,-1.265683,4.851906,3.582258,-5.856543,7.760698,2.522672,6.580682,-1.903481,0.843285,8.682121,9.683454,4.981496,-3.916283,5.120676,5.668359,-8.877057,6.731467,-5.886068,3.549505,9.528951,2.707558,3.102071,-4.668788,9.891391,8.494431,9.645181,-1.501025,-2.459810,-6.006178,4.798887,-5.037042,-6.343229,-2.503889,0.640858,3.764079,-3.382428,8.849507,0.085125,-9.917262,2.171288,6.507764,-5.529186,9.239391,9.442042,-7.115741,8.616981,-1.159647,-5.379519,-5.546093,-6.258104,-2.404668,-2.972123,-6.492580,2.417572,-1.374771,-1.158097,-1.000739,7.080890,1.555546,0.987056,-2.990380,6.019170,-3.972414,6.813006,3.564839,3.195712,-2.789229,9.800293,2.616935,5.254841,4.839098,-9.913417,-3.071071,3.304597,-7.802711,-3.250210,5.017145,2.788791,2.545546,-0.243804,-4.383668,5.456779,6.045101,1.243697,0.005979,-9.051324,-1.554642,-2.116755,9.424240,3.024572,1.375303,-2.006950,0.384872,-2.352021,-3.393901,3.042290,-9.205090,1.643184,0.176053,5.293435,-1.880783,3.236939,-0.073587,1.126069,3.614870,5.134458,-3.344866,1.183282,5.198253,4.381359,-7.866637,-6.796880,3.671609,-2.992715,-0.182725,9.096688,6.135151,2.997019,5.777881,7.656590,4.596470,1.935986,-3.653724,2.065366,-0.840564,6.184402,6.108563,-7.344793,-9.451344,8.626597,-9.468822,9.004013,8.016182,1.427159,5.885008,4.370791,5.558131,8.914341,4.038574,8.221079,0.621659,-2.726703,-2.739898,5.949562,7.992194,7.812768,7.922967,-8.048999,1.158250,2.332219,-7.155015,-4.271653,1.452431,-3.578796,-9.931726,3.692583,-4.431819,2.722924,-6.625497,3.209067,5.683735,6.344235,0.277318,-8.833112,9.121621,-2.887380,-9.038242,6.932226,-8.266477,1.577074,1.916780,-7.703847,-9.491099,-1.611963,-9.584889,4.333444,-4.878274,-8.966787,-9.253108,-8.065030,1.139379,8.935120,4.317417,2.141059,-5.865905,0.366592,8.216042,-4.735783,2.519724,-1.912329,-2.418575,9.287228,-5.847210,9.044843,-2.980478,-7.207202,-5.894632,-1.532602,-6.161768,5.133713,-1.227032,-3.005507,-7.297630,0.906024,3.221587,3.489020,0.685065,-4.733434,-0.389317,-5.474794,-1.626367,-5.000869,2.466111,-5.393510,0.509222,-9.729247,-2.804794,2.807926,8.541583,-6.560383,0.192356,8.006898,6.003563,-1.335321,5.328141,-2.496818,-6.565274,-8.990144,7.893530,5.845800,-8.538981,-6.403442,4.172299,0.573774,0.954097,9.580515,7.603756,5.402658,3.495579,-5.298597,1.619790,-8.121898,-9.642324,5.632709,1.470871,-8.616679,-3.749897,2.997876,-5.231691,8.387365,-9.506470,-1.832165,8.591917,-8.643140,-6.866289,6.181250,-3.668713,9.780897,-4.260666,-8.803345,7.844975,0.831907,-7.935644,5.504073,0.896135,-9.921444,-7.455438,5.644451,-3.711495,-1.966271,-7.667333,-4.711634,0.041534,6.737436,-5.788076,8.656667,-1.722511,-0.564379,1.523659,-4.981335,-2.367594,9.312064,3.203015,-2.522436,-1.168917,-5.244639,-7.066886,2.289699,-1.160820,0.048875,6.720655,3.961142,7.820974,-2.694998,8.273515,5.130065,5.577130,-5.960142,1.069686,-6.160705,4.308599,-4.136302,-4.974931,5.876424,4.773034,8.301244,-1.358306,-4.343004,-4.972632,-8.170704,9.494064,3.687910,-0.406512,-8.251801,-6.456470,-5.371528,8.321732,8.460552,-7.299357,0.205644,8.238448,-4.910418,9.502907,0.918483,3.167833,2.971872,1.174927,5.331243,0.718751,7.762105,6.683156,5.109099,7.517252,-5.332213,-2.163363,4.745351,-1.914055,2.558987,-3.623293,-7.073263,-7.620481,1.512760,-9.231150,-5.428359,-2.406554,-5.394456,6.977168,-2.098919,-5.978774,-6.232038,-1.821269,4.643154,-1.732620,-4.223570,3.700891,-4.392163,2.223339,-7.358786,0.753141,8.021686,-4.363500,8.804530,0.620209,-0.729488,-6.170252,-5.868965,-3.529650,5.139502,-6.310759,-1.750400,-5.465095,-0.852845,-5.218071,-4.544109,9.713228,2.935829,1.740262,5.981211,-9.604783,-3.214094,-4.581994,-0.376365,-0.616037,8.584637,6.602366,1.157159,3.043366,2.420126,-9.272853,4.303528,3.326469,5.428424,7.276389,-9.221860,5.255622,-1.778191,0.956291,-4.573563,-4.034176,2.845679,6.314736,-6.483792,-9.909116,-9.186331,2.454992,-3.352254,-7.395517,9.868007,-3.154410,-7.811128,-8.191839,5.039102,3.295829,-0.330039,-2.508510,0.289003,-5.180038,-1.118545,-2.300627,6.957512,-3.261499,-7.261133,6.991949,-5.371403,5.864933,3.926951,3.472518,-3.611811,2.084697,-9.340404,-5.908349,1.916042,6.523928,8.592576,2.097955,7.998971,-8.626509,-0.652283,6.264464,4.628849,2.228620,4.331277,6.239862,3.749495,-3.434779,-0.483255,-1.431677,5.393587,1.739124,6.540917,5.519313,-3.580863,-6.191427,0.699731,7.895470,6.475057,-5.321226,3.799790,-1.115687,-0.492530,9.397672,9.842210,-6.233748,4.412892,4.051788,-9.823224,-9.564513,-9.161489,-3.282923,-2.597717,-9.545522,-0.675716,-8.923262,-8.534984,1.526385,3.722964,-5.340851,-6.773882,0.093768,-5.740292,-8.358870,8.389789,-8.194901,4.344147,-2.763597,-8.241801,0.049704,4.411471,3.353295,-2.060061,-2.414272,7.016857,-4.935208,4.368622,1.552784,-3.304984,1.126719,-4.936546,1.586113,-8.431036,-3.563564,-3.027092,6.128557,9.612517,-3.630942,2.386172,-8.890823,2.170743,-0.526848,-9.787724,-6.858006,7.670976,9.186216,1.140076,-6.452367,-8.444856,6.655725,-8.997731,-6.504051,5.747163,-9.486143,6.929753,6.100050,5.798348,7.389223,9.165941,4.974148,1.847242,8.835753,5.434204,-0.444106,-4.770095,7.578487,7.684998,-2.832454,-5.697640,3.026034,8.058489,-1.594486,4.988410,0.270233,7.582708,9.036822,6.786059,-2.324624,-4.291242,-3.793277,-7.499784,-7.028900,5.047552,-0.592630,0.167208,8.342880,-9.845991,7.826651,5.231735,-0.716535,4.879693,-9.014089,-2.094258,-9.223196,2.207724,7.024772,-8.181682,2.386941,6.608504,5.221019,-2.016268,1.898606,-9.110697,-8.415039,9.750147,-4.397969,-0.077537,5.838855,4.751256,-4.682843,-8.521404,-9.751023,0.198078,-9.302237,2.633382,6.105609,-7.980324,-3.849236,4.726871,8.594004,-3.960875,-6.268916,-0.082963,9.143052,4.496781,-0.433847,-4.408269,-2.544817,7.601476,-3.320512,-7.905043,-1.434424,-6.828193,5.291805,9.598632,4.368103,-6.646447,-5.143994,6.002030,9.658001,6.859049,1.946876,-4.896064,1.590165,-1.998673,8.598784,6.668726,-6.573863,-8.911478,-4.428388,-6.662101,8.670729,7.282584,5.872485,-1.277624,5.134187,-6.808745,8.867166,-4.553343,-7.649618,-6.735788,9.687540,0.631132,1.250397,0.378926,9.032475,8.340181,-7.751704,4.128174,-4.875492,-4.004419,0.459352,-2.560392,-9.845227,-2.480419,7.228454,-5.627646,-6.183629,-0.502627,0.321385,2.713432,6.364727,-3.378715,6.901584,5.683250,4.212694,4.127568,6.223414,9.536695,-1.440307,-3.766615,-1.191132,-4.722665,0.203737,-8.369222,-3.753451,8.453499,3.445628,-8.345253,1.640300,-4.608308,6.910070,-5.892483,4.112165,-7.336026,9.598708,8.710755,9.760550,-6.053297,8.908891,-8.264663,2.947988,8.747736,1.548886,8.785925,-0.584100,7.607286,-2.457607,-4.836520,8.603658,3.054044,3.321027,-1.538027,7.677313,4.198367,2.759202,-3.252442,-3.049172,4.806367,1.488313,-3.345096,-9.122428,-4.969612,4.923918,-5.803011,5.008054,4.770321,6.424891,-6.490057,1.881204,0.526017,6.019794,3.382895,3.443865,3.454530,9.351084,-4.561968,5.498321,-5.968104,2.968185,1.399388,4.859392,-6.412861,-6.205785,5.503747,-9.973224,-1.772518,-9.753370,3.434907,4.581486,9.266072,7.127922,-7.288027,-4.370300,5.868128,-0.063392,-2.065888,-3.130187,-9.011579,4.306901,-8.573758,-8.469173,2.172791,-0.403265,-4.636075,7.165963,-6.336882,-7.928916,9.579052,-3.513501,-7.729196,9.040162,-6.044088,7.513734,-1.527164,-9.984743,4.245640,-2.735234,0.838544,6.045396,-9.032139,9.163143,3.618418,7.606409,-2.435747,-2.547988,-3.554093,-9.950582,4.485267,2.542486,-0.485466,-6.846766,-7.156226,8.056440,3.118998,-0.017783,8.259639,-2.696392,4.089332,-8.875210,0.862775,-7.097221,-0.919056,-3.715366,3.209978,-1.144183,5.088348,7.861268,4.048097,-4.733866,9.001023,-3.637970,-4.928285,-9.851988,-9.830914,-5.858582,9.311009,-8.252283,7.426709,9.834184,-7.320402,-6.945034,-6.941723,-0.739636,-1.023451,-2.779561,9.376106,0.205478,9.433959,9.905153,-8.655030,-4.245112,-9.088059,9.157109,7.550630,-4.991368,-3.277554,-1.178481,-3.311259], dtype = "float32")#candidate|5976|(1300,)|const|float32
call_5975 = relay.TupleGetItem(func_5692_call(relay.reshape(const_5976.astype('float32'), [650, 2]), relay.reshape(const_5976.astype('float32'), [650, 2]), relay.reshape(const_5976.astype('float32'), [650, 2]), ), 0)
call_5977 = relay.TupleGetItem(func_5697_call(relay.reshape(const_5976.astype('float32'), [650, 2]), relay.reshape(const_5976.astype('float32'), [650, 2]), relay.reshape(const_5976.astype('float32'), [650, 2]), ), 0)
func_5195_call = mod.get_global_var('func_5195')
func_5201_call = mutated_mod.get_global_var('func_5201')
var_5980 = relay.var("var_5980", dtype = "uint8", shape = (18,))#candidate|5980|(18,)|var|uint8
const_5981 = relay.const([-4.857836,-9.111808,-7.079659,-4.601735,-0.356364,-7.548571,5.350319,7.296069,-6.618066,-9.116980,-7.068205,2.856827,2.753049,8.182927,8.844690,5.461230,7.000202,5.802305,4.729401,-5.240890,-6.803843,6.458703,7.715612,3.478955,-4.424975,6.689092,-6.401182,2.989319,1.840498,-2.400578,-1.852816,3.653255,8.976208,-1.136385,-4.571440,-1.869914,2.679664,8.309169,4.028652,-9.338937,-7.685923,-8.440437,4.632026,-5.706074,-7.135867,0.777173,-4.685123,-0.787429,0.597635,3.780300,7.655090,-5.779738,6.552519,5.846096,-4.892745,3.023879,-9.387262,0.620378,4.202509,-2.552671,-8.086371,-9.599983,-2.095369,-4.063118,0.047555,-5.363522], dtype = "float64")#candidate|5981|(66,)|const|float64
const_5982 = relay.const([[7,-5,-1,3,-2,-9,-5,8,-1,8,-8,-10,3,-2,4,-9,8,-4,-3,-5,2,-7,-9,4,-10,10,7,4,-4,7,4,6,2,-1,7,-1,9,9,-4,8,5,4,7,-2,-6,-8,-4,4,-6,-2,-2,3,10,-1,-5,10,6,2,2,8,-2,2,-3,-6,1,2,-1,-7,9,5,9,-3,-9,-2,-10,3,-7]], dtype = "int64")#candidate|5982|(1, 77)|const|int64
call_5979 = relay.TupleGetItem(func_5195_call(relay.reshape(const_5976.astype('float32'), [650, 2]), relay.reshape(var_5980.astype('uint8'), [6, 3]), relay.reshape(call_5951.astype('bool'), [42, 4]), relay.reshape(const_5981.astype('float64'), [66,]), relay.reshape(const_5982.astype('int64'), [11, 7]), ), 3)
call_5983 = relay.TupleGetItem(func_5201_call(relay.reshape(const_5976.astype('float32'), [650, 2]), relay.reshape(var_5980.astype('uint8'), [6, 3]), relay.reshape(call_5951.astype('bool'), [42, 4]), relay.reshape(const_5981.astype('float64'), [66,]), relay.reshape(const_5982.astype('int64'), [11, 7]), ), 3)
output = relay.Tuple([call_5951,call_5975,const_5976,call_5979,var_5980,const_5981,const_5982,])
output2 = relay.Tuple([call_5952,call_5977,const_5976,call_5983,var_5980,const_5981,const_5982,])
func_6003 = relay.Function([var_5980,], output)
mod['func_6003'] = func_6003
mod = relay.transform.InferType()(mod)
mutated_mod['func_6003'] = func_6003
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6004 = relay.var("var_6004", dtype = "uint8", shape = (18,))#candidate|6004|(18,)|var|uint8
func_6003_call = mutated_mod.get_global_var('func_6003')
call_6005 = func_6003_call(var_6004)
output = call_6005
func_6006 = relay.Function([var_6004], output)
mutated_mod['func_6006'] = func_6006
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6028 = relay.var("var_6028", dtype = "float64", shape = (5, 4, 1))#candidate|6028|(5, 4, 1)|var|float64
uop_6029 = relay.sin(var_6028.astype('float64')) # shape=(5, 4, 1)
output = relay.Tuple([uop_6029,])
output2 = relay.Tuple([uop_6029,])
func_6033 = relay.Function([var_6028,], output)
mod['func_6033'] = func_6033
mod = relay.transform.InferType()(mod)
var_6034 = relay.var("var_6034", dtype = "float64", shape = (5, 4, 1))#candidate|6034|(5, 4, 1)|var|float64
output = func_6033(var_6034)
func_6035 = relay.Function([var_6034], output)
mutated_mod['func_6035'] = func_6035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5313_call = mod.get_global_var('func_5313')
func_5314_call = mutated_mod.get_global_var('func_5314')
call_6058 = func_5313_call()
call_6059 = func_5313_call()
output = call_6058
output2 = call_6059
func_6062 = relay.Function([], output)
mod['func_6062'] = func_6062
mod = relay.transform.InferType()(mod)
mutated_mod['func_6062'] = func_6062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6062_call = mutated_mod.get_global_var('func_6062')
call_6063 = func_6062_call()
output = call_6063
func_6064 = relay.Function([], output)
mutated_mod['func_6064'] = func_6064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4492_call = mod.get_global_var('func_4492')
func_4494_call = mutated_mod.get_global_var('func_4494')
call_6067 = relay.TupleGetItem(func_4492_call(), 0)
call_6068 = relay.TupleGetItem(func_4494_call(), 0)
func_5195_call = mod.get_global_var('func_5195')
func_5201_call = mutated_mod.get_global_var('func_5201')
var_6071 = relay.var("var_6071", dtype = "float32", shape = (1300, 1))#candidate|6071|(1300, 1)|var|float32
var_6072 = relay.var("var_6072", dtype = "uint8", shape = (18,))#candidate|6072|(18,)|var|uint8
const_6073 = relay.const([[True,True,True,True],[False,False,True,True],[True,False,True,True],[True,False,False,True],[False,False,False,True],[False,False,False,True],[False,True,True,False],[True,False,True,True],[True,False,False,True],[True,True,False,False],[True,True,True,True],[True,True,False,False],[False,True,True,False],[True,True,False,True],[True,True,True,False],[True,False,True,True],[True,False,False,False],[True,True,False,True],[False,True,False,False],[False,False,False,False],[True,True,True,True],[True,True,False,False],[False,False,False,True],[False,False,False,True],[False,True,True,True],[False,True,False,False],[False,False,False,True],[True,False,True,False],[False,False,True,True],[True,False,True,True],[False,True,True,False],[True,True,False,True],[False,True,True,False],[True,True,True,True],[False,True,False,True],[False,False,True,False],[False,True,True,False],[True,False,True,True],[True,False,True,True],[False,True,False,False],[True,True,True,False],[True,False,True,True]], dtype = "bool")#candidate|6073|(42, 4)|const|bool
var_6074 = relay.var("var_6074", dtype = "float64", shape = (66,))#candidate|6074|(66,)|var|float64
const_6075 = relay.const([-7,2,5,-5,1,9,1,4,-8,6,6,1,5,-8,-9,4,1,-3,-10,-1,-2,-6,6,9,-1,-10,-4,-8,4,-7,-6,-10,7,-7,-2,7,9,-8,-5,8,3,-2,1,-5,-7,-10,3,4,-3,-8,9,8,-9,2,-3,-10,8,-5,-2,-6,3,4,7,-8,8,5,1,5,10,-4,8,3,-5,-5,-9,8,10], dtype = "int64")#candidate|6075|(77,)|const|int64
call_6070 = relay.TupleGetItem(func_5195_call(relay.reshape(var_6071.astype('float32'), [650, 2]), relay.reshape(var_6072.astype('uint8'), [6, 3]), relay.reshape(const_6073.astype('bool'), [42, 4]), relay.reshape(var_6074.astype('float64'), [66,]), relay.reshape(const_6075.astype('int64'), [11, 7]), ), 6)
call_6076 = relay.TupleGetItem(func_5201_call(relay.reshape(var_6071.astype('float32'), [650, 2]), relay.reshape(var_6072.astype('uint8'), [6, 3]), relay.reshape(const_6073.astype('bool'), [42, 4]), relay.reshape(var_6074.astype('float64'), [66,]), relay.reshape(const_6075.astype('int64'), [11, 7]), ), 6)
func_5862_call = mod.get_global_var('func_5862')
func_5864_call = mutated_mod.get_global_var('func_5864')
var_6084 = relay.var("var_6084", dtype = "float32", shape = (231,))#candidate|6084|(231,)|var|float32
call_6083 = relay.TupleGetItem(func_5862_call(relay.reshape(var_6084.astype('float32'), [231,])), 0)
call_6085 = relay.TupleGetItem(func_5864_call(relay.reshape(var_6084.astype('float32'), [231,])), 0)
output = relay.Tuple([call_6067,call_6070,var_6071,var_6072,const_6073,var_6074,const_6075,call_6083,var_6084,])
output2 = relay.Tuple([call_6068,call_6076,var_6071,var_6072,const_6073,var_6074,const_6075,call_6085,var_6084,])
func_6086 = relay.Function([var_6071,var_6072,var_6074,var_6084,], output)
mod['func_6086'] = func_6086
mod = relay.transform.InferType()(mod)
var_6087 = relay.var("var_6087", dtype = "float32", shape = (1300, 1))#candidate|6087|(1300, 1)|var|float32
var_6088 = relay.var("var_6088", dtype = "uint8", shape = (18,))#candidate|6088|(18,)|var|uint8
var_6089 = relay.var("var_6089", dtype = "float64", shape = (66,))#candidate|6089|(66,)|var|float64
var_6090 = relay.var("var_6090", dtype = "float32", shape = (231,))#candidate|6090|(231,)|var|float32
output = func_6086(var_6087,var_6088,var_6089,var_6090,)
func_6091 = relay.Function([var_6087,var_6088,var_6089,var_6090,], output)
mutated_mod['func_6091'] = func_6091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4492_call = mod.get_global_var('func_4492')
func_4494_call = mutated_mod.get_global_var('func_4494')
call_6129 = relay.TupleGetItem(func_4492_call(), 1)
call_6130 = relay.TupleGetItem(func_4494_call(), 1)
func_5441_call = mod.get_global_var('func_5441')
func_5443_call = mutated_mod.get_global_var('func_5443')
call_6131 = relay.TupleGetItem(func_5441_call(relay.reshape(call_6129.astype('bool'), [84, 2])), 0)
call_6132 = relay.TupleGetItem(func_5443_call(relay.reshape(call_6129.astype('bool'), [84, 2])), 0)
var_6149 = relay.var("var_6149", dtype = "bool", shape = (84, 2))#candidate|6149|(84, 2)|var|bool
bop_6150 = relay.left_shift(call_6131.astype('uint32'), relay.reshape(var_6149.astype('uint32'), relay.shape_of(call_6131))) # shape=(84, 2)
bop_6153 = relay.left_shift(call_6132.astype('uint32'), relay.reshape(var_6149.astype('uint32'), relay.shape_of(call_6132))) # shape=(84, 2)
func_3657_call = mod.get_global_var('func_3657')
func_3661_call = mutated_mod.get_global_var('func_3661')
const_6155 = relay.const(-1.943056, dtype = "float32")#candidate|6155|()|const|float32
const_6156 = relay.const([[9.492039,-8.140809,-2.882984,2.314314,-9.281773,3.247859,9.763217,4.111899,2.952372,2.127371,-1.821239,-0.723179,1.628485,-5.094758,2.804519,0.755605,-2.573245,-6.849374,7.174689,2.360046,-5.684035],[-0.074348,-0.165570,-5.344569,7.531401,3.037119,-5.804140,-7.324324,0.651665,7.800087,3.846642,9.547345,-2.883854,-2.510044,7.305020,9.305564,8.085881,5.770105,4.046539,1.505096,3.118926,-9.627221],[-7.545569,1.943259,-1.387078,-2.714324,9.607049,9.552999,9.965944,-9.228226,-5.765153,-9.988996,8.946803,0.269392,6.276228,0.268799,7.258562,0.232806,9.721169,4.046236,2.691148,0.105400,1.334459],[2.800056,3.913571,-7.745912,9.046549,8.440917,-6.193589,-0.282954,0.989311,9.098461,4.667761,-2.819871,9.986299,-3.454629,6.749766,-8.796675,3.977261,7.447749,7.168484,-4.261140,9.429928,5.398193],[-2.758225,5.352241,1.998019,-7.325826,7.324414,5.503598,-9.815050,-3.207391,-6.481316,-2.531782,-1.805549,-8.769790,8.624167,-3.931821,-0.776009,5.268643,0.338069,-5.860763,1.628308,-4.887977,9.404333],[5.166754,4.571692,6.764618,-4.147078,5.169214,3.367681,-8.682859,-2.240559,6.788578,-1.874358,8.357722,-9.625526,3.714622,-5.286939,-6.935105,0.097478,6.454769,6.000913,-0.692531,3.512795,-6.642885],[6.944397,2.167898,-9.994480,-2.260073,7.298952,-9.988073,1.838888,1.702969,8.837461,1.262501,-2.370006,-9.782638,3.622915,9.507886,-4.656871,-0.787336,2.427868,-8.384449,-9.893771,-2.360316,-6.367484],[1.718291,-7.506852,-8.154735,4.403393,7.223611,-1.761654,9.984155,-2.039740,-1.508189,9.552503,6.450947,8.479717,-9.809655,-9.935910,4.059496,2.800098,9.513507,-0.290807,-0.889881,4.332467,3.003841],[1.703267,-5.653228,8.740560,-6.033752,3.723147,3.757424,2.617939,-1.504263,6.334789,6.237807,9.162835,-9.418895,-7.732468,3.133674,-9.792747,7.308689,0.939014,-5.421772,3.254811,0.051864,-6.894227],[6.987346,-7.648455,4.081377,9.641069,8.916719,8.465689,-4.442554,-4.918314,-6.262465,-2.038105,-6.983028,9.378620,7.580558,9.053305,0.029221,9.959204,-8.693032,-4.190021,9.417920,-2.617303,-4.160658],[3.875170,9.994320,-5.503112,-9.326068,4.706488,9.998523,4.825338,1.685736,8.548200,-9.961217,0.300514,9.379699,5.020739,-0.745285,5.851914,6.432976,0.695443,-2.056567,-3.360976,8.400808,7.866848]], dtype = "float32")#candidate|6156|(11, 21)|const|float32
call_6154 = relay.TupleGetItem(func_3657_call(relay.reshape(const_6155.astype('float32'), []), relay.reshape(const_6156.astype('float32'), [3, 11, 7]), ), 0)
call_6157 = relay.TupleGetItem(func_3661_call(relay.reshape(const_6155.astype('float32'), []), relay.reshape(const_6156.astype('float32'), [3, 11, 7]), ), 0)
func_920_call = mod.get_global_var('func_920')
func_925_call = mutated_mod.get_global_var('func_925')
var_6159 = relay.var("var_6159", dtype = "float64", shape = (2912,))#candidate|6159|(2912,)|var|float64
var_6160 = relay.var("var_6160", dtype = "float64", shape = (84,))#candidate|6160|(84,)|var|float64
call_6158 = relay.TupleGetItem(func_920_call(relay.reshape(var_6159.astype('float64'), [14, 16, 13]), relay.reshape(const_6155.astype('int64'), []), relay.reshape(var_6160.astype('float64'), [84, 1]), ), 1)
call_6161 = relay.TupleGetItem(func_925_call(relay.reshape(var_6159.astype('float64'), [14, 16, 13]), relay.reshape(const_6155.astype('int64'), []), relay.reshape(var_6160.astype('float64'), [84, 1]), ), 1)
output = relay.Tuple([call_6129,bop_6150,call_6154,const_6155,const_6156,call_6158,var_6159,var_6160,])
output2 = relay.Tuple([call_6130,bop_6153,call_6157,const_6155,const_6156,call_6161,var_6159,var_6160,])
func_6168 = relay.Function([var_6149,var_6159,var_6160,], output)
mod['func_6168'] = func_6168
mod = relay.transform.InferType()(mod)
mutated_mod['func_6168'] = func_6168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6168_call = mutated_mod.get_global_var('func_6168')
var_6170 = relay.var("var_6170", dtype = "bool", shape = (84, 2))#candidate|6170|(84, 2)|var|bool
var_6171 = relay.var("var_6171", dtype = "float64", shape = (2912,))#candidate|6171|(2912,)|var|float64
var_6172 = relay.var("var_6172", dtype = "float64", shape = (84,))#candidate|6172|(84,)|var|float64
call_6169 = func_6168_call(var_6170,var_6171,var_6172,)
output = call_6169
func_6173 = relay.Function([var_6170,var_6171,var_6172,], output)
mutated_mod['func_6173'] = func_6173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4492_call = mod.get_global_var('func_4492')
func_4494_call = mutated_mod.get_global_var('func_4494')
call_6177 = relay.TupleGetItem(func_4492_call(), 4)
call_6178 = relay.TupleGetItem(func_4494_call(), 4)
func_5441_call = mod.get_global_var('func_5441')
func_5443_call = mutated_mod.get_global_var('func_5443')
const_6197 = relay.const([True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True], dtype = "bool")#candidate|6197|(168,)|const|bool
call_6196 = relay.TupleGetItem(func_5441_call(relay.reshape(const_6197.astype('bool'), [84, 2])), 0)
call_6198 = relay.TupleGetItem(func_5443_call(relay.reshape(const_6197.astype('bool'), [84, 2])), 0)
func_5195_call = mod.get_global_var('func_5195')
func_5201_call = mutated_mod.get_global_var('func_5201')
var_6202 = relay.var("var_6202", dtype = "float32", shape = (1300,))#candidate|6202|(1300,)|var|float32
var_6203 = relay.var("var_6203", dtype = "uint8", shape = (18,))#candidate|6203|(18,)|var|uint8
var_6204 = relay.var("var_6204", dtype = "float64", shape = (66,))#candidate|6204|(66,)|var|float64
const_6205 = relay.const([-9,1,-3,-3,1,-8,7,9,-1,1,4,-9,8,-6,1,4,-10,-8,-2,-7,-10,1,6,-3,4,9,9,1,-7,8,10,7,-9,-2,-5,5,-3,-3,8,-6,-2,-10,-4,-8,10,6,-8,-10,8,-7,1,8,-8,-3,-9,-9,-5,-9,10,9,-3,-9,-9,-7,1,10,8,7,1,6,-2,-8,-4,7,4,5,10], dtype = "int64")#candidate|6205|(77,)|const|int64
call_6201 = relay.TupleGetItem(func_5195_call(relay.reshape(var_6202.astype('float32'), [650, 2]), relay.reshape(var_6203.astype('uint8'), [6, 3]), relay.reshape(const_6197.astype('bool'), [42, 4]), relay.reshape(var_6204.astype('float64'), [66,]), relay.reshape(const_6205.astype('int64'), [11, 7]), ), 6)
call_6206 = relay.TupleGetItem(func_5201_call(relay.reshape(var_6202.astype('float32'), [650, 2]), relay.reshape(var_6203.astype('uint8'), [6, 3]), relay.reshape(const_6197.astype('bool'), [42, 4]), relay.reshape(var_6204.astype('float64'), [66,]), relay.reshape(const_6205.astype('int64'), [11, 7]), ), 6)
uop_6227 = relay.log10(call_6196.astype('float64')) # shape=(84, 2)
uop_6229 = relay.log10(call_6198.astype('float64')) # shape=(84, 2)
output = relay.Tuple([call_6177,const_6197,call_6201,var_6202,var_6203,var_6204,const_6205,uop_6227,])
output2 = relay.Tuple([call_6178,const_6197,call_6206,var_6202,var_6203,var_6204,const_6205,uop_6229,])
func_6236 = relay.Function([var_6202,var_6203,var_6204,], output)
mod['func_6236'] = func_6236
mod = relay.transform.InferType()(mod)
mutated_mod['func_6236'] = func_6236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6236_call = mutated_mod.get_global_var('func_6236')
var_6238 = relay.var("var_6238", dtype = "float32", shape = (1300,))#candidate|6238|(1300,)|var|float32
var_6239 = relay.var("var_6239", dtype = "uint8", shape = (18,))#candidate|6239|(18,)|var|uint8
var_6240 = relay.var("var_6240", dtype = "float64", shape = (66,))#candidate|6240|(66,)|var|float64
call_6237 = func_6236_call(var_6238,var_6239,var_6240,)
output = call_6237
func_6241 = relay.Function([var_6238,var_6239,var_6240,], output)
mutated_mod['func_6241'] = func_6241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mod.get_global_var('func_5549')
func_5550_call = mutated_mod.get_global_var('func_5550')
call_6247 = relay.TupleGetItem(func_5549_call(), 0)
call_6248 = relay.TupleGetItem(func_5550_call(), 0)
const_6253 = relay.const([[[True,True,True,True,False,True,True,True,True,False,True,True],[False,True,True,False,True,True,True,True,False,False,True,True],[False,True,False,False,True,True,False,True,False,True,False,False],[False,True,True,False,False,False,True,False,True,False,False,True],[False,True,False,False,False,True,True,False,True,True,False,False],[False,False,True,False,True,True,False,False,True,True,False,True],[True,True,True,True,True,True,False,True,False,False,True,False]],[[False,False,False,True,False,False,True,False,False,True,True,False],[False,True,False,True,True,False,False,False,True,True,True,False],[False,True,False,True,False,True,True,False,False,False,True,False],[False,False,False,True,True,True,True,False,True,True,True,False],[True,False,False,False,True,False,False,False,True,False,True,True],[False,False,True,False,False,False,False,True,True,False,False,False],[False,True,False,True,False,False,True,True,False,True,True,True]]], dtype = "bool")#candidate|6253|(2, 7, 12)|const|bool
bop_6254 = relay.equal(call_6247.astype('bool'), relay.reshape(const_6253.astype('bool'), relay.shape_of(call_6247))) # shape=(2, 7, 12)
bop_6257 = relay.equal(call_6248.astype('bool'), relay.reshape(const_6253.astype('bool'), relay.shape_of(call_6248))) # shape=(2, 7, 12)
output = relay.Tuple([bop_6254,])
output2 = relay.Tuple([bop_6257,])
func_6267 = relay.Function([], output)
mod['func_6267'] = func_6267
mod = relay.transform.InferType()(mod)
mutated_mod['func_6267'] = func_6267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6267_call = mutated_mod.get_global_var('func_6267')
call_6268 = func_6267_call()
output = call_6268
func_6269 = relay.Function([], output)
mutated_mod['func_6269'] = func_6269
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6275 = relay.var("var_6275", dtype = "uint32", shape = ())#candidate|6275|()|var|uint32
var_6276 = relay.var("var_6276", dtype = "uint32", shape = (12, 7, 13))#candidate|6276|(12, 7, 13)|var|uint32
bop_6277 = relay.minimum(var_6275.astype('uint32'), var_6276.astype('uint32')) # shape=(12, 7, 13)
func_6168_call = mod.get_global_var('func_6168')
func_6173_call = mutated_mod.get_global_var('func_6173')
const_6306 = relay.const([[False,False,True,True,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,False,True,False,True,False],[True,False,True,True,True,False,False,False,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True],[False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True]], dtype = "bool")#candidate|6306|(3, 56)|const|bool
var_6307 = relay.var("var_6307", dtype = "float64", shape = (2912,))#candidate|6307|(2912,)|var|float64
const_6308 = relay.const([-8.409174,3.431921,-3.917426,-2.729290,-8.612784,-2.082291,-2.933289,-0.819810,2.258601,-9.282689,2.154134,9.467008,7.783892,4.598172,-2.486253,7.590604,5.433987,-3.618267,-5.066175,5.795460,0.574711,3.216863,8.836201,-0.585064,1.558348,-5.634135,2.241379,-7.491783,-1.374865,2.275681,5.694280,-6.851196,0.471856,-8.836935,7.349460,3.837727,7.160956,1.781107,-6.799950,2.770486,-1.205702,-2.679370,3.480453,-7.748070,1.001000,-0.394529,5.765327,1.166857,-5.264203,-9.086196,7.162055,-2.635727,-6.685488,2.140055,5.374198,-2.663748,-4.636137,-9.399108,7.270842,-3.531334,-8.010503,6.319895,6.991249,1.496784,-1.460598,1.367511,3.361065,-4.964807,8.147002,-2.466282,-4.632389,-5.348169,5.623154,1.796811,-0.603758,0.870509,-6.163043,-8.082693,-7.950342,1.749292,0.517477,-7.591386,-6.256229,-6.504232], dtype = "float64")#candidate|6308|(84,)|const|float64
call_6305 = relay.TupleGetItem(func_6168_call(relay.reshape(const_6306.astype('bool'), [84, 2]), relay.reshape(var_6307.astype('float64'), [2912,]), relay.reshape(const_6308.astype('float64'), [84,]), ), 0)
call_6309 = relay.TupleGetItem(func_6173_call(relay.reshape(const_6306.astype('bool'), [84, 2]), relay.reshape(var_6307.astype('float64'), [2912,]), relay.reshape(const_6308.astype('float64'), [84,]), ), 0)
func_4193_call = mod.get_global_var('func_4193')
func_4195_call = mutated_mod.get_global_var('func_4195')
call_6320 = relay.TupleGetItem(func_4193_call(), 0)
call_6321 = relay.TupleGetItem(func_4195_call(), 0)
func_6168_call = mod.get_global_var('func_6168')
func_6173_call = mutated_mod.get_global_var('func_6173')
call_6325 = relay.TupleGetItem(func_6168_call(relay.reshape(const_6306.astype('bool'), [84, 2]), relay.reshape(var_6307.astype('float64'), [2912,]), relay.reshape(const_6308.astype('float64'), [84,]), ), 4)
call_6326 = relay.TupleGetItem(func_6173_call(relay.reshape(const_6306.astype('bool'), [84, 2]), relay.reshape(var_6307.astype('float64'), [2912,]), relay.reshape(const_6308.astype('float64'), [84,]), ), 4)
output = relay.Tuple([bop_6277,call_6305,const_6306,var_6307,const_6308,call_6320,call_6325,])
output2 = relay.Tuple([bop_6277,call_6309,const_6306,var_6307,const_6308,call_6321,call_6326,])
func_6327 = relay.Function([var_6275,var_6276,var_6307,], output)
mod['func_6327'] = func_6327
mod = relay.transform.InferType()(mod)
var_6328 = relay.var("var_6328", dtype = "uint32", shape = ())#candidate|6328|()|var|uint32
var_6329 = relay.var("var_6329", dtype = "uint32", shape = (12, 7, 13))#candidate|6329|(12, 7, 13)|var|uint32
var_6330 = relay.var("var_6330", dtype = "float64", shape = (2912,))#candidate|6330|(2912,)|var|float64
output = func_6327(var_6328,var_6329,var_6330,)
func_6331 = relay.Function([var_6328,var_6329,var_6330,], output)
mutated_mod['func_6331'] = func_6331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4492_call = mod.get_global_var('func_4492')
func_4494_call = mutated_mod.get_global_var('func_4494')
call_6335 = relay.TupleGetItem(func_4492_call(), 3)
call_6336 = relay.TupleGetItem(func_4494_call(), 3)
output = relay.Tuple([call_6335,])
output2 = relay.Tuple([call_6336,])
func_6360 = relay.Function([], output)
mod['func_6360'] = func_6360
mod = relay.transform.InferType()(mod)
output = func_6360()
func_6361 = relay.Function([], output)
mutated_mod['func_6361'] = func_6361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4603_call = mod.get_global_var('func_4603')
func_4604_call = mutated_mod.get_global_var('func_4604')
call_6362 = relay.TupleGetItem(func_4603_call(), 2)
call_6363 = relay.TupleGetItem(func_4604_call(), 2)
func_6062_call = mod.get_global_var('func_6062')
func_6064_call = mutated_mod.get_global_var('func_6064')
call_6374 = func_6062_call()
call_6375 = func_6062_call()
uop_6376 = relay.rsqrt(call_6362.astype('float32')) # shape=(650, 2)
uop_6378 = relay.rsqrt(call_6363.astype('float32')) # shape=(650, 2)
func_4603_call = mod.get_global_var('func_4603')
func_4604_call = mutated_mod.get_global_var('func_4604')
call_6389 = relay.TupleGetItem(func_4603_call(), 0)
call_6390 = relay.TupleGetItem(func_4604_call(), 0)
uop_6391 = relay.exp(call_6389.astype('float32')) # shape=(132,)
uop_6393 = relay.exp(call_6390.astype('float32')) # shape=(132,)
func_318_call = mod.get_global_var('func_318')
func_323_call = mutated_mod.get_global_var('func_323')
var_6395 = relay.var("var_6395", dtype = "int64", shape = ())#candidate|6395|()|var|int64
const_6396 = relay.const([-2,3,-8,1,-7,1,-8,-4,1,8,-4,-8,-3,-8,-1,-8,-5,-1,5,6,-10,-9,-10,-1,1,-10,-2,-1,-1,3,9,-8,-4,7,9,-3,-10,9,-9,2,-2,6,1,2,-8,5,-6,-4,-2,-10,-4,-1,-7,-4,-3,-6,-9,10,10,3,6,-9,-10,1,-2,4,3,-2,-6,-7,-3,7,-7,-3,10,9,3], dtype = "int64")#candidate|6396|(77,)|const|int64
var_6397 = relay.var("var_6397", dtype = "float64", shape = (42, 2))#candidate|6397|(42, 2)|var|float64
call_6394 = relay.TupleGetItem(func_318_call(relay.reshape(var_6395.astype('int64'), []), relay.reshape(const_6396.astype('int64'), [1, 7, 11]), relay.reshape(var_6397.astype('float64'), [84,]), ), 0)
call_6398 = relay.TupleGetItem(func_323_call(relay.reshape(var_6395.astype('int64'), []), relay.reshape(const_6396.astype('int64'), [1, 7, 11]), relay.reshape(var_6397.astype('float64'), [84,]), ), 0)
output = relay.Tuple([call_6374,uop_6376,uop_6391,call_6394,var_6395,const_6396,var_6397,])
output2 = relay.Tuple([call_6375,uop_6378,uop_6393,call_6398,var_6395,const_6396,var_6397,])
func_6414 = relay.Function([var_6395,var_6397,], output)
mod['func_6414'] = func_6414
mod = relay.transform.InferType()(mod)
var_6415 = relay.var("var_6415", dtype = "int64", shape = ())#candidate|6415|()|var|int64
var_6416 = relay.var("var_6416", dtype = "float64", shape = (42, 2))#candidate|6416|(42, 2)|var|float64
output = func_6414(var_6415,var_6416,)
func_6417 = relay.Function([var_6415,var_6416,], output)
mutated_mod['func_6417'] = func_6417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4669_call = mod.get_global_var('func_4669')
func_4670_call = mutated_mod.get_global_var('func_4670')
call_6439 = func_4669_call()
call_6440 = func_4669_call()
func_6086_call = mod.get_global_var('func_6086')
func_6091_call = mutated_mod.get_global_var('func_6091')
var_6450 = relay.var("var_6450", dtype = "float32", shape = (1300,))#candidate|6450|(1300,)|var|float32
const_6451 = relay.const([5,9,-6,-8,9,10,-7,-10,-7,-6,-1,9,-5,-4,-4,5,5,-7], dtype = "uint8")#candidate|6451|(18,)|const|uint8
var_6452 = relay.var("var_6452", dtype = "float64", shape = (66,))#candidate|6452|(66,)|var|float64
const_6453 = relay.const([8.740055,7.393035,0.088791,0.432859,-7.246279,-2.950790,-1.826648,3.021665,2.787660,-2.039403,-0.184027,-9.241706,9.035204,-2.640319,-8.599003,7.139011,7.615972,8.251619,-5.844561,-3.705203,-2.971123,-6.066711,-9.736366,-3.315353,2.411433,6.598061,-3.313865,-9.313365,6.823658,-7.197075,-1.796910,3.426814,-1.765130,-1.316365,7.955151,-1.927203,2.139490,-0.533989,-4.280105,3.744859,8.514658,6.269208,-9.185631,-2.365497,-9.894413,4.185985,-6.543123,-0.814781,8.495479,-6.977156,2.062769,3.593102,1.705645,4.607493,-1.182672,8.707570,7.695810,7.614606,1.892530,6.197817,5.962171,-1.296245,5.620448,-9.704408,9.857784,5.456504,1.417481,8.545192,-2.044417,-3.413716,7.136308,7.556926,-8.237186,4.065105,-9.348476,8.609653,5.626664,9.497630,-7.803755,-5.508068,-3.082468,6.400598,-4.230547,0.714149,3.983375,7.038957,2.341740,8.443320,-0.495080,2.787816,9.710666,-7.551571,-7.759282,5.864585,3.930770,-9.029580,5.320635,-5.642213,-0.130203,-4.272462,4.867423,0.966358,-9.141940,6.642868,9.614881,6.384543,8.408826,5.398905,-8.496612,6.712367,-4.625727,5.811590,2.656526,1.759636,9.637959,5.432896,-8.855624,-4.712585,3.749597,1.357008,-9.052301,8.659112,-2.074356,-5.731587,4.786836,-1.912471,1.683416,0.114420,4.479826,0.058807,-6.543067,-3.673863,4.623669,-0.904491,-8.751443,5.407617,-8.917802,-9.050013,2.559707,4.814269,-5.726903,8.535202,-2.501551,-5.175645,9.746174,-7.844134,-2.920291,-0.723784,3.331408,-3.859141,-5.230074,9.570917,-9.660537,9.569811,-2.245381,-1.928862,7.074352,-5.749346,-3.390939,3.835415,-3.836100,-0.942562,-9.781456,-2.144659,7.110766,6.622438,-2.194932,-5.552025,6.285217,4.866654,5.200780,-2.175045,6.989701,-9.711547,-0.790643,2.515930,4.946849,2.122036,1.568704,-1.608479,0.331478,-9.824275,-4.991882,-8.263311,7.337141,9.457779,-3.970059,0.669696,-5.199257,1.567891,2.360911,-4.924157,-4.013316,7.890427,3.500349,-5.351716,1.686022,4.960204,-4.394997,9.809623,2.940434,-3.690361,3.370766,9.668123,1.500081,-8.138496,0.004775,6.639107,-4.324523,4.555795,-4.535271,-2.035716,6.704915,6.037477,-3.378153,4.661536,5.566615,0.803490,3.604257,6.580309,9.629657,5.380720,-1.051777,1.321461,7.445696,-2.278852,-9.560042,-9.762431,-3.591728,8.688083,-8.111429], dtype = "float32")#candidate|6453|(231,)|const|float32
call_6449 = relay.TupleGetItem(func_6086_call(relay.reshape(var_6450.astype('float32'), [1300, 1]), relay.reshape(const_6451.astype('uint8'), [18,]), relay.reshape(var_6452.astype('float64'), [66,]), relay.reshape(const_6453.astype('float32'), [231,]), ), 6)
call_6454 = relay.TupleGetItem(func_6091_call(relay.reshape(var_6450.astype('float32'), [1300, 1]), relay.reshape(const_6451.astype('uint8'), [18,]), relay.reshape(var_6452.astype('float64'), [66,]), relay.reshape(const_6453.astype('float32'), [231,]), ), 6)
func_6414_call = mod.get_global_var('func_6414')
func_6417_call = mutated_mod.get_global_var('func_6417')
var_6456 = relay.var("var_6456", dtype = "int64", shape = ())#candidate|6456|()|var|int64
var_6457 = relay.var("var_6457", dtype = "float64", shape = (84,))#candidate|6457|(84,)|var|float64
call_6455 = relay.TupleGetItem(func_6414_call(relay.reshape(var_6456.astype('int64'), []), relay.reshape(var_6457.astype('float64'), [42, 2]), ), 1)
call_6458 = relay.TupleGetItem(func_6417_call(relay.reshape(var_6456.astype('int64'), []), relay.reshape(var_6457.astype('float64'), [42, 2]), ), 1)
output = relay.Tuple([call_6439,call_6449,var_6450,const_6451,var_6452,const_6453,call_6455,var_6456,var_6457,])
output2 = relay.Tuple([call_6440,call_6454,var_6450,const_6451,var_6452,const_6453,call_6458,var_6456,var_6457,])
func_6464 = relay.Function([var_6450,var_6452,var_6456,var_6457,], output)
mod['func_6464'] = func_6464
mod = relay.transform.InferType()(mod)
mutated_mod['func_6464'] = func_6464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6464_call = mutated_mod.get_global_var('func_6464')
var_6466 = relay.var("var_6466", dtype = "float32", shape = (1300,))#candidate|6466|(1300,)|var|float32
var_6467 = relay.var("var_6467", dtype = "float64", shape = (66,))#candidate|6467|(66,)|var|float64
var_6468 = relay.var("var_6468", dtype = "int64", shape = ())#candidate|6468|()|var|int64
var_6469 = relay.var("var_6469", dtype = "float64", shape = (84,))#candidate|6469|(84,)|var|float64
call_6465 = func_6464_call(var_6466,var_6467,var_6468,var_6469,)
output = call_6465
func_6470 = relay.Function([var_6466,var_6467,var_6468,var_6469,], output)
mutated_mod['func_6470'] = func_6470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5644_call = mod.get_global_var('func_5644')
func_5645_call = mutated_mod.get_global_var('func_5645')
call_6497 = relay.TupleGetItem(func_5644_call(), 0)
call_6498 = relay.TupleGetItem(func_5645_call(), 0)
uop_6501 = relay.log2(call_6497.astype('float64')) # shape=(650, 2)
uop_6503 = relay.log2(call_6498.astype('float64')) # shape=(650, 2)
func_887_call = mod.get_global_var('func_887')
func_889_call = mutated_mod.get_global_var('func_889')
var_6505 = relay.var("var_6505", dtype = "uint8", shape = (1, 18))#candidate|6505|(1, 18)|var|uint8
call_6504 = relay.TupleGetItem(func_887_call(relay.reshape(var_6505.astype('uint8'), [2, 1, 9])), 0)
call_6506 = relay.TupleGetItem(func_889_call(relay.reshape(var_6505.astype('uint8'), [2, 1, 9])), 0)
var_6508 = relay.var("var_6508", dtype = "float32", shape = (2, 10, 9))#candidate|6508|(2, 10, 9)|var|float32
bop_6509 = relay.logical_or(call_6504.astype('bool'), relay.reshape(var_6508.astype('bool'), relay.shape_of(call_6504))) # shape=(2, 10, 9)
bop_6512 = relay.logical_or(call_6506.astype('bool'), relay.reshape(var_6508.astype('bool'), relay.shape_of(call_6506))) # shape=(2, 10, 9)
bop_6527 = relay.equal(uop_6501.astype('bool'), relay.reshape(call_6497.astype('bool'), relay.shape_of(uop_6501))) # shape=(650, 2)
bop_6530 = relay.equal(uop_6503.astype('bool'), relay.reshape(call_6498.astype('bool'), relay.shape_of(uop_6503))) # shape=(650, 2)
var_6535 = relay.var("var_6535", dtype = "uint8", shape = (6, 18))#candidate|6535|(6, 18)|var|uint8
bop_6536 = relay.power(var_6505.astype('float64'), var_6535.astype('float64')) # shape=(6, 18)
func_6033_call = mod.get_global_var('func_6033')
func_6035_call = mutated_mod.get_global_var('func_6035')
var_6541 = relay.var("var_6541", dtype = "float64", shape = (20,))#candidate|6541|(20,)|var|float64
call_6540 = relay.TupleGetItem(func_6033_call(relay.reshape(var_6541.astype('float64'), [5, 4, 1])), 0)
call_6542 = relay.TupleGetItem(func_6035_call(relay.reshape(var_6541.astype('float64'), [5, 4, 1])), 0)
output = relay.Tuple([bop_6509,bop_6527,bop_6536,call_6540,var_6541,])
output2 = relay.Tuple([bop_6512,bop_6530,bop_6536,call_6542,var_6541,])
func_6543 = relay.Function([var_6505,var_6508,var_6535,var_6541,], output)
mod['func_6543'] = func_6543
mod = relay.transform.InferType()(mod)
var_6544 = relay.var("var_6544", dtype = "uint8", shape = (1, 18))#candidate|6544|(1, 18)|var|uint8
var_6545 = relay.var("var_6545", dtype = "float32", shape = (2, 10, 9))#candidate|6545|(2, 10, 9)|var|float32
var_6546 = relay.var("var_6546", dtype = "uint8", shape = (6, 18))#candidate|6546|(6, 18)|var|uint8
var_6547 = relay.var("var_6547", dtype = "float64", shape = (20,))#candidate|6547|(20,)|var|float64
output = func_6543(var_6544,var_6545,var_6546,var_6547,)
func_6548 = relay.Function([var_6544,var_6545,var_6546,var_6547,], output)
mutated_mod['func_6548'] = func_6548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5313_call = mod.get_global_var('func_5313')
func_5314_call = mutated_mod.get_global_var('func_5314')
call_6592 = func_5313_call()
call_6593 = func_5313_call()
uop_6596 = relay.log10(call_6592.astype('float32')) # shape=(2, 7, 12)
uop_6598 = relay.log10(call_6593.astype('float32')) # shape=(2, 7, 12)
uop_6602 = relay.erf(call_6592.astype('float64')) # shape=(2, 7, 12)
uop_6604 = relay.erf(call_6593.astype('float64')) # shape=(2, 7, 12)
output = relay.Tuple([uop_6596,uop_6602,])
output2 = relay.Tuple([uop_6598,uop_6604,])
func_6605 = relay.Function([], output)
mod['func_6605'] = func_6605
mod = relay.transform.InferType()(mod)
output = func_6605()
func_6606 = relay.Function([], output)
mutated_mod['func_6606'] = func_6606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6267_call = mod.get_global_var('func_6267')
func_6269_call = mutated_mod.get_global_var('func_6269')
call_6677 = relay.TupleGetItem(func_6267_call(), 0)
call_6678 = relay.TupleGetItem(func_6269_call(), 0)
output = relay.Tuple([call_6677,])
output2 = relay.Tuple([call_6678,])
func_6681 = relay.Function([], output)
mod['func_6681'] = func_6681
mod = relay.transform.InferType()(mod)
mutated_mod['func_6681'] = func_6681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6681_call = mutated_mod.get_global_var('func_6681')
call_6682 = func_6681_call()
output = call_6682
func_6683 = relay.Function([], output)
mutated_mod['func_6683'] = func_6683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5644_call = mod.get_global_var('func_5644')
func_5645_call = mutated_mod.get_global_var('func_5645')
call_6716 = relay.TupleGetItem(func_5644_call(), 0)
call_6717 = relay.TupleGetItem(func_5645_call(), 0)
var_6724 = relay.var("var_6724", dtype = "bool", shape = (650, 2))#candidate|6724|(650, 2)|var|bool
bop_6725 = relay.bitwise_and(call_6716.astype('uint64'), relay.reshape(var_6724.astype('uint64'), relay.shape_of(call_6716))) # shape=(650, 2)
bop_6728 = relay.bitwise_and(call_6717.astype('uint64'), relay.reshape(var_6724.astype('uint64'), relay.shape_of(call_6717))) # shape=(650, 2)
uop_6733 = relay.cosh(var_6724.astype('float64')) # shape=(650, 2)
output = relay.Tuple([bop_6725,uop_6733,])
output2 = relay.Tuple([bop_6728,uop_6733,])
F = relay.Function([var_6724,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6724,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

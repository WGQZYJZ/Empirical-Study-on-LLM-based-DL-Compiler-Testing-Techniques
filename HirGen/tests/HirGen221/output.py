import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_27 = relay.const([[[True,True,False,True,False],[False,True,True,True,True],[False,False,False,False,False],[False,True,False,False,False],[False,True,True,True,False],[False,False,False,True,False],[True,False,True,True,True],[True,True,True,True,True],[False,True,True,False,True]],[[True,True,False,True,True],[False,False,False,False,True],[False,False,False,True,True],[False,False,True,False,True],[True,True,False,False,False],[True,False,True,False,False],[False,True,True,True,True],[True,True,True,True,True],[False,False,False,False,True]],[[True,True,True,True,True],[False,False,False,False,False],[True,False,False,False,False],[False,True,False,False,False],[True,True,True,False,False],[True,False,False,True,True],[True,False,False,False,True],[True,False,True,True,True],[True,False,True,True,True]]], dtype = "bool")#candidate|27|(3, 9, 5)|const|bool
var_28 = relay.var("var_28", dtype = "bool", shape = (3, 9, 5))#candidate|28|(3, 9, 5)|var|bool
bop_29 = relay.logical_and(const_27.astype('bool'), relay.reshape(var_28.astype('bool'), relay.shape_of(const_27))) # shape=(3, 9, 5)
var_50 = relay.var("var_50", dtype = "bool", shape = (3, 9, 5))#candidate|50|(3, 9, 5)|var|bool
bop_51 = relay.maximum(const_27.astype('uint64'), relay.reshape(var_50.astype('uint64'), relay.shape_of(const_27))) # shape=(3, 9, 5)
bop_54 = relay.less(const_27.astype('bool'), relay.reshape(var_50.astype('bool'), relay.shape_of(const_27))) # shape=(3, 9, 5)
bop_73 = relay.floor_mod(const_27.astype('float64'), relay.reshape(bop_29.astype('float64'), relay.shape_of(const_27))) # shape=(3, 9, 5)
output = relay.Tuple([bop_51,bop_54,bop_73,])
output2 = relay.Tuple([bop_51,bop_54,bop_73,])
func_76 = relay.Function([var_28,var_50,], output)
mod['func_76'] = func_76
mod = relay.transform.InferType()(mod)
var_77 = relay.var("var_77", dtype = "bool", shape = (3, 9, 5))#candidate|77|(3, 9, 5)|var|bool
var_78 = relay.var("var_78", dtype = "bool", shape = (3, 9, 5))#candidate|78|(3, 9, 5)|var|bool
output = func_76(var_77,var_78,)
func_79 = relay.Function([var_77,var_78,], output)
mutated_mod['func_79'] = func_79
mutated_mod = relay.transform.InferType()(mutated_mod)
var_616 = relay.var("var_616", dtype = "float32", shape = (15, 9, 16))#candidate|616|(15, 9, 16)|var|float32
var_617 = relay.var("var_617", dtype = "float32", shape = (15, 9, 16))#candidate|617|(15, 9, 16)|var|float32
bop_618 = relay.floor_mod(var_616.astype('float32'), relay.reshape(var_617.astype('float32'), relay.shape_of(var_616))) # shape=(15, 9, 16)
output = relay.Tuple([bop_618,])
output2 = relay.Tuple([bop_618,])
func_622 = relay.Function([var_616,var_617,], output)
mod['func_622'] = func_622
mod = relay.transform.InferType()(mod)
var_623 = relay.var("var_623", dtype = "float32", shape = (15, 9, 16))#candidate|623|(15, 9, 16)|var|float32
var_624 = relay.var("var_624", dtype = "float32", shape = (15, 9, 16))#candidate|624|(15, 9, 16)|var|float32
output = func_622(var_623,var_624,)
func_625 = relay.Function([var_623,var_624,], output)
mutated_mod['func_625'] = func_625
mutated_mod = relay.transform.InferType()(mutated_mod)
const_809 = relay.const(-3, dtype = "uint8")#candidate|809|()|const|uint8
var_810 = relay.var("var_810", dtype = "uint8", shape = (7, 5, 3))#candidate|810|(7, 5, 3)|var|uint8
bop_811 = relay.logical_xor(const_809.astype('uint8'), var_810.astype('uint8')) # shape=(7, 5, 3)
bop_814 = relay.greater_equal(const_809.astype('bool'), var_810.astype('bool')) # shape=(7, 5, 3)
func_622_call = mod.get_global_var('func_622')
func_625_call = mutated_mod.get_global_var('func_625')
const_820 = relay.const([3.832618,7.895407,2.459056,1.181902,-2.803401,-2.185045,-7.138262,-1.958111,-7.462491,2.076594,2.659042,9.207144,-3.899830,0.314339,7.811694,8.533799,-0.254749,5.538850,7.600204,6.124846,0.134724,8.610556,-1.896245,0.538851,-3.704538,-2.970633,-8.768678,8.183517,-0.763771,-2.599504,1.034279,-5.742307,-9.612513,8.840325,-0.294740,3.963066,-4.080837,8.119216,1.186578,3.591725,3.855736,7.618500,-2.136715,-5.686161,3.200684,-8.453527,-7.112537,-4.127716,-8.731640,-6.993954,8.780293,-4.088200,-5.476639,-8.589550,-3.673037,8.871659,8.085136,9.660499,8.615696,-5.606879,-0.521272,4.693115,3.722721,6.760118,2.261809,-7.253567,-1.449444,-6.091171,-3.396256,-5.971646,-0.518725,-2.439274,-2.200738,7.158861,9.302399,-8.215065,-8.907048,-4.681469,-7.310998,6.745498,9.595266,-2.488260,-9.844552,-3.048130,8.984793,-7.772396,-7.332893,1.553935,-9.357193,-2.107111,-9.936232,-6.239471,-8.924534,-0.267051,-9.399568,-8.670850,4.258718,5.450791,4.359464,-3.275729,-1.681399,-9.505567,8.019852,3.375231,9.192733,5.945273,4.919963,-6.596588,-6.788263,-5.951663,1.873552,-5.890966,2.849291,-9.292588,7.642210,4.098306,4.960316,-8.539475,9.597021,0.164755,6.923217,-0.591651,-9.701995,-3.879167,2.232513,6.285838,1.964067,5.363860,-5.049898,6.365077,-4.124298,0.509975,-4.727481,-3.967683,-6.697707,-1.455693,-1.538596,-2.977728,-3.982220,4.869319,7.101893,-8.051011,-0.849116,4.426124,1.040237,-2.698115,3.331715,-7.134970,7.454302,7.677229,-9.270051,3.079114,-9.974117,8.121340,-4.633008,-2.340188,4.220626,-4.372979,-0.423106,-5.581045,-8.598603,9.285459,9.531871,3.064352,-2.954597,-8.597646,5.144533,2.223686,9.309786,-9.759152,0.952062,3.857494,9.393986,-0.384976,0.137359,1.497042,0.825652,6.687372,-8.897791,7.540814,3.896558,4.224753,3.273805,-1.306223,1.583341,-8.791760,4.995910,-1.957818,2.608208,-1.144919,8.644820,-0.246101,-3.816008,5.142780,-5.412665,0.705303,-7.445622,-6.630354,9.957517,-1.098676,5.075407,1.851850,-6.545103,0.912074,-8.040860,-1.366591,-5.120337,-7.664613,-3.441438,7.922013,-2.397122,-8.243405,-8.229232,-0.593469,6.341827,-9.471052,0.743347,0.909979,8.634013,0.771979,-8.706854,-0.692019,-1.958569,3.352627,-6.547645,9.006020,5.371515,-5.324380,5.163844,4.829134,0.641446,3.854531,9.881419,8.289275,-9.796761,-2.522306,-3.909464,0.648221,4.033391,-5.078837,7.641577,-9.003010,7.288255,-9.968739,4.331029,-9.638508,-1.997858,4.764795,-4.051016,-6.351019,7.532405,-4.546874,0.996776,-0.294110,-6.466354,8.299186,9.390658,9.131800,-1.031044,8.639718,1.360692,-0.266383,7.063622,-1.681757,-0.840822,-9.586797,4.015548,-7.940216,-7.527762,-1.969611,4.739987,7.553490,7.964902,6.947753,-7.306885,-8.342670,-5.019796,6.037086,-4.574584,-6.050903,3.646171,4.120923,1.685323,4.368333,-0.538129,-9.931256,7.034064,-9.712381,-7.032729,-1.446149,-8.705122,0.012664,-4.803334,5.423200,-1.261542,0.840043,-8.326227,-8.135093,-3.204113,-5.115120,4.518724,-9.662192,-4.903838,-1.549958,5.796801,6.441041,4.729459,-0.727444,-3.597264,-5.450164,5.385237,-7.725276,-3.202104,6.329179,-6.876894,-9.732168,4.849563,0.979890,3.430700,-6.637137,-8.168423,7.648458,-4.265643,7.138494,5.368213,2.622641,-9.910520,-2.602251,0.864189,4.220805,5.439843,8.369040,1.562406,-0.441206,-7.941746,3.737565,6.274685,-8.845166,-7.791151,-9.346567,-2.438536,3.195528,0.764791,4.953464,1.187867,-7.272943,-1.949396,4.824756,-0.660808,2.770316,8.074209,-1.515947,8.088764,-5.739711,-5.934649,4.959108,9.590454,6.167272,-4.775501,1.101401,-1.296964,2.741702,8.602477,-0.003213,-4.072655,4.777874,-2.745550,-0.542096,-1.597495,4.182303,8.292944,3.984287,0.643132,4.110798,-0.778051,-7.063330,7.634794,7.538345,-6.932575,-8.997689,8.791335,-9.866442,8.055041,6.614875,-4.377757,9.514494,8.647655,-4.164575,4.779955,5.995576,-7.209616,-9.598346,9.602254,-4.594324,8.385172,-6.341523,-1.955344,-3.933833,-3.014510,-2.702675,2.739319,-8.139295,-7.886358,2.303518,4.458567,2.222196,-5.274498,2.942554,-9.956550,-1.438052,-7.382930,-4.103666,7.322025,6.213419,8.833145,-8.097612,7.537017,4.280695,3.727901,5.209961,3.340135,-7.564650,7.901416,4.630684,-9.973529,7.315414,8.277593,7.320513,0.627583,-4.799133,-6.766578,4.491593,2.094028,-3.051289,6.745177,4.826910,-8.247790,3.525692,3.386513,1.320771,-3.371199,7.244214,0.344831,-8.230768,6.265524,6.928859,-6.126752,8.155784,4.859585,-0.107547,0.827346,-5.875008,-0.531864,4.613938,-2.277795,9.489045,-3.453980,-8.303546,7.080827,-3.407149,9.859388,3.224506,-4.670115,-3.606535,-0.092878,-3.691830,-9.411247,2.999979,-3.539908,1.948260,-5.103969,7.261541,9.288679,-6.453739,2.219803,6.041843,-3.507410,-5.654358,5.165442,-4.383238,4.203076,7.126446,4.965893,-7.141521,-4.918907,1.282337,-7.828492,9.404366,-3.120668,8.179759,-2.710941,3.639418,7.012975,8.953935,-4.992143,-1.355436,-3.313916,3.701659,-0.357368,-9.314684,7.481073,4.384709,-8.747169,4.402476,-9.506568,-3.767850,4.171769,8.196551,8.643260,3.062210,9.474893,-1.710523,-8.565716,5.429209,2.736640,4.258325,9.341291,5.658058,4.218096,9.774077,1.177365,-1.646009,3.181303,5.646743,-6.378480,-6.747622,-2.286788,1.108984,-7.211716,2.939118,-6.244910,8.536955,-9.549452,-6.172831,8.052163,6.485923,6.970818,-6.927792,-0.827643,-0.607060,-3.591569,-2.242581,6.253885,3.137010,-2.923969,8.092844,1.579031,7.184985,9.844656,2.140208,6.706860,5.011912,-0.275367,3.434761,7.153820,4.087826,-5.016466,-7.559692,-1.958544,7.070284,6.564682,9.941676,5.840339,-5.512905,-1.333808,-4.766168,-5.106723,1.366387,8.070355,5.979415,-6.536124,-4.411058,-8.532683,-6.940846,4.994808,-0.169481,-0.125571,8.513983,-5.590853,7.204074,-4.733248,-7.654027,6.108989,2.222311,-8.675198,-6.500751,-7.729644,9.887576,3.280710,0.116745,6.351980,5.799157,1.300076,-0.137268,-7.599133,3.999642,5.786078,-8.016259,9.212951,5.168591,-9.735780,-3.956873,-2.544456,-5.237077,5.049941,-6.218852,1.686572,-4.914975,7.374752,-6.441164,-0.401330,-3.027335,9.370455,7.610782,-8.802583,-0.674622,-6.184662,0.940161,-4.375091,-9.934439,3.258058,-6.876302,2.771743,-4.497564,1.701798,-9.748378,-7.889727,6.465685,7.207789,-3.566014,2.195127,5.326898,9.968933,9.708607,-4.559033,6.972846,-0.069497,-5.214653,-7.580479,-3.909560,8.442063,-8.157080,6.624902,6.052836,-7.974271,2.495478,-0.462910,6.991094,6.371330,6.408836,-2.654585,-9.041662,-1.181735,-6.650086,2.645022,7.696720,-3.191249,-3.596236,5.035506,-0.477102,7.372585,-6.361998,-2.615865,3.820695,-4.078276,1.653184,1.799827,3.515074,-1.257575,-3.685876,0.053336,-3.981011,3.130613,3.137821,-2.312039,-0.407504,4.550705,4.209185,-8.656076,-5.942581,9.896424,-9.889199,3.945639,1.146075,5.031978,1.911229,8.840818,-0.459528,-7.858675,5.570522,-0.217747,-2.934120,-2.167511,9.727770,-3.834708,5.045585,-8.301916,-2.952894,-7.877564,6.143616,7.495090,-7.712250,3.762571,-0.455807,-9.040066,-9.402560,2.284170,6.072536,8.932214,7.534481,-2.349084,4.703163,-5.222068,-8.516033,0.412729,-7.980660,-8.350793,5.192680,-5.407203,3.533169,-0.570484,5.478098,-3.108796,8.517444,9.526552,2.068480,-1.202773,-4.633915,-6.970941,5.625747,1.804518,-5.127359,-0.427530,3.827028,5.765802,4.473592,-5.665036,-6.636283,4.658452,-0.519780,-6.946326,-4.293246,3.902483,6.568180,3.766529,9.455571,-4.588092,-1.859931,-1.916720,4.854967,-9.383901,9.274606,2.109374,5.449159,7.282923,-5.516393,7.036282,-7.156704,9.068780,-6.378345,-1.773010,2.503362,-0.618401,9.372645,1.191592,-0.791079,-7.466594,9.104294,1.511409,-8.174091,-8.547203,-9.388455,-9.790311,-1.540659,-1.131338,-0.976099,7.596145,-1.897491,-7.841419,-1.906247,-8.519489,4.832126,-1.191104,3.171009,-4.270721,-7.864883,-8.511516,-0.570171,-3.013428,-0.807765,-2.493429,9.277130,3.090128,6.396628,-8.160036,4.029387,-2.468733,2.837907,6.906290,3.585097,-1.690189,2.908193,-3.933311,5.172712,-2.066928,-5.582619,1.092885,-9.161303,5.134139,-3.871026,2.332932,-4.055046,-6.419202,-6.967769,-2.479368,4.095687,-4.739367,5.119882,3.474870,2.657089,0.627844,-9.216902,5.041545,3.669858,-0.644172,-5.754957,6.077937,7.261820,-6.299795,-8.593646,6.095077,-5.882001,-3.062597,0.746762,-7.247770,6.778215,-6.018055,-9.742611,5.149783,-8.337356,8.608525,2.092712,9.312087,7.972033,8.608541,5.825283,0.724868,-2.944693,9.454638,7.453857,-4.674200,0.063331,-5.335896,-1.882856,7.555179,1.267670,-7.837857,-8.925511,-0.884481,3.844474,7.073031,-3.694510,-8.062447,-7.187410,-0.228854,-6.077005,-2.876724,1.420368,6.608649,-5.795156,-4.662410,-9.771264,9.038903,6.357007,-7.310764,4.867959,6.096865,-6.803231,-1.487315,2.316179,9.919780,2.476516,-7.010149,-5.668763,-1.583353,-7.755656,7.607613,6.909285,9.349270,-7.863557,-8.341230,3.464279,9.112499,0.278048,-4.345624,4.554989,-5.185218,-6.149451,8.220358,9.848326,0.765999,5.411038,-1.348883,1.315276,9.764782,1.286570,4.481866,3.067645,-0.748907,-7.363426,5.050011,-4.348276,-3.960265,-4.716214,-2.665640,-2.963209,-2.866987,-3.673795,-0.915407,-1.833284,2.627700,7.561237,8.120249,6.606477,-1.674014,-4.488598,6.430558,1.272395,5.120309,-8.608712,1.561368,-8.070800,-3.686062,-6.425881,-9.467278,-6.900505,-9.884076,8.591852,-7.100648,-6.345122,-0.799446,-8.338939,5.714050,-8.332216,-4.170552,-7.299652,9.828745,6.071869,6.694609,-4.604310,-1.062448,8.678690,1.434230,-7.196590,-5.377673,-4.888434,-4.962941,-4.544437,-9.245943,-0.804085,9.591569,8.775197,7.427483,-0.292380,-3.498924,5.659818,9.864516,-1.610956,3.336650,-3.185775,3.174987,-3.036476,-9.151440,0.245737,4.818970,8.414207,4.687012,5.218161,6.087573,9.560244,4.147547,-8.597401,-1.182457,4.601076,-0.787556,2.459694,-8.233910,0.029914,-1.145796,8.855886,-5.462726,5.535339,2.092518,6.148918,-4.477091,2.801793,6.622190,2.337348,-7.381644,6.573724,-9.480101,-6.740961,-2.738516,7.687448,-4.708442,2.063278,5.152835,-2.829734,9.602593,2.490274,2.865090,3.180509,3.671314,-4.141758,9.928181,-1.859169,-1.314776,-8.727816,-1.742038,9.322483,3.398846,7.460608,4.405167,4.786155,2.883997,3.238124,6.183958,5.517895,9.864799,-7.333860,5.867938,-5.743335,6.523353,7.341009,6.022680,2.783481,7.410615,8.280758,-7.325239,4.929848,-0.636757,-8.984971,-6.210507,-8.327512,7.983674,-8.152529,0.414673,-1.229926,-9.966539,-2.318385,5.005853,-9.602253,-7.920404,7.755740,-7.333476,6.197463,2.203046,4.071401,7.911415,7.172930,-2.976104,-1.678514,3.935777,3.521172,-9.948382,7.038334,5.654687,-0.678930,6.934289,-1.520226,-0.822470,-7.892726,-9.623485,7.393027,8.751268,-4.884644,0.846819,6.385227,-3.836134,-1.616814,-6.927001,-0.747064,3.007218,-5.195546,-2.235662,-3.356984,-9.605316,4.739539,-5.292346,-2.946451,3.580655,-3.428014,7.596991,5.564110,-0.940641,-2.175420,3.245758,-8.830862,2.854709,-6.914475,7.473029,5.640843,5.669330,-4.909805,5.850296,-8.854135,-9.287567,3.121810,-0.744866,9.634078,-7.376764,-2.609329,-3.659030,-0.373749,7.463798,9.243427,-8.028762,-7.806435,8.906767,6.753077,5.435252,-6.882316,-6.812140,-9.049697,-5.965710,8.901683,2.175283,8.453762,-5.185080,-6.872070,-9.997086,8.428116,-4.186309,-6.156186,-7.584098,-6.287561,2.617910,2.711311,4.382539,4.430501,3.755570,-0.264072,-4.034154,-2.871512,-6.133991,-8.988915,5.145295,7.170443,7.258432,4.154263,2.799893,1.229174,-4.154345,8.370355,-3.393451,-7.115411,0.502322,9.783711,-0.488675,1.233640,-9.918363,4.190413,3.217156,1.571687,-9.333071,-5.576340,-5.520692,2.257864,0.401103,-8.559557,7.609665,5.673718,-0.241453,-1.808851,0.690499,1.305667,3.183967,2.639266,2.209727,1.554522,7.904363,5.150235,5.154352,2.857972,1.342808,4.165268,-6.316116,-0.790733,6.905882,5.482458,-4.068256,-4.405183,9.588751,-2.025289,-6.309020,-1.281009,5.923243,8.314844,-0.288398,4.542302,2.537702,-5.594255,-3.737586,-5.042685,0.377305,-5.759427,-7.490428,8.677449,-7.484782,-8.787274,5.493307,-2.267426,-0.179193,-6.547816,-7.557044,4.993115,-5.786155,2.707677,-8.229967,-6.941207,3.004508,4.117404,7.504818,7.461539,-3.246993,-9.395714,4.930619,-2.383039,-6.296819,-3.964470,4.888839,-0.246661,-8.828845,-6.220085,0.088041,-4.704521,0.807227,-6.359685,8.467173,-5.793665,8.213130,5.726037,7.927775,0.026556,-7.037147,4.632653,1.298885,0.399115,5.556426,-9.761439,-9.022210,-3.086879,-8.508751,-4.434538,-9.759565,9.343044,8.749717,-3.602083,-5.540431,9.737908,-5.744766,-3.434994,-9.318857,6.535616,3.135888,9.249816,-7.529982,5.795587,-8.532076,-0.572920,-6.221894,1.064482,2.396909,0.089429,5.567511,-9.130389,9.594774,7.085469,1.315187,2.260592,-1.661052,-0.274076,-4.845964,5.228062,-2.956587,-7.236555,0.430135,-9.992043,3.275488,-1.485414,-9.080920,-9.700323,-1.398650,-8.279301,-7.274286,-8.059017,-7.657876,-8.671786,8.254574,1.987223,7.651295,-8.740609,7.542489,1.207113,-5.145722,9.149497,8.742359,-2.721620,7.838037,2.295333,1.142543,-2.249583,-2.990601,-7.925909,-2.648148,2.331546,2.078170,-6.437390,8.996156,-3.315905,-3.001091,-4.947164,5.241347,4.020904,5.910396,7.414151,-9.312258,-1.081423,-0.248333,-3.833457,1.827862,-5.923590,-6.118696,5.136670,8.859616,1.920521,-9.653375,8.159426,0.782842,-0.920629,7.051138,4.566462,-0.314845,-4.342205,-5.857143,7.151297,5.154371,8.547937,6.652590,4.797997,-0.379795,-1.309479,-7.927778,-5.765274,-1.720802,0.042749,-1.164598,2.644356,-8.999465,5.054217,1.384196,-2.583089,9.063342,-4.450729,2.677348,9.762764,-3.652781,-6.465864,3.340889,-2.433572,2.657637,2.383177,-7.615290,-8.663104,-9.188435,-5.641227,2.015694,-3.713855,-6.404489,6.339510,-8.484896,3.110752,-6.028644,-8.715726,-6.727564,8.272836,-9.246244,-4.860545,6.637350,6.559250,-7.055656,9.399071,3.341273,-3.081319,-6.903080,8.362403,-7.518049,-9.334880,-1.834969,-6.589256,9.388343,-2.623437,-1.091093,0.010297,-5.338871,-7.924418,-2.379398,-3.187263,4.424272,5.496247,-7.219397,0.301237,8.159389,4.517713,-8.547769,-4.097091,1.715767,0.971458,2.375866,3.094837,9.771102,3.630248,-0.640913,1.814417,-0.079382,3.580592,0.551367,-8.191382,-6.264176,-1.350729,3.368373,5.627648,-1.586220,8.324733,7.443846,1.749179,-3.958217,-6.246894,-6.598439,-1.989465,-3.742454,1.593312,-8.966097,-7.653688,3.437952,2.318980,2.106573,6.613276,6.740140,-0.555907,6.987994,-6.359185,-7.574202,-1.777182,-8.024557,1.188435,7.342937,8.700168,-7.986892,-3.045694,-4.899774,2.066117,-1.092746,5.588366,7.540495,-9.185665,1.231828,-5.971085,4.955446,-7.837498,5.333911,-0.023569,-0.858599,6.135296,5.847556,-7.357940,7.015772,-3.139636,-4.613338,-9.997793,7.768211,3.774856,1.799717,-2.050574,-1.864114,-3.806587,-4.273295,-5.053318,-0.743001,-2.183574,-7.263177,-5.752355,-2.459341,6.953093,-4.935914,-7.713449,0.420877,9.843548,9.079577,7.380091,-1.206823,8.985521,7.903553,-5.341735,0.748237,8.218641,7.293480,-1.646880,-3.937729,1.320131,2.502018,-7.014947,6.233408,9.530648,3.058613,-1.396977,-0.778745,0.896997,-5.035315,-3.396735,-9.731989,5.161416,0.631110,4.234340,0.615383,-0.724236,-1.737742,3.837982,-9.084389,-8.112900,-0.479885,-6.644538,-4.113527,-2.395033,4.974356,9.722123,-7.150528,2.054056,-0.748906,-0.863210,1.815121,-3.119657,3.615161,6.405032,-6.160195,-4.857651,2.690169,2.482817,-8.199498,-1.222536,-8.878042,3.288353,-3.329632,-7.805155,1.496729,-9.974030,-5.231128,-1.848695,4.174517,3.521165,2.401685,-4.116556,-9.841489,-9.109323,6.815395,-0.946051,-8.468839,-5.484976,9.501493,1.453615,2.187649,2.074048,-9.258082,-2.816273,-7.725666,3.005683,7.543983,-7.335395,-7.566023,-6.022176,0.977281,5.586501,-1.654048,-8.399636,8.880376,-4.370917,1.786586,-2.393445,2.619162,7.635808,-3.744231,4.615894,-9.218436,-9.488820,-1.479202,-4.437971,1.481529,-8.252876,-0.359426,8.704902,-5.965387,-1.698630,-4.380229,-7.293043,3.492022,6.291059,-9.566076,7.455464,-7.241469,5.529343,-4.505101,-8.270451,-3.032575,8.041564,8.618493,-5.619016,-3.415109,6.838835,8.779110,-7.419155,-8.416430,-4.292378,-2.506787,1.990044,9.160635,-3.250298,5.855644,-4.080007,3.351625,-9.882746,-3.257266,-1.402354,0.179178,8.400513,2.109657,-3.111725,9.041983,6.694656,-5.237217,-8.298357,9.077986,-2.486798,4.971606,-5.446651,-1.398198,7.210524,1.181618,-4.654019,-2.530817,4.889194,8.272954,1.180869,9.322935,2.008820,8.685635,2.310024,-5.907866,8.853013,-3.001057,-6.363116,-3.764961,-6.631450,3.781016,2.235671,-3.224229,-4.976400,-1.476305,3.710198,-0.915940,0.355176,-0.442871,-4.643792,-7.265413,9.660366,-8.622680,-1.648604,8.387388,-8.020529,7.103387,-3.765488,9.228661,5.350736,-7.849374,4.440358,0.800183,7.277223,7.102854,-0.730081,9.678367,7.542668,2.338669,8.517742,-6.520897,-8.677582,8.564482,1.341764,2.804269,-1.791332,1.759563,-3.787861,-6.393599,1.363828,6.939120,-0.618599,9.777507,-8.471250,9.159113,2.209375,-2.860622,0.548120,9.551101,-5.803647,9.689571,-9.102886,-7.642695,-0.341304,-9.196249,-7.154706,9.791570,2.916490,-2.145469,-2.040502,5.265749,5.598883,2.115421,1.280134,-2.187428,9.927001,-4.860700,-0.838719,-3.135655,6.564175,-4.464444,-6.259141,-0.417790,-4.645561,-1.351937,-9.165111,6.050247,5.200544,-6.108190,4.652252,-1.779984,2.337668,-8.047909,5.976569,-9.125181,-4.689993,-6.927726,-7.107301,-0.834241,-0.613692,9.081047,-3.347318,-4.137651,5.625121,-5.431260,2.386743,7.440361,4.066379,6.463156,-8.425010,1.379228,-8.766263,-2.484290,2.372845,-4.858785,2.738195,-8.854650,-7.703639,6.049743,-9.128673,-1.571206,-7.209877,-0.517890,8.680944,-3.845612,3.021329,-8.985409,9.604282,-0.703450,9.980023,-7.176146,1.859478,-8.574364,-3.051098,4.702488,4.235493,-5.369830,-6.424243,1.917761,-5.275329,1.124411,-4.200447,-5.140673,-3.517157,-9.990581,4.591295,-4.048919,5.114112,-7.421442,-6.411930,-4.425899,9.575341,6.797595,3.303373,6.330303,-4.575591,0.001230,7.891769,9.437400,1.690273,1.837919,-6.212344,1.349880,2.491342,3.521448,2.718238,6.963946,5.740365,-2.252952,-8.752842,-3.400546,5.266222,3.666169,3.819965,-7.401292,-4.520511,2.396627,-7.004114,-2.179212,-8.740686,0.257201,-1.011494,-8.426249,-5.129245,-8.184942,1.097168,9.345875,6.923608,3.859174,2.156834,8.580143,6.270419,1.040135,1.868471,3.975571,1.302356,0.390049,-6.309870,4.901311,2.065309,9.741490,1.184430,0.255105,0.068510,1.895308,-6.747561,-4.517030,-2.315293,3.309103,9.907887,8.931952,-2.331476,-2.030594,1.823580,6.330520,-7.045039,1.629448,8.645689,-9.991135,9.072920,-5.544488,-4.518631,6.066763,-8.253085,-2.759165,-2.594382,-5.830895,-1.530578,0.411132,0.117983,-0.506241,4.548912,4.135015,-9.541161,6.502113,5.029668,-7.469136,-4.418134,-0.579100,-3.492228,-2.039098,7.923217,1.830408,-3.023209,5.902541,6.866258,0.743486,5.271001,-1.178338,-4.861041,8.650240,6.678572,7.899527,4.165793,-5.868244,-6.951135,-1.016952,9.046024,9.259797,-8.027779,4.861299,1.827864,-9.273360,8.862163,-8.255428,-9.277624,-3.146612,6.532658,8.282527,3.151694,7.598118,9.089825,3.090686,5.409365,-6.190686,1.316944,-0.794248,-9.274622,4.570781,9.683077,3.462039,0.387641,7.409116,1.530900,-9.943613,-5.443396,-5.879404,0.812002,-7.563083,-4.458239,9.111583,8.087700,-0.249364,-8.879191,8.795260,-1.035983,-9.020126,-9.127026,-6.183094,-6.490145,3.358957,-2.917028,-1.644484,5.644323,7.959840,2.495531,-3.534625,-4.458817,-5.368841,-4.814517,-9.617309,-3.347861,3.147147,-6.658343,-5.409460,-5.419953,1.805383,8.967174,-5.469642,-9.750413,2.472372,-2.818410,-3.782951,-6.250125,-2.730342,1.419203,4.937383,9.654979,-4.264667,9.123196,-5.586911,-9.428820,-8.362086,-4.498651,2.018686,-1.158299,-1.179159,-9.068708,8.878813,-8.158358,3.081128,-1.802084,6.067905,1.736800,2.168596,2.688979,-8.515697,0.502020,1.931256,-3.642150,4.641307,2.864856,0.868396,-4.620447,9.131877,-8.032814,-6.707319,7.826526,-7.823685,-0.151284,4.003985,-3.917797,2.228032,5.713229,8.213105,7.803497,-3.564798,-9.213176,-2.286093,2.881337,8.748392,7.177378,-1.039558,-5.939047,1.014355,5.223708,-5.147623,0.281417,7.443755,-6.785300,-4.076383,2.640492,4.526477,-1.268436,4.390012,2.664646,-5.378613,-7.216364,7.785205,4.453812,8.986544,-0.058000,-5.830349,-0.389055,-2.925636,-1.246930,-9.486267,0.670142,-7.536425,-6.221512,3.773469,-2.576140,-9.981683,1.558982,0.069639,-4.261381,1.416857,-4.131218,-6.666377,9.743069,-1.265219,5.608368,-3.276788,-0.485296,2.145975,-9.113497,-0.531627,-3.210486,8.784041,-6.558242,-8.455447,-4.946863,1.360977,-3.736199,3.341193,-4.779298,6.729416,-2.704141,4.574754,-2.057623,1.256311,6.243900,-1.212935,-4.075287,3.039998,-2.954621,-6.367774,4.411684,-9.658944,7.452473,-7.139285,4.097075,-9.519566,4.743605,-6.262678,-2.096160,-6.347687,1.489561,1.655572,-5.274056,-1.682227,-0.004949,7.502630,4.405029,3.954273,6.197187,-2.725843,-9.103655,4.447892,-4.716968,3.408461,7.141544,6.765941,-9.881133,7.722274,4.138806,-1.533604,-6.991902,-3.038430,5.542600,-6.101649,4.424453,4.814440,0.386129,9.958289,-1.716152,-4.907900,-1.223725,-7.487912,-1.669953,6.249118,3.359122,-7.716587,-7.864415,4.111890,-7.209985,-0.870012,7.732813,1.352775,-5.072404,-4.447920,-4.403384,9.923891,-8.460435,9.877539,9.018209,0.597436,-8.765676,-2.946362,-1.942537,-5.153001,1.233971,-2.258933,-5.049029,-1.912192,-3.176511,9.564390,7.480262], dtype = "float32")#candidate|820|(2160,)|const|float32
call_819 = relay.TupleGetItem(func_622_call(relay.reshape(const_820.astype('float32'), [15, 9, 16]), relay.reshape(const_820.astype('float32'), [15, 9, 16]), ), 0)
call_821 = relay.TupleGetItem(func_625_call(relay.reshape(const_820.astype('float32'), [15, 9, 16]), relay.reshape(const_820.astype('float32'), [15, 9, 16]), ), 0)
var_827 = relay.var("var_827", dtype = "uint8", shape = (7, 5, 3))#candidate|827|(7, 5, 3)|var|uint8
bop_828 = relay.divide(bop_811.astype('float32'), relay.reshape(var_827.astype('float32'), relay.shape_of(bop_811))) # shape=(7, 5, 3)
var_838 = relay.var("var_838", dtype = "float32", shape = (15, 9, 16))#candidate|838|(15, 9, 16)|var|float32
bop_839 = relay.divide(call_819.astype('float32'), relay.reshape(var_838.astype('float32'), relay.shape_of(call_819))) # shape=(15, 9, 16)
bop_842 = relay.divide(call_821.astype('float32'), relay.reshape(var_838.astype('float32'), relay.shape_of(call_821))) # shape=(15, 9, 16)
bop_851 = relay.floor_divide(call_819.astype('float64'), relay.reshape(var_838.astype('float64'), relay.shape_of(call_819))) # shape=(15, 9, 16)
bop_854 = relay.floor_divide(call_821.astype('float64'), relay.reshape(var_838.astype('float64'), relay.shape_of(call_821))) # shape=(15, 9, 16)
func_622_call = mod.get_global_var('func_622')
func_625_call = mutated_mod.get_global_var('func_625')
call_871 = relay.TupleGetItem(func_622_call(relay.reshape(const_820.astype('float32'), [15, 9, 16]), relay.reshape(bop_839.astype('float32'), [15, 9, 16]), ), 0)
call_872 = relay.TupleGetItem(func_625_call(relay.reshape(const_820.astype('float32'), [15, 9, 16]), relay.reshape(bop_839.astype('float32'), [15, 9, 16]), ), 0)
output = relay.Tuple([bop_814,const_820,bop_828,bop_839,bop_851,call_871,])
output2 = relay.Tuple([bop_814,const_820,bop_828,bop_842,bop_854,call_872,])
func_880 = relay.Function([var_810,var_827,var_838,], output)
mod['func_880'] = func_880
mod = relay.transform.InferType()(mod)
mutated_mod['func_880'] = func_880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_880_call = mutated_mod.get_global_var('func_880')
var_882 = relay.var("var_882", dtype = "uint8", shape = (7, 5, 3))#candidate|882|(7, 5, 3)|var|uint8
var_883 = relay.var("var_883", dtype = "uint8", shape = (7, 5, 3))#candidate|883|(7, 5, 3)|var|uint8
var_884 = relay.var("var_884", dtype = "float32", shape = (15, 9, 16))#candidate|884|(15, 9, 16)|var|float32
call_881 = func_880_call(var_882,var_883,var_884,)
output = call_881
func_885 = relay.Function([var_882,var_883,var_884,], output)
mutated_mod['func_885'] = func_885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_930 = relay.var("var_930", dtype = "float32", shape = (4, 15, 8))#candidate|930|(4, 15, 8)|var|float32
const_931 = relay.const([[[-0.220868,-6.901513,9.007979,-5.369169,-9.084007,-2.471552,0.822758,-7.850360],[0.223913,-0.390150,7.295937,9.212943,9.138906,-6.547839,6.447195,7.954257],[-6.630970,-6.585483,8.963495,7.672909,1.786965,-3.383036,-4.539449,4.942159],[-3.720255,6.616570,-7.861991,-8.155756,3.626852,9.382092,-1.312765,-9.841387],[-3.045844,-0.071125,1.388909,1.177760,-8.574066,0.019316,8.623369,-4.144183],[-4.156706,1.031432,6.988236,9.508595,-6.116289,6.933956,9.682456,8.738528],[3.709763,-9.395218,8.525233,7.174402,2.740981,-8.205141,9.191436,-5.734379],[2.404708,5.607559,3.662159,7.751457,2.116905,-9.661889,-0.890808,2.480136],[-5.538113,-4.276299,9.125733,6.049276,4.862469,8.062615,-0.522403,-3.632498],[8.454125,-0.924703,-8.907113,-7.455953,2.423234,5.340069,-5.882603,8.085389],[-2.445409,-2.395712,5.100264,-5.719702,-2.179461,-1.330760,-4.908611,-5.523943],[-0.829248,-4.103692,-3.839717,-1.115453,-9.031559,4.840444,-2.846411,2.819658],[-4.672233,0.766347,0.544586,-5.997308,7.470392,-0.084023,-8.049539,-0.334361],[-4.328771,2.514985,5.348005,-2.029945,2.642455,5.962733,-8.343279,-7.581129],[-3.333109,-2.413169,-6.265876,6.199900,8.546802,7.901583,-4.220027,-5.995583]],[[-5.591667,3.380303,-7.783521,0.377210,1.156077,2.641098,0.806473,5.195394],[3.259357,1.358812,-1.481291,-6.496013,9.659615,1.959138,4.013993,-4.412773],[-7.294403,9.390507,6.735483,-9.966197,8.042871,-9.399625,-6.242837,9.678402],[5.491519,2.201859,4.134243,-7.274002,3.524230,2.463798,3.213265,-0.087969],[4.828631,-3.521404,8.835884,-5.198543,6.961786,2.893748,-3.518271,8.132152],[-0.158389,5.878434,-8.029197,-3.972639,-9.404071,-6.627054,7.212578,7.226708],[5.364376,4.882871,-6.933014,0.530595,-0.341060,5.709160,8.803109,-4.449424],[6.685521,-9.268815,6.550824,5.128877,-7.775350,-0.999224,0.680371,-8.546702],[8.017660,8.561079,0.643670,7.547162,5.784491,-2.152872,-0.469119,-6.714561],[8.511426,2.838096,0.047616,-6.332823,8.766154,4.937419,-2.726595,0.217084],[9.264844,8.771156,4.977641,-7.724336,-6.927456,-8.448031,-7.012628,-3.169623],[5.861363,-9.314672,7.858185,-8.297871,6.152181,4.749616,5.687633,-5.230751],[5.283985,-4.696062,-3.538738,1.924980,0.109302,6.012633,7.925227,5.040456],[-6.809982,7.710288,-7.774219,-8.381936,-1.190244,4.328996,-4.218779,-9.938040],[-8.254048,-6.952825,-0.773183,7.466204,8.857792,2.990113,-0.756970,7.057440]],[[-8.440993,-5.083109,-4.905643,2.621623,-8.478486,3.481383,-9.154507,-0.444066],[-9.994339,8.571974,9.416922,-4.485459,-0.186679,4.521510,8.321709,5.265734],[0.812350,-6.447904,-1.003537,-5.358582,4.143128,2.045694,-0.787920,-5.917526],[-1.232101,8.587386,-3.549572,1.952740,4.207743,6.730668,2.832477,-4.830040],[6.255983,3.575154,-4.053323,-4.651414,1.361300,1.732791,-7.211182,-9.003542],[-3.785580,-9.846723,5.824378,4.588617,-1.010581,1.764830,4.166430,-5.589024],[9.624721,-1.845712,-4.792548,7.479975,-8.842191,5.226909,-6.948896,5.392729],[4.664110,7.271623,6.274478,2.172415,4.614838,-8.168041,-1.735572,8.346991],[-4.503332,-7.730129,3.679353,-3.465359,-6.541671,-4.199334,5.965865,0.695969],[1.244047,8.773528,9.189482,-9.759319,-0.366509,2.875243,2.422754,-3.172504],[-7.509008,-1.411338,-9.011007,6.638146,-2.474406,8.960272,-3.154314,-5.477227],[6.151031,-8.002014,-6.617106,3.368553,6.860177,-9.025144,-6.604436,-2.616152],[6.769943,-4.207669,4.593170,-4.796981,4.850533,7.561112,7.940754,1.146625],[-8.492880,9.867063,-5.618058,5.712742,-4.216518,-4.754347,-7.737678,2.760956],[-0.462919,3.652553,-8.472820,6.179268,8.920835,6.820557,2.051526,6.409794]],[[-2.585897,-0.925458,1.394654,5.023910,2.022921,-7.254739,-6.805256,8.365771],[3.124007,8.809314,6.628049,2.573842,2.885145,1.889593,4.370088,-7.797949],[3.307696,-1.019996,-1.672075,-2.498765,-3.577421,7.424106,5.088034,4.446826],[5.317884,-4.413152,7.138821,0.703787,-7.399671,7.448828,1.751852,9.504496],[6.706345,-0.891149,5.051692,8.114238,3.233832,3.050230,-8.699907,-7.435087],[7.219114,-4.059029,-0.532004,3.492318,-7.175128,8.892300,9.429317,-9.259249],[-8.554578,-7.296939,-1.897441,2.160004,4.272554,-2.890305,0.990495,8.920478],[3.360637,-5.098990,-6.679635,-1.332345,-9.016667,-5.008844,-4.795580,-3.262967],[1.385608,5.746978,1.844152,-7.154042,2.409336,-9.546572,2.231055,4.760096],[4.550144,-2.512435,1.840365,-4.810090,-4.289403,1.457443,9.327144,-7.649794],[1.640059,-7.200793,-0.007876,7.838691,3.988175,7.494776,5.167654,7.926838],[-6.037503,-8.746113,-2.757931,6.971148,-4.575060,-1.863122,6.550199,-2.288987],[-3.924221,1.383058,4.251209,-3.686213,-8.773317,9.925424,-4.423040,-3.470292],[0.483548,-8.369377,1.076837,-2.436983,9.041440,0.727780,2.676949,1.989528],[1.590555,7.607294,5.072094,4.263452,8.658662,7.405959,-0.156108,-9.502789]]], dtype = "float32")#candidate|931|(4, 15, 8)|const|float32
bop_932 = relay.equal(var_930.astype('bool'), relay.reshape(const_931.astype('bool'), relay.shape_of(var_930))) # shape=(4, 15, 8)
uop_936 = relay.log(bop_932.astype('float64')) # shape=(4, 15, 8)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
const_939 = relay.const([[False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True]], dtype = "bool")#candidate|939|(1, 135)|const|bool
call_938 = relay.TupleGetItem(func_76_call(relay.reshape(const_939.astype('bool'), [3, 9, 5]), relay.reshape(const_939.astype('bool'), [3, 9, 5]), ), 0)
call_940 = relay.TupleGetItem(func_79_call(relay.reshape(const_939.astype('bool'), [3, 9, 5]), relay.reshape(const_939.astype('bool'), [3, 9, 5]), ), 0)
bop_965 = relay.logical_or(uop_936.astype('bool'), relay.reshape(var_930.astype('bool'), relay.shape_of(uop_936))) # shape=(4, 15, 8)
bop_984 = relay.multiply(uop_936.astype('float32'), relay.reshape(bop_932.astype('float32'), relay.shape_of(uop_936))) # shape=(4, 15, 8)
output = relay.Tuple([call_938,const_939,bop_965,bop_984,])
output2 = relay.Tuple([call_940,const_939,bop_965,bop_984,])
func_993 = relay.Function([var_930,], output)
mod['func_993'] = func_993
mod = relay.transform.InferType()(mod)
mutated_mod['func_993'] = func_993
mutated_mod = relay.transform.InferType()(mutated_mod)
var_994 = relay.var("var_994", dtype = "float32", shape = (4, 15, 8))#candidate|994|(4, 15, 8)|var|float32
func_993_call = mutated_mod.get_global_var('func_993')
call_995 = func_993_call(var_994)
output = call_995
func_996 = relay.Function([var_994], output)
mutated_mod['func_996'] = func_996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1014 = relay.var("var_1014", dtype = "float32", shape = ())#candidate|1014|()|var|float32
const_1015 = relay.const([[[-3.869478,3.935712,7.149464,9.398295,2.935178,-5.054309,-3.900283,-3.317710,-1.629840,-1.728275,8.197196,-1.706993,8.179803,-6.034258]],[[8.437277,5.344933,-9.345945,-6.825818,9.193967,-7.613690,-4.958467,-1.693399,-2.526523,0.124133,-0.938163,5.142101,-6.525353,-0.142608]],[[2.917238,-7.305519,-8.407078,4.012333,-7.043277,-8.057711,3.681881,-5.383474,4.311900,-5.397600,8.176372,-0.122015,-7.727032,7.296280]],[[-2.148741,-4.587299,-5.702836,-1.939949,-0.759192,3.801529,6.028406,6.085842,4.537238,-1.402136,-3.986520,-1.837656,-6.755785,2.258007]],[[-8.497216,-2.559630,-0.448134,7.851705,0.318152,-9.540505,1.347193,-7.322492,8.656281,8.174770,-5.618412,-2.019033,8.447836,-3.691388]],[[0.043056,-0.335369,8.655158,-5.063796,1.926078,-2.955122,-0.003855,4.370313,0.923199,-8.266679,9.216747,7.862924,-7.685059,-1.366442]],[[-1.852405,8.844410,-2.893744,-3.747080,-2.443034,3.065902,-8.052261,-5.361373,-4.237531,-9.504948,-5.117763,8.323852,-0.558895,0.132388]],[[-0.668057,-9.594119,-5.034737,-9.435731,1.736873,-0.297517,-2.507917,-4.102858,-1.263468,5.592089,-7.586821,-1.435946,-0.482010,-8.996871]],[[-5.760242,2.241082,4.355870,6.608465,-8.165508,-9.063266,-3.008422,2.942737,-4.898118,3.960426,4.174390,-0.790994,-1.384054,-8.730631]],[[-8.933004,-9.093501,-0.410557,2.991992,9.208304,9.960977,-1.644015,-1.856672,3.690358,5.852380,2.000350,-3.135410,7.070669,-6.054756]],[[2.830729,7.087014,0.096530,-6.681929,2.722342,5.162183,-4.350655,-0.629424,-3.760645,-7.773641,0.695117,2.239213,-4.022316,1.567065]],[[-5.971749,-5.163551,-4.153395,6.875854,9.531227,3.748793,4.843883,2.326369,7.334502,3.592237,-8.640568,0.901538,0.023179,-2.312514]],[[-4.047593,-4.921689,2.619352,-2.209002,-7.228489,0.044571,2.492720,-5.371042,3.524784,8.773858,-6.264375,-5.571900,-3.185852,-6.011732]]], dtype = "float32")#candidate|1015|(13, 1, 14)|const|float32
bop_1016 = relay.divide(var_1014.astype('float32'), const_1015.astype('float32')) # shape=(13, 1, 14)
func_993_call = mod.get_global_var('func_993')
func_996_call = mutated_mod.get_global_var('func_996')
var_1029 = relay.var("var_1029", dtype = "float32", shape = (480,))#candidate|1029|(480,)|var|float32
call_1028 = relay.TupleGetItem(func_993_call(relay.reshape(var_1029.astype('float32'), [4, 15, 8])), 3)
call_1030 = relay.TupleGetItem(func_996_call(relay.reshape(var_1029.astype('float32'), [4, 15, 8])), 3)
func_880_call = mod.get_global_var('func_880')
func_885_call = mutated_mod.get_global_var('func_885')
var_1032 = relay.var("var_1032", dtype = "uint8", shape = (105,))#candidate|1032|(105,)|var|uint8
var_1033 = relay.var("var_1033", dtype = "float32", shape = (2160,))#candidate|1033|(2160,)|var|float32
call_1031 = relay.TupleGetItem(func_880_call(relay.reshape(var_1032.astype('uint8'), [7, 5, 3]), relay.reshape(var_1032.astype('uint8'), [7, 5, 3]), relay.reshape(var_1033.astype('float32'), [15, 9, 16]), ), 3)
call_1034 = relay.TupleGetItem(func_885_call(relay.reshape(var_1032.astype('uint8'), [7, 5, 3]), relay.reshape(var_1032.astype('uint8'), [7, 5, 3]), relay.reshape(var_1033.astype('float32'), [15, 9, 16]), ), 3)
uop_1038 = relay.sin(bop_1016.astype('float64')) # shape=(13, 1, 14)
uop_1046 = relay.acos(uop_1038.astype('float32')) # shape=(13, 1, 14)
func_880_call = mod.get_global_var('func_880')
func_885_call = mutated_mod.get_global_var('func_885')
call_1048 = relay.TupleGetItem(func_880_call(relay.reshape(var_1032.astype('uint8'), [7, 5, 3]), relay.reshape(var_1032.astype('uint8'), [7, 5, 3]), relay.reshape(call_1031.astype('float32'), [15, 9, 16]), ), 5)
call_1049 = relay.TupleGetItem(func_885_call(relay.reshape(var_1032.astype('uint8'), [7, 5, 3]), relay.reshape(var_1032.astype('uint8'), [7, 5, 3]), relay.reshape(call_1031.astype('float32'), [15, 9, 16]), ), 5)
output = relay.Tuple([call_1028,var_1029,call_1031,var_1032,var_1033,uop_1046,call_1048,])
output2 = relay.Tuple([call_1030,var_1029,call_1034,var_1032,var_1033,uop_1046,call_1049,])
func_1053 = relay.Function([var_1014,var_1029,var_1032,var_1033,], output)
mod['func_1053'] = func_1053
mod = relay.transform.InferType()(mod)
mutated_mod['func_1053'] = func_1053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1053_call = mutated_mod.get_global_var('func_1053')
var_1055 = relay.var("var_1055", dtype = "float32", shape = ())#candidate|1055|()|var|float32
var_1056 = relay.var("var_1056", dtype = "float32", shape = (480,))#candidate|1056|(480,)|var|float32
var_1057 = relay.var("var_1057", dtype = "uint8", shape = (105,))#candidate|1057|(105,)|var|uint8
var_1058 = relay.var("var_1058", dtype = "float32", shape = (2160,))#candidate|1058|(2160,)|var|float32
call_1054 = func_1053_call(var_1055,var_1056,var_1057,var_1058,)
output = call_1054
func_1059 = relay.Function([var_1055,var_1056,var_1057,var_1058,], output)
mutated_mod['func_1059'] = func_1059
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1092 = relay.constdtype = "float64")#candidate|1092|(11, 11, 15)|const|float64
uop_1093 = relay.erf(const_1092.astype('float64')) # shape=(11, 11, 15)
bop_1106 = relay.less(uop_1093.astype('bool'), relay.reshape(const_1092.astype('bool'), relay.shape_of(uop_1093))) # shape=(11, 11, 15)
bop_1117 = relay.power(bop_1106.astype('float64'), relay.reshape(uop_1093.astype('float64'), relay.shape_of(bop_1106))) # shape=(11, 11, 15)
func_1053_call = mod.get_global_var('func_1053')
func_1059_call = mutated_mod.get_global_var('func_1059')
const_1140 = relay.const(1.253358, dtype = "float32")#candidate|1140|()|const|float32
const_1141 = relay.const([-0.079419,4.811126,-5.977378,9.355955,0.939380,-7.354221,0.100951,2.590071,-6.495071,3.443027,6.414489,-3.555347,0.582466,8.349124,8.283021,6.298483,-4.445917,-2.293708,-6.735134,6.291496,4.802411,7.856592,5.091599,2.373285,-8.709635,6.419864,9.587653,0.993465,8.248201,6.435897,7.229537,-2.741710,6.204226,-2.079378,-0.318092,9.981424,6.834514,-0.892511,5.689564,-1.717341,-2.866729,6.480845,-9.994936,5.251820,1.078983,-2.484886,5.549814,1.128166,-7.219580,-5.602970,6.784467,-4.300572,0.452469,-0.962892,-8.653699,-9.146764,-5.593543,-7.156451,-7.476411,-4.255881,-2.724704,-2.537621,8.201268,4.683300,8.209389,-3.034862,7.848778,-6.367972,-4.091172,-8.939035,1.900158,0.656487,-5.384718,-1.225012,0.599988,0.880664,-9.514217,-7.309908,9.960964,9.536906,6.695456,3.517506,-8.717771,4.228590,-9.568178,5.899210,7.239839,1.182556,7.146854,-2.938252,-6.923817,-7.995279,-3.674205,-2.178724,-9.025816,-7.986975,-4.538482,5.859455,1.850392,5.300789,-4.961573,-1.891824,1.418306,1.894173,0.755831,-0.095838,2.763145,-0.238071,7.024388,7.794065,-1.910750,1.085439,-5.682099,6.992353,-5.686938,1.618980,-0.130448,-5.771717,-3.534443,-9.048256,9.944366,4.931640,8.686560,-9.300074,6.801971,5.662117,-8.372360,-2.929871,7.967689,-5.740801,-9.640965,-1.950447,6.908156,-3.654852,-1.093506,-5.952739,7.875092,6.654996,8.841087,4.111007,9.006718,3.789797,-8.072829,-3.621206,3.115031,0.429373,9.534839,-8.514810,-8.755459,-5.390121,9.422691,-2.470515,-4.176083,-3.339386,-1.357459,-9.699573,-1.860128,7.668169,5.269885,-3.126198,-0.153069,-2.905198,5.786669,6.566709,-9.796572,-6.205919,-1.963313,-6.412262,-4.974521,-7.681125,2.201761,6.219177,-0.590038,-9.420805,-5.081124,7.116020,-0.344524,-1.334778,-6.096474,7.262105,9.821981,6.443745,-1.050937,7.630130,-1.944932,3.791336,-2.775306,7.209628,3.760138,2.719104,-7.576124,7.602557,-1.000697,-0.892930,4.159016,7.466324,1.841309,-8.238461,8.115605,1.372634,1.597238,5.233161,9.821963,3.048238,-3.357452,-2.637752,0.179392,8.365597,-9.498975,-7.139282,4.657909,-6.942054,-0.304242,-4.155335,-3.587134,0.301153,8.163951,-2.150946,0.324895,7.834321,-2.717721,-4.619240,6.145429,2.911236,7.891174,3.774083,-9.099665,-0.180944,-5.490336,-0.342985,-7.783834,4.297097,-0.727436,-4.145045,8.503132,2.737913,5.704267,9.571938,6.862893,-4.049833,-0.209995,9.320926,-4.158700,-2.220303,-1.671475,0.147211,-3.367085,-3.826230,-4.789102,0.764960,2.171965,4.028679,-7.318507,2.164921,-1.116306,1.772353,-9.559855,8.852513,-0.807073,2.241763,-4.316860,1.049356,2.048415,4.736538,-6.667165,5.618757,1.172357,-3.843815,8.790180,6.418971,-0.626604,1.181968,2.584247,6.364122,-5.964785,-9.745685,4.137222,8.659697,-3.180814,5.569449,1.499589,-8.373547,0.234019,8.897287,-5.826187,-5.113810,0.614354,0.721688,-0.715023,-1.893706,-4.425553,5.561610,-8.938774,-5.618425,1.620561,6.293104,7.707867,1.860877,-3.292459,3.260209,0.276203,1.671789,4.313779,9.913853,8.284216,-8.145918,4.098225,-4.570436,2.172840,-4.189121,-9.702743,9.592431,7.906540,-2.733607,6.874283,-9.270705,-9.328670,2.863202,1.192216,1.440498,-7.091655,-7.679966,-3.844275,0.713953,5.373230,-2.488375,5.644267,5.744308,2.398902,3.242260,-2.796470,6.917805,8.000517,-4.013776,-2.024040,-0.823757,-0.720113,-1.093499,1.862404,-8.212610,0.849012,-0.934666,-4.988830,4.896293,0.540761,1.834719,-6.117407,-3.016907,7.793642,-2.343784,8.187708,9.547419,9.344379,-8.972740,2.099546,-7.324004,4.016230,-8.626160,-7.930516,8.375556,-6.265638,9.135762,-5.487609,-8.316241,9.475365,8.315525,5.474670,-8.759768,-0.991312,1.837131,9.804734,-3.909157,-1.933762,-0.661436,-6.695826,4.934002,-0.919851,3.938717,-9.722392,4.901120,5.748851,-7.550956,2.496022,9.130561,9.739053,8.663530,-3.197233,-0.683366,-8.981225,-8.139752,-9.032995,5.837121,-2.913336,2.840388,2.950154,-3.759837,8.739159,5.900281,7.582439,-1.446897,-8.384246,0.520871,0.067401,6.694942,2.481267,-1.555406,5.183125,-2.789166,5.007892,0.018426,-7.808843,7.249500,-6.041933,-5.324024,1.923615,9.258943,5.918114,1.111365,-3.180404,-9.024902,-5.799715,4.009456,1.935999,2.160754,-4.648096,4.983882,9.362859,-8.817090,9.296675,1.865181,-4.902527,-8.715443,-2.475080,-3.351183,5.299165,-1.187514,-2.371767,2.639330,6.783737,-7.474853,3.773895,7.554399,-2.989392,4.371272,-0.084263,-1.599130,6.174127,-2.972881,-3.222474,-4.133364,-3.708352,2.390082,-7.325767,-2.603968,-7.656457,6.708005,-0.326230,-8.219722,5.203372,-8.525076,-8.269104,-9.466512,-7.937984,9.533549,5.223491,-9.863210,-0.975356,-0.288935,-2.194202,7.424769,4.098709,8.958886,1.900494,-8.498447,1.789695,-1.711987,-3.760478,8.484560,-6.655437,0.112632], dtype = "float32")#candidate|1141|(480,)|const|float32
var_1142 = relay.var("var_1142", dtype = "uint8", shape = (105,))#candidate|1142|(105,)|var|uint8
var_1143 = relay.var("var_1143", dtype = "float32", shape = (2160,))#candidate|1143|(2160,)|var|float32
call_1139 = relay.TupleGetItem(func_1053_call(relay.reshape(const_1140.astype('float32'), []), relay.reshape(const_1141.astype('float32'), [480,]), relay.reshape(var_1142.astype('uint8'), [105,]), relay.reshape(var_1143.astype('float32'), [2160,]), ), 6)
call_1144 = relay.TupleGetItem(func_1059_call(relay.reshape(const_1140.astype('float32'), []), relay.reshape(const_1141.astype('float32'), [480,]), relay.reshape(var_1142.astype('uint8'), [105,]), relay.reshape(var_1143.astype('float32'), [2160,]), ), 6)
func_1053_call = mod.get_global_var('func_1053')
func_1059_call = mutated_mod.get_global_var('func_1059')
call_1154 = relay.TupleGetItem(func_1053_call(relay.reshape(const_1140.astype('float32'), []), relay.reshape(const_1141.astype('float32'), [480,]), relay.reshape(var_1142.astype('uint8'), [105,]), relay.reshape(call_1139.astype('float32'), [2160,]), ), 6)
call_1155 = relay.TupleGetItem(func_1059_call(relay.reshape(const_1140.astype('float32'), []), relay.reshape(const_1141.astype('float32'), [480,]), relay.reshape(var_1142.astype('uint8'), [105,]), relay.reshape(call_1139.astype('float32'), [2160,]), ), 6)
output = relay.Tuple([bop_1117,call_1139,const_1140,const_1141,var_1142,var_1143,call_1154,])
output2 = relay.Tuple([bop_1117,call_1144,const_1140,const_1141,var_1142,var_1143,call_1155,])
func_1158 = relay.Function([var_1142,var_1143,], output)
mod['func_1158'] = func_1158
mod = relay.transform.InferType()(mod)
mutated_mod['func_1158'] = func_1158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1158_call = mutated_mod.get_global_var('func_1158')
var_1160 = relay.var("var_1160", dtype = "uint8", shape = (105,))#candidate|1160|(105,)|var|uint8
var_1161 = relay.var("var_1161", dtype = "float32", shape = (2160,))#candidate|1161|(2160,)|var|float32
call_1159 = func_1158_call(var_1160,var_1161,)
output = call_1159
func_1162 = relay.Function([var_1160,var_1161,], output)
mutated_mod['func_1162'] = func_1162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1591 = relay.var("var_1591", dtype = "uint64", shape = (11, 2, 7))#candidate|1591|(11, 2, 7)|var|uint64
var_1592 = relay.var("var_1592", dtype = "uint64", shape = (11, 2, 7))#candidate|1592|(11, 2, 7)|var|uint64
bop_1593 = relay.multiply(var_1591.astype('uint64'), relay.reshape(var_1592.astype('uint64'), relay.shape_of(var_1591))) # shape=(11, 2, 7)
output = bop_1593
output2 = bop_1593
func_1602 = relay.Function([var_1591,var_1592,], output)
mod['func_1602'] = func_1602
mod = relay.transform.InferType()(mod)
var_1603 = relay.var("var_1603", dtype = "uint64", shape = (11, 2, 7))#candidate|1603|(11, 2, 7)|var|uint64
var_1604 = relay.var("var_1604", dtype = "uint64", shape = (11, 2, 7))#candidate|1604|(11, 2, 7)|var|uint64
output = func_1602(var_1603,var_1604,)
func_1605 = relay.Function([var_1603,var_1604,], output)
mutated_mod['func_1605'] = func_1605
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1684 = relay.const([[[9.727514,-6.665870,6.523656,9.102566,1.311563,-4.888389,7.065995],[-6.710103,5.634452,8.966481,3.037924,-2.378408,-9.919245,5.408188],[3.141423,1.624048,-0.899211,5.888565,4.993707,0.853296,-3.591775],[7.678637,2.846121,8.875672,0.513817,-9.993786,-5.318235,-8.397060],[-8.679697,-4.056561,-3.104535,-7.220571,4.754277,-1.204041,9.484427],[-4.391368,-5.823962,9.070151,1.961885,-9.586252,5.702058,-4.638929],[2.898234,6.313950,-4.560305,0.562804,1.702816,9.884038,3.753889]],[[3.885915,-3.538370,-4.797471,6.254053,-6.529001,-9.421367,2.333529],[6.312006,5.927620,-5.330221,-1.704363,-5.921036,-3.499786,4.453990],[2.600453,4.180719,8.620801,-6.093879,-0.999709,5.654756,-2.446499],[-5.170781,-3.384271,8.520474,-7.591759,-0.629422,6.142751,8.793231],[-1.012202,4.164545,2.498007,-1.057940,-2.295345,9.367635,-1.190155],[0.824849,-9.449133,-0.406849,0.394201,1.865731,2.930637,-3.290933],[-0.482139,-1.562439,5.065405,-6.439081,0.387216,0.071933,9.154164]],[[-0.732420,-6.938656,3.731855,1.126774,5.727102,4.894022,1.341463],[-2.329044,9.098361,4.191576,7.305187,-3.290759,3.725118,-7.145450],[4.598687,5.384226,3.537623,-6.387329,7.595193,-8.141406,-0.358442],[2.205310,-4.959532,-3.808375,-5.178593,-7.562664,-1.951732,-1.372523],[-4.667869,-6.129914,-6.132338,8.651570,5.083739,-9.165521,-5.062617],[2.267224,9.724686,-8.730953,-2.144625,2.156625,-0.351746,-3.489780],[-7.968350,-6.925242,9.116063,7.739052,1.799831,1.319283,-6.115699]],[[5.897667,-7.160326,6.891624,8.186104,-2.584664,-8.180966,-9.848926],[3.497921,6.635487,2.056606,-4.854321,5.584456,2.516428,-8.181249],[7.080361,-1.262290,5.051252,-6.826260,-3.733192,-6.895490,6.078383],[9.442142,3.427281,0.912507,-7.287186,1.314325,9.079323,-8.883402],[6.552605,-7.670282,6.668387,0.508783,7.974709,-2.700844,5.907193],[-9.822998,0.461052,-0.785734,-5.617336,-7.142242,8.379630,0.501479],[-1.808115,4.246302,4.564360,-0.078622,-4.856154,5.156047,3.157603]],[[-8.606514,4.464300,-2.057090,-5.196319,0.146669,-5.294497,9.474050],[7.266169,-9.255841,1.602512,3.232612,2.369171,7.773973,5.479965],[-6.339507,-7.167964,0.963692,9.473791,4.579431,3.652012,2.164358],[-8.780133,7.423661,1.878211,3.557160,1.308413,3.979955,-6.425861],[-8.103433,-0.443726,8.370006,3.852395,-7.774029,-2.871353,-7.299612],[-0.179871,5.359255,5.328906,0.320395,-5.797305,0.491778,3.647744],[6.310044,0.331582,-3.061848,-4.736564,5.407634,-8.529221,-7.783300]],[[6.466753,-4.386055,-7.403402,-5.370260,-7.417745,2.572881,-1.064774],[-7.884946,0.466299,1.946115,-2.064602,-9.989478,7.726804,-8.721532],[5.242840,-4.570627,-6.352043,3.917546,-4.118051,-0.125662,7.478890],[-9.303662,-9.900591,1.619697,-4.585179,-9.093629,-1.600508,0.761018],[-7.925323,-8.575267,-2.718071,-5.271999,6.219242,-8.796390,6.377063],[9.407283,-5.944629,-1.282700,-2.610230,-2.944412,3.707608,9.849761],[-9.196266,3.603361,2.247267,-3.075495,4.483059,-1.881433,-1.901817]],[[-2.810745,8.130810,-5.891322,3.340882,-8.100954,2.150541,-7.107124],[3.385341,-9.487607,-5.485096,1.617446,6.505117,-3.630051,-1.841658],[-7.515471,7.902630,3.349710,-6.772788,-4.223252,-5.846541,5.252720],[0.404506,-7.337872,-3.285538,-1.850116,3.302005,-8.477599,-5.285764],[3.505907,7.323018,4.258265,-2.983002,0.314527,1.186693,7.108611],[-5.262488,1.171207,-7.323150,-9.452295,-0.389654,-0.980650,-2.017567],[2.913820,4.113872,-6.951903,-2.360597,4.113133,-9.992672,0.839746]],[[-7.765170,5.930912,8.303609,-0.315190,6.636728,-8.910442,-1.366275],[9.399351,0.617565,5.287828,7.844744,8.106313,2.892182,-2.950464],[6.230173,6.302069,-3.796955,-7.823512,7.123754,-8.014005,-6.508794],[0.642120,4.401679,4.447885,5.365205,2.412317,-3.136795,-7.285308],[9.420119,4.560245,-8.998046,-2.766702,-9.682718,-9.585978,4.492837],[-9.501155,-0.095767,-4.622552,-1.201976,-2.254705,-7.302586,-6.739768],[9.030509,7.756612,1.771379,6.022684,5.684692,5.635504,6.463633]],[[-1.778802,-7.970667,-3.732266,-5.424093,-8.558231,-9.706718,-0.363668],[-3.910169,-5.030488,9.276554,-9.809890,-1.213124,-6.480207,9.770651],[4.624966,9.271865,3.933415,-9.897290,-0.361299,1.514091,2.771405],[-8.517854,-0.480641,-3.758764,-5.811238,-6.617833,3.336949,-3.297064],[9.283305,3.831135,-1.104041,-6.334833,-7.471725,9.057282,6.180671],[7.922740,7.215381,-7.955458,-8.927744,-6.133065,-7.080832,5.091487],[2.839426,4.687822,1.525192,-6.275706,8.803086,7.258268,9.472402]],[[4.608167,3.472943,-5.199386,-1.510012,9.115972,6.774071,4.688200],[-6.810643,6.288977,-9.522169,-5.470864,3.335095,-0.596198,6.212199],[-6.165297,-2.198182,6.038033,-5.283507,-8.133113,-8.905221,7.177021],[4.852348,6.705287,0.128211,-0.327642,8.256543,6.589439,1.813627],[-9.974938,-1.640408,2.325933,-0.071816,-3.648148,-2.624118,0.903879],[-2.639998,9.794420,4.272996,-0.857226,4.080115,-3.599755,3.304979],[-3.211886,4.411833,-5.616048,1.364986,2.022019,-1.564919,5.349943]],[[-5.889327,-1.581785,2.404921,2.877280,-2.809762,-0.337427,-5.621207],[2.250608,-6.939260,-0.128785,-9.124004,4.194761,-2.758126,9.915930],[2.856100,-3.198904,3.857752,-2.879288,-2.708284,3.926350,9.940436],[-8.164098,-8.302341,-0.294319,2.222812,3.333339,6.974591,-0.355980],[5.142100,-4.248236,-7.293068,-2.794643,1.210868,-8.458545,-0.945086],[9.329616,9.075236,2.221862,5.706823,6.697023,-2.116598,-7.116402],[0.745122,-1.511242,-5.873230,1.272517,6.368553,-6.767852,5.587183]],[[-2.047413,-9.135171,0.496595,8.648319,3.774966,-1.442660,-7.992083],[9.340405,-1.589646,4.487632,8.079807,-2.022653,-9.716028,4.903652],[-6.535079,1.089540,-9.223763,-5.678350,-4.312623,5.335251,-8.337243],[-7.235723,-6.736931,5.849118,-8.349275,4.916649,-5.175084,8.972518],[2.332872,0.371178,0.227242,-5.810237,-0.764590,0.875211,1.758272],[5.975072,1.703781,-4.793877,7.997298,-7.129399,-5.880860,-0.027207],[9.301845,7.538097,-7.821621,9.901587,0.179320,3.028590,-6.563556]],[[-1.376564,2.451549,-1.108101,0.931510,0.025541,-9.032451,4.549203],[0.380693,-2.968464,4.628745,-1.537067,-7.632250,2.187444,8.262881],[-2.597197,1.151793,9.668196,-7.746485,1.074559,-6.965770,-2.589029],[1.845788,1.049220,2.218271,8.022413,2.656463,-0.519496,5.343430],[-4.066930,8.372549,2.944980,0.240085,2.856288,-8.092132,-0.394656],[2.001273,6.285270,-3.725159,-8.458613,-1.179098,-5.979734,8.911330],[-0.933460,-2.610478,1.185975,8.873793,-4.736318,-8.903992,-8.776884]],[[6.034302,9.303775,5.497692,1.492805,-6.158290,-9.182311,7.661014],[-6.180658,3.311825,-9.036506,9.879506,3.659487,-7.690210,-1.877749],[-2.233014,2.711828,7.179105,-5.811074,5.349019,-4.590580,4.545564],[1.771014,3.089080,0.388344,-0.633550,-9.131026,-9.003836,-4.131348],[4.069601,4.074761,4.601625,6.552811,2.928466,2.381698,1.195415],[-0.582477,-6.667773,-5.907911,-0.402519,5.414479,2.467608,-9.902018],[6.362256,-5.378446,0.265763,-3.943216,-3.438816,7.352537,-8.991021]]], dtype = "float32")#candidate|1684|(14, 7, 7)|const|float32
uop_1685 = relay.erf(const_1684.astype('float32')) # shape=(14, 7, 7)
func_880_call = mod.get_global_var('func_880')
func_885_call = mutated_mod.get_global_var('func_885')
const_1700 = relay.const([9,7,9,-1,-3,4,-10,6,10,2,10,-1,3,2,5,-5,3,-6,-1,-9,5,-4,4,2,-8,1,4,-4,-7,-10,-10,-9,-8,7,-1,2,2,10,-5,-9,-7,-8,-4,9,9,-4,-4,-3,-7,2,7,-3,-1,6,-7,9,-7,4,9,3,-3,-8,1,1,-2,-7,8,-9,-4,5,9,-7,2,8,-5,1,9,6,3,-7,10,-5,5,-9,10,-2,9,5,-1,3,3,7,-7,1,10,-4,-3,3,2,7,-8,-1,10,-8,-9], dtype = "uint8")#candidate|1700|(105,)|const|uint8
const_1701 = relay.const([-5.696650,-8.326114,0.982711,-0.662690,-0.805104,-0.911456,6.215226,7.613594,4.455682,-5.986315,5.572969,0.732872,-2.313606,-6.596192,-3.480124,2.615674,-6.523118,0.439603,-6.106046,3.659255,4.936925,4.053847,9.991271,7.444544,1.763476,-9.304863,2.319123,-3.204327,-4.155948,-2.879792,-0.533267,9.077523,3.294051,8.360939,-0.251359,-1.847543,-0.985972,2.251810,-6.900883,-2.824365,-1.064424,9.032712,-1.509428,-4.743329,-4.867796,-4.127731,-5.181431,7.175642,-9.122828,3.215480,0.123774,-6.207509,7.471624,2.930149,-4.338247,0.429679,6.005012,0.461520,2.963952,-5.294376,-6.304802,-4.105260,-2.360621,-1.466091,-5.995126,-9.359229,9.349062,5.319929,-3.690885,1.747552,5.408636,3.856167,9.912435,-3.084685,-9.743250,-4.628144,3.923353,1.170548,-6.458420,-8.521109,3.463004,-3.835595,5.361731,-9.600477,7.344457,5.620300,-2.918207,1.861480,4.442177,-1.501364,-0.776541,-4.138737,-4.138953,1.269549,1.742932,9.547681,-5.929707,8.420751,-3.674485,3.919988,4.634277,-1.011781,-4.310086,3.702284,0.435895,8.987516,-6.935953,-7.392392,-0.555490,0.812246,8.333458,-8.637071,8.921211,-7.401371,7.492040,7.688121,-3.356283,5.848099,5.309871,-9.335323,-0.079937,-6.239125,8.069323,6.337731,-6.277503,4.294867,-8.634396,-2.480727,9.206407,1.853199,-4.800588,-8.186139,-8.363543,0.374334,-0.266642,-0.757597,-1.066053,-6.554888,2.046250,3.049365,-8.402576,-7.892965,-7.810120,-1.256371,3.881935,1.552153,-4.636971,-0.920857,7.303927,-7.213497,3.565276,-6.788760,9.026348,8.971366,6.108933,4.054461,6.201981,-7.895599,-9.076752,6.229274,-4.167390,6.467547,-3.100432,6.588382,-6.299296,-1.666358,-0.542112,6.097957,5.266317,2.141524,2.024366,-4.887691,-8.647209,-8.845188,-9.950225,-0.362011,-0.670497,5.423501,9.131559,-1.218324,2.246755,1.768125,-5.934333,0.098060,2.132135,-3.937783,5.807835,7.456861,1.522954,-5.830795,0.235655,-5.537627,5.828779,8.483640,-3.976535,-7.841306,-5.566788,4.468031,-3.266970,-3.714641,5.902424,-5.274398,2.136155,-7.152192,7.270875,-3.141544,8.721839,7.742499,3.886024,3.269594,-3.773395,6.609250,1.871513,1.465799,6.343180,0.316273,-5.775184,-2.808216,9.402176,-4.897276,2.174637,-2.117056,6.471077,8.866431,-9.692354,-3.705260,-5.064520,2.893608,3.267993,4.371036,-4.115304,0.012629,-0.349988,-9.652083,9.343480,4.013967,-2.204386,1.473950,9.283698,-9.063437,-0.936763,-3.589099,-8.064939,-1.196570,2.193702,-8.112468,6.625948,-1.853319,5.656974,5.053714,-4.713795,-0.910983,-7.555754,-8.802039,-8.158853,0.309139,-3.874698,-2.177450,8.781957,-1.584452,-6.142049,-0.726387,-4.251068,-0.137347,-1.247449,-2.534343,-8.843087,0.601312,9.814226,-0.555855,-9.137877,-4.258815,3.037628,5.483445,0.730392,2.015748,-9.851679,8.837659,2.138305,6.409059,-0.899841,-9.430300,-7.514264,3.492637,3.611915,4.040079,-8.069376,-2.052047,-7.285149,-3.636226,2.340613,-3.250768,-8.391607,9.490309,0.836954,2.436327,-0.385966,-5.881240,2.469449,-8.930486,1.656798,-2.241146,9.880642,0.176701,-2.990195,-3.416922,-7.334876,0.442478,-3.876612,-7.371499,0.356455,1.742529,8.346956,-9.888407,-3.483329,4.629862,4.148345,4.136709,9.661677,-0.903393,-8.413868,4.468767,0.912489,6.015463,9.091912,9.220573,9.970209,7.753394,-4.313985,7.093811,-3.356216,-9.930957,-4.640427,0.319575,0.382295,3.449757,-7.716312,-4.738292,-2.201864,6.326168,5.869340,-6.929468,-5.952462,9.419879,-6.005076,6.862715,2.935766,-8.323717,4.396364,0.276733,9.207423,-7.127708,-5.054913,-5.197253,1.515333,-2.362642,-9.962073,9.136226,-0.727768,-3.306049,-2.081973,-5.526170,7.324623,8.913929,-3.103483,0.036741,-0.019286,5.059311,-0.285459,3.093760,1.100167,-3.459373,-5.807361,-4.812826,-2.244866,9.323423,-9.060213,0.509229,-5.147850,-2.859914,8.209730,5.711159,-2.614563,-0.689374,-3.976961,-4.420779,-9.792152,8.705939,-5.827190,1.788574,-1.855585,4.948305,-3.181536,6.360634,-7.914929,8.645073,6.561202,3.947626,3.381255,5.364080,8.816215,-5.078229,-3.747903,-9.357440,3.809133,-3.794270,4.579708,4.518764,-7.044127,-3.247298,-5.041140,-2.613372,-5.460464,1.483280,-8.156337,8.102686,-4.340172,8.845117,-6.764628,-7.907659,9.615272,7.653994,-4.422592,5.885953,0.252037,8.278577,2.789068,-7.434155,8.061042,-1.023100,-7.982873,3.259153,4.384924,8.432528,3.257284,9.497442,-6.606158,0.336495,0.734345,5.657254,-3.926780,1.241354,7.562116,-5.119216,8.414637,-2.154910,-7.572903,5.944510,-8.582683,3.439894,-0.706874,-9.962368,-4.358191,8.077641,-6.700154,-9.705625,-1.545133,3.712711,3.689614,-4.289408,-3.660645,-1.768698,3.830250,-7.542881,9.883701,1.705252,-6.251050,-6.921727,9.056074,3.454509,8.331021,-8.236691,0.848560,3.901811,6.738994,0.505860,-6.228620,7.540127,5.631083,7.488015,8.421315,-4.887316,-7.947462,-9.889026,4.637924,-5.890119,-7.765965,-6.145579,-6.040004,-6.280744,5.772915,1.854253,-9.689820,8.874111,-8.222448,-2.745835,2.104446,4.083617,5.508668,1.041339,0.758138,2.675936,1.725876,6.369549,0.661353,7.502655,-2.435117,-2.684038,6.409963,-8.880339,-9.329141,-4.613750,-6.765329,-4.900834,4.257860,-2.508478,9.043366,-9.425421,3.093252,-7.519258,-7.425026,7.730656,-6.214619,1.499012,-7.223156,5.639016,-4.476419,-5.837121,2.380327,-7.189008,8.413530,-5.969595,0.993789,7.761067,-4.644084,1.586409,1.649340,0.954425,7.077713,-0.896527,7.287196,-0.008309,9.328136,-4.293641,2.588804,0.232009,5.485963,7.745817,8.673247,9.714032,-9.482070,-5.791011,1.902708,9.554022,-8.690955,-7.977362,8.214024,9.856987,-1.026307,-4.209481,-0.850532,-0.176233,4.003994,-8.670543,-1.399450,-3.560664,4.453444,-8.848852,3.852453,4.061365,4.625588,1.793248,-8.334547,7.078447,-5.342771,7.248633,-2.439696,-7.982861,4.024232,-7.411845,-5.542374,8.175521,6.194292,-1.458038,3.130764,-7.341080,-0.658389,-9.906184,-8.354580,1.993834,5.323187,7.406203,-1.138785,8.411992,3.536625,5.156114,-9.189304,5.622202,-7.953836,-5.496920,9.885504,9.929571,-0.202868,-4.865487,3.786925,5.942876,-1.543112,-4.448251,-1.149668,3.226934,8.706322,3.041589,3.027488,0.457244,1.593624,6.373486,-2.013175,-2.885722,-6.229998,7.135186,-0.449646,-3.134449,-5.051951,2.112424,-1.094704,-5.907667,7.500558,-3.077187,-5.317802,-0.932894,5.204058,-7.504418,-1.076013,4.475040,8.607416,2.887850,6.476917,6.996293,-2.511829,0.428033,5.069426,5.707898,5.560459,9.914013,9.136162,2.962926,4.444417,5.142169,-5.065742,6.747130,9.070154,1.209457,-4.752270,-4.499685,0.961402,-4.967804,2.031054,5.372083,8.819682,-6.556465,4.646700,9.594519,8.789867,-2.534469,6.814584,-4.972347,-1.509948,-8.069792,-6.820790,-2.887817,-0.929626,-9.688983,-7.004618,-9.409471,-4.359195,-2.288055,2.601568,-0.822171,-4.723638,-8.102473,-6.556278,3.750319,2.941595,-5.077625,-7.614650,2.740531,4.750923,4.497253,-8.702064,7.487476,-8.859855,-3.888295,9.187870,9.036797,6.172735,-5.195548,-2.933194,9.194318,6.395353,7.862404,-6.166189,-6.663285,-2.207870,9.126826,8.679404,9.455642,-3.736842,7.728752,-7.148906,-1.351306,4.354062,-3.000435,-4.746500,2.698876,5.696403,7.115067,6.214851,5.085889,6.289861,-7.540345,2.171008,6.003100,6.858349,5.137972,5.060837,-8.439215,-4.837039,-7.678750,-1.889302,-3.694889,-6.132120,2.756375,5.455856,9.227655,5.039097,-6.633996,4.138041,-3.252342,-8.792519,-3.858189,4.238332,-2.517523,6.314063,-2.754237,-4.719801,8.980127,3.171016,8.767361,8.029097,9.170330,-1.836622,1.510527,9.057178,4.695046,-9.012933,4.911937,-0.527531,7.064259,-0.974531,4.018531,5.141430,1.864914,1.116332,2.933858,8.399191,5.999041,-2.029791,6.065927,-0.180781,-2.514026,7.748279,6.320794,3.954247,9.610654,-0.853872,6.036659,-1.329502,-5.345674,0.019884,-5.564160,5.288451,-0.067865,0.177045,6.778525,-2.685657,-5.259475,-1.059753,7.348593,-7.634476,2.656296,1.771451,-4.764217,-0.471095,7.781207,2.587638,-0.411304,4.134000,-8.452025,1.751217,5.059562,1.713576,7.886426,0.019169,-4.374875,1.946934,-8.837282,-0.320062,-3.771125,-2.326019,-8.160810,-0.411193,-9.104732,7.864138,-6.633302,-4.204686,2.118307,3.854701,7.061039,2.500078,-4.616643,-2.546234,-3.913851,-1.406363,3.536428,-9.533177,-3.922787,-6.772442,0.006461,2.587037,-8.842951,0.538466,-3.598417,-3.949807,8.443936,9.280661,1.488148,-1.028759,-3.765975,-1.296164,1.589652,2.184122,7.035122,-2.307366,3.357515,-8.097339,-8.387068,9.252242,-9.253325,-3.825261,-4.491136,-8.150014,2.609254,3.171700,5.729391,4.447655,-5.625320,-6.017190,0.821355,-4.550088,-5.143275,-4.422535,-7.108207,6.659988,-6.471999,-9.647410,9.426839,-4.963663,-6.107918,-2.462113,6.975105,-2.597050,-6.482715,-0.319248,-8.235746,7.042193,0.059585,7.792766,8.757097,4.440354,-6.950004,-8.268020,-4.648485,3.068171,-2.921312,-4.756961,7.403795,-4.392673,6.397617,4.974989,5.862077,-1.642265,3.268764,7.600097,9.543992,-6.560738,-9.232666,8.601544,8.807503,7.665412,1.249370,9.416679,1.899885,-1.094782,-7.992935,-5.105556,-1.816941,1.250004,-1.670975,4.152400,7.054922,5.675677,-5.932695,-7.449343,1.802325,-2.486968,2.492166,-6.519914,4.114286,8.826881,-3.289075,1.653591,-7.568048,-6.921266,8.682390,-8.989029,4.204666,0.196003,2.576501,7.062356,3.402107,3.461452,-6.712116,9.007748,-9.217137,7.014136,-6.660769,-3.671074,3.515888,0.632137,-4.453809,2.448658,-6.620577,4.112417,-7.515337,-2.794909,-6.525739,-3.020404,9.522015,-6.538467,-3.213405,1.502077,0.566888,-8.855254,-7.985520,2.576882,8.257286,8.015788,9.011939,9.205990,8.810068,-5.012907,3.574478,-3.683959,-2.043919,4.580273,6.684531,-0.737176,-3.532845,5.330203,-6.902461,0.145120,-6.311696,6.404370,9.518047,3.007189,1.499944,8.385220,1.711212,0.396067,-7.825299,-6.737459,1.752290,-8.603156,3.839076,1.137168,9.357859,-0.396448,8.331563,2.823580,-0.888981,4.502530,-6.920573,9.684250,2.007586,-1.558735,6.845979,1.476804,8.127147,-1.875200,0.176575,-5.106977,-1.059788,-8.476908,4.194824,-9.392914,8.780880,2.562834,-2.553165,1.310315,4.217882,-4.698457,-9.787259,-0.115069,7.748409,4.857728,-1.056915,5.534233,-9.103721,-0.994030,-5.000168,4.096436,-3.192064,6.022034,8.150232,-5.853274,-5.840128,8.742500,-2.827608,-1.566000,-2.061641,6.875502,-4.832584,2.235981,-4.475237,-4.365824,9.288168,-3.978538,-3.604072,-9.633656,-2.339420,-9.707556,2.963315,-3.890897,3.718502,-2.749376,-3.355152,-1.511083,-1.363237,3.437103,6.370598,7.094936,5.412202,4.854711,-7.453046,-8.531362,-6.185129,7.403319,-6.488320,-6.416508,3.338606,-8.972013,-3.145948,-4.501989,-3.486220,4.177848,2.275073,-5.444401,6.404558,-0.437875,-6.594581,-7.849010,5.857820,-6.040853,3.858302,-7.216062,2.629307,-8.127454,1.432699,2.472501,-2.831673,-1.513812,4.704881,8.995845,-2.457725,-9.133999,-9.767321,3.621559,2.237968,1.902795,-7.350480,8.304890,-6.041020,9.005923,-6.038461,-0.429681,-1.013946,-6.422614,7.648870,-3.452635,4.953360,-1.765922,2.232853,0.320756,-8.549077,-3.533379,-6.866920,-9.723762,1.622860,9.257878,-4.855450,6.029686,-1.531005,1.947105,0.832713,6.407832,-0.817843,-7.014466,4.519356,-3.740917,-3.625222,4.001462,-3.255135,-6.092798,1.420477,8.958962,9.463199,-4.663579,-6.993834,2.125385,9.848827,-8.788452,1.598625,-3.941537,4.381351,-1.045282,6.492550,-6.071830,0.114479,9.960309,-0.283267,0.727020,7.970151,5.652005,4.893309,3.066195,4.417540,-2.105840,-8.802721,-9.048673,-8.204021,-4.951222,-5.623547,2.013493,3.512193,-5.014238,-8.879706,5.370749,-7.932761,0.977574,9.018938,-9.634073,9.940642,7.825228,5.007004,6.804872,-3.561046,1.458871,-5.590343,1.625351,-1.370782,-1.004295,0.425446,-7.005763,-4.538657,9.893547,1.762176,1.773108,-3.014105,-3.205354,-6.544352,9.642280,4.557745,0.128603,-9.211503,0.324310,-5.698132,4.743722,6.213102,7.383719,3.961494,-5.941305,3.433708,6.657810,-9.702587,1.526890,0.353326,-8.943416,-2.496973,2.248113,-8.376079,1.685780,-3.347770,-7.576220,-2.162262,7.339298,-0.267167,-0.895399,4.672902,3.689341,-9.144456,-5.455386,-4.422861,-1.459169,-9.277261,2.844457,3.983007,-0.605653,0.780309,2.486292,-7.442528,9.806059,-2.515898,-3.600286,-8.657496,-9.288787,4.919291,-8.820209,8.651767,-9.555531,-4.848393,-3.729181,-6.757245,5.958316,5.448862,4.056458,-9.301345,-9.717928,6.329379,-7.115729,-5.758642,-3.269485,-3.169448,3.050106,2.348715,9.649934,7.540246,8.316012,-8.296271,9.671739,-2.859710,-9.586081,-3.157111,1.367438,5.020091,7.642282,-1.017299,7.440015,-2.948691,-6.770180,-9.147098,-6.674014,3.772987,4.789621,-6.453087,8.197529,-5.215570,5.950888,-4.673246,-1.090052,9.178974,-3.706827,4.123596,-2.588833,-0.273065,4.001487,-3.460087,9.256005,-1.204265,-4.524603,7.725715,6.674229,0.339775,-3.750128,5.310442,4.750812,-0.231729,5.038172,-5.162730,-1.516986,-7.742479,5.157635,0.834721,4.877985,-4.999592,-2.316222,5.100838,7.980397,1.491785,7.417061,-1.861362,4.863967,-7.835632,-9.189573,-8.523223,8.425295,-8.927957,7.808199,5.727600,7.957694,-7.610813,-8.066874,3.065551,-8.683907,6.760049,-2.757663,8.264984,5.471293,-6.048941,-8.948376,-1.340576,1.396838,-4.241335,-4.384264,3.349575,1.073144,3.723623,-3.654106,1.489854,9.666938,-3.687045,-8.029463,4.932840,0.349409,7.752116,-6.251869,6.512051,2.099811,7.063260,-2.542442,5.548411,-6.489127,2.516223,-0.327193,-8.542370,3.717933,4.587162,-1.292150,9.374866,-7.938133,7.904827,-2.663617,-9.197486,-6.724841,8.709426,9.982598,5.416153,-0.588945,-3.176877,6.426501,-6.801993,5.155954,1.283204,5.172968,7.958973,1.124944,-5.005682,0.924748,3.370509,-1.169095,-1.314460,-8.417232,-2.714514,-0.307045,6.331169,3.833629,4.188331,2.176934,-7.573864,7.238139,-2.439755,-9.786898,6.362014,9.241625,4.510579,9.053016,7.800952,7.789231,-7.901369,-0.033192,-7.335321,-2.481119,-2.927907,-7.884530,-9.556050,-0.983187,-3.200852,3.496527,8.237882,6.486609,9.564403,-8.021962,-5.277973,-1.095376,-4.839543,-4.748314,-1.581192,-9.707388,-6.728376,2.442340,-9.531902,7.416319,-8.842425,-8.559980,7.262360,-1.411144,4.558474,-5.014641,3.832175,-6.575432,3.460633,-6.556212,9.531141,8.562852,8.112923,-2.178189,-7.413288,-9.180051,3.494392,-8.909691,-1.935607,2.307568,-9.415402,0.819941,-9.496570,2.403916,-4.394087,6.139288,-9.300674,9.451959,8.611842,7.506652,6.412184,-6.560083,6.756363,-4.270230,8.839529,8.082144,4.186134,0.263871,-7.307166,4.816941,-2.469693,0.559740,2.631501,-7.965000,-6.273635,0.255664,-1.603077,-2.341660,-1.933139,2.417570,-9.462234,0.725373,-6.569601,2.743203,4.666888,1.156508,0.928535,-1.268922,-7.642061,1.793940,2.023259,-2.560622,-1.377479,8.005485,0.919579,6.209516,7.347148,2.388130,9.321029,-3.294594,-6.766689,9.465508,-0.679638,-0.462069,-9.485929,-2.490002,-4.288524,7.103050,1.646777,-3.141102,-2.632954,3.846682,-3.470800,1.735812,0.831383,0.327556,4.674548,-7.994722,-7.345980,-9.858180,-7.023002,-3.906702,-0.106150,-5.097002,-7.447870,-8.565823,-6.387859,-5.057923,8.634306,-2.611178,-0.352918,-6.192920,-2.120652,1.570044,8.767842,-1.664825,-1.900129,1.113724,-7.118881,6.963396,-8.307471,1.292615,9.235254,5.669903,3.809532,0.029067,6.002388,-1.946305,-7.648907,5.091752,0.890138,-0.527144,-6.254124,-7.025452,0.627330,-5.552794,-4.793196,-1.657535,0.376050,-9.711572,5.821542,-9.769412,3.573828,0.263643,7.904523,9.338023,-0.892785,-4.113319,3.671958,4.427412,-3.869046,-0.819165,-7.061730,-7.795849,1.380909,-5.136553,0.945885,9.630146,4.363668,-7.528436,2.664400,-6.081438,9.856878,7.716525,3.860462,9.457959,-3.987775,-2.954582,-9.178692,-5.217014,5.662007,7.457760,-9.359494,6.982503,1.205013,-8.435575,-4.904338,-9.440952,7.505610,-7.666026,-9.874162,7.305965,-3.726115,0.589341,-4.349386,-1.134794,3.605861,-3.479235,-9.963905,3.120074,-4.800154,1.990973,-2.222018,-7.591049,5.982230,6.150170,8.335145,-5.657286,-8.306411,-9.628037,5.997278,0.237330,-9.177265,-4.347316,2.812232,-1.976219,0.073549,-3.039970,6.982073,-9.156289,-7.052145,2.471255,-2.532018,1.781653,1.093193,6.124532,-9.807537,1.183224,4.326839,9.372385,-8.545568,-9.150822,5.282849,7.158929,7.932809,6.253331,9.748472,4.073060,-0.065425,7.836418,8.330829,1.943595,5.112026,-2.341905,-8.544623,2.829070,-4.777078,4.259333,4.983124,-0.317441,-6.317023,-4.329084,-6.128888,9.374200,-5.348177,1.775653,4.084371,3.090238,1.181355,6.323817,1.693123,-3.320701,-6.226693,-2.572277,9.943530,7.391993,-4.669165,8.512859,4.872252,-5.985443,9.565508,8.377109,-1.997665,6.123294,5.353455,1.428923,-0.778136,-9.308368,9.053570,-5.871651,0.228058,-8.422001,3.578920,9.552047,-3.385327,-9.314167,9.041279,9.510797,-0.507482,9.670120,0.405185,-7.670952,0.119208,2.283716,3.499797,2.352691,2.962126,7.342710,7.947737,0.481950,-0.870778,-7.233239,-3.938100,6.809306,-1.206384,-8.859491,5.542050,7.500554,9.801806,-6.526399,-3.665088,1.841522,7.585874,-0.829786,9.738994,5.901651,1.921612,0.492382,7.177825,-6.565966,-2.812768,0.833724,-6.198736,-2.508359,8.679670,-7.761839,-4.937585,4.890882,-7.167600,-7.804321,-1.918471,7.464591,4.641015,6.619375,8.949620,8.901925,-4.654335,-5.362662,2.817441,-5.264458,7.317908,9.245509,-3.982185,5.307783,-3.666577,7.321210,7.348307,3.021687,3.006022,1.631851,-5.259700,-3.866279,-3.085746,9.331704,1.996097,-6.641776,6.111222,-4.254760,8.522209,-1.399854,-2.759723,-1.136257,6.148425,-7.094536,-5.684478,8.380100,-6.329538,1.878807,-0.202973,5.986662,-9.262194,-1.808743,2.949925,4.786176,9.359875,-2.072965,8.864815,7.519663,-4.187141,-6.290476,-5.541158,-3.168232,9.269910,0.064544,-5.746383,-1.009986,-4.275828,-6.231214,6.012861,-7.191413,-5.323886,-8.557993,1.639541,-9.195331,-8.047300,-9.899577,-2.410027,8.950457,-4.013085,-1.866972,3.955775,5.487839,9.036360,3.702906,-8.372829,6.342982,1.116301,-4.045741,-1.253886,-5.427062,8.070128,0.221675,9.031654,-4.379322,9.084530,4.155801,3.009451,-6.630954,-6.379351,0.214661,-3.091380,0.710473,8.733542,-5.870036,-1.189865,-5.339256,-2.056299,-1.086242,-4.203756,9.880662,8.382174,4.595671,-9.967291,3.018163,3.489974,0.663150,-7.770164,7.493773,-1.515588,1.970871,0.391463,8.640959,6.877960,8.862549,-8.794291,9.532432,6.158095,-1.901387,-1.728667,1.307206,-9.420601,8.323835,7.806553,-0.084519,7.277546,4.501182,5.470051,-0.055970,-1.043095,0.761745,-3.229028,-5.803013,5.421032,6.463139,-3.027520,1.691134,7.952989,2.898079,-2.867063,8.845436,3.350928,-8.208446,6.475595,2.277363,-1.880565,-7.733926,9.377557,5.801621,1.324623,1.959065,7.735524,-3.637916,6.287034,6.507825,-4.471934,1.159684,9.290461,-5.168881,-3.202315,-4.747297,-9.581517,-5.565821,1.968555,-5.163371,-6.046476,9.824870,7.487484,7.582423,6.798732,-3.753730,7.063655,-6.733475,5.889475,3.795304,-5.933484,-9.764174,-2.019416,7.289240,-7.408645,-1.023560,5.825429,-8.077085,8.535434,7.880717,8.866846,-2.554471,-3.357819,2.844065,-7.058323,8.791555,1.198148,0.272734,-9.172801,5.323754,1.098215,-5.772953,4.878188,0.777039,-3.104950,-5.892056,-3.362226,-5.441978,8.717775,-6.511113,-8.061775,-6.743630,0.638949,6.531326,-8.752619,6.497340,-9.068424,-7.304966,-7.706060,-8.834225,4.022870,-7.065502,-3.161004,-5.179860,8.373030,3.867252,-9.871867,2.049919,5.516743,-2.927004,3.467412,8.390990,4.861615,-1.731356,2.453042,-2.911622,5.475348,-7.250833,1.927385,1.336236,7.875370,-8.222703,-2.295219,-6.826738,-1.967386,-0.989791,-7.407680,7.913380,7.586500,0.003925,-3.086840,3.137745,4.976620,9.985564,-8.179787,7.195251,1.769045,-8.273403,9.596446,-1.723345,3.138144,4.495125,-0.868111,2.577656,-2.586025,6.108303,-9.696410,-0.457308,-4.364312,-4.380715,-1.603119,8.023585,2.083030,-7.122095,-5.594440,-2.413126,9.280412,1.213851,-8.891926,2.201118,9.978868,8.568904,-1.467689,3.199906,-4.203544,7.536880,5.244170,-5.898632,-6.808090,5.496929,8.909219,-2.377906,-3.900943,6.869643,-9.886859,7.575318,9.256049,0.572078,9.687197,-0.433530,-1.012965,-6.287717,-0.049732,-3.772585,0.674042,6.262655,7.445166,0.589898,5.631189,-8.767848,-1.199495,-6.979060,7.847843,6.787973,-4.172188,-5.152332,6.847396,7.217527,0.321031,0.343673,0.319718,-6.317514,-8.514096,-8.033231,-1.415070,-7.788272,4.271396,-0.613606,-1.969618,9.218185,5.471544,-5.417360,-2.296736,3.876739,2.706109,0.072758,2.727967,-8.793606,3.386655,-5.866139,2.946449,-0.102550,9.654841,8.227539,-1.100673,-8.997153,-6.898031,3.376927,-4.162423,8.728012,8.400570,9.919057,-2.723354,-2.500034,-4.355089,7.838991,7.026735,-4.248338,-7.698521,4.280369,-0.565881,-5.669977,-0.200376,-5.090862,-4.222357,-2.483669,-9.570543,9.816097,8.497720,-4.340468,-1.391991,-6.312192,-7.387471,-2.043202,-4.186625,0.147999,2.446452,-8.889101,4.263567,9.969884,-6.497925,0.861699,2.660699,7.835282,6.654853,-3.402312,0.086589,3.475738,-2.028245,-8.227949,1.814750,9.932050,4.350614,-4.937677,-2.284564,8.635394,-9.279868,5.886220,7.698689,-7.635087,1.109540,-8.386654,7.742435,-9.091396,1.747133,9.523268,-2.937186,8.113192,-7.751984,5.322545,5.992705,6.037846,7.833457,0.951518,2.557149,2.658619,4.129640,3.686725,-9.208326,-8.108099,-6.701986,-7.875476,-0.556241,-6.684824,-4.108360,-7.204363,-5.288743,1.714809,-3.267703,-0.081739,-5.123093,-3.116667,6.543991,1.741818,3.594598,1.022295,3.326148,6.191407,-4.342429,-2.687167,2.200356,-4.094296,-8.655187,3.847285,2.140300], dtype = "float32")#candidate|1701|(2160,)|const|float32
call_1699 = relay.TupleGetItem(func_880_call(relay.reshape(const_1700.astype('uint8'), [7, 5, 3]), relay.reshape(const_1700.astype('uint8'), [7, 5, 3]), relay.reshape(const_1701.astype('float32'), [15, 9, 16]), ), 4)
call_1702 = relay.TupleGetItem(func_885_call(relay.reshape(const_1700.astype('uint8'), [7, 5, 3]), relay.reshape(const_1700.astype('uint8'), [7, 5, 3]), relay.reshape(const_1701.astype('float32'), [15, 9, 16]), ), 4)
func_622_call = mod.get_global_var('func_622')
func_625_call = mutated_mod.get_global_var('func_625')
call_1735 = relay.TupleGetItem(func_622_call(relay.reshape(const_1701.astype('float32'), [15, 9, 16]), relay.reshape(const_1701.astype('float32'), [15, 9, 16]), ), 0)
call_1736 = relay.TupleGetItem(func_625_call(relay.reshape(const_1701.astype('float32'), [15, 9, 16]), relay.reshape(const_1701.astype('float32'), [15, 9, 16]), ), 0)
output = relay.Tuple([uop_1685,call_1699,const_1700,const_1701,call_1735,])
output2 = relay.Tuple([uop_1685,call_1702,const_1700,const_1701,call_1736,])
func_1739 = relay.Function([], output)
mod['func_1739'] = func_1739
mod = relay.transform.InferType()(mod)
mutated_mod['func_1739'] = func_1739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1739_call = mutated_mod.get_global_var('func_1739')
call_1740 = func_1739_call()
output = call_1740
func_1741 = relay.Function([], output)
mutated_mod['func_1741'] = func_1741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_1757 = relay.TupleGetItem(func_1739_call(), 1)
call_1758 = relay.TupleGetItem(func_1741_call(), 1)
func_880_call = mod.get_global_var('func_880')
func_885_call = mutated_mod.get_global_var('func_885')
const_1768 = relay.const([-5,-3,-5,5,-1,8,-4,9,-10,6,-7,1,-7,-9,-1,2,-7,3,3,8,8,-2,-6,-2,7,8,-9,10,-8,-2,1,4,-10,10,4,-9,-1,-5,-5,7,4,-8,8,9,-8,4,-7,-7,-5,10,4,-4,-4,6,-5,-9,-10,-4,-6,-4,-3,4,-7,7,-8,1,-10,-7,-1,2,-5,5,-10,6,1,10,8,-6,-3,-5,3,2,-9,8,1,-8,-2,6,1,8,9,7,-2,-10,-9,-7,-1,8,8,-3,-7,-9,-3,1,-4], dtype = "uint8")#candidate|1768|(105,)|const|uint8
call_1767 = relay.TupleGetItem(func_880_call(relay.reshape(const_1768.astype('uint8'), [7, 5, 3]), relay.reshape(const_1768.astype('uint8'), [7, 5, 3]), relay.reshape(call_1757.astype('float32'), [15, 9, 16]), ), 0)
call_1769 = relay.TupleGetItem(func_885_call(relay.reshape(const_1768.astype('uint8'), [7, 5, 3]), relay.reshape(const_1768.astype('uint8'), [7, 5, 3]), relay.reshape(call_1757.astype('float32'), [15, 9, 16]), ), 0)
output = relay.Tuple([call_1757,call_1767,const_1768,])
output2 = relay.Tuple([call_1758,call_1769,const_1768,])
func_1789 = relay.Function([], output)
mod['func_1789'] = func_1789
mod = relay.transform.InferType()(mod)
output = func_1789()
func_1790 = relay.Function([], output)
mutated_mod['func_1790'] = func_1790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1789_call = mod.get_global_var('func_1789')
func_1790_call = mutated_mod.get_global_var('func_1790')
call_1802 = relay.TupleGetItem(func_1789_call(), 1)
call_1803 = relay.TupleGetItem(func_1790_call(), 1)
uop_1808 = relay.cosh(call_1802.astype('float64')) # shape=(7, 5, 3)
uop_1810 = relay.cosh(call_1803.astype('float64')) # shape=(7, 5, 3)
uop_1811 = relay.sigmoid(call_1802.astype('float32')) # shape=(7, 5, 3)
uop_1813 = relay.sigmoid(call_1803.astype('float32')) # shape=(7, 5, 3)
output = relay.Tuple([uop_1808,uop_1811,])
output2 = relay.Tuple([uop_1810,uop_1813,])
func_1824 = relay.Function([], output)
mod['func_1824'] = func_1824
mod = relay.transform.InferType()(mod)
output = func_1824()
func_1825 = relay.Function([], output)
mutated_mod['func_1825'] = func_1825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_1847 = relay.TupleGetItem(func_1739_call(), 4)
call_1848 = relay.TupleGetItem(func_1741_call(), 4)
func_1158_call = mod.get_global_var('func_1158')
func_1162_call = mutated_mod.get_global_var('func_1162')
var_1871 = relay.var("var_1871", dtype = "uint8", shape = (105,))#candidate|1871|(105,)|var|uint8
call_1870 = relay.TupleGetItem(func_1158_call(relay.reshape(var_1871.astype('uint8'), [105,]), relay.reshape(call_1847.astype('float32'), [2160,]), ), 1)
call_1872 = relay.TupleGetItem(func_1162_call(relay.reshape(var_1871.astype('uint8'), [105,]), relay.reshape(call_1847.astype('float32'), [2160,]), ), 1)
uop_1894 = relay.exp(call_1870.astype('float32')) # shape=(15, 9, 16)
uop_1896 = relay.exp(call_1872.astype('float32')) # shape=(15, 9, 16)
bop_1901 = relay.logical_or(uop_1894.astype('bool'), relay.reshape(call_1870.astype('bool'), relay.shape_of(uop_1894))) # shape=(15, 9, 16)
bop_1904 = relay.logical_or(uop_1896.astype('bool'), relay.reshape(call_1872.astype('bool'), relay.shape_of(uop_1896))) # shape=(15, 9, 16)
uop_1910 = relay.sqrt(call_1847.astype('float32')) # shape=(15, 9, 16)
uop_1912 = relay.sqrt(call_1848.astype('float32')) # shape=(15, 9, 16)
bop_1921 = relay.less_equal(uop_1894.astype('bool'), relay.reshape(uop_1910.astype('bool'), relay.shape_of(uop_1894))) # shape=(15, 9, 16)
bop_1924 = relay.less_equal(uop_1896.astype('bool'), relay.reshape(uop_1912.astype('bool'), relay.shape_of(uop_1896))) # shape=(15, 9, 16)
const_1936 = relay.constdtype = "float32")#candidate|1936|(15, 9, 16)|const|float32
bop_1937 = relay.greater_equal(uop_1894.astype('bool'), relay.reshape(const_1936.astype('bool'), relay.shape_of(uop_1894))) # shape=(15, 9, 16)
bop_1940 = relay.greater_equal(uop_1896.astype('bool'), relay.reshape(const_1936.astype('bool'), relay.shape_of(uop_1896))) # shape=(15, 9, 16)
output = relay.Tuple([var_1871,bop_1901,bop_1921,bop_1937,])
output2 = relay.Tuple([var_1871,bop_1904,bop_1924,bop_1940,])
func_1942 = relay.Function([var_1871,], output)
mod['func_1942'] = func_1942
mod = relay.transform.InferType()(mod)
var_1943 = relay.var("var_1943", dtype = "uint8", shape = (105,))#candidate|1943|(105,)|var|uint8
output = func_1942(var_1943)
func_1944 = relay.Function([var_1943], output)
mutated_mod['func_1944'] = func_1944
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1952 = relay.var("var_1952", dtype = "float32", shape = (11, 7, 10))#candidate|1952|(11, 7, 10)|var|float32
uop_1953 = relay.acos(var_1952.astype('float32')) # shape=(11, 7, 10)
uop_1955 = relay.rsqrt(uop_1953.astype('float32')) # shape=(11, 7, 10)
func_622_call = mod.get_global_var('func_622')
func_625_call = mutated_mod.get_global_var('func_625')
var_1958 = relay.var("var_1958", dtype = "float32", shape = (2160,))#candidate|1958|(2160,)|var|float32
call_1957 = relay.TupleGetItem(func_622_call(relay.reshape(var_1958.astype('float32'), [15, 9, 16]), relay.reshape(var_1958.astype('float32'), [15, 9, 16]), ), 0)
call_1959 = relay.TupleGetItem(func_625_call(relay.reshape(var_1958.astype('float32'), [15, 9, 16]), relay.reshape(var_1958.astype('float32'), [15, 9, 16]), ), 0)
func_1158_call = mod.get_global_var('func_1158')
func_1162_call = mutated_mod.get_global_var('func_1162')
const_1983 = relay.const([-6,7,9,8,-9,-1,-7,10,6,-8,-10,-6,-4,-2,-3,8,-5,7,-5,10,-2,-8,1,-8,3,1,5,-4,8,-5,-8,-2,-10,-9,-4,6,3,-4,-2,-1,-10,-8,-10,6,-2,-10,-4,5,1,-8,4,2,-7,-4,-1,-4,7,-8,6,-6,-4,7,1,1,-6,9,-2,9,-7,8,8,-1,-4,2,2,8,-6,-6,-9,-1,8,6,2,1,8,1,3,-1,-10,9,-10,-2,4,-5,6,9,-7,6,-10,-3,8,6,-6,2,-7], dtype = "uint8")#candidate|1983|(105,)|const|uint8
call_1982 = relay.TupleGetItem(func_1158_call(relay.reshape(const_1983.astype('uint8'), [105,]), relay.reshape(call_1957.astype('float32'), [2160,]), ), 1)
call_1984 = relay.TupleGetItem(func_1162_call(relay.reshape(const_1983.astype('uint8'), [105,]), relay.reshape(call_1957.astype('float32'), [2160,]), ), 1)
output = relay.Tuple([uop_1955,call_1957,var_1958,call_1982,const_1983,])
output2 = relay.Tuple([uop_1955,call_1959,var_1958,call_1984,const_1983,])
func_1994 = relay.Function([var_1952,var_1958,], output)
mod['func_1994'] = func_1994
mod = relay.transform.InferType()(mod)
mutated_mod['func_1994'] = func_1994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1994_call = mutated_mod.get_global_var('func_1994')
var_1996 = relay.var("var_1996", dtype = "float32", shape = (11, 7, 10))#candidate|1996|(11, 7, 10)|var|float32
var_1997 = relay.var("var_1997", dtype = "float32", shape = (2160,))#candidate|1997|(2160,)|var|float32
call_1995 = func_1994_call(var_1996,var_1997,)
output = call_1995
func_1998 = relay.Function([var_1996,var_1997,], output)
mutated_mod['func_1998'] = func_1998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1824_call = mod.get_global_var('func_1824')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_2036 = relay.TupleGetItem(func_1824_call(), 0)
call_2037 = relay.TupleGetItem(func_1825_call(), 0)
output = call_2036
output2 = call_2037
func_2065 = relay.Function([], output)
mod['func_2065'] = func_2065
mod = relay.transform.InferType()(mod)
mutated_mod['func_2065'] = func_2065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2065_call = mutated_mod.get_global_var('func_2065')
call_2066 = func_2065_call()
output = call_2066
func_2067 = relay.Function([], output)
mutated_mod['func_2067'] = func_2067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1824_call = mod.get_global_var('func_1824')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_2134 = relay.TupleGetItem(func_1824_call(), 0)
call_2135 = relay.TupleGetItem(func_1825_call(), 0)
output = call_2134
output2 = call_2135
func_2138 = relay.Function([], output)
mod['func_2138'] = func_2138
mod = relay.transform.InferType()(mod)
mutated_mod['func_2138'] = func_2138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2138_call = mutated_mod.get_global_var('func_2138')
call_2139 = func_2138_call()
output = call_2139
func_2140 = relay.Function([], output)
mutated_mod['func_2140'] = func_2140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2145 = relay.var("var_2145", dtype = "uint32", shape = (4, 7, 3))#candidate|2145|(4, 7, 3)|var|uint32
var_2146 = relay.var("var_2146", dtype = "uint32", shape = (4, 7, 3))#candidate|2146|(4, 7, 3)|var|uint32
bop_2147 = relay.right_shift(var_2145.astype('uint32'), relay.reshape(var_2146.astype('uint32'), relay.shape_of(var_2145))) # shape=(4, 7, 3)
uop_2158 = relay.log2(bop_2147.astype('float32')) # shape=(4, 7, 3)
uop_2167 = relay.sigmoid(uop_2158.astype('float64')) # shape=(4, 7, 3)
func_2065_call = mod.get_global_var('func_2065')
func_2067_call = mutated_mod.get_global_var('func_2067')
call_2176 = func_2065_call()
call_2177 = func_2065_call()
output = relay.Tuple([uop_2167,call_2176,])
output2 = relay.Tuple([uop_2167,call_2177,])
func_2186 = relay.Function([var_2145,var_2146,], output)
mod['func_2186'] = func_2186
mod = relay.transform.InferType()(mod)
mutated_mod['func_2186'] = func_2186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2186_call = mutated_mod.get_global_var('func_2186')
var_2188 = relay.var("var_2188", dtype = "uint32", shape = (4, 7, 3))#candidate|2188|(4, 7, 3)|var|uint32
var_2189 = relay.var("var_2189", dtype = "uint32", shape = (4, 7, 3))#candidate|2189|(4, 7, 3)|var|uint32
call_2187 = func_2186_call(var_2188,var_2189,)
output = call_2187
func_2190 = relay.Function([var_2188,var_2189,], output)
mutated_mod['func_2190'] = func_2190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_2272 = relay.TupleGetItem(func_1739_call(), 2)
call_2273 = relay.TupleGetItem(func_1741_call(), 2)
func_2186_call = mod.get_global_var('func_2186')
func_2190_call = mutated_mod.get_global_var('func_2190')
var_2284 = relay.var("var_2284", dtype = "uint32", shape = (84,))#candidate|2284|(84,)|var|uint32
call_2283 = relay.TupleGetItem(func_2186_call(relay.reshape(var_2284.astype('uint32'), [4, 7, 3]), relay.reshape(var_2284.astype('uint32'), [4, 7, 3]), ), 0)
call_2285 = relay.TupleGetItem(func_2190_call(relay.reshape(var_2284.astype('uint32'), [4, 7, 3]), relay.reshape(var_2284.astype('uint32'), [4, 7, 3]), ), 0)
func_1942_call = mod.get_global_var('func_1942')
func_1944_call = mutated_mod.get_global_var('func_1944')
call_2287 = relay.TupleGetItem(func_1942_call(relay.reshape(call_2272.astype('uint8'), [105,])), 3)
call_2288 = relay.TupleGetItem(func_1944_call(relay.reshape(call_2272.astype('uint8'), [105,])), 3)
output = relay.Tuple([call_2272,call_2283,var_2284,call_2287,])
output2 = relay.Tuple([call_2273,call_2285,var_2284,call_2288,])
func_2306 = relay.Function([var_2284,], output)
mod['func_2306'] = func_2306
mod = relay.transform.InferType()(mod)
var_2307 = relay.var("var_2307", dtype = "uint32", shape = (84,))#candidate|2307|(84,)|var|uint32
output = func_2306(var_2307)
func_2308 = relay.Function([var_2307], output)
mutated_mod['func_2308'] = func_2308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_2342 = relay.TupleGetItem(func_1739_call(), 2)
call_2343 = relay.TupleGetItem(func_1741_call(), 2)
func_1602_call = mod.get_global_var('func_1602')
func_1605_call = mutated_mod.get_global_var('func_1605')
var_2368 = relay.var("var_2368", dtype = "uint64", shape = (154,))#candidate|2368|(154,)|var|uint64
call_2367 = func_1602_call(relay.reshape(var_2368.astype('uint64'), [11, 2, 7]), relay.reshape(var_2368.astype('uint64'), [11, 2, 7]), )
call_2369 = func_1602_call(relay.reshape(var_2368.astype('uint64'), [11, 2, 7]), relay.reshape(var_2368.astype('uint64'), [11, 2, 7]), )
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
const_2376 = relay.const([False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False], dtype = "bool")#candidate|2376|(135,)|const|bool
call_2375 = relay.TupleGetItem(func_76_call(relay.reshape(const_2376.astype('bool'), [3, 9, 5]), relay.reshape(const_2376.astype('bool'), [3, 9, 5]), ), 1)
call_2377 = relay.TupleGetItem(func_79_call(relay.reshape(const_2376.astype('bool'), [3, 9, 5]), relay.reshape(const_2376.astype('bool'), [3, 9, 5]), ), 1)
output = relay.Tuple([call_2342,call_2367,var_2368,call_2375,const_2376,])
output2 = relay.Tuple([call_2343,call_2369,var_2368,call_2377,const_2376,])
func_2378 = relay.Function([var_2368,], output)
mod['func_2378'] = func_2378
mod = relay.transform.InferType()(mod)
mutated_mod['func_2378'] = func_2378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2379 = relay.var("var_2379", dtype = "uint64", shape = (154,))#candidate|2379|(154,)|var|uint64
func_2378_call = mutated_mod.get_global_var('func_2378')
call_2380 = func_2378_call(var_2379)
output = call_2380
func_2381 = relay.Function([var_2379], output)
mutated_mod['func_2381'] = func_2381
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2424 = relay.var("var_2424", dtype = "float64", shape = (16, 2, 4))#candidate|2424|(16, 2, 4)|var|float64
var_2425 = relay.var("var_2425", dtype = "float64", shape = (16, 2, 4))#candidate|2425|(16, 2, 4)|var|float64
bop_2426 = relay.floor_divide(var_2424.astype('float64'), relay.reshape(var_2425.astype('float64'), relay.shape_of(var_2424))) # shape=(16, 2, 4)
uop_2439 = relay.log10(var_2425.astype('float64')) # shape=(16, 2, 4)
bop_2444 = relay.add(uop_2439.astype('uint64'), relay.reshape(bop_2426.astype('uint64'), relay.shape_of(uop_2439))) # shape=(16, 2, 4)
bop_2455 = relay.divide(bop_2426.astype('float64'), relay.reshape(uop_2439.astype('float64'), relay.shape_of(bop_2426))) # shape=(16, 2, 4)
output = relay.Tuple([bop_2444,bop_2455,])
output2 = relay.Tuple([bop_2444,bop_2455,])
func_2458 = relay.Function([var_2424,var_2425,], output)
mod['func_2458'] = func_2458
mod = relay.transform.InferType()(mod)
var_2459 = relay.var("var_2459", dtype = "float64", shape = (16, 2, 4))#candidate|2459|(16, 2, 4)|var|float64
var_2460 = relay.var("var_2460", dtype = "float64", shape = (16, 2, 4))#candidate|2460|(16, 2, 4)|var|float64
output = func_2458(var_2459,var_2460,)
func_2461 = relay.Function([var_2459,var_2460,], output)
mutated_mod['func_2461'] = func_2461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1789_call = mod.get_global_var('func_1789')
func_1790_call = mutated_mod.get_global_var('func_1790')
call_2466 = relay.TupleGetItem(func_1789_call(), 2)
call_2467 = relay.TupleGetItem(func_1790_call(), 2)
output = relay.Tuple([call_2466,])
output2 = relay.Tuple([call_2467,])
func_2534 = relay.Function([], output)
mod['func_2534'] = func_2534
mod = relay.transform.InferType()(mod)
mutated_mod['func_2534'] = func_2534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2534_call = mutated_mod.get_global_var('func_2534')
call_2535 = func_2534_call()
output = call_2535
func_2536 = relay.Function([], output)
mutated_mod['func_2536'] = func_2536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1824_call = mod.get_global_var('func_1824')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_2546 = relay.TupleGetItem(func_1824_call(), 1)
call_2547 = relay.TupleGetItem(func_1825_call(), 1)
output = call_2546
output2 = call_2547
func_2557 = relay.Function([], output)
mod['func_2557'] = func_2557
mod = relay.transform.InferType()(mod)
output = func_2557()
func_2558 = relay.Function([], output)
mutated_mod['func_2558'] = func_2558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_2601 = relay.TupleGetItem(func_2534_call(), 0)
call_2602 = relay.TupleGetItem(func_2536_call(), 0)
output = relay.Tuple([call_2601,])
output2 = relay.Tuple([call_2602,])
func_2614 = relay.Function([], output)
mod['func_2614'] = func_2614
mod = relay.transform.InferType()(mod)
mutated_mod['func_2614'] = func_2614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2614_call = mutated_mod.get_global_var('func_2614')
call_2615 = func_2614_call()
output = call_2615
func_2616 = relay.Function([], output)
mutated_mod['func_2616'] = func_2616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2557_call = mod.get_global_var('func_2557')
func_2558_call = mutated_mod.get_global_var('func_2558')
call_2664 = func_2557_call()
call_2665 = func_2557_call()
uop_2672 = relay.tan(call_2664.astype('float32')) # shape=(7, 5, 3)
uop_2674 = relay.tan(call_2665.astype('float32')) # shape=(7, 5, 3)
func_2306_call = mod.get_global_var('func_2306')
func_2308_call = mutated_mod.get_global_var('func_2308')
const_2680 = relay.const([4,2,-2,-1,4,1,8,6,10,7,10,4,1,7,-7,-9,-10,9,3,-7,9,7,-4,3,8,-7,-9,6,-4,5,1,-4,-6,3,4,8,-9,-1,5,6,-4,-4,3,5,2,3,-4,4,-2,1,10,7,2,4,-4,3,-3,-10,-8,6,-5,-3,7,-10,6,-3,1,-8,10,2,-4,1,-1,-6,6,-9,2,-1,-1,6,-2,-6,8,6], dtype = "uint32")#candidate|2680|(84,)|const|uint32
call_2679 = relay.TupleGetItem(func_2306_call(relay.reshape(const_2680.astype('uint32'), [84,])), 0)
call_2681 = relay.TupleGetItem(func_2308_call(relay.reshape(const_2680.astype('uint32'), [84,])), 0)
output = relay.Tuple([uop_2672,call_2679,const_2680,])
output2 = relay.Tuple([uop_2674,call_2681,const_2680,])
func_2682 = relay.Function([], output)
mod['func_2682'] = func_2682
mod = relay.transform.InferType()(mod)
mutated_mod['func_2682'] = func_2682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2682_call = mutated_mod.get_global_var('func_2682')
call_2683 = func_2682_call()
output = call_2683
func_2684 = relay.Function([], output)
mutated_mod['func_2684'] = func_2684
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2716 = relay.var("var_2716", dtype = "uint16", shape = (5, 15, 5))#candidate|2716|(5, 15, 5)|var|uint16
var_2717 = relay.var("var_2717", dtype = "uint16", shape = (5, 15, 5))#candidate|2717|(5, 15, 5)|var|uint16
bop_2718 = relay.greater(var_2716.astype('bool'), relay.reshape(var_2717.astype('bool'), relay.shape_of(var_2716))) # shape=(5, 15, 5)
func_1158_call = mod.get_global_var('func_1158')
func_1162_call = mutated_mod.get_global_var('func_1162')
var_2737 = relay.var("var_2737", dtype = "uint8", shape = (105,))#candidate|2737|(105,)|var|uint8
var_2738 = relay.var("var_2738", dtype = "float32", shape = (2160,))#candidate|2738|(2160,)|var|float32
call_2736 = relay.TupleGetItem(func_1158_call(relay.reshape(var_2737.astype('uint8'), [105,]), relay.reshape(var_2738.astype('float32'), [2160,]), ), 4)
call_2739 = relay.TupleGetItem(func_1162_call(relay.reshape(var_2737.astype('uint8'), [105,]), relay.reshape(var_2738.astype('float32'), [2160,]), ), 4)
output = relay.Tuple([bop_2718,call_2736,var_2737,var_2738,])
output2 = relay.Tuple([bop_2718,call_2739,var_2737,var_2738,])
func_2743 = relay.Function([var_2716,var_2717,var_2737,var_2738,], output)
mod['func_2743'] = func_2743
mod = relay.transform.InferType()(mod)
var_2744 = relay.var("var_2744", dtype = "uint16", shape = (5, 15, 5))#candidate|2744|(5, 15, 5)|var|uint16
var_2745 = relay.var("var_2745", dtype = "uint16", shape = (5, 15, 5))#candidate|2745|(5, 15, 5)|var|uint16
var_2746 = relay.var("var_2746", dtype = "uint8", shape = (105,))#candidate|2746|(105,)|var|uint8
var_2747 = relay.var("var_2747", dtype = "float32", shape = (2160,))#candidate|2747|(2160,)|var|float32
output = func_2743(var_2744,var_2745,var_2746,var_2747,)
func_2748 = relay.Function([var_2744,var_2745,var_2746,var_2747,], output)
mutated_mod['func_2748'] = func_2748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_2800 = relay.TupleGetItem(func_1739_call(), 3)
call_2801 = relay.TupleGetItem(func_1741_call(), 3)
func_1789_call = mod.get_global_var('func_1789')
func_1790_call = mutated_mod.get_global_var('func_1790')
call_2804 = relay.TupleGetItem(func_1789_call(), 0)
call_2805 = relay.TupleGetItem(func_1790_call(), 0)
uop_2806 = relay.log2(call_2800.astype('float32')) # shape=(2160,)
uop_2808 = relay.log2(call_2801.astype('float32')) # shape=(2160,)
output = relay.Tuple([call_2804,uop_2806,])
output2 = relay.Tuple([call_2805,uop_2808,])
func_2819 = relay.Function([], output)
mod['func_2819'] = func_2819
mod = relay.transform.InferType()(mod)
mutated_mod['func_2819'] = func_2819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2819_call = mutated_mod.get_global_var('func_2819')
call_2820 = func_2819_call()
output = call_2820
func_2821 = relay.Function([], output)
mutated_mod['func_2821'] = func_2821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2819_call = mod.get_global_var('func_2819')
func_2821_call = mutated_mod.get_global_var('func_2821')
call_2851 = relay.TupleGetItem(func_2819_call(), 0)
call_2852 = relay.TupleGetItem(func_2821_call(), 0)
func_2065_call = mod.get_global_var('func_2065')
func_2067_call = mutated_mod.get_global_var('func_2067')
call_2857 = func_2065_call()
call_2858 = func_2065_call()
func_993_call = mod.get_global_var('func_993')
func_996_call = mutated_mod.get_global_var('func_996')
var_2860 = relay.var("var_2860", dtype = "float32", shape = (480,))#candidate|2860|(480,)|var|float32
call_2859 = relay.TupleGetItem(func_993_call(relay.reshape(var_2860.astype('float32'), [4, 15, 8])), 1)
call_2861 = relay.TupleGetItem(func_996_call(relay.reshape(var_2860.astype('float32'), [4, 15, 8])), 1)
uop_2864 = relay.atanh(call_2851.astype('float64')) # shape=(15, 9, 16)
uop_2866 = relay.atanh(call_2852.astype('float64')) # shape=(15, 9, 16)
uop_2873 = relay.sin(uop_2864.astype('float32')) # shape=(15, 9, 16)
uop_2875 = relay.sin(uop_2866.astype('float32')) # shape=(15, 9, 16)
bop_2882 = relay.bitwise_and(uop_2873.astype('int32'), relay.reshape(uop_2864.astype('int32'), relay.shape_of(uop_2873))) # shape=(15, 9, 16)
bop_2885 = relay.bitwise_and(uop_2875.astype('int32'), relay.reshape(uop_2866.astype('int32'), relay.shape_of(uop_2875))) # shape=(15, 9, 16)
func_2614_call = mod.get_global_var('func_2614')
func_2616_call = mutated_mod.get_global_var('func_2616')
call_2889 = relay.TupleGetItem(func_2614_call(), 0)
call_2890 = relay.TupleGetItem(func_2616_call(), 0)
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_2903 = relay.TupleGetItem(func_1739_call(), 2)
call_2904 = relay.TupleGetItem(func_1741_call(), 2)
bop_2909 = relay.add(bop_2882.astype('float32'), relay.reshape(uop_2864.astype('float32'), relay.shape_of(bop_2882))) # shape=(15, 9, 16)
bop_2912 = relay.add(bop_2885.astype('float32'), relay.reshape(uop_2866.astype('float32'), relay.shape_of(bop_2885))) # shape=(15, 9, 16)
output = relay.Tuple([call_2857,call_2859,var_2860,call_2889,call_2903,bop_2909,])
output2 = relay.Tuple([call_2858,call_2861,var_2860,call_2890,call_2904,bop_2912,])
func_2914 = relay.Function([var_2860,], output)
mod['func_2914'] = func_2914
mod = relay.transform.InferType()(mod)
mutated_mod['func_2914'] = func_2914
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2915 = relay.var("var_2915", dtype = "float32", shape = (480,))#candidate|2915|(480,)|var|float32
func_2914_call = mutated_mod.get_global_var('func_2914')
call_2916 = func_2914_call(var_2915)
output = call_2916
func_2917 = relay.Function([var_2915], output)
mutated_mod['func_2917'] = func_2917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1789_call = mod.get_global_var('func_1789')
func_1790_call = mutated_mod.get_global_var('func_1790')
call_2921 = relay.TupleGetItem(func_1789_call(), 2)
call_2922 = relay.TupleGetItem(func_1790_call(), 2)
output = call_2921
output2 = call_2922
func_2928 = relay.Function([], output)
mod['func_2928'] = func_2928
mod = relay.transform.InferType()(mod)
mutated_mod['func_2928'] = func_2928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mutated_mod.get_global_var('func_2928')
call_2929 = func_2928_call()
output = call_2929
func_2930 = relay.Function([], output)
mutated_mod['func_2930'] = func_2930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1789_call = mod.get_global_var('func_1789')
func_1790_call = mutated_mod.get_global_var('func_1790')
call_2931 = relay.TupleGetItem(func_1789_call(), 0)
call_2932 = relay.TupleGetItem(func_1790_call(), 0)
output = relay.Tuple([call_2931,])
output2 = relay.Tuple([call_2932,])
func_2937 = relay.Function([], output)
mod['func_2937'] = func_2937
mod = relay.transform.InferType()(mod)
mutated_mod['func_2937'] = func_2937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mutated_mod.get_global_var('func_2937')
call_2938 = func_2937_call()
output = call_2938
func_2939 = relay.Function([], output)
mutated_mod['func_2939'] = func_2939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2969 = relay.var("var_2969", dtype = "uint64", shape = (1, 10, 5))#candidate|2969|(1, 10, 5)|var|uint64
var_2970 = relay.var("var_2970", dtype = "uint64", shape = (10, 10, 5))#candidate|2970|(10, 10, 5)|var|uint64
bop_2971 = relay.logical_xor(var_2969.astype('uint64'), var_2970.astype('uint64')) # shape=(10, 10, 5)
bop_2977 = relay.bitwise_and(bop_2971.astype('uint32'), relay.reshape(var_2970.astype('uint32'), relay.shape_of(bop_2971))) # shape=(10, 10, 5)
output = relay.Tuple([bop_2977,])
output2 = relay.Tuple([bop_2977,])
func_2980 = relay.Function([var_2969,var_2970,], output)
mod['func_2980'] = func_2980
mod = relay.transform.InferType()(mod)
mutated_mod['func_2980'] = func_2980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2980_call = mutated_mod.get_global_var('func_2980')
var_2982 = relay.var("var_2982", dtype = "uint64", shape = (1, 10, 5))#candidate|2982|(1, 10, 5)|var|uint64
var_2983 = relay.var("var_2983", dtype = "uint64", shape = (10, 10, 5))#candidate|2983|(10, 10, 5)|var|uint64
call_2981 = func_2980_call(var_2982,var_2983,)
output = call_2981
func_2984 = relay.Function([var_2982,var_2983,], output)
mutated_mod['func_2984'] = func_2984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2557_call = mod.get_global_var('func_2557')
func_2558_call = mutated_mod.get_global_var('func_2558')
call_3053 = func_2557_call()
call_3054 = func_2557_call()
uop_3057 = relay.log2(call_3053.astype('float32')) # shape=(7, 5, 3)
uop_3059 = relay.log2(call_3054.astype('float32')) # shape=(7, 5, 3)
bop_3062 = relay.left_shift(uop_3057.astype('uint64'), relay.reshape(call_3053.astype('uint64'), relay.shape_of(uop_3057))) # shape=(7, 5, 3)
bop_3065 = relay.left_shift(uop_3059.astype('uint64'), relay.reshape(call_3054.astype('uint64'), relay.shape_of(uop_3059))) # shape=(7, 5, 3)
func_2682_call = mod.get_global_var('func_2682')
func_2684_call = mutated_mod.get_global_var('func_2684')
call_3073 = relay.TupleGetItem(func_2682_call(), 0)
call_3074 = relay.TupleGetItem(func_2684_call(), 0)
func_1053_call = mod.get_global_var('func_1053')
func_1059_call = mutated_mod.get_global_var('func_1059')
var_3091 = relay.var("var_3091", dtype = "float32", shape = ())#candidate|3091|()|var|float32
const_3092 = relay.const([-4.920914,2.511345,-8.169060,-9.282529,-8.779401,-1.305519,9.892182,8.879664,-1.326454,-5.006657,-4.225609,-5.468948,-6.620056,-7.793966,5.153922,-3.781552,4.995469,-2.292348,9.195959,-4.335534,1.515265,-9.001975,-0.216712,3.581831,0.619562,6.529479,8.776783,9.457581,6.621921,-7.446213,9.367721,-5.371453,-7.262343,-8.575781,7.613817,5.671445,-0.688484,7.545501,1.063300,4.919484,-1.194773,-3.179149,-2.824779,-3.435736,4.261297,-8.855038,6.594346,8.636026,8.940849,0.706396,7.050243,1.887922,-6.387955,-3.926451,4.683685,-5.368952,7.078818,-8.960154,9.508463,2.166465,3.220159,9.001755,-2.060438,-7.344511,8.350602,-9.034654,-5.870918,-1.790224,-7.080655,-3.654747,-2.742818,-5.898586,4.239161,6.252069,4.859863,7.864834,6.485784,9.411134,7.960476,4.077302,9.237950,2.534470,-0.432058,-6.982669,7.272179,-4.595266,0.628984,2.073760,3.211773,9.538682,1.639257,1.619215,-7.730335,-4.053767,-9.690672,-8.803737,1.093795,6.052857,6.139011,-6.690133,-6.370882,-6.166484,8.643164,-0.080555,-8.245694,7.376820,-3.263368,-4.866513,5.382946,4.036508,8.372939,4.462573,3.154156,-3.887461,-1.239798,7.893440,6.084394,8.904166,2.760579,-4.463105,5.302721,9.217329,-3.617568,-6.657794,-4.510978,-3.402098,5.144287,-9.497849,-1.214681,9.857346,-2.910972,-3.054401,-7.590407,-2.956610,9.639630,-0.282466,4.132085,2.798324,6.323767,2.381457,9.563457,8.197587,-6.731029,0.443520,-9.610582,1.136536,-6.926799,2.276813,6.018650,-1.717355,-8.557909,-0.228782,1.990667,2.129990,4.205618,-6.862505,-8.690094,-3.518948,-2.477813,-8.004102,-0.158290,0.478176,4.116520,-8.712342,-4.345368,5.147958,8.924067,-6.491469,0.255683,9.675630,1.504186,7.096486,-2.793435,-3.905915,-7.919258,3.984346,-4.473152,4.881464,5.973169,6.224550,-8.562287,-1.223933,-8.846995,-5.957951,5.801856,-8.399517,-0.195220,-9.872608,0.449476,7.422023,4.215621,0.545838,3.603359,1.999389,-7.008839,-6.878468,-9.177774,-0.701038,-0.109031,-9.914113,-7.538720,-8.322263,8.830587,8.119723,8.106814,-1.683510,-9.423663,-8.649066,-0.371212,-7.683327,-6.496222,9.231358,-6.041329,6.300437,6.236339,-4.693641,9.666429,-1.097355,7.184269,8.422390,-5.024883,-6.529115,0.523809,-7.256805,-4.798168,-8.738439,8.732520,0.438399,2.197856,-7.504934,0.737767,2.837803,4.512355,5.082103,7.900902,8.702730,-9.111486,-9.237910,8.830481,2.039351,-6.253697,-2.005802,8.014129,4.701510,4.906289,0.182655,-9.234757,6.324720,-7.634668,-2.972831,4.451183,0.900135,9.870767,-6.179912,-1.682619,8.131445,1.958742,9.812257,9.039667,-7.444495,-6.703806,8.797453,-7.049222,7.934685,4.097389,-1.879292,9.567203,-0.745279,-7.152860,0.032960,-7.699427,1.887395,3.182424,4.043053,1.331118,7.471975,6.787767,-0.487229,9.215913,6.947771,6.337430,2.086118,5.999176,-6.696679,-0.034803,0.680673,-6.395861,9.475893,7.758229,-0.182744,-5.350806,-1.223084,2.962269,8.071569,-5.377612,3.073865,-1.246654,5.701491,3.655286,1.903991,0.026336,-4.973114,4.165987,5.325522,-5.497847,8.785982,8.008940,3.511040,-5.908114,5.754094,8.855123,4.250715,-1.148470,3.312412,-7.818369,7.570489,7.768657,4.310645,0.302215,3.735415,-0.553811,-1.809650,8.943626,-2.972608,-3.675503,-3.954589,0.224463,-5.925667,-3.013477,6.317008,-4.273822,0.921851,-8.266665,7.327909,7.711800,-5.958719,3.721896,-5.371943,-3.399271,0.525223,-3.299918,-1.992558,9.411860,2.724707,-1.830425,-8.198632,-7.167453,0.952940,-9.056696,-2.128678,3.118051,8.957964,-4.035342,4.194929,8.119558,6.448328,3.225049,6.939800,-7.059850,-2.238211,6.399576,-3.671982,-1.652622,-4.210859,-6.986277,8.490196,5.006562,-3.819541,-3.457380,-1.152479,-8.012531,1.104762,7.375201,-7.105389,-5.715988,7.638014,6.362308,4.976408,1.453453,-5.702671,-1.096434,6.475761,8.557258,8.936311,-7.591123,0.218637,-7.262774,-4.309914,7.687611,0.582584,0.938980,5.995265,-8.887768,3.994117,-0.199652,3.080122,6.077088,1.880245,2.632323,-9.733877,-1.467800,-2.428936,-5.436364,6.491218,-2.710907,8.732483,5.157930,-1.202624,9.479057,6.906823,-5.549731,8.301957,7.584551,-2.695816,3.753159,-1.652765,-3.219547,-9.218718,1.231555,-5.701928,1.887681,-7.559280,-8.447411,-4.443195,-8.206202,3.503393,9.243017,-9.270912,9.622560,5.589095,8.560105,4.564776,-7.546355,-3.989403,8.756969,8.647380,9.041730,7.350531,4.758360,3.064770,5.134815,-8.535245,9.174709,9.155954,0.426136,-2.376497,2.867024,-5.004044,4.056029,6.697060,0.762999,5.373058,-1.503549,-7.014242,2.193177,5.968335,-6.421271,6.212866,-2.609721,4.133461,6.706253,-3.863850,1.782603,-1.185437,-0.305577,9.935896,8.240602,-4.248965,0.397535,1.991788,-6.001684,7.659007,-3.953762,2.277914,5.947380,-5.877235,-8.848431,7.330007,4.308868,-2.489681], dtype = "float32")#candidate|3092|(480,)|const|float32
const_3093 = relay.const([5.932021,-0.195678,1.170266,-1.662372,4.785870,7.395406,0.344830,0.124338,7.638340,4.627410,8.546601,-2.445083,-6.990348,1.218881,-8.612738,9.374862,7.489288,-1.565602,-6.229857,6.328516,3.218693,-3.717598,-3.073652,-7.678079,8.186391,-5.778627,-6.910419,5.016070,4.411712,-7.201387,6.318792,-0.314679,3.462983,2.501409,6.961203,-5.060686,5.408477,7.673154,-4.313863,3.965404,1.978562,0.281372,-1.569136,-1.316734,0.901358,-7.207873,-3.306823,-8.368977,7.167621,-3.059380,-9.097496,-5.445539,7.645841,3.838314,3.448028,-7.779623,2.205555,0.668952,-0.460158,9.990769,-1.635327,-4.558461,-7.554350,6.058349,-5.084196,-8.803063,-1.001237,-8.893548,3.063711,8.164225,-1.873848,7.269570,1.446984,2.800233,6.623511,-7.030206,-6.735463,-7.201706,5.138371,5.808211,8.310748,-4.529922,-5.230794,-9.756595,4.643706,-8.298021,8.720767,3.502697,-2.108292,-9.276723,3.921441,-3.193737,9.280426,0.806649,-0.985123,-6.468198,-3.793815,4.577629,7.675038,-1.512620,1.563980,-4.330702,8.440634,-0.019995,-7.479064,2.902240,5.093328,-9.971930,-1.844768,3.478287,-3.450291,4.116561,-5.879795,0.756059,-8.825880,-9.616241,-1.532211,-7.240936,-8.157483,-4.324856,9.243363,8.976555,1.705866,9.525632,8.783179,-3.512462,-4.358901,-4.498389,-7.457075,-4.561248,-6.487787,-1.833811,3.567398,-0.169950,5.958253,-3.578018,-6.951635,1.308433,7.759182,5.721381,5.134781,-6.736538,7.633908,6.625865,-7.736030,-5.229349,-1.203562,-9.515713,4.748269,-2.794408,7.545553,4.198076,-1.899410,6.646485,4.476972,-5.009155,-3.341970,-7.179147,5.637457,2.958329,0.774999,-3.820478,-4.997336,1.291324,1.884600,2.651328,4.370839,-7.451139,5.165842,2.626756,9.918572,-7.824568,8.024166,3.493244,-1.522172,-4.232137,5.437709,7.079814,4.342234,0.180409,-6.619108,2.984143,-2.793266,5.502022,3.931217,-6.390783,-8.269818,-4.261908,-0.813851,3.834891,-6.572016,-6.565667,-3.307946,-7.678539,2.999627,5.451218,-5.128349,1.953408,-1.780929,-9.991054,4.813777,-4.380523,6.635453,3.138984,1.597055,-8.051632,2.065617,5.767067,8.115141,5.581173,0.697289,-6.738106,-7.658427,-9.836193,9.854327,-5.122552,-0.639287,-8.532019,-8.486164,9.299479,-1.489296,9.482538,-5.171192,-0.473945,-1.463226,-4.428184,-5.914774,0.303295,-4.072764,6.029346,0.249262,9.518411,9.337421,7.797430,8.184154,8.900826,7.699238,6.887830,1.923218,2.112589,-2.455991,8.870216,-9.672367,0.709807,1.922511,-3.016319,-1.379361,-9.523834,-6.171202,5.808675,-4.170497,0.664950,-6.875649,6.893380,-4.959011,4.181985,5.866465,2.702600,-8.126100,-7.248156,-0.739862,-3.719465,-9.882275,-3.777699,-8.083372,5.433094,-6.692384,-7.169702,2.195441,-3.056810,-4.048064,-7.510518,-9.661897,-5.182426,-6.178451,-9.456274,4.921924,-0.784492,7.000234,-5.204994,-9.423612,-7.673178,1.000289,6.973494,8.413312,-7.410988,-5.723198,7.594267,9.396801,5.377552,-8.911982,-8.440731,-1.589742,-0.237151,4.820799,8.790431,-4.830476,-0.676587,5.582094,-4.719193,5.007074,-7.379769,-0.504652,-8.485707,2.052568,6.369754,-7.727941,-7.087615,-8.773959,-3.565169,6.220095,-9.239606,-2.973451,7.714509,-5.579251,-7.198204,7.978982,6.530054,-9.611131,5.527465,7.569448,1.014246,-0.958825,-1.363323,-9.672750,-2.711069,6.353226,8.091985,6.145661,3.129663,8.605028,6.584889,-3.532543,-0.132901,-4.420009,7.878053,-3.619971,9.899833,-7.943923,-4.699777,0.204335,-4.368253,6.114524,-8.621932,5.810649,-6.118018,6.946236,9.972433,4.739317,-6.907493,5.056990,4.912442,-9.271965,-8.479807,7.638237,-8.637719,5.352529,0.353031,-0.061119,3.839685,6.689063,-7.344865,8.106071,-9.543714,5.988015,-0.997691,-6.848889,8.784903,5.351798,9.654750,-2.271755,5.039495,7.693581,-7.164384,-3.257952,8.897374,6.823148,-7.933859,1.330661,1.328562,6.887650,6.858833,-7.727805,-6.782468,-7.861437,-1.910146,0.842612,-0.123923,-6.994084,1.643336,-6.832172,-2.149130,-5.636439,-7.918608,9.626434,9.481658,9.366782,3.970289,6.345586,6.009227,2.205495,-8.737490,4.069777,1.717347,3.479482,-4.985920,4.933112,8.640233,6.034139,3.264052,-4.654574,7.515031,7.344030,4.979426,0.888695,-9.619810,-5.984660,6.827600,9.520730,0.081953,7.561912,-2.556590,-2.758860,9.798174,2.009594,-4.037341,8.995779,-9.472216,-1.436104,5.436509,-5.820286,0.602463,-9.492976,0.884010,3.750932,-2.341395,-8.540741,-4.114591,-6.568151,4.673280,-4.915964,5.999924,5.297985,7.293043,7.591922,5.212801,-5.945332,-4.127528,-0.539348,9.790364,-3.733214,-0.126579,-6.594470,0.314079,-7.160197,2.031379,9.916514,-2.843266,-4.705979,-5.409165,-6.479870,0.694787,-3.498576,4.253075,5.514846,8.591957,-0.014311,5.929996,-7.772419,-0.859064,3.028878,0.339626,-0.518979,5.252578,3.480248,2.088852,-4.374312,9.586090,-1.757380,1.076786,2.828691,-0.200562,-7.297641,-9.403409,-6.727071,-2.306636,-2.101993,-0.132092,9.373782,2.743180,-9.928062,6.752269,-5.206678,2.290421,1.215168,-6.391942,0.695545,3.931774,-8.975701,-7.863995,-3.753448,-4.247783,9.777424,7.631943,3.702628,6.799186,7.374231,-6.697696,2.531382,3.936538,-4.951344,9.635322,-3.036240,0.972746,3.292092,3.245437,-6.698849,-8.377047,8.930035,4.871149,8.490279,-7.425475,3.094306,-8.001643,-0.603474,8.298341,7.698531,5.101843,3.547607,2.189278,-1.523866,-5.836131,-6.371890,-3.611191,5.833474,-8.670857,3.701845,2.779015,4.883812,4.253370,8.525323,-9.480244,-3.589260,-0.465899,8.544501,-4.058092,1.308482,-5.460392,5.725688,3.248549,-7.391459,6.449775,-4.623119,-5.978622,-2.344260,0.957514,3.245854,6.389516,2.975946,1.302894,2.198536,1.963079,1.606444,-5.207610,-9.642910,8.256173,-3.496990,-1.087422,6.305957,-8.814893,0.779628,-6.689450,-8.952751,-5.279726,5.225048,-8.924785,0.506013,1.120464,4.420422,8.352569,8.670785,1.890118,-5.355209,-0.737257,-0.979870,0.840779,8.783700,-9.432721,1.222398,9.040401,2.549545,3.587890,6.160183,7.256312,9.928664,7.655434,2.153030,-1.182234,-0.765561,7.979612,2.151889,-5.714069,-6.794481,-9.097081,9.376819,7.221059,4.796583,6.086545,0.082286,-0.002952,-3.962054,-3.684358,-1.110972,3.205897,0.264065,4.601174,9.830029,2.801253,9.901136,-0.925941,-9.455579,5.761583,-9.723470,-6.917096,5.354665,-2.880207,-1.310441,1.242525,9.631019,-3.764538,6.702058,-2.536266,6.079970,2.305138,5.477978,-5.189007,6.688775,-9.978984,-8.421932,0.993145,8.103129,6.927521,-1.193171,-7.432469,5.041134,2.005725,-0.350989,-3.867034,0.317743,-2.255393,2.154507,-2.880804,-2.068912,-9.328989,-7.994099,-0.456320,-5.294930,0.358067,-2.574196,-6.361950,-4.448615,7.974062,6.805397,0.896536,8.513099,-0.643856,-2.281061,4.116941,8.658950,9.724760,2.322860,5.319505,-5.488046,3.264176,-5.905514,-1.264506,1.661957,4.228907,2.820042,0.459153,4.307456,1.915874,6.609222,-8.326626,3.255095,-2.528510,-9.430363,-9.774246,-5.244269,2.904259,1.444212,-9.030623,0.631783,-0.706425,-8.854585,2.069295,0.203156,9.812039,2.421891,1.885702,4.842163,-7.031910,4.756726,-7.291371,-3.186057,-0.401038,-2.034649,-2.475645,-6.708699,-6.217889,-6.451811,-3.753191,9.950804,-0.536054,-7.170866,9.072284,6.883016,4.093043,-2.800802,6.068207,6.652393,-6.681046,-0.300555,-0.961118,5.769449,0.535163,-0.333836,0.088175,6.980148,6.753480,3.483398,4.943280,-2.658826,2.906099,9.820479,7.568623,-5.390314,-7.984101,-0.499590,-0.308469,6.889284,3.965683,1.088098,5.567168,1.509562,-5.448646,2.689310,9.962965,-6.190441,-5.708448,8.026621,3.576490,-8.714752,-0.124825,-8.458746,-5.629115,-3.108473,2.027851,7.929864,-0.200684,8.262025,3.451472,5.310314,-5.375146,-6.330085,3.682091,-1.640506,1.018491,-5.357665,6.761940,-8.356113,-0.732897,-6.854673,5.299194,2.228771,-2.504990,-5.793984,6.864055,-4.929426,-1.068061,9.394080,0.944900,-0.673321,-6.620196,-7.017195,0.383494,6.681985,-0.780098,0.181355,1.084005,0.029954,-7.510335,-2.491473,4.357802,0.491751,1.879387,0.630080,5.964180,8.946159,-7.424203,3.732917,7.940963,-7.746275,-8.510229,1.445860,-0.626296,5.221234,-5.112595,-9.449590,8.288661,1.609756,-9.204898,3.628453,-4.441514,0.473972,-1.257613,-3.044708,-7.321331,5.409181,3.445828,-8.920127,-8.522576,-3.460806,5.112826,-1.603368,-9.585927,2.365633,0.318341,-9.315140,-0.830706,-3.623661,9.979947,-6.644518,6.562728,-5.405009,-3.270883,-4.479494,4.851948,1.161301,-2.280593,8.277881,-9.964888,8.366804,8.398102,9.705728,-9.810813,-5.431314,9.435792,9.027637,6.292664,8.680861,-2.105677,-8.760553,-0.879434,6.113578,4.180575,2.397274,2.421119,2.737353,4.403730,-3.272503,9.760305,6.775674,1.785434,3.256610,-6.401095,-5.143576,8.212738,-1.848320,2.270380,-6.461768,-2.990251,-4.357411,-0.478468,-4.970954,-9.504083,4.225941,-7.919176,-9.729170,2.984635,-6.671856,-5.628004,9.226019,7.294143,6.476266,9.491505,2.714530,-3.647202,1.265375,-5.432564,-5.546402,7.876558,-7.328817,-1.688551,0.626507,-5.864610,8.028662,7.842961,-1.881959,2.497554,7.612524,3.625776,-2.663452,-9.667426,8.014562,-5.544106,3.821160,0.592597,8.915881,0.257457,-1.785770,-8.900570,-3.630946,-2.689026,-3.040088,0.645742,-9.630637,-4.848404,-3.714914,-9.868541,2.912026,1.078219,-4.587099,-1.010215,-4.367006,6.807735,-8.107451,-9.809439,0.406108,5.876434,-5.159447,9.399252,-3.040328,-7.273286,-5.370027,-0.354977,7.575743,-2.394838,-3.532732,5.087975,-2.132793,4.450074,-9.900305,-9.444058,-5.246153,9.701630,-3.981015,3.153643,-2.065344,4.108097,6.219735,7.989844,5.710708,-9.647568,-9.955365,-3.467931,-1.410201,2.213467,4.328533,-2.853207,-9.745914,9.611079,-5.667929,0.595717,-8.329123,7.347577,-8.550870,-7.540386,9.933558,4.362531,-0.261047,-5.162289,-0.714240,7.436883,3.015345,4.973362,2.303150,-0.564077,-8.252934,-8.754886,-9.296907,-1.135188,-6.044770,-9.554523,5.355304,-8.230650,2.310506,2.818066,-8.426223,-9.233441,-0.561964,9.670437,-5.783916,-9.213985,5.625601,4.039351,-5.405482,-0.870392,-2.470130,-8.942646,2.234898,8.211276,-7.093651,-0.174614,8.501979,-5.501851,-0.412422,1.287380,-1.515975,5.524619,-4.641385,0.099446,-1.199443,-7.594254,3.154791,6.336224,3.310636,9.624961,8.663550,-1.222390,-2.092284,-6.362275,7.373557,3.516764,8.150734,9.770103,4.804082,0.362675,9.041621,-7.723214,-7.578348,7.560476,-1.452615,1.229361,-0.812691,-5.628144,0.330456,0.450984,-5.260683,-8.995920,-9.367183,-9.684942,-2.361734,0.159422,3.228885,-3.050232,9.337774,4.581283,4.186361,4.074651,-1.848922,-5.961916,6.358615,-4.815775,5.028776,5.878423,8.894335,2.969174,3.314464,4.389302,3.859318,5.362337,2.939444,-4.553715,5.589798,-4.270170,-5.990477,9.863666,-6.319911,6.209103,-2.090217,0.483448,-7.497766,-4.068260,-5.993095,-7.240079,8.553291,-9.491844,-7.667911,6.615824,3.967407,-0.983494,9.244969,2.469643,4.384822,8.521370,0.733207,0.825727,9.242408,-3.851684,1.771635,6.191945,-9.319361,1.391558,1.153195,-8.952267,-0.118891,-8.379799,8.827458,-4.286044,-1.310046,-0.316196,-7.802065,-3.972383,6.637136,5.836496,0.034448,-3.010048,3.734985,0.142631,-4.498269,2.934311,-0.497446,-3.796337,0.535890,-2.611150,-6.661774,7.126493,2.374896,4.588026,-8.615067,3.976311,9.702047,8.302736,-7.641979,4.343945,0.979585,0.137512,-1.765286,9.714352,-6.519798,-6.372800,-0.249629,-9.128087,9.696366,3.881766,-6.967997,8.970658,-7.482728,-0.525868,5.409180,1.744168,-9.210930,-4.980579,1.855766,-7.228296,-6.842027,-7.780892,4.526211,-4.504230,-0.330941,-8.820573,-7.121674,0.556088,5.354337,5.576065,0.756015,3.449272,-8.464301,0.569787,5.684799,9.335888,-8.469494,-2.805976,-4.373651,-0.054637,-8.750748,-4.887600,-7.224936,6.790489,0.060231,8.309281,-1.927582,7.254541,-8.177842,-3.626879,-9.322698,1.597740,2.784270,-9.179528,-9.731465,5.565150,-0.488764,-1.005984,7.847492,-3.012000,-4.359431,3.352734,-6.765117,8.285723,3.289105,-2.272732,-3.635892,-5.889650,4.713781,5.460096,0.264516,5.912739,-0.597532,3.054271,9.623861,8.164752,0.675049,-6.340297,3.441710,-2.579641,7.323499,-6.648798,8.545064,-1.263648,-0.757959,-6.966326,-7.373913,7.308055,7.266229,-3.072287,-9.978950,7.081665,-6.977399,8.859992,3.561398,7.087515,-0.302553,-3.870202,-1.401716,-1.887952,1.566939,1.965226,-1.703055,-8.193268,3.388402,9.602605,-2.552701,1.020119,-0.812700,-9.183134,-4.256052,8.779001,-5.015997,-2.224861,-3.745578,4.878602,-8.531660,5.231472,4.183913,-1.664414,-1.450978,-6.607521,-0.835961,0.101811,-5.683181,0.664176,4.368524,1.023725,-9.483100,8.329563,-8.091832,-8.318407,0.975606,-5.434593,-8.127400,9.351131,-1.221731,5.022380,4.144912,6.395959,7.672135,-8.852450,4.039449,-2.773100,-3.047672,-9.993752,-2.560662,3.215813,-9.535053,-6.594873,-2.232770,7.679579,1.839387,-1.164568,-5.529637,-5.020924,-5.458477,-4.188901,-5.345586,1.400196,-5.661800,2.279539,5.597129,-7.738636,-2.594964,-8.165228,-1.999607,1.250370,-9.228440,-2.964098,-2.686418,-8.800837,-0.016976,-1.214166,2.333960,6.543324,-9.000570,-6.067224,9.882441,6.682833,8.060451,-3.851132,-9.015665,8.277996,7.252461,7.869999,-6.227311,-5.457619,-0.873060,5.842762,6.685828,-8.361373,-5.479109,2.962621,9.196388,0.250043,-2.925471,5.280281,-8.231058,2.016666,-9.674175,8.989973,8.221754,8.281218,-1.846279,2.644340,9.111072,6.841520,4.194093,4.500173,-7.739344,5.723880,9.027128,7.535959,-8.098123,0.946841,5.917119,4.878328,4.155187,-9.826386,-9.444212,5.349382,0.736460,8.258665,8.414505,-5.770257,1.775459,-8.932873,-1.137081,-9.465240,-5.753286,6.921849,-9.645515,-4.119118,-8.585971,-4.934702,1.900954,-9.009111,-3.209847,2.617696,4.336139,9.682650,3.377781,7.376353,5.848273,-6.455409,7.521719,0.264094,1.412252,5.350673,2.635131,-9.712178,1.213437,7.399659,-4.316890,4.515941,-2.630121,-7.166430,-6.907601,0.441694,-7.809903,-0.676425,-3.740449,8.870329,5.154388,9.207444,-8.811373,7.439747,-0.646142,-6.046615,4.676929,-4.289509,-8.799381,-3.711808,-2.235855,8.799386,4.484540,1.041160,9.927261,8.550468,8.372088,6.005806,-6.422340,-1.010968,-6.633741,1.196235,-9.127367,3.981153,1.937016,-2.047031,-7.103085,-0.037559,9.133620,3.363750,-6.754993,1.610428,0.138811,-9.825310,-2.443856,-7.881079,5.295179,-7.939885,-7.833942,-8.819625,7.490621,6.919180,-0.219553,-3.458768,0.011902,6.774582,-0.566572,-5.520180,4.357447,-8.327590,0.731471,-2.648214,-1.786960,-2.811756,0.167386,-0.537436,2.919178,-9.989516,5.440635,6.239483,-4.395424,2.058171,-3.334292,-7.429374,-5.870963,6.920966,2.812919,-6.627609,-5.614511,-9.781081,4.169593,0.757132,3.425168,1.486520,-1.339479,3.287229,4.581314,1.378809,-2.773030,2.987444,-0.709375,-2.556058,5.805532,-4.128140,-7.394480,4.726238,2.189200,-5.632145,-3.465361,-1.961673,9.751182,8.746783,-8.445904,-5.323521,-2.845181,4.447280,-3.774425,-4.125909,-2.932452,4.268720,-7.420615,-1.215344,1.867072,-0.538765,-1.611463,-9.368834,-9.790459,-4.227469,6.329990,-6.219113,4.243522,-0.520660,7.607772,4.931048,4.944246,-4.776230,8.659826,-0.342733,-6.979579,-0.724229,4.883674,-5.188000,-1.369147,-4.778595,0.393368,5.395229,-9.971749,-3.853380,-7.228375,8.159833,-5.903334,5.331239,-9.556374,9.048611,-4.970568,-7.127943,-9.366303,-0.166891,2.300403,-0.548500,2.705269,2.816652,-8.017267,3.013242,8.702166,-4.209065,2.360050,6.115844,2.054490,-9.905410,-3.216115,0.528736,2.465354,1.266253,-1.863116,7.506866,4.582787,6.095210,-8.741481,4.245337,5.372639,4.100201,0.183345,1.634459,8.226900,3.767310,-1.519945,9.202303,-3.391154,-5.089804,-3.228489,-6.284355,8.891199,4.325655,-6.013351,8.669398,9.626198,-8.754228,-5.629962,1.187263,9.018499,7.689369,-7.282894,8.763679,-3.691295,1.946988,3.076981,-3.471984,-6.293013,-5.756455,-7.200331,-7.080903,6.111617,7.040896,-0.058012,1.071610,8.495016,1.572777,0.560775,-9.296577,6.156831,7.404576,7.535323,0.946291,3.112928,-8.042200,4.557521,1.647960,-8.984390,-8.064654,-1.103484,-0.289816,5.739735,9.947135,1.640490,-0.361923,7.929590,1.153972,1.228890,-9.844896,8.139618,0.283067,-8.437460,4.793299,6.492485,3.859646,4.564136,9.939223,-7.296744,-1.960671,-4.917696,-7.394314,-0.295099,-8.879496,-9.309306,-5.901461,1.821384,-8.179572,8.107182,-2.878697,-7.974698,-7.610740,-8.725892,-9.414723,-5.133534,-8.418107,7.196763,-5.025606,-6.722140,3.492808,-3.304766,-2.508335,0.829563,7.207929,-0.035149,7.025133,9.873565,7.992830,9.547475,-7.264922,-8.732354,-7.512872,7.166348,5.723582,8.714890,-2.325223,-3.768275,-2.765608,-5.297205,-0.675040,4.074842,2.769342,0.667892,-5.707854,-8.779080,-1.739311,3.552864,-2.900275,-4.916305,5.733911,-9.798743,0.586086,-3.062587,4.040237,3.078731,-8.715552,1.268440,0.076414,-0.553075,-6.148356,9.625285,3.045176,1.423606,3.081000,0.996417,-1.953749,2.216429,-0.580570,8.333699,-9.869414,-3.885189,1.623745,-3.086240,-4.680334,3.763084,7.462857,-4.745372,2.237064,-7.279209,6.616855,5.566741,0.175040,2.013809,2.886743,0.555563,4.438308,-2.259015,-3.787491,6.102228,6.679752,1.318224,5.281024,1.117712,9.878564,-7.716139,4.110018,-1.082799,-3.001832,-3.411352,-8.647485,5.070908,3.551105,2.022306,-7.505423,7.374868,8.947994,-0.228161,-9.689137,8.349113,8.377289,-6.990336,-9.071732,6.435672,-5.698168,-0.499129,-1.118693,-7.049189,0.048125,6.632607,-8.787128,5.109866,2.137467,5.056459,5.181957,5.753946,-3.983152,7.382358,3.058817,7.544102,-3.048859,-7.224443,7.098803,8.913916,-2.934108,-1.879282,7.943514,-4.834465,9.010909,-9.623629,3.261633,2.177677,4.441866,-2.909880,3.828586,-1.338218,5.368466,-2.234730,3.523160,7.681134,-2.734357,-5.513019,4.644314,-8.443911,-1.671634,5.113626,9.230660,7.365822,1.995559,8.061523,2.956777,-8.995415,-4.590524,9.010022,-8.695296,-8.255224,-9.688042,-7.210353,2.674249,-2.637516,3.204230,4.397860,-7.347140,8.479610,-2.883054,1.847158,-7.057622,-6.308498,-6.350442,-2.869662,-6.921737,-2.494348,-8.079213,-7.413087,1.498858,7.950661,-7.424962,2.809299,-7.713319,-2.029015,8.001795,-6.438791,-9.729382,6.936634,4.705070,5.312754,-5.387850,-1.831030,8.092304,-4.314524,-7.979446,7.413146,2.843973,5.710244,-2.299027,-9.446730,1.514196,4.795065,-9.725753,2.080351,0.342443,9.488873,-5.048592,-4.717353,6.103091,-3.210303,-8.269848,-4.921688,9.502727,8.113198,-0.266611,7.645099,9.645840,4.758689,4.331310,9.191653,6.637098,-4.930657,-8.155078,5.447558,-2.934597,6.194173,-4.035543,-8.407121,-0.125885,2.982147,6.222780,-3.719473,2.150064,-4.444134,-7.077181,3.350145,1.187668,2.614079,-7.926142,3.379589,9.941383,-5.393579,-4.283139,3.865582,-7.913373,9.225826,1.745864,-4.452358,8.458653,-5.493571,-3.213992,-1.173612,6.134383,-3.656097,-0.259660,-2.920467,-6.468440,6.686129,8.861544,5.077090,4.894988,-4.185098,7.849189,-3.136128,6.912928,-0.336932,-0.358906,2.101451,9.353168,-3.440205,6.368080,1.525533,9.510872,6.529555,7.780651,-2.061633,6.795641,1.694852,-7.680539,-4.365818,-0.392098,9.825133,6.390337,4.192787,-1.785333,-3.991324,-7.473171,-6.135328,0.390572,0.302496,-4.761157,3.642793,-1.979265,-4.358920,-4.125018,-2.074636,-6.662568,-2.110062,8.255248,-1.401972,7.994296,5.900503,-0.431578,7.237199,9.125295,-3.225834,-8.049698,-1.775961,-3.678321,3.748870,9.387789,-5.817674,-2.302748,6.258066,-2.626580,1.224025,-4.124476,0.226092,-2.635181,-9.157262,2.052822,-1.631018,4.000537,-2.588755,8.919539,-9.920400,-9.679973,-8.058085,0.861107,-2.012996,5.475139,9.714009,-1.345981,-7.346248,7.597676,2.222007,6.026220,5.569057,-5.409603,8.468159,8.889418,-7.634933,-4.967978,-8.522289,-3.428530,4.983403,8.584743,5.711132,3.006865,-8.044171,2.636117,-1.347904,4.440275,4.111154,3.065325,-0.043138,-5.792691,-9.102024,3.972111,0.024069,1.206311,-4.437614,3.909892,3.996243,3.512401,-1.852122,2.386686,-1.457010,-8.959304,-8.959544,-6.384247,-2.747344,6.789976,5.259058,-1.795519,-0.053844,1.939411,-9.644399,-6.600649,0.443334,1.816943,-7.630577,-8.912686,-1.871343,-1.137580,1.982622,8.210192,-3.774315,-6.308083,7.437390,-8.552654,0.158908,-8.512907,-4.359452,8.247482,7.266498,5.202938,4.161715,-0.902663,-6.075229,-1.635184,3.484985,-6.578485,-8.904094,4.319082,8.560038,3.837300,3.044614,-2.105109,-2.974242,4.779198,-4.779187,-3.474691,5.540019,8.089629,7.260247,8.606062,4.016725,-3.430876,-4.045622,-2.296477,7.096382,-3.407299,9.516740,6.860049,-6.618017,7.559470,3.370439,-2.588448,-8.604946,7.563352,8.755705,-8.654355,-5.243853,-9.097972,-5.874096,-7.805001,-3.798249,-0.076355,6.843246,-5.234655,9.290813,-6.409711,1.011014,9.008876,0.064667,1.881932,0.330254,8.980524,9.347080,-7.160587,-2.612255,9.289874,-9.999989,4.175340,5.599796,9.540583,2.958831,-7.360581,9.057629,1.152009,-0.549693,3.248982,-9.604191,9.887962,3.915347,-2.707337,-7.754078,-9.373930,3.219978,-4.700308,7.833357,6.839413,9.660900,3.453349,7.114505,7.606627,-2.568164,4.899781,-7.937926,-5.744601,5.080961,4.959224,-8.407520,-7.116021,3.687844,7.828189,-5.378855,-9.067191,-9.623489,-9.934378,-0.382820,1.208738,5.511916,1.486834,7.261037,5.025313,-8.326537,-8.981660,-1.775398,7.395967,2.414992,1.763227,7.310806,6.027695,1.208579,-4.969668,-6.393240,-9.430090,-9.982416,3.243627,5.000655,-1.177285,6.710455,4.735126,8.137583,-7.513643,6.528605,2.738445,6.065448,-5.227775,-2.167011,-0.851668,-7.030775,-3.315732,-1.735489,-0.708361,-9.163338,-0.190487,9.965358,-2.855850,-0.615216,7.249172,-3.447478,-7.793680], dtype = "float32")#candidate|3093|(2160,)|const|float32
call_3090 = relay.TupleGetItem(func_1053_call(relay.reshape(var_3091.astype('float32'), []), relay.reshape(const_3092.astype('float32'), [480,]), relay.reshape(uop_3057.astype('uint8'), [105,]), relay.reshape(const_3093.astype('float32'), [2160,]), ), 0)
call_3094 = relay.TupleGetItem(func_1059_call(relay.reshape(var_3091.astype('float32'), []), relay.reshape(const_3092.astype('float32'), [480,]), relay.reshape(uop_3057.astype('uint8'), [105,]), relay.reshape(const_3093.astype('float32'), [2160,]), ), 0)
func_622_call = mod.get_global_var('func_622')
func_625_call = mutated_mod.get_global_var('func_625')
call_3096 = relay.TupleGetItem(func_622_call(relay.reshape(const_3093.astype('float32'), [15, 9, 16]), relay.reshape(const_3093.astype('float32'), [15, 9, 16]), ), 0)
call_3097 = relay.TupleGetItem(func_625_call(relay.reshape(const_3093.astype('float32'), [15, 9, 16]), relay.reshape(const_3093.astype('float32'), [15, 9, 16]), ), 0)
func_2065_call = mod.get_global_var('func_2065')
func_2067_call = mutated_mod.get_global_var('func_2067')
call_3101 = func_2065_call()
call_3102 = func_2065_call()
bop_3106 = relay.minimum(bop_3062.astype('float64'), var_3091.astype('float64')) # shape=(7, 5, 3)
bop_3109 = relay.minimum(bop_3065.astype('float64'), var_3091.astype('float64')) # shape=(7, 5, 3)
output = relay.Tuple([call_3073,call_3090,const_3092,const_3093,call_3096,call_3101,bop_3106,])
output2 = relay.Tuple([call_3074,call_3094,const_3092,const_3093,call_3097,call_3102,bop_3109,])
func_3112 = relay.Function([var_3091,], output)
mod['func_3112'] = func_3112
mod = relay.transform.InferType()(mod)
var_3113 = relay.var("var_3113", dtype = "float32", shape = ())#candidate|3113|()|var|float32
output = func_3112(var_3113)
func_3114 = relay.Function([var_3113], output)
mutated_mod['func_3114'] = func_3114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_3161 = relay.TupleGetItem(func_1739_call(), 2)
call_3162 = relay.TupleGetItem(func_1741_call(), 2)
output = relay.Tuple([call_3161,])
output2 = relay.Tuple([call_3162,])
func_3202 = relay.Function([], output)
mod['func_3202'] = func_3202
mod = relay.transform.InferType()(mod)
mutated_mod['func_3202'] = func_3202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3202_call = mutated_mod.get_global_var('func_3202')
call_3203 = func_3202_call()
output = call_3203
func_3204 = relay.Function([], output)
mutated_mod['func_3204'] = func_3204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1824_call = mod.get_global_var('func_1824')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_3211 = relay.TupleGetItem(func_1824_call(), 1)
call_3212 = relay.TupleGetItem(func_1825_call(), 1)
func_993_call = mod.get_global_var('func_993')
func_996_call = mutated_mod.get_global_var('func_996')
var_3216 = relay.var("var_3216", dtype = "float32", shape = (480,))#candidate|3216|(480,)|var|float32
call_3215 = relay.TupleGetItem(func_993_call(relay.reshape(var_3216.astype('float32'), [4, 15, 8])), 3)
call_3217 = relay.TupleGetItem(func_996_call(relay.reshape(var_3216.astype('float32'), [4, 15, 8])), 3)
func_880_call = mod.get_global_var('func_880')
func_885_call = mutated_mod.get_global_var('func_885')
const_3219 = relay.const([6.993947,-6.915981,6.279326,-8.453707,9.245738,3.311114,1.264467,6.907428,-8.992775,2.641194,4.110556,5.458814,-3.627969,-3.598703,7.085460,-6.110317,-9.532785,4.414134,-0.427675,2.180889,5.941173,8.785345,-2.464250,9.828074,-0.201713,-8.385215,-4.663139,8.942791,7.871513,-1.864016,0.950895,-2.220431,8.239315,-3.691645,4.170447,-3.054174,-3.976753,0.247509,-1.920061,0.198218,4.143506,-9.569207,6.783321,-6.289580,-8.310060,-2.336596,-9.654010,0.144902,-4.537798,3.997391,9.595930,-5.905659,6.045536,-2.947378,4.446547,-7.851043,0.213474,-4.369847,1.553783,0.435130,-4.789696,2.404471,-0.307846,-1.716311,-6.768223,-4.804320,6.609775,3.742906,7.792121,8.272093,8.605328,0.958874,-8.316677,-7.746061,3.646640,7.522164,2.009695,-1.275628,0.448489,-8.384164,-2.054736,4.155923,-3.391608,-4.371636,-9.551496,-9.408892,5.392534,-0.031039,7.278471,1.357389,2.987303,-5.430430,-1.197093,-0.748227,-4.998941,0.591614,-4.701029,-8.984332,-3.950519,-3.195074,-6.575260,-3.254564,-2.416881,-8.837327,5.123661,-8.840162,-7.526816,6.629087,5.155693,6.547193,8.375710,-9.344237,4.100949,-2.451924,7.418022,9.749727,7.692459,-0.819499,-0.235374,5.983204,-0.889213,-8.910304,6.105962,7.873189,-1.297657,-3.868634,-6.647726,3.154091,6.601431,6.244558,-0.203549,6.856778,-5.206332,1.158312,-4.179774,1.981713,6.036219,1.130810,5.067250,0.714219,1.013793,3.701608,2.170650,-6.866031,-8.366335,7.814108,-3.569452,-5.644140,-6.332112,4.749988,0.616514,-2.979745,0.858064,2.849331,-9.424332,-4.845151,-6.523840,3.095501,-4.550701,-5.516454,5.082625,3.200974,-1.606851,9.764934,1.333977,8.484237,8.168381,9.543502,-0.063848,1.798707,-2.749178,-2.023456,-4.102491,-8.358366,3.624409,3.149438,-8.781491,-8.211840,5.008538,-5.977385,4.530259,8.533160,8.762209,7.603593,4.284351,-3.952602,-0.333309,-9.614176,9.615443,6.952377,7.971481,6.593054,3.388662,5.703332,7.246608,2.545575,4.114563,9.615848,-7.425692,-0.888526,-7.873122,9.362428,-8.725824,4.610618,-5.830638,-4.293249,6.026903,6.967646,-1.317321,1.850142,-3.764966,-5.481742,1.883613,-8.461187,-0.840752,2.997005,-9.715899,7.685329,-9.315588,-2.462683,1.965758,3.708989,-2.351697,1.696774,4.141673,8.373737,7.738840,5.187551,5.118030,-8.734585,6.144551,-5.257688,-1.438352,-3.926517,-3.224315,4.573098,7.762340,6.006024,-0.014783,-1.394822,3.589170,0.779356,5.588621,-5.692178,0.301426,-9.244030,-1.692737,-9.235628,-1.336207,-9.627872,8.141927,-6.342435,-2.313294,-4.131802,-1.613814,-4.962645,-3.855301,5.217749,-1.043586,4.429390,-0.355621,-5.703294,-6.588104,-0.026011,6.538840,-4.513635,-3.938658,-6.128662,-8.836018,3.063791,0.357847,-2.872827,-7.083623,-6.918161,4.571372,-7.648488,9.977359,9.306677,4.959929,1.061110,-5.117949,5.418292,-0.775780,7.120588,-3.187662,-8.120229,-9.558267,-4.041964,-8.694387,5.834184,-2.220070,3.340905,8.664157,3.602778,-1.220250,0.027804,-8.080337,-9.542175,-2.171345,4.709701,-5.610505,0.097285,4.736517,6.058473,-6.201659,7.801560,-3.877505,-7.463065,5.357111,-4.198451,-8.197220,-6.775746,-0.160652,-6.536029,-5.006250,-1.257269,1.041236,9.269742,3.401576,-2.051441,-7.827343,-4.288450,-4.262574,-8.513196,-0.183149,-6.317559,-8.223104,-9.701440,6.568101,-5.529672,-6.280203,-9.037699,-0.676664,-4.616168,1.159721,3.017853,7.628347,-5.059302,-5.060760,2.545167,-4.189900,-9.880479,3.735829,4.881600,0.310648,-2.504517,-8.936661,9.152270,0.512705,-6.971505,-3.184919,-7.940644,6.851283,9.791300,0.293038,6.469580,-5.078503,-7.349975,-7.519447,-4.006050,1.409850,1.694821,-8.472466,-7.068431,7.385381,-9.409258,-3.791733,0.942390,4.546382,-6.211082,7.836258,-5.763034,0.893372,6.340391,5.421559,8.345050,8.062516,-1.575552,0.419007,6.395907,-3.826327,-5.865211,-9.659512,-7.745372,-2.499111,-5.935007,-9.026957,-6.920396,6.461994,8.099448,2.147960,-6.847996,-6.136807,-3.779971,0.861245,-9.734555,3.123545,3.120457,-4.803181,-1.103177,-5.557694,-2.297820,9.766473,-5.385504,6.015366,3.410550,-1.645002,5.670403,2.685044,-4.724211,6.317972,-5.318100,3.330178,-2.763401,4.536953,-0.702435,6.674807,1.942466,0.637793,3.429599,9.368126,-1.404775,-8.295176,-9.507467,5.628417,3.867788,2.098376,-3.843106,0.561307,-6.829904,8.426372,-9.520195,-2.867625,0.788629,5.115811,-7.549487,-4.591292,-0.081719,-9.196034,-7.756464,6.413790,-3.137533,1.850800,2.668400,8.377969,8.846037,-2.789253,2.513373,9.439351,4.180776,6.759767,-8.244807,-5.445746,3.516536,6.852651,-1.921202,4.856497,-7.854907,5.223781,2.531200,6.537802,6.270441,-2.394596,-4.929407,-6.841657,-0.150423,6.600917,0.595472,1.908867,-0.261890,-7.253850,3.398425,7.887187,-7.125885,5.368091,6.863642,-8.633390,-6.565513,5.451351,5.244217,-9.980218,-0.100210,-3.746292,9.588460,-4.502689,-3.618120,9.319854,-4.466692,9.305454,7.890249,-2.977006,-3.015425,-4.813728,8.702944,2.224741,7.890827,-4.359175,-3.469066,2.202923,-2.408012,4.411176,-6.831845,-4.676919,-1.576242,4.301853,-4.897090,-4.985968,-2.080930,2.898809,9.503411,-9.987474,3.560962,-6.346363,0.692719,2.690933,6.475970,5.377092,9.593151,-6.273316,8.532016,-1.729855,0.927448,-8.868674,8.588067,0.574060,1.741969,8.373635,-3.851126,-9.500573,0.293211,2.180017,-3.616087,-5.098728,-5.486432,7.054764,-0.540191,5.449321,1.803523,0.270492,6.140717,9.838351,6.248691,5.865399,-2.249865,1.232019,-5.321052,-7.846557,0.896858,-8.366224,7.950402,-3.584585,0.435215,9.678951,1.091128,3.501472,5.691393,3.063668,7.756695,-2.081650,-0.461256,2.405960,-7.941790,-2.468957,-0.543273,9.574304,-0.308321,4.285215,2.005485,-7.500483,-3.750182,3.594685,-2.947037,-8.373187,-4.186436,5.790922,-3.989936,9.910775,-4.157151,4.072664,-6.813748,-9.709274,-3.596963,0.844271,-2.879271,-8.328107,7.596628,-4.755722,1.060993,-7.098906,9.466360,-3.845448,-5.512740,-7.639303,8.897449,-0.126407,-5.721171,6.419374,-8.072990,-7.248131,-0.655513,4.089448,7.403227,-0.276053,-1.162077,-8.376820,-1.709652,-5.821963,-9.914208,-1.572908,-3.039053,1.827252,7.150259,4.970184,2.748308,9.048065,-5.455472,-8.776306,-3.322558,-1.510492,5.894062,4.540567,-6.488715,-4.743156,-5.583990,-8.657427,3.368193,-8.618935,-1.597716,5.592527,6.992891,-5.329478,6.012058,0.202939,7.771610,2.785904,-8.980430,-0.425245,-1.151503,9.027134,1.518292,7.432428,-5.628517,-5.178628,3.805760,-2.222058,-3.376021,-6.114614,7.855485,1.523546,-3.227850,1.540508,4.327640,8.393187,2.840379,5.142276,-6.220800,8.743150,-2.013581,-0.998851,0.848511,-8.751667,7.823238,-8.771601,7.397443,5.346180,-7.818881,-9.388157,-7.573867,8.957037,8.740350,0.400296,9.238091,-9.976797,-4.042438,7.794784,0.580600,4.893447,-7.187784,-1.742966,9.773392,6.962190,-7.248867,-5.315385,5.174222,-6.248533,-1.120155,5.069788,5.903081,3.005239,-8.088971,0.352489,-3.029421,-8.347070,-4.776602,-0.378143,-0.851859,4.822734,-2.153103,3.877450,4.636851,-4.310230,5.970882,7.740090,4.726382,-0.619282,6.502075,6.801568,-4.575509,1.373585,-2.018597,4.459930,6.946925,-9.767476,-7.656330,-9.556816,5.458268,2.496112,-7.770018,0.958925,8.810955,2.786804,-8.743923,-3.042483,-8.451673,6.750898,-1.633125,3.145802,-4.788209,5.315215,3.966804,-4.021835,-5.762009,-2.223299,1.111472,-7.344126,5.872531,7.688089,-0.663570,5.730435,1.865470,-3.324614,1.499138,-1.158194,5.692836,-0.417975,4.334369,3.184668,-1.416291,-0.587661,-7.286226,-8.338919,-6.754679,5.458706,5.256568,8.353160,5.469469,-8.124221,9.272528,-3.925258,-3.033043,3.753957,-8.499830,1.015923,-7.681248,-0.207924,-5.085551,5.719320,-7.782156,-2.958993,1.034738,8.759025,8.621754,5.320257,-9.828289,5.643232,-1.213115,-7.619023,4.630815,7.118409,6.059952,-5.581760,-9.392199,-5.526299,-5.497486,-1.986166,-0.230974,0.583490,-9.977986,-8.246729,-0.391371,5.788682,-8.915390,6.867819,-4.180760,-9.775443,-6.658810,8.151388,-4.710196,-2.902279,-4.747993,-3.146435,-6.167454,-2.391414,-4.626402,8.356923,-9.476980,3.865298,-7.453816,0.136196,9.138045,-5.178457,-3.810146,-9.330404,8.940382,-8.866224,5.809459,-5.417708,-1.574820,-9.344890,6.592788,9.723870,0.319729,-8.972741,-7.653486,-2.028404,3.863148,9.140569,-9.120060,-4.022120,-1.716454,-1.779220,7.981010,1.051353,1.437486,-2.000933,3.388917,8.937581,-6.560736,-4.662916,5.598852,-8.059909,5.220487,-0.195189,4.383710,5.028462,0.943395,-7.021331,-1.970038,-5.115418,6.528891,-0.568129,7.448007,2.134104,-1.204950,-8.362253,-4.376366,-4.797447,-1.361405,-5.094951,-2.496964,-4.514471,1.227252,-5.521524,-9.783824,5.538868,-5.215882,6.434985,3.699946,0.016331,-1.005935,3.733026,3.592025,0.486905,6.785707,0.428834,1.389807,3.653164,-8.849315,0.916997,4.229255,9.272614,-4.908005,9.981231,1.005406,2.963640,-7.963540,5.139070,5.316287,5.994549,-1.234099,-9.894593,-6.097358,-1.783601,4.023522,-4.202023,-3.294312,-9.042843,-6.293657,3.379067,5.603503,3.460203,9.515751,5.742742,3.710696,7.248220,1.709315,-5.904958,-1.876868,6.042403,-3.507349,-5.704687,5.986931,4.302331,-2.931341,2.841317,-3.525611,8.552550,2.651576,-8.910502,6.863737,-0.489342,7.302106,1.191311,6.439886,9.736970,-1.178531,7.383432,8.751811,7.764508,8.729527,4.800266,1.958069,5.431680,1.374115,-6.005034,-8.454581,9.774085,4.472386,8.117681,3.223173,-6.717610,-8.539902,7.705253,-6.216919,0.504887,-5.589480,8.608331,1.803517,-3.626257,-0.145789,6.561804,-5.133104,-5.899510,1.058770,-6.800178,5.362629,-0.260049,-5.446041,8.815885,-0.716077,-8.561800,1.951504,4.639660,5.906293,8.393634,-4.653980,-3.013013,5.037253,-2.300011,-2.678064,-2.448686,5.851310,3.825804,-4.987255,-7.328937,1.185543,7.447598,4.694852,6.091003,2.400221,-8.154414,0.398523,-9.373656,-7.416488,-1.040773,4.940184,-8.391420,4.307238,7.690787,-1.030787,1.924348,-2.426179,-7.532207,5.945838,-9.165250,-7.901542,-2.999713,2.508299,-3.613875,7.517859,-6.186075,9.445305,4.415249,-5.443252,1.267857,-1.595139,-2.660918,5.332252,-8.863893,-9.076187,9.583819,-9.803071,2.818609,-0.275286,1.558012,-0.071379,4.567186,-5.766365,-4.778161,9.822541,8.951242,-5.794966,-9.103112,-2.240581,-1.934979,-1.713057,5.987364,6.721809,-9.730005,-8.970933,4.443069,-2.372290,1.042188,6.874505,0.586954,3.963764,2.166342,1.245598,2.935362,-2.646506,-6.207937,-8.528833,6.974911,-7.965346,2.345718,0.702079,4.937420,5.870979,-7.025731,1.856811,3.775196,-1.843413,-5.486277,5.345638,9.963287,-7.495017,-6.682938,6.029066,-6.023677,8.291975,7.424617,4.083151,-1.422623,4.520117,5.509444,4.857484,9.475090,7.146292,7.606260,2.602426,2.597870,-5.237687,-7.379990,0.292961,-0.645152,5.229977,-0.969543,-5.503543,9.710749,6.900465,-1.923376,-5.994696,9.501466,-5.038718,-1.865405,9.692581,6.880152,7.916454,-1.717743,-2.476367,4.572248,-3.425157,-0.108204,2.101449,-9.979884,2.601832,7.761989,-9.371252,0.465567,5.675772,-6.157790,4.424174,-2.892523,-8.290982,-0.858975,5.267216,-2.065627,7.970365,4.444573,-2.597771,5.431434,-6.709282,2.701699,7.612758,7.704738,-1.125382,-5.336011,8.329340,-6.788168,4.925119,8.316993,6.128387,-6.994912,-9.293720,0.481065,4.091045,-2.725768,7.385761,-3.250873,8.022241,3.931529,4.500329,2.072605,-4.322305,-7.640501,-3.018240,7.242237,8.967251,-4.991952,6.372264,1.278339,1.394132,-1.807993,6.923426,1.301788,4.926450,6.971922,-0.579670,4.575771,-7.280333,-9.751692,6.331970,-0.394498,8.098786,2.082810,-3.629990,1.469572,-7.190486,-3.298335,-6.634539,-8.730288,-1.611664,4.154470,6.837204,-6.306761,-9.566085,-7.568363,-4.786247,9.452589,-7.136209,-6.436323,1.973671,-6.285817,2.607219,9.591369,-9.987960,3.830122,0.154257,-4.431421,-0.013979,9.530977,5.698942,-3.672669,-8.192814,-7.885410,-8.906667,-5.818024,-0.839161,-0.676037,6.037702,-5.170317,0.523018,5.973170,-9.160494,2.938415,-0.428200,3.954044,7.071809,2.066942,0.056676,-5.069519,-4.193424,7.504874,7.851913,-8.821156,-3.895777,-2.389193,4.165285,-8.814754,1.545311,-6.599241,-8.916354,-3.938371,9.754966,-6.245597,6.583896,0.806547,7.078997,-2.367883,-0.930335,0.570802,2.092362,-1.153504,5.119103,-7.573138,2.897559,-2.218394,7.556140,9.725052,-6.696869,7.242025,-3.836748,9.007460,-8.187422,-3.550527,9.717325,9.749678,2.602420,7.508136,-1.681816,-2.883113,-0.167025,-0.506587,5.154189,-6.995695,8.238720,7.621120,-7.024645,6.278550,-6.726412,6.311511,8.404166,0.650512,2.131366,-7.978510,-0.976182,9.225331,5.773831,-2.437172,3.620310,8.653722,3.642910,-6.645785,1.158571,-5.304702,8.807725,2.183793,-1.124359,2.721661,4.638341,0.952545,-1.980468,-2.239694,-6.504076,-5.696006,-4.680471,-7.620855,-8.747503,5.381650,-4.473593,-4.722102,-8.984394,7.898546,-2.166013,-9.075676,-7.154040,8.652581,-0.558553,-7.196539,2.417223,-1.089172,-7.076170,8.539092,2.764308,7.710743,-3.829042,4.238570,0.698294,9.076327,7.173786,-5.974744,8.629753,1.863721,4.216235,8.671312,-3.604994,-5.175723,-2.085870,-2.946316,6.523270,-4.177190,2.184664,-1.116780,-0.780486,-3.387876,0.977583,2.361009,-0.738187,-8.672807,-6.220571,-3.557263,3.631035,-6.825860,-1.567299,2.292482,-0.723277,7.095237,3.427422,-6.726855,3.949088,8.837428,7.541876,-0.458188,9.220035,-9.143368,-9.794094,0.937664,6.950735,2.868000,-6.395374,0.498878,-1.811611,-3.483603,-0.914032,5.596579,9.396253,-0.769463,6.496120,-3.656939,3.950457,5.106334,-1.943213,3.644442,-8.399418,2.383667,9.683095,8.375987,-3.546212,8.971005,-1.439243,-9.890550,-8.626051,3.731234,2.070839,-4.976185,-9.158341,-5.215945,-3.866680,-9.019801,7.844276,1.366821,2.183190,-0.769875,-8.670380,-4.016705,4.081661,-2.907576,-0.730028,8.487396,-7.489883,-8.747501,3.673169,9.493757,6.673182,-8.989083,6.008487,4.686352,-6.904910,-6.465997,-4.967641,-1.063318,-9.124706,3.418962,-7.730320,-5.803625,-8.045266,6.989469,-8.959257,-0.448304,-1.908283,-6.787831,-7.062145,-3.526584,7.917647,-0.381366,-7.054740,8.882653,3.655276,9.841269,-1.049484,-5.785288,-2.007982,-2.903074,-2.879782,-9.168121,-1.652793,8.282587,9.004448,7.456429,-8.530751,-7.763708,-4.690544,6.219628,-3.744292,4.180267,0.894131,2.413904,5.465995,-5.540336,-2.640989,1.528765,9.367267,-7.181975,-2.581893,1.964958,8.915290,2.790621,-4.397755,2.866462,5.094829,4.380236,3.835838,5.900808,-0.670079,-6.491481,-5.619435,2.047612,-9.583694,-1.436854,-9.290718,-2.647210,3.076167,1.357639,-8.038750,-1.889424,-3.730611,-6.573947,2.115200,-9.642555,3.575226,-8.036138,-5.702784,6.647534,7.962196,-0.473673,-6.973995,4.582554,-0.294199,8.388440,-3.449954,2.743636,2.139094,-3.387199,7.283120,-1.129374,3.214332,-7.879521,1.056803,9.136874,-2.898129,-2.293623,-6.353356,-1.785562,-8.018459,7.201384,-5.918278,2.279040,3.520249,-7.070951,5.600823,3.426900,1.678674,-9.751201,-5.620157,-9.740958,0.976841,3.261208,-2.970492,9.201356,3.319296,1.540094,0.567365,4.717454,-8.651322,4.411163,-6.369215,6.457989,-3.846584,-0.735376,5.490089,9.337519,6.943532,-9.815636,9.874975,4.168714,-4.981478,-6.129640,7.683354,-7.118933,6.591662,1.880619,7.196363,3.536319,1.181291,-8.433979,-2.832528,9.787734,-7.390924,-8.745664,7.777607,-4.956246,-0.969157,9.654889,-4.315580,-0.041778,5.176396,1.056795,-3.424414,2.058338,9.744928,-1.282929,7.431625,0.226008,5.214888,5.382213,2.684640,-6.929435,-2.792196,-3.002007,-3.792442,-6.949383,-1.844429,-9.506668,0.694857,-6.694324,8.397470,-5.767263,3.395827,-9.495845,8.759830,6.028872,2.454204,7.754082,-5.709827,-0.171694,-2.825612,-5.107187,-2.587750,4.953223,-8.305603,-1.065836,-3.191587,8.541743,0.695326,-2.382719,0.179464,6.377597,1.506300,6.954072,-8.810607,-3.558625,-1.597208,-8.323436,3.769987,-0.145273,5.274088,6.496685,-8.769351,9.404707,-1.764196,-9.990179,-7.565197,-0.484862,-1.087269,3.166052,3.967902,5.063953,-9.566280,2.107512,9.800983,-0.134287,-3.458755,-0.947534,-0.708512,-6.747555,7.540581,-9.037566,3.173608,-5.390873,-5.772198,-4.838302,9.324363,-3.719805,5.889950,-4.633296,5.578473,-3.102817,-8.209592,-1.031603,-9.892339,-8.156275,-2.953584,6.833965,1.071263,9.438703,3.741945,-9.124455,-4.666992,0.306695,-2.574073,-7.291828,-1.670605,4.822348,-1.249167,4.531490,4.574011,-3.952474,-5.661916,8.278295,8.952993,-3.766157,-9.853734,-8.679887,4.110981,4.596924,7.329861,3.020338,-1.394016,-2.126814,1.773069,8.234169,3.146281,-9.472860,-2.609033,-7.399572,-1.112979,-6.058432,5.334417,0.475363,-9.243552,-6.470886,9.177369,7.272612,-0.935361,-7.437473,4.609499,-2.273783,8.568420,1.925824,-9.630678,-7.206917,-9.137932,-5.269692,9.014414,-2.187037,-1.998374,7.633683,-8.334057,6.040262,-4.750535,-7.319874,0.934541,7.722721,7.821685,-1.051657,-5.619197,4.148906,-0.947253,-7.791937,0.653117,5.952351,1.126775,8.888882,-5.033032,-9.162620,-0.143555,-6.665056,-7.497081,3.196659,-2.033129,3.595777,-7.370502,0.506853,-7.866826,-0.259666,-1.737928,2.328611,-9.266606,-2.750736,4.508605,9.217364,8.741285,-0.673185,1.043164,-4.195546,4.797362,-1.139461,-3.846985,-6.960828,8.163889,-9.211297,4.473465,1.514031,3.303179,-9.463472,2.685350,-2.532343,3.254672,-6.781710,-3.050207,9.361699,-7.045163,6.279853,7.848007,-4.817180,-8.011269,5.749886,-6.596101,1.293466,-5.316220,3.789065,-9.840643,-9.167793,-0.944427,-2.163392,9.700021,-6.562646,-6.575827,-8.759673,-1.002257,-5.518429,-9.112423,-4.160972,9.144155,-6.611759,2.516747,9.633258,1.944317,9.481294,-2.601729,5.268407,5.206233,7.809612,2.325400,-6.153220,-2.202913,9.769606,-3.712737,-7.920348,9.334027,0.851419,-2.948565,-6.556402,-7.799989,7.261490,-2.166494,4.172874,-5.288953,1.273672,-1.598829,5.493451,-4.258115,7.262413,-0.518897,-2.866599,-1.070666,-4.746146,-3.533602,5.901275,3.293740,6.235949,4.049805,8.382543,-7.122490,0.510470,-8.500060,7.647594,8.565469,8.233079,-5.004984,-5.817029,7.298140,7.363317,1.826801,2.420600,4.786531,-4.922888,5.104767,5.275017,-4.335082,-1.475382,2.892062,-2.611379,6.712595,6.198923,4.886430,-7.200680,-3.555387,4.395671,-5.790149,-6.372274,5.444041,-2.443043,3.478521,-8.064518,5.035284,-6.088178,2.968289,7.070888,6.421249,-8.111765,-2.872222,5.049904,1.496801,9.608103,1.922040,2.819269,-2.413968,1.235322,6.178849,-1.692421,3.105844,-0.538411,5.190962,6.035928,-2.776325,4.075172,-5.568793,5.423419,0.708908,-9.358436,0.084526,-8.617911,8.455817,4.478717,5.653007,1.241270,-8.286892,0.826688,-0.879426,-1.642348,5.780436,0.673187,7.943311,0.443778,1.678210,1.674644,6.098278,1.463416,-5.664302,-8.869894,-2.887296,-5.837282,3.343785,-0.645704,-0.224916,-3.344115,-4.463171,9.705995,-4.083220,9.841849,-7.629212,-0.566089,-0.652046,4.149475,-2.244378,-2.470649,1.675688,-1.059761,6.820231,-1.823707,1.821600,5.510972,6.635918,1.590790,5.304563,6.184120,-1.252622,1.925416,8.557246,7.128150,-5.611669,-8.584301,-8.491905,-7.557631,7.620234,0.444131,3.473200,7.244316,7.608357,4.398694,0.896372,9.012589,-7.843544,-5.175169,7.752319,-5.429475,8.984371,9.778297,6.805580,1.362859,0.525129,3.032158,7.684511,7.024286,-0.763357,1.128514,0.854161,9.200212,-4.594075,-1.082272,4.579017,7.739638,7.214437,-7.811563,1.230606,-5.346534,-0.468681,9.041105,-2.964232,-9.335532,0.080785,-9.850589,-8.307281,0.067425,8.354252,-0.615157,-7.865692,0.675104,1.992867,-0.629130,-8.576587,3.590378,-4.027043,-6.834761,3.730489,4.553183,8.839404,6.760739,1.844561,-3.659908,-0.268801,8.380351,-0.425087,4.349548,-7.943725,-8.101364,-8.674548,7.947941,0.259462,7.674459,2.277371,5.978174,-5.287375,-6.392234,8.897164,-0.531194,-9.095380,-9.780344,-7.717540,-6.192031,6.536155,0.557268,-4.448495,8.122436,2.038533,-5.875655,7.747990,5.420962,-4.294385,-5.978643,-2.007390,-3.020321,-4.415766,0.640832,-0.721714,-5.667083,1.801345,8.579042,-0.942487,9.262478,6.816879,-4.852719,9.755658,-0.432328,-1.894158,-8.786796,6.613915,0.626921,9.792580,-8.145291,-9.020693,-4.765683,7.080038,6.327910,-5.658099,9.110637,-1.669930,-6.752066,1.202927,0.380837,7.504890,-2.074928,-5.620140,5.977048,-2.230764,1.783184,-7.330942,-5.542896,6.112744,8.503543,-6.987255,9.738802,4.405941,6.054333,-0.866331,-2.022668,-7.720639,-2.742328,-5.721774,-9.639093,-9.391837,0.259642,4.621348,-6.212499,6.702223,-5.372675,-2.271173,-5.420504,-6.735528,-0.356330,-5.414561,-5.247626,2.826684,-7.718992,-4.323001,-2.408038,-2.751782,1.326611,-7.772875,3.002398,-1.208313,2.479030,9.448285,-0.639014,8.778198,8.590411,2.859810,-0.088998,-8.990761,-1.976154,-8.989737,3.700126,-3.396586,-5.928532,-6.225290,-6.151620,-1.718505,5.109505,7.634499,0.918717,-4.062075,-6.950280,-7.419493,-2.821788,0.886231,-9.434585,-0.244948,1.846291,-8.297660,7.646007,2.235049,7.597797,6.212194,3.254648,-2.409532,-5.087298,8.849767,-6.200248,3.582008,2.446106,3.895887,-1.001228,0.428763,-3.393469,-6.276395,7.814181,1.272137,8.574857,5.555858,5.505967,9.858679,6.168638,6.601194,-7.966947,-7.110218,1.873123,7.372713,2.924020,8.029508,3.736413,5.650005,0.735783,1.928948,-9.175303,-1.441026,5.886305,0.174437,-5.069033,-3.174007,8.206710,-0.629517,8.695133,6.358172,1.566045,-4.258046,-9.027657,4.268915,0.599928,-3.717638,2.825346,8.497201,-6.889147,0.584669,5.180679,8.195903,7.946586,-0.005260,-7.648954,6.696491,-9.184513,-6.592804,-6.778369,8.684963,-3.711990,3.278515,-0.175977,-8.904707,2.386022,8.151121], dtype = "float32")#candidate|3219|(2160,)|const|float32
call_3218 = relay.TupleGetItem(func_880_call(relay.reshape(call_3211.astype('uint8'), [7, 5, 3]), relay.reshape(call_3211.astype('uint8'), [7, 5, 3]), relay.reshape(const_3219.astype('float32'), [15, 9, 16]), ), 3)
call_3220 = relay.TupleGetItem(func_885_call(relay.reshape(call_3211.astype('uint8'), [7, 5, 3]), relay.reshape(call_3211.astype('uint8'), [7, 5, 3]), relay.reshape(const_3219.astype('float32'), [15, 9, 16]), ), 3)
output = relay.Tuple([call_3211,call_3215,var_3216,call_3218,const_3219,])
output2 = relay.Tuple([call_3212,call_3217,var_3216,call_3220,const_3219,])
func_3230 = relay.Function([var_3216,], output)
mod['func_3230'] = func_3230
mod = relay.transform.InferType()(mod)
var_3231 = relay.var("var_3231", dtype = "float32", shape = (480,))#candidate|3231|(480,)|var|float32
output = func_3230(var_3231)
func_3232 = relay.Function([var_3231], output)
mutated_mod['func_3232'] = func_3232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1824_call = mod.get_global_var('func_1824')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_3257 = relay.TupleGetItem(func_1824_call(), 0)
call_3258 = relay.TupleGetItem(func_1825_call(), 0)
const_3259 = relay.const([[[7.521219,7.349597,3.353814],[2.739014,-1.177700,-8.911808],[2.210473,8.790166,-7.580025],[8.928156,-6.258901,-7.758841],[-7.821459,-8.446722,-5.407433]],[[-1.441222,-2.034724,6.119121],[-7.124190,-4.306244,-1.020089],[6.455487,-9.613869,-2.484726],[-0.098998,-2.651043,7.507975],[5.655965,-2.316297,8.176315]],[[1.239903,1.855425,4.592797],[3.470301,8.986008,0.328064],[-7.601647,3.202097,4.263051],[1.257746,4.674703,-8.549116],[5.135566,-7.775369,-7.547183]],[[-7.595969,7.242222,1.353469],[-0.941185,-5.187741,9.508738],[2.485703,7.818077,-3.849618],[3.168073,-3.152924,4.087943],[5.792447,-8.070569,6.816019]],[[-9.894172,3.950696,4.725508],[-1.804362,8.263060,9.411242],[-2.297908,1.627684,-5.453462],[-3.532389,6.227056,-1.915662],[-2.278572,0.648854,-9.088372]],[[3.291399,-7.035774,-7.660900],[7.217766,-1.457196,-3.424770],[4.698041,-6.617882,-2.529360],[-6.335636,-1.826781,1.654391],[0.794321,3.291035,-5.568398]],[[7.833618,-6.314673,-2.085753],[2.538831,0.687920,9.916502],[5.345532,4.083395,6.966414],[-8.569413,-0.795249,5.358180],[-0.987733,5.555161,-7.452472]]], dtype = "float64")#candidate|3259|(7, 5, 3)|const|float64
bop_3260 = relay.right_shift(call_3257.astype('uint16'), relay.reshape(const_3259.astype('uint16'), relay.shape_of(call_3257))) # shape=(7, 5, 3)
bop_3263 = relay.right_shift(call_3258.astype('uint16'), relay.reshape(const_3259.astype('uint16'), relay.shape_of(call_3258))) # shape=(7, 5, 3)
output = bop_3260
output2 = bop_3263
func_3268 = relay.Function([], output)
mod['func_3268'] = func_3268
mod = relay.transform.InferType()(mod)
output = func_3268()
func_3269 = relay.Function([], output)
mutated_mod['func_3269'] = func_3269
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3318 = relay.var("var_3318", dtype = "float64", shape = (14, 2, 13))#candidate|3318|(14, 2, 13)|var|float64
uop_3319 = relay.asin(var_3318.astype('float64')) # shape=(14, 2, 13)
output = relay.Tuple([uop_3319,])
output2 = relay.Tuple([uop_3319,])
func_3328 = relay.Function([var_3318,], output)
mod['func_3328'] = func_3328
mod = relay.transform.InferType()(mod)
mutated_mod['func_3328'] = func_3328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3329 = relay.var("var_3329", dtype = "float64", shape = (14, 2, 13))#candidate|3329|(14, 2, 13)|var|float64
func_3328_call = mutated_mod.get_global_var('func_3328')
call_3330 = func_3328_call(var_3329)
output = call_3330
func_3331 = relay.Function([var_3329], output)
mutated_mod['func_3331'] = func_3331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3353 = relay.var("var_3353", dtype = "float32", shape = (16, 1, 2))#candidate|3353|(16, 1, 2)|var|float32
uop_3354 = relay.tan(var_3353.astype('float32')) # shape=(16, 1, 2)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_3363 = relay.TupleGetItem(func_3202_call(), 0)
call_3364 = relay.TupleGetItem(func_3204_call(), 0)
func_2138_call = mod.get_global_var('func_2138')
func_2140_call = mutated_mod.get_global_var('func_2140')
call_3365 = func_2138_call()
call_3366 = func_2138_call()
output = relay.Tuple([uop_3354,call_3363,call_3365,])
output2 = relay.Tuple([uop_3354,call_3364,call_3366,])
func_3367 = relay.Function([var_3353,], output)
mod['func_3367'] = func_3367
mod = relay.transform.InferType()(mod)
var_3368 = relay.var("var_3368", dtype = "float32", shape = (16, 1, 2))#candidate|3368|(16, 1, 2)|var|float32
output = func_3367(var_3368)
func_3369 = relay.Function([var_3368], output)
mutated_mod['func_3369'] = func_3369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2614_call = mod.get_global_var('func_2614')
func_2616_call = mutated_mod.get_global_var('func_2616')
call_3382 = relay.TupleGetItem(func_2614_call(), 0)
call_3383 = relay.TupleGetItem(func_2616_call(), 0)
func_2743_call = mod.get_global_var('func_2743')
func_2748_call = mutated_mod.get_global_var('func_2748')
var_3388 = relay.var("var_3388", dtype = "uint16", shape = (375,))#candidate|3388|(375,)|var|uint16
var_3389 = relay.var("var_3389", dtype = "float32", shape = (2160,))#candidate|3389|(2160,)|var|float32
call_3387 = relay.TupleGetItem(func_2743_call(relay.reshape(var_3388.astype('uint16'), [5, 15, 5]), relay.reshape(var_3388.astype('uint16'), [5, 15, 5]), relay.reshape(call_3382.astype('uint8'), [105,]), relay.reshape(var_3389.astype('float32'), [2160,]), ), 0)
call_3390 = relay.TupleGetItem(func_2748_call(relay.reshape(var_3388.astype('uint16'), [5, 15, 5]), relay.reshape(var_3388.astype('uint16'), [5, 15, 5]), relay.reshape(call_3382.astype('uint8'), [105,]), relay.reshape(var_3389.astype('float32'), [2160,]), ), 0)
uop_3397 = relay.erf(var_3389.astype('float32')) # shape=(2160,)
output = relay.Tuple([call_3382,call_3387,var_3388,uop_3397,])
output2 = relay.Tuple([call_3383,call_3390,var_3388,uop_3397,])
func_3401 = relay.Function([var_3388,var_3389,], output)
mod['func_3401'] = func_3401
mod = relay.transform.InferType()(mod)
var_3402 = relay.var("var_3402", dtype = "uint16", shape = (375,))#candidate|3402|(375,)|var|uint16
var_3403 = relay.var("var_3403", dtype = "float32", shape = (2160,))#candidate|3403|(2160,)|var|float32
output = func_3401(var_3402,var_3403,)
func_3404 = relay.Function([var_3402,var_3403,], output)
mutated_mod['func_3404'] = func_3404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3419 = relay.var("var_3419", dtype = "float64", shape = (1, 16, 12))#candidate|3419|(1, 16, 12)|var|float64
uop_3420 = relay.log2(var_3419.astype('float64')) # shape=(1, 16, 12)
var_3441 = relay.var("var_3441", dtype = "float64", shape = (14, 16, 12))#candidate|3441|(14, 16, 12)|var|float64
bop_3442 = relay.bitwise_xor(uop_3420.astype('int32'), var_3441.astype('int32')) # shape=(14, 16, 12)
bop_3446 = relay.divide(uop_3420.astype('float64'), bop_3442.astype('float64')) # shape=(14, 16, 12)
uop_3460 = relay.atan(bop_3446.astype('float64')) # shape=(14, 16, 12)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
const_3463 = relay.const([[False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,True,False,True,False]], dtype = "bool")#candidate|3463|(1, 135)|const|bool
call_3462 = relay.TupleGetItem(func_76_call(relay.reshape(const_3463.astype('bool'), [3, 9, 5]), relay.reshape(const_3463.astype('bool'), [3, 9, 5]), ), 0)
call_3464 = relay.TupleGetItem(func_79_call(relay.reshape(const_3463.astype('bool'), [3, 9, 5]), relay.reshape(const_3463.astype('bool'), [3, 9, 5]), ), 0)
bop_3470 = relay.equal(uop_3420.astype('bool'), bop_3446.astype('bool')) # shape=(14, 16, 12)
bop_3473 = relay.bitwise_or(uop_3460.astype('uint64'), relay.reshape(bop_3470.astype('uint64'), relay.shape_of(uop_3460))) # shape=(14, 16, 12)
func_3328_call = mod.get_global_var('func_3328')
func_3331_call = mutated_mod.get_global_var('func_3331')
var_3479 = relay.var("var_3479", dtype = "float64", shape = (364,))#candidate|3479|(364,)|var|float64
call_3478 = relay.TupleGetItem(func_3328_call(relay.reshape(var_3479.astype('float64'), [14, 2, 13])), 0)
call_3480 = relay.TupleGetItem(func_3331_call(relay.reshape(var_3479.astype('float64'), [14, 2, 13])), 0)
bop_3481 = relay.floor_divide(uop_3460.astype('float32'), relay.reshape(var_3441.astype('float32'), relay.shape_of(uop_3460))) # shape=(14, 16, 12)
func_2186_call = mod.get_global_var('func_2186')
func_2190_call = mutated_mod.get_global_var('func_2190')
var_3485 = relay.var("var_3485", dtype = "uint32", shape = (84,))#candidate|3485|(84,)|var|uint32
call_3484 = relay.TupleGetItem(func_2186_call(relay.reshape(var_3485.astype('uint32'), [4, 7, 3]), relay.reshape(var_3485.astype('uint32'), [4, 7, 3]), ), 0)
call_3486 = relay.TupleGetItem(func_2190_call(relay.reshape(var_3485.astype('uint32'), [4, 7, 3]), relay.reshape(var_3485.astype('uint32'), [4, 7, 3]), ), 0)
output = relay.Tuple([call_3462,const_3463,bop_3473,call_3478,var_3479,bop_3481,call_3484,var_3485,])
output2 = relay.Tuple([call_3464,const_3463,bop_3473,call_3480,var_3479,bop_3481,call_3486,var_3485,])
func_3487 = relay.Function([var_3419,var_3441,var_3479,var_3485,], output)
mod['func_3487'] = func_3487
mod = relay.transform.InferType()(mod)
var_3488 = relay.var("var_3488", dtype = "float64", shape = (1, 16, 12))#candidate|3488|(1, 16, 12)|var|float64
var_3489 = relay.var("var_3489", dtype = "float64", shape = (14, 16, 12))#candidate|3489|(14, 16, 12)|var|float64
var_3490 = relay.var("var_3490", dtype = "float64", shape = (364,))#candidate|3490|(364,)|var|float64
var_3491 = relay.var("var_3491", dtype = "uint32", shape = (84,))#candidate|3491|(84,)|var|uint32
output = func_3487(var_3488,var_3489,var_3490,var_3491,)
func_3492 = relay.Function([var_3488,var_3489,var_3490,var_3491,], output)
mutated_mod['func_3492'] = func_3492
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3592 = relay.const([[[6.863815,-9.917710,2.236884],[7.149476,-0.285778,6.611395]],[[3.480694,1.350956,5.909137],[-8.905529,7.734437,-7.048329]],[[-9.068271,9.478658,1.669527],[1.278308,7.724973,-1.504874]],[[-0.368004,6.143617,-9.881999],[5.798413,7.072706,-6.373137]],[[-9.418130,-6.809321,-1.173200],[1.602817,5.285872,-9.866594]],[[4.486906,2.126780,0.347444],[1.977059,9.692736,1.611466]],[[-7.250935,7.087028,8.967131],[-4.963128,-2.243675,-6.433372]],[[3.338721,-6.939072,-8.467371],[6.235785,-7.913236,-7.197622]],[[2.635585,0.185408,0.958778],[-0.761677,1.631037,7.693364]],[[1.808945,3.770117,-7.326771],[-4.347150,4.250954,-1.455592]],[[2.529576,-7.039681,-9.075348],[-5.908277,-6.735829,-1.441209]],[[-6.741408,3.544515,-3.797405],[-4.623844,-9.020406,5.182167]],[[5.941436,-8.951574,-0.752142],[1.764984,8.648300,3.906877]],[[-4.136394,7.326893,2.941235],[-0.204010,-5.167678,-6.078342]]], dtype = "float32")#candidate|3592|(14, 2, 3)|const|float32
uop_3593 = relay.acosh(const_3592.astype('float32')) # shape=(14, 2, 3)
output = relay.Tuple([uop_3593,])
output2 = relay.Tuple([uop_3593,])
func_3595 = relay.Function([], output)
mod['func_3595'] = func_3595
mod = relay.transform.InferType()(mod)
mutated_mod['func_3595'] = func_3595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3595_call = mutated_mod.get_global_var('func_3595')
call_3596 = func_3595_call()
output = call_3596
func_3597 = relay.Function([], output)
mutated_mod['func_3597'] = func_3597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3600 = relay.var("var_3600", dtype = "bool", shape = (6, 2, 10))#candidate|3600|(6, 2, 10)|var|bool
var_3601 = relay.var("var_3601", dtype = "bool", shape = (6, 2, 10))#candidate|3601|(6, 2, 10)|var|bool
bop_3602 = relay.logical_and(var_3600.astype('bool'), relay.reshape(var_3601.astype('bool'), relay.shape_of(var_3600))) # shape=(6, 2, 10)
var_3611 = relay.var("var_3611", dtype = "bool", shape = (6, 2, 10))#candidate|3611|(6, 2, 10)|var|bool
bop_3612 = relay.greater_equal(var_3600.astype('bool'), relay.reshape(var_3611.astype('bool'), relay.shape_of(var_3600))) # shape=(6, 2, 10)
output = relay.Tuple([bop_3602,bop_3612,])
output2 = relay.Tuple([bop_3602,bop_3612,])
func_3621 = relay.Function([var_3600,var_3601,var_3611,], output)
mod['func_3621'] = func_3621
mod = relay.transform.InferType()(mod)
var_3622 = relay.var("var_3622", dtype = "bool", shape = (6, 2, 10))#candidate|3622|(6, 2, 10)|var|bool
var_3623 = relay.var("var_3623", dtype = "bool", shape = (6, 2, 10))#candidate|3623|(6, 2, 10)|var|bool
var_3624 = relay.var("var_3624", dtype = "bool", shape = (6, 2, 10))#candidate|3624|(6, 2, 10)|var|bool
output = func_3621(var_3622,var_3623,var_3624,)
func_3625 = relay.Function([var_3622,var_3623,var_3624,], output)
mutated_mod['func_3625'] = func_3625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1789_call = mod.get_global_var('func_1789')
func_1790_call = mutated_mod.get_global_var('func_1790')
call_3641 = relay.TupleGetItem(func_1789_call(), 0)
call_3642 = relay.TupleGetItem(func_1790_call(), 0)
output = call_3641
output2 = call_3642
func_3643 = relay.Function([], output)
mod['func_3643'] = func_3643
mod = relay.transform.InferType()(mod)
output = func_3643()
func_3644 = relay.Function([], output)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3681 = relay.var("var_3681", dtype = "float32", shape = ())#candidate|3681|()|var|float32
var_3682 = relay.var("var_3682", dtype = "float32", shape = (10, 5, 13))#candidate|3682|(10, 5, 13)|var|float32
bop_3683 = relay.mod(var_3681.astype('float32'), var_3682.astype('float32')) # shape=(10, 5, 13)
func_2937_call = mod.get_global_var('func_2937')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_3691 = relay.TupleGetItem(func_2937_call(), 0)
call_3692 = relay.TupleGetItem(func_2939_call(), 0)
bop_3698 = relay.multiply(bop_3683.astype('uint32'), var_3681.astype('uint32')) # shape=(10, 5, 13)
uop_3706 = relay.acos(var_3682.astype('float32')) # shape=(10, 5, 13)
bop_3720 = relay.bitwise_and(uop_3706.astype('int32'), relay.reshape(var_3682.astype('int32'), relay.shape_of(uop_3706))) # shape=(10, 5, 13)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_3727 = func_3643_call()
call_3728 = func_3643_call()
func_2614_call = mod.get_global_var('func_2614')
func_2616_call = mutated_mod.get_global_var('func_2616')
call_3730 = relay.TupleGetItem(func_2614_call(), 0)
call_3731 = relay.TupleGetItem(func_2616_call(), 0)
func_1053_call = mod.get_global_var('func_1053')
func_1059_call = mutated_mod.get_global_var('func_1059')
var_3747 = relay.var("var_3747", dtype = "float32", shape = (480,))#candidate|3747|(480,)|var|float32
call_3746 = relay.TupleGetItem(func_1053_call(relay.reshape(var_3681.astype('float32'), []), relay.reshape(var_3747.astype('float32'), [480,]), relay.reshape(call_3730.astype('uint8'), [105,]), relay.reshape(call_3727.astype('float32'), [2160,]), ), 6)
call_3748 = relay.TupleGetItem(func_1059_call(relay.reshape(var_3681.astype('float32'), []), relay.reshape(var_3747.astype('float32'), [480,]), relay.reshape(call_3730.astype('uint8'), [105,]), relay.reshape(call_3727.astype('float32'), [2160,]), ), 6)
output = relay.Tuple([call_3691,bop_3698,bop_3720,call_3727,call_3730,call_3746,var_3747,])
output2 = relay.Tuple([call_3692,bop_3698,bop_3720,call_3728,call_3731,call_3748,var_3747,])
func_3749 = relay.Function([var_3681,var_3682,var_3747,], output)
mod['func_3749'] = func_3749
mod = relay.transform.InferType()(mod)
var_3750 = relay.var("var_3750", dtype = "float32", shape = ())#candidate|3750|()|var|float32
var_3751 = relay.var("var_3751", dtype = "float32", shape = (10, 5, 13))#candidate|3751|(10, 5, 13)|var|float32
var_3752 = relay.var("var_3752", dtype = "float32", shape = (480,))#candidate|3752|(480,)|var|float32
output = func_3749(var_3750,var_3751,var_3752,)
func_3753 = relay.Function([var_3750,var_3751,var_3752,], output)
mutated_mod['func_3753'] = func_3753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_3774 = relay.TupleGetItem(func_2534_call(), 0)
call_3775 = relay.TupleGetItem(func_2536_call(), 0)
output = call_3774
output2 = call_3775
func_3779 = relay.Function([], output)
mod['func_3779'] = func_3779
mod = relay.transform.InferType()(mod)
output = func_3779()
func_3780 = relay.Function([], output)
mutated_mod['func_3780'] = func_3780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_3797 = relay.TupleGetItem(func_3202_call(), 0)
call_3798 = relay.TupleGetItem(func_3204_call(), 0)
output = call_3797
output2 = call_3798
func_3800 = relay.Function([], output)
mod['func_3800'] = func_3800
mod = relay.transform.InferType()(mod)
mutated_mod['func_3800'] = func_3800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3800_call = mutated_mod.get_global_var('func_3800')
call_3801 = func_3800_call()
output = call_3801
func_3802 = relay.Function([], output)
mutated_mod['func_3802'] = func_3802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_3817 = func_3643_call()
call_3818 = func_3643_call()
output = call_3817
output2 = call_3818
func_3826 = relay.Function([], output)
mod['func_3826'] = func_3826
mod = relay.transform.InferType()(mod)
mutated_mod['func_3826'] = func_3826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3826_call = mutated_mod.get_global_var('func_3826')
call_3827 = func_3826_call()
output = call_3827
func_3828 = relay.Function([], output)
mutated_mod['func_3828'] = func_3828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2819_call = mod.get_global_var('func_2819')
func_2821_call = mutated_mod.get_global_var('func_2821')
call_3884 = relay.TupleGetItem(func_2819_call(), 1)
call_3885 = relay.TupleGetItem(func_2821_call(), 1)
output = relay.Tuple([call_3884,])
output2 = relay.Tuple([call_3885,])
func_3890 = relay.Function([], output)
mod['func_3890'] = func_3890
mod = relay.transform.InferType()(mod)
mutated_mod['func_3890'] = func_3890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3890_call = mutated_mod.get_global_var('func_3890')
call_3891 = func_3890_call()
output = call_3891
func_3892 = relay.Function([], output)
mutated_mod['func_3892'] = func_3892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3965 = relay.var("var_3965", dtype = "uint8", shape = (6, 2, 8))#candidate|3965|(6, 2, 8)|var|uint8
var_3966 = relay.var("var_3966", dtype = "uint8", shape = (6, 2, 8))#candidate|3966|(6, 2, 8)|var|uint8
bop_3967 = relay.logical_xor(var_3965.astype('uint8'), relay.reshape(var_3966.astype('uint8'), relay.shape_of(var_3965))) # shape=(6, 2, 8)
func_3826_call = mod.get_global_var('func_3826')
func_3828_call = mutated_mod.get_global_var('func_3828')
call_3990 = func_3826_call()
call_3991 = func_3826_call()
func_3749_call = mod.get_global_var('func_3749')
func_3753_call = mutated_mod.get_global_var('func_3753')
var_4008 = relay.var("var_4008", dtype = "float32", shape = ())#candidate|4008|()|var|float32
const_4009 = relay.const([8.209343,-8.482888,8.636281,-1.869184,4.749094,-3.546808,-6.512032,-5.886836,-8.633730,-2.961205,4.699542,-8.172476,5.012719,-9.768043,5.539816,-5.331003,8.033231,3.926216,-9.472535,-2.228707,8.968819,6.238573,4.938829,-6.148000,-2.273469,-0.430832,0.618547,-2.646909,2.315500,9.014258,-0.290604,-1.308265,-1.730831,-3.229995,7.268395,-5.677413,-2.663521,7.288351,-4.791477,0.234629,-3.572436,-1.550269,-9.289299,-9.484161,4.457205,1.442819,3.570483,8.038410,6.219563,-7.006669,8.720568,7.869315,-4.225048,8.506859,-9.196466,3.099921,-7.827876,-6.981536,4.584470,0.922218,-7.718438,-4.449478,-4.101368,-5.555301,-9.472668,-1.153624,1.271451,0.744811,-8.012425,-9.179235,0.807338,8.348907,8.076795,-0.747964,-7.103745,-5.657437,-7.602209,-3.403009,-2.487323,3.500051,4.306051,-0.321805,5.680061,-2.376510,-7.561444,0.773446,6.128531,-5.841594,-0.508729,9.758757,-2.609744,-6.314013,-0.564506,9.379250,0.645778,8.882249,-4.073851,6.627756,7.001454,-5.177354,6.584065,2.471247,-2.230545,7.286007,3.629088,-1.981269,-3.671877,-0.890464,3.588144,-5.598314,-2.709480,-1.749997,7.430874,3.684175,5.650951,3.964590,6.754683,2.802508,-0.257689,-7.057018,7.894030,1.216531,0.328700,2.075780,5.796375,5.970236,9.166507,-2.139154,-3.116655,-6.284263,5.333774,-0.549930,-5.096093,5.828571,-7.197754,-3.315378,-6.762691,-1.598005,-2.330151,-3.011991,9.683283,0.662554,6.775326,2.263909,1.364625,-8.522277,2.575397,4.106791,-4.893893,-3.026720,5.263796,0.329578,-4.316460,0.108305,2.973729,-2.810038,-4.728886,0.917322,-6.097863,7.575367,-5.278848,-0.840002,-0.827196,-7.630942,-9.611277,8.963707,4.193823,1.806621,-8.940142,-8.684193,9.233823,-8.879093,3.085581,9.330571,6.822970,6.379844,-2.827071,8.982303,-8.502769,-7.337742,6.613379,-4.156611,-3.375834,-9.387801,-3.369170,-4.015240,-1.309573,0.312493,-1.990798,4.906096,5.546939,-0.669664,-5.242072,-1.265111,1.803494,-3.417538,1.682321,5.490046,-7.308881,-3.803527,0.140355,-9.204178,-5.079058,3.349287,9.439689,-7.026432,6.335164,-6.882543,-7.083015,-5.503196,9.708889,-9.169067,2.987260,-9.511413,-3.201495,4.941040,7.463658,9.288693,1.770834,6.662148,3.669905,-5.109788,-4.773788,-6.468884,3.606852,-4.848722,9.254201,4.371320,-8.717206,5.354591,7.731661,-3.656917,-7.049950,-9.392383,-4.995498,-0.108184,1.751013,1.780185,-7.073254,-6.177525,-4.421798,-6.665084,-5.520642,4.451013,-6.375225,4.531452,1.499791,-7.434593,8.370137,1.408316,-6.382796,9.591372,-3.529134,3.929964,-1.844752,9.302600,-1.442940,1.800774,9.686630,-5.687513,5.726627,8.612281,8.084038,-4.016365,-0.047303,3.495002,-6.230302,-0.355289,1.311618,6.118061,-4.538200,-9.824260,-4.474788,2.275016,-5.880926,2.436018,8.290356,-8.476589,1.352959,2.085726,4.040622,-6.886865,2.420770,-5.265940,7.721084,-6.297617,-0.990845,-6.180472,-0.478239,0.274116,8.629237,-6.480823,1.673536,-0.659131,-3.305732,0.578610,-1.891934,1.313709,-1.487105,-3.613452,5.296550,3.531328,9.105767,-4.485606,3.725290,4.095712,5.212286,2.765704,-5.733087,8.546054,6.676204,-4.467951,-3.648057,6.981518,-7.159088,-5.042457,6.796687,9.110322,-1.847941,-0.652599,4.313345,-5.715001,-1.174986,-5.326083,2.916624,2.136831,-4.815240,-1.698990,9.279980,8.046294,1.525842,2.481830,-7.114082,-0.172237,-2.120506,-3.302779,-0.912182,-8.225664,9.720333,8.374299,-1.714137,9.766195,5.783993,-7.956661,-9.585393,-6.967998,6.990426,-2.898938,-9.722467,-7.732772,4.706622,6.457613,-8.088564,-4.487372,-7.968420,-4.610384,-8.080278,4.912713,-6.042850,-3.640622,0.708024,-7.933250,-0.062230,-5.186725,1.695929,-5.061361,-8.189677,-6.333855,7.822398,-7.738024,9.216494,2.878133,-1.891899,4.932686,-3.675002,0.646132,-8.523358,-5.955870,-3.050295,3.976675,-8.272031,5.312021,1.047190,4.316915,-5.006395,-5.753467,-6.696763,-0.267616,-0.256000,0.341566,7.797158,1.366681,0.750140,7.190005,-1.488021,8.455006,-6.191259,2.011873,0.588635,-9.332307,-0.080805,9.714343,-8.222225,-1.109305,8.774484,1.578979,-2.194728,-5.856792,9.931228,-2.119941,-6.235516,-8.480823,-2.349112,4.039599,-1.411625,1.609897,-3.581973,6.540310,-4.629245,-3.581004,-9.273409,9.186710,-9.894668,-5.795867,7.368074,9.498868,-1.304830,-6.778691,-2.914293,-2.522878,2.715856,8.521493,-6.008573,1.351115,-6.234069,-6.125775,1.590383,-0.286071,1.223217,5.877008,6.063977,7.221146,-9.385422,-3.817252,6.165542,5.269821,-4.726320,-7.906311,-3.643439,-4.074928,1.993190,8.897445,-2.585830,-1.583274,-8.878479,-2.537546,9.399444,3.032197,9.354188,-8.838932,9.629161,7.756385,-9.318119,-6.678128,8.209317,-6.808907,-3.047275,-5.751539,6.712797,-3.835320,-8.770081,2.605420,-9.561848,-7.385497,-8.437613,-9.142096,-1.309712,7.666485,-0.846102,6.741996,-3.108149,-0.563521,1.510702,3.886451,-5.911140,-9.613433,-3.709977,-9.778104,6.980172,-2.227618,4.489305,2.545035,8.309640,-4.032860,-4.655423,7.939291,6.028052,0.872865,-1.992432,7.871269,4.634815,-8.229153,9.873426,-8.832696,8.855561,-4.747025,-1.781003,-1.440915,0.328516,2.159147,2.429793,-5.381820,-3.386925,0.196285,5.170355,2.428835,2.842997,-0.817274,-3.805142,5.675207,-0.096494,-9.220856,4.624097,-2.870580,-2.517959,-4.593869,-9.035990,-7.045172,2.143210,-0.549823,4.678514,0.331479,4.753538,1.844896,-6.036800,8.707050,0.954447,0.588389,-5.081848,3.606737,1.078345,-1.303198,-2.873053,7.600048,7.296986,-4.019511,2.088243,4.959889,-4.712198,9.883229,3.825914,0.076465,-2.778854,3.287028,-5.460967,4.487309,-0.513201,6.862839,2.272915,-4.369116,-8.350399,1.381548,-5.051676,-6.273465,6.078183,-8.006283,-3.620624,9.137880,-8.161727,-4.606457,2.891996,7.180793,4.688751,3.757313,1.016663,2.424396,-6.315345,2.074677,8.153561,0.333997,8.811904,1.510682,9.108858,4.794847,9.473864,-7.112629,5.464859,3.557852,9.189179,4.848159,-9.555243,-8.960184,6.858739,-9.693246,-4.468534,-8.160035,9.810597,6.777422,-7.637736,-1.347706,-0.634897,5.293881,-6.649957,3.894382,0.608510,-8.027515,7.914965,-6.614135,3.083756,-2.166193,0.752653,9.260037,-9.787577,5.525203,3.765518,3.898465,2.014609,-6.603159,9.851310,6.553291,-2.537649,-8.903326,-1.834323,5.353900,3.360453,5.723589,-6.359295,3.997476,-1.245504,7.223836,6.713538,2.770083,7.614634,-6.121638,9.976168,1.779385,-0.678580,-0.621921,4.404047,-7.201102,4.082697,3.573017,-5.743904,-2.577306,8.659295,3.931508,-4.243972,1.898071,-3.123131,-1.280346], dtype = "float32")#candidate|4009|(650,)|const|float32
const_4010 = relay.const([-8.344019,3.803765,5.892188,-4.298434,7.931952,-9.473312,7.797879,-8.442653,0.006017,3.668306,2.513848,4.919125,-7.399920,3.046561,-8.573948,1.308943,-4.450896,-3.449081,-2.247541,-4.580567,-4.306300,-9.805668,-6.412405,-4.953181,-8.171829,6.902640,4.841250,2.503691,3.345368,8.680584,5.840144,-2.129490,8.912006,-4.070813,5.411798,-4.431685,0.673386,4.706755,2.082524,4.733500,6.374349,9.390115,-3.269484,3.810976,-6.421889,0.377261,0.904234,8.099156,-3.539240,3.690448,6.531271,8.364259,-5.112798,-0.997313,-0.284359,7.251140,-7.681112,-0.329012,6.634381,-4.841206,0.018210,0.274173,1.678948,8.213651,-0.910814,-4.370034,-6.377447,8.557710,-1.838601,6.842192,2.303442,8.172868,4.811661,-0.939040,0.074673,-9.593918,-6.068017,9.112250,1.852786,9.446286,9.742542,4.837441,9.303297,-1.852094,-9.789543,8.000054,-1.940443,5.020090,-0.061062,-3.343864,7.786357,-5.204618,3.738079,9.480969,6.005290,-9.144045,-3.444292,-0.113722,-9.549510,-4.799352,-2.653814,6.814433,-5.831527,8.343112,-6.799936,-5.666807,-7.487857,-3.668389,-8.854961,-1.281768,-6.419911,2.474958,-3.470569,9.876409,-4.830277,7.876203,7.820490,-1.783373,-4.882964,-9.364529,0.423277,-9.203009,-8.920255,9.515125,-5.113736,-3.577317,4.418001,-3.546119,7.051077,-7.701855,8.399952,5.235099,-9.692518,-0.599654,0.839369,-5.700369,0.429116,-2.236198,8.748808,-1.699294,-1.190492,-5.636682,-4.921076,9.146628,-1.471875,-9.155512,-2.873142,-2.898630,9.253100,6.412348,-0.247127,7.635727,-8.561523,3.370836,-4.360727,6.752527,-8.410421,-4.060094,-0.198511,-1.242937,0.213379,-2.448045,-7.491876,0.264106,4.168516,-4.902363,-6.478843,4.803121,-5.396574,-4.853178,0.815253,9.644824,4.081975,-5.912586,7.651716,5.723228,0.527116,-6.896500,-0.232671,1.710563,-0.579684,2.724703,-0.782737,1.757060,9.344608,2.726559,-6.437500,-7.691741,-8.869325,5.137044,-0.489014,-8.810625,9.899758,8.143062,-7.858415,1.525760,2.002868,5.607288,-5.359611,-6.848783,-7.207479,-0.876121,-9.043621,9.170677,1.501527,-5.389293,2.204938,-3.870503,-3.816760,-0.857995,-0.575949,3.405798,6.883242,1.437977,-4.587606,2.712343,8.254688,8.374807,8.142526,-4.606905,4.377743,-6.082039,-4.669734,6.911733,-3.000536,6.973460,-7.311976,-8.373923,-6.259979,4.116633,3.360956,7.355548,-5.052912,-7.444020,3.196863,-7.612544,-6.254978,7.427118,2.582778,8.513778,2.836980,4.666883,7.270963,3.209538,6.682848,-5.555575,3.966438,-3.315542,-3.466212,6.568987,5.583099,0.937941,-4.808724,-0.518117,5.545516,-6.214127,3.468167,-3.329146,5.116620,-8.615446,-6.050693,-7.259826,-4.366244,1.205765,9.401853,1.089050,4.724362,-6.304817,9.623800,2.837981,-0.912409,9.648105,3.071941,4.863653,6.025925,-5.623765,-3.484609,-8.824483,6.696731,-5.352641,-5.277843,5.102547,-2.213458,-5.580097,0.079554,-8.238010,4.549891,0.051206,-0.810575,4.692369,-9.249007,1.070054,-9.791236,9.486186,-0.018634,5.928519,9.649630,-8.839653,-8.514295,-6.703984,-7.666508,-6.646338,-8.685076,6.417429,-5.649006,0.092858,-7.771207,8.424791,-3.379265,-2.865312,-5.116089,6.816863,-6.867533,6.062833,-5.813627,-4.787019,6.913216,-9.752260,-8.643443,-5.720512,2.250793,6.183562,-5.547465,-6.135892,-1.569674,3.444722,-7.321973,-1.100635,-8.787427,-3.877364,0.994477,-2.471020,5.755195,6.272274,-8.865377,-6.345285,2.954679,5.858407,-4.838062,-5.952409,-0.874204,-7.450251,-0.669942,1.098741,-3.290580,-7.883017,1.245411,-2.640499,1.785158,-4.640423,0.574462,7.178367,8.669989,9.612246,0.647173,-4.383096,2.765896,-7.634273,6.894850,7.417846,6.874813,-3.447041,-4.273963,0.498192,-3.633195,8.353550,-1.740238,-6.883783,3.024516,-8.046380,7.432181,-8.910285,8.925031,-6.960501,-9.976527,-1.719359,5.834290,-4.125983,-8.448509,-8.639588,-1.132506,-8.198746,-4.250342,-5.422987,-0.891584,-7.961220,7.394509,3.957146,-3.903121,9.361224,0.881180,-1.255865,-4.350548,-2.382382,1.827391,5.864513,-2.241412,-6.829519,-7.831995,-5.232027,7.469146,-7.312861,7.170385,2.165972,-6.488462,-1.798179,7.080738,-3.026289,-8.754980,-2.450344,3.319893,3.193523,8.647596,6.233594,-5.343276,0.515581,-2.035361,-9.405217,7.804824,4.822738,-2.210489,5.224855,2.945001,-6.093334,-5.233326,8.424571,-5.538525,8.678387,-7.985656,-4.654242,-8.544062,1.347559,2.016737,-8.275564,1.314435,-6.612031,4.595522,3.325044,-1.822688,-8.518605,-8.308424,-3.486421,-0.515741,9.593757,-2.954399,6.075113,7.693110,-0.470912,-7.886945,3.185763,-6.963868,-0.037024,5.045813,-6.532741,2.817665,-1.583949,-6.142320,-3.897227,-9.639996,-7.177819,1.174507,4.550755,-8.891774,-5.888258,-6.985200,-4.982735,1.480189,-0.043784,3.461527,-9.084495,-0.730531,-1.813458,-4.984443,3.953268,-3.371639,3.570487,-1.255553,-6.134856,-0.810928,3.083106], dtype = "float32")#candidate|4010|(480,)|const|float32
call_4007 = relay.TupleGetItem(func_3749_call(relay.reshape(var_4008.astype('float32'), []), relay.reshape(const_4009.astype('float32'), [10, 5, 13]), relay.reshape(const_4010.astype('float32'), [480,]), ), 4)
call_4011 = relay.TupleGetItem(func_3753_call(relay.reshape(var_4008.astype('float32'), []), relay.reshape(const_4009.astype('float32'), [10, 5, 13]), relay.reshape(const_4010.astype('float32'), [480,]), ), 4)
func_2557_call = mod.get_global_var('func_2557')
func_2558_call = mutated_mod.get_global_var('func_2558')
call_4014 = func_2557_call()
call_4015 = func_2557_call()
func_3595_call = mod.get_global_var('func_3595')
func_3597_call = mutated_mod.get_global_var('func_3597')
call_4023 = relay.TupleGetItem(func_3595_call(), 0)
call_4024 = relay.TupleGetItem(func_3597_call(), 0)
func_2682_call = mod.get_global_var('func_2682')
func_2684_call = mutated_mod.get_global_var('func_2684')
call_4033 = relay.TupleGetItem(func_2682_call(), 2)
call_4034 = relay.TupleGetItem(func_2684_call(), 2)
output = relay.Tuple([bop_3967,call_3990,call_4007,var_4008,const_4009,const_4010,call_4014,call_4023,call_4033,])
output2 = relay.Tuple([bop_3967,call_3991,call_4011,var_4008,const_4009,const_4010,call_4015,call_4024,call_4034,])
func_4038 = relay.Function([var_3965,var_3966,var_4008,], output)
mod['func_4038'] = func_4038
mod = relay.transform.InferType()(mod)
var_4039 = relay.var("var_4039", dtype = "uint8", shape = (6, 2, 8))#candidate|4039|(6, 2, 8)|var|uint8
var_4040 = relay.var("var_4040", dtype = "uint8", shape = (6, 2, 8))#candidate|4040|(6, 2, 8)|var|uint8
var_4041 = relay.var("var_4041", dtype = "float32", shape = ())#candidate|4041|()|var|float32
output = func_4038(var_4039,var_4040,var_4041,)
func_4042 = relay.Function([var_4039,var_4040,var_4041,], output)
mutated_mod['func_4042'] = func_4042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_4240 = relay.TupleGetItem(func_3202_call(), 0)
call_4241 = relay.TupleGetItem(func_3204_call(), 0)
func_2928_call = mod.get_global_var('func_2928')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_4246 = func_2928_call()
call_4247 = func_2928_call()
func_3328_call = mod.get_global_var('func_3328')
func_3331_call = mutated_mod.get_global_var('func_3331')
var_4253 = relay.var("var_4253", dtype = "float64", shape = (364,))#candidate|4253|(364,)|var|float64
call_4252 = relay.TupleGetItem(func_3328_call(relay.reshape(var_4253.astype('float64'), [14, 2, 13])), 0)
call_4254 = relay.TupleGetItem(func_3331_call(relay.reshape(var_4253.astype('float64'), [14, 2, 13])), 0)
bop_4265 = relay.bitwise_or(var_4253.astype('uint32'), relay.reshape(call_4252.astype('uint32'), relay.shape_of(var_4253))) # shape=(364,)
bop_4268 = relay.bitwise_or(var_4253.astype('uint32'), relay.reshape(call_4254.astype('uint32'), relay.shape_of(var_4253))) # shape=(364,)
func_3890_call = mod.get_global_var('func_3890')
func_3892_call = mutated_mod.get_global_var('func_3892')
call_4269 = relay.TupleGetItem(func_3890_call(), 0)
call_4270 = relay.TupleGetItem(func_3892_call(), 0)
bop_4285 = relay.mod(bop_4265.astype('float64'), relay.reshape(var_4253.astype('float64'), relay.shape_of(bop_4265))) # shape=(364,)
bop_4288 = relay.mod(bop_4268.astype('float64'), relay.reshape(var_4253.astype('float64'), relay.shape_of(bop_4268))) # shape=(364,)
output = relay.Tuple([call_4240,call_4246,call_4269,bop_4285,])
output2 = relay.Tuple([call_4241,call_4247,call_4270,bop_4288,])
func_4289 = relay.Function([var_4253,], output)
mod['func_4289'] = func_4289
mod = relay.transform.InferType()(mod)
var_4290 = relay.var("var_4290", dtype = "float64", shape = (364,))#candidate|4290|(364,)|var|float64
output = func_4289(var_4290)
func_4291 = relay.Function([var_4290], output)
mutated_mod['func_4291'] = func_4291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_4293 = func_3643_call()
call_4294 = func_3643_call()
uop_4298 = relay.sigmoid(call_4293.astype('float32')) # shape=(15, 9, 16)
uop_4300 = relay.sigmoid(call_4294.astype('float32')) # shape=(15, 9, 16)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_4303 = relay.TupleGetItem(func_2534_call(), 0)
call_4304 = relay.TupleGetItem(func_2536_call(), 0)
func_2819_call = mod.get_global_var('func_2819')
func_2821_call = mutated_mod.get_global_var('func_2821')
call_4316 = relay.TupleGetItem(func_2819_call(), 1)
call_4317 = relay.TupleGetItem(func_2821_call(), 1)
output = relay.Tuple([uop_4298,call_4303,call_4316,])
output2 = relay.Tuple([uop_4300,call_4304,call_4317,])
func_4329 = relay.Function([], output)
mod['func_4329'] = func_4329
mod = relay.transform.InferType()(mod)
mutated_mod['func_4329'] = func_4329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4329_call = mutated_mod.get_global_var('func_4329')
call_4330 = func_4329_call()
output = call_4330
func_4331 = relay.Function([], output)
mutated_mod['func_4331'] = func_4331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mod.get_global_var('func_2928')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_4340 = func_2928_call()
call_4341 = func_2928_call()
output = call_4340
output2 = call_4341
func_4349 = relay.Function([], output)
mod['func_4349'] = func_4349
mod = relay.transform.InferType()(mod)
mutated_mod['func_4349'] = func_4349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4349_call = mutated_mod.get_global_var('func_4349')
call_4350 = func_4349_call()
output = call_4350
func_4351 = relay.Function([], output)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2682_call = mod.get_global_var('func_2682')
func_2684_call = mutated_mod.get_global_var('func_2684')
call_4368 = relay.TupleGetItem(func_2682_call(), 1)
call_4369 = relay.TupleGetItem(func_2684_call(), 1)
func_2928_call = mod.get_global_var('func_2928')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_4373 = func_2928_call()
call_4374 = func_2928_call()
output = relay.Tuple([call_4368,call_4373,])
output2 = relay.Tuple([call_4369,call_4374,])
func_4379 = relay.Function([], output)
mod['func_4379'] = func_4379
mod = relay.transform.InferType()(mod)
mutated_mod['func_4379'] = func_4379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4379_call = mutated_mod.get_global_var('func_4379')
call_4380 = func_4379_call()
output = call_4380
func_4381 = relay.Function([], output)
mutated_mod['func_4381'] = func_4381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2557_call = mod.get_global_var('func_2557')
func_2558_call = mutated_mod.get_global_var('func_2558')
call_4382 = func_2557_call()
call_4383 = func_2557_call()
output = relay.Tuple([call_4382,])
output2 = relay.Tuple([call_4383,])
func_4400 = relay.Function([], output)
mod['func_4400'] = func_4400
mod = relay.transform.InferType()(mod)
output = func_4400()
func_4401 = relay.Function([], output)
mutated_mod['func_4401'] = func_4401
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4456 = relay.const([[[5.074364,-2.586233,-7.319214,3.650111,5.670177,1.862301]],[[-8.522273,-0.675079,6.369037,2.930792,-4.796812,0.108020]],[[-1.149801,0.202317,-5.879666,5.177467,-2.005148,3.789529]],[[-6.372675,7.367344,3.973899,3.784597,-0.726407,-8.747555]],[[1.841494,1.612978,6.080456,-2.370534,0.093558,-0.122301]],[[-9.441185,8.617198,2.203116,6.470825,-2.373992,-2.140315]],[[8.374304,7.845434,5.873658,5.658539,-0.235828,-9.956842]],[[-2.111632,5.154978,-4.010147,9.057804,-1.040073,5.791823]]], dtype = "float32")#candidate|4456|(8, 1, 6)|const|float32
uop_4457 = relay.sqrt(const_4456.astype('float32')) # shape=(8, 1, 6)
var_4485 = relay.var("var_4485", dtype = "float32", shape = (8, 8, 6))#candidate|4485|(8, 8, 6)|var|float32
bop_4486 = relay.less_equal(const_4456.astype('bool'), var_4485.astype('bool')) # shape=(8, 8, 6)
output = relay.Tuple([uop_4457,bop_4486,])
output2 = relay.Tuple([uop_4457,bop_4486,])
func_4490 = relay.Function([var_4485,], output)
mod['func_4490'] = func_4490
mod = relay.transform.InferType()(mod)
var_4491 = relay.var("var_4491", dtype = "float32", shape = (8, 8, 6))#candidate|4491|(8, 8, 6)|var|float32
output = func_4490(var_4491)
func_4492 = relay.Function([var_4491], output)
mutated_mod['func_4492'] = func_4492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4601 = relay.var("var_4601", dtype = "float64", shape = (1, 6, 15))#candidate|4601|(1, 6, 15)|var|float64
uop_4602 = relay.atan(var_4601.astype('float64')) # shape=(1, 6, 15)
output = uop_4602
output2 = uop_4602
func_4604 = relay.Function([var_4601,], output)
mod['func_4604'] = func_4604
mod = relay.transform.InferType()(mod)
mutated_mod['func_4604'] = func_4604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4605 = relay.var("var_4605", dtype = "float64", shape = (1, 6, 15))#candidate|4605|(1, 6, 15)|var|float64
func_4604_call = mutated_mod.get_global_var('func_4604')
call_4606 = func_4604_call(var_4605)
output = call_4606
func_4607 = relay.Function([var_4605], output)
mutated_mod['func_4607'] = func_4607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4400_call = mod.get_global_var('func_4400')
func_4401_call = mutated_mod.get_global_var('func_4401')
call_4630 = relay.TupleGetItem(func_4400_call(), 0)
call_4631 = relay.TupleGetItem(func_4401_call(), 0)
func_880_call = mod.get_global_var('func_880')
func_885_call = mutated_mod.get_global_var('func_885')
var_4633 = relay.var("var_4633", dtype = "float32", shape = (2160,))#candidate|4633|(2160,)|var|float32
call_4632 = relay.TupleGetItem(func_880_call(relay.reshape(call_4630.astype('uint8'), [7, 5, 3]), relay.reshape(call_4630.astype('uint8'), [7, 5, 3]), relay.reshape(var_4633.astype('float32'), [15, 9, 16]), ), 0)
call_4634 = relay.TupleGetItem(func_885_call(relay.reshape(call_4630.astype('uint8'), [7, 5, 3]), relay.reshape(call_4630.astype('uint8'), [7, 5, 3]), relay.reshape(var_4633.astype('float32'), [15, 9, 16]), ), 0)
func_1942_call = mod.get_global_var('func_1942')
func_1944_call = mutated_mod.get_global_var('func_1944')
call_4644 = relay.TupleGetItem(func_1942_call(relay.reshape(call_4632.astype('uint8'), [105,])), 2)
call_4645 = relay.TupleGetItem(func_1944_call(relay.reshape(call_4632.astype('uint8'), [105,])), 2)
output = relay.Tuple([call_4630,call_4632,var_4633,call_4644,])
output2 = relay.Tuple([call_4631,call_4634,var_4633,call_4645,])
func_4656 = relay.Function([var_4633,], output)
mod['func_4656'] = func_4656
mod = relay.transform.InferType()(mod)
var_4657 = relay.var("var_4657", dtype = "float32", shape = (2160,))#candidate|4657|(2160,)|var|float32
output = func_4656(var_4657)
func_4658 = relay.Function([var_4657], output)
mutated_mod['func_4658'] = func_4658
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4694 = relay.const([[[6,-7,-8,10,7,-6,5,-3,4,2,5,4],[-8,-4,2,7,8,6,6,-7,7,4,-1,-4],[-3,7,-2,9,-10,5,10,1,-5,3,-4,-6],[4,-2,-9,10,-3,-1,9,-5,4,2,-1,4],[-1,-9,7,-5,7,8,4,-5,6,-3,5,-6],[7,5,-3,6,-5,-9,10,3,-3,-3,-8,3],[-6,9,-4,2,-4,-3,-5,-1,4,1,5,-3],[-7,-3,-5,-1,3,-2,-6,10,1,-7,2,7]],[[9,4,-3,10,3,7,2,-1,-7,-3,9,-2],[-9,-9,6,-9,-5,9,-9,-10,-4,4,-4,-2],[10,-1,-1,1,2,8,-7,5,9,-10,4,-1],[-6,6,-10,8,-4,-8,5,-4,1,-7,9,8],[7,-6,-7,-9,4,4,4,5,-2,2,2,6],[-7,2,6,-6,8,-4,-3,-2,8,2,-8,1],[-9,9,8,7,-8,-5,-8,9,-7,5,-8,6],[2,10,-4,-2,-4,6,-6,-1,-1,1,9,5]],[[3,-3,-8,-6,8,10,7,-7,-1,-4,4,-3],[10,-4,4,-5,1,5,-9,-8,7,1,10,-4],[8,9,-3,-9,-6,4,-2,4,-8,-3,-2,-6],[-10,4,6,10,7,-8,-2,3,-9,6,5,5],[1,-10,10,5,-4,8,8,-4,7,-5,-10,-5],[-5,-8,-4,-4,2,9,10,2,2,4,9,-5],[9,-5,8,7,4,-4,10,-3,-1,-6,8,-5],[-9,-10,-8,-5,5,-5,4,4,9,4,7,-2]],[[2,9,6,-10,-4,3,5,8,-10,1,-7,1],[7,3,-5,-10,5,-8,-5,5,-7,1,8,2],[-4,-3,-1,5,10,-10,7,3,-1,-2,-7,6],[-5,8,6,-3,-4,-1,9,-3,-8,-5,4,4],[8,2,2,1,-6,-1,10,3,10,-9,2,9],[6,2,3,5,-3,-7,6,-2,-9,-5,9,-3],[3,-10,-5,-4,5,10,3,1,4,-1,-6,-1],[10,-3,3,7,-1,9,-8,-6,-9,2,4,10]],[[-1,-8,-5,-3,-4,-5,-4,1,1,-1,4,-1],[8,7,-7,1,7,5,6,-9,6,-7,8,6],[-1,8,8,10,-5,7,-3,9,8,4,-2,6],[8,-8,3,-6,3,-10,7,7,7,3,-4,2],[6,8,8,6,7,-2,10,-7,-6,-5,8,-5],[8,7,-10,-4,4,6,5,-7,8,5,9,-10],[-10,6,-7,-5,10,-8,2,9,-3,-9,7,-3],[5,-10,9,-9,-6,-8,-7,9,8,8,-9,-7]],[[9,3,2,-10,3,1,-3,2,5,-2,7,-10],[7,7,4,-8,-10,1,-4,-6,3,10,8,-5],[4,-7,-9,5,6,1,6,7,10,-7,-10,-3],[2,9,5,-5,1,1,-1,-5,-10,9,6,3],[3,-10,3,-6,-7,7,10,3,3,3,-2,-1],[5,-8,5,6,-1,8,10,-1,10,-8,-9,4],[-5,-8,-5,9,10,-10,-9,2,5,-4,-4,1],[-2,-6,8,-4,7,9,-2,2,6,-6,10,-4]],[[8,9,4,7,9,-6,-3,1,4,-4,10,8],[-9,2,-10,6,8,-1,-5,8,-2,-10,-7,-7],[-3,-7,6,-9,-10,6,-1,10,-8,-10,9,-5],[-4,-8,-6,-4,-5,-1,6,7,5,6,4,3],[-4,4,-3,-6,6,10,6,-2,-4,-3,-5,4],[2,3,-3,9,-3,5,-4,5,-3,-3,-6,2],[-7,8,-3,-9,-2,4,-3,7,6,2,-10,-1],[9,-4,6,-4,-10,5,9,-2,-8,-8,-9,-7]],[[-8,-6,-5,3,-8,10,4,-7,8,-2,5,8],[10,6,-5,-4,-1,3,-5,9,-5,9,3,-8],[7,-10,3,10,7,1,-9,7,5,-6,-8,6],[-4,-5,-1,9,-2,-2,8,6,-6,-9,2,-4],[4,9,-7,-7,8,-9,4,6,-9,-9,-10,4],[4,2,-9,-4,8,-7,8,5,4,4,-4,-4],[-9,-1,9,-7,-1,10,-5,3,10,10,1,-4],[1,-7,-8,-7,-3,8,-6,-7,-3,-6,-5,-4]],[[8,3,-9,-8,-4,-7,-5,3,-5,-2,-5,-9],[-9,-7,-4,7,4,5,8,-4,-6,7,5,1],[-1,2,-3,-4,-8,5,1,5,-6,9,-4,6],[-5,-3,-3,2,-7,-9,9,-3,4,8,1,-1],[6,1,-4,-1,-10,-9,9,8,-10,-6,-10,-6],[6,10,-9,-4,-10,4,2,2,10,-4,7,-4],[-8,-5,-7,3,-5,1,-3,-1,-10,8,2,3],[-1,10,-8,4,5,6,-2,-7,3,3,5,-10]],[[10,-6,-8,-4,-7,-7,-1,2,-2,-1,-7,-1],[6,-6,-7,5,-6,10,3,3,10,-6,-10,-10],[7,7,10,6,-2,-7,1,-8,7,1,4,10],[3,-9,-4,-7,10,9,-4,6,-9,6,-6,-9],[4,3,-3,4,-8,-10,1,7,1,-1,-1,10],[-9,2,-3,-10,-10,-5,-7,10,3,10,-5,-5],[-3,1,3,-3,-10,-10,7,-7,5,1,-2,-9],[-9,9,6,-2,8,10,-7,-6,10,-7,7,4]],[[-8,4,-6,-7,2,10,-9,6,6,-1,-10,9],[2,-9,-1,-1,-9,-1,1,-9,3,10,2,1],[1,2,-8,3,8,-1,4,8,-8,-8,6,-2],[1,-10,8,-2,3,2,6,3,5,2,5,-5],[-8,4,2,-2,-9,-5,-6,-6,4,2,3,-5],[9,-10,-7,9,-7,7,10,4,4,6,8,-10],[-2,-4,8,-5,-7,3,-9,-9,-7,6,8,7],[-1,3,-7,-2,5,-5,-5,2,-3,-6,-9,-9]]], dtype = "int64")#candidate|4694|(11, 8, 12)|const|int64
const_4695 = relay.const([[[-6,-8,-8,7,2,-9,-8,-2,-5,-9,9,-8],[6,-3,-1,-10,-1,-4,-9,2,8,10,2,-10],[-8,-3,1,-4,-3,-7,5,1,-6,-8,5,-8],[1,8,-10,2,9,7,-7,7,7,4,1,-9],[-10,4,6,8,-2,3,-5,1,10,-4,-8,-9],[-4,8,-10,-4,3,8,10,9,2,-5,6,-1],[-4,5,5,-9,-9,-6,-4,-1,-8,6,-7,-1],[6,-6,-2,3,3,9,4,-8,-7,-3,-5,-7]],[[3,3,10,-9,-2,1,3,1,3,-3,-2,-9],[-5,7,7,5,9,2,-3,-8,-5,8,-2,-5],[1,-2,-10,1,3,7,1,-2,1,-2,2,-9],[8,8,-8,-4,10,3,7,7,-1,-2,8,5],[-7,-4,-6,7,-10,-1,-7,-9,-3,8,6,1],[-10,10,-8,-5,-1,-3,4,8,-6,-4,7,1],[8,9,-5,-1,-5,2,5,6,8,4,1,6],[2,10,3,-9,-1,5,9,10,7,7,9,2]],[[5,9,-8,3,3,1,-7,7,9,3,-9,3],[-4,2,6,-3,7,-8,5,5,7,5,6,-3],[5,-4,10,2,10,9,5,-8,2,-7,9,6],[-10,1,5,1,-1,-4,-2,5,8,9,-8,6],[-5,8,7,-2,-4,-2,-9,9,-10,9,9,6],[-1,-3,-2,-6,3,2,7,8,-9,2,-5,-7],[6,-7,-1,-4,-7,-9,5,-5,3,-10,-1,4],[9,9,-9,-9,2,9,6,-8,-10,2,-4,6]],[[6,8,4,-9,-9,9,5,-2,3,-10,5,-3],[-5,-2,4,8,4,9,-9,-3,7,8,-9,8],[-4,-2,-8,-5,8,4,3,-1,-10,-5,9,9],[9,9,-8,1,-9,2,-5,-10,2,6,8,4],[-8,-6,6,-6,-3,-4,-3,-2,5,-10,8,-5],[8,10,9,-5,-3,-5,-6,-8,5,9,-7,10],[4,-2,2,7,-9,5,10,-2,-10,-6,7,5],[-5,9,7,4,9,-8,-3,10,-1,-7,-4,-8]],[[7,1,7,7,-2,4,6,-3,-3,-8,5,10],[3,-8,8,1,1,1,-8,2,5,-9,3,7],[-2,-4,-3,2,-2,4,8,7,-9,-9,-9,9],[6,-2,-2,9,-4,-1,-9,-4,3,3,7,-1],[2,-3,1,-2,2,10,-5,-9,1,-7,-1,3],[2,7,10,4,-8,-3,-1,-5,-1,6,-3,-6],[-5,7,5,-1,-10,4,6,3,5,10,1,8],[2,9,-8,-2,-7,10,10,6,-10,1,-8,-10]],[[8,-8,9,2,-1,7,-5,4,-9,-3,6,1],[10,1,-6,-1,-3,3,7,1,8,9,10,-3],[-8,2,-6,9,4,-3,3,5,7,5,-5,3],[-6,-7,6,7,-6,7,1,9,-7,6,-8,-3],[-10,10,5,-9,6,9,-5,5,5,-7,-9,2],[9,-4,-10,4,3,7,7,-1,3,-4,-6,2],[-2,-6,5,7,-7,-5,-5,-8,2,8,-1,-2],[-9,-5,-9,4,7,-2,-1,8,-9,-6,-1,5]],[[-10,-5,-4,-7,7,-7,8,8,3,-8,9,2],[-1,2,-3,-9,4,5,-5,10,-4,-8,8,8],[6,-4,3,4,-6,-8,-5,-1,-3,6,9,-9],[1,-3,-3,-10,6,5,2,5,-6,-7,2,-10],[4,-2,-2,-6,-8,1,2,10,7,-9,-3,-7],[1,-9,-1,9,-5,-10,2,9,5,-1,3,-4],[7,9,10,-6,-1,-4,-4,-2,6,3,6,-9],[-1,-7,-4,-5,4,8,4,-7,-10,1,-5,-2]],[[-3,-10,8,7,10,4,-4,-4,4,6,-7,-5],[5,-3,-7,3,2,6,-1,-9,-8,6,3,2],[-1,7,1,-6,-6,-7,8,2,3,1,-2,6],[5,-1,3,10,-4,-3,7,-1,2,5,-8,-9],[-4,5,-3,5,5,8,3,-2,-3,10,-6,-4],[-1,-6,7,-9,8,-8,-9,8,-10,3,-4,-8],[10,10,1,4,-4,-10,-8,3,-5,6,3,9],[10,-9,-7,-3,7,4,-9,9,-1,-6,7,6]],[[2,7,3,1,6,-10,-6,-1,-8,10,-3,1],[-7,-4,10,-8,9,-10,-3,-8,2,1,2,-1],[-7,8,-2,-6,9,5,10,-2,1,5,-2,3],[2,-1,8,-5,-5,-4,5,5,-2,1,-4,-2],[4,6,-10,-1,-3,-5,4,-5,-4,-7,-1,-2],[3,-4,8,-3,-1,10,8,-2,-4,3,8,9],[6,-2,10,-9,-9,1,7,10,3,-9,-3,-3],[9,-7,3,-10,3,8,-8,-8,2,-4,5,8]],[[6,-10,-8,6,-10,-4,-8,-4,10,6,-10,5],[-4,-2,-3,-9,-10,9,-4,5,9,-7,-8,10],[4,6,-8,8,7,3,2,10,10,10,-6,8],[-4,4,7,-10,10,4,4,-4,-2,3,-8,6],[4,-6,8,-6,10,-6,6,5,-1,-5,-9,-8],[-7,-6,5,5,-7,10,6,2,7,-10,-4,-8],[3,10,4,6,-8,-8,-4,2,5,-9,-9,-4],[8,9,10,7,-5,-7,4,2,-6,6,-3,-1]],[[2,7,2,-8,-7,10,-8,-1,3,-4,1,-8],[-6,5,3,-8,-10,6,8,10,-3,-3,7,-4],[1,-7,3,7,10,-9,-10,9,3,1,1,7],[2,-7,-3,9,-10,-4,2,4,-5,-8,-9,-6],[4,4,-7,-1,2,-9,-8,6,-5,-3,-4,-2],[10,-4,6,-3,-7,6,-1,-4,5,-7,2,-3],[6,5,-4,10,6,7,6,-10,9,9,-3,3],[6,10,-5,-6,-10,-2,-9,-8,-6,7,-7,5]]], dtype = "int64")#candidate|4695|(11, 8, 12)|const|int64
bop_4696 = relay.left_shift(const_4694.astype('int64'), relay.reshape(const_4695.astype('int64'), relay.shape_of(const_4694))) # shape=(11, 8, 12)
output = bop_4696
output2 = bop_4696
func_4707 = relay.Function([], output)
mod['func_4707'] = func_4707
mod = relay.transform.InferType()(mod)
mutated_mod['func_4707'] = func_4707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4707_call = mutated_mod.get_global_var('func_4707')
call_4708 = func_4707_call()
output = call_4708
func_4709 = relay.Function([], output)
mutated_mod['func_4709'] = func_4709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4755 = relay.var("var_4755", dtype = "uint8", shape = (11, 14, 9))#candidate|4755|(11, 14, 9)|var|uint8
var_4756 = relay.var("var_4756", dtype = "uint8", shape = (11, 14, 9))#candidate|4756|(11, 14, 9)|var|uint8
bop_4757 = relay.greater(var_4755.astype('bool'), relay.reshape(var_4756.astype('bool'), relay.shape_of(var_4755))) # shape=(11, 14, 9)
func_3779_call = mod.get_global_var('func_3779')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_4762 = func_3779_call()
call_4763 = func_3779_call()
func_4289_call = mod.get_global_var('func_4289')
func_4291_call = mutated_mod.get_global_var('func_4291')
const_4770 = relay.const([[-4.785371],[-2.270669],[-2.711514],[7.370810],[5.202230],[2.879359],[1.000394],[5.869186],[-5.132178],[8.243337],[7.067466],[7.641355],[9.871538],[7.321042],[7.889725],[8.846403],[-4.191101],[-7.658373],[0.462549],[-1.370899],[-6.550354],[-0.505608],[8.290126],[6.044139],[3.527334],[3.903326],[-3.451260],[-2.850240],[7.127355],[1.634036],[6.788842],[-7.320772],[-9.607504],[-9.371875],[-5.807144],[-2.354791],[-8.415074],[-0.541878],[-9.722113],[8.392218],[-3.069587],[0.659208],[4.186368],[6.173823],[6.403620],[3.447007],[5.514795],[5.834020],[7.161156],[9.762861],[-1.064199],[-3.956601],[-9.940972],[-8.000141],[-6.513418],[2.639039],[-9.138869],[9.328840],[-9.577239],[-7.443746],[4.441838],[-8.472651],[-8.663448],[-9.234782],[9.347419],[0.628341],[4.645781],[-6.286878],[3.598493],[0.015943],[-8.125538],[-8.597401],[0.109040],[3.140514],[-2.987416],[6.654297],[9.077555],[3.527847],[8.366484],[2.828097],[1.452905],[-3.868950],[7.792419],[5.187530],[-6.938341],[-3.351925],[4.665648],[1.913565],[8.113795],[-8.280259],[0.953747],[6.620849],[-9.076879],[-9.133596],[5.890640],[-2.274813],[-6.386277],[3.047627],[-6.849035],[-1.554546],[5.275777],[1.921740],[-8.075631],[4.877225],[2.960866],[7.151019],[-9.323053],[-7.027266],[9.459271],[-8.924293],[-0.759059],[-0.944897],[-9.310281],[-5.486744],[-1.278653],[0.033381],[-3.601815],[-2.530564],[3.091214],[-3.124007],[9.980390],[7.475857],[-6.550667],[-0.171453],[-1.404584],[-7.984347],[-0.867752],[-6.900734],[1.332595],[3.082582],[1.613036],[2.598181],[9.436306],[-2.359515],[-7.525625],[-5.427471],[7.302607],[1.904879],[8.247671],[6.984838],[-9.789200],[-8.080115],[-4.883345],[6.472342],[-9.054095],[0.008596],[2.384718],[2.395836],[-2.417821],[-6.977531],[-8.855422],[5.902751],[-3.072084],[4.021418],[-1.756175],[-8.274164],[5.275278],[9.760425],[5.329895],[8.749533],[2.643563],[4.922825],[8.078629],[-7.750548],[9.499983],[-3.898108],[6.685019],[1.680555],[-6.950899],[4.470108],[3.123925],[-2.016112],[-3.523920],[2.742002],[-3.739139],[3.856835],[3.562839],[4.415600],[6.160099],[9.973095],[-1.575580],[-8.234416],[4.876018],[8.063289],[2.034638],[-1.926784],[-8.891284],[0.275672],[1.475340],[-7.466385],[9.023105],[9.445155],[2.280460],[1.350077],[-0.860159],[9.993618],[4.254219],[-2.628122],[7.880179],[-2.417195],[-5.295150],[5.344902],[2.568858],[-3.901163],[1.665778],[6.275843],[-9.829422],[-8.216350],[8.714371],[9.241781],[-2.996931],[-3.267138],[-3.401812],[-6.876182],[-9.168376],[-0.824844],[8.741750],[-2.703598],[-1.235461],[0.581808],[8.894946],[-1.584110],[-9.468505],[0.542949],[6.800380],[0.566429],[1.180463],[3.218634],[3.790751],[0.082162],[-0.136876],[-8.615849],[-4.443273],[2.414096],[9.018141],[-5.647055],[1.581510],[6.220452],[0.063418],[1.124740],[9.728821],[-4.528601],[-8.316828],[-4.086262],[8.355368],[3.076528],[-9.141175],[-3.486167],[-2.568492],[3.974584],[-5.891642],[0.177374],[2.270826],[3.719974],[5.233390],[6.625428],[-6.628566],[-5.314576],[3.368915],[-1.045113],[-0.561328],[-6.994946],[3.194840],[1.842285],[-0.529416],[-5.303740],[9.520515],[-1.497439],[-9.292667],[3.951325],[-5.805657],[-1.564877],[4.571863],[8.238122],[0.642363],[7.309636],[-4.860486],[-5.237073],[-4.979514],[0.120582],[0.822713],[-3.236254],[4.490146],[6.319450],[-1.594758],[-1.331926],[8.357060],[9.413491],[7.089865],[2.119881],[-5.629904],[-9.028623],[-3.391241],[4.236376],[9.662012],[-2.471570],[-0.693263],[4.369810],[8.005909],[5.890887],[1.421436],[6.608013],[-0.248554],[5.787570],[1.255292],[-1.488037],[-0.561363],[-2.888024],[-2.672071],[0.653683],[4.757809],[-5.852852],[-3.354612],[9.242993],[-2.333324],[-4.115827],[-1.977247],[-6.926759],[-5.957697],[-5.422863],[-2.794542],[-8.159499],[-5.968772],[0.189610],[-3.859622],[-4.054985],[-3.168741],[8.842732],[-4.758187],[4.237642],[7.181936],[-1.472040],[6.502217],[-5.710197],[6.465333],[7.147966],[4.038572],[-8.231292],[5.105294],[-1.352112],[-5.697542],[8.093813],[8.523465],[-6.424176],[8.725449],[-1.145035],[5.977772],[7.696054],[9.440807],[-4.692291],[-6.820703],[-2.052715],[7.603949],[8.020651],[9.005879],[-9.967256],[-3.641501],[-6.088477],[-5.698350],[4.837773],[-9.087320],[-9.666638],[9.472963],[-6.769020]], dtype = "float64")#candidate|4770|(364, 1)|const|float64
call_4769 = relay.TupleGetItem(func_4289_call(relay.reshape(const_4770.astype('float64'), [364,])), 3)
call_4771 = relay.TupleGetItem(func_4291_call(relay.reshape(const_4770.astype('float64'), [364,])), 3)
uop_4773 = relay.sin(const_4770.astype('float64')) # shape=(364, 1)
func_3621_call = mod.get_global_var('func_3621')
func_3625_call = mutated_mod.get_global_var('func_3625')
const_4776 = relay.const([False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,True], dtype = "bool")#candidate|4776|(120,)|const|bool
call_4775 = relay.TupleGetItem(func_3621_call(relay.reshape(const_4776.astype('bool'), [6, 2, 10]), relay.reshape(const_4776.astype('bool'), [6, 2, 10]), relay.reshape(const_4776.astype('bool'), [6, 2, 10]), ), 0)
call_4777 = relay.TupleGetItem(func_3625_call(relay.reshape(const_4776.astype('bool'), [6, 2, 10]), relay.reshape(const_4776.astype('bool'), [6, 2, 10]), relay.reshape(const_4776.astype('bool'), [6, 2, 10]), ), 0)
uop_4794 = relay.atanh(call_4775.astype('float64')) # shape=(6, 2, 10)
uop_4796 = relay.atanh(call_4777.astype('float64')) # shape=(6, 2, 10)
func_2980_call = mod.get_global_var('func_2980')
func_2984_call = mutated_mod.get_global_var('func_2984')
var_4799 = relay.var("var_4799", dtype = "uint64", shape = (50,))#candidate|4799|(50,)|var|uint64
const_4800 = relay.const([[1,-1,-1,-9,5,-10,2,1,-5,-9],[10,4,-1,-4,-8,-7,2,-1,-5,7],[2,3,1,4,-9,-10,8,-10,3,-1],[-8,-10,-8,-3,-1,5,10,-9,-3,8],[-5,2,2,-10,8,6,4,8,8,5],[2,5,9,2,7,6,8,-5,4,5],[-9,-9,6,-4,-9,-6,-10,-2,4,-3],[-7,5,10,6,-7,7,-2,10,-4,-4],[5,3,-10,-8,-2,-9,1,4,6,-7],[-3,-9,-9,-4,-3,-7,10,-8,8,7],[7,8,-10,1,-4,-8,-3,1,8,-6],[-6,1,-4,6,-5,1,-1,-9,-3,6],[1,4,3,-5,-3,-1,-5,-6,-3,10],[-7,7,-9,-8,9,2,2,-3,3,5],[2,-6,-10,5,-7,1,-5,4,7,8],[10,7,8,-6,-9,-7,-8,-7,7,2],[-6,-2,1,8,-9,-5,8,8,1,5],[4,-10,-4,9,-8,7,-5,-6,-4,8],[1,-10,-5,-3,2,-8,-9,-7,7,6],[8,-1,2,-3,2,-8,3,3,6,-6],[-5,5,5,9,-7,-7,-10,-9,-8,9],[-4,-4,-6,-6,-3,3,9,4,-9,7],[-9,2,-5,-4,-3,-4,3,-5,4,-3],[6,-5,-5,2,-1,1,-5,1,-4,-4],[9,6,-5,1,2,6,-4,-4,9,5],[5,2,-9,-2,8,-1,-4,-9,6,6],[-5,-8,5,-10,-6,-6,2,-10,3,-3],[-6,9,1,-8,-9,-7,-9,5,-4,8],[-1,10,-4,-4,10,9,-4,-7,6,2],[-2,-10,-3,-4,-2,-7,-9,-6,-7,2],[-10,5,-1,8,8,3,-8,-10,9,-8],[-4,-4,1,-8,2,6,-2,5,3,-1],[5,10,8,-6,4,10,8,3,-5,8],[10,9,-4,7,10,-10,-3,-10,-2,10],[2,-4,-5,10,7,-7,-3,-10,1,-8],[-5,-5,1,-1,-4,7,-2,-6,7,9],[5,10,2,-9,-7,-1,-5,3,6,7],[5,-5,4,-6,-9,-2,2,-4,-1,-7],[-10,-3,7,-9,7,2,-1,-1,-8,5],[-3,-4,10,-9,-3,-9,5,7,5,-6],[3,6,-4,-8,-3,2,3,-1,5,4],[-8,-10,7,6,3,-6,-9,10,-9,-10],[3,-8,-9,9,-1,-2,8,-2,7,-8],[-2,-7,-7,8,5,-8,-9,7,5,4],[3,-5,-5,-7,-6,5,9,3,-6,2],[7,4,-4,6,10,-5,5,5,8,-6],[-7,4,-10,-10,6,-2,1,2,8,7],[9,1,4,6,6,-6,-3,-8,7,-1],[-1,-9,8,10,-1,-4,-10,6,8,6],[6,-8,-2,9,-4,4,3,8,5,7]], dtype = "uint64")#candidate|4800|(50, 10)|const|uint64
call_4798 = relay.TupleGetItem(func_2980_call(relay.reshape(var_4799.astype('uint64'), [1, 10, 5]), relay.reshape(const_4800.astype('uint64'), [10, 10, 5]), ), 0)
call_4801 = relay.TupleGetItem(func_2984_call(relay.reshape(var_4799.astype('uint64'), [1, 10, 5]), relay.reshape(const_4800.astype('uint64'), [10, 10, 5]), ), 0)
uop_4804 = relay.tan(bop_4757.astype('float64')) # shape=(11, 14, 9)
func_880_call = mod.get_global_var('func_880')
func_885_call = mutated_mod.get_global_var('func_885')
var_4809 = relay.var("var_4809", dtype = "float32", shape = (2160,))#candidate|4809|(2160,)|var|float32
call_4808 = relay.TupleGetItem(func_880_call(relay.reshape(call_4762.astype('uint8'), [7, 5, 3]), relay.reshape(call_4762.astype('uint8'), [7, 5, 3]), relay.reshape(var_4809.astype('float32'), [15, 9, 16]), ), 0)
call_4810 = relay.TupleGetItem(func_885_call(relay.reshape(call_4762.astype('uint8'), [7, 5, 3]), relay.reshape(call_4762.astype('uint8'), [7, 5, 3]), relay.reshape(var_4809.astype('float32'), [15, 9, 16]), ), 0)
bop_4816 = relay.maximum(const_4770.astype('uint16'), relay.reshape(uop_4773.astype('uint16'), relay.shape_of(const_4770))) # shape=(364, 1)
const_4824 = relay.const([[6.721327,4.696875,-3.765273],[-0.700461,-5.092177,-2.154023],[8.419314,9.383015,-7.426833],[7.794425,0.561484,-2.370790],[0.101324,1.921708,7.233350],[-9.317048,6.847236,-4.302240],[-4.229117,0.216365,-9.226691],[-5.225166,1.211774,-9.190218],[-2.992977,9.606897,-1.293175],[-8.237556,-1.831605,-0.874672],[-9.600077,-8.620878,-6.413509],[6.305989,-1.949093,-8.472823],[-8.380212,-2.710488,-8.757949],[8.341970,-3.036556,-7.333813],[0.784744,-5.071045,9.660528],[8.658584,8.731309,7.152490],[-4.145292,-3.958907,-4.090719],[8.929866,9.140583,-3.857735],[-0.971332,9.719496,-4.800790],[-2.598507,-7.151892,-2.835336],[0.366783,-3.188498,5.980366],[2.998236,-1.616344,-4.362536],[-3.042604,-0.336069,7.884084],[6.122685,-9.719631,-6.808172],[2.590948,-6.533490,2.272130],[2.563737,-8.863747,0.621582],[2.022560,1.914314,9.275775],[-7.878226,4.769648,5.379178],[-3.209779,6.323187,6.698503],[1.447058,-3.504504,8.556515],[-8.222345,-1.623301,-1.824502],[6.098084,-3.530967,5.598097],[-2.899547,6.523704,-5.696684],[4.496234,-6.287817,-5.620484],[-3.873894,-0.168626,1.520326],[6.265795,-1.799775,4.901239],[9.548062,-6.945409,7.221899],[4.471823,-4.176040,-8.937755],[-8.795050,5.304779,-7.601296],[-6.502819,8.677052,7.612256],[-5.448992,6.543064,-2.292311],[9.433974,9.602105,-4.529019],[-4.609218,-7.231786,-2.173401],[3.476508,-3.173144,6.064017],[-1.543015,-5.588630,-2.624114],[6.891806,-4.092478,9.206054],[9.371867,-6.307171,8.377978],[2.757570,6.559211,-6.689859],[-4.403646,-6.313265,-8.307660],[4.102865,1.739871,-7.428875],[1.041351,3.094319,-1.427271],[3.536663,7.750247,-1.711636],[-9.764432,-8.058725,-7.445033],[0.187829,9.442139,4.866142],[-2.334274,-3.549057,-1.434607],[2.959901,-4.905519,3.033121],[-6.113027,-9.463607,7.668653],[-6.970315,3.338911,0.728547],[5.298662,-4.177955,-1.180562],[-9.481170,0.003285,-7.188797],[9.185465,2.381390,-6.275226],[9.974027,0.870862,0.653987],[-6.351366,-1.891934,-6.457949],[4.867374,5.304655,-4.244909],[-7.612361,-5.240198,-6.425046],[0.738937,-9.841061,1.406359],[-9.094718,6.417641,9.054446],[-2.913917,-5.459829,4.536648],[-1.399305,-2.746813,-0.414483],[0.213938,8.468660,-5.512139],[-3.237031,-6.065860,9.756025],[-0.573302,-0.330901,8.312864],[-9.267132,9.197061,0.273796],[8.375852,-2.641618,9.395226],[6.714983,6.400861,-3.474122],[-9.804729,0.726678,3.753201],[-1.185586,-4.829795,-5.567080],[-1.772130,7.729800,9.473103],[-1.909594,-0.053233,4.240090],[-1.830244,-6.623783,3.528737],[3.727507,-4.607929,-9.815181],[0.929339,6.806684,4.386402],[-7.879340,-4.841443,-3.884126],[-8.948999,-4.483876,2.449050],[-8.763350,-3.325936,0.130241],[2.771302,4.314886,5.576806],[0.528102,4.638115,4.033848],[-9.223565,-4.703518,1.685195],[0.501362,-5.128417,7.462115],[1.802382,2.851108,-6.543412],[2.070731,8.316196,2.424646],[5.825871,-0.253706,4.654063],[7.200030,0.184548,-4.544018],[-7.939855,-9.622827,-1.556568],[-4.056575,2.333303,0.331188],[-1.431244,1.382856,-6.049073],[3.394178,4.641952,-3.067036],[3.648662,1.377652,1.295993],[5.611178,9.565260,-1.778427],[9.403353,6.540019,-6.257931],[4.421706,5.967118,8.979867],[5.140655,8.140720,-6.717198],[-9.473667,-7.513814,-7.941286],[9.572136,7.951737,4.370780],[-1.519719,5.044831,7.707509],[2.001969,-9.471011,7.653824],[-8.560342,-0.276231,9.943505],[2.898355,-9.382768,5.202004],[2.197866,3.325655,4.753078],[4.692014,2.768911,0.813613],[-8.877289,9.110830,-7.038544],[-2.614534,-1.333297,-8.054467],[6.061218,0.456398,0.138982],[-7.446995,2.095916,-7.549614],[-2.895152,7.849918,-3.666426],[-5.040293,2.237758,7.172713],[-8.156492,-0.382330,0.891338],[4.293295,-7.964916,-2.427729],[8.628499,-6.322346,-2.314462],[-0.952396,-1.518761,8.213418],[-4.648440,-9.475533,4.814112],[3.839632,9.940950,-3.337551],[4.730022,-7.552936,-4.951509],[4.215077,5.792833,8.803963],[-3.704654,1.441621,7.851976],[1.647697,-0.340392,8.928248],[-9.548075,-3.360357,-6.481075],[-4.736329,-9.168390,5.755532],[4.776488,-6.578714,-5.173437],[5.664434,8.620263,-4.942431],[9.362383,8.556480,7.065011],[5.014936,7.833969,6.552819],[9.054970,2.424986,-2.392722],[-6.532005,-7.298186,7.818148],[-4.587676,4.814264,6.324106],[-5.416467,-5.156864,-6.264594],[-5.727777,3.889977,5.655393],[7.123468,-5.085123,-1.178056],[8.867502,-8.337589,-7.963712],[1.817225,-6.509380,-3.118148],[-7.410969,-0.595705,-6.075959],[-4.226270,4.217173,5.413005],[-8.990672,7.212383,1.468185],[-1.555043,-3.253138,-2.703099],[-6.358572,-1.875044,0.445903],[-3.404595,1.030801,-5.334591],[0.101083,0.676242,-2.148845],[-7.798143,6.426083,8.229325],[6.545691,-1.372305,-4.507745],[-0.456903,-2.662494,-8.922468],[-8.766417,6.349146,4.313757],[8.854120,-6.409195,6.518047],[9.541894,9.139437,3.120559],[-0.657076,-1.346198,4.985168],[6.891542,3.318237,-0.060703],[5.935775,-9.515374,-7.441435],[-0.773360,2.920132,-7.047915],[2.277004,-0.884407,8.821123],[2.466952,-7.021437,-4.948840],[0.918290,-9.856576,2.943577],[-6.205600,2.237845,6.100979],[-7.744466,5.074015,-4.566014],[9.850810,-2.334344,-8.435584],[4.250137,6.946903,-9.699857],[6.711336,9.280842,-6.858505],[-5.324656,-0.879197,-5.139141],[-4.158300,3.879735,-8.319911],[4.672564,-4.228685,8.573346],[2.434943,-0.628368,-3.100034],[-0.350843,-7.061475,8.108690],[-8.089746,5.744326,9.865317],[-8.297390,8.690832,-1.062477],[9.604871,4.905874,0.719649],[1.451892,4.866496,6.629351],[-0.362988,-5.556279,4.745025],[6.272096,2.269049,-7.231685],[-8.995090,-0.705299,1.419731],[2.952387,7.512922,-1.440589],[8.758173,6.655981,1.107876],[7.454151,0.158688,3.911239],[5.412002,-2.070498,8.828296],[-8.506396,-8.354889,3.472603],[0.833532,-0.825928,3.274769],[9.340684,-5.181330,-5.097738],[3.083530,4.216985,5.819063],[6.764378,-2.910945,4.738667],[5.902929,3.718228,3.641611],[9.208266,-3.101806,7.267806],[-3.803289,-8.808291,3.640165],[-2.487384,-2.162659,7.846496],[-5.683123,7.280744,5.473329],[7.435644,-8.596724,-1.404071],[7.110357,-4.596528,6.112369],[-6.196297,-4.332059,7.066084],[4.971787,-1.716420,0.771745],[7.658293,-3.874500,-2.753697],[7.351416,-4.227698,4.659940],[0.542241,-9.898353,-1.542449],[8.533833,6.754053,6.283505],[-3.117611,9.823188,0.139076],[-9.311193,-8.020393,5.725124],[-5.045558,-8.941461,-6.504054],[3.024548,2.136700,3.156546],[-2.902569,-2.329072,-4.449812],[-9.852014,-4.270531,3.403633],[-7.702833,-6.175968,-3.393857],[-0.630992,-3.510446,-5.197915],[-6.239226,4.368241,5.746502],[7.790566,6.506120,-8.461067],[1.653810,-8.172194,-4.641574],[3.152814,-8.363455,5.695328],[5.058556,2.268869,6.616379],[-8.520562,-2.934851,1.382395],[-3.323156,3.480996,-6.370266],[8.849791,-1.507170,7.665529],[4.462557,2.935768,-6.340272],[7.848437,-4.992191,0.917703],[-1.421991,7.106074,2.563277],[-8.595538,8.872909,-9.264310],[1.643065,-4.181404,5.151164],[-1.080584,-8.261179,-3.562786],[5.313937,0.815280,1.402176],[1.998714,-4.709577,-4.186874],[7.233115,-4.117117,-4.426742],[-1.901943,-1.760915,2.628497],[-3.615043,6.805751,7.219134],[5.489138,5.195718,1.436746],[8.592168,-1.024045,1.665775],[-5.048792,1.164267,-5.160433],[2.072827,-8.369165,6.884470],[5.713395,9.853197,-9.353191],[5.747519,5.443061,-7.003995],[7.696350,6.237255,-0.575646],[-8.136045,4.581524,2.810216],[5.947803,-5.075592,-3.926616],[9.462557,4.390224,-8.030726],[6.264471,0.572499,-2.473543],[6.302120,-2.052860,5.522970],[-4.764053,7.405522,-1.822528],[1.687783,5.231938,8.612098],[5.587060,7.800541,4.415457],[-1.223701,5.445479,-1.838802],[-4.712295,6.482086,-6.004989],[9.159473,-0.444073,4.205510],[9.420038,-3.436270,-6.835023],[-4.088948,-3.548051,5.524995],[-7.017635,2.634505,0.559409],[0.207964,5.719134,-6.249571],[-6.423985,-8.950069,-2.461135],[4.962122,-8.539633,-2.936366],[3.118885,-4.101748,3.651271],[2.675817,-6.898023,9.087883],[-5.408792,2.004314,-4.703980],[-9.832659,0.625336,5.372917],[-7.777063,7.356500,6.536769],[8.374435,-8.053052,-6.806843],[8.880775,0.930748,-7.194973],[-6.010369,-1.834134,9.891348],[8.325535,7.827027,-0.103931],[9.024221,8.114772,-0.938780],[-1.567263,5.183382,3.614484],[-6.005368,7.588160,-7.253288],[1.702474,4.816543,-1.271793],[-1.926443,-0.171591,-7.449691],[-0.718745,4.592995,-3.654734],[-7.391613,3.475417,-6.306757],[-8.070984,-3.951572,-1.871409],[6.255222,3.594332,7.966097],[2.367351,0.628891,2.785769],[7.507450,9.230789,3.773645],[-9.561617,2.161813,5.562341],[-0.084516,-1.000944,-0.674399],[-0.788993,-8.783417,-8.213476],[9.809832,5.633796,1.588214],[8.111666,1.131449,8.553722],[-1.445658,-4.912264,4.756578],[2.665896,6.676702,-5.914674],[3.698476,-2.773751,-1.473138],[5.767202,-9.379993,5.535449],[-0.056548,-2.680444,5.369160],[-5.269886,1.276992,6.927116],[9.475688,6.028666,8.367198],[-5.473894,-5.408638,-0.667007],[1.861104,-0.824801,1.219022],[7.704828,-7.003638,1.707699],[2.733365,-2.817006,-7.950404],[5.509682,-9.351521,5.683316],[8.546948,-9.343769,-6.540742],[-5.480433,2.060552,2.943261],[-4.214267,-9.388998,7.842096],[7.063930,2.186787,6.090181],[6.044205,0.444043,2.985310],[3.284922,-1.365644,-7.779609],[7.701446,-4.830889,-7.167231],[1.147634,-5.613995,7.646181],[5.225809,-0.416737,-1.660777],[-7.270550,2.683366,-0.330986],[-9.637985,9.848623,9.973708],[6.700296,-7.007528,2.263603],[-1.724254,-0.926510,-6.987851],[-8.613239,-6.389307,6.455792],[-8.091925,-5.235087,8.353904],[5.826152,8.395864,1.799548],[-6.414289,8.388166,-4.218986],[4.214266,4.678597,-1.882006],[-1.324145,5.187796,8.898526],[6.900300,-2.736212,4.548755],[-9.879337,-0.452768,6.773705],[2.200185,-0.244884,0.605177],[2.627813,6.223853,-1.235030],[1.940448,-5.126690,7.810279],[2.139164,-1.503831,-2.070784],[4.617581,-2.283886,-7.973116],[0.064226,8.056604,-0.433923],[1.782404,-9.659734,-9.508429],[-5.247262,3.869535,-4.738478],[-8.555284,6.564173,-4.318315],[6.489739,8.452308,2.597110],[2.427312,9.180322,-3.520700],[7.985639,3.637801,8.951429],[-8.333783,9.291189,-9.450343],[-1.778599,7.037673,6.128517],[-1.751598,-1.612854,-8.869567],[1.103735,-0.645786,5.103200],[4.835508,-2.117092,-6.463087],[-1.929001,8.966216,-2.676507],[-6.911845,9.013654,-9.413464],[8.559829,8.015563,-9.419794],[5.231158,3.914560,-5.539283],[-4.061945,-2.399764,5.573200],[-6.666495,4.911479,3.844313],[-7.774225,8.408664,-2.647788],[-8.011801,-2.028648,1.261416],[-0.549327,-3.870490,-1.027224],[-8.038381,-3.845368,-2.511064],[2.753470,-5.204253,-3.644104],[-0.155727,8.703522,-3.565260],[4.534930,9.567465,-0.610973],[0.596347,7.946294,2.135553],[-1.192930,-1.068908,-6.126154],[-8.201542,-9.307039,-6.352872],[5.729276,7.675169,-0.687533],[-8.359711,-1.797742,3.605797],[-0.283204,7.850475,9.263574],[6.413816,-8.669001,-8.302878],[-4.092901,-3.297046,5.771383],[-6.595752,9.453886,7.016831],[8.149398,-8.118456,6.075902],[8.290960,-7.622286,9.824686],[1.924091,8.592385,4.361348],[-8.307164,2.232480,-5.357396],[4.390272,5.684271,-4.851292],[6.584310,-7.506265,0.462336],[8.395020,1.143435,-1.306329],[7.031231,2.728373,7.274684],[2.272543,3.547037,9.423765],[1.084182,-9.482872,4.592601],[-2.814822,-6.135406,-8.459146],[-0.631201,-9.433277,7.235917],[6.219674,-3.216299,-5.143565],[2.329997,1.346906,-9.105035],[-1.649434,-4.327524,-3.137719],[8.369167,-7.922298,5.979482],[3.884348,-1.350663,2.371194]], dtype = "float64")#candidate|4824|(364, 3)|const|float64
bop_4825 = relay.greater_equal(const_4770.astype('bool'), const_4824.astype('bool')) # shape=(364, 3)
bop_4829 = relay.mod(uop_4773.astype('float64'), relay.reshape(bop_4816.astype('float64'), relay.shape_of(uop_4773))) # shape=(364, 1)
output = relay.Tuple([call_4762,call_4769,const_4776,uop_4794,call_4798,var_4799,const_4800,uop_4804,call_4808,var_4809,bop_4825,bop_4829,])
output2 = relay.Tuple([call_4763,call_4771,const_4776,uop_4796,call_4801,var_4799,const_4800,uop_4804,call_4810,var_4809,bop_4825,bop_4829,])
func_4839 = relay.Function([var_4755,var_4756,var_4799,var_4809,], output)
mod['func_4839'] = func_4839
mod = relay.transform.InferType()(mod)
var_4840 = relay.var("var_4840", dtype = "uint8", shape = (11, 14, 9))#candidate|4840|(11, 14, 9)|var|uint8
var_4841 = relay.var("var_4841", dtype = "uint8", shape = (11, 14, 9))#candidate|4841|(11, 14, 9)|var|uint8
var_4842 = relay.var("var_4842", dtype = "uint64", shape = (50,))#candidate|4842|(50,)|var|uint64
var_4843 = relay.var("var_4843", dtype = "float32", shape = (2160,))#candidate|4843|(2160,)|var|float32
output = func_4839(var_4840,var_4841,var_4842,var_4843,)
func_4844 = relay.Function([var_4840,var_4841,var_4842,var_4843,], output)
mutated_mod['func_4844'] = func_4844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_4869 = func_3643_call()
call_4870 = func_3643_call()
func_4839_call = mod.get_global_var('func_4839')
func_4844_call = mutated_mod.get_global_var('func_4844')
const_4875 = relay.const([1,-10,-2,-5,2,10,5,8,7,10,-10,3,1,5,-3,-6,2,-9,4,-7,-8,-10,-2,-8,6,5,8,3,1,-5,-6,-7,8,-3,1,-1,-8,1,1,-8,-9,10,-3,7,5,-6,-7,-7,10,9,1,-2,5,8,-3,1,-1,1,4,-8,2,-9,-7,-5,-8,10,-8,-10,-4,-7,7,2,8,2,1,-10,3,3,-8,9,-5,-9,1,-4,-10,-3,8,4,9,8,7,-3,9,-4,-2,-5,2,-10,3,-10,-4,9,10,-7,-1,-7,5,3,-3,1,10,4,1,-6,9,-7,-1,-6,2,-8,-10,-3,6,-9,5,-6,-7,8,8,4,10,-10,-8,9,-2,4,5,-5,5,10,3,4,8,-7,4,4,3,-4,-10,4,4,-2,-5,-10,10,-2,-5,2,-6,2,2,-7,-9,9,-6,3,-9,8,1,-6,-7,-3,-5,-8,6,3,7,5,1,-7,-5,8,5,-1,4,-9,-6,-3,-9,-3,2,-3,6,-5,1,5,-10,3,-10,4,-2,7,7,-10,-3,-1,9,-4,-3,-5,10,-4,4,8,10,8,-6,1,-6,-10,-3,4,9,8,-4,8,-2,6,8,10,5,1,4,5,-4,-9,-7,9,-8,8,10,7,8,10,7,-5,9,-4,-9,-4,-3,10,-5,-6,7,-8,9,1,-1,3,-2,-10,6,5,-2,-8,4,-5,-6,4,2,-2,-9,10,3,-8,2,5,2,3,1,-7,9,3,-2,1,-9,6,-8,-8,10,8,-3,-9,-5,7,6,-10,-7,-4,-10,-4,10,8,6,8,3,-5,-9,1,1,-9,-5,5,1,-2,6,3,4,3,9,-6,-7,9,7,1,10,-6,8,9,-3,-4,5,-5,9,10,1,-10,-7,8,1,-6,9,5,5,9,-3,7,8,-8,3,-5,-6,-7,-4,-8,2,5,8,-9,4,-3,10,-6,3,7,5,-2,-5,-3,4,3,7,-9,9,-10,-7,1,-4,-10,-4,4,-7,10,7,-4,-7,7,4,-1,-4,-6,-5,-10,6,5,-7,7,7,-7,-1,3,7,-3,6,5,-6,-2,-8,1,2,-3,-7,2,-10,-8,1,10,-3,-2,9,-8,-8,8,-3,-1,-7,4,5,-9,7,7,-9,8,9,9,-7,3,-9,3,-1,7,-7,3,-8,-8,-8,-3,-9,6,-2,6,-6,-5,1,7,10,-2,-4,2,7,-7,4,-1,2,3,-6,3,9,5,6,1,-5,-5,-10,-2,-7,-2,-10,6,-4,-8,-7,10,-1,-5,8,-4,-1,-3,8,-7,-4,-7,-4,8,9,8,-9,3,7,8,6,-10,3,-7,9,-7,5,-9,7,8,-1,4,-7,9,-5,-9,1,7,3,6,-9,6,8,-4,-1,1,-9,4,-1,9,-4,-8,-8,-8,10,2,8,3,3,1,10,-8,6,-4,-8,7,-1,-6,10,9,-9,-9,-9,5,2,6,7,-10,9,-1,8,9,-1,-10,9,10,10,-5,4,1,-5,7,-2,-4,-10,9,1,7,5,6,7,-1,7,-8,-7,6,-7,-3,-9,-1,2,-7,10,-8,1,8,-9,-7,-9,7,3,10,-6,8,-2,4,-8,10,7,2,9,6,-3,6,7,7,-9,-7,-2,2,-3,-9,-9,1,-6,-2,7,4,-2,-9,4,-8,-5,-9,1,10,-10,-8,-7,-3,-4,-7,-6,10,-1,-8,4,-9,-2,-5,-2,8,3,10,-5,-2,-1,-1,-10,-6,7,-8,-9,-2,-5,-5,-10,-8,-9,3,-3,-4,-4,9,3,4,9,-2,7,1,-9,-1,-1,3,9,-3,-3,-5,1,8,1,-5,2,-3,1,4,-2,10,6,-3,-1,5,3,-10,6,-10,2,1,3,4,8,4,3,-3,-1,-3,-3,6,-10,10,-6,7,6,-1,-10,2,5,9,-4,-6,-7,5,7,5,2,5,8,6,-10,2,4,-9,2,4,8,-8,8,4,9,-5,7,-8,2,8,1,-3,5,-1,-7,2,-8,10,-6,-3,4,-5,-10,5,-5,5,6,-10,-7,10,9,-9,2,2,4,4,-3,-10,-2,-6,-1,-4,6,-7,-6,-7,9,-1,-5,-3,-6,10,8,4,-6,-8,9,5,-9,-10,-9,1,5,1,2,-3,-10,10,3,-9,-2,8,-10,-9,-7,-3,6,-6,-3,4,-2,-6,8,-2,9,3,-6,-5,6,-5,-2,9,4,2,-2,-5,-1,-9,-8,-3,-10,-2,-9,-5,10,-8,-10,-2,-2,-4,-9,1,9,-1,8,-5,10,5,4,-2,1,9,-7,-8,5,3,8,-6,-1,7,10,-8,-9,8,4,-10,-2,-6,1,-7,-5,-2,6,1,6,-9,-10,-7,-1,-4,8,1,6,8,3,-4,8,9,-6,3,8,10,-10,-7,-3,9,-9,-1,8,-10,7,-9,-4,10,1,-3,7,7,2,2,6,-7,2,10,9,2,6,2,-10,-9,8,-1,7,4,-3,5,8,6,1,-9,-8,8,-2,3,3,-4,5,-7,5,-2,-8,10,10,-5,4,3,4,-7,2,-10,-3,5,2,-2,3,-5,-2,8,-5,-5,8,-2,-9,-1,-10,-3,5,-2,-10,-2,-2,-6,6,-6,-9,-1,-9,1,3,-9,3,7,-2,5,-5,8,7,-2,8,-3,9,5,-8,-7,8,-3,10,9,9,5,-2,-3,-7,-2,-3,3,9,-1,2,-10,-4,3,3,5,5,-9,-4,-6,5,5,2,-9,4,10,8,8,2,-7,3,-8,1,-7,-10,-6,-10,-3,9,-5,-2,8,-6,-3,8,-5,1,9,-3,-8,1,5,5,6,-10,4,10,3,10,4,5,9,5,7,-6,8,-9,9,-3,-5,-7,-6,-4,-1,-4,-4,-6,-4,-1,-6,7,4,-1,9,7,-8,4,-1,2,5,-9,-6,2,-4,4,-1,6,-7,8,10,10,10,-1,-4,-3,10,6,6,7,-2,-2,1,8,-4,4,2,1,7,2,-4,10,8,-1,5,-6,8,-2,5,-7,-8,2,-4,-1,6,4,-2,-7,10,7,-3,-6,1,10,-10,5,-7,-8,-4,1,4,-4,-10,7,7,9,8,-3,-3,-7,9,1,-10,6,-7,6,4,10,-2,-6,-2,1,10,1,6,-6,-9,-10,5,-5,-4,-8,4,2,4,5,5,-5,9,-10,-1,9,-3,-1,6,5,-8,6,-8,5,10,-7,3,2,6,-6,-6,9,5,-10,-3,-9,-7,-2,-5,6,-7,2,2,2,4,7,5,1,-3,1,7,8,4,10,6,-7,-8,-3,-3,-10,-6,-8,4,-1,2,4,1,-5,3,6,-1,4,-4,-2,3,3,-3,-2,-2,-4,4,-6,-4,-10,6,6,-1,-9,-7,-3,4,-2,8,-4,9,-5,-9,-8,1,10,5,7,6,2,-8,6,10,-1,-3,9,4,-5,-4,-6,2,-4,-1,5,-6,1,-4,8,-6,-4,-5,-3,8,1,-2,9,-2,2,-4,1,8,6,10,7,2,-6,-6,-5,8,6,-5,-5,8,2,-8,1,-4,7,-10,9,6,8,-6,-8,-3,6,1,-6,-9,-10,1,3,8,-9,-4,2,-8,4,5,8,-6,5,6,-6,-10,-1,10,8,6,8,-10,2,3,1,7,8,-4,1,-6,6,-5,-9,-3], dtype = "uint8")#candidate|4875|(1386,)|const|uint8
var_4876 = relay.var("var_4876", dtype = "uint64", shape = (50,))#candidate|4876|(50,)|var|uint64
call_4874 = relay.TupleGetItem(func_4839_call(relay.reshape(const_4875.astype('uint8'), [11, 14, 9]), relay.reshape(const_4875.astype('uint8'), [11, 14, 9]), relay.reshape(var_4876.astype('uint64'), [50,]), relay.reshape(call_4869.astype('float32'), [2160,]), ), 0)
call_4877 = relay.TupleGetItem(func_4844_call(relay.reshape(const_4875.astype('uint8'), [11, 14, 9]), relay.reshape(const_4875.astype('uint8'), [11, 14, 9]), relay.reshape(var_4876.astype('uint64'), [50,]), relay.reshape(call_4869.astype('float32'), [2160,]), ), 0)
func_2937_call = mod.get_global_var('func_2937')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_4903 = relay.TupleGetItem(func_2937_call(), 0)
call_4904 = relay.TupleGetItem(func_2939_call(), 0)
output = relay.Tuple([call_4869,call_4874,const_4875,var_4876,call_4903,])
output2 = relay.Tuple([call_4870,call_4877,const_4875,var_4876,call_4904,])
func_4923 = relay.Function([var_4876,], output)
mod['func_4923'] = func_4923
mod = relay.transform.InferType()(mod)
mutated_mod['func_4923'] = func_4923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4924 = relay.var("var_4924", dtype = "uint64", shape = (50,))#candidate|4924|(50,)|var|uint64
func_4923_call = mutated_mod.get_global_var('func_4923')
call_4925 = func_4923_call(var_4924)
output = call_4925
func_4926 = relay.Function([var_4924], output)
mutated_mod['func_4926'] = func_4926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mod.get_global_var('func_2928')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_4938 = func_2928_call()
call_4939 = func_2928_call()
func_1158_call = mod.get_global_var('func_1158')
func_1162_call = mutated_mod.get_global_var('func_1162')
var_4941 = relay.var("var_4941", dtype = "float32", shape = (2160,))#candidate|4941|(2160,)|var|float32
call_4940 = relay.TupleGetItem(func_1158_call(relay.reshape(call_4938.astype('uint8'), [105,]), relay.reshape(var_4941.astype('float32'), [2160,]), ), 3)
call_4942 = relay.TupleGetItem(func_1162_call(relay.reshape(call_4938.astype('uint8'), [105,]), relay.reshape(var_4941.astype('float32'), [2160,]), ), 3)
output = relay.Tuple([call_4938,call_4940,var_4941,])
output2 = relay.Tuple([call_4939,call_4942,var_4941,])
func_4954 = relay.Function([var_4941,], output)
mod['func_4954'] = func_4954
mod = relay.transform.InferType()(mod)
mutated_mod['func_4954'] = func_4954
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4955 = relay.var("var_4955", dtype = "float32", shape = (2160,))#candidate|4955|(2160,)|var|float32
func_4954_call = mutated_mod.get_global_var('func_4954')
call_4956 = func_4954_call(var_4955)
output = call_4956
func_4957 = relay.Function([var_4955], output)
mutated_mod['func_4957'] = func_4957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3779_call = mod.get_global_var('func_3779')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_4965 = func_3779_call()
call_4966 = func_3779_call()
func_2557_call = mod.get_global_var('func_2557')
func_2558_call = mutated_mod.get_global_var('func_2558')
call_4970 = func_2557_call()
call_4971 = func_2557_call()
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_4978 = relay.TupleGetItem(func_2534_call(), 0)
call_4979 = relay.TupleGetItem(func_2536_call(), 0)
output = relay.Tuple([call_4965,call_4970,call_4978,])
output2 = relay.Tuple([call_4966,call_4971,call_4979,])
func_4989 = relay.Function([], output)
mod['func_4989'] = func_4989
mod = relay.transform.InferType()(mod)
output = func_4989()
func_4990 = relay.Function([], output)
mutated_mod['func_4990'] = func_4990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3595_call = mod.get_global_var('func_3595')
func_3597_call = mutated_mod.get_global_var('func_3597')
call_4995 = relay.TupleGetItem(func_3595_call(), 0)
call_4996 = relay.TupleGetItem(func_3597_call(), 0)
output = relay.Tuple([call_4995,])
output2 = relay.Tuple([call_4996,])
func_5015 = relay.Function([], output)
mod['func_5015'] = func_5015
mod = relay.transform.InferType()(mod)
mutated_mod['func_5015'] = func_5015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5015_call = mutated_mod.get_global_var('func_5015')
call_5016 = func_5015_call()
output = call_5016
func_5017 = relay.Function([], output)
mutated_mod['func_5017'] = func_5017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2065_call = mod.get_global_var('func_2065')
func_2067_call = mutated_mod.get_global_var('func_2067')
call_5018 = func_2065_call()
call_5019 = func_2065_call()
var_5023 = relay.var("var_5023", dtype = "float64", shape = (7, 5, 3))#candidate|5023|(7, 5, 3)|var|float64
bop_5024 = relay.floor_mod(call_5018.astype('float32'), relay.reshape(var_5023.astype('float32'), relay.shape_of(call_5018))) # shape=(7, 5, 3)
bop_5027 = relay.floor_mod(call_5019.astype('float32'), relay.reshape(var_5023.astype('float32'), relay.shape_of(call_5019))) # shape=(7, 5, 3)
bop_5034 = relay.not_equal(bop_5024.astype('bool'), relay.reshape(call_5018.astype('bool'), relay.shape_of(bop_5024))) # shape=(7, 5, 3)
bop_5037 = relay.not_equal(bop_5027.astype('bool'), relay.reshape(call_5019.astype('bool'), relay.shape_of(bop_5027))) # shape=(7, 5, 3)
uop_5047 = relay.acosh(call_5018.astype('float32')) # shape=(7, 5, 3)
uop_5049 = relay.acosh(call_5019.astype('float32')) # shape=(7, 5, 3)
uop_5053 = relay.asin(uop_5047.astype('float32')) # shape=(7, 5, 3)
uop_5055 = relay.asin(uop_5049.astype('float32')) # shape=(7, 5, 3)
output = relay.Tuple([bop_5034,uop_5053,])
output2 = relay.Tuple([bop_5037,uop_5055,])
func_5088 = relay.Function([var_5023,], output)
mod['func_5088'] = func_5088
mod = relay.transform.InferType()(mod)
mutated_mod['func_5088'] = func_5088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5089 = relay.var("var_5089", dtype = "float64", shape = (7, 5, 3))#candidate|5089|(7, 5, 3)|var|float64
func_5088_call = mutated_mod.get_global_var('func_5088')
call_5090 = func_5088_call(var_5089)
output = call_5090
func_5091 = relay.Function([var_5089], output)
mutated_mod['func_5091'] = func_5091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2065_call = mod.get_global_var('func_2065')
func_2067_call = mutated_mod.get_global_var('func_2067')
call_5130 = func_2065_call()
call_5131 = func_2065_call()
func_4656_call = mod.get_global_var('func_4656')
func_4658_call = mutated_mod.get_global_var('func_4658')
const_5134 = relay.const([3.843452,-8.323556,-5.853411,3.962726,-4.386027,7.347788,7.487251,1.123505,5.526854,7.324087,5.730353,5.656438,-6.885077,7.673674,-5.262263,0.849641,-5.871248,-0.543894,3.604892,-8.305879,-2.576590,-2.475975,1.297857,-4.718223,3.755870,-3.340033,5.906888,5.737313,-4.015512,6.988225,-6.218325,-9.565519,0.382038,2.126955,2.934891,-5.303646,-5.726180,0.625483,-0.322571,-3.169093,9.330753,2.434379,-7.118321,-2.912978,3.679417,-9.798582,5.913791,-6.591951,3.254667,5.886519,-5.836285,-5.998622,-0.766580,-5.230909,5.058922,-1.781721,3.000525,4.907756,-3.371338,-6.016190,-4.195448,1.679642,-5.720991,-3.897303,-6.641734,-1.742354,0.300954,9.918479,-4.474785,-4.620934,-8.833492,-4.303057,-4.542939,-7.829842,-9.093097,-4.924467,1.200691,-5.224700,-7.963887,1.286133,-0.369137,2.146328,-0.181207,5.939392,-6.473870,0.235065,-5.130848,-2.442721,9.179180,5.912609,-0.592831,-4.968585,-4.055664,6.147160,1.738528,1.894758,-6.487381,1.576630,9.370153,4.322506,6.914443,-7.237394,-4.725536,-9.054430,5.831000,2.989247,-2.000062,2.113693,-0.232885,1.700827,5.336205,3.247288,3.785786,0.774422,8.905829,-6.320317,1.289409,-0.550904,4.688803,2.413387,1.837776,-4.301174,6.809052,-9.066941,-1.720019,6.266081,-4.575099,6.203278,-8.676766,-9.768995,6.052878,-4.319075,3.935458,2.215181,3.569211,-0.452860,7.410106,-7.051679,-9.533138,5.712185,-6.149399,2.072843,0.578310,-7.479631,8.935365,-7.949330,6.302471,8.671489,0.331395,-8.395076,5.542623,9.852294,1.872724,3.407167,-3.376785,8.048473,-5.235944,3.308168,8.895940,4.844071,-0.561175,-7.932499,-1.877532,5.428146,-2.771802,-2.823934,-3.860105,-5.329343,-9.890608,0.064018,-6.963484,1.531695,0.820675,0.184841,3.126646,9.113092,-7.626319,1.062325,4.202853,-9.779929,-2.362068,-8.655303,4.468793,3.199627,-5.262351,-9.372109,4.881599,8.643643,0.233107,1.792073,0.755476,-4.685566,-1.474622,-9.920846,-0.504546,2.151583,-3.210420,6.593515,2.489424,5.894849,-4.932365,-2.332444,9.516507,-4.342722,-2.416185,3.480038,0.859506,9.651935,-7.364589,8.722196,1.307562,6.093190,-6.593185,8.354679,5.100346,-9.809869,-2.275344,4.303034,-2.427295,-2.465024,-1.333448,2.637559,-0.934813,1.174207,-7.941009,3.958946,-5.185429,0.594239,-6.049638,-3.355019,2.649631,9.824219,9.840964,-6.202655,-0.797918,6.556495,-6.568835,-4.234927,2.458095,3.564217,1.458775,8.468907,-8.390620,-2.322835,2.634726,-8.676030,1.306156,1.928049,6.243998,0.465112,-3.104809,-5.712607,3.516879,7.734826,-3.945498,-6.174581,-1.013691,0.545928,6.731838,1.214444,-3.014336,5.660224,3.093449,6.657194,-5.674967,-8.779592,7.847068,-0.416171,-7.833415,9.138445,-3.674979,-0.112141,-5.085887,5.856915,9.371913,-5.771546,7.558919,-1.914368,-4.587573,5.064300,-1.446925,-6.281117,-4.466192,-2.996907,-5.716213,3.013653,6.175902,5.369486,-1.931980,8.285249,3.563807,9.162623,-8.880260,8.201570,3.594363,3.751067,7.761936,5.173188,-4.499560,-0.930307,-5.810357,-2.349740,7.809946,7.569842,-6.421402,2.365556,-2.749862,-1.918089,-4.467965,-7.040571,-1.325073,0.225891,9.340515,6.802072,-8.004201,-3.535173,-3.787437,9.254522,5.224558,4.925922,4.449065,4.141042,1.173524,-3.330021,-7.271404,-6.067230,7.522452,-6.828514,-4.361056,-7.773387,9.295587,5.828238,7.530130,4.498625,2.189490,1.202348,8.035280,4.337769,-3.133731,9.914787,-6.799683,-0.578779,3.368123,-5.574004,-5.299078,4.749354,2.048587,5.407987,4.823809,7.690692,0.358613,0.292139,-8.264101,-9.261594,7.661759,9.625986,5.214152,2.694720,-1.888203,-6.228014,-9.592934,-9.107028,3.610896,2.801307,-8.479465,4.174794,5.478501,-8.086245,9.296357,-6.642424,-9.983970,-4.605530,8.364462,2.453918,6.126803,2.616081,9.956812,-9.643103,2.432786,3.457068,-7.118052,-0.246766,4.726918,3.614878,5.972905,2.073092,4.368637,4.628870,9.772366,-1.869450,-9.702005,2.591292,7.279309,-7.526917,9.776588,-9.244334,7.368350,5.319767,-3.309810,1.457563,-6.749429,2.741971,3.183830,8.031681,2.208185,9.860765,9.748319,1.785718,-3.578194,6.045442,1.184636,-4.718423,-2.629594,-8.084226,-9.763764,-8.394178,-3.581563,7.125869,-4.297784,0.986310,-4.937037,-0.859582,7.572547,9.013554,2.181330,0.068381,-4.331977,2.059636,9.698302,1.303080,-0.875639,-3.201525,-3.005641,-6.201708,-2.110264,-7.092523,-7.527936,-2.947886,7.745224,-3.889393,3.731734,2.536853,8.183118,-4.320758,-5.046603,-0.160884,-1.245382,-2.265040,-9.670788,5.908751,-5.357151,-5.539205,-6.084449,-9.928697,-6.439114,6.156632,-0.864292,5.196350,2.233279,-6.009099,-8.867187,-3.592332,8.075270,0.292719,8.621013,5.693690,-6.216644,6.137202,-5.621510,-6.143789,-7.542414,-1.562576,4.486354,-7.238335,-1.071037,-2.722663,1.224273,3.696266,1.033288,5.402100,3.479461,-1.130467,-7.496699,6.497220,7.976071,6.987137,5.600953,-3.673781,2.199426,8.812944,5.618838,-8.022725,5.303591,-6.581196,-6.889638,0.423178,-2.717205,-2.431038,8.657045,4.965389,3.015356,-1.532260,6.829498,4.253806,0.388931,-1.945159,9.012331,-1.518296,-5.470401,7.335375,-2.174621,-1.222254,6.825350,0.929794,-9.120030,0.850741,7.067128,-9.919662,1.146918,2.328603,3.107523,4.788765,9.331900,3.759482,-9.564887,-5.889758,0.239978,7.164361,1.273436,-0.312791,-8.872434,-5.922814,9.304931,-2.868492,-4.588717,-3.861325,8.227468,-4.617239,4.385649,-8.123675,9.707439,-4.273691,4.518556,0.393926,-9.742214,2.752916,9.159368,-3.460971,-0.332991,6.236947,-6.305604,-2.286051,-5.075108,-4.990304,-4.776883,4.738403,-5.349545,1.431547,-4.609642,-9.543917,-6.736130,6.418308,5.660923,-4.528154,-3.745923,9.796741,1.389795,-3.902261,-3.375439,3.009703,4.185401,-8.053458,-4.218111,4.261599,-2.988657,7.381707,7.146344,4.684593,-4.177282,0.721596,6.776516,-7.622695,-6.604006,-4.275625,4.402838,-4.640434,2.365111,-7.099925,-0.600293,-4.804530,-7.639776,1.735707,-7.025764,-3.031813,-0.088061,6.519075,-1.503585,4.509190,-1.295289,-0.802722,1.683268,-5.858824,6.882903,5.798453,-7.123040,3.241823,7.936451,5.194511,6.612400,2.441176,3.991071,0.114725,-9.450335,-6.096307,4.741444,-3.520341,7.107985,7.112874,-3.526097,-3.526629,-3.867542,3.180367,-6.881636,7.594736,-8.051481,-5.879800,9.295675,-1.485655,-1.271438,-1.676556,3.854724,-4.615768,4.143637,8.672761,-1.461597,-4.867125,1.774810,0.027863,-6.245668,0.196113,4.952096,-2.011769,-6.738978,-8.257870,-5.323592,-2.789794,7.549533,-4.686146,-6.087149,-9.950415,-7.818487,0.800282,-1.298890,4.748891,1.199616,-8.059465,-9.463776,6.363808,2.049574,2.784460,-7.329961,3.582235,0.203925,-6.349144,4.980760,-2.971490,7.336837,-6.401821,-5.286553,4.268638,-8.393883,-6.549104,-3.419122,5.242064,8.247494,2.845265,-4.753853,-3.754835,8.190037,7.479858,0.434979,-5.645563,2.141135,6.857617,-0.279033,8.723002,-5.492511,-8.827421,8.448624,-2.032909,-2.797564,-3.827193,-8.151408,-1.153753,3.976356,-3.606378,-3.652204,-4.354437,5.631489,0.512018,-4.585259,7.182210,9.376844,9.533285,0.934707,0.737484,-8.485430,4.729523,-9.010354,-3.489360,4.293126,3.814242,3.231025,-1.946297,6.537932,-1.260801,-5.525454,-0.753262,0.850546,7.657025,8.739080,1.085796,-4.313041,-6.860538,-5.122749,7.954943,3.790807,3.364803,-4.462814,-8.041734,-5.648674,4.698103,-4.338151,-4.072585,2.806535,-1.696589,-8.919491,-5.771453,-7.883923,-1.199282,5.440897,5.337937,-1.240171,5.642676,-0.451740,-4.115312,5.653131,3.000644,7.641605,5.102117,6.212836,4.873800,7.354769,6.493503,-7.266091,2.660564,3.355293,-1.463093,3.706509,-4.346684,9.699214,-0.060173,-5.633529,-9.297077,1.083451,-6.980058,-5.941759,4.010876,-8.546473,9.570517,-2.392777,-0.464673,3.201577,0.676947,6.183997,-6.136086,-2.166178,6.192222,2.060075,-9.898974,6.561013,0.713122,-1.235114,-5.977005,4.641536,0.615591,-9.527091,0.084246,-6.764773,-3.553571,-8.134419,5.743967,-8.408956,1.980333,-4.601352,-3.334705,0.585801,2.229426,-7.869385,-0.870576,-8.435657,0.695890,9.871582,-0.564797,9.964005,6.042886,-8.429590,-5.654923,1.380902,-2.117297,1.504190,-3.145566,-2.756629,-7.370666,5.011996,6.619622,-1.669993,-8.111912,3.522146,-0.626006,7.865902,1.632217,-5.006994,-5.823938,9.816537,2.677451,-7.209654,3.867611,-9.322451,8.049675,-1.107332,6.286510,-3.791641,1.058151,-9.282344,-4.078001,0.407747,1.339602,-8.711807,-6.193333,-5.111752,-1.955917,3.447102,-7.545388,-4.506316,1.117026,-8.010468,4.382067,-7.950312,-8.414537,-2.975228,-1.532886,-6.845598,4.205822,-2.900572,4.053283,-3.361787,0.957642,5.043836,8.786692,0.036887,0.948460,6.558473,-6.422691,2.783689,-5.514680,-4.251225,0.549732,6.291672,6.656954,-5.599087,-7.946063,-8.266390,-6.638409,6.930626,1.411944,-0.495451,-7.404869,-3.299318,1.518803,-5.037464,1.858928,9.175443,2.487440,-7.069670,-9.443287,1.583050,9.094002,-9.997827,-6.614601,9.585901,-9.150427,-0.030823,5.254172,-6.027322,-4.102653,-4.809066,4.524648,-4.706643,-0.451346,7.911249,-0.735944,-2.507506,-8.461218,9.057455,-0.826428,0.489587,5.976394,-4.220501,-6.030825,4.416773,1.279832,-5.591935,2.717829,3.470856,1.013410,-6.665494,-2.581675,0.301917,0.704837,9.945597,3.265294,5.268195,-5.112308,9.516192,-9.152514,4.349121,9.889400,-8.049116,-7.793204,-8.690622,-4.780781,3.366691,9.290247,6.813948,-8.289678,2.064670,8.163802,-9.052706,-4.907519,-9.015082,-1.371997,-2.503709,-4.882983,1.155252,-6.769510,-2.161710,-0.478350,4.403040,2.691876,9.132403,7.880972,7.280067,6.004311,-3.825682,-4.537606,-0.869625,-3.307095,-1.876442,6.727078,-5.453656,1.538628,-1.805267,-8.122635,-8.712693,-2.833310,1.808769,-1.048201,3.453005,-0.153140,5.390159,-6.323946,-6.210336,-7.284705,7.838460,-7.557619,2.353574,6.350498,7.459980,-3.433596,2.050822,4.940706,-4.748810,3.582041,7.448337,-7.346972,-2.078230,-8.936040,6.996077,8.501707,-1.154860,-9.688049,-5.116199,7.825502,-0.565163,5.089696,0.833861,-7.010281,-3.560678,0.470131,-3.111487,-6.560987,-9.010528,9.127486,5.342745,7.694410,-5.810414,3.542746,4.545236,-7.080401,-8.363031,9.413861,6.445753,-4.228993,1.946991,7.176833,1.714857,1.378711,2.756581,8.144888,6.764590,-9.539004,4.073189,-0.247534,5.236991,-4.137648,-4.442890,4.118766,8.973289,4.101093,7.416995,-3.731265,-6.628522,-8.485882,-2.085721,-9.997504,-5.246760,8.251905,3.775777,-8.533277,6.655860,-1.903601,-8.408545,0.969282,0.448556,6.273407,0.013579,6.496715,9.026884,6.701478,-0.415674,3.821068,9.030915,-5.811278,0.312225,1.285926,5.765892,-0.982210,2.254596,3.780106,3.720173,1.635372,4.783253,-3.596089,-0.234498,-5.872442,-0.192678,-1.249232,4.959159,-5.058440,6.173828,6.826168,9.002726,4.517399,4.382701,-1.070793,8.074646,6.635657,-1.814346,6.917462,-6.326563,5.134543,7.899048,-9.256919,-0.847877,6.013494,-1.062816,-6.227736,6.996538,-5.561656,0.502451,8.209997,-3.928937,8.204280,-5.542778,4.618954,-2.121487,8.005114,-4.225500,-7.468476,-1.731575,7.928524,-9.509424,4.376179,4.764399,-6.448906,-4.086271,6.563574,1.386759,7.663198,3.086316,-7.958828,-4.245724,0.234453,3.270183,4.066033,-6.674443,-9.135011,6.556765,-9.094878,2.032572,3.163657,-5.077538,-8.286834,0.279813,8.448391,-1.502609,-6.487095,-3.479706,-9.829076,-2.222139,1.122060,-1.686066,2.233858,7.493107,-8.939539,3.702261,-5.008497,-9.988153,6.336376,6.073867,-1.518285,-8.507815,-9.465561,-6.990392,-1.558778,-4.391539,7.167082,2.032219,-3.603918,-8.326386,4.733625,-2.712702,5.571845,-9.653624,-7.566235,-3.739897,5.995808,-9.591322,0.661524,-0.685993,8.701552,9.799937,1.110694,5.315779,-0.210886,-8.520240,7.388368,1.563778,0.335386,7.232319,4.729191,-2.451121,-0.159599,-4.074197,-2.806796,1.004485,-4.807842,-7.860564,0.161415,9.975996,-3.582450,3.782908,8.651452,-8.804562,-6.883347,-8.393377,6.300026,9.967991,4.477052,1.429879,-5.350423,7.016079,-1.408427,1.820680,-4.427304,6.287892,-9.487380,-8.020565,7.588737,0.186985,9.761208,-9.589189,-2.917277,-0.693632,1.166081,8.021210,7.993789,-4.185868,5.716380,4.703254,4.809914,-7.874275,-5.940292,9.068594,2.058384,0.487093,-5.244543,-1.411736,5.864808,7.640177,-8.657130,3.436347,8.538105,8.894983,5.094704,-2.643458,4.822770,-8.431742,-1.880363,-5.684941,-3.923215,-6.812909,0.771884,-6.367572,9.730626,2.856527,-8.954861,7.376630,6.669053,-3.276872,-2.891998,1.008052,2.149966,6.784466,2.421513,-0.904308,8.386600,-9.029331,4.857773,-6.589563,-9.903872,-1.992124,-9.709081,6.760035,2.263729,-4.696399,-8.298419,5.355002,0.551641,1.597767,-0.757322,4.532683,-0.254656,-4.683046,-2.226867,5.459447,3.959758,1.129314,2.759293,3.428349,7.308474,-3.120750,6.071991,2.544297,-8.136147,5.053055,-1.249602,8.544215,-8.538920,-5.170955,-4.809295,-9.406135,-0.343245,3.714755,-9.811228,-9.869729,-7.145286,2.234413,-1.555930,-0.251919,-8.715400,-2.796425,-9.927531,6.008593,9.800814,8.020236,6.901405,1.399922,-1.156039,-8.090430,3.360031,-2.650762,8.602595,3.164987,-3.442735,0.576008,0.246531,-2.056761,1.203361,6.661689,8.676369,-4.380960,-8.134199,-2.584038,-6.704707,6.608549,9.781986,5.775532,6.492483,0.285075,-1.937605,-1.944329,-2.004631,-1.248965,5.313987,-4.391943,-8.209501,2.566990,6.682117,1.348463,-1.236943,0.073838,-1.719643,7.168839,-4.696981,-9.582033,5.752323,-9.425757,9.744785,5.062684,-6.223621,4.967129,-7.003703,9.319512,0.444832,6.068198,3.697839,0.615701,9.676485,-1.581501,0.478228,-0.291599,6.537002,-3.012405,5.406351,8.744896,-7.613990,6.847656,-5.654285,-6.365045,8.799037,6.996539,-4.641105,4.813321,0.397640,0.929863,-2.356410,5.837876,8.100008,-4.346175,0.081928,-3.795568,-3.391365,-1.237598,6.930405,-3.836277,-8.107314,7.285399,0.570609,-8.783183,-9.580348,8.298403,-8.376680,1.118564,5.368514,-0.045154,4.007524,-4.394986,-7.224294,-4.462811,4.414630,7.488007,1.262989,-1.716877,1.673377,6.270293,0.576349,-5.818687,-6.165435,3.196939,2.650633,-7.527109,-3.058267,-5.501577,-7.970857,-9.902922,-5.138053,3.795712,9.606442,-1.635946,6.115381,-9.246072,-5.835437,-8.611663,-9.227958,-6.390606,8.270316,8.548093,7.930396,6.861429,-6.105677,0.251645,5.724064,-6.859734,6.445149,4.253284,9.213284,7.214666,-3.375406,-5.205642,4.235913,-7.852295,1.790521,-5.284117,2.017032,-1.943002,-4.306092,-3.768751,8.427158,-2.660357,6.832157,9.344344,4.171876,5.933948,-7.873671,0.857905,-7.756898,-1.434752,7.855967,7.816217,-2.507846,-0.196227,3.208434,-6.475554,-3.248793,5.843596,-9.052382,-5.687162,8.136279,9.408246,1.795411,3.643091,-8.570298,7.676626,3.514543,6.490458,7.661637,-9.623186,-4.401072,1.371410,7.991256,7.881892,2.629521,5.256290,7.513077,-0.517165,2.896363,-2.342579,1.644429,3.639911,-3.574668,0.158931,7.714674,7.874276,-8.979498,-4.817175,2.329789,-4.001379,3.024907,-1.634660,-5.678173,4.749574,-0.275075,-8.617575,4.969434,-5.546062,-9.775666,5.401741,1.178886,6.166403,7.393079,2.756169,9.361189,1.402737,-4.985989,6.779240,-9.938193,-6.170138,6.311821,3.730113,2.365148,-2.820331,1.843985,7.519692,-2.396150,-8.381356,-2.671747,4.615878,4.139892,-1.804860,-1.859449,1.436243,-0.913110,9.924389,-7.491551,-5.380150,4.994847,2.859506,4.522926,0.956869,7.214456,0.946662,-4.131351,-7.147392,-1.109497,0.511086,-0.012459,5.956649,-2.230823,-0.173745,4.895209,-6.152965,-0.747377,4.608334,-0.758233,6.281419,4.614459,1.489328,8.256695,8.545750,-1.639253,-4.442518,1.125659,2.835314,1.064712,-4.896424,4.739929,9.574952,-1.193668,3.384780,5.538560,8.720993,9.039920,-4.925417,-5.112800,-9.179070,-7.484217,0.615479,9.144203,-6.878901,7.646591,5.063521,8.897811,-0.404059,-0.948161,2.422063,-6.797759,-4.938685,5.815248,5.265021,-0.772941,4.573835,-4.287870,4.853750,2.209853,-6.841536,-9.849869,3.662334,-5.699754,-0.172345,5.930146,3.422465,-1.432019,-7.152037,-0.090203,2.528982,9.815096,-3.086796,3.355324,7.177425,7.590121,9.017196,-8.913003,2.361151,-8.935435,0.279171,6.487413,-6.820691,-1.612328,-5.016518,-0.729964,8.067225,-7.433163,8.839717,2.517166,-5.611013,6.959967,5.002292,9.578895,-8.889878,-3.559197,6.455065,-3.856179,1.469636,-7.932970,-3.294716,1.043650,9.845477,0.896939,0.519018,7.296591,7.666577,-6.205362,-2.945072,9.035117,5.706533,-0.687426,-0.088292,-7.131083,9.208388,0.087436,5.412052,-4.216616,-3.088990,-4.362427,-6.284759,1.589904,-1.031082,-6.645182,3.519223,3.536770,7.721965,-5.580839,7.252263,8.252640,4.549063,-4.521075,9.020538,8.450019,-6.386156,-7.849248,-3.933094,-9.777756,0.454864,8.269151,-5.653879,1.573379,1.113401,4.766668,6.823423,5.846414,8.123149,9.621160,-2.627864,-1.340336,-4.530428,-4.377408,6.354001,6.127125,5.262165,8.182395,-1.322668,-0.282791,-9.786341,-9.679953,-0.892025,9.128938,9.534370,6.766315,9.776997,-0.709714,-9.859178,-5.817660,2.100902,-7.072493,9.139184,-2.772498,-2.259288,5.537020,4.475102,-9.315502,4.740433,0.377160,4.085029,8.657977,4.294717,-8.418323,-3.482099,8.045391,1.436301,-7.962507,2.824438,-1.240242,7.900137,8.785814,9.416567,5.889141,0.966478,0.376825,4.948132,8.935383,-7.215982,-0.579402,0.775126,-5.927922,1.235845,3.314471,0.131759,-5.349315,7.198232,3.775882,-7.681522,6.014020,-4.161490,-7.498795,2.151046,-9.297639,2.023087,-6.602987,-5.850566,2.448700,-8.775741,-4.300430,-0.086237,-6.455535,-2.907104,-1.495965,-0.857381,-5.910315,-5.414154,-4.539716,7.077400,8.592036,7.040949,4.728281,-1.537172,4.135784,4.481244,4.263277,1.246960,8.500630,3.628987,-4.054973,0.983979,-8.951523,1.085357,-4.731435,8.375094,9.844349,6.085198,-6.055734,-8.615753,-5.081130,-6.887527,6.330532,-3.204185,5.870202,6.041978,3.069375,2.001788,-2.270731,7.836920,0.522553,7.558178,2.871593,3.915573,-2.212852,-9.363923,0.484828,-7.035136,-3.134704,6.902580,3.571705,1.859833,8.124239,-3.323159,7.866486,-8.098966,6.489739,1.391700,1.217133,-3.077027,-2.574307,-9.801168,0.963514,7.105097,7.593509,-2.775797,5.531626,-0.074352,-0.009181,-8.713805,-9.184069,-3.951928,-1.081707,-2.542574,-7.057717,-6.359831,2.702751,-4.308805,2.581368,-9.168780,-6.769796,3.064033,-6.721165,-3.536474,8.125538,-4.746785,-8.153927,8.421714,9.771388,-5.081076,-1.198383,-2.848400,9.544678,9.607512,-9.762661,-7.111005,-0.519163,-5.494126,1.500609,1.328126,-7.403406,-5.792192,-4.378553,6.005808,7.505771,6.931188,-5.035807,-4.494606,-3.951478,1.460414,8.653427,1.593430,3.976724,0.911806,-4.237310,6.862669,-7.643598,7.837087,4.536173,-6.043218,-3.020225,0.261268,-4.844182,8.623732,4.104728,3.377910,-7.698367,-2.691613,9.053310,-7.777673,-9.063471,-8.259735,5.663798,1.145785,-3.063956,7.823897,2.821720,-6.502691,-6.949921,-9.575851,-3.574918,0.119878,-8.073068,-6.929809,9.075263,9.391150,1.987153,-6.137289,-6.227545,2.769660,-2.244952,9.362731,5.037653,2.199883,5.590646,1.652585,2.615346,-3.864031,-2.808652,3.672079,2.351525,8.338996,-2.089342,9.240420,6.497352,-8.732897,-8.024336,1.777666,1.700705,4.707975,-9.313471,-4.958887,0.411601,5.546107,2.996069,3.404686,-7.949061,6.690786,1.453920,3.839865,-7.753023,-5.771596,1.045795,-8.567750,-6.974880,-3.096246,2.190906,-0.463230,9.097203,-3.948472,9.545697,-2.785769,0.597685,-7.770120,-2.127814,8.985740,9.072107,4.728011,-0.417296,8.649877,-6.216417,8.779652,-3.084277,-2.455163,-4.687226,8.900837,8.222124,2.771796,6.534533,3.320501,6.544716,-5.832389,-8.996299,3.292251,-1.427849,5.637955,-6.975232,-8.376120,-6.432566,1.687694,2.006761,-0.836887,-6.972489,1.764893,-1.850750,5.377333,-5.686659,-6.812362,-5.753210,1.628026,1.465561,0.110313,4.716065,-0.316357,-9.934674,-7.826757,-1.314089,-0.587481,-7.998999,6.644749,-6.480146,-4.222935,-5.297027,8.660549,9.243342,1.961267,8.707366,-3.874701,-6.887917,1.630776,-1.464348,9.249963,-0.478913,5.218043,0.039830,7.571489,-2.580279,-9.828537,7.554348,3.528176,-5.941520,7.442854,4.049193,1.954140,-0.854636,-7.899028,-4.334897,-3.983728,-6.213859,-7.321070,-9.079860,9.325509,2.936762,4.241548,-6.241309,3.675440,-0.781311,-2.349418,2.767311,9.625657,-6.827657,-0.220475,0.547518,-4.665293,0.967615,-9.339798,-3.683922,-9.889752,3.910778,-9.217570,-3.242802,3.815640,-2.231955,-3.112180,4.515169,-0.619189,9.885681,-6.568567,7.461646,-4.015697,4.006977,-4.460004,5.322662,-6.004209,-2.838919,-9.804055,-4.883973,5.104884,2.006417,-1.684061,-2.407488,7.715746,-8.770393,-1.263102,-4.525599,-6.216592,0.074946,0.475286,7.055520,-6.999173,9.386633,-1.367500,-2.832065,-0.349200,7.517618,-5.596615,5.701015,6.066447,5.110119,4.802815,4.280957,-4.398809,-7.891767,3.938826,7.618802,-6.651016,-9.492796,-0.134894,-3.329792,-0.305880,-4.391121,5.006123,-2.809740,5.477569,7.017597,2.354953,-5.342040,0.243705,-6.126133,-7.400923,-3.323934,-2.539881,2.370760,3.951925,4.993368,3.342449,-0.976677,-3.022689,0.989487,4.408735,-4.146553,7.177600,-7.596511,-6.603385,8.382726,-6.009853,4.152195,-1.515961,9.731967,-0.768419,-2.705599,-9.665824,1.580634,4.549818,-5.392698,2.447598,-9.412594,5.673761,1.163774,6.341398,-2.717949,1.001306,-1.921454,-6.250412,7.770306,-1.767939,-6.208937,6.551279,0.952759,5.421677,3.332354,0.374906,7.991246,-5.662396,-0.044825,-0.154871,2.293535,-1.587486,3.087844,4.754052,0.956169,-1.045384,8.608520,6.822804,6.724570,-7.838151,7.028077,-5.523595,7.559724,-7.415824,-8.329453,-4.036338,-2.925006,8.602376,-2.857648,-3.545126,-2.311211], dtype = "float32")#candidate|5134|(2160,)|const|float32
call_5133 = relay.TupleGetItem(func_4656_call(relay.reshape(const_5134.astype('float32'), [2160,])), 3)
call_5135 = relay.TupleGetItem(func_4658_call(relay.reshape(const_5134.astype('float32'), [2160,])), 3)
func_4038_call = mod.get_global_var('func_4038')
func_4042_call = mutated_mod.get_global_var('func_4042')
const_5139 = relay.const([5,-4,7,-4,7,7,10,-4,-10,-9,7,-10,9,-8,-1,-1,-10,-7,-8,9,5,-1,-3,5,-7,4,-10,-10,6,5,3,-6,-2,-2,-3,8,-9,3,5,7,2,8,6,3,8,-1,-6,3,-1,-10,8,-2,-8,-10,3,-7,-9,-9,4,8,1,-2,8,7,-2,4,7,-6,-1,8,-4,-10,-1,-9,-2,5,-6,-10,-4,-6,4,-4,-7,5,-7,-3,9,5,4,-5,10,-10,8,-3,-7,-7], dtype = "uint8")#candidate|5139|(96,)|const|uint8
var_5140 = relay.var("var_5140", dtype = "float32", shape = ())#candidate|5140|()|var|float32
call_5138 = relay.TupleGetItem(func_4038_call(relay.reshape(const_5139.astype('uint8'), [6, 2, 8]), relay.reshape(const_5139.astype('uint8'), [6, 2, 8]), relay.reshape(var_5140.astype('float32'), []), ), 2)
call_5141 = relay.TupleGetItem(func_4042_call(relay.reshape(const_5139.astype('uint8'), [6, 2, 8]), relay.reshape(const_5139.astype('uint8'), [6, 2, 8]), relay.reshape(var_5140.astype('float32'), []), ), 2)
uop_5155 = relay.sin(const_5134.astype('float64')) # shape=(2160,)
output = relay.Tuple([call_5130,call_5133,call_5138,const_5139,var_5140,uop_5155,])
output2 = relay.Tuple([call_5131,call_5135,call_5141,const_5139,var_5140,uop_5155,])
func_5160 = relay.Function([var_5140,], output)
mod['func_5160'] = func_5160
mod = relay.transform.InferType()(mod)
mutated_mod['func_5160'] = func_5160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5161 = relay.var("var_5161", dtype = "float32", shape = ())#candidate|5161|()|var|float32
func_5160_call = mutated_mod.get_global_var('func_5160')
call_5162 = func_5160_call(var_5161)
output = call_5162
func_5163 = relay.Function([var_5161], output)
mutated_mod['func_5163'] = func_5163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2138_call = mod.get_global_var('func_2138')
func_2140_call = mutated_mod.get_global_var('func_2140')
call_5205 = func_2138_call()
call_5206 = func_2138_call()
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_5215 = relay.TupleGetItem(func_2534_call(), 0)
call_5216 = relay.TupleGetItem(func_2536_call(), 0)
func_3487_call = mod.get_global_var('func_3487')
func_3492_call = mutated_mod.get_global_var('func_3492')
var_5222 = relay.var("var_5222", dtype = "float64", shape = (8, 24))#candidate|5222|(8, 24)|var|float64
const_5223 = relay.const([2.894015,-4.499307,-3.508349,3.293828,-9.644148,-2.578730,7.134518,4.632259,7.518383,0.778457,-7.918802,-5.227382,0.515374,-1.346653,-9.381200,-0.421410,-1.672235,2.981971,4.651859,9.407821,-9.607169,1.715875,-8.184846,-6.574336,2.649872,4.425757,2.310978,-4.590217,7.358236,1.654175,4.430236,2.083948,-7.990432,-2.467452,6.932682,2.478324,8.792267,7.906954,-2.146686,-1.416014,2.669020,5.727130,4.580717,-6.573743,1.539441,-0.129558,0.530079,-8.411151,-1.843571,-3.287245,-3.478074,7.921178,-3.025732,6.107160,-7.666764,0.717710,-3.074625,-2.845062,-4.555994,-6.393780,-7.651385,-0.269487,-4.359116,-1.659435,-2.840070,-8.248061,-5.324119,-9.070911,9.156160,6.346227,1.464638,6.384571,-2.792435,-3.519267,-5.560113,-2.662621,8.575331,6.058308,7.827921,4.145061,-7.672912,8.126878,0.888430,6.320409,3.841955,1.243229,0.877077,-8.319989,-7.484992,3.363877,2.019091,-3.509377,-6.746511,-9.707236,8.002055,0.606361,-9.437072,-4.195671,3.696988,-6.557544,7.779662,1.776504,-6.522144,-6.328549,-4.588429,-8.929635,1.996894,1.090094,-0.584586,0.933848,8.472982,2.030643,8.971578,7.995246,6.472779,-8.199235,6.167322,-6.567167,0.091870,8.531890,-7.466928,-1.514683,-1.116527,2.012782,8.149969,-6.616646,-6.812658,-8.918625,3.136978,-4.588990,5.989027,9.633287,-7.918680,7.129882,-4.521962,-9.720324,-4.486398,-3.389383,-6.866730,7.187220,4.398446,-8.014136,8.335322,0.366984,-8.065860,2.307256,-2.001350,2.154575,-0.981451,5.702481,3.744705,7.278708,-5.203675,-5.215613,-0.259787,-6.515231,4.050444,3.505105,-9.374675,9.034354,-4.415522,-4.426152,-1.426709,7.719739,-0.560291,7.103047,-7.738735,5.619796,9.666404,4.779885,1.359830,9.112473,-6.528605,9.427480,8.454976,-8.073015,-4.057064,3.095181,-8.868962,8.151167,7.495396,-7.179051,-6.105972,-1.326844,0.952097,4.031389,5.895661,6.825176,2.934522,-6.583535,5.003533,-2.338480,-4.933222,-5.519983,-7.964710,5.690113,6.724260,-0.312890,-7.781361,3.631798,-7.560403,-9.068653,9.274819,-8.182434,1.483937,9.519729,1.671979,-6.849925,8.337967,-6.905375,-0.856116,9.276433,3.716998,9.678365,-5.356654,4.907610,0.257519,3.056696,9.131581,7.946980,-8.132853,3.879767,-5.270005,0.213908,7.483175,-8.616051,-7.237088,9.504167,8.027188,4.079210,6.499913,-9.990186,-6.513280,0.202388,8.675751,-9.547699,5.774843,5.858240,1.299895,-2.140127,-0.806455,3.820088,-5.567765,-3.488693,3.362558,-9.883899,-4.328371,-3.060568,-6.870691,-3.056415,-3.306242,3.147280,5.870735,-7.502535,-7.495971,4.939806,8.398528,6.928522,2.568589,8.740641,9.204361,2.205638,-8.839373,-2.050870,2.427306,9.338669,-2.921483,4.130017,4.772605,-1.857680,-4.305419,9.083610,-6.926150,-3.972711,-4.478321,6.042849,8.903849,-1.092451,-4.070904,-6.365838,4.782169,2.465020,-7.685941,7.221414,-4.166722,0.822907,0.477065,-6.862439,6.054847,1.531567,-7.193527,0.314084,6.618767,-6.592916,7.892911,5.148728,-7.997118,-5.376149,-9.800072,-9.060267,3.589303,9.401552,-9.345269,1.355559,-5.869796,-9.312706,5.472630,-7.198022,6.908932,-9.370266,0.583831,2.605273,-5.097331,1.980601,-4.386846,-7.132841,4.301822,-9.257552,4.617496,-8.312350,0.006821,7.873663,-3.591334,4.833583,-3.559325,-1.342191,-1.084905,8.215239,8.772878,5.009051,-4.606981,-5.061492,4.978894,-8.766306,-5.437759,0.490545,3.231830,-2.908490,-9.564241,2.858854,8.772273,9.594731,5.583263,-4.593484,1.440223,-3.522444,8.186344,0.790010,-4.169327,-5.696388,-4.789361,-1.932632,-3.309549,-8.648450,-2.378935,7.774212,0.733968,8.040426,7.303450,-9.650382,0.047438,-1.245947,0.742801,-9.745119,6.222276,-2.198377,-9.040731,5.884765,4.933581,4.522607,6.657419,7.080078,1.520878,-4.896601,-8.683282,8.856512,5.518630,8.420183,-1.203921,-6.546493,-3.715201,1.548118,5.952162,9.061084,-5.616819,1.019076,4.655875,7.056683,6.754179,6.431066,-0.724395,-8.645876,-7.357091,-4.710251,4.275825,3.258602,6.954726,-0.428483,4.358132,0.563784,-3.153323,-3.096045,4.219192,5.026998,8.795529,-9.075326,4.223437,4.316084,-9.640877,-7.080710,8.486914,1.957044,0.531635,4.524156,7.673700,-1.036216,2.305279,3.435119,-1.267943,-5.517915,9.153476,7.317858,1.919908,7.077674,-2.912447,5.670645,2.865028,-0.490127,-7.452651,6.344848,-3.513774,6.394894,-4.831460,-6.815098,0.017427,-2.424174,-4.056943,-3.880538,9.093316,8.603937,0.010914,1.784692,-6.871962,4.676667,4.855924,-5.682267,1.032656,-4.760691,0.619920,-4.897111,1.348874,7.411743,5.562801,0.159358,4.548387,-4.603071,8.320390,9.812287,-9.723269,-8.973008,-4.410160,8.270564,-9.497310,8.201285,8.336867,3.538377,8.231622,-4.344003,-4.899079,8.401428,-5.141519,-8.302519,3.680998,3.127560,9.818720,2.168180,8.172996,0.987965,-2.938636,4.020718,-8.009365,-3.212650,8.184980,-1.393134,-4.745314,-7.016882,-6.875157,-8.007516,-8.121414,4.832490,9.688167,8.076788,8.695684,6.701479,-1.538594,0.214414,6.049796,-4.503034,-7.158564,-6.665781,-5.436938,-3.047669,0.498869,-1.107538,-1.403026,9.149110,-4.952215,-9.368331,4.025280,-9.626160,-9.442743,7.195807,0.561179,4.297655,-2.742705,4.764813,-4.241675,0.015661,-4.352127,2.687773,4.451664,4.057638,-3.452071,-6.562133,5.335983,0.511102,-5.816716,4.416690,-3.741751,-8.591804,-3.792157,4.950417,3.662548,-3.005180,-6.307827,-7.814969,9.488536,9.447924,-6.981222,4.167521,-4.125354,1.207197,8.971773,9.253104,4.755526,5.879496,2.238635,-1.187918,4.460767,-4.235679,7.131302,-3.289656,-1.606689,-4.074231,3.383813,-4.436597,-8.730845,-1.426011,-3.917741,1.271099,3.030150,6.454109,8.253647,2.199519,4.945722,-6.767288,8.847323,1.062020,-8.345146,-2.073030,3.184823,-7.706479,-0.846821,-0.017636,-9.047090,3.870140,-6.522495,-8.551099,-6.957915,-2.471030,1.529195,-9.618588,1.525708,7.355622,7.193436,3.757851,-2.472321,-3.433629,0.996521,-0.636279,-5.451194,4.636277,-5.020500,-8.515457,-2.465620,-3.549253,9.580700,-2.413984,-3.384281,0.077844,5.352038,0.243153,-2.547671,-2.619881,-7.429854,0.295495,-7.029754,5.763515,-4.310277,-6.859283,-0.185847,-0.139741,7.656098,6.933746,-8.998028,-2.886144,3.711982,-9.975654,4.382898,9.130061,8.485358,6.247962,-4.809978,-8.750456,-8.647811,9.908326,-1.207584,0.845587,-7.640078,7.452650,2.818944,-8.672808,9.656531,-7.311613,8.196432,-2.813886,-4.710967,1.015115,-3.926680,6.814420,-3.273023,-7.771621,-7.451683,-4.213448,-1.891164,-4.069742,2.708662,-9.624544,9.297569,-3.241500,0.546031,5.727157,-8.617267,-7.674684,-2.143225,6.105924,-1.773495,4.177765,1.663963,1.485037,-5.187153,5.003412,-1.146369,-4.320188,-9.253274,-1.422447,-7.148051,3.083802,-7.809600,9.095754,9.650172,9.940026,-6.295095,5.639736,1.531302,2.815107,-6.804942,3.834233,8.274510,-8.968230,-5.949955,4.766393,-5.754096,4.842670,-6.242012,9.186058,-3.315357,0.617988,-2.233516,-3.000153,2.011609,3.582355,6.231927,-3.678218,-0.186183,-5.229099,7.686795,4.352912,4.026738,3.945347,-2.286506,8.233251,6.204812,5.586723,0.416157,6.274327,-0.524212,-6.130540,-7.341606,-6.083538,0.189243,7.670410,-0.690521,-7.980903,-0.313777,2.708545,0.334630,6.696618,1.085079,-3.969322,-1.525526,9.442254,-6.033242,-3.046579,-9.332975,7.009621,-1.311003,-0.231991,-2.090954,-6.980998,-3.190676,2.310200,-1.246256,2.721601,5.112625,3.741255,3.492231,-0.415487,-6.963525,-3.489376,2.691148,5.187187,8.130646,-9.744196,-5.088990,-4.573926,-1.832012,-1.052231,-0.655671,-8.032566,3.372756,4.170793,-2.199988,-6.249218,7.976499,4.833883,4.763867,-7.714826,2.180136,-8.894083,1.643347,-0.685365,-7.436337,-8.080838,-2.919853,-3.449990,-9.771534,7.592551,-3.252090,-7.373337,-8.702136,-5.655819,-4.026034,-8.634417,-1.681986,8.030983,3.701121,5.864323,1.352449,-1.680718,4.480293,5.466997,2.325879,-5.021757,9.800421,7.151665,2.359295,3.980427,-0.420790,7.797445,-8.865879,-7.288088,-7.580021,2.837695,0.147960,-8.047860,-5.846243,0.482643,-0.708728,9.086641,-3.287209,6.327302,8.108049,8.131146,9.396389,-3.363815,7.937865,1.916072,-9.430907,5.926306,9.742086,-1.533983,-7.772726,7.201970,-2.213093,-0.419661,9.641354,-8.856663,-2.811629,-3.691538,-5.367334,1.589585,6.837855,8.895188,8.573545,0.572278,-8.259376,-0.935860,9.788637,5.365688,5.893843,-1.401161,-1.952504,0.632272,-8.063878,-7.925341,-4.878504,6.697728,-0.309834,2.987489,3.751128,-5.193589,0.270019,-3.477227,-5.758399,-6.148311,1.731523,-6.924494,8.343844,-4.161486,6.640907,-3.450382,-2.785782,1.678516,-4.620316,-5.060351,-9.505674,-4.867962,-5.145262,-1.159148,-6.061932,-4.334793,-7.690681,0.507845,-3.713980,7.155918,-2.437996,4.979542,5.306244,-2.244776,8.712811,-6.053785,1.850216,6.480796,4.797108,2.666627,-9.309361,-5.948079,-5.941545,-0.982497,8.919979,6.481129,7.641276,3.315309,2.347277,8.447603,-7.927532,-3.267372,-5.366134,4.847812,-9.256747,2.163388,-8.041223,4.511105,-5.851617,7.483466,5.133715,9.531326,0.581878,-2.788180,-4.164354,-6.123858,8.445772,3.592385,-3.405737,0.602498,8.796199,-4.580977,-3.508215,-0.600817,8.628271,9.225168,-6.605209,-6.028989,2.341653,0.293333,-5.597304,-4.827422,-5.688207,4.143418,1.063892,7.392827,3.971794,-2.061613,5.754215,-5.695700,1.244125,-0.967144,8.955921,9.569234,0.424991,-8.773000,-5.595099,5.263013,-5.217862,-1.698231,8.525544,-7.066832,1.391709,5.049894,-4.309147,2.790491,7.076239,4.326127,-8.363420,8.769480,1.412281,2.267164,-5.914517,7.815295,6.751465,-7.638135,2.999099,-3.683897,-5.156570,-9.521771,9.168725,-5.282007,6.185096,3.704865,-0.431299,2.174868,7.395209,-0.836451,1.418264,-2.912368,5.881190,9.628425,-2.617619,0.051853,0.558618,3.385199,7.213755,4.390796,4.797931,8.261300,2.900827,-4.865444,8.042935,2.508010,-2.010988,-0.211732,-4.194466,-7.957388,9.630028,0.613984,9.046565,1.351104,-0.793996,7.063011,-4.988970,-9.208302,3.168992,-3.614140,9.257594,8.439395,8.369065,2.775175,-1.775715,-2.512417,5.986120,-8.818974,-5.294783,7.646730,6.499065,1.686096,3.168861,1.842172,-6.317465,-3.356616,3.156358,5.445584,1.721880,5.466852,-5.232718,6.697600,3.815570,5.363852,0.792609,7.539752,9.156395,-9.970305,-2.410886,-0.677479,4.307696,-0.767853,-7.399321,-6.654137,-0.318239,7.478197,0.997982,-1.803771,5.285331,7.891123,-7.444102,3.399028,0.537043,3.911891,4.857031,-6.185862,-6.690113,-1.870178,-1.451126,-5.077550,-4.370963,7.474347,-4.365773,-8.221879,6.607638,-4.719596,-9.527079,-7.239915,-6.675997,5.420096,4.552598,-7.258026,-2.313148,-7.484988,5.101591,2.413577,4.826876,-7.789949,-4.084600,9.608308,-2.532325,-0.040214,6.211854,-3.106251,-7.869960,3.512961,2.392787,2.943179,-2.282543,-1.786357,-9.690295,3.448694,-7.628472,6.320097,2.278537,5.480108,-6.329646,-2.117343,-7.066695,0.413630,8.147927,-5.048957,7.914542,-5.154088,5.800012,3.907790,4.661767,2.921689,-8.778504,-2.262486,3.129963,8.745820,9.994565,0.547832,-1.082036,-5.489907,-4.451611,-3.768747,-9.008231,8.786167,0.852417,7.577840,-1.477635,6.242008,9.350244,-7.567213,4.098787,7.643674,7.518720,-0.037808,6.408173,3.300990,4.760893,1.410019,2.130245,2.091013,-9.803956,4.691759,-1.950831,2.693480,-0.382429,-1.164633,-0.516098,3.987685,8.926647,0.486482,-6.914807,-0.510628,0.252767,-0.893858,-2.437838,8.334942,-5.415035,9.827231,8.565452,1.641919,-6.110938,6.431030,3.948656,0.482964,-9.270687,7.325034,2.682783,-7.823523,-1.423514,1.360689,4.468816,5.866644,4.229919,-7.818633,1.152721,1.894154,7.655582,-2.323171,1.607148,4.890996,8.694790,-5.735437,-0.534210,5.222056,5.066543,-3.158364,9.693797,0.123545,-7.992085,-3.890020,3.764109,-5.717199,-2.094844,9.082426,-6.926567,-4.351883,6.270728,-3.073241,8.878087,-0.939728,5.610606,9.747212,-3.664178,5.724975,-5.031150,0.816279,3.987869,5.973986,-6.462023,8.267183,9.887665,-4.704652,8.677572,5.701790,-3.374425,7.114078,-5.348795,0.974528,4.520014,9.183221,-9.381548,6.613796,-5.653797,2.220320,1.246004,3.535185,-9.345996,-0.509511,7.932421,7.876847,2.197006,3.631002,1.517666,9.944552,6.098962,3.150025,8.323045,-2.829063,3.541155,-1.289102,-3.038508,1.070505,-2.700985,-3.089062,3.396357,0.949147,1.159274,-6.024464,3.317336,4.385764,7.384667,-8.669434,-8.630785,-4.697076,9.974141,-5.844418,4.797647,-1.990797,4.701835,0.466924,-1.392962,-7.774796,4.161956,4.448078,-5.185785,4.681579,5.341567,-1.723722,-0.028865,8.069224,3.439872,-9.840758,0.220789,-6.653302,3.579420,-2.641583,6.672413,5.706682,0.708090,9.987897,-7.902581,8.581632,6.515416,2.087211,8.496248,7.709911,-8.672420,8.776496,-8.490506,2.168703,1.796001,-1.174944,-5.261405,9.323104,-4.470445,8.542377,2.803999,-5.168715,-2.089913,9.326353,-5.887514,-0.794499,-1.129363,-7.736450,-6.649998,-2.875349,4.872821,-9.372178,7.046328,-9.301273,-7.741786,-0.091419,-6.168245,-4.323790,-3.975046,-7.068631,-1.916124,7.272495,-2.648016,-7.704662,2.475744,-4.934138,4.367684,-6.168303,-6.349751,-1.770919,-2.340411,9.936454,7.524997,5.383005,1.372071,-0.201130,2.084421,-6.924514,6.869524,-9.054736,3.315093,-6.421927,1.750282,8.755875,2.733578,-5.540431,-0.549595,-9.183318,-6.296502,9.518261,-1.762074,5.888566,-6.603596,5.616745,-5.536182,-3.707868,5.991867,-9.258501,-5.249342,-1.094742,2.859158,7.384188,-7.759639,1.307819,-8.491852,-3.594058,-6.934173,-1.362265,1.351865,4.846180,2.982077,-3.761356,-4.740488,7.097603,-0.229343,-1.607920,-0.097018,-1.276190,1.791709,8.921152,-6.777792,-9.145786,-4.401209,9.930096,6.406143,0.602625,7.716999,5.597863,9.685878,-1.101462,-2.504210,7.948915,-9.894991,-2.373829,-1.546853,2.808297,5.215635,1.291626,-2.161648,-6.441467,9.793378,-9.781162,0.445296,-2.425511,-1.862963,-7.839419,6.021480,-3.749425,0.966925,-7.541749,-4.625205,9.133492,2.421937,2.342837,0.892813,4.114676,-0.622921,3.016848,6.381793,-4.253684,-8.885284,6.565368,-2.569577,-1.314998,-2.443890,1.487207,-5.081650,-3.787701,-4.003267,-1.663495,7.923739,-1.704663,7.928421,3.729683,-9.128836,6.445630,6.980135,-3.171836,-6.471123,4.537354,8.364949,5.264882,4.997472,-4.879063,-4.350517,-6.185788,-4.606948,2.861099,-4.033819,2.912786,-3.199160,-5.235231,6.692613,4.789820,1.423461,-4.862927,-0.290819,-4.823957,5.132852,5.138691,7.095294,-9.509117,-4.203540,-8.587045,-4.287145,7.308414,-2.295204,-4.392242,7.595536,6.079957,6.086165,5.902020,5.785790,7.405745,-0.610199,-7.581355,-6.706970,-0.941398,-4.335415,-3.676116,-0.078919,0.329867,9.922617,-6.380677,-5.389212,8.344193,1.144552,0.571995,-1.388624,6.268265,3.061794,3.596842,-9.266861,-1.833660,-5.331247,-0.387362,5.644542,7.746548,5.124900,2.586733,0.463392,4.143882,1.469729,3.534488,-2.711997,8.366843,6.087028,7.034293,-9.728682,-3.028320,-4.862577,8.323403,6.093992,-9.731043,-0.688407,-0.707490,-3.033933,-7.096159,-7.783221,-6.958054,-2.632605,-5.788267,-4.130509,-6.283635,3.000060,3.078956,0.462464,7.539382,2.054478,3.581290,4.112817,3.157303,-7.286954,-6.482585,5.035726,3.861372,-3.068556,0.387578,6.669874,6.294309,2.147085,1.531198,8.516709,9.914316,-6.444650,-7.701592,-7.650043,-8.418759,5.938440,0.687748,4.985551,-5.220240,-1.915085,-4.647242,5.422743,-2.029687,-6.328277,0.509621,6.178881,-0.632573,-5.164966,6.679739,-3.495290,3.023711,-5.914922,-8.050613,3.846916,2.275903,2.039162,5.281627,7.701996,9.361047,9.898356,9.284848,9.368001,7.527059,-0.688170,-6.555134,-9.723109,-9.615435,-0.176823,-5.338487,-6.286726,7.589379,2.208833,-4.187122,-5.065150,-7.485789,3.167098,-6.809375,7.064450,-6.032075,8.611983,-2.527243,-6.811278,-1.383310,1.657775,-0.572789,0.253130,6.766660,-0.782362,5.512144,5.614068,1.765793,-1.086638,1.685539,8.700047,0.401031,-7.481398,-8.973742,7.972698,4.678917,5.266234,-1.435429,5.386122,0.251039,5.385671,3.648198,-9.081499,4.811978,-8.240741,-0.239754,-3.013983,-9.488345,3.982156,0.909578,-9.457848,8.312848,-9.667496,-6.692159,-7.201719,-2.168502,-9.047927,-4.501978,-3.746517,8.051947,2.812264,-1.565442,-6.105130,-8.189660,1.668851,-8.014952,1.083341,9.196173,5.113971,2.210177,1.762488,3.317384,1.233454,-2.488955,-6.827825,3.713912,2.657104,8.779843,-7.886312,5.102556,-1.380578,0.300601,1.197115,6.676503,-0.158845,-3.132717,-8.277884,-5.189203,-1.823635,4.575812,-4.670331,-7.307519,-6.699913,7.030633,0.739203,-4.461773,-5.028591,7.476308,-4.588960,-0.199669,-5.742448,-4.720318,1.806162,-5.340982,0.004498,-9.410151,-5.820956,2.250070,-6.577049,-9.775221,4.427075,7.896334,-8.981918,-3.414121,-8.345101,-8.363510,6.402321,7.423612,2.096658,-0.736710,-4.029786,-3.159357,7.401764,0.917417,9.663583,-3.624252,0.687356,-8.082341,-8.348398,-6.717046,-4.617815,3.707324,-6.071692,-3.391233,5.885395,-1.885928,4.796202,-3.242383,6.905208,-6.400840,2.344072,7.516950,5.479704,2.576800,-4.624290,-7.406658,-6.868106,3.331785,-1.209993,-1.662141,-2.365561,5.667598,7.750002,7.379990,-6.898414,2.777823,-3.654648,-5.311317,7.226179,6.813873,9.339000,-8.873950,-8.917950,-0.018622,7.216189,-4.812124,-6.240804,6.950122,9.605386,-9.985908,-4.032845,-5.461198,-5.362859,-8.169211,-0.926773,-6.463188,8.023588,0.370036,-6.516758,8.553266,-9.237295,4.692144,5.456041,-2.768927,0.696509,-6.015035,7.793253,-0.841919,0.923626,8.351056,8.306438,-7.202771,-1.664069,-7.628983,7.016177,-1.183950,9.494644,-8.474087,-2.880068,8.174239,2.227246,2.900119,-1.552382,0.051786,6.377952,7.840115,-2.372874,1.217399,5.826858,2.088848,9.816022,-4.506534,6.143041,-6.653992,-6.088138,-9.644002,0.595182,-3.749619,8.891222,-1.597131,-7.981683,2.430143,4.054022,7.099757,-1.263450,6.338432,-0.842207,-7.531097,2.889134,7.179026,2.508355,8.447954,6.955002,-1.765530,6.732127,5.384237,3.548955,-8.019984,-3.516136,3.378333,-4.954683,-0.541097,4.269167,7.888253,8.270607,-6.180628,-5.234847,-0.144790,7.837695,-4.956970,7.331252,-5.612134,4.740464,2.851609,-4.213230,-7.260959,8.139294,0.011097,-0.666194,4.744918,2.554072,-3.402278,-4.145545,4.677136,8.976307,-1.354046,-6.273368,4.123953,-8.553998,0.627258,-8.308217,8.064650,-9.118096,-2.938713,1.525172,5.398272,8.293810,-2.374686,-6.841719,4.566971,-2.744856,-4.844951,-8.115918,-0.421169,-0.907949,5.561549,6.719265,-7.983229,6.580002,-1.931567,7.183472,9.814418,8.231084,-5.258009,1.564424,-0.958971,8.163303,-5.058782,-9.284033,-8.115224,-3.868248,7.257605,0.076495,-6.343182,-0.264791,7.188397,-9.654198,-5.279293,4.607038,3.771129,-4.711168,-0.976254,-7.454671,0.010699,6.236171,6.901409,1.029628,5.500126,-2.755691,7.656288,0.502849,-3.511337,8.770254,2.336533,3.872140,-1.036291,-5.692587,-3.192866,6.989865,-2.119555,0.397973,5.036871,-3.075664,6.145916,-7.114126,-5.207643,-4.722811,8.363913,2.601335,-2.971299,7.294750,2.360102,8.208301,-4.832659,3.727419,5.717857,-3.454725,-2.763366,3.927503,1.386377,-7.473323,8.822501,5.962411,6.877779,-6.906545,8.418382,-8.667655,0.036084,-6.300265,-6.084420,-3.807947,4.562812,-3.525471,-8.684281,1.213863,5.187626,0.610086,-6.358056,9.904683,0.528275,7.407263,4.111678,4.800494,1.232358,-9.496161,-9.046321,4.072152,1.059792,9.536430,-8.814289,-4.466773,-2.778810,-5.413991,-6.841293,-3.381446,2.468538,-0.832642,1.613202,-1.196702,-5.805084,8.848430,3.775711,-6.377640,-8.918538,-5.896969,-4.973243,3.779054,-2.380984,-6.042106,1.860500,1.979055,-8.724259,-2.294088,6.165135,5.832204,9.673313,-3.695650,3.108829,-2.956315,-9.562866,-7.714200,3.642125,-4.363993,-4.064811,-3.188786,3.191292,-6.553254,3.951322,-9.721370,3.212147,-7.651777,-3.529652,-8.264878,3.965015,3.247802,5.883555,8.854065,9.551391,7.250908,-8.913623,-9.151841,5.605329,1.495468,1.966855,6.212281,3.260595,8.629194,5.361998,-6.506908,-3.689533,-5.102587,5.804938,-6.465759,5.564372,-1.854131,6.616756,-1.373551,-4.326597,-0.653172,5.687150,-0.866782,8.413089,-5.207033,9.469142,-8.033046,-5.448036,-7.135042,-3.353766,6.764294,-9.877515,6.952495,-5.653678,-7.097156,7.511337,-1.242930,-1.016202,-1.114660,-1.662609,-5.300502,2.663975,-6.107552,-1.326973,7.846975,0.413289,-7.266977,0.721725,-1.225965,9.518412,-7.089254,2.287765,6.954233,0.715107,8.410849,-9.131406,-2.876881,-2.108387,-1.982441,2.297276,9.500981,-6.137449,-1.042246,1.984726,2.948203,2.963125,-2.856946,-3.899471,-3.964238,6.636579,5.874550,-4.676378,3.684611,-3.235558,4.533619,1.700734,7.007470,-0.054892,7.837200,-2.034207,1.944118,-8.728948,-7.228251,3.179049,3.688356,-1.826189,5.924098,-5.881173,-6.597865,-6.906561,-2.278525,-3.924652,5.205565,5.202272,4.477718,2.634697,0.479690,-4.858694,-4.446158,-7.652976,-7.152617,-6.708671,1.485113,-9.069464,-2.146111,5.006588,-9.641071,-0.813762,3.082651,3.506510,4.241413,3.321296,-8.695677,-7.069501,2.936479,-6.261951,1.048610,6.888530,1.273155,-7.406566,-4.293678,-7.290756,-8.812303,-1.623018,-4.265984,-9.591892,-0.280489,-1.362749,3.311916,0.489748,-5.845069,-7.126180,7.897679,-3.652456,4.460284,-2.275975,6.656961,-0.892755,1.176647,7.798197,-4.411452,7.414523,9.255913,-8.787400,-5.969007,1.375489,7.643368,-6.939653,-9.159390,-9.975468,-1.666432,3.615133,6.529449,5.858196,0.782576,4.292180,-5.490740,-6.189839,-7.415601,-0.504646,6.560779,2.974047,3.479297,5.199658,4.331784,6.839648,-6.460771,1.481408,-7.627563,-6.091890,3.753853,-8.400916,-5.964312,2.576289,8.636059,4.052341,5.537679,9.587436,-5.774126,-3.359277,-8.477899,6.522942,6.706210,6.369414,9.568917,0.441485,9.288778,-6.551718,-7.647507,-5.490406,1.566896,-2.876676,0.145635,2.563115,-9.661107,9.848441,9.635128,8.820411,6.791125,4.583419,-5.477626,6.844848,-6.500940,9.876899,8.589514,-1.252004,8.013672,0.782051,-2.152282,4.166341,2.896808,-0.214663,9.306649,0.027172,-8.067707,-4.398938,0.683542,-2.774449,2.884889,-2.263759,1.184959,-5.268655,-8.352983,6.403220,-2.442197,6.160274,0.346274,0.318085,-5.399168,0.199219,3.307871,6.991374,7.938077,-5.894562,-6.409308,3.513241,6.507029,-1.217075,-0.718881,-6.462558,-6.504661,-6.192601,5.835793,9.536660,-8.319460,-0.929905,-0.858259,-5.072943,3.318000,-2.022048,1.230798,-6.157501,7.869381,-6.502803,-0.502924,3.019031,1.578731,8.723370,2.473200,-6.354258,1.115538,8.060141,-4.606394,-5.553063,-5.805722,8.356827,-0.033032,-5.139949,7.127515,9.659987,0.222021,-6.429988,-3.361094,-8.582759,-4.516167,5.591977,9.470138,8.861882,-8.000399,-5.334784,0.453496,9.461838,4.773354,5.041573,-0.649041,-8.896349,3.432540,-9.611323,-7.528824,6.568144,7.878665,1.460984,2.197276,7.142322,-9.284289,-9.067885,5.662750,3.108792,1.229169,8.098969,-8.536473,-7.207601,2.012192,8.690052,0.235081,-9.118237,-9.624165,3.689588,9.269766,8.104641,-1.338952,7.347433,0.407442,-4.153551,2.485020,8.919824,-7.465352,-3.696172,-2.896386,8.200699,-7.149514,9.642807,1.781112,5.824720,0.607476,-4.381870,-3.565332,0.282822,4.157675,1.524000,-8.350230,-6.590700,-6.945712,-8.374198,-4.262260,-7.005801,4.006713,0.071197,-9.477414,1.202514,-1.495678,-5.949600,6.227297,-3.495189,5.385233,-1.173847,-5.205367,-2.632017,3.155068,-0.884799,2.883618,-0.264525,-5.601954,7.900341,-6.227453,-4.084992,5.090104,-3.839055,-0.217478,6.779086,-7.294170,4.005125,-4.921750,0.144924,-8.463344,8.557298,-2.670021,9.838569,-7.030346,0.239697,4.082091,2.435223,-9.260177,-3.273007,-2.543246,9.946077,5.132561,-8.023276,-0.241600,7.322607,4.823234,-8.103126,-0.195457,-5.293872,9.423642,-1.790654,8.658627,1.368077,6.023587,-0.304363,4.290334,-0.041492,8.820536,-8.220631,-4.229156,-9.542383,-8.101621,0.362692,-1.092841,5.518726,7.087999,7.714189,0.088409,5.669401,-6.222795,4.614073,8.606167,-1.332694,-4.359988,-5.183831,-9.970265,-9.018317,-3.187435,9.693656,9.168714,-5.135580,-2.551015,5.009605,-2.548614,-5.759271,-8.071422,-0.871112,5.479059,-3.164253,3.703169,-2.874178,-7.375452,-8.485196,-1.020170,7.288913,5.641412,3.621092,2.226355,8.148924,8.728067,-0.043665,5.219962,8.850126,5.849697,-6.990868,-9.578484,-0.157374,2.136666,1.823398,1.823969,8.626331,-9.219814,-0.831845,9.621124,3.715872,-4.931564,4.888800,-0.106750,-2.525789,-4.314719,-8.042936,-3.333449,7.210298,-7.283962,4.093181,-6.685954,-3.454734,9.880330,-8.542262,-0.421888,2.973983,-7.921009,4.261885,3.736805,-8.043269,-6.593057,2.976899,-5.123619,7.219620,3.645540,-2.626316,4.996099,1.218177,2.102264,-6.813618,0.360351,-5.747978,-3.501356,0.707977,-2.238722,3.813126,-9.162675,8.922103,-7.867962,8.566975,7.041741,9.954861,-7.236278,-1.894783,-9.902603,-1.543101,-4.389965,7.421302,-4.698014,3.135350,6.987277,5.844898,9.577467,-8.178139,0.964736,8.903701,2.206949,-2.362777,6.876957,8.196812,0.292818,-1.080851,5.003826,-6.056458,-4.923942,-1.419680,-4.676750,2.729345,-7.239197,1.317248,-0.855737,-9.819123,0.999555,4.149217,1.989259,4.094612,-0.493147,4.898455,7.092272,4.508255,0.403368,7.675657,-2.117822,3.263662,-2.109561,-6.165712,7.710813,-6.958365,5.017540,-7.001364,8.756913,1.856657,6.019073,6.840739,-7.136613,-9.697080,-1.054197,-0.218204,-2.647502,1.305076,-6.499741,2.435107,-9.774867,8.121779,-7.656096,2.834503,0.970433,3.395137,8.479986,6.203310,-7.228607,4.959369,-4.832040,3.794800,4.483731,1.578183,-2.460566,3.942732,6.626967,9.701893,-1.355787,4.388528,1.151281,-3.123548,8.367869,1.860987,6.906459,-0.692827,-5.702338,2.924580,-2.648400,8.001099,3.544293,6.674883,9.935130,-3.922567,4.556167,4.118499,7.491510,8.114747,-0.367784,-6.355893,8.817951,6.364443,-9.956322,8.587558,9.766107,5.979769,-0.891359,5.915672,8.344953,3.177754,1.422372,-3.685440,0.217036,5.353773,-8.140373,8.410215,-1.815140,4.907971,1.722837,1.713911,9.943653,-4.564353,-9.385081,-9.240025,3.864808,-9.135516,-6.115051,1.921002,7.757282,9.524422,-1.132345,7.686068,5.757243,9.435202,-2.584825,-4.326799,-7.027793,8.103542,-7.003725,-8.858473,8.775241,9.827382,1.844255,4.233514,9.121227,-5.090964,-4.466805,4.235350,-1.124935,-6.603171,0.914140,3.913985,3.332155,-4.739261,-7.106503,-6.091808,-6.809582,4.249415,-7.565861,-5.981281,-1.441448,-5.025795,-5.304328,-1.725413,-7.126436,2.702734,6.369210,8.999807,1.261423,9.867776,5.159908,-9.863050,5.221601,2.683866,-7.866355,9.598655,4.025911,5.965841,5.494270,-1.009919,3.938662,-3.869582,-8.802455,1.713837,4.402777,6.890565,-5.472062,-3.092187,-9.728294,-9.682921,6.881115,1.151744,7.090641,7.721577,-6.661370,-9.087479,0.218744,1.536596,0.044128,-5.446687,3.340723,5.192551,4.269991,2.456821,4.787108,-4.787725,9.039635,8.027132,8.176142,-9.095555,0.170595,8.464521,8.592529,-1.790733,5.156273,6.609244], dtype = "float64")#candidate|5223|(2688,)|const|float64
const_5224 = relay.const([5.587806,-3.740902,-2.927027,5.930508,-6.730495,-3.299087,4.362858,6.257126,3.851335,-1.321109,7.611013,0.215893,1.742997,5.426460,2.128206,7.193838,6.453589,-7.934808,-6.415744,-2.069103,-6.529024,-6.657801,7.010937,-9.202616,-7.782431,0.165710,-3.143499,0.271029,2.091207,-9.905549,5.244208,0.974247,3.980054,-9.633961,-2.061895,-6.779174,6.493585,-8.676747,-0.645101,6.960776,2.405144,5.675175,-6.706588,6.815394,5.683310,-5.671397,7.141326,-9.752178,9.612313,4.211905,8.298286,6.901545,-3.657455,6.764215,-0.046427,-0.139261,0.402383,0.873435,-9.458171,3.598221,-1.763875,-6.623029,-4.700359,-2.463952,4.698424,8.468439,8.885387,3.696269,-2.827816,8.498222,3.651466,2.622900,8.599092,-9.262262,5.966038,7.736682,-2.960407,-9.850778,-5.184775,-2.858970,-8.528354,-3.974886,-4.940673,6.693039,-6.452241,-0.554651,-0.780660,-1.668770,-1.467432,2.277977,3.250083,-4.277886,-8.414031,-3.152385,1.731225,-1.889215,-5.594630,-8.561515,-2.218540,3.464420,-0.671215,2.499080,9.973953,-3.744884,-7.486743,-7.883071,-5.390345,0.699144,2.177517,-5.406773,9.494773,-6.014428,7.687699,-8.047884,-0.973535,6.673711,7.912186,-8.234398,-3.969327,5.442791,-7.739655,-2.398820,-8.046374,-6.130283,9.176544,-0.100153,8.498589,-4.725357,0.851417,8.949216,3.318214,-0.429802,4.629594,1.585317,2.554653,-5.256086,-7.163423,7.166260,0.470862,-4.034811,-4.993968,0.414127,0.493204,-8.496965,-5.602549,7.871889,-3.381392,6.208857,-7.829666,-2.843757,0.988046,1.527675,8.306001,-6.201078,-1.742175,-8.742549,9.761027,2.102950,0.431281,-0.080677,2.268478,9.956702,9.438319,6.680852,-4.286968,-5.645233,-2.796833,4.921787,-7.490378,-4.361114,0.100031,8.119620,-2.942995,6.374518,-6.439722,-9.039762,3.127626,-7.967637,-8.201566,-5.720961,0.947451,-3.735646,0.383801,0.198820,9.286332,-1.347857,-6.190241,7.247509,-6.250122,8.335171,-9.363659,-5.534831,1.004066,1.298943,-5.095128,-0.809596,-6.188975,-8.645039,4.094996,7.052774,2.794074,7.370866,3.971227,6.692351,0.660660,-9.289879,-6.111752,-6.799624,7.808843,1.101509,5.783864,5.729426,-9.202224,2.420260,-9.967493,-9.506188,4.010229,5.265214,-6.927929,-3.286500,2.638931,-1.508000,-3.055391,-6.803509,-3.586252,8.770397,3.520031,5.452689,-5.033143,1.137159,6.485919,6.928217,1.457952,3.721912,4.130936,-6.680691,-4.186074,-5.741047,5.171933,9.526535,-0.983665,0.116338,8.974830,8.363585,-9.941430,-6.532630,-5.327067,-9.796844,1.761407,8.156821,0.661692,8.182958,-0.992457,-8.250186,-5.154392,3.183309,3.952797,5.175312,1.522279,-3.098849,7.430719,2.386995,-7.297151,-5.620080,7.574211,-0.353426,1.862469,2.672279,4.848373,0.490945,6.371556,-0.777434,7.987010,1.375227,-5.862904,-2.795914,1.669132,0.882571,1.011235,7.391572,-9.403225,-2.982228,6.674463,2.504161,2.980718,9.081663,-0.326538,6.900611,6.508465,-2.808040,7.896993,8.885442,9.575465,-1.833724,-4.931669,4.352500,-2.364042,-6.346654,3.318971,-3.685604,-3.059489,8.067330,-6.423393,7.059718,-4.391387,7.796895,-5.452995,-5.196018,-7.012346,1.292336,-7.281434,6.548268,-8.268922,-7.110308,3.237483,-8.401171,-0.780043,-8.822550,0.436559,-1.344310,-8.765843,6.554574,5.897895,-9.284636,-2.117402,-0.659824,-6.673464,4.986706,-0.656038,0.845938,6.484137,1.939473,1.359690,-1.668547,5.856841,-4.838344,-8.183146,2.770847,4.309481,3.949049,4.483178,-9.347833,2.074919,-3.465533,-5.717829,-9.514882,7.911323,1.623209,7.322895,3.160839,1.683848,-6.037504,3.688739,6.426037,7.149508,7.172664,-6.970929,1.814753,0.122818,0.399481,6.186119,8.432757,-4.612106,1.588858], dtype = "float64")#candidate|5224|(364,)|const|float64
var_5225 = relay.var("var_5225", dtype = "uint32", shape = (84,))#candidate|5225|(84,)|var|uint32
call_5221 = relay.TupleGetItem(func_3487_call(relay.reshape(var_5222.astype('float64'), [1, 16, 12]), relay.reshape(const_5223.astype('float64'), [14, 16, 12]), relay.reshape(const_5224.astype('float64'), [364,]), relay.reshape(var_5225.astype('uint32'), [84,]), ), 1)
call_5226 = relay.TupleGetItem(func_3492_call(relay.reshape(var_5222.astype('float64'), [1, 16, 12]), relay.reshape(const_5223.astype('float64'), [14, 16, 12]), relay.reshape(const_5224.astype('float64'), [364,]), relay.reshape(var_5225.astype('uint32'), [84,]), ), 1)
func_1602_call = mod.get_global_var('func_1602')
func_1605_call = mutated_mod.get_global_var('func_1605')
var_5249 = relay.var("var_5249", dtype = "uint64", shape = (154,))#candidate|5249|(154,)|var|uint64
call_5248 = func_1602_call(relay.reshape(var_5249.astype('uint64'), [11, 2, 7]), relay.reshape(var_5249.astype('uint64'), [11, 2, 7]), )
call_5250 = func_1602_call(relay.reshape(var_5249.astype('uint64'), [11, 2, 7]), relay.reshape(var_5249.astype('uint64'), [11, 2, 7]), )
func_2186_call = mod.get_global_var('func_2186')
func_2190_call = mutated_mod.get_global_var('func_2190')
call_5251 = relay.TupleGetItem(func_2186_call(relay.reshape(var_5225.astype('uint32'), [4, 7, 3]), relay.reshape(var_5225.astype('uint32'), [4, 7, 3]), ), 1)
call_5252 = relay.TupleGetItem(func_2190_call(relay.reshape(var_5225.astype('uint32'), [4, 7, 3]), relay.reshape(var_5225.astype('uint32'), [4, 7, 3]), ), 1)
func_2378_call = mod.get_global_var('func_2378')
func_2381_call = mutated_mod.get_global_var('func_2381')
call_5253 = relay.TupleGetItem(func_2378_call(relay.reshape(call_5248.astype('uint64'), [154,])), 1)
call_5254 = relay.TupleGetItem(func_2381_call(relay.reshape(call_5248.astype('uint64'), [154,])), 1)
output = relay.Tuple([call_5205,call_5215,call_5221,var_5222,const_5223,const_5224,var_5225,call_5248,var_5249,call_5251,call_5253,])
output2 = relay.Tuple([call_5206,call_5216,call_5226,var_5222,const_5223,const_5224,var_5225,call_5250,var_5249,call_5252,call_5254,])
func_5255 = relay.Function([var_5222,var_5225,var_5249,], output)
mod['func_5255'] = func_5255
mod = relay.transform.InferType()(mod)
var_5256 = relay.var("var_5256", dtype = "float64", shape = (8, 24))#candidate|5256|(8, 24)|var|float64
var_5257 = relay.var("var_5257", dtype = "uint32", shape = (84,))#candidate|5257|(84,)|var|uint32
var_5258 = relay.var("var_5258", dtype = "uint64", shape = (154,))#candidate|5258|(154,)|var|uint64
output = func_5255(var_5256,var_5257,var_5258,)
func_5259 = relay.Function([var_5256,var_5257,var_5258,], output)
mutated_mod['func_5259'] = func_5259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_5290 = relay.TupleGetItem(func_2937_call(), 0)
call_5291 = relay.TupleGetItem(func_2939_call(), 0)
func_1824_call = mod.get_global_var('func_1824')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_5318 = relay.TupleGetItem(func_1824_call(), 1)
call_5319 = relay.TupleGetItem(func_1825_call(), 1)
output = relay.Tuple([call_5290,call_5318,])
output2 = relay.Tuple([call_5291,call_5319,])
func_5321 = relay.Function([], output)
mod['func_5321'] = func_5321
mod = relay.transform.InferType()(mod)
mutated_mod['func_5321'] = func_5321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5321_call = mutated_mod.get_global_var('func_5321')
call_5322 = func_5321_call()
output = call_5322
func_5323 = relay.Function([], output)
mutated_mod['func_5323'] = func_5323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2819_call = mod.get_global_var('func_2819')
func_2821_call = mutated_mod.get_global_var('func_2821')
call_5363 = relay.TupleGetItem(func_2819_call(), 1)
call_5364 = relay.TupleGetItem(func_2821_call(), 1)
const_5367 = relay.const([6.398210,-7.433331,-5.050607,7.345554,2.630271,-3.612876,-1.331072,0.288066,-6.978466,1.788202,6.302997,-3.896376,3.142132,-2.027013,1.620631,-1.663000,5.982802,-7.833534,-5.174000,1.838711,-1.893006,-7.175588,4.733206,-7.483832,-7.987277,0.072632,-8.552174,3.896088,-8.047623,9.236229,5.264107,-5.198640,-2.079896,9.176876,-6.079168,7.506355,-1.202903,3.384392,2.700415,-9.820609,2.050903,6.175336,7.162120,5.255592,-7.065998,6.327485,9.708392,-0.984086,-4.670753,-0.537029,4.473714,-7.440769,-5.660124,1.382450,0.814329,7.753927,2.746545,0.655337,5.446488,-2.348643,1.544089,5.129353,-6.296305,-5.275701,2.139566,2.609010,-7.334911,6.008835,-1.855000,-3.214329,-2.925247,-1.793736,-4.018503,-1.720702,4.830474,9.520056,6.651908,3.015753,5.243054,-5.302868,-8.225208,8.152707,1.030835,2.121243,6.325427,-9.522449,3.411492,2.427331,-6.904452,8.312024,9.621263,-6.789403,-7.152899,-9.681903,2.853093,-0.570594,-8.098756,6.468907,-2.433386,7.092019,-7.543540,3.340390,5.039090,-8.762353,9.477165,4.911615,-1.633294,2.292457,5.171175,-8.189275,-8.044531,-5.448006,-9.263530,1.325706,7.783492,-3.716515,-0.383224,4.857531,4.191845,4.518928,-9.987074,8.089522,-2.605510,6.179471,-3.608259,-7.535497,-7.803087,8.300890,-9.712500,-6.461291,-8.628206,-6.703610,-5.198957,-7.879592,6.241693,-1.737815,-0.571259,-4.290670,-4.885694,-3.884418,-2.546715,-7.387406,7.719111,4.557276,-2.011560,2.310485,9.453308,9.808857,-3.574546,3.826605,2.245693,5.427326,1.654756,-0.373994,3.355318,-2.831105,2.405122,-1.151637,-9.648494,4.356261,4.913089,9.969697,-4.094660,3.963046,-8.692471,-5.100671,-0.780304,5.329421,7.208105,-7.162055,-8.485529,-2.782212,0.274436,3.588410,3.724328,-0.664342,1.357118,8.481393,-1.967696,-2.840323,4.642502,-0.409695,-2.701510,5.623837,2.571854,-5.864725,-8.352877,8.173166,-1.601663,3.102456,5.606429,-5.062799,-0.039324,-9.115593,-3.559568,7.354780,0.663343,-7.180475,-1.915575,-8.088767,9.437802,6.723227,2.895529,7.184484,4.112089,1.585868,-2.589009,-4.187456,3.111663,8.240940,3.838712,0.645005,-5.648619,8.530174,9.984913,-5.807157,-8.468594,-0.412913,-2.775949,2.417373,3.360269,0.677433,4.100608,-2.519267,-9.964567,-4.069428,-4.815239,4.946760,9.893066,3.289836,-6.110042,9.511564,-6.838310,-1.959189,1.056621,-9.748025,8.546111,-5.544386,2.744797,0.512626,-1.890753,-3.569790,-8.839883,8.601386,-6.728893,-4.780473,-1.820946,3.465831,-0.029827,-7.291224,-5.318919,-1.435922,-2.942678,-9.450604,8.681078,4.235019,5.693170,-7.647305,0.424107,-5.367103,7.346736,-7.858148,-1.312654,-2.800711,-8.832294,9.060039,6.674760,-4.255857,-6.098456,-3.611344,-9.360534,-7.792690,3.293802,5.069994,-1.140297,-0.165419,4.701272,-0.493972,-8.948230,-8.807932,6.040477,4.411434,9.177545,-8.306291,-6.469620,0.787176,-4.553167,7.715973,-0.684980,9.590635,-8.166856,-0.810067,-7.716837,2.725306,8.210371,1.421433,3.428992,-2.638262,-4.574696,9.631276,2.248831,-5.828359,-2.710803,0.079248,-7.203540,4.432064,-7.829524,-5.817096,-9.667629,2.075156,1.086487,-7.985554,-4.059897,8.086523,1.150935,4.701987,9.959599,9.944667,5.224261,2.316434,6.311121,-0.763381,-4.850193,-7.145517,6.900392,9.437642,3.640029,5.862543,-8.114444,-0.593276,8.500524,-2.039026,6.278852,-6.924163,-8.705541,3.631914,5.042409,9.378546,-8.764405,-7.961152,4.261744,5.914447,-6.214917,-7.107931,3.641172,-7.199466,0.937592,-1.246840,-5.949881,9.332410,-2.443876,-4.247049,7.400883,1.307166,-9.969576,3.901028,2.438457,-0.304804,3.700183,-3.226842,9.035957,-6.083348,7.068695,-5.696880,5.825776,-1.650224,-5.548187,8.492393,-7.479497,8.542663,4.984119,9.894687,4.600700,-1.799017,-4.526942,-9.510617,9.501917,-3.251345,2.348916,1.398898,0.178081,-9.186765,-1.441650,0.114622,-6.383865,6.197291,9.872083,7.065556,-0.734014,9.008122,-4.561002,8.544083,-4.179401,6.639445,-1.166022,0.678271,-7.635219,7.269195,5.842943,-6.061364,3.320277,0.138318,-0.788567,-5.880845,-3.327842,7.670961,9.299875,5.060620,6.495785,5.698555,4.134939,9.020994,-2.094108,-5.956492,2.975805,8.520959,9.510361,3.475240,4.061515,-0.014418,0.087090,0.200800,-8.734390,8.706185,2.370942,9.061535,6.100344,-9.154256,4.865478,7.853910,9.572847,-5.916273,-6.498779,-0.350294,3.636456,7.355437,4.572630,7.254340,4.385570,6.598792,4.211844,3.503095,0.484660,-1.036506,9.268061,1.958821,-2.213811,4.575498,2.117322,3.667037,-4.485379,1.475730,1.799665,-4.303149,8.747071,1.747811,-3.303603,1.059732,-3.745667,9.727984,-0.649987,8.178764,-6.268625,4.328758,-0.155238,-4.255160,7.677790,-5.608677,-4.615090,-0.425773,-5.185664,-8.060934,-0.946739,-4.360048,1.396857,-3.152168,-1.317144,-5.920230,-4.819544,-1.866250,-7.245121,-3.863123,4.395961,-0.777911,6.733116,2.479910,-4.166616,-0.748491,-9.738006,-9.996059,-6.709938,9.990991,-4.995698,1.054512,9.961537,1.934116,-1.412201,4.568250,5.888025,9.087906,-2.691446,-2.798476,-7.041054,-6.018025,-7.441691,-6.137554,6.575875,4.174717,-8.618539,6.136278,8.825644,4.856167,-8.446637,2.729305,5.009271,-8.443655,3.617896,-7.807309,8.268739,-8.550954,4.778232,5.670088,-2.018612,-1.881518,6.158458,-2.017621,1.233746,4.722969,2.902177,6.618885,5.651619,-3.261352,-6.401553,1.183498,3.637035,1.602799,-0.899435,-9.445722,-1.549945,2.454332,-5.263232,-1.071177,-7.204558,7.459896,-0.697386,-5.425088,-5.362828,-3.177784,9.301362,-8.509919,-2.274280,-9.773421,-8.725037,9.974562,6.667540,4.876740,7.548589,9.496606,0.113317,9.390949,0.356295,1.027449,-4.618918,1.240560,4.229223,8.286118,9.607073,1.137186,-2.191848,-3.411141,9.142671,1.695484,4.650986,-3.791394,2.344780,-4.029999,0.021128,-1.721876,-8.339625,-6.895757,1.572474,5.591381,9.297828,3.570634,8.723542,0.402046,6.447106,1.817619,-3.226257,9.768381,9.921930,-1.118332,9.386673,8.141367,-4.054684,-9.845800,9.173686,1.191939,-2.503788,-2.469367,-6.878555,-7.207574,-9.144778,9.113478,-4.255985,-7.901501,-5.927926,-2.034977,7.513446,6.072258,6.109884,6.230259,3.359794,2.387563,3.213191,-6.306610,-5.955900,0.712028,-7.666739,8.123861,2.406701,3.442039,-6.883818,-1.903133,7.509720,-5.353648,6.515521,2.873424,-9.095534,-7.174122,-4.290405,4.891092,1.940579,7.106947,9.557904,-6.527652,-6.520861,2.814867,-7.868043,-8.003095,8.536959,-8.668710,-7.244854,-2.892731,3.343114,3.643945,5.293962,-9.923630,1.085357,-5.470652,-0.791331,-2.380408,-9.594495,1.266923,7.658515,-8.601044,-6.868570,0.183172,-2.044965,3.690610,-9.123477,5.198260,-0.311484,-1.307820,0.899947,-8.949515,-2.613462,-2.251394,-0.963643,6.880985,8.893543,5.003990,-5.700273,5.611050,-1.063785,-2.586430,7.432125,-0.281682,0.499733,8.964666,6.533694,-8.281458,-7.012037,1.574976,1.660506,-8.241622,-2.568058,-6.437838,-7.767947,-3.336149,4.212307,6.514699,-6.783111,-9.229355,9.382243,9.679737,4.279421,-5.526786,-9.966095,9.707692,-4.625904,1.195047,1.310382,8.466365,7.237058,-1.234534,7.184158,7.269276,7.545893,2.527125,2.285019,0.237461,6.727756,8.797038,0.065884,9.444631,-7.161940,4.101813,-0.272651,-1.345726,-0.582579,-8.404037,-3.534397,1.294652,2.513978,-9.465928,6.730604,-6.195263,2.260809,2.315842,-2.917554,-3.283724,6.498554,-5.594817,7.743710,9.457246,0.114532,8.213098,8.927152,2.857727,1.237687,7.165966,3.273450,3.812258,1.705716,-4.201160,9.886866,2.827841,-0.707019,3.880570,-0.196801,3.499386,-2.435109,2.399919,0.833955,1.183987,2.076788,-7.002030,-4.970198,4.484351,-5.893254,2.707979,3.170154,-0.743229,-0.500010,4.809877,-8.314039,-6.483182,0.654391,-4.424704,-7.019575,3.153264,-0.790951,-8.091963,-1.563300,8.349727,0.179218,-9.480230,0.446491,-2.202881,-0.338403,-7.847158,-3.365007,-3.326905,-7.846484,8.330611,-0.222883,-1.323234,-1.231608,3.310517,0.026051,0.218503,0.399805,4.958127,-5.317730,-3.983475,1.238732,3.157850,1.276604,3.881974,-5.791189,-5.027177,7.899770,0.323368,8.493211,-1.655613,7.783300,-1.612815,-1.035701,2.638819,9.318096,1.399601,-4.599913,3.348319,-5.335555,-6.214295,0.876868,6.203265,8.093430,-4.315560,5.807436,3.354108,-2.135847,7.262473,7.280147,3.216444,-6.378556,4.100177,5.126260,-1.609387,5.631664,-4.542796,4.186956,-2.039893,-5.776238,-3.207573,6.913768,3.080988,0.558050,-1.419512,6.423148,0.788056,0.032619,0.119308,4.230962,-3.858902,-3.803210,8.659560,0.373825,-1.318535,-9.173352,0.019060,5.099865,1.550030,-0.796461,5.060816,7.801545,8.972594,-4.032243,6.802245,3.335702,-4.544548,-1.833460,9.742764,1.325002,-6.918344,-8.446249,-7.106209,-5.293565,-1.770468,1.987611,-4.620552,2.230454,8.527915,-6.287576,0.199439,7.835299,3.178600,-3.531708,3.461169,3.725674,7.805228,3.911121,4.506665,-3.446502,-5.436396,5.681116,-9.707382,1.729701,-9.069134,5.517641,2.105621,-8.125742,-2.928858,1.778706,-8.400030,2.261929,4.338553,8.674064,-4.659475,-9.885255,-1.013725,-7.145526,-3.282718,-2.752222,0.958263,4.990826,-4.735581,-4.015691,-8.888463,-0.768834,-0.274486,-3.961270,0.062210,-8.205905,8.943673,-8.434945,-8.967527,4.905126,-5.288927,-8.466551,0.055180,-8.304024,9.186334,-5.703263,8.018137,-5.828958,1.002227,1.025210,3.727693,-6.112832,-7.969306,-3.576583,2.349026,-0.915352,0.025188,-1.423360,-5.164914,4.480852,2.846217,4.042611,-8.188365,-2.340008,-8.601337,-6.035606,7.241778,9.356389,-9.907076,-0.983855,3.652225,6.516019,2.554698,3.134348,8.812323,8.882683,-1.833626,0.475534,1.024523,-8.878921,5.262659,7.938453,-3.623921,-0.886080,-4.640078,-0.320446,3.237435,-5.871806,0.530421,-3.354051,-5.798939,6.010864,-5.406165,-0.423134,-3.340584,-3.595894,5.702550,-9.588378,-7.605945,-7.502154,-4.577436,-2.094444,6.141037,-1.529217,-0.982626,3.407386,3.755502,2.429737,7.399196,2.183759,7.113479,7.982759,2.994059,-6.307708,-6.694938,-8.926857,5.471779,4.903910,1.921302,-0.789373,-3.868141,1.810568,-5.917679,-8.924748,-8.204988,-3.155056,5.720850,-7.529228,2.077089,-3.917547,-1.195274,-8.380667,2.392785,-2.995509,-9.515614,-3.922542,-9.417578,-1.267856,-5.119599,-2.955935,-9.960911,-4.087712,-1.920067,-9.651165,1.321710,3.355916,7.139785,-2.482571,1.571863,7.415855,5.287017,3.876048,7.864608,-6.372355,-9.615109,-0.235013,0.876140,-0.625001,-0.750517,-2.509419,8.162436,9.946331,9.537269,4.627547,-2.932275,-7.527904,-8.484234,0.282457,5.820702,3.994468,-0.491770,-0.575569,4.223956,2.141834,2.971518,1.728537,1.546769,5.012702,-0.818171,-5.823691,-7.330318,-2.043511,-9.671299,-8.514501,-7.611513,3.453067,-8.693732,-6.412171,-8.369813,9.157030,8.494799,-2.582304,3.455214,-2.649753,-4.004584,-7.560006,6.920576,7.958990,-1.612988,-2.205042,6.062271,1.431429,9.046334,4.556922,1.004817,-6.747488,-3.919802,3.751623,-5.222070,6.563580,-5.462609,8.591177,9.441506,4.419807,4.688366,-4.818106,6.069519,-6.524656,4.832685,-0.888066,-5.499709,-7.420076,8.815847,-1.631150,7.311327,-3.500694,7.947785,1.521230,-6.913285,-5.010038,-6.536824,2.591160,-6.844981,7.161860,2.997186,-0.976134,-6.161666,-9.350458,-5.110880,5.276652,6.692905,-7.022801,-3.986214,4.860953,-9.871628,-3.482968,-5.933375,6.215181,4.704768,-5.602034,-4.628923,-4.159960,5.621243,5.454634,9.315490,8.955314,-2.455599,6.090882,-1.838418,-8.107102,-5.502793,5.717686,-4.629777,6.798508,0.453074,-9.129147,-3.370693,-6.904951,-7.565331,7.986714,9.450220,-5.529335,-1.052114,-4.452621,-4.495368,-0.840999,8.267436,9.619544,-7.342191,7.058575,-5.652417,3.194367,-5.555867,3.382137,6.632083,-7.573981,7.510822,6.871853,-6.428469,-7.112983,-4.385781,3.126722,8.495690,9.975867,1.238111,0.540146,-8.889935,-8.791127,3.367355,8.429236,-7.113585,7.142213,-1.403483,-2.916339,-4.763342,0.103015,4.009247,-2.718640,2.088385,-2.067196,-0.235950,6.270446,-3.631076,7.585798,4.809762,9.915307,-7.299538,0.270826,6.614488,7.403475,4.727109,-8.592062,8.003350,4.754161,-6.236354,2.883853,8.031648,4.837684,-3.570400,4.368201,-8.239239,4.206557,6.068430,4.842098,-9.495583,-6.172598,-2.058354,-0.775197,0.173312,-2.691682,7.301262,-8.194982,-9.444115,1.017133,-9.909945,-1.669660,4.934852,7.902833,9.512313,5.099718,4.579876,6.387234,-6.802483,0.994440,7.954931,2.458846,2.988751,7.947259,3.103468,-9.033194,-1.242897,-7.314189,5.584420,-8.968058,2.316438,-6.049205,-6.273375,-6.404934,-0.092220,-3.225560,0.884685,-5.158642,-8.687189,6.376315,-3.258896,8.373744,-1.523858,-4.824339,-3.293132,-6.351243,-0.879270,-1.665485,-9.929619,2.298020,8.807812,-3.536379,1.021831,2.890109,9.904677,-6.949781,3.824575,-8.834918,2.925953,7.608735,5.331024,1.806112,-5.347289,-7.710006,-3.028088,5.429795,-1.242686,9.496429,4.323638,3.859632,2.578534,-2.339519,6.586472,-0.641836,-3.356695,-4.696625,-5.438401,6.657015,-3.470020,6.874375,-3.601318,-3.613752,3.406265,-6.740789,-3.124800,4.368447,2.275479,-3.295751,-8.716357,-7.280767,-7.965429,-3.633434,-3.223643,-0.567923,-1.696639,-5.061635,-3.216203,5.134882,-1.426091,-9.785171,0.177295,-2.483695,-4.426186,7.305525,3.240797,6.491391,6.973467,-9.682922,7.776225,-1.388871,1.384583,-5.942775,9.107144,3.671042,-7.408698,-9.623804,3.489824,-2.526270,-7.185560,-0.878539,8.988996,1.739745,0.153273,7.168867,-2.894739,-4.027340,-2.399686,-6.091014,-5.393201,9.293997,5.635567,-2.442070,-0.965001,-5.065437,0.407438,-1.758324,-7.756211,8.825500,-5.676676,6.131963,-6.679784,-8.376279,-5.244533,-7.436074,-1.527249,7.274721,9.276871,-8.082183,6.882215,-4.681549,1.634111,1.567975,3.081072,5.203876,5.509960,-7.745129,1.402046,-8.140881,2.849627,-0.201282,-6.877526,-4.983988,-4.888131,8.880658,8.484549,-9.971323,0.663201,5.906293,-9.895958,-2.338083,2.451071,5.691155,1.450633,-0.973538,-1.401895,-2.610578,5.524149,-4.595767,6.172144,9.593393,-8.756119,7.705379,7.081574,-2.693933,8.222277,-5.592408,0.125997,6.854004,1.737381,-8.782330,0.737212,5.730874,4.690210,-1.527095,4.429552,1.723561,3.165999,5.801080,6.682744,-8.504009,-5.012671,0.816558,-9.337463,-3.484441,1.478630,2.687317,0.170198,1.747969,-4.642758,4.544213,9.207392,2.445914,5.339158,1.549252,-4.744821,-3.293737,-5.961711,0.944755,-5.539994,9.243965,-4.462434,-2.638884,6.522622,-0.587116,1.244693,3.188424,-3.061244,3.311226,-7.463765,8.368027,-0.371127,2.973123,5.243149,9.199963,4.439165,8.347556,4.918113,9.694656,4.959822,2.419880,-5.136032,2.557024,8.432703,-5.331878,-1.908410,4.904560,1.041518,6.489114,7.217764,4.856784,4.965668,-4.917510,-3.279429,6.217674,8.828439,1.864090,-0.909541,-4.033620,8.616918,7.294572,-8.398352,4.496363,5.885542,7.216894,0.767022,0.891961,8.152779,-8.242500,-7.638998,-8.166400,-5.654143,6.809762,-8.433794,-4.563363,-9.870707,0.913229,-2.035141,9.672177,-0.448843,-6.721658,4.416618,-3.458344,8.404394,-5.132502,5.353747,2.190532,-5.739526,-7.938620,6.733199,5.783291,-6.570143,-7.385946,8.273222,-1.895494,-4.611510,1.137383,1.156065,8.305504,-4.943328,-1.136031,-5.195661,1.725780,-3.726701,3.403604,6.417269,5.518746,-1.904265,-5.731167,3.050613,0.865119,-6.474051,3.993432,-4.128439,-7.251415,3.072493,-9.672570,4.521431,-4.031313,5.469862,7.279225,-3.256701,-5.875848,-2.870257,-7.218329,-2.566384,-9.527270,9.358063,-3.338577,-0.319997,-0.041819,6.319976,3.063182,1.337698,-5.458610,3.036986,4.567858,-0.572622,-7.203667,-8.106420,0.176400,-4.110372,9.582678,9.648746,-8.229623,5.299814,1.250944,9.400365,1.170765,0.287354,-8.206996,6.216514,-6.809172,7.138198,-0.691567,-7.656124,-6.002815,7.853857,-9.503641,7.726988,-0.701620,5.356848,7.879271,-0.052672,9.561585,-1.505882,9.541254,2.748100,-4.059853,-4.926700,1.600600,-1.054388,-2.248115,4.662989,-7.771262,6.402742,9.797574,0.422495,9.021472,2.019216,5.692174,-9.654817,4.399342,-3.969409,9.931974,4.096489,5.728321,-9.740070,0.988154,-0.097653,5.406464,5.253441,4.313562,4.451357,-8.016055,1.964037,9.891510,-0.972181,-4.465154,-4.835486,-6.117400,-5.630879,8.959514,3.634921,-7.172279,-0.446115,1.805622,7.985121,-7.813353,2.853903,8.189448,-4.405009,9.606707,-3.699117,-6.272152,2.939137,-7.560548,-8.870245,-9.014880,-0.304684,-6.454736,-1.995059,-5.139982,-2.189798,2.804693,-6.150099,-0.601735,9.775358,3.414671,5.142199,-3.001628,-7.080199,-7.122404,-8.038779,-0.150667,-7.127130,0.793048,-0.005847,-1.318888,3.217175,7.196889,-7.493178,-5.540974,0.369142,5.264398,1.761643,0.169743,-2.452202,5.391075,-1.502252,-1.874369,-3.207792,-1.611511,6.299703,4.615981,-1.089593,-2.932971,-5.412046,-2.780061,1.891948,7.413989,5.335185,-7.918312,-2.148293,-1.976734,-3.820499,8.960602,-3.915745,8.912724,-0.265997,-9.106746,9.006803,-4.812752,-1.293347,6.610411,-0.027362,-7.749438,4.536713,-0.295447,-7.916116,4.448192,8.714290,6.445038,-9.262746,3.159956,5.815783,7.413136,0.154836,1.175088,-2.003979,8.194247,2.927528,-9.233905,-8.977506,-3.229125,8.092844,4.641089,6.356723,-0.177090,-1.000120,-4.819039,-3.097807,-6.484570,8.610781,9.064319,9.801138,9.179563,-6.046702,6.261934,-0.961158,-5.461161,7.727195,-7.716859,-7.099631,-8.668486,-6.014572,5.432530,-0.361645,-5.125367,5.073370,0.441392,-7.905316,6.856300,-8.924664,-7.099316,-9.009251,-7.375394,-8.005934,-8.998557,-3.805241,6.796314,-4.129552,8.341691,0.562946,-2.346945,0.665685,7.978422,-6.950377,-7.719731,5.449450,7.691873,8.251769,-4.719127,-4.650142,9.709171,1.822006,-0.674353,4.238874,1.671312,1.954755,5.911198,9.761304,0.596986,6.227872,5.990331,-7.929283,-8.298675,-0.699662,4.430526,-6.234102,0.931244,-4.873390,4.233837,2.470662,-1.350390,-9.838262,0.341574,-8.535001,-4.637104,5.181815,-1.036721,-6.392715,7.211037,8.645227,-3.538952,8.599078,-7.714789,4.891889,9.288194,-3.984013,1.850325,9.901207,-8.782093,9.077304,0.225436,-7.150446,-6.414071,4.741331,-8.022737,5.688595,-4.241817,-7.558349,-4.011048,-6.988471,5.163287,7.188824,3.566058,6.185895,-9.008997,-8.546688,9.390319,7.172963,-4.278833,-9.953684,-9.275411,5.950716,-2.853700,3.085495,9.863347,0.298538,-7.848723,4.905487,8.855159,7.690347,-3.978046,-7.475838,1.402432,6.905043,-9.728296,-6.061890,7.031047,3.210952,0.124459,-3.522882,-2.579530,7.493850,-8.660955,-5.882048,-7.759477,6.439073,-8.718183,-7.621642,-3.706431,8.081168,7.363819,1.083199,1.989842,8.602499,6.964933,1.022085,6.594298,-7.693439,1.399578,5.709564,-3.481335,-6.563953,-1.957937,-3.611585,1.253005,2.160298,7.666732,2.606382,4.357514,-3.293673,8.144234,-4.738644,-4.562028,-0.947251,-6.044387,0.490994,6.019934,4.567804,4.483225,-2.034192,7.081816,9.435374,-6.580153,8.056696,7.027413,-4.287162,4.141179,9.820742,9.598952,7.578573,-0.948902,-3.006378,9.327516,0.147968,-1.342614,9.815991,-4.255700,-1.392254,5.441011,-9.632561,6.497158,1.742430,-3.876982,4.285005,1.330120,9.801182,9.387289,6.274647,4.035720,8.358764,-3.624414,5.246146,-1.674787,6.419001,9.250074,-2.854738,-8.506936,2.546825,3.644654,-7.422903,4.051110,-7.233957,5.407769,3.250581,-5.118848,-6.266233,6.074280,9.043793,-2.610743,-6.417341,9.855786,-4.397561,-5.680742,-8.450809,-9.535266,-7.887590,-1.034615,1.413629,-8.500972,-6.856519,3.007048,9.228124,-8.083397,-9.097771,6.995285,-3.266683,-5.732141,-8.743039,-8.946972,-3.176665,9.879294,-2.310519,4.724167,-3.237805,3.157937,-8.168486,2.455489,1.164019,8.948378,-6.844986,-8.339814,5.502012,-3.039250,-8.378762,-7.491968,7.398849,9.790979,9.388617,4.142532,7.612283,-4.307522,-3.094357,0.911659,2.588977,6.635076,-6.068983,-3.475583,-5.343426,0.967118,2.309090,1.387610,-7.598355,-1.274194,1.967059,8.153102,-6.032387,7.976787,9.529195,4.409016,6.631611,6.001127,-1.241548,5.810985,-6.548950,5.136142,-5.183444,-0.252928,-6.650736,-1.947483,8.581206,-7.499563,1.503562,-1.525916,-5.918273,0.620192,-1.834759,4.924207,-6.789116,-7.217594,-7.724163,-1.266237,-9.318730,2.204094,4.918701,6.395985,3.055180,6.256978,5.002432,7.075007,7.168325,3.968804,0.097918,-4.831501,0.196422,-6.681156,7.954724,-1.532001,-4.955380,-8.394999,4.621207,-8.160679,5.954941,6.735546,3.264921,-6.117177,5.605544,-6.176813,9.042350,-3.114319,1.956967,-3.343749,8.289094,4.977485,-6.898866,0.755700,1.636620,-9.833473,9.620774,4.572933,-4.027017,7.430036,4.718800,1.862534,6.357362,7.961830,-8.786899,3.048903,-0.231696,8.049341,-1.479747,-3.675931,-9.552325,-6.407290,-3.408442,-3.611435,1.164585,-7.318486,-8.147412,2.334680,8.678045,-2.748455,-9.162595,7.399953,-6.628390,4.976407,1.193722,-1.403598,-4.290133,-2.711443,-1.907172,-2.769478,-7.865891,-1.676662,-8.562591,-7.130879,-6.878143,3.437005,-8.191735,2.660442,-9.375139,2.825663,-8.115750,5.129088,-1.625551,6.513479,2.231880,7.640006,-1.431050,-7.712233,9.110223,-4.010513,1.354125,4.222468,-8.097073,6.939696,0.189992,6.980968,-5.296554,0.572589,-6.856156,-8.107349,-0.896595,8.869538,4.338297,7.505620,2.754408,0.239517,9.254403,-1.624063,3.879201,-6.541280,5.919376,2.087660,1.961352,-3.507364,3.871811,9.724657,-8.652785,8.867505,-6.949930,3.351249,-2.685372,-3.847930,6.711998,-3.615821,-5.009980,8.277219,-4.625734,-8.089029,7.723888,1.489489,2.075799,-1.808245,7.798128,4.537001,-2.189870,9.512731,9.795544,7.248408,3.168294,-7.234633,-8.589948,4.418435,-6.478423,-6.077183,-6.518402,-3.976143,-4.745497,-3.713027,-1.960844,3.338511,-0.912515,-8.108471,3.313560], dtype = "float32")#candidate|5367|(2160,)|const|float32
bop_5368 = relay.equal(call_5363.astype('bool'), relay.reshape(const_5367.astype('bool'), relay.shape_of(call_5363))) # shape=(2160,)
bop_5371 = relay.equal(call_5364.astype('bool'), relay.reshape(const_5367.astype('bool'), relay.shape_of(call_5364))) # shape=(2160,)
output = relay.Tuple([bop_5368,])
output2 = relay.Tuple([bop_5371,])
func_5377 = relay.Function([], output)
mod['func_5377'] = func_5377
mod = relay.transform.InferType()(mod)
output = func_5377()
func_5378 = relay.Function([], output)
mutated_mod['func_5378'] = func_5378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4349_call = mod.get_global_var('func_4349')
func_4351_call = mutated_mod.get_global_var('func_4351')
call_5391 = func_4349_call()
call_5392 = func_4349_call()
func_4954_call = mod.get_global_var('func_4954')
func_4957_call = mutated_mod.get_global_var('func_4957')
var_5417 = relay.var("var_5417", dtype = "float32", shape = (2160,))#candidate|5417|(2160,)|var|float32
call_5416 = relay.TupleGetItem(func_4954_call(relay.reshape(var_5417.astype('float32'), [2160,])), 1)
call_5418 = relay.TupleGetItem(func_4957_call(relay.reshape(var_5417.astype('float32'), [2160,])), 1)
func_1602_call = mod.get_global_var('func_1602')
func_1605_call = mutated_mod.get_global_var('func_1605')
const_5433 = relay.const([6,-9,-8,-4,-10,1,2,2,10,-6,-1,-5,-3,-4,-5,-3,7,-5,-7,-4,-1,-10,6,4,10,-4,-9,9,-9,2,-4,-6,-10,-7,-10,-5,-5,-6,7,-6,10,-7,8,10,10,3,8,6,8,9,6,1,-9,2,-6,2,-8,-2,4,4,-5,-10,4,-5,1,2,-7,7,-9,1,-7,1,1,-2,7,-3,-10,-9,8,9,-5,-7,4,-8,4,6,2,7,-3,2,-4,4,5,10,-7,-5,10,5,-7,-6,-4,-2,-2,-4,7,-4,-9,7,-2,-9,8,3,9,1,-3,-7,-9,-5,-8,-5,3,6,-10,7,-9,-2,4,4,-3,7,2,-5,3,-2,-9,5,-8,5,5,-9,8,-1,5,6,-2,6,-9,7,-10,-10,-7,2,-6,-3], dtype = "uint64")#candidate|5433|(154,)|const|uint64
call_5432 = func_1602_call(relay.reshape(const_5433.astype('uint64'), [11, 2, 7]), relay.reshape(const_5433.astype('uint64'), [11, 2, 7]), )
call_5434 = func_1602_call(relay.reshape(const_5433.astype('uint64'), [11, 2, 7]), relay.reshape(const_5433.astype('uint64'), [11, 2, 7]), )
uop_5444 = relay.acosh(const_5433.astype('float32')) # shape=(154,)
func_1158_call = mod.get_global_var('func_1158')
func_1162_call = mutated_mod.get_global_var('func_1162')
call_5447 = relay.TupleGetItem(func_1158_call(relay.reshape(call_5391.astype('uint8'), [105,]), relay.reshape(var_5417.astype('float32'), [2160,]), ), 3)
call_5448 = relay.TupleGetItem(func_1162_call(relay.reshape(call_5391.astype('uint8'), [105,]), relay.reshape(var_5417.astype('float32'), [2160,]), ), 3)
bop_5450 = relay.floor_divide(uop_5444.astype('float32'), relay.reshape(const_5433.astype('float32'), relay.shape_of(uop_5444))) # shape=(154,)
output = relay.Tuple([call_5391,call_5416,var_5417,call_5432,call_5447,bop_5450,])
output2 = relay.Tuple([call_5392,call_5418,var_5417,call_5434,call_5448,bop_5450,])
func_5454 = relay.Function([var_5417,], output)
mod['func_5454'] = func_5454
mod = relay.transform.InferType()(mod)
var_5455 = relay.var("var_5455", dtype = "float32", shape = (2160,))#candidate|5455|(2160,)|var|float32
output = func_5454(var_5455)
func_5456 = relay.Function([var_5455], output)
mutated_mod['func_5456'] = func_5456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2138_call = mod.get_global_var('func_2138')
func_2140_call = mutated_mod.get_global_var('func_2140')
call_5458 = func_2138_call()
call_5459 = func_2138_call()
uop_5466 = relay.sin(call_5458.astype('float64')) # shape=(7, 5, 3)
uop_5468 = relay.sin(call_5459.astype('float64')) # shape=(7, 5, 3)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_5471 = func_3643_call()
call_5472 = func_3643_call()
uop_5473 = relay.acos(call_5458.astype('float64')) # shape=(7, 5, 3)
uop_5475 = relay.acos(call_5459.astype('float64')) # shape=(7, 5, 3)
output = relay.Tuple([uop_5466,call_5471,uop_5473,])
output2 = relay.Tuple([uop_5468,call_5472,uop_5475,])
func_5490 = relay.Function([], output)
mod['func_5490'] = func_5490
mod = relay.transform.InferType()(mod)
output = func_5490()
func_5491 = relay.Function([], output)
mutated_mod['func_5491'] = func_5491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3779_call = mod.get_global_var('func_3779')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_5586 = func_3779_call()
call_5587 = func_3779_call()
output = call_5586
output2 = call_5587
func_5596 = relay.Function([], output)
mod['func_5596'] = func_5596
mod = relay.transform.InferType()(mod)
mutated_mod['func_5596'] = func_5596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5596_call = mutated_mod.get_global_var('func_5596')
call_5597 = func_5596_call()
output = call_5597
func_5598 = relay.Function([], output)
mutated_mod['func_5598'] = func_5598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3800_call = mod.get_global_var('func_3800')
func_3802_call = mutated_mod.get_global_var('func_3802')
call_5599 = func_3800_call()
call_5600 = func_3800_call()
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
call_5606 = relay.TupleGetItem(func_5015_call(), 0)
call_5607 = relay.TupleGetItem(func_5017_call(), 0)
func_2065_call = mod.get_global_var('func_2065')
func_2067_call = mutated_mod.get_global_var('func_2067')
call_5616 = func_2065_call()
call_5617 = func_2065_call()
output = relay.Tuple([call_5599,call_5606,call_5616,])
output2 = relay.Tuple([call_5600,call_5607,call_5617,])
func_5624 = relay.Function([], output)
mod['func_5624'] = func_5624
mod = relay.transform.InferType()(mod)
mutated_mod['func_5624'] = func_5624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5624_call = mutated_mod.get_global_var('func_5624')
call_5625 = func_5624_call()
output = call_5625
func_5626 = relay.Function([], output)
mutated_mod['func_5626'] = func_5626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2557_call = mod.get_global_var('func_2557')
func_2558_call = mutated_mod.get_global_var('func_2558')
call_5645 = func_2557_call()
call_5646 = func_2557_call()
func_3890_call = mod.get_global_var('func_3890')
func_3892_call = mutated_mod.get_global_var('func_3892')
call_5649 = relay.TupleGetItem(func_3890_call(), 0)
call_5650 = relay.TupleGetItem(func_3892_call(), 0)
var_5652 = relay.var("var_5652", dtype = "float32", shape = (2160,))#candidate|5652|(2160,)|var|float32
bop_5653 = relay.maximum(call_5649.astype('int16'), relay.reshape(var_5652.astype('int16'), relay.shape_of(call_5649))) # shape=(2160,)
bop_5656 = relay.maximum(call_5650.astype('int16'), relay.reshape(var_5652.astype('int16'), relay.shape_of(call_5650))) # shape=(2160,)
var_5657 = relay.var("var_5657", dtype = "float32", shape = (2160,))#candidate|5657|(2160,)|var|float32
bop_5658 = relay.less(var_5652.astype('bool'), relay.reshape(var_5657.astype('bool'), relay.shape_of(var_5652))) # shape=(2160,)
output = relay.Tuple([call_5645,bop_5653,bop_5658,])
output2 = relay.Tuple([call_5646,bop_5656,bop_5658,])
func_5669 = relay.Function([var_5652,var_5657,], output)
mod['func_5669'] = func_5669
mod = relay.transform.InferType()(mod)
mutated_mod['func_5669'] = func_5669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5669_call = mutated_mod.get_global_var('func_5669')
var_5671 = relay.var("var_5671", dtype = "float32", shape = (2160,))#candidate|5671|(2160,)|var|float32
var_5672 = relay.var("var_5672", dtype = "float32", shape = (2160,))#candidate|5672|(2160,)|var|float32
call_5670 = func_5669_call(var_5671,var_5672,)
output = call_5670
func_5673 = relay.Function([var_5671,var_5672,], output)
mutated_mod['func_5673'] = func_5673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4400_call = mod.get_global_var('func_4400')
func_4401_call = mutated_mod.get_global_var('func_4401')
call_5707 = relay.TupleGetItem(func_4400_call(), 0)
call_5708 = relay.TupleGetItem(func_4401_call(), 0)
func_3328_call = mod.get_global_var('func_3328')
func_3331_call = mutated_mod.get_global_var('func_3331')
var_5731 = relay.var("var_5731", dtype = "float64", shape = (182, 2))#candidate|5731|(182, 2)|var|float64
call_5730 = relay.TupleGetItem(func_3328_call(relay.reshape(var_5731.astype('float64'), [14, 2, 13])), 0)
call_5732 = relay.TupleGetItem(func_3331_call(relay.reshape(var_5731.astype('float64'), [14, 2, 13])), 0)
func_3487_call = mod.get_global_var('func_3487')
func_3492_call = mutated_mod.get_global_var('func_3492')
var_5746 = relay.var("var_5746", dtype = "float64", shape = (192,))#candidate|5746|(192,)|var|float64
var_5747 = relay.var("var_5747", dtype = "float64", shape = (2688,))#candidate|5747|(2688,)|var|float64
const_5748 = relay.const([4,-6,6,-2,-1,9,10,7,-10,-2,8,8,-6,-6,-8,2,1,-3,-9,9,3,-6,-7,-5,-4,7,-8,-6,8,5,-1,6,-3,8,-5,-2,6,-1,2,9,7,-10,1,-1,9,2,3,1,-8,9,-5,-2,-2,-5,1,10,10,-4,7,-9,-1,8,1,-1,-10,2,5,8,9,10,7,-9,-2,-7,8,7,9,5,-5,-10,-9,10,-8,-1], dtype = "uint32")#candidate|5748|(84,)|const|uint32
call_5745 = relay.TupleGetItem(func_3487_call(relay.reshape(var_5746.astype('float64'), [1, 16, 12]), relay.reshape(var_5747.astype('float64'), [14, 16, 12]), relay.reshape(var_5731.astype('float64'), [364,]), relay.reshape(const_5748.astype('uint32'), [84,]), ), 7)
call_5749 = relay.TupleGetItem(func_3492_call(relay.reshape(var_5746.astype('float64'), [1, 16, 12]), relay.reshape(var_5747.astype('float64'), [14, 16, 12]), relay.reshape(var_5731.astype('float64'), [364,]), relay.reshape(const_5748.astype('uint32'), [84,]), ), 7)
func_5321_call = mod.get_global_var('func_5321')
func_5323_call = mutated_mod.get_global_var('func_5323')
call_5752 = relay.TupleGetItem(func_5321_call(), 1)
call_5753 = relay.TupleGetItem(func_5323_call(), 1)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_5757 = relay.TupleGetItem(func_3202_call(), 0)
call_5758 = relay.TupleGetItem(func_3204_call(), 0)
func_5624_call = mod.get_global_var('func_5624')
func_5626_call = mutated_mod.get_global_var('func_5626')
call_5767 = relay.TupleGetItem(func_5624_call(), 0)
call_5768 = relay.TupleGetItem(func_5626_call(), 0)
func_4707_call = mod.get_global_var('func_4707')
func_4709_call = mutated_mod.get_global_var('func_4709')
call_5769 = func_4707_call()
call_5770 = func_4707_call()
func_1739_call = mod.get_global_var('func_1739')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_5785 = relay.TupleGetItem(func_1739_call(), 3)
call_5786 = relay.TupleGetItem(func_1741_call(), 3)
output = relay.Tuple([call_5707,call_5730,var_5731,call_5745,var_5746,var_5747,const_5748,call_5752,call_5757,call_5767,call_5769,call_5785,])
output2 = relay.Tuple([call_5708,call_5732,var_5731,call_5749,var_5746,var_5747,const_5748,call_5753,call_5758,call_5768,call_5770,call_5786,])
func_5799 = relay.Function([var_5731,var_5746,var_5747,], output)
mod['func_5799'] = func_5799
mod = relay.transform.InferType()(mod)
mutated_mod['func_5799'] = func_5799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5799_call = mutated_mod.get_global_var('func_5799')
var_5801 = relay.var("var_5801", dtype = "float64", shape = (182, 2))#candidate|5801|(182, 2)|var|float64
var_5802 = relay.var("var_5802", dtype = "float64", shape = (192,))#candidate|5802|(192,)|var|float64
var_5803 = relay.var("var_5803", dtype = "float64", shape = (2688,))#candidate|5803|(2688,)|var|float64
call_5800 = func_5799_call(var_5801,var_5802,var_5803,)
output = call_5800
func_5804 = relay.Function([var_5801,var_5802,var_5803,], output)
mutated_mod['func_5804'] = func_5804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5624_call = mod.get_global_var('func_5624')
func_5626_call = mutated_mod.get_global_var('func_5626')
call_5809 = relay.TupleGetItem(func_5624_call(), 1)
call_5810 = relay.TupleGetItem(func_5626_call(), 1)
func_5490_call = mod.get_global_var('func_5490')
func_5491_call = mutated_mod.get_global_var('func_5491')
call_5823 = relay.TupleGetItem(func_5490_call(), 2)
call_5824 = relay.TupleGetItem(func_5491_call(), 2)
output = relay.Tuple([call_5809,call_5823,])
output2 = relay.Tuple([call_5810,call_5824,])
func_5827 = relay.Function([], output)
mod['func_5827'] = func_5827
mod = relay.transform.InferType()(mod)
mutated_mod['func_5827'] = func_5827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5827_call = mutated_mod.get_global_var('func_5827')
call_5828 = func_5827_call()
output = call_5828
func_5829 = relay.Function([], output)
mutated_mod['func_5829'] = func_5829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4400_call = mod.get_global_var('func_4400')
func_4401_call = mutated_mod.get_global_var('func_4401')
call_5835 = relay.TupleGetItem(func_4400_call(), 0)
call_5836 = relay.TupleGetItem(func_4401_call(), 0)
func_3367_call = mod.get_global_var('func_3367')
func_3369_call = mutated_mod.get_global_var('func_3369')
const_5840 = relay.const([9.746939,-7.448974,3.127815,-2.758874,-6.055817,-8.011159,3.884206,-9.820867,5.562022,2.448283,-5.616567,-0.062528,9.292065,4.328333,-9.154940,4.169351,9.895500,-8.096311,9.029303,-9.750214,6.583525,-7.287392,1.024385,1.663564,9.506652,7.915644,7.954808,-9.818959,-1.402547,7.131305,-9.734289,-3.118120], dtype = "float32")#candidate|5840|(32,)|const|float32
call_5839 = relay.TupleGetItem(func_3367_call(relay.reshape(const_5840.astype('float32'), [16, 1, 2])), 0)
call_5841 = relay.TupleGetItem(func_3369_call(relay.reshape(const_5840.astype('float32'), [16, 1, 2])), 0)
var_5842 = relay.var("var_5842", dtype = "float32", shape = (7, 5, 3))#candidate|5842|(7, 5, 3)|var|float32
bop_5843 = relay.mod(call_5835.astype('float32'), relay.reshape(var_5842.astype('float32'), relay.shape_of(call_5835))) # shape=(7, 5, 3)
bop_5846 = relay.mod(call_5836.astype('float32'), relay.reshape(var_5842.astype('float32'), relay.shape_of(call_5836))) # shape=(7, 5, 3)
output = relay.Tuple([call_5839,const_5840,bop_5843,])
output2 = relay.Tuple([call_5841,const_5840,bop_5846,])
func_5881 = relay.Function([var_5842,], output)
mod['func_5881'] = func_5881
mod = relay.transform.InferType()(mod)
mutated_mod['func_5881'] = func_5881
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5882 = relay.var("var_5882", dtype = "float32", shape = (7, 5, 3))#candidate|5882|(7, 5, 3)|var|float32
func_5881_call = mutated_mod.get_global_var('func_5881')
call_5883 = func_5881_call(var_5882)
output = call_5883
func_5884 = relay.Function([var_5882], output)
mutated_mod['func_5884'] = func_5884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5947 = relay.var("var_5947", dtype = "float32", shape = (16, 16, 4))#candidate|5947|(16, 16, 4)|var|float32
var_5948 = relay.var("var_5948", dtype = "float32", shape = (16, 16, 4))#candidate|5948|(16, 16, 4)|var|float32
bop_5949 = relay.equal(var_5947.astype('bool'), relay.reshape(var_5948.astype('bool'), relay.shape_of(var_5947))) # shape=(16, 16, 4)
func_3890_call = mod.get_global_var('func_3890')
func_3892_call = mutated_mod.get_global_var('func_3892')
call_5967 = relay.TupleGetItem(func_3890_call(), 0)
call_5968 = relay.TupleGetItem(func_3892_call(), 0)
output = relay.Tuple([bop_5949,call_5967,])
output2 = relay.Tuple([bop_5949,call_5968,])
func_5972 = relay.Function([var_5947,var_5948,], output)
mod['func_5972'] = func_5972
mod = relay.transform.InferType()(mod)
var_5973 = relay.var("var_5973", dtype = "float32", shape = (16, 16, 4))#candidate|5973|(16, 16, 4)|var|float32
var_5974 = relay.var("var_5974", dtype = "float32", shape = (16, 16, 4))#candidate|5974|(16, 16, 4)|var|float32
output = func_5972(var_5973,var_5974,)
func_5975 = relay.Function([var_5973,var_5974,], output)
mutated_mod['func_5975'] = func_5975
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6011 = relay.const([[[-6.578932,-0.982025,5.347612,6.791549,8.075217,-0.749810,-1.621290,-1.971575]],[[-9.964631,1.329769,-4.183857,5.051929,-6.915162,7.631449,-4.088206,-9.394538]],[[4.128187,-4.149998,7.355159,8.317575,4.206391,7.386153,-9.744837,-2.188871]],[[6.535813,9.349832,5.181425,-7.645971,8.063975,-2.880654,8.063929,0.645086]]], dtype = "float32")#candidate|6011|(4, 1, 8)|const|float32
var_6012 = relay.var("var_6012", dtype = "float32", shape = (4, 14, 8))#candidate|6012|(4, 14, 8)|var|float32
bop_6013 = relay.mod(const_6011.astype('float32'), var_6012.astype('float32')) # shape=(4, 14, 8)
output = bop_6013
output2 = bop_6013
func_6022 = relay.Function([var_6012,], output)
mod['func_6022'] = func_6022
mod = relay.transform.InferType()(mod)
var_6023 = relay.var("var_6023", dtype = "float32", shape = (4, 14, 8))#candidate|6023|(4, 14, 8)|var|float32
output = func_6022(var_6023)
func_6024 = relay.Function([var_6023], output)
mutated_mod['func_6024'] = func_6024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_6061 = relay.TupleGetItem(func_2534_call(), 0)
call_6062 = relay.TupleGetItem(func_2536_call(), 0)
func_4329_call = mod.get_global_var('func_4329')
func_4331_call = mutated_mod.get_global_var('func_4331')
call_6063 = relay.TupleGetItem(func_4329_call(), 2)
call_6064 = relay.TupleGetItem(func_4331_call(), 2)
func_4923_call = mod.get_global_var('func_4923')
func_4926_call = mutated_mod.get_global_var('func_4926')
var_6069 = relay.var("var_6069", dtype = "uint64", shape = (50,))#candidate|6069|(50,)|var|uint64
call_6068 = relay.TupleGetItem(func_4923_call(relay.reshape(var_6069.astype('uint64'), [50,])), 3)
call_6070 = relay.TupleGetItem(func_4926_call(relay.reshape(var_6069.astype('uint64'), [50,])), 3)
output = relay.Tuple([call_6061,call_6063,call_6068,var_6069,])
output2 = relay.Tuple([call_6062,call_6064,call_6070,var_6069,])
func_6081 = relay.Function([var_6069,], output)
mod['func_6081'] = func_6081
mod = relay.transform.InferType()(mod)
mutated_mod['func_6081'] = func_6081
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6082 = relay.var("var_6082", dtype = "uint64", shape = (50,))#candidate|6082|(50,)|var|uint64
func_6081_call = mutated_mod.get_global_var('func_6081')
call_6083 = func_6081_call(var_6082)
output = call_6083
func_6084 = relay.Function([var_6082], output)
mutated_mod['func_6084'] = func_6084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4349_call = mod.get_global_var('func_4349')
func_4351_call = mutated_mod.get_global_var('func_4351')
call_6104 = func_4349_call()
call_6105 = func_4349_call()
output = call_6104
output2 = call_6105
func_6134 = relay.Function([], output)
mod['func_6134'] = func_6134
mod = relay.transform.InferType()(mod)
mutated_mod['func_6134'] = func_6134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6134_call = mutated_mod.get_global_var('func_6134')
call_6135 = func_6134_call()
output = call_6135
func_6136 = relay.Function([], output)
mutated_mod['func_6136'] = func_6136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_6219 = relay.TupleGetItem(func_2937_call(), 0)
call_6220 = relay.TupleGetItem(func_2939_call(), 0)
uop_6238 = relay.log2(call_6219.astype('float64')) # shape=(15, 9, 16)
uop_6240 = relay.log2(call_6220.astype('float64')) # shape=(15, 9, 16)
func_4954_call = mod.get_global_var('func_4954')
func_4957_call = mutated_mod.get_global_var('func_4957')
call_6246 = relay.TupleGetItem(func_4954_call(relay.reshape(call_6219.astype('float32'), [2160,])), 0)
call_6247 = relay.TupleGetItem(func_4957_call(relay.reshape(call_6219.astype('float32'), [2160,])), 0)
output = relay.Tuple([uop_6238,call_6246,])
output2 = relay.Tuple([uop_6240,call_6247,])
func_6249 = relay.Function([], output)
mod['func_6249'] = func_6249
mod = relay.transform.InferType()(mod)
mutated_mod['func_6249'] = func_6249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6249_call = mutated_mod.get_global_var('func_6249')
call_6250 = func_6249_call()
output = call_6250
func_6251 = relay.Function([], output)
mutated_mod['func_6251'] = func_6251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4400_call = mod.get_global_var('func_4400')
func_4401_call = mutated_mod.get_global_var('func_4401')
call_6321 = relay.TupleGetItem(func_4400_call(), 0)
call_6322 = relay.TupleGetItem(func_4401_call(), 0)
output = relay.Tuple([call_6321,])
output2 = relay.Tuple([call_6322,])
func_6332 = relay.Function([], output)
mod['func_6332'] = func_6332
mod = relay.transform.InferType()(mod)
mutated_mod['func_6332'] = func_6332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6332_call = mutated_mod.get_global_var('func_6332')
call_6333 = func_6332_call()
output = call_6333
func_6334 = relay.Function([], output)
mutated_mod['func_6334'] = func_6334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1789_call = mod.get_global_var('func_1789')
func_1790_call = mutated_mod.get_global_var('func_1790')
call_6380 = relay.TupleGetItem(func_1789_call(), 0)
call_6381 = relay.TupleGetItem(func_1790_call(), 0)
output = call_6380
output2 = call_6381
func_6382 = relay.Function([], output)
mod['func_6382'] = func_6382
mod = relay.transform.InferType()(mod)
output = func_6382()
func_6383 = relay.Function([], output)
mutated_mod['func_6383'] = func_6383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mod.get_global_var('func_2928')
func_2930_call = mutated_mod.get_global_var('func_2930')
call_6384 = func_2928_call()
call_6385 = func_2928_call()
output = relay.Tuple([call_6384,])
output2 = relay.Tuple([call_6385,])
func_6387 = relay.Function([], output)
mod['func_6387'] = func_6387
mod = relay.transform.InferType()(mod)
output = func_6387()
func_6388 = relay.Function([], output)
mutated_mod['func_6388'] = func_6388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4329_call = mod.get_global_var('func_4329')
func_4331_call = mutated_mod.get_global_var('func_4331')
call_6397 = relay.TupleGetItem(func_4329_call(), 1)
call_6398 = relay.TupleGetItem(func_4331_call(), 1)
func_3826_call = mod.get_global_var('func_3826')
func_3828_call = mutated_mod.get_global_var('func_3828')
call_6404 = func_3826_call()
call_6405 = func_3826_call()
func_4329_call = mod.get_global_var('func_4329')
func_4331_call = mutated_mod.get_global_var('func_4331')
call_6410 = relay.TupleGetItem(func_4329_call(), 0)
call_6411 = relay.TupleGetItem(func_4331_call(), 0)
uop_6412 = relay.acos(call_6404.astype('float32')) # shape=(15, 9, 16)
uop_6414 = relay.acos(call_6405.astype('float32')) # shape=(15, 9, 16)
output = relay.Tuple([call_6397,call_6410,uop_6412,])
output2 = relay.Tuple([call_6398,call_6411,uop_6414,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

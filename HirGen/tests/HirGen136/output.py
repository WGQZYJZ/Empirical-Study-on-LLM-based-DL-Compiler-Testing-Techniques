import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_37 = relay.var("var_37", dtype = "float64", shape = (16, 7, 3))#candidate|37|(16, 7, 3)|var|float64
const_38 = relay.const([[[-6.740524,6.401101,-3.977750],[5.096615,8.987078,-4.551407],[-9.680619,6.868420,5.169471],[-8.278916,-0.333003,-4.639774],[-6.115773,-6.534464,7.338764],[2.336255,-8.750013,-2.647612],[1.800325,5.142164,8.413547]],[[5.913184,-5.757459,-9.619560],[0.797355,9.413718,3.896279],[6.699062,1.582394,9.181386],[9.265004,-7.567797,8.773277],[-3.468729,5.013818,7.583020],[2.419150,-4.686282,-2.032424],[9.579209,3.069493,1.778148]],[[9.244636,2.976546,5.555863],[1.831669,2.412168,-1.791729],[-8.938787,5.403777,-2.214465],[-9.736091,2.264170,6.745127],[-5.202835,4.449383,7.680997],[-5.405503,7.591891,-8.402845],[-7.567116,9.513363,6.958260]],[[-9.488590,2.132754,1.477229],[6.119423,6.138215,-4.589289],[-5.544714,-3.033001,7.414842],[-1.185362,-9.896415,8.233144],[-7.945012,-3.811674,1.759160],[-1.363837,3.590092,-3.370195],[3.455840,6.376441,-4.323046]],[[-0.665738,-7.734129,6.300326],[-8.196333,3.823692,8.124506],[0.468559,2.735382,-6.838470],[-1.689972,-8.977416,-7.604651],[-8.223011,-3.914108,-3.093719],[-8.918546,3.613387,5.553836],[-6.876926,5.810711,-7.891063]],[[-3.463655,-8.816503,8.867615],[-7.064968,1.231520,-0.424198],[6.454648,-0.897701,-6.655297],[9.163065,4.895970,1.771051],[4.313257,-3.907493,0.091607],[3.717094,4.382326,5.095891],[-2.851849,-5.901052,9.446985]],[[5.269566,1.822949,-5.017023],[2.354086,-4.582748,5.376380],[5.097597,7.894282,1.313194],[7.159995,-8.055294,-0.152278],[9.109248,-5.423482,1.626560],[-8.915941,-5.672082,-6.359807],[4.943292,-3.103940,-7.125138]],[[0.102545,-9.357631,0.183771],[-8.186405,3.646795,5.068924],[-6.772697,-9.803718,-1.732046],[-1.337781,7.634763,0.002335],[-3.694948,8.758850,-7.454420],[-5.556940,1.855392,6.318226],[-6.283714,9.093783,-7.722885]],[[9.135257,-7.474843,2.352538],[4.538245,5.619786,0.946473],[-8.027168,-1.730581,-7.194610],[6.167339,-0.795599,-2.647391],[-3.648910,2.148037,-6.730667],[-8.393965,7.700517,1.488764],[-9.392936,-3.784534,5.587214]],[[-9.202351,1.412271,4.586280],[6.680960,-6.692824,-2.182510],[7.729193,1.900386,-5.621418],[3.007064,-3.669700,3.108244],[7.499541,-4.837167,-0.373551],[0.794642,-5.404946,4.006380],[5.207429,-9.751620,-5.914283]],[[-6.378061,6.255340,0.470280],[2.207853,6.125162,1.039741],[2.550656,-5.404837,-7.224511],[-7.302240,7.333954,7.542843],[-8.891246,6.949065,-6.520304],[9.321755,-9.878330,1.991881],[9.190200,-5.614877,-2.193566]],[[6.554260,-2.124221,4.365712],[-6.162907,5.844972,-7.122300],[-5.874865,0.461948,-5.026697],[-6.782599,-3.413693,-8.851133],[-0.866353,-2.153455,-3.936205],[-7.066372,-6.379700,1.501164],[9.871434,9.326059,5.918721]],[[1.471707,7.577578,-5.865347],[2.761692,4.085200,6.957308],[0.320143,9.898447,-5.615521],[-5.040893,-5.334404,7.906683],[-4.683550,3.949224,3.136655],[-1.138904,8.524885,4.683520],[7.889782,-6.105596,-0.290582]],[[-3.352527,4.693904,9.961302],[-7.786567,-7.938862,1.941330],[-4.138745,-7.074677,8.493957],[2.041576,3.656334,0.349882],[-7.477619,1.196601,-2.799025],[-0.798458,8.200288,-1.329717],[9.786969,-1.941073,7.279761]],[[4.889612,6.414115,-8.995647],[-7.802159,-8.485950,-3.437193],[-7.530038,-6.493595,2.300230],[-2.008549,-2.813311,2.958941],[-7.565992,4.641533,-5.602504],[-9.448110,-0.696691,8.240879],[6.572153,-4.881240,7.664238]],[[0.183696,7.409142,9.615764],[-6.468034,-4.043177,8.461084],[-9.829698,-1.439170,-4.649664],[-0.938871,4.893854,6.090372],[4.993034,-5.197698,-7.398659],[-1.960582,2.804621,-4.550565],[-0.598903,-2.664172,7.288832]]], dtype = "float64")#candidate|38|(16, 7, 3)|const|float64
bop_39 = relay.divide(var_37.astype('float64'), relay.reshape(const_38.astype('float64'), relay.shape_of(var_37))) # shape=(16, 7, 3)
output = relay.Tuple([bop_39,])
output2 = relay.Tuple([bop_39,])
func_64 = relay.Function([var_37,], output)
mod['func_64'] = func_64
mod = relay.transform.InferType()(mod)
var_65 = relay.var("var_65", dtype = "float64", shape = (16, 7, 3))#candidate|65|(16, 7, 3)|var|float64
output = func_64(var_65)
func_66 = relay.Function([var_65], output)
mutated_mod['func_66'] = func_66
mutated_mod = relay.transform.InferType()(mutated_mod)
var_301 = relay.var("var_301", dtype = "float32", shape = (9, 14))#candidate|301|(9, 14)|var|float32
uop_302 = relay.exp(var_301.astype('float32')) # shape=(9, 14)
func_64_call = mod.get_global_var('func_64')
func_66_call = mutated_mod.get_global_var('func_66')
var_320 = relay.var("var_320", dtype = "float64", shape = (336,))#candidate|320|(336,)|var|float64
call_319 = relay.TupleGetItem(func_64_call(relay.reshape(var_320.astype('float64'), [16, 7, 3])), 0)
call_321 = relay.TupleGetItem(func_66_call(relay.reshape(var_320.astype('float64'), [16, 7, 3])), 0)
func_64_call = mod.get_global_var('func_64')
func_66_call = mutated_mod.get_global_var('func_66')
call_335 = relay.TupleGetItem(func_64_call(relay.reshape(var_320.astype('float64'), [16, 7, 3])), 0)
call_336 = relay.TupleGetItem(func_66_call(relay.reshape(var_320.astype('float64'), [16, 7, 3])), 0)
func_64_call = mod.get_global_var('func_64')
func_66_call = mutated_mod.get_global_var('func_66')
call_368 = relay.TupleGetItem(func_64_call(relay.reshape(call_319.astype('float64'), [16, 7, 3])), 0)
call_369 = relay.TupleGetItem(func_66_call(relay.reshape(call_319.astype('float64'), [16, 7, 3])), 0)
output = relay.Tuple([uop_302,call_319,var_320,call_335,call_368,])
output2 = relay.Tuple([uop_302,call_321,var_320,call_336,call_369,])
func_374 = relay.Function([var_301,var_320,], output)
mod['func_374'] = func_374
mod = relay.transform.InferType()(mod)
mutated_mod['func_374'] = func_374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_374_call = mutated_mod.get_global_var('func_374')
var_376 = relay.var("var_376", dtype = "float32", shape = (9, 14))#candidate|376|(9, 14)|var|float32
var_377 = relay.var("var_377", dtype = "float64", shape = (336,))#candidate|377|(336,)|var|float64
call_375 = func_374_call(var_376,var_377,)
output = call_375
func_378 = relay.Function([var_376,var_377,], output)
mutated_mod['func_378'] = func_378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_677 = relay.var("var_677", dtype = "float64", shape = (7, 16, 15))#candidate|677|(7, 16, 15)|var|float64
uop_678 = relay.log10(var_677.astype('float64')) # shape=(7, 16, 15)
func_374_call = mod.get_global_var('func_374')
func_378_call = mutated_mod.get_global_var('func_378')
const_681 = relay.const([-1.052153,2.640883,6.561360,3.154860,9.411283,-2.984850,5.585227,8.356065,2.376657,4.786167,-1.319511,-1.185329,1.670235,-7.762409,8.823301,6.755175,-9.837558,-7.208519,4.231005,-9.031984,-2.767308,-9.845754,8.008673,-6.273674,0.696947,1.983568,-5.220447,-7.607201,-9.039042,-4.137052,1.992791,8.494583,3.198661,8.778719,2.861820,5.982227,-3.140788,2.158827,1.761239,-0.765759,5.558800,-9.510972,4.333727,-9.446653,9.742394,1.882277,-6.961643,-5.569383,3.350299,-4.428260,4.184758,-5.221596,4.375128,8.856402,9.148294,-7.441560,6.063380,-4.907688,4.186238,-5.141026,-0.444316,5.597744,-6.982953,-8.730469,2.259337,-8.653685,-8.027973,-6.007577,-7.839699,-0.981879,7.739113,6.600528,8.201708,-8.357946,-6.198810,5.166349,-5.752752,2.630999,-8.010069,-4.429284,-9.104847,-8.082768,5.129473,1.341384,-5.937260,-6.878962,-1.752342,-1.852508,7.914035,-9.333056,-9.081778,-9.520357,6.423802,1.462870,7.428164,3.989509,4.508013,-1.793548,4.662173,-9.427537,2.655559,5.859161,-7.528144,0.110635,-3.041649,4.249325,6.157895,-2.938592,8.109092,-3.901041,0.113280,4.269428,3.891303,-2.609310,8.851848,-8.031239,9.060784,-1.517449,-3.825227,1.590767,7.298421,6.795018,9.004878,6.933363,0.794312,4.865622], dtype = "float32")#candidate|681|(126,)|const|float32
var_682 = relay.var("var_682", dtype = "float64", shape = (336,))#candidate|682|(336,)|var|float64
call_680 = relay.TupleGetItem(func_374_call(relay.reshape(const_681.astype('float32'), [9, 14]), relay.reshape(var_682.astype('float64'), [336,]), ), 1)
call_683 = relay.TupleGetItem(func_378_call(relay.reshape(const_681.astype('float32'), [9, 14]), relay.reshape(var_682.astype('float64'), [336,]), ), 1)
bop_688 = relay.floor_mod(uop_678.astype('float64'), relay.reshape(var_677.astype('float64'), relay.shape_of(uop_678))) # shape=(7, 16, 15)
func_64_call = mod.get_global_var('func_64')
func_66_call = mutated_mod.get_global_var('func_66')
call_692 = relay.TupleGetItem(func_64_call(relay.reshape(var_682.astype('float64'), [16, 7, 3])), 0)
call_693 = relay.TupleGetItem(func_66_call(relay.reshape(var_682.astype('float64'), [16, 7, 3])), 0)
func_64_call = mod.get_global_var('func_64')
func_66_call = mutated_mod.get_global_var('func_66')
call_699 = relay.TupleGetItem(func_64_call(relay.reshape(call_692.astype('float64'), [16, 7, 3])), 0)
call_700 = relay.TupleGetItem(func_66_call(relay.reshape(call_692.astype('float64'), [16, 7, 3])), 0)
func_374_call = mod.get_global_var('func_374')
func_378_call = mutated_mod.get_global_var('func_378')
call_708 = relay.TupleGetItem(func_374_call(relay.reshape(const_681.astype('float32'), [9, 14]), relay.reshape(call_680.astype('float64'), [336,]), ), 0)
call_709 = relay.TupleGetItem(func_378_call(relay.reshape(const_681.astype('float32'), [9, 14]), relay.reshape(call_680.astype('float64'), [336,]), ), 0)
func_64_call = mod.get_global_var('func_64')
func_66_call = mutated_mod.get_global_var('func_66')
call_710 = relay.TupleGetItem(func_64_call(relay.reshape(call_680.astype('float64'), [16, 7, 3])), 0)
call_711 = relay.TupleGetItem(func_66_call(relay.reshape(call_680.astype('float64'), [16, 7, 3])), 0)
func_374_call = mod.get_global_var('func_374')
func_378_call = mutated_mod.get_global_var('func_378')
call_713 = relay.TupleGetItem(func_374_call(relay.reshape(const_681.astype('float32'), [9, 14]), relay.reshape(call_710.astype('float64'), [336,]), ), 0)
call_714 = relay.TupleGetItem(func_378_call(relay.reshape(const_681.astype('float32'), [9, 14]), relay.reshape(call_710.astype('float64'), [336,]), ), 0)
func_374_call = mod.get_global_var('func_374')
func_378_call = mutated_mod.get_global_var('func_378')
call_721 = relay.TupleGetItem(func_374_call(relay.reshape(call_713.astype('float32'), [9, 14]), relay.reshape(var_682.astype('float64'), [336,]), ), 1)
call_722 = relay.TupleGetItem(func_378_call(relay.reshape(call_713.astype('float32'), [9, 14]), relay.reshape(var_682.astype('float64'), [336,]), ), 1)
output = relay.Tuple([call_680,const_681,var_682,bop_688,call_692,call_699,call_708,call_710,call_713,call_721,])
output2 = relay.Tuple([call_683,const_681,var_682,bop_688,call_693,call_700,call_709,call_711,call_714,call_722,])
func_748 = relay.Function([var_677,var_682,], output)
mod['func_748'] = func_748
mod = relay.transform.InferType()(mod)
mutated_mod['func_748'] = func_748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_748_call = mutated_mod.get_global_var('func_748')
var_750 = relay.var("var_750", dtype = "float64", shape = (7, 16, 15))#candidate|750|(7, 16, 15)|var|float64
var_751 = relay.var("var_751", dtype = "float64", shape = (336,))#candidate|751|(336,)|var|float64
call_749 = func_748_call(var_750,var_751,)
output = call_749
func_752 = relay.Function([var_750,var_751,], output)
mutated_mod['func_752'] = func_752
mutated_mod = relay.transform.InferType()(mutated_mod)
var_789 = relay.var("var_789", dtype = "float32", shape = (4, 1, 5))#candidate|789|(4, 1, 5)|var|float32
uop_790 = relay.log10(var_789.astype('float32')) # shape=(4, 1, 5)
func_64_call = mod.get_global_var('func_64')
func_66_call = mutated_mod.get_global_var('func_66')
const_796 = relay.const([-7.021074,9.994801,-6.145864,4.165863,2.573176,5.998105,5.064460,-2.510866,6.343519,2.131999,4.614088,2.498588,6.712846,6.393323,-5.882576,-7.552871,6.364900,-3.342539,0.325949,-5.092221,0.236863,9.455601,0.081033,7.405250,-4.005863,1.188229,8.806351,-8.387582,-9.754437,4.543486,-2.574064,1.320299,-3.454350,8.002813,1.467275,-3.926810,9.741168,-8.664675,0.208246,7.224856,-7.722298,7.581130,-4.835811,-8.161541,6.490077,4.400149,5.745969,-6.759902,3.568680,2.735206,5.335488,7.169440,0.474638,0.043271,5.761410,-3.790115,5.243539,3.456487,7.984789,-0.199476,-6.988887,-9.835383,2.297971,4.720011,-7.917763,1.280410,-9.139204,6.001506,-1.504349,-1.305251,1.951097,1.364791,4.353536,-7.326664,-6.364040,7.472721,6.679989,-1.957986,-4.486820,4.487618,-1.242407,1.807342,1.400458,2.473051,5.544934,3.676410,-8.488875,-1.047631,6.691744,2.813260,4.551727,-0.822068,-4.854179,9.824039,-7.332599,-1.439563,-5.716802,7.717655,-1.515304,0.737975,4.042028,-4.445987,-0.562862,6.511599,-0.589527,6.780916,5.546887,-0.820262,1.519440,9.448539,-0.794275,-6.476057,5.499519,-9.430107,-3.120915,5.862435,-0.822675,-1.292317,-0.721998,-1.737710,-5.958747,9.886107,-3.272173,8.348090,4.817204,1.883439,-9.102544,-0.328372,-7.564397,5.600415,9.397013,-7.255176,8.679610,-9.075385,-1.890861,-6.039139,-2.964545,-6.754539,2.451523,-2.791838,-8.464502,-0.485368,-5.824871,-3.967419,8.187327,4.676605,2.737147,-6.137832,-1.237572,-2.242119,0.719246,0.961032,-0.977914,-5.589539,-6.987290,1.596166,3.815048,4.722779,-9.795995,-2.850629,-0.151588,-5.032302,5.546944,-5.407706,5.483446,-8.148921,5.027251,2.435577,5.296650,7.437627,-3.812332,0.647117,-2.135856,6.102940,-5.395711,-4.416628,-5.533599,-8.284646,2.185528,6.505899,-5.700821,7.634653,-4.441043,8.059114,7.994675,1.681147,0.942772,5.174642,9.623935,5.446035,-9.457884,-1.717357,-2.944851,-2.485434,9.231829,6.197706,3.871352,7.157773,3.358521,8.431577,3.369955,-4.211194,5.238294,-8.220294,1.606555,3.921931,4.040661,-5.124949,-9.682162,0.453796,-7.060110,0.568080,-3.967535,7.413298,-3.139686,-0.406365,1.763031,-9.913410,-2.739321,-0.513037,-7.035790,2.535910,0.105619,-8.881667,-5.966626,-3.387364,-1.644762,-7.118137,-5.919538,-5.509249,-5.249397,1.061432,3.067582,5.755661,-8.476899,1.777846,1.646675,2.195310,-4.874423,-2.727498,0.137681,-4.639940,5.948839,-5.623408,-3.876192,-7.242789,8.934552,2.769265,0.581203,-5.409265,-4.899803,9.983803,-9.163534,-0.779596,-5.143529,9.605927,9.463348,3.335554,-1.104588,0.221332,-8.876126,-1.007898,3.627716,-9.049754,-7.776322,-4.961859,6.441208,-9.126428,-2.154887,-3.402287,0.629567,4.627561,8.864102,8.802054,-1.434401,8.976548,-5.982450,7.153565,5.172709,3.076028,-4.285967,-4.169632,5.663916,-9.584755,6.207424,-9.340090,-1.222454,-9.464408,-3.727870,-3.916373,-5.428570,3.008831,7.231561,-9.499909,-2.620995,-5.618987,5.559247,-6.841406,0.282034,2.299916,-7.835489,4.364155,4.916995,-9.488543,-6.344557,-4.739322,-2.382321,7.092430,-9.432006,-3.950462,8.567582,-0.074940,1.476244,5.587929,1.110936,-6.889996,-9.187419,-7.935619,1.113307,8.925058,3.078408,-2.465062,5.769038,2.456307,6.716593,7.019041,-4.328106,8.860000,-2.815492,-8.075709,6.869553,6.380184,7.302646,7.361057,0.229976,-7.998774], dtype = "float64")#candidate|796|(336,)|const|float64
call_795 = relay.TupleGetItem(func_64_call(relay.reshape(const_796.astype('float64'), [16, 7, 3])), 0)
call_797 = relay.TupleGetItem(func_66_call(relay.reshape(const_796.astype('float64'), [16, 7, 3])), 0)
output = relay.Tuple([uop_790,call_795,const_796,])
output2 = relay.Tuple([uop_790,call_797,const_796,])
func_800 = relay.Function([var_789,], output)
mod['func_800'] = func_800
mod = relay.transform.InferType()(mod)
mutated_mod['func_800'] = func_800
mutated_mod = relay.transform.InferType()(mutated_mod)
var_801 = relay.var("var_801", dtype = "float32", shape = (4, 1, 5))#candidate|801|(4, 1, 5)|var|float32
func_800_call = mutated_mod.get_global_var('func_800')
call_802 = func_800_call(var_801)
output = call_802
func_803 = relay.Function([var_801], output)
mutated_mod['func_803'] = func_803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_907 = relay.var("var_907", dtype = "int8", shape = (1, 6, 6))#candidate|907|(1, 6, 6)|var|int8
var_908 = relay.var("var_908", dtype = "int8", shape = (12, 6, 6))#candidate|908|(12, 6, 6)|var|int8
bop_909 = relay.logical_xor(var_907.astype('int8'), var_908.astype('int8')) # shape=(12, 6, 6)
uop_916 = relay.tan(var_907.astype('float32')) # shape=(1, 6, 6)
func_374_call = mod.get_global_var('func_374')
func_378_call = mutated_mod.get_global_var('func_378')
var_920 = relay.var("var_920", dtype = "float32", shape = (126,))#candidate|920|(126,)|var|float32
const_921 = relay.const([-0.899049,1.344625,-1.948867,7.370116,6.373563,-8.183308,6.077759,-0.399737,-1.366546,6.202668,-9.268022,-7.562687,-9.346787,3.841743,-3.181490,-1.927398,-2.010430,-0.193687,-8.533239,4.847615,-1.124307,-3.989699,-5.604383,-0.277722,-0.886820,9.485900,1.235333,7.581143,7.788309,6.930989,3.437990,4.074258,8.462203,-0.570946,7.355401,8.893255,4.545561,-1.347262,2.415588,8.847382,-7.710183,-4.317600,-3.162240,1.685272,-5.111665,2.646755,-4.909366,-7.639163,6.497883,-0.754738,-2.054275,-6.440514,7.410325,0.950238,2.209981,3.644149,8.152485,9.617973,0.932653,-6.065190,9.319933,-1.714406,-2.860944,1.651439,8.551649,-1.520239,-0.531195,-2.547280,3.926920,-5.504338,-1.213638,-9.549813,0.536267,3.558689,5.931434,-5.213007,5.935483,-5.354871,1.871016,1.933786,1.305877,-2.783207,-6.562208,-9.441641,-1.315063,-7.281248,-0.613839,5.750247,-8.682089,-4.568000,-8.054270,-0.998643,7.671888,8.216915,6.946999,-2.892994,-0.757403,-8.346898,3.396781,4.836611,3.504429,-4.805222,-1.074048,2.948188,-3.909390,-7.757880,-5.865522,-3.581145,-8.921095,3.086452,6.781258,-0.198687,-8.621793,-9.425838,9.696443,-5.674196,-9.113235,-5.470072,-8.181833,0.443406,-1.432046,3.289022,3.637223,-3.097730,3.242366,3.115646,7.446790,-1.554088,-0.374724,4.276489,-8.026849,-0.144683,-9.849784,-5.712595,-2.341195,1.994623,2.654691,9.892298,5.029530,-5.008864,7.580920,4.181319,-2.851014,8.906501,-7.107160,-2.311079,-9.072993,3.974723,-7.656105,5.762294,-5.529077,2.692448,1.745790,-3.485354,-5.330411,3.351395,-4.180005,9.903566,-3.631451,7.989713,5.652396,-3.136395,-8.582387,0.315852,2.375172,1.737494,3.198103,2.870217,3.255145,2.682768,6.239124,-9.849600,4.352948,-0.119650,-8.513796,2.206654,6.788577,0.049964,9.112093,-7.990676,8.329156,-4.925343,-0.771372,4.639886,1.048841,-6.192417,7.225541,-2.929968,-4.326601,-8.421996,-7.197452,-8.857227,8.932664,5.064769,-7.672536,5.815439,7.200431,7.321310,-5.825007,-0.766969,9.104602,-0.717610,4.606360,-1.746629,3.248342,-1.154604,-9.961255,3.784988,-7.878124,-6.635040,5.251218,-3.909882,-4.087476,-1.881889,-0.929778,-2.423989,5.355240,-6.630429,-9.137830,-3.173437,0.483977,4.338484,-3.373236,-4.397800,-0.640623,2.706571,-1.885128,-6.501848,3.636816,2.192797,3.585066,-1.895537,-8.374155,7.293055,4.952166,-2.431550,-8.368537,-6.978062,0.925296,9.119965,7.690134,4.135006,-0.044048,-8.617906,-0.728342,9.121614,-1.411910,9.191188,-3.248857,5.823521,-2.228381,7.471332,2.320233,5.966324,-2.088104,-7.493080,-0.289449,7.494965,-6.906582,-7.196484,-9.621988,-2.173313,4.515964,9.751835,3.487859,4.451684,5.366505,-9.746166,-0.325893,6.422722,1.153018,6.758453,1.149520,-8.743625,-4.997607,-4.282782,2.983470,7.483094,-4.367836,-3.804853,7.477623,-4.175553,-1.616098,-6.584164,-3.343884,8.051015,8.848101,2.515121,-7.579202,-6.216393,3.327635,6.820084,-1.524826,6.088203,7.249357,-9.291506,-1.836188,7.508816,2.516368,4.601311,0.860146,7.647622,1.416767,9.624863,3.589943,0.276293,2.599718,0.102083,9.396972,-6.635925,-7.910237,-3.978885,4.700645,-4.681059,1.237184,6.590031,-2.955016,7.318210,7.312081,5.006376,3.901965,8.818005,3.109733,-2.631390,-3.991376,-4.527122,8.842955,5.210907,-7.947714,8.350330,1.265196,2.533614,-1.127299,-7.938443,0.843357,-4.965116], dtype = "float64")#candidate|921|(336,)|const|float64
call_919 = relay.TupleGetItem(func_374_call(relay.reshape(var_920.astype('float32'), [9, 14]), relay.reshape(const_921.astype('float64'), [336,]), ), 0)
call_922 = relay.TupleGetItem(func_378_call(relay.reshape(var_920.astype('float32'), [9, 14]), relay.reshape(const_921.astype('float64'), [336,]), ), 0)
output = relay.Tuple([bop_909,uop_916,call_919,var_920,const_921,])
output2 = relay.Tuple([bop_909,uop_916,call_922,var_920,const_921,])
func_924 = relay.Function([var_907,var_908,var_920,], output)
mod['func_924'] = func_924
mod = relay.transform.InferType()(mod)
mutated_mod['func_924'] = func_924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_924_call = mutated_mod.get_global_var('func_924')
var_926 = relay.var("var_926", dtype = "int8", shape = (1, 6, 6))#candidate|926|(1, 6, 6)|var|int8
var_927 = relay.var("var_927", dtype = "int8", shape = (12, 6, 6))#candidate|927|(12, 6, 6)|var|int8
var_928 = relay.var("var_928", dtype = "float32", shape = (126,))#candidate|928|(126,)|var|float32
call_925 = func_924_call(var_926,var_927,var_928,)
output = call_925
func_929 = relay.Function([var_926,var_927,var_928,], output)
mutated_mod['func_929'] = func_929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_945 = relay.var("var_945", dtype = "bool", shape = (2, 6, 7))#candidate|945|(2, 6, 7)|var|bool
const_946 = relay.const([[[True,False,True,True,True,False,False],[False,True,False,False,True,True,False],[True,True,False,True,True,False,True],[True,True,True,False,False,False,False],[False,False,False,True,False,True,False],[True,True,False,True,True,True,True]],[[False,False,True,True,True,False,True],[True,False,False,False,True,False,False],[True,False,False,False,False,False,True],[False,False,False,True,True,False,True],[False,True,False,True,False,False,False],[True,False,True,False,False,False,False]]], dtype = "bool")#candidate|946|(2, 6, 7)|const|bool
bop_947 = relay.logical_or(var_945.astype('bool'), relay.reshape(const_946.astype('bool'), relay.shape_of(var_945))) # shape=(2, 6, 7)
output = bop_947
output2 = bop_947
func_956 = relay.Function([var_945,], output)
mod['func_956'] = func_956
mod = relay.transform.InferType()(mod)
var_957 = relay.var("var_957", dtype = "bool", shape = (2, 6, 7))#candidate|957|(2, 6, 7)|var|bool
output = func_956(var_957)
func_958 = relay.Function([var_957], output)
mutated_mod['func_958'] = func_958
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1215 = relay.const([[[-6.574452,-9.575598,0.668245,1.278927,-4.998284,2.260890,-5.662506,-7.280613,-3.410900,6.675629,-3.937398,6.835439,1.671378,7.589844,-0.589770,-8.252686],[3.828222,4.687216,-0.384475,8.989347,8.750657,-7.949427,-8.522320,-8.399631,6.653492,-9.636042,6.442168,-1.571643,9.241937,-9.814253,-9.970425,3.542419],[2.877877,6.023238,8.615749,-5.576472,9.735094,-6.149360,1.240206,-6.048370,5.768236,-4.188718,-6.870980,4.977660,-0.265658,-0.719690,-1.403962,0.237875],[-9.068448,5.605117,2.914262,-2.360822,-5.546859,-0.889406,5.283131,-9.013698,-8.797061,6.348636,-2.254233,-5.512986,-5.019762,8.711166,-0.153754,-0.040414],[4.833506,-1.279490,2.737774,-5.583294,-6.743481,6.330704,4.629606,-6.177452,0.169250,3.642929,-7.450200,-1.466231,-5.236636,5.072079,-9.668015,5.891122],[9.673761,-5.724381,-6.398835,-3.862492,-4.968803,-7.879456,-1.848984,7.187407,-6.836804,3.825145,-3.397140,2.757845,4.398755,-3.925447,-8.038103,-5.159115],[3.590226,-1.865512,4.728193,-9.252234,-2.456080,9.728432,2.790179,-5.064500,0.398045,-2.148441,-9.311409,-4.752918,-3.619561,3.880511,-0.233942,-5.389411],[7.557909,1.186850,-6.317320,-6.033751,-9.456231,3.804536,-4.867844,2.717036,6.207342,1.418152,7.952765,0.527100,-6.023560,-3.188675,-2.979093,2.461597],[0.869147,-9.464582,-3.956160,9.239779,7.795488,5.979667,-8.258321,6.209849,-2.302325,0.033619,4.706558,-4.206514,-3.868320,-0.191662,9.356988,-2.953983],[5.156672,-3.178854,3.637514,-8.282500,-9.315550,-6.957225,5.090251,-1.402011,-3.362850,5.813911,3.665222,-4.265635,6.662032,-3.279888,-3.734248,4.728314]],[[-2.530227,4.224303,1.697668,-5.351033,3.914290,4.954620,-6.592622,2.143058,6.001042,-5.983993,-1.373720,-8.976566,-6.131975,-7.248855,0.567558,-2.471315],[-9.646225,8.690842,5.398663,3.257474,-4.635700,2.687531,1.229527,-0.991102,-0.862773,9.720983,3.768638,-4.811810,-2.256738,-9.007312,-3.712721,7.584050],[-7.762644,7.951234,-6.936838,0.196127,4.450719,-2.766002,7.779782,3.736147,6.971147,-9.543295,0.977617,-4.156867,8.744841,4.658090,2.511186,-8.913885],[-5.025314,-6.656656,1.071858,0.782545,-5.651538,3.170159,-1.810168,4.427917,0.898403,-1.200894,-4.962773,-7.707046,7.199532,-6.913586,9.978367,8.996836],[-7.469208,-6.991321,2.842474,-2.089466,8.796515,1.300273,-9.317179,-1.621431,-6.068412,-2.767858,8.814781,-2.773158,0.127223,-5.384478,-7.261251,-0.589339],[0.449453,-8.530400,-0.565564,-9.436612,-3.670348,-8.725403,7.626578,-1.897777,0.464506,-4.240710,2.412264,-9.310210,4.608104,3.165163,-1.633276,-3.240508],[3.643606,-8.885423,4.885718,3.109837,-3.128427,5.238623,-5.622247,8.646881,-4.480344,9.429999,-6.007315,-7.412846,-9.337008,4.636052,7.930073,-6.510852],[-9.754200,7.400950,9.072254,3.364947,-9.897838,5.560113,-2.580008,-7.509315,4.553356,3.334367,8.552581,8.530661,9.496583,-3.698394,0.612823,3.971576],[8.709852,6.905852,-5.073732,-2.267451,1.608874,6.309211,-4.582836,3.691390,5.034816,-3.116348,-4.901574,-1.062244,-9.194516,1.911098,2.384063,-5.616263],[9.811126,-0.539313,-9.099357,-8.016932,-0.124825,-6.542103,5.663093,-0.198921,-8.579764,-0.233028,5.484998,-1.427465,9.115163,8.463601,9.199852,-3.766033]],[[2.754980,-4.367400,8.144505,-3.005565,-8.130871,7.960625,-1.346193,6.937385,-1.654886,5.268422,-4.737467,8.128827,9.894704,9.613852,-7.604279,0.688275],[-8.667901,-3.311477,-2.872224,8.100475,8.197286,6.277704,5.889891,-3.910258,-6.149516,6.375934,0.662867,-4.258576,6.106899,4.326897,3.097272,0.191516],[-3.641708,-8.916015,-8.511845,-2.355553,-7.900039,3.747173,-1.859630,9.937453,-9.947447,5.443602,9.567402,-7.108138,0.706711,5.435460,3.125111,-3.475423],[-1.471908,-9.608638,4.825985,-3.034513,-2.015056,7.396327,7.146505,5.822889,3.976532,3.267235,4.915462,1.050507,-9.272696,5.116261,1.223839,5.084803],[-7.856798,4.982006,-5.381833,1.395974,7.697744,1.309045,3.104093,-3.882118,-3.337868,-0.080673,-8.883096,-4.606125,-6.017595,-4.863293,-5.143314,9.693293],[3.442327,-6.858950,-5.872201,8.361295,-6.789868,-1.818765,9.125895,-2.223088,-2.178330,8.577945,-5.995414,5.960619,-0.078922,-4.114192,-8.873583,1.712383],[-8.408126,5.945330,-8.673306,3.372955,-1.423950,-9.722592,-9.539713,5.291328,9.741202,9.232206,-7.169915,-0.669503,-1.114020,0.849728,-4.452721,2.505317],[-6.961128,5.885433,3.536080,0.683028,-5.681745,9.593127,-4.731434,-1.677163,-3.195400,5.014191,-0.905860,7.123045,7.066746,2.679479,1.168810,-7.080872],[-9.105477,-5.381266,-3.853358,7.788955,-4.385242,-4.290144,2.873166,-3.047828,-6.325401,-6.131835,-9.449661,-1.979409,4.625229,8.590797,-9.954080,-7.134975],[-4.957839,-2.746053,8.646008,9.950680,-2.755209,-8.412933,-8.159932,1.893067,7.357407,-5.131513,0.147138,8.999824,-8.587289,-7.330967,-9.279003,8.594762]],[[0.503098,-5.806191,0.692493,-5.725254,9.201277,2.695790,-5.962857,-5.628658,2.867956,8.404415,3.242025,3.074387,1.482172,-4.060635,-3.198300,-0.411140],[9.355478,-0.118659,2.613595,6.689910,-0.821789,-7.717651,1.774874,-7.559303,3.333129,-8.799088,-5.684415,8.755713,1.231801,5.178875,9.085954,9.042786],[-6.501025,-5.882752,9.419923,-0.380131,-8.092040,-3.068397,-2.497694,-0.623344,-3.586052,-8.388438,-9.448161,-2.276541,-4.365097,-5.070753,-3.385163,-4.220748],[3.422534,-6.532296,-9.603722,-1.043179,2.825551,1.139696,7.071263,-1.205563,-9.302748,-5.588140,-3.074745,-9.500756,7.001861,-7.391295,-0.813580,-9.968902],[0.902459,-4.380341,-5.965957,9.176195,7.340545,8.275827,-9.888588,-4.583380,-7.504675,-6.524084,-2.357976,8.574303,5.779297,4.805526,0.157495,6.196924],[-9.598631,-1.170094,9.653823,-6.114961,-6.574706,1.524245,7.933293,3.286795,7.575516,-4.172945,-1.171370,3.596877,-6.516396,-6.070261,-6.313200,-1.718825],[2.652145,9.573903,-2.484497,-1.726991,6.705983,-7.235382,0.795917,8.025075,7.157967,-8.954439,7.470710,3.867535,-4.361732,6.392709,7.070329,5.335675],[4.244907,7.066807,2.804855,-5.997408,-6.216428,3.044658,8.623577,-6.080748,1.469811,-3.832242,-2.335512,-4.765526,7.637798,1.392623,3.106262,-9.349409],[-1.864947,1.356349,3.026109,-7.096063,-6.744045,0.679670,-5.271881,-1.844258,0.470564,6.957776,-3.439762,-3.027361,6.842682,-5.050282,2.571993,0.625469],[2.359684,0.540765,7.723813,-7.057322,1.918561,8.990454,4.551189,4.906234,-0.594299,-8.393431,-3.487265,1.965461,-3.372805,2.811781,-4.274334,3.326237]],[[3.001896,-1.755650,2.769307,-8.519351,-9.362312,-3.317650,3.275775,-6.889576,-0.633638,-3.368249,-9.794714,9.521774,0.121393,-1.153154,8.384784,7.365941],[-8.870104,5.502947,-1.448290,-3.535242,7.331835,-0.630323,9.878318,7.684006,6.346205,-9.929141,8.086939,2.653543,-4.622405,-5.910320,4.384974,-5.667431],[9.432697,9.338921,2.405505,-4.346682,0.501652,9.965957,-9.907977,-3.123427,-5.646367,9.296530,-9.651292,6.857876,-4.637260,4.194370,9.688414,1.323698],[9.443546,1.102892,-7.217870,-8.717672,-6.435482,-4.367966,-5.536836,9.386025,-5.254239,-8.324306,8.640878,6.007814,8.882241,5.246663,2.787903,8.004139],[-8.768315,4.389631,-8.126484,-6.699042,-6.062764,2.868172,2.641143,8.373681,6.933723,8.432286,4.395165,-0.496233,7.532622,-7.899110,-7.147886,1.922658],[-7.723598,-5.323181,-2.628836,2.700076,9.180235,1.788477,0.471020,-9.827570,-4.215177,5.722904,2.557416,-6.186073,-6.942049,4.692707,-2.274034,4.245380],[9.476766,-0.791618,-1.395320,-2.521109,-6.552216,-3.851699,2.958888,1.474543,-1.421668,9.365246,-7.855533,-5.318255,-7.176657,-3.369744,9.666390,8.163883],[7.621085,-9.653425,-9.665213,6.168489,5.904827,-4.291443,1.719416,-6.219724,0.566173,3.991199,-7.921453,-4.267507,5.613083,1.071627,-7.387659,3.127094],[-7.235947,9.636526,5.207698,-4.566086,-3.643136,5.479584,-5.852082,-0.466689,7.410587,8.791452,4.630117,0.967535,-5.490583,1.890774,4.822739,-2.998919],[3.258959,-2.312782,0.300814,2.149558,-7.918935,8.339055,-4.303792,-2.164727,8.718077,3.679157,1.550205,0.683080,-7.613965,-3.726301,2.609795,6.283309]],[[-6.485031,5.549713,-2.246780,9.582396,9.673910,8.832130,-6.237539,-8.707482,-0.048191,7.463005,-2.604313,2.179799,6.029522,-0.059479,2.471410,6.481149],[-8.663501,1.685366,2.449620,5.735919,0.614969,4.488458,-5.788309,0.107005,2.861493,-6.000466,7.108114,-1.154655,2.530455,5.266517,9.986304,-1.766813],[-3.227595,-6.001488,-2.297922,-2.848322,6.329039,-4.005251,7.593868,-0.604996,-2.201617,-3.048461,-4.487628,-5.723661,-7.076029,-6.338230,2.246754,5.269223],[-4.948058,0.444309,2.357417,-3.439218,6.954690,-9.485035,-6.846390,-1.240639,1.340990,-1.809370,3.144556,2.977507,9.812462,0.458647,-6.870927,-8.617143],[2.469879,2.218938,6.547778,7.801154,-0.751130,-5.703796,-2.818989,9.404675,7.334490,3.657760,4.740490,-3.779625,3.573874,7.620960,-5.001121,-5.101991],[0.194318,-4.805571,-6.616555,-9.668138,0.815512,7.956342,8.115177,5.573502,0.094938,7.525824,8.330901,0.057888,-8.297988,-5.110433,-4.864743,-2.311938],[3.700478,-6.409951,-0.150209,-9.823516,2.153868,3.722869,0.785440,-0.664194,9.703697,0.370100,6.615276,6.050447,3.168035,1.762971,2.832206,1.997019],[-6.045675,-1.110367,-4.140576,2.148208,-4.257394,-4.294539,8.303434,-9.654968,4.867473,-3.916171,-0.944525,-0.626186,6.751398,8.487356,3.630251,7.612007],[4.419914,-4.553052,5.077049,1.459041,-5.368985,7.013194,-1.678296,-0.208187,6.014442,1.716609,6.769807,5.878345,7.186390,7.362470,4.135743,-0.536936],[-3.440340,3.335050,-4.031919,1.909663,-3.135007,4.041701,4.142853,-2.080479,-3.383176,-9.743118,3.549884,-2.963649,1.643590,3.632112,7.184386,7.020486]],[[-1.163686,8.891366,9.435853,0.866623,2.211228,5.484611,4.042625,6.722519,8.883330,8.276286,0.093743,8.721456,4.539303,5.963064,-5.713779,-7.260493],[8.398082,-4.477244,-0.925089,9.555002,-8.605475,-0.129973,-1.415527,2.290271,-2.881493,9.824335,-7.351035,-2.798062,7.600517,-8.895885,-9.974891,1.275919],[-6.839899,-1.839899,7.693598,-7.993038,-1.870285,9.442193,-0.089119,-2.364161,5.398492,-6.008029,-5.245696,6.087403,3.586647,-2.383419,-2.083466,1.679424],[4.829971,-8.264247,8.497288,-1.606523,9.913267,0.742341,-6.287550,-5.266946,6.549639,4.407331,6.297202,2.101150,8.026684,-9.255331,8.089171,-5.129342],[-2.632618,-2.199120,-8.032533,9.982626,-2.399059,0.701637,2.729526,2.024655,9.213649,-1.683251,1.453572,9.897095,8.429445,8.032583,9.434726,1.022294],[-6.690551,-6.355286,-0.289361,-2.078236,-8.448681,1.748083,-2.076243,-0.287563,-3.870661,-7.399679,-6.662156,-2.026576,-0.282117,7.707713,4.714237,3.059014],[-2.658131,-0.604711,6.369217,4.137752,5.335741,4.559164,3.101660,3.653971,5.103954,-4.963247,6.589428,3.913305,-7.524474,3.531632,-9.639751,1.086359],[-4.849112,1.716819,-6.070956,6.157644,-1.034640,6.269095,-3.125761,0.346719,7.165151,-7.673497,-4.563445,-4.219345,-8.360085,-1.358624,-4.383173,6.604381],[-7.862855,-7.374787,4.766728,-3.899650,3.569330,-1.731964,-0.725655,3.910976,4.550380,-4.525450,7.396554,-9.821143,-4.096642,-2.733766,-0.375216,-1.253004],[8.107418,2.258937,-3.336681,-6.538172,-7.487770,-6.317265,-2.363853,-1.070536,8.489328,1.965172,0.559778,-6.065441,-6.922580,-9.191723,-2.093896,3.756370]],[[3.385444,-1.847306,-3.822833,3.721748,1.900997,2.906253,8.600456,4.043037,-1.214016,-0.793772,-0.977716,-3.819502,5.700629,4.744688,1.947174,9.041046],[-1.363735,-1.031853,-4.252842,7.971774,1.291097,7.807030,-2.440216,6.924843,6.681069,-5.426389,-9.238189,7.181416,0.753500,0.693774,2.841075,4.354341],[0.401835,7.506718,-5.887173,8.071216,5.461304,-0.879989,-0.862340,9.484536,4.354946,4.609689,-5.202068,-0.525350,-7.357975,-8.226146,-3.193274,3.193319],[4.284755,-3.771169,2.936032,-6.646376,-0.946076,-3.991009,-5.970600,5.986367,3.200893,-3.713931,2.395988,8.562418,-5.657438,2.630436,1.029799,-4.856277],[8.642269,-1.802112,7.547625,-3.112701,-3.501044,-1.018521,-5.474036,-3.307671,-7.177279,9.137322,6.993826,9.505250,-1.831009,1.885388,1.999929,-6.988533],[-9.849737,6.305547,5.341148,5.408962,-0.948045,6.852670,2.315654,-7.299806,-6.497980,3.262238,-5.618093,8.646533,-3.178660,5.922392,7.896218,-2.534557],[-3.285744,3.976828,7.295183,5.754267,-5.892180,-3.167867,0.026747,1.376527,-1.861324,7.983434,-8.745044,9.745711,4.568197,-6.210292,4.162400,-9.968766],[6.774131,4.459211,1.192488,-5.748233,0.766452,0.372854,-0.950441,-6.321788,-4.900372,1.932794,8.891342,1.867541,9.118005,7.034292,-0.298498,9.677211],[9.517908,1.447503,7.246488,-7.276662,-9.221184,7.559590,-7.293483,-3.048828,-6.688519,1.512722,-2.687288,-0.522987,6.551206,-5.508100,-4.291093,5.160077],[4.157168,-3.175372,-6.532526,3.068969,-2.297532,0.929484,7.575817,8.807666,-5.551761,9.407726,1.230915,-8.541351,0.077117,5.371467,-4.368689,5.698917]],[[0.475067,7.457108,-8.476960,-5.865155,1.539283,0.015055,5.449581,-8.608583,-3.309698,3.093141,-4.393089,-6.264402,-4.077331,0.189894,-7.192678,-4.327005],[-1.239894,7.593600,2.383096,2.850154,-5.350753,0.150765,-2.933565,0.020232,2.839567,-5.744133,-3.672341,7.138421,-5.864690,-0.610575,4.756140,-3.718620],[-0.806286,-2.736784,-6.892861,-8.852429,-9.947758,-8.669695,-2.375456,5.988656,-4.831538,4.623396,-9.060965,-4.335029,9.914448,5.636248,8.492667,-2.319767],[-7.248973,5.722258,-8.859744,3.184914,4.772224,6.719946,4.387608,0.774851,0.087418,-0.848041,2.252889,-3.824938,5.645868,3.611813,-3.329882,-5.222467],[-8.225287,7.394145,-4.395469,-7.217076,-8.025871,5.168883,-2.966275,-8.578693,9.669624,-6.065649,1.732697,5.607148,-4.349991,1.904715,-4.558388,7.705638],[-0.419103,3.814220,6.018044,-5.573050,-1.317771,3.337467,0.782957,-9.209871,4.725636,3.969850,6.737010,2.571006,-1.928508,-4.711590,0.999526,7.708416],[-8.118711,-0.498356,-8.463451,-1.355874,-3.231279,-3.278972,5.762671,-8.099971,2.025851,3.060046,-7.965945,-3.131050,8.426296,9.230292,2.283228,-7.244769],[4.608892,0.176909,-0.205641,-3.832679,-2.163676,-6.305770,0.362760,-9.965414,-5.658923,-5.852177,-9.260027,5.108447,1.858529,-3.666184,-3.491879,8.785652],[2.570265,3.833074,-0.760506,-1.994182,-8.460075,-7.640478,0.055667,-6.145038,-1.661347,-5.374013,-5.711449,-9.310733,-2.794668,-7.776775,-4.125271,4.684874],[-2.653254,6.330244,-0.517711,6.040836,-4.212542,9.342855,-9.576821,0.344049,-9.739917,-2.258148,-3.533647,-9.518376,6.254581,2.178264,-3.526060,-7.238668]],[[5.048380,0.415018,8.072018,1.196970,-4.207096,-5.927229,-0.709933,6.246339,5.645323,6.925175,4.099361,4.893201,-0.633933,-1.286136,2.284860,-4.822372],[-4.598906,-6.269630,-4.449500,1.815552,-8.280929,-9.439019,3.923888,0.822961,5.188211,-6.335857,1.046467,5.109294,-4.539249,-6.558588,-4.634731,3.283643],[0.593257,0.749496,0.618460,-1.468729,-4.651783,-5.426423,4.233628,-9.884981,7.898409,0.461669,-7.230331,-3.788959,-0.670483,-9.833859,1.803119,2.425897],[-6.766118,4.194341,3.291958,9.970064,-5.758042,9.666182,-1.157084,-2.580372,5.221136,-3.162448,-4.282204,-8.710166,6.847399,-2.223899,-5.950042,8.993028],[-7.417467,-6.937848,9.103317,3.815469,-1.480241,7.460977,-0.474669,-3.742928,1.999634,-9.138048,0.428893,-1.207310,0.389347,-9.710226,-4.185855,-0.759630],[-6.263252,-5.969410,6.526536,2.073163,-5.792790,-4.319346,-0.160050,-2.749825,7.046390,2.818668,-9.991330,7.018484,-4.682105,9.371614,-0.373836,0.720042],[9.276463,-5.678721,3.925315,-6.263584,-2.716958,7.850467,3.568673,-5.296416,-4.764731,0.937099,7.732194,-2.377412,-9.163970,-3.150521,-9.891766,6.658153],[2.411286,-6.957284,0.391215,-2.443670,7.239657,-8.419017,-7.626422,1.379870,0.797960,6.520464,4.931566,-2.097039,8.224289,-2.201659,0.295660,0.991342],[2.246189,3.694695,-6.144254,-5.310897,4.646704,-7.261573,5.023304,-3.708812,0.356723,6.826822,-1.822471,-5.376888,-0.554002,6.962796,8.792937,-5.871763],[-4.549647,4.561237,-8.211288,-8.869388,7.562600,3.896063,-2.874235,9.059147,4.465698,-2.817699,-0.493615,0.806267,-7.086273,-7.132202,-6.885026,-1.860804]],[[3.598145,6.556522,-5.553455,0.471443,5.927202,-4.761021,8.988322,4.441298,9.628106,-3.406172,-6.668322,-6.914006,-9.932367,-7.443412,-3.813906,5.180465],[9.873444,1.844829,-1.083185,2.434347,7.053430,1.432105,6.366476,2.302926,-7.487723,-5.047661,8.393526,4.881864,-2.532172,-5.064341,2.465171,-1.472659],[6.307343,-0.614964,-7.553366,0.853793,7.931168,-5.183724,7.489481,4.202430,4.966297,-4.418832,9.347710,-2.987064,-7.643210,-0.359339,-1.495981,-7.880552],[-5.218860,7.475484,-7.025166,-2.390156,5.238008,-9.697440,-0.054786,7.716439,4.562788,-4.814698,3.181822,-6.626478,-4.011977,9.167106,4.336415,-5.365614],[-9.480383,9.435211,-6.613110,0.100597,-5.565276,-1.277350,0.929963,6.228047,4.700149,2.385864,-6.799667,-0.890712,-7.040616,-7.425203,8.934606,2.865304],[-0.345162,-6.797290,-3.547140,0.623450,0.892492,8.414618,3.971291,-7.122579,6.160719,3.659763,0.114096,-6.904471,-9.310571,-4.133590,0.817263,4.394433],[-7.382479,-4.446954,7.660875,8.338597,4.268371,-9.002634,8.926775,9.022836,-0.897631,8.663949,7.901662,-9.069250,-3.815658,3.670469,-7.949781,5.014923],[6.735721,-5.925637,3.438326,7.244728,-5.847394,5.886051,-7.976127,-5.889327,-0.187060,5.898841,6.484631,7.279063,-9.322635,0.591792,5.807542,9.629162],[-9.548238,-1.162640,1.016506,-0.155827,6.085280,-5.223370,8.759312,-9.397514,-5.623466,4.696098,1.603907,3.716505,7.536985,0.580186,2.633061,6.631426],[-4.434698,-3.712062,-1.411376,9.800124,-6.218903,2.771776,0.267220,9.200630,7.329685,6.525215,8.246556,-7.058189,-3.077348,-3.985862,-3.662872,2.109562]],[[4.344156,2.008126,9.004151,8.269817,-2.932614,6.243137,-2.983479,4.353273,8.104795,0.696279,9.816371,1.905471,6.087346,4.912186,-9.799529,-0.524886],[-7.442940,5.946861,-2.647939,-2.227217,9.830559,-9.519428,-3.244313,-1.878269,7.918207,9.746646,3.414276,-8.193753,-7.272928,0.097152,-7.567791,-6.695817],[0.675750,-3.376451,-3.860165,-9.310924,-2.928716,2.670740,-1.400650,-7.645628,5.069038,-2.933504,5.173424,6.590285,-1.663036,-4.025414,-9.246694,-5.647748],[-3.763105,-6.606965,7.908010,-3.444145,0.037313,-6.060846,0.956856,4.523119,-5.545638,-6.210992,-9.968588,4.635514,-7.184859,-4.024126,-6.672796,-5.365927],[5.458066,9.423648,6.681779,9.078558,-6.724799,-3.405632,-1.950967,-4.715492,0.653813,-9.088243,8.983244,-4.102790,3.436336,-2.592801,1.243173,-7.619243],[1.813191,1.600093,-7.793409,-5.691151,0.003265,-4.324142,-3.653887,-3.457940,6.494191,-8.155572,5.295714,-9.855371,8.992324,-8.421496,5.274152,3.335166],[0.967412,8.481120,8.708238,-2.998850,-5.318651,8.671807,8.235470,-5.173433,-7.464983,4.622208,-0.119496,0.782644,8.397255,-5.651196,-0.655028,8.694234],[8.697260,2.111107,-9.133743,5.538784,5.059865,-8.144493,-0.351408,9.041601,9.147716,-0.876641,3.478833,2.347909,-3.724040,2.989497,0.307544,-9.891472],[-6.753127,-2.055942,5.488655,5.613469,-9.143833,1.820172,1.505842,5.530368,-3.285013,-1.889021,0.517192,-4.257082,5.824940,9.934821,-4.082370,6.629879],[1.172370,-5.749860,9.485773,8.069631,4.199931,5.102982,-9.131705,6.291396,-9.635945,-4.579213,3.128400,3.725111,-7.955688,8.123062,-9.642860,5.371103]],[[-1.888500,-9.464652,-6.964171,9.685447,3.710217,-5.392124,-3.078976,-7.057627,2.633839,-9.279981,8.536337,4.689687,-4.261208,-6.975734,-5.296852,0.074298],[3.416873,-5.296389,2.620929,2.489196,-5.264672,-3.225697,2.605909,-4.027904,6.906992,0.224733,-9.227785,2.772237,-6.427201,-8.931846,7.470113,2.952277],[4.069044,-1.061368,-4.034472,8.914059,4.907610,8.736694,-5.670482,5.911019,-0.606297,-6.189682,-2.241643,-6.256997,-5.909409,6.079556,-4.642095,-6.091604],[-6.192704,-4.570550,2.158612,-1.841422,-9.604060,2.316352,1.638629,-1.787816,-6.982640,-0.432405,-8.515333,5.950028,2.784285,4.206520,1.163206,-0.465365],[-5.480722,-8.402343,-8.356898,7.935404,-3.113135,-2.047756,4.313735,-7.263616,9.569900,-1.590630,9.315376,-6.310697,-5.107043,-3.935656,-8.119728,-9.962915],[4.822544,-2.811118,0.432473,-5.321203,-2.202412,0.143218,-8.255983,8.220862,-2.304673,0.774212,0.220281,5.840567,6.699174,-7.027079,-5.401283,1.200747],[8.077303,8.643897,1.862907,4.068605,-5.127274,6.920022,-0.227825,0.431500,5.242099,-2.185757,-2.451807,-1.891340,3.481401,1.265638,3.783344,8.301995],[-8.784154,8.771411,6.826291,-3.176852,0.806326,-9.094560,-2.007009,1.618856,-8.720313,9.050820,0.225091,9.089086,-9.484160,-0.004840,0.541240,-8.358543],[-5.229099,3.984539,-5.048834,-8.331940,8.343184,5.647916,-5.041593,1.449246,-6.541811,7.311963,2.063191,-8.841451,-6.443134,9.574762,7.938805,1.249758],[-3.742681,3.846641,-7.655539,-9.441850,-8.146798,-2.345212,-7.092733,4.876511,-5.102268,-6.977734,6.906185,0.087687,0.718778,2.180100,-1.334836,5.019771]],[[2.183214,-7.903698,-0.889032,-5.938986,-6.061869,9.952135,-0.316663,-5.481971,7.785352,-9.860264,9.496327,-1.925338,4.255287,8.489275,4.467176,-7.563338],[6.539112,-8.713322,2.815820,-8.013637,4.225001,3.591468,1.612180,-0.241965,-3.264673,0.704887,-0.433077,4.386686,-1.721729,-2.123349,9.739337,-8.925378],[4.738966,-4.144401,8.662949,-4.823299,-7.770629,2.210569,1.877118,-4.025070,-2.579517,-8.979621,-1.924190,-2.977361,-5.116546,-7.204964,1.164596,8.533051],[9.018105,-4.963843,-3.183925,-9.597564,-5.809336,-7.459968,0.298744,3.158133,2.992602,6.715378,8.148764,-4.313559,-1.150886,3.882277,2.326761,-0.568847],[-3.166912,-9.318362,6.333959,9.863633,-2.848474,-5.296437,8.571650,7.844991,2.277909,-7.377202,3.159053,-6.526838,2.129730,1.475318,-2.163139,7.161769],[-3.920444,-3.309457,-8.912041,5.254989,1.701290,6.828435,-8.695124,9.829037,0.049647,-3.566412,-0.102024,-0.031727,3.221956,4.942712,0.429155,-1.000140],[-4.319851,8.548237,6.702446,3.622684,-0.309217,8.929406,4.591476,-0.594506,-7.758001,7.883194,-0.777511,-8.806792,-3.592491,5.425365,-8.048938,4.706412],[-7.546584,-2.315511,-5.014635,2.751292,-1.449865,5.375333,2.084443,-0.890001,-6.407585,9.483760,5.482845,-4.651474,3.825379,9.051588,-5.217733,-8.232596],[8.653759,-6.468874,-9.036722,8.851199,-6.565300,-1.972952,-8.569930,1.370561,9.350368,3.051406,-7.580308,-1.523300,-0.713344,4.289536,-7.915318,6.706523],[-9.089347,9.834801,3.991535,6.090754,5.438589,-9.733601,-6.052005,2.554030,-8.008911,-3.418491,-1.732963,-0.905261,-6.013071,7.814429,1.870537,3.562070]],[[-7.471917,-6.333465,5.614471,0.844594,2.206943,-2.966275,0.683420,2.056813,7.481142,-9.071982,-6.121276,-2.948897,0.914463,-5.515409,-4.940604,-0.898805],[-0.883664,2.204844,8.578269,6.471989,-9.152780,-4.585421,5.744323,8.940070,-8.136995,-9.026270,-3.251273,5.470242,4.048002,-2.432185,8.142717,-9.234238],[5.606160,4.696144,7.442795,2.149364,3.169650,0.956903,-0.861444,7.087110,6.337926,5.824654,-6.891819,8.253550,-5.466017,9.257760,-1.193209,-9.974769],[4.732335,-1.576562,-2.127174,-5.771680,-1.925901,-8.633786,-1.688541,5.666121,7.020206,9.339124,7.023415,6.441981,-6.980632,-2.754120,2.085576,-3.342709],[-8.096453,2.216628,5.141950,-8.593359,4.989381,-9.595529,-8.305082,0.601298,-8.533095,9.510300,5.932419,-6.167957,-5.013130,4.593038,6.017338,-3.548926],[-0.254984,-7.240493,-2.458923,1.107541,6.263957,5.013665,2.394124,8.516128,-6.085123,-9.078226,-7.390885,1.314238,6.384459,-6.242502,1.196366,-8.829587],[-0.392478,4.195426,-0.644371,-7.105549,-8.318823,1.572669,6.737060,3.410107,-4.353685,4.415330,-6.807793,1.999014,8.055529,-2.077761,-5.580575,2.806786],[4.766907,7.457122,1.629013,3.638904,-1.412018,-1.888005,-1.687085,0.716091,9.707652,4.088720,4.730500,4.238262,-1.387312,2.570598,-0.955239,9.412413],[9.691103,3.037726,-5.455838,-7.580867,-3.453149,-7.517528,1.816606,2.487700,9.229941,-1.950735,6.742673,8.331787,-6.783822,-4.634055,4.994315,-8.762164],[3.664343,-5.286995,0.807172,-4.460830,3.259935,-2.646608,-8.022572,9.195773,-0.158572,-9.290007,8.234266,5.881404,8.138371,-9.782483,8.642968,0.053537]],[[7.805901,-4.090591,5.215069,-5.305130,-6.218370,0.602360,-6.894369,-4.661171,-4.653187,-8.198623,-3.364133,6.410896,3.451313,4.200166,9.740422,3.813801],[-8.780371,7.109251,-6.072847,-8.548520,-0.857703,6.357968,-9.512567,1.701224,6.080445,-9.528679,1.683118,6.882758,4.370110,7.811361,5.482260,4.272985],[-5.406220,3.512547,-4.807663,5.064274,7.245579,1.939828,-8.204774,4.817615,-2.843743,-8.981934,6.767778,3.740668,-9.244383,9.280591,9.510252,1.911767],[2.221333,0.024952,-5.750919,-5.511087,4.330698,9.738819,-4.789963,3.449369,-8.864295,-9.329669,7.006376,-1.054957,-0.942459,-2.529753,1.647743,-4.680260],[-0.869247,-4.008336,-4.571708,2.179899,7.355997,-2.098351,3.131291,-8.684257,2.197047,6.208953,-1.663407,-3.717639,-8.521168,8.690493,-5.108495,-7.464328],[3.243056,9.468351,-8.749331,7.365937,3.734142,9.867270,-7.721829,-7.173413,3.801117,-2.406230,4.151454,-2.428463,3.340607,8.548083,2.523032,4.033288],[7.850335,1.081571,0.301562,3.015827,-8.567182,2.720179,-9.835260,-0.579443,1.325221,-1.733112,5.449921,-6.466313,-2.874000,-9.137312,-5.007083,-9.179058],[-9.229413,2.143509,-0.472685,-8.372554,2.883913,8.602539,0.943814,2.375368,9.647733,7.302971,4.095073,2.644912,-7.936514,9.694711,3.986765,-5.901298],[1.338075,9.806108,-2.435634,-0.040951,8.417448,6.684184,0.271349,-8.317746,-9.730356,1.293411,4.140228,5.833173,-0.880570,-6.826721,-3.158091,7.207900],[-9.524515,-7.779594,-3.433693,0.295952,-4.123437,-7.064172,9.789514,-4.268955,4.689233,4.558318,7.371174,-8.020104,-9.051270,4.194093,5.979504,-1.763590]]], dtype = "float64")#candidate|1215|(16, 10, 16)|const|float64
var_1216 = relay.var("var_1216", dtype = "float64", shape = (16, 10, 16))#candidate|1216|(16, 10, 16)|var|float64
bop_1217 = relay.divide(const_1215.astype('float64'), relay.reshape(var_1216.astype('float64'), relay.shape_of(const_1215))) # shape=(16, 10, 16)
output = bop_1217
output2 = bop_1217
func_1227 = relay.Function([var_1216,], output)
mod['func_1227'] = func_1227
mod = relay.transform.InferType()(mod)
var_1228 = relay.var("var_1228", dtype = "float64", shape = (16, 10, 16))#candidate|1228|(16, 10, 16)|var|float64
output = func_1227(var_1228)
func_1229 = relay.Function([var_1228], output)
mutated_mod['func_1229'] = func_1229
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1404 = relay.var("var_1404", dtype = "int64", shape = (12, 5, 11))#candidate|1404|(12, 5, 11)|var|int64
var_1405 = relay.var("var_1405", dtype = "int64", shape = (12, 5, 11))#candidate|1405|(12, 5, 11)|var|int64
bop_1406 = relay.maximum(var_1404.astype('int64'), relay.reshape(var_1405.astype('int64'), relay.shape_of(var_1404))) # shape=(12, 5, 11)
output = bop_1406
output2 = bop_1406
func_1411 = relay.Function([var_1404,var_1405,], output)
mod['func_1411'] = func_1411
mod = relay.transform.InferType()(mod)
mutated_mod['func_1411'] = func_1411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1411_call = mutated_mod.get_global_var('func_1411')
var_1413 = relay.var("var_1413", dtype = "int64", shape = (12, 5, 11))#candidate|1413|(12, 5, 11)|var|int64
var_1414 = relay.var("var_1414", dtype = "int64", shape = (12, 5, 11))#candidate|1414|(12, 5, 11)|var|int64
call_1412 = func_1411_call(var_1413,var_1414,)
output = call_1412
func_1415 = relay.Function([var_1413,var_1414,], output)
mutated_mod['func_1415'] = func_1415
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1574 = relay.const([[-5.249503,8.687169,2.230107,9.104468,5.854813,8.890986,3.555804,-3.803779],[7.654079,1.255288,1.486098,2.665039,6.381320,7.837551,9.450196,2.414925],[9.416781,-1.526872,7.826223,3.340035,3.085998,5.563629,1.935427,-7.922639],[-4.049108,0.876681,3.030097,-4.392940,-8.273568,-8.183042,2.472781,1.250995],[-4.697094,6.215810,3.995996,2.824933,1.721989,1.480877,-4.701565,-9.356088],[7.087157,-0.358869,-3.181661,-3.041631,-0.825157,1.124436,-4.991995,-2.832924],[-5.580295,-7.519732,3.844841,9.639885,-4.274999,7.381338,-1.205223,-5.960122],[5.240264,-0.865905,6.086557,-3.156886,-4.848461,5.421637,7.785154,6.769700],[-4.471427,7.233829,3.983013,-3.711548,-1.907202,2.967020,4.255523,-1.939953],[-6.578782,6.993017,3.211684,-2.128731,4.126903,-4.815345,9.402403,-0.029334],[-0.895728,0.248948,-1.438261,8.716224,0.103867,2.634462,-8.686194,-7.330297],[2.593550,7.213749,1.885206,-0.127079,1.316676,7.345798,-0.112866,-6.068516],[-8.580664,9.437896,-4.187540,4.647954,3.742335,-7.373725,-6.121974,-7.032945]], dtype = "float32")#candidate|1574|(13, 8)|const|float32
uop_1575 = relay.asinh(const_1574.astype('float32')) # shape=(13, 8)
output = uop_1575
output2 = uop_1575
func_1577 = relay.Function([], output)
mod['func_1577'] = func_1577
mod = relay.transform.InferType()(mod)
output = func_1577()
func_1578 = relay.Function([], output)
mutated_mod['func_1578'] = func_1578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_1584 = func_1577_call()
call_1585 = func_1577_call()
output = relay.Tuple([call_1584,])
output2 = relay.Tuple([call_1585,])
func_1588 = relay.Function([], output)
mod['func_1588'] = func_1588
mod = relay.transform.InferType()(mod)
output = func_1588()
func_1589 = relay.Function([], output)
mutated_mod['func_1589'] = func_1589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_1652 = func_1577_call()
call_1653 = func_1577_call()
func_374_call = mod.get_global_var('func_374')
func_378_call = mutated_mod.get_global_var('func_378')
const_1661 = relay.const([0.490880,-0.084693,-1.719841,9.905321,2.350999,-3.895738,-3.934873,4.059089,8.255355,-9.996346,-7.568213,-1.395570,-4.024824,2.016348,5.810708,-8.083635,2.601556,-4.674978,5.211955,-5.892368,0.662063,6.035446,-2.104816,-1.951946,8.894435,7.938162,-7.221968,-2.698407,-8.849777,4.523020,-8.763425,5.962046,-0.362478,-4.099048,5.118544,6.346295,9.684652,-2.015077,1.541076,8.717742,4.217307,8.920484,3.947169,-9.904598,2.251631,0.475779,2.949579,2.417319,-8.521491,-7.822532,5.907880,7.949994,-4.252813,-1.085693,-5.566843,7.111973,-6.851006,9.686853,-6.206074,-9.856507,0.381910,-6.232100,-6.003904,1.280183,6.416959,-0.498463,8.194065,3.925561,0.044309,6.545667,-2.268445,9.392346,8.188740,-7.143941,9.737449,8.849255,-0.380542,8.755910,-2.715522,3.002264,-4.947658,-4.641704,9.178043,-7.105648,4.301393,-7.858706,-2.941163,-2.500603,3.328091,8.789738,4.988039,5.900738,-9.172176,-8.924334,4.651907,-3.123163,9.526482,2.756341,1.585358,6.068971,-8.436235,-2.094586,-8.873193,-3.753884,6.575793,-7.888501,0.157965,-7.775673,-5.094235,-5.353446,-1.293825,-6.633232,8.882991,8.299312,9.724565,3.143175,-6.703419,-7.319617,-8.730123,-8.142325,-3.030815,4.273658,6.093508,-6.826252,-4.653298,3.707172], dtype = "float32")#candidate|1661|(126,)|const|float32
const_1662 = relay.const([-3.039348,2.155683,7.726346,2.461683,-2.704795,-0.540764,-6.856902,-3.803886,2.784293,-4.102474,7.628087,1.727400,3.777224,5.523838,-3.079857,9.867664,9.546911,-0.848376,5.083600,-6.073607,8.401934,8.541429,-3.519638,-3.458466,7.039147,-6.567148,3.999485,-9.475047,-6.746627,-7.918732,-2.584289,7.443279,-6.859727,6.509648,7.417619,-7.104019,-1.565446,1.520769,7.650888,4.803332,-8.280188,-5.392931,9.390279,5.224683,-3.572792,-8.718033,3.748242,-5.795116,8.047412,-0.803396,3.742078,5.056002,-2.308123,-2.118267,-3.792474,-3.738501,2.293752,6.141596,9.433785,0.531218,-8.035324,7.691173,9.563856,2.963504,0.792894,-0.878911,-3.775804,-5.516626,-5.356118,1.747953,-6.542754,2.841397,-5.020236,-7.431987,3.660071,9.512247,9.561688,-6.068374,-7.528969,0.470702,5.038904,-4.272543,5.034356,-6.053265,-7.022916,8.765940,2.012159,-6.976493,5.842192,1.419588,-0.464352,-7.150253,5.499794,1.271534,-4.563909,9.580563,-2.101396,-4.891879,6.926945,9.617723,-6.774503,-4.827983,0.471477,7.962507,-8.732883,-5.272858,5.135834,-1.619775,6.602315,-0.619809,6.126140,0.935011,7.927082,9.916388,-2.943741,-2.183404,4.506513,-0.187174,-6.262283,0.074430,-9.450109,0.779551,-2.433051,7.088329,2.285702,-8.851648,6.570740,-7.504156,2.874671,3.728278,-1.162066,-5.168187,3.517463,9.978734,-9.312469,-8.963764,-4.340995,-7.598008,2.227787,-0.409038,2.901722,7.127444,-7.194431,6.678211,-4.952732,5.043837,6.114932,-4.905912,-1.258658,-7.241339,8.508192,2.123260,-8.039366,-6.945972,7.262437,0.073859,2.027544,-8.644483,-3.659206,6.071513,-6.056155,-5.605343,-4.129178,-6.374080,-3.475687,1.826603,9.199157,1.219397,-1.215877,-1.311337,-2.512505,-9.605382,-6.794595,7.700980,9.891658,0.407944,8.927781,9.274736,9.311437,-9.291233,-4.612543,1.355878,-0.362905,6.517574,-7.950899,9.054763,5.106740,9.856437,-3.510160,3.976883,8.933498,3.237597,-2.428122,7.775946,5.918632,2.805948,4.127555,1.013659,7.391192,0.961773,-9.827184,-9.603899,-4.429458,-7.441016,-0.779971,-1.099472,-8.837458,-7.041251,-8.439104,-3.200268,9.191800,9.800155,-5.310548,-6.025280,-7.221925,-5.573252,-3.142626,-2.409979,-7.971579,8.512260,-8.948472,-2.410879,-4.957776,3.303548,-7.277617,-3.091731,5.235373,5.235587,-4.541419,0.598840,0.182312,-8.988216,-3.968409,-0.147773,3.701836,5.898118,-5.038053,-6.091098,-1.367595,3.199764,-0.162144,-4.148034,-9.070486,2.586492,-2.715416,3.781799,-1.677265,1.113115,-8.848433,2.019404,-5.119229,-5.545009,5.814974,6.349259,-3.667726,-5.772198,-6.895474,8.155195,-6.870861,7.111991,6.867704,-2.977822,-7.641205,5.900396,-9.046259,-9.817518,8.302444,3.074011,-7.067990,9.593543,7.361503,2.689140,-2.222425,-0.761596,9.754124,6.036009,-1.820363,3.069710,-8.076021,-3.702783,3.562334,2.979127,3.308020,7.397973,4.953127,-3.957343,9.770668,-9.510605,-6.835608,-5.068375,-0.357301,3.671987,-8.325905,-8.572740,7.481877,7.999788,0.047975,5.258405,6.734005,-0.607934,2.775956,9.351463,-3.528981,0.146737,2.905295,4.695641,6.541103,-6.868503,2.104318,-9.235607,0.297936,7.616754,-6.979508,8.573822,-0.010188,-3.277203,0.633438,-4.022849,3.405725,-4.045224,1.898589,4.151802,-8.598100,-5.868278,-2.029620,-7.212659,-6.915941,-0.220312,9.748150,-8.027199,-0.168664,6.787170,4.082646,4.925135,0.175703,0.578728], dtype = "float64")#candidate|1662|(336,)|const|float64
call_1660 = relay.TupleGetItem(func_374_call(relay.reshape(const_1661.astype('float32'), [9, 14]), relay.reshape(const_1662.astype('float64'), [336,]), ), 3)
call_1663 = relay.TupleGetItem(func_378_call(relay.reshape(const_1661.astype('float32'), [9, 14]), relay.reshape(const_1662.astype('float64'), [336,]), ), 3)
func_1227_call = mod.get_global_var('func_1227')
func_1229_call = mutated_mod.get_global_var('func_1229')
const_1705 = relay.const([[-1.260482,7.120157,-1.843616,0.153506,-7.833726,9.582235,-3.077573,-0.865083,-0.145193,-6.856463,-4.070012,-4.519113,-2.776568,6.577925,1.379942,-2.150649,3.916700,-4.681174,-5.116073,-0.344966,4.779930,3.524210,8.836337,3.720676,-7.000515,-9.739456,-9.018089,5.732023,7.503064,0.983745,8.442721,-4.693659,9.063652,-0.492631,-8.617719,1.540226,-7.382926,6.379187,-2.201509,4.335439,8.768262,-8.260949,1.834142,-6.975302,-3.609283,7.985379,8.292599,-7.510679,-6.689886,3.793711,-3.496052,2.768338,9.491653,-7.639435,7.586655,0.425987,9.389526,-1.290695,4.775761,6.557356,-4.919293,7.824975,-4.716495,-2.497581,5.167449,2.990367,-7.684805,-7.686467,-9.394683,-7.003078,8.808676,-5.774525,8.718912,8.750972,7.280672,-4.125962,7.103233,-7.195541,6.223797,-6.823095,-0.615575,-7.440811,-6.625956,-5.235000,4.628946,-3.008289,-1.896923,-6.147886,9.580520,-9.333572,-6.692049,-0.423032,8.567767,-0.715825,-9.936994,8.648474,-4.415853,6.398799,-5.209531,2.429250,-9.545553,-2.919789,-8.519378,-1.094595,-5.949722,4.668926,2.775968,-0.889175,-8.538531,-2.190864,-4.747080,0.936579,0.139759,8.240733,-3.943846,-6.648743,3.048910,-7.019994,6.016718,2.927773,5.131289,-3.807429,1.928176,9.094065,4.118221,-8.384943,7.454007,6.455420,-5.468806,2.577738,0.765440,-4.283966,-0.952638,1.364905,9.450178,-9.917320,8.703289,-0.762059,7.119759,-7.638358,9.756161,-5.121197,-2.849479,1.464797,8.504502,7.901385,-0.440136,0.658785,-5.958382,-2.386729,3.376888,9.557042,-6.715783,3.916343,7.692931,-1.905651,-0.886723,-7.111387,-7.694280,-4.689456,-8.944845,4.739728,9.898892,7.157621,5.493720,3.570470,-8.143863,2.012718,-3.664589,1.443656,-0.953745,-7.167414,-2.792905,6.061037,3.375396,-9.646102,4.952024,-7.254048,-0.902391,0.926616,-2.766422,6.038512,5.256004,6.535366,7.768968,2.467159,-7.788030,7.728053,-3.544742,-5.957361,-2.386051,7.042854,-7.006424,-2.083995,-9.065537,-9.522633,-4.696065,2.396299,-4.511214,-1.952231,7.044693,1.897680,4.726149,3.169224,2.832745,0.453700,-2.778776,3.062993,0.042660,-1.661176,3.706072,-9.008845,-4.617364,2.601236,-8.730017,-2.397160,-5.676182,4.695424,-2.584434,5.379104,-0.430682,8.206791,-6.561806,8.251857,-8.582637,1.010126,-3.943104,-8.865849,3.962240,6.403654,5.372296,-5.661648,2.264318,4.111843,-5.059144,6.889731,-3.765913,6.677135,-4.880823,-4.552321,-1.394916,-9.150462,1.777438,4.540673,6.962749,-6.618368,1.784214,-9.948037,-7.209478,-1.385658,-1.620687,-7.630036,0.036733,4.328622,-1.730269,-6.254434,6.131441,-4.342786,4.364906,-5.213609,-6.205008,0.719368,2.010379,2.436229,-3.093306,-6.106053,1.777459,2.795067,-4.386775,-4.186280,-6.155288,-7.480790,-6.678492,-7.463840,-0.763815,-1.295964,1.524196,-6.225075,3.336422,-6.414962,-0.679709,-9.637418,1.897814,-4.997710,2.496009,1.282398,2.269189,3.676052,-3.935998,-6.781764,-4.259038,1.804037,-0.713205,-0.935822,3.423220,5.235582,3.904104,-7.523162,5.953547,3.847552,7.363960,-7.020010,-5.946167,-1.395771,9.174851,4.123118,2.491972,1.337422,3.450150,6.506707,3.602183,-0.921655,4.054479,7.883001,1.521174,4.052463,8.130155,1.014747,1.191655,-2.361134,-5.897007,4.673661,2.043884,-5.279784,-9.441019,2.089645,-8.903713,2.735002,-8.487743,1.206903,8.844069,2.066335,-1.381931,-4.106672,-9.728774,5.775168,-1.431488,9.413841,2.866379,-9.532513,4.887495,4.704139,9.992848,3.763813,-4.713207,4.832374,3.070767,-5.967684,-4.244147,-7.714623,-3.838218,2.038024,-3.775230,-2.499476,-1.126955,0.131983,-2.034399,-0.107455,1.038049,-3.268904,-4.740551,4.249406,-7.118609,3.741712,-3.878212,4.212123,6.645465,-9.537742,6.572002,-5.095809,1.051329,-1.059657,-7.119512,-0.880655,-0.585637,3.576947,-8.761440,1.763684,7.144346,6.440145,-4.609846,-0.773306,-7.159769,7.939596,0.108873,1.501229,1.933218,-6.410605,-1.660330,-0.394238,9.515233,5.965549,-8.907531,-5.388726,-7.340213,-1.038570,8.695805,-8.120922,6.108685,3.176963,7.415837,1.002416,-7.718447,7.886870,-4.726703,-6.561557,8.636853,-0.466271,-7.780594,4.077564,-9.036413,5.788705,-6.714771,0.041029,0.200994,-6.402763,-3.324320,0.967533,-9.695464,0.998331,-5.832923,-4.510337,-1.002352,-4.231028,-9.176010,7.357739,2.682132,-0.691334,-5.704504,3.974364,-2.666747,2.905100,4.007159,-6.059890,2.374038,9.361918,1.641962,0.963024,-1.811645,-1.449863,-0.970001,8.261536,-7.177640,9.359792,-0.479220,-9.149691,2.192338,8.983416,-9.366532,-0.389758,6.084623,-2.946950,4.001735,-2.229539,1.667843,-0.480802,-5.561122,0.463527,6.421626,-9.608106,0.612441,1.802324,-6.095976,1.690418,-6.453662,-1.799376,7.689627,-9.117490,-8.683643,-4.400918,0.915821,8.005711,1.309888,-4.907641,-5.839308,-6.293380,3.064309,-5.202413,-9.611756,-6.389325,9.117804,-7.175960,8.048852,5.742873,-3.687207,6.053037,0.209939,8.246568,3.347376,7.699401,-9.134456,7.107644,4.782211,1.188363,-2.457993,-2.585103,-0.652403,-3.164898,3.810118,-9.214990,-9.760260,2.152846,-5.573702,-9.798050,-0.383377,6.161775,0.649706,-8.014396,-9.174483,-1.251384,-7.208539,-2.993653,2.362046,-9.169412,1.050970,-2.948352,3.475149,9.169442,3.209575,5.703571,2.541372,-0.850739,-0.234665,-9.149637,9.081966,0.948425,6.563851,-2.108917,-7.848467,-3.765148,1.800054,3.242160,-4.632829,4.133767,-8.712253,-9.559919,1.119378,-8.014466,1.572859,1.449509,4.676450,-8.872964,-0.609735,-1.843665,-7.720933,-2.544476,3.463412,-1.586839,-9.348801,0.443040,-8.747149,3.683357,6.427589,4.705276,-5.249924,1.091443,9.405709,-3.507687,-7.472335,9.402981,2.449686,6.896353,8.456670,7.497388,7.260076,7.860520,-3.164374,1.707766,-0.463342,-0.100833,1.724232,7.306703,-3.221974,9.211677,-1.296783,1.751018,-2.796705,-7.863029,-9.587274,-7.203134,6.731531,7.381823,-0.687528,9.524138,-9.989316,0.900534,4.300752,-0.190791,-0.981287,-8.348602,-3.962370,8.618430,-5.305770,0.895237,5.453479,-6.053356,0.355558,-7.540333,7.980145,-7.387435,1.402607,6.824946,-1.662601,-2.546874,0.876282,3.667983,-7.683898,8.412911,1.613988,3.171229,-9.687401,4.736661,-2.820556,5.934718,3.151714,0.773346,3.161658,8.769915,-7.598466,-7.933847,-5.488775,-7.264868,-0.271102,-0.674442,-5.819099,-6.417309,7.300650,-3.054323,0.897754,7.395075,8.596488,-0.597329,-1.081256,5.709667,1.283155,-2.160746,0.437454,4.128170,-4.511842,5.934128],[5.293552,7.893640,0.321325,-5.883349,0.507304,0.548167,-6.360324,5.346507,5.784402,-0.787377,9.229980,0.727142,0.440340,-9.677280,-2.727081,-8.725203,-7.461862,-7.691472,0.383160,-6.964049,3.651488,8.129179,7.529594,-5.959023,5.689428,-5.167330,2.817890,-6.537261,-7.538341,3.446904,-3.237567,-5.051108,5.439924,6.828861,-6.990068,-4.569230,2.701003,4.994289,-9.225981,-7.759559,-8.702998,-9.627483,-9.776257,-6.489834,-6.198440,3.978260,5.492892,7.877895,-3.495089,6.913664,-9.713368,-5.785722,-0.594925,3.745058,4.843093,-6.631865,-2.453359,-6.246820,4.028533,7.758900,-7.909009,2.529278,-3.238728,-6.850562,3.665439,3.013645,2.925203,1.023161,-0.699119,7.447755,-7.300480,0.350270,-1.396227,2.180756,6.402482,2.776303,0.653642,6.896374,5.054265,6.740864,-2.946433,3.393640,-9.675619,5.608477,3.932540,9.255263,-8.231422,-6.495128,-7.550273,2.328726,-8.006310,0.068772,2.895360,8.407188,-5.626109,9.742899,-3.667773,0.933507,1.342139,6.460668,0.189933,4.976573,1.567360,-7.134050,4.665151,9.100983,7.405232,-3.299654,-8.485674,7.797604,-0.151969,6.020587,6.747953,3.330927,1.708625,2.359412,2.046274,-8.488383,-8.497270,-7.767440,-3.787660,9.614152,-2.672469,-8.064967,-8.411550,-5.598873,-4.428943,1.620985,-7.980684,5.810331,0.363320,-9.769744,1.982593,1.621925,4.903713,9.286085,-8.093470,4.827953,-7.870419,0.177448,-4.809035,5.584825,1.590975,-2.115133,-4.407240,4.806463,5.134713,-5.010061,-6.289017,-4.010121,-6.751292,-3.304870,8.797140,8.009971,2.221507,-8.217056,-3.843469,3.452509,-4.745284,0.771247,2.453895,-0.350681,-9.306741,8.320213,-0.067507,6.323217,9.947884,9.240099,4.276414,1.715127,7.076974,-4.135686,9.233686,3.312172,-4.259491,-1.236055,7.067819,-6.523061,-4.665169,6.028424,0.955402,2.280976,-0.774586,1.863978,7.387125,-1.991892,-7.827137,7.565311,-7.896568,3.854911,4.459006,-6.650120,-3.846072,2.735714,-8.191901,-6.064394,2.191560,0.106256,-8.891660,2.009660,8.840999,5.198118,4.528679,8.574403,1.234429,-5.828638,7.791871,-7.617034,8.118604,-0.218727,-1.934408,9.863786,-0.546752,7.026750,-4.493849,-2.032469,-0.945941,6.471408,-5.418655,-5.049297,-5.478767,5.960125,6.024306,9.743280,4.286165,9.737567,-3.807740,6.775949,7.196718,-2.944308,4.696517,8.819560,-5.416602,3.483152,3.737602,-9.321057,-6.767031,4.550973,7.452914,-8.839179,-3.745027,-5.208943,9.670109,6.146757,-3.713359,-8.905637,3.401585,-8.088775,-5.205523,-9.682130,5.379375,2.096938,-9.125193,4.939721,-6.506988,-2.077637,9.656077,2.446904,-7.949682,1.227414,-9.914385,4.203527,1.381048,4.175444,8.316408,-5.215882,6.440377,0.230339,-7.176997,4.582128,-7.495475,-1.912544,4.992453,-4.115779,-0.886846,-5.607288,8.764363,-8.056551,2.224807,0.940470,-5.017188,5.462977,4.073226,1.157383,-1.276636,-9.477000,9.100753,-6.746835,7.702998,-5.460347,0.399695,-1.740065,-0.662354,2.410341,9.197810,2.928588,-7.733585,2.398466,1.585659,-0.160221,3.836585,-1.904542,8.984543,5.060955,-3.652976,-5.330795,6.698938,-8.494923,-1.118158,4.844138,-4.703970,2.323441,-0.367895,0.184706,2.599315,9.819300,-9.698554,9.736123,-7.886699,-6.350205,5.820488,-8.372886,-7.878958,-8.531163,3.468290,-9.567989,-0.420069,-8.726397,-3.281645,-8.385595,7.676686,-8.538125,-7.568956,9.695461,1.064979,2.722846,7.876461,1.750579,-1.397297,-9.014193,4.665067,-9.920754,-1.705562,-2.293771,-0.615336,-4.971551,-5.802935,4.755256,9.755620,-5.906924,6.548565,1.554510,6.573672,-9.308674,-4.825115,8.117361,8.333177,-0.703524,6.626639,-0.825624,1.980616,2.685544,4.013557,-9.622075,-0.400712,4.117487,-1.557158,-2.576660,5.478458,-1.509531,3.759718,-3.000103,7.509228,-2.892681,2.938515,-0.060516,5.687440,2.723682,-2.766594,8.314712,-0.666144,-3.939369,4.071811,-9.848888,5.372187,0.955569,5.497828,4.144816,-1.598870,3.266692,-2.154342,-5.176405,5.669658,9.409681,-9.925676,-6.769695,1.400578,8.546942,9.941088,-8.104917,-1.833911,6.342678,7.330603,-2.493612,-4.637539,3.950392,4.707655,8.727844,6.784472,3.396616,1.938160,-2.217632,-9.730411,-7.690281,-8.336284,1.767019,-9.507372,-5.254225,0.817659,3.583499,-7.034590,3.971179,-6.727063,-2.131950,1.657211,9.963073,-9.241257,4.979049,-6.640830,-0.448747,-6.836332,9.726815,1.665827,-1.060827,0.563295,-5.325286,0.536091,5.610887,-6.187705,7.951341,3.303518,4.485891,1.790977,0.837958,-2.993024,-2.788966,4.548839,1.572744,7.078846,1.130695,5.610493,-6.235025,2.583630,-4.498611,3.527351,6.066289,0.099114,-8.796286,-7.011071,-0.093278,-0.502241,0.413022,-8.911931,-6.136007,7.358252,-7.419241,1.675853,5.657364,9.790836,0.142273,2.466659,9.810031,2.094361,8.970075,5.660078,-1.700887,-4.841867,4.389243,-3.201445,-5.026381,-8.619250,-5.722913,7.687486,-6.613545,6.951809,-5.904971,7.470200,1.092695,7.525142,-4.362743,-7.886513,-7.055774,-7.423152,-6.467671,5.765107,-0.970567,7.646493,-9.284620,-7.946924,1.842381,-6.400384,1.399130,-6.473380,-6.619374,4.181860,-1.294185,7.089756,5.282025,9.929404,-5.410677,-2.524688,-1.312775,1.835371,9.574993,1.585755,6.824645,-7.306278,1.639981,-2.810918,-2.625437,-2.431830,0.568130,-2.163030,-5.298717,-8.547345,-7.785945,9.759375,6.492290,8.115798,7.433128,8.405101,-3.268122,2.567022,-3.226503,9.722448,0.363920,-8.698287,4.912386,1.634387,-1.553468,-5.210864,3.546985,4.865368,-9.108484,5.294494,3.218701,3.457779,-8.072838,-7.908252,-3.929145,5.949996,1.826319,-4.659832,-9.878931,-6.753463,-3.092240,-4.703423,4.813677,-4.056815,-7.931715,8.203314,-9.170312,-2.214956,8.596345,-3.131189,-5.680375,2.944463,2.415665,4.443567,-2.328533,-0.152301,-2.879465,-7.365042,-4.093969,-8.468483,-9.296058,-2.104119,-4.516188,4.254548,2.707313,7.841155,4.399630,-3.865387,-1.797846,9.983639,4.900308,5.786880,-4.109882,1.896639,-4.370159,4.603705,1.050523,-8.725064,-3.906129,2.602582,8.167501,-3.529930,-8.077451,1.352308,-1.425973,4.356410,-6.681488,6.378020,-0.970516,5.014818,-3.538901,2.471703,-5.847330,5.056424,8.208841,1.087268,4.037488,1.986910,-2.646190,6.005262,4.408287,-7.591133,2.303217,-0.018008,4.067136,5.397914,7.817274,4.784924,-0.519928,-6.484405,-1.789611,-3.534725,0.790145,1.146694,-0.648143,-3.095857,3.288004,6.228517,1.094669,-9.166078,8.245108,-1.388390,-4.625589,-0.088618,0.019347],[-6.325371,-7.988079,4.551888,-2.209548,9.880158,3.798399,3.824354,9.594759,-2.718825,-1.547315,4.398930,-3.980165,-5.633443,4.328957,5.323854,-9.835139,-3.045792,-2.344985,-0.366685,-5.075833,5.168699,-8.608521,-4.119044,3.482652,-8.265921,3.417229,0.978183,1.154077,-3.379239,-5.740750,7.311444,5.252296,-6.980606,-5.158198,8.953551,-1.534693,-3.006877,5.627667,-5.380829,0.286279,-7.653139,-7.431356,-1.195230,-0.830371,9.141522,-1.828957,4.173378,-8.745384,5.800985,-8.947106,-1.411607,5.345142,2.545721,1.067439,3.411525,-2.230690,-4.599738,6.598249,9.924962,9.523967,8.067154,4.571607,-7.273118,-1.404908,-8.032787,-1.654181,3.298421,-6.562822,-7.509311,4.385815,-8.577262,6.093782,-4.424246,-6.549080,-2.986376,-8.786005,1.782377,-0.518134,-1.767827,-5.240911,-6.549941,4.014539,-4.627167,-8.323966,9.945852,0.620851,-1.889219,-8.205918,3.489000,-2.710854,5.639472,9.201529,-5.729970,-5.901853,-3.623695,-0.414766,1.014842,1.213165,8.083349,-7.280410,0.246492,-9.930068,-1.303801,-8.560153,2.519287,-4.771889,-5.256500,-0.785532,5.890409,8.841674,8.060855,-4.225968,2.353197,-9.856463,-3.159054,8.191441,-6.180936,0.433534,1.589318,0.754793,-1.008224,3.517627,1.357747,7.764257,-9.290054,6.488772,-7.549823,-6.276312,8.729376,-7.687170,2.306574,5.909562,-8.463930,-7.965596,-9.837273,-1.796868,8.740229,9.556045,6.219281,-3.463815,0.539632,9.573672,2.301263,8.176681,8.710974,-2.995805,-9.016164,-6.316305,-7.202397,-2.161742,-7.703770,3.127222,-7.698350,9.528746,-6.770810,1.547307,6.784902,5.359099,-2.267145,2.966807,2.761756,-0.993986,1.354885,-4.900548,0.465007,-6.355572,4.899732,-4.479183,6.782852,-0.660542,9.372497,6.188444,-2.926448,5.389039,-9.186973,-4.325842,8.632351,8.625005,-4.603857,-3.229479,-5.637104,1.599715,8.454712,9.991884,6.275621,-4.400408,6.230516,3.762953,-3.466156,-4.064019,1.991914,-4.335086,8.388558,1.402340,2.786359,1.066711,3.759221,-2.043714,-6.354110,5.167778,7.901284,-4.138164,1.189798,-5.112860,8.312336,-8.805980,-8.915501,1.631130,-7.628523,9.962987,-3.171097,9.372007,5.062856,-6.319542,1.911271,-5.311014,3.349295,4.228968,-7.094015,2.008574,-0.986208,3.818493,-9.769566,-5.437287,4.066688,0.001857,8.669654,8.887063,-5.714852,-8.121656,5.847018,-7.228610,-1.939593,-3.074847,3.285872,-9.163543,1.143290,-9.944037,-5.897905,8.131973,-5.811583,8.556164,2.314874,1.703648,4.917881,-6.969239,-1.319864,4.018446,-7.375043,0.497615,5.801812,-6.223121,0.282864,2.049382,8.789518,-8.132196,9.590922,8.754596,-4.838283,-8.734901,9.481296,0.359493,2.492400,-8.441755,-0.100856,7.188617,4.643796,-2.234590,1.263242,-5.930541,-3.346186,-5.849607,-2.191585,9.357019,-5.977094,-3.068081,-8.977417,1.556501,0.045658,5.465373,-2.376878,0.610518,-6.962436,-7.532931,2.022816,7.162484,2.410179,0.962866,2.014534,1.028146,-2.863209,7.442599,7.339236,-7.854902,-7.381089,-8.831441,2.132853,-9.353114,8.683071,8.754064,0.280286,9.162373,-7.239957,1.188822,5.876878,-4.226004,-6.387714,-6.782369,-1.383513,-8.109770,-2.492651,8.443971,4.535755,-9.116750,6.179096,8.581622,-2.617525,7.633558,-0.192645,-1.541726,6.776887,1.821629,9.546299,1.350235,3.224374,-2.204899,-0.665006,5.314527,-3.322134,7.797855,0.599627,-8.034623,5.789088,-9.872320,-6.698237,1.617893,0.239341,-0.655438,-7.882689,9.708721,9.919079,1.169352,1.708649,6.722456,-3.242511,4.234150,-4.624546,0.013272,-3.608341,7.051296,3.500368,-8.144511,1.510470,7.183534,8.005867,8.454458,-3.316646,-2.463551,5.669470,8.787533,-0.149211,6.931288,7.790627,-3.558786,4.820215,-0.459976,-7.368646,0.561247,5.866168,7.838296,3.991383,-4.847603,-9.967002,-9.833957,-1.456937,1.665849,-8.930017,2.371564,-7.968474,8.866736,3.749105,-4.453862,9.408296,-6.939067,-0.457254,1.177167,-4.022900,6.009971,-6.896878,0.394933,-4.542966,-0.164175,6.589338,-9.398585,6.504062,7.134901,5.052281,2.921076,-4.524686,-7.518940,6.857224,-9.211755,0.760591,-7.550378,7.814774,-9.705756,5.005453,8.073084,6.409315,-9.286559,0.158852,3.929987,0.724487,4.751954,-4.558294,-9.615405,8.656932,-0.426686,-0.164449,6.224482,-3.980975,2.366632,-2.847099,-3.924530,-5.211221,-2.642510,5.362366,8.527235,-9.190239,-1.092942,-2.050915,5.974074,3.531287,-8.118793,-3.586804,-9.470823,6.807455,-8.478408,-7.323334,1.824878,1.391934,-8.411861,-3.515849,3.582196,6.167499,4.424565,-2.888624,7.112719,-4.475528,-1.550480,7.668194,0.737633,-2.647439,-3.729182,9.572755,-5.018328,-2.289468,8.642342,-7.110627,3.665997,-1.536832,5.298702,9.918913,-5.267598,-0.736434,5.642585,9.404912,-9.558859,-6.096020,-6.779441,0.516559,6.317138,-3.248030,-9.752997,9.265762,-7.504855,-5.719816,7.228568,-2.895088,-0.798545,-8.137956,5.235738,-0.576750,3.691228,-6.631819,-1.143022,-4.009100,9.905941,-6.222043,8.873622,-5.582744,0.769278,2.865047,-3.615561,1.409146,-9.138166,-0.642742,9.373854,-3.752305,-9.123314,4.346095,-1.668953,-2.871434,-8.118324,3.272462,-7.990101,5.449440,-6.031832,-9.369061,-8.575218,3.679211,2.847013,-7.135226,9.472503,-8.089325,-6.236006,-9.349101,2.534537,-3.329606,-4.507049,-3.676054,0.345449,-8.930410,-5.759615,7.947845,-0.427074,-3.087142,-2.804605,1.287038,9.256061,2.274855,1.919084,-8.548146,-7.982891,-7.577678,-3.311558,-2.929610,-6.172945,3.915143,3.428533,8.892913,-6.327366,-0.114721,2.855745,-5.498169,7.504379,-2.018994,0.308854,6.413239,1.437371,-1.156697,-2.347324,-3.131053,-9.492329,-5.748465,-6.140591,2.666677,5.772211,4.418640,0.096525,9.096631,-6.616226,8.942679,-3.860386,6.018690,-8.583141,0.337454,-7.055563,2.275450,7.642496,5.170573,-5.063975,-0.818156,-5.718623,-0.258388,3.005313,-9.471914,2.365563,-4.116412,-8.479862,7.823085,3.886510,-9.003980,-7.864057,-5.981088,1.433131,7.923442,1.346209,9.709335,-3.022811,9.846744,8.863851,5.482909,-3.365470,-6.803425,1.925349,5.766503,-0.309719,9.332003,-2.420526,-4.723947,3.872868,5.891956,-6.700887,-6.937785,-3.760597,-5.940210,9.290492,-3.021687,9.065667,-3.616099,-9.853932,-0.741089,4.039356,-1.336970,0.481804,6.282790,-7.435621,2.230205,5.550522,3.716898,-7.489954,8.882760,4.163471,5.444979,-2.270879,-5.108246,9.816932,5.006943,-3.232866,-3.951134,7.921734,-9.007974,-5.493801,-7.456103,6.531780,5.225790,2.657314,7.517372,-3.360503],[-5.102508,-2.300837,-8.235250,7.162358,2.840731,7.854125,4.728107,9.174134,-9.694510,-2.190940,-0.656749,2.717497,7.845603,-2.412580,0.670858,8.848521,-2.267861,-4.372833,5.435127,-9.922508,2.535502,7.747198,-2.796963,-8.971100,-9.035983,7.668718,-9.185534,6.964954,-2.914058,-6.463386,-1.221084,0.917049,-7.938523,8.042530,9.519182,-6.787239,6.293848,5.152374,-8.224079,8.184869,-1.589597,1.806761,1.643285,-8.325726,9.999622,5.610132,-5.226337,-5.438859,9.675502,8.284332,6.863392,9.883643,3.607245,9.347523,1.592279,-6.055191,9.572410,-7.645673,-5.842453,-2.065543,-9.323980,-5.088594,-1.311985,6.675969,-6.839189,-2.802107,-1.846281,7.443151,0.522092,8.460152,8.735776,-2.558097,-3.973116,2.424407,-0.490905,-3.502443,2.671662,8.930524,0.890458,7.690575,8.125423,8.507400,-6.505327,0.848962,2.226719,-5.443707,3.299619,-4.805489,4.067877,-0.874443,9.564200,-4.092867,3.734335,8.651381,-9.706065,6.834501,-5.137214,7.051409,5.126750,-0.724966,-2.300602,4.392927,-4.885360,3.907375,6.613236,3.541802,-0.822307,0.009720,3.461394,-3.571461,-3.753047,-5.347065,-0.767704,2.514067,-6.367191,1.216731,-8.633707,-7.972419,-7.017403,-6.436788,-6.256498,-9.234534,-3.162492,-5.642099,-0.979591,1.441200,-0.734197,-8.509295,-3.332366,-2.608356,4.895539,4.864093,-0.772732,-6.157638,7.103234,-8.352159,-4.042626,-5.170419,7.725901,8.959611,1.518376,-5.051073,-7.476009,-0.088515,-4.689280,9.202940,-5.242374,9.008081,8.827670,3.081281,-4.404253,-0.243800,3.615718,9.879032,0.874709,-4.087628,-5.853566,9.830325,8.163630,9.965509,-6.021551,-6.831410,2.569578,-5.404760,7.002787,6.949285,3.520047,9.632465,-5.603312,1.062491,6.725914,-0.161172,-6.242141,-1.925614,3.490708,2.696005,-7.837771,7.659459,6.100945,-5.545646,0.388971,6.739106,1.244316,0.716310,1.103054,-9.326654,2.955476,-8.991630,-6.616015,7.279602,-1.091508,7.085729,-4.407590,-8.393548,-2.738806,2.351241,-6.798599,9.418223,0.992245,3.308737,1.146714,3.040514,-1.611093,8.592368,-6.135045,7.587268,3.631142,2.150051,9.888095,-2.558651,1.407543,9.333529,-2.426982,6.643770,-0.825195,-5.052040,-7.164719,-9.628490,-5.650969,4.486581,-9.728715,8.314551,-9.560328,-3.191386,3.612009,1.077399,-1.787992,-0.620747,4.261311,-2.119789,1.281146,-2.110853,-5.091904,-1.565965,-5.430063,1.053689,-1.209503,-5.969873,3.148870,-6.206865,8.370470,0.931039,8.727016,-5.461273,-5.700769,-8.085895,-9.547458,2.226046,7.704785,2.977760,-1.193821,-2.343419,6.784140,4.160739,1.825815,1.529641,5.013896,-3.321330,8.638609,-6.784766,5.146185,4.637575,8.533483,-9.441021,-7.569625,-4.263784,-3.624317,-4.017602,5.633067,9.539092,6.096742,-3.345405,2.541522,8.001768,9.073382,-7.526231,-9.105177,-4.424705,6.138974,-7.967455,-7.951538,-0.026763,-6.900868,1.353436,-6.823733,-7.289625,2.254320,-0.769085,-1.579540,0.967787,0.620359,-9.628184,5.589324,6.082822,-2.783768,7.829694,-6.991336,9.702879,-8.789178,5.119025,0.638921,-1.815208,-7.454911,-8.976944,5.629487,-4.699414,6.951604,-8.958802,-9.988186,3.638201,-9.993283,8.853417,-5.022423,6.468169,4.162592,6.171771,-0.970556,-1.310032,1.454188,7.126006,-9.535079,5.668818,3.980663,8.814334,-9.740330,-2.643299,6.570062,1.774214,-2.768432,-5.101394,5.153343,6.110826,5.352826,-2.103310,-4.433078,0.735369,-8.509267,-4.071157,0.485174,8.834590,8.074501,-1.610686,9.914545,-4.943694,-8.269061,-9.439744,3.205633,9.514536,1.876434,0.970707,-0.670011,-3.813467,7.322238,-8.332023,-7.485622,-1.980040,8.701419,-2.750760,2.190601,-3.896577,7.643148,8.044829,-0.242631,-2.049993,2.939421,7.231055,-5.834903,-7.373020,0.838549,-2.102947,-1.960138,3.138896,8.801034,-7.770483,-1.004393,-1.940689,5.108450,-5.454731,9.467526,3.456674,-4.544208,-7.885845,1.783210,7.516102,6.263500,-2.513863,-5.321436,6.564508,-9.175568,-0.412222,-8.843868,-7.140890,6.859964,-0.041909,5.920483,0.904728,-6.161289,6.760383,-4.724448,-2.857474,-1.264978,0.604468,-3.972931,2.568238,-1.093440,-8.746057,-6.300590,4.648938,3.592568,-5.159211,4.627859,5.199955,4.200712,2.095655,7.546633,4.230902,9.697677,-1.407669,8.908949,-8.115308,-8.982573,0.621583,0.751731,-7.655146,-1.265021,-9.058868,-4.062607,6.475503,-4.932120,3.924968,5.805134,8.367900,9.481442,-5.286103,8.551152,-1.633698,7.810806,2.402728,-1.329250,-8.895889,-4.480635,2.158739,-6.480647,7.241757,0.235932,-4.066269,9.580493,6.716954,4.340129,-4.269607,-2.075576,-3.259435,-6.811763,2.321167,8.583799,0.307075,-1.419847,-7.438659,3.951784,2.021451,-6.273619,4.586357,3.242725,-3.021697,3.799646,-4.607246,-0.633726,9.174033,-8.079593,7.745152,-0.453431,1.517602,8.072478,8.353621,6.061825,-7.182391,-6.613393,-1.842074,-2.694754,2.299573,4.287817,-1.567184,-6.915708,-4.121583,-8.861392,6.130562,-4.399912,2.807769,-3.226565,-6.134468,8.948417,-1.263896,1.541766,9.696836,5.013021,9.349712,-8.760556,-6.041304,0.354235,6.011008,1.709402,4.705271,-7.652362,1.450886,1.740980,-3.944533,-3.265204,1.455337,4.467286,-2.163581,5.694871,4.134439,5.466131,-7.652228,-3.099274,-7.339803,-2.596580,5.075559,-5.212185,-9.841277,5.928466,-8.356387,8.979364,1.097568,-3.132269,8.547269,3.676867,-0.361474,0.125241,4.726228,-2.445513,9.591400,2.025758,9.900269,4.262502,-4.534588,4.769028,9.232141,-1.452940,6.704210,-6.065643,-5.522704,-4.105174,-3.128902,3.377461,3.563664,5.846130,2.612250,-3.564540,-0.584530,-1.002207,-5.598817,6.679456,-6.313279,-6.501543,-4.936009,-2.095578,-8.729442,5.902367,-3.596142,-8.818751,1.422326,-3.022994,4.620051,0.402497,7.554160,-5.992328,5.640984,9.120811,1.086043,-7.394761,-2.666113,-0.922336,3.788604,4.585565,-8.455331,8.467771,2.024503,-6.938108,-1.843044,-8.434409,5.134360,4.576635,-1.891724,-3.421791,-5.877464,2.791453,-6.435434,5.275929,-3.262499,9.191096,2.675870,-8.292498,7.472522,5.795668,-8.535756,6.209693,-1.924776,5.421475,3.836749,-4.240423,-9.654720,-3.107994,5.077219,-7.654985,-5.173640,-6.345844,-6.300555,-2.486440,-2.085815,-8.188629,1.904633,-2.104848,-6.623329,-6.179823,-9.019457,-5.484946,-4.297878,2.223388,-3.368328,7.474451,7.277670,-3.901374,-3.843373,6.075676,-2.798187,-3.343720,5.366136,4.429775,-8.493531,7.995697,-4.844625,7.275717,-5.202766,-7.370131,-3.913814,9.146400,-5.346898,4.958610,-3.277926]], dtype = "float64")#candidate|1705|(4, 640)|const|float64
call_1704 = func_1227_call(relay.reshape(const_1705.astype('float64'), [16, 10, 16]))
call_1706 = func_1227_call(relay.reshape(const_1705.astype('float64'), [16, 10, 16]))
output = relay.Tuple([call_1652,call_1660,const_1661,const_1662,call_1704,const_1705,])
output2 = relay.Tuple([call_1653,call_1663,const_1661,const_1662,call_1706,const_1705,])
func_1709 = relay.Function([], output)
mod['func_1709'] = func_1709
mod = relay.transform.InferType()(mod)
mutated_mod['func_1709'] = func_1709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1709_call = mutated_mod.get_global_var('func_1709')
call_1710 = func_1709_call()
output = call_1710
func_1711 = relay.Function([], output)
mutated_mod['func_1711'] = func_1711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_1712 = func_1577_call()
call_1713 = func_1577_call()
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_1747 = func_1577_call()
call_1748 = func_1577_call()
output = relay.Tuple([call_1712,call_1747,])
output2 = relay.Tuple([call_1713,call_1748,])
func_1756 = relay.Function([], output)
mod['func_1756'] = func_1756
mod = relay.transform.InferType()(mod)
output = func_1756()
func_1757 = relay.Function([], output)
mutated_mod['func_1757'] = func_1757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1819 = relay.var("var_1819", dtype = "uint16", shape = ())#candidate|1819|()|var|uint16
var_1820 = relay.var("var_1820", dtype = "uint16", shape = (1, 2, 11))#candidate|1820|(1, 2, 11)|var|uint16
bop_1821 = relay.right_shift(var_1819.astype('uint16'), var_1820.astype('uint16')) # shape=(1, 2, 11)
func_374_call = mod.get_global_var('func_374')
func_378_call = mutated_mod.get_global_var('func_378')
var_1825 = relay.var("var_1825", dtype = "float32", shape = (126,))#candidate|1825|(126,)|var|float32
const_1826 = relay.const([1.865359,9.968272,9.970962,2.379499,7.533525,-7.772669,-8.621898,-5.363573,-8.265680,-9.826203,9.136271,-7.795342,-7.672605,9.228372,-1.810553,-6.919664,2.899910,-7.949159,7.737306,-7.784955,1.273287,3.695915,-9.468348,-3.686092,8.396121,-5.804085,5.740969,-6.296205,-6.621504,9.278039,0.503674,4.617678,5.676469,9.770240,3.511433,-2.581735,-0.694251,-8.188665,7.681006,-1.811962,7.258332,0.751812,9.182634,7.946946,8.633542,-6.913056,-3.277297,-1.027313,5.867979,-1.977969,8.680443,6.515465,-1.348280,-7.780896,4.419423,-7.329358,1.837929,3.691836,-9.583843,3.200192,3.214448,-2.744536,2.177309,9.834743,-0.393897,0.577638,-3.065185,-8.089002,0.749654,-5.534869,4.823824,0.143113,7.395831,3.279340,4.061491,8.591673,-6.233689,-8.128381,-9.246357,8.924747,5.292931,-2.858292,7.382753,0.651664,-9.092038,3.473455,-6.926225,-1.966961,7.265454,7.937119,-7.152358,9.587148,-8.071043,-4.599570,-3.875604,-1.305265,9.350342,6.352467,4.064189,8.233399,0.127166,7.696514,7.282582,1.901983,5.601399,-9.808514,0.685217,-3.946312,4.689149,7.327879,-5.958576,-0.458048,-9.533089,8.940098,-6.818698,6.557164,7.583837,0.396960,5.489541,-9.501432,-8.723067,-7.051858,-1.837241,3.894661,-3.941894,6.534002,-2.475364,-6.682059,-3.840068,-9.804114,-1.988220,-0.197440,-1.507061,-6.377589,-6.142237,-4.736818,5.144202,-1.072085,-8.961123,-9.867165,-1.495160,5.284858,4.424899,-6.959138,0.809149,-1.441992,-6.487268,-6.379116,-9.871376,-8.316984,6.577557,3.052470,-3.240229,-8.087505,-0.671848,3.040082,1.213625,5.986792,-0.368698,-7.613666,0.087859,2.802536,7.294184,-2.546354,-5.134528,-9.623789,-7.762878,0.513736,6.107244,6.741609,-0.147721,8.884133,6.357713,-7.639897,-1.343576,-8.701033,9.297889,1.864315,2.834518,-6.909403,4.428278,5.473475,5.312003,-6.392666,-8.845198,-1.608123,-7.874790,-3.789331,-4.634738,0.301797,7.546483,-0.849259,6.433824,7.331229,-5.847596,-5.631285,-8.035883,8.937803,-2.188256,9.851593,3.523430,3.741814,3.443830,0.194728,-1.113391,-0.036760,-1.487348,-7.136505,-2.196416,-7.612388,-1.143223,-3.391693,-8.000825,-3.519773,1.222849,-0.363988,1.625166,-5.625258,1.066269,-6.749893,-7.832152,-6.846530,-4.224676,-2.104277,-7.969681,2.457870,-5.638848,-3.444752,4.647796,5.220811,-7.258112,9.208964,-6.554433,-9.097357,7.454367,9.961163,5.346656,6.283668,9.277928,-2.520116,-6.031775,-0.300683,-6.050102,-9.349120,1.211532,-0.917258,4.307794,7.808906,-7.272424,0.727149,-6.574252,6.137111,-7.080377,0.633149,4.339858,-7.490407,0.922941,-9.453565,0.349925,1.487783,-8.480483,-5.853987,3.385759,4.197606,5.948204,-3.206252,-8.819811,8.943298,-8.406642,-0.895830,-7.570123,9.979678,6.192922,2.600455,-6.242839,5.243829,7.938886,-4.617649,0.674475,-5.085962,0.233485,-6.611965,-9.990104,-4.827079,4.900974,-9.310498,8.578023,8.467716,0.904875,8.330946,-7.826915,8.412239,-2.034386,-4.005512,4.177065,-5.166110,5.106701,-9.014190,-8.938801,-6.429855,1.414328,-4.924680,5.407449,3.619358,-6.618295,-6.906362,7.183199,-7.738245,-5.809327,0.700740,6.612340,-6.801483,3.756013,4.389435,3.039558,0.053435,-5.992297,-3.018460,5.691704,9.710736,-2.960315,-9.864801,7.572919,-5.775417,-2.149195,0.406165,0.655174,-7.760048,2.116093,2.854980,-1.422193,6.842748,-2.100695,-9.103878,-5.435045,6.193042], dtype = "float64")#candidate|1826|(336,)|const|float64
call_1824 = relay.TupleGetItem(func_374_call(relay.reshape(var_1825.astype('float32'), [9, 14]), relay.reshape(const_1826.astype('float64'), [336,]), ), 4)
call_1827 = relay.TupleGetItem(func_378_call(relay.reshape(var_1825.astype('float32'), [9, 14]), relay.reshape(const_1826.astype('float64'), [336,]), ), 4)
var_1831 = relay.var("var_1831", dtype = "uint16", shape = (6, 2, 11))#candidate|1831|(6, 2, 11)|var|uint16
bop_1832 = relay.less(bop_1821.astype('bool'), var_1831.astype('bool')) # shape=(6, 2, 11)
func_1411_call = mod.get_global_var('func_1411')
func_1415_call = mutated_mod.get_global_var('func_1415')
const_1853 = relay.const([[1,10,-4,3,7,5,-6,-1,-6,-10,-1,5,10,2,3,3,7,-1,4,-2,-2,9,3,4,8,-6,-1,-8,2,-8,-9,1,4,8,6,1,9,7,-1,-3,-7,7,-9,-8,5,6,-10,-2,8,4,-10,-5,4,-10,7,1,2,3,-5,4,8,3,-8,-2,-5,-4,1,3,-3,8,6,-3,9,4,6,3,-8,4,1,4,-2,2,-10,-7,-8,1,6,4,10,9,-4,2,7,9,1,8,6,9,5,-6,-2,-4,-1,-4,-6,6,3,3,-5,-2,10,2,-7,9,-6,4,-4,-6,7,-7,-3,5,3,10,10,4,9,5,6,10,1,-10,2,-9,8,-4,-8,-10,6,-9,-9,6,9,-8,5,7,-3,10,-4,6,4,-6,-10,-5,6,5,-9,7,-4,2,-2,7,5,1,-8,-5,1,-7,8,9,10,-1,-5,-8,1,8,1,1,3,-9,-10,-5,4,2,-8,5,-3,8,5,6,-7,3,10,-6,-5,5,-7,-4,2,4,5,7,-8,-7,-10,10,7,-5,-5,-1,-6,-4,5,-6,4,-9,9,-8,-1,-7,7,-8,1,1,-6,4,9,7,-8,2,-2,2,9,6,6,-10,-3,9,-4,7,5,4,-1,-7,-5,-10,4,-6,-3,-10,10,-2,-10,6,-3,6,6,1,4,-8,-9,-5,10,5,-6,2,6,-8,9,2,6,-10,-1,-2,9,3,-8,-2,-10,4,3,-1,-4,-9,4,4,1,-4,5,9,-8,5,-1,-6,5,6,-10,8,9,-8,9,2,-6,-4,4,8,-6,-8,9,7,-6,3,-3,1,-8,-4,10,9,-4,-8,8,10,10,-2,-2,4,-3,5,8,7,-2,5,7,-10,10,-9,6,4,-7,-5,-5,-6,-6,6,6,1,4,-2,3,4,-9,-2,2,1,2,6,-6,8,5,7,-7,1,-6,2,4,3,-9,-10,-10,-8,-10,-10,1,8,9,-7,-4,8,3,9,8,-1,-6,-7,4,9,-4,-10,-4,-10,4,9,-8,-7,-7,-8,-10,-3,2,5,7,-1,10,5,10,8,3,-9,4,-1,6,-7,8,5,2,-7,-3,-10,-10,8,2,-3,3,5,-1,2,6,4,-1,-4,-6,-10,1,-3,-8,-2,-6,3,-8,9,-5,-5,-10,4,5,-4,3,1,5,7,-4,4,-4,9,7,1,9,-4,-4,-2,-8,-3,10,5,9,-9,-10,1,9,-6,-8,-8,-1,-7,1,-6,-6,2,-3,3,8,3,4,10,5,-2,2,-1,-4,-8,2,6,2,-5,-4,9,10,-9,-7,10,6,-7,3,1,-10,2,4,-9,-5,-5,1,-2,5,5,-2,-6,-8,9,4,-9,-9,-6,1,3,-10,-7,-10,1,-2,-9,-3,7,1,1,3,2,2,-9,3,-9,8,-5,-8,-6,-5,7,4,-7,7,10,1,4,-10,-4,-2,-6,-2,-1,-9,1,3,-10,-9,2,9,7,-6,1,5,8,2,-10,-7,3,9,8,1,9,-8,-7,4,5,7,3,5,9,-7,2,-1,10,10,-2,-7,-2,-3,-2,-4,-7,4,5,3,-7,-5,6,3,-6,5,3,-10,-9,-3,-9,9,-10,-8,-4,-8,-3,9,9,-7,-6,-4,4,-5,6,-3,7,-3,-5,-9,-3,-2,-2,-6,-5,-7,-5,4,-2,4,9,4,-1,2,-5,-7,-9,-5,-9,1,5,-5,-8,2,7,9,5,-3,-8]], dtype = "int64")#candidate|1853|(1, 660)|const|int64
call_1852 = func_1411_call(relay.reshape(const_1853.astype('int64'), [12, 5, 11]), relay.reshape(const_1853.astype('int64'), [12, 5, 11]), )
call_1854 = func_1411_call(relay.reshape(const_1853.astype('int64'), [12, 5, 11]), relay.reshape(const_1853.astype('int64'), [12, 5, 11]), )
output = relay.Tuple([call_1824,var_1825,const_1826,bop_1832,call_1852,const_1853,])
output2 = relay.Tuple([call_1827,var_1825,const_1826,bop_1832,call_1854,const_1853,])
func_1857 = relay.Function([var_1819,var_1820,var_1825,var_1831,], output)
mod['func_1857'] = func_1857
mod = relay.transform.InferType()(mod)
var_1858 = relay.var("var_1858", dtype = "uint16", shape = ())#candidate|1858|()|var|uint16
var_1859 = relay.var("var_1859", dtype = "uint16", shape = (1, 2, 11))#candidate|1859|(1, 2, 11)|var|uint16
var_1860 = relay.var("var_1860", dtype = "float32", shape = (126,))#candidate|1860|(126,)|var|float32
var_1861 = relay.var("var_1861", dtype = "uint16", shape = (6, 2, 11))#candidate|1861|(6, 2, 11)|var|uint16
output = func_1857(var_1858,var_1859,var_1860,var_1861,)
func_1862 = relay.Function([var_1858,var_1859,var_1860,var_1861,], output)
mutated_mod['func_1862'] = func_1862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1588_call = mod.get_global_var('func_1588')
func_1589_call = mutated_mod.get_global_var('func_1589')
call_1882 = relay.TupleGetItem(func_1588_call(), 0)
call_1883 = relay.TupleGetItem(func_1589_call(), 0)
output = call_1882
output2 = call_1883
func_1900 = relay.Function([], output)
mod['func_1900'] = func_1900
mod = relay.transform.InferType()(mod)
output = func_1900()
func_1901 = relay.Function([], output)
mutated_mod['func_1901'] = func_1901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mod.get_global_var('func_1900')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_1915 = func_1900_call()
call_1916 = func_1900_call()
func_748_call = mod.get_global_var('func_748')
func_752_call = mutated_mod.get_global_var('func_752')
var_1920 = relay.var("var_1920", dtype = "float64", shape = (1680,))#candidate|1920|(1680,)|var|float64
var_1921 = relay.var("var_1921", dtype = "float64", shape = (1, 336))#candidate|1921|(1, 336)|var|float64
call_1919 = relay.TupleGetItem(func_748_call(relay.reshape(var_1920.astype('float64'), [7, 16, 15]), relay.reshape(var_1921.astype('float64'), [336,]), ), 3)
call_1922 = relay.TupleGetItem(func_752_call(relay.reshape(var_1920.astype('float64'), [7, 16, 15]), relay.reshape(var_1921.astype('float64'), [336,]), ), 3)
var_1941 = relay.var("var_1941", dtype = "float64", shape = (11, 336))#candidate|1941|(11, 336)|var|float64
bop_1942 = relay.less(var_1921.astype('bool'), var_1941.astype('bool')) # shape=(11, 336)
var_1961 = relay.var("var_1961", dtype = "bool", shape = (11, 336))#candidate|1961|(11, 336)|var|bool
bop_1962 = relay.right_shift(bop_1942.astype('int64'), relay.reshape(var_1961.astype('int64'), relay.shape_of(bop_1942))) # shape=(11, 336)
output = relay.Tuple([call_1915,call_1919,var_1920,bop_1962,])
output2 = relay.Tuple([call_1916,call_1922,var_1920,bop_1962,])
func_1969 = relay.Function([var_1920,var_1921,var_1941,var_1961,], output)
mod['func_1969'] = func_1969
mod = relay.transform.InferType()(mod)
var_1970 = relay.var("var_1970", dtype = "float64", shape = (1680,))#candidate|1970|(1680,)|var|float64
var_1971 = relay.var("var_1971", dtype = "float64", shape = (1, 336))#candidate|1971|(1, 336)|var|float64
var_1972 = relay.var("var_1972", dtype = "float64", shape = (11, 336))#candidate|1972|(11, 336)|var|float64
var_1973 = relay.var("var_1973", dtype = "bool", shape = (11, 336))#candidate|1973|(11, 336)|var|bool
output = func_1969(var_1970,var_1971,var_1972,var_1973,)
func_1974 = relay.Function([var_1970,var_1971,var_1972,var_1973,], output)
mutated_mod['func_1974'] = func_1974
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2243 = relay.const([[[-7.248388,5.755628,-8.453354,-6.334256,-6.271994,4.940530,-0.063520,9.152342,2.407891,-1.915338,-5.791057,2.921894,8.302935,6.572694,-5.380243],[9.091610,4.242793,6.573943,4.365365,-9.827601,8.983928,0.572469,2.363951,-6.186786,6.504905,9.946135,-8.559060,9.417043,-4.646602,-9.763820],[1.909213,-3.588469,-2.458508,-1.433397,2.712565,5.462509,-5.093595,8.992246,-9.810765,-5.087520,-3.086306,5.695199,-5.308978,-7.677540,9.986426],[8.854441,0.666276,7.060520,-4.518140,8.821131,-4.529181,-8.230032,4.022128,9.706796,6.475105,-2.127066,9.470004,-4.019048,-6.497209,0.622184],[4.900672,-2.352877,-7.974341,8.166710,4.237750,-3.926932,9.233162,8.223455,-1.555962,-0.551583,-0.494199,-6.887725,-7.623177,-9.288586,3.874540],[-7.875525,-6.795130,0.156387,-9.015658,3.262968,-9.668929,-5.495432,-6.653150,-4.647334,-3.230887,9.338590,4.260963,-3.604409,-1.379931,-8.572116],[-5.803740,1.329362,8.594414,7.164602,7.640070,-3.114121,8.136615,0.112699,-4.682321,-7.751110,3.825386,6.297510,0.316065,-0.038389,-3.831599],[-6.518740,-4.097642,-8.790983,-7.210764,3.699218,-5.499633,1.902011,-7.648047,-2.530529,4.198167,4.103853,-2.218439,6.399587,3.612820,1.878932],[8.287625,-8.662901,2.989368,7.736898,8.408404,5.761434,-2.913995,9.635746,-7.037269,3.442347,-0.848591,-6.016113,-5.103974,3.953517,5.617964],[4.319310,-8.953484,-1.312806,-3.898723,7.748401,9.623934,-9.790420,-7.087743,-4.978344,3.989345,-7.333549,9.354541,-3.618069,-4.056962,3.351145],[-7.000162,-2.776924,-7.315424,0.843439,8.113608,-3.353519,0.493836,-9.963688,-4.252344,-4.154028,8.651633,-1.086055,5.681416,-9.542384,-9.192225],[-4.198800,-0.824082,2.398170,9.138871,-9.657732,9.948264,7.740169,9.999427,-2.241261,4.819745,9.395800,0.872261,7.628662,-3.257991,5.460366],[8.652283,7.924888,-9.848679,-4.385489,1.908106,-2.883060,-1.952476,-8.868999,-6.864602,0.122148,1.641179,-2.269222,-0.652219,-6.945057,3.917485],[4.867488,0.494002,-4.205011,7.119609,8.249984,0.310141,-7.274308,-3.703126,8.405659,2.888738,-9.863525,8.893099,-7.079517,-3.616442,-7.524024],[-9.994410,-3.053308,5.419264,8.090273,7.429959,5.084026,1.641571,-7.927378,-6.148265,-6.058564,7.478392,0.467441,3.358935,-5.265308,-3.349529],[1.404958,8.503338,-1.067166,-8.224483,3.719845,-7.068687,2.093675,-1.320624,3.530420,8.207333,1.165819,-2.853468,-2.276848,-1.863268,4.713685]],[[3.649621,8.085385,-9.537094,5.359138,9.803035,2.033366,-3.266416,4.300068,-9.820210,2.362187,-1.503453,-2.738981,2.026233,-7.154729,-7.072964],[-0.858165,-1.059100,-4.486400,5.870377,-0.677334,-5.245882,7.160321,-9.113335,-9.354716,4.537065,-9.336746,-0.501767,7.571931,8.769514,6.668833],[1.381662,-9.184881,1.146133,4.776315,-6.184043,6.933583,2.467578,4.212212,-3.519405,-6.375965,-0.969447,6.977418,-0.788655,-4.870605,0.242647],[4.740851,-8.795733,-4.125747,-0.768330,-7.888940,3.553488,5.805381,-3.393002,-4.328056,-2.494636,0.330871,-3.385261,5.311067,3.971459,-9.130726],[6.453387,0.277922,5.480253,5.282379,6.757452,2.399374,-8.556042,2.734167,9.338978,8.014265,1.485206,-8.801192,7.980589,-8.028610,-0.556767],[3.317597,-7.039404,5.301959,4.595819,5.683320,-4.377943,7.601738,4.620424,-3.273739,7.886336,3.285796,-3.210437,-1.225233,6.161505,-5.718008],[9.511332,-9.243578,-4.656142,-3.840790,-8.094050,2.238942,-6.244207,8.614648,0.399943,-5.604401,4.595424,0.037304,-6.118272,-2.972962,-0.225938],[4.098618,-7.587934,4.246081,6.285012,-8.372109,9.867411,-4.693365,9.342847,-4.691961,0.349354,9.925339,-4.536400,-2.714620,-7.587822,-4.903532],[6.827530,-6.158990,6.049090,3.678122,9.598716,3.580895,0.344859,-4.449954,8.210676,4.003205,-3.846700,-0.366784,-9.287630,4.656170,9.509582],[4.697731,2.216684,-5.353810,-2.255615,7.122262,-0.856504,-4.809484,-4.467678,-0.031676,0.390524,8.149303,-1.726551,-2.925249,-5.255044,6.228730],[-9.328954,7.571089,-7.832356,-0.428532,7.937503,9.052918,-6.757606,8.554305,-3.678418,5.279558,1.944424,6.245777,-0.293955,-0.784310,4.947549],[-6.627977,0.163536,3.137540,2.125148,-2.781060,2.901394,-6.150891,0.283357,1.481372,2.506831,-1.987048,7.210759,-7.994432,3.056565,-1.362197],[-9.621371,-4.617296,-0.037894,-6.053367,-3.427352,-4.463381,-5.692819,9.638631,-0.138878,6.686978,3.542953,0.881216,-7.935584,-0.393207,-6.084978],[-8.986099,5.729718,-3.921550,4.361008,-5.203039,9.896322,1.515562,5.955088,-4.201848,7.889812,-4.504115,6.273736,1.446093,7.718306,7.952455],[3.007553,1.479533,5.832931,-6.562542,-9.186286,-1.166128,-1.129024,7.129588,-5.652576,3.566706,2.677749,3.080566,4.199435,-5.384461,-1.549114],[4.416458,-8.463205,6.776864,-6.286172,-3.257365,-0.317690,8.386186,-6.127500,-0.520548,-5.589737,6.182102,9.608039,-3.305019,6.302548,-8.300832]],[[-7.833439,7.677875,-7.733271,-2.727167,6.025174,4.497347,5.286066,-3.609460,1.572211,6.434104,-5.845972,3.396962,2.925048,0.656715,0.086304],[-3.928196,8.994013,-2.071195,-0.099466,-3.785957,6.244426,6.956608,-5.967696,-8.057732,4.436872,9.986274,-0.542137,1.235962,-5.226316,8.961219],[-8.704603,-6.228297,1.026478,0.765329,7.745993,3.074712,1.479744,-3.660274,-2.235916,0.144075,-5.032464,-3.927294,-1.252174,-4.571704,-6.694879],[-6.291899,7.675368,-8.813052,0.920899,0.787103,9.503667,1.686788,6.662803,7.806520,-3.419773,9.010244,6.292738,-2.737204,-9.356757,4.630107],[-0.531847,3.487980,-9.678059,-7.850475,-3.880043,-5.575636,0.936528,-8.024235,6.988594,-8.318224,0.520644,-4.685478,3.253445,-0.015297,5.697860],[-7.335143,4.188574,-4.991461,0.996072,0.701028,-2.129389,-5.952444,8.747453,-0.650057,-8.328412,-5.257052,1.744944,-4.491372,8.963308,-8.689050],[-5.535165,-5.913184,-1.707187,5.108021,-1.187727,4.686492,8.913567,-7.169871,9.239833,7.566002,4.424440,9.280095,1.795046,-0.895187,-4.804382],[9.825599,8.588559,-2.805882,-0.869003,-1.007970,-0.210148,0.872998,8.198812,-0.558224,5.742495,-9.541206,0.194275,3.397804,0.820044,-7.441950],[-2.624025,7.720672,9.440808,9.444202,5.487565,-9.160747,-3.534592,0.445899,2.454502,-8.817712,-9.859368,-2.214619,-6.118930,-0.472943,9.852274],[8.381387,-2.017150,8.966005,-5.105112,-3.228637,-2.124438,6.486818,-2.587136,-3.634639,-7.315361,-2.759661,1.093041,-1.014423,-3.715193,-2.367857],[9.759044,3.317709,-0.387984,-1.560936,-9.279554,-7.647093,4.647899,8.608626,1.645107,-5.812742,-0.407461,-5.051419,2.035318,6.441407,0.620651],[9.427217,1.671237,-1.946647,6.416414,-3.941008,9.660027,4.081633,-1.639205,6.453086,-3.514302,2.410790,-9.201114,3.896495,-2.275866,-7.436751],[-3.164382,6.580646,-3.382585,4.545087,-3.456616,1.021573,-9.360091,-2.795625,5.080453,-2.638190,8.302869,-0.836824,8.406415,2.830021,-9.496953],[0.285301,0.759933,-3.367529,3.421742,-2.498001,0.407537,0.545095,-4.829268,-3.075875,1.963306,9.667269,-5.021115,9.666952,9.205274,-4.465534],[-1.353604,-1.511993,-7.253354,9.514450,-3.901564,3.959083,-5.175636,-3.283388,-6.576592,-0.270235,3.836292,0.633089,-1.728570,-8.752594,0.751128],[6.640051,-4.246944,-8.418645,1.347423,-0.595548,0.821225,6.777519,3.817779,-5.867631,7.266724,7.152308,-8.939936,-2.321474,9.598981,9.923707]],[[0.450069,-3.492645,-9.321855,-8.228632,4.160858,-5.850481,-1.919540,-4.207318,4.985129,-6.263321,6.784664,3.231919,-1.260948,-4.752700,-5.584889],[-7.864234,9.675915,-2.665206,9.721481,0.457424,3.018585,4.973183,0.488978,5.331684,-1.701195,3.299839,-9.538891,-7.158996,3.858792,-1.882720],[-4.369435,9.108663,-0.108797,8.022582,1.866950,-2.085082,-3.317772,-5.335286,8.162335,-6.628345,6.756068,9.713420,2.751914,-4.156999,3.016358],[-0.485097,-8.953391,7.282655,0.804239,-6.499484,4.165807,-4.934722,0.132252,0.958158,-1.205003,-5.900793,-2.707571,6.805758,3.789346,-4.077904],[3.730831,-2.352838,-0.610596,-9.145793,0.943576,-0.470391,2.067919,-2.356298,-6.938190,8.670832,-6.767207,-1.712347,3.402460,-1.526231,-5.530276],[5.479113,0.804994,4.477615,2.204907,-8.101092,-3.304311,7.055752,9.307524,-2.695931,-1.083527,-9.144632,-4.163990,9.510336,0.141020,-0.262087],[-5.928563,0.281458,-3.497188,6.116802,-5.419843,-8.659188,8.720627,-1.049532,1.451265,-1.194818,-5.238295,-2.656303,7.307368,-0.003055,3.051670],[-9.812273,1.168978,-5.421576,-5.214162,9.666180,4.338036,-0.850447,-9.859930,2.562734,3.782942,9.193937,-6.407480,-1.496770,8.164585,-9.537771],[-4.158253,-3.571438,-0.667505,3.145607,-4.080145,0.309411,-9.676259,-4.764724,-2.959370,-2.078478,8.914607,6.968124,-6.173966,-6.278772,2.554497],[-2.314676,1.346534,5.437183,2.093263,4.101537,4.086986,7.593279,-0.715504,-1.655933,3.124788,-5.480762,-8.579587,8.576523,-1.948392,-3.169299],[-6.963317,4.127226,0.505357,-1.169247,7.353946,5.469523,-1.669316,-1.463423,-3.084347,-3.886946,8.641093,0.120271,-2.436779,-6.085534,-9.021765],[-9.947913,-3.244222,-3.929850,-8.003177,-0.571945,-1.768029,6.127505,1.698865,7.602334,-8.294601,6.199468,9.047716,-0.578819,8.982876,-9.678137],[1.333057,9.677155,-4.993748,-1.328374,-9.957764,-9.249770,-1.739383,5.087968,3.389334,3.081742,-3.333477,8.255476,1.829867,-5.260355,0.696106],[-4.053040,0.399414,-9.088176,-9.735265,6.461060,8.809714,2.901848,0.461063,1.853067,-0.399169,-9.906290,-0.100160,-1.647623,6.583411,-3.732431],[5.666501,-4.416222,-4.651982,-1.241391,0.039967,7.459846,5.008430,-7.222309,-3.457894,5.356320,-0.515693,3.409363,9.299308,9.387645,-4.790628],[2.256411,-7.230574,0.770031,-3.422925,5.662330,6.016877,2.548494,-6.203672,7.723988,1.592765,4.354059,-9.240159,-8.834684,-7.006793,2.904764]]], dtype = "float64")#candidate|2243|(4, 16, 15)|const|float64
uop_2244 = relay.tan(const_2243.astype('float64')) # shape=(4, 16, 15)
uop_2251 = relay.exp(const_2243.astype('float32')) # shape=(4, 16, 15)
func_1709_call = mod.get_global_var('func_1709')
func_1711_call = mutated_mod.get_global_var('func_1711')
call_2253 = relay.TupleGetItem(func_1709_call(), 0)
call_2254 = relay.TupleGetItem(func_1711_call(), 0)
output = relay.Tuple([uop_2244,uop_2251,call_2253,])
output2 = relay.Tuple([uop_2244,uop_2251,call_2254,])
func_2255 = relay.Function([], output)
mod['func_2255'] = func_2255
mod = relay.transform.InferType()(mod)
output = func_2255()
func_2256 = relay.Function([], output)
mutated_mod['func_2256'] = func_2256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1588_call = mod.get_global_var('func_1588')
func_1589_call = mutated_mod.get_global_var('func_1589')
call_2277 = relay.TupleGetItem(func_1588_call(), 0)
call_2278 = relay.TupleGetItem(func_1589_call(), 0)
output = call_2277
output2 = call_2278
func_2287 = relay.Function([], output)
mod['func_2287'] = func_2287
mod = relay.transform.InferType()(mod)
output = func_2287()
func_2288 = relay.Function([], output)
mutated_mod['func_2288'] = func_2288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2346 = relay.var("var_2346", dtype = "uint32", shape = (12, 3, 9))#candidate|2346|(12, 3, 9)|var|uint32
var_2347 = relay.var("var_2347", dtype = "uint32", shape = (12, 3, 9))#candidate|2347|(12, 3, 9)|var|uint32
bop_2348 = relay.greater_equal(var_2346.astype('bool'), relay.reshape(var_2347.astype('bool'), relay.shape_of(var_2346))) # shape=(12, 3, 9)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
const_2352 = relay.const([True,True,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,True,False,True], dtype = "bool")#candidate|2352|(84,)|const|bool
call_2351 = func_956_call(relay.reshape(const_2352.astype('bool'), [2, 6, 7]))
call_2353 = func_956_call(relay.reshape(const_2352.astype('bool'), [2, 6, 7]))
bop_2355 = relay.power(var_2347.astype('float32'), relay.reshape(var_2346.astype('float32'), relay.shape_of(var_2347))) # shape=(12, 3, 9)
output = relay.Tuple([bop_2348,call_2351,const_2352,bop_2355,])
output2 = relay.Tuple([bop_2348,call_2353,const_2352,bop_2355,])
func_2365 = relay.Function([var_2346,var_2347,], output)
mod['func_2365'] = func_2365
mod = relay.transform.InferType()(mod)
mutated_mod['func_2365'] = func_2365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2365_call = mutated_mod.get_global_var('func_2365')
var_2367 = relay.var("var_2367", dtype = "uint32", shape = (12, 3, 9))#candidate|2367|(12, 3, 9)|var|uint32
var_2368 = relay.var("var_2368", dtype = "uint32", shape = (12, 3, 9))#candidate|2368|(12, 3, 9)|var|uint32
call_2366 = func_2365_call(var_2367,var_2368,)
output = call_2366
func_2369 = relay.Function([var_2367,var_2368,], output)
mutated_mod['func_2369'] = func_2369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_2380 = func_1577_call()
call_2381 = func_1577_call()
func_64_call = mod.get_global_var('func_64')
func_66_call = mutated_mod.get_global_var('func_66')
const_2391 = relay.const([7.101338,-6.870881,4.082596,8.553342,-9.442566,1.464455,4.071078,-8.321475,-9.260223,9.637682,-6.757754,-0.810896,-4.166694,-4.393000,5.604815,6.745448,1.762513,-0.745555,-7.375529,-3.751228,-3.524330,0.592245,-1.239372,-5.160579,1.154342,2.931601,-5.024795,0.137071,-5.834180,-4.938906,5.409410,8.111010,-3.198982,2.196168,5.749459,9.656311,-1.752651,-9.662489,-5.575274,3.915664,-0.747501,0.537956,-9.154607,7.344057,-8.584483,3.042070,-8.002193,3.135968,-4.011205,8.275343,-6.272432,6.295522,9.741487,-8.634017,-8.670762,-4.758890,-7.617177,-6.559280,-3.369686,8.008523,9.194895,8.137752,6.893039,-8.414456,6.914450,-0.549938,-7.335357,-8.703661,2.635877,-8.512718,5.936464,-5.165164,-4.504371,-3.385225,-8.095534,-5.393343,-6.599139,4.720051,-5.967220,7.892503,-4.004131,3.284987,-5.284894,-0.251644,-8.950274,7.863115,6.083366,5.406444,-0.888484,3.315666,-6.299234,1.600185,6.079804,-4.955356,-0.541260,0.413410,3.260056,-1.664292,4.356399,7.723200,5.126616,1.711205,-3.303524,-4.553240,-8.024803,-5.208572,9.375503,-8.121062,-4.802480,-8.520114,-7.905749,7.306549,6.678770,1.144477,9.883497,-6.153782,-4.239092,5.834532,6.213277,3.151375,9.945285,-8.358376,5.517050,4.399579,0.582288,3.379055,-7.888841,-0.921878,-8.134926,-4.267783,-8.973063,-7.916549,-9.149173,-2.240246,0.021539,9.573997,6.980863,-1.764424,-8.433104,-2.322839,7.005258,-1.159441,2.056905,2.060767,-5.608577,8.993424,8.523087,8.464287,4.566189,2.831695,-7.269385,-0.889197,-9.190837,-5.084989,-0.683051,-8.003856,-0.937271,8.068537,4.986913,5.676385,-6.664535,3.252049,-7.684207,3.235506,-2.337165,8.740681,-8.659405,-3.255582,-1.768900,0.070308,6.775791,-3.590509,-3.546973,7.942120,4.886113,-5.423840,9.127795,1.806436,-4.444551,-9.798608,0.861794,4.837946,3.823483,-0.084849,1.014728,-2.392243,6.058124,-0.412942,1.343820,-0.554990,5.696416,-7.040477,-4.530133,-7.272412,9.723868,9.477808,-4.953237,-4.854674,-5.172999,8.131944,-5.908672,-6.733309,5.904980,-0.293823,2.607950,6.874400,1.286285,6.869387,9.377211,-8.116296,-3.346905,3.010709,8.407271,-8.249183,-0.046058,0.338596,-3.412906,-5.241582,-1.373651,-9.285499,3.243992,-2.820417,9.125143,-7.225605,-8.634793,2.394614,-3.563554,2.363750,-7.963880,7.858513,-2.156726,-4.067782,0.547678,-2.933456,5.611201,5.523221,-6.111406,6.367791,6.246613,-5.139998,-5.733744,3.264041,-1.449832,-3.791868,-4.983755,5.432479,-3.133408,7.893811,-7.636743,-2.244368,-1.380483,9.200487,8.563562,4.209725,-5.524221,-5.618493,0.505716,-7.281955,2.773809,2.556084,-2.166525,-2.561926,-4.704475,-0.074442,0.047988,-5.570474,-0.657821,-1.420429,-6.151550,3.920665,3.631931,5.259796,8.350562,-2.809006,1.044987,-4.188016,-0.681505,-9.810844,9.683493,8.784259,3.753664,-2.487819,2.791343,-3.273532,-8.883940,4.885604,8.583276,2.955133,-1.262290,4.239553,6.954364,9.766640,-6.408211,-0.402973,2.945454,-9.377780,2.780833,-8.892542,9.266907,-6.134757,-0.280548,6.538553,-8.382002,-8.577841,-5.591944,-3.270507,-3.209536,4.830191,-9.545738,-5.260220,-2.917689,-4.754175,2.603313,-3.089439,9.245830,6.263412,-1.409425,-4.682113,6.080414,7.619040,-5.178740,1.977888,-1.135924,-1.179795,-6.097254,-7.851157,7.682780,-2.171640,9.579168,-3.502455,8.118097,4.178360,-1.303923,-9.457437,-7.309445,-4.110109], dtype = "float64")#candidate|2391|(336,)|const|float64
call_2390 = relay.TupleGetItem(func_64_call(relay.reshape(const_2391.astype('float64'), [16, 7, 3])), 0)
call_2392 = relay.TupleGetItem(func_66_call(relay.reshape(const_2391.astype('float64'), [16, 7, 3])), 0)
output = relay.Tuple([call_2380,call_2390,const_2391,])
output2 = relay.Tuple([call_2381,call_2392,const_2391,])
func_2411 = relay.Function([], output)
mod['func_2411'] = func_2411
mod = relay.transform.InferType()(mod)
output = func_2411()
func_2412 = relay.Function([], output)
mutated_mod['func_2412'] = func_2412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2411_call = mod.get_global_var('func_2411')
func_2412_call = mutated_mod.get_global_var('func_2412')
call_2425 = relay.TupleGetItem(func_2411_call(), 0)
call_2426 = relay.TupleGetItem(func_2412_call(), 0)
output = relay.Tuple([call_2425,])
output2 = relay.Tuple([call_2426,])
func_2436 = relay.Function([], output)
mod['func_2436'] = func_2436
mod = relay.transform.InferType()(mod)
output = func_2436()
func_2437 = relay.Function([], output)
mutated_mod['func_2437'] = func_2437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2255_call = mod.get_global_var('func_2255')
func_2256_call = mutated_mod.get_global_var('func_2256')
call_2448 = relay.TupleGetItem(func_2255_call(), 2)
call_2449 = relay.TupleGetItem(func_2256_call(), 2)
func_800_call = mod.get_global_var('func_800')
func_803_call = mutated_mod.get_global_var('func_803')
var_2454 = relay.var("var_2454", dtype = "float32", shape = (20,))#candidate|2454|(20,)|var|float32
call_2453 = relay.TupleGetItem(func_800_call(relay.reshape(var_2454.astype('float32'), [4, 1, 5])), 1)
call_2455 = relay.TupleGetItem(func_803_call(relay.reshape(var_2454.astype('float32'), [4, 1, 5])), 1)
uop_2461 = relay.sqrt(var_2454.astype('float32')) # shape=(20,)
func_2255_call = mod.get_global_var('func_2255')
func_2256_call = mutated_mod.get_global_var('func_2256')
call_2492 = relay.TupleGetItem(func_2255_call(), 1)
call_2493 = relay.TupleGetItem(func_2256_call(), 1)
const_2494 = relay.const([[[8.863337,5.252025,2.009964],[-3.340036,9.329570,3.072833],[7.881552,1.832815,2.542953],[-7.988975,8.498864,-8.627432],[-1.023107,-2.571057,-5.335918],[-5.868645,4.539940,-0.477938],[-7.673897,8.274492,-1.552940]],[[0.492557,-9.141840,5.464782],[-6.465027,-2.501170,9.606253],[-2.162954,1.529788,4.202891],[-6.688453,2.206908,4.070567],[-0.336581,-4.991872,-3.487402],[-7.283188,-4.117867,-3.402422],[-3.280287,-5.016886,-7.252696]],[[1.334349,6.246974,-9.327996],[-7.527875,1.738581,-5.998652],[2.200483,-9.572857,-5.882893],[-8.723849,-9.520833,-5.641476],[6.638635,2.624705,1.048194],[0.871406,-6.859388,1.773272],[-0.069837,-9.026968,3.272675]],[[-6.468020,4.460161,-8.840017],[3.991432,6.953371,-1.888599],[9.799125,-6.825798,2.538762],[-2.357616,7.680717,7.629274],[2.887494,-6.838116,0.838698],[1.296947,3.915331,-0.071528],[-9.630591,-2.783236,-1.190726]],[[6.535400,-8.032784,-7.844966],[-7.684680,0.032133,-3.005180],[-2.790305,-1.279110,8.860136],[7.106503,8.576627,8.398097],[-5.290339,-7.558507,9.060934],[5.344006,-3.721911,5.853333],[1.026806,3.819320,2.412097]],[[-4.775302,-1.205736,-7.576641],[-7.660581,-0.419317,-2.370411],[-3.333706,0.197327,-3.826475],[3.409301,-0.550138,8.212265],[-9.392959,4.584856,5.133955],[7.047487,-8.825456,-3.229670],[3.269465,-6.590883,7.470247]],[[-4.206694,-5.653397,-2.344213],[-8.704251,-7.601746,0.197264],[-5.853208,4.793781,7.469096],[-4.354153,-8.841107,-3.700260],[-8.628301,0.124228,9.442595],[2.182454,-3.249944,-2.305725],[-8.505820,-7.527309,8.594352]],[[7.734846,-9.190728,2.311113],[2.228130,-0.632374,-6.507326],[9.722235,8.242628,-6.750354],[3.222489,-5.818792,7.548013],[-8.100790,7.631836,-7.143625],[-5.897704,0.148452,-7.290853],[-6.421541,-4.479696,6.776070]],[[-1.179573,0.164695,-3.493702],[-4.756493,-4.447622,0.870249],[6.479718,8.975343,1.206877],[9.833078,6.828638,-7.968336],[5.375040,-4.749859,0.380430],[6.993273,-3.582505,6.391137],[-8.022117,-2.104852,-8.421109]],[[-0.750076,1.986625,5.130526],[4.531173,-8.383109,3.508806],[7.532107,6.276050,-4.183827],[2.633443,-9.366538,7.037234],[-9.768608,-8.507846,-1.584546],[6.172844,-2.561364,-1.356878],[7.995496,5.931168,4.969983]],[[-8.639451,3.189135,-5.213253],[-7.565662,8.092572,3.533576],[7.576038,-2.544585,-6.930474],[-6.528955,8.614976,-5.315200],[-7.593686,-3.943421,6.850409],[-1.106416,-1.626954,8.683658],[-7.004760,-9.808824,4.405337]],[[-3.701798,-4.800460,-6.808596],[3.457688,-1.959829,3.036105],[-0.455332,-8.427429,2.159333],[-6.129475,4.521123,-4.301372],[7.970339,-7.176000,-0.294690],[9.911452,-1.538506,-8.244970],[-7.202273,-8.170975,-7.872174]],[[8.867048,9.782245,6.464201],[9.300098,6.444137,-3.074682],[-9.579945,-3.234649,-9.861606],[-1.965565,8.471002,0.186668],[0.024038,9.555541,-1.994312],[5.250678,-6.870079,9.279334],[-5.661571,-7.309176,0.675291]],[[2.897651,-4.996406,-1.846707],[-0.405756,4.944974,-8.749779],[2.063514,-4.025048,4.599370],[5.732835,5.123030,1.085284],[1.196090,9.944390,7.560741],[3.447719,-0.897914,-5.465579],[-9.823309,1.889424,-1.161621]],[[-9.061403,4.828951,-9.954321],[7.983482,-1.523557,-7.194989],[4.934646,0.886816,3.939671],[8.855268,3.775558,-4.092182],[-0.625478,-5.072594,-3.966416],[3.195882,0.288703,-0.723001],[6.353015,7.690206,-6.224563]],[[-1.910290,2.024016,-8.306741],[-3.376856,1.422024,-2.138043],[-9.812184,-5.175859,-3.344222],[0.505366,8.738718,7.911836],[9.470858,5.276774,-7.354776],[-7.802954,3.192555,-8.780837],[-9.904936,0.935008,-7.556833]]], dtype = "float64")#candidate|2494|(16, 7, 3)|const|float64
bop_2495 = relay.greater(call_2453.astype('bool'), relay.reshape(const_2494.astype('bool'), relay.shape_of(call_2453))) # shape=(16, 7, 3)
bop_2498 = relay.greater(call_2455.astype('bool'), relay.reshape(const_2494.astype('bool'), relay.shape_of(call_2455))) # shape=(16, 7, 3)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
var_2533 = relay.var("var_2533", dtype = "bool", shape = (84,))#candidate|2533|(84,)|var|bool
call_2532 = func_956_call(relay.reshape(var_2533.astype('bool'), [2, 6, 7]))
call_2534 = func_956_call(relay.reshape(var_2533.astype('bool'), [2, 6, 7]))
func_2287_call = mod.get_global_var('func_2287')
func_2288_call = mutated_mod.get_global_var('func_2288')
call_2539 = func_2287_call()
call_2540 = func_2287_call()
output = relay.Tuple([call_2448,uop_2461,call_2492,bop_2495,call_2532,var_2533,call_2539,])
output2 = relay.Tuple([call_2449,uop_2461,call_2493,bop_2498,call_2534,var_2533,call_2540,])
func_2543 = relay.Function([var_2454,var_2533,], output)
mod['func_2543'] = func_2543
mod = relay.transform.InferType()(mod)
mutated_mod['func_2543'] = func_2543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2543_call = mutated_mod.get_global_var('func_2543')
var_2545 = relay.var("var_2545", dtype = "float32", shape = (20,))#candidate|2545|(20,)|var|float32
var_2546 = relay.var("var_2546", dtype = "bool", shape = (84,))#candidate|2546|(84,)|var|bool
call_2544 = func_2543_call(var_2545,var_2546,)
output = call_2544
func_2547 = relay.Function([var_2545,var_2546,], output)
mutated_mod['func_2547'] = func_2547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_2615 = func_1577_call()
call_2616 = func_1577_call()
func_374_call = mod.get_global_var('func_374')
func_378_call = mutated_mod.get_global_var('func_378')
var_2631 = relay.var("var_2631", dtype = "float32", shape = (126,))#candidate|2631|(126,)|var|float32
const_2632 = relay.const([1.593093,-6.634324,5.579926,9.171404,3.586199,-4.876694,1.345442,0.978223,3.964406,8.776125,2.760491,7.846428,-9.442643,-9.350221,6.173563,-8.408126,-7.877185,-2.493471,-0.767109,4.762104,0.606878,0.711877,5.672175,9.354798,9.520978,-4.919539,-6.135690,-1.508077,7.909427,-5.893182,2.856391,3.352391,-9.473713,9.476858,0.120322,-9.702436,5.113564,5.092684,-3.523942,6.962171,4.729130,-3.692425,8.842309,-3.351676,5.087944,-5.725161,-5.913640,-9.047359,2.337966,5.643385,-1.348413,5.699129,8.302552,-6.116161,-8.979171,1.636773,6.914775,8.259144,-7.676783,9.508670,9.533396,-5.293259,9.457210,-3.199291,-3.941486,1.378582,8.600241,-0.807326,-4.542537,-0.722290,-6.624846,-7.608529,7.809831,4.783802,-8.885857,-6.097313,-6.144318,7.592540,0.889614,-9.607978,7.422173,7.996447,-9.304357,5.050213,-3.986724,9.933794,7.886223,3.653242,-9.340363,-5.019511,9.924952,-2.827890,3.467381,-1.714997,7.225888,-3.076703,-0.037416,2.219630,-8.999458,4.372663,-4.220413,9.818293,5.139165,-1.169909,2.491538,-2.994723,7.626248,-0.207819,-8.682288,-4.769686,7.767509,-9.367580,-5.003443,3.040931,-6.769787,4.951697,7.399736,-0.770510,4.355536,-7.305200,8.952909,-2.865624,1.589226,7.795469,0.032030,8.285576,-8.027463,-2.488820,6.414397,8.306030,1.948638,-3.235930,-9.666242,3.974529,-7.928361,-6.858846,-3.059998,-4.800411,-3.695551,9.276562,4.762423,-7.219693,-2.006023,-8.830582,-3.421103,8.053577,0.072526,6.652961,-6.252130,1.278158,-3.460998,-8.939855,-9.376711,6.859410,-0.013058,-3.667802,9.253630,2.218701,-7.760658,-2.967721,-5.263784,-3.355408,5.130924,4.459162,-8.874235,-9.124636,-3.946955,4.164729,-9.987110,5.881161,6.350227,-5.678431,5.957011,-4.407521,-9.794209,-8.331858,-2.512108,-2.595348,-3.098257,7.911766,-4.252699,-4.562422,-1.833238,-7.754883,-3.124234,7.381644,8.638108,-9.618557,8.690100,-3.032144,4.771612,-3.986220,4.019463,-8.613765,-7.466386,-0.567977,0.847151,-9.106322,-1.166591,-5.689222,-5.868280,-0.371814,-6.785630,-8.628511,0.975505,5.450845,-5.993042,-9.790942,-0.094974,6.980724,-0.727093,3.951428,-0.934858,1.890490,-8.883410,5.431597,0.566676,8.001331,5.651337,-1.931543,-3.069135,3.123414,3.130228,6.481237,-3.041931,5.661586,-3.108711,6.101274,-3.464612,-4.368070,-7.997172,0.941769,6.470324,1.404175,6.891134,-1.438643,1.543749,-3.435494,7.817638,-6.859573,-2.414641,3.768378,8.152139,-5.001243,2.971049,-7.690415,-4.889185,-9.812188,-0.338929,-3.429525,9.547755,-0.457909,2.827640,8.115606,-0.592367,-3.081567,1.316444,5.213467,-8.719855,-2.132769,-0.662738,-5.926740,9.975466,2.391026,-2.367405,7.076073,-5.675124,6.079243,-1.181539,-6.046911,-7.829631,0.368248,-5.297213,-1.445339,-8.549800,4.395277,-6.653223,-8.677268,-6.124740,7.494351,9.424656,-9.954328,-8.590671,5.542465,-8.851651,6.795571,0.557362,0.122644,-1.274860,-4.795702,-1.586533,2.836295,8.119154,-5.915692,2.631756,9.846364,-3.076654,-2.064581,8.991299,7.151962,-1.191465,-5.158348,-5.410427,3.915448,-0.501226,4.173113,5.705133,0.050288,-8.241935,-8.234933,9.433168,2.673912,9.792609,1.749049,4.510193,6.773347,3.147451,6.655459,3.350277,-0.809233,8.103160,-5.287588,1.215027,2.433746,-7.895696,2.397831,3.901750,8.661419,3.765514,4.809343,-0.230492,-7.079113,0.968715,4.331931,-7.635543,-7.380467], dtype = "float64")#candidate|2632|(336,)|const|float64
call_2630 = relay.TupleGetItem(func_374_call(relay.reshape(var_2631.astype('float32'), [9, 14]), relay.reshape(const_2632.astype('float64'), [336,]), ), 3)
call_2633 = relay.TupleGetItem(func_378_call(relay.reshape(var_2631.astype('float32'), [9, 14]), relay.reshape(const_2632.astype('float64'), [336,]), ), 3)
output = relay.Tuple([call_2615,call_2630,var_2631,const_2632,])
output2 = relay.Tuple([call_2616,call_2633,var_2631,const_2632,])
func_2639 = relay.Function([var_2631,], output)
mod['func_2639'] = func_2639
mod = relay.transform.InferType()(mod)
var_2640 = relay.var("var_2640", dtype = "float32", shape = (126,))#candidate|2640|(126,)|var|float32
output = func_2639(var_2640)
func_2641 = relay.Function([var_2640], output)
mutated_mod['func_2641'] = func_2641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1588_call = mod.get_global_var('func_1588')
func_1589_call = mutated_mod.get_global_var('func_1589')
call_2653 = relay.TupleGetItem(func_1588_call(), 0)
call_2654 = relay.TupleGetItem(func_1589_call(), 0)
func_64_call = mod.get_global_var('func_64')
func_66_call = mutated_mod.get_global_var('func_66')
var_2685 = relay.var("var_2685", dtype = "float64", shape = (168, 2))#candidate|2685|(168, 2)|var|float64
call_2684 = relay.TupleGetItem(func_64_call(relay.reshape(var_2685.astype('float64'), [16, 7, 3])), 0)
call_2686 = relay.TupleGetItem(func_66_call(relay.reshape(var_2685.astype('float64'), [16, 7, 3])), 0)
bop_2687 = relay.greater_equal(var_2685.astype('bool'), relay.reshape(call_2684.astype('bool'), relay.shape_of(var_2685))) # shape=(168, 2)
bop_2690 = relay.greater_equal(var_2685.astype('bool'), relay.reshape(call_2686.astype('bool'), relay.shape_of(var_2685))) # shape=(168, 2)
output = relay.Tuple([call_2653,bop_2687,])
output2 = relay.Tuple([call_2654,bop_2690,])
func_2706 = relay.Function([var_2685,], output)
mod['func_2706'] = func_2706
mod = relay.transform.InferType()(mod)
var_2707 = relay.var("var_2707", dtype = "float64", shape = (168, 2))#candidate|2707|(168, 2)|var|float64
output = func_2706(var_2707)
func_2708 = relay.Function([var_2707], output)
mutated_mod['func_2708'] = func_2708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1588_call = mod.get_global_var('func_1588')
func_1589_call = mutated_mod.get_global_var('func_1589')
call_2755 = relay.TupleGetItem(func_1588_call(), 0)
call_2756 = relay.TupleGetItem(func_1589_call(), 0)
func_1588_call = mod.get_global_var('func_1588')
func_1589_call = mutated_mod.get_global_var('func_1589')
call_2759 = relay.TupleGetItem(func_1588_call(), 0)
call_2760 = relay.TupleGetItem(func_1589_call(), 0)
func_2255_call = mod.get_global_var('func_2255')
func_2256_call = mutated_mod.get_global_var('func_2256')
call_2769 = relay.TupleGetItem(func_2255_call(), 2)
call_2770 = relay.TupleGetItem(func_2256_call(), 2)
func_1756_call = mod.get_global_var('func_1756')
func_1757_call = mutated_mod.get_global_var('func_1757')
call_2774 = relay.TupleGetItem(func_1756_call(), 0)
call_2775 = relay.TupleGetItem(func_1757_call(), 0)
func_2255_call = mod.get_global_var('func_2255')
func_2256_call = mutated_mod.get_global_var('func_2256')
call_2795 = relay.TupleGetItem(func_2255_call(), 1)
call_2796 = relay.TupleGetItem(func_2256_call(), 1)
output = relay.Tuple([call_2755,call_2759,call_2769,call_2774,call_2795,])
output2 = relay.Tuple([call_2756,call_2760,call_2770,call_2775,call_2796,])
func_2798 = relay.Function([], output)
mod['func_2798'] = func_2798
mod = relay.transform.InferType()(mod)
output = func_2798()
func_2799 = relay.Function([], output)
mutated_mod['func_2799'] = func_2799
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2817 = relay.var("var_2817", dtype = "int64", shape = (10, 5, 7))#candidate|2817|(10, 5, 7)|var|int64
var_2818 = relay.var("var_2818", dtype = "int64", shape = (10, 5, 7))#candidate|2818|(10, 5, 7)|var|int64
bop_2819 = relay.not_equal(var_2817.astype('bool'), relay.reshape(var_2818.astype('bool'), relay.shape_of(var_2817))) # shape=(10, 5, 7)
func_2639_call = mod.get_global_var('func_2639')
func_2641_call = mutated_mod.get_global_var('func_2641')
var_2827 = relay.var("var_2827", dtype = "float32", shape = (3, 42))#candidate|2827|(3, 42)|var|float32
call_2826 = relay.TupleGetItem(func_2639_call(relay.reshape(var_2827.astype('float32'), [126,])), 1)
call_2828 = relay.TupleGetItem(func_2641_call(relay.reshape(var_2827.astype('float32'), [126,])), 1)
uop_2841 = relay.asin(call_2826.astype('float32')) # shape=(16, 7, 3)
uop_2843 = relay.asin(call_2828.astype('float32')) # shape=(16, 7, 3)
output = relay.Tuple([bop_2819,var_2827,uop_2841,])
output2 = relay.Tuple([bop_2819,var_2827,uop_2843,])
func_2848 = relay.Function([var_2817,var_2818,var_2827,], output)
mod['func_2848'] = func_2848
mod = relay.transform.InferType()(mod)
mutated_mod['func_2848'] = func_2848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2848_call = mutated_mod.get_global_var('func_2848')
var_2850 = relay.var("var_2850", dtype = "int64", shape = (10, 5, 7))#candidate|2850|(10, 5, 7)|var|int64
var_2851 = relay.var("var_2851", dtype = "int64", shape = (10, 5, 7))#candidate|2851|(10, 5, 7)|var|int64
var_2852 = relay.var("var_2852", dtype = "float32", shape = (3, 42))#candidate|2852|(3, 42)|var|float32
call_2849 = func_2848_call(var_2850,var_2851,var_2852,)
output = call_2849
func_2853 = relay.Function([var_2850,var_2851,var_2852,], output)
mutated_mod['func_2853'] = func_2853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1588_call = mod.get_global_var('func_1588')
func_1589_call = mutated_mod.get_global_var('func_1589')
call_2924 = relay.TupleGetItem(func_1588_call(), 0)
call_2925 = relay.TupleGetItem(func_1589_call(), 0)
output = relay.Tuple([call_2924,])
output2 = relay.Tuple([call_2925,])
func_2936 = relay.Function([], output)
mod['func_2936'] = func_2936
mod = relay.transform.InferType()(mod)
mutated_mod['func_2936'] = func_2936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2936_call = mutated_mod.get_global_var('func_2936')
call_2937 = func_2936_call()
output = call_2937
func_2938 = relay.Function([], output)
mutated_mod['func_2938'] = func_2938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1756_call = mod.get_global_var('func_1756')
func_1757_call = mutated_mod.get_global_var('func_1757')
call_2956 = relay.TupleGetItem(func_1756_call(), 0)
call_2957 = relay.TupleGetItem(func_1757_call(), 0)
func_1969_call = mod.get_global_var('func_1969')
func_1974_call = mutated_mod.get_global_var('func_1974')
const_2973 = relay.const([[-9.812355,-5.489471,-8.830477,-0.036830,-7.356066,-6.352790,9.449070,-5.561148,0.724369,8.835937,7.706858,-2.598892,2.229878,7.610566,3.361343,1.616570,1.046571,-4.968468,-4.273835,-8.046009,9.844842,1.280969,-2.025059,8.306709,7.831783,4.073950,7.677350,-8.143237,7.015862,0.233844,3.097918,-9.584885,-8.569945,-7.321751,-9.305856,-9.905711,-2.070175,-2.749988,3.851251,-1.608728,-2.347050,8.938636,-7.276759,4.539634,7.018038,-1.879444,9.232418,-6.181695,4.924032,5.753697,0.384108,-2.163233,8.366856,-0.919163,-7.173670,1.940611,1.518692,-5.186699,-4.814312,2.088057,-4.413817,2.748722,5.873097,-9.777202,-7.881900,-9.146209,7.782868,4.550921,6.385785,7.511468,4.822959,0.753930,-1.166851,-6.660773,9.387124,-3.120662,4.254798,2.488475,8.359801,-1.939938,5.618443,-5.661070,0.648988,6.826896,2.060170,-5.347955,-9.250749,7.229847,4.454933,3.494005,-6.082337,5.306799,4.469265,-8.998232,-6.799682,3.400558,0.656598,-9.855072,0.432453,0.397847,-4.212799,1.290894,7.030939,3.695460,-9.485844,0.930324,2.106936,7.459014,-0.891942,6.554369,-7.515353,-6.221171,-0.824000,-2.456364,7.683686,6.033690,6.543062,-2.878924,9.394701,8.537997,-8.628851,-0.371795,8.795671,7.921000,3.447889,-2.880478,0.099378,0.923924,3.121881,8.552008,-2.707018,2.409404,-8.052845,-9.224884,1.389635,8.423666,7.088228,1.234638,6.735397,-5.492603,-7.329300,-6.932570,9.427958,4.201594,2.105657,3.076326,1.783417,1.935506,-7.633716,-9.593365,-7.656283,-1.330021,9.344919,-9.630029,-7.597043,-7.163306,-0.080910,-6.411030,-1.956214,-7.983719,-0.988354,9.308250,-0.547807,8.886195,8.953421,4.308071,-2.866926,9.332047,0.034307,-8.741096,-9.733767,-6.341282,-6.036529,-0.993938,3.303104,-1.670535,8.161179,3.433070,1.950804,-7.946150,-5.301111,-6.237959,2.688781,4.799295,7.940006,-1.490096,-2.855971,-0.017531,9.842557,6.586020,-8.392982,9.862994,-5.693118,2.241601,9.526475,-5.422708,1.295681,-2.211419,-1.396902,-5.068814,-1.969543,3.216099,2.107075,5.389872,-5.150198,2.391482,-8.262027,-2.717494,-7.695810,-0.388040,-1.519070,4.523942,6.644271,-2.251734,5.301497,-4.389175,-7.246648,-5.127799,0.992935,-6.602588,3.591317,-0.738954,-3.262643,-7.737786,4.970095,7.903792,1.209442,9.876993,-7.512737,-1.554011,-5.514450,4.177004,-6.441067,6.618101,6.744601,2.012913,5.261199,4.041619,9.911301,-5.113406,-3.750201,-2.071523,2.741099,9.362798,3.767859,4.483155,-4.365987,-2.654652,1.561851,-4.616565,-6.788003,1.460234,-9.316099,9.521957,-4.033596,-3.306363,4.911021,-8.444013,-4.085798,0.741648,3.095847,-4.911778,1.734561,-5.285518,-7.276184,-5.260354,-1.295726,-5.074602,-3.728650,-2.648640,-3.726466,9.417883,2.491046,-2.115551,1.977385,-2.162651,-0.441424,-6.711904,0.721864,-8.720723,-1.162581,-3.296702,-7.959205,8.488933,4.593561,0.720336,-2.171365,8.972870,-4.536945,8.421544,8.530829,-6.798412,-6.016514,-2.279144,7.880317,1.447688,8.421063,8.929021,0.517595,-1.434010,-7.400663,-6.127115,-4.752825,1.579421,5.334373,8.014893,-0.203797,-3.882010,-5.087661,-8.416976,-7.078401,6.987604,-8.421519,4.123496,5.743545,-3.776396,-9.770586,-3.716394,-4.288870,4.237464,7.452914,7.951905,8.820975,-1.640588,-6.241151,7.658980,8.809758,-3.852642,9.708358,2.835741,6.170829,6.507302,-4.100468,-3.464934,8.163810,-2.850353,-9.650600,-0.874088,8.779167,-6.806462,8.204830,-3.548516,-2.010507,-2.288778,4.528772,9.432272,6.875137,-2.973683,-0.937803,0.971294,-6.728266,-9.314577,8.402193,-0.571996,-6.525462,-2.097141,4.786523,-4.372711,1.931022,5.513988,-9.649221,3.369034,8.851859,6.005496,-7.855858,1.149575,-4.860727,-3.821087,-4.182162,-8.063399,3.151570,5.675016,-2.663390,-5.254404,-2.113472,-5.412966,-4.816407,4.886148,4.886026,-1.084060,7.397050,-0.590411,4.764080,6.350820,-3.023620,-1.680676,-7.984841,-5.670076,9.579241,-9.001104,-7.345006,-1.859766,-2.654775,9.152776,-6.708389,1.821358,4.302539,4.822407,-0.721216,7.820755,7.837043,-9.092893,5.063062,-8.702846,-1.386619,-9.305076,8.447358,2.274122,-5.352411,9.561742,-0.133970,-8.429052,-5.338146,5.325781,-0.155514,9.149300,-0.400411,9.386213,-7.679693,2.730165,-3.703266,-4.978124,-2.108905,6.771599,-2.459890,-2.028565,-8.528825,-1.038675,-6.568709,7.095918,-8.081887,-2.384608,1.680227,-6.116602,5.424854,-3.277927,-8.438421,9.511563,-7.506991,9.933767,2.252420,-7.823540,4.277828,8.579918,-0.873562,-1.944466,6.996523,2.986724,3.666160,5.235198,8.254426,-9.629277,-6.463856,1.895073,6.444630,8.283763,-2.424035,-2.223286,-3.605727,3.342155,-0.327053,-6.025502,5.631318,-7.724547,6.788988,5.951024,4.412414,-3.076350,-9.965415,4.621998,1.755341,-7.504345,-2.248836,3.915346,-2.555629,0.538130,-1.931624,6.100062,1.064031,-9.356157,4.073215,-9.353325,-4.042497,-3.645118,-6.635512,-6.811643,-3.841290,1.166099,3.222259,2.597889,3.701822,-6.160373,-6.671594,7.964101,-7.796493,9.303253,-7.596651,-3.279717,-4.513597,2.278743,-7.296254,-1.818332,-9.451489,6.383898,-3.340443,-5.765224,2.501280,-7.893694,-4.054945,-7.597637,9.678608,-9.779959,4.021248,-1.026622,4.249536,-0.723580,2.795014,-2.704906,-2.979255,0.922095,-3.274274,-8.427415,1.465508,-8.477858,3.283904,-5.676954,-3.887106,-3.321810,7.071825,3.778751,-4.657512,0.001317,7.740076,9.337684,5.204676,-7.403199,-6.024021,-1.405722,0.477871,8.428051,6.512163,-6.528861,-3.733658,9.514198,9.630031,-3.753607,-6.217548,-5.912926,3.519349,6.845906,-5.863938,1.427734,-8.778815,-2.409104,-2.733269,-7.735286,3.931440,1.718781,3.625655,-0.015059,7.957996,-9.972502,-3.615763,7.280190,6.654917,-7.663673,1.144609,-6.373399,4.929112,7.009903,5.558170,1.815649,-4.374054,-5.331565,9.268744,7.775794,-6.256050,-9.561751,-9.558001,-1.483566,-5.725379,2.797427,-9.778033,-6.502900,8.164323,0.917854,0.482556,9.561663,4.495072,-7.360942,-9.950316,-7.712643,2.440094,3.624727,-3.332534,3.516829,9.325639,-4.588395,1.731157,1.308251,4.394682,9.829712,-1.226859,-4.688502,-5.160011,-0.228593,-7.895245,5.216790,-2.024305,2.264226,0.021370,6.765961,-7.615502,-7.823974,-4.072700,-2.138906,3.975166,3.814628,-5.101234,7.107250,-3.614567,-3.622549,-1.811466,-8.376594,-5.713917,-3.045950,1.180531,-5.234834,2.605026,9.602322,8.025055,8.018991,1.641665,-6.418116,1.181033,-9.970155,9.820237,-6.404301,5.545442,-6.806395,4.044946,9.568779,6.412503,-6.199223,-2.480710,-6.746643,2.160488,-5.416159,-2.500546,-3.593389,2.366125,1.584341,6.132183,-4.230129,8.536660,8.190291,3.315907,0.885518,-3.052425,-4.890372,2.715824,-1.790398,-6.846050,8.400424,3.572352,-1.228176,-4.456972,-8.248516,-6.403968,-8.373551,8.324196,-2.499394,-0.121227,2.828445,4.341607,-4.812410,9.222279,9.244627,5.172662,-3.206627,-7.774531,1.399576,7.968836,2.640028,8.344394,6.568001,6.134639,5.500132,5.548994,-3.230785,-2.435426,4.153237,-2.547461,-6.658965,0.580316,-9.233250,8.034006,-0.890995,8.128831,-7.613869,-3.483227,-5.973505,4.448233,0.025515,-3.341405,1.919387,-8.183474,-7.590667,2.587319,0.166360,-7.009588,5.898541,9.783849,-0.778150,5.143331,1.750486,-8.715147,4.763839,-7.443483,-5.952537,-6.131842,4.089840,-3.814291,7.934034,-4.160457,-1.495018,4.181771,5.156866,6.477736,1.127627,-3.085155,-7.131381,-8.990226,1.178095,4.443850,-4.302618,6.643528,-7.502937,5.478692,-0.612394,-0.152271,-0.558403,-9.007154,7.865112,7.716560,-3.546045,4.405703,-6.347905,-1.797904,-4.310714,3.862854,1.085572,5.101224,-6.431967,-7.172820,-2.775462,0.034943,-3.101244,-9.201874,-0.717818,-5.238991,-8.612337,1.247088,-8.647642,-0.231703,6.095923,4.795174,-8.129090,5.034529,5.119639,3.714314,-5.341619,6.430991,-3.353957,-1.229223,6.537630,2.876430,9.692709,8.697996,-6.378658,-3.102533,2.029392,8.666334,-6.446764,7.822191,-5.482093,-5.233674,6.318547,5.684921,6.812996,-5.143739,-5.148933,-1.954033,6.957794,5.744850,4.149362,0.006634,0.822318,4.167589,3.855018,-2.134128,2.459999,2.419209,-2.755261,0.663616,-7.583285,-2.113901,7.198217,-0.274271,-9.666480,5.263191,-9.420123,6.223782,3.091636,9.449541,6.311776,-3.687686,-8.404723,5.662158,-6.224410,4.342227,4.570798,2.084845,-5.085689,7.262176,-0.807991,7.179373,6.808514,-8.088971,3.189612,-6.582914,4.339660,4.343768,-5.014476,-8.502971,2.387212,3.500428,-4.326145,-9.551177,5.014923],[8.001710,-8.036567,-5.226911,6.958143,-5.603173,-6.780913,6.303554,7.212581,-7.106059,-6.288455,-2.687391,-4.333737,-7.177873,-4.887318,3.636779,-1.451254,9.676885,3.709331,-1.634824,8.859912,2.946955,8.356869,3.052840,-9.754264,-1.023370,2.312631,-8.908503,9.518166,-6.499715,0.333036,1.435294,-3.879394,-7.992538,-7.300001,4.694705,9.775479,6.467892,4.606580,9.536051,-8.259635,-2.740391,-9.224013,5.326904,1.493144,-8.465209,-9.370846,-5.621275,-0.634911,-0.797422,-2.367564,-2.976996,3.024291,-5.054183,5.258510,-7.646317,-2.677222,7.037963,2.551038,-4.340815,-1.454735,-3.936307,-8.399610,3.622938,2.129052,8.653665,8.265725,-5.555164,4.176097,-6.192741,-8.813336,0.831243,5.148087,-1.344716,1.375209,-2.920438,3.913546,-3.899701,2.864020,-9.591090,-9.589502,-7.213040,-7.883663,-9.552088,-9.494896,-5.242657,1.980299,7.915763,-1.193727,4.153762,-0.695690,8.496608,-6.008682,9.471377,8.002408,5.359323,1.433681,-9.288290,-5.708560,5.304992,6.450491,0.186611,4.940139,6.241820,-0.393571,-4.384330,-7.072852,-7.889967,3.075765,5.271506,-7.636691,-7.366626,-0.490228,3.803832,0.833059,8.103865,-7.812221,5.688431,7.996801,9.390231,-5.214559,-2.939949,0.878957,7.509514,-4.440606,0.658897,8.179007,-6.743395,-8.168723,-2.136353,2.359099,-5.569920,0.445908,5.041193,1.714026,-3.334517,-9.718359,-0.745773,-5.031543,1.628591,-7.433122,7.004176,-6.264695,-2.997201,7.256647,1.626033,-5.986296,-9.711484,4.410580,7.827719,-4.781314,-0.080060,-6.060447,-8.178118,3.871560,-6.795586,-1.529008,7.524153,3.452105,-5.356865,3.344161,9.122265,3.429918,9.306883,-0.571338,6.697909,-1.590361,2.079878,9.862571,1.217071,6.025057,-8.554229,6.957331,0.188937,4.256001,9.806693,6.106284,6.411975,-1.005018,8.768334,1.988743,0.337794,6.019992,-6.541464,-7.034846,9.575543,1.971324,-3.609303,0.499963,-2.548078,9.531572,9.560142,-0.025659,1.445768,5.842241,6.159167,-3.355729,5.053334,-2.135069,-8.175224,4.993877,-7.488136,9.692852,-0.057340,-8.723929,-5.076967,-9.429872,-1.177952,-4.124284,-3.288073,3.316359,-4.215186,-8.929477,1.265161,8.808262,-1.489972,8.760878,-7.750844,9.926313,1.991523,4.079049,2.956221,-9.089032,-0.591858,0.521604,-1.522626,4.892677,-4.570962,-7.711071,-7.036229,1.438105,1.256697,9.288398,-8.338455,-0.561622,6.247508,0.030153,3.021070,-2.279673,-2.180945,-9.313355,-4.924645,0.227460,-2.123721,-6.736342,9.112138,1.606894,-7.535423,-6.698305,2.263021,6.212942,-9.331864,2.878157,-2.863927,-3.210465,5.864655,3.025254,-6.011051,2.092603,1.731258,0.006955,9.031405,9.277540,6.298576,-2.609705,-0.511605,4.390398,-1.136743,-0.027771,9.913099,6.636697,-6.501358,-2.856481,0.020182,6.847442,-8.574295,-8.162857,6.863433,8.798288,0.648396,1.764823,4.108681,9.380271,6.276493,-0.402240,-1.135637,2.108397,4.512105,2.126795,2.319738,5.671668,1.894131,-4.359269,2.275267,5.868293,0.728867,-2.861231,-7.649775,5.430879,8.707245,-3.010337,6.037356,-6.327630,6.947511,-8.021672,-3.935558,-6.825297,0.036217,-9.747657,3.995751,0.690555,-1.248832,8.565170,0.176947,-5.452433,0.698820,-6.328808,2.379946,1.123479,-9.071214,2.319407,5.014552,-2.955229,-1.220116,5.224717,6.855835,2.822964,-3.467397,-3.954205,1.439678,-0.508953,2.300612,5.568362,-8.322861,9.369353,-1.797869,7.773248,2.662346,-7.532161,4.488264,6.479988,0.007139,-7.485041,4.116693,3.782015,-2.445270,9.409379,6.901901,-4.412367,7.065298,-4.783269,-8.867415,2.128200,-8.171881,-2.572084,5.257376,-8.399727,-9.176080,-4.975912,3.448118,-6.684366,-8.124989,1.705994,-1.575772,3.710699,8.422129,-6.613550,9.006666,6.086353,9.536660,0.466937,6.517283,4.326841,4.239070,-7.476066,-9.467624,-2.741262,-7.218686,-4.022887,4.168633,4.790398,0.479838,-6.797456,1.580916,-4.242607,8.545827,-7.094071,2.124717,-0.144984,8.120394,0.882034,8.652524,-8.896394,4.565111,8.425804,-5.411635,-1.106795,-9.784141,0.999348,-6.818914,-7.415903,5.362752,1.518739,9.160817,7.261898,-5.791868,-1.533889,-3.211741,0.259721,1.533508,-5.462230,1.068838,9.452972,-5.439365,-2.157530,8.012291,-1.434542,3.272405,2.907494,-6.924498,7.149131,-6.399313,-1.828539,5.261761,-8.111762,-4.050338,-4.622527,8.210712,5.645494,-8.854721,1.709262,1.153148,3.138659,1.189755,2.714922,8.931106,-6.081036,-8.370335,5.709664,-0.013239,-2.397986,-4.200752,0.727860,-1.122744,8.391899,-8.691046,-8.480294,9.943071,-0.644087,9.907582,-5.323196,-9.354922,-3.564155,6.715951,-9.624796,0.105600,5.393039,-4.999491,-7.774708,1.343364,5.040663,-7.222957,9.869585,3.632849,-3.968603,1.889484,-8.212107,9.627130,-0.386350,-2.615963,-8.138158,3.292604,9.252942,-4.701958,9.183556,-2.351081,1.535650,-6.150996,-7.529268,-7.047187,-7.657082,7.690243,-5.241730,1.517192,4.747356,0.374487,-3.526649,5.279781,-2.424441,1.659820,-3.340145,1.685007,-6.174336,-0.476414,9.554903,3.169517,7.773713,-3.500315,9.989107,-0.226576,6.525229,-9.261382,4.280741,-5.960403,-1.476488,9.727099,0.264846,-1.319166,-1.390904,-1.274857,-2.763965,-6.469111,-1.042836,6.225670,-3.056352,-3.390964,4.580982,4.888285,2.422493,2.581437,1.894360,-8.527668,1.953063,-4.700508,4.577887,9.561247,-0.759661,5.985063,1.778289,-6.537753,8.411806,0.021818,-7.615749,7.103048,-2.196527,6.193458,6.238680,-5.360949,-8.270128,-4.650922,8.011604,2.796713,2.712153,-6.640829,0.629185,1.629380,-9.788181,-8.610252,5.023442,-9.603519,-7.438839,-1.159681,3.157414,-3.558581,6.996870,1.130075,-0.687036,6.027042,-2.420858,-8.228305,-8.648228,-8.782337,0.074738,1.569343,-0.518090,-6.330447,1.775080,-0.200550,-7.636532,7.327276,3.177377,-8.549475,2.722740,-2.781735,-5.667440,-5.988015,-6.187289,0.070269,3.173084,-6.702607,-8.819963,-9.229885,4.868243,-2.156378,1.225728,-2.821827,-7.635171,-2.742532,-0.585675,2.768478,-3.923320,1.233833,-5.715638,-9.821785,-5.941926,3.754434,5.393453,-0.692814,-6.626048,-7.685717,-7.723115,8.389688,-1.769307,3.171679,-7.703319,4.264250,-5.894584,2.382393,7.422307,-4.590649,-8.338865,-4.794920,6.662214,7.582661,9.039267,2.307910,-6.049846,-0.533774,-2.629508,7.448998,4.049064,4.614171,8.506925,-9.885219,-0.326843,-0.840175,1.643006,4.087580,-3.300662,-4.017905,-8.369436,9.412554,-3.487799,8.838024,6.656577,1.281564,8.185316,-0.999364,5.334159,4.657642,7.796653,0.241304,-9.068317,1.552632,0.734633,-9.724492,4.469079,-8.284125,-3.719100,1.933330,-7.029509,-1.726680,4.390880,-6.299032,4.727211,3.692823,-4.552118,2.787867,3.942084,3.008697,8.062177,-7.402105,3.507208,-5.622644,6.270939,-6.703451,3.911473,5.784677,9.132071,9.121730,-7.305085,-1.783660,5.602623,2.306464,-6.956950,9.881276,5.580649,5.731489,-2.402052,-9.008489,3.508937,1.896445,7.991326,1.364243,4.541833,8.700361,1.028686,-3.379030,-8.085611,0.046869,-1.934927,-0.502789,9.407236,-3.912961,7.277944,6.092825,7.235262,2.020862,2.574339,-6.029825,-5.356809,-2.096911,9.604086,-6.312249,8.216687,-9.552449,2.478166,6.205695,-8.866575,-9.138764,-7.487121,-1.117733,2.796990,-0.263074,6.753275,5.057702,-1.539880,6.847401,-7.436394,4.188321,-5.137171,0.231401,-8.732927,-2.950848,-7.000122,9.431495,-8.828316,0.151009,7.368232,-6.200380,-7.578790,-2.712745,-8.202281,-3.077687,-8.035278,-3.872331,6.503458,-2.117517,-3.097917,5.696243,5.091161,1.259057,-0.702959,4.917325,-6.968436,-5.133127,2.714498,3.777181,1.436889,-9.920931,-9.837986,-3.989145,-0.273647,6.580360,2.315416,-4.872499,0.963470,-6.399977,-6.294356,-8.218467,0.332765,2.696248,8.173770,-3.252572,-8.823334,-5.425957,2.760149,-7.770425,8.765889,-8.286806,-7.975317,-7.491477,-7.469217,-9.994880,-9.193140,8.987735,5.323346,8.135498,-1.643271,5.641949,-4.405034,8.808170,-9.098834,-2.148317,9.229223,-3.509680,4.728550,-2.903385,0.902921,-2.144458,3.224568,-9.829736,-7.889740,2.625603,3.845156,4.272161,0.244693,-9.746929,-1.524760,1.589908,1.620761,-4.134324,-3.878688,9.537120,9.588611,-1.866179,9.671076,1.779441,-1.682559,-6.298059,-9.688902,2.511170,-2.540703,8.987984,-2.686004,3.112400,8.384802,-1.665092,-2.163827,2.777377,4.397518,-4.608126,-3.377377,-4.635253,-0.605651,4.921555,-9.956560,-6.051988,-6.788614,-8.328653,2.335062,-4.983242,0.210996,-0.519414,-2.325982,7.759156,2.000529,7.127583,6.538422,-0.852837,-6.069264]], dtype = "float64")#candidate|2973|(2, 840)|const|float64
var_2974 = relay.var("var_2974", dtype = "float64", shape = (336,))#candidate|2974|(336,)|var|float64
var_2975 = relay.var("var_2975", dtype = "float64", shape = (3696,))#candidate|2975|(3696,)|var|float64
call_2972 = relay.TupleGetItem(func_1969_call(relay.reshape(const_2973.astype('float64'), [1680,]), relay.reshape(var_2974.astype('float64'), [1, 336]), relay.reshape(var_2975.astype('float64'), [11, 336]), relay.reshape(var_2975.astype('bool'), [11, 336]), ), 0)
call_2976 = relay.TupleGetItem(func_1974_call(relay.reshape(const_2973.astype('float64'), [1680,]), relay.reshape(var_2974.astype('float64'), [1, 336]), relay.reshape(var_2975.astype('float64'), [11, 336]), relay.reshape(var_2975.astype('bool'), [11, 336]), ), 0)
func_748_call = mod.get_global_var('func_748')
func_752_call = mutated_mod.get_global_var('func_752')
call_2977 = relay.TupleGetItem(func_748_call(relay.reshape(const_2973.astype('float64'), [7, 16, 15]), relay.reshape(var_2974.astype('float64'), [336,]), ), 5)
call_2978 = relay.TupleGetItem(func_752_call(relay.reshape(const_2973.astype('float64'), [7, 16, 15]), relay.reshape(var_2974.astype('float64'), [336,]), ), 5)
func_1227_call = mod.get_global_var('func_1227')
func_1229_call = mutated_mod.get_global_var('func_1229')
const_2996 = relay.const([2.200016,-0.766137,-4.908575,-7.928497,-3.351710,-2.747365,0.150901,4.178504,3.789658,6.941962,3.998134,-8.708763,-5.781236,1.144767,-8.418527,-3.285387,2.876394,-5.948310,7.066247,9.332110,3.384433,6.371032,8.051007,-3.576818,-6.867398,-5.594304,-1.577597,-8.961434,7.003471,-4.346535,8.751492,0.258456,-1.278681,-7.342422,-9.606912,0.207926,2.891268,2.194921,6.082965,7.064081,0.150515,2.467491,-1.813642,-0.314785,-7.443271,-4.337656,1.061997,-6.462401,0.895758,-9.668992,9.835041,7.990064,-3.157629,2.237587,6.347025,-2.268350,9.844800,-2.040344,5.960140,5.800479,-2.801522,6.548294,8.599194,9.833240,-2.465715,-1.689154,1.260623,-5.456412,-5.004092,7.727654,5.239878,-9.842581,1.307331,-2.888249,9.810234,-2.338153,4.732419,-5.338958,-8.482605,-6.009934,7.035573,-1.586300,-9.728882,-6.291067,-4.317885,-1.768783,6.185312,-6.866855,-5.259450,-5.913612,-0.685282,6.612264,-0.018410,-0.493111,2.579918,-3.972400,-5.360778,6.014258,1.520490,0.002278,6.563392,4.718898,6.361316,8.291073,9.112187,7.320577,9.508248,9.973882,-8.124670,-3.270903,-8.864990,-6.436006,4.202540,-6.649007,-6.749996,-5.325847,7.101695,-2.498667,-4.612972,-5.574436,3.229655,1.230808,-5.935368,1.200192,6.201317,-2.335911,-4.270462,-1.659794,-0.336824,-9.191397,-2.273811,-7.083391,4.996325,-1.968241,3.002187,0.988222,8.408292,5.245171,2.074194,-8.085474,-7.217077,3.189294,-6.118391,-4.693176,-0.801079,7.239694,0.252886,-7.979205,-9.391447,-2.076910,-1.528539,8.712508,9.979337,9.715554,4.611945,7.451649,2.608933,-1.571912,-3.009330,-8.090364,5.553872,6.598508,-2.611980,7.664702,9.602116,-8.443146,4.261083,0.520696,-5.006291,-2.912736,-6.054274,4.404430,-8.896003,4.753924,-6.650938,3.082954,2.994383,-4.299680,-3.751188,7.467592,-1.322792,5.917749,3.566453,-9.675787,-8.294881,0.182708,-6.816829,-9.275999,-2.705115,6.058994,9.082718,-4.360980,0.767566,-6.137037,1.599905,7.226775,1.363984,8.437260,6.823439,-8.835629,-1.355528,1.017353,-8.567338,5.353953,5.375265,5.428377,5.803114,-7.608817,9.043365,0.650860,-7.600694,-1.286878,3.446869,-0.248020,2.086176,-8.680557,-4.307040,-7.297498,5.026537,9.017902,-7.125971,-1.334464,-0.463551,-6.825448,9.840143,-7.139752,7.251401,-5.364211,7.608644,4.173098,4.976414,-8.365119,7.841324,4.129526,9.271708,-2.932328,4.196604,1.611088,9.909416,5.224306,4.245227,-0.619064,-3.118030,-7.251372,5.768570,-9.517491,8.381966,-1.957978,1.837603,-6.070176,-6.480716,-5.956199,5.827564,5.988528,-9.233144,9.902041,8.711702,-5.437280,-1.529994,4.167036,-6.496600,6.155318,-7.048389,0.990800,6.004513,-4.331444,-9.562900,5.646176,2.043570,-8.030436,-1.503852,7.921529,4.186592,3.201546,-8.719550,0.028856,6.494833,7.040480,-5.046944,5.925222,-9.990318,0.744948,8.364393,-1.933732,8.212968,-2.409714,-7.935466,5.620727,0.712697,-8.663666,7.065584,-9.209226,-0.058789,8.097007,-3.261269,-2.042237,-4.205802,1.720495,-0.316442,-2.995151,-7.987550,9.169639,3.282380,-3.800775,-7.831411,-7.541479,-6.750612,-3.171020,-4.386173,7.788097,-0.395065,9.080929,2.207523,-1.572340,-8.465729,-6.367177,8.038642,-4.502959,-1.071715,9.648893,5.166260,6.247243,9.325786,-8.365646,3.021310,-1.139749,4.019874,-2.113282,0.698789,-9.676500,-4.596059,-7.619558,3.900216,-7.589612,-6.830322,-1.698065,3.584361,5.624284,8.639364,3.912719,-7.516727,-8.408070,0.790771,-9.679254,-5.860148,3.350006,1.609350,-7.014048,-4.345677,3.300033,9.709744,-4.679630,7.567753,4.322487,1.697259,0.923569,-9.590146,1.686022,-2.216116,-3.762013,-9.241992,5.817858,-2.324808,-5.484614,-8.585591,5.560990,5.563252,5.996573,6.326237,8.000371,1.977752,-8.492712,9.339184,2.168633,-7.245809,-8.562758,7.355737,-1.000751,9.466641,-1.424990,-2.135691,5.060952,0.981856,-3.151286,0.903915,2.143453,-3.128863,1.134592,4.030892,-3.995770,-4.066564,7.627305,-9.110455,9.090276,-2.939698,-9.005441,8.851796,9.660942,-1.505912,-9.055367,2.581126,-9.399356,2.108977,4.839900,-9.347580,-1.113062,-5.995887,1.753474,-7.137854,5.107561,-6.669138,5.187216,1.741772,6.052183,7.203687,-9.964899,9.299805,-2.831109,-8.179969,-3.549388,7.697701,4.798038,-6.377605,7.354719,-7.092000,5.732812,-1.029525,-8.407005,8.347113,2.774457,0.771808,-7.783796,-6.445004,-4.773180,-2.240479,2.802920,8.675353,-2.989939,7.142545,-2.322005,-1.338813,4.341376,7.898843,-0.758788,8.126262,2.691763,8.532547,9.357057,-2.386101,-9.804229,-7.605156,1.011459,5.603124,0.297081,5.208568,-6.113912,-4.341008,-7.097454,0.701667,-7.270865,-4.796265,-2.996710,7.640258,6.001885,9.023054,8.840461,4.064812,3.850686,-5.879807,-0.118637,9.667983,5.367284,-3.876228,5.325322,-5.076321,-9.278270,8.167694,7.429802,-5.872486,-1.467710,-9.013344,-4.362347,-5.795723,-6.298096,-1.569408,-5.670777,4.142530,9.236485,2.199439,-3.814036,2.076898,-9.482470,1.426083,7.772251,-4.844932,5.034930,7.121021,1.862945,7.161419,-9.027492,-5.503591,0.305623,-6.864322,7.533210,7.418406,-7.488118,-3.018263,7.428138,-8.749315,6.940631,6.888685,4.531963,-4.603801,-4.828841,2.954402,-7.864501,-3.776838,3.444737,-0.358057,-1.031851,-6.877784,-1.885461,-6.601007,-2.030586,7.080246,5.773092,-4.304190,7.012907,1.390682,1.641518,4.312806,-4.563722,3.270210,-1.272920,-6.366786,-6.299722,7.364486,7.349762,-0.527329,-6.508621,-8.752159,-8.926576,1.169905,4.074386,-7.794261,9.487974,-4.034150,6.910903,0.885949,-3.507331,-6.760981,3.812504,2.412877,4.527830,-6.404720,1.618759,-3.536801,-2.627699,-0.971743,-0.071804,-0.502008,-9.026671,-1.094906,-4.263858,9.582292,6.777979,6.613615,-7.285350,-7.026258,1.334950,0.616509,2.096666,-8.460476,5.579971,6.891428,8.948032,9.054964,8.035722,0.292174,-4.769135,-8.012607,8.877286,-8.027321,-8.018727,4.014183,8.338973,0.981618,-3.009734,-7.266222,-2.666104,-9.075518,5.349281,5.261136,4.401185,7.683822,4.403050,9.119128,6.339074,-5.232993,-9.266867,8.959594,7.153214,-8.303200,9.462355,6.461185,6.978949,9.174764,-3.144007,6.090174,-8.969502,2.504661,-0.937749,-6.897368,-2.678946,5.369406,-0.780502,-3.833572,9.206782,-7.415387,-8.942593,-0.207747,6.312127,-5.607147,-1.597717,5.685873,-7.278664,1.977700,2.747195,9.236002,-7.712720,2.289074,1.300592,-1.448548,-6.635526,1.362859,1.880261,-5.418651,-2.824877,-4.187372,-6.777235,3.827329,-7.759140,5.204123,-7.928313,7.120455,-9.212779,6.629222,-1.857183,-9.998830,-0.228293,0.479745,-0.543636,-9.115713,8.599171,6.968492,-5.412658,-6.362615,2.285264,7.037696,-3.106274,8.451377,8.885639,8.496724,-2.189260,-2.453015,2.764068,-3.808530,-5.427610,-3.200642,2.604396,1.528200,-3.333917,-1.044818,-8.593824,8.032453,-6.441870,8.236076,-9.801870,-3.149132,-7.618536,9.812615,-4.724966,0.591174,7.380381,-2.322753,-9.534225,-1.393127,-3.508103,-8.477184,-6.747540,6.255200,-3.768975,-4.185704,3.780756,-2.096170,-4.905856,-9.313744,3.656469,6.589208,0.443984,-3.057811,8.494455,7.992626,4.752949,-8.538889,0.345415,5.930203,-1.374644,-7.165844,-9.769575,-5.847577,5.874500,2.003932,-6.707231,0.692424,8.961420,7.076202,-6.791446,-1.647048,0.047385,-7.758111,-0.141022,-8.552167,0.595188,8.334333,6.304608,-4.367508,-3.228483,-3.314388,-2.965029,-3.939690,8.114597,5.370097,-8.778494,0.269717,-6.365570,3.587827,4.291267,-4.589965,-1.725687,-7.392653,4.576662,-8.207790,9.714692,-0.769156,-2.407188,3.113760,0.292477,-8.431807,-1.762254,8.664101,0.441329,6.522293,-3.402282,2.904009,0.717566,8.959395,2.345874,-3.652723,-8.502524,-8.786587,-7.193482,-7.672709,-1.785348,1.264795,-6.006415,-7.268156,0.043160,7.429196,3.730143,3.580008,-9.288529,9.894923,-0.977044,-9.578934,-7.947911,-4.968214,-6.568135,-3.308095,4.421007,8.689435,-5.173128,9.038344,-2.294772,-1.747823,3.629803,-9.021949,-0.956814,4.739253,-7.193991,7.250883,8.482268,8.962910,-8.695971,-9.889519,7.080730,1.170907,1.265261,-0.836193,7.439222,0.221349,-3.959363,6.462860,6.708240,3.249977,-3.779698,7.190989,-1.543089,-5.099886,-6.036222,-2.055308,-3.882192,-5.833007,-8.298792,6.769478,2.258140,0.790621,6.510625,-9.186650,8.221179,-8.516670,-0.406167,2.199022,-9.398244,0.704235,8.479550,-4.155122,3.418400,7.112862,8.190960,-1.160525,-1.370110,-5.773604,-7.060051,-1.686611,8.340868,5.974629,-7.004352,-1.302220,-4.280766,-7.109498,-5.294247,-2.450222,7.141664,8.514527,-1.952556,4.813892,5.023750,-2.322675,-2.088268,-2.663815,7.914005,7.424937,-5.184540,-5.604758,3.610405,-6.644271,-2.433821,6.752590,9.979485,-4.203782,-3.300911,-0.415132,-3.397827,0.924651,5.857195,-4.538492,-0.044357,2.757739,5.840709,7.331580,-4.914455,-9.912353,-0.033576,-7.201297,3.254594,-5.627754,-7.253497,0.310321,0.580563,5.037134,-7.904674,-7.350985,1.844282,-4.341604,2.965794,0.111984,4.820782,-7.924333,4.149098,7.170299,-6.185624,5.912441,-6.762009,5.014148,6.639765,0.544113,-2.110720,-0.436023,2.854521,-8.290049,1.372049,-0.968156,-9.974376,-4.900156,7.248961,-5.975417,5.171550,-0.895410,-7.684573,-0.661141,-9.854054,-8.018134,2.445618,-3.213034,2.792252,4.479269,-4.063199,8.875576,4.324103,-7.799555,-0.316522,-5.583256,-7.609892,5.219560,-3.400338,8.320187,6.243578,0.261286,-4.027308,6.228283,-4.222279,-4.557461,-4.728484,1.044534,-3.176959,-3.477958,-2.192385,-1.726444,4.040264,-6.462367,7.295230,-3.406340,0.765394,6.660376,5.688905,0.388236,-6.436826,-5.530547,2.615716,-5.320972,-4.780579,-2.868323,7.534647,3.439368,7.375013,-5.986955,6.990458,7.559497,-5.615933,2.626673,-7.173183,5.292736,-9.037702,0.742179,-6.333575,2.696863,3.503809,5.454183,9.570167,1.272361,-0.085140,2.707105,8.557135,-4.939524,-8.963270,5.386874,-2.172913,4.999140,8.007938,1.484356,-0.994726,-9.165458,-8.708047,-9.349299,-1.143578,-6.381390,5.445827,1.154255,6.421753,-7.445743,5.310080,-1.793825,-7.038779,-9.538393,-4.291850,6.283209,6.638146,-1.725621,-8.092513,3.664498,6.448523,3.676003,9.431757,0.878955,3.622872,-8.893923,9.266816,-6.505966,-9.422166,4.531452,-7.422412,9.470343,-8.999202,-2.409261,-2.243985,-4.027864,8.688246,-1.075713,-2.590880,1.339394,2.394072,-3.253170,-3.641605,3.387829,2.387323,-2.162403,1.601790,9.429962,6.566730,-0.219541,0.948422,9.625282,8.777572,-1.411680,2.466692,6.675116,3.546805,-9.982272,-8.539299,1.206061,-5.339247,-0.356763,0.656264,-8.999103,1.516431,7.187014,2.230616,9.540786,-1.629070,-1.009496,-0.421025,0.126281,1.824942,0.746534,3.763208,4.046293,-8.000863,6.070403,-2.029319,7.413393,4.041058,-9.006145,4.990673,4.147966,7.956306,-7.874984,1.799926,-1.752753,8.295145,-1.551443,-5.842859,-6.367583,8.655409,-3.197118,2.703466,1.838347,-6.718002,4.061150,-8.657530,-2.288467,-5.268239,9.709525,-3.555874,-5.852290,0.752485,-2.494682,2.151030,0.776815,-2.474985,-2.280683,8.182182,-0.684854,4.377516,3.132509,-4.348872,-7.640271,-5.108920,-5.843439,6.971953,-4.314664,-3.345346,-5.978366,-7.071531,-7.509713,5.630834,-7.742678,9.651523,3.022703,8.943119,-1.934912,-7.661910,-4.796478,-8.390256,1.132435,-1.294900,-0.605011,-4.597808,-8.448116,-4.119542,4.214533,6.055562,-6.073669,4.992529,7.761837,3.177710,-4.611676,-1.855600,-0.458362,-4.250141,-2.973816,-7.676652,1.988459,0.541574,3.062674,-6.261353,-0.761787,-3.816371,-5.576334,-5.524177,-3.988980,3.020707,9.888403,-2.090308,-2.244910,5.758081,2.531304,-5.782050,-8.270678,-9.426341,0.973614,-9.111134,-3.529594,0.551385,-3.389460,-5.748797,8.004439,-2.595833,-9.467582,-6.923831,9.184233,5.990191,0.540538,0.209714,-8.428473,6.601314,-5.540281,4.560284,8.476161,-3.816737,-4.932070,-7.944881,-3.220910,-8.143764,3.224449,-7.183895,-3.111403,9.645804,9.624650,2.250554,-7.134663,1.501614,-5.449679,7.963322,9.623518,-1.898927,3.641799,5.645407,8.117859,-5.423265,2.550833,4.417707,-3.591865,3.115752,2.808559,6.116748,-8.674878,-3.224075,1.918453,-2.514923,0.641038,-4.855257,9.078478,0.859968,6.393636,-8.840619,-1.146871,-6.807183,-1.684122,-8.064756,-9.422534,-4.425484,-2.219717,-9.663700,-2.362554,7.367303,8.900681,-2.116190,8.643284,9.117285,0.633642,6.926779,2.106673,6.843134,-6.116157,8.263043,5.889203,2.375723,-0.883720,-1.444697,-5.656984,4.060294,1.430259,-8.624991,0.535862,-0.900945,4.592863,-8.502727,8.163236,1.942813,8.374949,6.239000,-8.813210,-4.134389,-2.190630,7.262137,-0.441858,-0.085923,2.132555,6.601061,-2.047490,5.291598,2.596744,-2.069211,6.703511,-0.845229,-5.654249,-9.020840,-0.874650,0.970449,7.021684,9.310067,1.314443,0.447332,3.534063,3.987146,-9.251556,4.145108,-1.676534,8.609949,7.451367,-8.525086,0.991515,-2.198698,-3.862521,-6.986209,3.127905,5.897431,7.904997,9.022667,1.112324,-3.811785,4.226786,-0.821285,2.418307,-4.849559,2.911158,-8.457751,6.596725,5.937924,-4.497708,9.782646,3.124614,4.425980,2.585532,9.292682,2.212628,0.211642,-1.497982,0.560813,5.040126,-9.072137,-7.049449,9.610336,-9.266240,9.124863,-0.961956,-1.815766,-2.565808,-0.011356,-3.257571,-5.455727,2.465106,-7.363789,3.894060,1.543864,1.478182,-3.575059,-1.180866,9.928196,-6.733803,6.083361,0.741609,-8.220095,1.659589,-5.744796,9.339551,-5.750007,-5.735620,-2.749882,-7.200049,-3.680730,6.997813,7.506308,-1.902888,-0.882830,-6.138417,8.089064,0.359830,3.445609,-0.356877,-6.480202,-3.747660,-0.684979,-0.267439,7.131693,-0.887097,-8.847885,-7.438898,2.540872,2.100998,3.076524,6.180163,6.608759,-5.798906,-6.644510,-2.637433,-8.914377,9.345129,9.016124,3.935132,-9.206649,-3.674885,-2.939736,-9.531419,4.052863,6.916308,4.227516,0.604634,-3.598899,5.222638,-3.503507,2.797407,6.867969,5.104843,-0.186660,0.949845,-7.813184,-8.972983,-4.219822,-9.021904,-7.512923,-5.192970,8.075866,-5.957318,0.395382,-1.379656,-5.311167,8.192553,-7.367715,-2.665311,5.993818,9.457145,-9.413208,-3.526483,-5.190058,-0.879264,8.887751,8.362185,4.575884,-3.469519,2.341841,-0.296162,-8.396949,1.837648,3.448647,-4.776246,5.029425,-1.882442,5.001264,-6.854816,-1.023900,-3.329742,5.468257,-9.861242,0.160340,-9.364165,3.552613,-7.596391,-7.748597,-4.326597,-7.951334,-8.907381,-8.290559,9.639105,-9.366174,7.278508,-7.033018,-6.506975,9.777499,-7.907910,4.273179,-5.373807,-1.405317,-5.922446,-4.394596,-5.552883,3.398493,9.970590,8.003727,3.762550,-7.024352,-5.722516,-6.756770,5.573736,5.725986,6.894161,-8.792380,1.278272,-0.346733,0.121067,-9.554298,1.065669,-6.434539,4.748544,4.870592,6.209215,-8.807782,4.071759,-1.388936,-7.521704,-3.601480,-6.467529,6.740820,6.875063,-6.210786,8.899320,-0.005384,-0.115895,5.479259,0.478230,0.175639,-6.170448,-5.972282,-4.552637,-3.539186,7.531962,-0.272591,2.069725,7.662738,-8.402069,0.933417,3.910908,-2.596207,5.836299,3.346308,5.952834,3.060529,-2.783404,2.098200,8.661986,-9.096332,-7.982701,-3.719592,-6.177269,4.983283,7.086494,-1.908678,-7.720355,5.254151,-7.109237,-6.560367,6.080115,-5.241896,-1.870903,-6.420642,6.332574,-4.633045,-6.001673,-4.904156,-0.636881,2.471681,-3.981827,-1.023284,-2.844776,-6.775727,2.580025,-0.402747,5.704683,-3.572575,-2.339021,6.412855,0.214638,-5.289881,-2.479156,1.338584,-9.957720,7.366477,-3.948670,9.657138,6.182864,-6.526387,8.720693,3.868530,1.646726,-7.250572,-3.384192,8.298580,6.533813,5.155291,-7.285155,-8.107760,1.685022,-3.175799,-5.663883,8.892255,8.732835,-7.191539,-6.267718,9.346023,2.071958,-8.920096,1.073249,-8.301155,2.651766,0.626470,-9.203487,-4.484463,8.421109,8.015154,-3.646461,6.142808,-1.154980,-3.047125,9.179020,-9.250898,8.925981,-8.901123,2.935561,4.905452,5.816644,-8.686297,3.476360,4.329025,0.375296,-7.691420,0.954180,-0.305342,4.502185,2.699240,-6.324791,1.159533,-7.457245,6.639226,-7.487406,-2.583073,4.187058,4.991807,8.751419,3.126531,-2.314826,-9.887383,5.737154,1.223902,-7.519964,0.537978,9.422177,-5.703269,-1.261761,6.498198,7.394462,-0.436285,-1.670942,2.099778,2.751360,4.263618,-3.802861,0.752935,-6.487463,-5.531402,0.695524,9.012012,-4.427197,-4.264679,6.495193,-8.558036,9.909793,5.788350,-7.435047,5.651485,5.940352,7.011906,8.187224,6.878053,-3.614287,-4.612165,5.964317,-3.126568,8.141397,0.724709,-9.756892,5.535004,-2.016221,4.601417,4.559200,-1.402093,4.287790,-8.270394,5.477140,-9.073070,3.030220,9.870039,5.666426,4.026241,4.512646,0.778176,-0.544263,1.132429,-3.352235,9.007286,-3.987058,-1.143935,-9.290475,-4.691750,3.533342,9.262036,1.217621,0.905545,-7.663689,0.824386,8.730113,0.708039,-6.040181,5.949405,0.900376,-0.349548,-2.285324,-2.937773,-3.732628,-3.873306,0.972244,-9.893004,3.538302,2.860215,-4.161743,3.561524,-0.018331,0.664262,7.005457,0.624638,-9.802162,-2.568150,-9.501063,1.672631,6.019744,-6.863666,3.118366,9.615340,6.296067,-1.509478,-3.727858,3.589655,-2.494777,5.189607,1.337043,-0.666125,-9.782625,6.899618,4.950372,6.487075,-2.073231,-6.464299,7.931180,-9.345783,-1.922781,-1.701194,-0.585966,4.851765,3.352043,6.581895,7.475922,-7.407406,-8.547749,2.088886,-9.002248,6.122284,-7.870271,-3.468276,7.795280,-0.107025,5.817863,-8.636645,2.620780,-4.857829,-3.698523,4.529438,6.970104,-4.402400,5.994415,-7.058487,-6.015162,4.498272,3.025740,-5.352495,-5.142824,-3.149921,-5.265277,-8.840592,7.224748,-5.667667,-1.200101,2.388171,7.164505,9.499393,8.251341,-2.660775,6.621770,6.834932,2.442703,-3.271161,-2.663997,9.748201,2.741858,-3.503818,-9.353299,9.219904,3.862670,-4.673691,-0.813592,8.447652,6.326500,3.848644,6.828743,6.377566,8.175066,9.520113,6.766576,-4.626560,-3.536358,4.565078,0.078795,2.448972,0.368325,8.603517,0.853001,-7.329831,-9.330801,-0.682031,-2.010309,-1.022182,6.599563,6.460724,-0.441641,5.696918,8.517760,9.628946,1.835902,0.446377,-2.156333,-5.569599,8.678388,8.394872,4.467710,-1.845962,5.580722,3.728929,-0.452873,2.009583,-0.180589,2.270701,9.531333,-6.933490,8.408359,-6.736356,-2.811369,8.082783,1.914982,3.061487,-1.851196,-6.384837,-0.604214,-2.279214,-4.355305,4.147900,2.496505,-6.465243,6.529291,5.188881,-5.961856,-0.523164,3.292339,8.717861,-5.782796,1.787636,-5.867773,1.544633,5.384302,1.968731,3.031277,-5.789789,4.765875,-5.780079,6.447596,8.254109,6.663091,-1.259038,7.082188,1.376869,-3.019344,9.391721,-2.012714,2.001577,-5.452750,8.019791,9.700202,-7.171469,5.221019,0.794903,8.689549,-4.648099,-4.079792,8.369930,-4.103603,-4.627506,5.131711,8.358194,-5.269124,3.210585,7.512354,-7.133636,-0.556678,5.355491,3.819964,-9.040600,7.441851,0.405298,6.632887,-2.132481,1.754756,-5.454394,-2.873017,-0.748432,-7.130000,2.987442,5.195758,-1.614002,6.235426,5.751437,-5.204272,2.819367,-3.409661,0.336685,8.870253,-3.186603,-2.244647,9.686328,-8.823023,6.235666,2.596346,4.503639,0.550253,-7.091775,2.897854,0.328263,7.435376,-4.160850,-4.965280,7.623807,6.770853,-9.645586,-8.612260,-0.228521,-6.507307,8.465663,-5.989263,-0.237248,-7.763446,-9.363014,-7.345236,5.516359,-8.889747,1.754628,0.895644,-0.918207,-5.636456,0.329376,-0.155094,-5.211185,0.363855,-5.466227,-1.930069,5.381334,5.316735,-8.964825,-2.717440,7.417252,2.503943,5.901745,8.466963,8.129439,-1.285038,-0.761483,-2.533878,6.005600,-6.679154,-2.061903,-3.804478,0.828950,2.467914,7.402750,6.482843,1.945200,-6.108151,-0.458779,-6.332595,6.496164,-9.102329,-3.664246,-7.025469,-6.462960,7.271967,4.424643,0.696358,-2.522810,5.012375,-6.824892,-9.509748,8.357675,-8.819626,0.909117,-3.577891,1.733198,-5.399061,7.302384,-1.024370,-5.976946,-3.687591,1.945317,-1.733520,6.865394,-5.227955,6.296699,7.576064,5.568401,-6.527650,-6.315616,7.130359,7.446967,8.295654,3.991480,-6.818338,-6.793880,4.724499,-1.390532,3.519982,7.572462,9.452603,-1.100365,-3.896050,-3.333683,-8.452352,7.051331,4.896324,-1.911667,5.671239,-1.173218,2.688880,0.191295,-0.090034,-4.720485,7.437504,2.035654,-1.627716,3.258965,0.771306,7.711462,-9.426671,-4.534246,5.003435,9.844809,-3.444748,8.120763,-3.316135,-5.792344,-0.793812,-6.434706,9.789249,7.514868,8.549327,-3.774946,-3.850545,3.738726,-7.910341,-0.999818,-0.245041,-1.009903,2.428301,-6.254815,-2.617981,2.953331,6.292536,-1.569846,5.266667,4.318036,-7.849912,-2.174200,5.811515,-1.636236,8.642676,-9.139247,-7.766235,-2.443463,-5.423837,4.001903,3.003348,1.355181,-7.153570,7.132905,0.284737,-4.972710,-9.025578,0.909333,-0.963198,4.398359,-2.985026,5.049365,3.620665,3.533986,-3.514368,-8.783682,3.883841,8.388019,-2.588790,3.033433,9.032784,8.273275,-8.600241,3.873864,-1.188767,-1.333986,-4.868919,5.467074,5.084734,9.757468,5.368007,-9.877881,-7.880518,-6.898138,-0.960516,-5.344521,-3.340926,-4.798130,-6.388918,0.306479,-8.656539,-7.258432,-5.402571,-3.970306,-5.224064,3.899056,-6.661281,-7.926431,4.401188,4.645762,-4.274731,0.154740,6.106115,-3.879259,-9.478104,3.765446,2.760210,1.307584,4.052056,-7.773012,-9.823075,-8.868403,3.420915,8.963676,7.749414,-0.501641,-6.612979,-9.061303,9.948096,-0.639901,5.602159,8.856537,3.126947,-2.250226,-1.177978,-8.994162,-3.439574,9.006493,5.388357,9.184978,1.584304,-4.406359,5.400626,-6.488722,0.165780,-3.047697,-6.038610,-3.765107,2.715809,-1.737541,0.345245,-4.051253,2.638226,2.354352,-6.097962,-7.424370,-1.211963,2.668378,8.377563,0.807269,-5.645058,3.039518,1.479916,-4.866689,-0.518261,-4.677109,7.518682,-4.536869,0.234783,8.893197,-6.327565,1.183265,6.196175,-2.542241,-4.591341,0.716214,-6.002672,0.724049,-5.931410,-5.508777,9.727090,-5.206222,2.190891,0.352438,-6.638059,-3.595811,-2.046660,-5.763006,-2.616388,3.198941,-3.547849,-6.863546,9.934819,-4.598225,1.656967,7.817051,1.645278,-3.602220,-6.473723,0.191020,-2.814205,7.586481,-3.570766,-0.229761,-4.008472,1.664560,8.381704,9.140546,-2.285077,-7.748723,-6.399271,-3.574827,-1.532617,-6.013519,-6.943474,4.256136,3.306277,-3.762748,-3.269350,1.232191,-7.753162,7.783661,-2.455461,-4.104990,-1.747487,-5.338249,-8.873137,7.244364,4.226660,2.251858,4.640516,3.911887,8.376218,-0.218581,-3.470246,4.080415,5.701722,-5.174463,1.955416,-7.159478,-6.208495,1.906291,7.383332,0.453519,-2.095019,-4.518677,1.937322,6.106906,3.413256,7.403340,8.162493,-7.233211,2.481110,-9.590964,-9.476189,4.978886,5.500427,8.267976,4.297530,-6.721020,-2.336353,1.828839,-4.046121,-7.890474,8.803975,4.568681,-7.513680,5.989788,9.693181,2.717224,-1.601626,-5.150222,9.971269,-2.945252,-4.724516,-4.966706,7.407856,-4.368711,-3.305502,-6.198636,-6.414089,-2.662966,6.445606,4.669744,0.296298,-3.920037,0.761527,-2.396569,1.433465,3.865964,4.818427,-7.059343,9.745538,-9.368578,8.223876,9.220726,-9.081021,9.407963,9.772405,-9.895265,5.665711,-6.174524,4.579513,2.060278,4.305805,-2.311149,-8.437051,-1.806694,-6.080215,-4.932175,2.529110,3.978757,1.785000,9.474765,6.110237,-6.064991,4.849122,2.994226,2.104506,1.739107,0.519977,8.017582,-6.998705,-6.496757,-5.218434,-3.945929,-1.030901,6.022993,-2.903211,1.591352,7.593467,-5.827934,-8.065820,4.620009,-6.114628,1.148840,5.866215,-7.119030,-3.752491,-1.422874,9.495566,-3.517448,-5.553660,9.077073,-7.424739,7.524679,-3.735114,-5.503655,2.518513,-6.255281,-9.005928,-0.291537,-6.784716,3.350397,9.537838,8.435405,9.975525,-0.782888,-6.521652,-4.726817,-4.832020,-2.671944,-4.697892,-3.101753,-4.194009,6.867027,-0.205688,-5.357059,-5.209513,1.676300,6.731965,-4.834575,-2.546243,7.905302,6.085833,3.102039,8.833179,-1.872785,2.158613,3.110526,-9.015359,-6.406838,-1.042680,7.678021,7.467379,-5.621364,-7.776391,5.670854,-8.834276,3.519219,-9.264997,6.944361,-3.410674,4.050763,-2.610669,7.611215,-3.218738,3.910040,0.893681,3.079863,9.154473,2.553313,4.820774,-2.339157,6.498599,4.052001,4.577133,0.011654,-0.766529,1.284046,-5.105987,9.971323,-4.951751,1.645209,-7.210194,-9.428140,1.200472,5.835805,-4.185917,-8.628677,0.001874,-9.320505,-7.028534,-3.320546,-5.396487,-7.610515,-3.852099,9.930830,-9.184078,-7.705532,-7.324523,0.319914,7.593558,-8.855562,-6.583876,8.851203,-4.228128,-9.144691,-1.526623,5.485687,-1.527068,8.482791,-3.186692,-3.514650,3.867204,5.897643,0.297998,3.657260,1.046485,0.455120,-2.362427,3.033107,-6.948965,-0.675847,-4.626668,6.236389,5.992232,6.198110,-4.058233,-9.405104,4.678945,1.633178,-1.792748,3.769244,-0.230504,-7.525366,2.098877,0.023814,0.087777,-9.866857,2.787019,6.745139,-1.494194,-3.851998,-5.776342,8.392975,-7.890111,-2.617242,0.482198,-2.897097,-7.383489,5.028470,-8.173205,6.541007,-6.917207,6.227750,-7.905097,-4.304567,-9.992875,0.819638,2.885795,-0.712697,5.027974,8.405539,-3.671055,-8.886146,-6.296462,-3.771471,-8.505259,-2.033368,-7.620324,-2.438870,-2.785571,2.087434,-0.773849,4.017215,4.888256,9.158866,2.604357,-3.538001,3.418654,-8.536950,-9.927831,-9.849715,6.692154,6.619232,1.638156,-1.411340,-5.573912,-6.575972,-4.510945,-0.823192,4.691802,-2.621438,-3.633860,-1.069186,8.889245,7.436845,9.674002,-3.593286,1.592995,-9.519376,0.225397,-5.288223,8.383084,-8.427937,4.560077,5.272671,0.335714,3.953583,-0.185958,3.883762,-6.936051,4.569177,-3.255549,-9.306294,4.321627,-2.537393,6.812325,-9.928889,4.652600,-4.310554,-4.248789,6.587709,7.758297,0.150067,-6.003567,1.321362,-3.424988,8.113010,-7.309412,-2.793863,-5.661872,1.915505,2.572595,-2.045181,-1.752178,1.694056,2.320866,-7.728615,4.642511,-9.757713,-0.249757,0.274177,1.260217,-4.564325], dtype = "float64")#candidate|2996|(2560,)|const|float64
call_2995 = func_1227_call(relay.reshape(const_2996.astype('float64'), [16, 10, 16]))
call_2997 = func_1227_call(relay.reshape(const_2996.astype('float64'), [16, 10, 16]))
bop_2998 = relay.greater_equal(const_2996.astype('bool'), relay.reshape(call_2995.astype('bool'), relay.shape_of(const_2996))) # shape=(2560,)
bop_3001 = relay.greater_equal(const_2996.astype('bool'), relay.reshape(call_2997.astype('bool'), relay.shape_of(const_2996))) # shape=(2560,)
output = relay.Tuple([call_2956,call_2972,const_2973,var_2974,var_2975,call_2977,bop_2998,])
output2 = relay.Tuple([call_2957,call_2976,const_2973,var_2974,var_2975,call_2978,bop_3001,])
func_3002 = relay.Function([var_2974,var_2975,], output)
mod['func_3002'] = func_3002
mod = relay.transform.InferType()(mod)
var_3003 = relay.var("var_3003", dtype = "float64", shape = (336,))#candidate|3003|(336,)|var|float64
var_3004 = relay.var("var_3004", dtype = "float64", shape = (3696,))#candidate|3004|(3696,)|var|float64
output = func_3002(var_3003,var_3004,)
func_3005 = relay.Function([var_3003,var_3004,], output)
mutated_mod['func_3005'] = func_3005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mod.get_global_var('func_1900')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_3030 = func_1900_call()
call_3031 = func_1900_call()
output = call_3030
output2 = call_3031
func_3043 = relay.Function([], output)
mod['func_3043'] = func_3043
mod = relay.transform.InferType()(mod)
mutated_mod['func_3043'] = func_3043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3043_call = mutated_mod.get_global_var('func_3043')
call_3044 = func_3043_call()
output = call_3044
func_3045 = relay.Function([], output)
mutated_mod['func_3045'] = func_3045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2255_call = mod.get_global_var('func_2255')
func_2256_call = mutated_mod.get_global_var('func_2256')
call_3063 = relay.TupleGetItem(func_2255_call(), 1)
call_3064 = relay.TupleGetItem(func_2256_call(), 1)
output = relay.Tuple([call_3063,])
output2 = relay.Tuple([call_3064,])
func_3065 = relay.Function([], output)
mod['func_3065'] = func_3065
mod = relay.transform.InferType()(mod)
output = func_3065()
func_3066 = relay.Function([], output)
mutated_mod['func_3066'] = func_3066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3043_call = mod.get_global_var('func_3043')
func_3045_call = mutated_mod.get_global_var('func_3045')
call_3133 = func_3043_call()
call_3134 = func_3043_call()
func_3002_call = mod.get_global_var('func_3002')
func_3005_call = mutated_mod.get_global_var('func_3005')
var_3136 = relay.var("var_3136", dtype = "float64", shape = (168, 2))#candidate|3136|(168, 2)|var|float64
const_3137 = relay.const([7.541213,5.256272,-8.986123,0.290345,-1.032828,5.979724,-4.144258,-1.316059,9.832394,2.334746,-5.551474,-9.940080,1.128058,5.902580,1.609639,-0.823373,3.076749,9.918036,0.655810,-2.017094,0.717493,-3.369969,1.145668,1.721152,2.787149,-8.091783,-8.043302,6.762509,-7.732912,-4.461386,-4.642390,-7.692768,3.329054,7.795703,-6.673761,-8.354078,-0.238638,-4.041974,0.927838,-5.329263,-0.184510,-4.746378,6.873834,-4.394470,-6.639125,-5.052414,6.847085,7.301083,-7.458515,-4.068275,-7.821177,-0.245480,0.712385,8.902720,-5.389813,6.817988,-4.798731,-6.835679,9.711220,0.702889,4.933382,5.037095,-3.313319,8.462090,9.032952,-2.531838,4.519828,-2.538731,6.011177,3.748488,-3.253656,-3.754358,4.958986,-2.144405,5.715524,-9.721121,7.799071,0.423036,-8.902705,-6.717272,-1.342950,-0.194925,-3.504159,-1.266069,-7.539184,1.039402,6.487627,2.564079,-0.949934,4.754072,5.365524,7.076026,2.044413,-4.058616,9.785286,-0.438338,0.113700,3.742337,2.105655,7.597821,-2.788871,-4.392905,-9.828313,-1.250119,-7.374645,-8.843228,6.552498,-2.545915,9.642516,9.757236,-3.329125,-6.843613,-4.059844,2.640584,-0.883657,2.364280,0.068339,-5.756635,1.628748,1.973392,-1.658083,8.476515,7.746084,7.918796,-0.282656,0.069512,-3.094030,1.295821,-6.264242,-5.270260,5.499889,0.184529,-5.509052,2.754445,-7.371917,9.850680,-4.297193,-4.328308,-1.625390,-0.280016,-4.992135,7.711755,-2.722441,6.103295,8.100482,9.152452,6.094090,-8.922326,-2.777176,8.448784,-9.994549,2.811725,4.271011,-6.767301,0.526037,1.194073,-8.842127,-6.402195,6.968484,8.052050,-6.056079,1.655656,2.619482,4.405927,4.595728,-5.085371,9.551769,0.943889,-0.067677,-4.754408,-8.316197,0.979151,1.442925,0.968396,-0.985440,2.381556,1.027117,-7.836780,-1.145809,-0.802985,8.726656,2.043451,8.840564,7.469624,-6.188910,5.453641,0.194970,-8.885332,4.437259,5.868397,-4.626268,-3.688084,-1.847712,4.670792,-4.425358,-9.167619,-1.867433,-2.316832,-2.929744,0.731003,4.850832,-5.291842,-5.016575,4.650227,-7.391171,7.220432,-7.529204,7.203485,-2.409349,0.365470,-1.907548,-1.040651,-9.147908,-8.293258,7.896233,4.398204,5.021054,5.788104,-0.730351,0.163305,-4.252702,-3.215221,-6.419363,1.694430,-2.011751,1.226513,-6.549130,8.558064,-6.573591,-0.691607,-9.456477,-8.615086,5.180110,4.723841,7.451535,-0.857886,6.420918,-7.664908,-0.615125,-8.598672,-3.581613,-3.284375,-2.399135,8.483734,7.910206,-7.409998,-9.620763,7.188953,-7.803648,9.524498,5.823269,4.930246,-1.351196,-4.674301,6.499613,4.149619,-3.126114,2.290244,-6.989936,9.239596,-0.538622,7.640552,2.109066,-1.732188,9.116776,4.427565,0.822127,0.428002,-4.603034,0.575530,-9.057839,1.452644,-2.905242,2.194086,-5.751472,-6.379910,-8.076148,7.591173,3.033750,-2.201729,6.442446,9.133728,-6.798563,9.035790,6.931215,6.490219,5.554222,-5.959491,3.075932,-3.329214,3.263507,-4.641036,-1.147242,3.966418,6.640385,-4.219288,9.746672,0.518377,-0.483348,-7.725197,7.537442,-9.713904,-8.874574,-1.788976,-8.600654,4.644513,-1.697299,-8.734996,1.153118,-3.531217,3.769789,-3.048293,-1.774178,-9.358495,-4.175780,-6.039562,-6.023146,-2.839906,-4.021943,-3.690297,-7.533224,-1.493832,8.034008,9.185503,-8.110547,4.773953,9.511410,-3.321876,-5.131565,-0.689285,6.163520,-5.902420,2.391899,-7.702206,-6.623017,2.918288,6.148774,4.490806,-8.857326,6.422517,-5.290752,-8.822672,-6.267647,9.848232,4.798017,7.573987,1.088704,6.717901,7.280848,-2.718099,-2.441424,-4.939243,1.744130,6.881952,-6.134025,-0.605234,9.108891,-9.041295,6.598809,-7.698055,-5.999362,3.507012,-3.523544,-6.582246,-1.203863,3.154783,-0.367017,-4.864426,6.531851,6.549423,9.305227,-0.210746,-9.517196,-8.144776,-1.858545,9.992926,5.876721,-4.725950,9.982582,8.786354,4.226919,-5.725342,-0.072890,6.602650,-6.461954,1.236481,-8.107402,1.635558,5.557334,-8.451106,-6.558032,-3.219285,-2.714740,1.872945,0.910336,-5.463428,8.875339,8.394268,9.727549,5.458292,6.691554,5.376410,-6.231951,2.483931,4.307351,-9.166656,9.938264,3.771264,5.932448,2.493510,4.225134,-7.581688,-4.318104,-8.033222,-4.928633,-4.044252,-1.985767,-1.890071,-9.754399,-3.717197,6.507665,7.216893,5.355482,0.065192,-1.188938,-8.012076,-1.530615,-8.817174,-1.262683,-6.506518,7.141351,-2.747303,0.283750,-3.648624,-8.604625,2.745256,1.024877,-4.802962,4.437561,-0.853274,-4.466197,1.015142,5.484121,-2.245759,-8.529116,-6.081038,6.266076,6.456556,7.682097,-1.585477,9.858200,-4.363470,-7.762663,3.447612,-9.413696,1.859359,-0.625006,5.359070,3.052903,1.649205,-6.742583,8.095178,7.759425,-1.062497,-1.981172,-7.634889,-3.268543,3.437256,-9.268734,-8.222531,-3.966271,3.970616,-2.579531,-1.092040,-8.238383,7.404049,0.880277,-3.488569,-5.869334,-4.976872,6.927954,-5.308501,3.871516,9.607112,-1.703782,-9.615196,8.277344,-3.430466,-8.660831,4.762309,-6.149309,0.576157,0.964668,-8.367507,9.402574,1.538046,-8.386335,-9.410873,3.620664,4.395822,-5.253388,-3.333264,8.538569,7.463137,6.520334,3.708697,-0.080471,0.217964,-7.646402,0.232417,-9.247967,0.083864,-9.516959,-9.642985,2.396052,8.116274,5.931692,6.846765,-7.407924,-4.294835,-3.509285,-5.217211,6.990132,-6.523309,5.017715,1.230716,-7.596694,-2.278547,-5.425472,-6.554727,-4.831034,0.732489,9.510130,9.145032,-6.375977,5.843465,8.800237,6.976133,-2.196674,-2.121120,1.977893,0.257532,-9.777213,-5.109124,2.084652,-7.612278,-1.541123,4.970076,4.161286,-8.901986,4.879656,-1.960120,2.960673,5.941185,5.227647,1.796061,3.601757,4.006800,7.357817,-5.976012,-2.216815,-5.408195,4.869933,3.176717,-0.623077,-3.386535,7.067409,-9.139734,-2.110646,-8.752492,-0.140927,-3.437450,3.359652,9.883717,8.567781,6.150535,5.685743,-1.745148,7.729229,6.421443,7.591251,9.078476,-8.328118,6.569037,3.357778,-5.316693,-4.736574,6.505540,-9.396277,-6.908484,2.211052,-3.373315,7.871720,7.341881,-3.973392,8.915038,-4.203457,-2.880799,-4.722031,7.438149,-9.160214,2.327357,-3.358247,-9.965903,-5.847054,-8.674091,-3.654112,-3.995354,6.379604,-7.860056,-8.693405,-7.598321,2.678256,8.779467,-0.079063,2.004211,-9.013277,4.740410,-3.030526,-2.894852,-9.833251,-4.856738,3.828359,5.592520,-4.936087,-0.038650,9.211044,7.082545,1.295904,-7.348765,0.158109,-4.903273,0.148260,-8.574208,4.649838,-8.853161,0.659377,-2.942141,6.012503,1.423979,-5.018271,-4.773487,-7.554345,-6.036090,-5.228941,-9.703714,-4.968181,5.525294,-7.931783,7.490420,-3.859563,-8.391494,-0.475839,-6.340620,-3.296928,5.220322,5.839511,-2.886789,7.896618,-1.421347,5.345588,7.091943,7.391430,8.284525,-4.712122,-2.762752,-3.586307,-0.026700,3.562753,-2.939975,4.582455,-4.902730,9.299285,-8.930340,9.413586,-6.893642,6.072468,8.479574,8.687381,1.082043,4.779545,-6.763346,-0.391317,7.245103,-9.832291,5.724429,7.472515,-7.793375,-4.592825,-7.237963,7.560841,-1.515698,-5.261787,-8.306085,8.624520,-7.425338,4.806621,-5.421828,6.537314,0.180104,-3.708778,7.469317,0.065691,-9.552071,6.868287,4.781264,-0.443682,9.040060,3.858750,-1.716054,3.177754,-7.396434,4.850113,-0.514933,-7.171952,-5.875891,-8.322085,-4.115790,-8.858859,1.575437,7.066512,-7.012410,7.624712,7.155440,6.130232,5.627982,-4.028766,1.137916,-8.863531,-1.699008,-7.909103,8.450941,7.258236,-3.591397,7.057471,7.533321,-2.720821,-7.840836,7.561223,2.900522,1.607484,-5.077988,-2.930207,9.563274,2.290517,9.069341,7.680779,7.980640,-7.048276,-8.681579,7.305805,1.124682,9.356941,0.378097,7.587275,-3.254878,9.387827,-9.640104,-3.624479,0.578880,0.851651,8.320455,3.123678,8.897979,-1.957939,2.967799,8.586338,-6.602020,-7.787117,-7.070258,-1.338795,-1.521189,0.279286,6.767057,9.805354,7.173661,4.232944,2.585952,5.941342,-0.975575,-6.956464,-4.525847,-6.928192,-8.366330,-4.658855,-7.129015,7.738179,8.191253,0.186283,4.600555,3.201357,-1.031259,8.239892,8.720826,-8.076737,9.725482,-4.713334,8.429711,-0.271110,6.630229,-3.333221,0.253633,7.928427,-9.352409,0.643903,0.482252,-1.195412,2.649138,9.716178,6.216894,-7.482178,-6.188465,-2.215391,-8.994138,5.337271,5.846430,3.695115,-8.751389,8.858171,-7.784296,-3.749289,1.880068,0.010943,-4.982893,-4.315400,-5.694701,-7.859730,8.310405,-1.504152,0.179185,0.219867,1.727784,8.623603,9.528720,-3.140043,7.119724,3.591960,-1.899736,4.313347,3.856094,-1.684374,3.746453,-4.320137,4.237376,-9.059186,6.181556,6.407803,-5.326934,-1.804484,-7.168843,8.425969,4.966021,-5.483724,7.309876,-6.878787,1.220459,6.175047,-0.539494,5.109824,-1.108924,-8.625663,-5.991292,6.066105,5.935327,-2.783712,-1.765937,0.659306,4.203960,0.008671,-6.813117,5.956186,-0.589618,-5.101630,3.813128,-9.646328,7.169100,7.970362,4.326079,-3.433380,-2.562124,-1.622278,9.884740,-1.679705,1.381366,5.376372,5.975340,-4.491728,8.456129,-1.941656,-6.812592,9.867069,-1.729750,2.335232,7.470691,-7.939944,2.823583,-0.599903,-5.941249,2.549122,4.492441,0.932933,0.193564,-5.846071,-8.966252,5.224214,-8.221421,-9.784544,8.237030,-7.654103,-0.541759,-4.512638,8.781933,-3.433205,8.704279,4.306770,-7.555964,-8.239950,-9.245161,3.777554,6.147919,-5.489651,1.834170,-0.819999,-2.101137,6.070420,5.316781,-6.078540,-3.414938,5.015515,-2.375214,-5.548929,8.044983,0.915174,-8.046321,5.285290,6.668930,0.744624,-4.889245,-3.231722,-0.080491,6.106999,2.426711,-3.015033,-7.411053,-8.467371,-9.874943,-0.440569,0.942509,-3.527668,-9.984141,5.881837,2.943933,-5.859963,7.199915,-7.736549,-5.249704,4.571027,-5.234050,1.347353,9.290513,8.063914,8.763153,-6.106763,1.690487,-1.302702,-6.406278,-7.420056,-6.996308,1.732818,2.275816,6.923243,-1.344734,1.574644,-7.390289,1.561719,-6.005049,5.329056,-7.057816,-9.855358,-7.165315,3.057270,5.595288,-6.892777,-0.815486,5.786850,-0.247822,7.491134,2.943623,7.243146,-4.131486,-8.955475,6.310656,-6.416639,4.057800,-2.149722,6.154612,-5.254832,0.112717,-6.733732,-6.593864,7.766789,-0.051381,7.932828,3.432904,2.958691,-2.622081,5.036838,1.374379,3.995141,-5.403010,9.686472,-4.228099,-8.169581,-1.651025,9.114456,-2.768640,4.196785,-7.075920,0.692166,1.422554,5.057060,-5.115241,-9.486910,-4.415737,-8.394760,0.239951,-0.244061,7.552353,1.673748,2.042583,-2.435967,4.253406,-5.736120,0.836401,1.933542,-5.812966,-3.426557,1.903945,-7.147661,-7.182096,6.223774,-8.646482,2.491108,-9.178164,-4.694454,-6.128121,-2.914180,-2.392199,5.717480,-3.279677,1.911644,9.857806,6.164375,-0.331363,-0.242817,-5.106904,-6.787372,8.084176,-9.032654,-1.981892,4.723801,9.944193,-5.632701,-4.690740,2.913851,-3.185080,2.851867,-7.936887,6.908618,-3.792134,-6.655192,4.569684,-2.030037,-9.804121,-3.058558,0.284180,2.425100,7.027507,-1.535640,7.905545,-6.370765,-3.200237,4.460321,-4.970551,2.521096,-1.881329,5.435803,-1.839762,-2.901769,-5.436428,0.907978,-7.499016,7.387339,-4.687945,2.053474,5.100384,-6.207470,3.898619,9.538711,-9.813606,1.045856,-2.592025,-2.492643,-2.098492,9.565838,8.683327,-3.954680,-6.837956,-8.136206,2.752249,-2.759306,2.312080,8.562075,6.157168,7.461926,2.138218,-2.864188,4.836673,2.672313,-7.044327,7.847541,9.389865,2.739393,9.258388,4.087177,-1.010781,1.490141,-1.777703,-4.354677,2.463906,0.535472,-5.823482,-3.479044,-1.405573,7.797062,2.387627,-3.763532,-8.348357,-6.057977,7.463396,9.522631,6.758083,-5.856298,8.188179,8.982923,-1.627341,7.051579,1.619295,-9.928297,9.633627,-6.303733,-0.316329,-8.647107,-1.550487,-7.108069,-1.418620,5.982107,7.374298,7.137324,9.701238,1.910915,4.455469,-9.200910,8.603278,-1.056864,5.973680,6.474312,8.846291,-4.082876,-2.925114,-9.724772,-8.421591,-3.142720,5.302606,-4.732524,2.384515,-7.868130,7.983563,0.759495,7.991042,9.043523,-8.711358,1.149231,-9.678018,7.176005,-4.541434,2.398759,-2.819760,-2.562796,1.854149,-0.892770,9.007334,8.919759,4.655319,5.380848,-9.586258,3.273031,3.121116,9.276002,2.057882,-0.499028,-8.117632,-5.887267,6.620226,-1.905074,-1.801042,6.654087,2.808809,-6.617580,0.947906,3.584357,-0.451305,-9.787077,0.824870,-1.703449,4.480019,7.283659,-6.072801,-8.210305,-7.917126,0.502608,8.773140,-8.221159,7.959574,5.445687,-8.362277,9.980856,-1.227994,-5.602255,4.530021,-7.393373,1.431336,-9.811621,0.156715,-3.965732,2.989933,-0.251896,-3.704026,4.800972,3.641561,6.589272,7.343843,3.096779,-7.091910,-9.549142,-3.127289,-3.467460,-4.180484,9.599309,6.375054,1.908901,2.524889,5.985875,8.282394,-0.879791,-3.933260,-7.354668,-7.477694,9.099285,-3.873923,-9.618120,-3.995621,-8.393350,9.508884,-9.786524,8.039932,7.098404,-7.553490,9.891553,9.211513,-4.359769,5.608597,0.559564,-3.768389,-7.331571,-5.755577,2.656888,-9.242299,5.077640,-2.995169,-6.194045,-2.197719,-3.215271,0.223285,-9.300449,1.754282,-0.863897,7.477236,-7.886784,-4.823062,-7.587423,5.959890,2.444336,-4.547086,2.502150,-2.023670,-9.562343,8.443931,7.781496,-7.493875,2.786552,8.216500,-3.046447,-4.798719,-2.775591,-9.305104,0.841879,7.447881,5.374420,-1.403847,-1.814742,-1.575991,8.718030,1.615436,-8.286425,-5.512250,-7.654625,6.006029,-3.846514,2.488228,-4.011376,-8.647824,-8.724503,-6.022137,7.174398,-4.158815,-9.128404,-2.195975,8.932007,-6.018064,-7.018842,1.557447,-6.370194,3.144507,-9.668561,-6.033347,-6.802172,0.494422,-9.116424,-6.513606,-7.409228,9.378314,-3.156739,-1.111869,3.181263,8.557931,4.802151,-5.708404,-5.370937,-7.301766,2.831748,6.086846,7.103675,-4.699946,0.125123,8.432215,3.306306,-7.172500,6.962485,5.364683,4.498083,-7.292839,-0.864512,4.867974,-3.480065,2.211707,-1.590775,-2.313454,0.838348,2.280886,2.433842,-9.455938,5.914774,-6.365757,9.825576,9.506782,4.686755,8.786683,7.467363,-6.583177,0.743254,3.898967,-2.589024,1.832117,-3.368126,-1.411353,-5.295446,-4.868241,7.665363,-6.619714,1.370003,-4.860672,2.639975,-3.541981,-9.633372,-2.154462,-5.826191,3.354149,1.353334,4.370015,8.699830,-0.660523,-4.951184,2.151453,0.542712,9.372774,7.855760,0.266569,9.508954,9.391176,-9.349221,4.657657,5.273200,-7.304205,-4.806492,-2.715573,2.358043,7.785935,-8.025038,-3.679855,-5.744212,-7.823568,1.098742,-4.834380,2.798352,-7.211484,9.555782,-8.244123,-2.158405,-4.095054,-0.596312,-4.277190,7.442025,-0.164668,-1.827034,3.915159,-7.248877,-1.180132,-3.499200,-3.329316,2.776810,2.134071,2.442910,7.196866,-3.030568,-9.684670,1.478217,0.626986,-1.718036,-4.594761,-4.567088,8.026051,1.020816,-0.773848,-0.515840,8.177861,8.014523,-3.483573,-2.843655,-1.486333,8.320668,-0.088614,3.777706,6.338960,0.255580,-8.640488,-9.330170,-4.094791,8.957654,1.173214,5.977758,1.515142,7.516633,2.088605,-1.910235,9.704348,-2.887835,-5.538963,5.156413,7.413830,9.440680,-3.228385,4.360934,4.276659,2.461904,-1.207543,5.613266,3.049202,-4.973901,-4.180136,-0.853806,-8.425080,2.017864,-4.585204,1.531207,0.412633,1.455389,-2.620768,-4.138661,1.139564,-9.504882,7.499024,-3.925352,-7.532432,1.991496,7.451230,-9.851797,8.948693,-6.707979,-7.346791,2.789489,-7.844686,1.456918,-8.073336,-8.091958,7.717711,9.898487,-3.989156,1.363333,-5.847335,7.462455,-9.345936,-0.053023,-5.653216,8.327495,-0.428188,-5.491521,9.793274,7.421371,-1.473088,-2.258215,-2.533382,-3.349326,9.382095,8.659386,-0.641872,7.553930,3.445389,-7.526801,-0.075647,-7.709979,2.545689,2.629924,4.865000,-2.946611,-9.362128,6.980702,-4.617752,1.011633,-0.472866,-4.753087,9.942112,4.551764,1.344640,-4.469256,-3.779851,-1.480618,-7.080682,-5.332933,-7.424118,0.843238,1.909229,8.940210,-1.491138,4.576840,1.252047,3.412412,2.685909,0.880456,5.796605,-6.580541,8.544875,4.856034,-8.920877,1.646522,-0.722067,2.656374,8.830105,6.777485,6.716619,-6.459813,-5.562571,-5.678803,8.161110,-4.299364,2.447611,-9.659832,2.774437,-9.066889,1.459322,-4.227452,-8.185524,-9.474712,-3.720303,9.722721,-1.320815,1.760769,-9.171512,0.737437,6.276963,-6.596676,-8.391388,8.722376,-8.420273,-0.306996,0.903673,0.702905,-7.424542,-0.406762,2.662327,4.575501,1.142452,7.772634,-3.320430,4.472097,-0.729321,-2.121743,-9.810832,5.316841,-5.273549,2.763563,-4.169475,0.083842,-4.753653,-1.194447,-3.954119,2.583370,-1.249268,9.765260,9.095860,-3.621751,-5.087564,4.977231,1.970523,9.233637,-8.758408,4.714296,4.883903,2.930207,-6.993609,2.242104,6.129999,9.239296,5.478748,-6.274961,4.970560,9.365006,-9.573244,4.652108,5.105609,6.854134,4.284574,-6.400572,0.448570,-4.562996,3.072284,-1.772878,-4.904820,-6.227078,-4.327318,4.960627,-2.850969,6.653940,1.534781,-3.380272,2.638336,-8.762554,-2.924912,9.752321,-4.999406,-3.978433,-5.580579,4.594841,-1.501896,-7.480468,-7.777619,-4.752044,-5.614639,6.725326,-2.872481,-9.380295,9.324148,-3.829567,-3.175989,-4.203614,5.643077,-8.278918,6.514105,4.218689,-2.899801,8.389623,5.365430,1.100675,4.990187,2.303324,-8.770552,-3.820798,-2.570763,8.336608,-4.939764,6.939431,-7.820866,5.085169,0.557545,7.422744,9.279081,4.423767,5.842756,-1.994653,1.892584,-1.919044,-5.338479,-4.384516,-7.987525,0.210891,8.582078,-8.429184,-8.352194,4.441780,-3.396928,6.081515,3.935036,-7.223620,6.209734,-2.134900,-9.461363,-6.599429,4.852053,2.352535,6.047443,-5.361336,-0.237584,-1.487063,2.454272,-8.236599,8.459666,2.305683,-6.912000,7.256499,-2.334430,7.339924,-6.481207,8.230966,-1.505472,7.213966,9.750269,-0.430121,2.959521,7.310377,-3.013684,-3.674859,0.750052,4.380878,-4.577301,-5.931868,-6.447218,0.408240,3.446372,-4.626194,-7.824001,4.352197,9.595232,2.966016,6.529182,9.145158,-1.176707,0.711791,5.325324,-4.732938,4.829847,1.810915,-3.118573,-7.137513,3.302151,5.753626,2.520878,-9.667253,-4.014606,9.042623,-1.893869,8.267329,-2.043562,-9.654957,6.090785,6.242200,0.205829,-3.867756,-7.193359,-2.423823,8.281411,5.861225,-3.606844,-5.762185,1.224428,-4.752148,-2.967199,-2.699807,-6.067627,5.006423,2.080236,-9.369499,1.145787,-7.980902,-9.416859,6.989631,-3.506060,-1.373997,-0.181683,1.030178,-6.167174,1.672827,-9.657442,1.703895,9.387871,-0.961422,-7.007028,9.887077,-3.089061,4.163697,-3.144876,-6.620225,5.207514,-1.122688,4.966973,6.783185,0.401338,5.234613,-4.623929,8.809894,4.448985,7.392025,-6.910893,8.578358,-2.330327,4.928544,4.220218,-7.761686,-7.470958,9.709498,-8.125917,2.853373,0.646917,0.498402,-3.412895,7.850356,1.325978,1.260289,-3.411672,-2.207744,4.880570,8.357569,8.909414,8.506739,-3.967272,-2.749156,0.713446,5.208789,-2.956902,-0.755696,0.822241,-2.199859,-0.703049,-5.449444,-7.282107,-9.396312,9.649997,-0.504340,7.683431,-3.664984,-8.571535,-5.636529,3.684126,7.064995,0.578035,-7.158086,1.402334,4.874937,-1.341920,-6.237347,-8.663509,-5.900906,9.734005,-9.245681,-5.454387,-3.136644,9.250617,-4.104451,-3.980874,-6.386345,2.040884,-9.951007,1.263532,3.149030,-5.848334,-1.565254,-2.377529,-4.467709,-2.844590,-7.648896,0.876986,4.081166,8.862401,7.562838,8.697143,2.423099,-0.099659,-4.039203,5.238606,8.704645,2.168769,-2.881137,-6.195202,1.418662,-0.660115,4.073915,2.551313,-9.718297,-6.784174,-6.528267,-5.607699,0.535351,-3.436728,-3.758096,3.088529,7.213562,-7.015384,-2.750255,-6.185286,4.794619,0.500588,-0.329893,5.641713,4.283658,8.579413,-1.093031,-8.837664,-4.162830,0.858690,-9.136817,7.071611,3.124558,-5.671674,-4.557148,-2.599532,0.399519,7.996397,-1.711587,-4.402463,-7.818792,3.773963,3.630494,-6.909292,-2.304250,6.276608,-9.562422,-1.831789,-0.975175,2.277172,2.118287,-5.830002,4.689972,3.199539,-3.000202,-2.110059,4.409790,9.635891,4.114616,-8.376528,3.897035,-7.629976,-5.875762,-9.445934,7.498012,-9.908048,1.867661,2.872589,-2.768525,-4.263503,6.041051,0.037546,-9.605213,2.758094,8.925110,-2.700354,9.813901,-9.181976,2.521278,-8.094672,5.752425,-9.650634,0.255658,6.992044,-2.363501,0.279511,-8.577074,-0.485334,8.199557,-3.817251,8.934085,-5.146859,-5.717173,0.113667,4.290085,-1.503910,-8.571770,6.124903,0.841299,2.860263,-9.616962,8.528131,6.672403,0.762130,3.131055,0.568043,-2.556596,-0.460920,3.700990,7.862652,9.049950,3.908111,-4.241012,-5.126409,5.420786,8.747650,-2.699031,0.604279,-5.825084,-4.512403,-4.183091,-4.317442,9.304299,2.166285,-9.880436,1.944182,7.808206,7.066095,7.250117,5.275498,3.164843,-9.636401,0.397361,-6.005216,3.852541,0.097554,-1.490039,-7.672417,-3.669652,-4.421300,-0.152014,8.641817,-1.499799,5.536889,-7.569252,7.269120,9.242296,3.524810,4.961092,-7.570296,-5.522872,-0.243923,-7.182287,6.984548,5.448325,1.351770,7.922722,3.432273,-8.281595,-7.005947,9.486836,-9.891710,3.149972,3.689752,9.572600,5.962806,0.571971,4.058254,4.694431,9.480979,-1.393823,-8.788114,2.854173,-4.324451,1.576346,-5.358053,-8.828875,5.905174,-5.774839,-7.921043,5.456519,8.286622,4.822718,-7.654624,6.871494,8.353598,-4.367610,-3.593747,9.353871,4.351597,1.507773,1.351534,8.952435,9.117962,5.830571,8.292436,-3.546338,-7.036877,6.646608,-8.583950,-9.337202,2.715917,2.760265,-6.035094,-7.115744,1.130897,2.803092,1.833376,-8.218035,-8.950651,-3.200824,-0.504092,-4.355722,-6.126124,4.996149,0.869805,3.750126,-9.837736,-3.708294,0.137043,7.395504,-8.524753,-4.689817,8.847160,-4.255195,-7.760454,0.329413,4.358693,7.384920,-8.223577,-4.871132,-9.560120,-5.139561,1.399320,7.462053,9.834309,5.881961,4.165279,1.774435,-6.778244,-5.682813,-1.986434,2.734241,-6.767946,8.838662,2.569041,-1.246697,7.492435,7.432572,4.021645,-2.977814,1.678509,-6.618060,3.873721,1.479522,1.264649,-5.313151,4.400665,-2.351765,4.448045,-1.915493,8.250550,-3.544141,7.500338,2.284889,0.346425,6.048985,-0.259452,5.598959,3.104340,2.104299,3.778824,-3.959224,-1.121129,-1.620171,6.521049,-4.457336,0.154484,7.021015,-0.330398,5.645562,-2.388585,-2.979777,-5.285487,-9.884800,-2.686101,-1.705884,-9.764547,0.001783,0.101226,-4.603868,-6.506480,-2.241657,6.841636,3.045082,-6.461059,2.314048,5.914773,3.181995,-9.387162,-5.305064,-9.399925,-5.282745,3.505271,1.250792,9.105497,3.089421,-0.041257,4.222682,-5.580059,-4.333410,4.008231,9.014495,6.163215,-0.519797,9.381868,7.576136,0.133257,-7.937354,3.716510,-1.903185,6.544448,-9.729656,8.887839,0.356215,-6.402227,-6.924984,-7.735830,8.078741,2.462633,2.153297,-0.582862,-1.242458,-0.190801,-0.587337,-5.177693,-4.504122,7.726200,0.914437,-6.521710,-9.149793,-9.406628,-4.451871,-1.508885,2.169092,6.577008,-2.581383,1.355889,5.493674,6.614954,6.084680,-3.771776,1.070745,-3.746454,-7.000071,-1.752102,-7.664813,-8.525515,9.366437,-8.190057,-3.877898,4.704757,4.568635,8.318443,-5.365594,-0.346643,-3.193956,4.640874,-0.256523,-8.488846,-3.698200,1.906871,-3.930726,1.426243,3.518056,-2.751639,9.927162,-1.878635,-4.176374,2.492172,6.931220,-6.924780,8.202896,9.780841,1.454748,-4.210334,-7.621312,-0.965714,4.708321,-2.676779,8.378487,-8.481190,-9.458986,5.840773,-4.070019,5.640903,7.180290,6.874210,0.731913,-3.216154,8.582850,-2.219644,1.700192,-5.803635,-1.048691,2.962660,1.003272,-0.620342,-8.039063,-7.675219,9.162401,-8.716434,4.067590,4.830244,2.902039,8.563779,-7.242211,-7.705875,7.489061,3.505533,-9.369494,1.999713,-0.528362,4.242245,-4.213302,-1.693445,-8.237829,-8.799372,-8.174695,-6.727345,2.591839,-2.047138,-6.070667,3.784892,9.462536,7.771069,0.391921,2.525822,8.055959,3.513952,-7.867976,8.470163,-7.675107,-7.696210,5.947670,-7.289878,3.298678,-7.729011,-4.723980,2.229753,-9.885897,2.502834,5.630206,-8.663383,9.637703,-8.675631,7.425950,-7.819258,5.223434,-8.344399,-4.420571,-9.909901,-1.867213,5.937449,-9.078085,-2.329257,6.864050,1.297418,8.646197,0.918677,3.984917,-8.837667,5.065136,-7.536939,-4.749410,7.423258,-1.149798,-2.774639,5.002806,1.846196,-3.834634,-7.905469,2.042076,-6.727935,2.962499,7.989643,-3.751274,1.062931,1.899948,-8.558278,0.212018,-2.453777,7.618187,-3.298854,-4.930264,8.136994,1.690450,-0.806134,9.853269,3.986779,5.667519,8.455780,0.985143,1.389559,-9.416604,-3.519462,-5.351500,1.276265,3.164610,-9.599054,7.422367,-4.430155,7.727354,6.728936,6.830548,-3.218343,-5.051657,-0.699956,-1.196493,-0.696905,-4.906434,-8.366225,9.997572,-5.260272,5.614549,-0.546541,-2.640477,-0.037849,8.702532,-2.474151,-9.031926,9.249535,-8.348979,-2.355971,-2.669658,-3.541695,2.468881,6.669826,-0.572452,7.922165,-5.197853,8.376602,-3.123356,-6.872609,2.573793,3.997957,1.655105,-9.690895,-6.559549,4.510351,6.248571,8.909458,-6.627265,5.609057,1.294586,4.516833,-9.717571,-2.109258,-3.807269,5.913745,-5.351735,9.830014,4.784928,4.056240,4.651772,-8.608002,-2.646507,4.421025,-2.113865,-0.933774,-8.801848,3.489354,-0.729219,3.291423,5.605394,-4.388784,5.563163,5.288795,-6.898110,8.306299,5.911297,-1.262740,1.439078,6.377562,0.035389,3.012631,5.597596,-3.663079,3.262104,-1.093436,-9.349557,-9.803479,-0.345416,0.864090,-2.012896,-5.950928,-8.397406,-1.143420,4.432652,-8.124899,5.055470,-4.701077,-1.043477,-3.513966,-6.583914,-5.389687,1.056261,0.360902,1.688197,-3.789068,9.018203,8.772059,-4.493495,2.632695,2.197737,-4.320637,-5.856565,5.585509,0.731743,-5.232092,-6.304456,6.985627,8.523840,-6.699014,5.863721,-5.072055,8.041228,-9.901058,7.578185,0.358146,1.493903,7.381004,-3.846016,1.466003,-3.266912,-7.973306,-2.695568,1.160437,-7.387538,-4.539059,-4.113295,-5.944650,5.694595,6.227214,-2.210412,2.169273,-3.020718,8.630392,-2.215421,6.411800,-6.963504,3.066892,3.002601,-2.896543,-6.736947,6.718427,-6.866945,4.560178,-0.140581,-8.452671,6.169561,0.692694,5.897460,1.843645,8.264916,-8.284552,-6.316349,-7.159269,-6.754713,7.907832,-1.172276,-5.313924,-2.025183,-0.491562,-0.526775,7.970727,-0.153339,-3.166454,-2.576999,6.654099,-0.779663,5.550091,-8.914515,-6.219561,4.009989,2.104345,-8.506412,-4.233059,2.549732,4.890886,2.148212,-2.124727,7.225629,0.368384,-0.763212,7.679953,6.391967,4.925563,7.740680,-2.699617,5.405058,-7.138859,6.184567,-0.223831,4.456930,4.679888,-6.853487,-8.552715,-3.311637,5.231661,4.824371,1.161192,-6.687326,-0.427135,-1.147404,-3.770548,-3.119651,6.097929,0.986312,8.065315,9.670259,8.214053,-0.545159,-6.063188,-2.458993,0.512835,-6.063276,-5.694212,2.815089,-0.598067,1.949972,0.272544,6.068534,-6.921477,-4.874869,1.617568,-0.444961,4.378657,7.676198,1.956435,-4.644643,2.683065,8.436153,0.431050,-1.040240,-0.202668,-0.398881,8.725330,-2.271303,-7.616283,9.707024,-0.022193,-1.958322,-1.939671,2.137386,5.331123,-4.409331,2.259544,-6.229499,-3.573143,-4.631446,5.937550,-3.374480,3.630934,-0.423434,6.100292,3.154342,9.973477,-3.085247,9.529473,8.737794,9.736719,4.884386,7.313646,3.919098,-3.637582,-0.190887,-2.232983,4.359582,3.749511,3.573348,9.795935,-4.015064,-7.897893,7.287915,7.636863,2.604205,-7.279955,3.236425,-5.735410,-2.736394,-5.116027,-2.041371,4.133105,-2.780323,0.113110,-4.688412,2.979040,3.902751,2.167827,7.609997,8.359453,1.130927,-3.859951,6.655864,5.279995,3.963298,-4.735857,-1.004451,9.511820,-6.354023,-2.082213,-6.505092,-9.216985,6.969865,-9.088883,-3.232350,5.061501,7.415433,-4.240243,1.179993,-5.548007,2.369605,-8.534145,4.392575,4.399400,9.208409,-1.094026,8.744518,2.456533,-8.939355,0.632231,-0.593679,-8.786778,-0.190239,-5.358732,-9.009175,8.906965,-9.695675,6.691670,7.427337,1.736189,-7.773130,-4.906432,-5.329613,-4.527098,7.556007,7.657895,7.301986,-4.708033,-0.923901,5.110987,8.145603,4.366212,-9.218272,4.491240,4.735135,-3.867769,-5.920445,1.709270,7.705629,3.663231,5.550866,-2.071906,-3.500170,6.422283,6.762493,5.552938,0.582997,-5.538845,0.157432,4.658634,7.674003,-8.346863,2.498428,-0.265066,-4.891641,7.392682,1.437075,-5.962548,-4.647527,-6.967401,-2.616102,2.425904,-6.155716,4.203715,9.882554,-5.549137,6.607694,0.089696,-6.069592,9.770532,3.085752,1.741688,-1.760251,2.537565,0.281528,-7.833244,5.229119,9.823319,-2.295817,-8.334195,6.972208,-2.835947,4.266262,9.049236,6.644920,-0.164699,-6.716633,4.658225,9.370764,2.827036,1.449519,-0.627447,9.372654,-8.279137,6.503941,-9.171743,-8.249763,5.358063,-0.015666,9.473101,7.243213,-1.644356,8.938593,-5.519648,-4.751183,9.195520,3.172872,9.318072,9.416664,-7.009521,-6.365248,-6.555652,0.177208,-7.710537,-0.968340,-8.694665,-2.969198,2.152518,-6.780114,-4.162557,-1.675390,-0.880960,-6.092574,-1.375613,-1.356008,-9.739872,2.716999,1.443097,-7.997690,-9.510301,3.108734,-2.005836,-2.836757,-0.249511,9.655860,8.665634,-4.878833,9.561273,2.218350,0.525613,2.883071,-6.532317,-8.167918,6.966639,-9.756791,6.968368,-8.542765,9.564822,-6.206960,-1.281347,-3.591142,9.977609,3.791957,2.953427,-2.389915,-3.991959,-9.479455,7.348003,-1.255256,0.820630,-7.717341,4.375433,-2.633554,9.760400,-9.674740,-6.302014,-1.721415,9.014142,6.879067,-4.846025,3.261414,6.113762,-9.116187,-5.984122,8.962180,7.481209,0.485657,0.116182,0.292262,-2.185217,-7.825545,-2.571702,-7.668370,-4.862080,4.504411,4.879258,-9.446588,-8.302143,9.112777,1.691030,4.380170,4.184828,7.247427,-5.208458,3.678731,-8.658822,-7.075788,-3.321007,5.907162,-4.270335,-9.786155,5.789094,-1.785800,4.368216,8.930022,-9.196100,3.264374,9.820766,-0.023640,9.852342,-7.628734,6.908764,-4.948026,9.806688,2.462481,-0.727775,4.525808,-3.294647,-6.132592,-3.435036,-3.488121,-3.185872,-2.311630,0.391061,2.093639,-0.159133,-9.995347,-9.397748,-5.093873,-6.162066,9.095046,2.685570,9.693513,-5.570096,0.420350,4.222709,-1.343844,3.973116,8.565510,7.276965,5.945619,-4.662512,-0.394659,-8.357076,-2.691238,-4.358963,-2.503286,-1.861521,1.840215,3.763623,0.750140,-0.228632,-3.471208,-4.978531,-6.998182,-4.328337,-3.924975,-5.532809,-4.096280,6.177353,9.134546,-3.973027,9.698919,9.030612,-0.829109,3.810193,7.714037,0.301039,9.005533,6.350630,3.408640,1.260891,-6.161697,-2.336984,-9.299602,2.846620,9.395568,9.532157,7.213920,3.475979,0.061136,1.099303,3.550317,-7.017943,9.610074,-6.456170,-4.108792,-3.677194,1.021036,8.854708,-4.333658,-0.944974,-1.384520,-0.953831,-6.002865,1.820112,-1.786433,1.846930,3.849856,-7.938242,6.740394,-0.555530,-2.689735,3.276158,6.325172,3.549555,0.284305,-5.212260,-0.950289,0.818707,-4.371205,-9.000026,-6.880699,-4.011271,-5.064340,-8.008914,-7.571503,5.446149,8.199903,-4.911837,9.160376,-6.616732,1.912609,-2.202657,5.228253,7.181299,0.189079,-5.161791,8.273331,0.428784,5.052139,8.300715,-9.933384,-0.347798,9.739305,2.182905,-5.966587,-0.245452,-4.548487,6.987447,-7.687441,6.181234,4.905268,2.674781,3.655115,-8.454262,-3.536352,-0.211501,-3.495031,-5.065121,6.173597,-7.579344,7.699379,-8.100852,5.399840,0.180098,-6.376600,3.709080,-1.059277,-5.236140,-9.181131,-1.378550,-1.111456,0.364629,6.226523,8.215174,0.968901,7.869220,-6.418571,-2.215075,8.063605,3.746616,2.909951,6.429750,-6.899496,3.919566,-3.341121,6.586235,-4.349571,8.883317,0.651888,-3.157636,-6.507206,7.912484,9.414878,3.175668,-0.570034,-4.916487,8.382181,7.591066,6.824210,-0.476125,3.303427,5.726138,2.216319,1.004766,7.778688,6.421455,2.266464,-4.664971,8.242939,-0.664623,-4.619351,9.650569,-9.711050,9.526618,0.413466,-4.822265,-3.984569,-4.516980,-5.391942,-8.273940,0.866213,-7.474083,-0.172154,-8.915115,-9.462422,8.950850,7.847627,-0.220634,-3.048420,-0.194547,-5.248760,-9.427869,-5.225017,-8.933329,-4.919663,-3.016157,-7.085698,1.660101,1.826430,-8.371485,-3.584356,-2.301877,-9.093806,8.983939,5.136751,-2.233948,-5.254882,-8.333528,6.829503,-2.964695,9.943012,-6.547046,2.507021,-7.399856,1.841773,-8.116008,3.597124,2.321476,1.496700,-7.207044,-2.076693,-4.037847,7.590592,6.735406,4.802655,-5.675415,-4.553495,9.303980,-6.123485,-0.997445,-5.132007,5.689315,-0.823917,-2.637638,-1.916906,-8.091831,4.030823,0.632996,2.030931,-1.254253,-2.170515,1.830762,7.952518,-4.116568,-7.065751,5.023279,2.009052,-5.922278,7.099446,-2.266523,0.296281,7.162652,3.424990,5.805899,1.257928,-1.821453,4.934966,2.786346,-3.499817,-4.829485,-4.643929,3.532266,5.789587,1.331353,-0.260976,-9.204393,-8.507681,8.632834,-5.410398,-6.379317,-6.581840,-2.341094,-2.785180,-3.522270,7.023793,-4.214620,-4.349920,-3.994455,2.906239,-2.589405,0.210501,-4.926387,-3.070964,4.115743,-5.002125,4.260915,-7.064145,-6.246338,6.978642,8.451443,-8.796003,-3.698484,-7.232004,-2.259023,9.412007,5.685118,4.059180,-7.947088,5.583560,-1.111674,-7.343077,-2.807746,4.377995,7.562505,5.029607,-5.854497,-1.305793,-7.902053,3.164853,3.792172,-8.653146,4.575183,-5.271583,8.779671,1.943758,2.018459,0.028337,6.658423,2.753806,7.204475,6.551411,-1.028185,7.123161,-4.613382,9.289937,4.218324,0.780674,9.139132,-8.452596,2.212290,-3.041820,6.129594,7.846378,4.991979,-6.331684,5.861521,-2.889192,8.439878,4.942280,-6.297508,2.487673,-5.189835,-5.935215,-5.784716,-1.870891,-6.330845,4.624219,3.434738,-9.288458,7.813504,2.547570,0.032341,-0.762821,4.123458,-6.374873,-8.722618,1.093078,-1.952345,-5.865606,2.812104,0.376261,1.368796,4.238219,6.356862,6.690100,-5.783377,6.108155,-0.139366,3.291901,7.047785,0.332244,0.469091,-1.752102,-5.461057,5.643574,-5.397656,-4.678322,5.211583,-3.616666,2.780865,7.269628,-6.192816,2.990828,-4.716615,0.797753,8.756402,2.718829,9.822315,-1.468407,-8.472749,6.602243,-4.069605,-3.203316,-9.872862,-2.910754,5.691865,6.209583,6.573729,-4.689923,9.451576,5.292433,6.245224,-4.108078,8.526432,-7.699413,-8.913710,-5.478102,6.541643,-1.409432,1.027346,-8.318411,-3.654609,-4.276058,-2.344684,3.017666,-1.357392,-1.637320,1.387843,5.646222,-8.259701,-5.843786,4.001166,7.015613,4.981455,-5.313374,4.831226,7.036556,7.156087,0.394225,5.715035,8.667324,4.058331,9.374051,-9.661255,7.493197,-4.013332,2.822474,-8.079223,4.732544,-6.911687,-2.750177,-7.761261,5.334263,-7.323801,6.179642,4.422011,1.578307,7.464553,0.816816,9.418609,-6.106814,-3.281884,-6.630828,-9.824404,2.675765,4.739005,-5.310546,5.756278,9.447797,-0.684350,4.537270,-9.875763,9.383042,7.325547,9.356293,6.908997,4.744209,-0.447355,9.003494,0.381430,8.868609,-4.154515,-3.272369,-1.806157,5.099712,-5.588673,-1.060716,-8.529508,-4.029230,4.022096,-0.027597,4.888356,-9.333186,9.912163,0.435638,-7.305855,-3.832390,-6.027715,5.948184,-4.837686,-0.337171,3.231868,3.775503,-9.825482,-7.917907,-6.722444,-7.936080,-1.769044,5.827352,-9.194569,-3.587624,0.456273,-1.414443,8.257869,-3.460641,-4.576685,-1.328128,-4.334731,9.726166,-0.331371,-0.746086,9.584939,-0.968928,3.663373,9.445883,-8.056241,0.547868,-4.419223,-5.790867,6.782188,-7.627130,8.485771,2.908167,-3.419904,-9.774930,-8.727995,5.400426,4.426535,2.367206,9.316345,5.816658,-5.394537,-4.846418,-6.919789,-2.877279,9.393744,0.612417,-1.436974,-7.228878,-6.648142,5.123005,2.658668,-5.590950,-4.247868,-1.770348,-2.333103,-9.395533,-2.130467,-1.474906,0.188588,-5.249595,3.071044,2.731100,-0.782816,-8.393823,-0.970624,-8.838089,9.109938,-3.647562,-0.482457,9.270696,-8.087194,-4.672255,-7.952277,4.462442,1.478462,3.100623,-8.927126,-8.789909,-1.250486,5.126735,-4.295801,5.655595,-0.918141,-2.256255,-4.669698,2.561156,8.758545,5.588356,-6.224746,5.987450,-0.927180,-2.188632,5.802150,9.286036,-3.829142,-4.300944,-4.716730,-3.779151,9.498835,-5.419755,-7.047629,6.239873,6.987348,-5.885777,4.590802,7.133727,-2.914939,-8.630449,9.752790,8.809802,-5.128226,-2.259268,2.374533,1.665210,1.175388,-6.485377,-5.151344,8.149680,-9.741051,3.664799,8.004238,1.017606,5.133184,3.989143,-6.304528,-1.667157,-9.900704,9.232146,6.688991,2.078932,-0.833604,-2.180646,2.167058,-4.370056,5.669664,3.931420,4.605495,-3.573557,7.915817,6.410370,3.252788,-5.544311,-9.947391,6.149411,1.303750,4.923173,0.848164,-0.371722,1.950267,-5.406761,-3.302673,-8.604490,7.574091,-1.193320,-5.018553,-4.016515,7.831751,-6.119874,-5.059797,0.734406,-2.127971,-6.078624,2.272177,-0.330384,9.556359,9.707283,-0.989706,9.682475,2.073153,-1.315472,6.648403,3.656301,-8.718628,0.078611,3.142217,-3.233915,6.297634,6.318620,7.075803,7.345266,9.564735,-0.171730,-5.424483,3.713966,-9.131057,-8.094547,-2.458648,-0.018732,2.372926,6.599591,1.799523,-0.320058,-5.899349,4.006279,0.460840,7.477372,9.545897,-8.595838,1.904102,8.758947,-5.082917,-0.242673,9.552268,5.233042,-5.530225,-7.923361,-9.701777,-0.165346,-2.052372,-5.476176,-6.065620,-6.180177,3.585038,-4.398111,-2.632133,-9.576897,8.074517,3.338840,-7.060453,2.009011,-4.387897,-4.540618,-6.914110,8.693086,-8.361138,-8.875744,5.969543,-7.236886,8.712090,-1.079031,1.583589,-9.744878,5.950188,6.885587,-5.899106,-9.764967,-7.082666,0.961776,6.724449,-1.152800,-2.273958,-0.575319,3.259470], dtype = "float64")#candidate|3137|(3696,)|const|float64
call_3135 = relay.TupleGetItem(func_3002_call(relay.reshape(var_3136.astype('float64'), [336,]), relay.reshape(const_3137.astype('float64'), [3696,]), ), 3)
call_3138 = relay.TupleGetItem(func_3005_call(relay.reshape(var_3136.astype('float64'), [336,]), relay.reshape(const_3137.astype('float64'), [3696,]), ), 3)
uop_3161 = relay.tan(var_3136.astype('float32')) # shape=(168, 2)
output = relay.Tuple([call_3133,call_3135,const_3137,uop_3161,])
output2 = relay.Tuple([call_3134,call_3138,const_3137,uop_3161,])
func_3180 = relay.Function([var_3136,], output)
mod['func_3180'] = func_3180
mod = relay.transform.InferType()(mod)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3181 = relay.var("var_3181", dtype = "float64", shape = (168, 2))#candidate|3181|(168, 2)|var|float64
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3182 = func_3180_call(var_3181)
output = call_3182
func_3183 = relay.Function([var_3181], output)
mutated_mod['func_3183'] = func_3183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mod.get_global_var('func_1900')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_3210 = func_1900_call()
call_3211 = func_1900_call()
output = relay.Tuple([call_3210,])
output2 = relay.Tuple([call_3211,])
func_3214 = relay.Function([], output)
mod['func_3214'] = func_3214
mod = relay.transform.InferType()(mod)
mutated_mod['func_3214'] = func_3214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3214_call = mutated_mod.get_global_var('func_3214')
call_3215 = func_3214_call()
output = call_3215
func_3216 = relay.Function([], output)
mutated_mod['func_3216'] = func_3216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3043_call = mod.get_global_var('func_3043')
func_3045_call = mutated_mod.get_global_var('func_3045')
call_3225 = func_3043_call()
call_3226 = func_3043_call()
func_1756_call = mod.get_global_var('func_1756')
func_1757_call = mutated_mod.get_global_var('func_1757')
call_3252 = relay.TupleGetItem(func_1756_call(), 0)
call_3253 = relay.TupleGetItem(func_1757_call(), 0)
output = relay.Tuple([call_3225,call_3252,])
output2 = relay.Tuple([call_3226,call_3253,])
func_3257 = relay.Function([], output)
mod['func_3257'] = func_3257
mod = relay.transform.InferType()(mod)
output = func_3257()
func_3258 = relay.Function([], output)
mutated_mod['func_3258'] = func_3258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3065_call = mod.get_global_var('func_3065')
func_3066_call = mutated_mod.get_global_var('func_3066')
call_3264 = relay.TupleGetItem(func_3065_call(), 0)
call_3265 = relay.TupleGetItem(func_3066_call(), 0)
output = relay.Tuple([call_3264,])
output2 = relay.Tuple([call_3265,])
func_3272 = relay.Function([], output)
mod['func_3272'] = func_3272
mod = relay.transform.InferType()(mod)
mutated_mod['func_3272'] = func_3272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3272_call = mutated_mod.get_global_var('func_3272')
call_3273 = func_3272_call()
output = call_3273
func_3274 = relay.Function([], output)
mutated_mod['func_3274'] = func_3274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2798_call = mod.get_global_var('func_2798')
func_2799_call = mutated_mod.get_global_var('func_2799')
call_3326 = relay.TupleGetItem(func_2798_call(), 1)
call_3327 = relay.TupleGetItem(func_2799_call(), 1)
func_2798_call = mod.get_global_var('func_2798')
func_2799_call = mutated_mod.get_global_var('func_2799')
call_3330 = relay.TupleGetItem(func_2798_call(), 0)
call_3331 = relay.TupleGetItem(func_2799_call(), 0)
output = relay.Tuple([call_3326,call_3330,])
output2 = relay.Tuple([call_3327,call_3331,])
func_3359 = relay.Function([], output)
mod['func_3359'] = func_3359
mod = relay.transform.InferType()(mod)
mutated_mod['func_3359'] = func_3359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3359_call = mutated_mod.get_global_var('func_3359')
call_3360 = func_3359_call()
output = call_3360
func_3361 = relay.Function([], output)
mutated_mod['func_3361'] = func_3361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_3367 = relay.TupleGetItem(func_3257_call(), 0)
call_3368 = relay.TupleGetItem(func_3258_call(), 0)
func_2936_call = mod.get_global_var('func_2936')
func_2938_call = mutated_mod.get_global_var('func_2938')
call_3370 = relay.TupleGetItem(func_2936_call(), 0)
call_3371 = relay.TupleGetItem(func_2938_call(), 0)
output = relay.Tuple([call_3367,call_3370,])
output2 = relay.Tuple([call_3368,call_3371,])
func_3374 = relay.Function([], output)
mod['func_3374'] = func_3374
mod = relay.transform.InferType()(mod)
mutated_mod['func_3374'] = func_3374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3374_call = mutated_mod.get_global_var('func_3374')
call_3375 = func_3374_call()
output = call_3375
func_3376 = relay.Function([], output)
mutated_mod['func_3376'] = func_3376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2287_call = mod.get_global_var('func_2287')
func_2288_call = mutated_mod.get_global_var('func_2288')
call_3389 = func_2287_call()
call_3390 = func_2287_call()
output = call_3389
output2 = call_3390
func_3400 = relay.Function([], output)
mod['func_3400'] = func_3400
mod = relay.transform.InferType()(mod)
mutated_mod['func_3400'] = func_3400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3400_call = mutated_mod.get_global_var('func_3400')
call_3401 = func_3400_call()
output = call_3401
func_3402 = relay.Function([], output)
mutated_mod['func_3402'] = func_3402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_3422 = relay.TupleGetItem(func_3257_call(), 1)
call_3423 = relay.TupleGetItem(func_3258_call(), 1)
output = call_3422
output2 = call_3423
func_3438 = relay.Function([], output)
mod['func_3438'] = func_3438
mod = relay.transform.InferType()(mod)
output = func_3438()
func_3439 = relay.Function([], output)
mutated_mod['func_3439'] = func_3439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_3482 = func_1577_call()
call_3483 = func_1577_call()
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_3486 = func_1577_call()
call_3487 = func_1577_call()
func_1857_call = mod.get_global_var('func_1857')
func_1862_call = mutated_mod.get_global_var('func_1862')
const_3489 = relay.const(10, dtype = "uint16")#candidate|3489|()|const|uint16
const_3490 = relay.const([-4,-3,-1,8,-6,-5,-2,-5,-7,9,-4,3,-1,4,-10,-5,9,1,-8,6,-9,7], dtype = "uint16")#candidate|3490|(22,)|const|uint16
var_3491 = relay.var("var_3491", dtype = "float32", shape = (126,))#candidate|3491|(126,)|var|float32
var_3492 = relay.var("var_3492", dtype = "uint16", shape = (132, 1))#candidate|3492|(132, 1)|var|uint16
call_3488 = relay.TupleGetItem(func_1857_call(relay.reshape(const_3489.astype('uint16'), []), relay.reshape(const_3490.astype('uint16'), [1, 2, 11]), relay.reshape(var_3491.astype('float32'), [126,]), relay.reshape(var_3492.astype('uint16'), [6, 2, 11]), ), 2)
call_3493 = relay.TupleGetItem(func_1862_call(relay.reshape(const_3489.astype('uint16'), []), relay.reshape(const_3490.astype('uint16'), [1, 2, 11]), relay.reshape(var_3491.astype('float32'), [126,]), relay.reshape(var_3492.astype('uint16'), [6, 2, 11]), ), 2)
var_3500 = relay.var("var_3500", dtype = "uint16", shape = (132, 3))#candidate|3500|(132, 3)|var|uint16
bop_3501 = relay.not_equal(var_3492.astype('bool'), var_3500.astype('bool')) # shape=(132, 3)
uop_3508 = relay.acosh(var_3500.astype('float64')) # shape=(132, 3)
bop_3516 = relay.mod(uop_3508.astype('float64'), var_3492.astype('float64')) # shape=(132, 3)
output = relay.Tuple([call_3482,call_3486,call_3488,const_3489,const_3490,var_3491,bop_3501,bop_3516,])
output2 = relay.Tuple([call_3483,call_3487,call_3493,const_3489,const_3490,var_3491,bop_3501,bop_3516,])
func_3521 = relay.Function([var_3491,var_3492,var_3500,], output)
mod['func_3521'] = func_3521
mod = relay.transform.InferType()(mod)
mutated_mod['func_3521'] = func_3521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3521_call = mutated_mod.get_global_var('func_3521')
var_3523 = relay.var("var_3523", dtype = "float32", shape = (126,))#candidate|3523|(126,)|var|float32
var_3524 = relay.var("var_3524", dtype = "uint16", shape = (132, 1))#candidate|3524|(132, 1)|var|uint16
var_3525 = relay.var("var_3525", dtype = "uint16", shape = (132, 3))#candidate|3525|(132, 3)|var|uint16
call_3522 = func_3521_call(var_3523,var_3524,var_3525,)
output = call_3522
func_3526 = relay.Function([var_3523,var_3524,var_3525,], output)
mutated_mod['func_3526'] = func_3526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1709_call = mod.get_global_var('func_1709')
func_1711_call = mutated_mod.get_global_var('func_1711')
call_3616 = relay.TupleGetItem(func_1709_call(), 4)
call_3617 = relay.TupleGetItem(func_1711_call(), 4)
output = relay.Tuple([call_3616,])
output2 = relay.Tuple([call_3617,])
func_3629 = relay.Function([], output)
mod['func_3629'] = func_3629
mod = relay.transform.InferType()(mod)
mutated_mod['func_3629'] = func_3629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3629_call = mutated_mod.get_global_var('func_3629')
call_3630 = func_3629_call()
output = call_3630
func_3631 = relay.Function([], output)
mutated_mod['func_3631'] = func_3631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3359_call = mod.get_global_var('func_3359')
func_3361_call = mutated_mod.get_global_var('func_3361')
call_3634 = relay.TupleGetItem(func_3359_call(), 1)
call_3635 = relay.TupleGetItem(func_3361_call(), 1)
func_374_call = mod.get_global_var('func_374')
func_378_call = mutated_mod.get_global_var('func_378')
var_3644 = relay.var("var_3644", dtype = "float32", shape = (126,))#candidate|3644|(126,)|var|float32
const_3645 = relay.const([-5.489640,-5.542345,-6.871334,5.390017,-2.345541,-8.295648,8.845662,-5.000650,8.414661,2.314025,8.626722,-4.226341,-3.455891,9.066859,-1.516774,8.367287,-4.088112,-0.100081,6.874423,-2.140353,3.411151,8.824759,8.759350,2.154530,0.082146,-5.899755,-0.788402,-3.358518,1.561716,-2.749759,3.166565,-0.388752,1.620936,-7.553086,4.250171,-5.591246,-3.035568,3.634207,-5.000795,-0.816116,0.090617,-4.183293,0.498699,-2.594299,9.004379,-8.601021,-2.061477,-3.570683,-7.510960,-1.856118,2.154768,-5.165643,-9.969107,2.582718,-9.503664,9.897347,6.180940,0.201583,-3.617955,5.989373,-5.252493,-3.739167,1.244235,-2.838215,-8.047542,2.340986,-4.662177,4.863606,6.660269,2.467522,-0.738267,2.421555,-6.520740,4.186484,6.253337,-6.636751,-4.717624,-0.318899,-8.106756,9.828442,-4.826369,-0.504096,-3.909176,0.738637,0.711789,-6.538022,4.309723,8.235109,-3.023308,0.636589,7.706788,-9.607709,-4.893598,6.885871,2.369611,4.911538,4.744220,-2.374827,5.332434,0.429192,-9.504751,6.098759,-9.187498,-4.498027,5.279832,-0.690524,8.381839,-4.638054,0.911523,-5.510494,5.334444,-9.327215,-2.885512,-4.875758,7.682041,-6.578689,3.101386,6.413710,-7.010899,6.989618,0.708640,-6.471229,-5.464830,0.254799,2.232311,-4.727636,5.947037,1.276922,-3.024074,-5.212962,-1.372264,4.628410,-2.463036,4.464251,-0.304790,-6.739176,-9.666857,7.335557,0.237298,-1.707075,-5.171313,1.589182,-0.292940,9.723484,0.642780,-0.387485,-8.781315,8.077990,-6.816595,9.029331,4.594617,8.403554,7.697240,-3.411295,9.139278,8.410676,-6.443558,2.578763,0.299268,5.011903,-6.557758,-7.429888,8.053115,9.782128,-0.054279,7.269760,-7.265420,1.156182,8.590012,6.697857,3.379630,-8.113869,9.865696,-8.283805,5.109799,8.894081,1.541660,-6.912785,-4.659002,-0.027712,6.283196,-5.975525,-6.331400,0.060143,-7.931933,-3.305109,7.416706,6.376593,2.212634,9.967454,5.790191,-1.477376,9.761986,2.760952,1.112427,-4.777465,4.994322,-8.241838,9.531808,1.741423,-1.326179,1.417643,8.997448,4.853625,-8.763585,0.223323,6.107798,-9.549560,-7.685850,-1.884176,0.889377,-2.852684,-9.583459,3.610752,-2.473910,8.088074,-5.825520,-1.700159,7.333487,-9.122280,6.345199,2.665042,-8.699658,8.263416,1.203327,-8.297181,-0.392275,-9.419637,4.052776,-8.473049,-5.096949,8.749513,-0.851301,-4.398489,2.936579,7.937502,-8.549467,8.566971,-2.189393,-7.050284,2.324742,0.840816,8.792786,-5.625216,9.328370,5.261359,-1.986250,-7.632004,-4.671407,-1.119417,-4.375489,-8.669895,-5.769885,1.962148,-2.979859,-4.447099,-9.649526,-1.869001,3.642745,-9.588908,9.472312,6.731041,-0.300167,8.269316,-6.170314,-8.525886,4.154878,-0.597297,1.298917,3.131546,1.405175,6.417195,6.283210,8.657069,-0.316179,1.639215,2.767653,1.281742,-0.492338,1.942941,-4.388416,8.863706,-9.623359,9.045255,1.075303,-1.071949,-1.300815,-1.710395,2.976835,2.496569,-3.280394,2.651271,2.322318,2.632448,3.678871,-5.419823,5.738234,-8.983187,3.390691,1.471676,-7.426629,4.434701,2.200039,-8.698956,-0.416887,-9.038619,-5.366948,-4.235316,-1.416607,1.591258,-3.729398,9.698207,-3.791866,-7.195601,5.976641,-9.183055,5.521026,-6.216886,-2.514951,4.613278,-5.492782,4.573197,4.704139,-5.339333,3.457232,-2.722230,-0.601021,3.441491,8.018701,-9.804018,7.293772,-1.459910,7.480036,9.019780,4.678609,-9.431312], dtype = "float64")#candidate|3645|(336,)|const|float64
call_3643 = relay.TupleGetItem(func_374_call(relay.reshape(var_3644.astype('float32'), [9, 14]), relay.reshape(const_3645.astype('float64'), [336,]), ), 1)
call_3646 = relay.TupleGetItem(func_378_call(relay.reshape(var_3644.astype('float32'), [9, 14]), relay.reshape(const_3645.astype('float64'), [336,]), ), 1)
func_64_call = mod.get_global_var('func_64')
func_66_call = mutated_mod.get_global_var('func_66')
call_3647 = relay.TupleGetItem(func_64_call(relay.reshape(const_3645.astype('float64'), [16, 7, 3])), 0)
call_3648 = relay.TupleGetItem(func_66_call(relay.reshape(const_3645.astype('float64'), [16, 7, 3])), 0)
func_3359_call = mod.get_global_var('func_3359')
func_3361_call = mutated_mod.get_global_var('func_3361')
call_3674 = relay.TupleGetItem(func_3359_call(), 0)
call_3675 = relay.TupleGetItem(func_3361_call(), 0)
func_1709_call = mod.get_global_var('func_1709')
func_1711_call = mutated_mod.get_global_var('func_1711')
call_3680 = relay.TupleGetItem(func_1709_call(), 2)
call_3681 = relay.TupleGetItem(func_1711_call(), 2)
output = relay.Tuple([call_3634,call_3643,var_3644,const_3645,call_3647,call_3674,call_3680,])
output2 = relay.Tuple([call_3635,call_3646,var_3644,const_3645,call_3648,call_3675,call_3681,])
func_3684 = relay.Function([var_3644,], output)
mod['func_3684'] = func_3684
mod = relay.transform.InferType()(mod)
var_3685 = relay.var("var_3685", dtype = "float32", shape = (126,))#candidate|3685|(126,)|var|float32
output = func_3684(var_3685)
func_3686 = relay.Function([var_3685], output)
mutated_mod['func_3686'] = func_3686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3214_call = mod.get_global_var('func_3214')
func_3216_call = mutated_mod.get_global_var('func_3216')
call_3768 = relay.TupleGetItem(func_3214_call(), 0)
call_3769 = relay.TupleGetItem(func_3216_call(), 0)
output = relay.Tuple([call_3768,])
output2 = relay.Tuple([call_3769,])
func_3783 = relay.Function([], output)
mod['func_3783'] = func_3783
mod = relay.transform.InferType()(mod)
output = func_3783()
func_3784 = relay.Function([], output)
mutated_mod['func_3784'] = func_3784
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3827 = relay.var("var_3827", dtype = "float64", shape = (6, 2, 16))#candidate|3827|(6, 2, 16)|var|float64
uop_3828 = relay.atan(var_3827.astype('float64')) # shape=(6, 2, 16)
uop_3845 = relay.acosh(var_3827.astype('float32')) # shape=(6, 2, 16)
bop_3855 = relay.maximum(uop_3845.astype('uint8'), relay.reshape(var_3827.astype('uint8'), relay.shape_of(uop_3845))) # shape=(6, 2, 16)
output = relay.Tuple([uop_3828,bop_3855,])
output2 = relay.Tuple([uop_3828,bop_3855,])
func_3862 = relay.Function([var_3827,], output)
mod['func_3862'] = func_3862
mod = relay.transform.InferType()(mod)
var_3863 = relay.var("var_3863", dtype = "float64", shape = (6, 2, 16))#candidate|3863|(6, 2, 16)|var|float64
output = func_3862(var_3863)
func_3864 = relay.Function([var_3863], output)
mutated_mod['func_3864'] = func_3864
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3919 = relay.var("var_3919", dtype = "float32", shape = (12, 2, 1))#candidate|3919|(12, 2, 1)|var|float32
uop_3920 = relay.acos(var_3919.astype('float32')) # shape=(12, 2, 1)
bop_3922 = relay.greater_equal(uop_3920.astype('bool'), relay.reshape(var_3919.astype('bool'), relay.shape_of(uop_3920))) # shape=(12, 2, 1)
output = bop_3922
output2 = bop_3922
func_3937 = relay.Function([var_3919,], output)
mod['func_3937'] = func_3937
mod = relay.transform.InferType()(mod)
var_3938 = relay.var("var_3938", dtype = "float32", shape = (12, 2, 1))#candidate|3938|(12, 2, 1)|var|float32
output = func_3937(var_3938)
func_3939 = relay.Function([var_3938], output)
mutated_mod['func_3939'] = func_3939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1756_call = mod.get_global_var('func_1756')
func_1757_call = mutated_mod.get_global_var('func_1757')
call_4013 = relay.TupleGetItem(func_1756_call(), 1)
call_4014 = relay.TupleGetItem(func_1757_call(), 1)
func_3862_call = mod.get_global_var('func_3862')
func_3864_call = mutated_mod.get_global_var('func_3864')
var_4033 = relay.var("var_4033", dtype = "float64", shape = (192,))#candidate|4033|(192,)|var|float64
call_4032 = relay.TupleGetItem(func_3862_call(relay.reshape(var_4033.astype('float64'), [6, 2, 16])), 0)
call_4034 = relay.TupleGetItem(func_3864_call(relay.reshape(var_4033.astype('float64'), [6, 2, 16])), 0)
output = relay.Tuple([call_4013,call_4032,var_4033,])
output2 = relay.Tuple([call_4014,call_4034,var_4033,])
func_4039 = relay.Function([var_4033,], output)
mod['func_4039'] = func_4039
mod = relay.transform.InferType()(mod)
mutated_mod['func_4039'] = func_4039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4040 = relay.var("var_4040", dtype = "float64", shape = (192,))#candidate|4040|(192,)|var|float64
func_4039_call = mutated_mod.get_global_var('func_4039')
call_4041 = func_4039_call(var_4040)
output = call_4041
func_4042 = relay.Function([var_4040], output)
mutated_mod['func_4042'] = func_4042
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4047 = relay.var("var_4047", dtype = "float64", shape = (5, 4, 8))#candidate|4047|(5, 4, 8)|var|float64
uop_4048 = relay.sin(var_4047.astype('float64')) # shape=(5, 4, 8)
var_4056 = relay.var("var_4056", dtype = "float64", shape = (5, 4, 8))#candidate|4056|(5, 4, 8)|var|float64
bop_4057 = relay.logical_xor(var_4047.astype('int32'), relay.reshape(var_4056.astype('int32'), relay.shape_of(var_4047))) # shape=(5, 4, 8)
func_3937_call = mod.get_global_var('func_3937')
func_3939_call = mutated_mod.get_global_var('func_3939')
var_4061 = relay.var("var_4061", dtype = "float32", shape = (1, 24))#candidate|4061|(1, 24)|var|float32
call_4060 = func_3937_call(relay.reshape(var_4061.astype('float32'), [12, 2, 1]))
call_4062 = func_3937_call(relay.reshape(var_4061.astype('float32'), [12, 2, 1]))
func_2798_call = mod.get_global_var('func_2798')
func_2799_call = mutated_mod.get_global_var('func_2799')
call_4066 = relay.TupleGetItem(func_2798_call(), 0)
call_4067 = relay.TupleGetItem(func_2799_call(), 0)
const_4087 = relay.const([[[False,True,False,True],[True,True,False,False]],[[True,False,True,False],[False,True,True,True]],[[False,True,True,True],[False,False,True,False]],[[True,False,False,True],[True,True,True,True]],[[False,True,False,True],[False,False,True,False]],[[False,False,False,False],[True,True,False,True]],[[False,True,True,True],[False,False,True,True]],[[False,True,False,True],[False,True,False,False]],[[False,False,True,False],[False,False,False,True]],[[False,True,True,True],[False,True,True,True]],[[True,False,False,True],[False,True,False,False]],[[True,False,True,True],[True,True,False,True]]], dtype = "bool")#candidate|4087|(12, 2, 4)|const|bool
bop_4088 = relay.greater(call_4060.astype('bool'), const_4087.astype('bool')) # shape=(12, 2, 4)
bop_4091 = relay.greater(call_4062.astype('bool'), const_4087.astype('bool')) # shape=(12, 2, 4)
bop_4096 = relay.right_shift(var_4056.astype('uint16'), relay.reshape(bop_4057.astype('uint16'), relay.shape_of(var_4056))) # shape=(5, 4, 8)
func_956_call = mod.get_global_var('func_956')
func_958_call = mutated_mod.get_global_var('func_958')
const_4109 = relay.const([[False,True],[False,False],[False,True],[True,True],[False,True],[True,False],[True,False],[True,False],[True,False],[True,False],[False,True],[False,True],[False,False],[True,True],[True,False],[True,True],[True,True],[True,False],[False,False],[True,False],[True,False],[False,True],[False,False],[True,True],[False,False],[True,False],[False,False],[True,False],[False,False],[False,True],[False,True],[False,True],[False,True],[True,False],[True,False],[False,True],[False,False],[False,False],[False,True],[False,False],[False,True],[False,False]], dtype = "bool")#candidate|4109|(42, 2)|const|bool
call_4108 = func_956_call(relay.reshape(const_4109.astype('bool'), [2, 6, 7]))
call_4110 = func_956_call(relay.reshape(const_4109.astype('bool'), [2, 6, 7]))
func_2543_call = mod.get_global_var('func_2543')
func_2547_call = mutated_mod.get_global_var('func_2547')
var_4116 = relay.var("var_4116", dtype = "float32", shape = (5, 4))#candidate|4116|(5, 4)|var|float32
call_4115 = relay.TupleGetItem(func_2543_call(relay.reshape(var_4116.astype('float32'), [20,]), relay.reshape(call_4108.astype('bool'), [84,]), ), 5)
call_4117 = relay.TupleGetItem(func_2547_call(relay.reshape(var_4116.astype('float32'), [20,]), relay.reshape(call_4108.astype('bool'), [84,]), ), 5)
func_2639_call = mod.get_global_var('func_2639')
func_2641_call = mutated_mod.get_global_var('func_2641')
var_4119 = relay.var("var_4119", dtype = "float32", shape = (126,))#candidate|4119|(126,)|var|float32
call_4118 = relay.TupleGetItem(func_2639_call(relay.reshape(var_4119.astype('float32'), [126,])), 2)
call_4120 = relay.TupleGetItem(func_2641_call(relay.reshape(var_4119.astype('float32'), [126,])), 2)
bop_4124 = relay.maximum(uop_4048.astype('uint8'), relay.reshape(bop_4057.astype('uint8'), relay.shape_of(uop_4048))) # shape=(5, 4, 8)
output = relay.Tuple([var_4061,call_4066,bop_4088,bop_4096,call_4108,const_4109,call_4115,var_4116,call_4118,var_4119,bop_4124,])
output2 = relay.Tuple([var_4061,call_4067,bop_4091,bop_4096,call_4110,const_4109,call_4117,var_4116,call_4120,var_4119,bop_4124,])
func_4144 = relay.Function([var_4047,var_4056,var_4061,var_4116,var_4119,], output)
mod['func_4144'] = func_4144
mod = relay.transform.InferType()(mod)
var_4145 = relay.var("var_4145", dtype = "float64", shape = (5, 4, 8))#candidate|4145|(5, 4, 8)|var|float64
var_4146 = relay.var("var_4146", dtype = "float64", shape = (5, 4, 8))#candidate|4146|(5, 4, 8)|var|float64
var_4147 = relay.var("var_4147", dtype = "float32", shape = (1, 24))#candidate|4147|(1, 24)|var|float32
var_4148 = relay.var("var_4148", dtype = "float32", shape = (5, 4))#candidate|4148|(5, 4)|var|float32
var_4149 = relay.var("var_4149", dtype = "float32", shape = (126,))#candidate|4149|(126,)|var|float32
output = func_4144(var_4145,var_4146,var_4147,var_4148,var_4149,)
func_4150 = relay.Function([var_4145,var_4146,var_4147,var_4148,var_4149,], output)
mutated_mod['func_4150'] = func_4150
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4243 = relay.const([[[3,-4,-8,-9,1,-1,-6,4,-7,-2,5,-7,-8,-4],[10,-6,7,-6,-6,7,2,8,4,-1,-2,-1,5,-2],[2,-3,-5,9,-8,-6,-10,4,10,2,-5,-7,4,-6],[6,1,-5,4,5,9,-8,10,7,-10,5,2,-4,8],[7,-10,3,4,-8,-5,2,8,10,-8,1,5,1,-7],[8,-7,-1,-1,8,10,4,9,-3,5,-5,10,10,-4],[-7,-8,-10,4,-9,4,10,3,3,-9,-1,8,7,3],[-7,10,2,1,-2,1,-9,3,3,5,-10,-10,9,8],[-10,-5,10,3,5,3,-8,-3,3,8,9,-2,10,-9],[-4,6,10,10,-9,3,8,1,4,5,-9,-5,-8,9],[-1,-8,-7,-8,8,-8,-3,-10,9,-5,7,-10,4,-5],[2,-2,-2,5,-7,-8,-1,3,-7,2,-6,7,-10,-10],[-2,-9,-10,-7,-3,4,7,6,-6,1,4,9,4,-3],[-5,-9,9,3,-10,2,5,3,7,10,-10,7,8,-4],[-4,-7,2,-5,-5,-10,9,8,9,-5,-3,-10,-10,5]],[[-4,10,-5,-6,6,-8,10,-6,10,-4,-5,5,-8,1],[3,5,6,-7,4,-10,5,-1,-5,-5,-3,6,-1,-8],[-8,-6,6,10,7,-4,3,1,-3,-2,-9,7,-7,2],[4,5,-8,4,-2,-7,-4,-10,-7,2,3,-10,10,-6],[10,4,-7,-7,2,8,-4,5,-8,-4,5,-4,-9,-9],[-2,7,-3,6,-4,5,-4,1,8,5,-10,2,4,-2],[-10,3,7,6,3,-10,-6,-4,-7,-8,1,-2,4,-6],[10,1,-10,4,6,-7,-1,-7,-9,-7,4,-1,1,-5],[7,-3,-9,7,-3,-7,10,-8,-1,9,-4,8,4,-4],[-5,1,-2,9,3,3,8,2,5,10,-7,-10,7,-10],[9,7,-6,-8,-3,4,-4,1,-8,-9,-7,3,-9,-4],[2,7,-9,-7,-3,5,-3,-3,5,-8,-8,-8,-7,-8],[5,-3,5,10,4,-1,4,6,-5,6,-4,-3,-3,-7],[3,7,7,-4,-9,10,-2,2,-9,3,7,3,4,-4],[-8,-9,6,8,-7,-6,7,-2,7,4,4,9,9,-5]],[[-10,1,-9,1,-10,1,-3,6,4,-10,-5,8,-4,-3],[1,-5,6,-8,-10,-4,-8,-8,1,1,-3,8,-5,-7],[3,1,7,-2,-6,2,9,-6,1,10,-9,9,3,-10],[-4,-9,-7,9,-8,9,-3,-10,6,-1,-2,-1,3,-3],[-7,-7,9,6,-8,-10,-7,-10,9,-5,8,4,-9,10],[-4,10,-7,-2,5,-4,4,7,2,-4,-9,-8,6,-6],[-4,9,-3,-9,8,-9,-1,3,-5,-9,-10,-10,3,-8],[9,-6,-2,2,3,-6,-5,3,-7,3,9,-1,-4,-9],[-10,-8,1,-3,-6,-8,6,-2,-8,9,1,7,4,10],[10,7,-6,-8,-6,2,6,4,4,5,1,7,-7,-4],[4,-1,5,6,-2,10,7,-3,-2,7,3,7,-7,7],[-1,-5,7,1,3,-7,6,-4,-9,-6,-3,8,6,-9],[-10,-8,-9,7,-10,-10,-8,9,-4,6,1,-8,-4,10],[2,4,-8,-2,-5,5,-9,-8,3,2,-2,3,-10,-8],[7,-6,-9,-10,3,4,-3,3,3,1,-1,-5,1,6]],[[1,8,2,-7,-6,-10,1,7,2,-7,3,2,1,7],[-7,3,-7,-6,-7,-1,-1,10,-6,5,-8,4,-10,-5],[6,-3,7,1,-9,6,-1,8,10,2,-6,-4,9,6],[-6,10,-5,7,1,7,-6,-5,-9,-8,3,-5,-7,3],[-6,-5,10,-8,-8,-10,-4,8,-1,8,-8,-1,6,-1],[-4,9,3,-4,-9,1,-9,6,-7,7,9,-8,-10,9],[-2,9,7,5,1,-5,6,-8,7,10,8,2,3,-4],[8,8,-6,-7,4,2,-5,-6,3,6,7,5,-5,1],[-8,8,-10,9,3,6,-10,-5,-5,6,6,-1,-7,-6],[-5,8,-4,3,-5,10,8,7,6,3,-4,1,-10,-1],[-9,9,8,9,-8,-7,-3,-2,5,-1,3,2,2,5],[6,-10,5,-8,9,-4,-8,-9,-10,-5,10,5,9,-1],[1,-4,-4,-9,-4,-1,-4,9,7,-4,10,-1,-5,-6],[-4,-9,4,1,8,6,-6,-8,-5,-2,-6,1,-6,-6],[9,-7,-8,-7,10,10,-7,-3,-5,-3,7,-5,4,8]],[[-8,-2,6,-9,8,9,-5,7,7,-5,10,-5,5,-1],[-5,8,-1,8,10,4,-5,-5,1,-2,-3,-3,5,1],[7,9,-8,3,7,-9,-3,6,-7,8,-4,-6,-7,1],[6,-4,-3,5,9,-5,1,3,8,-4,10,-2,-2,1],[-7,3,-4,4,-7,-3,7,3,1,-6,5,3,-9,10],[-3,-3,3,2,1,9,7,6,-9,5,-5,10,-8,5],[-7,-1,6,-1,-7,8,-10,-8,6,-2,3,4,6,-9],[-6,2,-9,-4,-6,-4,9,-3,-7,-6,4,-10,5,6],[8,6,8,-7,-2,2,7,2,-5,3,-3,7,-10,6],[-2,7,-6,6,-4,2,6,-5,-7,-9,10,-6,-2,2],[-1,7,1,-5,-10,4,4,9,8,-4,-9,-9,4,5],[10,10,-8,-7,5,-7,-3,-7,6,8,10,-1,3,-9],[7,3,-1,-1,1,9,1,9,6,-10,5,-8,-8,-5],[1,7,8,-7,4,10,-7,-1,5,-10,-7,-3,8,7],[-10,-6,6,9,7,7,-6,-7,5,1,8,-3,4,7]],[[-7,10,9,-10,-1,-9,7,-10,-2,-7,-2,9,2,7],[7,-9,-10,-6,5,4,-7,6,10,8,-10,-10,-3,-4],[-2,2,5,-6,2,-4,7,5,-10,7,-7,-1,-10,-3],[2,8,8,-3,-3,8,8,2,-9,-9,-10,-10,-1,-5],[-3,-4,4,7,3,-7,-9,-10,8,-4,1,-7,-2,-7],[7,4,10,5,1,8,-3,8,9,-1,-4,-3,8,5],[6,-3,-3,4,-6,-7,-10,10,-9,5,10,4,-1,-6],[-8,1,4,8,-2,1,9,6,5,3,6,-2,4,-8],[-3,-5,9,7,-9,-1,7,-8,3,8,-2,2,8,4],[-1,6,1,7,5,-3,6,5,7,-2,9,-8,10,9],[-7,-2,7,2,-9,-8,-2,-9,7,4,9,-8,-5,-9],[8,4,3,4,4,-8,5,-9,10,-5,-4,-3,-4,-1],[-7,5,8,-3,-7,-1,-2,-4,-6,6,-1,-3,10,7],[-8,5,9,-5,1,-8,-4,9,-7,-5,-8,-8,-1,-5],[10,-7,10,-8,-3,-6,2,5,2,-3,9,-1,-8,5]]], dtype = "uint16")#candidate|4243|(6, 15, 14)|const|uint16
var_4244 = relay.var("var_4244", dtype = "uint16", shape = (6, 15, 14))#candidate|4244|(6, 15, 14)|var|uint16
bop_4245 = relay.multiply(const_4243.astype('uint16'), relay.reshape(var_4244.astype('uint16'), relay.shape_of(const_4243))) # shape=(6, 15, 14)
bop_4256 = relay.bitwise_and(const_4243.astype('int8'), relay.reshape(bop_4245.astype('int8'), relay.shape_of(const_4243))) # shape=(6, 15, 14)
func_3180_call = mod.get_global_var('func_3180')
func_3183_call = mutated_mod.get_global_var('func_3183')
var_4261 = relay.var("var_4261", dtype = "float64", shape = (24, 14))#candidate|4261|(24, 14)|var|float64
call_4260 = relay.TupleGetItem(func_3180_call(relay.reshape(var_4261.astype('float64'), [168, 2])), 2)
call_4262 = relay.TupleGetItem(func_3183_call(relay.reshape(var_4261.astype('float64'), [168, 2])), 2)
output = relay.Tuple([bop_4256,call_4260,var_4261,])
output2 = relay.Tuple([bop_4256,call_4262,var_4261,])
func_4263 = relay.Function([var_4244,var_4261,], output)
mod['func_4263'] = func_4263
mod = relay.transform.InferType()(mod)
mutated_mod['func_4263'] = func_4263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4263_call = mutated_mod.get_global_var('func_4263')
var_4265 = relay.var("var_4265", dtype = "uint16", shape = (6, 15, 14))#candidate|4265|(6, 15, 14)|var|uint16
var_4266 = relay.var("var_4266", dtype = "float64", shape = (24, 14))#candidate|4266|(24, 14)|var|float64
call_4264 = func_4263_call(var_4265,var_4266,)
output = call_4264
func_4267 = relay.Function([var_4265,var_4266,], output)
mutated_mod['func_4267'] = func_4267
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4274 = relay.const([[[-8.618827,6.583891,2.935478,9.537988,-4.453420,-5.961329,-9.653280,2.531809,-9.141745,-3.014000,-0.897779,-6.371743]],[[-1.258373,-1.875186,-8.341022,9.640411,-8.528914,2.517683,3.201705,9.120768,8.276204,-5.632880,-4.542429,-8.017985]],[[5.508705,1.328710,-4.954349,-8.086582,0.498528,2.311934,-0.802055,-0.312032,-5.567990,-9.322055,-5.267122,5.019123]],[[2.000921,0.557443,5.853994,-7.902721,6.324479,2.549964,7.558323,-4.348323,-2.342486,-8.182460,-4.433584,8.848863]],[[-5.954767,-2.217065,-1.846498,-3.866950,2.314806,3.294731,-2.609807,-2.412494,5.095354,1.461690,8.452176,9.084985]],[[4.457808,-8.019579,0.915638,-6.617116,4.958179,-4.614980,-8.009794,0.672253,2.688703,9.108487,-4.235568,4.849080]],[[6.864336,-3.152884,-9.085532,-3.512691,-3.603562,-7.751873,8.427083,2.665997,0.930159,-2.528299,4.891459,-8.957104]],[[-9.125259,-8.280930,6.842426,-4.497751,-7.929207,9.270802,-5.397365,-7.616438,-1.820110,-5.654019,-4.141103,-4.496543]],[[-6.777211,0.048596,-8.727572,-3.211262,3.460827,7.003502,-0.144738,2.247261,-2.722054,5.714678,8.631883,4.362458]],[[-9.507450,3.725966,-4.733887,9.211881,-2.616365,-6.612198,-9.269222,5.947304,8.863994,-9.393616,-4.533584,-1.222070]],[[-7.193901,6.173677,0.599790,5.857572,5.420012,-2.057055,-2.584476,-1.777970,9.407243,0.352817,7.519231,6.507534]]], dtype = "float32")#candidate|4274|(11, 1, 12)|const|float32
uop_4275 = relay.tan(const_4274.astype('float32')) # shape=(11, 1, 12)
output = relay.Tuple([uop_4275,])
output2 = relay.Tuple([uop_4275,])
func_4281 = relay.Function([], output)
mod['func_4281'] = func_4281
mod = relay.transform.InferType()(mod)
mutated_mod['func_4281'] = func_4281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4281_call = mutated_mod.get_global_var('func_4281')
call_4282 = func_4281_call()
output = call_4282
func_4283 = relay.Function([], output)
mutated_mod['func_4283'] = func_4283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4281_call = mod.get_global_var('func_4281')
func_4283_call = mutated_mod.get_global_var('func_4283')
call_4313 = relay.TupleGetItem(func_4281_call(), 0)
call_4314 = relay.TupleGetItem(func_4283_call(), 0)
output = relay.Tuple([call_4313,])
output2 = relay.Tuple([call_4314,])
func_4316 = relay.Function([], output)
mod['func_4316'] = func_4316
mod = relay.transform.InferType()(mod)
mutated_mod['func_4316'] = func_4316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4316_call = mutated_mod.get_global_var('func_4316')
call_4317 = func_4316_call()
output = call_4317
func_4318 = relay.Function([], output)
mutated_mod['func_4318'] = func_4318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2411_call = mod.get_global_var('func_2411')
func_2412_call = mutated_mod.get_global_var('func_2412')
call_4361 = relay.TupleGetItem(func_2411_call(), 2)
call_4362 = relay.TupleGetItem(func_2412_call(), 2)
func_1709_call = mod.get_global_var('func_1709')
func_1711_call = mutated_mod.get_global_var('func_1711')
call_4366 = relay.TupleGetItem(func_1709_call(), 3)
call_4367 = relay.TupleGetItem(func_1711_call(), 3)
const_4378 = relay.const([-4.943171,-3.718373,9.100304,-4.874290,-2.175398,-0.104736,-3.162577,-6.799747,1.793167,-6.683674,-8.671803,-1.336323,4.678521,9.116729,6.949194,8.422992,-6.831127,4.100905,7.106065,-4.215106,-9.578052,2.129665,-6.670337,-8.303039,-0.002790,1.323134,9.102276,-3.540085,-6.718479,-8.928928,-0.026614,8.525231,-8.960856,-8.972004,6.517700,2.988386,5.267017,-0.429086,-2.574712,4.409212,5.748504,4.547063,-4.096156,4.197526,-0.670674,-8.651965,6.655836,0.393821,-5.436953,1.830353,6.805592,1.181468,-6.219375,-7.513853,-7.284241,0.510309,-9.966968,-0.547115,-6.927277,-3.063094,-2.110409,3.113446,-4.999863,4.386058,-4.829561,-7.337465,2.553469,-7.831896,-9.877763,-9.439819,-4.724272,-7.305672,-8.362103,5.726413,2.166894,3.579403,-4.679809,0.961045,-5.155441,-4.710609,-2.620460,-8.017141,-6.804709,4.937137,3.870665,-3.383623,5.543918,3.835057,0.507163,6.622485,-4.019680,-9.599293,3.845867,5.713586,-9.582713,6.411753,5.811897,-5.221620,-0.111900,-5.763856,3.817696,-4.197006,0.567390,7.027969,-9.855761,8.102627,0.883920,-9.999969,-0.776302,-6.104343,1.880924,8.943148,1.094966,-8.472731,4.656049,-0.239008,0.559173,9.194894,-8.606319,-1.107517,0.055377,6.762615,9.679485,-8.972449,7.953492,1.299429,-6.110838,5.164671,-8.252918,3.009904,-2.606563,4.862284,-1.032729,2.698125,3.869222,-2.811243,1.213969,3.039528,5.286632,-3.574026,2.318843,0.961339,-0.885316,7.962351,-6.831550,-2.618217,-2.765459,4.567237,9.170472,7.852587,-6.055319,6.373470,6.616410,-0.283284,-4.063167,-6.774714,-5.926743,0.113760,-8.272897,-8.505013,-3.694416,-7.001595,-0.912276,5.900676,-1.578395,-7.476061,-0.619506,-2.642967,-3.119542,-0.949863,-3.316843,-3.746677,-2.661675,0.633105,6.665180,-9.784531,7.109829,-3.405346,-8.762734,4.727319,6.982861,7.393724,8.954536,4.490053,-8.955315,8.964597,-3.069167,-2.777366,3.980614,-8.546573,7.267028,-1.973547,6.541617,-1.100062,8.463765,-4.695955,8.768027,-3.490766,1.460341,-0.057428,-8.204792,-1.535057,-2.746996,5.813435,2.918266,-2.106911,-0.097912,7.024488,7.703806,5.153732,6.279343,0.069161,1.024549,7.297621,-5.116210,2.365010,7.201548,2.720975,-7.057247,-2.046067,-7.871241,-8.834963,9.043507,-8.610038,3.577867,5.458908,6.502673,5.872622,3.359516,-6.180396,-5.064140,-4.178304,3.803147,8.198843,-1.630464,5.196239,-3.264526,-6.096451,9.476459,7.503260,-8.949176,6.458099,2.015623,3.088560,-3.618070,-4.181401,8.796695,-0.822827,3.875753,-7.250839,4.031494,-9.024880,8.849188,-5.137766,-0.787400,5.312081,-6.150465,-8.566281,9.426598,-1.048436,3.870163,-1.356914,2.737098,-9.988901,7.419930,3.363146,-1.448627,-6.516473,-8.521665,0.908217,-7.276947,7.056818,3.973230,6.494514,7.761731,-2.733924,-0.756933,8.997594,-3.339976,-1.561505,-5.949156,-7.159432,-6.564328,-2.779075,6.599163,4.570811,-4.824056,8.090609,-6.986646,-2.478735,-9.217197,6.249866,-3.365938,3.931537,-1.632983,-6.809411,3.289187,0.448873,9.426151,-8.477976,7.866794,8.383688,-3.470487,-0.990776,1.200958,2.510581,1.084354,-4.060013,4.934759,-3.738275,-3.166105,9.098008,-7.562015,7.445809,-9.730748,-9.638386,8.883197,-6.214148,-5.049656,-3.558918,7.861783,-6.707219,-4.075060,-0.129962,-2.649728,9.750797,8.632549,-2.440684,-6.389331,-6.203533,9.328766,-0.903340,-9.114695,-0.702119,7.749751,-6.276413], dtype = "float64")#candidate|4378|(336,)|const|float64
bop_4379 = relay.less(call_4366.astype('bool'), relay.reshape(const_4378.astype('bool'), relay.shape_of(call_4366))) # shape=(336,)
bop_4382 = relay.less(call_4367.astype('bool'), relay.reshape(const_4378.astype('bool'), relay.shape_of(call_4367))) # shape=(336,)
func_4281_call = mod.get_global_var('func_4281')
func_4283_call = mutated_mod.get_global_var('func_4283')
call_4389 = relay.TupleGetItem(func_4281_call(), 0)
call_4390 = relay.TupleGetItem(func_4283_call(), 0)
output = relay.Tuple([call_4361,bop_4379,call_4389,])
output2 = relay.Tuple([call_4362,bop_4382,call_4390,])
func_4427 = relay.Function([], output)
mod['func_4427'] = func_4427
mod = relay.transform.InferType()(mod)
mutated_mod['func_4427'] = func_4427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4427_call = mutated_mod.get_global_var('func_4427')
call_4428 = func_4427_call()
output = call_4428
func_4429 = relay.Function([], output)
mutated_mod['func_4429'] = func_4429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2936_call = mod.get_global_var('func_2936')
func_2938_call = mutated_mod.get_global_var('func_2938')
call_4469 = relay.TupleGetItem(func_2936_call(), 0)
call_4470 = relay.TupleGetItem(func_2938_call(), 0)
output = relay.Tuple([call_4469,])
output2 = relay.Tuple([call_4470,])
func_4473 = relay.Function([], output)
mod['func_4473'] = func_4473
mod = relay.transform.InferType()(mod)
output = func_4473()
func_4474 = relay.Function([], output)
mutated_mod['func_4474'] = func_4474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2411_call = mod.get_global_var('func_2411')
func_2412_call = mutated_mod.get_global_var('func_2412')
call_4486 = relay.TupleGetItem(func_2411_call(), 1)
call_4487 = relay.TupleGetItem(func_2412_call(), 1)
func_3629_call = mod.get_global_var('func_3629')
func_3631_call = mutated_mod.get_global_var('func_3631')
call_4501 = relay.TupleGetItem(func_3629_call(), 0)
call_4502 = relay.TupleGetItem(func_3631_call(), 0)
func_3374_call = mod.get_global_var('func_3374')
func_3376_call = mutated_mod.get_global_var('func_3376')
call_4506 = relay.TupleGetItem(func_3374_call(), 1)
call_4507 = relay.TupleGetItem(func_3376_call(), 1)
output = relay.Tuple([call_4486,call_4501,call_4506,])
output2 = relay.Tuple([call_4487,call_4502,call_4507,])
func_4516 = relay.Function([], output)
mod['func_4516'] = func_4516
mod = relay.transform.InferType()(mod)
output = func_4516()
func_4517 = relay.Function([], output)
mutated_mod['func_4517'] = func_4517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3043_call = mod.get_global_var('func_3043')
func_3045_call = mutated_mod.get_global_var('func_3045')
call_4528 = func_3043_call()
call_4529 = func_3043_call()
func_3937_call = mod.get_global_var('func_3937')
func_3939_call = mutated_mod.get_global_var('func_3939')
var_4560 = relay.var("var_4560", dtype = "float32", shape = (24,))#candidate|4560|(24,)|var|float32
call_4559 = func_3937_call(relay.reshape(var_4560.astype('float32'), [12, 2, 1]))
call_4561 = func_3937_call(relay.reshape(var_4560.astype('float32'), [12, 2, 1]))
func_2365_call = mod.get_global_var('func_2365')
func_2369_call = mutated_mod.get_global_var('func_2369')
const_4564 = relay.const([-8,-9,6,3,6,-5,8,9,7,-5,10,-9,-4,-3,-7,-2,5,-6,-5,2,4,6,-9,10,-6,-10,8,5,6,10,4,2,3,-10,-9,-10,10,-7,-2,3,-5,-4,-2,-6,5,-4,9,-8,-6,-9,-1,-9,6,7,6,-3,5,-3,-6,-7,-4,2,9,-4,-8,-9,3,-9,-8,4,-8,-3,4,-2,-5,-3,-10,-10,5,-3,8,-2,-9,-9,-7,1,2,8,1,8,9,-3,-8,-7,9,-4,1,8,-6,9,2,9,-3,1,7,10,-5,-4,-5,4,10,-1,-5,-2,-7,-4,-10,-6,10,-9,-9,2,9,6,6,10,-9,8,9,5,-9,-9,-2,2,-2,-10,9,6,-7,-3,-4,10,3,5,5,2,-1,-5,-5,6,9,2,-7,7,3,-8,5,8,5,10,5,6,-2,-10,9,6,-1,3,7,3,-1,6,-10,-2,2,-7,-3,-3,-5,1,9,1,6,-10,-5,4,6,10,6,3,5,5,6,-4,-10,-4,-4,1,-8,-2,3,-8,6,5,1,10,-9,-5,-2,5,-6,3,5,-8,2,-5,-6,6,-1,1,-10,-8,-5,-3,2,9,10,-7,-5,-5,7,-5,-2,-2,-1,-7,-6,-1,7,-8,-3,-8,2,-5,2,-5,1,9,-1,10,-8,5,9,-4,10,-7,2,8,-1,-10,-7,2,-7,3,4,1,8,3,-2,6,-3,-6,10,-9,-9,6,6,-3,-6,2,-2,1,1,-1,-3,6,2,2,-8,-5,-10,2,-6,8,5,-4,-4,-9,1,7,-9,-1,-5,-4,-4,9,-9,-9,-9,-1,-10,1,1,9,2,-5,1,1,-1,-8,-4,-8,-1,10], dtype = "uint32")#candidate|4564|(324,)|const|uint32
call_4563 = relay.TupleGetItem(func_2365_call(relay.reshape(const_4564.astype('uint32'), [12, 3, 9]), relay.reshape(const_4564.astype('uint32'), [12, 3, 9]), ), 3)
call_4565 = relay.TupleGetItem(func_2369_call(relay.reshape(const_4564.astype('uint32'), [12, 3, 9]), relay.reshape(const_4564.astype('uint32'), [12, 3, 9]), ), 3)
func_4427_call = mod.get_global_var('func_4427')
func_4429_call = mutated_mod.get_global_var('func_4429')
call_4574 = relay.TupleGetItem(func_4427_call(), 1)
call_4575 = relay.TupleGetItem(func_4429_call(), 1)
output = relay.Tuple([call_4528,call_4559,var_4560,call_4563,const_4564,call_4574,])
output2 = relay.Tuple([call_4529,call_4561,var_4560,call_4565,const_4564,call_4575,])
func_4588 = relay.Function([var_4560,], output)
mod['func_4588'] = func_4588
mod = relay.transform.InferType()(mod)
var_4589 = relay.var("var_4589", dtype = "float32", shape = (24,))#candidate|4589|(24,)|var|float32
output = func_4588(var_4589)
func_4590 = relay.Function([var_4589], output)
mutated_mod['func_4590'] = func_4590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2436_call = mod.get_global_var('func_2436')
func_2437_call = mutated_mod.get_global_var('func_2437')
call_4633 = relay.TupleGetItem(func_2436_call(), 0)
call_4634 = relay.TupleGetItem(func_2437_call(), 0)
output = relay.Tuple([call_4633,])
output2 = relay.Tuple([call_4634,])
func_4652 = relay.Function([], output)
mod['func_4652'] = func_4652
mod = relay.transform.InferType()(mod)
output = func_4652()
func_4653 = relay.Function([], output)
mutated_mod['func_4653'] = func_4653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3438_call = mod.get_global_var('func_3438')
func_3439_call = mutated_mod.get_global_var('func_3439')
call_4679 = func_3438_call()
call_4680 = func_3438_call()
output = call_4679
output2 = call_4680
func_4702 = relay.Function([], output)
mod['func_4702'] = func_4702
mod = relay.transform.InferType()(mod)
output = func_4702()
func_4703 = relay.Function([], output)
mutated_mod['func_4703'] = func_4703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4734 = relay.var("var_4734", dtype = "float64", shape = (12, 1, 1))#candidate|4734|(12, 1, 1)|var|float64
uop_4735 = relay.log(var_4734.astype('float64')) # shape=(12, 1, 1)
func_4473_call = mod.get_global_var('func_4473')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_4763 = relay.TupleGetItem(func_4473_call(), 0)
call_4764 = relay.TupleGetItem(func_4474_call(), 0)
uop_4767 = relay.rsqrt(uop_4735.astype('float64')) # shape=(12, 1, 1)
func_1588_call = mod.get_global_var('func_1588')
func_1589_call = mutated_mod.get_global_var('func_1589')
call_4771 = relay.TupleGetItem(func_1588_call(), 0)
call_4772 = relay.TupleGetItem(func_1589_call(), 0)
func_800_call = mod.get_global_var('func_800')
func_803_call = mutated_mod.get_global_var('func_803')
var_4775 = relay.var("var_4775", dtype = "float32", shape = (20,))#candidate|4775|(20,)|var|float32
call_4774 = relay.TupleGetItem(func_800_call(relay.reshape(var_4775.astype('float32'), [4, 1, 5])), 0)
call_4776 = relay.TupleGetItem(func_803_call(relay.reshape(var_4775.astype('float32'), [4, 1, 5])), 0)
func_4702_call = mod.get_global_var('func_4702')
func_4703_call = mutated_mod.get_global_var('func_4703')
call_4798 = func_4702_call()
call_4799 = func_4702_call()
func_1227_call = mod.get_global_var('func_1227')
func_1229_call = mutated_mod.get_global_var('func_1229')
var_4811 = relay.var("var_4811", dtype = "float64", shape = (2560,))#candidate|4811|(2560,)|var|float64
call_4810 = func_1227_call(relay.reshape(var_4811.astype('float64'), [16, 10, 16]))
call_4812 = func_1227_call(relay.reshape(var_4811.astype('float64'), [16, 10, 16]))
uop_4825 = relay.sqrt(uop_4767.astype('float32')) # shape=(12, 1, 1)
uop_4830 = relay.acosh(uop_4825.astype('float64')) # shape=(12, 1, 1)
uop_4848 = relay.log10(uop_4735.astype('float64')) # shape=(12, 1, 1)
func_1588_call = mod.get_global_var('func_1588')
func_1589_call = mutated_mod.get_global_var('func_1589')
call_4850 = relay.TupleGetItem(func_1588_call(), 0)
call_4851 = relay.TupleGetItem(func_1589_call(), 0)
uop_4853 = relay.tan(uop_4830.astype('float32')) # shape=(12, 1, 1)
uop_4861 = relay.sin(uop_4825.astype('float64')) # shape=(12, 1, 1)
func_3629_call = mod.get_global_var('func_3629')
func_3631_call = mutated_mod.get_global_var('func_3631')
call_4864 = relay.TupleGetItem(func_3629_call(), 0)
call_4865 = relay.TupleGetItem(func_3631_call(), 0)
bop_4875 = relay.divide(uop_4853.astype('float64'), relay.reshape(uop_4861.astype('float64'), relay.shape_of(uop_4853))) # shape=(12, 1, 1)
output = relay.Tuple([call_4763,call_4771,call_4774,var_4775,call_4798,call_4810,var_4811,uop_4848,call_4850,call_4864,bop_4875,])
output2 = relay.Tuple([call_4764,call_4772,call_4776,var_4775,call_4799,call_4812,var_4811,uop_4848,call_4851,call_4865,bop_4875,])
func_4880 = relay.Function([var_4734,var_4775,var_4811,], output)
mod['func_4880'] = func_4880
mod = relay.transform.InferType()(mod)
mutated_mod['func_4880'] = func_4880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4880_call = mutated_mod.get_global_var('func_4880')
var_4882 = relay.var("var_4882", dtype = "float64", shape = (12, 1, 1))#candidate|4882|(12, 1, 1)|var|float64
var_4883 = relay.var("var_4883", dtype = "float32", shape = (20,))#candidate|4883|(20,)|var|float32
var_4884 = relay.var("var_4884", dtype = "float64", shape = (2560,))#candidate|4884|(2560,)|var|float64
call_4881 = func_4880_call(var_4882,var_4883,var_4884,)
output = call_4881
func_4885 = relay.Function([var_4882,var_4883,var_4884,], output)
mutated_mod['func_4885'] = func_4885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4702_call = mod.get_global_var('func_4702')
func_4703_call = mutated_mod.get_global_var('func_4703')
call_4910 = func_4702_call()
call_4911 = func_4702_call()
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_4916 = func_1577_call()
call_4917 = func_1577_call()
func_3065_call = mod.get_global_var('func_3065')
func_3066_call = mutated_mod.get_global_var('func_3066')
call_4920 = relay.TupleGetItem(func_3065_call(), 0)
call_4921 = relay.TupleGetItem(func_3066_call(), 0)
func_800_call = mod.get_global_var('func_800')
func_803_call = mutated_mod.get_global_var('func_803')
var_4965 = relay.var("var_4965", dtype = "float32", shape = (20,))#candidate|4965|(20,)|var|float32
call_4964 = relay.TupleGetItem(func_800_call(relay.reshape(var_4965.astype('float32'), [4, 1, 5])), 0)
call_4966 = relay.TupleGetItem(func_803_call(relay.reshape(var_4965.astype('float32'), [4, 1, 5])), 0)
var_4970 = relay.var("var_4970", dtype = "float32", shape = (4, 16, 15))#candidate|4970|(4, 16, 15)|var|float32
bop_4971 = relay.floor_divide(call_4920.astype('float64'), relay.reshape(var_4970.astype('float64'), relay.shape_of(call_4920))) # shape=(4, 16, 15)
bop_4974 = relay.floor_divide(call_4921.astype('float64'), relay.reshape(var_4970.astype('float64'), relay.shape_of(call_4921))) # shape=(4, 16, 15)
uop_4996 = relay.rsqrt(call_4920.astype('float64')) # shape=(4, 16, 15)
uop_4998 = relay.rsqrt(call_4921.astype('float64')) # shape=(4, 16, 15)
uop_5001 = relay.atan(uop_4996.astype('float32')) # shape=(4, 16, 15)
uop_5003 = relay.atan(uop_4998.astype('float32')) # shape=(4, 16, 15)
var_5005 = relay.var("var_5005", dtype = "float32", shape = (4, 16, 15))#candidate|5005|(4, 16, 15)|var|float32
bop_5006 = relay.divide(uop_5001.astype('float32'), relay.reshape(var_5005.astype('float32'), relay.shape_of(uop_5001))) # shape=(4, 16, 15)
bop_5009 = relay.divide(uop_5003.astype('float32'), relay.reshape(var_5005.astype('float32'), relay.shape_of(uop_5003))) # shape=(4, 16, 15)
bop_5013 = relay.bitwise_xor(uop_5001.astype('uint16'), relay.reshape(bop_4971.astype('uint16'), relay.shape_of(uop_5001))) # shape=(4, 16, 15)
bop_5016 = relay.bitwise_xor(uop_5003.astype('uint16'), relay.reshape(bop_4974.astype('uint16'), relay.shape_of(uop_5003))) # shape=(4, 16, 15)
uop_5019 = relay.cosh(bop_5013.astype('float32')) # shape=(4, 16, 15)
uop_5021 = relay.cosh(bop_5016.astype('float32')) # shape=(4, 16, 15)
output = relay.Tuple([call_4910,call_4916,call_4964,var_4965,bop_5006,uop_5019,])
output2 = relay.Tuple([call_4911,call_4917,call_4966,var_4965,bop_5009,uop_5021,])
func_5028 = relay.Function([var_4965,var_4970,var_5005,], output)
mod['func_5028'] = func_5028
mod = relay.transform.InferType()(mod)
mutated_mod['func_5028'] = func_5028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5028_call = mutated_mod.get_global_var('func_5028')
var_5030 = relay.var("var_5030", dtype = "float32", shape = (20,))#candidate|5030|(20,)|var|float32
var_5031 = relay.var("var_5031", dtype = "float32", shape = (4, 16, 15))#candidate|5031|(4, 16, 15)|var|float32
var_5032 = relay.var("var_5032", dtype = "float32", shape = (4, 16, 15))#candidate|5032|(4, 16, 15)|var|float32
call_5029 = func_5028_call(var_5030,var_5031,var_5032,)
output = call_5029
func_5033 = relay.Function([var_5030,var_5031,var_5032,], output)
mutated_mod['func_5033'] = func_5033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3065_call = mod.get_global_var('func_3065')
func_3066_call = mutated_mod.get_global_var('func_3066')
call_5040 = relay.TupleGetItem(func_3065_call(), 0)
call_5041 = relay.TupleGetItem(func_3066_call(), 0)
var_5047 = relay.var("var_5047", dtype = "float32", shape = (4, 16, 15))#candidate|5047|(4, 16, 15)|var|float32
bop_5048 = relay.logical_and(call_5040.astype('bool'), relay.reshape(var_5047.astype('bool'), relay.shape_of(call_5040))) # shape=(4, 16, 15)
bop_5051 = relay.logical_and(call_5041.astype('bool'), relay.reshape(var_5047.astype('bool'), relay.shape_of(call_5041))) # shape=(4, 16, 15)
output = relay.Tuple([bop_5048,])
output2 = relay.Tuple([bop_5051,])
func_5073 = relay.Function([var_5047,], output)
mod['func_5073'] = func_5073
mod = relay.transform.InferType()(mod)
mutated_mod['func_5073'] = func_5073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5074 = relay.var("var_5074", dtype = "float32", shape = (4, 16, 15))#candidate|5074|(4, 16, 15)|var|float32
func_5073_call = mutated_mod.get_global_var('func_5073')
call_5075 = func_5073_call(var_5074)
output = call_5075
func_5076 = relay.Function([var_5074], output)
mutated_mod['func_5076'] = func_5076
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5078 = relay.const(-3.727497, dtype = "float64")#candidate|5078|()|const|float64
var_5079 = relay.var("var_5079", dtype = "float64", shape = (2, 12, 7))#candidate|5079|(2, 12, 7)|var|float64
bop_5080 = relay.power(const_5078.astype('float64'), var_5079.astype('float64')) # shape=(2, 12, 7)
func_3359_call = mod.get_global_var('func_3359')
func_3361_call = mutated_mod.get_global_var('func_3361')
call_5090 = relay.TupleGetItem(func_3359_call(), 1)
call_5091 = relay.TupleGetItem(func_3361_call(), 1)
output = relay.Tuple([bop_5080,call_5090,])
output2 = relay.Tuple([bop_5080,call_5091,])
func_5099 = relay.Function([var_5079,], output)
mod['func_5099'] = func_5099
mod = relay.transform.InferType()(mod)
mutated_mod['func_5099'] = func_5099
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5100 = relay.var("var_5100", dtype = "float64", shape = (2, 12, 7))#candidate|5100|(2, 12, 7)|var|float64
func_5099_call = mutated_mod.get_global_var('func_5099')
call_5101 = func_5099_call(var_5100)
output = call_5101
func_5102 = relay.Function([var_5100], output)
mutated_mod['func_5102'] = func_5102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5104 = relay.var("var_5104", dtype = "uint8", shape = (12, 10, 2))#candidate|5104|(12, 10, 2)|var|uint8
var_5105 = relay.var("var_5105", dtype = "uint8", shape = (12, 10, 2))#candidate|5105|(12, 10, 2)|var|uint8
bop_5106 = relay.right_shift(var_5104.astype('uint8'), relay.reshape(var_5105.astype('uint8'), relay.shape_of(var_5104))) # shape=(12, 10, 2)
bop_5126 = relay.greater_equal(bop_5106.astype('bool'), relay.reshape(var_5104.astype('bool'), relay.shape_of(bop_5106))) # shape=(12, 10, 2)
uop_5141 = relay.acosh(var_5105.astype('float32')) # shape=(12, 10, 2)
const_5155 = relay.const([[[-2.640893,8.298720],[0.657993,7.153092],[-2.728850,0.182964],[-6.102188,-0.308944],[3.883939,-2.830451],[5.043064,-5.888584],[-6.273277,-8.125613],[3.891317,7.702097],[-3.128689,0.404998],[1.479691,-4.204089]],[[-4.495791,0.388096],[5.200045,-3.694814],[2.027938,9.016747],[-6.199427,-4.495406],[8.424935,-1.496003],[-4.560236,-3.273680],[3.324464,-5.884345],[2.359659,-6.592837],[5.590850,-4.066315],[1.897030,4.672531]],[[2.522218,6.635551],[9.467615,-1.306292],[-9.108847,3.685837],[0.983364,0.791210],[5.974384,2.302212],[5.741531,-2.826758],[6.919325,4.042637],[-8.411242,5.531527],[6.728490,3.598304],[9.910371,1.625776]],[[8.595026,-0.949928],[4.743868,5.616533],[-5.173372,4.386618],[-2.276652,-5.104632],[-4.984216,-0.686808],[-9.499340,-2.737194],[9.198205,-5.185119],[0.603762,-6.455215],[5.016908,7.920072],[5.150702,6.511650]],[[0.153502,5.544391],[4.509981,3.659607],[9.517570,-2.828841],[-5.115637,-3.324107],[-4.372930,-4.422134],[-3.620442,-0.700037],[0.923305,-9.374324],[-6.862100,-3.202662],[-1.390791,9.420267],[0.943037,0.353917]],[[1.523027,0.628110],[-3.354808,3.809289],[-3.693692,2.930453],[-8.460044,-0.321796],[4.449238,-7.431564],[9.043306,-4.417893],[-5.701119,0.609116],[-2.557684,1.396722],[-0.181476,2.812579],[-1.190694,6.743858]],[[-0.257945,0.926645],[8.001032,1.546773],[2.862522,-8.549470],[-5.755042,-8.719804],[3.754882,1.461385],[0.455900,7.590008],[1.941801,-5.688786],[5.995116,-6.166482],[-1.618987,-9.816462],[-8.439025,8.644553]],[[-2.794558,-1.823351],[-7.519335,0.355282],[-1.022586,9.002277],[1.282679,2.044870],[-0.915870,-3.278931],[2.045221,3.864603],[3.737341,5.967778],[0.079957,1.018028],[5.301508,3.223877],[-3.058380,9.711204]],[[6.192176,-2.375986],[5.255376,4.665901],[-5.377486,8.483410],[-6.536860,9.471972],[-2.778454,6.391610],[9.881948,1.250583],[-8.979369,-5.361945],[-9.525776,7.748050],[2.676568,-5.461691],[7.893409,-1.500520]],[[-3.264511,-7.150129],[-0.387610,-3.165909],[-4.924482,2.398089],[-6.562285,-2.300965],[4.244066,6.651824],[-8.918642,0.741649],[0.028144,-4.666779],[4.658683,-8.402799],[-6.563702,-0.188410],[-4.367401,-6.107103]],[[2.106541,1.169019],[-9.343313,-8.597206],[-1.196447,0.851954],[5.478078,-4.152975],[3.603808,4.061313],[6.051941,-2.412711],[-0.483613,3.324318],[1.094656,-8.775730],[9.440611,-8.247303],[8.629123,6.709714]],[[-9.097321,5.507872],[6.414812,-2.604211],[-6.383261,0.788562],[1.335812,-0.712574],[-8.897816,1.793251],[8.441365,-2.786687],[2.277138,-7.226733],[-2.282207,-2.516057],[9.555092,-4.909403],[-7.558095,2.861630]]], dtype = "float32")#candidate|5155|(12, 10, 2)|const|float32
bop_5156 = relay.equal(uop_5141.astype('bool'), relay.reshape(const_5155.astype('bool'), relay.shape_of(uop_5141))) # shape=(12, 10, 2)
bop_5163 = relay.not_equal(uop_5141.astype('bool'), relay.reshape(var_5105.astype('bool'), relay.shape_of(uop_5141))) # shape=(12, 10, 2)
func_924_call = mod.get_global_var('func_924')
func_929_call = mutated_mod.get_global_var('func_929')
const_5167 = relay.const([-10,8,2,-3,1,-3,10,10,6,9,-9,7,-7,5,4,-3,-6,6,4,-9,9,-6,7,-4,-3,10,-2,-5,-7,1,2,-8,6,6,-3,5], dtype = "int8")#candidate|5167|(36,)|const|int8
var_5168 = relay.var("var_5168", dtype = "int8", shape = (432,))#candidate|5168|(432,)|var|int8
var_5169 = relay.var("var_5169", dtype = "float32", shape = (126,))#candidate|5169|(126,)|var|float32
call_5166 = relay.TupleGetItem(func_924_call(relay.reshape(const_5167.astype('int8'), [1, 6, 6]), relay.reshape(var_5168.astype('int8'), [12, 6, 6]), relay.reshape(var_5169.astype('float32'), [126,]), ), 4)
call_5170 = relay.TupleGetItem(func_929_call(relay.reshape(const_5167.astype('int8'), [1, 6, 6]), relay.reshape(var_5168.astype('int8'), [12, 6, 6]), relay.reshape(var_5169.astype('float32'), [126,]), ), 4)
func_4880_call = mod.get_global_var('func_4880')
func_4885_call = mutated_mod.get_global_var('func_4885')
var_5179 = relay.var("var_5179", dtype = "float64", shape = (12,))#candidate|5179|(12,)|var|float64
var_5180 = relay.var("var_5180", dtype = "float32", shape = (10, 2))#candidate|5180|(10, 2)|var|float32
var_5181 = relay.var("var_5181", dtype = "float64", shape = (2560,))#candidate|5181|(2560,)|var|float64
call_5178 = relay.TupleGetItem(func_4880_call(relay.reshape(var_5179.astype('float64'), [12, 1, 1]), relay.reshape(var_5180.astype('float32'), [20,]), relay.reshape(var_5181.astype('float64'), [2560,]), ), 7)
call_5182 = relay.TupleGetItem(func_4885_call(relay.reshape(var_5179.astype('float64'), [12, 1, 1]), relay.reshape(var_5180.astype('float32'), [20,]), relay.reshape(var_5181.astype('float64'), [2560,]), ), 7)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_5193 = relay.TupleGetItem(func_3257_call(), 0)
call_5194 = relay.TupleGetItem(func_3258_call(), 0)
func_374_call = mod.get_global_var('func_374')
func_378_call = mutated_mod.get_global_var('func_378')
call_5205 = relay.TupleGetItem(func_374_call(relay.reshape(var_5169.astype('float32'), [9, 14]), relay.reshape(call_5166.astype('float64'), [336,]), ), 3)
call_5206 = relay.TupleGetItem(func_378_call(relay.reshape(var_5169.astype('float32'), [9, 14]), relay.reshape(call_5166.astype('float64'), [336,]), ), 3)
bop_5211 = relay.logical_and(call_5193.astype('bool'), call_5178.astype('bool')) # shape=(12, 13, 8)
bop_5214 = relay.logical_and(call_5194.astype('bool'), call_5182.astype('bool')) # shape=(12, 13, 8)
output = relay.Tuple([bop_5126,bop_5156,bop_5163,call_5166,const_5167,var_5168,var_5169,var_5179,var_5180,var_5181,call_5205,bop_5211,])
output2 = relay.Tuple([bop_5126,bop_5156,bop_5163,call_5170,const_5167,var_5168,var_5169,var_5179,var_5180,var_5181,call_5206,bop_5214,])
func_5215 = relay.Function([var_5104,var_5105,var_5168,var_5169,var_5179,var_5180,var_5181,], output)
mod['func_5215'] = func_5215
mod = relay.transform.InferType()(mod)
var_5216 = relay.var("var_5216", dtype = "uint8", shape = (12, 10, 2))#candidate|5216|(12, 10, 2)|var|uint8
var_5217 = relay.var("var_5217", dtype = "uint8", shape = (12, 10, 2))#candidate|5217|(12, 10, 2)|var|uint8
var_5218 = relay.var("var_5218", dtype = "int8", shape = (432,))#candidate|5218|(432,)|var|int8
var_5219 = relay.var("var_5219", dtype = "float32", shape = (126,))#candidate|5219|(126,)|var|float32
var_5220 = relay.var("var_5220", dtype = "float64", shape = (12,))#candidate|5220|(12,)|var|float64
var_5221 = relay.var("var_5221", dtype = "float32", shape = (10, 2))#candidate|5221|(10, 2)|var|float32
var_5222 = relay.var("var_5222", dtype = "float64", shape = (2560,))#candidate|5222|(2560,)|var|float64
output = func_5215(var_5216,var_5217,var_5218,var_5219,var_5220,var_5221,var_5222,)
func_5223 = relay.Function([var_5216,var_5217,var_5218,var_5219,var_5220,var_5221,var_5222,], output)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4427_call = mod.get_global_var('func_4427')
func_4429_call = mutated_mod.get_global_var('func_4429')
call_5225 = relay.TupleGetItem(func_4427_call(), 1)
call_5226 = relay.TupleGetItem(func_4429_call(), 1)
func_2436_call = mod.get_global_var('func_2436')
func_2437_call = mutated_mod.get_global_var('func_2437')
call_5227 = relay.TupleGetItem(func_2436_call(), 0)
call_5228 = relay.TupleGetItem(func_2437_call(), 0)
func_1756_call = mod.get_global_var('func_1756')
func_1757_call = mutated_mod.get_global_var('func_1757')
call_5253 = relay.TupleGetItem(func_1756_call(), 1)
call_5254 = relay.TupleGetItem(func_1757_call(), 1)
func_2436_call = mod.get_global_var('func_2436')
func_2437_call = mutated_mod.get_global_var('func_2437')
call_5268 = relay.TupleGetItem(func_2436_call(), 0)
call_5269 = relay.TupleGetItem(func_2437_call(), 0)
output = relay.Tuple([call_5225,call_5227,call_5253,call_5268,])
output2 = relay.Tuple([call_5226,call_5228,call_5254,call_5269,])
func_5304 = relay.Function([], output)
mod['func_5304'] = func_5304
mod = relay.transform.InferType()(mod)
output = func_5304()
func_5305 = relay.Function([], output)
mutated_mod['func_5305'] = func_5305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_5306 = relay.TupleGetItem(func_3257_call(), 1)
call_5307 = relay.TupleGetItem(func_3258_call(), 1)
func_3359_call = mod.get_global_var('func_3359')
func_3361_call = mutated_mod.get_global_var('func_3361')
call_5309 = relay.TupleGetItem(func_3359_call(), 0)
call_5310 = relay.TupleGetItem(func_3361_call(), 0)
func_64_call = mod.get_global_var('func_64')
func_66_call = mutated_mod.get_global_var('func_66')
var_5313 = relay.var("var_5313", dtype = "float64", shape = (336,))#candidate|5313|(336,)|var|float64
call_5312 = relay.TupleGetItem(func_64_call(relay.reshape(var_5313.astype('float64'), [16, 7, 3])), 0)
call_5314 = relay.TupleGetItem(func_66_call(relay.reshape(var_5313.astype('float64'), [16, 7, 3])), 0)
output = relay.Tuple([call_5306,call_5309,call_5312,var_5313,])
output2 = relay.Tuple([call_5307,call_5310,call_5314,var_5313,])
func_5323 = relay.Function([var_5313,], output)
mod['func_5323'] = func_5323
mod = relay.transform.InferType()(mod)
var_5324 = relay.var("var_5324", dtype = "float64", shape = (336,))#candidate|5324|(336,)|var|float64
output = func_5323(var_5324)
func_5325 = relay.Function([var_5324], output)
mutated_mod['func_5325'] = func_5325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3272_call = mod.get_global_var('func_3272')
func_3274_call = mutated_mod.get_global_var('func_3274')
call_5327 = relay.TupleGetItem(func_3272_call(), 0)
call_5328 = relay.TupleGetItem(func_3274_call(), 0)
func_3374_call = mod.get_global_var('func_3374')
func_3376_call = mutated_mod.get_global_var('func_3376')
call_5329 = relay.TupleGetItem(func_3374_call(), 0)
call_5330 = relay.TupleGetItem(func_3376_call(), 0)
output = relay.Tuple([call_5327,call_5329,])
output2 = relay.Tuple([call_5328,call_5330,])
func_5335 = relay.Function([], output)
mod['func_5335'] = func_5335
mod = relay.transform.InferType()(mod)
output = func_5335()
func_5336 = relay.Function([], output)
mutated_mod['func_5336'] = func_5336
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5339 = relay.const(0.962384, dtype = "float32")#candidate|5339|()|const|float32
var_5340 = relay.var("var_5340", dtype = "float32", shape = (15, 6, 1))#candidate|5340|(15, 6, 1)|var|float32
bop_5341 = relay.floor_mod(const_5339.astype('float32'), var_5340.astype('float32')) # shape=(15, 6, 1)
var_5356 = relay.var("var_5356", dtype = "float32", shape = (15, 6, 8))#candidate|5356|(15, 6, 8)|var|float32
bop_5357 = relay.power(bop_5341.astype('float64'), var_5356.astype('float64')) # shape=(15, 6, 8)
func_3180_call = mod.get_global_var('func_3180')
func_3183_call = mutated_mod.get_global_var('func_3183')
const_5371 = relay.const([4.133668,7.739410,-8.472015,5.337157,7.052493,-9.556195,-4.780669,8.146510,-7.647907,-8.855467,1.827261,3.571173,-4.650457,-1.690575,-6.305360,-2.233828,8.456568,-4.887239,-0.670096,-3.081869,0.157408,-5.947964,-9.330073,8.284892,5.910942,-5.860231,7.635034,6.920809,6.899875,7.491116,-7.707922,8.474362,-3.739598,0.415312,5.562521,-3.523376,-0.270581,-2.918667,-9.872706,0.911644,9.817639,-4.370844,-7.275219,3.839692,-6.303679,7.415084,-2.103774,-7.132638,-1.149699,3.224880,-3.566425,-0.028696,-9.793661,3.038374,-2.352718,5.950130,-4.623463,-3.132268,5.749090,-5.848331,-4.331031,-3.105880,7.353342,0.585082,-4.807363,7.983844,7.043093,0.786684,6.857008,-8.526240,-4.334767,0.535706,-2.220862,6.082426,0.375170,8.247087,0.115075,-8.874019,-8.190719,-5.083581,9.249082,3.606094,2.139836,-1.266982,7.720327,-5.691796,-1.984024,-5.054857,5.941797,-0.725464,-8.527020,-7.989477,4.527736,-3.160896,4.525075,-2.101456,-4.548430,3.178102,6.865838,-8.770181,-1.681633,-7.456708,9.430646,4.314614,-1.496491,1.580430,1.020997,-8.749244,9.838917,1.978876,5.273036,6.767490,8.459918,6.460471,-7.030388,-8.371161,-4.026002,-5.180415,3.966815,-9.737409,5.787295,-9.304242,4.412826,-8.343093,8.909381,2.058579,8.582565,2.742889,9.733948,9.591943,-5.893013,0.866343,-2.970027,-6.608855,4.076067,3.023427,9.200014,-9.098032,-2.990587,6.111678,-9.799586,-3.891729,1.062686,-9.509610,-8.602503,-4.643217,6.213111,1.218278,0.080972,-3.156231,-5.618548,-9.452889,4.900090,1.636864,2.871530,-4.684551,1.828476,6.517193,-0.602830,-0.098903,-8.888192,3.384513,-4.512598,1.612318,9.646222,-8.324080,-5.004882,7.460515,1.853138,2.521963,4.578715,-2.015339,1.227619,9.752788,-8.941977,-5.282182,-4.612743,-8.700302,2.280129,9.427441,5.311367,-5.501162,-5.871478,-4.585106,-2.446255,-1.440400,2.213931,2.600937,-2.200480,-6.969381,-0.499078,0.332734,-8.507901,7.915661,-5.287644,-7.063971,-1.370348,5.507364,-8.407659,7.350769,0.079859,-8.840933,-1.447975,5.775240,-3.366544,4.519891,2.544010,-4.054221,6.436447,1.276514,-0.967637,8.256711,-1.756105,1.744321,-2.117023,-0.013184,-8.471452,-8.685403,-2.782126,2.448174,7.601954,4.301617,-9.819495,7.010958,3.462325,7.307715,-8.488471,-2.731532,5.874206,-2.469993,-4.355246,5.133318,3.254429,-3.750348,-5.115070,1.202075,-6.486496,-0.793646,-8.046660,-4.860193,-1.535093,9.417531,6.990887,9.126725,8.899620,-2.505433,-4.759647,-1.212057,-4.094286,8.237798,-7.103623,-7.328525,6.378476,3.458912,-4.602328,0.688177,6.178114,-9.439387,6.869110,5.191240,4.897555,-3.122867,-0.150287,2.621337,1.405328,1.568653,6.376024,8.355460,-5.285240,-2.054865,-3.947296,1.678989,-2.077345,-7.675195,3.218896,-2.663295,-3.703721,5.298077,6.563435,9.241436,3.506114,8.771305,-9.275629,-7.108854,1.763731,-7.715520,-4.606588,-0.061612,1.272630,-3.064625,-3.041593,8.115538,-9.702930,0.289912,3.289118,-9.156030,9.316886,-4.274351,-3.325924,-1.053653,7.787792,-9.887370,-6.729398,9.758456,5.376889,9.662522,-8.485015,-2.906453,7.314572,3.221090,-2.847693,4.190514,0.779478,-6.600714,-8.210151,3.606945,1.372395,-1.624180,-5.364281,8.379331,8.506524,-2.388787,8.128401,-1.895000,-2.234748,5.574022,-8.754550,4.493902,-2.820113,6.189799,-2.956338,3.787944,-0.479518,-9.044904,1.902104,1.126197], dtype = "float64")#candidate|5371|(336,)|const|float64
call_5370 = relay.TupleGetItem(func_3180_call(relay.reshape(const_5371.astype('float64'), [168, 2])), 3)
call_5372 = relay.TupleGetItem(func_3183_call(relay.reshape(const_5371.astype('float64'), [168, 2])), 3)
func_2848_call = mod.get_global_var('func_2848')
func_2853_call = mutated_mod.get_global_var('func_2853')
var_5378 = relay.var("var_5378", dtype = "int64", shape = (350,))#candidate|5378|(350,)|var|int64
const_5379 = relay.const([-1.705872,-9.305496,-2.109778,2.434776,9.046593,-6.111174,-4.133604,7.827996,3.434843,-5.212556,-5.257983,0.626694,-5.755046,-0.049532,9.350166,-1.243368,-4.527579,0.816394,-0.864612,-7.566025,3.027079,2.278652,4.348188,4.075819,9.223627,3.438816,5.665313,7.987462,-8.552155,7.780509,7.672244,5.739339,7.517586,-4.619252,2.625277,9.417744,2.892151,0.583182,5.665361,-8.571020,-5.538526,-0.002162,-7.791727,-2.920897,8.811112,-3.305056,1.647957,6.289374,1.519377,5.460420,-7.722693,1.798296,2.793213,6.976271,-0.032899,8.457364,8.080697,-0.149425,0.534463,-0.181846,-5.715673,0.358095,-3.159573,-0.455578,-0.792066,-8.078933,6.673423,0.418273,-7.991897,2.695771,-0.495017,-3.635352,0.097121,9.489114,8.845226,5.679601,9.195241,9.329413,1.974175,4.658688,8.190431,0.740000,8.744005,9.692605,0.352756,-1.402309,7.005613,0.229732,2.159380,8.446285,-1.748075,4.050549,5.341047,7.860123,-0.741135,3.410830,-9.273052,-3.586607,7.508360,-6.714344,1.420060,-8.308106,6.281190,9.832485,-5.733041,7.697612,6.346695,-4.374818,4.733969,-8.278269,-4.853014,-9.235138,-8.070510,1.878481,-8.012113,-5.285155,-1.436380,5.534433,-9.805731,3.666222,3.870488,9.493111,6.883343,-1.746401,3.481015,-5.924816], dtype = "float32")#candidate|5379|(126,)|const|float32
call_5377 = relay.TupleGetItem(func_2848_call(relay.reshape(var_5378.astype('int64'), [10, 5, 7]), relay.reshape(var_5378.astype('int64'), [10, 5, 7]), relay.reshape(const_5379.astype('float32'), [3, 42]), ), 2)
call_5380 = relay.TupleGetItem(func_2853_call(relay.reshape(var_5378.astype('int64'), [10, 5, 7]), relay.reshape(var_5378.astype('int64'), [10, 5, 7]), relay.reshape(const_5379.astype('float32'), [3, 42]), ), 2)
uop_5401 = relay.exp(var_5356.astype('float64')) # shape=(15, 6, 8)
var_5407 = relay.var("var_5407", dtype = "float64", shape = (15, 6, 8))#candidate|5407|(15, 6, 8)|var|float64
bop_5408 = relay.minimum(uop_5401.astype('uint64'), relay.reshape(var_5407.astype('uint64'), relay.shape_of(uop_5401))) # shape=(15, 6, 8)
output = relay.Tuple([bop_5357,call_5370,const_5371,call_5377,var_5378,const_5379,bop_5408,])
output2 = relay.Tuple([bop_5357,call_5372,const_5371,call_5380,var_5378,const_5379,bop_5408,])
func_5412 = relay.Function([var_5340,var_5356,var_5378,var_5407,], output)
mod['func_5412'] = func_5412
mod = relay.transform.InferType()(mod)
var_5413 = relay.var("var_5413", dtype = "float32", shape = (15, 6, 1))#candidate|5413|(15, 6, 1)|var|float32
var_5414 = relay.var("var_5414", dtype = "float32", shape = (15, 6, 8))#candidate|5414|(15, 6, 8)|var|float32
var_5415 = relay.var("var_5415", dtype = "int64", shape = (350,))#candidate|5415|(350,)|var|int64
var_5416 = relay.var("var_5416", dtype = "float64", shape = (15, 6, 8))#candidate|5416|(15, 6, 8)|var|float64
output = func_5412(var_5413,var_5414,var_5415,var_5416,)
func_5417 = relay.Function([var_5413,var_5414,var_5415,var_5416,], output)
mutated_mod['func_5417'] = func_5417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3272_call = mod.get_global_var('func_3272')
func_3274_call = mutated_mod.get_global_var('func_3274')
call_5429 = relay.TupleGetItem(func_3272_call(), 0)
call_5430 = relay.TupleGetItem(func_3274_call(), 0)
var_5431 = relay.var("var_5431", dtype = "float32", shape = (4, 16, 15))#candidate|5431|(4, 16, 15)|var|float32
bop_5432 = relay.mod(call_5429.astype('float64'), relay.reshape(var_5431.astype('float64'), relay.shape_of(call_5429))) # shape=(4, 16, 15)
bop_5435 = relay.mod(call_5430.astype('float64'), relay.reshape(var_5431.astype('float64'), relay.shape_of(call_5430))) # shape=(4, 16, 15)
func_3359_call = mod.get_global_var('func_3359')
func_3361_call = mutated_mod.get_global_var('func_3361')
call_5439 = relay.TupleGetItem(func_3359_call(), 0)
call_5440 = relay.TupleGetItem(func_3361_call(), 0)
output = relay.Tuple([bop_5432,call_5439,])
output2 = relay.Tuple([bop_5435,call_5440,])
func_5444 = relay.Function([var_5431,], output)
mod['func_5444'] = func_5444
mod = relay.transform.InferType()(mod)
mutated_mod['func_5444'] = func_5444
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5445 = relay.var("var_5445", dtype = "float32", shape = (4, 16, 15))#candidate|5445|(4, 16, 15)|var|float32
func_5444_call = mutated_mod.get_global_var('func_5444')
call_5446 = func_5444_call(var_5445)
output = call_5446
func_5447 = relay.Function([var_5445], output)
mutated_mod['func_5447'] = func_5447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1709_call = mod.get_global_var('func_1709')
func_1711_call = mutated_mod.get_global_var('func_1711')
call_5465 = relay.TupleGetItem(func_1709_call(), 4)
call_5466 = relay.TupleGetItem(func_1711_call(), 4)
func_1756_call = mod.get_global_var('func_1756')
func_1757_call = mutated_mod.get_global_var('func_1757')
call_5467 = relay.TupleGetItem(func_1756_call(), 1)
call_5468 = relay.TupleGetItem(func_1757_call(), 1)
func_3400_call = mod.get_global_var('func_3400')
func_3402_call = mutated_mod.get_global_var('func_3402')
call_5489 = func_3400_call()
call_5490 = func_3400_call()
var_5509 = relay.var("var_5509", dtype = "float64", shape = (16, 10, 16))#candidate|5509|(16, 10, 16)|var|float64
bop_5510 = relay.bitwise_or(call_5465.astype('int16'), relay.reshape(var_5509.astype('int16'), relay.shape_of(call_5465))) # shape=(16, 10, 16)
bop_5513 = relay.bitwise_or(call_5466.astype('int16'), relay.reshape(var_5509.astype('int16'), relay.shape_of(call_5466))) # shape=(16, 10, 16)
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_5519 = func_1577_call()
call_5520 = func_1577_call()
func_3400_call = mod.get_global_var('func_3400')
func_3402_call = mutated_mod.get_global_var('func_3402')
call_5526 = func_3400_call()
call_5527 = func_3400_call()
output = relay.Tuple([call_5467,call_5489,bop_5510,call_5519,call_5526,])
output2 = relay.Tuple([call_5468,call_5490,bop_5513,call_5520,call_5527,])
func_5538 = relay.Function([var_5509,], output)
mod['func_5538'] = func_5538
mod = relay.transform.InferType()(mod)
mutated_mod['func_5538'] = func_5538
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5539 = relay.var("var_5539", dtype = "float64", shape = (16, 10, 16))#candidate|5539|(16, 10, 16)|var|float64
func_5538_call = mutated_mod.get_global_var('func_5538')
call_5540 = func_5538_call(var_5539)
output = call_5540
func_5541 = relay.Function([var_5539], output)
mutated_mod['func_5541'] = func_5541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2436_call = mod.get_global_var('func_2436')
func_2437_call = mutated_mod.get_global_var('func_2437')
call_5603 = relay.TupleGetItem(func_2436_call(), 0)
call_5604 = relay.TupleGetItem(func_2437_call(), 0)
func_2436_call = mod.get_global_var('func_2436')
func_2437_call = mutated_mod.get_global_var('func_2437')
call_5648 = relay.TupleGetItem(func_2436_call(), 0)
call_5649 = relay.TupleGetItem(func_2437_call(), 0)
func_5304_call = mod.get_global_var('func_5304')
func_5305_call = mutated_mod.get_global_var('func_5305')
call_5651 = relay.TupleGetItem(func_5304_call(), 2)
call_5652 = relay.TupleGetItem(func_5305_call(), 2)
func_924_call = mod.get_global_var('func_924')
func_929_call = mutated_mod.get_global_var('func_929')
const_5669 = relay.const([-7,1,-10,-9,-8,3,-4,10,4,-4,6,-5,-4,-3,2,-4,-1,-6,8,7,-10,9,-9,-8,5,-5,2,5,3,-4,6,-4,7,-9,7,2], dtype = "int8")#candidate|5669|(36,)|const|int8
var_5670 = relay.var("var_5670", dtype = "int8", shape = (216, 2))#candidate|5670|(216, 2)|var|int8
const_5671 = relay.const([[-2.203009,-9.614413,7.793253,4.954347,6.374649,-5.252519,4.719565,-0.022471,-1.978187,3.719560,-2.999923,5.171420,3.264847,6.519870,6.908679,-9.923569,-6.689987,8.017533,-6.185697,-1.273109,-2.403162,6.887347,0.073719,6.750023,8.573474,-9.573595,6.433476,8.738112,-0.888600,-2.958506,4.017225,-0.951526,0.785668,8.562058,-0.572268,2.919366,-2.686142,-1.299302,-1.622713,8.053863,8.375858,-6.350319],[4.500304,6.896853,-7.356600,8.605784,-3.919184,-6.919897,-0.905393,5.804724,6.023343,7.198238,4.277505,5.446083,-4.161128,5.382046,5.179309,-6.198691,-9.767214,-9.580579,1.033965,-8.006980,5.250382,9.732564,-2.507938,-7.341164,1.334125,1.253721,-3.582793,8.242731,2.676483,-5.738339,-3.938097,8.500204,-1.629021,2.675196,8.627695,7.173595,-3.801875,-8.882528,7.304546,5.861386,3.800338,-6.476677],[1.482082,-8.848771,-3.006613,2.745618,2.739300,6.261177,9.192096,6.697254,-7.340079,1.843452,2.749695,4.258244,7.722107,3.944780,1.561679,-8.248889,9.416653,7.311574,4.499966,-7.688084,7.687940,-4.484889,3.191878,-0.270993,-8.473171,-0.882652,1.504269,-6.742361,-9.337030,2.705894,4.237909,1.464508,-5.316714,3.313078,0.604430,-1.983809,9.769428,6.382691,-4.039507,5.405685,-5.471026,-0.144941]], dtype = "float32")#candidate|5671|(3, 42)|const|float32
call_5668 = relay.TupleGetItem(func_924_call(relay.reshape(const_5669.astype('int8'), [1, 6, 6]), relay.reshape(var_5670.astype('int8'), [12, 6, 6]), relay.reshape(const_5671.astype('float32'), [126,]), ), 3)
call_5672 = relay.TupleGetItem(func_929_call(relay.reshape(const_5669.astype('int8'), [1, 6, 6]), relay.reshape(var_5670.astype('int8'), [12, 6, 6]), relay.reshape(const_5671.astype('float32'), [126,]), ), 3)
func_3684_call = mod.get_global_var('func_3684')
func_3686_call = mutated_mod.get_global_var('func_3686')
call_5674 = relay.TupleGetItem(func_3684_call(relay.reshape(const_5671.astype('float32'), [126,])), 5)
call_5675 = relay.TupleGetItem(func_3686_call(relay.reshape(const_5671.astype('float32'), [126,])), 5)
output = relay.Tuple([call_5603,call_5648,call_5651,call_5668,const_5669,var_5670,const_5671,call_5674,])
output2 = relay.Tuple([call_5604,call_5649,call_5652,call_5672,const_5669,var_5670,const_5671,call_5675,])
func_5679 = relay.Function([var_5670,], output)
mod['func_5679'] = func_5679
mod = relay.transform.InferType()(mod)
mutated_mod['func_5679'] = func_5679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5680 = relay.var("var_5680", dtype = "int8", shape = (216, 2))#candidate|5680|(216, 2)|var|int8
func_5679_call = mutated_mod.get_global_var('func_5679')
call_5681 = func_5679_call(var_5680)
output = call_5681
func_5682 = relay.Function([var_5680], output)
mutated_mod['func_5682'] = func_5682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4473_call = mod.get_global_var('func_4473')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_5721 = relay.TupleGetItem(func_4473_call(), 0)
call_5722 = relay.TupleGetItem(func_4474_call(), 0)
output = relay.Tuple([call_5721,])
output2 = relay.Tuple([call_5722,])
func_5730 = relay.Function([], output)
mod['func_5730'] = func_5730
mod = relay.transform.InferType()(mod)
output = func_5730()
func_5731 = relay.Function([], output)
mutated_mod['func_5731'] = func_5731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3783_call = mod.get_global_var('func_3783')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_5754 = relay.TupleGetItem(func_3783_call(), 0)
call_5755 = relay.TupleGetItem(func_3784_call(), 0)
func_1900_call = mod.get_global_var('func_1900')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_5787 = func_1900_call()
call_5788 = func_1900_call()
func_3684_call = mod.get_global_var('func_3684')
func_3686_call = mutated_mod.get_global_var('func_3686')
const_5795 = relay.const([1.828101,3.850075,1.095625,9.406603,-9.823567,-6.170923,-7.096032,-0.575288,9.026651,-0.295050,-6.446268,8.189504,-4.331993,9.902708,-6.471902,2.181734,1.086205,4.197133,2.800481,7.284164,-5.035579,-4.443515,4.027102,6.625348,4.117846,8.744367,-7.329002,-9.548101,-3.735801,-4.718543,-6.359346,-4.560957,-5.598298,-0.351576,0.143233,-9.619474,6.177505,-8.304007,4.070443,-8.177846,2.396633,-5.244991,-3.253469,2.391032,-7.126270,3.860503,6.543823,4.142923,2.539154,0.061520,9.782344,6.797137,-0.770029,3.920323,0.865928,7.445190,5.147697,-9.208516,-2.407595,0.193635,-1.384911,3.067230,-4.670672,8.914390,7.762909,-2.697159,-0.861215,4.404452,8.120047,-5.985741,-3.290230,-3.674169,-2.494552,-5.207448,-2.345667,1.326886,-8.982212,-7.348935,5.489106,1.500430,-8.203860,8.467364,3.259668,-8.265125,-3.830754,4.250673,-6.947570,-3.409925,3.477947,8.923759,-7.439939,-1.733430,2.872501,-6.813944,-0.030386,0.198198,7.083477,-5.946137,-0.274313,-9.529923,0.737403,5.832720,3.851325,-2.920724,-9.627844,-6.037239,8.834185,-7.631633,9.423228,6.756768,-8.118098,-0.512360,-2.264624,-1.829831,6.484528,9.048813,-7.196758,-2.363885,-3.913829,-4.985421,-1.394307,-6.488081,4.341274,6.174722,2.303959,4.644364], dtype = "float32")#candidate|5795|(126,)|const|float32
call_5794 = relay.TupleGetItem(func_3684_call(relay.reshape(const_5795.astype('float32'), [126,])), 3)
call_5796 = relay.TupleGetItem(func_3686_call(relay.reshape(const_5795.astype('float32'), [126,])), 3)
output = relay.Tuple([call_5754,call_5787,call_5794,const_5795,])
output2 = relay.Tuple([call_5755,call_5788,call_5796,const_5795,])
func_5813 = relay.Function([], output)
mod['func_5813'] = func_5813
mod = relay.transform.InferType()(mod)
mutated_mod['func_5813'] = func_5813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5813_call = mutated_mod.get_global_var('func_5813')
call_5814 = func_5813_call()
output = call_5814
func_5815 = relay.Function([], output)
mutated_mod['func_5815'] = func_5815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5841 = relay.var("var_5841", dtype = "uint16", shape = ())#candidate|5841|()|var|uint16
var_5842 = relay.var("var_5842", dtype = "uint16", shape = (9, 9, 12))#candidate|5842|(9, 9, 12)|var|uint16
bop_5843 = relay.maximum(var_5841.astype('uint16'), var_5842.astype('uint16')) # shape=(9, 9, 12)
output = relay.Tuple([bop_5843,])
output2 = relay.Tuple([bop_5843,])
func_5847 = relay.Function([var_5841,var_5842,], output)
mod['func_5847'] = func_5847
mod = relay.transform.InferType()(mod)
mutated_mod['func_5847'] = func_5847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5847_call = mutated_mod.get_global_var('func_5847')
var_5849 = relay.var("var_5849", dtype = "uint16", shape = ())#candidate|5849|()|var|uint16
var_5850 = relay.var("var_5850", dtype = "uint16", shape = (9, 9, 12))#candidate|5850|(9, 9, 12)|var|uint16
call_5848 = func_5847_call(var_5849,var_5850,)
output = call_5848
func_5851 = relay.Function([var_5849,var_5850,], output)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5335_call = mod.get_global_var('func_5335')
func_5336_call = mutated_mod.get_global_var('func_5336')
call_5853 = relay.TupleGetItem(func_5335_call(), 1)
call_5854 = relay.TupleGetItem(func_5336_call(), 1)
output = call_5853
output2 = call_5854
func_5855 = relay.Function([], output)
mod['func_5855'] = func_5855
mod = relay.transform.InferType()(mod)
output = func_5855()
func_5856 = relay.Function([], output)
mutated_mod['func_5856'] = func_5856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4427_call = mod.get_global_var('func_4427')
func_4429_call = mutated_mod.get_global_var('func_4429')
call_5866 = relay.TupleGetItem(func_4427_call(), 0)
call_5867 = relay.TupleGetItem(func_4429_call(), 0)
output = call_5866
output2 = call_5867
func_5882 = relay.Function([], output)
mod['func_5882'] = func_5882
mod = relay.transform.InferType()(mod)
mutated_mod['func_5882'] = func_5882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5882_call = mutated_mod.get_global_var('func_5882')
call_5883 = func_5882_call()
output = call_5883
func_5884 = relay.Function([], output)
mutated_mod['func_5884'] = func_5884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mod.get_global_var('func_1900')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_5969 = func_1900_call()
call_5970 = func_1900_call()
func_4473_call = mod.get_global_var('func_4473')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_5973 = relay.TupleGetItem(func_4473_call(), 0)
call_5974 = relay.TupleGetItem(func_4474_call(), 0)
output = relay.Tuple([call_5969,call_5973,])
output2 = relay.Tuple([call_5970,call_5974,])
func_5990 = relay.Function([], output)
mod['func_5990'] = func_5990
mod = relay.transform.InferType()(mod)
output = func_5990()
func_5991 = relay.Function([], output)
mutated_mod['func_5991'] = func_5991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4516_call = mod.get_global_var('func_4516')
func_4517_call = mutated_mod.get_global_var('func_4517')
call_6022 = relay.TupleGetItem(func_4516_call(), 1)
call_6023 = relay.TupleGetItem(func_4517_call(), 1)
output = relay.Tuple([call_6022,])
output2 = relay.Tuple([call_6023,])
func_6044 = relay.Function([], output)
mod['func_6044'] = func_6044
mod = relay.transform.InferType()(mod)
output = func_6044()
func_6045 = relay.Function([], output)
mutated_mod['func_6045'] = func_6045
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6060 = relay.const([[[1,-9,-10,5,-1,-9,-6,3,-3,-1,-4,5,-9,-5,-1,4],[2,-4,-8,-2,-4,5,8,-3,2,1,-6,6,-5,2,-1,9],[10,6,2,8,-1,-3,5,-1,-2,7,-9,1,1,2,-2,5],[-4,-9,-9,2,3,8,-5,-7,9,5,4,-2,1,-8,4,-6],[-4,-7,-3,-4,6,4,-3,8,-4,2,9,2,-7,-5,-4,1],[8,-3,-7,-9,3,2,-4,-7,-3,6,-4,-2,-7,-4,-7,-8],[-1,6,-2,-10,-10,-8,-5,5,-8,10,7,3,-8,-6,-1,2],[9,-1,4,-3,-4,-9,10,6,4,9,7,-7,10,4,10,-7],[-5,-10,-10,3,8,4,7,5,8,-3,8,2,7,-1,-1,8],[7,-4,2,2,3,-7,9,-2,-6,2,8,3,-7,2,3,3],[-7,8,8,7,-9,2,6,3,-2,7,-8,-5,5,2,-7,-1],[-3,2,-2,-3,-3,8,-10,1,-7,-1,-9,9,-2,-5,5,-3],[-6,8,-4,-8,5,-4,9,6,-6,-1,3,-10,-1,6,-2,2],[4,5,-2,-2,-8,-3,-4,5,8,-4,5,8,10,2,2,9],[6,1,6,7,2,1,1,-5,-1,9,-4,2,2,-5,9,-8]],[[7,-5,5,-6,-1,10,-4,-10,3,-3,-8,-10,-8,-3,-10,-2],[-2,-1,-6,-3,-6,9,-7,7,10,-8,2,7,4,6,4,-2],[-4,3,-8,9,9,-5,8,-10,-9,-7,6,-2,-7,-6,-8,-7],[-9,-6,-9,2,4,-6,-7,-3,7,-9,5,5,4,2,8,-6],[-10,-4,7,6,-3,-6,-1,1,10,-2,3,-8,9,-9,-7,-3],[-5,-5,5,4,6,-2,-10,6,3,6,7,5,1,-2,10,7],[-4,-10,6,9,-5,-10,2,-8,5,-4,-7,8,-4,-8,6,10],[10,9,5,9,-8,6,4,-6,-7,3,9,1,2,8,7,-7],[9,2,-5,3,-9,-1,4,-3,-8,-2,-10,10,4,-9,5,7],[-4,-7,9,2,10,10,3,-4,4,7,1,-3,5,-6,-9,-6],[4,-4,7,1,-9,3,6,2,5,1,7,3,-7,-4,-3,-3],[-8,-10,-1,4,1,2,5,7,-1,6,-6,2,9,4,-10,9],[-2,-3,-9,2,4,-7,-8,-1,-7,-9,-7,6,6,-9,7,-4],[-8,-1,-6,5,9,-1,8,-7,10,-6,6,-4,-4,-1,-3,-9],[4,8,-4,-1,6,-9,-5,-9,-2,-3,-1,-1,2,-5,8,7]],[[-5,-1,-7,10,-4,10,-7,4,6,-6,-4,1,2,2,1,2],[-4,4,5,7,-5,9,-5,-1,-2,-7,7,-4,-5,7,-6,1],[1,-3,1,6,-6,8,-9,2,8,-8,7,-2,-10,8,7,6],[-7,4,9,-6,4,6,-4,5,-10,-7,-6,-1,9,2,1,5],[7,7,-9,10,-8,-7,7,-6,-2,5,-3,4,-6,-9,-4,-4],[-6,-6,-6,6,-5,8,-2,10,-7,-4,9,-4,4,-1,-10,9],[8,8,-4,-9,9,2,2,-9,-4,1,1,-10,9,-3,-6,4],[8,9,-10,2,6,3,3,-8,5,2,-5,10,4,4,6,4],[-1,7,-3,-1,10,-8,-3,1,6,-5,6,4,1,-9,-5,10],[-8,-7,5,-10,9,-7,4,2,1,-10,3,6,3,10,10,6],[-8,-1,-1,7,8,-4,-3,-4,-4,-3,10,10,5,-3,-9,-5],[4,-9,6,4,-1,8,-7,-8,7,-7,-1,10,6,-2,-2,1],[10,10,-5,10,7,7,8,-4,-7,2,1,-3,-5,3,2,5],[3,8,4,-3,5,4,7,10,2,-3,2,-9,3,-6,7,6],[9,-9,1,-3,-3,-2,6,8,2,10,-9,2,-2,-8,-10,-10]],[[-8,1,10,-8,10,5,1,-3,-7,8,-1,-10,9,-1,-2,-7],[9,-4,3,-5,-1,8,-6,-5,-3,8,3,6,-6,10,-9,2],[8,-10,-7,3,-7,-2,-1,3,1,-7,-1,-6,-1,7,-7,1],[-3,6,6,-8,2,6,-8,-7,-2,3,7,-10,-8,-10,4,-10],[-2,8,8,1,-7,-5,-5,2,-7,3,-4,6,-10,7,-8,2],[5,-10,-6,-5,7,6,2,-3,4,-7,-7,-10,-9,-2,6,-9],[-1,-6,-9,10,2,-9,-7,-5,6,-9,7,1,-8,5,6,5],[-2,-6,3,-6,-3,9,-7,1,8,-8,9,1,2,-9,9,-6],[8,-1,-8,-6,-1,-1,9,4,1,-2,-1,6,-6,-4,3,-7],[3,-10,4,4,-10,8,6,-7,-1,-7,-2,8,10,-5,3,3],[-10,7,-8,-3,-5,-10,-10,7,-5,-6,7,-5,9,9,-1,-5],[5,7,2,-4,9,-9,-10,-4,3,2,-5,7,6,-5,-10,8],[-4,-1,-4,-5,-10,4,1,4,8,-3,2,9,8,5,-4,-5],[5,-5,2,2,4,-3,5,-10,5,8,-5,-5,8,-1,10,-1],[2,4,7,8,-5,10,-8,1,-6,-1,5,-4,-4,5,2,1]],[[-5,-8,4,-6,6,-6,-8,8,-7,3,-4,5,1,-4,-10,-7],[-1,-7,-2,3,-1,-4,6,-1,10,-5,10,-6,1,-5,6,-4],[-10,3,6,-2,5,-3,8,5,9,-6,-1,-3,-2,-3,-2,-5],[-10,6,4,-2,-4,1,-1,3,6,9,2,10,-2,-2,2,7],[-8,7,-1,-3,3,6,-10,-2,-8,4,4,-4,8,1,5,-1],[10,-7,6,5,-5,3,-2,4,7,2,3,-8,-3,-1,6,1],[10,7,9,-5,-5,-2,3,-8,3,4,7,-8,-10,9,1,-3],[10,-8,4,-7,-4,-3,-4,-9,-1,4,-4,8,-3,9,-9,-6],[-4,9,-10,4,-5,2,10,-6,-4,-8,-5,10,3,2,4,10],[4,6,8,-9,7,-2,-3,-7,-3,3,1,-7,-7,-6,-9,-10],[8,7,4,-8,-7,1,1,5,4,1,3,2,7,2,-6,8],[-6,9,1,4,-10,-6,-2,-4,-10,4,4,-5,5,8,-10,5],[-3,8,4,2,9,-4,2,9,-4,7,-10,1,-2,7,7,-7],[-8,4,1,5,-5,-10,6,1,2,-2,-2,10,-3,-5,-10,-1],[-9,10,3,7,2,-7,7,-2,5,3,-8,9,-9,2,-7,10]],[[1,6,-3,4,-2,-8,8,-10,-6,10,6,-3,-6,-4,1,-10],[4,-6,3,-4,2,6,4,5,-8,3,-4,7,-3,-4,-7,-7],[-2,-7,5,-10,5,-7,1,-8,6,-1,8,-2,-10,-5,1,-5],[-7,6,4,-6,-1,10,4,-8,-1,-3,-6,-2,-1,1,-1,3],[-9,-7,-6,-3,-6,8,1,2,-5,-1,-10,-9,-9,1,9,7],[6,2,-9,-8,8,-6,-3,10,-3,-1,3,-4,-2,-6,10,8],[9,7,-5,-4,-2,-1,-9,5,2,-7,-7,1,7,-8,-1,4],[-6,-10,5,-3,4,-1,5,-7,3,-3,-6,-10,2,-9,-4,-6],[1,3,-10,4,-10,-7,3,1,-9,-6,1,-5,4,9,-6,-2],[1,-6,2,4,-4,-7,4,-3,-6,-5,5,-1,3,-8,-7,7],[-6,8,2,-9,3,-5,8,8,-7,3,5,4,8,-9,4,2],[1,-7,-3,9,-6,1,-2,-10,-3,4,10,8,-2,10,4,-4],[-3,-8,-9,10,-5,9,-3,-8,-5,6,2,1,10,-8,5,-1],[-2,5,-10,-7,8,-2,-9,9,5,-7,-9,1,-2,-6,-2,5],[8,7,7,-10,-2,-7,-5,4,2,-6,-2,10,7,-2,5,-3]],[[9,10,6,10,4,-8,4,8,-7,-6,-3,-4,-4,-1,6,-3],[-6,3,-3,-7,-10,6,10,1,8,6,-4,4,-9,-9,9,-1],[5,6,-7,-6,9,-3,6,6,-1,-7,-3,5,6,-6,-7,1],[-1,9,9,4,-7,-6,-1,7,5,7,5,-1,-5,7,3,4],[-4,-9,10,2,10,-10,-2,-3,3,6,-1,8,-3,-9,-4,10],[8,2,5,-7,1,10,-6,-10,-2,-6,3,-10,-10,3,-4,3],[-6,-9,-8,8,6,3,-10,1,-1,-8,3,-9,8,1,6,-3],[-1,-3,-9,-10,-8,6,-10,-3,-8,-3,10,-7,5,10,2,-2],[-6,-3,6,9,-8,6,-6,9,2,4,-4,-10,-9,-10,6,5],[7,-8,-3,10,3,-1,5,-2,2,8,-7,4,-1,-4,-6,-10],[8,7,4,-3,3,6,4,6,-2,-1,-3,2,1,2,6,2],[7,-5,9,7,-2,2,9,-1,10,-1,-6,8,2,5,-1,3],[-8,-8,8,9,-8,-5,6,-1,7,1,6,9,9,-5,-10,-10],[-7,-5,6,7,2,-5,10,-7,10,8,-7,-4,-10,-9,-9,9],[1,-3,8,3,1,-10,-5,-6,5,1,-1,-10,-3,-1,2,-10]],[[-4,10,-10,3,2,-2,10,-2,-2,-1,-7,3,-4,2,-4,8],[5,1,-10,7,-8,9,-7,-7,3,1,8,9,8,-7,6,-2],[1,8,-8,3,4,-5,4,-9,9,8,1,9,-1,-2,10,-9],[9,-2,4,4,1,8,-3,-4,-6,10,-10,-9,-5,-9,6,8],[7,4,-9,-9,10,-6,6,-7,-10,2,-6,-10,-3,-8,9,6],[-5,-7,-1,-5,-4,5,-10,-2,9,-2,-4,-10,1,6,3,8],[-4,-4,-1,-9,-9,7,-7,2,3,-5,-6,6,2,-9,-5,2],[-2,-6,5,-10,-10,-6,3,4,-9,5,-3,-5,2,-7,1,-6],[-8,-7,-8,9,-1,-4,10,2,-9,7,9,-7,5,10,7,-10],[8,10,-4,3,-6,2,9,7,5,1,7,-7,-4,-8,-2,-8],[8,6,8,9,-8,-2,-9,4,7,7,5,-4,-10,-2,5,-3],[-9,-6,8,-3,-8,-5,5,10,7,6,3,1,-4,-4,-2,-3],[5,7,5,-2,-6,2,6,-5,-1,-5,9,-8,10,4,-10,-4],[-6,-10,3,-6,9,-10,3,-10,-4,-1,-4,10,2,7,-10,-6],[-1,9,-10,-1,-4,6,6,-2,-2,5,-1,-9,6,-4,4,-5]],[[8,-7,9,-7,-10,-10,10,5,6,-7,5,-9,-1,-9,5,-10],[-8,-3,-6,9,5,2,-3,7,-9,6,10,4,10,-6,9,-10],[-2,3,-5,-6,4,-6,-5,6,-7,7,-10,7,-8,7,-9,-4],[1,-3,-2,7,-6,-10,-3,-6,-1,-6,-8,2,-7,5,5,-9],[9,-1,10,4,8,-9,-4,-1,-10,7,3,-5,-6,6,-10,-6],[-4,9,-6,10,-10,-6,5,-9,-8,4,4,2,2,1,-3,-2],[-7,-3,-5,-8,-3,7,-6,5,-1,-5,-10,6,5,3,-6,4],[-5,6,-9,3,1,-10,-6,-8,3,3,10,-5,-7,-2,-1,-6],[-3,-6,-9,4,9,-4,8,2,-7,5,6,-4,-8,8,3,8],[8,-8,-3,6,6,-6,4,-6,-7,-10,-10,-6,9,10,9,7],[3,4,-10,7,2,10,3,9,-8,-3,-1,9,-4,-3,-10,-10],[-6,7,7,-1,9,-5,1,2,-2,10,-5,-5,-9,-10,9,-9],[6,-2,-2,-2,-8,3,4,1,-2,9,-9,6,5,8,-8,2],[5,-9,-8,-5,-1,-8,-6,8,9,7,6,-7,-1,-8,1,5],[3,-2,4,-1,-8,9,-9,3,-8,5,4,-6,6,6,-1,5]],[[6,9,9,-6,-1,2,-1,6,-5,-3,5,-6,3,-8,4,10],[-3,9,-1,8,9,9,-4,1,-8,-10,4,-1,7,-1,7,10],[-2,-1,-3,4,10,4,-10,5,9,-10,1,-10,-5,9,4,-1],[8,3,4,3,-3,-7,-10,-3,-8,-4,6,-7,-4,-2,-4,9],[6,3,-9,1,-3,-7,3,-6,4,-1,-1,-9,5,-7,4,-2],[8,-10,4,-3,2,-4,1,-9,7,3,-8,-4,4,3,7,-8],[-1,-6,-2,3,-8,-10,-4,-1,-8,-8,-7,-1,-6,-10,-10,-10],[9,-7,4,4,7,-8,-2,4,3,8,6,2,-2,7,-1,2],[-4,8,10,-9,-5,-10,5,-8,-7,10,-6,7,3,1,-2,1],[-3,-3,2,-10,8,5,-5,4,9,-7,-6,-6,-8,-2,-1,6],[3,-9,-1,3,10,-5,-1,6,2,-7,-8,7,10,-8,-2,5],[6,-4,4,8,-5,10,1,6,-9,-2,-5,-5,-8,-4,-9,-10],[6,6,9,-3,-7,10,8,1,-6,4,-4,6,2,-4,10,8],[6,-5,7,1,2,-2,-5,8,10,5,-1,-5,3,-5,-1,-9],[6,6,-4,7,-8,6,6,9,6,-7,4,-1,1,-2,-9,-3]],[[-6,10,6,8,8,7,8,7,9,10,-8,-2,6,-3,-4,-10],[3,-2,7,3,4,9,-8,-7,-4,2,-9,-3,8,-10,2,5],[-1,-6,-9,-6,-1,-4,-3,5,9,1,2,2,8,6,-1,-7],[10,-1,-2,-9,-1,-9,-5,4,-2,1,-9,-5,5,8,4,8],[-7,-10,-5,-10,-5,5,-5,-5,5,10,1,2,-9,-1,4,-7],[-10,9,-10,-6,-10,-9,1,2,2,-2,1,8,-4,3,2,-10],[10,10,8,7,8,-5,-9,-6,2,3,-2,3,4,6,9,8],[3,9,5,-3,1,-1,8,-9,-3,-2,-7,-3,-3,7,-2,9],[-5,9,4,3,2,6,-9,-8,1,-9,7,9,10,-1,-3,10],[-1,-9,10,2,4,-10,5,7,-10,-2,10,-6,-9,3,-9,1],[-1,-7,-10,3,-7,9,2,5,4,-8,1,5,1,2,-10,-10],[-3,3,3,7,8,-1,-4,2,-6,-4,-4,-8,6,7,-5,10],[1,1,-7,6,-6,8,5,-2,2,-1,3,-3,1,9,-4,-4],[-10,9,-3,5,-3,-3,-4,-9,-9,3,10,-4,-6,7,-2,7],[3,-1,2,-8,-10,-1,-4,-1,3,-6,9,-3,3,-7,10,6]],[[9,-2,7,5,-2,2,-9,10,6,-6,-6,-2,-1,-3,-2,-6],[8,3,1,3,-4,-9,7,-8,7,-9,-5,1,9,-8,-5,-3],[6,8,-4,9,7,3,-9,-8,7,9,-8,9,-4,-10,5,2],[7,-7,3,1,5,-8,6,-1,3,6,-8,-1,-6,-3,-2,2],[-7,2,-4,1,-8,-4,-5,7,2,-1,10,7,3,-7,-3,6],[-6,9,3,1,-1,6,-9,3,-6,-6,-8,-2,-10,-6,6,4],[-2,5,-5,7,-3,-9,7,6,8,-2,4,5,-3,-9,-5,-2],[-6,-4,-5,-4,-3,-1,-6,-4,8,1,9,5,9,10,7,-2],[-9,1,-7,-2,-9,-1,-9,-1,2,-8,10,-3,-9,4,5,6],[-4,9,3,2,-2,9,9,-10,-2,1,4,-2,5,7,-3,5],[2,-9,-3,7,3,9,-3,-4,-7,-8,7,6,-5,-5,7,-8],[-3,-2,-7,4,-4,-3,-1,-4,1,3,-4,-3,1,-9,-7,-5],[-3,7,-7,-9,5,10,10,6,7,-9,-8,10,-10,6,-6,-8],[-10,-1,5,8,6,5,1,5,-3,-9,-9,-10,7,-8,9,-4],[-10,-7,-6,4,2,-8,-3,3,9,6,-8,-9,-4,-10,3,-3]],[[-10,6,7,10,1,2,-10,9,6,1,2,1,-9,1,6,4],[4,5,-2,-1,-2,-7,10,6,-3,-10,-9,3,3,-1,-5,6],[-5,-3,6,9,6,4,4,-2,9,2,-4,-7,8,-5,-2,-4],[-1,-5,-8,-7,-2,4,1,5,-9,-9,3,-1,5,-3,8,6],[-2,-8,-7,9,-6,-5,9,8,-8,-5,6,-9,-4,9,-10,3],[8,-6,-6,2,10,-10,9,8,-8,8,9,-4,2,8,10,5],[5,-1,-8,5,-2,6,-7,-3,-7,9,-10,2,-6,-5,-4,-4],[-4,1,8,8,5,5,8,6,-1,-1,10,5,4,2,-2,6],[-1,-6,3,3,9,9,-8,-3,2,9,9,-7,6,2,6,-2],[5,10,-5,5,10,1,10,6,8,-1,-1,-2,8,3,-2,-4],[4,-4,-4,-2,2,4,-7,-4,-8,-4,3,-6,-9,-6,-7,-5],[-4,-1,-7,-5,-6,3,-1,-8,1,-10,5,-7,6,-5,-6,3],[9,-8,-6,-7,2,-6,8,4,4,-6,-1,-5,-10,9,1,4],[7,-6,5,-5,-7,9,-5,-7,-6,-9,-7,3,5,3,-7,5],[9,9,9,10,-5,9,4,8,-8,7,1,5,6,-1,-5,7]],[[10,-9,-9,2,9,-5,-9,3,2,-7,3,-9,9,2,-6,1],[6,-2,-8,1,8,-10,-1,-6,-4,5,4,6,4,9,-8,6],[10,-1,4,6,9,1,-9,-2,2,10,-1,-1,-6,-5,-1,-8],[-10,-9,-10,8,-1,1,10,2,-1,7,-9,-7,9,9,4,2],[6,-10,-6,-8,-1,-6,-2,-2,1,5,6,-4,5,-6,1,-4],[-7,5,-7,2,-4,9,-7,9,8,9,-7,10,6,-2,2,-6],[-2,-6,-6,9,7,5,8,-3,9,2,-4,-7,-8,7,-7,-1],[-4,10,-5,7,6,9,6,-10,-5,1,5,-10,-9,5,10,6],[4,3,6,3,-3,-8,6,6,-2,-1,-4,-2,-9,-10,-2,4],[-6,-7,-8,6,5,-2,4,2,-4,-3,-5,-5,1,-5,4,10],[6,-2,-8,-10,4,3,2,4,-10,6,3,10,-7,-8,2,-10],[-3,-7,-3,-5,-8,5,-6,8,9,1,-5,5,-6,6,-10,8],[-9,4,1,10,-8,9,-7,9,-1,5,1,-2,4,-5,-4,-8],[8,-6,-3,-10,3,-4,8,-4,4,-9,-3,10,-8,-2,7,-7],[1,-6,2,-5,7,5,5,-6,-3,3,-3,5,-9,-6,-6,3]],[[-6,4,-5,5,8,-9,3,1,-8,4,-9,-5,-6,5,3,1],[-5,9,4,3,-6,-7,8,5,-4,9,7,-2,-6,7,2,-3],[5,-10,8,2,-8,2,-7,-1,-7,-6,6,-9,4,-4,-6,-7],[8,9,-1,-1,10,-4,-2,9,7,8,-3,8,5,-6,-10,3],[10,-6,-2,9,-10,-8,8,-4,5,10,8,-7,-9,-5,8,7],[-9,7,7,3,1,-2,1,5,9,-1,-3,-2,-3,-9,3,7],[8,3,-3,5,-8,-4,4,-2,-5,9,-5,-8,8,-9,5,2],[1,-1,4,8,-4,10,2,-10,-8,2,-2,2,-2,-10,7,2],[-9,-2,-2,4,3,-5,-9,1,-8,1,-7,-7,-3,8,10,8],[7,-2,-2,-5,4,1,9,-1,7,4,-6,-5,-9,-9,-2,-8],[-10,-6,-7,-1,-4,-4,-6,-7,-8,9,5,3,4,3,-2,5],[-1,6,5,-1,-2,2,-10,3,4,-2,-5,-3,8,6,-6,3],[5,5,9,-1,-1,-8,-3,-8,2,-4,-6,7,2,5,-8,5],[-2,-3,6,-1,-6,7,2,4,5,1,6,5,-3,6,-3,-5],[9,5,2,4,4,7,7,10,-1,5,-10,5,-3,7,10,-8]],[[-9,-8,-8,1,2,-10,1,-2,2,2,-8,-7,8,6,7,-10],[-8,9,1,-9,-8,-3,-10,1,-2,4,-10,2,9,9,-5,-2],[7,10,9,-2,-10,-6,-10,2,8,6,1,7,8,-3,4,8],[7,9,7,5,-6,10,5,-2,10,-10,-5,-10,-2,-8,8,-8],[-3,-3,8,-10,6,-2,1,-6,1,-3,-5,-1,-6,3,-6,1],[8,10,1,-4,-9,9,-10,5,1,10,-1,-2,2,10,-6,7],[-4,-4,8,-1,-4,-1,5,8,3,1,10,10,-1,-2,-3,5],[-6,4,6,-3,6,-5,-7,7,10,6,3,2,8,3,2,3],[-6,4,-2,10,-8,-1,9,-6,7,-7,-8,6,-4,9,8,6],[7,-6,6,9,3,2,7,9,10,6,-8,3,-5,9,-4,-5],[-4,2,-7,5,-10,-1,5,-2,-9,-2,-3,8,1,1,-2,-8],[7,8,4,7,-10,-2,-10,1,-5,4,-2,-5,-10,8,-3,8],[-10,-8,-10,8,-3,7,5,3,-3,-7,3,-7,10,-5,-2,5],[-1,-6,-9,-1,3,8,-9,9,1,-6,9,7,9,-2,-9,4],[-1,-9,5,7,-1,9,9,2,1,4,3,9,5,6,-8,2]]], dtype = "uint64")#candidate|6060|(16, 15, 16)|const|uint64
const_6061 = relay.const([[[-2,-7,10,4,-5,3,5,-3,7,6,2,-3,-6,1,9,-1],[4,3,-5,9,7,-1,8,-7,-6,4,-4,-10,-3,10,3,-10],[-7,-1,9,-2,6,1,7,-8,2,-10,8,9,-1,3,8,10],[-8,10,5,-6,-7,-6,4,7,7,-2,-7,8,10,3,9,-5],[-8,-6,9,3,-10,10,4,-2,5,6,7,-2,-7,6,2,-5],[-8,-3,-5,-5,-7,1,-10,-2,6,-7,-4,-1,5,9,9,-8],[-6,-4,-9,-8,-3,8,1,-8,-8,2,-5,-4,-8,-10,8,-4],[2,9,-8,-8,7,4,-7,-5,-9,-6,-9,9,-5,4,8,10],[-5,-1,-8,-6,8,3,4,10,-6,-10,-9,10,-9,-7,-2,8],[8,2,10,-10,-8,4,10,5,-2,-9,-5,5,5,10,-1,-7],[-10,4,7,-10,5,-6,8,1,10,1,10,9,7,3,10,6],[8,-9,4,-9,3,-5,9,-3,5,4,9,3,3,-4,5,-2],[-2,6,-10,4,-2,-8,-5,10,4,-7,5,7,-5,2,2,3],[-5,-7,-5,10,-2,-8,9,6,10,-6,-5,-5,-5,2,-1,1],[-5,-10,-1,-8,1,9,2,5,1,8,-6,10,-10,-1,9,-6]],[[8,5,-8,-2,8,1,7,3,9,7,6,9,2,-8,9,3],[2,1,-10,-9,4,-10,9,-10,9,-6,-5,-5,-6,-7,-9,-6],[-10,-10,-10,1,-2,7,-8,-10,4,-4,-2,7,-3,4,-5,-4],[-7,-5,5,1,1,-9,-4,-6,6,1,-10,-7,-1,7,-3,-2],[5,-9,5,8,-9,5,-7,-4,-2,4,-3,4,-3,-1,2,-9],[1,7,-8,-2,-3,2,9,-4,3,2,8,2,-9,-10,-6,-7],[-6,5,-9,-3,-7,2,-3,6,2,-1,-5,4,6,6,4,1],[10,-6,-6,-1,5,6,10,5,-1,4,9,-4,1,-9,5,-5],[-7,-4,-1,5,-8,6,-4,-10,9,-2,10,-5,6,-8,-5,6],[3,6,-4,-1,-3,-8,8,-3,2,5,-9,-4,4,6,4,-3],[3,-10,10,9,8,2,7,-3,1,10,-10,-7,-8,-4,-6,-9],[6,-5,-3,-2,4,-7,1,10,1,4,-6,-6,3,-7,8,-7],[5,3,-6,9,10,1,-7,5,-10,-9,-9,3,6,-10,-3,-9],[9,-6,-6,3,10,-9,-4,7,1,-2,-3,-2,-6,1,9,10],[1,-3,1,-3,9,-10,-6,6,-4,-10,5,6,-6,1,-9,3]],[[6,-9,1,8,5,10,-6,9,-7,9,-10,-3,5,2,-2,-6],[-3,5,-6,-4,10,2,-2,-6,-1,1,1,8,8,8,8,-10],[8,7,-8,-2,-8,-4,7,-1,6,-10,8,1,-1,-5,4,2],[-1,-3,-1,-7,1,-1,-3,5,-6,4,-4,-9,-5,-1,-10,-8],[-1,1,-10,-1,4,-9,6,-6,-10,6,7,-6,2,1,10,4],[-2,5,5,-3,10,6,6,8,-4,8,2,6,-3,5,-8,-7],[5,-2,-8,9,-9,-3,7,-10,10,4,6,-5,9,-2,-10,-7],[9,-5,-8,-4,-9,1,2,9,-1,-3,5,6,9,-8,5,4],[-7,-10,5,-2,-2,-2,-4,6,4,-2,9,-10,4,-7,-5,2],[2,-9,-7,-1,3,7,4,3,-5,6,3,-2,8,-7,-2,9],[4,-1,8,-1,-5,8,-4,-9,6,-10,-5,-9,4,6,-8,8],[-2,2,-10,2,-3,-7,1,-5,3,-9,10,1,-5,-7,-3,-4],[5,6,-3,3,1,3,7,-1,3,-9,10,-6,1,10,10,9],[-2,-1,5,10,-3,8,-1,10,-10,7,-1,5,-8,-5,10,4],[-1,6,-8,-4,1,10,-2,6,-9,10,-9,1,-1,-6,10,-3]],[[-6,9,-5,-4,4,8,6,7,-8,7,-3,5,-5,-5,2,8],[-6,1,-1,-10,10,-2,-2,2,-8,-9,7,7,6,9,-9,-3],[5,6,8,-2,4,5,-4,7,-3,-3,2,-2,-3,6,9,6],[-3,1,-8,2,-10,-9,-3,6,-5,-8,-10,-5,3,-2,-1,8],[1,-7,-4,-5,7,9,-10,-6,4,4,-6,5,-2,-2,7,1],[9,1,9,8,-7,4,1,-6,5,9,3,-9,-2,10,-8,9],[8,-3,-5,-3,-9,4,8,-5,10,-2,-7,-9,-3,10,1,1],[9,-8,-4,-9,-7,-2,-10,8,10,-4,3,6,4,7,3,-7],[-1,-9,4,-7,8,6,6,-10,3,3,-7,4,-3,7,9,2],[-8,5,6,5,-1,2,6,-6,-5,-7,-6,-4,-1,8,-6,8],[-9,8,-4,9,-5,-5,-2,1,7,-8,8,3,4,9,-10,-5],[-1,4,5,1,6,-10,6,-4,7,6,-7,-7,2,2,-3,1],[-8,-9,10,-3,-5,-5,-2,4,2,-9,10,-9,-9,4,-7,-6],[-4,10,-5,10,-7,3,-5,-3,8,5,5,2,-6,6,3,-2],[6,-1,-6,3,8,-5,2,2,-7,7,3,-5,-6,-4,-2,-6]],[[-8,-3,9,-10,-1,-4,10,-2,2,-10,-1,-4,6,5,-4,-10],[1,-9,-7,-1,-3,-3,8,-1,-5,5,-5,-2,-7,-1,-2,-3],[4,3,-10,-2,-7,5,8,-6,-4,10,10,-10,-1,-7,-2,3],[-4,-7,-1,5,-4,5,-4,-7,-4,10,9,2,-3,-2,-1,2],[1,10,-10,2,-3,8,-8,10,3,7,-3,3,-9,-4,-8,-8],[6,3,-10,2,1,-5,-4,-4,-6,-9,9,-7,-5,-3,-5,-5],[8,1,-4,3,10,8,-2,10,-3,-9,1,5,4,2,-6,2],[-7,-1,-5,-8,-4,-8,-1,6,-7,8,-10,-5,-8,6,2,-7],[-1,9,5,-1,-6,-7,7,-2,-8,-4,1,5,-4,5,-8,-6],[5,5,7,-8,6,1,-1,-8,1,-9,1,6,-2,-3,5,9],[7,9,1,8,-7,1,-9,-6,4,7,-9,1,5,-4,-5,2],[9,5,-3,9,1,-5,-2,-5,8,10,-6,-1,-6,3,7,3],[-9,8,-1,-1,9,-5,10,-7,-1,-6,-9,9,-9,7,10,-4],[8,2,-10,-2,-10,2,-6,-8,6,-3,8,-2,-4,5,-7,-2],[2,4,8,1,-4,10,1,-6,-10,4,3,-7,3,1,-2,4]],[[-9,-5,6,-5,-8,8,-10,8,5,8,-8,-7,6,2,2,-1],[6,-8,-2,1,-7,-1,7,-9,-1,-10,-3,-1,-4,-8,-1,-9],[-4,9,9,8,-1,5,8,10,-2,-10,7,5,-4,-10,-1,-2],[-6,-1,-1,3,7,1,3,-7,-2,-9,8,-4,6,-9,-5,-1],[2,-7,10,6,-7,5,8,4,-10,-1,-8,3,9,10,5,-4],[-3,9,-1,1,1,10,7,-9,1,-5,3,3,-2,-5,-6,3],[9,3,6,-10,9,8,5,2,7,5,7,-3,2,-3,8,10],[-7,-1,-8,-4,2,2,9,-3,3,-6,7,9,-1,10,10,9],[2,4,1,-6,8,-10,5,-3,1,-1,1,8,6,-1,7,-6],[2,-10,8,7,5,2,1,8,-7,2,1,-9,-7,5,-2,4],[1,-8,9,4,5,2,3,9,1,7,-3,-10,1,-6,-6,-9],[-6,7,-4,-9,-9,4,3,4,-7,7,-9,10,-2,-3,9,-7],[-10,-10,5,3,10,-8,3,8,-4,7,4,3,4,-6,9,5],[8,-6,-3,-9,-8,-8,10,8,3,-7,-3,-2,-6,7,2,7],[-9,2,-1,7,-9,-10,-10,-5,6,-1,2,-5,4,6,-5,-3]],[[-3,6,-8,-5,7,8,-4,2,4,-6,-7,-5,-4,-6,-3,5],[5,-1,-6,2,10,1,-4,3,-8,-4,-1,-5,-9,5,-1,-7],[-4,9,-7,-1,2,10,-9,-2,1,2,-5,8,-10,-6,-3,-7],[-5,7,7,8,2,-3,-10,-7,-3,6,8,1,-7,8,2,-7],[4,-7,-1,-10,3,-5,-2,-8,3,-10,8,-8,-10,2,-4,1],[4,8,-2,-2,4,2,2,-1,-5,-6,4,-5,4,6,-10,-5],[4,-2,4,5,-3,-5,8,10,7,-6,3,3,1,-5,-8,-7],[-6,3,3,9,7,-1,-10,-10,-10,-5,-10,-10,2,3,-6,2],[-9,3,3,10,-7,-6,-3,-3,-5,-5,1,-5,1,-10,-10,10],[-9,1,-4,-3,1,8,-6,-8,1,5,9,4,-9,8,9,9],[10,2,-3,6,4,10,7,2,-3,2,6,3,-10,-5,8,1],[-5,3,7,2,3,5,3,-8,4,-8,5,8,-4,-8,-6,-2],[9,-9,-5,10,-6,-8,4,-5,5,9,-7,-7,1,-5,2,9],[3,10,10,3,-6,-5,6,-9,3,3,6,-3,3,3,5,9],[-10,5,-10,6,-9,6,-8,8,-2,3,1,4,-6,-9,1,-1]],[[6,10,6,2,6,-3,-1,-8,-2,-1,-9,-6,4,-7,5,7],[-4,9,-5,-5,9,5,-9,-4,-4,-3,-2,7,4,2,-2,1],[5,7,-9,1,2,-9,-9,-1,8,5,1,-7,-5,-2,-7,6],[3,2,-8,1,8,-1,10,9,6,-7,5,-3,2,-1,10,-1],[-1,-4,-5,-8,-4,-10,-1,-2,3,5,5,10,3,6,-9,4],[-9,10,5,9,-5,4,9,4,-9,-2,4,10,5,9,-3,5],[-3,-8,-3,10,9,5,-1,-10,5,-5,-5,-6,-2,-6,10,-9],[-8,-3,-5,10,-8,1,-3,2,-2,9,-1,-8,2,10,-5,6],[5,2,-4,-5,7,-4,7,-10,-2,-6,6,7,-8,-1,-5,4],[-8,-1,1,7,-2,-8,-8,7,9,-4,-7,-2,-10,-6,2,7],[8,-4,-6,7,-3,-6,-3,-2,6,7,1,-8,4,7,6,6],[2,3,3,5,-4,7,-3,10,-5,3,-8,-6,-5,-8,7,-6],[-6,-8,-6,-4,-3,8,10,-5,8,-10,7,9,-10,-6,5,-7],[-9,-9,-7,7,-4,6,-6,-10,7,1,7,-9,-8,-6,-6,-3],[8,-2,-7,-7,-6,6,3,6,-5,7,8,-10,2,-9,-1,-3]],[[-6,-3,4,7,-2,3,8,-7,-8,-6,-2,-3,4,-1,6,-3],[-7,-7,-8,-4,-7,8,-8,-8,-1,5,5,-8,-1,6,-2,-2],[-7,3,-5,-8,4,8,4,2,-2,-1,-6,8,9,-5,-4,2],[-5,-7,-10,3,-2,7,6,-1,6,-9,-10,-10,-10,-10,3,6],[-4,8,-7,-9,-1,4,6,8,-7,6,4,6,2,-10,7,3],[-8,-7,-2,-5,3,-10,3,2,-7,-9,4,-8,-3,-1,6,-4],[-3,-1,-9,7,6,-2,-7,10,3,-6,-5,5,-3,-8,8,-3],[-3,7,-1,-4,2,-5,-10,-5,-4,-2,-3,7,-3,3,5,4],[10,-1,-8,9,1,-10,-9,-8,4,-2,-6,3,1,1,-3,7],[-6,8,1,3,1,7,-8,5,-2,9,5,7,7,6,-3,-5],[9,-3,1,6,-1,4,-7,-9,5,9,9,7,-4,-8,-6,-5],[8,-9,4,-3,-8,4,3,4,-1,-9,9,-8,9,-7,3,-3],[-10,2,-8,10,-9,3,8,-1,2,-1,3,3,9,10,2,5],[-6,5,-1,1,-9,-1,6,8,-1,1,2,10,4,3,1,-7],[2,-10,8,2,-10,6,8,-3,5,-3,-8,8,10,5,9,8]],[[-5,-6,-2,2,-3,7,4,-10,-6,8,5,5,7,-1,-3,8],[9,-10,-2,2,-3,-9,-3,-6,2,-2,-9,-6,-6,-5,-6,-8],[6,-6,2,-6,-9,2,3,-10,1,2,8,10,-5,-6,7,5],[-1,4,9,10,6,-1,-9,2,2,4,3,7,-9,6,6,-1],[-2,-2,-6,10,-2,9,-1,-3,-6,-6,-1,5,-5,-5,-4,-10],[1,9,4,-9,2,10,-8,8,-10,-3,7,-10,-10,-5,-1,-3],[5,-10,-5,5,-7,-3,-10,1,5,-2,1,-7,6,5,7,10],[2,-10,8,-4,-2,4,-8,-1,-6,-9,4,-7,-8,-8,2,8],[7,-3,-5,4,4,9,-10,6,3,4,-3,-6,7,7,-1,5],[1,4,3,-3,-5,-10,5,2,3,-3,-9,7,-4,-5,-9,6],[-8,-8,-10,9,-5,10,-7,6,-10,-8,2,7,10,-5,-2,-9],[-1,1,-7,-7,-9,2,9,8,9,-10,-1,-8,-9,-10,-2,-1],[-7,4,-5,8,-8,-2,10,-8,-5,-9,3,7,-10,5,7,7],[-10,-10,2,9,-8,-8,-10,-7,-5,1,-6,2,-7,-10,-2,-10],[9,-7,10,2,-8,8,7,3,4,9,-4,7,-5,8,5,-10]],[[-2,5,3,-9,8,-9,3,-4,-7,6,-4,-5,-10,-8,4,1],[-5,7,-6,10,-4,-8,2,3,-4,5,1,-9,-4,8,-7,4],[-5,-1,-7,-4,2,9,3,5,10,7,1,-2,5,5,-9,5],[1,-5,-6,1,-1,2,-4,-1,-9,8,8,-5,2,-6,-10,-4],[-4,-7,-10,-8,1,-6,7,9,-8,3,9,-9,-9,-1,-6,8],[-8,2,-7,10,10,-3,3,-10,9,9,5,-8,-4,3,-5,-10],[10,-10,4,-3,6,-9,7,2,-7,5,-8,6,5,-10,4,3],[5,9,5,-2,-9,10,2,-4,-10,1,-6,-9,-10,-1,-2,6],[-10,-7,-8,-6,9,3,-7,-2,-7,-6,-4,4,-4,6,-1,-3],[7,6,8,2,-9,1,-5,-4,10,7,-4,5,6,-8,-4,-8],[1,-8,-7,8,-9,-3,-4,7,8,7,5,-4,3,-7,-2,-10],[10,-2,2,4,-9,-6,-5,-8,-6,-7,-8,1,-2,10,5,7],[-2,2,-10,-5,-3,-3,-1,1,9,8,8,9,-10,-4,-9,-10],[-9,-4,1,10,-8,4,6,-7,-3,2,-4,1,-8,-9,-3,9],[-5,3,-10,-2,7,-8,-3,-10,1,8,-1,-1,4,-7,1,3]],[[8,-4,10,-7,-3,-2,1,5,-1,9,-3,-4,-10,-6,-8,-7],[-4,5,8,-2,8,-1,3,-2,10,10,-2,2,5,3,8,10],[-2,7,8,2,1,-8,9,1,-1,-5,-5,-5,7,-4,7,-9],[8,10,5,-3,-5,-3,2,6,-6,8,-9,2,8,-3,7,-5],[-5,-2,-7,7,7,-8,5,-2,-4,10,3,1,7,8,3,-10],[8,-1,8,-7,-7,4,7,-2,-6,6,6,9,-1,-9,10,-5],[1,3,3,4,5,3,-4,4,-9,7,8,-1,5,-5,7,-5],[-5,10,10,-7,4,8,-7,7,-3,-3,4,-1,-2,-6,-6,9],[-3,9,-7,-8,-8,-10,-9,3,3,6,-10,8,5,2,9,3],[4,-5,10,-3,-2,-3,2,-4,4,4,-6,7,-6,-5,2,-7],[1,9,-7,-10,-3,-9,-3,-2,4,-10,-6,-4,-5,9,8,-6],[-8,-2,7,-6,-7,7,-10,4,3,-4,2,-5,-8,8,2,5],[-9,7,-9,6,9,-5,-2,-3,-4,8,-9,-4,-9,1,6,-1],[4,-3,-10,8,-4,-10,-3,-3,-2,-4,-6,-7,1,-4,7,4],[-5,2,-7,7,-5,-10,-10,5,6,4,-10,-4,-9,9,-8,-7]],[[1,-8,-2,-2,2,3,-4,3,-10,1,7,2,-8,4,-8,-6],[-10,9,-1,-7,4,-4,-10,8,5,-3,-7,-8,8,8,3,-6],[10,3,8,-2,-1,1,-5,-5,-8,-1,-3,-9,-3,6,-1,-8],[-8,10,-2,8,-1,9,8,6,-10,1,10,-4,-7,10,5,-8],[-1,-8,-3,8,-7,-1,9,-1,6,4,-3,10,3,9,8,-8],[6,-1,6,4,-6,-8,-2,-6,4,6,-2,-9,-6,10,6,2],[8,2,3,-7,10,-4,4,-5,-3,6,-9,10,-3,-1,8,2],[7,10,-9,10,2,-6,-5,-5,-3,-4,7,-10,-4,-1,4,-10],[9,-2,-7,-2,6,5,8,-10,4,3,-9,4,-4,6,10,9],[-6,-10,3,3,-9,-1,-10,-9,-6,-6,3,-8,6,-5,2,8],[4,2,-1,7,3,8,-8,8,9,-8,-5,-1,2,7,-9,3],[-2,-1,2,-4,5,-10,1,6,3,4,2,-7,1,-10,9,-6],[-10,6,6,-7,-6,-3,-5,6,-4,-6,-8,-3,-8,-9,-6,-10],[1,-10,-9,-7,6,-1,8,-10,10,9,10,-6,4,-9,-10,9],[-8,8,8,10,5,4,9,-6,-10,6,8,2,7,4,-2,-9]],[[-4,6,4,5,-7,3,-2,6,7,-6,6,-6,-1,10,-3,-4],[10,8,-7,-3,1,2,-6,-5,-2,7,9,1,-6,-3,-4,8],[6,7,-9,10,8,-3,-2,-7,-1,2,-2,10,-4,8,10,1],[4,-3,-8,-2,5,-1,6,-3,4,7,-8,5,1,-9,9,-1],[8,5,7,2,-5,-10,1,-9,9,-3,4,9,1,-8,-10,3],[-3,3,8,-3,-8,-5,6,-6,-10,10,-10,9,6,4,-8,-3],[-7,-2,-4,1,8,3,-10,7,-9,-5,-5,-10,4,7,3,5],[-8,7,2,4,-4,3,5,5,6,-4,-4,2,-10,-2,-10,-3],[3,-8,9,-6,8,-8,-9,8,-3,-8,9,-7,-10,-2,-7,7],[-6,-7,-9,-8,2,2,7,7,-4,-8,-7,-10,5,7,6,2],[-1,6,3,6,8,-7,8,6,10,-5,-3,6,-8,10,7,7],[-2,-7,-7,-10,-1,-1,-10,-2,-2,-9,-3,-3,-6,-8,-6,2],[-8,-4,-1,9,1,2,-8,4,-3,-5,6,9,2,6,2,7],[-6,-6,-7,-1,-4,10,7,-2,-4,7,6,3,-5,7,8,9],[6,5,10,-2,6,6,3,-6,-6,1,10,9,5,-7,1,1]],[[3,1,-9,-8,4,-2,6,7,10,-4,-2,-8,-1,1,2,1],[7,9,-6,5,-2,8,3,-10,1,-3,-8,-9,-9,5,2,7],[10,7,2,8,9,4,1,-4,9,-5,-2,8,-5,-3,8,8],[3,-4,7,10,7,-7,9,1,3,-5,-2,-6,-3,-4,8,-9],[-7,-9,4,-10,5,-1,3,10,-8,2,-7,7,-9,1,4,10],[4,6,9,10,7,8,-3,-7,3,-3,8,-10,-2,6,-2,5],[-8,-5,1,10,-7,8,-7,3,4,10,-7,-1,-3,2,5,-3],[-2,-9,6,-1,-10,-4,-5,8,-4,-1,1,7,1,1,-1,-9],[3,-4,-7,-1,-3,3,4,7,-10,-9,2,-6,7,1,10,-1],[-5,-3,9,7,-10,1,-2,4,-9,-4,10,6,-5,-5,4,-1],[2,-1,-9,4,1,-5,-2,-6,1,1,-7,-9,3,-9,-2,6],[-4,5,-7,3,2,2,7,6,5,-9,6,7,4,6,6,-1],[1,2,-3,-6,2,-3,-6,-7,6,-3,4,2,6,5,10,-2],[2,-8,8,-1,4,9,3,-10,2,3,-3,-7,3,-1,-7,-5],[-7,-3,-7,-7,-10,-10,2,2,-5,-1,2,-9,9,-9,5,5]],[[-6,-8,5,-5,-2,8,7,8,-4,10,7,10,-9,2,4,-7],[8,-3,-1,-9,-5,4,6,-4,1,8,-3,-3,9,8,5,-4],[-1,5,5,-2,1,-2,8,-9,2,-6,-8,-9,6,-2,3,1],[1,3,-2,-8,-10,1,-8,6,10,5,5,-6,-9,10,-4,-5],[1,-3,-2,-7,1,10,-2,7,2,-1,6,-6,10,9,8,-9],[10,3,2,4,-10,3,5,-6,-4,4,8,6,-7,-2,-9,-6],[-2,2,-9,-9,3,2,4,4,7,-7,-9,3,-10,-1,-3,-7],[-3,2,7,10,-3,-7,10,-4,-1,-2,-6,6,-9,4,-5,-8],[9,-2,-1,-8,7,-1,9,4,8,2,-2,-9,-7,-2,5,-3],[-1,-3,-7,7,6,-1,-3,7,-2,7,-1,-6,1,-3,9,1],[8,4,-2,-9,9,3,4,5,-3,3,-9,2,-6,-4,-8,-7],[-8,-4,-2,-1,1,-4,8,-5,2,-4,-5,-10,-1,8,-1,8],[7,-2,-4,-1,8,4,-5,-6,-6,-7,-7,4,3,-9,-8,-4],[10,-4,-10,1,-10,-6,3,3,4,-10,9,1,7,-4,7,-10],[5,-3,-8,-3,-7,-3,-2,-8,8,-7,4,-7,-6,-6,9,3]]], dtype = "uint64")#candidate|6061|(16, 15, 16)|const|uint64
bop_6062 = relay.subtract(const_6060.astype('uint64'), relay.reshape(const_6061.astype('uint64'), relay.shape_of(const_6060))) # shape=(16, 15, 16)
bop_6068 = relay.multiply(const_6060.astype('int8'), relay.reshape(bop_6062.astype('int8'), relay.shape_of(const_6060))) # shape=(16, 15, 16)
output = bop_6068
output2 = bop_6068
func_6074 = relay.Function([], output)
mod['func_6074'] = func_6074
mod = relay.transform.InferType()(mod)
mutated_mod['func_6074'] = func_6074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6074_call = mutated_mod.get_global_var('func_6074')
call_6075 = func_6074_call()
output = call_6075
func_6076 = relay.Function([], output)
mutated_mod['func_6076'] = func_6076
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6101 = relay.var("var_6101", dtype = "float32", shape = (9, 15, 14))#candidate|6101|(9, 15, 14)|var|float32
uop_6102 = relay.atan(var_6101.astype('float32')) # shape=(9, 15, 14)
func_2706_call = mod.get_global_var('func_2706')
func_2708_call = mutated_mod.get_global_var('func_2708')
const_6107 = relay.const([7.127863,-8.910549,3.881843,-5.951930,-5.218456,1.100938,8.648156,9.474704,-3.382771,5.048785,0.949919,2.123263,-4.882643,0.573942,3.449910,-1.106857,-2.929789,8.563855,-0.018695,-9.152577,2.174633,9.282993,0.833143,8.886986,-0.465663,6.800440,4.438469,-9.740795,9.821044,-1.425379,3.788218,8.416923,6.494958,7.860552,9.120202,7.062183,-3.811512,0.935540,5.036388,1.445037,3.000995,-8.038714,7.048189,6.626203,-6.116076,3.725827,-2.015197,5.929748,3.344353,3.866438,-1.501337,3.784374,-3.659043,-4.948448,4.441407,5.547281,5.823763,-8.858823,-9.987243,5.341039,5.261896,-2.970202,7.634234,1.773702,9.345813,8.429028,2.429466,-9.660549,-5.986612,-3.541342,-8.568886,-6.965374,2.968092,4.878194,-5.592982,-9.730015,9.304166,-3.932183,-3.952685,-9.875833,-3.191387,4.923202,-1.302728,6.928825,-7.700193,8.699437,3.086992,-7.128422,-3.257275,-0.499896,-1.655889,-6.527806,-8.937598,4.465454,-3.991981,-6.059067,9.213578,9.438304,1.996404,-4.928125,-8.305698,-7.108460,-9.184377,-5.681653,-9.655962,4.040677,6.966204,5.753089,-2.229230,-0.365946,-7.560089,-4.310458,-3.360032,6.123542,-4.580468,4.332836,4.193733,8.944741,7.982564,-3.504141,-1.253135,-9.037599,2.931361,7.752186,-9.340800,4.842313,-5.793694,0.109725,5.378052,-5.183975,-7.888417,-0.907667,-4.438052,5.022661,1.465593,5.780640,-6.250226,1.439722,9.953586,5.854498,-2.264448,-7.518134,-2.523619,3.457283,4.017375,-4.762018,8.385626,3.867307,-1.620441,1.054221,1.824475,2.879238,1.916852,0.173162,-3.559011,-1.710249,6.887168,1.881522,-3.005404,5.455013,8.063451,-6.819193,-7.864728,-4.657072,-9.198163,-5.907626,-6.093370,8.663648,-4.845257,2.463525,-6.516565,4.035158,-3.225220,2.893620,7.162252,-8.918932,-9.799671,-4.196614,5.675231,8.065471,-5.391480,2.532905,-3.916830,-8.801430,7.439273,7.994696,-6.275384,-3.021493,6.876584,9.759918,-6.038706,7.160340,-4.191384,-8.873649,-3.747814,-0.365389,2.781269,-6.520113,-1.223838,5.886677,-0.089006,8.232254,2.664367,1.080151,-9.118085,-5.646463,2.656843,0.360246,5.837410,4.902176,-7.345648,-6.010937,4.787385,1.201633,-4.953303,0.038431,9.007696,3.951724,-8.197243,4.144866,5.496463,-2.489052,-1.575595,6.363072,9.067129,7.019191,-4.911628,5.720260,-1.956990,7.370911,6.868119,4.320937,-0.199160,-4.754736,-0.992546,8.415597,2.201153,-2.533022,2.031262,0.710015,-2.532793,-9.419515,-6.823460,-3.617976,-0.044516,1.352397,-4.558948,-5.840298,3.759409,-8.502394,8.465668,-8.049297,8.656941,-3.064305,-3.095153,9.636373,-3.429759,5.962470,2.441794,-4.266888,8.100861,-9.548126,-0.424321,-1.849200,3.964110,7.742612,-9.557223,2.583639,-8.415473,1.933039,7.951393,2.111143,-9.132445,-5.458700,-9.970959,-3.436586,0.759700,-8.652281,5.439063,6.819974,3.226882,7.773969,-1.472014,8.167730,-7.302477,4.114502,0.030777,-7.573218,9.743996,8.038896,0.902185,-2.450866,-9.676802,-1.044500,2.269951,-5.914420,6.190780,1.246903,-1.136342,-2.109010,1.309478,-6.301274,1.001563,-0.773157,-4.290516,-9.016033,5.745577,-8.291250,8.226718,-5.758367,-4.844411,3.224166,-4.619730,-2.595107,2.827707,-2.121198,-5.885542,3.047404,5.879147,8.211706,-4.065225,3.523430,-5.452762,0.654013,-5.889460,-3.211815,0.715079,-1.743122,-2.826196,-0.869274,-3.449790,-5.610781,-1.263793,-8.246366,-3.397782,8.241929], dtype = "float64")#candidate|6107|(336,)|const|float64
call_6106 = relay.TupleGetItem(func_2706_call(relay.reshape(const_6107.astype('float64'), [168, 2])), 1)
call_6108 = relay.TupleGetItem(func_2708_call(relay.reshape(const_6107.astype('float64'), [168, 2])), 1)
var_6119 = relay.var("var_6119", dtype = "float32", shape = (9, 15, 14))#candidate|6119|(9, 15, 14)|var|float32
bop_6120 = relay.bitwise_and(uop_6102.astype('uint16'), relay.reshape(var_6119.astype('uint16'), relay.shape_of(uop_6102))) # shape=(9, 15, 14)
output = relay.Tuple([call_6106,const_6107,bop_6120,])
output2 = relay.Tuple([call_6108,const_6107,bop_6120,])
func_6127 = relay.Function([var_6101,var_6119,], output)
mod['func_6127'] = func_6127
mod = relay.transform.InferType()(mod)
mutated_mod['func_6127'] = func_6127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6127_call = mutated_mod.get_global_var('func_6127')
var_6129 = relay.var("var_6129", dtype = "float32", shape = (9, 15, 14))#candidate|6129|(9, 15, 14)|var|float32
var_6130 = relay.var("var_6130", dtype = "float32", shape = (9, 15, 14))#candidate|6130|(9, 15, 14)|var|float32
call_6128 = func_6127_call(var_6129,var_6130,)
output = call_6128
func_6131 = relay.Function([var_6129,var_6130,], output)
mutated_mod['func_6131'] = func_6131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5882_call = mod.get_global_var('func_5882')
func_5884_call = mutated_mod.get_global_var('func_5884')
call_6196 = func_5882_call()
call_6197 = func_5882_call()
func_2798_call = mod.get_global_var('func_2798')
func_2799_call = mutated_mod.get_global_var('func_2799')
call_6210 = relay.TupleGetItem(func_2798_call(), 2)
call_6211 = relay.TupleGetItem(func_2799_call(), 2)
func_2706_call = mod.get_global_var('func_2706')
func_2708_call = mutated_mod.get_global_var('func_2708')
call_6236 = relay.TupleGetItem(func_2706_call(relay.reshape(call_6196.astype('float64'), [168, 2])), 1)
call_6237 = relay.TupleGetItem(func_2708_call(relay.reshape(call_6196.astype('float64'), [168, 2])), 1)
bop_6242 = relay.bitwise_and(call_6236.astype('uint64'), relay.reshape(call_6196.astype('uint64'), relay.shape_of(call_6236))) # shape=(168, 2)
bop_6245 = relay.bitwise_and(call_6237.astype('uint64'), relay.reshape(call_6197.astype('uint64'), relay.shape_of(call_6237))) # shape=(168, 2)
func_1411_call = mod.get_global_var('func_1411')
func_1415_call = mutated_mod.get_global_var('func_1415')
var_6254 = relay.var("var_6254", dtype = "int64", shape = (660,))#candidate|6254|(660,)|var|int64
call_6253 = func_1411_call(relay.reshape(var_6254.astype('int64'), [12, 5, 11]), relay.reshape(var_6254.astype('int64'), [12, 5, 11]), )
call_6255 = func_1411_call(relay.reshape(var_6254.astype('int64'), [12, 5, 11]), relay.reshape(var_6254.astype('int64'), [12, 5, 11]), )
output = relay.Tuple([call_6210,bop_6242,call_6253,var_6254,])
output2 = relay.Tuple([call_6211,bop_6245,call_6255,var_6254,])
func_6268 = relay.Function([var_6254,], output)
mod['func_6268'] = func_6268
mod = relay.transform.InferType()(mod)
var_6269 = relay.var("var_6269", dtype = "int64", shape = (660,))#candidate|6269|(660,)|var|int64
output = func_6268(var_6269)
func_6270 = relay.Function([var_6269], output)
mutated_mod['func_6270'] = func_6270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4652_call = mod.get_global_var('func_4652')
func_4653_call = mutated_mod.get_global_var('func_4653')
call_6274 = relay.TupleGetItem(func_4652_call(), 0)
call_6275 = relay.TupleGetItem(func_4653_call(), 0)
func_3214_call = mod.get_global_var('func_3214')
func_3216_call = mutated_mod.get_global_var('func_3216')
call_6289 = relay.TupleGetItem(func_3214_call(), 0)
call_6290 = relay.TupleGetItem(func_3216_call(), 0)
output = relay.Tuple([call_6274,call_6289,])
output2 = relay.Tuple([call_6275,call_6290,])
func_6300 = relay.Function([], output)
mod['func_6300'] = func_6300
mod = relay.transform.InferType()(mod)
mutated_mod['func_6300'] = func_6300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6300_call = mutated_mod.get_global_var('func_6300')
call_6301 = func_6300_call()
output = call_6301
func_6302 = relay.Function([], output)
mutated_mod['func_6302'] = func_6302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4427_call = mod.get_global_var('func_4427')
func_4429_call = mutated_mod.get_global_var('func_4429')
call_6347 = relay.TupleGetItem(func_4427_call(), 2)
call_6348 = relay.TupleGetItem(func_4429_call(), 2)
func_4702_call = mod.get_global_var('func_4702')
func_4703_call = mutated_mod.get_global_var('func_4703')
call_6355 = func_4702_call()
call_6356 = func_4702_call()
var_6398 = relay.var("var_6398", dtype = "float32", shape = (11, 2, 12))#candidate|6398|(11, 2, 12)|var|float32
bop_6399 = relay.greater(call_6347.astype('bool'), var_6398.astype('bool')) # shape=(11, 2, 12)
bop_6402 = relay.greater(call_6348.astype('bool'), var_6398.astype('bool')) # shape=(11, 2, 12)
func_800_call = mod.get_global_var('func_800')
func_803_call = mutated_mod.get_global_var('func_803')
const_6410 = relay.const([8.737606,5.529131,-8.001973,5.922023,-5.908184,-8.475488,9.050051,-2.169168,-4.664020,-4.827059,1.841616,4.146185,-4.929406,2.900245,-9.651294,1.438431,2.490975,-5.775296,8.679433,-0.580647], dtype = "float32")#candidate|6410|(20,)|const|float32
call_6409 = relay.TupleGetItem(func_800_call(relay.reshape(const_6410.astype('float32'), [4, 1, 5])), 2)
call_6411 = relay.TupleGetItem(func_803_call(relay.reshape(const_6410.astype('float32'), [4, 1, 5])), 2)
uop_6417 = relay.exp(call_6347.astype('float32')) # shape=(11, 1, 12)
uop_6419 = relay.exp(call_6348.astype('float32')) # shape=(11, 1, 12)
output = relay.Tuple([call_6355,bop_6399,call_6409,const_6410,uop_6417,])
output2 = relay.Tuple([call_6356,bop_6402,call_6411,const_6410,uop_6419,])
func_6421 = relay.Function([var_6398,], output)
mod['func_6421'] = func_6421
mod = relay.transform.InferType()(mod)
var_6422 = relay.var("var_6422", dtype = "float32", shape = (11, 2, 12))#candidate|6422|(11, 2, 12)|var|float32
output = func_6421(var_6422)
func_6423 = relay.Function([var_6422], output)
mutated_mod['func_6423'] = func_6423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3374_call = mod.get_global_var('func_3374')
func_3376_call = mutated_mod.get_global_var('func_3376')
call_6455 = relay.TupleGetItem(func_3374_call(), 1)
call_6456 = relay.TupleGetItem(func_3376_call(), 1)
output = relay.Tuple([call_6455,])
output2 = relay.Tuple([call_6456,])
func_6481 = relay.Function([], output)
mod['func_6481'] = func_6481
mod = relay.transform.InferType()(mod)
output = func_6481()
func_6482 = relay.Function([], output)
mutated_mod['func_6482'] = func_6482
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6500 = relay.const([[[2.094527],[8.653789],[-8.771271],[7.654168],[5.455140],[3.602374],[-0.240864],[-8.739632],[-9.744150],[2.984935],[2.709018],[-7.143726]]], dtype = "float32")#candidate|6500|(1, 12, 1)|const|float32
uop_6501 = relay.atan(const_6500.astype('float32')) # shape=(1, 12, 1)
output = relay.Tuple([uop_6501,])
output2 = relay.Tuple([uop_6501,])
func_6512 = relay.Function([], output)
mod['func_6512'] = func_6512
mod = relay.transform.InferType()(mod)
output = func_6512()
func_6513 = relay.Function([], output)
mutated_mod['func_6513'] = func_6513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2936_call = mod.get_global_var('func_2936')
func_2938_call = mutated_mod.get_global_var('func_2938')
call_6577 = relay.TupleGetItem(func_2936_call(), 0)
call_6578 = relay.TupleGetItem(func_2938_call(), 0)
output = call_6577
output2 = call_6578
func_6579 = relay.Function([], output)
mod['func_6579'] = func_6579
mod = relay.transform.InferType()(mod)
output = func_6579()
func_6580 = relay.Function([], output)
mutated_mod['func_6580'] = func_6580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3374_call = mod.get_global_var('func_3374')
func_3376_call = mutated_mod.get_global_var('func_3376')
call_6616 = relay.TupleGetItem(func_3374_call(), 0)
call_6617 = relay.TupleGetItem(func_3376_call(), 0)
func_4144_call = mod.get_global_var('func_4144')
func_4150_call = mutated_mod.get_global_var('func_4150')
const_6622 = relay.const([2.844315,-0.838813,4.768355,2.041029,-5.056453,-4.152340,2.150853,-8.554687,3.032697,-9.825620,-3.012653,8.308773,-8.120875,-1.698105,-8.922469,2.946568,3.045873,-6.469699,3.564127,0.712764,-1.084757,2.767437,2.008243,-6.326708,-9.739882,-9.333866,0.781824,-7.705051,8.699541,9.564511,5.223169,0.157716,-3.870525,6.488858,-1.289682,3.846606,-0.768770,-5.460824,-5.651113,-2.637889,3.341365,-9.756423,-3.807204,5.103302,3.202274,-1.979838,3.148516,8.558124,9.634367,4.832001,3.747008,0.711296,-9.936681,-0.006120,-9.791319,3.303592,9.457368,-8.343335,-8.311081,-9.475610,-1.729101,-7.681328,-3.024037,-3.086435,-9.054570,6.025322,-0.241616,8.198688,-0.233641,-9.858097,6.734499,5.492021,9.857392,-1.010952,8.538810,9.725924,6.967529,9.625996,6.027786,-1.510593,9.232527,-9.928689,-9.020100,-8.328754,6.979384,9.720777,-3.093896,5.440125,8.020117,-5.240661,-2.188205,-7.127607,3.320108,-2.392455,5.943912,0.884943,-3.345502,6.716547,9.270105,-9.032765,-7.053224,5.485695,-0.893449,-5.939057,4.263074,-7.173433,-6.033731,8.551545,-1.766857,-0.644171,-9.891214,-8.518580,3.151203,7.836150,-7.535865,8.730490,-6.488794,9.553287,-0.028602,-8.890062,-0.955049,5.537869,3.297269,1.680492,-1.509593,-6.057057,4.990676,-9.537611,-6.947011,4.841427,7.139521,7.446562,-6.932570,-3.467712,-9.146543,-0.501739,4.872213,0.461837,-5.713078,-4.266573,-3.269383,-3.876818,4.504675,2.170162,-0.143826,-5.595447,1.077489,0.031261,9.728443,-1.874376,-1.935451,-6.793778,2.106227,9.761985,-0.167535,-6.380385,-2.887404,-7.545259,2.397850,4.808194], dtype = "float64")#candidate|6622|(160,)|const|float64
const_6623 = relay.const([-3.405558,-2.239014,-9.087644,3.164187,-6.715071,-5.210060,-5.921785,0.644750,8.812498,6.964714,-0.120355,4.849143,1.099164,3.236483,-1.230649,0.410201,5.479869,4.687714,2.042314,3.829836,6.152097,1.362665,-8.724811,5.544966], dtype = "float32")#candidate|6623|(24,)|const|float32
var_6624 = relay.var("var_6624", dtype = "float32", shape = (10, 2))#candidate|6624|(10, 2)|var|float32
var_6625 = relay.var("var_6625", dtype = "float32", shape = (3, 42))#candidate|6625|(3, 42)|var|float32
call_6621 = relay.TupleGetItem(func_4144_call(relay.reshape(const_6622.astype('float64'), [5, 4, 8]), relay.reshape(const_6622.astype('float64'), [5, 4, 8]), relay.reshape(const_6623.astype('float32'), [1, 24]), relay.reshape(var_6624.astype('float32'), [5, 4]), relay.reshape(var_6625.astype('float32'), [126,]), ), 6)
call_6626 = relay.TupleGetItem(func_4150_call(relay.reshape(const_6622.astype('float64'), [5, 4, 8]), relay.reshape(const_6622.astype('float64'), [5, 4, 8]), relay.reshape(const_6623.astype('float32'), [1, 24]), relay.reshape(var_6624.astype('float32'), [5, 4]), relay.reshape(var_6625.astype('float32'), [126,]), ), 6)
output = relay.Tuple([call_6616,call_6621,const_6622,const_6623,var_6624,var_6625,])
output2 = relay.Tuple([call_6617,call_6626,const_6622,const_6623,var_6624,var_6625,])
func_6631 = relay.Function([var_6624,var_6625,], output)
mod['func_6631'] = func_6631
mod = relay.transform.InferType()(mod)
var_6632 = relay.var("var_6632", dtype = "float32", shape = (10, 2))#candidate|6632|(10, 2)|var|float32
var_6633 = relay.var("var_6633", dtype = "float32", shape = (3, 42))#candidate|6633|(3, 42)|var|float32
output = func_6631(var_6632,var_6633,)
func_6634 = relay.Function([var_6632,var_6633,], output)
mutated_mod['func_6634'] = func_6634
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6687 = relay.var("var_6687", dtype = "float32", shape = (14, 16, 10))#candidate|6687|(14, 16, 10)|var|float32
uop_6688 = relay.cosh(var_6687.astype('float32')) # shape=(14, 16, 10)
output = relay.Tuple([uop_6688,])
output2 = relay.Tuple([uop_6688,])
func_6693 = relay.Function([var_6687,], output)
mod['func_6693'] = func_6693
mod = relay.transform.InferType()(mod)
mutated_mod['func_6693'] = func_6693
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6694 = relay.var("var_6694", dtype = "float32", shape = (14, 16, 10))#candidate|6694|(14, 16, 10)|var|float32
func_6693_call = mutated_mod.get_global_var('func_6693')
call_6695 = func_6693_call(var_6694)
output = call_6695
func_6696 = relay.Function([var_6694], output)
mutated_mod['func_6696'] = func_6696
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6698 = relay.var("var_6698", dtype = "int8", shape = (6, 6, 4))#candidate|6698|(6, 6, 4)|var|int8
const_6699 = relay.const([[[-10,6,9,2],[-2,10,-10,7],[2,10,5,3],[-8,9,-1,-9],[-9,8,6,-9],[-6,2,-8,2]],[[10,-7,8,1],[2,-3,-2,6],[9,1,-2,4],[3,-6,2,2],[-9,-7,8,4],[5,-5,-10,-2]],[[4,4,6,-6],[3,-10,1,9],[1,-7,-5,3],[8,8,-10,9],[-4,10,3,10],[7,5,2,-7]],[[1,3,5,-7],[-5,-3,5,-7],[-8,-10,-2,-9],[10,8,-7,6],[9,5,7,-8],[-6,5,4,-4]],[[-10,3,5,-2],[7,9,-7,3],[6,1,-1,6],[-4,3,-7,-2],[1,9,-9,-3],[5,10,8,-7]],[[3,-2,10,4],[-10,-2,1,-4],[-9,-10,-7,5],[-6,-1,10,1],[-9,10,10,1],[-2,-7,-7,5]]], dtype = "int8")#candidate|6699|(6, 6, 4)|const|int8
bop_6700 = relay.bitwise_and(var_6698.astype('int8'), relay.reshape(const_6699.astype('int8'), relay.shape_of(var_6698))) # shape=(6, 6, 4)
output = bop_6700
output2 = bop_6700
func_6707 = relay.Function([var_6698,], output)
mod['func_6707'] = func_6707
mod = relay.transform.InferType()(mod)
mutated_mod['func_6707'] = func_6707
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6708 = relay.var("var_6708", dtype = "int8", shape = (6, 6, 4))#candidate|6708|(6, 6, 4)|var|int8
func_6707_call = mutated_mod.get_global_var('func_6707')
call_6709 = func_6707_call(var_6708)
output = call_6709
func_6710 = relay.Function([var_6708], output)
mutated_mod['func_6710'] = func_6710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5335_call = mod.get_global_var('func_5335')
func_5336_call = mutated_mod.get_global_var('func_5336')
call_6714 = relay.TupleGetItem(func_5335_call(), 0)
call_6715 = relay.TupleGetItem(func_5336_call(), 0)
uop_6717 = relay.log(call_6714.astype('float64')) # shape=(4, 16, 15)
uop_6719 = relay.log(call_6715.astype('float64')) # shape=(4, 16, 15)
output = relay.Tuple([uop_6717,])
output2 = relay.Tuple([uop_6719,])
func_6725 = relay.Function([], output)
mod['func_6725'] = func_6725
mod = relay.transform.InferType()(mod)
mutated_mod['func_6725'] = func_6725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6725_call = mutated_mod.get_global_var('func_6725')
call_6726 = func_6725_call()
output = call_6726
func_6727 = relay.Function([], output)
mutated_mod['func_6727'] = func_6727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5990_call = mod.get_global_var('func_5990')
func_5991_call = mutated_mod.get_global_var('func_5991')
call_6815 = relay.TupleGetItem(func_5990_call(), 1)
call_6816 = relay.TupleGetItem(func_5991_call(), 1)
output = relay.Tuple([call_6815,])
output2 = relay.Tuple([call_6816,])
func_6819 = relay.Function([], output)
mod['func_6819'] = func_6819
mod = relay.transform.InferType()(mod)
output = func_6819()
func_6820 = relay.Function([], output)
mutated_mod['func_6820'] = func_6820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5990_call = mod.get_global_var('func_5990')
func_5991_call = mutated_mod.get_global_var('func_5991')
call_6821 = relay.TupleGetItem(func_5990_call(), 0)
call_6822 = relay.TupleGetItem(func_5991_call(), 0)
output = call_6821
output2 = call_6822
func_6832 = relay.Function([], output)
mod['func_6832'] = func_6832
mod = relay.transform.InferType()(mod)
mutated_mod['func_6832'] = func_6832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6832_call = mutated_mod.get_global_var('func_6832')
call_6833 = func_6832_call()
output = call_6833
func_6834 = relay.Function([], output)
mutated_mod['func_6834'] = func_6834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3438_call = mod.get_global_var('func_3438')
func_3439_call = mutated_mod.get_global_var('func_3439')
call_6844 = func_3438_call()
call_6845 = func_3438_call()
output = relay.Tuple([call_6844,])
output2 = relay.Tuple([call_6845,])
func_6852 = relay.Function([], output)
mod['func_6852'] = func_6852
mod = relay.transform.InferType()(mod)
output = func_6852()
func_6853 = relay.Function([], output)
mutated_mod['func_6853'] = func_6853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_6893 = func_1577_call()
call_6894 = func_1577_call()
output = call_6893
output2 = call_6894
func_6898 = relay.Function([], output)
mod['func_6898'] = func_6898
mod = relay.transform.InferType()(mod)
mutated_mod['func_6898'] = func_6898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6898_call = mutated_mod.get_global_var('func_6898')
call_6899 = func_6898_call()
output = call_6899
func_6900 = relay.Function([], output)
mutated_mod['func_6900'] = func_6900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6917 = relay.var("var_6917", dtype = "int64", shape = (2, 6, 13))#candidate|6917|(2, 6, 13)|var|int64
var_6918 = relay.var("var_6918", dtype = "int64", shape = (2, 6, 13))#candidate|6918|(2, 6, 13)|var|int64
bop_6919 = relay.bitwise_and(var_6917.astype('int64'), relay.reshape(var_6918.astype('int64'), relay.shape_of(var_6917))) # shape=(2, 6, 13)
output = bop_6919
output2 = bop_6919
func_6924 = relay.Function([var_6917,var_6918,], output)
mod['func_6924'] = func_6924
mod = relay.transform.InferType()(mod)
var_6925 = relay.var("var_6925", dtype = "int64", shape = (2, 6, 13))#candidate|6925|(2, 6, 13)|var|int64
var_6926 = relay.var("var_6926", dtype = "int64", shape = (2, 6, 13))#candidate|6926|(2, 6, 13)|var|int64
output = func_6924(var_6925,var_6926,)
func_6927 = relay.Function([var_6925,var_6926,], output)
mutated_mod['func_6927'] = func_6927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1756_call = mod.get_global_var('func_1756')
func_1757_call = mutated_mod.get_global_var('func_1757')
call_6962 = relay.TupleGetItem(func_1756_call(), 0)
call_6963 = relay.TupleGetItem(func_1757_call(), 0)
output = call_6962
output2 = call_6963
func_6979 = relay.Function([], output)
mod['func_6979'] = func_6979
mod = relay.transform.InferType()(mod)
mutated_mod['func_6979'] = func_6979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6979_call = mutated_mod.get_global_var('func_6979')
call_6980 = func_6979_call()
output = call_6980
func_6981 = relay.Function([], output)
mutated_mod['func_6981'] = func_6981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5335_call = mod.get_global_var('func_5335')
func_5336_call = mutated_mod.get_global_var('func_5336')
call_6988 = relay.TupleGetItem(func_5335_call(), 1)
call_6989 = relay.TupleGetItem(func_5336_call(), 1)
func_5215_call = mod.get_global_var('func_5215')
func_5223_call = mutated_mod.get_global_var('func_5223')
var_7026 = relay.var("var_7026", dtype = "uint8", shape = (240,))#candidate|7026|(240,)|var|uint8
var_7027 = relay.var("var_7027", dtype = "int8", shape = (432,))#candidate|7027|(432,)|var|int8
var_7028 = relay.var("var_7028", dtype = "float32", shape = (126,))#candidate|7028|(126,)|var|float32
const_7029 = relay.const([7.499427,-4.699855,-8.823081,-2.576948,-7.565833,-2.653076,8.172953,-5.160385,4.526077,-7.513243,1.417514,-6.277643], dtype = "float64")#candidate|7029|(12,)|const|float64
const_7030 = relay.const([2.073673,-3.928808,5.072532,-7.590099,3.972697,-7.549813,9.883264,9.480650,0.478311,-7.183915,2.267836,-2.039440,2.034244,-8.430651,1.040286,-7.846580,-4.145668,8.096380,7.836312,-2.125762], dtype = "float32")#candidate|7030|(20,)|const|float32
var_7031 = relay.var("var_7031", dtype = "float64", shape = (2560,))#candidate|7031|(2560,)|var|float64
call_7025 = relay.TupleGetItem(func_5215_call(relay.reshape(var_7026.astype('uint8'), [12, 10, 2]), relay.reshape(var_7026.astype('uint8'), [12, 10, 2]), relay.reshape(var_7027.astype('int8'), [432,]), relay.reshape(var_7028.astype('float32'), [126,]), relay.reshape(const_7029.astype('float64'), [12,]), relay.reshape(const_7030.astype('float32'), [10, 2]), relay.reshape(var_7031.astype('float64'), [2560,]), ), 2)
call_7032 = relay.TupleGetItem(func_5223_call(relay.reshape(var_7026.astype('uint8'), [12, 10, 2]), relay.reshape(var_7026.astype('uint8'), [12, 10, 2]), relay.reshape(var_7027.astype('int8'), [432,]), relay.reshape(var_7028.astype('float32'), [126,]), relay.reshape(const_7029.astype('float64'), [12,]), relay.reshape(const_7030.astype('float32'), [10, 2]), relay.reshape(var_7031.astype('float64'), [2560,]), ), 2)
func_5099_call = mod.get_global_var('func_5099')
func_5102_call = mutated_mod.get_global_var('func_5102')
var_7036 = relay.var("var_7036", dtype = "float64", shape = (168,))#candidate|7036|(168,)|var|float64
call_7035 = relay.TupleGetItem(func_5099_call(relay.reshape(var_7036.astype('float64'), [2, 12, 7])), 1)
call_7037 = relay.TupleGetItem(func_5102_call(relay.reshape(var_7036.astype('float64'), [2, 12, 7])), 1)
output = relay.Tuple([call_6988,call_7025,var_7026,var_7027,var_7028,const_7029,const_7030,var_7031,call_7035,var_7036,])
output2 = relay.Tuple([call_6989,call_7032,var_7026,var_7027,var_7028,const_7029,const_7030,var_7031,call_7037,var_7036,])
func_7039 = relay.Function([var_7026,var_7027,var_7028,var_7031,var_7036,], output)
mod['func_7039'] = func_7039
mod = relay.transform.InferType()(mod)
var_7040 = relay.var("var_7040", dtype = "uint8", shape = (240,))#candidate|7040|(240,)|var|uint8
var_7041 = relay.var("var_7041", dtype = "int8", shape = (432,))#candidate|7041|(432,)|var|int8
var_7042 = relay.var("var_7042", dtype = "float32", shape = (126,))#candidate|7042|(126,)|var|float32
var_7043 = relay.var("var_7043", dtype = "float64", shape = (2560,))#candidate|7043|(2560,)|var|float64
var_7044 = relay.var("var_7044", dtype = "float64", shape = (168,))#candidate|7044|(168,)|var|float64
output = func_7039(var_7040,var_7041,var_7042,var_7043,var_7044,)
func_7045 = relay.Function([var_7040,var_7041,var_7042,var_7043,var_7044,], output)
mutated_mod['func_7045'] = func_7045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5855_call = mod.get_global_var('func_5855')
func_5856_call = mutated_mod.get_global_var('func_5856')
call_7131 = func_5855_call()
call_7132 = func_5855_call()
output = call_7131
output2 = call_7132
func_7168 = relay.Function([], output)
mod['func_7168'] = func_7168
mod = relay.transform.InferType()(mod)
output = func_7168()
func_7169 = relay.Function([], output)
mutated_mod['func_7169'] = func_7169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2255_call = mod.get_global_var('func_2255')
func_2256_call = mutated_mod.get_global_var('func_2256')
call_7175 = relay.TupleGetItem(func_2255_call(), 1)
call_7176 = relay.TupleGetItem(func_2256_call(), 1)
output = call_7175
output2 = call_7176
func_7193 = relay.Function([], output)
mod['func_7193'] = func_7193
mod = relay.transform.InferType()(mod)
output = func_7193()
func_7194 = relay.Function([], output)
mutated_mod['func_7194'] = func_7194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7209 = relay.var("var_7209", dtype = "float32", shape = (3, 15, 14))#candidate|7209|(3, 15, 14)|var|float32
uop_7210 = relay.acos(var_7209.astype('float32')) # shape=(3, 15, 14)
func_3438_call = mod.get_global_var('func_3438')
func_3439_call = mutated_mod.get_global_var('func_3439')
call_7218 = func_3438_call()
call_7219 = func_3438_call()
bop_7224 = relay.maximum(var_7209.astype('int64'), relay.reshape(uop_7210.astype('int64'), relay.shape_of(var_7209))) # shape=(3, 15, 14)
func_3937_call = mod.get_global_var('func_3937')
func_3939_call = mutated_mod.get_global_var('func_3939')
const_7247 = relay.const([-1.342779,1.680242,5.695829,-2.585949,-8.303091,-6.463593,8.354247,-4.582923,-0.902552,-0.697160,-5.208763,9.063646,6.626425,2.679378,9.268742,6.183665,2.235497,7.482855,4.622073,-2.696398,-1.521811,8.326955,6.197017,3.191194], dtype = "float32")#candidate|7247|(24,)|const|float32
call_7246 = func_3937_call(relay.reshape(const_7247.astype('float32'), [12, 2, 1]))
call_7248 = func_3937_call(relay.reshape(const_7247.astype('float32'), [12, 2, 1]))
output = relay.Tuple([call_7218,bop_7224,call_7246,const_7247,])
output2 = relay.Tuple([call_7219,bop_7224,call_7248,const_7247,])
func_7260 = relay.Function([var_7209,], output)
mod['func_7260'] = func_7260
mod = relay.transform.InferType()(mod)
var_7261 = relay.var("var_7261", dtype = "float32", shape = (3, 15, 14))#candidate|7261|(3, 15, 14)|var|float32
output = func_7260(var_7261)
func_7262 = relay.Function([var_7261], output)
mutated_mod['func_7262'] = func_7262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3400_call = mod.get_global_var('func_3400')
func_3402_call = mutated_mod.get_global_var('func_3402')
call_7264 = func_3400_call()
call_7265 = func_3400_call()
func_4316_call = mod.get_global_var('func_4316')
func_4318_call = mutated_mod.get_global_var('func_4318')
call_7277 = relay.TupleGetItem(func_4316_call(), 0)
call_7278 = relay.TupleGetItem(func_4318_call(), 0)
output = relay.Tuple([call_7264,call_7277,])
output2 = relay.Tuple([call_7265,call_7278,])
func_7281 = relay.Function([], output)
mod['func_7281'] = func_7281
mod = relay.transform.InferType()(mod)
mutated_mod['func_7281'] = func_7281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7281_call = mutated_mod.get_global_var('func_7281')
call_7282 = func_7281_call()
output = call_7282
func_7283 = relay.Function([], output)
mutated_mod['func_7283'] = func_7283
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7331 = relay.const([[[7.848339,-0.112955,-8.352442,9.417478,-1.323353,-3.535833,6.360345,-3.722431],[-9.732658,7.719925,-4.671732,5.148496,5.132324,-3.872890,-5.570459,7.874354],[0.400085,8.038492,-5.027986,-5.171040,0.598947,-0.975958,8.692891,2.600821],[-8.720913,-2.004123,-1.242621,5.619327,3.644913,4.114034,5.003370,2.716544],[4.092256,8.009574,-8.965082,-8.173249,-4.522491,-3.964650,7.991445,-6.998861],[-3.532285,9.272329,-1.828395,-6.761458,-2.351964,3.085161,-3.513788,-4.691467],[8.209350,8.297015,-4.449985,-2.645242,-7.581518,-3.416520,-9.883259,-5.868928],[6.461479,-2.540634,-2.442201,6.643220,-4.641416,5.829741,-3.422705,-2.104570],[6.942664,7.397601,5.785795,-8.174219,-5.121838,-6.739685,2.825329,8.923546],[-2.940897,2.235013,-0.453259,5.013352,3.285557,-8.607859,3.662407,-8.008154],[-2.995852,-0.697637,6.781958,-1.967969,4.512202,-2.599997,5.348911,1.084031],[5.447393,-6.046314,5.756590,4.414003,-1.911931,-7.704861,-1.607971,-8.820411],[-4.234162,0.946597,-7.675326,6.157027,-4.515444,-9.694206,1.961380,1.149854],[-4.312582,7.709614,4.457300,1.482298,-3.201772,8.200501,-6.234971,1.293911],[-1.633906,-5.753073,-1.562258,-5.819503,0.425416,-2.520311,-5.168385,-0.056795],[-9.740411,7.524196,-7.071396,1.630334,-2.367431,2.028140,5.952471,-8.539384]],[[8.401499,-1.057615,-6.376378,-2.850092,6.074641,9.672332,-7.329456,4.931370],[1.012759,6.680445,2.700650,-5.059472,8.669016,-7.171423,-6.126596,5.855996],[7.757850,-4.384477,-3.827972,8.211667,8.513173,-5.502670,-6.866415,-6.816785],[-3.033456,3.437030,7.357342,9.883213,-0.677461,6.491188,-8.949202,-6.653313],[-7.277117,-3.993655,-6.081550,-1.484410,-0.515597,4.715942,-7.510860,-2.447219],[5.125446,-8.387570,9.346780,-5.786528,8.130956,-7.408492,-9.114646,5.645504],[6.928485,4.993691,-2.855795,-5.018222,-9.496995,5.848910,6.129993,1.007064],[-6.469629,8.510142,-2.341167,9.078157,9.814049,5.840558,-5.896444,-6.147965],[-3.908766,1.032489,-0.139822,7.575671,-7.240021,4.360218,-9.854634,-7.177368],[1.326933,-5.339763,7.726225,0.045181,-4.091075,-8.496444,-4.186142,-1.513429],[3.399423,4.715697,1.493502,-5.824830,6.658534,-2.386139,5.596782,-0.990640],[-6.685837,-6.594941,-9.342018,9.448845,-4.506672,-9.513030,-1.245869,-1.565702],[-3.573246,8.901593,-4.021653,8.975952,-8.815721,-0.885301,7.284834,-5.546923],[7.076703,0.854852,-3.338370,-1.399957,7.721947,1.300219,-1.576305,0.249582],[7.838305,-8.124546,-7.338015,-4.685470,6.983233,-8.348950,1.524243,0.227407],[8.818528,4.670542,9.056968,6.779591,-7.940181,-2.535294,-6.133840,2.654367]],[[7.485020,9.148256,-9.373746,-0.559355,-0.357922,-8.257615,9.304620,7.284892],[-5.450447,-6.616769,-5.747363,-0.520082,8.382548,0.488403,-1.701509,3.114731],[0.804220,-5.414568,-0.059346,9.883009,0.144115,0.995693,4.794829,-3.930735],[0.310927,5.470211,-8.017835,-1.570775,4.584464,9.537330,-6.240579,3.358793],[0.755657,8.450362,-5.746312,2.746504,-1.448847,-0.730331,2.731407,-3.620023],[2.949876,-1.084679,1.395186,0.330119,4.139224,4.681053,-6.783991,5.906212],[-9.855293,6.937553,2.157697,-4.243482,8.547608,-2.365110,4.590153,7.968740],[-1.381128,-4.423531,-6.909681,-5.758328,-5.377256,-9.159718,-7.198762,4.861171],[-3.803677,3.114156,8.682115,-2.148125,-6.943477,4.562925,8.332355,8.935797],[-3.560619,2.064970,8.714341,-0.746351,6.627420,-4.327385,-3.667637,-9.250633],[7.201029,2.752486,-1.969344,2.135642,-4.039569,-7.370627,-8.820147,9.409931],[-9.500805,1.668877,1.660814,2.770621,-7.219526,-6.610181,6.526908,-3.364847],[8.756263,5.180697,4.344264,-4.922006,1.821343,7.646029,-5.006762,6.598717],[7.139373,6.056056,-1.939709,-9.494954,-4.609788,-4.131371,8.037191,-4.046450],[-2.901655,-2.905122,1.960288,3.204009,-2.302604,-3.457604,5.663355,2.552890],[-0.024605,5.761668,9.137481,-9.475155,3.818854,-1.518396,8.569862,8.189112]],[[-0.705880,3.229212,-7.740885,3.772106,4.496648,-6.104793,8.503883,5.972435],[-7.843318,-5.556450,-7.584489,3.611773,0.350610,9.412052,6.600523,-0.100940],[-1.732586,8.881361,-9.459728,5.135215,-1.018768,3.966684,2.687335,5.073749],[9.481967,-8.700822,-2.149456,8.629989,7.505205,-8.450804,0.890166,-3.609718],[-6.100433,7.668104,-9.663551,-6.097847,-8.671101,-7.602249,2.363775,4.771987],[-0.441660,-5.447800,0.978874,-3.053215,-6.553778,7.252168,-1.480186,-3.606770],[8.590360,7.019867,-0.241483,-8.960541,9.870712,8.441298,4.064237,-6.833068],[-0.188676,-6.400315,-8.504495,-1.839877,-6.706357,6.979039,0.155480,7.730357],[7.041693,4.102936,9.832756,-5.845879,-3.803257,6.320622,-6.134759,4.329811],[-7.514197,-7.784565,9.514829,-8.181753,2.187021,-2.543018,2.144290,0.479340],[-1.068008,-0.956414,1.015124,9.342568,-6.344906,8.564212,-1.775254,3.578019],[-2.536115,8.562919,-1.651822,6.679532,6.022703,2.266872,-1.374745,9.810474],[1.483181,-1.014201,-9.858009,-6.232522,-9.867949,0.288986,3.483674,6.543185],[6.707698,4.411002,-2.415836,7.775919,-8.860811,-3.236611,1.186298,4.909102],[-9.752546,6.697217,1.162081,2.749871,7.702651,-8.358758,-0.502189,3.397330],[6.799079,0.705219,2.940795,6.235258,7.569848,-8.541531,-5.702307,5.140096]]], dtype = "float32")#candidate|7331|(4, 16, 8)|const|float32
uop_7332 = relay.log10(const_7331.astype('float32')) # shape=(4, 16, 8)
output = uop_7332
output2 = uop_7332
func_7335 = relay.Function([], output)
mod['func_7335'] = func_7335
mod = relay.transform.InferType()(mod)
output = func_7335()
func_7336 = relay.Function([], output)
mutated_mod['func_7336'] = func_7336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5882_call = mod.get_global_var('func_5882')
func_5884_call = mutated_mod.get_global_var('func_5884')
call_7382 = func_5882_call()
call_7383 = func_5882_call()
func_6579_call = mod.get_global_var('func_6579')
func_6580_call = mutated_mod.get_global_var('func_6580')
call_7399 = func_6579_call()
call_7400 = func_6579_call()
func_6268_call = mod.get_global_var('func_6268')
func_6270_call = mutated_mod.get_global_var('func_6270')
const_7416 = relay.const([[4,9,10,-5,9,-8,-4,-10,-1,-3,-10,-7,5,-3,-5,-7,-4,-7,10,-3,-7,-8,5,7,-10,-8,1,3,5,4,10,-10,-8,9,9,8,4,-9,5,5,-4,6,-10,-3,7,-4,-9,-1,1,4,3,-6,-10,-6,-10,-10,5,10,-5,10,-10,-8,1,3,-7,-2,1,-7,-4,5,7,-10,1,10,3,-5,6,-10,-1,9,-4,-2,2,7,4,1,7,-6,1,4,7,7,-3,10,-1,-5,1,-9,7,-8,8,-4,1,3,5,-4,-9,6,7,9,5,1,1,9,-6,3,-6,-8,7,9,-1,6,5,1,10,-9,3,-2,-2,4,-10,1],[-4,-5,2,-4,-6,-2,-2,4,-4,8,-5,-2,1,-6,-5,-7,7,1,-5,-2,-5,3,-9,1,1,9,-8,-4,10,-10,-8,5,8,-5,-1,5,3,-3,-6,-6,-2,3,-9,-10,9,-6,-6,4,-9,8,-10,-3,-2,5,-1,-5,7,4,4,-5,-4,4,3,6,9,-1,-7,-1,-1,7,9,-6,9,-4,-3,-8,1,-9,-9,6,6,-6,2,-2,-8,-6,2,-5,1,5,-8,5,6,4,6,5,7,-7,-1,-1,-1,-5,-8,-3,10,7,1,-5,-5,-2,9,4,-1,3,3,10,-1,-6,-7,-10,-9,5,8,-8,-9,3,-10,-1,2,-2,10,-9],[-8,1,-8,-2,-9,-6,7,9,6,3,1,-4,2,7,7,4,-5,-1,-10,-9,-10,-6,-10,-4,-9,10,-4,4,-10,7,-7,3,8,6,-6,6,1,-6,9,7,8,-1,-2,8,3,9,8,5,-5,5,3,1,5,7,7,5,1,-8,8,7,1,5,-10,-7,-9,-8,6,-8,-7,7,9,9,-8,5,3,9,-9,-3,-5,6,5,-6,-5,1,1,6,-2,10,-4,-5,-6,-8,1,6,4,-7,7,-9,10,-4,10,1,-7,-1,5,-5,-2,-7,-8,8,4,2,-1,-4,1,-3,10,-2,-6,-9,8,-1,-8,-5,1,10,-1,7,-3,4,-10,4],[5,-8,-10,-2,-10,-1,1,-7,-1,10,-1,-5,-9,-8,-10,-1,-10,-3,-6,9,8,-6,-9,-3,-4,-4,9,7,10,7,10,2,6,2,-10,10,4,7,1,-6,1,9,-1,8,-4,1,4,7,9,-4,2,-9,1,10,5,8,5,-8,6,6,-4,5,10,-9,-1,2,-8,10,6,-1,5,9,-7,-4,4,2,-9,-5,8,2,7,-5,-4,4,4,-10,-7,8,-5,-6,4,-4,-4,6,3,3,1,-4,-10,4,6,-2,-3,4,5,-7,-7,-4,10,-2,7,2,1,2,6,7,7,2,2,-8,-5,5,-5,-2,-8,-1,-8,-2,1,-2,9,-9],[-1,-6,7,9,10,4,1,-2,10,6,8,-9,-2,-6,-2,-7,5,7,1,6,8,-7,-7,9,-4,-5,3,-9,-7,-7,-9,-4,-2,-8,5,-2,-3,-1,8,8,-7,2,9,6,-8,4,9,-4,9,4,6,-8,-5,-1,-10,-4,-4,-6,8,8,7,5,-2,-9,-1,-6,6,-7,-4,3,9,-1,-4,5,-1,9,-7,-5,3,1,-4,-4,2,3,-10,-7,4,2,-7,9,2,-7,10,7,4,1,6,10,7,-1,10,7,-10,-9,8,6,-5,6,-2,1,2,6,7,3,1,-10,3,-4,-6,9,-2,1,-7,3,1,-9,-5,-8,-3,4,-6,7]], dtype = "int64")#candidate|7416|(5, 132)|const|int64
call_7415 = relay.TupleGetItem(func_6268_call(relay.reshape(const_7416.astype('int64'), [660,])), 3)
call_7417 = relay.TupleGetItem(func_6270_call(relay.reshape(const_7416.astype('int64'), [660,])), 3)
func_748_call = mod.get_global_var('func_748')
func_752_call = mutated_mod.get_global_var('func_752')
var_7425 = relay.var("var_7425", dtype = "float64", shape = (4, 420))#candidate|7425|(4, 420)|var|float64
call_7424 = relay.TupleGetItem(func_748_call(relay.reshape(var_7425.astype('float64'), [7, 16, 15]), relay.reshape(call_7382.astype('float64'), [336,]), ), 0)
call_7426 = relay.TupleGetItem(func_752_call(relay.reshape(var_7425.astype('float64'), [7, 16, 15]), relay.reshape(call_7382.astype('float64'), [336,]), ), 0)
output = relay.Tuple([call_7382,call_7399,call_7415,const_7416,call_7424,var_7425,])
output2 = relay.Tuple([call_7383,call_7400,call_7417,const_7416,call_7426,var_7425,])
func_7436 = relay.Function([var_7425,], output)
mod['func_7436'] = func_7436
mod = relay.transform.InferType()(mod)
mutated_mod['func_7436'] = func_7436
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7437 = relay.var("var_7437", dtype = "float64", shape = (4, 420))#candidate|7437|(4, 420)|var|float64
func_7436_call = mutated_mod.get_global_var('func_7436')
call_7438 = func_7436_call(var_7437)
output = call_7438
func_7439 = relay.Function([var_7437], output)
mutated_mod['func_7439'] = func_7439
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7493 = relay.const([[[True,True,False,False,False,False],[True,False,True,False,True,False],[True,False,False,True,False,False],[True,False,False,True,True,False],[True,False,True,True,False,False],[True,True,True,True,True,True],[True,False,True,True,False,True],[True,True,True,True,True,False],[True,False,False,False,True,False],[False,True,False,True,False,False],[True,True,True,True,True,False],[False,False,False,False,True,False],[True,True,False,False,False,True],[False,False,True,True,False,True],[True,False,False,True,True,False],[False,False,True,True,True,False]],[[False,False,True,False,False,False],[True,True,True,True,True,False],[False,False,False,True,True,False],[False,False,False,False,True,True],[False,True,True,False,True,True],[False,True,True,True,True,True],[False,False,False,True,True,True],[True,True,True,True,True,False],[True,True,False,True,False,False],[False,False,True,False,False,False],[True,True,True,False,False,True],[True,False,True,True,False,True],[False,True,False,False,True,True],[False,False,True,True,False,True],[True,False,True,False,False,False],[True,True,True,False,True,True]],[[True,False,False,True,True,False],[False,False,True,False,False,False],[False,False,True,True,True,True],[False,False,True,True,True,False],[True,False,True,False,False,True],[False,False,True,False,True,True],[False,True,True,True,True,True],[False,True,True,True,False,True],[False,False,True,True,False,False],[True,True,False,True,False,True],[False,False,True,True,False,False],[False,False,True,True,True,False],[False,True,False,False,False,False],[True,False,True,False,False,True],[True,True,False,True,False,False],[False,False,False,True,False,False]],[[True,False,False,False,False,False],[True,False,True,True,False,False],[True,True,False,False,False,False],[True,True,False,False,False,False],[False,True,True,True,False,True],[True,False,True,False,False,True],[False,True,False,True,False,False],[True,False,False,False,False,False],[False,False,True,False,False,True],[True,False,False,False,True,True],[True,True,True,False,True,True],[False,True,True,False,False,True],[False,False,True,False,False,False],[False,False,False,True,True,False],[True,False,False,True,False,False],[False,True,True,True,True,False]],[[True,True,True,False,True,True],[True,False,True,True,False,True],[True,True,False,True,False,True],[True,True,True,True,True,True],[True,True,False,False,True,True],[False,False,True,True,False,False],[True,True,False,False,False,True],[False,True,False,False,False,False],[True,True,False,False,True,True],[True,False,False,True,True,True],[False,True,True,True,True,True],[False,False,True,False,False,True],[True,False,True,True,False,True],[False,True,True,False,True,False],[True,False,False,True,True,True],[True,False,True,False,True,False]],[[False,True,False,True,False,False],[False,True,True,True,True,True],[True,True,True,False,True,False],[False,False,True,False,True,False],[False,False,False,True,True,False],[True,True,True,True,False,True],[True,False,True,False,False,False],[False,True,True,True,True,False],[True,True,False,False,True,True],[True,True,False,True,False,True],[True,True,False,True,False,False],[False,False,False,True,False,False],[True,False,True,False,True,False],[False,True,True,False,True,True],[False,False,False,False,False,True],[True,True,False,True,False,True]],[[True,True,True,True,False,True],[False,False,False,True,False,True],[False,True,False,True,True,False],[False,True,False,True,True,False],[False,False,False,False,True,False],[True,False,True,False,False,False],[False,False,False,False,True,False],[True,True,True,False,True,True],[False,True,False,False,False,False],[True,False,False,True,True,False],[True,False,False,True,True,False],[True,True,False,True,True,False],[True,False,True,True,False,False],[False,False,False,False,True,False],[False,False,True,True,True,False],[True,False,False,True,True,True]],[[False,False,False,False,True,True],[False,True,False,False,False,False],[False,False,True,False,False,False],[True,True,False,False,False,True],[False,True,True,False,False,True],[False,False,True,False,True,True],[False,True,False,False,True,False],[False,False,False,True,False,False],[True,True,True,True,True,True],[False,True,False,False,False,True],[True,False,True,False,False,False],[True,False,False,True,False,True],[True,True,True,True,False,False],[False,False,True,True,True,True],[True,False,False,True,False,False],[False,True,False,False,True,True]],[[False,True,True,False,False,False],[False,False,True,True,True,True],[True,True,True,True,True,True],[False,False,True,False,True,True],[True,False,False,True,False,True],[False,False,False,False,True,True],[False,True,True,True,False,False],[False,False,False,False,True,True],[True,True,True,False,True,False],[True,False,False,True,False,False],[False,False,True,True,False,False],[False,False,True,True,True,True],[True,False,True,True,False,False],[False,True,True,True,True,True],[False,False,True,False,True,True],[True,True,False,False,False,False]],[[False,False,True,True,True,False],[False,True,False,False,False,False],[False,True,True,False,False,False],[True,False,False,False,True,True],[False,False,True,False,False,True],[False,False,False,True,True,True],[False,True,False,False,True,True],[True,False,False,False,False,False],[True,True,True,True,True,False],[True,True,False,False,True,False],[True,False,False,True,True,True],[True,True,False,True,False,False],[False,True,False,False,True,False],[True,False,True,False,False,False],[False,True,False,False,True,True],[False,False,True,False,False,True]],[[True,True,False,True,False,False],[True,True,True,True,True,True],[True,False,True,False,False,True],[True,False,False,True,False,True],[False,False,False,False,False,False],[True,True,True,True,True,True],[False,False,False,True,False,False],[False,True,False,False,False,True],[True,True,True,False,False,False],[True,False,False,True,False,True],[True,True,False,False,True,True],[False,True,False,False,False,False],[False,True,True,True,True,True],[False,False,False,True,False,False],[True,False,True,False,True,True],[True,True,True,True,True,False]],[[True,True,True,True,False,True],[True,False,False,False,True,True],[False,True,False,False,True,False],[True,False,False,False,False,False],[True,True,True,False,True,False],[False,False,False,True,True,False],[True,False,False,True,False,False],[True,False,True,True,True,False],[True,False,True,False,False,True],[False,True,True,True,False,False],[True,False,False,True,False,True],[True,True,True,False,False,True],[False,True,False,True,False,True],[False,False,True,True,False,True],[False,False,False,True,True,False],[True,False,True,True,False,True]]], dtype = "bool")#candidate|7493|(12, 16, 6)|const|bool
const_7494 = relay.const([[[True,False,True,True,False,True],[True,False,True,True,False,False],[True,False,True,False,False,False],[False,False,False,False,True,True],[True,False,False,True,False,True],[True,True,True,True,True,True],[False,False,True,True,True,False],[True,False,False,False,False,True],[False,True,True,False,True,True],[True,False,True,True,True,True],[False,True,False,True,False,True],[True,False,False,False,True,True],[False,False,False,True,False,False],[False,False,True,True,False,False],[False,False,True,True,True,False],[False,False,True,True,True,True]],[[False,False,True,False,True,False],[False,True,False,False,False,False],[False,False,False,False,False,True],[False,False,True,True,False,False],[False,False,False,True,True,False],[True,False,False,False,False,True],[True,False,True,True,False,True],[False,True,False,False,True,False],[True,True,False,False,True,False],[True,True,True,True,False,False],[True,True,False,False,False,True],[True,True,True,False,False,False],[False,False,True,False,True,False],[False,False,True,False,True,False],[True,False,True,False,True,False],[False,True,True,True,True,True]],[[False,False,False,True,True,True],[True,True,True,False,True,False],[False,True,True,False,True,False],[False,False,False,False,False,True],[False,True,False,True,False,True],[True,False,False,True,True,True],[False,True,False,False,True,True],[False,False,False,True,False,True],[True,False,False,True,False,False],[True,False,True,True,False,True],[True,True,True,True,False,True],[False,True,False,False,True,True],[True,True,True,True,True,True],[False,False,False,False,False,False],[True,True,True,False,False,True],[False,True,False,True,False,False]],[[False,False,True,False,False,False],[False,True,False,True,False,True],[True,True,True,True,True,True],[True,False,False,False,True,True],[True,True,False,True,False,True],[False,True,True,True,True,False],[False,True,True,False,True,False],[True,False,True,False,True,False],[False,False,True,False,True,False],[True,False,True,False,False,True],[True,False,False,False,True,False],[False,True,True,False,True,False],[False,False,False,True,True,True],[True,True,False,False,True,True],[False,True,True,True,True,True],[True,False,True,True,False,True]],[[True,True,False,True,True,False],[True,True,False,False,False,True],[True,True,False,True,False,False],[False,False,True,False,False,False],[True,True,False,True,False,False],[False,False,True,False,True,False],[False,False,True,True,False,True],[False,False,True,True,True,True],[True,False,True,False,False,True],[False,True,False,False,False,True],[False,False,True,False,True,False],[False,True,False,False,False,True],[True,True,True,False,False,False],[True,True,False,True,True,False],[False,True,False,True,True,False],[False,True,True,True,True,False]],[[True,False,True,True,False,False],[False,True,True,True,False,True],[False,True,False,False,False,True],[True,True,False,True,False,True],[True,False,False,False,True,False],[False,False,False,False,True,False],[False,False,True,True,True,True],[False,True,True,False,False,True],[True,True,False,True,False,False],[False,True,False,False,False,True],[False,False,True,False,False,True],[False,False,True,False,True,False],[True,True,False,False,True,False],[False,False,True,False,True,True],[True,True,False,True,False,False],[True,False,True,False,True,True]],[[True,True,False,False,True,True],[True,True,True,True,True,False],[True,True,True,False,False,False],[True,True,False,True,False,False],[False,True,False,True,False,True],[False,True,True,False,False,False],[False,True,True,True,False,True],[True,True,False,False,True,False],[True,False,True,True,True,False],[True,True,True,True,False,True],[True,True,True,False,True,True],[False,True,False,False,False,False],[True,False,True,True,False,False],[False,True,False,True,False,True],[True,True,True,True,True,True],[False,False,False,True,False,False]],[[False,False,True,False,False,False],[False,True,False,True,True,False],[True,True,False,True,False,False],[True,False,False,False,True,True],[True,True,True,False,True,True],[False,True,True,True,False,False],[True,False,True,True,False,False],[False,True,True,False,True,False],[False,False,False,False,False,True],[True,True,False,False,True,True],[True,True,True,True,True,True],[True,False,True,False,False,True],[True,False,True,False,False,False],[False,False,False,False,True,False],[True,False,True,False,True,True],[True,False,False,False,True,True]],[[True,False,False,True,True,False],[False,False,False,True,False,False],[True,True,False,True,True,True],[True,True,False,True,True,True],[False,False,True,False,True,True],[False,False,True,False,True,False],[False,False,False,False,True,True],[False,True,False,False,False,True],[False,False,False,False,True,True],[True,True,False,False,True,True],[True,True,True,True,True,True],[True,True,True,False,True,False],[True,True,True,True,False,False],[False,False,False,True,False,True],[False,True,False,False,True,True],[True,True,True,True,False,False]],[[False,True,False,True,True,True],[True,False,True,True,True,True],[True,False,True,True,True,True],[False,True,False,False,False,True],[True,True,False,False,False,False],[True,False,False,True,True,True],[False,True,False,True,False,True],[False,True,True,True,False,False],[False,False,False,False,False,False],[False,True,True,False,False,False],[True,True,False,True,False,False],[False,False,True,False,False,True],[False,False,False,True,False,False],[False,False,False,False,True,False],[False,True,True,True,True,True],[True,False,False,False,True,False]],[[False,False,True,True,False,True],[False,False,True,False,False,True],[False,False,False,False,False,True],[False,False,False,True,True,True],[True,True,False,True,True,True],[False,True,True,True,False,False],[False,False,False,True,False,False],[True,False,False,True,False,False],[False,False,False,False,True,False],[True,False,True,True,False,False],[True,False,True,False,True,True],[False,True,True,True,False,True],[True,True,True,False,False,True],[False,False,True,True,False,False],[True,False,True,False,True,True],[False,False,True,True,True,False]],[[False,True,True,True,False,True],[False,False,True,True,False,True],[False,False,False,True,True,False],[True,False,False,False,False,False],[True,False,False,False,True,True],[False,True,True,True,False,True],[True,False,True,False,True,True],[True,True,False,True,False,True],[False,False,False,False,False,False],[False,False,True,True,False,False],[False,True,False,True,False,False],[True,True,True,False,True,False],[False,True,False,False,False,False],[True,False,False,True,True,True],[False,True,True,True,False,True],[True,True,False,True,False,True]]], dtype = "bool")#candidate|7494|(12, 16, 6)|const|bool
bop_7495 = relay.logical_or(const_7493.astype('bool'), relay.reshape(const_7494.astype('bool'), relay.shape_of(const_7493))) # shape=(12, 16, 6)
output = relay.Tuple([bop_7495,])
output2 = relay.Tuple([bop_7495,])
func_7504 = relay.Function([], output)
mod['func_7504'] = func_7504
mod = relay.transform.InferType()(mod)
output = func_7504()
func_7505 = relay.Function([], output)
mutated_mod['func_7505'] = func_7505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5855_call = mod.get_global_var('func_5855')
func_5856_call = mutated_mod.get_global_var('func_5856')
call_7544 = func_5855_call()
call_7545 = func_5855_call()
output = call_7544
output2 = call_7545
func_7552 = relay.Function([], output)
mod['func_7552'] = func_7552
mod = relay.transform.InferType()(mod)
mutated_mod['func_7552'] = func_7552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7552_call = mutated_mod.get_global_var('func_7552')
call_7553 = func_7552_call()
output = call_7553
func_7554 = relay.Function([], output)
mutated_mod['func_7554'] = func_7554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7585 = relay.var("var_7585", dtype = "float64", shape = (10, 11, 15))#candidate|7585|(10, 11, 15)|var|float64
uop_7586 = relay.cosh(var_7585.astype('float64')) # shape=(10, 11, 15)
output = uop_7586
output2 = uop_7586
func_7589 = relay.Function([var_7585,], output)
mod['func_7589'] = func_7589
mod = relay.transform.InferType()(mod)
var_7590 = relay.var("var_7590", dtype = "float64", shape = (10, 11, 15))#candidate|7590|(10, 11, 15)|var|float64
output = func_7589(var_7590)
func_7591 = relay.Function([var_7590], output)
mutated_mod['func_7591'] = func_7591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3272_call = mod.get_global_var('func_3272')
func_3274_call = mutated_mod.get_global_var('func_3274')
call_7606 = relay.TupleGetItem(func_3272_call(), 0)
call_7607 = relay.TupleGetItem(func_3274_call(), 0)
var_7620 = relay.var("var_7620", dtype = "float32", shape = (4, 16, 15))#candidate|7620|(4, 16, 15)|var|float32
bop_7621 = relay.greater(call_7606.astype('bool'), relay.reshape(var_7620.astype('bool'), relay.shape_of(call_7606))) # shape=(4, 16, 15)
bop_7624 = relay.greater(call_7607.astype('bool'), relay.reshape(var_7620.astype('bool'), relay.shape_of(call_7607))) # shape=(4, 16, 15)
func_6579_call = mod.get_global_var('func_6579')
func_6580_call = mutated_mod.get_global_var('func_6580')
call_7625 = func_6579_call()
call_7626 = func_6579_call()
func_5813_call = mod.get_global_var('func_5813')
func_5815_call = mutated_mod.get_global_var('func_5815')
call_7628 = relay.TupleGetItem(func_5813_call(), 0)
call_7629 = relay.TupleGetItem(func_5815_call(), 0)
var_7630 = relay.var("var_7630", dtype = "float32", shape = (4, 16, 15))#candidate|7630|(4, 16, 15)|var|float32
bop_7631 = relay.multiply(call_7606.astype('int8'), relay.reshape(var_7630.astype('int8'), relay.shape_of(call_7606))) # shape=(4, 16, 15)
bop_7634 = relay.multiply(call_7607.astype('int8'), relay.reshape(var_7630.astype('int8'), relay.shape_of(call_7607))) # shape=(4, 16, 15)
func_5730_call = mod.get_global_var('func_5730')
func_5731_call = mutated_mod.get_global_var('func_5731')
call_7640 = relay.TupleGetItem(func_5730_call(), 0)
call_7641 = relay.TupleGetItem(func_5731_call(), 0)
output = relay.Tuple([bop_7621,call_7625,call_7628,bop_7631,call_7640,])
output2 = relay.Tuple([bop_7624,call_7626,call_7629,bop_7634,call_7641,])
func_7642 = relay.Function([var_7620,var_7630,], output)
mod['func_7642'] = func_7642
mod = relay.transform.InferType()(mod)
var_7643 = relay.var("var_7643", dtype = "float32", shape = (4, 16, 15))#candidate|7643|(4, 16, 15)|var|float32
var_7644 = relay.var("var_7644", dtype = "float32", shape = (4, 16, 15))#candidate|7644|(4, 16, 15)|var|float32
output = func_7642(var_7643,var_7644,)
func_7645 = relay.Function([var_7643,var_7644,], output)
mutated_mod['func_7645'] = func_7645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6481_call = mod.get_global_var('func_6481')
func_6482_call = mutated_mod.get_global_var('func_6482')
call_7713 = relay.TupleGetItem(func_6481_call(), 0)
call_7714 = relay.TupleGetItem(func_6482_call(), 0)
func_3783_call = mod.get_global_var('func_3783')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_7727 = relay.TupleGetItem(func_3783_call(), 0)
call_7728 = relay.TupleGetItem(func_3784_call(), 0)
output = relay.Tuple([call_7713,call_7727,])
output2 = relay.Tuple([call_7714,call_7728,])
func_7739 = relay.Function([], output)
mod['func_7739'] = func_7739
mod = relay.transform.InferType()(mod)
mutated_mod['func_7739'] = func_7739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7739_call = mutated_mod.get_global_var('func_7739')
call_7740 = func_7739_call()
output = call_7740
func_7741 = relay.Function([], output)
mutated_mod['func_7741'] = func_7741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6852_call = mod.get_global_var('func_6852')
func_6853_call = mutated_mod.get_global_var('func_6853')
call_7745 = relay.TupleGetItem(func_6852_call(), 0)
call_7746 = relay.TupleGetItem(func_6853_call(), 0)
output = call_7745
output2 = call_7746
func_7770 = relay.Function([], output)
mod['func_7770'] = func_7770
mod = relay.transform.InferType()(mod)
mutated_mod['func_7770'] = func_7770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7770_call = mutated_mod.get_global_var('func_7770')
call_7771 = func_7770_call()
output = call_7771
func_7772 = relay.Function([], output)
mutated_mod['func_7772'] = func_7772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7335_call = mod.get_global_var('func_7335')
func_7336_call = mutated_mod.get_global_var('func_7336')
call_7793 = func_7335_call()
call_7794 = func_7335_call()
func_6693_call = mod.get_global_var('func_6693')
func_6696_call = mutated_mod.get_global_var('func_6696')
var_7796 = relay.var("var_7796", dtype = "float32", shape = (2240,))#candidate|7796|(2240,)|var|float32
call_7795 = relay.TupleGetItem(func_6693_call(relay.reshape(var_7796.astype('float32'), [14, 16, 10])), 0)
call_7797 = relay.TupleGetItem(func_6696_call(relay.reshape(var_7796.astype('float32'), [14, 16, 10])), 0)
output = relay.Tuple([call_7793,call_7795,var_7796,])
output2 = relay.Tuple([call_7794,call_7797,var_7796,])
func_7804 = relay.Function([var_7796,], output)
mod['func_7804'] = func_7804
mod = relay.transform.InferType()(mod)
mutated_mod['func_7804'] = func_7804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7805 = relay.var("var_7805", dtype = "float32", shape = (2240,))#candidate|7805|(2240,)|var|float32
func_7804_call = mutated_mod.get_global_var('func_7804')
call_7806 = func_7804_call(var_7805)
output = call_7806
func_7807 = relay.Function([var_7805], output)
mutated_mod['func_7807'] = func_7807
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7861 = relay.var("var_7861", dtype = "float32", shape = (4, 7))#candidate|7861|(4, 7)|var|float32
uop_7862 = relay.log(var_7861.astype('float32')) # shape=(4, 7)
func_7804_call = mod.get_global_var('func_7804')
func_7807_call = mutated_mod.get_global_var('func_7807')
var_7882 = relay.var("var_7882", dtype = "float32", shape = (2240, 1))#candidate|7882|(2240, 1)|var|float32
call_7881 = relay.TupleGetItem(func_7804_call(relay.reshape(var_7882.astype('float32'), [2240,])), 0)
call_7883 = relay.TupleGetItem(func_7807_call(relay.reshape(var_7882.astype('float32'), [2240,])), 0)
output = relay.Tuple([uop_7862,call_7881,var_7882,])
output2 = relay.Tuple([uop_7862,call_7883,var_7882,])
func_7889 = relay.Function([var_7861,var_7882,], output)
mod['func_7889'] = func_7889
mod = relay.transform.InferType()(mod)
var_7890 = relay.var("var_7890", dtype = "float32", shape = (4, 7))#candidate|7890|(4, 7)|var|float32
var_7891 = relay.var("var_7891", dtype = "float32", shape = (2240, 1))#candidate|7891|(2240, 1)|var|float32
output = func_7889(var_7890,var_7891,)
func_7892 = relay.Function([var_7890,var_7891,], output)
mutated_mod['func_7892'] = func_7892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7770_call = mod.get_global_var('func_7770')
func_7772_call = mutated_mod.get_global_var('func_7772')
call_7894 = func_7770_call()
call_7895 = func_7770_call()
func_5028_call = mod.get_global_var('func_5028')
func_5033_call = mutated_mod.get_global_var('func_5033')
var_7914 = relay.var("var_7914", dtype = "float32", shape = (20,))#candidate|7914|(20,)|var|float32
var_7915 = relay.var("var_7915", dtype = "float32", shape = (960,))#candidate|7915|(960,)|var|float32
call_7913 = relay.TupleGetItem(func_5028_call(relay.reshape(var_7914.astype('float32'), [20,]), relay.reshape(var_7915.astype('float32'), [4, 16, 15]), relay.reshape(var_7915.astype('float32'), [4, 16, 15]), ), 5)
call_7916 = relay.TupleGetItem(func_5033_call(relay.reshape(var_7914.astype('float32'), [20,]), relay.reshape(var_7915.astype('float32'), [4, 16, 15]), relay.reshape(var_7915.astype('float32'), [4, 16, 15]), ), 5)
func_2411_call = mod.get_global_var('func_2411')
func_2412_call = mutated_mod.get_global_var('func_2412')
call_7917 = relay.TupleGetItem(func_2411_call(), 1)
call_7918 = relay.TupleGetItem(func_2412_call(), 1)
func_6852_call = mod.get_global_var('func_6852')
func_6853_call = mutated_mod.get_global_var('func_6853')
call_7924 = relay.TupleGetItem(func_6852_call(), 0)
call_7925 = relay.TupleGetItem(func_6853_call(), 0)
output = relay.Tuple([call_7894,call_7913,var_7914,var_7915,call_7917,call_7924,])
output2 = relay.Tuple([call_7895,call_7916,var_7914,var_7915,call_7918,call_7925,])
func_7954 = relay.Function([var_7914,var_7915,], output)
mod['func_7954'] = func_7954
mod = relay.transform.InferType()(mod)
var_7955 = relay.var("var_7955", dtype = "float32", shape = (20,))#candidate|7955|(20,)|var|float32
var_7956 = relay.var("var_7956", dtype = "float32", shape = (960,))#candidate|7956|(960,)|var|float32
output = func_7954(var_7955,var_7956,)
func_7957 = relay.Function([var_7955,var_7956,], output)
mutated_mod['func_7957'] = func_7957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5304_call = mod.get_global_var('func_5304')
func_5305_call = mutated_mod.get_global_var('func_5305')
call_7967 = relay.TupleGetItem(func_5304_call(), 3)
call_7968 = relay.TupleGetItem(func_5305_call(), 3)
func_5304_call = mod.get_global_var('func_5304')
func_5305_call = mutated_mod.get_global_var('func_5305')
call_7969 = relay.TupleGetItem(func_5304_call(), 0)
call_7970 = relay.TupleGetItem(func_5305_call(), 0)
func_6898_call = mod.get_global_var('func_6898')
func_6900_call = mutated_mod.get_global_var('func_6900')
call_7971 = func_6898_call()
call_7972 = func_6898_call()
output = relay.Tuple([call_7967,call_7969,call_7971,])
output2 = relay.Tuple([call_7968,call_7970,call_7972,])
func_7975 = relay.Function([], output)
mod['func_7975'] = func_7975
mod = relay.transform.InferType()(mod)
output = func_7975()
func_7976 = relay.Function([], output)
mutated_mod['func_7976'] = func_7976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7552_call = mod.get_global_var('func_7552')
func_7554_call = mutated_mod.get_global_var('func_7554')
call_8006 = func_7552_call()
call_8007 = func_7552_call()
output = relay.Tuple([call_8006,])
output2 = relay.Tuple([call_8007,])
func_8038 = relay.Function([], output)
mod['func_8038'] = func_8038
mod = relay.transform.InferType()(mod)
mutated_mod['func_8038'] = func_8038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8038_call = mutated_mod.get_global_var('func_8038')
call_8039 = func_8038_call()
output = call_8039
func_8040 = relay.Function([], output)
mutated_mod['func_8040'] = func_8040
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8043 = relay.var("var_8043", dtype = "bool", shape = (8, 11, 10))#candidate|8043|(8, 11, 10)|var|bool
var_8044 = relay.var("var_8044", dtype = "bool", shape = (8, 11, 10))#candidate|8044|(8, 11, 10)|var|bool
bop_8045 = relay.logical_and(var_8043.astype('bool'), relay.reshape(var_8044.astype('bool'), relay.shape_of(var_8043))) # shape=(8, 11, 10)
output = relay.Tuple([bop_8045,])
output2 = relay.Tuple([bop_8045,])
func_8051 = relay.Function([var_8043,var_8044,], output)
mod['func_8051'] = func_8051
mod = relay.transform.InferType()(mod)
var_8052 = relay.var("var_8052", dtype = "bool", shape = (8, 11, 10))#candidate|8052|(8, 11, 10)|var|bool
var_8053 = relay.var("var_8053", dtype = "bool", shape = (8, 11, 10))#candidate|8053|(8, 11, 10)|var|bool
output = func_8051(var_8052,var_8053,)
func_8054 = relay.Function([var_8052,var_8053,], output)
mutated_mod['func_8054'] = func_8054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6832_call = mod.get_global_var('func_6832')
func_6834_call = mutated_mod.get_global_var('func_6834')
call_8152 = func_6832_call()
call_8153 = func_6832_call()
output = relay.Tuple([call_8152,])
output2 = relay.Tuple([call_8153,])
func_8158 = relay.Function([], output)
mod['func_8158'] = func_8158
mod = relay.transform.InferType()(mod)
mutated_mod['func_8158'] = func_8158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8158_call = mutated_mod.get_global_var('func_8158')
call_8159 = func_8158_call()
output = call_8159
func_8160 = relay.Function([], output)
mutated_mod['func_8160'] = func_8160
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8173 = relay.const([[[-7],[-2],[-10],[9],[8],[8],[-5],[9],[10],[2],[1],[3]],[[4],[-10],[-4],[7],[-5],[2],[8],[9],[-7],[1],[5],[-10]],[[6],[-10],[-9],[-6],[3],[-10],[-7],[8],[-7],[-7],[4],[-10]]], dtype = "int64")#candidate|8173|(3, 12, 1)|const|int64
var_8174 = relay.var("var_8174", dtype = "int64", shape = (3, 12, 2))#candidate|8174|(3, 12, 2)|var|int64
bop_8175 = relay.left_shift(const_8173.astype('int64'), var_8174.astype('int64')) # shape=(3, 12, 2)
output = relay.Tuple([bop_8175,])
output2 = relay.Tuple([bop_8175,])
func_8179 = relay.Function([var_8174,], output)
mod['func_8179'] = func_8179
mod = relay.transform.InferType()(mod)
mutated_mod['func_8179'] = func_8179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8180 = relay.var("var_8180", dtype = "int64", shape = (3, 12, 2))#candidate|8180|(3, 12, 2)|var|int64
func_8179_call = mutated_mod.get_global_var('func_8179')
call_8181 = func_8179_call(var_8180)
output = call_8181
func_8182 = relay.Function([var_8180], output)
mutated_mod['func_8182'] = func_8182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3272_call = mod.get_global_var('func_3272')
func_3274_call = mutated_mod.get_global_var('func_3274')
call_8264 = relay.TupleGetItem(func_3272_call(), 0)
call_8265 = relay.TupleGetItem(func_3274_call(), 0)
func_3400_call = mod.get_global_var('func_3400')
func_3402_call = mutated_mod.get_global_var('func_3402')
call_8283 = func_3400_call()
call_8284 = func_3400_call()
func_6924_call = mod.get_global_var('func_6924')
func_6927_call = mutated_mod.get_global_var('func_6927')
var_8291 = relay.var("var_8291", dtype = "int64", shape = (156,))#candidate|8291|(156,)|var|int64
call_8290 = func_6924_call(relay.reshape(var_8291.astype('int64'), [2, 6, 13]), relay.reshape(var_8291.astype('int64'), [2, 6, 13]), )
call_8292 = func_6924_call(relay.reshape(var_8291.astype('int64'), [2, 6, 13]), relay.reshape(var_8291.astype('int64'), [2, 6, 13]), )
func_1411_call = mod.get_global_var('func_1411')
func_1415_call = mutated_mod.get_global_var('func_1415')
var_8323 = relay.var("var_8323", dtype = "int64", shape = (660,))#candidate|8323|(660,)|var|int64
call_8322 = func_1411_call(relay.reshape(var_8323.astype('int64'), [12, 5, 11]), relay.reshape(var_8323.astype('int64'), [12, 5, 11]), )
call_8324 = func_1411_call(relay.reshape(var_8323.astype('int64'), [12, 5, 11]), relay.reshape(var_8323.astype('int64'), [12, 5, 11]), )
func_7260_call = mod.get_global_var('func_7260')
func_7262_call = mutated_mod.get_global_var('func_7262')
var_8347 = relay.var("var_8347", dtype = "float32", shape = (1, 630))#candidate|8347|(1, 630)|var|float32
call_8346 = relay.TupleGetItem(func_7260_call(relay.reshape(var_8347.astype('float32'), [3, 15, 14])), 0)
call_8348 = relay.TupleGetItem(func_7262_call(relay.reshape(var_8347.astype('float32'), [3, 15, 14])), 0)
bop_8359 = relay.power(call_8322.astype('float32'), relay.reshape(var_8323.astype('float32'), relay.shape_of(call_8322))) # shape=(12, 5, 11)
bop_8362 = relay.power(call_8324.astype('float32'), relay.reshape(var_8323.astype('float32'), relay.shape_of(call_8324))) # shape=(12, 5, 11)
uop_8376 = relay.sinh(var_8323.astype('float32')) # shape=(660,)
func_8038_call = mod.get_global_var('func_8038')
func_8040_call = mutated_mod.get_global_var('func_8040')
call_8381 = relay.TupleGetItem(func_8038_call(), 0)
call_8382 = relay.TupleGetItem(func_8040_call(), 0)
func_3272_call = mod.get_global_var('func_3272')
func_3274_call = mutated_mod.get_global_var('func_3274')
call_8388 = relay.TupleGetItem(func_3272_call(), 0)
call_8389 = relay.TupleGetItem(func_3274_call(), 0)
output = relay.Tuple([call_8264,call_8283,call_8290,var_8291,call_8346,var_8347,bop_8359,uop_8376,call_8381,call_8388,])
output2 = relay.Tuple([call_8265,call_8284,call_8292,var_8291,call_8348,var_8347,bop_8362,uop_8376,call_8382,call_8389,])
func_8396 = relay.Function([var_8291,var_8323,var_8347,], output)
mod['func_8396'] = func_8396
mod = relay.transform.InferType()(mod)
mutated_mod['func_8396'] = func_8396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8396_call = mutated_mod.get_global_var('func_8396')
var_8398 = relay.var("var_8398", dtype = "int64", shape = (156,))#candidate|8398|(156,)|var|int64
var_8399 = relay.var("var_8399", dtype = "int64", shape = (660,))#candidate|8399|(660,)|var|int64
var_8400 = relay.var("var_8400", dtype = "float32", shape = (1, 630))#candidate|8400|(1, 630)|var|float32
call_8397 = func_8396_call(var_8398,var_8399,var_8400,)
output = call_8397
func_8401 = relay.Function([var_8398,var_8399,var_8400,], output)
mutated_mod['func_8401'] = func_8401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5813_call = mod.get_global_var('func_5813')
func_5815_call = mutated_mod.get_global_var('func_5815')
call_8408 = relay.TupleGetItem(func_5813_call(), 3)
call_8409 = relay.TupleGetItem(func_5815_call(), 3)
func_5412_call = mod.get_global_var('func_5412')
func_5417_call = mutated_mod.get_global_var('func_5417')
const_8417 = relay.const([3.872618,2.601855,5.282808,-1.837833,8.133513,-4.231669,5.535700,-0.396741,2.758388,-3.974621,6.431096,8.551546,-6.730741,-7.361454,5.950894,-2.730763,8.402368,1.080155,7.068636,2.639039,-1.857998,6.880959,-0.330471,4.395676,6.099324,-5.566363,0.990030,-8.594161,9.297312,6.285204,-0.191454,0.314288,-8.328137,-1.686428,-2.149207,-2.699110,6.088025,-6.173399,4.391163,4.869391,-4.310833,2.851267,8.325931,7.060914,9.109260,4.889182,5.759570,3.180318,-0.245311,6.193261,0.893015,5.617016,-2.978772,9.212261,-9.104783,-9.634229,-0.381322,-4.617325,6.772963,-8.718030,-9.909015,-7.093677,-4.511526,1.646535,-1.512176,2.513336,-4.371179,-7.858509,6.898103,-7.325087,4.436588,-4.027905,4.653895,7.358947,-2.684600,9.269439,-3.454770,-5.731321,9.701592,7.511578,9.990807,-9.002919,2.902554,-9.151072,-0.006676,-2.497040,9.722319,1.413241,7.593050,9.461014], dtype = "float32")#candidate|8417|(90,)|const|float32
const_8418 = relay.const([-8.116294,-2.827021,9.483920,9.194222,7.601509,6.343378,8.727487,4.537233,-8.586350,6.480218,-9.630704,-8.828294,2.437473,3.947183,-1.538456,-3.581769,2.481504,2.990241,-4.000541,0.502643,-2.991547,0.868841,-6.678474,2.427793,-2.433762,-5.524696,4.039898,5.381967,-9.967144,5.689344,1.279716,3.155250,1.167876,8.898473,-4.291928,0.890663,4.645199,-5.190375,5.314058,3.880784,-0.247467,-3.552313,-9.450711,-2.283209,-2.721009,-6.380010,-9.497847,-3.840599,-1.040279,3.481740,-7.637809,4.123296,2.140018,2.990923,0.336052,4.611556,-9.163825,3.236428,5.286470,8.799209,-1.002963,9.477348,-1.092540,-8.115894,6.610527,9.421278,-8.872980,-8.913576,-8.538038,-7.854200,-0.753950,2.260765,8.118946,0.417182,-6.533535,-3.616717,-9.344602,5.652970,-0.507751,0.711794,-0.758444,2.656028,6.816364,-3.275034,-3.891208,7.751278,-4.073269,2.283086,-7.518366,-1.028189,-8.479213,0.764078,-6.163305,4.355262,-7.765692,1.974173,9.268447,6.434789,-1.974522,-3.424512,-5.923965,8.865660,-4.097895,-2.720515,8.062559,6.411643,2.683791,5.878718,-5.167586,-9.639960,6.746943,6.177969,1.971039,-6.859108,-5.813572,-1.086530,-0.497052,-7.543469,-2.960886,9.943306,8.181961,4.682762,1.155750,8.523038,3.292425,-6.262977,6.556279,1.065297,-3.492631,-8.292344,-5.905200,9.701148,-7.279312,7.029191,-4.389027,-2.480720,-3.515362,7.088626,-6.707890,4.662141,-0.192424,5.895047,7.218932,-4.277003,-6.365402,-0.449081,8.941014,8.251639,3.072979,5.347212,-1.321457,-9.631147,9.242990,-8.527567,-7.319571,-5.431304,-6.042918,-0.483763,-5.374212,9.911962,9.093479,-5.103063,-7.024369,-8.560212,-0.171797,8.781085,2.921095,7.327110,6.644720,5.655273,9.709175,4.723222,9.527816,5.274792,-8.731271,-7.723722,1.619184,5.682968,-7.071798,7.876920,7.157935,8.933191,-7.205148,9.127763,9.666623,1.423647,-3.998265,-1.581052,-8.906599,-8.973985,-8.267048,-0.641928,2.122201,5.769846,2.341129,-9.068410,-3.678562,-5.428619,5.086311,-2.630323,-6.085989,4.336197,-6.405032,-1.252770,-3.258945,-0.620497,2.892975,-2.583090,-8.593464,-0.897866,-9.057748,-3.444736,4.673531,-5.772115,-2.943295,0.615546,-0.885026,-1.898892,-4.492564,-4.190045,6.059258,3.254726,7.921223,4.993356,-3.612457,-3.592094,-5.466838,4.208289,4.556057,-2.331081,-3.596653,-5.708044,8.440107,-6.049261,7.657843,-9.621035,6.587505,2.818426,1.819303,-5.077967,-5.053899,-2.856069,9.380081,-5.992371,3.254790,-6.907219,-5.152723,1.756906,5.011451,7.321773,-7.340878,6.032265,-1.815449,-4.399266,2.421255,0.144247,5.566581,0.116728,3.701518,8.929196,-2.541893,-7.726722,-7.784858,-1.976974,6.022883,-0.340237,3.917359,3.135740,-3.826177,6.839810,-0.369337,-5.561962,6.697229,-6.108327,4.702111,5.196063,-2.098617,7.472422,5.061587,-3.747408,1.721005,-2.241136,2.151669,-4.304939,-2.804469,7.511575,-9.655227,-4.050673,3.028578,-2.075229,1.700992,9.225955,-3.580042,-9.068965,-4.645004,-4.093247,-9.112362,9.188597,5.376959,6.860979,4.860953,-3.714275,-9.245429,8.970460,-9.696547,5.496728,-2.909437,5.505909,7.489892,-0.228684,-5.286688,8.220696,-3.746447,-0.645016,7.968282,2.018851,7.113288,-4.565431,-7.811473,4.090235,-7.844662,-1.909883,5.327823,9.845377,-5.030436,0.016132,-2.732173,1.705010,3.753356,-4.031601,0.327549,1.860493,-9.645208,5.302389,-4.225248,6.201983,9.519356,9.580542,9.605852,6.132417,-9.575975,-2.940494,2.873366,9.027479,-5.728552,0.717867,1.932788,-1.377288,4.884912,1.077950,-9.956114,-5.892143,-4.718485,0.913260,-6.526105,5.426327,4.792798,7.873307,4.483931,7.603081,8.930500,-0.896343,1.558257,-5.323170,-1.806306,-2.251060,-3.582827,-1.086584,-1.898445,-9.452601,-8.826365,-5.234969,1.303069,-4.767814,-3.472644,-0.389284,9.978638,8.720395,1.053816,0.220146,0.016551,9.531907,-2.667503,-2.341229,9.303911,3.209515,6.157731,1.457822,8.257214,6.154495,7.383514,7.442088,-0.772919,8.623747,-9.712951,9.759620,2.063982,5.521835,-6.611626,-0.796659,-3.284992,0.524363,3.308816,6.848235,7.780920,6.852277,-5.600318,9.781594,1.909138,3.962374,1.368039,6.653346,1.510573,-2.464534,-5.503792,0.946779,-6.207914,-3.513330,0.688643,-4.711372,0.366803,7.914087,1.601800,-4.379099,2.958070,-4.612614,4.750459,7.964375,8.480296,-7.016491,5.715909,-5.110389,2.802487,9.201930,-4.392013,3.501314,6.728167,-6.018276,1.068465,9.430525,-5.282203,5.700495,8.448303,-8.366461,-2.598527,8.590120,-5.874548,3.700915,-5.751685,-2.729159,-1.912898,-4.238197,-7.962492,-4.401295,-3.453278,-4.201321,-0.153433,-9.325422,2.690947,-4.741907,5.258351,1.150447,2.396030,7.929048,0.917010,5.006658,9.697376,-9.836242,-7.965374,7.003122,-2.130265,8.148126,6.397453,4.199006,-0.336998,-2.400250,4.337581,3.229416,-0.400757,-7.075194,-2.348978,-8.315144,-9.742118,4.140663,6.032224,8.694957,-6.353207,-0.032195,-7.785212,-0.846885,3.275114,-7.435183,-4.642601,-5.856729,0.190707,0.326474,-3.043404,1.189792,-7.040966,4.254670,-3.425428,6.633574,8.180145,-8.775986,5.110678,-7.784956,-2.866976,2.588703,-7.030775,2.756626,2.273201,4.677713,-5.928859,-9.004136,9.705223,5.282085,-3.869401,-1.376121,-6.397416,1.927219,-0.554300,0.737887,-0.011964,1.295333,-8.657324,-2.773923,5.939038,3.343235,1.276849,-3.183825,2.799910,-1.101218,0.908021,9.875349,0.366586,8.000784,-8.724532,-9.162701,-7.015658,4.152455,6.450324,-9.927812,4.367787,-4.088994,7.547241,5.072521,-7.698818,-5.630095,-8.218915,-6.402758,-6.880455,0.227108,-8.939119,3.628232,-8.806696,1.519162,2.012400,-1.987197,2.070260,8.947897,-2.933431,9.608779,-7.277241,-4.881384,1.377028,-9.742279,-2.039170,-8.329682,-5.835782,2.240860,-7.492551,-7.743225,-5.812499,-0.894879,0.807503,-6.129806,-6.507001,7.830569,2.365042,3.657167,-4.476135,-9.299047,-9.926596,4.402211,5.721800,0.725068,0.338615,9.071781,-4.919251,6.744868,3.446222,6.588924,5.955244,-8.342108,-9.141221,3.174162,2.995007,-4.256450,-9.346317,-6.553113,-2.175573,5.476357,3.591934,-2.080704,-5.541157,-5.939633,6.312992,4.990138,-6.279880,-5.138578,6.423646,2.108827,9.425846,-0.562653,8.705523,5.100794,-7.527388,7.114232,4.220459,-7.040468,3.555771,6.082861,-4.798398,6.601857,-8.488827,-8.623407,0.558774,6.854879,0.673668,-8.613049,-4.441534,-9.130537,-7.758487,6.890539,7.506806,6.076252,-6.269718,-4.766981,0.850312,2.009055,8.496272,3.291347,6.689698,9.319248,1.821736,2.369122,-9.238647,-0.428670,4.262166,-1.871158,2.403357,3.678621,6.443869,2.015943,1.679006,-2.063372,-5.156736,1.056424,-5.763676,-8.362178,-1.712908,-0.138509,1.658585,4.567762,-6.180217,-1.611310,6.351694,2.979030,1.213347,4.192595,4.143008,4.936923,3.680726,1.155203,6.711295,4.160283,8.648868,-6.938056,8.425250,1.401186,-2.014027,8.365616,5.981204,-6.098697,9.530355,2.079410,0.370996,-3.948771,7.509556,2.659329,2.606746,-9.130694,-7.863306,-2.890584,-3.419325,5.228960,7.751601,-9.354679,9.071153,1.561570,-9.136297,2.567441,4.119482,-0.267214,1.793620,8.018510,7.572373,0.363234,1.525431,7.393329,7.455070,-5.100375,7.892786,1.125475,0.188135,-2.719539,9.219802,7.223292,9.232183,5.530726], dtype = "float32")#candidate|8418|(720,)|const|float32
const_8419 = relay.const([-10,5,8,-2,5,8,-2,-9,4,-4,10,-6,-10,-1,2,1,1,-7,-1,4,10,-9,-1,-3,2,-8,5,-1,7,-9,-6,-3,6,9,-7,-5,-7,9,-3,-2,2,-9,-2,-1,4,9,8,-10,10,-2,-2,-3,-1,6,-7,-1,8,5,2,-10,3,8,-1,-8,8,9,-6,9,-9,3,3,6,-6,1,6,-4,-1,4,3,-5,1,10,-10,-7,4,-4,6,6,10,9,9,7,-10,-3,1,3,-4,1,2,3,-8,10,-7,-5,6,-5,1,-6,-2,-3,9,-7,9,-8,-6,4,8,-7,10,3,9,-2,9,1,-9,8,-10,-2,5,-9,-9,-2,-5,-3,2,-3,-6,-1,-5,8,-9,-1,-3,10,-10,-6,10,-9,8,3,10,1,3,10,-4,-9,9,4,2,10,10,3,6,8,4,8,-7,9,-10,-7,1,1,-7,-10,6,-1,7,-10,-3,-9,-8,-2,-5,-7,10,-3,-10,-1,-9,6,-10,-4,10,-10,-10,2,7,5,3,-10,5,-5,10,-2,6,4,2,5,-10,4,5,2,-10,-7,-8,-9,2,8,10,9,-7,-2,-1,-2,3,4,4,1,10,10,-4,-3,-2,8,-4,-8,2,-1,-8,-5,-10,8,-3,-1,-8,5,9,10,-10,3,-5,-4,-2,9,9,-8,3,7,6,8,-9,6,10,9,-4,5,-1,8,7,3,3,7,9,1,3,1,-2,-10,-3,-6,9,-8,-2,6,-4,-5,2,3,7,-9,3,4,7,2,3,6,-1,4,3,-3,1,-3,2,-6,-10,-1,5,10,9,1,-10,-6,5,4,-2,-4,7,-7,5,-9,-10,-10,8,-6,-2,1,-8,-4,-6,9,-7,2,10,4,5,-2,8,10,2,4,-5,-9,-1,5,3,-7,7,-4,-1,4], dtype = "int64")#candidate|8419|(350,)|const|int64
call_8416 = relay.TupleGetItem(func_5412_call(relay.reshape(const_8417.astype('float32'), [15, 6, 1]), relay.reshape(const_8418.astype('float32'), [15, 6, 8]), relay.reshape(const_8419.astype('int64'), [350,]), relay.reshape(const_8418.astype('float64'), [15, 6, 8]), ), 2)
call_8420 = relay.TupleGetItem(func_5417_call(relay.reshape(const_8417.astype('float32'), [15, 6, 1]), relay.reshape(const_8418.astype('float32'), [15, 6, 8]), relay.reshape(const_8419.astype('int64'), [350,]), relay.reshape(const_8418.astype('float64'), [15, 6, 8]), ), 2)
func_1577_call = mod.get_global_var('func_1577')
func_1578_call = mutated_mod.get_global_var('func_1578')
call_8431 = func_1577_call()
call_8432 = func_1577_call()
output = relay.Tuple([call_8408,call_8416,const_8417,const_8418,const_8419,call_8431,])
output2 = relay.Tuple([call_8409,call_8420,const_8417,const_8418,const_8419,call_8432,])
func_8435 = relay.Function([], output)
mod['func_8435'] = func_8435
mod = relay.transform.InferType()(mod)
output = func_8435()
func_8436 = relay.Function([], output)
mutated_mod['func_8436'] = func_8436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6898_call = mod.get_global_var('func_6898')
func_6900_call = mutated_mod.get_global_var('func_6900')
call_8478 = func_6898_call()
call_8479 = func_6898_call()
func_6579_call = mod.get_global_var('func_6579')
func_6580_call = mutated_mod.get_global_var('func_6580')
call_8482 = func_6579_call()
call_8483 = func_6579_call()
func_7589_call = mod.get_global_var('func_7589')
func_7591_call = mutated_mod.get_global_var('func_7591')
const_8492 = relay.const([-2.759847,-4.381202,1.374870,-5.854179,4.077478,-1.438311,5.208325,2.062829,-6.700966,-5.279105,0.126786,0.997595,-3.719087,-7.247884,-8.062696,-4.056274,0.134853,-6.977124,2.728837,-9.273341,-1.679688,-3.943803,8.285811,5.744677,-9.281649,9.377455,-7.700237,0.907949,6.753966,-3.347770,-7.011149,-9.316879,-3.511344,-8.402522,-4.411682,-0.450819,2.909749,-7.308347,-4.538635,0.618847,9.051666,-1.558065,3.018898,-6.508053,2.759880,7.713684,2.271939,-5.072530,-6.343420,-8.821892,7.062184,2.780898,8.795124,-8.805753,-2.138597,-7.871198,-3.214868,1.386268,-6.671220,6.685097,8.286516,9.870503,-9.279639,-0.230999,1.247296,7.862433,1.271136,2.398603,-8.738421,-1.226517,2.216265,0.162392,4.848530,-6.288114,-2.003258,2.407386,-0.551754,9.959696,-0.678448,9.314559,-4.330045,2.338366,-0.266954,-7.809655,-7.501259,7.359571,-2.102875,2.175965,8.185854,4.846260,5.460081,8.312720,-4.163286,2.757386,-1.789288,-0.594367,1.099120,-6.731180,-8.157211,8.747418,2.536530,4.518876,9.127941,2.246876,-6.089470,-2.661596,-7.378237,6.636850,-8.243365,3.816120,1.070324,4.133151,2.402920,-1.204210,5.307176,-4.009960,-7.490645,-6.772352,2.480583,5.218760,-2.684759,8.826803,5.660021,1.716306,4.670437,2.212814,-3.723074,-0.840726,-4.033350,-4.017840,-4.354027,2.461210,-6.587829,-0.185225,4.932077,0.032788,8.810625,-2.638110,8.365855,0.086248,7.284681,8.201502,5.321436,6.681217,7.981655,9.867130,9.799387,-4.752408,-5.410800,0.447251,-2.986560,-6.458655,9.867986,6.213365,-4.949369,-6.670813,8.354181,-5.244851,2.712270,-7.819575,0.146574,-1.866206,-2.211696,-4.318595,7.756987,9.671823,-1.477941,5.380450,-7.776553,-4.323922,4.344208,-8.515788,-7.861872,-2.984679,1.829020,-8.411724,-1.052175,4.946609,-4.582749,-3.984928,5.222796,9.263375,1.196788,9.645500,4.607507,-5.239964,-6.938248,0.103374,1.525503,-0.517417,0.827134,4.799098,7.731247,-5.200300,-0.546339,8.275088,-4.988604,2.251050,-7.552569,-3.935148,-7.348966,-9.649539,6.272854,-0.228972,4.955667,2.235988,6.511980,4.087868,2.040564,-7.750168,-7.808719,9.749940,1.558738,-6.608345,-0.084668,0.367327,2.619089,5.973794,-7.166297,-0.225194,4.528328,-4.740563,-8.062900,8.512446,9.990694,-9.039232,-4.754893,7.034236,-8.422251,5.116776,-3.823688,-0.381673,-7.645736,-6.669324,3.388041,9.517155,5.842543,9.299911,0.737929,1.738363,4.420162,-4.552732,-7.471603,5.266797,1.622251,8.949960,0.318511,2.161295,3.391328,-6.519643,-0.592365,5.267586,9.527079,-3.941110,-5.273799,-7.169115,0.430582,2.155326,-6.496943,-8.779101,0.710314,3.015848,0.195416,-2.417667,-7.792899,9.545168,-4.440024,-8.164373,-7.292037,-0.936929,0.646271,-3.634836,9.587512,-9.336559,-1.597117,3.599008,-3.084572,-2.619599,-9.769662,-6.314492,-5.905683,8.888512,2.351466,-0.650362,-8.291252,-6.063638,7.417483,-1.212543,-9.050336,-3.998834,-4.293650,-5.689017,-1.323977,-1.519202,1.917783,-4.299681,7.479642,1.054073,7.837626,-1.429552,-7.518951,6.017229,6.549720,1.363188,-5.801210,-4.163800,3.761567,7.343225,0.912277,-7.978534,7.347837,-2.846760,2.961914,1.765151,-8.964767,-3.516108,-9.745596,-9.474823,-9.919280,9.487322,-9.415136,5.363625,-3.085499,0.515927,-2.168215,-8.985047,-3.360971,-7.297823,-2.502029,2.760548,1.826153,-8.386657,9.327102,2.145601,-8.775231,0.457638,-1.398182,-6.180889,7.442107,6.282845,-6.487825,3.075348,-2.966260,-6.731690,0.985074,2.868484,4.419805,-0.340686,8.955966,-6.697428,-1.679900,-5.689716,-4.300272,1.696717,-7.139087,-4.282230,8.331832,-7.368489,7.946969,-1.347774,-1.108173,-8.262597,4.698069,-3.303705,-3.627541,-4.151571,-2.681475,-1.049913,-9.491845,5.281101,-7.200893,2.254098,8.491538,5.274535,-5.231047,-7.763297,-2.061442,-0.775496,3.652197,-2.846190,-2.351531,5.571848,4.220015,4.202313,4.436053,-1.054377,-5.350911,3.075396,8.477586,6.228741,9.924353,-8.622061,-4.740894,4.673220,-2.798878,0.850147,4.049992,8.195954,-1.674488,-8.281761,4.514961,5.302689,-0.403108,-3.536227,-2.046654,5.895247,5.481878,9.830954,-0.354947,9.955972,-5.124787,3.697384,7.024972,-2.539521,-0.738222,-5.080327,4.812283,9.067638,-1.811527,-0.400520,7.787351,-5.982254,6.334195,-5.952479,2.259697,-4.705804,9.434604,6.043337,2.557698,-9.251079,-8.652919,5.298138,6.706044,9.990594,-7.934517,-6.048772,7.642492,-1.489123,-0.962272,-2.765434,7.161407,0.504875,9.466110,5.486216,-5.449375,-3.540611,-2.185133,-6.647586,-1.242889,-6.704866,7.234685,3.051185,0.154664,-1.757148,-4.872635,2.735087,2.148924,-9.473235,7.964579,5.798560,-4.525211,-4.176648,-9.719352,-3.396530,-7.172135,1.325577,8.407727,-9.981319,7.311442,-5.936897,-5.200777,8.827106,-3.687445,-4.406142,0.103055,3.487555,1.244206,0.514040,-7.944719,-5.374227,-6.203815,8.069842,-2.508728,-9.241768,-5.576866,-7.939908,3.214381,-0.359976,2.145389,3.892525,8.555627,-8.206052,0.391200,-8.695214,1.766279,-9.094592,-4.911328,6.437024,-9.564323,-1.128653,-8.525988,3.293046,-8.861444,3.247544,-9.589938,1.755589,4.929724,-7.790191,7.867919,0.435094,4.260945,-3.135012,3.172734,6.524063,5.350286,-9.098077,-7.816872,3.148394,6.503114,-7.078993,-7.971915,1.451831,-2.250925,-0.849996,-1.815205,-1.958963,7.198038,-4.698387,9.125519,-0.950149,1.353961,-4.192900,-0.680774,0.905387,1.356787,8.399011,6.050623,7.551304,-0.109664,8.630298,6.102195,1.819356,-5.734307,7.007441,5.575773,-7.236289,-9.815674,-3.807962,4.315850,4.951051,5.348961,-7.197865,1.743968,-0.090500,6.346000,6.899807,-3.611523,8.543486,-7.584000,-2.077543,8.241160,-6.952997,1.974936,-7.469696,-0.595536,6.312532,3.702383,-7.749095,-2.886207,-6.276272,-4.310799,-2.076194,-3.871056,9.347320,5.608998,-1.077919,6.955960,-9.149520,1.925692,2.050260,-5.529002,-0.586137,-0.168165,0.548636,6.357542,-0.270000,1.790873,-9.960197,-6.556753,-0.368159,7.241042,-8.067230,2.317565,-3.057734,-3.026016,7.099042,-6.443949,-0.575690,-1.901656,4.114933,0.364889,-3.833230,4.134443,7.003649,-6.080611,9.454171,-1.495769,-6.948910,-7.440701,6.853109,-3.429686,-9.799609,-3.376259,5.638684,-8.945956,-0.268603,-8.787974,-7.421769,-6.498701,-5.465733,9.209881,-3.797543,7.840428,3.243862,0.392647,-6.835825,2.047215,4.095618,6.800506,6.326679,1.943427,-3.424529,-0.175600,7.611603,-7.991401,7.966803,0.554606,3.217473,7.276727,5.069652,2.143584,-6.611581,-8.695332,-3.222591,5.562402,8.730072,-7.438865,-2.385364,-2.799861,2.243526,7.814566,-8.169930,-4.950980,-5.571785,-0.860248,5.171109,3.766538,1.236897,1.163316,-0.192073,3.089800,4.922583,0.095493,-0.493155,-6.997345,-6.754947,-6.941464,-9.452395,-3.974695,-1.649687,-8.314630,7.803291,-1.814467,6.074424,-3.622110,-9.785135,3.821847,4.849585,6.235397,-8.397019,2.715003,-9.713529,2.021791,4.801090,5.155309,1.474446,8.099437,2.649851,4.678078,9.316228,-0.468451,8.806396,5.847825,-4.275647,-5.194937,-3.123435,7.030983,0.405047,-7.561342,0.211947,8.165418,3.756012,8.170443,-2.103539,-7.646146,-4.889586,6.366263,-4.973017,5.503982,8.763374,-3.612223,5.260767,-1.833803,-6.267979,5.019946,-2.195479,-2.990765,2.648758,5.034177,-6.206476,6.902173,-1.835104,-5.477893,-2.171504,-0.357947,4.657957,3.302146,-4.062576,-7.538916,-3.391554,-1.587249,-3.911149,8.406097,-9.669125,0.802016,-3.815156,-5.955899,9.057220,2.246980,-1.459542,4.205344,-7.644941,-6.071655,8.527864,-7.017192,3.950845,-8.717983,7.367663,2.508672,-5.577656,0.516953,-1.839483,-7.151659,-4.018890,9.056082,6.701572,1.861117,7.918137,-6.254354,-1.228047,5.555280,-9.052534,2.148693,5.817758,6.296441,4.904556,-9.611876,-2.856857,0.731161,-9.419934,0.653850,4.732105,-8.739023,0.543566,1.980419,4.269144,1.879754,9.982591,2.615694,6.502028,-3.305518,1.592076,-7.607212,9.117610,7.458814,-5.481173,1.686356,0.165460,0.608388,3.837621,-3.533251,6.740296,-3.371522,-7.620402,7.613352,-0.965538,-4.509979,-1.679717,-7.675888,-9.361374,1.650281,-3.854811,-5.684800,-8.871573,-0.629739,6.875213,-9.645744,-4.577662,1.632774,9.648509,6.134538,-6.015244,5.476094,-1.435117,6.468617,7.952924,-0.587332,1.274619,2.986147,-6.944216,8.266125,-5.263121,-4.622017,-9.265370,9.537977,-6.785377,-7.118355,-6.303076,9.634047,0.717082,5.319647,0.465504,-3.542264,3.919973,9.139332,-9.882179,4.647299,-7.055950,5.097421,1.944761,-1.240046,4.279825,-3.818086,3.165544,6.771297,-6.845463,7.667309,-4.242448,0.097251,-7.306676,3.057475,4.573002,6.545395,-0.509177,9.580068,-8.106447,7.811186,-8.357768,1.005658,6.142533,-8.316956,-5.010724,4.585975,7.953519,-8.023282,2.500435,-4.455719,-1.506770,9.381536,5.605401,-7.103238,-7.158787,4.647400,1.825825,-0.777250,9.549044,6.932064,9.573327,-4.435273,4.133923,-9.590381,-2.284185,1.523306,-1.309925,6.284414,9.833355,7.894990,0.916811,-2.865354,-0.111098,4.117326,9.134224,4.180858,-2.226031,-4.455118,-5.424000,-7.826296,5.592221,6.702152,-8.625056,9.840581,-9.298173,-1.577507,-4.996472,-5.171289,5.568837,-3.578537,-2.480741,0.403099,-9.365945,-5.216625,-4.628214,5.931537,5.055891,-9.472553,-5.075585,9.321248,-7.617252,-4.548557,6.213883,4.211278,8.400455,4.393419,0.246736,-6.008551,-0.379787,-5.818743,9.278866,9.458648,-1.259372,2.884498,8.836880,1.643707,-0.866854,-0.714018,3.197524,-5.102621,-9.775915,-4.308670,8.507096,2.361184,-6.732863,-7.623578,0.810901,-0.914102,3.706031,-7.914609,-6.336953,2.127668,-1.953402,-4.317702,1.215369,-5.774637,8.379576,-5.587679,2.822708,-4.501131,0.195710,8.220593,-5.580928,8.253300,1.959406,0.264123,9.741511,-8.373254,-4.386614,6.543193,-3.544804,1.558935,0.184666,-5.612251,4.016542,-0.668884,8.930475,-4.319397,1.734580,-9.973708,4.540229,-2.756557,-0.633986,-1.483280,-4.393154,-0.431785,1.141982,-0.779279,8.533720,4.346204,5.023799,-4.832340,-5.650479,7.260896,-5.643106,-7.974522,2.015501,-0.055091,-0.550441,-0.175901,4.676240,4.231977,3.544172,4.965719,-2.379961,9.116694,-0.820480,-4.229927,-6.948396,-2.662618,3.759386,1.741980,2.664960,-3.750830,-6.887108,-7.973197,-0.042644,1.293478,5.724135,-4.033592,3.758890,-4.709672,9.793412,-7.680559,-4.060702,-4.982743,-6.817130,-9.907235,-1.602159,2.303052,3.386135,-2.851053,1.561074,1.050319,-0.531798,-4.533425,-8.182455,9.542749,3.900074,1.487527,-4.329259,-1.619723,6.624290,-5.342316,4.051167,6.920066,-8.855956,-1.229048,1.512700,-6.801789,-3.905627,8.728522,5.146083,-3.752669,7.557205,-3.237252,-5.936261,-3.066856,8.672590,3.530810,-6.099757,-8.562912,-4.975986,-2.328372,-6.080258,7.850555,1.869471,5.753514,1.917456,4.764538,-9.656963,-9.005022,-7.252654,-2.873142,1.212769,3.292327,-6.439924,-8.365963,-1.049872,-0.224414,-6.268357,3.112779,2.512632,-9.880019,7.394459,5.962265,-8.703647,-1.312840,-5.996505,-1.675083,-6.971778,2.512013,3.536135,9.359624,-1.384812,4.293854,6.246038,-4.836546,6.202346,6.679236,-8.002424,-4.171570,-3.823781,-8.951086,-0.118838,-7.053126,-5.092944,1.666411,-6.469636,6.510986,0.378692,5.699704,-0.282368,2.881971,-9.220147,-9.493846,8.026988,0.266203,4.310899,-2.540161,9.838803,-3.036169,-5.283003,7.026108,-7.711101,2.788235,9.139672,-1.027985,-1.165022,-8.025346,-3.972103,6.659032,6.351825,1.626809,-6.581287,-4.737753,-7.214129,9.118277,4.619863,3.794756,-0.120555,6.764190,0.940544,6.417148,2.758487,0.782689,-8.304601,8.723097,0.479149,-5.547149,-7.062394,2.820909,3.232797,3.783736,-2.279121,-2.879468,1.144857,-1.330130,5.809617,-1.917940,7.106452,-3.445739,-3.574309,-9.744192,-0.128989,-3.285761,1.493363,7.750619,-8.432414,7.873014,-4.548804,5.524269,1.684082,-0.524931,7.042786,2.681843,-5.221792,-4.472266,2.887468,0.237576,7.010662,-5.905312,9.684068,4.726328,-8.949906,-2.040834,-8.894878,-1.414992,-9.081678,-1.902119,3.827294,-5.238045,1.341098,8.647475,4.495043,-8.435974,-1.160744,-0.472479,0.683808,5.834460,-3.831694,-8.126877,-2.928975,2.316721,9.880867,-0.586711,1.703873,8.299402,-3.374442,-8.133025,1.230684,-3.476474,3.871180,0.468118,7.364217,5.089807,0.121612,-2.921784,-1.029903,-4.917122,-5.806158,6.459336,5.810684,-6.300685,6.403979,-7.126730,-5.366503,-3.637160,5.488576,-2.792090,-2.393282,-8.023817,2.647009,0.090875,-7.740003,0.064691,8.369597,3.734047,9.516453,-5.351690,-3.066383,1.566323,9.870116,-1.067661,-3.043445,1.167497,-9.339251,-3.181523,9.916930,-8.044015,6.985174,-4.009063,-4.034358,7.685916,4.258940,-2.825673,-0.854342,-1.060252,7.350276,-8.709481,3.866091,-5.230673,-8.588483,9.419938,8.112060,0.159761,-8.707539,7.536767,1.007269,-5.135575,-9.638706,-7.175056,6.501614,-6.188666,-0.311119,-1.609450,6.722324,2.122237,1.378420,3.711786,-3.759630,6.366521,-6.245739,0.554568,3.333249,-7.448235,-7.749542,0.537882,-1.552624,-8.690035,-8.980572,-7.752402,-3.742159,1.877215,8.120972,-4.586689,-1.348255,-8.113251,-2.024513,-7.044574,6.688516,7.242038,-7.092967,3.190245,-4.241663,3.196414,-5.899271,-0.835390,9.307507,-5.895371,-2.263768,5.537609,-2.212479,8.995679,5.234871,8.875198,5.082593,6.434668,6.840926,-0.116470,-8.552103,-4.566240,6.402509,7.633487,7.611035,4.071390,-7.064429,-2.939101,-5.311569,7.608857,8.400574,8.404962,6.908491,-3.285593,3.498612,2.077596,-9.055719,6.336549,-9.546824,8.165539,-0.104834,-2.695467,9.195406,-7.303707,-8.915971,4.705833,-6.818778,-4.368849,8.890141,-8.906067,6.449203,7.078285,8.093946,-5.157460,2.104601,1.475032,-1.309709,1.174098,-7.813039,-8.814905,0.155717,6.109133,-0.333066,-3.721284,-1.311050,-6.230117,-9.966137,-9.739212,-8.147668,8.467825,-8.492439,-3.248053,-4.707774,-6.515227,1.898621,-6.049234,-9.523149,-5.424242,6.024702,6.553145,4.129578,-0.610253,7.937783,8.122249,5.742818,0.052743,-6.018340,-1.791095,0.077751,8.472167,3.274034,-6.158854,9.671075,-2.553356,2.120127,2.975939,-4.893319,-4.715244,-0.095652,2.457736,-0.117750,3.890641,-2.843636,-2.708202,-4.639850,-4.629503,1.759519,4.843120,5.428037,6.919353,6.405498,4.347700,-4.826768,6.711344,-7.544793,-1.159257,-4.032184,2.348924,-1.391359,-4.564041,4.073716,-5.194440,2.002805,-6.948884,-2.958698,5.207726,-9.095003,5.101788,-6.843765,3.167243,9.259424,-1.235425,5.432691,9.908204,1.939944,-1.618953,-0.113384,2.421625,-9.113294,9.626814,0.670868,4.943932,8.520225,3.873808,7.778327,-4.814852,-2.176358,-3.903387,-4.440397,6.336449,-2.794418,4.810906,1.330936,-4.469130,-5.123997,-9.867463,1.788771,8.083252,-2.266477,-9.730159,4.049746,-9.929555,5.134407,3.838128,-7.928514,9.702741,-8.571893,-6.004197,3.986085,6.269010,-6.983211,-0.118545,7.645833,-7.862900,-1.645542,-9.829534,-6.998704,3.336793,4.861047,3.949867,-7.154615,-2.592026,2.435682,-0.416300,-5.651813,-3.883927,9.514104,-7.141257,-8.518145,-3.527524,1.908158,-7.433349,0.414996,-5.813298,-4.393186,3.262306,-9.928860,5.080243,-9.099071,8.517018,-6.554255,9.825613,-7.594693,-8.565512,-0.607633,2.738979,0.255037,9.985944,6.734359,-0.465153,-1.762890,-9.598240,0.880968,-5.578365,8.384062,-4.993861,-5.285354,2.590974,7.430754,4.213647,-7.920189,-7.571578,6.034292,1.049785,4.903390,-4.384885,2.303892,-1.350869,9.273113,-6.025139,-5.366619,-8.282015,-2.925178,4.594731,9.137808,5.748738,5.409506,-4.481562,-0.144145,-2.035985,8.547935,4.756877,1.140717,2.268173,-7.011623,-6.392312,7.355963,6.373995,-5.390903,6.715085,-0.218522,-9.007563,-1.689470,-4.988478,-7.813182,-7.824888,0.265084,-7.625604,-1.831202,0.190118,2.275644,5.102357,-7.420430,-5.998151,-9.698290,6.919714,-1.378123,-7.858474,-6.613523,2.239704,7.009804,-0.781799,7.450512,-4.370180,-4.553621,4.955495,7.672273,-3.602923,2.764352,-1.517681,2.815132,-0.871609,3.958632,-9.960592,5.699813,-6.586921,-8.924920,-6.536037,9.768783,5.638788,-7.341105,9.931994,8.186408,-1.753930,-8.170893,-7.811985,-4.126141,-4.428558,-6.799575,0.218742,-3.156520,-6.823304,-8.028996,7.232402,1.816312,1.972834,2.063218,5.950164,1.650564,2.557602,1.702861,6.830004,6.039973,0.283545,-0.914059,8.743753,1.258276,2.277537,-8.217880,5.883857,3.995898,-5.363766,-3.931674,-3.682439,9.764577,5.713325,6.216954,-7.109734,-9.229147,-5.984858,-2.255026,-8.595194,-5.710329,1.379662,-2.385169,-6.421925,2.821465,-8.428962,0.380782,2.044630,-4.665372,7.635674,1.927685,-5.548893,0.740688,9.779325,4.867770,6.676009,1.045598,-9.129565,-0.748007,-1.415003,0.336093], dtype = "float64")#candidate|8492|(1650,)|const|float64
call_8491 = func_7589_call(relay.reshape(const_8492.astype('float64'), [10, 11, 15]))
call_8493 = func_7589_call(relay.reshape(const_8492.astype('float64'), [10, 11, 15]))
output = relay.Tuple([call_8478,call_8482,call_8491,const_8492,])
output2 = relay.Tuple([call_8479,call_8483,call_8493,const_8492,])
func_8499 = relay.Function([], output)
mod['func_8499'] = func_8499
mod = relay.transform.InferType()(mod)
output = func_8499()
func_8500 = relay.Function([], output)
mutated_mod['func_8500'] = func_8500
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8577 = relay.var("var_8577", dtype = "uint64", shape = ())#candidate|8577|()|var|uint64
var_8578 = relay.var("var_8578", dtype = "uint64", shape = (1, 1, 14))#candidate|8578|(1, 1, 14)|var|uint64
bop_8579 = relay.less_equal(var_8577.astype('bool'), var_8578.astype('bool')) # shape=(1, 1, 14)
uop_8583 = relay.cos(bop_8579.astype('float64')) # shape=(1, 1, 14)
func_3043_call = mod.get_global_var('func_3043')
func_3045_call = mutated_mod.get_global_var('func_3045')
call_8585 = func_3043_call()
call_8586 = func_3043_call()
output = relay.Tuple([uop_8583,call_8585,])
output2 = relay.Tuple([uop_8583,call_8586,])
func_8587 = relay.Function([var_8577,var_8578,], output)
mod['func_8587'] = func_8587
mod = relay.transform.InferType()(mod)
mutated_mod['func_8587'] = func_8587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8587_call = mutated_mod.get_global_var('func_8587')
var_8589 = relay.var("var_8589", dtype = "uint64", shape = ())#candidate|8589|()|var|uint64
var_8590 = relay.var("var_8590", dtype = "uint64", shape = (1, 1, 14))#candidate|8590|(1, 1, 14)|var|uint64
call_8588 = func_8587_call(var_8589,var_8590,)
output = call_8588
func_8591 = relay.Function([var_8589,var_8590,], output)
mutated_mod['func_8591'] = func_8591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7770_call = mod.get_global_var('func_7770')
func_7772_call = mutated_mod.get_global_var('func_7772')
call_8624 = func_7770_call()
call_8625 = func_7770_call()
output = relay.Tuple([call_8624,])
output2 = relay.Tuple([call_8625,])
func_8646 = relay.Function([], output)
mod['func_8646'] = func_8646
mod = relay.transform.InferType()(mod)
output = func_8646()
func_8647 = relay.Function([], output)
mutated_mod['func_8647'] = func_8647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6044_call = mod.get_global_var('func_6044')
func_6045_call = mutated_mod.get_global_var('func_6045')
call_8662 = relay.TupleGetItem(func_6044_call(), 0)
call_8663 = relay.TupleGetItem(func_6045_call(), 0)
output = call_8662
output2 = call_8663
func_8675 = relay.Function([], output)
mod['func_8675'] = func_8675
mod = relay.transform.InferType()(mod)
mutated_mod['func_8675'] = func_8675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8675_call = mutated_mod.get_global_var('func_8675')
call_8676 = func_8675_call()
output = call_8676
func_8677 = relay.Function([], output)
mutated_mod['func_8677'] = func_8677
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8744 = relay.var("var_8744", dtype = "float32", shape = (6, 13, 5))#candidate|8744|(6, 13, 5)|var|float32
uop_8745 = relay.sinh(var_8744.astype('float32')) # shape=(6, 13, 5)
output = uop_8745
output2 = uop_8745
func_8751 = relay.Function([var_8744,], output)
mod['func_8751'] = func_8751
mod = relay.transform.InferType()(mod)
mutated_mod['func_8751'] = func_8751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8752 = relay.var("var_8752", dtype = "float32", shape = (6, 13, 5))#candidate|8752|(6, 13, 5)|var|float32
func_8751_call = mutated_mod.get_global_var('func_8751')
call_8753 = func_8751_call(var_8752)
output = call_8753
func_8754 = relay.Function([var_8752], output)
mutated_mod['func_8754'] = func_8754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4316_call = mod.get_global_var('func_4316')
func_4318_call = mutated_mod.get_global_var('func_4318')
call_8831 = relay.TupleGetItem(func_4316_call(), 0)
call_8832 = relay.TupleGetItem(func_4318_call(), 0)
uop_8834 = relay.sin(call_8831.astype('float64')) # shape=(11, 1, 12)
uop_8836 = relay.sin(call_8832.astype('float64')) # shape=(11, 1, 12)
output = uop_8834
output2 = uop_8836
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

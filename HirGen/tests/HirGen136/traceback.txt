==========mod==========
#[version = "0.0.5"]
def @func_5215(%var_5104: Tensor[(12, 10, 2), uint8], %var_5105: Tensor[(12, 10, 2), uint8], %var_5168: Tensor[(432), int8], %var_5169: Tensor[(126), float32], %var_5179: Tensor[(12), float64], %var_5180: Tensor[(10, 2), float32], %var_5181: Tensor[(2560), float64]) -> (Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(336), float64], Tensor[(36), int8], Tensor[(432), int8], Tensor[(126), float32], Tensor[(12), float64], Tensor[(10, 2), float32], Tensor[(2560), float64], Tensor[(16, 7, 3), float64], Tensor[(12, 13, 8), bool]) {
  %0 = cast(%var_5105, dtype="uint8") /* ty=Tensor[(12, 10, 2), uint8] */;
  %1 = shape_of(%var_5104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_5104, dtype="uint8") /* ty=Tensor[(12, 10, 2), uint8] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %4 = right_shift(%2, %3) /* ty=Tensor[(12, 10, 2), uint8] */;
  %5 = cast(%var_5104, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%4, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %9 = cast(%var_5105, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %10 = acosh(%9) /* ty=Tensor[(12, 10, 2), float32] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 10, 2), float32] */, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(%10, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %15 = cast(%var_5105, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %16 = shape_of(%10, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%10, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(36), int8] */, dtype="int8") /* ty=Tensor[(36), int8] */;
  %20 = cast(%var_5168, dtype="int8") /* ty=Tensor[(432), int8] */;
  %21 = cast(%var_5169, dtype="float32") /* ty=Tensor[(126), float32] */;
  %22 = reshape(%19, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), int8] */;
  %23 = reshape(%20, newshape=[12, 6, 6]) /* ty=Tensor[(12, 6, 6), int8] */;
  %24 = reshape(%21, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %25 = @func_924(%22, %23, %24) /* ty=(Tensor[(12, 6, 6), int8], Tensor[(1, 6, 6), float32], Tensor[(9, 14), float32], Tensor[(126), float32], Tensor[(336), float64]) */;
  %26 = cast(%var_5169, dtype="float32") /* ty=Tensor[(126), float32] */;
  %27 = %25.4;
  %28 = cast(%27, dtype="float64") /* ty=Tensor[(336), float64] */;
  %29 = reshape(%26, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %30 = reshape(%28, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %31 = @func_374(%29, %30) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %32 = @func_3257() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %33 = %32.0;
  %34 = cast(%var_5179, dtype="float64") /* ty=Tensor[(12), float64] */;
  %35 = cast(%var_5180, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
  %36 = cast(%var_5181, dtype="float64") /* ty=Tensor[(2560), float64] */;
  %37 = reshape(%34, newshape=[12, 1, 1]) /* ty=Tensor[(12, 1, 1), float64] */;
  %38 = reshape(%35, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %39 = reshape(%36, newshape=[2560]) /* ty=Tensor[(2560), float64] */;
  %40 = @func_4880(%37, %38, %39) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(2560), float64], Tensor[(12, 1, 1), float64], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(12, ?, ?), float64]) */;
  %41 = %40.7;
  %42 = cast(%33, dtype="bool") /* ty=Tensor[(13, 8), bool] */;
  %43 = cast(%41, dtype="bool") /* ty=Tensor[(12, 1, 1), bool] */;
  %44 = greater_equal(%7, %8) /* ty=Tensor[(12, 10, 2), bool] */;
  %45 = equal(%13, %14) /* ty=Tensor[(12, 10, 2), bool] */;
  %46 = not_equal(%17, %18) /* ty=Tensor[(12, 10, 2), bool] */;
  %47 = %31.3;
  %48 = logical_and(%42, %43) /* ty=Tensor[(12, 13, 8), bool] */;
  (%44, %45, %46, %27, meta[relay.Constant][1] /* ty=Tensor[(36), int8] */, %var_5168, %var_5169, %var_5179, %var_5180, %var_5181, %47, %48)
}

def @func_7589(%var_7585: Tensor[(10, 11, 15), float64]) -> Tensor[(10, 11, 15), float64] {
  %49 = cast(%var_7585, dtype="float64") /* ty=Tensor[(10, 11, 15), float64] */;
  cosh(%49) /* ty=Tensor[(10, 11, 15), float64] */
}

def @func_6979() -> Tensor[(13, 8), float32] {
  %50 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %50.0
}

def @func_8499() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(10, 11, 15), float64], Tensor[(1650), float64]) {
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(1650), float64] */, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %52 = reshape(%51, newshape=[10, 11, 15]) /* ty=Tensor[(10, 11, 15), float64] */;
  %53 = @func_6898() /* ty=Tensor[(13, 8), float32] */;
  %54 = @func_6579() /* ty=Tensor[(13, 8), float32] */;
  %55 = @func_7589(%52) /* ty=Tensor[(10, 11, 15), float64] */;
  (%53, %54, %55, meta[relay.Constant][2] /* ty=Tensor[(1650), float64] */)
}

def @func_8587(%var_8577: uint64, %var_8578: Tensor[(1, 1, 14), uint64]) -> (Tensor[(1, 1, 14), float64], Tensor[(13, 8), float32]) {
  %56 = cast(%var_8577, dtype="bool") /* ty=bool */;
  %57 = cast(%var_8578, dtype="bool") /* ty=Tensor[(1, 1, 14), bool] */;
  %58 = less_equal(%56, %57) /* ty=Tensor[(1, 1, 14), bool] */;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(1, 1, 14), float64] */;
  %60 = cos(%59) /* ty=Tensor[(1, 1, 14), float64] */;
  %61 = @func_3043() /* ty=Tensor[(13, 8), float32] */;
  (%60, %61)
}

def @func_8051(%var_8043: Tensor[(8, 11, 10), bool], %var_8044: Tensor[(8, 11, 10), bool]) -> (Tensor[(8, 11, 10), bool],) {
  %62 = cast(%var_8044, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %63 = shape_of(%var_8043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%var_8043, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %66 = logical_and(%64, %65) /* ty=Tensor[(8, 11, 10), bool] */;
  (%66,)
}

def @func_5730() -> (Tensor[(13, 8), float32],) {
  %67 = @func_4473() /* ty=(Tensor[(13, 8), float32],) */;
  %68 = %67.0;
  (%68,)
}

def @func_7954(%var_7914: Tensor[(20), float32], %var_7915: Tensor[(960), float32]) -> (Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32], Tensor[(20), float32], Tensor[(960), float32], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32]) {
  %69 = cast(%var_7914, dtype="float32") /* ty=Tensor[(20), float32] */;
  %70 = cast(%var_7915, dtype="float32") /* ty=Tensor[(960), float32] */;
  %71 = cast(%var_7915, dtype="float32") /* ty=Tensor[(960), float32] */;
  %72 = reshape(%69, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %73 = reshape(%70, newshape=[4, 16, 15]) /* ty=Tensor[(4, 16, 15), float32] */;
  %74 = reshape(%71, newshape=[4, 16, 15]) /* ty=Tensor[(4, 16, 15), float32] */;
  %75 = @func_5028(%72, %73, %74) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(4, 16, 15), float32]) */;
  %76 = @func_2411() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %77 = @func_6852() /* ty=(Tensor[(13, 8), float32],) */;
  %78 = @func_7770() /* ty=Tensor[(13, 8), float32] */;
  %79 = %75.5;
  %80 = %76.1;
  %81 = %77.0;
  (%78, %79, %var_7914, %var_7915, %80, %81)
}

def @func_5304() -> (Tensor[(336), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %82 = @func_4427() /* ty=(Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) */;
  %83 = @func_2436() /* ty=(Tensor[(13, 8), float32],) */;
  %84 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %85 = @func_2436() /* ty=(Tensor[(13, 8), float32],) */;
  %86 = %82.1;
  %87 = %83.0;
  %88 = %84.1;
  %89 = %85.0;
  (%86, %87, %88, %89)
}

def @func_7281() -> (Tensor[(13, 8), float32], Tensor[(11, 1, 12), float32]) {
  %90 = @func_4316() /* ty=(Tensor[(11, 1, 12), float32],) */;
  %91 = @func_3400() /* ty=Tensor[(13, 8), float32] */;
  %92 = %90.0;
  (%91, %92)
}

def @func_3937(%var_3919: Tensor[(12, 2, 1), float32]) -> Tensor[(12, 2, ?), bool] {
  %93 = cast(%var_3919, dtype="float32") /* ty=Tensor[(12, 2, 1), float32] */;
  %94 = acos(%93) /* ty=Tensor[(12, 2, 1), float32] */;
  %95 = cast(%var_3919, dtype="bool") /* ty=Tensor[(12, 2, 1), bool] */;
  %96 = shape_of(%94, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%94, dtype="bool") /* ty=Tensor[(12, 2, 1), bool] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%97, %98) /* ty=Tensor[(12, 2, ?), bool] */
}

def @func_748(%var_677: Tensor[(7, 16, 15), float64], %var_682: Tensor[(336), float64]) -> (Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(7, 16, 15), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64]) {
  %99 = cast(meta[relay.Constant][3] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %100 = cast(%var_682, dtype="float64") /* ty=Tensor[(336), float64] */;
  %101 = reshape(%99, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %102 = reshape(%100, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %103 = @func_374(%101, %102) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %104 = cast(%var_677, dtype="float64") /* ty=Tensor[(7, 16, 15), float64] */;
  %105 = log10(%104) /* ty=Tensor[(7, 16, 15), float64] */;
  %106 = cast(%var_677, dtype="float64") /* ty=Tensor[(7, 16, 15), float64] */;
  %107 = shape_of(%105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%105, dtype="float64") /* ty=Tensor[(7, 16, 15), float64] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %110 = cast(%var_682, dtype="float64") /* ty=Tensor[(336), float64] */;
  %111 = reshape(%110, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %112 = @func_64(%111) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %113 = %112.0;
  %114 = cast(%113, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %115 = reshape(%114, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %116 = @func_64(%115) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %117 = cast(meta[relay.Constant][3] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %118 = %103.1;
  %119 = cast(%118, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %120 = reshape(%117, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %121 = reshape(%119, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %122 = @func_374(%120, %121) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %123 = cast(%118, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %124 = reshape(%123, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %125 = @func_64(%124) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %126 = cast(meta[relay.Constant][3] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %127 = %125.0;
  %128 = cast(%127, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %129 = reshape(%126, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %130 = reshape(%128, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %131 = @func_374(%129, %130) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %132 = %131.0;
  %133 = cast(%132, dtype="float32") /* ty=Tensor[(9, 14), float32] */;
  %134 = cast(%var_682, dtype="float64") /* ty=Tensor[(336), float64] */;
  %135 = reshape(%133, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %136 = reshape(%134, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %137 = @func_374(%135, %136) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %138 = floor_mod(%108, %109) /* ty=Tensor[(7, 16, 15), float64] */;
  %139 = %116.0;
  %140 = %122.0;
  %141 = %137.1;
  (%118, meta[relay.Constant][3] /* ty=Tensor[(126), float32] */, %var_682, %138, %113, %139, %140, %127, %132, %141)
}

def @func_2543(%var_2454: Tensor[(20), float32], %var_2533: Tensor[(84), bool]) -> (Tensor[(13, 8), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(16, 7, 3), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(13, 8), float32]) {
  %142 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %143 = cast(%var_2454, dtype="float32") /* ty=Tensor[(20), float32] */;
  %144 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %145 = cast(%var_2454, dtype="float32") /* ty=Tensor[(20), float32] */;
  %146 = reshape(%145, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %147 = @func_800(%146) /* ty=(Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %148 = %147.1;
  %149 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 7, 3), float64] */, dtype="bool") /* ty=Tensor[(16, 7, 3), bool] */;
  %150 = shape_of(%148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%148, dtype="bool") /* ty=Tensor[(16, 7, 3), bool] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %153 = cast(%var_2533, dtype="bool") /* ty=Tensor[(84), bool] */;
  %154 = reshape(%153, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), bool] */;
  %155 = %142.2;
  %156 = sqrt(%143) /* ty=Tensor[(20), float32] */;
  %157 = %144.1;
  %158 = greater(%151, %152) /* ty=Tensor[(16, 7, 3), bool] */;
  %159 = @func_956(%154) /* ty=Tensor[(2, 6, 7), bool] */;
  %160 = @func_2287() /* ty=Tensor[(13, 8), float32] */;
  (%155, %156, %157, %158, %159, %var_2533, %160)
}

def @func_374(%var_301: Tensor[(9, 14), float32], %var_320: Tensor[(336), float64]) -> (Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) {
  %161 = cast(%var_301, dtype="float32") /* ty=Tensor[(9, 14), float32] */;
  %162 = cast(%var_320, dtype="float64") /* ty=Tensor[(336), float64] */;
  %163 = reshape(%162, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %164 = @func_64(%163) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %165 = cast(%var_320, dtype="float64") /* ty=Tensor[(336), float64] */;
  %166 = reshape(%165, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %167 = @func_64(%166) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %168 = %164.0;
  %169 = cast(%168, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %170 = reshape(%169, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %171 = @func_64(%170) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %172 = exp(%161) /* ty=Tensor[(9, 14), float32] */;
  %173 = %167.0;
  %174 = %171.0;
  (%172, %168, %var_320, %173, %174)
}

def @func_5813() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(126), float32]) {
  %175 = @func_3783() /* ty=(Tensor[(13, 8), float32],) */;
  %176 = cast(meta[relay.Constant][5] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %177 = reshape(%176, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %178 = @func_3684(%177) /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32], Tensor[(126), float32]) */;
  %179 = %175.0;
  %180 = @func_1900() /* ty=Tensor[(13, 8), float32] */;
  %181 = %178.3;
  (%179, %180, %181, meta[relay.Constant][5] /* ty=Tensor[(126), float32] */)
}

def @func_6481() -> (Tensor[(13, 8), float32],) {
  %182 = @func_3374() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %183 = %182.1;
  (%183,)
}

def @func_7193() -> Tensor[(4, 16, 15), float32] {
  %184 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %184.1
}

def @func_7642(%var_7620: Tensor[(4, 16, 15), float32], %var_7630: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), int8], Tensor[(13, 8), float32]) {
  %185 = @func_3272() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %186 = %185.0;
  %187 = cast(%var_7620, dtype="bool") /* ty=Tensor[(4, 16, 15), bool] */;
  %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%186, dtype="bool") /* ty=Tensor[(4, 16, 15), bool] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %191 = @func_5813() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(126), float32]) */;
  %192 = cast(%var_7630, dtype="int8") /* ty=Tensor[(4, 16, 15), int8] */;
  %193 = shape_of(%186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%186, dtype="int8") /* ty=Tensor[(4, 16, 15), int8] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %196 = @func_5730() /* ty=(Tensor[(13, 8), float32],) */;
  %197 = greater(%189, %190) /* ty=Tensor[(4, 16, 15), bool] */;
  %198 = @func_6579() /* ty=Tensor[(13, 8), float32] */;
  %199 = %191.0;
  %200 = multiply(%194, %195) /* ty=Tensor[(4, 16, 15), int8] */;
  %201 = %196.0;
  (%197, %198, %199, %200, %201)
}

def @func_7335() -> Tensor[(4, 16, 8), float32] {
  %202 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 16, 8), float32] */, dtype="float32") /* ty=Tensor[(4, 16, 8), float32] */;
  log10(%202) /* ty=Tensor[(4, 16, 8), float32] */
}

def @func_7804(%var_7796: Tensor[(2240), float32]) -> (Tensor[(4, 16, 8), float32], Tensor[(14, 16, 10), float32], Tensor[(2240), float32]) {
  %203 = cast(%var_7796, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %204 = reshape(%203, newshape=[14, 16, 10]) /* ty=Tensor[(14, 16, 10), float32] */;
  %205 = @func_6693(%204) /* ty=(Tensor[(14, 16, 10), float32],) */;
  %206 = @func_7335() /* ty=Tensor[(4, 16, 8), float32] */;
  %207 = %205.0;
  (%206, %207, %var_7796)
}

def @func_1577() -> Tensor[(13, 8), float32] {
  %208 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 8), float32] */;
  asinh(%208) /* ty=Tensor[(13, 8), float32] */
}

def @func_2798() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) {
  %209 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
  %210 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
  %211 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %212 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %213 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %214 = %209.0;
  %215 = %210.0;
  %216 = %211.2;
  %217 = %212.0;
  %218 = %213.1;
  (%214, %215, %216, %217, %218)
}

def @func_3684(%var_3644: Tensor[(126), float32]) -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32], Tensor[(126), float32]) {
  %219 = @func_3359() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %220 = cast(%var_3644, dtype="float32") /* ty=Tensor[(126), float32] */;
  %221 = cast(meta[relay.Constant][8] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %222 = reshape(%220, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %223 = reshape(%221, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %224 = @func_374(%222, %223) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %225 = cast(meta[relay.Constant][8] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %226 = reshape(%225, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %227 = @func_64(%226) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %228 = @func_3359() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %229 = @func_1709() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) */;
  %230 = %219.1;
  %231 = %224.1;
  %232 = %227.0;
  %233 = %228.0;
  %234 = %229.2;
  (%230, %231, %var_3644, meta[relay.Constant][8] /* ty=Tensor[(336), float64] */, %232, %233, %234)
}

def @func_3783() -> (Tensor[(13, 8), float32],) {
  %235 = @func_3214() /* ty=(Tensor[(13, 8), float32],) */;
  %236 = %235.0;
  (%236,)
}

def @func_5028(%var_4965: Tensor[(20), float32], %var_4970: Tensor[(4, 16, 15), float32], %var_5005: Tensor[(4, 16, 15), float32]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(4, 16, 15), float32]) {
  %237 = cast(%var_4965, dtype="float32") /* ty=Tensor[(20), float32] */;
  %238 = reshape(%237, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %239 = @func_800(%238) /* ty=(Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %240 = @func_3065() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %241 = %240.0;
  %242 = cast(%241, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %243 = rsqrt(%242) /* ty=Tensor[(4, 16, 15), float64] */;
  %244 = cast(%243, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
  %245 = atan(%244) /* ty=Tensor[(4, 16, 15), float32] */;
  %246 = cast(%var_5005, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
  %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%245, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %250 = cast(%var_4970, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %251 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%241, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %254 = floor_divide(%252, %253) /* ty=Tensor[(4, 16, 15), float64] */;
  %255 = cast(%254, dtype="uint16") /* ty=Tensor[(4, 16, 15), uint16] */;
  %256 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%245, dtype="uint16") /* ty=Tensor[(4, 16, 15), uint16] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %259 = bitwise_xor(%257, %258) /* ty=Tensor[(4, 16, 15), uint16] */;
  %260 = cast(%259, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
  %261 = @func_4702() /* ty=Tensor[(13, 8), float32] */;
  %262 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %263 = %239.0;
  %264 = divide(%248, %249) /* ty=Tensor[(4, 16, 15), float32] */;
  %265 = cosh(%260) /* ty=Tensor[(4, 16, 15), float32] */;
  (%261, %262, %263, %var_4965, %264, %265)
}

def @main() -> Tensor[(11, 1, 12), float64] {
  %266 = @func_4316() /* ty=(Tensor[(11, 1, 12), float32],) */;
  %267 = %266.0;
  %268 = cast(%267, dtype="float64") /* ty=Tensor[(11, 1, 12), float64] */;
  sin(%268) /* ty=Tensor[(11, 1, 12), float64] */
}

def @func_800(%var_789: Tensor[(4, 1, 5), float32]) -> (Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) {
  %269 = cast(%var_789, dtype="float32") /* ty=Tensor[(4, 1, 5), float32] */;
  %270 = cast(meta[relay.Constant][9] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %271 = reshape(%270, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %272 = @func_64(%271) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %273 = log10(%269) /* ty=Tensor[(4, 1, 5), float32] */;
  %274 = %272.0;
  (%273, %274, meta[relay.Constant][9] /* ty=Tensor[(336), float64] */)
}

def @func_2287() -> Tensor[(13, 8), float32] {
  %275 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
  %275.0
}

def @func_3862(%var_3827: Tensor[(6, 2, 16), float64]) -> (Tensor[(6, 2, 16), float64], Tensor[(6, 2, 16), uint8]) {
  %276 = cast(%var_3827, dtype="float64") /* ty=Tensor[(6, 2, 16), float64] */;
  %277 = cast(%var_3827, dtype="float32") /* ty=Tensor[(6, 2, 16), float32] */;
  %278 = acosh(%277) /* ty=Tensor[(6, 2, 16), float32] */;
  %279 = cast(%var_3827, dtype="uint8") /* ty=Tensor[(6, 2, 16), uint8] */;
  %280 = shape_of(%278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%278, dtype="uint8") /* ty=Tensor[(6, 2, 16), uint8] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %283 = atan(%276) /* ty=Tensor[(6, 2, 16), float64] */;
  %284 = maximum(%281, %282) /* ty=Tensor[(6, 2, 16), uint8] */;
  (%283, %284)
}

def @func_8158() -> (Tensor[(13, 8), float32],) {
  %285 = @func_6832() /* ty=Tensor[(13, 8), float32] */;
  (%285,)
}

def @func_8675() -> Tensor[(16, 10, 16), float64] {
  %286 = @func_6044() /* ty=(Tensor[(16, 10, 16), float64],) */;
  %286.0
}

def @func_5323(%var_5313: Tensor[(336), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) {
  %287 = @func_3257() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %288 = @func_3359() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %289 = cast(%var_5313, dtype="float64") /* ty=Tensor[(336), float64] */;
  %290 = reshape(%289, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %291 = @func_64(%290) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %292 = %287.1;
  %293 = %288.0;
  %294 = %291.0;
  (%292, %293, %294, %var_5313)
}

def @func_7260(%var_7209: Tensor[(3, 15, 14), float32]) -> (Tensor[(13, 8), float32], Tensor[(3, 15, 14), int64], Tensor[(12, 2, ?), bool], Tensor[(24), float32]) {
  %295 = cast(%var_7209, dtype="float32") /* ty=Tensor[(3, 15, 14), float32] */;
  %296 = acos(%295) /* ty=Tensor[(3, 15, 14), float32] */;
  %297 = cast(%296, dtype="int64") /* ty=Tensor[(3, 15, 14), int64] */;
  %298 = shape_of(%var_7209, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%var_7209, dtype="int64") /* ty=Tensor[(3, 15, 14), int64] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %301 = cast(meta[relay.Constant][10] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %302 = reshape(%301, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float32] */;
  %303 = @func_3438() /* ty=Tensor[(13, 8), float32] */;
  %304 = maximum(%299, %300) /* ty=Tensor[(3, 15, 14), int64] */;
  %305 = @func_3937(%302) /* ty=Tensor[(12, 2, ?), bool] */;
  (%303, %304, %305, meta[relay.Constant][10] /* ty=Tensor[(24), float32] */)
}

def @func_4880(%var_4734: Tensor[(12, 1, 1), float64], %var_4775: Tensor[(20), float32], %var_4811: Tensor[(2560), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(2560), float64], Tensor[(12, 1, 1), float64], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(12, ?, ?), float64]) {
  %306 = @func_4473() /* ty=(Tensor[(13, 8), float32],) */;
  %307 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
  %308 = cast(%var_4775, dtype="float32") /* ty=Tensor[(20), float32] */;
  %309 = reshape(%308, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %310 = @func_800(%309) /* ty=(Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %311 = cast(%var_4811, dtype="float64") /* ty=Tensor[(2560), float64] */;
  %312 = reshape(%311, newshape=[16, 10, 16]) /* ty=Tensor[(16, 10, 16), float64] */;
  %313 = cast(%var_4734, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %314 = log(%313) /* ty=Tensor[(12, 1, 1), float64] */;
  %315 = cast(%314, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %316 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
  %317 = @func_3629() /* ty=(Tensor[(16, 10, 16), float64],) */;
  %318 = cast(%314, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %319 = rsqrt(%318) /* ty=Tensor[(12, 1, 1), float64] */;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(12, 1, 1), float32] */;
  %321 = sqrt(%320) /* ty=Tensor[(12, 1, 1), float32] */;
  %322 = cast(%321, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %323 = acosh(%322) /* ty=Tensor[(12, 1, 1), float64] */;
  %324 = cast(%323, dtype="float32") /* ty=Tensor[(12, 1, 1), float32] */;
  %325 = tan(%324) /* ty=Tensor[(12, 1, 1), float32] */;
  %326 = cast(%321, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %327 = sin(%326) /* ty=Tensor[(12, 1, 1), float64] */;
  %328 = cast(%327, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %329 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%325, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %332 = %306.0;
  %333 = %307.0;
  %334 = %310.0;
  %335 = @func_4702() /* ty=Tensor[(13, 8), float32] */;
  %336 = @func_1227(%312) /* ty=Tensor[(16, 10, 16), float64] */;
  %337 = log10(%315) /* ty=Tensor[(12, 1, 1), float64] */;
  %338 = %316.0;
  %339 = %317.0;
  %340 = divide(%330, %331) /* ty=Tensor[(12, ?, ?), float64] */;
  (%332, %333, %334, %var_4775, %335, %336, %var_4811, %337, %338, %339, %340)
}

def @func_1969(%var_1920: Tensor[(1680), float64], %var_1921: Tensor[(1, 336), float64], %var_1941: Tensor[(11, 336), float64], %var_1961: Tensor[(11, 336), bool]) -> (Tensor[(13, 8), float32], Tensor[(7, 16, 15), float64], Tensor[(1680), float64], Tensor[(11, 336), int64]) {
  %341 = cast(%var_1920, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %342 = cast(%var_1921, dtype="float64") /* ty=Tensor[(1, 336), float64] */;
  %343 = reshape(%341, newshape=[7, 16, 15]) /* ty=Tensor[(7, 16, 15), float64] */;
  %344 = reshape(%342, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %345 = @func_748(%343, %344) /* ty=(Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(7, 16, 15), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64]) */;
  %346 = cast(%var_1921, dtype="bool") /* ty=Tensor[(1, 336), bool] */;
  %347 = cast(%var_1941, dtype="bool") /* ty=Tensor[(11, 336), bool] */;
  %348 = less(%346, %347) /* ty=Tensor[(11, 336), bool] */;
  %349 = cast(%var_1961, dtype="int64") /* ty=Tensor[(11, 336), int64] */;
  %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(2), int32] */;
  %351 = cast(%348, dtype="int64") /* ty=Tensor[(11, 336), int64] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %353 = @func_1900() /* ty=Tensor[(13, 8), float32] */;
  %354 = %345.3;
  %355 = right_shift(%351, %352) /* ty=Tensor[(11, 336), int64] */;
  (%353, %354, %var_1920, %355)
}

def @func_5882() -> Tensor[(336), float64] {
  %356 = @func_4427() /* ty=(Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) */;
  %356.0
}

def @func_64(%var_37: Tensor[(16, 7, 3), float64]) -> (Tensor[(16, 7, 3), float64],) {
  %357 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %358 = shape_of(%var_37, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_37, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %361 = divide(%359, %360) /* ty=Tensor[(16, 7, 3), float64] */;
  (%361,)
}

def @func_4427() -> (Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) {
  %362 = @func_2411() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %363 = @func_1709() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) */;
  %364 = %363.3;
  %365 = cast(meta[relay.Constant][12] /* ty=Tensor[(336), float64] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(1), int32] */;
  %367 = cast(%364, dtype="bool") /* ty=Tensor[(336), bool] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?), bool] */;
  %369 = @func_4281() /* ty=(Tensor[(11, 1, 12), float32],) */;
  %370 = %362.2;
  %371 = less(%367, %368) /* ty=Tensor[(336), bool] */;
  %372 = %369.0;
  (%370, %371, %372)
}

def @func_4702() -> Tensor[(13, 8), float32] {
  @func_3438() /* ty=Tensor[(13, 8), float32] */
}

def @func_2848(%var_2817: Tensor[(10, 5, 7), int64], %var_2818: Tensor[(10, 5, 7), int64], %var_2827: Tensor[(3, 42), float32]) -> (Tensor[(10, 5, 7), bool], Tensor[(3, 42), float32], Tensor[(16, 7, 3), float32]) {
  %373 = cast(%var_2818, dtype="bool") /* ty=Tensor[(10, 5, 7), bool] */;
  %374 = shape_of(%var_2817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%var_2817, dtype="bool") /* ty=Tensor[(10, 5, 7), bool] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %377 = cast(%var_2827, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %378 = reshape(%377, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %379 = @func_2639(%378) /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64]) */;
  %380 = %379.1;
  %381 = cast(%380, dtype="float32") /* ty=Tensor[(16, 7, 3), float32] */;
  %382 = not_equal(%375, %376) /* ty=Tensor[(10, 5, 7), bool] */;
  %383 = asin(%381) /* ty=Tensor[(16, 7, 3), float32] */;
  (%382, %var_2827, %383)
}

def @func_4473() -> (Tensor[(13, 8), float32],) {
  %384 = @func_2936() /* ty=(Tensor[(13, 8), float32],) */;
  %385 = %384.0;
  (%385,)
}

def @func_6268(%var_6254: Tensor[(660), int64]) -> (Tensor[(13, 8), float32], Tensor[(168, 2), uint64], Tensor[(12, 5, 11), int64], Tensor[(660), int64]) {
  %386 = @func_2798() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) */;
  %387 = @func_5882() /* ty=Tensor[(336), float64] */;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(336), float64] */;
  %389 = reshape(%388, newshape=[168, 2]) /* ty=Tensor[(168, 2), float64] */;
  %390 = @func_2706(%389) /* ty=(Tensor[(13, 8), float32], Tensor[(168, 2), bool]) */;
  %391 = %390.1;
  %392 = cast(%387, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %393 = shape_of(%391, dtype="int32") /* ty=Tensor[(2), int32] */;
  %394 = cast(%391, dtype="uint64") /* ty=Tensor[(168, 2), uint64] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %396 = cast(%var_6254, dtype="int64") /* ty=Tensor[(660), int64] */;
  %397 = cast(%var_6254, dtype="int64") /* ty=Tensor[(660), int64] */;
  %398 = reshape(%396, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
  %399 = reshape(%397, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
  %400 = %386.2;
  %401 = bitwise_and(%394, %395) /* ty=Tensor[(168, 2), uint64] */;
  %402 = @func_1411(%398, %399) /* ty=Tensor[(12, 5, 11), int64] */;
  (%400, %401, %402, %var_6254)
}

def @func_3438() -> Tensor[(13, 8), float32] {
  %403 = @func_3257() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %403.1
}

def @func_5679(%var_5670: Tensor[(216, 2), int8]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(126), float32], Tensor[(36), int8], Tensor[(216, 2), int8], Tensor[(3, 42), float32], Tensor[(13, 8), float32]) {
  %404 = @func_2436() /* ty=(Tensor[(13, 8), float32],) */;
  %405 = @func_2436() /* ty=(Tensor[(13, 8), float32],) */;
  %406 = @func_5304() /* ty=(Tensor[(336), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %407 = cast(meta[relay.Constant][13] /* ty=Tensor[(36), int8] */, dtype="int8") /* ty=Tensor[(36), int8] */;
  %408 = cast(%var_5670, dtype="int8") /* ty=Tensor[(216, 2), int8] */;
  %409 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 42), float32] */, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %410 = reshape(%407, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), int8] */;
  %411 = reshape(%408, newshape=[12, 6, 6]) /* ty=Tensor[(12, 6, 6), int8] */;
  %412 = reshape(%409, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %413 = @func_924(%410, %411, %412) /* ty=(Tensor[(12, 6, 6), int8], Tensor[(1, 6, 6), float32], Tensor[(9, 14), float32], Tensor[(126), float32], Tensor[(336), float64]) */;
  %414 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 42), float32] */, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %415 = reshape(%414, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %416 = @func_3684(%415) /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32], Tensor[(126), float32]) */;
  %417 = %404.0;
  %418 = %405.0;
  %419 = %406.2;
  %420 = %413.3;
  %421 = %416.5;
  (%417, %418, %419, %420, meta[relay.Constant][13] /* ty=Tensor[(36), int8] */, %var_5670, meta[relay.Constant][14] /* ty=Tensor[(3, 42), float32] */, %421)
}

def @func_6512() -> (Tensor[(1, 12, 1), float32],) {
  %422 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 12, 1), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 1), float32] */;
  %423 = atan(%422) /* ty=Tensor[(1, 12, 1), float32] */;
  (%423,)
}

def @func_6707(%var_6698: Tensor[(6, 6, 4), int8]) -> Tensor[(6, 6, 4), int8] {
  %424 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 6, 4), int8] */, dtype="int8") /* ty=Tensor[(6, 6, 4), int8] */;
  %425 = shape_of(%var_6698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%var_6698, dtype="int8") /* ty=Tensor[(6, 6, 4), int8] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%426, %427) /* ty=Tensor[(6, 6, 4), int8] */
}

def @func_7552() -> Tensor[(13, 8), float32] {
  @func_5855() /* ty=Tensor[(13, 8), float32] */
}

def @func_8179(%var_8174: Tensor[(3, 12, 2), int64]) -> (Tensor[(3, 12, 2), int64],) {
  %428 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 12, 1), int64] */, dtype="int64") /* ty=Tensor[(3, 12, 1), int64] */;
  %429 = cast(%var_8174, dtype="int64") /* ty=Tensor[(3, 12, 2), int64] */;
  %430 = left_shift(%428, %429) /* ty=Tensor[(3, 12, 2), int64] */;
  (%430,)
}

def @func_5538(%var_5509: Tensor[(16, 10, 16), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(16, 10, 16), int16], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %431 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %432 = @func_1709() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) */;
  %433 = %432.4;
  %434 = cast(%var_5509, dtype="int16") /* ty=Tensor[(16, 10, 16), int16] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="int16") /* ty=Tensor[(16, 10, 16), int16] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %438 = %431.1;
  %439 = @func_3400() /* ty=Tensor[(13, 8), float32] */;
  %440 = bitwise_or(%436, %437) /* ty=Tensor[(16, 10, 16), int16] */;
  %441 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %442 = @func_3400() /* ty=Tensor[(13, 8), float32] */;
  (%438, %439, %440, %441, %442)
}

def @func_3374() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %443 = @func_3257() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %444 = @func_2936() /* ty=(Tensor[(13, 8), float32],) */;
  %445 = %443.0;
  %446 = %444.0;
  (%445, %446)
}

def @func_3400() -> Tensor[(13, 8), float32] {
  @func_2287() /* ty=Tensor[(13, 8), float32] */
}

def @func_7436(%var_7425: Tensor[(4, 420), float64]) -> (Tensor[(336), float64], Tensor[(13, 8), float32], Tensor[(660), int64], Tensor[(5, 132), int64], Tensor[(16, 7, 3), float64], Tensor[(4, 420), float64]) {
  %447 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 132), int64] */, dtype="int64") /* ty=Tensor[(5, 132), int64] */;
  %448 = reshape(%447, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %449 = @func_6268(%448) /* ty=(Tensor[(13, 8), float32], Tensor[(168, 2), uint64], Tensor[(12, 5, 11), int64], Tensor[(660), int64]) */;
  %450 = cast(%var_7425, dtype="float64") /* ty=Tensor[(4, 420), float64] */;
  %451 = @func_5882() /* ty=Tensor[(336), float64] */;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(336), float64] */;
  %453 = reshape(%450, newshape=[7, 16, 15]) /* ty=Tensor[(7, 16, 15), float64] */;
  %454 = reshape(%452, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %455 = @func_748(%453, %454) /* ty=(Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(7, 16, 15), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64]) */;
  %456 = @func_6579() /* ty=Tensor[(13, 8), float32] */;
  %457 = %449.3;
  %458 = %455.0;
  (%451, %456, %457, meta[relay.Constant][18] /* ty=Tensor[(5, 132), int64] */, %458, %var_7425)
}

def @func_3272() -> (Tensor[(4, 16, 15), float32],) {
  %459 = @func_3065() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %460 = %459.0;
  (%460,)
}

def @func_1900() -> Tensor[(13, 8), float32] {
  %461 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
  %461.0
}

def @func_7504() -> (Tensor[(12, 16, 6), bool],) {
  %462 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 16, 6), bool] */, dtype="bool") /* ty=Tensor[(12, 16, 6), bool] */;
  %463 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(12, 16, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(meta[relay.Constant][19] /* ty=Tensor[(12, 16, 6), bool] */, dtype="bool") /* ty=Tensor[(12, 16, 6), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %466 = logical_or(%464, %465) /* ty=Tensor[(12, 16, 6), bool] */;
  (%466,)
}

def @func_7039(%var_7026: Tensor[(240), uint8], %var_7027: Tensor[(432), int8], %var_7028: Tensor[(126), float32], %var_7031: Tensor[(2560), float64], %var_7036: Tensor[(168), float64]) -> (Tensor[(13, 8), float32], Tensor[(12, 10, 2), bool], Tensor[(240), uint8], Tensor[(432), int8], Tensor[(126), float32], Tensor[(12), float64], Tensor[(20), float32], Tensor[(2560), float64], Tensor[(13, 8), float32], Tensor[(168), float64]) {
  %467 = @func_5335() /* ty=(Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %468 = cast(%var_7026, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %469 = cast(%var_7026, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %470 = cast(%var_7027, dtype="int8") /* ty=Tensor[(432), int8] */;
  %471 = cast(%var_7028, dtype="float32") /* ty=Tensor[(126), float32] */;
  %472 = cast(meta[relay.Constant][21] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %473 = cast(meta[relay.Constant][22] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %474 = cast(%var_7031, dtype="float64") /* ty=Tensor[(2560), float64] */;
  %475 = reshape(%468, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), uint8] */;
  %476 = reshape(%469, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), uint8] */;
  %477 = reshape(%470, newshape=[432]) /* ty=Tensor[(432), int8] */;
  %478 = reshape(%471, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %479 = reshape(%472, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %480 = reshape(%473, newshape=[10, 2]) /* ty=Tensor[(10, 2), float32] */;
  %481 = reshape(%474, newshape=[2560]) /* ty=Tensor[(2560), float64] */;
  %482 = @func_5215(%475, %476, %477, %478, %479, %480, %481) /* ty=(Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(336), float64], Tensor[(36), int8], Tensor[(432), int8], Tensor[(126), float32], Tensor[(12), float64], Tensor[(10, 2), float32], Tensor[(2560), float64], Tensor[(16, 7, 3), float64], Tensor[(12, 13, 8), bool]) */;
  %483 = cast(%var_7036, dtype="float64") /* ty=Tensor[(168), float64] */;
  %484 = reshape(%483, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), float64] */;
  %485 = @func_5099(%484) /* ty=(Tensor[(2, 12, 7), float64], Tensor[(13, 8), float32]) */;
  %486 = %467.1;
  %487 = %482.2;
  %488 = %485.1;
  (%486, %487, %var_7026, %var_7027, %var_7028, meta[relay.Constant][21] /* ty=Tensor[(12), float64] */, meta[relay.Constant][22] /* ty=Tensor[(20), float32] */, %var_7031, %488, %var_7036)
}

def @func_4652() -> (Tensor[(13, 8), float32],) {
  %489 = @func_2436() /* ty=(Tensor[(13, 8), float32],) */;
  %490 = %489.0;
  (%490,)
}

def @func_3043() -> Tensor[(13, 8), float32] {
  @func_1900() /* ty=Tensor[(13, 8), float32] */
}

def @func_1588() -> (Tensor[(13, 8), float32],) {
  %491 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  (%491,)
}

def @func_2365(%var_2346: Tensor[(12, 3, 9), uint32], %var_2347: Tensor[(12, 3, 9), uint32]) -> (Tensor[(12, 3, 9), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(12, 3, 9), float32]) {
  %492 = cast(%var_2347, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
  %493 = shape_of(%var_2346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%var_2346, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %496 = cast(meta[relay.Constant][23] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %497 = reshape(%496, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), bool] */;
  %498 = cast(%var_2346, dtype="float32") /* ty=Tensor[(12, 3, 9), float32] */;
  %499 = shape_of(%var_2347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%var_2347, dtype="float32") /* ty=Tensor[(12, 3, 9), float32] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %502 = greater_equal(%494, %495) /* ty=Tensor[(12, 3, 9), bool] */;
  %503 = @func_956(%497) /* ty=Tensor[(2, 6, 7), bool] */;
  %504 = power(%500, %501) /* ty=Tensor[(12, 3, 9), float32] */;
  (%502, %503, meta[relay.Constant][23] /* ty=Tensor[(84), bool] */, %504)
}

def @func_7889(%var_7861: Tensor[(4, 7), float32], %var_7882: Tensor[(2240, 1), float32]) -> (Tensor[(4, 7), float32], Tensor[(4, 16, 8), float32], Tensor[(2240, 1), float32]) {
  %505 = cast(%var_7861, dtype="float32") /* ty=Tensor[(4, 7), float32] */;
  %506 = cast(%var_7882, dtype="float32") /* ty=Tensor[(2240, 1), float32] */;
  %507 = reshape(%506, newshape=[2240]) /* ty=Tensor[(2240), float32] */;
  %508 = @func_7804(%507) /* ty=(Tensor[(4, 16, 8), float32], Tensor[(14, 16, 10), float32], Tensor[(2240), float32]) */;
  %509 = log(%505) /* ty=Tensor[(4, 7), float32] */;
  %510 = %508.0;
  (%509, %510, %var_7882)
}

def @func_3521(%var_3491: Tensor[(126), float32], %var_3492: Tensor[(132, 1), uint16], %var_3500: Tensor[(132, 3), uint16]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], uint16, Tensor[(22), uint16], Tensor[(126), float32], Tensor[(132, 3), bool], Tensor[(132, 3), float64]) {
  %511 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %512 = cast(meta[relay.Constant][25] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %513 = cast(%var_3491, dtype="float32") /* ty=Tensor[(126), float32] */;
  %514 = cast(%var_3492, dtype="uint16") /* ty=Tensor[(132, 1), uint16] */;
  %515 = reshape(%511, newshape=[]) /* ty=uint16 */;
  %516 = reshape(%512, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), uint16] */;
  %517 = reshape(%513, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %518 = reshape(%514, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint16] */;
  %519 = @func_1857(%515, %516, %517, %518) /* ty=(Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(6, 2, 11), bool], Tensor[(12, 5, 11), int64], Tensor[(1, 660), int64]) */;
  %520 = cast(%var_3492, dtype="bool") /* ty=Tensor[(132, 1), bool] */;
  %521 = cast(%var_3500, dtype="bool") /* ty=Tensor[(132, 3), bool] */;
  %522 = cast(%var_3500, dtype="float64") /* ty=Tensor[(132, 3), float64] */;
  %523 = acosh(%522) /* ty=Tensor[(132, 3), float64] */;
  %524 = cast(%523, dtype="float64") /* ty=Tensor[(132, 3), float64] */;
  %525 = cast(%var_3492, dtype="float64") /* ty=Tensor[(132, 1), float64] */;
  %526 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %527 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %528 = %519.2;
  %529 = not_equal(%520, %521) /* ty=Tensor[(132, 3), bool] */;
  %530 = mod(%524, %525) /* ty=Tensor[(132, 3), float64] */;
  (%526, %527, %528, meta[relay.Constant][24] /* ty=uint16 */, meta[relay.Constant][25] /* ty=Tensor[(22), uint16] */, %var_3491, %529, %530)
}

def @func_4039(%var_4033: Tensor[(192), float64]) -> (Tensor[(13, 8), float32], Tensor[(6, 2, 16), float64], Tensor[(192), float64]) {
  %531 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %532 = cast(%var_4033, dtype="float64") /* ty=Tensor[(192), float64] */;
  %533 = reshape(%532, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), float64] */;
  %534 = @func_3862(%533) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(6, 2, 16), uint8]) */;
  %535 = %531.1;
  %536 = %534.0;
  (%535, %536, %var_4033)
}

def @func_6300() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %537 = @func_4652() /* ty=(Tensor[(13, 8), float32],) */;
  %538 = @func_3214() /* ty=(Tensor[(13, 8), float32],) */;
  %539 = %537.0;
  %540 = %538.0;
  (%539, %540)
}

def @func_2936() -> (Tensor[(13, 8), float32],) {
  %541 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
  %542 = %541.0;
  (%542,)
}

def @func_4588(%var_4560: Tensor[(24), float32]) -> (Tensor[(13, 8), float32], Tensor[(12, 2, ?), bool], Tensor[(24), float32], Tensor[(12, 3, 9), float32], Tensor[(324), uint32], Tensor[(336), bool]) {
  %543 = cast(%var_4560, dtype="float32") /* ty=Tensor[(24), float32] */;
  %544 = reshape(%543, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float32] */;
  %545 = cast(meta[relay.Constant][26] /* ty=Tensor[(324), uint32] */, dtype="uint32") /* ty=Tensor[(324), uint32] */;
  %546 = cast(meta[relay.Constant][26] /* ty=Tensor[(324), uint32] */, dtype="uint32") /* ty=Tensor[(324), uint32] */;
  %547 = reshape(%545, newshape=[12, 3, 9]) /* ty=Tensor[(12, 3, 9), uint32] */;
  %548 = reshape(%546, newshape=[12, 3, 9]) /* ty=Tensor[(12, 3, 9), uint32] */;
  %549 = @func_2365(%547, %548) /* ty=(Tensor[(12, 3, 9), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(12, 3, 9), float32]) */;
  %550 = @func_4427() /* ty=(Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) */;
  %551 = @func_3043() /* ty=Tensor[(13, 8), float32] */;
  %552 = @func_3937(%544) /* ty=Tensor[(12, 2, ?), bool] */;
  %553 = %549.3;
  %554 = %550.1;
  (%551, %552, %var_4560, %553, meta[relay.Constant][26] /* ty=Tensor[(324), uint32] */, %554)
}

def @func_5099(%var_5079: Tensor[(2, 12, 7), float64]) -> (Tensor[(2, 12, 7), float64], Tensor[(13, 8), float32]) {
  %555 = cast(-3.7275f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %556 = cast(%var_5079, dtype="float64") /* ty=Tensor[(2, 12, 7), float64] */;
  %557 = @func_3359() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %558 = power(%555, %556) /* ty=Tensor[(2, 12, 7), float64] */;
  %559 = %557.1;
  (%558, %559)
}

def @func_3002(%var_2974: Tensor[(336), float64], %var_2975: Tensor[(3696), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(2, 840), float64], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(16, 7, 3), float64], Tensor[(2560), bool]) {
  %560 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %561 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 840), float64] */, dtype="float64") /* ty=Tensor[(2, 840), float64] */;
  %562 = cast(%var_2974, dtype="float64") /* ty=Tensor[(336), float64] */;
  %563 = cast(%var_2975, dtype="float64") /* ty=Tensor[(3696), float64] */;
  %564 = cast(%var_2975, dtype="bool") /* ty=Tensor[(3696), bool] */;
  %565 = reshape(%561, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %566 = reshape(%562, newshape=[1, 336]) /* ty=Tensor[(1, 336), float64] */;
  %567 = reshape(%563, newshape=[11, 336]) /* ty=Tensor[(11, 336), float64] */;
  %568 = reshape(%564, newshape=[11, 336]) /* ty=Tensor[(11, 336), bool] */;
  %569 = @func_1969(%565, %566, %567, %568) /* ty=(Tensor[(13, 8), float32], Tensor[(7, 16, 15), float64], Tensor[(1680), float64], Tensor[(11, 336), int64]) */;
  %570 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 840), float64] */, dtype="float64") /* ty=Tensor[(2, 840), float64] */;
  %571 = cast(%var_2974, dtype="float64") /* ty=Tensor[(336), float64] */;
  %572 = reshape(%570, newshape=[7, 16, 15]) /* ty=Tensor[(7, 16, 15), float64] */;
  %573 = reshape(%571, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %574 = @func_748(%572, %573) /* ty=(Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(7, 16, 15), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64]) */;
  %575 = cast(meta[relay.Constant][28] /* ty=Tensor[(2560), float64] */, dtype="float64") /* ty=Tensor[(2560), float64] */;
  %576 = reshape(%575, newshape=[16, 10, 16]) /* ty=Tensor[(16, 10, 16), float64] */;
  %577 = @func_1227(%576) /* ty=Tensor[(16, 10, 16), float64] */;
  %578 = cast(%577, dtype="bool") /* ty=Tensor[(16, 10, 16), bool] */;
  %579 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(2560), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %580 = cast(meta[relay.Constant][28] /* ty=Tensor[(2560), float64] */, dtype="bool") /* ty=Tensor[(2560), bool] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?), bool] */;
  %582 = %560.0;
  %583 = %569.0;
  %584 = %574.5;
  %585 = greater_equal(%580, %581) /* ty=Tensor[(2560), bool] */;
  (%582, %583, meta[relay.Constant][27] /* ty=Tensor[(2, 840), float64] */, %var_2974, %var_2975, %584, %585)
}

def @func_6693(%var_6687: Tensor[(14, 16, 10), float32]) -> (Tensor[(14, 16, 10), float32],) {
  %586 = cast(%var_6687, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
  %587 = cosh(%586) /* ty=Tensor[(14, 16, 10), float32] */;
  (%587,)
}

def @func_4263(%var_4244: Tensor[(6, 15, 14), uint16], %var_4261: Tensor[(24, 14), float64]) -> (Tensor[(6, 15, 14), int8], Tensor[(3696), float64], Tensor[(24, 14), float64]) {
  %588 = cast(%var_4244, dtype="uint16") /* ty=Tensor[(6, 15, 14), uint16] */;
  %589 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(6, 15, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 15, 14), uint16] */, dtype="uint16") /* ty=Tensor[(6, 15, 14), uint16] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %592 = multiply(%590, %591) /* ty=Tensor[(6, 15, 14), uint16] */;
  %593 = cast(%592, dtype="int8") /* ty=Tensor[(6, 15, 14), int8] */;
  %594 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(6, 15, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 15, 14), uint16] */, dtype="int8") /* ty=Tensor[(6, 15, 14), int8] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %597 = cast(%var_4261, dtype="float64") /* ty=Tensor[(24, 14), float64] */;
  %598 = reshape(%597, newshape=[168, 2]) /* ty=Tensor[(168, 2), float64] */;
  %599 = @func_3180(%598) /* ty=(Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(168, 2), float32]) */;
  %600 = bitwise_and(%595, %596) /* ty=Tensor[(6, 15, 14), int8] */;
  %601 = %599.2;
  (%600, %601, %var_4261)
}

def @func_5073(%var_5047: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), bool],) {
  %602 = @func_3065() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %603 = %602.0;
  %604 = cast(%var_5047, dtype="bool") /* ty=Tensor[(4, 16, 15), bool] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="bool") /* ty=Tensor[(4, 16, 15), bool] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %608 = logical_and(%606, %607) /* ty=Tensor[(4, 16, 15), bool] */;
  (%608,)
}

def @func_1227(%var_1216: Tensor[(16, 10, 16), float64]) -> Tensor[(16, 10, 16), float64] {
  %609 = cast(%var_1216, dtype="float64") /* ty=Tensor[(16, 10, 16), float64] */;
  %610 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(16, 10, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 16), float64] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%611, %612) /* ty=Tensor[(16, 10, 16), float64] */
}

def @func_8038() -> (Tensor[(13, 8), float32],) {
  %613 = @func_7552() /* ty=Tensor[(13, 8), float32] */;
  (%613,)
}

def @func_6074() -> Tensor[(16, 15, 16), int8] {
  %614 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 15, 16), uint64] */, dtype="uint64") /* ty=Tensor[(16, 15, 16), uint64] */;
  %615 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(16, 15, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 15, 16), uint64] */, dtype="uint64") /* ty=Tensor[(16, 15, 16), uint64] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %618 = subtract(%616, %617) /* ty=Tensor[(16, 15, 16), uint64] */;
  %619 = cast(%618, dtype="int8") /* ty=Tensor[(16, 15, 16), int8] */;
  %620 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(16, 15, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 15, 16), uint64] */, dtype="int8") /* ty=Tensor[(16, 15, 16), int8] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%621, %622) /* ty=Tensor[(16, 15, 16), int8] */
}

def @func_4281() -> (Tensor[(11, 1, 12), float32],) {
  %623 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 1, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 12), float32] */;
  %624 = tan(%623) /* ty=Tensor[(11, 1, 12), float32] */;
  (%624,)
}

def @func_6924(%var_6917: Tensor[(2, 6, 13), int64], %var_6918: Tensor[(2, 6, 13), int64]) -> Tensor[(2, 6, 13), int64] {
  %625 = cast(%var_6918, dtype="int64") /* ty=Tensor[(2, 6, 13), int64] */;
  %626 = shape_of(%var_6917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%var_6917, dtype="int64") /* ty=Tensor[(2, 6, 13), int64] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_and(%627, %628) /* ty=Tensor[(2, 6, 13), int64] */
}

def @func_6631(%var_6624: Tensor[(10, 2), float32], %var_6625: Tensor[(3, 42), float32]) -> (Tensor[(13, 8), float32], Tensor[(84), bool], Tensor[(160), float64], Tensor[(24), float32], Tensor[(10, 2), float32], Tensor[(3, 42), float32]) {
  %629 = @func_3374() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %630 = cast(meta[relay.Constant][34] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %631 = cast(meta[relay.Constant][34] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %632 = cast(meta[relay.Constant][35] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %633 = cast(%var_6624, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
  %634 = cast(%var_6625, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %635 = reshape(%630, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), float64] */;
  %636 = reshape(%631, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), float64] */;
  %637 = reshape(%632, newshape=[1, 24]) /* ty=Tensor[(1, 24), float32] */;
  %638 = reshape(%633, newshape=[5, 4]) /* ty=Tensor[(5, 4), float32] */;
  %639 = reshape(%634, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %640 = @func_4144(%635, %636, %637, %638, %639) /* ty=(Tensor[(1, 24), float32], Tensor[(13, 8), float32], Tensor[(12, 2, 4), bool], Tensor[(5, 4, 8), uint16], Tensor[(2, 6, 7), bool], Tensor[(42, 2), bool], Tensor[(84), bool], Tensor[(5, 4), float32], Tensor[(126), float32], Tensor[(126), float32], Tensor[(5, 4, 8), uint8]) */;
  %641 = %629.0;
  %642 = %640.6;
  (%641, %642, meta[relay.Constant][34] /* ty=Tensor[(160), float64] */, meta[relay.Constant][35] /* ty=Tensor[(24), float32] */, %var_6624, %var_6625)
}

def @func_6579() -> Tensor[(13, 8), float32] {
  %643 = @func_2936() /* ty=(Tensor[(13, 8), float32],) */;
  %643.0
}

def @func_8751(%var_8744: Tensor[(6, 13, 5), float32]) -> Tensor[(6, 13, 5), float32] {
  %644 = cast(%var_8744, dtype="float32") /* ty=Tensor[(6, 13, 5), float32] */;
  sinh(%644) /* ty=Tensor[(6, 13, 5), float32] */
}

def @func_8646() -> (Tensor[(13, 8), float32],) {
  %645 = @func_7770() /* ty=Tensor[(13, 8), float32] */;
  (%645,)
}

def @func_956(%var_945: Tensor[(2, 6, 7), bool]) -> Tensor[(2, 6, 7), bool] {
  %646 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 6, 7), bool] */, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
  %647 = shape_of(%var_945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%var_945, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%648, %649) /* ty=Tensor[(2, 6, 7), bool] */
}

def @func_1709() -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) {
  %650 = cast(meta[relay.Constant][37] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %651 = cast(meta[relay.Constant][38] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %652 = reshape(%650, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %653 = reshape(%651, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %654 = @func_374(%652, %653) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %655 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 640), float64] */, dtype="float64") /* ty=Tensor[(4, 640), float64] */;
  %656 = reshape(%655, newshape=[16, 10, 16]) /* ty=Tensor[(16, 10, 16), float64] */;
  %657 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %658 = %654.3;
  %659 = @func_1227(%656) /* ty=Tensor[(16, 10, 16), float64] */;
  (%657, %658, meta[relay.Constant][37] /* ty=Tensor[(126), float32] */, meta[relay.Constant][38] /* ty=Tensor[(336), float64] */, %659, meta[relay.Constant][39] /* ty=Tensor[(4, 640), float64] */)
}

def @func_8435() -> (Tensor[(126), float32], Tensor[(336), float64], Tensor[(90), float32], Tensor[(720), float32], Tensor[(350), int64], Tensor[(13, 8), float32]) {
  %660 = @func_5813() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(126), float32]) */;
  %661 = cast(meta[relay.Constant][40] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %662 = cast(meta[relay.Constant][41] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %663 = cast(meta[relay.Constant][42] /* ty=Tensor[(350), int64] */, dtype="int64") /* ty=Tensor[(350), int64] */;
  %664 = cast(meta[relay.Constant][41] /* ty=Tensor[(720), float32] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %665 = reshape(%661, newshape=[15, 6, 1]) /* ty=Tensor[(15, 6, 1), float32] */;
  %666 = reshape(%662, newshape=[15, 6, 8]) /* ty=Tensor[(15, 6, 8), float32] */;
  %667 = reshape(%663, newshape=[350]) /* ty=Tensor[(350), int64] */;
  %668 = reshape(%664, newshape=[15, 6, 8]) /* ty=Tensor[(15, 6, 8), float64] */;
  %669 = @func_5412(%665, %666, %667, %668) /* ty=(Tensor[(15, 6, 8), float64], Tensor[(168, 2), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float32], Tensor[(350), int64], Tensor[(126), float32], Tensor[(15, 6, 8), uint64]) */;
  %670 = %660.3;
  %671 = %669.2;
  %672 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  (%670, %671, meta[relay.Constant][40] /* ty=Tensor[(90), float32] */, meta[relay.Constant][41] /* ty=Tensor[(720), float32] */, meta[relay.Constant][42] /* ty=Tensor[(350), int64] */, %672)
}

def @func_2255() -> (Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) {
  %673 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 16, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %674 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 16, 15), float64] */, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
  %675 = @func_1709() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) */;
  %676 = tan(%673) /* ty=Tensor[(4, 16, 15), float64] */;
  %677 = exp(%674) /* ty=Tensor[(4, 16, 15), float32] */;
  %678 = %675.0;
  (%676, %677, %678)
}

def @func_7168() -> Tensor[(13, 8), float32] {
  @func_5855() /* ty=Tensor[(13, 8), float32] */
}

def @func_4144(%var_4047: Tensor[(5, 4, 8), float64], %var_4056: Tensor[(5, 4, 8), float64], %var_4061: Tensor[(1, 24), float32], %var_4116: Tensor[(5, 4), float32], %var_4119: Tensor[(126), float32]) -> (Tensor[(1, 24), float32], Tensor[(13, 8), float32], Tensor[(12, 2, 4), bool], Tensor[(5, 4, 8), uint16], Tensor[(2, 6, 7), bool], Tensor[(42, 2), bool], Tensor[(84), bool], Tensor[(5, 4), float32], Tensor[(126), float32], Tensor[(126), float32], Tensor[(5, 4, 8), uint8]) {
  %679 = @func_2798() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) */;
  %680 = cast(%var_4061, dtype="float32") /* ty=Tensor[(1, 24), float32] */;
  %681 = reshape(%680, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float32] */;
  %682 = @func_3937(%681) /* ty=Tensor[(12, 2, ?), bool] */;
  %683 = cast(%682, dtype="bool") /* ty=Tensor[(12, 2, ?), bool] */;
  %684 = cast(meta[relay.Constant][44] /* ty=Tensor[(12, 2, 4), bool] */, dtype="bool") /* ty=Tensor[(12, 2, 4), bool] */;
  %685 = cast(%var_4056, dtype="int32") /* ty=Tensor[(5, 4, 8), int32] */;
  %686 = shape_of(%var_4047, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%var_4047, dtype="int32") /* ty=Tensor[(5, 4, 8), int32] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %689 = logical_xor(%687, %688) /* ty=Tensor[(5, 4, 8), int32] */;
  %690 = cast(%689, dtype="uint16") /* ty=Tensor[(5, 4, 8), uint16] */;
  %691 = shape_of(%var_4056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%var_4056, dtype="uint16") /* ty=Tensor[(5, 4, 8), uint16] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %694 = cast(meta[relay.Constant][45] /* ty=Tensor[(42, 2), bool] */, dtype="bool") /* ty=Tensor[(42, 2), bool] */;
  %695 = reshape(%694, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), bool] */;
  %696 = cast(%var_4116, dtype="float32") /* ty=Tensor[(5, 4), float32] */;
  %697 = @func_956(%695) /* ty=Tensor[(2, 6, 7), bool] */;
  %698 = cast(%697, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
  %699 = reshape(%696, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %700 = reshape(%698, newshape=[84]) /* ty=Tensor[(84), bool] */;
  %701 = @func_2543(%699, %700) /* ty=(Tensor[(13, 8), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(16, 7, 3), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(13, 8), float32]) */;
  %702 = cast(%var_4119, dtype="float32") /* ty=Tensor[(126), float32] */;
  %703 = reshape(%702, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %704 = @func_2639(%703) /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64]) */;
  %705 = cast(%var_4047, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
  %706 = sin(%705) /* ty=Tensor[(5, 4, 8), float64] */;
  %707 = cast(%689, dtype="uint8") /* ty=Tensor[(5, 4, 8), uint8] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%706, dtype="uint8") /* ty=Tensor[(5, 4, 8), uint8] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %711 = %679.0;
  %712 = greater(%683, %684) /* ty=Tensor[(12, 2, 4), bool] */;
  %713 = right_shift(%692, %693) /* ty=Tensor[(5, 4, 8), uint16] */;
  %714 = %701.5;
  %715 = %704.2;
  %716 = maximum(%709, %710) /* ty=Tensor[(5, 4, 8), uint8] */;
  (%var_4061, %711, %712, %713, %697, meta[relay.Constant][45] /* ty=Tensor[(42, 2), bool] */, %714, %var_4116, %715, %var_4119, %716)
}

def @func_3359() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %717 = @func_2798() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) */;
  %718 = @func_2798() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) */;
  %719 = %717.1;
  %720 = %718.0;
  (%719, %720)
}

def @func_7739() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %721 = @func_6481() /* ty=(Tensor[(13, 8), float32],) */;
  %722 = @func_3783() /* ty=(Tensor[(13, 8), float32],) */;
  %723 = %721.0;
  %724 = %722.0;
  (%723, %724)
}

def @func_2436() -> (Tensor[(13, 8), float32],) {
  %725 = @func_2411() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %726 = %725.0;
  (%726,)
}

def @func_6898() -> Tensor[(13, 8), float32] {
  @func_1577() /* ty=Tensor[(13, 8), float32] */
}

def @func_5990() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %727 = @func_4473() /* ty=(Tensor[(13, 8), float32],) */;
  %728 = @func_1900() /* ty=Tensor[(13, 8), float32] */;
  %729 = %727.0;
  (%728, %729)
}

def @func_3065() -> (Tensor[(4, 16, 15), float32],) {
  %730 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %731 = %730.1;
  (%731,)
}

def @func_5335() -> (Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) {
  %732 = @func_3272() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %733 = @func_3374() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %734 = %732.0;
  %735 = %733.0;
  (%734, %735)
}

def @func_5444(%var_5431: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), float64], Tensor[(13, 8), float32]) {
  %736 = @func_3272() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %737 = %736.0;
  %738 = cast(%var_5431, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %742 = @func_3359() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %743 = mod(%740, %741) /* ty=Tensor[(4, 16, 15), float64] */;
  %744 = %742.0;
  (%743, %744)
}

def @func_1857(%var_1819: uint16, %var_1820: Tensor[(1, 2, 11), uint16], %var_1825: Tensor[(126), float32], %var_1831: Tensor[(6, 2, 11), uint16]) -> (Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(6, 2, 11), bool], Tensor[(12, 5, 11), int64], Tensor[(1, 660), int64]) {
  %745 = cast(%var_1825, dtype="float32") /* ty=Tensor[(126), float32] */;
  %746 = cast(meta[relay.Constant][46] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %747 = reshape(%745, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %748 = reshape(%746, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %749 = @func_374(%747, %748) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %750 = cast(%var_1819, dtype="uint16") /* ty=uint16 */;
  %751 = cast(%var_1820, dtype="uint16") /* ty=Tensor[(1, 2, 11), uint16] */;
  %752 = right_shift(%750, %751) /* ty=Tensor[(1, 2, 11), uint16] */;
  %753 = cast(%752, dtype="bool") /* ty=Tensor[(1, 2, 11), bool] */;
  %754 = cast(%var_1831, dtype="bool") /* ty=Tensor[(6, 2, 11), bool] */;
  %755 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 660), int64] */, dtype="int64") /* ty=Tensor[(1, 660), int64] */;
  %756 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 660), int64] */, dtype="int64") /* ty=Tensor[(1, 660), int64] */;
  %757 = reshape(%755, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
  %758 = reshape(%756, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
  %759 = %749.4;
  %760 = less(%753, %754) /* ty=Tensor[(6, 2, 11), bool] */;
  %761 = @func_1411(%757, %758) /* ty=Tensor[(12, 5, 11), int64] */;
  (%759, %var_1825, meta[relay.Constant][46] /* ty=Tensor[(336), float64] */, %760, %761, meta[relay.Constant][47] /* ty=Tensor[(1, 660), int64] */)
}

def @func_3214() -> (Tensor[(13, 8), float32],) {
  %762 = @func_1900() /* ty=Tensor[(13, 8), float32] */;
  (%762,)
}

def @func_3257() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %763 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %764 = @func_3043() /* ty=Tensor[(13, 8), float32] */;
  %765 = %763.0;
  (%764, %765)
}

def @func_6044() -> (Tensor[(16, 10, 16), float64],) {
  %766 = @func_4516() /* ty=(Tensor[(16, 7, 3), float64], Tensor[(16, 10, 16), float64], Tensor[(13, 8), float32]) */;
  %767 = %766.1;
  (%767,)
}

def @func_1411(%var_1404: Tensor[(12, 5, 11), int64], %var_1405: Tensor[(12, 5, 11), int64]) -> Tensor[(12, 5, 11), int64] {
  %768 = cast(%var_1405, dtype="int64") /* ty=Tensor[(12, 5, 11), int64] */;
  %769 = shape_of(%var_1404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%var_1404, dtype="int64") /* ty=Tensor[(12, 5, 11), int64] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  maximum(%770, %771) /* ty=Tensor[(12, 5, 11), int64] */
}

def @func_4316() -> (Tensor[(11, 1, 12), float32],) {
  %772 = @func_4281() /* ty=(Tensor[(11, 1, 12), float32],) */;
  %773 = %772.0;
  (%773,)
}

def @func_6421(%var_6398: Tensor[(11, 2, 12), float32]) -> (Tensor[(13, 8), float32], Tensor[(11, 2, 12), bool], Tensor[(336), float64], Tensor[(20), float32], Tensor[(11, 1, 12), float32]) {
  %774 = @func_4427() /* ty=(Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) */;
  %775 = %774.2;
  %776 = cast(%775, dtype="bool") /* ty=Tensor[(11, 1, 12), bool] */;
  %777 = cast(%var_6398, dtype="bool") /* ty=Tensor[(11, 2, 12), bool] */;
  %778 = cast(meta[relay.Constant][48] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %779 = reshape(%778, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %780 = @func_800(%779) /* ty=(Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %781 = cast(%775, dtype="float32") /* ty=Tensor[(11, 1, 12), float32] */;
  %782 = @func_4702() /* ty=Tensor[(13, 8), float32] */;
  %783 = greater(%776, %777) /* ty=Tensor[(11, 2, 12), bool] */;
  %784 = %780.2;
  %785 = exp(%781) /* ty=Tensor[(11, 1, 12), float32] */;
  (%782, %783, %784, meta[relay.Constant][48] /* ty=Tensor[(20), float32] */, %785)
}

def @func_7975() -> (Tensor[(13, 8), float32], Tensor[(336), bool], Tensor[(13, 8), float32]) {
  %786 = @func_5304() /* ty=(Tensor[(336), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %787 = @func_5304() /* ty=(Tensor[(336), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %788 = %786.3;
  %789 = %787.0;
  %790 = @func_6898() /* ty=Tensor[(13, 8), float32] */;
  (%788, %789, %790)
}

def @func_5855() -> Tensor[(13, 8), float32] {
  %791 = @func_5335() /* ty=(Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %791.1
}

def @func_2411() -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) {
  %792 = cast(meta[relay.Constant][49] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %793 = reshape(%792, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %794 = @func_64(%793) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %795 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %796 = %794.0;
  (%795, %796, meta[relay.Constant][49] /* ty=Tensor[(336), float64] */)
}

def @func_2706(%var_2685: Tensor[(168, 2), float64]) -> (Tensor[(13, 8), float32], Tensor[(168, 2), bool]) {
  %797 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
  %798 = cast(%var_2685, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %799 = reshape(%798, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %800 = @func_64(%799) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %801 = %800.0;
  %802 = cast(%801, dtype="bool") /* ty=Tensor[(16, 7, 3), bool] */;
  %803 = shape_of(%var_2685, dtype="int32") /* ty=Tensor[(2), int32] */;
  %804 = cast(%var_2685, dtype="bool") /* ty=Tensor[(168, 2), bool] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %806 = %797.0;
  %807 = greater_equal(%804, %805) /* ty=Tensor[(168, 2), bool] */;
  (%806, %807)
}

def @func_6725() -> (Tensor[(4, 16, 15), float64],) {
  %808 = @func_5335() /* ty=(Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %809 = %808.0;
  %810 = cast(%809, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %811 = log(%810) /* ty=Tensor[(4, 16, 15), float64] */;
  (%811,)
}

def @func_3180(%var_3136: Tensor[(168, 2), float64]) -> (Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(168, 2), float32]) {
  %812 = cast(%var_3136, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %813 = cast(meta[relay.Constant][50] /* ty=Tensor[(3696), float64] */, dtype="float64") /* ty=Tensor[(3696), float64] */;
  %814 = reshape(%812, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %815 = reshape(%813, newshape=[3696]) /* ty=Tensor[(3696), float64] */;
  %816 = @func_3002(%814, %815) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(2, 840), float64], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(16, 7, 3), float64], Tensor[(2560), bool]) */;
  %817 = cast(%var_3136, dtype="float32") /* ty=Tensor[(168, 2), float32] */;
  %818 = @func_3043() /* ty=Tensor[(13, 8), float32] */;
  %819 = %816.3;
  %820 = tan(%817) /* ty=Tensor[(168, 2), float32] */;
  (%818, %819, meta[relay.Constant][50] /* ty=Tensor[(3696), float64] */, %820)
}

def @func_3629() -> (Tensor[(16, 10, 16), float64],) {
  %821 = @func_1709() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) */;
  %822 = %821.4;
  (%822,)
}

def @func_1756() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %823 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %824 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  (%823, %824)
}

def @func_4516() -> (Tensor[(16, 7, 3), float64], Tensor[(16, 10, 16), float64], Tensor[(13, 8), float32]) {
  %825 = @func_2411() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %826 = @func_3629() /* ty=(Tensor[(16, 10, 16), float64],) */;
  %827 = @func_3374() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %828 = %825.1;
  %829 = %826.0;
  %830 = %827.1;
  (%828, %829, %830)
}

def @func_7770() -> Tensor[(13, 8), float32] {
  %831 = @func_6852() /* ty=(Tensor[(13, 8), float32],) */;
  %831.0
}

def @func_5412(%var_5340: Tensor[(15, 6, 1), float32], %var_5356: Tensor[(15, 6, 8), float32], %var_5378: Tensor[(350), int64], %var_5407: Tensor[(15, 6, 8), float64]) -> (Tensor[(15, 6, 8), float64], Tensor[(168, 2), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float32], Tensor[(350), int64], Tensor[(126), float32], Tensor[(15, 6, 8), uint64]) {
  %832 = cast(0.962384f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %833 = cast(%var_5340, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %834 = floor_mod(%832, %833) /* ty=Tensor[(15, 6, 1), float32] */;
  %835 = cast(%834, dtype="float64") /* ty=Tensor[(15, 6, 1), float64] */;
  %836 = cast(%var_5356, dtype="float64") /* ty=Tensor[(15, 6, 8), float64] */;
  %837 = cast(meta[relay.Constant][51] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %838 = reshape(%837, newshape=[168, 2]) /* ty=Tensor[(168, 2), float64] */;
  %839 = @func_3180(%838) /* ty=(Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(168, 2), float32]) */;
  %840 = cast(%var_5378, dtype="int64") /* ty=Tensor[(350), int64] */;
  %841 = cast(%var_5378, dtype="int64") /* ty=Tensor[(350), int64] */;
  %842 = cast(meta[relay.Constant][52] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %843 = reshape(%840, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), int64] */;
  %844 = reshape(%841, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), int64] */;
  %845 = reshape(%842, newshape=[3, 42]) /* ty=Tensor[(3, 42), float32] */;
  %846 = @func_2848(%843, %844, %845) /* ty=(Tensor[(10, 5, 7), bool], Tensor[(3, 42), float32], Tensor[(16, 7, 3), float32]) */;
  %847 = cast(%var_5356, dtype="float64") /* ty=Tensor[(15, 6, 8), float64] */;
  %848 = exp(%847) /* ty=Tensor[(15, 6, 8), float64] */;
  %849 = cast(%var_5407, dtype="uint64") /* ty=Tensor[(15, 6, 8), uint64] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%848, dtype="uint64") /* ty=Tensor[(15, 6, 8), uint64] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %853 = power(%835, %836) /* ty=Tensor[(15, 6, 8), float64] */;
  %854 = %839.3;
  %855 = %846.2;
  %856 = minimum(%851, %852) /* ty=Tensor[(15, 6, 8), uint64] */;
  (%853, %854, meta[relay.Constant][51] /* ty=Tensor[(336), float64] */, %855, %var_5378, meta[relay.Constant][52] /* ty=Tensor[(126), float32] */, %856)
}

def @func_5847(%var_5841: uint16, %var_5842: Tensor[(9, 9, 12), uint16]) -> (Tensor[(9, 9, 12), uint16],) {
  %857 = cast(%var_5841, dtype="uint16") /* ty=uint16 */;
  %858 = cast(%var_5842, dtype="uint16") /* ty=Tensor[(9, 9, 12), uint16] */;
  %859 = maximum(%857, %858) /* ty=Tensor[(9, 9, 12), uint16] */;
  (%859,)
}

def @func_6819() -> (Tensor[(13, 8), float32],) {
  %860 = @func_5990() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %861 = %860.1;
  (%861,)
}

def @func_924(%var_907: Tensor[(1, 6, 6), int8], %var_908: Tensor[(12, 6, 6), int8], %var_920: Tensor[(126), float32]) -> (Tensor[(12, 6, 6), int8], Tensor[(1, 6, 6), float32], Tensor[(9, 14), float32], Tensor[(126), float32], Tensor[(336), float64]) {
  %862 = cast(%var_907, dtype="int8") /* ty=Tensor[(1, 6, 6), int8] */;
  %863 = cast(%var_908, dtype="int8") /* ty=Tensor[(12, 6, 6), int8] */;
  %864 = cast(%var_907, dtype="float32") /* ty=Tensor[(1, 6, 6), float32] */;
  %865 = cast(%var_920, dtype="float32") /* ty=Tensor[(126), float32] */;
  %866 = cast(meta[relay.Constant][53] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %867 = reshape(%865, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %868 = reshape(%866, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %869 = @func_374(%867, %868) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %870 = logical_xor(%862, %863) /* ty=Tensor[(12, 6, 6), int8] */;
  %871 = tan(%864) /* ty=Tensor[(1, 6, 6), float32] */;
  %872 = %869.0;
  (%870, %871, %872, %var_920, meta[relay.Constant][53] /* ty=Tensor[(336), float64] */)
}

def @func_8396(%var_8291: Tensor[(156), int64], %var_8323: Tensor[(660), int64], %var_8347: Tensor[(1, 630), float32]) -> (Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32], Tensor[(2, 6, 13), int64], Tensor[(156), int64], Tensor[(13, 8), float32], Tensor[(1, 630), float32], Tensor[(12, 5, 11), float32], Tensor[(660), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) {
  %873 = @func_3272() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %874 = cast(%var_8291, dtype="int64") /* ty=Tensor[(156), int64] */;
  %875 = cast(%var_8291, dtype="int64") /* ty=Tensor[(156), int64] */;
  %876 = reshape(%874, newshape=[2, 6, 13]) /* ty=Tensor[(2, 6, 13), int64] */;
  %877 = reshape(%875, newshape=[2, 6, 13]) /* ty=Tensor[(2, 6, 13), int64] */;
  %878 = cast(%var_8347, dtype="float32") /* ty=Tensor[(1, 630), float32] */;
  %879 = reshape(%878, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float32] */;
  %880 = @func_7260(%879) /* ty=(Tensor[(13, 8), float32], Tensor[(3, 15, 14), int64], Tensor[(12, 2, ?), bool], Tensor[(24), float32]) */;
  %881 = cast(%var_8323, dtype="int64") /* ty=Tensor[(660), int64] */;
  %882 = cast(%var_8323, dtype="int64") /* ty=Tensor[(660), int64] */;
  %883 = reshape(%881, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
  %884 = reshape(%882, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
  %885 = @func_1411(%883, %884) /* ty=Tensor[(12, 5, 11), int64] */;
  %886 = cast(%var_8323, dtype="float32") /* ty=Tensor[(660), float32] */;
  %887 = shape_of(%885, dtype="int32") /* ty=Tensor[(3), int32] */;
  %888 = cast(%885, dtype="float32") /* ty=Tensor[(12, 5, 11), float32] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %890 = cast(%var_8323, dtype="float32") /* ty=Tensor[(660), float32] */;
  %891 = @func_8038() /* ty=(Tensor[(13, 8), float32],) */;
  %892 = @func_3272() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %893 = %873.0;
  %894 = @func_3400() /* ty=Tensor[(13, 8), float32] */;
  %895 = @func_6924(%876, %877) /* ty=Tensor[(2, 6, 13), int64] */;
  %896 = %880.0;
  %897 = power(%888, %889) /* ty=Tensor[(12, 5, 11), float32] */;
  %898 = sinh(%890) /* ty=Tensor[(660), float32] */;
  %899 = %891.0;
  %900 = %892.0;
  (%893, %894, %895, %var_8291, %896, %var_8347, %897, %898, %899, %900)
}

def @func_6127(%var_6101: Tensor[(9, 15, 14), float32], %var_6119: Tensor[(9, 15, 14), float32]) -> (Tensor[(168, 2), bool], Tensor[(336), float64], Tensor[(9, 15, 14), uint16]) {
  %901 = cast(meta[relay.Constant][54] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %902 = reshape(%901, newshape=[168, 2]) /* ty=Tensor[(168, 2), float64] */;
  %903 = @func_2706(%902) /* ty=(Tensor[(13, 8), float32], Tensor[(168, 2), bool]) */;
  %904 = cast(%var_6101, dtype="float32") /* ty=Tensor[(9, 15, 14), float32] */;
  %905 = atan(%904) /* ty=Tensor[(9, 15, 14), float32] */;
  %906 = cast(%var_6119, dtype="uint16") /* ty=Tensor[(9, 15, 14), uint16] */;
  %907 = shape_of(%905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(%905, dtype="uint16") /* ty=Tensor[(9, 15, 14), uint16] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %910 = %903.1;
  %911 = bitwise_and(%908, %909) /* ty=Tensor[(9, 15, 14), uint16] */;
  (%910, meta[relay.Constant][54] /* ty=Tensor[(336), float64] */, %911)
}

def @func_2639(%var_2631: Tensor[(126), float32]) -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64]) {
  %912 = cast(%var_2631, dtype="float32") /* ty=Tensor[(126), float32] */;
  %913 = cast(meta[relay.Constant][55] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %914 = reshape(%912, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %915 = reshape(%913, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %916 = @func_374(%914, %915) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %917 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %918 = %916.3;
  (%917, %918, %var_2631, meta[relay.Constant][55] /* ty=Tensor[(336), float64] */)
}

def @func_6852() -> (Tensor[(13, 8), float32],) {
  %919 = @func_3438() /* ty=Tensor[(13, 8), float32] */;
  (%919,)
}

def @func_6832() -> Tensor[(13, 8), float32] {
  %920 = @func_5990() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %920.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1229(%var_1228: Tensor[(16, 10, 16), float64]) -> Tensor[(16, 10, 16), float64] {
  %4 = fn (%var_1216: Tensor[(16, 10, 16), float64]) -> Tensor[(16, 10, 16), float64] {
    %0 = cast(%var_1216, dtype="float64") /* ty=Tensor[(16, 10, 16), float64] */;
    %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(16, 10, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 16), float64] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%2, %3) /* ty=Tensor[(16, 10, 16), float64] */
  };
  %4(%var_1228) /* ty=Tensor[(16, 10, 16), float64] */
}

def @func_5682(%var_5680: Tensor[(216, 2), int8]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(126), float32], Tensor[(36), int8], Tensor[(216, 2), int8], Tensor[(3, 42), float32], Tensor[(13, 8), float32]) {
  @func_5679(%var_5680) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(126), float32], Tensor[(36), int8], Tensor[(216, 2), int8], Tensor[(3, 42), float32], Tensor[(13, 8), float32]) */
}

def @func_800(%var_789: Tensor[(4, 1, 5), float32]) -> (Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) {
  %5 = cast(%var_789, dtype="float32") /* ty=Tensor[(4, 1, 5), float32] */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %7 = reshape(%6, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %8 = @func_64(%7) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %9 = log10(%5) /* ty=Tensor[(4, 1, 5), float32] */;
  %10 = %8.0;
  (%9, %10, meta[relay.Constant][1] /* ty=Tensor[(336), float64] */)
}

def @func_6127(%var_6101: Tensor[(9, 15, 14), float32], %var_6119: Tensor[(9, 15, 14), float32]) -> (Tensor[(168, 2), bool], Tensor[(336), float64], Tensor[(9, 15, 14), uint16]) {
  %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %12 = reshape(%11, newshape=[168, 2]) /* ty=Tensor[(168, 2), float64] */;
  %13 = @func_2706(%12) /* ty=(Tensor[(13, 8), float32], Tensor[(168, 2), bool]) */;
  %14 = cast(%var_6101, dtype="float32") /* ty=Tensor[(9, 15, 14), float32] */;
  %15 = atan(%14) /* ty=Tensor[(9, 15, 14), float32] */;
  %16 = cast(%var_6119, dtype="uint16") /* ty=Tensor[(9, 15, 14), uint16] */;
  %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(%15, dtype="uint16") /* ty=Tensor[(9, 15, 14), uint16] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %20 = %13.1;
  %21 = bitwise_and(%18, %19) /* ty=Tensor[(9, 15, 14), uint16] */;
  (%20, meta[relay.Constant][2] /* ty=Tensor[(336), float64] */, %21)
}

def @func_4263(%var_4244: Tensor[(6, 15, 14), uint16], %var_4261: Tensor[(24, 14), float64]) -> (Tensor[(6, 15, 14), int8], Tensor[(3696), float64], Tensor[(24, 14), float64]) {
  %22 = cast(%var_4244, dtype="uint16") /* ty=Tensor[(6, 15, 14), uint16] */;
  %23 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(6, 15, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 15, 14), uint16] */, dtype="uint16") /* ty=Tensor[(6, 15, 14), uint16] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %26 = multiply(%24, %25) /* ty=Tensor[(6, 15, 14), uint16] */;
  %27 = cast(%26, dtype="int8") /* ty=Tensor[(6, 15, 14), int8] */;
  %28 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(6, 15, 14), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 15, 14), uint16] */, dtype="int8") /* ty=Tensor[(6, 15, 14), int8] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %31 = cast(%var_4261, dtype="float64") /* ty=Tensor[(24, 14), float64] */;
  %32 = reshape(%31, newshape=[168, 2]) /* ty=Tensor[(168, 2), float64] */;
  %33 = @func_3180(%32) /* ty=(Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(168, 2), float32]) */;
  %34 = bitwise_and(%29, %30) /* ty=Tensor[(6, 15, 14), int8] */;
  %35 = %33.2;
  (%34, %35, %var_4261)
}

def @func_3629() -> (Tensor[(16, 10, 16), float64],) {
  %36 = @func_1709() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) */;
  %37 = %36.4;
  (%37,)
}

def @func_6710(%var_6708: Tensor[(6, 6, 4), int8]) -> Tensor[(6, 6, 4), int8] {
  @func_6707(%var_6708) /* ty=Tensor[(6, 6, 4), int8] */
}

def @func_7045(%var_7040: Tensor[(240), uint8], %var_7041: Tensor[(432), int8], %var_7042: Tensor[(126), float32], %var_7043: Tensor[(2560), float64], %var_7044: Tensor[(168), float64]) -> (Tensor[(13, 8), float32], Tensor[(12, 10, 2), bool], Tensor[(240), uint8], Tensor[(432), int8], Tensor[(126), float32], Tensor[(12), float64], Tensor[(20), float32], Tensor[(2560), float64], Tensor[(13, 8), float32], Tensor[(168), float64]) {
  %60 = fn (%var_7026: Tensor[(240), uint8], %var_7027: Tensor[(432), int8], %var_7028: Tensor[(126), float32], %var_7031: Tensor[(2560), float64], %var_7036: Tensor[(168), float64]) -> (Tensor[(13, 8), float32], Tensor[(12, 10, 2), bool], Tensor[(240), uint8], Tensor[(432), int8], Tensor[(126), float32], Tensor[(12), float64], Tensor[(20), float32], Tensor[(2560), float64], Tensor[(13, 8), float32], Tensor[(168), float64]) {
    %38 = @func_5335() /* ty=(Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
    %39 = cast(%var_7026, dtype="uint8") /* ty=Tensor[(240), uint8] */;
    %40 = cast(%var_7026, dtype="uint8") /* ty=Tensor[(240), uint8] */;
    %41 = cast(%var_7027, dtype="int8") /* ty=Tensor[(432), int8] */;
    %42 = cast(%var_7028, dtype="float32") /* ty=Tensor[(126), float32] */;
    %43 = cast(meta[relay.Constant][4] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
    %44 = cast(meta[relay.Constant][5] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
    %45 = cast(%var_7031, dtype="float64") /* ty=Tensor[(2560), float64] */;
    %46 = reshape(%39, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), uint8] */;
    %47 = reshape(%40, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), uint8] */;
    %48 = reshape(%41, newshape=[432]) /* ty=Tensor[(432), int8] */;
    %49 = reshape(%42, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %50 = reshape(%43, newshape=[12]) /* ty=Tensor[(12), float64] */;
    %51 = reshape(%44, newshape=[10, 2]) /* ty=Tensor[(10, 2), float32] */;
    %52 = reshape(%45, newshape=[2560]) /* ty=Tensor[(2560), float64] */;
    %53 = @func_5215(%46, %47, %48, %49, %50, %51, %52) /* ty=(Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(336), float64], Tensor[(36), int8], Tensor[(432), int8], Tensor[(126), float32], Tensor[(12), float64], Tensor[(10, 2), float32], Tensor[(2560), float64], Tensor[(16, 7, 3), float64], Tensor[(12, 13, 8), bool]) */;
    %54 = cast(%var_7036, dtype="float64") /* ty=Tensor[(168), float64] */;
    %55 = reshape(%54, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), float64] */;
    %56 = @func_5099(%55) /* ty=(Tensor[(2, 12, 7), float64], Tensor[(13, 8), float32]) */;
    %57 = %38.1;
    %58 = %53.2;
    %59 = %56.1;
    (%57, %58, %var_7026, %var_7027, %var_7028, meta[relay.Constant][4] /* ty=Tensor[(12), float64] */, meta[relay.Constant][5] /* ty=Tensor[(20), float32] */, %var_7031, %59, %var_7036)
  };
  %60(%var_7040, %var_7041, %var_7042, %var_7043, %var_7044) /* ty=(Tensor[(13, 8), float32], Tensor[(12, 10, 2), bool], Tensor[(240), uint8], Tensor[(432), int8], Tensor[(126), float32], Tensor[(12), float64], Tensor[(20), float32], Tensor[(2560), float64], Tensor[(13, 8), float32], Tensor[(168), float64]) */
}

def @func_924(%var_907: Tensor[(1, 6, 6), int8], %var_908: Tensor[(12, 6, 6), int8], %var_920: Tensor[(126), float32]) -> (Tensor[(12, 6, 6), int8], Tensor[(1, 6, 6), float32], Tensor[(9, 14), float32], Tensor[(126), float32], Tensor[(336), float64]) {
  %61 = cast(%var_907, dtype="int8") /* ty=Tensor[(1, 6, 6), int8] */;
  %62 = cast(%var_908, dtype="int8") /* ty=Tensor[(12, 6, 6), int8] */;
  %63 = cast(%var_907, dtype="float32") /* ty=Tensor[(1, 6, 6), float32] */;
  %64 = cast(%var_920, dtype="float32") /* ty=Tensor[(126), float32] */;
  %65 = cast(meta[relay.Constant][6] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %66 = reshape(%64, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %67 = reshape(%65, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %68 = @func_374(%66, %67) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %69 = logical_xor(%61, %62) /* ty=Tensor[(12, 6, 6), int8] */;
  %70 = tan(%63) /* ty=Tensor[(1, 6, 6), float32] */;
  %71 = %68.0;
  (%69, %70, %71, %var_920, meta[relay.Constant][6] /* ty=Tensor[(336), float64] */)
}

def @func_7591(%var_7590: Tensor[(10, 11, 15), float64]) -> Tensor[(10, 11, 15), float64] {
  %73 = fn (%var_7585: Tensor[(10, 11, 15), float64]) -> Tensor[(10, 11, 15), float64] {
    %72 = cast(%var_7585, dtype="float64") /* ty=Tensor[(10, 11, 15), float64] */;
    cosh(%72) /* ty=Tensor[(10, 11, 15), float64] */
  };
  %73(%var_7590) /* ty=Tensor[(10, 11, 15), float64] */
}

def @func_3272() -> (Tensor[(4, 16, 15), float32],) {
  %74 = @func_3065() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %75 = %74.0;
  (%75,)
}

def @func_4318() -> (Tensor[(11, 1, 12), float32],) {
  @func_4316() /* ty=(Tensor[(11, 1, 12), float32],) */
}

def @func_5073(%var_5047: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), bool],) {
  %76 = @func_3065() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %77 = %76.0;
  %78 = cast(%var_5047, dtype="bool") /* ty=Tensor[(4, 16, 15), bool] */;
  %79 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%77, dtype="bool") /* ty=Tensor[(4, 16, 15), bool] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %82 = logical_and(%80, %81) /* ty=Tensor[(4, 16, 15), bool] */;
  (%82,)
}

def @func_6076() -> Tensor[(16, 15, 16), int8] {
  @func_6074() /* ty=Tensor[(16, 15, 16), int8] */
}

def @func_7892(%var_7890: Tensor[(4, 7), float32], %var_7891: Tensor[(2240, 1), float32]) -> (Tensor[(4, 7), float32], Tensor[(4, 16, 8), float32], Tensor[(2240, 1), float32]) {
  %89 = fn (%var_7861: Tensor[(4, 7), float32], %var_7882: Tensor[(2240, 1), float32]) -> (Tensor[(4, 7), float32], Tensor[(4, 16, 8), float32], Tensor[(2240, 1), float32]) {
    %83 = cast(%var_7861, dtype="float32") /* ty=Tensor[(4, 7), float32] */;
    %84 = cast(%var_7882, dtype="float32") /* ty=Tensor[(2240, 1), float32] */;
    %85 = reshape(%84, newshape=[2240]) /* ty=Tensor[(2240), float32] */;
    %86 = @func_7804(%85) /* ty=(Tensor[(4, 16, 8), float32], Tensor[(14, 16, 10), float32], Tensor[(2240), float32]) */;
    %87 = log(%83) /* ty=Tensor[(4, 7), float32] */;
    %88 = %86.0;
    (%87, %88, %var_7882)
  };
  %89(%var_7890, %var_7891) /* ty=(Tensor[(4, 7), float32], Tensor[(4, 16, 8), float32], Tensor[(2240, 1), float32]) */
}

def @func_2365(%var_2346: Tensor[(12, 3, 9), uint32], %var_2347: Tensor[(12, 3, 9), uint32]) -> (Tensor[(12, 3, 9), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(12, 3, 9), float32]) {
  %90 = cast(%var_2347, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
  %91 = shape_of(%var_2346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%var_2346, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %94 = cast(meta[relay.Constant][7] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %95 = reshape(%94, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), bool] */;
  %96 = cast(%var_2346, dtype="float32") /* ty=Tensor[(12, 3, 9), float32] */;
  %97 = shape_of(%var_2347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%var_2347, dtype="float32") /* ty=Tensor[(12, 3, 9), float32] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %100 = greater_equal(%92, %93) /* ty=Tensor[(12, 3, 9), bool] */;
  %101 = @func_956(%95) /* ty=Tensor[(2, 6, 7), bool] */;
  %102 = power(%98, %99) /* ty=Tensor[(12, 3, 9), float32] */;
  (%100, %101, meta[relay.Constant][7] /* ty=Tensor[(84), bool] */, %102)
}

def @func_5884() -> Tensor[(336), float64] {
  @func_5882() /* ty=Tensor[(336), float64] */
}

def @func_4267(%var_4265: Tensor[(6, 15, 14), uint16], %var_4266: Tensor[(24, 14), float64]) -> (Tensor[(6, 15, 14), int8], Tensor[(3696), float64], Tensor[(24, 14), float64]) {
  @func_4263(%var_4265, %var_4266) /* ty=(Tensor[(6, 15, 14), int8], Tensor[(3696), float64], Tensor[(24, 14), float64]) */
}

def @func_7436(%var_7425: Tensor[(4, 420), float64]) -> (Tensor[(336), float64], Tensor[(13, 8), float32], Tensor[(660), int64], Tensor[(5, 132), int64], Tensor[(16, 7, 3), float64], Tensor[(4, 420), float64]) {
  %103 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 132), int64] */, dtype="int64") /* ty=Tensor[(5, 132), int64] */;
  %104 = reshape(%103, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %105 = @func_6268(%104) /* ty=(Tensor[(13, 8), float32], Tensor[(168, 2), uint64], Tensor[(12, 5, 11), int64], Tensor[(660), int64]) */;
  %106 = cast(%var_7425, dtype="float64") /* ty=Tensor[(4, 420), float64] */;
  %107 = @func_5882() /* ty=Tensor[(336), float64] */;
  %108 = cast(%107, dtype="float64") /* ty=Tensor[(336), float64] */;
  %109 = reshape(%106, newshape=[7, 16, 15]) /* ty=Tensor[(7, 16, 15), float64] */;
  %110 = reshape(%108, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %111 = @func_748(%109, %110) /* ty=(Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(7, 16, 15), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64]) */;
  %112 = @func_6579() /* ty=Tensor[(13, 8), float32] */;
  %113 = %105.3;
  %114 = %111.0;
  (%107, %112, %113, meta[relay.Constant][8] /* ty=Tensor[(5, 132), int64] */, %114, %var_7425)
}

def @func_7281() -> (Tensor[(13, 8), float32], Tensor[(11, 1, 12), float32]) {
  %115 = @func_4316() /* ty=(Tensor[(11, 1, 12), float32],) */;
  %116 = @func_3400() /* ty=Tensor[(13, 8), float32] */;
  %117 = %115.0;
  (%116, %117)
}

def @func_5223(%var_5216: Tensor[(12, 10, 2), uint8], %var_5217: Tensor[(12, 10, 2), uint8], %var_5218: Tensor[(432), int8], %var_5219: Tensor[(126), float32], %var_5220: Tensor[(12), float64], %var_5221: Tensor[(10, 2), float32], %var_5222: Tensor[(2560), float64]) -> (Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(336), float64], Tensor[(36), int8], Tensor[(432), int8], Tensor[(126), float32], Tensor[(12), float64], Tensor[(10, 2), float32], Tensor[(2560), float64], Tensor[(16, 7, 3), float64], Tensor[(12, 13, 8), bool]) {
  %167 = fn (%var_5104: Tensor[(12, 10, 2), uint8], %var_5105: Tensor[(12, 10, 2), uint8], %var_5168: Tensor[(432), int8], %var_5169: Tensor[(126), float32], %var_5179: Tensor[(12), float64], %var_5180: Tensor[(10, 2), float32], %var_5181: Tensor[(2560), float64]) -> (Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(336), float64], Tensor[(36), int8], Tensor[(432), int8], Tensor[(126), float32], Tensor[(12), float64], Tensor[(10, 2), float32], Tensor[(2560), float64], Tensor[(16, 7, 3), float64], Tensor[(12, 13, 8), bool]) {
    %118 = cast(%var_5105, dtype="uint8") /* ty=Tensor[(12, 10, 2), uint8] */;
    %119 = shape_of(%var_5104, dtype="int32") /* ty=Tensor[(3), int32] */;
    %120 = cast(%var_5104, dtype="uint8") /* ty=Tensor[(12, 10, 2), uint8] */;
    %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %122 = right_shift(%120, %121) /* ty=Tensor[(12, 10, 2), uint8] */;
    %123 = cast(%var_5104, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
    %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
    %125 = cast(%122, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
    %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %127 = cast(%var_5105, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %128 = acosh(%127) /* ty=Tensor[(12, 10, 2), float32] */;
    %129 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 10, 2), float32] */, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
    %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
    %131 = cast(%128, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
    %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %133 = cast(%var_5105, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
    %134 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
    %135 = cast(%128, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
    %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %137 = cast(meta[relay.Constant][10] /* ty=Tensor[(36), int8] */, dtype="int8") /* ty=Tensor[(36), int8] */;
    %138 = cast(%var_5168, dtype="int8") /* ty=Tensor[(432), int8] */;
    %139 = cast(%var_5169, dtype="float32") /* ty=Tensor[(126), float32] */;
    %140 = reshape(%137, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), int8] */;
    %141 = reshape(%138, newshape=[12, 6, 6]) /* ty=Tensor[(12, 6, 6), int8] */;
    %142 = reshape(%139, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %143 = @func_924(%140, %141, %142) /* ty=(Tensor[(12, 6, 6), int8], Tensor[(1, 6, 6), float32], Tensor[(9, 14), float32], Tensor[(126), float32], Tensor[(336), float64]) */;
    %144 = cast(%var_5169, dtype="float32") /* ty=Tensor[(126), float32] */;
    %145 = %143.4;
    %146 = cast(%145, dtype="float64") /* ty=Tensor[(336), float64] */;
    %147 = reshape(%144, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
    %148 = reshape(%146, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %149 = @func_374(%147, %148) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
    %150 = @func_3257() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %151 = %150.0;
    %152 = cast(%var_5179, dtype="float64") /* ty=Tensor[(12), float64] */;
    %153 = cast(%var_5180, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
    %154 = cast(%var_5181, dtype="float64") /* ty=Tensor[(2560), float64] */;
    %155 = reshape(%152, newshape=[12, 1, 1]) /* ty=Tensor[(12, 1, 1), float64] */;
    %156 = reshape(%153, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %157 = reshape(%154, newshape=[2560]) /* ty=Tensor[(2560), float64] */;
    %158 = @func_4880(%155, %156, %157) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(2560), float64], Tensor[(12, 1, 1), float64], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(12, ?, ?), float64]) */;
    %159 = %158.7;
    %160 = cast(%151, dtype="bool") /* ty=Tensor[(13, 8), bool] */;
    %161 = cast(%159, dtype="bool") /* ty=Tensor[(12, 1, 1), bool] */;
    %162 = greater_equal(%125, %126) /* ty=Tensor[(12, 10, 2), bool] */;
    %163 = equal(%131, %132) /* ty=Tensor[(12, 10, 2), bool] */;
    %164 = not_equal(%135, %136) /* ty=Tensor[(12, 10, 2), bool] */;
    %165 = %149.3;
    %166 = logical_and(%160, %161) /* ty=Tensor[(12, 13, 8), bool] */;
    (%162, %163, %164, %145, meta[relay.Constant][10] /* ty=Tensor[(36), int8] */, %var_5168, %var_5169, %var_5179, %var_5180, %var_5181, %165, %166)
  };
  %167(%var_5216, %var_5217, %var_5218, %var_5219, %var_5220, %var_5221, %var_5222) /* ty=(Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), bool], Tensor[(336), float64], Tensor[(36), int8], Tensor[(432), int8], Tensor[(126), float32], Tensor[(12), float64], Tensor[(10, 2), float32], Tensor[(2560), float64], Tensor[(16, 7, 3), float64], Tensor[(12, 13, 8), bool]) */
}

def @main() -> Tensor[(11, 1, 12), float64] {
  %168 = @func_4318() /* ty=(Tensor[(11, 1, 12), float32],) */;
  %169 = %168.0;
  %170 = cast(%169, dtype="float64") /* ty=Tensor[(11, 1, 12), float64] */;
  sin(%170) /* ty=Tensor[(11, 1, 12), float64] */
}

def @func_7957(%var_7955: Tensor[(20), float32], %var_7956: Tensor[(960), float32]) -> (Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32], Tensor[(20), float32], Tensor[(960), float32], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32]) {
  %184 = fn (%var_7914: Tensor[(20), float32], %var_7915: Tensor[(960), float32]) -> (Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32], Tensor[(20), float32], Tensor[(960), float32], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32]) {
    %171 = cast(%var_7914, dtype="float32") /* ty=Tensor[(20), float32] */;
    %172 = cast(%var_7915, dtype="float32") /* ty=Tensor[(960), float32] */;
    %173 = cast(%var_7915, dtype="float32") /* ty=Tensor[(960), float32] */;
    %174 = reshape(%171, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %175 = reshape(%172, newshape=[4, 16, 15]) /* ty=Tensor[(4, 16, 15), float32] */;
    %176 = reshape(%173, newshape=[4, 16, 15]) /* ty=Tensor[(4, 16, 15), float32] */;
    %177 = @func_5028(%174, %175, %176) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(4, 16, 15), float32]) */;
    %178 = @func_2411() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
    %179 = @func_6852() /* ty=(Tensor[(13, 8), float32],) */;
    %180 = @func_7770() /* ty=Tensor[(13, 8), float32] */;
    %181 = %177.5;
    %182 = %178.1;
    %183 = %179.0;
    (%180, %181, %var_7914, %var_7915, %182, %183)
  };
  %184(%var_7955, %var_7956) /* ty=(Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32], Tensor[(20), float32], Tensor[(960), float32], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32]) */
}

def @func_8591(%var_8589: uint64, %var_8590: Tensor[(1, 1, 14), uint64]) -> (Tensor[(1, 1, 14), float64], Tensor[(13, 8), float32]) {
  @func_8587(%var_8589, %var_8590) /* ty=(Tensor[(1, 1, 14), float64], Tensor[(13, 8), float32]) */
}

def @func_4150(%var_4145: Tensor[(5, 4, 8), float64], %var_4146: Tensor[(5, 4, 8), float64], %var_4147: Tensor[(1, 24), float32], %var_4148: Tensor[(5, 4), float32], %var_4149: Tensor[(126), float32]) -> (Tensor[(1, 24), float32], Tensor[(13, 8), float32], Tensor[(12, 2, 4), bool], Tensor[(5, 4, 8), uint16], Tensor[(2, 6, 7), bool], Tensor[(42, 2), bool], Tensor[(84), bool], Tensor[(5, 4), float32], Tensor[(126), float32], Tensor[(126), float32], Tensor[(5, 4, 8), uint8]) {
  %223 = fn (%var_4047: Tensor[(5, 4, 8), float64], %var_4056: Tensor[(5, 4, 8), float64], %var_4061: Tensor[(1, 24), float32], %var_4116: Tensor[(5, 4), float32], %var_4119: Tensor[(126), float32]) -> (Tensor[(1, 24), float32], Tensor[(13, 8), float32], Tensor[(12, 2, 4), bool], Tensor[(5, 4, 8), uint16], Tensor[(2, 6, 7), bool], Tensor[(42, 2), bool], Tensor[(84), bool], Tensor[(5, 4), float32], Tensor[(126), float32], Tensor[(126), float32], Tensor[(5, 4, 8), uint8]) {
    %185 = @func_2798() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) */;
    %186 = cast(%var_4061, dtype="float32") /* ty=Tensor[(1, 24), float32] */;
    %187 = reshape(%186, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float32] */;
    %188 = @func_3937(%187) /* ty=Tensor[(12, 2, ?), bool] */;
    %189 = cast(%188, dtype="bool") /* ty=Tensor[(12, 2, ?), bool] */;
    %190 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 2, 4), bool] */, dtype="bool") /* ty=Tensor[(12, 2, 4), bool] */;
    %191 = cast(%var_4056, dtype="int32") /* ty=Tensor[(5, 4, 8), int32] */;
    %192 = shape_of(%var_4047, dtype="int32") /* ty=Tensor[(3), int32] */;
    %193 = cast(%var_4047, dtype="int32") /* ty=Tensor[(5, 4, 8), int32] */;
    %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %195 = logical_xor(%193, %194) /* ty=Tensor[(5, 4, 8), int32] */;
    %196 = cast(%195, dtype="uint16") /* ty=Tensor[(5, 4, 8), uint16] */;
    %197 = shape_of(%var_4056, dtype="int32") /* ty=Tensor[(3), int32] */;
    %198 = cast(%var_4056, dtype="uint16") /* ty=Tensor[(5, 4, 8), uint16] */;
    %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %200 = cast(meta[relay.Constant][12] /* ty=Tensor[(42, 2), bool] */, dtype="bool") /* ty=Tensor[(42, 2), bool] */;
    %201 = reshape(%200, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), bool] */;
    %202 = cast(%var_4116, dtype="float32") /* ty=Tensor[(5, 4), float32] */;
    %203 = @func_956(%201) /* ty=Tensor[(2, 6, 7), bool] */;
    %204 = cast(%203, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
    %205 = reshape(%202, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %206 = reshape(%204, newshape=[84]) /* ty=Tensor[(84), bool] */;
    %207 = @func_2543(%205, %206) /* ty=(Tensor[(13, 8), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(16, 7, 3), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(13, 8), float32]) */;
    %208 = cast(%var_4119, dtype="float32") /* ty=Tensor[(126), float32] */;
    %209 = reshape(%208, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %210 = @func_2639(%209) /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64]) */;
    %211 = cast(%var_4047, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
    %212 = sin(%211) /* ty=Tensor[(5, 4, 8), float64] */;
    %213 = cast(%195, dtype="uint8") /* ty=Tensor[(5, 4, 8), uint8] */;
    %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
    %215 = cast(%212, dtype="uint8") /* ty=Tensor[(5, 4, 8), uint8] */;
    %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %217 = %185.0;
    %218 = greater(%189, %190) /* ty=Tensor[(12, 2, 4), bool] */;
    %219 = right_shift(%198, %199) /* ty=Tensor[(5, 4, 8), uint16] */;
    %220 = %207.5;
    %221 = %210.2;
    %222 = maximum(%215, %216) /* ty=Tensor[(5, 4, 8), uint8] */;
    (%var_4061, %217, %218, %219, %203, meta[relay.Constant][12] /* ty=Tensor[(42, 2), bool] */, %220, %var_4116, %221, %var_4119, %222)
  };
  %223(%var_4145, %var_4146, %var_4147, %var_4148, %var_4149) /* ty=(Tensor[(1, 24), float32], Tensor[(13, 8), float32], Tensor[(12, 2, 4), bool], Tensor[(5, 4, 8), uint16], Tensor[(2, 6, 7), bool], Tensor[(42, 2), bool], Tensor[(84), bool], Tensor[(5, 4), float32], Tensor[(126), float32], Tensor[(126), float32], Tensor[(5, 4, 8), uint8]) */
}

def @func_3521(%var_3491: Tensor[(126), float32], %var_3492: Tensor[(132, 1), uint16], %var_3500: Tensor[(132, 3), uint16]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], uint16, Tensor[(22), uint16], Tensor[(126), float32], Tensor[(132, 3), bool], Tensor[(132, 3), float64]) {
  %224 = cast(meta[relay.Constant][13] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %225 = cast(meta[relay.Constant][14] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %226 = cast(%var_3491, dtype="float32") /* ty=Tensor[(126), float32] */;
  %227 = cast(%var_3492, dtype="uint16") /* ty=Tensor[(132, 1), uint16] */;
  %228 = reshape(%224, newshape=[]) /* ty=uint16 */;
  %229 = reshape(%225, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), uint16] */;
  %230 = reshape(%226, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %231 = reshape(%227, newshape=[6, 2, 11]) /* ty=Tensor[(6, 2, 11), uint16] */;
  %232 = @func_1857(%228, %229, %230, %231) /* ty=(Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(6, 2, 11), bool], Tensor[(12, 5, 11), int64], Tensor[(1, 660), int64]) */;
  %233 = cast(%var_3492, dtype="bool") /* ty=Tensor[(132, 1), bool] */;
  %234 = cast(%var_3500, dtype="bool") /* ty=Tensor[(132, 3), bool] */;
  %235 = cast(%var_3500, dtype="float64") /* ty=Tensor[(132, 3), float64] */;
  %236 = acosh(%235) /* ty=Tensor[(132, 3), float64] */;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(132, 3), float64] */;
  %238 = cast(%var_3492, dtype="float64") /* ty=Tensor[(132, 1), float64] */;
  %239 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %240 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %241 = %232.2;
  %242 = not_equal(%233, %234) /* ty=Tensor[(132, 3), bool] */;
  %243 = mod(%237, %238) /* ty=Tensor[(132, 3), float64] */;
  (%239, %240, %241, meta[relay.Constant][13] /* ty=uint16 */, meta[relay.Constant][14] /* ty=Tensor[(22), uint16] */, %var_3491, %242, %243)
}

def @func_5099(%var_5079: Tensor[(2, 12, 7), float64]) -> (Tensor[(2, 12, 7), float64], Tensor[(13, 8), float32]) {
  %244 = cast(-3.7275f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %245 = cast(%var_5079, dtype="float64") /* ty=Tensor[(2, 12, 7), float64] */;
  %246 = @func_3359() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %247 = power(%244, %245) /* ty=Tensor[(2, 12, 7), float64] */;
  %248 = %246.1;
  (%247, %248)
}

def @func_8751(%var_8744: Tensor[(6, 13, 5), float32]) -> Tensor[(6, 13, 5), float32] {
  %249 = cast(%var_8744, dtype="float32") /* ty=Tensor[(6, 13, 5), float32] */;
  sinh(%249) /* ty=Tensor[(6, 13, 5), float32] */
}

def @func_5076(%var_5074: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), bool],) {
  @func_5073(%var_5074) /* ty=(Tensor[(4, 16, 15), bool],) */
}

def @func_5417(%var_5413: Tensor[(15, 6, 1), float32], %var_5414: Tensor[(15, 6, 8), float32], %var_5415: Tensor[(350), int64], %var_5416: Tensor[(15, 6, 8), float64]) -> (Tensor[(15, 6, 8), float64], Tensor[(168, 2), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float32], Tensor[(350), int64], Tensor[(126), float32], Tensor[(15, 6, 8), uint64]) {
  %275 = fn (%var_5340: Tensor[(15, 6, 1), float32], %var_5356: Tensor[(15, 6, 8), float32], %var_5378: Tensor[(350), int64], %var_5407: Tensor[(15, 6, 8), float64]) -> (Tensor[(15, 6, 8), float64], Tensor[(168, 2), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float32], Tensor[(350), int64], Tensor[(126), float32], Tensor[(15, 6, 8), uint64]) {
    %250 = cast(0.962384f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %251 = cast(%var_5340, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
    %252 = floor_mod(%250, %251) /* ty=Tensor[(15, 6, 1), float32] */;
    %253 = cast(%252, dtype="float64") /* ty=Tensor[(15, 6, 1), float64] */;
    %254 = cast(%var_5356, dtype="float64") /* ty=Tensor[(15, 6, 8), float64] */;
    %255 = cast(meta[relay.Constant][15] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %256 = reshape(%255, newshape=[168, 2]) /* ty=Tensor[(168, 2), float64] */;
    %257 = @func_3180(%256) /* ty=(Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(168, 2), float32]) */;
    %258 = cast(%var_5378, dtype="int64") /* ty=Tensor[(350), int64] */;
    %259 = cast(%var_5378, dtype="int64") /* ty=Tensor[(350), int64] */;
    %260 = cast(meta[relay.Constant][16] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %261 = reshape(%258, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), int64] */;
    %262 = reshape(%259, newshape=[10, 5, 7]) /* ty=Tensor[(10, 5, 7), int64] */;
    %263 = reshape(%260, newshape=[3, 42]) /* ty=Tensor[(3, 42), float32] */;
    %264 = @func_2848(%261, %262, %263) /* ty=(Tensor[(10, 5, 7), bool], Tensor[(3, 42), float32], Tensor[(16, 7, 3), float32]) */;
    %265 = cast(%var_5356, dtype="float64") /* ty=Tensor[(15, 6, 8), float64] */;
    %266 = exp(%265) /* ty=Tensor[(15, 6, 8), float64] */;
    %267 = cast(%var_5407, dtype="uint64") /* ty=Tensor[(15, 6, 8), uint64] */;
    %268 = shape_of(%266, dtype="int32") /* ty=Tensor[(3), int32] */;
    %269 = cast(%266, dtype="uint64") /* ty=Tensor[(15, 6, 8), uint64] */;
    %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %271 = power(%253, %254) /* ty=Tensor[(15, 6, 8), float64] */;
    %272 = %257.3;
    %273 = %264.2;
    %274 = minimum(%269, %270) /* ty=Tensor[(15, 6, 8), uint64] */;
    (%271, %272, meta[relay.Constant][15] /* ty=Tensor[(336), float64] */, %273, %var_5378, meta[relay.Constant][16] /* ty=Tensor[(126), float32] */, %274)
  };
  %275(%var_5413, %var_5414, %var_5415, %var_5416) /* ty=(Tensor[(15, 6, 8), float64], Tensor[(168, 2), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float32], Tensor[(350), int64], Tensor[(126), float32], Tensor[(15, 6, 8), uint64]) */
}

def @func_4039(%var_4033: Tensor[(192), float64]) -> (Tensor[(13, 8), float32], Tensor[(6, 2, 16), float64], Tensor[(192), float64]) {
  %276 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %277 = cast(%var_4033, dtype="float64") /* ty=Tensor[(192), float64] */;
  %278 = reshape(%277, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), float64] */;
  %279 = @func_3862(%278) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(6, 2, 16), uint8]) */;
  %280 = %276.1;
  %281 = %279.0;
  (%280, %281, %var_4033)
}

def @func_2848(%var_2817: Tensor[(10, 5, 7), int64], %var_2818: Tensor[(10, 5, 7), int64], %var_2827: Tensor[(3, 42), float32]) -> (Tensor[(10, 5, 7), bool], Tensor[(3, 42), float32], Tensor[(16, 7, 3), float32]) {
  %282 = cast(%var_2818, dtype="bool") /* ty=Tensor[(10, 5, 7), bool] */;
  %283 = shape_of(%var_2817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%var_2817, dtype="bool") /* ty=Tensor[(10, 5, 7), bool] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %286 = cast(%var_2827, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %287 = reshape(%286, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %288 = @func_2639(%287) /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64]) */;
  %289 = %288.1;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(16, 7, 3), float32] */;
  %291 = not_equal(%284, %285) /* ty=Tensor[(10, 5, 7), bool] */;
  %292 = asin(%290) /* ty=Tensor[(16, 7, 3), float32] */;
  (%291, %var_2827, %292)
}

def @func_2369(%var_2367: Tensor[(12, 3, 9), uint32], %var_2368: Tensor[(12, 3, 9), uint32]) -> (Tensor[(12, 3, 9), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(12, 3, 9), float32]) {
  @func_2365(%var_2367, %var_2368) /* ty=(Tensor[(12, 3, 9), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(12, 3, 9), float32]) */
}

def @func_7336() -> Tensor[(4, 16, 8), float32] {
  %294 = fn () -> Tensor[(4, 16, 8), float32] {
    %293 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 16, 8), float32] */, dtype="float32") /* ty=Tensor[(4, 16, 8), float32] */;
    log10(%293) /* ty=Tensor[(4, 16, 8), float32] */
  };
  %294() /* ty=Tensor[(4, 16, 8), float32] */
}

def @func_4283() -> (Tensor[(11, 1, 12), float32],) {
  @func_4281() /* ty=(Tensor[(11, 1, 12), float32],) */
}

def @func_5856() -> Tensor[(13, 8), float32] {
  %296 = fn () -> Tensor[(13, 8), float32] {
    %295 = @func_5335() /* ty=(Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
    %295.1
  };
  %296() /* ty=Tensor[(13, 8), float32] */
}

def @func_5679(%var_5670: Tensor[(216, 2), int8]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(126), float32], Tensor[(36), int8], Tensor[(216, 2), int8], Tensor[(3, 42), float32], Tensor[(13, 8), float32]) {
  %297 = @func_2436() /* ty=(Tensor[(13, 8), float32],) */;
  %298 = @func_2436() /* ty=(Tensor[(13, 8), float32],) */;
  %299 = @func_5304() /* ty=(Tensor[(336), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %300 = cast(meta[relay.Constant][18] /* ty=Tensor[(36), int8] */, dtype="int8") /* ty=Tensor[(36), int8] */;
  %301 = cast(%var_5670, dtype="int8") /* ty=Tensor[(216, 2), int8] */;
  %302 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 42), float32] */, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %303 = reshape(%300, newshape=[1, 6, 6]) /* ty=Tensor[(1, 6, 6), int8] */;
  %304 = reshape(%301, newshape=[12, 6, 6]) /* ty=Tensor[(12, 6, 6), int8] */;
  %305 = reshape(%302, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %306 = @func_924(%303, %304, %305) /* ty=(Tensor[(12, 6, 6), int8], Tensor[(1, 6, 6), float32], Tensor[(9, 14), float32], Tensor[(126), float32], Tensor[(336), float64]) */;
  %307 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 42), float32] */, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %308 = reshape(%307, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %309 = @func_3684(%308) /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32], Tensor[(126), float32]) */;
  %310 = %297.0;
  %311 = %298.0;
  %312 = %299.2;
  %313 = %306.3;
  %314 = %309.5;
  (%310, %311, %312, %313, meta[relay.Constant][18] /* ty=Tensor[(36), int8] */, %var_5670, meta[relay.Constant][19] /* ty=Tensor[(3, 42), float32] */, %314)
}

def @func_5444(%var_5431: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), float64], Tensor[(13, 8), float32]) {
  %315 = @func_3272() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %316 = %315.0;
  %317 = cast(%var_5431, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%316, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %321 = @func_3359() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %322 = mod(%319, %320) /* ty=Tensor[(4, 16, 15), float64] */;
  %323 = %321.0;
  (%322, %323)
}

def @func_5813() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(126), float32]) {
  %324 = @func_3783() /* ty=(Tensor[(13, 8), float32],) */;
  %325 = cast(meta[relay.Constant][20] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %326 = reshape(%325, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %327 = @func_3684(%326) /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32], Tensor[(126), float32]) */;
  %328 = %324.0;
  %329 = @func_1900() /* ty=Tensor[(13, 8), float32] */;
  %330 = %327.3;
  (%328, %329, %330, meta[relay.Constant][20] /* ty=Tensor[(126), float32] */)
}

def @func_929(%var_926: Tensor[(1, 6, 6), int8], %var_927: Tensor[(12, 6, 6), int8], %var_928: Tensor[(126), float32]) -> (Tensor[(12, 6, 6), int8], Tensor[(1, 6, 6), float32], Tensor[(9, 14), float32], Tensor[(126), float32], Tensor[(336), float64]) {
  @func_924(%var_926, %var_927, %var_928) /* ty=(Tensor[(12, 6, 6), int8], Tensor[(1, 6, 6), float32], Tensor[(9, 14), float32], Tensor[(126), float32], Tensor[(336), float64]) */
}

def @func_3526(%var_3523: Tensor[(126), float32], %var_3524: Tensor[(132, 1), uint16], %var_3525: Tensor[(132, 3), uint16]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], uint16, Tensor[(22), uint16], Tensor[(126), float32], Tensor[(132, 3), bool], Tensor[(132, 3), float64]) {
  @func_3521(%var_3523, %var_3524, %var_3525) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], uint16, Tensor[(22), uint16], Tensor[(126), float32], Tensor[(132, 3), bool], Tensor[(132, 3), float64]) */
}

def @func_1757() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %333 = fn () -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
    %331 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
    %332 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
    (%331, %332)
  };
  %333() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */
}

def @func_5851(%var_5849: uint16, %var_5850: Tensor[(9, 9, 12), uint16]) -> (Tensor[(9, 9, 12), uint16],) {
  @func_5847(%var_5849, %var_5850) /* ty=(Tensor[(9, 9, 12), uint16],) */
}

def @func_1415(%var_1413: Tensor[(12, 5, 11), int64], %var_1414: Tensor[(12, 5, 11), int64]) -> Tensor[(12, 5, 11), int64] {
  @func_1411(%var_1413, %var_1414) /* ty=Tensor[(12, 5, 11), int64] */
}

def @func_66(%var_65: Tensor[(16, 7, 3), float64]) -> (Tensor[(16, 7, 3), float64],) {
  %339 = fn (%var_37: Tensor[(16, 7, 3), float64]) -> (Tensor[(16, 7, 3), float64],) {
    %334 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
    %335 = shape_of(%var_37, dtype="int32") /* ty=Tensor[(3), int32] */;
    %336 = cast(%var_37, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
    %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %338 = divide(%336, %337) /* ty=Tensor[(16, 7, 3), float64] */;
    (%338,)
  };
  %339(%var_65) /* ty=(Tensor[(16, 7, 3), float64],) */
}

def @func_5815() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(126), float32]) {
  @func_5813() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(126), float32]) */
}

def @func_6634(%var_6632: Tensor[(10, 2), float32], %var_6633: Tensor[(3, 42), float32]) -> (Tensor[(13, 8), float32], Tensor[(84), bool], Tensor[(160), float64], Tensor[(24), float32], Tensor[(10, 2), float32], Tensor[(3, 42), float32]) {
  %354 = fn (%var_6624: Tensor[(10, 2), float32], %var_6625: Tensor[(3, 42), float32]) -> (Tensor[(13, 8), float32], Tensor[(84), bool], Tensor[(160), float64], Tensor[(24), float32], Tensor[(10, 2), float32], Tensor[(3, 42), float32]) {
    %340 = @func_3374() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %341 = cast(meta[relay.Constant][22] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %342 = cast(meta[relay.Constant][22] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %343 = cast(meta[relay.Constant][23] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %344 = cast(%var_6624, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
    %345 = cast(%var_6625, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
    %346 = reshape(%341, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), float64] */;
    %347 = reshape(%342, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), float64] */;
    %348 = reshape(%343, newshape=[1, 24]) /* ty=Tensor[(1, 24), float32] */;
    %349 = reshape(%344, newshape=[5, 4]) /* ty=Tensor[(5, 4), float32] */;
    %350 = reshape(%345, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %351 = @func_4144(%346, %347, %348, %349, %350) /* ty=(Tensor[(1, 24), float32], Tensor[(13, 8), float32], Tensor[(12, 2, 4), bool], Tensor[(5, 4, 8), uint16], Tensor[(2, 6, 7), bool], Tensor[(42, 2), bool], Tensor[(84), bool], Tensor[(5, 4), float32], Tensor[(126), float32], Tensor[(126), float32], Tensor[(5, 4, 8), uint8]) */;
    %352 = %340.0;
    %353 = %351.6;
    (%352, %353, meta[relay.Constant][22] /* ty=Tensor[(160), float64] */, meta[relay.Constant][23] /* ty=Tensor[(24), float32] */, %var_6624, %var_6625)
  };
  %354(%var_6632, %var_6633) /* ty=(Tensor[(13, 8), float32], Tensor[(84), bool], Tensor[(160), float64], Tensor[(24), float32], Tensor[(10, 2), float32], Tensor[(3, 42), float32]) */
}

def @func_6693(%var_6687: Tensor[(14, 16, 10), float32]) -> (Tensor[(14, 16, 10), float32],) {
  %355 = cast(%var_6687, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
  %356 = cosh(%355) /* ty=Tensor[(14, 16, 10), float32] */;
  (%356,)
}

def @func_7439(%var_7437: Tensor[(4, 420), float64]) -> (Tensor[(336), float64], Tensor[(13, 8), float32], Tensor[(660), int64], Tensor[(5, 132), int64], Tensor[(16, 7, 3), float64], Tensor[(4, 420), float64]) {
  @func_7436(%var_7437) /* ty=(Tensor[(336), float64], Tensor[(13, 8), float32], Tensor[(660), int64], Tensor[(5, 132), int64], Tensor[(16, 7, 3), float64], Tensor[(4, 420), float64]) */
}

def @func_7772() -> Tensor[(13, 8), float32] {
  @func_7770() /* ty=Tensor[(13, 8), float32] */
}

def @func_752(%var_750: Tensor[(7, 16, 15), float64], %var_751: Tensor[(336), float64]) -> (Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(7, 16, 15), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64]) {
  @func_748(%var_750, %var_751) /* ty=(Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(7, 16, 15), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64]) */
}

def @func_2708(%var_2707: Tensor[(168, 2), float64]) -> (Tensor[(13, 8), float32], Tensor[(168, 2), bool]) {
  %368 = fn (%var_2685: Tensor[(168, 2), float64]) -> (Tensor[(13, 8), float32], Tensor[(168, 2), bool]) {
    %357 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
    %358 = cast(%var_2685, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
    %359 = reshape(%358, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
    %360 = @func_64(%359) /* ty=(Tensor[(16, 7, 3), float64],) */;
    %361 = %360.0;
    %362 = cast(%361, dtype="bool") /* ty=Tensor[(16, 7, 3), bool] */;
    %363 = shape_of(%var_2685, dtype="int32") /* ty=Tensor[(2), int32] */;
    %364 = cast(%var_2685, dtype="bool") /* ty=Tensor[(168, 2), bool] */;
    %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %366 = %357.0;
    %367 = greater_equal(%364, %365) /* ty=Tensor[(168, 2), bool] */;
    (%366, %367)
  };
  %368(%var_2707) /* ty=(Tensor[(13, 8), float32], Tensor[(168, 2), bool]) */
}

def @func_2412() -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) {
  %374 = fn () -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) {
    %369 = cast(meta[relay.Constant][24] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %370 = reshape(%369, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
    %371 = @func_64(%370) /* ty=(Tensor[(16, 7, 3), float64],) */;
    %372 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
    %373 = %371.0;
    (%372, %373, meta[relay.Constant][24] /* ty=Tensor[(336), float64] */)
  };
  %374() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */
}

def @func_7807(%var_7805: Tensor[(2240), float32]) -> (Tensor[(4, 16, 8), float32], Tensor[(14, 16, 10), float32], Tensor[(2240), float32]) {
  @func_7804(%var_7805) /* ty=(Tensor[(4, 16, 8), float32], Tensor[(14, 16, 10), float32], Tensor[(2240), float32]) */
}

def @func_8401(%var_8398: Tensor[(156), int64], %var_8399: Tensor[(660), int64], %var_8400: Tensor[(1, 630), float32]) -> (Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32], Tensor[(2, 6, 13), int64], Tensor[(156), int64], Tensor[(13, 8), float32], Tensor[(1, 630), float32], Tensor[(12, 5, 11), float32], Tensor[(660), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) {
  @func_8396(%var_8398, %var_8399, %var_8400) /* ty=(Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32], Tensor[(2, 6, 13), int64], Tensor[(156), int64], Tensor[(13, 8), float32], Tensor[(1, 630), float32], Tensor[(12, 5, 11), float32], Tensor[(660), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) */
}

def @func_7741() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  @func_7739() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */
}

def @func_7804(%var_7796: Tensor[(2240), float32]) -> (Tensor[(4, 16, 8), float32], Tensor[(14, 16, 10), float32], Tensor[(2240), float32]) {
  %375 = cast(%var_7796, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %376 = reshape(%375, newshape=[14, 16, 10]) /* ty=Tensor[(14, 16, 10), float32] */;
  %377 = @func_6693(%376) /* ty=(Tensor[(14, 16, 10), float32],) */;
  %378 = @func_7335() /* ty=Tensor[(4, 16, 8), float32] */;
  %379 = %377.0;
  (%378, %379, %var_7796)
}

def @func_8436() -> (Tensor[(126), float32], Tensor[(336), float64], Tensor[(90), float32], Tensor[(720), float32], Tensor[(350), int64], Tensor[(13, 8), float32]) {
  %393 = fn () -> (Tensor[(126), float32], Tensor[(336), float64], Tensor[(90), float32], Tensor[(720), float32], Tensor[(350), int64], Tensor[(13, 8), float32]) {
    %380 = @func_5813() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(126), float32]) */;
    %381 = cast(meta[relay.Constant][25] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %382 = cast(meta[relay.Constant][26] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %383 = cast(meta[relay.Constant][27] /* ty=Tensor[(350), int64] */, dtype="int64") /* ty=Tensor[(350), int64] */;
    %384 = cast(meta[relay.Constant][26] /* ty=Tensor[(720), float32] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %385 = reshape(%381, newshape=[15, 6, 1]) /* ty=Tensor[(15, 6, 1), float32] */;
    %386 = reshape(%382, newshape=[15, 6, 8]) /* ty=Tensor[(15, 6, 8), float32] */;
    %387 = reshape(%383, newshape=[350]) /* ty=Tensor[(350), int64] */;
    %388 = reshape(%384, newshape=[15, 6, 8]) /* ty=Tensor[(15, 6, 8), float64] */;
    %389 = @func_5412(%385, %386, %387, %388) /* ty=(Tensor[(15, 6, 8), float64], Tensor[(168, 2), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float32], Tensor[(350), int64], Tensor[(126), float32], Tensor[(15, 6, 8), uint64]) */;
    %390 = %380.3;
    %391 = %389.2;
    %392 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
    (%390, %391, meta[relay.Constant][25] /* ty=Tensor[(90), float32] */, meta[relay.Constant][26] /* ty=Tensor[(720), float32] */, meta[relay.Constant][27] /* ty=Tensor[(350), int64] */, %392)
  };
  %393() /* ty=(Tensor[(126), float32], Tensor[(336), float64], Tensor[(90), float32], Tensor[(720), float32], Tensor[(350), int64], Tensor[(13, 8), float32]) */
}

def @func_1411(%var_1404: Tensor[(12, 5, 11), int64], %var_1405: Tensor[(12, 5, 11), int64]) -> Tensor[(12, 5, 11), int64] {
  %394 = cast(%var_1405, dtype="int64") /* ty=Tensor[(12, 5, 11), int64] */;
  %395 = shape_of(%var_1404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%var_1404, dtype="int64") /* ty=Tensor[(12, 5, 11), int64] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  maximum(%396, %397) /* ty=Tensor[(12, 5, 11), int64] */
}

def @func_8587(%var_8577: uint64, %var_8578: Tensor[(1, 1, 14), uint64]) -> (Tensor[(1, 1, 14), float64], Tensor[(13, 8), float32]) {
  %398 = cast(%var_8577, dtype="bool") /* ty=bool */;
  %399 = cast(%var_8578, dtype="bool") /* ty=Tensor[(1, 1, 14), bool] */;
  %400 = less_equal(%398, %399) /* ty=Tensor[(1, 1, 14), bool] */;
  %401 = cast(%400, dtype="float64") /* ty=Tensor[(1, 1, 14), float64] */;
  %402 = cos(%401) /* ty=Tensor[(1, 1, 14), float64] */;
  %403 = @func_3043() /* ty=Tensor[(13, 8), float32] */;
  (%402, %403)
}

def @func_2641(%var_2640: Tensor[(126), float32]) -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64]) {
  %411 = fn (%var_2631: Tensor[(126), float32]) -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64]) {
    %404 = cast(%var_2631, dtype="float32") /* ty=Tensor[(126), float32] */;
    %405 = cast(meta[relay.Constant][28] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %406 = reshape(%404, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
    %407 = reshape(%405, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %408 = @func_374(%406, %407) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
    %409 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
    %410 = %408.3;
    (%409, %410, %var_2631, meta[relay.Constant][28] /* ty=Tensor[(336), float64] */)
  };
  %411(%var_2640) /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64]) */
}

def @func_1901() -> Tensor[(13, 8), float32] {
  %413 = fn () -> Tensor[(13, 8), float32] {
    %412 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
    %412.0
  };
  %413() /* ty=Tensor[(13, 8), float32] */
}

def @func_6580() -> Tensor[(13, 8), float32] {
  %415 = fn () -> Tensor[(13, 8), float32] {
    %414 = @func_2936() /* ty=(Tensor[(13, 8), float32],) */;
    %414.0
  };
  %415() /* ty=Tensor[(13, 8), float32] */
}

def @func_748(%var_677: Tensor[(7, 16, 15), float64], %var_682: Tensor[(336), float64]) -> (Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(7, 16, 15), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64]) {
  %416 = cast(meta[relay.Constant][29] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %417 = cast(%var_682, dtype="float64") /* ty=Tensor[(336), float64] */;
  %418 = reshape(%416, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %419 = reshape(%417, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %420 = @func_374(%418, %419) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %421 = cast(%var_677, dtype="float64") /* ty=Tensor[(7, 16, 15), float64] */;
  %422 = log10(%421) /* ty=Tensor[(7, 16, 15), float64] */;
  %423 = cast(%var_677, dtype="float64") /* ty=Tensor[(7, 16, 15), float64] */;
  %424 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(%422, dtype="float64") /* ty=Tensor[(7, 16, 15), float64] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %427 = cast(%var_682, dtype="float64") /* ty=Tensor[(336), float64] */;
  %428 = reshape(%427, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %429 = @func_64(%428) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %430 = %429.0;
  %431 = cast(%430, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %432 = reshape(%431, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %433 = @func_64(%432) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %434 = cast(meta[relay.Constant][29] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %435 = %420.1;
  %436 = cast(%435, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %437 = reshape(%434, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %438 = reshape(%436, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %439 = @func_374(%437, %438) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %440 = cast(%435, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %441 = reshape(%440, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %442 = @func_64(%441) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %443 = cast(meta[relay.Constant][29] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %444 = %442.0;
  %445 = cast(%444, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %446 = reshape(%443, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %447 = reshape(%445, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %448 = @func_374(%446, %447) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %449 = %448.0;
  %450 = cast(%449, dtype="float32") /* ty=Tensor[(9, 14), float32] */;
  %451 = cast(%var_682, dtype="float64") /* ty=Tensor[(336), float64] */;
  %452 = reshape(%450, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %453 = reshape(%451, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %454 = @func_374(%452, %453) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %455 = floor_mod(%425, %426) /* ty=Tensor[(7, 16, 15), float64] */;
  %456 = %433.0;
  %457 = %439.0;
  %458 = %454.1;
  (%435, meta[relay.Constant][29] /* ty=Tensor[(126), float32] */, %var_682, %455, %430, %456, %457, %444, %449, %458)
}

def @func_3005(%var_3003: Tensor[(336), float64], %var_3004: Tensor[(3696), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(2, 840), float64], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(16, 7, 3), float64], Tensor[(2560), bool]) {
  %485 = fn (%var_2974: Tensor[(336), float64], %var_2975: Tensor[(3696), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(2, 840), float64], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(16, 7, 3), float64], Tensor[(2560), bool]) {
    %459 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %460 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 840), float64] */, dtype="float64") /* ty=Tensor[(2, 840), float64] */;
    %461 = cast(%var_2974, dtype="float64") /* ty=Tensor[(336), float64] */;
    %462 = cast(%var_2975, dtype="float64") /* ty=Tensor[(3696), float64] */;
    %463 = cast(%var_2975, dtype="bool") /* ty=Tensor[(3696), bool] */;
    %464 = reshape(%460, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
    %465 = reshape(%461, newshape=[1, 336]) /* ty=Tensor[(1, 336), float64] */;
    %466 = reshape(%462, newshape=[11, 336]) /* ty=Tensor[(11, 336), float64] */;
    %467 = reshape(%463, newshape=[11, 336]) /* ty=Tensor[(11, 336), bool] */;
    %468 = @func_1969(%464, %465, %466, %467) /* ty=(Tensor[(13, 8), float32], Tensor[(7, 16, 15), float64], Tensor[(1680), float64], Tensor[(11, 336), int64]) */;
    %469 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 840), float64] */, dtype="float64") /* ty=Tensor[(2, 840), float64] */;
    %470 = cast(%var_2974, dtype="float64") /* ty=Tensor[(336), float64] */;
    %471 = reshape(%469, newshape=[7, 16, 15]) /* ty=Tensor[(7, 16, 15), float64] */;
    %472 = reshape(%470, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %473 = @func_748(%471, %472) /* ty=(Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(7, 16, 15), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64]) */;
    %474 = cast(meta[relay.Constant][31] /* ty=Tensor[(2560), float64] */, dtype="float64") /* ty=Tensor[(2560), float64] */;
    %475 = reshape(%474, newshape=[16, 10, 16]) /* ty=Tensor[(16, 10, 16), float64] */;
    %476 = @func_1227(%475) /* ty=Tensor[(16, 10, 16), float64] */;
    %477 = cast(%476, dtype="bool") /* ty=Tensor[(16, 10, 16), bool] */;
    %478 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(2560), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %479 = cast(meta[relay.Constant][31] /* ty=Tensor[(2560), float64] */, dtype="bool") /* ty=Tensor[(2560), bool] */;
    %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?), bool] */;
    %481 = %459.0;
    %482 = %468.0;
    %483 = %473.5;
    %484 = greater_equal(%479, %480) /* ty=Tensor[(2560), bool] */;
    (%481, %482, meta[relay.Constant][30] /* ty=Tensor[(2, 840), float64] */, %var_2974, %var_2975, %483, %484)
  };
  %485(%var_3003, %var_3004) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(2, 840), float64], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(16, 7, 3), float64], Tensor[(2560), bool]) */
}

def @func_3939(%var_3938: Tensor[(12, 2, 1), float32]) -> Tensor[(12, 2, ?), bool] {
  %492 = fn (%var_3919: Tensor[(12, 2, 1), float32]) -> Tensor[(12, 2, ?), bool] {
    %486 = cast(%var_3919, dtype="float32") /* ty=Tensor[(12, 2, 1), float32] */;
    %487 = acos(%486) /* ty=Tensor[(12, 2, 1), float32] */;
    %488 = cast(%var_3919, dtype="bool") /* ty=Tensor[(12, 2, 1), bool] */;
    %489 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
    %490 = cast(%487, dtype="bool") /* ty=Tensor[(12, 2, 1), bool] */;
    %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%490, %491) /* ty=Tensor[(12, 2, ?), bool] */
  };
  %492(%var_3938) /* ty=Tensor[(12, 2, ?), bool] */
}

def @func_3784() -> (Tensor[(13, 8), float32],) {
  %495 = fn () -> (Tensor[(13, 8), float32],) {
    %493 = @func_3214() /* ty=(Tensor[(13, 8), float32],) */;
    %494 = %493.0;
    (%494,)
  };
  %495() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_5102(%var_5100: Tensor[(2, 12, 7), float64]) -> (Tensor[(2, 12, 7), float64], Tensor[(13, 8), float32]) {
  @func_5099(%var_5100) /* ty=(Tensor[(2, 12, 7), float64], Tensor[(13, 8), float32]) */
}

def @func_3258() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %499 = fn () -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
    %496 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %497 = @func_3043() /* ty=Tensor[(13, 8), float32] */;
    %498 = %496.0;
    (%497, %498)
  };
  %499() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */
}

def @func_4042(%var_4040: Tensor[(192), float64]) -> (Tensor[(13, 8), float32], Tensor[(6, 2, 16), float64], Tensor[(192), float64]) {
  @func_4039(%var_4040) /* ty=(Tensor[(13, 8), float32], Tensor[(6, 2, 16), float64], Tensor[(192), float64]) */
}

def @func_4316() -> (Tensor[(11, 1, 12), float32],) {
  %500 = @func_4281() /* ty=(Tensor[(11, 1, 12), float32],) */;
  %501 = %500.0;
  (%501,)
}

def @func_4703() -> Tensor[(13, 8), float32] {
  %502 = fn () -> Tensor[(13, 8), float32] {
    @func_3438() /* ty=Tensor[(13, 8), float32] */
  };
  %502() /* ty=Tensor[(13, 8), float32] */
}

def @func_3631() -> (Tensor[(16, 10, 16), float64],) {
  @func_3629() /* ty=(Tensor[(16, 10, 16), float64],) */
}

def @func_5731() -> (Tensor[(13, 8), float32],) {
  %505 = fn () -> (Tensor[(13, 8), float32],) {
    %503 = @func_4473() /* ty=(Tensor[(13, 8), float32],) */;
    %504 = %503.0;
    (%504,)
  };
  %505() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_1711() -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) {
  @func_1709() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) */
}

def @func_6853() -> (Tensor[(13, 8), float32],) {
  %507 = fn () -> (Tensor[(13, 8), float32],) {
    %506 = @func_3438() /* ty=Tensor[(13, 8), float32] */;
    (%506,)
  };
  %507() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_3361() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  @func_3359() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */
}

def @func_5325(%var_5324: Tensor[(336), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) {
  %516 = fn (%var_5313: Tensor[(336), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) {
    %508 = @func_3257() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %509 = @func_3359() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %510 = cast(%var_5313, dtype="float64") /* ty=Tensor[(336), float64] */;
    %511 = reshape(%510, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
    %512 = @func_64(%511) /* ty=(Tensor[(16, 7, 3), float64],) */;
    %513 = %508.1;
    %514 = %509.0;
    %515 = %512.0;
    (%513, %514, %515, %var_5313)
  };
  %516(%var_5324) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */
}

def @func_8158() -> (Tensor[(13, 8), float32],) {
  %517 = @func_6832() /* ty=Tensor[(13, 8), float32] */;
  (%517,)
}

def @func_374(%var_301: Tensor[(9, 14), float32], %var_320: Tensor[(336), float64]) -> (Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) {
  %518 = cast(%var_301, dtype="float32") /* ty=Tensor[(9, 14), float32] */;
  %519 = cast(%var_320, dtype="float64") /* ty=Tensor[(336), float64] */;
  %520 = reshape(%519, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %521 = @func_64(%520) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %522 = cast(%var_320, dtype="float64") /* ty=Tensor[(336), float64] */;
  %523 = reshape(%522, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %524 = @func_64(%523) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %525 = %521.0;
  %526 = cast(%525, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %527 = reshape(%526, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
  %528 = @func_64(%527) /* ty=(Tensor[(16, 7, 3), float64],) */;
  %529 = exp(%518) /* ty=Tensor[(9, 14), float32] */;
  %530 = %524.0;
  %531 = %528.0;
  (%529, %525, %var_320, %530, %531)
}

def @func_5538(%var_5509: Tensor[(16, 10, 16), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(16, 10, 16), int16], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %532 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %533 = @func_1709() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) */;
  %534 = %533.4;
  %535 = cast(%var_5509, dtype="int16") /* ty=Tensor[(16, 10, 16), int16] */;
  %536 = shape_of(%534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%534, dtype="int16") /* ty=Tensor[(16, 10, 16), int16] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %539 = %532.1;
  %540 = @func_3400() /* ty=Tensor[(13, 8), float32] */;
  %541 = bitwise_or(%537, %538) /* ty=Tensor[(16, 10, 16), int16] */;
  %542 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %543 = @func_3400() /* ty=Tensor[(13, 8), float32] */;
  (%539, %540, %541, %542, %543)
}

def @func_3180(%var_3136: Tensor[(168, 2), float64]) -> (Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(168, 2), float32]) {
  %544 = cast(%var_3136, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %545 = cast(meta[relay.Constant][32] /* ty=Tensor[(3696), float64] */, dtype="float64") /* ty=Tensor[(3696), float64] */;
  %546 = reshape(%544, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %547 = reshape(%545, newshape=[3696]) /* ty=Tensor[(3696), float64] */;
  %548 = @func_3002(%546, %547) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(2, 840), float64], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(16, 7, 3), float64], Tensor[(2560), bool]) */;
  %549 = cast(%var_3136, dtype="float32") /* ty=Tensor[(168, 2), float32] */;
  %550 = @func_3043() /* ty=Tensor[(13, 8), float32] */;
  %551 = %548.3;
  %552 = tan(%549) /* ty=Tensor[(168, 2), float32] */;
  (%550, %551, meta[relay.Constant][32] /* ty=Tensor[(3696), float64] */, %552)
}

def @func_6270(%var_6269: Tensor[(660), int64]) -> (Tensor[(13, 8), float32], Tensor[(168, 2), uint64], Tensor[(12, 5, 11), int64], Tensor[(660), int64]) {
  %570 = fn (%var_6254: Tensor[(660), int64]) -> (Tensor[(13, 8), float32], Tensor[(168, 2), uint64], Tensor[(12, 5, 11), int64], Tensor[(660), int64]) {
    %553 = @func_2798() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) */;
    %554 = @func_5882() /* ty=Tensor[(336), float64] */;
    %555 = cast(%554, dtype="float64") /* ty=Tensor[(336), float64] */;
    %556 = reshape(%555, newshape=[168, 2]) /* ty=Tensor[(168, 2), float64] */;
    %557 = @func_2706(%556) /* ty=(Tensor[(13, 8), float32], Tensor[(168, 2), bool]) */;
    %558 = %557.1;
    %559 = cast(%554, dtype="uint64") /* ty=Tensor[(336), uint64] */;
    %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(2), int32] */;
    %561 = cast(%558, dtype="uint64") /* ty=Tensor[(168, 2), uint64] */;
    %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %563 = cast(%var_6254, dtype="int64") /* ty=Tensor[(660), int64] */;
    %564 = cast(%var_6254, dtype="int64") /* ty=Tensor[(660), int64] */;
    %565 = reshape(%563, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
    %566 = reshape(%564, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
    %567 = %553.2;
    %568 = bitwise_and(%561, %562) /* ty=Tensor[(168, 2), uint64] */;
    %569 = @func_1411(%565, %566) /* ty=Tensor[(12, 5, 11), int64] */;
    (%567, %568, %569, %var_6254)
  };
  %570(%var_6269) /* ty=(Tensor[(13, 8), float32], Tensor[(168, 2), uint64], Tensor[(12, 5, 11), int64], Tensor[(660), int64]) */
}

def @func_7645(%var_7643: Tensor[(4, 16, 15), float32], %var_7644: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), int8], Tensor[(13, 8), float32]) {
  %588 = fn (%var_7620: Tensor[(4, 16, 15), float32], %var_7630: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), int8], Tensor[(13, 8), float32]) {
    %571 = @func_3272() /* ty=(Tensor[(4, 16, 15), float32],) */;
    %572 = %571.0;
    %573 = cast(%var_7620, dtype="bool") /* ty=Tensor[(4, 16, 15), bool] */;
    %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
    %575 = cast(%572, dtype="bool") /* ty=Tensor[(4, 16, 15), bool] */;
    %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %577 = @func_5813() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(126), float32]) */;
    %578 = cast(%var_7630, dtype="int8") /* ty=Tensor[(4, 16, 15), int8] */;
    %579 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
    %580 = cast(%572, dtype="int8") /* ty=Tensor[(4, 16, 15), int8] */;
    %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %582 = @func_5730() /* ty=(Tensor[(13, 8), float32],) */;
    %583 = greater(%575, %576) /* ty=Tensor[(4, 16, 15), bool] */;
    %584 = @func_6579() /* ty=Tensor[(13, 8), float32] */;
    %585 = %577.0;
    %586 = multiply(%580, %581) /* ty=Tensor[(4, 16, 15), int8] */;
    %587 = %582.0;
    (%583, %584, %585, %586, %587)
  };
  %588(%var_7643, %var_7644) /* ty=(Tensor[(4, 16, 15), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), int8], Tensor[(13, 8), float32]) */
}

def @func_3214() -> (Tensor[(13, 8), float32],) {
  %589 = @func_1900() /* ty=Tensor[(13, 8), float32] */;
  (%589,)
}

def @func_378(%var_376: Tensor[(9, 14), float32], %var_377: Tensor[(336), float64]) -> (Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) {
  @func_374(%var_376, %var_377) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */
}

def @func_6707(%var_6698: Tensor[(6, 6, 4), int8]) -> Tensor[(6, 6, 4), int8] {
  %590 = cast(meta[relay.Constant][33] /* ty=Tensor[(6, 6, 4), int8] */, dtype="int8") /* ty=Tensor[(6, 6, 4), int8] */;
  %591 = shape_of(%var_6698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%var_6698, dtype="int8") /* ty=Tensor[(6, 6, 4), int8] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%592, %593) /* ty=Tensor[(6, 6, 4), int8] */
}

def @func_5991() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %597 = fn () -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
    %594 = @func_4473() /* ty=(Tensor[(13, 8), float32],) */;
    %595 = @func_1900() /* ty=Tensor[(13, 8), float32] */;
    %596 = %594.0;
    (%595, %596)
  };
  %597() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */
}

def @func_3686(%var_3685: Tensor[(126), float32]) -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32], Tensor[(126), float32]) {
  %614 = fn (%var_3644: Tensor[(126), float32]) -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32], Tensor[(126), float32]) {
    %598 = @func_3359() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %599 = cast(%var_3644, dtype="float32") /* ty=Tensor[(126), float32] */;
    %600 = cast(meta[relay.Constant][34] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %601 = reshape(%599, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
    %602 = reshape(%600, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %603 = @func_374(%601, %602) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
    %604 = cast(meta[relay.Constant][34] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %605 = reshape(%604, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float64] */;
    %606 = @func_64(%605) /* ty=(Tensor[(16, 7, 3), float64],) */;
    %607 = @func_3359() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %608 = @func_1709() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) */;
    %609 = %598.1;
    %610 = %603.1;
    %611 = %606.0;
    %612 = %607.0;
    %613 = %608.2;
    (%609, %610, %var_3644, meta[relay.Constant][34] /* ty=Tensor[(336), float64] */, %611, %612, %613)
  };
  %614(%var_3685) /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(13, 8), float32], Tensor[(126), float32]) */
}

def @func_6898() -> Tensor[(13, 8), float32] {
  @func_1577() /* ty=Tensor[(13, 8), float32] */
}

def @func_2938() -> (Tensor[(13, 8), float32],) {
  @func_2936() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_7976() -> (Tensor[(13, 8), float32], Tensor[(336), bool], Tensor[(13, 8), float32]) {
  %620 = fn () -> (Tensor[(13, 8), float32], Tensor[(336), bool], Tensor[(13, 8), float32]) {
    %615 = @func_5304() /* ty=(Tensor[(336), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %616 = @func_5304() /* ty=(Tensor[(336), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %617 = %615.3;
    %618 = %616.0;
    %619 = @func_6898() /* ty=Tensor[(13, 8), float32] */;
    (%617, %618, %619)
  };
  %620() /* ty=(Tensor[(13, 8), float32], Tensor[(336), bool], Tensor[(13, 8), float32]) */
}

def @func_7552() -> Tensor[(13, 8), float32] {
  @func_5855() /* ty=Tensor[(13, 8), float32] */
}

def @func_6832() -> Tensor[(13, 8), float32] {
  %621 = @func_5990() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %621.0
}

def @func_2437() -> (Tensor[(13, 8), float32],) {
  %624 = fn () -> (Tensor[(13, 8), float32],) {
    %622 = @func_2411() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
    %623 = %622.0;
    (%623,)
  };
  %624() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_3066() -> (Tensor[(4, 16, 15), float32],) {
  %627 = fn () -> (Tensor[(4, 16, 15), float32],) {
    %625 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
    %626 = %625.1;
    (%626,)
  };
  %627() /* ty=(Tensor[(4, 16, 15), float32],) */
}

def @func_3183(%var_3181: Tensor[(168, 2), float64]) -> (Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(168, 2), float32]) {
  @func_3180(%var_3181) /* ty=(Tensor[(13, 8), float32], Tensor[(336), float64], Tensor[(3696), float64], Tensor[(168, 2), float32]) */
}

def @func_7505() -> (Tensor[(12, 16, 6), bool],) {
  %633 = fn () -> (Tensor[(12, 16, 6), bool],) {
    %628 = cast(meta[relay.Constant][36] /* ty=Tensor[(12, 16, 6), bool] */, dtype="bool") /* ty=Tensor[(12, 16, 6), bool] */;
    %629 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(12, 16, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %630 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 16, 6), bool] */, dtype="bool") /* ty=Tensor[(12, 16, 6), bool] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %632 = logical_or(%630, %631) /* ty=Tensor[(12, 16, 6), bool] */;
    (%632,)
  };
  %633() /* ty=(Tensor[(12, 16, 6), bool],) */
}

def @func_6482() -> (Tensor[(13, 8), float32],) {
  %636 = fn () -> (Tensor[(13, 8), float32],) {
    %634 = @func_3374() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %635 = %634.1;
    (%635,)
  };
  %636() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_3376() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  @func_3374() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */
}

def @func_8054(%var_8052: Tensor[(8, 11, 10), bool], %var_8053: Tensor[(8, 11, 10), bool]) -> (Tensor[(8, 11, 10), bool],) {
  %642 = fn (%var_8043: Tensor[(8, 11, 10), bool], %var_8044: Tensor[(8, 11, 10), bool]) -> (Tensor[(8, 11, 10), bool],) {
    %637 = cast(%var_8044, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
    %638 = shape_of(%var_8043, dtype="int32") /* ty=Tensor[(3), int32] */;
    %639 = cast(%var_8043, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
    %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %641 = logical_and(%639, %640) /* ty=Tensor[(8, 11, 10), bool] */;
    (%641,)
  };
  %642(%var_8052, %var_8053) /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_6927(%var_6925: Tensor[(2, 6, 13), int64], %var_6926: Tensor[(2, 6, 13), int64]) -> Tensor[(2, 6, 13), int64] {
  %647 = fn (%var_6917: Tensor[(2, 6, 13), int64], %var_6918: Tensor[(2, 6, 13), int64]) -> Tensor[(2, 6, 13), int64] {
    %643 = cast(%var_6918, dtype="int64") /* ty=Tensor[(2, 6, 13), int64] */;
    %644 = shape_of(%var_6917, dtype="int32") /* ty=Tensor[(3), int32] */;
    %645 = cast(%var_6917, dtype="int64") /* ty=Tensor[(2, 6, 13), int64] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    bitwise_and(%645, %646) /* ty=Tensor[(2, 6, 13), int64] */
  };
  %647(%var_6925, %var_6926) /* ty=Tensor[(2, 6, 13), int64] */
}

def @func_2799() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) {
  %658 = fn () -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) {
    %648 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
    %649 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
    %650 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
    %651 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %652 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
    %653 = %648.0;
    %654 = %649.0;
    %655 = %650.2;
    %656 = %651.0;
    %657 = %652.1;
    (%653, %654, %655, %656, %657)
  };
  %658() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) */
}

def @func_2543(%var_2454: Tensor[(20), float32], %var_2533: Tensor[(84), bool]) -> (Tensor[(13, 8), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(16, 7, 3), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(13, 8), float32]) {
  %659 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %660 = cast(%var_2454, dtype="float32") /* ty=Tensor[(20), float32] */;
  %661 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %662 = cast(%var_2454, dtype="float32") /* ty=Tensor[(20), float32] */;
  %663 = reshape(%662, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %664 = @func_800(%663) /* ty=(Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %665 = %664.1;
  %666 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 7, 3), float64] */, dtype="bool") /* ty=Tensor[(16, 7, 3), bool] */;
  %667 = shape_of(%665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%665, dtype="bool") /* ty=Tensor[(16, 7, 3), bool] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %670 = cast(%var_2533, dtype="bool") /* ty=Tensor[(84), bool] */;
  %671 = reshape(%670, newshape=[2, 6, 7]) /* ty=Tensor[(2, 6, 7), bool] */;
  %672 = %659.2;
  %673 = sqrt(%660) /* ty=Tensor[(20), float32] */;
  %674 = %661.1;
  %675 = greater(%668, %669) /* ty=Tensor[(16, 7, 3), bool] */;
  %676 = @func_956(%671) /* ty=Tensor[(2, 6, 7), bool] */;
  %677 = @func_2287() /* ty=Tensor[(13, 8), float32] */;
  (%672, %673, %674, %675, %676, %var_2533, %677)
}

def @func_6834() -> Tensor[(13, 8), float32] {
  @func_6832() /* ty=Tensor[(13, 8), float32] */
}

def @func_5028(%var_4965: Tensor[(20), float32], %var_4970: Tensor[(4, 16, 15), float32], %var_5005: Tensor[(4, 16, 15), float32]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(4, 16, 15), float32]) {
  %678 = cast(%var_4965, dtype="float32") /* ty=Tensor[(20), float32] */;
  %679 = reshape(%678, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %680 = @func_800(%679) /* ty=(Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %681 = @func_3065() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %682 = %681.0;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %684 = rsqrt(%683) /* ty=Tensor[(4, 16, 15), float64] */;
  %685 = cast(%684, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
  %686 = atan(%685) /* ty=Tensor[(4, 16, 15), float32] */;
  %687 = cast(%var_5005, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
  %688 = shape_of(%686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%686, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %691 = cast(%var_4970, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %692 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%682, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %695 = floor_divide(%693, %694) /* ty=Tensor[(4, 16, 15), float64] */;
  %696 = cast(%695, dtype="uint16") /* ty=Tensor[(4, 16, 15), uint16] */;
  %697 = shape_of(%686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%686, dtype="uint16") /* ty=Tensor[(4, 16, 15), uint16] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %700 = bitwise_xor(%698, %699) /* ty=Tensor[(4, 16, 15), uint16] */;
  %701 = cast(%700, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
  %702 = @func_4702() /* ty=Tensor[(13, 8), float32] */;
  %703 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %704 = %680.0;
  %705 = divide(%689, %690) /* ty=Tensor[(4, 16, 15), float32] */;
  %706 = cosh(%701) /* ty=Tensor[(4, 16, 15), float32] */;
  (%702, %703, %704, %var_4965, %705, %706)
}

def @func_6423(%var_6422: Tensor[(11, 2, 12), float32]) -> (Tensor[(13, 8), float32], Tensor[(11, 2, 12), bool], Tensor[(336), float64], Tensor[(20), float32], Tensor[(11, 1, 12), float32]) {
  %719 = fn (%var_6398: Tensor[(11, 2, 12), float32]) -> (Tensor[(13, 8), float32], Tensor[(11, 2, 12), bool], Tensor[(336), float64], Tensor[(20), float32], Tensor[(11, 1, 12), float32]) {
    %707 = @func_4427() /* ty=(Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) */;
    %708 = %707.2;
    %709 = cast(%708, dtype="bool") /* ty=Tensor[(11, 1, 12), bool] */;
    %710 = cast(%var_6398, dtype="bool") /* ty=Tensor[(11, 2, 12), bool] */;
    %711 = cast(meta[relay.Constant][38] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
    %712 = reshape(%711, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
    %713 = @func_800(%712) /* ty=(Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
    %714 = cast(%708, dtype="float32") /* ty=Tensor[(11, 1, 12), float32] */;
    %715 = @func_4702() /* ty=Tensor[(13, 8), float32] */;
    %716 = greater(%709, %710) /* ty=Tensor[(11, 2, 12), bool] */;
    %717 = %713.2;
    %718 = exp(%714) /* ty=Tensor[(11, 1, 12), float32] */;
    (%715, %716, %717, meta[relay.Constant][38] /* ty=Tensor[(20), float32] */, %718)
  };
  %719(%var_6422) /* ty=(Tensor[(13, 8), float32], Tensor[(11, 2, 12), bool], Tensor[(336), float64], Tensor[(20), float32], Tensor[(11, 1, 12), float32]) */
}

def @func_1578() -> Tensor[(13, 8), float32] {
  %721 = fn () -> Tensor[(13, 8), float32] {
    %720 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 8), float32] */;
    asinh(%720) /* ty=Tensor[(13, 8), float32] */
  };
  %721() /* ty=Tensor[(13, 8), float32] */
}

def @func_8500() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(10, 11, 15), float64], Tensor[(1650), float64]) {
  %727 = fn () -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(10, 11, 15), float64], Tensor[(1650), float64]) {
    %722 = cast(meta[relay.Constant][40] /* ty=Tensor[(1650), float64] */, dtype="float64") /* ty=Tensor[(1650), float64] */;
    %723 = reshape(%722, newshape=[10, 11, 15]) /* ty=Tensor[(10, 11, 15), float64] */;
    %724 = @func_6898() /* ty=Tensor[(13, 8), float32] */;
    %725 = @func_6579() /* ty=Tensor[(13, 8), float32] */;
    %726 = @func_7589(%723) /* ty=Tensor[(10, 11, 15), float64] */;
    (%724, %725, %726, meta[relay.Constant][40] /* ty=Tensor[(1650), float64] */)
  };
  %727() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(10, 11, 15), float64], Tensor[(1650), float64]) */
}

def @func_1589() -> (Tensor[(13, 8), float32],) {
  %729 = fn () -> (Tensor[(13, 8), float32],) {
    %728 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
    (%728,)
  };
  %729() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_4885(%var_4882: Tensor[(12, 1, 1), float64], %var_4883: Tensor[(20), float32], %var_4884: Tensor[(2560), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(2560), float64], Tensor[(12, 1, 1), float64], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(12, ?, ?), float64]) {
  @func_4880(%var_4882, %var_4883, %var_4884) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(2560), float64], Tensor[(12, 1, 1), float64], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(12, ?, ?), float64]) */
}

def @func_1974(%var_1970: Tensor[(1680), float64], %var_1971: Tensor[(1, 336), float64], %var_1972: Tensor[(11, 336), float64], %var_1973: Tensor[(11, 336), bool]) -> (Tensor[(13, 8), float32], Tensor[(7, 16, 15), float64], Tensor[(1680), float64], Tensor[(11, 336), int64]) {
  %745 = fn (%var_1920: Tensor[(1680), float64], %var_1921: Tensor[(1, 336), float64], %var_1941: Tensor[(11, 336), float64], %var_1961: Tensor[(11, 336), bool]) -> (Tensor[(13, 8), float32], Tensor[(7, 16, 15), float64], Tensor[(1680), float64], Tensor[(11, 336), int64]) {
    %730 = cast(%var_1920, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %731 = cast(%var_1921, dtype="float64") /* ty=Tensor[(1, 336), float64] */;
    %732 = reshape(%730, newshape=[7, 16, 15]) /* ty=Tensor[(7, 16, 15), float64] */;
    %733 = reshape(%731, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %734 = @func_748(%732, %733) /* ty=(Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(7, 16, 15), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64]) */;
    %735 = cast(%var_1921, dtype="bool") /* ty=Tensor[(1, 336), bool] */;
    %736 = cast(%var_1941, dtype="bool") /* ty=Tensor[(11, 336), bool] */;
    %737 = less(%735, %736) /* ty=Tensor[(11, 336), bool] */;
    %738 = cast(%var_1961, dtype="int64") /* ty=Tensor[(11, 336), int64] */;
    %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(2), int32] */;
    %740 = cast(%737, dtype="int64") /* ty=Tensor[(11, 336), int64] */;
    %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %742 = @func_1900() /* ty=Tensor[(13, 8), float32] */;
    %743 = %734.3;
    %744 = right_shift(%740, %741) /* ty=Tensor[(11, 336), int64] */;
    (%742, %743, %var_1920, %744)
  };
  %745(%var_1970, %var_1971, %var_1972, %var_1973) /* ty=(Tensor[(13, 8), float32], Tensor[(7, 16, 15), float64], Tensor[(1680), float64], Tensor[(11, 336), int64]) */
}

def @func_3359() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %746 = @func_2798() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) */;
  %747 = @func_2798() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) */;
  %748 = %746.1;
  %749 = %747.0;
  (%748, %749)
}

def @func_4880(%var_4734: Tensor[(12, 1, 1), float64], %var_4775: Tensor[(20), float32], %var_4811: Tensor[(2560), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(2560), float64], Tensor[(12, 1, 1), float64], Tensor[(13, 8), float32], Tensor[(16, 10, 16), float64], Tensor[(12, ?, ?), float64]) {
  %750 = @func_4473() /* ty=(Tensor[(13, 8), float32],) */;
  %751 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
  %752 = cast(%var_4775, dtype="float32") /* ty=Tensor[(20), float32] */;
  %753 = reshape(%752, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %754 = @func_800(%753) /* ty=(Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %755 = cast(%var_4811, dtype="float64") /* ty=Tensor[(2560), float64] */;
  %756 = reshape(%755, newshape=[16, 10, 16]) /* ty=Tensor[(16, 10, 16), float64] */;
  %757 = cast(%var_4734, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %758 = log(%757) /* ty=Tensor[(12, 1, 1), float64] */;
  %759 = cast(%758, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %760 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
  %761 = @func_3629() /* ty=(Tensor[(16, 10, 16), float64],) */;
  %762 = cast(%758, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %763 = rsqrt(%762) /* ty=Tensor[(12, 1, 1), float64] */;
  %764 = cast(%763, dtype="float32") /* ty=Tensor[(12, 1, 1), float32] */;
  %765 = sqrt(%764) /* ty=Tensor[(12, 1, 1), float32] */;
  %766 = cast(%765, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %767 = acosh(%766) /* ty=Tensor[(12, 1, 1), float64] */;
  %768 = cast(%767, dtype="float32") /* ty=Tensor[(12, 1, 1), float32] */;
  %769 = tan(%768) /* ty=Tensor[(12, 1, 1), float32] */;
  %770 = cast(%765, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %771 = sin(%770) /* ty=Tensor[(12, 1, 1), float64] */;
  %772 = cast(%771, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %773 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %774 = cast(%769, dtype="float64") /* ty=Tensor[(12, 1, 1), float64] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %776 = %750.0;
  %777 = %751.0;
  %778 = %754.0;
  %779 = @func_4702() /* ty=Tensor[(13, 8), float32] */;
  %780 = @func_1227(%756) /* ty=Tensor[(16, 10, 16), float64] */;
  %781 = log10(%759) /* ty=Tensor[(12, 1, 1), float64] */;
  %782 = %760.0;
  %783 = %761.0;
  %784 = divide(%774, %775) /* ty=Tensor[(12, ?, ?), float64] */;
  (%776, %777, %778, %var_4775, %779, %780, %var_4811, %781, %782, %783, %784)
}

def @func_3400() -> Tensor[(13, 8), float32] {
  @func_2287() /* ty=Tensor[(13, 8), float32] */
}

def @func_3043() -> Tensor[(13, 8), float32] {
  @func_1900() /* ty=Tensor[(13, 8), float32] */
}

def @func_6045() -> (Tensor[(16, 10, 16), float64],) {
  %787 = fn () -> (Tensor[(16, 10, 16), float64],) {
    %785 = @func_4516() /* ty=(Tensor[(16, 7, 3), float64], Tensor[(16, 10, 16), float64], Tensor[(13, 8), float32]) */;
    %786 = %785.1;
    (%786,)
  };
  %787() /* ty=(Tensor[(16, 10, 16), float64],) */
}

def @func_3864(%var_3863: Tensor[(6, 2, 16), float64]) -> (Tensor[(6, 2, 16), float64], Tensor[(6, 2, 16), uint8]) {
  %797 = fn (%var_3827: Tensor[(6, 2, 16), float64]) -> (Tensor[(6, 2, 16), float64], Tensor[(6, 2, 16), uint8]) {
    %788 = cast(%var_3827, dtype="float64") /* ty=Tensor[(6, 2, 16), float64] */;
    %789 = cast(%var_3827, dtype="float32") /* ty=Tensor[(6, 2, 16), float32] */;
    %790 = acosh(%789) /* ty=Tensor[(6, 2, 16), float32] */;
    %791 = cast(%var_3827, dtype="uint8") /* ty=Tensor[(6, 2, 16), uint8] */;
    %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(3), int32] */;
    %793 = cast(%790, dtype="uint8") /* ty=Tensor[(6, 2, 16), uint8] */;
    %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %795 = atan(%788) /* ty=Tensor[(6, 2, 16), float64] */;
    %796 = maximum(%793, %794) /* ty=Tensor[(6, 2, 16), uint8] */;
    (%795, %796)
  };
  %797(%var_3863) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(6, 2, 16), uint8]) */
}

def @func_6979() -> Tensor[(13, 8), float32] {
  %798 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %798.0
}

def @func_7283() -> (Tensor[(13, 8), float32], Tensor[(11, 1, 12), float32]) {
  @func_7281() /* ty=(Tensor[(13, 8), float32], Tensor[(11, 1, 12), float32]) */
}

def @func_7169() -> Tensor[(13, 8), float32] {
  %799 = fn () -> Tensor[(13, 8), float32] {
    @func_5855() /* ty=Tensor[(13, 8), float32] */
  };
  %799() /* ty=Tensor[(13, 8), float32] */
}

def @func_7739() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %800 = @func_6481() /* ty=(Tensor[(13, 8), float32],) */;
  %801 = @func_3783() /* ty=(Tensor[(13, 8), float32],) */;
  %802 = %800.0;
  %803 = %801.0;
  (%802, %803)
}

def @func_5336() -> (Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) {
  %808 = fn () -> (Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) {
    %804 = @func_3272() /* ty=(Tensor[(4, 16, 15), float32],) */;
    %805 = @func_3374() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %806 = %804.0;
    %807 = %805.0;
    (%806, %807)
  };
  %808() /* ty=(Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */
}

def @func_8038() -> (Tensor[(13, 8), float32],) {
  %809 = @func_7552() /* ty=Tensor[(13, 8), float32] */;
  (%809,)
}

def @func_4474() -> (Tensor[(13, 8), float32],) {
  %812 = fn () -> (Tensor[(13, 8), float32],) {
    %810 = @func_2936() /* ty=(Tensor[(13, 8), float32],) */;
    %811 = %810.0;
    (%811,)
  };
  %812() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_6074() -> Tensor[(16, 15, 16), int8] {
  %813 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 15, 16), uint64] */, dtype="uint64") /* ty=Tensor[(16, 15, 16), uint64] */;
  %814 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(16, 15, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 15, 16), uint64] */, dtype="uint64") /* ty=Tensor[(16, 15, 16), uint64] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %817 = subtract(%815, %816) /* ty=Tensor[(16, 15, 16), uint64] */;
  %818 = cast(%817, dtype="int8") /* ty=Tensor[(16, 15, 16), int8] */;
  %819 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(16, 15, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 15, 16), uint64] */, dtype="int8") /* ty=Tensor[(16, 15, 16), int8] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%820, %821) /* ty=Tensor[(16, 15, 16), int8] */
}

def @func_6300() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %822 = @func_4652() /* ty=(Tensor[(13, 8), float32],) */;
  %823 = @func_3214() /* ty=(Tensor[(13, 8), float32],) */;
  %824 = %822.0;
  %825 = %823.0;
  (%824, %825)
}

def @func_1709() -> (Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) {
  %826 = cast(meta[relay.Constant][43] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %827 = cast(meta[relay.Constant][44] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %828 = reshape(%826, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
  %829 = reshape(%827, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %830 = @func_374(%828, %829) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
  %831 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 640), float64] */, dtype="float64") /* ty=Tensor[(4, 640), float64] */;
  %832 = reshape(%831, newshape=[16, 10, 16]) /* ty=Tensor[(16, 10, 16), float64] */;
  %833 = @func_1577() /* ty=Tensor[(13, 8), float32] */;
  %834 = %830.3;
  %835 = @func_1227(%832) /* ty=Tensor[(16, 10, 16), float64] */;
  (%833, %834, meta[relay.Constant][43] /* ty=Tensor[(126), float32] */, meta[relay.Constant][44] /* ty=Tensor[(336), float64] */, %835, meta[relay.Constant][45] /* ty=Tensor[(4, 640), float64] */)
}

def @func_2936() -> (Tensor[(13, 8), float32],) {
  %836 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
  %837 = %836.0;
  (%837,)
}

def @func_2288() -> Tensor[(13, 8), float32] {
  %839 = fn () -> Tensor[(13, 8), float32] {
    %838 = @func_1588() /* ty=(Tensor[(13, 8), float32],) */;
    %838.0
  };
  %839() /* ty=Tensor[(13, 8), float32] */
}

def @func_3374() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %840 = @func_3257() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
  %841 = @func_2936() /* ty=(Tensor[(13, 8), float32],) */;
  %842 = %840.0;
  %843 = %841.0;
  (%842, %843)
}

def @func_4653() -> (Tensor[(13, 8), float32],) {
  %846 = fn () -> (Tensor[(13, 8), float32],) {
    %844 = @func_2436() /* ty=(Tensor[(13, 8), float32],) */;
    %845 = %844.0;
    (%845,)
  };
  %846() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_3402() -> Tensor[(13, 8), float32] {
  @func_3400() /* ty=Tensor[(13, 8), float32] */
}

def @func_4427() -> (Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) {
  %847 = @func_2411() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
  %848 = @func_1709() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) */;
  %849 = %848.3;
  %850 = cast(meta[relay.Constant][46] /* ty=Tensor[(336), float64] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %851 = shape_of(%849, dtype="int32") /* ty=Tensor[(1), int32] */;
  %852 = cast(%849, dtype="bool") /* ty=Tensor[(336), bool] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?), bool] */;
  %854 = @func_4281() /* ty=(Tensor[(11, 1, 12), float32],) */;
  %855 = %847.2;
  %856 = less(%852, %853) /* ty=Tensor[(336), bool] */;
  %857 = %854.0;
  (%855, %856, %857)
}

def @func_6302() -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  @func_6300() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */
}

def @func_6725() -> (Tensor[(4, 16, 15), float64],) {
  %858 = @func_5335() /* ty=(Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
  %859 = %858.0;
  %860 = cast(%859, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
  %861 = log(%860) /* ty=Tensor[(4, 16, 15), float64] */;
  (%861,)
}

def @func_1862(%var_1858: uint16, %var_1859: Tensor[(1, 2, 11), uint16], %var_1860: Tensor[(126), float32], %var_1861: Tensor[(6, 2, 11), uint16]) -> (Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(6, 2, 11), bool], Tensor[(12, 5, 11), int64], Tensor[(1, 660), int64]) {
  %879 = fn (%var_1819: uint16, %var_1820: Tensor[(1, 2, 11), uint16], %var_1825: Tensor[(126), float32], %var_1831: Tensor[(6, 2, 11), uint16]) -> (Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(6, 2, 11), bool], Tensor[(12, 5, 11), int64], Tensor[(1, 660), int64]) {
    %862 = cast(%var_1825, dtype="float32") /* ty=Tensor[(126), float32] */;
    %863 = cast(meta[relay.Constant][47] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %864 = reshape(%862, newshape=[9, 14]) /* ty=Tensor[(9, 14), float32] */;
    %865 = reshape(%863, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %866 = @func_374(%864, %865) /* ty=(Tensor[(9, 14), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64], Tensor[(16, 7, 3), float64], Tensor[(16, 7, 3), float64]) */;
    %867 = cast(%var_1819, dtype="uint16") /* ty=uint16 */;
    %868 = cast(%var_1820, dtype="uint16") /* ty=Tensor[(1, 2, 11), uint16] */;
    %869 = right_shift(%867, %868) /* ty=Tensor[(1, 2, 11), uint16] */;
    %870 = cast(%869, dtype="bool") /* ty=Tensor[(1, 2, 11), bool] */;
    %871 = cast(%var_1831, dtype="bool") /* ty=Tensor[(6, 2, 11), bool] */;
    %872 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 660), int64] */, dtype="int64") /* ty=Tensor[(1, 660), int64] */;
    %873 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 660), int64] */, dtype="int64") /* ty=Tensor[(1, 660), int64] */;
    %874 = reshape(%872, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
    %875 = reshape(%873, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
    %876 = %866.4;
    %877 = less(%870, %871) /* ty=Tensor[(6, 2, 11), bool] */;
    %878 = @func_1411(%874, %875) /* ty=Tensor[(12, 5, 11), int64] */;
    (%876, %var_1825, meta[relay.Constant][47] /* ty=Tensor[(336), float64] */, %877, %878, meta[relay.Constant][48] /* ty=Tensor[(1, 660), int64] */)
  };
  %879(%var_1858, %var_1859, %var_1860, %var_1861) /* ty=(Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(6, 2, 11), bool], Tensor[(12, 5, 11), int64], Tensor[(1, 660), int64]) */
}

def @func_4281() -> (Tensor[(11, 1, 12), float32],) {
  %880 = cast(meta[relay.Constant][49] /* ty=Tensor[(11, 1, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 12), float32] */;
  %881 = tan(%880) /* ty=Tensor[(11, 1, 12), float32] */;
  (%881,)
}

def @func_3439() -> Tensor[(13, 8), float32] {
  %883 = fn () -> Tensor[(13, 8), float32] {
    %882 = @func_3257() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %882.1
  };
  %883() /* ty=Tensor[(13, 8), float32] */
}

def @func_7770() -> Tensor[(13, 8), float32] {
  %884 = @func_6852() /* ty=(Tensor[(13, 8), float32],) */;
  %884.0
}

def @func_5305() -> (Tensor[(336), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  %893 = fn () -> (Tensor[(336), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
    %885 = @func_4427() /* ty=(Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) */;
    %886 = @func_2436() /* ty=(Tensor[(13, 8), float32],) */;
    %887 = @func_1756() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %888 = @func_2436() /* ty=(Tensor[(13, 8), float32],) */;
    %889 = %885.1;
    %890 = %886.0;
    %891 = %887.1;
    %892 = %888.0;
    (%889, %890, %891, %892)
  };
  %893() /* ty=(Tensor[(336), bool], Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */
}

def @func_5447(%var_5445: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), float64], Tensor[(13, 8), float32]) {
  @func_5444(%var_5445) /* ty=(Tensor[(4, 16, 15), float64], Tensor[(13, 8), float32]) */
}

def @func_6981() -> Tensor[(13, 8), float32] {
  @func_6979() /* ty=Tensor[(13, 8), float32] */
}

def @func_5847(%var_5841: uint16, %var_5842: Tensor[(9, 9, 12), uint16]) -> (Tensor[(9, 9, 12), uint16],) {
  %894 = cast(%var_5841, dtype="uint16") /* ty=uint16 */;
  %895 = cast(%var_5842, dtype="uint16") /* ty=Tensor[(9, 9, 12), uint16] */;
  %896 = maximum(%894, %895) /* ty=Tensor[(9, 9, 12), uint16] */;
  (%896,)
}

def @func_8179(%var_8174: Tensor[(3, 12, 2), int64]) -> (Tensor[(3, 12, 2), int64],) {
  %897 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 12, 1), int64] */, dtype="int64") /* ty=Tensor[(3, 12, 1), int64] */;
  %898 = cast(%var_8174, dtype="int64") /* ty=Tensor[(3, 12, 2), int64] */;
  %899 = left_shift(%897, %898) /* ty=Tensor[(3, 12, 2), int64] */;
  (%899,)
}

def @func_8647() -> (Tensor[(13, 8), float32],) {
  %901 = fn () -> (Tensor[(13, 8), float32],) {
    %900 = @func_7770() /* ty=Tensor[(13, 8), float32] */;
    (%900,)
  };
  %901() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_8040() -> (Tensor[(13, 8), float32],) {
  @func_8038() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_7262(%var_7261: Tensor[(3, 15, 14), float32]) -> (Tensor[(13, 8), float32], Tensor[(3, 15, 14), int64], Tensor[(12, 2, ?), bool], Tensor[(24), float32]) {
  %913 = fn (%var_7209: Tensor[(3, 15, 14), float32]) -> (Tensor[(13, 8), float32], Tensor[(3, 15, 14), int64], Tensor[(12, 2, ?), bool], Tensor[(24), float32]) {
    %902 = cast(%var_7209, dtype="float32") /* ty=Tensor[(3, 15, 14), float32] */;
    %903 = acos(%902) /* ty=Tensor[(3, 15, 14), float32] */;
    %904 = cast(%903, dtype="int64") /* ty=Tensor[(3, 15, 14), int64] */;
    %905 = shape_of(%var_7209, dtype="int32") /* ty=Tensor[(3), int32] */;
    %906 = cast(%var_7209, dtype="int64") /* ty=Tensor[(3, 15, 14), int64] */;
    %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %908 = cast(meta[relay.Constant][51] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %909 = reshape(%908, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float32] */;
    %910 = @func_3438() /* ty=Tensor[(13, 8), float32] */;
    %911 = maximum(%906, %907) /* ty=Tensor[(3, 15, 14), int64] */;
    %912 = @func_3937(%909) /* ty=Tensor[(12, 2, ?), bool] */;
    (%910, %911, %912, meta[relay.Constant][51] /* ty=Tensor[(24), float32] */)
  };
  %913(%var_7261) /* ty=(Tensor[(13, 8), float32], Tensor[(3, 15, 14), int64], Tensor[(12, 2, ?), bool], Tensor[(24), float32]) */
}

def @func_8675() -> Tensor[(16, 10, 16), float64] {
  %914 = @func_6044() /* ty=(Tensor[(16, 10, 16), float64],) */;
  %914.0
}

def @func_803(%var_801: Tensor[(4, 1, 5), float32]) -> (Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) {
  @func_800(%var_801) /* ty=(Tensor[(4, 1, 5), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */
}

def @func_4590(%var_4589: Tensor[(24), float32]) -> (Tensor[(13, 8), float32], Tensor[(12, 2, ?), bool], Tensor[(24), float32], Tensor[(12, 3, 9), float32], Tensor[(324), uint32], Tensor[(336), bool]) {
  %927 = fn (%var_4560: Tensor[(24), float32]) -> (Tensor[(13, 8), float32], Tensor[(12, 2, ?), bool], Tensor[(24), float32], Tensor[(12, 3, 9), float32], Tensor[(324), uint32], Tensor[(336), bool]) {
    %915 = cast(%var_4560, dtype="float32") /* ty=Tensor[(24), float32] */;
    %916 = reshape(%915, newshape=[12, 2, 1]) /* ty=Tensor[(12, 2, 1), float32] */;
    %917 = cast(meta[relay.Constant][52] /* ty=Tensor[(324), uint32] */, dtype="uint32") /* ty=Tensor[(324), uint32] */;
    %918 = cast(meta[relay.Constant][52] /* ty=Tensor[(324), uint32] */, dtype="uint32") /* ty=Tensor[(324), uint32] */;
    %919 = reshape(%917, newshape=[12, 3, 9]) /* ty=Tensor[(12, 3, 9), uint32] */;
    %920 = reshape(%918, newshape=[12, 3, 9]) /* ty=Tensor[(12, 3, 9), uint32] */;
    %921 = @func_2365(%919, %920) /* ty=(Tensor[(12, 3, 9), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(12, 3, 9), float32]) */;
    %922 = @func_4427() /* ty=(Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) */;
    %923 = @func_3043() /* ty=Tensor[(13, 8), float32] */;
    %924 = @func_3937(%916) /* ty=Tensor[(12, 2, ?), bool] */;
    %925 = %921.3;
    %926 = %922.1;
    (%923, %924, %var_4560, %925, meta[relay.Constant][52] /* ty=Tensor[(324), uint32] */, %926)
  };
  %927(%var_4589) /* ty=(Tensor[(13, 8), float32], Tensor[(12, 2, ?), bool], Tensor[(24), float32], Tensor[(12, 3, 9), float32], Tensor[(324), uint32], Tensor[(336), bool]) */
}

def @func_8677() -> Tensor[(16, 10, 16), float64] {
  @func_8675() /* ty=Tensor[(16, 10, 16), float64] */
}

def @func_7554() -> Tensor[(13, 8), float32] {
  @func_7552() /* ty=Tensor[(13, 8), float32] */
}

def @func_2256() -> (Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) {
  %934 = fn () -> (Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) {
    %928 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 16, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 16, 15), float64] */;
    %929 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 16, 15), float64] */, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
    %930 = @func_1709() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(126), float32], Tensor[(336), float64], Tensor[(16, 10, 16), float64], Tensor[(4, 640), float64]) */;
    %931 = tan(%928) /* ty=Tensor[(4, 16, 15), float64] */;
    %932 = exp(%929) /* ty=Tensor[(4, 16, 15), float32] */;
    %933 = %930.0;
    (%931, %932, %933)
  };
  %934() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */
}

def @func_6820() -> (Tensor[(13, 8), float32],) {
  %937 = fn () -> (Tensor[(13, 8), float32],) {
    %935 = @func_5990() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %936 = %935.1;
    (%936,)
  };
  %937() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_6131(%var_6129: Tensor[(9, 15, 14), float32], %var_6130: Tensor[(9, 15, 14), float32]) -> (Tensor[(168, 2), bool], Tensor[(336), float64], Tensor[(9, 15, 14), uint16]) {
  @func_6127(%var_6129, %var_6130) /* ty=(Tensor[(168, 2), bool], Tensor[(336), float64], Tensor[(9, 15, 14), uint16]) */
}

def @func_8754(%var_8752: Tensor[(6, 13, 5), float32]) -> Tensor[(6, 13, 5), float32] {
  @func_8751(%var_8752) /* ty=Tensor[(6, 13, 5), float32] */
}

def @func_8160() -> (Tensor[(13, 8), float32],) {
  @func_8158() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_5882() -> Tensor[(336), float64] {
  %938 = @func_4427() /* ty=(Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) */;
  %938.0
}

def @func_8182(%var_8180: Tensor[(3, 12, 2), int64]) -> (Tensor[(3, 12, 2), int64],) {
  @func_8179(%var_8180) /* ty=(Tensor[(3, 12, 2), int64],) */
}

def @func_8396(%var_8291: Tensor[(156), int64], %var_8323: Tensor[(660), int64], %var_8347: Tensor[(1, 630), float32]) -> (Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32], Tensor[(2, 6, 13), int64], Tensor[(156), int64], Tensor[(13, 8), float32], Tensor[(1, 630), float32], Tensor[(12, 5, 11), float32], Tensor[(660), float32], Tensor[(13, 8), float32], Tensor[(4, 16, 15), float32]) {
  %939 = @func_3272() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %940 = cast(%var_8291, dtype="int64") /* ty=Tensor[(156), int64] */;
  %941 = cast(%var_8291, dtype="int64") /* ty=Tensor[(156), int64] */;
  %942 = reshape(%940, newshape=[2, 6, 13]) /* ty=Tensor[(2, 6, 13), int64] */;
  %943 = reshape(%941, newshape=[2, 6, 13]) /* ty=Tensor[(2, 6, 13), int64] */;
  %944 = cast(%var_8347, dtype="float32") /* ty=Tensor[(1, 630), float32] */;
  %945 = reshape(%944, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float32] */;
  %946 = @func_7260(%945) /* ty=(Tensor[(13, 8), float32], Tensor[(3, 15, 14), int64], Tensor[(12, 2, ?), bool], Tensor[(24), float32]) */;
  %947 = cast(%var_8323, dtype="int64") /* ty=Tensor[(660), int64] */;
  %948 = cast(%var_8323, dtype="int64") /* ty=Tensor[(660), int64] */;
  %949 = reshape(%947, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
  %950 = reshape(%948, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), int64] */;
  %951 = @func_1411(%949, %950) /* ty=Tensor[(12, 5, 11), int64] */;
  %952 = cast(%var_8323, dtype="float32") /* ty=Tensor[(660), float32] */;
  %953 = shape_of(%951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%951, dtype="float32") /* ty=Tensor[(12, 5, 11), float32] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %956 = cast(%var_8323, dtype="float32") /* ty=Tensor[(660), float32] */;
  %957 = @func_8038() /* ty=(Tensor[(13, 8), float32],) */;
  %958 = @func_3272() /* ty=(Tensor[(4, 16, 15), float32],) */;
  %959 = %939.0;
  %960 = @func_3400() /* ty=Tensor[(13, 8), float32] */;
  %961 = @func_6924(%942, %943) /* ty=Tensor[(2, 6, 13), int64] */;
  %962 = %946.0;
  %963 = power(%954, %955) /* ty=Tensor[(12, 5, 11), float32] */;
  %964 = sinh(%956) /* ty=Tensor[(660), float32] */;
  %965 = %957.0;
  %966 = %958.0;
  (%959, %960, %961, %var_8291, %962, %var_8347, %963, %964, %965, %966)
}

def @func_4429() -> (Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) {
  @func_4427() /* ty=(Tensor[(336), float64], Tensor[(336), bool], Tensor[(11, 1, 12), float32]) */
}

def @func_3216() -> (Tensor[(13, 8), float32],) {
  @func_3214() /* ty=(Tensor[(13, 8), float32],) */
}

def @func_958(%var_957: Tensor[(2, 6, 7), bool]) -> Tensor[(2, 6, 7), bool] {
  %971 = fn (%var_945: Tensor[(2, 6, 7), bool]) -> Tensor[(2, 6, 7), bool] {
    %967 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 6, 7), bool] */, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
    %968 = shape_of(%var_945, dtype="int32") /* ty=Tensor[(3), int32] */;
    %969 = cast(%var_945, dtype="bool") /* ty=Tensor[(2, 6, 7), bool] */;
    %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%969, %970) /* ty=Tensor[(2, 6, 7), bool] */
  };
  %971(%var_957) /* ty=Tensor[(2, 6, 7), bool] */
}

def @func_2547(%var_2545: Tensor[(20), float32], %var_2546: Tensor[(84), bool]) -> (Tensor[(13, 8), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(16, 7, 3), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(13, 8), float32]) {
  @func_2543(%var_2545, %var_2546) /* ty=(Tensor[(13, 8), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(16, 7, 3), bool], Tensor[(2, 6, 7), bool], Tensor[(84), bool], Tensor[(13, 8), float32]) */
}

def @func_5033(%var_5030: Tensor[(20), float32], %var_5031: Tensor[(4, 16, 15), float32], %var_5032: Tensor[(4, 16, 15), float32]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(4, 16, 15), float32]) {
  @func_5028(%var_5030, %var_5031, %var_5032) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(4, 1, 5), float32], Tensor[(20), float32], Tensor[(4, 16, 15), float32], Tensor[(4, 16, 15), float32]) */
}

def @func_5541(%var_5539: Tensor[(16, 10, 16), float64]) -> (Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(16, 10, 16), int16], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) {
  @func_5538(%var_5539) /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32], Tensor[(16, 10, 16), int16], Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */
}

def @func_3274() -> (Tensor[(4, 16, 15), float32],) {
  @func_3272() /* ty=(Tensor[(4, 16, 15), float32],) */
}

def @func_4517() -> (Tensor[(16, 7, 3), float64], Tensor[(16, 10, 16), float64], Tensor[(13, 8), float32]) {
  %978 = fn () -> (Tensor[(16, 7, 3), float64], Tensor[(16, 10, 16), float64], Tensor[(13, 8), float32]) {
    %972 = @func_2411() /* ty=(Tensor[(13, 8), float32], Tensor[(16, 7, 3), float64], Tensor[(336), float64]) */;
    %973 = @func_3629() /* ty=(Tensor[(16, 10, 16), float64],) */;
    %974 = @func_3374() /* ty=(Tensor[(13, 8), float32], Tensor[(13, 8), float32]) */;
    %975 = %972.1;
    %976 = %973.0;
    %977 = %974.1;
    (%975, %976, %977)
  };
  %978() /* ty=(Tensor[(16, 7, 3), float64], Tensor[(16, 10, 16), float64], Tensor[(13, 8), float32]) */
}

def @func_7194() -> Tensor[(4, 16, 15), float32] {
  %980 = fn () -> Tensor[(4, 16, 15), float32] {
    %979 = @func_2255() /* ty=(Tensor[(4, 16, 15), float64], Tensor[(4, 16, 15), float32], Tensor[(13, 8), float32]) */;
    %979.1
  };
  %980() /* ty=Tensor[(4, 16, 15), float32] */
}

def @func_3045() -> Tensor[(13, 8), float32] {
  @func_3043() /* ty=Tensor[(13, 8), float32] */
}

def @func_6513() -> (Tensor[(1, 12, 1), float32],) {
  %983 = fn () -> (Tensor[(1, 12, 1), float32],) {
    %981 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 12, 1), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 1), float32] */;
    %982 = atan(%981) /* ty=Tensor[(1, 12, 1), float32] */;
    (%982,)
  };
  %983() /* ty=(Tensor[(1, 12, 1), float32],) */
}

def @func_6696(%var_6694: Tensor[(14, 16, 10), float32]) -> (Tensor[(14, 16, 10), float32],) {
  @func_6693(%var_6694) /* ty=(Tensor[(14, 16, 10), float32],) */
}

def @func_6900() -> Tensor[(13, 8), float32] {
  @func_6898() /* ty=Tensor[(13, 8), float32] */
}

def @func_6727() -> (Tensor[(4, 16, 15), float64],) {
  @func_6725() /* ty=(Tensor[(4, 16, 15), float64],) */
}

def @func_2853(%var_2850: Tensor[(10, 5, 7), int64], %var_2851: Tensor[(10, 5, 7), int64], %var_2852: Tensor[(3, 42), float32]) -> (Tensor[(10, 5, 7), bool], Tensor[(3, 42), float32], Tensor[(16, 7, 3), float32]) {
  @func_2848(%var_2850, %var_2851, %var_2852) /* ty=(Tensor[(10, 5, 7), bool], Tensor[(3, 42), float32], Tensor[(16, 7, 3), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

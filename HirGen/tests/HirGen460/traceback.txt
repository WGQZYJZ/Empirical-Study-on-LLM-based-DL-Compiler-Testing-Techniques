==========mod==========
#[version = "0.0.5"]
def @func_7007() -> (Tensor[(16, 3, 13), float32],) {
  %0 = @func_5265() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %1 = %0.0;
  (%1,)
}

def @func_5504() -> (Tensor[(16, 3, 13), float32],) {
  %2 = @func_4897() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %3 = %2.0;
  %4 = cast(%3, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %5 = sqrt(%4) /* ty=Tensor[(16, 3, 13), float32] */;
  (%5,)
}

def @func_10077() -> (Tensor[(16, 3, 13), float32],) {
  %6 = @func_8188() /* ty=Tensor[(16, 3, 13), float32] */;
  (%6,)
}

def @func_10579() -> Tensor[(16, 3, 13), float32] {
  @func_9051() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_8108() -> (Tensor[(16, 3, 13), float32],) {
  %7 = @func_6560() /* ty=Tensor[(16, 3, 13), float32] */;
  (%7,)
}

def @func_11981() -> (Tensor[(16, 3, 13), float32],) {
  %8 = @func_5137() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %9 = %8.0;
  (%9,)
}

def @func_9981() -> (Tensor[(16, 3, 13), float32],) {
  %10 = @func_8709() /* ty=Tensor[(16, 3, 13), float32] */;
  (%10,)
}

def @func_3873() -> Tensor[(16, 3, 13), float32] {
  @func_3664() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_12080(%var_12066: Tensor[(30), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %11 = @func_10213() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %12 = cast(%var_12066, dtype="float32") /* ty=Tensor[(30), float32] */;
  %13 = reshape(%12, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %14 = @func_6316(%13) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(3, 10, ?), bool], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), float32], Tensor[(16, 3, 13), float64], Tensor[(16, 3, 13), float32]) */;
  %15 = @func_8144() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %16 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %17 = %11.1;
  %18 = @func_7986() /* ty=Tensor[(16, 3, 13), float32] */;
  %19 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
  %20 = %14.4;
  %21 = %15.0;
  %22 = %16.0;
  (%17, %18, %19, %20, %var_12066, %21, %22)
}

def @func_7547(%var_7488: Tensor[(2, 9, 12), float64], %var_7532: Tensor[(16, 5, 9), float64]) -> (Tensor[(2, 9, 12), float64], Tensor[(16, 3, 13), float32], Tensor[(16, 5, 9), uint16]) {
  %23 = cast(7.18926f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %24 = cast(%var_7488, dtype="float64") /* ty=Tensor[(2, 9, 12), float64] */;
  %25 = @func_6122() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %26 = cast(7.18926f64 /* ty=float64 */, dtype="uint16") /* ty=uint16 */;
  %27 = cast(%var_7532, dtype="uint16") /* ty=Tensor[(16, 5, 9), uint16] */;
  %28 = divide(%23, %24) /* ty=Tensor[(2, 9, 12), float64] */;
  %29 = %25.0;
  %30 = right_shift(%26, %27) /* ty=Tensor[(16, 5, 9), uint16] */;
  (%28, %29, %30)
}

def @func_4753(%var_4675: Tensor[(99), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), int32], Tensor[(16, 3, 13), float32]) {
  %31 = @func_4166() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %32 = %31.0;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %34 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %35 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %36 = cast(%var_4675, dtype="float64") /* ty=Tensor[(99), float64] */;
  %37 = reshape(%36, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %38 = @func_2438(%37) /* ty=(Tensor[(11, 1, 9), float64],) */;
  %39 = %38.0;
  %40 = cast(%var_4675, dtype="int32") /* ty=Tensor[(99), int32] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="int32") /* ty=Tensor[(11, 1, 9), int32] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %44 = rsqrt(%33) /* ty=Tensor[(16, 3, 13), float32] */;
  %45 = %34.0;
  %46 = %35.0;
  %47 = subtract(%42, %43) /* ty=Tensor[(11, ?, 9), int32] */;
  %48 = @func_4628() /* ty=Tensor[(16, 3, 13), float32] */;
  (%44, %45, %46, %47, %48)
}

def @func_2753(%var_2748: Tensor[(10, 1, 5), uint8], %var_2749: Tensor[(10, 5, 5), uint8]) -> Tensor[(10, 5, 5), uint8] {
  %49 = cast(%var_2748, dtype="uint8") /* ty=Tensor[(10, 1, 5), uint8] */;
  %50 = cast(%var_2749, dtype="uint8") /* ty=Tensor[(10, 5, 5), uint8] */;
  bitwise_or(%49, %50) /* ty=Tensor[(10, 5, 5), uint8] */
}

def @func_7129(%var_7098: Tensor[(50), uint8]) -> (Tensor[(16, 3, 13), float32], Tensor[(50), uint8], Tensor[(5, 50), bool]) {
  %51 = @func_6063() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float32], Tensor[(16, 3, 13), float32]) */;
  %52 = cast(%var_7098, dtype="uint8") /* ty=Tensor[(50), uint8] */;
  %53 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 50), uint8] */, dtype="uint8") /* ty=Tensor[(5, 50), uint8] */;
  %54 = reshape(%52, newshape=[10, 1, 5]) /* ty=Tensor[(10, 1, 5), uint8] */;
  %55 = reshape(%53, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint8] */;
  %56 = @func_2753(%54, %55) /* ty=Tensor[(10, 5, 5), uint8] */;
  %57 = cast(%56, dtype="bool") /* ty=Tensor[(10, 5, 5), bool] */;
  %58 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(5, 50), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %59 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 50), uint8] */, dtype="bool") /* ty=Tensor[(5, 50), bool] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %61 = %51.0;
  %62 = not_equal(%59, %60) /* ty=Tensor[(5, 50), bool] */;
  (%61, %var_7098, %62)
}

def @func_7801() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %63 = @func_5687() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %64 = @func_5687() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %65 = %63.0;
  %66 = %64.0;
  (%65, %66)
}

def @func_10516(%var_10504: Tensor[(240), int32]) -> (Tensor[(16, 3, 13), float32], Tensor[(8, 2, 15), float64], Tensor[(240), int32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %67 = cast(%var_10504, dtype="int32") /* ty=Tensor[(240), int32] */;
  %68 = cast(%var_10504, dtype="int32") /* ty=Tensor[(240), int32] */;
  %69 = reshape(%67, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), int32] */;
  %70 = reshape(%68, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), int32] */;
  %71 = @func_10394() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %72 = @func_5265() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %73 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
  %74 = @func_5120(%69, %70) /* ty=Tensor[(8, 2, 15), float64] */;
  %75 = %71.0;
  %76 = %72.0;
  (%73, %74, %var_10504, %75, %76)
}

def @func_6703(%var_6701: Tensor[(5, 105), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(5, 105), float64], Tensor[(5, 105), float32]) {
  %77 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %78 = cast(%var_6701, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %79 = cast(%var_6701, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %80 = cast(%var_6701, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %81 = reshape(%78, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %82 = reshape(%79, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %83 = reshape(%80, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %84 = @func_6417(%81, %82, %83) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(5, 15, 7), float32], Tensor[(5, 105), bool], Tensor[(5, 105), float64]) */;
  %85 = %77.0;
  %86 = %84.3;
  (%85, %86, %var_6701)
}

def @func_9529() -> (Tensor[(16, 3, 13), float32],) {
  %87 = @func_8144() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %88 = %87.0;
  (%88,)
}

def @func_11183() -> (Tensor[(16, 3, 13), float32],) {
  %89 = @func_8633() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
  %90 = %89.1;
  (%90,)
}

def @func_1288(%var_1230: Tensor[(10, 6, 7), float32], %var_1238: Tensor[(72), float32], %var_1239: Tensor[(143, 4), float32]) -> (Tensor[(10, 6, 7), float32], Tensor[(572), float32], Tensor[(72), float32], Tensor[(143, 4), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 8, ?), bool]) {
  %91 = cast(%var_1230, dtype="float32") /* ty=Tensor[(10, 6, 7), float32] */;
  %92 = cast(%var_1238, dtype="float32") /* ty=Tensor[(72), float32] */;
  %93 = cast(%var_1239, dtype="float32") /* ty=Tensor[(143, 4), float32] */;
  %94 = reshape(%92, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float32] */;
  %95 = reshape(%93, newshape=[572]) /* ty=Tensor[(572), float32] */;
  %96 = @func_653(%94, %95) /* ty=(Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) */;
  %97 = %96.2;
  %98 = cast(%97, dtype="float32") /* ty=Tensor[(572), float32] */;
  %99 = reshape(%98, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
  %100 = @func_263(%99) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
  %101 = cast(%var_1238, dtype="float32") /* ty=Tensor[(72), float32] */;
  %102 = cast(%var_1239, dtype="float32") /* ty=Tensor[(143, 4), float32] */;
  %103 = reshape(%101, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float32] */;
  %104 = reshape(%102, newshape=[572]) /* ty=Tensor[(572), float32] */;
  %105 = @func_653(%103, %104) /* ty=(Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) */;
  %106 = cos(%91) /* ty=Tensor[(10, 6, 7), float32] */;
  %107 = %100.1;
  %108 = %105.0;
  (%106, %97, %var_1238, %var_1239, %107, %108)
}

def @func_5189() -> (Tensor[(16, 3, 13), float32],) {
  %109 = @func_4863() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %110 = %109.0;
  (%110,)
}

def @func_8709() -> Tensor[(16, 3, 13), float32] {
  @func_6560() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_9449() -> Tensor[(16, 3, 13), float32] {
  %111 = @func_7801() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %111.1
}

def @func_8054() -> Tensor[(16, 3, 13), float32] {
  %112 = @func_4897() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %112.0
}

def @func_5137() -> (Tensor[(16, 3, 13), float32],) {
  %113 = @func_4814() /* ty=Tensor[(16, 3, 13), float32] */;
  (%113,)
}

def @func_9259() -> (Tensor[(16, 3, 13), float32],) {
  %114 = @func_7706() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %115 = %114.0;
  (%115,)
}

def @func_4442() -> Tensor[(16, 3, 13), float32] {
  @func_3873() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_6007() -> Tensor[(16, 3, 13), float32] {
  %116 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %116.1
}

def @func_9616() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(240), int32]) {
  %117 = @func_7379() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %118 = @func_9578() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(8, 2, 15), float64], Tensor[(240), int32]) */;
  %119 = @func_8188() /* ty=Tensor[(16, 3, 13), float32] */;
  %120 = %117.0;
  %121 = %118.2;
  (%119, %120, %121)
}

def @func_9648() -> (Tensor[(16, 3, 13), float32],) {
  %122 = @func_9322() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %123 = %122.0;
  (%123,)
}

def @func_10698(%var_10677: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) {
  %124 = @func_5504() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %125 = cast(%var_10677, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %126 = reshape(%125, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %127 = %124.0;
  %128 = @func_2395(%126) /* ty=Tensor[(16, 9, 14), float32] */;
  (%127, %128, %var_10677)
}

def @func_11016() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %129 = @func_9981() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %130 = @func_10879() /* ty=Tensor[(16, 3, 13), float32] */;
  %131 = %129.0;
  (%130, %131)
}

def @func_11283() -> Tensor[(16, 3, 13), float32] {
  %132 = @func_10213() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %132.0
}

def @func_6417(%var_6381: Tensor[(5, 105), float32], %var_6389: Tensor[(5, 105), float32], %var_6413: Tensor[(5, 105), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(5, 15, 7), float32], Tensor[(5, 105), bool], Tensor[(5, 105), float64]) {
  %133 = cast(%var_6381, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %134 = cast(%var_6381, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %135 = reshape(%133, newshape=[5, 15, 7]) /* ty=Tensor[(5, 15, 7), float32] */;
  %136 = reshape(%134, newshape=[5, 15, 7]) /* ty=Tensor[(5, 15, 7), float32] */;
  %137 = cast(%var_6389, dtype="bool") /* ty=Tensor[(5, 105), bool] */;
  %138 = shape_of(%var_6381, dtype="int32") /* ty=Tensor[(2), int32] */;
  %139 = cast(%var_6381, dtype="bool") /* ty=Tensor[(5, 105), bool] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %141 = cast(%var_6389, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %142 = exp(%141) /* ty=Tensor[(5, 105), float32] */;
  %143 = cast(%142, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %144 = sqrt(%143) /* ty=Tensor[(5, 105), float32] */;
  %145 = cast(%var_6413, dtype="float64") /* ty=Tensor[(5, 105), float64] */;
  %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(2), int32] */;
  %147 = cast(%144, dtype="float64") /* ty=Tensor[(5, 105), float64] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %149 = @func_6007() /* ty=Tensor[(16, 3, 13), float32] */;
  %150 = @func_1713(%135, %136) /* ty=Tensor[(5, 15, 7), float32] */;
  %151 = equal(%139, %140) /* ty=Tensor[(5, 105), bool] */;
  %152 = power(%147, %148) /* ty=Tensor[(5, 105), float64] */;
  (%149, %150, %151, %152)
}

def @func_9867() -> (Tensor[(16, 3, 13), float64], Tensor[(2016), float32], Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float32], Tensor[(8, 2, 4), float64], Tensor[(64), int32]) {
  %153 = @func_5302() /* ty=(Tensor[(16, 3, 13), float64],) */;
  %154 = @func_7428() /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2016), float32], Tensor[(16, 9, 14), float32]) */;
  %155 = cast(meta[relay.Constant][1] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %156 = reshape(%155, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
  %157 = @func_263(%156) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
  %158 = cast(meta[relay.Constant][2] /* ty=Tensor[(64), int32] */, dtype="int32") /* ty=Tensor[(64), int32] */;
  %159 = reshape(%158, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), int32] */;
  %160 = @func_5537(%159) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(8, 2, 4), float64]) */;
  %161 = %153.0;
  %162 = %154.1;
  %163 = @func_7986() /* ty=Tensor[(16, 3, 13), float32] */;
  %164 = %157.1;
  %165 = %160.1;
  (%161, %162, %163, %164, meta[relay.Constant][1] /* ty=Tensor[(572), float32] */, %165, meta[relay.Constant][2] /* ty=Tensor[(64), int32] */)
}

def @func_11085() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %166 = @func_9981() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %167 = %166.0;
  %168 = @func_4814() /* ty=Tensor[(16, 3, 13), float32] */;
  %169 = @func_4442() /* ty=Tensor[(16, 3, 13), float32] */;
  (%167, %168, %169)
}

def @func_11267() -> (Tensor[(16, 3, 13), float32], Tensor[(24, 10), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32], Tensor[(525), float32]) {
  %170 = @func_8804() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %171 = @func_8436() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(1, 572), float32], Tensor[(7, 4), float64], float32, Tensor[(2016), float32], Tensor[(16, 3, 13), uint16], Tensor[(24, 10), int32]) */;
  %172 = %171.6;
  %173 = cast(meta[relay.Constant][3] /* ty=Tensor[(24, 10), int32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
  %174 = shape_of(%172, dtype="int32") /* ty=Tensor[(2), int32] */;
  %175 = cast(%172, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %177 = @func_9713() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %178 = @func_5917() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
  %179 = cast(meta[relay.Constant][4] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
  %180 = reshape(%179, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %181 = @func_9701(%180) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(5, 105), float32], Tensor[(16, 3, 13), float32]) */;
  %182 = %170.0;
  %183 = divide(%175, %176) /* ty=Tensor[(24, 10), float32] */;
  %184 = %177.0;
  %185 = %178.0;
  %186 = %181.0;
  (%182, %183, %184, %185, %186, meta[relay.Constant][4] /* ty=Tensor[(525), float32] */)
}

def @func_5917() -> (Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) {
  %187 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
  %188 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 3, 13), float32] */, dtype="uint16") /* ty=Tensor[(16, 3, 13), uint16] */;
  %189 = shape_of(%187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%187, dtype="uint16") /* ty=Tensor[(16, 3, 13), uint16] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %192 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %193 = bitwise_xor(%190, %191) /* ty=Tensor[(16, 3, 13), uint16] */;
  %194 = %192.0;
  (%193, %194)
}

def @func_4791(%var_4786: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) {
  %195 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %196 = cast(%var_4786, dtype="float64") /* ty=Tensor[(273), float64] */;
  %197 = reshape(%196, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), float64] */;
  %198 = @func_2335(%197) /* ty=(Tensor[(13, 7, 3), float64],) */;
  %199 = %195.0;
  %200 = %198.0;
  (%199, %200, %var_4786)
}

def @func_5687() -> (Tensor[(16, 3, 13), float32],) {
  %201 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %202 = %201.0;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %204 = log2(%203) /* ty=Tensor[(16, 3, 13), float32] */;
  (%204,)
}

def @func_5959() -> Tensor[(16, 3, 13), float32] {
  %205 = @func_5504() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %205.0
}

def @func_9635() -> Tensor[(16, 3, 13), float32] {
  %206 = @func_8144() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %206.0
}

def @func_2335(%var_2327: Tensor[(13, 7, 3), float64]) -> (Tensor[(13, 7, 3), float64],) {
  %207 = cast(%var_2327, dtype="float64") /* ty=Tensor[(13, 7, 3), float64] */;
  %208 = cos(%207) /* ty=Tensor[(13, 7, 3), float64] */;
  (%208,)
}

def @func_3482() -> (Tensor[(16, 3, 13), float32],) {
  %209 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  (%209,)
}

def @func_4814() -> Tensor[(16, 3, 13), float32] {
  %210 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %210.0
}

def @func_11314() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %211 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %212 = %211.0;
  %213 = @func_4442() /* ty=Tensor[(16, 3, 13), float32] */;
  (%212, %213)
}

def @func_653(%var_627: Tensor[(9, 8, 1), float32], %var_647: Tensor[(572), float32]) -> (Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) {
  %214 = cast(%var_627, dtype="float32") /* ty=Tensor[(9, 8, 1), float32] */;
  %215 = sqrt(%214) /* ty=Tensor[(9, 8, 1), float32] */;
  %216 = cast(%215, dtype="bool") /* ty=Tensor[(9, 8, 1), bool] */;
  %217 = shape_of(%var_627, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%var_627, dtype="bool") /* ty=Tensor[(9, 8, 1), bool] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %220 = cast(%var_647, dtype="float32") /* ty=Tensor[(572), float32] */;
  %221 = reshape(%220, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
  %222 = @func_263(%221) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
  %223 = less(%218, %219) /* ty=Tensor[(9, 8, ?), bool] */;
  %224 = %222.1;
  (%223, %224, %var_647)
}

def @func_8001(%var_7992: Tensor[(9, 8, 3), float32]) -> (Tensor[(9, 8, 3), float32],) {
  %225 = cast(%var_7992, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
  %226 = rsqrt(%225) /* ty=Tensor[(9, 8, 3), float32] */;
  (%226,)
}

def @func_7367() -> (Tensor[(16, 3, 13), float32],) {
  %227 = @func_6122() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %228 = %227.0;
  (%228,)
}

def @func_5265() -> (Tensor[(16, 3, 13), float32],) {
  %229 = @func_3664() /* ty=Tensor[(16, 3, 13), float32] */;
  (%229,)
}

def @func_8436() -> (Tensor[(16, 3, 13), float32], Tensor[(1, 572), float32], Tensor[(7, 4), float64], float32, Tensor[(2016), float32], Tensor[(16, 3, 13), uint16], Tensor[(24, 10), int32]) {
  %230 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %231 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 4), float64] */;
  %232 = cast(-9.21316f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %233 = cast(meta[relay.Constant][7] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %234 = reshape(%231, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %235 = reshape(%232, newshape=[]) /* ty=float32 */;
  %236 = reshape(%233, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %237 = @func_3617(%234, %235, %236) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, 1), float64], Tensor[(28), float64], Tensor[(10, 12, 14), float32], float32, Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(9, 8, ?), bool], Tensor[(3, 24), float32], Tensor[(1, 572), float32]) */;
  %238 = cast(meta[relay.Constant][8] /* ty=Tensor[(24, 10), int32] */, dtype="int32") /* ty=Tensor[(24, 10), int32] */;
  %239 = reshape(%238, newshape=[8, 30]) /* ty=Tensor[(8, 30), int32] */;
  %240 = @func_6495(%239) /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(8, 2, 15), float64], Tensor[(8, 30), float64]) */;
  %241 = %230.1;
  %242 = %237.9;
  %243 = %240.0;
  (%241, %242, meta[relay.Constant][6] /* ty=Tensor[(7, 4), float64] */, -9.21316f /* ty=float32 */, meta[relay.Constant][7] /* ty=Tensor[(2016), float32] */, %243, meta[relay.Constant][8] /* ty=Tensor[(24, 10), int32] */)
}

def @func_7073(%var_7064: Tensor[(1008, 2), float32]) -> (Tensor[(16, 3, 13), float64], Tensor[(3, 10, ?), bool], Tensor[(30, 1), float32], Tensor[(16, 3, 13), uint8], Tensor[(1008, 2), float32]) {
  %244 = @func_5189() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %245 = %244.0;
  %246 = cast(%245, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %247 = asin(%246) /* ty=Tensor[(16, 3, 13), float32] */;
  %248 = cast(%247, dtype="float64") /* ty=Tensor[(16, 3, 13), float64] */;
  %249 = cast(meta[relay.Constant][9] /* ty=Tensor[(30, 1), float32] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %250 = cast(meta[relay.Constant][9] /* ty=Tensor[(30, 1), float32] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %251 = reshape(%249, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %252 = reshape(%250, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %253 = @func_2786(%251, %252) /* ty=(Tensor[(3, 10, ?), bool], Tensor[(3, 10, 1), float32]) */;
  %254 = cast(%var_7064, dtype="float32") /* ty=Tensor[(1008, 2), float32] */;
  %255 = reshape(%254, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %256 = @func_3460(%255) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2016), float32], Tensor[(16, 3, 13), uint8], Tensor[(208), uint8], Tensor[(273), float64]) */;
  %257 = erf(%248) /* ty=Tensor[(16, 3, 13), float64] */;
  %258 = %253.0;
  %259 = %256.2;
  (%257, %258, meta[relay.Constant][9] /* ty=Tensor[(30, 1), float32] */, %259, %var_7064)
}

def @func_8854() -> (Tensor[(16, 3, 13), float32],) {
  %260 = @func_8108() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %261 = %260.0;
  (%261,)
}

def @func_1713(%var_1699: Tensor[(5, 15, 7), float32], %var_1700: Tensor[(5, 15, 7), float32]) -> Tensor[(5, 15, 7), float32] {
  %262 = cast(%var_1700, dtype="float32") /* ty=Tensor[(5, 15, 7), float32] */;
  %263 = shape_of(%var_1699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%var_1699, dtype="float32") /* ty=Tensor[(5, 15, 7), float32] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%264, %265) /* ty=Tensor[(5, 15, 7), float32] */
}

def @func_7986() -> Tensor[(16, 3, 13), float32] {
  %266 = @func_7379() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %266.0
}

def @func_9369() -> (Tensor[(16, 3, 13), float32],) {
  %267 = @func_4442() /* ty=Tensor[(16, 3, 13), float32] */;
  (%267,)
}

def @func_10213() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %268 = @func_8939() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(8, 8, 3), float32], Tensor[(192), bool]) */;
  %269 = @func_9667() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %270 = %268.1;
  %271 = %269.1;
  (%270, %271)
}

def @func_10240() -> (Tensor[(16, 3, 13), float64],) {
  %272 = @func_5302() /* ty=(Tensor[(16, 3, 13), float64],) */;
  %273 = %272.0;
  (%273,)
}

def @func_4979(%var_4908: Tensor[(2, 14, 1), float64], %var_4921: Tensor[(624), float32]) -> (Tensor[(2, 14, ?), bool], Tensor[(2, 14, ?), bool], Tensor[(16, 3, 13), float64], Tensor[(2016), float32], Tensor[(208), uint8], Tensor[(273), float64], Tensor[(624), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 9, 14), float32], Tensor[(273), float64], Tensor[(16, 3, 13), float32]) {
  %274 = @func_4202() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) */;
  %275 = %274.1;
  %276 = cast(%var_4908, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %277 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%275, dtype="bool") /* ty=Tensor[(2, 14, ?), bool] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %280 = cast(%var_4908, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %281 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(%275, dtype="bool") /* ty=Tensor[(2, 14, ?), bool] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %284 = cast(%var_4921, dtype="float32") /* ty=Tensor[(624), float32] */;
  %285 = reshape(%284, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), float32] */;
  %286 = @func_4132(%285) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) */;
  %287 = %286.0;
  %288 = cast(%287, dtype="float64") /* ty=Tensor[(16, 3, 13), float64] */;
  %289 = cast(%var_4921, dtype="float32") /* ty=Tensor[(624), float32] */;
  %290 = acosh(%289) /* ty=Tensor[(624), float32] */;
  %291 = cast(%290, dtype="float32") /* ty=Tensor[(624), float32] */;
  %292 = cast(meta[relay.Constant][10] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %293 = cast(meta[relay.Constant][11] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %294 = cast(meta[relay.Constant][12] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %295 = reshape(%292, newshape=[504, 4]) /* ty=Tensor[(504, 4), float32] */;
  %296 = reshape(%293, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %297 = reshape(%294, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %298 = @func_4419(%295, %296, %297) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(504, 4), uint64], Tensor[(273), float64], Tensor[(208), uint8], Tensor[(273), float64], Tensor[(16, 3, 13), float32], Tensor[(504, 4), float32], Tensor[(504, 4), float64], Tensor[(16, 9, 14), float32]) */;
  %299 = %298.2;
  %300 = cast(%299, dtype="float64") /* ty=Tensor[(273), float64] */;
  %301 = reshape(%300, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %302 = @func_4791(%301) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */;
  %303 = cast(meta[relay.Constant][10] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %304 = reshape(%303, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %305 = cast(%299, dtype="float64") /* ty=Tensor[(273), float64] */;
  %306 = @func_4166() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %307 = equal(%278, %279) /* ty=Tensor[(2, 14, ?), bool] */;
  %308 = logical_and(%282, %283) /* ty=Tensor[(2, 14, ?), bool] */;
  %309 = atanh(%288) /* ty=Tensor[(16, 3, 13), float64] */;
  %310 = tan(%291) /* ty=Tensor[(624), float32] */;
  %311 = %302.0;
  %312 = @func_2395(%304) /* ty=Tensor[(16, 9, 14), float32] */;
  %313 = asinh(%305) /* ty=Tensor[(273), float64] */;
  %314 = %306.0;
  (%307, %308, %309, meta[relay.Constant][10] /* ty=Tensor[(2016), float32] */, meta[relay.Constant][11] /* ty=Tensor[(208), uint8] */, meta[relay.Constant][12] /* ty=Tensor[(273), float64] */, %310, %311, %312, %313, %314)
}

def @func_7903() -> (Tensor[(16, 3, 13), float32],) {
  %315 = @func_5504() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %316 = %315.0;
  (%316,)
}

def @func_10863() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %317 = @func_10061() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint16]) */;
  %318 = @func_10077() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %319 = %317.2;
  %320 = %318.0;
  (%319, %320)
}

def @func_9156(%var_9151: Tensor[(9, 4, 15), float32], %var_9152: Tensor[(9, 4, 15), float32]) -> (Tensor[(9, 4, 15), float32],) {
  %321 = cast(%var_9152, dtype="float32") /* ty=Tensor[(9, 4, 15), float32] */;
  %322 = shape_of(%var_9151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%var_9151, dtype="float32") /* ty=Tensor[(9, 4, 15), float32] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %325 = floor_mod(%323, %324) /* ty=Tensor[(9, 4, 15), float32] */;
  (%325,)
}

def @func_10479() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %326 = @func_5265() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %327 = @func_7183() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %328 = %326.0;
  %329 = %327.0;
  (%328, %329)
}

def @func_9587() -> (Tensor[(16, 3, 13), float32],) {
  %330 = @func_8054() /* ty=Tensor[(16, 3, 13), float32] */;
  (%330,)
}

def @func_263(%var_224: Tensor[(13, 4, 11), float32]) -> (Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) {
  %331 = cast(%var_224, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
  %332 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(13, 4, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %335 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 4, 11), float32] */, dtype="float64") /* ty=Tensor[(13, 4, 11), float64] */;
  %336 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 4, 11), float32] */, dtype="float64") /* ty=Tensor[(13, 4, 11), float64] */;
  %337 = power(%333, %334) /* ty=Tensor[(13, 4, 11), float32] */;
  %338 = tan(%335) /* ty=Tensor[(13, 4, 11), float64] */;
  %339 = erf(%336) /* ty=Tensor[(13, 4, 11), float64] */;
  (%337, %338, %339)
}

def @func_9123() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %340 = @func_7379() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %341 = @func_8108() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %342 = @func_7007() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %343 = %340.0;
  %344 = %341.0;
  %345 = @func_5959() /* ty=Tensor[(16, 3, 13), float32] */;
  %346 = %342.0;
  (%343, %344, %345, %346)
}

def @func_9713() -> (Tensor[(16, 3, 13), float32],) {
  %347 = @func_6122() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %348 = %347.0;
  (%348,)
}

def @func_8323(%var_8298: Tensor[(420), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(1, 448), int16], Tensor[(420), float32], Tensor[(16, 3, 13), float32], Tensor[(28), float64]) {
  %349 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 448), int16] */, dtype="int16") /* ty=Tensor[(1, 448), int16] */;
  %350 = cast(%var_8298, dtype="float32") /* ty=Tensor[(420), float32] */;
  %351 = reshape(%349, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %352 = reshape(%350, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %353 = @func_5055(%351, %352) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(448), int16], Tensor[(800), float32], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) */;
  %354 = @func_6122() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %355 = @func_4202() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) */;
  %356 = %355.2;
  %357 = cast(%356, dtype="float64") /* ty=Tensor[(28), float64] */;
  %358 = %353.6;
  %359 = %354.0;
  %360 = cos(%357) /* ty=Tensor[(28), float64] */;
  (%358, meta[relay.Constant][14] /* ty=Tensor[(1, 448), int16] */, %var_8298, %359, %360)
}

def @func_10154(%var_10132: Tensor[(1, 5, 16), float64]) -> (Tensor[(?, 5, 16), uint8],) {
  %361 = cast(%var_10132, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %362 = rsqrt(%361) /* ty=Tensor[(1, 5, 16), float64] */;
  %363 = cast(%var_10132, dtype="uint8") /* ty=Tensor[(1, 5, 16), uint8] */;
  %364 = shape_of(%362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%362, dtype="uint8") /* ty=Tensor[(1, 5, 16), uint8] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %367 = minimum(%365, %366) /* ty=Tensor[(?, 5, 16), uint8] */;
  (%367,)
}

def @func_3503(%var_3489: Tensor[(2, 14, 1), float64]) -> (Tensor[(2, 14, ?), float64], Tensor[(2, 14, 1), float64]) {
  %368 = cast(%var_3489, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %369 = log10(%368) /* ty=Tensor[(2, 14, 1), float64] */;
  %370 = cast(%var_3489, dtype="uint16") /* ty=Tensor[(2, 14, 1), uint16] */;
  %371 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%369, dtype="uint16") /* ty=Tensor[(2, 14, 1), uint16] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %374 = maximum(%372, %373) /* ty=Tensor[(2, 14, ?), uint16] */;
  %375 = cast(%374, dtype="float64") /* ty=Tensor[(2, 14, ?), float64] */;
  %376 = cast(%369, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %377 = sqrt(%375) /* ty=Tensor[(2, 14, ?), float64] */;
  %378 = tan(%376) /* ty=Tensor[(2, 14, 1), float64] */;
  (%377, %378)
}

def @main(%var_12099: Tensor[(18, 30), float32], %var_12111: Tensor[(18, 30), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(9, 4, 15), float32], Tensor[(18, 30), uint32]) {
  %379 = cast(%var_12099, dtype="float32") /* ty=Tensor[(18, 30), float32] */;
  %380 = cast(%var_12099, dtype="float32") /* ty=Tensor[(18, 30), float32] */;
  %381 = reshape(%379, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float32] */;
  %382 = reshape(%380, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float32] */;
  %383 = @func_9156(%381, %382) /* ty=(Tensor[(9, 4, 15), float32],) */;
  %384 = cast(%var_12111, dtype="uint32") /* ty=Tensor[(18, 30), uint32] */;
  %385 = shape_of(%var_12099, dtype="int32") /* ty=Tensor[(2), int32] */;
  %386 = cast(%var_12099, dtype="uint32") /* ty=Tensor[(18, 30), uint32] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %388 = @func_9051() /* ty=Tensor[(16, 3, 13), float32] */;
  %389 = %383.0;
  %390 = bitwise_and(%386, %387) /* ty=Tensor[(18, 30), uint32] */;
  (%388, %389, %390)
}

def @func_3771(%var_3753: Tensor[(28), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float64], Tensor[(13, 7, 3), float64], Tensor[(273), float64], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) {
  %391 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %392 = cast(meta[relay.Constant][15] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %393 = reshape(%392, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
  %394 = @func_263(%393) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
  %395 = cast(meta[relay.Constant][15] /* ty=Tensor[(572), float32] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %396 = cast(meta[relay.Constant][16] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %397 = reshape(%396, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), float64] */;
  %398 = @func_2335(%397) /* ty=(Tensor[(13, 7, 3), float64],) */;
  %399 = cast(%var_3753, dtype="float64") /* ty=Tensor[(28), float64] */;
  %400 = reshape(%399, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float64] */;
  %401 = @func_3503(%400) /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2, 14, 1), float64]) */;
  %402 = %391.0;
  %403 = %394.2;
  %404 = log10(%395) /* ty=Tensor[(572), float64] */;
  %405 = %398.0;
  %406 = %401.0;
  (%402, %403, %404, %405, meta[relay.Constant][16] /* ty=Tensor[(273), float64] */, %406, %var_3753)
}

def @func_8264() -> (Tensor[(16, 3, 13), float32],) {
  %407 = @func_4442() /* ty=Tensor[(16, 3, 13), float32] */;
  (%407,)
}

def @func_10754(%var_10741: Tensor[(16, 8, 6), float32]) -> (Tensor[(16, 8, 6), float64],) {
  %408 = cast(%var_10741, dtype="float32") /* ty=Tensor[(16, 8, 6), float32] */;
  %409 = sqrt(%408) /* ty=Tensor[(16, 8, 6), float32] */;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(16, 8, 6), float64] */;
  %411 = tan(%410) /* ty=Tensor[(16, 8, 6), float64] */;
  (%411,)
}

def @func_9903() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %412 = @func_9413() /* ty=Tensor[(16, 3, 13), float32] */;
  %413 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  (%412, %413)
}

def @func_9348() -> Tensor[(16, 3, 13), float32] {
  @func_5332() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_10630() -> Tensor[(16, 3, 13), float32] {
  @func_6007() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_10879() -> Tensor[(16, 3, 13), float32] {
  %414 = @func_10077() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %414.0
}

def @func_9236() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %415 = @func_5189() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %416 = @func_6194() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(3, 4), float32], Tensor[(12), float32], Tensor[(16, 3, 13), float32]) */;
  %417 = %415.0;
  %418 = @func_7643() /* ty=Tensor[(16, 3, 13), float32] */;
  %419 = %416.0;
  %420 = @func_5171() /* ty=Tensor[(16, 3, 13), float32] */;
  (%417, %418, %419, %420)
}

def @func_11751(%var_11722: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint8], Tensor[(2016), float32], Tensor[(16, 3, 13), float32], Tensor[(72), float32], Tensor[(2, 400), float32], Tensor[(8, 56), int16], Tensor[(420), float32], Tensor[(72), float32]) {
  %421 = @func_11314() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %422 = @func_8804() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %423 = @func_7801() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %424 = cast(%var_11722, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %425 = reshape(%424, newshape=[1008, 2]) /* ty=Tensor[(1008, 2), float32] */;
  %426 = @func_7073(%425) /* ty=(Tensor[(16, 3, 13), float64], Tensor[(3, 10, ?), bool], Tensor[(30, 1), float32], Tensor[(16, 3, 13), uint8], Tensor[(1008, 2), float32]) */;
  %427 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 400), float32] */, dtype="float32") /* ty=Tensor[(2, 400), float32] */;
  %428 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 56), int16] */, dtype="int16") /* ty=Tensor[(8, 56), int16] */;
  %429 = cast(meta[relay.Constant][19] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %430 = cast(meta[relay.Constant][20] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %431 = reshape(%427, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float32] */;
  %432 = reshape(%428, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %433 = reshape(%429, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %434 = reshape(%430, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %435 = @func_1975(%431, %432, %433, %434) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), bool], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), float64], Tensor[(8, 8, 7), int64]) */;
  %436 = %421.1;
  %437 = %422.0;
  %438 = %423.1;
  %439 = %426.3;
  %440 = @func_9413() /* ty=Tensor[(16, 3, 13), float32] */;
  %441 = %435.3;
  (%436, %437, %438, %439, %var_11722, %440, %441, meta[relay.Constant][17] /* ty=Tensor[(2, 400), float32] */, meta[relay.Constant][18] /* ty=Tensor[(8, 56), int16] */, meta[relay.Constant][19] /* ty=Tensor[(420), float32] */, meta[relay.Constant][20] /* ty=Tensor[(72), float32] */)
}

def @func_10439() -> (Tensor[(16, 3, 13), float32],) {
  %442 = @func_9123() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %443 = %442.1;
  (%443,)
}

def @func_9436() -> Tensor[(16, 3, 13), float32] {
  %444 = @func_6745() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %444.1
}

def @func_11612() -> Tensor[(16, 3, 13), float32] {
  %445 = @func_11515() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %445.3
}

def @func_10549(%var_10542: Tensor[(3, 16, 15), int32]) -> Tensor[(3, 16, 15), int32] {
  %446 = cast(%var_10542, dtype="int32") /* ty=Tensor[(3, 16, 15), int32] */;
  %447 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(3, 16, 15), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 16, 15), int32] */, dtype="int32") /* ty=Tensor[(3, 16, 15), int32] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%448, %449) /* ty=Tensor[(3, 16, 15), int32] */
}

def @func_5120(%var_5105: Tensor[(8, 2, 15), int32], %var_5106: Tensor[(8, 2, 15), int32]) -> Tensor[(8, 2, 15), float64] {
  %450 = cast(%var_5106, dtype="int32") /* ty=Tensor[(8, 2, 15), int32] */;
  %451 = shape_of(%var_5105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%var_5105, dtype="int32") /* ty=Tensor[(8, 2, 15), int32] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %454 = add(%452, %453) /* ty=Tensor[(8, 2, 15), int32] */;
  %455 = cast(%454, dtype="float64") /* ty=Tensor[(8, 2, 15), float64] */;
  log(%455) /* ty=Tensor[(8, 2, 15), float64] */
}

def @func_11143() -> Tensor[(16, 3, 13), float32] {
  @func_9635() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_6194() -> (Tensor[(16, 3, 13), float32], Tensor[(3, 4), float32], Tensor[(12), float32], Tensor[(16, 3, 13), float32]) {
  %456 = cast(meta[relay.Constant][22] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %457 = reshape(%456, newshape=[3, 4]) /* ty=Tensor[(3, 4), float32] */;
  %458 = @func_4649(%457) /* ty=(Tensor[(3, 4), float32],) */;
  %459 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
  %460 = %458.0;
  %461 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
  (%459, %460, meta[relay.Constant][22] /* ty=Tensor[(12), float32] */, %461)
}

def @func_5332() -> Tensor[(16, 3, 13), float32] {
  @func_3873() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_9497() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %462 = @func_9236() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %463 = %462.0;
  %464 = @func_9005() /* ty=Tensor[(16, 3, 13), float32] */;
  (%463, %464)
}

def @func_5302() -> (Tensor[(16, 3, 13), float64],) {
  %465 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  %466 = cast(%465, dtype="float64") /* ty=Tensor[(16, 3, 13), float64] */;
  %467 = acosh(%466) /* ty=Tensor[(16, 3, 13), float64] */;
  (%467,)
}

def @func_10988() -> (Tensor[(16, 3, 13), float32],) {
  %468 = @func_9981() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %469 = %468.0;
  (%469,)
}

def @func_8662() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %470 = @func_7367() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %471 = @func_4166() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %472 = %470.0;
  %473 = %471.0;
  (%472, %473)
}

def @func_9051() -> Tensor[(16, 3, 13), float32] {
  %474 = @func_7007() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %474.0
}

def @func_4132(%var_4102: Tensor[(16, 3, 13), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) {
  %475 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  %476 = cast(%var_4102, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%475, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %480 = cast(%475, dtype="int64") /* ty=Tensor[(16, 3, 13), int64] */;
  %481 = shape_of(%var_4102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%var_4102, dtype="int64") /* ty=Tensor[(16, 3, 13), int64] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %484 = mod(%478, %479) /* ty=Tensor[(16, 3, 13), float32] */;
  %485 = logical_xor(%482, %483) /* ty=Tensor[(16, 3, 13), int64] */;
  (%484, %485)
}

def @func_3664() -> Tensor[(16, 3, 13), float32] {
  @func_3354() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_4628() -> Tensor[(16, 3, 13), float32] {
  @func_3664() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_10407() -> (Tensor[(16, 3, 13), float32],) {
  %486 = @func_10112() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %487 = %486.0;
  (%487,)
}

def @func_9005() -> Tensor[(16, 3, 13), float32] {
  %488 = @func_4863() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %488.0
}

def @func_6624() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %489 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  %490 = @func_3873() /* ty=Tensor[(16, 3, 13), float32] */;
  (%489, %490)
}

def @func_8553() -> Tensor[(16, 3, 13), float32] {
  @func_8188() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_3460(%var_3419: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(2016), float32], Tensor[(16, 3, 13), uint8], Tensor[(208), uint8], Tensor[(273), float64]) {
  %491 = cast(%var_3419, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %492 = acos(%491) /* ty=Tensor[(2016), float64] */;
  %493 = cast(%var_3419, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %494 = reshape(%493, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %495 = @func_2395(%494) /* ty=Tensor[(16, 9, 14), float32] */;
  %496 = cast(%495, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
  %497 = shape_of(%492, dtype="int32") /* ty=Tensor[(1), int32] */;
  %498 = cast(%492, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?), float32] */;
  %500 = cast(meta[relay.Constant][23] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %501 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  %502 = cast(%501, dtype="uint8") /* ty=Tensor[(16, 3, 13), uint8] */;
  %503 = cast(meta[relay.Constant][24] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %504 = reshape(%500, newshape=[16, 1, 13]) /* ty=Tensor[(16, 1, 13), uint8] */;
  %505 = reshape(%502, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), uint8] */;
  %506 = reshape(%503, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %507 = @func_2480(%504, %505, %506) /* ty=(Tensor[(16, 3, 13), uint8], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */;
  %508 = divide(%498, %499) /* ty=Tensor[(2016), float32] */;
  %509 = %507.0;
  (%501, %508, %509, meta[relay.Constant][23] /* ty=Tensor[(208), uint8] */, meta[relay.Constant][24] /* ty=Tensor[(273), float64] */)
}

def @func_9701(%var_9685: Tensor[(5, 105), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(5, 105), float32], Tensor[(16, 3, 13), float32]) {
  %510 = @func_5504() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %511 = cast(%var_9685, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %512 = cast(%var_9685, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %513 = cast(%var_9685, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %514 = reshape(%511, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %515 = reshape(%512, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %516 = reshape(%513, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %517 = @func_6417(%514, %515, %516) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(5, 15, 7), float32], Tensor[(5, 105), bool], Tensor[(5, 105), float64]) */;
  %518 = @func_8633() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
  %519 = %510.0;
  %520 = %517.0;
  %521 = %518.1;
  (%519, %520, %var_9685, %521)
}

def @func_9279(%var_9272: Tensor[(12), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(3, 4), float32], Tensor[(12), float32]) {
  %522 = @func_7379() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %523 = cast(%var_9272, dtype="float32") /* ty=Tensor[(12), float32] */;
  %524 = reshape(%523, newshape=[3, 4]) /* ty=Tensor[(3, 4), float32] */;
  %525 = @func_4649(%524) /* ty=(Tensor[(3, 4), float32],) */;
  %526 = %522.0;
  %527 = %525.0;
  (%526, %527, %var_9272)
}

def @func_6560() -> Tensor[(16, 3, 13), float32] {
  %528 = @func_5137() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %528.0
}

def @func_8804() -> (Tensor[(16, 3, 13), float32],) {
  %529 = @func_4814() /* ty=Tensor[(16, 3, 13), float32] */;
  (%529,)
}

def @func_9322() -> (Tensor[(16, 3, 13), float32],) {
  %530 = @func_7801() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %531 = %530.0;
  (%531,)
}

def @func_4508() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %532 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %533 = %532.0;
  %534 = @func_3873() /* ty=Tensor[(16, 3, 13), float32] */;
  (%533, %534)
}

def @func_9578() -> (Tensor[(16, 3, 13), float32], Tensor[(8, 2, 15), float64], Tensor[(240), int32]) {
  %535 = @func_7367() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %536 = cast(meta[relay.Constant][25] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
  %537 = reshape(%536, newshape=[8, 30]) /* ty=Tensor[(8, 30), int32] */;
  %538 = @func_6495(%537) /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(8, 2, 15), float64], Tensor[(8, 30), float64]) */;
  %539 = %535.0;
  %540 = %538.1;
  (%539, %540, meta[relay.Constant][25] /* ty=Tensor[(240), int32] */)
}

def @func_2786(%var_2759: Tensor[(3, 10, 1), float32], %var_2774: Tensor[(3, 10, 1), float32]) -> (Tensor[(3, 10, ?), bool], Tensor[(3, 10, 1), float32]) {
  %541 = cast(%var_2774, dtype="bool") /* ty=Tensor[(3, 10, 1), bool] */;
  %542 = shape_of(%var_2759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%var_2759, dtype="bool") /* ty=Tensor[(3, 10, 1), bool] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %545 = cast(%var_2759, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %546 = atan(%545) /* ty=Tensor[(3, 10, 1), float32] */;
  %547 = cast(%546, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %548 = greater_equal(%543, %544) /* ty=Tensor[(3, 10, ?), bool] */;
  %549 = exp(%547) /* ty=Tensor[(3, 10, 1), float32] */;
  (%548, %549)
}

def @func_7706() -> (Tensor[(16, 3, 13), float32],) {
  %550 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  %551 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
  %552 = cast(%551, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %553 = shape_of(%550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%550, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %556 = add(%554, %555) /* ty=Tensor[(16, 3, 13), float32] */;
  (%556,)
}

def @func_5537(%var_5508: Tensor[(8, 2, 4), int32]) -> (Tensor[(16, 3, 13), float32], Tensor[(8, 2, 4), float64]) {
  %557 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(8, 2, 4), int32] */;
  %558 = shape_of(%var_5508, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%var_5508, dtype="int32") /* ty=Tensor[(8, 2, 4), int32] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %561 = add(%559, %560) /* ty=Tensor[(8, 2, 4), int32] */;
  %562 = cast(%561, dtype="float64") /* ty=Tensor[(8, 2, 4), float64] */;
  %563 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(8, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 2, 4), int32] */, dtype="float64") /* ty=Tensor[(8, 2, 4), float64] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %566 = @func_5171() /* ty=Tensor[(16, 3, 13), float32] */;
  %567 = divide(%564, %565) /* ty=Tensor[(8, 2, 4), float64] */;
  (%566, %567)
}

def @func_16(%var_3: float32) -> Tensor[(10, 12, 14), float32] {
  %568 = cast(%var_3, dtype="float32") /* ty=float32 */;
  %569 = cast(meta[relay.Constant][27] /* ty=Tensor[(10, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(10, 12, 14), float32] */;
  divide(%568, %569) /* ty=Tensor[(10, 12, 14), float32] */
}

def @func_3354() -> Tensor[(16, 3, 13), float32] {
  %570 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 3, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  exp(%570) /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_8384(%var_8381: Tensor[(1008, 2), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(5, 105), float64], Tensor[(525), float32], Tensor[(273), float64], Tensor[(1008, 2), float32]) {
  %571 = cast(meta[relay.Constant][29] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
  %572 = reshape(%571, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %573 = @func_6703(%572) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(5, 105), float64], Tensor[(5, 105), float32]) */;
  %574 = cast(%var_8381, dtype="float32") /* ty=Tensor[(1008, 2), float32] */;
  %575 = reshape(%574, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %576 = @func_3460(%575) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2016), float32], Tensor[(16, 3, 13), uint8], Tensor[(208), uint8], Tensor[(273), float64]) */;
  %577 = @func_5171() /* ty=Tensor[(16, 3, 13), float32] */;
  %578 = %573.1;
  %579 = %576.4;
  (%577, %578, meta[relay.Constant][29] /* ty=Tensor[(525), float32] */, %579, %var_8381)
}

def @func_10394() -> (Tensor[(16, 3, 13), float32],) {
  %580 = @func_9413() /* ty=Tensor[(16, 3, 13), float32] */;
  (%580,)
}

def @func_5839(%var_5824: Tensor[(192), bool], %var_5831: Tensor[(5, 50), uint8]) -> (Tensor[(16, 3, 13), float32], Tensor[(8, 8, 3), float32], Tensor[(192), bool], Tensor[(10, 5, 5), uint8], Tensor[(50), uint8], Tensor[(5, 50), uint8], Tensor[(16, 3, 13), float32]) {
  %581 = cast(%var_5824, dtype="bool") /* ty=Tensor[(192), bool] */;
  %582 = cast(%var_5824, dtype="bool") /* ty=Tensor[(192), bool] */;
  %583 = reshape(%581, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %584 = reshape(%582, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %585 = @func_5008(%583, %584) /* ty=(Tensor[(8, 8, 3), bool], Tensor[(8, 8, 3), float32]) */;
  %586 = cast(meta[relay.Constant][30] /* ty=Tensor[(50), uint8] */, dtype="uint8") /* ty=Tensor[(50), uint8] */;
  %587 = cast(%var_5831, dtype="uint8") /* ty=Tensor[(5, 50), uint8] */;
  %588 = reshape(%586, newshape=[10, 1, 5]) /* ty=Tensor[(10, 1, 5), uint8] */;
  %589 = reshape(%587, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint8] */;
  %590 = @func_4166() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %591 = @func_4814() /* ty=Tensor[(16, 3, 13), float32] */;
  %592 = %585.1;
  %593 = @func_2753(%588, %589) /* ty=Tensor[(10, 5, 5), uint8] */;
  %594 = %590.0;
  (%591, %592, %var_5824, %593, meta[relay.Constant][30] /* ty=Tensor[(50), uint8] */, %var_5831, %594)
}

def @func_11456(%var_11444: Tensor[(11, 12, 10), int16]) -> (Tensor[(11, 12, 10), int16], Tensor[(16, 3, 13), float32]) {
  %595 = cast(meta[relay.Constant][31] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %596 = cast(%var_11444, dtype="int16") /* ty=Tensor[(11, 12, 10), int16] */;
  %597 = @func_9497() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %598 = subtract(%595, %596) /* ty=Tensor[(11, 12, 10), int16] */;
  %599 = %597.1;
  (%598, %599)
}

def @func_10362() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(572), bool]) {
  %600 = @func_5687() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %601 = cast(meta[relay.Constant][32] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %602 = reshape(%601, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
  %603 = @func_263(%602) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
  %604 = %603.2;
  %605 = cast(%604, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
  %606 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(572), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %607 = cast(meta[relay.Constant][32] /* ty=Tensor[(572), float32] */, dtype="bool") /* ty=Tensor[(572), bool] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?), bool] */;
  %609 = @func_9005() /* ty=Tensor[(16, 3, 13), float32] */;
  %610 = %600.0;
  %611 = @func_8054() /* ty=Tensor[(16, 3, 13), float32] */;
  %612 = logical_and(%607, %608) /* ty=Tensor[(572), bool] */;
  (%609, %610, %611, %612)
}

def @func_11897(%var_11862: Tensor[(1, 5, 11), uint32], %var_11863: Tensor[(13, 5, 11), uint32]) -> (Tensor[(5, 105), float32], Tensor[(1, 525), float32], Tensor[(13, 5, 11), int16], Tensor[(16, 3, 13), float32]) {
  %613 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 525), float32] */, dtype="float32") /* ty=Tensor[(1, 525), float32] */;
  %614 = reshape(%613, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %615 = @func_9701(%614) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(5, 105), float32], Tensor[(16, 3, 13), float32]) */;
  %616 = cast(%var_11862, dtype="uint32") /* ty=Tensor[(1, 5, 11), uint32] */;
  %617 = cast(%var_11863, dtype="uint32") /* ty=Tensor[(13, 5, 11), uint32] */;
  %618 = multiply(%616, %617) /* ty=Tensor[(13, 5, 11), uint32] */;
  %619 = cast(%618, dtype="int16") /* ty=Tensor[(13, 5, 11), int16] */;
  %620 = cast(%var_11862, dtype="int16") /* ty=Tensor[(1, 5, 11), int16] */;
  %621 = @func_7801() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %622 = %615.2;
  %623 = maximum(%619, %620) /* ty=Tensor[(13, 5, 11), int16] */;
  %624 = %621.1;
  (%622, meta[relay.Constant][33] /* ty=Tensor[(1, 525), float32] */, %623, %624)
}

def @func_9413() -> Tensor[(16, 3, 13), float32] {
  %625 = @func_5764() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %625.0
}

def @func_2438(%var_2435: Tensor[(11, 1, 9), float64]) -> (Tensor[(11, 1, 9), float64],) {
  %626 = cast(%var_2435, dtype="float64") /* ty=Tensor[(11, 1, 9), float64] */;
  %627 = log10(%626) /* ty=Tensor[(11, 1, 9), float64] */;
  (%627,)
}

def @func_2395(%var_2383: Tensor[(16, 9, 14), float32]) -> Tensor[(16, 9, 14), float32] {
  %628 = cast(%var_2383, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
  erf(%628) /* ty=Tensor[(16, 9, 14), float32] */
}

def @func_6371(%var_6366: Tensor[(30), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(30), float32]) {
  %629 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %630 = cast(%var_6366, dtype="float32") /* ty=Tensor[(30), float32] */;
  %631 = reshape(%630, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %632 = @func_6316(%631) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(3, 10, ?), bool], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), float32], Tensor[(16, 3, 13), float64], Tensor[(16, 3, 13), float32]) */;
  %633 = @func_5171() /* ty=Tensor[(16, 3, 13), float32] */;
  %634 = %629.0;
  %635 = %632.4;
  (%633, %634, %635, %var_6366)
}

def @func_8487() -> (Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) {
  %636 = @func_5917() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
  %637 = %636.0;
  %638 = @func_8188() /* ty=Tensor[(16, 3, 13), float32] */;
  (%637, %638)
}

def @func_1581(%var_1535: Tensor[(8, 8, 7), int16], %var_1536: Tensor[(8, 8, 7), int16], %var_1571: Tensor[(420), float32], %var_1572: Tensor[(72), float32]) -> (Tensor[(8, 8, 7), int64], Tensor[(8, 8, 7), float64], Tensor[(8, 8, 7), bool], Tensor[(572), float32], Tensor[(420), float32], Tensor[(72), float32], Tensor[(572), float32]) {
  %639 = cast(%var_1536, dtype="int16") /* ty=Tensor[(8, 8, 7), int16] */;
  %640 = shape_of(%var_1535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%var_1535, dtype="int16") /* ty=Tensor[(8, 8, 7), int16] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %643 = multiply(%641, %642) /* ty=Tensor[(8, 8, 7), int16] */;
  %644 = cast(%var_1535, dtype="float64") /* ty=Tensor[(8, 8, 7), float64] */;
  %645 = shape_of(%var_1536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%var_1536, dtype="float64") /* ty=Tensor[(8, 8, 7), float64] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %648 = floor_mod(%646, %647) /* ty=Tensor[(8, 8, 7), float64] */;
  %649 = cast(%648, dtype="int64") /* ty=Tensor[(8, 8, 7), int64] */;
  %650 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%643, dtype="int64") /* ty=Tensor[(8, 8, 7), int64] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %653 = cast(%var_1536, dtype="float64") /* ty=Tensor[(8, 8, 7), float64] */;
  %654 = cast(%648, dtype="float32") /* ty=Tensor[(8, 8, 7), float32] */;
  %655 = atan(%654) /* ty=Tensor[(8, 8, 7), float32] */;
  %656 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 8, 7), float32] */, dtype="bool") /* ty=Tensor[(8, 8, 7), bool] */;
  %657 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%655, dtype="bool") /* ty=Tensor[(8, 8, 7), bool] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %660 = cast(%var_1571, dtype="float32") /* ty=Tensor[(420), float32] */;
  %661 = cast(%var_1572, dtype="float32") /* ty=Tensor[(72), float32] */;
  %662 = cast(meta[relay.Constant][35] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %663 = reshape(%660, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), float32] */;
  %664 = reshape(%661, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %665 = reshape(%662, newshape=[143, 4]) /* ty=Tensor[(143, 4), float32] */;
  %666 = @func_1288(%663, %664, %665) /* ty=(Tensor[(10, 6, 7), float32], Tensor[(572), float32], Tensor[(72), float32], Tensor[(143, 4), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 8, ?), bool]) */;
  %667 = logical_xor(%651, %652) /* ty=Tensor[(8, 8, 7), int64] */;
  %668 = cos(%653) /* ty=Tensor[(8, 8, 7), float64] */;
  %669 = less_equal(%658, %659) /* ty=Tensor[(8, 8, 7), bool] */;
  %670 = %666.1;
  (%667, %668, %669, %670, %var_1571, %var_1572, meta[relay.Constant][35] /* ty=Tensor[(572), float32] */)
}

def @func_4649(%var_4639: Tensor[(3, 4), float32]) -> (Tensor[(3, 4), float32],) {
  %671 = cast(%var_4639, dtype="float32") /* ty=Tensor[(3, 4), float32] */;
  %672 = exp(%671) /* ty=Tensor[(3, 4), float32] */;
  (%672,)
}

def @func_6780() -> (Tensor[(16, 3, 13), float32],) {
  %673 = @func_6560() /* ty=Tensor[(16, 3, 13), float32] */;
  (%673,)
}

def @func_7379() -> (Tensor[(16, 3, 13), float32],) {
  %674 = @func_6745() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %675 = %674.0;
  (%675,)
}

def @func_7643() -> Tensor[(16, 3, 13), float32] {
  %676 = @func_5764() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %676.1
}

def @func_7564(%var_7559: Tensor[(2, 14, 11), float64]) -> (Tensor[(2, 14, 11), uint16],) {
  %677 = @func_7428() /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2016), float32], Tensor[(16, 9, 14), float32]) */;
  %678 = %677.0;
  %679 = cast(%678, dtype="uint16") /* ty=Tensor[(2, 14, ?), uint16] */;
  %680 = cast(%var_7559, dtype="uint16") /* ty=Tensor[(2, 14, 11), uint16] */;
  %681 = add(%679, %680) /* ty=Tensor[(2, 14, 11), uint16] */;
  (%681,)
}

def @func_3707() -> (Tensor[(16, 3, 13), float32],) {
  %682 = @func_3664() /* ty=Tensor[(16, 3, 13), float32] */;
  (%682,)
}

def @func_8525() -> (Tensor[(16, 3, 13), float32], Tensor[(3, 10, 1), float32], Tensor[(30), float32], Tensor[(16, 3, 13), float32]) {
  %683 = @func_6780() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %684 = cast(meta[relay.Constant][36] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %685 = cast(meta[relay.Constant][36] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %686 = reshape(%684, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %687 = reshape(%685, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %688 = @func_2786(%686, %687) /* ty=(Tensor[(3, 10, ?), bool], Tensor[(3, 10, 1), float32]) */;
  %689 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %690 = %689.0;
  %691 = cast(%690, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %692 = %683.0;
  %693 = %688.1;
  %694 = sinh(%691) /* ty=Tensor[(16, 3, 13), float32] */;
  (%692, %693, meta[relay.Constant][36] /* ty=Tensor[(30), float32] */, %694)
}

def @func_10280() -> Tensor[(16, 3, 13), float32] {
  %695 = @func_8108() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %695.0
}

def @func_9965(%var_9926: Tensor[(15, 5, 2), float64]) -> (Tensor[(15, 5, 2), float64], Tensor[(16, 3, 13), float32]) {
  %696 = cast(-9.63559f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %697 = cast(%var_9926, dtype="float64") /* ty=Tensor[(15, 5, 2), float64] */;
  %698 = mod(%696, %697) /* ty=Tensor[(15, 5, 2), float64] */;
  %699 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
  (%698, %699)
}

def @func_10908() -> (Tensor[(16, 3, 13), float32],) {
  %700 = @func_7986() /* ty=Tensor[(16, 3, 13), float32] */;
  (%700,)
}

def @func_10738() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %701 = @func_8108() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %702 = @func_4442() /* ty=Tensor[(16, 3, 13), float32] */;
  %703 = %701.0;
  (%702, %703)
}

def @func_11531() -> Tensor[(16, 3, 13), float32] {
  %704 = @func_10988() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %704.0
}

def @func_2480(%var_2468: Tensor[(16, 1, 13), uint8], %var_2469: Tensor[(16, 3, 13), uint8], %var_2476: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), uint8], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) {
  %705 = cast(%var_2468, dtype="uint8") /* ty=Tensor[(16, 1, 13), uint8] */;
  %706 = cast(%var_2469, dtype="uint8") /* ty=Tensor[(16, 3, 13), uint8] */;
  %707 = cast(%var_2476, dtype="float64") /* ty=Tensor[(273), float64] */;
  %708 = reshape(%707, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), float64] */;
  %709 = @func_2335(%708) /* ty=(Tensor[(13, 7, 3), float64],) */;
  %710 = bitwise_and(%705, %706) /* ty=Tensor[(16, 3, 13), uint8] */;
  %711 = %709.0;
  (%710, %711, %var_2476)
}

def @func_4863() -> (Tensor[(16, 3, 13), float32],) {
  %712 = @func_3873() /* ty=Tensor[(16, 3, 13), float32] */;
  (%712,)
}

def @func_6745() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %713 = @func_5687() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %714 = @func_6560() /* ty=Tensor[(16, 3, 13), float32] */;
  %715 = %713.0;
  (%714, %715)
}

def @func_8188() -> Tensor[(16, 3, 13), float32] {
  @func_4814() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_7333(%var_7285: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(273), float64], Tensor[(16, 3, 13), float32], Tensor[(273), bool]) {
  %716 = cast(%var_7285, dtype="float64") /* ty=Tensor[(273), float64] */;
  %717 = reshape(%716, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %718 = @func_4791(%717) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */;
  %719 = @func_5171() /* ty=Tensor[(16, 3, 13), float32] */;
  %720 = cast(%719, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %721 = reshape(%720, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), float32] */;
  %722 = @func_4132(%721) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) */;
  %723 = cast(%719, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %724 = reshape(%723, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), float32] */;
  %725 = @func_5385(%724) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */;
  %726 = %725.2;
  %727 = cast(%var_7285, dtype="bool") /* ty=Tensor[(273), bool] */;
  %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(1), int32] */;
  %729 = cast(%726, dtype="bool") /* ty=Tensor[(273), bool] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?), bool] */;
  %731 = %718.2;
  %732 = %722.0;
  %733 = less_equal(%729, %730) /* ty=Tensor[(273), bool] */;
  (%719, %731, %732, %733)
}

def @func_7428() -> (Tensor[(2, 14, ?), float64], Tensor[(2016), float32], Tensor[(16, 9, 14), float32]) {
  %734 = @func_4202() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) */;
  %735 = cast(meta[relay.Constant][37] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %736 = reshape(%735, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %737 = @func_2395(%736) /* ty=Tensor[(16, 9, 14), float32] */;
  %738 = cast(%737, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
  %739 = %734.1;
  %740 = sigmoid(%738) /* ty=Tensor[(16, 9, 14), float32] */;
  (%739, meta[relay.Constant][37] /* ty=Tensor[(2016), float32] */, %740)
}

def @func_8861() -> Tensor[(16, 3, 13), float32] {
  %741 = @func_5764() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %741.1
}

def @func_7611() -> (Tensor[(16, 3, 13), float32], Tensor[(2016), float32]) {
  %742 = @func_7428() /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2016), float32], Tensor[(16, 9, 14), float32]) */;
  %743 = @func_4628() /* ty=Tensor[(16, 3, 13), float32] */;
  %744 = %742.1;
  (%743, %744)
}

def @func_4419(%var_4337: Tensor[(504, 4), float32], %var_4356: Tensor[(208), uint8], %var_4357: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(504, 4), uint64], Tensor[(273), float64], Tensor[(208), uint8], Tensor[(273), float64], Tensor[(16, 3, 13), float32], Tensor[(504, 4), float32], Tensor[(504, 4), float64], Tensor[(16, 9, 14), float32]) {
  %745 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %746 = cast(%var_4337, dtype="float32") /* ty=Tensor[(504, 4), float32] */;
  %747 = reshape(%746, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %748 = @func_2395(%747) /* ty=Tensor[(16, 9, 14), float32] */;
  %749 = cast(%748, dtype="uint64") /* ty=Tensor[(16, 9, 14), uint64] */;
  %750 = shape_of(%var_4337, dtype="int32") /* ty=Tensor[(2), int32] */;
  %751 = cast(%var_4337, dtype="uint64") /* ty=Tensor[(504, 4), uint64] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %753 = cast(%var_4356, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %754 = %745.0;
  %755 = cast(%754, dtype="uint8") /* ty=Tensor[(16, 3, 13), uint8] */;
  %756 = cast(%var_4357, dtype="float64") /* ty=Tensor[(273), float64] */;
  %757 = reshape(%753, newshape=[16, 1, 13]) /* ty=Tensor[(16, 1, 13), uint8] */;
  %758 = reshape(%755, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), uint8] */;
  %759 = reshape(%756, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %760 = @func_2480(%757, %758, %759) /* ty=(Tensor[(16, 3, 13), uint8], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */;
  %761 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %762 = cast(%var_4337, dtype="float64") /* ty=Tensor[(504, 4), float64] */;
  %763 = sqrt(%762) /* ty=Tensor[(504, 4), float64] */;
  %764 = cast(%763, dtype="float32") /* ty=Tensor[(504, 4), float32] */;
  %765 = cast(%763, dtype="float32") /* ty=Tensor[(504, 4), float32] */;
  %766 = log(%765) /* ty=Tensor[(504, 4), float32] */;
  %767 = cast(%766, dtype="float64") /* ty=Tensor[(504, 4), float64] */;
  %768 = cast(%763, dtype="float32") /* ty=Tensor[(504, 4), float32] */;
  %769 = reshape(%768, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %770 = right_shift(%751, %752) /* ty=Tensor[(504, 4), uint64] */;
  %771 = %760.2;
  %772 = %761.0;
  %773 = asinh(%764) /* ty=Tensor[(504, 4), float32] */;
  %774 = atanh(%767) /* ty=Tensor[(504, 4), float64] */;
  %775 = @func_2395(%769) /* ty=Tensor[(16, 9, 14), float32] */;
  (%754, %770, %771, %var_4356, %var_4357, %772, %773, %774, %775)
}

def @func_3946() -> (Tensor[(16, 3, 13), float32],) {
  %776 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %777 = %776.0;
  (%777,)
}

def @func_5008(%var_4995: Tensor[(8, 8, 3), bool], %var_4996: Tensor[(8, 8, 3), bool]) -> (Tensor[(8, 8, 3), bool], Tensor[(8, 8, 3), float32]) {
  %778 = cast(%var_4996, dtype="bool") /* ty=Tensor[(8, 8, 3), bool] */;
  %779 = shape_of(%var_4995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %780 = cast(%var_4995, dtype="bool") /* ty=Tensor[(8, 8, 3), bool] */;
  %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %782 = cast(%var_4996, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
  %783 = logical_or(%780, %781) /* ty=Tensor[(8, 8, 3), bool] */;
  %784 = sqrt(%782) /* ty=Tensor[(8, 8, 3), float32] */;
  (%783, %784)
}

def @func_5171() -> Tensor[(16, 3, 13), float32] {
  %785 = @func_4166() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %786 = %785.0;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  cosh(%787) /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_10112() -> (Tensor[(16, 3, 13), float32],) {
  %788 = @func_9413() /* ty=Tensor[(16, 3, 13), float32] */;
  (%788,)
}

def @func_10061() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint16]) {
  %789 = @func_9259() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %790 = @func_8487() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
  %791 = @func_9348() /* ty=Tensor[(16, 3, 13), float32] */;
  %792 = %789.0;
  %793 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
  %794 = %790.0;
  (%791, %792, %793, %794)
}

def @func_8939() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(8, 8, 3), float32], Tensor[(192), bool]) {
  %795 = @func_6122() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %796 = cast(meta[relay.Constant][38] /* ty=Tensor[(192), bool] */, dtype="bool") /* ty=Tensor[(192), bool] */;
  %797 = cast(meta[relay.Constant][38] /* ty=Tensor[(192), bool] */, dtype="bool") /* ty=Tensor[(192), bool] */;
  %798 = reshape(%796, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %799 = reshape(%797, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %800 = @func_5008(%798, %799) /* ty=(Tensor[(8, 8, 3), bool], Tensor[(8, 8, 3), float32]) */;
  %801 = @func_3873() /* ty=Tensor[(16, 3, 13), float32] */;
  %802 = %795.0;
  %803 = %800.1;
  (%801, %802, %803, meta[relay.Constant][38] /* ty=Tensor[(192), bool] */)
}

def @func_6122() -> (Tensor[(16, 3, 13), float32],) {
  %804 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %805 = %804.1;
  (%805,)
}

def @func_11515() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %806 = @func_10112() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %807 = @func_10863() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %808 = @func_8436() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(1, 572), float32], Tensor[(7, 4), float64], float32, Tensor[(2016), float32], Tensor[(16, 3, 13), uint16], Tensor[(24, 10), int32]) */;
  %809 = @func_10112() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %810 = @func_5959() /* ty=Tensor[(16, 3, 13), float32] */;
  %811 = %806.0;
  %812 = %807.0;
  %813 = %808.0;
  %814 = %809.0;
  (%810, %811, %812, %813, %814)
}

def @func_11429() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %815 = @func_9497() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %816 = @func_9648() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %817 = @func_5504() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %818 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %819 = %815.1;
  %820 = %816.0;
  %821 = %817.0;
  %822 = @func_9635() /* ty=Tensor[(16, 3, 13), float32] */;
  %823 = @func_7643() /* ty=Tensor[(16, 3, 13), float32] */;
  %824 = %818.0;
  (%819, %820, %821, %822, %823, %824)
}

def @func_7183() -> (Tensor[(16, 3, 13), float32],) {
  %825 = @func_4897() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %826 = %825.0;
  (%826,)
}

def @func_4202() -> (Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) {
  %827 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %828 = cast(meta[relay.Constant][39] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %829 = reshape(%828, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float64] */;
  %830 = @func_3503(%829) /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2, 14, 1), float64]) */;
  %831 = %827.0;
  %832 = %830.0;
  (%831, %832, meta[relay.Constant][39] /* ty=Tensor[(28), float64] */)
}

def @func_10247(%var_10242: Tensor[(9, 9, 10), uint8]) -> (Tensor[(9, 9, 10), uint8],) {
  %833 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 9, 10), uint8] */, dtype="uint8") /* ty=Tensor[(9, 9, 10), uint8] */;
  %834 = shape_of(%var_10242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%var_10242, dtype="uint8") /* ty=Tensor[(9, 9, 10), uint8] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %837 = add(%835, %836) /* ty=Tensor[(9, 9, 10), uint8] */;
  (%837,)
}

def @func_6495(%var_6491: Tensor[(8, 30), int32]) -> (Tensor[(16, 3, 13), uint16], Tensor[(8, 2, 15), float64], Tensor[(8, 30), float64]) {
  %838 = @func_5917() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
  %839 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 30), int32] */, dtype="int32") /* ty=Tensor[(8, 30), int32] */;
  %840 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 30), int32] */, dtype="int32") /* ty=Tensor[(8, 30), int32] */;
  %841 = reshape(%839, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), int32] */;
  %842 = reshape(%840, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), int32] */;
  %843 = cast(%var_6491, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
  %844 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(8, 30), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %845 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 30), int32] */, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %847 = %838.0;
  %848 = @func_5120(%841, %842) /* ty=Tensor[(8, 2, 15), float64] */;
  %849 = power(%845, %846) /* ty=Tensor[(8, 30), float64] */;
  (%847, %848, %849)
}

def @func_5385(%var_5368: Tensor[(16, 3, 13), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) {
  %850 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %851 = %850.0;
  %852 = cast(%var_5368, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %853 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %854 = cast(%851, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %856 = cast(meta[relay.Constant][42] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %857 = reshape(%856, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), float64] */;
  %858 = @func_2335(%857) /* ty=(Tensor[(13, 7, 3), float64],) */;
  %859 = floor_divide(%854, %855) /* ty=Tensor[(16, 3, 13), float32] */;
  %860 = %858.0;
  (%859, %860, meta[relay.Constant][42] /* ty=Tensor[(273), float64] */)
}

def @func_3617(%var_3585: Tensor[(28), float64], %var_3601: float32, %var_3605: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(2, 14, 1), float64], Tensor[(28), float64], Tensor[(10, 12, 14), float32], float32, Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(9, 8, ?), bool], Tensor[(3, 24), float32], Tensor[(1, 572), float32]) {
  %861 = cast(%var_3585, dtype="float64") /* ty=Tensor[(28), float64] */;
  %862 = reshape(%861, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float64] */;
  %863 = @func_3503(%862) /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2, 14, 1), float64]) */;
  %864 = cast(%var_3601, dtype="float32") /* ty=float32 */;
  %865 = reshape(%864, newshape=[]) /* ty=float32 */;
  %866 = cast(%var_3605, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %867 = reshape(%866, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %868 = @func_3460(%867) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2016), float32], Tensor[(16, 3, 13), uint8], Tensor[(208), uint8], Tensor[(273), float64]) */;
  %869 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %870 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 572), float32] */, dtype="float32") /* ty=Tensor[(1, 572), float32] */;
  %871 = reshape(%869, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float32] */;
  %872 = reshape(%870, newshape=[572]) /* ty=Tensor[(572), float32] */;
  %873 = @func_653(%871, %872) /* ty=(Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) */;
  %874 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  %875 = %863.1;
  %876 = @func_16(%865) /* ty=Tensor[(10, 12, 14), float32] */;
  %877 = %868.1;
  %878 = %873.0;
  (%874, %875, %var_3585, %876, %var_3601, %877, %var_3605, %878, meta[relay.Constant][43] /* ty=Tensor[(3, 24), float32] */, meta[relay.Constant][44] /* ty=Tensor[(1, 572), float32] */)
}

def @func_8633() -> (Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) {
  %879 = @func_5917() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
  %880 = @func_4897() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %881 = %879.0;
  %882 = %880.0;
  (%881, %882)
}

def @func_9667() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %883 = @func_9123() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %884 = @func_6624() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %885 = %883.3;
  %886 = %884.1;
  (%885, %886)
}

def @func_6063() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float32], Tensor[(16, 3, 13), float32]) {
  %887 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %888 = @func_5189() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %889 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %890 = cast(meta[relay.Constant][45] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %891 = reshape(%890, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
  %892 = @func_263(%891) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
  %893 = @func_4202() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) */;
  %894 = %887.0;
  %895 = %888.0;
  %896 = %889.0;
  %897 = %892.1;
  %898 = %893.0;
  (%894, %895, %896, %897, meta[relay.Constant][45] /* ty=Tensor[(572), float32] */, %898)
}

def @func_3999() -> Tensor[(16, 3, 13), float32] {
  %899 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %899.0
}

def @func_6316(%var_6267: Tensor[(30), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(3, 10, ?), bool], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), float32], Tensor[(16, 3, 13), float64], Tensor[(16, 3, 13), float32]) {
  %900 = cast(%var_6267, dtype="float32") /* ty=Tensor[(30), float32] */;
  %901 = cast(%var_6267, dtype="float32") /* ty=Tensor[(30), float32] */;
  %902 = reshape(%900, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %903 = reshape(%901, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %904 = @func_2786(%902, %903) /* ty=(Tensor[(3, 10, ?), bool], Tensor[(3, 10, 1), float32]) */;
  %905 = cast(meta[relay.Constant][46] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %906 = reshape(%905, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %907 = @func_2438(%906) /* ty=(Tensor[(11, 1, 9), float64],) */;
  %908 = %907.0;
  %909 = cast(meta[relay.Constant][46] /* ty=Tensor[(99), float64] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %910 = shape_of(%908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(%908, dtype="float32") /* ty=Tensor[(11, 1, 9), float32] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %913 = @func_5302() /* ty=(Tensor[(16, 3, 13), float64],) */;
  %914 = @func_5959() /* ty=Tensor[(16, 3, 13), float32] */;
  %915 = @func_4814() /* ty=Tensor[(16, 3, 13), float32] */;
  %916 = %904.0;
  %917 = @func_3664() /* ty=Tensor[(16, 3, 13), float32] */;
  %918 = floor_mod(%911, %912) /* ty=Tensor[(11, ?, 9), float32] */;
  %919 = %913.0;
  %920 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  (%914, %915, %916, %var_6267, %917, %918, %919, %920)
}

def @func_9741() -> Tensor[(16, 3, 13), float32] {
  %921 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %921.0
}

def @func_10948() -> Tensor[(16, 3, 13), float32] {
  %922 = @func_8108() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %922.0
}

def @func_5055(%var_5032: Tensor[(448), int16], %var_5033: Tensor[(420), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(448), int16], Tensor[(800), float32], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) {
  %923 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %924 = cast(meta[relay.Constant][47] /* ty=Tensor[(800), float32] */, dtype="float32") /* ty=Tensor[(800), float32] */;
  %925 = cast(%var_5032, dtype="int16") /* ty=Tensor[(448), int16] */;
  %926 = cast(%var_5033, dtype="float32") /* ty=Tensor[(420), float32] */;
  %927 = cast(meta[relay.Constant][48] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %928 = reshape(%924, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float32] */;
  %929 = reshape(%925, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %930 = reshape(%926, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %931 = reshape(%927, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %932 = @func_1975(%928, %929, %930, %931) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), bool], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), float64], Tensor[(8, 8, 7), int64]) */;
  %933 = @func_4897() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %934 = %933.0;
  %935 = cast(%934, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %936 = reshape(%935, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), float32] */;
  %937 = @func_4132(%936) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) */;
  %938 = %923.0;
  %939 = %932.1;
  %940 = %937.1;
  (%938, %939, meta[relay.Constant][47] /* ty=Tensor[(800), float32] */, %var_5032, %var_5033, meta[relay.Constant][48] /* ty=Tensor[(72), float32] */, %934, %940)
}

def @func_7735(%var_7721: Tensor[(2, 10, 3), float64]) -> (Tensor[(2, 10, 3), uint64],) {
  %941 = cast(%var_7721, dtype="float64") /* ty=Tensor[(2, 10, 3), float64] */;
  %942 = asinh(%941) /* ty=Tensor[(2, 10, 3), float64] */;
  %943 = cast(%var_7721, dtype="uint64") /* ty=Tensor[(2, 10, 3), uint64] */;
  %944 = shape_of(%942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %945 = cast(%942, dtype="uint64") /* ty=Tensor[(2, 10, 3), uint64] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %947 = bitwise_and(%945, %946) /* ty=Tensor[(2, 10, 3), uint64] */;
  (%947,)
}

def @func_4897() -> (Tensor[(16, 3, 13), float32],) {
  %948 = @func_4863() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %949 = %948.0;
  (%949,)
}

def @func_8144() -> (Tensor[(16, 3, 13), float32],) {
  %950 = @func_5959() /* ty=Tensor[(16, 3, 13), float32] */;
  (%950,)
}

def @func_4166() -> (Tensor[(16, 3, 13), float32],) {
  %951 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %952 = %951.0;
  %953 = cast(%952, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %954 = sin(%953) /* ty=Tensor[(16, 3, 13), float32] */;
  (%954,)
}

def @func_5764() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %955 = @func_5189() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %956 = @func_3873() /* ty=Tensor[(16, 3, 13), float32] */;
  %957 = %955.0;
  (%956, %957)
}

def @func_1975(%var_1906: Tensor[(5, 10, 16), float32], %var_1921: Tensor[(448), int16], %var_1922: Tensor[(420), float32], %var_1923: Tensor[(72), float32]) -> (Tensor[(8, 8, 7), bool], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), bool], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), float64], Tensor[(8, 8, 7), int64]) {
  %958 = cast(%var_1921, dtype="int16") /* ty=Tensor[(448), int16] */;
  %959 = cast(%var_1921, dtype="int16") /* ty=Tensor[(448), int16] */;
  %960 = cast(%var_1922, dtype="float32") /* ty=Tensor[(420), float32] */;
  %961 = cast(%var_1923, dtype="float32") /* ty=Tensor[(72), float32] */;
  %962 = reshape(%958, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), int16] */;
  %963 = reshape(%959, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), int16] */;
  %964 = reshape(%960, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %965 = reshape(%961, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %966 = @func_1581(%962, %963, %964, %965) /* ty=(Tensor[(8, 8, 7), int64], Tensor[(8, 8, 7), float64], Tensor[(8, 8, 7), bool], Tensor[(572), float32], Tensor[(420), float32], Tensor[(72), float32], Tensor[(572), float32]) */;
  %967 = cast(%var_1906, dtype="float32") /* ty=Tensor[(5, 10, 16), float32] */;
  %968 = asin(%967) /* ty=Tensor[(5, 10, 16), float32] */;
  %969 = cast(%var_1906, dtype="uint32") /* ty=Tensor[(5, 10, 16), uint32] */;
  %970 = shape_of(%968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %971 = cast(%968, dtype="uint32") /* ty=Tensor[(5, 10, 16), uint32] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %973 = minimum(%971, %972) /* ty=Tensor[(5, 10, 16), uint32] */;
  %974 = cast(%968, dtype="bool") /* ty=Tensor[(5, 10, 16), bool] */;
  %975 = shape_of(%973, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%973, dtype="bool") /* ty=Tensor[(5, 10, 16), bool] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %978 = cast(%var_1923, dtype="float32") /* ty=Tensor[(72), float32] */;
  %979 = cast(meta[relay.Constant][49] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %980 = reshape(%978, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float32] */;
  %981 = reshape(%979, newshape=[572]) /* ty=Tensor[(572), float32] */;
  %982 = @func_653(%980, %981) /* ty=(Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) */;
  %983 = %982.0;
  %984 = cast(meta[relay.Constant][49] /* ty=Tensor[(572), float32] */, dtype="bool") /* ty=Tensor[(572), bool] */;
  %985 = cast(%983, dtype="bool") /* ty=Tensor[(9, 8, ?), bool] */;
  %986 = cast(%var_1906, dtype="bool") /* ty=Tensor[(5, 10, 16), bool] */;
  %987 = shape_of(%968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %988 = cast(%968, dtype="bool") /* ty=Tensor[(5, 10, 16), bool] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %990 = cast(%983, dtype="float32") /* ty=Tensor[(9, 8, ?), float32] */;
  %991 = cast(meta[relay.Constant][49] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %992 = reshape(%990, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float32] */;
  %993 = reshape(%991, newshape=[572]) /* ty=Tensor[(572), float32] */;
  %994 = @func_653(%992, %993) /* ty=(Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) */;
  %995 = %994.2;
  %996 = cast(%995, dtype="float64") /* ty=Tensor[(572), float64] */;
  %997 = cast(%983, dtype="float64") /* ty=Tensor[(9, 8, ?), float64] */;
  %998 = %966.2;
  %999 = cast(%998, dtype="int16") /* ty=Tensor[(8, 8, 7), int16] */;
  %1000 = cast(%var_1921, dtype="int16") /* ty=Tensor[(448), int16] */;
  %1001 = cast(%var_1922, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1002 = cast(%983, dtype="float32") /* ty=Tensor[(9, 8, ?), float32] */;
  %1003 = reshape(%999, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), int16] */;
  %1004 = reshape(%1000, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), int16] */;
  %1005 = reshape(%1001, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %1006 = reshape(%1002, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %1007 = @func_1581(%1003, %1004, %1005, %1006) /* ty=(Tensor[(8, 8, 7), int64], Tensor[(8, 8, 7), float64], Tensor[(8, 8, 7), bool], Tensor[(572), float32], Tensor[(420), float32], Tensor[(72), float32], Tensor[(572), float32]) */;
  %1008 = less_equal(%976, %977) /* ty=Tensor[(5, 10, 16), bool] */;
  %1009 = not_equal(%984, %985) /* ty=Tensor[(9, 8, 572), bool] */;
  %1010 = less(%988, %989) /* ty=Tensor[(5, 10, 16), bool] */;
  %1011 = floor_divide(%996, %997) /* ty=Tensor[(9, 8, 572), float64] */;
  %1012 = %1007.0;
  (%998, %var_1921, %var_1922, %var_1923, %1008, %1009, %1010, %1011, %1012)
}

def @func_11906() -> (Tensor[(1, 14, 1), float32],) {
  %1013 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 1), float32] */;
  %1014 = asin(%1013) /* ty=Tensor[(1, 14, 1), float32] */;
  (%1014,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10738() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %0 = @func_8108() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %1 = @func_4442() /* ty=Tensor[(16, 3, 13), float32] */;
  %2 = %0.0;
  (%1, %2)
}

def @func_4651(%var_4650: Tensor[(3, 4), float32]) -> (Tensor[(3, 4), float32],) {
  %5 = fn (%var_4639: Tensor[(3, 4), float32]) -> (Tensor[(3, 4), float32],) {
    %3 = cast(%var_4639, dtype="float32") /* ty=Tensor[(3, 4), float32] */;
    %4 = exp(%3) /* ty=Tensor[(3, 4), float32] */;
    (%4,)
  };
  %5(%var_4650) /* ty=(Tensor[(3, 4), float32],) */
}

def @func_6745() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %6 = @func_5687() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %7 = @func_6560() /* ty=Tensor[(16, 3, 13), float32] */;
  %8 = %6.0;
  (%7, %8)
}

def @func_7612() -> (Tensor[(16, 3, 13), float32], Tensor[(2016), float32]) {
  %12 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(2016), float32]) {
    %9 = @func_7428() /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2016), float32], Tensor[(16, 9, 14), float32]) */;
    %10 = @func_4628() /* ty=Tensor[(16, 3, 13), float32] */;
    %11 = %9.1;
    (%10, %11)
  };
  %12() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2016), float32]) */
}

def @func_1292(%var_1289: Tensor[(10, 6, 7), float32], %var_1290: Tensor[(72), float32], %var_1291: Tensor[(143, 4), float32]) -> (Tensor[(10, 6, 7), float32], Tensor[(572), float32], Tensor[(72), float32], Tensor[(143, 4), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 8, ?), bool]) {
  %31 = fn (%var_1230: Tensor[(10, 6, 7), float32], %var_1238: Tensor[(72), float32], %var_1239: Tensor[(143, 4), float32]) -> (Tensor[(10, 6, 7), float32], Tensor[(572), float32], Tensor[(72), float32], Tensor[(143, 4), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 8, ?), bool]) {
    %13 = cast(%var_1230, dtype="float32") /* ty=Tensor[(10, 6, 7), float32] */;
    %14 = cast(%var_1238, dtype="float32") /* ty=Tensor[(72), float32] */;
    %15 = cast(%var_1239, dtype="float32") /* ty=Tensor[(143, 4), float32] */;
    %16 = reshape(%14, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float32] */;
    %17 = reshape(%15, newshape=[572]) /* ty=Tensor[(572), float32] */;
    %18 = @func_653(%16, %17) /* ty=(Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) */;
    %19 = %18.2;
    %20 = cast(%19, dtype="float32") /* ty=Tensor[(572), float32] */;
    %21 = reshape(%20, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
    %22 = @func_263(%21) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
    %23 = cast(%var_1238, dtype="float32") /* ty=Tensor[(72), float32] */;
    %24 = cast(%var_1239, dtype="float32") /* ty=Tensor[(143, 4), float32] */;
    %25 = reshape(%23, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float32] */;
    %26 = reshape(%24, newshape=[572]) /* ty=Tensor[(572), float32] */;
    %27 = @func_653(%25, %26) /* ty=(Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) */;
    %28 = cos(%13) /* ty=Tensor[(10, 6, 7), float32] */;
    %29 = %22.1;
    %30 = %27.0;
    (%28, %19, %var_1238, %var_1239, %29, %30)
  };
  %31(%var_1289, %var_1290, %var_1291) /* ty=(Tensor[(10, 6, 7), float32], Tensor[(572), float32], Tensor[(72), float32], Tensor[(143, 4), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 8, ?), bool]) */
}

def @func_11017() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %35 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
    %32 = @func_9981() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %33 = @func_10879() /* ty=Tensor[(16, 3, 13), float32] */;
    %34 = %32.0;
    (%33, %34)
  };
  %35() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_10396() -> (Tensor[(16, 3, 13), float32],) {
  @func_10394() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_10740() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_10738() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_6123() -> (Tensor[(16, 3, 13), float32],) {
  %38 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %36 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
    %37 = %36.1;
    (%37,)
  };
  %38() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_6009() -> Tensor[(16, 3, 13), float32] {
  @func_6007() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_263(%var_224: Tensor[(13, 4, 11), float32]) -> (Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) {
  %39 = cast(%var_224, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
  %40 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(13, 4, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %43 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 4, 11), float32] */, dtype="float64") /* ty=Tensor[(13, 4, 11), float64] */;
  %44 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 4, 11), float32] */, dtype="float64") /* ty=Tensor[(13, 4, 11), float64] */;
  %45 = power(%41, %42) /* ty=Tensor[(13, 4, 11), float32] */;
  %46 = tan(%43) /* ty=Tensor[(13, 4, 11), float64] */;
  %47 = erf(%44) /* ty=Tensor[(13, 4, 11), float64] */;
  (%45, %46, %47)
}

def @func_4756(%var_4754: Tensor[(99), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), int32], Tensor[(16, 3, 13), float32]) {
  @func_4753(%var_4754) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), int32], Tensor[(16, 3, 13), float32]) */
}

def @func_9649() -> (Tensor[(16, 3, 13), float32],) {
  %50 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %48 = @func_9322() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %49 = %48.0;
    (%49,)
  };
  %50() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_11456(%var_11444: Tensor[(11, 12, 10), int16]) -> (Tensor[(11, 12, 10), int16], Tensor[(16, 3, 13), float32]) {
  %51 = cast(meta[relay.Constant][1] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %52 = cast(%var_11444, dtype="int16") /* ty=Tensor[(11, 12, 10), int16] */;
  %53 = @func_9497() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %54 = subtract(%51, %52) /* ty=Tensor[(11, 12, 10), int16] */;
  %55 = %53.1;
  (%54, %55)
}

def @func_9531() -> (Tensor[(16, 3, 13), float32],) {
  @func_9529() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_9616() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(240), int32]) {
  %56 = @func_7379() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %57 = @func_9578() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(8, 2, 15), float64], Tensor[(240), int32]) */;
  %58 = @func_8188() /* ty=Tensor[(16, 3, 13), float32] */;
  %59 = %56.0;
  %60 = %57.2;
  (%58, %59, %60)
}

def @func_5689() -> (Tensor[(16, 3, 13), float32],) {
  @func_5687() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_10480() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %65 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
    %61 = @func_5265() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %62 = @func_7183() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %63 = %61.0;
    %64 = %62.0;
    (%63, %64)
  };
  %65() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_9968(%var_9966: Tensor[(15, 5, 2), float64]) -> (Tensor[(15, 5, 2), float64], Tensor[(16, 3, 13), float32]) {
  @func_9965(%var_9966) /* ty=(Tensor[(15, 5, 2), float64], Tensor[(16, 3, 13), float32]) */
}

def @func_3503(%var_3489: Tensor[(2, 14, 1), float64]) -> (Tensor[(2, 14, ?), float64], Tensor[(2, 14, 1), float64]) {
  %66 = cast(%var_3489, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %67 = log10(%66) /* ty=Tensor[(2, 14, 1), float64] */;
  %68 = cast(%var_3489, dtype="uint16") /* ty=Tensor[(2, 14, 1), uint16] */;
  %69 = shape_of(%67, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%67, dtype="uint16") /* ty=Tensor[(2, 14, 1), uint16] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %72 = maximum(%70, %71) /* ty=Tensor[(2, 14, ?), uint16] */;
  %73 = cast(%72, dtype="float64") /* ty=Tensor[(2, 14, ?), float64] */;
  %74 = cast(%67, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %75 = sqrt(%73) /* ty=Tensor[(2, 14, ?), float64] */;
  %76 = tan(%74) /* ty=Tensor[(2, 14, 1), float64] */;
  (%75, %76)
}

def @func_2753(%var_2748: Tensor[(10, 1, 5), uint8], %var_2749: Tensor[(10, 5, 5), uint8]) -> Tensor[(10, 5, 5), uint8] {
  %77 = cast(%var_2748, dtype="uint8") /* ty=Tensor[(10, 1, 5), uint8] */;
  %78 = cast(%var_2749, dtype="uint8") /* ty=Tensor[(10, 5, 5), uint8] */;
  bitwise_or(%77, %78) /* ty=Tensor[(10, 5, 5), uint8] */
}

def @func_6561() -> Tensor[(16, 3, 13), float32] {
  %80 = fn () -> Tensor[(16, 3, 13), float32] {
    %79 = @func_5137() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %79.0
  };
  %80() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_4628() -> Tensor[(16, 3, 13), float32] {
  @func_3664() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_8487() -> (Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) {
  %81 = @func_5917() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
  %82 = %81.0;
  %83 = @func_8188() /* ty=Tensor[(16, 3, 13), float32] */;
  (%82, %83)
}

def @func_9580() -> (Tensor[(16, 3, 13), float32], Tensor[(8, 2, 15), float64], Tensor[(240), int32]) {
  @func_9578() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(8, 2, 15), float64], Tensor[(240), int32]) */
}

def @func_8525() -> (Tensor[(16, 3, 13), float32], Tensor[(3, 10, 1), float32], Tensor[(30), float32], Tensor[(16, 3, 13), float32]) {
  %84 = @func_6780() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %85 = cast(meta[relay.Constant][2] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %86 = cast(meta[relay.Constant][2] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %87 = reshape(%85, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %88 = reshape(%86, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %89 = @func_2786(%87, %88) /* ty=(Tensor[(3, 10, ?), bool], Tensor[(3, 10, 1), float32]) */;
  %90 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %91 = %90.0;
  %92 = cast(%91, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %93 = %84.0;
  %94 = %89.1;
  %95 = sinh(%92) /* ty=Tensor[(16, 3, 13), float32] */;
  (%93, %94, meta[relay.Constant][2] /* ty=Tensor[(30), float32] */, %95)
}

def @func_5334() -> Tensor[(16, 3, 13), float32] {
  @func_5332() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_7429() -> (Tensor[(2, 14, ?), float64], Tensor[(2016), float32], Tensor[(16, 9, 14), float32]) {
  %103 = fn () -> (Tensor[(2, 14, ?), float64], Tensor[(2016), float32], Tensor[(16, 9, 14), float32]) {
    %96 = @func_4202() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) */;
    %97 = cast(meta[relay.Constant][3] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %98 = reshape(%97, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
    %99 = @func_2395(%98) /* ty=Tensor[(16, 9, 14), float32] */;
    %100 = cast(%99, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
    %101 = %96.1;
    %102 = sigmoid(%100) /* ty=Tensor[(16, 9, 14), float32] */;
    (%101, meta[relay.Constant][3] /* ty=Tensor[(2016), float32] */, %102)
  };
  %103() /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2016), float32], Tensor[(16, 9, 14), float32]) */
}

def @func_9007() -> Tensor[(16, 3, 13), float32] {
  @func_9005() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_7644() -> Tensor[(16, 3, 13), float32] {
  %105 = fn () -> Tensor[(16, 3, 13), float32] {
    %104 = @func_5764() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
    %104.1
  };
  %105() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_10112() -> (Tensor[(16, 3, 13), float32],) {
  %106 = @func_9413() /* ty=Tensor[(16, 3, 13), float32] */;
  (%106,)
}

def @func_10114() -> (Tensor[(16, 3, 13), float32],) {
  @func_10112() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_7379() -> (Tensor[(16, 3, 13), float32],) {
  %107 = @func_6745() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %108 = %107.0;
  (%108,)
}

def @func_7801() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %109 = @func_5687() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %110 = @func_5687() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %111 = %109.0;
  %112 = %110.0;
  (%111, %112)
}

def @func_9578() -> (Tensor[(16, 3, 13), float32], Tensor[(8, 2, 15), float64], Tensor[(240), int32]) {
  %113 = @func_7367() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %114 = cast(meta[relay.Constant][4] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
  %115 = reshape(%114, newshape=[8, 30]) /* ty=Tensor[(8, 30), int32] */;
  %116 = @func_6495(%115) /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(8, 2, 15), float64], Tensor[(8, 30), float64]) */;
  %117 = %113.0;
  %118 = %116.1;
  (%117, %118, meta[relay.Constant][4] /* ty=Tensor[(240), int32] */)
}

def @func_5012(%var_5010: Tensor[(8, 8, 3), bool], %var_5011: Tensor[(8, 8, 3), bool]) -> (Tensor[(8, 8, 3), bool], Tensor[(8, 8, 3), float32]) {
  @func_5008(%var_5010, %var_5011) /* ty=(Tensor[(8, 8, 3), bool], Tensor[(8, 8, 3), float32]) */
}

def @func_16(%var_3: float32) -> Tensor[(10, 12, 14), float32] {
  %119 = cast(%var_3, dtype="float32") /* ty=float32 */;
  %120 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(10, 12, 14), float32] */;
  divide(%119, %120) /* ty=Tensor[(10, 12, 14), float32] */
}

def @func_3665() -> Tensor[(16, 3, 13), float32] {
  %121 = fn () -> Tensor[(16, 3, 13), float32] {
    @func_3354() /* ty=Tensor[(16, 3, 13), float32] */
  };
  %121() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_7737(%var_7736: Tensor[(2, 10, 3), float64]) -> (Tensor[(2, 10, 3), uint64],) {
  %129 = fn (%var_7721: Tensor[(2, 10, 3), float64]) -> (Tensor[(2, 10, 3), uint64],) {
    %122 = cast(%var_7721, dtype="float64") /* ty=Tensor[(2, 10, 3), float64] */;
    %123 = asinh(%122) /* ty=Tensor[(2, 10, 3), float64] */;
    %124 = cast(%var_7721, dtype="uint64") /* ty=Tensor[(2, 10, 3), uint64] */;
    %125 = shape_of(%123, dtype="int32") /* ty=Tensor[(3), int32] */;
    %126 = cast(%123, dtype="uint64") /* ty=Tensor[(2, 10, 3), uint64] */;
    %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %128 = bitwise_and(%126, %127) /* ty=Tensor[(2, 10, 3), uint64] */;
    (%128,)
  };
  %129(%var_7736) /* ty=(Tensor[(2, 10, 3), uint64],) */
}

def @func_10439() -> (Tensor[(16, 3, 13), float32],) {
  %130 = @func_9123() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %131 = %130.1;
  (%131,)
}

def @func_5505() -> (Tensor[(16, 3, 13), float32],) {
  %136 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %132 = @func_4897() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %133 = %132.0;
    %134 = cast(%133, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
    %135 = sqrt(%134) /* ty=Tensor[(16, 3, 13), float32] */;
    (%135,)
  };
  %136() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_2480(%var_2468: Tensor[(16, 1, 13), uint8], %var_2469: Tensor[(16, 3, 13), uint8], %var_2476: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), uint8], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) {
  %137 = cast(%var_2468, dtype="uint8") /* ty=Tensor[(16, 1, 13), uint8] */;
  %138 = cast(%var_2469, dtype="uint8") /* ty=Tensor[(16, 3, 13), uint8] */;
  %139 = cast(%var_2476, dtype="float64") /* ty=Tensor[(273), float64] */;
  %140 = reshape(%139, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), float64] */;
  %141 = @func_2335(%140) /* ty=(Tensor[(13, 7, 3), float64],) */;
  %142 = bitwise_and(%137, %138) /* ty=Tensor[(16, 3, 13), uint8] */;
  %143 = %141.0;
  (%142, %143, %var_2476)
}

def @func_5304() -> (Tensor[(16, 3, 13), float64],) {
  @func_5302() /* ty=(Tensor[(16, 3, 13), float64],) */
}

def @func_10154(%var_10132: Tensor[(1, 5, 16), float64]) -> (Tensor[(?, 5, 16), uint8],) {
  %144 = cast(%var_10132, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %145 = rsqrt(%144) /* ty=Tensor[(1, 5, 16), float64] */;
  %146 = cast(%var_10132, dtype="uint8") /* ty=Tensor[(1, 5, 16), uint8] */;
  %147 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%145, dtype="uint8") /* ty=Tensor[(1, 5, 16), uint8] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %150 = minimum(%148, %149) /* ty=Tensor[(?, 5, 16), uint8] */;
  (%150,)
}

def @func_10519(%var_10517: Tensor[(240), int32]) -> (Tensor[(16, 3, 13), float32], Tensor[(8, 2, 15), float64], Tensor[(240), int32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_10516(%var_10517) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(8, 2, 15), float64], Tensor[(240), int32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_3506(%var_3504: Tensor[(2, 14, 1), float64]) -> (Tensor[(2, 14, ?), float64], Tensor[(2, 14, 1), float64]) {
  @func_3503(%var_3504) /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2, 14, 1), float64]) */
}

def @func_4510() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_3460(%var_3419: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(2016), float32], Tensor[(16, 3, 13), uint8], Tensor[(208), uint8], Tensor[(273), float64]) {
  %151 = cast(%var_3419, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %152 = acos(%151) /* ty=Tensor[(2016), float64] */;
  %153 = cast(%var_3419, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %154 = reshape(%153, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %155 = @func_2395(%154) /* ty=Tensor[(16, 9, 14), float32] */;
  %156 = cast(%155, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
  %157 = shape_of(%152, dtype="int32") /* ty=Tensor[(1), int32] */;
  %158 = cast(%152, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?), float32] */;
  %160 = cast(meta[relay.Constant][6] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %161 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  %162 = cast(%161, dtype="uint8") /* ty=Tensor[(16, 3, 13), uint8] */;
  %163 = cast(meta[relay.Constant][7] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %164 = reshape(%160, newshape=[16, 1, 13]) /* ty=Tensor[(16, 1, 13), uint8] */;
  %165 = reshape(%162, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), uint8] */;
  %166 = reshape(%163, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %167 = @func_2480(%164, %165, %166) /* ty=(Tensor[(16, 3, 13), uint8], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */;
  %168 = divide(%158, %159) /* ty=Tensor[(2016), float32] */;
  %169 = %167.0;
  (%161, %168, %169, meta[relay.Constant][6] /* ty=Tensor[(208), uint8] */, meta[relay.Constant][7] /* ty=Tensor[(273), float64] */)
}

def @func_4508() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %170 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %171 = %170.0;
  %172 = @func_3873() /* ty=Tensor[(16, 3, 13), float32] */;
  (%171, %172)
}

def @func_6316(%var_6267: Tensor[(30), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(3, 10, ?), bool], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), float32], Tensor[(16, 3, 13), float64], Tensor[(16, 3, 13), float32]) {
  %173 = cast(%var_6267, dtype="float32") /* ty=Tensor[(30), float32] */;
  %174 = cast(%var_6267, dtype="float32") /* ty=Tensor[(30), float32] */;
  %175 = reshape(%173, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %176 = reshape(%174, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %177 = @func_2786(%175, %176) /* ty=(Tensor[(3, 10, ?), bool], Tensor[(3, 10, 1), float32]) */;
  %178 = cast(meta[relay.Constant][8] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %179 = reshape(%178, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %180 = @func_2438(%179) /* ty=(Tensor[(11, 1, 9), float64],) */;
  %181 = %180.0;
  %182 = cast(meta[relay.Constant][8] /* ty=Tensor[(99), float64] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%181, dtype="float32") /* ty=Tensor[(11, 1, 9), float32] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %186 = @func_5302() /* ty=(Tensor[(16, 3, 13), float64],) */;
  %187 = @func_5959() /* ty=Tensor[(16, 3, 13), float32] */;
  %188 = @func_4814() /* ty=Tensor[(16, 3, 13), float32] */;
  %189 = %177.0;
  %190 = @func_3664() /* ty=Tensor[(16, 3, 13), float32] */;
  %191 = floor_mod(%184, %185) /* ty=Tensor[(11, ?, 9), float32] */;
  %192 = %186.0;
  %193 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  (%187, %188, %189, %var_6267, %190, %191, %192, %193)
}

def @func_5918() -> (Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) {
  %202 = fn () -> (Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) {
    %194 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
    %195 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 3, 13), float32] */, dtype="uint16") /* ty=Tensor[(16, 3, 13), uint16] */;
    %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(3), int32] */;
    %197 = cast(%194, dtype="uint16") /* ty=Tensor[(16, 3, 13), uint16] */;
    %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %199 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %200 = bitwise_xor(%197, %198) /* ty=Tensor[(16, 3, 13), uint16] */;
    %201 = %199.0;
    (%200, %201)
  };
  %202() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */
}

def @func_3948() -> (Tensor[(16, 3, 13), float32],) {
  @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_8489() -> (Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) {
  @func_8487() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */
}

def @func_1587(%var_1583: Tensor[(8, 8, 7), int16], %var_1584: Tensor[(8, 8, 7), int16], %var_1585: Tensor[(420), float32], %var_1586: Tensor[(72), float32]) -> (Tensor[(8, 8, 7), int64], Tensor[(8, 8, 7), float64], Tensor[(8, 8, 7), bool], Tensor[(572), float32], Tensor[(420), float32], Tensor[(72), float32], Tensor[(572), float32]) {
  @func_1581(%var_1583, %var_1584, %var_1585, %var_1586) /* ty=(Tensor[(8, 8, 7), int64], Tensor[(8, 8, 7), float64], Tensor[(8, 8, 7), bool], Tensor[(572), float32], Tensor[(420), float32], Tensor[(72), float32], Tensor[(572), float32]) */
}

def @func_6374(%var_6372: Tensor[(30), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(30), float32]) {
  @func_6371(%var_6372) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(30), float32]) */
}

def @func_9743() -> Tensor[(16, 3, 13), float32] {
  @func_9741() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_11268() -> (Tensor[(16, 3, 13), float32], Tensor[(24, 10), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32], Tensor[(525), float32]) {
  %220 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(24, 10), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32], Tensor[(525), float32]) {
    %203 = @func_8804() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %204 = @func_8436() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(1, 572), float32], Tensor[(7, 4), float64], float32, Tensor[(2016), float32], Tensor[(16, 3, 13), uint16], Tensor[(24, 10), int32]) */;
    %205 = %204.6;
    %206 = cast(meta[relay.Constant][10] /* ty=Tensor[(24, 10), int32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
    %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(2), int32] */;
    %208 = cast(%205, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
    %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %210 = @func_9713() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %211 = @func_5917() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
    %212 = cast(meta[relay.Constant][11] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
    %213 = reshape(%212, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
    %214 = @func_9701(%213) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(5, 105), float32], Tensor[(16, 3, 13), float32]) */;
    %215 = %203.0;
    %216 = divide(%208, %209) /* ty=Tensor[(24, 10), float32] */;
    %217 = %210.0;
    %218 = %211.0;
    %219 = %214.0;
    (%215, %216, %217, %218, %219, meta[relay.Constant][11] /* ty=Tensor[(525), float32] */)
  };
  %220() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(24, 10), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32], Tensor[(525), float32]) */
}

def @func_4167() -> (Tensor[(16, 3, 13), float32],) {
  %225 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %221 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %222 = %221.0;
    %223 = cast(%222, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
    %224 = sin(%223) /* ty=Tensor[(16, 3, 13), float32] */;
    (%224,)
  };
  %225() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_4791(%var_4786: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) {
  %226 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %227 = cast(%var_4786, dtype="float64") /* ty=Tensor[(273), float64] */;
  %228 = reshape(%227, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), float64] */;
  %229 = @func_2335(%228) /* ty=(Tensor[(13, 7, 3), float64],) */;
  %230 = %226.0;
  %231 = %229.0;
  (%230, %231, %var_4786)
}

def @func_4814() -> Tensor[(16, 3, 13), float32] {
  %232 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %232.0
}

def @func_3999() -> Tensor[(16, 3, 13), float32] {
  %233 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %233.0
}

def @func_5008(%var_4995: Tensor[(8, 8, 3), bool], %var_4996: Tensor[(8, 8, 3), bool]) -> (Tensor[(8, 8, 3), bool], Tensor[(8, 8, 3), float32]) {
  %234 = cast(%var_4996, dtype="bool") /* ty=Tensor[(8, 8, 3), bool] */;
  %235 = shape_of(%var_4995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%var_4995, dtype="bool") /* ty=Tensor[(8, 8, 3), bool] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %238 = cast(%var_4996, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
  %239 = logical_or(%236, %237) /* ty=Tensor[(8, 8, 3), bool] */;
  %240 = sqrt(%238) /* ty=Tensor[(8, 8, 3), float32] */;
  (%239, %240)
}

def @func_11315() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %244 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
    %241 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %242 = %241.0;
    %243 = @func_4442() /* ty=Tensor[(16, 3, 13), float32] */;
    (%242, %243)
  };
  %244() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_8862() -> Tensor[(16, 3, 13), float32] {
  %246 = fn () -> Tensor[(16, 3, 13), float32] {
    %245 = @func_5764() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
    %245.1
  };
  %246() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_10281() -> Tensor[(16, 3, 13), float32] {
  %248 = fn () -> Tensor[(16, 3, 13), float32] {
    %247 = @func_8108() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %247.0
  };
  %248() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_9618() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(240), int32]) {
  @func_9616() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(240), int32]) */
}

def @func_10552(%var_10550: Tensor[(3, 16, 15), int32]) -> Tensor[(3, 16, 15), int32] {
  @func_10549(%var_10550) /* ty=Tensor[(3, 16, 15), int32] */
}

def @func_10409() -> (Tensor[(16, 3, 13), float32],) {
  @func_10407() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_5138() -> (Tensor[(16, 3, 13), float32],) {
  %250 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %249 = @func_4814() /* ty=Tensor[(16, 3, 13), float32] */;
    (%249,)
  };
  %250() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_3874() -> Tensor[(16, 3, 13), float32] {
  %251 = fn () -> Tensor[(16, 3, 13), float32] {
    @func_3664() /* ty=Tensor[(16, 3, 13), float32] */
  };
  %251() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_5267() -> (Tensor[(16, 3, 13), float32],) {
  @func_5265() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_6319(%var_6317: Tensor[(30), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(3, 10, ?), bool], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), float32], Tensor[(16, 3, 13), float64], Tensor[(16, 3, 13), float32]) {
  @func_6316(%var_6317) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(3, 10, ?), bool], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), float32], Tensor[(16, 3, 13), float64], Tensor[(16, 3, 13), float32]) */
}

def @func_11145() -> Tensor[(16, 3, 13), float32] {
  @func_11143() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_9415() -> Tensor[(16, 3, 13), float32] {
  @func_9413() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_10754(%var_10741: Tensor[(16, 8, 6), float32]) -> (Tensor[(16, 8, 6), float64],) {
  %252 = cast(%var_10741, dtype="float32") /* ty=Tensor[(16, 8, 6), float32] */;
  %253 = sqrt(%252) /* ty=Tensor[(16, 8, 6), float32] */;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(16, 8, 6), float64] */;
  %255 = tan(%254) /* ty=Tensor[(16, 8, 6), float64] */;
  (%255,)
}

def @func_9349() -> Tensor[(16, 3, 13), float32] {
  %256 = fn () -> Tensor[(16, 3, 13), float32] {
    @func_5332() /* ty=Tensor[(16, 3, 13), float32] */
  };
  %256() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_7550(%var_7548: Tensor[(2, 9, 12), float64], %var_7549: Tensor[(16, 5, 9), float64]) -> (Tensor[(2, 9, 12), float64], Tensor[(16, 3, 13), float32], Tensor[(16, 5, 9), uint16]) {
  %265 = fn (%var_7488: Tensor[(2, 9, 12), float64], %var_7532: Tensor[(16, 5, 9), float64]) -> (Tensor[(2, 9, 12), float64], Tensor[(16, 3, 13), float32], Tensor[(16, 5, 9), uint16]) {
    %257 = cast(7.18926f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %258 = cast(%var_7488, dtype="float64") /* ty=Tensor[(2, 9, 12), float64] */;
    %259 = @func_6122() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %260 = cast(7.18926f64 /* ty=float64 */, dtype="uint16") /* ty=uint16 */;
    %261 = cast(%var_7532, dtype="uint16") /* ty=Tensor[(16, 5, 9), uint16] */;
    %262 = divide(%257, %258) /* ty=Tensor[(2, 9, 12), float64] */;
    %263 = %259.0;
    %264 = right_shift(%260, %261) /* ty=Tensor[(16, 5, 9), uint16] */;
    (%262, %263, %264)
  };
  %265(%var_7548, %var_7549) /* ty=(Tensor[(2, 9, 12), float64], Tensor[(16, 3, 13), float32], Tensor[(16, 5, 9), uint16]) */
}

def @func_4630() -> Tensor[(16, 3, 13), float32] {
  @func_4628() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_9449() -> Tensor[(16, 3, 13), float32] {
  %266 = @func_7801() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %266.1
}

def @func_7803() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_7801() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_9867() -> (Tensor[(16, 3, 13), float64], Tensor[(2016), float32], Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float32], Tensor[(8, 2, 4), float64], Tensor[(64), int32]) {
  %267 = @func_5302() /* ty=(Tensor[(16, 3, 13), float64],) */;
  %268 = @func_7428() /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2016), float32], Tensor[(16, 9, 14), float32]) */;
  %269 = cast(meta[relay.Constant][12] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %270 = reshape(%269, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
  %271 = @func_263(%270) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
  %272 = cast(meta[relay.Constant][13] /* ty=Tensor[(64), int32] */, dtype="int32") /* ty=Tensor[(64), int32] */;
  %273 = reshape(%272, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), int32] */;
  %274 = @func_5537(%273) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(8, 2, 4), float64]) */;
  %275 = %267.0;
  %276 = %268.1;
  %277 = @func_7986() /* ty=Tensor[(16, 3, 13), float32] */;
  %278 = %271.1;
  %279 = %274.1;
  (%275, %276, %277, %278, meta[relay.Constant][12] /* ty=Tensor[(572), float32] */, %279, meta[relay.Constant][13] /* ty=Tensor[(64), int32] */)
}

def @func_6780() -> (Tensor[(16, 3, 13), float32],) {
  %280 = @func_6560() /* ty=Tensor[(16, 3, 13), float32] */;
  (%280,)
}

def @func_8634() -> (Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) {
  %285 = fn () -> (Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) {
    %281 = @func_5917() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
    %282 = @func_4897() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %283 = %281.0;
    %284 = %282.0;
    (%283, %284)
  };
  %285() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */
}

def @func_9529() -> (Tensor[(16, 3, 13), float32],) {
  %286 = @func_8144() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %287 = %286.0;
  (%287,)
}

def @func_10441() -> (Tensor[(16, 3, 13), float32],) {
  @func_10439() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_9637() -> Tensor[(16, 3, 13), float32] {
  @func_9635() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_11185() -> (Tensor[(16, 3, 13), float32],) {
  @func_11183() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_6782() -> (Tensor[(16, 3, 13), float32],) {
  @func_6780() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_7075(%var_7074: Tensor[(1008, 2), float32]) -> (Tensor[(16, 3, 13), float64], Tensor[(3, 10, ?), bool], Tensor[(30, 1), float32], Tensor[(16, 3, 13), uint8], Tensor[(1008, 2), float32]) {
  %304 = fn (%var_7064: Tensor[(1008, 2), float32]) -> (Tensor[(16, 3, 13), float64], Tensor[(3, 10, ?), bool], Tensor[(30, 1), float32], Tensor[(16, 3, 13), uint8], Tensor[(1008, 2), float32]) {
    %288 = @func_5189() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %289 = %288.0;
    %290 = cast(%289, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
    %291 = asin(%290) /* ty=Tensor[(16, 3, 13), float32] */;
    %292 = cast(%291, dtype="float64") /* ty=Tensor[(16, 3, 13), float64] */;
    %293 = cast(meta[relay.Constant][14] /* ty=Tensor[(30, 1), float32] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
    %294 = cast(meta[relay.Constant][14] /* ty=Tensor[(30, 1), float32] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
    %295 = reshape(%293, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
    %296 = reshape(%294, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
    %297 = @func_2786(%295, %296) /* ty=(Tensor[(3, 10, ?), bool], Tensor[(3, 10, 1), float32]) */;
    %298 = cast(%var_7064, dtype="float32") /* ty=Tensor[(1008, 2), float32] */;
    %299 = reshape(%298, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
    %300 = @func_3460(%299) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2016), float32], Tensor[(16, 3, 13), uint8], Tensor[(208), uint8], Tensor[(273), float64]) */;
    %301 = erf(%292) /* ty=Tensor[(16, 3, 13), float64] */;
    %302 = %297.0;
    %303 = %300.2;
    (%301, %302, meta[relay.Constant][14] /* ty=Tensor[(30, 1), float32] */, %303, %var_7064)
  };
  %304(%var_7074) /* ty=(Tensor[(16, 3, 13), float64], Tensor[(3, 10, ?), bool], Tensor[(30, 1), float32], Tensor[(16, 3, 13), uint8], Tensor[(1008, 2), float32]) */
}

def @func_9451() -> Tensor[(16, 3, 13), float32] {
  @func_9449() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_9635() -> Tensor[(16, 3, 13), float32] {
  %305 = @func_8144() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %305.0
}

def @func_9904() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %308 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
    %306 = @func_9413() /* ty=Tensor[(16, 3, 13), float32] */;
    %307 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
    (%306, %307)
  };
  %308() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_10881() -> Tensor[(16, 3, 13), float32] {
  @func_10879() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_9869() -> (Tensor[(16, 3, 13), float64], Tensor[(2016), float32], Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float32], Tensor[(8, 2, 4), float64], Tensor[(64), int32]) {
  @func_9867() /* ty=(Tensor[(16, 3, 13), float64], Tensor[(2016), float32], Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float32], Tensor[(8, 2, 4), float64], Tensor[(64), int32]) */
}

def @func_7566(%var_7565: Tensor[(2, 14, 11), float64]) -> (Tensor[(2, 14, 11), uint16],) {
  %314 = fn (%var_7559: Tensor[(2, 14, 11), float64]) -> (Tensor[(2, 14, 11), uint16],) {
    %309 = @func_7428() /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2016), float32], Tensor[(16, 9, 14), float32]) */;
    %310 = %309.0;
    %311 = cast(%310, dtype="uint16") /* ty=Tensor[(2, 14, ?), uint16] */;
    %312 = cast(%var_7559, dtype="uint16") /* ty=Tensor[(2, 14, 11), uint16] */;
    %313 = add(%311, %312) /* ty=Tensor[(2, 14, 11), uint16] */;
    (%313,)
  };
  %314(%var_7565) /* ty=(Tensor[(2, 14, 11), uint16],) */
}

def @func_9159(%var_9157: Tensor[(9, 4, 15), float32], %var_9158: Tensor[(9, 4, 15), float32]) -> (Tensor[(9, 4, 15), float32],) {
  %320 = fn (%var_9151: Tensor[(9, 4, 15), float32], %var_9152: Tensor[(9, 4, 15), float32]) -> (Tensor[(9, 4, 15), float32],) {
    %315 = cast(%var_9152, dtype="float32") /* ty=Tensor[(9, 4, 15), float32] */;
    %316 = shape_of(%var_9151, dtype="int32") /* ty=Tensor[(3), int32] */;
    %317 = cast(%var_9151, dtype="float32") /* ty=Tensor[(9, 4, 15), float32] */;
    %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %319 = floor_mod(%317, %318) /* ty=Tensor[(9, 4, 15), float32] */;
    (%319,)
  };
  %320(%var_9157, %var_9158) /* ty=(Tensor[(9, 4, 15), float32],) */
}

def @func_3621(%var_3618: Tensor[(28), float64], %var_3619: float32, %var_3620: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(2, 14, 1), float64], Tensor[(28), float64], Tensor[(10, 12, 14), float32], float32, Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(9, 8, ?), bool], Tensor[(3, 24), float32], Tensor[(1, 572), float32]) {
  %339 = fn (%var_3585: Tensor[(28), float64], %var_3601: float32, %var_3605: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(2, 14, 1), float64], Tensor[(28), float64], Tensor[(10, 12, 14), float32], float32, Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(9, 8, ?), bool], Tensor[(3, 24), float32], Tensor[(1, 572), float32]) {
    %321 = cast(%var_3585, dtype="float64") /* ty=Tensor[(28), float64] */;
    %322 = reshape(%321, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float64] */;
    %323 = @func_3503(%322) /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2, 14, 1), float64]) */;
    %324 = cast(%var_3601, dtype="float32") /* ty=float32 */;
    %325 = reshape(%324, newshape=[]) /* ty=float32 */;
    %326 = cast(%var_3605, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %327 = reshape(%326, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
    %328 = @func_3460(%327) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2016), float32], Tensor[(16, 3, 13), uint8], Tensor[(208), uint8], Tensor[(273), float64]) */;
    %329 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
    %330 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 572), float32] */, dtype="float32") /* ty=Tensor[(1, 572), float32] */;
    %331 = reshape(%329, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float32] */;
    %332 = reshape(%330, newshape=[572]) /* ty=Tensor[(572), float32] */;
    %333 = @func_653(%331, %332) /* ty=(Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) */;
    %334 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
    %335 = %323.1;
    %336 = @func_16(%325) /* ty=Tensor[(10, 12, 14), float32] */;
    %337 = %328.1;
    %338 = %333.0;
    (%334, %335, %var_3585, %336, %var_3601, %337, %var_3605, %338, meta[relay.Constant][15] /* ty=Tensor[(3, 24), float32] */, meta[relay.Constant][16] /* ty=Tensor[(1, 572), float32] */)
  };
  %339(%var_3618, %var_3619, %var_3620) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, 1), float64], Tensor[(28), float64], Tensor[(10, 12, 14), float32], float32, Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(9, 8, ?), bool], Tensor[(3, 24), float32], Tensor[(1, 572), float32]) */
}

def @func_4979(%var_4908: Tensor[(2, 14, 1), float64], %var_4921: Tensor[(624), float32]) -> (Tensor[(2, 14, ?), bool], Tensor[(2, 14, ?), bool], Tensor[(16, 3, 13), float64], Tensor[(2016), float32], Tensor[(208), uint8], Tensor[(273), float64], Tensor[(624), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 9, 14), float32], Tensor[(273), float64], Tensor[(16, 3, 13), float32]) {
  %340 = @func_4202() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) */;
  %341 = %340.1;
  %342 = cast(%var_4908, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(%341, dtype="bool") /* ty=Tensor[(2, 14, ?), bool] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %346 = cast(%var_4908, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %347 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%341, dtype="bool") /* ty=Tensor[(2, 14, ?), bool] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %350 = cast(%var_4921, dtype="float32") /* ty=Tensor[(624), float32] */;
  %351 = reshape(%350, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), float32] */;
  %352 = @func_4132(%351) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) */;
  %353 = %352.0;
  %354 = cast(%353, dtype="float64") /* ty=Tensor[(16, 3, 13), float64] */;
  %355 = cast(%var_4921, dtype="float32") /* ty=Tensor[(624), float32] */;
  %356 = acosh(%355) /* ty=Tensor[(624), float32] */;
  %357 = cast(%356, dtype="float32") /* ty=Tensor[(624), float32] */;
  %358 = cast(meta[relay.Constant][17] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %359 = cast(meta[relay.Constant][18] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %360 = cast(meta[relay.Constant][19] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %361 = reshape(%358, newshape=[504, 4]) /* ty=Tensor[(504, 4), float32] */;
  %362 = reshape(%359, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %363 = reshape(%360, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %364 = @func_4419(%361, %362, %363) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(504, 4), uint64], Tensor[(273), float64], Tensor[(208), uint8], Tensor[(273), float64], Tensor[(16, 3, 13), float32], Tensor[(504, 4), float32], Tensor[(504, 4), float64], Tensor[(16, 9, 14), float32]) */;
  %365 = %364.2;
  %366 = cast(%365, dtype="float64") /* ty=Tensor[(273), float64] */;
  %367 = reshape(%366, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %368 = @func_4791(%367) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */;
  %369 = cast(meta[relay.Constant][17] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %370 = reshape(%369, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %371 = cast(%365, dtype="float64") /* ty=Tensor[(273), float64] */;
  %372 = @func_4166() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %373 = equal(%344, %345) /* ty=Tensor[(2, 14, ?), bool] */;
  %374 = logical_and(%348, %349) /* ty=Tensor[(2, 14, ?), bool] */;
  %375 = atanh(%354) /* ty=Tensor[(16, 3, 13), float64] */;
  %376 = tan(%357) /* ty=Tensor[(624), float32] */;
  %377 = %368.0;
  %378 = @func_2395(%370) /* ty=Tensor[(16, 9, 14), float32] */;
  %379 = asinh(%371) /* ty=Tensor[(273), float64] */;
  %380 = %372.0;
  (%373, %374, %375, meta[relay.Constant][17] /* ty=Tensor[(2016), float32] */, meta[relay.Constant][18] /* ty=Tensor[(208), uint8] */, meta[relay.Constant][19] /* ty=Tensor[(273), float64] */, %376, %377, %378, %379, %380)
}

def @func_10516(%var_10504: Tensor[(240), int32]) -> (Tensor[(16, 3, 13), float32], Tensor[(8, 2, 15), float64], Tensor[(240), int32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %381 = cast(%var_10504, dtype="int32") /* ty=Tensor[(240), int32] */;
  %382 = cast(%var_10504, dtype="int32") /* ty=Tensor[(240), int32] */;
  %383 = reshape(%381, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), int32] */;
  %384 = reshape(%382, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), int32] */;
  %385 = @func_10394() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %386 = @func_5265() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %387 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
  %388 = @func_5120(%383, %384) /* ty=Tensor[(8, 2, 15), float64] */;
  %389 = %385.0;
  %390 = %386.0;
  (%387, %388, %var_10504, %389, %390)
}

def @func_12082(%var_12081: Tensor[(30), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %403 = fn (%var_12066: Tensor[(30), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
    %391 = @func_10213() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
    %392 = cast(%var_12066, dtype="float32") /* ty=Tensor[(30), float32] */;
    %393 = reshape(%392, newshape=[30]) /* ty=Tensor[(30), float32] */;
    %394 = @func_6316(%393) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(3, 10, ?), bool], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), float32], Tensor[(16, 3, 13), float64], Tensor[(16, 3, 13), float32]) */;
    %395 = @func_8144() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %396 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %397 = %391.1;
    %398 = @func_7986() /* ty=Tensor[(16, 3, 13), float32] */;
    %399 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
    %400 = %394.4;
    %401 = %395.0;
    %402 = %396.0;
    (%397, %398, %399, %400, %var_12066, %401, %402)
  };
  %403(%var_12081) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_10910() -> (Tensor[(16, 3, 13), float32],) {
  @func_10908() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_9982() -> (Tensor[(16, 3, 13), float32],) {
  %405 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %404 = @func_8709() /* ty=Tensor[(16, 3, 13), float32] */;
    (%404,)
  };
  %405() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_5123(%var_5121: Tensor[(8, 2, 15), int32], %var_5122: Tensor[(8, 2, 15), int32]) -> Tensor[(8, 2, 15), float64] {
  %412 = fn (%var_5105: Tensor[(8, 2, 15), int32], %var_5106: Tensor[(8, 2, 15), int32]) -> Tensor[(8, 2, 15), float64] {
    %406 = cast(%var_5106, dtype="int32") /* ty=Tensor[(8, 2, 15), int32] */;
    %407 = shape_of(%var_5105, dtype="int32") /* ty=Tensor[(3), int32] */;
    %408 = cast(%var_5105, dtype="int32") /* ty=Tensor[(8, 2, 15), int32] */;
    %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %410 = add(%408, %409) /* ty=Tensor[(8, 2, 15), int32] */;
    %411 = cast(%410, dtype="float64") /* ty=Tensor[(8, 2, 15), float64] */;
    log(%411) /* ty=Tensor[(8, 2, 15), float64] */
  };
  %412(%var_5121, %var_5122) /* ty=Tensor[(8, 2, 15), float64] */
}

def @func_7132(%var_7130: Tensor[(50), uint8]) -> (Tensor[(16, 3, 13), float32], Tensor[(50), uint8], Tensor[(5, 50), bool]) {
  @func_7129(%var_7130) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(50), uint8], Tensor[(5, 50), bool]) */
}

def @func_8384(%var_8381: Tensor[(1008, 2), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(5, 105), float64], Tensor[(525), float32], Tensor[(273), float64], Tensor[(1008, 2), float32]) {
  %413 = cast(meta[relay.Constant][20] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
  %414 = reshape(%413, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %415 = @func_6703(%414) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(5, 105), float64], Tensor[(5, 105), float32]) */;
  %416 = cast(%var_8381, dtype="float32") /* ty=Tensor[(1008, 2), float32] */;
  %417 = reshape(%416, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %418 = @func_3460(%417) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2016), float32], Tensor[(16, 3, 13), uint8], Tensor[(208), uint8], Tensor[(273), float64]) */;
  %419 = @func_5171() /* ty=Tensor[(16, 3, 13), float32] */;
  %420 = %415.1;
  %421 = %418.4;
  (%419, %420, meta[relay.Constant][20] /* ty=Tensor[(525), float32] */, %421, %var_8381)
}

def @func_10078() -> (Tensor[(16, 3, 13), float32],) {
  %423 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %422 = @func_8188() /* ty=Tensor[(16, 3, 13), float32] */;
    (%422,)
  };
  %423() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_9497() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %424 = @func_9236() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %425 = %424.0;
  %426 = @func_9005() /* ty=Tensor[(16, 3, 13), float32] */;
  (%425, %426)
}

def @func_5540(%var_5538: Tensor[(8, 2, 4), int32]) -> (Tensor[(16, 3, 13), float32], Tensor[(8, 2, 4), float64]) {
  @func_5537(%var_5538) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(8, 2, 4), float64]) */
}

def @func_10215() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_10213() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_8387(%var_8385: Tensor[(1008, 2), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(5, 105), float64], Tensor[(525), float32], Tensor[(273), float64], Tensor[(1008, 2), float32]) {
  @func_8384(%var_8385) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(5, 105), float64], Tensor[(525), float32], Tensor[(273), float64], Tensor[(1008, 2), float32]) */
}

def @func_2335(%var_2327: Tensor[(13, 7, 3), float64]) -> (Tensor[(13, 7, 3), float64],) {
  %427 = cast(%var_2327, dtype="float64") /* ty=Tensor[(13, 7, 3), float64] */;
  %428 = cos(%427) /* ty=Tensor[(13, 7, 3), float64] */;
  (%428,)
}

def @func_5332() -> Tensor[(16, 3, 13), float32] {
  @func_3873() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_11908() -> (Tensor[(1, 14, 1), float32],) {
  @func_11906() /* ty=(Tensor[(1, 14, 1), float32],) */
}

def @func_11983() -> (Tensor[(16, 3, 13), float32],) {
  @func_11981() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_1581(%var_1535: Tensor[(8, 8, 7), int16], %var_1536: Tensor[(8, 8, 7), int16], %var_1571: Tensor[(420), float32], %var_1572: Tensor[(72), float32]) -> (Tensor[(8, 8, 7), int64], Tensor[(8, 8, 7), float64], Tensor[(8, 8, 7), bool], Tensor[(572), float32], Tensor[(420), float32], Tensor[(72), float32], Tensor[(572), float32]) {
  %429 = cast(%var_1536, dtype="int16") /* ty=Tensor[(8, 8, 7), int16] */;
  %430 = shape_of(%var_1535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%var_1535, dtype="int16") /* ty=Tensor[(8, 8, 7), int16] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %433 = multiply(%431, %432) /* ty=Tensor[(8, 8, 7), int16] */;
  %434 = cast(%var_1535, dtype="float64") /* ty=Tensor[(8, 8, 7), float64] */;
  %435 = shape_of(%var_1536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%var_1536, dtype="float64") /* ty=Tensor[(8, 8, 7), float64] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %438 = floor_mod(%436, %437) /* ty=Tensor[(8, 8, 7), float64] */;
  %439 = cast(%438, dtype="int64") /* ty=Tensor[(8, 8, 7), int64] */;
  %440 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%433, dtype="int64") /* ty=Tensor[(8, 8, 7), int64] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %443 = cast(%var_1536, dtype="float64") /* ty=Tensor[(8, 8, 7), float64] */;
  %444 = cast(%438, dtype="float32") /* ty=Tensor[(8, 8, 7), float32] */;
  %445 = atan(%444) /* ty=Tensor[(8, 8, 7), float32] */;
  %446 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 8, 7), float32] */, dtype="bool") /* ty=Tensor[(8, 8, 7), bool] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="bool") /* ty=Tensor[(8, 8, 7), bool] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %450 = cast(%var_1571, dtype="float32") /* ty=Tensor[(420), float32] */;
  %451 = cast(%var_1572, dtype="float32") /* ty=Tensor[(72), float32] */;
  %452 = cast(meta[relay.Constant][22] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %453 = reshape(%450, newshape=[10, 6, 7]) /* ty=Tensor[(10, 6, 7), float32] */;
  %454 = reshape(%451, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %455 = reshape(%452, newshape=[143, 4]) /* ty=Tensor[(143, 4), float32] */;
  %456 = @func_1288(%453, %454, %455) /* ty=(Tensor[(10, 6, 7), float32], Tensor[(572), float32], Tensor[(72), float32], Tensor[(143, 4), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 8, ?), bool]) */;
  %457 = logical_xor(%441, %442) /* ty=Tensor[(8, 8, 7), int64] */;
  %458 = cos(%443) /* ty=Tensor[(8, 8, 7), float64] */;
  %459 = less_equal(%448, %449) /* ty=Tensor[(8, 8, 7), bool] */;
  %460 = %456.1;
  (%457, %458, %459, %460, %var_1571, %var_1572, meta[relay.Constant][22] /* ty=Tensor[(572), float32] */)
}

def @func_9052() -> Tensor[(16, 3, 13), float32] {
  %462 = fn () -> Tensor[(16, 3, 13), float32] {
    %461 = @func_7007() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %461.0
  };
  %462() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_4204() -> (Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) {
  @func_4202() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) */
}

def @func_11183() -> (Tensor[(16, 3, 13), float32],) {
  %463 = @func_8633() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
  %464 = %463.1;
  (%464,)
}

def @func_4134(%var_4133: Tensor[(16, 3, 13), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) {
  %476 = fn (%var_4102: Tensor[(16, 3, 13), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) {
    %465 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
    %466 = cast(%var_4102, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
    %467 = shape_of(%465, dtype="int32") /* ty=Tensor[(3), int32] */;
    %468 = cast(%465, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
    %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %470 = cast(%465, dtype="int64") /* ty=Tensor[(16, 3, 13), int64] */;
    %471 = shape_of(%var_4102, dtype="int32") /* ty=Tensor[(3), int32] */;
    %472 = cast(%var_4102, dtype="int64") /* ty=Tensor[(16, 3, 13), int64] */;
    %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %474 = mod(%468, %469) /* ty=Tensor[(16, 3, 13), float32] */;
    %475 = logical_xor(%472, %473) /* ty=Tensor[(16, 3, 13), int64] */;
    (%474, %475)
  };
  %476(%var_4133) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) */
}

def @func_3707() -> (Tensor[(16, 3, 13), float32],) {
  %477 = @func_3664() /* ty=Tensor[(16, 3, 13), float32] */;
  (%477,)
}

def @func_10879() -> Tensor[(16, 3, 13), float32] {
  %478 = @func_10077() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %478.0
}

def @func_10581() -> Tensor[(16, 3, 13), float32] {
  @func_10579() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_8527() -> (Tensor[(16, 3, 13), float32], Tensor[(3, 10, 1), float32], Tensor[(30), float32], Tensor[(16, 3, 13), float32]) {
  @func_8525() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(3, 10, 1), float32], Tensor[(30), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_9741() -> Tensor[(16, 3, 13), float32] {
  %479 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %479.0
}

def @func_10241() -> (Tensor[(16, 3, 13), float64],) {
  %482 = fn () -> (Tensor[(16, 3, 13), float64],) {
    %480 = @func_5302() /* ty=(Tensor[(16, 3, 13), float64],) */;
    %481 = %480.0;
    (%481,)
  };
  %482() /* ty=(Tensor[(16, 3, 13), float64],) */
}

def @func_10863() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %483 = @func_10061() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint16]) */;
  %484 = @func_10077() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %485 = %483.2;
  %486 = %484.0;
  (%485, %486)
}

def @func_9668() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %491 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
    %487 = @func_9123() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
    %488 = @func_6624() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
    %489 = %487.3;
    %490 = %488.1;
    (%489, %490)
  };
  %491() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_4816() -> Tensor[(16, 3, 13), float32] {
  @func_4814() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_2485(%var_2482: Tensor[(16, 1, 13), uint8], %var_2483: Tensor[(16, 3, 13), uint8], %var_2484: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), uint8], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) {
  @func_2480(%var_2482, %var_2483, %var_2484) /* ty=(Tensor[(16, 3, 13), uint8], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */
}

def @func_4419(%var_4337: Tensor[(504, 4), float32], %var_4356: Tensor[(208), uint8], %var_4357: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(504, 4), uint64], Tensor[(273), float64], Tensor[(208), uint8], Tensor[(273), float64], Tensor[(16, 3, 13), float32], Tensor[(504, 4), float32], Tensor[(504, 4), float64], Tensor[(16, 9, 14), float32]) {
  %492 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %493 = cast(%var_4337, dtype="float32") /* ty=Tensor[(504, 4), float32] */;
  %494 = reshape(%493, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %495 = @func_2395(%494) /* ty=Tensor[(16, 9, 14), float32] */;
  %496 = cast(%495, dtype="uint64") /* ty=Tensor[(16, 9, 14), uint64] */;
  %497 = shape_of(%var_4337, dtype="int32") /* ty=Tensor[(2), int32] */;
  %498 = cast(%var_4337, dtype="uint64") /* ty=Tensor[(504, 4), uint64] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %500 = cast(%var_4356, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %501 = %492.0;
  %502 = cast(%501, dtype="uint8") /* ty=Tensor[(16, 3, 13), uint8] */;
  %503 = cast(%var_4357, dtype="float64") /* ty=Tensor[(273), float64] */;
  %504 = reshape(%500, newshape=[16, 1, 13]) /* ty=Tensor[(16, 1, 13), uint8] */;
  %505 = reshape(%502, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), uint8] */;
  %506 = reshape(%503, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %507 = @func_2480(%504, %505, %506) /* ty=(Tensor[(16, 3, 13), uint8], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */;
  %508 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %509 = cast(%var_4337, dtype="float64") /* ty=Tensor[(504, 4), float64] */;
  %510 = sqrt(%509) /* ty=Tensor[(504, 4), float64] */;
  %511 = cast(%510, dtype="float32") /* ty=Tensor[(504, 4), float32] */;
  %512 = cast(%510, dtype="float32") /* ty=Tensor[(504, 4), float32] */;
  %513 = log(%512) /* ty=Tensor[(504, 4), float32] */;
  %514 = cast(%513, dtype="float64") /* ty=Tensor[(504, 4), float64] */;
  %515 = cast(%510, dtype="float32") /* ty=Tensor[(504, 4), float32] */;
  %516 = reshape(%515, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %517 = right_shift(%498, %499) /* ty=Tensor[(504, 4), uint64] */;
  %518 = %507.2;
  %519 = %508.0;
  %520 = asinh(%511) /* ty=Tensor[(504, 4), float32] */;
  %521 = atanh(%514) /* ty=Tensor[(504, 4), float64] */;
  %522 = @func_2395(%516) /* ty=Tensor[(16, 9, 14), float32] */;
  (%501, %517, %518, %var_4356, %var_4357, %519, %520, %521, %522)
}

def @func_11143() -> Tensor[(16, 3, 13), float32] {
  @func_9635() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_3463(%var_3461: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(2016), float32], Tensor[(16, 3, 13), uint8], Tensor[(208), uint8], Tensor[(273), float64]) {
  @func_3460(%var_3461) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2016), float32], Tensor[(16, 3, 13), uint8], Tensor[(208), uint8], Tensor[(273), float64]) */
}

def @func_4443() -> Tensor[(16, 3, 13), float32] {
  %523 = fn () -> Tensor[(16, 3, 13), float32] {
    @func_3873() /* ty=Tensor[(16, 3, 13), float32] */
  };
  %523() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_8939() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(8, 8, 3), float32], Tensor[(192), bool]) {
  %524 = @func_6122() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %525 = cast(meta[relay.Constant][23] /* ty=Tensor[(192), bool] */, dtype="bool") /* ty=Tensor[(192), bool] */;
  %526 = cast(meta[relay.Constant][23] /* ty=Tensor[(192), bool] */, dtype="bool") /* ty=Tensor[(192), bool] */;
  %527 = reshape(%525, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %528 = reshape(%526, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %529 = @func_5008(%527, %528) /* ty=(Tensor[(8, 8, 3), bool], Tensor[(8, 8, 3), float32]) */;
  %530 = @func_3873() /* ty=Tensor[(16, 3, 13), float32] */;
  %531 = %524.0;
  %532 = %529.1;
  (%530, %531, %532, meta[relay.Constant][23] /* ty=Tensor[(192), bool] */)
}

def @func_9322() -> (Tensor[(16, 3, 13), float32],) {
  %533 = @func_7801() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %534 = %533.0;
  (%534,)
}

def @func_9371() -> (Tensor[(16, 3, 13), float32],) {
  @func_9369() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_2786(%var_2759: Tensor[(3, 10, 1), float32], %var_2774: Tensor[(3, 10, 1), float32]) -> (Tensor[(3, 10, ?), bool], Tensor[(3, 10, 1), float32]) {
  %535 = cast(%var_2774, dtype="bool") /* ty=Tensor[(3, 10, 1), bool] */;
  %536 = shape_of(%var_2759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%var_2759, dtype="bool") /* ty=Tensor[(3, 10, 1), bool] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %539 = cast(%var_2759, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %540 = atan(%539) /* ty=Tensor[(3, 10, 1), float32] */;
  %541 = cast(%540, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %542 = greater_equal(%537, %538) /* ty=Tensor[(3, 10, ?), bool] */;
  %543 = exp(%541) /* ty=Tensor[(3, 10, 1), float32] */;
  (%542, %543)
}

def @func_8189() -> Tensor[(16, 3, 13), float32] {
  %544 = fn () -> Tensor[(16, 3, 13), float32] {
    @func_4814() /* ty=Tensor[(16, 3, 13), float32] */
  };
  %544() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_9714() -> (Tensor[(16, 3, 13), float32],) {
  %547 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %545 = @func_6122() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %546 = %545.0;
    (%546,)
  };
  %547() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_10757(%var_10755: Tensor[(16, 8, 6), float32]) -> (Tensor[(16, 8, 6), float64],) {
  @func_10754(%var_10755) /* ty=(Tensor[(16, 8, 6), float64],) */
}

def @func_7009() -> (Tensor[(16, 3, 13), float32],) {
  @func_7007() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_6625() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %550 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
    %548 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
    %549 = @func_3873() /* ty=Tensor[(16, 3, 13), float32] */;
    (%548, %549)
  };
  %550() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_7381() -> (Tensor[(16, 3, 13), float32],) {
  @func_7379() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_4202() -> (Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) {
  %551 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %552 = cast(meta[relay.Constant][24] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %553 = reshape(%552, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float64] */;
  %554 = @func_3503(%553) /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2, 14, 1), float64]) */;
  %555 = %551.0;
  %556 = %554.0;
  (%555, %556, meta[relay.Constant][24] /* ty=Tensor[(28), float64] */)
}

def @func_10908() -> (Tensor[(16, 3, 13), float32],) {
  %557 = @func_7986() /* ty=Tensor[(16, 3, 13), float32] */;
  (%557,)
}

def @func_11515() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %558 = @func_10112() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %559 = @func_10863() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %560 = @func_8436() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(1, 572), float32], Tensor[(7, 4), float64], float32, Tensor[(2016), float32], Tensor[(16, 3, 13), uint16], Tensor[(24, 10), int32]) */;
  %561 = @func_10112() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %562 = @func_5959() /* ty=Tensor[(16, 3, 13), float32] */;
  %563 = %558.0;
  %564 = %559.0;
  %565 = %560.0;
  %566 = %561.0;
  (%562, %563, %564, %565, %566)
}

def @func_4424(%var_4421: Tensor[(504, 4), float32], %var_4422: Tensor[(208), uint8], %var_4423: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(504, 4), uint64], Tensor[(273), float64], Tensor[(208), uint8], Tensor[(273), float64], Tensor[(16, 3, 13), float32], Tensor[(504, 4), float32], Tensor[(504, 4), float64], Tensor[(16, 9, 14), float32]) {
  @func_4419(%var_4421, %var_4422, %var_4423) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(504, 4), uint64], Tensor[(273), float64], Tensor[(208), uint8], Tensor[(273), float64], Tensor[(16, 3, 13), float32], Tensor[(504, 4), float32], Tensor[(504, 4), float64], Tensor[(16, 9, 14), float32]) */
}

def @func_9704(%var_9702: Tensor[(5, 105), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(5, 105), float32], Tensor[(16, 3, 13), float32]) {
  @func_9701(%var_9702) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(5, 105), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_5265() -> (Tensor[(16, 3, 13), float32],) {
  %567 = @func_3664() /* ty=Tensor[(16, 3, 13), float32] */;
  (%567,)
}

def @func_9236() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %568 = @func_5189() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %569 = @func_6194() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(3, 4), float32], Tensor[(12), float32], Tensor[(16, 3, 13), float32]) */;
  %570 = %568.0;
  %571 = @func_7643() /* ty=Tensor[(16, 3, 13), float32] */;
  %572 = %569.0;
  %573 = @func_5171() /* ty=Tensor[(16, 3, 13), float32] */;
  (%570, %571, %572, %573)
}

def @func_11431() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_11429() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_3483() -> (Tensor[(16, 3, 13), float32],) {
  %575 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %574 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
    (%574,)
  };
  %575() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_3773(%var_3772: Tensor[(28), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float64], Tensor[(13, 7, 3), float64], Tensor[(273), float64], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) {
  %592 = fn (%var_3753: Tensor[(28), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float64], Tensor[(13, 7, 3), float64], Tensor[(273), float64], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) {
    %576 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %577 = cast(meta[relay.Constant][25] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
    %578 = reshape(%577, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
    %579 = @func_263(%578) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
    %580 = cast(meta[relay.Constant][25] /* ty=Tensor[(572), float32] */, dtype="float64") /* ty=Tensor[(572), float64] */;
    %581 = cast(meta[relay.Constant][26] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
    %582 = reshape(%581, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), float64] */;
    %583 = @func_2335(%582) /* ty=(Tensor[(13, 7, 3), float64],) */;
    %584 = cast(%var_3753, dtype="float64") /* ty=Tensor[(28), float64] */;
    %585 = reshape(%584, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float64] */;
    %586 = @func_3503(%585) /* ty=(Tensor[(2, 14, ?), float64], Tensor[(2, 14, 1), float64]) */;
    %587 = %576.0;
    %588 = %579.2;
    %589 = log10(%580) /* ty=Tensor[(572), float64] */;
    %590 = %583.0;
    %591 = %586.0;
    (%587, %588, %589, %590, meta[relay.Constant][26] /* ty=Tensor[(273), float64] */, %591, %var_3753)
  };
  %592(%var_3772) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float64], Tensor[(13, 7, 3), float64], Tensor[(273), float64], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) */
}

def @func_4001() -> Tensor[(16, 3, 13), float32] {
  @func_3999() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_4983(%var_4981: Tensor[(2, 14, 1), float64], %var_4982: Tensor[(624), float32]) -> (Tensor[(2, 14, ?), bool], Tensor[(2, 14, ?), bool], Tensor[(16, 3, 13), float64], Tensor[(2016), float32], Tensor[(208), uint8], Tensor[(273), float64], Tensor[(624), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 9, 14), float32], Tensor[(273), float64], Tensor[(16, 3, 13), float32]) {
  @func_4979(%var_4981, %var_4982) /* ty=(Tensor[(2, 14, ?), bool], Tensor[(2, 14, ?), bool], Tensor[(16, 3, 13), float64], Tensor[(2016), float32], Tensor[(208), uint8], Tensor[(273), float64], Tensor[(624), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 9, 14), float32], Tensor[(273), float64], Tensor[(16, 3, 13), float32]) */
}

def @func_9005() -> Tensor[(16, 3, 13), float32] {
  %593 = @func_4863() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %593.0
}

def @func_6195() -> (Tensor[(16, 3, 13), float32], Tensor[(3, 4), float32], Tensor[(12), float32], Tensor[(16, 3, 13), float32]) {
  %600 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(3, 4), float32], Tensor[(12), float32], Tensor[(16, 3, 13), float32]) {
    %594 = cast(meta[relay.Constant][27] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
    %595 = reshape(%594, newshape=[3, 4]) /* ty=Tensor[(3, 4), float32] */;
    %596 = @func_4649(%595) /* ty=(Tensor[(3, 4), float32],) */;
    %597 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
    %598 = %596.0;
    %599 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
    (%597, %598, meta[relay.Constant][27] /* ty=Tensor[(12), float32] */, %599)
  };
  %600() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(3, 4), float32], Tensor[(12), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_8003(%var_8002: Tensor[(9, 8, 3), float32]) -> (Tensor[(9, 8, 3), float32],) {
  %603 = fn (%var_7992: Tensor[(9, 8, 3), float32]) -> (Tensor[(9, 8, 3), float32],) {
    %601 = cast(%var_7992, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
    %602 = rsqrt(%601) /* ty=Tensor[(9, 8, 3), float32] */;
    (%602,)
  };
  %603(%var_8002) /* ty=(Tensor[(9, 8, 3), float32],) */
}

def @func_5387(%var_5386: Tensor[(16, 3, 13), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) {
  %615 = fn (%var_5368: Tensor[(16, 3, 13), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) {
    %604 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %605 = %604.0;
    %606 = cast(%var_5368, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
    %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
    %608 = cast(%605, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
    %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %610 = cast(meta[relay.Constant][28] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
    %611 = reshape(%610, newshape=[13, 7, 3]) /* ty=Tensor[(13, 7, 3), float64] */;
    %612 = @func_2335(%611) /* ty=(Tensor[(13, 7, 3), float64],) */;
    %613 = floor_divide(%608, %609) /* ty=Tensor[(16, 3, 13), float32] */;
    %614 = %612.0;
    (%613, %614, meta[relay.Constant][28] /* ty=Tensor[(273), float64] */)
  };
  %615(%var_5386) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */
}

def @func_8438() -> (Tensor[(16, 3, 13), float32], Tensor[(1, 572), float32], Tensor[(7, 4), float64], float32, Tensor[(2016), float32], Tensor[(16, 3, 13), uint16], Tensor[(24, 10), int32]) {
  @func_8436() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(1, 572), float32], Tensor[(7, 4), float64], float32, Tensor[(2016), float32], Tensor[(16, 3, 13), uint16], Tensor[(24, 10), int32]) */
}

def @func_8662() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %616 = @func_7367() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %617 = @func_4166() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %618 = %616.0;
  %619 = %617.0;
  (%618, %619)
}

def @func_6417(%var_6381: Tensor[(5, 105), float32], %var_6389: Tensor[(5, 105), float32], %var_6413: Tensor[(5, 105), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(5, 15, 7), float32], Tensor[(5, 105), bool], Tensor[(5, 105), float64]) {
  %620 = cast(%var_6381, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %621 = cast(%var_6381, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %622 = reshape(%620, newshape=[5, 15, 7]) /* ty=Tensor[(5, 15, 7), float32] */;
  %623 = reshape(%621, newshape=[5, 15, 7]) /* ty=Tensor[(5, 15, 7), float32] */;
  %624 = cast(%var_6389, dtype="bool") /* ty=Tensor[(5, 105), bool] */;
  %625 = shape_of(%var_6381, dtype="int32") /* ty=Tensor[(2), int32] */;
  %626 = cast(%var_6381, dtype="bool") /* ty=Tensor[(5, 105), bool] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %628 = cast(%var_6389, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %629 = exp(%628) /* ty=Tensor[(5, 105), float32] */;
  %630 = cast(%629, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %631 = sqrt(%630) /* ty=Tensor[(5, 105), float32] */;
  %632 = cast(%var_6413, dtype="float64") /* ty=Tensor[(5, 105), float64] */;
  %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(2), int32] */;
  %634 = cast(%631, dtype="float64") /* ty=Tensor[(5, 105), float64] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %636 = @func_6007() /* ty=Tensor[(16, 3, 13), float32] */;
  %637 = @func_1713(%622, %623) /* ty=Tensor[(5, 15, 7), float32] */;
  %638 = equal(%626, %627) /* ty=Tensor[(5, 105), bool] */;
  %639 = power(%634, %635) /* ty=Tensor[(5, 105), float64] */;
  (%636, %637, %638, %639)
}

def @func_3946() -> (Tensor[(16, 3, 13), float32],) {
  %640 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %641 = %640.0;
  (%641,)
}

def @func_10157(%var_10155: Tensor[(1, 5, 16), float64]) -> (Tensor[(?, 5, 16), uint8],) {
  @func_10154(%var_10155) /* ty=(Tensor[(?, 5, 16), uint8],) */
}

def @func_11906() -> (Tensor[(1, 14, 1), float32],) {
  %642 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 1), float32] */;
  %643 = asin(%642) /* ty=Tensor[(1, 14, 1), float32] */;
  (%643,)
}

def @func_9124() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %651 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
    %644 = @func_7379() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %645 = @func_8108() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %646 = @func_7007() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %647 = %644.0;
    %648 = %645.0;
    %649 = @func_5959() /* ty=Tensor[(16, 3, 13), float32] */;
    %650 = %646.0;
    (%647, %648, %649, %650)
  };
  %651() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_6498(%var_6496: Tensor[(8, 30), int32]) -> (Tensor[(16, 3, 13), uint16], Tensor[(8, 2, 15), float64], Tensor[(8, 30), float64]) {
  @func_6495(%var_6496) /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(8, 2, 15), float64], Tensor[(8, 30), float64]) */
}

def @func_10698(%var_10677: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) {
  %652 = @func_5504() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %653 = cast(%var_10677, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %654 = reshape(%653, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %655 = %652.0;
  %656 = @func_2395(%654) /* ty=Tensor[(16, 9, 14), float32] */;
  (%655, %656, %var_10677)
}

def @func_19(%var_17: float32) -> Tensor[(10, 12, 14), float32] {
  @func_16(%var_17) /* ty=Tensor[(10, 12, 14), float32] */
}

def @func_10364() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(572), bool]) {
  @func_10362() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(572), bool]) */
}

def @func_5302() -> (Tensor[(16, 3, 13), float64],) {
  %657 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  %658 = cast(%657, dtype="float64") /* ty=Tensor[(16, 3, 13), float64] */;
  %659 = acosh(%658) /* ty=Tensor[(16, 3, 13), float64] */;
  (%659,)
}

def @func_10950() -> Tensor[(16, 3, 13), float32] {
  @func_10948() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_10213() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %660 = @func_8939() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(8, 8, 3), float32], Tensor[(192), bool]) */;
  %661 = @func_9667() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %662 = %660.1;
  %663 = %661.1;
  (%662, %663)
}

def @func_6064() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float32], Tensor[(16, 3, 13), float32]) {
  %676 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float32], Tensor[(16, 3, 13), float32]) {
    %664 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %665 = @func_5189() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %666 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %667 = cast(meta[relay.Constant][30] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
    %668 = reshape(%667, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
    %669 = @func_263(%668) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
    %670 = @func_4202() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) */;
    %671 = %664.0;
    %672 = %665.0;
    %673 = %666.0;
    %674 = %669.1;
    %675 = %670.0;
    (%671, %672, %673, %674, meta[relay.Constant][30] /* ty=Tensor[(572), float32] */, %675)
  };
  %676() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_11981() -> (Tensor[(16, 3, 13), float32],) {
  %677 = @func_5137() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %678 = %677.0;
  (%678,)
}

def @func_6747() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_6745() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_10701(%var_10699: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) {
  @func_10698(%var_10699) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) */
}

def @func_11751(%var_11722: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint8], Tensor[(2016), float32], Tensor[(16, 3, 13), float32], Tensor[(72), float32], Tensor[(2, 400), float32], Tensor[(8, 56), int16], Tensor[(420), float32], Tensor[(72), float32]) {
  %679 = @func_11314() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %680 = @func_8804() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %681 = @func_7801() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %682 = cast(%var_11722, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %683 = reshape(%682, newshape=[1008, 2]) /* ty=Tensor[(1008, 2), float32] */;
  %684 = @func_7073(%683) /* ty=(Tensor[(16, 3, 13), float64], Tensor[(3, 10, ?), bool], Tensor[(30, 1), float32], Tensor[(16, 3, 13), uint8], Tensor[(1008, 2), float32]) */;
  %685 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 400), float32] */, dtype="float32") /* ty=Tensor[(2, 400), float32] */;
  %686 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 56), int16] */, dtype="int16") /* ty=Tensor[(8, 56), int16] */;
  %687 = cast(meta[relay.Constant][33] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %688 = cast(meta[relay.Constant][34] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %689 = reshape(%685, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float32] */;
  %690 = reshape(%686, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %691 = reshape(%687, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %692 = reshape(%688, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %693 = @func_1975(%689, %690, %691, %692) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), bool], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), float64], Tensor[(8, 8, 7), int64]) */;
  %694 = %679.1;
  %695 = %680.0;
  %696 = %681.1;
  %697 = %684.3;
  %698 = @func_9413() /* ty=Tensor[(16, 3, 13), float32] */;
  %699 = %693.3;
  (%694, %695, %696, %697, %var_11722, %698, %699, meta[relay.Constant][31] /* ty=Tensor[(2, 400), float32] */, meta[relay.Constant][32] /* ty=Tensor[(8, 56), int16] */, meta[relay.Constant][33] /* ty=Tensor[(420), float32] */, meta[relay.Constant][34] /* ty=Tensor[(72), float32] */)
}

def @func_7986() -> Tensor[(16, 3, 13), float32] {
  %700 = @func_7379() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %700.0
}

def @func_9499() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_9497() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_9437() -> Tensor[(16, 3, 13), float32] {
  %702 = fn () -> Tensor[(16, 3, 13), float32] {
    %701 = @func_6745() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
    %701.1
  };
  %702() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_8108() -> (Tensor[(16, 3, 13), float32],) {
  %703 = @func_6560() /* ty=Tensor[(16, 3, 13), float32] */;
  (%703,)
}

def @func_10948() -> Tensor[(16, 3, 13), float32] {
  %704 = @func_8108() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %704.0
}

def @func_8711() -> Tensor[(16, 3, 13), float32] {
  @func_8709() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_10865() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_10863() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_8941() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(8, 8, 3), float32], Tensor[(192), bool]) {
  @func_8939() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(8, 8, 3), float32], Tensor[(192), bool]) */
}

def @func_2440(%var_2439: Tensor[(11, 1, 9), float64]) -> (Tensor[(11, 1, 9), float64],) {
  %707 = fn (%var_2435: Tensor[(11, 1, 9), float64]) -> (Tensor[(11, 1, 9), float64],) {
    %705 = cast(%var_2435, dtype="float64") /* ty=Tensor[(11, 1, 9), float64] */;
    %706 = log10(%705) /* ty=Tensor[(11, 1, 9), float64] */;
    (%706,)
  };
  %707(%var_2439) /* ty=(Tensor[(11, 1, 9), float64],) */
}

def @func_7904() -> (Tensor[(16, 3, 13), float32],) {
  %710 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %708 = @func_5504() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %709 = %708.0;
    (%709,)
  };
  %710() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_11459(%var_11457: Tensor[(11, 12, 10), int16]) -> (Tensor[(11, 12, 10), int16], Tensor[(16, 3, 13), float32]) {
  @func_11456(%var_11457) /* ty=(Tensor[(11, 12, 10), int16], Tensor[(16, 3, 13), float32]) */
}

def @func_4899() -> (Tensor[(16, 3, 13), float32],) {
  @func_4897() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_7988() -> Tensor[(16, 3, 13), float32] {
  @func_7986() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_5537(%var_5508: Tensor[(8, 2, 4), int32]) -> (Tensor[(16, 3, 13), float32], Tensor[(8, 2, 4), float64]) {
  %711 = cast(meta[relay.Constant][35] /* ty=Tensor[(8, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(8, 2, 4), int32] */;
  %712 = shape_of(%var_5508, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%var_5508, dtype="int32") /* ty=Tensor[(8, 2, 4), int32] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %715 = add(%713, %714) /* ty=Tensor[(8, 2, 4), int32] */;
  %716 = cast(%715, dtype="float64") /* ty=Tensor[(8, 2, 4), float64] */;
  %717 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(8, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(meta[relay.Constant][35] /* ty=Tensor[(8, 2, 4), int32] */, dtype="float64") /* ty=Tensor[(8, 2, 4), float64] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %720 = @func_5171() /* ty=Tensor[(16, 3, 13), float32] */;
  %721 = divide(%718, %719) /* ty=Tensor[(8, 2, 4), float64] */;
  (%720, %721)
}

def @func_10362() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(572), bool]) {
  %722 = @func_5687() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %723 = cast(meta[relay.Constant][36] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %724 = reshape(%723, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
  %725 = @func_263(%724) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
  %726 = %725.2;
  %727 = cast(%726, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
  %728 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(572), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %729 = cast(meta[relay.Constant][36] /* ty=Tensor[(572), float32] */, dtype="bool") /* ty=Tensor[(572), bool] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?), bool] */;
  %731 = @func_9005() /* ty=Tensor[(16, 3, 13), float32] */;
  %732 = %722.0;
  %733 = @func_8054() /* ty=Tensor[(16, 3, 13), float32] */;
  %734 = logical_and(%729, %730) /* ty=Tensor[(572), bool] */;
  (%731, %732, %733, %734)
}

def @func_7336(%var_7334: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(273), float64], Tensor[(16, 3, 13), float32], Tensor[(273), bool]) {
  @func_7333(%var_7334) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(273), float64], Tensor[(16, 3, 13), float32], Tensor[(273), bool]) */
}

def @func_11284() -> Tensor[(16, 3, 13), float32] {
  %736 = fn () -> Tensor[(16, 3, 13), float32] {
    %735 = @func_10213() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
    %735.0
  };
  %736() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_11429() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %737 = @func_9497() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %738 = @func_9648() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %739 = @func_5504() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %740 = @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %741 = %737.1;
  %742 = %738.0;
  %743 = %739.0;
  %744 = @func_9635() /* ty=Tensor[(16, 3, 13), float32] */;
  %745 = @func_7643() /* ty=Tensor[(16, 3, 13), float32] */;
  %746 = %740.0;
  (%741, %742, %743, %744, %745, %746)
}

def @func_5960() -> Tensor[(16, 3, 13), float32] {
  %748 = fn () -> Tensor[(16, 3, 13), float32] {
    %747 = @func_5504() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %747.0
  };
  %748() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_7007() -> (Tensor[(16, 3, 13), float32],) {
  %749 = @func_5265() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %750 = %749.0;
  (%750,)
}

def @main(%var_12099: Tensor[(18, 30), float32], %var_12111: Tensor[(18, 30), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(9, 4, 15), float32], Tensor[(18, 30), uint32]) {
  %751 = cast(%var_12099, dtype="float32") /* ty=Tensor[(18, 30), float32] */;
  %752 = cast(%var_12099, dtype="float32") /* ty=Tensor[(18, 30), float32] */;
  %753 = reshape(%751, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float32] */;
  %754 = reshape(%752, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float32] */;
  %755 = @func_9159(%753, %754) /* ty=(Tensor[(9, 4, 15), float32],) */;
  %756 = cast(%var_12111, dtype="uint32") /* ty=Tensor[(18, 30), uint32] */;
  %757 = shape_of(%var_12099, dtype="int32") /* ty=Tensor[(2), int32] */;
  %758 = cast(%var_12099, dtype="uint32") /* ty=Tensor[(18, 30), uint32] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %760 = @func_9051() /* ty=Tensor[(16, 3, 13), float32] */;
  %761 = %755.0;
  %762 = bitwise_and(%758, %759) /* ty=Tensor[(18, 30), uint32] */;
  (%760, %761, %762)
}

def @func_2790(%var_2788: Tensor[(3, 10, 1), float32], %var_2789: Tensor[(3, 10, 1), float32]) -> (Tensor[(3, 10, ?), bool], Tensor[(3, 10, 1), float32]) {
  @func_2786(%var_2788, %var_2789) /* ty=(Tensor[(3, 10, ?), bool], Tensor[(3, 10, 1), float32]) */
}

def @func_11754(%var_11752: Tensor[(2016), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint8], Tensor[(2016), float32], Tensor[(16, 3, 13), float32], Tensor[(72), float32], Tensor[(2, 400), float32], Tensor[(8, 56), int16], Tensor[(420), float32], Tensor[(72), float32]) {
  @func_11751(%var_11752) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint8], Tensor[(2016), float32], Tensor[(16, 3, 13), float32], Tensor[(72), float32], Tensor[(2, 400), float32], Tensor[(8, 56), int16], Tensor[(420), float32], Tensor[(72), float32]) */
}

def @func_2757(%var_2755: Tensor[(10, 1, 5), uint8], %var_2756: Tensor[(10, 5, 5), uint8]) -> Tensor[(10, 5, 5), uint8] {
  @func_2753(%var_2755, %var_2756) /* ty=Tensor[(10, 5, 5), uint8] */
}

def @func_5842(%var_5840: Tensor[(192), bool], %var_5841: Tensor[(5, 50), uint8]) -> (Tensor[(16, 3, 13), float32], Tensor[(8, 8, 3), float32], Tensor[(192), bool], Tensor[(10, 5, 5), uint8], Tensor[(50), uint8], Tensor[(5, 50), uint8], Tensor[(16, 3, 13), float32]) {
  %777 = fn (%var_5824: Tensor[(192), bool], %var_5831: Tensor[(5, 50), uint8]) -> (Tensor[(16, 3, 13), float32], Tensor[(8, 8, 3), float32], Tensor[(192), bool], Tensor[(10, 5, 5), uint8], Tensor[(50), uint8], Tensor[(5, 50), uint8], Tensor[(16, 3, 13), float32]) {
    %763 = cast(%var_5824, dtype="bool") /* ty=Tensor[(192), bool] */;
    %764 = cast(%var_5824, dtype="bool") /* ty=Tensor[(192), bool] */;
    %765 = reshape(%763, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
    %766 = reshape(%764, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
    %767 = @func_5008(%765, %766) /* ty=(Tensor[(8, 8, 3), bool], Tensor[(8, 8, 3), float32]) */;
    %768 = cast(meta[relay.Constant][37] /* ty=Tensor[(50), uint8] */, dtype="uint8") /* ty=Tensor[(50), uint8] */;
    %769 = cast(%var_5831, dtype="uint8") /* ty=Tensor[(5, 50), uint8] */;
    %770 = reshape(%768, newshape=[10, 1, 5]) /* ty=Tensor[(10, 1, 5), uint8] */;
    %771 = reshape(%769, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint8] */;
    %772 = @func_4166() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %773 = @func_4814() /* ty=Tensor[(16, 3, 13), float32] */;
    %774 = %767.1;
    %775 = @func_2753(%770, %771) /* ty=Tensor[(10, 5, 5), uint8] */;
    %776 = %772.0;
    (%773, %774, %var_5824, %775, meta[relay.Constant][37] /* ty=Tensor[(50), uint8] */, %var_5831, %776)
  };
  %777(%var_5840, %var_5841) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(8, 8, 3), float32], Tensor[(192), bool], Tensor[(10, 5, 5), uint8], Tensor[(50), uint8], Tensor[(5, 50), uint8], Tensor[(16, 3, 13), float32]) */
}

def @func_6422(%var_6419: Tensor[(5, 105), float32], %var_6420: Tensor[(5, 105), float32], %var_6421: Tensor[(5, 105), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(5, 15, 7), float32], Tensor[(5, 105), bool], Tensor[(5, 105), float64]) {
  @func_6417(%var_6419, %var_6420, %var_6421) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(5, 15, 7), float32], Tensor[(5, 105), bool], Tensor[(5, 105), float64]) */
}

def @func_9238() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_9236() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_3709() -> (Tensor[(16, 3, 13), float32],) {
  @func_3707() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_6007() -> Tensor[(16, 3, 13), float32] {
  %778 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %778.1
}

def @func_8265() -> (Tensor[(16, 3, 13), float32],) {
  %780 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %779 = @func_4442() /* ty=Tensor[(16, 3, 13), float32] */;
    (%779,)
  };
  %780() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_8709() -> Tensor[(16, 3, 13), float32] {
  @func_6560() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_9324() -> (Tensor[(16, 3, 13), float32],) {
  @func_9322() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_9413() -> Tensor[(16, 3, 13), float32] {
  %781 = @func_5764() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %781.0
}

def @func_8664() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_8662() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_5190() -> (Tensor[(16, 3, 13), float32],) {
  %784 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %782 = @func_4863() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %783 = %782.0;
    (%783,)
  };
  %784() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_11613() -> Tensor[(16, 3, 13), float32] {
  %786 = fn () -> Tensor[(16, 3, 13), float32] {
    %785 = @func_11515() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
    %785.3
  };
  %786() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_7129(%var_7098: Tensor[(50), uint8]) -> (Tensor[(16, 3, 13), float32], Tensor[(50), uint8], Tensor[(5, 50), bool]) {
  %787 = @func_6063() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(13, 4, 11), float64], Tensor[(572), float32], Tensor[(16, 3, 13), float32]) */;
  %788 = cast(%var_7098, dtype="uint8") /* ty=Tensor[(50), uint8] */;
  %789 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 50), uint8] */, dtype="uint8") /* ty=Tensor[(5, 50), uint8] */;
  %790 = reshape(%788, newshape=[10, 1, 5]) /* ty=Tensor[(10, 1, 5), uint8] */;
  %791 = reshape(%789, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint8] */;
  %792 = @func_2753(%790, %791) /* ty=Tensor[(10, 5, 5), uint8] */;
  %793 = cast(%792, dtype="bool") /* ty=Tensor[(10, 5, 5), bool] */;
  %794 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(5, 50), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %795 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 50), uint8] */, dtype="bool") /* ty=Tensor[(5, 50), bool] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %797 = %787.0;
  %798 = not_equal(%795, %796) /* ty=Tensor[(5, 50), bool] */;
  (%797, %var_7098, %798)
}

def @func_9260() -> (Tensor[(16, 3, 13), float32],) {
  %801 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %799 = @func_7706() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %800 = %799.0;
    (%800,)
  };
  %801() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_9369() -> (Tensor[(16, 3, 13), float32],) {
  %802 = @func_4442() /* ty=Tensor[(16, 3, 13), float32] */;
  (%802,)
}

def @func_4753(%var_4675: Tensor[(99), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), int32], Tensor[(16, 3, 13), float32]) {
  %803 = @func_4166() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %804 = %803.0;
  %805 = cast(%804, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %806 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %807 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %808 = cast(%var_4675, dtype="float64") /* ty=Tensor[(99), float64] */;
  %809 = reshape(%808, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %810 = @func_2438(%809) /* ty=(Tensor[(11, 1, 9), float64],) */;
  %811 = %810.0;
  %812 = cast(%var_4675, dtype="int32") /* ty=Tensor[(99), int32] */;
  %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%811, dtype="int32") /* ty=Tensor[(11, 1, 9), int32] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %816 = rsqrt(%805) /* ty=Tensor[(16, 3, 13), float32] */;
  %817 = %806.0;
  %818 = %807.0;
  %819 = subtract(%814, %815) /* ty=Tensor[(11, ?, 9), int32] */;
  %820 = @func_4628() /* ty=Tensor[(16, 3, 13), float32] */;
  (%816, %817, %818, %819, %820)
}

def @func_1980(%var_1976: Tensor[(5, 10, 16), float32], %var_1977: Tensor[(448), int16], %var_1978: Tensor[(420), float32], %var_1979: Tensor[(72), float32]) -> (Tensor[(8, 8, 7), bool], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), bool], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), float64], Tensor[(8, 8, 7), int64]) {
  %876 = fn (%var_1906: Tensor[(5, 10, 16), float32], %var_1921: Tensor[(448), int16], %var_1922: Tensor[(420), float32], %var_1923: Tensor[(72), float32]) -> (Tensor[(8, 8, 7), bool], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), bool], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), float64], Tensor[(8, 8, 7), int64]) {
    %821 = cast(%var_1921, dtype="int16") /* ty=Tensor[(448), int16] */;
    %822 = cast(%var_1921, dtype="int16") /* ty=Tensor[(448), int16] */;
    %823 = cast(%var_1922, dtype="float32") /* ty=Tensor[(420), float32] */;
    %824 = cast(%var_1923, dtype="float32") /* ty=Tensor[(72), float32] */;
    %825 = reshape(%821, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), int16] */;
    %826 = reshape(%822, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), int16] */;
    %827 = reshape(%823, newshape=[420]) /* ty=Tensor[(420), float32] */;
    %828 = reshape(%824, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %829 = @func_1581(%825, %826, %827, %828) /* ty=(Tensor[(8, 8, 7), int64], Tensor[(8, 8, 7), float64], Tensor[(8, 8, 7), bool], Tensor[(572), float32], Tensor[(420), float32], Tensor[(72), float32], Tensor[(572), float32]) */;
    %830 = cast(%var_1906, dtype="float32") /* ty=Tensor[(5, 10, 16), float32] */;
    %831 = asin(%830) /* ty=Tensor[(5, 10, 16), float32] */;
    %832 = cast(%var_1906, dtype="uint32") /* ty=Tensor[(5, 10, 16), uint32] */;
    %833 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
    %834 = cast(%831, dtype="uint32") /* ty=Tensor[(5, 10, 16), uint32] */;
    %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %836 = minimum(%834, %835) /* ty=Tensor[(5, 10, 16), uint32] */;
    %837 = cast(%831, dtype="bool") /* ty=Tensor[(5, 10, 16), bool] */;
    %838 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
    %839 = cast(%836, dtype="bool") /* ty=Tensor[(5, 10, 16), bool] */;
    %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %841 = cast(%var_1923, dtype="float32") /* ty=Tensor[(72), float32] */;
    %842 = cast(meta[relay.Constant][39] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
    %843 = reshape(%841, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float32] */;
    %844 = reshape(%842, newshape=[572]) /* ty=Tensor[(572), float32] */;
    %845 = @func_653(%843, %844) /* ty=(Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) */;
    %846 = %845.0;
    %847 = cast(meta[relay.Constant][39] /* ty=Tensor[(572), float32] */, dtype="bool") /* ty=Tensor[(572), bool] */;
    %848 = cast(%846, dtype="bool") /* ty=Tensor[(9, 8, ?), bool] */;
    %849 = cast(%var_1906, dtype="bool") /* ty=Tensor[(5, 10, 16), bool] */;
    %850 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
    %851 = cast(%831, dtype="bool") /* ty=Tensor[(5, 10, 16), bool] */;
    %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %853 = cast(%846, dtype="float32") /* ty=Tensor[(9, 8, ?), float32] */;
    %854 = cast(meta[relay.Constant][39] /* ty=Tensor[(572), float32] */, dtype="float32") /* ty=Tensor[(572), float32] */;
    %855 = reshape(%853, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float32] */;
    %856 = reshape(%854, newshape=[572]) /* ty=Tensor[(572), float32] */;
    %857 = @func_653(%855, %856) /* ty=(Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) */;
    %858 = %857.2;
    %859 = cast(%858, dtype="float64") /* ty=Tensor[(572), float64] */;
    %860 = cast(%846, dtype="float64") /* ty=Tensor[(9, 8, ?), float64] */;
    %861 = %829.2;
    %862 = cast(%861, dtype="int16") /* ty=Tensor[(8, 8, 7), int16] */;
    %863 = cast(%var_1921, dtype="int16") /* ty=Tensor[(448), int16] */;
    %864 = cast(%var_1922, dtype="float32") /* ty=Tensor[(420), float32] */;
    %865 = cast(%846, dtype="float32") /* ty=Tensor[(9, 8, ?), float32] */;
    %866 = reshape(%862, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), int16] */;
    %867 = reshape(%863, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), int16] */;
    %868 = reshape(%864, newshape=[420]) /* ty=Tensor[(420), float32] */;
    %869 = reshape(%865, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %870 = @func_1581(%866, %867, %868, %869) /* ty=(Tensor[(8, 8, 7), int64], Tensor[(8, 8, 7), float64], Tensor[(8, 8, 7), bool], Tensor[(572), float32], Tensor[(420), float32], Tensor[(72), float32], Tensor[(572), float32]) */;
    %871 = less_equal(%839, %840) /* ty=Tensor[(5, 10, 16), bool] */;
    %872 = not_equal(%847, %848) /* ty=Tensor[(9, 8, 572), bool] */;
    %873 = less(%851, %852) /* ty=Tensor[(5, 10, 16), bool] */;
    %874 = floor_divide(%859, %860) /* ty=Tensor[(9, 8, 572), float64] */;
    %875 = %870.0;
    (%861, %var_1921, %var_1922, %var_1923, %871, %872, %873, %874, %875)
  };
  %876(%var_1976, %var_1977, %var_1978, %var_1979) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), bool], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), float64], Tensor[(8, 8, 7), int64]) */
}

def @func_6495(%var_6491: Tensor[(8, 30), int32]) -> (Tensor[(16, 3, 13), uint16], Tensor[(8, 2, 15), float64], Tensor[(8, 30), float64]) {
  %877 = @func_5917() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
  %878 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 30), int32] */, dtype="int32") /* ty=Tensor[(8, 30), int32] */;
  %879 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 30), int32] */, dtype="int32") /* ty=Tensor[(8, 30), int32] */;
  %880 = reshape(%878, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), int32] */;
  %881 = reshape(%879, newshape=[8, 2, 15]) /* ty=Tensor[(8, 2, 15), int32] */;
  %882 = cast(%var_6491, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
  %883 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(8, 30), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %884 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 30), int32] */, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %886 = %877.0;
  %887 = @func_5120(%880, %881) /* ty=Tensor[(8, 2, 15), float64] */;
  %888 = power(%884, %885) /* ty=Tensor[(8, 30), float64] */;
  (%886, %887, %888)
}

def @func_11517() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  @func_11515() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_3355() -> Tensor[(16, 3, 13), float32] {
  %890 = fn () -> Tensor[(16, 3, 13), float32] {
    %889 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 3, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
    exp(%889) /* ty=Tensor[(16, 3, 13), float32] */
  };
  %890() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_11086() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %895 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
    %891 = @func_9981() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %892 = %891.0;
    %893 = @func_4814() /* ty=Tensor[(16, 3, 13), float32] */;
    %894 = @func_4442() /* ty=Tensor[(16, 3, 13), float32] */;
    (%892, %893, %894)
  };
  %895() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_4865() -> (Tensor[(16, 3, 13), float32],) {
  @func_4863() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_8804() -> (Tensor[(16, 3, 13), float32],) {
  %896 = @func_4814() /* ty=Tensor[(16, 3, 13), float32] */;
  (%896,)
}

def @func_9965(%var_9926: Tensor[(15, 5, 2), float64]) -> (Tensor[(15, 5, 2), float64], Tensor[(16, 3, 13), float32]) {
  %897 = cast(-9.63559f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %898 = cast(%var_9926, dtype="float64") /* ty=Tensor[(15, 5, 2), float64] */;
  %899 = mod(%897, %898) /* ty=Tensor[(15, 5, 2), float64] */;
  %900 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
  (%899, %900)
}

def @func_10549(%var_10542: Tensor[(3, 16, 15), int32]) -> Tensor[(3, 16, 15), int32] {
  %901 = cast(%var_10542, dtype="int32") /* ty=Tensor[(3, 16, 15), int32] */;
  %902 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(3, 16, 15), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 16, 15), int32] */, dtype="int32") /* ty=Tensor[(3, 16, 15), int32] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%903, %904) /* ty=Tensor[(3, 16, 15), int32] */
}

def @func_8325(%var_8324: Tensor[(420), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(1, 448), int16], Tensor[(420), float32], Tensor[(16, 3, 13), float32], Tensor[(28), float64]) {
  %917 = fn (%var_8298: Tensor[(420), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(1, 448), int16], Tensor[(420), float32], Tensor[(16, 3, 13), float32], Tensor[(28), float64]) {
    %905 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 448), int16] */, dtype="int16") /* ty=Tensor[(1, 448), int16] */;
    %906 = cast(%var_8298, dtype="float32") /* ty=Tensor[(420), float32] */;
    %907 = reshape(%905, newshape=[448]) /* ty=Tensor[(448), int16] */;
    %908 = reshape(%906, newshape=[420]) /* ty=Tensor[(420), float32] */;
    %909 = @func_5055(%907, %908) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(448), int16], Tensor[(800), float32], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) */;
    %910 = @func_6122() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %911 = @func_4202() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, ?), float64], Tensor[(28), float64]) */;
    %912 = %911.2;
    %913 = cast(%912, dtype="float64") /* ty=Tensor[(28), float64] */;
    %914 = %909.6;
    %915 = %910.0;
    %916 = cos(%913) /* ty=Tensor[(28), float64] */;
    (%914, meta[relay.Constant][43] /* ty=Tensor[(1, 448), int16] */, %var_8298, %915, %916)
  };
  %917(%var_8324) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(1, 448), int16], Tensor[(420), float32], Tensor[(16, 3, 13), float32], Tensor[(28), float64]) */
}

def @func_10407() -> (Tensor[(16, 3, 13), float32],) {
  %918 = @func_10112() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %919 = %918.0;
  (%919,)
}

def @func_6705(%var_6704: Tensor[(5, 105), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(5, 105), float64], Tensor[(5, 105), float32]) {
  %930 = fn (%var_6701: Tensor[(5, 105), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(5, 105), float64], Tensor[(5, 105), float32]) {
    %920 = @func_3482() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %921 = cast(%var_6701, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
    %922 = cast(%var_6701, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
    %923 = cast(%var_6701, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
    %924 = reshape(%921, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
    %925 = reshape(%922, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
    %926 = reshape(%923, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
    %927 = @func_6417(%924, %925, %926) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(5, 15, 7), float32], Tensor[(5, 105), bool], Tensor[(5, 105), float64]) */;
    %928 = %920.0;
    %929 = %927.3;
    (%928, %929, %var_6701)
  };
  %930(%var_6704) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(5, 105), float64], Tensor[(5, 105), float32]) */
}

def @func_5058(%var_5056: Tensor[(448), int16], %var_5057: Tensor[(420), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(448), int16], Tensor[(800), float32], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) {
  %949 = fn (%var_5032: Tensor[(448), int16], %var_5033: Tensor[(420), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(448), int16], Tensor[(800), float32], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) {
    %931 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %932 = cast(meta[relay.Constant][44] /* ty=Tensor[(800), float32] */, dtype="float32") /* ty=Tensor[(800), float32] */;
    %933 = cast(%var_5032, dtype="int16") /* ty=Tensor[(448), int16] */;
    %934 = cast(%var_5033, dtype="float32") /* ty=Tensor[(420), float32] */;
    %935 = cast(meta[relay.Constant][45] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %936 = reshape(%932, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float32] */;
    %937 = reshape(%933, newshape=[448]) /* ty=Tensor[(448), int16] */;
    %938 = reshape(%934, newshape=[420]) /* ty=Tensor[(420), float32] */;
    %939 = reshape(%935, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %940 = @func_1975(%936, %937, %938, %939) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), bool], Tensor[(5, 10, 16), bool], Tensor[(9, 8, 572), float64], Tensor[(8, 8, 7), int64]) */;
    %941 = @func_4897() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %942 = %941.0;
    %943 = cast(%942, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
    %944 = reshape(%943, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), float32] */;
    %945 = @func_4132(%944) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) */;
    %946 = %931.0;
    %947 = %940.1;
    %948 = %945.1;
    (%946, %947, meta[relay.Constant][44] /* ty=Tensor[(800), float32] */, %var_5032, %var_5033, meta[relay.Constant][45] /* ty=Tensor[(72), float32] */, %942, %948)
  };
  %949(%var_5056, %var_5057) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(448), int16], Tensor[(800), float32], Tensor[(448), int16], Tensor[(420), float32], Tensor[(72), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) */
}

def @func_8110() -> (Tensor[(16, 3, 13), float32],) {
  @func_8108() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_7706() -> (Tensor[(16, 3, 13), float32],) {
  %950 = @func_3354() /* ty=Tensor[(16, 3, 13), float32] */;
  %951 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
  %952 = cast(%951, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %953 = shape_of(%950, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%950, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %956 = add(%954, %955) /* ty=Tensor[(16, 3, 13), float32] */;
  (%956,)
}

def @func_8855() -> (Tensor[(16, 3, 13), float32],) {
  %959 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %957 = @func_8108() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %958 = %957.0;
    (%958,)
  };
  %959() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_10249(%var_10248: Tensor[(9, 9, 10), uint8]) -> (Tensor[(9, 9, 10), uint8],) {
  %965 = fn (%var_10242: Tensor[(9, 9, 10), uint8]) -> (Tensor[(9, 9, 10), uint8],) {
    %960 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 9, 10), uint8] */, dtype="uint8") /* ty=Tensor[(9, 9, 10), uint8] */;
    %961 = shape_of(%var_10242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %962 = cast(%var_10242, dtype="uint8") /* ty=Tensor[(9, 9, 10), uint8] */;
    %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %964 = add(%962, %963) /* ty=Tensor[(9, 9, 10), uint8] */;
    (%964,)
  };
  %965(%var_10248) /* ty=(Tensor[(9, 9, 10), uint8],) */
}

def @func_656(%var_654: Tensor[(9, 8, 1), float32], %var_655: Tensor[(572), float32]) -> (Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) {
  %977 = fn (%var_627: Tensor[(9, 8, 1), float32], %var_647: Tensor[(572), float32]) -> (Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) {
    %966 = cast(%var_627, dtype="float32") /* ty=Tensor[(9, 8, 1), float32] */;
    %967 = sqrt(%966) /* ty=Tensor[(9, 8, 1), float32] */;
    %968 = cast(%967, dtype="bool") /* ty=Tensor[(9, 8, 1), bool] */;
    %969 = shape_of(%var_627, dtype="int32") /* ty=Tensor[(3), int32] */;
    %970 = cast(%var_627, dtype="bool") /* ty=Tensor[(9, 8, 1), bool] */;
    %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %972 = cast(%var_647, dtype="float32") /* ty=Tensor[(572), float32] */;
    %973 = reshape(%972, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float32] */;
    %974 = @func_263(%973) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */;
    %975 = less(%970, %971) /* ty=Tensor[(9, 8, ?), bool] */;
    %976 = %974.1;
    (%975, %976, %var_647)
  };
  %977(%var_654, %var_655) /* ty=(Tensor[(9, 8, ?), bool], Tensor[(13, 4, 11), float64], Tensor[(572), float32]) */
}

def @func_10631() -> Tensor[(16, 3, 13), float32] {
  %978 = fn () -> Tensor[(16, 3, 13), float32] {
    @func_6007() /* ty=Tensor[(16, 3, 13), float32] */
  };
  %978() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_11532() -> Tensor[(16, 3, 13), float32] {
  %980 = fn () -> Tensor[(16, 3, 13), float32] {
    %979 = @func_10988() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %979.0
  };
  %980() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_8055() -> Tensor[(16, 3, 13), float32] {
  %982 = fn () -> Tensor[(16, 3, 13), float32] {
    %981 = @func_4897() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %981.0
  };
  %982() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_8145() -> (Tensor[(16, 3, 13), float32],) {
  %984 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %983 = @func_5959() /* ty=Tensor[(16, 3, 13), float32] */;
    (%983,)
  };
  %984() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_8554() -> Tensor[(16, 3, 13), float32] {
  %985 = fn () -> Tensor[(16, 3, 13), float32] {
    @func_8188() /* ty=Tensor[(16, 3, 13), float32] */
  };
  %985() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_7368() -> (Tensor[(16, 3, 13), float32],) {
  %988 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %986 = @func_6122() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %987 = %986.0;
    (%987,)
  };
  %988() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_10394() -> (Tensor[(16, 3, 13), float32],) {
  %989 = @func_9413() /* ty=Tensor[(16, 3, 13), float32] */;
  (%989,)
}

def @func_2398(%var_2396: Tensor[(16, 9, 14), float32]) -> Tensor[(16, 9, 14), float32] {
  @func_2395(%var_2396) /* ty=Tensor[(16, 9, 14), float32] */
}

def @func_7333(%var_7285: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(273), float64], Tensor[(16, 3, 13), float32], Tensor[(273), bool]) {
  %990 = cast(%var_7285, dtype="float64") /* ty=Tensor[(273), float64] */;
  %991 = reshape(%990, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %992 = @func_4791(%991) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */;
  %993 = @func_5171() /* ty=Tensor[(16, 3, 13), float32] */;
  %994 = cast(%993, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %995 = reshape(%994, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), float32] */;
  %996 = @func_4132(%995) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), int64]) */;
  %997 = cast(%993, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %998 = reshape(%997, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), float32] */;
  %999 = @func_5385(%998) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */;
  %1000 = %999.2;
  %1001 = cast(%var_7285, dtype="bool") /* ty=Tensor[(273), bool] */;
  %1002 = shape_of(%1000, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1003 = cast(%1000, dtype="bool") /* ty=Tensor[(273), bool] */;
  %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1005 = %992.2;
  %1006 = %996.0;
  %1007 = less_equal(%1003, %1004) /* ty=Tensor[(273), bool] */;
  (%993, %1005, %1006, %1007)
}

def @func_9701(%var_9685: Tensor[(5, 105), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(5, 105), float32], Tensor[(16, 3, 13), float32]) {
  %1008 = @func_5504() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %1009 = cast(%var_9685, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %1010 = cast(%var_9685, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %1011 = cast(%var_9685, dtype="float32") /* ty=Tensor[(5, 105), float32] */;
  %1012 = reshape(%1009, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %1013 = reshape(%1010, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %1014 = reshape(%1011, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %1015 = @func_6417(%1012, %1013, %1014) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(5, 15, 7), float32], Tensor[(5, 105), bool], Tensor[(5, 105), float64]) */;
  %1016 = @func_8633() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
  %1017 = %1008.0;
  %1018 = %1015.0;
  %1019 = %1016.1;
  (%1017, %1018, %var_9685, %1019)
}

def @func_11901(%var_11899: Tensor[(1, 5, 11), uint32], %var_11900: Tensor[(13, 5, 11), uint32]) -> (Tensor[(5, 105), float32], Tensor[(1, 525), float32], Tensor[(13, 5, 11), int16], Tensor[(16, 3, 13), float32]) {
  @func_11897(%var_11899, %var_11900) /* ty=(Tensor[(5, 105), float32], Tensor[(1, 525), float32], Tensor[(13, 5, 11), int16], Tensor[(16, 3, 13), float32]) */
}

def @func_10989() -> (Tensor[(16, 3, 13), float32],) {
  %1022 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %1020 = @func_9981() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %1021 = %1020.0;
    (%1021,)
  };
  %1022() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_1716(%var_1714: Tensor[(5, 15, 7), float32], %var_1715: Tensor[(5, 15, 7), float32]) -> Tensor[(5, 15, 7), float32] {
  %1027 = fn (%var_1699: Tensor[(5, 15, 7), float32], %var_1700: Tensor[(5, 15, 7), float32]) -> Tensor[(5, 15, 7), float32] {
    %1023 = cast(%var_1700, dtype="float32") /* ty=Tensor[(5, 15, 7), float32] */;
    %1024 = shape_of(%var_1699, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1025 = cast(%var_1699, dtype="float32") /* ty=Tensor[(5, 15, 7), float32] */;
    %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%1025, %1026) /* ty=Tensor[(5, 15, 7), float32] */
  };
  %1027(%var_1714, %var_1715) /* ty=Tensor[(5, 15, 7), float32] */
}

def @func_11897(%var_11862: Tensor[(1, 5, 11), uint32], %var_11863: Tensor[(13, 5, 11), uint32]) -> (Tensor[(5, 105), float32], Tensor[(1, 525), float32], Tensor[(13, 5, 11), int16], Tensor[(16, 3, 13), float32]) {
  %1028 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 525), float32] */, dtype="float32") /* ty=Tensor[(1, 525), float32] */;
  %1029 = reshape(%1028, newshape=[5, 105]) /* ty=Tensor[(5, 105), float32] */;
  %1030 = @func_9701(%1029) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(5, 105), float32], Tensor[(16, 3, 13), float32]) */;
  %1031 = cast(%var_11862, dtype="uint32") /* ty=Tensor[(1, 5, 11), uint32] */;
  %1032 = cast(%var_11863, dtype="uint32") /* ty=Tensor[(13, 5, 11), uint32] */;
  %1033 = multiply(%1031, %1032) /* ty=Tensor[(13, 5, 11), uint32] */;
  %1034 = cast(%1033, dtype="int16") /* ty=Tensor[(13, 5, 11), int16] */;
  %1035 = cast(%var_11862, dtype="int16") /* ty=Tensor[(1, 5, 11), int16] */;
  %1036 = @func_7801() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %1037 = %1030.2;
  %1038 = maximum(%1034, %1035) /* ty=Tensor[(13, 5, 11), int16] */;
  %1039 = %1036.1;
  (%1037, meta[relay.Constant][47] /* ty=Tensor[(1, 525), float32] */, %1038, %1039)
}

def @func_9282(%var_9280: Tensor[(12), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(3, 4), float32], Tensor[(12), float32]) {
  @func_9279(%var_9280) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(3, 4), float32], Tensor[(12), float32]) */
}

def @func_4897() -> (Tensor[(16, 3, 13), float32],) {
  %1040 = @func_4863() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %1041 = %1040.0;
  (%1041,)
}

def @func_5687() -> (Tensor[(16, 3, 13), float32],) {
  %1042 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %1043 = %1042.0;
  %1044 = cast(%1043, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
  %1045 = log2(%1044) /* ty=Tensor[(16, 3, 13), float32] */;
  (%1045,)
}

def @func_10579() -> Tensor[(16, 3, 13), float32] {
  @func_9051() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_2338(%var_2336: Tensor[(13, 7, 3), float64]) -> (Tensor[(13, 7, 3), float64],) {
  @func_2335(%var_2336) /* ty=(Tensor[(13, 7, 3), float64],) */
}

def @func_5765() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
  %1049 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) {
    %1046 = @func_5189() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %1047 = @func_3873() /* ty=Tensor[(16, 3, 13), float32] */;
    %1048 = %1046.0;
    (%1047, %1048)
  };
  %1049() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */
}

def @func_8436() -> (Tensor[(16, 3, 13), float32], Tensor[(1, 572), float32], Tensor[(7, 4), float64], float32, Tensor[(2016), float32], Tensor[(16, 3, 13), uint16], Tensor[(24, 10), int32]) {
  %1050 = @func_4508() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32]) */;
  %1051 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 4), float64] */;
  %1052 = cast(-9.21316f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1053 = cast(meta[relay.Constant][49] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %1054 = reshape(%1051, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %1055 = reshape(%1052, newshape=[]) /* ty=float32 */;
  %1056 = reshape(%1053, newshape=[2016]) /* ty=Tensor[(2016), float32] */;
  %1057 = @func_3617(%1054, %1055, %1056) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(2, 14, 1), float64], Tensor[(28), float64], Tensor[(10, 12, 14), float32], float32, Tensor[(2016), float32], Tensor[(2016), float32], Tensor[(9, 8, ?), bool], Tensor[(3, 24), float32], Tensor[(1, 572), float32]) */;
  %1058 = cast(meta[relay.Constant][50] /* ty=Tensor[(24, 10), int32] */, dtype="int32") /* ty=Tensor[(24, 10), int32] */;
  %1059 = reshape(%1058, newshape=[8, 30]) /* ty=Tensor[(8, 30), int32] */;
  %1060 = @func_6495(%1059) /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(8, 2, 15), float64], Tensor[(8, 30), float64]) */;
  %1061 = %1050.1;
  %1062 = %1057.9;
  %1063 = %1060.0;
  (%1061, %1062, meta[relay.Constant][48] /* ty=Tensor[(7, 4), float64] */, -9.21316f /* ty=float32 */, meta[relay.Constant][49] /* ty=Tensor[(2016), float32] */, %1063, meta[relay.Constant][50] /* ty=Tensor[(24, 10), int32] */)
}

def @func_266(%var_264: Tensor[(13, 4, 11), float32]) -> (Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) {
  @func_263(%var_264) /* ty=(Tensor[(13, 4, 11), float32], Tensor[(13, 4, 11), float64], Tensor[(13, 4, 11), float64]) */
}

def @func_4863() -> (Tensor[(16, 3, 13), float32],) {
  %1064 = @func_3873() /* ty=Tensor[(16, 3, 13), float32] */;
  (%1064,)
}

def @func_10062() -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint16]) {
  %1071 = fn () -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint16]) {
    %1065 = @func_9259() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %1066 = @func_8487() /* ty=(Tensor[(16, 3, 13), uint16], Tensor[(16, 3, 13), float32]) */;
    %1067 = @func_9348() /* ty=Tensor[(16, 3, 13), float32] */;
    %1068 = %1065.0;
    %1069 = @func_3999() /* ty=Tensor[(16, 3, 13), float32] */;
    %1070 = %1066.0;
    (%1067, %1068, %1069, %1070)
  };
  %1071() /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), uint16]) */
}

def @func_4794(%var_4792: Tensor[(273), float64]) -> (Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) {
  @func_4791(%var_4792) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(13, 7, 3), float64], Tensor[(273), float64]) */
}

def @func_9279(%var_9272: Tensor[(12), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(3, 4), float32], Tensor[(12), float32]) {
  %1072 = @func_7379() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %1073 = cast(%var_9272, dtype="float32") /* ty=Tensor[(12), float32] */;
  %1074 = reshape(%1073, newshape=[3, 4]) /* ty=Tensor[(3, 4), float32] */;
  %1075 = @func_4649(%1074) /* ty=(Tensor[(3, 4), float32],) */;
  %1076 = %1072.0;
  %1077 = %1075.0;
  (%1076, %1077, %var_9272)
}

def @func_9588() -> (Tensor[(16, 3, 13), float32],) {
  %1079 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %1078 = @func_8054() /* ty=Tensor[(16, 3, 13), float32] */;
    (%1078,)
  };
  %1079() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_5172() -> Tensor[(16, 3, 13), float32] {
  %1083 = fn () -> Tensor[(16, 3, 13), float32] {
    %1080 = @func_4166() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %1081 = %1080.0;
    %1082 = cast(%1081, dtype="float32") /* ty=Tensor[(16, 3, 13), float32] */;
    cosh(%1082) /* ty=Tensor[(16, 3, 13), float32] */
  };
  %1083() /* ty=Tensor[(16, 3, 13), float32] */
}

def @func_6371(%var_6366: Tensor[(30), float32]) -> (Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(30), float32]) {
  %1084 = @func_3946() /* ty=(Tensor[(16, 3, 13), float32],) */;
  %1085 = cast(%var_6366, dtype="float32") /* ty=Tensor[(30), float32] */;
  %1086 = reshape(%1085, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %1087 = @func_6316(%1086) /* ty=(Tensor[(16, 3, 13), float32], Tensor[(16, 3, 13), float32], Tensor[(3, 10, ?), bool], Tensor[(30), float32], Tensor[(16, 3, 13), float32], Tensor[(11, ?, 9), float32], Tensor[(16, 3, 13), float64], Tensor[(16, 3, 13), float32]) */;
  %1088 = @func_5171() /* ty=Tensor[(16, 3, 13), float32] */;
  %1089 = %1084.0;
  %1090 = %1087.4;
  (%1088, %1089, %1090, %var_6366)
}

def @func_7184() -> (Tensor[(16, 3, 13), float32],) {
  %1093 = fn () -> (Tensor[(16, 3, 13), float32],) {
    %1091 = @func_4897() /* ty=(Tensor[(16, 3, 13), float32],) */;
    %1092 = %1091.0;
    (%1092,)
  };
  %1093() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_2395(%var_2383: Tensor[(16, 9, 14), float32]) -> Tensor[(16, 9, 14), float32] {
  %1094 = cast(%var_2383, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
  erf(%1094) /* ty=Tensor[(16, 9, 14), float32] */
}

def @func_8806() -> (Tensor[(16, 3, 13), float32],) {
  @func_8804() /* ty=(Tensor[(16, 3, 13), float32],) */
}

def @func_7708() -> (Tensor[(16, 3, 13), float32],) {
  @func_7706() /* ty=(Tensor[(16, 3, 13), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

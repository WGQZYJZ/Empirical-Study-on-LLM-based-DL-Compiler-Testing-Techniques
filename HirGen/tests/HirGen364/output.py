import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_202 = relay.var("var_202", dtype = "uint64", shape = (15, 1, 14))#candidate|202|(15, 1, 14)|var|uint64
var_203 = relay.var("var_203", dtype = "uint64", shape = (15, 3, 14))#candidate|203|(15, 3, 14)|var|uint64
bop_204 = relay.subtract(var_202.astype('uint64'), var_203.astype('uint64')) # shape=(15, 3, 14)
var_232 = relay.var("var_232", dtype = "uint64", shape = (15, 3, 14))#candidate|232|(15, 3, 14)|var|uint64
bop_233 = relay.power(var_203.astype('float64'), relay.reshape(var_232.astype('float64'), relay.shape_of(var_203))) # shape=(15, 3, 14)
uop_242 = relay.acos(var_232.astype('float32')) # shape=(15, 3, 14)
output = relay.Tuple([bop_204,bop_233,uop_242,])
output2 = relay.Tuple([bop_204,bop_233,uop_242,])
func_245 = relay.Function([var_202,var_203,var_232,], output)
mod['func_245'] = func_245
mod = relay.transform.InferType()(mod)
var_246 = relay.var("var_246", dtype = "uint64", shape = (15, 1, 14))#candidate|246|(15, 1, 14)|var|uint64
var_247 = relay.var("var_247", dtype = "uint64", shape = (15, 3, 14))#candidate|247|(15, 3, 14)|var|uint64
var_248 = relay.var("var_248", dtype = "uint64", shape = (15, 3, 14))#candidate|248|(15, 3, 14)|var|uint64
output = func_245(var_246,var_247,var_248,)
func_249 = relay.Function([var_246,var_247,var_248,], output)
mutated_mod['func_249'] = func_249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_673 = relay.var("var_673", dtype = "float32", shape = (7, 6, 13))#candidate|673|(7, 6, 13)|var|float32
uop_674 = relay.log10(var_673.astype('float32')) # shape=(7, 6, 13)
func_245_call = mod.get_global_var('func_245')
func_249_call = mutated_mod.get_global_var('func_249')
var_680 = relay.var("var_680", dtype = "uint64", shape = (210,))#candidate|680|(210,)|var|uint64
const_681 = relay.const([-3,6,-9,-7,7,1,8,-1,3,-4,6,-2,6,-1,-8,-4,7,-8,-4,-7,1,-8,1,5,1,-1,-7,-9,-9,-1,-7,9,-8,8,-4,-3,-2,3,10,-7,9,8,-3,1,7,10,-1,-6,7,-1,1,-5,4,-8,8,-5,-5,5,2,-9,-9,1,-9,-9,2,-5,-3,-8,8,3,-3,-5,3,-8,7,2,-8,6,-1,-2,-4,-8,9,7,-5,-5,1,7,-1,9,-2,-4,5,8,6,10,8,8,-5,-5,5,9,10,-10,-2,-9,-9,7,-4,9,-4,1,-7,9,3,-2,-4,4,6,-6,-2,-5,1,-6,-6,6,-4,-1,-5,-4,-6,7,-7,7,7,-4,-8,2,8,6,-3,-3,7,-1,-8,-1,1,-6,10,-4,5,-8,4,4,-7,7,3,10,-5,2,-6,-8,2,-5,-7,9,-6,9,-8,3,5,7,3,-8,8,4,3,-1,5,-7,-5,-8,-5,1,10,-9,6,-3,-5,9,-10,-9,2,10,-6,-4,3,-1,9,-2,-6,3,8,2,6,-1,2,-9,-10,6,6,-6,-3,7,-9,-8,1,10,9,7,5,2,-7,-6,2,2,3,8,7,6,6,4,9,-9,9,-4,5,2,8,9,-1,7,1,9,-1,-5,-3,6,-4,-8,2,-7,-9,9,8,-7,-8,-4,2,-8,-10,-1,5,-5,-2,-4,-7,1,10,3,-7,9,-9,-6,-8,-3,1,-3,1,5,-3,8,-10,5,-9,9,3,3,3,-10,-8,-9,-8,5,-10,-3,-1,-2,1,10,10,-8,-9,2,2,3,8,9,6,-3,6,1,8,8,-3,-9,-10,-3,-8,3,10,8,-9,1,-2,-4,-2,-6,8,-10,-4,1,6,5,10,1,-5,7,-7,1,-5,-10,8,9,-1,7,8,9,2,7,3,4,-9,2,-9,7,-6,3,2,1,1,-9,6,4,-4,-3,-8,-3,-6,-5,7,-9,9,-8,3,6,-7,-4,5,-4,8,-5,2,5,4,5,2,-4,-5,1,10,-4,4,-4,6,9,-3,2,4,-5,5,-10,5,7,-6,10,8,5,-1,-3,6,1,-8,-7,8,3,-4,-2,8,-1,-2,10,-4,-3,7,2,-10,5,5,10,-5,-9,-7,10,-4,10,1,-5,-7,1,-6,7,5,-2,3,-4,-7,9,-5,9,-1,5,-9,8,1,-1,-4,1,-2,2,6,-6,-10,-7,6,-6,5,9,-4,-1,8,-9,10,-4,6,-10,3,-7,10,9,2,-3,9,-10,-8,-7,2,-1,-10,7,-10,-8,2,7,1,-10,-5,9,-4,8,-1,10,-5,-8,-3,-10,-3,-9,4,-8,4,-8,-8,3,-6,-6,6,-10,5,5,-4,-5,3,-3,10,4,7,10,-10,1,-2,3,-3,10,-5,-7,9,-8,-8,1,-2,1,-8,-7,4,4,-5,5,-2,-5,1,5,-6,2,6,1,10,-9,2,7,-6,-1,10,8,-2,-8,-4,5,-10,5,2,-3,-7,1,8,3,-8,4,2,-9,-4,-9,4,2,3,-9,3,-7,4,-10,-7,8,-9,5,-4,-8,-5,-9,-3,2,-8,10,1,-4,7,-9,6,2,-10,7,-5,-4,-3,9,6,1,10,-7,-7,6,-2,-10,2,2,-3,6,3,8,5,-2], dtype = "uint64")#candidate|681|(630,)|const|uint64
call_679 = relay.TupleGetItem(func_245_call(relay.reshape(var_680.astype('uint64'), [15, 1, 14]), relay.reshape(const_681.astype('uint64'), [15, 3, 14]), relay.reshape(const_681.astype('uint64'), [15, 3, 14]), ), 2)
call_682 = relay.TupleGetItem(func_249_call(relay.reshape(var_680.astype('uint64'), [15, 1, 14]), relay.reshape(const_681.astype('uint64'), [15, 3, 14]), relay.reshape(const_681.astype('uint64'), [15, 3, 14]), ), 2)
uop_686 = relay.exp(uop_674.astype('float32')) # shape=(7, 6, 13)
func_245_call = mod.get_global_var('func_245')
func_249_call = mutated_mod.get_global_var('func_249')
call_693 = relay.TupleGetItem(func_245_call(relay.reshape(var_680.astype('uint64'), [15, 1, 14]), relay.reshape(call_679.astype('uint64'), [15, 3, 14]), relay.reshape(const_681.astype('uint64'), [15, 3, 14]), ), 0)
call_694 = relay.TupleGetItem(func_249_call(relay.reshape(var_680.astype('uint64'), [15, 1, 14]), relay.reshape(call_679.astype('uint64'), [15, 3, 14]), relay.reshape(const_681.astype('uint64'), [15, 3, 14]), ), 0)
func_245_call = mod.get_global_var('func_245')
func_249_call = mutated_mod.get_global_var('func_249')
call_701 = relay.TupleGetItem(func_245_call(relay.reshape(var_680.astype('uint64'), [15, 1, 14]), relay.reshape(const_681.astype('uint64'), [15, 3, 14]), relay.reshape(call_679.astype('uint64'), [15, 3, 14]), ), 2)
call_702 = relay.TupleGetItem(func_249_call(relay.reshape(var_680.astype('uint64'), [15, 1, 14]), relay.reshape(const_681.astype('uint64'), [15, 3, 14]), relay.reshape(call_679.astype('uint64'), [15, 3, 14]), ), 2)
output = relay.Tuple([call_679,var_680,const_681,uop_686,call_693,call_701,])
output2 = relay.Tuple([call_682,var_680,const_681,uop_686,call_694,call_702,])
func_707 = relay.Function([var_673,var_680,], output)
mod['func_707'] = func_707
mod = relay.transform.InferType()(mod)
mutated_mod['func_707'] = func_707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_707_call = mutated_mod.get_global_var('func_707')
var_709 = relay.var("var_709", dtype = "float32", shape = (7, 6, 13))#candidate|709|(7, 6, 13)|var|float32
var_710 = relay.var("var_710", dtype = "uint64", shape = (210,))#candidate|710|(210,)|var|uint64
call_708 = func_707_call(var_709,var_710,)
output = call_708
func_711 = relay.Function([var_709,var_710,], output)
mutated_mod['func_711'] = func_711
mutated_mod = relay.transform.InferType()(mutated_mod)
var_929 = relay.var("var_929", dtype = "float64", shape = (4, 1, 13))#candidate|929|(4, 1, 13)|var|float64
uop_930 = relay.sqrt(var_929.astype('float64')) # shape=(4, 1, 13)
output = relay.Tuple([uop_930,])
output2 = relay.Tuple([uop_930,])
func_933 = relay.Function([var_929,], output)
mod['func_933'] = func_933
mod = relay.transform.InferType()(mod)
var_934 = relay.var("var_934", dtype = "float64", shape = (4, 1, 13))#candidate|934|(4, 1, 13)|var|float64
output = func_933(var_934)
func_935 = relay.Function([var_934], output)
mutated_mod['func_935'] = func_935
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1032 = relay.const([[[-4.828758,-4.705586,-7.174742,8.317720,-7.758174,-7.456046,-8.216795,2.650380,-0.487749,3.143156],[-6.162289,7.963530,7.705712,-9.503238,6.408246,9.627439,-9.078569,6.044001,-3.289062,3.438416],[-3.186376,-2.489662,1.096718,5.008936,9.698113,-6.911081,7.225128,-2.089561,5.339674,-0.211434],[-8.299829,-0.842493,4.016745,6.626257,-0.076749,0.693606,-5.281403,-6.106680,4.994144,9.211050],[-0.262769,-5.616332,3.560329,8.217338,1.386801,-6.136052,5.418333,-5.514961,-0.506719,1.248317],[-9.022598,5.340389,-1.076468,-7.700607,7.621576,6.016010,-9.081004,8.260930,-3.659984,-5.327790],[-2.133312,0.712913,0.009446,8.530812,5.445974,1.491383,4.447443,2.823436,-5.389225,7.057278],[7.137053,4.119661,-3.992418,-4.746353,2.996326,-3.324195,2.740843,-5.133620,7.293691,-1.116855],[-6.992219,-7.098389,-7.058375,3.211706,-2.022818,-7.874251,1.211626,2.178470,0.813890,-0.599299]],[[-3.254617,-8.764143,-9.083125,-6.320026,-6.627020,8.790376,-6.322288,-2.134779,9.510108,5.257757],[-4.715687,6.808992,-5.027094,2.562134,-6.974823,-9.913394,-4.522208,-3.488117,4.216278,-8.902853],[9.104547,-5.046028,-8.880039,-6.781091,4.400072,1.005904,-8.425159,0.851303,8.866810,-5.928285],[5.293226,-3.455435,6.417251,-4.906336,7.360850,8.107578,-3.237487,7.974836,-4.794777,-5.354152],[9.973342,-8.188179,6.975342,-8.598814,-5.350852,-6.449839,-7.778726,-4.847393,-0.344097,-2.241083],[7.043845,-6.719735,-2.630894,-5.677141,-4.347965,-8.400898,-3.959932,0.084928,-7.935734,-3.303579],[-6.251784,-8.915017,9.605989,-4.213430,-6.952616,-9.677001,-7.928008,5.250047,-6.374071,-6.203304],[9.487306,-0.948697,7.776997,8.342025,-4.383681,-0.598234,-3.461610,0.618361,5.988472,8.298589],[-8.489653,-0.603253,2.877808,1.446489,8.845282,-4.645784,-8.577488,9.158031,-6.967050,-8.619138]],[[-5.054196,8.603985,6.074378,7.670771,-2.279654,-1.282467,-4.053780,-9.687550,9.960607,2.575435],[7.507526,8.117380,-7.380818,7.694717,8.833522,4.403002,-4.208231,-9.438215,5.434301,1.004639],[3.422664,6.888235,-6.871001,2.452151,1.391370,-0.568529,-3.857693,5.321730,-8.652128,2.863548],[-1.619966,-1.412010,8.388327,-0.111021,-9.815991,-6.998580,-9.561942,0.809213,9.071482,-3.573094],[0.017922,4.249634,-2.389997,-9.136574,9.343375,-5.954824,6.552484,4.217308,0.116672,7.243084],[3.712892,8.663871,0.581851,-2.410521,8.681253,-0.316960,0.402529,-8.121010,-1.753934,8.949490],[-2.407210,6.092903,-5.546460,-5.736737,-7.619122,6.812087,-4.798944,4.793269,5.132856,-6.466407],[-6.771134,4.535963,9.868374,1.517277,-6.344277,5.732169,-8.303802,-1.175195,5.711928,3.080725],[7.822375,7.239541,1.139096,8.352240,-0.192590,-1.254724,-6.851304,2.649184,3.227735,0.819891]],[[4.872294,8.906087,3.009752,-5.247360,-3.955569,4.621849,-9.850276,7.436505,6.634385,-0.920846],[3.436622,0.515695,-1.368736,6.120193,4.878257,1.170608,4.161654,8.377959,2.952148,-3.454935],[8.269660,7.622464,-4.350096,1.492883,3.679733,-4.311569,-5.275220,2.949092,-1.600323,2.063387],[4.931450,-6.705218,1.249998,-3.553337,7.048779,-0.734383,-4.092673,-3.620699,2.016365,-7.653973],[8.576834,3.381121,-0.084971,-7.004927,9.308603,9.596401,-8.933659,4.775275,0.932115,-3.817140],[-1.194801,3.781108,-7.638838,-1.889830,7.120017,0.098895,2.145054,5.254088,8.465408,-8.179344],[8.799989,2.902175,1.391958,2.077603,-6.112423,9.982765,-6.586123,8.754881,-9.154283,-7.926685],[9.194222,-7.686806,-0.988296,-9.656730,5.377388,-6.483598,-9.724199,-3.180182,9.929086,-7.531254],[-2.592920,-0.586729,-7.837421,3.409512,4.809705,2.416493,8.095236,2.292292,2.900846,4.077214]],[[-3.685591,5.487795,-0.086738,-1.750600,7.133379,5.477499,-6.958573,-1.817993,-3.013721,7.756981],[-7.366198,-3.614407,-6.376628,9.169744,9.338697,-6.137141,4.196434,4.110535,-0.354753,0.262885],[-3.419488,3.986819,-6.521668,-0.922917,1.172771,3.529458,-2.444104,-1.602706,7.402960,-7.952390],[-0.959871,3.413075,-4.724981,7.032861,-6.178834,-3.300128,-5.507577,-1.276314,6.156295,5.636214],[-5.516956,-3.382081,-1.355516,-1.783418,6.569950,-5.923183,6.418597,3.412954,-6.741011,-8.438926],[6.806624,-7.986551,-7.932302,-6.883173,7.124508,7.200874,-2.268240,-3.297690,-8.255196,2.625046],[7.515989,2.698153,3.656931,-5.274548,-8.872601,-7.533117,6.406983,6.540749,4.089942,5.298091],[6.490455,7.022676,5.086530,-7.460739,-3.547621,2.272408,2.171738,-5.006352,4.731167,9.328696],[-3.402565,4.193756,-4.433454,3.765230,-9.055287,-8.534257,6.633485,-6.960935,3.012820,-0.721484]],[[-4.157061,1.436309,8.014711,-1.634930,-3.378670,-7.481142,5.164847,-6.076019,-8.672444,-9.548892],[-5.082572,-9.088382,-9.610655,-2.173990,5.726474,4.455203,-8.395633,4.169134,-6.196357,-2.808629],[7.862622,2.503962,-5.681227,-3.633029,-7.432805,-5.758453,5.596187,-8.105887,1.467994,3.456681],[-8.426267,-5.745833,0.093137,-0.019494,3.086190,-9.077052,0.129695,7.399510,2.591997,-7.372557],[-0.172780,9.674519,1.683928,4.946813,-2.062245,9.681338,6.680026,-8.035120,5.082722,8.570544],[2.076975,-3.055542,2.994976,4.077561,9.909764,-4.998869,-8.649055,-3.174232,-5.420088,-4.857307],[-9.915634,5.488788,8.287677,9.565752,-9.875099,5.211877,-9.354851,-5.234197,1.224654,6.533586],[7.742353,0.422567,1.954250,4.699556,7.440439,-4.129828,1.629945,-3.520593,1.387621,1.641694],[-2.600960,-9.052890,-9.226845,-7.566188,-9.899029,7.891307,-1.070106,6.782105,-7.332909,1.903257]],[[-9.751638,7.411662,7.874878,-9.295776,8.000451,-0.106516,-3.387406,1.494447,5.790172,-6.900089],[2.672686,4.984200,-5.472224,4.710169,1.312359,0.608905,-1.476017,6.160076,-0.024002,4.159894],[6.511634,1.517838,-6.606569,3.523106,-8.206469,0.138866,4.424228,1.982521,7.780686,-2.143300],[6.463860,-3.125651,-0.160119,0.257303,6.191953,8.228214,-6.815518,-7.379718,8.612602,-0.500651],[1.573393,7.421218,-4.097609,5.201525,6.557875,-4.926435,1.694372,-6.243835,-7.877768,-9.158471],[-9.335516,4.426849,-6.925182,4.908465,8.666826,6.615492,4.836294,6.501399,-4.013243,2.562883],[-1.918296,-6.131963,-9.403035,0.956292,7.921365,-7.636221,4.949966,-8.167266,0.481829,5.654577],[-0.654379,-2.781633,0.336534,5.899617,-4.759841,6.418188,3.078311,-6.485326,4.341365,-2.266315],[9.744839,-1.839531,-0.560682,-7.126216,8.016265,-6.982757,-3.320622,0.055778,-2.820259,1.376462]],[[-9.799991,8.032775,6.184601,9.889117,-0.193209,9.973599,8.413180,-9.955602,-4.994423,9.092902],[4.257980,7.226815,-9.291838,8.786936,-2.799441,5.288536,-6.681936,-2.529309,-8.232068,-4.847574],[4.186083,-0.830424,7.858910,6.497889,4.594643,7.049141,-0.898851,1.144155,-4.131977,-0.803599],[0.292871,6.564777,-3.611874,6.730671,8.193721,5.992127,0.798699,4.848209,4.979675,0.277142],[-7.628154,3.155636,5.801740,9.722046,5.006849,-9.440939,-0.637832,-1.348869,8.025239,9.435408],[9.810174,-4.294538,5.513585,-7.933351,-9.530096,8.997886,-2.355098,3.182642,7.687683,0.981476],[-2.483769,-5.691023,8.025560,-9.098832,-2.036052,-8.067429,-7.403279,0.930191,-2.160189,-8.416982],[4.004657,7.633783,-5.872238,5.236410,-2.887082,4.760990,0.639928,1.030622,-9.896438,1.039902],[0.736381,9.074950,-9.880170,6.221652,-4.322836,6.676822,-5.750750,9.856460,-1.848935,-7.840876]],[[-1.358469,1.997639,9.412304,-9.159943,-4.785590,2.434712,7.719308,-4.112342,3.185405,2.439690],[2.371725,8.994178,4.515836,6.679944,9.072371,-4.149030,9.982267,1.576562,-1.147855,-1.236234],[-4.180917,2.700618,-7.917286,3.101472,1.396569,5.498026,-5.097145,-6.684440,-6.319311,9.688100],[-1.263472,0.001720,2.912970,-0.522251,-1.174393,7.768912,-7.967063,0.304852,-2.780688,-2.455858],[8.030502,-2.574415,-1.181399,5.960733,-3.088232,6.705417,1.530269,-7.310869,6.724153,-1.825265],[-6.545211,-1.144884,-7.781559,3.921654,5.287310,3.020004,-2.411473,-2.915444,-7.279437,6.800484],[-9.822351,9.292720,8.784408,-4.618095,1.215786,-7.578190,-8.042278,-1.545277,-0.052270,3.275423],[-8.788237,-7.283953,6.357905,8.452121,9.373633,-5.062830,4.916269,9.044287,-3.361400,-5.740369],[-9.838337,8.781466,4.829326,-2.061672,5.849528,6.238932,-0.263225,-0.813841,-9.479955,7.303706]],[[-1.976966,1.487637,-1.944457,-2.041696,0.895517,-0.089911,-9.868400,-5.035333,5.187225,5.448882],[0.818606,-9.781373,5.649429,8.169900,2.970177,3.004188,-8.319783,9.921786,5.689549,4.893564],[-3.534111,-9.222957,2.215977,3.765100,9.227810,-6.819038,8.809194,-9.635151,3.366684,1.326774],[7.264437,7.680889,8.996435,-2.618143,-4.663924,0.692680,5.092903,3.541883,2.685445,2.313842],[-1.960220,3.307856,6.629048,-5.744560,8.122618,7.104871,-7.532748,-8.129887,8.723553,-6.967836],[2.199586,3.476871,7.315710,1.543025,5.841949,-9.396118,-3.616741,7.434700,2.250622,5.968635],[0.085021,1.886163,5.093953,-9.167567,-7.361412,-9.330826,-9.388244,-4.732491,5.986498,-5.234047],[0.990856,-6.051674,-5.956960,6.458234,0.410077,-3.319904,3.563429,-8.050561,-9.657292,1.697453],[5.384637,-6.876425,4.468303,1.881107,-8.551884,9.257183,-6.687470,-9.526476,-3.066934,4.508846]],[[-6.204449,-0.404385,7.224620,-1.223520,3.678527,3.091820,7.641610,2.183986,-4.442734,6.136053],[-3.353743,-8.185367,-0.175142,-5.421220,-1.817947,-9.119399,8.617677,-7.737155,5.485952,-6.821412],[9.135063,6.171921,4.209396,1.732517,-5.092890,7.172077,-2.664688,9.304535,-6.906477,9.990675],[8.588107,8.850270,-5.531226,-5.566395,-6.526080,6.129481,-6.618702,-7.544540,0.289828,6.723518],[0.898732,-4.280467,0.003879,-1.734880,6.674184,-8.721463,-5.663858,-6.586446,-8.964711,-2.944807],[7.487401,-7.057411,1.630826,-7.605382,-9.415637,-6.399967,-7.533216,6.243321,-9.553191,7.412281],[4.856156,8.404096,4.370951,7.222324,-8.284983,-3.768337,0.368620,2.587956,2.208289,6.578518],[5.770983,6.493434,-0.364072,4.854642,4.468369,9.686109,3.470637,-7.009995,-6.414693,-4.629044],[2.965921,-6.137411,7.765059,2.005651,6.932081,-6.182052,-4.995603,-3.041053,1.603498,-4.219637]],[[-5.623286,0.011644,-9.732109,-9.638110,7.965082,6.817088,5.032664,7.623026,6.045456,-9.377750],[7.330911,8.444484,-8.021264,5.223663,-3.190227,-8.776376,7.479151,-3.418421,6.364536,-1.822345],[7.625146,-2.883568,0.843056,6.992756,-6.798478,-9.142633,-9.595970,-6.494953,1.768488,-0.348924],[1.582102,1.614434,3.203581,-8.636183,-8.968275,0.853121,-7.571586,4.717474,-1.139486,-5.692471],[-0.468752,-6.604679,-4.878586,9.533775,-7.157581,0.829879,8.943579,-5.439152,-5.942491,3.528541],[3.764508,-6.924974,-1.103406,-2.916180,-0.120520,-1.925391,8.226361,-7.976031,2.994249,7.025338],[1.250654,8.738045,6.663061,3.416185,-3.714604,3.037713,-8.966560,9.915944,3.683612,2.467508],[-7.828168,-4.672250,-9.950025,6.288889,-7.122508,-9.594368,-3.641427,-6.802395,8.545516,4.435243],[1.184736,-5.903631,0.846735,-0.236519,7.796833,-6.556235,8.882536,1.600494,0.378990,2.566523]],[[3.526997,-1.366454,7.442828,-0.491968,-6.997706,-7.621362,-8.419181,9.348009,-7.776525,-8.275296],[9.068846,7.140707,6.353813,9.878947,-4.430504,-3.444469,-5.630807,6.166044,-0.858983,-8.734031],[2.638281,-5.879375,4.575582,8.938304,0.469775,0.144240,3.332615,-7.452500,7.110528,6.599568],[-7.953190,-9.244187,-7.431298,8.772704,1.543990,-9.668130,-1.948099,-1.185023,-1.099519,-7.055955],[6.438914,5.732906,-5.703449,0.377509,4.607477,6.141997,-4.133863,-9.684124,5.263110,2.714438],[4.038964,-8.978006,-7.844341,-6.957821,-3.968675,8.471844,-4.180798,-0.815531,-3.787134,5.993054],[1.673554,4.765152,-0.289167,-1.035557,6.903536,-9.637778,0.781461,8.275978,9.854593,6.515565],[-4.874315,3.109307,6.708965,7.350724,8.735310,9.929328,-7.897957,-6.665446,-7.840275,-8.896416],[9.767450,-0.063835,6.636177,-1.828905,5.894117,3.682475,-9.013639,5.696339,-0.099657,9.346146]],[[3.301841,-9.375253,-6.106911,-0.912254,-3.331695,-4.133640,6.313750,-2.317758,-0.158011,3.415526],[-5.975506,0.823669,5.556108,-5.911696,-9.918443,5.443843,-3.654130,5.080965,-0.358080,3.366757],[-9.725466,-2.572601,9.066521,5.982710,-9.049539,2.379321,2.524020,5.643992,6.730022,-7.779761],[-8.042566,0.871800,-1.976428,3.561279,-1.579437,0.336341,-6.148536,-0.699229,-5.560896,-7.132611],[-6.597759,-6.192788,-3.844767,-3.086292,9.200897,6.452709,-4.147157,2.221048,9.058190,-1.282598],[1.745462,4.125407,6.215642,5.145650,5.423795,-7.890940,-3.318088,8.199696,7.987788,-7.166378],[-8.747168,-2.970172,3.684728,6.924413,-1.177626,-6.886969,2.246757,7.689001,-8.641066,9.310148],[-8.056617,0.734842,-2.099719,-1.676244,1.029126,-1.260176,-2.832887,-5.821883,-3.309443,9.187266],[6.387757,2.481428,5.895361,-7.263004,0.247131,2.018130,7.574052,-3.573595,9.179287,8.587080]],[[-6.372130,-5.657183,-9.350034,-2.783591,5.515214,9.423109,7.105250,0.357140,-3.802398,-7.921233],[5.458469,0.704122,9.321496,-2.866689,-2.279545,5.046877,-2.371044,-0.745009,-8.582159,4.208749],[-7.996395,3.246170,2.214486,-7.342191,-8.823158,-0.012959,-8.652484,-6.894146,9.131552,-3.316719],[8.170355,-9.814943,3.826859,-6.439059,9.236482,3.221023,2.952169,-0.925710,-0.138819,-9.895467],[3.019216,-4.186207,-4.949361,1.859907,-7.164322,-5.874970,6.420226,5.031309,6.266923,7.262207],[6.296304,-4.151732,9.576605,-0.911991,5.503002,-0.708953,9.263237,-8.452583,5.015088,9.536270],[0.518225,4.395159,0.668925,3.445112,8.417097,4.298055,-7.206437,1.711294,-3.170797,8.441089],[-0.845381,0.766944,-4.615676,4.401386,6.681572,4.913826,-6.593209,-2.461417,3.778621,-5.511637],[-2.889198,-9.339382,3.513196,-9.058358,3.860347,8.830704,0.714221,7.912661,-9.650692,6.953869]]], dtype = "float32")#candidate|1032|(15, 9, 10)|const|float32
uop_1033 = relay.tan(const_1032.astype('float32')) # shape=(15, 9, 10)
func_707_call = mod.get_global_var('func_707')
func_711_call = mutated_mod.get_global_var('func_711')
const_1037 = relay.const([[2.458918,8.198923,3.998935,-4.004704,-8.599437,3.248786,0.511243,-4.321757,-1.209106,-2.232055,4.181493,3.969230,3.677000,5.415938,8.071779,2.668622,2.986678,3.354370,9.143865,-6.436663,-3.840963,-1.894782,-8.252267,-0.502093,4.902611,6.512593,2.676773,-4.125314,-6.698697,-9.584951,-2.885000,-9.446390,2.759841,7.583833,7.608207,-5.171781,4.854708,3.277094,8.991970,-2.766339,-5.869088,-3.441621,-2.588146,-1.826616,-5.567262,8.275665,-5.172654,8.783179,9.724444,9.044617,-5.835481,-7.315293,-4.388942,8.676714,-7.294307,8.071619,-6.472054,-8.287018,-7.177403,1.672379,-4.478699,-2.717160,-8.692691,-7.660448,-6.261788,9.456660,5.140350,-3.969056,0.961311,4.423137,8.389940,8.223956,-6.610480,4.088111,-3.181191,-9.140935,3.521784,-4.691275],[-4.727021,8.237277,-4.066293,7.971952,-2.784574,8.130150,7.937970,6.653812,7.982474,-0.585606,1.791929,4.968196,-7.549649,-1.626212,-2.776597,-5.829740,8.227813,9.223338,-5.420340,4.820377,-3.318197,-1.997799,1.625707,-3.656611,-1.299648,5.214515,-6.878754,-9.938502,-1.204917,-2.517788,5.467715,4.129363,-7.342330,-7.208430,9.507193,-8.828268,-4.697142,9.936936,-3.927384,1.361086,0.768405,-2.709174,4.382521,-1.746365,8.046097,-1.065184,1.317367,5.220285,-5.020831,-1.640152,7.677995,8.293767,-6.172001,-5.416060,-5.646109,0.676784,-4.428647,-8.185038,-9.553143,5.926655,4.000993,-3.314845,6.069437,4.658906,1.318319,1.807713,-2.612293,5.785379,6.125954,2.883333,1.112336,3.128176,2.920805,4.422376,2.922079,9.699528,-6.120101,3.553896],[-9.742756,3.701146,2.462326,-9.672616,3.559615,-6.655206,7.625832,-2.058201,-4.256725,-4.487770,7.634859,-9.838529,-2.368156,-1.313618,1.686239,-0.288471,-7.384481,-7.539982,-1.155604,6.541932,-9.896686,7.476638,8.829337,-2.979812,2.089258,5.054651,-4.677434,5.426323,-7.705155,6.779241,-0.430561,8.705633,2.113519,-0.495918,-5.039932,7.568625,8.105608,9.153347,-2.881193,-3.911648,-1.129329,7.698467,8.044704,-1.179413,-0.694407,-2.539748,3.191716,8.186517,3.054569,7.525340,6.086523,-5.017635,8.051499,7.664301,9.420808,2.542573,-0.575843,-9.047040,-1.207746,4.236845,-7.365778,0.712349,2.373756,-8.041133,-5.023115,-6.039138,-2.474057,-1.062655,-0.432435,0.944567,7.773339,-1.165006,7.800974,-8.637700,0.129490,-8.475050,9.402013,3.993911],[-5.191913,1.822541,6.106040,-4.111372,-2.731651,9.894411,5.830146,-7.728008,-2.929531,-0.618978,6.968467,5.590541,-6.536647,-7.559704,1.249267,-0.922036,6.176645,-3.823054,1.982660,-6.440196,8.320231,5.686016,-3.405238,7.721566,-7.448030,4.884398,-3.087130,-1.437991,-5.079438,-0.092843,-5.642564,-4.077495,-6.395041,4.323678,1.942835,1.053182,7.839250,6.470459,-9.099688,-8.719004,-5.685063,-3.070966,-2.610877,0.222614,6.713460,-5.455401,-2.008678,5.317730,8.211766,4.398363,-3.697265,7.333952,1.879754,-7.352087,-8.432165,-0.760719,-1.685673,8.973160,6.086606,4.639147,0.710865,-0.198953,-5.395668,-9.455617,-5.107578,4.590912,3.311495,6.060653,6.717505,-7.481611,-2.825712,7.919347,-3.119148,-4.009812,9.576864,-5.986890,4.428998,0.773952],[4.441808,-5.069612,7.892989,-8.336949,-0.760941,8.497452,5.231019,0.040261,-1.449663,-3.224127,-9.343079,-7.332436,3.756900,-0.585790,7.303360,-9.058401,0.610826,5.216101,-6.012784,7.512229,4.765820,2.620571,1.197692,-1.642433,0.485567,-3.177318,9.547115,6.375897,6.961055,-8.617985,4.639459,7.178069,2.537535,7.748734,2.454427,-6.631256,5.124310,9.395749,3.079212,-9.059604,2.032253,-4.288661,6.309929,9.297433,0.156689,-0.244327,-6.165655,4.948964,-8.880749,-1.213861,-6.202858,-4.497515,-9.284707,-8.988215,4.781019,-4.705384,6.036991,-9.696549,-3.408036,8.829659,3.922485,5.245131,-3.854875,1.370326,2.449002,-4.924752,-2.784374,-0.999791,-6.273675,-2.650539,1.722778,-2.756908,3.280951,-1.931141,-8.958666,8.466562,1.997397,-9.291753],[-6.938512,-9.358246,1.364113,9.309124,6.091564,-4.411166,-5.800503,9.765274,1.366843,-7.663288,-2.056497,-5.325227,-7.172895,-9.336715,-3.002736,9.232682,-5.567385,6.073891,-6.060352,-9.357217,-4.720797,-9.216713,3.540035,-1.502370,4.189516,-9.178440,8.759156,7.875681,-6.907873,9.805918,-0.243769,6.590729,-9.401975,-3.255588,4.874353,-6.232900,8.073770,-7.776578,4.527667,9.630901,4.334642,-9.223333,-8.899564,1.801567,-6.136816,-4.422280,5.297531,0.137424,-3.664107,1.411157,-5.594718,6.990884,-7.564848,7.014764,-5.043614,-8.315075,-5.045311,4.327619,-2.142779,5.417467,6.351101,5.656504,-7.646120,4.283952,-3.168949,-8.082633,-9.295873,-9.185972,-4.479486,-8.494616,-0.798653,-1.793265,-5.874133,-1.297304,-9.280825,1.876798,8.363427,4.456602],[0.314224,-6.640887,4.346281,2.712662,-8.971173,-2.544670,2.401197,0.555932,0.766325,-2.784081,1.458962,0.525448,-5.820437,-8.193572,6.532059,2.121229,-8.471110,8.899508,3.457121,4.338007,-7.244202,-2.109115,8.219555,-0.305638,8.989637,-5.669051,2.785638,7.625007,-0.678455,3.337853,5.303357,-2.962112,-4.619196,4.991736,-3.204894,4.071849,-4.083281,-6.929964,7.432416,-8.867322,8.911794,-6.884072,-3.375800,5.654380,5.900185,4.555713,8.564242,-4.426288,1.255718,2.934008,-1.754488,-9.618819,-5.556622,-9.049236,0.025273,8.143276,5.941631,8.743763,2.098849,-2.472929,8.265909,9.860731,-5.748046,-5.891817,3.200892,7.063595,-9.604069,-7.295765,0.510803,3.253860,9.799094,9.297777,-8.053904,2.519226,5.416471,-1.353585,4.829561,-8.978043]], dtype = "float32")#candidate|1037|(7, 78)|const|float32
const_1038 = relay.const([-4,-4,2,-6,-1,-10,10,-5,1,3,3,-8,-5,3,7,7,8,8,9,3,-4,4,2,-8,-1,7,-6,8,-5,-7,-10,8,6,-8,-7,-6,-5,-8,8,-1,8,6,10,7,-6,10,9,-5,-3,3,-5,4,9,-8,7,-9,-5,8,8,3,-2,-1,-2,-9,1,-4,10,6,-9,6,4,-8,10,-6,-3,-4,3,-7,4,-9,-5,1,2,-5,-4,4,6,-8,-10,-5,-3,-10,-4,1,-1,3,5,1,3,-8,-7,-6,-6,9,9,1,-5,-8,5,9,2,-2,-7,-4,-9,9,5,-10,8,-9,5,8,-2,-9,8,5,-9,6,-1,8,5,7,1,-2,-9,7,-2,6,-1,-1,4,-8,-2,-10,-5,7,6,-9,-3,9,4,8,8,8,-10,10,-4,6,1,2,-6,7,3,10,-6,10,2,-6,1,-2,4,4,10,-7,-7,8,-6,-3,10,-6,2,-6,1,5,-7,-4,10,-8,-7,-1,4,8,-2,-10,6,-9,-2,-1,9,9,-6,5,-1,4,10,4,5,-5,-5,-1], dtype = "uint64")#candidate|1038|(210,)|const|uint64
call_1036 = relay.TupleGetItem(func_707_call(relay.reshape(const_1037.astype('float32'), [7, 6, 13]), relay.reshape(const_1038.astype('uint64'), [210,]), ), 1)
call_1039 = relay.TupleGetItem(func_711_call(relay.reshape(const_1037.astype('float32'), [7, 6, 13]), relay.reshape(const_1038.astype('uint64'), [210,]), ), 1)
func_245_call = mod.get_global_var('func_245')
func_249_call = mutated_mod.get_global_var('func_249')
const_1042 = relay.const([-2,7,2,4,-4,-6,6,-2,3,-6,2,3,7,7,10,5,-6,-3,8,10,6,-8,3,7,-9,-1,2,-8,-5,-10,10,-1,2,5,-9,9,-8,10,-8,-9,9,7,3,-8,-2,-5,8,9,10,-7,8,6,4,7,-2,8,-6,3,-2,-8,-3,-9,1,-8,-3,-9,4,6,1,9,-10,7,2,5,-10,10,-8,-4,-6,-9,1,9,5,-3,-9,-4,-9,-6,10,5,-6,5,2,4,-2,-9,3,8,1,8,6,-8,-2,4,-6,2,-5,-8,4,7,5,1,-3,-7,2,6,-9,3,-9,-1,-7,8,8,1,10,-10,-5,4,-3,2,-8,5,3,7,4,-8,1,-5,4,4,3,10,6,5,4,-5,8,-10,-8,2,6,-5,9,-9,7,8,7,7,9,5,1,-8,9,-9,-6,1,2,3,5,6,-5,-1,10,10,-3,-5,-4,-3,-10,4,-5,9,8,-1,-6,-6,-1,5,-8,-3,1,-5,-2,2,3,9,8,7,2,2,5,8,6,7,2,4,9,-8,10,-4,-5,-10,3,-10,5,2,9,-6,-5,6,-3,9,-10,3,-9,2,10,-9,-1,-7,-9,8,8,3,-7,1,9,-3,10,-10,5,-5,4,-7,10,-3,2,9,5,5,2,3,-7,2,-4,-8,-4,3,4,-5,3,-5,9,-7,7,6,10,-1,-8,6,-5,3,7,9,6,-6,-2,-6,-7,5,8,3,1,-7,-7,4,-7,-1,-3,-6,6,9,-2,-9,1,3,7,7,8,-8,-7,8,9,10,2,2,7,6,-10,8,-10,1,7,-5,2,-1,-6,-4,-8,7,-10,6,2,-9,-6,2,-8,-3,-10,1,2,2,-10,-2,-1,-6,10,8,-3,-2,4,7,8,-8,-6,2,-10,5,1,8,-10,2,-6,10,7,-10,-8,6,5,-6,-4,1,5,4,5,7,-6,-5,-9,-2,9,-1,9,2,-1,6,-1,7,-5,3,3,-7,-6,1,-7,4,-7,10,-2,1,-5,7,6,-1,9,2,3,-10,10,-6,6,-3,-7,-10,-7,10,-2,7,5,10,3,5,-9,-5,-8,-6,-3,9,1,-6,-4,2,7,3,-9,-5,3,6,-7,-1,-4,-1,-5,4,2,4,-10,4,-6,-9,-10,-5,6,-6,-4,10,-3,4,3,-4,10,3,-4,9,-3,-5,5,-7,3,6,10,7,8,3,-9,-8,-5,-9,7,-7,8,-5,-1,-6,6,4,-9,-1,-2,8,-1,10,-7,-3,7,-5,3,8,2,10,5,6,-7,-10,-3,-8,-3,10,-9,4,-4,-1,-1,-1,-4,-5,-5,2,9,-10,-8,-9,-9,3,-4,4,-8,-5,5,-5,6,-7,-10,4,-8,-6,-5,9,5,-9,-9,-9,9,7,9,-2,-2,8,5,1,-6,-4,-3,-4,5,9,8,10,-1,1,8,9,-2,2,-10,-5,-2,-7,9,3,-5,-7,-10,10,5,3,7,-5,-8,-8,-2,5,1,-8,3,6,6,1,-4,7,-4,-5,4,-2,9,-1,7,6,7,-10,-7,-8,-4,9,2,7,8,-9,-6,-5,4,-5,-1,7,-6,8,-5,-6,-5,-7,5,-3,8,5,4,8,-7,9,5,-6,4,4,-10,10,-7,2,-9,-5,10,10], dtype = "uint64")#candidate|1042|(630,)|const|uint64
call_1041 = relay.TupleGetItem(func_245_call(relay.reshape(const_1038.astype('uint64'), [15, 1, 14]), relay.reshape(const_1042.astype('uint64'), [15, 3, 14]), relay.reshape(const_1042.astype('uint64'), [15, 3, 14]), ), 1)
call_1043 = relay.TupleGetItem(func_249_call(relay.reshape(const_1038.astype('uint64'), [15, 1, 14]), relay.reshape(const_1042.astype('uint64'), [15, 3, 14]), relay.reshape(const_1042.astype('uint64'), [15, 3, 14]), ), 1)
func_933_call = mod.get_global_var('func_933')
func_935_call = mutated_mod.get_global_var('func_935')
const_1046 = relay.const([-1.553702,0.562546,1.785948,-9.708390,-5.084228,4.089169,-4.537134,-8.419267,-2.615814,6.766889,5.889408,-7.713402,5.375608,2.685107,9.648945,-8.463678,5.548376,-1.184551,8.281224,-9.797927,-0.185900,-9.395691,-6.707226,3.774471,8.045660,-6.348163,-1.000002,-2.693812,6.451372,2.248180,-3.420887,-3.981841,3.149991,8.114069,8.925992,-3.870479,5.633971,-3.752061,9.174674,-2.895199,3.696398,7.373928,-5.055135,3.083562,2.422925,-1.228151,-0.906155,-2.441528,-2.445531,-6.471596,8.940355,6.337247], dtype = "float64")#candidate|1046|(52,)|const|float64
call_1045 = relay.TupleGetItem(func_933_call(relay.reshape(const_1046.astype('float64'), [4, 1, 13])), 0)
call_1047 = relay.TupleGetItem(func_935_call(relay.reshape(const_1046.astype('float64'), [4, 1, 13])), 0)
output = relay.Tuple([uop_1033,call_1036,const_1037,const_1038,call_1041,const_1042,call_1045,const_1046,])
output2 = relay.Tuple([uop_1033,call_1039,const_1037,const_1038,call_1043,const_1042,call_1047,const_1046,])
func_1050 = relay.Function([], output)
mod['func_1050'] = func_1050
mod = relay.transform.InferType()(mod)
output = func_1050()
func_1051 = relay.Function([], output)
mutated_mod['func_1051'] = func_1051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1050_call = mod.get_global_var('func_1050')
func_1051_call = mutated_mod.get_global_var('func_1051')
call_1081 = relay.TupleGetItem(func_1050_call(), 1)
call_1082 = relay.TupleGetItem(func_1051_call(), 1)
func_707_call = mod.get_global_var('func_707')
func_711_call = mutated_mod.get_global_var('func_711')
var_1098 = relay.var("var_1098", dtype = "float32", shape = (7, 78))#candidate|1098|(7, 78)|var|float32
call_1097 = relay.TupleGetItem(func_707_call(relay.reshape(var_1098.astype('float32'), [7, 6, 13]), relay.reshape(call_1081.astype('uint64'), [210,]), ), 5)
call_1099 = relay.TupleGetItem(func_711_call(relay.reshape(var_1098.astype('float32'), [7, 6, 13]), relay.reshape(call_1081.astype('uint64'), [210,]), ), 5)
func_245_call = mod.get_global_var('func_245')
func_249_call = mutated_mod.get_global_var('func_249')
call_1102 = relay.TupleGetItem(func_245_call(relay.reshape(call_1081.astype('uint64'), [15, 1, 14]), relay.reshape(call_1097.astype('uint64'), [15, 3, 14]), relay.reshape(call_1097.astype('uint64'), [15, 3, 14]), ), 1)
call_1103 = relay.TupleGetItem(func_249_call(relay.reshape(call_1081.astype('uint64'), [15, 1, 14]), relay.reshape(call_1097.astype('uint64'), [15, 3, 14]), relay.reshape(call_1097.astype('uint64'), [15, 3, 14]), ), 1)
uop_1124 = relay.cosh(var_1098.astype('float64')) # shape=(7, 78)
uop_1126 = relay.sigmoid(uop_1124.astype('float32')) # shape=(7, 78)
func_933_call = mod.get_global_var('func_933')
func_935_call = mutated_mod.get_global_var('func_935')
var_1135 = relay.var("var_1135", dtype = "float64", shape = (1, 52))#candidate|1135|(1, 52)|var|float64
call_1134 = relay.TupleGetItem(func_933_call(relay.reshape(var_1135.astype('float64'), [4, 1, 13])), 0)
call_1136 = relay.TupleGetItem(func_935_call(relay.reshape(var_1135.astype('float64'), [4, 1, 13])), 0)
bop_1137 = relay.logical_or(uop_1126.astype('bool'), relay.reshape(var_1098.astype('bool'), relay.shape_of(uop_1126))) # shape=(7, 78)
output = relay.Tuple([call_1081,call_1097,call_1102,call_1134,var_1135,bop_1137,])
output2 = relay.Tuple([call_1082,call_1099,call_1103,call_1136,var_1135,bop_1137,])
func_1140 = relay.Function([var_1098,var_1135,], output)
mod['func_1140'] = func_1140
mod = relay.transform.InferType()(mod)
mutated_mod['func_1140'] = func_1140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mutated_mod.get_global_var('func_1140')
var_1142 = relay.var("var_1142", dtype = "float32", shape = (7, 78))#candidate|1142|(7, 78)|var|float32
var_1143 = relay.var("var_1143", dtype = "float64", shape = (1, 52))#candidate|1143|(1, 52)|var|float64
call_1141 = func_1140_call(var_1142,var_1143,)
output = call_1141
func_1144 = relay.Function([var_1142,var_1143,], output)
mutated_mod['func_1144'] = func_1144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1184 = relay.var("var_1184", dtype = "float64", shape = ())#candidate|1184|()|var|float64
var_1185 = relay.var("var_1185", dtype = "float64", shape = (1, 13, 9))#candidate|1185|(1, 13, 9)|var|float64
bop_1186 = relay.floor_mod(var_1184.astype('float64'), var_1185.astype('float64')) # shape=(1, 13, 9)
bop_1199 = relay.maximum(var_1184.astype('int8'), bop_1186.astype('int8')) # shape=(1, 13, 9)
output = bop_1199
output2 = bop_1199
func_1218 = relay.Function([var_1184,var_1185,], output)
mod['func_1218'] = func_1218
mod = relay.transform.InferType()(mod)
mutated_mod['func_1218'] = func_1218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1218_call = mutated_mod.get_global_var('func_1218')
var_1220 = relay.var("var_1220", dtype = "float64", shape = ())#candidate|1220|()|var|float64
var_1221 = relay.var("var_1221", dtype = "float64", shape = (1, 13, 9))#candidate|1221|(1, 13, 9)|var|float64
call_1219 = func_1218_call(var_1220,var_1221,)
output = call_1219
func_1222 = relay.Function([var_1220,var_1221,], output)
mutated_mod['func_1222'] = func_1222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1050_call = mod.get_global_var('func_1050')
func_1051_call = mutated_mod.get_global_var('func_1051')
call_1226 = relay.TupleGetItem(func_1050_call(), 5)
call_1227 = relay.TupleGetItem(func_1051_call(), 5)
output = call_1226
output2 = call_1227
func_1249 = relay.Function([], output)
mod['func_1249'] = func_1249
mod = relay.transform.InferType()(mod)
mutated_mod['func_1249'] = func_1249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1249_call = mutated_mod.get_global_var('func_1249')
call_1250 = func_1249_call()
output = call_1250
func_1251 = relay.Function([], output)
mutated_mod['func_1251'] = func_1251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1050_call = mod.get_global_var('func_1050')
func_1051_call = mutated_mod.get_global_var('func_1051')
call_1271 = relay.TupleGetItem(func_1050_call(), 2)
call_1272 = relay.TupleGetItem(func_1051_call(), 2)
uop_1299 = relay.erf(call_1271.astype('float64')) # shape=(7, 78)
uop_1301 = relay.erf(call_1272.astype('float64')) # shape=(7, 78)
output = relay.Tuple([uop_1299,])
output2 = relay.Tuple([uop_1301,])
func_1304 = relay.Function([], output)
mod['func_1304'] = func_1304
mod = relay.transform.InferType()(mod)
output = func_1304()
func_1305 = relay.Function([], output)
mutated_mod['func_1305'] = func_1305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1249_call = mod.get_global_var('func_1249')
func_1251_call = mutated_mod.get_global_var('func_1251')
call_1316 = func_1249_call()
call_1317 = func_1249_call()
output = call_1316
output2 = call_1317
func_1343 = relay.Function([], output)
mod['func_1343'] = func_1343
mod = relay.transform.InferType()(mod)
output = func_1343()
func_1344 = relay.Function([], output)
mutated_mod['func_1344'] = func_1344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1304_call = mod.get_global_var('func_1304')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_1364 = relay.TupleGetItem(func_1304_call(), 0)
call_1365 = relay.TupleGetItem(func_1305_call(), 0)
var_1398 = relay.var("var_1398", dtype = "float64", shape = (7, 78))#candidate|1398|(7, 78)|var|float64
bop_1399 = relay.floor_mod(call_1364.astype('float32'), relay.reshape(var_1398.astype('float32'), relay.shape_of(call_1364))) # shape=(7, 78)
bop_1402 = relay.floor_mod(call_1365.astype('float32'), relay.reshape(var_1398.astype('float32'), relay.shape_of(call_1365))) # shape=(7, 78)
func_1218_call = mod.get_global_var('func_1218')
func_1222_call = mutated_mod.get_global_var('func_1222')
var_1410 = relay.var("var_1410", dtype = "float64", shape = ())#candidate|1410|()|var|float64
var_1411 = relay.var("var_1411", dtype = "float64", shape = (117,))#candidate|1411|(117,)|var|float64
call_1409 = func_1218_call(relay.reshape(var_1410.astype('float64'), []), relay.reshape(var_1411.astype('float64'), [1, 13, 9]), )
call_1412 = func_1218_call(relay.reshape(var_1410.astype('float64'), []), relay.reshape(var_1411.astype('float64'), [1, 13, 9]), )
func_1140_call = mod.get_global_var('func_1140')
func_1144_call = mutated_mod.get_global_var('func_1144')
var_1417 = relay.var("var_1417", dtype = "float64", shape = (52,))#candidate|1417|(52,)|var|float64
call_1416 = relay.TupleGetItem(func_1140_call(relay.reshape(bop_1399.astype('float32'), [7, 78]), relay.reshape(var_1417.astype('float64'), [1, 52]), ), 1)
call_1418 = relay.TupleGetItem(func_1144_call(relay.reshape(bop_1399.astype('float32'), [7, 78]), relay.reshape(var_1417.astype('float64'), [1, 52]), ), 1)
func_1140_call = mod.get_global_var('func_1140')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_1423 = relay.TupleGetItem(func_1140_call(relay.reshape(var_1398.astype('float32'), [7, 78]), relay.reshape(var_1417.astype('float64'), [1, 52]), ), 0)
call_1424 = relay.TupleGetItem(func_1144_call(relay.reshape(var_1398.astype('float32'), [7, 78]), relay.reshape(var_1417.astype('float64'), [1, 52]), ), 0)
uop_1426 = relay.sqrt(bop_1399.astype('float64')) # shape=(7, 78)
uop_1428 = relay.sqrt(bop_1402.astype('float64')) # shape=(7, 78)
func_245_call = mod.get_global_var('func_245')
func_249_call = mutated_mod.get_global_var('func_249')
call_1439 = relay.TupleGetItem(func_245_call(relay.reshape(call_1423.astype('uint64'), [15, 1, 14]), relay.reshape(call_1416.astype('uint64'), [15, 3, 14]), relay.reshape(call_1416.astype('uint64'), [15, 3, 14]), ), 2)
call_1440 = relay.TupleGetItem(func_249_call(relay.reshape(call_1423.astype('uint64'), [15, 1, 14]), relay.reshape(call_1416.astype('uint64'), [15, 3, 14]), relay.reshape(call_1416.astype('uint64'), [15, 3, 14]), ), 2)
output = relay.Tuple([call_1409,var_1410,var_1411,call_1416,var_1417,call_1423,uop_1426,call_1439,])
output2 = relay.Tuple([call_1412,var_1410,var_1411,call_1418,var_1417,call_1424,uop_1428,call_1440,])
func_1451 = relay.Function([var_1398,var_1410,var_1411,var_1417,], output)
mod['func_1451'] = func_1451
mod = relay.transform.InferType()(mod)
var_1452 = relay.var("var_1452", dtype = "float64", shape = (7, 78))#candidate|1452|(7, 78)|var|float64
var_1453 = relay.var("var_1453", dtype = "float64", shape = ())#candidate|1453|()|var|float64
var_1454 = relay.var("var_1454", dtype = "float64", shape = (117,))#candidate|1454|(117,)|var|float64
var_1455 = relay.var("var_1455", dtype = "float64", shape = (52,))#candidate|1455|(52,)|var|float64
output = func_1451(var_1452,var_1453,var_1454,var_1455,)
func_1456 = relay.Function([var_1452,var_1453,var_1454,var_1455,], output)
mutated_mod['func_1456'] = func_1456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1304_call = mod.get_global_var('func_1304')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_1464 = relay.TupleGetItem(func_1304_call(), 0)
call_1465 = relay.TupleGetItem(func_1305_call(), 0)
func_1304_call = mod.get_global_var('func_1304')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_1471 = relay.TupleGetItem(func_1304_call(), 0)
call_1472 = relay.TupleGetItem(func_1305_call(), 0)
output = relay.Tuple([call_1464,call_1471,])
output2 = relay.Tuple([call_1465,call_1472,])
func_1473 = relay.Function([], output)
mod['func_1473'] = func_1473
mod = relay.transform.InferType()(mod)
output = func_1473()
func_1474 = relay.Function([], output)
mutated_mod['func_1474'] = func_1474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1050_call = mod.get_global_var('func_1050')
func_1051_call = mutated_mod.get_global_var('func_1051')
call_1522 = relay.TupleGetItem(func_1050_call(), 2)
call_1523 = relay.TupleGetItem(func_1051_call(), 2)
var_1534 = relay.var("var_1534", dtype = "float32", shape = (7, 78))#candidate|1534|(7, 78)|var|float32
bop_1535 = relay.left_shift(call_1522.astype('int8'), relay.reshape(var_1534.astype('int8'), relay.shape_of(call_1522))) # shape=(7, 78)
bop_1538 = relay.left_shift(call_1523.astype('int8'), relay.reshape(var_1534.astype('int8'), relay.shape_of(call_1523))) # shape=(7, 78)
var_1551 = relay.var("var_1551", dtype = "float32", shape = (7, 78))#candidate|1551|(7, 78)|var|float32
bop_1552 = relay.power(call_1522.astype('float32'), relay.reshape(var_1551.astype('float32'), relay.shape_of(call_1522))) # shape=(7, 78)
bop_1555 = relay.power(call_1523.astype('float32'), relay.reshape(var_1551.astype('float32'), relay.shape_of(call_1523))) # shape=(7, 78)
bop_1568 = relay.divide(var_1534.astype('float32'), relay.reshape(bop_1535.astype('float32'), relay.shape_of(var_1534))) # shape=(7, 78)
bop_1571 = relay.divide(var_1534.astype('float32'), relay.reshape(bop_1538.astype('float32'), relay.shape_of(var_1534))) # shape=(7, 78)
bop_1573 = relay.bitwise_or(bop_1552.astype('int64'), relay.reshape(var_1534.astype('int64'), relay.shape_of(bop_1552))) # shape=(7, 78)
bop_1576 = relay.bitwise_or(bop_1555.astype('int64'), relay.reshape(var_1534.astype('int64'), relay.shape_of(bop_1555))) # shape=(7, 78)
output = relay.Tuple([bop_1568,bop_1573,])
output2 = relay.Tuple([bop_1571,bop_1576,])
func_1581 = relay.Function([var_1534,var_1551,], output)
mod['func_1581'] = func_1581
mod = relay.transform.InferType()(mod)
mutated_mod['func_1581'] = func_1581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1581_call = mutated_mod.get_global_var('func_1581')
var_1583 = relay.var("var_1583", dtype = "float32", shape = (7, 78))#candidate|1583|(7, 78)|var|float32
var_1584 = relay.var("var_1584", dtype = "float32", shape = (7, 78))#candidate|1584|(7, 78)|var|float32
call_1582 = func_1581_call(var_1583,var_1584,)
output = call_1582
func_1585 = relay.Function([var_1583,var_1584,], output)
mutated_mod['func_1585'] = func_1585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1343_call = mod.get_global_var('func_1343')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_1633 = func_1343_call()
call_1634 = func_1343_call()
func_1473_call = mod.get_global_var('func_1473')
func_1474_call = mutated_mod.get_global_var('func_1474')
call_1647 = relay.TupleGetItem(func_1473_call(), 1)
call_1648 = relay.TupleGetItem(func_1474_call(), 1)
func_1581_call = mod.get_global_var('func_1581')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_1655 = relay.TupleGetItem(func_1581_call(relay.reshape(call_1647.astype('float32'), [7, 78]), relay.reshape(call_1647.astype('float32'), [7, 78]), ), 0)
call_1656 = relay.TupleGetItem(func_1585_call(relay.reshape(call_1647.astype('float32'), [7, 78]), relay.reshape(call_1647.astype('float32'), [7, 78]), ), 0)
uop_1657 = relay.log(call_1655.astype('float64')) # shape=(7, 78)
uop_1659 = relay.log(call_1656.astype('float64')) # shape=(7, 78)
output = relay.Tuple([call_1633,call_1647,uop_1657,])
output2 = relay.Tuple([call_1634,call_1648,uop_1659,])
func_1662 = relay.Function([], output)
mod['func_1662'] = func_1662
mod = relay.transform.InferType()(mod)
output = func_1662()
func_1663 = relay.Function([], output)
mutated_mod['func_1663'] = func_1663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1249_call = mod.get_global_var('func_1249')
func_1251_call = mutated_mod.get_global_var('func_1251')
call_1716 = func_1249_call()
call_1717 = func_1249_call()
func_1581_call = mod.get_global_var('func_1581')
func_1585_call = mutated_mod.get_global_var('func_1585')
var_1726 = relay.var("var_1726", dtype = "float32", shape = (546,))#candidate|1726|(546,)|var|float32
call_1725 = relay.TupleGetItem(func_1581_call(relay.reshape(var_1726.astype('float32'), [7, 78]), relay.reshape(var_1726.astype('float32'), [7, 78]), ), 1)
call_1727 = relay.TupleGetItem(func_1585_call(relay.reshape(var_1726.astype('float32'), [7, 78]), relay.reshape(var_1726.astype('float32'), [7, 78]), ), 1)
output = relay.Tuple([call_1716,call_1725,var_1726,])
output2 = relay.Tuple([call_1717,call_1727,var_1726,])
func_1739 = relay.Function([var_1726,], output)
mod['func_1739'] = func_1739
mod = relay.transform.InferType()(mod)
mutated_mod['func_1739'] = func_1739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1740 = relay.var("var_1740", dtype = "float32", shape = (546,))#candidate|1740|(546,)|var|float32
func_1739_call = mutated_mod.get_global_var('func_1739')
call_1741 = func_1739_call(var_1740)
output = call_1741
func_1742 = relay.Function([var_1740], output)
mutated_mod['func_1742'] = func_1742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1662_call = mod.get_global_var('func_1662')
func_1663_call = mutated_mod.get_global_var('func_1663')
call_1757 = relay.TupleGetItem(func_1662_call(), 0)
call_1758 = relay.TupleGetItem(func_1663_call(), 0)
func_707_call = mod.get_global_var('func_707')
func_711_call = mutated_mod.get_global_var('func_711')
const_1771 = relay.const([[6.797236],[3.154516],[-9.997686],[9.963889],[-8.789711],[2.725644],[6.379096],[8.790139],[-9.768573],[-7.388302],[9.483100],[-0.513879],[6.084826],[7.488583],[0.333451],[-1.022134],[-5.306883],[-0.819694],[-7.238145],[4.627757],[5.099745],[6.417894],[-4.560488],[-4.111618],[-3.264637],[-4.843283],[2.446732],[-9.470421],[-3.789184],[8.621268],[-5.718047],[-0.547938],[8.933848],[-8.372039],[-9.926806],[-9.975557],[-2.310846],[-5.799420],[-1.755331],[-6.184622],[-0.070603],[-5.733031],[5.152187],[-9.378893],[-2.115381],[2.979892],[-7.100443],[4.853950],[1.794590],[9.020846],[-1.606491],[1.793822],[3.041729],[7.056169],[-9.708128],[8.946685],[-3.026915],[2.725257],[-5.533456],[7.268323],[4.012395],[6.998363],[-2.850283],[1.876653],[-8.470302],[8.951181],[-8.436948],[-8.666782],[8.806265],[9.980544],[0.386178],[-9.661193],[-8.706922],[9.328767],[0.313213],[5.257295],[0.583923],[-6.707137],[-5.363597],[7.083600],[-0.072133],[7.707786],[-9.923966],[5.113162],[9.972862],[8.263063],[3.478726],[1.185824],[2.472618],[-2.240381],[9.082298],[6.655231],[-4.863688],[5.655077],[1.613864],[-9.449152],[3.940064],[-1.262999],[5.921954],[0.973632],[-0.302853],[6.591097],[-6.724316],[6.571519],[4.842534],[8.779676],[-4.208855],[7.186298],[-8.651028],[2.862409],[-0.359185],[-4.125519],[7.090897],[9.291961],[-5.825108],[7.202400],[3.934395],[-3.751905],[7.562887],[-7.819464],[2.527453],[-7.558719],[-6.576334],[-8.259436],[-9.180099],[6.277709],[2.262058],[-2.037705],[-8.706332],[2.142682],[1.366468],[-9.532146],[7.303850],[-9.245945],[-2.510570],[6.500055],[-5.246267],[5.164833],[-3.287006],[-8.114589],[8.469146],[6.209258],[3.644055],[3.241386],[3.205953],[-3.268599],[-8.673323],[6.287825],[6.674618],[-0.058657],[-4.192899],[9.424969],[4.913643],[-7.377403],[-8.009683],[-3.634825],[-2.186193],[4.471584],[-2.303509],[2.458954],[2.735973],[-8.973492],[-2.440673],[-0.809014],[6.302675],[-0.078623],[-3.055658],[0.793447],[-7.826745],[1.612053],[-6.942880],[2.423481],[9.089076],[-2.547844],[4.444090],[7.283836],[3.291185],[-6.009242],[-0.316544],[6.812282],[-9.190150],[2.822685],[7.513639],[-6.187537],[-3.081848],[-7.558450],[-1.265752],[6.121184],[-6.979708],[9.459688],[-3.165679],[3.825327],[-2.627680],[7.954861],[-4.823303],[-3.980127],[-2.726224],[9.119897],[-2.477796],[-2.399382],[-0.134796],[5.219702],[-9.760950],[-4.627343],[-4.368247],[-6.536059],[0.085125],[-3.968789],[-8.966386],[-4.420199],[-1.454860],[7.468886],[-7.603305],[-3.796489],[-1.042873],[-0.108500],[-2.421274],[9.892878],[-3.733147],[4.518738],[3.733828],[6.294840],[7.380827],[-4.338890],[-6.770837],[-9.555696],[-6.258331],[4.920010],[0.072791],[1.270377],[-0.729937],[-5.244226],[-5.220604],[8.757192],[8.920470],[9.869394],[4.361293],[9.489512],[8.749383],[-0.924007],[-6.032338],[-1.735300],[-9.817607],[-6.336494],[-3.687678],[4.431872],[0.231400],[3.986438],[-0.262980],[-0.775718],[0.819493],[-6.899996],[9.644307],[-0.799636],[-5.485642],[-1.913329],[1.890630],[0.371949],[-3.156822],[9.755795],[3.563033],[-1.660858],[-4.629265],[-3.242074],[-8.128947],[4.941630],[1.942648],[-5.264222],[9.614386],[4.103128],[5.137191],[8.794618],[-8.172796],[-2.297193],[-7.948682],[4.845957],[4.171307],[-3.830659],[5.428174],[-9.206259],[4.277965],[-8.143234],[7.015864],[0.365139],[6.808330],[-0.391469],[-8.895649],[2.497514],[-4.652490],[-0.810437],[-5.030342],[4.144420],[1.845159],[6.362082],[-8.303951],[-6.656762],[2.997016],[-8.087771],[-6.413462],[-1.248833],[-5.196555],[-1.983039],[-2.789995],[-5.695897],[-1.148341],[9.283803],[-8.528517],[-2.939565],[-0.531925],[8.930379],[1.680601],[-2.130652],[-3.670503],[7.392068],[3.316580],[-9.644541],[3.424444],[-2.899840],[-0.417473],[-4.123335],[6.363296],[6.281527],[-1.147824],[1.105888],[-7.658316],[-0.839306],[0.071301],[-1.796155],[5.134683],[-2.330433],[6.768640],[2.641436],[3.641776],[-0.025212],[-0.750995],[-0.773070],[-3.104288],[5.010909],[7.945125],[2.826027],[4.506475],[1.956503],[2.278112],[-1.699274],[-2.932276],[7.088072],[4.346661],[-8.746640],[-9.922939],[1.453714],[6.597607],[5.933253],[0.562387],[8.092599],[6.488424],[-3.998457],[-6.834454],[6.162118],[-0.114765],[-1.659797],[-3.151498],[-3.356269],[-2.321296],[3.188283],[-8.639639],[8.156917],[-9.437370],[1.108364],[-6.367725],[9.437364],[-6.088417],[-1.381657],[7.324677],[-4.445920],[-2.912164],[-8.901261],[-0.837650],[-8.032322],[6.809716],[4.277939],[-7.348252],[-0.657599],[9.863273],[8.873302],[-8.100177],[-3.915291],[-6.849010],[5.743702],[-9.039639],[8.745721],[-1.736561],[-8.408238],[4.628230],[-8.115072],[-3.407725],[-0.767608],[-8.127954],[6.047353],[-6.628050],[5.182264],[8.466111],[7.833197],[0.380190],[-9.195815],[-2.446489],[-9.780850],[3.378129],[8.739003],[4.425383],[-3.913673],[-8.839904],[3.170300],[9.961990],[-4.754389],[0.979883],[-7.790477],[8.862960],[-3.418502],[-5.870303],[9.778836],[5.049176],[0.938279],[-1.373555],[4.913092],[-3.036605],[9.191947],[-3.874369],[-3.727293],[4.043820],[0.232173],[-9.958148],[-2.641181],[-5.354104],[-9.978390],[7.498264],[7.438118],[8.107911],[8.548970],[-7.080048],[-0.750220],[-6.774420],[4.185248],[-8.481941],[-9.665526],[-1.304988],[-2.010671],[7.897896],[4.217146],[4.677182],[-3.006456],[3.148148],[3.855931],[8.710282],[-2.141674],[0.283110],[-6.090266],[-1.784199],[-0.278305],[4.580720],[-6.849265],[2.196165],[3.155569],[3.192748],[-3.415688],[-8.584652],[1.959934],[-8.466508],[1.582320],[-3.430596],[0.650380],[-6.865147],[7.351280],[9.169535],[8.775220],[1.965905],[5.680784],[-6.572835],[0.400960],[4.179274],[-5.018146],[4.148656],[1.682696],[7.964225],[0.224088],[-4.472216],[3.884947],[-4.302861],[8.336494],[0.693980],[1.787815],[-2.926145],[8.428587],[5.859944],[8.438800],[-9.035990],[-6.582980],[5.307930],[4.585373],[-2.419708],[-6.189883],[-1.849151],[8.026059],[8.036338],[-6.894128],[2.561193],[8.882655],[-3.622373],[-8.222163],[4.028875],[-4.288685],[-6.084376],[0.231801],[-3.764407],[-3.200645],[3.504088],[4.073727],[-2.366782],[2.913854],[5.778860],[-9.403447],[8.971911],[7.286936],[-2.156232],[7.054317],[9.381871],[2.738967],[-6.145941],[2.307954],[-8.837882],[-7.532557],[0.460699],[7.395250],[-1.377630],[1.267738],[-0.599531],[8.944810],[7.296915],[-4.889439],[-8.438960],[2.442593],[0.473361],[1.431185],[-6.632157],[0.657713],[-2.146557],[-0.563473]], dtype = "float32")#candidate|1771|(546, 1)|const|float32
const_1772 = relay.const([[8,-8,-9,6,-8,6,-4,-2,-8,8,4,-7,8,8,4,1,-9,2,2,2,8,-9,-9,-5,4,2,-1,-8,9,-2,-5,-6,10,10,3,-3,10,-7,-2,7,-8,-1,9,5,-5,-10,8,5,-3,3,9,-1,7,-1,10,5,8,-6,-7,-5,-8,3,3,7,4,-2,-5,3,10,-2,-3,-8,-3,8,-5,-2,-9,2,-2,-6,6,-9,-10,2,-8,10,-1,2,5,6,4,7,-1,-3,-6,9,-6,5,-3,-8,1,-2,-10,-8,6,-9,10,-4,-4,5,-6,4,-5,2,7,-6,-9,3,-5,-4,-3,-1,-8,-7,2,2,8,-3,-4,8,-4,10,-5,1,-1,10,10,10,-8,8,-1,-9,-6,-2,7,2,8,-5,4,-2,-2,1,-4,10,10,-4,-8,-3,-7,-5,-7,-8,-8,8,10,6,-2,6,2,10,3,4,-6,6,-2,-10,9,-3,-2,8,1,-5,-5,-9,-8,8,4,5,-10,5,-3,2,2,8,8,-5,-1,2,-3,2,1,-3,1,6,8,-3,6,-4,3,-4]], dtype = "uint64")#candidate|1772|(1, 210)|const|uint64
call_1770 = relay.TupleGetItem(func_707_call(relay.reshape(const_1771.astype('float32'), [7, 6, 13]), relay.reshape(const_1772.astype('uint64'), [210,]), ), 5)
call_1773 = relay.TupleGetItem(func_711_call(relay.reshape(const_1771.astype('float32'), [7, 6, 13]), relay.reshape(const_1772.astype('uint64'), [210,]), ), 5)
bop_1775 = relay.logical_xor(call_1770.astype('uint64'), relay.reshape(call_1757.astype('uint64'), relay.shape_of(call_1770))) # shape=(15, 3, 14)
bop_1778 = relay.logical_xor(call_1773.astype('uint64'), relay.reshape(call_1758.astype('uint64'), relay.shape_of(call_1773))) # shape=(15, 3, 14)
bop_1779 = relay.floor_divide(const_1771.astype('float32'), call_1757.astype('float32')) # shape=(546, 630)
bop_1782 = relay.floor_divide(const_1771.astype('float32'), call_1758.astype('float32')) # shape=(546, 630)
uop_1789 = relay.log(const_1771.astype('float64')) # shape=(546, 1)
func_707_call = mod.get_global_var('func_707')
func_711_call = mutated_mod.get_global_var('func_711')
call_1796 = relay.TupleGetItem(func_707_call(relay.reshape(const_1771.astype('float32'), [7, 6, 13]), relay.reshape(const_1772.astype('uint64'), [210,]), ), 0)
call_1797 = relay.TupleGetItem(func_711_call(relay.reshape(const_1771.astype('float32'), [7, 6, 13]), relay.reshape(const_1772.astype('uint64'), [210,]), ), 0)
bop_1799 = relay.bitwise_or(uop_1789.astype('int32'), relay.reshape(const_1771.astype('int32'), relay.shape_of(uop_1789))) # shape=(546, 1)
bop_1802 = relay.logical_or(bop_1799.astype('bool'), call_1757.astype('bool')) # shape=(546, 630)
bop_1805 = relay.logical_or(bop_1799.astype('bool'), call_1758.astype('bool')) # shape=(546, 630)
func_1140_call = mod.get_global_var('func_1140')
func_1144_call = mutated_mod.get_global_var('func_1144')
var_1820 = relay.var("var_1820", dtype = "float64", shape = (52,))#candidate|1820|(52,)|var|float64
call_1819 = relay.TupleGetItem(func_1140_call(relay.reshape(bop_1799.astype('float32'), [7, 78]), relay.reshape(var_1820.astype('float64'), [1, 52]), ), 4)
call_1821 = relay.TupleGetItem(func_1144_call(relay.reshape(bop_1799.astype('float32'), [7, 78]), relay.reshape(var_1820.astype('float64'), [1, 52]), ), 4)
uop_1841 = relay.atanh(bop_1802.astype('float64')) # shape=(546, 630)
uop_1843 = relay.atanh(bop_1805.astype('float64')) # shape=(546, 630)
uop_1848 = relay.atan(uop_1789.astype('float64')) # shape=(546, 1)
output = relay.Tuple([const_1772,bop_1775,bop_1779,call_1796,call_1819,var_1820,uop_1841,uop_1848,])
output2 = relay.Tuple([const_1772,bop_1778,bop_1782,call_1797,call_1821,var_1820,uop_1843,uop_1848,])
func_1850 = relay.Function([var_1820,], output)
mod['func_1850'] = func_1850
mod = relay.transform.InferType()(mod)
mutated_mod['func_1850'] = func_1850
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1851 = relay.var("var_1851", dtype = "float64", shape = (52,))#candidate|1851|(52,)|var|float64
func_1850_call = mutated_mod.get_global_var('func_1850')
call_1852 = func_1850_call(var_1851)
output = call_1852
func_1853 = relay.Function([var_1851], output)
mutated_mod['func_1853'] = func_1853
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1867 = relay.var("var_1867", dtype = "uint32", shape = (15, 14, 7))#candidate|1867|(15, 14, 7)|var|uint32
var_1868 = relay.var("var_1868", dtype = "uint32", shape = (15, 14, 7))#candidate|1868|(15, 14, 7)|var|uint32
bop_1869 = relay.bitwise_xor(var_1867.astype('uint32'), relay.reshape(var_1868.astype('uint32'), relay.shape_of(var_1867))) # shape=(15, 14, 7)
bop_1876 = relay.logical_or(var_1867.astype('bool'), relay.reshape(var_1868.astype('bool'), relay.shape_of(var_1867))) # shape=(15, 14, 7)
output = relay.Tuple([bop_1869,bop_1876,])
output2 = relay.Tuple([bop_1869,bop_1876,])
func_1879 = relay.Function([var_1867,var_1868,], output)
mod['func_1879'] = func_1879
mod = relay.transform.InferType()(mod)
var_1880 = relay.var("var_1880", dtype = "uint32", shape = (15, 14, 7))#candidate|1880|(15, 14, 7)|var|uint32
var_1881 = relay.var("var_1881", dtype = "uint32", shape = (15, 14, 7))#candidate|1881|(15, 14, 7)|var|uint32
output = func_1879(var_1880,var_1881,)
func_1882 = relay.Function([var_1880,var_1881,], output)
mutated_mod['func_1882'] = func_1882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mod.get_global_var('func_1473')
func_1474_call = mutated_mod.get_global_var('func_1474')
call_1938 = relay.TupleGetItem(func_1473_call(), 0)
call_1939 = relay.TupleGetItem(func_1474_call(), 0)
func_1451_call = mod.get_global_var('func_1451')
func_1456_call = mutated_mod.get_global_var('func_1456')
const_1957 = relay.const(3.054845, dtype = "float64")#candidate|1957|()|const|float64
var_1958 = relay.var("var_1958", dtype = "float64", shape = (117,))#candidate|1958|(117,)|var|float64
var_1959 = relay.var("var_1959", dtype = "float64", shape = (52,))#candidate|1959|(52,)|var|float64
call_1956 = relay.TupleGetItem(func_1451_call(relay.reshape(call_1938.astype('float64'), [7, 78]), relay.reshape(const_1957.astype('float64'), []), relay.reshape(var_1958.astype('float64'), [117,]), relay.reshape(var_1959.astype('float64'), [52,]), ), 6)
call_1960 = relay.TupleGetItem(func_1456_call(relay.reshape(call_1938.astype('float64'), [7, 78]), relay.reshape(const_1957.astype('float64'), []), relay.reshape(var_1958.astype('float64'), [117,]), relay.reshape(var_1959.astype('float64'), [52,]), ), 6)
func_1879_call = mod.get_global_var('func_1879')
func_1882_call = mutated_mod.get_global_var('func_1882')
const_1963 = relay.const([-10,-3,5,-3,6,3,9,1,-2,10,-10,8,10,-8,-5,-2,-2,-6,-9,-4,-5,10,-3,-5,-3,4,9,3,4,-4,10,3,-3,1,-2,-6,3,10,-9,2,10,-7,-10,10,10,2,-2,-4,-8,8,9,6,1,10,8,4,-8,9,-1,-1,-7,-3,-9,-5,-1,6,6,-1,-5,7,-3,-3,1,-6,-3,3,9,8,-2,-5,-3,-2,3,5,6,-3,-2,7,-10,-6,-1,2,5,-10,-2,-8,7,5,-5,8,-4,-8,9,2,10,4,-6,-1,-8,-6,5,-7,-5,-10,7,-10,3,9,-5,3,8,-7,4,5,-9,2,6,4,-6,-2,6,-3,-1,-3,3,4,-1,-6,-8,-7,-4,9,-2,9,-9,10,4,6,-6,-2,3,10,6,1,9,-1,10,-10,4,2,-2,-1,-8,2,4,-2,-9,-2,-8,-10,-2,-9,2,-5,-1,-2,-9,-9,-9,-10,-4,-9,5,-9,6,-4,-2,-3,2,-1,-6,6,-5,2,-4,7,7,3,9,8,3,6,-5,-10,-8,8,5,9,6,3,6,-2,-8,-8,6,4,8,-5,-10,7,-7,10,-8,-1,10,8,6,2,4,-10,-6,2,-6,-6,-3,2,10,1,1,-4,-7,-1,-2,-4,-1,-9,-1,-10,7,3,10,7,7,6,1,1,4,-9,-4,-5,1,3,-2,-9,10,-8,-5,-8,4,-2,-6,10,-4,-10,-6,-3,-8,9,9,8,7,-10,10,7,-4,8,-4,1,9,-6,6,-2,-6,-4,-6,-6,8,-9,6,4,-7,-9,1,6,-3,7,-2,4,9,-4,-10,-9,-8,9,-6,-3,5,1,4,-10,-2,6,5,3,-8,8,-9,8,-7,3,-10,-6,8,5,-7,-1,-9,2,-9,-7,-1,-4,-5,-10,-9,-8,9,8,-1,3,5,4,3,7,10,8,2,-6,4,9,-10,4,1,9,4,-8,6,-2,-10,10,4,5,-9,3,6,-9,-1,6,-7,-3,-8,8,5,-4,1,-6,9,-1,4,-4,-7,7,-7,1,-9,-5,-5,3,-2,-6,-1,8,-6,8,4,-10,-6,3,9,7,8,9,2,-5,8,-9,-6,9,-7,-1,1,-6,-8,10,4,-9,7,8,-9,8,-6,6,-6,-3,-4,-8,6,3,4,3,-1,2,10,9,-5,-7,-6,1,10,6,8,10,-9,-8,-8,-3,-5,7,5,5,3,-8,-4,10,5,-9,-10,-7,-4,2,-7,-1,7,6,-1,1,2,4,2,-2,-10,8,-2,8,1,7,2,8,5,-3,-6,2,-6,4,10,3,-6,9,9,3,-5,5,10,1,9,2,8,3,-2,-2,-2,-2,9,8,9,7,4,5,7,-1,-10,4,-9,-4,4,5,2,-8,-1,10,-10,7,-8,9,-8,2,5,6,2,7,7,-4,1,1,-10,1,-7,-3,-1,-10,5,7,-7,6,-4,-5,-6,1,3,-9,-2,-3,1,3,8,-10,-5,-3,-3,-2,-1,-9,10,-4,1,-7,6,-3,-4,8,10,-5,7,1,-6,-7,2,5,6,-4,-3,-2,-1,-3,-9,-6,-8,-8,-10,7,2,6,9,-7,-9,4,1,10,-8,6,-3,-10,7,8,-7,-7,8,-4,-3,6,1,5,-5,-6,7,2,-8,2,2,-5,4,9,-3,3,-5,9,6,-10,6,-5,1,2,-10,5,6,-3,1,-4,-7,10,3,-8,3,1,-7,2,-4,7,1,-7,3,-9,2,-1,-10,10,10,6,7,3,-4,4,-1,3,5,1,10,4,-3,4,6,1,-4,-9,6,7,-7,9,1,2,-4,6,2,7,-5,-3,4,6,10,-1,9,6,8,-6,7,-7,-10,4,-4,-9,3,1,3,7,5,10,5,-10,1,-4,-3,-9,7,-4,8,2,-3,-1,10,-2,8,-9,-7,-8,4,-7,4,-9,-3,1,-6,3,6,10,3,-1,5,4,8,10,-3,-8,-7,7,1,1,3,-9,-1,-2,-2,-5,-2,8,-10,-9,-9,1,5,-6,-10,-4,-5,9,-1,-10,6,9,-4,-6,-5,-9,-4,-10,10,5,-5,2,-1,3,4,4,-9,-5,-10,-9,-8,9,9,-2,5,1,-8,9,-4,1,6,-5,8,7,-3,-3,5,4,9,-4,-5,4,10,3,8,9,1,8,-5,9,3,8,4,-3,2,-9,4,2,-9,-7,9,10,1,-1,-4,6,-10,7,-8,7,8,7,-1,8,-4,-4,1,4,1,10,-4,5,1,-10,-4,9,4,6,6,3,8,-4,-1,-1,-4,2,-5,3,-10,-5,1,6,1,-1,7,9,-3,-2,-9,-1,-4,-2,9,-5,10,5,5,9,5,-6,-5,-8,6,-5,5,-10,8,-7,7,7,-3,9,6,-7,7,5,-6,10,-5,1,-10,10,-2,6,1,9,6,4,-5,2,4,-3,10,-4,-10,-8,5,8,-5,1,8,7,-7,5,-2,5,4,-8,-3,3,9,-4,7,6,-8,7,-4,-9,7,-4,-1,-7,-8,3,-9,-5,-8,-7,-2,-9,9,-6,10,5,-9,8,-7,-9,2,-6,-8,1,9,1,10,-2,5,1,3,-5,-2,-6,-8,2,7,-10,9,9,9,1,-1,8,1,3,3,10,-3,-4,1,2,6,-3,5,-4,3,4,8,-1,-1,-5,-2,-2,1,-5,-4,10,-1,4,4,-8,3,2,6,-10,-8,3,-2,-5,1,-7,9,4,2,-3,7,-5,7,-2,1,-4,-9,-8,-2,-7,-5,7,-4,5,2,-6,1,-1,-1,3,-5,10,4,6,-3,8,-7,-3,9,-1,-5,-1,-8,-7,3,10,9,-3,-10,-8,2,-2,-2,-4,-2,-3,9,5,6,4,-2,-9,-4,3,-3,-8,8,6,2,2,-4,-3,8,-10,-8,4,-1,-4,-7,-3,-9,-5,-9,-8,10,7,6,9,-7,-10,5,6,9,5,6,-4,8,-3,-10,-8,-2,6,-6,-4,4,-8,8,-7,6,10,-1,-9,4,4,3,-4,-10,3,-5,-8,8,8,-2,10,-10,-9,5,-7,-8,-2,-6,5,9,1,2,-3,-7,-6,-9,-6,7,7,3,-2,7,-3,-2,-9,6,-7,1,-1,-2,-5,5,7,9,5,-9,7,3,-1,10,-8,-9,-7,6,9,6,8,-7,5,-10,-10,-9,9,6,-9,-9,5,3,-8,-1,-6,1,10,10,6,8,-10,-10,1,8,-4,-8,-5,-10,-1,-2,-2,10,2,9,-1,-3,-6,-10,1,-8,5,4,8,-2,9,-5,-6,-2,6,-6,10,7,-2,-4,7,8,9,-1,-7,5,7,-6,-6,3,4,6,1,-2,2,-8,10,-10,-9,6,-4,-4,1,-5,-10,7,-10,-8,8,-5,-7,-9,8,-4,10,5,-10,-2,10,-8,-8,4,9,8,-3,-10,-6,7,-10,-3,10,-2,-6,1,-4,6,-3,-9,-6,2,9,-2,-10,-1,10,1,-9,-10,7,-2,-10,2,-3,-8,7,-8,1,-3,7,-3,5,6,-7,10,-10,5,-5,5,-8,-4,-2,-1,-4,-8,-8,9,5,7,4,7,4,-5,-9,-4,3,1,-4,-10,7,-9,-9,8,6,7,5,-5,6,-7,-10,1,2,-1,-4,-5,9,6,4,1,9,1,9,-4,-8,1,3,3,6,2,-3,3,-2,-9,2,8,7,7,7,-1,2,5,4,9,-10,-9,7,-4,-10,-5,2,-6,-5,4,-4,-9,9,-2,-9,-4,-3,3,-7,-8,1,-1,-9,1,2,7,2,-4,9,-7,-8,-9,-6,-10,-1,-1,-4,-3,-1,-8,-2,1,-3,7,3,-2,5,-10,4,-3,8,7,-4,6,7,-10,-1,2,-8,-5,3,1,-9,-8,-3], dtype = "uint32")#candidate|1963|(1470,)|const|uint32
call_1962 = relay.TupleGetItem(func_1879_call(relay.reshape(const_1963.astype('uint32'), [15, 14, 7]), relay.reshape(const_1963.astype('uint32'), [15, 14, 7]), ), 1)
call_1964 = relay.TupleGetItem(func_1882_call(relay.reshape(const_1963.astype('uint32'), [15, 14, 7]), relay.reshape(const_1963.astype('uint32'), [15, 14, 7]), ), 1)
output = relay.Tuple([call_1938,call_1956,const_1957,var_1958,var_1959,call_1962,const_1963,])
output2 = relay.Tuple([call_1939,call_1960,const_1957,var_1958,var_1959,call_1964,const_1963,])
func_1970 = relay.Function([var_1958,var_1959,], output)
mod['func_1970'] = func_1970
mod = relay.transform.InferType()(mod)
mutated_mod['func_1970'] = func_1970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1970_call = mutated_mod.get_global_var('func_1970')
var_1972 = relay.var("var_1972", dtype = "float64", shape = (117,))#candidate|1972|(117,)|var|float64
var_1973 = relay.var("var_1973", dtype = "float64", shape = (52,))#candidate|1973|(52,)|var|float64
call_1971 = func_1970_call(var_1972,var_1973,)
output = call_1971
func_1974 = relay.Function([var_1972,var_1973,], output)
mutated_mod['func_1974'] = func_1974
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1991 = relay.var("var_1991", dtype = "float32", shape = (8, 4, 11))#candidate|1991|(8, 4, 11)|var|float32
uop_1992 = relay.sigmoid(var_1991.astype('float32')) # shape=(8, 4, 11)
func_1662_call = mod.get_global_var('func_1662')
func_1663_call = mutated_mod.get_global_var('func_1663')
call_1996 = relay.TupleGetItem(func_1662_call(), 2)
call_1997 = relay.TupleGetItem(func_1663_call(), 2)
func_1473_call = mod.get_global_var('func_1473')
func_1474_call = mutated_mod.get_global_var('func_1474')
call_1999 = relay.TupleGetItem(func_1473_call(), 1)
call_2000 = relay.TupleGetItem(func_1474_call(), 1)
func_1970_call = mod.get_global_var('func_1970')
func_1974_call = mutated_mod.get_global_var('func_1974')
var_2015 = relay.var("var_2015", dtype = "float64", shape = (117,))#candidate|2015|(117,)|var|float64
const_2016 = relay.const([[5.427489],[2.438998],[9.634774],[-6.820111],[-1.591330],[5.337858],[-8.289499],[-8.343282],[-2.508791],[1.647360],[0.374391],[-1.022758],[-5.180979],[9.297339],[8.647264],[-3.332381],[-2.446623],[-9.055176],[8.615114],[6.388917],[-8.595044],[4.977946],[0.376153],[5.752405],[1.172363],[6.178472],[-3.761482],[-9.545327],[8.224094],[9.317150],[9.125032],[8.154416],[-1.441371],[-5.617170],[-6.695364],[9.147750],[-4.139672],[9.273714],[-0.442145],[9.098116],[-6.068550],[-3.940652],[-4.163238],[0.241937],[0.507133],[-5.708521],[-6.347641],[-5.316710],[8.956391],[-0.990558],[3.053348],[-4.161018]], dtype = "float64")#candidate|2016|(52, 1)|const|float64
call_2014 = relay.TupleGetItem(func_1970_call(relay.reshape(var_2015.astype('float64'), [117,]), relay.reshape(const_2016.astype('float64'), [52,]), ), 5)
call_2017 = relay.TupleGetItem(func_1974_call(relay.reshape(var_2015.astype('float64'), [117,]), relay.reshape(const_2016.astype('float64'), [52,]), ), 5)
output = relay.Tuple([uop_1992,call_1996,call_1999,call_2014,var_2015,const_2016,])
output2 = relay.Tuple([uop_1992,call_1997,call_2000,call_2017,var_2015,const_2016,])
func_2022 = relay.Function([var_1991,var_2015,], output)
mod['func_2022'] = func_2022
mod = relay.transform.InferType()(mod)
mutated_mod['func_2022'] = func_2022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2022_call = mutated_mod.get_global_var('func_2022')
var_2024 = relay.var("var_2024", dtype = "float32", shape = (8, 4, 11))#candidate|2024|(8, 4, 11)|var|float32
var_2025 = relay.var("var_2025", dtype = "float64", shape = (117,))#candidate|2025|(117,)|var|float64
call_2023 = func_2022_call(var_2024,var_2025,)
output = call_2023
func_2026 = relay.Function([var_2024,var_2025,], output)
mutated_mod['func_2026'] = func_2026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1343_call = mod.get_global_var('func_1343')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_2034 = func_1343_call()
call_2035 = func_1343_call()
func_1739_call = mod.get_global_var('func_1739')
func_1742_call = mutated_mod.get_global_var('func_1742')
const_2040 = relay.const([[-9.080102,3.075719,4.166253,-0.304029,-6.079759,6.898212],[6.886994,2.225862,-6.861022,-1.523586,8.227562,-9.371798],[3.104089,-2.180921,4.361909,-6.282625,-4.391743,-9.465993],[-7.642262,-2.493621,2.489963,-2.736719,7.790994,-8.352677],[2.584672,8.086675,5.888133,9.550664,0.916278,-1.389593],[-7.907497,-4.221015,-8.719356,-5.631008,-1.216428,7.243203],[-0.998617,-1.796101,1.394329,-8.531702,6.735085,0.622317],[0.534484,2.296230,-9.936769,6.942920,-3.968931,9.651469],[-5.014334,-2.718824,-2.617346,-6.911419,8.540114,8.219337],[8.166575,7.560681,2.942284,0.942312,-2.691535,-8.548844],[-3.571855,6.743708,8.677828,2.045181,-5.675605,-3.459449],[5.154227,-0.728278,-0.190766,3.672159,5.859079,-4.515108],[0.252440,8.202802,6.792341,-8.014750,0.620086,-4.014619],[-5.322080,-6.799262,4.336925,-0.178140,4.548835,-2.096267],[-7.457655,-8.911761,-8.931406,-4.123469,-9.770938,8.365839],[8.508659,-9.713202,2.678470,-8.354618,-8.659968,2.073910],[6.887341,7.105821,-1.254181,-8.318045,0.517513,-2.336341],[-5.192544,-8.602289,-4.020325,-8.492728,5.729439,-7.998580],[8.792681,5.864739,6.637568,-7.275452,-0.155543,4.269492],[2.680864,9.728205,-3.332617,-7.114649,-7.562531,-6.662456],[1.519944,3.085084,0.429718,8.525684,-4.509484,-6.878830],[1.901601,-6.478415,-2.459768,-4.821931,-6.481000,4.443283],[4.477673,3.623299,-7.302481,-7.425318,-2.388045,-8.717894],[0.293723,-0.220772,-9.334826,4.139683,2.064588,4.696199],[-9.792180,3.394988,0.652030,8.315327,0.408502,5.475288],[-9.237142,9.867702,0.590377,-9.127991,0.387437,-5.148289],[-8.906991,-0.622780,9.856192,5.097867,5.682329,-4.535483],[3.235212,-9.631612,-2.812888,-3.949462,2.835583,9.104384],[-5.289520,-0.280646,7.379332,7.961411,-3.421547,2.987908],[-3.356179,8.309712,-6.950287,-7.324078,-1.462725,-6.952731],[-0.725004,4.700072,-6.730068,-5.696841,1.572871,-5.845351],[3.504479,-6.604669,8.261333,-4.597705,-7.399201,-9.132306],[4.457890,8.380051,3.835782,7.256046,-7.005241,1.136830],[8.658712,9.321255,-5.774592,6.160336,-9.735976,-9.827349],[-3.087780,3.872168,-1.687463,7.918975,-3.302059,6.756217],[-8.702953,-6.788124,-3.253014,9.234118,4.341095,-7.638793],[-1.906331,-7.695201,5.213542,6.498809,5.359092,-7.785335],[-6.440980,3.810600,-3.162759,-9.957847,5.131834,-2.378331],[-3.565670,-7.135474,-3.801286,-8.162075,-6.311168,5.886147],[1.126775,6.395402,8.455443,-6.543522,9.117311,0.064971],[9.423825,-4.392263,-3.178911,-7.672720,-5.203790,-3.280816],[4.788207,-0.160630,1.185027,3.846225,-6.290052,6.212019],[-5.995988,4.011890,-9.606029,-8.898394,-3.371193,-0.437361],[6.366668,9.265072,7.670469,-5.176746,-4.247915,5.309293],[6.962605,-2.474147,5.364057,0.926719,-0.419252,-7.288435],[9.675425,-2.337038,6.628979,-0.447069,5.399175,6.043861],[-2.833710,1.363108,-8.673123,-5.540999,0.414887,8.840038],[1.182643,-5.543920,7.309993,-5.755843,2.348255,-3.524806],[2.247186,4.606989,-3.541697,-8.044129,0.570072,-7.046922],[-3.913424,9.129796,0.860363,-5.945905,9.462438,-7.852771],[2.746022,-9.861839,7.181046,-0.030621,0.925047,8.403873],[-0.878011,-0.040967,1.594816,5.294180,-2.619458,5.230680],[4.374506,-2.893398,7.010845,9.790109,5.415763,5.721259],[-5.526194,7.013172,-4.257904,1.468673,-2.528713,-1.745293],[-0.960279,4.342059,-1.581497,5.082699,0.707019,-3.341521],[-5.400777,5.476662,5.852723,1.204545,-8.156792,-1.239427],[0.457882,6.314677,3.132932,-4.282329,1.568452,-9.282930],[-1.774344,9.371450,6.453703,-7.290482,9.105882,3.309939],[9.686630,-3.197486,-9.703052,-3.886679,6.622231,0.516905],[0.223835,-5.071412,-7.614327,-3.388597,-0.710835,-4.309664],[7.526509,-1.450437,-9.222195,-9.649831,-2.553764,-7.371333],[5.604191,-1.456299,-1.929280,2.989254,5.879377,8.428919],[1.909672,1.492013,4.329948,6.635081,-9.428835,-2.874731],[-3.076627,-0.876821,1.519016,1.155647,0.371212,5.537601],[1.121973,7.374100,4.999611,-2.073426,-7.952007,-6.902323],[0.752960,6.729976,4.185012,0.826825,-0.588364,-4.571761],[-0.379630,-9.202934,-9.028508,2.443707,-1.808455,-2.328337],[9.753445,-1.246761,-5.010417,-2.023545,1.361542,-8.675024],[6.467069,-6.080776,8.331438,6.803640,-1.022484,-1.486726],[-8.709504,-8.383280,-2.538473,-7.292380,-8.229817,-6.315196],[8.642923,-2.408926,-6.415495,-1.104250,-3.267927,2.136599],[1.937728,6.019932,-1.722803,-2.210970,-5.238927,0.956450],[-9.106708,-2.236482,1.424526,6.963557,8.395586,1.320965],[-1.982173,6.838668,-8.158717,1.213997,-6.614112,2.248915],[-3.300572,0.709004,-4.126135,3.171156,-8.320342,2.724928],[-2.094854,-8.710124,1.162471,5.702367,5.522126,-2.755858],[5.554225,-7.638730,6.627702,-8.376806,4.958747,-4.815434],[9.984734,-0.228827,2.478289,5.577374,5.362032,-5.677845],[7.449175,-2.855483,-4.531255,-0.696157,-6.412989,7.876169],[-6.595771,7.979533,2.821277,1.782899,-2.835951,-0.659961],[-7.977586,4.388031,-5.347944,-0.252095,-2.807774,-8.094329],[3.415685,-9.544726,0.052311,9.702537,-9.784497,-1.604486],[-8.428823,-5.826235,6.172421,1.196112,-7.342024,9.669523],[-5.737212,-5.408737,8.461964,7.536328,5.138325,-2.762709],[-9.071887,-7.130191,8.021293,-0.035470,-3.671871,-7.183879],[-1.784209,9.570454,-4.547487,7.215322,-6.518777,7.000061],[-7.889209,3.534128,1.662442,6.994774,6.298603,-8.642030],[-0.648336,1.383674,7.045917,-8.402240,3.848122,-0.998486],[5.226695,-5.859625,4.369131,8.201542,-7.674132,5.560782],[-7.047679,7.012855,-6.255797,-2.998857,4.957182,5.142400],[8.447269,-0.909255,-5.732097,9.307299,-6.009134,9.399517]], dtype = "float32")#candidate|2040|(91, 6)|const|float32
call_2039 = relay.TupleGetItem(func_1739_call(relay.reshape(const_2040.astype('float32'), [546,])), 2)
call_2041 = relay.TupleGetItem(func_1742_call(relay.reshape(const_2040.astype('float32'), [546,])), 2)
func_1343_call = mod.get_global_var('func_1343')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_2042 = func_1343_call()
call_2043 = func_1343_call()
output = relay.Tuple([call_2034,call_2039,const_2040,call_2042,])
output2 = relay.Tuple([call_2035,call_2041,const_2040,call_2043,])
func_2050 = relay.Function([], output)
mod['func_2050'] = func_2050
mod = relay.transform.InferType()(mod)
output = func_2050()
func_2051 = relay.Function([], output)
mutated_mod['func_2051'] = func_2051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1304_call = mod.get_global_var('func_1304')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_2098 = relay.TupleGetItem(func_1304_call(), 0)
call_2099 = relay.TupleGetItem(func_1305_call(), 0)
output = call_2098
output2 = call_2099
func_2103 = relay.Function([], output)
mod['func_2103'] = func_2103
mod = relay.transform.InferType()(mod)
mutated_mod['func_2103'] = func_2103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2103_call = mutated_mod.get_global_var('func_2103')
call_2104 = func_2103_call()
output = call_2104
func_2105 = relay.Function([], output)
mutated_mod['func_2105'] = func_2105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2121 = relay.var("var_2121", dtype = "float32", shape = (11, 16, 11))#candidate|2121|(11, 16, 11)|var|float32
uop_2122 = relay.sqrt(var_2121.astype('float32')) # shape=(11, 16, 11)
uop_2125 = relay.acos(var_2121.astype('float64')) # shape=(11, 16, 11)
func_1581_call = mod.get_global_var('func_1581')
func_1585_call = mutated_mod.get_global_var('func_1585')
const_2129 = relay.const([-2.665927,-0.995916,-5.324125,4.256489,-1.886080,7.805063,-7.972851,8.902506,1.031596,7.719948,-4.618328,-4.629536,-7.534826,0.575974,-6.822489,-2.735035,-9.671480,3.859134,-8.291741,-8.349805,8.317967,-7.753067,-1.731043,8.719289,-2.429655,-3.403119,2.445789,5.828962,-8.324778,1.892732,7.611948,1.357146,2.084258,-2.249095,0.088050,-5.079061,7.338206,-4.740294,2.167051,9.362558,0.468013,-3.299681,-1.677274,-2.350546,-4.160024,9.810331,-6.360780,6.168004,-1.885526,4.410658,-6.278098,-3.188461,-8.326258,4.399347,-9.533487,9.041208,-3.113211,6.439350,-6.663380,7.947630,0.130834,-9.811544,8.168129,6.367642,-1.409211,-9.031094,0.653316,-8.600024,1.290928,7.469595,-0.151964,5.373453,-6.122660,-0.980562,7.364302,-7.239080,-6.530571,-5.018274,-9.542633,0.911169,-9.937201,-0.638278,7.298733,7.346586,-4.759199,-0.097863,8.897756,-1.969847,-6.393817,-3.055269,-4.170590,9.264316,-5.678455,0.699274,8.317331,6.851056,-9.469794,2.403950,-5.861426,-4.119688,4.627020,9.991038,2.500755,4.590434,-7.851609,8.784605,-9.209383,-1.173191,-9.333228,9.255114,-9.858368,0.154521,-6.835499,-4.515931,7.411583,-4.514214,-9.559329,1.441815,2.264750,8.006305,2.386712,-4.706237,9.063311,-6.408315,-6.581308,-8.115062,-6.550469,9.239709,-8.551760,4.505975,3.743110,7.212306,5.638505,1.671816,8.311844,7.246601,3.301999,-4.763053,-1.236070,-7.415124,-3.038332,0.285164,-2.293997,-5.892357,4.401266,-8.581053,5.262052,-1.739993,-1.838620,5.284727,-3.151212,-1.055083,-6.216640,3.249216,6.950099,-9.123252,-8.259827,-7.992929,-5.142633,4.611160,-3.624176,-7.050345,5.733729,4.471317,-4.836419,3.999959,4.406418,-2.866424,-9.186153,-4.153658,6.689284,-4.725897,-1.793126,-5.321603,5.984123,-3.078241,7.034549,2.223378,1.945613,9.236902,9.913116,3.059077,-1.019068,-6.572356,0.005939,2.511118,5.732375,-7.021927,-8.795916,6.836488,-8.917651,-3.510481,-2.882134,8.566554,-4.591141,-0.446877,4.569019,-9.599089,3.716400,1.784916,6.470562,-9.219860,-7.904157,-1.953594,1.437486,-5.574001,-7.400740,-6.617870,-8.554068,-1.184005,-5.231337,-5.445168,-5.925993,8.095881,4.664762,-1.921042,0.066914,-2.956511,5.723650,6.492893,-1.597168,5.715677,-7.153260,2.435115,9.478476,2.080956,-4.379956,9.100228,-1.665481,5.925369,9.854160,-3.605274,-0.595154,-5.898634,2.908408,-8.242544,0.475985,-3.975408,0.863586,-0.955600,-5.349215,-2.141001,9.623926,0.047918,1.613166,-9.969787,7.312723,0.961910,8.471239,6.310852,9.193616,-0.439487,1.240705,-6.770716,-7.500982,3.798873,-6.025477,-8.030134,-7.841253,6.742278,-7.095313,-9.203232,-8.621748,0.336347,-0.698468,5.184102,-8.954039,-5.522526,-9.950404,5.052781,-7.653262,5.426285,-2.300066,-9.597616,-9.300140,-2.462891,6.123519,-6.060643,2.184117,1.545992,-1.319377,3.937497,-0.924375,9.709871,2.978676,-8.612623,6.649184,-1.745051,8.916631,-0.589231,4.111024,-7.880167,-6.909875,-8.316641,-4.100973,1.060350,-5.140294,1.110282,-5.502893,-7.616964,9.265940,6.674021,-8.311492,6.940820,6.089925,2.349332,-6.217033,9.680389,-9.026152,-1.043172,-0.555106,-9.089771,7.681723,3.421617,-8.374355,6.828286,-1.230176,-0.433738,-4.075517,-1.246053,-3.310192,-7.715659,9.721962,5.373423,-0.090186,-8.543464,4.189351,9.797913,4.693960,-6.752994,-2.837614,6.038915,0.947855,-2.172818,8.629645,1.073295,-7.640635,1.253595,1.303457,-3.420902,-1.385489,-4.808964,1.006693,-4.855836,9.241938,-3.819055,-8.225239,-6.109999,5.471297,-6.926842,-4.652733,-2.514547,2.263051,-7.910106,-1.388401,-5.528120,-0.985158,-0.282855,5.773838,-3.254022,-3.849632,-0.168645,-3.219030,-3.255536,3.792756,3.154348,-9.997804,8.987251,9.564804,-4.838993,-9.279639,-0.294237,-5.726454,-8.205233,-2.011656,-2.123291,2.140819,2.509482,7.985828,7.121868,-3.641223,-0.296613,8.557709,7.557904,-9.324139,-9.476621,-5.091372,8.546299,-3.546267,-9.407197,-7.145412,0.774703,-0.962476,3.153723,-1.503216,-7.578093,1.691940,3.402295,-7.978017,4.758408,-0.677785,7.166192,6.479936,5.592549,-6.130103,-7.791619,-5.657310,-7.271421,-6.708085,3.833043,2.294080,-1.103721,-1.612391,0.364529,-3.469317,2.381101,-5.155478,6.643217,7.809490,1.179509,8.728501,-4.584960,9.699421,-8.722144,3.997870,-6.221246,0.405888,1.106822,-0.311504,0.024148,-6.152344,-8.571249,7.126319,-8.765813,-7.214846,9.973367,0.887921,-5.857387,-7.640780,-6.710549,-6.590438,-4.104245,2.101361,1.134001,-8.902370,-4.364733,-8.077092,-3.940835,3.775836,-6.352986,-6.147694,4.373700,-4.582296,6.921460,-3.240806,-5.245295,-3.943322,-8.058325,-0.249353,-6.226911,-4.606475,9.558794,2.906209,5.704401,-5.183411,-7.841526,8.122264,-2.956245,5.891085,-0.290258,-4.466744,-2.791469,-9.317464,-4.249649,4.710909,7.419549,-2.162865,-6.336510,-2.485878,-7.071180,3.037344,-6.406085,-2.275208,-6.258581,-1.818863,4.011788,7.894510,5.706077,-5.457409,2.579360,-4.843916,-1.800032,2.387912,-1.810431,-8.927951,9.089812,-6.561911,-3.381741,-5.384511,-9.588170,6.901339,1.214262,-5.668197,-2.856885,9.409180,-1.806048,0.339953,-8.212094,3.737763,-8.450920,6.292254,2.405112,8.974628,-3.891849,7.972176,-0.594749,-8.425269,3.552319,0.149833,0.507917,5.552306,-0.618573,-6.185049,-6.674084,-4.798230,9.002599,-5.087779,8.164488,-1.559975,1.293047,-8.773988,0.543891,-6.898422,3.071738,-5.370799,-7.359376,-7.685933,-8.107139,7.544844,-8.704332,-8.365637,8.034428,6.428170,-8.397441,-3.680526,0.892321], dtype = "float32")#candidate|2129|(546,)|const|float32
call_2128 = relay.TupleGetItem(func_1581_call(relay.reshape(const_2129.astype('float32'), [7, 78]), relay.reshape(const_2129.astype('float32'), [7, 78]), ), 0)
call_2130 = relay.TupleGetItem(func_1585_call(relay.reshape(const_2129.astype('float32'), [7, 78]), relay.reshape(const_2129.astype('float32'), [7, 78]), ), 0)
output = relay.Tuple([uop_2122,uop_2125,call_2128,const_2129,])
output2 = relay.Tuple([uop_2122,uop_2125,call_2130,const_2129,])
func_2145 = relay.Function([var_2121,], output)
mod['func_2145'] = func_2145
mod = relay.transform.InferType()(mod)
var_2146 = relay.var("var_2146", dtype = "float32", shape = (11, 16, 11))#candidate|2146|(11, 16, 11)|var|float32
output = func_2145(var_2146)
func_2147 = relay.Function([var_2146], output)
mutated_mod['func_2147'] = func_2147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2050_call = mod.get_global_var('func_2050')
func_2051_call = mutated_mod.get_global_var('func_2051')
call_2182 = relay.TupleGetItem(func_2050_call(), 3)
call_2183 = relay.TupleGetItem(func_2051_call(), 3)
output = relay.Tuple([call_2182,])
output2 = relay.Tuple([call_2183,])
func_2199 = relay.Function([], output)
mod['func_2199'] = func_2199
mod = relay.transform.InferType()(mod)
output = func_2199()
func_2200 = relay.Function([], output)
mutated_mod['func_2200'] = func_2200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2199_call = mod.get_global_var('func_2199')
func_2200_call = mutated_mod.get_global_var('func_2200')
call_2208 = relay.TupleGetItem(func_2199_call(), 0)
call_2209 = relay.TupleGetItem(func_2200_call(), 0)
output = call_2208
output2 = call_2209
func_2210 = relay.Function([], output)
mod['func_2210'] = func_2210
mod = relay.transform.InferType()(mod)
mutated_mod['func_2210'] = func_2210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2210_call = mutated_mod.get_global_var('func_2210')
call_2211 = func_2210_call()
output = call_2211
func_2212 = relay.Function([], output)
mutated_mod['func_2212'] = func_2212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1249_call = mod.get_global_var('func_1249')
func_1251_call = mutated_mod.get_global_var('func_1251')
call_2320 = func_1249_call()
call_2321 = func_1249_call()
func_1249_call = mod.get_global_var('func_1249')
func_1251_call = mutated_mod.get_global_var('func_1251')
call_2338 = func_1249_call()
call_2339 = func_1249_call()
output = relay.Tuple([call_2320,call_2338,])
output2 = relay.Tuple([call_2321,call_2339,])
func_2340 = relay.Function([], output)
mod['func_2340'] = func_2340
mod = relay.transform.InferType()(mod)
output = func_2340()
func_2341 = relay.Function([], output)
mutated_mod['func_2341'] = func_2341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2050_call = mod.get_global_var('func_2050')
func_2051_call = mutated_mod.get_global_var('func_2051')
call_2415 = relay.TupleGetItem(func_2050_call(), 3)
call_2416 = relay.TupleGetItem(func_2051_call(), 3)
output = call_2415
output2 = call_2416
func_2421 = relay.Function([], output)
mod['func_2421'] = func_2421
mod = relay.transform.InferType()(mod)
mutated_mod['func_2421'] = func_2421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2421_call = mutated_mod.get_global_var('func_2421')
call_2422 = func_2421_call()
output = call_2422
func_2423 = relay.Function([], output)
mutated_mod['func_2423'] = func_2423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2437 = relay.var("var_2437", dtype = "uint8", shape = (10, 10, 14))#candidate|2437|(10, 10, 14)|var|uint8
var_2438 = relay.var("var_2438", dtype = "uint8", shape = (10, 10, 14))#candidate|2438|(10, 10, 14)|var|uint8
bop_2439 = relay.greater_equal(var_2437.astype('bool'), relay.reshape(var_2438.astype('bool'), relay.shape_of(var_2437))) # shape=(10, 10, 14)
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
call_2443 = func_2210_call()
call_2444 = func_2210_call()
func_2103_call = mod.get_global_var('func_2103')
func_2105_call = mutated_mod.get_global_var('func_2105')
call_2492 = func_2103_call()
call_2493 = func_2103_call()
uop_2494 = relay.sin(var_2437.astype('float64')) # shape=(10, 10, 14)
output = relay.Tuple([bop_2439,call_2443,call_2492,uop_2494,])
output2 = relay.Tuple([bop_2439,call_2444,call_2493,uop_2494,])
func_2501 = relay.Function([var_2437,var_2438,], output)
mod['func_2501'] = func_2501
mod = relay.transform.InferType()(mod)
var_2502 = relay.var("var_2502", dtype = "uint8", shape = (10, 10, 14))#candidate|2502|(10, 10, 14)|var|uint8
var_2503 = relay.var("var_2503", dtype = "uint8", shape = (10, 10, 14))#candidate|2503|(10, 10, 14)|var|uint8
output = func_2501(var_2502,var_2503,)
func_2504 = relay.Function([var_2502,var_2503,], output)
mutated_mod['func_2504'] = func_2504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mod.get_global_var('func_1473')
func_1474_call = mutated_mod.get_global_var('func_1474')
call_2554 = relay.TupleGetItem(func_1473_call(), 0)
call_2555 = relay.TupleGetItem(func_1474_call(), 0)
output = relay.Tuple([call_2554,])
output2 = relay.Tuple([call_2555,])
func_2556 = relay.Function([], output)
mod['func_2556'] = func_2556
mod = relay.transform.InferType()(mod)
mutated_mod['func_2556'] = func_2556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2556_call = mutated_mod.get_global_var('func_2556')
call_2557 = func_2556_call()
output = call_2557
func_2558 = relay.Function([], output)
mutated_mod['func_2558'] = func_2558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
call_2567 = func_2210_call()
call_2568 = func_2210_call()
func_1879_call = mod.get_global_var('func_1879')
func_1882_call = mutated_mod.get_global_var('func_1882')
var_2595 = relay.var("var_2595", dtype = "uint32", shape = (1470,))#candidate|2595|(1470,)|var|uint32
call_2594 = relay.TupleGetItem(func_1879_call(relay.reshape(var_2595.astype('uint32'), [15, 14, 7]), relay.reshape(var_2595.astype('uint32'), [15, 14, 7]), ), 1)
call_2596 = relay.TupleGetItem(func_1882_call(relay.reshape(var_2595.astype('uint32'), [15, 14, 7]), relay.reshape(var_2595.astype('uint32'), [15, 14, 7]), ), 1)
func_1970_call = mod.get_global_var('func_1970')
func_1974_call = mutated_mod.get_global_var('func_1974')
const_2601 = relay.const([5.556779,-8.198271,-0.580190,-4.881322,-0.271050,2.748943,8.696195,1.627825,-6.954145,-9.075914,7.114410,-8.415621,0.949559,2.058783,8.373293,0.911925,7.602731,-0.896873,6.436751,9.350269,0.985161,-1.202063,-3.190574,3.653315,2.744545,-1.026135,1.548109,7.940886,-4.823283,4.307403,2.363239,-3.190971,-6.190072,8.977848,6.617185,-1.947052,7.293584,9.706475,-6.715733,2.376236,3.057646,-9.788142,-1.787990,0.658053,-7.767426,3.222620,-2.755394,-9.057537,-5.058140,-4.946257,3.000860,-1.917939,1.669113,-3.860965,-2.072769,-9.036403,1.013183,-5.339554,-2.317237,-7.212188,-3.875967,3.541400,4.719311,-6.595767,9.281995,6.593004,2.736813,0.070785,1.201924,-5.765412,7.969231,1.865477,6.870487,3.118475,-6.671243,-2.588994,8.845454,5.597364,5.338057,-0.854603,-7.630026,0.616156,5.314046,-3.225460,-7.594729,-2.477517,7.084073,-2.747221,-5.944107,2.221378,3.106780,9.822573,3.548694,3.144157,-5.665902,1.452888,5.859156,-7.627302,8.767530,-6.262900,3.322346,-8.442338,-5.275029,0.731688,-4.375451,4.355696,-7.162820,-7.493721,3.122691,2.989843,2.769245,-9.661508,4.304859,6.880769,-6.894991,2.422767,-6.600726], dtype = "float64")#candidate|2601|(117,)|const|float64
var_2602 = relay.var("var_2602", dtype = "float64", shape = (52,))#candidate|2602|(52,)|var|float64
call_2600 = relay.TupleGetItem(func_1970_call(relay.reshape(const_2601.astype('float64'), [117,]), relay.reshape(var_2602.astype('float64'), [52,]), ), 4)
call_2603 = relay.TupleGetItem(func_1974_call(relay.reshape(const_2601.astype('float64'), [117,]), relay.reshape(var_2602.astype('float64'), [52,]), ), 4)
func_1879_call = mod.get_global_var('func_1879')
func_1882_call = mutated_mod.get_global_var('func_1882')
call_2604 = relay.TupleGetItem(func_1879_call(relay.reshape(call_2594.astype('uint32'), [15, 14, 7]), relay.reshape(call_2594.astype('uint32'), [15, 14, 7]), ), 0)
call_2605 = relay.TupleGetItem(func_1882_call(relay.reshape(call_2594.astype('uint32'), [15, 14, 7]), relay.reshape(call_2594.astype('uint32'), [15, 14, 7]), ), 0)
var_2608 = relay.var("var_2608", dtype = "float64", shape = (117,))#candidate|2608|(117,)|var|float64
bop_2609 = relay.floor_divide(const_2601.astype('float32'), relay.reshape(var_2608.astype('float32'), relay.shape_of(const_2601))) # shape=(117,)
func_1343_call = mod.get_global_var('func_1343')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_2626 = func_1343_call()
call_2627 = func_1343_call()
output = relay.Tuple([call_2567,call_2594,var_2595,call_2600,var_2602,call_2604,bop_2609,call_2626,])
output2 = relay.Tuple([call_2568,call_2596,var_2595,call_2603,var_2602,call_2605,bop_2609,call_2627,])
func_2631 = relay.Function([var_2595,var_2602,var_2608,], output)
mod['func_2631'] = func_2631
mod = relay.transform.InferType()(mod)
var_2632 = relay.var("var_2632", dtype = "uint32", shape = (1470,))#candidate|2632|(1470,)|var|uint32
var_2633 = relay.var("var_2633", dtype = "float64", shape = (52,))#candidate|2633|(52,)|var|float64
var_2634 = relay.var("var_2634", dtype = "float64", shape = (117,))#candidate|2634|(117,)|var|float64
output = func_2631(var_2632,var_2633,var_2634,)
func_2635 = relay.Function([var_2632,var_2633,var_2634,], output)
mutated_mod['func_2635'] = func_2635
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2671 = relay.var("var_2671", dtype = "int64", shape = ())#candidate|2671|()|var|int64
const_2672 = relay.const([[[1,-3,2,7,-5,-3,4],[-8,9,-9,3,3,-9,10],[3,9,7,-6,1,9,4],[2,-4,-6,6,-3,3,2],[2,-5,1,2,-9,9,2],[7,9,-7,10,7,1,4],[7,-5,-9,-5,8,10,-6],[7,-6,7,6,8,7,3],[-7,-1,-4,-5,-9,-5,10],[2,4,-5,6,6,5,-9],[1,-10,8,3,10,-4,8],[3,5,-5,7,-9,-3,-6]],[[-1,3,-4,10,-6,5,-1],[-4,8,-9,7,4,-6,-6],[10,-9,6,4,-5,-3,9],[7,-6,-1,10,-9,-5,-10],[6,2,-9,-8,3,6,-6],[6,-6,-7,6,9,9,-3],[-3,-7,-1,6,2,-5,-5],[2,4,7,3,-4,-2,-2],[-3,7,-10,-4,7,-8,-3],[5,-8,7,5,1,10,4],[8,-4,3,-6,10,-1,-9],[6,-6,8,-6,-5,3,-6]],[[1,6,7,2,-3,-4,-10],[8,6,3,-6,7,10,-2],[7,-5,-9,-10,10,10,-2],[-6,9,-6,-9,10,-2,7],[8,6,-9,-6,1,-9,-1],[6,-3,-8,8,1,4,3],[8,-9,-1,-4,5,3,7],[9,-10,3,-9,8,-6,-5],[8,-8,7,-5,-2,1,8],[-3,5,-4,9,10,10,-5],[5,-9,-7,-1,4,-5,4],[4,-9,8,-1,10,-4,9]],[[-6,-10,-2,8,-4,6,-7],[-4,8,-3,-5,2,7,-7],[2,-5,-10,-3,-4,4,10],[-7,2,7,1,6,3,3],[1,3,6,4,-2,10,8],[7,-3,-4,-8,-4,3,5],[9,-7,8,6,7,1,8],[7,-5,-3,-9,-3,10,-5],[9,-10,-6,1,-1,9,8],[7,-1,-2,-1,5,4,6],[-7,-8,1,-5,8,-2,-4],[7,2,7,-10,-10,-4,2]],[[4,3,-9,8,-10,6,8],[9,10,3,9,5,-9,-2],[-3,10,-2,-9,-5,-10,9],[-4,-5,-8,-8,5,8,-9],[-9,1,-7,9,5,2,-4],[-6,-10,7,-3,8,-5,9],[7,2,10,5,-4,7,-2],[-1,1,9,-6,-7,-3,-10],[-10,-2,6,-2,-7,4,-3],[5,1,-4,-1,-4,-1,-8],[5,-5,-7,-1,-2,1,-2],[-3,7,-10,3,-1,-9,1]],[[-5,6,-7,7,9,6,3],[-1,4,9,3,8,-5,10],[5,8,10,-1,7,10,-8],[-5,6,5,1,9,-5,-10],[9,6,3,1,-8,-10,-10],[8,9,-10,-9,-4,1,6],[4,4,-8,-7,-4,6,-3],[-4,-9,3,-8,-4,10,-9],[5,4,-5,-5,1,-6,10],[-7,-8,-6,-7,-4,1,-2],[-10,-1,10,6,-8,-8,1],[-5,4,4,5,9,-8,-7]]], dtype = "int64")#candidate|2672|(6, 12, 7)|const|int64
bop_2673 = relay.less(var_2671.astype('bool'), const_2672.astype('bool')) # shape=(6, 12, 7)
output = relay.Tuple([bop_2673,])
output2 = relay.Tuple([bop_2673,])
func_2676 = relay.Function([var_2671,], output)
mod['func_2676'] = func_2676
mod = relay.transform.InferType()(mod)
var_2677 = relay.var("var_2677", dtype = "int64", shape = ())#candidate|2677|()|var|int64
output = func_2676(var_2677)
func_2678 = relay.Function([var_2677], output)
mutated_mod['func_2678'] = func_2678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2340_call = mod.get_global_var('func_2340')
func_2341_call = mutated_mod.get_global_var('func_2341')
call_2720 = relay.TupleGetItem(func_2340_call(), 1)
call_2721 = relay.TupleGetItem(func_2341_call(), 1)
output = call_2720
output2 = call_2721
func_2724 = relay.Function([], output)
mod['func_2724'] = func_2724
mod = relay.transform.InferType()(mod)
output = func_2724()
func_2725 = relay.Function([], output)
mutated_mod['func_2725'] = func_2725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2103_call = mod.get_global_var('func_2103')
func_2105_call = mutated_mod.get_global_var('func_2105')
call_2731 = func_2103_call()
call_2732 = func_2103_call()
const_2740 = relay.const([[-7.375640,-9.352176,-8.686129,1.095170,-8.574090,9.820904,-8.812835,5.357092,-6.280008,5.189249,5.254189,2.997781,7.501070,7.654005,6.201403,-1.641401,-0.454462,-7.101969,-3.612513,0.462914,3.461849,6.956071,-6.069119,-2.308969,-8.583204,-4.550555,2.422374,4.281643,-6.737922,-6.288794,9.260283,6.246779,0.524887,-2.789950,5.095133,-4.700491,-8.719046,0.236326,-4.366371,1.663410,1.756039,-1.454342,7.394467,-3.295133,0.228135,9.631398,7.703967,-4.195209,3.772453,-6.913094,2.696275,3.342372,-7.478580,-4.116934,-6.392108,6.385203,-6.121074,7.153774,9.006748,0.353946,-1.424011,1.115154,2.540063,-7.289449,-9.835040,-2.251790,7.312305,5.003257,-1.406476,7.478908,4.055359,-8.734867,-7.922525,-3.024489,9.548372,-3.916032,-1.230489,9.999315],[-9.293941,-8.403131,-5.604561,-5.295730,-1.258583,6.050469,6.404272,-0.367729,4.895595,-6.332085,-2.199767,1.744919,-0.343326,9.379110,3.977901,8.410282,-3.277132,-8.478516,-8.108273,-9.764708,-1.139472,3.341434,-4.686686,4.563576,-9.526295,-0.558097,-0.032327,9.713512,6.762403,7.678485,5.141697,-1.481852,6.769151,1.508604,6.550589,-3.739758,3.234204,-1.296043,4.678252,-2.201142,8.503444,-5.087367,-2.488105,8.328057,-9.379918,8.661562,0.353729,8.419487,-2.804451,-6.783149,0.037219,-1.467208,-5.539078,-2.301841,-9.906945,0.965509,2.683569,6.214805,3.686360,-9.090423,5.086185,-5.460411,4.083718,1.384057,-9.710324,-1.210694,0.217496,-7.345713,3.778816,6.043010,7.505521,7.678252,0.956859,6.339648,6.297046,-1.309347,5.541428,8.781894],[6.866533,-8.350578,-5.944783,8.161330,3.819684,6.827310,-6.805180,-6.815888,-2.145159,0.046919,-7.371087,-2.281274,-4.265121,1.025584,4.963234,-7.620666,6.615173,-3.054731,4.488403,8.957366,-8.621291,9.335142,-8.889707,-1.425158,-3.803956,-8.867562,-2.918874,-1.345580,0.835231,-2.274514,1.364676,5.359469,-3.439609,-9.966539,8.963100,-1.322497,1.422626,0.852207,-6.942986,-7.600046,1.282105,3.691622,5.839246,-6.902698,5.984882,-2.035579,6.030679,-0.636205,4.887795,-1.811382,-9.803618,-7.654460,-9.554811,2.495837,-7.636090,9.100860,-0.943677,7.826619,9.439086,0.442935,0.651105,5.177341,4.028446,-5.704493,-6.172114,-4.735891,5.348273,-5.042952,-7.862289,-5.020774,2.954090,-4.341757,0.802810,-1.084410,5.504713,7.847909,3.174337,5.045712],[-9.514500,4.341621,-8.463828,-8.446934,6.527716,-2.075694,-0.584647,-9.939684,-7.392140,-6.847977,-3.513145,-8.132077,-0.524412,-2.008525,-8.398850,-3.407345,2.642444,-3.786200,1.020848,-6.135104,2.877616,-7.337822,0.581058,-0.282978,1.284292,2.985098,0.120302,5.300839,-3.765243,3.318106,-7.144857,8.665411,6.487985,6.331569,-6.735939,1.755811,-1.278720,-9.760114,-6.186991,-0.646478,1.461717,-7.260727,5.885242,-9.672480,4.959053,2.395945,5.493125,-7.296028,-0.358495,-2.046101,4.157017,-0.547299,5.587891,9.319052,4.444909,-7.811593,-2.372013,4.106865,-4.335275,9.412501,3.320729,6.132887,6.035767,-5.580490,-5.082501,3.191963,-1.820022,4.673722,-6.849657,-2.108812,-7.849143,-3.013353,8.706648,5.937699,7.850566,7.966268,3.586924,7.916190],[-3.441554,-9.511181,-8.991194,-4.761775,8.723722,7.210935,0.494053,-6.017710,-3.234201,-8.241175,-2.343153,9.885373,-5.591598,8.767978,-8.948500,-2.357835,-4.693800,1.208805,-1.683753,9.285673,9.554053,0.192362,-4.493346,0.344185,-7.048970,-1.308322,7.424659,-6.295622,7.247910,2.869431,3.239443,-6.538524,-0.655072,-8.427375,-5.205349,-6.503237,-8.121613,-0.457786,3.652853,4.582597,5.030459,4.632451,-9.710196,-2.036186,0.760167,9.829976,6.975405,-9.657974,5.546082,4.110804,-1.402147,3.930052,1.903657,-7.721368,0.586724,7.771552,8.985445,4.740293,-2.200003,4.438879,8.544622,-9.238473,6.182237,-5.566860,-0.831659,-9.588770,-7.529101,3.750904,6.693136,-9.164948,-7.003041,4.534284,-1.315668,2.026867,-6.672556,-6.027400,8.743723,-1.535183],[7.776687,4.708506,-6.653703,8.280551,5.821240,0.867364,-1.936304,-1.810769,1.963594,-1.366233,-2.954010,-5.775043,6.403710,4.994628,-6.284040,9.688406,-0.572010,7.793733,-1.700465,4.927267,2.754923,-5.499642,3.205478,-7.115868,-1.378436,-6.271785,-4.201526,6.614402,-1.931133,-4.619384,-8.106872,-2.755614,-9.407917,-8.479107,-9.847051,8.818118,-9.432526,3.069331,-8.433568,-6.094301,1.950569,2.537084,5.491762,6.367904,2.459409,-6.182839,4.326254,2.861532,-1.819828,-4.247913,8.635283,7.170789,7.971819,0.267315,-1.257322,-9.753485,7.755363,-8.471423,-0.099972,-4.571994,6.527354,9.791199,0.586582,8.207649,-1.519803,1.463319,6.389073,4.627705,3.390589,-7.823051,-1.687576,3.456103,-0.638715,6.462277,5.620736,8.628430,-0.805602,1.530193],[7.153683,-5.174070,-6.229899,0.218614,-4.827998,-5.095200,-8.726233,6.256921,7.263977,-5.902476,-0.882938,-3.889267,5.835148,5.756017,0.006610,6.952365,6.591871,-2.067008,9.917133,8.401530,9.320046,-0.010803,-0.284156,-7.838721,-6.514496,5.208204,-1.527313,0.194244,2.026274,-0.607844,0.124662,1.817593,9.903464,5.260367,-2.410547,-5.803503,-8.380355,7.207029,-4.681698,8.552296,-9.171076,-3.431069,-6.309195,-0.379403,-4.821292,-7.769307,-2.329963,-1.295987,-1.153448,4.233767,-7.239474,-4.921216,-3.258112,3.817088,2.359033,6.076050,5.245284,9.177879,6.784061,-9.962634,-6.733387,-5.476921,-4.821898,-6.618904,-2.873063,9.377838,6.561983,9.253068,2.137198,-9.723059,1.972863,-2.032778,1.164724,1.576337,9.926655,-8.397802,-9.695434,9.339725]], dtype = "float64")#candidate|2740|(7, 78)|const|float64
bop_2741 = relay.maximum(call_2731.astype('int32'), relay.reshape(const_2740.astype('int32'), relay.shape_of(call_2731))) # shape=(7, 78)
bop_2744 = relay.maximum(call_2732.astype('int32'), relay.reshape(const_2740.astype('int32'), relay.shape_of(call_2732))) # shape=(7, 78)
output = bop_2741
output2 = bop_2744
func_2752 = relay.Function([], output)
mod['func_2752'] = func_2752
mod = relay.transform.InferType()(mod)
output = func_2752()
func_2753 = relay.Function([], output)
mutated_mod['func_2753'] = func_2753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2752_call = mod.get_global_var('func_2752')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_2780 = func_2752_call()
call_2781 = func_2752_call()
output = relay.Tuple([call_2780,])
output2 = relay.Tuple([call_2781,])
func_2796 = relay.Function([], output)
mod['func_2796'] = func_2796
mod = relay.transform.InferType()(mod)
output = func_2796()
func_2797 = relay.Function([], output)
mutated_mod['func_2797'] = func_2797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2050_call = mod.get_global_var('func_2050')
func_2051_call = mutated_mod.get_global_var('func_2051')
call_2839 = relay.TupleGetItem(func_2050_call(), 2)
call_2840 = relay.TupleGetItem(func_2051_call(), 2)
output = relay.Tuple([call_2839,])
output2 = relay.Tuple([call_2840,])
func_2842 = relay.Function([], output)
mod['func_2842'] = func_2842
mod = relay.transform.InferType()(mod)
output = func_2842()
func_2843 = relay.Function([], output)
mutated_mod['func_2843'] = func_2843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1304_call = mod.get_global_var('func_1304')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_2870 = relay.TupleGetItem(func_1304_call(), 0)
call_2871 = relay.TupleGetItem(func_1305_call(), 0)
func_1739_call = mod.get_global_var('func_1739')
func_1742_call = mutated_mod.get_global_var('func_1742')
call_2880 = relay.TupleGetItem(func_1739_call(relay.reshape(call_2870.astype('float32'), [546,])), 1)
call_2881 = relay.TupleGetItem(func_1742_call(relay.reshape(call_2870.astype('float32'), [546,])), 1)
output = relay.Tuple([call_2870,call_2880,])
output2 = relay.Tuple([call_2871,call_2881,])
func_2896 = relay.Function([], output)
mod['func_2896'] = func_2896
mod = relay.transform.InferType()(mod)
output = func_2896()
func_2897 = relay.Function([], output)
mutated_mod['func_2897'] = func_2897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1343_call = mod.get_global_var('func_1343')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_2931 = func_1343_call()
call_2932 = func_1343_call()
output = relay.Tuple([call_2931,])
output2 = relay.Tuple([call_2932,])
func_2933 = relay.Function([], output)
mod['func_2933'] = func_2933
mod = relay.transform.InferType()(mod)
mutated_mod['func_2933'] = func_2933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2933_call = mutated_mod.get_global_var('func_2933')
call_2934 = func_2933_call()
output = call_2934
func_2935 = relay.Function([], output)
mutated_mod['func_2935'] = func_2935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2843_call = mutated_mod.get_global_var('func_2843')
call_2986 = relay.TupleGetItem(func_2842_call(), 0)
call_2987 = relay.TupleGetItem(func_2843_call(), 0)
func_1879_call = mod.get_global_var('func_1879')
func_1882_call = mutated_mod.get_global_var('func_1882')
var_2996 = relay.var("var_2996", dtype = "uint32", shape = (1470,))#candidate|2996|(1470,)|var|uint32
call_2995 = relay.TupleGetItem(func_1879_call(relay.reshape(var_2996.astype('uint32'), [15, 14, 7]), relay.reshape(var_2996.astype('uint32'), [15, 14, 7]), ), 1)
call_2997 = relay.TupleGetItem(func_1882_call(relay.reshape(var_2996.astype('uint32'), [15, 14, 7]), relay.reshape(var_2996.astype('uint32'), [15, 14, 7]), ), 1)
func_2631_call = mod.get_global_var('func_2631')
func_2635_call = mutated_mod.get_global_var('func_2635')
var_3000 = relay.var("var_3000", dtype = "float64", shape = (52,))#candidate|3000|(52,)|var|float64
var_3001 = relay.var("var_3001", dtype = "float64", shape = (117,))#candidate|3001|(117,)|var|float64
call_2999 = relay.TupleGetItem(func_2631_call(relay.reshape(var_2996.astype('uint32'), [1470,]), relay.reshape(var_3000.astype('float64'), [52,]), relay.reshape(var_3001.astype('float64'), [117,]), ), 5)
call_3002 = relay.TupleGetItem(func_2635_call(relay.reshape(var_2996.astype('uint32'), [1470,]), relay.reshape(var_3000.astype('float64'), [52,]), relay.reshape(var_3001.astype('float64'), [117,]), ), 5)
func_1970_call = mod.get_global_var('func_1970')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_3008 = relay.TupleGetItem(func_1970_call(relay.reshape(var_3001.astype('float64'), [117,]), relay.reshape(var_3000.astype('float64'), [52,]), ), 2)
call_3009 = relay.TupleGetItem(func_1974_call(relay.reshape(var_3001.astype('float64'), [117,]), relay.reshape(var_3000.astype('float64'), [52,]), ), 2)
bop_3010 = relay.equal(var_3000.astype('bool'), call_3008.astype('bool')) # shape=(52,)
bop_3013 = relay.equal(var_3000.astype('bool'), call_3009.astype('bool')) # shape=(52,)
output = relay.Tuple([call_2986,call_2995,var_2996,call_2999,var_3001,bop_3010,])
output2 = relay.Tuple([call_2987,call_2997,var_2996,call_3002,var_3001,bop_3013,])
func_3020 = relay.Function([var_2996,var_3000,var_3001,], output)
mod['func_3020'] = func_3020
mod = relay.transform.InferType()(mod)
mutated_mod['func_3020'] = func_3020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3020_call = mutated_mod.get_global_var('func_3020')
var_3022 = relay.var("var_3022", dtype = "uint32", shape = (1470,))#candidate|3022|(1470,)|var|uint32
var_3023 = relay.var("var_3023", dtype = "float64", shape = (52,))#candidate|3023|(52,)|var|float64
var_3024 = relay.var("var_3024", dtype = "float64", shape = (117,))#candidate|3024|(117,)|var|float64
call_3021 = func_3020_call(var_3022,var_3023,var_3024,)
output = call_3021
func_3025 = relay.Function([var_3022,var_3023,var_3024,], output)
mutated_mod['func_3025'] = func_3025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2843_call = mutated_mod.get_global_var('func_2843')
call_3027 = relay.TupleGetItem(func_2842_call(), 0)
call_3028 = relay.TupleGetItem(func_2843_call(), 0)
output = relay.Tuple([call_3027,])
output2 = relay.Tuple([call_3028,])
func_3030 = relay.Function([], output)
mod['func_3030'] = func_3030
mod = relay.transform.InferType()(mod)
output = func_3030()
func_3031 = relay.Function([], output)
mutated_mod['func_3031'] = func_3031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2896_call = mod.get_global_var('func_2896')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_3042 = relay.TupleGetItem(func_2896_call(), 1)
call_3043 = relay.TupleGetItem(func_2897_call(), 1)
uop_3050 = relay.log2(call_3042.astype('float32')) # shape=(7, 78)
uop_3052 = relay.log2(call_3043.astype('float32')) # shape=(7, 78)
var_3070 = relay.var("var_3070", dtype = "int64", shape = (7, 78))#candidate|3070|(7, 78)|var|int64
bop_3071 = relay.greater_equal(call_3042.astype('bool'), relay.reshape(var_3070.astype('bool'), relay.shape_of(call_3042))) # shape=(7, 78)
bop_3074 = relay.greater_equal(call_3043.astype('bool'), relay.reshape(var_3070.astype('bool'), relay.shape_of(call_3043))) # shape=(7, 78)
var_3075 = relay.var("var_3075", dtype = "float32", shape = (7, 78))#candidate|3075|(7, 78)|var|float32
bop_3076 = relay.greater(uop_3050.astype('bool'), relay.reshape(var_3075.astype('bool'), relay.shape_of(uop_3050))) # shape=(7, 78)
bop_3079 = relay.greater(uop_3052.astype('bool'), relay.reshape(var_3075.astype('bool'), relay.shape_of(uop_3052))) # shape=(7, 78)
output = relay.Tuple([bop_3071,bop_3076,])
output2 = relay.Tuple([bop_3074,bop_3079,])
func_3083 = relay.Function([var_3070,var_3075,], output)
mod['func_3083'] = func_3083
mod = relay.transform.InferType()(mod)
mutated_mod['func_3083'] = func_3083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mutated_mod.get_global_var('func_3083')
var_3085 = relay.var("var_3085", dtype = "int64", shape = (7, 78))#candidate|3085|(7, 78)|var|int64
var_3086 = relay.var("var_3086", dtype = "float32", shape = (7, 78))#candidate|3086|(7, 78)|var|float32
call_3084 = func_3083_call(var_3085,var_3086,)
output = call_3084
func_3087 = relay.Function([var_3085,var_3086,], output)
mutated_mod['func_3087'] = func_3087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2724_call = mod.get_global_var('func_2724')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_3099 = func_2724_call()
call_3100 = func_2724_call()
output = relay.Tuple([call_3099,])
output2 = relay.Tuple([call_3100,])
func_3101 = relay.Function([], output)
mod['func_3101'] = func_3101
mod = relay.transform.InferType()(mod)
output = func_3101()
func_3102 = relay.Function([], output)
mutated_mod['func_3102'] = func_3102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2896_call = mod.get_global_var('func_2896')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_3103 = relay.TupleGetItem(func_2896_call(), 0)
call_3104 = relay.TupleGetItem(func_2897_call(), 0)
func_3020_call = mod.get_global_var('func_3020')
func_3025_call = mutated_mod.get_global_var('func_3025')
const_3114 = relay.const([-2,-4,6,-2,-2,-6,-3,9,-6,6,4,1,-2,-6,-3,-1,-10,3,-7,-8,8,-7,2,-9,-5,-2,-4,-3,-4,-9,5,-5,7,10,5,-2,-6,5,5,6,10,-10,-1,-5,1,-5,5,3,7,7,-3,-4,8,-7,-5,4,9,2,-7,8,-10,-6,2,-1,3,1,-7,-7,4,1,-4,-7,-8,-6,5,-3,-6,1,8,-7,10,-9,4,-3,7,-10,-8,8,3,1,6,4,-6,-2,-7,-5,6,3,9,8,9,-9,-4,-4,-10,6,10,-10,5,1,8,6,-2,-5,4,-7,1,1,-4,4,-2,10,10,-10,-1,-4,9,-4,-8,1,2,4,-7,-1,-10,5,-7,5,4,-2,-6,-3,-8,-3,-7,8,-4,5,7,-2,-2,10,1,-7,-1,-1,5,2,-4,8,1,1,8,9,-1,-6,-8,-2,-4,-8,-6,-1,-7,-4,10,-10,-10,6,-6,-5,6,10,10,2,9,-10,-1,7,6,6,-5,-6,-7,3,7,-10,1,-6,-2,-6,10,-7,9,-8,-7,-10,1,5,8,3,8,-8,-5,-2,5,-9,6,-8,10,-1,-10,-9,-8,-3,2,2,1,-1,-8,-3,-10,10,8,10,-3,7,1,6,-8,-6,5,2,-1,2,5,4,8,9,1,-6,-10,10,6,-3,-5,9,-10,-5,6,-2,-3,-6,10,8,5,-8,6,-8,-3,1,3,-7,-2,4,8,-1,-2,-3,-2,-4,7,-2,9,7,3,2,-7,9,-9,-9,10,-1,7,-5,-7,6,10,-6,9,2,1,-10,-1,10,-3,-9,1,5,4,-6,8,4,9,-8,-3,-2,2,-5,-10,-5,7,6,-5,-9,3,-1,-7,-9,-7,7,-7,6,-3,-4,-7,-8,4,6,8,-10,1,10,-6,-6,-7,-3,-4,-4,10,-1,-7,-3,4,-2,-5,1,-4,3,3,-1,2,3,-2,4,4,-1,4,-6,3,3,10,3,-7,4,-6,10,-10,6,1,4,-5,8,8,10,-2,1,-6,-8,1,-7,-8,6,2,-9,-2,-8,-7,6,10,9,8,-8,4,-1,9,-3,5,-6,-1,-7,10,-10,4,2,-4,8,1,-8,1,10,-7,6,4,8,8,8,5,-5,-4,2,10,-9,3,5,-9,3,-10,10,2,-9,7,8,-5,-10,-2,6,10,2,-3,9,-4,9,-3,1,-9,6,8,-8,9,-2,10,-2,3,6,-4,7,-7,-5,-5,8,7,-2,7,9,-9,6,1,8,5,10,-10,9,-3,-10,9,4,9,10,-7,-4,10,-4,2,-4,7,-6,1,4,10,-4,-1,4,6,10,4,10,5,-6,-9,4,4,-2,-7,-3,-2,7,-9,5,-6,-1,-8,4,-6,-10,1,-10,8,-2,-10,-4,-3,-6,-2,8,-6,6,-1,-5,1,1,-1,-6,4,-6,4,9,-8,10,7,-8,8,-7,4,-5,9,-4,-8,9,-10,-8,-4,-2,3,-4,9,-3,4,5,2,-3,-5,-1,-9,6,-7,4,1,-4,7,7,10,2,-10,3,6,-4,5,3,-10,-5,-3,-8,4,-1,2,6,7,-7,6,10,-8,-2,-4,8,6,-8,-10,-3,10,5,1,-5,1,5,2,1,2,2,2,7,-3,7,3,10,-6,-7,-6,3,-2,7,4,3,-3,9,5,3,2,3,-2,1,8,6,2,-1,10,10,10,-9,8,-8,5,-1,3,-6,-7,-6,-7,-8,2,5,9,-5,7,-2,3,8,-3,-6,-4,-3,1,5,2,9,3,7,7,3,-5,9,-6,7,-7,-8,-7,-10,-10,6,-8,-7,9,5,5,10,-2,7,7,9,-7,2,8,10,-9,-2,-3,10,-3,6,2,8,-6,-1,-7,6,7,-7,2,-5,-6,-9,-5,9,-3,-6,4,8,8,-4,2,-10,9,-4,-7,-1,-5,3,1,-10,8,9,1,-1,-9,-6,4,1,-5,4,5,6,10,-2,1,3,-9,3,-2,-10,1,3,2,-1,-3,9,-2,8,4,3,3,9,10,3,-8,4,-9,-7,3,7,2,-3,-3,-8,-2,-6,-7,-8,-7,-1,-4,-2,-4,-3,6,-2,-8,-7,-10,9,6,-7,-8,-1,6,10,7,-2,-3,-7,-6,9,7,-4,1,-9,9,-1,10,4,4,-7,-7,3,5,1,2,-5,8,-6,-3,7,10,10,9,-10,-7,-5,8,-6,-9,-4,9,-2,9,5,2,3,-9,3,-9,3,10,2,-8,-10,-5,10,4,-10,-9,-6,-8,-2,-3,7,6,8,7,-3,-8,6,9,-7,9,7,-4,-8,3,-9,4,8,5,-5,8,9,-3,9,-10,-5,6,6,5,2,3,4,-9,-7,-10,7,2,-4,-1,-7,1,-2,1,1,-2,-4,6,4,2,-8,-8,8,10,-7,7,4,3,7,1,-2,10,-2,3,10,9,-8,2,9,10,-5,-7,4,-4,-5,-10,-10,4,7,-9,-5,-8,5,8,3,9,4,-8,9,-1,7,-3,2,-10,-5,9,-7,-2,6,-8,10,9,-7,-4,7,3,7,-2,3,9,2,7,-4,4,9,-10,-1,-2,-6,-7,2,-10,5,-7,5,-6,7,-6,2,-2,2,-1,5,-3,10,7,-9,-10,-8,-5,-6,-1,6,-3,-7,-1,-10,-2,-6,5,5,9,-8,10,-7,-10,8,5,9,2,4,3,-8,9,1,9,6,2,6,-10,7,-5,1,8,-7,-4,-6,6,-5,7,9,-2,5,-10,5,3,2,-6,-7,1,-7,-6,5,6,-5,3,-10,-2,2,7,4,1,9,8,-4,-1,-5,3,-6,-7,-3,-8,9,1,2,1,9,1,-1,-7,10,-5,4,5,8,-3,-6,5,1,-9,3,8,-9,-1,7,-5,-5,-2,-8,-1,10,-7,-4,-4,-8,7,-2,-3,-5,-1,-4,1,-7,-2,-1,3,-6,-10,3,-7,-6,2,1,-8,4,1,8,-1,7,3,-6,-9,-7,5,2,2,-8,7,4,8,-5,-7,-2,-9,2,7,6,-2,-7,-4,-9,-1,3,-8,1,6,-8,-10,-3,-1,9,-5,-6,-2,4,-5,4,-1,2,-5,-7,9,-6,-6,-8,-6,-5,-5,-9,-7,3,-5,-6,4,-6,-10,-2,8,10,8,1,8,-8,8,-10,-10,6,9,-4,1,4,4,-4,7,-8,-3,-1,-4,4,6,-10,-4,-6,10,8,1,-5,-1,1,3,2,-8,-7,-2,8,-4,6,5,-2,1,8,-3,9,2,-1,9,2,-4,10,9,-4,4,-10,-10,-6,2,3,7,-1,-1,-5,-4,6,6,-6,3,8,9,-8,10,-10,-8,-10,-6,-5,3,-7,-6,7,-10,7,-2,-3,-2,-10,3,-9,-4,7,1,-6,9,-1,8,-7,2,2,-8,7,-5,6,-10,10,-3,-3,-6,-9,4,-2,-10,1,-2,8,-9,9,5,-2,10,8,-9,-10,-9,2,8,6,-2,4,1,1,8,-3,-5,7,-9,1,-5,2,9,-9,-7,-9,-3,2,-4,5,-5,6,-5,7,7,9,10,-7,-7,-8,-1,-3,9,-10,8,-6,4,-5,6,-3,2,4,-5,-1,-7,-5,5,3,-5,6,6,8,-5,-9,5,-3,-3,-8,-9,-1,5,5,5,-3,-10,-4,2,-8,-3,7,10,6,10,4,-1,6,-10,-10,-10,3,-4,8,-9,3,7,1,-4,3,-10,-3,-9,-1,-1,-1,-3,-3,-3,3,1,-3,7,-8,-10,-7,7,3,1,4,-2,7,3,-2,-2,6,2,4,3,2,-2,-6,-9,6,3,-5,6,2,-1,6,1,9,-3,-3,-6,2,6,-10,6,-6,-5,-4,3,2,10,9,2,-5,4,1,-4,9,-10,-4,4,-3], dtype = "uint32")#candidate|3114|(1470,)|const|uint32
const_3115 = relay.const([-3.695964,0.254923,7.184669,5.578254,8.578987,-3.011839,-2.425421,-5.279068,-9.550466,4.439247,-8.041089,-1.119189,-3.739793,-4.306902,-8.390930,7.823344,-8.584078,-9.317150,-9.260143,2.492008,-8.220661,-7.254888,-9.006370,-4.923369,8.611448,-6.675402,-7.227092,1.005612,5.804323,-8.444452,7.227557,-3.378090,-9.600278,3.494467,5.680387,0.349763,-0.546065,-6.375190,-8.888954,-6.474532,-2.967571,8.605413,5.105975,7.852791,-9.879881,3.118399,2.761048,-1.524183,-8.959845,4.521652,-9.843625,3.329272], dtype = "float64")#candidate|3115|(52,)|const|float64
var_3116 = relay.var("var_3116", dtype = "float64", shape = (117,))#candidate|3116|(117,)|var|float64
call_3113 = relay.TupleGetItem(func_3020_call(relay.reshape(const_3114.astype('uint32'), [1470,]), relay.reshape(const_3115.astype('float64'), [52,]), relay.reshape(var_3116.astype('float64'), [117,]), ), 0)
call_3117 = relay.TupleGetItem(func_3025_call(relay.reshape(const_3114.astype('uint32'), [1470,]), relay.reshape(const_3115.astype('float64'), [52,]), relay.reshape(var_3116.astype('float64'), [117,]), ), 0)
func_1140_call = mod.get_global_var('func_1140')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_3119 = relay.TupleGetItem(func_1140_call(relay.reshape(call_3113.astype('float32'), [7, 78]), relay.reshape(const_3115.astype('float64'), [1, 52]), ), 0)
call_3120 = relay.TupleGetItem(func_1144_call(relay.reshape(call_3113.astype('float32'), [7, 78]), relay.reshape(const_3115.astype('float64'), [1, 52]), ), 0)
output = relay.Tuple([call_3103,call_3113,const_3114,const_3115,var_3116,call_3119,])
output2 = relay.Tuple([call_3104,call_3117,const_3114,const_3115,var_3116,call_3120,])
func_3121 = relay.Function([var_3116,], output)
mod['func_3121'] = func_3121
mod = relay.transform.InferType()(mod)
var_3122 = relay.var("var_3122", dtype = "float64", shape = (117,))#candidate|3122|(117,)|var|float64
output = func_3121(var_3122)
func_3123 = relay.Function([var_3122], output)
mutated_mod['func_3123'] = func_3123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2050_call = mod.get_global_var('func_2050')
func_2051_call = mutated_mod.get_global_var('func_2051')
call_3139 = relay.TupleGetItem(func_2050_call(), 0)
call_3140 = relay.TupleGetItem(func_2051_call(), 0)
output = relay.Tuple([call_3139,])
output2 = relay.Tuple([call_3140,])
func_3158 = relay.Function([], output)
mod['func_3158'] = func_3158
mod = relay.transform.InferType()(mod)
output = func_3158()
func_3159 = relay.Function([], output)
mutated_mod['func_3159'] = func_3159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1304_call = mod.get_global_var('func_1304')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_3230 = relay.TupleGetItem(func_1304_call(), 0)
call_3231 = relay.TupleGetItem(func_1305_call(), 0)
var_3233 = relay.var("var_3233", dtype = "float64", shape = (7, 78))#candidate|3233|(7, 78)|var|float64
bop_3234 = relay.floor_divide(call_3230.astype('float64'), relay.reshape(var_3233.astype('float64'), relay.shape_of(call_3230))) # shape=(7, 78)
bop_3237 = relay.floor_divide(call_3231.astype('float64'), relay.reshape(var_3233.astype('float64'), relay.shape_of(call_3231))) # shape=(7, 78)
func_2933_call = mod.get_global_var('func_2933')
func_2935_call = mutated_mod.get_global_var('func_2935')
call_3242 = relay.TupleGetItem(func_2933_call(), 0)
call_3243 = relay.TupleGetItem(func_2935_call(), 0)
func_3030_call = mod.get_global_var('func_3030')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_3249 = relay.TupleGetItem(func_3030_call(), 0)
call_3250 = relay.TupleGetItem(func_3031_call(), 0)
func_1850_call = mod.get_global_var('func_1850')
func_1853_call = mutated_mod.get_global_var('func_1853')
var_3254 = relay.var("var_3254", dtype = "float64", shape = (52,))#candidate|3254|(52,)|var|float64
call_3253 = relay.TupleGetItem(func_1850_call(relay.reshape(var_3254.astype('float64'), [52,])), 5)
call_3255 = relay.TupleGetItem(func_1853_call(relay.reshape(var_3254.astype('float64'), [52,])), 5)
output = relay.Tuple([bop_3234,call_3242,call_3249,call_3253,var_3254,])
output2 = relay.Tuple([bop_3237,call_3243,call_3250,call_3255,var_3254,])
func_3260 = relay.Function([var_3233,var_3254,], output)
mod['func_3260'] = func_3260
mod = relay.transform.InferType()(mod)
var_3261 = relay.var("var_3261", dtype = "float64", shape = (7, 78))#candidate|3261|(7, 78)|var|float64
var_3262 = relay.var("var_3262", dtype = "float64", shape = (52,))#candidate|3262|(52,)|var|float64
output = func_3260(var_3261,var_3262,)
func_3263 = relay.Function([var_3261,var_3262,], output)
mutated_mod['func_3263'] = func_3263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2199_call = mod.get_global_var('func_2199')
func_2200_call = mutated_mod.get_global_var('func_2200')
call_3273 = relay.TupleGetItem(func_2199_call(), 0)
call_3274 = relay.TupleGetItem(func_2200_call(), 0)
func_3121_call = mod.get_global_var('func_3121')
func_3123_call = mutated_mod.get_global_var('func_3123')
const_3300 = relay.const([-3.352048,-9.451229,-1.680422,6.921354,-6.951186,1.664910,1.757829,-8.742656,-6.255480,-4.543789,0.046120,-0.597709,3.833240,-5.712000,0.026863,1.593369,-0.120448,8.979482,-5.965467,1.544863,3.191669,9.794834,5.582554,-8.357772,-3.050279,-1.787121,-5.770924,9.623139,2.765109,4.259673,-4.442755,4.116304,-7.441560,2.850691,8.281177,2.630763,1.902782,3.960706,-7.928859,1.151045,3.562172,-5.826700,-4.354906,6.042873,3.758091,-5.637470,1.989937,6.873879,-7.741610,-6.189857,0.513334,-4.138919,-5.283023,3.650428,-0.810791,-3.647738,1.265800,8.643023,-5.011480,9.562180,2.701334,7.672300,6.452295,-5.009237,-7.896733,9.377885,9.388219,-0.116880,-9.536164,-2.388727,-3.867818,-7.945882,-3.156391,-0.075921,-5.496436,-1.841608,3.551295,9.878860,-6.524203,1.677921,-3.172838,-1.992897,-8.157750,-0.236625,2.830097,4.914319,2.795545,4.425161,-0.550706,-8.093688,4.541624,-1.680769,1.884129,-1.428453,-5.530227,-6.051256,-8.655531,-3.081245,1.337761,5.055001,8.822680,0.114733,-6.489395,-6.076420,-6.491918,-9.445248,-1.575971,-6.145591,-3.962478,4.060048,-7.195705,5.488099,5.463391,-2.102681,-9.922406,5.585425,-7.143652], dtype = "float64")#candidate|3300|(117,)|const|float64
call_3299 = relay.TupleGetItem(func_3121_call(relay.reshape(const_3300.astype('float64'), [117,])), 5)
call_3301 = relay.TupleGetItem(func_3123_call(relay.reshape(const_3300.astype('float64'), [117,])), 5)
func_3030_call = mod.get_global_var('func_3030')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_3307 = relay.TupleGetItem(func_3030_call(), 0)
call_3308 = relay.TupleGetItem(func_3031_call(), 0)
output = relay.Tuple([call_3273,call_3299,const_3300,call_3307,])
output2 = relay.Tuple([call_3274,call_3301,const_3300,call_3308,])
func_3328 = relay.Function([], output)
mod['func_3328'] = func_3328
mod = relay.transform.InferType()(mod)
output = func_3328()
func_3329 = relay.Function([], output)
mutated_mod['func_3329'] = func_3329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2199_call = mod.get_global_var('func_2199')
func_2200_call = mutated_mod.get_global_var('func_2200')
call_3347 = relay.TupleGetItem(func_2199_call(), 0)
call_3348 = relay.TupleGetItem(func_2200_call(), 0)
func_3328_call = mod.get_global_var('func_3328')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_3349 = relay.TupleGetItem(func_3328_call(), 2)
call_3350 = relay.TupleGetItem(func_3329_call(), 2)
func_2103_call = mod.get_global_var('func_2103')
func_2105_call = mutated_mod.get_global_var('func_2105')
call_3357 = func_2103_call()
call_3358 = func_2103_call()
func_1581_call = mod.get_global_var('func_1581')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_3359 = relay.TupleGetItem(func_1581_call(relay.reshape(call_3357.astype('float32'), [7, 78]), relay.reshape(call_3357.astype('float32'), [7, 78]), ), 0)
call_3360 = relay.TupleGetItem(func_1585_call(relay.reshape(call_3357.astype('float32'), [7, 78]), relay.reshape(call_3357.astype('float32'), [7, 78]), ), 0)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
const_3372 = relay.const(1, dtype = "int64")#candidate|3372|()|const|int64
call_3371 = relay.TupleGetItem(func_2676_call(relay.reshape(const_3372.astype('int64'), [])), 0)
call_3373 = relay.TupleGetItem(func_2678_call(relay.reshape(const_3372.astype('int64'), [])), 0)
bop_3375 = relay.multiply(call_3359.astype('uint8'), relay.reshape(call_3357.astype('uint8'), relay.shape_of(call_3359))) # shape=(7, 78)
bop_3378 = relay.multiply(call_3360.astype('uint8'), relay.reshape(call_3358.astype('uint8'), relay.shape_of(call_3360))) # shape=(7, 78)
output = relay.Tuple([call_3347,call_3349,call_3371,const_3372,bop_3375,])
output2 = relay.Tuple([call_3348,call_3350,call_3373,const_3372,bop_3378,])
func_3386 = relay.Function([], output)
mod['func_3386'] = func_3386
mod = relay.transform.InferType()(mod)
output = func_3386()
func_3387 = relay.Function([], output)
mutated_mod['func_3387'] = func_3387
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3430 = relay.var("var_3430", dtype = "float32", shape = (15, 3, 3))#candidate|3430|(15, 3, 3)|var|float32
uop_3431 = relay.cos(var_3430.astype('float32')) # shape=(15, 3, 3)
func_3158_call = mod.get_global_var('func_3158')
func_3159_call = mutated_mod.get_global_var('func_3159')
call_3436 = relay.TupleGetItem(func_3158_call(), 0)
call_3437 = relay.TupleGetItem(func_3159_call(), 0)
output = relay.Tuple([uop_3431,call_3436,])
output2 = relay.Tuple([uop_3431,call_3437,])
func_3440 = relay.Function([var_3430,], output)
mod['func_3440'] = func_3440
mod = relay.transform.InferType()(mod)
mutated_mod['func_3440'] = func_3440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3441 = relay.var("var_3441", dtype = "float32", shape = (15, 3, 3))#candidate|3441|(15, 3, 3)|var|float32
func_3440_call = mutated_mod.get_global_var('func_3440')
call_3442 = func_3440_call(var_3441)
output = call_3442
func_3443 = relay.Function([var_3441], output)
mutated_mod['func_3443'] = func_3443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2199_call = mod.get_global_var('func_2199')
func_2200_call = mutated_mod.get_global_var('func_2200')
call_3481 = relay.TupleGetItem(func_2199_call(), 0)
call_3482 = relay.TupleGetItem(func_2200_call(), 0)
func_2340_call = mod.get_global_var('func_2340')
func_2341_call = mutated_mod.get_global_var('func_2341')
call_3483 = relay.TupleGetItem(func_2340_call(), 0)
call_3484 = relay.TupleGetItem(func_2341_call(), 0)
func_1451_call = mod.get_global_var('func_1451')
func_1456_call = mutated_mod.get_global_var('func_1456')
var_3487 = relay.var("var_3487", dtype = "float64", shape = (7, 78))#candidate|3487|(7, 78)|var|float64
const_3488 = relay.const(-9.275921, dtype = "float64")#candidate|3488|()|const|float64
const_3489 = relay.const([-2.811228,-4.385375,5.765413,-8.352289,-2.908065,2.451494,-1.884000,-5.115618,-3.231298,-9.813513,-5.284202,-0.330931,4.275103,3.812806,-0.091267,-1.058347,1.870578,-6.772961,-0.390469,-6.853957,-6.325018,-4.071311,-3.733704,6.301605,1.412182,0.864727,-2.076340,4.937104,-5.987115,1.994548,7.388879,1.404913,-7.945643,0.806208,0.200257,4.590647,9.959964,-3.332085,-9.803888,-9.134798,1.239182,-4.501957,-8.323831,4.381149,-8.413148,1.091604,5.136112,-2.517414,-6.624690,-1.723298,0.428777,-1.880596,3.742957,-7.368530,-1.767623,-1.871478,-1.019967,-7.152009,-0.722647,-8.372969,-3.471184,-9.575999,-2.719601,4.366570,-1.638470,-9.001802,-0.921699,-0.034564,4.421796,5.296396,-2.918745,-3.492067,-8.857034,7.473634,-4.530391,5.211243,4.476471,-6.881195,8.476486,0.564372,8.721254,4.916492,-2.433773,-0.468377,5.302524,1.022761,7.459778,-2.716979,-3.156081,-5.927921,5.128160,0.858734,-0.797087,7.008567,-2.864896,0.175822,-8.415762,2.997970,8.651917,5.662526,6.922931,-4.137312,-8.205632,6.379005,-7.749424,7.269721,1.342794,-3.896558,3.455100,0.705622,-9.255823,3.491360,-3.163753,2.045063,-0.523630,-8.234283,-9.892042], dtype = "float64")#candidate|3489|(117,)|const|float64
var_3490 = relay.var("var_3490", dtype = "float64", shape = (52,))#candidate|3490|(52,)|var|float64
call_3486 = relay.TupleGetItem(func_1451_call(relay.reshape(var_3487.astype('float64'), [7, 78]), relay.reshape(const_3488.astype('float64'), []), relay.reshape(const_3489.astype('float64'), [117,]), relay.reshape(var_3490.astype('float64'), [52,]), ), 7)
call_3491 = relay.TupleGetItem(func_1456_call(relay.reshape(var_3487.astype('float64'), [7, 78]), relay.reshape(const_3488.astype('float64'), []), relay.reshape(const_3489.astype('float64'), [117,]), relay.reshape(var_3490.astype('float64'), [52,]), ), 7)
output = relay.Tuple([call_3481,call_3483,call_3486,var_3487,const_3488,const_3489,var_3490,])
output2 = relay.Tuple([call_3482,call_3484,call_3491,var_3487,const_3488,const_3489,var_3490,])
func_3492 = relay.Function([var_3487,var_3490,], output)
mod['func_3492'] = func_3492
mod = relay.transform.InferType()(mod)
var_3493 = relay.var("var_3493", dtype = "float64", shape = (7, 78))#candidate|3493|(7, 78)|var|float64
var_3494 = relay.var("var_3494", dtype = "float64", shape = (52,))#candidate|3494|(52,)|var|float64
output = func_3492(var_3493,var_3494,)
func_3495 = relay.Function([var_3493,var_3494,], output)
mutated_mod['func_3495'] = func_3495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3328_call = mod.get_global_var('func_3328')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_3599 = relay.TupleGetItem(func_3328_call(), 3)
call_3600 = relay.TupleGetItem(func_3329_call(), 3)
var_3603 = relay.var("var_3603", dtype = "float32", shape = (91, 6))#candidate|3603|(91, 6)|var|float32
bop_3604 = relay.not_equal(call_3599.astype('bool'), relay.reshape(var_3603.astype('bool'), relay.shape_of(call_3599))) # shape=(91, 6)
bop_3607 = relay.not_equal(call_3600.astype('bool'), relay.reshape(var_3603.astype('bool'), relay.shape_of(call_3600))) # shape=(91, 6)
output = bop_3604
output2 = bop_3607
func_3610 = relay.Function([var_3603,], output)
mod['func_3610'] = func_3610
mod = relay.transform.InferType()(mod)
var_3611 = relay.var("var_3611", dtype = "float32", shape = (91, 6))#candidate|3611|(91, 6)|var|float32
output = func_3610(var_3611)
func_3612 = relay.Function([var_3611], output)
mutated_mod['func_3612'] = func_3612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2199_call = mod.get_global_var('func_2199')
func_2200_call = mutated_mod.get_global_var('func_2200')
call_3698 = relay.TupleGetItem(func_2199_call(), 0)
call_3699 = relay.TupleGetItem(func_2200_call(), 0)
output = relay.Tuple([call_3698,])
output2 = relay.Tuple([call_3699,])
func_3703 = relay.Function([], output)
mod['func_3703'] = func_3703
mod = relay.transform.InferType()(mod)
mutated_mod['func_3703'] = func_3703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3703_call = mutated_mod.get_global_var('func_3703')
call_3704 = func_3703_call()
output = call_3704
func_3705 = relay.Function([], output)
mutated_mod['func_3705'] = func_3705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3719 = relay.var("var_3719", dtype = "uint16", shape = (4, 2, 12))#candidate|3719|(4, 2, 12)|var|uint16
var_3720 = relay.var("var_3720", dtype = "uint16", shape = (4, 2, 12))#candidate|3720|(4, 2, 12)|var|uint16
bop_3721 = relay.not_equal(var_3719.astype('bool'), relay.reshape(var_3720.astype('bool'), relay.shape_of(var_3719))) # shape=(4, 2, 12)
output = relay.Tuple([bop_3721,])
output2 = relay.Tuple([bop_3721,])
func_3740 = relay.Function([var_3719,var_3720,], output)
mod['func_3740'] = func_3740
mod = relay.transform.InferType()(mod)
var_3741 = relay.var("var_3741", dtype = "uint16", shape = (4, 2, 12))#candidate|3741|(4, 2, 12)|var|uint16
var_3742 = relay.var("var_3742", dtype = "uint16", shape = (4, 2, 12))#candidate|3742|(4, 2, 12)|var|uint16
output = func_3740(var_3741,var_3742,)
func_3743 = relay.Function([var_3741,var_3742,], output)
mutated_mod['func_3743'] = func_3743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2796_call = mod.get_global_var('func_2796')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_3782 = relay.TupleGetItem(func_2796_call(), 0)
call_3783 = relay.TupleGetItem(func_2797_call(), 0)
var_3786 = relay.var("var_3786", dtype = "int32", shape = (7, 78))#candidate|3786|(7, 78)|var|int32
bop_3787 = relay.right_shift(call_3782.astype('int16'), relay.reshape(var_3786.astype('int16'), relay.shape_of(call_3782))) # shape=(7, 78)
bop_3790 = relay.right_shift(call_3783.astype('int16'), relay.reshape(var_3786.astype('int16'), relay.shape_of(call_3783))) # shape=(7, 78)
func_1662_call = mod.get_global_var('func_1662')
func_1663_call = mutated_mod.get_global_var('func_1663')
call_3801 = relay.TupleGetItem(func_1662_call(), 0)
call_3802 = relay.TupleGetItem(func_1663_call(), 0)
uop_3806 = relay.atan(call_3782.astype('float64')) # shape=(7, 78)
uop_3808 = relay.atan(call_3783.astype('float64')) # shape=(7, 78)
func_1218_call = mod.get_global_var('func_1218')
func_1222_call = mutated_mod.get_global_var('func_1222')
var_3814 = relay.var("var_3814", dtype = "float64", shape = ())#candidate|3814|()|var|float64
const_3815 = relay.const([[4.898759,1.610400,-4.273141,3.130020,5.526588,-1.301597,-7.836961,-4.316226,-1.513669],[5.626768,-2.345432,3.844973,3.964608,-5.003224,-9.530215,9.073563,4.838855,0.146268],[-0.284524,5.080415,-7.295298,3.631789,-1.909951,3.331728,7.612672,-5.229097,5.941046],[6.666400,3.330454,-3.094464,-8.455629,6.616759,-9.058048,7.708880,8.984711,-4.354437],[-8.073544,-2.314638,0.639082,6.698835,2.587415,9.466929,4.428678,9.810329,-3.795113],[-2.417870,5.849061,-9.310559,-4.121741,-5.439119,-5.249608,-4.720477,8.675751,-0.270463],[-0.584417,4.729937,2.805444,-0.731050,7.374365,3.055449,-5.337914,-5.192070,-1.562912],[2.683229,-7.686172,-9.117058,9.175025,6.751440,-7.564269,0.009620,7.494920,-1.653918],[9.305487,1.321270,-4.851266,0.339085,5.366585,-1.826068,-7.790437,-7.013348,-9.060796],[-8.464132,2.852613,-6.276916,6.598320,-1.428022,-4.014831,0.731579,-7.668303,6.755515],[-5.231304,2.644356,-1.727823,3.732558,7.614994,-1.896292,-4.160089,7.652466,-3.658167],[8.346651,-6.058794,4.288056,-0.416663,-1.476023,5.010933,8.578032,-6.893309,9.801008],[9.508339,-8.224247,1.421120,-3.612481,6.393632,8.753559,8.839577,0.918418,3.641385]], dtype = "float64")#candidate|3815|(13, 9)|const|float64
call_3813 = func_1218_call(relay.reshape(var_3814.astype('float64'), []), relay.reshape(const_3815.astype('float64'), [1, 13, 9]), )
call_3816 = func_1218_call(relay.reshape(var_3814.astype('float64'), []), relay.reshape(const_3815.astype('float64'), [1, 13, 9]), )
func_3158_call = mod.get_global_var('func_3158')
func_3159_call = mutated_mod.get_global_var('func_3159')
call_3829 = relay.TupleGetItem(func_3158_call(), 0)
call_3830 = relay.TupleGetItem(func_3159_call(), 0)
func_2022_call = mod.get_global_var('func_2022')
func_2026_call = mutated_mod.get_global_var('func_2026')
var_3833 = relay.var("var_3833", dtype = "float32", shape = (352,))#candidate|3833|(352,)|var|float32
call_3832 = relay.TupleGetItem(func_2022_call(relay.reshape(var_3833.astype('float32'), [8, 4, 11]), relay.reshape(const_3815.astype('float64'), [117,]), ), 1)
call_3834 = relay.TupleGetItem(func_2026_call(relay.reshape(var_3833.astype('float32'), [8, 4, 11]), relay.reshape(const_3815.astype('float64'), [117,]), ), 1)
uop_3839 = relay.exp(uop_3806.astype('float32')) # shape=(7, 78)
uop_3841 = relay.exp(uop_3808.astype('float32')) # shape=(7, 78)
var_3845 = relay.var("var_3845", dtype = "float32", shape = (7, 78))#candidate|3845|(7, 78)|var|float32
bop_3846 = relay.not_equal(uop_3839.astype('bool'), relay.reshape(var_3845.astype('bool'), relay.shape_of(uop_3839))) # shape=(7, 78)
bop_3849 = relay.not_equal(uop_3841.astype('bool'), relay.reshape(var_3845.astype('bool'), relay.shape_of(uop_3841))) # shape=(7, 78)
bop_3852 = relay.mod(call_3782.astype('float32'), relay.reshape(var_3786.astype('float32'), relay.shape_of(call_3782))) # shape=(7, 78)
bop_3855 = relay.mod(call_3783.astype('float32'), relay.reshape(var_3786.astype('float32'), relay.shape_of(call_3783))) # shape=(7, 78)
output = relay.Tuple([bop_3787,call_3801,call_3813,var_3814,const_3815,call_3829,call_3832,var_3833,bop_3846,bop_3852,])
output2 = relay.Tuple([bop_3790,call_3802,call_3816,var_3814,const_3815,call_3830,call_3834,var_3833,bop_3849,bop_3855,])
func_3856 = relay.Function([var_3786,var_3814,var_3833,var_3845,], output)
mod['func_3856'] = func_3856
mod = relay.transform.InferType()(mod)
var_3857 = relay.var("var_3857", dtype = "int32", shape = (7, 78))#candidate|3857|(7, 78)|var|int32
var_3858 = relay.var("var_3858", dtype = "float64", shape = ())#candidate|3858|()|var|float64
var_3859 = relay.var("var_3859", dtype = "float32", shape = (352,))#candidate|3859|(352,)|var|float32
var_3860 = relay.var("var_3860", dtype = "float32", shape = (7, 78))#candidate|3860|(7, 78)|var|float32
output = func_3856(var_3857,var_3858,var_3859,var_3860,)
func_3861 = relay.Function([var_3857,var_3858,var_3859,var_3860,], output)
mutated_mod['func_3861'] = func_3861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3386_call = mod.get_global_var('func_3386')
func_3387_call = mutated_mod.get_global_var('func_3387')
call_3882 = relay.TupleGetItem(func_3386_call(), 2)
call_3883 = relay.TupleGetItem(func_3387_call(), 2)
output = relay.Tuple([call_3882,])
output2 = relay.Tuple([call_3883,])
func_3884 = relay.Function([], output)
mod['func_3884'] = func_3884
mod = relay.transform.InferType()(mod)
mutated_mod['func_3884'] = func_3884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mutated_mod.get_global_var('func_3884')
call_3885 = func_3884_call()
output = call_3885
func_3886 = relay.Function([], output)
mutated_mod['func_3886'] = func_3886
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4155 = relay.var("var_4155", dtype = "float32", shape = (12, 11, 10))#candidate|4155|(12, 11, 10)|var|float32
uop_4156 = relay.rsqrt(var_4155.astype('float32')) # shape=(12, 11, 10)
func_1473_call = mod.get_global_var('func_1473')
func_1474_call = mutated_mod.get_global_var('func_1474')
call_4160 = relay.TupleGetItem(func_1473_call(), 0)
call_4161 = relay.TupleGetItem(func_1474_call(), 0)
uop_4165 = relay.sqrt(uop_4156.astype('float64')) # shape=(12, 11, 10)
bop_4167 = relay.bitwise_or(uop_4156.astype('uint32'), relay.reshape(var_4155.astype('uint32'), relay.shape_of(uop_4156))) # shape=(12, 11, 10)
output = relay.Tuple([call_4160,uop_4165,bop_4167,])
output2 = relay.Tuple([call_4161,uop_4165,bop_4167,])
func_4175 = relay.Function([var_4155,], output)
mod['func_4175'] = func_4175
mod = relay.transform.InferType()(mod)
var_4176 = relay.var("var_4176", dtype = "float32", shape = (12, 11, 10))#candidate|4176|(12, 11, 10)|var|float32
output = func_4175(var_4176)
func_4177 = relay.Function([var_4176], output)
mutated_mod['func_4177'] = func_4177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4184 = relay.var("var_4184", dtype = "uint32", shape = (1, 5, 13))#candidate|4184|(1, 5, 13)|var|uint32
var_4185 = relay.var("var_4185", dtype = "uint32", shape = (13, 5, 13))#candidate|4185|(13, 5, 13)|var|uint32
bop_4186 = relay.less_equal(var_4184.astype('bool'), var_4185.astype('bool')) # shape=(13, 5, 13)
func_2842_call = mod.get_global_var('func_2842')
func_2843_call = mutated_mod.get_global_var('func_2843')
call_4191 = relay.TupleGetItem(func_2842_call(), 0)
call_4192 = relay.TupleGetItem(func_2843_call(), 0)
uop_4193 = relay.log2(var_4185.astype('float64')) # shape=(13, 5, 13)
func_2340_call = mod.get_global_var('func_2340')
func_2341_call = mutated_mod.get_global_var('func_2341')
call_4199 = relay.TupleGetItem(func_2340_call(), 0)
call_4200 = relay.TupleGetItem(func_2341_call(), 0)
func_707_call = mod.get_global_var('func_707')
func_711_call = mutated_mod.get_global_var('func_711')
const_4203 = relay.const([7,-7,-5,8,-6,-9,-1,-1,-2,1,-5,-6,-8,5,6,-1,-9,3,5,-1,6,-3,3,-7,9,6,9,-8,-1,-10,4,-1,10,-6,-5,-7,-10,-7,4,-7,2,-6,7,7,-8,8,-8,4,3,4,6,-9,2,9,-8,9,-10,-10,-1,-9,-5,3,-6,-3,7,-6,-1,-7,-1,-8,-3,-2,6,-3,10,-7,9,-8,9,3,-1,6,6,-4,2,-7,-1,-7,10,5,2,-4,-4,-3,6,-6,6,8,7,-8,-3,3,5,-2,-2,6,-9,-4,-3,-5,-4,5,-4,10,2,-8,5,9,-3,-5,-8,-8,1,1,8,2,-6,10,9,-9,9,6,-3,4,-7,-9,-1,-3,9,-6,-9,-7,-5,-5,10,-5,-3,3,-9,-2,-7,3,-7,8,-2,3,3,4,-8,2,3,6,-10,4,7,6,-6,-2,7,1,6,-9,-3,-7,-4,-2,6,-4,9,4,5,-10,8,8,-1,5,2,-6,-8,7,-10,10,-6,-2,4,1,-5,2,2,-1,8,10,-1,-4,-9,-3,-9,7,-9,2], dtype = "uint64")#candidate|4203|(210,)|const|uint64
call_4202 = relay.TupleGetItem(func_707_call(relay.reshape(call_4191.astype('float32'), [7, 6, 13]), relay.reshape(const_4203.astype('uint64'), [210,]), ), 1)
call_4204 = relay.TupleGetItem(func_711_call(relay.reshape(call_4191.astype('float32'), [7, 6, 13]), relay.reshape(const_4203.astype('uint64'), [210,]), ), 1)
output = relay.Tuple([bop_4186,call_4191,uop_4193,call_4199,call_4202,const_4203,])
output2 = relay.Tuple([bop_4186,call_4192,uop_4193,call_4200,call_4204,const_4203,])
func_4205 = relay.Function([var_4184,var_4185,], output)
mod['func_4205'] = func_4205
mod = relay.transform.InferType()(mod)
var_4206 = relay.var("var_4206", dtype = "uint32", shape = (1, 5, 13))#candidate|4206|(1, 5, 13)|var|uint32
var_4207 = relay.var("var_4207", dtype = "uint32", shape = (13, 5, 13))#candidate|4207|(13, 5, 13)|var|uint32
output = func_4205(var_4206,var_4207,)
func_4208 = relay.Function([var_4206,var_4207,], output)
mutated_mod['func_4208'] = func_4208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3101_call = mod.get_global_var('func_3101')
func_3102_call = mutated_mod.get_global_var('func_3102')
call_4210 = relay.TupleGetItem(func_3101_call(), 0)
call_4211 = relay.TupleGetItem(func_3102_call(), 0)
output = relay.Tuple([call_4210,])
output2 = relay.Tuple([call_4211,])
func_4220 = relay.Function([], output)
mod['func_4220'] = func_4220
mod = relay.transform.InferType()(mod)
output = func_4220()
func_4221 = relay.Function([], output)
mutated_mod['func_4221'] = func_4221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1249_call = mod.get_global_var('func_1249')
func_1251_call = mutated_mod.get_global_var('func_1251')
call_4240 = func_1249_call()
call_4241 = func_1249_call()
func_3610_call = mod.get_global_var('func_3610')
func_3612_call = mutated_mod.get_global_var('func_3612')
var_4243 = relay.var("var_4243", dtype = "float32", shape = (546,))#candidate|4243|(546,)|var|float32
call_4242 = func_3610_call(relay.reshape(var_4243.astype('float32'), [91, 6]))
call_4244 = func_3610_call(relay.reshape(var_4243.astype('float32'), [91, 6]))
output = relay.Tuple([call_4240,call_4242,var_4243,])
output2 = relay.Tuple([call_4241,call_4244,var_4243,])
func_4246 = relay.Function([var_4243,], output)
mod['func_4246'] = func_4246
mod = relay.transform.InferType()(mod)
mutated_mod['func_4246'] = func_4246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4247 = relay.var("var_4247", dtype = "float32", shape = (546,))#candidate|4247|(546,)|var|float32
func_4246_call = mutated_mod.get_global_var('func_4246')
call_4248 = func_4246_call(var_4247)
output = call_4248
func_4249 = relay.Function([var_4247], output)
mutated_mod['func_4249'] = func_4249
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4256 = relay.const([[[-5.140885],[3.841192],[3.521380],[0.471807],[0.332929],[9.958098],[5.546681],[1.796084],[9.703610],[-9.165322],[-9.047071],[-7.797313],[-3.922966]],[[1.227150],[5.015583],[8.131083],[2.142196],[1.507880],[-1.244907],[3.792139],[2.898252],[-2.937857],[-1.649127],[4.888574],[7.060231],[9.905272]],[[-0.725803],[1.981327],[2.146159],[-9.703164],[-6.884261],[-9.998486],[1.101664],[-5.192284],[-6.757708],[4.666764],[-1.719821],[-8.989274],[2.914925]],[[-1.963307],[-7.707843],[-5.376785],[-5.634897],[1.369093],[5.371471],[-0.641912],[6.121922],[7.871989],[-9.682495],[-4.045954],[-2.751307],[8.216112]],[[3.608253],[5.558222],[1.351377],[4.170521],[1.270644],[-3.340985],[-5.451119],[2.152697],[7.922405],[8.391373],[-4.133628],[5.113499],[-1.654712]],[[5.163569],[3.983314],[9.814538],[4.645712],[-1.520170],[-9.090837],[-9.197038],[3.428812],[2.460667],[-4.776377],[6.542767],[-1.372051],[-9.088693]],[[-9.775001],[-2.452108],[0.540668],[5.723149],[-7.589610],[0.198292],[2.080354],[-5.204057],[8.435400],[-5.754819],[0.845106],[-7.801799],[-9.949464]]], dtype = "float64")#candidate|4256|(7, 13, 1)|const|float64
uop_4257 = relay.cos(const_4256.astype('float64')) # shape=(7, 13, 1)
bop_4261 = relay.greater(const_4256.astype('bool'), relay.reshape(uop_4257.astype('bool'), relay.shape_of(const_4256))) # shape=(7, 13, 1)
output = relay.Tuple([bop_4261,])
output2 = relay.Tuple([bop_4261,])
func_4267 = relay.Function([], output)
mod['func_4267'] = func_4267
mod = relay.transform.InferType()(mod)
output = func_4267()
func_4268 = relay.Function([], output)
mutated_mod['func_4268'] = func_4268
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4274 = relay.const([[[9,-10,10,2,5],[3,4,-2,5,-3],[2,5,-1,3,6],[-5,-4,3,-8,8],[-2,3,-10,4,6],[6,-5,4,-10,9],[-4,10,-1,2,7],[-5,8,5,-5,-5],[-6,7,-4,7,-7],[-9,-3,9,-1,5],[10,4,-10,-7,-6],[7,3,-3,-6,-10],[-1,6,-7,7,-5],[-5,4,2,-8,10]]], dtype = "uint64")#candidate|4274|(1, 14, 5)|const|uint64
const_4275 = relay.const([[[-8,-3,1,5,4],[2,9,-4,-9,-1],[-5,-6,1,-8,-2],[8,3,-2,1,-8],[3,-5,-3,-1,2],[-9,-8,-8,10,2],[6,1,3,6,3],[1,5,-10,-6,1],[4,-7,-6,5,-10],[6,-7,5,-2,-6],[-6,3,-2,10,-6],[8,-4,4,9,-3],[-6,-6,8,5,-2],[-5,7,-10,10,8]],[[4,6,10,-7,1],[1,1,-4,-9,-8],[-1,9,-10,-8,-2],[6,2,-5,4,-3],[-10,-4,-2,-9,-7],[-3,-10,6,-3,10],[-1,-3,-8,5,-10],[7,-5,-2,-9,-9],[8,7,-4,9,7],[5,6,1,8,-6],[-6,-8,-5,-9,1],[-1,8,8,10,1],[7,-7,6,10,6],[2,-10,7,1,10]],[[-4,3,-10,5,-8],[-9,-4,1,6,4],[9,8,-6,-5,-2],[1,7,-9,-6,-8],[3,-3,-6,7,-6],[-6,4,-4,-10,9],[5,8,-7,8,-5],[10,-4,5,7,-1],[-10,10,2,8,5],[4,9,-10,2,2],[4,5,4,5,-9],[-8,3,5,-4,-9],[-2,8,6,-10,8],[6,-3,-2,-1,10]],[[-3,-1,8,4,-10],[-2,-8,4,2,4],[5,4,3,4,-2],[3,5,-6,1,7],[-4,6,3,6,3],[5,-10,-7,-4,-4],[-7,4,5,7,1],[-9,-6,5,-4,-3],[8,8,-9,-10,6],[-9,-3,7,4,-3],[-9,-8,-9,4,-3],[-4,-9,1,-5,-8],[7,4,-2,-7,4],[-1,-6,9,5,1]],[[-4,-1,7,-8,-2],[-3,-6,8,-9,-6],[9,-7,-8,10,-4],[1,8,-1,-5,7],[-7,-6,-9,-3,-3],[1,-8,-7,-7,-10],[-2,8,-5,2,10],[-7,10,-2,-2,-7],[-5,7,7,10,2],[4,4,-3,1,-9],[5,-7,-3,-3,-5],[-10,-7,6,2,9],[-9,-10,-2,-2,-6],[-3,-8,7,-9,-6]]], dtype = "uint64")#candidate|4275|(5, 14, 5)|const|uint64
bop_4276 = relay.less_equal(const_4274.astype('bool'), const_4275.astype('bool')) # shape=(5, 14, 5)
output = bop_4276
output2 = bop_4276
func_4291 = relay.Function([], output)
mod['func_4291'] = func_4291
mod = relay.transform.InferType()(mod)
output = func_4291()
func_4292 = relay.Function([], output)
mutated_mod['func_4292'] = func_4292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2933_call = mod.get_global_var('func_2933')
func_2935_call = mutated_mod.get_global_var('func_2935')
call_4303 = relay.TupleGetItem(func_2933_call(), 0)
call_4304 = relay.TupleGetItem(func_2935_call(), 0)
func_1970_call = mod.get_global_var('func_1970')
func_1974_call = mutated_mod.get_global_var('func_1974')
var_4306 = relay.var("var_4306", dtype = "float64", shape = (117,))#candidate|4306|(117,)|var|float64
const_4307 = relay.const([[7.377022,2.328050],[3.026264,4.629249],[8.135792,-5.172196],[-4.757770,5.927014],[-2.159924,7.804254],[7.705187,-9.594364],[8.530899,-9.033300],[8.258572,-5.827605],[7.451046,-7.479333],[3.135912,2.103256],[-4.821164,5.018882],[6.318625,2.332315],[-1.414538,6.014292],[-7.253832,-1.290209],[0.896846,7.408286],[0.134639,-0.473693],[-0.676026,4.555048],[-2.993162,-1.831278],[-2.843562,2.894080],[-5.754083,-6.694318],[-4.416042,-7.839390],[3.711617,-6.065069],[9.924211,-0.381429],[3.373320,4.752355],[5.909643,4.193281],[-5.037058,-3.382372]], dtype = "float64")#candidate|4307|(26, 2)|const|float64
call_4305 = relay.TupleGetItem(func_1970_call(relay.reshape(var_4306.astype('float64'), [117,]), relay.reshape(const_4307.astype('float64'), [52,]), ), 0)
call_4308 = relay.TupleGetItem(func_1974_call(relay.reshape(var_4306.astype('float64'), [117,]), relay.reshape(const_4307.astype('float64'), [52,]), ), 0)
const_4309 = relay.const([8.786649,-4.088239,4.437298,-5.300455,-4.914685,-2.700769,4.136439,-3.375792,-6.299023,-0.080374,-9.932535,-6.856632,3.650942,6.633383,8.958332,-8.995139,1.232830,-7.140221,4.373672,-4.710695,6.801246,2.119243,-6.639748,5.954484,-7.575048,-1.280395,-2.176121,-8.011031,8.373090,8.715259,-8.299452,-2.543731,-9.222953,-7.249707,0.310943,9.363718,-2.454077,2.668923,7.287736,8.856268,-1.116637,-3.671656,-9.290225,-1.117017,-9.579888,1.482930,2.124215,-6.430023,-5.327992,2.322881,-6.452775,-1.924557,-0.770229,1.511353,1.949847,2.853550,-4.591209,-2.709353,-8.165419,0.157537,-9.104103,6.478756,-7.294762,-8.316465,3.597822,-7.112992,-5.593130,-8.907459,-6.500225,-2.526401,-8.752636,6.191927,3.702190,0.981560,-8.497207,-9.683727,6.189813,-4.138266,-6.674667,5.147926,9.143662,7.945254,-9.768184,-3.828711,7.782529,-7.892041,-5.663065,5.569239,3.308205,-6.265579,4.176330,4.831798,-3.005511,-5.565833,-8.882517,-5.985402,5.095270,4.662739,4.965203,-4.186532,6.104601,-5.387041,-9.349690,4.267390,0.729531,6.503673,7.224045,5.335116,-1.142715,-4.936858,6.510221,-1.822920,-1.422670,2.092291,3.109936,-1.709972,-5.910010], dtype = "float64")#candidate|4309|(117,)|const|float64
bop_4310 = relay.logical_or(var_4306.astype('bool'), relay.reshape(const_4309.astype('bool'), relay.shape_of(var_4306))) # shape=(117,)
func_1304_call = mod.get_global_var('func_1304')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_4320 = relay.TupleGetItem(func_1304_call(), 0)
call_4321 = relay.TupleGetItem(func_1305_call(), 0)
bop_4336 = relay.power(const_4309.astype('float64'), relay.reshape(bop_4310.astype('float64'), relay.shape_of(const_4309))) # shape=(117,)
uop_4344 = relay.cos(bop_4336.astype('float32')) # shape=(117,)
uop_4347 = relay.asin(const_4309.astype('float64')) # shape=(117,)
bop_4352 = relay.bitwise_xor(bop_4336.astype('int8'), relay.reshape(bop_4310.astype('int8'), relay.shape_of(bop_4336))) # shape=(117,)
func_245_call = mod.get_global_var('func_245')
func_249_call = mutated_mod.get_global_var('func_249')
const_4361 = relay.const([[-9],[5],[6],[-7],[-9],[-10],[9],[5],[-9],[1],[1],[-5],[6],[2],[5],[4],[3],[-7],[3],[-7],[-8],[3],[2],[3],[8],[-7],[9],[-10],[7],[8],[-7],[5],[4],[-9],[6],[1],[3],[-1],[1],[-6],[7],[8],[7],[-1],[-9],[6],[3],[-8],[-3],[-4],[-2],[-3],[1],[10],[8],[-3],[-9],[-1],[10],[-3],[-10],[8],[10],[2],[2],[-2],[-3],[9],[-9],[-7],[5],[1],[2],[10],[-5],[4],[-2],[1],[-6],[-7],[9],[5],[6],[-5],[5],[3],[-4],[1],[8],[10],[6],[9],[6],[-4],[-2],[-3],[2],[-2],[-3],[5],[-1],[-5],[-5],[-2],[2],[6],[-6],[8],[6],[-4],[-2],[-1],[6],[5],[2],[-7],[-10],[-9],[3],[-10],[3],[-2],[1],[-3],[-3],[7],[-6],[10],[-2],[1],[-6],[-7],[5],[3],[-5],[-10],[9],[9],[4],[-10],[9],[-2],[6],[8],[8],[-9],[10],[-3],[2],[-10],[1],[7],[-3],[-3],[-8],[-6],[8],[1],[2],[9],[-9],[-6],[-6],[3],[-7],[7],[6],[-9],[10],[-8],[2],[-7],[-3],[-4],[10],[-5],[-6],[9],[10],[-2],[-8],[6],[-4],[-4],[4],[5],[7],[-6],[-2],[5],[8],[2],[-3],[-5],[-4],[1],[-7],[7],[9],[-8],[-3],[-8],[-4],[-3],[9],[-8],[-10],[-10],[-1],[7]], dtype = "uint64")#candidate|4361|(210, 1)|const|uint64
call_4360 = relay.TupleGetItem(func_245_call(relay.reshape(const_4361.astype('uint64'), [15, 1, 14]), relay.reshape(call_4303.astype('uint64'), [15, 3, 14]), relay.reshape(call_4303.astype('uint64'), [15, 3, 14]), ), 1)
call_4362 = relay.TupleGetItem(func_249_call(relay.reshape(const_4361.astype('uint64'), [15, 1, 14]), relay.reshape(call_4303.astype('uint64'), [15, 3, 14]), relay.reshape(call_4303.astype('uint64'), [15, 3, 14]), ), 1)
uop_4363 = relay.sin(bop_4336.astype('float32')) # shape=(117,)
bop_4366 = relay.logical_and(uop_4363.astype('bool'), relay.reshape(var_4306.astype('bool'), relay.shape_of(uop_4363))) # shape=(117,)
func_3030_call = mod.get_global_var('func_3030')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_4373 = relay.TupleGetItem(func_3030_call(), 0)
call_4374 = relay.TupleGetItem(func_3031_call(), 0)
output = relay.Tuple([call_4303,call_4305,const_4307,call_4320,uop_4344,uop_4347,bop_4352,call_4360,const_4361,bop_4366,call_4373,])
output2 = relay.Tuple([call_4304,call_4308,const_4307,call_4321,uop_4344,uop_4347,bop_4352,call_4362,const_4361,bop_4366,call_4374,])
func_4379 = relay.Function([var_4306,], output)
mod['func_4379'] = func_4379
mod = relay.transform.InferType()(mod)
var_4380 = relay.var("var_4380", dtype = "float64", shape = (117,))#candidate|4380|(117,)|var|float64
output = func_4379(var_4380)
func_4381 = relay.Function([var_4380], output)
mutated_mod['func_4381'] = func_4381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2843_call = mutated_mod.get_global_var('func_2843')
call_4406 = relay.TupleGetItem(func_2842_call(), 0)
call_4407 = relay.TupleGetItem(func_2843_call(), 0)
output = call_4406
output2 = call_4407
func_4416 = relay.Function([], output)
mod['func_4416'] = func_4416
mod = relay.transform.InferType()(mod)
output = func_4416()
func_4417 = relay.Function([], output)
mutated_mod['func_4417'] = func_4417
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4566 = relay.var("var_4566", dtype = "float64", shape = ())#candidate|4566|()|var|float64
var_4567 = relay.var("var_4567", dtype = "float64", shape = (16, 14, 11))#candidate|4567|(16, 14, 11)|var|float64
bop_4568 = relay.minimum(var_4566.astype('float64'), var_4567.astype('float64')) # shape=(16, 14, 11)
func_2421_call = mod.get_global_var('func_2421')
func_2423_call = mutated_mod.get_global_var('func_2423')
call_4571 = func_2421_call()
call_4572 = func_2421_call()
func_4291_call = mod.get_global_var('func_4291')
func_4292_call = mutated_mod.get_global_var('func_4292')
call_4574 = func_4291_call()
call_4575 = func_4291_call()
uop_4576 = relay.atan(call_4574.astype('float64')) # shape=(5, 14, 5)
uop_4578 = relay.atan(call_4575.astype('float64')) # shape=(5, 14, 5)
func_1343_call = mod.get_global_var('func_1343')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_4580 = func_1343_call()
call_4581 = func_1343_call()
bop_4582 = relay.divide(uop_4576.astype('float64'), relay.reshape(call_4574.astype('float64'), relay.shape_of(uop_4576))) # shape=(5, 14, 5)
bop_4585 = relay.divide(uop_4578.astype('float64'), relay.reshape(call_4575.astype('float64'), relay.shape_of(uop_4578))) # shape=(5, 14, 5)
output = relay.Tuple([bop_4568,call_4571,call_4580,bop_4582,])
output2 = relay.Tuple([bop_4568,call_4572,call_4581,bop_4585,])
func_4586 = relay.Function([var_4566,var_4567,], output)
mod['func_4586'] = func_4586
mod = relay.transform.InferType()(mod)
mutated_mod['func_4586'] = func_4586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4586_call = mutated_mod.get_global_var('func_4586')
var_4588 = relay.var("var_4588", dtype = "float64", shape = ())#candidate|4588|()|var|float64
var_4589 = relay.var("var_4589", dtype = "float64", shape = (16, 14, 11))#candidate|4589|(16, 14, 11)|var|float64
call_4587 = func_4586_call(var_4588,var_4589,)
output = call_4587
func_4590 = relay.Function([var_4588,var_4589,], output)
mutated_mod['func_4590'] = func_4590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2933_call = mod.get_global_var('func_2933')
func_2935_call = mutated_mod.get_global_var('func_2935')
call_4631 = relay.TupleGetItem(func_2933_call(), 0)
call_4632 = relay.TupleGetItem(func_2935_call(), 0)
output = relay.Tuple([call_4631,])
output2 = relay.Tuple([call_4632,])
func_4638 = relay.Function([], output)
mod['func_4638'] = func_4638
mod = relay.transform.InferType()(mod)
output = func_4638()
func_4639 = relay.Function([], output)
mutated_mod['func_4639'] = func_4639
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4663 = relay.const(6.588920, dtype = "float32")#candidate|4663|()|const|float32
var_4664 = relay.var("var_4664", dtype = "float32", shape = (1, 13, 12))#candidate|4664|(1, 13, 12)|var|float32
bop_4665 = relay.multiply(const_4663.astype('float32'), var_4664.astype('float32')) # shape=(1, 13, 12)
var_4672 = relay.var("var_4672", dtype = "float32", shape = (10, 13, 12))#candidate|4672|(10, 13, 12)|var|float32
bop_4673 = relay.logical_or(bop_4665.astype('bool'), var_4672.astype('bool')) # shape=(10, 13, 12)
output = relay.Tuple([bop_4673,])
output2 = relay.Tuple([bop_4673,])
func_4677 = relay.Function([var_4664,var_4672,], output)
mod['func_4677'] = func_4677
mod = relay.transform.InferType()(mod)
mutated_mod['func_4677'] = func_4677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4677_call = mutated_mod.get_global_var('func_4677')
var_4679 = relay.var("var_4679", dtype = "float32", shape = (1, 13, 12))#candidate|4679|(1, 13, 12)|var|float32
var_4680 = relay.var("var_4680", dtype = "float32", shape = (10, 13, 12))#candidate|4680|(10, 13, 12)|var|float32
call_4678 = func_4677_call(var_4679,var_4680,)
output = call_4678
func_4681 = relay.Function([var_4679,var_4680,], output)
mutated_mod['func_4681'] = func_4681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3328_call = mod.get_global_var('func_3328')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_4692 = relay.TupleGetItem(func_3328_call(), 3)
call_4693 = relay.TupleGetItem(func_3329_call(), 3)
output = call_4692
output2 = call_4693
func_4698 = relay.Function([], output)
mod['func_4698'] = func_4698
mod = relay.transform.InferType()(mod)
output = func_4698()
func_4699 = relay.Function([], output)
mutated_mod['func_4699'] = func_4699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2199_call = mod.get_global_var('func_2199')
func_2200_call = mutated_mod.get_global_var('func_2200')
call_4709 = relay.TupleGetItem(func_2199_call(), 0)
call_4710 = relay.TupleGetItem(func_2200_call(), 0)
func_1343_call = mod.get_global_var('func_1343')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_4716 = func_1343_call()
call_4717 = func_1343_call()
func_4586_call = mod.get_global_var('func_4586')
func_4590_call = mutated_mod.get_global_var('func_4590')
var_4727 = relay.var("var_4727", dtype = "float64", shape = ())#candidate|4727|()|var|float64
var_4728 = relay.var("var_4728", dtype = "float64", shape = (2464,))#candidate|4728|(2464,)|var|float64
call_4726 = relay.TupleGetItem(func_4586_call(relay.reshape(var_4727.astype('float64'), []), relay.reshape(var_4728.astype('float64'), [16, 14, 11]), ), 0)
call_4729 = relay.TupleGetItem(func_4590_call(relay.reshape(var_4727.astype('float64'), []), relay.reshape(var_4728.astype('float64'), [16, 14, 11]), ), 0)
func_1739_call = mod.get_global_var('func_1739')
func_1742_call = mutated_mod.get_global_var('func_1742')
const_4735 = relay.const([5.896336,8.053755,-8.166813,2.909822,2.705574,7.748152,9.592794,1.078775,-9.901025,9.444797,-3.056767,-9.187439,1.829610,-7.519102,7.184749,-2.812634,6.139422,-0.173992,0.801495,7.747451,-6.851805,5.310153,-0.529269,-3.614070,-4.359875,1.595942,1.312618,-5.794093,1.650945,6.127530,-5.520057,-7.599046,-0.371536,0.905773,-4.502206,-3.558387,6.392533,-7.379791,-5.825883,-4.608848,-5.746127,8.929087,7.042140,-3.538947,0.652056,1.217971,0.365591,0.487183,-3.689948,-0.778497,-0.420647,9.509055,-2.852201,0.822792,-8.368963,-5.515427,-4.210566,5.194605,7.248113,-9.152444,8.146683,-2.161869,7.348691,-8.918912,-5.717133,-0.473235,-5.193676,1.728468,-0.559776,1.113131,-0.666936,7.875040,-0.799082,6.351626,7.934926,-0.257882,5.493535,8.831802,-5.269701,2.212335,-3.726712,7.347856,1.037310,-2.720728,-2.708631,1.396808,6.820801,4.545358,2.837855,4.416084,-5.400204,2.937252,-2.706962,8.261888,2.551583,5.145275,-5.758682,-9.279544,7.871404,2.085782,-7.022811,6.252830,-7.512704,4.942038,3.332412,-6.671187,-0.500669,6.658604,-9.868335,-6.741530,8.457249,-9.708504,-3.779118,-4.446447,1.643319,1.358311,-9.619989,6.097053,6.721033,-7.264939,5.187316,2.998674,-4.955918,-8.409996,4.212310,-7.187227,-7.265610,-3.032073,2.349513,7.834026,4.043618,7.191776,8.848637,-6.545196,5.746622,9.464815,2.178937,9.025610,3.236939,-4.542134,-8.982347,-8.180195,3.834769,3.343817,4.728062,9.478197,-0.056423,-2.653323,7.531465,-6.905980,0.824376,1.637123,-8.176521,-1.317173,-7.551122,-6.895978,-3.361639,-3.786150,-3.568377,-2.392296,-9.897127,-2.752178,-8.641042,-9.000650,1.441033,9.607358,-9.405816,8.332729,6.066039,-0.666633,-6.577220,-2.303176,7.636524,9.375971,-7.989387,7.435480,3.348387,8.257039,-3.171906,-1.801019,5.133557,-0.031836,-0.017163,-1.691020,-1.973684,-4.866412,-2.658716,7.269232,1.732082,9.553069,-1.211385,-1.734808,-9.254683,-0.529221,8.725013,-8.400612,-8.648076,-2.247837,-5.677048,-1.813472,6.710165,8.872188,5.210495,-1.508809,2.570374,-6.153187,-0.539403,-5.269372,1.979516,-1.291428,5.969729,3.841781,9.429202,-8.576361,-9.959645,-9.878240,7.718317,3.879113,-1.419453,9.096782,6.276837,-3.307044,-3.447920,-3.496074,6.589560,-0.180345,2.622751,-1.472208,6.706944,-3.500319,3.371436,-7.918096,1.039046,9.309292,2.733884,7.984075,-8.070210,-8.386943,-1.052515,-6.354299,6.399534,-8.138663,-5.915786,-2.016406,-1.390276,-5.207080,1.689587,-8.900393,-6.620805,2.737996,8.106588,7.827273,-4.718610,-3.979550,-6.155599,-6.728568,-3.611990,9.094684,4.454367,-3.207593,-4.366694,0.190942,3.375186,-7.692164,9.238793,7.525987,2.112983,-7.713642,0.259582,-8.949920,-7.006252,3.540494,-2.087994,6.795500,-1.394254,1.938898,-2.990114,4.080834,-2.652457,-8.079168,0.211729,-8.885100,-2.472374,-9.346718,-5.450438,6.974958,3.855941,4.148577,2.687423,5.328402,-2.051981,7.732393,4.820435,9.383604,-6.454348,1.991301,9.175226,-5.450607,-6.792802,8.238284,-4.946557,2.257810,-1.621728,3.497656,-5.377987,9.392668,2.638087,4.899315,8.916744,-1.924979,-8.756667,1.349750,-5.961841,5.833522,-8.891556,7.919161,-7.624093,-0.092286,8.927666,-0.846951,-6.988882,-2.709192,-7.647859,-8.881208,-1.736007,-2.027920,-9.075212,6.125525,8.500355,-7.027316,7.211240,-3.826390,-7.647674,-6.240266,-8.242390,6.528535,3.534309,-3.865437,-5.708093,4.290073,-4.840292,3.594114,-6.250009,5.701442,-5.591943,7.916829,8.288747,0.954070,3.501628,3.758046,-5.285888,-3.087991,-7.985511,-4.399474,-3.621835,-9.062642,1.382762,7.065047,-0.955379,3.138537,-0.232655,-5.244526,0.004386,-4.117809,-8.677375,-8.723883,-0.961446,-1.124132,-3.037284,2.888745,-1.377511,6.359847,-1.444572,5.210577,7.658477,9.338607,-9.261167,3.619945,8.630760,-8.093911,3.167350,-8.185243,8.058510,-0.343792,5.586243,-0.320072,1.632628,7.200785,3.056934,-2.049158,-3.770890,-7.236624,-9.368616,-1.453703,1.735108,4.890926,6.384525,7.938301,-0.665638,-5.514194,2.118357,3.636008,-9.848189,-5.111979,-7.012044,-4.713540,-5.349258,4.638035,-6.602212,-4.952815,-5.287100,-5.155227,-4.254941,-4.451008,-5.759669,-4.299166,-6.183409,-8.236649,9.371976,-4.018695,-8.484198,-4.320768,2.821832,9.746040,2.230601,-2.456447,6.346457,2.344532,-6.394826,-1.456128,5.962666,-1.335183,-6.803847,-0.637549,-8.554332,7.087394,-4.348239,6.140939,6.491104,9.096516,8.615648,-3.893199,1.913560,-3.476617,-8.514389,-0.129401,9.656518,1.597975,2.384349,2.490870,-3.153262,-0.943750,-9.057754,-8.647834,-1.673111,-3.660593,5.874133,-7.958983,1.003473,-9.632920,2.810187,4.485589,-8.983226,4.097607,-0.528283,6.675137,5.381102,5.159510,2.917145,-9.899534,-0.535441,0.832734,2.654911,-4.624192,-5.829292,-0.807933,0.496231,0.316330,-5.491542,2.799736,7.793917,0.104832,2.624756,2.840750,8.960846,-4.466856,-1.902413,3.470765,-9.002405,-9.907742,1.361484,-8.210278,-5.909255,-6.108928,-8.125778,-4.023949,-5.978486,9.952774,-1.234781,-1.275260,-8.264752,0.343404,7.544869,-9.192873,-3.797549,-5.137513,-4.961757,-1.029238,-1.528666,9.752976,3.535207,7.829135,-3.080039,0.673719,8.750904,-0.763252,-6.155561,-1.046189,-9.198870,7.714000,-3.422347,-4.675066,6.703025,3.144682,6.773314,-1.915041,-1.057530,-0.880747,-3.876182,-9.903516,-4.635844,2.552142,-9.436606,-2.711654,7.417933,-2.611555,2.451409,-7.403973,9.842031,4.160579,-6.612206,4.946975,5.887662,4.068657,6.110189,8.706391], dtype = "float32")#candidate|4735|(546,)|const|float32
call_4734 = relay.TupleGetItem(func_1739_call(relay.reshape(const_4735.astype('float32'), [546,])), 0)
call_4736 = relay.TupleGetItem(func_1742_call(relay.reshape(const_4735.astype('float32'), [546,])), 0)
output = relay.Tuple([call_4709,call_4716,call_4726,var_4727,var_4728,call_4734,const_4735,])
output2 = relay.Tuple([call_4710,call_4717,call_4729,var_4727,var_4728,call_4736,const_4735,])
func_4740 = relay.Function([var_4727,var_4728,], output)
mod['func_4740'] = func_4740
mod = relay.transform.InferType()(mod)
mutated_mod['func_4740'] = func_4740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4740_call = mutated_mod.get_global_var('func_4740')
var_4742 = relay.var("var_4742", dtype = "float64", shape = ())#candidate|4742|()|var|float64
var_4743 = relay.var("var_4743", dtype = "float64", shape = (2464,))#candidate|4743|(2464,)|var|float64
call_4741 = func_4740_call(var_4742,var_4743,)
output = call_4741
func_4744 = relay.Function([var_4742,var_4743,], output)
mutated_mod['func_4744'] = func_4744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4698_call = mod.get_global_var('func_4698')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_4782 = func_4698_call()
call_4783 = func_4698_call()
uop_4786 = relay.sqrt(call_4782.astype('float64')) # shape=(91, 6)
uop_4788 = relay.sqrt(call_4783.astype('float64')) # shape=(91, 6)
bop_4795 = relay.logical_and(uop_4786.astype('bool'), relay.reshape(call_4782.astype('bool'), relay.shape_of(uop_4786))) # shape=(91, 6)
bop_4798 = relay.logical_and(uop_4788.astype('bool'), relay.reshape(call_4783.astype('bool'), relay.shape_of(uop_4788))) # shape=(91, 6)
bop_4817 = relay.subtract(call_4782.astype('int32'), relay.reshape(uop_4786.astype('int32'), relay.shape_of(call_4782))) # shape=(91, 6)
bop_4820 = relay.subtract(call_4783.astype('int32'), relay.reshape(uop_4788.astype('int32'), relay.shape_of(call_4783))) # shape=(91, 6)
var_4829 = relay.var("var_4829", dtype = "int32", shape = (91, 6))#candidate|4829|(91, 6)|var|int32
bop_4830 = relay.logical_or(bop_4817.astype('bool'), relay.reshape(var_4829.astype('bool'), relay.shape_of(bop_4817))) # shape=(91, 6)
bop_4833 = relay.logical_or(bop_4820.astype('bool'), relay.reshape(var_4829.astype('bool'), relay.shape_of(bop_4820))) # shape=(91, 6)
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
call_4835 = func_2210_call()
call_4836 = func_2210_call()
uop_4848 = relay.tan(call_4782.astype('float64')) # shape=(91, 6)
uop_4850 = relay.tan(call_4783.astype('float64')) # shape=(91, 6)
func_1451_call = mod.get_global_var('func_1451')
func_1456_call = mutated_mod.get_global_var('func_1456')
var_4860 = relay.var("var_4860", dtype = "float64", shape = ())#candidate|4860|()|var|float64
var_4861 = relay.var("var_4861", dtype = "float64", shape = (117,))#candidate|4861|(117,)|var|float64
var_4862 = relay.var("var_4862", dtype = "float64", shape = (52, 1))#candidate|4862|(52, 1)|var|float64
call_4859 = relay.TupleGetItem(func_1451_call(relay.reshape(bop_4795.astype('float64'), [7, 78]), relay.reshape(var_4860.astype('float64'), []), relay.reshape(var_4861.astype('float64'), [117,]), relay.reshape(var_4862.astype('float64'), [52,]), ), 0)
call_4863 = relay.TupleGetItem(func_1456_call(relay.reshape(bop_4795.astype('float64'), [7, 78]), relay.reshape(var_4860.astype('float64'), []), relay.reshape(var_4861.astype('float64'), [117,]), relay.reshape(var_4862.astype('float64'), [52,]), ), 0)
func_3020_call = mod.get_global_var('func_3020')
func_3025_call = mutated_mod.get_global_var('func_3025')
const_4874 = relay.const([[10],[-6],[-6],[-7],[-4],[5],[-2],[4],[-8],[-5],[-6],[-4],[-3],[-8],[4],[2],[5],[-6],[-8],[-7],[5],[-8],[-7],[-7],[9],[-7],[6],[3],[-6],[8],[5],[3],[-9],[1],[1],[10],[2],[-5],[2],[-3],[3],[9],[-1],[-9],[-5],[8],[-9],[8],[-9],[5],[-10],[6],[-5],[-8],[-2],[-2],[-3],[4],[-3],[-5],[-10],[-6],[2],[-4],[6],[-1],[-6],[-6],[-7],[-10],[7],[3],[10],[8],[-2],[4],[5],[-10],[-6],[8],[-6],[8],[-5],[3],[-1],[2],[-4],[2],[6],[-1],[-4],[-10],[-3],[-6],[7],[-2],[-4],[-6],[-5],[2],[3],[-5],[-2],[-3],[8],[5],[-9],[1],[-7],[2],[2],[8],[-4],[-6],[5],[-6],[3],[-7],[8],[-3],[4],[-8],[-7],[6],[5],[-8],[1],[2],[10],[6],[-7],[2],[-4],[7],[9],[-10],[-2],[-9],[-7],[-10],[2],[-9],[4],[10],[-1],[-9],[-9],[-8],[-2],[-6],[-7],[-5],[7],[7],[-8],[6],[7],[-2],[-9],[4],[9],[8],[-4],[10],[3],[6],[-4],[-10],[-8],[5],[-6],[-5],[6],[-3],[-2],[-5],[-2],[-8],[1],[-2],[-5],[6],[-3],[10],[-5],[-7],[-4],[1],[2],[5],[3],[-2],[4],[1],[9],[10],[4],[-3],[6],[10],[8],[2],[10],[6],[-9],[3],[-2],[5],[6],[-1],[-1],[-8],[1],[-4],[7],[-8],[-1],[-1],[-4],[-2],[-7],[-5],[3],[-6],[7],[-5],[10],[-3],[-5],[10],[1],[8],[-8],[5],[-5],[5],[4],[-2],[-1],[8],[-8],[6],[6],[-1],[-6],[-4],[-8],[-1],[3],[-8],[-2],[2],[-4],[-5],[-7],[-5],[-5],[4],[-10],[-2],[-7],[5],[1],[2],[3],[6],[-7],[-3],[5],[8],[-10],[6],[5],[7],[-7],[4],[-7],[1],[-9],[6],[5],[7],[-10],[-2],[10],[-6],[4],[6],[-4],[-7],[-1],[-8],[1],[8],[2],[-10],[-4],[8],[-9],[9],[-4],[-2],[9],[-10],[-10],[-7],[-7],[1],[2],[-8],[3],[-1],[6],[1],[4],[9],[-6],[-6],[6],[9],[4],[-8],[1],[-1],[-9],[9],[-6],[9],[2],[1],[1],[-3],[8],[2],[-7],[1],[9],[2],[-9],[2],[1],[-1],[2],[1],[1],[9],[2],[9],[-3],[-6],[-3],[4],[8],[-9],[1],[6],[3],[-9],[7],[-8],[-3],[-10],[-10],[5],[-9],[-6],[9],[4],[7],[4],[-5],[10],[-8],[-2],[10],[-1],[8],[8],[-10],[3],[-5],[4],[8],[1],[9],[3],[-8],[3],[-3],[-10],[2],[4],[5],[-8],[-4],[-4],[10],[2],[6],[-5],[-1],[-1],[3],[-6],[9],[-7],[-9],[1],[-4],[9],[-1],[-6],[-3],[-1],[4],[-5],[4],[5],[-2],[-4],[-10],[1],[6],[3],[2],[8],[5],[6],[-2],[6],[-3],[-2],[-9],[-6],[1],[9],[3],[-1],[2],[8],[6],[-9],[10],[8],[2],[-10],[6],[-4],[1],[3],[2],[-3],[2],[5],[-8],[9],[-9],[-4],[6],[2],[7],[-3],[-6],[-8],[-6],[10],[3],[-4],[-7],[-8],[-10],[-8],[7],[-7],[-5],[1],[3],[-3],[-2],[5],[-1],[8],[10],[10],[1],[-4],[-7],[1],[6],[9],[6],[-3],[7],[-7],[6],[8],[9],[-3],[2],[-6],[-3],[3],[5],[-6],[-1],[-2],[4],[-8],[-1],[1],[-9],[9],[7],[-6],[-7],[-1],[3],[10],[9],[8],[-10],[10],[8],[-6],[-5],[8],[-6],[-3],[-1],[3],[9],[6],[-9],[1],[2],[-9],[-2],[8],[-7],[10],[-1],[-7],[7],[1],[6],[4],[7],[9],[-8],[-5],[2],[5],[-3],[5],[-7],[-1],[5],[-5],[-7],[-10],[10],[8],[8],[5],[-10],[8],[-4],[-5],[8],[-6],[-6],[7],[-6],[-6],[9],[-4],[4],[8],[1],[-7],[6],[2],[-2],[9],[-8],[-9],[4],[4],[8],[-1],[-7],[-8],[8],[10],[1],[-4],[-7],[-9],[5],[1],[4],[6],[5],[8],[-1],[2],[5],[-7],[-8],[-6],[-6],[-8],[-7],[4],[-8],[3],[-4],[-2],[8],[-6],[-10],[-7],[10],[9],[2],[-9],[-6],[-3],[-7],[-4],[1],[-6],[8],[-8],[7],[-7],[2],[-1],[-7],[10],[-6],[8],[-7],[6],[8],[-8],[-9],[6],[4],[4],[-7],[8],[5],[2],[10],[1],[-3],[9],[-2],[6],[6],[10],[10],[-3],[-1],[-8],[7],[8],[7],[-6],[-1],[4],[-8],[4],[1],[1],[-5],[3],[9],[2],[4],[-8],[7],[-7],[-5],[-1],[9],[-10],[2],[6],[-5],[-1],[2],[-8],[1],[-2],[-1],[9],[6],[2],[6],[10],[3],[-2],[-4],[-6],[-9],[-9],[-10],[-1],[8],[-9],[-4],[7],[-2],[-3],[-4],[-6],[3],[-2],[8],[7],[-7],[-8],[5],[10],[-1],[-2],[-7],[6],[8],[10],[4],[-3],[-5],[5],[-4],[-1],[-3],[8],[8],[-1],[8],[5],[2],[5],[-5],[-6],[-2],[-8],[-3],[-10],[-7],[6],[2],[10],[-3],[-1],[6],[-6],[-1],[10],[5],[-5],[-4],[-6],[7],[-4],[9],[-6],[5],[4],[-9],[-8],[-3],[3],[5],[-10],[-9],[9],[-9],[2],[1],[2],[-5],[2],[6],[-9],[1],[8],[-2],[-9],[-4],[9],[-5],[9],[-3],[10],[7],[3],[-2],[-4],[-3],[1],[-10],[7],[2],[3],[5],[9],[10],[2],[7],[9],[-5],[5],[-9],[4],[-2],[5],[8],[8],[-8],[-3],[-10],[-2],[10],[-6],[-7],[-2],[9],[-10],[8],[10],[10],[4],[7],[-7],[-10],[9],[5],[-4],[5],[-4],[7],[7],[-5],[4],[-10],[3],[-2],[-8],[-8],[6],[-5],[2],[6],[7],[-8],[-6],[-8],[10],[-9],[-7],[3],[-8],[7],[-3],[-3],[5],[-4],[10],[-2],[3],[-7],[-4],[-3],[8],[-1],[10],[-7],[6],[-6],[-10],[-10],[9],[-9],[3],[-3],[1],[7],[-4],[-10],[-10],[-9],[4],[1],[-1],[10],[8],[-4],[3],[-3],[7],[5],[7],[-3],[-10],[-5],[-3],[-3],[2],[6],[-4],[3],[-6],[8],[-2],[-4],[-10],[-9],[10],[-8],[-5],[3],[7],[7],[-3],[-1],[1],[9],[-10],[-5],[-2],[3],[9],[-7],[-4],[-9],[7],[-8],[-9],[2],[-2],[-7],[8],[10],[-6],[10],[5],[10],[-5],[-3],[3],[7],[6],[-2],[2],[5],[10],[7],[-1],[-6],[2],[-3],[-1],[-1],[1],[5],[-5],[-1],[8],[6],[-1],[6],[-6],[-9],[-9],[-1],[5],[10],[-10],[-2],[2],[-2],[10],[10],[1],[1],[-6],[5],[-9],[-8],[-1],[1],[-5],[-4],[9],[-6],[5],[-2],[3],[4],[5],[-8],[-2],[4],[9],[-10],[-10],[-8],[2],[-2],[8],[-4],[5],[-10],[7],[4],[1],[6],[5],[3],[-9],[-6],[-5],[-4],[6],[10],[3],[7],[-1],[10],[-2],[1],[-8],[-7],[6],[-9],[-4],[-5],[-9],[8],[6],[-7],[1],[9],[-2],[-1],[3],[10],[-10],[6],[-6],[2],[-10],[-10],[6],[2],[5],[1],[5],[9],[10],[4],[3],[-5],[-10],[10],[6],[5],[-9],[-2],[-3],[8],[-4],[-6],[-10],[-8],[5],[4],[-7],[-1],[-1],[-10],[-3],[2],[-2],[-8],[9],[-4],[7],[-1],[5],[7],[-3],[-9],[3],[-5],[1],[1],[2],[7],[-8],[-10],[-10],[-9],[4],[-6],[-3],[-2],[6],[-5],[1],[3],[-7],[7],[8],[7],[8],[-2],[-2],[5],[-4],[7],[-4],[2],[-8],[10],[8],[3],[-6],[9],[2],[-9],[-3],[-9],[1],[-9],[7],[-2],[2],[-2],[2],[-2],[-3],[-10],[-3],[2],[-4],[8],[-1],[2],[-2],[-7],[-6],[-9],[-3],[-3],[-3],[7],[-9],[-5],[-5],[10],[8],[-9],[-6],[3],[2],[7],[10],[-10],[-9],[10],[-7],[-7],[4],[-9],[-1],[-10],[-6],[9],[8],[1],[1],[9],[6],[-4],[2],[6],[-1],[-4],[-5],[3],[1],[-4],[-2],[10],[-5],[1],[-9],[-7],[10],[9],[-5],[1],[-7],[10],[9],[5],[-9],[-8],[4],[-1],[7],[4],[2],[10],[-1],[6],[-1],[4],[6],[-10],[-9],[5],[-6],[7],[9],[8],[1],[3],[-1],[7],[-9],[10],[2],[9],[-7],[-2],[-4],[2],[-10],[-1],[-10],[6],[-10],[5],[9],[5],[-7],[-9],[10],[4],[5],[-4],[3],[-10],[-9],[-1],[-9],[-10],[-7],[10],[7],[5],[4],[-2],[1],[2],[3],[6],[1],[8],[-6],[-9],[-9],[4],[4],[-1],[3],[6],[9],[-10],[5],[8],[-7],[4],[8],[-8],[-3],[9],[-3],[-8],[-9],[7],[-7],[7],[-10],[-8],[-8],[-3],[-9],[-3],[-8],[-3],[-7],[5],[-7],[7],[5],[10],[-7],[-8],[6],[2],[-2],[-1],[1],[-10],[-4],[-2],[-7],[-10],[-3],[2],[3],[8],[1],[-8],[3],[2],[-6],[-6],[6],[6],[9],[2],[-8],[-10],[-1],[8],[4],[-3],[5],[-1],[1],[6],[6],[-4],[8],[-6],[-1],[-2],[-3],[1],[7],[-8],[-7],[-8],[-2],[3],[-4],[-1],[-10],[5],[-7],[6],[-1],[7],[3],[8],[7],[-2],[8],[-9],[9],[-4],[-10],[5],[1],[8],[3],[6],[-2],[-6],[10],[6],[-1],[-4],[-6],[-9],[-4],[10],[-9],[-1],[-7],[6],[3],[-1],[-4],[-2],[4],[-2],[6],[-4],[-8],[9],[-6],[-5],[6],[-5],[7],[2],[-5],[8],[2],[4],[8],[1],[-3],[-8],[9],[-4],[-8],[10],[-6],[-8],[8],[4],[-5],[-1],[-4],[4],[-10],[-8],[1],[-3],[-3],[5],[-5],[-7],[10],[6],[5],[1],[4],[-10],[-6],[10],[9],[-10],[-4],[-1],[1],[8],[1],[-9],[-1],[8],[6],[-8],[1],[1],[-2],[7],[1],[-2],[-2]], dtype = "uint32")#candidate|4874|(1470, 1)|const|uint32
call_4873 = relay.TupleGetItem(func_3020_call(relay.reshape(const_4874.astype('uint32'), [1470,]), relay.reshape(var_4862.astype('float64'), [52,]), relay.reshape(var_4861.astype('float64'), [117,]), ), 3)
call_4875 = relay.TupleGetItem(func_3025_call(relay.reshape(const_4874.astype('uint32'), [1470,]), relay.reshape(var_4862.astype('float64'), [52,]), relay.reshape(var_4861.astype('float64'), [117,]), ), 3)
output = relay.Tuple([bop_4795,bop_4830,call_4835,uop_4848,call_4859,var_4860,var_4861,var_4862,call_4873,const_4874,])
output2 = relay.Tuple([bop_4798,bop_4833,call_4836,uop_4850,call_4863,var_4860,var_4861,var_4862,call_4875,const_4874,])
func_4879 = relay.Function([var_4829,var_4860,var_4861,var_4862,], output)
mod['func_4879'] = func_4879
mod = relay.transform.InferType()(mod)
mutated_mod['func_4879'] = func_4879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4879_call = mutated_mod.get_global_var('func_4879')
var_4881 = relay.var("var_4881", dtype = "int32", shape = (91, 6))#candidate|4881|(91, 6)|var|int32
var_4882 = relay.var("var_4882", dtype = "float64", shape = ())#candidate|4882|()|var|float64
var_4883 = relay.var("var_4883", dtype = "float64", shape = (117,))#candidate|4883|(117,)|var|float64
var_4884 = relay.var("var_4884", dtype = "float64", shape = (52, 1))#candidate|4884|(52, 1)|var|float64
call_4880 = func_4879_call(var_4881,var_4882,var_4883,var_4884,)
output = call_4880
func_4885 = relay.Function([var_4881,var_4882,var_4883,var_4884,], output)
mutated_mod['func_4885'] = func_4885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4698_call = mod.get_global_var('func_4698')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_4950 = func_4698_call()
call_4951 = func_4698_call()
func_1050_call = mod.get_global_var('func_1050')
func_1051_call = mutated_mod.get_global_var('func_1051')
call_4952 = relay.TupleGetItem(func_1050_call(), 3)
call_4953 = relay.TupleGetItem(func_1051_call(), 3)
func_4379_call = mod.get_global_var('func_4379')
func_4381_call = mutated_mod.get_global_var('func_4381')
const_4964 = relay.const([3.612384,0.863392,-6.044916,-7.934237,-4.514244,-8.219964,2.873509,5.576577,-4.308392,-8.861330,3.080048,-7.577001,-1.061476,-5.518553,9.007697,9.530323,1.830037,5.686274,5.596453,8.550153,-6.328769,3.383979,-8.304629,8.297373,8.288481,5.339775,-7.476795,-4.145309,-8.505380,-8.944787,8.005283,-1.433550,-5.881017,-0.351352,8.264217,8.633211,-1.790535,-7.621514,-5.204098,7.986790,3.698766,-2.133855,8.925541,3.096027,6.732163,5.772373,4.090951,-8.371039,6.607088,-5.946561,-0.048490,3.938363,-2.312161,3.793388,5.181894,-1.982132,-0.671711,6.105811,1.560801,6.059064,-9.915900,6.547487,-1.105429,-6.580642,3.115068,-2.061335,-8.736657,-5.922723,5.803135,8.996788,-0.195378,-3.398861,-9.220112,-7.887641,-2.460326,8.516936,-9.899365,-2.699363,-4.164863,2.040417,8.217925,8.652399,7.463259,0.987690,3.801173,0.558719,-7.770746,-6.187536,1.797352,3.799002,-5.578588,0.355917,6.322393,3.199732,-1.432941,9.464642,6.012951,5.085836,-9.352382,3.355412,-5.980226,-3.618915,-6.818545,6.286201,3.992733,7.699855,0.476350,4.402421,6.718494,-6.375743,4.439071,5.418949,-1.749752,8.446266,0.139518,0.851336,1.727707], dtype = "float64")#candidate|4964|(117,)|const|float64
call_4963 = relay.TupleGetItem(func_4379_call(relay.reshape(const_4964.astype('float64'), [117,])), 8)
call_4965 = relay.TupleGetItem(func_4381_call(relay.reshape(const_4964.astype('float64'), [117,])), 8)
output = relay.Tuple([call_4950,call_4952,call_4963,const_4964,])
output2 = relay.Tuple([call_4951,call_4953,call_4965,const_4964,])
func_4974 = relay.Function([], output)
mod['func_4974'] = func_4974
mod = relay.transform.InferType()(mod)
mutated_mod['func_4974'] = func_4974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4974_call = mutated_mod.get_global_var('func_4974')
call_4975 = func_4974_call()
output = call_4975
func_4976 = relay.Function([], output)
mutated_mod['func_4976'] = func_4976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2896_call = mod.get_global_var('func_2896')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_5037 = relay.TupleGetItem(func_2896_call(), 1)
call_5038 = relay.TupleGetItem(func_2897_call(), 1)
uop_5048 = relay.asinh(call_5037.astype('float64')) # shape=(7, 78)
uop_5050 = relay.asinh(call_5038.astype('float64')) # shape=(7, 78)
output = uop_5048
output2 = uop_5050
func_5059 = relay.Function([], output)
mod['func_5059'] = func_5059
mod = relay.transform.InferType()(mod)
mutated_mod['func_5059'] = func_5059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5059_call = mutated_mod.get_global_var('func_5059')
call_5060 = func_5059_call()
output = call_5060
func_5061 = relay.Function([], output)
mutated_mod['func_5061'] = func_5061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mod.get_global_var('func_1473')
func_1474_call = mutated_mod.get_global_var('func_1474')
call_5067 = relay.TupleGetItem(func_1473_call(), 1)
call_5068 = relay.TupleGetItem(func_1474_call(), 1)
const_5078 = relay.const([[6.310632,-0.935879,8.777784,7.537502,2.469330,5.569204,-1.070615,-6.853017,-3.818178,-1.631980,0.521504,9.258922,8.642922,6.777796,-0.549734,6.396125,-3.682870,6.800966,-9.729133,-8.067391,2.371839,-6.082035,6.806267,8.246405,7.931693,1.360184,-2.248284,4.634789,1.641463,-1.650339,8.548810,1.237624,7.699258,9.162770,-6.856275,-0.542573,-1.834093,7.359264,4.737563,0.925343,-3.334579,-2.348643,1.846482,-9.165287,-1.641548,-3.468028,-4.374345,9.542637,4.691119,7.438009,-0.093410,4.748504,1.893062,-7.156576,7.170871,1.518659,3.635266,6.255973,6.471935,4.036327,-1.422981,-1.571766,-0.855209,3.895127,-9.457772,3.227805,-2.897055,9.413248,9.717750,-2.524181,-6.116756,-0.329063,3.052596,-7.647463,7.790172,-9.991161,-4.115377,-7.130948],[6.321721,-9.483026,-5.178172,-4.223370,-1.023358,-1.516774,-7.615168,-7.496607,3.627943,-1.583469,-6.246198,3.252675,-9.305843,-9.779277,-7.453939,0.076815,-0.816721,-2.674256,3.758697,5.663951,-4.963163,3.269684,-9.388164,4.268507,-9.881349,8.408927,6.857581,-3.878006,-2.352556,-8.730873,5.728706,-7.646936,2.810611,5.299209,-6.606239,-8.464046,-0.105115,7.170535,3.107364,-5.454906,-6.111093,8.275903,4.163392,1.353625,-0.120496,-7.547518,-0.586315,4.586166,0.154015,-5.085380,1.254574,3.873215,2.922486,-4.484934,0.801856,-4.700280,-7.780850,3.252532,-1.192082,-9.542990,-1.049761,-2.958775,3.461644,-0.640677,-1.240606,-5.869576,4.690993,-0.149740,-0.798517,-6.481664,1.065175,8.090460,-3.314031,4.999677,-3.147992,2.806901,1.191877,9.902290],[2.992964,3.175267,-3.771866,6.476337,5.967721,-7.747560,-2.394864,-1.997090,-6.429036,-8.032685,-9.755837,1.795426,4.188607,-8.279077,-1.006436,9.792696,9.731921,-8.073771,7.317431,-4.195490,3.547859,-0.447188,5.023324,4.357987,1.128632,-3.854278,-0.678875,-0.986492,-3.035004,-4.469221,-8.526017,-7.560621,-6.521855,0.743920,-5.023504,6.036009,3.468201,8.458412,-4.455927,-9.766841,-7.934254,4.102549,-5.672594,-9.147504,-2.773905,1.856102,7.418855,5.050410,-4.468407,6.547547,-6.768161,-6.683138,-2.603285,-1.372629,4.957095,-6.416508,6.492391,-3.605759,1.103032,-5.782759,9.821572,-8.879209,6.671963,-3.642898,3.786278,-8.995364,-5.222120,3.698137,-6.417714,5.180773,-6.756358,-4.408870,-7.109335,7.210258,7.489744,4.957780,6.840189,2.708794],[2.865047,8.316120,7.570721,-0.083254,-6.854046,7.524758,6.403880,-0.910938,-3.967773,2.770535,4.730164,0.621283,-2.705460,5.291645,-6.628132,-0.705655,2.761626,-1.682595,3.317839,-0.921926,-0.861292,6.016408,9.561809,8.593872,-3.075516,-9.592551,7.854256,-7.308164,-9.994423,-7.627713,5.289083,7.705858,-0.208138,6.393906,-4.594896,2.897043,9.708407,4.304059,7.939679,4.046772,4.964420,9.457116,6.474889,5.628972,-3.484494,-4.187919,-7.573930,-8.830940,-8.339257,5.407682,5.185906,6.623734,5.849154,6.466868,-5.408940,-1.278479,-2.064917,-3.889956,9.135103,-3.645000,2.677515,3.520669,-9.994145,-1.955258,-2.407591,5.337394,9.726918,-4.389864,4.143643,0.943723,-4.431764,-2.193876,1.249625,-7.135013,-7.101531,-7.911414,-2.752553,6.899868],[2.256302,4.703871,7.526147,-6.143187,2.397684,1.495182,-6.519625,-4.445891,-1.641002,-9.357570,-5.320699,0.908700,8.875111,-4.620085,1.028449,-2.476145,-0.331921,-2.578096,-6.640422,-5.476495,-2.926490,5.047483,-4.773317,1.727756,-7.428499,-9.292302,4.617124,2.997153,-4.154942,-8.602788,6.550937,-9.664776,-1.027890,-2.249212,6.996891,-0.365479,-7.429962,4.080446,-9.653822,-8.201746,-9.633423,2.459239,-7.878506,-6.524289,-0.320607,-8.219956,8.369573,1.991555,-4.987651,-1.673050,-3.590453,0.639257,-0.179727,8.146223,0.951024,8.013673,7.827912,6.160592,4.143103,-9.309375,-3.468544,-4.505408,6.436123,9.151476,7.770045,-6.666848,3.060023,-3.947703,-2.465339,-6.419456,3.807063,4.209533,-7.747272,-9.787881,-3.033213,4.592322,-7.246079,-8.374994],[-9.173488,9.355096,8.637226,0.287645,4.263577,7.615619,-7.109091,3.148845,2.316453,-0.173899,-4.803971,-4.447138,3.725241,4.182444,4.515362,8.712728,-4.318242,5.196337,-2.512450,-8.998590,-3.480270,8.730128,0.749150,9.594633,1.998450,-4.621934,-8.571445,-9.533330,-7.071378,4.051630,0.042355,6.251659,0.561436,-0.077432,-8.418944,3.384791,-8.060459,0.227238,-4.654769,-2.953776,-0.470091,2.660245,4.908733,-8.132427,5.156418,8.697497,-7.269406,-8.076924,4.589091,-5.446753,0.168814,3.546071,-9.778441,5.634283,3.379796,4.236142,-3.398096,-1.268013,-8.170270,-3.343009,6.906845,1.090876,-0.107510,3.487245,-8.841247,1.974102,-9.086072,9.055191,5.755182,6.941277,-2.171855,-8.088465,5.241098,3.911903,2.671283,7.578805,8.265452,9.622905],[6.103702,-4.091361,-0.901110,3.711285,-6.781422,1.722333,-7.154195,-1.850671,9.990354,6.537267,2.733800,6.664238,-1.881646,0.739987,0.817654,-2.901386,-1.145461,-1.351003,-3.574251,8.521161,-9.383976,4.547009,0.945850,3.331060,-2.821399,5.762604,1.423110,1.121846,7.770497,-4.783976,0.735561,7.342264,1.768632,-0.721177,-0.063755,-3.556241,-9.437639,4.781423,0.095507,8.865846,7.414387,3.453425,9.088217,3.189086,-3.567026,3.669165,-0.317233,7.683566,-0.450528,8.681754,4.578019,7.259819,5.972659,6.163581,9.167651,2.889764,0.306359,-2.393616,2.685768,2.641362,5.267120,3.897906,-0.294713,7.743338,-8.553072,4.643751,-5.314923,9.031047,8.589503,-9.622665,1.745073,6.656834,-4.425244,8.005872,7.326301,8.905128,1.178193,-6.451878]], dtype = "float64")#candidate|5078|(7, 78)|const|float64
bop_5079 = relay.less(call_5067.astype('bool'), relay.reshape(const_5078.astype('bool'), relay.shape_of(call_5067))) # shape=(7, 78)
bop_5082 = relay.less(call_5068.astype('bool'), relay.reshape(const_5078.astype('bool'), relay.shape_of(call_5068))) # shape=(7, 78)
func_1662_call = mod.get_global_var('func_1662')
func_1663_call = mutated_mod.get_global_var('func_1663')
call_5086 = relay.TupleGetItem(func_1662_call(), 0)
call_5087 = relay.TupleGetItem(func_1663_call(), 0)
func_2501_call = mod.get_global_var('func_2501')
func_2504_call = mutated_mod.get_global_var('func_2504')
var_5110 = relay.var("var_5110", dtype = "uint8", shape = (10, 140))#candidate|5110|(10, 140)|var|uint8
call_5109 = relay.TupleGetItem(func_2501_call(relay.reshape(var_5110.astype('uint8'), [10, 10, 14]), relay.reshape(var_5110.astype('uint8'), [10, 10, 14]), ), 2)
call_5111 = relay.TupleGetItem(func_2504_call(relay.reshape(var_5110.astype('uint8'), [10, 10, 14]), relay.reshape(var_5110.astype('uint8'), [10, 10, 14]), ), 2)
func_4677_call = mod.get_global_var('func_4677')
func_4681_call = mutated_mod.get_global_var('func_4681')
var_5115 = relay.var("var_5115", dtype = "float32", shape = (156,))#candidate|5115|(156,)|var|float32
var_5116 = relay.var("var_5116", dtype = "float32", shape = (1560,))#candidate|5116|(1560,)|var|float32
call_5114 = relay.TupleGetItem(func_4677_call(relay.reshape(var_5115.astype('float32'), [1, 13, 12]), relay.reshape(var_5116.astype('float32'), [10, 13, 12]), ), 0)
call_5117 = relay.TupleGetItem(func_4681_call(relay.reshape(var_5115.astype('float32'), [1, 13, 12]), relay.reshape(var_5116.astype('float32'), [10, 13, 12]), ), 0)
func_3121_call = mod.get_global_var('func_3121')
func_3123_call = mutated_mod.get_global_var('func_3123')
var_5122 = relay.var("var_5122", dtype = "float64", shape = (117,))#candidate|5122|(117,)|var|float64
call_5121 = relay.TupleGetItem(func_3121_call(relay.reshape(var_5122.astype('float64'), [117,])), 2)
call_5123 = relay.TupleGetItem(func_3123_call(relay.reshape(var_5122.astype('float64'), [117,])), 2)
bop_5125 = relay.subtract(const_5078.astype('uint32'), relay.reshape(call_5067.astype('uint32'), relay.shape_of(const_5078))) # shape=(7, 78)
bop_5128 = relay.subtract(const_5078.astype('uint32'), relay.reshape(call_5068.astype('uint32'), relay.shape_of(const_5078))) # shape=(7, 78)
func_3884_call = mod.get_global_var('func_3884')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_5140 = relay.TupleGetItem(func_3884_call(), 0)
call_5141 = relay.TupleGetItem(func_3886_call(), 0)
output = relay.Tuple([bop_5079,call_5086,call_5109,var_5110,call_5114,var_5115,var_5116,call_5121,var_5122,bop_5125,call_5140,])
output2 = relay.Tuple([bop_5082,call_5087,call_5111,var_5110,call_5117,var_5115,var_5116,call_5123,var_5122,bop_5128,call_5141,])
func_5146 = relay.Function([var_5110,var_5115,var_5116,var_5122,], output)
mod['func_5146'] = func_5146
mod = relay.transform.InferType()(mod)
var_5147 = relay.var("var_5147", dtype = "uint8", shape = (10, 140))#candidate|5147|(10, 140)|var|uint8
var_5148 = relay.var("var_5148", dtype = "float32", shape = (156,))#candidate|5148|(156,)|var|float32
var_5149 = relay.var("var_5149", dtype = "float32", shape = (1560,))#candidate|5149|(1560,)|var|float32
var_5150 = relay.var("var_5150", dtype = "float64", shape = (117,))#candidate|5150|(117,)|var|float64
output = func_5146(var_5147,var_5148,var_5149,var_5150,)
func_5151 = relay.Function([var_5147,var_5148,var_5149,var_5150,], output)
mutated_mod['func_5151'] = func_5151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3328_call = mod.get_global_var('func_3328')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_5193 = relay.TupleGetItem(func_3328_call(), 1)
call_5194 = relay.TupleGetItem(func_3329_call(), 1)
output = call_5193
output2 = call_5194
func_5206 = relay.Function([], output)
mod['func_5206'] = func_5206
mod = relay.transform.InferType()(mod)
mutated_mod['func_5206'] = func_5206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5206_call = mutated_mod.get_global_var('func_5206')
call_5207 = func_5206_call()
output = call_5207
func_5208 = relay.Function([], output)
mutated_mod['func_5208'] = func_5208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3030_call = mod.get_global_var('func_3030')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_5248 = relay.TupleGetItem(func_3030_call(), 0)
call_5249 = relay.TupleGetItem(func_3031_call(), 0)
var_5258 = relay.var("var_5258", dtype = "float32", shape = (91, 6))#candidate|5258|(91, 6)|var|float32
bop_5259 = relay.divide(call_5248.astype('float64'), relay.reshape(var_5258.astype('float64'), relay.shape_of(call_5248))) # shape=(91, 6)
bop_5262 = relay.divide(call_5249.astype('float64'), relay.reshape(var_5258.astype('float64'), relay.shape_of(call_5249))) # shape=(91, 6)
func_2199_call = mod.get_global_var('func_2199')
func_2200_call = mutated_mod.get_global_var('func_2200')
call_5263 = relay.TupleGetItem(func_2199_call(), 0)
call_5264 = relay.TupleGetItem(func_2200_call(), 0)
func_2896_call = mod.get_global_var('func_2896')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_5276 = relay.TupleGetItem(func_2896_call(), 1)
call_5277 = relay.TupleGetItem(func_2897_call(), 1)
output = relay.Tuple([bop_5259,call_5263,call_5276,])
output2 = relay.Tuple([bop_5262,call_5264,call_5277,])
func_5311 = relay.Function([var_5258,], output)
mod['func_5311'] = func_5311
mod = relay.transform.InferType()(mod)
var_5312 = relay.var("var_5312", dtype = "float32", shape = (91, 6))#candidate|5312|(91, 6)|var|float32
output = func_5311(var_5312)
func_5313 = relay.Function([var_5312], output)
mutated_mod['func_5313'] = func_5313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4698_call = mod.get_global_var('func_4698')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_5325 = func_4698_call()
call_5326 = func_4698_call()
func_5311_call = mod.get_global_var('func_5311')
func_5313_call = mutated_mod.get_global_var('func_5313')
call_5332 = relay.TupleGetItem(func_5311_call(relay.reshape(call_5325.astype('float32'), [91, 6])), 2)
call_5333 = relay.TupleGetItem(func_5313_call(relay.reshape(call_5325.astype('float32'), [91, 6])), 2)
bop_5334 = relay.bitwise_xor(call_5325.astype('int64'), relay.reshape(call_5332.astype('int64'), relay.shape_of(call_5325))) # shape=(91, 6)
bop_5337 = relay.bitwise_xor(call_5326.astype('int64'), relay.reshape(call_5333.astype('int64'), relay.shape_of(call_5326))) # shape=(91, 6)
uop_5341 = relay.cos(bop_5334.astype('float64')) # shape=(91, 6)
uop_5343 = relay.cos(bop_5337.astype('float64')) # shape=(91, 6)
func_2556_call = mod.get_global_var('func_2556')
func_2558_call = mutated_mod.get_global_var('func_2558')
call_5364 = relay.TupleGetItem(func_2556_call(), 0)
call_5365 = relay.TupleGetItem(func_2558_call(), 0)
bop_5381 = relay.multiply(uop_5341.astype('uint16'), relay.reshape(call_5364.astype('uint16'), relay.shape_of(uop_5341))) # shape=(91, 6)
bop_5384 = relay.multiply(uop_5343.astype('uint16'), relay.reshape(call_5365.astype('uint16'), relay.shape_of(uop_5343))) # shape=(91, 6)
output = relay.Tuple([bop_5381,])
output2 = relay.Tuple([bop_5384,])
func_5394 = relay.Function([], output)
mod['func_5394'] = func_5394
mod = relay.transform.InferType()(mod)
output = func_5394()
func_5395 = relay.Function([], output)
mutated_mod['func_5395'] = func_5395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1304_call = mod.get_global_var('func_1304')
func_1305_call = mutated_mod.get_global_var('func_1305')
call_5432 = relay.TupleGetItem(func_1304_call(), 0)
call_5433 = relay.TupleGetItem(func_1305_call(), 0)
uop_5436 = relay.atanh(call_5432.astype('float64')) # shape=(7, 78)
uop_5438 = relay.atanh(call_5433.astype('float64')) # shape=(7, 78)
bop_5451 = relay.bitwise_and(uop_5436.astype('int32'), relay.reshape(call_5432.astype('int32'), relay.shape_of(uop_5436))) # shape=(7, 78)
bop_5454 = relay.bitwise_and(uop_5438.astype('int32'), relay.reshape(call_5433.astype('int32'), relay.shape_of(uop_5438))) # shape=(7, 78)
func_3101_call = mod.get_global_var('func_3101')
func_3102_call = mutated_mod.get_global_var('func_3102')
call_5458 = relay.TupleGetItem(func_3101_call(), 0)
call_5459 = relay.TupleGetItem(func_3102_call(), 0)
uop_5462 = relay.log10(bop_5451.astype('float64')) # shape=(7, 78)
uop_5464 = relay.log10(bop_5454.astype('float64')) # shape=(7, 78)
output = relay.Tuple([call_5458,uop_5462,])
output2 = relay.Tuple([call_5459,uop_5464,])
func_5468 = relay.Function([], output)
mod['func_5468'] = func_5468
mod = relay.transform.InferType()(mod)
mutated_mod['func_5468'] = func_5468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5468_call = mutated_mod.get_global_var('func_5468')
call_5469 = func_5468_call()
output = call_5469
func_5470 = relay.Function([], output)
mutated_mod['func_5470'] = func_5470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2843_call = mutated_mod.get_global_var('func_2843')
call_5521 = relay.TupleGetItem(func_2842_call(), 0)
call_5522 = relay.TupleGetItem(func_2843_call(), 0)
var_5526 = relay.var("var_5526", dtype = "float32", shape = (91, 6))#candidate|5526|(91, 6)|var|float32
bop_5527 = relay.floor_divide(call_5521.astype('float32'), relay.reshape(var_5526.astype('float32'), relay.shape_of(call_5521))) # shape=(91, 6)
bop_5530 = relay.floor_divide(call_5522.astype('float32'), relay.reshape(var_5526.astype('float32'), relay.shape_of(call_5522))) # shape=(91, 6)
uop_5532 = relay.rsqrt(var_5526.astype('float64')) # shape=(91, 6)
bop_5541 = relay.bitwise_or(uop_5532.astype('uint16'), relay.reshape(bop_5527.astype('uint16'), relay.shape_of(uop_5532))) # shape=(91, 6)
bop_5544 = relay.bitwise_or(uop_5532.astype('uint16'), relay.reshape(bop_5530.astype('uint16'), relay.shape_of(uop_5532))) # shape=(91, 6)
bop_5548 = relay.left_shift(uop_5532.astype('int8'), relay.reshape(var_5526.astype('int8'), relay.shape_of(uop_5532))) # shape=(91, 6)
bop_5553 = relay.less_equal(bop_5527.astype('bool'), relay.reshape(var_5526.astype('bool'), relay.shape_of(bop_5527))) # shape=(91, 6)
bop_5556 = relay.less_equal(bop_5530.astype('bool'), relay.reshape(var_5526.astype('bool'), relay.shape_of(bop_5530))) # shape=(91, 6)
output = relay.Tuple([bop_5541,bop_5548,bop_5553,])
output2 = relay.Tuple([bop_5544,bop_5548,bop_5556,])
func_5558 = relay.Function([var_5526,], output)
mod['func_5558'] = func_5558
mod = relay.transform.InferType()(mod)
var_5559 = relay.var("var_5559", dtype = "float32", shape = (91, 6))#candidate|5559|(91, 6)|var|float32
output = func_5558(var_5559)
func_5560 = relay.Function([var_5559], output)
mutated_mod['func_5560'] = func_5560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2724_call = mod.get_global_var('func_2724')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_5568 = func_2724_call()
call_5569 = func_2724_call()
func_1140_call = mod.get_global_var('func_1140')
func_1144_call = mutated_mod.get_global_var('func_1144')
const_5577 = relay.const([4.396067,2.664924,8.750341,-9.266898,-0.088088,0.326276,2.092583,-9.702651,2.301077,3.049362,2.860945,8.667726,-6.144086,0.993153,6.339938,5.162559,-0.466641,-1.630022,0.694330,9.617785,-2.710065,0.308917,3.577367,9.513912,-6.486704,-2.987924,0.132181,3.758145,4.465876,-5.277385,-2.312456,2.483218,-1.325059,-0.381449,-2.454287,-7.077824,-1.762773,-8.677478,2.339661,-1.916200,7.066273,0.049595,3.991383,-2.300615,9.118819,1.317010,-9.128451,-5.429985,-6.419341,-1.736621,-3.117644,5.852642,9.814701,-9.325029,7.740226,-7.299820,-0.433575,-2.224556,-9.035212,-6.176062,4.847793,1.935033,7.493643,-2.825164,-7.250520,-4.732162,2.351520,9.595586,-0.669182,3.878316,1.624158,-7.710607,-6.151413,7.857515,1.482063,-0.594156,1.532039,7.893650,-8.566164,-1.436523,-8.463791,8.238211,-9.802424,-0.345408,5.859979,1.158784,0.202868,-6.288825,-8.574205,-6.555343,5.153266,-9.425642,-3.289991,6.992266,3.502862,4.896710,5.645292,-4.768403,-7.238899,-3.826460,-4.228290,-4.661475,7.540827,2.301555,-9.462575,7.458394,4.577532,-3.496367,4.905678,-9.666714,4.436352,4.160699,-8.381225,-3.807257,-6.854312,-9.930665,-3.263472,0.267833,7.634616,6.870298,-5.356036,-2.991056,-0.637291,-8.059852,-1.773500,1.022177,-5.531514,-2.362031,-6.608359,5.199110,6.364998,2.544248,-3.726354,0.097694,-2.966378,1.045320,-9.041904,-3.094507,-6.398405,-7.925695,6.539828,-8.956930,-9.899119,-7.744711,-8.306417,-7.845999,-7.107695,3.546253,-1.711357,-3.341391,-7.392964,0.721453,1.028164,5.335222,-6.964895,0.507910,4.829806,-7.730624,-8.324940,-4.437863,-3.347115,8.781780,7.734400,-1.186995,4.780706,-3.326254,-8.725572,-0.869848,0.778249,-3.167487,-2.024628,6.229058,7.760241,4.091950,-0.740959,-2.856976,-1.047081,6.082211,2.988669,9.658058,9.776898,-4.184132,-8.238918,6.820861,-5.902629,0.819822,2.347986,6.935598,-9.191621,3.309056,-1.384703,-8.582276,5.091418,-5.043190,7.497653,5.509458,9.855100,-1.193549,8.387343,4.070017,1.940002,-4.867027,7.694426,-4.764344,-6.930500,3.273522,6.143686,-6.624490,7.720769,4.733462,-9.883845,9.673690,-6.571360,0.213836,-7.071225,-2.539802,-8.543953,-9.373728,-0.883943,1.787203,-7.867190,6.726824,-2.928170,-9.525599,4.973017,-8.217838,2.387977,2.411659,-6.154915,1.863054,-1.023700,-6.367776,-1.419366,-5.292971,6.727990,6.572693,-8.547638,-4.114553,-9.569406,2.506670,-6.192155,-4.600005,6.576988,-1.826739,-5.101305,-4.038141,1.551263,8.563840,-7.397269,-2.882833,-4.118786,0.090799,-6.913802,0.414021,9.181837,-3.187977,9.312805,5.529138,5.975473,-2.446359,1.244398,-1.769065,8.898252,-7.282640,6.270064,-6.548260,-6.077591,3.837767,3.291133,-0.505587,5.579233,-1.237769,0.432791,9.904822,9.896484,-5.048234,1.756252,4.559559,5.756460,-8.061946,-5.789990,-1.910688,-0.593609,-9.192764,-5.356415,-9.243326,3.592147,-6.757808,-1.416582,5.411478,6.184105,-9.788071,-4.833202,-6.977966,3.989402,5.262470,3.265306,1.576474,9.570225,6.549152,-8.063764,5.042639,-3.240931,-4.167711,0.569833,3.530731,8.999702,8.977020,7.273046,9.239377,-4.571668,1.926795,-2.956824,-0.324892,-3.209819,-5.363592,4.145254,-3.246007,0.151528,3.398745,7.768478,-9.542501,-6.434779,-0.352090,1.668199,0.431649,-3.905124,6.741892,8.177078,-3.330538,5.290378,-6.220819,-2.150915,-8.515134,9.211319,8.468579,-2.680408,1.499360,3.401720,3.962606,-9.962416,9.467077,5.781524,1.058576,-6.011897,-3.270779,-1.414358,-7.994394,2.800157,0.216784,-9.256363,7.551463,-2.423426,-1.841278,4.086040,-1.910028,-1.344995,-4.034391,-2.574823,-4.202548,-6.988535,-1.448964,4.406191,9.109445,0.117188,7.678240,6.104102,7.058278,6.807571,-6.322924,0.843126,-2.874356,-9.725060,8.120495,6.034737,4.316483,-3.616583,-7.778936,-7.516858,-4.256233,-5.552412,-1.979109,7.109730,0.712293,8.469120,4.987012,-9.171426,-6.649180,-8.092219,2.254491,1.670692,6.884032,-0.559221,0.072557,-3.268626,5.676238,3.227355,-6.228032,8.436708,0.409046,6.126598,5.941290,1.040999,-8.167370,7.311473,2.215939,-5.812922,-2.792331,-0.898836,-0.024115,7.300373,-6.642688,9.172635,6.981048,-6.039397,0.902182,1.361282,-6.005486,-4.184628,0.682926,-8.920679,-2.239096,5.077287,-4.614821,-1.544824,-1.449472,-3.435246,-5.953021,-7.183210,-6.831665,-0.146685,-4.207855,-1.321013,-6.650315,-7.516024,-3.410627,-2.953318,6.425455,7.766174,-9.541597,-7.537883,1.612899,6.271858,-8.733114,-0.879259,-9.263674,-7.884937,-9.327391,0.540325,1.478807,-5.955780,6.194679,-7.636269,7.817312,-0.250679,8.548534,-2.323009,6.153670,-2.668262,7.160881,-3.019540,-9.861428,0.725112,1.164595,9.623097,-9.669436,-0.670628,2.825644,-5.054944,-2.657095,-9.171431,-6.918250,-7.699423,-4.861877,8.899058,5.159363,1.978533,5.060093,5.730083,-0.324457,3.835762,-8.904684,-8.669120,5.268560,-4.408511,4.407964,4.122393,-7.033121,2.256217,0.722439,-4.464165,-6.685803,-9.260276,-7.328330,-6.623150,-2.259645,6.517328,7.404607,-7.423654,1.016482,-2.052430,7.286271,-5.484624,1.282426,-6.643314,-8.162338,-0.833422,5.757458,-2.369222,-7.769765,-9.206930,3.031218,0.519623,1.051622,9.729806,3.779962,6.356481,8.139726,-5.232808,9.805356,1.490174,2.167495,-1.764206,-8.783731,4.681111,6.273161,-8.382053,0.597956,5.027497,7.462224,7.142286,-6.440406,-2.546480,-0.615333,-8.950730,2.114640,-1.800104,9.168985,3.387050,3.163296,-4.962027,-3.718420,6.223461,4.647836,-0.409080,5.244250], dtype = "float32")#candidate|5577|(546,)|const|float32
const_5578 = relay.const([[-4.597924,-4.798610,-7.687772,-9.811476],[3.026793,-5.731680,-6.069172,2.906624],[1.275082,2.773145,3.494525,0.640126],[7.324078,-2.305413,-8.458993,4.050347],[-4.944636,8.719693,-1.857947,-7.262337],[1.190302,-4.565204,-0.132979,0.876521],[7.967496,-2.931297,-5.874319,0.485373],[-3.275628,-6.449660,-4.675959,3.558480],[8.082582,-6.766417,-5.561300,-6.420595],[2.336660,-0.239987,-2.246538,8.875933],[-6.408960,2.872854,3.583440,-1.031982],[-8.945744,8.991063,-1.476040,6.113751],[9.187193,2.972287,4.780444,0.072781]], dtype = "float64")#candidate|5578|(13, 4)|const|float64
call_5576 = relay.TupleGetItem(func_1140_call(relay.reshape(const_5577.astype('float32'), [7, 78]), relay.reshape(const_5578.astype('float64'), [1, 52]), ), 3)
call_5579 = relay.TupleGetItem(func_1144_call(relay.reshape(const_5577.astype('float32'), [7, 78]), relay.reshape(const_5578.astype('float64'), [1, 52]), ), 3)
func_3030_call = mod.get_global_var('func_3030')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_5582 = relay.TupleGetItem(func_3030_call(), 0)
call_5583 = relay.TupleGetItem(func_3031_call(), 0)
func_3386_call = mod.get_global_var('func_3386')
func_3387_call = mutated_mod.get_global_var('func_3387')
call_5586 = relay.TupleGetItem(func_3386_call(), 2)
call_5587 = relay.TupleGetItem(func_3387_call(), 2)
func_4379_call = mod.get_global_var('func_4379')
func_4381_call = mutated_mod.get_global_var('func_4381')
var_5589 = relay.var("var_5589", dtype = "float64", shape = (13, 9))#candidate|5589|(13, 9)|var|float64
call_5588 = relay.TupleGetItem(func_4379_call(relay.reshape(var_5589.astype('float64'), [117,])), 2)
call_5590 = relay.TupleGetItem(func_4381_call(relay.reshape(var_5589.astype('float64'), [117,])), 2)
func_2556_call = mod.get_global_var('func_2556')
func_2558_call = mutated_mod.get_global_var('func_2558')
call_5600 = relay.TupleGetItem(func_2556_call(), 0)
call_5601 = relay.TupleGetItem(func_2558_call(), 0)
output = relay.Tuple([call_5568,call_5576,const_5577,const_5578,call_5582,call_5586,call_5588,var_5589,call_5600,])
output2 = relay.Tuple([call_5569,call_5579,const_5577,const_5578,call_5583,call_5587,call_5590,var_5589,call_5601,])
func_5604 = relay.Function([var_5589,], output)
mod['func_5604'] = func_5604
mod = relay.transform.InferType()(mod)
var_5605 = relay.var("var_5605", dtype = "float64", shape = (13, 9))#candidate|5605|(13, 9)|var|float64
output = func_5604(var_5605)
func_5606 = relay.Function([var_5605], output)
mutated_mod['func_5606'] = func_5606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2199_call = mod.get_global_var('func_2199')
func_2200_call = mutated_mod.get_global_var('func_2200')
call_5641 = relay.TupleGetItem(func_2199_call(), 0)
call_5642 = relay.TupleGetItem(func_2200_call(), 0)
output = relay.Tuple([call_5641,])
output2 = relay.Tuple([call_5642,])
func_5656 = relay.Function([], output)
mod['func_5656'] = func_5656
mod = relay.transform.InferType()(mod)
mutated_mod['func_5656'] = func_5656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5656_call = mutated_mod.get_global_var('func_5656')
call_5657 = func_5656_call()
output = call_5657
func_5658 = relay.Function([], output)
mutated_mod['func_5658'] = func_5658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5206_call = mod.get_global_var('func_5206')
func_5208_call = mutated_mod.get_global_var('func_5208')
call_5687 = func_5206_call()
call_5688 = func_5206_call()
output = call_5687
output2 = call_5688
func_5695 = relay.Function([], output)
mod['func_5695'] = func_5695
mod = relay.transform.InferType()(mod)
output = func_5695()
func_5696 = relay.Function([], output)
mutated_mod['func_5696'] = func_5696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2933_call = mod.get_global_var('func_2933')
func_2935_call = mutated_mod.get_global_var('func_2935')
call_5697 = relay.TupleGetItem(func_2933_call(), 0)
call_5698 = relay.TupleGetItem(func_2935_call(), 0)
output = call_5697
output2 = call_5698
func_5701 = relay.Function([], output)
mod['func_5701'] = func_5701
mod = relay.transform.InferType()(mod)
mutated_mod['func_5701'] = func_5701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5701_call = mutated_mod.get_global_var('func_5701')
call_5702 = func_5701_call()
output = call_5702
func_5703 = relay.Function([], output)
mutated_mod['func_5703'] = func_5703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mod.get_global_var('func_3884')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_5723 = relay.TupleGetItem(func_3884_call(), 0)
call_5724 = relay.TupleGetItem(func_3886_call(), 0)
uop_5725 = relay.asin(call_5723.astype('float32')) # shape=(6, 12, 7)
uop_5727 = relay.asin(call_5724.astype('float32')) # shape=(6, 12, 7)
const_5738 = relay.const([[[-3.202437,8.951660,1.855896,6.842258,-3.352781,8.867542,5.480699],[-5.253456,-8.721852,-7.189406,-9.771551,0.732068,9.628951,6.487877],[-2.988646,7.747061,-8.378241,4.540744,-1.873636,-2.837670,4.999387],[9.395704,-6.080928,9.282923,-2.656895,3.465043,-3.690745,-4.849763],[-9.838966,3.905797,-4.416119,2.744656,-7.903125,-7.553646,6.068395],[6.609684,1.077323,3.318954,-3.235806,-2.019086,6.403244,-6.512843],[-6.195132,6.821176,-5.076715,7.126855,7.861020,6.125989,-1.917052],[7.165257,-9.781805,-1.182471,6.686613,-4.768017,-4.345515,-2.379592],[-4.781048,-3.149436,6.692506,-1.537268,-2.263522,4.125853,-5.419307],[2.694645,-6.080663,8.488665,-7.022279,-7.323560,0.128106,1.554132],[8.584051,7.898035,-3.678903,8.984140,7.974214,7.042682,9.298617],[-6.945881,-5.485288,-4.408686,-7.367571,0.900517,-1.490572,-9.408562]],[[-9.768427,9.661295,-6.638052,-9.495054,-7.184180,-5.887233,3.447651],[-5.395093,-1.984228,-9.926511,-0.976008,-1.267285,-3.923841,4.319188],[7.553312,7.696962,-8.209947,-1.746774,6.486091,6.210614,-3.031768],[-4.271014,-3.728124,-8.320373,7.116937,4.230576,-5.616949,-9.196498],[2.833559,5.195035,2.989265,4.105885,0.136644,-0.573445,-3.709067],[5.799346,-4.878687,-7.986852,-6.782387,7.981163,1.898728,6.390870],[-3.806976,0.018924,-5.829523,6.561690,6.708453,1.467692,-9.849653],[9.975501,0.841552,8.083333,-5.540872,-3.626005,-2.544909,-3.168206],[-9.228391,5.403623,8.653177,1.655601,9.677151,-7.111271,9.921205],[-1.981957,9.204118,-7.673353,-5.699656,-8.608040,7.523772,7.392259],[4.470121,9.378901,5.368253,-7.986572,6.782031,-6.299181,-1.343146],[4.113502,-0.706404,5.181419,-9.587932,2.238742,0.475669,4.420637]],[[-5.813850,4.242788,2.674390,-1.610756,4.513104,8.353310,-8.020275],[-2.058138,-7.685905,-0.232339,6.674139,0.074278,5.373946,-0.434102],[-5.983640,1.060178,-2.518086,-8.039427,5.829103,-6.379260,-7.120402],[-9.078465,-0.654356,2.771685,-1.010158,3.755984,-0.791708,8.203628],[9.317061,-6.843128,-3.185302,7.386951,-0.480288,-7.326348,-4.240289],[5.675201,-3.046542,7.439491,-6.976864,-6.090249,-4.394802,-5.651187],[-3.254851,-7.743320,4.054314,2.125164,-5.094590,-2.897184,5.437766],[-2.377657,5.762073,-7.712657,2.806174,-8.606038,-6.555010,9.559747],[7.442148,7.806470,0.656395,9.850879,6.868951,-7.926991,8.210843],[-9.681450,7.398285,-4.000883,-4.997586,7.617152,-4.836195,6.513387],[-8.825241,4.680622,-3.304360,5.756478,-1.068253,-1.469382,6.126683],[9.389039,3.797113,3.025345,4.774355,-2.238286,-5.609074,1.063277]],[[6.757379,-3.810420,3.973227,5.593823,-5.164327,-6.204841,-0.698104],[-5.183864,4.645880,-7.682092,-7.505167,-4.945018,-5.838361,3.049874],[-5.529126,6.298305,-3.386848,8.451600,-7.858174,2.950338,7.230069],[0.492921,0.208520,2.319741,-7.018951,9.566482,-0.046685,-3.284820],[-9.696950,2.848028,-9.357353,6.200167,-4.230734,8.040687,5.622342],[-1.786538,-4.787123,-6.466194,6.623821,-8.679411,-5.535710,-3.574454],[5.902406,9.773431,8.640084,-7.119025,5.508431,-0.110140,-2.649429],[-1.589587,-9.050427,-0.659179,9.365682,-9.237782,9.521823,-4.674308],[7.459444,-2.891858,4.254675,-7.100713,-1.257733,-2.311262,-1.053274],[-7.684542,-5.257114,6.808024,6.491410,8.342288,-2.654259,1.848865],[3.287705,2.160697,2.515614,2.943120,0.291733,4.018842,3.185845],[-3.808853,-7.845075,-4.981396,4.332850,2.433680,-4.700758,2.184814]],[[1.456345,-4.134238,-5.388536,8.620624,8.261584,-9.746196,-6.354112],[-6.180862,-5.098609,-0.068835,8.932950,4.988128,-9.553273,5.341515],[-4.133977,5.197622,-0.339064,-0.060283,-7.514006,-1.893671,-1.042821],[-6.766935,-1.901666,-5.282242,9.533690,9.218904,-8.088378,-7.321135],[7.937195,3.320073,-2.049673,4.713318,-6.128775,-2.610082,3.477132],[-4.055476,2.707557,8.255622,6.956341,-4.236419,-3.165639,-8.278132],[3.214123,0.723638,-4.143672,-1.132189,0.298584,0.656782,3.498566],[-1.661644,-2.584009,-1.938385,-2.495600,8.303676,-3.543721,-8.375538],[7.143109,3.439829,6.012548,-9.417812,1.748969,7.237717,-0.094715],[-7.704936,-8.403104,8.105483,4.192744,-2.082084,5.646632,8.592404],[-9.725998,-4.361011,-4.868303,-6.787496,-4.109795,-9.136418,9.595265],[-9.147807,-1.359164,1.706291,-7.659110,-5.797636,-4.762753,5.052851]],[[-6.547926,9.860865,-1.975651,0.385080,0.664176,5.696058,-7.541672],[7.980030,6.511544,2.545847,-1.321191,-5.217108,2.800710,-5.679118],[4.405285,8.975468,4.448483,-6.747321,-4.160098,-9.325917,5.699364],[8.028175,9.121572,2.631554,6.543669,3.561833,5.922759,-3.566481],[-7.333481,4.191945,-3.715709,6.697064,3.922589,8.525421,4.672750],[-1.375953,7.471021,-1.545383,-6.394996,2.512788,8.353662,-3.526190],[-8.674532,2.096659,4.589439,8.258609,-2.355100,2.664319,-1.467453],[2.482282,9.267583,3.478081,-4.934899,9.893835,4.741997,-0.673125],[3.768813,-1.669257,5.112786,-0.107109,-1.151115,-1.084275,7.603466],[-4.838827,-4.039784,7.764559,0.196178,0.464393,1.519432,3.586528],[2.215291,0.243511,-8.777223,9.401143,7.558508,-3.512046,7.351005],[-4.878810,1.621304,-4.757516,8.809381,7.816836,-2.356556,-1.025228]]], dtype = "float32")#candidate|5738|(6, 12, 7)|const|float32
bop_5739 = relay.maximum(uop_5725.astype('int32'), relay.reshape(const_5738.astype('int32'), relay.shape_of(uop_5725))) # shape=(6, 12, 7)
bop_5742 = relay.maximum(uop_5727.astype('int32'), relay.reshape(const_5738.astype('int32'), relay.shape_of(uop_5727))) # shape=(6, 12, 7)
uop_5765 = relay.tan(const_5738.astype('float64')) # shape=(6, 12, 7)
uop_5775 = relay.log10(bop_5739.astype('float32')) # shape=(6, 12, 7)
uop_5777 = relay.log10(bop_5742.astype('float32')) # shape=(6, 12, 7)
output = relay.Tuple([uop_5765,uop_5775,])
output2 = relay.Tuple([uop_5765,uop_5777,])
func_5778 = relay.Function([], output)
mod['func_5778'] = func_5778
mod = relay.transform.InferType()(mod)
output = func_5778()
func_5779 = relay.Function([], output)
mutated_mod['func_5779'] = func_5779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3030_call = mod.get_global_var('func_3030')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_5804 = relay.TupleGetItem(func_3030_call(), 0)
call_5805 = relay.TupleGetItem(func_3031_call(), 0)
output = relay.Tuple([call_5804,])
output2 = relay.Tuple([call_5805,])
func_5820 = relay.Function([], output)
mod['func_5820'] = func_5820
mod = relay.transform.InferType()(mod)
output = func_5820()
func_5821 = relay.Function([], output)
mutated_mod['func_5821'] = func_5821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mod.get_global_var('func_3884')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_5832 = relay.TupleGetItem(func_3884_call(), 0)
call_5833 = relay.TupleGetItem(func_3886_call(), 0)
output = call_5832
output2 = call_5833
func_5845 = relay.Function([], output)
mod['func_5845'] = func_5845
mod = relay.transform.InferType()(mod)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5845_call = mutated_mod.get_global_var('func_5845')
call_5846 = func_5845_call()
output = call_5846
func_5847 = relay.Function([], output)
mutated_mod['func_5847'] = func_5847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5468_call = mod.get_global_var('func_5468')
func_5470_call = mutated_mod.get_global_var('func_5470')
call_5870 = relay.TupleGetItem(func_5468_call(), 0)
call_5871 = relay.TupleGetItem(func_5470_call(), 0)
output = call_5870
output2 = call_5871
func_5890 = relay.Function([], output)
mod['func_5890'] = func_5890
mod = relay.transform.InferType()(mod)
mutated_mod['func_5890'] = func_5890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5890_call = mutated_mod.get_global_var('func_5890')
call_5891 = func_5890_call()
output = call_5891
func_5892 = relay.Function([], output)
mutated_mod['func_5892'] = func_5892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5820_call = mod.get_global_var('func_5820')
func_5821_call = mutated_mod.get_global_var('func_5821')
call_5903 = relay.TupleGetItem(func_5820_call(), 0)
call_5904 = relay.TupleGetItem(func_5821_call(), 0)
output = call_5903
output2 = call_5904
func_5938 = relay.Function([], output)
mod['func_5938'] = func_5938
mod = relay.transform.InferType()(mod)
mutated_mod['func_5938'] = func_5938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mutated_mod.get_global_var('func_5938')
call_5939 = func_5938_call()
output = call_5939
func_5940 = relay.Function([], output)
mutated_mod['func_5940'] = func_5940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mod.get_global_var('func_4416')
func_4417_call = mutated_mod.get_global_var('func_4417')
call_5953 = func_4416_call()
call_5954 = func_4416_call()
var_5966 = relay.var("var_5966", dtype = "float32", shape = (91, 6))#candidate|5966|(91, 6)|var|float32
bop_5967 = relay.bitwise_and(call_5953.astype('int8'), relay.reshape(var_5966.astype('int8'), relay.shape_of(call_5953))) # shape=(91, 6)
bop_5970 = relay.bitwise_and(call_5954.astype('int8'), relay.reshape(var_5966.astype('int8'), relay.shape_of(call_5954))) # shape=(91, 6)
func_1218_call = mod.get_global_var('func_1218')
func_1222_call = mutated_mod.get_global_var('func_1222')
const_5975 = relay.const(2.709160, dtype = "float64")#candidate|5975|()|const|float64
const_5976 = relay.const([[3.476237,2.347576,4.654590,-8.646384,-1.294775,-4.378524,-5.972300,6.656446,-8.175195,-0.006616,1.303799,2.032154,-6.336020,4.841939,-1.300452,-4.657177,8.727317,-8.641462,-5.697149,8.736730,4.052966,-8.598309,-4.581806,9.415012,-0.361598,-4.418675,-3.690883,-1.088157,-9.531986,2.740395,-7.712701,-2.032083,4.541913,-4.515199,-3.802133,-4.996772,-7.603508,5.323921,-5.130964,3.817802,-6.222997,-2.281200,6.452692,3.794529,-5.795614,-2.178870,-8.651111,1.259561,4.142752,3.909977,6.216384,5.237503,-8.583906,-3.405933,-1.955918,4.684622,8.292248,4.635015,6.451721,0.776509,7.909974,-3.057673,-8.438341,8.102802,-6.426611,1.452003,-3.090873,1.351761,4.612422,4.741266,6.604450,-7.134550,-6.063663,3.729889,0.940819,-9.886634,-0.932775,-1.239117,-3.094022,-1.574685,6.007194,-7.935569,4.440224,-7.211921,7.496948,-3.488059,6.154515,-0.569680,-0.045646,1.416548,-9.015332,-6.099656,-8.185818,1.461354,-1.926832,7.905372,-6.754639,2.416180,8.865322,-9.160676,9.579358,6.838734,-1.804693,-3.447153,3.255449,-0.546387,3.634072,-3.520507,6.166069,-3.306086,-9.532668,0.568755,5.670685,-3.719285,8.358488,-1.312546,4.025184]], dtype = "float64")#candidate|5976|(1, 117)|const|float64
call_5974 = func_1218_call(relay.reshape(const_5975.astype('float64'), []), relay.reshape(const_5976.astype('float64'), [1, 13, 9]), )
call_5977 = func_1218_call(relay.reshape(const_5975.astype('float64'), []), relay.reshape(const_5976.astype('float64'), [1, 13, 9]), )
output = relay.Tuple([bop_5967,call_5974,const_5975,const_5976,])
output2 = relay.Tuple([bop_5970,call_5977,const_5975,const_5976,])
func_5986 = relay.Function([var_5966,], output)
mod['func_5986'] = func_5986
mod = relay.transform.InferType()(mod)
mutated_mod['func_5986'] = func_5986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5987 = relay.var("var_5987", dtype = "float32", shape = (91, 6))#candidate|5987|(91, 6)|var|float32
func_5986_call = mutated_mod.get_global_var('func_5986')
call_5988 = func_5986_call(var_5987)
output = call_5988
func_5989 = relay.Function([var_5987], output)
mutated_mod['func_5989'] = func_5989
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6035 = relay.var("var_6035", dtype = "float32", shape = (3, 12, 4))#candidate|6035|(3, 12, 4)|var|float32
uop_6036 = relay.log2(var_6035.astype('float32')) # shape=(3, 12, 4)
const_6040 = relay.const([[[2.557477,1.162435,8.392655,0.031634],[-0.598271,-3.379365,-1.140084,7.755537],[4.847948,-2.679268,-6.545243,0.698927],[5.592378,4.652660,-2.550251,1.128345],[1.225221,9.597153,-9.558846,0.729036],[5.775532,0.588369,2.733071,4.754085],[7.626322,-2.240865,1.028999,9.840375],[-1.462706,7.037333,-6.173413,-4.816959],[0.424366,-6.770268,-0.962037,-5.194484],[7.478858,-9.529266,-5.211500,6.300900],[0.227723,0.576247,0.704701,2.467621],[-0.398313,1.066308,5.391177,-2.421380]],[[1.662886,-9.131374,-1.161815,-6.740060],[5.239757,-9.087242,-9.056461,2.650943],[-0.355311,-9.014495,-6.608341,0.984432],[3.925200,0.047403,6.160261,6.817158],[-5.602715,-9.905712,6.545301,-7.540193],[9.467285,-2.785225,-3.709234,7.249663],[7.373284,-3.735919,2.795393,-1.855810],[-3.232984,-6.955427,1.545128,8.819256],[6.674960,-8.485998,-5.124397,4.539652],[-1.633488,7.406901,-0.150360,1.635125],[-5.009887,7.184422,2.764895,-8.440584],[3.260059,3.662572,6.844540,-0.498833]],[[6.649649,3.570172,4.482494,7.957610],[-5.122244,-9.472680,-8.979816,-6.879036],[4.459573,-5.203754,0.783143,1.211494],[0.238204,8.087349,6.680359,-8.350240],[0.485678,-0.023674,-2.102914,-9.160474],[-6.223165,4.641205,-4.584340,5.820367],[6.772655,-1.002832,2.126170,7.265742],[7.746224,7.112181,-4.225654,8.659538],[6.339873,-2.971735,5.618334,-7.316135],[1.463517,-5.449647,-4.215539,-2.580630],[-8.488198,-3.610898,-9.973989,-9.554984],[0.310610,-1.310325,0.816973,3.480194]]], dtype = "float32")#candidate|6040|(3, 12, 4)|const|float32
bop_6041 = relay.minimum(var_6035.astype('float64'), relay.reshape(const_6040.astype('float64'), relay.shape_of(var_6035))) # shape=(3, 12, 4)
output = relay.Tuple([uop_6036,bop_6041,])
output2 = relay.Tuple([uop_6036,bop_6041,])
func_6049 = relay.Function([var_6035,], output)
mod['func_6049'] = func_6049
mod = relay.transform.InferType()(mod)
var_6050 = relay.var("var_6050", dtype = "float32", shape = (3, 12, 4))#candidate|6050|(3, 12, 4)|var|float32
output = func_6049(var_6050)
func_6051 = relay.Function([var_6050], output)
mutated_mod['func_6051'] = func_6051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2896_call = mod.get_global_var('func_2896')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_6087 = relay.TupleGetItem(func_2896_call(), 1)
call_6088 = relay.TupleGetItem(func_2897_call(), 1)
output = call_6087
output2 = call_6088
func_6094 = relay.Function([], output)
mod['func_6094'] = func_6094
mod = relay.transform.InferType()(mod)
output = func_6094()
func_6095 = relay.Function([], output)
mutated_mod['func_6095'] = func_6095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1662_call = mod.get_global_var('func_1662')
func_1663_call = mutated_mod.get_global_var('func_1663')
call_6173 = relay.TupleGetItem(func_1662_call(), 1)
call_6174 = relay.TupleGetItem(func_1663_call(), 1)
func_4220_call = mod.get_global_var('func_4220')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_6201 = relay.TupleGetItem(func_4220_call(), 0)
call_6202 = relay.TupleGetItem(func_4221_call(), 0)
func_3158_call = mod.get_global_var('func_3158')
func_3159_call = mutated_mod.get_global_var('func_3159')
call_6220 = relay.TupleGetItem(func_3158_call(), 0)
call_6221 = relay.TupleGetItem(func_3159_call(), 0)
output = relay.Tuple([call_6173,call_6201,call_6220,])
output2 = relay.Tuple([call_6174,call_6202,call_6221,])
func_6230 = relay.Function([], output)
mod['func_6230'] = func_6230
mod = relay.transform.InferType()(mod)
mutated_mod['func_6230'] = func_6230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6230_call = mutated_mod.get_global_var('func_6230')
call_6231 = func_6230_call()
output = call_6231
func_6232 = relay.Function([], output)
mutated_mod['func_6232'] = func_6232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4291_call = mod.get_global_var('func_4291')
func_4292_call = mutated_mod.get_global_var('func_4292')
call_6240 = func_4291_call()
call_6241 = func_4291_call()
var_6244 = relay.var("var_6244", dtype = "bool", shape = (5, 14, 5))#candidate|6244|(5, 14, 5)|var|bool
bop_6245 = relay.mod(call_6240.astype('float64'), relay.reshape(var_6244.astype('float64'), relay.shape_of(call_6240))) # shape=(5, 14, 5)
bop_6248 = relay.mod(call_6241.astype('float64'), relay.reshape(var_6244.astype('float64'), relay.shape_of(call_6241))) # shape=(5, 14, 5)
func_4220_call = mod.get_global_var('func_4220')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_6255 = relay.TupleGetItem(func_4220_call(), 0)
call_6256 = relay.TupleGetItem(func_4221_call(), 0)
func_4740_call = mod.get_global_var('func_4740')
func_4744_call = mutated_mod.get_global_var('func_4744')
const_6264 = relay.const(1.463902, dtype = "float64")#candidate|6264|()|const|float64
const_6265 = relay.const([-7.682217,-1.588128,-0.909021,3.394969,5.089485,0.244541,-4.082561,-7.025385,2.524752,8.646788,-9.065754,6.930806,-6.617495,9.816903,-9.738616,3.236371,0.782879,6.060853,7.492089,1.016282,-6.460124,-0.794441,5.805019,3.494124,2.717454,-6.961602,0.157078,1.838814,-8.344179,8.349560,9.690437,9.546239,0.121389,4.243115,-2.964345,6.698000,4.541233,8.920398,-9.753559,1.947594,5.259823,3.008792,6.507692,-6.537258,-3.080358,-6.422094,-5.621752,-3.569566,-7.015913,2.263168,-2.289440,-2.906432,-2.348008,-9.907856,-4.965741,4.639120,-8.607717,-4.391894,0.498503,9.933142,-1.389674,-2.346903,-0.829073,-3.103048,-3.147919,8.766696,3.283219,-7.201076,5.015318,-4.141543,-4.914477,0.717445,3.859766,-6.931465,-2.058423,-7.533166,5.256634,8.070078,5.976751,7.172144,3.925869,-2.050730,-3.708889,0.635923,-3.703488,8.436261,5.362810,8.004421,-8.782882,5.802857,0.578430,0.791169,-9.040278,-1.717467,1.909536,9.139585,-1.840433,5.736533,-8.863989,-6.569782,-5.994517,8.982018,-7.817939,-9.830257,-6.547349,8.898999,6.275305,1.412797,-9.853928,4.648618,7.004371,-0.574726,4.768605,-9.854309,-0.011539,-9.603810,-7.283477,-2.148280,-6.292029,5.975179,7.961917,-9.422274,5.185751,-9.779582,-2.494974,7.365373,3.346657,7.071755,0.591795,-0.628567,0.502440,0.689190,8.167367,-0.003781,-7.623088,-5.576371,3.763607,7.215380,-6.670586,-7.027165,0.692928,-9.240288,9.430506,1.878458,7.632085,1.032845,-8.334406,-2.322004,-6.787605,3.749116,-2.405762,-3.129202,2.596517,7.904830,-8.609252,-8.232757,0.516055,-4.727468,-2.270908,-6.303441,3.265450,-1.373767,-0.068718,9.597004,-4.672412,4.398151,3.995568,-0.557548,0.070000,-4.114225,6.334794,-6.483392,-9.687576,9.051949,-3.811341,-7.026005,6.353601,-7.812932,-4.317446,6.870987,-1.988920,1.283005,-8.847969,-4.124108,1.858766,0.739555,0.605550,-1.956782,-6.060246,0.935439,7.003358,4.718255,-9.073271,-2.627192,2.928584,5.225282,-1.636722,3.775453,-8.110780,1.224773,6.117503,-8.412792,-7.864858,-6.752013,4.409920,8.732444,7.609754,9.804722,-3.430120,-9.998557,7.126126,-9.974552,5.727477,4.625405,8.494885,1.492023,5.663644,-2.241280,-1.213309,4.938915,-8.640286,-2.668866,9.463668,2.303642,1.602124,2.681000,-7.791662,1.030692,-5.338771,4.019044,1.438262,-6.992194,7.343333,-4.657056,8.091729,9.014414,-2.062776,2.859274,0.297682,-7.000986,5.824930,-4.819449,8.321802,7.923372,-5.817850,1.136659,0.934551,-0.638510,-0.878231,0.436045,-9.375510,1.083204,-5.162738,-3.961123,-3.861337,9.048978,7.791014,0.607893,9.261328,-1.267045,5.938972,2.369534,0.661711,1.786187,-5.078170,3.253319,7.389288,3.503544,7.073103,-0.600249,-9.287188,4.005937,0.846844,-9.806797,4.851181,-7.767327,4.067241,-5.403942,8.624721,-0.036405,-4.876796,9.385238,8.771048,3.035248,-8.206289,-3.884298,6.046727,-6.022479,-6.889612,8.876702,4.203319,-7.702261,1.241295,6.798564,1.029879,-4.482204,1.345734,9.117650,9.289335,-9.564575,-7.750375,-6.674190,-9.534354,-2.458637,-8.905312,1.839934,6.016104,-6.199664,-5.071495,-3.463318,2.363821,0.758517,-0.882457,4.279291,2.769268,7.820201,-8.292183,-8.401510,7.417972,6.270463,-8.070181,7.241555,0.957408,0.234226,-8.776332,0.796888,-8.300562,-4.191360,6.262861,-7.939907,4.545848,3.952618,-2.838175,0.497163,-9.991516,5.285606,4.484608,5.505987,-5.589840,-2.605422,-4.764277,-9.958068,-8.416857,5.408681,0.845209,-4.609740,3.352492,-5.083664,8.909017,8.603144,5.337455,4.634745,-7.209658,0.572910,4.278161,7.367529,1.397827,-3.093852,-5.981496,9.814016,-2.875723,1.721616,4.512406,7.697578,7.007752,2.640625,6.791038,9.862999,3.084186,-3.996361,-5.922124,-7.086254,1.520797,2.461009,-1.512427,9.715319,-3.081690,-5.659103,0.900182,3.753770,5.790308,1.426087,0.456370,-8.283571,2.674115,0.132148,-5.835257,1.876224,-0.462213,2.551775,6.020020,6.965335,1.433112,-8.865655,7.972363,1.324595,-3.797164,2.610266,7.241824,-8.399894,-9.856200,-0.684788,0.027682,3.926502,-9.098676,-8.862415,4.214747,-9.030392,3.031424,6.774548,-6.937954,2.844576,3.518929,-8.243959,-6.474943,1.700571,-2.380026,4.024664,3.814200,4.220830,-9.441365,-6.622048,-7.253167,-8.175683,5.739963,-0.141416,8.798865,-0.275229,2.899333,4.921001,1.714789,-8.272643,6.237701,2.605664,-8.766846,-9.111258,-8.073623,6.542546,7.489725,-5.242310,8.969169,-1.987838,0.272342,-2.575424,6.879359,-6.762837,-6.799560,-4.575648,6.310241,0.127491,3.360945,-6.724229,-8.461559,-6.375031,1.114170,-1.169603,1.072531,3.830868,7.889515,0.626375,-4.619743,8.218644,2.605390,-5.594389,8.300699,-5.479548,4.774339,-0.474406,-8.375527,-1.749311,7.647124,3.797454,5.178974,3.876533,-6.616964,-5.552506,2.870030,5.458917,3.830802,6.343032,6.843464,8.420700,-5.286411,-9.245949,-2.939742,-7.603510,2.780623,9.678199,3.625269,4.918977,0.091410,-3.867327,5.651871,1.207625,8.591249,4.339773,3.796102,2.836652,-1.322931,-1.860514,-3.024595,3.879969,-5.254903,8.415207,6.877728,4.994956,-6.757906,6.437714,-2.964173,-5.417672,5.960491,-3.854135,8.820938,-7.226712,-3.033361,-7.686469,-6.835098,-2.400830,-4.804194,-8.169157,5.087775,1.270651,6.688005,3.269811,2.657055,6.465258,-6.173337,6.007286,3.330561,5.361090,8.862580,7.670278,0.723818,-0.365034,7.066442,-6.641615,1.775289,-1.236121,-6.824326,-0.382575,0.330235,2.014112,5.692348,6.691993,-6.361235,-6.494399,5.882781,0.278422,-0.853849,-0.551512,-0.391372,-7.513766,-2.120632,-1.447482,-5.012843,0.183269,-2.503957,2.448127,2.019217,6.217961,-7.517718,0.501527,7.272283,-0.535062,3.561840,4.723173,8.627137,5.887022,-6.190760,7.564240,-8.155690,-7.395593,3.078368,-3.305027,4.440894,-3.934254,-9.717039,3.013563,9.142757,7.978356,-4.723044,-7.167668,-1.438201,-1.133948,-5.675129,2.774247,-4.862844,0.672125,-7.061766,-2.527286,2.271945,0.275469,0.664609,6.482651,-0.894880,3.618321,9.249703,2.944029,3.641188,-5.437037,4.920200,-0.755351,-0.296280,6.704098,8.108469,-7.571786,-6.540015,-3.788729,-6.695674,-5.368392,-8.048149,9.241170,-1.898681,3.722261,-1.201851,4.497186,-9.817905,3.334296,1.611045,9.093787,3.674248,-5.894344,9.181893,9.179362,-7.024911,-6.916652,9.469431,7.142832,-7.847075,4.990956,-1.257396,-3.012948,-2.919818,8.763933,-7.101735,-6.290182,-3.694311,-8.486291,-2.702656,5.857354,9.721028,0.944197,-8.295971,-2.513790,-4.953137,3.918203,-5.462567,2.400545,-6.780592,5.288569,7.178252,-2.730726,-9.260262,7.834599,-9.422464,1.035033,-2.196667,-9.789826,1.105164,-1.234318,-5.929226,6.565798,0.301741,6.146319,8.755547,2.967545,-7.894631,3.032881,-1.319450,7.210223,8.411378,-3.375454,-6.220630,-8.559622,-7.449520,9.284028,2.706869,3.762683,1.129979,-2.333620,7.385296,5.107082,3.013651,-4.280454,8.979195,-6.741151,0.666501,-0.629190,9.732495,3.523245,6.367080,-4.951003,5.461469,-9.630956,-3.927922,-8.243155,-3.980229,7.214164,-1.313157,7.083340,-4.313784,-3.025870,-1.475225,5.890329,-3.306673,0.329681,9.939271,-5.543505,-0.925804,6.923646,0.383635,-4.936401,9.317864,7.013800,-0.493558,9.109634,-0.097730,-0.790170,-2.814746,-3.403361,-1.518032,9.646082,9.411843,4.095613,-3.057796,-1.795340,-2.905492,6.545713,-0.999913,1.218888,8.717379,2.209689,-7.191125,-5.637137,5.761331,1.399177,6.183339,6.258860,-1.735259,-8.689160,1.016619,-8.721502,7.537457,4.609206,-4.542885,-3.955345,5.756670,8.033328,4.750439,1.413251,-1.429899,1.199755,2.808544,-3.362113,8.653859,-1.906213,5.189669,-8.313377,-1.770016,6.024586,-5.301631,-0.429328,6.841160,9.024468,5.060843,-9.680682,-6.803669,8.612147,-8.203736,0.234333,-1.855098,3.443933,8.598394,9.129512,4.915840,-7.518561,-0.423509,-3.814646,1.121729,5.873179,-9.091195,-9.147762,1.705040,-3.305934,-3.818226,2.868976,3.818000,-7.467097,-3.489126,-8.378842,-7.708448,9.338327,1.453882,4.755567,4.844556,0.796706,-0.354855,-5.163965,-9.533583,4.231456,2.311118,3.112676,7.241327,3.024202,6.870470,-7.795266,-4.986283,3.675525,7.500018,-7.246452,1.055615,-6.574831,-8.866889,6.849130,8.468541,5.462635,2.851875,6.285921,-6.463307,-4.779750,-9.330880,-7.023131,-3.646143,-2.872356,-3.540600,-0.896362,-7.398885,6.286840,-3.671728,2.561294,4.058690,-6.439943,-0.502865,-5.548019,-4.034200,-1.582392,0.151506,7.809201,-7.168553,1.568978,9.311678,-1.651852,-8.452334,-7.125508,-4.512404,-3.286463,-5.354625,-7.087692,-1.131658,6.861804,1.774949,7.745623,-4.936826,-2.047502,-4.545763,7.044637,-8.272114,3.071246,7.675263,2.608603,-4.048810,-0.736419,-9.370486,6.474117,5.979196,9.404402,-4.141201,7.262723,8.090735,-9.985038,3.714435,0.210496,5.861691,-7.990199,-8.444652,2.852467,4.684589,9.330207,-6.258287,-6.525433,-0.796996,0.321602,-8.131026,1.920940,-2.496887,4.806899,-2.290503,0.415640,4.322571,-4.274581,1.923608,-2.479328,0.181292,-0.340753,-6.706739,1.424369,-7.519229,-5.378915,4.891761,0.899522,8.322775,3.947436,3.269668,0.405894,-7.703248,8.393589,2.084550,-9.363909,2.343007,3.665110,5.099854,-3.574867,8.893477,-2.942588,6.494579,-9.218525,-9.641161,-4.007314,2.358359,8.870214,9.154063,5.368668,-0.718362,-5.123254,3.769481,-2.376109,-6.111384,-6.229420,6.092365,3.133816,-4.847688,9.321920,8.543997,6.109645,0.674129,4.055963,2.939195,-9.927403,-8.249620,6.809329,-9.384345,5.302465,9.865586,-1.742269,-7.782704,7.452049,8.557541,-5.684838,-0.228537,3.053435,-8.825085,-8.810622,-3.161799,6.035841,1.018235,-5.878291,-2.624852,4.391108,3.563491,-2.194139,8.171579,1.439720,-6.608842,1.601124,8.696362,7.213151,2.015737,5.191508,-5.020939,1.265213,5.985078,8.009843,3.659862,0.528990,-7.318290,-3.678728,0.688167,-1.744434,9.982916,-5.690144,0.002195,-2.920504,-0.331795,-5.358405,4.197881,-9.198544,8.166095,-2.625304,-9.882335,5.995336,-5.692396,-5.658248,9.862481,5.808921,8.149726,9.296224,6.067018,1.846761,6.532091,-3.570854,7.814046,-7.495227,-0.243186,1.935506,-0.196946,4.669620,6.873290,8.080628,9.581925,4.870462,-6.637926,7.602427,3.019683,6.368999,-0.048713,2.211826,4.173139,-9.864202,-6.298827,-5.601245,-5.284689,8.156791,-0.343034,2.239994,-4.694535,-3.235917,9.162647,-2.717650,-7.073082,-4.297347,-9.931165,9.084573,5.530338,9.274210,0.007351,-2.448577,-5.378979,3.591582,-3.378455,-9.379674,-8.890199,-3.323266,-7.830366,-4.280841,-2.111549,5.913334,-0.956604,-8.961021,-5.079793,1.710609,-5.563019,2.685527,-4.573101,3.962418,5.582076,7.147630,-2.714791,-5.430506,-0.657417,3.773742,9.677023,1.518161,9.850445,4.589850,-4.876011,-6.789501,-1.656034,4.656498,-9.401083,-0.582452,-5.251273,7.327487,1.362572,3.752799,-0.203463,-1.254577,1.953771,6.531565,-1.242208,-5.728758,-9.184652,6.997910,-7.599501,7.029023,5.737812,2.996391,7.866203,-1.569936,-6.239303,-8.372675,-4.247323,-6.365460,5.861351,6.754794,-8.958924,-6.322489,-3.224812,7.787711,-9.392513,0.860955,-7.828910,1.465123,-7.850244,-9.532873,9.723798,7.716444,-7.220318,6.288490,-7.503481,5.220457,-2.832923,0.752774,1.507164,9.921076,3.900526,3.455961,2.400507,5.085026,-4.169794,-6.789804,-4.013012,9.683884,4.647045,-9.986747,0.575935,-4.835256,1.836266,-5.609667,8.361102,-1.995613,3.252481,-0.538539,-7.293364,-6.677799,-8.462134,-1.689832,-4.174181,4.934712,-2.318271,5.764569,3.777264,5.268174,4.911387,0.083266,-5.505773,8.201356,1.368921,-3.785921,2.203718,-8.685555,-3.115303,6.470018,-7.847688,-6.771615,-9.080909,5.446017,-4.678679,8.833495,-7.617447,-8.671530,-5.040989,-1.882668,4.186023,-2.752342,4.197358,-6.254329,4.286105,0.152669,-7.928995,8.516500,7.457527,-6.362479,3.046222,-1.265944,-5.723084,-0.294632,-1.675167,-3.990220,-8.068521,1.905527,2.852278,9.657321,9.656930,3.952217,-0.490603,-8.020936,6.390683,9.538465,-6.750635,-5.579355,-6.858153,-0.942211,-9.866604,7.341185,0.798181,-4.184645,-0.559056,2.383438,-6.438761,-0.920306,1.380260,3.226748,3.413512,-9.702413,-3.775815,2.187230,2.724585,1.918645,-3.612903,-7.597214,6.596288,9.572573,-2.864634,3.879088,6.167512,-5.138213,8.915316,3.713544,-9.945142,-3.430598,-4.218097,-6.284111,4.402467,3.813199,-6.021479,6.948064,0.392187,8.932311,-4.772554,-5.989383,-1.870382,-5.912858,-7.116414,3.112670,9.451999,8.816038,5.110989,-3.843096,-9.222046,-0.531906,3.229495,-5.269050,-8.873242,9.313809,2.117923,-8.071564,-5.430453,1.054971,-7.352300,1.569645,-7.222984,-5.224835,-5.203366,7.676791,-2.711043,5.259571,3.118480,-7.344970,-0.881762,-0.756229,-5.259285,0.622822,-6.639326,8.602087,4.363338,-6.999905,-8.374500,4.738012,8.489674,9.022293,3.674055,-8.998679,-9.102742,-3.459215,-7.386924,-2.810676,-3.718658,7.277343,-9.291929,2.590793,2.185041,-6.314973,-4.337628,9.345904,-1.346494,-8.573337,1.096779,-8.853173,9.078210,-7.649367,-6.517493,-8.118500,1.502755,7.681941,1.633089,6.644367,-6.516432,-7.810185,-9.407802,2.991698,-8.325659,-6.818907,-5.054877,5.163916,8.260130,6.063826,1.331931,-5.061049,6.338586,-7.225685,8.249073,7.227285,3.219700,-7.454233,0.785197,-7.173566,9.419159,-2.612557,-6.552902,-0.860060,9.412502,4.536708,6.563947,7.458530,6.759038,0.934377,-6.547367,-1.132951,-7.281176,2.670663,-7.411939,3.763553,-0.715880,0.046571,-7.407994,-2.575871,0.248724,-6.330586,-9.465253,4.882633,3.292954,-4.261821,-3.940818,-7.270437,8.213602,-5.294484,0.633833,-8.916352,1.389147,-9.913085,9.421871,-8.937130,-6.156497,7.755116,-3.836871,-4.046778,-3.876754,5.427754,-0.614918,0.025477,2.169020,6.873822,-3.113289,-8.104007,-7.433317,3.913346,-3.960952,-6.047816,-8.351926,2.722965,5.950732,-9.198496,-6.492332,-3.937252,8.170036,-0.363169,4.299912,-6.109768,6.430651,-4.960238,7.482209,3.604790,2.061528,6.515313,-8.207490,-7.081310,-1.790140,9.421971,2.021028,9.614011,5.233154,5.851455,-9.546459,-7.770387,4.006443,5.285584,-2.995048,-0.787373,-3.806920,4.657457,-4.876479,-2.750283,6.958952,8.255614,1.211464,5.197814,-3.551086,-5.237268,-5.410457,9.615937,7.451810,2.314700,7.505294,2.333230,2.023062,-5.075941,-5.772395,-1.388609,-7.610427,-3.783966,5.032715,9.708063,2.598736,-2.793325,-8.437582,0.106839,-6.729793,-3.559904,-4.616807,7.036153,-2.629319,0.239654,8.203335,-5.360181,9.445953,6.798484,6.651754,-6.802256,-5.076926,-2.471789,-8.549312,-0.218452,-3.914038,7.077681,-3.368291,-1.853705,-6.206428,-2.478894,-5.140492,-0.577515,2.326447,-7.539072,-0.661394,0.794431,9.591283,8.253145,6.738187,-2.538152,-8.589482,-2.086310,-1.027924,-9.452549,-5.518037,-4.647362,4.048449,-4.633803,0.558322,5.965850,-3.543723,-8.395252,2.812824,9.536482,-4.400143,-5.540073,3.760740,4.888953,-1.647010,1.388478,-4.182029,1.187350,-8.392970,7.351760,-4.745080,6.488420,1.966225,-9.541511,3.882062,-7.702947,1.080892,4.789927,5.404940,-6.243405,-9.701143,5.237478,-8.527315,-6.821276,-7.115922,-7.292801,0.971161,2.343209,2.624055,2.487767,-8.414243,-3.393228,-2.440957,-1.524117,7.111778,8.233982,-3.484171,-6.504407,3.465753,1.843883,-0.133479,-3.521300,2.960876,5.471326,4.163423,-1.523142,-2.234714,7.306300,-5.191907,-3.973112,3.034693,3.197028,-3.264607,-6.088980,-3.510751,-4.796759,9.770010,-6.405298,-5.473887,5.560097,-7.078114,9.436426,1.867034,-0.319692,3.452675,7.743661,-8.145078,-7.103862,-1.538828,9.540522,5.779939,-6.110409,-9.885693,4.084402,-7.441149,7.746216,-0.710469,3.856968,3.543901,0.929449,-1.103727,5.389684,7.271592,-4.268774,-5.333102,6.224454,2.459012,-8.933649,-8.436652,-1.918065,9.966731,-1.994536,2.951876,9.737318,7.481638,4.566335,2.841580,-7.321976,-4.280706,-3.444810,-4.060076,-0.643302,3.141496,-5.113435,7.856112,-7.169223,-5.005134,-6.652926,-4.194435,-8.789761,1.084406,-9.861179,8.718265,4.558430,4.133485,-7.086080,3.820733,9.131763,-4.093807,6.253338,-9.042345,-9.902869,-3.100758,-5.736773,-2.369020,-1.296888,-0.955169,-6.032375,4.124446,-2.918052,1.187511,3.684762,1.579073,-8.430088,-6.167431,2.080408,0.325117,2.921947,9.759827,7.475641,-7.923472,3.975408,-3.034102,-2.260171,4.254488,-3.041480,-0.729055,-0.749647,-7.913235,3.009448,-9.974844,7.974388,-3.656926,4.922253,2.132410,2.711476,-2.956299,-1.799643,-4.157782,-5.681392,1.026240,-4.723525,-4.021285,-9.792733,1.695467,1.020608,-0.635207,-8.948868,5.591851,-6.835111,-6.582867,4.510582,-2.577206,9.346819,-3.561238,3.471644,-1.398482,0.977456,-2.422165,0.476447,7.161883,0.874577,1.517191,-6.667826,4.351145,7.632225,-0.903553,-3.246541,5.281451,2.129720,0.868257,5.950632,7.326112,8.593417,-1.493879,8.529011,9.303590,-1.610874,-4.736038,-7.023272,8.170292,3.947666,-5.141238,4.736087,6.009432,1.623072,2.968004,-0.046223,-9.311931,-2.527195,-0.910220,-2.171753,-7.261898,2.016451,-9.192740,-9.959154,9.215937,3.077013,6.894751,1.092670,-2.422551,7.100193,-8.927712,-3.435419,9.185445,7.892342,-5.062015,-7.288187,-3.438454,-0.451158,7.477386,2.922327,-0.581641,-6.660683,0.513166,0.183554,-0.880325,1.437051,-0.749453,8.264931,-3.985657,-4.021118,3.882441,4.317289,-6.285045,-2.146593,-6.561347,-2.408882,-5.538366,-8.036099,7.148254,9.919958,-6.985478,-4.114862,-4.319493,2.045238,-6.375039,-1.373678,-8.026917,-8.456797,5.684340,-2.559445,-3.140199,-8.716835,2.225917,-9.534100,-0.774539,-1.142530,-2.146176,-4.109235,3.583236,0.175583,7.253959,9.488702,9.935286,-4.084666,-0.847780,-5.784884,5.962700,5.119072,7.815318,1.290606,-2.148013,-5.091273,-6.645104,7.690572,-3.759309,-5.782687,-6.030145,7.900842,9.373414,-0.211502,-4.324269,-4.315329,-2.374089,-9.965546,4.045337,4.353626,-8.384218,-7.754774,-5.398838,-9.497594,-7.661051,-2.559412,-1.647835,-3.310378,3.108199,7.055027,1.989460,-2.319150,6.679392,3.910051,-2.254186,-6.821097,-3.004778,-9.527575,9.854317,-8.109814,5.530416,-0.652672,-5.023509,8.156953,-6.522909,-3.331065,-9.600447,6.936711,8.463856,-7.805101,0.019030,-9.125054,9.450859,1.423384,3.158255,-8.976502,-1.575719,-5.298765,5.512753,6.291702,-1.131910,4.598104,-6.531689,2.105613,4.987197,8.679628,-8.245117,-1.938284,-2.586432,-5.104627,7.747837,-4.988157,-4.932837,5.067765,-8.456559,3.253023,-1.132309,8.694818,7.698755,-9.582207,-6.153674,1.652216,-3.524517,-8.395840,0.677358,-4.022977,6.572334,3.063863,-0.440078,3.319512,9.344382,0.944516,5.629933,-5.342978,5.537057,2.382086,-3.808338,8.500342,2.219915,-4.521035,-8.872038,6.106652,0.777127,9.806851,7.823997,5.656725,3.218794,-5.173647,1.825704,0.394017,-3.896754,7.494827,-3.095489,7.548628,-1.815515,-8.735932,-4.863223,9.063858,-2.556102,1.796787,8.029433,-2.365564,-6.173466,-6.945676,0.237329,-5.405996,-3.954822,2.474376,-8.962171,-9.307671,-3.596798,-6.937988,5.021123,-8.104475,-1.690587,2.793867,-7.247339,9.959115,1.013201,5.843530,2.401940,-4.910007,5.894673,-6.604641,-1.058155,-6.965438,-6.752846,3.068602,-8.491647,6.081647,-4.657170,2.361149,7.566856,5.170260,-3.481174,9.822065,-5.270718,4.088525,4.679770,-4.349697,4.075257,-0.129179,9.672855,7.202338,-7.699059,-5.079013,1.694165,9.453138,-0.879104,8.310913,7.852131,6.945541,-9.111408,0.154726,-1.751864,1.028616,0.820323,4.897426,-8.017330,-2.282047,-5.235650,7.055592,-7.393360,-5.909992,7.479368,8.327304,-7.422671,-4.431588,-1.640551,9.672575,7.488589,-0.268478,-9.397602,7.855721,-1.627501,3.049681,9.760108,-5.575894,-5.972711,-9.989915,3.431240,-9.994931,-7.197872,-4.365569,2.303808,-2.338342,2.885929,1.940311,-4.370536,-8.762221,-5.884611,2.697677,-0.825316,-9.378356,-9.208818,-5.202619,-0.415064,-0.239597,4.016827,7.143193,-4.638419,-5.239340,-2.496659,4.675761,-6.591574,6.530686,-8.632740,-8.983809,1.487362,9.479027,-7.954242,5.074957,-4.563613,1.058656,-5.000865,-5.425999,-7.686384,-9.483493,-9.114657,-0.640646,4.617925,-4.911725,-8.421148,-4.673941,9.859353,-7.524525,2.138714,-7.222208,3.620040,-1.553867,8.663851,-2.269550,4.153094,-9.725263,-0.459857,-1.465451,7.002631,7.612223,-1.605307,7.793595,6.520633,0.656381,8.713656,1.955898,9.139370,-5.733060,-6.043404,9.824248,-8.293585,-5.297995,-4.823976,-9.517485,7.426285,1.941618,-6.947867,6.995316,-3.387141,-5.640226,-0.205398,-9.979503,5.036105,-7.452559,7.993032,9.407398,-3.236625,0.886851,5.898728,-2.899579,5.081826,-3.181742,-0.256883,-8.104906,-5.448866,-1.095440,-9.168158,-7.856552,8.513290,3.421894,-3.625773,-1.021919,-0.021524,1.372945,-7.856313,-3.822988,-5.411448,2.743371,-2.687709,6.080644,-4.096680,-3.806277,0.895626,3.788639,0.097627,9.031046,7.825466,-1.103543,3.911972,3.998040,8.710865,-0.695912,-6.758277,-9.944611,2.377133,6.534737,2.080217,-0.505439,5.007340,-1.278053,-6.611790,-6.927309,9.407904,-4.938085,7.237422,-8.165203,1.621760,-6.475169,-0.574883,1.798852,-3.373760,-3.797311,-5.897919,-4.336646,-4.381772,-0.222751,7.062817,-7.527585,-2.133699,9.741228,4.625859,-5.376917,-4.493315,-4.423858,-7.220518,-3.424975,6.474532,-0.684699,8.662569,0.329475,7.070824,9.672545,-9.078356,-7.966100,-5.169130,-8.004756,2.781458,-2.845644,3.271987,9.335167,-5.783586,1.483097,-3.990651,4.788244,-6.499810,6.653689,2.217621,-3.420067,-3.212419,-3.077849,5.844719,-2.235154,1.426373,-8.606470,-2.873470,-1.604853,-7.956567,-7.610828,-4.991987,-7.396953,-2.903029,-8.210543,-2.080301,2.653041,5.693130,9.709961,0.625859,-0.649154,1.369563,9.003977,-7.384906,-0.986046,6.988145,6.668181,0.506860,8.685439,8.798959,1.288218,-2.552546,-9.863966,-3.012037,-3.085270,-8.412937,-0.287674,-2.374892,2.674729,-1.197864,4.391372,-2.325450,4.246278,-3.500359,8.800336,-7.058465,-1.428190,7.922200,7.142454,-9.381456,4.907381,-9.399496,-1.477754,-7.782747,5.117858,-6.759573,-6.914349,9.000465,-8.428757,-1.225738,8.975820,-3.389692,-1.055730,-0.191732,9.557912,9.559462,8.378343,-6.709959,-8.005870,7.196153,2.661776,-3.482750,-9.958026,0.024802,-2.708227,-9.758494,9.651573,7.273267,8.590937,7.021425,-3.860559,5.078773,-5.185677,-4.305274,-6.281065,-0.257438,9.535981,-7.668294,-3.866610,-5.523741,8.581672,-4.021446,0.389961,-2.026141,5.317926,9.196219,1.594186,-6.455283,-6.984155,-0.764073,-1.729660,2.736496,-2.982160,-8.452964,0.196375,5.920198,4.259037,3.182149,0.560259,4.418860,0.780554,-0.679195,-7.706333,-7.009503,0.421498,7.027501,7.974950,7.278254,-9.522346,-6.328961,-1.992406,0.648180,7.996203,-3.948257,-3.100234,-9.025555,-7.503285,-6.368239,2.224093,-8.055187,-3.849654,-1.396570,-4.477650,5.280543,4.846130,-2.761030,9.579744,-1.094524,5.286736,8.741238,-9.746476,1.127947,-8.359386,1.762133,4.740388,9.389275,-9.087107,1.286496,9.401787,4.894203,5.418136,1.523639,9.221134,4.190713,-1.601734,9.040201,-7.617762,-2.994568,-1.089610,-1.814264,1.036494,7.164734,-0.284148,-6.126768,8.345203,-7.830063,0.672964,3.609830,9.387896,7.393385,8.060709,4.977621,-9.392073,2.244924,2.471157,-1.821972,0.478363,-1.354754,-9.814596,4.447130,0.960455,-3.214202,1.715814,0.547850,7.073746,6.508793,9.646962,-6.014572,-5.545540,8.792643,-4.680415,-4.399259,4.351117,0.048892,2.541890,-9.527696,-6.188512,8.352089,-5.391530,1.580666,-7.144971,8.286159,0.329906,0.563415,9.618319,9.622319,-1.452473,6.238469,5.614158,9.423668,6.918452,8.818888,8.389444,-2.609906,5.985467,6.666709,-2.337818,-8.201755,-0.061041,4.238986,-7.228292,2.847027,-8.232165,-3.989055,4.446860,-3.952024,3.024781,5.859417,-9.023631,2.370842,6.379987,2.898416,3.447556,9.625913,2.308098,6.566776,6.663113,-8.816037,0.302326,9.143347,5.248262,7.455091,9.571834,1.635011,-0.346490,-2.061485,8.854863,5.031795,9.504160,-0.436555,7.761841,-3.953017,9.673002,-6.579900,6.920406,8.505860,7.650071,-0.157850,6.072856,4.244560,-3.369357,4.750469,5.566504,-6.379515,8.847784,-1.898567,-9.227743,-5.520043,4.823866,-5.574370,-7.259975,9.219046,-1.053573,7.636683,2.876278,-3.644907,-4.827230,8.029956,-8.667149,-2.634952,0.729277,4.518628,9.619337,3.918500,-1.607463,3.009028,5.119228,9.843780,-2.722836,-0.194625,1.293073,6.089783,-9.037213,2.204631,-1.140571,2.630402,-7.680613,4.146938,-2.484378,2.096168,-4.712622,9.742867,5.742795,-3.543554,0.252926,-5.821843,4.242683,-2.727498,-4.739569,-0.132624,7.383074,-5.583716,-4.919134,3.810716,-1.825529,-2.445534,-8.148311,8.931033,-0.279407,7.878459,-9.888889,-3.415532,-8.308441,7.842288,-2.089281,3.145856,2.292107,-9.054114,-2.240824,-2.043309,-3.612279,5.000762,7.281762,-0.376554,-9.234482,1.796920,4.168494,-4.406219,9.125311], dtype = "float64")#candidate|6265|(2464,)|const|float64
call_6263 = relay.TupleGetItem(func_4740_call(relay.reshape(const_6264.astype('float64'), []), relay.reshape(const_6265.astype('float64'), [2464,]), ), 5)
call_6266 = relay.TupleGetItem(func_4744_call(relay.reshape(const_6264.astype('float64'), []), relay.reshape(const_6265.astype('float64'), [2464,]), ), 5)
func_5845_call = mod.get_global_var('func_5845')
func_5847_call = mutated_mod.get_global_var('func_5847')
call_6268 = func_5845_call()
call_6269 = func_5845_call()
func_3386_call = mod.get_global_var('func_3386')
func_3387_call = mutated_mod.get_global_var('func_3387')
call_6270 = relay.TupleGetItem(func_3386_call(), 4)
call_6271 = relay.TupleGetItem(func_3387_call(), 4)
func_1249_call = mod.get_global_var('func_1249')
func_1251_call = mutated_mod.get_global_var('func_1251')
call_6274 = func_1249_call()
call_6275 = func_1249_call()
bop_6276 = relay.minimum(const_6265.astype('float32'), const_6264.astype('float32')) # shape=(2464,)
output = relay.Tuple([bop_6245,call_6255,call_6263,call_6268,call_6270,call_6274,bop_6276,])
output2 = relay.Tuple([bop_6248,call_6256,call_6266,call_6269,call_6271,call_6275,bop_6276,])
F = relay.Function([var_6244,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6244,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

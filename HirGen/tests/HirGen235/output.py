import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_130 = relay.var("var_130", dtype = "bool", shape = (8, 7, 12))#candidate|130|(8, 7, 12)|var|bool
var_131 = relay.var("var_131", dtype = "bool", shape = (8, 7, 12))#candidate|131|(8, 7, 12)|var|bool
bop_132 = relay.logical_or(var_130.astype('bool'), relay.reshape(var_131.astype('bool'), relay.shape_of(var_130))) # shape=(8, 7, 12)
output = bop_132
output2 = bop_132
func_135 = relay.Function([var_130,var_131,], output)
mod['func_135'] = func_135
mod = relay.transform.InferType()(mod)
mutated_mod['func_135'] = func_135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_135_call = mutated_mod.get_global_var('func_135')
var_137 = relay.var("var_137", dtype = "bool", shape = (8, 7, 12))#candidate|137|(8, 7, 12)|var|bool
var_138 = relay.var("var_138", dtype = "bool", shape = (8, 7, 12))#candidate|138|(8, 7, 12)|var|bool
call_136 = func_135_call(var_137,var_138,)
output = call_136
func_139 = relay.Function([var_137,var_138,], output)
mutated_mod['func_139'] = func_139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_380 = relay.var("var_380", dtype = "int8", shape = (2, 4, 2))#candidate|380|(2, 4, 2)|var|int8
var_381 = relay.var("var_381", dtype = "int8", shape = (2, 4, 2))#candidate|381|(2, 4, 2)|var|int8
bop_382 = relay.bitwise_xor(var_380.astype('int8'), relay.reshape(var_381.astype('int8'), relay.shape_of(var_380))) # shape=(2, 4, 2)
bop_391 = relay.minimum(var_380.astype('float32'), relay.reshape(bop_382.astype('float32'), relay.shape_of(var_380))) # shape=(2, 4, 2)
output = relay.Tuple([bop_391,])
output2 = relay.Tuple([bop_391,])
func_398 = relay.Function([var_380,var_381,], output)
mod['func_398'] = func_398
mod = relay.transform.InferType()(mod)
mutated_mod['func_398'] = func_398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_398_call = mutated_mod.get_global_var('func_398')
var_400 = relay.var("var_400", dtype = "int8", shape = (2, 4, 2))#candidate|400|(2, 4, 2)|var|int8
var_401 = relay.var("var_401", dtype = "int8", shape = (2, 4, 2))#candidate|401|(2, 4, 2)|var|int8
call_399 = func_398_call(var_400,var_401,)
output = call_399
func_402 = relay.Function([var_400,var_401,], output)
mutated_mod['func_402'] = func_402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_429 = relay.var("var_429", dtype = "float32", shape = ())#candidate|429|()|var|float32
var_430 = relay.var("var_430", dtype = "float32", shape = (10, 1, 3))#candidate|430|(10, 1, 3)|var|float32
bop_431 = relay.divide(var_429.astype('float32'), var_430.astype('float32')) # shape=(10, 1, 3)
output = relay.Tuple([bop_431,])
output2 = relay.Tuple([bop_431,])
func_440 = relay.Function([var_429,var_430,], output)
mod['func_440'] = func_440
mod = relay.transform.InferType()(mod)
var_441 = relay.var("var_441", dtype = "float32", shape = ())#candidate|441|()|var|float32
var_442 = relay.var("var_442", dtype = "float32", shape = (10, 1, 3))#candidate|442|(10, 1, 3)|var|float32
output = func_440(var_441,var_442,)
func_443 = relay.Function([var_441,var_442,], output)
mutated_mod['func_443'] = func_443
mutated_mod = relay.transform.InferType()(mutated_mod)
var_534 = relay.var("var_534", dtype = "float64", shape = (14, 15, 6))#candidate|534|(14, 15, 6)|var|float64
uop_535 = relay.sin(var_534.astype('float64')) # shape=(14, 15, 6)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
var_539 = relay.var("var_539", dtype = "float32", shape = ())#candidate|539|()|var|float32
var_540 = relay.var("var_540", dtype = "float32", shape = (10, 3))#candidate|540|(10, 3)|var|float32
call_538 = relay.TupleGetItem(func_440_call(relay.reshape(var_539.astype('float32'), []), relay.reshape(var_540.astype('float32'), [10, 1, 3]), ), 0)
call_541 = relay.TupleGetItem(func_443_call(relay.reshape(var_539.astype('float32'), []), relay.reshape(var_540.astype('float32'), [10, 1, 3]), ), 0)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
call_543 = relay.TupleGetItem(func_440_call(relay.reshape(var_539.astype('float32'), []), relay.reshape(var_540.astype('float32'), [10, 1, 3]), ), 0)
call_544 = relay.TupleGetItem(func_443_call(relay.reshape(var_539.astype('float32'), []), relay.reshape(var_540.astype('float32'), [10, 1, 3]), ), 0)
var_545 = relay.var("var_545", dtype = "float64", shape = (14, 15, 6))#candidate|545|(14, 15, 6)|var|float64
bop_546 = relay.less_equal(uop_535.astype('bool'), relay.reshape(var_545.astype('bool'), relay.shape_of(uop_535))) # shape=(14, 15, 6)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
call_555 = relay.TupleGetItem(func_440_call(relay.reshape(var_539.astype('float32'), []), relay.reshape(call_538.astype('float32'), [10, 1, 3]), ), 0)
call_556 = relay.TupleGetItem(func_443_call(relay.reshape(var_539.astype('float32'), []), relay.reshape(call_538.astype('float32'), [10, 1, 3]), ), 0)
uop_562 = relay.tan(uop_535.astype('float64')) # shape=(14, 15, 6)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
call_564 = relay.TupleGetItem(func_440_call(relay.reshape(var_539.astype('float32'), []), relay.reshape(call_555.astype('float32'), [10, 1, 3]), ), 0)
call_565 = relay.TupleGetItem(func_443_call(relay.reshape(var_539.astype('float32'), []), relay.reshape(call_555.astype('float32'), [10, 1, 3]), ), 0)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
call_568 = relay.TupleGetItem(func_440_call(relay.reshape(var_539.astype('float32'), []), relay.reshape(call_564.astype('float32'), [10, 1, 3]), ), 0)
call_569 = relay.TupleGetItem(func_443_call(relay.reshape(var_539.astype('float32'), []), relay.reshape(call_564.astype('float32'), [10, 1, 3]), ), 0)
output = relay.Tuple([call_538,var_539,var_540,call_543,bop_546,call_555,uop_562,call_564,call_568,])
output2 = relay.Tuple([call_541,var_539,var_540,call_544,bop_546,call_556,uop_562,call_565,call_569,])
func_571 = relay.Function([var_534,var_539,var_540,var_545,], output)
mod['func_571'] = func_571
mod = relay.transform.InferType()(mod)
mutated_mod['func_571'] = func_571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_571_call = mutated_mod.get_global_var('func_571')
var_573 = relay.var("var_573", dtype = "float64", shape = (14, 15, 6))#candidate|573|(14, 15, 6)|var|float64
var_574 = relay.var("var_574", dtype = "float32", shape = ())#candidate|574|()|var|float32
var_575 = relay.var("var_575", dtype = "float32", shape = (10, 3))#candidate|575|(10, 3)|var|float32
var_576 = relay.var("var_576", dtype = "float64", shape = (14, 15, 6))#candidate|576|(14, 15, 6)|var|float64
call_572 = func_571_call(var_573,var_574,var_575,var_576,)
output = call_572
func_577 = relay.Function([var_573,var_574,var_575,var_576,], output)
mutated_mod['func_577'] = func_577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_587 = relay.var("var_587", dtype = "float64", shape = (7, 12, 7))#candidate|587|(7, 12, 7)|var|float64
uop_588 = relay.cos(var_587.astype('float64')) # shape=(7, 12, 7)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
const_591 = relay.const(4.255550, dtype = "float32")#candidate|591|()|const|float32
const_592 = relay.const([-9.378792,-8.352953,-0.987637,-9.876546,-3.047107,8.218300,1.908431,-6.107802,-5.006024,-3.124822,-4.813286,2.743025,1.608394,-2.591416,2.329616,-4.183698,1.540228,-7.308388,6.056273,6.637048,6.058146,0.940144,3.748047,3.501700,-4.904737,9.153110,-0.640643,-7.776980,7.225380,-6.067294], dtype = "float32")#candidate|592|(30,)|const|float32
call_590 = relay.TupleGetItem(func_440_call(relay.reshape(const_591.astype('float32'), []), relay.reshape(const_592.astype('float32'), [10, 1, 3]), ), 0)
call_593 = relay.TupleGetItem(func_443_call(relay.reshape(const_591.astype('float32'), []), relay.reshape(const_592.astype('float32'), [10, 1, 3]), ), 0)
output = relay.Tuple([uop_588,call_590,const_591,const_592,])
output2 = relay.Tuple([uop_588,call_593,const_591,const_592,])
func_634 = relay.Function([var_587,], output)
mod['func_634'] = func_634
mod = relay.transform.InferType()(mod)
var_635 = relay.var("var_635", dtype = "float64", shape = (7, 12, 7))#candidate|635|(7, 12, 7)|var|float64
output = func_634(var_635)
func_636 = relay.Function([var_635], output)
mutated_mod['func_636'] = func_636
mutated_mod = relay.transform.InferType()(mutated_mod)
var_656 = relay.var("var_656", dtype = "float64", shape = (14, 11, 6))#candidate|656|(14, 11, 6)|var|float64
uop_657 = relay.sigmoid(var_656.astype('float64')) # shape=(14, 11, 6)
bop_659 = relay.right_shift(uop_657.astype('int8'), relay.reshape(var_656.astype('int8'), relay.shape_of(uop_657))) # shape=(14, 11, 6)
bop_680 = relay.floor_divide(bop_659.astype('float32'), relay.reshape(var_656.astype('float32'), relay.shape_of(bop_659))) # shape=(14, 11, 6)
uop_685 = relay.sqrt(bop_680.astype('float32')) # shape=(14, 11, 6)
output = relay.Tuple([uop_685,])
output2 = relay.Tuple([uop_685,])
func_688 = relay.Function([var_656,], output)
mod['func_688'] = func_688
mod = relay.transform.InferType()(mod)
mutated_mod['func_688'] = func_688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_689 = relay.var("var_689", dtype = "float64", shape = (14, 11, 6))#candidate|689|(14, 11, 6)|var|float64
func_688_call = mutated_mod.get_global_var('func_688')
call_690 = func_688_call(var_689)
output = call_690
func_691 = relay.Function([var_689], output)
mutated_mod['func_691'] = func_691
mutated_mod = relay.transform.InferType()(mutated_mod)
var_710 = relay.var("var_710", dtype = "float64", shape = (2, 12, 3))#candidate|710|(2, 12, 3)|var|float64
uop_711 = relay.log10(var_710.astype('float64')) # shape=(2, 12, 3)
func_398_call = mod.get_global_var('func_398')
func_402_call = mutated_mod.get_global_var('func_402')
var_714 = relay.var("var_714", dtype = "int8", shape = (16,))#candidate|714|(16,)|var|int8
call_713 = relay.TupleGetItem(func_398_call(relay.reshape(var_714.astype('int8'), [2, 4, 2]), relay.reshape(var_714.astype('int8'), [2, 4, 2]), ), 0)
call_715 = relay.TupleGetItem(func_402_call(relay.reshape(var_714.astype('int8'), [2, 4, 2]), relay.reshape(var_714.astype('int8'), [2, 4, 2]), ), 0)
func_398_call = mod.get_global_var('func_398')
func_402_call = mutated_mod.get_global_var('func_402')
call_721 = relay.TupleGetItem(func_398_call(relay.reshape(call_713.astype('int8'), [2, 4, 2]), relay.reshape(call_713.astype('int8'), [2, 4, 2]), ), 0)
call_722 = relay.TupleGetItem(func_402_call(relay.reshape(call_713.astype('int8'), [2, 4, 2]), relay.reshape(call_713.astype('int8'), [2, 4, 2]), ), 0)
output = relay.Tuple([uop_711,call_713,var_714,call_721,])
output2 = relay.Tuple([uop_711,call_715,var_714,call_722,])
func_733 = relay.Function([var_710,var_714,], output)
mod['func_733'] = func_733
mod = relay.transform.InferType()(mod)
var_734 = relay.var("var_734", dtype = "float64", shape = (2, 12, 3))#candidate|734|(2, 12, 3)|var|float64
var_735 = relay.var("var_735", dtype = "int8", shape = (16,))#candidate|735|(16,)|var|int8
output = func_733(var_734,var_735,)
func_736 = relay.Function([var_734,var_735,], output)
mutated_mod['func_736'] = func_736
mutated_mod = relay.transform.InferType()(mutated_mod)
var_946 = relay.var("var_946", dtype = "float32", shape = (2, 15, 11))#candidate|946|(2, 15, 11)|var|float32
uop_947 = relay.sinh(var_946.astype('float32')) # shape=(2, 15, 11)
output = uop_947
output2 = uop_947
func_958 = relay.Function([var_946,], output)
mod['func_958'] = func_958
mod = relay.transform.InferType()(mod)
var_959 = relay.var("var_959", dtype = "float32", shape = (2, 15, 11))#candidate|959|(2, 15, 11)|var|float32
output = func_958(var_959)
func_960 = relay.Function([var_959], output)
mutated_mod['func_960'] = func_960
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1015 = relay.var("var_1015", dtype = "uint64", shape = (6, 7, 14))#candidate|1015|(6, 7, 14)|var|uint64
const_1016 = relay.const([[[-7,-9,-1,4,-2,5,2,-3,-6,6,4,-5,-6,9],[-7,9,10,-9,-3,-4,6,2,-3,-5,-4,5,8,-6],[1,8,-2,4,-7,3,-7,-4,-6,3,1,-10,-10,5],[-7,10,6,-5,-7,10,-3,-3,-10,7,3,-7,7,-1],[2,-5,-7,-6,3,1,4,3,4,10,-4,4,-7,6],[-8,-1,5,1,2,-4,3,-4,-9,-4,6,-9,-1,2],[3,1,4,-4,-9,10,-2,-6,-2,-2,9,3,10,-8]],[[4,8,-5,-9,-1,10,5,9,6,4,6,-8,4,10],[1,4,7,1,8,-3,-2,-7,4,-6,-1,-8,-8,2],[8,-5,-2,-4,-8,-1,6,5,8,5,-10,-4,-3,8],[1,-7,-3,-7,1,4,-8,-8,-10,2,-7,-1,2,-7],[-10,-10,4,1,10,-2,9,10,8,4,3,5,-7,-6],[-4,3,8,8,-1,-7,6,9,5,5,-1,3,-6,-5],[-7,-9,-4,8,8,-1,-4,9,10,-5,1,-10,8,-6]],[[4,-5,-2,5,-1,-5,-8,7,9,-1,-5,-7,8,-9],[-3,-1,4,-9,2,-2,6,1,8,-5,5,-7,4,-7],[1,9,10,-10,-5,3,-2,2,4,1,5,-10,-4,3],[3,10,-7,-8,8,1,7,-3,-1,-7,10,9,-4,8],[-8,-7,10,-2,6,-3,-10,-8,-10,-5,5,8,-10,3],[-5,-3,9,-1,7,7,5,-8,6,-3,-6,-7,-10,8],[-1,-5,9,7,-6,-10,-4,-6,9,-6,-9,-1,-7,8]],[[5,-9,-7,3,2,8,10,1,-5,3,-9,8,9,-5],[-10,-6,-8,-1,1,3,-6,1,6,-10,-7,6,-3,3],[6,8,10,-4,1,5,1,-5,-8,-1,-6,-7,5,8],[10,9,1,3,-1,2,-2,2,-5,-10,-3,7,-3,2],[-10,3,-6,-7,10,-2,8,-1,-1,6,1,-8,7,4],[2,6,-8,3,3,-5,-1,-4,-1,1,-9,7,-5,4],[10,1,-4,5,10,-8,-9,8,9,3,8,-1,3,6]],[[-1,-9,6,5,9,-2,2,-3,-6,-3,2,5,1,6],[-2,-9,3,-5,10,-9,-2,9,4,6,-5,-4,-4,7],[-5,-9,-7,1,8,9,8,8,-2,3,-3,5,-8,4],[-8,-9,-6,-1,9,-3,7,-7,-1,-4,-4,-8,-6,4],[1,-9,-1,-3,9,1,5,-8,-5,5,2,8,6,2],[8,9,-3,2,9,2,1,-7,-7,-9,2,2,-3,1],[-8,-3,-10,-8,1,9,-7,-7,6,5,2,8,7,-7]],[[10,-2,-2,5,-7,5,4,9,6,-10,-3,6,8,-9],[-3,5,-6,-2,-2,-10,-1,-1,10,-6,8,-7,-10,6],[8,-3,4,4,7,-10,-6,-1,7,4,2,4,-8,10],[-5,-8,-2,3,10,-7,7,7,-10,-10,8,4,8,9],[8,-3,-6,7,-1,5,8,-8,1,-6,-4,8,4,4],[-10,5,-10,3,9,-5,10,4,2,-3,-9,-4,7,7],[-3,-3,-1,1,1,9,-3,2,4,1,8,-9,-3,2]]], dtype = "uint64")#candidate|1016|(6, 7, 14)|const|uint64
bop_1017 = relay.logical_xor(var_1015.astype('uint64'), relay.reshape(const_1016.astype('uint64'), relay.shape_of(var_1015))) # shape=(6, 7, 14)
output = bop_1017
output2 = bop_1017
func_1027 = relay.Function([var_1015,], output)
mod['func_1027'] = func_1027
mod = relay.transform.InferType()(mod)
mutated_mod['func_1027'] = func_1027
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1028 = relay.var("var_1028", dtype = "uint64", shape = (6, 7, 14))#candidate|1028|(6, 7, 14)|var|uint64
func_1027_call = mutated_mod.get_global_var('func_1027')
call_1029 = func_1027_call(var_1028)
output = call_1029
func_1030 = relay.Function([var_1028], output)
mutated_mod['func_1030'] = func_1030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1154 = relay.var("var_1154", dtype = "uint16", shape = ())#candidate|1154|()|var|uint16
var_1155 = relay.var("var_1155", dtype = "uint16", shape = (8, 14, 16))#candidate|1155|(8, 14, 16)|var|uint16
bop_1156 = relay.maximum(var_1154.astype('uint16'), var_1155.astype('uint16')) # shape=(8, 14, 16)
output = relay.Tuple([bop_1156,])
output2 = relay.Tuple([bop_1156,])
func_1171 = relay.Function([var_1154,var_1155,], output)
mod['func_1171'] = func_1171
mod = relay.transform.InferType()(mod)
var_1172 = relay.var("var_1172", dtype = "uint16", shape = ())#candidate|1172|()|var|uint16
var_1173 = relay.var("var_1173", dtype = "uint16", shape = (8, 14, 16))#candidate|1173|(8, 14, 16)|var|uint16
output = func_1171(var_1172,var_1173,)
func_1174 = relay.Function([var_1172,var_1173,], output)
mutated_mod['func_1174'] = func_1174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1269 = relay.var("var_1269", dtype = "float32", shape = (2, 13, 11))#candidate|1269|(2, 13, 11)|var|float32
var_1270 = relay.var("var_1270", dtype = "float32", shape = (2, 13, 11))#candidate|1270|(2, 13, 11)|var|float32
bop_1271 = relay.mod(var_1269.astype('float32'), relay.reshape(var_1270.astype('float32'), relay.shape_of(var_1269))) # shape=(2, 13, 11)
output = bop_1271
output2 = bop_1271
func_1274 = relay.Function([var_1269,var_1270,], output)
mod['func_1274'] = func_1274
mod = relay.transform.InferType()(mod)
var_1275 = relay.var("var_1275", dtype = "float32", shape = (2, 13, 11))#candidate|1275|(2, 13, 11)|var|float32
var_1276 = relay.var("var_1276", dtype = "float32", shape = (2, 13, 11))#candidate|1276|(2, 13, 11)|var|float32
output = func_1274(var_1275,var_1276,)
func_1277 = relay.Function([var_1275,var_1276,], output)
mutated_mod['func_1277'] = func_1277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1310 = relay.var("var_1310", dtype = "int32", shape = ())#candidate|1310|()|var|int32
var_1311 = relay.var("var_1311", dtype = "int32", shape = (14, 16, 1))#candidate|1311|(14, 16, 1)|var|int32
bop_1312 = relay.maximum(var_1310.astype('int32'), var_1311.astype('int32')) # shape=(14, 16, 1)
func_688_call = mod.get_global_var('func_688')
func_691_call = mutated_mod.get_global_var('func_691')
const_1316 = relay.const([8.631179,7.269051,-8.600493,-8.231861,6.932123,-7.559715,8.187958,-9.012679,5.365308,9.428796,4.100953,-2.769951,4.881438,-3.985350,-6.866805,2.381835,-7.644448,5.661777,2.094804,-7.558082,-5.170499,-7.755116,3.704939,4.526630,8.786872,-5.074942,-2.858582,5.590906,0.799329,-0.034720,0.264015,1.746735,-1.543139,-0.631408,-5.929481,8.486943,-5.132873,-9.634843,-2.552396,-8.629798,-3.756138,-6.009326,-5.648006,9.162372,-3.895171,5.088097,0.849252,6.299824,-0.316205,9.439771,-3.177451,4.781054,8.008964,4.239125,6.697010,5.996538,-0.025304,-0.678571,2.524378,-3.520332,-8.920527,3.472958,-1.654375,6.735161,5.655273,4.558342,1.854021,-0.399004,8.147651,-0.587390,8.461144,-4.983804,-9.849911,-1.274273,-4.603124,0.536725,6.060708,-8.111707,8.250588,-3.350485,8.264024,0.133870,-5.972258,8.859733,9.601887,5.557296,3.690546,-1.240481,-4.259694,0.521004,-3.806159,9.569625,9.079967,9.417042,-0.676361,2.685968,-6.631252,-9.378072,-7.887772,-4.096365,-1.417619,7.921934,6.625798,8.008596,-9.435459,7.408908,0.929583,-8.125723,-9.019033,7.151069,1.361362,-5.496583,2.508316,0.252360,-7.775848,2.029553,7.581915,-8.339567,6.747076,-7.939108,-3.249836,-3.553347,4.144714,5.987940,-8.341965,-4.225037,7.025073,8.907414,0.306671,2.749945,-5.578845,-0.152316,9.263868,8.822913,-7.796697,-6.227194,4.888025,-1.450417,-1.716926,-1.847424,0.591571,-2.227337,-1.122618,7.109391,-3.243557,1.314494,-3.596512,-6.464704,6.348839,-2.956568,-0.101203,-6.369360,3.618486,-6.902035,-6.499847,-8.274702,4.431266,2.296325,4.994637,0.261422,7.435584,-8.185787,9.073079,6.958367,-8.359170,-1.810783,-3.717538,-3.519690,-5.944171,1.444714,-9.934796,-3.226085,8.464126,1.163841,-5.945228,-0.343807,0.801123,5.135328,-4.393050,2.056475,-8.346356,3.551263,5.520981,-9.120848,-1.477455,-3.170831,-4.483232,-0.669874,-7.359491,-2.983460,-0.283754,-5.020128,4.034337,-9.910870,-5.171375,2.798418,-2.758620,-1.187416,-8.624329,9.830290,-5.715440,2.766020,-9.617191,-0.528560,1.154507,4.840410,-8.998248,-1.751551,-9.045341,1.664010,-1.366211,1.607524,6.743138,-9.476349,1.679022,-9.522542,-7.871848,-2.704312,8.939043,6.791566,2.510972,-4.587395,1.195892,0.721339,-0.544768,-2.112113,5.310525,8.306444,5.306133,9.348570,7.136055,0.641960,9.968037,-4.728719,-6.015223,-7.727978,-9.915353,2.895154,0.516295,7.344600,0.362310,-2.906200,-5.982458,2.484272,-1.684467,-8.187473,-3.138370,6.815023,4.839925,-1.654497,2.780080,5.150726,-0.901518,2.143072,5.564596,6.116899,8.156947,-3.374207,8.989113,3.872885,-8.709446,1.769790,8.106981,-0.040049,-5.150845,0.472487,8.515164,6.943666,7.377040,6.199936,-8.985679,-6.597865,7.912365,7.256206,-8.397778,-8.316216,-8.781925,-7.327780,-6.834485,-1.011144,1.283177,-8.175092,-9.988012,-8.303596,2.007923,-6.107853,-6.424048,0.270056,7.752585,-8.299658,0.201397,-5.316051,-9.888066,-4.029514,-3.662332,4.945030,-5.321813,-6.938831,-8.052933,-2.229631,0.369233,3.398015,9.359747,8.180315,4.030505,8.000126,-5.492186,-4.086356,-3.031836,8.602616,5.951738,-0.163998,-0.644577,-9.116031,-8.303339,-7.344668,1.178410,7.772668,-5.793137,-3.261301,1.808064,9.148637,3.775881,-5.734554,-0.600680,-3.631767,2.471041,6.630603,-0.737721,-5.168769,-6.962115,-6.328968,-3.809338,1.792676,-4.097369,-4.337147,8.695604,3.322750,2.551737,-3.799748,5.021461,0.293938,2.229798,-6.978754,-9.298766,-1.211868,-9.356143,-0.457613,3.665216,6.473036,6.127576,7.747759,9.407618,-3.549177,-8.518651,-4.980730,8.577336,-3.587404,-0.983223,-1.025898,5.037005,-9.304697,9.474559,-1.673676,-2.137861,-2.398936,5.301415,-1.391720,-9.231754,1.558145,8.894827,-6.622246,5.963139,1.505634,-4.421278,-7.116110,7.422212,4.163855,-0.529077,5.078134,2.527669,-5.664466,0.577937,-0.548115,3.403531,-4.982627,9.956795,-0.411755,-4.249882,2.510910,5.901024,-0.351336,-2.805279,-0.043634,-7.544981,3.631455,3.965426,-1.582727,-1.238841,0.352657,3.856260,-0.515645,-1.590605,1.146272,-7.931457,6.117412,9.004006,-9.167084,4.862346,-7.949298,-5.895256,-6.937183,6.401408,-7.000882,5.214235,-7.411695,-8.719077,3.360178,2.001377,4.131214,2.263632,8.991084,-1.860785,-2.898489,-2.158315,8.282083,-1.047482,2.882913,6.004796,6.182564,3.554801,4.812359,-5.951628,-4.923178,6.739091,-4.017774,2.700660,9.561938,7.774471,9.461965,-3.975144,9.833549,-9.947100,1.285815,-6.616317,-2.432685,-5.017478,5.791619,2.725930,-5.432475,7.571877,0.325670,-4.607156,7.100336,3.353485,-6.686433,3.551831,-6.295862,-7.202031,0.453355,6.870213,-1.492213,1.681103,-0.298989,3.305490,-8.374132,0.668169,6.264153,-0.561310,-2.350464,-6.095229,-4.546990,-5.654871,0.182113,-1.016057,4.654282,1.741434,0.290539,-9.237296,8.395533,-0.492891,-9.696445,8.566645,7.521797,-1.088976,7.318128,-0.757562,4.230609,8.811537,7.784623,3.725963,9.253540,-8.990526,-4.163227,-0.515443,6.292956,9.564941,6.290520,9.428963,-8.098479,-0.268552,-8.575095,1.606363,5.782640,0.628800,-2.170013,3.361781,1.045227,-5.297253,-3.044888,4.662646,6.040453,-0.542696,5.187252,-1.763522,3.855031,-4.349640,3.255205,8.699325,-0.192860,-9.841367,-6.477031,-9.031943,6.738498,8.672736,5.933480,8.017986,7.114931,8.676654,-9.173091,-9.069018,-0.701317,1.589784,7.028933,-1.173497,2.984438,-6.029685,1.720485,5.997912,-8.616431,-6.128734,7.785646,-5.333067,3.971137,-3.292837,9.442388,-9.255107,2.565396,-0.059285,-6.798552,-9.846346,0.566273,2.223069,5.476751,6.309303,5.516651,5.694864,-3.733609,8.110066,-4.014588,6.320062,3.924010,1.413450,8.351929,0.436337,2.087743,-8.279625,-4.954760,8.220963,-8.844645,7.332630,-8.955475,4.707396,9.746019,0.312015,-2.028860,0.686492,-8.277180,-0.231290,-2.722362,6.799956,1.460822,-4.537134,-7.549025,4.246817,9.083063,-6.411825,9.360265,-0.837974,3.401582,-9.090471,-6.346438,1.308970,5.180780,-3.365790,3.844128,2.077676,1.169466,-2.063507,8.506289,5.135449,4.921415,-7.482195,0.874742,9.261735,-1.435798,-4.189490,5.178492,9.332729,6.420325,8.706089,-6.172215,6.624296,-8.740467,7.753951,6.142907,-2.379938,-8.257219,8.730494,4.282545,-0.297910,6.730275,-3.165924,-0.738512,9.871089,-5.179359,-1.015345,2.865417,-3.170152,-3.719132,6.559407,-0.992295,-5.211565,-4.462594,-0.245859,-0.894882,-8.702228,5.348575,-7.295197,-7.690887,7.840776,-1.700067,6.043753,6.547658,-4.586270,5.848877,7.143306,8.111056,9.144246,-9.066569,-4.903423,-5.682497,-6.051230,8.926653,-8.177702,-8.389906,-2.528164,4.882524,-4.990270,-3.282669,-2.209806,-6.957838,9.065176,8.266338,4.108811,9.547804,-1.127602,-3.036208,1.636977,-5.092861,-9.212764,-5.415374,0.322203,-8.958079,-4.237701,-7.874082,3.757844,3.185808,0.920483,0.613768,-4.388719,-1.508100,-2.732570,3.644504,-7.200810,3.553175,-8.540344,-9.529574,-4.563218,6.681748,9.726662,7.892567,-8.772131,1.651589,-5.538776,-7.829086,5.864467,1.685795,-2.015940,-3.883047,-9.974842,8.397523,8.106364,0.818293,-7.485169,-1.797931,-5.756819,-5.005726,-8.862308,-1.667975,-0.020768,4.014704,8.251910,-5.667489,8.033227,2.925189,-1.216451,-8.033618,-3.602126,7.811438,-0.817488,-1.134414,-9.249832,0.710913,-3.056691,6.062407,7.721705,8.244316,8.936570,-4.132886,-3.913694,2.746069,-7.109444,-7.897293,9.318360,3.707596,2.098401,-1.461132,9.482683,2.244232,-0.844214,-1.652163,3.835508,-9.100592,9.886599,-0.573490,-9.888141,6.680985,3.878346,2.293729,5.058385,0.238201,-2.415129,-2.989126,1.710477,-9.903037,-4.008878,1.964769,-9.435641,0.302470,-2.241934,2.526257,4.129654,0.315364,-5.046109,7.010324,-5.536181,-3.920974,-0.518124,-4.561224,-2.716130,6.750847,8.941081,1.278484,1.744676,-3.988845,-5.139989,-3.725800,-4.943618,-9.044071,1.035483,-9.135465,-7.683198,-7.424860,-8.328655,5.869949,3.458101,9.028969,2.208116,-2.057045,6.827941,2.161939,-2.961813,7.114502,2.428488,1.549421,1.887192,-1.776685,3.046932,5.921254,4.738906,-0.021388,6.499298,-4.580836,-8.536226,0.727503,9.306822,6.233250,2.077697,-4.912036,5.112170,4.954504,0.215679,-0.989483,-7.080841,-6.975878,-2.130953,5.521505,7.420404,0.837327,-9.180260,7.192757,9.177192,-3.791912,-7.187716,7.792227,-7.279838,-5.496298,6.800459,-3.574473,-0.138929,0.460335,-8.886368,1.128475,-8.490942,8.959980,4.456990,-6.013379,-6.850268,4.918722,5.526229,-8.070478,4.034430,-0.364934,7.430846,2.628572,9.945221,0.466810,9.170605,9.412090,5.562108,-5.866357,-8.353704,2.689189,4.271472,2.367730,4.218037,9.655447,-3.538526,8.578371,-7.462317,-3.851239,-8.236245,0.809084,-8.057724,5.705283,-9.107825,-2.243966,6.314237,9.740809,5.362617,7.815905,-4.582491,3.591621,-4.225650,-1.713576,7.462733,8.991150,-5.585537,4.256041,9.205032,-9.431579,9.720288,-1.855642,-9.473638,8.260271,-0.815836,2.329503,2.940578,-3.263821,3.267115,6.990430,6.583782,-0.174756,1.248349,-0.234381,9.535738,-3.203675,5.658671,9.782150,-0.473700,4.517683,1.804112,2.898103,-3.685731,4.068756,0.983621,-9.721988,1.737318,-6.510066,3.873152,0.412737,-7.389407,0.267251,5.952678,0.700179,9.207843,-4.608929,3.453973,-4.673842,1.479919,-1.319700,-8.899303,1.661334], dtype = "float64")#candidate|1316|(924,)|const|float64
call_1315 = relay.TupleGetItem(func_688_call(relay.reshape(const_1316.astype('float64'), [14, 11, 6])), 0)
call_1317 = relay.TupleGetItem(func_691_call(relay.reshape(const_1316.astype('float64'), [14, 11, 6])), 0)
uop_1333 = relay.sqrt(bop_1312.astype('float64')) # shape=(14, 16, 1)
bop_1338 = relay.greater(var_1310.astype('bool'), var_1311.astype('bool')) # shape=(14, 16, 1)
bop_1343 = relay.bitwise_or(var_1311.astype('uint8'), const_1316.astype('uint8')) # shape=(14, 16, 924)
bop_1352 = relay.power(uop_1333.astype('float64'), relay.reshape(bop_1312.astype('float64'), relay.shape_of(uop_1333))) # shape=(14, 16, 1)
uop_1355 = relay.erf(bop_1352.astype('float64')) # shape=(14, 16, 1)
output = relay.Tuple([call_1315,bop_1338,bop_1343,uop_1355,])
output2 = relay.Tuple([call_1317,bop_1338,bop_1343,uop_1355,])
func_1368 = relay.Function([var_1310,var_1311,], output)
mod['func_1368'] = func_1368
mod = relay.transform.InferType()(mod)
var_1369 = relay.var("var_1369", dtype = "int32", shape = ())#candidate|1369|()|var|int32
var_1370 = relay.var("var_1370", dtype = "int32", shape = (14, 16, 1))#candidate|1370|(14, 16, 1)|var|int32
output = func_1368(var_1369,var_1370,)
func_1371 = relay.Function([var_1369,var_1370,], output)
mutated_mod['func_1371'] = func_1371
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2110 = relay.const([[[-1.086692,1.438067,0.078674,1.159479,-7.345416,3.152640,1.114923,-2.983653],[4.127042,-4.136861,8.876675,-5.084057,8.866863,-6.614822,8.669120,3.867604],[6.740203,1.033204,-3.750294,-6.890144,3.917932,8.280471,-2.698664,1.123600],[6.079054,4.327732,6.617081,-1.176793,-0.995949,-7.072305,-9.120681,-6.348537],[-4.700634,-3.737755,-8.668207,5.132187,7.538539,6.903316,9.218427,8.201285],[-1.229309,2.491421,-8.622343,-6.640263,-4.901568,1.171762,-6.709209,2.067555],[1.103667,-1.389142,-0.796617,-8.691479,-9.415890,9.815532,-6.275573,-9.945381],[8.124628,-4.102644,4.658317,8.361681,-5.196138,0.620603,-9.806195,4.181396],[-3.769810,3.979998,-2.901963,-1.793529,7.198533,-1.045498,5.001423,9.152320],[-2.928094,-2.547140,-3.612344,9.893060,-4.192935,-4.176795,6.369865,0.043080],[7.122532,-1.114325,-1.182119,-9.190586,-7.968117,9.772475,8.785397,3.422156],[6.333681,3.979223,3.921359,-1.460464,1.171840,-0.918540,-2.526692,1.311118],[-6.100319,6.105811,-9.042891,2.219839,-8.216843,-1.970856,5.759600,6.759515],[-2.410991,-6.060271,-8.816132,0.212497,2.740974,-1.174844,7.605156,1.621104],[-8.431559,-4.943899,-7.526974,2.973241,9.376467,-6.541773,4.901063,6.720450],[0.617791,2.251455,-8.490129,7.233447,-7.282031,1.842211,2.104507,-0.347783]],[[-9.708553,4.256789,-8.972131,1.750438,-5.821397,-6.397013,-0.023925,2.904896],[5.461819,9.498334,-8.550144,-3.833947,-1.537842,-7.333541,-1.408715,8.703245],[-6.035431,-1.787664,-1.948180,-5.742347,4.333368,-3.951173,-4.148897,5.853720],[1.857683,8.598602,-7.580190,-8.344528,0.824284,-2.159934,2.222077,-6.791888],[-7.208080,-5.884337,4.591518,-8.550339,6.028009,-4.136388,-7.727877,-1.094096],[-7.366192,3.118751,2.291984,4.786809,1.180203,-3.760459,-8.795417,-6.089147],[2.061960,1.277923,0.607685,-7.658499,-0.735707,-4.380976,-8.063083,-2.975501],[-7.974323,8.101677,-9.356012,-9.377381,3.660968,-8.603709,-6.499552,-3.519939],[-2.665590,-8.574472,4.049261,-2.488584,5.042430,0.927502,2.678758,-3.036968],[3.142560,8.198961,-3.435038,1.077748,4.250941,1.494876,-7.101162,0.225732],[5.670118,-6.793857,-8.640685,7.805326,6.189150,-1.296272,-2.722790,-8.275078],[-1.303269,4.429375,-5.802486,-6.467863,3.019972,1.968428,-8.172106,-6.848104],[-2.929982,-7.329471,6.371780,-3.452900,-0.992361,-2.299901,3.304983,3.693425],[-4.305957,-7.979192,6.422373,-5.056592,9.903229,7.805603,7.369891,9.963676],[-8.846055,-9.790520,6.566880,2.706939,6.773256,4.825085,-5.927024,1.196291],[5.992984,3.484660,-9.011940,3.671841,1.009316,3.349936,-7.091572,-6.164783]],[[0.613285,9.194472,2.432187,-3.954639,-4.220392,8.763967,-3.855441,4.252332],[4.105019,4.780072,1.052604,5.123606,5.573355,5.924356,4.423711,-9.030271],[-8.285058,-8.214143,-7.256596,5.248885,-7.667060,-3.521697,1.291391,-2.551822],[-0.072666,-0.731017,4.718509,0.560571,5.149270,-3.855118,-6.694453,7.337694],[-9.619682,2.431835,-3.621242,0.160475,2.872045,-1.382866,-0.204749,6.087104],[-4.334613,-6.577535,2.451273,-6.570272,-9.931074,-0.752384,8.609836,7.337704],[2.999066,7.338044,2.992865,-0.606310,-3.235201,0.900039,5.961741,2.604757],[4.284931,1.074110,9.093859,2.052667,8.902173,7.138538,2.901908,-1.592182],[6.200980,-3.505861,0.532195,8.961181,5.677426,-3.221255,-1.790107,-6.625589],[5.649758,-8.046720,5.879532,-7.086269,6.652436,-0.931824,-3.031520,6.215809],[-7.823385,3.849230,-5.730871,7.718290,0.225584,1.993980,6.365730,7.840559],[7.916430,-8.920498,9.877421,9.580987,-7.424064,0.460997,6.327193,-6.231341],[8.587347,8.277358,-4.851700,7.470311,-7.805639,9.604186,1.775821,-5.630476],[8.120627,6.041013,5.739504,2.985439,-2.542833,-3.038733,-5.797506,6.463693],[-6.603785,3.226695,8.220350,1.982315,4.358999,-4.500216,5.453722,-1.936228],[3.250535,-6.492501,-1.642762,-3.243373,-8.723832,-1.096509,5.949279,-7.587113]],[[-4.863648,-8.413707,3.234105,5.740044,3.394415,1.084765,-4.289378,2.120589],[9.645671,-9.134113,7.513837,2.067009,-0.533383,-4.456425,5.407873,1.472121],[3.730859,-5.357890,1.007966,3.588532,1.472860,-5.812004,-7.713133,6.513580],[9.773380,-4.613236,-1.682182,-5.972899,2.281368,-3.420154,-5.474872,9.245278],[5.224992,-0.108122,8.053850,6.076341,-4.973023,4.686340,7.702766,-0.327976],[-8.583231,-9.661321,-6.726228,8.719235,4.461261,2.312022,-2.509356,0.497370],[-7.869574,-2.935567,-9.498411,-6.254121,7.939754,3.936641,-2.285428,6.273672],[-2.583257,7.393342,7.130672,1.278034,-9.935004,-1.259257,2.663048,-4.962795],[6.605797,2.490099,4.014920,-7.053214,5.625026,8.161783,8.218341,8.617215],[-5.023128,0.510959,0.500706,1.289972,2.445341,-6.961919,9.557812,-9.256971],[-2.713446,-8.298033,4.660537,-1.323292,4.461031,-7.020398,2.613367,-6.482480],[-0.606505,6.015721,-5.514740,3.923990,-5.161571,-1.718064,-6.682786,-8.499986],[7.284136,-3.109293,4.661891,2.130941,4.950429,3.690447,9.418591,-7.195251],[6.025746,-7.166616,-5.897411,2.150027,8.107618,1.973273,-3.524574,-6.871750],[-6.905999,-8.545210,-9.050221,-5.360835,4.376011,-1.586860,-1.096562,-8.406478],[-4.374256,0.725073,-5.169007,2.067241,4.907074,-0.568699,-7.503290,7.070189]],[[7.793193,-2.881791,0.934765,7.929772,-5.342546,-9.898625,6.272116,9.354132],[8.118127,-7.282978,6.630960,7.137807,-8.130302,9.911319,2.120665,-7.252039],[-2.619378,-0.082105,9.444065,6.548383,2.872897,-1.019511,-0.847569,-1.583205],[6.317829,-1.412625,-9.680933,0.512529,2.034771,1.096944,8.203617,9.641246],[-8.898465,0.393561,-4.677414,5.890387,-7.681611,-3.886417,5.696771,-8.743927],[0.558040,-8.347683,8.756387,5.787498,-2.365165,3.259138,-2.798702,8.332243],[-4.413312,-1.864273,9.513431,-4.436232,-1.949657,1.572090,4.286188,-4.996414],[-2.055583,-5.209881,-1.540019,-2.372364,-0.170214,-4.080348,-0.534465,0.584609],[-8.506887,0.569012,5.729544,-3.880306,-4.008656,-9.216881,2.127437,6.586128],[2.111606,1.951334,3.478360,-4.261064,9.991081,-9.583859,-2.589159,-8.993622],[0.255212,2.509445,5.350344,-2.150658,3.767594,1.573341,3.956965,-1.206093],[-6.700980,-3.918846,5.602505,1.793147,3.205025,-1.958278,1.307824,0.875793],[7.295105,-1.087550,-5.607650,-4.400262,6.489055,-0.644210,-1.825115,3.001451],[6.180576,-0.456688,-2.442843,5.578979,4.287821,0.473208,9.824779,-1.251394],[3.467039,2.156514,2.003593,6.665786,-6.031390,-9.837739,-9.054064,0.108915],[1.985083,-2.297629,-1.249686,-7.394706,-9.590148,-1.261091,-8.591394,-7.204575]],[[3.890766,0.491103,1.926846,9.181564,-0.711668,2.162639,6.538075,-6.194270],[-4.745373,-8.809383,5.008925,2.524488,8.977282,2.632583,-6.739575,8.695591],[1.453268,-7.554620,-9.207608,-8.562959,3.423381,8.123410,4.405185,-7.244114],[9.444868,-0.976746,7.927675,-8.733456,9.892131,-6.419237,7.550650,-5.880510],[-7.714775,9.897202,-0.617299,1.157065,4.640754,1.889604,1.173958,0.424866],[-6.565630,9.958046,8.960396,-3.146923,9.022827,-2.139045,6.666630,4.221664],[5.693646,-3.061608,2.844288,-7.042831,-2.950939,0.679552,1.353805,-9.288783],[-5.708267,3.275596,6.954401,-5.078221,-8.281870,4.926890,9.276617,0.404120],[-0.386152,8.262341,6.969896,-8.624608,4.031391,1.852834,-2.177263,-7.406777],[1.035580,-6.058837,-3.377516,7.680245,1.987408,-8.452291,-0.833950,-9.286919],[7.084825,-9.339208,9.270002,-4.014067,-6.222440,3.316536,-4.885421,7.766764],[7.481385,-0.529322,-1.493218,-3.937503,4.806270,0.577729,-8.805412,-2.865836],[1.791822,-9.738822,4.881105,5.683130,7.457317,1.974362,-1.489726,0.623989],[-5.990171,8.542270,-0.246697,9.353369,-1.972972,6.144329,-3.483819,-2.618848],[-8.878312,-5.426782,-6.178039,7.875780,-9.345622,2.653362,2.797633,-0.156952],[-1.361704,-5.873163,5.407923,-9.883870,-6.339685,-2.025293,5.627716,-9.220248]]], dtype = "float32")#candidate|2110|(6, 16, 8)|const|float32
uop_2111 = relay.atanh(const_2110.astype('float32')) # shape=(6, 16, 8)
uop_2116 = relay.rsqrt(uop_2111.astype('float32')) # shape=(6, 16, 8)
output = uop_2116
output2 = uop_2116
func_2140 = relay.Function([], output)
mod['func_2140'] = func_2140
mod = relay.transform.InferType()(mod)
output = func_2140()
func_2141 = relay.Function([], output)
mutated_mod['func_2141'] = func_2141
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2148 = relay.const(True, dtype = "bool")#candidate|2148|()|const|bool
var_2149 = relay.var("var_2149", dtype = "bool", shape = (13, 5, 1))#candidate|2149|(13, 5, 1)|var|bool
bop_2150 = relay.logical_or(const_2148.astype('bool'), var_2149.astype('bool')) # shape=(13, 5, 1)
func_1368_call = mod.get_global_var('func_1368')
func_1371_call = mutated_mod.get_global_var('func_1371')
const_2155 = relay.const([3,10,3,-1,7,-4,-5,2,-5,-2,1,10,-6,-9,-2,-1,-10,-6,-10,-2,1,3,-5,1,3,-9,-1,-10,-3,-1,5,8,4,-8,3,1,-4,-9,7,-10,-5,7,-9,-3,7,-5,-8,6,1,4,4,9,10,-10,7,-9,9,10,-4,8,9,-2,10,-10,-3,-4,-2,8,10,8,6,-2,3,2,-7,9,-8,4,2,-9,-8,4,8,1,10,7,-7,2,3,9,6,7,-2,2,-6,-9,-3,-6,4,9,7,1,-5,5,-7,-7,4,-9,-6,8,-3,8,-1,9,2,-9,-3,4,-3,7,3,5,9,-4,8,-9,-1,8,-3,-7,-6,5,-7,9,-10,-10,-10,10,10,4,-6,-8,2,-8,5,-2,-2,-2,10,8,8,2,-4,9,4,1,-8,6,-5,9,-10,10,-1,-10,4,8,-6,1,-3,-4,-4,9,-4,-4,-1,-8,3,2,8,3,-10,5,-3,7,-5,-3,6,10,6,8,4,-8,-3,1,10,5,-8,7,-5,7,5,-8,3,2,10,9,-7,-3,7,2,-9,-9,-7,8,1,1,-9,-7,-7,-6,-1,4,-1,-8], dtype = "int32")#candidate|2155|(224,)|const|int32
call_2154 = relay.TupleGetItem(func_1368_call(relay.reshape(const_2148.astype('int32'), []), relay.reshape(const_2155.astype('int32'), [14, 16, 1]), ), 3)
call_2156 = relay.TupleGetItem(func_1371_call(relay.reshape(const_2148.astype('int32'), []), relay.reshape(const_2155.astype('int32'), [14, 16, 1]), ), 3)
uop_2163 = relay.tan(var_2149.astype('float32')) # shape=(13, 5, 1)
bop_2166 = relay.less(uop_2163.astype('bool'), relay.reshape(var_2149.astype('bool'), relay.shape_of(uop_2163))) # shape=(13, 5, 1)
output = relay.Tuple([bop_2150,call_2154,const_2155,bop_2166,])
output2 = relay.Tuple([bop_2150,call_2156,const_2155,bop_2166,])
func_2169 = relay.Function([var_2149,], output)
mod['func_2169'] = func_2169
mod = relay.transform.InferType()(mod)
var_2170 = relay.var("var_2170", dtype = "bool", shape = (13, 5, 1))#candidate|2170|(13, 5, 1)|var|bool
output = func_2169(var_2170)
func_2171 = relay.Function([var_2170], output)
mutated_mod['func_2171'] = func_2171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2176 = func_2140_call()
call_2177 = func_2140_call()
output = relay.Tuple([call_2176,])
output2 = relay.Tuple([call_2177,])
func_2188 = relay.Function([], output)
mod['func_2188'] = func_2188
mod = relay.transform.InferType()(mod)
output = func_2188()
func_2189 = relay.Function([], output)
mutated_mod['func_2189'] = func_2189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2190 = func_2140_call()
call_2191 = func_2140_call()
var_2226 = relay.var("var_2226", dtype = "float32", shape = (6, 16, 8))#candidate|2226|(6, 16, 8)|var|float32
bop_2227 = relay.minimum(call_2190.astype('int64'), relay.reshape(var_2226.astype('int64'), relay.shape_of(call_2190))) # shape=(6, 16, 8)
bop_2230 = relay.minimum(call_2191.astype('int64'), relay.reshape(var_2226.astype('int64'), relay.shape_of(call_2191))) # shape=(6, 16, 8)
func_2169_call = mod.get_global_var('func_2169')
func_2171_call = mutated_mod.get_global_var('func_2171')
const_2235 = relay.const([False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False], dtype = "bool")#candidate|2235|(65,)|const|bool
call_2234 = relay.TupleGetItem(func_2169_call(relay.reshape(const_2235.astype('bool'), [13, 5, 1])), 1)
call_2236 = relay.TupleGetItem(func_2171_call(relay.reshape(const_2235.astype('bool'), [13, 5, 1])), 1)
func_2169_call = mod.get_global_var('func_2169')
func_2171_call = mutated_mod.get_global_var('func_2171')
call_2264 = relay.TupleGetItem(func_2169_call(relay.reshape(const_2235.astype('bool'), [13, 5, 1])), 2)
call_2265 = relay.TupleGetItem(func_2171_call(relay.reshape(const_2235.astype('bool'), [13, 5, 1])), 2)
output = relay.Tuple([bop_2227,call_2234,const_2235,call_2264,])
output2 = relay.Tuple([bop_2230,call_2236,const_2235,call_2265,])
func_2266 = relay.Function([var_2226,], output)
mod['func_2266'] = func_2266
mod = relay.transform.InferType()(mod)
mutated_mod['func_2266'] = func_2266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2267 = relay.var("var_2267", dtype = "float32", shape = (6, 16, 8))#candidate|2267|(6, 16, 8)|var|float32
func_2266_call = mutated_mod.get_global_var('func_2266')
call_2268 = func_2266_call(var_2267)
output = call_2268
func_2269 = relay.Function([var_2267], output)
mutated_mod['func_2269'] = func_2269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2277 = func_2140_call()
call_2278 = func_2140_call()
uop_2281 = relay.acosh(call_2277.astype('float64')) # shape=(6, 16, 8)
uop_2283 = relay.acosh(call_2278.astype('float64')) # shape=(6, 16, 8)
func_2169_call = mod.get_global_var('func_2169')
func_2171_call = mutated_mod.get_global_var('func_2171')
const_2285 = relay.const([False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False], dtype = "bool")#candidate|2285|(65,)|const|bool
call_2284 = relay.TupleGetItem(func_2169_call(relay.reshape(const_2285.astype('bool'), [13, 5, 1])), 2)
call_2286 = relay.TupleGetItem(func_2171_call(relay.reshape(const_2285.astype('bool'), [13, 5, 1])), 2)
output = relay.Tuple([uop_2281,call_2284,const_2285,])
output2 = relay.Tuple([uop_2283,call_2286,const_2285,])
func_2289 = relay.Function([], output)
mod['func_2289'] = func_2289
mod = relay.transform.InferType()(mod)
output = func_2289()
func_2290 = relay.Function([], output)
mutated_mod['func_2290'] = func_2290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2296 = func_2140_call()
call_2297 = func_2140_call()
output = call_2296
output2 = call_2297
func_2314 = relay.Function([], output)
mod['func_2314'] = func_2314
mod = relay.transform.InferType()(mod)
mutated_mod['func_2314'] = func_2314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2314_call = mutated_mod.get_global_var('func_2314')
call_2315 = func_2314_call()
output = call_2315
func_2316 = relay.Function([], output)
mutated_mod['func_2316'] = func_2316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2355 = relay.var("var_2355", dtype = "float32", shape = (5, 7, 2))#candidate|2355|(5, 7, 2)|var|float32
var_2356 = relay.var("var_2356", dtype = "float32", shape = (5, 7, 2))#candidate|2356|(5, 7, 2)|var|float32
bop_2357 = relay.subtract(var_2355.astype('float32'), relay.reshape(var_2356.astype('float32'), relay.shape_of(var_2355))) # shape=(5, 7, 2)
bop_2360 = relay.logical_or(var_2355.astype('bool'), relay.reshape(bop_2357.astype('bool'), relay.shape_of(var_2355))) # shape=(5, 7, 2)
output = relay.Tuple([bop_2360,])
output2 = relay.Tuple([bop_2360,])
func_2366 = relay.Function([var_2355,var_2356,], output)
mod['func_2366'] = func_2366
mod = relay.transform.InferType()(mod)
mutated_mod['func_2366'] = func_2366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2366_call = mutated_mod.get_global_var('func_2366')
var_2368 = relay.var("var_2368", dtype = "float32", shape = (5, 7, 2))#candidate|2368|(5, 7, 2)|var|float32
var_2369 = relay.var("var_2369", dtype = "float32", shape = (5, 7, 2))#candidate|2369|(5, 7, 2)|var|float32
call_2367 = func_2366_call(var_2368,var_2369,)
output = call_2367
func_2370 = relay.Function([var_2368,var_2369,], output)
mutated_mod['func_2370'] = func_2370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_2379 = relay.TupleGetItem(func_2289_call(), 0)
call_2380 = relay.TupleGetItem(func_2290_call(), 0)
output = call_2379
output2 = call_2380
func_2383 = relay.Function([], output)
mod['func_2383'] = func_2383
mod = relay.transform.InferType()(mod)
output = func_2383()
func_2384 = relay.Function([], output)
mutated_mod['func_2384'] = func_2384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2391 = func_2140_call()
call_2392 = func_2140_call()
output = relay.Tuple([call_2391,])
output2 = relay.Tuple([call_2392,])
func_2406 = relay.Function([], output)
mod['func_2406'] = func_2406
mod = relay.transform.InferType()(mod)
mutated_mod['func_2406'] = func_2406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2406_call = mutated_mod.get_global_var('func_2406')
call_2407 = func_2406_call()
output = call_2407
func_2408 = relay.Function([], output)
mutated_mod['func_2408'] = func_2408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2188_call = mod.get_global_var('func_2188')
func_2189_call = mutated_mod.get_global_var('func_2189')
call_2422 = relay.TupleGetItem(func_2188_call(), 0)
call_2423 = relay.TupleGetItem(func_2189_call(), 0)
func_571_call = mod.get_global_var('func_571')
func_577_call = mutated_mod.get_global_var('func_577')
const_2432 = relay.const([1.491554,3.707547,4.949623,5.918467,-7.239502,-4.344311,-3.882176,3.785007,8.085871,-9.161573,3.600693,-2.127264,-5.750123,-9.967408,7.583202,-7.756947,-3.631413,9.547095,3.880278,0.023782,-8.322045,-2.758955,-3.097542,-7.923505,6.771546,-4.356398,4.038206,1.081516,-2.396370,8.297872,0.535683,-0.518394,9.113865,-5.237802,-2.624610,-1.785670,3.722890,-9.720546,9.840229,4.428754,4.632727,3.663668,-6.346770,5.020823,-3.735038,6.870046,-8.100271,4.669571,3.381769,-4.380111,-8.958144,-3.253444,3.718365,2.075483,7.311756,2.534468,4.810677,1.955565,3.067283,-5.620442,7.290033,-3.950837,-2.200708,-9.902345,3.821519,9.733648,4.728702,1.783230,-3.533709,8.382642,2.005223,5.960891,0.018145,5.414597,9.677394,-9.289333,0.507800,-6.090853,1.021708,3.624613,-0.864995,-5.892137,-7.718274,-2.460728,-1.108921,7.331076,6.425856,-0.729832,9.070756,5.475501,-9.987949,-1.731934,-0.855165,5.145137,6.483615,-6.935757,7.191456,4.244568,-5.170116,3.655087,-2.257456,2.128386,6.186441,-0.726042,3.821155,4.097823,-1.601840,2.079362,-5.293832,-3.052712,6.558430,0.445875,5.116433,-5.734693,0.992449,-5.050054,-4.345116,0.088251,-2.459825,1.528870,4.496753,5.280254,-1.324399,3.132116,7.905287,-0.023301,-9.659164,3.743750,-3.680697,-7.041951,4.501101,7.429158,-4.254510,7.671560,3.724687,-9.772665,6.170680,-5.411975,-7.699758,2.178360,4.159195,-4.877399,0.610998,6.259927,9.569327,5.523765,-6.211130,1.754531,0.172087,7.108303,4.231903,-8.178576,0.566879,-8.827710,-3.406395,7.335554,5.722091,7.977369,-9.974016,-3.250004,-8.108498,-5.881521,7.447819,4.808426,4.506805,9.969749,-5.804405,1.923577,-8.753360,5.722196,2.692518,-5.602145,-6.935365,-8.087900,-2.696052,0.605857,-1.024312,2.798117,7.621247,8.043292,-5.875812,6.759926,-6.862028,-4.017824,-2.799974,8.525451,7.187236,-6.843645,1.821182,-1.455372,5.921734,5.935774,1.681689,2.560211,3.607283,9.488754,0.501271,6.013781,-8.444702,-4.232193,4.555398,-9.727425,9.377058,7.407528,3.355059,-9.457188,0.637433,4.234802,7.116556,3.387827,5.919580,-8.226190,3.927191,-4.348044,4.224996,-2.662628,-5.170441,6.224541,1.472912,-0.129420,-5.771520,8.475527,-3.089717,0.932722,-3.235024,8.477639,5.343290,-6.324586,0.197282,-7.404697,-5.162693,3.258319,-0.482091,-8.869299,3.611120,-0.115662,-6.589734,1.016957,-8.568398,-8.227898,6.768362,-6.537038,1.096011,6.453465,0.099514,5.211679,-5.711965,-5.294529,-8.959919,-2.270891,-8.247463,2.301789,2.274733,4.033108,9.490628,-5.484567,8.974607,-6.606664,0.604086,5.475547,6.784951,-5.055778,-7.583515,-7.902458,-0.467571,-2.891618,-0.326116,3.301801,7.024001,5.182333,-4.982152,2.661611,4.637357,-6.827861,-9.187285,4.828314,-3.986218,6.519653,4.851112,2.026338,4.181467,-3.534169,-9.775302,0.055490,-8.210097,-0.230570,-3.913388,3.276766,2.578166,-3.148620,5.941997,-0.729182,-4.270191,-2.781435,9.427602,1.156038,-0.597639,-8.045920,7.272306,-0.608358,1.593770,-8.875396,-0.601810,2.615002,0.912691,3.776909,2.992804,-4.554072,-4.364725,9.156856,8.765221,-3.202989,-3.160350,-8.275842,-3.643254,-7.284150,3.987063,4.181980,-8.485148,-2.516641,-4.900229,-6.214670,3.066791,6.666296,-2.292358,6.107870,5.786713,9.409032,6.325642,6.804014,-2.418415,9.178666,-7.051139,8.168790,6.096436,-0.349336,-0.596426,5.368340,-0.474009,2.932577,-1.220966,-8.921487,-5.836764,5.771239,1.408204,3.106383,-0.915555,9.867759,1.360696,6.333243,-6.836335,-7.251695,2.746224,-8.505830,4.508967,-3.055863,6.072049,0.321380,-7.435138,5.196610,-8.286922,9.990837,8.411638,9.939384,0.693698,1.313026,3.596879,-7.284535,2.394660,-9.943688,-6.824142,-4.991200,2.023700,2.374082,5.808375,4.738451,1.429398,-2.356695,3.641841,1.923923,5.993733,0.745610,5.854407,2.119739,-0.185960,2.303229,-4.742241,-1.156775,4.012319,2.940899,-3.996622,-2.917877,9.257265,-9.183820,0.686314,2.696528,-7.972118,0.248125,7.674670,0.661060,-9.529833,-2.049350,-3.597185,-5.373552,2.729575,-5.616869,-1.909573,8.252638,-5.068306,-7.870116,-3.125987,-4.062767,-7.922152,-7.915238,-2.683346,-5.624349,-2.300201,1.681644,3.662469,-3.653121,1.274325,3.098585,-4.392138,3.350440,-3.761359,-9.223624,4.678641,-1.480792,-4.926521,1.540530,-8.803848,0.751888,7.572250,9.526007,-0.217520,9.633488,3.914136,2.739609,8.968360,-5.126239,-3.808419,-9.413351,1.415765,-0.454828,1.232755,-9.464344,9.455287,-0.478725,-5.674585,4.801857,-7.409643,-0.428549,0.031021,1.086682,-4.153955,9.183344,-6.390168,-2.626046,-4.027737,8.722574,8.458826,8.843051,2.841873,7.550017,6.346603,-9.463730,0.886866,4.361698,-2.491795,5.844790,-6.237292,4.629780,4.194869,-2.262609,-9.524070,8.063792,3.942801,-7.927702,5.464318,-0.869585,6.629239,-2.184818,8.737492,8.149386,-9.327574,-6.264905,2.321950,3.352653,-2.555080,-2.173163,3.906411,-6.534579,-0.040484,4.542264,-9.095553,4.723678,-5.634370,-5.855030,0.170217,8.251393,-0.735562,7.958011,6.670586,-5.483876,-1.640336,3.652285,3.268120,3.440996,-9.108201,7.036275,-0.866439,-3.913727,-3.372424,7.329878,2.684836,6.076250,-1.747453,0.390234,6.051097,2.789254,5.487818,3.518982,-5.816381,-0.027649,9.817091,7.329049,-1.232494,-9.082069,-1.969462,2.166226,-1.730404,-8.922796,2.345817,-7.401134,3.092764,-1.098091,-5.261458,4.460955,-3.646203,-3.225369,8.690664,-7.811257,9.490937,-7.579188,-6.499060,2.169991,-2.571211,4.262455,-8.068703,-4.583014,-7.582822,-4.931586,-8.627978,0.409438,8.741822,-2.060188,-3.987457,7.263390,7.520624,9.771966,1.597819,-0.051954,-0.219096,2.324057,-0.286091,5.959623,-0.205023,2.775659,1.688287,-3.562820,-8.329142,-7.103603,2.210600,7.709416,8.395882,-0.839159,4.056056,8.859064,-1.306186,-3.310299,-7.130983,4.410491,8.632419,-4.417760,-6.771812,-6.419640,8.232054,3.158556,-3.206642,-4.632532,1.365956,-8.241659,6.329022,9.738341,-4.517576,-4.109153,5.766720,4.807104,2.323597,3.021019,-4.813178,-7.785117,-7.971898,-9.542223,-7.754744,7.363177,1.618608,3.768570,1.882575,5.942832,-5.328482,-5.603756,0.086845,8.216060,0.916787,-3.275310,-5.786530,-8.988544,-5.561373,9.930871,2.038358,3.296659,-2.126273,4.441366,1.259282,2.144789,5.745416,0.178119,7.361808,5.381225,1.422873,1.852331,-9.838307,8.834479,-0.265614,-3.447638,5.016131,2.676384,-1.898422,5.341999,5.908089,1.724128,-9.174081,9.568499,0.771374,7.608461,2.103432,-9.585329,-7.121587,-0.406665,-9.900998,-7.949539,-4.578695,4.298646,-1.977098,-8.422692,6.104171,-4.422939,-7.044197,-7.612047,-9.340992,9.444121,-3.337311,-9.055254,3.982369,8.579705,7.963055,6.286306,9.312914,-2.780957,9.085674,8.094338,-5.919546,-4.712278,-8.865286,5.999856,-9.337908,-2.331208,-5.635036,1.321551,0.401210,-1.807534,-5.371149,6.557477,-3.469583,-4.288822,-9.520636,2.610422,6.376858,-0.749849,-7.267482,2.115203,-6.276145,2.168106,-2.606386,-2.771198,7.121192,-8.367425,-5.069221,-6.633230,9.260671,-0.012372,-2.740952,-4.457723,6.565091,5.405009,-0.157478,6.851824,-0.176464,-7.698654,3.777450,9.115105,5.592178,9.960448,1.567547,-1.168593,-3.686535,-0.461159,-5.084985,-2.593586,5.316402,4.527466,-0.816174,-3.150800,2.348345,8.527182,7.642459,-1.335395,-1.255397,-8.081718,7.929409,-8.236699,4.959744,-0.530693,-9.763705,-4.221332,6.777175,6.399191,-2.121207,-5.055196,-7.611391,-4.247481,-6.744413,-7.026520,-2.967954,-4.850011,-3.370098,0.746273,-0.908770,0.690124,8.122041,-8.651799,-3.064004,-6.419136,-0.337568,-8.150422,8.967619,-2.670987,0.818314,-8.143974,-7.174235,1.668441,-8.814167,-6.793339,8.378791,3.449024,3.634942,8.405673,0.558074,-5.998204,-7.317650,4.794537,-3.705535,-0.393899,-2.776641,5.556756,8.771567,3.801729,-8.480585,-3.188903,-2.507865,-7.878129,-0.600975,9.625765,3.448567,6.156469,-2.261096,9.707316,-9.347040,1.420886,6.186563,3.584479,2.859984,-0.195851,0.383916,3.505639,-0.174277,8.190844,9.418847,-3.008025,5.696676,7.385836,-3.562212,-0.022842,-2.801380,-5.457565,-1.018496,-9.801196,-2.039512,4.827893,-4.526943,3.069438,-4.491005,0.355638,8.894375,6.908160,7.359404,7.352726,4.626363,-5.449114,6.430418,4.367916,7.466159,6.725746,-8.171542,5.964409,-3.412181,3.266060,7.867648,-4.527305,2.373236,3.269170,-9.967844,-0.829148,-8.607329,3.568660,7.342499,-0.900978,2.492534,1.750381,-2.458185,-9.805708,3.477685,-1.197569,-2.090607,-2.592787,-8.649641,-3.441262,-7.533802,-2.460936,1.838542,-6.007566,1.020256,1.598141,-8.710466,-9.494625,0.146062,0.693587,7.133688,-1.694864,6.494244,2.395124,-1.694622,-3.878853,-4.325880,-5.752042,3.868934,3.095457,4.712143,8.456158,2.032584,-6.159265,-9.850631,8.958363,9.468409,8.387100,-7.068543,-5.072043,-9.529002,4.749384,-7.429253,-4.055082,-4.629524,-7.548706,2.129211,-1.451674,2.004381,1.497929,-7.650874,3.506116,-6.581983,-7.651234,0.888442,-5.356497,-1.055940,4.914842,3.446689,-3.151225,8.864928,9.440391,-0.674484,5.767074,-4.855192,0.715479,4.530810,4.832903,0.078334,9.840259,-4.186996,-1.919398,8.388426,3.423076,0.750170,1.764211,-2.778388,8.053134,-5.037670,9.156272,-3.594056,1.399680,0.063992,7.064090,2.327149,-1.699635,-8.153266,-8.793200,-2.436447,-1.855233,5.037289,-3.008562,-2.413533,-0.070199,-8.561893,-7.709630,-7.478477,-1.886230,-9.590574,-8.294894,-4.863436,1.465242,9.248237,8.427639,-9.606517,3.120421,5.341162,8.103921,-9.071861,-5.904658,5.576064,0.926807,-5.493807,-2.574700,0.376409,-7.608402,1.787921,9.990738,1.096371,-4.934360,-7.467172,7.981038,2.801667,-5.724601,-7.325825,-4.836142,4.577732,1.799678,7.791067,-2.042241,-3.103037,2.297424,-7.990460,-5.860635,8.495168,6.402979,4.192185,8.451521,-2.936184,-1.339020,-5.600127,-9.715401,-6.099952,8.515230,1.795052,-2.348295,5.396788,7.703174,-9.021572,0.160464,-3.057225,-3.590385,-7.325994,-2.320451,5.907237,7.628935,7.739144,9.398751,-7.994448,-2.715016,-6.684015,7.665960,-9.459420,8.192742,0.424138,-6.194553,-8.479191,5.610946,-2.044968,5.500796,-2.247871,2.483660,-0.885316,3.531188,5.626756,0.429789,-2.528415,5.768850,2.295726,-3.970751,-9.776613,3.235648,5.879511,0.863485,-5.448122,9.399549,6.676867,6.520560,3.955781,-4.834017,-4.765544,-7.601458,5.318999,4.113712,-4.776533,1.682437,-7.920864,4.686545,9.218851,2.832932,2.120209,-7.147231,7.304182,0.519534,-1.946039,5.653980,7.935382,6.441450,-1.851301,6.342026,-2.213686,4.219532,4.745636,-5.071837,2.070164,4.072255,-4.157722,9.950623,2.864862,-1.884089,8.271199,-9.113406,4.751437,3.547590,-3.910634,2.384144,9.740378,6.745230,1.810250,9.864789,2.311169,-0.430933,-5.212240,9.133368,-6.656665,3.506803,1.999861,-7.020283,3.354522,-5.519805,-6.557974,2.146237,-3.920339,1.194796,-7.078091,-6.996209,3.048036,-5.213463,6.413500,7.350608,8.118690,8.420476,-3.204460,-8.470576,3.905037,4.747235,-1.429744,0.209487,6.101684,-3.931147,2.510376,0.185739,8.005972,-6.348703,8.607159,-0.087108,-9.614399,3.430569,2.673765,-1.923578,5.922175,2.135052,-1.823260,-7.747988,2.594163,-5.836819,-2.241872,2.574933,0.353157,-0.861954,5.728880,9.917861,-6.816543,-0.591987,-4.580547,-9.585678,-6.701520,0.626133,-1.212278,-4.538388,6.934895,-4.696701,-2.011596,3.394887,6.369030,-9.977581,7.983865,-7.249972,-7.285867,1.133963,9.076480,-4.477734,3.441115,0.055253,-3.783528,6.480089,-6.177832,2.949017,5.670224,-9.388469,-1.525438,1.462199,-5.098366,4.345965,-9.075415,-4.571332,-7.916262,0.450739,-8.362056,4.428838,-5.384611,-8.329204,-6.030298,2.733102,4.206705,-2.913161,-2.244597,9.535388,8.584764,-5.567402,4.240287,1.990531,0.381060,-3.882719,9.412025,-2.050736,-1.833583,-3.526906,-7.689251,7.329142,2.170673,9.408372,7.656954,1.485412,4.642753,5.271073,-1.668303,-0.081566,0.506425,8.398257,-8.570885,6.484977,6.992769,0.248613,8.444490,9.667745,-4.901573,2.112021,2.042255,-9.725381,-0.391098,9.518834,1.657781,-1.083151,-7.152343,8.155131,-0.450254,-5.246452,2.003071,4.332704,-1.908618,3.645644,-2.025896,-7.630820,9.073735,-1.551344,-4.823814,-0.549615,-6.410283,2.924903,4.323792,5.840785,6.730850,9.701479,-7.364615,0.460665,0.315657,5.363836,6.429092,8.249230,8.114328,-2.973694,8.573603,8.100057,-5.195436,8.701504,5.588073,1.337032,-9.458930,3.308225,5.865116,1.762618,-1.406005,-9.160658,-9.711446,-8.402098,-7.446486,-4.014095,-4.958324,5.365944,-1.531844,-3.949738,5.259611,-2.805704,-7.941277,-3.988243,-8.630178,-5.132251,6.183950,9.775427,-1.076087,9.979349], dtype = "float64")#candidate|2432|(1260,)|const|float64
var_2433 = relay.var("var_2433", dtype = "float32", shape = ())#candidate|2433|()|var|float32
var_2434 = relay.var("var_2434", dtype = "float32", shape = (30,))#candidate|2434|(30,)|var|float32
call_2431 = relay.TupleGetItem(func_571_call(relay.reshape(const_2432.astype('float64'), [14, 15, 6]), relay.reshape(var_2433.astype('float32'), []), relay.reshape(var_2434.astype('float32'), [10, 3]), relay.reshape(const_2432.astype('float64'), [14, 15, 6]), ), 5)
call_2435 = relay.TupleGetItem(func_577_call(relay.reshape(const_2432.astype('float64'), [14, 15, 6]), relay.reshape(var_2433.astype('float32'), []), relay.reshape(var_2434.astype('float32'), [10, 3]), relay.reshape(const_2432.astype('float64'), [14, 15, 6]), ), 5)
output = relay.Tuple([call_2422,call_2431,const_2432,var_2433,var_2434,])
output2 = relay.Tuple([call_2423,call_2435,const_2432,var_2433,var_2434,])
func_2436 = relay.Function([var_2433,var_2434,], output)
mod['func_2436'] = func_2436
mod = relay.transform.InferType()(mod)
mutated_mod['func_2436'] = func_2436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2436_call = mutated_mod.get_global_var('func_2436')
var_2438 = relay.var("var_2438", dtype = "float32", shape = ())#candidate|2438|()|var|float32
var_2439 = relay.var("var_2439", dtype = "float32", shape = (30,))#candidate|2439|(30,)|var|float32
call_2437 = func_2436_call(var_2438,var_2439,)
output = call_2437
func_2440 = relay.Function([var_2438,var_2439,], output)
mutated_mod['func_2440'] = func_2440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2523 = relay.var("var_2523", dtype = "uint8", shape = (4, 1, 13))#candidate|2523|(4, 1, 13)|var|uint8
var_2524 = relay.var("var_2524", dtype = "uint8", shape = (4, 8, 13))#candidate|2524|(4, 8, 13)|var|uint8
bop_2525 = relay.right_shift(var_2523.astype('uint8'), var_2524.astype('uint8')) # shape=(4, 8, 13)
bop_2528 = relay.divide(var_2524.astype('float32'), relay.reshape(bop_2525.astype('float32'), relay.shape_of(var_2524))) # shape=(4, 8, 13)
var_2535 = relay.var("var_2535", dtype = "uint8", shape = (4, 15, 13))#candidate|2535|(4, 15, 13)|var|uint8
bop_2536 = relay.right_shift(var_2523.astype('uint8'), var_2535.astype('uint8')) # shape=(4, 15, 13)
uop_2540 = relay.atanh(var_2524.astype('float32')) # shape=(4, 8, 13)
func_398_call = mod.get_global_var('func_398')
func_402_call = mutated_mod.get_global_var('func_402')
const_2550 = relay.const([-6,-6,-4,-3,-5,-3,-1,-9,7,7,5,-10,-9,-5,3,-1], dtype = "int8")#candidate|2550|(16,)|const|int8
call_2549 = relay.TupleGetItem(func_398_call(relay.reshape(const_2550.astype('int8'), [2, 4, 2]), relay.reshape(const_2550.astype('int8'), [2, 4, 2]), ), 0)
call_2551 = relay.TupleGetItem(func_402_call(relay.reshape(const_2550.astype('int8'), [2, 4, 2]), relay.reshape(const_2550.astype('int8'), [2, 4, 2]), ), 0)
func_2188_call = mod.get_global_var('func_2188')
func_2189_call = mutated_mod.get_global_var('func_2189')
call_2552 = relay.TupleGetItem(func_2188_call(), 0)
call_2553 = relay.TupleGetItem(func_2189_call(), 0)
func_688_call = mod.get_global_var('func_688')
func_691_call = mutated_mod.get_global_var('func_691')
var_2560 = relay.var("var_2560", dtype = "float64", shape = (924, 1))#candidate|2560|(924, 1)|var|float64
call_2559 = relay.TupleGetItem(func_688_call(relay.reshape(var_2560.astype('float64'), [14, 11, 6])), 0)
call_2561 = relay.TupleGetItem(func_691_call(relay.reshape(var_2560.astype('float64'), [14, 11, 6])), 0)
output = relay.Tuple([bop_2528,bop_2536,uop_2540,call_2549,const_2550,call_2552,call_2559,var_2560,])
output2 = relay.Tuple([bop_2528,bop_2536,uop_2540,call_2551,const_2550,call_2553,call_2561,var_2560,])
func_2563 = relay.Function([var_2523,var_2524,var_2535,var_2560,], output)
mod['func_2563'] = func_2563
mod = relay.transform.InferType()(mod)
var_2564 = relay.var("var_2564", dtype = "uint8", shape = (4, 1, 13))#candidate|2564|(4, 1, 13)|var|uint8
var_2565 = relay.var("var_2565", dtype = "uint8", shape = (4, 8, 13))#candidate|2565|(4, 8, 13)|var|uint8
var_2566 = relay.var("var_2566", dtype = "uint8", shape = (4, 15, 13))#candidate|2566|(4, 15, 13)|var|uint8
var_2567 = relay.var("var_2567", dtype = "float64", shape = (924, 1))#candidate|2567|(924, 1)|var|float64
output = func_2563(var_2564,var_2565,var_2566,var_2567,)
func_2568 = relay.Function([var_2564,var_2565,var_2566,var_2567,], output)
mutated_mod['func_2568'] = func_2568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2575 = func_2140_call()
call_2576 = func_2140_call()
func_2366_call = mod.get_global_var('func_2366')
func_2370_call = mutated_mod.get_global_var('func_2370')
var_2580 = relay.var("var_2580", dtype = "float32", shape = (70,))#candidate|2580|(70,)|var|float32
call_2579 = relay.TupleGetItem(func_2366_call(relay.reshape(var_2580.astype('float32'), [5, 7, 2]), relay.reshape(var_2580.astype('float32'), [5, 7, 2]), ), 0)
call_2581 = relay.TupleGetItem(func_2370_call(relay.reshape(var_2580.astype('float32'), [5, 7, 2]), relay.reshape(var_2580.astype('float32'), [5, 7, 2]), ), 0)
uop_2582 = relay.sigmoid(call_2575.astype('float32')) # shape=(6, 16, 8)
uop_2584 = relay.sigmoid(call_2576.astype('float32')) # shape=(6, 16, 8)
func_634_call = mod.get_global_var('func_634')
func_636_call = mutated_mod.get_global_var('func_636')
const_2604 = relay.const([8.784680,-6.309932,-7.840402,-9.445880,3.815007,5.779351,-3.759093,5.298134,-8.085774,-7.897220,-4.486809,-8.110216,-8.746816,-2.865315,4.287597,4.244990,5.717229,-2.415564,6.016846,-3.115490,-3.980916,-1.120711,3.114852,1.217517,4.044671,1.067940,0.903086,0.224525,9.041130,0.995211,-7.941659,2.314815,-0.819660,5.861488,-0.636041,5.773488,-4.613142,-8.967007,6.594778,6.499748,7.159757,-7.677078,-8.298475,-6.942946,-7.750020,5.974832,-1.787252,-2.448429,-7.573350,-6.228203,5.940529,9.984376,1.530971,2.302721,-0.132115,-4.982147,8.809010,-4.015205,-6.712656,5.027714,-1.036612,2.827833,1.965591,4.572989,-4.424013,-6.113915,1.125682,1.100673,9.451140,5.795975,7.895942,3.939644,8.555255,9.068205,-9.734304,-2.755930,1.921492,-3.179093,0.244211,-8.841660,2.834601,0.388278,-3.599075,-8.847886,9.507495,2.114731,8.005544,9.941320,-6.814350,-6.565926,5.287395,1.960492,-3.374108,5.813284,-2.017456,4.174068,-1.694163,-2.165746,7.546588,1.915311,2.799279,-4.371343,7.244127,6.580438,-6.533519,2.547684,-6.497718,-6.284559,-1.186656,-2.381456,2.533519,-2.408200,-4.863465,-8.524475,6.221584,-0.386242,9.800496,3.997188,-1.303929,-6.887290,-2.698796,-1.456432,0.721686,-8.296548,-8.520553,-2.420203,-5.734719,2.517969,7.276636,5.398094,9.817217,5.164162,-7.127301,-5.189970,0.399722,9.044932,-4.982365,-2.678130,-1.033465,6.447396,7.127257,-9.295748,-8.801581,-4.213026,8.120453,5.345703,3.553596,3.938696,3.508149,-6.977126,4.216155,8.330218,1.633507,8.966135,-8.434734,-6.308810,-2.289317,6.363534,3.993739,-7.960888,2.437664,1.851913,4.700397,-2.747026,-6.787646,1.784247,-7.744327,9.226972,9.833394,5.031648,0.056209,3.516326,-5.530306,1.323045,4.090948,4.203009,1.709838,0.056581,8.315102,8.840532,7.785472,4.440633,8.855690,0.856288,5.418124,-2.302966,9.027140,-3.530762,4.016535,8.494343,-6.036718,3.143409,1.930490,-2.680029,7.990113,4.117009,-7.290970,-0.877006,5.805742,-9.735298,1.143275,-9.230997,5.320980,-8.451706,-5.297978,3.773337,-2.087248,-3.379727,7.650681,0.679938,-5.574200,9.220125,7.357273,6.423251,-1.285156,-6.511860,-3.563906,-6.096362,7.216469,-8.150349,-9.112440,-5.297818,8.942536,-7.689527,5.167990,3.534045,-6.290148,5.468137,-9.054364,5.803325,-8.168039,-2.254008,-7.884466,-1.636572,-7.750911,8.259557,-1.056771,2.317726,-9.470518,9.065951,6.502643,8.531161,0.120432,-7.277859,3.905944,-9.353797,4.293455,9.102408,2.036005,9.523094,-7.227732,-1.666982,6.832446,-7.031701,-2.002300,6.242151,-9.141469,4.348480,9.889596,-1.605584,6.146397,6.062174,7.615436,-2.284813,-0.608973,-3.771076,-0.841777,-6.402061,8.044714,5.517904,-8.243347,3.520775,-1.859738,-5.734478,-4.325665,-9.719739,-3.351842,-9.081390,-0.706505,-1.560410,9.073967,-8.354541,-6.867201,7.239126,8.843571,7.668687,9.846895,6.549389,4.105781,-0.438981,-2.978207,-9.849754,-8.679799,-8.108281,1.303444,6.436481,-6.077215,2.745477,-4.916109,-6.010736,9.939518,2.092633,-7.368752,-0.090279,2.200278,-1.129207,-6.189774,-5.565880,9.035264,7.974363,5.249274,8.326917,-6.744240,-7.980516,3.297683,7.074623,-0.170121,-2.099968,0.518382,3.854805,3.175423,-9.051552,-3.590398,-0.489184,1.293427,-5.930709,-8.144779,-1.710568,-5.452570,-9.807255,0.226063,5.148263,-4.214940,7.121854,-5.880279,-1.486582,-9.703644,1.536665,2.365828,-7.002785,-5.176069,-6.059777,5.439699,2.939119,6.134602,3.929483,6.370328,3.263365,-2.383609,8.916810,0.189480,-9.009742,-9.784862,-6.994277,4.676922,7.687943,3.288174,6.619037,-5.757000,1.558223,-2.684920,9.130426,9.864605,4.452094,4.242142,-3.336641,3.754858,-4.941765,8.724730,6.014639,8.404919,-8.468022,-0.510535,7.695819,-1.143762,5.941038,-6.119404,9.508426,4.913230,6.468050,9.078642,5.396394,3.745691,6.544536,-1.270723,1.048204,2.359430,-2.359600,4.267987,-3.279175,-8.097040,-4.624492,-2.723437,-2.960389,3.987932,-8.046736,-0.371389,3.417986,1.533766,-9.530666,5.372823,-4.561158,1.228538,2.039252,-9.615220,-8.334950,3.144093,7.038580,-4.088492,5.537202,-9.194894,1.469207,0.879129,-1.429851,8.930585,-6.195505,-8.314237,7.076418,2.650816,6.302338,-0.583412,1.879159,-5.388753,-7.670815,-6.182241,-4.456317,0.148420,1.516203,-6.029258,-8.485393,-6.972134,6.169485,0.020341,-9.748579,5.778627,-0.858128,-3.588104,9.363805,9.548616,6.755271,5.667555,-0.836336,1.314163,7.926318,0.975718,8.903272,-7.635319,-9.843142,0.241936,-9.348977,-7.276206,7.951708,-4.435241,-8.703634,-2.385800,-0.998700,5.039151,-9.403228,-3.337038,9.782561,1.040788,-7.389439,7.720944,2.704632,9.536857,5.062704,0.428462,-9.685938,4.010597,7.671601,4.265191,2.740870,-8.015680,8.455480,9.707246,-7.418613,-0.195259,-4.338153,2.674185,-9.139985,3.118527,7.829029,-3.811452,7.968398,-5.130806,9.366373,-5.609114,-9.569369,0.217160,8.133662,-1.212207,3.385446,-6.829479,-9.231509,-7.841111,2.212710,-4.881601,-8.689506,-5.859487,-1.846377,-9.080485,-5.897321,-6.594994,5.124961,8.659186,-2.043329,-0.316236,-0.561677,9.946538,-8.848617,2.469973,-2.192751,-8.971689,7.583142,-3.080426,6.814351,9.206218,7.457827,2.882034,0.635194,7.280623,-0.249411,-0.925386,5.406716,-7.703177,8.995655,1.147804,7.793095,-5.277153,-0.266787,3.590258,4.992224,-2.027139,-4.717689,7.429346,-2.319552,-0.502579,-1.065256,1.901908,-0.612965,3.080275,4.295257,0.515132,6.004315,5.171213,-8.762371,7.027464,-8.374457,-6.826097,0.280520,-3.430201,6.423844,9.399721,8.554848,0.004700,-5.284211,6.376090,7.796915,-4.300522,-5.514256,-8.829904,-6.390494,-1.068688,1.479364,-7.301815,-5.193854,-4.286673,8.730223,5.974278,-6.379952,-6.919375,-6.486434,2.756931,5.880358,-2.299425,4.624708,-4.308016,-7.203389,-8.557403,-7.517767,3.114497,-1.073807,-0.503351,2.463749,-5.510513,-0.207432,-5.035682,3.762542], dtype = "float64")#candidate|2604|(588,)|const|float64
call_2603 = relay.TupleGetItem(func_634_call(relay.reshape(const_2604.astype('float64'), [7, 12, 7])), 2)
call_2605 = relay.TupleGetItem(func_636_call(relay.reshape(const_2604.astype('float64'), [7, 12, 7])), 2)
output = relay.Tuple([call_2579,var_2580,uop_2582,call_2603,const_2604,])
output2 = relay.Tuple([call_2581,var_2580,uop_2584,call_2605,const_2604,])
func_2611 = relay.Function([var_2580,], output)
mod['func_2611'] = func_2611
mod = relay.transform.InferType()(mod)
mutated_mod['func_2611'] = func_2611
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2612 = relay.var("var_2612", dtype = "float32", shape = (70,))#candidate|2612|(70,)|var|float32
func_2611_call = mutated_mod.get_global_var('func_2611')
call_2613 = func_2611_call(var_2612)
output = call_2613
func_2614 = relay.Function([var_2612], output)
mutated_mod['func_2614'] = func_2614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2627 = func_2140_call()
call_2628 = func_2140_call()
output = relay.Tuple([call_2627,])
output2 = relay.Tuple([call_2628,])
func_2651 = relay.Function([], output)
mod['func_2651'] = func_2651
mod = relay.transform.InferType()(mod)
mutated_mod['func_2651'] = func_2651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2651_call = mutated_mod.get_global_var('func_2651')
call_2652 = func_2651_call()
output = call_2652
func_2653 = relay.Function([], output)
mutated_mod['func_2653'] = func_2653
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2678 = relay.const([[[-5.110971,9.732199,3.341367,2.733233,-3.879359,9.895610],[-2.999008,-7.454353,-3.344508,6.246303,2.511965,-3.078590],[2.388984,0.851036,-0.552374,1.963379,-5.397443,-7.786705],[-3.020011,-8.043877,1.012721,0.198064,0.958178,-1.877159],[9.655787,5.491915,-7.254404,3.006128,-4.107074,9.016057],[-8.914180,-0.215659,2.646286,-7.124167,-3.671421,3.711495],[-3.517066,4.578333,-6.015512,0.891130,6.790351,-4.488766],[-9.038879,-2.628517,-1.305855,-3.208134,-4.021335,6.781114],[4.524319,2.958465,-1.466601,4.347179,-5.510062,-8.103961],[5.678764,-9.214487,-2.482605,-1.884776,2.251031,-8.512706],[-3.759337,-2.578630,2.943432,3.153271,4.129351,-6.571501],[9.684072,-2.455394,-7.015879,-6.141724,-4.849059,-9.486320]]], dtype = "float64")#candidate|2678|(1, 12, 6)|const|float64
var_2679 = relay.var("var_2679", dtype = "float64", shape = (5, 12, 6))#candidate|2679|(5, 12, 6)|var|float64
bop_2680 = relay.floor_mod(const_2678.astype('float64'), var_2679.astype('float64')) # shape=(5, 12, 6)
bop_2685 = relay.divide(var_2679.astype('float64'), const_2678.astype('float64')) # shape=(5, 12, 6)
func_2169_call = mod.get_global_var('func_2169')
func_2171_call = mutated_mod.get_global_var('func_2171')
var_2711 = relay.var("var_2711", dtype = "bool", shape = (13, 5))#candidate|2711|(13, 5)|var|bool
call_2710 = relay.TupleGetItem(func_2169_call(relay.reshape(var_2711.astype('bool'), [13, 5, 1])), 1)
call_2712 = relay.TupleGetItem(func_2171_call(relay.reshape(var_2711.astype('bool'), [13, 5, 1])), 1)
output = relay.Tuple([bop_2680,bop_2685,call_2710,var_2711,])
output2 = relay.Tuple([bop_2680,bop_2685,call_2712,var_2711,])
func_2721 = relay.Function([var_2679,var_2711,], output)
mod['func_2721'] = func_2721
mod = relay.transform.InferType()(mod)
var_2722 = relay.var("var_2722", dtype = "float64", shape = (5, 12, 6))#candidate|2722|(5, 12, 6)|var|float64
var_2723 = relay.var("var_2723", dtype = "bool", shape = (13, 5))#candidate|2723|(13, 5)|var|bool
output = func_2721(var_2722,var_2723,)
func_2724 = relay.Function([var_2722,var_2723,], output)
mutated_mod['func_2724'] = func_2724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2887 = relay.var("var_2887", dtype = "uint64", shape = (14, 13, 2))#candidate|2887|(14, 13, 2)|var|uint64
var_2888 = relay.var("var_2888", dtype = "uint64", shape = (14, 13, 2))#candidate|2888|(14, 13, 2)|var|uint64
bop_2889 = relay.subtract(var_2887.astype('uint64'), relay.reshape(var_2888.astype('uint64'), relay.shape_of(var_2887))) # shape=(14, 13, 2)
var_2893 = relay.var("var_2893", dtype = "uint64", shape = (14, 13, 2))#candidate|2893|(14, 13, 2)|var|uint64
bop_2894 = relay.less_equal(bop_2889.astype('bool'), relay.reshape(var_2893.astype('bool'), relay.shape_of(bop_2889))) # shape=(14, 13, 2)
uop_2925 = relay.acos(bop_2894.astype('float64')) # shape=(14, 13, 2)
output = relay.Tuple([uop_2925,])
output2 = relay.Tuple([uop_2925,])
func_2932 = relay.Function([var_2887,var_2888,var_2893,], output)
mod['func_2932'] = func_2932
mod = relay.transform.InferType()(mod)
var_2933 = relay.var("var_2933", dtype = "uint64", shape = (14, 13, 2))#candidate|2933|(14, 13, 2)|var|uint64
var_2934 = relay.var("var_2934", dtype = "uint64", shape = (14, 13, 2))#candidate|2934|(14, 13, 2)|var|uint64
var_2935 = relay.var("var_2935", dtype = "uint64", shape = (14, 13, 2))#candidate|2935|(14, 13, 2)|var|uint64
output = func_2932(var_2933,var_2934,var_2935,)
func_2936 = relay.Function([var_2933,var_2934,var_2935,], output)
mutated_mod['func_2936'] = func_2936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2651_call = mod.get_global_var('func_2651')
func_2653_call = mutated_mod.get_global_var('func_2653')
call_2956 = relay.TupleGetItem(func_2651_call(), 0)
call_2957 = relay.TupleGetItem(func_2653_call(), 0)
output = relay.Tuple([call_2956,])
output2 = relay.Tuple([call_2957,])
func_2975 = relay.Function([], output)
mod['func_2975'] = func_2975
mod = relay.transform.InferType()(mod)
output = func_2975()
func_2976 = relay.Function([], output)
mutated_mod['func_2976'] = func_2976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2651_call = mod.get_global_var('func_2651')
func_2653_call = mutated_mod.get_global_var('func_2653')
call_2988 = relay.TupleGetItem(func_2651_call(), 0)
call_2989 = relay.TupleGetItem(func_2653_call(), 0)
func_571_call = mod.get_global_var('func_571')
func_577_call = mutated_mod.get_global_var('func_577')
const_2994 = relay.const([8.468307,-4.484121,8.688808,2.072202,-7.373196,-7.843175,-2.126320,2.035980,-2.633589,7.154606,5.886400,-8.634522,7.985513,8.810484,-2.758112,3.807280,6.039176,-1.153329,-4.104701,6.726181,-0.523164,8.424264,7.166868,-1.639218,5.646810,-3.532374,-3.032939,0.646272,3.728413,-4.697345,-1.419144,9.976787,3.485636,-9.580403,8.924486,8.046100,4.834756,-8.499983,8.426183,-9.760505,-5.645133,9.502261,9.747651,-4.336337,-4.332864,-4.407608,0.494784,-5.232209,-5.828764,-0.974203,-4.860003,0.539037,-6.550413,-7.988041,-0.228269,3.454131,-6.266666,6.945854,5.940392,-4.317026,2.952061,-4.808867,-0.229362,1.613730,3.699374,-4.375760,6.824829,7.939504,6.362892,-9.701004,-4.741872,-2.725528,-8.190119,4.795285,-3.066280,6.355926,-8.712602,-5.621835,-3.772128,4.288405,0.385222,9.308585,6.158598,9.551372,6.470726,8.032283,0.816085,-1.329660,0.111482,7.592043,6.052185,4.680565,-8.467251,-9.193350,-4.801101,-8.372330,4.655997,-6.390273,-3.566843,9.943575,5.645334,6.712607,-2.960044,5.061131,4.283169,0.803001,3.072591,2.851614,-7.533740,0.051779,8.264865,6.192775,7.548749,-7.773472,9.816240,4.546521,-0.981833,3.868779,-8.490157,-2.199556,3.367268,-0.689873,8.196964,-0.850269,1.705558,-3.707797,1.592065,1.631591,2.508257,-7.862807,1.691535,-2.284371,-8.505406,6.639966,-9.249067,5.518713,5.192562,-5.776367,6.404393,4.209371,-2.356111,7.609019,2.395154,2.362122,-5.378875,0.340755,1.716293,4.702071,0.746149,9.547153,1.178093,8.689134,-9.606916,3.826338,-6.835455,8.121590,-1.625729,-8.634195,7.858964,-8.919953,5.486131,-6.694415,0.546064,-6.066658,-9.532631,-5.764030,-4.596170,-6.611690,-7.452162,-6.550526,-4.579220,8.189983,5.908014,-8.740834,2.043328,-0.720001,-7.542919,-7.708217,7.754203,-7.349586,-4.293253,6.481905,-6.154690,1.958222,5.937471,6.140934,2.980295,-3.797677,-7.036585,-3.234200,8.356150,-7.845900,0.270090,-9.394743,-6.222311,-0.782314,2.469045,3.172593,4.519694,-8.321446,5.145763,4.913818,1.214709,9.034348,-5.448214,7.015731,-2.416682,-0.948687,-7.607703,-7.674994,6.449800,1.824231,-8.206973,1.735473,-5.904249,-2.787914,5.793130,-2.385075,2.951497,8.318837,7.941910,-4.726118,-4.721038,2.145602,0.426100,1.409899,-9.957213,2.072318,-2.694845,0.059070,2.667928,-6.753406,1.270387,5.163841,-5.054714,-5.793541,4.248258,2.893348,5.799085,6.924283,1.165547,-7.469241,1.641754,-2.457246,-7.955777,-7.098074,-1.505920,-0.796209,-7.089232,-1.558058,-3.184584,-2.776704,3.144460,-9.137618,7.946723,2.182338,-5.169947,-2.887578,-1.877631,7.422555,-6.767417,-0.150414,-1.602840,-1.435037,-6.819786,8.539095,-0.554562,-6.247852,-6.981713,-3.970145,-5.025749,-2.015040,4.287193,0.259317,7.959835,-6.945590,-0.133067,-5.751673,-1.180302,6.858527,-1.327941,2.967830,0.953140,-0.599055,-6.393732,0.029965,9.331950,-7.306324,-0.950831,-5.150377,-3.757637,-5.072421,5.721187,-7.664942,5.873607,-6.473930,-0.867231,-1.232111,1.908363,6.299094,-7.508976,5.347797,-8.569110,-2.918287,3.239672,0.411181,-3.492945,-8.617474,-6.879305,6.032236,9.843492,4.511832,4.539212,8.053495,5.766001,2.334633,9.539012,2.745168,-7.353538,-4.732565,-8.556959,4.820903,7.543068,-1.879273,-0.039536,-5.150184,0.598516,-5.596311,6.496950,1.334673,-4.992314,-5.133010,7.460925,-3.923625,-2.814836,3.734182,-2.423440,1.611034,8.394229,3.732416,9.373513,9.114265,-1.535459,1.134518,5.949349,-3.795378,3.259325,3.727553,-9.406441,-7.790880,-9.710686,0.739668,1.463879,9.854224,-5.771126,-3.543773,-4.864445,-5.945387,5.675345,-1.534842,-2.669694,5.411482,-9.996924,0.826636,-3.683097,6.567372,1.890535,6.864551,8.201606,6.473333,0.977409,7.691838,7.618108,-2.938135,2.811154,1.554795,9.283858,-9.072225,1.233449,-8.601165,5.225325,0.794816,-0.927140,7.608894,9.146273,0.658991,0.527416,-8.562502,-7.258321,3.740824,8.063287,-0.835277,1.619054,-5.473747,-4.356349,-0.196273,-3.363686,-9.374196,-2.211488,-4.565384,7.844672,9.057467,-0.139756,5.192032,-8.595038,6.646890,-4.956219,3.739688,-2.435585,-7.205975,-6.418902,-8.608638,-6.670700,-7.553890,2.030834,-4.283989,-7.899808,5.692813,1.818423,-9.211247,7.246002,-4.500029,9.852654,-7.390099,1.618447,-4.621813,2.669339,6.451742,5.820179,7.071910,-0.667339,4.703176,8.324816,-8.173084,-2.185958,-8.983352,-8.470340,4.586493,-4.462392,6.161564,-1.259238,-8.294571,-6.764081,-6.343086,6.086901,-3.910490,8.472066,-1.697051,-5.309011,-9.047584,3.769387,9.234379,2.368933,5.402991,-0.187938,4.033709,-0.589652,-1.817019,5.441928,4.837128,-1.470728,7.195051,5.659552,-4.003155,-0.819114,-3.313010,-4.410876,5.374536,-7.344395,7.466240,9.782846,-9.668793,-3.337782,-8.831076,7.866215,-9.198834,-4.886656,9.397452,-9.758463,0.068407,-4.545560,-4.286228,0.517754,-2.763979,3.071531,-6.103295,0.811175,-1.324382,-6.416508,7.456303,-7.788085,7.961741,8.925453,7.551758,5.946821,-5.506461,-8.036078,-1.195295,-7.264237,-2.441205,-6.583949,-5.017131,9.106855,-2.138923,-1.273319,7.536625,3.414516,6.979399,3.977706,-1.159769,6.748520,1.073448,-9.111061,-8.891269,-5.617196,-6.116540,6.804794,-3.453256,3.024476,-0.246762,1.582526,5.599274,2.236575,4.795624,8.229216,6.115956,2.468697,-2.776676,-7.820106,-8.609544,3.557596,1.514299,-1.051450,7.515856,-1.845553,0.877035,3.843785,4.816442,3.622963,-3.813174,-9.647328,0.738407,-9.409309,0.396124,-0.698281,1.840362,-6.453851,2.273459,9.719454,8.985718,-3.800327,0.392747,5.095903,-8.614101,5.760572,1.495438,-3.870005,9.605775,-7.159352,6.076956,3.935225,5.008444,-1.440957,-1.930207,7.279727,0.001893,-4.384166,-0.643358,0.794896,-2.361469,4.503581,3.306313,-8.764208,-8.777889,9.596184,-2.953194,-7.386362,8.916301,-1.193390,-4.017172,3.408823,5.911208,-4.121241,2.190042,0.235926,1.774041,2.356886,-1.433331,4.938011,-2.244807,8.586098,8.867272,-9.187739,-2.418009,-7.071229,8.230446,-6.488197,5.914071,-5.829348,9.464403,-5.677173,-8.258518,3.000158,-5.658551,4.091351,1.143202,6.757377,-6.782777,9.988208,-9.023567,-7.119991,6.543671,-4.937795,8.107078,7.508140,-9.922767,5.097854,6.230202,-0.382769,-0.898757,8.798525,-2.628863,-0.150868,-7.952842,9.983283,-7.092980,-9.507739,-3.617903,-0.904634,2.708466,-2.249637,-9.479851,-9.508023,-5.088266,4.613296,-5.395536,8.528467,3.005720,-1.071371,7.454196,-3.566429,8.731538,-2.684121,3.444124,4.694985,-0.653857,9.648293,-3.897541,3.902351,-4.591287,0.915204,5.173478,4.717907,-8.327752,-9.965452,7.384303,5.407247,-6.486970,-5.540069,7.770258,-3.807684,-2.014535,-8.172413,-2.429643,3.354112,-0.741797,6.967644,3.266858,-2.922220,-0.661834,-7.097251,3.267329,-0.208867,9.820382,7.048253,6.508694,-6.869943,5.430629,-0.359906,-5.297455,-0.211620,-2.542782,-6.210775,-9.330948,3.598896,-6.179207,-2.853816,-1.123498,9.576925,-6.826738,-2.661067,-9.283070,8.100706,4.947288,0.572168,4.457568,-9.483983,-6.922749,-9.232416,5.486989,8.301804,9.789344,2.830051,7.299154,4.328950,9.622202,6.993266,-3.212991,-8.087123,-3.316015,-2.564682,2.876002,2.561665,2.619248,0.818004,5.387162,-7.271842,-6.825828,-2.361956,-4.356420,8.477122,2.467698,-1.687534,9.342871,9.206860,-4.282678,-1.690022,-0.513170,8.939639,8.498262,-6.749184,-8.179983,8.189610,-3.069663,-7.166883,1.046736,6.962771,-4.686761,-2.404811,-7.124951,5.092231,0.068046,-2.347977,2.037136,-3.629564,-4.214352,4.685330,1.409298,-3.282665,1.940142,4.077603,-4.968696,5.040989,-3.424241,8.053145,-7.690648,0.861694,-9.941409,1.893492,-6.309184,-8.543342,9.174542,3.565748,-5.327952,-4.766924,-8.627716,-7.399854,-4.926548,3.130062,9.200510,7.794134,1.548723,-5.150837,4.277531,0.889654,0.681486,-7.637372,5.934510,8.444846,8.392937,3.093780,7.850270,9.811704,-0.282332,-6.969087,8.834540,9.959057,4.441456,-8.034490,2.302781,-0.320022,9.333484,8.480120,-5.414914,-2.244418,8.221858,7.284664,8.383447,-7.615985,3.245394,0.188345,6.288786,8.301628,-2.312903,1.899167,3.761790,-5.746481,-0.404751,6.637941,5.203214,4.034980,-1.062595,8.538382,6.917422,1.650114,3.821978,8.519660,1.588438,0.087187,-3.995840,8.901997,-6.091340,-4.425508,-0.433341,3.950320,7.865081,-0.761220,3.236007,4.285341,5.813343,7.688668,3.373968,9.686912,3.560389,3.581692,2.584658,2.312466,-3.646656,0.149577,5.237372,-9.447878,9.789714,-4.417730,1.621671,3.591470,-5.078313,1.905957,1.613250,-5.711009,2.047080,-8.399316,9.831311,-4.288571,3.220865,-3.635837,-3.019395,1.933850,3.865692,-1.176162,7.212835,2.599417,-0.146459,8.052804,-4.207052,-7.151925,4.923314,-6.787391,-0.910677,0.775577,-3.548638,-6.921049,-1.611074,-3.445938,-1.130140,-9.128191,-3.663872,4.827119,-1.220121,-2.609021,8.118115,-0.564730,0.716091,4.609279,4.432394,0.959253,-7.274064,-5.316606,1.157262,-9.562474,2.951206,9.413582,-5.737599,-4.555259,-5.085209,9.949324,3.756962,-0.490922,8.587628,-5.396322,-2.646518,-7.235512,-9.964580,-5.619712,-2.057415,4.844004,1.089423,4.853043,2.433107,6.419437,6.991423,1.251044,-3.990229,4.671939,5.017032,9.591629,-1.467947,-2.487708,-7.652119,-7.000955,7.178202,3.668330,7.853772,3.947768,-3.051888,-0.545744,7.925131,6.936886,8.743344,5.052817,-3.128556,2.134952,4.095687,5.727343,-3.712611,-4.120449,5.924107,-9.266426,-5.135881,-9.127981,-2.701232,-6.121620,-0.168859,-1.044450,5.498676,4.440801,-3.090049,-4.127781,-7.652407,8.311367,3.516179,3.477122,2.470580,5.660337,0.528389,9.178095,-6.899074,8.990139,8.966913,4.238800,-1.268715,-0.171930,9.778027,-7.865080,9.784289,-6.958467,4.959513,9.670925,5.257268,-1.069881,-0.093955,6.003106,-7.388199,-7.194235,-3.732287,-8.216863,-5.905691,1.959793,7.354769,6.785676,1.890583,9.644475,2.425614,-6.572440,-8.616536,0.132832,-4.776898,1.976156,-1.872448,-3.461959,0.061287,2.264027,9.046307,9.052678,-6.933541,7.048926,-9.915339,-0.888648,-2.523920,5.571904,9.165343,2.839981,3.322744,-6.867690,-3.069075,-8.779399,2.282816,1.541408,-0.688181,9.693934,-2.213348,-8.599325,-2.224259,-9.968549,0.483318,6.428970,4.396390,-4.866259,4.573210,-8.749463,7.123857,-9.880115,-2.932206,-5.963278,-2.152640,2.474505,-4.512173,-4.257376,-8.268319,3.956787,-6.233707,-0.467098,-0.073733,-6.439208,-8.286052,7.051628,2.541799,-9.212035,-6.672540,-4.965428,7.486339,2.609335,3.042778,-5.750251,-0.315031,-9.562966,-1.634010,-4.015464,5.418228,-9.651672,6.673530,-4.969710,8.375664,-6.460923,4.940508,3.728060,-4.865137,-0.423313,-9.057817,6.136018,6.095358,9.686813,3.150482,-5.858979,-6.028274,-7.398903,-0.211626,-3.476648,6.078644,0.680194,7.522920,7.502629,3.130308,3.609570,-8.735336,7.289284,-9.702066,9.308875,-9.174724,6.374475,7.571546,7.101894,-7.642269,3.015999,-9.176792,-2.888090,7.613891,-3.805430,7.159494,-6.921559,-6.324457,0.087163,-6.388354,-9.261673,-5.937034,6.957197,6.427518,-0.867218,-7.672192,-2.555577,-1.015158,-4.569339,-3.012922,5.698481,5.334988,-8.972083,4.878773,-0.541368,-5.129159,-1.992955,-5.678594,-3.488560,-4.113451,4.666400,7.032527,-6.460392,-3.786575,2.973767,9.953845,6.305932,0.649696,-9.569420,1.902491,-2.208235,-8.414569,7.424765,0.536482,-1.182017,-4.137078,-3.835367,7.976632,9.398202,-7.400904,9.608325,3.319221,-1.301103,-1.609346,3.768735,2.026533,7.208775,0.816766,8.468030,6.640852,-5.484056,5.673098,8.947784,5.069619,7.738872,7.962539,7.507135,8.606971,9.749849,9.183280,2.897611,2.978156,-6.496360,5.247813,1.312674,4.032540,-8.791021,-1.226120,-0.038417,0.190796,5.964842,-9.449432,1.189631,-9.476420,9.098881,-2.704366,6.160827,6.377325,-3.559688,0.171133,3.363211,0.773701,7.161111,9.516071,-6.393697,4.435751,-2.421227,-2.805922,6.457508,-4.215393,-6.889302,-8.596618,-1.383774,0.575261,-3.944615,-0.592410,-7.477028,-0.576344,-4.602328,7.729983,-4.397828,-4.160756,-9.454382,-6.111157,-3.587196,-5.593200,6.791393,-3.076804,-1.166405,-9.194535,-9.636637,1.592558,9.601675,-5.682658,5.087402,-1.804134,7.722350,-5.409647,8.633742,9.087442,-5.858552,8.055742,-1.578299,1.841114,3.772985,-6.138174,0.594291,-6.758610,1.276115,-3.091466,-6.912153,-9.445522,8.994870,3.894113,8.097996,-6.236663,-9.539389,-0.851780,4.164274,-7.662042,0.425750,-4.904185,-7.045977,5.376985,-4.356630,-3.646431,-7.433332,-1.482071,-1.252747,2.358078,-0.524063,1.452501,8.211168,-6.416242,1.348775,6.136007,7.707308,1.613339,8.724139,5.542569,-6.993577,-0.933429,-9.800789,5.852594,5.153826,-4.017814,-6.662151,-3.669021], dtype = "float64")#candidate|2994|(1260,)|const|float64
const_2995 = relay.const(4.446541, dtype = "float32")#candidate|2995|()|const|float32
const_2996 = relay.const([[-0.388376],[-0.415937],[6.959839],[-5.450262],[-0.213320],[-9.849848],[8.055473],[-2.121060],[-3.702444],[2.633175],[-9.784715],[6.599991],[1.082379],[-8.795490],[1.061062],[-8.649684],[-1.563288],[6.480683],[7.597577],[-5.985786],[-2.707629],[8.090254],[-0.144590],[0.434731],[6.992150],[5.952630],[-2.721312],[3.599950],[-7.894973],[7.298966]], dtype = "float32")#candidate|2996|(30, 1)|const|float32
call_2993 = relay.TupleGetItem(func_571_call(relay.reshape(const_2994.astype('float64'), [14, 15, 6]), relay.reshape(const_2995.astype('float32'), []), relay.reshape(const_2996.astype('float32'), [10, 3]), relay.reshape(const_2994.astype('float64'), [14, 15, 6]), ), 7)
call_2997 = relay.TupleGetItem(func_577_call(relay.reshape(const_2994.astype('float64'), [14, 15, 6]), relay.reshape(const_2995.astype('float32'), []), relay.reshape(const_2996.astype('float32'), [10, 3]), relay.reshape(const_2994.astype('float64'), [14, 15, 6]), ), 7)
output = relay.Tuple([call_2988,call_2993,const_2994,const_2995,const_2996,])
output2 = relay.Tuple([call_2989,call_2997,const_2994,const_2995,const_2996,])
func_3011 = relay.Function([], output)
mod['func_3011'] = func_3011
mod = relay.transform.InferType()(mod)
mutated_mod['func_3011'] = func_3011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3011_call = mutated_mod.get_global_var('func_3011')
call_3012 = func_3011_call()
output = call_3012
func_3013 = relay.Function([], output)
mutated_mod['func_3013'] = func_3013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_3089 = relay.TupleGetItem(func_2289_call(), 1)
call_3090 = relay.TupleGetItem(func_2290_call(), 1)
output = call_3089
output2 = call_3090
func_3123 = relay.Function([], output)
mod['func_3123'] = func_3123
mod = relay.transform.InferType()(mod)
output = func_3123()
func_3124 = relay.Function([], output)
mutated_mod['func_3124'] = func_3124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2383_call = mod.get_global_var('func_2383')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_3128 = func_2383_call()
call_3129 = func_2383_call()
output = call_3128
output2 = call_3129
func_3133 = relay.Function([], output)
mod['func_3133'] = func_3133
mod = relay.transform.InferType()(mod)
output = func_3133()
func_3134 = relay.Function([], output)
mutated_mod['func_3134'] = func_3134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3212 = relay.var("var_3212", dtype = "float64", shape = (13, 15, 8))#candidate|3212|(13, 15, 8)|var|float64
var_3213 = relay.var("var_3213", dtype = "float64", shape = (13, 15, 8))#candidate|3213|(13, 15, 8)|var|float64
bop_3214 = relay.power(var_3212.astype('float64'), relay.reshape(var_3213.astype('float64'), relay.shape_of(var_3212))) # shape=(13, 15, 8)
output = relay.Tuple([bop_3214,])
output2 = relay.Tuple([bop_3214,])
func_3224 = relay.Function([var_3212,var_3213,], output)
mod['func_3224'] = func_3224
mod = relay.transform.InferType()(mod)
mutated_mod['func_3224'] = func_3224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3224_call = mutated_mod.get_global_var('func_3224')
var_3226 = relay.var("var_3226", dtype = "float64", shape = (13, 15, 8))#candidate|3226|(13, 15, 8)|var|float64
var_3227 = relay.var("var_3227", dtype = "float64", shape = (13, 15, 8))#candidate|3227|(13, 15, 8)|var|float64
call_3225 = func_3224_call(var_3226,var_3227,)
output = call_3225
func_3228 = relay.Function([var_3226,var_3227,], output)
mutated_mod['func_3228'] = func_3228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_3235 = relay.TupleGetItem(func_2975_call(), 0)
call_3236 = relay.TupleGetItem(func_2976_call(), 0)
output = call_3235
output2 = call_3236
func_3274 = relay.Function([], output)
mod['func_3274'] = func_3274
mod = relay.transform.InferType()(mod)
output = func_3274()
func_3275 = relay.Function([], output)
mutated_mod['func_3275'] = func_3275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_3288 = relay.TupleGetItem(func_2289_call(), 2)
call_3289 = relay.TupleGetItem(func_2290_call(), 2)
uop_3291 = relay.sqrt(call_3288.astype('float64')) # shape=(65,)
uop_3293 = relay.sqrt(call_3289.astype('float64')) # shape=(65,)
const_3296 = relay.const([-0.663891,-3.437596,1.938760,2.387191,-3.138026,2.874888,1.948605,6.210335,9.461282,4.932795,9.174564,-8.356670,-1.522411,-9.185144,-6.761319,4.639916,6.121745,-8.303768,5.924400,0.897233,-5.265904,-9.123418,2.105611,-8.647004,-6.005825,-6.017488,4.489296,-0.710173,9.971337,-3.586621,-9.115196,6.805033,2.096527,-2.921670,3.989424,-5.410693,3.303806,5.743945,-9.660447,0.847957,9.168807,-9.622795,-6.510181,-4.856587,-1.398724,-4.389127,-7.071187,-4.996554,7.320141,-0.523898,-2.420594,-0.367888,-2.519370,5.533009,7.032408,8.157929,-3.608937,6.152727,-7.511356,-5.873894,-7.769098,1.945037,-7.150200,5.257240,-2.763678], dtype = "float64")#candidate|3296|(65,)|const|float64
bop_3297 = relay.floor_divide(uop_3291.astype('float32'), relay.reshape(const_3296.astype('float32'), relay.shape_of(uop_3291))) # shape=(65,)
bop_3300 = relay.floor_divide(uop_3293.astype('float32'), relay.reshape(const_3296.astype('float32'), relay.shape_of(uop_3293))) # shape=(65,)
output = relay.Tuple([bop_3297,])
output2 = relay.Tuple([bop_3300,])
func_3301 = relay.Function([], output)
mod['func_3301'] = func_3301
mod = relay.transform.InferType()(mod)
output = func_3301()
func_3302 = relay.Function([], output)
mutated_mod['func_3302'] = func_3302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_3327 = func_2140_call()
call_3328 = func_2140_call()
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_3330 = func_2140_call()
call_3331 = func_2140_call()
output = relay.Tuple([call_3327,call_3330,])
output2 = relay.Tuple([call_3328,call_3331,])
func_3348 = relay.Function([], output)
mod['func_3348'] = func_3348
mod = relay.transform.InferType()(mod)
mutated_mod['func_3348'] = func_3348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3348_call = mutated_mod.get_global_var('func_3348')
call_3349 = func_3348_call()
output = call_3349
func_3350 = relay.Function([], output)
mutated_mod['func_3350'] = func_3350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_3351 = func_2140_call()
call_3352 = func_2140_call()
output = call_3351
output2 = call_3352
func_3353 = relay.Function([], output)
mod['func_3353'] = func_3353
mod = relay.transform.InferType()(mod)
mutated_mod['func_3353'] = func_3353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3353_call = mutated_mod.get_global_var('func_3353')
call_3354 = func_3353_call()
output = call_3354
func_3355 = relay.Function([], output)
mutated_mod['func_3355'] = func_3355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3133_call = mod.get_global_var('func_3133')
func_3134_call = mutated_mod.get_global_var('func_3134')
call_3375 = func_3133_call()
call_3376 = func_3133_call()
output = relay.Tuple([call_3375,])
output2 = relay.Tuple([call_3376,])
func_3396 = relay.Function([], output)
mod['func_3396'] = func_3396
mod = relay.transform.InferType()(mod)
mutated_mod['func_3396'] = func_3396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3396_call = mutated_mod.get_global_var('func_3396')
call_3397 = func_3396_call()
output = call_3397
func_3398 = relay.Function([], output)
mutated_mod['func_3398'] = func_3398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_3415 = func_2140_call()
call_3416 = func_2140_call()
output = relay.Tuple([call_3415,])
output2 = relay.Tuple([call_3416,])
func_3426 = relay.Function([], output)
mod['func_3426'] = func_3426
mod = relay.transform.InferType()(mod)
mutated_mod['func_3426'] = func_3426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3426_call = mutated_mod.get_global_var('func_3426')
call_3427 = func_3426_call()
output = call_3427
func_3428 = relay.Function([], output)
mutated_mod['func_3428'] = func_3428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2383_call = mod.get_global_var('func_2383')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_3429 = func_2383_call()
call_3430 = func_2383_call()
output = relay.Tuple([call_3429,])
output2 = relay.Tuple([call_3430,])
func_3437 = relay.Function([], output)
mod['func_3437'] = func_3437
mod = relay.transform.InferType()(mod)
mutated_mod['func_3437'] = func_3437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3437_call = mutated_mod.get_global_var('func_3437')
call_3438 = func_3437_call()
output = call_3438
func_3439 = relay.Function([], output)
mutated_mod['func_3439'] = func_3439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3133_call = mod.get_global_var('func_3133')
func_3134_call = mutated_mod.get_global_var('func_3134')
call_3479 = func_3133_call()
call_3480 = func_3133_call()
uop_3481 = relay.cosh(call_3479.astype('float32')) # shape=(6, 16, 8)
uop_3483 = relay.cosh(call_3480.astype('float32')) # shape=(6, 16, 8)
output = relay.Tuple([uop_3481,])
output2 = relay.Tuple([uop_3483,])
func_3487 = relay.Function([], output)
mod['func_3487'] = func_3487
mod = relay.transform.InferType()(mod)
output = func_3487()
func_3488 = relay.Function([], output)
mutated_mod['func_3488'] = func_3488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3353_call = mod.get_global_var('func_3353')
func_3355_call = mutated_mod.get_global_var('func_3355')
call_3500 = func_3353_call()
call_3501 = func_3353_call()
output = call_3500
output2 = call_3501
func_3505 = relay.Function([], output)
mod['func_3505'] = func_3505
mod = relay.transform.InferType()(mod)
mutated_mod['func_3505'] = func_3505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3505_call = mutated_mod.get_global_var('func_3505')
call_3506 = func_3505_call()
output = call_3506
func_3507 = relay.Function([], output)
mutated_mod['func_3507'] = func_3507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2651_call = mod.get_global_var('func_2651')
func_2653_call = mutated_mod.get_global_var('func_2653')
call_3508 = relay.TupleGetItem(func_2651_call(), 0)
call_3509 = relay.TupleGetItem(func_2653_call(), 0)
output = relay.Tuple([call_3508,])
output2 = relay.Tuple([call_3509,])
func_3516 = relay.Function([], output)
mod['func_3516'] = func_3516
mod = relay.transform.InferType()(mod)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3516_call = mutated_mod.get_global_var('func_3516')
call_3517 = func_3516_call()
output = call_3517
func_3518 = relay.Function([], output)
mutated_mod['func_3518'] = func_3518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2188_call = mod.get_global_var('func_2188')
func_2189_call = mutated_mod.get_global_var('func_2189')
call_3524 = relay.TupleGetItem(func_2188_call(), 0)
call_3525 = relay.TupleGetItem(func_2189_call(), 0)
func_3133_call = mod.get_global_var('func_3133')
func_3134_call = mutated_mod.get_global_var('func_3134')
call_3532 = func_3133_call()
call_3533 = func_3133_call()
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_3534 = func_2140_call()
call_3535 = func_2140_call()
uop_3548 = relay.log2(call_3532.astype('float64')) # shape=(6, 16, 8)
uop_3550 = relay.log2(call_3533.astype('float64')) # shape=(6, 16, 8)
output = relay.Tuple([call_3524,call_3534,uop_3548,])
output2 = relay.Tuple([call_3525,call_3535,uop_3550,])
func_3556 = relay.Function([], output)
mod['func_3556'] = func_3556
mod = relay.transform.InferType()(mod)
mutated_mod['func_3556'] = func_3556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3556_call = mutated_mod.get_global_var('func_3556')
call_3557 = func_3556_call()
output = call_3557
func_3558 = relay.Function([], output)
mutated_mod['func_3558'] = func_3558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_3806 = func_3274_call()
call_3807 = func_3274_call()
output = relay.Tuple([call_3806,])
output2 = relay.Tuple([call_3807,])
func_3811 = relay.Function([], output)
mod['func_3811'] = func_3811
mod = relay.transform.InferType()(mod)
mutated_mod['func_3811'] = func_3811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3811_call = mutated_mod.get_global_var('func_3811')
call_3812 = func_3811_call()
output = call_3812
func_3813 = relay.Function([], output)
mutated_mod['func_3813'] = func_3813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3811_call = mod.get_global_var('func_3811')
func_3813_call = mutated_mod.get_global_var('func_3813')
call_3820 = relay.TupleGetItem(func_3811_call(), 0)
call_3821 = relay.TupleGetItem(func_3813_call(), 0)
output = call_3820
output2 = call_3821
func_3832 = relay.Function([], output)
mod['func_3832'] = func_3832
mod = relay.transform.InferType()(mod)
output = func_3832()
func_3833 = relay.Function([], output)
mutated_mod['func_3833'] = func_3833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3834 = relay.var("var_3834", dtype = "uint64", shape = ())#candidate|3834|()|var|uint64
var_3835 = relay.var("var_3835", dtype = "uint64", shape = (1, 7, 1))#candidate|3835|(1, 7, 1)|var|uint64
bop_3836 = relay.greater_equal(var_3834.astype('bool'), var_3835.astype('bool')) # shape=(1, 7, 1)
output = bop_3836
output2 = bop_3836
func_3840 = relay.Function([var_3834,var_3835,], output)
mod['func_3840'] = func_3840
mod = relay.transform.InferType()(mod)
var_3841 = relay.var("var_3841", dtype = "uint64", shape = ())#candidate|3841|()|var|uint64
var_3842 = relay.var("var_3842", dtype = "uint64", shape = (1, 7, 1))#candidate|3842|(1, 7, 1)|var|uint64
output = func_3840(var_3841,var_3842,)
func_3843 = relay.Function([var_3841,var_3842,], output)
mutated_mod['func_3843'] = func_3843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3437_call = mod.get_global_var('func_3437')
func_3439_call = mutated_mod.get_global_var('func_3439')
call_3858 = relay.TupleGetItem(func_3437_call(), 0)
call_3859 = relay.TupleGetItem(func_3439_call(), 0)
output = call_3858
output2 = call_3859
func_3873 = relay.Function([], output)
mod['func_3873'] = func_3873
mod = relay.transform.InferType()(mod)
output = func_3873()
func_3874 = relay.Function([], output)
mutated_mod['func_3874'] = func_3874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3011_call = mod.get_global_var('func_3011')
func_3013_call = mutated_mod.get_global_var('func_3013')
call_3877 = relay.TupleGetItem(func_3011_call(), 1)
call_3878 = relay.TupleGetItem(func_3013_call(), 1)
output = relay.Tuple([call_3877,])
output2 = relay.Tuple([call_3878,])
func_3898 = relay.Function([], output)
mod['func_3898'] = func_3898
mod = relay.transform.InferType()(mod)
mutated_mod['func_3898'] = func_3898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3898_call = mutated_mod.get_global_var('func_3898')
call_3899 = func_3898_call()
output = call_3899
func_3900 = relay.Function([], output)
mutated_mod['func_3900'] = func_3900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3426_call = mod.get_global_var('func_3426')
func_3428_call = mutated_mod.get_global_var('func_3428')
call_3948 = relay.TupleGetItem(func_3426_call(), 0)
call_3949 = relay.TupleGetItem(func_3428_call(), 0)
func_3873_call = mod.get_global_var('func_3873')
func_3874_call = mutated_mod.get_global_var('func_3874')
call_3950 = func_3873_call()
call_3951 = func_3873_call()
func_733_call = mod.get_global_var('func_733')
func_736_call = mutated_mod.get_global_var('func_736')
var_3955 = relay.var("var_3955", dtype = "float64", shape = (72,))#candidate|3955|(72,)|var|float64
const_3956 = relay.const([[-5,-8],[8,8],[3,-4],[1,-1],[5,-2],[8,7],[1,-2],[1,1]], dtype = "int8")#candidate|3956|(8, 2)|const|int8
call_3954 = relay.TupleGetItem(func_733_call(relay.reshape(var_3955.astype('float64'), [2, 12, 3]), relay.reshape(const_3956.astype('int8'), [16,]), ), 3)
call_3957 = relay.TupleGetItem(func_736_call(relay.reshape(var_3955.astype('float64'), [2, 12, 3]), relay.reshape(const_3956.astype('int8'), [16,]), ), 3)
output = relay.Tuple([call_3948,call_3950,call_3954,var_3955,const_3956,])
output2 = relay.Tuple([call_3949,call_3951,call_3957,var_3955,const_3956,])
func_3962 = relay.Function([var_3955,], output)
mod['func_3962'] = func_3962
mod = relay.transform.InferType()(mod)
var_3963 = relay.var("var_3963", dtype = "float64", shape = (72,))#candidate|3963|(72,)|var|float64
output = func_3962(var_3963)
func_3964 = relay.Function([var_3963], output)
mutated_mod['func_3964'] = func_3964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_3982 = func_3274_call()
call_3983 = func_3274_call()
output = call_3982
output2 = call_3983
func_3991 = relay.Function([], output)
mod['func_3991'] = func_3991
mod = relay.transform.InferType()(mod)
output = func_3991()
func_3992 = relay.Function([], output)
mutated_mod['func_3992'] = func_3992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3426_call = mod.get_global_var('func_3426')
func_3428_call = mutated_mod.get_global_var('func_3428')
call_4002 = relay.TupleGetItem(func_3426_call(), 0)
call_4003 = relay.TupleGetItem(func_3428_call(), 0)
output = relay.Tuple([call_4002,])
output2 = relay.Tuple([call_4003,])
func_4004 = relay.Function([], output)
mod['func_4004'] = func_4004
mod = relay.transform.InferType()(mod)
mutated_mod['func_4004'] = func_4004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4004_call = mutated_mod.get_global_var('func_4004')
call_4005 = func_4004_call()
output = call_4005
func_4006 = relay.Function([], output)
mutated_mod['func_4006'] = func_4006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3011_call = mod.get_global_var('func_3011')
func_3013_call = mutated_mod.get_global_var('func_3013')
call_4013 = relay.TupleGetItem(func_3011_call(), 4)
call_4014 = relay.TupleGetItem(func_3013_call(), 4)
func_3133_call = mod.get_global_var('func_3133')
func_3134_call = mutated_mod.get_global_var('func_3134')
call_4015 = func_3133_call()
call_4016 = func_3133_call()
func_3011_call = mod.get_global_var('func_3011')
func_3013_call = mutated_mod.get_global_var('func_3013')
call_4043 = relay.TupleGetItem(func_3011_call(), 4)
call_4044 = relay.TupleGetItem(func_3013_call(), 4)
bop_4046 = relay.divide(call_4013.astype('float64'), relay.reshape(call_4043.astype('float64'), relay.shape_of(call_4013))) # shape=(30, 1)
bop_4049 = relay.divide(call_4014.astype('float64'), relay.reshape(call_4044.astype('float64'), relay.shape_of(call_4014))) # shape=(30, 1)
func_2314_call = mod.get_global_var('func_2314')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_4051 = func_2314_call()
call_4052 = func_2314_call()
func_3301_call = mod.get_global_var('func_3301')
func_3302_call = mutated_mod.get_global_var('func_3302')
call_4056 = relay.TupleGetItem(func_3301_call(), 0)
call_4057 = relay.TupleGetItem(func_3302_call(), 0)
func_3832_call = mod.get_global_var('func_3832')
func_3833_call = mutated_mod.get_global_var('func_3833')
call_4061 = func_3832_call()
call_4062 = func_3832_call()
func_571_call = mod.get_global_var('func_571')
func_577_call = mutated_mod.get_global_var('func_577')
var_4069 = relay.var("var_4069", dtype = "float64", shape = (18, 70))#candidate|4069|(18, 70)|var|float64
const_4070 = relay.const(-3.344668, dtype = "float32")#candidate|4070|()|const|float32
call_4068 = relay.TupleGetItem(func_571_call(relay.reshape(var_4069.astype('float64'), [14, 15, 6]), relay.reshape(const_4070.astype('float32'), []), relay.reshape(bop_4046.astype('float32'), [10, 3]), relay.reshape(var_4069.astype('float64'), [14, 15, 6]), ), 2)
call_4071 = relay.TupleGetItem(func_577_call(relay.reshape(var_4069.astype('float64'), [14, 15, 6]), relay.reshape(const_4070.astype('float32'), []), relay.reshape(bop_4046.astype('float32'), [10, 3]), relay.reshape(var_4069.astype('float64'), [14, 15, 6]), ), 2)
output = relay.Tuple([call_4015,bop_4046,call_4051,call_4056,call_4061,call_4068,var_4069,const_4070,])
output2 = relay.Tuple([call_4016,bop_4049,call_4052,call_4057,call_4062,call_4071,var_4069,const_4070,])
func_4080 = relay.Function([var_4069,], output)
mod['func_4080'] = func_4080
mod = relay.transform.InferType()(mod)
mutated_mod['func_4080'] = func_4080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4081 = relay.var("var_4081", dtype = "float64", shape = (18, 70))#candidate|4081|(18, 70)|var|float64
func_4080_call = mutated_mod.get_global_var('func_4080')
call_4082 = func_4080_call(var_4081)
output = call_4082
func_4083 = relay.Function([var_4081], output)
mutated_mod['func_4083'] = func_4083
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4104 = relay.var("var_4104", dtype = "uint16", shape = (4, 14, 1))#candidate|4104|(4, 14, 1)|var|uint16
var_4105 = relay.var("var_4105", dtype = "uint16", shape = (4, 14, 9))#candidate|4105|(4, 14, 9)|var|uint16
bop_4106 = relay.multiply(var_4104.astype('uint16'), var_4105.astype('uint16')) # shape=(4, 14, 9)
uop_4109 = relay.erf(var_4105.astype('float32')) # shape=(4, 14, 9)
output = relay.Tuple([bop_4106,uop_4109,])
output2 = relay.Tuple([bop_4106,uop_4109,])
func_4111 = relay.Function([var_4104,var_4105,], output)
mod['func_4111'] = func_4111
mod = relay.transform.InferType()(mod)
var_4112 = relay.var("var_4112", dtype = "uint16", shape = (4, 14, 1))#candidate|4112|(4, 14, 1)|var|uint16
var_4113 = relay.var("var_4113", dtype = "uint16", shape = (4, 14, 9))#candidate|4113|(4, 14, 9)|var|uint16
output = func_4111(var_4112,var_4113,)
func_4114 = relay.Function([var_4112,var_4113,], output)
mutated_mod['func_4114'] = func_4114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4128 = relay.var("var_4128", dtype = "float32", shape = (7, 1, 6))#candidate|4128|(7, 1, 6)|var|float32
uop_4129 = relay.exp(var_4128.astype('float32')) # shape=(7, 1, 6)
var_4138 = relay.var("var_4138", dtype = "float32", shape = (7, 11, 6))#candidate|4138|(7, 11, 6)|var|float32
bop_4139 = relay.bitwise_and(uop_4129.astype('int16'), var_4138.astype('int16')) # shape=(7, 11, 6)
uop_4144 = relay.asinh(bop_4139.astype('float64')) # shape=(7, 11, 6)
output = relay.Tuple([uop_4144,])
output2 = relay.Tuple([uop_4144,])
func_4150 = relay.Function([var_4128,var_4138,], output)
mod['func_4150'] = func_4150
mod = relay.transform.InferType()(mod)
mutated_mod['func_4150'] = func_4150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4150_call = mutated_mod.get_global_var('func_4150')
var_4152 = relay.var("var_4152", dtype = "float32", shape = (7, 1, 6))#candidate|4152|(7, 1, 6)|var|float32
var_4153 = relay.var("var_4153", dtype = "float32", shape = (7, 11, 6))#candidate|4153|(7, 11, 6)|var|float32
call_4151 = func_4150_call(var_4152,var_4153,)
output = call_4151
func_4154 = relay.Function([var_4152,var_4153,], output)
mutated_mod['func_4154'] = func_4154
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4156 = relay.var("var_4156", dtype = "float64", shape = (8, 11, 13))#candidate|4156|(8, 11, 13)|var|float64
const_4157 = relay.const([[[0.652322,9.849688,6.467033,-9.421743,5.799933,-9.123827,-5.330433,1.689103,7.612672,-0.780963,8.356772,-7.834652,-8.159096],[-9.714785,7.970589,-0.321736,-8.651064,1.727718,-6.935067,5.226345,8.079707,9.706671,4.510746,2.594794,1.744476,-1.590220],[-0.825542,-1.044231,6.141252,7.907593,-3.277487,2.242135,6.660101,2.868548,-9.305153,4.830960,-3.097709,4.565718,3.446014],[-1.816234,-1.870417,-6.764247,1.673153,-5.352928,0.946677,4.961429,5.329872,-4.352992,9.497341,-0.518656,0.595046,2.794260],[-2.325208,3.047500,8.679867,8.176424,2.986989,8.994427,-6.628039,5.399568,3.013076,9.184750,1.918905,3.488252,6.661227],[-8.793416,-7.324854,-5.723196,-9.039092,-0.948457,9.808982,-9.189855,1.544149,0.128619,1.018720,-2.731628,-2.317051,7.625266],[5.336455,-4.940001,-0.555675,8.571777,6.882120,3.612089,-2.666728,3.334206,5.723616,-0.002651,8.458491,-1.727455,-9.639805],[3.474557,5.205349,-2.801834,-2.299253,9.777719,6.595428,6.576525,4.484742,-1.436975,-0.986107,8.561742,4.773317,5.945860],[-7.343440,0.279204,-5.264954,3.823405,2.651275,-2.145950,-2.992995,-9.784740,6.761953,-2.513438,5.852405,-9.009420,5.524207],[7.963130,9.799191,0.618989,6.290143,-0.698331,-5.943636,1.945945,1.191140,1.216999,7.377287,9.474670,9.524107,6.544476],[-3.151999,-1.900669,-7.374067,9.502558,-4.644787,9.968303,6.831085,0.713671,7.015773,-8.523830,1.935610,-7.060963,4.842669]],[[6.975176,-6.106165,7.602198,-4.052356,-1.205500,-2.837709,-4.586303,-6.147074,-9.711325,2.299506,8.976693,-4.421670,4.344764],[8.226638,-3.573608,6.632996,8.844890,2.378075,-2.419860,0.622012,-5.036509,-0.556396,-5.247296,-6.681723,1.476628,6.471552],[-7.631626,-6.791680,4.184294,2.894763,-6.015273,8.282883,-2.927200,9.964886,-3.388876,6.931371,-4.893203,7.087083,3.462437],[0.977945,2.696051,0.260760,-2.603105,8.388665,-9.295113,4.851378,2.229239,-1.116023,2.672049,-0.300702,-4.300215,-9.981692],[-8.201513,-6.785347,7.996126,-1.637760,-7.159693,-8.255297,2.691693,-8.803722,6.464279,-2.428252,-1.827250,-8.967025,-8.654227],[6.113419,5.035021,4.631815,6.630631,7.046390,3.431967,0.975206,6.802297,-4.340156,8.760750,-5.391172,9.664102,3.019433],[-9.436949,7.586358,-3.722296,5.938396,0.331346,3.704995,-3.591102,7.914011,-9.279839,1.752998,8.724022,-5.106422,-7.510664],[6.360021,-4.954482,8.005545,-2.140596,1.728891,7.083212,-9.454875,-5.179777,4.575329,-7.999875,-8.443202,7.490976,3.347823],[-9.849007,2.385825,-5.696889,-0.004224,1.042986,3.766586,-5.874268,4.547638,-2.482252,-7.955693,9.490409,9.403233,2.753724],[7.634224,-4.754967,2.338285,-0.005033,0.437989,0.677917,7.173237,-9.760501,-7.801306,-2.562891,-7.586853,-0.478930,0.450459],[6.035086,4.222999,-9.099328,4.663049,2.537661,3.932057,-9.364882,1.089635,-0.501894,-5.373470,6.080796,-2.447346,-2.187660]],[[-8.522041,2.600743,2.247029,9.661129,8.338325,2.828989,-5.676542,2.603140,-4.369719,-5.232177,6.208959,3.918109,3.181675],[1.799662,-1.961684,7.764191,-9.739855,-2.959465,8.902175,-9.029699,1.458791,0.152868,4.427891,-9.817374,-0.368796,5.671227],[1.250947,-0.960474,6.879198,-9.960602,4.493796,8.284895,2.377524,5.870504,4.582910,0.572422,4.847470,-9.370256,-1.121915],[1.822477,1.545916,-9.797282,7.345140,-5.693170,-9.777766,-6.476309,-6.186627,0.231387,8.137667,-5.952905,2.735702,0.372822],[-8.816940,0.410926,-5.595188,-5.573144,1.669290,8.011709,8.933216,4.601605,-4.484871,6.078075,4.430971,-2.843601,-3.151381],[3.579848,6.433523,-4.813666,-6.288353,-4.951410,-2.925744,7.858963,0.289814,-1.840246,-3.030345,0.567857,2.620035,4.815625],[7.903237,3.159985,-5.722572,4.010124,-0.467089,6.724077,8.099372,4.809706,-8.736661,7.272770,9.469277,-0.171685,-8.004990],[8.371706,2.907589,-3.234977,-9.604912,-7.535299,2.242966,-0.968020,2.380814,-8.092109,7.354593,1.633854,-9.110349,-5.761792],[-5.138657,0.866099,-1.146560,7.462559,8.639735,-3.901587,4.110899,-7.777219,7.388845,-9.313883,3.347386,7.244239,3.588251],[-9.123198,-0.861962,4.723438,-0.265723,5.364620,8.534330,-0.986443,-0.174954,8.556014,3.576437,-2.979533,-0.210807,8.581534],[-0.103476,5.862245,1.478327,9.888223,-2.454647,6.287730,-6.144521,3.521794,0.950920,-1.378647,-7.994443,0.656259,-5.618918]],[[-7.006064,9.479876,-1.239866,9.463638,2.405404,2.116187,-7.887549,3.329076,-6.809659,-4.063307,-0.011977,8.063505,0.339443],[-2.043964,4.874610,3.312454,9.417951,-9.823986,-8.736399,4.213343,-0.249617,-1.450053,-4.885439,-3.276912,0.981770,-5.392068],[-2.078470,5.421348,-8.868468,5.988282,-8.949685,3.162232,5.723642,2.613112,7.646816,8.962695,5.196888,-2.853859,3.356579],[1.612446,8.185431,-8.823533,9.482831,-9.453987,4.408542,-7.411920,-5.295021,-5.337824,7.747065,3.557391,-9.917905,-1.291231],[-1.416122,-0.534836,-7.980450,7.968308,0.680345,1.854763,1.687877,-3.507131,6.870317,-8.750443,5.372430,1.776947,-7.950030],[1.526155,6.100853,-5.241042,3.366378,-7.276890,-5.522484,5.200922,1.175185,1.940868,-8.083498,-6.232068,-8.642015,2.062719],[8.623965,-8.348283,3.076511,-0.317548,9.096325,1.493373,1.692651,-8.649936,9.386543,-3.355852,0.690269,0.764699,2.259630],[6.342393,-1.511898,9.791179,-6.957242,4.960312,-1.763053,-4.199498,-7.096486,-8.121050,5.791179,-2.359391,-8.735010,-3.341146],[-4.268063,-7.131596,3.700061,2.333988,-5.897443,1.816796,-9.736488,6.547129,-6.211801,-3.371544,9.449821,8.873363,-6.292351],[5.934671,-0.042212,-6.218004,5.534983,-6.961657,-0.076751,-7.727424,9.520421,9.076526,-5.307609,-9.642045,5.161409,9.296174],[7.331719,2.090726,-1.671520,-0.589690,-2.450490,3.519609,0.830633,-1.387149,0.769583,9.081142,-5.122147,-0.222626,0.971659]],[[-8.440039,-3.447906,0.899824,-1.569270,1.511100,7.654341,2.371158,-7.835245,3.370282,-6.985493,1.883256,-2.290921,-8.940566],[-3.022506,0.863166,0.166833,-5.455774,5.570690,6.980105,-0.617174,4.845458,7.807961,-6.360629,1.078045,8.135918,6.982094],[-8.115220,5.351865,7.029051,4.719721,2.108543,-2.638092,-6.147773,9.659153,7.518059,-3.424713,2.570223,3.931781,5.321292],[0.252920,-5.226781,-7.545104,-5.915930,-5.561097,7.225689,-4.201765,-7.071022,-8.570463,4.726780,3.450702,9.536400,1.218316],[1.409307,-1.449883,8.906816,9.533182,3.385160,-5.314699,-4.495532,6.217824,3.156679,-3.140483,-1.740454,-1.321280,1.428407],[-2.494006,-7.759964,2.775358,-8.534929,-7.440557,-0.694937,5.407230,4.016852,4.837303,-6.444156,4.196247,4.611370,-2.606886],[-9.798054,9.566503,-1.116093,4.274523,1.632560,-4.723793,-3.697565,7.091946,-2.234827,-6.984496,7.787068,3.438774,-9.578776],[2.773430,4.492466,5.569937,-9.545266,0.595149,-3.883527,6.157022,4.754257,4.933222,2.108152,-3.302214,-2.585783,9.439535],[3.177551,0.123455,-3.889476,3.357060,-4.839316,8.625363,7.239928,4.392885,7.088625,4.136511,-7.956303,0.774026,9.129332],[-9.676731,-8.991203,9.102736,-3.958316,-4.595635,5.881224,-6.901660,-6.304491,6.347365,-0.915613,-1.582939,2.724894,9.734660],[-6.994583,9.409169,-8.363602,7.572697,-7.062556,-0.730478,-0.841439,3.680617,-8.279600,8.505646,6.838271,-4.027781,-2.649317]],[[-5.771374,-4.239495,6.979228,-2.827750,0.482484,-2.444914,7.467314,5.966895,-1.536959,-1.203766,-6.211046,5.910211,-6.319382],[-9.308753,4.912504,4.850458,-6.280238,8.497552,-5.935354,9.552826,-5.609064,5.961558,-5.171271,-0.095649,-0.614379,-6.613251],[7.408062,-3.804960,-1.387415,4.782692,4.271122,4.212132,-6.027075,-5.374824,-3.838309,-8.362683,6.494833,5.435683,3.781619],[-7.385711,-0.207474,-9.456540,4.371841,8.183007,3.197533,9.045510,3.646129,-0.650998,9.191924,0.510574,-3.803650,-3.464368],[1.365809,1.053064,5.774193,-9.099641,-4.252418,-1.599286,5.685422,-9.561147,-5.888733,-7.858307,-2.934561,9.213311,7.025378],[-9.500071,4.657056,7.480390,-3.649771,7.046994,0.825853,8.376919,-7.031979,0.981492,-2.048966,-1.015865,0.461800,-2.088163],[0.296351,6.998694,-5.620507,0.794040,-2.137193,-8.205926,4.372842,5.355781,1.645953,6.863740,-5.017305,-4.278513,-9.162111],[0.685163,5.975702,2.460605,0.834498,8.783551,-5.038341,5.482747,8.495594,4.924670,4.498843,7.132472,-3.283333,-9.909126],[3.261746,2.236915,4.093474,5.053963,-3.411719,-9.856013,2.442296,-5.516099,-5.702939,2.993429,2.039005,-5.836442,9.902876],[-4.772858,-6.863782,-0.181591,4.191099,3.620645,-6.391533,8.926131,-0.646387,-8.992028,0.092052,2.312610,6.291458,8.430558],[-5.776300,2.661343,-6.044035,7.191397,1.124208,-2.155283,0.886635,5.059409,1.623658,-2.218436,-5.678828,1.627431,4.753014]],[[9.618552,1.456071,-6.479761,1.203278,6.990109,9.274137,-5.824177,-1.886462,4.174792,2.951025,2.002284,4.540210,-8.201355],[1.441913,2.094943,-3.236815,0.205030,5.901603,1.418580,6.273788,-1.213980,7.621508,3.267195,-8.383328,0.940404,-0.404197],[-8.539717,2.876166,1.212948,-8.442799,7.120771,-1.174926,9.947186,-1.767766,-8.526880,6.705358,-3.696489,0.371169,5.823886],[-1.864283,3.830312,7.004105,-8.349027,-7.403266,5.232849,-4.671384,-9.248250,6.078461,4.178554,-1.312926,-8.091635,-7.327555],[1.308402,-9.984533,4.407966,0.015595,3.715717,-2.068686,8.987455,-6.729555,-7.348720,-2.403870,3.840690,-1.362280,3.899733],[-8.604656,-8.167627,9.791632,-8.618549,-9.463538,-2.110408,1.280142,5.652663,-3.783190,-0.549584,4.942729,3.947110,5.984176],[-2.201970,4.914074,7.922123,7.049111,7.920654,9.013655,-0.515725,0.563933,7.766508,4.507370,6.537223,-3.010453,-1.409157],[-5.867393,4.106101,-2.565581,7.476995,2.670197,4.083664,-7.326361,5.482469,-3.934030,-2.246687,1.702370,-6.077108,-4.969449],[-7.747948,-2.615711,-4.331021,-8.452783,-2.075668,0.936643,3.906280,-8.608401,0.509642,4.682313,-9.362551,2.937405,4.026037],[7.378705,9.657381,8.566503,-5.428784,-2.189085,-9.404284,-6.238996,8.379489,-3.270732,-0.564358,7.236544,-5.825066,1.187753],[-1.820886,6.237618,8.654188,-3.011827,-6.686459,-6.319989,9.807997,6.216288,9.883787,-1.070124,-1.870549,6.017984,-4.866970]],[[-5.068303,1.536643,6.742029,-8.284841,-9.448709,6.132983,-3.194398,-4.078656,-0.568871,1.938121,-0.624019,9.257668,6.299203],[5.687721,1.195966,9.465827,-9.511963,1.193071,2.118890,-2.510749,3.511114,-0.098133,9.577877,-6.656525,-0.182686,-0.370009],[-5.213654,8.126424,4.473314,2.084329,-0.350639,-7.329681,4.974316,4.704582,-8.934901,-3.372367,7.619259,6.615704,-0.360322],[3.217555,-6.874588,0.143684,7.884320,-6.800448,3.604275,3.698565,5.934679,9.071363,1.618588,0.752849,-0.244076,7.765923],[-5.898687,7.377530,-6.837095,1.798200,-8.242258,-3.421921,6.583669,-5.902379,-4.655194,5.281352,7.434670,-4.625351,0.088492],[-5.492869,-4.669061,2.251498,4.092219,0.393701,9.260015,-6.367500,8.810146,-6.380003,7.853170,5.053077,-0.522345,5.881745],[0.485333,2.296809,8.086875,9.796730,9.896225,-1.568868,0.293328,3.539159,-2.930481,-0.368417,-0.815963,7.623402,4.032699],[3.422505,6.429574,0.669666,-9.309231,4.013748,3.905574,9.665778,2.977871,1.134572,5.965600,-6.840055,-3.871537,3.735681],[8.991392,-7.448526,-1.866695,-3.917235,8.749141,-9.966341,-7.928782,5.870068,-6.014451,0.960877,0.892585,-7.031115,2.522844],[-1.031051,9.470917,-2.883698,-8.454031,0.671840,-8.094786,-8.947600,-2.945879,4.038413,-1.680593,-0.662557,-7.736891,3.351011],[-4.482592,-3.451678,-7.621389,3.597365,3.803941,-2.127410,-6.369272,-2.965107,0.900459,-4.899212,0.065294,4.717296,3.779033]]], dtype = "float64")#candidate|4157|(8, 11, 13)|const|float64
bop_4158 = relay.minimum(var_4156.astype('float64'), relay.reshape(const_4157.astype('float64'), relay.shape_of(var_4156))) # shape=(8, 11, 13)
uop_4162 = relay.exp(const_4157.astype('float32')) # shape=(8, 11, 13)
bop_4164 = relay.mod(uop_4162.astype('float32'), relay.reshape(var_4156.astype('float32'), relay.shape_of(uop_4162))) # shape=(8, 11, 13)
bop_4168 = relay.maximum(uop_4162.astype('int16'), relay.reshape(var_4156.astype('int16'), relay.shape_of(uop_4162))) # shape=(8, 11, 13)
output = relay.Tuple([bop_4158,bop_4164,bop_4168,])
output2 = relay.Tuple([bop_4158,bop_4164,bop_4168,])
func_4186 = relay.Function([var_4156,], output)
mod['func_4186'] = func_4186
mod = relay.transform.InferType()(mod)
mutated_mod['func_4186'] = func_4186
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4187 = relay.var("var_4187", dtype = "float64", shape = (8, 11, 13))#candidate|4187|(8, 11, 13)|var|float64
func_4186_call = mutated_mod.get_global_var('func_4186')
call_4188 = func_4186_call(var_4187)
output = call_4188
func_4189 = relay.Function([var_4187], output)
mutated_mod['func_4189'] = func_4189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3437_call = mod.get_global_var('func_3437')
func_3439_call = mutated_mod.get_global_var('func_3439')
call_4226 = relay.TupleGetItem(func_3437_call(), 0)
call_4227 = relay.TupleGetItem(func_3439_call(), 0)
const_4230 = relay.const([[[-6.740716,8.639338,8.474767,3.569628,1.638229,-6.876067,2.574273,3.503043],[-7.946394,0.888586,6.544543,-1.575178,-2.974547,3.451912,4.183547,-7.513696],[7.384261,-8.376529,-3.687745,-5.627658,8.524304,-5.210875,2.079479,4.516215],[8.179490,-4.480897,-3.590939,8.388320,8.157407,-4.542442,3.958069,-6.980559],[3.937917,-1.661413,-0.795641,8.202083,6.938055,-9.521052,5.484870,-5.228764],[-9.616924,-2.604839,9.997399,-5.277000,-7.235557,6.539715,2.261730,-1.698635],[-1.741961,6.003600,7.754667,4.026793,-6.706261,-5.255087,0.853005,-0.729751],[2.010689,-9.142763,-2.794255,4.335992,9.403073,-9.143581,-0.178501,4.224101],[8.510859,9.151025,-1.166627,8.533962,-7.835419,-5.122548,-9.827962,-9.678610],[3.314542,-5.875053,0.709632,-4.918822,-6.224579,4.557463,1.522075,-3.411561],[8.992110,-0.141329,-6.577500,-7.917353,9.523720,-6.943445,1.644651,3.705955],[6.869638,-4.287781,-8.668169,7.632391,-3.189331,4.337909,-7.132413,-1.715553],[-4.786513,4.731040,4.514514,5.072121,-4.010462,-3.719589,-2.181979,3.689772],[-1.886043,-3.891977,-9.734042,4.034481,5.097664,0.153371,-1.558036,1.624427],[-2.972535,5.352318,6.490542,-2.449834,-6.748317,7.390720,-7.982805,-0.295689],[8.419987,8.548022,5.411115,-2.265822,-6.965614,-2.329516,4.679661,4.530786]],[[-5.051551,2.873332,2.577012,3.425510,8.847276,0.246442,9.203086,-0.355055],[-4.859024,6.574311,-4.704404,-9.947913,9.445026,-6.328567,0.708514,-9.016730],[-6.273403,2.627938,8.490303,-1.187461,1.336251,-0.472828,1.480963,9.727399],[0.779685,6.340300,-9.932137,-6.451783,-0.478366,1.236074,-2.051294,2.290290],[3.344218,-0.948165,-5.860786,8.952979,-6.512769,-6.226650,-1.577081,-2.449462],[-7.526862,-6.674131,9.461005,-3.947987,2.334484,7.096965,2.098430,-2.978658],[8.032642,3.968338,2.148144,-5.629793,3.245702,-7.537978,-2.512920,7.530945],[-0.184865,-7.109284,-8.899183,-2.362823,-3.432006,3.324402,-9.640940,-8.075677],[-2.074761,4.676153,1.737597,-8.140245,4.741175,-5.315669,7.191770,-9.327655],[8.601383,2.247125,-1.200092,2.957716,-8.696408,-7.403102,5.629194,-0.472546],[9.990996,2.267903,9.860893,2.021581,-7.222252,8.165023,1.467335,-9.571577],[-6.604874,-2.041615,2.140403,9.369241,-6.997499,-4.710396,-9.110730,1.838195],[8.685304,-9.916265,-1.973450,6.437599,-7.912014,-1.291148,-4.685220,-4.283902],[7.722382,5.937100,7.813723,-4.033750,3.259210,5.680259,6.497744,9.513755],[4.138363,-3.953524,5.902700,6.255730,-4.520740,1.285405,-6.947042,5.872817],[-0.093040,-5.620250,4.710856,0.181221,4.629903,-4.660400,1.207346,6.899483]],[[-3.264411,0.218224,9.308876,5.849058,-1.995549,6.121550,-4.629185,-0.485365],[5.595519,-5.597986,9.760256,8.123650,-8.684833,-3.399837,0.125019,1.524615],[5.263557,8.431499,7.720316,-6.727196,4.449385,-8.386989,-0.580378,-5.299935],[1.938973,-7.810365,-9.574480,8.380528,0.996938,1.689947,-2.612408,-6.187496],[2.341944,-5.611075,-6.251376,-7.295339,-2.244552,-9.967091,-9.865351,1.706936],[5.737445,-2.735930,3.036555,0.891495,4.387704,-1.942190,4.954708,8.315761],[-8.772548,3.463407,-1.839141,6.053653,-3.770881,1.384433,-2.065478,-8.668955],[-8.003329,-7.519397,-9.726027,0.950253,-6.406476,7.503931,-2.019361,-6.995199],[1.941170,-2.182912,9.895110,-6.461853,8.287436,-8.666172,-0.992774,8.086907],[-7.485084,3.840575,5.011635,-4.584615,-1.701384,4.271884,3.409377,8.184830],[9.829679,-3.663527,6.321101,-0.237938,8.746035,4.038722,5.390148,-1.272770],[-3.035708,6.300699,-3.891049,3.223907,6.374912,-2.331397,-1.555950,0.177648],[2.547121,-7.771785,1.067798,8.310330,-5.339584,-5.955692,1.908389,3.297150],[-0.493456,-3.128029,-6.576385,6.388620,-3.320356,-3.471717,-7.279986,6.630721],[-6.679270,-1.585124,-1.462608,-4.079253,-1.671037,6.737919,1.839612,8.569556],[7.249616,4.755868,6.202973,0.850900,-9.904516,-5.803320,-2.146825,-9.105339]],[[-3.599384,-3.393809,-2.937055,4.201332,9.001970,-4.049247,1.303955,3.294425],[1.210047,-6.133137,4.285376,7.713447,-5.937289,-8.982821,2.364776,8.220227],[-1.173557,-5.736868,-3.608793,9.719785,-5.164022,-0.758399,-0.737305,-2.434337],[-5.737108,-3.839999,8.083279,9.677715,-4.970700,-7.442913,-9.168897,2.048885],[5.161585,5.317776,3.287066,6.979357,0.398553,8.957596,8.758677,2.926582],[-3.794337,-9.696802,2.899170,0.686166,8.325735,5.698385,6.529194,-6.575798],[2.651598,-6.135641,9.148199,-0.249127,-4.407318,-3.709921,-6.735226,2.116781],[8.932348,-8.248591,-0.629161,-3.184750,2.773823,7.927187,-8.862387,5.122443],[-1.438639,-1.315383,5.610561,-4.289904,-9.699615,-7.435686,-2.904425,-3.822587],[7.030985,9.319942,-8.654985,9.759476,9.971870,9.821094,7.723255,5.120023],[-4.570991,1.846905,2.397395,1.987557,-3.244200,-0.583489,-0.756415,-2.170555],[0.708726,3.843291,-0.435522,3.297599,7.982534,8.738842,8.173472,-5.925895],[6.565475,0.283732,7.392404,-3.768371,-7.685295,7.080334,6.512735,-8.519330],[4.256895,1.532468,8.223377,6.146847,6.142241,5.436083,-3.949009,-2.571285],[2.024543,-6.012945,9.692075,-7.996168,4.484985,-6.671401,1.571366,4.201575],[-3.439504,-1.912347,3.564299,-5.565708,1.042350,6.243059,-6.338620,8.705842]],[[2.964894,-4.971213,-9.233468,1.328353,-5.586448,5.833808,-9.711952,-2.128242],[7.621026,-0.382483,3.075182,8.648622,-6.916509,-8.241189,-1.452649,-9.409711],[9.801184,-5.330160,5.805786,7.637329,4.296355,-5.896181,2.396920,-1.336000],[3.119310,0.623458,-7.927785,1.413398,1.009111,3.849306,5.310820,6.902937],[-6.455997,9.809918,8.559111,-6.578725,4.527760,8.542995,1.441916,1.705908],[-0.325735,2.674428,8.255725,-2.836838,-4.305001,-0.123003,7.961704,-7.340196],[-5.388301,-2.952230,-3.606271,-8.942823,1.359510,-2.475233,-1.992788,4.249881],[-5.129244,2.323527,-2.346242,-1.706483,4.705666,-0.132013,9.613866,-8.363538],[-3.591282,2.293802,8.493364,-9.431704,3.499290,-7.847159,-1.572910,9.693436],[-6.421897,-1.319265,-0.782715,-3.059446,-4.728959,-2.707250,0.751808,6.793978],[2.109190,1.645107,-4.147416,6.215886,-9.539751,0.568971,-0.542108,-9.685977],[6.471678,9.268063,1.382654,4.853794,-9.354456,6.730263,1.263484,-2.680169],[-8.118041,5.249290,5.662385,-9.786886,-3.548569,4.749345,-9.664031,-6.585226],[-6.621485,9.075973,9.023843,6.723973,9.663322,4.782059,0.526154,6.003461],[2.262116,0.066926,-9.681583,8.914785,5.883877,1.946771,-5.704820,-7.240485],[6.981031,-6.454875,-8.705314,-4.643239,3.608047,-0.324012,2.270134,-4.114768]],[[6.770350,-2.108781,9.564258,-7.305117,-7.179085,9.765544,6.552251,1.872927],[7.216660,0.945651,-1.144794,6.896999,-2.000174,-3.516388,-9.880841,-7.155235],[-9.647301,3.121141,-6.423831,1.377791,7.913326,6.558351,-4.206441,7.103546],[2.915748,9.448411,-0.814596,3.041429,6.435757,7.182584,-9.464998,5.071709],[-5.989077,-7.008209,-1.856646,1.606547,-8.106554,2.156986,2.033275,5.835763],[3.313663,-6.307801,2.529344,-1.165523,-1.050318,-4.453692,-6.080152,9.171631],[-7.824466,9.041133,1.663318,-3.678311,-3.837925,-4.901972,-5.106613,-9.261729],[7.350550,-3.501335,-7.585812,2.388018,-1.450852,3.806433,6.243718,9.268222],[-7.522575,-1.129469,9.551321,-5.066587,-5.654572,0.550992,-8.756102,3.703849],[5.294088,-5.415701,-3.243582,-9.841962,-9.737533,1.603137,-6.570752,1.737925],[-1.415928,8.445504,5.208896,2.918625,-8.815230,-6.865250,-3.357051,-0.170447],[0.433983,7.807739,-1.225681,-3.780552,1.518910,-9.461283,-7.430718,-6.358021],[-2.413525,-5.627201,8.967961,8.550411,3.280336,-9.566732,6.318809,6.658101],[-6.156520,5.892994,-7.930878,1.852652,4.160173,5.313101,2.305743,-9.901517],[0.295915,0.553376,-9.963497,3.783181,2.014540,8.325153,-9.594039,7.269270],[6.119219,-1.108114,6.185581,0.945197,5.611945,-8.490909,2.206163,-7.475582]]], dtype = "float64")#candidate|4230|(6, 16, 8)|const|float64
bop_4231 = relay.maximum(call_4226.astype('uint16'), relay.reshape(const_4230.astype('uint16'), relay.shape_of(call_4226))) # shape=(6, 16, 8)
bop_4234 = relay.maximum(call_4227.astype('uint16'), relay.reshape(const_4230.astype('uint16'), relay.shape_of(call_4227))) # shape=(6, 16, 8)
uop_4240 = relay.exp(bop_4231.astype('float64')) # shape=(6, 16, 8)
uop_4242 = relay.exp(bop_4234.astype('float64')) # shape=(6, 16, 8)
output = relay.Tuple([uop_4240,])
output2 = relay.Tuple([uop_4242,])
func_4249 = relay.Function([], output)
mod['func_4249'] = func_4249
mod = relay.transform.InferType()(mod)
output = func_4249()
func_4250 = relay.Function([], output)
mutated_mod['func_4250'] = func_4250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3832_call = mod.get_global_var('func_3832')
func_3833_call = mutated_mod.get_global_var('func_3833')
call_4262 = func_3832_call()
call_4263 = func_3832_call()
output = relay.Tuple([call_4262,])
output2 = relay.Tuple([call_4263,])
func_4266 = relay.Function([], output)
mod['func_4266'] = func_4266
mod = relay.transform.InferType()(mod)
mutated_mod['func_4266'] = func_4266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4266_call = mutated_mod.get_global_var('func_4266')
call_4267 = func_4266_call()
output = call_4267
func_4268 = relay.Function([], output)
mutated_mod['func_4268'] = func_4268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3133_call = mod.get_global_var('func_3133')
func_3134_call = mutated_mod.get_global_var('func_3134')
call_4294 = func_3133_call()
call_4295 = func_3133_call()
func_1027_call = mod.get_global_var('func_1027')
func_1030_call = mutated_mod.get_global_var('func_1030')
var_4311 = relay.var("var_4311", dtype = "uint64", shape = (294, 2))#candidate|4311|(294, 2)|var|uint64
call_4310 = func_1027_call(relay.reshape(var_4311.astype('uint64'), [6, 7, 14]))
call_4312 = func_1027_call(relay.reshape(var_4311.astype('uint64'), [6, 7, 14]))
var_4313 = relay.var("var_4313", dtype = "uint64", shape = (6, 7, 14))#candidate|4313|(6, 7, 14)|var|uint64
bop_4314 = relay.floor_divide(call_4310.astype('float32'), relay.reshape(var_4313.astype('float32'), relay.shape_of(call_4310))) # shape=(6, 7, 14)
bop_4317 = relay.floor_divide(call_4312.astype('float32'), relay.reshape(var_4313.astype('float32'), relay.shape_of(call_4312))) # shape=(6, 7, 14)
var_4324 = relay.var("var_4324", dtype = "uint64", shape = (294, 2))#candidate|4324|(294, 2)|var|uint64
bop_4325 = relay.maximum(var_4311.astype('int32'), relay.reshape(var_4324.astype('int32'), relay.shape_of(var_4311))) # shape=(294, 2)
bop_4330 = relay.mod(bop_4325.astype('float64'), relay.reshape(var_4313.astype('float64'), relay.shape_of(bop_4325))) # shape=(294, 2)
output = relay.Tuple([call_4294,bop_4314,bop_4330,])
output2 = relay.Tuple([call_4295,bop_4317,bop_4330,])
func_4338 = relay.Function([var_4311,var_4313,var_4324,], output)
mod['func_4338'] = func_4338
mod = relay.transform.InferType()(mod)
var_4339 = relay.var("var_4339", dtype = "uint64", shape = (294, 2))#candidate|4339|(294, 2)|var|uint64
var_4340 = relay.var("var_4340", dtype = "uint64", shape = (6, 7, 14))#candidate|4340|(6, 7, 14)|var|uint64
var_4341 = relay.var("var_4341", dtype = "uint64", shape = (294, 2))#candidate|4341|(294, 2)|var|uint64
output = func_4338(var_4339,var_4340,var_4341,)
func_4342 = relay.Function([var_4339,var_4340,var_4341,], output)
mutated_mod['func_4342'] = func_4342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_4363 = func_2140_call()
call_4364 = func_2140_call()
output = call_4363
output2 = call_4364
func_4383 = relay.Function([], output)
mod['func_4383'] = func_4383
mod = relay.transform.InferType()(mod)
mutated_mod['func_4383'] = func_4383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mutated_mod.get_global_var('func_4383')
call_4384 = func_4383_call()
output = call_4384
func_4385 = relay.Function([], output)
mutated_mod['func_4385'] = func_4385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_4386 = relay.TupleGetItem(func_2289_call(), 2)
call_4387 = relay.TupleGetItem(func_2290_call(), 2)
func_2563_call = mod.get_global_var('func_2563')
func_2568_call = mutated_mod.get_global_var('func_2568')
const_4389 = relay.const([4,-2,-1,-1,8,9,7,-9,-4,5,1,9,4,2,-9,-1,-3,5,10,10,5,7,5,-2,-4,8,3,-1,-5,2,8,-6,8,6,-9,-3,6,-6,-7,4,7,7,9,8,-10,9,4,10,-9,2,-5,-2], dtype = "uint8")#candidate|4389|(52,)|const|uint8
const_4390 = relay.const([5,-9,5,1,8,9,6,-4,9,10,-2,8,-7,-10,-7,1,1,9,8,8,-9,-1,8,10,5,-7,-9,2,-9,6,1,7,5,-10,7,-8,6,-3,-7,10,-1,9,-3,5,-5,-9,8,8,4,-8,-7,7,-8,-6,3,4,-4,-5,6,-10,-3,-7,4,4,-5,-9,9,-6,8,1,-7,-9,-10,7,-6,-6,5,-10,1,9,8,-8,3,5,5,5,1,-2,-8,-6,7,5,-7,3,1,-4,7,6,-8,-3,7,3,-2,10,4,-6,9,-3,6,-4,7,4,2,7,-2,-10,-8,8,10,2,3,-6,-9,9,-6,-10,3,-10,7,6,8,10,-1,-10,8,6,1,-4,-1,-6,5,2,2,-4,9,-8,-6,-5,-9,-9,-6,-8,4,-9,-6,4,3,-9,7,-5,3,-5,4,-5,2,1,8,-7,3,1,-1,9,10,8,-3,-6,-8,3,-9,-4,4,-3,5,9,3,7,5,-7,-6,-4,10,3,-1,10,7,-2,-9,7,4,2,-8,-3,-5,-9,7,-7,-3,5,-9,5,8,10,2,-1,-7,-6,-10,-9,-9,-3,2,-7,2,-1,8,-10,-5,4,-10,-6,6,2,-10,10,-7,-8,-4,-8,-7,-1,4,1,-10,9,-10,6,4,3,-9,3,-7,-7,-8,-9,-3,-9,-10,8,-7,-3,-9,-6,-7,7,1,3,3,-1,4,-5,10,8,8,3,3,4,-5,7,9,-7,7,10,-10,10,-3,-5,-1,-5,8,-6,-2,-7,1,8,-9,2,-4,8,5,2,-3,1,9,-4,-3,-10,-1,1,-2,-3,5,8,8,-5,-2,-1,5,2,7,1,-8,-5,9,-10,7,1,-9,-1,-3,-1,5,-3,-5,4,-10,-4,-7,7,8,-6,-3,7,8,-8,-6,7,3,2,4,2,1,4,8,6,1,1,1,-5,-5,9,1,1,-7,-4,8,-4,-5,-7,-10,-8,-6,-4,-4,7,1,9,3,8,4,10,-1,1,5,-8,10,7,-5,-5,9,8,-10,-3,-10,5,-4,-6,-1,8,2,4,-4,-1,1,7,8,1,-6,-10,-5,10,2,-2,-10,1,-10,7], dtype = "uint8")#candidate|4390|(416,)|const|uint8
var_4391 = relay.var("var_4391", dtype = "uint8", shape = (780, 1))#candidate|4391|(780, 1)|var|uint8
var_4392 = relay.var("var_4392", dtype = "float64", shape = (924,))#candidate|4392|(924,)|var|float64
call_4388 = relay.TupleGetItem(func_2563_call(relay.reshape(const_4389.astype('uint8'), [4, 1, 13]), relay.reshape(const_4390.astype('uint8'), [4, 8, 13]), relay.reshape(var_4391.astype('uint8'), [4, 15, 13]), relay.reshape(var_4392.astype('float64'), [924, 1]), ), 4)
call_4393 = relay.TupleGetItem(func_2568_call(relay.reshape(const_4389.astype('uint8'), [4, 1, 13]), relay.reshape(const_4390.astype('uint8'), [4, 8, 13]), relay.reshape(var_4391.astype('uint8'), [4, 15, 13]), relay.reshape(var_4392.astype('float64'), [924, 1]), ), 4)
func_571_call = mod.get_global_var('func_571')
func_577_call = mutated_mod.get_global_var('func_577')
const_4397 = relay.const([-9.880363,9.009151,1.524177,7.566397,2.138820,8.475275,3.688805,-8.127826,-6.265447,9.575337,6.990525,0.313694,9.547577,5.989912,-0.467114,7.801832,9.972441,9.026283,5.468589,0.313005,4.671085,-3.326765,1.373081,5.916349,9.450303,7.896062,8.437112,2.800770,0.080924,2.799839,4.239186,-4.584890,8.148738,5.577615,7.226809,4.603847,-8.460143,9.477314,3.044415,3.850363,1.391443,0.278442,8.801515,4.047823,0.565956,-6.650273,7.989193,7.954552,-1.752297,2.721905,-6.033919,5.373067,2.823873,-0.095240,6.645618,4.916206,-0.930540,3.932777,9.691453,-8.818255,-7.585619,5.739962,2.464311,-7.870520,-3.701733,4.290009,0.010890,0.110818,0.191083,1.780881,7.722499,-3.071195,3.024362,9.072950,-2.521346,-3.108566,-6.204242,2.783012,-6.204142,-4.532532,6.063585,4.023732,-0.014473,2.447905,-8.057912,-0.125162,1.359421,4.038210,2.649964,8.307945,-3.813278,-4.554309,-2.486065,1.680421,1.856552,7.012003,4.462660,0.250311,9.101994,-5.523788,0.693732,8.189897,3.890099,-1.862948,9.806408,-5.013163,9.839995,-3.579524,-1.875138,-2.462011,8.301872,2.886501,7.044565,-1.884999,2.508636,-3.487146,-7.942721,-7.995724,3.664919,-3.400276,-8.616261,-5.631041,8.704074,2.263578,-8.833355,9.675822,7.062322,9.068189,-1.038161,7.212871,-1.215136,-0.940029,2.391911,-7.270987,7.627029,3.220440,9.796101,5.892762,5.267598,2.473644,9.384168,2.827219,1.879984,0.284759,1.697558,2.677116,-1.345544,-4.374993,-9.856762,-5.547799,5.343701,-4.437368,-9.340711,2.718165,-3.686179,5.238465,7.924231,8.925005,8.692928,-3.606295,8.207690,-4.031893,-6.772960,-7.353977,6.209767,-1.368636,-4.443227,-0.381519,9.989005,-5.348664,-7.809814,7.178332,2.346287,-4.217808,0.425906,2.287519,-0.700340,-8.994664,-5.382973,-1.922249,-2.659938,-4.509977,8.966485,7.259247,-1.197736,-8.708909,7.196294,-1.797401,-3.564602,-4.084176,-4.892810,8.568855,5.718471,9.044213,-2.112264,-7.033185,-2.934510,6.125996,5.485730,-1.907731,0.428448,-0.090891,-5.591472,1.408405,6.127374,-3.955685,0.516183,-0.639691,-9.317687,-6.332831,3.873101,7.187800,6.574460,1.937266,3.933020,-5.134073,5.791907,9.510160,1.316001,-1.763882,-3.848688,-4.658326,-9.936517,4.360821,-5.598339,6.062920,-4.353931,-4.448018,-2.911859,-9.167323,8.752918,-4.423462,0.178510,2.904098,-8.581207,8.279667,-1.523175,-0.331064,-1.926711,5.368467,4.800856,9.070016,9.357103,6.846829,7.121839,6.408366,-8.153662,1.898607,-3.052369,-8.257513,0.257010,8.019447,-8.923676,-6.232377,5.409696,8.455514,0.426151,-1.979233,-7.932342,-1.009931,9.162708,8.361176,2.942494,8.912339,7.309722,-9.132891,8.463115,-5.097832,1.810780,7.053397,7.648258,3.113147,7.940786,9.074890,0.980954,9.958655,-3.319337,-0.843978,-2.579694,5.816631,7.695236,-1.702495,0.253319,-0.056610,1.484639,-1.154672,1.853929,2.569831,7.282459,-0.853851,-3.049761,-8.687721,-8.125323,-5.097893,-6.537585,-2.860113,4.301700,2.891075,-2.607462,6.327770,5.228056,-5.045240,7.403146,4.243653,-9.145513,6.420529,0.669752,1.118542,-5.639743,-8.001001,6.021468,2.644423,6.351798,-5.750430,-6.431322,-2.040674,1.218634,-2.750978,-9.053357,4.767712,-0.988642,-0.569039,-7.510678,2.630625,5.473697,-8.716764,2.197652,-3.734453,-2.078623,-1.702982,-6.431356,-3.838440,3.042182,0.723795,-3.741186,-8.633973,4.526552,-3.433966,8.724392,5.835424,-9.634173,8.508225,4.053520,-0.795726,-4.292366,-8.957164,3.594643,-0.375252,-2.781951,2.082323,8.635367,8.448367,-1.084485,-4.720671,8.669726,-1.936422,7.982205,0.626550,2.822452,-5.384192,-3.340022,1.804212,9.387086,-1.163604,0.504004,-4.866716,-0.337551,1.060042,-5.305862,-5.197741,2.201779,3.580408,-1.742478,6.503646,-5.078541,-6.899004,5.347811,3.803760,4.847087,-9.844931,4.805304,7.661516,-0.148182,-3.730367,1.010352,-9.051487,6.293655,2.345090,6.657712,-7.127037,5.143342,-2.152767,-9.834630,5.428893,-6.908634,-7.686263,8.602884,1.933697,-3.360656,-3.964850,-1.806368,2.016209,-7.436846,7.801069,8.983201,0.480684,-1.508919,5.097239,8.247002,7.040107,-5.718774,5.980163,6.343617,6.460559,-3.540377,2.938604,4.935899,4.228230,-1.264048,0.907858,-3.696106,-2.288256,-3.890238,8.297579,-1.949149,9.518831,-2.903217,-1.479502,2.772593,6.128224,1.216458,-2.527371,2.603957,-6.355587,9.654355,-2.560962,5.381949,-7.374779,-5.349577,5.256321,-7.653888,-1.654812,-0.870329,9.000285,-2.598977,9.286236,1.827849,-0.634562,5.181156,-0.766032,-4.605606,-4.318618,7.631967,-9.967423,-4.904755,7.857522,-1.374290,7.001991,-1.217424,5.768047,-9.965099,3.398159,-2.809367,-0.694759,-2.264499,-0.774222,8.184184,-4.353198,-2.855345,6.238225,4.788183,7.287630,-8.395136,-4.846065,4.102481,2.078106,-2.327799,-0.127201,0.166871,4.673743,5.999275,-2.558696,-5.907804,-7.568896,0.104092,-6.525570,-8.717160,4.510397,-2.011923,4.093462,8.809049,5.696641,9.673685,-2.297906,6.623860,9.708528,-5.456038,1.833206,-9.481660,9.118542,2.056973,-1.473105,9.710406,-8.459221,2.138598,-3.732370,7.264185,9.336565,3.259319,5.622891,1.232597,5.625085,-1.084030,-5.863502,-1.389142,4.431245,1.332367,1.489333,9.569168,9.300411,-7.814456,4.383953,3.020835,-1.628405,-3.557214,1.668448,-5.014287,0.189962,-3.065810,-6.184918,3.093082,-1.256824,9.066100,-8.948995,-9.565969,-5.575071,8.380359,-5.891843,-7.062413,2.413510,-9.353085,-8.306904,4.453349,3.211306,6.308731,4.280757,6.689032,-3.754490,7.485607,8.780125,-3.160045,-4.811434,3.022913,-7.159321,-6.290040,9.677242,1.092810,1.691222,9.914889,-4.034885,-6.148615,-8.072378,4.612674,6.228810,1.709820,-3.991759,-6.612869,2.622939,4.522380,5.918402,2.712328,-0.269029,-2.910138,1.488482,4.176064,-3.224708,2.596306,0.135321,9.479082,-5.091336,-8.751175,-9.060848,8.293829,-1.286021,-4.973990,-7.972566,-9.215878,-4.582019,2.457559,7.677471,2.613792,-1.031511,-3.113339,2.766378,-5.441634,-4.140324,5.393236,5.705524,-0.078270,6.537593,4.388655,-3.675033,6.125315,-5.257594,-7.984188,0.929192,-7.632563,0.378204,2.526242,-7.759859,-0.617112,-6.464589,-3.321728,-5.526070,-6.585524,0.530479,-9.223099,2.055498,-9.148609,-5.685806,0.328938,-3.959839,3.553766,-8.566058,-4.709876,3.717813,6.028496,-6.011251,5.972673,-2.573580,5.080298,-9.935145,3.099891,3.064162,5.441903,6.465448,0.517661,-5.781363,2.652142,7.839125,-4.485349,-5.256633,7.113718,9.223414,8.928183,-3.534517,8.701077,-6.111099,-8.439081,-6.256387,8.736680,8.876713,1.624562,-8.175795,-5.835517,-5.448458,-1.014042,8.709403,-2.918514,-9.312765,-4.128573,-9.051473,1.605728,6.175313,-5.425522,-0.437547,3.235534,-7.314778,2.092725,1.662874,-7.406220,-4.323146,-9.448042,-1.147673,-5.933156,-7.555987,5.039181,-8.259942,-3.008637,3.577654,7.339353,-4.416092,1.476931,5.341435,3.850775,-5.259349,4.590936,-1.978076,-7.444972,-6.553102,-7.956247,-1.555146,5.194453,-1.846891,-4.125508,-7.446265,6.355545,-1.883095,2.866812,-0.099380,-7.659952,-1.393126,3.352280,9.808140,-6.753768,6.227275,-9.309760,-7.196928,-8.743730,5.100086,-3.669430,0.339516,7.165867,-3.908732,9.036089,6.896156,-3.432475,0.486182,6.263147,9.904470,-5.911081,-9.849083,-4.294447,-9.130567,6.510914,6.579857,6.707692,-0.308516,-9.456329,0.543589,7.792209,5.953606,1.933557,9.408268,4.879531,-7.315776,9.868434,9.208425,4.672006,4.924913,9.838823,0.544283,4.630493,1.408259,-4.818171,6.778515,-1.444149,6.411046,-5.363223,-2.967387,-3.903634,1.755152,5.768808,3.174181,7.822860,2.315730,-1.412293,9.611022,-1.525510,0.122630,-1.381036,-2.983112,-3.726970,-9.958944,8.811221,-4.157476,4.895917,3.793258,-1.975987,9.453741,9.067680,3.139309,9.964891,2.135921,5.119372,8.571334,-7.695565,-1.978954,7.206014,7.277888,7.225097,-9.651511,7.908581,5.792098,4.182742,3.847694,-4.118208,-6.789339,-5.219728,4.503307,-0.078465,4.497345,6.242840,7.811446,-6.889058,3.258789,1.737524,-3.865715,2.605858,-1.752487,-9.720673,-5.808328,-7.070113,6.125107,-5.355050,2.910158,2.665376,9.360436,-0.404797,2.755787,3.420852,0.034674,8.572339,-9.410949,7.016396,3.625947,-4.566679,-6.112875,-3.568392,2.241497,6.569245,8.633480,7.830954,8.844735,-0.874134,-4.189053,7.576259,-5.470159,4.692744,7.076533,1.732217,1.868359,-1.267752,4.802127,2.446115,-1.619176,9.348785,0.974024,-6.842727,-9.920864,5.313294,8.617668,-2.020488,1.229558,-3.545308,6.589370,4.499027,3.404132,-2.738004,-1.162937,-8.957155,-5.769668,7.001268,-0.601050,-4.660977,-6.284399,-1.247783,-7.901696,2.516880,-9.392964,6.484100,3.843443,-2.397990,-6.799857,6.627184,-1.996352,0.466301,7.216245,-3.395836,5.851217,8.249823,2.391836,5.740103,-6.674882,8.978946,-9.734005,-3.101485,-3.591204,-0.515845,-2.870781,2.093523,7.391188,2.242198,6.571595,9.777102,4.942296,-0.652452,-5.212461,-0.533102,-6.737610,7.450826,-3.137596,2.300893,4.576654,-7.774171,8.032901,-9.828825,-4.222415,-7.183528,-0.411695,-7.254489,-4.776396,-2.856815,-7.571601,3.806862,-4.504802,0.658892,0.351465,9.846867,9.647550,-1.601303,-3.222749,1.458088,-2.947663,-7.263956,8.838509,-9.347749,-5.343817,-9.008309,-3.358095,3.381966,1.853871,6.729732,1.277646,8.067113,-6.879494,-7.992114,-4.805931,-4.261506,2.626515,7.007304,5.478532,-7.433990,-1.277526,0.668639,-2.197709,-9.854776,3.983967,-6.824445,-3.459633,5.086477,6.815993,3.311734,-2.673115,2.801715,3.601412,-0.434614,-3.129393,-4.044901,-3.228705,1.270611,-0.441246,-3.384385,-7.285190,8.434307,-5.282624,3.380497,-0.551319,3.830610,-7.796609,-2.173446,-5.821730,8.264210,8.494491,7.110097,8.300300,-5.414505,-1.464944,5.904928,-9.947009,-7.217545,-5.972098,-1.596971,-8.839260,9.743761,-8.883993,-1.281020,-1.802676,-4.015025,6.297651,7.670186,-0.712026,7.630462,-0.251672,1.538126,2.415151,6.755118,-6.391799,-9.884910,-0.708742,7.757700,4.782230,5.135090,3.080699,5.480405,4.134965,5.299525,-2.823933,2.310401,-8.673165,2.174040,-2.003020,3.591413,5.551591,4.758624,1.385161,-8.970499,8.625308,-5.109179,0.896743,1.544200,5.304273,3.814762,8.625238,-7.150092,2.002864,4.663249,9.943369,-0.707503,-3.402462,-5.566810,0.153920,-2.570916,-3.494071,7.033993,-0.843863,-1.290938,-5.186649,-9.582497,-9.045202,6.812650,-7.043464,0.478048,8.481735,-4.659579,-5.397939,9.838726,-6.042246,-5.194319,-7.190894,-0.081522,-4.823844,-1.894197,-3.522837,4.684257,-7.612892,7.254742,7.818924,-9.297027,-9.429132,3.505053,7.422939,-0.215247,-8.895068,-3.145196,4.562933,-3.008523,5.863239,-6.127494,1.920432,6.657140,-5.125759,-8.248947,7.371984,-8.215854,-4.587042,-5.923965,-4.043927,7.409240,8.553248,5.264850,-5.506741,4.748692,0.740112,-9.390880,6.852364,-3.335065,-5.022025,3.267059,3.154289,1.871877,0.584841,3.313344,0.048653,1.274639,-7.038899,8.588120,-0.818245,-9.566119,-5.701961,-7.527175,-9.491691,3.834523,7.160268,0.536016,-2.819316,-7.081926,-6.945539,3.012122,-8.364435,3.098788,2.189126,-4.843660,9.893306,9.323033,7.092759,7.147160,-8.139922,-0.705966,9.966314,-4.178018,-0.096788,-8.457162,-1.212219,-1.295421,-4.034743,9.371807,-6.527158,8.166915,9.425175,9.519492,-4.152254,-1.559965,6.095454,-1.834048,-7.548939,-6.919739,-6.662677,-5.141026,-7.885543,1.937100,-3.550490,0.869947,-5.516779,-6.059707,7.468477,-9.873195,-4.333732,8.753360,9.987981,-0.017481,-4.455463,1.159716,5.183958,-2.226070,-7.545484,-6.361253,-6.508784,-7.439055,-7.949791,-6.150431,-8.668935,8.845901,-9.230410,3.389472,9.540171,4.978261,-8.861606,-8.411294,-1.276252,-7.686789,-9.406470,5.052748,-3.230705,-4.435457,-6.662981,-1.191086,5.833733,0.476985,-2.750793,-4.408020,5.067397,-3.082644,-1.072618,2.133193,8.810632,4.116809,4.990693,-4.195009,-1.140156,-5.818170,-0.260885,-4.612460,2.859794,3.282021,-1.258511,4.273573,4.641016,3.458699,-9.110266,8.026020,-2.820658,8.576307,8.560825,1.267829,-7.336959,7.785400,7.503558,0.443991,4.455085,-8.730329,-8.132205,9.299320,6.539452,6.842475,-2.441714,1.692137,6.188171,-7.427888,1.747657,8.502451,7.092303,-2.244894,-0.309631,6.882262,-7.645979,6.696218,1.071990,-2.712990,2.041471,-7.158943,-7.828916,3.878686,1.119774,0.288214,1.823466,-8.128837,3.621017,2.279418,-4.321362,0.177313,7.707445,8.904413,-1.645835,8.592800,7.063125,1.013149,-9.519176,-6.073468,-0.061931,-5.533410,-9.172054,-9.038691,3.141196,4.151968,4.173636,-9.990029,0.495684,7.516891,8.172684,4.155620,6.668780,6.983918,5.569223,2.341322,8.782936,-3.013181,-3.780380,1.676712,-8.407530], dtype = "float64")#candidate|4397|(1260,)|const|float64
var_4398 = relay.var("var_4398", dtype = "float32", shape = ())#candidate|4398|()|var|float32
const_4399 = relay.const([[-9.744949,7.406465,9.174595,-9.669267,-1.593081,-1.224566],[3.742017,6.476990,9.412131,5.029779,1.505870,0.546824],[3.106957,-8.323803,4.563477,2.178484,-5.542566,3.703779],[8.226858,-5.144756,-4.693982,6.032511,-2.623101,5.617197],[4.847257,-1.324111,-2.280287,-8.153476,8.886769,-6.442175]], dtype = "float32")#candidate|4399|(5, 6)|const|float32
call_4396 = relay.TupleGetItem(func_571_call(relay.reshape(const_4397.astype('float64'), [14, 15, 6]), relay.reshape(var_4398.astype('float32'), []), relay.reshape(const_4399.astype('float32'), [10, 3]), relay.reshape(const_4397.astype('float64'), [14, 15, 6]), ), 2)
call_4400 = relay.TupleGetItem(func_577_call(relay.reshape(const_4397.astype('float64'), [14, 15, 6]), relay.reshape(var_4398.astype('float32'), []), relay.reshape(const_4399.astype('float32'), [10, 3]), relay.reshape(const_4397.astype('float64'), [14, 15, 6]), ), 2)
func_2406_call = mod.get_global_var('func_2406')
func_2408_call = mutated_mod.get_global_var('func_2408')
call_4413 = relay.TupleGetItem(func_2406_call(), 0)
call_4414 = relay.TupleGetItem(func_2408_call(), 0)
func_2563_call = mod.get_global_var('func_2563')
func_2568_call = mutated_mod.get_global_var('func_2568')
call_4415 = relay.TupleGetItem(func_2563_call(relay.reshape(const_4389.astype('uint8'), [4, 1, 13]), relay.reshape(const_4390.astype('uint8'), [4, 8, 13]), relay.reshape(var_4391.astype('uint8'), [4, 15, 13]), relay.reshape(var_4392.astype('float64'), [924, 1]), ), 5)
call_4416 = relay.TupleGetItem(func_2568_call(relay.reshape(const_4389.astype('uint8'), [4, 1, 13]), relay.reshape(const_4390.astype('uint8'), [4, 8, 13]), relay.reshape(var_4391.astype('uint8'), [4, 15, 13]), relay.reshape(var_4392.astype('float64'), [924, 1]), ), 5)
bop_4420 = relay.greater_equal(var_4391.astype('bool'), const_4389.astype('bool')) # shape=(780, 52)
func_4150_call = mod.get_global_var('func_4150')
func_4154_call = mutated_mod.get_global_var('func_4154')
var_4432 = relay.var("var_4432", dtype = "float32", shape = (42,))#candidate|4432|(42,)|var|float32
const_4433 = relay.const([1.386019,5.395634,8.890972,-5.399330,9.429664,5.634025,-6.792079,-1.107973,-6.042096,7.567760,2.360229,-9.722125,2.248768,1.727598,2.080523,-7.535997,-0.456013,2.061249,-0.337381,-1.212868,6.567161,4.647546,4.623605,-1.738920,9.512440,3.298641,2.870096,-6.298841,0.334834,7.591917,9.498843,6.429241,0.473518,3.851847,8.211564,3.100578,-2.425574,-0.877236,-2.199256,3.637792,-6.483919,-4.228489,-2.052677,-0.515825,-0.099050,-6.136291,1.532788,4.211481,-7.209646,-3.492841,7.478972,-4.057061,1.006279,0.818834,5.336105,3.769189,6.819791,6.604543,3.238295,8.942483,1.345270,2.751502,-1.788242,-3.507817,1.517326,-4.601078,-3.313289,-2.824954,9.758708,-7.545464,-0.500111,5.270113,1.978722,-3.534823,-0.726716,2.112925,2.584425,9.211238,8.707744,4.698321,-5.601813,4.501578,-3.162277,-2.170067,7.147839,6.163271,5.393003,-8.246604,2.284286,2.600126,-9.930684,-2.999933,2.350741,3.781133,2.575019,5.260432,-2.554163,-7.040229,1.865328,9.360201,6.189659,-2.832331,0.264286,-9.426193,1.574004,-8.765050,-9.837987,-9.257287,-6.194679,-7.931433,-9.379171,-0.029673,7.326408,2.068722,0.577820,0.118270,5.446962,3.513764,-8.777083,-0.502665,2.627243,-4.725886,1.584399,2.979656,-4.277277,8.286055,-1.031709,-7.481801,-0.704437,-8.395199,-4.335252,8.091475,9.408055,-1.883959,-4.649987,-5.145155,2.801389,2.421260,4.046086,2.557359,-4.004566,-2.861186,-7.975946,-1.562075,-3.157888,-1.287990,6.626044,6.284071,7.767202,-9.244860,-5.400767,5.693599,8.386981,-4.053108,-3.182346,7.681185,-6.883875,9.029538,-5.465085,4.623467,-3.209626,2.155758,5.566037,-6.467594,-4.778722,-4.417112,7.649834,-3.553461,-7.351114,2.727085,-6.154515,-6.778366,-5.941015,2.680682,8.674214,-7.004790,7.411130,2.995497,-4.710306,7.580431,4.753062,4.622086,3.546484,3.040668,-8.852821,-1.080849,8.465911,6.380614,-9.694506,-3.284979,2.154881,7.295725,-6.882720,-6.488325,4.614241,1.738949,4.787607,9.807613,7.529876,9.324231,-5.881119,-6.967557,-3.977484,7.381003,7.287069,-2.098843,-2.875178,1.546382,8.323793,3.686090,4.449145,0.789663,6.957109,6.097575,5.456179,-0.614344,1.351884,-5.015021,-7.877200,-7.171469,7.253058,0.317909,0.353353,2.255282,-8.469653,6.400673,7.930430,-6.835182,1.680985,6.645809,-3.987810,-5.510927,6.529519,5.388519,1.397164,9.077042,0.805847,-2.720082,4.682825,4.965633,1.919228,6.158389,9.888511,5.240259,0.997948,8.156384,9.240077,6.975305,-6.168560,-9.465723,8.058447,8.712021,-6.410236,2.821561,4.366285,3.370064,3.266703,1.633953,9.374363,4.702858,-5.401218,-3.304396,2.258209,-1.680215,8.059983,3.414946,-5.037749,9.904506,-4.988256,-2.251463,3.229153,-0.283850,-6.135330,2.123209,3.077207,-1.325368,2.750275,7.144893,7.587805,5.035380,-6.084556,7.461613,3.561150,-8.584290,1.856849,5.097541,-0.932318,0.231607,3.388040,-6.460857,7.777119,-9.913764,-8.829535,1.868764,5.034831,-1.075880,1.106604,-4.999118,-3.135004,9.217890,0.099233,-7.749877,-5.311674,-8.293860,-8.091401,-0.505601,-5.779028,-9.478580,-1.900034,-4.578581,-6.604559,-6.897132,-9.761480,-9.970129,3.154499,-8.874079,-5.461330,-5.040107,-7.319008,0.619014,-0.989525,-8.601369,-9.529206,6.966210,1.687136,6.898503,-6.930690,4.757888,-5.928873,1.023161,1.509560,3.138733,-5.223512,1.321755,-0.369620,1.025574,-1.344138,2.714857,-5.493127,-4.944777,-6.971363,-3.791913,2.390427,7.657489,5.813102,8.331732,-2.970878,1.049318,-8.085237,1.294764,6.154930,2.233521,7.341632,-2.465248,9.705539,2.399219,-1.420479,-0.249479,3.009592,-2.667137,-8.078451,-8.168220,-6.079356,3.009129,-2.353187,0.146693,0.032303,2.155724,-4.111603,0.767202,-5.204367,0.894907,-7.767258,-0.639085,-7.525695,-1.520568,-7.923109,0.721309,-4.464481,-2.201265,-3.112057,-1.115699,-1.638863,-4.263049,-8.308416,6.914122,-5.878509,5.731835,-2.626931,-5.733331,-4.616005,-2.947512,3.083028,9.529878,-2.057532,-3.703935,-9.703760,7.267005,9.276317,9.052809,1.726981,-4.953446,9.752608,-0.129683,-3.977677,-9.589305,4.454789,4.310547,1.479315,6.335698,-9.319398,-7.149774,-7.876308,-4.730974,4.563758,4.705443,-1.514341,-7.390560,-1.563851,4.496779,1.325169,0.095888,-8.783644,-4.284007,-5.686638,-6.060250,4.036973,5.797000,-4.885775,6.307578,6.808254,-3.594931,7.858362,6.456470,3.844366,-9.233536,9.193137,8.811118,-7.449090,5.630457,7.394707,-5.785793,-9.807968,1.435083,9.905335,-6.422857,1.064472,-7.433584,5.406048,-7.180648,-3.973667,5.795684,1.920846,-4.854926,-3.884840,-2.265085,8.628565,1.990955,-4.674990,-0.915561,7.696316,-9.321791], dtype = "float32")#candidate|4433|(462,)|const|float32
call_4431 = relay.TupleGetItem(func_4150_call(relay.reshape(var_4432.astype('float32'), [7, 1, 6]), relay.reshape(const_4433.astype('float32'), [7, 11, 6]), ), 0)
call_4434 = relay.TupleGetItem(func_4154_call(relay.reshape(var_4432.astype('float32'), [7, 1, 6]), relay.reshape(const_4433.astype('float32'), [7, 11, 6]), ), 0)
output = relay.Tuple([call_4386,call_4388,const_4390,var_4392,call_4396,const_4397,var_4398,const_4399,call_4413,call_4415,bop_4420,call_4431,var_4432,const_4433,])
output2 = relay.Tuple([call_4387,call_4393,const_4390,var_4392,call_4400,const_4397,var_4398,const_4399,call_4414,call_4416,bop_4420,call_4434,var_4432,const_4433,])
func_4444 = relay.Function([var_4391,var_4392,var_4398,var_4432,], output)
mod['func_4444'] = func_4444
mod = relay.transform.InferType()(mod)
mutated_mod['func_4444'] = func_4444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4444_call = mutated_mod.get_global_var('func_4444')
var_4446 = relay.var("var_4446", dtype = "uint8", shape = (780, 1))#candidate|4446|(780, 1)|var|uint8
var_4447 = relay.var("var_4447", dtype = "float64", shape = (924,))#candidate|4447|(924,)|var|float64
var_4448 = relay.var("var_4448", dtype = "float32", shape = ())#candidate|4448|()|var|float32
var_4449 = relay.var("var_4449", dtype = "float32", shape = (42,))#candidate|4449|(42,)|var|float32
call_4445 = func_4444_call(var_4446,var_4447,var_4448,var_4449,)
output = call_4445
func_4450 = relay.Function([var_4446,var_4447,var_4448,var_4449,], output)
mutated_mod['func_4450'] = func_4450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_4458 = func_2140_call()
call_4459 = func_2140_call()
func_2169_call = mod.get_global_var('func_2169')
func_2171_call = mutated_mod.get_global_var('func_2171')
const_4467 = relay.const([True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False], dtype = "bool")#candidate|4467|(65,)|const|bool
call_4466 = relay.TupleGetItem(func_2169_call(relay.reshape(const_4467.astype('bool'), [13, 5, 1])), 1)
call_4468 = relay.TupleGetItem(func_2171_call(relay.reshape(const_4467.astype('bool'), [13, 5, 1])), 1)
func_1368_call = mod.get_global_var('func_1368')
func_1371_call = mutated_mod.get_global_var('func_1371')
const_4479 = relay.const(8, dtype = "int32")#candidate|4479|()|const|int32
call_4478 = relay.TupleGetItem(func_1368_call(relay.reshape(const_4479.astype('int32'), []), relay.reshape(call_4466.astype('int32'), [14, 16, 1]), ), 1)
call_4480 = relay.TupleGetItem(func_1371_call(relay.reshape(const_4479.astype('int32'), []), relay.reshape(call_4466.astype('int32'), [14, 16, 1]), ), 1)
output = relay.Tuple([call_4458,call_4466,const_4467,call_4478,const_4479,])
output2 = relay.Tuple([call_4459,call_4468,const_4467,call_4480,const_4479,])
func_4486 = relay.Function([], output)
mod['func_4486'] = func_4486
mod = relay.transform.InferType()(mod)
output = func_4486()
func_4487 = relay.Function([], output)
mutated_mod['func_4487'] = func_4487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_4496 = func_2140_call()
call_4497 = func_2140_call()
output = relay.Tuple([call_4496,])
output2 = relay.Tuple([call_4497,])
func_4513 = relay.Function([], output)
mod['func_4513'] = func_4513
mod = relay.transform.InferType()(mod)
mutated_mod['func_4513'] = func_4513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4513_call = mutated_mod.get_global_var('func_4513')
call_4514 = func_4513_call()
output = call_4514
func_4515 = relay.Function([], output)
mutated_mod['func_4515'] = func_4515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3811_call = mod.get_global_var('func_3811')
func_3813_call = mutated_mod.get_global_var('func_3813')
call_4534 = relay.TupleGetItem(func_3811_call(), 0)
call_4535 = relay.TupleGetItem(func_3813_call(), 0)
output = relay.Tuple([call_4534,])
output2 = relay.Tuple([call_4535,])
func_4540 = relay.Function([], output)
mod['func_4540'] = func_4540
mod = relay.transform.InferType()(mod)
mutated_mod['func_4540'] = func_4540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4540_call = mutated_mod.get_global_var('func_4540')
call_4541 = func_4540_call()
output = call_4541
func_4542 = relay.Function([], output)
mutated_mod['func_4542'] = func_4542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3556_call = mod.get_global_var('func_3556')
func_3558_call = mutated_mod.get_global_var('func_3558')
call_4622 = relay.TupleGetItem(func_3556_call(), 2)
call_4623 = relay.TupleGetItem(func_3558_call(), 2)
func_3873_call = mod.get_global_var('func_3873')
func_3874_call = mutated_mod.get_global_var('func_3874')
call_4624 = func_3873_call()
call_4625 = func_3873_call()
output = relay.Tuple([call_4622,call_4624,])
output2 = relay.Tuple([call_4623,call_4625,])
func_4635 = relay.Function([], output)
mod['func_4635'] = func_4635
mod = relay.transform.InferType()(mod)
output = func_4635()
func_4636 = relay.Function([], output)
mutated_mod['func_4636'] = func_4636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4266_call = mod.get_global_var('func_4266')
func_4268_call = mutated_mod.get_global_var('func_4268')
call_4640 = relay.TupleGetItem(func_4266_call(), 0)
call_4641 = relay.TupleGetItem(func_4268_call(), 0)
func_3348_call = mod.get_global_var('func_3348')
func_3350_call = mutated_mod.get_global_var('func_3350')
call_4644 = relay.TupleGetItem(func_3348_call(), 1)
call_4645 = relay.TupleGetItem(func_3350_call(), 1)
output = relay.Tuple([call_4640,call_4644,])
output2 = relay.Tuple([call_4641,call_4645,])
func_4663 = relay.Function([], output)
mod['func_4663'] = func_4663
mod = relay.transform.InferType()(mod)
output = func_4663()
func_4664 = relay.Function([], output)
mutated_mod['func_4664'] = func_4664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2406_call = mod.get_global_var('func_2406')
func_2408_call = mutated_mod.get_global_var('func_2408')
call_4665 = relay.TupleGetItem(func_2406_call(), 0)
call_4666 = relay.TupleGetItem(func_2408_call(), 0)
var_4667 = relay.var("var_4667", dtype = "float32", shape = (6, 16, 8))#candidate|4667|(6, 16, 8)|var|float32
bop_4668 = relay.logical_and(call_4665.astype('bool'), relay.reshape(var_4667.astype('bool'), relay.shape_of(call_4665))) # shape=(6, 16, 8)
bop_4671 = relay.logical_and(call_4666.astype('bool'), relay.reshape(var_4667.astype('bool'), relay.shape_of(call_4666))) # shape=(6, 16, 8)
func_135_call = mod.get_global_var('func_135')
func_139_call = mutated_mod.get_global_var('func_139')
var_4683 = relay.var("var_4683", dtype = "bool", shape = (672,))#candidate|4683|(672,)|var|bool
call_4682 = func_135_call(relay.reshape(var_4683.astype('bool'), [8, 7, 12]), relay.reshape(var_4683.astype('bool'), [8, 7, 12]), )
call_4684 = func_135_call(relay.reshape(var_4683.astype('bool'), [8, 7, 12]), relay.reshape(var_4683.astype('bool'), [8, 7, 12]), )
bop_4689 = relay.divide(call_4665.astype('float64'), relay.reshape(var_4667.astype('float64'), relay.shape_of(call_4665))) # shape=(6, 16, 8)
bop_4692 = relay.divide(call_4666.astype('float64'), relay.reshape(var_4667.astype('float64'), relay.shape_of(call_4666))) # shape=(6, 16, 8)
func_4383_call = mod.get_global_var('func_4383')
func_4385_call = mutated_mod.get_global_var('func_4385')
call_4705 = func_4383_call()
call_4706 = func_4383_call()
func_4486_call = mod.get_global_var('func_4486')
func_4487_call = mutated_mod.get_global_var('func_4487')
call_4711 = relay.TupleGetItem(func_4486_call(), 3)
call_4712 = relay.TupleGetItem(func_4487_call(), 3)
func_2140_call = mod.get_global_var('func_2140')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_4714 = func_2140_call()
call_4715 = func_2140_call()
output = relay.Tuple([bop_4668,call_4682,var_4683,bop_4689,call_4705,call_4711,call_4714,])
output2 = relay.Tuple([bop_4671,call_4684,var_4683,bop_4692,call_4706,call_4712,call_4715,])
func_4723 = relay.Function([var_4667,var_4683,], output)
mod['func_4723'] = func_4723
mod = relay.transform.InferType()(mod)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4723_call = mutated_mod.get_global_var('func_4723')
var_4725 = relay.var("var_4725", dtype = "float32", shape = (6, 16, 8))#candidate|4725|(6, 16, 8)|var|float32
var_4726 = relay.var("var_4726", dtype = "bool", shape = (672,))#candidate|4726|(672,)|var|bool
call_4724 = func_4723_call(var_4725,var_4726,)
output = call_4724
func_4727 = relay.Function([var_4725,var_4726,], output)
mutated_mod['func_4727'] = func_4727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3873_call = mod.get_global_var('func_3873')
func_3874_call = mutated_mod.get_global_var('func_3874')
call_4844 = func_3873_call()
call_4845 = func_3873_call()
output = relay.Tuple([call_4844,])
output2 = relay.Tuple([call_4845,])
func_4846 = relay.Function([], output)
mod['func_4846'] = func_4846
mod = relay.transform.InferType()(mod)
mutated_mod['func_4846'] = func_4846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4846_call = mutated_mod.get_global_var('func_4846')
call_4847 = func_4846_call()
output = call_4847
func_4848 = relay.Function([], output)
mutated_mod['func_4848'] = func_4848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3991_call = mod.get_global_var('func_3991')
func_3992_call = mutated_mod.get_global_var('func_3992')
call_4895 = func_3991_call()
call_4896 = func_3991_call()
output = relay.Tuple([call_4895,])
output2 = relay.Tuple([call_4896,])
func_4953 = relay.Function([], output)
mod['func_4953'] = func_4953
mod = relay.transform.InferType()(mod)
output = func_4953()
func_4954 = relay.Function([], output)
mutated_mod['func_4954'] = func_4954
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4985 = relay.var("var_4985", dtype = "float64", shape = (8, 5, 8))#candidate|4985|(8, 5, 8)|var|float64
uop_4986 = relay.tan(var_4985.astype('float64')) # shape=(8, 5, 8)
output = relay.Tuple([uop_4986,])
output2 = relay.Tuple([uop_4986,])
func_4988 = relay.Function([var_4985,], output)
mod['func_4988'] = func_4988
mod = relay.transform.InferType()(mod)
mutated_mod['func_4988'] = func_4988
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4989 = relay.var("var_4989", dtype = "float64", shape = (8, 5, 8))#candidate|4989|(8, 5, 8)|var|float64
func_4988_call = mutated_mod.get_global_var('func_4988')
call_4990 = func_4988_call(var_4989)
output = call_4990
func_4991 = relay.Function([var_4989], output)
mutated_mod['func_4991'] = func_4991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4540_call = mod.get_global_var('func_4540')
func_4542_call = mutated_mod.get_global_var('func_4542')
call_5006 = relay.TupleGetItem(func_4540_call(), 0)
call_5007 = relay.TupleGetItem(func_4542_call(), 0)
output = call_5006
output2 = call_5007
func_5038 = relay.Function([], output)
mod['func_5038'] = func_5038
mod = relay.transform.InferType()(mod)
mutated_mod['func_5038'] = func_5038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5038_call = mutated_mod.get_global_var('func_5038')
call_5039 = func_5038_call()
output = call_5039
func_5040 = relay.Function([], output)
mutated_mod['func_5040'] = func_5040
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5045 = relay.const([[[-3.705785,8.127289,4.949882,-9.350685,-5.180854,7.196784,-0.008387,7.639051,-8.922417,-6.476526,3.696104,4.277789,1.375487,8.524274,-0.456407],[-9.669139,-3.944987,2.850576,-4.029323,9.739192,4.313895,9.259122,4.624718,-2.175311,5.103458,8.355030,5.873679,4.016062,-5.508230,6.261864],[6.692118,4.418113,3.361613,0.898997,-8.040717,7.061846,6.699132,6.725676,2.838384,4.732852,-6.840898,3.472523,6.576399,-4.496498,1.041309],[-9.493110,9.715248,-8.262863,0.359470,-0.608083,2.216873,7.793420,6.428672,4.812594,8.219876,2.363969,5.322043,3.197771,6.892108,7.778342]],[[-4.408039,-0.624413,4.006779,-3.598616,-3.727608,2.721437,-9.153929,2.883424,3.868461,-2.567788,9.065019,0.133130,-0.006665,1.119372,-1.353178],[6.346173,4.372223,8.011125,-7.618555,6.828313,-6.593239,-5.005374,5.641321,-0.331879,2.431964,6.472605,2.101960,7.742787,-2.756426,1.744962],[0.261980,7.518610,-3.876457,-2.659314,-6.150882,-0.290174,-4.109279,-3.477446,-5.119518,-0.352922,6.596669,-9.791299,-2.195155,7.872226,-0.283372],[-7.778555,1.553009,-3.134408,-6.245124,-8.811588,-5.057002,5.065194,-2.774939,3.193518,2.006851,-7.687634,8.050829,3.835165,-3.207261,-4.246122]],[[2.895649,7.071395,-6.622232,6.316177,-8.886559,-9.369356,-3.998842,2.322771,6.296501,2.080943,-7.611479,7.838860,-2.160585,-7.576179,0.218702],[0.906846,9.541027,2.843002,8.764642,-6.081651,4.412380,-2.159522,-5.577573,-4.826284,-9.007487,-0.745321,0.803587,2.555585,-8.095779,-6.330006],[-9.872335,4.595057,-9.930353,-8.565304,4.002327,8.291494,1.615158,-9.726776,8.065342,8.358663,-3.068957,5.659156,6.677985,1.204323,-7.882881],[-6.110211,3.145698,-7.677111,-0.406065,8.797673,2.771914,-2.981348,5.828277,-0.487893,9.957344,-4.785432,-2.719313,0.578302,-5.973065,8.137465]],[[0.534096,-1.522232,4.574591,-0.559932,3.282171,3.053318,7.148312,1.013581,-3.151312,5.710083,1.085511,5.856526,7.777634,9.349598,8.146321],[-0.165193,-6.535549,-9.182064,2.927698,-6.464748,-9.867070,2.844559,2.243305,-9.465441,6.406320,-4.617402,-1.704688,-2.952641,-4.838096,6.792509],[-3.047944,-7.725077,-5.402614,3.722375,-4.745116,-9.576117,1.024908,-8.598245,-6.023558,0.683513,-9.269139,-5.570655,8.281643,4.179103,6.139226],[-1.915680,-8.198513,-4.073499,8.253579,0.626403,0.233724,-1.276915,2.074693,-2.995940,-8.582429,1.121608,9.113850,4.533993,-8.259970,-0.374935]],[[3.363256,-3.954272,-2.837253,5.101339,-5.136734,6.880994,-4.992181,-7.678797,-8.237534,-1.706762,-3.762452,4.499424,6.450786,8.578340,3.033593],[3.487012,-5.406875,0.314304,0.635744,-3.259883,9.418831,2.365256,5.267930,9.612962,-9.515072,-7.142942,-3.966724,-9.216764,-9.448533,0.904117],[-4.371089,9.129688,-0.413249,0.755247,3.794558,3.964457,8.682055,-8.750632,5.437156,-5.023060,9.842863,-8.543029,-8.225147,-2.393899,-3.118831],[3.165542,-0.993672,6.687941,2.557312,-4.139747,-5.536030,5.429720,2.322820,2.446394,5.789841,-8.529176,-0.539347,-2.152681,-5.061404,-2.615701]],[[9.078887,1.183175,-2.882270,-2.053829,6.422577,-4.158016,8.849859,3.205245,8.740904,8.765036,-2.937538,-9.306770,-7.952511,6.839907,3.120082],[-7.902905,2.270381,-1.660630,-2.213740,7.699259,-2.095356,-0.478391,0.687504,-8.560668,-9.391262,-3.278440,9.065531,5.296981,6.987461,-7.618008],[-2.661223,9.683918,-1.674746,4.815905,4.695821,-7.891444,-3.698191,8.068901,-1.370659,5.234789,5.310725,4.851540,-7.117399,-3.959561,-7.022532],[-8.053078,1.435809,-0.549740,1.170051,3.111109,7.046588,-7.603379,-2.826164,7.639279,0.534885,8.999956,-0.774031,-2.788033,1.878719,9.696198]],[[4.170146,8.198510,0.207088,3.459643,5.351472,7.864073,-7.841701,6.041452,1.565039,-7.139611,8.951516,1.621919,-0.103364,-0.440393,4.268827],[0.091120,6.673329,9.111272,8.845772,6.487960,6.383945,6.044528,1.536820,-8.486459,6.108500,3.620380,-5.289786,7.440979,-9.860546,7.197647],[6.011845,4.527822,9.137476,9.249679,5.253447,9.130948,-6.037201,-9.044751,3.289401,-0.840623,6.346461,2.771002,4.295629,1.482325,-5.213274],[4.146224,4.065663,-4.658076,3.164412,9.990007,8.365392,-6.155650,4.150338,1.614299,4.670870,-9.929728,5.547808,5.239225,-1.790644,4.046914]],[[2.021862,-8.976733,0.054808,9.478538,-9.684339,4.544793,4.472295,1.892081,-2.569076,-9.953122,5.065053,5.065276,-3.857517,8.912001,0.445934],[-0.688124,5.001066,8.184780,4.605058,7.080413,-4.263886,3.295470,-6.446958,-9.612727,7.169041,9.518001,9.475338,-0.754625,0.217794,-1.229374],[-7.533718,2.548466,3.168411,-3.794685,7.435032,1.906949,-8.798181,6.710614,9.285908,2.149239,-4.442491,1.632004,2.020664,-5.225516,3.212876],[8.855630,7.826466,5.113422,-2.431552,8.971380,-1.968137,9.707138,-8.670866,7.801690,-5.028819,-7.995813,2.172578,8.530028,4.186553,3.023611]],[[-7.279099,-6.179368,3.656192,4.862799,9.095855,5.652109,1.209012,-6.676988,-5.851650,9.805403,9.863004,3.739799,-8.326402,7.760628,-9.675662],[-7.037898,-0.132574,-1.544699,1.449738,9.591673,7.948271,-7.813244,2.424472,-0.207313,-4.386934,-6.500989,7.922396,3.324219,-9.725731,-5.357004],[4.878968,-4.611784,6.864678,-7.106854,-0.142461,-6.138242,-9.378450,-9.832073,8.585857,3.691545,-0.960057,4.588234,-1.032171,2.988103,-0.320590],[3.894575,4.093591,8.499936,9.529151,3.747048,6.405671,0.150295,-1.472823,2.697218,-8.266285,6.481779,-9.201901,-6.994965,7.687062,-6.205863]],[[6.548937,-7.264526,4.483294,-5.385652,1.677041,-9.245340,0.048275,-7.200822,3.447503,5.692706,1.426849,-5.073257,-5.107977,-6.845933,7.213501],[7.791499,-9.478894,9.425686,1.156352,-7.559023,6.397295,1.455077,-6.372798,-0.952164,1.333973,4.360847,-2.559500,-8.991523,1.150378,9.383166],[4.883732,2.384024,-6.523173,9.191093,-0.281822,-7.888321,-7.648433,-4.091685,9.340066,-1.746361,4.024381,4.008680,-4.778980,-6.587759,-1.198870],[-7.040248,-1.610237,-3.664903,-4.144584,-1.089734,1.711883,-1.891240,-5.959814,3.298362,9.821823,-6.145357,6.814228,-3.448139,5.593753,0.250705]],[[-0.529607,-0.311852,-1.238865,1.033665,-1.489838,4.444802,-7.274470,-8.976153,9.507333,6.741954,7.827619,7.493093,6.779516,-5.576879,-8.160546],[6.960415,1.933332,2.266561,-2.312557,-5.678734,-6.827971,-7.285804,4.555322,1.580230,-4.175140,5.259395,-1.106641,0.004008,4.841213,-3.573566],[9.129645,-7.495884,0.903037,-5.698319,0.290303,0.985541,2.020858,-5.802198,-4.249790,2.396262,-1.579251,-3.835234,0.800286,8.349735,-8.785615],[-7.178449,5.964019,-7.196397,-5.677764,-0.826749,-3.341554,2.584758,8.950341,-7.342204,2.305317,0.158407,2.223025,-0.724040,5.165877,6.736480]],[[5.361360,4.061431,-9.423996,-6.886612,6.939170,-0.203818,-4.845226,9.358401,-5.199012,2.655044,3.767714,4.099328,-9.471584,4.033446,4.951397],[7.316768,-6.998269,3.005678,0.170681,6.227390,-2.814044,-2.272105,8.000570,5.107660,9.340336,4.322889,7.957425,4.379958,-5.344929,7.969914],[1.128371,-9.333121,6.055910,9.943836,8.604013,6.251630,-0.679365,-3.930891,6.427836,9.816995,-0.521003,7.005493,-2.591583,-5.976805,6.170325],[-7.676470,-2.679741,-9.089189,6.019961,-5.244030,-8.608021,-2.741067,9.306331,-1.214997,-0.311093,-5.531037,-5.168522,-0.718116,-3.488535,6.142354]],[[-3.808426,3.816631,4.350625,7.930319,5.270167,9.235504,8.335246,-4.396794,3.147465,-8.174222,8.464214,-0.347286,-2.039352,-7.478397,7.649260],[3.160707,1.967770,0.701136,-1.435048,9.079546,-2.418792,-7.430218,8.675162,4.854082,3.435642,-5.292642,-7.272160,2.305434,-8.014979,2.498328],[1.358985,2.592847,7.755140,6.778532,5.635810,7.474136,-6.073441,-5.191871,0.101633,-9.268445,1.681430,6.579936,7.421458,-8.270524,-9.755186],[-2.721764,-4.645902,-5.603219,-1.383364,-3.213853,8.566189,3.688208,5.510197,1.584495,8.035149,5.276358,-9.537536,-3.483069,2.265758,5.073312]],[[4.573672,-5.530756,-4.935096,1.885222,-8.925654,-3.868419,-7.088443,9.295821,5.253874,-3.926693,-0.592067,4.458997,-2.587880,0.759407,4.086080],[7.732898,-5.610737,-7.690779,-0.533052,3.537785,3.715946,-9.372469,1.210169,7.865271,-2.068343,-0.970315,-2.910417,-4.600327,5.457972,-7.484348],[-4.596361,6.787449,5.606319,8.114647,-8.438458,0.963408,1.451696,3.019546,1.121520,6.550687,-6.046409,5.206527,-1.159207,5.923169,8.285641],[-5.752626,8.048404,-5.053621,1.256417,-2.378585,-7.122970,-1.561541,-7.081553,-7.963789,-4.984567,8.807794,1.442941,0.790335,-5.541975,-2.006568]]], dtype = "float32")#candidate|5045|(14, 4, 15)|const|float32
uop_5046 = relay.acos(const_5045.astype('float32')) # shape=(14, 4, 15)
func_3353_call = mod.get_global_var('func_3353')
func_3355_call = mutated_mod.get_global_var('func_3355')
call_5049 = func_3353_call()
call_5050 = func_3353_call()
output = relay.Tuple([uop_5046,call_5049,])
output2 = relay.Tuple([uop_5046,call_5050,])
func_5063 = relay.Function([], output)
mod['func_5063'] = func_5063
mod = relay.transform.InferType()(mod)
mutated_mod['func_5063'] = func_5063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5063_call = mutated_mod.get_global_var('func_5063')
call_5064 = func_5063_call()
output = call_5064
func_5065 = relay.Function([], output)
mutated_mod['func_5065'] = func_5065
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5173 = relay.const([[[8.864513,-8.827085,-1.340490,3.757387,-7.764728,8.336676,-6.281126,-2.149488,0.153645,1.127763,4.752910,-1.871756,-3.785964],[3.946893,-1.769490,-3.467494,-2.359144,2.119094,1.734523,-0.337364,-7.038240,-4.323764,7.401216,4.181952,6.868279,-9.206392],[-7.473660,-3.547075,-5.174394,-1.285216,-7.838080,-9.669764,2.944646,-6.154038,5.909881,1.632650,-9.538466,-0.335643,-6.988650],[-4.632073,0.179517,-4.650691,6.857200,-9.886449,2.152660,6.063869,7.911092,-1.463046,8.907162,-2.926241,4.859461,-2.623320],[0.460855,7.402908,-9.143217,2.226417,-5.498511,-3.575040,6.430611,9.366214,1.924370,-6.984768,6.371810,-7.176075,7.159757],[9.718070,-7.580356,9.933343,-2.858485,2.751608,-7.987639,-2.219816,-3.709177,5.031889,-1.409988,-6.382002,3.170577,-3.981779],[5.514769,3.845689,9.504226,-0.758752,-0.377677,-8.858671,-5.264805,-8.494973,-2.088873,-2.571011,7.450239,-3.068710,-3.830783],[3.630505,-5.614248,-8.249012,-7.558149,-2.439803,-3.565336,1.315612,-5.369195,-8.013457,9.620128,-5.437944,3.810665,4.918555],[-8.401154,-0.959109,-5.202203,-8.640825,-9.111884,4.051217,-0.081645,-1.692490,-8.213374,1.662284,8.990152,1.308723,-5.677952],[9.987881,-9.247485,-2.319027,-5.781455,-9.986945,0.572047,8.953562,1.415516,-2.958959,5.926703,6.634495,1.838568,-0.357756],[-6.198184,3.264598,2.447093,-0.037390,7.521421,-3.231332,-2.985451,2.846232,9.946342,9.879940,1.407243,-1.086820,-9.812237]],[[-6.720191,0.298133,0.982886,-6.446308,-8.323420,3.187680,-2.040296,-9.543697,-1.504742,1.522024,-6.132557,9.645502,7.197013],[5.311332,4.068733,0.324649,1.352532,-8.246998,-3.286387,-8.516562,6.994426,-3.426803,-6.880245,-8.632554,7.595290,-8.495079],[3.010939,0.297342,-6.651784,-6.854171,-9.622008,3.427083,-6.915569,-1.506946,5.272331,-0.267266,-5.104840,-7.743061,4.623834],[-9.384782,-8.217962,-7.196987,-7.001869,-7.821594,-2.293671,-8.797581,9.245609,8.534670,3.946511,-5.983489,-0.248633,5.945812],[3.663742,8.004896,3.996408,3.016701,6.767914,9.022421,3.786303,-7.557694,-6.532546,7.675943,2.684559,-5.295408,-6.823815],[3.529172,8.241891,-5.019652,-7.256404,6.262089,3.487639,0.874515,-6.980970,-9.671024,-7.355289,1.272720,3.690648,-1.085739],[6.272473,5.605498,-9.281209,-7.603311,-2.806480,-7.844586,0.625585,-3.301604,0.509158,9.958746,-9.157062,6.468731,-0.542388],[8.911203,6.060409,-0.421652,-2.862792,5.821676,-1.507149,-1.431104,-8.829515,6.338655,-7.851480,-4.270699,2.603472,7.046965],[4.843592,6.013009,-5.424373,9.588225,-8.507333,-0.475676,3.662291,1.592035,-3.707478,-5.750090,5.031217,-3.097104,6.534017],[6.380131,-1.289972,-5.553592,3.161959,1.415640,1.193900,-8.641297,8.067713,-8.235730,-6.849476,-3.820251,-8.401043,8.928726],[8.710794,6.935616,-8.562973,0.249626,-1.660984,-5.562679,4.417441,6.330331,-2.567512,0.244032,-5.036953,-6.292928,1.482209]],[[5.720018,-8.280479,9.070961,-7.251729,-7.238001,5.461051,8.202433,-3.688836,-5.025274,-9.778330,-5.555096,5.722615,-8.905946],[9.881328,-6.038617,7.277829,-1.255302,-7.515722,4.145655,5.996989,5.227821,-1.225635,-8.782041,-9.662033,-3.493335,-5.981348],[0.718711,-8.593999,5.852232,-1.460688,4.727590,-5.563290,9.733357,0.757017,3.708323,5.240720,-8.007686,-3.770812,-1.206635],[4.355644,5.396481,7.606129,4.082427,-1.695100,8.300895,-0.868018,-6.511447,9.990028,5.030622,7.412445,5.381691,2.528171],[-3.006630,-1.211339,-2.486306,8.360228,5.384651,-5.748543,2.914394,0.939231,8.856197,1.452146,-0.029498,-1.624974,9.357480],[3.402351,-8.854960,-6.537034,-9.090027,0.300845,-6.940428,-7.433623,9.683163,-5.716144,2.240208,5.472783,9.176352,-0.075949],[8.912939,2.812423,-2.110801,8.449761,8.081785,3.453596,-6.959689,-0.666796,-4.401945,-3.723251,4.077436,-7.761834,7.810376],[-9.020327,-0.192210,-5.256796,9.183973,-5.391365,-6.464796,-4.307115,-0.589865,4.556885,-4.772424,9.803910,-2.903390,-3.180322],[6.531268,-1.867207,-4.110967,5.130925,-6.169941,8.819293,-5.915970,2.725094,9.563641,-1.844852,-1.815998,1.604082,-0.501974],[5.307941,-8.614986,-2.691943,-6.221352,-4.005518,9.372544,8.724915,-8.101121,2.318979,-2.902461,4.320057,-9.512045,4.107800],[-8.816892,5.956878,-7.747972,8.514098,-2.861338,-9.193057,2.402189,-1.292408,-7.528081,-8.669812,-5.384866,7.244333,-3.127597]],[[-5.501901,5.338053,8.424463,-3.455943,-6.906654,1.405064,-6.719039,7.047317,-1.493700,4.392439,-1.700526,-1.760359,-7.089474],[-7.466158,-9.622966,8.800483,-4.235443,-0.942190,-7.842686,-0.071322,4.741752,-6.421764,-2.186013,-8.976763,-1.084565,1.145515],[-4.248744,3.074577,-8.240367,-0.042421,5.241099,5.845086,-6.758009,4.946757,5.123263,9.603885,-1.569878,-0.042255,-2.171519],[8.394929,-9.666887,1.534975,4.815954,-6.336642,-2.006567,-9.764506,-8.928743,7.524992,4.957663,1.214636,3.136854,-8.973421],[-9.188576,-7.480518,0.283279,-3.096259,-3.224196,-8.018733,-1.797073,3.627377,-4.885280,-3.343733,2.374470,2.593626,3.096436],[3.411202,-1.944804,-7.984224,-7.224466,7.900765,-2.080578,-7.768973,5.058361,-5.509322,7.967066,-3.352822,0.912172,-3.419935],[8.307691,-6.271010,-4.128226,9.395612,7.299686,1.344907,-5.672722,7.896772,-8.867805,9.612813,1.960681,-0.384905,3.593661],[-1.921657,5.417931,1.051136,-5.142278,1.960742,-0.115657,1.207950,-8.839083,3.645482,7.921426,-6.240766,-9.338964,9.181992],[6.820415,-9.926010,8.074578,-4.690757,6.241178,0.074167,4.211402,-6.962453,9.899168,8.198661,5.268091,-5.087347,8.669276],[-2.350838,-0.301384,8.134492,6.679103,-8.118827,-1.018536,-1.339561,-3.124593,-1.224208,-5.289229,9.378342,-5.025703,-2.365164],[-7.510549,4.578155,8.423503,3.213143,0.876618,9.427977,2.577713,7.626309,-3.195850,7.380448,4.082587,-7.220259,5.793071]]], dtype = "float32")#candidate|5173|(4, 11, 13)|const|float32
uop_5174 = relay.atanh(const_5173.astype('float32')) # shape=(4, 11, 13)
func_398_call = mod.get_global_var('func_398')
func_402_call = mutated_mod.get_global_var('func_402')
var_5192 = relay.var("var_5192", dtype = "int8", shape = (16,))#candidate|5192|(16,)|var|int8
call_5191 = relay.TupleGetItem(func_398_call(relay.reshape(var_5192.astype('int8'), [2, 4, 2]), relay.reshape(var_5192.astype('int8'), [2, 4, 2]), ), 0)
call_5193 = relay.TupleGetItem(func_402_call(relay.reshape(var_5192.astype('int8'), [2, 4, 2]), relay.reshape(var_5192.astype('int8'), [2, 4, 2]), ), 0)
output = relay.Tuple([uop_5174,call_5191,var_5192,])
output2 = relay.Tuple([uop_5174,call_5193,var_5192,])
func_5194 = relay.Function([var_5192,], output)
mod['func_5194'] = func_5194
mod = relay.transform.InferType()(mod)
var_5195 = relay.var("var_5195", dtype = "int8", shape = (16,))#candidate|5195|(16,)|var|int8
output = func_5194(var_5195)
func_5196 = relay.Function([var_5195], output)
mutated_mod['func_5196'] = func_5196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3487_call = mod.get_global_var('func_3487')
func_3488_call = mutated_mod.get_global_var('func_3488')
call_5241 = relay.TupleGetItem(func_3487_call(), 0)
call_5242 = relay.TupleGetItem(func_3488_call(), 0)
func_4988_call = mod.get_global_var('func_4988')
func_4991_call = mutated_mod.get_global_var('func_4991')
const_5245 = relay.const([7.560184,-4.565646,-8.958816,-4.398360,6.591986,-9.740784,2.402612,1.046074,-9.641134,-9.077023,-7.172144,1.691796,-2.418066,1.269766,-5.905124,8.221921,-6.202583,-3.181555,-4.004951,3.560598,-5.481883,6.515544,-4.090712,5.878980,-5.753252,-4.987166,8.433605,-5.236000,2.098472,-7.609115,-5.031754,2.385948,3.944392,5.553785,-2.356740,-2.341771,-7.879427,-2.577452,-2.604528,-6.820846,-4.712080,3.570474,-3.635644,5.749872,-9.101957,-2.308979,0.914227,0.871734,8.946279,-8.509702,5.051286,-9.665683,-0.408764,-0.774517,5.333972,-8.687890,8.232823,1.976130,4.356917,5.787511,-6.473456,-9.718501,9.070283,4.437695,6.717168,-9.881267,-0.771205,-9.542820,-5.628076,2.029893,7.608037,0.676955,-4.913243,5.541963,8.833264,0.594329,-4.277572,8.825638,3.503500,-8.232177,-2.102778,2.297872,5.353819,4.484588,-9.554285,2.035458,-6.033363,-5.263167,-1.912416,2.058451,-6.328505,0.872905,-5.679718,-3.027413,1.571220,-9.722609,0.431627,-6.097782,-6.404612,-8.164050,4.486523,-4.806871,-0.128988,-3.831775,-5.659549,-4.538438,-7.324509,1.213812,-4.611851,-4.320107,-5.156357,1.121956,-3.649746,6.455804,-4.134771,7.247067,0.656883,8.549745,-0.768825,-2.735161,6.451620,8.009404,1.120792,2.026445,-6.870679,9.615095,-5.990264,-4.949962,0.019886,1.536456,-2.990555,8.903207,4.110832,4.411202,-8.093560,-0.120379,6.493064,9.408045,9.943968,-3.293175,-0.319136,-1.511707,9.269277,3.992521,-8.696535,-6.958603,6.557218,8.640063,-1.518676,-5.355860,-1.706981,0.588917,-3.367704,-8.320193,4.074356,2.888738,8.083339,-0.579598,-9.241886,0.539144,7.773254,3.478524,5.287286,4.832134,-3.401610,-0.382847,-7.174081,-5.548331,-1.703609,-9.768604,9.826036,4.466264,-4.532169,7.102954,7.425023,8.376337,-7.622375,0.919115,1.171829,-1.313431,-0.569937,2.733327,-0.212583,2.618475,-4.539962,-8.871981,9.489211,-0.675719,3.892301,-4.048808,-5.281170,8.985970,2.805657,-9.689172,8.054267,-3.626109,3.705712,1.219646,1.011176,-5.088493,-3.521244,9.702998,-7.855124,6.268418,-3.329922,-7.732522,-0.281722,6.863217,-7.061411,-2.343262,-6.340304,3.910310,-8.757271,4.014860,0.060231,-9.272330,-0.468727,0.300426,4.847263,1.033540,1.185639,5.253034,6.534078,3.104582,-5.901251,-4.217197,-1.013792,3.562844,-0.952016,-0.326986,-0.119663,0.557362,-0.108644,-9.046687,-9.494092,0.237817,5.892651,2.551650,-8.783268,3.475532,-1.597835,4.377576,9.237217,-4.743326,-1.427114,-8.269255,9.046665,3.823865,-1.054882,7.746780,6.790876,-9.499061,5.800134,-2.344667,-7.973302,0.260452,3.529551,6.423404,2.038568,-5.202523,-6.294199,-8.754955,-1.953690,-6.879331,5.743627,7.524545,-6.200532,-5.814470,3.251572,5.587695,-3.676979,6.429076,-8.404263,-2.911102,-3.413667,6.603353,4.159317,-6.175692,0.329794,3.657251,-6.853462,-8.433006,-5.861440,7.502833,6.450435,-7.579440,9.499660,1.188122,-1.699629,0.755537,-1.371332,-4.633995,-7.733483,3.080610,1.158278,6.349362,-2.785906,-1.901696,-1.128181,-9.541759,6.957754,3.672931,-2.616012,-0.142475,-7.085500,1.033903,-6.889012,9.088220,-4.383642,-8.297743,1.538596,-5.950319,2.535719,-4.660164,-0.027164,6.551152,8.447406,-9.694144,4.460396,3.668981], dtype = "float64")#candidate|5245|(320,)|const|float64
call_5244 = relay.TupleGetItem(func_4988_call(relay.reshape(const_5245.astype('float64'), [8, 5, 8])), 0)
call_5246 = relay.TupleGetItem(func_4991_call(relay.reshape(const_5245.astype('float64'), [8, 5, 8])), 0)
func_2436_call = mod.get_global_var('func_2436')
func_2440_call = mutated_mod.get_global_var('func_2440')
const_5254 = relay.const(-8.005387, dtype = "float32")#candidate|5254|()|const|float32
const_5255 = relay.const([-3.152676,-8.791860,-1.535977,3.828940,-5.421419,4.825683,1.968205,5.842288,7.309173,2.466980,-6.927806,-1.766933,-2.221486,4.627645,0.263158,-8.631090,3.810991,-6.184812,5.993622,6.960812,-5.762575,5.163265,-6.177405,2.222275,-6.442598,-0.729638,-7.657931,-9.529929,6.720576,-6.002022], dtype = "float32")#candidate|5255|(30,)|const|float32
call_5253 = relay.TupleGetItem(func_2436_call(relay.reshape(const_5254.astype('float32'), []), relay.reshape(const_5255.astype('float32'), [30,]), ), 2)
call_5256 = relay.TupleGetItem(func_2440_call(relay.reshape(const_5254.astype('float32'), []), relay.reshape(const_5255.astype('float32'), [30,]), ), 2)
output = relay.Tuple([call_5241,call_5244,const_5245,call_5253,const_5254,const_5255,])
output2 = relay.Tuple([call_5242,call_5246,const_5245,call_5256,const_5254,const_5255,])
func_5259 = relay.Function([], output)
mod['func_5259'] = func_5259
mod = relay.transform.InferType()(mod)
mutated_mod['func_5259'] = func_5259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5259_call = mutated_mod.get_global_var('func_5259')
call_5260 = func_5259_call()
output = call_5260
func_5261 = relay.Function([], output)
mutated_mod['func_5261'] = func_5261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_5280 = relay.TupleGetItem(func_2975_call(), 0)
call_5281 = relay.TupleGetItem(func_2976_call(), 0)
func_3505_call = mod.get_global_var('func_3505')
func_3507_call = mutated_mod.get_global_var('func_3507')
call_5285 = func_3505_call()
call_5286 = func_3505_call()
uop_5291 = relay.sqrt(call_5285.astype('float32')) # shape=(6, 16, 8)
uop_5293 = relay.sqrt(call_5286.astype('float32')) # shape=(6, 16, 8)
output = relay.Tuple([call_5280,uop_5291,])
output2 = relay.Tuple([call_5281,uop_5293,])
func_5305 = relay.Function([], output)
mod['func_5305'] = func_5305
mod = relay.transform.InferType()(mod)
output = func_5305()
func_5306 = relay.Function([], output)
mutated_mod['func_5306'] = func_5306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3426_call = mod.get_global_var('func_3426')
func_3428_call = mutated_mod.get_global_var('func_3428')
call_5335 = relay.TupleGetItem(func_3426_call(), 0)
call_5336 = relay.TupleGetItem(func_3428_call(), 0)
output = relay.Tuple([call_5335,])
output2 = relay.Tuple([call_5336,])
func_5352 = relay.Function([], output)
mod['func_5352'] = func_5352
mod = relay.transform.InferType()(mod)
output = func_5352()
func_5353 = relay.Function([], output)
mutated_mod['func_5353'] = func_5353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3505_call = mod.get_global_var('func_3505')
func_3507_call = mutated_mod.get_global_var('func_3507')
call_5368 = func_3505_call()
call_5369 = func_3505_call()
output = call_5368
output2 = call_5369
func_5375 = relay.Function([], output)
mod['func_5375'] = func_5375
mod = relay.transform.InferType()(mod)
mutated_mod['func_5375'] = func_5375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5375_call = mutated_mod.get_global_var('func_5375')
call_5376 = func_5375_call()
output = call_5376
func_5377 = relay.Function([], output)
mutated_mod['func_5377'] = func_5377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3832_call = mod.get_global_var('func_3832')
func_3833_call = mutated_mod.get_global_var('func_3833')
call_5394 = func_3832_call()
call_5395 = func_3832_call()
output = call_5394
output2 = call_5395
func_5410 = relay.Function([], output)
mod['func_5410'] = func_5410
mod = relay.transform.InferType()(mod)
mutated_mod['func_5410'] = func_5410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5410_call = mutated_mod.get_global_var('func_5410')
call_5411 = func_5410_call()
output = call_5411
func_5412 = relay.Function([], output)
mutated_mod['func_5412'] = func_5412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2651_call = mod.get_global_var('func_2651')
func_2653_call = mutated_mod.get_global_var('func_2653')
call_5553 = relay.TupleGetItem(func_2651_call(), 0)
call_5554 = relay.TupleGetItem(func_2653_call(), 0)
output = call_5553
output2 = call_5554
func_5555 = relay.Function([], output)
mod['func_5555'] = func_5555
mod = relay.transform.InferType()(mod)
mutated_mod['func_5555'] = func_5555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5555_call = mutated_mod.get_global_var('func_5555')
call_5556 = func_5555_call()
output = call_5556
func_5557 = relay.Function([], output)
mutated_mod['func_5557'] = func_5557
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5577 = relay.var("var_5577", dtype = "int16", shape = (3, 12, 11))#candidate|5577|(3, 12, 11)|var|int16
var_5578 = relay.var("var_5578", dtype = "int16", shape = (3, 12, 11))#candidate|5578|(3, 12, 11)|var|int16
bop_5579 = relay.right_shift(var_5577.astype('int16'), relay.reshape(var_5578.astype('int16'), relay.shape_of(var_5577))) # shape=(3, 12, 11)
func_958_call = mod.get_global_var('func_958')
func_960_call = mutated_mod.get_global_var('func_960')
const_5583 = relay.const([-1.124639,5.612948,9.622748,-5.161346,3.411107,1.990303,-5.146778,-8.735937,-6.449674,0.143258,8.340085,-1.478292,5.314276,5.780329,4.871262,-5.286048,6.320966,-1.976305,-5.593513,3.835834,2.070312,3.221281,9.302248,4.047198,-7.242700,2.223852,0.100286,5.892535,-5.961408,-6.943032,-4.583821,-9.634877,-5.994593,-7.827425,8.713325,-7.819677,-0.854376,-7.796025,4.220545,-8.495645,-3.207354,-4.523911,7.267676,8.088412,-7.284768,-6.547756,-1.279473,-5.080950,0.164187,6.471386,3.307352,4.649482,4.915593,1.518420,-8.728618,6.728909,3.769216,-0.515228,2.506661,-7.187286,8.336610,-4.210723,1.755586,6.432016,6.298525,1.465617,-4.390342,-9.492791,-8.664739,3.811592,6.675571,-7.703369,-4.078262,-4.002649,-6.992492,6.060652,9.890421,4.385354,4.336399,2.380177,7.746181,9.620165,3.183694,-8.893624,5.552986,-2.097562,-9.598688,2.954583,-6.633422,-0.068192,-9.719167,-0.385903,1.770731,5.619930,-8.762642,2.438980,6.310990,-5.631135,-9.385321,0.933524,-6.026420,1.641525,-3.109248,6.677126,-4.531852,4.825397,8.619390,-7.106630,0.461673,6.870554,-3.227026,7.720309,6.637164,-1.606141,-1.734606,4.024658,-6.525088,9.495438,9.328817,2.921341,-1.813135,6.192339,-8.644908,-0.718344,4.422546,-6.042338,-9.048579,5.275398,9.388773,-0.579303,2.295654,-6.431118,-3.223342,-9.168574,-5.700335,4.241339,-6.313994,-0.324573,-9.776380,-9.106984,8.594810,2.785742,2.249332,3.414862,-0.003135,-7.463205,-4.615346,5.177962,3.714648,-8.243789,2.522155,-8.634728,-5.208250,0.106593,-2.092952,-7.875020,-0.106216,0.833341,6.309149,-9.553504,-2.270284,8.431597,8.015856,0.023488,3.150398,-1.080075,5.751597,-7.666244,1.066908,-0.020659,-9.878551,2.358080,-8.016145,-4.413600,-8.179466,-3.694217,6.201687,1.506363,-7.799241,8.935565,-6.439830,5.713120,7.190396,-5.451606,4.067675,-0.770162,5.491439,-3.436780,-6.500591,6.486615,0.750330,-1.190434,-6.619278,9.288684,-4.276218,-1.826606,-3.851075,9.925242,1.141952,-2.212100,-3.578876,-1.107375,5.524496,-1.879036,2.491345,-7.457424,8.194652,-3.513703,-6.704441,-5.182938,-0.144275,7.469281,-6.624150,-9.763625,-5.591814,-6.745665,2.617806,7.492941,3.048481,3.665486,8.184235,3.799808,-0.792070,-6.091763,5.166149,1.607369,2.757490,-0.927719,3.274168,-1.443732,-2.215668,6.604523,3.364903,-3.666036,-2.689947,-6.379674,6.635020,-6.427379,6.366948,-7.012751,1.128331,-2.509644,-4.435694,5.167202,-2.989326,-9.767434,-7.184196,-8.527979,-8.462176,8.194067,-0.791759,-4.220614,8.307058,2.745231,-7.294184,-2.862615,-4.629690,-1.130219,1.841457,-2.413623,2.453626,-5.002439,-0.662176,-0.453358,9.630011,8.159307,6.591593,0.124630,-0.878899,4.420870,-4.747217,1.163561,-2.228647,-3.189274,5.614752,3.423371,6.244989,-1.355771,7.982320,-6.847014,-6.404567,-6.838944,8.120796,1.789471,6.830409,-6.395721,-7.817872,-0.451186,-3.070102,-0.270121,1.212015,-6.464697,-3.277809,9.266632,7.104198,-0.338296,6.504484,1.669182,7.645623,3.874098,8.250392,-1.012905,9.249137,2.771151,1.572551,1.916153,9.830646,6.018621,-1.213139,4.711032,-3.456060,-7.248384,9.871919,5.468041,-1.133795,5.130600,-0.404288,1.903387,-9.779904,3.084001,-8.286680,-5.258732,6.194931,1.168150,-3.930090,0.300962,4.409236,9.241498,-6.939098,6.919201], dtype = "float32")#candidate|5583|(330,)|const|float32
call_5582 = func_958_call(relay.reshape(const_5583.astype('float32'), [2, 15, 11]))
call_5584 = func_958_call(relay.reshape(const_5583.astype('float32'), [2, 15, 11]))
output = relay.Tuple([bop_5579,call_5582,const_5583,])
output2 = relay.Tuple([bop_5579,call_5584,const_5583,])
func_5586 = relay.Function([var_5577,var_5578,], output)
mod['func_5586'] = func_5586
mod = relay.transform.InferType()(mod)
mutated_mod['func_5586'] = func_5586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5586_call = mutated_mod.get_global_var('func_5586')
var_5588 = relay.var("var_5588", dtype = "int16", shape = (3, 12, 11))#candidate|5588|(3, 12, 11)|var|int16
var_5589 = relay.var("var_5589", dtype = "int16", shape = (3, 12, 11))#candidate|5589|(3, 12, 11)|var|int16
call_5587 = func_5586_call(var_5588,var_5589,)
output = call_5587
func_5590 = relay.Function([var_5588,var_5589,], output)
mutated_mod['func_5590'] = func_5590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5643 = relay.var("var_5643", dtype = "int32", shape = ())#candidate|5643|()|var|int32
var_5644 = relay.var("var_5644", dtype = "int32", shape = (13, 12, 10))#candidate|5644|(13, 12, 10)|var|int32
bop_5645 = relay.subtract(var_5643.astype('int32'), var_5644.astype('int32')) # shape=(13, 12, 10)
output = bop_5645
output2 = bop_5645
func_5648 = relay.Function([var_5643,var_5644,], output)
mod['func_5648'] = func_5648
mod = relay.transform.InferType()(mod)
var_5649 = relay.var("var_5649", dtype = "int32", shape = ())#candidate|5649|()|var|int32
var_5650 = relay.var("var_5650", dtype = "int32", shape = (13, 12, 10))#candidate|5650|(13, 12, 10)|var|int32
output = func_5648(var_5649,var_5650,)
func_5651 = relay.Function([var_5649,var_5650,], output)
mutated_mod['func_5651'] = func_5651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3487_call = mod.get_global_var('func_3487')
func_3488_call = mutated_mod.get_global_var('func_3488')
call_5719 = relay.TupleGetItem(func_3487_call(), 0)
call_5720 = relay.TupleGetItem(func_3488_call(), 0)
func_3224_call = mod.get_global_var('func_3224')
func_3228_call = mutated_mod.get_global_var('func_3228')
const_5726 = relay.const([[-1.365276,-6.173900,-1.759923,1.657337,7.261935,-5.861969,-5.361316,6.992079,8.603107,5.782040,9.620544,-0.714785,7.089151,-7.886882,5.767616,-5.645860,2.369565,6.699493,6.204935,8.034041,3.969884,-4.408986,7.201299,9.586947,-0.843377,-7.232998,-3.233662,0.246142,-2.812885,3.529451,2.626051,3.253770,-3.324540,6.367269,5.783241,-0.610285,-0.208864,5.143451,-8.004892,-6.327386,2.240798,0.149608,-5.799463,5.644910,-6.501903,-6.444598,-4.680607,9.188668,6.325539,-0.706014,7.867664,5.233541,-3.261380,5.678785,5.955625,8.384924,4.443259,-8.416566,9.816686,-0.514636,8.356959,-1.067842,5.762765,-0.187464,-2.431224,0.920329,-3.134899,7.129487,2.496173,9.405827,-2.501374,3.525061,4.911570,8.224327,7.014045,9.022333,0.945276,-4.585764,4.869186,6.465115,-8.857530,3.761608,8.117136,9.911020,6.850314,-2.068196,3.713692,3.831864,5.763721,-6.014186,7.528632,7.148261,7.833567,1.070858,2.791408,-3.442078,5.840009,-8.282255,-4.108390,-6.980070,-7.531250,7.530222,-4.029154,1.455495,-3.894416,2.422758,5.878294,-6.217221,-9.992967,5.559755,-4.488363,2.617186,9.515459,-4.603421,4.078880,2.072990,5.471654,-7.173322,-9.835159,-9.663559,2.501168,-6.452246,-2.529559,5.198381,-0.085394,-9.637341,-2.651236,-5.520173,5.323244,2.822262,9.149504,7.260571,7.184232,2.124186,8.629580,-9.722654,4.286728,6.736205,1.799636,-8.909921,5.425784,-9.637366,8.705589,6.649048,-3.042625,4.618989,6.702193,-7.845411,-9.482281,-3.070008,7.836586,-1.816757,1.100815,0.829542,-9.425327,-7.072203,-9.890269,9.699210,-8.776140,1.222568,1.448502,-2.309243,2.485044,-3.394656,-8.266077,6.870133,6.765150,-1.893994,4.212437,-9.487718,-2.986175,4.797499,4.569185,-0.934276,9.160201,-6.546178,-5.610423,0.329280,-5.677971,-5.551351,7.602167,-7.715518,9.502063,4.436286,-7.129709,2.271792,9.399139,-1.187121,2.530068,-6.821168,-6.445302,-8.006325,3.774488,-7.977214,4.609958,4.124198,-9.136581,8.564384,-2.604748,-6.641578,-8.101699,8.902851,-1.680311,2.485824,-6.086912,-4.449806,-2.153353,-4.394275,-3.289093,1.036101,7.804695,-6.191309,5.093348,1.010557,8.035303,-3.923097,5.002751,0.373249,2.717584,-7.902691,-3.941542,-0.413660,0.293539,-1.553772,6.513510,2.134531,-2.729192,-4.009498,4.178424,-0.025757,9.194833,6.416752,-4.750708,-8.553377,9.293879,-4.185008,3.823398,-4.468930,3.578797,4.996702,3.276908,6.636296,-1.631748,1.049599,2.048150,-1.681093,-9.192409,-0.347581,-8.515274,0.900065,7.919031,4.380455,-0.052750,5.000250,1.219109,9.310542,4.649663,-5.153100,-9.107625,0.138518,6.655073,0.193314,8.564174,6.160304,-5.381398,1.926966,-8.169275,4.927768,6.976882,-4.289655,6.384740,9.475037,-4.259687,-4.880853,9.080813,-5.937495,-1.607882,-8.451787,5.209840,3.678097,-0.591905,2.630594,-5.477905,-9.062851,8.174022,-4.824380,-9.585623,2.224795,1.117215,2.107311,-2.857515,-1.800923,1.286166,-1.478975,-9.614246,8.480294,6.009315,4.855897,6.915341,4.975480,-5.719721,8.493303,1.729358,1.655507,-8.694609,2.557621,-3.543312,1.888618,-3.529353,7.151184,-0.119132,-5.298581,4.193706,8.222259,2.311064,-6.005059,-7.915787,-0.011443,-3.543727,-1.292778,-6.389705,2.087948,5.353487,1.837222,0.123438,-6.767713,1.470431,0.131409,-1.705799,0.513772,9.081427,7.142387,3.368171,6.509556,0.386670,-0.642057,6.355603,0.130259,8.080612,-8.069978,6.208500,-0.869482,2.598593,1.827396,-0.093819,3.482032,-0.725002,7.018745,-8.646863,-7.750381,-4.093676,-0.734136,-1.971947,0.093461,-2.239959,-7.122549,-4.328493,-9.318133,-5.921457,-5.869903,-1.049958,-6.278067,-5.743190,-2.186298,-3.902728,2.960830,4.658302,-6.685192,3.257715,5.526061,-1.822884,6.240591,-6.588673,-8.683183,8.626407,6.320643,6.941727,0.364583,5.066855,-5.171434,-2.391800,0.102826,3.614820,3.704191,9.239482,-2.836241,7.728060,-2.231833,3.020076,-2.247519,8.857803,-0.087299,-5.633794,3.769409,6.245109,4.244116,1.479928,-4.213875,6.285112,6.048165,-2.815361,-1.259028,8.604696,-8.578806,2.167490,5.382915,-5.592074,0.412615,6.722796,5.430485,7.877053,-9.670322,5.374767,4.719520,0.235369,6.965684,4.093228,6.167307,-8.797103,1.061968,-1.645259,8.947312,8.227698,5.166182,9.395048,0.624054,-0.963434,1.773278,-6.211213,-4.741986,3.936043,-4.320196,3.447965,4.596382,7.562064,9.770849,7.324330,-9.348345,-1.586739,-6.087475,-0.439211,-7.914664,0.063615,-0.029053,-3.489308,0.028953,-9.092722,-6.312992,3.365249,-4.826909,5.318605,0.181932,-4.619736,4.793256,0.797677,-4.789008,1.922421,-2.022857,-8.839020,3.850247,2.804749,-9.247986,-2.160219,1.309100,-0.224435,-6.699522,-5.396493,-0.094975,4.880427,8.867606,4.710964,0.500727,-6.282768,-9.264306,-5.206990,8.251713,-7.496681,-9.733721,6.335759,7.387553,8.672846,0.618644,9.352065,-0.975613,8.883578,2.609024,9.339351,6.921383,1.934001,-0.508504,9.069948,6.847267,4.608536,-2.014888,-0.728961,-3.218533,6.379614,6.208523,8.520276,-7.197670,5.574647,-0.754263,-5.590950,-9.001077,4.101962,0.516363,-4.138419,-6.342941,-7.751501,-2.077570,-4.073726,-6.104372,-9.630621,-2.596252,7.937237,-6.760842,7.019748,9.903626,5.073339,6.049192,-1.471177,6.126507,3.095598,-8.444123,0.354958,-6.492740,2.452211,4.652719,-1.463404,-1.452251,-9.384232,-4.906889,1.908198,8.991891,8.182781,8.335358,-4.308177,1.305130,-4.232802,2.595045,-3.137489,-6.765759,4.383084,-7.978115,0.470024,9.683969,4.064476,6.473866,-1.575005,7.181580,7.292125,8.054176,-8.599850,-9.052926,7.748312,-8.545068,8.528191,7.458632,-2.186318,6.899441,-4.565473,-9.839871,-3.491957,-4.603359,-2.031410,8.512992,-1.428386,2.177148,6.287892,-0.535443,-5.104288,-2.377669,7.601457,-3.548879,2.331376,8.314786,-3.285735,-0.714935,-1.793089,4.981169,-9.914977,-3.830628,-2.762859,9.924679,1.257479,-8.468113,-3.336404,-2.403947,-9.524490,-7.989836,-3.397285,-2.367318,2.076149,5.621019,7.143951,-3.806578,1.495557,3.109898,1.916531,2.264237,-4.631606,-2.521850,2.792346,-8.057126,9.188501,5.622088,-3.786703,-5.340036,-8.888123,0.441268,3.168042,-7.796711,7.625047,-0.204822,-1.603108,7.376596,6.623214,-9.221942,-0.352512,-8.202324,6.045615,2.680075,4.312493,7.353569,-8.137728,-8.301214,-3.016365,-3.064848,-1.099005,-4.325736,5.701924,7.655953,8.536551,4.718879,-6.528542,3.129049,2.841762,8.359489,6.879106,7.561888,-1.328388,0.604121,-5.479323,-2.369454,-1.540184,4.188321,-8.020522,-1.741895,-7.732924,-2.520146,3.547431,-4.539809,-0.698681,-3.424663,-9.012028,2.671460,3.496611,-2.417490,2.533246,-8.876395,5.668518,9.203497,-8.733173,-3.374606,8.935125,5.498164,-3.551871,2.378458,6.914706,-7.725236,4.414896,-1.430389,-2.562447,-9.272114,1.707857,2.028127,7.055074,4.431583,-6.033831,-9.948959,-5.040297,9.826459,-9.171193,3.600171,-4.566435,3.468298,-6.729329,-6.616172,-9.264188,-7.570828,4.752934,6.756288,-1.226882,-1.384230,-0.230189,-0.365166,-8.167743,0.850171,-3.280281,-5.317548,3.312759,7.936337,-6.939294,-5.709070,-2.835241,-0.324810,5.644540,-0.806855,-3.150228,-3.649979,-7.106784,0.992096,-7.820970,2.069933,-7.574484,6.487299,1.748553,5.920957,-0.611775,2.856710,-2.719084,-4.762736,7.258235,2.365652,3.842300,-9.629171,-2.502997,-5.412652,-8.794727,9.892296,-5.877030,-4.902593,9.155179,4.958625,-7.847585,0.374229,-7.081008,-2.594204,-6.694734,-8.910482,6.231430,7.128105,-1.155765,7.568842,4.259554,5.287970,7.823526,-7.604316,0.975139,4.716767,-0.483040,-6.756308,-7.112872,-9.631819,-2.281881,6.969758,8.810953,9.322374,-1.987169,-6.349240,-5.607477,4.244207,-0.733168,-3.718619,1.262718,7.082033,-6.325293,3.053781,-0.118729,-3.572671,-9.185630,-0.522004,-1.526917,5.984638,-7.591953,0.840804,-8.745518,9.357830,-8.893216,-3.942016,6.322587,7.494391,-2.589953,-2.222109,-7.271190,0.285964,-7.863041,-9.803377,-7.284799,-5.272627,4.931847,3.598046,-4.603388,-8.265382,-1.578536,2.940678,-2.015021,-7.806827,5.559799,0.525249,3.448349,-9.360823,5.263511,-6.255113,-9.649725,-3.133519,-5.859073,7.836227,-4.090613,0.122912,4.548402,-8.008176,2.152497,-1.206987,-3.216427,-7.990600,-3.710195,5.582984,0.817559,4.088463,-8.773369,-6.083738,1.295759,-0.373853,7.811039,5.928610,-5.153876,7.303369,-5.422165,-0.220104,1.164180,-0.396573,3.768452,8.687985,1.571178,-1.465137,2.636981,5.300444,3.207677,-9.780747,6.047051,1.335477,-0.571391,-8.991688,-5.553924,4.107357,2.110665,8.180642,2.185090,-2.284039,-3.060375,0.494303,9.618754,-7.121900,-6.441604,4.715191,-1.164611,3.002736,9.024933,1.728386,-2.536757,-1.364664,-6.071658,-2.339204,-3.228937,5.284105,1.162810,-0.131204,8.970839,2.160819,-3.500195,7.436462,6.291423,6.965797,-9.313888,-3.000670,4.605991,3.214176,1.290984,4.460374,-4.444573,-3.219406,7.747418,-9.195990,2.631761,-6.879669,-2.285855,6.835754,-3.419108,2.955966,9.297084,3.576968,-3.217195,1.225138,-6.858420,0.019792,3.138330,3.281834,6.027338,0.129492,6.331152,-5.553329,8.787918,-7.555613,-1.578537,0.366543,6.502844,-3.914602,6.097494,1.003834,-3.139681,-2.701696,-9.918558,3.531972,0.740814,5.687283,-6.360045,-0.618985,3.385335,-4.222936,-2.221506,6.931263,-4.535793,8.079839,3.396925,-5.448928,-1.118125,4.479854,-6.225104,-4.934348,0.079629,-4.494379,0.015194,-9.117945,1.307450,-7.160199,-1.153746,-3.417261,9.018841,-4.881654,-4.629507,-3.931883,4.593527,-2.004577,-2.038263,8.189721,-4.713106,-5.594742,-0.803079,-3.034448,0.080108,-7.709820,-1.054543,-0.885312,-0.297377,2.105544,4.753191,7.597556,0.064328,-2.411835,-0.019403,-2.495114,-7.279292,-7.462812,3.453274,-6.598270,5.473319,-6.108788,2.816810,9.952938,0.640208,2.649179,1.895670,2.146926,-8.809872,-5.447671,0.274678,7.060799,5.132046,-2.495496,-2.043268,6.048457,1.858020,2.717663,7.865969,9.426099,8.766982,0.704547,7.844427,-8.294792,9.912702,3.727428,0.618760,-0.095535,-0.004520,5.325032,2.231198,5.267980,-3.707834,-2.233447,9.854503,-0.722580,-2.374266,4.507019,-1.876584,2.056637,6.114354,-3.031206,6.556867,4.671248,2.219416,-9.350511,-8.467617,-9.917638,-0.683325,-7.449719,-1.768723,9.474571,-4.828562,-1.341440,-6.131483,-6.747382,-0.024846,-4.438715,6.368774,-4.981926,-3.131611,-8.211870,-3.012342,2.626360,4.288336,-9.808267,-9.532286,-8.740281,2.014773,0.820378,-6.064946,0.961103,-1.036069,-8.122771,9.690972,-7.507030,7.692232,-9.935998,6.235602,-7.883958,3.768609,-6.170551,-0.134255,8.201820,-5.672167,8.898526,-7.714545,7.476874,-8.609056,5.503133,-3.432149,0.041407,-2.282702,5.119011,1.049911,-8.398301,3.183022,-6.064752,6.100748,3.931851,-5.223879,-4.901468,0.566680,8.874187,4.843995,6.437590,2.921224,5.855024,8.875466,8.289482,-3.989543,9.233803,2.541666,-6.464345,2.045648,-9.599210,-0.401266,0.026166,-0.406625,-0.697370,7.952293,-9.408553,-1.570342,-2.401557,-8.351970,0.743542,7.438369,-1.229293,-7.826906,8.840270,-9.230815,-6.995105,-5.638296,-8.842771,-6.137929,-0.972852,8.859916,-2.785608,-5.593274,7.467827,4.354867,6.238567,1.195092,6.081034,-5.084736,-7.276697,-5.420962,-3.496792,-3.023804,9.318957,0.239415,-6.287586,-0.820106,-5.736060,1.869163,-2.693021,-6.794794,2.898125,3.411164,-4.321327,8.998550,1.004166,0.540163,-5.983876,-1.384007,-4.720111,7.861717,-2.704019,-9.468988,-3.083355,-2.805491,-8.091705,-5.836337,1.912454,-6.089230,-0.770683,-3.044879,1.644514,8.895998,7.750605,5.623166,8.152694,-0.712147,5.675985,-8.096689,-1.500239,-0.883674,-5.961643,-5.352256,-0.100976,6.467974,-8.936306,-2.292140,2.357010,2.263329,-2.058798,-7.353649,4.298069,3.227646,9.787291,-8.090131,9.291540,-7.225197,4.297776,4.712643,2.045764,-5.863648,-9.663561,2.149805,-6.428602,-7.962326,-0.321535,-6.961418,6.891751,-3.125336,-1.262882,-6.174041,7.017510,6.031199,9.603313,-6.699958,4.509951,-9.859569,-6.490350,7.309001,-0.099079,1.866068,-0.840866,-5.332493,0.947112,2.239984,8.854591,9.166216,-6.267660,0.495565,3.287455,7.143049,9.622892,-4.333922,2.302884,-1.056119,6.889601,-9.615727,-3.569688,1.143721,5.386922,0.588004,-1.793522,9.410622,1.374943,-0.372778,4.299431,4.805682,0.438210,-5.947634,8.297657,-2.691463,-9.762399,-7.911829,9.801013,-1.549260,-9.249201,3.482492,5.444047,-7.243353,-4.994879,2.878946,-3.533824,-0.703669,7.505244,-3.115469,8.504530,8.864112,-1.917877,-6.511081,-9.894748,-3.022101,-6.072937,4.569623,7.150377,-5.613745,4.560236,7.313477,-1.878253,8.068965,-8.572203,-9.773726,6.180457,2.782465,-3.792567,7.730940,-3.690324,4.873974,-4.869358,-4.230111,-4.116366,0.643497,6.809760,7.815196,-8.933382,7.814254,5.701035,-8.135053,4.354650,-4.076674,-3.717926,-2.439911,1.743535,2.489062,4.439045,4.567349,4.116279,6.813578,8.375288,-5.800584,3.513897,-3.915368,-7.468089,9.583670,-8.136229,5.052704,-2.560708,-6.242540,7.965075,0.744406,4.467644,3.439236,5.360929,0.498305,8.253574,-6.551606,9.340021,0.502702,2.325203,-7.652174,-8.922472,-4.824440,3.478547,6.769267,0.834691,7.845137,5.296579,7.129718,0.063207,-1.384311,-0.564232,-5.023989,7.587864,7.875874,-7.910305,1.201982,7.737655,6.155710,-8.496020,-1.725197,1.995352,-0.116075,-3.476806,5.408231,7.959330,-8.169774,-9.339740,4.086228,3.337020,6.274556,-4.927816,-7.097788,-9.263661,2.116106,-0.363482,-3.255001,4.376772,1.777189,-5.225019,-3.201254,-4.309636,-6.991055,5.412876,-9.291061,-8.719729,-6.940375,-4.060396,8.517517,2.719054,8.025055,-9.206234,6.327052,1.642196,6.897559,-9.602486,4.201958,-7.140969,0.183601,0.268688,-4.791793,9.076937,3.933822,-6.257203,6.444011,8.723102,4.936908,-4.671455,3.825718,5.875266,-9.359453,-2.595623,-2.281203,1.027207,-1.860150,-1.244353,-7.392395,-6.009835,7.807961,-2.583092,-3.357637,-4.423371,9.923000,-4.833926,-2.593603,6.065820,6.299790,-1.278709,0.118302,-1.438340,-8.996770,-1.979268,-3.966509,-9.488856,0.390144,-5.058430,-4.406514,-1.332368,-1.973997,1.377848,-4.301277,0.558825,-1.392334,-0.997028,9.633490,-5.831094,0.659547,-8.733793,5.609327,7.711665,-1.450064,-5.793053,-8.729755,-5.460462,3.224987,5.572510,4.354748,-8.590232,-0.757876,3.913583,4.120548,-4.675153,-5.370939,-1.871970,4.084508,7.026459,-5.925708,9.578082,-6.155451,7.116428,8.390744,4.620184,6.810346,-3.837160,-3.540519,0.860477,5.329984,-8.651684,-0.229814,3.768868,8.646664,2.383660,-3.266259,-3.193082,0.874164,2.166587,0.988066,5.298332,-0.124495,-2.846154,5.241684,-2.329298,2.065748,-1.701213,0.518384,-5.219170,-1.679242,-0.787876,-7.102962,2.291932,-6.012523,-8.459526,-6.452659,-3.552727,6.412318,3.557831,-9.411504,-9.581092,5.507959,-5.892897,-5.626756,1.711344,-2.251079,-5.363882,-7.141896,-7.241156,-5.170967,-6.012945,-0.050490,3.512221,-5.705092,-5.121841,-1.854136,-0.441167,-8.823812,-8.952907,1.159272,7.095565,-7.902498,-0.293553,-3.773116,0.212060,7.714333,4.631057,3.235075,-9.155505,2.467539,-0.593285,7.008581,8.406527,9.043891,-8.824947,1.858635,6.946490,1.422344,9.010303,-2.272510,-1.571564,-2.512134,-2.935358,-3.616712,6.690106,1.391892,8.767669,4.953365,-8.101784,4.180427,7.853756,3.137995,-9.411237,4.460335,-0.077530,-7.184187,6.905108,-7.772960,-3.339848,-7.067946,-5.639909,-1.163760,-7.802817,3.542392,-1.094651,-3.114662,6.711079,-1.476360,-6.114062,7.091078,-0.223308,-7.135488,1.509402,6.454644,3.004492,9.912181,0.988929,-2.252985,6.051317,1.280254,-9.667785,-7.468958,7.786810,0.651647,-9.892985,-5.051246,-3.684343,-9.771153,6.934724,-0.121514,-0.735742,-8.794933,4.646531]], dtype = "float64")#candidate|5726|(1, 1560)|const|float64
call_5725 = relay.TupleGetItem(func_3224_call(relay.reshape(const_5726.astype('float64'), [13, 15, 8]), relay.reshape(const_5726.astype('float64'), [13, 15, 8]), ), 0)
call_5727 = relay.TupleGetItem(func_3228_call(relay.reshape(const_5726.astype('float64'), [13, 15, 8]), relay.reshape(const_5726.astype('float64'), [13, 15, 8]), ), 0)
output = relay.Tuple([call_5719,call_5725,const_5726,])
output2 = relay.Tuple([call_5720,call_5727,const_5726,])
func_5740 = relay.Function([], output)
mod['func_5740'] = func_5740
mod = relay.transform.InferType()(mod)
output = func_5740()
func_5741 = relay.Function([], output)
mutated_mod['func_5741'] = func_5741
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5750 = relay.var("var_5750", dtype = "float32", shape = (10, 10, 9))#candidate|5750|(10, 10, 9)|var|float32
uop_5751 = relay.asin(var_5750.astype('float32')) # shape=(10, 10, 9)
func_135_call = mod.get_global_var('func_135')
func_139_call = mutated_mod.get_global_var('func_139')
const_5755 = relay.const([True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False], dtype = "bool")#candidate|5755|(672,)|const|bool
call_5754 = func_135_call(relay.reshape(const_5755.astype('bool'), [8, 7, 12]), relay.reshape(const_5755.astype('bool'), [8, 7, 12]), )
call_5756 = func_135_call(relay.reshape(const_5755.astype('bool'), [8, 7, 12]), relay.reshape(const_5755.astype('bool'), [8, 7, 12]), )
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_5760 = relay.TupleGetItem(func_2975_call(), 0)
call_5761 = relay.TupleGetItem(func_2976_call(), 0)
output = relay.Tuple([uop_5751,call_5754,const_5755,call_5760,])
output2 = relay.Tuple([uop_5751,call_5756,const_5755,call_5761,])
func_5762 = relay.Function([var_5750,], output)
mod['func_5762'] = func_5762
mod = relay.transform.InferType()(mod)
mutated_mod['func_5762'] = func_5762
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5763 = relay.var("var_5763", dtype = "float32", shape = (10, 10, 9))#candidate|5763|(10, 10, 9)|var|float32
func_5762_call = mutated_mod.get_global_var('func_5762')
call_5764 = func_5762_call(var_5763)
output = call_5764
func_5765 = relay.Function([var_5763], output)
mutated_mod['func_5765'] = func_5765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2188_call = mod.get_global_var('func_2188')
func_2189_call = mutated_mod.get_global_var('func_2189')
call_5769 = relay.TupleGetItem(func_2188_call(), 0)
call_5770 = relay.TupleGetItem(func_2189_call(), 0)
func_2436_call = mod.get_global_var('func_2436')
func_2440_call = mutated_mod.get_global_var('func_2440')
var_5802 = relay.var("var_5802", dtype = "float32", shape = ())#candidate|5802|()|var|float32
const_5803 = relay.const([1.346026,-3.606638,-8.848766,0.034189,2.149589,-0.963740,1.223819,-9.685857,-3.470954,-4.050211,1.221743,-4.000892,-4.144648,-8.301404,-3.558068,-8.500092,-6.151641,9.297029,-9.093484,-1.646599,-0.298868,5.252992,-8.746050,2.165820,-1.386679,5.501942,-6.716791,-5.197007,-6.757032,-4.431050], dtype = "float32")#candidate|5803|(30,)|const|float32
call_5801 = relay.TupleGetItem(func_2436_call(relay.reshape(var_5802.astype('float32'), []), relay.reshape(const_5803.astype('float32'), [30,]), ), 1)
call_5804 = relay.TupleGetItem(func_2440_call(relay.reshape(var_5802.astype('float32'), []), relay.reshape(const_5803.astype('float32'), [30,]), ), 1)
output = relay.Tuple([call_5769,call_5801,var_5802,const_5803,])
output2 = relay.Tuple([call_5770,call_5804,var_5802,const_5803,])
func_5805 = relay.Function([var_5802,], output)
mod['func_5805'] = func_5805
mod = relay.transform.InferType()(mod)
var_5806 = relay.var("var_5806", dtype = "float32", shape = ())#candidate|5806|()|var|float32
output = func_5805(var_5806)
func_5807 = relay.Function([var_5806], output)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_5873 = relay.TupleGetItem(func_2975_call(), 0)
call_5874 = relay.TupleGetItem(func_2976_call(), 0)
output = relay.Tuple([call_5873,])
output2 = relay.Tuple([call_5874,])
func_5875 = relay.Function([], output)
mod['func_5875'] = func_5875
mod = relay.transform.InferType()(mod)
mutated_mod['func_5875'] = func_5875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5875_call = mutated_mod.get_global_var('func_5875')
call_5876 = func_5875_call()
output = call_5876
func_5877 = relay.Function([], output)
mutated_mod['func_5877'] = func_5877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_5894 = relay.TupleGetItem(func_2975_call(), 0)
call_5895 = relay.TupleGetItem(func_2976_call(), 0)
output = relay.Tuple([call_5894,])
output2 = relay.Tuple([call_5895,])
func_5934 = relay.Function([], output)
mod['func_5934'] = func_5934
mod = relay.transform.InferType()(mod)
output = func_5934()
func_5935 = relay.Function([], output)
mutated_mod['func_5935'] = func_5935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4486_call = mod.get_global_var('func_4486')
func_4487_call = mutated_mod.get_global_var('func_4487')
call_6083 = relay.TupleGetItem(func_4486_call(), 1)
call_6084 = relay.TupleGetItem(func_4487_call(), 1)
func_4846_call = mod.get_global_var('func_4846')
func_4848_call = mutated_mod.get_global_var('func_4848')
call_6089 = relay.TupleGetItem(func_4846_call(), 0)
call_6090 = relay.TupleGetItem(func_4848_call(), 0)
output = relay.Tuple([call_6083,call_6089,])
output2 = relay.Tuple([call_6084,call_6090,])
func_6093 = relay.Function([], output)
mod['func_6093'] = func_6093
mod = relay.transform.InferType()(mod)
mutated_mod['func_6093'] = func_6093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6093_call = mutated_mod.get_global_var('func_6093')
call_6094 = func_6093_call()
output = call_6094
func_6095 = relay.Function([], output)
mutated_mod['func_6095'] = func_6095
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6101 = relay.var("var_6101", dtype = "float64", shape = (2, 8, 5))#candidate|6101|(2, 8, 5)|var|float64
uop_6102 = relay.acos(var_6101.astype('float64')) # shape=(2, 8, 5)
func_5555_call = mod.get_global_var('func_5555')
func_5557_call = mutated_mod.get_global_var('func_5557')
call_6107 = func_5555_call()
call_6108 = func_5555_call()
uop_6113 = relay.cosh(uop_6102.astype('float64')) # shape=(2, 8, 5)
bop_6119 = relay.minimum(uop_6113.astype('float32'), relay.reshape(uop_6102.astype('float32'), relay.shape_of(uop_6113))) # shape=(2, 8, 5)
uop_6129 = relay.tan(uop_6102.astype('float32')) # shape=(2, 8, 5)
func_3224_call = mod.get_global_var('func_3224')
func_3228_call = mutated_mod.get_global_var('func_3228')
var_6142 = relay.var("var_6142", dtype = "float64", shape = (2, 780))#candidate|6142|(2, 780)|var|float64
call_6141 = relay.TupleGetItem(func_3224_call(relay.reshape(var_6142.astype('float64'), [13, 15, 8]), relay.reshape(var_6142.astype('float64'), [13, 15, 8]), ), 0)
call_6143 = relay.TupleGetItem(func_3228_call(relay.reshape(var_6142.astype('float64'), [13, 15, 8]), relay.reshape(var_6142.astype('float64'), [13, 15, 8]), ), 0)
output = relay.Tuple([call_6107,bop_6119,uop_6129,call_6141,var_6142,])
output2 = relay.Tuple([call_6108,bop_6119,uop_6129,call_6143,var_6142,])
func_6148 = relay.Function([var_6101,var_6142,], output)
mod['func_6148'] = func_6148
mod = relay.transform.InferType()(mod)
mutated_mod['func_6148'] = func_6148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6148_call = mutated_mod.get_global_var('func_6148')
var_6150 = relay.var("var_6150", dtype = "float64", shape = (2, 8, 5))#candidate|6150|(2, 8, 5)|var|float64
var_6151 = relay.var("var_6151", dtype = "float64", shape = (2, 780))#candidate|6151|(2, 780)|var|float64
call_6149 = func_6148_call(var_6150,var_6151,)
output = call_6149
func_6152 = relay.Function([var_6150,var_6151,], output)
mutated_mod['func_6152'] = func_6152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3487_call = mod.get_global_var('func_3487')
func_3488_call = mutated_mod.get_global_var('func_3488')
call_6190 = relay.TupleGetItem(func_3487_call(), 0)
call_6191 = relay.TupleGetItem(func_3488_call(), 0)
output = relay.Tuple([call_6190,])
output2 = relay.Tuple([call_6191,])
func_6192 = relay.Function([], output)
mod['func_6192'] = func_6192
mod = relay.transform.InferType()(mod)
mutated_mod['func_6192'] = func_6192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6192_call = mutated_mod.get_global_var('func_6192')
call_6193 = func_6192_call()
output = call_6193
func_6194 = relay.Function([], output)
mutated_mod['func_6194'] = func_6194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5259_call = mod.get_global_var('func_5259')
func_5261_call = mutated_mod.get_global_var('func_5261')
call_6244 = relay.TupleGetItem(func_5259_call(), 4)
call_6245 = relay.TupleGetItem(func_5261_call(), 4)
output = call_6244
output2 = call_6245
func_6246 = relay.Function([], output)
mod['func_6246'] = func_6246
mod = relay.transform.InferType()(mod)
output = func_6246()
func_6247 = relay.Function([], output)
mutated_mod['func_6247'] = func_6247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3133_call = mod.get_global_var('func_3133')
func_3134_call = mutated_mod.get_global_var('func_3134')
call_6266 = func_3133_call()
call_6267 = func_3133_call()
output = relay.Tuple([call_6266,])
output2 = relay.Tuple([call_6267,])
func_6297 = relay.Function([], output)
mod['func_6297'] = func_6297
mod = relay.transform.InferType()(mod)
output = func_6297()
func_6298 = relay.Function([], output)
mutated_mod['func_6298'] = func_6298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3991_call = mod.get_global_var('func_3991')
func_3992_call = mutated_mod.get_global_var('func_3992')
call_6302 = func_3991_call()
call_6303 = func_3991_call()
var_6307 = relay.var("var_6307", dtype = "float32", shape = (6, 16, 8))#candidate|6307|(6, 16, 8)|var|float32
bop_6308 = relay.floor_mod(call_6302.astype('float32'), relay.reshape(var_6307.astype('float32'), relay.shape_of(call_6302))) # shape=(6, 16, 8)
bop_6311 = relay.floor_mod(call_6303.astype('float32'), relay.reshape(var_6307.astype('float32'), relay.shape_of(call_6303))) # shape=(6, 16, 8)
output = relay.Tuple([bop_6308,])
output2 = relay.Tuple([bop_6311,])
func_6318 = relay.Function([var_6307,], output)
mod['func_6318'] = func_6318
mod = relay.transform.InferType()(mod)
var_6319 = relay.var("var_6319", dtype = "float32", shape = (6, 16, 8))#candidate|6319|(6, 16, 8)|var|float32
output = func_6318(var_6319)
func_6320 = relay.Function([var_6319], output)
mutated_mod['func_6320'] = func_6320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3991_call = mod.get_global_var('func_3991')
func_3992_call = mutated_mod.get_global_var('func_3992')
call_6392 = func_3991_call()
call_6393 = func_3991_call()
output = call_6392
output2 = call_6393
func_6422 = relay.Function([], output)
mod['func_6422'] = func_6422
mod = relay.transform.InferType()(mod)
output = func_6422()
func_6423 = relay.Function([], output)
mutated_mod['func_6423'] = func_6423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4486_call = mod.get_global_var('func_4486')
func_4487_call = mutated_mod.get_global_var('func_4487')
call_6445 = relay.TupleGetItem(func_4486_call(), 1)
call_6446 = relay.TupleGetItem(func_4487_call(), 1)
func_3505_call = mod.get_global_var('func_3505')
func_3507_call = mutated_mod.get_global_var('func_3507')
call_6448 = func_3505_call()
call_6449 = func_3505_call()
func_5063_call = mod.get_global_var('func_5063')
func_5065_call = mutated_mod.get_global_var('func_5065')
call_6450 = relay.TupleGetItem(func_5063_call(), 1)
call_6451 = relay.TupleGetItem(func_5065_call(), 1)
output = relay.Tuple([call_6445,call_6448,call_6450,])
output2 = relay.Tuple([call_6446,call_6449,call_6451,])
func_6459 = relay.Function([], output)
mod['func_6459'] = func_6459
mod = relay.transform.InferType()(mod)
output = func_6459()
func_6460 = relay.Function([], output)
mutated_mod['func_6460'] = func_6460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2314_call = mod.get_global_var('func_2314')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_6461 = func_2314_call()
call_6462 = func_2314_call()
func_3437_call = mod.get_global_var('func_3437')
func_3439_call = mutated_mod.get_global_var('func_3439')
call_6463 = relay.TupleGetItem(func_3437_call(), 0)
call_6464 = relay.TupleGetItem(func_3439_call(), 0)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
const_6480 = relay.const(2.420858, dtype = "float32")#candidate|6480|()|const|float32
var_6481 = relay.var("var_6481", dtype = "float32", shape = (1, 30))#candidate|6481|(1, 30)|var|float32
call_6479 = relay.TupleGetItem(func_440_call(relay.reshape(const_6480.astype('float32'), []), relay.reshape(var_6481.astype('float32'), [10, 1, 3]), ), 0)
call_6482 = relay.TupleGetItem(func_443_call(relay.reshape(const_6480.astype('float32'), []), relay.reshape(var_6481.astype('float32'), [10, 1, 3]), ), 0)
output = relay.Tuple([call_6461,call_6463,call_6479,const_6480,var_6481,])
output2 = relay.Tuple([call_6462,call_6464,call_6482,const_6480,var_6481,])
func_6483 = relay.Function([var_6481,], output)
mod['func_6483'] = func_6483
mod = relay.transform.InferType()(mod)
var_6484 = relay.var("var_6484", dtype = "float32", shape = (1, 30))#candidate|6484|(1, 30)|var|float32
output = func_6483(var_6484)
func_6485 = relay.Function([var_6484], output)
mutated_mod['func_6485'] = func_6485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3898_call = mod.get_global_var('func_3898')
func_3900_call = mutated_mod.get_global_var('func_3900')
call_6487 = relay.TupleGetItem(func_3898_call(), 0)
call_6488 = relay.TupleGetItem(func_3900_call(), 0)
uop_6492 = relay.exp(call_6487.astype('float64')) # shape=(10, 1, 3)
uop_6494 = relay.exp(call_6488.astype('float64')) # shape=(10, 1, 3)
output = relay.Tuple([uop_6492,])
output2 = relay.Tuple([uop_6494,])
func_6507 = relay.Function([], output)
mod['func_6507'] = func_6507
mod = relay.transform.InferType()(mod)
output = func_6507()
func_6508 = relay.Function([], output)
mutated_mod['func_6508'] = func_6508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_6530 = func_3274_call()
call_6531 = func_3274_call()
output = call_6530
output2 = call_6531
func_6574 = relay.Function([], output)
mod['func_6574'] = func_6574
mod = relay.transform.InferType()(mod)
mutated_mod['func_6574'] = func_6574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6574_call = mutated_mod.get_global_var('func_6574')
call_6575 = func_6574_call()
output = call_6575
func_6576 = relay.Function([], output)
mutated_mod['func_6576'] = func_6576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2383_call = mod.get_global_var('func_2383')
func_2384_call = mutated_mod.get_global_var('func_2384')
call_6582 = func_2383_call()
call_6583 = func_2383_call()
output = relay.Tuple([call_6582,])
output2 = relay.Tuple([call_6583,])
func_6591 = relay.Function([], output)
mod['func_6591'] = func_6591
mod = relay.transform.InferType()(mod)
mutated_mod['func_6591'] = func_6591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6591_call = mutated_mod.get_global_var('func_6591')
call_6592 = func_6591_call()
output = call_6592
func_6593 = relay.Function([], output)
mutated_mod['func_6593'] = func_6593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4953_call = mod.get_global_var('func_4953')
func_4954_call = mutated_mod.get_global_var('func_4954')
call_6605 = relay.TupleGetItem(func_4953_call(), 0)
call_6606 = relay.TupleGetItem(func_4954_call(), 0)
func_3840_call = mod.get_global_var('func_3840')
func_3843_call = mutated_mod.get_global_var('func_3843')
const_6618 = relay.const(5, dtype = "uint64")#candidate|6618|()|const|uint64
var_6619 = relay.var("var_6619", dtype = "uint64", shape = (7,))#candidate|6619|(7,)|var|uint64
call_6617 = func_3840_call(relay.reshape(const_6618.astype('uint64'), []), relay.reshape(var_6619.astype('uint64'), [1, 7, 1]), )
call_6620 = func_3840_call(relay.reshape(const_6618.astype('uint64'), []), relay.reshape(var_6619.astype('uint64'), [1, 7, 1]), )
uop_6625 = relay.log10(call_6617.astype('float32')) # shape=(1, 7, 1)
uop_6627 = relay.log10(call_6620.astype('float32')) # shape=(1, 7, 1)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_6630 = relay.TupleGetItem(func_2975_call(), 0)
call_6631 = relay.TupleGetItem(func_2976_call(), 0)
uop_6644 = relay.rsqrt(call_6617.astype('float64')) # shape=(1, 7, 1)
uop_6646 = relay.rsqrt(call_6620.astype('float64')) # shape=(1, 7, 1)
output = relay.Tuple([call_6605,const_6618,var_6619,uop_6625,call_6630,uop_6644,])
output2 = relay.Tuple([call_6606,const_6618,var_6619,uop_6627,call_6631,uop_6646,])
func_6654 = relay.Function([var_6619,], output)
mod['func_6654'] = func_6654
mod = relay.transform.InferType()(mod)
var_6655 = relay.var("var_6655", dtype = "uint64", shape = (7,))#candidate|6655|(7,)|var|uint64
output = func_6654(var_6655)
func_6656 = relay.Function([var_6655], output)
mutated_mod['func_6656'] = func_6656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3516_call = mod.get_global_var('func_3516')
func_3518_call = mutated_mod.get_global_var('func_3518')
call_6658 = relay.TupleGetItem(func_3516_call(), 0)
call_6659 = relay.TupleGetItem(func_3518_call(), 0)
func_3873_call = mod.get_global_var('func_3873')
func_3874_call = mutated_mod.get_global_var('func_3874')
call_6663 = func_3873_call()
call_6664 = func_3873_call()
func_3556_call = mod.get_global_var('func_3556')
func_3558_call = mutated_mod.get_global_var('func_3558')
call_6666 = relay.TupleGetItem(func_3556_call(), 2)
call_6667 = relay.TupleGetItem(func_3558_call(), 2)
output = relay.Tuple([call_6658,call_6663,call_6666,])
output2 = relay.Tuple([call_6659,call_6664,call_6667,])
func_6674 = relay.Function([], output)
mod['func_6674'] = func_6674
mod = relay.transform.InferType()(mod)
output = func_6674()
func_6675 = relay.Function([], output)
mutated_mod['func_6675'] = func_6675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3133_call = mod.get_global_var('func_3133')
func_3134_call = mutated_mod.get_global_var('func_3134')
call_6676 = func_3133_call()
call_6677 = func_3133_call()
func_6591_call = mod.get_global_var('func_6591')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_6683 = relay.TupleGetItem(func_6591_call(), 0)
call_6684 = relay.TupleGetItem(func_6593_call(), 0)
func_4266_call = mod.get_global_var('func_4266')
func_4268_call = mutated_mod.get_global_var('func_4268')
call_6689 = relay.TupleGetItem(func_4266_call(), 0)
call_6690 = relay.TupleGetItem(func_4268_call(), 0)
func_2188_call = mod.get_global_var('func_2188')
func_2189_call = mutated_mod.get_global_var('func_2189')
call_6696 = relay.TupleGetItem(func_2188_call(), 0)
call_6697 = relay.TupleGetItem(func_2189_call(), 0)
func_3832_call = mod.get_global_var('func_3832')
func_3833_call = mutated_mod.get_global_var('func_3833')
call_6701 = func_3832_call()
call_6702 = func_3832_call()
output = relay.Tuple([call_6676,call_6683,call_6689,call_6696,call_6701,])
output2 = relay.Tuple([call_6677,call_6684,call_6690,call_6697,call_6702,])
func_6708 = relay.Function([], output)
mod['func_6708'] = func_6708
mod = relay.transform.InferType()(mod)
output = func_6708()
func_6709 = relay.Function([], output)
mutated_mod['func_6709'] = func_6709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3556_call = mod.get_global_var('func_3556')
func_3558_call = mutated_mod.get_global_var('func_3558')
call_6725 = relay.TupleGetItem(func_3556_call(), 1)
call_6726 = relay.TupleGetItem(func_3558_call(), 1)
output = call_6725
output2 = call_6726
func_6743 = relay.Function([], output)
mod['func_6743'] = func_6743
mod = relay.transform.InferType()(mod)
mutated_mod['func_6743'] = func_6743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6743_call = mutated_mod.get_global_var('func_6743')
call_6744 = func_6743_call()
output = call_6744
func_6745 = relay.Function([], output)
mutated_mod['func_6745'] = func_6745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_6798 = func_3274_call()
call_6799 = func_3274_call()
output = call_6798
output2 = call_6799
func_6803 = relay.Function([], output)
mod['func_6803'] = func_6803
mod = relay.transform.InferType()(mod)
mutated_mod['func_6803'] = func_6803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6803_call = mutated_mod.get_global_var('func_6803')
call_6804 = func_6803_call()
output = call_6804
func_6805 = relay.Function([], output)
mutated_mod['func_6805'] = func_6805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2651_call = mod.get_global_var('func_2651')
func_2653_call = mutated_mod.get_global_var('func_2653')
call_6837 = relay.TupleGetItem(func_2651_call(), 0)
call_6838 = relay.TupleGetItem(func_2653_call(), 0)
uop_6856 = relay.sin(call_6837.astype('float64')) # shape=(6, 16, 8)
uop_6858 = relay.sin(call_6838.astype('float64')) # shape=(6, 16, 8)
output = uop_6856
output2 = uop_6858
func_6867 = relay.Function([], output)
mod['func_6867'] = func_6867
mod = relay.transform.InferType()(mod)
mutated_mod['func_6867'] = func_6867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6867_call = mutated_mod.get_global_var('func_6867')
call_6868 = func_6867_call()
output = call_6868
func_6869 = relay.Function([], output)
mutated_mod['func_6869'] = func_6869
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6936 = relay.var("var_6936", dtype = "float32", shape = (4, 14, 2))#candidate|6936|(4, 14, 2)|var|float32
uop_6937 = relay.atanh(var_6936.astype('float32')) # shape=(4, 14, 2)
func_3396_call = mod.get_global_var('func_3396')
func_3398_call = mutated_mod.get_global_var('func_3398')
call_6953 = relay.TupleGetItem(func_3396_call(), 0)
call_6954 = relay.TupleGetItem(func_3398_call(), 0)
func_4444_call = mod.get_global_var('func_4444')
func_4450_call = mutated_mod.get_global_var('func_4450')
const_6957 = relay.const([[-7,-4,10,-7,-9,9,10,4,-6,-1,7,3,10,2,9,1,-4,8,6,7,10,9,-5,4,-1,-10,-5,-10,8,-4,-3,-7,-1,3,10,5,5,2,6,-9,8,-9,4,-10,3,-1,9,5,3,-9,9,3,-7,-2,-8,2,-4,-1,-10,3,4,-2,-4,-3,7,9,6,-10,6,6,6,-10,-10,-9,1,-6,7,-8,-4,-7,-4,9,-8,-3,-2,8,8,8,-10,-8,10,8,1,8,8,6,-2,4,-3,-4,-7,-3,-2,-4,-8,5,-6,5,8,3,-1,-2,4,-4,-2,-2,-3,-7,-5,-9,-1,3,7,5,3,5,-6,6,-2,9,-9,4,-9,6,10,-9,2,-2,-1,-8,4,-8,-10,-2,-5,6,-5,7,-1,-8,-10,6,8,-3,-3,-3,2,-9,6,-5,-4,6,-1,-5,-5,3,-9,-7,7,8,-9,-8,4,5,1,-2,9,6,8,2,4,9,6,-2,6,-4,-3,-9,-2,-7,-4,-7,7,-5,-3,-10,-4,-10,-7,-5,4,-1,2,4,-4,-6,-1,3,4,-5,-7,-6,6,-1,-2,-7,8,3,-7,5,-1,-2,-3,10,-5,6,10,10,2,8,-2,10,4,-9,2,2,2,-6,9,2,-1,-5,-4,6,8,10,10,9,3,4,-9,-9,-10,-8,2,-4,-10,-3,-4,10,2,4,-10,-3,9,10,-4,9,-7,5,-6,-2,8,3,-2,-5,-5,-6,10,-1,7,-8,-2,6,-5,7,-10,10,-4,-9,7,3,-1,-8,8,-3,-1,-7,8,-2,-4,4,10,1,6,2,-4,-5,6,7,3,1,8,8,-9,9,-1,-7,-5,-7,-8,4,6,6,-3,5,2,-1,-4,-8,-9,-6,10,-5,4,9,3,-2,3,8,-1,-3,9,-7,4,5,4,6,-9,-2,3,2,3,4,2,-3,6,-7,-1,-7,-10,8,6,-10,7,5,-1,5,-1,-3,10,7,3,3,8,1,-2,4,5,4,-7,-1,8,-4,4,3,5,-1,5,4,-4,3,-4,-6,2,10,-9,-8,6,5,3,-7,9,9,-2,7,-10,1,-9,4,7,1,-4,4,-4,3,8,-4,-7,-10,7,-4,10,-10,4,-2,-5,-8,3,2,-2,5,-2,6,-3,8,-8,5,-10,8,-7,7,-3,-5,-9,-6,-10,1,-1,1,5,-3,10,10,-3,5,7,3,9,10,3,-8,-8,-4,6,-2,3,-4,1,4,-10,-3,-3,1,-2,-1,-7,-7,8,4,7,6,1,-4,2,6,8,-1,6,2,-2,-5,2,6,5,5,-7,-1,-9,-9,-4,-4,-6,3,8,-10,-8,1,-8,9,8,5,-3,4,-3,4,9,2,-3,-7,-10,-1,-3,8,3,7,3,9,-10,9,-7,3,-9,1,-1,2,9,-2,10,-6,-9,-4,-4,-8,7,2,-10,-10,-1,2,-1,-3,-10,3,-7,2,-1,-8,-1,-1,-6,10,7,7,-1,10,-5,-2,-10,-4,-3,10,-5,9,7,-4,-3,10,-6,-2,8,-9,-6,8,8,-2,-10,-3,3,3,-3,6,3,8,5,-4,-1,-5,-8,3,-7,-4,-7,4,-10,1,-3,-1,-5,4,8,-2,-5,-8,-2,-6,5,-9,-9,-6,1,-4,6,-1,-4,-10,6,-3,-1,-3,-3,-3,1,5,-5,10,-8,-10,-10,5,7,8,7,6,4,8,-8,-8,-3,8,-1,3,3,-6,-4,6,-4,7,-10,7,2,-1,-8,-9,1,-10,4,-4,5,-9,-8,-10,-3,-4,-10,7,10,-2,7,1,7,-10,3,9,1,6,-4,4,3,-10,-10,-5,-5,1,8,-1,3,7,5,-3,5,8,8,-9,-9,-6,-8,-1,7,6,-2,-2,8,3,7,-4,7,-4,-3,6,1,-2,2,-1,-3,-6,-4,2,-6,-9,-10,5,-4,-2,1,-8,-9,-1,-4,-10,1,-4,2,1,10,3,3,-9,7,4,7,-10,4,7,-8,-7,-3,-6,-6,7,8,-5,-7,8,6,-4,3,9,-7,-7,5,4,2,5,8,3,-1,7,-3,-4]], dtype = "uint8")#candidate|6957|(1, 780)|const|uint8
var_6958 = relay.var("var_6958", dtype = "float64", shape = (924,))#candidate|6958|(924,)|var|float64
const_6959 = relay.const(-4.766276, dtype = "float32")#candidate|6959|()|const|float32
const_6960 = relay.const([[-8.433396],[9.374705],[8.299687],[3.889740],[6.972274],[4.691521],[-6.547122],[-3.343461],[4.175031],[-5.068421],[-9.127561],[8.836801],[7.619647],[-0.652755],[-0.299877],[-9.591920],[-3.987315],[4.297373],[-5.518492],[-1.721600],[9.642388],[2.079965],[0.597124],[-1.807523],[-6.345755],[2.389400],[-7.632231],[4.836208],[-5.474414],[4.940260],[7.773495],[9.780789],[1.853267],[3.020874],[0.710179],[-8.234022],[8.150288],[6.361992],[7.726038],[4.801937],[-5.197656],[-4.786180]], dtype = "float32")#candidate|6960|(42, 1)|const|float32
call_6956 = relay.TupleGetItem(func_4444_call(relay.reshape(const_6957.astype('uint8'), [780, 1]), relay.reshape(var_6958.astype('float64'), [924,]), relay.reshape(const_6959.astype('float32'), []), relay.reshape(const_6960.astype('float32'), [42,]), ), 4)
call_6961 = relay.TupleGetItem(func_4450_call(relay.reshape(const_6957.astype('uint8'), [780, 1]), relay.reshape(var_6958.astype('float64'), [924,]), relay.reshape(const_6959.astype('float32'), []), relay.reshape(const_6960.astype('float32'), [42,]), ), 4)
uop_6967 = relay.sinh(uop_6937.astype('float64')) # shape=(4, 14, 2)
output = relay.Tuple([call_6953,call_6956,const_6957,var_6958,const_6959,const_6960,uop_6967,])
output2 = relay.Tuple([call_6954,call_6961,const_6957,var_6958,const_6959,const_6960,uop_6967,])
func_6970 = relay.Function([var_6936,var_6958,], output)
mod['func_6970'] = func_6970
mod = relay.transform.InferType()(mod)
var_6971 = relay.var("var_6971", dtype = "float32", shape = (4, 14, 2))#candidate|6971|(4, 14, 2)|var|float32
var_6972 = relay.var("var_6972", dtype = "float64", shape = (924,))#candidate|6972|(924,)|var|float64
output = func_6970(var_6971,var_6972,)
func_6973 = relay.Function([var_6971,var_6972,], output)
mutated_mod['func_6973'] = func_6973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3353_call = mod.get_global_var('func_3353')
func_3355_call = mutated_mod.get_global_var('func_3355')
call_6975 = func_3353_call()
call_6976 = func_3353_call()
func_6970_call = mod.get_global_var('func_6970')
func_6973_call = mutated_mod.get_global_var('func_6973')
const_6978 = relay.const([[-6.194797],[1.024800],[-7.600175],[-5.958099],[-1.400867],[-2.079183],[-4.072917],[2.056954],[2.577606],[0.456018],[-5.608342],[-6.456247],[4.303194],[2.579847],[5.087297],[-3.420273],[4.368947],[-3.401570],[-5.282101],[-5.823432],[6.240785],[-1.206282],[7.415099],[3.725367],[-5.147048],[-0.728604],[4.048218],[-9.100567],[-0.985304],[-4.320010],[8.908379],[-6.446537],[2.693525],[4.304553],[3.681564],[-2.067868],[-0.936663],[3.711614],[-5.268620],[7.158468],[6.525799],[3.100091],[-8.553641],[3.112908],[9.420287],[-2.311933],[0.268374],[-1.122243],[3.124052],[-7.815648],[3.793695],[0.633295],[3.432664],[-8.782999],[-5.134584],[-4.157516],[4.782782],[-6.116607],[2.929606],[-8.229628],[9.284870],[-2.684356],[3.935105],[6.049983],[-4.932129],[-9.617827],[-7.825931],[5.450014],[-3.274571],[1.362660],[4.409993],[-3.895560],[-3.919744],[-8.014696],[7.146993],[-8.463721],[7.549036],[2.180286],[7.037603],[-8.024038],[-7.028447],[-0.384101],[-6.355659],[-3.301366],[3.843006],[1.312512],[6.453303],[1.061783],[-5.085897],[-1.479531],[-2.033755],[5.342495],[7.873761],[0.664363],[1.356116],[-0.939658],[-7.357649],[2.703665],[-9.065449],[2.678819],[0.828705],[0.935328],[-9.697150],[-9.993647],[-0.107277],[-7.381870],[-2.831711],[6.460801],[-0.385372],[-9.395809],[-4.138886],[6.935827]], dtype = "float32")#candidate|6978|(112, 1)|const|float32
const_6979 = relay.const([-3.720287,3.398468,-0.983117,4.102294,9.230944,3.184719,-0.592050,0.417721,3.129241,-0.991320,0.087377,-2.371042,7.077212,-6.153709,-0.546106,-1.442491,-0.012653,-4.854332,-3.263667,3.699260,-4.030411,-0.244436,5.919404,7.284995,-5.214102,-5.066028,-3.422923,7.406604,2.779714,1.703514,8.836941,-9.045847,0.065317,-1.077630,-6.839280,-8.032385,7.247769,1.128801,-2.284423,1.310485,-2.869487,-3.902710,-5.194929,-2.912513,3.308040,8.037594,-4.425961,-1.278297,3.825544,4.606405,-1.575874,-1.598090,-7.329608,-8.053033,-9.530810,8.271877,-7.756656,9.325327,7.175136,-4.911275,8.399940,-7.540752,5.956259,-2.722866,0.006122,9.634881,1.582112,1.383916,9.870466,-3.338168,-1.735226,5.462242,2.441009,4.755919,-6.966414,8.974090,-4.296368,9.062431,-8.757572,-4.489191,-4.996425,4.467573,4.881163,0.470340,8.910958,-9.712733,-9.802164,-6.060448,-7.396289,-3.630779,7.424416,9.214543,2.798597,5.915649,-1.906483,-3.394889,8.190931,-2.945702,-5.396421,-9.704963,6.273106,5.207337,-5.155972,6.938384,-0.846474,0.215363,5.219975,8.922332,-1.899236,-9.973127,-2.238663,2.042768,-3.568467,-5.799857,7.792460,-0.750600,1.591994,-4.507909,9.933810,-8.007913,-3.199776,3.629930,-5.954408,-5.426467,-0.686163,5.612730,4.188251,-0.816031,-1.853491,4.700709,4.927415,-1.414112,6.216151,-8.850056,-2.649470,-9.882063,5.656676,-6.507023,-3.745005,-1.716289,8.713027,1.153398,-6.659332,8.991310,-9.892629,-0.043856,-7.752252,-4.805266,-7.602530,7.770617,-4.716684,1.036891,4.399206,4.616288,-7.688454,-2.179104,-5.775940,0.042753,-7.164904,4.045923,3.731078,-1.616183,7.353824,7.500253,-6.231654,-2.470191,0.909594,-4.730799,-4.045887,-2.105105,6.414596,-8.897806,2.651210,-9.031097,-4.380539,-9.803677,0.745140,-1.937574,-9.321764,-1.110980,-8.320826,8.641835,-7.655640,-7.472859,8.325452,-1.272634,-4.774037,-0.873229,-1.515064,8.181217,9.426377,-8.311156,-1.911750,5.684060,-9.375052,1.998241,-3.547872,-8.452052,-3.997732,1.132417,-4.851029,-3.422121,3.138526,-7.610162,9.655673,-5.564744,5.239872,-2.287042,8.635849,-5.938140,0.098533,-4.049283,-4.835022,3.940561,-8.868047,4.235161,-2.915490,3.517139,-8.436433,1.431193,0.079223,-5.517975,-4.722388,-8.983113,-3.520988,7.033481,7.058398,-1.360161,6.752494,-5.394458,-6.633335,-1.906636,-2.077909,-2.438871,8.760525,-5.986852,-4.167000,3.315393,7.915307,-4.468407,9.420020,-3.904738,-2.833755,-4.068729,-1.584600,5.565128,-3.935872,9.684086,0.751896,-3.370399,6.583306,2.047467,5.711744,-2.826445,-7.063484,2.020150,-1.716993,-5.795920,-1.439616,-4.570336,-5.344080,7.984461,2.925757,1.992977,4.910371,8.741859,-4.938608,-4.649732,-5.464509,3.391421,8.655861,-8.417230,-7.408337,-8.793158,1.694925,7.092832,-6.580075,8.179815,5.559398,-4.855263,-0.563992,8.306161,-9.067450,-4.517346,-4.760268,-1.387069,-0.624909,5.357101,4.472329,2.983815,3.431018,-1.161977,-8.206304,6.474543,-3.159833,-9.340018,-7.074553,-4.856318,7.293303,3.901326,-9.303383,4.811020,-2.035127,7.257523,8.542463,-6.564569,4.962685,-6.242245,-8.851771,8.232750,-3.941931,6.411980,7.547464,2.370407,2.253272,-7.812649,-0.914020,-1.340528,-3.377439,4.769518,1.218448,-7.963880,-1.632777,-5.622305,9.068487,-0.403935,4.785712,-5.531937,1.715348,7.793751,-2.517201,-0.568699,1.950958,5.853149,-6.203864,6.431104,-2.304506,-2.506318,2.813772,-5.216088,-3.389397,-6.456942,-2.209059,-0.093551,-0.803794,-2.913544,8.723450,-1.796761,-8.418543,-5.118864,-0.221807,-4.426789,-5.880247,2.132567,7.755484,-6.747507,-1.665436,1.793946,1.508907,-1.504454,5.162105,-8.311070,0.345951,6.723644,-7.692583,-8.541234,-2.177103,7.973400,3.967034,-2.316927,-5.680358,-9.982439,6.416270,-0.037516,4.100099,-3.592181,0.469762,7.903510,7.546360,-1.213447,3.102883,-6.966515,2.003294,-4.564741,3.742828,1.695086,0.217175,-0.448386,8.604770,6.473187,-5.003031,9.562838,-7.095937,-7.600871,-6.710196,0.694084,-6.432489,7.032952,5.329769,-5.916304,-8.984379,2.254296,-0.283201,-3.811590,-6.515457,-3.272820,7.658998,-2.907247,2.583504,-5.534014,-8.685707,6.027002,0.589685,-9.403300,-5.744977,2.534762,0.211785,-8.043442,8.706276,6.696153,-9.298680,-4.678782,-2.657543,8.691754,3.177897,3.385139,5.772816,-7.161804,0.260592,2.211722,-8.766883,-7.127578,8.888252,6.922162,7.487479,-6.425490,-1.453365,1.695348,-4.991741,-3.472726,-7.517492,8.501918,-7.807448,2.869820,-1.667161,8.000652,8.551692,-6.815870,-9.278967,8.010728,1.939151,1.748132,-1.318350,-4.010033,7.938009,4.215319,-4.505724,6.548892,-3.543617,-0.648503,-6.563774,4.247476,5.651540,-9.913658,5.948908,6.735924,-2.640087,1.905517,6.963673,4.979115,-1.713125,8.566478,9.443766,-3.163292,1.545886,-5.718026,-0.218789,3.691791,-1.139531,-9.259414,-5.801814,-1.030319,-9.171944,8.420366,2.623782,1.067029,2.979564,-8.133401,8.052954,3.300771,0.748669,-1.803805,3.453983,4.821939,-4.512795,-0.801361,0.360086,6.806193,-3.674084,1.168929,0.494460,7.678081,3.854292,0.558149,-7.005297,5.406460,-2.273358,-8.444805,-0.624158,5.738727,4.228439,9.556348,-1.441194,-5.221814,9.906278,-0.567800,-7.590895,-3.500109,0.696032,3.885524,-7.232072,8.960308,-3.601169,-5.212475,3.901587,0.199070,5.501765,5.265726,7.912852,-5.541025,-4.767635,0.795897,6.531201,-1.925161,7.207045,-4.466978,4.487451,1.454436,5.926788,-9.090514,0.274063,4.596230,-6.953309,3.093129,8.975973,-2.732036,-6.244612,-3.622505,7.075703,5.597733,-8.625606,-5.172082,7.710243,-4.664335,-8.792530,-4.587824,-5.330745,-9.522754,-6.988070,7.937072,-6.042400,6.953668,9.930654,-1.508616,5.717412,-7.383956,2.710659,3.148558,-4.856113,-1.631892,-3.044534,-3.588548,-3.693339,8.618187,-5.881574,-4.069934,-1.914973,-7.686973,-3.515287,6.236063,-7.108679,4.857212,-3.297940,-1.972301,-5.450858,2.397319,8.473891,-4.790615,2.817448,2.097557,-1.146559,-4.675838,8.943595,-8.737595,1.219948,5.195464,8.394753,4.837558,1.244481,-3.085054,-3.058351,-0.195552,-3.375991,-5.103039,-3.332059,1.644909,3.006921,-6.687183,-0.208210,-8.505401,-9.830772,0.329134,9.531769,8.986734,6.969921,-3.783639,-1.207110,5.956061,9.380144,-3.506530,2.824064,-1.568733,6.124786,-5.286555,-6.156495,7.540767,-3.923234,-9.496526,4.857582,7.645370,-8.943690,2.470677,-4.998292,4.981753,-3.971733,-5.210724,1.058419,-4.635857,3.367642,8.624567,-8.847480,-4.354861,3.055283,-2.005721,-2.993417,1.445896,6.372259,5.301875,-4.842384,-4.131501,-5.448780,-1.833140,2.169629,-1.851399,1.957581,-6.098419,-0.332926,6.192153,-0.170204,7.067246,8.562731,8.196308,9.540231,-9.127354,8.826859,-4.462661,7.945443,4.498121,0.310005,0.459639,4.093190,-7.329504,-3.911782,-8.940229,2.540638,-5.565490,-0.285785,-5.326297,-4.069540,5.950532,4.194033,-4.870151,1.008809,0.664430,4.504528,4.753888,5.328869,8.704377,1.776667,-4.332341,9.941509,0.722924,-9.732572,5.672634,7.694085,-2.132143,-2.325513,2.102251,-0.058916,-8.412680,-4.523143,9.173503,-8.614290,6.566854,-2.595794,-6.417183,-1.724221,4.433378,5.474457,-2.543968,-4.564799,0.840449,4.240471,-4.379606,-5.495057,8.403558,-7.453341,-9.026242,6.771661,6.643616,3.475834,1.348746,5.418567,-5.915453,6.178975,1.277660,1.825221,-4.897226,-9.735333,-3.646993,-8.906990,3.900883,-8.871918,3.504564,4.627603,8.970782,-9.994981,8.562571,-9.791965,4.696594,-8.960149,7.672880,1.702032,-7.083905,-1.228347,-0.406223,-7.045860,1.707433,4.500012,1.473882,0.616740,0.460419,6.043254,-1.897216,-1.919777,-0.631097,-9.093997,-6.999874,9.188768,9.138155,-2.900589,-1.232179,3.765260,0.002995,-1.791543,-5.521089,-1.313292,-3.581020,-7.701299,2.627766,-5.718012,1.721414,6.040001,-4.421583,-8.039417,-5.656975,-7.200901,7.355755,-1.920909,-3.244891,3.425536,6.237652,9.354988,-6.823310,-8.431594,-4.333428,7.741469,6.717975,-4.720883,9.286753,-1.553555,1.754762,8.696518,-6.420341,9.884039,-5.389532,8.676205,-7.180749,8.728477,-0.167536,-8.024824,-6.390567,-9.055686,-9.527156,-8.157150,7.050071,4.784708,4.700229,-1.504889,7.714113,-6.913679,-6.108027,9.786832,-8.123301,4.112102,-6.758486,-3.122843,0.994626,-0.915258,2.911181,-2.964812,7.825510,3.822168,-8.893858,8.269665,3.259503,3.383557,3.063289,4.254916,-3.492948,5.161723,-0.164798,7.059590,-9.493634,-5.123681,-2.613804,4.868301,-6.219487,-5.496726,-0.975450,-1.423560,-3.609193,9.274442,-7.806272,7.502210,-1.245757,7.907244,-5.974465,-7.112269,8.120447,-7.406406,3.989398,9.887738,-7.783571,-8.786856,2.560519,7.519752,7.479367,-0.118634,0.204544,-6.544746,-0.716023,-2.587560,-6.223579,7.571284,1.552678,-6.892071,7.868943,0.709202,2.189297,-4.843112,-1.487558,-1.059491,1.550750,-2.224714,3.825159,-1.780537,-6.241023,-6.010151,5.065556,-2.304081,-6.870228,-1.376393,0.669287,2.257090,4.226935,3.077185,3.815271,8.941883,-6.196379,9.095046,-3.502405,5.601449,7.753125,-9.450185,-0.187816,2.828135,0.205485,-7.627602,0.589459,3.184841,-4.895360,5.923001,8.543222,-3.166878,-0.922268,9.396460,8.398392,9.644388,-5.459953,9.918198,7.679470,2.181827,-5.202936,0.466225,-5.245712,2.421015,3.306563,-6.480181,8.796036,7.912340,9.503763,4.105115,7.698398], dtype = "float64")#candidate|6979|(924,)|const|float64
call_6977 = relay.TupleGetItem(func_6970_call(relay.reshape(const_6978.astype('float32'), [4, 14, 2]), relay.reshape(const_6979.astype('float64'), [924,]), ), 4)
call_6980 = relay.TupleGetItem(func_6973_call(relay.reshape(const_6978.astype('float32'), [4, 14, 2]), relay.reshape(const_6979.astype('float64'), [924,]), ), 4)
func_5648_call = mod.get_global_var('func_5648')
func_5651_call = mutated_mod.get_global_var('func_5651')
const_6989 = relay.const([-1,3,-3,-10,6,3,-10,-10,4,2,-2,8,10,-5,10,8,2,-7,-4,2,-2,7,-6,2,10,-3,-4,-4,5,-3,-9,8,-4,10,9,8,-1,-3,4,6,-1,8,-10,-4,-4,-1,9,8,-4,1,-2,-9,6,7,-9,-5,2,8,10,8,-8,-6,-10,-8,3,-2,-10,8,-2,7,-8,2,8,3,-1,-1,-3,3,1,10,3,-1,-2,1,3,-5,-10,2,-6,-7,9,-5,-5,6,4,-2,-9,-1,1,2,10,5,-4,-2,-2,-9,-9,3,-5,-1,-8,-7,7,5,2,2,-7,-5,-1,-1,-8,-8,-7,10,-2,2,-6,-7,8,3,-3,5,-9,9,9,-7,-2,-5,-5,-10,8,9,10,-8,-9,-10,5,10,-8,-6,-1,-6,-7,2,8,9,2,3,-5,2,-2,-6,-10,1,-7,6,9,3,-7,-7,6,2,-5,2,5,-4,6,6,-6,5,5,3,5,1,2,-6,6,-6,2,1,-2,4,4,-4,-8,-6,-2,8,-7,-9,5,-9,3,3,5,-1,-10,-5,-7,-7,-9,10,5,9,5,3,3,-2,-9,-10,-9,-1,7,5,6,1,-8,9,6,-5,7,-2,10,-5,-7,3,-7,6,10,-8,-7,6,-9,-7,6,-6,2,1,10,-10,4,-6,8,5,-7,-6,3,8,-10,8,8,7,2,1,8,2,7,-3,1,-2,-4,-1,-4,-10,3,-8,-2,1,5,-5,-5,2,-4,-6,-4,3,1,-4,2,-7,2,10,-10,-5,4,7,8,3,4,-10,10,-6,-7,3,-4,8,8,9,8,-3,7,-4,-9,8,-6,4,2,-6,10,-10,-2,10,4,-7,3,-5,-8,-5,5,2,4,5,6,4,-1,-10,-3,-2,-2,-1,7,-7,-4,3,8,1,3,-9,-7,7,-9,10,9,-1,9,8,-8,2,-7,-3,4,10,-10,-8,-2,-7,-2,-3,9,4,7,-5,-8,9,5,4,-8,7,-1,-8,-10,4,-10,-4,2,-6,-3,6,-9,7,-8,1,5,-7,3,-9,-8,6,1,-8,10,-4,4,-6,-4,7,4,-2,-8,-5,-4,-5,-9,-2,-10,5,-4,-5,-10,3,4,8,8,8,10,-8,-8,-9,-1,-7,-3,3,3,8,-8,9,-1,-1,8,-4,5,-5,4,-1,-8,5,3,9,-3,1,-7,5,-7,6,8,-8,-3,-5,8,9,-4,-7,2,3,2,9,4,5,2,1,-3,-10,-1,-3,-1,-4,9,-4,-5,8,-10,-7,3,-8,-5,-5,-7,5,2,-6,10,-9,-9,-10,9,4,-7,6,2,6,-4,-6,-4,8,6,-10,-3,-5,-2,-7,-5,2,1,-3,-5,-10,8,9,-6,-9,-2,9,7,-8,-1,2,5,9,4,-10,-10,8,-8,-1,6,5,8,3,-9,6,5,7,2,7,7,2,10,7,-9,-10,-8,-2,10,4,8,1,-6,3,-4,3,-10,1,7,9,6,-10,8,-3,-9,10,-4,1,9,1,6,9,1,7,-9,5,-8,10,-6,4,7,-3,7,5,7,1,10,-1,-1,-10,-7,-6,7,-2,-8,-10,-2,-7,8,5,10,1,8,-10,2,-1,-2,-5,2,3,6,6,10,-7,7,-6,-9,-6,10,-10,-5,-3,-8,7,-8,10,6,1,9,-4,1,-5,8,-1,-7,-3,2,9,-6,9,-7,-9,-7,8,-10,4,2,-4,-1,9,6,8,9,7,2,-1,-9,1,-3,-1,1,4,5,4,-3,-1,6,-6,-7,-10,2,-9,4,-4,10,9,1,7,-1,3,5,-2,5,7,2,-2,-1,-5,10,-1,7,4,-3,-5,3,10,-1,-10,-10,-8,-6,-9,9,3,5,4,6,-9,8,-5,1,-10,8,1,-6,-2,-7,-9,-9,10,8,6,-1,-3,1,1,-3,-6,-8,9,-6,-8,4,-1,-10,6,4,-2,-9,5,4,3,6,8,-8,10,8,7,5,-6,9,-5,-6,-10,-1,-4,-1,-2,-8,-3,-7,-8,-10,8,3,10,-6,8,1,8,5,7,-10,-4,-9,-3,-9,9,8,-3,-1,-6,8,-2,4,-1,1,6,6,10,-7,10,-7,-3,8,7,-9,-10,-7,-7,2,9,-5,7,-4,-7,-3,5,7,5,4,-9,-5,3,1,2,-6,-9,5,-2,-2,-10,-5,-4,-2,2,-1,10,-1,-7,-1,-8,-9,9,2,2,2,10,6,-2,3,6,-8,-9,9,3,-4,-8,7,-6,3,-4,2,2,8,-8,-1,-6,-1,8,-2,10,10,-8,9,6,3,-7,-4,7,-5,4,1,3,-6,2,9,-1,-3,-8,2,-4,-5,-4,-10,-2,5,-10,-7,-10,3,-8,-5,-5,-7,-3,-8,8,10,6,-10,-4,4,3,7,2,-5,-4,1,-1,2,-9,-4,6,8,5,-10,-5,3,6,9,-1,2,7,5,-2,-3,-7,-10,3,5,-6,-7,9,-6,3,7,-2,-1,2,6,-5,7,-7,7,2,8,-8,8,-6,-4,-4,4,2,4,1,8,-8,-8,-1,-5,-6,3,-7,-1,9,-1,-10,8,10,8,1,-5,-2,-4,-7,-7,1,9,3,8,-9,5,-5,3,-5,7,8,7,-7,2,1,1,1,7,-1,-8,-7,10,-7,7,6,10,-8,-2,7,10,-7,-9,10,6,10,-2,8,8,6,9,-1,-4,5,5,3,-9,8,-1,-3,-10,1,-9,5,-4,5,3,-2,5,6,-9,-7,9,6,4,7,2,7,6,-9,4,-6,9,5,-5,-4,-10,-5,-6,9,8,-7,3,-2,-7,1,-6,-10,5,7,-6,6,-3,5,2,1,-1,2,4,2,8,5,-10,-7,10,-7,-6,-2,-6,8,2,-9,10,8,-7,7,6,7,9,-1,7,-5,4,2,6,-7,-1,-3,8,-7,4,10,8,-3,1,-7,-5,3,-2,1,-9,8,7,-3,5,-9,5,-6,-7,1,-7,8,1,-3,-10,-2,-3,1,2,-2,-5,3,-2,-5,9,1,-4,-10,-2,-7,5,3,10,5,-9,8,-2,4,-1,5,4,-8,6,-3,-8,3,10,9,-4,-1,-3,-7,-1,1,1,-1,-1,-3,-4,-7,7,-6,-8,8,-1,-4,-9,1,3,9,7,9,1,-7,10,-9,-4,5,-2,-5,-3,7,-10,-9,8,7,10,-3,9,5,-4,6,9,-9,4,4,-2,7,-1,5,8,5,9,8,10,7,10,-3,5,-2,5,-6,6,1,4,9,9,10,3,-5,-3,-10,-6,-2,4,-9,9,-8,-3,-4,-6,-8,6,2,-6,-6,-7,-2,7,3,-9,10,2,-2,-8,3,-1,8,1,-9,-7,5,-1,-9,2,-2,6,8,-4,4,-9,6,10,-7,6,-7,3,8,-1,-4,1,-6,10,7,-6,-5,-8,7,9,-8,-2,-9,-8,-10,-6,-6,2,5,5,5,-3,-8,-3,10,1,-6,-4,9,-4,3,-3,8,-10,-9,-5,6,-7,8,1,2,7,-6,-5,-2,-6,-10,3,-6,10,-8,2,-2,2,8,7,7,10,-4,-10,5,-5,-7,-10,3,-8,5,-7,-8,-7,4,10,10,7,-6,-4,5,3,-8,-4,-5,2,-4,-8,-7,1,-1,-3,3,-6,-8,-8,-8,4,-6,-6,3,-2,6,9,5,5,3,8,9,-4,4,10,5,-9,4,-3,-3,4,-4,-3,7,6,7,7,-8,4,3,6,-10,10,-2,3,-5,-7,1,10,9,9,10,5,-7,9,-3,-9,-10,8,-9,9,7,-6,7,8,2,3,1,7,7,9,1,-6,6,-4,7,10,-1,-4,-2,6,8,-3,9,9,6,-9,-6,9,-1,7,-10,1,3,2,8,7,-7,-6,-10,4,3,-4,-10,-10,-8,8,4,-1,-5,-4,1,8,2,6,-1,2,6,2,9,-5,-1,-6,2,-3,2,-1,-9,-1,-5,4,7,-9,-2,-9,4,-1,-6,-9,-6,-9,-10,-1,1,1,-9,1,3,-1,2,-7,3,-3,-4,-1,-9,-9,1,7,2,-8,-2,-8,-9,-9,8,-1,-5,2,-1,2,-3,8,-2,6,2,4,-2,-1,1,6,-8,-10,3,2,7,5,-6], dtype = "int32")#candidate|6989|(1560,)|const|int32
call_6988 = func_5648_call(relay.reshape(call_6977.astype('int32'), []), relay.reshape(const_6989.astype('int32'), [13, 12, 10]), )
call_6990 = func_5648_call(relay.reshape(call_6977.astype('int32'), []), relay.reshape(const_6989.astype('int32'), [13, 12, 10]), )
func_5875_call = mod.get_global_var('func_5875')
func_5877_call = mutated_mod.get_global_var('func_5877')
call_7007 = relay.TupleGetItem(func_5875_call(), 0)
call_7008 = relay.TupleGetItem(func_5877_call(), 0)
func_3832_call = mod.get_global_var('func_3832')
func_3833_call = mutated_mod.get_global_var('func_3833')
call_7016 = func_3832_call()
call_7017 = func_3832_call()
output = relay.Tuple([call_6975,call_6977,const_6978,const_6979,call_6988,const_6989,call_7007,call_7016,])
output2 = relay.Tuple([call_6976,call_6980,const_6978,const_6979,call_6990,const_6989,call_7008,call_7017,])
func_7040 = relay.Function([], output)
mod['func_7040'] = func_7040
mod = relay.transform.InferType()(mod)
output = func_7040()
func_7041 = relay.Function([], output)
mutated_mod['func_7041'] = func_7041
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7051 = relay.var("var_7051", dtype = "float64", shape = (1, 11, 7))#candidate|7051|(1, 11, 7)|var|float64
var_7052 = relay.var("var_7052", dtype = "float64", shape = (6, 11, 7))#candidate|7052|(6, 11, 7)|var|float64
bop_7053 = relay.power(var_7051.astype('float64'), var_7052.astype('float64')) # shape=(6, 11, 7)
uop_7070 = relay.erf(var_7051.astype('float32')) # shape=(1, 11, 7)
output = relay.Tuple([bop_7053,uop_7070,])
output2 = relay.Tuple([bop_7053,uop_7070,])
func_7075 = relay.Function([var_7051,var_7052,], output)
mod['func_7075'] = func_7075
mod = relay.transform.InferType()(mod)
var_7076 = relay.var("var_7076", dtype = "float64", shape = (1, 11, 7))#candidate|7076|(1, 11, 7)|var|float64
var_7077 = relay.var("var_7077", dtype = "float64", shape = (6, 11, 7))#candidate|7077|(6, 11, 7)|var|float64
output = func_7075(var_7076,var_7077,)
func_7078 = relay.Function([var_7076,var_7077,], output)
mutated_mod['func_7078'] = func_7078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4513_call = mod.get_global_var('func_4513')
func_4515_call = mutated_mod.get_global_var('func_4515')
call_7082 = relay.TupleGetItem(func_4513_call(), 0)
call_7083 = relay.TupleGetItem(func_4515_call(), 0)
func_2563_call = mod.get_global_var('func_2563')
func_2568_call = mutated_mod.get_global_var('func_2568')
var_7111 = relay.var("var_7111", dtype = "uint8", shape = (52,))#candidate|7111|(52,)|var|uint8
const_7112 = relay.const([-1,6,10,-2,4,-8,2,-5,5,-1,-7,-9,10,3,-9,9,-9,-4,8,-3,-3,-1,10,-7,-2,-7,1,-3,-2,-6,-3,10,7,2,-9,-2,-5,-7,-3,-9,5,3,-1,-9,-3,5,10,-7,-1,-6,3,3,3,2,-8,-10,-8,-1,1,6,-6,9,10,5,-6,-2,-1,8,6,-7,-2,9,9,-3,-9,4,1,3,9,1,-1,4,-7,-5,2,-9,-8,-4,-8,9,5,-5,5,6,-8,-7,9,2,-4,2,8,8,-10,4,1,-5,7,3,-8,3,-5,4,4,1,-2,1,4,7,-6,-4,-6,-3,1,-4,2,-4,10,10,-5,-1,6,8,-3,-6,9,4,-8,-10,-1,-7,-2,2,10,-7,5,-3,-9,-2,9,-1,-7,6,4,-4,10,9,-4,-5,3,1,-9,-10,9,-1,10,-7,-9,-4,-8,-9,2,2,1,10,9,-5,-8,-5,6,7,9,5,-8,-2,-7,-7,-3,3,-4,1,6,10,-8,3,2,-2,-4,1,-3,-8,-8,-9,2,4,-7,-9,-10,9,5,-3,-9,-10,-9,-5,-7,-3,10,5,-4,-9,-5,-3,9,-2,3,-3,-10,7,5,-4,-9,-9,-10,10,-5,-6,7,-5,1,-9,5,-9,7,6,10,-6,6,-7,-8,-10,-3,-3,-6,-5,8,-3,7,7,10,6,1,8,-5,-6,1,8,-2,4,-1,-5,4,9,-2,3,-10,-3,-1,10,7,1,-2,9,1,-10,-2,-1,-6,8,-7,-1,10,-9,4,-6,-5,-8,7,-1,-1,-3,7,-1,-6,-1,2,1,-8,4,10,-3,-9,4,-8,-8,-5,6,-7,-6,-10,6,-1,-3,-5,-10,-8,-2,6,7,-10,-5,-6,-8,1,-5,-3,10,-6,-2,1,8,9,-8,-7,-8,-10,3,-7,-10,-6,-7,4,4,2,4,2,-5,-3,3,-10,6,-8,-7,-9,1,-1,-6,-6,6,-8,3,2,8,-3,-3,4,6,-8,4,9,3,-4,7,-9,7,-3,7,8,-1,8,5,-5,3,3,1,5,-4,-4,10,-1,-3,7,2,-5,8,10,5,-6,9,10,-3,-5,-5,-5,-4,-1,-3], dtype = "uint8")#candidate|7112|(416,)|const|uint8
const_7113 = relay.const([[1],[3],[10],[-2],[3],[4],[-10],[5],[8],[-9],[-5],[-1],[4],[6],[5],[6],[1],[4],[7],[6],[-7],[-3],[-5],[4],[-10],[-4],[-5],[-8],[4],[-3],[-8],[-7],[-8],[10],[-6],[-5],[-9],[9],[-7],[-1],[-5],[3],[-2],[2],[-7],[-7],[2],[3],[4],[7],[-2],[-2],[-3],[6],[5],[10],[-4],[1],[-4],[-4],[-8],[3],[4],[1],[-1],[-7],[-5],[3],[1],[1],[-9],[-5],[1],[-1],[-10],[3],[3],[-9],[-6],[-6],[-1],[8],[-3],[3],[2],[-9],[2],[-6],[-3],[-8],[-9],[3],[1],[-10],[2],[-1],[-2],[-8],[-2],[10],[-4],[5],[-4],[-1],[-7],[3],[1],[9],[-8],[8],[6],[3],[-8],[2],[4],[4],[-10],[4],[-1],[4],[-3],[3],[3],[-6],[10],[10],[-3],[3],[-6],[5],[-8],[7],[-9],[5],[-5],[7],[5],[4],[1],[-10],[-5],[-8],[-5],[-4],[-7],[-2],[8],[-4],[-2],[9],[9],[-7],[-8],[-2],[-4],[2],[3],[10],[3],[3],[-2],[7],[-6],[-9],[2],[-8],[-3],[-3],[8],[2],[10],[-1],[-3],[4],[-4],[-6],[-4],[6],[-3],[-10],[10],[4],[-5],[-6],[6],[4],[3],[-10],[-8],[-4],[3],[-7],[-2],[9],[-6],[10],[7],[3],[5],[-4],[9],[-7],[-5],[1],[-3],[-6],[-5],[-3],[5],[-2],[-1],[1],[10],[-7],[-3],[-6],[-10],[5],[1],[-1],[-8],[-1],[9],[10],[6],[-7],[8],[-4],[-1],[-3],[-3],[-7],[3],[-2],[-7],[-1],[7],[10],[7],[-10],[-3],[1],[-6],[-10],[-7],[1],[6],[-7],[-9],[5],[10],[-3],[-9],[-5],[-2],[-1],[-5],[-8],[9],[-7],[-3],[-10],[-4],[7],[-6],[9],[8],[4],[-4],[4],[-7],[3],[-1],[-2],[9],[9],[-6],[10],[-6],[5],[-1],[9],[-8],[-7],[-6],[-8],[-9],[-5],[-2],[-1],[4],[2],[10],[4],[-8],[7],[5],[9],[1],[-6],[10],[-7],[7],[-9],[9],[-7],[-1],[7],[-10],[7],[-9],[-9],[2],[-8],[5],[-9],[-7],[6],[-10],[-2],[-7],[4],[-7],[-7],[-9],[7],[1],[-4],[6],[-4],[-3],[-8],[1],[4],[-8],[-10],[5],[-1],[2],[-3],[4],[-1],[-6],[8],[7],[2],[6],[10],[-1],[9],[-3],[4],[-1],[-4],[7],[-8],[-7],[-6],[5],[4],[-5],[-10],[6],[8],[-8],[-9],[-6],[-1],[-10],[-1],[-2],[7],[-7],[-2],[-6],[-2],[3],[-4],[6],[8],[-1],[-5],[10],[3],[4],[-6],[-3],[6],[6],[4],[-6],[-5],[-10],[10],[2],[-10],[-5],[-1],[4],[6],[10],[-4],[4],[4],[-8],[2],[-3],[-5],[-5],[-9],[-2],[-10],[-5],[-3],[-5],[-6],[-2],[-7],[-8],[4],[7],[2],[-2],[-7],[1],[-4],[6],[-8],[-6],[-9],[-2],[5],[3],[8],[-5],[1],[-10],[-4],[-9],[9],[-8],[3],[-6],[-4],[-3],[-3],[-9],[-7],[-4],[-6],[-1],[1],[-10],[-4],[-7],[-1],[6],[6],[4],[-6],[4],[-4],[-10],[5],[-7],[-3],[8],[2],[8],[-8],[-10],[9],[-2],[10],[6],[7],[-7],[-2],[1],[3],[10],[8],[7],[-7],[5],[9],[6],[-3],[-4],[8],[-1],[9],[-5],[7],[2],[-4],[5],[2],[4],[-6],[-7],[-6],[6],[3],[4],[-9],[6],[3],[10],[-7],[-9],[7],[-5],[-5],[-8],[-7],[9],[-8],[-3],[-2],[-2],[-4],[-8],[10],[-6],[-4],[-10],[-8],[-8],[3],[3],[1],[-5],[6],[1],[7],[-8],[4],[7],[-5],[2],[7],[-10],[8],[-7],[6],[-1],[3],[-7],[4],[-4],[3],[-1],[9],[2],[-10],[-3],[10],[-1],[1],[-7],[9],[5],[6],[10],[10],[-2],[-7],[2],[10],[9],[-2],[-6],[-6],[-9],[6],[-6],[-6],[8],[3],[-1],[-1],[7],[-7],[-3],[5],[-6],[4],[7],[10],[9],[-4],[10],[5],[1],[3],[10],[6],[-3],[6],[-7],[-7],[8],[-6],[1],[1],[-1],[-4],[4],[-8],[-7],[6],[8],[-7],[-4],[-4],[-6],[5],[-2],[10],[-6],[-3],[7],[-7],[-9],[5],[-7],[-5],[4],[5],[-7],[-8],[-1],[6],[5],[-7],[9],[7],[9],[7],[10],[-4],[-3],[-3],[3],[5],[-8],[2],[8],[-1],[5],[6],[-9],[-10],[-9],[-4],[6],[-10],[-9],[8],[-1],[-9],[-9],[-8],[-10],[-2],[8],[9],[-10],[-4],[3],[-2],[8],[-2],[4],[-6],[-4],[-4],[5],[-2],[3],[-9],[1],[-8],[8],[-2],[2],[2],[3],[-6],[5],[-4],[6],[-3],[-1],[7],[8],[-5],[-6],[2],[7],[-5],[-7],[8],[2],[-8],[5],[-7],[1],[-1],[5],[-6],[-5],[-4],[4],[-5],[1],[1],[-8],[9],[-2],[-8],[-9],[7],[4],[-2],[-7],[4],[9],[-3],[5],[5],[9],[-3],[6],[6],[8],[-4],[-8],[9],[-10],[-3],[-9],[-9],[8],[-3],[-1],[8],[-6],[-4],[4],[10],[-5],[-1],[7],[6],[-2],[4],[-5],[-2],[-6],[-5],[-5],[4],[7],[-6],[9],[3],[2],[6],[-3],[-7],[-1],[-8],[6],[1],[-5],[7],[-1],[-3]], dtype = "uint8")#candidate|7113|(780, 1)|const|uint8
const_7114 = relay.const([[2.042361,1.667229,2.581773,-7.489101,-9.490062,2.566044,2.593732,-0.770405,6.819547,-9.544034,-1.574991,6.716365,0.853873,-1.028067,-9.692954,-4.952377,7.113939,9.745247,-0.941263,1.386354,4.379595,7.225754,0.525861,4.758175,-0.986633,8.950559,-1.377503,2.669634,6.147573,1.042475,1.906555,2.535852,9.590546,-9.244767,-9.537752,8.389972,-8.365146,2.886911,-1.789008,5.756976,-6.325406,-4.877054,0.619755,-5.587504,1.405170,-9.339938,8.670727,7.950948,-4.319427,0.401401,2.863876,-9.980856,1.914383,-6.116351,9.674136,-8.514043,-6.955323,-3.847712,-1.981112,-9.701438,-1.936874,8.909686,-9.682559,4.808666,-7.737983,-8.172054,1.676637,5.910712,-9.809145,-8.378568,5.784692,6.614936,4.615019,7.856914,8.156868,7.416712,8.647154,9.640443,8.600981,-4.649610,3.535446,-3.210076,-6.287541,-3.313914,0.818672,-2.728357,5.286644,-1.999287,9.590797,0.163344,6.207764,-3.602980,7.139123,-9.853205,-7.381156,-7.475989,1.027983,-1.530575,-2.754307,-8.598095,-0.759020,8.954159,3.698391,-0.842419,7.456028,7.960315,0.199673,6.885285,0.251886,5.797848,5.486931,-3.661355,-1.529223,-1.780441,9.640105,-6.747074,0.707806,9.806177,4.402004,7.716684,5.687672,5.064946,-5.304415,6.096807,4.109610,-5.505555,-3.062031,3.318540,0.980193,-1.389590,1.141491,-3.787040,-9.734503,9.403662,-9.381753,-8.114234,5.688490,-1.878965,5.240356,8.966945,-2.051692,7.970795,-1.642206,-3.666469,-3.875178,-5.477624,0.196817,-4.156268,9.529122,-9.971983,-3.399973,5.062029,-8.276735,6.847699,-1.957451,-4.337888,-6.397838,3.866186,3.124948,0.509516,-0.677675,8.947785,-2.190374,8.445931,3.123888,6.530266,8.716057,1.862471,-2.219588,4.289825,7.106468,-8.852264,0.224222,8.055233,1.043104,-1.302979,-5.157436,6.846327,9.373380,-9.717923,-4.572579,-0.261499,6.041565,-8.184853,-9.403613,-5.673393,5.093443,-1.548468,-1.752548,7.666099,-1.499484,-7.392785,6.901321,7.451809,-4.623742,2.129037,-2.289011,-5.914471,9.239445,5.633044,-0.968193,-9.149976,-1.002550,-6.731246,-6.145111,-2.238745,6.818366,2.013255,3.468453,7.456703,4.993131,-9.333120,-3.057808,1.019391,2.241747,-9.702016,-9.083003,-4.477616,5.352549,7.750511,-4.969777,-3.113603,-3.377176,3.436069,-1.249945,-7.504174,9.484611,3.217811,1.390649,-6.519981,-4.963836,7.441652,4.737473,2.014728,-4.146217,-0.021145,1.055364,7.530399,-6.484177,5.388767,2.836988,-8.325198,-6.452349,3.716785,-0.847090,7.782005,-5.796748,0.070080,-2.995037,-9.007031,-9.677958,2.977694,2.770134,3.348966,6.397894,-9.784307,-5.092032,-0.244856,6.340972,2.485434,9.017660,-1.538067,4.032629,2.651150,-7.974855,-4.376274,-0.326013,-8.376802,-7.314554,4.128562,-8.243305,3.993600,1.696722,-0.469441,8.349070,-2.117094,-4.011774,-9.386945,8.467190,2.930967,4.439443,-1.309562,1.942968,4.764406,-1.678963,-6.716254,-0.735129,-2.111168,1.190211,-7.628786,-6.902836,9.505099,8.447386,-9.708995,1.637512,2.402366,1.330826,-3.077074,-8.183241,5.191755,-0.151645,-3.592348,3.293118,-8.830340,1.814624,5.421177,-7.584895,-8.456155,-7.863479,-8.749690,-1.779207,-4.684013,2.910882,-9.522271,-2.457214,-5.167395,2.626622,0.507118,5.778172,2.615868,6.823097,-8.347182,6.710162,3.580496,9.777716,2.513286,6.344807,-5.703950,-0.176268,5.403036,-3.145322,-7.076204,-6.549980,-5.011977,3.766784,-9.038767,-9.585556,-4.995586,6.383539,1.823829,8.148156,-3.130815,-3.933301,4.801096,6.059628,9.408200,7.783986,-4.933330,7.806284,4.591084,-9.348028,3.730833,6.582482,5.135684,-1.044123,8.413328,9.309058,-4.736701,-2.591924,0.464748,-1.912793,3.180030,-1.442675,8.799475,-3.646935,-1.753941,-8.469287,7.110500,-2.384651,-2.498270,7.317493,-9.733113,2.044000,-5.766035,2.274412,-8.262004,-8.194518,3.504752,7.919649,3.495290,8.655981,-2.207676,1.126597,5.131610,-4.646284,-4.103153,-1.590401,2.641488,-6.799959,3.685323,6.385978,6.966213,-5.325679,-6.448954,-3.620252,7.089993,0.400278,5.660487,-3.610350,-6.875215,3.622940,-6.528454,-3.184607,4.946946,-9.553139,-6.756734,-9.025358,7.485493,-5.362711,-9.610316,0.534851,-4.053352,-3.287300,-2.175098,7.575871,7.064043,0.467627,-3.607057,7.784411,-3.471963,-6.421097,2.045174,2.664865,0.148315,-5.781103,-6.328116,-7.769815,1.039742,-4.511638,5.832277,-1.248249,-2.359537,-4.207523,9.746096,9.194936,7.328418,-2.940447,-8.804071,-2.526605,4.464509,-5.716116,-7.258606,5.668064,5.000578,6.874474,4.569588,4.116957,-4.654820,-2.345321,-1.240583,3.821532,9.900344,-0.280097,0.498049,-5.813679,-0.056629,-2.172905,7.573558,-6.603696,-6.036573,4.649464,4.867672,3.944100,-0.019292,-1.357722,5.668439,3.609498,4.997070,8.099511,-0.451481,-7.285130,-9.688265,0.918577,-6.637269,-3.878553,-5.402194,-7.691701,-0.331933,6.598673,5.772712,5.136655,5.931676,9.108035,6.069790,-2.252910,-9.601304,-2.499182,3.565585,-2.309229,3.111534,-5.388415,-2.566973,6.325661,0.516781,-4.463678,-9.626855,1.019221,-3.674758,9.020309,6.348134,4.574569,-3.586230,-2.038504,8.179529,3.684390,6.085506,-9.412119,-7.456376,1.967457,-8.083038,-2.299690,0.172602,8.491233,-4.824653,3.116198,-8.811730,-6.427309,-5.601964,-3.374179,9.984482,-2.853136,-6.716836,0.049570,9.642595,-5.378632,-7.157776,-7.919399,-1.093627,5.112976,-5.283026,2.775617,1.807432,8.374136,-6.459170,3.853618,7.099964,6.207227,4.816319,-9.981389,6.095210,-4.710474,5.341051,8.013694,-7.160108,5.187012,-8.741541,6.013026,-9.665357,3.418100,9.050107,-4.063051,5.072646,-4.542898,-6.115084,4.803108,2.330465,7.137499,-8.846256,-9.901497,1.349839,-9.116385,-0.215142,0.331541,-3.549194,-3.902705,-2.483520,0.778242,-3.309693,-2.543640,-0.539943,-4.153618,6.871271,0.211279,-9.013402,3.627071,3.564916,5.036423,5.109940,-9.586153,-0.079874,4.514485,9.846868,-1.612426,-5.637874,6.707932,-9.282598,-6.688496,0.485500,4.817758,-5.376552,-0.752521,-9.646341,4.384838,-7.561214,-8.558248,-8.557430,4.265821,-9.680273,8.172951,-5.401357,4.224587,-0.743427,3.061004,8.453385,-4.036397,6.053297,5.150692,-3.625098,1.413727,-6.368777,5.706192,-7.330008,4.527253,-1.724788,7.532526,5.498329,1.432567,0.319209,8.905204,-5.133832,-5.415762,-0.986318,6.339578,-6.179071,-7.070410,-0.719862,-3.424155,-5.121796,6.325487,-0.247359,-9.678105,-8.789581,-8.053458,-1.719751,-9.807170,2.172215,-9.176684,4.423738,-8.356867,-0.312379,-0.855585,3.925058,0.369958,-0.818308,-5.719720,-4.218235,-9.137981,3.807177,-7.016871,6.699062,-9.147162,6.025187,-1.638529,-7.670451,-9.113581,1.648070,-2.665124,7.235431,0.577648,-8.946162,2.987758,-0.348894,5.194684,-8.500845,3.670058,9.793795,-1.153354,-3.445851,7.782927,9.826841,6.985097,-4.001748,9.874181,-5.339814,-5.449383,7.188667,0.311124,1.506153,6.965055,-4.824446,5.801133,-8.401841,-0.200541,1.216618,6.240783,1.444533,8.369741,-4.448373,-2.529484,1.573797,-4.157578,-7.282482,-2.530741,-1.667037,3.983329,-9.145141,-5.261872,-3.959308,3.809449,-6.015451,-1.445853,-9.674680,-7.050113,5.409198,7.923548,2.097318,9.969362,0.106635,2.316673,5.291213,-9.464287,-4.598961,-4.106461,9.656612,-8.390367,-1.898481,1.163313,-2.462922,-8.749793,-5.121501,6.322157,6.447627,7.977874,-6.655684,-7.862187,1.572517,-1.626668,-4.730799,-7.587145,-9.713502,3.334719,-5.460979,1.297046,-8.836685,-1.528109,8.523494,-3.057394,-6.512659,6.155112,2.261923,-3.411532,-8.278006,-0.430561,4.202488,-5.933100,1.154965,-3.354164,7.542208,-0.433017,5.758368,-6.767526,-6.287916,6.506146,3.448917,-9.966022,4.771847,3.401896,5.322587,-6.871545,5.578919,-8.867688,-2.041041,-4.546152,7.049973,-4.858770,6.570022,3.989331,4.944178,-8.781712,-2.305577,5.580595,1.788186,7.845023,-8.426457,5.811997,8.587889,-1.207993,-6.352834,8.008825,-6.692872,0.143485,-9.237843,6.936506,5.511166,-1.596903,-8.903899,5.824384,6.259775,-0.811339,-1.910256,0.895054,-4.502746,-7.388373,-9.418255,-7.691517,4.406150,-1.694972,-5.319022,2.250704,6.457887,0.464433,-5.380723,4.380111,-0.579723,8.019567,5.562554,-6.197355,7.208534,-3.126208,-9.071678,-7.699760,-8.613575,7.874157,-4.996240,1.696450,2.185908,-2.487662,4.820377,7.268842,0.846977,4.506932,4.512228,-2.443990,-6.308141,-9.088874,2.173335,-2.425959,9.939943,5.000166,-3.236876,7.844378,8.357746,7.188349,5.932064,-6.523601,-4.005814,7.241892,0.119010,-1.490405,-5.826708,-3.957186,1.337412,-7.942056,0.355303,-7.304732,-3.440813,0.564483,6.473332,-2.090413,7.388614,-2.865402,-3.735253,4.698243,4.259313,9.316313,-0.749094,-3.053901,-0.748759,-3.440292,-2.619604,-9.863816,-9.739427,-6.234915,-5.235275,-3.552776,-1.585942,6.526872,-0.564683,-3.563442,-6.660371,6.920247,-0.527103,-3.782102,-4.296278,-8.990165,-4.027882,9.131096,-0.957654,-8.370147,4.641393,-9.582680,6.765022,-1.128485,-8.840825,-4.219476,4.357272,9.724213,0.301430,-3.247212,-2.589960,-2.006480,0.375195,7.281861,6.815955,6.599522,-0.058266,-3.040804,4.853468,7.814171,-6.795738,3.410082,3.172549,0.051890,-0.329592,2.813988,-5.308523,6.093208,5.441947,1.016902,4.499023,6.056657,-7.348052,5.989052,4.386521,7.037235,-1.387815,7.398832,5.153685,-1.247442,-7.341815,-2.064247,1.235180,3.772921,-3.630919]], dtype = "float64")#candidate|7114|(1, 924)|const|float64
call_7110 = relay.TupleGetItem(func_2563_call(relay.reshape(var_7111.astype('uint8'), [4, 1, 13]), relay.reshape(const_7112.astype('uint8'), [4, 8, 13]), relay.reshape(const_7113.astype('uint8'), [4, 15, 13]), relay.reshape(const_7114.astype('float64'), [924, 1]), ), 3)
call_7115 = relay.TupleGetItem(func_2568_call(relay.reshape(var_7111.astype('uint8'), [4, 1, 13]), relay.reshape(const_7112.astype('uint8'), [4, 8, 13]), relay.reshape(const_7113.astype('uint8'), [4, 15, 13]), relay.reshape(const_7114.astype('float64'), [924, 1]), ), 3)
uop_7128 = relay.acos(const_7114.astype('float64')) # shape=(1, 924)
uop_7130 = relay.asin(uop_7128.astype('float32')) # shape=(1, 924)
bop_7138 = relay.right_shift(uop_7130.astype('uint16'), relay.reshape(const_7114.astype('uint16'), relay.shape_of(uop_7130))) # shape=(1, 924)
func_4186_call = mod.get_global_var('func_4186')
func_4189_call = mutated_mod.get_global_var('func_4189')
const_7159 = relay.const([[9.334864,-8.939859,-4.376303,1.291127,1.040481,2.179973,-9.915458,2.693897,-0.711973,9.650847,2.563030,3.099990,9.602007,6.245094,-5.226539,-3.097371,4.092172,-3.447885,2.215063,-2.071850,-1.094559,3.884891,-0.056010,-1.450237,6.532909,8.006807,-3.044574,-2.827152,0.455745,8.786090,-0.346216,2.688659,-5.851087,-7.402558,7.300708,-4.726370,-7.522095,0.126660,-1.951120,4.999336,7.865380,-3.107617,4.809126,5.810817,-5.670267,-8.201900,-2.422494,-1.518990,9.123701,-3.949712,-8.624827,-8.047891],[7.479875,4.715718,1.170598,3.376262,7.324318,-7.843250,-5.982233,-3.223339,-3.540893,7.097397,-6.977280,7.795071,-1.437015,3.253094,-9.605204,2.810425,1.449579,6.606237,3.527123,2.623157,-8.203815,-8.521859,3.728336,-1.204439,1.675064,-5.639715,6.772847,-4.462883,4.420221,-7.459566,7.990938,8.238290,7.665475,-6.437580,1.000872,7.217708,3.772465,-4.722733,-7.226479,0.236677,7.860088,-7.607839,6.703423,-9.992811,-4.303336,5.622793,2.039136,-5.525513,0.960470,4.214395,-0.620075,5.617296],[-7.405718,-8.880792,-3.954692,1.497022,3.420297,-2.340558,-6.146312,6.038061,-4.623202,-9.305185,-0.067231,-0.768094,9.656090,-0.750985,-5.929930,-8.822694,-6.178967,-9.533849,-8.204993,-4.508997,3.899360,-6.032948,8.863422,-6.908295,-8.111876,8.663004,1.422773,5.546791,-3.396124,-4.896228,5.291055,5.152253,9.465097,-6.541408,6.237055,2.620032,0.427901,-2.953740,4.195957,-2.723630,-9.996025,-7.288971,7.761556,-8.176926,-8.308913,7.421300,6.451264,8.196281,-4.271354,-0.826443,-3.221536,-8.013751],[-5.260606,-2.982684,6.333701,0.861066,7.207410,8.880800,0.309669,-2.934723,-2.609422,4.657242,-9.081638,-0.378479,-2.670663,6.003937,-6.975982,1.680761,-7.170481,-5.204624,-9.284379,1.112777,-7.141111,5.072536,3.911962,8.610213,0.430051,3.627414,7.946685,-4.893707,1.290404,-7.935134,8.117071,-1.499204,5.295457,5.850414,-9.189152,4.240781,1.293446,3.500087,-8.719107,-8.204298,4.872150,-1.839024,1.658627,6.468184,-2.599849,-4.693146,2.446521,4.377299,2.950623,-8.620526,-6.499768,-8.725387],[-2.222588,-1.936686,-0.310660,-7.367372,-9.669870,-3.922100,4.795643,-6.706962,4.852352,5.400564,9.553086,-8.127989,2.680459,3.608034,-1.196687,4.878797,9.184982,-9.077466,-5.219497,0.634109,1.619708,-5.958035,2.668032,-5.226402,1.134518,7.698061,-5.231374,-8.345961,7.749362,8.200736,6.918107,-3.616087,-9.267024,4.311471,-6.018388,-8.051700,-7.769703,-3.860491,2.723916,9.615312,7.388042,-5.531808,-6.209544,7.732822,-4.110367,4.292827,-4.561074,-4.023716,-9.044821,1.267904,-7.984045,-6.666895],[9.974886,1.882753,5.267133,1.919462,3.115668,0.944224,-8.247999,3.759221,2.877177,1.210453,4.749850,9.062537,6.396173,-3.233116,-1.999231,-3.075534,3.326537,-1.810097,-6.533748,0.986890,8.811533,3.540554,-8.156774,-0.480342,-4.062176,3.909638,6.620227,5.450327,6.409131,9.876784,5.649929,0.258622,5.085331,9.062323,-4.021834,8.504148,9.822251,0.560759,-5.111342,-4.708310,2.864551,-7.256911,-4.284697,2.770197,5.208468,9.667421,0.453283,9.336926,-5.534893,-8.720194,-6.726821,8.614028],[9.183293,8.618460,-3.483662,-5.036517,7.139776,2.721323,-0.781728,3.698654,5.555007,-1.480976,-6.065146,9.507944,1.958177,3.076725,6.665784,3.681232,4.920633,-6.778928,-4.537730,-3.050058,2.338755,1.181211,-3.715296,9.982317,7.732701,-8.918770,-1.730368,3.817898,-9.047848,5.958141,6.031746,-7.700206,7.500477,-5.917362,6.540100,6.091468,-5.986124,-7.734977,3.074013,-1.300813,-7.623053,-4.743740,-8.139546,-5.514299,-5.664996,7.934865,-4.801863,8.962184,-6.902603,-3.297619,-3.677441,7.920020],[-9.941419,8.478330,2.732410,6.707693,8.383755,-2.311304,1.513931,-1.054396,-5.796628,2.902533,2.244477,-5.855800,-1.402861,2.912071,-1.544131,-3.940684,-7.969560,4.661266,6.066818,5.877601,-6.359773,2.998041,-8.358776,-6.573236,3.068262,-7.694793,-3.551479,-2.799554,3.032270,0.964969,-8.161927,-4.373134,6.850895,3.003112,-3.921116,1.072827,-8.480119,-8.693041,-6.217403,-0.275482,-0.998913,-7.250312,1.858541,-1.497136,-9.549029,3.422053,3.583450,-4.815027,5.215738,5.296240,-0.507890,-1.864570],[2.370865,-3.331177,0.621442,2.853759,5.493814,-4.116247,6.588869,7.152948,-9.812318,-6.359776,-9.586877,2.129201,-8.475388,-2.272077,9.044905,-0.245986,4.296482,6.737877,4.324164,3.349396,-7.427132,5.174904,-8.630728,-5.459720,0.541846,-9.532791,6.695166,4.945047,-5.447980,-5.562465,5.435633,2.347777,1.157205,5.558189,5.584262,1.173192,7.658912,5.983705,1.628754,-2.829773,5.670042,3.932416,-2.335316,-4.539477,-7.924395,7.387295,3.215446,-3.832479,0.136217,5.887110,-0.956655,-3.774058],[-2.107040,7.688449,4.704324,-0.738503,-9.132250,1.594798,7.588875,-1.389445,7.629670,1.545507,-3.123718,6.759070,2.924637,-1.653539,-0.210418,4.898978,2.320214,-3.328818,6.043891,5.355653,-8.492625,-3.210830,-0.111547,8.080904,-7.080412,1.922413,8.841425,-0.797417,0.764213,-4.869136,-5.015724,-5.452190,0.614927,-3.700605,-6.474390,-7.731475,5.888312,-6.206230,6.543865,0.098563,-1.122285,-8.060267,0.175536,-5.877404,-5.710772,-1.914331,0.700885,-7.932074,-7.590829,1.876409,-0.520733,3.187767],[-8.475014,9.022656,-5.014192,-4.780143,8.740563,-0.020861,4.827926,-0.193950,8.823927,-3.919966,2.756999,5.837856,-0.274501,-7.339646,1.460150,-7.427251,6.923625,5.746849,-3.535413,-8.013186,3.973786,-6.114778,-0.378041,-3.833948,-6.454252,-6.886807,9.934286,4.241735,-8.481187,-3.259118,2.908514,5.031092,-7.806954,-9.132732,-9.870238,1.328699,9.889264,0.160667,-0.432084,-0.132459,-6.632993,-9.664163,-1.467263,8.051120,-0.326349,-7.166838,-9.533396,-2.131831,5.544675,2.307899,-9.798181,8.396001],[0.309184,0.074732,-7.054363,-8.397339,-3.953549,-5.475051,-6.722305,5.950151,5.939512,-5.303575,7.125437,-8.311377,-4.611385,3.964601,-1.553778,-1.710402,9.507471,7.659019,5.871412,-7.871022,8.337926,2.607661,6.831817,-5.554881,-8.855422,-4.290257,8.012559,-3.322965,5.705419,-4.324978,-9.278762,5.398939,-3.594081,9.628578,-3.382424,5.000605,-0.340526,8.026025,7.183897,-3.839001,-4.835944,-1.139465,-9.138165,5.963251,-3.255060,2.665121,5.352751,-6.311077,-2.902278,3.524580,2.115763,-0.989341],[2.435971,7.776226,3.343785,1.394689,9.480086,8.751602,-2.114638,1.069078,9.546552,-5.165997,0.071403,-2.061341,-7.283125,-0.367160,7.903478,-4.659643,-1.379292,6.770626,4.830258,3.267920,-8.424297,-2.577495,-0.094750,5.489580,2.227506,-7.468114,-0.461292,-4.688852,-1.842798,6.963355,9.320910,5.522669,7.997224,8.776606,4.116832,5.555672,8.078374,-8.299602,0.378936,6.320123,6.015409,1.623085,1.494796,9.079434,-7.236328,1.688369,-8.694510,9.729150,9.112027,-9.077052,-8.891318,8.993976],[-2.974251,8.964212,0.222009,-5.162304,-3.320051,9.307294,2.585111,8.372636,6.195472,3.996704,1.440711,9.929766,7.325450,9.934502,-6.085482,1.219732,8.614523,-3.909304,-5.968931,4.477591,9.033798,-8.104405,7.763565,-5.061062,-0.068877,-5.867916,9.650523,-9.111805,-5.646207,-1.220919,-6.923223,2.654754,-4.874473,5.472143,-5.127924,1.504443,4.103390,-4.945067,4.804550,0.428635,-8.303912,-0.247034,7.272481,-2.815395,-6.365761,-8.219631,-5.582370,-4.697371,-1.437859,5.129999,8.125648,-0.185422],[-0.878467,6.981903,8.889879,7.105611,0.969702,9.217713,7.820478,-7.623420,-8.529234,-5.909855,-3.443899,7.361958,-8.081087,0.577123,4.068175,-2.696282,-3.760231,-9.848658,-9.032439,2.596957,4.055774,6.098688,-5.847150,-7.785752,-0.126006,5.459070,-6.799276,7.937072,-6.046023,-3.797085,-2.588816,8.341628,-2.365997,8.832112,-3.325671,-3.602972,6.931241,-1.240435,8.725972,3.442132,7.007424,-4.396575,4.494623,4.795374,-7.839820,-0.105731,-0.349505,9.453232,2.754629,-6.071426,6.905251,0.680961],[-9.602397,-4.059522,-7.445031,2.337439,5.672481,0.065387,-7.723533,-1.948670,-4.760848,8.696863,-3.841092,-4.682897,0.798183,2.963563,3.992138,-6.813774,-9.985084,-1.356801,-5.606036,0.701229,8.201781,-8.175823,6.010487,8.577146,6.129551,-2.188946,5.841858,4.940808,7.469086,-3.173644,6.469520,-0.268740,6.022292,2.231360,5.481534,5.294452,2.626493,-9.701302,-5.550052,2.953055,-2.601896,-8.659717,-6.573266,0.889033,-7.350568,-9.684098,-9.030703,-0.905768,8.790114,8.116529,-9.119782,-2.433465],[-9.912905,-0.662250,-2.508266,8.149322,9.149133,-6.530360,5.437409,-0.855227,5.676279,-7.301564,1.945991,-3.735179,-5.376926,1.811156,-0.264061,-3.455340,-4.544392,-2.686830,-9.123151,-8.515024,6.836932,4.913173,-5.332449,-3.049379,1.059124,7.546109,2.664455,8.946773,7.403750,-2.988579,-3.256798,-2.961252,4.577415,1.398134,-0.231138,-1.381555,3.909279,8.384437,0.184648,1.867888,-2.012852,7.163611,-8.087928,8.023461,-5.736083,-5.672772,-2.357391,9.714496,4.295934,-0.320892,-0.173288,5.248777],[-6.213528,6.410400,-5.737219,-1.397315,6.867077,3.170054,0.329188,0.064542,-7.795514,-8.600415,1.733049,6.987137,3.890157,-9.841597,-8.179519,3.378995,-0.786674,-6.686715,5.751762,6.330953,-3.574558,7.497922,7.303858,8.131374,-7.800099,7.114064,-0.305159,-6.344265,-6.182529,8.724271,-1.419029,1.455174,-0.257120,4.402969,4.723572,-3.397225,8.218159,3.049358,6.547575,2.603566,-0.444900,3.455474,0.578378,-1.192333,-5.476563,-8.567114,-5.115869,-8.382350,6.393995,5.802542,-8.074918,-8.143086],[7.324025,9.390981,5.151860,-3.880994,3.787436,-3.963355,7.442162,-3.482024,-4.636925,-8.394042,-6.710882,4.014964,-1.699778,-5.680577,9.823729,6.070033,-5.029409,8.764492,2.258225,-9.868550,9.509646,6.357215,8.513810,-2.904821,-2.034840,1.040073,9.115946,-4.041568,6.691696,1.508814,8.318050,3.315612,9.003105,9.702552,-9.271760,0.842046,-1.586351,-0.853058,-1.189781,-6.140093,5.172421,0.726205,-8.810014,-0.198782,5.793727,-5.088378,-8.453240,-6.614666,-7.724909,-2.687938,9.069388,-4.067437],[-8.406004,-0.163118,-0.844089,3.072578,-8.717244,-2.109633,-9.172325,-9.677145,-4.935196,9.263995,-6.047934,-1.459258,5.167162,9.190989,-6.788848,9.821174,-0.233283,1.209126,-2.648929,-0.373084,-9.487969,5.528316,2.607350,-6.081432,8.686838,4.818403,1.783075,-4.535670,-4.321990,-5.164555,-4.184086,-9.159909,0.687166,3.358040,-1.672490,-2.691829,-8.816252,-9.516186,8.094675,-6.948489,-7.680412,-3.610086,2.571263,-2.302263,-6.276729,5.046232,-2.246069,4.052275,4.415697,6.622949,-0.848308,-7.083444],[-5.704802,-1.178828,5.029009,-3.797628,-0.162504,-6.834754,9.681570,-3.108940,7.067124,-8.193214,9.266902,1.527018,-6.747418,-4.927924,-0.490759,-3.628568,8.860467,-0.156878,2.368764,-6.277954,6.496122,9.273191,-3.903443,-0.062079,3.101515,9.163899,-6.554649,-6.410695,-2.536448,2.203779,5.866693,5.318536,-8.716101,-9.017424,-7.925940,-3.953236,3.752125,-8.156002,6.359943,8.345182,-4.308034,8.189762,1.625663,0.204171,-9.175907,-6.598711,-7.213981,8.088995,5.951340,-1.968674,-2.069976,4.742850],[6.575411,1.341200,-4.195730,9.026463,-0.177564,5.255318,-1.415586,8.145327,7.819342,7.977998,0.093385,-5.410864,-8.361743,-6.845190,3.710271,-2.050342,2.659372,9.756638,-4.497231,-8.356969,3.267687,-5.204939,3.098086,4.506906,4.803765,-3.378617,0.682094,1.186756,-9.412988,-2.425222,0.828215,-2.203841,2.667075,-0.471685,-3.777799,-2.111007,-3.286744,-8.637269,-8.295763,-4.976207,-7.860033,-5.719773,6.015228,9.182898,4.524939,-9.752573,-9.994680,6.379143,-6.517712,7.765248,3.598909,2.274515]], dtype = "float64")#candidate|7159|(22, 52)|const|float64
call_7158 = relay.TupleGetItem(func_4186_call(relay.reshape(const_7159.astype('float64'), [8, 11, 13])), 0)
call_7160 = relay.TupleGetItem(func_4189_call(relay.reshape(const_7159.astype('float64'), [8, 11, 13])), 0)
func_6297_call = mod.get_global_var('func_6297')
func_6298_call = mutated_mod.get_global_var('func_6298')
call_7163 = relay.TupleGetItem(func_6297_call(), 0)
call_7164 = relay.TupleGetItem(func_6298_call(), 0)
func_3516_call = mod.get_global_var('func_3516')
func_3518_call = mutated_mod.get_global_var('func_3518')
call_7168 = relay.TupleGetItem(func_3516_call(), 0)
call_7169 = relay.TupleGetItem(func_3518_call(), 0)
bop_7180 = relay.bitwise_xor(uop_7130.astype('int64'), relay.reshape(uop_7128.astype('int64'), relay.shape_of(uop_7130))) # shape=(1, 924)
output = relay.Tuple([call_7082,call_7110,var_7111,const_7112,const_7113,bop_7138,call_7158,const_7159,call_7163,call_7168,bop_7180,])
output2 = relay.Tuple([call_7083,call_7115,var_7111,const_7112,const_7113,bop_7138,call_7160,const_7159,call_7164,call_7169,bop_7180,])
func_7202 = relay.Function([var_7111,], output)
mod['func_7202'] = func_7202
mod = relay.transform.InferType()(mod)
var_7203 = relay.var("var_7203", dtype = "uint8", shape = (52,))#candidate|7203|(52,)|var|uint8
output = func_7202(var_7203)
func_7204 = relay.Function([var_7203], output)
mutated_mod['func_7204'] = func_7204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6507_call = mod.get_global_var('func_6507')
func_6508_call = mutated_mod.get_global_var('func_6508')
call_7243 = relay.TupleGetItem(func_6507_call(), 0)
call_7244 = relay.TupleGetItem(func_6508_call(), 0)
func_6318_call = mod.get_global_var('func_6318')
func_6320_call = mutated_mod.get_global_var('func_6320')
var_7248 = relay.var("var_7248", dtype = "float32", shape = (192, 4))#candidate|7248|(192, 4)|var|float32
call_7247 = relay.TupleGetItem(func_6318_call(relay.reshape(var_7248.astype('float32'), [6, 16, 8])), 0)
call_7249 = relay.TupleGetItem(func_6320_call(relay.reshape(var_7248.astype('float32'), [6, 16, 8])), 0)
func_5375_call = mod.get_global_var('func_5375')
func_5377_call = mutated_mod.get_global_var('func_5377')
call_7255 = func_5375_call()
call_7256 = func_5375_call()
output = relay.Tuple([call_7243,call_7247,var_7248,call_7255,])
output2 = relay.Tuple([call_7244,call_7249,var_7248,call_7256,])
func_7281 = relay.Function([var_7248,], output)
mod['func_7281'] = func_7281
mod = relay.transform.InferType()(mod)
mutated_mod['func_7281'] = func_7281
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7282 = relay.var("var_7282", dtype = "float32", shape = (192, 4))#candidate|7282|(192, 4)|var|float32
func_7281_call = mutated_mod.get_global_var('func_7281')
call_7283 = func_7281_call(var_7282)
output = call_7283
func_7284 = relay.Function([var_7282], output)
mutated_mod['func_7284'] = func_7284
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7289 = relay.var("var_7289", dtype = "uint64", shape = (11, 7, 9))#candidate|7289|(11, 7, 9)|var|uint64
var_7290 = relay.var("var_7290", dtype = "uint64", shape = (11, 7, 9))#candidate|7290|(11, 7, 9)|var|uint64
bop_7291 = relay.maximum(var_7289.astype('uint64'), relay.reshape(var_7290.astype('uint64'), relay.shape_of(var_7289))) # shape=(11, 7, 9)
output = bop_7291
output2 = bop_7291
func_7303 = relay.Function([var_7289,var_7290,], output)
mod['func_7303'] = func_7303
mod = relay.transform.InferType()(mod)
mutated_mod['func_7303'] = func_7303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7303_call = mutated_mod.get_global_var('func_7303')
var_7305 = relay.var("var_7305", dtype = "uint64", shape = (11, 7, 9))#candidate|7305|(11, 7, 9)|var|uint64
var_7306 = relay.var("var_7306", dtype = "uint64", shape = (11, 7, 9))#candidate|7306|(11, 7, 9)|var|uint64
call_7304 = func_7303_call(var_7305,var_7306,)
output = call_7304
func_7307 = relay.Function([var_7305,var_7306,], output)
mutated_mod['func_7307'] = func_7307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6093_call = mod.get_global_var('func_6093')
func_6095_call = mutated_mod.get_global_var('func_6095')
call_7332 = relay.TupleGetItem(func_6093_call(), 1)
call_7333 = relay.TupleGetItem(func_6095_call(), 1)
output = call_7332
output2 = call_7333
func_7338 = relay.Function([], output)
mod['func_7338'] = func_7338
mod = relay.transform.InferType()(mod)
output = func_7338()
func_7339 = relay.Function([], output)
mutated_mod['func_7339'] = func_7339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5259_call = mod.get_global_var('func_5259')
func_5261_call = mutated_mod.get_global_var('func_5261')
call_7340 = relay.TupleGetItem(func_5259_call(), 3)
call_7341 = relay.TupleGetItem(func_5261_call(), 3)
func_3396_call = mod.get_global_var('func_3396')
func_3398_call = mutated_mod.get_global_var('func_3398')
call_7347 = relay.TupleGetItem(func_3396_call(), 0)
call_7348 = relay.TupleGetItem(func_3398_call(), 0)
output = relay.Tuple([call_7340,call_7347,])
output2 = relay.Tuple([call_7341,call_7348,])
func_7382 = relay.Function([], output)
mod['func_7382'] = func_7382
mod = relay.transform.InferType()(mod)
mutated_mod['func_7382'] = func_7382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7382_call = mutated_mod.get_global_var('func_7382')
call_7383 = func_7382_call()
output = call_7383
func_7384 = relay.Function([], output)
mutated_mod['func_7384'] = func_7384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7040_call = mod.get_global_var('func_7040')
func_7041_call = mutated_mod.get_global_var('func_7041')
call_7390 = relay.TupleGetItem(func_7040_call(), 3)
call_7391 = relay.TupleGetItem(func_7041_call(), 3)
func_5038_call = mod.get_global_var('func_5038')
func_5040_call = mutated_mod.get_global_var('func_5040')
call_7420 = func_5038_call()
call_7421 = func_5038_call()
func_2366_call = mod.get_global_var('func_2366')
func_2370_call = mutated_mod.get_global_var('func_2370')
const_7429 = relay.const([-7.340514,-0.788159,-7.850203,-5.259877,7.137728,0.423618,0.510088,2.631675,2.331393,2.236535,2.358509,6.266223,-8.891735,0.089736,6.410626,7.263091,9.069117,-9.064711,4.182260,9.804607,5.823873,5.049467,-9.683815,4.546944,-0.178484,4.319845,-8.021289,-8.275242,-2.893654,-6.287872,7.473017,-0.204485,1.146312,-6.255134,8.460229,-6.596650,2.298974,9.163210,-5.310402,8.532111,7.874002,-1.750873,7.614345,-8.167702,-5.653727,7.495987,7.828271,9.898344,5.871556,8.394986,7.600771,8.135511,1.626878,-8.891077,0.459839,-7.416903,-9.760530,-3.585043,3.232851,-4.653791,-2.966503,6.277067,4.133334,-7.975405,0.144901,2.733640,0.477096,1.967471,6.168151,7.931636], dtype = "float32")#candidate|7429|(70,)|const|float32
call_7428 = relay.TupleGetItem(func_2366_call(relay.reshape(const_7429.astype('float32'), [5, 7, 2]), relay.reshape(const_7429.astype('float32'), [5, 7, 2]), ), 0)
call_7430 = relay.TupleGetItem(func_2370_call(relay.reshape(const_7429.astype('float32'), [5, 7, 2]), relay.reshape(const_7429.astype('float32'), [5, 7, 2]), ), 0)
func_3505_call = mod.get_global_var('func_3505')
func_3507_call = mutated_mod.get_global_var('func_3507')
call_7443 = func_3505_call()
call_7444 = func_3505_call()
func_3556_call = mod.get_global_var('func_3556')
func_3558_call = mutated_mod.get_global_var('func_3558')
call_7466 = relay.TupleGetItem(func_3556_call(), 1)
call_7467 = relay.TupleGetItem(func_3558_call(), 1)
output = relay.Tuple([call_7390,call_7420,call_7428,const_7429,call_7443,call_7466,])
output2 = relay.Tuple([call_7391,call_7421,call_7430,const_7429,call_7444,call_7467,])
func_7468 = relay.Function([], output)
mod['func_7468'] = func_7468
mod = relay.transform.InferType()(mod)
mutated_mod['func_7468'] = func_7468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7468_call = mutated_mod.get_global_var('func_7468')
call_7469 = func_7468_call()
output = call_7469
func_7470 = relay.Function([], output)
mutated_mod['func_7470'] = func_7470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6591_call = mod.get_global_var('func_6591')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_7489 = relay.TupleGetItem(func_6591_call(), 0)
call_7490 = relay.TupleGetItem(func_6593_call(), 0)
output = call_7489
output2 = call_7490
func_7497 = relay.Function([], output)
mod['func_7497'] = func_7497
mod = relay.transform.InferType()(mod)
mutated_mod['func_7497'] = func_7497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7497_call = mutated_mod.get_global_var('func_7497')
call_7498 = func_7497_call()
output = call_7498
func_7499 = relay.Function([], output)
mutated_mod['func_7499'] = func_7499
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7516 = relay.const([[[-6.968172,3.789307,-8.404376,-7.700970,-3.305789,-6.368830,-8.719658,7.980860,7.542117,5.209863],[-7.830618,8.602640,7.840311,0.191269,-1.462493,-7.697566,-1.627478,-7.526966,-3.659084,9.954292],[4.235498,2.114652,-6.032933,-5.888446,7.443995,4.137419,3.193426,6.077097,5.519445,-1.222895],[0.063440,-2.956698,-3.842513,-0.696979,0.362252,-1.626031,-9.523136,2.692737,-6.863622,-1.543449],[1.136085,-4.571174,-8.586772,-7.996054,-7.535777,-7.847397,1.107688,5.700566,0.920272,-2.010234],[-8.234735,0.318815,3.024727,8.371609,-0.288523,1.434607,9.199314,1.946413,5.618568,-6.504489],[-8.330012,0.751967,2.314250,-2.423957,1.228272,-1.942488,1.116216,-1.968036,-5.483048,-6.287312],[6.994150,-6.980562,2.850615,9.648551,5.055364,5.388100,-9.867597,1.706436,6.136092,-6.716264],[1.297745,-3.225557,-9.921201,4.556402,3.490003,-8.035878,1.894992,3.024259,-6.609169,5.929923],[-0.421514,6.002088,7.222225,8.776794,-0.611215,6.429158,-1.876279,-7.886070,-7.838044,0.910769],[-4.003797,4.435336,-2.551048,-0.310683,6.995716,8.183688,-8.155952,-4.796193,5.239061,8.421364],[4.599473,4.851365,-3.338933,-3.268369,8.063285,-5.800444,7.546147,6.760062,0.999440,-4.616999],[1.086817,-0.970232,9.874824,-6.681456,-7.987794,-9.505217,-4.006553,6.650535,-4.569115,-4.833976],[1.325471,7.281485,-4.534458,3.089763,-1.297740,-1.857375,6.933272,-7.110101,3.077721,9.548153],[-9.971832,7.785757,-7.388065,0.936187,-4.050861,-3.334440,0.539848,5.840473,5.852953,3.097991]],[[-7.067672,0.156946,-8.360818,-5.879923,-5.558686,-3.265537,-5.232579,-2.044613,-6.334122,7.928784],[3.005741,4.442463,7.890196,-6.480664,8.125674,-2.996521,7.093657,8.886691,0.046080,0.909328],[8.497494,-2.510409,5.477433,-1.075052,7.529639,-8.385354,-4.506993,4.619051,-5.361703,-3.030966],[6.927663,-2.268691,-6.272864,-7.867293,3.991534,-7.838170,6.391215,-6.452371,8.220247,3.964385],[-3.223366,9.359679,1.736895,-2.608359,-3.548495,5.405526,-4.279058,-7.691732,1.354171,-5.154697],[-3.145098,7.272695,-3.960797,-0.718068,2.484263,-1.597164,8.234920,-1.766819,-5.102518,6.203003],[2.592968,-8.739993,-4.231620,-5.138903,8.395635,-3.930187,8.393141,-7.311536,-7.546087,3.190406],[-7.713433,9.086378,3.079898,-4.815170,5.834786,-7.320015,-1.116626,-6.628707,6.969902,-8.510844],[6.595277,-4.507092,-0.246039,-4.969993,3.578959,-2.658960,7.628819,-9.595967,9.761519,-6.728776],[-9.872335,9.360315,8.067947,1.224355,6.749566,-0.538607,-1.204539,8.662781,8.954178,3.443123],[-4.572903,-1.737774,-8.110665,-4.799026,6.424761,-8.784376,-7.673066,-7.506838,9.203181,-7.302595],[8.606307,5.736416,-7.531106,-6.282473,3.938351,-2.637791,-0.362184,0.175778,2.022907,-9.216737],[5.404860,-7.906094,7.014629,9.615821,-1.172240,1.416224,-9.091167,-8.051715,5.544565,-5.287644],[-4.552187,-4.360861,9.756817,6.129620,-0.667739,4.476841,-6.324422,2.290709,-4.831254,-5.889798],[-3.046675,-0.089819,0.852264,5.172551,-9.610776,4.243700,0.921733,2.593833,0.581617,5.272712]],[[-8.339574,3.553300,6.303038,-6.945027,-1.294843,-2.923833,-3.446958,5.519987,2.996567,8.446192],[4.743455,6.671679,-3.959430,0.002017,4.415327,8.893381,-4.883455,9.921293,3.676159,4.219814],[-8.407608,7.686621,2.547500,-8.428647,8.728745,-1.783042,-9.038112,3.745872,-8.461774,0.975307],[-9.649585,6.037260,3.625209,-2.281237,1.492099,-1.527966,1.926271,-5.959544,1.686310,-1.925158],[-6.593770,5.835298,-0.297748,-7.826512,8.632472,-8.087001,-2.513667,-7.124296,-7.587681,7.852828],[3.104319,-2.413973,6.950213,2.654180,7.875307,9.959883,-3.740078,8.673522,-4.713902,8.324336],[8.233159,1.099884,4.180816,9.146689,-5.535894,7.805803,8.375335,-9.718656,1.862049,8.214745],[4.113244,-3.824107,2.402131,-5.808107,7.701237,6.817950,-0.291528,4.112808,1.187067,0.138803],[0.840530,0.726833,-0.117472,3.483746,9.923386,3.777111,5.659779,-2.582219,7.930898,-3.123977],[-4.325170,1.880360,-9.942017,-1.064179,3.119896,7.980873,0.473489,2.271844,5.951582,4.850443],[2.058126,3.781243,-8.686342,7.327326,2.056378,4.783118,-0.922561,-2.266575,3.172714,-4.848132],[-1.745563,4.794944,-9.490179,-6.700687,4.045961,-4.293775,-6.398142,7.169692,4.956431,-4.421175],[4.446074,-8.384600,-9.422142,-5.114181,0.185251,-6.393954,1.684563,2.645126,9.852056,6.159879],[9.370239,3.892633,1.092699,7.879741,-2.163272,1.927616,5.157996,5.345742,-6.268722,1.062839],[-2.457374,-2.217517,8.146554,2.920108,8.365346,6.712574,-0.367601,-5.682605,6.237051,-4.524400]],[[0.339134,0.785116,6.121399,-5.106273,9.985199,3.517374,4.049646,4.096464,-7.614009,5.124276],[1.930144,-9.747753,-2.411820,1.870850,-7.426424,3.335200,-0.734295,-8.925926,1.424980,3.061236],[-5.663985,-6.578651,-5.668539,-7.556182,-8.215786,-5.656198,-5.670641,7.191833,3.236460,1.033602],[-0.042608,2.371376,3.270112,-0.405708,-2.759886,7.711887,-1.829820,4.675198,2.251043,5.139992],[5.117405,4.793142,9.812940,-6.681527,-9.182770,-6.562821,-8.059566,0.011497,-0.790148,-6.873308],[0.355447,4.782049,3.421727,2.921009,7.437404,-5.083688,-8.478816,-8.004652,-5.020372,5.411022],[-7.008040,7.690417,4.674198,4.375010,-9.626604,0.299180,5.221183,-0.434128,2.701283,-8.200669],[-8.878685,6.535815,-6.305502,-6.042051,7.626407,6.450875,-5.520964,-9.046876,5.027607,4.433974],[-7.709867,-2.287658,6.397432,-3.482230,-5.065838,4.773992,-5.540493,6.191571,6.766551,3.080726],[2.611289,-5.912287,-8.841553,-6.919825,-0.960726,6.268053,-1.091974,3.786486,-0.205289,-7.697276],[-2.957509,-5.235584,-8.304577,4.830559,6.774355,-6.768319,-3.247233,-8.368256,-6.114078,-2.428135],[-3.337248,1.177857,3.648570,3.591116,-0.861801,-3.842303,4.448347,5.800017,2.841170,6.189373],[-1.009224,7.301881,0.908098,3.394623,-2.381010,-7.174659,5.825391,8.478996,-2.475977,0.470546],[-2.576395,8.771788,-0.230549,-1.677840,-6.801281,-4.584664,2.382133,3.345538,-5.934871,-1.874848],[-9.319726,5.826655,-5.884850,4.727218,6.124715,-4.287645,-1.353455,-0.635078,-7.130695,-0.053460]],[[-0.137495,1.879877,0.799514,-5.257088,3.336462,-6.459052,-8.961867,-1.559432,4.345541,0.204810],[-5.755458,-4.318392,-9.246822,7.380562,4.990520,5.401583,-6.000184,-3.558963,5.750585,7.034183],[4.438810,-3.216079,-1.336437,7.600774,-5.323146,-7.294988,-7.861784,-0.581229,0.587635,3.593323],[3.323253,9.945278,-4.504742,9.346534,-5.334611,-8.203144,6.313321,5.859249,0.187035,3.091389],[-5.442798,-6.324243,-5.618905,9.131511,-8.084641,8.582312,9.372939,-8.260361,-4.352054,1.083767],[-1.344365,-6.740312,-6.668359,6.138731,-9.326583,-6.305272,5.478277,0.973293,7.637370,6.172191],[-1.324256,7.016017,6.392525,2.495787,-8.010211,8.657237,-5.639156,-8.092877,8.932861,2.001310],[-4.519793,-5.207719,-4.950307,6.832613,-7.136016,-6.266848,2.827815,-6.414888,2.307760,-2.510010],[-0.994047,-2.624518,-9.276762,-5.073433,3.958788,5.006122,5.031111,1.769977,-5.466072,8.957763],[0.344385,9.389040,6.236699,-7.900025,6.619080,-1.042260,-5.060080,-7.820007,2.884831,-7.170538],[-8.546149,-4.285861,-1.424009,-1.825319,7.322703,0.979500,4.235294,3.574069,8.740322,1.511597],[3.104109,-3.709262,-9.892433,-4.872600,6.972837,-6.671804,-9.388755,4.946533,-4.415815,5.798420],[6.611346,9.265110,6.607120,-5.437558,-2.870486,7.503218,7.232796,6.422622,4.373024,-7.372899],[-4.898831,-7.801249,0.709740,4.352768,7.019099,4.421419,-4.729883,3.689575,-4.170094,-9.122497],[9.147081,-1.290723,6.944786,8.739929,1.141711,-6.244075,-3.431402,-6.556731,-5.088249,-0.638760]],[[1.851137,9.196958,-2.947960,8.585501,-3.396247,7.736663,-3.598748,-0.269047,9.696855,-9.840706],[0.386625,-0.223785,2.087880,-6.026402,3.072008,-3.739975,-7.509203,-0.135851,-7.549973,3.537690],[3.478771,2.163462,-5.624514,3.997569,5.875033,-6.485315,-9.112139,-8.383301,-4.786387,-1.996093],[0.372429,-3.568403,-8.496991,-2.863946,-7.564815,6.681867,-7.830929,8.982337,-6.382064,-4.393752],[-0.200674,4.710433,-0.169029,0.041088,-2.659127,-4.280192,-3.960071,8.284805,3.000372,4.578187],[-7.048412,0.652159,1.309094,1.408752,1.200881,5.688625,8.057835,3.916099,5.141589,-2.500031],[-5.833935,3.627736,4.148076,6.058183,0.679517,-7.475929,4.238007,-8.184774,4.336475,-6.186997],[-8.400749,-1.262243,-0.346238,2.657930,-1.802828,3.162625,-0.693788,4.279894,-8.343224,-6.430507],[-7.541363,6.019458,-9.014751,-4.962634,0.013047,-5.923747,9.978323,0.937351,-9.404776,5.330236],[-8.860161,5.410922,3.404218,-2.287556,1.510609,4.556890,-3.339216,8.569003,3.365951,-0.536986],[4.146434,-7.772450,7.321653,-0.751015,-6.798008,9.925895,5.897914,5.376515,3.171154,-9.265677],[-6.477408,-6.837768,-2.440300,0.880062,-6.225502,-3.715539,-2.420214,-3.610689,9.241096,-4.745199],[-0.169838,-7.311843,-4.403379,-8.136121,-7.756784,7.074862,9.315866,6.191553,2.608020,3.928607],[-7.000903,1.543405,-5.730197,-0.629615,9.138795,0.997975,-7.662750,8.003098,2.547899,5.604382],[-9.192159,-2.903440,-3.233062,2.269401,-2.027229,8.739785,-2.193861,1.574423,-3.736336,-8.753402]],[[-4.476970,4.890851,-8.055876,-3.808023,1.253317,6.074605,-5.901465,9.170172,3.171622,-5.285128],[7.360727,-7.989473,6.537472,-1.478552,2.420628,0.229721,-7.855773,2.528970,9.672074,-5.043012],[2.551551,-5.653821,1.540869,-2.384552,-8.973434,-4.163014,5.848580,2.184080,-9.540099,-2.792107],[7.647871,-8.437557,3.533503,-9.746439,2.860528,4.298448,-1.296707,-2.446124,5.697908,-0.874463],[5.715340,2.385211,9.297597,9.709864,-0.820781,9.598126,4.346269,7.549623,2.144682,9.144329],[-4.201775,4.492051,-6.502559,-3.949429,2.949095,7.043458,1.517153,4.760238,-6.670052,-0.826121],[-9.159371,-8.090148,3.137071,-4.489326,1.942497,7.835232,-8.348765,-2.874706,-8.390909,-7.737151],[4.365196,3.255644,-0.670338,2.611081,3.726189,6.335406,6.298406,-5.477986,1.555328,-6.916431],[-2.169256,-9.652303,-8.911389,-0.207210,7.097741,-6.152346,-0.603737,5.539306,-2.333714,9.962776],[0.598616,-6.810114,-7.308264,3.865916,9.909478,-4.478130,-3.657994,6.577451,8.037468,6.665941],[-5.406975,8.160307,8.596579,-7.196980,8.406204,-8.868148,-7.035765,-9.304512,8.483570,6.041775],[9.445531,-4.731064,-0.325641,-0.461119,6.927477,1.210542,-8.218924,5.146502,5.206493,2.476084],[5.009569,1.274486,-6.340275,8.459774,-6.538747,9.045556,-4.823520,1.072317,0.171486,0.596276],[1.468321,-3.893339,2.472171,-0.805739,6.985001,-4.081055,5.310907,1.516375,3.956886,3.846309],[6.651581,1.820037,-3.887684,-4.501208,-9.291441,2.765334,-6.698570,8.469418,4.726522,5.089720]]], dtype = "float64")#candidate|7516|(7, 15, 10)|const|float64
uop_7517 = relay.tan(const_7516.astype('float64')) # shape=(7, 15, 10)
func_3873_call = mod.get_global_var('func_3873')
func_3874_call = mutated_mod.get_global_var('func_3874')
call_7520 = func_3873_call()
call_7521 = func_3873_call()
output = relay.Tuple([uop_7517,call_7520,])
output2 = relay.Tuple([uop_7517,call_7521,])
func_7523 = relay.Function([], output)
mod['func_7523'] = func_7523
mod = relay.transform.InferType()(mod)
output = func_7523()
func_7524 = relay.Function([], output)
mutated_mod['func_7524'] = func_7524
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7525 = relay.const([[[2.223815,-0.285110,4.628186,-9.632733,-8.641925,7.043459,-3.649420,3.973307,-2.611508,4.626974],[-2.848937,-3.549514,-9.230160,-3.799821,-1.719888,-4.935408,1.433297,-6.781474,-1.805757,5.448742],[8.612677,9.407627,4.170619,-5.204684,-9.553770,-7.712575,-7.485807,7.120887,-9.779035,2.251231],[1.876305,-4.186457,-9.676855,-5.099122,-5.197911,-0.638295,-5.438118,8.810564,-1.298720,3.188654],[7.776037,8.626574,9.465842,2.105355,2.754049,-0.523031,-1.905493,8.952708,-5.625540,7.996203],[2.006199,-9.751384,8.029080,4.150561,4.417441,-5.470776,-2.971825,-5.529153,-5.654974,-2.714604],[1.318025,-0.080678,2.485077,-5.237870,3.032056,-5.848990,5.365167,3.047794,3.592978,3.032814],[1.370763,8.373685,6.577975,6.576745,5.889136,1.536776,1.858138,-9.134414,9.114604,-9.186229],[-2.290100,6.319382,0.224625,-6.754089,-2.354911,1.165581,0.809811,4.863020,6.396770,-9.297802]],[[-1.347179,6.319410,-6.561176,7.287765,-5.705830,-7.560539,-1.833819,7.272421,-3.654000,-0.837966],[1.656549,9.071449,8.196012,1.041672,1.139017,2.788022,-1.042968,7.900946,9.222233,-4.623085],[-5.068038,-6.833100,7.149693,-1.902030,-6.180367,-2.036301,2.726756,-1.362622,-9.355439,3.370168],[-4.430090,-5.406228,5.076559,1.593482,-2.391635,-5.084888,-8.809653,7.486756,-9.153778,-7.966542],[7.339822,-2.351312,-3.535527,6.749177,3.643386,-2.409728,9.632613,-3.639534,1.150454,6.857813],[6.201539,-5.791710,9.276422,5.374610,-5.338399,-0.996617,-3.287693,-3.038752,5.979027,-1.224668],[-8.950427,-5.058730,7.937920,-6.048710,-5.912895,-7.174242,8.502036,-6.841470,-1.761690,0.325685],[7.783027,-2.037776,-3.999367,-3.305836,-2.904111,-5.088752,3.416854,4.440098,3.446527,1.742545],[6.882823,-1.468206,1.812345,8.535795,-2.488331,-4.871965,-9.134761,-6.781612,4.166871,6.393311]],[[8.435707,-3.819837,-6.189970,7.462112,2.492015,-8.059313,-2.214266,5.605170,2.142985,2.816855],[7.814974,7.668945,2.587731,0.145506,-5.665294,-3.826092,-7.828375,-3.112276,-1.085126,3.594492],[5.672955,9.310656,-9.895518,3.947126,5.402298,1.032643,-4.084748,6.503868,-3.683184,-0.365968],[5.008471,-3.276461,0.462498,-9.840288,-8.191019,3.376529,1.246812,3.225295,1.564327,4.148210],[-1.435698,-7.091268,3.551144,-0.998257,-7.135374,-5.093064,6.739697,4.542189,-7.433577,5.017424],[6.591089,-2.744458,4.820262,-9.225836,-9.131377,5.861765,3.055707,9.823740,9.899577,-2.558100],[-4.953588,1.601402,-2.930585,-6.833649,5.447782,2.085870,-6.185241,7.246499,-8.348742,-1.516509],[-4.892061,5.962052,5.591878,-8.633413,-8.486516,-2.920268,-5.459952,-5.658466,0.718368,0.570670],[-7.860700,3.230057,-7.855233,-0.210143,1.882173,6.037540,5.280450,7.892570,4.291309,5.829133]],[[-6.555275,-3.598876,-3.517864,8.399777,1.990359,-1.339138,-2.026385,-9.508777,-3.183509,3.332578],[1.253865,6.072472,2.682639,-7.845054,1.418873,-6.724365,7.359322,-2.210505,5.057231,1.165950],[-0.659276,0.464709,-7.514141,5.561492,-9.785101,-2.077886,0.063341,-7.659809,-3.235753,5.196683],[6.345560,7.348643,-6.628999,-7.652486,-7.760425,-2.804949,9.982830,8.522697,7.397016,-5.924305],[2.837455,1.428894,0.098815,9.312844,-2.563247,5.130855,-1.138197,8.121019,-3.521548,-6.150585],[6.664999,8.149948,-3.200666,-8.050467,1.842641,-8.477939,3.257434,6.799599,8.213164,-6.271733],[3.330554,0.513987,1.412404,-3.588659,-9.064539,-7.254943,5.972346,-9.473030,-8.659794,7.027371],[-5.916714,-8.084272,0.185881,-7.839666,-8.272363,0.426026,-9.458800,2.531890,9.500647,5.226450],[-4.467684,2.259635,5.968250,-2.436609,8.886458,7.243470,3.919022,3.527846,5.305606,0.292827]],[[0.542763,2.628537,-6.639831,9.677622,-5.186447,8.936544,-3.048325,-3.497201,7.022776,6.902166],[-8.772053,-7.823411,-9.871957,-3.305150,8.224387,7.763627,-9.885628,-1.129626,8.068857,-1.939891],[-2.076755,-3.161401,6.698980,-7.517262,0.058836,6.925511,-5.624689,2.203441,9.297362,-7.642063],[-1.647492,8.569011,-3.588819,1.491604,9.030744,4.298075,8.083346,-5.044174,-0.154224,3.749227],[-4.648876,7.809694,-6.494940,6.193408,-4.366159,-0.362354,3.912610,-9.408749,5.625313,4.883058],[2.188278,-8.927544,1.344500,7.645189,5.990941,4.342622,7.973765,-7.295725,-5.664687,-2.970543],[7.368858,2.717421,-0.636717,-9.250705,4.759174,9.774304,-9.746604,6.708033,-6.098383,7.861773],[-5.892220,-3.735738,4.893404,5.217225,-0.759594,3.551300,5.623091,1.258004,-4.083393,6.889937],[7.623989,-0.700253,3.164302,2.067642,4.768805,4.486059,-4.007897,6.026179,6.917081,5.949526]],[[-6.943048,8.898805,5.440458,-7.116297,0.979916,2.142867,-4.658980,-0.806305,4.143583,4.801848],[8.606153,-0.839331,-7.942358,0.673661,7.485257,-0.244781,3.466978,3.826199,-7.308788,-6.564212],[9.501252,-1.948687,-0.235991,4.782702,5.737190,-4.281292,-7.798564,-3.618563,-4.416796,-7.731571],[-1.081280,-9.121907,-3.561939,-6.726125,1.377513,-4.113339,-0.290379,-9.307732,-8.600927,-2.688196],[-2.573808,-9.476565,-1.978953,-7.097495,-7.885562,-8.108760,5.362962,7.539213,-3.592802,-2.763170],[-0.077141,-0.687932,6.178005,7.233311,5.307676,3.093760,-6.706998,-1.323991,-8.668332,-7.577019],[9.510024,3.080542,7.400940,-3.587515,-4.931101,1.029935,-6.484782,1.297313,-6.995707,9.753380],[3.760299,6.617761,-5.681978,-4.763157,-6.966973,2.588600,4.697674,-2.424570,3.558941,-3.485890],[2.857702,6.014005,7.952867,-7.529714,2.472581,5.222135,-0.970535,8.734389,-0.920597,-8.167151]],[[-9.801681,-7.364753,-3.539148,-8.195554,-3.615847,-7.068685,-4.470804,7.654888,-1.885014,6.213160],[3.248920,-6.446021,7.696988,-0.010158,1.830435,5.313158,-8.634709,1.438905,-9.599589,1.868419],[-7.381138,6.551771,7.648605,2.299710,-0.047083,2.879773,3.251251,6.471437,5.079680,3.743948],[-1.495255,-6.025688,-2.848159,-6.636522,4.003123,3.078665,7.491648,-6.431829,6.259641,-6.062586],[-4.643382,9.322362,-5.308646,5.383693,-3.643040,-4.675517,5.003612,-1.104375,2.641809,-3.308983],[-3.588716,-6.377541,-4.521855,-4.058287,-8.988534,6.527511,-6.906426,7.161551,-4.549680,8.951951],[4.560281,3.875710,-9.198684,-6.739728,-1.147506,8.589341,6.665155,-0.615168,-2.658932,8.746041],[-1.540761,-7.133506,-2.558488,7.351417,-3.102383,4.833133,-9.470571,-2.906714,-0.685999,-2.885373],[9.175776,4.155155,-3.963106,3.869565,-8.215108,7.504664,3.946393,-0.291486,9.087993,-8.813284]],[[-8.639279,0.348694,2.972173,0.880564,8.578122,-8.652373,6.537318,3.509065,-9.922696,7.251535],[7.271687,8.410269,-2.085868,-2.858339,3.129915,2.611870,9.796861,-7.833527,-3.653717,-7.132149],[-3.310026,-7.932371,3.782421,1.098778,-9.393000,-7.264220,5.135530,9.285063,2.787028,-8.697223],[-9.168565,-0.517940,-7.891072,-0.548394,7.503376,-1.946641,-1.419949,6.029309,-6.232576,1.447876],[3.382021,5.686572,8.628202,-5.947544,-8.217849,7.148091,-9.353082,-9.276963,-1.012534,9.595064],[-2.067380,2.798317,4.705494,-4.079627,2.888058,-1.683400,6.948313,-5.268283,-9.160974,-7.637208],[5.656894,-2.223271,5.284604,-3.327062,4.358927,4.002854,-6.508484,-7.380050,-6.509371,6.566133],[-2.547096,-0.627674,7.905555,-2.306100,-5.973936,8.691098,-0.715140,2.019360,-2.902788,-0.998201],[-2.027803,6.647173,-6.526263,-8.546278,-0.396143,0.519936,2.017987,3.169282,-9.193104,1.678487]]], dtype = "float64")#candidate|7525|(8, 9, 10)|const|float64
uop_7526 = relay.sqrt(const_7525.astype('float64')) # shape=(8, 9, 10)
uop_7533 = relay.atan(uop_7526.astype('float32')) # shape=(8, 9, 10)
uop_7573 = relay.rsqrt(uop_7533.astype('float64')) # shape=(8, 9, 10)
bop_7587 = relay.bitwise_and(const_7525.astype('int16'), relay.reshape(uop_7573.astype('int16'), relay.shape_of(const_7525))) # shape=(8, 9, 10)
func_5410_call = mod.get_global_var('func_5410')
func_5412_call = mutated_mod.get_global_var('func_5412')
call_7609 = func_5410_call()
call_7610 = func_5410_call()
uop_7611 = relay.acos(uop_7573.astype('float64')) # shape=(8, 9, 10)
output = relay.Tuple([bop_7587,call_7609,uop_7611,])
output2 = relay.Tuple([bop_7587,call_7610,uop_7611,])
func_7618 = relay.Function([], output)
mod['func_7618'] = func_7618
mod = relay.transform.InferType()(mod)
output = func_7618()
func_7619 = relay.Function([], output)
mutated_mod['func_7619'] = func_7619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7618_call = mod.get_global_var('func_7618')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_7622 = relay.TupleGetItem(func_7618_call(), 1)
call_7623 = relay.TupleGetItem(func_7619_call(), 1)
func_2932_call = mod.get_global_var('func_2932')
func_2936_call = mutated_mod.get_global_var('func_2936')
var_7638 = relay.var("var_7638", dtype = "uint64", shape = (364,))#candidate|7638|(364,)|var|uint64
call_7637 = relay.TupleGetItem(func_2932_call(relay.reshape(var_7638.astype('uint64'), [14, 13, 2]), relay.reshape(var_7638.astype('uint64'), [14, 13, 2]), relay.reshape(var_7638.astype('uint64'), [14, 13, 2]), ), 0)
call_7639 = relay.TupleGetItem(func_2936_call(relay.reshape(var_7638.astype('uint64'), [14, 13, 2]), relay.reshape(var_7638.astype('uint64'), [14, 13, 2]), relay.reshape(var_7638.astype('uint64'), [14, 13, 2]), ), 0)
func_6708_call = mod.get_global_var('func_6708')
func_6709_call = mutated_mod.get_global_var('func_6709')
call_7650 = relay.TupleGetItem(func_6708_call(), 2)
call_7651 = relay.TupleGetItem(func_6709_call(), 2)
output = relay.Tuple([call_7622,call_7637,var_7638,call_7650,])
output2 = relay.Tuple([call_7623,call_7639,var_7638,call_7651,])
func_7653 = relay.Function([var_7638,], output)
mod['func_7653'] = func_7653
mod = relay.transform.InferType()(mod)
var_7654 = relay.var("var_7654", dtype = "uint64", shape = (364,))#candidate|7654|(364,)|var|uint64
output = func_7653(var_7654)
func_7655 = relay.Function([var_7654], output)
mutated_mod['func_7655'] = func_7655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7618_call = mod.get_global_var('func_7618')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_7675 = relay.TupleGetItem(func_7618_call(), 1)
call_7676 = relay.TupleGetItem(func_7619_call(), 1)
func_6803_call = mod.get_global_var('func_6803')
func_6805_call = mutated_mod.get_global_var('func_6805')
call_7687 = func_6803_call()
call_7688 = func_6803_call()
output = relay.Tuple([call_7675,call_7687,])
output2 = relay.Tuple([call_7676,call_7688,])
func_7689 = relay.Function([], output)
mod['func_7689'] = func_7689
mod = relay.transform.InferType()(mod)
output = func_7689()
func_7690 = relay.Function([], output)
mutated_mod['func_7690'] = func_7690
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7780 = relay.const([[[-1],[-6],[-2],[-10],[6],[-9],[-2],[2],[-3],[-6],[-10],[-3],[1],[-7],[7]],[[-3],[-3],[-5],[-5],[-10],[-3],[-9],[-8],[-2],[-5],[-1],[7],[5],[-9],[-1]],[[10],[-7],[4],[-10],[6],[-2],[-8],[6],[6],[-9],[6],[4],[-6],[-3],[3]],[[3],[9],[-6],[1],[2],[5],[8],[6],[3],[4],[1],[-4],[5],[-5],[-6]],[[2],[2],[9],[-4],[6],[-10],[9],[6],[6],[7],[3],[-1],[-6],[6],[-3]],[[-10],[2],[-8],[-9],[-1],[-8],[6],[3],[-5],[1],[-8],[-2],[1],[5],[9]]], dtype = "int64")#candidate|7780|(6, 15, 1)|const|int64
var_7781 = relay.var("var_7781", dtype = "int64", shape = (6, 15, 10))#candidate|7781|(6, 15, 10)|var|int64
bop_7782 = relay.maximum(const_7780.astype('int64'), var_7781.astype('int64')) # shape=(6, 15, 10)
uop_7786 = relay.log(var_7781.astype('float64')) # shape=(6, 15, 10)
func_4988_call = mod.get_global_var('func_4988')
func_4991_call = mutated_mod.get_global_var('func_4991')
const_7789 = relay.const([0.683618,-2.454835,3.379542,-4.376416,-8.257271,-3.244420,9.315102,-8.107839,-3.279812,0.943394,7.648353,4.411976,5.529369,5.762137,7.597805,-7.174274,-8.191147,-1.670655,-9.871434,6.379685,-0.192518,-1.230274,7.830157,-5.898057,-1.416603,0.553857,2.448779,6.677633,0.114207,-4.580766,4.573643,2.107260,3.834662,3.031636,1.057757,-1.730732,-6.846983,7.339227,-3.159065,4.795805,1.368037,-2.900261,3.696636,1.573525,-6.690660,6.680973,0.985994,3.563202,8.986900,-8.143201,1.408548,-2.125777,7.754525,2.275932,1.808920,0.101865,5.372917,-5.668245,9.497788,3.311364,9.190037,1.044292,-9.134543,6.382111,-2.131758,-6.886796,3.026172,3.936706,-9.405546,-8.482214,-1.702575,-5.697871,6.421795,-3.884100,9.513846,-1.298798,5.170195,7.576048,-1.479579,7.868689,-8.227027,3.907216,-2.628340,9.889352,1.635923,1.859183,9.255115,-4.328944,-4.489415,5.739897,-0.735293,-7.729302,-6.803465,7.528571,-4.224380,1.777159,-3.904441,-0.298128,5.063736,3.451202,0.704884,-4.444751,8.021952,8.057191,-9.881558,9.044894,-0.357160,-6.477730,4.118306,-9.934509,-6.335008,-5.911642,-5.105351,2.490476,-2.228284,-4.863707,9.317479,-4.715599,4.438904,-9.286147,3.541253,8.469372,1.212557,-9.571035,0.080969,2.098785,-1.322134,2.911567,-9.178220,-4.671770,2.542569,2.269380,-7.547812,6.774556,2.549409,8.169292,1.032689,0.876360,-9.230068,4.353082,-7.711467,7.604426,2.047955,8.285911,9.175307,-9.775047,-6.992419,-7.883246,-5.824357,4.070791,3.933201,-5.024584,7.383656,-7.693448,7.350697,2.319260,-3.854003,-8.811889,4.039852,9.328576,7.104935,-2.974356,6.610539,-6.901977,-6.414915,-7.634862,-1.192149,8.785710,-6.929408,0.958460,5.185199,7.760230,6.817509,9.443679,5.729233,-0.882567,6.003931,-8.184433,6.602369,-6.278872,-9.795582,4.354983,5.925262,-9.458252,-4.179249,1.424223,2.209358,2.575363,-1.188115,6.946881,-7.761810,-9.240404,-0.010328,-3.886810,-3.983845,-6.339358,6.561712,8.532653,-3.752721,-2.322963,-8.886545,-6.975207,-4.224290,-1.730345,2.019814,-0.320292,5.105354,9.977161,-3.638702,3.367983,-8.144290,7.465423,-6.376772,-0.466930,6.803349,5.306998,-4.419085,9.166731,-0.087695,6.240187,5.000994,4.764077,-5.464869,5.726716,-7.196711,6.804606,-5.146813,3.167809,-6.412830,6.323885,-6.061513,4.097500,-1.108723,-1.060862,-1.950250,-5.669924,6.650829,0.646701,-1.443477,-3.636850,2.874122,9.494744,8.044839,-6.544637,-6.301046,9.576104,3.384265,5.928922,4.286274,-1.921151,8.557694,6.536387,-2.165681,6.752487,5.444281,8.367617,6.727150,-6.296580,4.905794,-6.041493,-8.661078,2.805234,-3.083787,-7.633124,-5.563593,-8.217783,0.432179,-4.221438,-6.135903,8.224032,-5.778659,-1.640486,0.335724,-7.166515,-9.565595,3.439319,-0.207646,-1.053846,1.971466,-0.494013,8.333882,-7.542558,-3.175958,-9.875099,-5.023497,1.190375,-3.026277,-9.463978,-4.862108,7.356085,-8.068766,-7.374487,5.621019,1.664794,0.545455,-2.025989,-0.691913,7.939577,2.841700,3.201405,9.373642,-9.909588,5.726105,-4.297567,2.697798,-5.805909,-4.557477,-7.758802,5.332984,-5.955402,9.660535,8.614363,2.961318,9.541657,-7.342858,-5.517138,4.267953,6.817778,-5.462213,-1.542195], dtype = "float64")#candidate|7789|(320,)|const|float64
call_7788 = relay.TupleGetItem(func_4988_call(relay.reshape(const_7789.astype('float64'), [8, 5, 8])), 0)
call_7790 = relay.TupleGetItem(func_4991_call(relay.reshape(const_7789.astype('float64'), [8, 5, 8])), 0)
output = relay.Tuple([bop_7782,uop_7786,call_7788,const_7789,])
output2 = relay.Tuple([bop_7782,uop_7786,call_7790,const_7789,])
func_7792 = relay.Function([var_7781,], output)
mod['func_7792'] = func_7792
mod = relay.transform.InferType()(mod)
mutated_mod['func_7792'] = func_7792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7793 = relay.var("var_7793", dtype = "int64", shape = (6, 15, 10))#candidate|7793|(6, 15, 10)|var|int64
func_7792_call = mutated_mod.get_global_var('func_7792')
call_7794 = func_7792_call(var_7793)
output = call_7794
func_7795 = relay.Function([var_7793], output)
mutated_mod['func_7795'] = func_7795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5305_call = mod.get_global_var('func_5305')
func_5306_call = mutated_mod.get_global_var('func_5306')
call_7892 = relay.TupleGetItem(func_5305_call(), 1)
call_7893 = relay.TupleGetItem(func_5306_call(), 1)
output = relay.Tuple([call_7892,])
output2 = relay.Tuple([call_7893,])
func_7933 = relay.Function([], output)
mod['func_7933'] = func_7933
mod = relay.transform.InferType()(mod)
output = func_7933()
func_7934 = relay.Function([], output)
mutated_mod['func_7934'] = func_7934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5038_call = mod.get_global_var('func_5038')
func_5040_call = mutated_mod.get_global_var('func_5040')
call_8029 = func_5038_call()
call_8030 = func_5038_call()
output = call_8029
output2 = call_8030
func_8033 = relay.Function([], output)
mod['func_8033'] = func_8033
mod = relay.transform.InferType()(mod)
mutated_mod['func_8033'] = func_8033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8033_call = mutated_mod.get_global_var('func_8033')
call_8034 = func_8033_call()
output = call_8034
func_8035 = relay.Function([], output)
mutated_mod['func_8035'] = func_8035
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8054 = relay.var("var_8054", dtype = "float32", shape = ())#candidate|8054|()|var|float32
const_8055 = relay.const([[[2.260701,8.924824,-4.006959,5.954401,0.388633,-2.977707,9.822197,-5.793138,7.740573,-6.154364,7.063665,-7.720622,-1.980827],[5.339465,-1.455187,3.715510,-8.180795,6.813454,4.895496,-4.668535,-3.513598,-3.762511,2.656834,2.382225,-5.818176,-4.946089],[-9.559216,-5.749775,0.358472,7.039110,-3.711633,3.037164,0.349514,-0.101346,-8.318645,-0.819889,5.549060,-1.354247,0.307760],[0.527772,3.706467,5.298690,1.154534,-7.409281,1.662089,-5.794745,-7.853421,-0.972524,-9.151578,6.181001,1.763689,7.075059],[-4.481561,-4.678467,-5.273268,-5.086374,6.108537,4.931341,7.811971,6.413396,1.997206,0.083849,-7.284032,-0.977048,-6.431201],[8.180911,8.922861,-2.640527,-6.873138,5.636563,3.469245,-2.201271,1.706034,5.809506,-4.237077,9.566101,-2.742147,3.497603],[-7.380504,3.402194,8.553104,-9.246451,-4.563444,6.937156,9.482021,5.372206,-2.252466,6.359435,0.443681,-5.017032,-7.495626],[-9.513051,-3.935093,9.815633,7.010600,5.829001,8.551364,1.245043,4.406286,-4.954895,9.272096,7.370610,0.633654,3.644402],[3.461735,-1.660581,6.105191,-4.455586,9.216031,-8.518372,-0.114439,2.317861,4.491396,3.246070,8.088824,-6.163446,7.902633],[-6.598012,-0.991883,-9.813566,-8.345922,4.308259,4.407849,9.178666,6.971731,7.818968,-5.079281,3.037740,4.440675,-1.462536]],[[-5.372546,5.945974,-8.581089,6.322635,2.320428,-2.004477,-3.878930,7.992984,9.322016,-5.444784,-4.706814,-0.419675,1.643428],[-1.173228,1.150145,7.743644,1.483044,9.109705,1.111032,8.566762,-0.733815,-3.967519,8.607492,-2.578867,-5.064264,-7.816919],[-1.515991,4.473084,-6.130586,-9.959499,-3.479349,-9.412327,-5.963888,8.377746,-8.308543,-2.292129,-9.800165,8.546844,-5.283510],[-5.194627,6.017594,4.770840,-9.658925,2.645715,4.836964,-5.787964,6.395373,8.846752,-1.027279,9.462535,8.252418,-3.402744],[-7.753024,-2.872457,4.428679,-2.754009,9.854913,0.014664,-0.200185,-5.632028,-5.262293,-1.800413,8.194245,-8.461781,-3.050451],[-6.950008,4.903859,-2.683236,5.408989,8.434332,0.920470,1.921338,9.636078,-0.278647,9.035969,8.719919,0.021129,5.034442],[-3.745680,6.947953,-2.687061,-6.440770,-5.239982,5.010990,9.432400,-8.234969,-7.182792,1.037855,-3.986815,-7.496304,7.688667],[-2.822101,5.173383,7.458828,7.580906,-0.264828,8.227777,8.160658,8.734493,7.787111,9.635640,-5.926760,0.677571,-3.386058],[1.265770,9.952051,-5.736244,-4.424328,9.569802,7.047963,-6.046951,-8.150609,3.600722,8.005885,9.238113,0.420448,-9.135828],[-9.565482,-6.052601,-2.740160,1.881721,-2.250686,4.262539,7.210886,-0.526896,7.768024,3.849059,-4.235892,1.942431,5.110021]],[[-0.473566,-3.407761,-9.506532,-9.295748,4.517847,9.126783,-2.816910,-0.147128,-0.790844,2.234608,4.563752,6.151747,-6.355276],[5.218295,8.087602,-4.517877,1.696413,-0.542662,-5.971854,-6.554071,2.392480,-5.052944,9.140930,5.403441,4.406457,2.864783],[3.565164,9.250498,-7.086114,-3.422702,5.215190,-5.845562,2.081421,8.426424,2.304223,7.886396,6.767871,3.854208,-1.577959],[-6.415260,1.305475,-5.681614,-6.401777,-8.682771,-5.423490,-4.546157,-5.791669,9.303819,2.615103,1.947276,-4.202749,-3.336091],[-8.557303,2.123318,-6.494326,-3.607630,6.210412,5.279009,-1.485383,-7.015776,-9.982072,0.380499,5.857256,-2.820689,4.882220],[-0.156453,-8.994883,5.170007,-0.800845,1.110548,-0.537081,-5.990126,7.590500,1.721215,8.560937,-0.283073,-7.550385,-4.961147],[-3.171740,-3.376511,-4.844688,-1.513620,7.221927,-7.977338,-7.670769,9.647385,5.287512,-4.230866,3.363932,6.484471,9.367499],[-3.491450,4.847826,-9.889575,1.777006,0.168004,6.719872,-0.801473,7.002317,-5.325850,-7.303986,-7.154096,6.904069,-6.361679],[-3.921916,0.466827,-8.335995,2.267221,3.547219,0.880055,-5.886586,-7.621310,-9.886296,6.333488,3.975513,7.614455,9.842491],[-1.743457,-5.927675,6.424143,-5.355527,8.819427,-9.574230,-1.849186,-4.076234,-9.997518,-0.287778,-7.319899,5.404089,-6.518368]],[[5.453324,-5.955567,0.211233,0.067350,-1.184744,-8.757660,6.298153,2.463252,-8.099409,0.141975,9.567242,9.941828,5.913431],[5.211283,9.935748,9.463168,7.084366,5.352166,-4.758386,1.715076,1.165744,0.610429,5.237620,-5.341034,-3.169720,-1.830129],[4.418753,9.652652,1.463037,9.262845,-3.295892,6.366163,9.692807,-9.928768,5.265336,-5.965755,5.426663,2.231968,-6.828645],[-4.758324,-6.659936,-2.016632,4.824887,-9.660596,-1.655047,8.205250,-6.379415,5.074413,-3.934091,-2.575413,1.128586,-9.100089],[-1.897211,1.397958,-4.923218,-9.801843,-7.248148,-8.261134,-8.532945,-5.407271,2.909702,-4.561227,-5.191140,4.639871,6.715498],[-9.058824,-7.887090,-7.076849,-1.143326,2.294575,5.021723,9.342734,-4.485152,8.728701,-5.110224,-5.256949,-2.770763,-8.795656],[-7.622137,3.814956,0.140191,-5.002840,-3.342880,-6.348663,-6.235678,6.894608,5.302617,6.943513,8.557424,2.412638,-6.772162],[6.123894,-7.013286,6.328088,0.588514,-9.256097,-2.525982,-8.462578,7.492283,6.303467,-5.943276,-8.574435,-3.953268,8.590572],[-7.285307,1.405542,-5.535065,9.079367,-8.643889,8.672288,8.244216,-1.832449,-7.159507,9.019301,-7.211509,6.051831,3.884329],[-7.817413,2.882102,0.093391,-3.542721,-8.151509,2.290780,5.611326,-2.565487,0.309448,9.158853,1.406469,-4.050829,0.332614]],[[-7.038283,4.902124,-6.807730,3.588271,-0.080773,-7.596796,3.433786,7.122158,-0.967767,3.745173,-1.075620,9.434345,-9.872820],[5.041426,3.927147,7.239042,-3.550982,3.458833,5.718342,-3.174094,-9.084850,-2.203902,-1.140321,-1.162607,8.222623,6.153994],[5.568697,9.747105,-7.122961,-6.220720,7.752374,5.000098,9.255189,7.907936,9.627493,-5.990179,-2.379555,1.948330,-6.666364],[6.692912,7.769902,2.494380,9.092411,0.289804,-0.568589,8.215695,3.552661,4.751878,-7.889839,8.209739,-6.184462,5.220618],[5.936868,2.859326,-6.910303,5.403061,-1.068709,-0.104431,0.953425,2.427194,-3.771306,3.970374,0.558887,-6.844345,3.122388],[6.514376,8.707326,-6.227385,9.423071,-9.718467,4.216624,-5.236217,6.369281,0.942088,-0.822274,-3.292921,-5.246293,-6.272356],[-4.462507,8.995410,0.550187,1.717865,5.179566,6.124922,-5.973653,-9.228331,7.641493,3.143567,-6.777797,8.745940,6.921770],[6.857169,6.275142,1.886184,-0.423543,-2.308051,5.611452,-5.156639,7.866706,7.746318,1.901290,1.500759,-9.971532,0.364462],[-0.174850,9.492926,-7.092307,5.355435,8.529279,2.356124,9.491787,7.562497,-3.208386,9.816500,5.896818,4.780201,-6.994520],[6.852153,4.525904,1.696208,3.023559,9.920631,4.538764,3.346494,4.446213,-2.390840,-8.944170,7.415334,0.268793,2.323223]],[[9.494015,-4.763869,2.342209,5.720329,-3.332631,-9.695662,0.855628,-3.037019,-9.168673,8.654054,-4.741476,-5.735191,8.600033],[5.609246,-3.804403,6.996720,7.195048,-4.909160,7.123752,6.130975,-3.321825,4.619508,9.270139,3.518258,-5.076906,5.697595],[-6.328869,6.400223,9.800497,1.395012,8.061765,-5.533635,-0.795063,-0.472141,-4.894934,9.918292,0.367713,-3.577996,-9.304519],[2.659876,0.586387,-5.300396,-9.311916,6.183441,-9.927303,-7.900355,-9.277440,7.217462,2.060213,-7.925914,0.544432,-8.519718],[9.210060,-4.514811,-5.675158,-6.102672,-9.722184,-0.385962,-7.121916,5.636266,-8.290529,3.294425,-0.343671,5.939591,-9.447928],[8.471811,9.991557,-3.090060,-2.042462,5.718112,-8.506274,-8.991806,-9.435988,-6.794231,1.771757,1.067075,2.956901,-9.251423],[8.520561,1.380126,1.490836,-2.190017,-1.465151,8.931686,0.004561,-7.505528,-1.155441,-9.975883,8.775837,-9.264816,-4.331333],[-3.971747,-1.510007,3.813688,-5.726679,5.013287,9.145522,-2.435785,-4.719677,9.890958,-2.273182,-4.696315,-5.672143,0.633971],[8.141214,-2.567594,-6.229644,0.788154,1.741249,-6.299429,3.075816,-1.112120,6.072739,-8.038355,-5.491278,0.428795,6.176053],[-1.354333,4.406555,9.877622,1.597319,-2.299185,-6.723503,-9.791860,2.201684,4.956417,-5.277359,7.320196,2.204471,0.969563]],[[8.145320,-2.326777,-7.848947,4.341760,1.416821,-4.343856,-4.509055,-7.573186,-9.494276,3.939331,7.025072,-6.042775,-5.452242],[-6.090754,-6.392996,9.734093,-8.855654,-0.117896,-2.179478,-8.304757,6.929997,-1.179289,-0.093689,-6.562594,0.006343,-7.053578],[1.251765,-0.455242,-8.876475,4.918033,0.669167,6.429482,-3.333430,-6.875190,0.083563,-1.740725,-6.604991,-1.393803,6.513377],[4.488503,-7.895398,-5.616233,4.044930,8.162970,7.457051,-8.438411,-6.225356,-3.050717,6.548676,1.843148,-0.491857,9.598897],[7.996665,4.493436,5.130678,2.918692,-3.423002,0.736911,3.285397,6.564492,2.092111,2.221470,6.119837,-8.901150,-7.424880],[8.458101,-6.100263,1.816873,5.849571,-7.904144,-6.616286,-3.408647,5.842902,-9.967740,1.265891,6.481663,7.710384,-5.631299],[6.189573,4.587652,-9.665587,-0.193742,-0.439607,-6.666271,-1.470540,-2.996759,5.250243,8.102617,-5.812191,8.070104,6.856350],[-0.466329,1.906001,-1.608826,2.568162,-0.139513,-1.789222,-5.462686,8.284176,-4.057156,-6.668373,-2.637425,-6.682195,-6.789218],[0.703830,-2.915467,4.295344,5.013868,0.334062,2.697837,7.562172,-5.119701,-1.470054,-2.847661,-8.340902,2.221799,2.218890],[-1.347168,7.600023,-7.055989,-0.802340,4.149989,6.053717,-0.598045,-4.905433,-5.731505,0.299578,-7.743456,6.941561,1.884149]]], dtype = "float32")#candidate|8055|(7, 10, 13)|const|float32
bop_8056 = relay.mod(var_8054.astype('float32'), const_8055.astype('float32')) # shape=(7, 10, 13)
output = relay.Tuple([bop_8056,])
output2 = relay.Tuple([bop_8056,])
F = relay.Function([var_8054,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8054,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

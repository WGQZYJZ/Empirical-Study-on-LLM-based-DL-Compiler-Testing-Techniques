==========mod==========
#[version = "0.0.5"]
def @func_1755(%var_1747: Tensor[(10, 1, 16), int8], %var_1748: Tensor[(10, 5, 16), int8]) -> Tensor[(10, 5, 16), int8] {
  %0 = cast(%var_1747, dtype="int8") /* ty=Tensor[(10, 1, 16), int8] */;
  %1 = cast(%var_1748, dtype="int8") /* ty=Tensor[(10, 5, 16), int8] */;
  add(%0, %1) /* ty=Tensor[(10, 5, 16), int8] */
}

def @func_8850(%var_8845: Tensor[(1, 14, 10), float32], %var_8846: Tensor[(1, 14, 10), float32]) -> (Tensor[(?, 14, 10), float32],) {
  %2 = cast(%var_8846, dtype="float32") /* ty=Tensor[(1, 14, 10), float32] */;
  %3 = shape_of(%var_8845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%var_8845, dtype="float32") /* ty=Tensor[(1, 14, 10), float32] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %6 = floor_divide(%4, %5) /* ty=Tensor[(?, 14, 10), float32] */;
  (%6,)
}

def @func_6861() -> (Tensor[(7, 11, 4), int16],) {
  %7 = @func_5360() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %8 = %7.1;
  (%8,)
}

def @func_16372() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %9 = @func_11794() /* ty=Tensor[(7, 11, 4), float32] */;
  %10 = @func_4994() /* ty=Tensor[(7, 11, 4), int16] */;
  (%9, %10)
}

def @func_4492() -> (Tensor[(7, 11, 4), uint8],) {
  %11 = @func_3557() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %12 = %11.0;
  (%12,)
}

def @func_1354() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %13 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %14 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %15 = %13.0;
  %16 = %14.0;
  (%15, %16)
}

def @func_18782() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) {
  %17 = @func_9134() /* ty=(Tensor[(7, 11, 4), float64],) */;
  %18 = @func_4461() /* ty=Tensor[(7, 11, 4), int16] */;
  %19 = %17.0;
  (%18, %19)
}

def @func_12528() -> (Tensor[(1, 1, 4), int8], Tensor[(13, 14, 15), float32]) {
  %20 = @func_12461() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %21 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
  %22 = %20.1;
  (%21, %22)
}

def @func_1600() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %23 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  %24 = cast(%23, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  %25 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %26 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %27 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %28 = asin(%24) /* ty=Tensor[(13, 14, 15), float32] */;
  %29 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
  %30 = %25.0;
  %31 = %26.2;
  %32 = %27.0;
  (%28, %29, %30, %31, %32)
}

def @func_4561(%var_4516: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), float64], Tensor[(7, 11, 4), float32]) {
  %33 = cast(%var_4516, dtype="float64") /* ty=Tensor[(3, 13, 9), float64] */;
  %34 = @func_1730() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %35 = asin(%33) /* ty=Tensor[(3, 13, 9), float64] */;
  %36 = %34.0;
  (%35, %36)
}

def @func_9421() -> (Tensor[(7, 11, 4), int16],) {
  %37 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %38 = %37.0;
  (%38,)
}

def @func_23477() -> Tensor[(10, 11, 5), float32] {
  %39 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(10, 11, 5), float32] */;
  cosh(%39) /* ty=Tensor[(10, 11, 5), float32] */
}

def @func_21978() -> (Tensor[(7, 11, 4), float32],) {
  %40 = @func_7876() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %41 = %40.0;
  (%41,)
}

def @func_3658() -> Tensor[(7, 11, 4), float32] {
  @func_1236() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_3712() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %42 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %43 = %42.0;
  %44 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
  (%43, %44)
}

def @func_8841() -> Tensor[(13, 14, 15), float32] {
  %45 = @func_6534() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %45.0
}

def @func_16551() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %46 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %47 = @func_15181() /* ty=Tensor[(7, 11, 4), float32] */;
  %48 = %46.0;
  (%47, %48)
}

def @func_13795() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %49 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %50 = @func_1730() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %51 = %49.1;
  %52 = %50.0;
  (%51, %52)
}

def @func_21363(%var_21357: bool, %var_21358: Tensor[(336), bool]) -> (Tensor[(14, 10, 9), float32], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) {
  %53 = @func_8318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), float64]) */;
  %54 = %53.1;
  %55 = cast(%54, dtype="float32") /* ty=Tensor[(14, 10, 9), float32] */;
  %56 = cast(%var_21357, dtype="bool") /* ty=bool */;
  %57 = cast(%var_21358, dtype="bool") /* ty=Tensor[(336), bool] */;
  %58 = reshape(%56, newshape=[]) /* ty=bool */;
  %59 = reshape(%57, newshape=[2, 14, 12]) /* ty=Tensor[(2, 14, 12), bool] */;
  %60 = asin(%55) /* ty=Tensor[(14, 10, 9), float32] */;
  %61 = @func_7673(%58, %59) /* ty=Tensor[(2, 14, 12), bool] */;
  (%60, %61, %var_21357, %var_21358)
}

def @func_19241() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %62 = @func_14815() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %63 = @func_12318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
  %64 = %62.0;
  %65 = %63.1;
  %66 = @func_14704() /* ty=Tensor[(7, 11, 4), int16] */;
  (%64, %65, %66)
}

def @func_9581() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %67 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %68 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  %69 = %67.0;
  (%68, %69)
}

def @func_18329() -> (Tensor[(16, 15, 12), float32],) {
  %70 = @func_11289() /* ty=(Tensor[(16, 15, 12), float32],) */;
  %71 = %70.0;
  (%71,)
}

def @func_9408() -> (Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8]) {
  %72 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
  %73 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
  (%72, %73)
}

def @func_23243() -> (Tensor[(7, 11, 4), float64],) {
  %74 = @func_9134() /* ty=(Tensor[(7, 11, 4), float64],) */;
  %75 = %74.0;
  (%75,)
}

def @func_11176() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %76 = @func_5090() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %77 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %78 = %76.0;
  %79 = %77.0;
  (%78, %79)
}

def @func_7177() -> (Tensor[(7, 11, 4), int16],) {
  %80 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  (%80,)
}

def @func_2618() -> Tensor[(7, 11, 4), float32] {
  %81 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %81.1
}

def @func_8318() -> (Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), float64]) {
  %82 = @func_5482() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %83 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
  %84 = %83.5;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(14, 10, 9), float64] */;
  %86 = %82.0;
  %87 = tan(%85) /* ty=Tensor[(14, 10, 9), float64] */;
  (%86, %87)
}

def @func_20341() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) {
  %88 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %89 = @func_14118() /* ty=Tensor[(13, 14, 15), float32] */;
  %90 = %88.2;
  (%89, %90)
}

def @func_11321() -> (Tensor[(7, 11, 4), float32],) {
  %91 = @func_5516() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %92 = %91.0;
  (%92,)
}

def @func_5449() -> (Tensor[(7, 11, 4), uint8],) {
  %93 = @func_4638() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) */;
  %94 = %93.1;
  (%94,)
}

def @func_12413() -> (Tensor[(7, 11, 4), float32],) {
  %95 = @func_8607() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %96 = %95.0;
  (%96,)
}

def @func_7915() -> Tensor[(7, 11, 4), int16] {
  %97 = @func_7498() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %97.0
}

def @func_19511() -> (Tensor[(1, 1, 4), int8],) {
  %98 = @func_14181() /* ty=(Tensor[(1, 1, 4), int8],) */;
  %99 = %98.0;
  (%99,)
}

def @func_7434() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) {
  %100 = @func_4638() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) */;
  %101 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %102 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %103 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %104 = @func_6338() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */;
  %105 = @func_6383() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) */;
  %106 = %100.0;
  %107 = %101.4;
  %108 = %102.1;
  %109 = %103.1;
  %110 = %104.2;
  %111 = %105.1;
  (%106, %107, %108, %109, %110, %111)
}

def @func_11871(%var_11858: Tensor[(16, 14, 9), int16], %var_11859: Tensor[(16, 14, 9), int16]) -> (Tensor[(16, 14, 9), bool],) {
  %112 = cast(%var_11859, dtype="bool") /* ty=Tensor[(16, 14, 9), bool] */;
  %113 = shape_of(%var_11858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%var_11858, dtype="bool") /* ty=Tensor[(16, 14, 9), bool] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %116 = greater_equal(%114, %115) /* ty=Tensor[(16, 14, 9), bool] */;
  (%116,)
}

def @func_20835() -> (Tensor[(1, 1, 4), int8], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64], Tensor[(1260), int64], Tensor[(7, 11, 4), int16]) {
  %117 = @func_14181() /* ty=(Tensor[(1, 1, 4), int8],) */;
  %118 = @func_17580() /* ty=(Tensor[(7, 11, 4), float64],) */;
  %119 = @func_6383() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) */;
  %120 = %117.0;
  %121 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  %122 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %123 = %118.0;
  %124 = %119.2;
  %125 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  (%120, %121, %122, %123, %124, %125)
}

def @func_12085() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %126 = @func_5139() /* ty=Tensor[(7, 11, 4), int16] */;
  %127 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  (%126, %127)
}

def @func_11531() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %128 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %129 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  %130 = %128.0;
  (%129, %130)
}

def @func_19379() -> Tensor[(7, 11, 4), int16] {
  %131 = @func_12097() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %131.0
}

def @func_17284() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), int16]) {
  %132 = @func_3813() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %133 = @func_7999() /* ty=Tensor[(7, 11, 4), uint8] */;
  %134 = %132.0;
  (%133, %134)
}

def @func_22556(%var_22538: Tensor[(720), float64]) -> (Tensor[(10, 5, 16), int8], Tensor[(140), float32], Tensor[(720), float64]) {
  %135 = @func_6338() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */;
  %136 = cast(%var_22538, dtype="float64") /* ty=Tensor[(720), float64] */;
  %137 = reshape(%136, newshape=[6, 10, 12]) /* ty=Tensor[(6, 10, 12), float64] */;
  %138 = @func_19103(%137) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(6, 10, 12), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float64], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
  %139 = %135.1;
  %140 = %138.5;
  (%139, %140, %var_22538)
}

def @func_9790() -> Tensor[(7, 11, 4), int16] {
  %141 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %141.1
}

def @func_16633() -> (Tensor[(160), int8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %142 = @func_8928() /* ty=(Tensor[(1, 1, 4), int8], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */;
  %143 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %144 = %142.2;
  %145 = @func_10715() /* ty=Tensor[(7, 11, 4), int16] */;
  %146 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
  %147 = %143.1;
  (%144, %145, %146, %147)
}

def @func_9355() -> (Tensor[(13, 14, 15), float32], Tensor[(160), int8]) {
  %148 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %149 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
  %150 = %148.1;
  %151 = %149.4;
  (%150, %151)
}

def @func_4000(%var_3963: float32, %var_3964: Tensor[(2, 4, 15), float32], %var_3991: Tensor[(1, 360), float64]) -> (Tensor[(2, 4, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(1, 360), float64], Tensor[(7, 11, 4), float32]) {
  %152 = cast(%var_3963, dtype="float32") /* ty=float32 */;
  %153 = cast(%var_3964, dtype="float32") /* ty=Tensor[(2, 4, 15), float32] */;
  %154 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %155 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %156 = cast(%var_3991, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
  %157 = reshape(%156, newshape=[5, 8, 9]) /* ty=Tensor[(5, 8, 9), float64] */;
  %158 = @func_2881(%157) /* ty=(Tensor[(5, 8, 9), float64], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %159 = %158.2;
  %160 = cast(%159, dtype="float32") /* ty=Tensor[(140), float32] */;
  %161 = reshape(%160, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %162 = @func_1883(%161) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %163 = power(%152, %153) /* ty=Tensor[(2, 4, 15), float32] */;
  %164 = %154.0;
  %165 = %155.0;
  %166 = %162.0;
  (%163, %164, %165, %159, %var_3991, %166)
}

def @func_16130() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %167 = @func_6861() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %168 = @func_8913() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %169 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %170 = %167.0;
  %171 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  %172 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
  %173 = %168.0;
  %174 = %169.1;
  (%170, %171, %172, %173, %174)
}

def @func_6383() -> (Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) {
  %175 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %176 = cast(meta[relay.Constant][1] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %177 = cast(meta[relay.Constant][1] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %178 = reshape(%176, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
  %179 = reshape(%177, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
  %180 = @func_4743(%178, %179) /* ty=(Tensor[(14, 10, 9), int64],) */;
  %181 = %175.0;
  %182 = %180.0;
  (%181, %182, meta[relay.Constant][1] /* ty=Tensor[(1260), int64] */)
}

def @func_18764() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %183 = @func_7802() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %184 = %183.2;
  %185 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
  (%184, %185)
}

def @func_19564(%var_19558: Tensor[(15, 7, 11), float64]) -> (Tensor[(15, 7, 11), float64],) {
  %186 = cast(%var_19558, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
  %187 = cosh(%186) /* ty=Tensor[(15, 7, 11), float64] */;
  (%187,)
}

def @func_14396(%var_14382: Tensor[(312, 8), float32]) -> (Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float32], Tensor[(312, 8), float32]) {
  %188 = @func_7876() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %189 = cast(%var_14382, dtype="float32") /* ty=Tensor[(312, 8), float32] */;
  %190 = cast(%var_14382, dtype="float32") /* ty=Tensor[(312, 8), float32] */;
  %191 = reshape(%189, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %192 = reshape(%190, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %193 = @func_1869(%191, %192) /* ty=(Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %194 = %188.1;
  %195 = %193.0;
  (%194, %195, %var_14382)
}

def @func_22230() -> (Tensor[(7, 11, 4), float32],) {
  %196 = @func_14815() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %197 = %196.1;
  (%197,)
}

def @func_14621() -> (Tensor[(7, 11, 4), float64],) {
  %198 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
  (%198,)
}

def @func_3735() -> Tensor[(7, 11, 4), float32] {
  @func_3658() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_14966() -> (Tensor[(13, 14, 15), float32],) {
  %199 = @func_5905() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %200 = %199.1;
  (%200,)
}

def @func_6534() -> (Tensor[(13, 14, 15), float32],) {
  %201 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  (%201,)
}

def @func_4246() -> Tensor[(7, 11, 4), int16] {
  @func_3355() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_10616(%var_10469: Tensor[(13, 11, 4), float32], %var_10509: Tensor[(13, 11, 4), float32], %var_10526: Tensor[(154, 2), int16]) -> (Tensor[(13, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(154, 2), int16], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(160), int8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 11, 4), float32]) {
  %202 = cast(%var_10469, dtype="float32") /* ty=Tensor[(13, 11, 4), float32] */;
  %203 = log(%202) /* ty=Tensor[(13, 11, 4), float32] */;
  %204 = cast(%var_10509, dtype="int64") /* ty=Tensor[(13, 11, 4), int64] */;
  %205 = shape_of(%203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(%203, dtype="int64") /* ty=Tensor[(13, 11, 4), int64] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %208 = multiply(%206, %207) /* ty=Tensor[(13, 11, 4), int64] */;
  %209 = cast(%208, dtype="float32") /* ty=Tensor[(13, 11, 4), float32] */;
  %210 = cast(%var_10526, dtype="int16") /* ty=Tensor[(154, 2), int16] */;
  %211 = reshape(%210, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
  %212 = @func_1084(%211) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %213 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %214 = @func_9764() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %215 = @func_9355() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(160), int8]) */;
  %216 = @func_6086() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
  %217 = @func_7498() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %218 = cast(%var_10469, dtype="float32") /* ty=Tensor[(13, 11, 4), float32] */;
  %219 = rsqrt(%218) /* ty=Tensor[(13, 11, 4), float32] */;
  %220 = cast(%219, dtype="float32") /* ty=Tensor[(13, 11, 4), float32] */;
  %221 = acosh(%220) /* ty=Tensor[(13, 11, 4), float32] */;
  %222 = cast(%221, dtype="float32") /* ty=Tensor[(13, 11, 4), float32] */;
  %223 = asinh(%209) /* ty=Tensor[(13, 11, 4), float32] */;
  %224 = %212.3;
  %225 = %213.0;
  %226 = %214.0;
  %227 = %215.1;
  %228 = %216.3;
  %229 = %217.0;
  %230 = sigmoid(%222) /* ty=Tensor[(13, 11, 4), float32] */;
  (%223, %224, %var_10526, %225, %226, %227, %228, %229, %230)
}

def @func_15372() -> (Tensor[(7, 11, 4), int16],) {
  %231 = @func_6861() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %232 = %231.0;
  (%232,)
}

def @func_22817() -> (Tensor[(5, 7, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(16, 15, 12), float32]) {
  %233 = @func_21705() /* ty=(Tensor[(5, 7, 16), float64],) */;
  %234 = @func_19905() /* ty=(Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) */;
  %235 = @func_11289() /* ty=(Tensor[(16, 15, 12), float32],) */;
  %236 = %233.0;
  %237 = %234.1;
  %238 = %235.0;
  (%236, %237, %238)
}

def @func_11794() -> Tensor[(7, 11, 4), float32] {
  %239 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %239.0
}

def @func_10118() -> Tensor[(7, 11, 4), int16] {
  @func_7915() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_5139() -> Tensor[(7, 11, 4), int16] {
  @func_3355() /* ty=Tensor[(7, 11, 4), int16] */
}

def @main(%var_23599: Tensor[(16, 7, 9), float32]) -> (Tensor[(12, 13, 16), float64], Tensor[(5, 10), uint16], Tensor[(250, 1), uint16], Tensor[(7, 11, 4), int16], Tensor[(16, 7, 9), int64]) {
  %240 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 10), uint16] */, dtype="uint16") /* ty=Tensor[(5, 10), uint16] */;
  %241 = cast(meta[relay.Constant][3] /* ty=Tensor[(250, 1), uint16] */, dtype="uint16") /* ty=Tensor[(250, 1), uint16] */;
  %242 = reshape(%240, newshape=[5, 10, 1]) /* ty=Tensor[(5, 10, 1), uint16] */;
  %243 = reshape(%241, newshape=[5, 10, 5]) /* ty=Tensor[(5, 10, 5), uint16] */;
  %244 = @func_11161(%242, %243) /* ty=(Tensor[(5, 10, 5), int8], Tensor[(2496), float32], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32]) */;
  %245 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 7, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  %246 = sigmoid(%245) /* ty=Tensor[(16, 7, 9), float32] */;
  %247 = cast(%var_23599, dtype="int64") /* ty=Tensor[(16, 7, 9), int64] */;
  %248 = shape_of(%246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(%246, dtype="int64") /* ty=Tensor[(16, 7, 9), int64] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %251 = %244.2;
  %252 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
  %253 = logical_xor(%249, %250) /* ty=Tensor[(16, 7, 9), int64] */;
  (%251, meta[relay.Constant][2] /* ty=Tensor[(5, 10), uint16] */, meta[relay.Constant][3] /* ty=Tensor[(250, 1), uint16] */, %252, %253)
}

def @func_8177(%var_8083: Tensor[(5, 14, 6), float32], %var_8135: Tensor[(2496), float32]) -> (Tensor[(5, 14, 6), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(140), float32], Tensor[(140), float32], Tensor[(2496), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %254 = cast(%var_8083, dtype="float32") /* ty=Tensor[(5, 14, 6), float32] */;
  %255 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %256 = cast(meta[relay.Constant][5] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %257 = reshape(%256, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %258 = @func_1883(%257) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %259 = cast(%var_8135, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %260 = reshape(%259, newshape=[2496]) /* ty=Tensor[(2496), float32] */;
  %261 = @func_7045(%260) /* ty=(Tensor[(140), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(2496), int64]) */;
  %262 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %263 = asinh(%254) /* ty=Tensor[(5, 14, 6), float32] */;
  %264 = %255.0;
  %265 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
  %266 = %258.2;
  %267 = %261.0;
  %268 = %262.0;
  %269 = @func_4994() /* ty=Tensor[(7, 11, 4), int16] */;
  (%263, %264, %265, %266, meta[relay.Constant][5] /* ty=Tensor[(140), float32] */, %267, %var_8135, %268, %269)
}

def @func_5305() -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %270 = @func_3644() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %271 = %270.0;
  %272 = cast(%271, dtype="int16") /* ty=Tensor[(7, 11, 4), int16] */;
  %273 = reshape(%272, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
  %274 = @func_1084(%273) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %275 = %274.1;
  (%271, %275)
}

def @func_8913() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %276 = @func_6029() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %277 = @func_4097() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %278 = %276.0;
  %279 = %277.0;
  (%278, %279)
}

def @func_4576() -> Tensor[(7, 11, 4), int16] {
  %280 = @func_2361() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %280.3
}

def @func_17405() -> (Tensor[(7, 11, 4), float32],) {
  %281 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %282 = %281.0;
  (%282,)
}

def @func_15293() -> Tensor[(1, 1, 4), int8] {
  %283 = @func_14181() /* ty=(Tensor[(1, 1, 4), int8],) */;
  %283.0
}

def @func_11031() -> Tensor[(7, 11, 4), float32] {
  @func_2194() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_8712() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) {
  %284 = @func_6453() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %285 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %286 = @func_6383() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) */;
  %287 = %284.0;
  %288 = %285.2;
  %289 = %286.2;
  (%287, %288, %289)
}

def @func_3144() -> (Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  %290 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
  %291 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 11, 4), float32] */, dtype="uint8") /* ty=Tensor[(7, 11, 4), uint8] */;
  %292 = shape_of(%290, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%290, dtype="uint8") /* ty=Tensor[(7, 11, 4), uint8] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %295 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %296 = bitwise_and(%293, %294) /* ty=Tensor[(7, 11, 4), uint8] */;
  %297 = %295.0;
  (%296, %297)
}

def @func_17064() -> (Tensor[(7, 11, 4), int16],) {
  %298 = @func_8660() /* ty=Tensor[(7, 11, 4), int16] */;
  (%298,)
}

def @func_20944(%var_20883: Tensor[(6, 14, 15), uint16], %var_20921: Tensor[(360), float64]) -> (Tensor[(6, 14, 15), bool], Tensor[(13, 14, 15), uint16], Tensor[(2, 4, 15), float32], float32, Tensor[(120), float32], Tensor[(360), float64], Tensor[(13, 14, 15), float32]) {
  %299 = cast(%var_20883, dtype="bool") /* ty=Tensor[(6, 14, 15), bool] */;
  %300 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(6, 14, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 14, 15), uint16] */, dtype="bool") /* ty=Tensor[(6, 14, 15), bool] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %303 = @func_14608() /* ty=(Tensor[(13, 14, 15), uint16], Tensor[(13, 14, 15), float32]) */;
  %304 = cast(-3.97357f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %305 = cast(meta[relay.Constant][8] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %306 = cast(%var_20921, dtype="float64") /* ty=Tensor[(360), float64] */;
  %307 = reshape(%304, newshape=[]) /* ty=float32 */;
  %308 = reshape(%305, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), float32] */;
  %309 = reshape(%306, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %310 = @func_4000(%307, %308, %309) /* ty=(Tensor[(2, 4, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(1, 360), float64], Tensor[(7, 11, 4), float32]) */;
  %311 = greater(%301, %302) /* ty=Tensor[(6, 14, 15), bool] */;
  %312 = %303.0;
  %313 = %310.0;
  %314 = @func_4659() /* ty=Tensor[(13, 14, 15), float32] */;
  (%311, %312, %313, -3.97357f /* ty=float32 */, meta[relay.Constant][8] /* ty=Tensor[(120), float32] */, %var_20921, %314)
}

def @func_17816(%var_17723: Tensor[(80), uint8], %var_17753: Tensor[(1248), int64]) -> (Tensor[(7, 11, 4), int16], Tensor[(1, 16, 5), bool], uint8, Tensor[(80), uint8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(1248), int64], Tensor[(7, 11, 4), int16], Tensor[(16, 13, 6), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %315 = @func_17520() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %316 = cast(meta[relay.Constant][9] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %317 = cast(%var_17723, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %318 = reshape(%316, newshape=[]) /* ty=uint8 */;
  %319 = reshape(%317, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), uint8] */;
  %320 = @func_17120(%318, %319) /* ty=(Tensor[(1, 16, 5), bool],) */;
  %321 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %322 = @func_12461() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %323 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %324 = cast(%var_17753, dtype="int64") /* ty=Tensor[(1248), int64] */;
  %325 = cast(%var_17753, dtype="int64") /* ty=Tensor[(1248), int64] */;
  %326 = reshape(%324, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
  %327 = reshape(%325, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
  %328 = @func_2658(%326, %327) /* ty=Tensor[(16, 13, 6), int64] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(16, 13, 6), float64] */;
  %330 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %331 = %315.0;
  %332 = %320.0;
  %333 = %321.4;
  %334 = %322.0;
  %335 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  %336 = %323.0;
  %337 = rsqrt(%329) /* ty=Tensor[(16, 13, 6), float64] */;
  %338 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  %339 = %330.0;
  (%331, %332, meta[relay.Constant][9] /* ty=uint8 */, %var_17723, %333, %334, %335, %var_17753, %336, %337, %338, %339)
}

def @func_677() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %340 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  %341 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  %342 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  %343 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  %344 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  (%340, %341, %342, %343, %344)
}

def @func_6675() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %345 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %346 = @func_5440() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %347 = %345.0;
  %348 = %346.0;
  (%347, %348)
}

def @func_19518() -> Tensor[(16, 15, 12), float32] {
  @func_17837() /* ty=Tensor[(16, 15, 12), float32] */
}

def @func_9134() -> (Tensor[(7, 11, 4), float64],) {
  %349 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
  (%349,)
}

def @func_2808() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) {
  %350 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %351 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %352 = %350.0;
  %353 = %351.0;
  %354 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  (%352, %353, %354)
}

def @func_19103(%var_19033: Tensor[(6, 10, 12), float64]) -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(6, 10, 12), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float64], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) {
  %355 = @func_17877() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %356 = @func_11321() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %357 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 10, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 12), float64] */;
  %358 = shape_of(%var_19033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_19033, dtype="float64") /* ty=Tensor[(6, 10, 12), float64] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %361 = floor_mod(%359, %360) /* ty=Tensor[(6, 10, 12), float64] */;
  %362 = cast(%var_19033, dtype="float32") /* ty=Tensor[(6, 10, 12), float32] */;
  %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%361, dtype="float32") /* ty=Tensor[(6, 10, 12), float32] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %366 = cast(meta[relay.Constant][11] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %367 = reshape(%366, newshape=[10, 1, 14]) /* ty=Tensor[(10, 1, 14), float32] */;
  %368 = @func_1194(%367) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(10, 12, 14), int64], Tensor[(308, 1), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float64], Tensor[(7, 11, 4), float32]) */;
  %369 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %370 = %355.0;
  %371 = %356.0;
  %372 = mod(%364, %365) /* ty=Tensor[(6, 10, 12), float32] */;
  %373 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
  %374 = %368.5;
  %375 = %369.0;
  (%370, %371, %372, %373, %374, meta[relay.Constant][11] /* ty=Tensor[(140), float32] */, %375)
}

def @func_18958() -> Tensor[(7, 11, 4), float32] {
  %376 = @func_12318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
  %376.0
}

def @func_13264() -> Tensor[(7, 11, 4), int16] {
  %377 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %377.0
}

def @func_2668() -> (Tensor[(7, 11, 4), int16],) {
  %378 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  (%378,)
}

def @func_14318() -> Tensor[(7, 11, 4), int16] {
  %379 = @func_6086() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
  %379.3
}

def @func_2972(%var_2952: Tensor[(216), uint8]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), int16]) {
  %380 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %381 = cast(meta[relay.Constant][12] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %382 = cast(%var_2952, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %383 = reshape(%381, newshape=[]) /* ty=uint8 */;
  %384 = reshape(%382, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %385 = @func_2037(%383, %384) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) */;
  %386 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %387 = %380.1;
  %388 = %385.0;
  %389 = %386.0;
  (%387, %388, meta[relay.Constant][12] /* ty=uint8 */, %var_2952, %389)
}

def @func_19611() -> Tensor[(7, 11, 4), int16] {
  %390 = @func_12727() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %390.1
}

def @func_17580() -> (Tensor[(7, 11, 4), float64],) {
  %391 = @func_17351() /* ty=Tensor[(7, 11, 4), float64] */;
  (%391,)
}

def @func_23050() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %392 = @func_6423() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %393 = @func_10715() /* ty=Tensor[(7, 11, 4), int16] */;
  %394 = %392.0;
  (%393, %394)
}

def @func_23537() -> (Tensor[(7, 11, 4), int16],) {
  %395 = @func_13116() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %396 = %395.1;
  (%396,)
}

def @func_3420() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %397 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %398 = %397.0;
  %399 = cast(%398, dtype="int16") /* ty=Tensor[(7, 11, 4), int16] */;
  %400 = reshape(%399, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
  %401 = @func_1084(%400) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %402 = @func_1730() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %403 = %401.3;
  %404 = %402.0;
  (%398, %403, %404)
}

def @func_17837() -> Tensor[(16, 15, 12), float32] {
  %405 = @func_11289() /* ty=(Tensor[(16, 15, 12), float32],) */;
  %405.0
}

def @func_10340() -> (Tensor[(7, 11, 4), int16],) {
  %406 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %407 = %406.0;
  (%407,)
}

def @func_18461() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %408 = @func_6861() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %409 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %410 = %408.0;
  %411 = %409.0;
  (%410, %411)
}

def @func_4183() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %412 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %413 = @func_2361() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %414 = %412.0;
  %415 = %413.3;
  (%414, %415)
}

def @func_1194(%var_1118: Tensor[(10, 1, 14), float32]) -> (Tensor[(13, 14, 15), float32], Tensor[(10, 12, 14), int64], Tensor[(308, 1), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float64], Tensor[(7, 11, 4), float32]) {
  %416 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 1, 14), float32] */, dtype="float32") /* ty=Tensor[(10, 1, 14), float32] */;
  %417 = shape_of(%var_1118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%var_1118, dtype="float32") /* ty=Tensor[(10, 1, 14), float32] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %420 = mod(%418, %419) /* ty=Tensor[(10, ?, 14), float32] */;
  %421 = cast(%420, dtype="int64") /* ty=Tensor[(10, ?, 14), int64] */;
  %422 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 12, 14), float32] */, dtype="int64") /* ty=Tensor[(10, 12, 14), int64] */;
  %423 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %424 = cast(meta[relay.Constant][15] /* ty=Tensor[(308, 1), int16] */, dtype="int16") /* ty=Tensor[(308, 1), int16] */;
  %425 = reshape(%424, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
  %426 = @func_1084(%425) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %427 = %426.1;
  %428 = cast(%427, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
  %429 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %430 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %431 = logical_xor(%421, %422) /* ty=Tensor[(10, 12, 14), int64] */;
  %432 = %423.0;
  %433 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %434 = acosh(%428) /* ty=Tensor[(13, 14, 15), float64] */;
  %435 = %429.0;
  (%430, %431, meta[relay.Constant][15] /* ty=Tensor[(308, 1), int16] */, %432, %433, %434, %435)
}

def @func_6170() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
  %436 = @func_3144() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %437 = %436.1;
  %438 = cast(%437, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  %439 = exp(%438) /* ty=Tensor[(13, 14, 15), float32] */;
  %440 = @func_4461() /* ty=Tensor[(7, 11, 4), int16] */;
  (%439, %440)
}

def @func_22582() -> (Tensor[(7, 11, 4), int16], Tensor[(360), float64]) {
  %441 = @func_21602() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(360), float64], Tensor[(1260), uint16], Tensor[(360), float64], Tensor[(7, 11, 4), float32]) */;
  %442 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  %443 = %441.1;
  (%442, %443)
}

def @func_1730() -> (Tensor[(7, 11, 4), float32],) {
  %444 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %445 = %444.1;
  (%445,)
}

def @func_9858() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) {
  %446 = @func_6086() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
  %447 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %448 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %449 = reshape(%448, newshape=[]) /* ty=int32 */;
  %450 = @func_9509(%449) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64], int32, Tensor[(420), int32]) */;
  %451 = %446.0;
  %452 = %447.0;
  %453 = %450.2;
  (%451, %452, %453, -5 /* ty=int32 */)
}

def @func_19356() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(1, 1, 4), int8], Tensor[(16, 15, 12), float32]) {
  %454 = @func_7327() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %455 = @func_11078() /* ty=Tensor[(7, 11, 4), int16] */;
  %456 = %454.1;
  %457 = @func_16688() /* ty=Tensor[(1, 1, 4), int8] */;
  %458 = @func_17837() /* ty=Tensor[(16, 15, 12), float32] */;
  (%455, %456, %457, %458)
}

def @func_8347() -> Tensor[(7, 11, 4), int16] {
  %459 = @func_7876() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %459.1
}

def @func_18993(%var_18979: int32) -> (Tensor[(7, 11, 4), int16], int32, int32) {
  %460 = cast(%var_18979, dtype="int32") /* ty=int32 */;
  %461 = reshape(%460, newshape=[]) /* ty=int32 */;
  %462 = @func_18736(%461) /* ty=(Tensor[(7, 11, 4), float32], int32, int32) */;
  %463 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
  %464 = %462.2;
  (%463, %464, %var_18979)
}

def @func_8736() -> Tensor[(1, 1, 4), int8] {
  %465 = cast(meta[relay.Constant][16] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %466 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 1, 4), int8] */, dtype="int8") /* ty=Tensor[(1, 1, 4), int8] */;
  left_shift(%465, %466) /* ty=Tensor[(1, 1, 4), int8] */
}

def @func_22037() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %467 = @func_13116() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %468 = %467.0;
  %469 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  (%468, %469)
}

def @func_20032() -> Tensor[(7, 11, 4), float32] {
  %470 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %470.1
}

def @func_595() -> Tensor[(7, 11, 4), int16] {
  %471 = cast(meta[relay.Constant][18] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %472 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 11, 4), int16] */, dtype="int16") /* ty=Tensor[(7, 11, 4), int16] */;
  maximum(%471, %472) /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_18077() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(36, 6), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %473 = cast(meta[relay.Constant][20] /* ty=Tensor[(36, 6), uint8] */, dtype="uint8") /* ty=Tensor[(36, 6), uint8] */;
  %474 = reshape(%473, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %475 = @func_13639(%474) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(216), uint8], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(7, 11, 4), int16]) */;
  %476 = @func_5440() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %477 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %478 = @func_4994() /* ty=Tensor[(7, 11, 4), int16] */;
  %479 = %475.1;
  %480 = %476.0;
  %481 = %477.0;
  (%478, %479, meta[relay.Constant][20] /* ty=Tensor[(36, 6), uint8] */, %480, %481)
}

def @func_15181() -> Tensor[(7, 11, 4), float32] {
  %482 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %482.0
}

def @func_2361() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %483 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %484 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %485 = %484.0;
  %486 = cast(%485, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %487 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %488 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %489 = %483.0;
  %490 = log(%486) /* ty=Tensor[(7, 11, 4), float32] */;
  %491 = %487.0;
  %492 = %488.0;
  (%489, %490, %491, %492)
}

def @func_2521() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %493 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %494 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %495 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
  %496 = %493.4;
  %497 = %494.0;
  (%495, %496, %497)
}

def @func_9293(%var_9230: int32, %var_9231: Tensor[(14, 2, 15), int32]) -> (Tensor[(14, 2, 15), int32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64]) {
  %498 = cast(%var_9230, dtype="int32") /* ty=int32 */;
  %499 = cast(%var_9231, dtype="int32") /* ty=Tensor[(14, 2, 15), int32] */;
  %500 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
  %501 = add(%498, %499) /* ty=Tensor[(14, 2, 15), int32] */;
  %502 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %503 = %500.1;
  (%501, %502, %503)
}

def @func_16441() -> (int32, Tensor[(7, 11, 4), float32], Tensor[(216), uint8]) {
  %504 = @func_9858() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) */;
  %505 = %504.2;
  %506 = cast(%505, dtype="uint8") /* ty=uint8 */;
  %507 = cast(meta[relay.Constant][21] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %508 = reshape(%506, newshape=[]) /* ty=uint8 */;
  %509 = reshape(%507, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), uint8] */;
  %510 = @func_1706(%508, %509) /* ty=(Tensor[(8, 3, 9), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %511 = %510.2;
  (%505, %511, meta[relay.Constant][21] /* ty=Tensor[(216), uint8] */)
}

def @func_16276(%var_16271: Tensor[(8, 182), float64]) -> (Tensor[(7, 11, 4), float32], Tensor[(1, 1, 4), int8], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 13, 16), float64], Tensor[(8, 182), float64]) {
  %512 = @func_13966() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %513 = @func_9408() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8]) */;
  %514 = cast(%var_16271, dtype="float64") /* ty=Tensor[(8, 182), float64] */;
  %515 = reshape(%514, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), float64] */;
  %516 = @func_11005(%515) /* ty=(Tensor[(7, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %517 = %512.1;
  %518 = %513.1;
  %519 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
  %520 = @func_4994() /* ty=Tensor[(7, 11, 4), int16] */;
  %521 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  %522 = %516.0;
  (%517, %518, %519, %520, %521, %522, %var_16271)
}

def @func_18623() -> Tensor[(7, 11, 4), int16] {
  %523 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %523.0
}

def @func_11462() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %524 = @func_8503() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) */;
  %525 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %526 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %527 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %528 = @func_11176() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %529 = %524.0;
  %530 = %525.0;
  %531 = %526.0;
  %532 = %527.0;
  %533 = %528.1;
  (%529, %530, %531, %532, %533)
}

def @func_1084(%var_1064: Tensor[(7, 11, 4), int16]) -> (Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %534 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %535 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  %536 = cast(%var_1064, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
  %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%535, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %540 = right_shift(%538, %539) /* ty=Tensor[(7, 11, 4), int32] */;
  %541 = cast(%540, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %542 = shape_of(%var_1064, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%var_1064, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %545 = %534.0;
  %546 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %547 = power(%543, %544) /* ty=Tensor[(7, 11, 4), float32] */;
  %548 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
  (%545, %546, %547, %548)
}

def @func_12589() -> (Tensor[(13, 14, 15), float32],) {
  %549 = @func_12461() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %550 = %549.1;
  (%550,)
}

def @func_10921() -> (Tensor[(7, 11, 4), int16],) {
  %551 = @func_10176() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %552 = %551.1;
  (%552,)
}

def @func_12940() -> (Tensor[(7, 11, 4), float32],) {
  %553 = @func_9518() /* ty=Tensor[(7, 11, 4), float32] */;
  (%553,)
}

def @func_13689() -> Tensor[(7, 11, 4), int16] {
  %554 = @func_13228() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %554.0
}

def @func_15087() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %555 = @func_8601() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %556 = %555.2;
  %557 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  (%556, %557)
}

def @func_11571() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %558 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %559 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %560 = %558.0;
  %561 = %559.0;
  (%560, %561)
}

def @func_14649() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) {
  %562 = @func_3144() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %563 = @func_3557() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %564 = %562.1;
  %565 = %563.0;
  (%564, %565)
}

def @func_10823() -> (Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  %566 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %567 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %568 = %566.0;
  %569 = %567.1;
  (%568, %569)
}

def @func_12128() -> (Tensor[(7, 11, 4), int16],) {
  %570 = @func_2559() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %571 = %570.1;
  (%571,)
}

def @func_9205(%var_9165: Tensor[(216), uint8], %var_9166: uint8) -> (Tensor[(7, 11, 4), int16], Tensor[(2496), float32], Tensor[(216), uint8], uint8, Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
  %572 = @func_7177() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %573 = cast(%var_9165, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %574 = cast(%var_9166, dtype="uint8") /* ty=uint8 */;
  %575 = reshape(%573, newshape=[12, 18]) /* ty=Tensor[(12, 18), uint8] */;
  %576 = reshape(%574, newshape=[]) /* ty=uint8 */;
  %577 = @func_4885(%575, %576) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(12, 13, 16), float64], Tensor[(2496), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(12, 18), float64], uint8, uint8) */;
  %578 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %579 = @func_8601() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %580 = %572.0;
  %581 = %577.2;
  %582 = %578.0;
  %583 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %584 = %579.1;
  (%580, %581, %var_9165, %var_9166, %582, %583, %584)
}

def @func_19710(%var_19705: Tensor[(15, 13, 4), int8]) -> Tensor[(15, 13, 4), float64] {
  %585 = @func_19511() /* ty=(Tensor[(1, 1, 4), int8],) */;
  %586 = %585.0;
  %587 = cast(%586, dtype="float64") /* ty=Tensor[(1, 1, 4), float64] */;
  %588 = cast(%var_19705, dtype="float64") /* ty=Tensor[(15, 13, 4), float64] */;
  power(%587, %588) /* ty=Tensor[(15, 13, 4), float64] */
}

def @func_22848() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %589 = @func_18525() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) */;
  %590 = @func_3813() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %591 = @func_7802() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %592 = %589.1;
  %593 = %590.0;
  %594 = %591.0;
  (%592, %593, %594)
}

def @func_23455() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1248), int64]) {
  %595 = @func_22037() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %596 = @func_21931() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %597 = @func_14087() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(16, 13, 6), int64], Tensor[(1248), int64]) */;
  %598 = %595.0;
  %599 = %596.0;
  %600 = %597.2;
  (%598, %599, %600)
}

def @func_8601() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %601 = @func_8318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), float64]) */;
  %602 = @func_7247() /* ty=Tensor[(7, 11, 4), int16] */;
  %603 = @func_5414() /* ty=Tensor[(7, 11, 4), int16] */;
  %604 = %601.0;
  (%602, %603, %604)
}

def @func_5854() -> (Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(5, 13, 5), float32], Tensor[(130, 2), float64]) {
  %605 = cast(meta[relay.Constant][22] /* ty=Tensor[(130, 2), uint8] */, dtype="uint8") /* ty=Tensor[(130, 2), uint8] */;
  %606 = reshape(%605, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint8] */;
  %607 = @func_4320(%606) /* ty=(Tensor[(5, 13, 4), uint8],) */;
  %608 = @func_4211() /* ty=(Tensor[(5, 13, 5), float32],) */;
  %609 = cast(meta[relay.Constant][22] /* ty=Tensor[(130, 2), uint8] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
  %610 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  %611 = %607.0;
  %612 = %608.0;
  %613 = acosh(%609) /* ty=Tensor[(130, 2), float64] */;
  (%610, %611, %612, %613)
}

def @func_6086() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) {
  %614 = cast(meta[relay.Constant][23] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %615 = reshape(%614, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %616 = @func_1883(%615) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %617 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  %618 = %616.0;
  %619 = @func_4246() /* ty=Tensor[(7, 11, 4), int16] */;
  (%617, %618, meta[relay.Constant][23] /* ty=Tensor[(140), float32] */, %619)
}

def @func_20766(%var_20716: Tensor[(780), int8]) -> (Tensor[(13, 14, 15), float32], Tensor[(780), int8], Tensor[(15, 13, 4), float32]) {
  %620 = @func_9355() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(160), int8]) */;
  %621 = cast(%var_20716, dtype="int8") /* ty=Tensor[(780), int8] */;
  %622 = reshape(%621, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), int8] */;
  %623 = @func_19710(%622) /* ty=Tensor[(15, 13, 4), float64] */;
  %624 = cast(%623, dtype="float32") /* ty=Tensor[(15, 13, 4), float32] */;
  %625 = %620.0;
  %626 = log(%624) /* ty=Tensor[(15, 13, 4), float32] */;
  (%625, %var_20716, %626)
}

def @func_12175() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %627 = @func_9858() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) */;
  %628 = %627.0;
  %629 = @func_4943() /* ty=Tensor[(7, 11, 4), float32] */;
  (%628, %629)
}

def @func_10148() -> Tensor[(7, 11, 4), float32] {
  %630 = @func_2177() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %630.2
}

def @func_17952() -> Tensor[(7, 11, 4), float32] {
  %631 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %631.1
}

def @func_23274() -> (Tensor[(7, 11, 4), float32],) {
  %632 = @func_18439() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %633 = %632.1;
  (%633,)
}

def @func_2565() -> (Tensor[(7, 11, 4), float32],) {
  %634 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %635 = %634.1;
  (%635,)
}

def @func_4320(%var_4294: Tensor[(5, 13, 4), uint8]) -> (Tensor[(5, 13, 4), uint8],) {
  %636 = cast(%var_4294, dtype="uint8") /* ty=Tensor[(5, 13, 4), uint8] */;
  %637 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(5, 13, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 13, 4), uint8] */, dtype="uint8") /* ty=Tensor[(5, 13, 4), uint8] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %640 = logical_xor(%638, %639) /* ty=Tensor[(5, 13, 4), uint8] */;
  (%640,)
}

def @func_16772() -> (Tensor[(5, 13, 5), float32],) {
  %641 = @func_4211() /* ty=(Tensor[(5, 13, 5), float32],) */;
  %642 = %641.0;
  (%642,)
}

def @func_4659() -> Tensor[(13, 14, 15), float32] {
  %643 = @func_3557() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %643.1
}

def @func_23283() -> (Tensor[(7, 11, 4), int16],) {
  %644 = @func_7498() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %645 = %644.0;
  (%645,)
}

def @func_5440() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %646 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
  %647 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %648 = %646.0;
  %649 = %647.0;
  (%648, %649)
}

def @func_5360() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %650 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %651 = %650.2;
  %652 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
  %653 = @func_3735() /* ty=Tensor[(7, 11, 4), float32] */;
  (%651, %652, %653)
}

def @func_8928() -> (Tensor[(1, 1, 4), int8], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) {
  %654 = cast(meta[relay.Constant][25] /* ty=Tensor[(160), int8] */, dtype="int8") /* ty=Tensor[(160), int8] */;
  %655 = cast(meta[relay.Constant][26] /* ty=Tensor[(800), int8] */, dtype="int8") /* ty=Tensor[(800), int8] */;
  %656 = reshape(%654, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), int8] */;
  %657 = reshape(%655, newshape=[10, 5, 16]) /* ty=Tensor[(10, 5, 16), int8] */;
  %658 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
  %659 = @func_1755(%656, %657) /* ty=Tensor[(10, 5, 16), int8] */;
  (%658, %659, meta[relay.Constant][25] /* ty=Tensor[(160), int8] */, meta[relay.Constant][26] /* ty=Tensor[(800), int8] */)
}

def @func_23124() -> (Tensor[(7, 11, 4), float32],) {
  %660 = @func_5668() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %661 = %660.0;
  (%661,)
}

def @func_692() -> (Tensor[(7, 11, 4), int16],) {
  %662 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  (%662,)
}

def @func_14608() -> (Tensor[(13, 14, 15), uint16], Tensor[(13, 14, 15), float32]) {
  %663 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %664 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 14, 15), float32] */, dtype="uint16") /* ty=Tensor[(13, 14, 15), uint16] */;
  %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(%663, dtype="uint16") /* ty=Tensor[(13, 14, 15), uint16] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %668 = logical_xor(%666, %667) /* ty=Tensor[(13, 14, 15), uint16] */;
  %669 = @func_14118() /* ty=Tensor[(13, 14, 15), float32] */;
  (%668, %669)
}

def @func_14167() -> Tensor[(7, 11, 4), int16] {
  %670 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %670.0
}

def @func_18942() -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %671 = @func_17373() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %672 = @func_9764() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %673 = @func_11321() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %674 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %675 = %671.0;
  %676 = %672.0;
  %677 = %673.0;
  %678 = %674.0;
  (%675, %676, %677, %678)
}

def @func_5025() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %679 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %680 = %679.2;
  %681 = @func_4461() /* ty=Tensor[(7, 11, 4), int16] */;
  (%680, %681)
}

def @func_14704() -> Tensor[(7, 11, 4), int16] {
  @func_4246() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_23204(%var_23128: Tensor[(12, 6, 15), float32], %var_23129: Tensor[(12, 6, 15), float32], %var_23166: Tensor[(12, 6, 15), bool], %var_23198: Tensor[(108, 2), uint8], %var_23199: uint8) -> (Tensor[(7, 11, 4), int16], Tensor[(12, 6, 15), float64], Tensor[(7, 11, 4), float64], uint8, Tensor[(108, 2), uint8], uint8) {
  %682 = @func_10921() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %683 = cast(%var_23129, dtype="float32") /* ty=Tensor[(12, 6, 15), float32] */;
  %684 = shape_of(%var_23128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%var_23128, dtype="float32") /* ty=Tensor[(12, 6, 15), float32] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %687 = subtract(%685, %686) /* ty=Tensor[(12, 6, 15), float32] */;
  %688 = cast(%var_23128, dtype="bool") /* ty=Tensor[(12, 6, 15), bool] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%687, dtype="bool") /* ty=Tensor[(12, 6, 15), bool] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %692 = greater_equal(%690, %691) /* ty=Tensor[(12, 6, 15), bool] */;
  %693 = cast(%var_23166, dtype="float32") /* ty=Tensor[(12, 6, 15), float32] */;
  %694 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%692, dtype="float32") /* ty=Tensor[(12, 6, 15), float32] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %697 = mod(%695, %696) /* ty=Tensor[(12, 6, 15), float32] */;
  %698 = cast(%697, dtype="float64") /* ty=Tensor[(12, 6, 15), float64] */;
  %699 = cast(%var_23198, dtype="uint8") /* ty=Tensor[(108, 2), uint8] */;
  %700 = cast(%var_23199, dtype="uint8") /* ty=uint8 */;
  %701 = reshape(%699, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %702 = reshape(%700, newshape=[]) /* ty=uint8 */;
  %703 = @func_9205(%701, %702) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(2496), float32], Tensor[(216), uint8], uint8, Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %704 = %682.0;
  %705 = log10(%698) /* ty=Tensor[(12, 6, 15), float64] */;
  %706 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
  %707 = %703.3;
  (%704, %705, %706, %707, %var_23198, %var_23199)
}

def @func_19832(%var_19815: Tensor[(160), int8], %var_19816: Tensor[(800), int8]) -> (Tensor[(260), uint8], Tensor[(160), int8], Tensor[(800), int8], Tensor[(8, 11, 9), bool]) {
  %708 = cast(%var_19815, dtype="int8") /* ty=Tensor[(160), int8] */;
  %709 = cast(%var_19816, dtype="int8") /* ty=Tensor[(800), int8] */;
  %710 = reshape(%708, newshape=[16, 10]) /* ty=Tensor[(16, 10), int8] */;
  %711 = reshape(%709, newshape=[800]) /* ty=Tensor[(800), int8] */;
  %712 = @func_4428(%710, %711) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(260), uint8], Tensor[(10, 5, 16), int8], Tensor[(16, 10), int8], Tensor[(800), int8]) */;
  %713 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 11, 9), float32] */, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
  %714 = sinh(%713) /* ty=Tensor[(8, 11, 9), float32] */;
  %715 = cast(%714, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
  %716 = sigmoid(%715) /* ty=Tensor[(8, 11, 9), float32] */;
  %717 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 11, 9), float32] */, dtype="bool") /* ty=Tensor[(8, 11, 9), bool] */;
  %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %719 = cast(%716, dtype="bool") /* ty=Tensor[(8, 11, 9), bool] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %721 = %712.2;
  %722 = equal(%719, %720) /* ty=Tensor[(8, 11, 9), bool] */;
  (%721, %var_19815, %var_19816, %722)
}

def @func_9764() -> (Tensor[(13, 14, 15), float32],) {
  %723 = @func_6534() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %724 = %723.0;
  (%724,)
}

def @func_1706(%var_1657: uint8, %var_1658: Tensor[(8, 3, 9), uint8]) -> (Tensor[(8, 3, 9), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %725 = cast(%var_1657, dtype="uint8") /* ty=uint8 */;
  %726 = cast(%var_1658, dtype="uint8") /* ty=Tensor[(8, 3, 9), uint8] */;
  %727 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %728 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %729 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %730 = maximum(%725, %726) /* ty=Tensor[(8, 3, 9), uint8] */;
  %731 = %727.1;
  %732 = %728.0;
  %733 = %729.0;
  (%730, %731, %732, %733)
}

def @func_2407() -> (Tensor[(7, 11, 4), int16],) {
  %734 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  (%734,)
}

def @func_12727() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %735 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %736 = @func_10340() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %737 = %735.0;
  %738 = %736.0;
  (%737, %738)
}

def @func_5668() -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %739 = @func_3712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %740 = %739.1;
  %741 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  (%740, %741)
}

def @func_19161() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %742 = @func_11462() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %743 = @func_9790() /* ty=Tensor[(7, 11, 4), int16] */;
  %744 = %742.3;
  (%743, %744)
}

def @func_3557() -> (Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  %745 = @func_3144() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %746 = %745.0;
  %747 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  (%746, %747)
}

def @func_12261() -> (Tensor[(160), int8],) {
  %748 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
  %749 = %748.4;
  (%749,)
}

def @func_14087() -> (Tensor[(7, 11, 4), int16], Tensor[(16, 13, 6), int64], Tensor[(1248), int64]) {
  %750 = @func_11776() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %751 = cast(meta[relay.Constant][30] /* ty=Tensor[(1248), int64] */, dtype="int64") /* ty=Tensor[(1248), int64] */;
  %752 = cast(meta[relay.Constant][30] /* ty=Tensor[(1248), int64] */, dtype="int64") /* ty=Tensor[(1248), int64] */;
  %753 = reshape(%751, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
  %754 = reshape(%752, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
  %755 = %750.0;
  %756 = @func_2658(%753, %754) /* ty=Tensor[(16, 13, 6), int64] */;
  (%755, %756, meta[relay.Constant][30] /* ty=Tensor[(1248), int64] */)
}

def @func_5975(%var_5936: Tensor[(216), uint8]) -> (Tensor[(13, 14, 15), float32], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) {
  %757 = cast(%var_5936, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %758 = reshape(%757, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %759 = @func_2972(%758) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), int16]) */;
  %760 = @func_5482() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %761 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %762 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %763 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
  %764 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  %765 = %759.2;
  %766 = %760.0;
  %767 = %761.0;
  %768 = %762.2;
  %769 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  %770 = %763.1;
  (%764, %765, %var_5936, %766, %767, %768, %769, %770)
}

def @func_17305() -> Tensor[(16, 15, 12), float32] {
  %771 = @func_11289() /* ty=(Tensor[(16, 15, 12), float32],) */;
  %771.0
}

def @func_8643() -> Tensor[(7, 11, 4), int16] {
  %772 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %772.0
}

def @func_22955() -> (Tensor[(7, 11, 4), int16],) {
  %773 = @func_18623() /* ty=Tensor[(7, 11, 4), int16] */;
  (%773,)
}

def @func_15040() -> (Tensor[(7, 11, 4), float32],) {
  %774 = @func_3712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %775 = %774.1;
  (%775,)
}

def @func_18864() -> Tensor[(7, 11, 4), int16] {
  %776 = @func_6170() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %776.1
}

def @func_21660() -> Tensor[(7, 11, 4), int16] {
  @func_595() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_1883(%var_1880: Tensor[(140), float32]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) {
  %777 = cast(%var_1880, dtype="float32") /* ty=Tensor[(140), float32] */;
  %778 = reshape(%777, newshape=[10, 1, 14]) /* ty=Tensor[(10, 1, 14), float32] */;
  %779 = @func_1194(%778) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(10, 12, 14), int64], Tensor[(308, 1), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float64], Tensor[(7, 11, 4), float32]) */;
  %780 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
  %781 = %779.6;
  (%780, %781, %var_1880)
}

def @func_7673(%var_7644: bool, %var_7645: Tensor[(2, 14, 12), bool]) -> Tensor[(2, 14, 12), bool] {
  %782 = cast(%var_7644, dtype="bool") /* ty=bool */;
  %783 = cast(%var_7645, dtype="bool") /* ty=Tensor[(2, 14, 12), bool] */;
  logical_or(%782, %783) /* ty=Tensor[(2, 14, 12), bool] */
}

def @func_12829() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32]) {
  %784 = @func_5668() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %785 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
  %786 = @func_6453() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %787 = %784.0;
  %788 = %785.1;
  %789 = %786.0;
  (%787, %788, %789)
}

def @func_4712() -> Tensor[(7, 11, 4), uint8] {
  %790 = @func_3557() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %790.0
}

def @func_19965() -> Tensor[(7, 11, 4), float32] {
  %791 = @func_14140() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %791.1
}

def @func_8503() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) {
  %792 = @func_5305() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %793 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %794 = %792.1;
  %795 = %793.0;
  (%794, %795)
}

def @func_21602() -> (Tensor[(7, 11, 4), float32], Tensor[(360), float64], Tensor[(1260), uint16], Tensor[(360), float64], Tensor[(7, 11, 4), float32]) {
  %796 = cast(meta[relay.Constant][31] /* ty=Tensor[(1260), uint16] */, dtype="uint16") /* ty=Tensor[(1260), uint16] */;
  %797 = cast(meta[relay.Constant][32] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %798 = reshape(%796, newshape=[6, 14, 15]) /* ty=Tensor[(6, 14, 15), uint16] */;
  %799 = reshape(%797, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %800 = @func_20944(%798, %799) /* ty=(Tensor[(6, 14, 15), bool], Tensor[(13, 14, 15), uint16], Tensor[(2, 4, 15), float32], float32, Tensor[(120), float32], Tensor[(360), float64], Tensor[(13, 14, 15), float32]) */;
  %801 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %802 = @func_3735() /* ty=Tensor[(7, 11, 4), float32] */;
  %803 = %800.5;
  %804 = %801.0;
  (%802, %803, meta[relay.Constant][31] /* ty=Tensor[(1260), uint16] */, meta[relay.Constant][32] /* ty=Tensor[(360), float64] */, %804)
}

def @func_11979(%var_11975: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), float32], Tensor[(?, 14, 10), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32], Tensor[(800), int8], Tensor[(800), int64]) {
  %805 = cast(meta[relay.Constant][33] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %806 = cast(meta[relay.Constant][33] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %807 = reshape(%805, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), float32] */;
  %808 = reshape(%806, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), float32] */;
  %809 = @func_8850(%807, %808) /* ty=(Tensor[(?, 14, 10), float32],) */;
  %810 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %811 = cast(meta[relay.Constant][34] /* ty=Tensor[(800), int8] */, dtype="int8") /* ty=Tensor[(800), int8] */;
  %812 = reshape(%811, newshape=[800]) /* ty=Tensor[(800), int8] */;
  %813 = @func_11683(%812) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(160), int8], Tensor[(10, 5, 16), int8], Tensor[(800), int8]) */;
  %814 = cast(%var_11975, dtype="int64") /* ty=Tensor[(800), int64] */;
  %815 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(800), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %816 = cast(meta[relay.Constant][34] /* ty=Tensor[(800), int8] */, dtype="int64") /* ty=Tensor[(800), int64] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?), int64] */;
  %818 = @func_4943() /* ty=Tensor[(7, 11, 4), float32] */;
  %819 = %809.0;
  %820 = %810.1;
  %821 = %813.3;
  %822 = bitwise_and(%816, %817) /* ty=Tensor[(800), int64] */;
  (%818, %819, meta[relay.Constant][33] /* ty=Tensor[(140), float32] */, %820, %821, %822)
}

def @func_22398() -> Tensor[(7, 11, 4), float32] {
  %823 = @func_8712() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
  %823.1
}

def @func_19015() -> (Tensor[(7, 11, 4), float32],) {
  %824 = @func_4638() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) */;
  %825 = %824.0;
  (%825,)
}

def @func_7088() -> Tensor[(7, 11, 4), int16] {
  %826 = @func_6675() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %826.0
}

def @func_2559() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %827 = @func_2177() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %828 = %827.4;
  %829 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
  (%828, %829)
}

def @func_18241() -> (Tensor[(13, 14, 15), float32],) {
  %830 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  (%830,)
}

def @func_14068(%var_14022: bool, %var_14023: Tensor[(5, 12, 9), bool]) -> (Tensor[(5, 12, 9), bool], Tensor[(13, 14, 15), float32]) {
  %831 = cast(%var_14022, dtype="bool") /* ty=bool */;
  %832 = cast(%var_14023, dtype="bool") /* ty=Tensor[(5, 12, 9), bool] */;
  %833 = logical_and(%831, %832) /* ty=Tensor[(5, 12, 9), bool] */;
  %834 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  (%833, %834)
}

def @func_15117() -> (Tensor[(7, 11, 4), float32],) {
  %835 = @func_6937() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %836 = %835.0;
  (%836,)
}

def @func_18439() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %837 = @func_13795() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %838 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %839 = %837.0;
  %840 = %838.0;
  (%839, %840)
}

def @func_20140() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %841 = @func_9858() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) */;
  %842 = @func_16441() /* ty=(int32, Tensor[(7, 11, 4), float32], Tensor[(216), uint8]) */;
  %843 = %841.0;
  %844 = %842.1;
  (%843, %844)
}

def @func_4638() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) {
  %845 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %846 = @func_2618() /* ty=Tensor[(7, 11, 4), float32] */;
  %847 = %845.0;
  (%846, %847)
}

def @func_10715() -> Tensor[(7, 11, 4), int16] {
  %848 = @func_4097() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %848.0
}

def @func_17669() -> Tensor[(7, 11, 4), int16] {
  %849 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %849.2
}

def @func_12461() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) {
  %850 = @func_10176() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %851 = @func_10823() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %852 = %850.1;
  %853 = %851.1;
  %854 = @func_2618() /* ty=Tensor[(7, 11, 4), float32] */;
  (%852, %853, %854)
}

def @func_9082() -> Tensor[(7, 11, 4), int16] {
  @func_5414() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_14984() -> Tensor[(7, 11, 4), float32] {
  @func_2618() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_22186() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) {
  %855 = @func_8712() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
  %856 = cast(meta[relay.Constant][35] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %857 = reshape(%856, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
  %858 = @func_9703(%857) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(1260), int64], Tensor[(14, 10, 9), uint16], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %859 = @func_3658() /* ty=Tensor[(7, 11, 4), float32] */;
  %860 = %855.1;
  %861 = %858.6;
  (%859, %860, %861, meta[relay.Constant][35] /* ty=Tensor[(1260), int64] */)
}

def @func_4428(%var_4410: Tensor[(16, 10), int8], %var_4411: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(260), uint8], Tensor[(10, 5, 16), int8], Tensor[(16, 10), int8], Tensor[(800), int8]) {
  %862 = cast(meta[relay.Constant][36] /* ty=Tensor[(260), uint8] */, dtype="uint8") /* ty=Tensor[(260), uint8] */;
  %863 = reshape(%862, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint8] */;
  %864 = @func_4320(%863) /* ty=(Tensor[(5, 13, 4), uint8],) */;
  %865 = cast(%var_4410, dtype="int8") /* ty=Tensor[(16, 10), int8] */;
  %866 = cast(%var_4411, dtype="int8") /* ty=Tensor[(800), int8] */;
  %867 = reshape(%865, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), int8] */;
  %868 = reshape(%866, newshape=[10, 5, 16]) /* ty=Tensor[(10, 5, 16), int8] */;
  %869 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
  %870 = %864.0;
  %871 = @func_1755(%867, %868) /* ty=Tensor[(10, 5, 16), int8] */;
  (%869, %870, meta[relay.Constant][36] /* ty=Tensor[(260), uint8] */, %871, %var_4410, %var_4411)
}

def @func_21212() -> Tensor[(13, 14, 15), float32] {
  @func_8841() /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_17520() -> (Tensor[(7, 11, 4), int16],) {
  %872 = @func_11078() /* ty=Tensor[(7, 11, 4), int16] */;
  (%872,)
}

def @func_2658(%var_2649: Tensor[(16, 13, 6), int64], %var_2650: Tensor[(16, 13, 6), int64]) -> Tensor[(16, 13, 6), int64] {
  %873 = cast(%var_2650, dtype="int64") /* ty=Tensor[(16, 13, 6), int64] */;
  %874 = shape_of(%var_2649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%var_2649, dtype="int64") /* ty=Tensor[(16, 13, 6), int64] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_or(%875, %876) /* ty=Tensor[(16, 13, 6), int64] */
}

def @func_21731() -> Tensor[(13, 14, 15), float32] {
  %877 = @func_6534() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %877.0
}

def @func_5532() -> (Tensor[(7, 11, 4), int16],) {
  %878 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %879 = %878.4;
  (%879,)
}

def @func_13966() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  %880 = @func_3813() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %881 = @func_8318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), float64]) */;
  %882 = @func_5090() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %883 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %884 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %885 = %880.0;
  %886 = %881.0;
  %887 = %882.0;
  %888 = %883.0;
  %889 = %884.0;
  (%885, %886, %887, %888, %889)
}

def @func_22416() -> Tensor[(6, 16, 6), float64] {
  %890 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 16, 6), float64] */, dtype="float64") /* ty=Tensor[(6, 16, 6), float64] */;
  sin(%890) /* ty=Tensor[(6, 16, 6), float64] */
}

def @func_2177() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %891 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %892 = %891.0;
  %893 = cast(%892, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %894 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %895 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %896 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  %897 = atanh(%893) /* ty=Tensor[(7, 11, 4), float32] */;
  %898 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
  %899 = %894.1;
  %900 = %895.0;
  (%896, %897, %898, %899, %900)
}

def @func_20698() -> (Tensor[(7, 11, 4), int16],) {
  %901 = @func_17064() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %902 = %901.0;
  (%902,)
}

def @func_11930() -> (Tensor[(16, 15, 12), float32], Tensor[(130, 2), float64]) {
  %903 = @func_11289() /* ty=(Tensor[(16, 15, 12), float32],) */;
  %904 = @func_5854() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(5, 13, 5), float32], Tensor[(130, 2), float64]) */;
  %905 = %903.0;
  %906 = %904.3;
  (%905, %906)
}

def @func_19439() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float32]) {
  %907 = @func_17284() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), int16]) */;
  %908 = @func_2177() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %909 = %907.0;
  %910 = %908.1;
  (%909, %910)
}

def @func_5090() -> (Tensor[(7, 11, 4), int16],) {
  %911 = @func_1354() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %912 = %911.0;
  (%912,)
}

def @func_8660() -> Tensor[(7, 11, 4), int16] {
  @func_5414() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_7247() -> Tensor[(7, 11, 4), int16] {
  %913 = @func_7177() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %913.0
}

def @func_12181(%var_12177: Tensor[(11, 16, 10), float64]) -> (Tensor[(11, 16, 10), float64],) {
  %914 = cast(%var_12177, dtype="float64") /* ty=Tensor[(11, 16, 10), float64] */;
  %915 = acos(%914) /* ty=Tensor[(11, 16, 10), float64] */;
  (%915,)
}

def @func_8607() -> (Tensor[(7, 11, 4), float32],) {
  %916 = @func_6192() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %917 = %916.0;
  (%917,)
}

def @func_13983(%var_13971: Tensor[(1, 15, 15), float32]) -> (Tensor[(1, 15, 15), float32],) {
  %918 = cast(%var_13971, dtype="float32") /* ty=Tensor[(1, 15, 15), float32] */;
  %919 = cosh(%918) /* ty=Tensor[(1, 15, 15), float32] */;
  (%919,)
}

def @func_13020(%var_13015: float64) -> (Tensor[(6, 15, 12), bool],) {
  %920 = cast(%var_13015, dtype="bool") /* ty=bool */;
  %921 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 15, 12), float64] */, dtype="bool") /* ty=Tensor[(6, 15, 12), bool] */;
  %922 = less_equal(%920, %921) /* ty=Tensor[(6, 15, 12), bool] */;
  (%922,)
}

def @func_13639(%var_13610: Tensor[(216), uint8]) -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(216), uint8], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(7, 11, 4), int16]) {
  %923 = @func_12085() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %924 = cast(%var_13610, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %925 = reshape(%924, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %926 = @func_2972(%925) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), int16]) */;
  %927 = cast(%var_13610, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %928 = cast(meta[relay.Constant][39] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %929 = reshape(%927, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %930 = reshape(%928, newshape=[]) /* ty=uint8 */;
  %931 = @func_9205(%929, %930) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(2496), float32], Tensor[(216), uint8], uint8, Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %932 = %923.0;
  %933 = %926.1;
  %934 = @func_8841() /* ty=Tensor[(13, 14, 15), float32] */;
  %935 = %931.0;
  %936 = @func_11078() /* ty=Tensor[(7, 11, 4), int16] */;
  (%932, %933, %var_13610, %934, %935, meta[relay.Constant][39] /* ty=uint8 */, %936)
}

def @func_4211() -> (Tensor[(5, 13, 5), float32],) {
  %937 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 13, 5), float32] */;
  %938 = asin(%937) /* ty=Tensor[(5, 13, 5), float32] */;
  (%938,)
}

def @func_15349() -> Tensor[(7, 11, 4), float32] {
  %939 = @func_11531() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %939.1
}

def @func_18089() -> (Tensor[(13, 14, 15), float32],) {
  %940 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %941 = %940.2;
  (%941,)
}

def @func_7214() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %942 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %943 = %942.4;
  %944 = @func_4994() /* ty=Tensor[(7, 11, 4), int16] */;
  (%943, %944)
}

def @func_3255() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %945 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %946 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %947 = %945.0;
  %948 = %946.0;
  (%947, %948)
}

def @func_5482() -> (Tensor[(7, 11, 4), float32],) {
  %949 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %950 = %949.2;
  (%950,)
}

def @func_1094() -> (Tensor[(7, 11, 4), float32],) {
  %951 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %952 = %951.1;
  (%952,)
}

def @func_21631() -> (Tensor[(1, 1, 4), float32], Tensor[(7, 11, 4), uint8]) {
  %953 = @func_19905() /* ty=(Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) */;
  %954 = %953.0;
  %955 = cast(%954, dtype="float32") /* ty=Tensor[(1, 1, 4), float32] */;
  %956 = @func_14649() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) */;
  %957 = acos(%955) /* ty=Tensor[(1, 1, 4), float32] */;
  %958 = %956.1;
  (%957, %958)
}

def @func_17351() -> Tensor[(7, 11, 4), float64] {
  %959 = @func_9134() /* ty=(Tensor[(7, 11, 4), float64],) */;
  %959.0
}

def @func_18505() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), uint8]) {
  %960 = @func_7956() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %961 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %962 = %960.0;
  %963 = %961.0;
  (%962, %963)
}

def @func_21402() -> (Tensor[(7, 11, 4), float32],) {
  %964 = @func_3658() /* ty=Tensor[(7, 11, 4), float32] */;
  (%964,)
}

def @func_5100() -> Tensor[(7, 11, 4), float64] {
  %965 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
  %965.1
}

def @func_715() -> Tensor[(7, 11, 4), int16] {
  %966 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %966.0
}

def @func_14738() -> (Tensor[(7, 11, 4), float32],) {
  %967 = @func_9858() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) */;
  %968 = %967.0;
  (%968,)
}

def @func_16835() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %969 = @func_11321() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %970 = @func_12829() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32]) */;
  %971 = %969.0;
  %972 = %970.0;
  (%971, %972)
}

def @func_1262() -> Tensor[(13, 14, 15), float32] {
  @func_810() /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_21240() -> Tensor[(7, 11, 4), int16] {
  %973 = @func_7214() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %973.0
}

def @func_14436() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %974 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %975 = @func_5025() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %976 = %974.0;
  %977 = %975.0;
  (%976, %977)
}

def @func_7254() -> (Tensor[(7, 11, 4), uint8],) {
  %978 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %979 = %978.0;
  (%979,)
}

def @func_14181() -> (Tensor[(1, 1, 4), int8],) {
  %980 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
  (%980,)
}

def @func_4994() -> Tensor[(7, 11, 4), int16] {
  %981 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %981.0
}

def @func_4097() -> (Tensor[(7, 11, 4), int16],) {
  %982 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %983 = %982.0;
  (%983,)
}

def @func_6423() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %984 = @func_5516() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %985 = @func_3255() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %986 = %984.0;
  %987 = %985.1;
  (%986, %987)
}

def @func_18688() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) {
  %988 = @func_14621() /* ty=(Tensor[(7, 11, 4), float64],) */;
  %989 = @func_16177() /* ty=Tensor[(7, 11, 4), float32] */;
  %990 = %988.0;
  (%989, %990)
}

def @func_15475(%var_15438: Tensor[(1, 1260), int64]) -> (Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1, 1260), int64], Tensor[(7, 11, 4), int16]) {
  %991 = @func_13571() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %992 = cast(%var_15438, dtype="int64") /* ty=Tensor[(1, 1260), int64] */;
  %993 = cast(%var_15438, dtype="int64") /* ty=Tensor[(1, 1260), int64] */;
  %994 = reshape(%992, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
  %995 = reshape(%993, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
  %996 = @func_4743(%994, %995) /* ty=(Tensor[(14, 10, 9), int64],) */;
  %997 = %991.2;
  %998 = %996.0;
  %999 = @func_8660() /* ty=Tensor[(7, 11, 4), int16] */;
  (%997, %998, %var_15438, %999)
}

def @func_17007() -> (Tensor[(7, 11, 4), int16],) {
  %1000 = @func_16130() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1001 = %1000.2;
  (%1001,)
}

def @func_1465() -> Tensor[(7, 11, 4), int16] {
  %1002 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1002.0
}

def @func_3508() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1003 = @func_1730() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1004 = %1003.0;
  %1005 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1004, %1005)
}

def @func_9907() -> (Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32]) {
  %1006 = @func_4659() /* ty=Tensor[(13, 14, 15), float32] */;
  %1007 = @func_4659() /* ty=Tensor[(13, 14, 15), float32] */;
  (%1006, %1007)
}

def @func_16470() -> Tensor[(7, 2, 8), float32] {
  %1008 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 2, 8), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 8), float32] */;
  sin(%1008) /* ty=Tensor[(7, 2, 8), float32] */
}

def @func_14815() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1009 = @func_4638() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) */;
  %1010 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1011 = @func_10921() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1012 = @func_11462() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1013 = @func_3658() /* ty=Tensor[(7, 11, 4), float32] */;
  %1014 = %1009.0;
  %1015 = %1010.1;
  %1016 = %1011.0;
  %1017 = %1012.1;
  (%1013, %1014, %1015, %1016, %1017)
}

def @func_16882() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(3, 13, 9), float64], Tensor[(351), float64]) {
  %1018 = @func_13571() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1019 = @func_6675() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1020 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %1021 = cast(meta[relay.Constant][42] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
  %1022 = reshape(%1021, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float64] */;
  %1023 = @func_4561(%1022) /* ty=(Tensor[(3, 13, 9), float64], Tensor[(7, 11, 4), float32]) */;
  %1024 = %1018.3;
  %1025 = %1019.0;
  %1026 = %1020.0;
  %1027 = %1023.0;
  (%1024, %1025, %1026, %1027, meta[relay.Constant][42] /* ty=Tensor[(351), float64] */)
}

def @func_21486() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(720), float64], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %1028 = @func_5482() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1029 = cast(meta[relay.Constant][43] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1030 = reshape(%1029, newshape=[6, 10, 12]) /* ty=Tensor[(6, 10, 12), float64] */;
  %1031 = @func_19103(%1030) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(6, 10, 12), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float64], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
  %1032 = @func_12318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
  %1033 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %1034 = %1028.0;
  %1035 = %1031.1;
  %1036 = %1032.1;
  %1037 = %1033.0;
  (%1034, %1035, meta[relay.Constant][43] /* ty=Tensor[(720), float64] */, %1036, %1037)
}

def @func_5414() -> Tensor[(7, 11, 4), int16] {
  %1038 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %1038.2
}

def @func_12611() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %1039 = @func_12461() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %1040 = @func_9581() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1041 = %1039.0;
  %1042 = %1040.0;
  (%1041, %1042)
}

def @func_6192() -> (Tensor[(7, 11, 4), float32],) {
  %1043 = @func_5516() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1044 = %1043.0;
  (%1044,)
}

def @func_11776() -> (Tensor[(7, 11, 4), int16],) {
  %1045 = @func_3813() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1046 = %1045.0;
  (%1046,)
}

def @func_17463() -> (Tensor[(7, 11, 4), int16],) {
  %1047 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1048 = %1047.3;
  (%1048,)
}

def @func_11161(%var_11096: Tensor[(5, 10, 1), uint16], %var_11097: Tensor[(5, 10, 5), uint16]) -> (Tensor[(5, 10, 5), int8], Tensor[(2496), float32], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32]) {
  %1049 = cast(%var_11096, dtype="bool") /* ty=Tensor[(5, 10, 1), bool] */;
  %1050 = cast(%var_11097, dtype="bool") /* ty=Tensor[(5, 10, 5), bool] */;
  %1051 = not_equal(%1049, %1050) /* ty=Tensor[(5, 10, 5), bool] */;
  %1052 = cast(%1051, dtype="int8") /* ty=Tensor[(5, 10, 5), int8] */;
  %1053 = cast(%var_11096, dtype="int8") /* ty=Tensor[(5, 10, 1), int8] */;
  %1054 = cast(meta[relay.Constant][44] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %1055 = reshape(%1054, newshape=[2496, 1]) /* ty=Tensor[(2496, 1), float32] */;
  %1056 = @func_10041(%1055) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %1057 = %1056.2;
  %1058 = cast(%1057, dtype="float32") /* ty=Tensor[(2496, 1), float32] */;
  %1059 = cast(%1057, dtype="float32") /* ty=Tensor[(2496, 1), float32] */;
  %1060 = reshape(%1058, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1061 = reshape(%1059, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1062 = @func_1869(%1060, %1061) /* ty=(Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1063 = cast(%1057, dtype="float32") /* ty=Tensor[(2496, 1), float32] */;
  %1064 = bitwise_xor(%1052, %1053) /* ty=Tensor[(5, 10, 5), int8] */;
  %1065 = %1062.1;
  %1066 = sqrt(%1063) /* ty=Tensor[(2496, 1), float32] */;
  (%1064, meta[relay.Constant][44] /* ty=Tensor[(2496), float32] */, %1065, %1066)
}

def @func_19650(%var_19632: Tensor[(10, 13, 12), float64]) -> Tensor[(10, 13, 12), float64] {
  %1067 = cast(%var_19632, dtype="float64") /* ty=Tensor[(10, 13, 12), float64] */;
  sin(%1067) /* ty=Tensor[(10, 13, 12), float64] */
}

def @func_6029() -> (Tensor[(7, 11, 4), float32],) {
  %1068 = @func_3658() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1068,)
}

def @func_15768() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64], Tensor[(216), uint8]) {
  %1069 = @func_6011() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %1070 = cast(meta[relay.Constant][45] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1071 = reshape(%1070, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %1072 = @func_5975(%1071) /* ty=(Tensor[(13, 14, 15), float32], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) */;
  %1073 = %1069.0;
  %1074 = %1072.7;
  (%1073, %1074, meta[relay.Constant][45] /* ty=Tensor[(216), uint8] */)
}

def @func_5516() -> (Tensor[(7, 11, 4), float32],) {
  %1075 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1075,)
}

def @func_7956() -> (Tensor[(7, 11, 4), uint8],) {
  %1076 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %1077 = %1076.0;
  (%1077,)
}

def @func_15704(%var_15675: float32, %var_15692: Tensor[(572), float32]) -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], float32, Tensor[(6, 20), float32], Tensor[(360), float64], Tensor[(7, 11, 4), int16], Tensor[(572), float32]) {
  %1078 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1079 = @func_10340() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1080 = cast(%var_15675, dtype="float32") /* ty=float32 */;
  %1081 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 20), float32] */, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %1082 = cast(meta[relay.Constant][47] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1083 = reshape(%1080, newshape=[]) /* ty=float32 */;
  %1084 = reshape(%1081, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), float32] */;
  %1085 = reshape(%1082, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %1086 = @func_4000(%1083, %1084, %1085) /* ty=(Tensor[(2, 4, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(1, 360), float64], Tensor[(7, 11, 4), float32]) */;
  %1087 = cast(%var_15692, dtype="float32") /* ty=Tensor[(572), float32] */;
  %1088 = cast(%var_15692, dtype="float32") /* ty=Tensor[(572), float32] */;
  %1089 = %1078.1;
  %1090 = cast(%1089, dtype="int16") /* ty=Tensor[(7, 11, 4), int16] */;
  %1091 = reshape(%1087, newshape=[13, 11, 4]) /* ty=Tensor[(13, 11, 4), float32] */;
  %1092 = reshape(%1088, newshape=[13, 11, 4]) /* ty=Tensor[(13, 11, 4), float32] */;
  %1093 = reshape(%1090, newshape=[154, 2]) /* ty=Tensor[(154, 2), int16] */;
  %1094 = @func_10616(%1091, %1092, %1093) /* ty=(Tensor[(13, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(154, 2), int16], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(160), int8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 11, 4), float32]) */;
  %1095 = %1079.0;
  %1096 = %1086.1;
  %1097 = %1094.6;
  (%1089, %1095, %1096, %var_15675, meta[relay.Constant][46] /* ty=Tensor[(6, 20), float32] */, meta[relay.Constant][47] /* ty=Tensor[(360), float64] */, %1097, %var_15692)
}

def @func_2194() -> Tensor[(7, 11, 4), float32] {
  %1098 = @func_1354() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1098.1
}

def @func_3026() -> (Tensor[(7, 11, 4), float32],) {
  %1099 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1099,)
}

def @func_22257() -> Tensor[(7, 11, 4), float32] {
  %1100 = @func_6192() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1100.0
}

def @func_10041(%var_10014: Tensor[(2496, 1), float32]) -> (Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %1101 = @func_5532() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1102 = cast(%var_10014, dtype="float32") /* ty=Tensor[(2496, 1), float32] */;
  %1103 = cast(%var_10014, dtype="float32") /* ty=Tensor[(2496, 1), float32] */;
  %1104 = reshape(%1102, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1105 = reshape(%1103, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1106 = @func_1869(%1104, %1105) /* ty=(Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1107 = @func_6937() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1108 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %1109 = %1101.0;
  %1110 = %1106.1;
  %1111 = %1107.0;
  %1112 = %1108.1;
  (%1109, %1110, %var_10014, %1111, %1112)
}

def @func_4743(%var_4737: Tensor[(14, 10, 9), int64], %var_4738: Tensor[(14, 10, 9), int64]) -> (Tensor[(14, 10, 9), int64],) {
  %1113 = cast(%var_4738, dtype="int64") /* ty=Tensor[(14, 10, 9), int64] */;
  %1114 = shape_of(%var_4737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1115 = cast(%var_4737, dtype="int64") /* ty=Tensor[(14, 10, 9), int64] */;
  %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1117 = right_shift(%1115, %1116) /* ty=Tensor[(14, 10, 9), int64] */;
  (%1117,)
}

def @func_1474() -> (Tensor[(7, 11, 4), int16],) {
  %1118 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  (%1118,)
}

def @func_9034() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1119 = @func_7498() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1120 = @func_5396() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %1121 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1122 = @func_8601() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1123 = %1119.0;
  %1124 = %1120.0;
  %1125 = %1121.0;
  %1126 = @func_8347() /* ty=Tensor[(7, 11, 4), int16] */;
  %1127 = %1122.1;
  (%1123, %1124, %1125, %1126, %1127)
}

def @func_12097() -> (Tensor[(7, 11, 4), int16],) {
  %1128 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %1129 = %1128.1;
  (%1129,)
}

def @func_12384() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(160), int8], Tensor[(7, 11, 4), float32]) {
  %1130 = @func_6011() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %1131 = @func_8712() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
  %1132 = @func_9355() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(160), int8]) */;
  %1133 = %1130.0;
  %1134 = @func_2618() /* ty=Tensor[(7, 11, 4), float32] */;
  %1135 = %1131.1;
  %1136 = %1132.1;
  %1137 = @func_3735() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1133, %1134, %1135, %1136, %1137)
}

def @func_13503(%var_13457: float64, %var_13458: Tensor[(13, 10, 1), float64], %var_13465: Tensor[(160), int8], %var_13472: Tensor[(52, 48), float32], %var_13498: Tensor[(52, 48), float32]) -> (Tensor[(13, 14, 15), float32], Tensor[(160), int8], Tensor[(800), int8], Tensor[(13, 14, 15), float32], Tensor[(13, 10, 1), bool], Tensor[(52, 48), uint8]) {
  %1138 = cast(%var_13465, dtype="int8") /* ty=Tensor[(160), int8] */;
  %1139 = cast(meta[relay.Constant][48] /* ty=Tensor[(800), int8] */, dtype="int8") /* ty=Tensor[(800), int8] */;
  %1140 = reshape(%1138, newshape=[160]) /* ty=Tensor[(160), int8] */;
  %1141 = reshape(%1139, newshape=[800]) /* ty=Tensor[(800), int8] */;
  %1142 = @func_5266(%1140, %1141) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(800), int8], Tensor[(160), int8], Tensor[(800), int8], Tensor[(10, 5, 16), int8], Tensor[(7, 11, 4), float32]) */;
  %1143 = cast(%var_13472, dtype="float32") /* ty=Tensor[(52, 48), float32] */;
  %1144 = reshape(%1143, newshape=[2496, 1]) /* ty=Tensor[(2496, 1), float32] */;
  %1145 = @func_10041(%1144) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %1146 = cast(%var_13457, dtype="float64") /* ty=float64 */;
  %1147 = cast(%var_13458, dtype="float64") /* ty=Tensor[(13, 10, 1), float64] */;
  %1148 = power(%1146, %1147) /* ty=Tensor[(13, 10, 1), float64] */;
  %1149 = cast(%var_13457, dtype="bool") /* ty=bool */;
  %1150 = cast(%1148, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %1151 = cast(%var_13498, dtype="uint8") /* ty=Tensor[(52, 48), uint8] */;
  %1152 = shape_of(%var_13472, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1153 = cast(%var_13472, dtype="uint8") /* ty=Tensor[(52, 48), uint8] */;
  %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1155 = %1142.1;
  %1156 = %1145.4;
  %1157 = equal(%1149, %1150) /* ty=Tensor[(13, 10, 1), bool] */;
  %1158 = logical_xor(%1153, %1154) /* ty=Tensor[(52, 48), uint8] */;
  (%1155, %var_13465, meta[relay.Constant][48] /* ty=Tensor[(800), int8] */, %1156, %1157, %1158)
}

def @func_15222() -> Tensor[(13, 14, 15), float32] {
  %1159 = @func_5396() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %1159.0
}

def @func_22600() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1160 = @func_21486() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(720), float64], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %1161 = @func_2618() /* ty=Tensor[(7, 11, 4), float32] */;
  %1162 = %1160.0;
  (%1161, %1162)
}

def @func_7045(%var_6971: Tensor[(2496), float32]) -> (Tensor[(140), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(2496), int64]) {
  %1163 = @func_6086() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
  %1164 = cast(%var_6971, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %1165 = cast(%var_6971, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %1166 = reshape(%1164, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1167 = reshape(%1165, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1168 = @func_1869(%1166, %1167) /* ty=(Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1169 = cast(%var_6971, dtype="float64") /* ty=Tensor[(2496), float64] */;
  %1170 = sin(%1169) /* ty=Tensor[(2496), float64] */;
  %1171 = cast(%var_6971, dtype="int16") /* ty=Tensor[(2496), int16] */;
  %1172 = shape_of(%1170, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1173 = cast(%1170, dtype="int16") /* ty=Tensor[(2496), int16] */;
  %1174 = dyn.reshape(%1171, %1172, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1175 = bitwise_and(%1173, %1174) /* ty=Tensor[(2496), int16] */;
  %1176 = cast(meta[relay.Constant][49] /* ty=Tensor[(2496), int16] */, dtype="int64") /* ty=Tensor[(2496), int64] */;
  %1177 = shape_of(%1175, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1178 = cast(%1175, dtype="int64") /* ty=Tensor[(2496), int64] */;
  %1179 = dyn.reshape(%1176, %1177, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1180 = %1163.2;
  %1181 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
  %1182 = %1168.3;
  %1183 = subtract(%1178, %1179) /* ty=Tensor[(2496), int64] */;
  (%1180, %1181, %1182, %1183)
}

def @func_15397() -> (Tensor[(5, 7, 1), float32],) {
  %1184 = cast(meta[relay.Constant][50] /* ty=Tensor[(5, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 1), float32] */;
  %1185 = log(%1184) /* ty=Tensor[(5, 7, 1), float32] */;
  (%1185,)
}

def @func_5266(%var_5227: Tensor[(160), int8], %var_5228: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(800), int8], Tensor[(160), int8], Tensor[(800), int8], Tensor[(10, 5, 16), int8], Tensor[(7, 11, 4), float32]) {
  %1186 = @func_2177() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1187 = @func_2361() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1188 = cast(meta[relay.Constant][51] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %1189 = reshape(%1188, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %1190 = @func_1883(%1189) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %1191 = cast(%var_5227, dtype="int8") /* ty=Tensor[(160), int8] */;
  %1192 = cast(%var_5228, dtype="int8") /* ty=Tensor[(800), int8] */;
  %1193 = reshape(%1191, newshape=[16, 10]) /* ty=Tensor[(16, 10), int8] */;
  %1194 = reshape(%1192, newshape=[800]) /* ty=Tensor[(800), int8] */;
  %1195 = @func_4428(%1193, %1194) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(260), uint8], Tensor[(10, 5, 16), int8], Tensor[(16, 10), int8], Tensor[(800), int8]) */;
  %1196 = cast(%var_5227, dtype="int8") /* ty=Tensor[(160), int8] */;
  %1197 = %1195.5;
  %1198 = cast(%1197, dtype="int8") /* ty=Tensor[(800), int8] */;
  %1199 = reshape(%1196, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), int8] */;
  %1200 = reshape(%1198, newshape=[10, 5, 16]) /* ty=Tensor[(10, 5, 16), int8] */;
  %1201 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %1202 = %1186.2;
  %1203 = %1187.0;
  %1204 = %1190.1;
  %1205 = @func_1755(%1199, %1200) /* ty=Tensor[(10, 5, 16), int8] */;
  %1206 = %1201.1;
  (%1202, %1203, %1204, meta[relay.Constant][51] /* ty=Tensor[(140), float32] */, %1197, %var_5227, %var_5228, %1205, %1206)
}

def @func_7565() -> (Tensor[(14, 10, 9), float64], Tensor[(7, 11, 4), float32]) {
  %1207 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
  %1208 = %1207.5;
  %1209 = cast(%1208, dtype="float64") /* ty=Tensor[(14, 10, 9), float64] */;
  %1210 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1211 = acosh(%1209) /* ty=Tensor[(14, 10, 9), float64] */;
  %1212 = %1210.0;
  (%1211, %1212)
}

def @func_23103() -> (Tensor[(13, 14, 15), float32], Tensor[(10, 5, 16), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1213 = @func_9907() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32]) */;
  %1214 = @func_6338() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */;
  %1215 = @func_12611() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1216 = @func_10340() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1217 = %1213.0;
  %1218 = %1214.1;
  %1219 = %1215.1;
  %1220 = %1216.0;
  (%1217, %1218, %1219, %1220)
}

def @func_13375() -> (Tensor[(7, 11, 4), uint8],) {
  %1221 = @func_4712() /* ty=Tensor[(7, 11, 4), uint8] */;
  (%1221,)
}

def @func_21705() -> (Tensor[(5, 7, 16), float64],) {
  %1222 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 16), float64] */;
  %1223 = asinh(%1222) /* ty=Tensor[(5, 7, 16), float64] */;
  (%1223,)
}

def @func_1430() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1224 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
  %1225 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  (%1224, %1225)
}

def @func_13896(%var_13879: Tensor[(14, 13, 10), float32]) -> (Tensor[(14, 13, 10), float32],) {
  %1226 = cast(%var_13879, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
  %1227 = erf(%1226) /* ty=Tensor[(14, 13, 10), float32] */;
  (%1227,)
}

def @func_17884() -> (Tensor[(216), uint8],) {
  %1228 = @func_16441() /* ty=(int32, Tensor[(7, 11, 4), float32], Tensor[(216), uint8]) */;
  %1229 = %1228.2;
  (%1229,)
}

def @func_9509(%var_9481: int32) -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64], int32, Tensor[(420), int32]) {
  %1230 = @func_7177() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1231 = cast(%var_9481, dtype="int32") /* ty=int32 */;
  %1232 = cast(meta[relay.Constant][53] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
  %1233 = reshape(%1231, newshape=[]) /* ty=int32 */;
  %1234 = reshape(%1232, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), int32] */;
  %1235 = @func_9293(%1233, %1234) /* ty=(Tensor[(14, 2, 15), int32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64]) */;
  %1236 = %1230.0;
  %1237 = %1235.2;
  (%1236, %1237, %var_9481, meta[relay.Constant][53] /* ty=Tensor[(420), int32] */)
}

def @func_19462() -> (Tensor[(7, 11, 4), int16],) {
  %1238 = @func_14815() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1239 = %1238.4;
  (%1239,)
}

def @func_6453() -> (Tensor[(7, 11, 4), float32],) {
  %1240 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1241 = %1240.0;
  (%1241,)
}

def @func_17877() -> (Tensor[(13, 14, 15), float32],) {
  %1242 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  (%1242,)
}

def @func_21303() -> (Tensor[(7, 11, 4), float32],) {
  %1243 = @func_20032() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1243,)
}

def @func_14118() -> Tensor[(13, 14, 15), float32] {
  %1244 = @func_6011() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %1244.0
}

def @func_18525() -> (Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) {
  %1245 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1246 = cast(meta[relay.Constant][54] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %1247 = reshape(%1245, newshape=[]) /* ty=bool */;
  %1248 = reshape(%1246, newshape=[2, 14, 12]) /* ty=Tensor[(2, 14, 12), bool] */;
  %1249 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
  %1250 = @func_5139() /* ty=Tensor[(7, 11, 4), int16] */;
  %1251 = @func_7673(%1247, %1248) /* ty=Tensor[(2, 14, 12), bool] */;
  (%1249, %1250, %1251, True /* ty=bool */, meta[relay.Constant][54] /* ty=Tensor[(336), bool] */)
}

def @func_7148(%var_7099: Tensor[(13, 4, 4), uint8]) -> (Tensor[(13, 4, 4), uint8], Tensor[(7, 11, 4), float32]) {
  %1252 = cast(meta[relay.Constant][55] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1253 = cast(%var_7099, dtype="uint8") /* ty=Tensor[(13, 4, 4), uint8] */;
  %1254 = @func_5440() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1255 = left_shift(%1252, %1253) /* ty=Tensor[(13, 4, 4), uint8] */;
  %1256 = %1254.1;
  (%1255, %1256)
}

def @func_7802() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1257 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1258 = @func_4097() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1259 = %1257.0;
  %1260 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
  %1261 = %1258.0;
  (%1259, %1260, %1261)
}

def @func_22465() -> (Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1262 = @func_19241() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1263 = @func_13712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1264 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
  %1265 = @func_15293() /* ty=Tensor[(1, 1, 4), int8] */;
  %1266 = %1262.0;
  %1267 = %1263.0;
  (%1264, %1265, %1266, %1267)
}

def @func_22505() -> Tensor[(13, 14, 15), float32] {
  %1268 = @func_6534() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %1268.0
}

def @func_4461() -> Tensor[(7, 11, 4), int16] {
  %1269 = @func_3712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1269.0
}

def @func_4885(%var_4867: Tensor[(12, 18), uint8], %var_4882: uint8) -> (Tensor[(7, 11, 4), float32], Tensor[(12, 13, 16), float64], Tensor[(2496), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(12, 18), float64], uint8, uint8) {
  %1270 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1271 = cast(meta[relay.Constant][56] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %1272 = cast(meta[relay.Constant][56] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %1273 = reshape(%1271, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1274 = reshape(%1272, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1275 = @func_1869(%1273, %1274) /* ty=(Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1276 = @func_3255() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1277 = cast(%var_4867, dtype="uint8") /* ty=Tensor[(12, 18), uint8] */;
  %1278 = reshape(%1277, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %1279 = @func_2972(%1278) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), int16]) */;
  %1280 = cast(%var_4867, dtype="float64") /* ty=Tensor[(12, 18), float64] */;
  %1281 = cast(%var_4882, dtype="uint8") /* ty=uint8 */;
  %1282 = cast(%var_4867, dtype="uint8") /* ty=Tensor[(12, 18), uint8] */;
  %1283 = reshape(%1281, newshape=[]) /* ty=uint8 */;
  %1284 = reshape(%1282, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %1285 = @func_2037(%1283, %1284) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) */;
  %1286 = %1270.0;
  %1287 = %1275.1;
  %1288 = %1276.0;
  %1289 = %1279.4;
  %1290 = exp(%1280) /* ty=Tensor[(12, 18), float64] */;
  %1291 = %1285.2;
  (%1286, %1287, meta[relay.Constant][56] /* ty=Tensor[(2496), float32] */, %1288, %1289, %1290, %1291, %var_4882)
}

def @func_13571() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1292 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1293 = @func_5905() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %1294 = @func_6861() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1295 = %1292.0;
  %1296 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  %1297 = %1293.0;
  %1298 = %1294.0;
  (%1295, %1296, %1297, %1298)
}

def @func_19796() -> (Tensor[(7, 11, 4), float64],) {
  %1299 = @func_18782() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) */;
  %1300 = %1299.1;
  (%1300,)
}

def @func_10216(%var_10207: uint8, %var_10208: Tensor[(216), uint8]) -> (Tensor[(13, 14, 15), float32], uint8, uint8, Tensor[(216), uint8]) {
  %1301 = @func_9764() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %1302 = %1301.0;
  %1303 = cast(%1302, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  %1304 = cast(%var_10207, dtype="uint8") /* ty=uint8 */;
  %1305 = cast(%var_10208, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1306 = reshape(%1304, newshape=[]) /* ty=uint8 */;
  %1307 = reshape(%1305, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %1308 = @func_2037(%1306, %1307) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) */;
  %1309 = erf(%1303) /* ty=Tensor[(13, 14, 15), float32] */;
  %1310 = %1308.2;
  (%1309, %1310, %var_10207, %var_10208)
}

def @func_20860() -> (Tensor[(7, 11, 4), float32],) {
  %1311 = @func_6383() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) */;
  %1312 = %1311.0;
  (%1312,)
}

def @func_18191(%var_18155: Tensor[(1248), int64]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], int32, Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(16, 13, 6), int64], Tensor[(1248), int64], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) {
  %1313 = @func_5482() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1314 = @func_5516() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1315 = @func_16441() /* ty=(int32, Tensor[(7, 11, 4), float32], Tensor[(216), uint8]) */;
  %1316 = @func_12611() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1317 = @func_14608() /* ty=(Tensor[(13, 14, 15), uint16], Tensor[(13, 14, 15), float32]) */;
  %1318 = cast(%var_18155, dtype="int64") /* ty=Tensor[(1248), int64] */;
  %1319 = cast(%var_18155, dtype="int64") /* ty=Tensor[(1248), int64] */;
  %1320 = reshape(%1318, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
  %1321 = reshape(%1319, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
  %1322 = @func_9408() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8]) */;
  %1323 = @func_9421() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1324 = %1313.0;
  %1325 = %1314.0;
  %1326 = %1315.0;
  %1327 = %1316.1;
  %1328 = @func_14318() /* ty=Tensor[(7, 11, 4), int16] */;
  %1329 = %1317.1;
  %1330 = @func_2658(%1320, %1321) /* ty=Tensor[(16, 13, 6), int64] */;
  %1331 = %1322.1;
  %1332 = %1323.0;
  (%1324, %1325, %1326, %1327, %1328, %1329, %1330, %var_18155, %1331, %1332)
}

def @func_14140() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1333 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1334 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1335 = %1333.0;
  %1336 = %1334.0;
  (%1335, %1336)
}

def @func_14241() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1337 = @func_3735() /* ty=Tensor[(7, 11, 4), float32] */;
  %1338 = @func_3735() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1337, %1338)
}

def @func_887() -> Tensor[(7, 11, 4), float32] {
  %1339 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1340 = %1339.4;
  %1341 = cast(%1340, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  asin(%1341) /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_17373() -> (Tensor[(7, 11, 4), float32],) {
  %1342 = @func_15117() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1343 = %1342.0;
  (%1343,)
}

def @func_8267(%var_8246: Tensor[(11, 7, 7), float32]) -> (Tensor[(11, 7, 7), float32],) {
  %1344 = cast(%var_8246, dtype="float32") /* ty=Tensor[(11, 7, 7), float32] */;
  %1345 = sqrt(%1344) /* ty=Tensor[(11, 7, 7), float32] */;
  (%1345,)
}

def @func_13228() -> (Tensor[(7, 11, 4), int16],) {
  %1346 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
  (%1346,)
}

def @func_18736(%var_18733: int32) -> (Tensor[(7, 11, 4), float32], int32, int32) {
  %1347 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1348 = cast(%var_18733, dtype="int32") /* ty=int32 */;
  %1349 = reshape(%1348, newshape=[]) /* ty=int32 */;
  %1350 = @func_11379(%1349) /* ty=(Tensor[(7, 11, 4), float32], int32, int32) */;
  %1351 = %1347.2;
  %1352 = %1350.2;
  (%1351, %1352, %var_18733)
}

def @func_3644() -> (Tensor[(7, 11, 4), float32],) {
  %1353 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1354 = %1353.0;
  (%1354,)
}

def @func_5803() -> (Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32]) {
  %1355 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1356 = cast(meta[relay.Constant][57] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %1357 = reshape(%1356, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %1358 = @func_1883(%1357) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %1359 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1360 = %1355.2;
  %1361 = %1358.2;
  %1362 = %1359.0;
  (%1360, %1361, meta[relay.Constant][57] /* ty=Tensor[(140), float32] */, %1362)
}

def @func_19553() -> (Tensor[(7, 11, 4), float32],) {
  %1363 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1363,)
}

def @func_15911() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %1364 = @func_7214() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1365 = @func_5360() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1366 = %1364.1;
  %1367 = %1365.2;
  (%1366, %1367)
}

def @func_10750() -> (Tensor[(7, 11, 4), int16],) {
  %1368 = @func_1354() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1369 = %1368.0;
  (%1369,)
}

def @func_3355() -> Tensor[(7, 11, 4), int16] {
  %1370 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1370.0
}

def @func_5905() -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %1371 = @func_3644() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1372 = %1371.0;
  %1373 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  (%1372, %1373)
}

def @func_17120(%var_17095: uint8, %var_17096: Tensor[(1, 16, 5), uint8]) -> (Tensor[(1, 16, 5), bool],) {
  %1374 = cast(%var_17095, dtype="bool") /* ty=bool */;
  %1375 = cast(%var_17096, dtype="bool") /* ty=Tensor[(1, 16, 5), bool] */;
  %1376 = greater(%1374, %1375) /* ty=Tensor[(1, 16, 5), bool] */;
  (%1376,)
}

def @func_21931() -> (Tensor[(7, 11, 4), float32],) {
  %1377 = @func_11031() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1377,)
}

def @func_18606() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(16, 14, 9), bool], Tensor[(2016), int16], Tensor[(7, 11, 4), int16]) {
  %1378 = cast(meta[relay.Constant][58] /* ty=Tensor[(2016), int16] */, dtype="int16") /* ty=Tensor[(2016), int16] */;
  %1379 = cast(meta[relay.Constant][58] /* ty=Tensor[(2016), int16] */, dtype="int16") /* ty=Tensor[(2016), int16] */;
  %1380 = reshape(%1378, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), int16] */;
  %1381 = reshape(%1379, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), int16] */;
  %1382 = @func_11871(%1380, %1381) /* ty=(Tensor[(16, 14, 9), bool],) */;
  %1383 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
  %1384 = @func_10148() /* ty=Tensor[(7, 11, 4), float32] */;
  %1385 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
  %1386 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  %1387 = %1382.0;
  %1388 = %1383.1;
  (%1384, %1385, %1386, %1387, meta[relay.Constant][58] /* ty=Tensor[(2016), int16] */, %1388)
}

def @func_1314() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
  %1389 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1390 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %1391 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1392 = %1389.0;
  %1393 = %1390.1;
  %1394 = %1391.0;
  %1395 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  %1396 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  (%1392, %1393, %1394, %1395, %1396)
}

def @func_7327() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
  %1397 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1398 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %1399 = %1397.2;
  (%1398, %1399)
}

def @func_1869(%var_1839: Tensor[(12, 13, 16), float32], %var_1840: Tensor[(12, 13, 16), float32]) -> (Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1400 = cast(%var_1840, dtype="float32") /* ty=Tensor[(12, 13, 16), float32] */;
  %1401 = shape_of(%var_1839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1402 = cast(%var_1839, dtype="float32") /* ty=Tensor[(12, 13, 16), float32] */;
  %1403 = dyn.reshape(%1400, %1401, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1404 = cast(%var_1839, dtype="float64") /* ty=Tensor[(12, 13, 16), float64] */;
  %1405 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1406 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1407 = add(%1402, %1403) /* ty=Tensor[(12, 13, 16), float32] */;
  %1408 = acosh(%1404) /* ty=Tensor[(12, 13, 16), float64] */;
  %1409 = %1405.0;
  %1410 = %1406.3;
  (%1407, %1408, %1409, %1410)
}

def @func_22750() -> Tensor[(7, 11, 4), float64] {
  %1411 = @func_18525() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) */;
  %1411.0
}

def @func_20279(%var_20271: Tensor[(1155, 1), float64]) -> (Tensor[(5, 7, ?), uint32], Tensor[(15, 7, 11), float64], Tensor[(1155, 1), float64]) {
  %1412 = @func_15397() /* ty=(Tensor[(5, 7, 1), float32],) */;
  %1413 = %1412.0;
  %1414 = cast(%1413, dtype="float32") /* ty=Tensor[(5, 7, 1), float32] */;
  %1415 = erf(%1414) /* ty=Tensor[(5, 7, 1), float32] */;
  %1416 = cast(%1413, dtype="uint32") /* ty=Tensor[(5, 7, 1), uint32] */;
  %1417 = shape_of(%1415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1418 = cast(%1415, dtype="uint32") /* ty=Tensor[(5, 7, 1), uint32] */;
  %1419 = dyn.reshape(%1416, %1417, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1420 = cast(%var_20271, dtype="float64") /* ty=Tensor[(1155, 1), float64] */;
  %1421 = reshape(%1420, newshape=[15, 7, 11]) /* ty=Tensor[(15, 7, 11), float64] */;
  %1422 = @func_19564(%1421) /* ty=(Tensor[(15, 7, 11), float64],) */;
  %1423 = bitwise_and(%1418, %1419) /* ty=Tensor[(5, 7, ?), uint32] */;
  %1424 = %1422.0;
  (%1423, %1424, %var_20271)
}

def @func_11005(%var_10981: Tensor[(7, 13, 16), float64]) -> (Tensor[(7, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1425 = cast(%var_10981, dtype="float64") /* ty=Tensor[(7, 13, 16), float64] */;
  %1426 = @func_8503() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) */;
  %1427 = @func_5482() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1428 = rsqrt(%1425) /* ty=Tensor[(7, 13, 16), float64] */;
  %1429 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
  %1430 = %1426.1;
  %1431 = %1427.0;
  %1432 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
  (%1428, %1429, %1430, %1431, %1432)
}

def @func_21313(%var_21310: uint8) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216, 1), uint8]) {
  %1433 = cast(%var_21310, dtype="uint8") /* ty=uint8 */;
  %1434 = cast(meta[relay.Constant][59] /* ty=Tensor[(216, 1), uint8] */, dtype="uint8") /* ty=Tensor[(216, 1), uint8] */;
  %1435 = reshape(%1433, newshape=[]) /* ty=uint8 */;
  %1436 = reshape(%1434, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %1437 = @func_2037(%1435, %1436) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) */;
  %1438 = @func_16177() /* ty=Tensor[(7, 11, 4), float32] */;
  %1439 = %1437.0;
  (%1438, %1439, %var_21310, meta[relay.Constant][59] /* ty=Tensor[(216, 1), uint8] */)
}

def @func_5744(%var_5726: Tensor[(8, 6, 16), float32]) -> (Tensor[(8, 6, 16), float32], Tensor[(13, 14, 15), float32]) {
  %1440 = cast(%var_5726, dtype="float32") /* ty=Tensor[(8, 6, 16), float32] */;
  %1441 = @func_5668() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %1442 = log10(%1440) /* ty=Tensor[(8, 6, 16), float32] */;
  %1443 = %1441.1;
  (%1442, %1443)
}

def @func_14831() -> Tensor[(7, 11, 4), int16] {
  %1444 = @func_9034() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1444.0
}

def @func_3813() -> (Tensor[(7, 11, 4), int16],) {
  %1445 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1446 = %1445.4;
  (%1446,)
}

def @func_6011() -> (Tensor[(13, 14, 15), float32],) {
  %1447 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %1448 = %1447.1;
  (%1448,)
}

def @func_14347() -> (Tensor[(160), int8],) {
  %1449 = @func_12261() /* ty=(Tensor[(160), int8],) */;
  %1450 = %1449.0;
  (%1450,)
}

def @func_6591() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1451 = @func_4638() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) */;
  %1452 = @func_6029() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1453 = %1451.0;
  %1454 = %1452.0;
  (%1453, %1454)
}

def @func_10249() -> (Tensor[(7, 11, 4), float32],) {
  %1455 = @func_8607() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1456 = %1455.0;
  (%1456,)
}

def @func_15970() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8]) {
  %1457 = @func_5516() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1458 = @func_7876() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1459 = @func_3144() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %1460 = @func_5414() /* ty=Tensor[(7, 11, 4), int16] */;
  %1461 = %1457.0;
  %1462 = %1458.1;
  %1463 = %1459.0;
  (%1460, %1461, %1462, %1463)
}

def @func_920() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) {
  %1464 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %1465 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1464, %1465)
}

def @func_20988() -> (Tensor[(14, 10, 9), float64],) {
  %1466 = @func_7565() /* ty=(Tensor[(14, 10, 9), float64], Tensor[(7, 11, 4), float32]) */;
  %1467 = %1466.0;
  (%1467,)
}

def @func_4943() -> Tensor[(7, 11, 4), float32] {
  %1468 = @func_3255() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1468.1
}

def @func_11289() -> (Tensor[(16, 15, 12), float32],) {
  %1469 = cast(meta[relay.Constant][60] /* ty=Tensor[(16, 15, 12), float32] */, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
  %1470 = log2(%1469) /* ty=Tensor[(16, 15, 12), float32] */;
  (%1470,)
}

def @func_21529(%var_21502: Tensor[(11, 6, 5), float64], %var_21503: Tensor[(11, 6, 5), float64]) -> (Tensor[(11, 6, 5), uint64], Tensor[(7, 11, 4), float32]) {
  %1471 = cast(%var_21503, dtype="float64") /* ty=Tensor[(11, 6, 5), float64] */;
  %1472 = shape_of(%var_21502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1473 = cast(%var_21502, dtype="float64") /* ty=Tensor[(11, 6, 5), float64] */;
  %1474 = dyn.reshape(%1471, %1472, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1475 = mod(%1473, %1474) /* ty=Tensor[(11, 6, 5), float64] */;
  %1476 = cast(%1475, dtype="uint64") /* ty=Tensor[(11, 6, 5), uint64] */;
  %1477 = shape_of(%var_21502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1478 = cast(%var_21502, dtype="uint64") /* ty=Tensor[(11, 6, 5), uint64] */;
  %1479 = dyn.reshape(%1476, %1477, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1480 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1481 = bitwise_or(%1478, %1479) /* ty=Tensor[(11, 6, 5), uint64] */;
  %1482 = %1480.0;
  (%1481, %1482)
}

def @func_19982() -> Tensor[(7, 11, 4), int16] {
  %1483 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1483.0
}

def @func_13672(%var_13655: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), int16], Tensor[(16, 10), int8], Tensor[(160), int8], Tensor[(800), int8]) {
  %1484 = cast(meta[relay.Constant][61] /* ty=Tensor[(160), int8] */, dtype="int8") /* ty=Tensor[(160), int8] */;
  %1485 = cast(%var_13655, dtype="int8") /* ty=Tensor[(800), int8] */;
  %1486 = reshape(%1484, newshape=[16, 10]) /* ty=Tensor[(16, 10), int8] */;
  %1487 = reshape(%1485, newshape=[800]) /* ty=Tensor[(800), int8] */;
  %1488 = @func_4428(%1486, %1487) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(260), uint8], Tensor[(10, 5, 16), int8], Tensor[(16, 10), int8], Tensor[(800), int8]) */;
  %1489 = @func_8660() /* ty=Tensor[(7, 11, 4), int16] */;
  %1490 = %1488.4;
  (%1489, %1490, meta[relay.Constant][61] /* ty=Tensor[(160), int8] */, %var_13655)
}

def @func_17257() -> (Tensor[(7, 11, 4), int16], Tensor[(216), uint8], Tensor[(7, 11, 4), float32]) {
  %1491 = @func_10750() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1492 = @func_15768() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64], Tensor[(216), uint8]) */;
  %1493 = @func_13966() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %1494 = %1491.0;
  %1495 = %1492.2;
  %1496 = %1493.1;
  (%1494, %1495, %1496)
}

def @func_17199(%var_17140: Tensor[(11, 8, 9), float64]) -> (Tensor[(11, 8, 9), float64], Tensor[(7, 11, 4), float32], Tensor[(11, 8, 9), float32], Tensor[(7, 11, 4), int16]) {
  %1497 = cast(%var_17140, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
  %1498 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1499 = cast(%var_17140, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
  %1500 = acosh(%1499) /* ty=Tensor[(11, 8, 9), float32] */;
  %1501 = cast(%1500, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
  %1502 = @func_13712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1503 = acos(%1497) /* ty=Tensor[(11, 8, 9), float64] */;
  %1504 = %1498.1;
  %1505 = atan(%1501) /* ty=Tensor[(11, 8, 9), float32] */;
  %1506 = %1502.1;
  (%1503, %1504, %1505, %1506)
}

def @func_22097() -> (Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16]) {
  %1507 = @func_12727() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1508 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
  %1509 = %1507.1;
  (%1508, %1509)
}

def @func_12318() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) {
  %1510 = @func_3712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1511 = @func_3255() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1512 = @func_8712() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
  %1513 = %1510.1;
  %1514 = %1511.1;
  %1515 = %1512.2;
  (%1513, %1514, %1515)
}

def @func_810() -> Tensor[(13, 14, 15), float32] {
  %1516 = cast(meta[relay.Constant][62] /* ty=Tensor[(13, 14, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  sinh(%1516) /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_13712() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1517 = @func_10176() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1518 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1519 = @func_4246() /* ty=Tensor[(7, 11, 4), int16] */;
  %1520 = %1517.0;
  %1521 = %1518.0;
  (%1519, %1520, %1521)
}

def @func_6338() -> (Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) {
  %1522 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1523 = cast(meta[relay.Constant][63] /* ty=Tensor[(160), int8] */, dtype="int8") /* ty=Tensor[(160), int8] */;
  %1524 = cast(meta[relay.Constant][64] /* ty=Tensor[(800), int8] */, dtype="int8") /* ty=Tensor[(800), int8] */;
  %1525 = reshape(%1523, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), int8] */;
  %1526 = reshape(%1524, newshape=[10, 5, 16]) /* ty=Tensor[(10, 5, 16), int8] */;
  %1527 = %1522.2;
  %1528 = @func_1755(%1525, %1526) /* ty=Tensor[(10, 5, 16), int8] */;
  (%1527, %1528, meta[relay.Constant][63] /* ty=Tensor[(160), int8] */, meta[relay.Constant][64] /* ty=Tensor[(800), int8] */)
}

def @func_19905() -> (Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) {
  %1529 = @func_14181() /* ty=(Tensor[(1, 1, 4), int8],) */;
  %1530 = %1529.0;
  %1531 = @func_18623() /* ty=Tensor[(7, 11, 4), int16] */;
  (%1530, %1531)
}

def @func_6616(%var_6609: Tensor[(5, 8, 4), float32], %var_6610: Tensor[(5, 8, 4), float32]) -> Tensor[(5, 8, 4), float32] {
  %1532 = cast(%var_6610, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
  %1533 = shape_of(%var_6609, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1534 = cast(%var_6609, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
  %1535 = dyn.reshape(%1532, %1533, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1536 = power(%1534, %1535) /* ty=Tensor[(5, 8, 4), float32] */;
  %1537 = cast(%1536, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
  atanh(%1537) /* ty=Tensor[(5, 8, 4), float32] */
}

def @func_1236() -> Tensor[(7, 11, 4), float32] {
  %1538 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  %1539 = cast(meta[relay.Constant][65] /* ty=Tensor[(7, 11, 4), int16] */, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %1540 = shape_of(%1538, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1541 = cast(%1538, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %1542 = dyn.reshape(%1539, %1540, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%1541, %1542) /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_2037(%var_2018: uint8, %var_2019: Tensor[(216), uint8]) -> (Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) {
  %1543 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1544 = cast(%var_2018, dtype="uint8") /* ty=uint8 */;
  %1545 = cast(%var_2019, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1546 = reshape(%1544, newshape=[]) /* ty=uint8 */;
  %1547 = reshape(%1545, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), uint8] */;
  %1548 = @func_1706(%1546, %1547) /* ty=(Tensor[(8, 3, 9), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %1549 = %1543.0;
  %1550 = %1548.0;
  (%1549, %1550, %var_2018, %var_2019)
}

def @func_11078() -> Tensor[(7, 11, 4), int16] {
  %1551 = @func_7177() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1551.0
}

def @func_7999() -> Tensor[(7, 11, 4), uint8] {
  @func_4712() /* ty=Tensor[(7, 11, 4), uint8] */
}

def @func_13363() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1552 = @func_7956() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %1553 = @func_12829() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32]) */;
  %1554 = @func_10249() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1555 = @func_8913() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1556 = @func_11776() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1557 = %1552.0;
  %1558 = %1553.1;
  %1559 = %1554.0;
  %1560 = %1555.1;
  %1561 = %1556.0;
  (%1557, %1558, %1559, %1560, %1561)
}

def @func_11052() -> (Tensor[(7, 11, 4), int16],) {
  %1562 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1563 = %1562.1;
  (%1563,)
}

def @func_7498() -> (Tensor[(7, 11, 4), int16],) {
  %1564 = @func_6675() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1565 = %1564.0;
  (%1565,)
}

def @func_14863(%var_14846: Tensor[(140), float32]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1566 = @func_14140() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1567 = cast(%var_14846, dtype="float32") /* ty=Tensor[(140), float32] */;
  %1568 = reshape(%1567, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %1569 = @func_1883(%1568) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %1570 = @func_12940() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1571 = @func_13116() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1572 = %1566.1;
  %1573 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
  %1574 = %1569.1;
  %1575 = %1570.0;
  %1576 = %1571.0;
  (%1572, %1573, %1574, %var_14846, %1575, %1576)
}

def @func_2881(%var_2827: Tensor[(5, 8, 9), float64]) -> (Tensor[(5, 8, 9), float64], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) {
  %1577 = cast(%var_2827, dtype="float64") /* ty=Tensor[(5, 8, 9), float64] */;
  %1578 = cast(meta[relay.Constant][66] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %1579 = reshape(%1578, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %1580 = @func_1883(%1579) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %1581 = rsqrt(%1577) /* ty=Tensor[(5, 8, 9), float64] */;
  %1582 = %1580.0;
  (%1581, %1582, meta[relay.Constant][66] /* ty=Tensor[(140), float32] */)
}

def @func_13061() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  %1583 = @func_3144() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %1584 = @func_5449() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %1585 = %1583.0;
  %1586 = %1584.0;
  %1587 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  (%1585, %1586, %1587)
}

def @func_2271() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) {
  %1588 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1589 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
  %1590 = cast(%1589, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %1591 = %1588.0;
  %1592 = sigmoid(%1590) /* ty=Tensor[(7, 11, 4), float64] */;
  (%1591, %1592)
}

def @func_10968() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) {
  %1593 = @func_4246() /* ty=Tensor[(7, 11, 4), int16] */;
  %1594 = cast(%1593, dtype="int16") /* ty=Tensor[(7, 11, 4), int16] */;
  %1595 = reshape(%1594, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
  %1596 = @func_1084(%1595) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1597 = %1596.0;
  (%1593, %1597)
}

def @func_6937() -> (Tensor[(7, 11, 4), float32],) {
  %1598 = @func_6029() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1599 = %1598.0;
  (%1599,)
}

def @func_5396() -> (Tensor[(13, 14, 15), float32],) {
  %1600 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %1601 = %1600.2;
  (%1601,)
}

def @func_10692() -> (Tensor[(7, 11, 4), int16],) {
  %1602 = @func_9421() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1603 = %1602.0;
  (%1603,)
}

def @func_21804() -> Tensor[(7, 11, 4), int16] {
  @func_19611() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_22618() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) {
  %1604 = @func_15040() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1605 = @func_17580() /* ty=(Tensor[(7, 11, 4), float64],) */;
  %1606 = %1604.0;
  %1607 = %1605.0;
  (%1606, %1607)
}

def @func_20493() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1608 = @func_3813() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1609 = @func_11776() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1610 = %1608.0;
  %1611 = %1609.0;
  (%1610, %1611)
}

def @func_16688() -> Tensor[(1, 1, 4), int8] {
  @func_15293() /* ty=Tensor[(1, 1, 4), int8] */
}

def @func_10176() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1612 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1613 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1614 = %1612.1;
  %1615 = %1613.1;
  (%1614, %1615)
}

def @func_4040() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) {
  %1616 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1617 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %1618 = %1616.2;
  %1619 = %1617.0;
  (%1618, %1619)
}

def @func_16177() -> Tensor[(7, 11, 4), float32] {
  %1620 = @func_2361() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1620.1
}

def @func_9703(%var_9671: Tensor[(14, 10, 9), int64]) -> (Tensor[(7, 11, 4), int16], Tensor[(1260), int64], Tensor[(14, 10, 9), uint16], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1621 = cast(meta[relay.Constant][67] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %1622 = cast(meta[relay.Constant][67] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %1623 = reshape(%1621, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
  %1624 = reshape(%1622, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
  %1625 = @func_4743(%1623, %1624) /* ty=(Tensor[(14, 10, 9), int64],) */;
  %1626 = %1625.0;
  %1627 = cast(%var_9671, dtype="uint16") /* ty=Tensor[(14, 10, 9), uint16] */;
  %1628 = shape_of(%1626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1629 = cast(%1626, dtype="uint16") /* ty=Tensor[(14, 10, 9), uint16] */;
  %1630 = dyn.reshape(%1627, %1628, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1631 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %1632 = @func_8913() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1633 = @func_5139() /* ty=Tensor[(7, 11, 4), int16] */;
  %1634 = left_shift(%1629, %1630) /* ty=Tensor[(14, 10, 9), uint16] */;
  %1635 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
  %1636 = %1631.0;
  %1637 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
  %1638 = %1632.0;
  (%1633, meta[relay.Constant][67] /* ty=Tensor[(1260), int64] */, %1634, %1635, %1636, %1637, %1638)
}

def @func_11683(%var_11675: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), float64], Tensor[(160), int8], Tensor[(10, 5, 16), int8], Tensor[(800), int8]) {
  %1639 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
  %1640 = @func_6338() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */;
  %1641 = %1640.2;
  %1642 = cast(%1641, dtype="int8") /* ty=Tensor[(160), int8] */;
  %1643 = cast(%var_11675, dtype="int8") /* ty=Tensor[(800), int8] */;
  %1644 = reshape(%1642, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), int8] */;
  %1645 = reshape(%1643, newshape=[10, 5, 16]) /* ty=Tensor[(10, 5, 16), int8] */;
  %1646 = %1639.1;
  %1647 = @func_1755(%1644, %1645) /* ty=Tensor[(10, 5, 16), int8] */;
  (%1646, %1641, %1647, %var_11675)
}

def @func_7876() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1648 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1649 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
  %1650 = %1648.0;
  %1651 = %1649.3;
  (%1650, %1651)
}

def @func_13116() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1652 = @func_11776() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1653 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  %1654 = %1652.0;
  (%1653, %1654)
}

def @func_20374() -> (Tensor[(160), int8],) {
  %1655 = @func_9355() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(160), int8]) */;
  %1656 = %1655.1;
  (%1656,)
}

def @func_9518() -> Tensor[(7, 11, 4), float32] {
  %1657 = @func_5668() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %1657.0
}

def @func_17441(%var_17417: Tensor[(6, 7, 3), bool], %var_17418: Tensor[(6, 7, 3), bool]) -> (Tensor[(6, 7, 3), bool], Tensor[(7, 11, 4), int16]) {
  %1658 = cast(%var_17418, dtype="bool") /* ty=Tensor[(6, 7, 3), bool] */;
  %1659 = shape_of(%var_17417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1660 = cast(%var_17417, dtype="bool") /* ty=Tensor[(6, 7, 3), bool] */;
  %1661 = dyn.reshape(%1658, %1659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1662 = @func_12727() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1663 = logical_or(%1660, %1661) /* ty=Tensor[(6, 7, 3), bool] */;
  %1664 = %1662.1;
  (%1663, %1664)
}

def @func_11379(%var_11374: int32) -> (Tensor[(7, 11, 4), float32], int32, int32) {
  %1665 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1666 = cast(%var_11374, dtype="int32") /* ty=int32 */;
  %1667 = reshape(%1666, newshape=[]) /* ty=int32 */;
  %1668 = @func_9509(%1667) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64], int32, Tensor[(420), int32]) */;
  %1669 = %1665.1;
  %1670 = %1668.2;
  (%1669, %1670, %var_11374)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_922() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) {
  @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_17669() -> Tensor[(7, 11, 4), int16] {
  %0 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %0.2
}

def @func_18079() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(36, 6), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_18077() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(36, 6), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_19967() -> Tensor[(7, 11, 4), float32] {
  @func_19965() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_812() -> Tensor[(13, 14, 15), float32] {
  @func_810() /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_2407() -> (Tensor[(7, 11, 4), int16],) {
  %1 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  (%1,)
}

def @func_19520() -> Tensor[(16, 15, 12), float32] {
  @func_19518() /* ty=Tensor[(16, 15, 12), float32] */
}

def @func_20769(%var_20767: Tensor[(780), int8]) -> (Tensor[(13, 14, 15), float32], Tensor[(780), int8], Tensor[(15, 13, 4), float32]) {
  @func_20766(%var_20767) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(780), int8], Tensor[(15, 13, 4), float32]) */
}

def @func_5306() -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %8 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
    %2 = @func_3644() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %3 = %2.0;
    %4 = cast(%3, dtype="int16") /* ty=Tensor[(7, 11, 4), int16] */;
    %5 = reshape(%4, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
    %6 = @func_1084(%5) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %7 = %6.1;
    (%3, %7)
  };
  %8() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */
}

def @func_20836() -> (Tensor[(1, 1, 4), int8], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64], Tensor[(1260), int64], Tensor[(7, 11, 4), int16]) {
  %18 = fn () -> (Tensor[(1, 1, 4), int8], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64], Tensor[(1260), int64], Tensor[(7, 11, 4), int16]) {
    %9 = @func_14181() /* ty=(Tensor[(1, 1, 4), int8],) */;
    %10 = @func_17580() /* ty=(Tensor[(7, 11, 4), float64],) */;
    %11 = @func_6383() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) */;
    %12 = %9.0;
    %13 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
    %14 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
    %15 = %10.0;
    %16 = %11.2;
    %17 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
    (%12, %13, %14, %15, %16, %17)
  };
  %18() /* ty=(Tensor[(1, 1, 4), int8], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64], Tensor[(1260), int64], Tensor[(7, 11, 4), int16]) */
}

def @func_15398() -> (Tensor[(5, 7, 1), float32],) {
  %21 = fn () -> (Tensor[(5, 7, 1), float32],) {
    %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 1), float32] */;
    %20 = log(%19) /* ty=Tensor[(5, 7, 1), float32] */;
    (%20,)
  };
  %21() /* ty=(Tensor[(5, 7, 1), float32],) */
}

def @func_3027() -> (Tensor[(7, 11, 4), float32],) {
  %23 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %22 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
    (%22,)
  };
  %23() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_4943() -> Tensor[(7, 11, 4), float32] {
  %24 = @func_3255() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %24.1
}

def @func_6619(%var_6617: Tensor[(5, 8, 4), float32], %var_6618: Tensor[(5, 8, 4), float32]) -> Tensor[(5, 8, 4), float32] {
  %31 = fn (%var_6609: Tensor[(5, 8, 4), float32], %var_6610: Tensor[(5, 8, 4), float32]) -> Tensor[(5, 8, 4), float32] {
    %25 = cast(%var_6610, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
    %26 = shape_of(%var_6609, dtype="int32") /* ty=Tensor[(3), int32] */;
    %27 = cast(%var_6609, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
    %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %29 = power(%27, %28) /* ty=Tensor[(5, 8, 4), float32] */;
    %30 = cast(%29, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
    atanh(%30) /* ty=Tensor[(5, 8, 4), float32] */
  };
  %31(%var_6617, %var_6618) /* ty=Tensor[(5, 8, 4), float32] */
}

def @func_8503() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) {
  %32 = @func_5305() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %33 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %34 = %32.1;
  %35 = %33.0;
  (%34, %35)
}

def @func_14181() -> (Tensor[(1, 1, 4), int8],) {
  %36 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
  (%36,)
}

def @func_4889(%var_4887: Tensor[(12, 18), uint8], %var_4888: uint8) -> (Tensor[(7, 11, 4), float32], Tensor[(12, 13, 16), float64], Tensor[(2496), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(12, 18), float64], uint8, uint8) {
  @func_4885(%var_4887, %var_4888) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(12, 13, 16), float64], Tensor[(2496), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(12, 18), float64], uint8, uint8) */
}

def @func_2362() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %47 = fn () -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
    %37 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
    %38 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %39 = %38.0;
    %40 = cast(%39, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
    %41 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
    %42 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %43 = %37.0;
    %44 = log(%40) /* ty=Tensor[(7, 11, 4), float32] */;
    %45 = %41.0;
    %46 = %42.0;
    (%43, %44, %45, %46)
  };
  %47() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_7178() -> (Tensor[(7, 11, 4), int16],) {
  %49 = fn () -> (Tensor[(7, 11, 4), int16],) {
    %48 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
    (%48,)
  };
  %49() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_10824() -> (Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  %54 = fn () -> (Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
    %50 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
    %51 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
    %52 = %50.0;
    %53 = %51.1;
    (%52, %53)
  };
  %54() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */
}

def @func_15224() -> Tensor[(13, 14, 15), float32] {
  @func_15222() /* ty=Tensor[(13, 14, 15), float32] */
}

def @main(%var_23599: Tensor[(16, 7, 9), float32]) -> (Tensor[(12, 13, 16), float64], Tensor[(5, 10), uint16], Tensor[(250, 1), uint16], Tensor[(7, 11, 4), int16], Tensor[(16, 7, 9), int64]) {
  %55 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 10), uint16] */, dtype="uint16") /* ty=Tensor[(5, 10), uint16] */;
  %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(250, 1), uint16] */, dtype="uint16") /* ty=Tensor[(250, 1), uint16] */;
  %57 = reshape(%55, newshape=[5, 10, 1]) /* ty=Tensor[(5, 10, 1), uint16] */;
  %58 = reshape(%56, newshape=[5, 10, 5]) /* ty=Tensor[(5, 10, 5), uint16] */;
  %59 = @func_11165(%57, %58) /* ty=(Tensor[(5, 10, 5), int8], Tensor[(2496), float32], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32]) */;
  %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 7, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  %61 = sigmoid(%60) /* ty=Tensor[(16, 7, 9), float32] */;
  %62 = cast(%var_23599, dtype="int64") /* ty=Tensor[(16, 7, 9), int64] */;
  %63 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%61, dtype="int64") /* ty=Tensor[(16, 7, 9), int64] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %66 = %59.2;
  %67 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
  %68 = logical_xor(%64, %65) /* ty=Tensor[(16, 7, 9), int64] */;
  (%66, meta[relay.Constant][1] /* ty=Tensor[(5, 10), uint16] */, meta[relay.Constant][2] /* ty=Tensor[(250, 1), uint16] */, %67, %68)
}

def @func_12529() -> (Tensor[(1, 1, 4), int8], Tensor[(13, 14, 15), float32]) {
  %72 = fn () -> (Tensor[(1, 1, 4), int8], Tensor[(13, 14, 15), float32]) {
    %69 = @func_12461() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
    %70 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
    %71 = %69.1;
    (%70, %71)
  };
  %72() /* ty=(Tensor[(1, 1, 4), int8], Tensor[(13, 14, 15), float32]) */
}

def @func_23478() -> Tensor[(10, 11, 5), float32] {
  %74 = fn () -> Tensor[(10, 11, 5), float32] {
    %73 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(10, 11, 5), float32] */;
    cosh(%73) /* ty=Tensor[(10, 11, 5), float32] */
  };
  %74() /* ty=Tensor[(10, 11, 5), float32] */
}

def @func_10044(%var_10042: Tensor[(2496, 1), float32]) -> (Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  @func_10041(%var_10042) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */
}

def @func_3644() -> (Tensor[(7, 11, 4), float32],) {
  %75 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %76 = %75.0;
  (%76,)
}

def @func_21487() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(720), float64], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %87 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(720), float64], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
    %77 = @func_5482() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %78 = cast(meta[relay.Constant][5] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %79 = reshape(%78, newshape=[6, 10, 12]) /* ty=Tensor[(6, 10, 12), float64] */;
    %80 = @func_19103(%79) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(6, 10, 12), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float64], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
    %81 = @func_12318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
    %82 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
    %83 = %77.0;
    %84 = %80.1;
    %85 = %81.1;
    %86 = %82.0;
    (%83, %84, meta[relay.Constant][5] /* ty=Tensor[(720), float64] */, %85, %86)
  };
  %87() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(720), float64], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */
}

def @func_21240() -> Tensor[(7, 11, 4), int16] {
  %88 = @func_7214() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %88.0
}

def @func_3659() -> Tensor[(7, 11, 4), float32] {
  %89 = fn () -> Tensor[(7, 11, 4), float32] {
    @func_1236() /* ty=Tensor[(7, 11, 4), float32] */
  };
  %89() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_17406() -> (Tensor[(7, 11, 4), float32],) {
  %92 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %90 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %91 = %90.0;
    (%91,)
  };
  %92() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_9519() -> Tensor[(7, 11, 4), float32] {
  %94 = fn () -> Tensor[(7, 11, 4), float32] {
    %93 = @func_5668() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
    %93.0
  };
  %94() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_22558(%var_22557: Tensor[(720), float64]) -> (Tensor[(10, 5, 16), int8], Tensor[(140), float32], Tensor[(720), float64]) {
  %101 = fn (%var_22538: Tensor[(720), float64]) -> (Tensor[(10, 5, 16), int8], Tensor[(140), float32], Tensor[(720), float64]) {
    %95 = @func_6338() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */;
    %96 = cast(%var_22538, dtype="float64") /* ty=Tensor[(720), float64] */;
    %97 = reshape(%96, newshape=[6, 10, 12]) /* ty=Tensor[(6, 10, 12), float64] */;
    %98 = @func_19103(%97) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(6, 10, 12), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float64], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
    %99 = %95.1;
    %100 = %98.5;
    (%99, %100, %var_22538)
  };
  %101(%var_22557) /* ty=(Tensor[(10, 5, 16), int8], Tensor[(140), float32], Tensor[(720), float64]) */
}

def @func_692() -> (Tensor[(7, 11, 4), int16],) {
  %102 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  (%102,)
}

def @func_16177() -> Tensor[(7, 11, 4), float32] {
  %103 = @func_2361() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %103.1
}

def @func_4945() -> Tensor[(7, 11, 4), float32] {
  @func_4943() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_4248() -> Tensor[(7, 11, 4), int16] {
  @func_4246() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_19512() -> (Tensor[(1, 1, 4), int8],) {
  %106 = fn () -> (Tensor[(1, 1, 4), int8],) {
    %104 = @func_14181() /* ty=(Tensor[(1, 1, 4), int8],) */;
    %105 = %104.0;
    (%105,)
  };
  %106() /* ty=(Tensor[(1, 1, 4), int8],) */
}

def @func_1466() -> Tensor[(7, 11, 4), int16] {
  %108 = fn () -> Tensor[(7, 11, 4), int16] {
    %107 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %107.0
  };
  %108() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_13265() -> Tensor[(7, 11, 4), int16] {
  %110 = fn () -> Tensor[(7, 11, 4), int16] {
    %109 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %109.0
  };
  %110() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_13364() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %121 = fn () -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %111 = @func_7956() /* ty=(Tensor[(7, 11, 4), uint8],) */;
    %112 = @func_12829() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32]) */;
    %113 = @func_10249() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %114 = @func_8913() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %115 = @func_11776() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %116 = %111.0;
    %117 = %112.1;
    %118 = %113.0;
    %119 = %114.1;
    %120 = %115.0;
    (%116, %117, %118, %119, %120)
  };
  %121() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_14984() -> Tensor[(7, 11, 4), float32] {
  @func_2618() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_7958() -> (Tensor[(7, 11, 4), uint8],) {
  @func_7956() /* ty=(Tensor[(7, 11, 4), uint8],) */
}

def @func_13573() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  @func_13571() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_7150(%var_7149: Tensor[(13, 4, 4), uint8]) -> (Tensor[(13, 4, 4), uint8], Tensor[(7, 11, 4), float32]) {
  %127 = fn (%var_7099: Tensor[(13, 4, 4), uint8]) -> (Tensor[(13, 4, 4), uint8], Tensor[(7, 11, 4), float32]) {
    %122 = cast(meta[relay.Constant][6] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %123 = cast(%var_7099, dtype="uint8") /* ty=Tensor[(13, 4, 4), uint8] */;
    %124 = @func_5440() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %125 = left_shift(%122, %123) /* ty=Tensor[(13, 4, 4), uint8] */;
    %126 = %124.1;
    (%125, %126)
  };
  %127(%var_7149) /* ty=(Tensor[(13, 4, 4), uint8], Tensor[(7, 11, 4), float32]) */
}

def @func_22955() -> (Tensor[(7, 11, 4), int16],) {
  %128 = @func_18623() /* ty=Tensor[(7, 11, 4), int16] */;
  (%128,)
}

def @func_15182() -> Tensor[(7, 11, 4), float32] {
  %130 = fn () -> Tensor[(7, 11, 4), float32] {
    %129 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %129.0
  };
  %130() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_7329() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
  @func_7327() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_10621(%var_10618: Tensor[(13, 11, 4), float32], %var_10619: Tensor[(13, 11, 4), float32], %var_10620: Tensor[(154, 2), int16]) -> (Tensor[(13, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(154, 2), int16], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(160), int8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 11, 4), float32]) {
  @func_10616(%var_10618, %var_10619, %var_10620) /* ty=(Tensor[(13, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(154, 2), int16], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(160), int8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 11, 4), float32]) */
}

def @func_18690() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) {
  @func_18688() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */
}

def @func_7677(%var_7675: bool, %var_7676: Tensor[(2, 14, 12), bool]) -> Tensor[(2, 14, 12), bool] {
  @func_7673(%var_7675, %var_7676) /* ty=Tensor[(2, 14, 12), bool] */
}

def @func_1730() -> (Tensor[(7, 11, 4), float32],) {
  %131 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %132 = %131.1;
  (%132,)
}

def @func_18439() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %133 = @func_13795() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %134 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %135 = %133.0;
  %136 = %134.0;
  (%135, %136)
}

def @func_11054() -> (Tensor[(7, 11, 4), int16],) {
  @func_11052() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_11982(%var_11980: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), float32], Tensor[(?, 14, 10), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32], Tensor[(800), int8], Tensor[(800), int64]) {
  @func_11979(%var_11980) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(?, 14, 10), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32], Tensor[(800), int8], Tensor[(800), int64]) */
}

def @func_17582() -> (Tensor[(7, 11, 4), float64],) {
  @func_17580() /* ty=(Tensor[(7, 11, 4), float64],) */
}

def @func_16553() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_16551() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_9135() -> (Tensor[(7, 11, 4), float64],) {
  %138 = fn () -> (Tensor[(7, 11, 4), float64],) {
    %137 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
    (%137,)
  };
  %138() /* ty=(Tensor[(7, 11, 4), float64],) */
}

def @func_9296(%var_9294: int32, %var_9295: Tensor[(14, 2, 15), int32]) -> (Tensor[(14, 2, 15), int32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64]) {
  %145 = fn (%var_9230: int32, %var_9231: Tensor[(14, 2, 15), int32]) -> (Tensor[(14, 2, 15), int32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64]) {
    %139 = cast(%var_9230, dtype="int32") /* ty=int32 */;
    %140 = cast(%var_9231, dtype="int32") /* ty=Tensor[(14, 2, 15), int32] */;
    %141 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
    %142 = add(%139, %140) /* ty=Tensor[(14, 2, 15), int32] */;
    %143 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
    %144 = %141.1;
    (%142, %143, %144)
  };
  %145(%var_9294, %var_9295) /* ty=(Tensor[(14, 2, 15), int32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64]) */
}

def @func_22416() -> Tensor[(6, 16, 6), float64] {
  %146 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 16, 6), float64] */, dtype="float64") /* ty=Tensor[(6, 16, 6), float64] */;
  sin(%146) /* ty=Tensor[(6, 16, 6), float64] */
}

def @func_12829() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32]) {
  %147 = @func_5668() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %148 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
  %149 = @func_6453() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %150 = %147.0;
  %151 = %148.1;
  %152 = %149.0;
  (%150, %151, %152)
}

def @func_8915() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  @func_8913() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_10148() -> Tensor[(7, 11, 4), float32] {
  %153 = @func_2177() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %153.2
}

def @func_4576() -> Tensor[(7, 11, 4), int16] {
  %154 = @func_2361() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %154.3
}

def @func_17952() -> Tensor[(7, 11, 4), float32] {
  %155 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %155.1
}

def @func_10342() -> (Tensor[(7, 11, 4), int16],) {
  @func_10340() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_10250() -> (Tensor[(7, 11, 4), float32],) {
  %158 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %156 = @func_8607() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %157 = %156.0;
    (%157,)
  };
  %158() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_22418() -> Tensor[(6, 16, 6), float64] {
  @func_22416() /* ty=Tensor[(6, 16, 6), float64] */
}

def @func_18193(%var_18192: Tensor[(1248), int64]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], int32, Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(16, 13, 6), int64], Tensor[(1248), int64], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) {
  %179 = fn (%var_18155: Tensor[(1248), int64]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], int32, Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(16, 13, 6), int64], Tensor[(1248), int64], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) {
    %159 = @func_5482() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %160 = @func_5516() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %161 = @func_16441() /* ty=(int32, Tensor[(7, 11, 4), float32], Tensor[(216), uint8]) */;
    %162 = @func_12611() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
    %163 = @func_14608() /* ty=(Tensor[(13, 14, 15), uint16], Tensor[(13, 14, 15), float32]) */;
    %164 = cast(%var_18155, dtype="int64") /* ty=Tensor[(1248), int64] */;
    %165 = cast(%var_18155, dtype="int64") /* ty=Tensor[(1248), int64] */;
    %166 = reshape(%164, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
    %167 = reshape(%165, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
    %168 = @func_9408() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8]) */;
    %169 = @func_9421() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %170 = %159.0;
    %171 = %160.0;
    %172 = %161.0;
    %173 = %162.1;
    %174 = @func_14318() /* ty=Tensor[(7, 11, 4), int16] */;
    %175 = %163.1;
    %176 = @func_2658(%166, %167) /* ty=Tensor[(16, 13, 6), int64] */;
    %177 = %168.1;
    %178 = %169.0;
    (%170, %171, %172, %173, %174, %175, %176, %var_18155, %177, %178)
  };
  %179(%var_18192) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], int32, Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(16, 13, 6), int64], Tensor[(1248), int64], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) */
}

def @func_21402() -> (Tensor[(7, 11, 4), float32],) {
  %180 = @func_3658() /* ty=Tensor[(7, 11, 4), float32] */;
  (%180,)
}

def @func_16884() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(3, 13, 9), float64], Tensor[(351), float64]) {
  @func_16882() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(3, 13, 9), float64], Tensor[(351), float64]) */
}

def @func_17444(%var_17442: Tensor[(6, 7, 3), bool], %var_17443: Tensor[(6, 7, 3), bool]) -> (Tensor[(6, 7, 3), bool], Tensor[(7, 11, 4), int16]) {
  %188 = fn (%var_17417: Tensor[(6, 7, 3), bool], %var_17418: Tensor[(6, 7, 3), bool]) -> (Tensor[(6, 7, 3), bool], Tensor[(7, 11, 4), int16]) {
    %181 = cast(%var_17418, dtype="bool") /* ty=Tensor[(6, 7, 3), bool] */;
    %182 = shape_of(%var_17417, dtype="int32") /* ty=Tensor[(3), int32] */;
    %183 = cast(%var_17417, dtype="bool") /* ty=Tensor[(6, 7, 3), bool] */;
    %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %185 = @func_12727() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %186 = logical_or(%183, %184) /* ty=Tensor[(6, 7, 3), bool] */;
    %187 = %185.1;
    (%186, %187)
  };
  %188(%var_17442, %var_17443) /* ty=(Tensor[(6, 7, 3), bool], Tensor[(7, 11, 4), int16]) */
}

def @func_14399(%var_14397: Tensor[(312, 8), float32]) -> (Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float32], Tensor[(312, 8), float32]) {
  @func_14396(%var_14397) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float32], Tensor[(312, 8), float32]) */
}

def @func_19379() -> Tensor[(7, 11, 4), int16] {
  %189 = @func_12097() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %189.0
}

def @func_5482() -> (Tensor[(7, 11, 4), float32],) {
  %190 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %191 = %190.2;
  (%191,)
}

def @func_13639(%var_13610: Tensor[(216), uint8]) -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(216), uint8], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(7, 11, 4), int16]) {
  %192 = @func_12085() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %193 = cast(%var_13610, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %194 = reshape(%193, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %195 = @func_2972(%194) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), int16]) */;
  %196 = cast(%var_13610, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %197 = cast(meta[relay.Constant][8] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %198 = reshape(%196, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %199 = reshape(%197, newshape=[]) /* ty=uint8 */;
  %200 = @func_9205(%198, %199) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(2496), float32], Tensor[(216), uint8], uint8, Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %201 = %192.0;
  %202 = %195.1;
  %203 = @func_8841() /* ty=Tensor[(13, 14, 15), float32] */;
  %204 = %200.0;
  %205 = @func_11078() /* ty=Tensor[(7, 11, 4), int16] */;
  (%201, %202, %var_13610, %203, %204, meta[relay.Constant][8] /* ty=uint8 */, %205)
}

def @func_19796() -> (Tensor[(7, 11, 4), float64],) {
  %206 = @func_18782() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) */;
  %207 = %206.1;
  (%207,)
}

def @func_16551() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %208 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %209 = @func_15181() /* ty=Tensor[(7, 11, 4), float32] */;
  %210 = %208.0;
  (%209, %210)
}

def @func_4712() -> Tensor[(7, 11, 4), uint8] {
  %211 = @func_3557() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %211.0
}

def @func_13571() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %212 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %213 = @func_5905() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %214 = @func_6861() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %215 = %212.0;
  %216 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  %217 = %213.0;
  %218 = %214.0;
  (%215, %216, %217, %218)
}

def @func_17879() -> (Tensor[(13, 14, 15), float32],) {
  @func_17877() /* ty=(Tensor[(13, 14, 15), float32],) */
}

def @func_6425() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_6423() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_5270(%var_5268: Tensor[(160), int8], %var_5269: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(800), int8], Tensor[(160), int8], Tensor[(800), int8], Tensor[(10, 5, 16), int8], Tensor[(7, 11, 4), float32]) {
  @func_5266(%var_5268, %var_5269) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(800), int8], Tensor[(160), int8], Tensor[(800), int8], Tensor[(10, 5, 16), int8], Tensor[(7, 11, 4), float32]) */
}

def @func_2662(%var_2660: Tensor[(16, 13, 6), int64], %var_2661: Tensor[(16, 13, 6), int64]) -> Tensor[(16, 13, 6), int64] {
  @func_2658(%var_2660, %var_2661) /* ty=Tensor[(16, 13, 6), int64] */
}

def @func_4638() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) {
  %219 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %220 = @func_2618() /* ty=Tensor[(7, 11, 4), float32] */;
  %221 = %219.0;
  (%220, %221)
}

def @func_11321() -> (Tensor[(7, 11, 4), float32],) {
  %222 = @func_5516() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %223 = %222.0;
  (%223,)
}

def @func_7565() -> (Tensor[(14, 10, 9), float64], Tensor[(7, 11, 4), float32]) {
  %224 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
  %225 = %224.5;
  %226 = cast(%225, dtype="float64") /* ty=Tensor[(14, 10, 9), float64] */;
  %227 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %228 = acosh(%226) /* ty=Tensor[(14, 10, 9), float64] */;
  %229 = %227.0;
  (%228, %229)
}

def @func_14831() -> Tensor[(7, 11, 4), int16] {
  %230 = @func_9034() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %230.0
}

def @func_14438() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  @func_14436() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_23050() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %231 = @func_6423() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %232 = @func_10715() /* ty=Tensor[(7, 11, 4), int16] */;
  %233 = %231.0;
  (%232, %233)
}

def @func_9209(%var_9207: Tensor[(216), uint8], %var_9208: uint8) -> (Tensor[(7, 11, 4), int16], Tensor[(2496), float32], Tensor[(216), uint8], uint8, Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
  @func_9205(%var_9207, %var_9208) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(2496), float32], Tensor[(216), uint8], uint8, Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_1710(%var_1708: uint8, %var_1709: Tensor[(8, 3, 9), uint8]) -> (Tensor[(8, 3, 9), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  @func_1706(%var_1708, %var_1709) /* ty=(Tensor[(8, 3, 9), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */
}

def @func_10717() -> Tensor[(7, 11, 4), int16] {
  @func_10715() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_9909() -> (Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32]) {
  @func_9907() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32]) */
}

def @func_9764() -> (Tensor[(13, 14, 15), float32],) {
  %234 = @func_6534() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %235 = %234.0;
  (%235,)
}

def @func_15350() -> Tensor[(7, 11, 4), float32] {
  %237 = fn () -> Tensor[(7, 11, 4), float32] {
    %236 = @func_11531() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %236.1
  };
  %237() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_6591() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %238 = @func_4638() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) */;
  %239 = @func_6029() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %240 = %238.0;
  %241 = %239.0;
  (%240, %241)
}

def @func_4428(%var_4410: Tensor[(16, 10), int8], %var_4411: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(260), uint8], Tensor[(10, 5, 16), int8], Tensor[(16, 10), int8], Tensor[(800), int8]) {
  %242 = cast(meta[relay.Constant][9] /* ty=Tensor[(260), uint8] */, dtype="uint8") /* ty=Tensor[(260), uint8] */;
  %243 = reshape(%242, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint8] */;
  %244 = @func_4320(%243) /* ty=(Tensor[(5, 13, 4), uint8],) */;
  %245 = cast(%var_4410, dtype="int8") /* ty=Tensor[(16, 10), int8] */;
  %246 = cast(%var_4411, dtype="int8") /* ty=Tensor[(800), int8] */;
  %247 = reshape(%245, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), int8] */;
  %248 = reshape(%246, newshape=[10, 5, 16]) /* ty=Tensor[(10, 5, 16), int8] */;
  %249 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
  %250 = %244.0;
  %251 = @func_1755(%247, %248) /* ty=Tensor[(10, 5, 16), int8] */;
  (%249, %250, meta[relay.Constant][9] /* ty=Tensor[(260), uint8] */, %251, %var_4410, %var_4411)
}

def @func_17954() -> Tensor[(7, 11, 4), float32] {
  @func_17952() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_2972(%var_2952: Tensor[(216), uint8]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), int16]) {
  %252 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %253 = cast(meta[relay.Constant][10] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %254 = cast(%var_2952, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %255 = reshape(%253, newshape=[]) /* ty=uint8 */;
  %256 = reshape(%254, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %257 = @func_2037(%255, %256) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) */;
  %258 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %259 = %252.1;
  %260 = %257.0;
  %261 = %258.0;
  (%259, %260, meta[relay.Constant][10] /* ty=uint8 */, %var_2952, %261)
}

def @func_19162() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %265 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %262 = @func_11462() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %263 = @func_9790() /* ty=Tensor[(7, 11, 4), int16] */;
    %264 = %262.3;
    (%263, %264)
  };
  %265() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_8348() -> Tensor[(7, 11, 4), int16] {
  %267 = fn () -> Tensor[(7, 11, 4), int16] {
    %266 = @func_7876() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %266.1
  };
  %267() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_12176() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %271 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
    %268 = @func_9858() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) */;
    %269 = %268.0;
    %270 = @func_4943() /* ty=Tensor[(7, 11, 4), float32] */;
    (%269, %270)
  };
  %271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_2668() -> (Tensor[(7, 11, 4), int16],) {
  %272 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  (%272,)
}

def @func_14319() -> Tensor[(7, 11, 4), int16] {
  %274 = fn () -> Tensor[(7, 11, 4), int16] {
    %273 = @func_6086() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
    %273.3
  };
  %274() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_9084() -> Tensor[(7, 11, 4), int16] {
  @func_9082() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_14866(%var_14864: Tensor[(140), float32]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_14863(%var_14864) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_15704(%var_15675: float32, %var_15692: Tensor[(572), float32]) -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], float32, Tensor[(6, 20), float32], Tensor[(360), float64], Tensor[(7, 11, 4), int16], Tensor[(572), float32]) {
  %275 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %276 = @func_10340() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %277 = cast(%var_15675, dtype="float32") /* ty=float32 */;
  %278 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 20), float32] */, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %279 = cast(meta[relay.Constant][12] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %280 = reshape(%277, newshape=[]) /* ty=float32 */;
  %281 = reshape(%278, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), float32] */;
  %282 = reshape(%279, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %283 = @func_4000(%280, %281, %282) /* ty=(Tensor[(2, 4, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(1, 360), float64], Tensor[(7, 11, 4), float32]) */;
  %284 = cast(%var_15692, dtype="float32") /* ty=Tensor[(572), float32] */;
  %285 = cast(%var_15692, dtype="float32") /* ty=Tensor[(572), float32] */;
  %286 = %275.1;
  %287 = cast(%286, dtype="int16") /* ty=Tensor[(7, 11, 4), int16] */;
  %288 = reshape(%284, newshape=[13, 11, 4]) /* ty=Tensor[(13, 11, 4), float32] */;
  %289 = reshape(%285, newshape=[13, 11, 4]) /* ty=Tensor[(13, 11, 4), float32] */;
  %290 = reshape(%287, newshape=[154, 2]) /* ty=Tensor[(154, 2), int16] */;
  %291 = @func_10616(%288, %289, %290) /* ty=(Tensor[(13, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(154, 2), int16], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(160), int8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 11, 4), float32]) */;
  %292 = %276.0;
  %293 = %283.1;
  %294 = %291.6;
  (%286, %292, %293, %var_15675, meta[relay.Constant][11] /* ty=Tensor[(6, 20), float32] */, meta[relay.Constant][12] /* ty=Tensor[(360), float64] */, %294, %var_15692)
}

def @func_16882() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(3, 13, 9), float64], Tensor[(351), float64]) {
  %295 = @func_13571() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %296 = @func_6675() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %297 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %298 = cast(meta[relay.Constant][13] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
  %299 = reshape(%298, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float64] */;
  %300 = @func_4561(%299) /* ty=(Tensor[(3, 13, 9), float64], Tensor[(7, 11, 4), float32]) */;
  %301 = %295.3;
  %302 = %296.0;
  %303 = %297.0;
  %304 = %300.0;
  (%301, %302, %303, %304, meta[relay.Constant][13] /* ty=Tensor[(351), float64] */)
}

def @func_2409() -> (Tensor[(7, 11, 4), int16],) {
  @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_5450() -> (Tensor[(7, 11, 4), uint8],) {
  %307 = fn () -> (Tensor[(7, 11, 4), uint8],) {
    %305 = @func_4638() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) */;
    %306 = %305.1;
    (%306,)
  };
  %307() /* ty=(Tensor[(7, 11, 4), uint8],) */
}

def @func_3646() -> (Tensor[(7, 11, 4), float32],) {
  @func_3644() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_19357() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(1, 1, 4), int8], Tensor[(16, 15, 12), float32]) {
  %313 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(1, 1, 4), int8], Tensor[(16, 15, 12), float32]) {
    %308 = @func_7327() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
    %309 = @func_11078() /* ty=Tensor[(7, 11, 4), int16] */;
    %310 = %308.1;
    %311 = @func_16688() /* ty=Tensor[(1, 1, 4), int8] */;
    %312 = @func_17837() /* ty=Tensor[(16, 15, 12), float32] */;
    (%309, %310, %311, %312)
  };
  %313() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(1, 1, 4), int8], Tensor[(16, 15, 12), float32]) */
}

def @func_15119() -> (Tensor[(7, 11, 4), float32],) {
  @func_15117() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_6338() -> (Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) {
  %314 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %315 = cast(meta[relay.Constant][14] /* ty=Tensor[(160), int8] */, dtype="int8") /* ty=Tensor[(160), int8] */;
  %316 = cast(meta[relay.Constant][15] /* ty=Tensor[(800), int8] */, dtype="int8") /* ty=Tensor[(800), int8] */;
  %317 = reshape(%315, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), int8] */;
  %318 = reshape(%316, newshape=[10, 5, 16]) /* ty=Tensor[(10, 5, 16), int8] */;
  %319 = %314.2;
  %320 = @func_1755(%317, %318) /* ty=Tensor[(10, 5, 16), int8] */;
  (%319, %320, meta[relay.Constant][14] /* ty=Tensor[(160), int8] */, meta[relay.Constant][15] /* ty=Tensor[(800), int8] */)
}

def @func_17884() -> (Tensor[(216), uint8],) {
  %321 = @func_16441() /* ty=(int32, Tensor[(7, 11, 4), float32], Tensor[(216), uint8]) */;
  %322 = %321.2;
  (%322,)
}

def @func_5803() -> (Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32]) {
  %323 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %324 = cast(meta[relay.Constant][16] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %325 = reshape(%324, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %326 = @func_1883(%325) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %327 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %328 = %323.2;
  %329 = %326.2;
  %330 = %327.0;
  (%328, %329, meta[relay.Constant][16] /* ty=Tensor[(140), float32] */, %330)
}

def @func_10693() -> (Tensor[(7, 11, 4), int16],) {
  %333 = fn () -> (Tensor[(7, 11, 4), int16],) {
    %331 = @func_9421() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %332 = %331.0;
    (%332,)
  };
  %333() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_7673(%var_7644: bool, %var_7645: Tensor[(2, 14, 12), bool]) -> Tensor[(2, 14, 12), bool] {
  %334 = cast(%var_7644, dtype="bool") /* ty=bool */;
  %335 = cast(%var_7645, dtype="bool") /* ty=Tensor[(2, 14, 12), bool] */;
  logical_or(%334, %335) /* ty=Tensor[(2, 14, 12), bool] */
}

def @func_10750() -> (Tensor[(7, 11, 4), int16],) {
  %336 = @func_1354() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %337 = %336.0;
  (%337,)
}

def @func_13986(%var_13984: Tensor[(1, 15, 15), float32]) -> (Tensor[(1, 15, 15), float32],) {
  @func_13983(%var_13984) /* ty=(Tensor[(1, 15, 15), float32],) */
}

def @func_6383() -> (Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) {
  %338 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %339 = cast(meta[relay.Constant][17] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %340 = cast(meta[relay.Constant][17] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %341 = reshape(%339, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
  %342 = reshape(%340, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
  %343 = @func_4743(%341, %342) /* ty=(Tensor[(14, 10, 9), int64],) */;
  %344 = %338.0;
  %345 = %343.0;
  (%344, %345, meta[relay.Constant][17] /* ty=Tensor[(1260), int64] */)
}

def @func_22817() -> (Tensor[(5, 7, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(16, 15, 12), float32]) {
  %346 = @func_21705() /* ty=(Tensor[(5, 7, 16), float64],) */;
  %347 = @func_19905() /* ty=(Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) */;
  %348 = @func_11289() /* ty=(Tensor[(16, 15, 12), float32],) */;
  %349 = %346.0;
  %350 = %347.1;
  %351 = %348.0;
  (%349, %350, %351)
}

def @func_20862() -> (Tensor[(7, 11, 4), float32],) {
  @func_20860() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_7500() -> (Tensor[(7, 11, 4), int16],) {
  @func_7498() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_23285() -> (Tensor[(7, 11, 4), int16],) {
  @func_23283() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_8713() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) {
  %358 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) {
    %352 = @func_6453() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %353 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %354 = @func_6383() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) */;
    %355 = %352.0;
    %356 = %353.2;
    %357 = %354.2;
    (%355, %356, %357)
  };
  %358() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */
}

def @func_9357() -> (Tensor[(13, 14, 15), float32], Tensor[(160), int8]) {
  @func_9355() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(160), int8]) */
}

def @func_19015() -> (Tensor[(7, 11, 4), float32],) {
  %359 = @func_4638() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) */;
  %360 = %359.0;
  (%360,)
}

def @func_14142() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_14140() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_11531() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %361 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %362 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  %363 = %361.0;
  (%362, %363)
}

def @func_2523() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_8603() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  @func_8601() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_7956() -> (Tensor[(7, 11, 4), uint8],) {
  %364 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %365 = %364.0;
  (%365,)
}

def @func_13118() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  @func_13116() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_14705() -> Tensor[(7, 11, 4), int16] {
  %366 = fn () -> Tensor[(7, 11, 4), int16] {
    @func_4246() /* ty=Tensor[(7, 11, 4), int16] */
  };
  %366() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_14118() -> Tensor[(13, 14, 15), float32] {
  %367 = @func_6011() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %367.0
}

def @func_1356() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  @func_1354() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_2883(%var_2882: Tensor[(5, 8, 9), float64]) -> (Tensor[(5, 8, 9), float64], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) {
  %374 = fn (%var_2827: Tensor[(5, 8, 9), float64]) -> (Tensor[(5, 8, 9), float64], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) {
    %368 = cast(%var_2827, dtype="float64") /* ty=Tensor[(5, 8, 9), float64] */;
    %369 = cast(meta[relay.Constant][18] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
    %370 = reshape(%369, newshape=[140]) /* ty=Tensor[(140), float32] */;
    %371 = @func_1883(%370) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
    %372 = rsqrt(%368) /* ty=Tensor[(5, 8, 9), float64] */;
    %373 = %371.0;
    (%372, %373, meta[relay.Constant][18] /* ty=Tensor[(140), float32] */)
  };
  %374(%var_2882) /* ty=(Tensor[(5, 8, 9), float64], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */
}

def @func_13712() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %375 = @func_10176() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %376 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %377 = @func_4246() /* ty=Tensor[(7, 11, 4), int16] */;
  %378 = %375.0;
  %379 = %376.0;
  (%377, %378, %379)
}

def @func_16372() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %380 = @func_11794() /* ty=Tensor[(7, 11, 4), float32] */;
  %381 = @func_4994() /* ty=Tensor[(7, 11, 4), int16] */;
  (%380, %381)
}

def @func_18739(%var_18737: int32) -> (Tensor[(7, 11, 4), float32], int32, int32) {
  @func_18736(%var_18737) /* ty=(Tensor[(7, 11, 4), float32], int32, int32) */
}

def @func_694() -> (Tensor[(7, 11, 4), int16],) {
  @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_4000(%var_3963: float32, %var_3964: Tensor[(2, 4, 15), float32], %var_3991: Tensor[(1, 360), float64]) -> (Tensor[(2, 4, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(1, 360), float64], Tensor[(7, 11, 4), float32]) {
  %382 = cast(%var_3963, dtype="float32") /* ty=float32 */;
  %383 = cast(%var_3964, dtype="float32") /* ty=Tensor[(2, 4, 15), float32] */;
  %384 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %385 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %386 = cast(%var_3991, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
  %387 = reshape(%386, newshape=[5, 8, 9]) /* ty=Tensor[(5, 8, 9), float64] */;
  %388 = @func_2881(%387) /* ty=(Tensor[(5, 8, 9), float64], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %389 = %388.2;
  %390 = cast(%389, dtype="float32") /* ty=Tensor[(140), float32] */;
  %391 = reshape(%390, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %392 = @func_1883(%391) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %393 = power(%382, %383) /* ty=Tensor[(2, 4, 15), float32] */;
  %394 = %384.0;
  %395 = %385.0;
  %396 = %392.0;
  (%393, %394, %395, %389, %var_3991, %396)
}

def @func_11871(%var_11858: Tensor[(16, 14, 9), int16], %var_11859: Tensor[(16, 14, 9), int16]) -> (Tensor[(16, 14, 9), bool],) {
  %397 = cast(%var_11859, dtype="bool") /* ty=Tensor[(16, 14, 9), bool] */;
  %398 = shape_of(%var_11858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%var_11858, dtype="bool") /* ty=Tensor[(16, 14, 9), bool] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %401 = greater_equal(%399, %400) /* ty=Tensor[(16, 14, 9), bool] */;
  (%401,)
}

def @func_8913() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %402 = @func_6029() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %403 = @func_4097() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %404 = %402.0;
  %405 = %403.0;
  (%404, %405)
}

def @func_18242() -> (Tensor[(13, 14, 15), float32],) {
  %407 = fn () -> (Tensor[(13, 14, 15), float32],) {
    %406 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
    (%406,)
  };
  %407() /* ty=(Tensor[(13, 14, 15), float32],) */
}

def @func_14089() -> (Tensor[(7, 11, 4), int16], Tensor[(16, 13, 6), int64], Tensor[(1248), int64]) {
  @func_14087() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(16, 13, 6), int64], Tensor[(1248), int64]) */
}

def @func_14140() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %408 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %409 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %410 = %408.0;
  %411 = %409.0;
  (%410, %411)
}

def @func_17374() -> (Tensor[(7, 11, 4), float32],) {
  %414 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %412 = @func_15117() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %413 = %412.0;
    (%413,)
  };
  %414() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_4885(%var_4867: Tensor[(12, 18), uint8], %var_4882: uint8) -> (Tensor[(7, 11, 4), float32], Tensor[(12, 13, 16), float64], Tensor[(2496), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(12, 18), float64], uint8, uint8) {
  %415 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %416 = cast(meta[relay.Constant][19] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %417 = cast(meta[relay.Constant][19] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %418 = reshape(%416, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %419 = reshape(%417, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %420 = @func_1869(%418, %419) /* ty=(Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %421 = @func_3255() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %422 = cast(%var_4867, dtype="uint8") /* ty=Tensor[(12, 18), uint8] */;
  %423 = reshape(%422, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %424 = @func_2972(%423) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), int16]) */;
  %425 = cast(%var_4867, dtype="float64") /* ty=Tensor[(12, 18), float64] */;
  %426 = cast(%var_4882, dtype="uint8") /* ty=uint8 */;
  %427 = cast(%var_4867, dtype="uint8") /* ty=Tensor[(12, 18), uint8] */;
  %428 = reshape(%426, newshape=[]) /* ty=uint8 */;
  %429 = reshape(%427, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %430 = @func_2037(%428, %429) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) */;
  %431 = %415.0;
  %432 = %420.1;
  %433 = %421.0;
  %434 = %424.4;
  %435 = exp(%425) /* ty=Tensor[(12, 18), float64] */;
  %436 = %430.2;
  (%431, %432, meta[relay.Constant][19] /* ty=Tensor[(2496), float32] */, %433, %434, %435, %436, %var_4882)
}

def @func_9703(%var_9671: Tensor[(14, 10, 9), int64]) -> (Tensor[(7, 11, 4), int16], Tensor[(1260), int64], Tensor[(14, 10, 9), uint16], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %437 = cast(meta[relay.Constant][20] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %438 = cast(meta[relay.Constant][20] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
  %439 = reshape(%437, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
  %440 = reshape(%438, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
  %441 = @func_4743(%439, %440) /* ty=(Tensor[(14, 10, 9), int64],) */;
  %442 = %441.0;
  %443 = cast(%var_9671, dtype="uint16") /* ty=Tensor[(14, 10, 9), uint16] */;
  %444 = shape_of(%442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%442, dtype="uint16") /* ty=Tensor[(14, 10, 9), uint16] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %447 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %448 = @func_8913() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %449 = @func_5139() /* ty=Tensor[(7, 11, 4), int16] */;
  %450 = left_shift(%445, %446) /* ty=Tensor[(14, 10, 9), uint16] */;
  %451 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
  %452 = %447.0;
  %453 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
  %454 = %448.0;
  (%449, meta[relay.Constant][20] /* ty=Tensor[(1260), int64] */, %450, %451, %452, %453, %454)
}

def @func_5805() -> (Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32]) {
  @func_5803() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_22231() -> (Tensor[(7, 11, 4), float32],) {
  %457 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %455 = @func_14815() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %456 = %455.1;
    (%456,)
  };
  %457() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_11930() -> (Tensor[(16, 15, 12), float32], Tensor[(130, 2), float64]) {
  %458 = @func_11289() /* ty=(Tensor[(16, 15, 12), float32],) */;
  %459 = @func_5854() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(5, 13, 5), float32], Tensor[(130, 2), float64]) */;
  %460 = %458.0;
  %461 = %459.3;
  (%460, %461)
}

def @func_6938() -> (Tensor[(7, 11, 4), float32],) {
  %464 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %462 = @func_6029() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %463 = %462.0;
    (%463,)
  };
  %464() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_1262() -> Tensor[(13, 14, 15), float32] {
  @func_810() /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_22505() -> Tensor[(13, 14, 15), float32] {
  %465 = @func_6534() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %465.0
}

def @func_22038() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %469 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
    %466 = @func_13116() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %467 = %466.0;
    %468 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
    (%467, %468)
  };
  %469() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_11323() -> (Tensor[(7, 11, 4), float32],) {
  @func_11321() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_19612() -> Tensor[(7, 11, 4), int16] {
  %471 = fn () -> Tensor[(7, 11, 4), int16] {
    %470 = @func_12727() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %470.1
  };
  %471() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_1474() -> (Tensor[(7, 11, 4), int16],) {
  %472 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  (%472,)
}

def @func_1315() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
  %481 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
    %473 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %474 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
    %475 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %476 = %473.0;
    %477 = %474.1;
    %478 = %475.0;
    %479 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
    %480 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
    (%476, %477, %478, %479, %480)
  };
  %481() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_4097() -> (Tensor[(7, 11, 4), int16],) {
  %482 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %483 = %482.0;
  (%483,)
}

def @func_13375() -> (Tensor[(7, 11, 4), uint8],) {
  %484 = @func_4712() /* ty=Tensor[(7, 11, 4), uint8] */;
  (%484,)
}

def @func_22849() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %491 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
    %485 = @func_18525() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) */;
    %486 = @func_3813() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %487 = @func_7802() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %488 = %485.1;
    %489 = %486.0;
    %490 = %487.0;
    (%488, %489, %490)
  };
  %491() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_18623() -> Tensor[(7, 11, 4), int16] {
  %492 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %492.0
}

def @func_15222() -> Tensor[(13, 14, 15), float32] {
  %493 = @func_5396() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %493.0
}

def @func_3145() -> (Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  %502 = fn () -> (Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
    %494 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
    %495 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 11, 4), float32] */, dtype="uint8") /* ty=Tensor[(7, 11, 4), uint8] */;
    %496 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
    %497 = cast(%494, dtype="uint8") /* ty=Tensor[(7, 11, 4), uint8] */;
    %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %499 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %500 = bitwise_and(%497, %498) /* ty=Tensor[(7, 11, 4), uint8] */;
    %501 = %499.0;
    (%500, %501)
  };
  %502() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */
}

def @func_14609() -> (Tensor[(13, 14, 15), uint16], Tensor[(13, 14, 15), float32]) {
  %510 = fn () -> (Tensor[(13, 14, 15), uint16], Tensor[(13, 14, 15), float32]) {
    %503 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
    %504 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 14, 15), float32] */, dtype="uint16") /* ty=Tensor[(13, 14, 15), uint16] */;
    %505 = shape_of(%503, dtype="int32") /* ty=Tensor[(3), int32] */;
    %506 = cast(%503, dtype="uint16") /* ty=Tensor[(13, 14, 15), uint16] */;
    %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %508 = logical_xor(%506, %507) /* ty=Tensor[(13, 14, 15), uint16] */;
    %509 = @func_14118() /* ty=Tensor[(13, 14, 15), float32] */;
    (%508, %509)
  };
  %510() /* ty=(Tensor[(13, 14, 15), uint16], Tensor[(13, 14, 15), float32]) */
}

def @func_22257() -> Tensor[(7, 11, 4), float32] {
  %511 = @func_6192() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %511.0
}

def @func_22819() -> (Tensor[(5, 7, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(16, 15, 12), float32]) {
  @func_22817() /* ty=(Tensor[(5, 7, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(16, 15, 12), float32]) */
}

def @func_22259() -> Tensor[(7, 11, 4), float32] {
  @func_22257() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_16131() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %520 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
    %512 = @func_6861() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %513 = @func_8913() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %514 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
    %515 = %512.0;
    %516 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
    %517 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
    %518 = %513.0;
    %519 = %514.1;
    (%515, %516, %517, %518, %519)
  };
  %520() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_15911() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %521 = @func_7214() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %522 = @func_5360() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %523 = %521.1;
  %524 = %522.2;
  (%523, %524)
}

def @func_19836(%var_19834: Tensor[(160), int8], %var_19835: Tensor[(800), int8]) -> (Tensor[(260), uint8], Tensor[(160), int8], Tensor[(800), int8], Tensor[(8, 11, 9), bool]) {
  @func_19832(%var_19834, %var_19835) /* ty=(Tensor[(260), uint8], Tensor[(160), int8], Tensor[(800), int8], Tensor[(8, 11, 9), bool]) */
}

def @func_4494() -> (Tensor[(7, 11, 4), uint8],) {
  @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */
}

def @func_11979(%var_11975: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), float32], Tensor[(?, 14, 10), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32], Tensor[(800), int8], Tensor[(800), int64]) {
  %525 = cast(meta[relay.Constant][23] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %526 = cast(meta[relay.Constant][23] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %527 = reshape(%525, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), float32] */;
  %528 = reshape(%526, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), float32] */;
  %529 = @func_8850(%527, %528) /* ty=(Tensor[(?, 14, 10), float32],) */;
  %530 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %531 = cast(meta[relay.Constant][24] /* ty=Tensor[(800), int8] */, dtype="int8") /* ty=Tensor[(800), int8] */;
  %532 = reshape(%531, newshape=[800]) /* ty=Tensor[(800), int8] */;
  %533 = @func_11683(%532) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(160), int8], Tensor[(10, 5, 16), int8], Tensor[(800), int8]) */;
  %534 = cast(%var_11975, dtype="int64") /* ty=Tensor[(800), int64] */;
  %535 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(800), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %536 = cast(meta[relay.Constant][24] /* ty=Tensor[(800), int8] */, dtype="int64") /* ty=Tensor[(800), int64] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?), int64] */;
  %538 = @func_4943() /* ty=Tensor[(7, 11, 4), float32] */;
  %539 = %529.0;
  %540 = %530.1;
  %541 = %533.3;
  %542 = bitwise_and(%536, %537) /* ty=Tensor[(800), int64] */;
  (%538, %539, meta[relay.Constant][23] /* ty=Tensor[(140), float32] */, %540, %541, %542)
}

def @func_21631() -> (Tensor[(1, 1, 4), float32], Tensor[(7, 11, 4), uint8]) {
  %543 = @func_19905() /* ty=(Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) */;
  %544 = %543.0;
  %545 = cast(%544, dtype="float32") /* ty=Tensor[(1, 1, 4), float32] */;
  %546 = @func_14649() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) */;
  %547 = acos(%545) /* ty=Tensor[(1, 1, 4), float32] */;
  %548 = %546.1;
  (%547, %548)
}

def @func_23104() -> (Tensor[(13, 14, 15), float32], Tensor[(10, 5, 16), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %557 = fn () -> (Tensor[(13, 14, 15), float32], Tensor[(10, 5, 16), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
    %549 = @func_9907() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32]) */;
    %550 = @func_6338() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */;
    %551 = @func_12611() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
    %552 = @func_10340() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %553 = %549.0;
    %554 = %550.1;
    %555 = %551.1;
    %556 = %552.0;
    (%553, %554, %555, %556)
  };
  %557() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(10, 5, 16), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_8505() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) {
  @func_8503() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) */
}

def @func_14986() -> Tensor[(7, 11, 4), float32] {
  @func_14984() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_12128() -> (Tensor[(7, 11, 4), int16],) {
  %558 = @func_2559() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %559 = %558.1;
  (%559,)
}

def @func_15117() -> (Tensor[(7, 11, 4), float32],) {
  %560 = @func_6937() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %561 = %560.0;
  (%561,)
}

def @func_12728() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %566 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %562 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
    %563 = @func_10340() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %564 = %562.0;
    %565 = %563.0;
    (%564, %565)
  };
  %566() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_1758(%var_1756: Tensor[(10, 1, 16), int8], %var_1757: Tensor[(10, 5, 16), int8]) -> Tensor[(10, 5, 16), int8] {
  %569 = fn (%var_1747: Tensor[(10, 1, 16), int8], %var_1748: Tensor[(10, 5, 16), int8]) -> Tensor[(10, 5, 16), int8] {
    %567 = cast(%var_1747, dtype="int8") /* ty=Tensor[(10, 1, 16), int8] */;
    %568 = cast(%var_1748, dtype="int8") /* ty=Tensor[(10, 5, 16), int8] */;
    add(%567, %568) /* ty=Tensor[(10, 5, 16), int8] */
  };
  %569(%var_1756, %var_1757) /* ty=Tensor[(10, 5, 16), int8] */
}

def @func_13377() -> (Tensor[(7, 11, 4), uint8],) {
  @func_13375() /* ty=(Tensor[(7, 11, 4), uint8],) */
}

def @func_13674(%var_13673: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), int16], Tensor[(16, 10), int8], Tensor[(160), int8], Tensor[(800), int8]) {
  %577 = fn (%var_13655: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), int16], Tensor[(16, 10), int8], Tensor[(160), int8], Tensor[(800), int8]) {
    %570 = cast(meta[relay.Constant][25] /* ty=Tensor[(160), int8] */, dtype="int8") /* ty=Tensor[(160), int8] */;
    %571 = cast(%var_13655, dtype="int8") /* ty=Tensor[(800), int8] */;
    %572 = reshape(%570, newshape=[16, 10]) /* ty=Tensor[(16, 10), int8] */;
    %573 = reshape(%571, newshape=[800]) /* ty=Tensor[(800), int8] */;
    %574 = @func_4428(%572, %573) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(260), uint8], Tensor[(10, 5, 16), int8], Tensor[(16, 10), int8], Tensor[(800), int8]) */;
    %575 = @func_8660() /* ty=Tensor[(7, 11, 4), int16] */;
    %576 = %574.4;
    (%575, %576, meta[relay.Constant][25] /* ty=Tensor[(160), int8] */, %var_13655)
  };
  %577(%var_13673) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(16, 10), int8], Tensor[(160), int8], Tensor[(800), int8]) */
}

def @func_20948(%var_20946: Tensor[(6, 14, 15), uint16], %var_20947: Tensor[(360), float64]) -> (Tensor[(6, 14, 15), bool], Tensor[(13, 14, 15), uint16], Tensor[(2, 4, 15), float32], float32, Tensor[(120), float32], Tensor[(360), float64], Tensor[(13, 14, 15), float32]) {
  @func_20944(%var_20946, %var_20947) /* ty=(Tensor[(6, 14, 15), bool], Tensor[(13, 14, 15), uint16], Tensor[(2, 4, 15), float32], float32, Tensor[(120), float32], Tensor[(360), float64], Tensor[(13, 14, 15), float32]) */
}

def @func_21367(%var_21365: bool, %var_21366: Tensor[(336), bool]) -> (Tensor[(14, 10, 9), float32], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) {
  @func_21363(%var_21365, %var_21366) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) */
}

def @func_21707() -> (Tensor[(5, 7, 16), float64],) {
  @func_21705() /* ty=(Tensor[(5, 7, 16), float64],) */
}

def @func_23275() -> (Tensor[(7, 11, 4), float32],) {
  %580 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %578 = @func_18439() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
    %579 = %578.1;
    (%579,)
  };
  %580() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_10715() -> Tensor[(7, 11, 4), int16] {
  %581 = @func_4097() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %581.0
}

def @func_5484() -> (Tensor[(7, 11, 4), float32],) {
  @func_5482() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_14816() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %591 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %582 = @func_4638() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) */;
    %583 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %584 = @func_10921() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %585 = @func_11462() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %586 = @func_3658() /* ty=Tensor[(7, 11, 4), float32] */;
    %587 = %582.0;
    %588 = %583.1;
    %589 = %584.0;
    %590 = %585.1;
    (%586, %587, %588, %589, %590)
  };
  %591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_11161(%var_11096: Tensor[(5, 10, 1), uint16], %var_11097: Tensor[(5, 10, 5), uint16]) -> (Tensor[(5, 10, 5), int8], Tensor[(2496), float32], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32]) {
  %592 = cast(%var_11096, dtype="bool") /* ty=Tensor[(5, 10, 1), bool] */;
  %593 = cast(%var_11097, dtype="bool") /* ty=Tensor[(5, 10, 5), bool] */;
  %594 = not_equal(%592, %593) /* ty=Tensor[(5, 10, 5), bool] */;
  %595 = cast(%594, dtype="int8") /* ty=Tensor[(5, 10, 5), int8] */;
  %596 = cast(%var_11096, dtype="int8") /* ty=Tensor[(5, 10, 1), int8] */;
  %597 = cast(meta[relay.Constant][26] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %598 = reshape(%597, newshape=[2496, 1]) /* ty=Tensor[(2496, 1), float32] */;
  %599 = @func_10041(%598) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %600 = %599.2;
  %601 = cast(%600, dtype="float32") /* ty=Tensor[(2496, 1), float32] */;
  %602 = cast(%600, dtype="float32") /* ty=Tensor[(2496, 1), float32] */;
  %603 = reshape(%601, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %604 = reshape(%602, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %605 = @func_1869(%603, %604) /* ty=(Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %606 = cast(%600, dtype="float32") /* ty=Tensor[(2496, 1), float32] */;
  %607 = bitwise_xor(%595, %596) /* ty=Tensor[(5, 10, 5), int8] */;
  %608 = %605.1;
  %609 = sqrt(%606) /* ty=Tensor[(2496, 1), float32] */;
  (%607, meta[relay.Constant][26] /* ty=Tensor[(2496), float32] */, %608, %609)
}

def @func_6593() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_17464() -> (Tensor[(7, 11, 4), int16],) {
  %612 = fn () -> (Tensor[(7, 11, 4), int16],) {
    %610 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %611 = %610.3;
    (%611,)
  };
  %612() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_19106(%var_19104: Tensor[(6, 10, 12), float64]) -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(6, 10, 12), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float64], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) {
  @func_19103(%var_19104) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(6, 10, 12), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float64], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_4432(%var_4430: Tensor[(16, 10), int8], %var_4431: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(260), uint8], Tensor[(10, 5, 16), int8], Tensor[(16, 10), int8], Tensor[(800), int8]) {
  @func_4428(%var_4430, %var_4431) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(260), uint8], Tensor[(10, 5, 16), int8], Tensor[(16, 10), int8], Tensor[(800), int8]) */
}

def @func_19713(%var_19711: Tensor[(15, 13, 4), int8]) -> Tensor[(15, 13, 4), float64] {
  @func_19710(%var_19711) /* ty=Tensor[(15, 13, 4), float64] */
}

def @func_19832(%var_19815: Tensor[(160), int8], %var_19816: Tensor[(800), int8]) -> (Tensor[(260), uint8], Tensor[(160), int8], Tensor[(800), int8], Tensor[(8, 11, 9), bool]) {
  %613 = cast(%var_19815, dtype="int8") /* ty=Tensor[(160), int8] */;
  %614 = cast(%var_19816, dtype="int8") /* ty=Tensor[(800), int8] */;
  %615 = reshape(%613, newshape=[16, 10]) /* ty=Tensor[(16, 10), int8] */;
  %616 = reshape(%614, newshape=[800]) /* ty=Tensor[(800), int8] */;
  %617 = @func_4428(%615, %616) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(260), uint8], Tensor[(10, 5, 16), int8], Tensor[(16, 10), int8], Tensor[(800), int8]) */;
  %618 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 11, 9), float32] */, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
  %619 = sinh(%618) /* ty=Tensor[(8, 11, 9), float32] */;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
  %621 = sigmoid(%620) /* ty=Tensor[(8, 11, 9), float32] */;
  %622 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 11, 9), float32] */, dtype="bool") /* ty=Tensor[(8, 11, 9), bool] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="bool") /* ty=Tensor[(8, 11, 9), bool] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %626 = %617.2;
  %627 = equal(%624, %625) /* ty=Tensor[(8, 11, 9), bool] */;
  (%626, %var_19815, %var_19816, %627)
}

def @func_10216(%var_10207: uint8, %var_10208: Tensor[(216), uint8]) -> (Tensor[(13, 14, 15), float32], uint8, uint8, Tensor[(216), uint8]) {
  %628 = @func_9764() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %629 = %628.0;
  %630 = cast(%629, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  %631 = cast(%var_10207, dtype="uint8") /* ty=uint8 */;
  %632 = cast(%var_10208, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %633 = reshape(%631, newshape=[]) /* ty=uint8 */;
  %634 = reshape(%632, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %635 = @func_2037(%633, %634) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) */;
  %636 = erf(%630) /* ty=Tensor[(13, 14, 15), float32] */;
  %637 = %635.2;
  (%636, %637, %var_10207, %var_10208)
}

def @func_20698() -> (Tensor[(7, 11, 4), int16],) {
  %638 = @func_17064() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %639 = %638.0;
  (%639,)
}

def @func_7878() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  @func_7876() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_14833() -> Tensor[(7, 11, 4), int16] {
  @func_14831() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_15042() -> (Tensor[(7, 11, 4), float32],) {
  @func_15040() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_15970() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8]) {
  %640 = @func_5516() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %641 = @func_7876() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %642 = @func_3144() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %643 = @func_5414() /* ty=Tensor[(7, 11, 4), int16] */;
  %644 = %640.0;
  %645 = %641.1;
  %646 = %642.0;
  (%643, %644, %645, %646)
}

def @func_1196(%var_1195: Tensor[(10, 1, 14), float32]) -> (Tensor[(13, 14, 15), float32], Tensor[(10, 12, 14), int64], Tensor[(308, 1), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float64], Tensor[(7, 11, 4), float32]) {
  %667 = fn (%var_1118: Tensor[(10, 1, 14), float32]) -> (Tensor[(13, 14, 15), float32], Tensor[(10, 12, 14), int64], Tensor[(308, 1), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float64], Tensor[(7, 11, 4), float32]) {
    %647 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 1, 14), float32] */, dtype="float32") /* ty=Tensor[(10, 1, 14), float32] */;
    %648 = shape_of(%var_1118, dtype="int32") /* ty=Tensor[(3), int32] */;
    %649 = cast(%var_1118, dtype="float32") /* ty=Tensor[(10, 1, 14), float32] */;
    %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %651 = mod(%649, %650) /* ty=Tensor[(10, ?, 14), float32] */;
    %652 = cast(%651, dtype="int64") /* ty=Tensor[(10, ?, 14), int64] */;
    %653 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 12, 14), float32] */, dtype="int64") /* ty=Tensor[(10, 12, 14), int64] */;
    %654 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %655 = cast(meta[relay.Constant][31] /* ty=Tensor[(308, 1), int16] */, dtype="int16") /* ty=Tensor[(308, 1), int16] */;
    %656 = reshape(%655, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
    %657 = @func_1084(%656) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %658 = %657.1;
    %659 = cast(%658, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
    %660 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %661 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
    %662 = logical_xor(%652, %653) /* ty=Tensor[(10, 12, 14), int64] */;
    %663 = %654.0;
    %664 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
    %665 = acosh(%659) /* ty=Tensor[(13, 14, 15), float64] */;
    %666 = %660.0;
    (%661, %662, meta[relay.Constant][31] /* ty=Tensor[(308, 1), int16] */, %663, %664, %665, %666)
  };
  %667(%var_1195) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(10, 12, 14), int64], Tensor[(308, 1), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float64], Tensor[(7, 11, 4), float32]) */
}

def @func_4714() -> Tensor[(7, 11, 4), uint8] {
  @func_4712() /* ty=Tensor[(7, 11, 4), uint8] */
}

def @func_17120(%var_17095: uint8, %var_17096: Tensor[(1, 16, 5), uint8]) -> (Tensor[(1, 16, 5), bool],) {
  %668 = cast(%var_17095, dtype="bool") /* ty=bool */;
  %669 = cast(%var_17096, dtype="bool") /* ty=Tensor[(1, 16, 5), bool] */;
  %670 = greater(%668, %669) /* ty=Tensor[(1, 16, 5), bool] */;
  (%670,)
}

def @func_20342() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) {
  %674 = fn () -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) {
    %671 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %672 = @func_14118() /* ty=Tensor[(13, 14, 15), float32] */;
    %673 = %671.2;
    (%672, %673)
  };
  %674() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_2273() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) {
  @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */
}

def @func_5140() -> Tensor[(7, 11, 4), int16] {
  %675 = fn () -> Tensor[(7, 11, 4), int16] {
    @func_3355() /* ty=Tensor[(7, 11, 4), int16] */
  };
  %675() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_9706(%var_9704: Tensor[(14, 10, 9), int64]) -> (Tensor[(7, 11, 4), int16], Tensor[(1260), int64], Tensor[(14, 10, 9), uint16], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_9703(%var_9704) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(1260), int64], Tensor[(14, 10, 9), uint16], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_13689() -> Tensor[(7, 11, 4), int16] {
  %676 = @func_13228() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %676.0
}

def @func_6193() -> (Tensor[(7, 11, 4), float32],) {
  %679 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %677 = @func_5516() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %678 = %677.0;
    (%678,)
  };
  %679() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_14740() -> (Tensor[(7, 11, 4), float32],) {
  @func_14738() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_1600() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %680 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  %681 = cast(%680, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  %682 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %683 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %684 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %685 = asin(%681) /* ty=Tensor[(13, 14, 15), float32] */;
  %686 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
  %687 = %682.0;
  %688 = %683.2;
  %689 = %684.0;
  (%685, %686, %687, %688, %689)
}

def @func_13796() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %694 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
    %690 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %691 = @func_1730() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %692 = %690.1;
    %693 = %691.0;
    (%692, %693)
  };
  %694() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_23052() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  @func_23050() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_2808() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) {
  %695 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %696 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %697 = %695.0;
  %698 = %696.0;
  %699 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  (%697, %698, %699)
}

def @func_2196() -> Tensor[(7, 11, 4), float32] {
  @func_2194() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_1354() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %700 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %701 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %702 = %700.0;
  %703 = %701.0;
  (%702, %703)
}

def @func_3256() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %708 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
    %704 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %705 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %706 = %704.0;
    %707 = %705.0;
    (%706, %707)
  };
  %708() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_13983(%var_13971: Tensor[(1, 15, 15), float32]) -> (Tensor[(1, 15, 15), float32],) {
  %709 = cast(%var_13971, dtype="float32") /* ty=Tensor[(1, 15, 15), float32] */;
  %710 = cosh(%709) /* ty=Tensor[(1, 15, 15), float32] */;
  (%710,)
}

def @func_12130() -> (Tensor[(7, 11, 4), int16],) {
  @func_12128() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_17199(%var_17140: Tensor[(11, 8, 9), float64]) -> (Tensor[(11, 8, 9), float64], Tensor[(7, 11, 4), float32], Tensor[(11, 8, 9), float32], Tensor[(7, 11, 4), int16]) {
  %711 = cast(%var_17140, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
  %712 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %713 = cast(%var_17140, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
  %714 = acosh(%713) /* ty=Tensor[(11, 8, 9), float32] */;
  %715 = cast(%714, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
  %716 = @func_13712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %717 = acos(%711) /* ty=Tensor[(11, 8, 9), float64] */;
  %718 = %712.1;
  %719 = atan(%715) /* ty=Tensor[(11, 8, 9), float32] */;
  %720 = %716.1;
  (%717, %718, %719, %720)
}

def @func_16773() -> (Tensor[(5, 13, 5), float32],) {
  %723 = fn () -> (Tensor[(5, 13, 5), float32],) {
    %721 = @func_4211() /* ty=(Tensor[(5, 13, 5), float32],) */;
    %722 = %721.0;
    (%722,)
  };
  %723() /* ty=(Tensor[(5, 13, 5), float32],) */
}

def @func_20988() -> (Tensor[(14, 10, 9), float64],) {
  %724 = @func_7565() /* ty=(Tensor[(14, 10, 9), float64], Tensor[(7, 11, 4), float32]) */;
  %725 = %724.0;
  (%725,)
}

def @func_20033() -> Tensor[(7, 11, 4), float32] {
  %727 = fn () -> Tensor[(7, 11, 4), float32] {
    %726 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %726.1
  };
  %727() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_6170() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
  %728 = @func_3144() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %729 = %728.1;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  %731 = exp(%730) /* ty=Tensor[(13, 14, 15), float32] */;
  %732 = @func_4461() /* ty=Tensor[(7, 11, 4), int16] */;
  (%731, %732)
}

def @func_17307() -> Tensor[(16, 15, 12), float32] {
  @func_17305() /* ty=Tensor[(16, 15, 12), float32] */
}

def @func_14863(%var_14846: Tensor[(140), float32]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %733 = @func_14140() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %734 = cast(%var_14846, dtype="float32") /* ty=Tensor[(140), float32] */;
  %735 = reshape(%734, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %736 = @func_1883(%735) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %737 = @func_12940() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %738 = @func_13116() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %739 = %733.1;
  %740 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
  %741 = %736.1;
  %742 = %737.0;
  %743 = %738.0;
  (%739, %740, %741, %var_14846, %742, %743)
}

def @func_4184() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %748 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
    %744 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
    %745 = @func_2361() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %746 = %744.0;
    %747 = %745.3;
    (%746, %747)
  };
  %748() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_21732() -> Tensor[(13, 14, 15), float32] {
  %750 = fn () -> Tensor[(13, 14, 15), float32] {
    %749 = @func_6534() /* ty=(Tensor[(13, 14, 15), float32],) */;
    %749.0
  };
  %750() /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_15477(%var_15476: Tensor[(1, 1260), int64]) -> (Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1, 1260), int64], Tensor[(7, 11, 4), int16]) {
  %760 = fn (%var_15438: Tensor[(1, 1260), int64]) -> (Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1, 1260), int64], Tensor[(7, 11, 4), int16]) {
    %751 = @func_13571() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %752 = cast(%var_15438, dtype="int64") /* ty=Tensor[(1, 1260), int64] */;
    %753 = cast(%var_15438, dtype="int64") /* ty=Tensor[(1, 1260), int64] */;
    %754 = reshape(%752, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
    %755 = reshape(%753, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
    %756 = @func_4743(%754, %755) /* ty=(Tensor[(14, 10, 9), int64],) */;
    %757 = %751.2;
    %758 = %756.0;
    %759 = @func_8660() /* ty=Tensor[(7, 11, 4), int16] */;
    (%757, %758, %var_15438, %759)
  };
  %760(%var_15476) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1, 1260), int64], Tensor[(7, 11, 4), int16]) */
}

def @func_18765() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %764 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
    %761 = @func_7802() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %762 = %761.2;
    %763 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
    (%762, %763)
  };
  %764() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_23125() -> (Tensor[(7, 11, 4), float32],) {
  %767 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %765 = @func_5668() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
    %766 = %765.0;
    (%766,)
  };
  %767() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_20990() -> (Tensor[(14, 10, 9), float64],) {
  @func_20988() /* ty=(Tensor[(14, 10, 9), float64],) */
}

def @func_8601() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %768 = @func_8318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), float64]) */;
  %769 = @func_7247() /* ty=Tensor[(7, 11, 4), int16] */;
  %770 = @func_5414() /* ty=Tensor[(7, 11, 4), int16] */;
  %771 = %768.0;
  (%769, %770, %771)
}

def @func_21313(%var_21310: uint8) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216, 1), uint8]) {
  %772 = cast(%var_21310, dtype="uint8") /* ty=uint8 */;
  %773 = cast(meta[relay.Constant][32] /* ty=Tensor[(216, 1), uint8] */, dtype="uint8") /* ty=Tensor[(216, 1), uint8] */;
  %774 = reshape(%772, newshape=[]) /* ty=uint8 */;
  %775 = reshape(%773, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %776 = @func_2037(%774, %775) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) */;
  %777 = @func_16177() /* ty=Tensor[(7, 11, 4), float32] */;
  %778 = %776.0;
  (%777, %778, %var_21310, meta[relay.Constant][32] /* ty=Tensor[(216, 1), uint8] */)
}

def @func_21242() -> Tensor[(7, 11, 4), int16] {
  @func_21240() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_22466() -> (Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %785 = fn () -> (Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
    %779 = @func_19241() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %780 = @func_13712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %781 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
    %782 = @func_15293() /* ty=Tensor[(1, 1, 4), int8] */;
    %783 = %779.0;
    %784 = %780.0;
    (%781, %782, %783, %784)
  };
  %785() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_9205(%var_9165: Tensor[(216), uint8], %var_9166: uint8) -> (Tensor[(7, 11, 4), int16], Tensor[(2496), float32], Tensor[(216), uint8], uint8, Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
  %786 = @func_7177() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %787 = cast(%var_9165, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %788 = cast(%var_9166, dtype="uint8") /* ty=uint8 */;
  %789 = reshape(%787, newshape=[12, 18]) /* ty=Tensor[(12, 18), uint8] */;
  %790 = reshape(%788, newshape=[]) /* ty=uint8 */;
  %791 = @func_4885(%789, %790) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(12, 13, 16), float64], Tensor[(2496), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(12, 18), float64], uint8, uint8) */;
  %792 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %793 = @func_8601() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %794 = %786.0;
  %795 = %791.2;
  %796 = %792.0;
  %797 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %798 = %793.1;
  (%794, %795, %var_9165, %var_9166, %796, %797, %798)
}

def @func_14120() -> Tensor[(13, 14, 15), float32] {
  @func_14118() /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_16836() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %803 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
    %799 = @func_11321() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %800 = @func_12829() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32]) */;
    %801 = %799.0;
    %802 = %800.0;
    (%801, %802)
  };
  %803() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_4213() -> (Tensor[(5, 13, 5), float32],) {
  @func_4211() /* ty=(Tensor[(5, 13, 5), float32],) */
}

def @func_10969() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) {
  %809 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) {
    %804 = @func_4246() /* ty=Tensor[(7, 11, 4), int16] */;
    %805 = cast(%804, dtype="int16") /* ty=Tensor[(7, 11, 4), int16] */;
    %806 = reshape(%805, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
    %807 = @func_1084(%806) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %808 = %807.0;
    (%804, %808)
  };
  %809() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */
}

def @func_4659() -> Tensor[(13, 14, 15), float32] {
  %810 = @func_3557() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %810.1
}

def @func_11778() -> (Tensor[(7, 11, 4), int16],) {
  @func_11776() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_16443() -> (int32, Tensor[(7, 11, 4), float32], Tensor[(216), uint8]) {
  @func_16441() /* ty=(int32, Tensor[(7, 11, 4), float32], Tensor[(216), uint8]) */
}

def @func_16688() -> Tensor[(1, 1, 4), int8] {
  @func_15293() /* ty=Tensor[(1, 1, 4), int8] */
}

def @func_12941() -> (Tensor[(7, 11, 4), float32],) {
  %812 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %811 = @func_9518() /* ty=Tensor[(7, 11, 4), float32] */;
    (%811,)
  };
  %812() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_19554() -> (Tensor[(7, 11, 4), float32],) {
  %814 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %813 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
    (%813,)
  };
  %814() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_12098() -> (Tensor[(7, 11, 4), int16],) {
  %817 = fn () -> (Tensor[(7, 11, 4), int16],) {
    %815 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
    %816 = %815.1;
    (%816,)
  };
  %817() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_19798() -> (Tensor[(7, 11, 4), float64],) {
  @func_19796() /* ty=(Tensor[(7, 11, 4), float64],) */
}

def @func_14436() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %818 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %819 = @func_5025() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %820 = %818.0;
  %821 = %819.0;
  (%820, %821)
}

def @func_22187() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) {
  %829 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) {
    %822 = @func_8712() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
    %823 = cast(meta[relay.Constant][33] /* ty=Tensor[(1260), int64] */, dtype="int64") /* ty=Tensor[(1260), int64] */;
    %824 = reshape(%823, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), int64] */;
    %825 = @func_9703(%824) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(1260), int64], Tensor[(14, 10, 9), uint16], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %826 = @func_3658() /* ty=Tensor[(7, 11, 4), float32] */;
    %827 = %822.1;
    %828 = %825.6;
    (%826, %827, %828, meta[relay.Constant][33] /* ty=Tensor[(1260), int64] */)
  };
  %829() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */
}

def @func_11462() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %830 = @func_8503() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) */;
  %831 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %832 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %833 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %834 = @func_11176() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %835 = %830.0;
  %836 = %831.0;
  %837 = %832.0;
  %838 = %833.0;
  %839 = %834.1;
  (%835, %836, %837, %838, %839)
}

def @func_11683(%var_11675: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), float64], Tensor[(160), int8], Tensor[(10, 5, 16), int8], Tensor[(800), int8]) {
  %840 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
  %841 = @func_6338() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */;
  %842 = %841.2;
  %843 = cast(%842, dtype="int8") /* ty=Tensor[(160), int8] */;
  %844 = cast(%var_11675, dtype="int8") /* ty=Tensor[(800), int8] */;
  %845 = reshape(%843, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), int8] */;
  %846 = reshape(%844, newshape=[10, 5, 16]) /* ty=Tensor[(10, 5, 16), int8] */;
  %847 = %840.1;
  %848 = @func_1755(%845, %846) /* ty=Tensor[(10, 5, 16), int8] */;
  (%847, %842, %848, %var_11675)
}

def @func_20376() -> (Tensor[(160), int8],) {
  @func_20374() /* ty=(Tensor[(160), int8],) */
}

def @func_7876() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %849 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %850 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
  %851 = %849.0;
  %852 = %850.3;
  (%851, %852)
}

def @func_23210(%var_23205: Tensor[(12, 6, 15), float32], %var_23206: Tensor[(12, 6, 15), float32], %var_23207: Tensor[(12, 6, 15), bool], %var_23208: Tensor[(108, 2), uint8], %var_23209: uint8) -> (Tensor[(7, 11, 4), int16], Tensor[(12, 6, 15), float64], Tensor[(7, 11, 4), float64], uint8, Tensor[(108, 2), uint8], uint8) {
  %879 = fn (%var_23128: Tensor[(12, 6, 15), float32], %var_23129: Tensor[(12, 6, 15), float32], %var_23166: Tensor[(12, 6, 15), bool], %var_23198: Tensor[(108, 2), uint8], %var_23199: uint8) -> (Tensor[(7, 11, 4), int16], Tensor[(12, 6, 15), float64], Tensor[(7, 11, 4), float64], uint8, Tensor[(108, 2), uint8], uint8) {
    %853 = @func_10921() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %854 = cast(%var_23129, dtype="float32") /* ty=Tensor[(12, 6, 15), float32] */;
    %855 = shape_of(%var_23128, dtype="int32") /* ty=Tensor[(3), int32] */;
    %856 = cast(%var_23128, dtype="float32") /* ty=Tensor[(12, 6, 15), float32] */;
    %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %858 = subtract(%856, %857) /* ty=Tensor[(12, 6, 15), float32] */;
    %859 = cast(%var_23128, dtype="bool") /* ty=Tensor[(12, 6, 15), bool] */;
    %860 = shape_of(%858, dtype="int32") /* ty=Tensor[(3), int32] */;
    %861 = cast(%858, dtype="bool") /* ty=Tensor[(12, 6, 15), bool] */;
    %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %863 = greater_equal(%861, %862) /* ty=Tensor[(12, 6, 15), bool] */;
    %864 = cast(%var_23166, dtype="float32") /* ty=Tensor[(12, 6, 15), float32] */;
    %865 = shape_of(%863, dtype="int32") /* ty=Tensor[(3), int32] */;
    %866 = cast(%863, dtype="float32") /* ty=Tensor[(12, 6, 15), float32] */;
    %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %868 = mod(%866, %867) /* ty=Tensor[(12, 6, 15), float32] */;
    %869 = cast(%868, dtype="float64") /* ty=Tensor[(12, 6, 15), float64] */;
    %870 = cast(%var_23198, dtype="uint8") /* ty=Tensor[(108, 2), uint8] */;
    %871 = cast(%var_23199, dtype="uint8") /* ty=uint8 */;
    %872 = reshape(%870, newshape=[216]) /* ty=Tensor[(216), uint8] */;
    %873 = reshape(%871, newshape=[]) /* ty=uint8 */;
    %874 = @func_9205(%872, %873) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(2496), float32], Tensor[(216), uint8], uint8, Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
    %875 = %853.0;
    %876 = log10(%869) /* ty=Tensor[(12, 6, 15), float64] */;
    %877 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
    %878 = %874.3;
    (%875, %876, %877, %878, %var_23198, %var_23199)
  };
  %879(%var_23205, %var_23206, %var_23207, %var_23208, %var_23209) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(12, 6, 15), float64], Tensor[(7, 11, 4), float64], uint8, Tensor[(108, 2), uint8], uint8) */
}

def @func_9082() -> Tensor[(7, 11, 4), int16] {
  @func_5414() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_11381(%var_11380: int32) -> (Tensor[(7, 11, 4), float32], int32, int32) {
  %886 = fn (%var_11374: int32) -> (Tensor[(7, 11, 4), float32], int32, int32) {
    %880 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %881 = cast(%var_11374, dtype="int32") /* ty=int32 */;
    %882 = reshape(%881, newshape=[]) /* ty=int32 */;
    %883 = @func_9509(%882) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64], int32, Tensor[(420), int32]) */;
    %884 = %880.1;
    %885 = %883.2;
    (%884, %885, %var_11374)
  };
  %886(%var_11380) /* ty=(Tensor[(7, 11, 4), float32], int32, int32) */
}

def @func_21603() -> (Tensor[(7, 11, 4), float32], Tensor[(360), float64], Tensor[(1260), uint16], Tensor[(360), float64], Tensor[(7, 11, 4), float32]) {
  %896 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(360), float64], Tensor[(1260), uint16], Tensor[(360), float64], Tensor[(7, 11, 4), float32]) {
    %887 = cast(meta[relay.Constant][34] /* ty=Tensor[(1260), uint16] */, dtype="uint16") /* ty=Tensor[(1260), uint16] */;
    %888 = cast(meta[relay.Constant][35] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %889 = reshape(%887, newshape=[6, 14, 15]) /* ty=Tensor[(6, 14, 15), uint16] */;
    %890 = reshape(%888, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %891 = @func_20944(%889, %890) /* ty=(Tensor[(6, 14, 15), bool], Tensor[(13, 14, 15), uint16], Tensor[(2, 4, 15), float32], float32, Tensor[(120), float32], Tensor[(360), float64], Tensor[(13, 14, 15), float32]) */;
    %892 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %893 = @func_3735() /* ty=Tensor[(7, 11, 4), float32] */;
    %894 = %891.5;
    %895 = %892.0;
    (%893, %894, meta[relay.Constant][34] /* ty=Tensor[(1260), uint16] */, meta[relay.Constant][35] /* ty=Tensor[(360), float64] */, %895)
  };
  %896() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(360), float64], Tensor[(1260), uint16], Tensor[(360), float64], Tensor[(7, 11, 4), float32]) */
}

def @func_14623() -> (Tensor[(7, 11, 4), float64],) {
  @func_14621() /* ty=(Tensor[(7, 11, 4), float64],) */
}

def @func_3813() -> (Tensor[(7, 11, 4), int16],) {
  %897 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %898 = %897.4;
  (%898,)
}

def @func_22751() -> Tensor[(7, 11, 4), float64] {
  %900 = fn () -> Tensor[(7, 11, 4), float64] {
    %899 = @func_18525() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) */;
    %899.0
  };
  %900() /* ty=Tensor[(7, 11, 4), float64] */
}

def @func_23283() -> (Tensor[(7, 11, 4), int16],) {
  %901 = @func_7498() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %902 = %901.0;
  (%902,)
}

def @func_10922() -> (Tensor[(7, 11, 4), int16],) {
  %905 = fn () -> (Tensor[(7, 11, 4), int16],) {
    %903 = @func_10176() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %904 = %903.1;
    (%904,)
  };
  %905() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_9409() -> (Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8]) {
  %908 = fn () -> (Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8]) {
    %906 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
    %907 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
    (%906, %907)
  };
  %908() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8]) */
}

def @func_8269(%var_8268: Tensor[(11, 7, 7), float32]) -> (Tensor[(11, 7, 7), float32],) {
  %911 = fn (%var_8246: Tensor[(11, 7, 7), float32]) -> (Tensor[(11, 7, 7), float32],) {
    %909 = cast(%var_8246, dtype="float32") /* ty=Tensor[(11, 7, 7), float32] */;
    %910 = sqrt(%909) /* ty=Tensor[(11, 7, 7), float32] */;
    (%910,)
  };
  %911(%var_8268) /* ty=(Tensor[(11, 7, 7), float32],) */
}

def @func_8850(%var_8845: Tensor[(1, 14, 10), float32], %var_8846: Tensor[(1, 14, 10), float32]) -> (Tensor[(?, 14, 10), float32],) {
  %912 = cast(%var_8846, dtype="float32") /* ty=Tensor[(1, 14, 10), float32] */;
  %913 = shape_of(%var_8845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %914 = cast(%var_8845, dtype="float32") /* ty=Tensor[(1, 14, 10), float32] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %916 = floor_divide(%914, %915) /* ty=Tensor[(?, 14, 10), float32] */;
  (%916,)
}

def @func_11571() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %917 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %918 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %919 = %917.0;
  %920 = %918.0;
  (%919, %920)
}

def @func_21806() -> Tensor[(7, 11, 4), int16] {
  @func_21804() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_5090() -> (Tensor[(7, 11, 4), int16],) {
  %921 = @func_1354() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %922 = %921.0;
  (%922,)
}

def @func_13063() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  @func_13061() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */
}

def @func_2658(%var_2649: Tensor[(16, 13, 6), int64], %var_2650: Tensor[(16, 13, 6), int64]) -> Tensor[(16, 13, 6), int64] {
  %923 = cast(%var_2650, dtype="int64") /* ty=Tensor[(16, 13, 6), int64] */;
  %924 = shape_of(%var_2649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %925 = cast(%var_2649, dtype="int64") /* ty=Tensor[(16, 13, 6), int64] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_or(%925, %926) /* ty=Tensor[(16, 13, 6), int64] */
}

def @func_18329() -> (Tensor[(16, 15, 12), float32],) {
  %927 = @func_11289() /* ty=(Tensor[(16, 15, 12), float32],) */;
  %928 = %927.0;
  (%928,)
}

def @func_7804() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  @func_7802() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_595() -> Tensor[(7, 11, 4), int16] {
  %929 = cast(meta[relay.Constant][36] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %930 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 11, 4), int16] */, dtype="int16") /* ty=Tensor[(7, 11, 4), int16] */;
  maximum(%929, %930) /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_678() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %936 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %931 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
    %932 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
    %933 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
    %934 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
    %935 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
    (%931, %932, %933, %934, %935)
  };
  %936() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_8928() -> (Tensor[(1, 1, 4), int8], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) {
  %937 = cast(meta[relay.Constant][38] /* ty=Tensor[(160), int8] */, dtype="int8") /* ty=Tensor[(160), int8] */;
  %938 = cast(meta[relay.Constant][39] /* ty=Tensor[(800), int8] */, dtype="int8") /* ty=Tensor[(800), int8] */;
  %939 = reshape(%937, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), int8] */;
  %940 = reshape(%938, newshape=[10, 5, 16]) /* ty=Tensor[(10, 5, 16), int8] */;
  %941 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
  %942 = @func_1755(%939, %940) /* ty=Tensor[(10, 5, 16), int8] */;
  (%941, %942, meta[relay.Constant][38] /* ty=Tensor[(160), int8] */, meta[relay.Constant][39] /* ty=Tensor[(800), int8] */)
}

def @func_17886() -> (Tensor[(216), uint8],) {
  @func_17884() /* ty=(Tensor[(216), uint8],) */
}

def @func_8000() -> Tensor[(7, 11, 4), uint8] {
  %943 = fn () -> Tensor[(7, 11, 4), uint8] {
    @func_4712() /* ty=Tensor[(7, 11, 4), uint8] */
  };
  %943() /* ty=Tensor[(7, 11, 4), uint8] */
}

def @func_5670() -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  @func_5668() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */
}

def @func_23456() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1248), int64]) {
  %950 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1248), int64]) {
    %944 = @func_22037() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %945 = @func_21931() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %946 = @func_14087() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(16, 13, 6), int64], Tensor[(1248), int64]) */;
    %947 = %944.0;
    %948 = %945.0;
    %949 = %946.2;
    (%947, %948, %949)
  };
  %950() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1248), int64]) */
}

def @func_23537() -> (Tensor[(7, 11, 4), int16],) {
  %951 = @func_13116() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %952 = %951.1;
  (%952,)
}

def @func_21363(%var_21357: bool, %var_21358: Tensor[(336), bool]) -> (Tensor[(14, 10, 9), float32], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) {
  %953 = @func_8318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), float64]) */;
  %954 = %953.1;
  %955 = cast(%954, dtype="float32") /* ty=Tensor[(14, 10, 9), float32] */;
  %956 = cast(%var_21357, dtype="bool") /* ty=bool */;
  %957 = cast(%var_21358, dtype="bool") /* ty=Tensor[(336), bool] */;
  %958 = reshape(%956, newshape=[]) /* ty=bool */;
  %959 = reshape(%957, newshape=[2, 14, 12]) /* ty=Tensor[(2, 14, 12), bool] */;
  %960 = asin(%955) /* ty=Tensor[(14, 10, 9), float32] */;
  %961 = @func_7673(%958, %959) /* ty=Tensor[(2, 14, 12), bool] */;
  (%960, %961, %var_21357, %var_21358)
}

def @func_2194() -> Tensor[(7, 11, 4), float32] {
  %962 = @func_1354() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %962.1
}

def @func_21316(%var_21314: uint8) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216, 1), uint8]) {
  @func_21313(%var_21314) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216, 1), uint8]) */
}

def @func_14183() -> (Tensor[(1, 1, 4), int8],) {
  @func_14181() /* ty=(Tensor[(1, 1, 4), int8],) */
}

def @func_13228() -> (Tensor[(7, 11, 4), int16],) {
  %963 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
  (%963,)
}

def @func_3815() -> (Tensor[(7, 11, 4), int16],) {
  @func_3813() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_20142() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_20140() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_12831() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32]) {
  @func_12829() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32]) */
}

def @func_5516() -> (Tensor[(7, 11, 4), float32],) {
  %964 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  (%964,)
}

def @func_21978() -> (Tensor[(7, 11, 4), float32],) {
  %965 = @func_7876() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %966 = %965.0;
  (%966,)
}

def @func_7498() -> (Tensor[(7, 11, 4), int16],) {
  %967 = @func_6675() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %968 = %967.0;
  (%968,)
}

def @func_17066() -> (Tensor[(7, 11, 4), int16],) {
  @func_17064() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_13714() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  @func_13712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_15708(%var_15706: float32, %var_15707: Tensor[(572), float32]) -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], float32, Tensor[(6, 20), float32], Tensor[(360), float64], Tensor[(7, 11, 4), int16], Tensor[(572), float32]) {
  @func_15704(%var_15706, %var_15707) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], float32, Tensor[(6, 20), float32], Tensor[(360), float64], Tensor[(7, 11, 4), int16], Tensor[(572), float32]) */
}

def @func_6385() -> (Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) {
  @func_6383() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) */
}

def @func_19710(%var_19705: Tensor[(15, 13, 4), int8]) -> Tensor[(15, 13, 4), float64] {
  %969 = @func_19511() /* ty=(Tensor[(1, 1, 4), int8],) */;
  %970 = %969.0;
  %971 = cast(%970, dtype="float64") /* ty=Tensor[(1, 1, 4), float64] */;
  %972 = cast(%var_19705, dtype="float64") /* ty=Tensor[(15, 13, 4), float64] */;
  power(%971, %972) /* ty=Tensor[(15, 13, 4), float64] */
}

def @func_20860() -> (Tensor[(7, 11, 4), float32],) {
  %973 = @func_6383() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) */;
  %974 = %973.0;
  (%974,)
}

def @func_11165(%var_11163: Tensor[(5, 10, 1), uint16], %var_11164: Tensor[(5, 10, 5), uint16]) -> (Tensor[(5, 10, 5), int8], Tensor[(2496), float32], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32]) {
  @func_11161(%var_11163, %var_11164) /* ty=(Tensor[(5, 10, 5), int8], Tensor[(2496), float32], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32]) */
}

def @func_4211() -> (Tensor[(5, 13, 5), float32],) {
  %975 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 13, 5), float32] */;
  %976 = asin(%975) /* ty=Tensor[(5, 13, 5), float32] */;
  (%976,)
}

def @func_21661() -> Tensor[(7, 11, 4), int16] {
  %977 = fn () -> Tensor[(7, 11, 4), int16] {
    @func_595() /* ty=Tensor[(7, 11, 4), int16] */
  };
  %977() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_13898(%var_13897: Tensor[(14, 13, 10), float32]) -> (Tensor[(14, 13, 10), float32],) {
  %980 = fn (%var_13879: Tensor[(14, 13, 10), float32]) -> (Tensor[(14, 13, 10), float32],) {
    %978 = cast(%var_13879, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
    %979 = erf(%978) /* ty=Tensor[(14, 13, 10), float32] */;
    (%979,)
  };
  %980(%var_13897) /* ty=(Tensor[(14, 13, 10), float32],) */
}

def @func_19567(%var_19565: Tensor[(15, 7, 11), float64]) -> (Tensor[(15, 7, 11), float64],) {
  @func_19564(%var_19565) /* ty=(Tensor[(15, 7, 11), float64],) */
}

def @func_4005(%var_4002: float32, %var_4003: Tensor[(2, 4, 15), float32], %var_4004: Tensor[(1, 360), float64]) -> (Tensor[(2, 4, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(1, 360), float64], Tensor[(7, 11, 4), float32]) {
  @func_4000(%var_4002, %var_4003, %var_4004) /* ty=(Tensor[(2, 4, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(1, 360), float64], Tensor[(7, 11, 4), float32]) */
}

def @func_19984() -> Tensor[(7, 11, 4), int16] {
  @func_19982() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_4578() -> Tensor[(7, 11, 4), int16] {
  @func_4576() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_11080() -> Tensor[(7, 11, 4), int16] {
  @func_11078() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_17877() -> (Tensor[(13, 14, 15), float32],) {
  %981 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  (%981,)
}

def @func_7215() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %985 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %982 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %983 = %982.4;
    %984 = @func_4994() /* ty=Tensor[(7, 11, 4), int16] */;
    (%983, %984)
  };
  %985() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_4099() -> (Tensor[(7, 11, 4), int16],) {
  @func_4097() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_12461() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) {
  %986 = @func_10176() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %987 = @func_10823() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %988 = %986.1;
  %989 = %987.1;
  %990 = @func_2618() /* ty=Tensor[(7, 11, 4), float32] */;
  (%988, %989, %990)
}

def @func_5361() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %995 = fn () -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
    %991 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
    %992 = %991.2;
    %993 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
    %994 = @func_3735() /* ty=Tensor[(7, 11, 4), float32] */;
    (%992, %993, %994)
  };
  %995() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_23539() -> (Tensor[(7, 11, 4), int16],) {
  @func_23537() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_8644() -> Tensor[(7, 11, 4), int16] {
  %997 = fn () -> Tensor[(7, 11, 4), int16] {
    %996 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
    %996.0
  };
  %997() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_8318() -> (Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), float64]) {
  %998 = @func_5482() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %999 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
  %1000 = %999.5;
  %1001 = cast(%1000, dtype="float64") /* ty=Tensor[(14, 10, 9), float64] */;
  %1002 = %998.0;
  %1003 = tan(%1001) /* ty=Tensor[(14, 10, 9), float64] */;
  (%1002, %1003)
}

def @func_22507() -> Tensor[(13, 14, 15), float32] {
  @func_22505() /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_9766() -> (Tensor[(13, 14, 15), float32],) {
  @func_9764() /* ty=(Tensor[(13, 14, 15), float32],) */
}

def @func_13968() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  @func_13966() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */
}

def @func_888() -> Tensor[(7, 11, 4), float32] {
  %1007 = fn () -> Tensor[(7, 11, 4), float32] {
    %1004 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1005 = %1004.4;
    %1006 = cast(%1005, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
    asin(%1006) /* ty=Tensor[(7, 11, 4), float32] */
  };
  %1007() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_3356() -> Tensor[(7, 11, 4), int16] {
  %1009 = fn () -> Tensor[(7, 11, 4), int16] {
    %1008 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1008.0
  };
  %1009() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_19440() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float32]) {
  %1014 = fn () -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float32]) {
    %1010 = @func_17284() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), int16]) */;
    %1011 = @func_2177() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1012 = %1010.0;
    %1013 = %1011.1;
    (%1012, %1013)
  };
  %1014() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float32]) */
}

def @func_5026() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1018 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %1015 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1016 = %1015.2;
    %1017 = @func_4461() /* ty=Tensor[(7, 11, 4), int16] */;
    (%1016, %1017)
  };
  %1018() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_20944(%var_20883: Tensor[(6, 14, 15), uint16], %var_20921: Tensor[(360), float64]) -> (Tensor[(6, 14, 15), bool], Tensor[(13, 14, 15), uint16], Tensor[(2, 4, 15), float32], float32, Tensor[(120), float32], Tensor[(360), float64], Tensor[(13, 14, 15), float32]) {
  %1019 = cast(%var_20883, dtype="bool") /* ty=Tensor[(6, 14, 15), bool] */;
  %1020 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(6, 14, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1021 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 14, 15), uint16] */, dtype="bool") /* ty=Tensor[(6, 14, 15), bool] */;
  %1022 = dyn.reshape(%1019, %1020, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1023 = @func_14608() /* ty=(Tensor[(13, 14, 15), uint16], Tensor[(13, 14, 15), float32]) */;
  %1024 = cast(-3.97357f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1025 = cast(meta[relay.Constant][42] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1026 = cast(%var_20921, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1027 = reshape(%1024, newshape=[]) /* ty=float32 */;
  %1028 = reshape(%1025, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), float32] */;
  %1029 = reshape(%1026, newshape=[1, 360]) /* ty=Tensor[(1, 360), float64] */;
  %1030 = @func_4000(%1027, %1028, %1029) /* ty=(Tensor[(2, 4, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(1, 360), float64], Tensor[(7, 11, 4), float32]) */;
  %1031 = greater(%1021, %1022) /* ty=Tensor[(6, 14, 15), bool] */;
  %1032 = %1023.0;
  %1033 = %1030.0;
  %1034 = @func_4659() /* ty=Tensor[(13, 14, 15), float32] */;
  (%1031, %1032, %1033, -3.97357f /* ty=float32 */, meta[relay.Constant][42] /* ty=Tensor[(120), float32] */, %var_20921, %1034)
}

def @func_5414() -> Tensor[(7, 11, 4), int16] {
  %1035 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %1035.2
}

def @func_11796() -> Tensor[(7, 11, 4), float32] {
  @func_11794() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_11932() -> (Tensor[(16, 15, 12), float32], Tensor[(130, 2), float64]) {
  @func_11930() /* ty=(Tensor[(16, 15, 12), float32], Tensor[(130, 2), float64]) */
}

def @func_6677() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  @func_6675() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_19518() -> Tensor[(16, 15, 12), float32] {
  @func_17837() /* ty=Tensor[(16, 15, 12), float32] */
}

def @func_10220(%var_10218: uint8, %var_10219: Tensor[(216), uint8]) -> (Tensor[(13, 14, 15), float32], uint8, uint8, Tensor[(216), uint8]) {
  @func_10216(%var_10218, %var_10219) /* ty=(Tensor[(13, 14, 15), float32], uint8, uint8, Tensor[(216), uint8]) */
}

def @func_11032() -> Tensor[(7, 11, 4), float32] {
  %1036 = fn () -> Tensor[(7, 11, 4), float32] {
    @func_2194() /* ty=Tensor[(7, 11, 4), float32] */
  };
  %1036() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_13116() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1037 = @func_11776() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1038 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  %1039 = %1037.0;
  (%1038, %1039)
}

def @func_18996(%var_18994: int32) -> (Tensor[(7, 11, 4), int16], int32, int32) {
  @func_18993(%var_18994) /* ty=(Tensor[(7, 11, 4), int16], int32, int32) */
}

def @func_11078() -> Tensor[(7, 11, 4), int16] {
  %1040 = @func_7177() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1040.0
}

def @func_8180(%var_8178: Tensor[(5, 14, 6), float32], %var_8179: Tensor[(2496), float32]) -> (Tensor[(5, 14, 6), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(140), float32], Tensor[(140), float32], Tensor[(2496), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1057 = fn (%var_8083: Tensor[(5, 14, 6), float32], %var_8135: Tensor[(2496), float32]) -> (Tensor[(5, 14, 6), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(140), float32], Tensor[(140), float32], Tensor[(2496), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %1041 = cast(%var_8083, dtype="float32") /* ty=Tensor[(5, 14, 6), float32] */;
    %1042 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1043 = cast(meta[relay.Constant][43] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
    %1044 = reshape(%1043, newshape=[140]) /* ty=Tensor[(140), float32] */;
    %1045 = @func_1883(%1044) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
    %1046 = cast(%var_8135, dtype="float32") /* ty=Tensor[(2496), float32] */;
    %1047 = reshape(%1046, newshape=[2496]) /* ty=Tensor[(2496), float32] */;
    %1048 = @func_7045(%1047) /* ty=(Tensor[(140), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(2496), int64]) */;
    %1049 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1050 = asinh(%1041) /* ty=Tensor[(5, 14, 6), float32] */;
    %1051 = %1042.0;
    %1052 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
    %1053 = %1045.2;
    %1054 = %1048.0;
    %1055 = %1049.0;
    %1056 = @func_4994() /* ty=Tensor[(7, 11, 4), int16] */;
    (%1050, %1051, %1052, %1053, meta[relay.Constant][43] /* ty=Tensor[(140), float32] */, %1054, %var_8135, %1055, %1056)
  };
  %1057(%var_8178, %var_8179) /* ty=(Tensor[(5, 14, 6), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(140), float32], Tensor[(140), float32], Tensor[(140), float32], Tensor[(2496), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_2560() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1061 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %1058 = @func_2177() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1059 = %1058.4;
    %1060 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
    (%1059, %1060)
  };
  %1061() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_22582() -> (Tensor[(7, 11, 4), int16], Tensor[(360), float64]) {
  %1062 = @func_21602() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(360), float64], Tensor[(1260), uint16], Tensor[(360), float64], Tensor[(7, 11, 4), float32]) */;
  %1063 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  %1064 = %1062.1;
  (%1063, %1064)
}

def @func_23244() -> (Tensor[(7, 11, 4), float64],) {
  %1067 = fn () -> (Tensor[(7, 11, 4), float64],) {
    %1065 = @func_9134() /* ty=(Tensor[(7, 11, 4), float64],) */;
    %1066 = %1065.0;
    (%1066,)
  };
  %1067() /* ty=(Tensor[(7, 11, 4), float64],) */
}

def @func_20282(%var_20280: Tensor[(1155, 1), float64]) -> (Tensor[(5, 7, ?), uint32], Tensor[(15, 7, 11), float64], Tensor[(1155, 1), float64]) {
  @func_20279(%var_20280) /* ty=(Tensor[(5, 7, ?), uint32], Tensor[(15, 7, 11), float64], Tensor[(1155, 1), float64]) */
}

def @func_9791() -> Tensor[(7, 11, 4), int16] {
  %1069 = fn () -> Tensor[(7, 11, 4), int16] {
    %1068 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %1068.1
  };
  %1069() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_1432() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_12086() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1072 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %1070 = @func_5139() /* ty=Tensor[(7, 11, 4), int16] */;
    %1071 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
    (%1070, %1071)
  };
  %1072() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_13230() -> (Tensor[(7, 11, 4), int16],) {
  @func_13228() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_1237() -> Tensor[(7, 11, 4), float32] {
  %1078 = fn () -> Tensor[(7, 11, 4), float32] {
    %1073 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
    %1074 = cast(meta[relay.Constant][44] /* ty=Tensor[(7, 11, 4), int16] */, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
    %1075 = shape_of(%1073, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1076 = cast(%1073, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
    %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%1076, %1077) /* ty=Tensor[(7, 11, 4), float32] */
  };
  %1078() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_6030() -> (Tensor[(7, 11, 4), float32],) {
  %1080 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %1079 = @func_3658() /* ty=Tensor[(7, 11, 4), float32] */;
    (%1079,)
  };
  %1080() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_9583() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  @func_9581() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_5101() -> Tensor[(7, 11, 4), float64] {
  %1082 = fn () -> Tensor[(7, 11, 4), float64] {
    %1081 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
    %1081.1
  };
  %1082() /* ty=Tensor[(7, 11, 4), float64] */
}

def @func_4661() -> Tensor[(13, 14, 15), float32] {
  @func_4659() /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_2178() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1093 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %1083 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1084 = %1083.0;
    %1085 = cast(%1084, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
    %1086 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %1087 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1088 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
    %1089 = atanh(%1085) /* ty=Tensor[(7, 11, 4), float32] */;
    %1090 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
    %1091 = %1086.1;
    %1092 = %1087.0;
    (%1088, %1089, %1090, %1091, %1092)
  };
  %1093() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_9509(%var_9481: int32) -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64], int32, Tensor[(420), int32]) {
  %1094 = @func_7177() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1095 = cast(%var_9481, dtype="int32") /* ty=int32 */;
  %1096 = cast(meta[relay.Constant][45] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
  %1097 = reshape(%1095, newshape=[]) /* ty=int32 */;
  %1098 = reshape(%1096, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), int32] */;
  %1099 = @func_9293(%1097, %1098) /* ty=(Tensor[(14, 2, 15), int32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64]) */;
  %1100 = %1094.0;
  %1101 = %1099.2;
  (%1100, %1101, %var_9481, meta[relay.Constant][45] /* ty=Tensor[(420), int32] */)
}

def @func_22099() -> (Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16]) {
  @func_22097() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16]) */
}

def @func_4995() -> Tensor[(7, 11, 4), int16] {
  %1103 = fn () -> Tensor[(7, 11, 4), int16] {
    %1102 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1102.0
  };
  %1103() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_14087() -> (Tensor[(7, 11, 4), int16], Tensor[(16, 13, 6), int64], Tensor[(1248), int64]) {
  %1104 = @func_11776() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1105 = cast(meta[relay.Constant][46] /* ty=Tensor[(1248), int64] */, dtype="int64") /* ty=Tensor[(1248), int64] */;
  %1106 = cast(meta[relay.Constant][46] /* ty=Tensor[(1248), int64] */, dtype="int64") /* ty=Tensor[(1248), int64] */;
  %1107 = reshape(%1105, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
  %1108 = reshape(%1106, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
  %1109 = %1104.0;
  %1110 = @func_2658(%1107, %1108) /* ty=Tensor[(16, 13, 6), int64] */;
  (%1109, %1110, meta[relay.Constant][46] /* ty=Tensor[(1248), int64] */)
}

def @func_19652(%var_19651: Tensor[(10, 13, 12), float64]) -> Tensor[(10, 13, 12), float64] {
  %1112 = fn (%var_19632: Tensor[(10, 13, 12), float64]) -> Tensor[(10, 13, 12), float64] {
    %1111 = cast(%var_19632, dtype="float64") /* ty=Tensor[(10, 13, 12), float64] */;
    sin(%1111) /* ty=Tensor[(10, 13, 12), float64] */
  };
  %1112(%var_19651) /* ty=Tensor[(10, 13, 12), float64] */
}

def @func_1732() -> (Tensor[(7, 11, 4), float32],) {
  @func_1730() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_9421() -> (Tensor[(7, 11, 4), int16],) {
  %1113 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1114 = %1113.0;
  (%1114,)
}

def @func_9512(%var_9510: int32) -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64], int32, Tensor[(420), int32]) {
  @func_9509(%var_9510) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64], int32, Tensor[(420), int32]) */
}

def @func_6172() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
  @func_6170() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_22957() -> (Tensor[(7, 11, 4), int16],) {
  @func_22955() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_1706(%var_1657: uint8, %var_1658: Tensor[(8, 3, 9), uint8]) -> (Tensor[(8, 3, 9), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %1115 = cast(%var_1657, dtype="uint8") /* ty=uint8 */;
  %1116 = cast(%var_1658, dtype="uint8") /* ty=Tensor[(8, 3, 9), uint8] */;
  %1117 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1118 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1119 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1120 = maximum(%1115, %1116) /* ty=Tensor[(8, 3, 9), uint8] */;
  %1121 = %1117.1;
  %1122 = %1118.0;
  %1123 = %1119.0;
  (%1120, %1121, %1122, %1123)
}

def @func_18625() -> Tensor[(7, 11, 4), int16] {
  @func_18623() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_17202(%var_17200: Tensor[(11, 8, 9), float64]) -> (Tensor[(11, 8, 9), float64], Tensor[(7, 11, 4), float32], Tensor[(11, 8, 9), float32], Tensor[(7, 11, 4), int16]) {
  @func_17199(%var_17200) /* ty=(Tensor[(11, 8, 9), float64], Tensor[(7, 11, 4), float32], Tensor[(11, 8, 9), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_6535() -> (Tensor[(13, 14, 15), float32],) {
  %1125 = fn () -> (Tensor[(13, 14, 15), float32],) {
    %1124 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
    (%1124,)
  };
  %1125() /* ty=(Tensor[(13, 14, 15), float32],) */
}

def @func_18607() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(16, 14, 9), bool], Tensor[(2016), int16], Tensor[(7, 11, 4), int16]) {
  %1137 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(16, 14, 9), bool], Tensor[(2016), int16], Tensor[(7, 11, 4), int16]) {
    %1126 = cast(meta[relay.Constant][47] /* ty=Tensor[(2016), int16] */, dtype="int16") /* ty=Tensor[(2016), int16] */;
    %1127 = cast(meta[relay.Constant][47] /* ty=Tensor[(2016), int16] */, dtype="int16") /* ty=Tensor[(2016), int16] */;
    %1128 = reshape(%1126, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), int16] */;
    %1129 = reshape(%1127, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), int16] */;
    %1130 = @func_11871(%1128, %1129) /* ty=(Tensor[(16, 14, 9), bool],) */;
    %1131 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
    %1132 = @func_10148() /* ty=Tensor[(7, 11, 4), float32] */;
    %1133 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
    %1134 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
    %1135 = %1130.0;
    %1136 = %1131.1;
    (%1132, %1133, %1134, %1135, meta[relay.Constant][47] /* ty=Tensor[(2016), int16] */, %1136)
  };
  %1137() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(16, 14, 9), bool], Tensor[(2016), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_18943() -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1146 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
    %1138 = @func_17373() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1139 = @func_9764() /* ty=(Tensor[(13, 14, 15), float32],) */;
    %1140 = @func_11321() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1141 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1142 = %1138.0;
    %1143 = %1139.0;
    %1144 = %1140.0;
    %1145 = %1141.0;
    (%1142, %1143, %1144, %1145)
  };
  %1146() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_20494() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1151 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %1147 = @func_3813() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1148 = @func_11776() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1149 = %1147.0;
    %1150 = %1148.0;
    (%1149, %1150)
  };
  %1151() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_11686(%var_11684: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), float64], Tensor[(160), int8], Tensor[(10, 5, 16), int8], Tensor[(800), int8]) {
  @func_11683(%var_11684) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(160), int8], Tensor[(10, 5, 16), int8], Tensor[(800), int8]) */
}

def @func_920() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) {
  %1152 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %1153 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1152, %1153)
}

def @func_16472() -> Tensor[(7, 2, 8), float32] {
  @func_16470() /* ty=Tensor[(7, 2, 8), float32] */
}

def @func_2271() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) {
  %1154 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1155 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
  %1156 = cast(%1155, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %1157 = %1154.0;
  %1158 = sigmoid(%1156) /* ty=Tensor[(7, 11, 4), float64] */;
  (%1157, %1158)
}

def @func_15373() -> (Tensor[(7, 11, 4), int16],) {
  %1161 = fn () -> (Tensor[(7, 11, 4), int16],) {
    %1159 = @func_6861() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1160 = %1159.0;
    (%1160,)
  };
  %1161() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_2037(%var_2018: uint8, %var_2019: Tensor[(216), uint8]) -> (Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) {
  %1162 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1163 = cast(%var_2018, dtype="uint8") /* ty=uint8 */;
  %1164 = cast(%var_2019, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1165 = reshape(%1163, newshape=[]) /* ty=uint8 */;
  %1166 = reshape(%1164, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), uint8] */;
  %1167 = @func_1706(%1165, %1166) /* ty=(Tensor[(8, 3, 9), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %1168 = %1162.0;
  %1169 = %1167.0;
  (%1168, %1169, %var_2018, %var_2019)
}

def @func_8736() -> Tensor[(1, 1, 4), int8] {
  %1170 = cast(meta[relay.Constant][48] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1171 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 1, 4), int8] */, dtype="int8") /* ty=Tensor[(1, 1, 4), int8] */;
  left_shift(%1170, %1171) /* ty=Tensor[(1, 1, 4), int8] */
}

def @func_14348() -> (Tensor[(160), int8],) {
  %1174 = fn () -> (Tensor[(160), int8],) {
    %1172 = @func_12261() /* ty=(Tensor[(160), int8],) */;
    %1173 = %1172.0;
    (%1173,)
  };
  %1174() /* ty=(Tensor[(160), int8],) */
}

def @func_6013() -> (Tensor[(13, 14, 15), float32],) {
  @func_6011() /* ty=(Tensor[(13, 14, 15), float32],) */
}

def @func_12262() -> (Tensor[(160), int8],) {
  %1177 = fn () -> (Tensor[(160), int8],) {
    %1175 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
    %1176 = %1175.4;
    (%1176,)
  };
  %1177() /* ty=(Tensor[(160), int8],) */
}

def @func_18462() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1182 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %1178 = @func_6861() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1179 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1180 = %1178.0;
    %1181 = %1179.0;
    (%1180, %1181)
  };
  %1182() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_17064() -> (Tensor[(7, 11, 4), int16],) {
  %1183 = @func_8660() /* ty=Tensor[(7, 11, 4), int16] */;
  (%1183,)
}

def @func_13691() -> Tensor[(7, 11, 4), int16] {
  @func_13689() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_2619() -> Tensor[(7, 11, 4), float32] {
  %1185 = fn () -> Tensor[(7, 11, 4), float32] {
    %1184 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
    %1184.1
  };
  %1185() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_11290() -> (Tensor[(16, 15, 12), float32],) {
  %1188 = fn () -> (Tensor[(16, 15, 12), float32],) {
    %1186 = cast(meta[relay.Constant][50] /* ty=Tensor[(16, 15, 12), float32] */, dtype="float32") /* ty=Tensor[(16, 15, 12), float32] */;
    %1187 = log2(%1186) /* ty=Tensor[(16, 15, 12), float32] */;
    (%1187,)
  };
  %1188() /* ty=(Tensor[(16, 15, 12), float32],) */
}

def @func_6454() -> (Tensor[(7, 11, 4), float32],) {
  %1191 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %1189 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1190 = %1189.0;
    (%1190,)
  };
  %1191() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_17671() -> Tensor[(7, 11, 4), int16] {
  @func_17669() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_14621() -> (Tensor[(7, 11, 4), float64],) {
  %1192 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
  (%1192,)
}

def @func_10616(%var_10469: Tensor[(13, 11, 4), float32], %var_10509: Tensor[(13, 11, 4), float32], %var_10526: Tensor[(154, 2), int16]) -> (Tensor[(13, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(154, 2), int16], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(160), int8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 11, 4), float32]) {
  %1193 = cast(%var_10469, dtype="float32") /* ty=Tensor[(13, 11, 4), float32] */;
  %1194 = log(%1193) /* ty=Tensor[(13, 11, 4), float32] */;
  %1195 = cast(%var_10509, dtype="int64") /* ty=Tensor[(13, 11, 4), int64] */;
  %1196 = shape_of(%1194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1197 = cast(%1194, dtype="int64") /* ty=Tensor[(13, 11, 4), int64] */;
  %1198 = dyn.reshape(%1195, %1196, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1199 = multiply(%1197, %1198) /* ty=Tensor[(13, 11, 4), int64] */;
  %1200 = cast(%1199, dtype="float32") /* ty=Tensor[(13, 11, 4), float32] */;
  %1201 = cast(%var_10526, dtype="int16") /* ty=Tensor[(154, 2), int16] */;
  %1202 = reshape(%1201, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
  %1203 = @func_1084(%1202) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1204 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1205 = @func_9764() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %1206 = @func_9355() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(160), int8]) */;
  %1207 = @func_6086() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
  %1208 = @func_7498() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1209 = cast(%var_10469, dtype="float32") /* ty=Tensor[(13, 11, 4), float32] */;
  %1210 = rsqrt(%1209) /* ty=Tensor[(13, 11, 4), float32] */;
  %1211 = cast(%1210, dtype="float32") /* ty=Tensor[(13, 11, 4), float32] */;
  %1212 = acosh(%1211) /* ty=Tensor[(13, 11, 4), float32] */;
  %1213 = cast(%1212, dtype="float32") /* ty=Tensor[(13, 11, 4), float32] */;
  %1214 = asinh(%1200) /* ty=Tensor[(13, 11, 4), float32] */;
  %1215 = %1203.3;
  %1216 = %1204.0;
  %1217 = %1205.0;
  %1218 = %1206.1;
  %1219 = %1207.3;
  %1220 = %1208.0;
  %1221 = sigmoid(%1213) /* ty=Tensor[(13, 11, 4), float32] */;
  (%1214, %1215, %var_10526, %1216, %1217, %1218, %1219, %1220, %1221)
}

def @func_11794() -> Tensor[(7, 11, 4), float32] {
  %1222 = @func_6591() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1222.0
}

def @func_18688() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) {
  %1223 = @func_14621() /* ty=(Tensor[(7, 11, 4), float64],) */;
  %1224 = @func_16177() /* ty=Tensor[(7, 11, 4), float32] */;
  %1225 = %1223.0;
  (%1224, %1225)
}

def @func_9036() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  @func_9034() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_11052() -> (Tensor[(7, 11, 4), int16],) {
  %1226 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1227 = %1226.1;
  (%1227,)
}

def @func_5397() -> (Tensor[(13, 14, 15), float32],) {
  %1230 = fn () -> (Tensor[(13, 14, 15), float32],) {
    %1228 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
    %1229 = %1228.2;
    (%1229,)
  };
  %1230() /* ty=(Tensor[(13, 14, 15), float32],) */
}

def @func_1095() -> (Tensor[(7, 11, 4), float32],) {
  %1233 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %1231 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
    %1232 = %1231.1;
    (%1232,)
  };
  %1233() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_18506() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), uint8]) {
  %1238 = fn () -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), uint8]) {
    %1234 = @func_7956() /* ty=(Tensor[(7, 11, 4), uint8],) */;
    %1235 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
    %1236 = %1234.0;
    %1237 = %1235.0;
    (%1236, %1237)
  };
  %1238() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), uint8]) */
}

def @func_7915() -> Tensor[(7, 11, 4), int16] {
  %1239 = @func_7498() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1239.0
}

def @func_22400() -> Tensor[(7, 11, 4), float32] {
  @func_22398() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_13022(%var_13021: float64) -> (Tensor[(6, 15, 12), bool],) {
  %1243 = fn (%var_13015: float64) -> (Tensor[(6, 15, 12), bool],) {
    %1240 = cast(%var_13015, dtype="bool") /* ty=bool */;
    %1241 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 15, 12), float64] */, dtype="bool") /* ty=Tensor[(6, 15, 12), bool] */;
    %1242 = less_equal(%1240, %1241) /* ty=Tensor[(6, 15, 12), bool] */;
    (%1242,)
  };
  %1243(%var_13021) /* ty=(Tensor[(6, 15, 12), bool],) */
}

def @func_12184(%var_12182: Tensor[(11, 16, 10), float64]) -> (Tensor[(11, 16, 10), float64],) {
  @func_12181(%var_12182) /* ty=(Tensor[(11, 16, 10), float64],) */
}

def @func_6340() -> (Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) {
  @func_6338() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */
}

def @func_5440() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1244 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
  %1245 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1246 = %1244.0;
  %1247 = %1245.0;
  (%1246, %1247)
}

def @func_7802() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1248 = @func_3508() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1249 = @func_4097() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1250 = %1248.0;
  %1251 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
  %1252 = %1249.0;
  (%1250, %1251, %1252)
}

def @func_7254() -> (Tensor[(7, 11, 4), uint8],) {
  %1253 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %1254 = %1253.0;
  (%1254,)
}

def @func_12385() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(160), int8], Tensor[(7, 11, 4), float32]) {
  %1263 = fn () -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(160), int8], Tensor[(7, 11, 4), float32]) {
    %1255 = @func_6011() /* ty=(Tensor[(13, 14, 15), float32],) */;
    %1256 = @func_8712() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
    %1257 = @func_9355() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(160), int8]) */;
    %1258 = %1255.0;
    %1259 = @func_2618() /* ty=Tensor[(7, 11, 4), float32] */;
    %1260 = %1256.1;
    %1261 = %1257.1;
    %1262 = @func_3735() /* ty=Tensor[(7, 11, 4), float32] */;
    (%1258, %1259, %1260, %1261, %1262)
  };
  %1263() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(160), int8], Tensor[(7, 11, 4), float32]) */
}

def @func_10041(%var_10014: Tensor[(2496, 1), float32]) -> (Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %1264 = @func_5532() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1265 = cast(%var_10014, dtype="float32") /* ty=Tensor[(2496, 1), float32] */;
  %1266 = cast(%var_10014, dtype="float32") /* ty=Tensor[(2496, 1), float32] */;
  %1267 = reshape(%1265, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1268 = reshape(%1266, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1269 = @func_1869(%1267, %1268) /* ty=(Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1270 = @func_6937() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1271 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %1272 = %1264.0;
  %1273 = %1269.1;
  %1274 = %1270.0;
  %1275 = %1271.1;
  (%1272, %1273, %var_10014, %1274, %1275)
}

def @func_8930() -> (Tensor[(1, 1, 4), int8], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) {
  @func_8928() /* ty=(Tensor[(1, 1, 4), int8], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */
}

def @func_14243() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_14241() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_4246() -> Tensor[(7, 11, 4), int16] {
  @func_3355() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_8661() -> Tensor[(7, 11, 4), int16] {
  %1276 = fn () -> Tensor[(7, 11, 4), int16] {
    @func_5414() /* ty=Tensor[(7, 11, 4), int16] */
  };
  %1276() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_10119() -> Tensor[(7, 11, 4), int16] {
  %1277 = fn () -> Tensor[(7, 11, 4), int16] {
    @func_7915() /* ty=Tensor[(7, 11, 4), int16] */
  };
  %1277() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_18526() -> (Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) {
  %1285 = fn () -> (Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) {
    %1278 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %1279 = cast(meta[relay.Constant][52] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
    %1280 = reshape(%1278, newshape=[]) /* ty=bool */;
    %1281 = reshape(%1279, newshape=[2, 14, 12]) /* ty=Tensor[(2, 14, 12), bool] */;
    %1282 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
    %1283 = @func_5139() /* ty=Tensor[(7, 11, 4), int16] */;
    %1284 = @func_7673(%1280, %1281) /* ty=Tensor[(2, 14, 12), bool] */;
    (%1282, %1283, %1284, True /* ty=bool */, meta[relay.Constant][52] /* ty=Tensor[(336), bool] */)
  };
  %1285() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16], Tensor[(2, 14, 12), bool], bool, Tensor[(336), bool]) */
}

def @func_19463() -> (Tensor[(7, 11, 4), int16],) {
  %1288 = fn () -> (Tensor[(7, 11, 4), int16],) {
    %1286 = @func_14815() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1287 = %1286.4;
    (%1287,)
  };
  %1288() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_19017() -> (Tensor[(7, 11, 4), float32],) {
  @func_19015() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_2810() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) {
  @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */
}

def @func_22398() -> Tensor[(7, 11, 4), float32] {
  %1289 = @func_8712() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
  %1289.1
}

def @func_15972() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8]) {
  @func_15970() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8]) */
}

def @func_6011() -> (Tensor[(13, 14, 15), float32],) {
  %1290 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %1291 = %1290.1;
  (%1291,)
}

def @func_7436() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) {
  @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */
}

def @func_21804() -> Tensor[(7, 11, 4), int16] {
  @func_19611() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_1264() -> Tensor[(13, 14, 15), float32] {
  @func_1262() /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_716() -> Tensor[(7, 11, 4), int16] {
  %1293 = fn () -> Tensor[(7, 11, 4), int16] {
    %1292 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1292.0
  };
  %1293() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_5442() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_5440() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_3422() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_5518() -> (Tensor[(7, 11, 4), float32],) {
  @func_5516() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_14241() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1294 = @func_3735() /* ty=Tensor[(7, 11, 4), float32] */;
  %1295 = @func_3735() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1294, %1295)
}

def @func_17520() -> (Tensor[(7, 11, 4), int16],) {
  %1296 = @func_11078() /* ty=Tensor[(7, 11, 4), int16] */;
  (%1296,)
}

def @func_5668() -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %1297 = @func_3712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1298 = %1297.1;
  %1299 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  (%1298, %1299)
}

def @func_17820(%var_17818: Tensor[(80), uint8], %var_17819: Tensor[(1248), int64]) -> (Tensor[(7, 11, 4), int16], Tensor[(1, 16, 5), bool], uint8, Tensor[(80), uint8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(1248), int64], Tensor[(7, 11, 4), int16], Tensor[(16, 13, 6), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  @func_17816(%var_17818, %var_17819) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(1, 16, 5), bool], uint8, Tensor[(80), uint8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(1248), int64], Tensor[(7, 11, 4), int16], Tensor[(16, 13, 6), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_15769() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64], Tensor[(216), uint8]) {
  %1306 = fn () -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64], Tensor[(216), uint8]) {
    %1300 = @func_6011() /* ty=(Tensor[(13, 14, 15), float32],) */;
    %1301 = cast(meta[relay.Constant][53] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %1302 = reshape(%1301, newshape=[216]) /* ty=Tensor[(216), uint8] */;
    %1303 = @func_5975(%1302) /* ty=(Tensor[(13, 14, 15), float32], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) */;
    %1304 = %1300.0;
    %1305 = %1303.7;
    (%1304, %1305, meta[relay.Constant][53] /* ty=Tensor[(216), uint8] */)
  };
  %1306() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64], Tensor[(216), uint8]) */
}

def @func_13509(%var_13504: float64, %var_13505: Tensor[(13, 10, 1), float64], %var_13506: Tensor[(160), int8], %var_13507: Tensor[(52, 48), float32], %var_13508: Tensor[(52, 48), float32]) -> (Tensor[(13, 14, 15), float32], Tensor[(160), int8], Tensor[(800), int8], Tensor[(13, 14, 15), float32], Tensor[(13, 10, 1), bool], Tensor[(52, 48), uint8]) {
  %1328 = fn (%var_13457: float64, %var_13458: Tensor[(13, 10, 1), float64], %var_13465: Tensor[(160), int8], %var_13472: Tensor[(52, 48), float32], %var_13498: Tensor[(52, 48), float32]) -> (Tensor[(13, 14, 15), float32], Tensor[(160), int8], Tensor[(800), int8], Tensor[(13, 14, 15), float32], Tensor[(13, 10, 1), bool], Tensor[(52, 48), uint8]) {
    %1307 = cast(%var_13465, dtype="int8") /* ty=Tensor[(160), int8] */;
    %1308 = cast(meta[relay.Constant][54] /* ty=Tensor[(800), int8] */, dtype="int8") /* ty=Tensor[(800), int8] */;
    %1309 = reshape(%1307, newshape=[160]) /* ty=Tensor[(160), int8] */;
    %1310 = reshape(%1308, newshape=[800]) /* ty=Tensor[(800), int8] */;
    %1311 = @func_5266(%1309, %1310) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(800), int8], Tensor[(160), int8], Tensor[(800), int8], Tensor[(10, 5, 16), int8], Tensor[(7, 11, 4), float32]) */;
    %1312 = cast(%var_13472, dtype="float32") /* ty=Tensor[(52, 48), float32] */;
    %1313 = reshape(%1312, newshape=[2496, 1]) /* ty=Tensor[(2496, 1), float32] */;
    %1314 = @func_10041(%1313) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float64], Tensor[(2496, 1), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
    %1315 = cast(%var_13457, dtype="float64") /* ty=float64 */;
    %1316 = cast(%var_13458, dtype="float64") /* ty=Tensor[(13, 10, 1), float64] */;
    %1317 = power(%1315, %1316) /* ty=Tensor[(13, 10, 1), float64] */;
    %1318 = cast(%var_13457, dtype="bool") /* ty=bool */;
    %1319 = cast(%1317, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
    %1320 = cast(%var_13498, dtype="uint8") /* ty=Tensor[(52, 48), uint8] */;
    %1321 = shape_of(%var_13472, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1322 = cast(%var_13472, dtype="uint8") /* ty=Tensor[(52, 48), uint8] */;
    %1323 = dyn.reshape(%1320, %1321, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %1324 = %1311.1;
    %1325 = %1314.4;
    %1326 = equal(%1318, %1319) /* ty=Tensor[(13, 10, 1), bool] */;
    %1327 = logical_xor(%1322, %1323) /* ty=Tensor[(52, 48), uint8] */;
    (%1324, %var_13465, meta[relay.Constant][54] /* ty=Tensor[(800), int8] */, %1325, %1326, %1327)
  };
  %1328(%var_13504, %var_13505, %var_13506, %var_13507, %var_13508) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(160), int8], Tensor[(800), int8], Tensor[(13, 14, 15), float32], Tensor[(13, 10, 1), bool], Tensor[(52, 48), uint8]) */
}

def @func_1430() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1329 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
  %1330 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
  (%1329, %1330)
}

def @func_17008() -> (Tensor[(7, 11, 4), int16],) {
  %1333 = fn () -> (Tensor[(7, 11, 4), int16],) {
    %1331 = @func_16130() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %1332 = %1331.2;
    (%1332,)
  };
  %1333() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_4746(%var_4744: Tensor[(14, 10, 9), int64], %var_4745: Tensor[(14, 10, 9), int64]) -> (Tensor[(14, 10, 9), int64],) {
  %1339 = fn (%var_4737: Tensor[(14, 10, 9), int64], %var_4738: Tensor[(14, 10, 9), int64]) -> (Tensor[(14, 10, 9), int64],) {
    %1334 = cast(%var_4738, dtype="int64") /* ty=Tensor[(14, 10, 9), int64] */;
    %1335 = shape_of(%var_4737, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1336 = cast(%var_4737, dtype="int64") /* ty=Tensor[(14, 10, 9), int64] */;
    %1337 = dyn.reshape(%1334, %1335, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1338 = right_shift(%1336, %1337) /* ty=Tensor[(14, 10, 9), int64] */;
    (%1338,)
  };
  %1339(%var_4744, %var_4745) /* ty=(Tensor[(14, 10, 9), int64],) */
}

def @func_2670() -> (Tensor[(7, 11, 4), int16],) {
  @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_17837() -> Tensor[(16, 15, 12), float32] {
  %1340 = @func_11289() /* ty=(Tensor[(16, 15, 12), float32],) */;
  %1340.0
}

def @func_7089() -> Tensor[(7, 11, 4), int16] {
  %1342 = fn () -> Tensor[(7, 11, 4), int16] {
    %1341 = @func_6675() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
    %1341.0
  };
  %1342() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_11464() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  @func_11462() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_597() -> Tensor[(7, 11, 4), int16] {
  @func_595() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_11533() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_11531() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_6862() -> (Tensor[(7, 11, 4), int16],) {
  %1345 = fn () -> (Tensor[(7, 11, 4), int16],) {
    %1343 = @func_5360() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
    %1344 = %1343.1;
    (%1344,)
  };
  %1345() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_5746(%var_5745: Tensor[(8, 6, 16), float32]) -> (Tensor[(8, 6, 16), float32], Tensor[(13, 14, 15), float32]) {
  %1350 = fn (%var_5726: Tensor[(8, 6, 16), float32]) -> (Tensor[(8, 6, 16), float32], Tensor[(13, 14, 15), float32]) {
    %1346 = cast(%var_5726, dtype="float32") /* ty=Tensor[(8, 6, 16), float32] */;
    %1347 = @func_5668() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
    %1348 = log10(%1346) /* ty=Tensor[(8, 6, 16), float32] */;
    %1349 = %1347.1;
    (%1348, %1349)
  };
  %1350(%var_5745) /* ty=(Tensor[(8, 6, 16), float32], Tensor[(13, 14, 15), float32]) */
}

def @func_20140() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1351 = @func_9858() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) */;
  %1352 = @func_16441() /* ty=(int32, Tensor[(7, 11, 4), float32], Tensor[(216), uint8]) */;
  %1353 = %1351.0;
  %1354 = %1352.1;
  (%1353, %1354)
}

def @func_6423() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1355 = @func_5516() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1356 = @func_3255() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1357 = %1355.0;
  %1358 = %1356.1;
  (%1357, %1358)
}

def @func_19564(%var_19558: Tensor[(15, 7, 11), float64]) -> (Tensor[(15, 7, 11), float64],) {
  %1359 = cast(%var_19558, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
  %1360 = cosh(%1359) /* ty=Tensor[(15, 7, 11), float64] */;
  (%1360,)
}

def @func_14071(%var_14069: bool, %var_14070: Tensor[(5, 12, 9), bool]) -> (Tensor[(5, 12, 9), bool], Tensor[(13, 14, 15), float32]) {
  %1365 = fn (%var_14022: bool, %var_14023: Tensor[(5, 12, 9), bool]) -> (Tensor[(5, 12, 9), bool], Tensor[(13, 14, 15), float32]) {
    %1361 = cast(%var_14022, dtype="bool") /* ty=bool */;
    %1362 = cast(%var_14023, dtype="bool") /* ty=Tensor[(5, 12, 9), bool] */;
    %1363 = logical_and(%1361, %1362) /* ty=Tensor[(5, 12, 9), bool] */;
    %1364 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
    (%1363, %1364)
  };
  %1365(%var_14069, %var_14070) /* ty=(Tensor[(5, 12, 9), bool], Tensor[(13, 14, 15), float32]) */
}

def @func_15913() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  @func_15911() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_13642(%var_13640: Tensor[(216), uint8]) -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(216), uint8], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(7, 11, 4), int16]) {
  @func_13639(%var_13640) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(216), uint8], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(7, 11, 4), int16]) */
}

def @func_12181(%var_12177: Tensor[(11, 16, 10), float64]) -> (Tensor[(11, 16, 10), float64],) {
  %1366 = cast(%var_12177, dtype="float64") /* ty=Tensor[(11, 16, 10), float64] */;
  %1367 = acos(%1366) /* ty=Tensor[(11, 16, 10), float64] */;
  (%1367,)
}

def @func_18959() -> Tensor[(7, 11, 4), float32] {
  %1369 = fn () -> Tensor[(7, 11, 4), float32] {
    %1368 = @func_12318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
    %1368.0
  };
  %1369() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_3509() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1373 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
    %1370 = @func_1730() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1371 = %1370.0;
    %1372 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
    (%1371, %1372)
  };
  %1373() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_8854(%var_8852: Tensor[(1, 14, 10), float32], %var_8853: Tensor[(1, 14, 10), float32]) -> (Tensor[(?, 14, 10), float32],) {
  @func_8850(%var_8852, %var_8853) /* ty=(Tensor[(?, 14, 10), float32],) */
}

def @func_12414() -> (Tensor[(7, 11, 4), float32],) {
  %1376 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %1374 = @func_8607() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1375 = %1374.0;
    (%1375,)
  };
  %1376() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_11875(%var_11873: Tensor[(16, 14, 9), int16], %var_11874: Tensor[(16, 14, 9), int16]) -> (Tensor[(16, 14, 9), bool],) {
  @func_11871(%var_11873, %var_11874) /* ty=(Tensor[(16, 14, 9), bool],) */
}

def @func_9423() -> (Tensor[(7, 11, 4), int16],) {
  @func_9421() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_16179() -> Tensor[(7, 11, 4), float32] {
  @func_16177() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_13966() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  %1377 = @func_3813() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1378 = @func_8318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), float64]) */;
  %1379 = @func_5090() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1380 = @func_4492() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %1381 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %1382 = %1377.0;
  %1383 = %1378.0;
  %1384 = %1379.0;
  %1385 = %1380.0;
  %1386 = %1381.0;
  (%1382, %1383, %1384, %1385, %1386)
}

def @func_18077() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(36, 6), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1387 = cast(meta[relay.Constant][55] /* ty=Tensor[(36, 6), uint8] */, dtype="uint8") /* ty=Tensor[(36, 6), uint8] */;
  %1388 = reshape(%1387, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %1389 = @func_13639(%1388) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(216), uint8], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(7, 11, 4), int16]) */;
  %1390 = @func_5440() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1391 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1392 = @func_4994() /* ty=Tensor[(7, 11, 4), int16] */;
  %1393 = %1389.1;
  %1394 = %1390.0;
  %1395 = %1391.0;
  (%1392, %1393, meta[relay.Constant][55] /* ty=Tensor[(36, 6), uint8] */, %1394, %1395)
}

def @func_3557() -> (Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  %1396 = @func_3144() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %1397 = %1396.0;
  %1398 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  (%1397, %1398)
}

def @func_9859() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) {
  %1407 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) {
    %1399 = @func_6086() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
    %1400 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1401 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %1402 = reshape(%1401, newshape=[]) /* ty=int32 */;
    %1403 = @func_9509(%1402) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64], int32, Tensor[(420), int32]) */;
    %1404 = %1399.0;
    %1405 = %1400.0;
    %1406 = %1403.2;
    (%1404, %1405, %1406, -5 /* ty=int32 */)
  };
  %1407() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) */
}

def @func_19982() -> Tensor[(7, 11, 4), int16] {
  %1408 = @func_2668() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1408.0
}

def @func_9907() -> (Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32]) {
  %1409 = @func_4659() /* ty=Tensor[(13, 14, 15), float32] */;
  %1410 = @func_4659() /* ty=Tensor[(13, 14, 15), float32] */;
  (%1409, %1410)
}

def @func_16634() -> (Tensor[(160), int8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1417 = fn () -> (Tensor[(160), int8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %1411 = @func_8928() /* ty=(Tensor[(1, 1, 4), int8], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */;
    %1412 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %1413 = %1411.2;
    %1414 = @func_10715() /* ty=Tensor[(7, 11, 4), int16] */;
    %1415 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
    %1416 = %1412.1;
    (%1413, %1414, %1415, %1416)
  };
  %1417() /* ty=(Tensor[(160), int8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_17284() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), int16]) {
  %1418 = @func_3813() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1419 = @func_7999() /* ty=Tensor[(7, 11, 4), uint8] */;
  %1420 = %1418.0;
  (%1419, %1420)
}

def @func_18783() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) {
  %1424 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) {
    %1421 = @func_9134() /* ty=(Tensor[(7, 11, 4), float64],) */;
    %1422 = @func_4461() /* ty=Tensor[(7, 11, 4), int16] */;
    %1423 = %1421.0;
    (%1422, %1423)
  };
  %1424() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) */
}

def @func_18441() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  @func_18439() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_11007(%var_11006: Tensor[(7, 13, 16), float64]) -> (Tensor[(7, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1433 = fn (%var_10981: Tensor[(7, 13, 16), float64]) -> (Tensor[(7, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
    %1425 = cast(%var_10981, dtype="float64") /* ty=Tensor[(7, 13, 16), float64] */;
    %1426 = @func_8503() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) */;
    %1427 = @func_5482() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1428 = rsqrt(%1425) /* ty=Tensor[(7, 13, 16), float64] */;
    %1429 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
    %1430 = %1426.1;
    %1431 = %1427.0;
    %1432 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
    (%1428, %1429, %1430, %1431, %1432)
  };
  %1433(%var_11006) /* ty=(Tensor[(7, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_15088() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1437 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
    %1434 = @func_8601() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
    %1435 = %1434.2;
    %1436 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
    (%1435, %1436)
  };
  %1437() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_22584() -> (Tensor[(7, 11, 4), int16], Tensor[(360), float64]) {
  @func_22582() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(360), float64]) */
}

def @func_15040() -> (Tensor[(7, 11, 4), float32],) {
  %1438 = @func_3712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1439 = %1438.1;
  (%1439,)
}

def @func_16278(%var_16277: Tensor[(8, 182), float64]) -> (Tensor[(7, 11, 4), float32], Tensor[(1, 1, 4), int8], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 13, 16), float64], Tensor[(8, 182), float64]) {
  %1451 = fn (%var_16271: Tensor[(8, 182), float64]) -> (Tensor[(7, 11, 4), float32], Tensor[(1, 1, 4), int8], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 13, 16), float64], Tensor[(8, 182), float64]) {
    %1440 = @func_13966() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
    %1441 = @func_9408() /* ty=(Tensor[(7, 11, 4), float64], Tensor[(1, 1, 4), int8]) */;
    %1442 = cast(%var_16271, dtype="float64") /* ty=Tensor[(8, 182), float64] */;
    %1443 = reshape(%1442, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), float64] */;
    %1444 = @func_11005(%1443) /* ty=(Tensor[(7, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %1445 = %1440.1;
    %1446 = %1441.1;
    %1447 = @func_8736() /* ty=Tensor[(1, 1, 4), int8] */;
    %1448 = @func_4994() /* ty=Tensor[(7, 11, 4), int16] */;
    %1449 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
    %1450 = %1444.0;
    (%1445, %1446, %1447, %1448, %1449, %1450, %var_16271)
  };
  %1451(%var_16277) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(1, 1, 4), int8], Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 13, 16), float64], Tensor[(8, 182), float64]) */
}

def @func_17522() -> (Tensor[(7, 11, 4), int16],) {
  @func_17520() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_10752() -> (Tensor[(7, 11, 4), int16],) {
  @func_10750() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_17816(%var_17723: Tensor[(80), uint8], %var_17753: Tensor[(1248), int64]) -> (Tensor[(7, 11, 4), int16], Tensor[(1, 16, 5), bool], uint8, Tensor[(80), uint8], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(1248), int64], Tensor[(7, 11, 4), int16], Tensor[(16, 13, 6), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %1452 = @func_17520() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1453 = cast(meta[relay.Constant][56] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1454 = cast(%var_17723, dtype="uint8") /* ty=Tensor[(80), uint8] */;
  %1455 = reshape(%1453, newshape=[]) /* ty=uint8 */;
  %1456 = reshape(%1454, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), uint8] */;
  %1457 = @func_17120(%1455, %1456) /* ty=(Tensor[(1, 16, 5), bool],) */;
  %1458 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1459 = @func_12461() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %1460 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %1461 = cast(%var_17753, dtype="int64") /* ty=Tensor[(1248), int64] */;
  %1462 = cast(%var_17753, dtype="int64") /* ty=Tensor[(1248), int64] */;
  %1463 = reshape(%1461, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
  %1464 = reshape(%1462, newshape=[16, 13, 6]) /* ty=Tensor[(16, 13, 6), int64] */;
  %1465 = @func_2658(%1463, %1464) /* ty=Tensor[(16, 13, 6), int64] */;
  %1466 = cast(%1465, dtype="float64") /* ty=Tensor[(16, 13, 6), float64] */;
  %1467 = @func_1094() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1468 = %1452.0;
  %1469 = %1457.0;
  %1470 = %1458.4;
  %1471 = %1459.0;
  %1472 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  %1473 = %1460.0;
  %1474 = rsqrt(%1466) /* ty=Tensor[(16, 13, 6), float64] */;
  %1475 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  %1476 = %1467.0;
  (%1468, %1469, meta[relay.Constant][56] /* ty=uint8 */, %var_17723, %1470, %1471, %1472, %var_17753, %1473, %1474, %1475, %1476)
}

def @func_18331() -> (Tensor[(16, 15, 12), float32],) {
  @func_18329() /* ty=(Tensor[(16, 15, 12), float32],) */
}

def @func_18090() -> (Tensor[(13, 14, 15), float32],) {
  %1479 = fn () -> (Tensor[(13, 14, 15), float32],) {
    %1477 = @func_2808() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
    %1478 = %1477.2;
    (%1478,)
  };
  %1479() /* ty=(Tensor[(13, 14, 15), float32],) */
}

def @func_19241() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1480 = @func_14815() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1481 = @func_12318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
  %1482 = %1480.0;
  %1483 = %1481.1;
  %1484 = @func_14704() /* ty=Tensor[(7, 11, 4), int16] */;
  (%1482, %1483, %1484)
}

def @func_18865() -> Tensor[(7, 11, 4), int16] {
  %1486 = fn () -> Tensor[(7, 11, 4), int16] {
    %1485 = @func_6170() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
    %1485.1
  };
  %1486() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_21980() -> (Tensor[(7, 11, 4), float32],) {
  @func_21978() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_17124(%var_17122: uint8, %var_17123: Tensor[(1, 16, 5), uint8]) -> (Tensor[(1, 16, 5), bool],) {
  @func_17120(%var_17122, %var_17123) /* ty=(Tensor[(1, 16, 5), bool],) */
}

def @func_3559() -> (Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  @func_3557() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */
}

def @func_3420() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1487 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1488 = %1487.0;
  %1489 = cast(%1488, dtype="int16") /* ty=Tensor[(7, 11, 4), int16] */;
  %1490 = reshape(%1489, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), int16] */;
  %1491 = @func_1084(%1490) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1492 = @func_1730() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1493 = %1491.3;
  %1494 = %1492.0;
  (%1488, %1493, %1494)
}

def @func_5092() -> (Tensor[(7, 11, 4), int16],) {
  @func_5090() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_11176() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1495 = @func_5090() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1496 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1497 = %1495.0;
  %1498 = %1496.0;
  (%1497, %1498)
}

def @func_16374() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  @func_16372() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_4041() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) {
  %1503 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) {
    %1499 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1500 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
    %1501 = %1499.2;
    %1502 = %1500.0;
    (%1501, %1502)
  };
  %1503() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */
}

def @func_7567() -> (Tensor[(14, 10, 9), float64], Tensor[(7, 11, 4), float32]) {
  @func_7565() /* ty=(Tensor[(14, 10, 9), float64], Tensor[(7, 11, 4), float32]) */
}

def @func_5533() -> (Tensor[(7, 11, 4), int16],) {
  %1506 = fn () -> (Tensor[(7, 11, 4), int16],) {
    %1504 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
    %1505 = %1504.4;
    (%1505,)
  };
  %1506() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_12463() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) {
  @func_12461() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_11776() -> (Tensor[(7, 11, 4), int16],) {
  %1507 = @func_3813() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1508 = %1507.0;
  (%1508,)
}

def @func_3736() -> Tensor[(7, 11, 4), float32] {
  %1509 = fn () -> Tensor[(7, 11, 4), float32] {
    @func_3658() /* ty=Tensor[(7, 11, 4), float32] */
  };
  %1509() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_5906() -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
  %1513 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) {
    %1510 = @func_3644() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1511 = %1510.0;
    %1512 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
    (%1511, %1512)
  };
  %1513() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */
}

def @func_14396(%var_14382: Tensor[(312, 8), float32]) -> (Tensor[(7, 11, 4), int16], Tensor[(12, 13, 16), float32], Tensor[(312, 8), float32]) {
  %1514 = @func_7876() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1515 = cast(%var_14382, dtype="float32") /* ty=Tensor[(312, 8), float32] */;
  %1516 = cast(%var_14382, dtype="float32") /* ty=Tensor[(312, 8), float32] */;
  %1517 = reshape(%1515, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1518 = reshape(%1516, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
  %1519 = @func_1869(%1517, %1518) /* ty=(Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1520 = %1514.1;
  %1521 = %1519.0;
  (%1520, %1521, %var_14382)
}

def @func_4640() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) {
  @func_4638() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) */
}

def @func_8738() -> Tensor[(1, 1, 4), int8] {
  @func_8736() /* ty=Tensor[(1, 1, 4), int8] */
}

def @func_21213() -> Tensor[(13, 14, 15), float32] {
  %1522 = fn () -> Tensor[(13, 14, 15), float32] {
    @func_8841() /* ty=Tensor[(13, 14, 15), float32] */
  };
  %1522() /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_4322(%var_4321: Tensor[(5, 13, 4), uint8]) -> (Tensor[(5, 13, 4), uint8],) {
  %1528 = fn (%var_4294: Tensor[(5, 13, 4), uint8]) -> (Tensor[(5, 13, 4), uint8],) {
    %1523 = cast(%var_4294, dtype="uint8") /* ty=Tensor[(5, 13, 4), uint8] */;
    %1524 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(5, 13, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1525 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 13, 4), uint8] */, dtype="uint8") /* ty=Tensor[(5, 13, 4), uint8] */;
    %1526 = dyn.reshape(%1523, %1524, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1527 = logical_xor(%1525, %1526) /* ty=Tensor[(5, 13, 4), uint8] */;
    (%1527,)
  };
  %1528(%var_4321) /* ty=(Tensor[(5, 13, 4), uint8],) */
}

def @func_1872(%var_1870: Tensor[(12, 13, 16), float32], %var_1871: Tensor[(12, 13, 16), float32]) -> (Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1540 = fn (%var_1839: Tensor[(12, 13, 16), float32], %var_1840: Tensor[(12, 13, 16), float32]) -> (Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %1529 = cast(%var_1840, dtype="float32") /* ty=Tensor[(12, 13, 16), float32] */;
    %1530 = shape_of(%var_1839, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1531 = cast(%var_1839, dtype="float32") /* ty=Tensor[(12, 13, 16), float32] */;
    %1532 = dyn.reshape(%1529, %1530, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1533 = cast(%var_1839, dtype="float64") /* ty=Tensor[(12, 13, 16), float64] */;
    %1534 = @func_692() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1535 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1536 = add(%1531, %1532) /* ty=Tensor[(12, 13, 16), float32] */;
    %1537 = acosh(%1533) /* ty=Tensor[(12, 13, 16), float64] */;
    %1538 = %1534.0;
    %1539 = %1535.3;
    (%1536, %1537, %1538, %1539)
  };
  %1540(%var_1870, %var_1871) /* ty=(Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_19243() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  @func_19241() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_1087(%var_1085: Tensor[(7, 11, 4), int16]) -> (Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  @func_1084(%var_1085) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_19103(%var_19033: Tensor[(6, 10, 12), float64]) -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(6, 10, 12), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float64], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) {
  %1541 = @func_17877() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %1542 = @func_11321() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1543 = cast(meta[relay.Constant][58] /* ty=Tensor[(6, 10, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 12), float64] */;
  %1544 = shape_of(%var_19033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1545 = cast(%var_19033, dtype="float64") /* ty=Tensor[(6, 10, 12), float64] */;
  %1546 = dyn.reshape(%1543, %1544, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1547 = floor_mod(%1545, %1546) /* ty=Tensor[(6, 10, 12), float64] */;
  %1548 = cast(%var_19033, dtype="float32") /* ty=Tensor[(6, 10, 12), float32] */;
  %1549 = shape_of(%1547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1550 = cast(%1547, dtype="float32") /* ty=Tensor[(6, 10, 12), float32] */;
  %1551 = dyn.reshape(%1548, %1549, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1552 = cast(meta[relay.Constant][59] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %1553 = reshape(%1552, newshape=[10, 1, 14]) /* ty=Tensor[(10, 1, 14), float32] */;
  %1554 = @func_1194(%1553) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(10, 12, 14), int64], Tensor[(308, 1), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float64], Tensor[(7, 11, 4), float32]) */;
  %1555 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1556 = %1541.0;
  %1557 = %1542.0;
  %1558 = mod(%1550, %1551) /* ty=Tensor[(6, 10, 12), float32] */;
  %1559 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
  %1560 = %1554.5;
  %1561 = %1555.0;
  (%1556, %1557, %1558, %1559, %1560, meta[relay.Constant][59] /* ty=Tensor[(140), float32] */, %1561)
}

def @func_4563(%var_4562: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), float64], Tensor[(7, 11, 4), float32]) {
  %1566 = fn (%var_4516: Tensor[(3, 13, 9), float64]) -> (Tensor[(3, 13, 9), float64], Tensor[(7, 11, 4), float32]) {
    %1562 = cast(%var_4516, dtype="float64") /* ty=Tensor[(3, 13, 9), float64] */;
    %1563 = @func_1730() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1564 = asin(%1562) /* ty=Tensor[(3, 13, 9), float64] */;
    %1565 = %1563.0;
    (%1564, %1565)
  };
  %1566(%var_4562) /* ty=(Tensor[(3, 13, 9), float64], Tensor[(7, 11, 4), float32]) */
}

def @func_20766(%var_20716: Tensor[(780), int8]) -> (Tensor[(13, 14, 15), float32], Tensor[(780), int8], Tensor[(15, 13, 4), float32]) {
  %1567 = @func_9355() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(160), int8]) */;
  %1568 = cast(%var_20716, dtype="int8") /* ty=Tensor[(780), int8] */;
  %1569 = reshape(%1568, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), int8] */;
  %1570 = @func_19710(%1569) /* ty=Tensor[(15, 13, 4), float64] */;
  %1571 = cast(%1570, dtype="float32") /* ty=Tensor[(15, 13, 4), float32] */;
  %1572 = %1567.0;
  %1573 = log(%1571) /* ty=Tensor[(15, 13, 4), float32] */;
  (%1572, %var_20716, %1573)
}

def @func_12613() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  @func_12611() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_6087() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) {
  %1580 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) {
    %1574 = cast(meta[relay.Constant][60] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
    %1575 = reshape(%1574, newshape=[140]) /* ty=Tensor[(140), float32] */;
    %1576 = @func_1883(%1575) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
    %1577 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
    %1578 = %1576.0;
    %1579 = @func_4246() /* ty=Tensor[(7, 11, 4), int16] */;
    (%1577, %1578, meta[relay.Constant][60] /* ty=Tensor[(140), float32] */, %1579)
  };
  %1580() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */
}

def @func_17352() -> Tensor[(7, 11, 4), float64] {
  %1582 = fn () -> Tensor[(7, 11, 4), float64] {
    %1581 = @func_9134() /* ty=(Tensor[(7, 11, 4), float64],) */;
    %1581.0
  };
  %1582() /* ty=Tensor[(7, 11, 4), float64] */
}

def @func_17258() -> (Tensor[(7, 11, 4), int16], Tensor[(216), uint8], Tensor[(7, 11, 4), float32]) {
  %1589 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(216), uint8], Tensor[(7, 11, 4), float32]) {
    %1583 = @func_10750() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1584 = @func_15768() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float64], Tensor[(216), uint8]) */;
    %1585 = @func_13966() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
    %1586 = %1583.0;
    %1587 = %1584.2;
    %1588 = %1585.1;
    (%1586, %1587, %1588)
  };
  %1589() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(216), uint8], Tensor[(7, 11, 4), float32]) */
}

def @func_810() -> Tensor[(13, 14, 15), float32] {
  %1590 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 14, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  sinh(%1590) /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_21304() -> (Tensor[(7, 11, 4), float32],) {
  %1592 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %1591 = @func_20032() /* ty=Tensor[(7, 11, 4), float32] */;
    (%1591,)
  };
  %1592() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_22620() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) {
  @func_22618() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */
}

def @func_5416() -> Tensor[(7, 11, 4), int16] {
  @func_5414() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_17305() -> Tensor[(16, 15, 12), float32] {
  %1593 = @func_11289() /* ty=(Tensor[(16, 15, 12), float32],) */;
  %1593.0
}

def @func_5855() -> (Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(5, 13, 5), float32], Tensor[(130, 2), float64]) {
  %1603 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(5, 13, 5), float32], Tensor[(130, 2), float64]) {
    %1594 = cast(meta[relay.Constant][62] /* ty=Tensor[(130, 2), uint8] */, dtype="uint8") /* ty=Tensor[(130, 2), uint8] */;
    %1595 = reshape(%1594, newshape=[5, 13, 4]) /* ty=Tensor[(5, 13, 4), uint8] */;
    %1596 = @func_4320(%1595) /* ty=(Tensor[(5, 13, 4), uint8],) */;
    %1597 = @func_4211() /* ty=(Tensor[(5, 13, 5), float32],) */;
    %1598 = cast(meta[relay.Constant][62] /* ty=Tensor[(130, 2), uint8] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
    %1599 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
    %1600 = %1596.0;
    %1601 = %1597.0;
    %1602 = acosh(%1598) /* ty=Tensor[(130, 2), float64] */;
    (%1599, %1600, %1601, %1602)
  };
  %1603() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(5, 13, 5), float32], Tensor[(130, 2), float64]) */
}

def @func_1084(%var_1064: Tensor[(7, 11, 4), int16]) -> (Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1604 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %1605 = @func_715() /* ty=Tensor[(7, 11, 4), int16] */;
  %1606 = cast(%var_1064, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
  %1607 = shape_of(%1605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1608 = cast(%1605, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
  %1609 = dyn.reshape(%1606, %1607, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1610 = right_shift(%1608, %1609) /* ty=Tensor[(7, 11, 4), int32] */;
  %1611 = cast(%1610, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %1612 = shape_of(%var_1064, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1613 = cast(%var_1064, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %1614 = dyn.reshape(%1611, %1612, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1615 = %1604.0;
  %1616 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %1617 = power(%1613, %1614) /* ty=Tensor[(7, 11, 4), float32] */;
  %1618 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
  (%1615, %1616, %1617, %1618)
}

def @func_20374() -> (Tensor[(160), int8],) {
  %1619 = @func_9355() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(160), int8]) */;
  %1620 = %1619.1;
  (%1620,)
}

def @func_3713() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %1624 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
    %1621 = @func_2521() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1622 = %1621.0;
    %1623 = @func_887() /* ty=Tensor[(7, 11, 4), float32] */;
    (%1622, %1623)
  };
  %1624() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_19381() -> Tensor[(7, 11, 4), int16] {
  @func_19379() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_16690() -> Tensor[(1, 1, 4), int8] {
  @func_16688() /* ty=Tensor[(1, 1, 4), int8] */
}

def @func_9581() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) {
  %1625 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1626 = @func_2194() /* ty=Tensor[(7, 11, 4), float32] */;
  %1627 = %1625.0;
  (%1626, %1627)
}

def @func_5977(%var_5976: Tensor[(216), uint8]) -> (Tensor[(13, 14, 15), float32], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) {
  %1642 = fn (%var_5936: Tensor[(216), uint8]) -> (Tensor[(13, 14, 15), float32], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) {
    %1628 = cast(%var_5936, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %1629 = reshape(%1628, newshape=[216]) /* ty=Tensor[(216), uint8] */;
    %1630 = @func_2972(%1629) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), int16]) */;
    %1631 = @func_5482() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1632 = @func_2565() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1633 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
    %1634 = @func_2271() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) */;
    %1635 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
    %1636 = %1630.2;
    %1637 = %1631.0;
    %1638 = %1632.0;
    %1639 = %1633.2;
    %1640 = @func_595() /* ty=Tensor[(7, 11, 4), int16] */;
    %1641 = %1634.1;
    (%1635, %1636, %var_5936, %1637, %1638, %1639, %1640, %1641)
  };
  %1642(%var_5976) /* ty=(Tensor[(13, 14, 15), float32], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float64]) */
}

def @func_13061() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) {
  %1643 = @func_3144() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %1644 = @func_5449() /* ty=(Tensor[(7, 11, 4), uint8],) */;
  %1645 = %1643.0;
  %1646 = %1644.0;
  %1647 = @func_1262() /* ty=Tensor[(13, 14, 15), float32] */;
  (%1645, %1646, %1647)
}

def @func_21932() -> (Tensor[(7, 11, 4), float32],) {
  %1649 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %1648 = @func_11031() /* ty=Tensor[(7, 11, 4), float32] */;
    (%1648,)
  };
  %1649() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_1885(%var_1884: Tensor[(140), float32]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) {
  %1655 = fn (%var_1880: Tensor[(140), float32]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) {
    %1650 = cast(%var_1880, dtype="float32") /* ty=Tensor[(140), float32] */;
    %1651 = reshape(%1650, newshape=[10, 1, 14]) /* ty=Tensor[(10, 1, 14), float32] */;
    %1652 = @func_1194(%1651) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(10, 12, 14), int64], Tensor[(308, 1), int16], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), float64], Tensor[(7, 11, 4), float32]) */;
    %1653 = @func_1236() /* ty=Tensor[(7, 11, 4), float32] */;
    %1654 = %1652.6;
    (%1653, %1654, %var_1880)
  };
  %1655(%var_1884) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */
}

def @func_10150() -> Tensor[(7, 11, 4), float32] {
  @func_10148() /* ty=Tensor[(7, 11, 4), float32] */
}

def @func_5266(%var_5227: Tensor[(160), int8], %var_5228: Tensor[(800), int8]) -> (Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(800), int8], Tensor[(160), int8], Tensor[(800), int8], Tensor[(10, 5, 16), int8], Tensor[(7, 11, 4), float32]) {
  %1656 = @func_2177() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1657 = @func_2361() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1658 = cast(meta[relay.Constant][63] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %1659 = reshape(%1658, newshape=[140]) /* ty=Tensor[(140), float32] */;
  %1660 = @func_1883(%1659) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32]) */;
  %1661 = cast(%var_5227, dtype="int8") /* ty=Tensor[(160), int8] */;
  %1662 = cast(%var_5228, dtype="int8") /* ty=Tensor[(800), int8] */;
  %1663 = reshape(%1661, newshape=[16, 10]) /* ty=Tensor[(16, 10), int8] */;
  %1664 = reshape(%1662, newshape=[800]) /* ty=Tensor[(800), int8] */;
  %1665 = @func_4428(%1663, %1664) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(5, 13, 4), uint8], Tensor[(260), uint8], Tensor[(10, 5, 16), int8], Tensor[(16, 10), int8], Tensor[(800), int8]) */;
  %1666 = cast(%var_5227, dtype="int8") /* ty=Tensor[(160), int8] */;
  %1667 = %1665.5;
  %1668 = cast(%1667, dtype="int8") /* ty=Tensor[(800), int8] */;
  %1669 = reshape(%1666, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), int8] */;
  %1670 = reshape(%1668, newshape=[10, 5, 16]) /* ty=Tensor[(10, 5, 16), int8] */;
  %1671 = @func_920() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %1672 = %1656.2;
  %1673 = %1657.0;
  %1674 = %1660.1;
  %1675 = @func_1755(%1669, %1670) /* ty=Tensor[(10, 5, 16), int8] */;
  %1676 = %1671.1;
  (%1672, %1673, %1674, meta[relay.Constant][63] /* ty=Tensor[(140), float32] */, %1667, %var_5227, %var_5228, %1675, %1676)
}

def @func_14738() -> (Tensor[(7, 11, 4), float32],) {
  %1677 = @func_9858() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) */;
  %1678 = %1677.0;
  (%1678,)
}

def @func_17580() -> (Tensor[(7, 11, 4), float64],) {
  %1679 = @func_17351() /* ty=Tensor[(7, 11, 4), float64] */;
  (%1679,)
}

def @func_2521() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1680 = @func_1314() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) */;
  %1681 = @func_2407() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1682 = @func_1465() /* ty=Tensor[(7, 11, 4), int16] */;
  %1683 = %1680.4;
  %1684 = %1681.0;
  (%1682, %1683, %1684)
}

def @func_19906() -> (Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) {
  %1688 = fn () -> (Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) {
    %1685 = @func_14181() /* ty=(Tensor[(1, 1, 4), int8],) */;
    %1686 = %1685.0;
    %1687 = @func_18623() /* ty=Tensor[(7, 11, 4), int16] */;
    (%1686, %1687)
  };
  %1688() /* ty=(Tensor[(1, 1, 4), int8], Tensor[(7, 11, 4), int16]) */
}

def @func_21532(%var_21530: Tensor[(11, 6, 5), float64], %var_21531: Tensor[(11, 6, 5), float64]) -> (Tensor[(11, 6, 5), uint64], Tensor[(7, 11, 4), float32]) {
  %1701 = fn (%var_21502: Tensor[(11, 6, 5), float64], %var_21503: Tensor[(11, 6, 5), float64]) -> (Tensor[(11, 6, 5), uint64], Tensor[(7, 11, 4), float32]) {
    %1689 = cast(%var_21503, dtype="float64") /* ty=Tensor[(11, 6, 5), float64] */;
    %1690 = shape_of(%var_21502, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1691 = cast(%var_21502, dtype="float64") /* ty=Tensor[(11, 6, 5), float64] */;
    %1692 = dyn.reshape(%1689, %1690, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1693 = mod(%1691, %1692) /* ty=Tensor[(11, 6, 5), float64] */;
    %1694 = cast(%1693, dtype="uint64") /* ty=Tensor[(11, 6, 5), uint64] */;
    %1695 = shape_of(%var_21502, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1696 = cast(%var_21502, dtype="uint64") /* ty=Tensor[(11, 6, 5), uint64] */;
    %1697 = dyn.reshape(%1694, %1695, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1698 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %1699 = bitwise_or(%1696, %1697) /* ty=Tensor[(11, 6, 5), uint64] */;
    %1700 = %1698.0;
    (%1699, %1700)
  };
  %1701(%var_21530, %var_21531) /* ty=(Tensor[(11, 6, 5), uint64], Tensor[(7, 11, 4), float32]) */
}

def @func_18993(%var_18979: int32) -> (Tensor[(7, 11, 4), int16], int32, int32) {
  %1702 = cast(%var_18979, dtype="int32") /* ty=int32 */;
  %1703 = reshape(%1702, newshape=[]) /* ty=int32 */;
  %1704 = @func_18736(%1703) /* ty=(Tensor[(7, 11, 4), float32], int32, int32) */;
  %1705 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
  %1706 = %1704.2;
  (%1705, %1706, %var_18979)
}

def @func_1602() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_4462() -> Tensor[(7, 11, 4), int16] {
  %1708 = fn () -> Tensor[(7, 11, 4), int16] {
    %1707 = @func_3712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
    %1707.0
  };
  %1708() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_22618() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float64]) {
  %1709 = @func_15040() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1710 = @func_17580() /* ty=(Tensor[(7, 11, 4), float64],) */;
  %1711 = %1709.0;
  %1712 = %1710.0;
  (%1711, %1712)
}

def @func_17286() -> (Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), int16]) {
  @func_17284() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(7, 11, 4), int16]) */
}

def @func_15293() -> Tensor[(1, 1, 4), int8] {
  %1713 = @func_14181() /* ty=(Tensor[(1, 1, 4), int8],) */;
  %1713.0
}

def @func_16470() -> Tensor[(7, 2, 8), float32] {
  %1714 = cast(meta[relay.Constant][64] /* ty=Tensor[(7, 2, 8), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 8), float32] */;
  sin(%1714) /* ty=Tensor[(7, 2, 8), float32] */
}

def @func_14168() -> Tensor[(7, 11, 4), int16] {
  %1716 = fn () -> Tensor[(7, 11, 4), int16] {
    %1715 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1715.0
  };
  %1716() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_6675() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %1717 = @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1718 = @func_5440() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1719 = %1717.0;
  %1720 = %1718.0;
  (%1719, %1720)
}

def @func_8320() -> (Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), float64]) {
  @func_8318() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), float64]) */
}

def @func_8842() -> Tensor[(13, 14, 15), float32] {
  %1722 = fn () -> Tensor[(13, 14, 15), float32] {
    %1721 = @func_6534() /* ty=(Tensor[(13, 14, 15), float32],) */;
    %1721.0
  };
  %1722() /* ty=Tensor[(13, 14, 15), float32] */
}

def @func_7047(%var_7046: Tensor[(2496), float32]) -> (Tensor[(140), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(2496), int64]) {
  %1744 = fn (%var_6971: Tensor[(2496), float32]) -> (Tensor[(140), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(2496), int64]) {
    %1723 = @func_6086() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(140), float32], Tensor[(7, 11, 4), int16]) */;
    %1724 = cast(%var_6971, dtype="float32") /* ty=Tensor[(2496), float32] */;
    %1725 = cast(%var_6971, dtype="float32") /* ty=Tensor[(2496), float32] */;
    %1726 = reshape(%1724, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
    %1727 = reshape(%1725, newshape=[12, 13, 16]) /* ty=Tensor[(12, 13, 16), float32] */;
    %1728 = @func_1869(%1726, %1727) /* ty=(Tensor[(12, 13, 16), float32], Tensor[(12, 13, 16), float64], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1729 = cast(%var_6971, dtype="float64") /* ty=Tensor[(2496), float64] */;
    %1730 = sin(%1729) /* ty=Tensor[(2496), float64] */;
    %1731 = cast(%var_6971, dtype="int16") /* ty=Tensor[(2496), int16] */;
    %1732 = shape_of(%1730, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1733 = cast(%1730, dtype="int16") /* ty=Tensor[(2496), int16] */;
    %1734 = dyn.reshape(%1731, %1732, newshape=[]) /* ty=Tensor[(?), int16] */;
    %1735 = bitwise_and(%1733, %1734) /* ty=Tensor[(2496), int16] */;
    %1736 = cast(meta[relay.Constant][65] /* ty=Tensor[(2496), int16] */, dtype="int64") /* ty=Tensor[(2496), int64] */;
    %1737 = shape_of(%1735, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1738 = cast(%1735, dtype="int64") /* ty=Tensor[(2496), int64] */;
    %1739 = dyn.reshape(%1736, %1737, newshape=[]) /* ty=Tensor[(?), int64] */;
    %1740 = %1723.2;
    %1741 = @func_4576() /* ty=Tensor[(7, 11, 4), int16] */;
    %1742 = %1728.3;
    %1743 = subtract(%1738, %1739) /* ty=Tensor[(2496), int64] */;
    (%1740, %1741, %1742, %1743)
  };
  %1744(%var_7046) /* ty=(Tensor[(140), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(2496), int64]) */
}

def @func_22601() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %1748 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
    %1745 = @func_21486() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(720), float64], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
    %1746 = @func_2618() /* ty=Tensor[(7, 11, 4), float32] */;
    %1747 = %1745.0;
    (%1746, %1747)
  };
  %1748() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_7256() -> (Tensor[(7, 11, 4), uint8],) {
  @func_7254() /* ty=(Tensor[(7, 11, 4), uint8],) */
}

def @func_1476() -> (Tensor[(7, 11, 4), int16],) {
  @func_1474() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_21705() -> (Tensor[(5, 7, 16), float64],) {
  %1749 = cast(meta[relay.Constant][66] /* ty=Tensor[(5, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 16), float64] */;
  %1750 = asinh(%1749) /* ty=Tensor[(5, 7, 16), float64] */;
  (%1750,)
}

def @func_9034() -> (Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1751 = @func_7498() /* ty=(Tensor[(7, 11, 4), int16],) */;
  %1752 = @func_5396() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %1753 = @func_3026() /* ty=(Tensor[(7, 11, 4), float32],) */;
  %1754 = @func_8601() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
  %1755 = %1751.0;
  %1756 = %1752.0;
  %1757 = %1753.0;
  %1758 = @func_8347() /* ty=Tensor[(7, 11, 4), int16] */;
  %1759 = %1754.1;
  (%1755, %1756, %1757, %1758, %1759)
}

def @func_11178() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  @func_11176() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

def @func_12611() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  %1760 = @func_12461() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
  %1761 = @func_9581() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1762 = %1760.0;
  %1763 = %1761.0;
  (%1762, %1763)
}

def @func_16441() -> (int32, Tensor[(7, 11, 4), float32], Tensor[(216), uint8]) {
  %1764 = @func_9858() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], int32, int32) */;
  %1765 = %1764.2;
  %1766 = cast(%1765, dtype="uint8") /* ty=uint8 */;
  %1767 = cast(meta[relay.Constant][67] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1768 = reshape(%1766, newshape=[]) /* ty=uint8 */;
  %1769 = reshape(%1767, newshape=[8, 3, 9]) /* ty=Tensor[(8, 3, 9), uint8] */;
  %1770 = @func_1706(%1768, %1769) /* ty=(Tensor[(8, 3, 9), uint8], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %1771 = %1770.2;
  (%1765, %1771, meta[relay.Constant][67] /* ty=Tensor[(216), uint8] */)
}

def @func_21633() -> (Tensor[(1, 1, 4), float32], Tensor[(7, 11, 4), uint8]) {
  @func_21631() /* ty=(Tensor[(1, 1, 4), float32], Tensor[(7, 11, 4), uint8]) */
}

def @func_20279(%var_20271: Tensor[(1155, 1), float64]) -> (Tensor[(5, 7, ?), uint32], Tensor[(15, 7, 11), float64], Tensor[(1155, 1), float64]) {
  %1772 = @func_15397() /* ty=(Tensor[(5, 7, 1), float32],) */;
  %1773 = %1772.0;
  %1774 = cast(%1773, dtype="float32") /* ty=Tensor[(5, 7, 1), float32] */;
  %1775 = erf(%1774) /* ty=Tensor[(5, 7, 1), float32] */;
  %1776 = cast(%1773, dtype="uint32") /* ty=Tensor[(5, 7, 1), uint32] */;
  %1777 = shape_of(%1775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1778 = cast(%1775, dtype="uint32") /* ty=Tensor[(5, 7, 1), uint32] */;
  %1779 = dyn.reshape(%1776, %1777, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1780 = cast(%var_20271, dtype="float64") /* ty=Tensor[(1155, 1), float64] */;
  %1781 = reshape(%1780, newshape=[15, 7, 11]) /* ty=Tensor[(15, 7, 11), float64] */;
  %1782 = @func_19564(%1781) /* ty=(Tensor[(15, 7, 11), float64],) */;
  %1783 = bitwise_and(%1778, %1779) /* ty=Tensor[(5, 7, ?), uint32] */;
  %1784 = %1782.0;
  (%1783, %1784, %var_20271)
}

def @func_10340() -> (Tensor[(7, 11, 4), int16],) {
  %1785 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %1786 = %1785.0;
  (%1786,)
}

def @func_2041(%var_2039: uint8, %var_2040: Tensor[(216), uint8]) -> (Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) {
  @func_2037(%var_2039, %var_2040) /* ty=(Tensor[(7, 11, 4), int16], Tensor[(8, 3, 9), uint8], uint8, Tensor[(216), uint8]) */
}

def @func_14650() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) {
  %1791 = fn () -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) {
    %1787 = @func_3144() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
    %1788 = @func_3557() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
    %1789 = %1787.1;
    %1790 = %1788.0;
    (%1789, %1790)
  };
  %1791() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), uint8]) */
}

def @func_4492() -> (Tensor[(7, 11, 4), uint8],) {
  %1792 = @func_3557() /* ty=(Tensor[(7, 11, 4), uint8], Tensor[(13, 14, 15), float32]) */;
  %1793 = %1792.0;
  (%1793,)
}

def @func_7917() -> Tensor[(7, 11, 4), int16] {
  @func_7915() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_12319() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) {
  %1800 = fn () -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) {
    %1794 = @func_3712() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */;
    %1795 = @func_3255() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %1796 = @func_8712() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */;
    %1797 = %1794.1;
    %1798 = %1795.1;
    %1799 = %1796.2;
    (%1797, %1798, %1799)
  };
  %1800() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(1260), int64]) */
}

def @func_19965() -> Tensor[(7, 11, 4), float32] {
  %1801 = @func_14140() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1801.1
}

def @func_15295() -> Tensor[(1, 1, 4), int8] {
  @func_15293() /* ty=Tensor[(1, 1, 4), int8] */
}

def @func_2566() -> (Tensor[(7, 11, 4), float32],) {
  %1804 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %1802 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
    %1803 = %1802.1;
    (%1803,)
  };
  %1804() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_17839() -> Tensor[(16, 15, 12), float32] {
  @func_17837() /* ty=Tensor[(16, 15, 12), float32] */
}

def @func_22097() -> (Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), int16]) {
  %1805 = @func_12727() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1806 = @func_5100() /* ty=Tensor[(7, 11, 4), float64] */;
  %1807 = %1805.1;
  (%1806, %1807)
}

def @func_21404() -> (Tensor[(7, 11, 4), float32],) {
  @func_21402() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_12590() -> (Tensor[(13, 14, 15), float32],) {
  %1810 = fn () -> (Tensor[(13, 14, 15), float32],) {
    %1808 = @func_12461() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32]) */;
    %1809 = %1808.1;
    (%1809,)
  };
  %1810() /* ty=(Tensor[(13, 14, 15), float32],) */
}

def @func_7327() -> (Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), int16]) {
  %1811 = @func_677() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1812 = @func_810() /* ty=Tensor[(13, 14, 15), float32] */;
  %1813 = %1811.2;
  (%1812, %1813)
}

def @func_2975(%var_2973: Tensor[(216), uint8]) -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), int16]) {
  @func_2972(%var_2973) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], uint8, Tensor[(216), uint8], Tensor[(7, 11, 4), int16]) */
}

def @func_11573() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) {
  @func_11571() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), float32]) */
}

def @func_8608() -> (Tensor[(7, 11, 4), float32],) {
  %1816 = fn () -> (Tensor[(7, 11, 4), float32],) {
    %1814 = @func_6192() /* ty=(Tensor[(7, 11, 4), float32],) */;
    %1815 = %1814.0;
    (%1815,)
  };
  %1816() /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_7434() -> (Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) {
  %1817 = @func_4638() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), uint8]) */;
  %1818 = @func_1600() /* ty=(Tensor[(13, 14, 15), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */;
  %1819 = @func_1430() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1820 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
  %1821 = @func_6338() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(10, 5, 16), int8], Tensor[(160), int8], Tensor[(800), int8]) */;
  %1822 = @func_6383() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(14, 10, 9), int64], Tensor[(1260), int64]) */;
  %1823 = %1817.0;
  %1824 = %1818.4;
  %1825 = %1819.1;
  %1826 = %1820.1;
  %1827 = %1821.2;
  %1828 = %1822.1;
  (%1823, %1824, %1825, %1826, %1827, %1828)
}

def @func_9355() -> (Tensor[(13, 14, 15), float32], Tensor[(160), int8]) {
  %1829 = @func_4040() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(13, 14, 15), float32]) */;
  %1830 = @func_7434() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16], Tensor[(160), int8], Tensor[(14, 10, 9), int64]) */;
  %1831 = %1829.1;
  %1832 = %1830.4;
  (%1831, %1832)
}

def @func_14966() -> (Tensor[(13, 14, 15), float32],) {
  %1833 = @func_5905() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(13, 14, 15), float32]) */;
  %1834 = %1833.1;
  (%1834,)
}

def @func_14968() -> (Tensor[(13, 14, 15), float32],) {
  @func_14966() /* ty=(Tensor[(13, 14, 15), float32],) */
}

def @func_18736(%var_18733: int32) -> (Tensor[(7, 11, 4), float32], int32, int32) {
  %1835 = @func_3420() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %1836 = cast(%var_18733, dtype="int32") /* ty=int32 */;
  %1837 = reshape(%1836, newshape=[]) /* ty=int32 */;
  %1838 = @func_11379(%1837) /* ty=(Tensor[(7, 11, 4), float32], int32, int32) */;
  %1839 = %1835.2;
  %1840 = %1838.2;
  (%1839, %1840, %var_18733)
}

def @func_7248() -> Tensor[(7, 11, 4), int16] {
  %1842 = fn () -> Tensor[(7, 11, 4), int16] {
    %1841 = @func_7177() /* ty=(Tensor[(7, 11, 4), int16],) */;
    %1841.0
  };
  %1842() /* ty=Tensor[(7, 11, 4), int16] */
}

def @func_20700() -> (Tensor[(7, 11, 4), int16],) {
  @func_20698() /* ty=(Tensor[(7, 11, 4), int16],) */
}

def @func_10177() -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
  %1847 = fn () -> (Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) {
    %1843 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %1844 = @func_4183() /* ty=(Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), int16]) */;
    %1845 = %1843.1;
    %1846 = %1844.1;
    (%1845, %1846)
  };
  %1847() /* ty=(Tensor[(7, 11, 4), int16], Tensor[(7, 11, 4), int16]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen833/build/output.py", line 7446, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:24:03] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


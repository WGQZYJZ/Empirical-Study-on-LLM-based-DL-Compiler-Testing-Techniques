==========mod==========
#[version = "0.0.5"]
def @func_8119() -> (Tensor[(16, 11, 3), float32],) {
  %0 = @func_5398() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */;
  %1 = %0.1;
  (%1,)
}

def @func_6086(%var_6071: Tensor[(1, 924), float64], %var_6072: Tensor[(1, 832), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64], Tensor[(16, 4, 13), float32], Tensor[(1, 924), float64], Tensor[(1, 832), float32], Tensor[(16, 11, 3), float64]) {
  %2 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %3 = %2.0;
  %4 = cast(%3, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %6 = reshape(%4, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), float32] */;
  %7 = reshape(%5, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %8 = @func_4478(%6, %7) /* ty=(Tensor[(16, 11, 3), bool], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64]) */;
  %9 = @func_5353() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %10 = cast(%var_6071, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
  %11 = cast(%var_6072, dtype="float32") /* ty=Tensor[(1, 832), float32] */;
  %12 = reshape(%10, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %13 = reshape(%11, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %14 = @func_735(%12, %13) /* ty=(Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) */;
  %15 = @func_5699() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %16 = %8.0;
  %17 = %9.0;
  %18 = %14.1;
  %19 = %15.0;
  (%3, %16, meta[relay.Constant][0] /* ty=Tensor[(588), uint8] */, %17, %18, %var_6071, %var_6072, %19)
}

def @func_9719() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) {
  %20 = @func_9281() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %21 = @func_7773() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) */;
  %22 = %20.0;
  %23 = %21.0;
  (%22, %23)
}

def @func_8463(%var_8448: int64, %var_8457: Tensor[(6, 11, 12), float64]) -> (Tensor[(6, 11, 12), float32], Tensor[(16, 11, 3), float32], int64, Tensor[(6, 11, 12), uint16]) {
  %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 12), float32] */;
  %25 = cast(%var_8448, dtype="int64") /* ty=int64 */;
  %26 = reshape(%25, newshape=[]) /* ty=int64 */;
  %27 = @func_6738(%26) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 4, 13), float32], Tensor[(1008), bool]) */;
  %28 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 11, 12), float32] */, dtype="float64") /* ty=Tensor[(6, 11, 12), float64] */;
  %29 = log(%28) /* ty=Tensor[(6, 11, 12), float64] */;
  %30 = cast(%var_8457, dtype="uint16") /* ty=Tensor[(6, 11, 12), uint16] */;
  %31 = shape_of(%29, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%29, dtype="uint16") /* ty=Tensor[(6, 11, 12), uint16] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %34 = sin(%24) /* ty=Tensor[(6, 11, 12), float32] */;
  %35 = %27.0;
  %36 = right_shift(%32, %33) /* ty=Tensor[(6, 11, 12), uint16] */;
  (%34, %35, %var_8448, %36)
}

def @func_9785() -> (Tensor[(16, 11, 3), float64], Tensor[(2, 396), int8], Tensor[(585), float64], int8, Tensor[(72), int8], Tensor[(792), int8], Tensor[(1, 320), bool], Tensor[(924), float64]) {
  %37 = @func_4352() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %39 = cast(meta[relay.Constant][3] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %40 = cast(meta[relay.Constant][4] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
  %41 = cast(meta[relay.Constant][5] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %42 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 320), bool] */, dtype="bool") /* ty=Tensor[(1, 320), bool] */;
  %43 = cast(meta[relay.Constant][7] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %44 = reshape(%38, newshape=[13, 5, 9]) /* ty=Tensor[(13, 5, 9), float64] */;
  %45 = reshape(%39, newshape=[]) /* ty=int8 */;
  %46 = reshape(%40, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %47 = reshape(%41, newshape=[2, 396]) /* ty=Tensor[(2, 396), int8] */;
  %48 = reshape(%42, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %49 = reshape(%43, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %50 = @func_2868(%44, %45, %46, %47, %48, %49) /* ty=(Tensor[(13, 5, 9), bool], Tensor[(72), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64], Tensor[(1, 104), uint8]) */;
  %51 = %37.0;
  %52 = %50.2;
  (%51, %52, meta[relay.Constant][2] /* ty=Tensor[(585), float64] */, meta[relay.Constant][3] /* ty=int8 */, meta[relay.Constant][4] /* ty=Tensor[(72), int8] */, meta[relay.Constant][5] /* ty=Tensor[(792), int8] */, meta[relay.Constant][6] /* ty=Tensor[(1, 320), bool] */, meta[relay.Constant][7] /* ty=Tensor[(924), float64] */)
}

def @func_7773() -> (Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) {
  %53 = @func_7013() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %54 = cast(meta[relay.Constant][8] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %55 = reshape(%54, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
  %56 = @func_2499(%55) /* ty=(Tensor[(15, 2, 9), float32],) */;
  %57 = %53.0;
  %58 = %56.0;
  (%57, %58, meta[relay.Constant][8] /* ty=Tensor[(270), float32] */)
}

def @func_6738(%var_6714: int64) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 4, 13), float32], Tensor[(1008), bool]) {
  %59 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %60 = cast(%var_6714, dtype="int64") /* ty=int64 */;
  %61 = cast(meta[relay.Constant][9] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %62 = reshape(%60, newshape=[]) /* ty=int64 */;
  %63 = reshape(%61, newshape=[9, 14, 8]) /* ty=Tensor[(9, 14, 8), int64] */;
  %64 = @func_3264(%62, %63) /* ty=(Tensor[(9, 14, 8), bool], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) */;
  %65 = cast(meta[relay.Constant][9] /* ty=Tensor[(1008), int64] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %66 = cast(%var_6714, dtype="bool") /* ty=bool */;
  %67 = %59.0;
  %68 = %64.1;
  %69 = greater_equal(%65, %66) /* ty=Tensor[(1008), bool] */;
  (%67, %68, %69)
}

def @func_8781(%var_8769: Tensor[(36, 22), int8], %var_8770: Tensor[(7, 132), float64], %var_8773: Tensor[(1, 832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(320), bool], Tensor[(36, 2), int8], Tensor[(320), bool], Tensor[(16, 11, 3), float64], Tensor[(13, 5, 9), bool], Tensor[(585), float64], int8, Tensor[(36, 22), int8], Tensor[(7, 132), float64], Tensor[(7, 9, 15), float64], Tensor[(1, 832), float32]) {
  %70 = @func_4973() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) */;
  %71 = cast(meta[relay.Constant][10] /* ty=Tensor[(36, 2), int8] */, dtype="int8") /* ty=Tensor[(36, 2), int8] */;
  %72 = cast(meta[relay.Constant][11] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
  %73 = reshape(%71, newshape=[72, 1]) /* ty=Tensor[(72, 1), int8] */;
  %74 = reshape(%72, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %75 = @func_5252(%73, %74) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(320), bool], int8, Tensor[(72, 1), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64]) */;
  %76 = cast(meta[relay.Constant][12] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %77 = cast(meta[relay.Constant][13] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %78 = cast(meta[relay.Constant][10] /* ty=Tensor[(36, 2), int8] */, dtype="int8") /* ty=Tensor[(36, 2), int8] */;
  %79 = cast(%var_8769, dtype="int8") /* ty=Tensor[(36, 22), int8] */;
  %80 = cast(meta[relay.Constant][11] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
  %81 = cast(%var_8770, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %82 = reshape(%76, newshape=[13, 5, 9]) /* ty=Tensor[(13, 5, 9), float64] */;
  %83 = reshape(%77, newshape=[]) /* ty=int8 */;
  %84 = reshape(%78, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %85 = reshape(%79, newshape=[2, 396]) /* ty=Tensor[(2, 396), int8] */;
  %86 = reshape(%80, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %87 = reshape(%81, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %88 = @func_2868(%82, %83, %84, %85, %86, %87) /* ty=(Tensor[(13, 5, 9), bool], Tensor[(72), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64], Tensor[(1, 104), uint8]) */;
  %89 = cast(%var_8770, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %90 = cast(%var_8773, dtype="float32") /* ty=Tensor[(1, 832), float32] */;
  %91 = reshape(%89, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %92 = reshape(%90, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %93 = @func_1135(%91, %92) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %94 = %70.0;
  %95 = %75.1;
  %96 = @func_5805() /* ty=Tensor[(16, 11, 3), float64] */;
  %97 = %88.0;
  %98 = %93.6;
  (%94, %95, meta[relay.Constant][10] /* ty=Tensor[(36, 2), int8] */, meta[relay.Constant][11] /* ty=Tensor[(320), bool] */, %96, %97, meta[relay.Constant][12] /* ty=Tensor[(585), float64] */, meta[relay.Constant][13] /* ty=int8 */, %var_8769, %var_8770, %98, %var_8773)
}

def @func_1569(%var_1539: Tensor[(14, 12, 13), uint8], %var_1540: Tensor[(14, 12, 13), uint8], %var_1559: Tensor[(198), uint32], %var_1560: Tensor[(60), bool], %var_1561: Tensor[(832), float32]) -> (Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) {
  %99 = cast(%var_1540, dtype="uint8") /* ty=Tensor[(14, 12, 13), uint8] */;
  %100 = shape_of(%var_1539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%var_1539, dtype="uint8") /* ty=Tensor[(14, 12, 13), uint8] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %103 = cast(%var_1559, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %104 = cast(%var_1560, dtype="bool") /* ty=Tensor[(60), bool] */;
  %105 = cast(%var_1561, dtype="float32") /* ty=Tensor[(832), float32] */;
  %106 = reshape(%103, newshape=[2, 11, 9]) /* ty=Tensor[(2, 11, 9), uint32] */;
  %107 = reshape(%104, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %108 = reshape(%105, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %109 = @func_1428(%106, %107, %108) /* ty=(Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) */;
  %110 = logical_xor(%101, %102) /* ty=Tensor[(14, 12, 13), uint8] */;
  %111 = %109.3;
  (%110, %111, %var_1559, %var_1560, %var_1561)
}

def @func_7041() -> (Tensor[(16, 11, 3), float64],) {
  %112 = @func_6453() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %113 = %112.0;
  (%113,)
}

def @func_1809(%var_1757: Tensor[(16, 4, 5), bool], %var_1763: Tensor[(924), float64], %var_1764: Tensor[(832), float32], %var_1773: Tensor[(104), int32]) -> (Tensor[(16, 4, 5), bool], Tensor[(7, 1), uint64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) {
  %114 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 4, 5), bool] */, dtype="bool") /* ty=Tensor[(16, 4, 5), bool] */;
  %115 = shape_of(%var_1757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(%var_1757, dtype="bool") /* ty=Tensor[(16, 4, 5), bool] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %118 = cast(%var_1763, dtype="float64") /* ty=Tensor[(924), float64] */;
  %119 = cast(%var_1764, dtype="float32") /* ty=Tensor[(832), float32] */;
  %120 = reshape(%118, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %121 = reshape(%119, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %122 = @func_1135(%120, %121) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %123 = cast(%var_1773, dtype="int32") /* ty=Tensor[(104), int32] */;
  %124 = reshape(%123, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), int32] */;
  %125 = logical_or(%116, %117) /* ty=Tensor[(16, 4, 5), bool] */;
  %126 = %122.0;
  %127 = @func_995(%124) /* ty=Tensor[(13, 2, 4), bool] */;
  (%125, %126, %var_1763, %var_1764, %127, %var_1773)
}

def @func_10658(%var_10652: Tensor[(192), uint16], %var_10653: Tensor[(308), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(2925), int64], Tensor[(192), uint16], Tensor[(308), float32]) {
  %128 = @func_10455() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float32]) */;
  %129 = cast(meta[relay.Constant][15] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %130 = cast(meta[relay.Constant][16] /* ty=Tensor[(2925), int64] */, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %131 = cast(%var_10652, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %132 = cast(%var_10653, dtype="float32") /* ty=Tensor[(308), float32] */;
  %133 = reshape(%129, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %134 = reshape(%130, newshape=[15, 195]) /* ty=Tensor[(15, 195), int64] */;
  %135 = reshape(%131, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %136 = reshape(%132, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %137 = @func_9002(%133, %134, %135, %136) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(588, 14), uint64], Tensor[(8232), uint8], Tensor[(60), bool], Tensor[(8, 104), float32], Tensor[(16, 11, 3), float64], Tensor[(15, 13, 15), float32], Tensor[(15, 195), int64], Tensor[(192), uint16], Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(154, 2), float32], int64, Tensor[(22, 4), float64], Tensor[(2, 480), uint16], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(1, 832), float32], Tensor[(924), float64], Tensor[(8, 198), bool]) */;
  %138 = %128.1;
  %139 = %137.1;
  (%138, %139, meta[relay.Constant][15] /* ty=Tensor[(60), bool] */, meta[relay.Constant][16] /* ty=Tensor[(2925), int64] */, %var_10652, %var_10653)
}

def @func_5033(%var_4982: Tensor[(16, 11, 3), float32], %var_5002: Tensor[(960), uint16], %var_5003: Tensor[(320), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) {
  %140 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %141 = %140.0;
  %142 = cast(%var_4982, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%141, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %146 = cast(%var_5002, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %147 = cast(%var_5003, dtype="bool") /* ty=Tensor[(320), bool] */;
  %148 = cast(meta[relay.Constant][17] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %149 = reshape(%146, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
  %150 = reshape(%147, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %151 = reshape(%148, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %152 = @func_4171(%149, %150, %151) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) */;
  %153 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %154 = power(%144, %145) /* ty=Tensor[(16, 11, 3), float32] */;
  %155 = %152.13;
  %156 = %153.0;
  (%154, %155, %var_5002, %var_5003, meta[relay.Constant][17] /* ty=Tensor[(832), float32] */, %156)
}

def @func_8272(%var_8265: Tensor[(924), float64], %var_8266: Tensor[(416, 2), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(7), uint64], Tensor[(924), float64], Tensor[(416, 2), float32]) {
  %157 = cast(%var_8265, dtype="float64") /* ty=Tensor[(924), float64] */;
  %158 = cast(%var_8266, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
  %159 = reshape(%157, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %160 = reshape(%158, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %161 = @func_1135(%159, %160) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %162 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
  %163 = %161.2;
  (%162, %163, %var_8265, %var_8266)
}

def @func_4530(%var_4511: Tensor[(960), uint16]) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(16, 11, 3), float32]) {
  %164 = cast(meta[relay.Constant][18] /* ty=Tensor[(192), uint16] */, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %165 = cast(%var_4511, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %166 = reshape(%164, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), uint16] */;
  %167 = reshape(%165, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), uint16] */;
  %168 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %169 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
  %170 = @func_1602(%166, %167) /* ty=Tensor[(16, 5, 12), uint16] */;
  %171 = %168.0;
  (%169, %170, meta[relay.Constant][18] /* ty=Tensor[(192), uint16] */, %var_4511, %171)
}

def @func_9900(%var_9879: Tensor[(1890), float32], %var_9882: Tensor[(60), bool], %var_9885: int16) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32], Tensor[(270), float32], Tensor[(1890), float32], Tensor[(60), bool], Tensor[(60), bool], Tensor[(8, 3, 5), float64], int16, Tensor[(120), float64]) {
  %172 = cast(meta[relay.Constant][19] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %173 = cast(%var_9879, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %174 = reshape(%172, newshape=[270, 1]) /* ty=Tensor[(270, 1), float32] */;
  %175 = reshape(%173, newshape=[270, 7]) /* ty=Tensor[(270, 7), float32] */;
  %176 = @func_9599(%174, %175) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(16, 11, 3), float64], Tensor[(270, 7), int32], Tensor[(16, 11, 3), float64]) */;
  %177 = cast(%var_9882, dtype="bool") /* ty=Tensor[(60), bool] */;
  %178 = reshape(%177, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %179 = @func_4307(%178) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) */;
  %180 = cast(%var_9885, dtype="int16") /* ty=int16 */;
  %181 = cast(meta[relay.Constant][20] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %182 = reshape(%180, newshape=[]) /* ty=int16 */;
  %183 = reshape(%181, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %184 = @func_8027(%182, %183) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], int16, Tensor[(1820), uint64], Tensor[(15, 2, 9), float32], Tensor[(270), float32], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) */;
  %185 = @func_6506() /* ty=Tensor[(16, 11, 3), float64] */;
  %186 = %176.0;
  %187 = %179.3;
  %188 = %184.6;
  (%185, %186, meta[relay.Constant][19] /* ty=Tensor[(270), float32] */, %var_9879, %187, %var_9882, %188, %var_9885, meta[relay.Constant][20] /* ty=Tensor[(120), float64] */)
}

def @func_1377(%var_1371: Tensor[(11, 7, 4), float32]) -> Tensor[(11, 7, 4), float32] {
  %189 = cast(%var_1371, dtype="float32") /* ty=Tensor[(11, 7, 4), float32] */;
  atan(%189) /* ty=Tensor[(11, 7, 4), float32] */
}

def @func_4566(%var_4551: Tensor[(60), bool], %var_4555: Tensor[(104), int32]) -> (Tensor[(16, 11, 3), float32], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(416, 2), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32], Tensor[(15, 2, 9), float32], Tensor[(270, 1), float32], Tensor[(60), bool], Tensor[(2184), uint8]) {
  %190 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %191 = cast(meta[relay.Constant][21] /* ty=Tensor[(198), uint32] */, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %192 = cast(%var_4551, dtype="bool") /* ty=Tensor[(60), bool] */;
  %193 = cast(meta[relay.Constant][22] /* ty=Tensor[(416, 2), float32] */, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
  %194 = reshape(%191, newshape=[2, 11, 9]) /* ty=Tensor[(2, 11, 9), uint32] */;
  %195 = reshape(%192, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %196 = reshape(%193, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %197 = @func_1428(%194, %195, %196) /* ty=(Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) */;
  %198 = cast(%var_4555, dtype="int32") /* ty=Tensor[(104), int32] */;
  %199 = reshape(%198, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), int32] */;
  %200 = cast(meta[relay.Constant][23] /* ty=Tensor[(270, 1), float32] */, dtype="float32") /* ty=Tensor[(270, 1), float32] */;
  %201 = reshape(%200, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
  %202 = @func_2499(%201) /* ty=(Tensor[(15, 2, 9), float32],) */;
  %203 = cast(meta[relay.Constant][24] /* ty=Tensor[(2184), uint8] */, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %204 = cast(meta[relay.Constant][24] /* ty=Tensor[(2184), uint8] */, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %205 = cast(meta[relay.Constant][21] /* ty=Tensor[(198), uint32] */, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %206 = cast(%var_4551, dtype="bool") /* ty=Tensor[(60), bool] */;
  %207 = %197.9;
  %208 = cast(%207, dtype="float32") /* ty=Tensor[(832), float32] */;
  %209 = reshape(%203, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %210 = reshape(%204, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %211 = reshape(%205, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %212 = reshape(%206, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %213 = reshape(%208, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %214 = @func_1569(%209, %210, %211, %212, %213) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
  %215 = %190.0;
  %216 = @func_995(%199) /* ty=Tensor[(13, 2, 4), bool] */;
  %217 = %202.0;
  %218 = %214.3;
  (%215, %207, meta[relay.Constant][21] /* ty=Tensor[(198), uint32] */, %var_4551, meta[relay.Constant][22] /* ty=Tensor[(416, 2), float32] */, %216, %var_4555, %217, meta[relay.Constant][23] /* ty=Tensor[(270, 1), float32] */, %218, meta[relay.Constant][24] /* ty=Tensor[(2184), uint8] */)
}

def @func_9599(%var_9548: Tensor[(270, 1), float32], %var_9575: Tensor[(270, 7), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(16, 11, 3), float64], Tensor[(270, 7), int32], Tensor[(16, 11, 3), float64]) {
  %219 = @func_5398() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */;
  %220 = cast(%var_9548, dtype="float32") /* ty=Tensor[(270, 1), float32] */;
  %221 = reshape(%220, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
  %222 = @func_2499(%221) /* ty=(Tensor[(15, 2, 9), float32],) */;
  %223 = cast(%var_9548, dtype="int32") /* ty=Tensor[(270, 1), int32] */;
  %224 = cast(%var_9575, dtype="int32") /* ty=Tensor[(270, 7), int32] */;
  %225 = @func_5353() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %226 = %219.1;
  %227 = %222.0;
  %228 = @func_6506() /* ty=Tensor[(16, 11, 3), float64] */;
  %229 = subtract(%223, %224) /* ty=Tensor[(270, 7), int32] */;
  %230 = %225.0;
  (%226, %227, %228, %229, %230)
}

def @func_10024(%var_9986: Tensor[(4, 12, 1), float64], %var_9987: Tensor[(4, 12, 1), float64], %var_10002: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(4, 12, ?), float64], Tensor[(585), float64], Tensor[(792), int8], Tensor[(924), float64], Tensor[(832), float32], Tensor[(60), bool]) {
  %231 = @func_6436() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */;
  %232 = cast(%var_9987, dtype="float64") /* ty=Tensor[(4, 12, 1), float64] */;
  %233 = shape_of(%var_9986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %234 = cast(%var_9986, dtype="float64") /* ty=Tensor[(4, 12, 1), float64] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %236 = mod(%234, %235) /* ty=Tensor[(4, 12, ?), float64] */;
  %237 = cast(%var_9986, dtype="float64") /* ty=Tensor[(4, 12, 1), float64] */;
  %238 = shape_of(%236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%236, dtype="float64") /* ty=Tensor[(4, 12, ?), float64] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %241 = cast(meta[relay.Constant][25] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %242 = cast(meta[relay.Constant][26] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %243 = cast(%var_10002, dtype="float32") /* ty=Tensor[(832), float32] */;
  %244 = reshape(%241, newshape=[36, 22]) /* ty=Tensor[(36, 22), int8] */;
  %245 = reshape(%242, newshape=[7, 132]) /* ty=Tensor[(7, 132), float64] */;
  %246 = reshape(%243, newshape=[1, 832]) /* ty=Tensor[(1, 832), float32] */;
  %247 = @func_8781(%244, %245, %246) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(320), bool], Tensor[(36, 2), int8], Tensor[(320), bool], Tensor[(16, 11, 3), float64], Tensor[(13, 5, 9), bool], Tensor[(585), float64], int8, Tensor[(36, 22), int8], Tensor[(7, 132), float64], Tensor[(7, 9, 15), float64], Tensor[(1, 832), float32]) */;
  %248 = @func_7645() /* ty=(Tensor[(60), bool],) */;
  %249 = %231.0;
  %250 = floor_divide(%239, %240) /* ty=Tensor[(4, 12, ?), float64] */;
  %251 = %247.6;
  %252 = %248.0;
  (%249, %250, %251, meta[relay.Constant][25] /* ty=Tensor[(792), int8] */, meta[relay.Constant][26] /* ty=Tensor[(924), float64] */, %var_10002, %252)
}

def @func_2930(%var_2902: Tensor[(14, 8, 10), float64], %var_2909: Tensor[(30, 2), bool], %var_2918: Tensor[(120), float64]) -> (Tensor[(14, 8, 10), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(30, 2), bool], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) {
  %253 = cast(%var_2902, dtype="float64") /* ty=Tensor[(14, 8, 10), float64] */;
  %254 = cast(meta[relay.Constant][27] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %255 = cast(%var_2909, dtype="bool") /* ty=Tensor[(30, 2), bool] */;
  %256 = reshape(%254, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
  %257 = reshape(%255, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
  %258 = @func_958(%256, %257) /* ty=(Tensor[(3, 2, 10), bool],) */;
  %259 = cast(%var_2918, dtype="float64") /* ty=Tensor[(120), float64] */;
  %260 = cast(%var_2918, dtype="float64") /* ty=Tensor[(120), float64] */;
  %261 = reshape(%259, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
  %262 = reshape(%260, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
  %263 = @func_1655(%261, %262) /* ty=(Tensor[(8, 3, 5), float64], Tensor[(8, 3, 5), float32]) */;
  %264 = log2(%253) /* ty=Tensor[(14, 8, 10), float64] */;
  %265 = %258.0;
  %266 = %263.0;
  (%264, %265, meta[relay.Constant][27] /* ty=Tensor[(30), bool] */, %var_2909, %266, %var_2918)
}

def @func_8646(%var_8636: Tensor[(960), uint16], %var_8637: Tensor[(104), int32]) -> (Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(104), int32]) {
  %267 = @func_8119() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %268 = %267.0;
  %269 = cast(%268, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
  %270 = @func_4973() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) */;
  %271 = cast(%var_8636, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %272 = cast(%var_8637, dtype="int32") /* ty=Tensor[(104), int32] */;
  %273 = reshape(%271, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %274 = reshape(%272, newshape=[1, 104]) /* ty=Tensor[(1, 104), int32] */;
  %275 = @func_7624(%273, %274) /* ty=(Tensor[(60), bool], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(13, 2, 4), bool], Tensor[(1, 104), int32]) */;
  %276 = sin(%269) /* ty=Tensor[(16, 11, 3), float64] */;
  %277 = %270.2;
  %278 = %275.1;
  (%276, %277, %278, %var_8636, %var_8637)
}

def @func_9002(%var_8846: Tensor[(60), bool], %var_8881: Tensor[(15, 195), int64], %var_8882: Tensor[(192), uint16], %var_8939: Tensor[(154, 2), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(588, 14), uint64], Tensor[(8232), uint8], Tensor[(60), bool], Tensor[(8, 104), float32], Tensor[(16, 11, 3), float64], Tensor[(15, 13, 15), float32], Tensor[(15, 195), int64], Tensor[(192), uint16], Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(154, 2), float32], int64, Tensor[(22, 4), float64], Tensor[(2, 480), uint16], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(1, 832), float32], Tensor[(924), float64], Tensor[(8, 198), bool]) {
  %279 = @func_6436() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */;
  %280 = cast(meta[relay.Constant][28] /* ty=Tensor[(8232), uint8] */, dtype="uint8") /* ty=Tensor[(8232), uint8] */;
  %281 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 198), uint32] */, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
  %282 = cast(%var_8846, dtype="bool") /* ty=Tensor[(60), bool] */;
  %283 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 104), float32] */, dtype="float32") /* ty=Tensor[(8, 104), float32] */;
  %284 = reshape(%280, newshape=[588, 14]) /* ty=Tensor[(588, 14), uint8] */;
  %285 = reshape(%281, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %286 = reshape(%282, newshape=[60, 1]) /* ty=Tensor[(60, 1), bool] */;
  %287 = reshape(%283, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %288 = @func_6917(%284, %285, %286, %287) /* ty=(Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60, 1), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(588, 14), float64]) */;
  %289 = cast(%var_8881, dtype="int64") /* ty=Tensor[(15, 195), int64] */;
  %290 = cast(%var_8882, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %291 = reshape(%289, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), int64] */;
  %292 = reshape(%290, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %293 = @func_2616(%291, %292) /* ty=(Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(15, 13, 15), int16], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(15, 13, 15), float32]) */;
  %294 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %295 = @func_8576() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) */;
  %296 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %297 = cast(%var_8939, dtype="float32") /* ty=Tensor[(154, 2), float32] */;
  %298 = reshape(%297, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
  %299 = cast(meta[relay.Constant][31] /* ty=Tensor[(22, 4), float64] */, dtype="float64") /* ty=Tensor[(22, 4), float64] */;
  %300 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 480), uint16] */, dtype="uint16") /* ty=Tensor[(2, 480), uint16] */;
  %301 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 104), float32] */, dtype="float32") /* ty=Tensor[(8, 104), float32] */;
  %302 = reshape(%299, newshape=[11, 2, 4]) /* ty=Tensor[(11, 2, 4), float64] */;
  %303 = reshape(%300, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %304 = reshape(%301, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %305 = @func_4584(%302, %303, %304) /* ty=(Tensor[(11, 2, 4), float64], Tensor[(11, 2, 4), float64], int64, Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32]) */;
  %306 = cast(meta[relay.Constant][33] /* ty=Tensor[(2184), uint8] */, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %307 = cast(meta[relay.Constant][33] /* ty=Tensor[(2184), uint8] */, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %308 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 198), uint32] */, dtype="float64") /* ty=Tensor[(1, 198), float64] */;
  %309 = erf(%308) /* ty=Tensor[(1, 198), float64] */;
  %310 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 198), uint32] */, dtype="uint64") /* ty=Tensor[(1, 198), uint64] */;
  %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(2), int32] */;
  %312 = cast(%309, dtype="uint64") /* ty=Tensor[(1, 198), uint64] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %314 = multiply(%312, %313) /* ty=Tensor[(?, 198), uint64] */;
  %315 = cast(%314, dtype="float32") /* ty=Tensor[(?, 198), float32] */;
  %316 = asin(%315) /* ty=Tensor[(?, 198), float32] */;
  %317 = cast(%316, dtype="uint32") /* ty=Tensor[(?, 198), uint32] */;
  %318 = cast(%var_8846, dtype="bool") /* ty=Tensor[(60), bool] */;
  %319 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 104), float32] */, dtype="float32") /* ty=Tensor[(8, 104), float32] */;
  %320 = reshape(%306, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %321 = reshape(%307, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %322 = reshape(%317, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %323 = reshape(%318, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %324 = reshape(%319, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %325 = @func_1569(%320, %321, %322, %323, %324) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
  %326 = cast(meta[relay.Constant][34] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %327 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 104), float32] */, dtype="float32") /* ty=Tensor[(8, 104), float32] */;
  %328 = reshape(%326, newshape=[1, 924]) /* ty=Tensor[(1, 924), float64] */;
  %329 = reshape(%327, newshape=[1, 832]) /* ty=Tensor[(1, 832), float32] */;
  %330 = @func_6086(%328, %329) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64], Tensor[(16, 4, 13), float32], Tensor[(1, 924), float64], Tensor[(1, 832), float32], Tensor[(16, 11, 3), float64]) */;
  %331 = cast(%316, dtype="bool") /* ty=Tensor[(?, 198), bool] */;
  %332 = cast(meta[relay.Constant][35] /* ty=Tensor[(8, 198), float32] */, dtype="bool") /* ty=Tensor[(8, 198), bool] */;
  %333 = %279.1;
  %334 = %288.0;
  %335 = @func_6506() /* ty=Tensor[(16, 11, 3), float64] */;
  %336 = %293.9;
  %337 = %294.0;
  %338 = %295.0;
  %339 = %296.0;
  %340 = @func_1377(%298) /* ty=Tensor[(11, 7, 4), float32] */;
  %341 = %305.2;
  %342 = %325.4;
  %343 = %330.6;
  %344 = logical_or(%331, %332) /* ty=Tensor[(8, 198), bool] */;
  (%333, %334, meta[relay.Constant][28] /* ty=Tensor[(8232), uint8] */, %var_8846, meta[relay.Constant][30] /* ty=Tensor[(8, 104), float32] */, %335, %336, %var_8881, %var_8882, %337, %338, %339, %340, %var_8939, %341, meta[relay.Constant][31] /* ty=Tensor[(22, 4), float64] */, meta[relay.Constant][32] /* ty=Tensor[(2, 480), uint16] */, %342, meta[relay.Constant][33] /* ty=Tensor[(2184), uint8] */, %343, meta[relay.Constant][34] /* ty=Tensor[(924), float64] */, %344)
}

def @func_4084() -> Tensor[(16, 11, 3), float64] {
  %345 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %345.1
}

def @func_6453() -> (Tensor[(16, 11, 3), float64],) {
  %346 = @func_5398() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */;
  %347 = %346.0;
  (%347,)
}

def @func_8104(%var_8065: Tensor[(924), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(104, 8), float32], Tensor[(945), uint16]) {
  %348 = cast(%var_8065, dtype="float64") /* ty=Tensor[(924), float64] */;
  %349 = cast(meta[relay.Constant][36] /* ty=Tensor[(104, 8), float32] */, dtype="float32") /* ty=Tensor[(104, 8), float32] */;
  %350 = cast(meta[relay.Constant][37] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %351 = reshape(%348, newshape=[924, 1]) /* ty=Tensor[(924, 1), float64] */;
  %352 = reshape(%349, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %353 = reshape(%350, newshape=[7, 9, 15]) /* ty=Tensor[(7, 9, 15), float64] */;
  %354 = @func_7376(%351, %352, %353) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(924, 1), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(7, 9, 15), uint32]) */;
  %355 = cast(meta[relay.Constant][38] /* ty=Tensor[(945), float64] */, dtype="uint16") /* ty=Tensor[(945), uint16] */;
  %356 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(945), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %357 = cast(meta[relay.Constant][37] /* ty=Tensor[(945), float64] */, dtype="uint16") /* ty=Tensor[(945), uint16] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %359 = @func_5805() /* ty=Tensor[(16, 11, 3), float64] */;
  %360 = %354.2;
  %361 = multiply(%357, %358) /* ty=Tensor[(945), uint16] */;
  (%359, %360, %var_8065, meta[relay.Constant][36] /* ty=Tensor[(104, 8), float32] */, %361)
}

def @func_9844(%var_9797: Tensor[(9, 13, 8), uint32], %var_9822: Tensor[(9, 13, 8), uint16]) -> (Tensor[(9, 13, 8), bool], Tensor[(16, 11, 3), float32], Tensor[(9, 13, 8), int32]) {
  %362 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 13, 8), uint32] */, dtype="bool") /* ty=Tensor[(9, 13, 8), bool] */;
  %363 = shape_of(%var_9797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%var_9797, dtype="bool") /* ty=Tensor[(9, 13, 8), bool] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %366 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %367 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 13, 8), uint32] */, dtype="uint16") /* ty=Tensor[(9, 13, 8), uint16] */;
  %368 = shape_of(%var_9797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%var_9797, dtype="uint16") /* ty=Tensor[(9, 13, 8), uint16] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %371 = maximum(%369, %370) /* ty=Tensor[(9, 13, 8), uint16] */;
  %372 = cast(%var_9822, dtype="int32") /* ty=Tensor[(9, 13, 8), int32] */;
  %373 = shape_of(%371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %374 = cast(%371, dtype="int32") /* ty=Tensor[(9, 13, 8), int32] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %376 = greater(%364, %365) /* ty=Tensor[(9, 13, 8), bool] */;
  %377 = %366.0;
  %378 = minimum(%374, %375) /* ty=Tensor[(9, 13, 8), int32] */;
  (%376, %377, %378)
}

def @func_3941() -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) {
  %379 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 11, 3), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %380 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 11, 3), float32] */, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
  %381 = atan(%379) /* ty=Tensor[(16, 11, 3), float32] */;
  %382 = cos(%380) /* ty=Tensor[(16, 11, 3), float64] */;
  (%381, %382)
}

def @func_735(%var_663: Tensor[(14, 11, 6), float64], %var_728: Tensor[(832), float32]) -> (Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) {
  %383 = cast(%var_663, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
  %384 = rsqrt(%383) /* ty=Tensor[(14, 11, 6), float64] */;
  %385 = cast(%384, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
  %386 = acos(%385) /* ty=Tensor[(14, 11, 6), float64] */;
  %387 = cast(%var_663, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %388 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%386, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %391 = cast(%var_728, dtype="float32") /* ty=Tensor[(832), float32] */;
  %392 = reshape(%391, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float32] */;
  %393 = @func_303(%392) /* ty=(Tensor[(16, 4, 13), float32], Tensor[(16, 4, 13), float64]) */;
  %394 = divide(%389, %390) /* ty=Tensor[(14, 11, 6), float32] */;
  %395 = %393.0;
  (%394, %395, %var_728)
}

def @func_5252(%var_5239: Tensor[(72, 1), int8], %var_5241: Tensor[(320), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(320), bool], int8, Tensor[(72, 1), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64]) {
  %396 = cast(meta[relay.Constant][41] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %397 = cast(%var_5239, dtype="int8") /* ty=Tensor[(72, 1), int8] */;
  %398 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 396), int8] */, dtype="int8") /* ty=Tensor[(2, 396), int8] */;
  %399 = cast(%var_5241, dtype="bool") /* ty=Tensor[(320), bool] */;
  %400 = cast(meta[relay.Constant][43] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %401 = reshape(%396, newshape=[]) /* ty=int8 */;
  %402 = reshape(%397, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), int8] */;
  %403 = reshape(%398, newshape=[12, 11, 6]) /* ty=Tensor[(12, 11, 6), int8] */;
  %404 = reshape(%399, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %405 = reshape(%400, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %406 = @func_2391(%401, %402, %403, %404, %405) /* ty=(Tensor[(12, 1, 6), int8], Tensor[(12, 11, 6), bool], Tensor[(924), float64], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(1, 104), int32]) */;
  %407 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
  %408 = %406.3;
  (%407, %408, meta[relay.Constant][41] /* ty=int8 */, %var_5239, meta[relay.Constant][42] /* ty=Tensor[(2, 396), int8] */, %var_5241, meta[relay.Constant][43] /* ty=Tensor[(924), float64] */)
}

def @func_7712(%var_7693: Tensor[(72), int8]) -> (Tensor[(16, 11, 3), float32], Tensor[(320), bool], Tensor[(72), int8], Tensor[(320), bool]) {
  %409 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %410 = cast(%var_7693, dtype="int8") /* ty=Tensor[(72), int8] */;
  %411 = cast(meta[relay.Constant][44] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
  %412 = reshape(%410, newshape=[72, 1]) /* ty=Tensor[(72, 1), int8] */;
  %413 = reshape(%411, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %414 = @func_5252(%412, %413) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(320), bool], int8, Tensor[(72, 1), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64]) */;
  %415 = %409.0;
  %416 = %414.5;
  (%415, %416, %var_7693, meta[relay.Constant][44] /* ty=Tensor[(320), bool] */)
}

def @func_10833() -> (Tensor[(16, 11, 3), float32], Tensor[(9, 8, 9), uint64]) {
  %417 = @func_9366() /* ty=(Tensor[(9, 8, 9), uint64],) */;
  %418 = @func_5598() /* ty=Tensor[(16, 11, 3), float32] */;
  %419 = %417.0;
  (%418, %419)
}

def @func_4205() -> Tensor[(16, 11, 3), float64] {
  %420 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %420.1
}

def @func_1655(%var_1641: Tensor[(8, 3, 5), float64], %var_1645: Tensor[(8, 3, 5), float64]) -> (Tensor[(8, 3, 5), float64], Tensor[(8, 3, 5), float32]) {
  %421 = cast(%var_1645, dtype="float64") /* ty=Tensor[(8, 3, 5), float64] */;
  %422 = shape_of(%var_1641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%var_1641, dtype="float64") /* ty=Tensor[(8, 3, 5), float64] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %425 = cast(%var_1641, dtype="float64") /* ty=Tensor[(8, 3, 5), float64] */;
  %426 = tan(%425) /* ty=Tensor[(8, 3, 5), float64] */;
  %427 = cast(%426, dtype="float32") /* ty=Tensor[(8, 3, 5), float32] */;
  %428 = subtract(%423, %424) /* ty=Tensor[(8, 3, 5), float64] */;
  %429 = acos(%427) /* ty=Tensor[(8, 3, 5), float32] */;
  (%428, %429)
}

def @func_4389() -> (Tensor[(16, 11, 3), float32],) {
  %430 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %431 = %430.0;
  (%431,)
}

def @func_7376(%var_7325: Tensor[(924, 1), float64], %var_7326: Tensor[(832), float32], %var_7347: Tensor[(7, 9, 15), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(924, 1), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(7, 9, 15), uint32]) {
  %432 = @func_5353() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %433 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
  %434 = cast(%433, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %435 = cast(%var_7325, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %436 = cast(%var_7326, dtype="float32") /* ty=Tensor[(832), float32] */;
  %437 = reshape(%435, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %438 = reshape(%436, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %439 = @func_1135(%437, %438) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %440 = %439.6;
  %441 = cast(%var_7347, dtype="uint32") /* ty=Tensor[(7, 9, 15), uint32] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%440, dtype="uint32") /* ty=Tensor[(7, 9, 15), uint32] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %445 = %432.0;
  %446 = erf(%434) /* ty=Tensor[(16, 11, 3), float32] */;
  %447 = bitwise_or(%443, %444) /* ty=Tensor[(7, 9, 15), uint32] */;
  (%445, %var_7325, %var_7326, %446, %447)
}

def @func_11019() -> Tensor[(16, 11, 3), float64] {
  @func_5805() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_7013() -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) {
  %448 = @func_6632() /* ty=Tensor[(16, 11, 3), float32] */;
  %449 = cast(%448, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
  %450 = @func_5598() /* ty=Tensor[(16, 11, 3), float32] */;
  %451 = log10(%449) /* ty=Tensor[(16, 11, 3), float64] */;
  (%450, %451)
}

def @func_7459(%var_7431: Tensor[(832), float32]) -> (Tensor[(588, 1), uint8], Tensor[(10, 14, 13), int16], int16, Tensor[(1820, 1), int16], Tensor[(16, 11, 3), float64], Tensor[(198), uint32], Tensor[(104), int32], Tensor[(14, 12, 13), uint8], Tensor[(2184, 1), uint8], Tensor[(60), bool], Tensor[(832), float32], Tensor[(13, 2, 4), float64]) {
  %452 = @func_6157() /* ty=(Tensor[(588, 1), uint8],) */;
  %453 = cast(meta[relay.Constant][45] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %454 = cast(meta[relay.Constant][46] /* ty=Tensor[(1820, 1), int16] */, dtype="int16") /* ty=Tensor[(1820, 1), int16] */;
  %455 = reshape(%453, newshape=[]) /* ty=int16 */;
  %456 = reshape(%454, newshape=[10, 14, 13]) /* ty=Tensor[(10, 14, 13), int16] */;
  %457 = @func_6965(%455, %456) /* ty=(Tensor[(10, 14, 13), int16],) */;
  %458 = @func_7041() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %459 = cast(meta[relay.Constant][49] /* ty=Tensor[(2184, 1), uint8] */, dtype="uint8") /* ty=Tensor[(2184, 1), uint8] */;
  %460 = cast(meta[relay.Constant][49] /* ty=Tensor[(2184, 1), uint8] */, dtype="uint8") /* ty=Tensor[(2184, 1), uint8] */;
  %461 = cast(meta[relay.Constant][47] /* ty=Tensor[(198), uint32] */, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %462 = cast(meta[relay.Constant][50] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %463 = cast(%var_7431, dtype="float32") /* ty=Tensor[(832), float32] */;
  %464 = reshape(%459, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %465 = reshape(%460, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %466 = reshape(%461, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %467 = reshape(%462, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %468 = reshape(%463, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %469 = @func_1569(%464, %465, %466, %467, %468) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
  %470 = cast(meta[relay.Constant][47] /* ty=Tensor[(198), uint32] */, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %471 = cast(meta[relay.Constant][45] /* ty=int16 */, dtype="int8") /* ty=int8 */;
  %472 = %452.0;
  %473 = cast(%472, dtype="uint8") /* ty=Tensor[(588, 1), uint8] */;
  %474 = cast(meta[relay.Constant][48] /* ty=Tensor[(104), int32] */, dtype="int32") /* ty=Tensor[(104), int32] */;
  %475 = reshape(%470, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %476 = reshape(%471, newshape=[]) /* ty=int8 */;
  %477 = reshape(%473, newshape=[7, 84]) /* ty=Tensor[(7, 84), uint8] */;
  %478 = reshape(%474, newshape=[104]) /* ty=Tensor[(104), int32] */;
  %479 = @func_5667(%475, %476, %477, %478) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool], int8, Tensor[(7, 84), uint8], Tensor[(120), float64], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) */;
  %480 = %479.7;
  %481 = cast(%480, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
  %482 = %457.0;
  %483 = %458.0;
  %484 = %469.0;
  %485 = rsqrt(%481) /* ty=Tensor[(13, 2, 4), float64] */;
  (%472, %482, meta[relay.Constant][45] /* ty=int16 */, meta[relay.Constant][46] /* ty=Tensor[(1820, 1), int16] */, %483, meta[relay.Constant][47] /* ty=Tensor[(198), uint32] */, meta[relay.Constant][48] /* ty=Tensor[(104), int32] */, %484, meta[relay.Constant][49] /* ty=Tensor[(2184, 1), uint8] */, meta[relay.Constant][50] /* ty=Tensor[(60), bool] */, %var_7431, %485)
}

def @func_1135(%var_1111: Tensor[(924), float64], %var_1112: Tensor[(832), float32]) -> (Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) {
  %486 = cast(meta[relay.Constant][51] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %487 = cast(meta[relay.Constant][52] /* ty=Tensor[(7), uint64] */, dtype="uint64") /* ty=Tensor[(7), uint64] */;
  %488 = reshape(%486, newshape=[]) /* ty=uint64 */;
  %489 = reshape(%487, newshape=[7, 1]) /* ty=Tensor[(7, 1), uint64] */;
  %490 = @func_345(%488, %489) /* ty=(Tensor[(7, 1), uint64],) */;
  %491 = cast(%var_1111, dtype="float64") /* ty=Tensor[(924), float64] */;
  %492 = cast(%var_1112, dtype="float32") /* ty=Tensor[(832), float32] */;
  %493 = reshape(%491, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %494 = reshape(%492, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %495 = @func_735(%493, %494) /* ty=(Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) */;
  %496 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 15), float64] */;
  %497 = sigmoid(%496) /* ty=Tensor[(7, 9, 15), float64] */;
  %498 = cast(%497, dtype="float64") /* ty=Tensor[(7, 9, 15), float64] */;
  %499 = %490.0;
  %500 = %495.2;
  %501 = asinh(%498) /* ty=Tensor[(7, 9, 15), float64] */;
  (%499, meta[relay.Constant][51] /* ty=uint64 */, meta[relay.Constant][52] /* ty=Tensor[(7), uint64] */, %500, %var_1111, %var_1112, %501)
}

def @func_303(%var_285: Tensor[(16, 4, 13), float32]) -> (Tensor[(16, 4, 13), float32], Tensor[(16, 4, 13), float64]) {
  %502 = cast(%var_285, dtype="float32") /* ty=Tensor[(16, 4, 13), float32] */;
  %503 = cast(%var_285, dtype="float64") /* ty=Tensor[(16, 4, 13), float64] */;
  %504 = rsqrt(%502) /* ty=Tensor[(16, 4, 13), float32] */;
  %505 = log2(%503) /* ty=Tensor[(16, 4, 13), float64] */;
  (%504, %505)
}

def @func_10455() -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float32]) {
  %506 = @func_7013() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %507 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
  %508 = %506.0;
  (%507, %508)
}

def @func_6632() -> Tensor[(16, 11, 3), float32] {
  %509 = @func_4973() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) */;
  %510 = %509.0;
  %511 = cast(%510, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  exp(%511) /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_2254(%var_2248: Tensor[(14, 14, 3), uint8]) -> (Tensor[(14, 14, 3), bool],) {
  %512 = cast(meta[relay.Constant][54] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %513 = cast(%var_2248, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
  %514 = greater(%512, %513) /* ty=Tensor[(14, 14, 3), bool] */;
  (%514,)
}

def @func_6527() -> (Tensor[(7, 6, 12), bool],) {
  %515 = cast(meta[relay.Constant][56] /* ty=Tensor[(7, 6, 12), int32] */, dtype="bool") /* ty=Tensor[(7, 6, 12), bool] */;
  %516 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(7, 6, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 6, 12), int32] */, dtype="bool") /* ty=Tensor[(7, 6, 12), bool] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %519 = less(%517, %518) /* ty=Tensor[(7, 6, 12), bool] */;
  (%519,)
}

def @func_6605(%var_6572: Tensor[(960), uint16], %var_6575: Tensor[(2184, 1), uint8], %var_6576: Tensor[(1, 198), uint32], %var_6577: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184, 832), float32], Tensor[(192, 1), float32], Tensor[(16, 11, 3), float64]) {
  %520 = @func_4973() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) */;
  %521 = cast(%var_6572, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %522 = cast(meta[relay.Constant][57] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
  %523 = cast(meta[relay.Constant][58] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %524 = cast(%var_6575, dtype="uint8") /* ty=Tensor[(2184, 1), uint8] */;
  %525 = cast(%var_6576, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
  %526 = cast(%var_6577, dtype="bool") /* ty=Tensor[(60), bool] */;
  %527 = cast(meta[relay.Constant][59] /* ty=Tensor[(192, 1), uint16] */, dtype="uint16") /* ty=Tensor[(192, 1), uint16] */;
  %528 = reshape(%521, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
  %529 = reshape(%522, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %530 = reshape(%523, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %531 = reshape(%524, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %532 = reshape(%525, newshape=[1, 198]) /* ty=Tensor[(1, 198), uint32] */;
  %533 = reshape(%526, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %534 = reshape(%527, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %535 = @func_6230(%528, %529, %530, %531, %532, %533, %534) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(1, 960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16]) */;
  %536 = cast(meta[relay.Constant][58] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %537 = cast(%var_6575, dtype="float32") /* ty=Tensor[(2184, 1), float32] */;
  %538 = cast(meta[relay.Constant][59] /* ty=Tensor[(192, 1), uint16] */, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %539 = @func_4892() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %540 = @func_4592() /* ty=Tensor[(16, 11, 3), float32] */;
  %541 = %520.1;
  %542 = %535.6;
  %543 = subtract(%536, %537) /* ty=Tensor[(2184, 832), float32] */;
  %544 = atanh(%538) /* ty=Tensor[(192, 1), float32] */;
  %545 = %539.0;
  (%540, %541, %542, %var_6572, meta[relay.Constant][57] /* ty=Tensor[(320), bool] */, %var_6576, %var_6577, %543, %544, %545)
}

def @func_9961() -> Tensor[(16, 11, 3), float64] {
  %546 = @func_6140() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) */;
  %546.1
}

def @func_4307(%var_4296: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) {
  %547 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %548 = cast(meta[relay.Constant][60] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %549 = cast(%var_4296, dtype="bool") /* ty=Tensor[(60), bool] */;
  %550 = reshape(%548, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
  %551 = reshape(%549, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
  %552 = @func_958(%550, %551) /* ty=(Tensor[(3, 2, 10), bool],) */;
  %553 = %547.0;
  %554 = %552.0;
  (%553, %554, meta[relay.Constant][60] /* ty=Tensor[(30), bool] */, %var_4296)
}

def @func_9243(%var_9220: Tensor[(2925), int64]) -> (Tensor[(16, 11, 3), float64], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(60), bool], Tensor[(120), float64], Tensor[(192), uint16], Tensor[(2925), int64], Tensor[(192), uint16]) {
  %555 = cast(meta[relay.Constant][61] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %556 = cast(meta[relay.Constant][62] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %557 = cast(meta[relay.Constant][63] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %558 = reshape(%555, newshape=[14, 8, 10]) /* ty=Tensor[(14, 8, 10), float64] */;
  %559 = reshape(%556, newshape=[30, 2]) /* ty=Tensor[(30, 2), bool] */;
  %560 = reshape(%557, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %561 = @func_2930(%558, %559, %560) /* ty=(Tensor[(14, 8, 10), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(30, 2), bool], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) */;
  %562 = cast(%var_9220, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %563 = cast(meta[relay.Constant][64] /* ty=Tensor[(192), uint16] */, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %564 = cast(%var_9220, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %565 = cast(meta[relay.Constant][62] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %566 = reshape(%562, newshape=[2925]) /* ty=Tensor[(2925), int64] */;
  %567 = reshape(%563, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %568 = reshape(%564, newshape=[2925]) /* ty=Tensor[(2925), int64] */;
  %569 = reshape(%565, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %570 = @func_4717(%566, %567, %568, %569) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(2925), int32], Tensor[(60), bool], Tensor[(60), bool]) */;
  %571 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
  %572 = %561.1;
  %573 = %570.2;
  (%571, %572, meta[relay.Constant][61] /* ty=Tensor[(1120), float64] */, meta[relay.Constant][62] /* ty=Tensor[(60), bool] */, meta[relay.Constant][63] /* ty=Tensor[(120), float64] */, %573, %var_9220, meta[relay.Constant][64] /* ty=Tensor[(192), uint16] */)
}

def @func_1602(%var_1597: Tensor[(16, 1, 12), uint16], %var_1598: Tensor[(16, 5, 12), uint16]) -> Tensor[(16, 5, 12), uint16] {
  %574 = cast(%var_1597, dtype="uint16") /* ty=Tensor[(16, 1, 12), uint16] */;
  %575 = cast(%var_1598, dtype="uint16") /* ty=Tensor[(16, 5, 12), uint16] */;
  bitwise_or(%574, %575) /* ty=Tensor[(16, 5, 12), uint16] */
}

def @func_11148(%var_11139: int32, %var_11140: Tensor[(8, 7, 9), int32]) -> (Tensor[(8, 7, 9), int32],) {
  %576 = cast(%var_11139, dtype="int32") /* ty=int32 */;
  %577 = cast(%var_11140, dtype="int32") /* ty=Tensor[(8, 7, 9), int32] */;
  %578 = bitwise_or(%576, %577) /* ty=Tensor[(8, 7, 9), int32] */;
  (%578,)
}

def @func_5681() -> Tensor[(16, 11, 3), float64] {
  @func_4205() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_7146() -> (Tensor[(16, 11, 3), float64],) {
  %579 = @func_4892() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %580 = %579.0;
  (%580,)
}

def @func_6140() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) {
  %581 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
  %582 = cast(%581, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %583 = cast(meta[relay.Constant][65] /* ty=Tensor[(588, 1), uint8] */, dtype="uint8") /* ty=Tensor[(588, 1), uint8] */;
  %584 = reshape(%582, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), float32] */;
  %585 = reshape(%583, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %586 = @func_4478(%584, %585) /* ty=(Tensor[(16, 11, 3), bool], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64]) */;
  %587 = %586.3;
  (%581, %587, meta[relay.Constant][65] /* ty=Tensor[(588, 1), uint8] */)
}

def @func_5102() -> Tensor[(16, 11, 3), float32] {
  %588 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %588.0
}

def @func_11072(%var_11067: Tensor[(154, 6), float64], %var_11068: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) {
  %589 = @func_10037() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %590 = cast(%var_11067, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %591 = cast(%var_11068, dtype="float32") /* ty=Tensor[(832), float32] */;
  %592 = reshape(%590, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %593 = reshape(%591, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %594 = @func_735(%592, %593) /* ty=(Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) */;
  %595 = %589.0;
  %596 = %594.1;
  (%595, %596, %var_11067, %var_11068)
}

def @func_5308(%var_5272: Tensor[(14, 16, 1), float32]) -> (Tensor[(14, 16, 1), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) {
  %597 = cast(%var_5272, dtype="float32") /* ty=Tensor[(14, 16, 1), float32] */;
  %598 = cast(meta[relay.Constant][66] /* ty=Tensor[(104), int32] */, dtype="int32") /* ty=Tensor[(104), int32] */;
  %599 = reshape(%598, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), int32] */;
  %600 = sin(%597) /* ty=Tensor[(14, 16, 1), float32] */;
  %601 = @func_995(%599) /* ty=Tensor[(13, 2, 4), bool] */;
  (%600, %601, meta[relay.Constant][66] /* ty=Tensor[(104), int32] */)
}

def @func_7751(%var_7732: Tensor[(7, 6, 12), bool]) -> Tensor[(7, 6, 12), uint64] {
  %602 = @func_6527() /* ty=(Tensor[(7, 6, 12), bool],) */;
  %603 = %602.0;
  %604 = cast(%var_7732, dtype="bool") /* ty=Tensor[(7, 6, 12), bool] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="bool") /* ty=Tensor[(7, 6, 12), bool] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %608 = logical_or(%606, %607) /* ty=Tensor[(7, 6, 12), bool] */;
  %609 = cast(%603, dtype="uint64") /* ty=Tensor[(7, 6, 12), uint64] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%608, dtype="uint64") /* ty=Tensor[(7, 6, 12), uint64] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  multiply(%611, %612) /* ty=Tensor[(7, 6, 12), uint64] */
}

def @func_6230(%var_6181: Tensor[(1, 960), uint16], %var_6182: Tensor[(320), bool], %var_6183: Tensor[(832), float32], %var_6198: Tensor[(2184), uint8], %var_6199: Tensor[(1, 198), uint32], %var_6200: Tensor[(60), bool], %var_6216: Tensor[(192), uint16]) -> (Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(1, 960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16]) {
  %613 = @func_4892() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %614 = cast(%var_6181, dtype="uint16") /* ty=Tensor[(1, 960), uint16] */;
  %615 = cast(%var_6182, dtype="bool") /* ty=Tensor[(320), bool] */;
  %616 = cast(%var_6183, dtype="float32") /* ty=Tensor[(832), float32] */;
  %617 = reshape(%614, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
  %618 = reshape(%615, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %619 = reshape(%616, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %620 = @func_4171(%617, %618, %619) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) */;
  %621 = cast(%var_6198, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %622 = cast(%var_6198, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %623 = cast(%var_6199, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
  %624 = cast(%var_6200, dtype="bool") /* ty=Tensor[(60), bool] */;
  %625 = cast(%var_6183, dtype="float32") /* ty=Tensor[(832), float32] */;
  %626 = reshape(%621, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %627 = reshape(%622, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %628 = reshape(%623, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %629 = reshape(%624, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %630 = reshape(%625, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %631 = @func_1569(%626, %627, %628, %629, %630) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
  %632 = cast(%var_6198, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %633 = cast(%var_6199, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
  %634 = cast(%var_6200, dtype="bool") /* ty=Tensor[(60), bool] */;
  %635 = reshape(%632, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %636 = reshape(%633, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %637 = reshape(%634, newshape=[1, 60]) /* ty=Tensor[(1, 60), bool] */;
  %638 = @func_5345(%635, %636, %637) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) */;
  %639 = cast(%var_6216, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %640 = cast(%var_6181, dtype="uint16") /* ty=Tensor[(1, 960), uint16] */;
  %641 = reshape(%639, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), uint16] */;
  %642 = reshape(%640, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), uint16] */;
  %643 = %613.0;
  %644 = %620.13;
  %645 = @func_4592() /* ty=Tensor[(16, 11, 3), float32] */;
  %646 = %631.3;
  %647 = %638.2;
  %648 = @func_1602(%641, %642) /* ty=Tensor[(16, 5, 12), uint16] */;
  (%643, %644, %var_6181, %var_6182, %var_6183, %645, %646, %var_6198, %var_6199, %var_6200, %647, %648, %var_6216)
}

def @func_5353() -> (Tensor[(16, 11, 3), float64],) {
  %649 = @func_4352() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %650 = %649.0;
  (%650,)
}

def @func_2499(%var_2490: Tensor[(15, 2, 9), float32]) -> (Tensor[(15, 2, 9), float32],) {
  %651 = cast(%var_2490, dtype="float32") /* ty=Tensor[(15, 2, 9), float32] */;
  %652 = atan(%651) /* ty=Tensor[(15, 2, 9), float32] */;
  (%652,)
}

def @func_9737() -> (Tensor[(7, 6, 12), bool],) {
  %653 = @func_6527() /* ty=(Tensor[(7, 6, 12), bool],) */;
  %654 = %653.0;
  (%654,)
}

def @func_10764(%var_10741: Tensor[(2184), uint8], %var_10742: Tensor[(198), uint32], %var_10743: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(3, 2, 10), bool], Tensor[(1, 30), bool]) {
  %655 = @func_10037() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %656 = cast(%var_10741, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %657 = cast(%var_10742, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %658 = cast(%var_10743, dtype="bool") /* ty=Tensor[(60), bool] */;
  %659 = reshape(%656, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %660 = reshape(%657, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %661 = reshape(%658, newshape=[1, 60]) /* ty=Tensor[(1, 60), bool] */;
  %662 = @func_5345(%659, %660, %661) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) */;
  %663 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 30), bool] */, dtype="bool") /* ty=Tensor[(1, 30), bool] */;
  %664 = cast(%var_10743, dtype="bool") /* ty=Tensor[(60), bool] */;
  %665 = reshape(%663, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %666 = reshape(%664, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %667 = @func_8227(%665, %666) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) */;
  %668 = %655.0;
  %669 = %662.1;
  %670 = %667.1;
  (%668, %669, %var_10741, %var_10742, %var_10743, %670, meta[relay.Constant][67] /* ty=Tensor[(1, 30), bool] */)
}

def @func_10963() -> (Tensor[(60), bool],) {
  %671 = @func_7645() /* ty=(Tensor[(60), bool],) */;
  %672 = %671.0;
  (%672,)
}

def @func_6011() -> Tensor[(16, 11, 3), float64] {
  %673 = @func_4892() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %673.0
}

def @func_4795() -> Tensor[(16, 11, 3), float32] {
  %674 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %674.0
}

def @func_958(%var_953: Tensor[(3, 1, 10), bool], %var_954: Tensor[(3, 2, 10), bool]) -> (Tensor[(3, 2, 10), bool],) {
  %675 = cast(%var_953, dtype="bool") /* ty=Tensor[(3, 1, 10), bool] */;
  %676 = cast(%var_954, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
  %677 = logical_and(%675, %676) /* ty=Tensor[(3, 2, 10), bool] */;
  (%677,)
}

def @func_4231() -> (Tensor[(16, 11, 3), float32],) {
  %678 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %679 = %678.0;
  (%679,)
}

def @func_5699() -> (Tensor[(16, 11, 3), float64],) {
  %680 = @func_4352() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %681 = %680.0;
  (%681,)
}

def @func_7077(%var_7067: Tensor[(2925), int64], %var_7068: Tensor[(192), uint16]) -> (Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(2925), int64], Tensor[(192), uint16]) {
  %682 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %683 = cast(%var_7067, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %684 = cast(%var_7068, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %685 = reshape(%683, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), int64] */;
  %686 = reshape(%684, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %687 = @func_2616(%685, %686) /* ty=(Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(15, 13, 15), int16], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(15, 13, 15), float32]) */;
  %688 = %682.0;
  %689 = %687.8;
  (%688, %689, %var_7067, %var_7068)
}

def @func_10230(%var_10223: Tensor[(2, 16, 11), float64], %var_10226: Tensor[(2, 16, 11), float64]) -> Tensor[(2, 16, 11), uint32] {
  %690 = cast(%var_10223, dtype="float64") /* ty=Tensor[(2, 16, 11), float64] */;
  %691 = log2(%690) /* ty=Tensor[(2, 16, 11), float64] */;
  %692 = cast(%var_10226, dtype="uint32") /* ty=Tensor[(2, 16, 11), uint32] */;
  %693 = shape_of(%691, dtype="int32") /* ty=Tensor[(3), int32] */;
  %694 = cast(%691, dtype="uint32") /* ty=Tensor[(2, 16, 11), uint32] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_and(%694, %695) /* ty=Tensor[(2, 16, 11), uint32] */
}

def @func_9433(%var_9414: Tensor[(16, 11, 3), float64]) -> (Tensor[(16, 11, 3), bool],) {
  %696 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
  %697 = cast(%var_9414, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%696, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %701 = greater_equal(%699, %700) /* ty=Tensor[(16, 11, 3), bool] */;
  (%701,)
}

def @func_10151(%var_10132: float64) -> (Tensor[(16, 11, 3), float32], Tensor[(14, 10, 12), float64], Tensor[(1680), float64], Tensor[(7, 6, 12), uint8]) {
  %702 = cast(%var_10132, dtype="float64") /* ty=float64 */;
  %703 = cast(meta[relay.Constant][68] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %704 = cast(meta[relay.Constant][68] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %705 = reshape(%702, newshape=[]) /* ty=float64 */;
  %706 = reshape(%703, newshape=[14, 10, 12]) /* ty=Tensor[(14, 10, 12), float64] */;
  %707 = reshape(%704, newshape=[14, 10, 12]) /* ty=Tensor[(14, 10, 12), float64] */;
  %708 = @func_2460(%705, %706, %707) /* ty=(Tensor[(14, 10, 12), float64],) */;
  %709 = @func_6527() /* ty=(Tensor[(7, 6, 12), bool],) */;
  %710 = %709.0;
  %711 = cast(%710, dtype="uint8") /* ty=Tensor[(7, 6, 12), uint8] */;
  %712 = cast(%var_10132, dtype="uint8") /* ty=uint8 */;
  %713 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
  %714 = %708.0;
  %715 = bitwise_xor(%711, %712) /* ty=Tensor[(7, 6, 12), uint8] */;
  (%713, %714, meta[relay.Constant][68] /* ty=Tensor[(1680), float64] */, %715)
}

def @func_9134() -> (Tensor[(16, 11, 3), float32],) {
  %716 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
  (%716,)
}

def @func_4584(%var_4574: Tensor[(11, 2, 4), float64], %var_4580: Tensor[(960), uint16], %var_4582: Tensor[(832), float32]) -> (Tensor[(11, 2, 4), float64], Tensor[(11, 2, 4), float64], int64, Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32]) {
  %717 = cast(%var_4574, dtype="float64") /* ty=Tensor[(11, 2, 4), float64] */;
  %718 = cast(%var_4574, dtype="float64") /* ty=Tensor[(11, 2, 4), float64] */;
  %719 = cast(%var_4580, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %720 = cast(meta[relay.Constant][69] /* ty=Tensor[(160, 2), bool] */, dtype="bool") /* ty=Tensor[(160, 2), bool] */;
  %721 = cast(%var_4582, dtype="float32") /* ty=Tensor[(832), float32] */;
  %722 = reshape(%719, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
  %723 = reshape(%720, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %724 = reshape(%721, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %725 = @func_4171(%722, %723, %724) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) */;
  %726 = log(%717) /* ty=Tensor[(11, 2, 4), float64] */;
  %727 = atanh(%718) /* ty=Tensor[(11, 2, 4), float64] */;
  %728 = %725.10;
  (%726, %727, %728, %var_4580, meta[relay.Constant][69] /* ty=Tensor[(160, 2), bool] */, %var_4582)
}

def @func_6356(%var_6317: float64, %var_6318: Tensor[(3, 2, 4), float64], %var_6345: Tensor[(30, 4), float64]) -> (Tensor[(3, 2, 4), float64], Tensor[(16, 11, 3), float32], Tensor[(1120), float64], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(588), uint8], Tensor[(30, 4), float64], Tensor[(16, 4, 13), float64], Tensor[(832), float32]) {
  %729 = cast(%var_6317, dtype="float64") /* ty=float64 */;
  %730 = cast(%var_6318, dtype="float64") /* ty=Tensor[(3, 2, 4), float64] */;
  %731 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %732 = cast(meta[relay.Constant][70] /* ty=Tensor[(198), uint32] */, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %733 = cast(meta[relay.Constant][71] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %734 = cast(%var_6317, dtype="int8") /* ty=int8 */;
  %735 = cast(meta[relay.Constant][72] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %736 = cast(%var_6345, dtype="float64") /* ty=Tensor[(30, 4), float64] */;
  %737 = reshape(%732, newshape=[3, 66]) /* ty=Tensor[(3, 66), uint32] */;
  %738 = reshape(%733, newshape=[60, 1]) /* ty=Tensor[(60, 1), bool] */;
  %739 = reshape(%734, newshape=[]) /* ty=int8 */;
  %740 = reshape(%735, newshape=[14, 42]) /* ty=Tensor[(14, 42), uint8] */;
  %741 = reshape(%736, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %742 = @func_5546(%737, %738, %739, %740, %741) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(12, 11, 6), bool], Tensor[(3, 66), uint32], Tensor[(60, 1), bool], Tensor[(832, 1), float32], Tensor[(2184), uint8], int8, Tensor[(14, 42), uint8], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(120), float64]) */;
  %743 = cast(meta[relay.Constant][73] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %744 = reshape(%743, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float32] */;
  %745 = @func_303(%744) /* ty=(Tensor[(16, 4, 13), float32], Tensor[(16, 4, 13), float64]) */;
  %746 = power(%729, %730) /* ty=Tensor[(3, 2, 4), float64] */;
  %747 = %731.0;
  %748 = %742.9;
  %749 = %745.1;
  (%746, %747, %748, meta[relay.Constant][70] /* ty=Tensor[(198), uint32] */, meta[relay.Constant][71] /* ty=Tensor[(60), bool] */, meta[relay.Constant][72] /* ty=Tensor[(588), uint8] */, %var_6345, %749, meta[relay.Constant][73] /* ty=Tensor[(832), float32] */)
}

def @func_2868(%var_2837: Tensor[(13, 5, 9), float64], %var_2844: int8, %var_2845: Tensor[(72), int8], %var_2846: Tensor[(2, 396), int8], %var_2847: Tensor[(320), bool], %var_2848: Tensor[(924), float64]) -> (Tensor[(13, 5, 9), bool], Tensor[(72), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64], Tensor[(1, 104), uint8]) {
  %750 = cast(%var_2837, dtype="float64") /* ty=Tensor[(13, 5, 9), float64] */;
  %751 = asin(%750) /* ty=Tensor[(13, 5, 9), float64] */;
  %752 = cast(%var_2837, dtype="bool") /* ty=Tensor[(13, 5, 9), bool] */;
  %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%751, dtype="bool") /* ty=Tensor[(13, 5, 9), bool] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %756 = cast(%var_2844, dtype="int8") /* ty=int8 */;
  %757 = cast(%var_2845, dtype="int8") /* ty=Tensor[(72), int8] */;
  %758 = cast(%var_2846, dtype="int8") /* ty=Tensor[(2, 396), int8] */;
  %759 = cast(%var_2847, dtype="bool") /* ty=Tensor[(320), bool] */;
  %760 = cast(%var_2848, dtype="float64") /* ty=Tensor[(924), float64] */;
  %761 = reshape(%756, newshape=[]) /* ty=int8 */;
  %762 = reshape(%757, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), int8] */;
  %763 = reshape(%758, newshape=[12, 11, 6]) /* ty=Tensor[(12, 11, 6), int8] */;
  %764 = reshape(%759, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %765 = reshape(%760, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %766 = @func_2391(%761, %762, %763, %764, %765) /* ty=(Tensor[(12, 1, 6), int8], Tensor[(12, 11, 6), bool], Tensor[(924), float64], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(1, 104), int32]) */;
  %767 = %766.6;
  %768 = cast(%767, dtype="uint8") /* ty=Tensor[(1, 104), uint8] */;
  %769 = cast(%var_2844, dtype="uint8") /* ty=uint8 */;
  %770 = greater(%754, %755) /* ty=Tensor[(13, 5, 9), bool] */;
  %771 = maximum(%768, %769) /* ty=Tensor[(1, 104), uint8] */;
  (%770, %var_2845, %var_2846, %var_2847, %var_2848, %771)
}

def @func_7522() -> (Tensor[(60), bool],) {
  %772 = @func_5900() /* ty=(Tensor[(60), bool], Tensor[(60), bool], Tensor[(104), int32], Tensor[(16, 11, 3), float32]) */;
  %773 = %772.1;
  (%773,)
}

def @func_11127(%var_11114: Tensor[(9, 15, 14), int64], %var_11115: Tensor[(9, 15, 14), int64]) -> Tensor[(9, 15, 14), bool] {
  %774 = cast(%var_11115, dtype="bool") /* ty=Tensor[(9, 15, 14), bool] */;
  %775 = shape_of(%var_11114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_11114, dtype="bool") /* ty=Tensor[(9, 15, 14), bool] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%776, %777) /* ty=Tensor[(9, 15, 14), bool] */
}

def @func_5188(%var_5164: Tensor[(270), float32], %var_5167: Tensor[(960), uint16]) -> (Tensor[(16, 11, 3), float32], Tensor[(8, 3, 5), float32], Tensor[(120), float64], Tensor[(15, 2, 9), float32], Tensor[(960), uint16], Tensor[(960), uint16], Tensor[(270), float32]) {
  %778 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %779 = cast(meta[relay.Constant][74] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %780 = cast(meta[relay.Constant][74] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %781 = reshape(%779, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
  %782 = reshape(%780, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
  %783 = @func_1655(%781, %782) /* ty=(Tensor[(8, 3, 5), float64], Tensor[(8, 3, 5), float32]) */;
  %784 = cast(%var_5164, dtype="float32") /* ty=Tensor[(270), float32] */;
  %785 = reshape(%784, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
  %786 = @func_2499(%785) /* ty=(Tensor[(15, 2, 9), float32],) */;
  %787 = cast(%var_5167, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %788 = reshape(%787, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %789 = @func_4530(%788) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(16, 11, 3), float32]) */;
  %790 = cast(%var_5164, dtype="float32") /* ty=Tensor[(270), float32] */;
  %791 = %778.0;
  %792 = %783.1;
  %793 = %786.0;
  %794 = %789.3;
  %795 = sqrt(%790) /* ty=Tensor[(270), float32] */;
  (%791, %792, meta[relay.Constant][74] /* ty=Tensor[(120), float64] */, %793, %794, %var_5167, %795)
}

def @func_6157() -> (Tensor[(588, 1), uint8],) {
  %796 = @func_6140() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) */;
  %797 = %796.2;
  (%797,)
}

def @func_8399(%var_8345: Tensor[(8232), uint8], %var_8346: Tensor[(1, 198), uint32], %var_8386: Tensor[(2184), uint8]) -> (Tensor[(270), float32], Tensor[(8232), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(832), int16], Tensor[(416, 2), float32], Tensor[(60), bool], Tensor[(2184), uint8]) {
  %798 = @func_7773() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) */;
  %799 = cast(%var_8345, dtype="uint8") /* ty=Tensor[(8232), uint8] */;
  %800 = cast(%var_8346, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
  %801 = cast(meta[relay.Constant][75] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %802 = cast(meta[relay.Constant][76] /* ty=Tensor[(416, 2), float32] */, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
  %803 = reshape(%799, newshape=[588, 14]) /* ty=Tensor[(588, 14), uint8] */;
  %804 = reshape(%800, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %805 = reshape(%801, newshape=[60, 1]) /* ty=Tensor[(60, 1), bool] */;
  %806 = reshape(%802, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %807 = @func_6917(%803, %804, %805, %806) /* ty=(Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60, 1), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(588, 14), float64]) */;
  %808 = %807.4;
  %809 = cast(meta[relay.Constant][76] /* ty=Tensor[(416, 2), float32] */, dtype="int16") /* ty=Tensor[(416, 2), int16] */;
  %810 = shape_of(%808, dtype="int32") /* ty=Tensor[(1), int32] */;
  %811 = cast(%808, dtype="int16") /* ty=Tensor[(832), int16] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?), int16] */;
  %813 = cast(meta[relay.Constant][76] /* ty=Tensor[(416, 2), float32] */, dtype="float64") /* ty=Tensor[(416, 2), float64] */;
  %814 = erf(%813) /* ty=Tensor[(416, 2), float64] */;
  %815 = cast(%814, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
  %816 = cast(%var_8386, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %817 = cast(%var_8386, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %818 = cast(%var_8346, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
  %819 = cast(meta[relay.Constant][75] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %820 = cast(%814, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
  %821 = reshape(%816, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %822 = reshape(%817, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %823 = reshape(%818, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %824 = reshape(%819, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %825 = reshape(%820, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %826 = @func_1569(%821, %822, %823, %824, %825) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
  %827 = %798.2;
  %828 = maximum(%811, %812) /* ty=Tensor[(832), int16] */;
  %829 = rsqrt(%815) /* ty=Tensor[(416, 2), float32] */;
  %830 = %826.3;
  (%827, %var_8345, %var_8346, meta[relay.Constant][75] /* ty=Tensor[(60), bool] */, %828, %829, %830, %var_8386)
}

def @func_4478(%var_4445: Tensor[(16, 11, 3), float32], %var_4451: Tensor[(588), uint8]) -> (Tensor[(16, 11, 3), bool], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64]) {
  %831 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %832 = %831.1;
  %833 = cast(%832, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %834 = sinh(%833) /* ty=Tensor[(16, 11, 3), float32] */;
  %835 = cast(%var_4445, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
  %836 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%834, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %839 = cast(%var_4451, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %840 = reshape(%839, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint8] */;
  %841 = @func_2254(%840) /* ty=(Tensor[(14, 14, 3), bool],) */;
  %842 = cast(meta[relay.Constant][77] /* ty=Tensor[(16, 11, 3), float32] */, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
  %843 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%834, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %846 = equal(%844, %845) /* ty=Tensor[(16, 11, 3), bool] */;
  %847 = cast(%846, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
  %848 = less_equal(%837, %838) /* ty=Tensor[(16, 11, 3), bool] */;
  %849 = %841.0;
  %850 = sigmoid(%847) /* ty=Tensor[(16, 11, 3), float64] */;
  (%848, %849, %var_4451, %850)
}

def @func_7553() -> (Tensor[(16, 11, 3), float32], Tensor[(588, 1), uint8]) {
  %851 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %852 = @func_6140() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) */;
  %853 = %851.0;
  %854 = %852.2;
  (%853, %854)
}

def @main(%var_11413: Tensor[(60), bool], %var_11414: Tensor[(120), float64]) -> (Tensor[(7, 6, 12), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(120), float64], Tensor[(280, 4), float64]) {
  %855 = @func_9737() /* ty=(Tensor[(7, 6, 12), bool],) */;
  %856 = cast(meta[relay.Constant][78] /* ty=Tensor[(280, 4), float64] */, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
  %857 = cast(%var_11413, dtype="bool") /* ty=Tensor[(60), bool] */;
  %858 = cast(%var_11414, dtype="float64") /* ty=Tensor[(120), float64] */;
  %859 = reshape(%856, newshape=[14, 8, 10]) /* ty=Tensor[(14, 8, 10), float64] */;
  %860 = reshape(%857, newshape=[30, 2]) /* ty=Tensor[(30, 2), bool] */;
  %861 = reshape(%858, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %862 = @func_2930(%859, %860, %861) /* ty=(Tensor[(14, 8, 10), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(30, 2), bool], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) */;
  %863 = cast(meta[relay.Constant][78] /* ty=Tensor[(280, 4), float64] */, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
  %864 = cosh(%863) /* ty=Tensor[(280, 4), float64] */;
  %865 = cast(meta[relay.Constant][78] /* ty=Tensor[(280, 4), float64] */, dtype="uint8") /* ty=Tensor[(280, 4), uint8] */;
  %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(2), int32] */;
  %867 = cast(%864, dtype="uint8") /* ty=Tensor[(280, 4), uint8] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %869 = bitwise_and(%867, %868) /* ty=Tensor[(280, 4), uint8] */;
  %870 = cast(%869, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
  %871 = %855.0;
  %872 = %862.2;
  %873 = atanh(%870) /* ty=Tensor[(280, 4), float64] */;
  (%871, %872, %var_11413, %var_11414, %873)
}

def @func_10037() -> (Tensor[(16, 11, 3), float64],) {
  %874 = @func_9636() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) */;
  %875 = %874.1;
  (%875,)
}

def @func_10585(%var_10524: Tensor[(504), bool], %var_10545: Tensor[(192), uint16], %var_10557: Tensor[(2184, 1), uint8], %var_10558: Tensor[(198), uint32], %var_10559: Tensor[(320), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(504), bool], Tensor[(504), float32], Tensor[(16, 5, 12), uint16], Tensor[(2925, 1), int64], Tensor[(192), uint16], Tensor[(60), bool], Tensor[(16, 11, 3), float64], Tensor[(924), float64], Tensor[(2184, 1), uint8], Tensor[(198), uint32], Tensor[(320), bool], Tensor[(832), float32], Tensor[(416, 2), float32]) {
  %876 = @func_5992() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %877 = cast(%var_10524, dtype="bool") /* ty=Tensor[(504), bool] */;
  %878 = reshape(%877, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %879 = @func_8530(%878) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(7, 6, 12), uint64], Tensor[(504), bool]) */;
  %880 = %879.2;
  %881 = cast(%880, dtype="float32") /* ty=Tensor[(504), float32] */;
  %882 = cast(meta[relay.Constant][79] /* ty=Tensor[(2925, 1), int64] */, dtype="int64") /* ty=Tensor[(2925, 1), int64] */;
  %883 = cast(%var_10545, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %884 = cast(meta[relay.Constant][79] /* ty=Tensor[(2925, 1), int64] */, dtype="int64") /* ty=Tensor[(2925, 1), int64] */;
  %885 = cast(meta[relay.Constant][80] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %886 = reshape(%882, newshape=[2925]) /* ty=Tensor[(2925), int64] */;
  %887 = reshape(%883, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %888 = reshape(%884, newshape=[2925]) /* ty=Tensor[(2925), int64] */;
  %889 = reshape(%885, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %890 = @func_4717(%886, %887, %888, %889) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(2925), int32], Tensor[(60), bool], Tensor[(60), bool]) */;
  %891 = @func_6453() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %892 = %890.1;
  %893 = cast(%892, dtype="uint16") /* ty=Tensor[(16, 5, 12), uint16] */;
  %894 = cast(%var_10557, dtype="uint8") /* ty=Tensor[(2184, 1), uint8] */;
  %895 = cast(%var_10558, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %896 = cast(%var_10559, dtype="bool") /* ty=Tensor[(320), bool] */;
  %897 = cast(meta[relay.Constant][81] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %898 = reshape(%893, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %899 = reshape(%894, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %900 = reshape(%895, newshape=[1, 198]) /* ty=Tensor[(1, 198), uint32] */;
  %901 = reshape(%896, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %902 = reshape(%897, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %903 = @func_10402(%898, %899, %900, %901, %902) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(104), int32], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(104), int32]) */;
  %904 = cast(%var_10557, dtype="uint8") /* ty=Tensor[(2184, 1), uint8] */;
  %905 = cast(%var_10558, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %906 = cast(meta[relay.Constant][80] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %907 = reshape(%904, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %908 = reshape(%905, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %909 = reshape(%906, newshape=[1, 60]) /* ty=Tensor[(1, 60), bool] */;
  %910 = @func_5345(%907, %908, %909) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) */;
  %911 = %876.0;
  %912 = acosh(%881) /* ty=Tensor[(504), float32] */;
  %913 = %891.0;
  %914 = %903.8;
  %915 = %910.5;
  (%911, %var_10524, %912, %892, meta[relay.Constant][79] /* ty=Tensor[(2925, 1), int64] */, %var_10545, meta[relay.Constant][80] /* ty=Tensor[(60), bool] */, %913, %914, %var_10557, %var_10558, %var_10559, meta[relay.Constant][81] /* ty=Tensor[(832), float32] */, %915)
}

def @func_11054() -> (Tensor[(7, 6, 12), bool],) {
  %916 = @func_9737() /* ty=(Tensor[(7, 6, 12), bool],) */;
  %917 = %916.0;
  (%917,)
}

def @func_4892() -> (Tensor[(16, 11, 3), float64],) {
  %918 = @func_4352() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %919 = %918.0;
  (%919,)
}

def @func_9946(%var_9921: Tensor[(832), float32], %var_9943: Tensor[(792), int8]) -> (Tensor[(16, 11, 3), float64], Tensor[(11, 2, 4), float64], Tensor[(88), float64], Tensor[(960), uint16], Tensor[(832), float32], Tensor[(7, 132), float64], Tensor[(792), int8], Tensor[(924), float64]) {
  %920 = cast(meta[relay.Constant][82] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %921 = cast(meta[relay.Constant][83] /* ty=Tensor[(960), uint16] */, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %922 = cast(%var_9921, dtype="float32") /* ty=Tensor[(832), float32] */;
  %923 = reshape(%920, newshape=[11, 2, 4]) /* ty=Tensor[(11, 2, 4), float64] */;
  %924 = reshape(%921, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %925 = reshape(%922, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %926 = @func_4584(%923, %924, %925) /* ty=(Tensor[(11, 2, 4), float64], Tensor[(11, 2, 4), float64], int64, Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32]) */;
  %927 = cast(%var_9943, dtype="int8") /* ty=Tensor[(792), int8] */;
  %928 = cast(meta[relay.Constant][84] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %929 = cast(%var_9921, dtype="float32") /* ty=Tensor[(832), float32] */;
  %930 = reshape(%927, newshape=[36, 22]) /* ty=Tensor[(36, 22), int8] */;
  %931 = reshape(%928, newshape=[7, 132]) /* ty=Tensor[(7, 132), float64] */;
  %932 = reshape(%929, newshape=[1, 832]) /* ty=Tensor[(1, 832), float32] */;
  %933 = @func_8781(%930, %931, %932) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(320), bool], Tensor[(36, 2), int8], Tensor[(320), bool], Tensor[(16, 11, 3), float64], Tensor[(13, 5, 9), bool], Tensor[(585), float64], int8, Tensor[(36, 22), int8], Tensor[(7, 132), float64], Tensor[(7, 9, 15), float64], Tensor[(1, 832), float32]) */;
  %934 = @func_6781() /* ty=Tensor[(16, 11, 3), float64] */;
  %935 = %926.0;
  %936 = %933.9;
  (%934, %935, meta[relay.Constant][82] /* ty=Tensor[(88), float64] */, meta[relay.Constant][83] /* ty=Tensor[(960), uint16] */, %var_9921, %936, %var_9943, meta[relay.Constant][84] /* ty=Tensor[(924), float64] */)
}

def @func_6781() -> Tensor[(16, 11, 3), float64] {
  @func_5805() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_6917(%var_6870: Tensor[(588, 14), uint8], %var_6888: Tensor[(198), uint32], %var_6889: Tensor[(60, 1), bool], %var_6890: Tensor[(832), float32]) -> (Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60, 1), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(588, 14), float64]) {
  %937 = @func_6157() /* ty=(Tensor[(588, 1), uint8],) */;
  %938 = %937.0;
  %939 = cast(%938, dtype="uint64") /* ty=Tensor[(588, 1), uint64] */;
  %940 = cast(%var_6870, dtype="uint64") /* ty=Tensor[(588, 14), uint64] */;
  %941 = cast(%var_6888, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %942 = cast(%var_6889, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %943 = cast(%var_6890, dtype="float32") /* ty=Tensor[(832), float32] */;
  %944 = reshape(%941, newshape=[2, 11, 9]) /* ty=Tensor[(2, 11, 9), uint32] */;
  %945 = reshape(%942, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %946 = reshape(%943, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %947 = @func_1428(%944, %945, %946) /* ty=(Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) */;
  %948 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %949 = cast(%var_6870, dtype="float64") /* ty=Tensor[(588, 14), float64] */;
  %950 = sin(%949) /* ty=Tensor[(588, 14), float64] */;
  %951 = cast(%950, dtype="float64") /* ty=Tensor[(588, 14), float64] */;
  %952 = subtract(%939, %940) /* ty=Tensor[(588, 14), uint64] */;
  %953 = %947.3;
  %954 = %948.0;
  %955 = acos(%951) /* ty=Tensor[(588, 14), float64] */;
  (%952, %953, %var_6888, %var_6889, %var_6890, %954, %955)
}

def @func_5546(%var_5528: Tensor[(3, 66), uint32], %var_5529: Tensor[(60, 1), bool], %var_5532: int8, %var_5533: Tensor[(14, 42), uint8], %var_5537: Tensor[(120), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(12, 11, 6), bool], Tensor[(3, 66), uint32], Tensor[(60, 1), bool], Tensor[(832, 1), float32], Tensor[(2184), uint8], int8, Tensor[(14, 42), uint8], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(120), float64]) {
  %956 = @func_4352() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %957 = cast(%var_5528, dtype="uint32") /* ty=Tensor[(3, 66), uint32] */;
  %958 = cast(%var_5529, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %959 = cast(meta[relay.Constant][85] /* ty=Tensor[(832, 1), float32] */, dtype="float32") /* ty=Tensor[(832, 1), float32] */;
  %960 = cast(meta[relay.Constant][86] /* ty=Tensor[(2184), uint8] */, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %961 = cast(%var_5532, dtype="int8") /* ty=int8 */;
  %962 = cast(%var_5533, dtype="uint8") /* ty=Tensor[(14, 42), uint8] */;
  %963 = reshape(%957, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %964 = reshape(%958, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %965 = reshape(%959, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %966 = reshape(%960, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %967 = reshape(%961, newshape=[]) /* ty=int8 */;
  %968 = reshape(%962, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %969 = @func_5516(%963, %964, %965, %966, %967, %968) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32], Tensor[(832), float32], Tensor[(924), float64], Tensor[(16, 11, 3), float64], Tensor[(960), uint16], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(12, 11, 6), bool], Tensor[(18, 4), int8], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(792), int32], Tensor[(16, 11, 3), float32]) */;
  %970 = cast(meta[relay.Constant][87] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %971 = cast(%var_5529, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %972 = cast(%var_5537, dtype="float64") /* ty=Tensor[(120), float64] */;
  %973 = reshape(%970, newshape=[14, 8, 10]) /* ty=Tensor[(14, 8, 10), float64] */;
  %974 = reshape(%971, newshape=[30, 2]) /* ty=Tensor[(30, 2), bool] */;
  %975 = reshape(%972, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %976 = @func_2930(%973, %974, %975) /* ty=(Tensor[(14, 8, 10), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(30, 2), bool], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) */;
  %977 = %956.0;
  %978 = %969.13;
  %979 = %976.1;
  (%977, %978, %var_5528, %var_5529, meta[relay.Constant][85] /* ty=Tensor[(832, 1), float32] */, meta[relay.Constant][86] /* ty=Tensor[(2184), uint8] */, %var_5532, %var_5533, %979, meta[relay.Constant][87] /* ty=Tensor[(1120), float64] */, %var_5537)
}

def @func_8227(%var_8221: Tensor[(30), bool], %var_8222: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) {
  %980 = cast(%var_8221, dtype="bool") /* ty=Tensor[(30), bool] */;
  %981 = cast(%var_8222, dtype="bool") /* ty=Tensor[(60), bool] */;
  %982 = reshape(%980, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
  %983 = reshape(%981, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
  %984 = @func_958(%982, %983) /* ty=(Tensor[(3, 2, 10), bool],) */;
  %985 = @func_6011() /* ty=Tensor[(16, 11, 3), float64] */;
  %986 = %984.0;
  (%985, %986, %var_8221, %var_8222)
}

def @func_1428(%var_1383: Tensor[(2, 11, 9), uint32], %var_1390: Tensor[(60), bool], %var_1410: Tensor[(832), float32]) -> (Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) {
  %987 = cast(%var_1383, dtype="uint32") /* ty=Tensor[(2, 11, 9), uint32] */;
  %988 = shape_of(meta[relay.Constant][88] /* ty=Tensor[(2, 11, 9), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(meta[relay.Constant][88] /* ty=Tensor[(2, 11, 9), uint32] */, dtype="uint32") /* ty=Tensor[(2, 11, 9), uint32] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %991 = cast(meta[relay.Constant][89] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %992 = cast(%var_1390, dtype="bool") /* ty=Tensor[(60), bool] */;
  %993 = reshape(%991, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
  %994 = reshape(%992, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
  %995 = @func_958(%993, %994) /* ty=(Tensor[(3, 2, 10), bool],) */;
  %996 = cast(meta[relay.Constant][90] /* ty=Tensor[(308, 1), float32] */, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
  %997 = reshape(%996, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
  %998 = cast(meta[relay.Constant][89] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %999 = cast(%var_1390, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1000 = reshape(%998, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
  %1001 = reshape(%999, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
  %1002 = @func_958(%1000, %1001) /* ty=(Tensor[(3, 2, 10), bool],) */;
  %1003 = cast(meta[relay.Constant][91] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %1004 = cast(%var_1410, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1005 = reshape(%1003, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1006 = reshape(%1004, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1007 = @func_1135(%1005, %1006) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %1008 = cast(meta[relay.Constant][91] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %1009 = cast(%var_1410, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1010 = reshape(%1008, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1011 = reshape(%1009, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1012 = @func_1135(%1010, %1011) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %1013 = left_shift(%989, %990) /* ty=Tensor[(2, 11, 9), uint32] */;
  %1014 = %995.0;
  %1015 = @func_1377(%997) /* ty=Tensor[(11, 7, 4), float32] */;
  %1016 = %1002.0;
  %1017 = %1007.5;
  %1018 = %1012.1;
  (%1013, %1014, meta[relay.Constant][89] /* ty=Tensor[(30), bool] */, %var_1390, %1015, meta[relay.Constant][90] /* ty=Tensor[(308, 1), float32] */, %1016, %1017, meta[relay.Constant][91] /* ty=Tensor[(154, 6), float64] */, %var_1410, %1018)
}

def @func_4973() -> (Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) {
  %1019 = cast(meta[relay.Constant][92] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1020 = reshape(%1019, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
  %1021 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
  %1022 = @func_1377(%1020) /* ty=Tensor[(11, 7, 4), float32] */;
  (%1021, %1022, meta[relay.Constant][92] /* ty=Tensor[(308), float32] */)
}

def @func_9636() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) {
  %1023 = @func_6453() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1024 = @func_6506() /* ty=Tensor[(16, 11, 3), float64] */;
  %1025 = %1023.0;
  (%1024, %1025)
}

def @func_5805() -> Tensor[(16, 11, 3), float64] {
  %1026 = @func_4973() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) */;
  %1026.0
}

def @func_9366() -> (Tensor[(9, 8, 9), uint64],) {
  %1027 = cast(meta[relay.Constant][94] /* ty=Tensor[(9, 8, 9), uint64] */, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
  %1028 = shape_of(meta[relay.Constant][93] /* ty=Tensor[(9, 8, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1029 = cast(meta[relay.Constant][93] /* ty=Tensor[(9, 8, 9), uint64] */, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
  %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1031 = bitwise_xor(%1029, %1030) /* ty=Tensor[(9, 8, 9), uint64] */;
  (%1031,)
}

def @func_4171(%var_4116: Tensor[(1, 960), uint16], %var_4126: Tensor[(320), bool], %var_4128: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) {
  %1032 = cast(meta[relay.Constant][95] /* ty=Tensor[(192), uint16] */, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %1033 = cast(%var_4116, dtype="uint16") /* ty=Tensor[(1, 960), uint16] */;
  %1034 = reshape(%1032, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), uint16] */;
  %1035 = reshape(%1033, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), uint16] */;
  %1036 = cast(%var_4126, dtype="bool") /* ty=Tensor[(320), bool] */;
  %1037 = cast(meta[relay.Constant][96] /* ty=Tensor[(1, 924), float64] */, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
  %1038 = cast(%var_4128, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1039 = cast(meta[relay.Constant][97] /* ty=Tensor[(104), int32] */, dtype="int32") /* ty=Tensor[(104), int32] */;
  %1040 = reshape(%1036, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), bool] */;
  %1041 = reshape(%1037, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1042 = reshape(%1038, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1043 = reshape(%1039, newshape=[104]) /* ty=Tensor[(104), int32] */;
  %1044 = @func_1809(%1040, %1041, %1042, %1043) /* ty=(Tensor[(16, 4, 5), bool], Tensor[(7, 1), uint64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) */;
  %1045 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1046 = cast(meta[relay.Constant][98] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %1047 = reshape(%1045, newshape=[]) /* ty=int64 */;
  %1048 = reshape(%1046, newshape=[9, 14, 8]) /* ty=Tensor[(9, 14, 8), int64] */;
  %1049 = @func_3264(%1047, %1048) /* ty=(Tensor[(9, 14, 8), bool], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) */;
  %1050 = cast(meta[relay.Constant][99] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1051 = reshape(%1050, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
  %1052 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1053 = cast(meta[relay.Constant][98] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %1054 = reshape(%1052, newshape=[]) /* ty=int64 */;
  %1055 = reshape(%1053, newshape=[9, 14, 8]) /* ty=Tensor[(9, 14, 8), int64] */;
  %1056 = @func_3264(%1054, %1055) /* ty=(Tensor[(9, 14, 8), bool], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) */;
  %1057 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
  %1058 = @func_1602(%1034, %1035) /* ty=Tensor[(16, 5, 12), uint16] */;
  %1059 = %1044.4;
  %1060 = %1049.1;
  %1061 = @func_1377(%1051) /* ty=Tensor[(11, 7, 4), float32] */;
  %1062 = %1056.3;
  (%1057, %1058, meta[relay.Constant][95] /* ty=Tensor[(192), uint16] */, %var_4116, %1059, %var_4126, meta[relay.Constant][96] /* ty=Tensor[(1, 924), float64] */, %var_4128, meta[relay.Constant][97] /* ty=Tensor[(104), int32] */, %1060, -6 /* ty=int64 */, meta[relay.Constant][98] /* ty=Tensor[(1008), int64] */, %1061, meta[relay.Constant][99] /* ty=Tensor[(308), float32] */, %1062)
}

def @func_9281() -> (Tensor[(16, 11, 3), float64],) {
  %1063 = @func_5992() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1064 = %1063.0;
  (%1064,)
}

def @func_10402(%var_10379: Tensor[(960), uint16], %var_10380: Tensor[(2184), uint8], %var_10381: Tensor[(1, 198), uint32], %var_10394: Tensor[(320), bool], %var_10396: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(104), int32], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(104), int32]) {
  %1065 = @func_5353() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1066 = cast(%var_10379, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %1067 = cast(%var_10380, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %1068 = cast(%var_10381, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
  %1069 = cast(meta[relay.Constant][100] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1070 = reshape(%1066, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %1071 = reshape(%1067, newshape=[2184, 1]) /* ty=Tensor[(2184, 1), uint8] */;
  %1072 = reshape(%1068, newshape=[1, 198]) /* ty=Tensor[(1, 198), uint32] */;
  %1073 = reshape(%1069, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %1074 = @func_6605(%1070, %1071, %1072, %1073) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184, 832), float32], Tensor[(192, 1), float32], Tensor[(16, 11, 3), float64]) */;
  %1075 = cast(%var_10394, dtype="bool") /* ty=Tensor[(320), bool] */;
  %1076 = cast(meta[relay.Constant][101] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1077 = cast(%var_10396, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1078 = cast(meta[relay.Constant][102] /* ty=Tensor[(104), int32] */, dtype="int32") /* ty=Tensor[(104), int32] */;
  %1079 = reshape(%1075, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), bool] */;
  %1080 = reshape(%1076, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1081 = reshape(%1077, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1082 = reshape(%1078, newshape=[104]) /* ty=Tensor[(104), int32] */;
  %1083 = @func_1809(%1079, %1080, %1081, %1082) /* ty=(Tensor[(16, 4, 5), bool], Tensor[(7, 1), uint64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) */;
  %1084 = %1065.0;
  %1085 = %1074.2;
  %1086 = %1083.5;
  (%1084, %1085, %var_10379, %var_10380, %var_10381, meta[relay.Constant][100] /* ty=Tensor[(60), bool] */, %1086, %var_10394, meta[relay.Constant][101] /* ty=Tensor[(924), float64] */, %var_10396, meta[relay.Constant][102] /* ty=Tensor[(104), int32] */)
}

def @func_6436() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) {
  %1087 = @func_5805() /* ty=Tensor[(16, 11, 3), float64] */;
  %1088 = @func_4592() /* ty=Tensor[(16, 11, 3), float32] */;
  (%1087, %1088)
}

def @func_5516(%var_5411: Tensor[(198), uint32], %var_5412: Tensor[(60), bool], %var_5413: Tensor[(832), float32], %var_5465: Tensor[(2184), uint8], %var_5478: int8, %var_5488: Tensor[(588), uint8]) -> (Tensor[(16, 11, 3), float64], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32], Tensor[(832), float32], Tensor[(924), float64], Tensor[(16, 11, 3), float64], Tensor[(960), uint16], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(12, 11, 6), bool], Tensor[(18, 4), int8], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(792), int32], Tensor[(16, 11, 3), float32]) {
  %1089 = cast(%var_5411, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %1090 = cast(%var_5412, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1091 = cast(%var_5413, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1092 = reshape(%1089, newshape=[2, 11, 9]) /* ty=Tensor[(2, 11, 9), uint32] */;
  %1093 = reshape(%1090, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %1094 = reshape(%1091, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1095 = @func_1428(%1092, %1093, %1094) /* ty=(Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) */;
  %1096 = cast(meta[relay.Constant][103] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1097 = %1095.9;
  %1098 = cast(%1097, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1099 = reshape(%1096, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1100 = reshape(%1098, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1101 = @func_1135(%1099, %1100) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %1102 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
  %1103 = cast(%1102, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %1104 = cast(meta[relay.Constant][104] /* ty=Tensor[(960), uint16] */, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %1105 = cast(meta[relay.Constant][105] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
  %1106 = reshape(%1103, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), float32] */;
  %1107 = reshape(%1104, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %1108 = reshape(%1105, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %1109 = @func_5033(%1106, %1107, %1108) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) */;
  %1110 = cast(%var_5465, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %1111 = cast(%var_5465, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %1112 = cast(%var_5411, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %1113 = cast(%var_5412, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1114 = cast(%var_5413, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1115 = reshape(%1110, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %1116 = reshape(%1111, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %1117 = reshape(%1112, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %1118 = reshape(%1113, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %1119 = reshape(%1114, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1120 = @func_1569(%1115, %1116, %1117, %1118, %1119) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
  %1121 = cast(%var_5478, dtype="int8") /* ty=int8 */;
  %1122 = cast(meta[relay.Constant][106] /* ty=Tensor[(18, 4), int8] */, dtype="int8") /* ty=Tensor[(18, 4), int8] */;
  %1123 = cast(meta[relay.Constant][107] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %1124 = cast(meta[relay.Constant][105] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
  %1125 = cast(meta[relay.Constant][103] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1126 = reshape(%1121, newshape=[]) /* ty=int8 */;
  %1127 = reshape(%1122, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), int8] */;
  %1128 = reshape(%1123, newshape=[12, 11, 6]) /* ty=Tensor[(12, 11, 6), int8] */;
  %1129 = reshape(%1124, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %1130 = reshape(%1125, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1131 = @func_2391(%1126, %1127, %1128, %1129, %1130) /* ty=(Tensor[(12, 1, 6), int8], Tensor[(12, 11, 6), bool], Tensor[(924), float64], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(1, 104), int32]) */;
  %1132 = cast(%1102, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %1133 = cast(%var_5488, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %1134 = reshape(%1132, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), float32] */;
  %1135 = reshape(%1133, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %1136 = @func_4478(%1134, %1135) /* ty=(Tensor[(16, 11, 3), bool], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64]) */;
  %1137 = cast(meta[relay.Constant][107] /* ty=Tensor[(792), int8] */, dtype="int32") /* ty=Tensor[(792), int32] */;
  %1138 = cast(%var_5478, dtype="int32") /* ty=int32 */;
  %1139 = cast(%1102, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %1140 = %1109.2;
  %1141 = cast(%1140, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %1142 = cast(meta[relay.Constant][105] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
  %1143 = reshape(%1139, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), float32] */;
  %1144 = reshape(%1141, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %1145 = reshape(%1142, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %1146 = @func_5033(%1143, %1144, %1145) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) */;
  %1147 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
  %1148 = %1101.5;
  %1149 = %1120.4;
  %1150 = %1131.1;
  %1151 = %1136.1;
  %1152 = minimum(%1137, %1138) /* ty=Tensor[(792), int32] */;
  %1153 = %1146.0;
  (%1147, %1097, %var_5411, %var_5412, %var_5413, %1148, meta[relay.Constant][103] /* ty=Tensor[(924), float64] */, %1102, %1140, meta[relay.Constant][104] /* ty=Tensor[(960), uint16] */, meta[relay.Constant][105] /* ty=Tensor[(320), bool] */, %1149, %var_5465, %1150, meta[relay.Constant][106] /* ty=Tensor[(18, 4), int8] */, %1151, %var_5488, %1152, %1153)
}

def @func_5992() -> (Tensor[(16, 11, 3), float64],) {
  %1154 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
  (%1154,)
}

def @func_8145() -> (Tensor[(16, 11, 3), float64],) {
  %1155 = @func_6781() /* ty=Tensor[(16, 11, 3), float64] */;
  (%1155,)
}

def @func_11106() -> Tensor[(16, 11, 3), float32] {
  @func_5102() /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_6105() -> (Tensor[(16, 11, 3), float64],) {
  %1156 = @func_5681() /* ty=Tensor[(16, 11, 3), float64] */;
  (%1156,)
}

def @func_2460(%var_2436: float64, %var_2437: Tensor[(14, 10, 12), float64], %var_2446: Tensor[(14, 10, 12), float64]) -> (Tensor[(14, 10, 12), float64],) {
  %1157 = cast(%var_2436, dtype="float64") /* ty=float64 */;
  %1158 = cast(%var_2437, dtype="float64") /* ty=Tensor[(14, 10, 12), float64] */;
  %1159 = mod(%1157, %1158) /* ty=Tensor[(14, 10, 12), float64] */;
  %1160 = cast(%var_2446, dtype="float32") /* ty=Tensor[(14, 10, 12), float32] */;
  %1161 = shape_of(%1159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1162 = cast(%1159, dtype="float32") /* ty=Tensor[(14, 10, 12), float32] */;
  %1163 = dyn.reshape(%1160, %1161, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1164 = maximum(%1162, %1163) /* ty=Tensor[(14, 10, 12), float32] */;
  %1165 = cast(%1164, dtype="float64") /* ty=Tensor[(14, 10, 12), float64] */;
  %1166 = rsqrt(%1165) /* ty=Tensor[(14, 10, 12), float64] */;
  (%1166,)
}

def @func_5741(%var_5737: Tensor[(2184), uint8], %var_5738: Tensor[(198), uint32], %var_5739: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(16, 11, 3), float64], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool]) {
  %1167 = cast(meta[relay.Constant][108] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1168 = reshape(%1167, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
  %1169 = @func_5699() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1170 = cast(%var_5737, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %1171 = cast(%var_5738, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %1172 = cast(%var_5739, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1173 = reshape(%1170, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %1174 = reshape(%1171, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %1175 = reshape(%1172, newshape=[1, 60]) /* ty=Tensor[(1, 60), bool] */;
  %1176 = @func_5345(%1173, %1174, %1175) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) */;
  %1177 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
  %1178 = @func_1377(%1168) /* ty=Tensor[(11, 7, 4), float32] */;
  %1179 = %1169.0;
  %1180 = %1176.1;
  (%1177, %1178, meta[relay.Constant][108] /* ty=Tensor[(308), float32] */, %1179, %1180, %var_5737, %var_5738, %var_5739)
}

def @func_4717(%var_4699: Tensor[(2925), int64], %var_4700: Tensor[(192), uint16], %var_4702: Tensor[(2925), int64], %var_4712: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(2925), int32], Tensor[(60), bool], Tensor[(60), bool]) {
  %1181 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %1182 = cast(%var_4699, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %1183 = cast(%var_4700, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %1184 = reshape(%1182, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), int64] */;
  %1185 = reshape(%1183, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %1186 = @func_2616(%1184, %1185) /* ty=(Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(15, 13, 15), int16], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(15, 13, 15), float32]) */;
  %1187 = cast(%var_4702, dtype="int32") /* ty=Tensor[(2925), int32] */;
  %1188 = shape_of(%var_4699, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1189 = cast(%var_4699, dtype="int32") /* ty=Tensor[(2925), int32] */;
  %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1191 = cast(%var_4712, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1192 = reshape(%1191, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %1193 = @func_4307(%1192) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) */;
  %1194 = %1181.0;
  %1195 = %1186.0;
  %1196 = left_shift(%1189, %1190) /* ty=Tensor[(2925), int32] */;
  %1197 = %1193.3;
  (%1194, %1195, %var_4700, %1196, %1197, %var_4712)
}

def @func_10852() -> (Tensor[(11, 7, 13), bool],) {
  %1198 = cast(meta[relay.Constant][109] /* ty=Tensor[(11, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(11, 7, 13), float64] */;
  %1199 = rsqrt(%1198) /* ty=Tensor[(11, 7, 13), float64] */;
  %1200 = cast(meta[relay.Constant][109] /* ty=Tensor[(11, 7, 13), float64] */, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
  %1201 = shape_of(%1199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1202 = cast(%1199, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
  %1203 = dyn.reshape(%1200, %1201, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1204 = logical_and(%1202, %1203) /* ty=Tensor[(11, 7, 13), bool] */;
  (%1204,)
}

def @func_345(%var_337: uint64, %var_338: Tensor[(7, 1), uint64]) -> (Tensor[(7, 1), uint64],) {
  %1205 = cast(%var_337, dtype="uint64") /* ty=uint64 */;
  %1206 = cast(%var_338, dtype="uint64") /* ty=Tensor[(7, 1), uint64] */;
  %1207 = bitwise_and(%1205, %1206) /* ty=Tensor[(7, 1), uint64] */;
  (%1207,)
}

def @func_5667(%var_5626: Tensor[(198), uint32], %var_5628: int8, %var_5629: Tensor[(7, 84), uint8], %var_5634: Tensor[(104), int32]) -> (Tensor[(16, 11, 3), float32], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool], int8, Tensor[(7, 84), uint8], Tensor[(120), float64], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) {
  %1208 = cast(%var_5626, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %1209 = cast(meta[relay.Constant][110] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1210 = cast(%var_5628, dtype="int8") /* ty=int8 */;
  %1211 = cast(%var_5629, dtype="uint8") /* ty=Tensor[(7, 84), uint8] */;
  %1212 = cast(meta[relay.Constant][111] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1213 = reshape(%1208, newshape=[3, 66]) /* ty=Tensor[(3, 66), uint32] */;
  %1214 = reshape(%1209, newshape=[60, 1]) /* ty=Tensor[(60, 1), bool] */;
  %1215 = reshape(%1210, newshape=[]) /* ty=int8 */;
  %1216 = reshape(%1211, newshape=[14, 42]) /* ty=Tensor[(14, 42), uint8] */;
  %1217 = reshape(%1212, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %1218 = @func_5546(%1213, %1214, %1215, %1216, %1217) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(12, 11, 6), bool], Tensor[(3, 66), uint32], Tensor[(60, 1), bool], Tensor[(832, 1), float32], Tensor[(2184), uint8], int8, Tensor[(14, 42), uint8], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(120), float64]) */;
  %1219 = cast(%var_5634, dtype="int32") /* ty=Tensor[(104), int32] */;
  %1220 = reshape(%1219, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), int32] */;
  %1221 = @func_4795() /* ty=Tensor[(16, 11, 3), float32] */;
  %1222 = %1218.5;
  %1223 = @func_995(%1220) /* ty=Tensor[(13, 2, 4), bool] */;
  (%1221, %1222, %var_5626, meta[relay.Constant][110] /* ty=Tensor[(60), bool] */, %var_5628, %var_5629, meta[relay.Constant][111] /* ty=Tensor[(120), float64] */, %1223, %var_5634)
}

def @func_3264(%var_3240: int64, %var_3241: Tensor[(9, 14, 8), int64]) -> (Tensor[(9, 14, 8), bool], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) {
  %1224 = cast(%var_3240, dtype="bool") /* ty=bool */;
  %1225 = cast(%var_3241, dtype="bool") /* ty=Tensor[(9, 14, 8), bool] */;
  %1226 = cast(meta[relay.Constant][112] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %1227 = cast(meta[relay.Constant][113] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1228 = reshape(%1226, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %1229 = reshape(%1227, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1230 = @func_735(%1228, %1229) /* ty=(Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) */;
  %1231 = greater_equal(%1224, %1225) /* ty=Tensor[(9, 14, 8), bool] */;
  %1232 = %1230.1;
  (%1231, %1232, meta[relay.Constant][112] /* ty=Tensor[(154, 6), float64] */, meta[relay.Constant][113] /* ty=Tensor[(832), float32] */)
}

def @func_11334(%var_11317: Tensor[(924), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(924), float64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) {
  %1233 = @func_7146() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1234 = cast(%var_11317, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1235 = cast(meta[relay.Constant][114] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1236 = reshape(%1234, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1237 = reshape(%1235, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1238 = @func_1135(%1236, %1237) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %1239 = %1233.0;
  %1240 = %1238.4;
  %1241 = @func_6632() /* ty=Tensor[(16, 11, 3), float32] */;
  (%1239, %1240, %var_11317, meta[relay.Constant][114] /* ty=Tensor[(832), float32] */, %1241)
}

def @func_5345(%var_5323: Tensor[(2184), uint8], %var_5324: Tensor[(198), uint32], %var_5325: Tensor[(1, 60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) {
  %1242 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %1243 = cast(%var_5323, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %1244 = cast(%var_5323, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %1245 = cast(%var_5324, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %1246 = cast(%var_5325, dtype="bool") /* ty=Tensor[(1, 60), bool] */;
  %1247 = cast(meta[relay.Constant][115] /* ty=Tensor[(416, 2), float32] */, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
  %1248 = reshape(%1243, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %1249 = reshape(%1244, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %1250 = reshape(%1245, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %1251 = reshape(%1246, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %1252 = reshape(%1247, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1253 = @func_1569(%1248, %1249, %1250, %1251, %1252) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
  %1254 = %1242.0;
  %1255 = %1253.0;
  (%1254, %1255, %var_5323, %var_5324, %var_5325, meta[relay.Constant][115] /* ty=Tensor[(416, 2), float32] */)
}

def @func_7314() -> (Tensor[(16, 11, 3), float64],) {
  %1256 = @func_5681() /* ty=Tensor[(16, 11, 3), float64] */;
  (%1256,)
}

def @func_2616(%var_2547: Tensor[(15, 13, 15), int64], %var_2560: Tensor[(192), uint16]) -> (Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(15, 13, 15), int16], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(15, 13, 15), float32]) {
  %1257 = cast(%var_2560, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %1258 = cast(meta[relay.Constant][116] /* ty=Tensor[(960), uint16] */, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %1259 = reshape(%1257, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), uint16] */;
  %1260 = reshape(%1258, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), uint16] */;
  %1261 = cast(-2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1262 = cast(%var_2547, dtype="int64") /* ty=Tensor[(15, 13, 15), int64] */;
  %1263 = left_shift(%1261, %1262) /* ty=Tensor[(15, 13, 15), int64] */;
  %1264 = cast(%1263, dtype="float32") /* ty=Tensor[(15, 13, 15), float32] */;
  %1265 = cast(-2 /* ty=int64 */, dtype="float32") /* ty=float32 */;
  %1266 = subtract(%1264, %1265) /* ty=Tensor[(15, 13, 15), float32] */;
  %1267 = cast(%1266, dtype="int16") /* ty=Tensor[(15, 13, 15), int16] */;
  %1268 = shape_of(%var_2547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1269 = cast(%var_2547, dtype="int16") /* ty=Tensor[(15, 13, 15), int16] */;
  %1270 = dyn.reshape(%1267, %1268, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1271 = cast(meta[relay.Constant][117] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %1272 = cast(meta[relay.Constant][118] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1273 = reshape(%1271, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
  %1274 = reshape(%1272, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
  %1275 = @func_958(%1273, %1274) /* ty=(Tensor[(3, 2, 10), bool],) */;
  %1276 = cast(meta[relay.Constant][119] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %1277 = reshape(%1276, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
  %1278 = cast(%var_2547, dtype="float32") /* ty=Tensor[(15, 13, 15), float32] */;
  %1279 = @func_1602(%1259, %1260) /* ty=Tensor[(16, 5, 12), uint16] */;
  %1280 = add(%1269, %1270) /* ty=Tensor[(15, 13, 15), int16] */;
  %1281 = %1275.0;
  %1282 = @func_1377(%1277) /* ty=Tensor[(11, 7, 4), float32] */;
  %1283 = exp(%1278) /* ty=Tensor[(15, 13, 15), float32] */;
  (%1279, %var_2560, meta[relay.Constant][116] /* ty=Tensor[(960), uint16] */, %1280, %1281, meta[relay.Constant][117] /* ty=Tensor[(30), bool] */, meta[relay.Constant][118] /* ty=Tensor[(60), bool] */, %1282, meta[relay.Constant][119] /* ty=Tensor[(308), float32] */, %1283)
}

def @func_5598() -> Tensor[(16, 11, 3), float32] {
  @func_4795() /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_6965(%var_6958: int16, %var_6959: Tensor[(10, 14, 13), int16]) -> (Tensor[(10, 14, 13), int16],) {
  %1284 = cast(%var_6958, dtype="int16") /* ty=int16 */;
  %1285 = cast(%var_6959, dtype="int16") /* ty=Tensor[(10, 14, 13), int16] */;
  %1286 = left_shift(%1284, %1285) /* ty=Tensor[(10, 14, 13), int16] */;
  (%1286,)
}

def @func_4352() -> (Tensor[(16, 11, 3), float64],) {
  %1287 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
  (%1287,)
}

def @func_4025(%var_4006: Tensor[(5, 15, 13), int16], %var_4007: Tensor[(5, 15, 13), int16]) -> (Tensor[(5, 15, 13), bool], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) {
  %1288 = cast(%var_4007, dtype="bool") /* ty=Tensor[(5, 15, 13), bool] */;
  %1289 = shape_of(%var_4006, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1290 = cast(%var_4006, dtype="bool") /* ty=Tensor[(5, 15, 13), bool] */;
  %1291 = dyn.reshape(%1288, %1289, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1292 = cast(meta[relay.Constant][120] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %1293 = reshape(%1292, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
  %1294 = @func_2499(%1293) /* ty=(Tensor[(15, 2, 9), float32],) */;
  %1295 = not_equal(%1290, %1291) /* ty=Tensor[(5, 15, 13), bool] */;
  %1296 = %1294.0;
  (%1295, %1296, meta[relay.Constant][120] /* ty=Tensor[(270), float32] */)
}

def @func_8576() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) {
  %1297 = @func_6105() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1298 = @func_6140() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) */;
  %1299 = %1297.0;
  %1300 = %1298.1;
  (%1299, %1300)
}

def @func_8027(%var_7976: int16, %var_8015: Tensor[(120), float64]) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], int16, Tensor[(1820), uint64], Tensor[(15, 2, 9), float32], Tensor[(270), float32], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) {
  %1301 = @func_5900() /* ty=(Tensor[(60), bool], Tensor[(60), bool], Tensor[(104), int32], Tensor[(16, 11, 3), float32]) */;
  %1302 = cast(%var_7976, dtype="int16") /* ty=int16 */;
  %1303 = cast(meta[relay.Constant][121] /* ty=Tensor[(1820), int16] */, dtype="int16") /* ty=Tensor[(1820), int16] */;
  %1304 = reshape(%1302, newshape=[]) /* ty=int16 */;
  %1305 = reshape(%1303, newshape=[10, 14, 13]) /* ty=Tensor[(10, 14, 13), int16] */;
  %1306 = @func_6965(%1304, %1305) /* ty=(Tensor[(10, 14, 13), int16],) */;
  %1307 = %1306.0;
  %1308 = cast(%1307, dtype="uint64") /* ty=Tensor[(10, 14, 13), uint64] */;
  %1309 = shape_of(meta[relay.Constant][121] /* ty=Tensor[(1820), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1310 = cast(meta[relay.Constant][121] /* ty=Tensor[(1820), int16] */, dtype="uint64") /* ty=Tensor[(1820), uint64] */;
  %1311 = dyn.reshape(%1308, %1309, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1312 = cast(meta[relay.Constant][122] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %1313 = reshape(%1312, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
  %1314 = @func_2499(%1313) /* ty=(Tensor[(15, 2, 9), float32],) */;
  %1315 = cast(%var_8015, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1316 = cast(%var_8015, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1317 = reshape(%1315, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
  %1318 = reshape(%1316, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
  %1319 = @func_1655(%1317, %1318) /* ty=(Tensor[(8, 3, 5), float64], Tensor[(8, 3, 5), float32]) */;
  %1320 = %1301.3;
  %1321 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
  %1322 = add(%1310, %1311) /* ty=Tensor[(1820), uint64] */;
  %1323 = %1314.0;
  %1324 = %1319.0;
  (%1320, %1321, %var_7976, %1322, %1323, meta[relay.Constant][122] /* ty=Tensor[(270), float32] */, %1324, %var_8015)
}

def @func_5900() -> (Tensor[(60), bool], Tensor[(60), bool], Tensor[(104), int32], Tensor[(16, 11, 3), float32]) {
  %1325 = cast(meta[relay.Constant][123] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1326 = cast(meta[relay.Constant][124] /* ty=Tensor[(104), int32] */, dtype="int32") /* ty=Tensor[(104), int32] */;
  %1327 = reshape(%1325, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %1328 = reshape(%1326, newshape=[104]) /* ty=Tensor[(104), int32] */;
  %1329 = @func_4566(%1327, %1328) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(416, 2), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32], Tensor[(15, 2, 9), float32], Tensor[(270, 1), float32], Tensor[(60), bool], Tensor[(2184), uint8]) */;
  %1330 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
  %1331 = cast(meta[relay.Constant][125] /* ty=Tensor[(16, 11, 3), float32] */, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
  %1332 = shape_of(%1330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1333 = cast(%1330, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
  %1334 = dyn.reshape(%1331, %1332, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1335 = floor_mod(%1333, %1334) /* ty=Tensor[(16, 11, 3), float64] */;
  %1336 = cast(%1335, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %1337 = %1329.9;
  %1338 = log2(%1336) /* ty=Tensor[(16, 11, 3), float32] */;
  (%1337, meta[relay.Constant][123] /* ty=Tensor[(60), bool] */, meta[relay.Constant][124] /* ty=Tensor[(104), int32] */, %1338)
}

def @func_7624(%var_7613: Tensor[(960), uint16], %var_7620: Tensor[(1, 104), int32]) -> (Tensor[(60), bool], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(13, 2, 4), bool], Tensor[(1, 104), int32]) {
  %1339 = @func_5900() /* ty=(Tensor[(60), bool], Tensor[(60), bool], Tensor[(104), int32], Tensor[(16, 11, 3), float32]) */;
  %1340 = cast(%var_7613, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %1341 = reshape(%1340, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %1342 = @func_4530(%1341) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(16, 11, 3), float32]) */;
  %1343 = cast(%var_7620, dtype="int32") /* ty=Tensor[(1, 104), int32] */;
  %1344 = reshape(%1343, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), int32] */;
  %1345 = %1339.0;
  %1346 = %1342.2;
  %1347 = @func_995(%1344) /* ty=Tensor[(13, 2, 4), bool] */;
  (%1345, %1346, %var_7613, %1347, %var_7620)
}

def @func_8530(%var_8519: Tensor[(504), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(7, 6, 12), uint64], Tensor[(504), bool]) {
  %1348 = cast(%var_8519, dtype="bool") /* ty=Tensor[(504), bool] */;
  %1349 = reshape(%1348, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), bool] */;
  %1350 = @func_5598() /* ty=Tensor[(16, 11, 3), float32] */;
  %1351 = @func_7751(%1349) /* ty=Tensor[(7, 6, 12), uint64] */;
  (%1350, %1351, %var_8519)
}

def @func_6506() -> Tensor[(16, 11, 3), float64] {
  @func_6011() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_2391(%var_2365: int8, %var_2366: Tensor[(12, 1, 6), int8], %var_2371: Tensor[(12, 11, 6), int8], %var_2378: Tensor[(320), bool], %var_2379: Tensor[(924), float64]) -> (Tensor[(12, 1, 6), int8], Tensor[(12, 11, 6), bool], Tensor[(924), float64], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(1, 104), int32]) {
  %1352 = cast(%var_2365, dtype="int8") /* ty=int8 */;
  %1353 = cast(%var_2366, dtype="int8") /* ty=Tensor[(12, 1, 6), int8] */;
  %1354 = cast(%var_2366, dtype="bool") /* ty=Tensor[(12, 1, 6), bool] */;
  %1355 = cast(%var_2371, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
  %1356 = cast(%var_2378, dtype="bool") /* ty=Tensor[(320), bool] */;
  %1357 = cast(%var_2379, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1358 = cast(meta[relay.Constant][126] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1359 = cast(meta[relay.Constant][127] /* ty=Tensor[(1, 104), int32] */, dtype="int32") /* ty=Tensor[(1, 104), int32] */;
  %1360 = reshape(%1356, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), bool] */;
  %1361 = reshape(%1357, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1362 = reshape(%1358, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1363 = reshape(%1359, newshape=[104]) /* ty=Tensor[(104), int32] */;
  %1364 = @func_1809(%1360, %1361, %1362, %1363) /* ty=(Tensor[(16, 4, 5), bool], Tensor[(7, 1), uint64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) */;
  %1365 = bitwise_and(%1352, %1353) /* ty=Tensor[(12, 1, 6), int8] */;
  %1366 = logical_and(%1354, %1355) /* ty=Tensor[(12, 11, 6), bool] */;
  %1367 = %1364.2;
  (%1365, %1366, %1367, %var_2378, %var_2379, meta[relay.Constant][126] /* ty=Tensor[(832), float32] */, meta[relay.Constant][127] /* ty=Tensor[(1, 104), int32] */)
}

def @func_7829(%var_7791: Tensor[(960), uint16], %var_7792: Tensor[(320), bool], %var_7793: Tensor[(832), float32], %var_7815: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(832), float32], Tensor[(1, 924), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(1, 960), float64]) {
  %1368 = cast(meta[relay.Constant][128] /* ty=Tensor[(1, 924), float64] */, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
  %1369 = cast(%var_7793, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1370 = reshape(%1368, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1371 = reshape(%1369, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1372 = @func_1135(%1370, %1371) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %1373 = cast(meta[relay.Constant][129] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %1374 = cast(%var_7815, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1375 = reshape(%1373, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
  %1376 = reshape(%1374, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
  %1377 = @func_958(%1375, %1376) /* ty=(Tensor[(3, 2, 10), bool],) */;
  %1378 = cast(%var_7791, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %1379 = cast(%var_7792, dtype="bool") /* ty=Tensor[(320), bool] */;
  %1380 = cast(%var_7793, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1381 = reshape(%1378, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
  %1382 = reshape(%1379, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %1383 = reshape(%1380, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1384 = @func_4171(%1381, %1382, %1383) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) */;
  %1385 = %1384.3;
  %1386 = cast(%1385, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
  %1387 = @func_6781() /* ty=Tensor[(16, 11, 3), float64] */;
  %1388 = %1372.5;
  %1389 = %1377.0;
  %1390 = log(%1386) /* ty=Tensor[(1, 960), float64] */;
  (%1387, %var_7791, %var_7792, %var_7793, %1388, meta[relay.Constant][128] /* ty=Tensor[(1, 924), float64] */, %1389, meta[relay.Constant][129] /* ty=Tensor[(30), bool] */, %var_7815, %1390)
}

def @func_8798() -> Tensor[(16, 11, 3), float64] {
  @func_6506() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_995(%var_976: Tensor[(13, 2, 4), int32]) -> Tensor[(13, 2, 4), bool] {
  %1391 = cast(meta[relay.Constant][130] /* ty=Tensor[(13, 2, 4), int32] */, dtype="bool") /* ty=Tensor[(13, 2, 4), bool] */;
  %1392 = shape_of(%var_976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1393 = cast(%var_976, dtype="bool") /* ty=Tensor[(13, 2, 4), bool] */;
  %1394 = dyn.reshape(%1391, %1392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1393, %1394) /* ty=Tensor[(13, 2, 4), bool] */
}

def @func_5398() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) {
  %1395 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %1396 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
  %1397 = %1395.0;
  (%1396, %1397)
}

def @func_9697(%var_9688: Tensor[(160, 2), bool], %var_9689: Tensor[(832), float32], %var_9690: Tensor[(1, 2184), uint8], %var_9691: Tensor[(99, 2), uint32], %var_9693: Tensor[(96, 2), uint16]) -> (Tensor[(16, 11, 3), float64], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32], Tensor[(1, 2184), uint8], Tensor[(99, 2), uint32], Tensor[(60, 1), bool], Tensor[(96, 2), uint16]) {
  %1398 = cast(meta[relay.Constant][131] /* ty=Tensor[(960), uint16] */, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %1399 = cast(%var_9688, dtype="bool") /* ty=Tensor[(160, 2), bool] */;
  %1400 = cast(%var_9689, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1401 = cast(%var_9690, dtype="uint8") /* ty=Tensor[(1, 2184), uint8] */;
  %1402 = cast(%var_9691, dtype="uint32") /* ty=Tensor[(99, 2), uint32] */;
  %1403 = cast(meta[relay.Constant][132] /* ty=Tensor[(60, 1), bool] */, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %1404 = cast(%var_9693, dtype="uint16") /* ty=Tensor[(96, 2), uint16] */;
  %1405 = reshape(%1398, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
  %1406 = reshape(%1399, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %1407 = reshape(%1400, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1408 = reshape(%1401, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %1409 = reshape(%1402, newshape=[1, 198]) /* ty=Tensor[(1, 198), uint32] */;
  %1410 = reshape(%1403, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %1411 = reshape(%1404, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %1412 = @func_6230(%1405, %1406, %1407, %1408, %1409, %1410, %1411) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(1, 960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16]) */;
  %1413 = @func_5805() /* ty=Tensor[(16, 11, 3), float64] */;
  %1414 = %1412.9;
  (%1413, %1414, meta[relay.Constant][131] /* ty=Tensor[(960), uint16] */, %var_9688, %var_9689, %var_9690, %var_9691, meta[relay.Constant][132] /* ty=Tensor[(60, 1), bool] */, %var_9693)
}

def @func_10297() -> Tensor[(588, 1), float64] {
  %1415 = @func_6157() /* ty=(Tensor[(588, 1), uint8],) */;
  %1416 = %1415.0;
  %1417 = cast(%1416, dtype="float64") /* ty=Tensor[(588, 1), float64] */;
  cos(%1417) /* ty=Tensor[(588, 1), float64] */
}

def @func_8333() -> (Tensor[(16, 11, 3), float32], Tensor[(416, 2), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float64]) {
  %1418 = @func_7773() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) */;
  %1419 = cast(meta[relay.Constant][133] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1420 = cast(meta[relay.Constant][134] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1421 = reshape(%1419, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1422 = reshape(%1420, newshape=[416, 2]) /* ty=Tensor[(416, 2), float32] */;
  %1423 = @func_8272(%1421, %1422) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(7), uint64], Tensor[(924), float64], Tensor[(416, 2), float32]) */;
  %1424 = @func_7314() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1425 = %1418.0;
  %1426 = %1423.3;
  %1427 = %1424.0;
  (%1425, %1426, meta[relay.Constant][133] /* ty=Tensor[(924), float64] */, meta[relay.Constant][134] /* ty=Tensor[(832), float32] */, %1427)
}

def @func_4592() -> Tensor[(16, 11, 3), float32] {
  %1428 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %1428.0
}

def @func_7645() -> (Tensor[(60), bool],) {
  %1429 = @func_7522() /* ty=(Tensor[(60), bool],) */;
  %1430 = %1429.0;
  (%1430,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4025(%var_4006: Tensor[(5, 15, 13), int16], %var_4007: Tensor[(5, 15, 13), int16]) -> (Tensor[(5, 15, 13), bool], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) {
  %0 = cast(%var_4007, dtype="bool") /* ty=Tensor[(5, 15, 13), bool] */;
  %1 = shape_of(%var_4006, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_4006, dtype="bool") /* ty=Tensor[(5, 15, 13), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %5 = reshape(%4, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
  %6 = @func_2499(%5) /* ty=(Tensor[(15, 2, 9), float32],) */;
  %7 = not_equal(%2, %3) /* ty=Tensor[(5, 15, 13), bool] */;
  %8 = %6.0;
  (%7, %8, meta[relay.Constant][0] /* ty=Tensor[(270), float32] */)
}

def @func_1809(%var_1757: Tensor[(16, 4, 5), bool], %var_1763: Tensor[(924), float64], %var_1764: Tensor[(832), float32], %var_1773: Tensor[(104), int32]) -> (Tensor[(16, 4, 5), bool], Tensor[(7, 1), uint64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) {
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 4, 5), bool] */, dtype="bool") /* ty=Tensor[(16, 4, 5), bool] */;
  %10 = shape_of(%var_1757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%var_1757, dtype="bool") /* ty=Tensor[(16, 4, 5), bool] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %13 = cast(%var_1763, dtype="float64") /* ty=Tensor[(924), float64] */;
  %14 = cast(%var_1764, dtype="float32") /* ty=Tensor[(832), float32] */;
  %15 = reshape(%13, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %16 = reshape(%14, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %17 = @func_1135(%15, %16) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %18 = cast(%var_1773, dtype="int32") /* ty=Tensor[(104), int32] */;
  %19 = reshape(%18, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), int32] */;
  %20 = logical_or(%11, %12) /* ty=Tensor[(16, 4, 5), bool] */;
  %21 = %17.0;
  %22 = @func_995(%19) /* ty=Tensor[(13, 2, 4), bool] */;
  (%20, %21, %var_1763, %var_1764, %22, %var_1773)
}

def @func_11076(%var_11074: Tensor[(154, 6), float64], %var_11075: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) {
  @func_11072(%var_11074, %var_11075) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) */
}

def @func_10409(%var_10404: Tensor[(960), uint16], %var_10405: Tensor[(2184), uint8], %var_10406: Tensor[(1, 198), uint32], %var_10407: Tensor[(320), bool], %var_10408: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(104), int32], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(104), int32]) {
  @func_10402(%var_10404, %var_10405, %var_10406, %var_10407, %var_10408) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(104), int32], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(104), int32]) */
}

def @func_9367() -> (Tensor[(9, 8, 9), uint64],) {
  %28 = fn () -> (Tensor[(9, 8, 9), uint64],) {
    %23 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 8, 9), uint64] */, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
    %24 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(9, 8, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 8, 9), uint64] */, dtype="uint64") /* ty=Tensor[(9, 8, 9), uint64] */;
    %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %27 = bitwise_xor(%25, %26) /* ty=Tensor[(9, 8, 9), uint64] */;
    (%27,)
  };
  %28() /* ty=(Tensor[(9, 8, 9), uint64],) */
}

def @func_6781() -> Tensor[(16, 11, 3), float64] {
  @func_5805() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_8577() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) {
  %33 = fn () -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) {
    %29 = @func_6105() /* ty=(Tensor[(16, 11, 3), float64],) */;
    %30 = @func_6140() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) */;
    %31 = %29.0;
    %32 = %30.1;
    (%31, %32)
  };
  %33() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) */
}

def @func_4533(%var_4531: Tensor[(960), uint16]) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(16, 11, 3), float32]) {
  @func_4530(%var_4531) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(16, 11, 3), float32]) */
}

def @func_6011() -> Tensor[(16, 11, 3), float64] {
  %34 = @func_4892() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %34.0
}

def @func_8227(%var_8221: Tensor[(30), bool], %var_8222: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) {
  %35 = cast(%var_8221, dtype="bool") /* ty=Tensor[(30), bool] */;
  %36 = cast(%var_8222, dtype="bool") /* ty=Tensor[(60), bool] */;
  %37 = reshape(%35, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
  %38 = reshape(%36, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
  %39 = @func_958(%37, %38) /* ty=(Tensor[(3, 2, 10), bool],) */;
  %40 = @func_6011() /* ty=Tensor[(16, 11, 3), float64] */;
  %41 = %39.0;
  (%40, %41, %var_8221, %var_8222)
}

def @func_6968(%var_6966: int16, %var_6967: Tensor[(10, 14, 13), int16]) -> (Tensor[(10, 14, 13), int16],) {
  %45 = fn (%var_6958: int16, %var_6959: Tensor[(10, 14, 13), int16]) -> (Tensor[(10, 14, 13), int16],) {
    %42 = cast(%var_6958, dtype="int16") /* ty=int16 */;
    %43 = cast(%var_6959, dtype="int16") /* ty=Tensor[(10, 14, 13), int16] */;
    %44 = left_shift(%42, %43) /* ty=Tensor[(10, 14, 13), int16] */;
    (%44,)
  };
  %45(%var_6966, %var_6967) /* ty=(Tensor[(10, 14, 13), int16],) */
}

def @func_11020() -> Tensor[(16, 11, 3), float64] {
  %46 = fn () -> Tensor[(16, 11, 3), float64] {
    @func_5805() /* ty=Tensor[(16, 11, 3), float64] */
  };
  %46() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_10835() -> (Tensor[(16, 11, 3), float32], Tensor[(9, 8, 9), uint64]) {
  @func_10833() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(9, 8, 9), uint64]) */
}

def @func_8275(%var_8273: Tensor[(924), float64], %var_8274: Tensor[(416, 2), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(7), uint64], Tensor[(924), float64], Tensor[(416, 2), float32]) {
  %54 = fn (%var_8265: Tensor[(924), float64], %var_8266: Tensor[(416, 2), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(7), uint64], Tensor[(924), float64], Tensor[(416, 2), float32]) {
    %47 = cast(%var_8265, dtype="float64") /* ty=Tensor[(924), float64] */;
    %48 = cast(%var_8266, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
    %49 = reshape(%47, newshape=[924]) /* ty=Tensor[(924), float64] */;
    %50 = reshape(%48, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %51 = @func_1135(%49, %50) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
    %52 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
    %53 = %51.2;
    (%52, %53, %var_8265, %var_8266)
  };
  %54(%var_8273, %var_8274) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(7), uint64], Tensor[(924), float64], Tensor[(416, 2), float32]) */
}

def @func_4352() -> (Tensor[(16, 11, 3), float64],) {
  %55 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
  (%55,)
}

def @func_1139(%var_1137: Tensor[(924), float64], %var_1138: Tensor[(832), float32]) -> (Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) {
  @func_1135(%var_1137, %var_1138) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */
}

def @func_4309(%var_4308: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) {
  %64 = fn (%var_4296: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) {
    %56 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
    %57 = cast(meta[relay.Constant][4] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
    %58 = cast(%var_4296, dtype="bool") /* ty=Tensor[(60), bool] */;
    %59 = reshape(%57, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
    %60 = reshape(%58, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
    %61 = @func_958(%59, %60) /* ty=(Tensor[(3, 2, 10), bool],) */;
    %62 = %56.0;
    %63 = %61.0;
    (%62, %63, meta[relay.Constant][4] /* ty=Tensor[(30), bool] */, %var_4296)
  };
  %64(%var_4308) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) */
}

def @func_4176(%var_4173: Tensor[(1, 960), uint16], %var_4174: Tensor[(320), bool], %var_4175: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) {
  @func_4171(%var_4173, %var_4174, %var_4175) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) */
}

def @func_1815(%var_1811: Tensor[(16, 4, 5), bool], %var_1812: Tensor[(924), float64], %var_1813: Tensor[(832), float32], %var_1814: Tensor[(104), int32]) -> (Tensor[(16, 4, 5), bool], Tensor[(7, 1), uint64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) {
  @func_1809(%var_1811, %var_1812, %var_1813, %var_1814) /* ty=(Tensor[(16, 4, 5), bool], Tensor[(7, 1), uint64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) */
}

def @func_5681() -> Tensor[(16, 11, 3), float64] {
  @func_4205() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_10402(%var_10379: Tensor[(960), uint16], %var_10380: Tensor[(2184), uint8], %var_10381: Tensor[(1, 198), uint32], %var_10394: Tensor[(320), bool], %var_10396: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(104), int32], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(104), int32]) {
  %65 = @func_5353() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %66 = cast(%var_10379, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %67 = cast(%var_10380, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %68 = cast(%var_10381, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
  %69 = cast(meta[relay.Constant][5] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %70 = reshape(%66, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %71 = reshape(%67, newshape=[2184, 1]) /* ty=Tensor[(2184, 1), uint8] */;
  %72 = reshape(%68, newshape=[1, 198]) /* ty=Tensor[(1, 198), uint32] */;
  %73 = reshape(%69, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %74 = @func_6605(%70, %71, %72, %73) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184, 832), float32], Tensor[(192, 1), float32], Tensor[(16, 11, 3), float64]) */;
  %75 = cast(%var_10394, dtype="bool") /* ty=Tensor[(320), bool] */;
  %76 = cast(meta[relay.Constant][6] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %77 = cast(%var_10396, dtype="float32") /* ty=Tensor[(832), float32] */;
  %78 = cast(meta[relay.Constant][7] /* ty=Tensor[(104), int32] */, dtype="int32") /* ty=Tensor[(104), int32] */;
  %79 = reshape(%75, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), bool] */;
  %80 = reshape(%76, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %81 = reshape(%77, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %82 = reshape(%78, newshape=[104]) /* ty=Tensor[(104), int32] */;
  %83 = @func_1809(%79, %80, %81, %82) /* ty=(Tensor[(16, 4, 5), bool], Tensor[(7, 1), uint64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) */;
  %84 = %65.0;
  %85 = %74.2;
  %86 = %83.5;
  (%84, %85, %var_10379, %var_10380, %var_10381, meta[relay.Constant][5] /* ty=Tensor[(60), bool] */, %86, %var_10394, meta[relay.Constant][6] /* ty=Tensor[(924), float64] */, %var_10396, meta[relay.Constant][7] /* ty=Tensor[(104), int32] */)
}

def @func_6634() -> Tensor[(16, 11, 3), float32] {
  @func_6632() /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_8107(%var_8105: Tensor[(924), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(104, 8), float32], Tensor[(945), uint16]) {
  @func_8104(%var_8105) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(104, 8), float32], Tensor[(945), uint16]) */
}

def @func_6360(%var_6357: float64, %var_6358: Tensor[(3, 2, 4), float64], %var_6359: Tensor[(30, 4), float64]) -> (Tensor[(3, 2, 4), float64], Tensor[(16, 11, 3), float32], Tensor[(1120), float64], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(588), uint8], Tensor[(30, 4), float64], Tensor[(16, 4, 13), float64], Tensor[(832), float32]) {
  %108 = fn (%var_6317: float64, %var_6318: Tensor[(3, 2, 4), float64], %var_6345: Tensor[(30, 4), float64]) -> (Tensor[(3, 2, 4), float64], Tensor[(16, 11, 3), float32], Tensor[(1120), float64], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(588), uint8], Tensor[(30, 4), float64], Tensor[(16, 4, 13), float64], Tensor[(832), float32]) {
    %87 = cast(%var_6317, dtype="float64") /* ty=float64 */;
    %88 = cast(%var_6318, dtype="float64") /* ty=Tensor[(3, 2, 4), float64] */;
    %89 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
    %90 = cast(meta[relay.Constant][8] /* ty=Tensor[(198), uint32] */, dtype="uint32") /* ty=Tensor[(198), uint32] */;
    %91 = cast(meta[relay.Constant][9] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
    %92 = cast(%var_6317, dtype="int8") /* ty=int8 */;
    %93 = cast(meta[relay.Constant][10] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %94 = cast(%var_6345, dtype="float64") /* ty=Tensor[(30, 4), float64] */;
    %95 = reshape(%90, newshape=[3, 66]) /* ty=Tensor[(3, 66), uint32] */;
    %96 = reshape(%91, newshape=[60, 1]) /* ty=Tensor[(60, 1), bool] */;
    %97 = reshape(%92, newshape=[]) /* ty=int8 */;
    %98 = reshape(%93, newshape=[14, 42]) /* ty=Tensor[(14, 42), uint8] */;
    %99 = reshape(%94, newshape=[120]) /* ty=Tensor[(120), float64] */;
    %100 = @func_5546(%95, %96, %97, %98, %99) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(12, 11, 6), bool], Tensor[(3, 66), uint32], Tensor[(60, 1), bool], Tensor[(832, 1), float32], Tensor[(2184), uint8], int8, Tensor[(14, 42), uint8], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(120), float64]) */;
    %101 = cast(meta[relay.Constant][11] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
    %102 = reshape(%101, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float32] */;
    %103 = @func_303(%102) /* ty=(Tensor[(16, 4, 13), float32], Tensor[(16, 4, 13), float64]) */;
    %104 = power(%87, %88) /* ty=Tensor[(3, 2, 4), float64] */;
    %105 = %89.0;
    %106 = %100.9;
    %107 = %103.1;
    (%104, %105, %106, meta[relay.Constant][8] /* ty=Tensor[(198), uint32] */, meta[relay.Constant][9] /* ty=Tensor[(60), bool] */, meta[relay.Constant][10] /* ty=Tensor[(588), uint8] */, %var_6345, %107, meta[relay.Constant][11] /* ty=Tensor[(832), float32] */)
  };
  %108(%var_6357, %var_6358, %var_6359) /* ty=(Tensor[(3, 2, 4), float64], Tensor[(16, 11, 3), float32], Tensor[(1120), float64], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(588), uint8], Tensor[(30, 4), float64], Tensor[(16, 4, 13), float64], Tensor[(832), float32]) */
}

def @func_8463(%var_8448: int64, %var_8457: Tensor[(6, 11, 12), float64]) -> (Tensor[(6, 11, 12), float32], Tensor[(16, 11, 3), float32], int64, Tensor[(6, 11, 12), uint16]) {
  %109 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 12), float32] */;
  %110 = cast(%var_8448, dtype="int64") /* ty=int64 */;
  %111 = reshape(%110, newshape=[]) /* ty=int64 */;
  %112 = @func_6738(%111) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 4, 13), float32], Tensor[(1008), bool]) */;
  %113 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 11, 12), float32] */, dtype="float64") /* ty=Tensor[(6, 11, 12), float64] */;
  %114 = log(%113) /* ty=Tensor[(6, 11, 12), float64] */;
  %115 = cast(%var_8457, dtype="uint16") /* ty=Tensor[(6, 11, 12), uint16] */;
  %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(%114, dtype="uint16") /* ty=Tensor[(6, 11, 12), uint16] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %119 = sin(%109) /* ty=Tensor[(6, 11, 12), float32] */;
  %120 = %112.0;
  %121 = right_shift(%117, %118) /* ty=Tensor[(6, 11, 12), uint16] */;
  (%119, %120, %var_8448, %121)
}

def @func_10299() -> Tensor[(588, 1), float64] {
  @func_10297() /* ty=Tensor[(588, 1), float64] */
}

def @func_6086(%var_6071: Tensor[(1, 924), float64], %var_6072: Tensor[(1, 832), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64], Tensor[(16, 4, 13), float32], Tensor[(1, 924), float64], Tensor[(1, 832), float32], Tensor[(16, 11, 3), float64]) {
  %122 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %123 = %122.0;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %125 = cast(meta[relay.Constant][13] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %126 = reshape(%124, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), float32] */;
  %127 = reshape(%125, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %128 = @func_4478(%126, %127) /* ty=(Tensor[(16, 11, 3), bool], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64]) */;
  %129 = @func_5353() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %130 = cast(%var_6071, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
  %131 = cast(%var_6072, dtype="float32") /* ty=Tensor[(1, 832), float32] */;
  %132 = reshape(%130, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %133 = reshape(%131, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %134 = @func_735(%132, %133) /* ty=(Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) */;
  %135 = @func_5699() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %136 = %128.0;
  %137 = %129.0;
  %138 = %134.1;
  %139 = %135.0;
  (%123, %136, meta[relay.Constant][13] /* ty=Tensor[(588), uint8] */, %137, %138, %var_6071, %var_6072, %139)
}

def @func_7775() -> (Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) {
  @func_7773() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) */
}

def @func_5353() -> (Tensor[(16, 11, 3), float64],) {
  %140 = @func_4352() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %141 = %140.0;
  (%141,)
}

def @func_8399(%var_8345: Tensor[(8232), uint8], %var_8346: Tensor[(1, 198), uint32], %var_8386: Tensor[(2184), uint8]) -> (Tensor[(270), float32], Tensor[(8232), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(832), int16], Tensor[(416, 2), float32], Tensor[(60), bool], Tensor[(2184), uint8]) {
  %142 = @func_7773() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) */;
  %143 = cast(%var_8345, dtype="uint8") /* ty=Tensor[(8232), uint8] */;
  %144 = cast(%var_8346, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
  %145 = cast(meta[relay.Constant][14] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %146 = cast(meta[relay.Constant][15] /* ty=Tensor[(416, 2), float32] */, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
  %147 = reshape(%143, newshape=[588, 14]) /* ty=Tensor[(588, 14), uint8] */;
  %148 = reshape(%144, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %149 = reshape(%145, newshape=[60, 1]) /* ty=Tensor[(60, 1), bool] */;
  %150 = reshape(%146, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %151 = @func_6917(%147, %148, %149, %150) /* ty=(Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60, 1), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(588, 14), float64]) */;
  %152 = %151.4;
  %153 = cast(meta[relay.Constant][15] /* ty=Tensor[(416, 2), float32] */, dtype="int16") /* ty=Tensor[(416, 2), int16] */;
  %154 = shape_of(%152, dtype="int32") /* ty=Tensor[(1), int32] */;
  %155 = cast(%152, dtype="int16") /* ty=Tensor[(832), int16] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?), int16] */;
  %157 = cast(meta[relay.Constant][15] /* ty=Tensor[(416, 2), float32] */, dtype="float64") /* ty=Tensor[(416, 2), float64] */;
  %158 = erf(%157) /* ty=Tensor[(416, 2), float64] */;
  %159 = cast(%158, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
  %160 = cast(%var_8386, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %161 = cast(%var_8386, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %162 = cast(%var_8346, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
  %163 = cast(meta[relay.Constant][14] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %164 = cast(%158, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
  %165 = reshape(%160, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %166 = reshape(%161, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %167 = reshape(%162, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %168 = reshape(%163, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %169 = reshape(%164, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %170 = @func_1569(%165, %166, %167, %168, %169) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
  %171 = %142.2;
  %172 = maximum(%155, %156) /* ty=Tensor[(832), int16] */;
  %173 = rsqrt(%159) /* ty=Tensor[(416, 2), float32] */;
  %174 = %170.3;
  (%171, %var_8345, %var_8346, meta[relay.Constant][14] /* ty=Tensor[(60), bool] */, %172, %173, %174, %var_8386)
}

def @func_9787() -> (Tensor[(16, 11, 3), float64], Tensor[(2, 396), int8], Tensor[(585), float64], int8, Tensor[(72), int8], Tensor[(792), int8], Tensor[(1, 320), bool], Tensor[(924), float64]) {
  @func_9785() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(2, 396), int8], Tensor[(585), float64], int8, Tensor[(72), int8], Tensor[(792), int8], Tensor[(1, 320), bool], Tensor[(924), float64]) */
}

def @func_6437() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) {
  %177 = fn () -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) {
    %175 = @func_5805() /* ty=Tensor[(16, 11, 3), float64] */;
    %176 = @func_4592() /* ty=Tensor[(16, 11, 3), float32] */;
    (%175, %176)
  };
  %177() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */
}

def @func_8646(%var_8636: Tensor[(960), uint16], %var_8637: Tensor[(104), int32]) -> (Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(104), int32]) {
  %178 = @func_8119() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %179 = %178.0;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
  %181 = @func_4973() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) */;
  %182 = cast(%var_8636, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %183 = cast(%var_8637, dtype="int32") /* ty=Tensor[(104), int32] */;
  %184 = reshape(%182, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %185 = reshape(%183, newshape=[1, 104]) /* ty=Tensor[(1, 104), int32] */;
  %186 = @func_7624(%184, %185) /* ty=(Tensor[(60), bool], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(13, 2, 4), bool], Tensor[(1, 104), int32]) */;
  %187 = sin(%180) /* ty=Tensor[(16, 11, 3), float64] */;
  %188 = %181.2;
  %189 = %186.1;
  (%187, %188, %189, %var_8636, %var_8637)
}

def @func_3942() -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) {
  %194 = fn () -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) {
    %190 = cast(meta[relay.Constant][16] /* ty=Tensor[(16, 11, 3), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
    %191 = cast(meta[relay.Constant][16] /* ty=Tensor[(16, 11, 3), float32] */, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
    %192 = atan(%190) /* ty=Tensor[(16, 11, 3), float32] */;
    %193 = cos(%191) /* ty=Tensor[(16, 11, 3), float64] */;
    (%192, %193)
  };
  %194() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */
}

def @func_2868(%var_2837: Tensor[(13, 5, 9), float64], %var_2844: int8, %var_2845: Tensor[(72), int8], %var_2846: Tensor[(2, 396), int8], %var_2847: Tensor[(320), bool], %var_2848: Tensor[(924), float64]) -> (Tensor[(13, 5, 9), bool], Tensor[(72), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64], Tensor[(1, 104), uint8]) {
  %195 = cast(%var_2837, dtype="float64") /* ty=Tensor[(13, 5, 9), float64] */;
  %196 = asin(%195) /* ty=Tensor[(13, 5, 9), float64] */;
  %197 = cast(%var_2837, dtype="bool") /* ty=Tensor[(13, 5, 9), bool] */;
  %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(%196, dtype="bool") /* ty=Tensor[(13, 5, 9), bool] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %201 = cast(%var_2844, dtype="int8") /* ty=int8 */;
  %202 = cast(%var_2845, dtype="int8") /* ty=Tensor[(72), int8] */;
  %203 = cast(%var_2846, dtype="int8") /* ty=Tensor[(2, 396), int8] */;
  %204 = cast(%var_2847, dtype="bool") /* ty=Tensor[(320), bool] */;
  %205 = cast(%var_2848, dtype="float64") /* ty=Tensor[(924), float64] */;
  %206 = reshape(%201, newshape=[]) /* ty=int8 */;
  %207 = reshape(%202, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), int8] */;
  %208 = reshape(%203, newshape=[12, 11, 6]) /* ty=Tensor[(12, 11, 6), int8] */;
  %209 = reshape(%204, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %210 = reshape(%205, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %211 = @func_2391(%206, %207, %208, %209, %210) /* ty=(Tensor[(12, 1, 6), int8], Tensor[(12, 11, 6), bool], Tensor[(924), float64], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(1, 104), int32]) */;
  %212 = %211.6;
  %213 = cast(%212, dtype="uint8") /* ty=Tensor[(1, 104), uint8] */;
  %214 = cast(%var_2844, dtype="uint8") /* ty=uint8 */;
  %215 = greater(%199, %200) /* ty=Tensor[(13, 5, 9), bool] */;
  %216 = maximum(%213, %214) /* ty=Tensor[(1, 104), uint8] */;
  (%215, %var_2845, %var_2846, %var_2847, %var_2848, %216)
}

def @func_6158() -> (Tensor[(588, 1), uint8],) {
  %219 = fn () -> (Tensor[(588, 1), uint8],) {
    %217 = @func_6140() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) */;
    %218 = %217.2;
    (%218,)
  };
  %219() /* ty=(Tensor[(588, 1), uint8],) */
}

def @func_1433(%var_1430: Tensor[(2, 11, 9), uint32], %var_1431: Tensor[(60), bool], %var_1432: Tensor[(832), float32]) -> (Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) {
  @func_1428(%var_1430, %var_1431, %var_1432) /* ty=(Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) */
}

def @func_10964() -> (Tensor[(60), bool],) {
  %222 = fn () -> (Tensor[(60), bool],) {
    %220 = @func_7645() /* ty=(Tensor[(60), bool],) */;
    %221 = %220.0;
    (%221,)
  };
  %222() /* ty=(Tensor[(60), bool],) */
}

def @func_6140() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) {
  %223 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
  %224 = cast(%223, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %225 = cast(meta[relay.Constant][17] /* ty=Tensor[(588, 1), uint8] */, dtype="uint8") /* ty=Tensor[(588, 1), uint8] */;
  %226 = reshape(%224, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), float32] */;
  %227 = reshape(%225, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %228 = @func_4478(%226, %227) /* ty=(Tensor[(16, 11, 3), bool], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64]) */;
  %229 = %228.3;
  (%223, %229, meta[relay.Constant][17] /* ty=Tensor[(588, 1), uint8] */)
}

def @func_2934(%var_2931: Tensor[(14, 8, 10), float64], %var_2932: Tensor[(30, 2), bool], %var_2933: Tensor[(120), float64]) -> (Tensor[(14, 8, 10), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(30, 2), bool], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) {
  %244 = fn (%var_2902: Tensor[(14, 8, 10), float64], %var_2909: Tensor[(30, 2), bool], %var_2918: Tensor[(120), float64]) -> (Tensor[(14, 8, 10), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(30, 2), bool], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) {
    %230 = cast(%var_2902, dtype="float64") /* ty=Tensor[(14, 8, 10), float64] */;
    %231 = cast(meta[relay.Constant][18] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
    %232 = cast(%var_2909, dtype="bool") /* ty=Tensor[(30, 2), bool] */;
    %233 = reshape(%231, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
    %234 = reshape(%232, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
    %235 = @func_958(%233, %234) /* ty=(Tensor[(3, 2, 10), bool],) */;
    %236 = cast(%var_2918, dtype="float64") /* ty=Tensor[(120), float64] */;
    %237 = cast(%var_2918, dtype="float64") /* ty=Tensor[(120), float64] */;
    %238 = reshape(%236, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
    %239 = reshape(%237, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
    %240 = @func_1655(%238, %239) /* ty=(Tensor[(8, 3, 5), float64], Tensor[(8, 3, 5), float32]) */;
    %241 = log2(%230) /* ty=Tensor[(14, 8, 10), float64] */;
    %242 = %235.0;
    %243 = %240.0;
    (%241, %242, meta[relay.Constant][18] /* ty=Tensor[(30), bool] */, %var_2909, %243, %var_2918)
  };
  %244(%var_2931, %var_2932, %var_2933) /* ty=(Tensor[(14, 8, 10), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(30, 2), bool], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) */
}

def @func_4797() -> Tensor[(16, 11, 3), float32] {
  @func_4795() /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_5598() -> Tensor[(16, 11, 3), float32] {
  @func_4795() /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_4205() -> Tensor[(16, 11, 3), float64] {
  %245 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %245.1
}

def @func_6741(%var_6739: int64) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 4, 13), float32], Tensor[(1008), bool]) {
  @func_6738(%var_6739) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 4, 13), float32], Tensor[(1008), bool]) */
}

def @func_10853() -> (Tensor[(11, 7, 13), bool],) {
  %253 = fn () -> (Tensor[(11, 7, 13), bool],) {
    %246 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(11, 7, 13), float64] */;
    %247 = rsqrt(%246) /* ty=Tensor[(11, 7, 13), float64] */;
    %248 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 7, 13), float64] */, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
    %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
    %250 = cast(%247, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
    %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %252 = logical_and(%250, %251) /* ty=Tensor[(11, 7, 13), bool] */;
    (%252,)
  };
  %253() /* ty=(Tensor[(11, 7, 13), bool],) */
}

def @func_4588(%var_4585: Tensor[(11, 2, 4), float64], %var_4586: Tensor[(960), uint16], %var_4587: Tensor[(832), float32]) -> (Tensor[(11, 2, 4), float64], Tensor[(11, 2, 4), float64], int64, Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32]) {
  %266 = fn (%var_4574: Tensor[(11, 2, 4), float64], %var_4580: Tensor[(960), uint16], %var_4582: Tensor[(832), float32]) -> (Tensor[(11, 2, 4), float64], Tensor[(11, 2, 4), float64], int64, Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32]) {
    %254 = cast(%var_4574, dtype="float64") /* ty=Tensor[(11, 2, 4), float64] */;
    %255 = cast(%var_4574, dtype="float64") /* ty=Tensor[(11, 2, 4), float64] */;
    %256 = cast(%var_4580, dtype="uint16") /* ty=Tensor[(960), uint16] */;
    %257 = cast(meta[relay.Constant][20] /* ty=Tensor[(160, 2), bool] */, dtype="bool") /* ty=Tensor[(160, 2), bool] */;
    %258 = cast(%var_4582, dtype="float32") /* ty=Tensor[(832), float32] */;
    %259 = reshape(%256, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
    %260 = reshape(%257, newshape=[320]) /* ty=Tensor[(320), bool] */;
    %261 = reshape(%258, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %262 = @func_4171(%259, %260, %261) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) */;
    %263 = log(%254) /* ty=Tensor[(11, 2, 4), float64] */;
    %264 = atanh(%255) /* ty=Tensor[(11, 2, 4), float64] */;
    %265 = %262.10;
    (%263, %264, %265, %var_4580, meta[relay.Constant][20] /* ty=Tensor[(160, 2), bool] */, %var_4582)
  };
  %266(%var_4585, %var_4586, %var_4587) /* ty=(Tensor[(11, 2, 4), float64], Tensor[(11, 2, 4), float64], int64, Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32]) */
}

def @func_8404(%var_8401: Tensor[(8232), uint8], %var_8402: Tensor[(1, 198), uint32], %var_8403: Tensor[(2184), uint8]) -> (Tensor[(270), float32], Tensor[(8232), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(832), int16], Tensor[(416, 2), float32], Tensor[(60), bool], Tensor[(2184), uint8]) {
  @func_8399(%var_8401, %var_8402, %var_8403) /* ty=(Tensor[(270), float32], Tensor[(8232), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(832), int16], Tensor[(416, 2), float32], Tensor[(60), bool], Tensor[(2184), uint8]) */
}

def @func_6738(%var_6714: int64) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 4, 13), float32], Tensor[(1008), bool]) {
  %267 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %268 = cast(%var_6714, dtype="int64") /* ty=int64 */;
  %269 = cast(meta[relay.Constant][21] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %270 = reshape(%268, newshape=[]) /* ty=int64 */;
  %271 = reshape(%269, newshape=[9, 14, 8]) /* ty=Tensor[(9, 14, 8), int64] */;
  %272 = @func_3264(%270, %271) /* ty=(Tensor[(9, 14, 8), bool], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) */;
  %273 = cast(meta[relay.Constant][21] /* ty=Tensor[(1008), int64] */, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %274 = cast(%var_6714, dtype="bool") /* ty=bool */;
  %275 = %267.0;
  %276 = %272.1;
  %277 = greater_equal(%273, %274) /* ty=Tensor[(1008), bool] */;
  (%275, %276, %277)
}

def @func_9697(%var_9688: Tensor[(160, 2), bool], %var_9689: Tensor[(832), float32], %var_9690: Tensor[(1, 2184), uint8], %var_9691: Tensor[(99, 2), uint32], %var_9693: Tensor[(96, 2), uint16]) -> (Tensor[(16, 11, 3), float64], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32], Tensor[(1, 2184), uint8], Tensor[(99, 2), uint32], Tensor[(60, 1), bool], Tensor[(96, 2), uint16]) {
  %278 = cast(meta[relay.Constant][22] /* ty=Tensor[(960), uint16] */, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %279 = cast(%var_9688, dtype="bool") /* ty=Tensor[(160, 2), bool] */;
  %280 = cast(%var_9689, dtype="float32") /* ty=Tensor[(832), float32] */;
  %281 = cast(%var_9690, dtype="uint8") /* ty=Tensor[(1, 2184), uint8] */;
  %282 = cast(%var_9691, dtype="uint32") /* ty=Tensor[(99, 2), uint32] */;
  %283 = cast(meta[relay.Constant][23] /* ty=Tensor[(60, 1), bool] */, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %284 = cast(%var_9693, dtype="uint16") /* ty=Tensor[(96, 2), uint16] */;
  %285 = reshape(%278, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
  %286 = reshape(%279, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %287 = reshape(%280, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %288 = reshape(%281, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %289 = reshape(%282, newshape=[1, 198]) /* ty=Tensor[(1, 198), uint32] */;
  %290 = reshape(%283, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %291 = reshape(%284, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %292 = @func_6230(%285, %286, %287, %288, %289, %290, %291) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(1, 960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16]) */;
  %293 = @func_5805() /* ty=Tensor[(16, 11, 3), float64] */;
  %294 = %292.9;
  (%293, %294, meta[relay.Constant][22] /* ty=Tensor[(960), uint16] */, %var_9688, %var_9689, %var_9690, %var_9691, meta[relay.Constant][23] /* ty=Tensor[(60, 1), bool] */, %var_9693)
}

def @func_10764(%var_10741: Tensor[(2184), uint8], %var_10742: Tensor[(198), uint32], %var_10743: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(3, 2, 10), bool], Tensor[(1, 30), bool]) {
  %295 = @func_10037() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %296 = cast(%var_10741, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %297 = cast(%var_10742, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %298 = cast(%var_10743, dtype="bool") /* ty=Tensor[(60), bool] */;
  %299 = reshape(%296, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %300 = reshape(%297, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %301 = reshape(%298, newshape=[1, 60]) /* ty=Tensor[(1, 60), bool] */;
  %302 = @func_5345(%299, %300, %301) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) */;
  %303 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 30), bool] */, dtype="bool") /* ty=Tensor[(1, 30), bool] */;
  %304 = cast(%var_10743, dtype="bool") /* ty=Tensor[(60), bool] */;
  %305 = reshape(%303, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %306 = reshape(%304, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %307 = @func_8227(%305, %306) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) */;
  %308 = %295.0;
  %309 = %302.1;
  %310 = %307.1;
  (%308, %309, %var_10741, %var_10742, %var_10743, %310, meta[relay.Constant][24] /* ty=Tensor[(1, 30), bool] */)
}

def @func_9962() -> Tensor[(16, 11, 3), float64] {
  %312 = fn () -> Tensor[(16, 11, 3), float64] {
    %311 = @func_6140() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) */;
    %311.1
  };
  %312() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_6923(%var_6919: Tensor[(588, 14), uint8], %var_6920: Tensor[(198), uint32], %var_6921: Tensor[(60, 1), bool], %var_6922: Tensor[(832), float32]) -> (Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60, 1), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(588, 14), float64]) {
  @func_6917(%var_6919, %var_6920, %var_6921, %var_6922) /* ty=(Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60, 1), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(588, 14), float64]) */
}

def @func_9002(%var_8846: Tensor[(60), bool], %var_8881: Tensor[(15, 195), int64], %var_8882: Tensor[(192), uint16], %var_8939: Tensor[(154, 2), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(588, 14), uint64], Tensor[(8232), uint8], Tensor[(60), bool], Tensor[(8, 104), float32], Tensor[(16, 11, 3), float64], Tensor[(15, 13, 15), float32], Tensor[(15, 195), int64], Tensor[(192), uint16], Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(154, 2), float32], int64, Tensor[(22, 4), float64], Tensor[(2, 480), uint16], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(1, 832), float32], Tensor[(924), float64], Tensor[(8, 198), bool]) {
  %313 = @func_6436() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */;
  %314 = cast(meta[relay.Constant][25] /* ty=Tensor[(8232), uint8] */, dtype="uint8") /* ty=Tensor[(8232), uint8] */;
  %315 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 198), uint32] */, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
  %316 = cast(%var_8846, dtype="bool") /* ty=Tensor[(60), bool] */;
  %317 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 104), float32] */, dtype="float32") /* ty=Tensor[(8, 104), float32] */;
  %318 = reshape(%314, newshape=[588, 14]) /* ty=Tensor[(588, 14), uint8] */;
  %319 = reshape(%315, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %320 = reshape(%316, newshape=[60, 1]) /* ty=Tensor[(60, 1), bool] */;
  %321 = reshape(%317, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %322 = @func_6917(%318, %319, %320, %321) /* ty=(Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60, 1), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(588, 14), float64]) */;
  %323 = cast(%var_8881, dtype="int64") /* ty=Tensor[(15, 195), int64] */;
  %324 = cast(%var_8882, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %325 = reshape(%323, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), int64] */;
  %326 = reshape(%324, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %327 = @func_2616(%325, %326) /* ty=(Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(15, 13, 15), int16], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(15, 13, 15), float32]) */;
  %328 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %329 = @func_8576() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) */;
  %330 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %331 = cast(%var_8939, dtype="float32") /* ty=Tensor[(154, 2), float32] */;
  %332 = reshape(%331, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
  %333 = cast(meta[relay.Constant][28] /* ty=Tensor[(22, 4), float64] */, dtype="float64") /* ty=Tensor[(22, 4), float64] */;
  %334 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 480), uint16] */, dtype="uint16") /* ty=Tensor[(2, 480), uint16] */;
  %335 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 104), float32] */, dtype="float32") /* ty=Tensor[(8, 104), float32] */;
  %336 = reshape(%333, newshape=[11, 2, 4]) /* ty=Tensor[(11, 2, 4), float64] */;
  %337 = reshape(%334, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %338 = reshape(%335, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %339 = @func_4584(%336, %337, %338) /* ty=(Tensor[(11, 2, 4), float64], Tensor[(11, 2, 4), float64], int64, Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32]) */;
  %340 = cast(meta[relay.Constant][30] /* ty=Tensor[(2184), uint8] */, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %341 = cast(meta[relay.Constant][30] /* ty=Tensor[(2184), uint8] */, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %342 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 198), uint32] */, dtype="float64") /* ty=Tensor[(1, 198), float64] */;
  %343 = erf(%342) /* ty=Tensor[(1, 198), float64] */;
  %344 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 198), uint32] */, dtype="uint64") /* ty=Tensor[(1, 198), uint64] */;
  %345 = shape_of(%343, dtype="int32") /* ty=Tensor[(2), int32] */;
  %346 = cast(%343, dtype="uint64") /* ty=Tensor[(1, 198), uint64] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %348 = multiply(%346, %347) /* ty=Tensor[(?, 198), uint64] */;
  %349 = cast(%348, dtype="float32") /* ty=Tensor[(?, 198), float32] */;
  %350 = asin(%349) /* ty=Tensor[(?, 198), float32] */;
  %351 = cast(%350, dtype="uint32") /* ty=Tensor[(?, 198), uint32] */;
  %352 = cast(%var_8846, dtype="bool") /* ty=Tensor[(60), bool] */;
  %353 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 104), float32] */, dtype="float32") /* ty=Tensor[(8, 104), float32] */;
  %354 = reshape(%340, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %355 = reshape(%341, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
  %356 = reshape(%351, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %357 = reshape(%352, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %358 = reshape(%353, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %359 = @func_1569(%354, %355, %356, %357, %358) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
  %360 = cast(meta[relay.Constant][31] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %361 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 104), float32] */, dtype="float32") /* ty=Tensor[(8, 104), float32] */;
  %362 = reshape(%360, newshape=[1, 924]) /* ty=Tensor[(1, 924), float64] */;
  %363 = reshape(%361, newshape=[1, 832]) /* ty=Tensor[(1, 832), float32] */;
  %364 = @func_6086(%362, %363) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64], Tensor[(16, 4, 13), float32], Tensor[(1, 924), float64], Tensor[(1, 832), float32], Tensor[(16, 11, 3), float64]) */;
  %365 = cast(%350, dtype="bool") /* ty=Tensor[(?, 198), bool] */;
  %366 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 198), float32] */, dtype="bool") /* ty=Tensor[(8, 198), bool] */;
  %367 = %313.1;
  %368 = %322.0;
  %369 = @func_6506() /* ty=Tensor[(16, 11, 3), float64] */;
  %370 = %327.9;
  %371 = %328.0;
  %372 = %329.0;
  %373 = %330.0;
  %374 = @func_1377(%332) /* ty=Tensor[(11, 7, 4), float32] */;
  %375 = %339.2;
  %376 = %359.4;
  %377 = %364.6;
  %378 = logical_or(%365, %366) /* ty=Tensor[(8, 198), bool] */;
  (%367, %368, meta[relay.Constant][25] /* ty=Tensor[(8232), uint8] */, %var_8846, meta[relay.Constant][27] /* ty=Tensor[(8, 104), float32] */, %369, %370, %var_8881, %var_8882, %371, %372, %373, %374, %var_8939, %375, meta[relay.Constant][28] /* ty=Tensor[(22, 4), float64] */, meta[relay.Constant][29] /* ty=Tensor[(2, 480), uint16] */, %376, meta[relay.Constant][30] /* ty=Tensor[(2184), uint8] */, %377, meta[relay.Constant][31] /* ty=Tensor[(924), float64] */, %378)
}

def @func_7647() -> (Tensor[(60), bool],) {
  @func_7645() /* ty=(Tensor[(60), bool],) */
}

def @func_10585(%var_10524: Tensor[(504), bool], %var_10545: Tensor[(192), uint16], %var_10557: Tensor[(2184, 1), uint8], %var_10558: Tensor[(198), uint32], %var_10559: Tensor[(320), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(504), bool], Tensor[(504), float32], Tensor[(16, 5, 12), uint16], Tensor[(2925, 1), int64], Tensor[(192), uint16], Tensor[(60), bool], Tensor[(16, 11, 3), float64], Tensor[(924), float64], Tensor[(2184, 1), uint8], Tensor[(198), uint32], Tensor[(320), bool], Tensor[(832), float32], Tensor[(416, 2), float32]) {
  %379 = @func_5992() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %380 = cast(%var_10524, dtype="bool") /* ty=Tensor[(504), bool] */;
  %381 = reshape(%380, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %382 = @func_8530(%381) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(7, 6, 12), uint64], Tensor[(504), bool]) */;
  %383 = %382.2;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(504), float32] */;
  %385 = cast(meta[relay.Constant][33] /* ty=Tensor[(2925, 1), int64] */, dtype="int64") /* ty=Tensor[(2925, 1), int64] */;
  %386 = cast(%var_10545, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %387 = cast(meta[relay.Constant][33] /* ty=Tensor[(2925, 1), int64] */, dtype="int64") /* ty=Tensor[(2925, 1), int64] */;
  %388 = cast(meta[relay.Constant][34] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %389 = reshape(%385, newshape=[2925]) /* ty=Tensor[(2925), int64] */;
  %390 = reshape(%386, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %391 = reshape(%387, newshape=[2925]) /* ty=Tensor[(2925), int64] */;
  %392 = reshape(%388, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %393 = @func_4717(%389, %390, %391, %392) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(2925), int32], Tensor[(60), bool], Tensor[(60), bool]) */;
  %394 = @func_6453() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %395 = %393.1;
  %396 = cast(%395, dtype="uint16") /* ty=Tensor[(16, 5, 12), uint16] */;
  %397 = cast(%var_10557, dtype="uint8") /* ty=Tensor[(2184, 1), uint8] */;
  %398 = cast(%var_10558, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %399 = cast(%var_10559, dtype="bool") /* ty=Tensor[(320), bool] */;
  %400 = cast(meta[relay.Constant][35] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %401 = reshape(%396, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %402 = reshape(%397, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %403 = reshape(%398, newshape=[1, 198]) /* ty=Tensor[(1, 198), uint32] */;
  %404 = reshape(%399, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %405 = reshape(%400, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %406 = @func_10402(%401, %402, %403, %404, %405) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(104), int32], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(104), int32]) */;
  %407 = cast(%var_10557, dtype="uint8") /* ty=Tensor[(2184, 1), uint8] */;
  %408 = cast(%var_10558, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %409 = cast(meta[relay.Constant][34] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %410 = reshape(%407, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %411 = reshape(%408, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %412 = reshape(%409, newshape=[1, 60]) /* ty=Tensor[(1, 60), bool] */;
  %413 = @func_5345(%410, %411, %412) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) */;
  %414 = %379.0;
  %415 = acosh(%384) /* ty=Tensor[(504), float32] */;
  %416 = %394.0;
  %417 = %406.8;
  %418 = %413.5;
  (%414, %var_10524, %415, %395, meta[relay.Constant][33] /* ty=Tensor[(2925, 1), int64] */, %var_10545, meta[relay.Constant][34] /* ty=Tensor[(60), bool] */, %416, %417, %var_10557, %var_10558, %var_10559, meta[relay.Constant][35] /* ty=Tensor[(832), float32] */, %418)
}

def @func_2256(%var_2255: Tensor[(14, 14, 3), uint8]) -> (Tensor[(14, 14, 3), bool],) {
  %422 = fn (%var_2248: Tensor[(14, 14, 3), uint8]) -> (Tensor[(14, 14, 3), bool],) {
    %419 = cast(meta[relay.Constant][36] /* ty=uint8 */, dtype="bool") /* ty=bool */;
    %420 = cast(%var_2248, dtype="bool") /* ty=Tensor[(14, 14, 3), bool] */;
    %421 = greater(%419, %420) /* ty=Tensor[(14, 14, 3), bool] */;
    (%421,)
  };
  %422(%var_2255) /* ty=(Tensor[(14, 14, 3), bool],) */
}

def @func_11106() -> Tensor[(16, 11, 3), float32] {
  @func_5102() /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_4389() -> (Tensor[(16, 11, 3), float32],) {
  %423 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %424 = %423.0;
  (%424,)
}

def @func_8335() -> (Tensor[(16, 11, 3), float32], Tensor[(416, 2), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float64]) {
  @func_8333() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(416, 2), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float64]) */
}

def @func_8650(%var_8648: Tensor[(960), uint16], %var_8649: Tensor[(104), int32]) -> (Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(104), int32]) {
  @func_8646(%var_8648, %var_8649) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(104), int32]) */
}

def @func_4723(%var_4719: Tensor[(2925), int64], %var_4720: Tensor[(192), uint16], %var_4721: Tensor[(2925), int64], %var_4722: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(2925), int32], Tensor[(60), bool], Tensor[(60), bool]) {
  @func_4717(%var_4719, %var_4720, %var_4721, %var_4722) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(2925), int32], Tensor[(60), bool], Tensor[(60), bool]) */
}

def @func_4892() -> (Tensor[(16, 11, 3), float64],) {
  %425 = @func_4352() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %426 = %425.0;
  (%426,)
}

def @func_10456() -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float32]) {
  %430 = fn () -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float32]) {
    %427 = @func_7013() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
    %428 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
    %429 = %427.0;
    (%428, %429)
  };
  %430() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float32]) */
}

def @func_5807() -> Tensor[(16, 11, 3), float64] {
  @func_5805() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_305(%var_304: Tensor[(16, 4, 13), float32]) -> (Tensor[(16, 4, 13), float32], Tensor[(16, 4, 13), float64]) {
  %435 = fn (%var_285: Tensor[(16, 4, 13), float32]) -> (Tensor[(16, 4, 13), float32], Tensor[(16, 4, 13), float64]) {
    %431 = cast(%var_285, dtype="float32") /* ty=Tensor[(16, 4, 13), float32] */;
    %432 = cast(%var_285, dtype="float64") /* ty=Tensor[(16, 4, 13), float64] */;
    %433 = rsqrt(%431) /* ty=Tensor[(16, 4, 13), float32] */;
    %434 = log2(%432) /* ty=Tensor[(16, 4, 13), float64] */;
    (%433, %434)
  };
  %435(%var_304) /* ty=(Tensor[(16, 4, 13), float32], Tensor[(16, 4, 13), float64]) */
}

def @func_8147() -> (Tensor[(16, 11, 3), float64],) {
  @func_8145() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_2501(%var_2500: Tensor[(15, 2, 9), float32]) -> (Tensor[(15, 2, 9), float32],) {
  %438 = fn (%var_2490: Tensor[(15, 2, 9), float32]) -> (Tensor[(15, 2, 9), float32],) {
    %436 = cast(%var_2490, dtype="float32") /* ty=Tensor[(15, 2, 9), float32] */;
    %437 = atan(%436) /* ty=Tensor[(15, 2, 9), float32] */;
    (%437,)
  };
  %438(%var_2500) /* ty=(Tensor[(15, 2, 9), float32],) */
}

def @func_9243(%var_9220: Tensor[(2925), int64]) -> (Tensor[(16, 11, 3), float64], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(60), bool], Tensor[(120), float64], Tensor[(192), uint16], Tensor[(2925), int64], Tensor[(192), uint16]) {
  %439 = cast(meta[relay.Constant][37] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %440 = cast(meta[relay.Constant][38] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %441 = cast(meta[relay.Constant][39] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %442 = reshape(%439, newshape=[14, 8, 10]) /* ty=Tensor[(14, 8, 10), float64] */;
  %443 = reshape(%440, newshape=[30, 2]) /* ty=Tensor[(30, 2), bool] */;
  %444 = reshape(%441, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %445 = @func_2930(%442, %443, %444) /* ty=(Tensor[(14, 8, 10), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(30, 2), bool], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) */;
  %446 = cast(%var_9220, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %447 = cast(meta[relay.Constant][40] /* ty=Tensor[(192), uint16] */, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %448 = cast(%var_9220, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %449 = cast(meta[relay.Constant][38] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %450 = reshape(%446, newshape=[2925]) /* ty=Tensor[(2925), int64] */;
  %451 = reshape(%447, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %452 = reshape(%448, newshape=[2925]) /* ty=Tensor[(2925), int64] */;
  %453 = reshape(%449, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %454 = @func_4717(%450, %451, %452, %453) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(2925), int32], Tensor[(60), bool], Tensor[(60), bool]) */;
  %455 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
  %456 = %445.1;
  %457 = %454.2;
  (%455, %456, meta[relay.Constant][37] /* ty=Tensor[(1120), float64] */, meta[relay.Constant][38] /* ty=Tensor[(60), bool] */, meta[relay.Constant][39] /* ty=Tensor[(120), float64] */, %457, %var_9220, meta[relay.Constant][40] /* ty=Tensor[(192), uint16] */)
}

def @func_10833() -> (Tensor[(16, 11, 3), float32], Tensor[(9, 8, 9), uint64]) {
  %458 = @func_9366() /* ty=(Tensor[(9, 8, 9), uint64],) */;
  %459 = @func_5598() /* ty=Tensor[(16, 11, 3), float32] */;
  %460 = %458.0;
  (%459, %460)
}

def @func_5256(%var_5254: Tensor[(72, 1), int8], %var_5255: Tensor[(320), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(320), bool], int8, Tensor[(72, 1), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64]) {
  @func_5252(%var_5254, %var_5255) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(320), bool], int8, Tensor[(72, 1), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64]) */
}

def @func_5553(%var_5548: Tensor[(3, 66), uint32], %var_5549: Tensor[(60, 1), bool], %var_5550: int8, %var_5551: Tensor[(14, 42), uint8], %var_5552: Tensor[(120), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(12, 11, 6), bool], Tensor[(3, 66), uint32], Tensor[(60, 1), bool], Tensor[(832, 1), float32], Tensor[(2184), uint8], int8, Tensor[(14, 42), uint8], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(120), float64]) {
  @func_5546(%var_5548, %var_5549, %var_5550, %var_5551, %var_5552) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(12, 11, 6), bool], Tensor[(3, 66), uint32], Tensor[(60, 1), bool], Tensor[(832, 1), float32], Tensor[(2184), uint8], int8, Tensor[(14, 42), uint8], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(120), float64]) */
}

def @func_4481(%var_4479: Tensor[(16, 11, 3), float32], %var_4480: Tensor[(588), uint8]) -> (Tensor[(16, 11, 3), bool], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64]) {
  %481 = fn (%var_4445: Tensor[(16, 11, 3), float32], %var_4451: Tensor[(588), uint8]) -> (Tensor[(16, 11, 3), bool], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64]) {
    %461 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
    %462 = %461.1;
    %463 = cast(%462, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
    %464 = sinh(%463) /* ty=Tensor[(16, 11, 3), float32] */;
    %465 = cast(%var_4445, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
    %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
    %467 = cast(%464, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
    %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %469 = cast(%var_4451, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %470 = reshape(%469, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), uint8] */;
    %471 = @func_2254(%470) /* ty=(Tensor[(14, 14, 3), bool],) */;
    %472 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 11, 3), float32] */, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
    %473 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
    %474 = cast(%464, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
    %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %476 = equal(%474, %475) /* ty=Tensor[(16, 11, 3), bool] */;
    %477 = cast(%476, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
    %478 = less_equal(%467, %468) /* ty=Tensor[(16, 11, 3), bool] */;
    %479 = %471.0;
    %480 = sigmoid(%477) /* ty=Tensor[(16, 11, 3), float64] */;
    (%478, %479, %var_4451, %480)
  };
  %481(%var_4479, %var_4480) /* ty=(Tensor[(16, 11, 3), bool], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64]) */
}

def @func_5192(%var_5190: Tensor[(270), float32], %var_5191: Tensor[(960), uint16]) -> (Tensor[(16, 11, 3), float32], Tensor[(8, 3, 5), float32], Tensor[(120), float64], Tensor[(15, 2, 9), float32], Tensor[(960), uint16], Tensor[(960), uint16], Tensor[(270), float32]) {
  @func_5188(%var_5190, %var_5191) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(8, 3, 5), float32], Tensor[(120), float64], Tensor[(15, 2, 9), float32], Tensor[(960), uint16], Tensor[(960), uint16], Tensor[(270), float32]) */
}

def @func_4894() -> (Tensor[(16, 11, 3), float64],) {
  @func_4892() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_9738() -> (Tensor[(7, 6, 12), bool],) {
  %484 = fn () -> (Tensor[(7, 6, 12), bool],) {
    %482 = @func_6527() /* ty=(Tensor[(7, 6, 12), bool],) */;
    %483 = %482.0;
    (%483,)
  };
  %484() /* ty=(Tensor[(7, 6, 12), bool],) */
}

def @func_11108() -> Tensor[(16, 11, 3), float32] {
  @func_11106() /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_6013() -> Tensor[(16, 11, 3), float64] {
  @func_6011() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_4171(%var_4116: Tensor[(1, 960), uint16], %var_4126: Tensor[(320), bool], %var_4128: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) {
  %485 = cast(meta[relay.Constant][42] /* ty=Tensor[(192), uint16] */, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %486 = cast(%var_4116, dtype="uint16") /* ty=Tensor[(1, 960), uint16] */;
  %487 = reshape(%485, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), uint16] */;
  %488 = reshape(%486, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), uint16] */;
  %489 = cast(%var_4126, dtype="bool") /* ty=Tensor[(320), bool] */;
  %490 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 924), float64] */, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
  %491 = cast(%var_4128, dtype="float32") /* ty=Tensor[(832), float32] */;
  %492 = cast(meta[relay.Constant][44] /* ty=Tensor[(104), int32] */, dtype="int32") /* ty=Tensor[(104), int32] */;
  %493 = reshape(%489, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), bool] */;
  %494 = reshape(%490, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %495 = reshape(%491, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %496 = reshape(%492, newshape=[104]) /* ty=Tensor[(104), int32] */;
  %497 = @func_1809(%493, %494, %495, %496) /* ty=(Tensor[(16, 4, 5), bool], Tensor[(7, 1), uint64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) */;
  %498 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %499 = cast(meta[relay.Constant][45] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %500 = reshape(%498, newshape=[]) /* ty=int64 */;
  %501 = reshape(%499, newshape=[9, 14, 8]) /* ty=Tensor[(9, 14, 8), int64] */;
  %502 = @func_3264(%500, %501) /* ty=(Tensor[(9, 14, 8), bool], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) */;
  %503 = cast(meta[relay.Constant][46] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %504 = reshape(%503, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
  %505 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %506 = cast(meta[relay.Constant][45] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %507 = reshape(%505, newshape=[]) /* ty=int64 */;
  %508 = reshape(%506, newshape=[9, 14, 8]) /* ty=Tensor[(9, 14, 8), int64] */;
  %509 = @func_3264(%507, %508) /* ty=(Tensor[(9, 14, 8), bool], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) */;
  %510 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
  %511 = @func_1602(%487, %488) /* ty=Tensor[(16, 5, 12), uint16] */;
  %512 = %497.4;
  %513 = %502.1;
  %514 = @func_1377(%504) /* ty=Tensor[(11, 7, 4), float32] */;
  %515 = %509.3;
  (%510, %511, meta[relay.Constant][42] /* ty=Tensor[(192), uint16] */, %var_4116, %512, %var_4126, meta[relay.Constant][43] /* ty=Tensor[(1, 924), float64] */, %var_4128, meta[relay.Constant][44] /* ty=Tensor[(104), int32] */, %513, -6 /* ty=int64 */, meta[relay.Constant][45] /* ty=Tensor[(1008), int64] */, %514, meta[relay.Constant][46] /* ty=Tensor[(308), float32] */, %515)
}

def @func_11148(%var_11139: int32, %var_11140: Tensor[(8, 7, 9), int32]) -> (Tensor[(8, 7, 9), int32],) {
  %516 = cast(%var_11139, dtype="int32") /* ty=int32 */;
  %517 = cast(%var_11140, dtype="int32") /* ty=Tensor[(8, 7, 9), int32] */;
  %518 = bitwise_or(%516, %517) /* ty=Tensor[(8, 7, 9), int32] */;
  (%518,)
}

def @func_5672(%var_5668: Tensor[(198), uint32], %var_5669: int8, %var_5670: Tensor[(7, 84), uint8], %var_5671: Tensor[(104), int32]) -> (Tensor[(16, 11, 3), float32], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool], int8, Tensor[(7, 84), uint8], Tensor[(120), float64], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) {
  %535 = fn (%var_5626: Tensor[(198), uint32], %var_5628: int8, %var_5629: Tensor[(7, 84), uint8], %var_5634: Tensor[(104), int32]) -> (Tensor[(16, 11, 3), float32], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool], int8, Tensor[(7, 84), uint8], Tensor[(120), float64], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) {
    %519 = cast(%var_5626, dtype="uint32") /* ty=Tensor[(198), uint32] */;
    %520 = cast(meta[relay.Constant][47] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
    %521 = cast(%var_5628, dtype="int8") /* ty=int8 */;
    %522 = cast(%var_5629, dtype="uint8") /* ty=Tensor[(7, 84), uint8] */;
    %523 = cast(meta[relay.Constant][48] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %524 = reshape(%519, newshape=[3, 66]) /* ty=Tensor[(3, 66), uint32] */;
    %525 = reshape(%520, newshape=[60, 1]) /* ty=Tensor[(60, 1), bool] */;
    %526 = reshape(%521, newshape=[]) /* ty=int8 */;
    %527 = reshape(%522, newshape=[14, 42]) /* ty=Tensor[(14, 42), uint8] */;
    %528 = reshape(%523, newshape=[120]) /* ty=Tensor[(120), float64] */;
    %529 = @func_5546(%524, %525, %526, %527, %528) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(12, 11, 6), bool], Tensor[(3, 66), uint32], Tensor[(60, 1), bool], Tensor[(832, 1), float32], Tensor[(2184), uint8], int8, Tensor[(14, 42), uint8], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(120), float64]) */;
    %530 = cast(%var_5634, dtype="int32") /* ty=Tensor[(104), int32] */;
    %531 = reshape(%530, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), int32] */;
    %532 = @func_4795() /* ty=Tensor[(16, 11, 3), float32] */;
    %533 = %529.5;
    %534 = @func_995(%531) /* ty=Tensor[(13, 2, 4), bool] */;
    (%532, %533, %var_5626, meta[relay.Constant][47] /* ty=Tensor[(60), bool] */, %var_5628, %var_5629, meta[relay.Constant][48] /* ty=Tensor[(120), float64] */, %534, %var_5634)
  };
  %535(%var_5668, %var_5669, %var_5670, %var_5671) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool], int8, Tensor[(7, 84), uint8], Tensor[(120), float64], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) */
}

def @func_6105() -> (Tensor[(16, 11, 3), float64],) {
  %536 = @func_5681() /* ty=Tensor[(16, 11, 3), float64] */;
  (%536,)
}

def @func_7080(%var_7078: Tensor[(2925), int64], %var_7079: Tensor[(192), uint16]) -> (Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(2925), int64], Tensor[(192), uint16]) {
  %545 = fn (%var_7067: Tensor[(2925), int64], %var_7068: Tensor[(192), uint16]) -> (Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(2925), int64], Tensor[(192), uint16]) {
    %537 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
    %538 = cast(%var_7067, dtype="int64") /* ty=Tensor[(2925), int64] */;
    %539 = cast(%var_7068, dtype="uint16") /* ty=Tensor[(192), uint16] */;
    %540 = reshape(%538, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), int64] */;
    %541 = reshape(%539, newshape=[192]) /* ty=Tensor[(192), uint16] */;
    %542 = @func_2616(%540, %541) /* ty=(Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(15, 13, 15), int16], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(15, 13, 15), float32]) */;
    %543 = %537.0;
    %544 = %542.8;
    (%543, %544, %var_7067, %var_7068)
  };
  %545(%var_7078, %var_7079) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(2925), int64], Tensor[(192), uint16]) */
}

def @func_7773() -> (Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) {
  %546 = @func_7013() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %547 = cast(meta[relay.Constant][49] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %548 = reshape(%547, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
  %549 = @func_2499(%548) /* ty=(Tensor[(15, 2, 9), float32],) */;
  %550 = %546.0;
  %551 = %549.0;
  (%550, %551, meta[relay.Constant][49] /* ty=Tensor[(270), float32] */)
}

def @func_2619(%var_2617: Tensor[(15, 13, 15), int64], %var_2618: Tensor[(192), uint16]) -> (Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(15, 13, 15), int16], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(15, 13, 15), float32]) {
  %579 = fn (%var_2547: Tensor[(15, 13, 15), int64], %var_2560: Tensor[(192), uint16]) -> (Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(15, 13, 15), int16], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(15, 13, 15), float32]) {
    %552 = cast(%var_2560, dtype="uint16") /* ty=Tensor[(192), uint16] */;
    %553 = cast(meta[relay.Constant][50] /* ty=Tensor[(960), uint16] */, dtype="uint16") /* ty=Tensor[(960), uint16] */;
    %554 = reshape(%552, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), uint16] */;
    %555 = reshape(%553, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), uint16] */;
    %556 = cast(-2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %557 = cast(%var_2547, dtype="int64") /* ty=Tensor[(15, 13, 15), int64] */;
    %558 = left_shift(%556, %557) /* ty=Tensor[(15, 13, 15), int64] */;
    %559 = cast(%558, dtype="float32") /* ty=Tensor[(15, 13, 15), float32] */;
    %560 = cast(-2 /* ty=int64 */, dtype="float32") /* ty=float32 */;
    %561 = subtract(%559, %560) /* ty=Tensor[(15, 13, 15), float32] */;
    %562 = cast(%561, dtype="int16") /* ty=Tensor[(15, 13, 15), int16] */;
    %563 = shape_of(%var_2547, dtype="int32") /* ty=Tensor[(3), int32] */;
    %564 = cast(%var_2547, dtype="int16") /* ty=Tensor[(15, 13, 15), int16] */;
    %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %566 = cast(meta[relay.Constant][51] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
    %567 = cast(meta[relay.Constant][52] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
    %568 = reshape(%566, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
    %569 = reshape(%567, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
    %570 = @func_958(%568, %569) /* ty=(Tensor[(3, 2, 10), bool],) */;
    %571 = cast(meta[relay.Constant][53] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
    %572 = reshape(%571, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
    %573 = cast(%var_2547, dtype="float32") /* ty=Tensor[(15, 13, 15), float32] */;
    %574 = @func_1602(%554, %555) /* ty=Tensor[(16, 5, 12), uint16] */;
    %575 = add(%564, %565) /* ty=Tensor[(15, 13, 15), int16] */;
    %576 = %570.0;
    %577 = @func_1377(%572) /* ty=Tensor[(11, 7, 4), float32] */;
    %578 = exp(%573) /* ty=Tensor[(15, 13, 15), float32] */;
    (%574, %var_2560, meta[relay.Constant][50] /* ty=Tensor[(960), uint16] */, %575, %576, meta[relay.Constant][51] /* ty=Tensor[(30), bool] */, meta[relay.Constant][52] /* ty=Tensor[(60), bool] */, %577, meta[relay.Constant][53] /* ty=Tensor[(308), float32] */, %578)
  };
  %579(%var_2617, %var_2618) /* ty=(Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(15, 13, 15), int16], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(15, 13, 15), float32]) */
}

def @func_5033(%var_4982: Tensor[(16, 11, 3), float32], %var_5002: Tensor[(960), uint16], %var_5003: Tensor[(320), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) {
  %580 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %581 = %580.0;
  %582 = cast(%var_4982, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%581, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %586 = cast(%var_5002, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %587 = cast(%var_5003, dtype="bool") /* ty=Tensor[(320), bool] */;
  %588 = cast(meta[relay.Constant][54] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %589 = reshape(%586, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
  %590 = reshape(%587, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %591 = reshape(%588, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %592 = @func_4171(%589, %590, %591) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) */;
  %593 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %594 = power(%584, %585) /* ty=Tensor[(16, 11, 3), float32] */;
  %595 = %592.13;
  %596 = %593.0;
  (%594, %595, %var_5002, %var_5003, meta[relay.Constant][54] /* ty=Tensor[(832), float32] */, %596)
}

def @func_7645() -> (Tensor[(60), bool],) {
  %597 = @func_7522() /* ty=(Tensor[(60), bool],) */;
  %598 = %597.0;
  (%598,)
}

def @func_11056() -> (Tensor[(7, 6, 12), bool],) {
  @func_11054() /* ty=(Tensor[(7, 6, 12), bool],) */
}

def @func_4207() -> Tensor[(16, 11, 3), float64] {
  @func_4205() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_8231(%var_8229: Tensor[(30), bool], %var_8230: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) {
  @func_8227(%var_8229, %var_8230) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) */
}

def @func_8781(%var_8769: Tensor[(36, 22), int8], %var_8770: Tensor[(7, 132), float64], %var_8773: Tensor[(1, 832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(320), bool], Tensor[(36, 2), int8], Tensor[(320), bool], Tensor[(16, 11, 3), float64], Tensor[(13, 5, 9), bool], Tensor[(585), float64], int8, Tensor[(36, 22), int8], Tensor[(7, 132), float64], Tensor[(7, 9, 15), float64], Tensor[(1, 832), float32]) {
  %599 = @func_4973() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) */;
  %600 = cast(meta[relay.Constant][55] /* ty=Tensor[(36, 2), int8] */, dtype="int8") /* ty=Tensor[(36, 2), int8] */;
  %601 = cast(meta[relay.Constant][56] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
  %602 = reshape(%600, newshape=[72, 1]) /* ty=Tensor[(72, 1), int8] */;
  %603 = reshape(%601, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %604 = @func_5252(%602, %603) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(320), bool], int8, Tensor[(72, 1), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64]) */;
  %605 = cast(meta[relay.Constant][57] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %606 = cast(meta[relay.Constant][58] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %607 = cast(meta[relay.Constant][55] /* ty=Tensor[(36, 2), int8] */, dtype="int8") /* ty=Tensor[(36, 2), int8] */;
  %608 = cast(%var_8769, dtype="int8") /* ty=Tensor[(36, 22), int8] */;
  %609 = cast(meta[relay.Constant][56] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
  %610 = cast(%var_8770, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %611 = reshape(%605, newshape=[13, 5, 9]) /* ty=Tensor[(13, 5, 9), float64] */;
  %612 = reshape(%606, newshape=[]) /* ty=int8 */;
  %613 = reshape(%607, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %614 = reshape(%608, newshape=[2, 396]) /* ty=Tensor[(2, 396), int8] */;
  %615 = reshape(%609, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %616 = reshape(%610, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %617 = @func_2868(%611, %612, %613, %614, %615, %616) /* ty=(Tensor[(13, 5, 9), bool], Tensor[(72), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64], Tensor[(1, 104), uint8]) */;
  %618 = cast(%var_8770, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %619 = cast(%var_8773, dtype="float32") /* ty=Tensor[(1, 832), float32] */;
  %620 = reshape(%618, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %621 = reshape(%619, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %622 = @func_1135(%620, %621) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %623 = %599.0;
  %624 = %604.1;
  %625 = @func_5805() /* ty=Tensor[(16, 11, 3), float64] */;
  %626 = %617.0;
  %627 = %622.6;
  (%623, %624, meta[relay.Constant][55] /* ty=Tensor[(36, 2), int8] */, meta[relay.Constant][56] /* ty=Tensor[(320), bool] */, %625, %626, meta[relay.Constant][57] /* ty=Tensor[(585), float64] */, meta[relay.Constant][58] /* ty=int8 */, %var_8769, %var_8770, %627, %var_8773)
}

def @func_10151(%var_10132: float64) -> (Tensor[(16, 11, 3), float32], Tensor[(14, 10, 12), float64], Tensor[(1680), float64], Tensor[(7, 6, 12), uint8]) {
  %628 = cast(%var_10132, dtype="float64") /* ty=float64 */;
  %629 = cast(meta[relay.Constant][59] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %630 = cast(meta[relay.Constant][59] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %631 = reshape(%628, newshape=[]) /* ty=float64 */;
  %632 = reshape(%629, newshape=[14, 10, 12]) /* ty=Tensor[(14, 10, 12), float64] */;
  %633 = reshape(%630, newshape=[14, 10, 12]) /* ty=Tensor[(14, 10, 12), float64] */;
  %634 = @func_2460(%631, %632, %633) /* ty=(Tensor[(14, 10, 12), float64],) */;
  %635 = @func_6527() /* ty=(Tensor[(7, 6, 12), bool],) */;
  %636 = %635.0;
  %637 = cast(%636, dtype="uint8") /* ty=Tensor[(7, 6, 12), uint8] */;
  %638 = cast(%var_10132, dtype="uint8") /* ty=uint8 */;
  %639 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
  %640 = %634.0;
  %641 = bitwise_xor(%637, %638) /* ty=Tensor[(7, 6, 12), uint8] */;
  (%639, %640, meta[relay.Constant][59] /* ty=Tensor[(1680), float64] */, %641)
}

def @func_10039() -> (Tensor[(16, 11, 3), float64],) {
  @func_10037() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_11152(%var_11150: int32, %var_11151: Tensor[(8, 7, 9), int32]) -> (Tensor[(8, 7, 9), int32],) {
  @func_11148(%var_11150, %var_11151) /* ty=(Tensor[(8, 7, 9), int32],) */
}

def @func_10769(%var_10766: Tensor[(2184), uint8], %var_10767: Tensor[(198), uint32], %var_10768: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(3, 2, 10), bool], Tensor[(1, 30), bool]) {
  @func_10764(%var_10766, %var_10767, %var_10768) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(3, 2, 10), bool], Tensor[(1, 30), bool]) */
}

def @func_7554() -> (Tensor[(16, 11, 3), float32], Tensor[(588, 1), uint8]) {
  %646 = fn () -> (Tensor[(16, 11, 3), float32], Tensor[(588, 1), uint8]) {
    %642 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
    %643 = @func_6140() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) */;
    %644 = %642.0;
    %645 = %643.2;
    (%644, %645)
  };
  %646() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(588, 1), uint8]) */
}

def @func_4391() -> (Tensor[(16, 11, 3), float32],) {
  @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */
}

def @func_10028(%var_10025: Tensor[(4, 12, 1), float64], %var_10026: Tensor[(4, 12, 1), float64], %var_10027: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(4, 12, ?), float64], Tensor[(585), float64], Tensor[(792), int8], Tensor[(924), float64], Tensor[(832), float32], Tensor[(60), bool]) {
  %669 = fn (%var_9986: Tensor[(4, 12, 1), float64], %var_9987: Tensor[(4, 12, 1), float64], %var_10002: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(4, 12, ?), float64], Tensor[(585), float64], Tensor[(792), int8], Tensor[(924), float64], Tensor[(832), float32], Tensor[(60), bool]) {
    %647 = @func_6436() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */;
    %648 = cast(%var_9987, dtype="float64") /* ty=Tensor[(4, 12, 1), float64] */;
    %649 = shape_of(%var_9986, dtype="int32") /* ty=Tensor[(3), int32] */;
    %650 = cast(%var_9986, dtype="float64") /* ty=Tensor[(4, 12, 1), float64] */;
    %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %652 = mod(%650, %651) /* ty=Tensor[(4, 12, ?), float64] */;
    %653 = cast(%var_9986, dtype="float64") /* ty=Tensor[(4, 12, 1), float64] */;
    %654 = shape_of(%652, dtype="int32") /* ty=Tensor[(3), int32] */;
    %655 = cast(%652, dtype="float64") /* ty=Tensor[(4, 12, ?), float64] */;
    %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %657 = cast(meta[relay.Constant][60] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
    %658 = cast(meta[relay.Constant][61] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %659 = cast(%var_10002, dtype="float32") /* ty=Tensor[(832), float32] */;
    %660 = reshape(%657, newshape=[36, 22]) /* ty=Tensor[(36, 22), int8] */;
    %661 = reshape(%658, newshape=[7, 132]) /* ty=Tensor[(7, 132), float64] */;
    %662 = reshape(%659, newshape=[1, 832]) /* ty=Tensor[(1, 832), float32] */;
    %663 = @func_8781(%660, %661, %662) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(320), bool], Tensor[(36, 2), int8], Tensor[(320), bool], Tensor[(16, 11, 3), float64], Tensor[(13, 5, 9), bool], Tensor[(585), float64], int8, Tensor[(36, 22), int8], Tensor[(7, 132), float64], Tensor[(7, 9, 15), float64], Tensor[(1, 832), float32]) */;
    %664 = @func_7645() /* ty=(Tensor[(60), bool],) */;
    %665 = %647.0;
    %666 = floor_divide(%655, %656) /* ty=Tensor[(4, 12, ?), float64] */;
    %667 = %663.6;
    %668 = %664.0;
    (%665, %666, %667, meta[relay.Constant][60] /* ty=Tensor[(792), int8] */, meta[relay.Constant][61] /* ty=Tensor[(924), float64] */, %var_10002, %668)
  };
  %669(%var_10025, %var_10026, %var_10027) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(4, 12, ?), float64], Tensor[(585), float64], Tensor[(792), int8], Tensor[(924), float64], Tensor[(832), float32], Tensor[(60), bool]) */
}

def @func_5104() -> Tensor[(16, 11, 3), float32] {
  @func_5102() /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_4593() -> Tensor[(16, 11, 3), float32] {
  %671 = fn () -> Tensor[(16, 11, 3), float32] {
    %670 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
    %670.0
  };
  %671() /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_7835(%var_7831: Tensor[(960), uint16], %var_7832: Tensor[(320), bool], %var_7833: Tensor[(832), float32], %var_7834: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(832), float32], Tensor[(1, 924), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(1, 960), float64]) {
  @func_7829(%var_7831, %var_7832, %var_7833, %var_7834) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(832), float32], Tensor[(1, 924), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(1, 960), float64]) */
}

def @func_4530(%var_4511: Tensor[(960), uint16]) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(16, 11, 3), float32]) {
  %672 = cast(meta[relay.Constant][62] /* ty=Tensor[(192), uint16] */, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %673 = cast(%var_4511, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %674 = reshape(%672, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), uint16] */;
  %675 = reshape(%673, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), uint16] */;
  %676 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %677 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
  %678 = @func_1602(%674, %675) /* ty=Tensor[(16, 5, 12), uint16] */;
  %679 = %676.0;
  (%677, %678, meta[relay.Constant][62] /* ty=Tensor[(192), uint16] */, %var_4511, %679)
}

def @func_6455() -> (Tensor[(16, 11, 3), float64],) {
  @func_6453() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_6142() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) {
  @func_6140() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64], Tensor[(588, 1), uint8]) */
}

def @func_9847(%var_9845: Tensor[(9, 13, 8), uint32], %var_9846: Tensor[(9, 13, 8), uint16]) -> (Tensor[(9, 13, 8), bool], Tensor[(16, 11, 3), float32], Tensor[(9, 13, 8), int32]) {
  %697 = fn (%var_9797: Tensor[(9, 13, 8), uint32], %var_9822: Tensor[(9, 13, 8), uint16]) -> (Tensor[(9, 13, 8), bool], Tensor[(16, 11, 3), float32], Tensor[(9, 13, 8), int32]) {
    %680 = cast(meta[relay.Constant][63] /* ty=Tensor[(9, 13, 8), uint32] */, dtype="bool") /* ty=Tensor[(9, 13, 8), bool] */;
    %681 = shape_of(%var_9797, dtype="int32") /* ty=Tensor[(3), int32] */;
    %682 = cast(%var_9797, dtype="bool") /* ty=Tensor[(9, 13, 8), bool] */;
    %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %684 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
    %685 = cast(meta[relay.Constant][63] /* ty=Tensor[(9, 13, 8), uint32] */, dtype="uint16") /* ty=Tensor[(9, 13, 8), uint16] */;
    %686 = shape_of(%var_9797, dtype="int32") /* ty=Tensor[(3), int32] */;
    %687 = cast(%var_9797, dtype="uint16") /* ty=Tensor[(9, 13, 8), uint16] */;
    %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %689 = maximum(%687, %688) /* ty=Tensor[(9, 13, 8), uint16] */;
    %690 = cast(%var_9822, dtype="int32") /* ty=Tensor[(9, 13, 8), int32] */;
    %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
    %692 = cast(%689, dtype="int32") /* ty=Tensor[(9, 13, 8), int32] */;
    %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %694 = greater(%682, %683) /* ty=Tensor[(9, 13, 8), bool] */;
    %695 = %684.0;
    %696 = minimum(%692, %693) /* ty=Tensor[(9, 13, 8), int32] */;
    (%694, %695, %696)
  };
  %697(%var_9845, %var_9846) /* ty=(Tensor[(9, 13, 8), bool], Tensor[(16, 11, 3), float32], Tensor[(9, 13, 8), int32]) */
}

def @func_7147() -> (Tensor[(16, 11, 3), float64],) {
  %700 = fn () -> (Tensor[(16, 11, 3), float64],) {
    %698 = @func_4892() /* ty=(Tensor[(16, 11, 3), float64],) */;
    %699 = %698.0;
    (%699,)
  };
  %700() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_4974() -> (Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) {
  %705 = fn () -> (Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) {
    %701 = cast(meta[relay.Constant][64] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
    %702 = reshape(%701, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
    %703 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
    %704 = @func_1377(%702) /* ty=Tensor[(11, 7, 4), float32] */;
    (%703, %704, meta[relay.Constant][64] /* ty=Tensor[(308), float32] */)
  };
  %705() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) */
}

def @func_8030(%var_8028: int16, %var_8029: Tensor[(120), float64]) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], int16, Tensor[(1820), uint64], Tensor[(15, 2, 9), float32], Tensor[(270), float32], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) {
  %730 = fn (%var_7976: int16, %var_8015: Tensor[(120), float64]) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], int16, Tensor[(1820), uint64], Tensor[(15, 2, 9), float32], Tensor[(270), float32], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) {
    %706 = @func_5900() /* ty=(Tensor[(60), bool], Tensor[(60), bool], Tensor[(104), int32], Tensor[(16, 11, 3), float32]) */;
    %707 = cast(%var_7976, dtype="int16") /* ty=int16 */;
    %708 = cast(meta[relay.Constant][65] /* ty=Tensor[(1820), int16] */, dtype="int16") /* ty=Tensor[(1820), int16] */;
    %709 = reshape(%707, newshape=[]) /* ty=int16 */;
    %710 = reshape(%708, newshape=[10, 14, 13]) /* ty=Tensor[(10, 14, 13), int16] */;
    %711 = @func_6965(%709, %710) /* ty=(Tensor[(10, 14, 13), int16],) */;
    %712 = %711.0;
    %713 = cast(%712, dtype="uint64") /* ty=Tensor[(10, 14, 13), uint64] */;
    %714 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(1820), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %715 = cast(meta[relay.Constant][65] /* ty=Tensor[(1820), int16] */, dtype="uint64") /* ty=Tensor[(1820), uint64] */;
    %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %717 = cast(meta[relay.Constant][66] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
    %718 = reshape(%717, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
    %719 = @func_2499(%718) /* ty=(Tensor[(15, 2, 9), float32],) */;
    %720 = cast(%var_8015, dtype="float64") /* ty=Tensor[(120), float64] */;
    %721 = cast(%var_8015, dtype="float64") /* ty=Tensor[(120), float64] */;
    %722 = reshape(%720, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
    %723 = reshape(%721, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
    %724 = @func_1655(%722, %723) /* ty=(Tensor[(8, 3, 5), float64], Tensor[(8, 3, 5), float32]) */;
    %725 = %706.3;
    %726 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
    %727 = add(%715, %716) /* ty=Tensor[(1820), uint64] */;
    %728 = %719.0;
    %729 = %724.0;
    (%725, %726, %var_7976, %727, %728, meta[relay.Constant][66] /* ty=Tensor[(270), float32] */, %729, %var_8015)
  };
  %730(%var_8028, %var_8029) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], int16, Tensor[(1820), uint64], Tensor[(15, 2, 9), float32], Tensor[(270), float32], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) */
}

def @func_1658(%var_1656: Tensor[(8, 3, 5), float64], %var_1657: Tensor[(8, 3, 5), float64]) -> (Tensor[(8, 3, 5), float64], Tensor[(8, 3, 5), float32]) {
  %740 = fn (%var_1641: Tensor[(8, 3, 5), float64], %var_1645: Tensor[(8, 3, 5), float64]) -> (Tensor[(8, 3, 5), float64], Tensor[(8, 3, 5), float32]) {
    %731 = cast(%var_1645, dtype="float64") /* ty=Tensor[(8, 3, 5), float64] */;
    %732 = shape_of(%var_1641, dtype="int32") /* ty=Tensor[(3), int32] */;
    %733 = cast(%var_1641, dtype="float64") /* ty=Tensor[(8, 3, 5), float64] */;
    %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %735 = cast(%var_1641, dtype="float64") /* ty=Tensor[(8, 3, 5), float64] */;
    %736 = tan(%735) /* ty=Tensor[(8, 3, 5), float64] */;
    %737 = cast(%736, dtype="float32") /* ty=Tensor[(8, 3, 5), float32] */;
    %738 = subtract(%733, %734) /* ty=Tensor[(8, 3, 5), float64] */;
    %739 = acos(%737) /* ty=Tensor[(8, 3, 5), float32] */;
    (%738, %739)
  };
  %740(%var_1656, %var_1657) /* ty=(Tensor[(8, 3, 5), float64], Tensor[(8, 3, 5), float32]) */
}

def @func_5546(%var_5528: Tensor[(3, 66), uint32], %var_5529: Tensor[(60, 1), bool], %var_5532: int8, %var_5533: Tensor[(14, 42), uint8], %var_5537: Tensor[(120), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(12, 11, 6), bool], Tensor[(3, 66), uint32], Tensor[(60, 1), bool], Tensor[(832, 1), float32], Tensor[(2184), uint8], int8, Tensor[(14, 42), uint8], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(120), float64]) {
  %741 = @func_4352() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %742 = cast(%var_5528, dtype="uint32") /* ty=Tensor[(3, 66), uint32] */;
  %743 = cast(%var_5529, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %744 = cast(meta[relay.Constant][67] /* ty=Tensor[(832, 1), float32] */, dtype="float32") /* ty=Tensor[(832, 1), float32] */;
  %745 = cast(meta[relay.Constant][68] /* ty=Tensor[(2184), uint8] */, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %746 = cast(%var_5532, dtype="int8") /* ty=int8 */;
  %747 = cast(%var_5533, dtype="uint8") /* ty=Tensor[(14, 42), uint8] */;
  %748 = reshape(%742, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %749 = reshape(%743, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %750 = reshape(%744, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %751 = reshape(%745, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %752 = reshape(%746, newshape=[]) /* ty=int8 */;
  %753 = reshape(%747, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %754 = @func_5516(%748, %749, %750, %751, %752, %753) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32], Tensor[(832), float32], Tensor[(924), float64], Tensor[(16, 11, 3), float64], Tensor[(960), uint16], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(12, 11, 6), bool], Tensor[(18, 4), int8], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(792), int32], Tensor[(16, 11, 3), float32]) */;
  %755 = cast(meta[relay.Constant][69] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %756 = cast(%var_5529, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %757 = cast(%var_5537, dtype="float64") /* ty=Tensor[(120), float64] */;
  %758 = reshape(%755, newshape=[14, 8, 10]) /* ty=Tensor[(14, 8, 10), float64] */;
  %759 = reshape(%756, newshape=[30, 2]) /* ty=Tensor[(30, 2), bool] */;
  %760 = reshape(%757, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %761 = @func_2930(%758, %759, %760) /* ty=(Tensor[(14, 8, 10), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(30, 2), bool], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) */;
  %762 = %741.0;
  %763 = %754.13;
  %764 = %761.1;
  (%762, %763, %var_5528, %var_5529, meta[relay.Constant][67] /* ty=Tensor[(832, 1), float32] */, meta[relay.Constant][68] /* ty=Tensor[(2184), uint8] */, %var_5532, %var_5533, %764, meta[relay.Constant][69] /* ty=Tensor[(1120), float64] */, %var_5537)
}

def @func_5746(%var_5743: Tensor[(2184), uint8], %var_5744: Tensor[(198), uint32], %var_5745: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(16, 11, 3), float64], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool]) {
  @func_5741(%var_5743, %var_5744, %var_5745) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(16, 11, 3), float64], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool]) */
}

def @func_2460(%var_2436: float64, %var_2437: Tensor[(14, 10, 12), float64], %var_2446: Tensor[(14, 10, 12), float64]) -> (Tensor[(14, 10, 12), float64],) {
  %765 = cast(%var_2436, dtype="float64") /* ty=float64 */;
  %766 = cast(%var_2437, dtype="float64") /* ty=Tensor[(14, 10, 12), float64] */;
  %767 = mod(%765, %766) /* ty=Tensor[(14, 10, 12), float64] */;
  %768 = cast(%var_2446, dtype="float32") /* ty=Tensor[(14, 10, 12), float32] */;
  %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%767, dtype="float32") /* ty=Tensor[(14, 10, 12), float32] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %772 = maximum(%770, %771) /* ty=Tensor[(14, 10, 12), float32] */;
  %773 = cast(%772, dtype="float64") /* ty=Tensor[(14, 10, 12), float64] */;
  %774 = rsqrt(%773) /* ty=Tensor[(14, 10, 12), float64] */;
  (%774,)
}

def @func_4569(%var_4567: Tensor[(60), bool], %var_4568: Tensor[(104), int32]) -> (Tensor[(16, 11, 3), float32], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(416, 2), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32], Tensor[(15, 2, 9), float32], Tensor[(270, 1), float32], Tensor[(60), bool], Tensor[(2184), uint8]) {
  %804 = fn (%var_4551: Tensor[(60), bool], %var_4555: Tensor[(104), int32]) -> (Tensor[(16, 11, 3), float32], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(416, 2), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32], Tensor[(15, 2, 9), float32], Tensor[(270, 1), float32], Tensor[(60), bool], Tensor[(2184), uint8]) {
    %775 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
    %776 = cast(meta[relay.Constant][70] /* ty=Tensor[(198), uint32] */, dtype="uint32") /* ty=Tensor[(198), uint32] */;
    %777 = cast(%var_4551, dtype="bool") /* ty=Tensor[(60), bool] */;
    %778 = cast(meta[relay.Constant][71] /* ty=Tensor[(416, 2), float32] */, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
    %779 = reshape(%776, newshape=[2, 11, 9]) /* ty=Tensor[(2, 11, 9), uint32] */;
    %780 = reshape(%777, newshape=[60]) /* ty=Tensor[(60), bool] */;
    %781 = reshape(%778, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %782 = @func_1428(%779, %780, %781) /* ty=(Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) */;
    %783 = cast(%var_4555, dtype="int32") /* ty=Tensor[(104), int32] */;
    %784 = reshape(%783, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), int32] */;
    %785 = cast(meta[relay.Constant][72] /* ty=Tensor[(270, 1), float32] */, dtype="float32") /* ty=Tensor[(270, 1), float32] */;
    %786 = reshape(%785, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
    %787 = @func_2499(%786) /* ty=(Tensor[(15, 2, 9), float32],) */;
    %788 = cast(meta[relay.Constant][73] /* ty=Tensor[(2184), uint8] */, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
    %789 = cast(meta[relay.Constant][73] /* ty=Tensor[(2184), uint8] */, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
    %790 = cast(meta[relay.Constant][70] /* ty=Tensor[(198), uint32] */, dtype="uint32") /* ty=Tensor[(198), uint32] */;
    %791 = cast(%var_4551, dtype="bool") /* ty=Tensor[(60), bool] */;
    %792 = %782.9;
    %793 = cast(%792, dtype="float32") /* ty=Tensor[(832), float32] */;
    %794 = reshape(%788, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
    %795 = reshape(%789, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
    %796 = reshape(%790, newshape=[198]) /* ty=Tensor[(198), uint32] */;
    %797 = reshape(%791, newshape=[60]) /* ty=Tensor[(60), bool] */;
    %798 = reshape(%793, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %799 = @func_1569(%794, %795, %796, %797, %798) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
    %800 = %775.0;
    %801 = @func_995(%784) /* ty=Tensor[(13, 2, 4), bool] */;
    %802 = %787.0;
    %803 = %799.3;
    (%800, %792, meta[relay.Constant][70] /* ty=Tensor[(198), uint32] */, %var_4551, meta[relay.Constant][71] /* ty=Tensor[(416, 2), float32] */, %801, %var_4555, %802, meta[relay.Constant][72] /* ty=Tensor[(270, 1), float32] */, %803, meta[relay.Constant][73] /* ty=Tensor[(2184), uint8] */)
  };
  %804(%var_4567, %var_4568) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(416, 2), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32], Tensor[(15, 2, 9), float32], Tensor[(270, 1), float32], Tensor[(60), bool], Tensor[(2184), uint8]) */
}

def @func_5741(%var_5737: Tensor[(2184), uint8], %var_5738: Tensor[(198), uint32], %var_5739: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(16, 11, 3), float64], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool]) {
  %805 = cast(meta[relay.Constant][74] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %806 = reshape(%805, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
  %807 = @func_5699() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %808 = cast(%var_5737, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
  %809 = cast(%var_5738, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %810 = cast(%var_5739, dtype="bool") /* ty=Tensor[(60), bool] */;
  %811 = reshape(%808, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
  %812 = reshape(%809, newshape=[198]) /* ty=Tensor[(198), uint32] */;
  %813 = reshape(%810, newshape=[1, 60]) /* ty=Tensor[(1, 60), bool] */;
  %814 = @func_5345(%811, %812, %813) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) */;
  %815 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
  %816 = @func_1377(%806) /* ty=Tensor[(11, 7, 4), float32] */;
  %817 = %807.0;
  %818 = %814.1;
  (%815, %816, meta[relay.Constant][74] /* ty=Tensor[(308), float32] */, %817, %818, %var_5737, %var_5738, %var_5739)
}

def @func_5683() -> Tensor[(16, 11, 3), float64] {
  @func_5681() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_10233(%var_10231: Tensor[(2, 16, 11), float64], %var_10232: Tensor[(2, 16, 11), float64]) -> Tensor[(2, 16, 11), uint32] {
  %825 = fn (%var_10223: Tensor[(2, 16, 11), float64], %var_10226: Tensor[(2, 16, 11), float64]) -> Tensor[(2, 16, 11), uint32] {
    %819 = cast(%var_10223, dtype="float64") /* ty=Tensor[(2, 16, 11), float64] */;
    %820 = log2(%819) /* ty=Tensor[(2, 16, 11), float64] */;
    %821 = cast(%var_10226, dtype="uint32") /* ty=Tensor[(2, 16, 11), uint32] */;
    %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
    %823 = cast(%820, dtype="uint32") /* ty=Tensor[(2, 16, 11), uint32] */;
    %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_and(%823, %824) /* ty=Tensor[(2, 16, 11), uint32] */
  };
  %825(%var_10231, %var_10232) /* ty=Tensor[(2, 16, 11), uint32] */
}

def @func_9720() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) {
  %830 = fn () -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) {
    %826 = @func_9281() /* ty=(Tensor[(16, 11, 3), float64],) */;
    %827 = @func_7773() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) */;
    %828 = %826.0;
    %829 = %827.0;
    (%828, %829)
  };
  %830() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */
}

def @func_9946(%var_9921: Tensor[(832), float32], %var_9943: Tensor[(792), int8]) -> (Tensor[(16, 11, 3), float64], Tensor[(11, 2, 4), float64], Tensor[(88), float64], Tensor[(960), uint16], Tensor[(832), float32], Tensor[(7, 132), float64], Tensor[(792), int8], Tensor[(924), float64]) {
  %831 = cast(meta[relay.Constant][75] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %832 = cast(meta[relay.Constant][76] /* ty=Tensor[(960), uint16] */, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %833 = cast(%var_9921, dtype="float32") /* ty=Tensor[(832), float32] */;
  %834 = reshape(%831, newshape=[11, 2, 4]) /* ty=Tensor[(11, 2, 4), float64] */;
  %835 = reshape(%832, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %836 = reshape(%833, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %837 = @func_4584(%834, %835, %836) /* ty=(Tensor[(11, 2, 4), float64], Tensor[(11, 2, 4), float64], int64, Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32]) */;
  %838 = cast(%var_9943, dtype="int8") /* ty=Tensor[(792), int8] */;
  %839 = cast(meta[relay.Constant][77] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %840 = cast(%var_9921, dtype="float32") /* ty=Tensor[(832), float32] */;
  %841 = reshape(%838, newshape=[36, 22]) /* ty=Tensor[(36, 22), int8] */;
  %842 = reshape(%839, newshape=[7, 132]) /* ty=Tensor[(7, 132), float64] */;
  %843 = reshape(%840, newshape=[1, 832]) /* ty=Tensor[(1, 832), float32] */;
  %844 = @func_8781(%841, %842, %843) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(320), bool], Tensor[(36, 2), int8], Tensor[(320), bool], Tensor[(16, 11, 3), float64], Tensor[(13, 5, 9), bool], Tensor[(585), float64], int8, Tensor[(36, 22), int8], Tensor[(7, 132), float64], Tensor[(7, 9, 15), float64], Tensor[(1, 832), float32]) */;
  %845 = @func_6781() /* ty=Tensor[(16, 11, 3), float64] */;
  %846 = %837.0;
  %847 = %844.9;
  (%845, %846, meta[relay.Constant][75] /* ty=Tensor[(88), float64] */, meta[relay.Constant][76] /* ty=Tensor[(960), uint16] */, %var_9921, %847, %var_9943, meta[relay.Constant][77] /* ty=Tensor[(924), float64] */)
}

def @func_5993() -> (Tensor[(16, 11, 3), float64],) {
  %849 = fn () -> (Tensor[(16, 11, 3), float64],) {
    %848 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
    (%848,)
  };
  %849() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_10661(%var_10659: Tensor[(192), uint16], %var_10660: Tensor[(308), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(2925), int64], Tensor[(192), uint16], Tensor[(308), float32]) {
  %862 = fn (%var_10652: Tensor[(192), uint16], %var_10653: Tensor[(308), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(2925), int64], Tensor[(192), uint16], Tensor[(308), float32]) {
    %850 = @func_10455() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float32]) */;
    %851 = cast(meta[relay.Constant][78] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
    %852 = cast(meta[relay.Constant][79] /* ty=Tensor[(2925), int64] */, dtype="int64") /* ty=Tensor[(2925), int64] */;
    %853 = cast(%var_10652, dtype="uint16") /* ty=Tensor[(192), uint16] */;
    %854 = cast(%var_10653, dtype="float32") /* ty=Tensor[(308), float32] */;
    %855 = reshape(%851, newshape=[60]) /* ty=Tensor[(60), bool] */;
    %856 = reshape(%852, newshape=[15, 195]) /* ty=Tensor[(15, 195), int64] */;
    %857 = reshape(%853, newshape=[192]) /* ty=Tensor[(192), uint16] */;
    %858 = reshape(%854, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
    %859 = @func_9002(%855, %856, %857, %858) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(588, 14), uint64], Tensor[(8232), uint8], Tensor[(60), bool], Tensor[(8, 104), float32], Tensor[(16, 11, 3), float64], Tensor[(15, 13, 15), float32], Tensor[(15, 195), int64], Tensor[(192), uint16], Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(154, 2), float32], int64, Tensor[(22, 4), float64], Tensor[(2, 480), uint16], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(1, 832), float32], Tensor[(924), float64], Tensor[(8, 198), bool]) */;
    %860 = %850.1;
    %861 = %859.1;
    (%860, %861, meta[relay.Constant][78] /* ty=Tensor[(60), bool] */, meta[relay.Constant][79] /* ty=Tensor[(2925), int64] */, %var_10652, %var_10653)
  };
  %862(%var_10659, %var_10660) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(2925), int64], Tensor[(192), uint16], Tensor[(308), float32]) */
}

def @func_5523(%var_5517: Tensor[(198), uint32], %var_5518: Tensor[(60), bool], %var_5519: Tensor[(832), float32], %var_5520: Tensor[(2184), uint8], %var_5521: int8, %var_5522: Tensor[(588), uint8]) -> (Tensor[(16, 11, 3), float64], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32], Tensor[(832), float32], Tensor[(924), float64], Tensor[(16, 11, 3), float64], Tensor[(960), uint16], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(12, 11, 6), bool], Tensor[(18, 4), int8], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(792), int32], Tensor[(16, 11, 3), float32]) {
  %928 = fn (%var_5411: Tensor[(198), uint32], %var_5412: Tensor[(60), bool], %var_5413: Tensor[(832), float32], %var_5465: Tensor[(2184), uint8], %var_5478: int8, %var_5488: Tensor[(588), uint8]) -> (Tensor[(16, 11, 3), float64], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32], Tensor[(832), float32], Tensor[(924), float64], Tensor[(16, 11, 3), float64], Tensor[(960), uint16], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(12, 11, 6), bool], Tensor[(18, 4), int8], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(792), int32], Tensor[(16, 11, 3), float32]) {
    %863 = cast(%var_5411, dtype="uint32") /* ty=Tensor[(198), uint32] */;
    %864 = cast(%var_5412, dtype="bool") /* ty=Tensor[(60), bool] */;
    %865 = cast(%var_5413, dtype="float32") /* ty=Tensor[(832), float32] */;
    %866 = reshape(%863, newshape=[2, 11, 9]) /* ty=Tensor[(2, 11, 9), uint32] */;
    %867 = reshape(%864, newshape=[60]) /* ty=Tensor[(60), bool] */;
    %868 = reshape(%865, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %869 = @func_1428(%866, %867, %868) /* ty=(Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) */;
    %870 = cast(meta[relay.Constant][80] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %871 = %869.9;
    %872 = cast(%871, dtype="float32") /* ty=Tensor[(832), float32] */;
    %873 = reshape(%870, newshape=[924]) /* ty=Tensor[(924), float64] */;
    %874 = reshape(%872, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %875 = @func_1135(%873, %874) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
    %876 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
    %877 = cast(%876, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
    %878 = cast(meta[relay.Constant][81] /* ty=Tensor[(960), uint16] */, dtype="uint16") /* ty=Tensor[(960), uint16] */;
    %879 = cast(meta[relay.Constant][82] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
    %880 = reshape(%877, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), float32] */;
    %881 = reshape(%878, newshape=[960]) /* ty=Tensor[(960), uint16] */;
    %882 = reshape(%879, newshape=[320]) /* ty=Tensor[(320), bool] */;
    %883 = @func_5033(%880, %881, %882) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) */;
    %884 = cast(%var_5465, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
    %885 = cast(%var_5465, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
    %886 = cast(%var_5411, dtype="uint32") /* ty=Tensor[(198), uint32] */;
    %887 = cast(%var_5412, dtype="bool") /* ty=Tensor[(60), bool] */;
    %888 = cast(%var_5413, dtype="float32") /* ty=Tensor[(832), float32] */;
    %889 = reshape(%884, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
    %890 = reshape(%885, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
    %891 = reshape(%886, newshape=[198]) /* ty=Tensor[(198), uint32] */;
    %892 = reshape(%887, newshape=[60]) /* ty=Tensor[(60), bool] */;
    %893 = reshape(%888, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %894 = @func_1569(%889, %890, %891, %892, %893) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
    %895 = cast(%var_5478, dtype="int8") /* ty=int8 */;
    %896 = cast(meta[relay.Constant][83] /* ty=Tensor[(18, 4), int8] */, dtype="int8") /* ty=Tensor[(18, 4), int8] */;
    %897 = cast(meta[relay.Constant][84] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
    %898 = cast(meta[relay.Constant][82] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
    %899 = cast(meta[relay.Constant][80] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %900 = reshape(%895, newshape=[]) /* ty=int8 */;
    %901 = reshape(%896, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), int8] */;
    %902 = reshape(%897, newshape=[12, 11, 6]) /* ty=Tensor[(12, 11, 6), int8] */;
    %903 = reshape(%898, newshape=[320]) /* ty=Tensor[(320), bool] */;
    %904 = reshape(%899, newshape=[924]) /* ty=Tensor[(924), float64] */;
    %905 = @func_2391(%900, %901, %902, %903, %904) /* ty=(Tensor[(12, 1, 6), int8], Tensor[(12, 11, 6), bool], Tensor[(924), float64], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(1, 104), int32]) */;
    %906 = cast(%876, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
    %907 = cast(%var_5488, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %908 = reshape(%906, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), float32] */;
    %909 = reshape(%907, newshape=[588]) /* ty=Tensor[(588), uint8] */;
    %910 = @func_4478(%908, %909) /* ty=(Tensor[(16, 11, 3), bool], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64]) */;
    %911 = cast(meta[relay.Constant][84] /* ty=Tensor[(792), int8] */, dtype="int32") /* ty=Tensor[(792), int32] */;
    %912 = cast(%var_5478, dtype="int32") /* ty=int32 */;
    %913 = cast(%876, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
    %914 = %883.2;
    %915 = cast(%914, dtype="uint16") /* ty=Tensor[(960), uint16] */;
    %916 = cast(meta[relay.Constant][82] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
    %917 = reshape(%913, newshape=[16, 11, 3]) /* ty=Tensor[(16, 11, 3), float32] */;
    %918 = reshape(%915, newshape=[960]) /* ty=Tensor[(960), uint16] */;
    %919 = reshape(%916, newshape=[320]) /* ty=Tensor[(320), bool] */;
    %920 = @func_5033(%917, %918, %919) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) */;
    %921 = @func_4084() /* ty=Tensor[(16, 11, 3), float64] */;
    %922 = %875.5;
    %923 = %894.4;
    %924 = %905.1;
    %925 = %910.1;
    %926 = minimum(%911, %912) /* ty=Tensor[(792), int32] */;
    %927 = %920.0;
    (%921, %871, %var_5411, %var_5412, %var_5413, %922, meta[relay.Constant][80] /* ty=Tensor[(924), float64] */, %876, %914, meta[relay.Constant][81] /* ty=Tensor[(960), uint16] */, meta[relay.Constant][82] /* ty=Tensor[(320), bool] */, %923, %var_5465, %924, meta[relay.Constant][83] /* ty=Tensor[(18, 4), int8] */, %925, %var_5488, %926, %927)
  };
  %928(%var_5517, %var_5518, %var_5519, %var_5520, %var_5521, %var_5522) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32], Tensor[(832), float32], Tensor[(924), float64], Tensor[(16, 11, 3), float64], Tensor[(960), uint16], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(12, 11, 6), bool], Tensor[(18, 4), int8], Tensor[(14, 14, 3), bool], Tensor[(588), uint8], Tensor[(792), int32], Tensor[(16, 11, 3), float32]) */
}

def @func_1377(%var_1371: Tensor[(11, 7, 4), float32]) -> Tensor[(11, 7, 4), float32] {
  %929 = cast(%var_1371, dtype="float32") /* ty=Tensor[(11, 7, 4), float32] */;
  atan(%929) /* ty=Tensor[(11, 7, 4), float32] */
}

def @func_6632() -> Tensor[(16, 11, 3), float32] {
  %930 = @func_4973() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) */;
  %931 = %930.0;
  %932 = cast(%931, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  exp(%932) /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_9603(%var_9601: Tensor[(270, 1), float32], %var_9602: Tensor[(270, 7), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(16, 11, 3), float64], Tensor[(270, 7), int32], Tensor[(16, 11, 3), float64]) {
  @func_9599(%var_9601, %var_9602) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(16, 11, 3), float64], Tensor[(270, 7), int32], Tensor[(16, 11, 3), float64]) */
}

def @func_4354() -> (Tensor[(16, 11, 3), float64],) {
  @func_4352() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_7627(%var_7625: Tensor[(960), uint16], %var_7626: Tensor[(1, 104), int32]) -> (Tensor[(60), bool], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(13, 2, 4), bool], Tensor[(1, 104), int32]) {
  %942 = fn (%var_7613: Tensor[(960), uint16], %var_7620: Tensor[(1, 104), int32]) -> (Tensor[(60), bool], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(13, 2, 4), bool], Tensor[(1, 104), int32]) {
    %933 = @func_5900() /* ty=(Tensor[(60), bool], Tensor[(60), bool], Tensor[(104), int32], Tensor[(16, 11, 3), float32]) */;
    %934 = cast(%var_7613, dtype="uint16") /* ty=Tensor[(960), uint16] */;
    %935 = reshape(%934, newshape=[960]) /* ty=Tensor[(960), uint16] */;
    %936 = @func_4530(%935) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(16, 11, 3), float32]) */;
    %937 = cast(%var_7620, dtype="int32") /* ty=Tensor[(1, 104), int32] */;
    %938 = reshape(%937, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), int32] */;
    %939 = %933.0;
    %940 = %936.2;
    %941 = @func_995(%938) /* ty=Tensor[(13, 2, 4), bool] */;
    (%939, %940, %var_7613, %941, %var_7620)
  };
  %942(%var_7625, %var_7626) /* ty=(Tensor[(60), bool], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(13, 2, 4), bool], Tensor[(1, 104), int32]) */
}

def @func_348(%var_346: uint64, %var_347: Tensor[(7, 1), uint64]) -> (Tensor[(7, 1), uint64],) {
  %946 = fn (%var_337: uint64, %var_338: Tensor[(7, 1), uint64]) -> (Tensor[(7, 1), uint64],) {
    %943 = cast(%var_337, dtype="uint64") /* ty=uint64 */;
    %944 = cast(%var_338, dtype="uint64") /* ty=Tensor[(7, 1), uint64] */;
    %945 = bitwise_and(%943, %944) /* ty=Tensor[(7, 1), uint64] */;
    (%945,)
  };
  %946(%var_346, %var_347) /* ty=(Tensor[(7, 1), uint64],) */
}

def @func_7043() -> (Tensor[(16, 11, 3), float64],) {
  @func_7041() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_11336(%var_11335: Tensor[(924), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(924), float64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) {
  %956 = fn (%var_11317: Tensor[(924), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(924), float64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) {
    %947 = @func_7146() /* ty=(Tensor[(16, 11, 3), float64],) */;
    %948 = cast(%var_11317, dtype="float64") /* ty=Tensor[(924), float64] */;
    %949 = cast(meta[relay.Constant][85] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
    %950 = reshape(%948, newshape=[924]) /* ty=Tensor[(924), float64] */;
    %951 = reshape(%949, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %952 = @func_1135(%950, %951) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
    %953 = %947.0;
    %954 = %952.4;
    %955 = @func_6632() /* ty=Tensor[(16, 11, 3), float32] */;
    (%953, %954, %var_11317, meta[relay.Constant][85] /* ty=Tensor[(832), float32] */, %955)
  };
  %956(%var_11335) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(924), float64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) */
}

def @func_1576(%var_1571: Tensor[(14, 12, 13), uint8], %var_1572: Tensor[(14, 12, 13), uint8], %var_1573: Tensor[(198), uint32], %var_1574: Tensor[(60), bool], %var_1575: Tensor[(832), float32]) -> (Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) {
  @func_1569(%var_1571, %var_1572, %var_1573, %var_1574, %var_1575) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */
}

def @func_9246(%var_9244: Tensor[(2925), int64]) -> (Tensor[(16, 11, 3), float64], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(60), bool], Tensor[(120), float64], Tensor[(192), uint16], Tensor[(2925), int64], Tensor[(192), uint16]) {
  @func_9243(%var_9244) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(3, 2, 10), bool], Tensor[(1120), float64], Tensor[(60), bool], Tensor[(120), float64], Tensor[(192), uint16], Tensor[(2925), int64], Tensor[(192), uint16]) */
}

def @func_6528() -> (Tensor[(7, 6, 12), bool],) {
  %962 = fn () -> (Tensor[(7, 6, 12), bool],) {
    %957 = cast(meta[relay.Constant][87] /* ty=Tensor[(7, 6, 12), int32] */, dtype="bool") /* ty=Tensor[(7, 6, 12), bool] */;
    %958 = shape_of(meta[relay.Constant][86] /* ty=Tensor[(7, 6, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %959 = cast(meta[relay.Constant][86] /* ty=Tensor[(7, 6, 12), int32] */, dtype="bool") /* ty=Tensor[(7, 6, 12), bool] */;
    %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %961 = less(%959, %960) /* ty=Tensor[(7, 6, 12), bool] */;
    (%961,)
  };
  %962() /* ty=(Tensor[(7, 6, 12), bool],) */
}

def @func_5355() -> (Tensor[(16, 11, 3), float64],) {
  @func_5353() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_5102() -> Tensor[(16, 11, 3), float32] {
  %963 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %963.0
}

def @func_6107() -> (Tensor[(16, 11, 3), float64],) {
  @func_6105() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_5700() -> (Tensor[(16, 11, 3), float64],) {
  %966 = fn () -> (Tensor[(16, 11, 3), float64],) {
    %964 = @func_4352() /* ty=(Tensor[(16, 11, 3), float64],) */;
    %965 = %964.0;
    (%965,)
  };
  %966() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_6917(%var_6870: Tensor[(588, 14), uint8], %var_6888: Tensor[(198), uint32], %var_6889: Tensor[(60, 1), bool], %var_6890: Tensor[(832), float32]) -> (Tensor[(588, 14), uint64], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60, 1), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(588, 14), float64]) {
  %967 = @func_6157() /* ty=(Tensor[(588, 1), uint8],) */;
  %968 = %967.0;
  %969 = cast(%968, dtype="uint64") /* ty=Tensor[(588, 1), uint64] */;
  %970 = cast(%var_6870, dtype="uint64") /* ty=Tensor[(588, 14), uint64] */;
  %971 = cast(%var_6888, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %972 = cast(%var_6889, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %973 = cast(%var_6890, dtype="float32") /* ty=Tensor[(832), float32] */;
  %974 = reshape(%971, newshape=[2, 11, 9]) /* ty=Tensor[(2, 11, 9), uint32] */;
  %975 = reshape(%972, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %976 = reshape(%973, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %977 = @func_1428(%974, %975, %976) /* ty=(Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) */;
  %978 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %979 = cast(%var_6870, dtype="float64") /* ty=Tensor[(588, 14), float64] */;
  %980 = sin(%979) /* ty=Tensor[(588, 14), float64] */;
  %981 = cast(%980, dtype="float64") /* ty=Tensor[(588, 14), float64] */;
  %982 = subtract(%969, %970) /* ty=Tensor[(588, 14), uint64] */;
  %983 = %977.3;
  %984 = %978.0;
  %985 = acos(%981) /* ty=Tensor[(588, 14), float64] */;
  (%982, %983, %var_6888, %var_6889, %var_6890, %984, %985)
}

def @func_9637() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) {
  %989 = fn () -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) {
    %986 = @func_6453() /* ty=(Tensor[(16, 11, 3), float64],) */;
    %987 = @func_6506() /* ty=Tensor[(16, 11, 3), float64] */;
    %988 = %986.0;
    (%987, %988)
  };
  %989() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) */
}

def @func_7714(%var_7713: Tensor[(72), int8]) -> (Tensor[(16, 11, 3), float32], Tensor[(320), bool], Tensor[(72), int8], Tensor[(320), bool]) {
  %998 = fn (%var_7693: Tensor[(72), int8]) -> (Tensor[(16, 11, 3), float32], Tensor[(320), bool], Tensor[(72), int8], Tensor[(320), bool]) {
    %990 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
    %991 = cast(%var_7693, dtype="int8") /* ty=Tensor[(72), int8] */;
    %992 = cast(meta[relay.Constant][88] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
    %993 = reshape(%991, newshape=[72, 1]) /* ty=Tensor[(72, 1), int8] */;
    %994 = reshape(%992, newshape=[320]) /* ty=Tensor[(320), bool] */;
    %995 = @func_5252(%993, %994) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(320), bool], int8, Tensor[(72, 1), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64]) */;
    %996 = %990.0;
    %997 = %995.5;
    (%996, %997, %var_7693, meta[relay.Constant][88] /* ty=Tensor[(320), bool] */)
  };
  %998(%var_7713) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(320), bool], Tensor[(72), int8], Tensor[(320), bool]) */
}

def @func_10037() -> (Tensor[(16, 11, 3), float64],) {
  %999 = @func_9636() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float64]) */;
  %1000 = %999.1;
  (%1000,)
}

def @func_9704(%var_9699: Tensor[(160, 2), bool], %var_9700: Tensor[(832), float32], %var_9701: Tensor[(1, 2184), uint8], %var_9702: Tensor[(99, 2), uint32], %var_9703: Tensor[(96, 2), uint16]) -> (Tensor[(16, 11, 3), float64], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32], Tensor[(1, 2184), uint8], Tensor[(99, 2), uint32], Tensor[(60, 1), bool], Tensor[(96, 2), uint16]) {
  @func_9697(%var_9699, %var_9700, %var_9701, %var_9702, %var_9703) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(160, 2), bool], Tensor[(832), float32], Tensor[(1, 2184), uint8], Tensor[(99, 2), uint32], Tensor[(60, 1), bool], Tensor[(96, 2), uint16]) */
}

def @func_9135() -> (Tensor[(16, 11, 3), float32],) {
  %1002 = fn () -> (Tensor[(16, 11, 3), float32],) {
    %1001 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
    (%1001,)
  };
  %1002() /* ty=(Tensor[(16, 11, 3), float32],) */
}

def @func_7041() -> (Tensor[(16, 11, 3), float64],) {
  %1003 = @func_6453() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1004 = %1003.0;
  (%1004,)
}

def @func_8799() -> Tensor[(16, 11, 3), float64] {
  %1005 = fn () -> Tensor[(16, 11, 3), float64] {
    @func_6506() /* ty=Tensor[(16, 11, 3), float64] */
  };
  %1005() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_8145() -> (Tensor[(16, 11, 3), float64],) {
  %1006 = @func_6781() /* ty=Tensor[(16, 11, 3), float64] */;
  (%1006,)
}

def @func_10297() -> Tensor[(588, 1), float64] {
  %1007 = @func_6157() /* ty=(Tensor[(588, 1), uint8],) */;
  %1008 = %1007.0;
  %1009 = cast(%1008, dtype="float64") /* ty=Tensor[(588, 1), float64] */;
  cos(%1009) /* ty=Tensor[(588, 1), float64] */
}

def @func_3267(%var_3265: int64, %var_3266: Tensor[(9, 14, 8), int64]) -> (Tensor[(9, 14, 8), bool], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) {
  %1019 = fn (%var_3240: int64, %var_3241: Tensor[(9, 14, 8), int64]) -> (Tensor[(9, 14, 8), bool], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) {
    %1010 = cast(%var_3240, dtype="bool") /* ty=bool */;
    %1011 = cast(%var_3241, dtype="bool") /* ty=Tensor[(9, 14, 8), bool] */;
    %1012 = cast(meta[relay.Constant][89] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
    %1013 = cast(meta[relay.Constant][90] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
    %1014 = reshape(%1012, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
    %1015 = reshape(%1013, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %1016 = @func_735(%1014, %1015) /* ty=(Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) */;
    %1017 = greater_equal(%1010, %1011) /* ty=Tensor[(9, 14, 8), bool] */;
    %1018 = %1016.1;
    (%1017, %1018, meta[relay.Constant][89] /* ty=Tensor[(154, 6), float64] */, meta[relay.Constant][90] /* ty=Tensor[(832), float32] */)
  };
  %1019(%var_3265, %var_3266) /* ty=(Tensor[(9, 14, 8), bool], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) */
}

def @func_5349(%var_5346: Tensor[(2184), uint8], %var_5347: Tensor[(198), uint32], %var_5348: Tensor[(1, 60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) {
  %1034 = fn (%var_5323: Tensor[(2184), uint8], %var_5324: Tensor[(198), uint32], %var_5325: Tensor[(1, 60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) {
    %1020 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
    %1021 = cast(%var_5323, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
    %1022 = cast(%var_5323, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
    %1023 = cast(%var_5324, dtype="uint32") /* ty=Tensor[(198), uint32] */;
    %1024 = cast(%var_5325, dtype="bool") /* ty=Tensor[(1, 60), bool] */;
    %1025 = cast(meta[relay.Constant][91] /* ty=Tensor[(416, 2), float32] */, dtype="float32") /* ty=Tensor[(416, 2), float32] */;
    %1026 = reshape(%1021, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
    %1027 = reshape(%1022, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
    %1028 = reshape(%1023, newshape=[198]) /* ty=Tensor[(198), uint32] */;
    %1029 = reshape(%1024, newshape=[60]) /* ty=Tensor[(60), bool] */;
    %1030 = reshape(%1025, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %1031 = @func_1569(%1026, %1027, %1028, %1029, %1030) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
    %1032 = %1020.0;
    %1033 = %1031.0;
    (%1032, %1033, %var_5323, %var_5324, %var_5325, meta[relay.Constant][91] /* ty=Tensor[(416, 2), float32] */)
  };
  %1034(%var_5346, %var_5347, %var_5348) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) */
}

def @func_7013() -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) {
  %1035 = @func_6632() /* ty=Tensor[(16, 11, 3), float32] */;
  %1036 = cast(%1035, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
  %1037 = @func_5598() /* ty=Tensor[(16, 11, 3), float32] */;
  %1038 = log10(%1036) /* ty=Tensor[(16, 11, 3), float64] */;
  (%1037, %1038)
}

def @func_8467(%var_8465: int64, %var_8466: Tensor[(6, 11, 12), float64]) -> (Tensor[(6, 11, 12), float32], Tensor[(16, 11, 3), float32], int64, Tensor[(6, 11, 12), uint16]) {
  @func_8463(%var_8465, %var_8466) /* ty=(Tensor[(6, 11, 12), float32], Tensor[(16, 11, 3), float32], int64, Tensor[(6, 11, 12), uint16]) */
}

def @func_5252(%var_5239: Tensor[(72, 1), int8], %var_5241: Tensor[(320), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(320), bool], int8, Tensor[(72, 1), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64]) {
  %1039 = cast(meta[relay.Constant][92] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1040 = cast(%var_5239, dtype="int8") /* ty=Tensor[(72, 1), int8] */;
  %1041 = cast(meta[relay.Constant][93] /* ty=Tensor[(2, 396), int8] */, dtype="int8") /* ty=Tensor[(2, 396), int8] */;
  %1042 = cast(%var_5241, dtype="bool") /* ty=Tensor[(320), bool] */;
  %1043 = cast(meta[relay.Constant][94] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1044 = reshape(%1039, newshape=[]) /* ty=int8 */;
  %1045 = reshape(%1040, newshape=[12, 1, 6]) /* ty=Tensor[(12, 1, 6), int8] */;
  %1046 = reshape(%1041, newshape=[12, 11, 6]) /* ty=Tensor[(12, 11, 6), int8] */;
  %1047 = reshape(%1042, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %1048 = reshape(%1043, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1049 = @func_2391(%1044, %1045, %1046, %1047, %1048) /* ty=(Tensor[(12, 1, 6), int8], Tensor[(12, 11, 6), bool], Tensor[(924), float64], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(1, 104), int32]) */;
  %1050 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
  %1051 = %1049.3;
  (%1050, %1051, meta[relay.Constant][92] /* ty=int8 */, %var_5239, meta[relay.Constant][93] /* ty=Tensor[(2, 396), int8] */, %var_5241, meta[relay.Constant][94] /* ty=Tensor[(924), float64] */)
}

def @func_738(%var_736: Tensor[(14, 11, 6), float64], %var_737: Tensor[(832), float32]) -> (Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) {
  %1065 = fn (%var_663: Tensor[(14, 11, 6), float64], %var_728: Tensor[(832), float32]) -> (Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) {
    %1052 = cast(%var_663, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
    %1053 = rsqrt(%1052) /* ty=Tensor[(14, 11, 6), float64] */;
    %1054 = cast(%1053, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
    %1055 = acos(%1054) /* ty=Tensor[(14, 11, 6), float64] */;
    %1056 = cast(%var_663, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
    %1057 = shape_of(%1055, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1058 = cast(%1055, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
    %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1060 = cast(%var_728, dtype="float32") /* ty=Tensor[(832), float32] */;
    %1061 = reshape(%1060, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float32] */;
    %1062 = @func_303(%1061) /* ty=(Tensor[(16, 4, 13), float32], Tensor[(16, 4, 13), float64]) */;
    %1063 = divide(%1058, %1059) /* ty=Tensor[(14, 11, 6), float32] */;
    %1064 = %1062.0;
    (%1063, %1064, %var_728)
  };
  %1065(%var_736, %var_737) /* ty=(Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) */
}

def @func_7461(%var_7460: Tensor[(832), float32]) -> (Tensor[(588, 1), uint8], Tensor[(10, 14, 13), int16], int16, Tensor[(1820, 1), int16], Tensor[(16, 11, 3), float64], Tensor[(198), uint32], Tensor[(104), int32], Tensor[(14, 12, 13), uint8], Tensor[(2184, 1), uint8], Tensor[(60), bool], Tensor[(832), float32], Tensor[(13, 2, 4), float64]) {
  %1100 = fn (%var_7431: Tensor[(832), float32]) -> (Tensor[(588, 1), uint8], Tensor[(10, 14, 13), int16], int16, Tensor[(1820, 1), int16], Tensor[(16, 11, 3), float64], Tensor[(198), uint32], Tensor[(104), int32], Tensor[(14, 12, 13), uint8], Tensor[(2184, 1), uint8], Tensor[(60), bool], Tensor[(832), float32], Tensor[(13, 2, 4), float64]) {
    %1066 = @func_6157() /* ty=(Tensor[(588, 1), uint8],) */;
    %1067 = cast(meta[relay.Constant][95] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1068 = cast(meta[relay.Constant][96] /* ty=Tensor[(1820, 1), int16] */, dtype="int16") /* ty=Tensor[(1820, 1), int16] */;
    %1069 = reshape(%1067, newshape=[]) /* ty=int16 */;
    %1070 = reshape(%1068, newshape=[10, 14, 13]) /* ty=Tensor[(10, 14, 13), int16] */;
    %1071 = @func_6965(%1069, %1070) /* ty=(Tensor[(10, 14, 13), int16],) */;
    %1072 = @func_7041() /* ty=(Tensor[(16, 11, 3), float64],) */;
    %1073 = cast(meta[relay.Constant][99] /* ty=Tensor[(2184, 1), uint8] */, dtype="uint8") /* ty=Tensor[(2184, 1), uint8] */;
    %1074 = cast(meta[relay.Constant][99] /* ty=Tensor[(2184, 1), uint8] */, dtype="uint8") /* ty=Tensor[(2184, 1), uint8] */;
    %1075 = cast(meta[relay.Constant][97] /* ty=Tensor[(198), uint32] */, dtype="uint32") /* ty=Tensor[(198), uint32] */;
    %1076 = cast(meta[relay.Constant][100] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
    %1077 = cast(%var_7431, dtype="float32") /* ty=Tensor[(832), float32] */;
    %1078 = reshape(%1073, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
    %1079 = reshape(%1074, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
    %1080 = reshape(%1075, newshape=[198]) /* ty=Tensor[(198), uint32] */;
    %1081 = reshape(%1076, newshape=[60]) /* ty=Tensor[(60), bool] */;
    %1082 = reshape(%1077, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %1083 = @func_1569(%1078, %1079, %1080, %1081, %1082) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
    %1084 = cast(meta[relay.Constant][97] /* ty=Tensor[(198), uint32] */, dtype="uint32") /* ty=Tensor[(198), uint32] */;
    %1085 = cast(meta[relay.Constant][95] /* ty=int16 */, dtype="int8") /* ty=int8 */;
    %1086 = %1066.0;
    %1087 = cast(%1086, dtype="uint8") /* ty=Tensor[(588, 1), uint8] */;
    %1088 = cast(meta[relay.Constant][98] /* ty=Tensor[(104), int32] */, dtype="int32") /* ty=Tensor[(104), int32] */;
    %1089 = reshape(%1084, newshape=[198]) /* ty=Tensor[(198), uint32] */;
    %1090 = reshape(%1085, newshape=[]) /* ty=int8 */;
    %1091 = reshape(%1087, newshape=[7, 84]) /* ty=Tensor[(7, 84), uint8] */;
    %1092 = reshape(%1088, newshape=[104]) /* ty=Tensor[(104), int32] */;
    %1093 = @func_5667(%1089, %1090, %1091, %1092) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(60), bool], int8, Tensor[(7, 84), uint8], Tensor[(120), float64], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) */;
    %1094 = %1093.7;
    %1095 = cast(%1094, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
    %1096 = %1071.0;
    %1097 = %1072.0;
    %1098 = %1083.0;
    %1099 = rsqrt(%1095) /* ty=Tensor[(13, 2, 4), float64] */;
    (%1086, %1096, meta[relay.Constant][95] /* ty=int16 */, meta[relay.Constant][96] /* ty=Tensor[(1820, 1), int16] */, %1097, meta[relay.Constant][97] /* ty=Tensor[(198), uint32] */, meta[relay.Constant][98] /* ty=Tensor[(104), int32] */, %1098, meta[relay.Constant][99] /* ty=Tensor[(2184, 1), uint8] */, meta[relay.Constant][100] /* ty=Tensor[(60), bool] */, %var_7431, %1099)
  };
  %1100(%var_7460) /* ty=(Tensor[(588, 1), uint8], Tensor[(10, 14, 13), int16], int16, Tensor[(1820, 1), int16], Tensor[(16, 11, 3), float64], Tensor[(198), uint32], Tensor[(104), int32], Tensor[(14, 12, 13), uint8], Tensor[(2184, 1), uint8], Tensor[(60), bool], Tensor[(832), float32], Tensor[(13, 2, 4), float64]) */
}

def @func_11131(%var_11129: Tensor[(9, 15, 14), int64], %var_11130: Tensor[(9, 15, 14), int64]) -> Tensor[(9, 15, 14), bool] {
  @func_11127(%var_11129, %var_11130) /* ty=Tensor[(9, 15, 14), bool] */
}

def @func_6610(%var_6606: Tensor[(960), uint16], %var_6607: Tensor[(2184, 1), uint8], %var_6608: Tensor[(1, 198), uint32], %var_6609: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184, 832), float32], Tensor[(192, 1), float32], Tensor[(16, 11, 3), float64]) {
  %1127 = fn (%var_6572: Tensor[(960), uint16], %var_6575: Tensor[(2184, 1), uint8], %var_6576: Tensor[(1, 198), uint32], %var_6577: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184, 832), float32], Tensor[(192, 1), float32], Tensor[(16, 11, 3), float64]) {
    %1101 = @func_4973() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) */;
    %1102 = cast(%var_6572, dtype="uint16") /* ty=Tensor[(960), uint16] */;
    %1103 = cast(meta[relay.Constant][101] /* ty=Tensor[(320), bool] */, dtype="bool") /* ty=Tensor[(320), bool] */;
    %1104 = cast(meta[relay.Constant][102] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
    %1105 = cast(%var_6575, dtype="uint8") /* ty=Tensor[(2184, 1), uint8] */;
    %1106 = cast(%var_6576, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
    %1107 = cast(%var_6577, dtype="bool") /* ty=Tensor[(60), bool] */;
    %1108 = cast(meta[relay.Constant][103] /* ty=Tensor[(192, 1), uint16] */, dtype="uint16") /* ty=Tensor[(192, 1), uint16] */;
    %1109 = reshape(%1102, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
    %1110 = reshape(%1103, newshape=[320]) /* ty=Tensor[(320), bool] */;
    %1111 = reshape(%1104, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %1112 = reshape(%1105, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
    %1113 = reshape(%1106, newshape=[1, 198]) /* ty=Tensor[(1, 198), uint32] */;
    %1114 = reshape(%1107, newshape=[60]) /* ty=Tensor[(60), bool] */;
    %1115 = reshape(%1108, newshape=[192]) /* ty=Tensor[(192), uint16] */;
    %1116 = @func_6230(%1109, %1110, %1111, %1112, %1113, %1114, %1115) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(1, 960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16]) */;
    %1117 = cast(meta[relay.Constant][102] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
    %1118 = cast(%var_6575, dtype="float32") /* ty=Tensor[(2184, 1), float32] */;
    %1119 = cast(meta[relay.Constant][103] /* ty=Tensor[(192, 1), uint16] */, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
    %1120 = @func_4892() /* ty=(Tensor[(16, 11, 3), float64],) */;
    %1121 = @func_4592() /* ty=Tensor[(16, 11, 3), float32] */;
    %1122 = %1101.1;
    %1123 = %1116.6;
    %1124 = subtract(%1117, %1118) /* ty=Tensor[(2184, 832), float32] */;
    %1125 = atanh(%1119) /* ty=Tensor[(192, 1), float32] */;
    %1126 = %1120.0;
    (%1121, %1122, %1123, %var_6572, meta[relay.Constant][101] /* ty=Tensor[(320), bool] */, %var_6576, %var_6577, %1124, %1125, %1126)
  };
  %1127(%var_6606, %var_6607, %var_6608, %var_6609) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(60), bool], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184, 832), float32], Tensor[(192, 1), float32], Tensor[(16, 11, 3), float64]) */
}

def @func_8786(%var_8783: Tensor[(36, 22), int8], %var_8784: Tensor[(7, 132), float64], %var_8785: Tensor[(1, 832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(320), bool], Tensor[(36, 2), int8], Tensor[(320), bool], Tensor[(16, 11, 3), float64], Tensor[(13, 5, 9), bool], Tensor[(585), float64], int8, Tensor[(36, 22), int8], Tensor[(7, 132), float64], Tensor[(7, 9, 15), float64], Tensor[(1, 832), float32]) {
  @func_8781(%var_8783, %var_8784, %var_8785) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(320), bool], Tensor[(36, 2), int8], Tensor[(320), bool], Tensor[(16, 11, 3), float64], Tensor[(13, 5, 9), bool], Tensor[(585), float64], int8, Tensor[(36, 22), int8], Tensor[(7, 132), float64], Tensor[(7, 9, 15), float64], Tensor[(1, 832), float32]) */
}

def @func_9283() -> (Tensor[(16, 11, 3), float64],) {
  @func_9281() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_1380(%var_1378: Tensor[(11, 7, 4), float32]) -> Tensor[(11, 7, 4), float32] {
  @func_1377(%var_1378) /* ty=Tensor[(11, 7, 4), float32] */
}

def @func_5311(%var_5309: Tensor[(14, 16, 1), float32]) -> (Tensor[(14, 16, 1), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) {
  @func_5308(%var_5309) /* ty=(Tensor[(14, 16, 1), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) */
}

def @func_4795() -> Tensor[(16, 11, 3), float32] {
  %1128 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %1128.0
}

def @func_7751(%var_7732: Tensor[(7, 6, 12), bool]) -> Tensor[(7, 6, 12), uint64] {
  %1129 = @func_6527() /* ty=(Tensor[(7, 6, 12), bool],) */;
  %1130 = %1129.0;
  %1131 = cast(%var_7732, dtype="bool") /* ty=Tensor[(7, 6, 12), bool] */;
  %1132 = shape_of(%1130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1133 = cast(%1130, dtype="bool") /* ty=Tensor[(7, 6, 12), bool] */;
  %1134 = dyn.reshape(%1131, %1132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1135 = logical_or(%1133, %1134) /* ty=Tensor[(7, 6, 12), bool] */;
  %1136 = cast(%1130, dtype="uint64") /* ty=Tensor[(7, 6, 12), uint64] */;
  %1137 = shape_of(%1135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1138 = cast(%1135, dtype="uint64") /* ty=Tensor[(7, 6, 12), uint64] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  multiply(%1138, %1139) /* ty=Tensor[(7, 6, 12), uint64] */
}

def @func_9435(%var_9434: Tensor[(16, 11, 3), float64]) -> (Tensor[(16, 11, 3), bool],) {
  %1146 = fn (%var_9414: Tensor[(16, 11, 3), float64]) -> (Tensor[(16, 11, 3), bool],) {
    %1140 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
    %1141 = cast(%var_9414, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
    %1142 = shape_of(%1140, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1143 = cast(%1140, dtype="bool") /* ty=Tensor[(16, 11, 3), bool] */;
    %1144 = dyn.reshape(%1141, %1142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1145 = greater_equal(%1143, %1144) /* ty=Tensor[(16, 11, 3), bool] */;
    (%1145,)
  };
  %1146(%var_9434) /* ty=(Tensor[(16, 11, 3), bool],) */
}

def @func_7315() -> (Tensor[(16, 11, 3), float64],) {
  %1148 = fn () -> (Tensor[(16, 11, 3), float64],) {
    %1147 = @func_5681() /* ty=Tensor[(16, 11, 3), float64] */;
    (%1147,)
  };
  %1148() /* ty=(Tensor[(16, 11, 3), float64],) */
}

def @func_7015() -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) {
  @func_7013() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */
}

def @func_4233() -> (Tensor[(16, 11, 3), float32],) {
  @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */
}

def @func_8532(%var_8531: Tensor[(504), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(7, 6, 12), uint64], Tensor[(504), bool]) {
  %1153 = fn (%var_8519: Tensor[(504), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(7, 6, 12), uint64], Tensor[(504), bool]) {
    %1149 = cast(%var_8519, dtype="bool") /* ty=Tensor[(504), bool] */;
    %1150 = reshape(%1149, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), bool] */;
    %1151 = @func_5598() /* ty=Tensor[(16, 11, 3), float32] */;
    %1152 = @func_7751(%1150) /* ty=Tensor[(7, 6, 12), uint64] */;
    (%1151, %1152, %var_8519)
  };
  %1153(%var_8531) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(7, 6, 12), uint64], Tensor[(504), bool]) */
}

def @func_6090(%var_6088: Tensor[(1, 924), float64], %var_6089: Tensor[(1, 832), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64], Tensor[(16, 4, 13), float32], Tensor[(1, 924), float64], Tensor[(1, 832), float32], Tensor[(16, 11, 3), float64]) {
  @func_6086(%var_6088, %var_6089) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), bool], Tensor[(588), uint8], Tensor[(16, 11, 3), float64], Tensor[(16, 4, 13), float32], Tensor[(1, 924), float64], Tensor[(1, 832), float32], Tensor[(16, 11, 3), float64]) */
}

def @func_6507() -> Tensor[(16, 11, 3), float64] {
  %1154 = fn () -> Tensor[(16, 11, 3), float64] {
    @func_6011() /* ty=Tensor[(16, 11, 3), float64] */
  };
  %1154() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_6453() -> (Tensor[(16, 11, 3), float64],) {
  %1155 = @func_5398() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */;
  %1156 = %1155.0;
  (%1156,)
}

def @func_5038(%var_5035: Tensor[(16, 11, 3), float32], %var_5036: Tensor[(960), uint16], %var_5037: Tensor[(320), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) {
  @func_5033(%var_5035, %var_5036, %var_5037) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(308), float32], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32]) */
}

def @func_961(%var_959: Tensor[(3, 1, 10), bool], %var_960: Tensor[(3, 2, 10), bool]) -> (Tensor[(3, 2, 10), bool],) {
  %1160 = fn (%var_953: Tensor[(3, 1, 10), bool], %var_954: Tensor[(3, 2, 10), bool]) -> (Tensor[(3, 2, 10), bool],) {
    %1157 = cast(%var_953, dtype="bool") /* ty=Tensor[(3, 1, 10), bool] */;
    %1158 = cast(%var_954, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
    %1159 = logical_and(%1157, %1158) /* ty=Tensor[(3, 2, 10), bool] */;
    (%1159,)
  };
  %1160(%var_959, %var_960) /* ty=(Tensor[(3, 2, 10), bool],) */
}

def @func_9281() -> (Tensor[(16, 11, 3), float64],) {
  %1161 = @func_5992() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1162 = %1161.0;
  (%1162,)
}

def @func_5399() -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) {
  %1166 = fn () -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) {
    %1163 = @func_4389() /* ty=(Tensor[(16, 11, 3), float32],) */;
    %1164 = @func_4205() /* ty=Tensor[(16, 11, 3), float64] */;
    %1165 = %1163.0;
    (%1164, %1165)
  };
  %1166() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */
}

def @func_5900() -> (Tensor[(60), bool], Tensor[(60), bool], Tensor[(104), int32], Tensor[(16, 11, 3), float32]) {
  %1167 = cast(meta[relay.Constant][104] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1168 = cast(meta[relay.Constant][105] /* ty=Tensor[(104), int32] */, dtype="int32") /* ty=Tensor[(104), int32] */;
  %1169 = reshape(%1167, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %1170 = reshape(%1168, newshape=[104]) /* ty=Tensor[(104), int32] */;
  %1171 = @func_4566(%1169, %1170) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(832), float32], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(416, 2), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32], Tensor[(15, 2, 9), float32], Tensor[(270, 1), float32], Tensor[(60), bool], Tensor[(2184), uint8]) */;
  %1172 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
  %1173 = cast(meta[relay.Constant][106] /* ty=Tensor[(16, 11, 3), float32] */, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
  %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1175 = cast(%1172, dtype="float64") /* ty=Tensor[(16, 11, 3), float64] */;
  %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1177 = floor_mod(%1175, %1176) /* ty=Tensor[(16, 11, 3), float64] */;
  %1178 = cast(%1177, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %1179 = %1171.9;
  %1180 = log2(%1178) /* ty=Tensor[(16, 11, 3), float32] */;
  (%1179, meta[relay.Constant][104] /* ty=Tensor[(60), bool] */, meta[relay.Constant][105] /* ty=Tensor[(104), int32] */, %1180)
}

def @func_11054() -> (Tensor[(7, 6, 12), bool],) {
  %1181 = @func_9737() /* ty=(Tensor[(7, 6, 12), bool],) */;
  %1182 = %1181.0;
  (%1182,)
}

def @func_7523() -> (Tensor[(60), bool],) {
  %1185 = fn () -> (Tensor[(60), bool],) {
    %1183 = @func_5900() /* ty=(Tensor[(60), bool], Tensor[(60), bool], Tensor[(104), int32], Tensor[(16, 11, 3), float32]) */;
    %1184 = %1183.1;
    (%1184,)
  };
  %1185() /* ty=(Tensor[(60), bool],) */
}

def @func_8333() -> (Tensor[(16, 11, 3), float32], Tensor[(416, 2), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float64]) {
  %1186 = @func_7773() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) */;
  %1187 = cast(meta[relay.Constant][107] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1188 = cast(meta[relay.Constant][108] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1189 = reshape(%1187, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1190 = reshape(%1188, newshape=[416, 2]) /* ty=Tensor[(416, 2), float32] */;
  %1191 = @func_8272(%1189, %1190) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(7), uint64], Tensor[(924), float64], Tensor[(416, 2), float32]) */;
  %1192 = @func_7314() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1193 = %1186.0;
  %1194 = %1191.3;
  %1195 = %1192.0;
  (%1193, %1194, meta[relay.Constant][107] /* ty=Tensor[(924), float64] */, meta[relay.Constant][108] /* ty=Tensor[(832), float32] */, %1195)
}

def @func_1605(%var_1603: Tensor[(16, 1, 12), uint16], %var_1604: Tensor[(16, 5, 12), uint16]) -> Tensor[(16, 5, 12), uint16] {
  %1198 = fn (%var_1597: Tensor[(16, 1, 12), uint16], %var_1598: Tensor[(16, 5, 12), uint16]) -> Tensor[(16, 5, 12), uint16] {
    %1196 = cast(%var_1597, dtype="uint16") /* ty=Tensor[(16, 1, 12), uint16] */;
    %1197 = cast(%var_1598, dtype="uint16") /* ty=Tensor[(16, 5, 12), uint16] */;
    bitwise_or(%1196, %1197) /* ty=Tensor[(16, 5, 12), uint16] */
  };
  %1198(%var_1603, %var_1604) /* ty=Tensor[(16, 5, 12), uint16] */
}

def @func_4231() -> (Tensor[(16, 11, 3), float32],) {
  %1199 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %1200 = %1199.0;
  (%1200,)
}

def @func_4085() -> Tensor[(16, 11, 3), float64] {
  %1202 = fn () -> Tensor[(16, 11, 3), float64] {
    %1201 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
    %1201.1
  };
  %1202() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_2465(%var_2462: float64, %var_2463: Tensor[(14, 10, 12), float64], %var_2464: Tensor[(14, 10, 12), float64]) -> (Tensor[(14, 10, 12), float64],) {
  @func_2460(%var_2462, %var_2463, %var_2464) /* ty=(Tensor[(14, 10, 12), float64],) */
}

def @func_5805() -> Tensor[(16, 11, 3), float64] {
  %1203 = @func_4973() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 7, 4), float32], Tensor[(308), float32]) */;
  %1203.0
}

def @func_9950(%var_9948: Tensor[(832), float32], %var_9949: Tensor[(792), int8]) -> (Tensor[(16, 11, 3), float64], Tensor[(11, 2, 4), float64], Tensor[(88), float64], Tensor[(960), uint16], Tensor[(832), float32], Tensor[(7, 132), float64], Tensor[(792), int8], Tensor[(924), float64]) {
  @func_9946(%var_9948, %var_9949) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(11, 2, 4), float64], Tensor[(88), float64], Tensor[(960), uint16], Tensor[(832), float32], Tensor[(7, 132), float64], Tensor[(792), int8], Tensor[(924), float64]) */
}

def @func_9900(%var_9879: Tensor[(1890), float32], %var_9882: Tensor[(60), bool], %var_9885: int16) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32], Tensor[(270), float32], Tensor[(1890), float32], Tensor[(60), bool], Tensor[(60), bool], Tensor[(8, 3, 5), float64], int16, Tensor[(120), float64]) {
  %1204 = cast(meta[relay.Constant][109] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %1205 = cast(%var_9879, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %1206 = reshape(%1204, newshape=[270, 1]) /* ty=Tensor[(270, 1), float32] */;
  %1207 = reshape(%1205, newshape=[270, 7]) /* ty=Tensor[(270, 7), float32] */;
  %1208 = @func_9599(%1206, %1207) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(16, 11, 3), float64], Tensor[(270, 7), int32], Tensor[(16, 11, 3), float64]) */;
  %1209 = cast(%var_9882, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1210 = reshape(%1209, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %1211 = @func_4307(%1210) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) */;
  %1212 = cast(%var_9885, dtype="int16") /* ty=int16 */;
  %1213 = cast(meta[relay.Constant][110] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1214 = reshape(%1212, newshape=[]) /* ty=int16 */;
  %1215 = reshape(%1213, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %1216 = @func_8027(%1214, %1215) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], int16, Tensor[(1820), uint64], Tensor[(15, 2, 9), float32], Tensor[(270), float32], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) */;
  %1217 = @func_6506() /* ty=Tensor[(16, 11, 3), float64] */;
  %1218 = %1208.0;
  %1219 = %1211.3;
  %1220 = %1216.6;
  (%1217, %1218, meta[relay.Constant][109] /* ty=Tensor[(270), float32] */, %var_9879, %1219, %var_9882, %1220, %var_9885, meta[relay.Constant][110] /* ty=Tensor[(120), float64] */)
}

def @func_10154(%var_10152: float64) -> (Tensor[(16, 11, 3), float32], Tensor[(14, 10, 12), float64], Tensor[(1680), float64], Tensor[(7, 6, 12), uint8]) {
  @func_10151(%var_10152) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(14, 10, 12), float64], Tensor[(1680), float64], Tensor[(7, 6, 12), uint8]) */
}

def @func_2397(%var_2392: int8, %var_2393: Tensor[(12, 1, 6), int8], %var_2394: Tensor[(12, 11, 6), int8], %var_2395: Tensor[(320), bool], %var_2396: Tensor[(924), float64]) -> (Tensor[(12, 1, 6), int8], Tensor[(12, 11, 6), bool], Tensor[(924), float64], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(1, 104), int32]) {
  %1237 = fn (%var_2365: int8, %var_2366: Tensor[(12, 1, 6), int8], %var_2371: Tensor[(12, 11, 6), int8], %var_2378: Tensor[(320), bool], %var_2379: Tensor[(924), float64]) -> (Tensor[(12, 1, 6), int8], Tensor[(12, 11, 6), bool], Tensor[(924), float64], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(1, 104), int32]) {
    %1221 = cast(%var_2365, dtype="int8") /* ty=int8 */;
    %1222 = cast(%var_2366, dtype="int8") /* ty=Tensor[(12, 1, 6), int8] */;
    %1223 = cast(%var_2366, dtype="bool") /* ty=Tensor[(12, 1, 6), bool] */;
    %1224 = cast(%var_2371, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
    %1225 = cast(%var_2378, dtype="bool") /* ty=Tensor[(320), bool] */;
    %1226 = cast(%var_2379, dtype="float64") /* ty=Tensor[(924), float64] */;
    %1227 = cast(meta[relay.Constant][111] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
    %1228 = cast(meta[relay.Constant][112] /* ty=Tensor[(1, 104), int32] */, dtype="int32") /* ty=Tensor[(1, 104), int32] */;
    %1229 = reshape(%1225, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), bool] */;
    %1230 = reshape(%1226, newshape=[924]) /* ty=Tensor[(924), float64] */;
    %1231 = reshape(%1227, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %1232 = reshape(%1228, newshape=[104]) /* ty=Tensor[(104), int32] */;
    %1233 = @func_1809(%1229, %1230, %1231, %1232) /* ty=(Tensor[(16, 4, 5), bool], Tensor[(7, 1), uint64], Tensor[(924), float64], Tensor[(832), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) */;
    %1234 = bitwise_and(%1221, %1222) /* ty=Tensor[(12, 1, 6), int8] */;
    %1235 = logical_and(%1223, %1224) /* ty=Tensor[(12, 11, 6), bool] */;
    %1236 = %1233.2;
    (%1234, %1235, %1236, %var_2378, %var_2379, meta[relay.Constant][111] /* ty=Tensor[(832), float32] */, meta[relay.Constant][112] /* ty=Tensor[(1, 104), int32] */)
  };
  %1237(%var_2392, %var_2393, %var_2394, %var_2395, %var_2396) /* ty=(Tensor[(12, 1, 6), int8], Tensor[(12, 11, 6), bool], Tensor[(924), float64], Tensor[(320), bool], Tensor[(924), float64], Tensor[(832), float32], Tensor[(1, 104), int32]) */
}

def @func_9905(%var_9902: Tensor[(1890), float32], %var_9903: Tensor[(60), bool], %var_9904: int16) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32], Tensor[(270), float32], Tensor[(1890), float32], Tensor[(60), bool], Tensor[(60), bool], Tensor[(8, 3, 5), float64], int16, Tensor[(120), float64]) {
  @func_9900(%var_9902, %var_9903, %var_9904) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32], Tensor[(270), float32], Tensor[(1890), float32], Tensor[(60), bool], Tensor[(60), bool], Tensor[(8, 3, 5), float64], int16, Tensor[(120), float64]) */
}

def @func_1569(%var_1539: Tensor[(14, 12, 13), uint8], %var_1540: Tensor[(14, 12, 13), uint8], %var_1559: Tensor[(198), uint32], %var_1560: Tensor[(60), bool], %var_1561: Tensor[(832), float32]) -> (Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) {
  %1238 = cast(%var_1540, dtype="uint8") /* ty=Tensor[(14, 12, 13), uint8] */;
  %1239 = shape_of(%var_1539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1240 = cast(%var_1539, dtype="uint8") /* ty=Tensor[(14, 12, 13), uint8] */;
  %1241 = dyn.reshape(%1238, %1239, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1242 = cast(%var_1559, dtype="uint32") /* ty=Tensor[(198), uint32] */;
  %1243 = cast(%var_1560, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1244 = cast(%var_1561, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1245 = reshape(%1242, newshape=[2, 11, 9]) /* ty=Tensor[(2, 11, 9), uint32] */;
  %1246 = reshape(%1243, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %1247 = reshape(%1244, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1248 = @func_1428(%1245, %1246, %1247) /* ty=(Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) */;
  %1249 = logical_xor(%1240, %1241) /* ty=Tensor[(14, 12, 13), uint8] */;
  %1250 = %1248.3;
  (%1249, %1250, %var_1559, %var_1560, %var_1561)
}

def @func_9785() -> (Tensor[(16, 11, 3), float64], Tensor[(2, 396), int8], Tensor[(585), float64], int8, Tensor[(72), int8], Tensor[(792), int8], Tensor[(1, 320), bool], Tensor[(924), float64]) {
  %1251 = @func_4352() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1252 = cast(meta[relay.Constant][113] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %1253 = cast(meta[relay.Constant][114] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1254 = cast(meta[relay.Constant][115] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
  %1255 = cast(meta[relay.Constant][116] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %1256 = cast(meta[relay.Constant][117] /* ty=Tensor[(1, 320), bool] */, dtype="bool") /* ty=Tensor[(1, 320), bool] */;
  %1257 = cast(meta[relay.Constant][118] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1258 = reshape(%1252, newshape=[13, 5, 9]) /* ty=Tensor[(13, 5, 9), float64] */;
  %1259 = reshape(%1253, newshape=[]) /* ty=int8 */;
  %1260 = reshape(%1254, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %1261 = reshape(%1255, newshape=[2, 396]) /* ty=Tensor[(2, 396), int8] */;
  %1262 = reshape(%1256, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %1263 = reshape(%1257, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1264 = @func_2868(%1258, %1259, %1260, %1261, %1262, %1263) /* ty=(Tensor[(13, 5, 9), bool], Tensor[(72), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64], Tensor[(1, 104), uint8]) */;
  %1265 = %1251.0;
  %1266 = %1264.2;
  (%1265, %1266, meta[relay.Constant][113] /* ty=Tensor[(585), float64] */, meta[relay.Constant][114] /* ty=int8 */, meta[relay.Constant][115] /* ty=Tensor[(72), int8] */, meta[relay.Constant][116] /* ty=Tensor[(792), int8] */, meta[relay.Constant][117] /* ty=Tensor[(1, 320), bool] */, meta[relay.Constant][118] /* ty=Tensor[(924), float64] */)
}

def @func_5308(%var_5272: Tensor[(14, 16, 1), float32]) -> (Tensor[(14, 16, 1), float32], Tensor[(13, 2, 4), bool], Tensor[(104), int32]) {
  %1267 = cast(%var_5272, dtype="float32") /* ty=Tensor[(14, 16, 1), float32] */;
  %1268 = cast(meta[relay.Constant][119] /* ty=Tensor[(104), int32] */, dtype="int32") /* ty=Tensor[(104), int32] */;
  %1269 = reshape(%1268, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), int32] */;
  %1270 = sin(%1267) /* ty=Tensor[(14, 16, 1), float32] */;
  %1271 = @func_995(%1269) /* ty=Tensor[(13, 2, 4), bool] */;
  (%1270, %1271, meta[relay.Constant][119] /* ty=Tensor[(104), int32] */)
}

def @func_8104(%var_8065: Tensor[(924), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(104, 8), float32], Tensor[(945), uint16]) {
  %1272 = cast(%var_8065, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1273 = cast(meta[relay.Constant][120] /* ty=Tensor[(104, 8), float32] */, dtype="float32") /* ty=Tensor[(104, 8), float32] */;
  %1274 = cast(meta[relay.Constant][121] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %1275 = reshape(%1272, newshape=[924, 1]) /* ty=Tensor[(924, 1), float64] */;
  %1276 = reshape(%1273, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1277 = reshape(%1274, newshape=[7, 9, 15]) /* ty=Tensor[(7, 9, 15), float64] */;
  %1278 = @func_7376(%1275, %1276, %1277) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(924, 1), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(7, 9, 15), uint32]) */;
  %1279 = cast(meta[relay.Constant][122] /* ty=Tensor[(945), float64] */, dtype="uint16") /* ty=Tensor[(945), uint16] */;
  %1280 = shape_of(meta[relay.Constant][121] /* ty=Tensor[(945), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1281 = cast(meta[relay.Constant][121] /* ty=Tensor[(945), float64] */, dtype="uint16") /* ty=Tensor[(945), uint16] */;
  %1282 = dyn.reshape(%1279, %1280, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1283 = @func_5805() /* ty=Tensor[(16, 11, 3), float64] */;
  %1284 = %1278.2;
  %1285 = multiply(%1281, %1282) /* ty=Tensor[(945), uint16] */;
  (%1283, %1284, %var_8065, meta[relay.Constant][120] /* ty=Tensor[(104, 8), float32] */, %1285)
}

def @func_4029(%var_4027: Tensor[(5, 15, 13), int16], %var_4028: Tensor[(5, 15, 13), int16]) -> (Tensor[(5, 15, 13), bool], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) {
  @func_4025(%var_4027, %var_4028) /* ty=(Tensor[(5, 15, 13), bool], Tensor[(15, 2, 9), float32], Tensor[(270), float32]) */
}

def @func_5600() -> Tensor[(16, 11, 3), float32] {
  @func_5598() /* ty=Tensor[(16, 11, 3), float32] */
}

def @func_9599(%var_9548: Tensor[(270, 1), float32], %var_9575: Tensor[(270, 7), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(15, 2, 9), float32], Tensor[(16, 11, 3), float64], Tensor[(270, 7), int32], Tensor[(16, 11, 3), float64]) {
  %1286 = @func_5398() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */;
  %1287 = cast(%var_9548, dtype="float32") /* ty=Tensor[(270, 1), float32] */;
  %1288 = reshape(%1287, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
  %1289 = @func_2499(%1288) /* ty=(Tensor[(15, 2, 9), float32],) */;
  %1290 = cast(%var_9548, dtype="int32") /* ty=Tensor[(270, 1), int32] */;
  %1291 = cast(%var_9575, dtype="int32") /* ty=Tensor[(270, 7), int32] */;
  %1292 = @func_5353() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1293 = %1286.1;
  %1294 = %1289.0;
  %1295 = @func_6506() /* ty=Tensor[(16, 11, 3), float64] */;
  %1296 = subtract(%1290, %1291) /* ty=Tensor[(270, 7), int32] */;
  %1297 = %1292.0;
  (%1293, %1294, %1295, %1296, %1297)
}

def @func_10592(%var_10587: Tensor[(504), bool], %var_10588: Tensor[(192), uint16], %var_10589: Tensor[(2184, 1), uint8], %var_10590: Tensor[(198), uint32], %var_10591: Tensor[(320), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(504), bool], Tensor[(504), float32], Tensor[(16, 5, 12), uint16], Tensor[(2925, 1), int64], Tensor[(192), uint16], Tensor[(60), bool], Tensor[(16, 11, 3), float64], Tensor[(924), float64], Tensor[(2184, 1), uint8], Tensor[(198), uint32], Tensor[(320), bool], Tensor[(832), float32], Tensor[(416, 2), float32]) {
  @func_10585(%var_10587, %var_10588, %var_10589, %var_10590, %var_10591) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(504), bool], Tensor[(504), float32], Tensor[(16, 5, 12), uint16], Tensor[(2925, 1), int64], Tensor[(192), uint16], Tensor[(60), bool], Tensor[(16, 11, 3), float64], Tensor[(924), float64], Tensor[(2184, 1), uint8], Tensor[(198), uint32], Tensor[(320), bool], Tensor[(832), float32], Tensor[(416, 2), float32]) */
}

def @func_1428(%var_1383: Tensor[(2, 11, 9), uint32], %var_1390: Tensor[(60), bool], %var_1410: Tensor[(832), float32]) -> (Tensor[(2, 11, 9), uint32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308, 1), float32], Tensor[(3, 2, 10), bool], Tensor[(832), float32], Tensor[(154, 6), float64], Tensor[(832), float32], uint64) {
  %1298 = cast(%var_1383, dtype="uint32") /* ty=Tensor[(2, 11, 9), uint32] */;
  %1299 = shape_of(meta[relay.Constant][123] /* ty=Tensor[(2, 11, 9), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1300 = cast(meta[relay.Constant][123] /* ty=Tensor[(2, 11, 9), uint32] */, dtype="uint32") /* ty=Tensor[(2, 11, 9), uint32] */;
  %1301 = dyn.reshape(%1298, %1299, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1302 = cast(meta[relay.Constant][124] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %1303 = cast(%var_1390, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1304 = reshape(%1302, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
  %1305 = reshape(%1303, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
  %1306 = @func_958(%1304, %1305) /* ty=(Tensor[(3, 2, 10), bool],) */;
  %1307 = cast(meta[relay.Constant][125] /* ty=Tensor[(308, 1), float32] */, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
  %1308 = reshape(%1307, newshape=[11, 7, 4]) /* ty=Tensor[(11, 7, 4), float32] */;
  %1309 = cast(meta[relay.Constant][124] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %1310 = cast(%var_1390, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1311 = reshape(%1309, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
  %1312 = reshape(%1310, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
  %1313 = @func_958(%1311, %1312) /* ty=(Tensor[(3, 2, 10), bool],) */;
  %1314 = cast(meta[relay.Constant][126] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %1315 = cast(%var_1410, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1316 = reshape(%1314, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1317 = reshape(%1315, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1318 = @func_1135(%1316, %1317) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %1319 = cast(meta[relay.Constant][126] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %1320 = cast(%var_1410, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1321 = reshape(%1319, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1322 = reshape(%1320, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1323 = @func_1135(%1321, %1322) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %1324 = left_shift(%1300, %1301) /* ty=Tensor[(2, 11, 9), uint32] */;
  %1325 = %1306.0;
  %1326 = @func_1377(%1308) /* ty=Tensor[(11, 7, 4), float32] */;
  %1327 = %1313.0;
  %1328 = %1318.5;
  %1329 = %1323.1;
  (%1324, %1325, meta[relay.Constant][124] /* ty=Tensor[(30), bool] */, %var_1390, %1326, meta[relay.Constant][125] /* ty=Tensor[(308, 1), float32] */, %1327, %1328, meta[relay.Constant][126] /* ty=Tensor[(154, 6), float64] */, %var_1410, %1329)
}

def @func_7376(%var_7325: Tensor[(924, 1), float64], %var_7326: Tensor[(832), float32], %var_7347: Tensor[(7, 9, 15), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(924, 1), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(7, 9, 15), uint32]) {
  %1330 = @func_5353() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1331 = @func_5102() /* ty=Tensor[(16, 11, 3), float32] */;
  %1332 = cast(%1331, dtype="float32") /* ty=Tensor[(16, 11, 3), float32] */;
  %1333 = cast(%var_7325, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %1334 = cast(%var_7326, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1335 = reshape(%1333, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1336 = reshape(%1334, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1337 = @func_1135(%1335, %1336) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %1338 = %1337.6;
  %1339 = cast(%var_7347, dtype="uint32") /* ty=Tensor[(7, 9, 15), uint32] */;
  %1340 = shape_of(%1338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1341 = cast(%1338, dtype="uint32") /* ty=Tensor[(7, 9, 15), uint32] */;
  %1342 = dyn.reshape(%1339, %1340, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1343 = %1330.0;
  %1344 = erf(%1332) /* ty=Tensor[(16, 11, 3), float32] */;
  %1345 = bitwise_or(%1341, %1342) /* ty=Tensor[(7, 9, 15), uint32] */;
  (%1343, %var_7325, %var_7326, %1344, %1345)
}

def @func_1135(%var_1111: Tensor[(924), float64], %var_1112: Tensor[(832), float32]) -> (Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) {
  %1346 = cast(meta[relay.Constant][127] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1347 = cast(meta[relay.Constant][128] /* ty=Tensor[(7), uint64] */, dtype="uint64") /* ty=Tensor[(7), uint64] */;
  %1348 = reshape(%1346, newshape=[]) /* ty=uint64 */;
  %1349 = reshape(%1347, newshape=[7, 1]) /* ty=Tensor[(7, 1), uint64] */;
  %1350 = @func_345(%1348, %1349) /* ty=(Tensor[(7, 1), uint64],) */;
  %1351 = cast(%var_1111, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1352 = cast(%var_1112, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1353 = reshape(%1351, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %1354 = reshape(%1352, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1355 = @func_735(%1353, %1354) /* ty=(Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) */;
  %1356 = cast(meta[relay.Constant][129] /* ty=Tensor[(7, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 15), float64] */;
  %1357 = sigmoid(%1356) /* ty=Tensor[(7, 9, 15), float64] */;
  %1358 = cast(%1357, dtype="float64") /* ty=Tensor[(7, 9, 15), float64] */;
  %1359 = %1350.0;
  %1360 = %1355.2;
  %1361 = asinh(%1358) /* ty=Tensor[(7, 9, 15), float64] */;
  (%1359, meta[relay.Constant][127] /* ty=uint64 */, meta[relay.Constant][128] /* ty=Tensor[(7), uint64] */, %1360, %var_1111, %var_1112, %1361)
}

def @func_11127(%var_11114: Tensor[(9, 15, 14), int64], %var_11115: Tensor[(9, 15, 14), int64]) -> Tensor[(9, 15, 14), bool] {
  %1362 = cast(%var_11115, dtype="bool") /* ty=Tensor[(9, 15, 14), bool] */;
  %1363 = shape_of(%var_11114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1364 = cast(%var_11114, dtype="bool") /* ty=Tensor[(9, 15, 14), bool] */;
  %1365 = dyn.reshape(%1362, %1363, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1364, %1365) /* ty=Tensor[(9, 15, 14), bool] */
}

def @func_7754(%var_7752: Tensor[(7, 6, 12), bool]) -> Tensor[(7, 6, 12), uint64] {
  @func_7751(%var_7752) /* ty=Tensor[(7, 6, 12), uint64] */
}

def @func_2876(%var_2870: Tensor[(13, 5, 9), float64], %var_2871: int8, %var_2872: Tensor[(72), int8], %var_2873: Tensor[(2, 396), int8], %var_2874: Tensor[(320), bool], %var_2875: Tensor[(924), float64]) -> (Tensor[(13, 5, 9), bool], Tensor[(72), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64], Tensor[(1, 104), uint8]) {
  @func_2868(%var_2870, %var_2871, %var_2872, %var_2873, %var_2874, %var_2875) /* ty=(Tensor[(13, 5, 9), bool], Tensor[(72), int8], Tensor[(2, 396), int8], Tensor[(320), bool], Tensor[(924), float64], Tensor[(1, 104), uint8]) */
}

def @func_5902() -> (Tensor[(60), bool], Tensor[(60), bool], Tensor[(104), int32], Tensor[(16, 11, 3), float32]) {
  @func_5900() /* ty=(Tensor[(60), bool], Tensor[(60), bool], Tensor[(104), int32], Tensor[(16, 11, 3), float32]) */
}

def @func_5188(%var_5164: Tensor[(270), float32], %var_5167: Tensor[(960), uint16]) -> (Tensor[(16, 11, 3), float32], Tensor[(8, 3, 5), float32], Tensor[(120), float64], Tensor[(15, 2, 9), float32], Tensor[(960), uint16], Tensor[(960), uint16], Tensor[(270), float32]) {
  %1366 = @func_4231() /* ty=(Tensor[(16, 11, 3), float32],) */;
  %1367 = cast(meta[relay.Constant][130] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1368 = cast(meta[relay.Constant][130] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1369 = reshape(%1367, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
  %1370 = reshape(%1368, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
  %1371 = @func_1655(%1369, %1370) /* ty=(Tensor[(8, 3, 5), float64], Tensor[(8, 3, 5), float32]) */;
  %1372 = cast(%var_5164, dtype="float32") /* ty=Tensor[(270), float32] */;
  %1373 = reshape(%1372, newshape=[15, 2, 9]) /* ty=Tensor[(15, 2, 9), float32] */;
  %1374 = @func_2499(%1373) /* ty=(Tensor[(15, 2, 9), float32],) */;
  %1375 = cast(%var_5167, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %1376 = reshape(%1375, newshape=[960]) /* ty=Tensor[(960), uint16] */;
  %1377 = @func_4530(%1376) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(16, 11, 3), float32]) */;
  %1378 = cast(%var_5164, dtype="float32") /* ty=Tensor[(270), float32] */;
  %1379 = %1366.0;
  %1380 = %1371.1;
  %1381 = %1374.0;
  %1382 = %1377.3;
  %1383 = sqrt(%1378) /* ty=Tensor[(270), float32] */;
  (%1379, %1380, meta[relay.Constant][130] /* ty=Tensor[(120), float64] */, %1381, %1382, %var_5167, %1383)
}

def @func_6783() -> Tensor[(16, 11, 3), float64] {
  @func_6781() /* ty=Tensor[(16, 11, 3), float64] */
}

def @func_998(%var_996: Tensor[(13, 2, 4), int32]) -> Tensor[(13, 2, 4), bool] {
  @func_995(%var_996) /* ty=Tensor[(13, 2, 4), bool] */
}

def @func_7829(%var_7791: Tensor[(960), uint16], %var_7792: Tensor[(320), bool], %var_7793: Tensor[(832), float32], %var_7815: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float64], Tensor[(960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(832), float32], Tensor[(1, 924), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(1, 960), float64]) {
  %1384 = cast(meta[relay.Constant][131] /* ty=Tensor[(1, 924), float64] */, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
  %1385 = cast(%var_7793, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1386 = reshape(%1384, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1387 = reshape(%1385, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1388 = @func_1135(%1386, %1387) /* ty=(Tensor[(7, 1), uint64], uint64, Tensor[(7), uint64], Tensor[(832), float32], Tensor[(924), float64], Tensor[(832), float32], Tensor[(7, 9, 15), float64]) */;
  %1389 = cast(meta[relay.Constant][132] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %1390 = cast(%var_7815, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1391 = reshape(%1389, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), bool] */;
  %1392 = reshape(%1390, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), bool] */;
  %1393 = @func_958(%1391, %1392) /* ty=(Tensor[(3, 2, 10), bool],) */;
  %1394 = cast(%var_7791, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %1395 = cast(%var_7792, dtype="bool") /* ty=Tensor[(320), bool] */;
  %1396 = cast(%var_7793, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1397 = reshape(%1394, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
  %1398 = reshape(%1395, newshape=[320]) /* ty=Tensor[(320), bool] */;
  %1399 = reshape(%1396, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1400 = @func_4171(%1397, %1398, %1399) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) */;
  %1401 = %1400.3;
  %1402 = cast(%1401, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
  %1403 = @func_6781() /* ty=Tensor[(16, 11, 3), float64] */;
  %1404 = %1388.5;
  %1405 = %1393.0;
  %1406 = log(%1402) /* ty=Tensor[(1, 960), float64] */;
  (%1403, %var_7791, %var_7792, %var_7793, %1404, meta[relay.Constant][131] /* ty=Tensor[(1, 924), float64] */, %1405, meta[relay.Constant][132] /* ty=Tensor[(30), bool] */, %var_7815, %1406)
}

def @func_11072(%var_11067: Tensor[(154, 6), float64], %var_11068: Tensor[(832), float32]) -> (Tensor[(16, 11, 3), float64], Tensor[(16, 4, 13), float32], Tensor[(154, 6), float64], Tensor[(832), float32]) {
  %1407 = @func_10037() /* ty=(Tensor[(16, 11, 3), float64],) */;
  %1408 = cast(%var_11067, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %1409 = cast(%var_11068, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1410 = reshape(%1408, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %1411 = reshape(%1409, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1412 = @func_735(%1410, %1411) /* ty=(Tensor[(14, 11, 6), float32], Tensor[(16, 4, 13), float32], Tensor[(832), float32]) */;
  %1413 = %1407.0;
  %1414 = %1412.1;
  (%1413, %1414, %var_11067, %var_11068)
}

def @main(%var_11413: Tensor[(60), bool], %var_11414: Tensor[(120), float64]) -> (Tensor[(7, 6, 12), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(120), float64], Tensor[(280, 4), float64]) {
  %1415 = @func_9738() /* ty=(Tensor[(7, 6, 12), bool],) */;
  %1416 = cast(meta[relay.Constant][133] /* ty=Tensor[(280, 4), float64] */, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
  %1417 = cast(%var_11413, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1418 = cast(%var_11414, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1419 = reshape(%1416, newshape=[14, 8, 10]) /* ty=Tensor[(14, 8, 10), float64] */;
  %1420 = reshape(%1417, newshape=[30, 2]) /* ty=Tensor[(30, 2), bool] */;
  %1421 = reshape(%1418, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %1422 = @func_2934(%1419, %1420, %1421) /* ty=(Tensor[(14, 8, 10), float64], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(30, 2), bool], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) */;
  %1423 = cast(meta[relay.Constant][133] /* ty=Tensor[(280, 4), float64] */, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
  %1424 = cosh(%1423) /* ty=Tensor[(280, 4), float64] */;
  %1425 = cast(meta[relay.Constant][133] /* ty=Tensor[(280, 4), float64] */, dtype="uint8") /* ty=Tensor[(280, 4), uint8] */;
  %1426 = shape_of(%1424, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1427 = cast(%1424, dtype="uint8") /* ty=Tensor[(280, 4), uint8] */;
  %1428 = dyn.reshape(%1425, %1426, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1429 = bitwise_and(%1427, %1428) /* ty=Tensor[(280, 4), uint8] */;
  %1430 = cast(%1429, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
  %1431 = %1415.0;
  %1432 = %1422.2;
  %1433 = atanh(%1430) /* ty=Tensor[(280, 4), float64] */;
  (%1431, %1432, %var_11413, %var_11414, %1433)
}

def @func_6238(%var_6231: Tensor[(1, 960), uint16], %var_6232: Tensor[(320), bool], %var_6233: Tensor[(832), float32], %var_6234: Tensor[(2184), uint8], %var_6235: Tensor[(1, 198), uint32], %var_6236: Tensor[(60), bool], %var_6237: Tensor[(192), uint16]) -> (Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(1, 960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16]) {
  %1470 = fn (%var_6181: Tensor[(1, 960), uint16], %var_6182: Tensor[(320), bool], %var_6183: Tensor[(832), float32], %var_6198: Tensor[(2184), uint8], %var_6199: Tensor[(1, 198), uint32], %var_6200: Tensor[(60), bool], %var_6216: Tensor[(192), uint16]) -> (Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(1, 960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16]) {
    %1434 = @func_4892() /* ty=(Tensor[(16, 11, 3), float64],) */;
    %1435 = cast(%var_6181, dtype="uint16") /* ty=Tensor[(1, 960), uint16] */;
    %1436 = cast(%var_6182, dtype="bool") /* ty=Tensor[(320), bool] */;
    %1437 = cast(%var_6183, dtype="float32") /* ty=Tensor[(832), float32] */;
    %1438 = reshape(%1435, newshape=[1, 960]) /* ty=Tensor[(1, 960), uint16] */;
    %1439 = reshape(%1436, newshape=[320]) /* ty=Tensor[(320), bool] */;
    %1440 = reshape(%1437, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %1441 = @func_4171(%1438, %1439, %1440) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(1, 960), uint16], Tensor[(13, 2, 4), bool], Tensor[(320), bool], Tensor[(1, 924), float64], Tensor[(832), float32], Tensor[(104), int32], Tensor[(16, 4, 13), float32], int64, Tensor[(1008), int64], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(832), float32]) */;
    %1442 = cast(%var_6198, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
    %1443 = cast(%var_6198, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
    %1444 = cast(%var_6199, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
    %1445 = cast(%var_6200, dtype="bool") /* ty=Tensor[(60), bool] */;
    %1446 = cast(%var_6183, dtype="float32") /* ty=Tensor[(832), float32] */;
    %1447 = reshape(%1442, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
    %1448 = reshape(%1443, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), uint8] */;
    %1449 = reshape(%1444, newshape=[198]) /* ty=Tensor[(198), uint32] */;
    %1450 = reshape(%1445, newshape=[60]) /* ty=Tensor[(60), bool] */;
    %1451 = reshape(%1446, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %1452 = @func_1569(%1447, %1448, %1449, %1450, %1451) /* ty=(Tensor[(14, 12, 13), uint8], Tensor[(60), bool], Tensor[(198), uint32], Tensor[(60), bool], Tensor[(832), float32]) */;
    %1453 = cast(%var_6198, dtype="uint8") /* ty=Tensor[(2184), uint8] */;
    %1454 = cast(%var_6199, dtype="uint32") /* ty=Tensor[(1, 198), uint32] */;
    %1455 = cast(%var_6200, dtype="bool") /* ty=Tensor[(60), bool] */;
    %1456 = reshape(%1453, newshape=[2184]) /* ty=Tensor[(2184), uint8] */;
    %1457 = reshape(%1454, newshape=[198]) /* ty=Tensor[(198), uint32] */;
    %1458 = reshape(%1455, newshape=[1, 60]) /* ty=Tensor[(1, 60), bool] */;
    %1459 = @func_5345(%1456, %1457, %1458) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(14, 12, 13), uint8], Tensor[(2184), uint8], Tensor[(198), uint32], Tensor[(1, 60), bool], Tensor[(416, 2), float32]) */;
    %1460 = cast(%var_6216, dtype="uint16") /* ty=Tensor[(192), uint16] */;
    %1461 = cast(%var_6181, dtype="uint16") /* ty=Tensor[(1, 960), uint16] */;
    %1462 = reshape(%1460, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), uint16] */;
    %1463 = reshape(%1461, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), uint16] */;
    %1464 = %1434.0;
    %1465 = %1441.13;
    %1466 = @func_4592() /* ty=Tensor[(16, 11, 3), float32] */;
    %1467 = %1452.3;
    %1468 = %1459.2;
    %1469 = @func_1602(%1462, %1463) /* ty=Tensor[(16, 5, 12), uint16] */;
    (%1464, %1465, %var_6181, %var_6182, %var_6183, %1466, %1467, %var_6198, %var_6199, %var_6200, %1468, %1469, %var_6216)
  };
  %1470(%var_6231, %var_6232, %var_6233, %var_6234, %var_6235, %var_6236, %var_6237) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(308), float32], Tensor[(1, 960), uint16], Tensor[(320), bool], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(1, 198), uint32], Tensor[(60), bool], Tensor[(2184), uint8], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16]) */
}

def @func_7381(%var_7378: Tensor[(924, 1), float64], %var_7379: Tensor[(832), float32], %var_7380: Tensor[(7, 9, 15), float64]) -> (Tensor[(16, 11, 3), float64], Tensor[(924, 1), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(7, 9, 15), uint32]) {
  @func_7376(%var_7378, %var_7379, %var_7380) /* ty=(Tensor[(16, 11, 3), float64], Tensor[(924, 1), float64], Tensor[(832), float32], Tensor[(16, 11, 3), float32], Tensor[(7, 9, 15), uint32]) */
}

def @func_9008(%var_9004: Tensor[(60), bool], %var_9005: Tensor[(15, 195), int64], %var_9006: Tensor[(192), uint16], %var_9007: Tensor[(154, 2), float32]) -> (Tensor[(16, 11, 3), float32], Tensor[(588, 14), uint64], Tensor[(8232), uint8], Tensor[(60), bool], Tensor[(8, 104), float32], Tensor[(16, 11, 3), float64], Tensor[(15, 13, 15), float32], Tensor[(15, 195), int64], Tensor[(192), uint16], Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(154, 2), float32], int64, Tensor[(22, 4), float64], Tensor[(2, 480), uint16], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(1, 832), float32], Tensor[(924), float64], Tensor[(8, 198), bool]) {
  @func_9002(%var_9004, %var_9005, %var_9006, %var_9007) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(588, 14), uint64], Tensor[(8232), uint8], Tensor[(60), bool], Tensor[(8, 104), float32], Tensor[(16, 11, 3), float64], Tensor[(15, 13, 15), float32], Tensor[(15, 195), int64], Tensor[(192), uint16], Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32], Tensor[(11, 7, 4), float32], Tensor[(154, 2), float32], int64, Tensor[(22, 4), float64], Tensor[(2, 480), uint16], Tensor[(832), float32], Tensor[(2184), uint8], Tensor[(1, 832), float32], Tensor[(924), float64], Tensor[(8, 198), bool]) */
}

def @func_995(%var_976: Tensor[(13, 2, 4), int32]) -> Tensor[(13, 2, 4), bool] {
  %1471 = cast(meta[relay.Constant][134] /* ty=Tensor[(13, 2, 4), int32] */, dtype="bool") /* ty=Tensor[(13, 2, 4), bool] */;
  %1472 = shape_of(%var_976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1473 = cast(%var_976, dtype="bool") /* ty=Tensor[(13, 2, 4), bool] */;
  %1474 = dyn.reshape(%1471, %1472, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1473, %1474) /* ty=Tensor[(13, 2, 4), bool] */
}

def @func_4717(%var_4699: Tensor[(2925), int64], %var_4700: Tensor[(192), uint16], %var_4702: Tensor[(2925), int64], %var_4712: Tensor[(60), bool]) -> (Tensor[(16, 11, 3), float32], Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(2925), int32], Tensor[(60), bool], Tensor[(60), bool]) {
  %1475 = @func_3941() /* ty=(Tensor[(16, 11, 3), float32], Tensor[(16, 11, 3), float64]) */;
  %1476 = cast(%var_4699, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %1477 = cast(%var_4700, dtype="uint16") /* ty=Tensor[(192), uint16] */;
  %1478 = reshape(%1476, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), int64] */;
  %1479 = reshape(%1477, newshape=[192]) /* ty=Tensor[(192), uint16] */;
  %1480 = @func_2616(%1478, %1479) /* ty=(Tensor[(16, 5, 12), uint16], Tensor[(192), uint16], Tensor[(960), uint16], Tensor[(15, 13, 15), int16], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool], Tensor[(11, 7, 4), float32], Tensor[(308), float32], Tensor[(15, 13, 15), float32]) */;
  %1481 = cast(%var_4702, dtype="int32") /* ty=Tensor[(2925), int32] */;
  %1482 = shape_of(%var_4699, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1483 = cast(%var_4699, dtype="int32") /* ty=Tensor[(2925), int32] */;
  %1484 = dyn.reshape(%1481, %1482, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1485 = cast(%var_4712, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1486 = reshape(%1485, newshape=[60]) /* ty=Tensor[(60), bool] */;
  %1487 = @func_4307(%1486) /* ty=(Tensor[(16, 11, 3), float32], Tensor[(3, 2, 10), bool], Tensor[(30), bool], Tensor[(60), bool]) */;
  %1488 = %1475.0;
  %1489 = %1480.0;
  %1490 = left_shift(%1483, %1484) /* ty=Tensor[(2925), int32] */;
  %1491 = %1487.3;
  (%1488, %1489, %var_4700, %1490, %1491, %var_4712)
}

def @func_8120() -> (Tensor[(16, 11, 3), float32],) {
  %1494 = fn () -> (Tensor[(16, 11, 3), float32],) {
    %1492 = @func_5398() /* ty=(Tensor[(16, 11, 3), float64], Tensor[(16, 11, 3), float32]) */;
    %1493 = %1492.1;
    (%1493,)
  };
  %1494() /* ty=(Tensor[(16, 11, 3), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen386/build/output.py", line 3295, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:12:41] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


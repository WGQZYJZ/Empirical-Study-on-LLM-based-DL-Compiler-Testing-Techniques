import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_285 = relay.var("var_285", dtype = "float32", shape = (16, 4, 13))#candidate|285|(16, 4, 13)|var|float32
uop_286 = relay.rsqrt(var_285.astype('float32')) # shape=(16, 4, 13)
uop_299 = relay.log2(var_285.astype('float64')) # shape=(16, 4, 13)
output = relay.Tuple([uop_286,uop_299,])
output2 = relay.Tuple([uop_286,uop_299,])
func_303 = relay.Function([var_285,], output)
mod['func_303'] = func_303
mod = relay.transform.InferType()(mod)
var_304 = relay.var("var_304", dtype = "float32", shape = (16, 4, 13))#candidate|304|(16, 4, 13)|var|float32
output = func_303(var_304)
func_305 = relay.Function([var_304], output)
mutated_mod['func_305'] = func_305
mutated_mod = relay.transform.InferType()(mutated_mod)
var_337 = relay.var("var_337", dtype = "uint64", shape = ())#candidate|337|()|var|uint64
var_338 = relay.var("var_338", dtype = "uint64", shape = (7, 1))#candidate|338|(7, 1)|var|uint64
bop_339 = relay.bitwise_and(var_337.astype('uint64'), var_338.astype('uint64')) # shape=(7, 1)
output = relay.Tuple([bop_339,])
output2 = relay.Tuple([bop_339,])
func_345 = relay.Function([var_337,var_338,], output)
mod['func_345'] = func_345
mod = relay.transform.InferType()(mod)
var_346 = relay.var("var_346", dtype = "uint64", shape = ())#candidate|346|()|var|uint64
var_347 = relay.var("var_347", dtype = "uint64", shape = (7, 1))#candidate|347|(7, 1)|var|uint64
output = func_345(var_346,var_347,)
func_348 = relay.Function([var_346,var_347,], output)
mutated_mod['func_348'] = func_348
mutated_mod = relay.transform.InferType()(mutated_mod)
var_663 = relay.var("var_663", dtype = "float64", shape = (14, 11, 6))#candidate|663|(14, 11, 6)|var|float64
uop_664 = relay.rsqrt(var_663.astype('float64')) # shape=(14, 11, 6)
uop_681 = relay.acos(uop_664.astype('float64')) # shape=(14, 11, 6)
bop_690 = relay.divide(uop_681.astype('float32'), relay.reshape(var_663.astype('float32'), relay.shape_of(uop_681))) # shape=(14, 11, 6)
func_303_call = mod.get_global_var('func_303')
func_305_call = mutated_mod.get_global_var('func_305')
var_728 = relay.var("var_728", dtype = "float32", shape = (832,))#candidate|728|(832,)|var|float32
call_727 = relay.TupleGetItem(func_303_call(relay.reshape(var_728.astype('float32'), [16, 4, 13])), 0)
call_729 = relay.TupleGetItem(func_305_call(relay.reshape(var_728.astype('float32'), [16, 4, 13])), 0)
output = relay.Tuple([bop_690,call_727,var_728,])
output2 = relay.Tuple([bop_690,call_729,var_728,])
func_735 = relay.Function([var_663,var_728,], output)
mod['func_735'] = func_735
mod = relay.transform.InferType()(mod)
var_736 = relay.var("var_736", dtype = "float64", shape = (14, 11, 6))#candidate|736|(14, 11, 6)|var|float64
var_737 = relay.var("var_737", dtype = "float32", shape = (832,))#candidate|737|(832,)|var|float32
output = func_735(var_736,var_737,)
func_738 = relay.Function([var_736,var_737,], output)
mutated_mod['func_738'] = func_738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_953 = relay.var("var_953", dtype = "bool", shape = (3, 1, 10))#candidate|953|(3, 1, 10)|var|bool
var_954 = relay.var("var_954", dtype = "bool", shape = (3, 2, 10))#candidate|954|(3, 2, 10)|var|bool
bop_955 = relay.logical_and(var_953.astype('bool'), var_954.astype('bool')) # shape=(3, 2, 10)
output = relay.Tuple([bop_955,])
output2 = relay.Tuple([bop_955,])
func_958 = relay.Function([var_953,var_954,], output)
mod['func_958'] = func_958
mod = relay.transform.InferType()(mod)
var_959 = relay.var("var_959", dtype = "bool", shape = (3, 1, 10))#candidate|959|(3, 1, 10)|var|bool
var_960 = relay.var("var_960", dtype = "bool", shape = (3, 2, 10))#candidate|960|(3, 2, 10)|var|bool
output = func_958(var_959,var_960,)
func_961 = relay.Function([var_959,var_960,], output)
mutated_mod['func_961'] = func_961
mutated_mod = relay.transform.InferType()(mutated_mod)
var_976 = relay.var("var_976", dtype = "int32", shape = (13, 2, 4))#candidate|976|(13, 2, 4)|var|int32
const_977 = relay.const([[[-2,1,-8,-3],[-6,1,-10,5]],[[-5,1,-4,-3],[9,3,-2,-7]],[[7,-6,10,9],[-4,-5,5,8]],[[-9,-2,-6,-5],[6,-2,-1,5]],[[-4,3,2,-3],[-2,-1,-10,-9]],[[-5,-1,-5,6],[6,-10,-9,-5]],[[7,9,9,4],[-10,-2,-3,1]],[[-1,-1,-1,-8],[6,-2,-4,-8]],[[-4,-10,10,-6],[-10,-3,9,-3]],[[6,-5,-2,4],[2,3,-4,6]],[[-9,-10,-10,-1],[7,5,8,6]],[[-3,-1,-5,-3],[2,2,-6,-3]],[[-5,-5,-1,7],[-8,4,2,10]]], dtype = "int32")#candidate|977|(13, 2, 4)|const|int32
bop_978 = relay.greater_equal(var_976.astype('bool'), relay.reshape(const_977.astype('bool'), relay.shape_of(var_976))) # shape=(13, 2, 4)
output = bop_978
output2 = bop_978
func_995 = relay.Function([var_976,], output)
mod['func_995'] = func_995
mod = relay.transform.InferType()(mod)
mutated_mod['func_995'] = func_995
mutated_mod = relay.transform.InferType()(mutated_mod)
var_996 = relay.var("var_996", dtype = "int32", shape = (13, 2, 4))#candidate|996|(13, 2, 4)|var|int32
func_995_call = mutated_mod.get_global_var('func_995')
call_997 = func_995_call(var_996)
output = call_997
func_998 = relay.Function([var_996], output)
mutated_mod['func_998'] = func_998
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1089 = relay.const([[[-6.710304,-8.125141,6.970413,4.922324,-0.231883,-1.700015,-4.632556,9.055389,-1.559321,-6.492550,-7.872620,2.197165,-5.850763,-3.296545,-6.438886],[-7.688194,-6.144941,-6.606678,-4.088379,3.300216,8.043709,6.012892,-7.182538,-8.664690,2.931023,-4.371972,7.283989,8.135791,8.493545,-2.555348],[1.425422,-4.841384,0.179355,4.518503,-2.837703,-9.443898,-8.535069,-3.482186,-5.808211,-2.081754,3.338837,5.990368,-2.018984,-1.397909,8.164786],[-0.934818,4.261441,-7.627205,0.770773,-4.946326,-8.523620,3.806105,-2.725633,0.133640,-1.841867,1.638929,6.213414,1.121782,0.736561,9.714099],[-4.353082,-0.725330,-1.088888,-7.289491,-1.912535,-6.359782,5.406150,-3.492867,3.263090,-2.858427,2.626640,5.476410,7.772655,-5.150646,4.332738],[2.772106,5.645202,8.060399,-2.713866,-9.076843,9.882178,5.788987,-8.528075,-1.693266,-2.840809,-4.115968,-4.076385,-5.346731,-1.955375,1.879996],[-6.887194,8.799192,-6.202544,4.225554,-5.124663,5.881005,-8.650110,-8.122553,-8.170468,-7.959103,8.568300,-9.331843,8.887221,9.080459,-2.762788],[8.104946,0.448557,-2.904206,3.097755,-6.151484,1.474026,0.655214,7.040148,7.461980,3.680714,-2.669879,-0.862955,-8.730547,7.740166,7.609192],[-0.717330,-4.045948,9.421373,5.476240,-2.808507,-3.007572,-6.503912,-2.347503,7.510455,4.537835,2.834061,5.114476,6.012517,3.153251,-5.196590]],[[-9.681812,6.679273,-9.575240,3.727364,-3.054400,-3.993642,-7.033871,-7.055467,-8.504357,-9.144839,-4.810793,8.378392,0.984585,-0.561516,8.650810],[6.430398,0.090800,-1.401947,7.735472,-0.821724,0.542320,-6.858958,7.912527,-9.117838,-6.399975,3.142067,2.441405,-3.754519,3.628904,8.786775],[0.253299,-6.573477,-4.753170,9.305208,1.773051,5.822342,-8.951415,-2.647684,-4.549314,7.596696,2.549225,-2.290096,8.757998,7.289609,7.531577],[4.930780,5.032010,8.903042,-6.736840,9.697085,-5.987810,-6.797977,-1.841745,-8.760860,-6.007038,8.903282,2.282873,-3.022126,-2.150977,6.644511],[-3.078069,4.107366,2.091661,6.561232,4.723410,3.001204,7.120696,-9.833541,-8.190808,5.870150,-9.624250,-9.622478,-2.107122,-0.687394,-6.752151],[-2.977114,-3.782394,-0.856787,-8.004588,2.586809,-0.266353,-2.456942,-5.561091,4.964249,1.980328,2.291711,8.518457,0.319540,-0.640855,-1.429989],[-6.327591,-2.855869,-1.229950,-6.402562,-1.227998,-0.912471,-8.843359,9.678775,9.267373,8.687280,2.116609,-8.911895,-2.206638,-9.672585,9.454334],[9.977070,5.395633,-7.026454,-9.633656,-6.692955,-9.207946,7.822528,2.685688,-7.358958,7.160383,-3.335725,-8.480417,1.142781,-1.933423,-2.569551],[-0.739965,6.747380,3.899709,-2.914165,-5.475712,-2.686534,1.705551,8.226534,-8.195672,-1.798262,9.627476,-2.755610,5.897032,-1.689247,4.447097]],[[-6.659170,-9.021644,7.094196,4.370212,1.611216,3.272262,2.864173,7.377221,0.037963,-5.057309,3.121062,-7.713581,6.880257,3.055466,-8.837898],[-5.796131,3.807739,-3.959288,-2.322846,-7.878049,-2.888609,-1.083145,-2.739429,-1.881580,9.492828,6.428713,4.426785,4.273120,-9.988454,-7.238620],[1.269246,4.957607,-2.841175,-0.183689,6.592801,-4.102687,-2.529728,7.553053,5.357232,-7.693637,-4.001479,0.017939,-6.908087,1.979474,-3.215256],[3.831078,-1.379156,-8.774852,-7.090434,-7.221157,1.740779,5.487337,6.512643,-3.451243,0.476862,3.239541,5.609187,9.387073,9.124929,-7.650361],[-4.633435,-5.727611,-0.352500,4.653402,5.494345,-0.707985,9.031569,-8.961565,4.611489,7.197481,9.991479,-5.334062,2.373223,-0.270104,-7.183109],[-9.489787,-9.664130,-4.026824,0.743108,-0.329384,5.212398,2.611310,-0.984209,9.995118,5.737468,-3.189949,7.301565,8.400330,-8.951904,-1.609964],[-6.004431,-0.739196,1.906533,4.769189,-2.249523,0.080130,-8.992658,-3.629619,-5.019181,-0.871075,-2.684034,-4.259543,-6.434873,9.717385,-9.490038],[2.106953,-9.015248,4.068633,-6.014699,3.979962,-4.963673,-0.679093,0.707715,-3.593806,-1.610335,3.471259,2.810840,5.680226,6.088950,1.833549],[-6.882952,-3.146042,-9.306523,-4.029326,-6.709990,0.395206,-5.800605,-4.364508,1.773360,9.285621,3.346971,-3.214266,-2.807137,-2.599258,-0.024393]],[[6.154702,9.488945,-6.016128,-3.815359,-3.154266,-2.866919,4.735419,-4.763981,-0.081380,-8.878081,9.964924,6.461317,8.270035,5.031271,0.778024],[4.252818,-0.376663,4.928658,-1.998913,0.913399,-4.632087,-8.605965,-5.829332,9.953023,-2.394123,-8.241252,-7.404272,-8.930607,-6.389636,5.822378],[7.000731,-0.532747,3.700213,-3.208225,3.282334,3.814128,5.015303,-3.016917,-8.287219,7.268312,3.259782,-5.457279,8.366864,7.005217,7.121782],[1.861380,1.945697,-8.181031,5.218206,-3.206789,9.596706,2.537706,-3.493576,-2.040620,1.268422,1.657289,-1.398251,-9.026465,-0.151121,7.653168],[4.777110,6.344588,-2.174117,2.721410,-6.119205,2.776551,9.006874,1.070943,-9.608086,-6.585018,9.010311,-5.707925,-0.851152,4.875345,1.063297],[-0.866958,9.471017,7.927329,3.877515,-1.400114,5.852602,6.295273,-2.221711,-0.892679,5.503771,-8.603228,-7.549678,-1.207672,-5.448180,-4.732178],[-2.357530,-0.479241,-0.730933,9.755498,-6.645606,0.508259,9.503280,3.608259,4.654470,-3.459662,-5.101170,8.271804,-1.872156,0.086814,5.605437],[-7.533674,-0.901010,-0.198676,-8.075667,5.273708,8.881207,-7.429710,4.867596,-7.049111,6.967400,0.673204,3.604392,6.055495,-0.356846,-1.424459],[-9.875636,2.920293,8.982748,0.979668,-7.250372,7.157027,9.110752,-5.235060,5.348575,-5.276078,-2.412487,-7.746601,-6.110612,7.656571,9.912070]],[[0.344857,-1.126094,-3.411033,-9.818133,4.122336,-3.727448,-1.742416,3.512452,3.799323,4.569500,1.185939,8.890544,7.550492,9.892945,9.530606],[3.461590,-1.385792,4.886268,9.569437,-7.325175,-2.676566,5.439221,3.432109,-6.850342,6.020707,-4.674094,0.313837,1.352978,9.605247,8.321295],[4.046270,9.385151,-1.330941,-2.799962,-1.322865,-6.796687,-0.251563,7.974826,-0.867631,-4.013164,9.666358,0.670008,-1.661043,-3.813420,3.602705],[-4.159013,-7.166603,9.140620,1.977511,-3.242493,-6.980245,-4.547761,1.403421,-7.885679,2.420384,4.241467,8.118034,4.193700,1.346475,-5.417536],[1.005641,0.538954,-9.276086,-4.997742,1.172978,-6.646763,-1.016752,-9.135555,-7.351551,0.427328,3.236162,1.375730,6.957393,-5.102270,-6.988500],[-4.348563,-7.151569,5.603079,-2.717069,-9.419580,-6.202097,6.758821,6.586842,-1.567675,3.936540,-5.911785,9.908687,2.190729,-1.742280,1.350248],[-2.618120,2.144414,-8.515187,-9.068515,-0.350285,-9.217999,9.988126,8.030956,3.820491,-7.417395,-3.129680,4.546231,-4.271710,-8.883021,-0.531157],[4.104961,6.045370,3.585232,4.154008,-4.718337,-3.796491,5.805964,3.992026,6.167509,-4.386166,1.374843,-6.672309,-8.548750,4.404429,6.298623],[9.931994,8.646376,7.927905,-6.754515,-6.380701,2.677009,8.839573,-2.384794,7.410979,6.129769,0.159275,-4.122843,5.789310,7.697130,-6.533436]],[[-4.539217,2.981117,-2.816461,7.668697,-3.746220,-2.747986,-3.143141,-3.093396,-1.838901,-7.100747,2.959006,-2.666835,0.051886,0.126860,-1.669360],[-0.233942,2.278238,-3.079902,-3.043470,-6.296282,2.417444,-6.542305,-3.070074,-0.533384,8.258694,-5.706380,8.638648,-5.328038,-0.451827,8.416922],[4.134783,0.740247,9.592274,6.224631,4.977152,-5.529707,-3.853248,6.812939,5.524165,4.597272,-5.402095,-3.242368,-1.373700,6.200269,-1.936583],[7.758821,-5.092594,-6.665518,1.005255,7.256700,9.633150,2.487930,3.593838,-0.954089,9.638931,1.341346,1.131102,7.446963,-0.073280,-1.741238],[3.317226,9.824581,-9.105686,7.825720,5.824955,2.883278,2.903335,-2.267685,0.220388,9.489393,-9.252881,-2.404652,-5.886919,5.554737,-8.072680],[5.169572,8.916852,0.219060,-0.418571,2.482182,-3.482644,-6.473409,-1.924460,-1.745133,7.253578,-1.487790,-0.524693,9.342934,-1.364372,2.197492],[-6.132070,-9.525913,4.993519,-2.485966,-5.610336,4.590549,-1.377030,-0.522277,-1.252912,-6.777743,7.845611,0.079656,7.651733,-7.839560,8.948603],[8.896340,9.463299,-6.261490,1.609491,-3.847390,-5.499883,-7.368360,-8.686955,0.688968,7.461993,-6.838771,-4.518342,-3.851893,1.110978,0.741118],[1.249801,-9.168783,-5.927044,9.013170,6.818478,-8.898644,-4.807568,-2.145428,5.605701,4.115635,5.050411,8.545854,-1.670976,-8.526737,0.037989]],[[-0.697400,-4.972144,8.775972,3.892498,-7.491707,-1.382905,6.646974,-4.291574,5.119873,7.669826,-3.937515,1.332728,4.077924,-5.258666,0.275446],[9.743048,-9.732262,-6.221880,0.941435,-9.745479,9.146754,-8.773656,4.187636,-7.342867,-2.751316,-8.307744,7.961514,2.331384,0.770037,-3.225742],[8.756004,-7.440117,4.219909,7.431849,3.866514,-7.561393,-0.072427,8.601894,7.972792,4.712570,9.980077,3.434447,8.846953,4.062907,-3.790035],[6.346070,-6.315922,3.572779,-6.599060,-2.601863,-5.727684,-4.651555,7.184575,4.988546,-4.491278,-0.363332,-0.561680,-2.261334,-1.509245,-4.940713],[3.921557,-4.372481,9.541875,9.589615,-3.325851,3.402522,-1.780297,-9.311824,2.775470,5.777565,-5.356816,-5.085203,1.950912,-1.742366,-3.470486],[-8.113514,-9.128832,9.099759,-5.424568,7.957280,-4.131186,1.737087,9.384694,-7.717508,9.312996,-3.090832,-9.155467,-0.785738,2.493122,7.150078],[6.416789,4.560235,9.910171,-7.463995,3.186040,-3.129875,-5.254797,-3.650495,3.920294,9.790861,-3.468671,-9.576143,-7.953458,-0.467450,6.146350],[8.842914,7.121705,-1.891980,-4.840714,-4.456032,4.191946,4.868021,1.641641,2.215424,3.100257,2.867489,-7.055062,-7.998671,8.264381,-6.783387],[-6.732751,0.616461,-2.942911,-6.211945,-2.820248,-6.425331,-9.038125,-3.090839,9.140275,-1.781190,-3.936864,3.263084,-1.473625,3.958341,-0.562747]]], dtype = "float64")#candidate|1089|(7, 9, 15)|const|float64
uop_1090 = relay.sigmoid(const_1089.astype('float64')) # shape=(7, 9, 15)
func_345_call = mod.get_global_var('func_345')
func_348_call = mutated_mod.get_global_var('func_348')
const_1102 = relay.const(-10, dtype = "uint64")#candidate|1102|()|const|uint64
const_1103 = relay.const([-9,-2,-8,-1,-3,-7,2], dtype = "uint64")#candidate|1103|(7,)|const|uint64
call_1101 = relay.TupleGetItem(func_345_call(relay.reshape(const_1102.astype('uint64'), []), relay.reshape(const_1103.astype('uint64'), [7, 1]), ), 0)
call_1104 = relay.TupleGetItem(func_348_call(relay.reshape(const_1102.astype('uint64'), []), relay.reshape(const_1103.astype('uint64'), [7, 1]), ), 0)
func_735_call = mod.get_global_var('func_735')
func_738_call = mutated_mod.get_global_var('func_738')
var_1111 = relay.var("var_1111", dtype = "float64", shape = (924,))#candidate|1111|(924,)|var|float64
var_1112 = relay.var("var_1112", dtype = "float32", shape = (832,))#candidate|1112|(832,)|var|float32
call_1110 = relay.TupleGetItem(func_735_call(relay.reshape(var_1111.astype('float64'), [14, 11, 6]), relay.reshape(var_1112.astype('float32'), [832,]), ), 2)
call_1113 = relay.TupleGetItem(func_738_call(relay.reshape(var_1111.astype('float64'), [14, 11, 6]), relay.reshape(var_1112.astype('float32'), [832,]), ), 2)
uop_1115 = relay.asinh(uop_1090.astype('float64')) # shape=(7, 9, 15)
output = relay.Tuple([call_1101,const_1102,const_1103,call_1110,var_1111,var_1112,uop_1115,])
output2 = relay.Tuple([call_1104,const_1102,const_1103,call_1113,var_1111,var_1112,uop_1115,])
func_1135 = relay.Function([var_1111,var_1112,], output)
mod['func_1135'] = func_1135
mod = relay.transform.InferType()(mod)
mutated_mod['func_1135'] = func_1135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1135_call = mutated_mod.get_global_var('func_1135')
var_1137 = relay.var("var_1137", dtype = "float64", shape = (924,))#candidate|1137|(924,)|var|float64
var_1138 = relay.var("var_1138", dtype = "float32", shape = (832,))#candidate|1138|(832,)|var|float32
call_1136 = func_1135_call(var_1137,var_1138,)
output = call_1136
func_1139 = relay.Function([var_1137,var_1138,], output)
mutated_mod['func_1139'] = func_1139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1371 = relay.var("var_1371", dtype = "float32", shape = (11, 7, 4))#candidate|1371|(11, 7, 4)|var|float32
uop_1372 = relay.atan(var_1371.astype('float32')) # shape=(11, 7, 4)
output = uop_1372
output2 = uop_1372
func_1377 = relay.Function([var_1371,], output)
mod['func_1377'] = func_1377
mod = relay.transform.InferType()(mod)
mutated_mod['func_1377'] = func_1377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1378 = relay.var("var_1378", dtype = "float32", shape = (11, 7, 4))#candidate|1378|(11, 7, 4)|var|float32
func_1377_call = mutated_mod.get_global_var('func_1377')
call_1379 = func_1377_call(var_1378)
output = call_1379
func_1380 = relay.Function([var_1378], output)
mutated_mod['func_1380'] = func_1380
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1382 = relay.const([[[4,1,1,3,-6,-2,7,-8,-8],[-2,5,-9,-4,-9,4,8,3,9],[1,-2,5,5,-6,8,1,-7,3],[7,4,2,7,7,-9,4,10,-4],[1,-7,-4,1,5,10,-3,-9,-10],[-6,-9,6,9,6,5,-4,-1,5],[6,-1,-1,8,9,-10,8,-7,-1],[3,-3,9,10,8,4,9,7,-10],[-2,-2,-8,1,2,-3,2,-3,6],[7,-5,9,6,9,9,-4,8,3],[10,-1,3,5,1,-2,-10,-5,4]],[[6,4,-3,-5,-6,-3,-10,-3,7],[-9,3,10,7,4,7,-7,-8,-10],[-6,10,-9,-8,-7,-4,-1,7,-10],[-9,1,8,3,-2,-6,4,7,-3],[8,-5,-6,-1,9,1,7,8,-5],[-5,-2,1,-9,-2,-8,1,8,-1],[5,9,10,-5,2,-4,-10,7,-5],[-1,-1,1,8,5,9,8,6,10],[-9,-2,10,8,-4,-1,-1,-5,5],[-6,-9,-9,-5,-2,6,8,1,-6],[7,-9,9,1,-2,4,2,2,-1]]], dtype = "uint32")#candidate|1382|(2, 11, 9)|const|uint32
var_1383 = relay.var("var_1383", dtype = "uint32", shape = (2, 11, 9))#candidate|1383|(2, 11, 9)|var|uint32
bop_1384 = relay.left_shift(const_1382.astype('uint32'), relay.reshape(var_1383.astype('uint32'), relay.shape_of(const_1382))) # shape=(2, 11, 9)
func_958_call = mod.get_global_var('func_958')
func_961_call = mutated_mod.get_global_var('func_961')
const_1389 = relay.const([False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False], dtype = "bool")#candidate|1389|(30,)|const|bool
var_1390 = relay.var("var_1390", dtype = "bool", shape = (60,))#candidate|1390|(60,)|var|bool
call_1388 = relay.TupleGetItem(func_958_call(relay.reshape(const_1389.astype('bool'), [3, 1, 10]), relay.reshape(var_1390.astype('bool'), [3, 2, 10]), ), 0)
call_1391 = relay.TupleGetItem(func_961_call(relay.reshape(const_1389.astype('bool'), [3, 1, 10]), relay.reshape(var_1390.astype('bool'), [3, 2, 10]), ), 0)
func_1377_call = mod.get_global_var('func_1377')
func_1380_call = mutated_mod.get_global_var('func_1380')
const_1394 = relay.const([[-7.429862],[0.001108],[0.096900],[-7.726267],[-3.356510],[9.465303],[-2.226532],[5.357802],[8.347783],[1.065131],[-5.859599],[4.242654],[-5.802871],[-0.680307],[-4.135559],[8.658815],[-7.136128],[-2.424324],[-1.099248],[-8.668691],[5.051103],[-8.606691],[-9.812018],[4.245442],[8.579008],[6.901390],[-8.444293],[-3.537189],[7.406502],[0.978735],[-1.360596],[-0.303154],[9.475283],[7.612939],[9.215297],[-7.726934],[9.295620],[-5.907863],[-5.161688],[9.058311],[-7.084133],[2.525777],[-9.838226],[-8.808448],[-9.245499],[5.753093],[-1.770601],[8.718171],[-8.342762],[5.694999],[-2.468953],[0.851686],[8.644701],[4.027058],[7.971757],[4.595206],[9.165827],[-4.433648],[-2.727622],[-3.758602],[7.312257],[-9.418923],[6.440922],[4.519798],[-9.488594],[-6.206530],[2.360897],[-5.260015],[3.210722],[-3.738694],[0.793591],[5.983169],[2.444443],[-1.572381],[-6.953740],[-7.562447],[-4.570219],[1.281925],[9.214485],[-5.017262],[4.526628],[-3.152418],[-0.081523],[0.505273],[7.302224],[-0.594702],[6.488045],[1.024936],[-4.246305],[5.496231],[-1.218828],[-4.874064],[-0.016837],[2.381317],[-8.948582],[9.441822],[-3.205530],[-0.887890],[-1.291715],[-8.714889],[-7.377198],[-2.829065],[-8.569879],[-0.456605],[9.686656],[9.054927],[8.375816],[4.188221],[0.070606],[9.314559],[-6.731636],[-0.886423],[5.900567],[2.285824],[-3.905655],[0.389113],[-9.414230],[1.700501],[6.893017],[6.187865],[6.895317],[7.935221],[-9.596870],[-5.380325],[3.244402],[-0.152545],[-7.182329],[-7.436105],[0.627281],[4.178291],[4.435072],[-1.480556],[5.472459],[9.883027],[7.922081],[7.148619],[8.601353],[-8.559249],[5.696473],[-9.706429],[-3.922462],[-2.503397],[6.836417],[-8.065892],[-9.973735],[-7.947603],[-0.587929],[-9.026931],[-3.932276],[0.758540],[-1.301816],[-3.732958],[0.955228],[-4.853038],[4.169605],[5.928641],[6.402773],[-7.452004],[-2.653655],[4.039187],[5.410314],[-4.483724],[2.457934],[2.612912],[-2.020744],[2.794098],[8.396517],[5.864976],[-3.229100],[-5.488402],[-6.591091],[-8.797828],[9.071974],[-9.933469],[9.420359],[2.829725],[7.298509],[6.909862],[-7.500981],[4.029432],[2.620601],[7.681483],[-2.492859],[9.266307],[-5.781383],[1.902641],[7.749162],[-9.401961],[-1.402584],[-7.084093],[7.715521],[-9.931563],[6.127248],[0.371149],[-5.965604],[5.721587],[2.668689],[0.730951],[9.914289],[2.084330],[-6.853079],[-0.485879],[-0.299827],[-9.636243],[8.739910],[-8.558562],[-9.976134],[8.245846],[-5.597089],[4.105035],[6.731561],[-2.657109],[-6.175519],[7.825665],[-5.052941],[7.055344],[1.243998],[-5.171756],[8.233193],[-8.377024],[3.911928],[8.067979],[-3.457539],[-4.725728],[0.193840],[6.526477],[-4.149113],[3.711384],[9.692657],[-2.777554],[8.838288],[-2.681352],[4.646174],[-4.756222],[-1.577670],[0.540908],[-9.013513],[4.325222],[6.603258],[8.367904],[-6.397749],[-2.796794],[0.089784],[9.349077],[-5.351303],[-3.062217],[1.449084],[-9.992841],[-6.415415],[6.350117],[9.465437],[-8.224520],[7.862605],[-3.145713],[7.921742],[6.719765],[9.967265],[-0.626750],[-1.750644],[8.894749],[1.760491],[-5.348246],[2.135300],[6.001306],[-2.266642],[-5.332451],[9.012794],[2.646747],[-8.968865],[-7.174564],[7.687458],[5.902965],[4.000488],[0.561911],[7.214337],[-9.961353],[7.439783],[-4.095959],[8.769619],[-5.525443],[-4.205970],[4.969013],[9.464181],[0.846343],[5.212259],[-8.193477],[4.073349],[7.941780],[7.030207],[-1.073820],[6.086144],[-5.354624],[-3.541957],[7.341255],[-1.168038],[7.112489],[-9.742339],[2.725908],[8.859142],[-3.337939],[-1.046404],[0.098170],[-2.286060],[-7.655018],[-2.241330],[7.886868],[9.443719],[-6.214066]], dtype = "float32")#candidate|1394|(308, 1)|const|float32
call_1393 = func_1377_call(relay.reshape(const_1394.astype('float32'), [11, 7, 4]))
call_1395 = func_1377_call(relay.reshape(const_1394.astype('float32'), [11, 7, 4]))
func_958_call = mod.get_global_var('func_958')
func_961_call = mutated_mod.get_global_var('func_961')
call_1401 = relay.TupleGetItem(func_958_call(relay.reshape(const_1389.astype('bool'), [3, 1, 10]), relay.reshape(var_1390.astype('bool'), [3, 2, 10]), ), 0)
call_1402 = relay.TupleGetItem(func_961_call(relay.reshape(const_1389.astype('bool'), [3, 1, 10]), relay.reshape(var_1390.astype('bool'), [3, 2, 10]), ), 0)
func_1135_call = mod.get_global_var('func_1135')
func_1139_call = mutated_mod.get_global_var('func_1139')
const_1409 = relay.const([[-3.470403,-4.667351,-8.983987,3.256317,3.836264,-4.106436],[-5.724409,-1.189519,0.210916,-9.304200,-2.782981,8.662651],[-7.951651,6.577176,6.746368,-4.030647,8.073967,-7.447113],[0.029074,-1.645408,-7.570369,7.851160,-5.054760,9.934579],[-7.969208,-0.421827,-1.544549,7.189823,-5.532519,-4.011521],[-7.988883,7.729095,9.037257,4.008477,3.607165,5.346270],[-4.119488,-2.822997,9.252891,-8.758670,0.201236,-1.524336],[-0.190291,7.475203,-1.284594,-3.647542,-9.531411,-1.346819],[8.432915,-1.199388,5.972729,-1.559669,7.867393,-8.702784],[-6.485309,-3.579272,2.232522,-1.718528,8.319878,1.731300],[2.846976,-5.266369,3.434067,5.959017,1.040531,-5.001815],[-1.700608,-1.400432,8.703811,-2.635750,-0.863912,-2.059007],[9.507934,0.896187,-4.142607,-9.938394,0.413426,9.177574],[1.489954,7.990320,4.790099,0.614689,5.793266,2.118676],[7.241899,-4.377257,-4.712358,2.889388,2.238220,-1.462478],[3.804971,8.392441,-8.666327,-4.452343,-4.468639,-6.316652],[9.850310,3.148071,6.655851,0.265237,-9.275439,-4.571815],[-5.667923,-7.393329,9.664976,4.651436,9.560154,6.215904],[-7.902986,0.599175,3.325444,-8.285459,1.040168,7.021052],[-4.304428,1.986917,3.483359,9.791981,-9.922347,3.250558],[0.038990,-7.380355,-1.364389,-4.846612,8.646810,8.848050],[5.150087,2.559717,7.193419,0.322820,-1.288271,-6.341003],[9.932832,6.055506,0.308843,4.339456,-1.932675,7.599739],[6.261083,9.056770,3.385494,4.221882,-0.260678,6.870914],[-2.444627,2.677674,-7.576175,-0.716691,4.332092,3.160677],[-8.266737,4.840701,-2.880484,3.743157,-3.121688,2.700510],[3.704205,-3.286826,7.179112,0.930844,7.827366,-7.079891],[-6.358934,5.879603,1.908662,-4.350584,8.593070,-1.793664],[-3.993520,2.720441,-8.174354,-0.960547,8.645782,2.519115],[4.137388,-1.393548,4.715361,-2.052263,3.766405,9.936674],[-8.608422,5.492675,-3.982282,8.517138,6.496726,6.623581],[2.112174,-1.796522,9.066361,-1.597124,-8.455159,1.650457],[4.321562,-5.905083,9.320674,3.076431,5.146708,9.762201],[-0.471873,4.067124,5.087225,9.441234,-6.768816,0.762525],[9.996608,-8.436493,7.012368,5.694461,2.678702,4.629566],[-5.573837,-7.429383,2.998704,6.065111,4.613881,-1.382881],[4.740586,0.083076,3.707322,9.944686,-7.113458,-5.624134],[8.363258,0.996895,0.363077,4.419578,7.239057,-3.009546],[4.117846,0.243218,-4.774822,0.899924,5.729957,6.433167],[-8.468512,-4.079630,0.900660,-3.406862,-5.699040,5.003514],[-0.012950,0.457997,0.875561,2.183377,0.380940,7.322182],[-5.657546,-0.685209,5.387606,-6.584187,-3.212027,8.821610],[0.520948,5.366369,4.091161,-6.486066,7.589669,7.724835],[2.548706,-5.595934,4.833186,-1.388506,-9.446271,-4.434668],[-1.535717,0.883435,0.692661,-1.271921,-8.661489,-3.081194],[0.055900,-9.853231,0.680849,3.190927,-6.990846,8.941686],[1.071021,4.506677,-9.548826,8.176374,-5.137944,-8.365367],[6.866921,-3.144224,-9.757182,1.632281,4.448983,-1.954022],[-4.277881,2.597481,2.214645,-0.817372,-3.256107,7.845703],[2.802317,-1.261103,3.433864,2.011141,2.863878,5.670246],[1.994855,2.535395,-7.821516,5.395864,7.370139,9.008790],[5.497779,0.199505,3.763188,1.463203,-7.833023,-5.204935],[-5.323844,-8.527465,9.185778,6.418671,9.944859,-6.872929],[-9.312140,-2.548568,-4.641051,9.593609,7.637033,-6.519123],[4.043613,-7.621295,0.764191,1.681667,-1.994285,9.618910],[1.644022,-3.455464,-5.130031,-5.336691,-4.392320,-3.987840],[-6.374694,3.252016,9.910526,-6.862532,7.588998,-9.357193],[2.242788,-2.157840,8.924071,-6.031256,-6.366137,2.169723],[3.698310,3.404314,-0.008202,-4.638610,6.296276,0.159250],[7.884618,3.073724,-0.479813,7.125847,-3.710249,8.066137],[-3.166103,-2.377140,7.752756,6.195909,-7.359874,-6.457111],[-1.657156,5.454313,-4.447024,-6.957343,8.613049,-0.650945],[8.285434,1.009787,6.210560,-8.682790,-9.075106,-1.494287],[-8.100328,-0.749589,8.932507,-4.907704,-4.995466,3.069803],[-5.709064,-3.147999,-2.558008,5.179438,0.787364,9.672049],[3.987746,-4.741428,-9.451036,0.224296,-5.857816,2.795809],[7.791415,2.255180,-8.035563,-0.641925,9.140540,-6.346818],[-5.038115,8.258114,-6.272064,-1.770682,-1.504171,-0.686628],[-2.672226,-1.181343,8.392992,-3.253376,8.095225,-6.324123],[-7.602005,-5.358489,-2.446483,5.502103,-8.701983,-7.162173],[1.938442,-8.576538,6.528561,0.742323,9.985654,-3.654445],[4.299642,0.162260,-0.206594,-2.055447,-9.940850,-4.428429],[6.086563,8.723157,6.072638,3.017536,1.571171,-0.102731],[-5.446460,-0.533018,6.198320,-8.898014,0.460587,6.165052],[-7.931148,-4.065763,-7.217843,5.968495,1.841409,2.211558],[-5.907690,6.975807,0.816722,-6.264962,8.946326,4.852510],[2.916142,-0.627084,6.062093,-1.881309,1.512449,-3.106250],[-7.412293,-1.669003,0.437114,-0.381106,-2.047701,4.498576],[9.345739,0.039261,-7.228176,-5.511196,-5.204623,-0.116413],[-1.025611,5.368855,9.655802,-3.885293,4.735583,9.174098],[-3.096910,-9.937428,-7.428821,-2.758562,0.716968,-6.516126],[-6.293768,5.077729,5.032092,-3.596985,3.309884,-0.770191],[-4.747535,-6.146904,2.466893,-5.659046,2.053837,-7.145217],[-8.602453,4.130778,-8.139923,1.231966,-5.002678,9.795907],[-7.407818,-2.086165,-2.502840,-9.875731,0.992023,-9.185342],[0.844855,-6.056441,-4.244094,-5.922688,-7.660797,-7.332275],[0.755329,0.516590,7.660247,-2.219850,9.648889,7.775548],[5.935739,-0.540675,-3.318761,1.525144,9.597523,-8.968530],[-2.204123,-5.559284,-0.856251,4.689672,-6.555108,-3.654399],[7.442664,3.093884,6.110128,-1.158052,-4.984759,4.060820],[-4.583950,-7.781244,-4.448139,3.712797,0.456468,5.815914],[-8.521062,-6.769414,-9.824772,-8.729898,9.063018,-1.128652],[-1.406141,0.478274,6.432223,5.626201,6.408620,8.725638],[-3.556041,-8.139648,-8.624097,-6.710952,-9.962725,2.671711],[5.022432,-6.151655,5.567938,7.606015,-3.024457,-2.093957],[8.152479,8.758545,-1.445389,-2.386340,9.939490,-6.868064],[5.131782,-7.362048,8.933131,-2.483551,-5.288820,0.298783],[6.268578,5.551066,8.334383,5.174496,-0.385747,3.262970],[2.715824,8.120648,-9.659911,-9.185457,-9.642494,6.362885],[-1.819192,-3.427621,2.637632,-2.800143,-8.581242,-5.739622],[1.462464,-8.023734,-3.218497,-7.364060,-2.289668,-5.122713],[-7.207644,-4.749731,6.369999,-6.880923,6.520648,-8.972802],[2.377518,8.717755,2.167604,1.698692,5.885806,-2.963769],[-6.216737,2.656840,-6.640325,6.407298,-3.265307,-1.303289],[-0.256134,6.315872,4.062962,-3.857560,-9.068013,7.681043],[7.185094,-0.161539,-8.420067,-8.206340,-8.259259,0.063117],[7.069158,3.875670,-0.954005,3.095397,-1.766914,-3.205880],[6.782084,-8.119902,-9.900510,4.332316,0.059264,-1.437705],[-0.894708,-3.743394,-6.277813,6.193879,-1.588634,2.622292],[-6.401129,2.826581,5.200809,9.345413,-2.229201,-3.562193],[4.555953,-0.255047,-3.712359,-2.843108,3.233910,1.420925],[2.909060,0.957422,7.657818,-5.187061,-3.652691,-9.778698],[-5.993319,-8.965752,-9.443955,3.583705,-0.389093,-2.198369],[4.253323,2.777506,0.901851,-7.304895,4.898690,-3.436234],[1.152018,0.249373,7.077514,8.332603,4.547466,-2.060279],[1.664068,2.690611,-7.729460,-5.796733,-9.470311,-5.777986],[-7.470723,-7.221449,0.497930,-7.286847,-1.516036,-2.577922],[1.152003,6.421953,7.217926,-0.492351,5.173592,-7.331507],[0.837718,7.077702,-0.385446,5.249273,4.006198,-8.091611],[4.681894,6.084315,-8.563405,6.784852,8.193423,-9.660839],[-9.416976,0.084875,-0.806656,3.384928,-2.120935,-3.585501],[3.763525,4.358837,7.082672,9.160895,-2.226174,-8.154869],[-2.043713,0.867700,-7.126032,-9.671701,-3.187512,4.597646],[3.984921,2.467117,5.622202,-2.544349,5.513977,8.892168],[3.366997,9.409659,8.686840,5.241243,1.134944,-0.110863],[-8.266464,4.053488,-2.649174,-4.806606,2.518365,-2.228039],[2.465582,3.533478,-4.177751,6.483622,6.888929,-0.423833],[6.408780,-3.303553,-1.740169,-2.046294,1.115449,3.560060],[-7.227809,9.904704,7.898578,7.193946,-4.932873,-7.702332],[6.793501,1.469640,-6.993286,-2.350132,3.454515,8.060988],[0.300434,-4.611426,5.363974,-7.073440,4.473072,2.142475],[9.153690,0.041325,-1.203254,5.724394,-0.020353,-6.887048],[-3.720425,-8.588541,-8.633447,5.112253,8.337537,-9.878595],[0.788639,0.519111,5.080669,-7.500615,0.464145,-1.528065],[0.418617,4.385950,-6.293804,-4.833596,-2.363936,-1.536094],[-8.605352,-1.437777,-4.992339,-8.989496,-1.510788,-3.027575],[3.464128,-9.028247,2.006517,-4.044094,-2.101268,-4.541452],[2.998004,8.985732,3.372108,-4.757708,5.634039,7.762010],[-2.002575,-2.959132,3.828175,-3.056135,4.813855,0.605032],[3.610957,9.985832,-2.671760,4.449407,-1.551005,4.036663],[-7.350762,-2.900828,7.668955,5.363147,1.273664,-8.090999],[4.475263,7.473588,0.029529,4.691803,-5.966242,8.479140],[-0.900674,3.075608,5.378309,-2.817599,-3.745520,-2.992471],[-2.959308,0.999380,0.714017,9.172139,-1.790977,3.078703],[3.601568,0.829694,0.886405,-4.541479,8.844190,-8.561589],[6.604833,-7.054704,8.219110,9.680222,8.766847,-8.654612],[-9.811389,0.053606,-3.722101,-9.494421,5.168695,-9.734021],[-5.702244,-6.498916,-0.152803,8.878319,6.199991,4.006747],[-9.391087,-7.580533,-9.431810,-8.579263,-6.960526,7.354778],[-4.002587,3.486433,1.471750,-0.174899,-5.014769,5.486805],[6.582892,-1.326095,1.151787,-3.283129,-7.234530,3.614365],[4.176046,9.493999,8.858451,-5.463699,1.349562,6.478454],[9.760574,-6.962544,-0.786715,-3.985378,-8.690286,-7.579269],[2.503006,9.330495,6.065179,-9.483190,-0.131526,0.086302]], dtype = "float64")#candidate|1409|(154, 6)|const|float64
var_1410 = relay.var("var_1410", dtype = "float32", shape = (832,))#candidate|1410|(832,)|var|float32
call_1408 = relay.TupleGetItem(func_1135_call(relay.reshape(const_1409.astype('float64'), [924,]), relay.reshape(var_1410.astype('float32'), [832,]), ), 5)
call_1411 = relay.TupleGetItem(func_1139_call(relay.reshape(const_1409.astype('float64'), [924,]), relay.reshape(var_1410.astype('float32'), [832,]), ), 5)
func_1135_call = mod.get_global_var('func_1135')
func_1139_call = mutated_mod.get_global_var('func_1139')
call_1423 = relay.TupleGetItem(func_1135_call(relay.reshape(const_1409.astype('float64'), [924,]), relay.reshape(var_1410.astype('float32'), [832,]), ), 1)
call_1424 = relay.TupleGetItem(func_1139_call(relay.reshape(const_1409.astype('float64'), [924,]), relay.reshape(var_1410.astype('float32'), [832,]), ), 1)
output = relay.Tuple([bop_1384,call_1388,const_1389,var_1390,call_1393,const_1394,call_1401,call_1408,const_1409,var_1410,call_1423,])
output2 = relay.Tuple([bop_1384,call_1391,const_1389,var_1390,call_1395,const_1394,call_1402,call_1411,const_1409,var_1410,call_1424,])
func_1428 = relay.Function([var_1383,var_1390,var_1410,], output)
mod['func_1428'] = func_1428
mod = relay.transform.InferType()(mod)
mutated_mod['func_1428'] = func_1428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1428_call = mutated_mod.get_global_var('func_1428')
var_1430 = relay.var("var_1430", dtype = "uint32", shape = (2, 11, 9))#candidate|1430|(2, 11, 9)|var|uint32
var_1431 = relay.var("var_1431", dtype = "bool", shape = (60,))#candidate|1431|(60,)|var|bool
var_1432 = relay.var("var_1432", dtype = "float32", shape = (832,))#candidate|1432|(832,)|var|float32
call_1429 = func_1428_call(var_1430,var_1431,var_1432,)
output = call_1429
func_1433 = relay.Function([var_1430,var_1431,var_1432,], output)
mutated_mod['func_1433'] = func_1433
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1539 = relay.var("var_1539", dtype = "uint8", shape = (14, 12, 13))#candidate|1539|(14, 12, 13)|var|uint8
var_1540 = relay.var("var_1540", dtype = "uint8", shape = (14, 12, 13))#candidate|1540|(14, 12, 13)|var|uint8
bop_1541 = relay.logical_xor(var_1539.astype('uint8'), relay.reshape(var_1540.astype('uint8'), relay.shape_of(var_1539))) # shape=(14, 12, 13)
func_1428_call = mod.get_global_var('func_1428')
func_1433_call = mutated_mod.get_global_var('func_1433')
var_1559 = relay.var("var_1559", dtype = "uint32", shape = (198,))#candidate|1559|(198,)|var|uint32
var_1560 = relay.var("var_1560", dtype = "bool", shape = (60,))#candidate|1560|(60,)|var|bool
var_1561 = relay.var("var_1561", dtype = "float32", shape = (832,))#candidate|1561|(832,)|var|float32
call_1558 = relay.TupleGetItem(func_1428_call(relay.reshape(var_1559.astype('uint32'), [2, 11, 9]), relay.reshape(var_1560.astype('bool'), [60,]), relay.reshape(var_1561.astype('float32'), [832,]), ), 3)
call_1562 = relay.TupleGetItem(func_1433_call(relay.reshape(var_1559.astype('uint32'), [2, 11, 9]), relay.reshape(var_1560.astype('bool'), [60,]), relay.reshape(var_1561.astype('float32'), [832,]), ), 3)
output = relay.Tuple([bop_1541,call_1558,var_1559,var_1560,var_1561,])
output2 = relay.Tuple([bop_1541,call_1562,var_1559,var_1560,var_1561,])
func_1569 = relay.Function([var_1539,var_1540,var_1559,var_1560,var_1561,], output)
mod['func_1569'] = func_1569
mod = relay.transform.InferType()(mod)
mutated_mod['func_1569'] = func_1569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1569_call = mutated_mod.get_global_var('func_1569')
var_1571 = relay.var("var_1571", dtype = "uint8", shape = (14, 12, 13))#candidate|1571|(14, 12, 13)|var|uint8
var_1572 = relay.var("var_1572", dtype = "uint8", shape = (14, 12, 13))#candidate|1572|(14, 12, 13)|var|uint8
var_1573 = relay.var("var_1573", dtype = "uint32", shape = (198,))#candidate|1573|(198,)|var|uint32
var_1574 = relay.var("var_1574", dtype = "bool", shape = (60,))#candidate|1574|(60,)|var|bool
var_1575 = relay.var("var_1575", dtype = "float32", shape = (832,))#candidate|1575|(832,)|var|float32
call_1570 = func_1569_call(var_1571,var_1572,var_1573,var_1574,var_1575,)
output = call_1570
func_1576 = relay.Function([var_1571,var_1572,var_1573,var_1574,var_1575,], output)
mutated_mod['func_1576'] = func_1576
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1597 = relay.var("var_1597", dtype = "uint16", shape = (16, 1, 12))#candidate|1597|(16, 1, 12)|var|uint16
var_1598 = relay.var("var_1598", dtype = "uint16", shape = (16, 5, 12))#candidate|1598|(16, 5, 12)|var|uint16
bop_1599 = relay.bitwise_or(var_1597.astype('uint16'), var_1598.astype('uint16')) # shape=(16, 5, 12)
output = bop_1599
output2 = bop_1599
func_1602 = relay.Function([var_1597,var_1598,], output)
mod['func_1602'] = func_1602
mod = relay.transform.InferType()(mod)
var_1603 = relay.var("var_1603", dtype = "uint16", shape = (16, 1, 12))#candidate|1603|(16, 1, 12)|var|uint16
var_1604 = relay.var("var_1604", dtype = "uint16", shape = (16, 5, 12))#candidate|1604|(16, 5, 12)|var|uint16
output = func_1602(var_1603,var_1604,)
func_1605 = relay.Function([var_1603,var_1604,], output)
mutated_mod['func_1605'] = func_1605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1641 = relay.var("var_1641", dtype = "float64", shape = (8, 3, 5))#candidate|1641|(8, 3, 5)|var|float64
uop_1642 = relay.tan(var_1641.astype('float64')) # shape=(8, 3, 5)
var_1645 = relay.var("var_1645", dtype = "float64", shape = (8, 3, 5))#candidate|1645|(8, 3, 5)|var|float64
bop_1646 = relay.subtract(var_1641.astype('float64'), relay.reshape(var_1645.astype('float64'), relay.shape_of(var_1641))) # shape=(8, 3, 5)
uop_1651 = relay.acos(uop_1642.astype('float32')) # shape=(8, 3, 5)
output = relay.Tuple([bop_1646,uop_1651,])
output2 = relay.Tuple([bop_1646,uop_1651,])
func_1655 = relay.Function([var_1641,var_1645,], output)
mod['func_1655'] = func_1655
mod = relay.transform.InferType()(mod)
var_1656 = relay.var("var_1656", dtype = "float64", shape = (8, 3, 5))#candidate|1656|(8, 3, 5)|var|float64
var_1657 = relay.var("var_1657", dtype = "float64", shape = (8, 3, 5))#candidate|1657|(8, 3, 5)|var|float64
output = func_1655(var_1656,var_1657,)
func_1658 = relay.Function([var_1656,var_1657,], output)
mutated_mod['func_1658'] = func_1658
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1757 = relay.var("var_1757", dtype = "bool", shape = (16, 4, 5))#candidate|1757|(16, 4, 5)|var|bool
const_1758 = relay.const([[[False,True,False,False,True],[True,True,True,True,False],[True,True,False,True,False],[False,True,False,True,False]],[[True,True,False,True,False],[True,False,True,False,True],[False,False,False,False,False],[False,False,True,True,True]],[[False,False,True,False,False],[True,False,True,True,False],[True,True,True,False,False],[True,True,False,True,True]],[[False,True,True,False,True],[True,False,True,True,True],[True,True,False,False,True],[False,True,True,True,True]],[[True,False,False,False,False],[False,False,False,False,True],[True,False,False,True,True],[True,False,True,True,True]],[[True,False,False,True,False],[True,True,True,True,False],[False,False,False,False,True],[True,False,True,True,True]],[[False,False,True,False,True],[False,True,False,False,False],[True,True,False,False,False],[False,True,True,False,False]],[[True,False,True,True,True],[False,False,True,True,True],[False,True,False,False,True],[True,False,False,True,False]],[[True,True,True,True,True],[True,False,False,False,False],[True,True,False,False,True],[True,False,True,True,True]],[[True,True,False,True,True],[True,False,False,True,False],[False,False,True,False,False],[False,True,False,False,False]],[[False,True,True,False,True],[False,False,True,False,True],[False,True,False,False,False],[False,True,False,False,True]],[[False,False,True,True,False],[True,True,False,True,False],[False,True,True,True,False],[True,False,False,False,False]],[[True,True,True,True,True],[True,True,True,True,True],[False,False,False,True,True],[False,True,True,False,False]],[[True,False,False,False,False],[False,True,False,False,False],[False,True,True,True,False],[False,False,False,True,True]],[[True,True,True,True,True],[True,False,False,False,False],[False,True,True,False,True],[True,False,True,True,False]],[[True,True,True,False,False],[False,False,False,False,False],[True,True,True,True,True],[False,False,True,False,False]]], dtype = "bool")#candidate|1758|(16, 4, 5)|const|bool
bop_1759 = relay.logical_or(var_1757.astype('bool'), relay.reshape(const_1758.astype('bool'), relay.shape_of(var_1757))) # shape=(16, 4, 5)
func_1135_call = mod.get_global_var('func_1135')
func_1139_call = mutated_mod.get_global_var('func_1139')
var_1763 = relay.var("var_1763", dtype = "float64", shape = (924,))#candidate|1763|(924,)|var|float64
var_1764 = relay.var("var_1764", dtype = "float32", shape = (832,))#candidate|1764|(832,)|var|float32
call_1762 = relay.TupleGetItem(func_1135_call(relay.reshape(var_1763.astype('float64'), [924,]), relay.reshape(var_1764.astype('float32'), [832,]), ), 0)
call_1765 = relay.TupleGetItem(func_1139_call(relay.reshape(var_1763.astype('float64'), [924,]), relay.reshape(var_1764.astype('float32'), [832,]), ), 0)
func_995_call = mod.get_global_var('func_995')
func_998_call = mutated_mod.get_global_var('func_998')
var_1773 = relay.var("var_1773", dtype = "int32", shape = (104,))#candidate|1773|(104,)|var|int32
call_1772 = func_995_call(relay.reshape(var_1773.astype('int32'), [13, 2, 4]))
call_1774 = func_995_call(relay.reshape(var_1773.astype('int32'), [13, 2, 4]))
output = relay.Tuple([bop_1759,call_1762,var_1763,var_1764,call_1772,var_1773,])
output2 = relay.Tuple([bop_1759,call_1765,var_1763,var_1764,call_1774,var_1773,])
func_1809 = relay.Function([var_1757,var_1763,var_1764,var_1773,], output)
mod['func_1809'] = func_1809
mod = relay.transform.InferType()(mod)
mutated_mod['func_1809'] = func_1809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mutated_mod.get_global_var('func_1809')
var_1811 = relay.var("var_1811", dtype = "bool", shape = (16, 4, 5))#candidate|1811|(16, 4, 5)|var|bool
var_1812 = relay.var("var_1812", dtype = "float64", shape = (924,))#candidate|1812|(924,)|var|float64
var_1813 = relay.var("var_1813", dtype = "float32", shape = (832,))#candidate|1813|(832,)|var|float32
var_1814 = relay.var("var_1814", dtype = "int32", shape = (104,))#candidate|1814|(104,)|var|int32
call_1810 = func_1809_call(var_1811,var_1812,var_1813,var_1814,)
output = call_1810
func_1815 = relay.Function([var_1811,var_1812,var_1813,var_1814,], output)
mutated_mod['func_1815'] = func_1815
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2247 = relay.const(1, dtype = "uint8")#candidate|2247|()|const|uint8
var_2248 = relay.var("var_2248", dtype = "uint8", shape = (14, 14, 3))#candidate|2248|(14, 14, 3)|var|uint8
bop_2249 = relay.greater(const_2247.astype('bool'), var_2248.astype('bool')) # shape=(14, 14, 3)
output = relay.Tuple([bop_2249,])
output2 = relay.Tuple([bop_2249,])
func_2254 = relay.Function([var_2248,], output)
mod['func_2254'] = func_2254
mod = relay.transform.InferType()(mod)
var_2255 = relay.var("var_2255", dtype = "uint8", shape = (14, 14, 3))#candidate|2255|(14, 14, 3)|var|uint8
output = func_2254(var_2255)
func_2256 = relay.Function([var_2255], output)
mutated_mod['func_2256'] = func_2256
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2365 = relay.var("var_2365", dtype = "int8", shape = ())#candidate|2365|()|var|int8
var_2366 = relay.var("var_2366", dtype = "int8", shape = (12, 1, 6))#candidate|2366|(12, 1, 6)|var|int8
bop_2367 = relay.bitwise_and(var_2365.astype('int8'), var_2366.astype('int8')) # shape=(12, 1, 6)
var_2371 = relay.var("var_2371", dtype = "int8", shape = (12, 11, 6))#candidate|2371|(12, 11, 6)|var|int8
bop_2372 = relay.logical_and(var_2366.astype('bool'), var_2371.astype('bool')) # shape=(12, 11, 6)
func_1809_call = mod.get_global_var('func_1809')
func_1815_call = mutated_mod.get_global_var('func_1815')
var_2378 = relay.var("var_2378", dtype = "bool", shape = (320,))#candidate|2378|(320,)|var|bool
var_2379 = relay.var("var_2379", dtype = "float64", shape = (924,))#candidate|2379|(924,)|var|float64
const_2380 = relay.const([3.304915,2.206693,5.395250,8.606060,-6.200890,7.554328,2.425331,-6.967916,8.862331,0.420241,-1.352134,3.935502,-8.024673,3.826495,-9.426260,0.670835,8.367482,7.439016,1.965917,3.024197,-7.102005,2.998716,-2.136081,5.898220,2.617927,9.570599,6.483649,7.013626,-5.914241,6.037401,7.303407,-4.951486,5.784231,-0.587077,5.029775,8.865681,-9.056414,7.386100,-1.969845,-9.942377,8.728816,9.080708,-3.919242,-4.246704,2.568453,3.734152,2.245441,6.740667,-0.264638,3.645554,5.049963,4.997748,2.150029,-9.045161,-6.191205,8.581313,9.441906,-0.658250,5.312333,-6.739506,9.443351,-7.614747,-6.440053,7.988000,4.028068,-5.460693,4.949376,-3.590646,-1.911767,-2.645486,3.426434,-9.756556,3.360479,-5.751448,-7.813878,3.858534,2.172334,-4.358371,-1.360876,-1.250818,-0.348768,-5.186372,-8.247579,-1.967599,-4.920852,3.177030,-2.211810,-8.337450,5.991971,9.742568,8.003945,1.417378,-8.561257,-8.695227,2.208145,-1.729775,9.338857,-9.889870,3.672020,-5.696360,5.720619,3.702113,-8.219843,9.289356,-3.940241,2.580781,-6.119479,-6.575853,-7.675850,4.291657,2.218067,0.887556,-1.007329,5.886441,-2.705248,7.426090,5.864116,1.908966,-4.688466,4.219039,0.586615,4.769109,6.523273,-7.418220,-1.910670,-5.202100,0.223090,7.557322,9.546835,1.797151,-5.576284,4.546440,8.182953,4.333988,-2.046574,1.397278,0.839670,6.734162,-7.594057,-7.059454,4.941097,5.207767,-9.894193,-1.417980,4.323132,2.027435,0.310037,1.516126,-7.983827,-2.587003,-4.935717,-5.762639,-6.057367,-1.382809,-9.650849,-5.866953,5.953811,-5.040322,-5.091548,2.908227,0.777417,2.265855,-0.335845,0.112779,-3.624815,3.105362,5.082100,-5.221225,5.523394,7.988206,-8.111744,7.229524,7.509139,7.131643,-4.802816,6.240438,-3.143354,-7.626129,4.127406,6.425693,-8.234367,-8.438549,-2.004238,9.958388,-6.278495,9.058848,-6.564641,-3.003161,1.889332,5.688691,1.266624,5.675848,-7.579140,-8.625416,1.071073,9.023395,-5.460913,-3.361386,-4.444603,-1.453121,-0.199457,8.434804,-4.480911,-1.946243,-8.119078,7.053344,-0.699298,1.970738,6.177717,-5.405781,9.621087,-7.864408,-7.181526,-9.309419,-6.489401,5.337710,0.419257,-0.831798,-4.068079,5.100261,-6.731484,-8.040746,0.272898,7.825567,6.623916,2.394009,0.184146,-1.011562,-4.606408,8.801997,2.389237,5.806161,4.454999,-6.286860,-5.786099,-8.131798,8.862857,5.927527,-4.998712,1.054972,7.026991,-9.189643,-0.924798,-1.747324,-0.997801,5.864292,-3.553671,-1.520187,-0.297650,4.007676,-5.623141,-7.036903,9.493652,-6.117297,-2.687300,2.371130,-2.859582,6.342479,8.912495,-6.525839,8.396102,7.791223,-2.115731,4.350342,8.033624,-3.554578,3.414489,8.816678,-3.049613,-5.322268,0.555545,-2.235295,-7.447262,-4.274144,1.389921,1.117396,-0.561317,-0.684731,-7.108788,-7.777890,4.044976,5.829180,7.112393,0.528680,-8.902499,-8.581831,7.029069,2.901926,-4.654650,3.197073,-2.352435,-1.105962,-5.521005,-7.086589,7.905944,-2.110983,9.334278,8.313611,-1.311063,-6.656163,-0.142226,-6.989268,-9.737919,9.042075,0.286460,-4.852152,8.851646,-1.999154,-2.444275,-9.084323,4.565643,-4.728507,-7.118640,4.511939,-0.809344,7.712310,9.731234,-8.747183,-0.547584,-6.851812,2.467916,1.774887,-1.808160,-3.191347,-6.668466,-0.751625,2.754213,-5.313735,-4.867053,-5.310330,-9.141846,8.123639,3.786384,6.924075,-3.046602,4.422429,-9.677604,-3.637012,-8.353380,1.121646,-5.700851,6.111045,-6.724348,5.131106,4.793886,6.690833,-0.506775,8.863824,3.278019,9.423297,1.549863,5.962659,5.825697,-3.361764,-0.325203,7.149279,0.065398,-2.706233,-4.884287,-1.336894,8.926134,1.200414,-0.970309,9.892039,0.413412,9.604667,8.389107,8.132969,8.946650,-5.343291,9.514030,-9.018394,-1.507486,9.890653,-4.904260,4.768454,2.105671,2.220959,1.499689,3.658840,8.398183,6.058340,1.593658,-3.845207,-4.042133,-9.251207,-1.276347,-9.971321,1.295704,1.498314,7.515334,2.688400,-7.420889,1.913490,2.863358,-8.354775,4.866162,5.383949,-9.862156,1.438206,2.235433,2.932964,-3.032181,-2.763729,7.717492,-8.849766,-5.532421,4.832414,-9.913806,5.218388,-1.452207,1.430108,5.975622,-0.515699,-5.812566,1.631346,-1.307717,8.635425,-9.152415,-2.091091,4.805954,6.078758,2.076646,-8.400801,4.345602,9.013545,-0.604084,2.279603,-2.043049,9.423235,-7.619939,-3.612041,4.581618,5.744057,1.077939,4.081086,-0.583137,4.514362,-0.140786,-8.189992,3.209139,0.427290,-9.460337,4.141057,-2.135387,3.591504,4.217281,4.570296,6.998820,2.819785,2.001293,5.519877,7.566409,5.900927,9.086328,2.987453,9.552308,-5.725637,9.909951,-1.004902,-4.634434,-3.059876,2.103965,1.236728,2.894332,-7.175934,1.259714,-2.242933,-6.593402,-9.282836,1.758586,-3.883004,-0.845774,-8.464986,-2.010799,-1.606958,-9.257555,9.616138,-2.323455,-8.238000,4.788437,-0.564630,5.208635,7.915146,-8.683798,5.496000,6.379182,0.161729,-1.987551,2.274769,-2.784177,8.095942,6.287008,4.637178,1.506586,1.980824,-8.565232,-8.528423,-5.894345,1.174824,5.562960,0.524143,-8.723817,3.547130,-7.005928,1.800717,-3.760970,-9.854526,6.137754,1.344678,6.796879,9.695975,0.205258,3.900069,0.968009,-3.476050,9.274665,6.611065,-9.400744,-2.924103,-6.453255,-6.092646,1.704720,-8.797891,-4.964717,9.831583,-4.136280,8.760887,-0.223920,5.153230,6.493842,8.520027,8.461071,-4.367077,7.382260,6.238960,-0.774529,-9.818095,-2.873087,8.415269,-5.329868,-2.401251,3.884666,-9.131274,0.130136,-2.715755,-8.014945,7.906903,-9.036112,1.207819,9.040168,1.333312,-4.538742,5.660152,-3.307303,7.951359,4.366527,0.865071,5.008230,5.275935,-8.257380,7.498318,1.589841,-9.354815,-3.493258,0.547357,-2.658238,-0.369931,-3.229518,1.501591,-0.134803,9.195635,0.629446,-3.363326,7.197822,0.540120,9.917706,-6.110355,9.431770,8.126572,-0.623573,0.661032,7.276660,-3.000216,2.335754,0.555478,-3.149817,-4.474680,1.636763,2.663538,-9.719092,-8.564141,4.050344,-9.404393,-8.858653,3.177005,-7.935437,2.500006,-7.807993,7.007751,-3.576568,0.034452,5.718559,-1.133318,-5.472558,0.600065,-0.563708,4.143887,-0.911394,-1.558715,5.697109,-1.591182,4.986028,2.246653,3.698102,9.953836,6.938735,-0.175329,-3.661071,-0.248083,-3.560887,3.356660,1.714789,0.567234,-5.617885,-8.759433,0.608655,7.233065,8.182318,-4.221272,7.045322,-0.564389,-6.529375,-7.406601,7.293077,3.939352,-3.952894,-7.287942,3.650213,-6.036975,7.757064,5.126685,0.766259,9.604182,-8.807408,2.018539,-8.394838,-2.058036,-5.223040,7.228983,7.239381,-1.038626,-4.682786,-9.054038,-1.693498,2.057315,4.607823,-9.918168,-3.244024,2.053500,3.163714,-0.065370,-4.592141,-3.339620,8.761199,-8.153533,-1.211497,2.028058,4.087439,0.466591,-7.417522,-6.772822,4.412488,-3.499004,-4.842741,-5.184297,-1.149669,5.999398,-4.227818,5.002235,-0.335577,-5.999564,-9.096180,3.054696,9.672081,8.688112,2.533796,-2.425513,-0.723902,-5.239110,-7.944922,-7.078204,-8.501413,-7.796277,7.607394,-4.468874,8.564340,0.055523,-9.759575,-1.266466,8.581161,2.637145,4.348622,0.815809,-1.756364,-4.263395,4.134079,9.666682,1.364622,-5.651828,-1.554371,-7.083370,6.715579,2.167104,-7.095515,-5.181270,-0.766789,-3.241428,6.957763,5.305689,-2.010978,-9.952127,2.810409,1.783492,9.066968,6.411576,-9.533238,-9.684573,2.803439,-4.501920,1.354355,4.738060,-9.882425,6.620616,-3.441855,-3.826759,-9.412067,-4.458494,-6.177535,-5.066339,3.495738,2.290529,2.447797,4.961337,-3.826388,-2.237611,-7.420059,5.198406,-4.155176,-0.113934,2.334878,9.344414,-7.181567,2.220982,7.920147,-9.856126,-4.059531,-0.463490,4.512744,-5.619253,9.615144,5.339830,7.182807,7.211781,4.115019,-7.656711,-8.602139,4.429531,7.861684,2.114502,-7.814056,7.908627,-9.775733,6.460297,2.584013,9.252088,-7.520302,2.592821,6.469314,0.732430,-2.394706,1.885382,6.561141,6.911137,-9.494066,1.466734,3.931624,5.726946,7.112377,2.997900,-4.331661,2.139975,-9.943967,-2.047142,4.656504,-3.542673,9.457024,-5.929352,-0.038563,6.694393,3.323857,-1.534896,2.474928,-8.790773,-0.614541,-9.231489,-6.045914,6.102001,-8.350527,-1.606746,-2.889787,0.046117,-9.507544,-1.251242,-9.811055,2.510013,5.469943,-4.124507,7.450836,9.300592,-4.802541,4.116905,9.078119,9.386277,-6.555101,-4.455853,4.640433,6.363662,2.522891,-3.667256,7.135366,5.797242], dtype = "float32")#candidate|2380|(832,)|const|float32
const_2381 = relay.const([[4,3,-2,-4,8,-9,-5,3,6,-8,4,-10,-9,-7,-8,-5,-6,8,7,-2,7,-8,-8,2,10,7,-3,-5,3,5,4,6,8,7,-5,2,8,-6,-4,2,-8,8,-8,-6,-6,4,10,-9,1,8,6,-10,4,3,-4,-2,8,6,4,8,-4,1,2,4,5,-1,-4,5,7,-5,-7,-5,-6,10,4,1,10,-2,1,8,-10,9,10,-3,4,-1,-3,-5,-9,1,10,-9,-4,-3,-9,-1,9,-4,-5,-7,-2,-1,5,6]], dtype = "int32")#candidate|2381|(1, 104)|const|int32
call_2377 = relay.TupleGetItem(func_1809_call(relay.reshape(var_2378.astype('bool'), [16, 4, 5]), relay.reshape(var_2379.astype('float64'), [924,]), relay.reshape(const_2380.astype('float32'), [832,]), relay.reshape(const_2381.astype('int32'), [104,]), ), 2)
call_2382 = relay.TupleGetItem(func_1815_call(relay.reshape(var_2378.astype('bool'), [16, 4, 5]), relay.reshape(var_2379.astype('float64'), [924,]), relay.reshape(const_2380.astype('float32'), [832,]), relay.reshape(const_2381.astype('int32'), [104,]), ), 2)
output = relay.Tuple([bop_2367,bop_2372,call_2377,var_2378,var_2379,const_2380,const_2381,])
output2 = relay.Tuple([bop_2367,bop_2372,call_2382,var_2378,var_2379,const_2380,const_2381,])
func_2391 = relay.Function([var_2365,var_2366,var_2371,var_2378,var_2379,], output)
mod['func_2391'] = func_2391
mod = relay.transform.InferType()(mod)
var_2392 = relay.var("var_2392", dtype = "int8", shape = ())#candidate|2392|()|var|int8
var_2393 = relay.var("var_2393", dtype = "int8", shape = (12, 1, 6))#candidate|2393|(12, 1, 6)|var|int8
var_2394 = relay.var("var_2394", dtype = "int8", shape = (12, 11, 6))#candidate|2394|(12, 11, 6)|var|int8
var_2395 = relay.var("var_2395", dtype = "bool", shape = (320,))#candidate|2395|(320,)|var|bool
var_2396 = relay.var("var_2396", dtype = "float64", shape = (924,))#candidate|2396|(924,)|var|float64
output = func_2391(var_2392,var_2393,var_2394,var_2395,var_2396,)
func_2397 = relay.Function([var_2392,var_2393,var_2394,var_2395,var_2396,], output)
mutated_mod['func_2397'] = func_2397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2436 = relay.var("var_2436", dtype = "float64", shape = ())#candidate|2436|()|var|float64
var_2437 = relay.var("var_2437", dtype = "float64", shape = (14, 10, 12))#candidate|2437|(14, 10, 12)|var|float64
bop_2438 = relay.mod(var_2436.astype('float64'), var_2437.astype('float64')) # shape=(14, 10, 12)
var_2446 = relay.var("var_2446", dtype = "float64", shape = (14, 10, 12))#candidate|2446|(14, 10, 12)|var|float64
bop_2447 = relay.maximum(bop_2438.astype('float32'), relay.reshape(var_2446.astype('float32'), relay.shape_of(bop_2438))) # shape=(14, 10, 12)
uop_2453 = relay.rsqrt(bop_2447.astype('float64')) # shape=(14, 10, 12)
output = relay.Tuple([uop_2453,])
output2 = relay.Tuple([uop_2453,])
func_2460 = relay.Function([var_2436,var_2437,var_2446,], output)
mod['func_2460'] = func_2460
mod = relay.transform.InferType()(mod)
mutated_mod['func_2460'] = func_2460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2460_call = mutated_mod.get_global_var('func_2460')
var_2462 = relay.var("var_2462", dtype = "float64", shape = ())#candidate|2462|()|var|float64
var_2463 = relay.var("var_2463", dtype = "float64", shape = (14, 10, 12))#candidate|2463|(14, 10, 12)|var|float64
var_2464 = relay.var("var_2464", dtype = "float64", shape = (14, 10, 12))#candidate|2464|(14, 10, 12)|var|float64
call_2461 = func_2460_call(var_2462,var_2463,var_2464,)
output = call_2461
func_2465 = relay.Function([var_2462,var_2463,var_2464,], output)
mutated_mod['func_2465'] = func_2465
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2490 = relay.var("var_2490", dtype = "float32", shape = (15, 2, 9))#candidate|2490|(15, 2, 9)|var|float32
uop_2491 = relay.atan(var_2490.astype('float32')) # shape=(15, 2, 9)
output = relay.Tuple([uop_2491,])
output2 = relay.Tuple([uop_2491,])
func_2499 = relay.Function([var_2490,], output)
mod['func_2499'] = func_2499
mod = relay.transform.InferType()(mod)
var_2500 = relay.var("var_2500", dtype = "float32", shape = (15, 2, 9))#candidate|2500|(15, 2, 9)|var|float32
output = func_2499(var_2500)
func_2501 = relay.Function([var_2500], output)
mutated_mod['func_2501'] = func_2501
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2546 = relay.const(-2, dtype = "int64")#candidate|2546|()|const|int64
var_2547 = relay.var("var_2547", dtype = "int64", shape = (15, 13, 15))#candidate|2547|(15, 13, 15)|var|int64
bop_2548 = relay.left_shift(const_2546.astype('int64'), var_2547.astype('int64')) # shape=(15, 13, 15)
bop_2554 = relay.subtract(bop_2548.astype('float32'), const_2546.astype('float32')) # shape=(15, 13, 15)
func_1602_call = mod.get_global_var('func_1602')
func_1605_call = mutated_mod.get_global_var('func_1605')
var_2560 = relay.var("var_2560", dtype = "uint16", shape = (192,))#candidate|2560|(192,)|var|uint16
const_2561 = relay.const([8,-8,9,2,8,-2,-9,-9,-2,-4,7,-1,4,9,-1,-1,-4,-9,-8,-6,1,9,2,-5,-10,-1,2,9,-4,-7,9,-1,7,-7,-1,3,1,-1,7,9,-4,-6,2,2,6,-10,-7,9,3,1,8,-5,4,-2,-4,10,-1,4,-4,9,6,-8,-10,-7,2,6,-1,-9,-9,-6,3,-2,-2,8,-7,-7,-6,-5,1,-7,1,-7,6,-7,-8,-9,9,-5,-2,-9,10,1,1,2,8,-9,5,-1,-1,-8,-1,9,-10,3,7,-2,-7,5,-9,-4,-8,-7,-8,-4,7,7,8,-8,-10,4,-2,-8,-9,1,-10,4,7,-9,-10,-3,4,4,3,2,-2,3,-3,5,4,8,10,-9,5,-1,2,3,3,10,9,1,8,-5,5,-3,-7,-2,-4,3,1,-8,9,3,-1,8,-4,-3,-3,5,10,8,8,-4,10,-6,5,-6,-5,6,1,-8,-3,1,-1,5,-6,-1,-2,9,-6,5,-8,6,1,1,-6,-8,4,-6,-8,8,-5,-8,-6,8,-1,1,-3,5,9,-5,9,-5,-3,-7,1,2,-4,2,9,-2,-3,2,-2,-10,-4,-7,10,-5,-10,-3,8,8,8,-2,7,7,-8,6,5,10,-2,-2,6,5,-10,10,6,9,-5,-10,4,-4,8,2,-7,3,-9,2,-4,3,5,-1,-9,-6,-9,1,-6,6,7,7,10,5,-7,-5,6,-5,1,-2,4,7,4,9,-6,-6,-4,-9,5,4,-3,-4,-6,9,-5,-8,-9,-4,-6,5,-7,5,3,6,9,3,8,2,6,-1,-2,-10,5,-6,-7,3,1,7,-1,4,-2,4,4,-4,-9,1,-4,-4,5,10,-10,-7,-10,-5,-7,2,5,9,-4,-10,-8,4,-2,-10,10,-2,-4,3,3,-6,-8,8,-6,5,-2,5,-5,-1,-9,7,-3,-4,-8,-3,-7,-9,-9,2,-6,7,1,-7,3,7,-8,-5,-3,-8,-6,-10,-9,-9,8,4,-10,3,5,10,-9,-1,-1,-8,5,-7,-6,-3,-8,3,-6,3,10,-7,-7,2,-4,-2,9,-3,-7,-5,-7,-8,-3,-2,-8,6,8,-2,2,2,-8,3,6,2,-4,6,7,6,-7,-10,-1,2,10,8,-9,-10,-5,-2,8,-2,-3,8,4,-10,2,5,-8,7,-2,-2,5,8,4,9,-6,-8,1,8,10,8,10,9,2,-8,1,7,-9,-4,-5,-6,-5,-1,-10,4,1,-4,-7,10,9,6,-5,7,-10,-8,-5,-7,9,-9,-8,-1,-4,9,7,1,-5,-9,-3,-6,-9,-7,9,5,1,8,-6,6,5,-1,7,2,2,4,-8,-6,5,1,7,-1,-1,-6,2,-7,1,1,4,10,3,-9,6,-7,-9,4,-4,4,6,2,-4,-4,9,-3,-9,6,10,-4,-3,7,9,9,8,9,-5,-1,2,-6,-3,3,-3,-3,-8,-9,-9,-4,10,2,-9,2,-3,-3,-10,-7,9,2,-1,-6,3,-10,6,1,-9,1,-5,2,-6,5,5,9,-2,-7,-10,-1,-2,5,9,3,-10,-6,9,-5,4,-3,1,-4,-4,5,-5,9,1,7,-2,8,7,7,3,-3,1,5,-9,-5,1,9,8,5,-1,-7,-3,3,10,-5,3,9,3,7,4,-5,10,1,1,7,-8,-3,1,2,9,6,5,-7,1,10,-4,10,-10,-3,-9,-3,7,10,5,1,7,-5,3,3,-5,-9,2,4,2,-5,10,-8,7,4,7,-5,3,1,1,9,-8,7,-10,2,-10,3,-8,-6,-8,-4,-6,-1,10,-4,-5,8,-3,-3,-6,5,3,-6,8,5,-2,10,9,-6,5,-7,5,6,-10,1,6,-2,3,-2,-9,6,6,-9,9,-2,-7,7,-6,-2,-1,-2,8,-6,1,-1,-2,10,-2,3,-6,6,-3,7,-5,8,1,-3,-4,-1,4,5,-8,-6,-8,4,3,9,-2,-7,-7,-4,-7,-9,-3,-7,-2,-7,-9,-3,-1,1,6,9,-8,8,3,4,-7,10,3,1,10,-6,-10,-6,-7,-4,-6,-2,1,-10,1,6,-6,10,-6,5,-10,4,1,10,6,-10,6,7,-1,4,10,10,8,5,4,9,10,-1,-5,6,4,6,-7,7,-1,-2,3,-6,3,-5,9,8,-9,-10,-1,-6,2,4,6,-1,-4,-5,-2,-10,-2,1,-10,3,-1,4,9,6,-3,-5,4,3,7,-7,-10,-8,-3,-8,-2,-2,3,-5,-5,8,-3,-6,-8,-7,8,-6,2,-5,-4,5,5,7,3,-2,4,6,-10,-6,-1,3,-6,8,-4,-10,7,4,-5,9,4,-8,-9,6,7,10,-5,-7,-6,9,-9,8,-6,-7,-3,1,-6,-6,3,8,5,10,-3,-1,4,-8,-8,-1,9,5,2,9,-5,7,-6,10,3,1,6,6,1,5,2,-4,-5,3,7,7,5,-1,-9,4,10,-1,-7,-8,-2,-6,10,5,8,-3,10,-6,6,-7,8,-10,-7,5,-9,-10], dtype = "uint16")#candidate|2561|(960,)|const|uint16
call_2559 = func_1602_call(relay.reshape(var_2560.astype('uint16'), [16, 1, 12]), relay.reshape(const_2561.astype('uint16'), [16, 5, 12]), )
call_2562 = func_1602_call(relay.reshape(var_2560.astype('uint16'), [16, 1, 12]), relay.reshape(const_2561.astype('uint16'), [16, 5, 12]), )
bop_2563 = relay.add(var_2547.astype('int16'), relay.reshape(bop_2554.astype('int16'), relay.shape_of(var_2547))) # shape=(15, 13, 15)
func_958_call = mod.get_global_var('func_958')
func_961_call = mutated_mod.get_global_var('func_961')
const_2577 = relay.const([True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False], dtype = "bool")#candidate|2577|(30,)|const|bool
const_2578 = relay.const([True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False], dtype = "bool")#candidate|2578|(60,)|const|bool
call_2576 = relay.TupleGetItem(func_958_call(relay.reshape(const_2577.astype('bool'), [3, 1, 10]), relay.reshape(const_2578.astype('bool'), [3, 2, 10]), ), 0)
call_2579 = relay.TupleGetItem(func_961_call(relay.reshape(const_2577.astype('bool'), [3, 1, 10]), relay.reshape(const_2578.astype('bool'), [3, 2, 10]), ), 0)
func_1377_call = mod.get_global_var('func_1377')
func_1380_call = mutated_mod.get_global_var('func_1380')
const_2604 = relay.const([5.006722,-4.216929,6.396050,7.569536,2.511155,8.197425,-2.878092,0.875439,3.560125,7.299882,4.971166,-0.296160,2.336914,9.369749,8.224680,-3.380704,-5.796358,-6.593688,-9.740184,2.381653,1.539668,0.001958,3.129481,3.411291,-3.282171,6.145307,5.071767,7.506221,4.698788,7.632936,-3.506449,-1.210006,-1.649893,7.497569,-9.014728,-4.121960,8.077064,4.845923,2.591151,0.327503,-1.890392,6.886142,-6.643217,-9.471885,2.787778,9.410394,4.398699,-3.069834,-5.702178,-2.826404,-6.756580,-4.944868,0.475264,-3.247056,8.719451,-6.961782,-1.821808,0.764475,-5.204401,2.785943,8.724138,9.796522,-5.806676,0.796049,4.406821,5.529359,-7.005372,3.028555,0.527594,-4.855337,8.802726,-8.684636,-1.662003,7.639206,6.755393,7.145492,7.872113,6.948779,-5.738927,-3.796806,4.108623,-4.913004,4.335632,4.338338,0.754274,1.479917,-6.289722,8.330304,1.730199,5.486462,7.364728,-3.484910,6.452383,-7.681191,-7.018398,-9.415314,-4.271170,4.003153,-5.497444,-4.044625,1.242246,5.503018,-4.276821,-9.216120,9.794797,-5.484246,-5.146652,5.263098,6.801657,-4.040169,-4.920302,5.489561,5.420448,-0.221441,8.292664,1.031370,3.293962,-4.627259,6.110528,6.641977,-2.192536,7.458553,-9.029830,-8.378399,-8.422350,9.932880,5.242329,0.727852,-1.492343,9.395246,3.327256,-4.926709,2.587736,-9.076082,6.375372,4.582705,5.217749,4.075115,8.494816,0.590724,-6.780149,-4.669296,2.940718,-3.128669,5.440592,9.014271,-4.466511,4.229325,-5.181392,0.030917,-0.306151,9.728960,1.213065,6.931606,3.593002,7.320176,-3.790058,8.328263,0.941567,8.226371,0.780081,1.556394,-1.809177,1.104371,-3.608378,-7.789904,0.011364,8.532902,-9.382181,7.294098,4.277818,7.532662,-7.027368,-1.302962,-5.363730,7.550171,-3.519191,-6.718281,7.552497,-2.869897,-8.378672,-6.770926,-3.749928,-9.002447,0.636890,-6.834758,-6.964635,-5.943756,9.045444,9.469257,-9.690891,1.691107,8.170740,7.531788,-3.038904,9.888300,-9.130971,-5.955429,5.159806,-9.112277,1.000863,2.070878,-6.113661,-4.950954,-5.209186,-8.882266,-8.517702,-2.947123,2.356290,2.615717,3.631346,-6.762676,-7.872811,-5.014517,2.755403,-5.886578,-3.009325,0.935677,6.588866,-0.908625,2.098197,-5.632999,-8.843136,7.127027,-3.703114,9.310940,3.561447,-5.795964,9.380159,8.279470,0.467778,7.964374,-6.215816,-9.600047,-2.362943,1.398939,8.760803,-4.332861,-7.553358,4.265828,-3.238917,-9.865119,-5.809546,7.683618,-2.829161,9.827688,6.955251,3.256958,7.106116,0.817631,-4.932953,5.180156,9.150126,8.388464,1.720681,-8.634985,-1.064497,-1.408962,0.829104,-9.748440,-7.615204,2.517657,-3.368569,0.518724,1.883423,1.663025,-1.295564,3.421637,-4.794526,2.857964,-4.345557,9.287567,6.219376,2.552680,-1.748944,-3.699991,1.823153,-8.869695,-6.696625,9.089847,-4.665164,7.326380,0.373041,-8.322368,6.250963,-7.041681,-9.625775,-0.079917,2.625265,-0.272389,5.603207,-7.717974,8.899138,-8.016388,6.963430,5.311508,3.319164,-3.248418,1.420243,-3.749296,-9.247562,-5.298808,5.454064,-9.947553,7.409323,-3.703826,5.765014,5.361384], dtype = "float32")#candidate|2604|(308,)|const|float32
call_2603 = func_1377_call(relay.reshape(const_2604.astype('float32'), [11, 7, 4]))
call_2605 = func_1377_call(relay.reshape(const_2604.astype('float32'), [11, 7, 4]))
uop_2606 = relay.exp(var_2547.astype('float32')) # shape=(15, 13, 15)
output = relay.Tuple([call_2559,var_2560,const_2561,bop_2563,call_2576,const_2577,const_2578,call_2603,const_2604,uop_2606,])
output2 = relay.Tuple([call_2562,var_2560,const_2561,bop_2563,call_2579,const_2577,const_2578,call_2605,const_2604,uop_2606,])
func_2616 = relay.Function([var_2547,var_2560,], output)
mod['func_2616'] = func_2616
mod = relay.transform.InferType()(mod)
var_2617 = relay.var("var_2617", dtype = "int64", shape = (15, 13, 15))#candidate|2617|(15, 13, 15)|var|int64
var_2618 = relay.var("var_2618", dtype = "uint16", shape = (192,))#candidate|2618|(192,)|var|uint16
output = func_2616(var_2617,var_2618,)
func_2619 = relay.Function([var_2617,var_2618,], output)
mutated_mod['func_2619'] = func_2619
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2837 = relay.var("var_2837", dtype = "float64", shape = (13, 5, 9))#candidate|2837|(13, 5, 9)|var|float64
uop_2838 = relay.asin(var_2837.astype('float64')) # shape=(13, 5, 9)
bop_2840 = relay.greater(uop_2838.astype('bool'), relay.reshape(var_2837.astype('bool'), relay.shape_of(uop_2838))) # shape=(13, 5, 9)
func_2391_call = mod.get_global_var('func_2391')
func_2397_call = mutated_mod.get_global_var('func_2397')
var_2844 = relay.var("var_2844", dtype = "int8", shape = ())#candidate|2844|()|var|int8
var_2845 = relay.var("var_2845", dtype = "int8", shape = (72,))#candidate|2845|(72,)|var|int8
var_2846 = relay.var("var_2846", dtype = "int8", shape = (2, 396))#candidate|2846|(2, 396)|var|int8
var_2847 = relay.var("var_2847", dtype = "bool", shape = (320,))#candidate|2847|(320,)|var|bool
var_2848 = relay.var("var_2848", dtype = "float64", shape = (924,))#candidate|2848|(924,)|var|float64
call_2843 = relay.TupleGetItem(func_2391_call(relay.reshape(var_2844.astype('int8'), []), relay.reshape(var_2845.astype('int8'), [12, 1, 6]), relay.reshape(var_2846.astype('int8'), [12, 11, 6]), relay.reshape(var_2847.astype('bool'), [320,]), relay.reshape(var_2848.astype('float64'), [924,]), ), 6)
call_2849 = relay.TupleGetItem(func_2397_call(relay.reshape(var_2844.astype('int8'), []), relay.reshape(var_2845.astype('int8'), [12, 1, 6]), relay.reshape(var_2846.astype('int8'), [12, 11, 6]), relay.reshape(var_2847.astype('bool'), [320,]), relay.reshape(var_2848.astype('float64'), [924,]), ), 6)
bop_2853 = relay.maximum(call_2843.astype('uint8'), var_2844.astype('uint8')) # shape=(1, 104)
bop_2856 = relay.maximum(call_2849.astype('uint8'), var_2844.astype('uint8')) # shape=(1, 104)
output = relay.Tuple([bop_2840,var_2845,var_2846,var_2847,var_2848,bop_2853,])
output2 = relay.Tuple([bop_2840,var_2845,var_2846,var_2847,var_2848,bop_2856,])
func_2868 = relay.Function([var_2837,var_2844,var_2845,var_2846,var_2847,var_2848,], output)
mod['func_2868'] = func_2868
mod = relay.transform.InferType()(mod)
mutated_mod['func_2868'] = func_2868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2868_call = mutated_mod.get_global_var('func_2868')
var_2870 = relay.var("var_2870", dtype = "float64", shape = (13, 5, 9))#candidate|2870|(13, 5, 9)|var|float64
var_2871 = relay.var("var_2871", dtype = "int8", shape = ())#candidate|2871|()|var|int8
var_2872 = relay.var("var_2872", dtype = "int8", shape = (72,))#candidate|2872|(72,)|var|int8
var_2873 = relay.var("var_2873", dtype = "int8", shape = (2, 396))#candidate|2873|(2, 396)|var|int8
var_2874 = relay.var("var_2874", dtype = "bool", shape = (320,))#candidate|2874|(320,)|var|bool
var_2875 = relay.var("var_2875", dtype = "float64", shape = (924,))#candidate|2875|(924,)|var|float64
call_2869 = func_2868_call(var_2870,var_2871,var_2872,var_2873,var_2874,var_2875,)
output = call_2869
func_2876 = relay.Function([var_2870,var_2871,var_2872,var_2873,var_2874,var_2875,], output)
mutated_mod['func_2876'] = func_2876
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2902 = relay.var("var_2902", dtype = "float64", shape = (14, 8, 10))#candidate|2902|(14, 8, 10)|var|float64
uop_2903 = relay.log2(var_2902.astype('float64')) # shape=(14, 8, 10)
func_958_call = mod.get_global_var('func_958')
func_961_call = mutated_mod.get_global_var('func_961')
const_2908 = relay.const([False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False], dtype = "bool")#candidate|2908|(30,)|const|bool
var_2909 = relay.var("var_2909", dtype = "bool", shape = (30, 2))#candidate|2909|(30, 2)|var|bool
call_2907 = relay.TupleGetItem(func_958_call(relay.reshape(const_2908.astype('bool'), [3, 1, 10]), relay.reshape(var_2909.astype('bool'), [3, 2, 10]), ), 0)
call_2910 = relay.TupleGetItem(func_961_call(relay.reshape(const_2908.astype('bool'), [3, 1, 10]), relay.reshape(var_2909.astype('bool'), [3, 2, 10]), ), 0)
func_1655_call = mod.get_global_var('func_1655')
func_1658_call = mutated_mod.get_global_var('func_1658')
var_2918 = relay.var("var_2918", dtype = "float64", shape = (120,))#candidate|2918|(120,)|var|float64
call_2917 = relay.TupleGetItem(func_1655_call(relay.reshape(var_2918.astype('float64'), [8, 3, 5]), relay.reshape(var_2918.astype('float64'), [8, 3, 5]), ), 0)
call_2919 = relay.TupleGetItem(func_1658_call(relay.reshape(var_2918.astype('float64'), [8, 3, 5]), relay.reshape(var_2918.astype('float64'), [8, 3, 5]), ), 0)
output = relay.Tuple([uop_2903,call_2907,const_2908,var_2909,call_2917,var_2918,])
output2 = relay.Tuple([uop_2903,call_2910,const_2908,var_2909,call_2919,var_2918,])
func_2930 = relay.Function([var_2902,var_2909,var_2918,], output)
mod['func_2930'] = func_2930
mod = relay.transform.InferType()(mod)
var_2931 = relay.var("var_2931", dtype = "float64", shape = (14, 8, 10))#candidate|2931|(14, 8, 10)|var|float64
var_2932 = relay.var("var_2932", dtype = "bool", shape = (30, 2))#candidate|2932|(30, 2)|var|bool
var_2933 = relay.var("var_2933", dtype = "float64", shape = (120,))#candidate|2933|(120,)|var|float64
output = func_2930(var_2931,var_2932,var_2933,)
func_2934 = relay.Function([var_2931,var_2932,var_2933,], output)
mutated_mod['func_2934'] = func_2934
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3240 = relay.var("var_3240", dtype = "int64", shape = ())#candidate|3240|()|var|int64
var_3241 = relay.var("var_3241", dtype = "int64", shape = (9, 14, 8))#candidate|3241|(9, 14, 8)|var|int64
bop_3242 = relay.greater_equal(var_3240.astype('bool'), var_3241.astype('bool')) # shape=(9, 14, 8)
func_735_call = mod.get_global_var('func_735')
func_738_call = mutated_mod.get_global_var('func_738')
const_3260 = relay.const([[2.784701,5.805393,-7.576227,-0.105271,-0.366070,2.555009],[-4.428520,-1.708498,5.791136,2.838954,-0.250808,-4.990070],[-9.313212,3.752101,6.229685,6.930507,-0.241746,-0.243316],[5.987906,-5.068894,9.007041,-5.033302,1.092880,-0.769959],[3.634832,7.476937,1.243654,-0.425253,4.584590,1.502116],[-5.120234,5.063161,2.672815,6.653260,5.642209,6.933463],[-2.713186,-7.082289,-3.213144,-9.554518,-5.672861,1.201971],[1.843012,-2.721181,5.126123,7.707127,-8.572194,9.160994],[2.264453,-9.458036,-0.022702,4.709052,0.031571,-3.782151],[-5.743740,8.394696,-3.282534,0.217458,9.212078,0.890162],[2.951163,-9.544820,9.673898,7.736409,-6.457347,8.456109],[1.616205,8.315458,-2.499610,-7.850782,1.468887,-9.748889],[-4.379538,7.290215,0.201846,1.912916,-4.296128,-5.934047],[8.753462,-0.107393,0.588215,-6.428261,-7.662304,-7.490244],[-2.565104,-9.235123,-3.316229,9.909158,-3.038306,-9.437948],[1.707579,-8.606448,3.909987,-9.174582,-8.982930,9.226925],[-5.160436,1.382036,1.230711,-9.248542,-3.459742,1.882993],[1.764784,-3.585019,-6.839509,1.447537,-7.819468,9.107300],[-1.936480,-5.101175,-6.904607,-8.306890,8.474123,0.736078],[2.577355,-2.288907,-9.795771,5.484635,2.351851,4.015110],[-8.267966,0.823259,-5.050465,6.485324,-3.060774,-8.877875],[1.923414,-9.909792,-9.613089,9.602943,2.712030,4.215198],[-8.078748,3.345808,-3.373876,7.923694,7.906465,6.674498],[6.272627,-8.220236,-6.672135,-8.585312,8.545527,0.864991],[-3.076305,-5.987728,-0.375456,-6.928201,-7.146620,-3.812131],[-0.887463,7.219505,0.700230,-8.879314,1.049456,-4.063626],[6.561350,0.644325,2.357856,-8.915919,-3.037982,9.759340],[-8.381186,7.630952,5.292360,-7.242805,3.670951,4.368469],[-6.303786,5.620667,-5.439428,-1.051169,-9.631633,6.154006],[-8.779264,1.394565,-9.620732,4.269216,-3.048266,3.386505],[9.555273,-6.457838,1.981262,8.782852,7.340371,-9.775018],[-3.098349,4.204395,-3.298800,6.671126,-7.241067,4.436627],[0.524052,2.155795,9.600157,-0.896528,-9.610452,0.231173],[-2.902206,-9.003847,8.091393,-7.933635,2.894974,-3.569442],[-8.266682,-3.660740,1.707430,1.219373,-6.891644,-2.557366],[8.519430,-3.573354,8.091904,1.311562,-0.743121,4.017158],[-2.860335,-7.550211,1.976874,-8.275994,-2.528323,-2.165127],[-6.193269,-2.230182,2.101465,2.447201,5.041424,-8.584622],[0.592905,8.594883,8.800250,-5.600550,-2.950674,4.287298],[2.160386,2.568574,-6.756721,0.837304,1.419264,-4.162519],[2.442012,5.766432,4.815103,0.757636,5.675600,7.100653],[-0.585732,1.240177,-1.070203,-9.928573,-4.980040,3.101642],[-5.627951,1.683297,-1.465054,-2.144323,5.887720,5.782832],[5.310682,-7.591897,0.142440,-7.043125,5.478667,-9.611956],[-2.730376,0.556770,-1.079511,-6.774853,-1.997705,-8.233326],[9.478364,-4.243262,-1.788638,1.539537,-4.468249,-7.076631],[8.448242,2.671301,-2.822460,-8.910944,7.777760,5.301267],[-9.237259,-3.604051,-7.999258,-0.424916,0.186834,-4.068441],[-6.958165,0.053614,3.382985,-2.414148,-8.937672,4.943463],[6.754327,-3.610049,-9.423297,-3.124166,4.551058,2.405132],[6.493015,3.379609,-6.156322,-6.648660,9.971193,3.756077],[4.155243,-1.965674,-0.789101,6.039629,2.834918,-1.748318],[1.165604,4.662789,6.901395,-6.850935,-5.048320,5.702578],[-0.661722,3.883167,0.223761,-0.996197,-8.929282,5.637272],[0.355372,-9.295394,-0.083613,-4.019041,5.287877,-2.419675],[-5.069031,6.975053,-9.037292,8.732261,-2.384440,-5.683644],[3.292182,-0.158585,9.409691,-2.926359,-0.919670,-2.195953],[6.383656,1.935812,-7.438579,3.130198,-6.079516,2.402387],[5.460406,1.450795,6.083373,-7.952237,9.277536,-9.188426],[-4.117968,5.342307,5.277356,3.722259,-7.416563,9.342261],[-2.799708,0.593699,7.183811,8.465107,5.451199,-2.561097],[-3.649838,1.284479,3.802438,3.776187,9.906299,7.921973],[-2.426597,7.628790,0.131494,4.095832,-6.772021,-4.850346],[4.673414,-1.199296,2.677758,4.622505,5.784817,9.243329],[-5.305698,-6.706723,4.020885,-0.719388,-5.413323,-6.921579],[-3.763824,8.719419,-3.344127,-8.176383,0.723548,-8.404987],[9.860675,4.778206,-2.044613,4.416770,6.533426,-8.817677],[3.464343,-2.368437,8.209436,4.056949,-7.281820,-9.802894],[7.852152,-9.211808,5.402636,9.695342,-9.665134,-1.693954],[0.979706,7.339062,9.680768,5.689936,-4.046887,4.482787],[-2.916785,4.093740,1.112180,0.179537,-9.394120,-6.003536],[-5.977108,-8.774926,-6.548137,4.089977,-4.652909,-4.143870],[8.224166,8.743468,7.165831,7.858791,5.263293,-4.941711],[-0.746450,2.112627,1.935634,-7.093624,2.521889,-1.636269],[5.874007,8.493296,-6.318172,-4.254063,8.243074,6.323425],[-1.267245,-3.171809,9.009999,-5.096528,-0.208088,-0.462753],[3.317358,7.916050,9.568798,-9.876274,-2.774224,-3.240336],[6.609029,-5.905154,-0.554320,7.783069,-5.495362,3.544700],[-0.076144,6.335872,9.507420,-3.291466,-9.314171,-0.266615],[5.954388,4.587070,-7.271042,-2.662527,-3.428588,8.587222],[-3.199250,9.334890,-0.413805,-9.092458,-2.887287,-0.598620],[6.333872,2.096810,-0.819828,2.875516,-8.170922,4.674942],[6.867499,5.089362,-6.242853,-2.659970,4.727741,1.666839],[-6.745169,0.097051,8.657900,5.953016,-4.584068,8.822312],[-2.197790,5.134098,1.938639,5.341335,-0.859686,-4.663185],[2.672395,-0.813202,-6.110053,2.098367,5.009593,3.806146],[-4.439170,-4.738903,5.293652,0.684196,-3.547529,6.296952],[-0.389977,-3.721021,6.699356,9.555342,-3.377942,0.741441],[-7.264163,0.265079,2.945954,-6.761577,8.144737,6.685926],[-1.354680,-1.488626,5.892473,-2.116892,9.152737,-8.695707],[7.619716,9.726537,1.023672,-3.050620,3.919912,-5.222570],[8.539979,-6.442283,0.228475,6.655720,6.393040,-5.970698],[9.905939,-4.054638,-3.485179,2.757789,-8.093778,1.879552],[-8.721935,6.428629,2.983215,-4.406679,1.411849,-0.316200],[-8.588656,-5.057878,5.136024,-4.964738,-2.280303,8.447357],[-6.479323,-1.325878,-3.412846,-0.498965,-3.380766,-5.941544],[6.614360,-3.152726,-8.444977,2.578594,-6.755490,-1.548831],[3.511069,1.544503,7.554305,-8.784293,7.923049,-3.127593],[-0.576607,-2.258343,1.360496,-2.136131,-3.329667,7.976870],[9.788806,4.233278,-9.189606,-6.846367,3.238719,3.146711],[-7.087721,-7.350599,9.394667,8.988666,5.831274,-5.169371],[8.992780,-5.649734,4.057135,-1.945855,-2.400924,-8.280251],[7.968597,-4.258874,-1.885077,4.417858,7.783404,4.328381],[-9.874975,-8.557084,-6.232498,-1.542736,-8.188869,9.999236],[-7.238216,-5.547734,-3.590983,-1.621298,8.115468,-0.243831],[-6.985707,6.260071,9.589160,-9.504413,2.941777,4.892022],[6.427014,9.933657,-8.730825,7.960384,-0.927233,-3.827766],[9.787724,-4.534177,4.836715,-8.907020,-1.454561,-9.943712],[-6.645967,-2.993003,7.572662,-1.875676,4.589265,-9.932731],[-3.437921,8.164843,-3.293989,8.606023,-1.672068,-5.494369],[-9.855621,7.383435,-1.304508,-9.155824,2.571894,3.490634],[1.216554,0.857167,5.444904,-2.657118,-0.694425,6.949755],[2.431658,-6.575744,-6.153083,-9.097728,0.996306,-8.602511],[8.878824,0.168837,1.903293,1.823651,-4.571943,2.228303],[0.188312,5.241611,7.903884,-1.043639,-2.376028,-6.753376],[3.332702,4.469508,3.505863,8.726467,8.437348,1.699758],[7.762527,3.509815,6.474553,9.321099,-6.285061,-3.516204],[5.581893,7.960120,2.719367,7.357826,-3.312939,-3.876475],[-0.093838,-4.122330,-3.963474,-8.088679,-4.594612,0.991073],[-2.353160,-3.883021,1.696320,1.361577,2.401398,-3.531085],[-2.230812,-8.119714,1.424603,-2.162567,-3.367136,8.814020],[-8.384477,-4.246152,6.410692,3.465757,-3.156373,-4.995778],[-6.249209,4.835857,-0.089574,1.233540,2.846487,0.360460],[-0.179662,-5.854566,-1.299483,7.595536,2.996893,-6.562935],[7.970556,-2.751910,6.113084,9.658873,-3.731429,-2.937227],[1.702002,-2.991805,2.752819,1.689197,3.397898,-6.234986],[8.760124,9.277557,7.375233,4.893558,2.039094,-8.095354],[-8.868973,-7.000413,-3.622800,-1.759384,-6.806109,-2.442462],[-1.945614,6.250494,4.036540,-0.340855,4.324645,8.911667],[3.194086,3.811349,1.146347,1.546912,-1.310430,-7.236194],[-1.970095,-8.281770,5.798890,-2.615762,-5.814550,-6.014303],[9.533342,-6.687256,-2.649509,9.802345,-9.180623,-5.723436],[1.714151,5.864090,9.041433,-7.725010,-1.763694,7.005744],[-5.689973,-0.513168,2.797790,-5.084572,3.127045,-3.216169],[6.435324,6.213398,-2.263959,6.257689,7.877829,2.568678],[-5.124182,1.846443,-0.917924,4.994617,-1.548899,5.780705],[-9.479039,9.453809,-6.097366,2.776910,5.614852,1.830316],[-7.323407,1.118435,-8.979356,-4.826195,6.285704,0.723260],[-3.099413,-0.979138,-6.963849,1.395171,9.919605,-7.965049],[-5.640812,2.871657,-2.016131,7.721587,4.331912,3.695201],[-2.511859,9.273447,0.603025,0.090423,4.162129,-8.303908],[-8.244150,-2.419419,-5.914679,2.893213,-4.597689,3.356824],[-7.495516,4.842460,4.359124,0.860821,-2.320955,7.892109],[7.855805,-6.335888,-4.767722,8.159587,-6.758550,4.516497],[-5.983897,8.486683,3.949673,-5.235216,1.354515,-5.491042],[-2.424614,-3.054692,-9.771036,-2.721718,6.611839,-4.899846],[4.335376,-2.674522,2.912665,0.883764,-6.261940,-7.920623],[5.496757,2.368235,-7.839928,7.088525,8.375677,1.571495],[-3.905252,-9.392793,-4.446419,4.093425,-0.493989,4.321842],[2.204811,3.641193,0.477797,-4.009990,-1.073374,-8.664880],[7.139856,5.189600,5.008566,-9.215407,-1.507260,1.048956],[3.395536,6.735696,-1.796979,9.313348,0.477222,-9.235403],[-7.567348,8.396768,-3.736081,4.482006,4.306872,3.378924],[3.200561,-9.496197,-2.823751,9.880405,1.097591,2.155810]], dtype = "float64")#candidate|3260|(154, 6)|const|float64
const_3261 = relay.const([2.304106,-1.581253,-8.680852,4.291679,3.855382,-5.364496,4.427497,4.669853,9.940782,5.060983,-7.191223,9.172027,2.209944,5.824201,4.807365,6.478276,-3.947054,-4.934200,7.814853,-2.730859,-6.692934,2.338974,-3.368254,2.035893,0.853376,3.500301,8.509347,2.279417,5.797596,2.960566,3.045193,5.592574,-9.417283,4.697521,6.005930,-5.096160,-3.777065,-2.431103,7.960733,2.191072,-2.963072,-8.998096,6.657585,-4.672242,-8.243526,-3.399858,-3.814810,-6.121818,2.589370,-3.405569,6.751307,5.477845,-2.392820,-9.528135,9.351120,-4.867707,-2.624931,5.838514,-5.418432,-7.760259,5.691756,3.990224,-4.534088,9.922772,7.686886,3.917349,-2.778618,-3.447319,-0.089836,-5.876228,-5.269859,3.708272,1.284707,3.794312,-7.158934,7.898456,-3.787226,7.955805,-6.554895,-6.769170,-3.738109,-1.696377,-4.941886,4.861714,3.219948,-4.139939,9.043587,-8.964916,-9.061729,-3.820802,4.371360,4.146025,-2.730098,-1.160924,4.555625,-0.727201,-5.787789,-6.716254,-2.669388,2.340063,-4.028783,9.319659,7.822657,-7.217128,8.750419,-2.128769,-0.386352,-1.746162,-4.332812,7.868082,-2.641297,8.826029,-5.468338,9.861324,-8.254531,-8.886365,7.606038,-1.890355,2.042108,-6.169185,6.190147,1.471020,-3.068186,0.775294,4.807094,-6.932618,-5.753374,-7.274882,-1.548497,5.156956,6.322564,5.744320,-0.956108,3.656299,-4.582460,-5.588037,8.774119,-3.534463,-9.027541,-2.691888,-2.800421,7.409603,3.396564,-5.171151,5.711145,-2.582166,2.059787,2.317233,9.322200,-3.030314,1.163311,2.787628,-4.252362,-7.341797,0.016490,-6.521857,-2.275818,8.094686,-4.998205,2.373961,3.467474,-4.773111,3.347179,-4.226881,-1.612182,-8.269123,-7.948838,-6.428479,9.428057,6.594785,-4.006146,5.627544,6.845735,-4.491769,-2.681943,7.871443,7.714887,-1.760849,-6.724278,9.655283,7.027767,-1.070894,8.982887,9.129198,3.907069,-5.464534,-6.953472,-6.155557,-9.072989,2.506312,-3.479910,-3.329106,-1.631011,-6.712391,-7.779167,-0.015032,-0.728009,9.169664,9.746215,-8.583757,4.843417,-8.132199,-2.746155,6.902068,9.880578,4.261680,6.878426,1.672473,0.866519,-3.209360,7.248136,1.682436,3.981952,-7.479902,8.506317,-0.026973,3.531971,8.825354,1.256967,-3.700352,1.429037,7.759509,5.668000,9.441414,-5.855028,-6.679800,-8.578552,7.446843,-8.639227,-1.700380,8.398679,-1.790235,-6.800812,-2.953354,-1.664384,-1.772546,1.508785,4.477342,3.777656,8.332435,-8.685061,7.346858,8.291307,5.420287,-9.597130,-3.792966,-6.195556,-6.296239,-4.859406,-5.460459,9.498107,-0.709868,-1.480067,-7.344255,-8.871124,-5.685548,6.338785,8.118958,-5.078540,6.419903,8.633325,-8.525182,-2.161081,-9.356964,-8.343142,-8.487284,3.844181,-2.735723,-0.178308,1.550162,-6.268768,3.097751,-0.596579,-7.070450,8.834258,2.417539,0.560742,-3.279473,4.564569,-9.354323,-9.510226,0.354893,-3.702358,9.234754,-2.699467,1.558862,-1.707554,4.940585,-0.090898,-0.846493,2.965843,-2.839516,2.145679,-3.047733,5.088056,-2.250700,0.837789,9.854527,6.581100,-2.359595,-0.231007,-2.957907,3.155846,2.583013,-7.550777,9.471069,3.044270,-9.711153,6.944856,6.396014,-2.635579,-4.706962,-5.362689,1.974304,-8.038508,4.955352,9.487283,-1.501306,1.836729,-7.635188,6.486648,0.997494,0.346927,1.020619,3.535664,6.495339,5.437229,3.973353,-9.315201,9.887491,1.420199,2.565718,3.299616,9.280266,5.258935,-5.400936,6.598642,3.030746,9.361527,1.386921,-1.618129,-6.851048,-6.149860,0.121642,-5.160239,-4.964094,5.907803,3.704202,1.706541,-8.940783,-7.459847,3.487028,-2.866710,9.112030,5.439308,-0.726270,2.580325,4.103901,1.120573,-7.468863,-5.650174,1.482801,-0.874371,-0.306457,4.748014,-6.181074,4.324900,5.215270,9.957055,5.409157,-7.437547,-5.844675,3.572102,0.442878,-7.260529,-6.383424,-1.315058,-4.880298,-1.884124,-9.584273,0.197578,-8.867663,-1.892542,3.697146,-2.197400,1.091227,-9.693825,-8.615794,9.714420,-2.236674,-6.302731,-7.721566,-5.720215,1.913434,0.842188,-6.751311,5.243923,8.111643,2.876068,5.322175,-2.246457,-3.475801,-1.663659,-5.477365,-1.906313,1.787399,2.102613,-6.990056,-9.430222,5.030442,5.317455,6.010769,-5.959209,2.926870,3.614149,0.079104,8.789347,-3.896778,-2.369111,2.178930,-2.377285,0.218621,3.644022,6.447504,-8.318020,2.328097,8.141713,-0.728738,-1.824242,2.452155,-3.518209,2.337888,-3.881433,8.034933,-5.353598,7.068938,6.083320,-8.399538,-0.378386,-5.838615,-1.181982,3.079578,-4.936119,0.628680,4.608128,-4.008516,0.548130,4.925925,-9.467107,8.406156,7.746164,2.309492,8.914619,5.501829,9.120039,-6.673933,-8.603640,5.295623,0.276078,8.488329,6.431778,-0.498811,5.217944,-8.202971,-7.759506,-7.627486,1.137682,-6.551309,5.601682,-5.036907,-0.688707,5.800164,-7.446647,0.098417,1.444319,-7.886851,2.600391,-2.490697,-7.320025,-1.810299,-7.377972,8.923627,-1.198423,-5.760773,0.089881,-2.005735,-7.572400,-6.284306,2.244710,-6.553208,-7.128809,4.490167,-7.377885,-5.806560,6.422552,9.499892,6.482343,2.886198,1.207576,-7.518850,-0.313252,-3.539336,-9.922244,-6.075628,-9.666076,-6.808037,3.479715,-0.653685,7.703634,3.263042,1.351242,-7.763137,2.911343,-3.943800,-6.882171,9.737119,-1.384534,6.875507,0.454644,-9.685899,-4.104714,-4.862159,-2.078696,6.054456,-1.038035,-3.300885,-8.018289,-3.837096,-0.475745,-5.440821,5.093186,-6.916626,1.245347,-8.542957,5.132129,-9.562080,-0.916966,1.435787,-7.221861,-0.125306,5.161194,-6.135795,-6.601696,0.524514,-1.790494,5.509620,-1.470544,0.105834,4.322370,-7.597988,-3.344079,-3.246612,3.235074,8.144779,7.580735,-0.108239,5.726258,-5.819355,-4.560540,-8.979459,5.666443,-8.641802,4.335001,0.819811,-7.701181,2.447110,-2.498051,5.219433,-7.381169,7.927812,-0.121259,-2.114702,1.210495,3.067549,7.080391,-2.803452,7.891859,-6.910322,-7.104571,6.665672,1.232656,9.024647,1.038026,3.850636,4.973621,4.819430,6.055136,9.415711,-1.627232,-3.887488,0.122741,-5.986684,5.668535,2.124630,-1.639053,-9.851057,-1.502257,0.841875,-7.850057,8.158023,-3.080696,-4.456584,-1.258724,-3.179321,-9.640107,-3.707344,6.657308,3.103996,1.603857,-5.199516,2.914467,1.190638,-0.252129,6.619602,-5.373093,-5.051165,2.497884,-2.803754,0.870928,-1.040107,7.332179,5.384007,1.885689,2.231551,6.546746,-5.149523,6.055143,-0.255666,9.969709,-7.247554,-1.183654,-1.874548,3.019661,-3.661436,7.331190,1.442826,1.212963,8.110024,4.781725,-2.345912,-9.050679,1.964402,-9.762344,0.675828,-5.995361,1.984247,-7.822694,-5.733182,-1.979446,-9.194830,-2.271834,-8.405884,-9.931331,-4.999449,6.019541,6.112055,-6.993304,7.662552,-2.835664,-9.273506,-7.077914,-0.654354,3.364089,2.841398,0.108348,3.366265,6.408988,4.268947,8.051601,4.306952,-5.389822,-3.817843,0.151010,-5.002800,-7.609084,-4.089227,-8.683637,5.972812,-1.070555,-1.680634,7.414992,5.631583,0.303866,-0.434358,-7.802859,7.989798,-7.479195,7.475566,4.946549,-6.433751,-0.409903,1.583333,2.372611,-3.406310,7.142388,0.860924,-1.293274,5.271442,8.345766,-8.850465,2.201284,4.763141,6.356153,5.373168,-6.865505,-4.043439,3.340433,1.459969,8.249232,-1.184373,-0.166739,9.522447,-6.069574,9.667610,-8.027539,3.275214,7.396523,-0.409766,-2.803070,-1.857129,8.002013,1.900541,-0.525927,1.844150,9.462208,-7.901778,5.193386,-7.244940,-4.502347,4.933614,-4.696705,-4.542418,1.417454,-2.968460,-6.682345,-7.378511,-8.962025,-1.582901,3.286404,-4.494205,2.296283,-8.946703,-7.390068,-6.380094,-6.783903,8.696203,2.312214,2.170286,-1.016441,-1.335575,-3.852899,-6.512035,-4.206596,2.672829,-2.297459,-7.585154,-7.855484,-8.312297,-0.265130,1.768395,5.724554,3.057730,-4.755349,4.892543,-9.785740,4.998326,3.369849,9.393472,6.434855,9.262134,-2.981570,2.262148,-4.324038,3.548243,9.660213,-9.427120,-6.686445,6.771008,-2.062227,3.389048,-4.501859,5.286501,6.363372,9.612183,2.546936,-9.869484,7.998659,-1.215155,-9.906936,-1.129518,-5.085880,-7.251728,-2.884000,0.801613,-3.886315,0.019423,3.506596,-4.350001,-4.687351,8.739507,-9.325854,5.289354,-4.050965,-7.336008,-0.610792,-6.151361,8.643248,1.702723,-9.642399,-9.385794,8.080855,2.655384,-1.164824,8.717268,7.450212,-1.904858,3.984805,9.342024,9.312910,-8.422510,-5.845000,-5.440154,0.794148,0.448316,-0.895469,-2.337882,-0.631163,-0.342846,-7.813900,5.973154,4.565215,0.533439], dtype = "float32")#candidate|3261|(832,)|const|float32
call_3259 = relay.TupleGetItem(func_735_call(relay.reshape(const_3260.astype('float64'), [14, 11, 6]), relay.reshape(const_3261.astype('float32'), [832,]), ), 1)
call_3262 = relay.TupleGetItem(func_738_call(relay.reshape(const_3260.astype('float64'), [14, 11, 6]), relay.reshape(const_3261.astype('float32'), [832,]), ), 1)
output = relay.Tuple([bop_3242,call_3259,const_3260,const_3261,])
output2 = relay.Tuple([bop_3242,call_3262,const_3260,const_3261,])
func_3264 = relay.Function([var_3240,var_3241,], output)
mod['func_3264'] = func_3264
mod = relay.transform.InferType()(mod)
var_3265 = relay.var("var_3265", dtype = "int64", shape = ())#candidate|3265|()|var|int64
var_3266 = relay.var("var_3266", dtype = "int64", shape = (9, 14, 8))#candidate|3266|(9, 14, 8)|var|int64
output = func_3264(var_3265,var_3266,)
func_3267 = relay.Function([var_3265,var_3266,], output)
mutated_mod['func_3267'] = func_3267
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3930 = relay.const([[[4.893805,-8.073682,8.863847],[-7.581203,6.849357,2.417815],[-4.942127,6.889135,-7.004430],[0.747918,-1.428851,2.020849],[-5.453807,4.744609,-9.532229],[-8.940701,3.464969,-9.799391],[0.502184,5.133313,-7.017703],[-5.038664,-8.492717,8.628170],[6.779000,5.603996,3.364704],[-2.519051,3.513558,8.932436],[-9.794568,-9.565823,-4.893631]],[[-8.851015,2.218098,0.141217],[-1.864547,-7.897358,6.735528],[6.266511,-2.727501,-9.952885],[-8.750691,-1.247844,-0.642683],[5.784477,9.526535,-6.896476],[-5.574765,-0.301556,-8.936877],[-3.061023,1.742002,6.853866],[-6.944848,7.662853,0.705316],[-6.688319,-5.199421,2.510617],[1.781740,5.170388,-1.618035],[-0.894147,0.068681,-7.999588]],[[-1.514532,-6.873847,5.195044],[-6.122427,6.778113,2.239635],[2.468619,-1.175519,-1.715150],[-6.524759,-9.157838,-5.532269],[1.613779,-3.172725,9.514989],[-4.748856,9.139945,4.187784],[-4.501117,-2.381661,6.105047],[-0.149358,-9.660034,-1.090183],[2.136744,-6.010126,6.813329],[-9.298080,4.459810,5.585273],[-0.116731,0.712303,-8.845970]],[[-4.111512,-6.704517,-6.246182],[-6.409994,6.789502,0.002236],[3.973260,-5.690808,7.830227],[7.876679,6.733900,-1.551343],[8.109656,-9.815026,-9.292715],[-2.092238,-5.589765,1.394800],[-7.495465,2.650293,-6.777753],[-5.230098,8.346028,1.932841],[-9.346847,8.817694,-4.168903],[-8.976651,-8.584291,-0.688689],[6.993646,6.332600,2.913942]],[[9.709043,7.792407,1.599053],[0.252583,7.181721,0.254785],[7.283570,9.565370,0.746082],[-6.979683,-6.018337,-4.551728],[7.837473,6.320136,2.641149],[-9.577128,-9.762400,-7.722910],[1.418429,0.004309,-2.897732],[-7.176186,-7.835975,-6.970994],[2.341621,1.926805,7.435755],[-8.307005,-6.849662,-9.775869],[-6.499000,-4.080397,-2.411387]],[[9.903845,-0.463805,-9.662507],[5.591414,9.679447,5.257614],[7.329991,-9.597018,-6.754327],[-2.564603,0.655624,-1.755237],[9.972117,-1.411618,6.541248],[-3.029106,-7.899080,-0.730454],[9.815545,6.790054,2.762201],[2.228676,8.780961,-7.365806],[7.935692,-8.534384,0.986753],[-5.192663,-5.563966,-4.404254],[6.355485,-8.700575,9.357307]],[[8.623053,-3.629380,3.336747],[3.969125,-4.852724,3.328117],[-5.517055,1.904747,7.655037],[6.661211,8.816976,-6.138861],[5.528229,-3.168422,2.111536],[-8.458993,7.380975,-3.423693],[9.786720,5.720938,-1.156827],[-3.807620,2.969934,-2.964226],[-0.862258,1.935136,3.922306],[7.407055,0.353111,-9.679251],[2.870681,0.097508,4.132162]],[[-7.868539,2.150793,-7.015904],[-1.455593,-9.342516,-9.945176],[-1.830696,-1.895968,6.045650],[2.321896,7.822623,-2.036507],[1.054162,-6.258342,-1.892820],[-1.112100,-9.517019,-6.967676],[-2.566342,5.427771,0.343582],[1.470466,-2.589294,4.825990],[2.994506,-1.784592,9.937167],[-3.444002,7.731319,-7.229330],[-6.238905,-2.800023,-8.423997]],[[7.935353,9.857623,-0.289720],[-1.804184,-4.111278,3.399901],[-1.853435,-1.426472,3.296184],[-8.113183,-2.769546,0.660749],[0.351471,-0.685459,-4.340945],[8.146932,7.945801,9.873918],[0.553735,1.334875,-7.603276],[3.453421,9.799010,-6.855565],[2.344257,-9.920340,-6.729011],[-4.421270,7.420420,9.589125],[-2.742217,0.086924,3.286553]],[[6.217670,-4.049352,-4.627687],[1.069714,-0.596133,6.395691],[-0.775739,2.956390,-4.975547],[-3.465216,3.615457,2.634634],[3.742503,3.116462,6.609529],[6.849336,3.716621,5.834179],[1.203922,6.944925,4.166675],[-2.673123,-5.559249,-6.065995],[7.078486,4.090708,-9.768449],[5.425977,-5.348364,-4.055543],[2.908160,-0.796542,-8.511289]],[[-6.094853,7.114290,1.210131],[-2.488832,-5.007654,0.813154],[5.183779,0.900254,8.116772],[-8.472057,7.599494,-3.762864],[-6.837340,-6.367279,-0.997546],[0.684320,-1.691006,0.660928],[3.429289,9.776263,-4.749076],[6.459430,6.748692,-1.588392],[-2.580445,1.510837,-9.201999],[-7.068818,6.387797,4.057667],[7.070420,-3.273550,2.668302]],[[4.436880,7.837830,-2.105008],[7.703334,6.257404,-4.440161],[7.884664,-0.227967,9.236443],[-2.741239,-1.609840,-0.156715],[-6.326002,-8.109577,9.121169],[-4.801844,-4.235230,6.956385],[1.566063,-6.011725,2.962236],[-8.821470,-6.642442,7.219679],[0.240341,4.215214,7.585893],[-8.099409,8.063329,-9.002985],[-3.810182,8.031703,-2.322437]],[[-7.785805,9.196242,-3.461989],[2.759978,3.938465,-8.700170],[5.476529,6.618200,0.148527],[-6.934158,-7.674526,-8.913928],[-6.100665,8.456682,5.936245],[-6.276610,6.459810,9.997439],[-3.298351,-7.560355,-5.250209],[-6.336944,9.148212,-3.854442],[-8.730883,-5.281842,-8.182148],[8.212394,9.782073,-3.904235],[-3.981524,-5.401505,-5.789768]],[[-0.605250,0.250229,-9.610532],[1.163115,0.627542,-1.614385],[2.291679,4.015426,9.973994],[-2.802865,-9.947934,1.869363],[-8.356729,-2.315114,5.730761],[-3.935827,0.305268,5.238482],[3.031044,3.659229,1.447867],[-6.417547,-0.148127,-7.160102],[7.565525,3.470640,-7.354552],[-9.920986,-7.641495,-4.396681],[3.907763,8.456956,-6.161199]],[[5.967942,2.087722,-0.551745],[-5.836549,6.520070,-4.821281],[3.921918,-4.966911,-3.289636],[8.485050,-7.239200,2.876572],[-3.937844,4.685250,2.304031],[-4.105231,-1.325361,5.918652],[-2.014193,5.142179,5.858133],[3.783571,-9.900015,4.129405],[-7.637744,1.849021,-1.282510],[2.763639,-2.757319,8.746339],[-7.979477,-5.305063,3.997733]],[[-9.943985,6.762593,-0.195350],[6.264559,9.825766,1.678887],[-6.919090,-0.042825,-8.717658],[-8.759305,3.528017,7.920263],[6.927263,-4.295990,-0.298855],[9.657142,7.555993,-8.967172],[9.389989,9.412100,9.267756],[2.425777,-8.274450,-9.786123],[2.032987,1.212805,6.081579],[3.155731,-0.807422,-8.618327],[4.071452,2.479828,-9.949486]]], dtype = "float32")#candidate|3930|(16, 11, 3)|const|float32
uop_3931 = relay.atan(const_3930.astype('float32')) # shape=(16, 11, 3)
uop_3935 = relay.cos(const_3930.astype('float64')) # shape=(16, 11, 3)
output = relay.Tuple([uop_3931,uop_3935,])
output2 = relay.Tuple([uop_3931,uop_3935,])
func_3941 = relay.Function([], output)
mod['func_3941'] = func_3941
mod = relay.transform.InferType()(mod)
output = func_3941()
func_3942 = relay.Function([], output)
mutated_mod['func_3942'] = func_3942
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4006 = relay.var("var_4006", dtype = "int16", shape = (5, 15, 13))#candidate|4006|(5, 15, 13)|var|int16
var_4007 = relay.var("var_4007", dtype = "int16", shape = (5, 15, 13))#candidate|4007|(5, 15, 13)|var|int16
bop_4008 = relay.not_equal(var_4006.astype('bool'), relay.reshape(var_4007.astype('bool'), relay.shape_of(var_4006))) # shape=(5, 15, 13)
func_2499_call = mod.get_global_var('func_2499')
func_2501_call = mutated_mod.get_global_var('func_2501')
const_4019 = relay.const([-3.352736,-9.818138,-8.646674,0.389058,9.366407,-3.244909,9.765309,-9.283014,-7.253577,-1.658720,1.393665,6.048335,5.294815,9.052974,-8.230615,5.861576,9.721190,-0.731768,8.346841,-1.482683,0.262135,-2.807724,-0.790110,-6.969789,-6.882307,-0.354183,3.995870,-7.614134,8.548562,8.180204,-8.272343,-9.499005,-4.571335,9.711220,9.802711,-4.891914,-0.579599,4.639798,0.577089,8.170461,2.948056,-7.534021,-9.115614,6.752753,-9.263741,9.163267,9.047723,-4.627662,-0.281868,9.618042,9.269645,0.055408,7.732683,4.960793,-9.582093,-8.991578,-1.122612,-3.801389,0.115658,-6.831839,-9.420230,-3.619562,-5.449810,-5.815409,-6.809517,-8.173333,0.354117,0.932017,-4.012079,-1.280020,1.869815,-5.065976,0.166437,-3.556894,9.810799,-5.784701,-8.966451,9.303989,6.803097,-1.982173,-8.707185,-9.217453,-8.250732,-7.941889,-7.893890,1.879680,6.329674,0.110490,0.171580,7.152622,3.337179,-3.430515,-7.610447,-0.956782,2.562003,9.834857,5.209226,-1.396292,5.604691,-7.304764,3.840184,9.315055,-9.376149,4.769619,8.829050,-2.342559,-0.114679,-0.756825,-5.306526,-0.250076,7.502799,4.834066,3.354428,-3.655429,-5.268212,-1.968457,0.648600,-8.427479,5.452132,9.342268,-1.039740,9.945502,-6.082790,7.190158,-9.214842,8.294386,1.393955,-5.738350,-9.747779,4.112972,5.011755,-8.447211,-3.096581,-9.670363,-3.184497,-2.146904,5.500606,6.107244,9.133635,0.786991,-8.520849,-7.889241,9.816428,1.180651,5.534591,7.039107,-1.416785,4.393923,-0.614167,-5.700089,5.030077,-8.214379,-8.810009,1.324061,-8.218349,9.567239,7.100614,8.709377,-1.863010,-3.631938,8.114822,7.540101,2.391566,-7.627992,-6.422880,-6.056113,6.088086,9.887315,-3.070130,-8.145911,2.741058,5.651823,4.258086,7.303717,5.299025,1.240300,4.012956,5.044448,-9.755269,6.924482,-4.926888,-7.747805,-4.471595,-5.376599,-8.476616,5.796395,-4.306406,-9.849899,4.586929,-7.676473,1.966821,-1.819925,-6.466071,2.015041,5.066249,6.698808,-1.786371,-6.779123,1.289714,3.727193,2.142253,1.471169,-3.711915,9.324266,-7.873780,-7.483171,8.978394,-7.475315,-0.280473,-7.951830,-9.449669,-8.402800,-4.239417,5.012780,5.217630,6.343243,-0.238364,-0.622110,6.398854,-3.357708,9.675311,8.880939,1.852042,-7.676427,-5.557276,-3.270965,5.681055,7.769524,9.561343,0.312755,-4.486799,0.785055,-5.427075,2.055279,1.768791,7.325942,-6.667884,1.728582,-7.143076,-4.933929,9.578224,-3.456236,0.804742,-7.033529,-7.782556,1.625010,-4.582295,9.186114,-2.599529,-7.608759,2.888237,5.421898,1.318109,0.627559,-8.557884,-3.685084,-5.786016,-0.016493,-6.512257,-8.527217,5.782221,8.702820,-3.668803,-9.407739,6.805326,-5.893360,-7.438015,5.503164,5.209687,5.691164], dtype = "float32")#candidate|4019|(270,)|const|float32
call_4018 = relay.TupleGetItem(func_2499_call(relay.reshape(const_4019.astype('float32'), [15, 2, 9])), 0)
call_4020 = relay.TupleGetItem(func_2501_call(relay.reshape(const_4019.astype('float32'), [15, 2, 9])), 0)
output = relay.Tuple([bop_4008,call_4018,const_4019,])
output2 = relay.Tuple([bop_4008,call_4020,const_4019,])
func_4025 = relay.Function([var_4006,var_4007,], output)
mod['func_4025'] = func_4025
mod = relay.transform.InferType()(mod)
mutated_mod['func_4025'] = func_4025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4025_call = mutated_mod.get_global_var('func_4025')
var_4027 = relay.var("var_4027", dtype = "int16", shape = (5, 15, 13))#candidate|4027|(5, 15, 13)|var|int16
var_4028 = relay.var("var_4028", dtype = "int16", shape = (5, 15, 13))#candidate|4028|(5, 15, 13)|var|int16
call_4026 = func_4025_call(var_4027,var_4028,)
output = call_4026
func_4029 = relay.Function([var_4027,var_4028,], output)
mutated_mod['func_4029'] = func_4029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_4063 = relay.TupleGetItem(func_3941_call(), 1)
call_4064 = relay.TupleGetItem(func_3942_call(), 1)
output = call_4063
output2 = call_4064
func_4084 = relay.Function([], output)
mod['func_4084'] = func_4084
mod = relay.transform.InferType()(mod)
output = func_4084()
func_4085 = relay.Function([], output)
mutated_mod['func_4085'] = func_4085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_4110 = func_4084_call()
call_4111 = func_4084_call()
func_1602_call = mod.get_global_var('func_1602')
func_1605_call = mutated_mod.get_global_var('func_1605')
const_4115 = relay.const([-7,-8,-4,7,-2,-2,5,5,-8,7,9,6,-9,-8,-10,-4,-3,-1,-1,4,1,2,2,9,4,-2,9,8,4,5,-4,-10,1,-7,-2,-6,9,-10,-7,-10,6,-5,-9,2,-8,7,4,-2,-1,-9,-2,-7,-7,9,-5,-5,3,5,-3,-7,-2,7,-6,-4,10,1,8,-10,-6,-9,9,1,5,6,-4,1,9,-3,8,3,9,-7,-3,-4,-7,-9,10,-10,9,5,9,7,-5,-5,8,-1,2,-7,-7,6,-7,-2,-7,2,-6,-7,-6,-5,7,-3,7,-5,2,-6,5,4,-6,-9,-9,-7,9,-2,-10,-5,4,-5,4,10,4,-6,7,-2,-8,-4,-3,2,6,-8,-8,7,-3,-2,4,4,9,10,-1,9,-5,-6,5,-4,-1,-1,-7,2,-1,-6,8,3,-1,-3,5,-2,4,-1,-6,-2,-7,-8,1,4,-6,-7,2,2,-4,6,9,-2,-5,-4,5,-10,10,7,-7,5,1,8,5,7], dtype = "uint16")#candidate|4115|(192,)|const|uint16
var_4116 = relay.var("var_4116", dtype = "uint16", shape = (1, 960))#candidate|4116|(1, 960)|var|uint16
call_4114 = func_1602_call(relay.reshape(const_4115.astype('uint16'), [16, 1, 12]), relay.reshape(var_4116.astype('uint16'), [16, 5, 12]), )
call_4117 = func_1602_call(relay.reshape(const_4115.astype('uint16'), [16, 1, 12]), relay.reshape(var_4116.astype('uint16'), [16, 5, 12]), )
func_1809_call = mod.get_global_var('func_1809')
func_1815_call = mutated_mod.get_global_var('func_1815')
var_4126 = relay.var("var_4126", dtype = "bool", shape = (320,))#candidate|4126|(320,)|var|bool
const_4127 = relay.const([[6.137718,-6.190030,8.980928,4.297540,-3.145512,6.331367,-6.607992,1.570426,9.490253,9.913172,0.878743,-9.307821,3.325968,-6.569700,7.657091,-4.665557,1.521398,1.153686,-2.382376,-8.545866,-9.856283,-8.948365,0.506663,-0.147405,-5.430755,8.997857,-8.963675,0.473630,6.421775,2.152539,9.329747,1.721483,1.493199,2.623390,9.483948,-6.505319,6.578245,0.546765,-7.615039,8.810548,5.544144,9.195141,-7.241763,7.967113,-5.529967,7.557407,8.480514,-3.707627,0.149076,-1.362106,1.945831,-9.595735,0.092160,6.043630,3.754238,-9.941425,3.906640,-8.329409,-1.726535,7.534204,0.551027,-7.628961,2.647755,7.050885,-1.948450,-2.195267,-2.007826,-3.577393,-5.114438,1.857391,8.326998,-3.010094,8.669568,-1.061876,0.811848,-9.312048,-2.723434,6.942600,0.267841,-8.591252,-8.387380,5.033265,6.289381,-9.268993,5.786980,-8.437639,-5.033170,9.819997,0.800362,2.189467,3.280573,9.109663,0.642928,-3.723530,8.524013,-7.532474,4.461430,-9.500894,-6.858712,-2.624002,2.141110,-4.556208,4.715251,3.269062,8.809995,6.460119,8.368982,0.780660,7.945679,3.391639,-0.303700,-3.375758,-6.656677,6.459056,-7.543037,-7.101728,-1.026633,5.923727,3.632435,-9.225796,2.606861,4.055993,9.190937,5.157477,-4.032901,2.208694,9.689649,-6.751634,6.426648,-5.926156,3.346615,4.128248,4.588030,-7.850925,3.996571,7.803829,-9.296931,0.180076,6.462876,2.170841,-5.230933,6.199621,-8.013285,6.568048,2.331221,6.723275,-2.410231,-1.000783,3.705791,-6.912487,3.205194,-7.715885,9.838602,3.383706,-5.827063,-2.826242,-8.252317,-9.807723,-2.974183,-7.081306,5.794755,-6.124230,-6.092834,9.081603,2.445429,-6.614577,-5.705091,0.924348,0.585067,-8.434460,5.324843,-8.137681,-4.593791,-6.427243,-4.670182,-9.623430,6.422956,7.254601,6.604563,6.693767,6.251889,-7.961946,-6.137325,4.312376,-4.536765,-7.888250,-6.362500,3.163228,4.778920,4.372636,-9.898352,-4.164256,6.561013,3.275745,-7.596345,5.635881,9.560760,8.132235,8.615578,9.877471,2.359585,8.058707,-0.642044,-1.403651,3.323830,5.954306,-0.217227,2.611717,3.130432,-2.984586,9.956353,0.533677,2.338947,3.261246,7.215247,3.617971,-2.921949,0.900508,5.309402,-8.831840,2.295254,1.036851,8.418910,6.070520,7.725246,9.828996,-6.824119,8.545763,0.142507,-6.852431,4.469622,6.443182,9.497407,-2.501808,8.978356,6.253592,-6.730589,-2.547308,9.335752,8.636935,7.601647,0.896258,7.371681,-0.532491,0.030452,-6.654541,-2.870718,-7.196807,-9.070659,-8.700256,-5.828307,-8.439175,-2.960091,-9.800853,4.908709,5.374782,-4.290529,-2.647413,4.768026,7.968262,2.358965,-2.441232,9.982836,9.649428,0.072945,1.168927,3.018336,0.341842,-7.988329,4.378260,4.110732,3.088160,-3.756045,0.051251,-6.100337,-5.231417,-6.160303,2.944477,-6.574895,9.291421,-2.704724,6.811996,0.541512,-6.793624,-9.974326,4.817934,-8.991753,-7.804297,-1.743748,-4.988919,-0.196999,-9.081141,4.426778,-7.904234,2.709426,-8.089304,4.062257,9.909729,-5.419559,-9.406675,-8.994741,-9.910699,-1.288275,0.924753,-4.130482,6.860324,-1.654719,-5.930730,8.013030,6.295017,-2.662796,5.770681,0.558299,-8.895794,-4.269808,6.112999,-7.634514,7.302758,-2.251515,2.688032,-2.957636,1.066520,1.423140,1.502918,-8.438597,1.902606,-4.153929,-2.477508,3.954118,3.327689,-3.479167,-6.992248,-6.690951,5.736879,-7.754232,9.512099,-3.216189,-5.727394,-8.126345,-5.894506,-2.214667,-0.587445,-7.799114,9.981444,8.529757,8.586331,7.910431,1.505724,3.765556,-8.287902,5.136820,8.517216,-7.056081,2.730989,8.840193,7.190100,9.553422,-3.248921,5.263234,-5.590718,-6.267340,-5.156441,4.400194,0.985392,-4.814259,1.041696,9.443279,1.744626,-9.403898,5.377749,2.024896,0.295684,-9.144464,-9.939140,4.151846,-9.321111,8.644344,1.299724,-2.195609,4.750107,-9.962400,6.932230,2.691935,2.928290,1.642217,6.086074,-4.462886,-8.479517,-1.872330,-7.074483,5.983259,8.219422,8.385395,4.859562,4.796343,-5.389805,3.590320,-7.617372,6.263340,-5.457933,-2.254014,7.451752,8.719801,5.290708,-9.469607,7.061670,-9.816758,-4.046550,-4.291754,-0.065255,0.458398,8.805721,-1.349920,6.918367,-2.297089,-5.731524,-0.836885,3.040162,7.302911,8.935891,-5.245851,3.192534,-9.572815,-2.313648,-6.048210,-6.576051,0.606572,-6.708463,0.259874,4.268622,-5.495929,-0.830176,8.173461,-9.767345,-1.320711,5.219288,-7.395716,-2.586811,-7.686307,1.736023,0.346710,-5.698929,-0.652539,-1.871864,5.901954,8.288895,5.815300,-9.389618,4.608071,-7.495966,-8.928579,-4.414694,-9.822019,4.835838,4.930238,3.874206,9.077899,5.901484,2.286266,2.790616,-6.308551,-7.579782,2.531728,-5.895868,3.393342,-1.062915,-9.622127,-2.212214,7.854986,-3.196905,7.144955,1.368329,3.382645,-1.822233,-3.004052,0.303084,-6.514265,1.212826,-4.128997,-7.783859,-3.262838,-6.633305,1.604084,3.510482,-9.311906,8.752121,-5.273956,-2.468045,1.218423,-8.357555,9.339188,-0.255072,1.885608,9.901756,-2.332671,9.188667,-9.105932,9.999508,-5.721259,1.891573,-9.690410,-1.654488,5.087983,2.849337,0.399805,9.975808,6.519535,-4.329515,1.554978,6.035610,5.450822,-3.145149,-6.592897,3.515472,-9.625893,1.516778,7.560457,8.511877,5.084208,-6.692401,-7.593909,9.515367,2.166614,-7.872996,3.364716,-5.373226,-4.635329,-4.846742,1.360134,-5.044500,-8.724793,-6.845629,8.156611,7.562430,-6.049236,-4.832627,1.916317,2.283940,7.182394,1.188893,0.712655,-5.181733,-9.341340,-1.199214,-6.364856,4.029632,-4.282104,8.431064,-9.057500,-0.621609,-4.902314,3.359058,-4.098667,-2.621691,6.485865,-5.579085,-5.840560,-0.500556,-2.101752,-7.134891,1.665650,8.812702,7.874945,-9.524305,7.694593,5.779496,6.710121,8.181621,7.756669,4.713374,3.459295,6.720859,-1.009962,-1.026905,-0.915493,-0.421124,2.012764,4.748323,-5.067186,-3.828624,5.056620,2.956514,-8.664187,-5.677341,-7.743007,-8.924175,-1.872773,6.568865,-4.710979,7.738827,-1.667576,-8.751942,1.801361,0.088795,0.983304,-4.559572,8.859985,0.381428,-4.654158,8.462627,-6.720726,3.951705,9.657281,6.688929,-3.920852,-6.106489,-6.370947,-1.606257,-9.119352,0.176545,3.589064,-4.624744,0.232818,5.234024,-4.934291,1.845736,-8.588228,3.211014,4.882778,0.969464,0.071580,7.908149,8.088407,3.347727,0.321610,3.882107,-4.116995,5.965307,-0.794059,-4.651190,8.182329,7.344810,-9.969412,4.159815,7.348040,2.359007,-4.777116,7.610000,6.509591,7.957926,0.577097,1.643768,3.743522,-3.103354,1.970214,-8.590082,-6.542496,6.082622,-4.701833,-4.843524,8.170012,-8.615136,-8.355535,8.662601,-2.803958,-4.925915,-4.915653,-1.663837,-7.900511,2.603918,8.693528,-4.414231,9.329181,-0.639471,-8.621259,3.993044,-0.209466,9.568377,2.407336,-2.457517,-9.878721,-9.836561,6.040731,-3.318199,6.649305,7.370679,3.016183,-3.655458,9.071220,-0.671789,3.618628,-3.159533,0.942440,1.504829,-5.333428,-1.242931,-2.613404,8.102623,3.969085,-4.487951,1.835620,6.855906,7.595311,2.905884,-3.618050,0.667259,-5.249915,-5.235713,0.229243,-0.627098,8.648830,-5.639693,8.434854,2.449218,8.824946,1.178139,-4.425104,9.156312,-7.927383,-4.983057,-1.044242,4.361291,4.006154,-9.960247,9.801561,2.793379,-1.578735,-4.206873,3.689300,-0.037295,6.647611,-2.725733,5.153123,-9.294922,-4.144440,-1.595707,-2.857166,4.503757,5.534181,-6.238546,6.493838,-6.003690,-1.586166,5.616867,-1.162322,-9.585264,-9.416532,5.917699,8.155592,1.439290,6.712993,-4.357288,0.253135,7.168082,-1.963392,6.873258,5.929569,1.069323,8.479073,-5.752588,-8.497563,1.466834,0.320679,-5.102848,-0.499866,-4.238454,-1.470063,6.808494,8.686402,-7.721827,7.058497,2.266097,3.360285,-4.201432,8.699585,4.923959,1.945740,-0.732785,9.874412,6.212042,5.232467,4.439182,8.636637,2.339441,-9.857450,-0.359304,-3.146660,-4.406833,-5.093218,-0.710088,3.111428,2.093240,-3.624157,0.969362,8.342752,-2.476095,5.554846,-2.063077,-6.238719,1.173224,0.307610,-4.835725,6.516458,-3.019047,6.768801,8.411866,-8.090833,-5.365850,2.843112,-4.256388,-4.997915,4.314179,2.639044,-6.503996,4.419927,-9.534335,0.240626,-0.395574,4.877033,-5.113419,4.217926,-9.061112,6.606174,7.961798,-1.233740,9.277626,-4.294526,-4.764992,-8.519153,7.594759,-0.338582,-4.870811,9.617796,-4.373116,1.586472,1.307000,8.115025,-1.220646,-5.888589,0.553207,-2.660392,-6.444154,9.949983,-6.459183,2.519908,3.553810,4.018109,-8.465041,6.700511,0.592104,2.887043,8.471094,-8.296157,6.878579,9.675828,-0.945735,7.761772,-9.280705,8.562158,-9.712337,8.573845,2.418468,-3.361298,8.082482,-4.210189,-8.347545,8.515925,-1.833426,-6.447066,1.698886,-4.019104,0.720574,-6.089193,-4.374909,-1.865204,-1.444456,7.120863,-8.158873,7.382960,4.372584,-8.602406,-6.397069,8.497951,-9.530483,-0.135866,-3.271316,9.863907,7.454805,2.229699,6.503707,-6.353906,0.589128,1.519459,5.240909,8.135624,6.871011,3.306039,-8.875562,-4.072113,-3.888734,-4.742803,-5.090118,-0.964807,3.870407,8.216361,6.091648,-0.275673,5.757403,-1.199597,3.405507,1.798869,1.183090,-1.778798,-6.595405,-8.578662,9.847286,5.968674,-3.647812,5.398370,7.102177,8.870059,2.541073,-7.048010,6.633771,3.892243,-9.564497,1.339605,7.616746,5.707669,3.388755,-8.397884,-9.305690,-9.840289,6.061042]], dtype = "float64")#candidate|4127|(1, 924)|const|float64
var_4128 = relay.var("var_4128", dtype = "float32", shape = (832,))#candidate|4128|(832,)|var|float32
const_4129 = relay.const([-1,4,7,-8,-1,-6,-7,-10,-10,5,-7,-9,-5,1,1,10,3,4,9,6,9,6,6,-6,-3,8,-9,-2,-1,8,9,6,3,1,-1,9,1,-5,-3,3,-6,-5,7,9,-4,-10,6,-2,-7,8,2,-10,-3,1,-10,2,-5,-2,8,-2,8,-3,9,3,10,6,9,6,2,9,-10,-7,2,9,1,-2,5,-5,-1,-2,10,-5,-5,4,-6,9,-6,3,8,-7,5,-9,-5,7,-3,-8,-1,5,-2,3,-9,-6,-3,-2], dtype = "int32")#candidate|4129|(104,)|const|int32
call_4125 = relay.TupleGetItem(func_1809_call(relay.reshape(var_4126.astype('bool'), [16, 4, 5]), relay.reshape(const_4127.astype('float64'), [924,]), relay.reshape(var_4128.astype('float32'), [832,]), relay.reshape(const_4129.astype('int32'), [104,]), ), 4)
call_4130 = relay.TupleGetItem(func_1815_call(relay.reshape(var_4126.astype('bool'), [16, 4, 5]), relay.reshape(const_4127.astype('float64'), [924,]), relay.reshape(var_4128.astype('float32'), [832,]), relay.reshape(const_4129.astype('int32'), [104,]), ), 4)
func_3264_call = mod.get_global_var('func_3264')
func_3267_call = mutated_mod.get_global_var('func_3267')
const_4152 = relay.const(-6, dtype = "int64")#candidate|4152|()|const|int64
const_4153 = relay.const([4,-6,6,-9,-1,3,-1,-8,8,-3,9,-2,9,-4,9,-7,-7,-1,10,8,-2,-5,-8,10,-1,2,7,2,-4,-3,10,-5,-3,-1,-8,-6,10,3,-4,-3,-8,-9,-9,-10,-5,-7,3,5,-8,-10,-5,-7,6,4,-5,-7,4,-5,-6,7,10,-8,5,8,10,-2,-4,2,10,-2,-3,-7,6,9,9,-3,1,9,-7,-1,-6,-1,-3,10,9,10,2,8,-9,10,-4,-6,-8,-2,3,9,-8,10,3,7,-2,5,-4,4,1,-3,10,-1,4,1,-7,-7,-3,6,-8,2,-2,6,10,-1,-3,-6,-4,1,-10,-5,5,2,10,-7,-5,-8,4,4,3,2,2,9,5,-1,-2,-2,10,-6,3,9,-10,4,-3,7,6,2,-1,1,10,-3,-10,-9,10,-3,9,-1,-10,-5,3,-7,-5,-6,-9,-2,-1,-3,-9,-3,10,-2,-9,7,7,-2,-8,-9,9,9,4,-9,6,10,-4,4,1,2,8,7,3,-6,-10,4,-4,-7,4,-5,-8,6,8,-8,8,6,1,-1,-5,-7,-6,4,4,10,7,-6,10,7,-4,6,-4,5,-10,-10,-5,-1,8,3,-7,7,8,-7,7,-6,-8,2,9,-5,-6,-3,2,4,-9,1,9,8,-3,-6,8,1,6,-7,-1,-1,9,-7,-10,-2,-9,-5,-1,8,7,-2,5,10,-7,6,9,-4,-5,-9,4,-4,-4,-3,-9,7,-4,2,4,-1,-8,8,6,6,-5,-6,8,-3,-6,-5,7,2,3,-1,5,8,10,-1,-10,-8,3,3,2,4,-4,7,-1,5,3,10,9,-1,8,5,-10,2,-7,-7,-2,-8,-9,10,-4,-3,10,-4,3,-7,-7,8,5,3,6,-10,-10,-7,-3,-1,9,-3,7,-7,3,3,6,9,1,5,3,-8,-6,-4,-1,8,-8,2,-8,-8,-4,-3,4,4,-4,-5,-4,10,9,1,-8,3,-1,3,-3,-2,-4,9,-7,-3,4,5,-2,-10,-10,4,-9,4,-1,1,8,5,8,-9,-9,-3,-10,-10,7,7,10,-5,-8,1,6,7,3,7,6,-6,8,-5,-2,-3,5,-4,1,6,-8,1,6,9,10,5,-10,10,-2,8,-9,1,-3,1,-6,-3,3,-10,2,10,-3,-9,-6,5,-3,10,-6,-10,-7,2,7,10,1,-8,-9,-8,-5,-7,5,9,-5,-2,1,1,-2,-3,-2,6,3,8,-4,4,3,-8,-3,6,5,2,-1,-4,-8,3,-10,-3,3,-2,-8,-4,-10,-7,1,-5,-5,-2,10,3,-3,-5,-5,5,-10,5,-5,-6,5,-8,-1,1,-7,-4,9,4,4,-4,-10,7,5,-5,-4,5,-6,-4,-5,-5,-9,1,8,1,-7,-1,5,-4,-9,-1,1,2,1,6,-2,10,10,3,-1,10,-1,-4,6,-7,8,-9,5,6,-7,4,1,-5,9,1,-2,5,-9,-10,-8,3,6,-5,-3,-9,-3,-2,-8,9,4,-5,-8,-2,1,3,8,3,8,-2,-1,3,-3,10,1,9,7,4,6,4,5,-7,5,-4,10,-6,-1,4,-4,-7,4,-4,10,8,-3,5,4,-2,6,4,6,-6,10,10,6,1,-3,-3,-3,1,5,-6,2,8,4,3,-3,-4,10,-7,1,-8,-2,-7,4,-3,-8,10,6,5,9,9,-8,4,-9,4,-8,-4,5,-9,3,-10,10,-10,-7,4,4,9,-8,-8,4,7,-6,4,2,2,5,6,-1,2,3,5,1,9,-7,-4,-1,-2,-2,10,-2,-1,4,2,6,-5,-10,-8,4,-10,-6,-1,5,-6,2,3,10,-10,-1,-2,-4,10,7,7,-5,2,1,-10,7,-3,6,2,10,-2,4,-10,3,4,-7,-1,8,-6,7,5,-4,2,4,5,7,5,-3,10,4,-8,-7,-5,-2,-3,-9,-4,5,-2,-1,-3,6,10,2,9,-7,6,6,8,4,-9,-10,-5,-9,5,4,10,5,-3,-3,-10,-7,-4,-10,3,6,7,4,-2,-9,-7,-7,4,9,7,-8,-4,-5,-10,-5,-1,6,8,1,7,8,-4,-10,-5,6,5,-10,2,9,2,-6,4,4,4,-1,7,4,4,-10,7,2,-1,-10,8,7,-1,5,-7,-7,-4,1,-10,1,-10,-5,-8,-6,-7,-5,6,-5,5,2,6,-2,-10,2,-7,-3,5,-4,3,5,8,5,10,-1,-9,-6,6,7,-10,-3,-3,3,-4,-2,-7,-9,7,-9,5,5,-6,-10,8,6,6,6,-8,9,6,-9,10,-7,1,5,7,9,-10,6,8,-7,-3,-4,-2,1,4,-2,-7,1,-7,5,6,-7,-4,-4,5,5,-4,7,3,3,-1,4,-4,-5,3,4,3,-6,4,-7,3,5,4,3,-3,7,-1,-1,5,-5,7,8,1,-6,7,-2,-9,10,-2,-3,1,-10,-2,-1,-6,-7,-8,-4,10,3,-5,-10,5,-10,-4,1,-4,2,-1,-2,9,-1,-4,-5,-5,2,5,-6,1,-7,-10,2,9,-9,7,9,-1,-5,7,9,-10,2,4,-6,-6,2,1,-10,-8,-3,10,-2,-4,6,-7,-1,-8,2,5,-7,-1,6,2,2,-5,-4,-7,-6,3,2,6,9,-8,-4,-1], dtype = "int64")#candidate|4153|(1008,)|const|int64
call_4151 = relay.TupleGetItem(func_3264_call(relay.reshape(const_4152.astype('int64'), []), relay.reshape(const_4153.astype('int64'), [9, 14, 8]), ), 1)
call_4154 = relay.TupleGetItem(func_3267_call(relay.reshape(const_4152.astype('int64'), []), relay.reshape(const_4153.astype('int64'), [9, 14, 8]), ), 1)
func_1377_call = mod.get_global_var('func_1377')
func_1380_call = mutated_mod.get_global_var('func_1380')
const_4160 = relay.const([-8.057404,-3.834787,7.560138,-0.778657,1.900661,-3.694537,-5.830655,-4.523782,6.353027,-4.810380,-4.065837,6.702991,-5.633704,1.860077,8.854927,-6.727351,9.110748,-3.272009,-0.842990,3.970906,-5.135868,1.011192,0.044748,2.464267,-5.564696,-9.014501,-4.060905,6.968605,-3.163529,-3.896664,3.106707,5.642176,2.263680,9.259183,-3.080526,8.709602,5.357648,8.664738,-4.595605,1.975690,-8.906300,9.109387,9.537037,-9.128335,-0.493068,0.530395,4.591397,-8.069965,-7.618486,-7.831672,-1.791759,4.036160,7.863081,3.873060,9.326045,-7.654807,-7.701233,-4.619694,-2.518627,6.271516,-0.588818,2.739182,-0.396656,-5.932139,1.497990,0.584266,4.861080,4.987566,-7.065073,-6.538372,0.924687,4.316300,0.583946,0.427660,-9.457925,-7.714704,-0.868804,2.535091,2.408235,7.087632,-2.750990,0.526839,-3.010407,-9.233621,0.251022,-5.422271,-4.128140,-8.914913,-7.643496,5.592338,4.122990,0.599700,4.815106,-9.442268,-8.307080,-2.161074,-8.472894,-0.013366,-6.346779,9.327544,-6.787431,6.963522,-6.499038,-4.487770,4.859195,5.838822,7.795945,-6.557348,3.228649,1.220961,4.969797,1.861231,8.824551,-6.267641,-0.570297,4.699996,1.929829,6.094949,9.131168,-0.536259,-0.105779,8.194697,-4.579135,-5.232716,-3.599485,-2.397593,1.127681,4.921560,5.782254,2.350609,-5.057076,-8.133955,4.775665,0.371087,1.191489,6.344765,2.439022,8.662631,3.849851,-0.737699,-7.929464,1.663990,-7.805858,-4.052437,-1.820271,6.081546,2.584874,-0.004957,-2.833929,8.805921,-3.538416,9.994997,8.406163,6.264522,-7.274450,-9.330440,-6.689682,4.872132,-1.691331,3.094681,9.271800,2.500949,-1.113936,1.042572,7.818907,5.735441,6.797441,-8.864728,6.754292,1.571609,0.965333,-1.026386,0.575365,-7.701177,-6.451337,-4.920834,-4.045382,-2.793812,-4.649810,5.047963,-7.476240,3.727263,4.189310,-1.880719,5.165163,7.211857,6.055152,3.980572,4.002175,-2.467582,5.742567,5.848125,7.596049,-7.671619,9.826678,9.587429,-6.935377,2.795072,-2.847702,5.211422,-1.850024,-2.004535,-9.246340,-9.942847,1.689279,8.823096,-2.027852,8.494836,-0.870561,8.735176,1.550453,0.856502,5.611271,-7.686308,-5.725611,0.758639,-7.620871,-8.689069,6.209666,-0.854575,-7.704245,5.376350,-4.368182,-8.387202,8.010315,-5.815705,-5.380959,-5.076574,-0.547033,-3.437007,-1.892929,3.051399,6.858733,-2.624923,6.579123,-2.625056,-0.578812,-6.204521,-2.647587,-7.598072,-0.976616,-4.706817,-4.511077,-2.523487,1.515626,-3.155217,-1.703790,-2.111446,3.463931,7.965982,2.546073,-0.835118,7.684470,-9.935509,8.491854,7.008042,0.636705,8.043909,5.541981,2.427151,-4.008353,-4.923919,7.176944,-4.654077,1.003541,9.513738,6.304934,2.293991,-2.121449,-4.930007,-3.674621,3.707663,-7.401166,7.410976,-7.095500,-6.434885,-2.025813,-1.841393,-4.433377,6.169566,-8.562908,-5.909372,-9.876545,-5.507366,-8.405999,8.113282,1.261148,-8.889510,8.902753,6.673108,-8.798474,-4.276986,-1.021321,6.776193,0.949629,1.514087,4.018287,-0.406167,9.637973,0.501325,1.611467,-2.793710,8.067214,-9.589646,-6.113379,2.308260,-2.176248,-0.848438], dtype = "float32")#candidate|4160|(308,)|const|float32
call_4159 = func_1377_call(relay.reshape(const_4160.astype('float32'), [11, 7, 4]))
call_4161 = func_1377_call(relay.reshape(const_4160.astype('float32'), [11, 7, 4]))
func_3264_call = mod.get_global_var('func_3264')
func_3267_call = mutated_mod.get_global_var('func_3267')
call_4167 = relay.TupleGetItem(func_3264_call(relay.reshape(const_4152.astype('int64'), []), relay.reshape(const_4153.astype('int64'), [9, 14, 8]), ), 3)
call_4168 = relay.TupleGetItem(func_3267_call(relay.reshape(const_4152.astype('int64'), []), relay.reshape(const_4153.astype('int64'), [9, 14, 8]), ), 3)
output = relay.Tuple([call_4110,call_4114,const_4115,var_4116,call_4125,var_4126,const_4127,var_4128,const_4129,call_4151,const_4152,const_4153,call_4159,const_4160,call_4167,])
output2 = relay.Tuple([call_4111,call_4117,const_4115,var_4116,call_4130,var_4126,const_4127,var_4128,const_4129,call_4154,const_4152,const_4153,call_4161,const_4160,call_4168,])
func_4171 = relay.Function([var_4116,var_4126,var_4128,], output)
mod['func_4171'] = func_4171
mod = relay.transform.InferType()(mod)
mutated_mod['func_4171'] = func_4171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4171_call = mutated_mod.get_global_var('func_4171')
var_4173 = relay.var("var_4173", dtype = "uint16", shape = (1, 960))#candidate|4173|(1, 960)|var|uint16
var_4174 = relay.var("var_4174", dtype = "bool", shape = (320,))#candidate|4174|(320,)|var|bool
var_4175 = relay.var("var_4175", dtype = "float32", shape = (832,))#candidate|4175|(832,)|var|float32
call_4172 = func_4171_call(var_4173,var_4174,var_4175,)
output = call_4172
func_4176 = relay.Function([var_4173,var_4174,var_4175,], output)
mutated_mod['func_4176'] = func_4176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_4186 = relay.TupleGetItem(func_3941_call(), 1)
call_4187 = relay.TupleGetItem(func_3942_call(), 1)
output = call_4186
output2 = call_4187
func_4205 = relay.Function([], output)
mod['func_4205'] = func_4205
mod = relay.transform.InferType()(mod)
mutated_mod['func_4205'] = func_4205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mutated_mod.get_global_var('func_4205')
call_4206 = func_4205_call()
output = call_4206
func_4207 = relay.Function([], output)
mutated_mod['func_4207'] = func_4207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_4221 = relay.TupleGetItem(func_3941_call(), 0)
call_4222 = relay.TupleGetItem(func_3942_call(), 0)
output = relay.Tuple([call_4221,])
output2 = relay.Tuple([call_4222,])
func_4231 = relay.Function([], output)
mod['func_4231'] = func_4231
mod = relay.transform.InferType()(mod)
mutated_mod['func_4231'] = func_4231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4231_call = mutated_mod.get_global_var('func_4231')
call_4232 = func_4231_call()
output = call_4232
func_4233 = relay.Function([], output)
mutated_mod['func_4233'] = func_4233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_4274 = relay.TupleGetItem(func_3941_call(), 0)
call_4275 = relay.TupleGetItem(func_3942_call(), 0)
func_958_call = mod.get_global_var('func_958')
func_961_call = mutated_mod.get_global_var('func_961')
const_4295 = relay.const([False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False], dtype = "bool")#candidate|4295|(30,)|const|bool
var_4296 = relay.var("var_4296", dtype = "bool", shape = (60,))#candidate|4296|(60,)|var|bool
call_4294 = relay.TupleGetItem(func_958_call(relay.reshape(const_4295.astype('bool'), [3, 1, 10]), relay.reshape(var_4296.astype('bool'), [3, 2, 10]), ), 0)
call_4297 = relay.TupleGetItem(func_961_call(relay.reshape(const_4295.astype('bool'), [3, 1, 10]), relay.reshape(var_4296.astype('bool'), [3, 2, 10]), ), 0)
output = relay.Tuple([call_4274,call_4294,const_4295,var_4296,])
output2 = relay.Tuple([call_4275,call_4297,const_4295,var_4296,])
func_4307 = relay.Function([var_4296,], output)
mod['func_4307'] = func_4307
mod = relay.transform.InferType()(mod)
var_4308 = relay.var("var_4308", dtype = "bool", shape = (60,))#candidate|4308|(60,)|var|bool
output = func_4307(var_4308)
func_4309 = relay.Function([var_4308], output)
mutated_mod['func_4309'] = func_4309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_4346 = func_4205_call()
call_4347 = func_4205_call()
output = relay.Tuple([call_4346,])
output2 = relay.Tuple([call_4347,])
func_4352 = relay.Function([], output)
mod['func_4352'] = func_4352
mod = relay.transform.InferType()(mod)
mutated_mod['func_4352'] = func_4352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4352_call = mutated_mod.get_global_var('func_4352')
call_4353 = func_4352_call()
output = call_4353
func_4354 = relay.Function([], output)
mutated_mod['func_4354'] = func_4354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_4366 = relay.TupleGetItem(func_3941_call(), 0)
call_4367 = relay.TupleGetItem(func_3942_call(), 0)
output = relay.Tuple([call_4366,])
output2 = relay.Tuple([call_4367,])
func_4389 = relay.Function([], output)
mod['func_4389'] = func_4389
mod = relay.transform.InferType()(mod)
mutated_mod['func_4389'] = func_4389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4389_call = mutated_mod.get_global_var('func_4389')
call_4390 = func_4389_call()
output = call_4390
func_4391 = relay.Function([], output)
mutated_mod['func_4391'] = func_4391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_4421 = relay.TupleGetItem(func_3941_call(), 1)
call_4422 = relay.TupleGetItem(func_3942_call(), 1)
uop_4441 = relay.sinh(call_4421.astype('float32')) # shape=(16, 11, 3)
uop_4443 = relay.sinh(call_4422.astype('float32')) # shape=(16, 11, 3)
var_4445 = relay.var("var_4445", dtype = "float32", shape = (16, 11, 3))#candidate|4445|(16, 11, 3)|var|float32
bop_4446 = relay.less_equal(uop_4441.astype('bool'), relay.reshape(var_4445.astype('bool'), relay.shape_of(uop_4441))) # shape=(16, 11, 3)
bop_4449 = relay.less_equal(uop_4443.astype('bool'), relay.reshape(var_4445.astype('bool'), relay.shape_of(uop_4443))) # shape=(16, 11, 3)
func_2254_call = mod.get_global_var('func_2254')
func_2256_call = mutated_mod.get_global_var('func_2256')
var_4451 = relay.var("var_4451", dtype = "uint8", shape = (588,))#candidate|4451|(588,)|var|uint8
call_4450 = relay.TupleGetItem(func_2254_call(relay.reshape(var_4451.astype('uint8'), [14, 14, 3])), 0)
call_4452 = relay.TupleGetItem(func_2256_call(relay.reshape(var_4451.astype('uint8'), [14, 14, 3])), 0)
const_4454 = relay.const([[[-1.772314,6.840577,-8.161098],[-9.321024,9.131194,1.952575],[6.745786,0.358504,-4.867689],[4.327217,-7.430869,9.117386],[6.933119,-8.540427,5.555379],[-7.820467,-3.299037,-9.313196],[7.485724,-7.340960,5.289584],[6.321851,-2.563240,-9.139925],[-7.334225,-0.698827,-4.572093],[5.244604,9.859586,-1.590806],[1.559241,-8.572024,-3.106347]],[[-7.850169,2.313399,-1.414662],[-0.463448,4.964326,-5.174636],[-9.149453,-9.398522,6.722166],[-7.303748,-8.705915,-8.581621],[6.970419,7.886729,-0.394463],[-4.106700,4.109340,8.222920],[-3.979618,9.035963,7.922049],[-3.376289,-5.904821,-4.286286],[4.427333,-3.765375,-2.009477],[-3.907627,0.988531,3.799327],[6.129010,-9.350987,-8.868516]],[[-4.518102,-4.620453,-6.143352],[2.964859,2.090106,6.487510],[-2.634085,-2.280264,-0.869384],[9.917915,-5.288575,2.261930],[-3.433230,-7.011592,9.914593],[1.970626,2.610328,-1.656257],[1.229288,-3.738155,5.555338],[-3.575021,7.390799,7.265174],[-5.277280,-5.046380,7.332964],[-6.263238,7.020199,-9.007417],[9.640835,-1.596677,4.204948]],[[7.885115,0.360885,2.788968],[0.407732,-0.322027,3.747318],[0.238630,-3.527497,-4.587345],[9.901977,-5.327666,7.412110],[8.507439,-0.100480,-4.872421],[-4.238672,-1.627400,5.009852],[2.556430,5.538675,7.668446],[5.451123,-4.648059,0.388362],[1.890976,-6.474161,3.167147],[-0.536645,-6.228965,-9.146572],[4.835884,-4.760143,-6.743134]],[[7.727442,6.164783,3.722756],[7.074683,1.634297,4.586872],[7.277720,4.154699,-7.080671],[6.489255,5.224300,3.426680],[-9.511021,4.580189,-8.438822],[6.523127,4.881120,-9.747609],[5.602004,3.281690,-0.763699],[9.823026,5.993247,1.626852],[8.524907,-3.062841,-9.901907],[2.145409,-3.554526,-0.424578],[-2.700769,2.637051,-9.012449]],[[9.109021,2.868091,-8.242991],[5.439965,2.263629,-5.460496],[-0.064616,-9.837177,-5.641350],[-3.497027,1.587776,-2.213627],[8.213248,0.830399,-4.089495],[-4.272260,-2.429295,-6.994128],[8.613078,-0.413739,-3.845858],[7.273654,6.103995,-4.138225],[4.717866,6.585936,1.251785],[-6.773727,-1.805275,0.311960],[8.616095,-3.437033,-3.195885]],[[-3.948844,-4.110641,-9.516965],[8.783737,4.717841,0.219999],[-6.472115,-9.473285,-0.030597],[-0.568797,-7.260369,-4.655867],[5.689865,-2.558176,5.660456],[1.473266,-0.204094,0.125452],[-6.048381,9.509391,8.774480],[4.871639,7.244508,5.898564],[-2.624192,-9.395356,-1.429849],[-8.321623,-2.787502,-9.879213],[5.272269,3.850084,4.723662]],[[9.568970,0.689393,-8.512764],[4.184157,-6.146594,8.374000],[-5.132300,8.950168,7.095265],[-2.891905,-5.964752,-7.163281],[-8.130782,-7.983878,2.874345],[-2.724388,6.420210,7.282328],[-2.432005,-3.552231,1.341130],[-3.795165,8.708250,-6.724340],[-2.902715,-2.018623,1.865871],[4.229759,0.091336,4.048805],[5.141444,6.612379,0.799111]],[[-5.998535,9.310558,5.382690],[2.291803,9.368404,7.086158],[8.647803,-3.845175,-6.925465],[-2.581663,5.589215,6.167176],[-8.912738,8.000063,-7.885691],[6.380446,-1.865394,6.742451],[5.749594,-0.272965,9.531737],[4.952419,7.111817,-1.468217],[9.764568,4.441608,-9.496633],[-7.180722,5.599760,-8.767314],[-6.378950,2.956525,8.400382]],[[-8.974635,6.280688,0.948427],[1.427107,2.902890,-5.850579],[-6.609014,-5.215994,-7.795833],[1.705188,0.652495,-1.647994],[-3.330653,1.101119,-1.759179],[-4.498052,-8.695897,9.438570],[-8.988825,-8.214420,3.070910],[9.366145,-8.699648,8.966809],[6.500869,8.424845,3.183919],[-8.673910,2.121097,0.657130],[-8.323221,-5.008480,6.916596]],[[-9.099464,-7.015223,4.495012],[9.743425,-1.686635,-7.228280],[7.712332,-0.106105,9.653823],[-3.103984,1.138160,5.810480],[1.300195,-5.983599,-6.612812],[6.509862,6.950017,0.974580],[2.066140,7.929480,8.276051],[7.999159,9.064794,8.652127],[-8.327940,9.688721,4.800025],[-6.786945,-5.619387,1.191843],[5.680598,-1.258344,-5.229033]],[[1.200111,-0.576923,0.319344],[7.468368,-5.540692,-8.479418],[1.942430,-5.368580,-4.284545],[3.785168,-1.913719,3.384372],[0.060928,6.529676,3.822427],[1.193782,0.536114,-8.388460],[4.327634,-8.005464,-1.382095],[-7.685408,8.759964,-8.044608],[-2.390340,-0.250932,-1.287078],[-5.804261,-0.673443,5.484640],[-7.901137,1.215920,-6.822522]],[[-0.398138,0.869257,-0.607676],[-7.631201,1.764570,6.153220],[4.930172,5.174843,-8.087822],[-6.098104,6.915915,-7.902124],[-9.998863,-4.134007,2.896096],[4.635587,-2.904728,-7.239402],[0.710802,5.790269,-7.113002],[-7.276115,6.222551,4.213898],[5.380514,-1.555881,0.268170],[5.704416,1.477818,1.231243],[4.200894,3.843685,4.034976]],[[-5.717764,-2.110402,1.886850],[-2.640530,-7.310789,7.374089],[5.057017,5.542246,-0.940143],[1.360069,1.511412,1.103352],[1.020246,6.232246,-3.125363],[-8.508836,6.510860,5.009597],[4.423600,7.513531,9.147100],[2.987633,8.267004,-0.774094],[7.591060,-7.399376,1.402391],[1.285245,-9.386893,6.639879],[7.834477,6.116055,-6.286896]],[[0.117614,-9.035293,0.123515],[-5.013461,-6.238718,-5.535379],[2.807669,-5.341844,-1.693230],[6.651337,-7.433710,-8.957141],[-8.694009,3.668744,6.195419],[-3.045585,9.204497,1.735659],[-7.574352,-5.508254,6.663340],[-2.294988,-9.975381,-0.615672],[-1.196644,3.301910,7.324158],[-6.071424,1.929405,7.277838],[8.775419,-6.439325,-4.237674]],[[6.762617,8.456593,-0.726757],[-3.599791,6.952956,6.275281],[1.434947,0.325382,5.806938],[8.432456,-8.812159,7.193207],[4.997382,-8.443712,-2.379128],[7.088454,1.458918,3.477339],[6.958827,-4.205975,-6.703632],[5.333094,3.260694,-7.133391],[4.525095,-4.964717,7.975175],[-5.490352,-5.459670,-3.945425],[0.215935,1.801740,-1.494562]]], dtype = "float32")#candidate|4454|(16, 11, 3)|const|float32
bop_4455 = relay.equal(uop_4441.astype('bool'), relay.reshape(const_4454.astype('bool'), relay.shape_of(uop_4441))) # shape=(16, 11, 3)
bop_4458 = relay.equal(uop_4443.astype('bool'), relay.reshape(const_4454.astype('bool'), relay.shape_of(uop_4443))) # shape=(16, 11, 3)
uop_4464 = relay.sigmoid(bop_4455.astype('float64')) # shape=(16, 11, 3)
uop_4466 = relay.sigmoid(bop_4458.astype('float64')) # shape=(16, 11, 3)
output = relay.Tuple([bop_4446,call_4450,var_4451,uop_4464,])
output2 = relay.Tuple([bop_4449,call_4452,var_4451,uop_4466,])
func_4478 = relay.Function([var_4445,var_4451,], output)
mod['func_4478'] = func_4478
mod = relay.transform.InferType()(mod)
var_4479 = relay.var("var_4479", dtype = "float32", shape = (16, 11, 3))#candidate|4479|(16, 11, 3)|var|float32
var_4480 = relay.var("var_4480", dtype = "uint8", shape = (588,))#candidate|4480|(588,)|var|uint8
output = func_4478(var_4479,var_4480,)
func_4481 = relay.Function([var_4479,var_4480,], output)
mutated_mod['func_4481'] = func_4481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_4507 = func_4084_call()
call_4508 = func_4084_call()
func_1602_call = mod.get_global_var('func_1602')
func_1605_call = mutated_mod.get_global_var('func_1605')
const_4510 = relay.const([-1,-5,-7,-9,10,8,2,8,-4,8,-6,6,3,-4,-4,-6,-6,-3,-9,3,-2,-3,-10,-2,9,-8,2,-2,7,6,4,6,4,4,4,3,10,-10,6,-3,-2,9,-4,9,-10,3,-8,6,8,5,7,8,5,-8,-2,5,3,-7,6,10,-10,10,4,8,-3,-6,3,10,3,-9,2,-8,10,3,9,2,8,5,-7,6,8,-2,5,10,-3,-3,-5,-9,-6,10,8,7,1,10,7,-8,9,9,-6,-1,8,-4,-7,-7,-9,-2,-9,5,-1,8,2,-4,-9,-4,-1,-4,3,3,2,6,-9,8,-5,5,-9,-5,-2,3,-3,-4,4,-3,-5,10,8,-9,-2,2,10,-7,-4,-2,-1,-6,4,9,10,-6,2,-2,-1,7,8,5,1,-8,4,1,-7,-2,-9,-8,4,-3,1,7,6,7,5,3,4,3,1,3,-3,8,5,2,-1,6,-10,-6,-8,2,7,-1,5,10,10,-6,10,6], dtype = "uint16")#candidate|4510|(192,)|const|uint16
var_4511 = relay.var("var_4511", dtype = "uint16", shape = (960,))#candidate|4511|(960,)|var|uint16
call_4509 = func_1602_call(relay.reshape(const_4510.astype('uint16'), [16, 1, 12]), relay.reshape(var_4511.astype('uint16'), [16, 5, 12]), )
call_4512 = func_1602_call(relay.reshape(const_4510.astype('uint16'), [16, 1, 12]), relay.reshape(var_4511.astype('uint16'), [16, 5, 12]), )
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_4521 = relay.TupleGetItem(func_3941_call(), 0)
call_4522 = relay.TupleGetItem(func_3942_call(), 0)
output = relay.Tuple([call_4507,call_4509,const_4510,var_4511,call_4521,])
output2 = relay.Tuple([call_4508,call_4512,const_4510,var_4511,call_4522,])
func_4530 = relay.Function([var_4511,], output)
mod['func_4530'] = func_4530
mod = relay.transform.InferType()(mod)
mutated_mod['func_4530'] = func_4530
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4531 = relay.var("var_4531", dtype = "uint16", shape = (960,))#candidate|4531|(960,)|var|uint16
func_4530_call = mutated_mod.get_global_var('func_4530')
call_4532 = func_4530_call(var_4531)
output = call_4532
func_4533 = relay.Function([var_4531], output)
mutated_mod['func_4533'] = func_4533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4389_call = mod.get_global_var('func_4389')
func_4391_call = mutated_mod.get_global_var('func_4391')
call_4547 = relay.TupleGetItem(func_4389_call(), 0)
call_4548 = relay.TupleGetItem(func_4391_call(), 0)
func_1428_call = mod.get_global_var('func_1428')
func_1433_call = mutated_mod.get_global_var('func_1433')
const_4550 = relay.const([-2,-9,5,-1,-7,-8,-1,6,5,8,-6,7,-7,-2,7,-8,-4,8,-8,-6,7,2,8,-1,7,6,8,-5,-10,-10,10,-7,-4,-4,5,9,-3,10,-1,6,-2,3,6,5,-7,-4,-2,3,-6,-10,8,3,-10,-5,-5,1,3,-9,4,-6,8,7,-1,-6,9,9,3,9,4,6,-2,1,1,-4,-6,3,2,-4,2,3,-5,-7,2,-4,9,-8,-5,6,-10,10,-5,-8,4,-2,-1,8,-5,6,2,-6,10,-1,2,2,10,-6,6,1,-7,8,8,-5,4,10,1,-4,9,-5,-5,-3,-8,9,4,-8,5,-8,-6,5,4,4,3,-6,5,5,8,-4,-10,4,7,6,10,4,-9,-3,-6,8,-7,6,-6,4,1,-2,-5,9,-8,5,-1,1,-9,4,-3,7,-7,-4,5,8,-9,9,7,-7,2,-1,8,2,-8,5,9,1,-4,-10,4,7,10,-9,-1,-2,-6,-6,6,-4,-4,-4,-10,10,2,4,-10,1], dtype = "uint32")#candidate|4550|(198,)|const|uint32
var_4551 = relay.var("var_4551", dtype = "bool", shape = (60,))#candidate|4551|(60,)|var|bool
const_4552 = relay.const([[-1.822692,-6.833196],[-2.952289,3.642951],[6.128962,5.396351],[-1.785462,0.561568],[-0.306353,8.839478],[0.984021,5.506988],[-9.886335,-1.565861],[-7.514853,-4.766924],[-8.531186,-8.947363],[4.103103,-9.191570],[-5.697620,9.867928],[4.887815,4.087856],[-7.794866,-5.277942],[2.546476,3.318369],[-0.867846,-0.382643],[8.567842,0.889025],[3.976298,-7.836566],[9.693983,6.214792],[5.820140,-3.902073],[-3.510027,-3.000257],[2.244403,-1.617806],[3.459298,-4.897572],[6.115554,-6.328087],[8.552022,-5.100419],[-9.048434,4.748969],[-4.658637,1.498204],[-7.032002,-4.329775],[0.263894,0.171947],[7.918464,5.492080],[8.176534,-9.764766],[7.671032,9.448758],[-7.130128,8.098991],[-5.148020,-4.341384],[-7.021455,-3.376778],[-6.196259,5.503844],[-2.291262,-8.411919],[-8.574189,-6.456169],[7.380955,-3.559634],[0.820678,-6.155992],[-1.385082,-8.892926],[-4.922382,0.294869],[-4.694267,5.528928],[-7.180486,2.754308],[6.514417,4.932886],[7.417995,4.522891],[-8.224333,8.008730],[5.339449,-9.717027],[-9.099135,8.503770],[5.241696,8.584328],[-5.351485,-2.403269],[0.730672,1.950640],[0.834536,-4.183308],[-9.313599,-9.577111],[2.603269,8.574525],[5.992936,-6.478230],[-2.238646,-6.809984],[-0.120704,-2.732098],[9.644437,-8.249198],[-8.756926,2.385584],[-3.905274,-1.677356],[-0.860259,7.878366],[1.159888,-0.890940],[-8.861457,-2.244252],[-7.736064,6.357746],[-1.949922,-1.229627],[-5.424479,-8.599929],[-8.731715,6.008929],[3.735813,-7.965425],[-3.481901,7.521299],[-7.069399,-7.239592],[1.361100,3.091701],[4.646673,-3.952887],[-6.461499,7.810630],[3.306929,4.509470],[-9.653871,-9.290849],[2.249790,3.967732],[8.771037,6.466669],[-1.708023,-2.867008],[-5.172857,-8.750346],[-4.162775,2.569243],[7.508114,-3.738257],[-0.351753,-4.186901],[-0.592861,-2.185417],[7.819419,0.612840],[-7.119964,-8.370656],[-4.030580,-8.798652],[3.737596,-9.499813],[-8.336840,-9.802005],[1.623262,-4.551693],[4.621748,-3.729039],[-0.766344,3.440140],[-3.739235,-5.957562],[8.978309,9.968814],[4.889267,-4.862608],[-0.614400,3.794535],[-5.540331,-1.804721],[-8.438307,9.174122],[-1.150569,5.436519],[-4.287174,-0.344047],[0.501979,9.824319],[-9.764164,-5.325547],[7.143032,-9.893397],[3.719748,-9.462039],[2.811223,9.436220],[0.030146,5.049943],[-8.977458,-6.738576],[6.938845,6.868768],[7.984258,8.381929],[-4.154960,-7.529890],[-3.479348,7.421847],[-6.492742,1.224644],[8.624432,7.422439],[4.825766,-0.800731],[4.732483,-8.323008],[6.349891,2.762041],[7.984822,-1.925082],[-9.057810,5.973870],[3.736497,-0.291889],[-8.072210,-2.586806],[0.645551,-7.436000],[-8.476130,-7.123960],[-1.371121,4.404525],[9.722999,-2.605783],[7.087667,-2.017077],[2.598756,7.827627],[-9.772280,-2.234147],[8.487560,-4.674031],[-4.567465,-5.861552],[9.201911,-3.474501],[4.499635,-6.363914],[-2.353253,9.335156],[8.181704,3.652947],[8.567209,-8.406878],[0.026368,-2.493898],[1.834879,5.801248],[-2.254107,-8.786933],[-1.856681,5.487615],[-3.519339,-5.710555],[-2.622454,0.864505],[7.798095,7.613953],[9.985870,0.832541],[-9.609900,1.748429],[-1.110754,-6.872270],[-0.503270,4.136135],[1.284195,0.361135],[-0.235051,6.816660],[4.939980,-2.272793],[8.226592,-2.713249],[0.434508,4.165379],[6.689498,5.708015],[5.975623,-9.377275],[1.688858,6.261073],[-4.475363,-5.331598],[-6.531526,-1.240792],[-8.910095,4.110543],[-2.884725,-8.703126],[0.788885,7.058020],[8.453063,-4.771744],[-5.731104,-4.108043],[-5.900392,1.056486],[-7.892925,5.401390],[9.466153,7.457058],[4.429161,6.075595],[-3.287328,9.086539],[-4.171363,-8.377634],[-8.641564,-0.562729],[-4.535789,-1.678524],[-1.176286,5.383850],[5.243583,-1.818071],[-5.995234,6.951362],[-4.669498,7.801305],[-0.041220,-9.348303],[-7.387165,-5.936402],[0.373878,5.212881],[-2.033288,3.010737],[6.406731,9.549802],[9.430395,4.656742],[5.699475,0.756393],[-0.264584,-4.269362],[-1.610658,8.948176],[-9.806277,3.341408],[-2.811745,1.410024],[-2.902134,-7.562480],[2.035137,-6.418698],[3.205230,2.215438],[-4.714930,-6.085298],[8.565462,-7.400477],[4.576631,-2.755277],[4.107326,4.074453],[7.600470,-2.173921],[0.906319,4.627158],[0.931284,-2.907921],[-5.683567,9.922274],[-6.761221,0.211741],[7.441813,6.825772],[5.652817,-8.856456],[8.061204,-8.843683],[-3.160135,-0.092422],[1.597385,-7.429145],[-2.999223,8.068133],[-2.644914,4.410479],[-5.759685,8.902283],[-7.902265,-6.141084],[-9.341295,2.593352],[8.398058,-0.521032],[-2.255401,2.823248],[7.193525,-3.664180],[-3.900337,-4.661838],[4.028428,-3.519612],[-8.875329,6.980056],[-5.739315,-9.607680],[-2.045451,3.455185],[6.696184,8.503276],[-2.594939,-9.446652],[-3.097197,7.108747],[-4.699404,-2.500413],[-7.372912,-9.469865],[-3.444612,1.354069],[5.090423,6.779110],[2.963389,4.467019],[0.814209,6.249067],[-5.601502,9.069613],[-1.322150,1.624987],[-4.139579,-9.136504],[-8.436255,6.315435],[-9.332867,-9.953072],[-5.700821,9.641804],[-1.259696,-7.895045],[3.271148,3.740617],[7.121814,2.022068],[-4.093105,9.914528],[-9.482157,6.079253],[-4.166961,4.058061],[5.593368,-4.806279],[0.690180,-0.422113],[6.631322,4.314536],[-8.394010,-9.185095],[8.824727,3.929619],[-4.507029,-9.506661],[2.853568,-2.102597],[-5.721185,-3.994933],[7.958488,0.494822],[3.629412,-0.376030],[5.281545,2.458441],[-1.565145,9.002708],[8.752304,1.714774],[9.726234,-2.572898],[3.740670,-0.589479],[-0.735415,-7.875821],[-7.476304,3.320864],[0.997263,-3.998867],[1.549020,-0.603254],[0.330178,-3.648279],[-3.742785,-2.905118],[3.981949,-4.489269],[2.122263,9.373108],[-7.609997,3.988813],[3.422353,-1.316787],[-2.286454,4.083232],[-2.790406,-1.173696],[-8.360579,5.978144],[-4.730564,-7.045370],[-2.955174,7.504317],[-2.352760,-5.158799],[-6.626548,2.079930],[-5.786104,-6.659182],[-9.566488,-9.442400],[8.916499,-8.053390],[5.114954,-3.758262],[1.608197,-6.180272],[-4.855437,-9.909914],[-7.392659,2.606202],[-5.859634,-0.899437],[-0.782892,-2.884808],[8.382690,1.979725],[6.365517,-9.495496],[7.609329,-7.958029],[8.917711,5.443602],[-8.401586,-9.718695],[-2.415266,2.054291],[-5.674279,5.958978],[-9.876484,3.438488],[-8.050975,-7.930339],[-8.428904,5.363108],[-0.471157,6.001860],[-6.560628,6.804747],[-8.179252,8.019589],[2.749905,9.730260],[-1.733194,-2.668365],[-5.248314,-3.406855],[-3.831267,-2.679413],[7.114976,4.651927],[-3.671554,-6.907496],[5.698472,6.157397],[0.659974,-8.226810],[-6.554107,0.403897],[-9.718418,7.848133],[7.859467,4.835543],[9.266622,4.788587],[6.329029,-7.143426],[7.932813,-5.808845],[-0.768625,-2.940363],[-9.226756,-0.160552],[-8.007789,-6.647476],[9.075611,-0.530747],[3.934540,-0.766508],[1.307924,-2.531377],[-0.398886,-6.955089],[3.689359,-9.251289],[3.591407,2.160876],[1.101170,-3.504866],[1.366498,-2.998791],[-8.859684,-3.099501],[7.033656,-0.935655],[-4.861127,0.435408],[3.098952,-5.143941],[9.071186,-2.929747],[6.868561,-7.663096],[0.963609,-2.759936],[3.846562,4.250463],[4.338981,-6.718430],[0.927600,-4.417747],[9.521021,-4.889925],[1.529017,8.616142],[-7.028137,0.979734],[4.430877,-0.471350],[-9.893015,-7.852275],[-1.572957,-1.981916],[2.798126,-8.934697],[9.496495,-0.968120],[-5.549312,-8.176655],[3.095082,-4.496885],[9.108786,9.342262],[-4.659702,-2.970376],[-9.630417,-1.781970],[-3.759265,8.092320],[8.765550,-3.192463],[-3.890317,8.351794],[-8.117521,-7.407250],[2.574081,8.904925],[4.595532,-2.017693],[-7.043870,-1.281241],[8.005353,7.500999],[2.529306,5.053345],[-0.092779,-1.437209],[-8.600402,-5.682657],[4.858460,-6.328801],[2.154231,0.795161],[-1.537614,-0.578901],[-6.055881,2.844224],[-1.636862,-6.452199],[6.481904,-1.843166],[0.870161,-0.723185],[8.980444,-0.379208],[-8.062705,4.165626],[-3.269329,-4.659765],[-9.131515,-9.085852],[8.790072,-2.188580],[-2.499646,-8.432244],[-1.799146,-8.337198],[3.215665,9.760972],[6.123106,0.394072],[-6.983492,2.523738],[8.394474,9.166949],[8.150190,3.476085],[-9.181713,-7.562733],[-8.894008,-5.945496],[1.885874,-8.349882],[-3.159851,0.663504],[-7.850746,4.291295],[-7.735919,8.661951],[-6.116162,4.041494],[-6.142445,-3.127587],[9.958795,-3.770830],[9.578736,-5.231610],[5.603629,5.907325],[1.013146,2.610430],[6.089071,-7.431979],[5.744268,-8.946692],[9.233629,4.308815],[-6.450773,-3.977860],[-4.944414,6.370974],[8.499293,7.415210],[-7.130054,-1.853932],[8.847362,6.601254],[-1.549730,-9.701909],[-2.897013,4.100075],[6.153154,4.210973],[1.100648,2.244642],[-1.291510,3.982309],[-6.693873,-0.026170],[-4.651555,-9.384185],[-2.948906,-1.720184],[-6.460267,0.636223],[0.411108,-6.519308],[6.032600,-8.448317],[8.828909,6.310029],[-5.879078,5.248980],[3.508665,-1.526199],[1.658705,3.626550],[-9.402776,-2.165599],[1.942348,6.646918],[4.773181,3.928182],[-9.527702,4.001213],[7.074621,6.793667],[7.649190,-8.164871],[3.957355,-9.762420],[-2.230119,-3.503905],[-9.191639,9.677942],[-4.821220,-1.567719],[-4.230864,3.148422],[-5.355500,-7.271501],[4.921144,1.191142],[-1.443323,7.469190],[-4.852799,-6.561683],[5.119500,-0.575757]], dtype = "float32")#candidate|4552|(416, 2)|const|float32
call_4549 = relay.TupleGetItem(func_1428_call(relay.reshape(const_4550.astype('uint32'), [2, 11, 9]), relay.reshape(var_4551.astype('bool'), [60,]), relay.reshape(const_4552.astype('float32'), [832,]), ), 9)
call_4553 = relay.TupleGetItem(func_1433_call(relay.reshape(const_4550.astype('uint32'), [2, 11, 9]), relay.reshape(var_4551.astype('bool'), [60,]), relay.reshape(const_4552.astype('float32'), [832,]), ), 9)
func_995_call = mod.get_global_var('func_995')
func_998_call = mutated_mod.get_global_var('func_998')
var_4555 = relay.var("var_4555", dtype = "int32", shape = (104,))#candidate|4555|(104,)|var|int32
call_4554 = func_995_call(relay.reshape(var_4555.astype('int32'), [13, 2, 4]))
call_4556 = func_995_call(relay.reshape(var_4555.astype('int32'), [13, 2, 4]))
func_2499_call = mod.get_global_var('func_2499')
func_2501_call = mutated_mod.get_global_var('func_2501')
const_4558 = relay.const([[2.923847],[-2.367145],[-2.789429],[-8.684594],[3.571293],[7.491877],[-0.680147],[6.342517],[-7.059602],[3.257798],[0.589566],[7.361764],[-4.917761],[8.421061],[-3.794827],[7.334617],[6.736160],[8.442756],[8.935624],[1.989073],[-0.622955],[-8.942581],[-1.964161],[-3.712147],[1.884402],[-4.708501],[-8.718199],[-8.572572],[5.623311],[8.869836],[8.980076],[2.760724],[-6.629959],[-0.361654],[-2.485543],[3.187656],[-4.432991],[4.873866],[5.502441],[-5.893215],[9.774812],[1.216035],[-3.413707],[-2.881156],[5.961937],[4.313049],[-4.447864],[8.675425],[-0.375262],[-2.863386],[7.883622],[7.430110],[3.925089],[-6.415008],[-3.497754],[4.705346],[-3.222183],[-6.226076],[-3.750077],[-2.301597],[-9.068851],[3.715513],[-9.701504],[-9.105526],[-0.289395],[0.536960],[-0.957391],[-4.130407],[5.199664],[-8.504992],[5.896445],[0.165535],[-3.955783],[-6.235461],[-2.271952],[-9.382105],[9.341370],[8.444340],[-7.096506],[-4.394454],[5.260498],[-3.148977],[-4.701341],[8.618408],[-9.397652],[-2.601246],[-4.997468],[6.825127],[1.168068],[0.519374],[-8.149233],[-4.333958],[5.997816],[3.757757],[1.743830],[2.158602],[2.691330],[-0.410929],[-0.646497],[7.378967],[4.604309],[-0.652387],[1.271752],[-5.538951],[9.376508],[-2.346695],[2.863058],[7.297820],[-0.024630],[-7.752817],[-2.474123],[-2.054577],[-7.554493],[-5.182853],[6.211568],[8.265592],[7.479840],[-6.263377],[6.057231],[7.210033],[-6.353587],[-1.396870],[-1.006207],[7.175100],[-9.625849],[0.103021],[7.854309],[-5.897098],[-7.918372],[-3.276262],[-4.544205],[9.075757],[2.037925],[-3.771220],[-1.381468],[1.180325],[4.939994],[4.737679],[-8.534084],[-7.004424],[-7.482912],[1.207995],[-1.238798],[7.840288],[-0.561365],[-5.477162],[0.347261],[-3.150556],[4.569737],[7.516220],[-5.662416],[-2.611370],[-8.979577],[-5.920567],[-8.664083],[5.767435],[-1.380521],[-2.566630],[-9.163191],[0.391146],[0.296946],[0.092465],[1.570397],[5.275970],[-2.556107],[9.633333],[-9.795506],[-5.878092],[6.414950],[2.179619],[-3.346877],[-4.244585],[4.643300],[7.047506],[5.259407],[3.030601],[-1.209116],[8.960991],[-3.484139],[-2.727221],[-0.946046],[-2.516493],[4.501717],[2.975262],[2.614680],[5.586067],[-2.852670],[-0.212890],[-7.518856],[9.027895],[-2.130495],[8.389117],[-2.259113],[5.861952],[6.139483],[7.115258],[2.896564],[-6.336168],[6.890395],[3.157699],[-4.343132],[-3.945032],[-1.284324],[9.888383],[-3.122438],[-7.005463],[7.010328],[4.950659],[0.147681],[-6.749518],[-2.054246],[-4.881849],[6.248423],[-3.151325],[-0.546826],[5.204217],[-4.444640],[7.484689],[-3.374844],[-5.198704],[-2.157360],[-6.188902],[-7.532785],[0.462007],[-9.142334],[-4.644616],[3.809843],[-2.778825],[-4.425050],[7.982505],[-1.095856],[5.747764],[-8.490405],[9.217757],[9.933863],[3.882634],[1.404797],[9.889585],[1.253764],[0.429962],[6.753354],[-0.155204],[-1.798123],[3.841665],[-1.192372],[9.365347],[-3.225438],[2.615379],[-1.451984],[2.178487],[-9.885513],[9.752497],[-5.255162],[9.560118],[4.861445],[5.531460],[2.703591],[3.237579],[-2.306167],[-6.169163],[-6.155431],[0.019567],[-6.280702],[5.392194],[-3.867736],[7.377220],[-9.419566],[-1.844663],[8.365374],[-7.184716]], dtype = "float32")#candidate|4558|(270, 1)|const|float32
call_4557 = relay.TupleGetItem(func_2499_call(relay.reshape(const_4558.astype('float32'), [15, 2, 9])), 0)
call_4559 = relay.TupleGetItem(func_2501_call(relay.reshape(const_4558.astype('float32'), [15, 2, 9])), 0)
func_1569_call = mod.get_global_var('func_1569')
func_1576_call = mutated_mod.get_global_var('func_1576')
const_4563 = relay.const([5,9,-2,-7,-4,2,-7,-5,-9,-2,2,-4,-10,-2,8,5,5,7,4,-2,5,4,-10,-5,-7,-7,-8,-10,2,3,3,-7,4,8,8,-8,-3,-6,-9,-4,-10,5,-2,4,-9,5,-7,-2,6,10,-9,8,-9,7,-7,-6,1,-3,-8,-10,8,-1,-8,5,-5,2,3,8,-6,2,5,10,-3,1,-2,10,-6,4,-6,-10,5,-8,3,10,10,-3,-4,-3,6,10,-2,-7,-1,-4,3,9,7,-6,-3,10,-10,10,-3,-3,-4,-6,-1,-7,-7,9,-5,8,6,-2,10,-2,-2,6,-5,6,-10,-10,-9,-3,-7,6,3,-4,6,9,10,6,-6,-9,1,-2,10,-2,-8,5,1,7,-5,-4,9,-7,-5,-10,7,-1,7,-9,-7,7,-8,-1,4,-3,-9,10,-10,-6,1,-5,-7,7,4,-10,9,-8,-2,5,7,4,7,-5,-2,4,-8,2,-7,-7,6,-4,9,-1,-3,6,4,-7,6,10,4,9,-4,5,-1,4,4,-2,10,-1,-10,4,-6,7,-4,10,-2,9,-2,-9,9,-2,-1,-3,10,5,-2,3,9,-10,10,10,8,10,-4,-5,-10,5,3,-2,5,-2,6,2,9,8,-1,3,-8,1,10,6,-5,3,10,-3,-5,-1,-4,6,-7,3,3,-9,-9,-4,6,-10,10,1,9,6,-2,-4,-9,10,-5,4,-10,-10,1,7,3,-10,-1,6,6,-3,-8,-7,-7,5,-1,-1,-1,-10,-4,-4,6,-9,-7,-8,-8,3,10,-5,6,-1,10,-8,1,-5,-4,-2,-3,9,8,4,10,2,-7,9,10,8,1,10,3,9,-6,-10,-3,-10,-8,-7,-10,-2,-7,-10,-2,6,6,7,3,9,-6,8,-9,8,-3,-10,3,1,3,-6,10,6,8,-5,9,10,-4,5,-9,5,-10,-4,-4,-5,-6,10,5,-4,-1,-5,5,-6,-6,-4,-5,-6,3,10,-4,-4,7,8,2,-6,3,3,-7,-8,-3,-7,-1,-3,-4,4,7,-10,-2,8,-2,-8,6,-4,-2,7,5,4,-8,4,2,-1,4,5,2,1,-8,1,-10,-10,-7,8,2,2,10,3,2,3,5,-3,3,-1,2,-6,8,7,-2,9,-10,5,7,-2,-2,-4,-2,4,-2,6,-8,10,-8,-3,-3,-8,3,3,-3,-8,9,-4,10,4,-4,6,3,-7,-3,5,3,1,7,6,8,-5,-6,5,6,8,2,-1,1,7,-8,-2,-4,-7,-8,10,-6,2,-3,-10,8,6,-1,4,5,-6,4,4,-2,8,5,-5,-3,5,-3,5,-2,-1,10,-4,9,-7,-7,-2,5,8,-7,3,9,-8,-2,4,-3,-8,2,-7,-2,-3,-9,-10,4,4,-1,3,-4,2,3,-3,-1,-1,-1,-4,-5,1,-2,8,-1,9,-9,1,5,-3,-9,7,5,3,-6,-8,3,-7,-2,-1,9,-4,2,2,-9,8,-9,-10,-2,-10,-9,1,10,7,5,7,-7,10,6,-9,-9,5,-9,-4,-9,9,-7,-1,10,-10,-5,-9,-6,4,-3,9,7,3,10,-8,4,-6,-10,7,-5,7,4,4,4,-1,10,-2,5,-4,-3,-1,-10,9,4,-3,4,10,-5,7,-4,-8,-10,1,6,-10,8,7,10,1,1,-6,-4,-3,3,-8,-8,-9,-7,-4,8,1,7,7,3,3,1,-10,-6,-2,1,-3,-6,-9,-5,-5,9,10,-5,5,-4,-3,8,10,4,-2,-3,6,-9,2,10,-8,5,-4,4,8,10,5,-3,-1,-8,-4,1,-2,-4,6,-4,-2,-2,-9,8,8,-7,3,9,-8,10,-10,9,1,6,7,2,9,6,2,-5,9,1,-3,9,-7,-1,-9,-9,-8,-8,5,4,3,1,-5,4,-10,9,7,-5,8,3,10,10,5,3,-7,3,9,5,-2,-8,-6,-8,-5,-1,-10,-2,4,-8,-9,10,-10,-6,-1,-4,2,5,-1,4,7,8,-8,8,2,5,-1,-9,-10,-1,-8,3,-9,1,-3,-5,-8,8,5,2,-3,1,3,-4,-7,-3,-2,-6,-9,8,-1,4,5,-7,-9,-10,-5,-6,-2,-1,-9,-5,-5,1,-7,-5,3,-8,-1,-1,-4,-3,-3,-7,-1,-4,-5,3,-10,-3,5,-7,-7,-9,2,1,2,-6,2,9,-4,-8,-2,10,-5,-8,2,9,2,10,-7,-1,4,5,3,-1,-7,-9,-8,-8,1,-3,3,4,9,9,-4,8,-8,-4,-5,9,6,8,4,-6,5,-9,3,-2,-9,10,-1,-3,-9,9,4,5,-3,-3,-2,3,-2,4,10,-8,8,4,8,8,4,3,-5,-9,3,5,-3,-3,-5,-10,4,3,6,1,5,-1,-9,9,5,2,10,-3,10,-9,2,9,5,-8,-9,7,2,-5,4,-5,-1,-7,6,7,-8,10,-4,-6,1,2,-6,-6,-6,-9,2,-9,1,-8,-8,5,-1,-5,-4,-4,8,-6,4,1,10,2,4,-7,-7,-5,9,-10,5,-5,-10,-5,-6,3,1,-2,5,-3,7,-5,-6,-9,2,-7,-9,-7,3,7,1,1,-5,-2,-9,1,-8,10,9,-3,3,8,-4,10,7,7,9,-9,-1,7,10,5,4,-2,-7,6,4,-1,-10,-6,-10,4,-10,-4,-6,10,8,-3,-3,9,-7,3,10,-10,6,-7,8,6,6,9,-2,7,-6,-4,5,-2,-10,-6,8,-1,3,-1,-9,10,-8,7,-10,9,7,7,-9,-8,2,9,1,4,-8,-6,-3,-2,5,-8,8,-9,5,10,-4,2,2,10,1,-7,1,6,10,-3,-1,-10,-2,-7,6,10,-4,10,4,-9,-3,6,2,8,-1,-6,5,3,-6,4,-8,4,7,-7,-1,7,-3,-10,4,6,8,-10,-10,10,-3,-8,9,2,5,8,-6,-1,-10,1,-6,1,-10,9,-6,-6,1,2,5,5,-3,-5,10,7,7,-3,-4,-1,7,-4,6,4,1,9,-1,-7,9,-5,-10,-8,8,-1,10,-9,-9,2,1,7,3,10,-10,10,9,-10,-6,7,2,10,-10,-10,2,-6,-9,6,9,-8,5,10,-3,-4,-1,-5,-8,4,4,9,-6,-8,8,-7,-2,-5,2,10,8,-6,-4,1,-8,2,-10,9,-3,-1,2,7,-2,10,10,1,5,-6,-10,5,-3,-1,5,9,8,-3,7,-6,-2,4,8,1,-5,-6,-5,5,5,3,6,2,-9,6,-4,-6,1,-10,5,6,-2,7,1,-7,7,-10,9,9,-6,-5,-9,9,-1,1,-4,-8,-9,-4,-4,-9,-1,4,-3,-10,-9,-1,8,-10,-1,-4,6,-1,-6,5,6,-1,-7,6,9,10,5,-6,-1,1,-7,-9,9,-10,-5,-3,1,7,-8,-7,-3,4,-8,8,-7,3,5,7,-2,-9,1,7,7,-1,8,-1,-5,-6,5,4,4,6,-1,-3,1,1,3,8,-1,4,-9,8,-10,-8,-10,-9,-2,-6,-1,10,-1,5,-7,6,2,-5,7,-4,10,3,4,6,10,-3,-1,2,3,7,-10,8,-3,2,10,8,-8,2,3,-2,-10,-4,7,2,-5,10,2,-9,2,-8,5,-2,4,-7,-2,2,3,10,5,-9,-2,8,-6,-2,6,3,-3,6,-1,-8,1,2,7,-3,-7,-5,-9,3,-9,8,-5,9,-7,7,10,-8,5,-5,5,9,8,9,6,-7,-10,-10,-7,5,6,10,7,-8,-2,-9,9,-7,1,-8,-1,-3,9,6,-4,10,2,7,1,-4,-6,-8,-10,-6,4,-9,9,7,-5,4,5,1,-7,9,-4,9,-7,-7,-5,-9,6,-5,9,-3,-5,4,-2,-7,3,-6,-8,-7,3,3,8,6,-7,-9,3,1,-10,9,-1,-2,4,-3,3,9,-5,-2,2,7,9,8,-9,-9,5,10,4,-4,9,1,9,-6,2,-7,5,6,1,5,2,-6,2,6,-9,-4,-8,-2,7,-1,-7,-3,-4,8,2,5,7,-2,-1,-5,-9,-1,-8,-5,-1,5,-7,-2,-7,6,2,-5,5,8,-6,-6,-3,-3,10,-5,-4,-10,-9,2,1,-7,-1,3,-10,2,5,-2,-5,-9,-2,-7,-5,9,-9,3,-1,6,3,-8,2,10,7,8,-6,8,-1,8,2,-1,-2,-3,-5,5,-8,-4,2,-10,5,-9,-4,2,-4,3,-10,8,-9,5,10,5,-2,10,2,-10,-7,9,-8,9,1,-9,-6,-3,8,10,-7,-7,5,-2,9,-5,3,-10,-7,4,-8,-1,9,-1,3,6,8,8,1,10,3,8,9,8,8,-6,-4,3,2,-10,-5,6,8,-7,-3,2,-10,2,10,-7,-2,7,9,-7,5,-7,-4,4,-6,-4,5,7,-6,-7,8,7,7,6,-5,1,2,10,1,-7,-4,8,-7,-5,5,-9,7,5,-1,2,-5,8,10,-3,-4,10,3,5,4,-1,5,-1,10,-6,6,1,-10,-9,6,5,-2,8,-2,3,7,2,8,2,-1,8,-8,-9,7,3,9,5,-1,-9,6,-9,-8,4,-6,3,-7,-5,2,-5,3,6,4,-5,4,7,6,4,-9,-1,5,2,-8,6,2,-1,-9,-9,8,-5,-8,4,-10,-7,5,4,5,-3,-3,-3,10,10,-2,-2,10,3,-2,1,5,1,-9,1,8,-5,3,-6,5,-4,-2,7,4,2,-9,7,5,4,-10,-6,-9,9,-2,-6,-10,3,-9,-8,4,-8,-6,-7,-3,-5,-7,3,-5,-9,9,3,10,-5,-10,-1,-4,-9,5,1,8,3,8,-3,-10,9,10,1,2,8,-9,-6,9,5,-1,2,-4,-7,10,-3,-4,10,-6,5,-6,-8,3,10,-1,-4,1,6,-10,8,-4,-10,3,4,10,-7,-4,3,-1,9,-8,-8,10,4,6,-10,3,9,-2,7,-4,-10,1,6,-6,8,10,5,-10,10,3,8,-1,-3,-2,7,-7,2,2,-2,3,-4,-5,-2,8,-3,-1,-8,-8,7,3,3,5,-10,3,7,3,10,-10,5,2,10,8,8,-9,3,-1,4,2,-2,7,3,-9,-1,5,7,-3,3,-3,7,-5,3,-7,-1,2,-5,3,2,3,10,-9,-5,6,-6,-10,2,-3,3,-4,8,10,-5,-1,4,10,2,-3,-4,9,-9,-4,4,5,-7,4,5,9,8,6,-6,7,8,6,-8,-3,-2,7,-2,5,-1,7,6,7,5,-5,-2,8,-2,-1,9,-7,-10,-9,9,4,-5,-6,-6,-3,6,4,10,-7,8,3,3,8,-6,-10,1,5,-6,6,-3,4,7,-7,-2,9,6,7,4,5,-10,-5,10,6,-2,-7,-1,4,1,-7,8,4,10,3,7,-5,2,10,1,-7,10,8,5,1,3,-10,6,7,5,1,8,1,-6,-4,-6,-10,5,10,-9,-9,-9,-5,2,2,-2,1,6,3,-2,-1,-10,-5,-10,-8,-5,3,-3,-2,2,4,6,-7,-7,6,-9,-8,-9,-7,-9,10,-9,2,3,1,-8,3,-2,6,-1,9,-1,-1,1,1,-3,5,-6,-6,-1,-6,3,10,-10,-5,1,2,-2,-2,1,4,-4,5,-6,-1,-9,-3,-8,8,-1,8,-10,2,3,6,9,9,-8,3,7,-2,-3,-1,-10,-7,-5,-3,-5,-6,10,4,1,-3,8,-7,-2,-3,4,5,4,-6,-9,3,-3,4,-10,-3,10,2,-1,-4], dtype = "uint8")#candidate|4563|(2184,)|const|uint8
call_4562 = relay.TupleGetItem(func_1569_call(relay.reshape(const_4563.astype('uint8'), [14, 12, 13]), relay.reshape(const_4563.astype('uint8'), [14, 12, 13]), relay.reshape(const_4550.astype('uint32'), [198,]), relay.reshape(var_4551.astype('bool'), [60,]), relay.reshape(call_4549.astype('float32'), [832,]), ), 3)
call_4564 = relay.TupleGetItem(func_1576_call(relay.reshape(const_4563.astype('uint8'), [14, 12, 13]), relay.reshape(const_4563.astype('uint8'), [14, 12, 13]), relay.reshape(const_4550.astype('uint32'), [198,]), relay.reshape(var_4551.astype('bool'), [60,]), relay.reshape(call_4549.astype('float32'), [832,]), ), 3)
output = relay.Tuple([call_4547,call_4549,const_4550,var_4551,const_4552,call_4554,var_4555,call_4557,const_4558,call_4562,const_4563,])
output2 = relay.Tuple([call_4548,call_4553,const_4550,var_4551,const_4552,call_4556,var_4555,call_4559,const_4558,call_4564,const_4563,])
func_4566 = relay.Function([var_4551,var_4555,], output)
mod['func_4566'] = func_4566
mod = relay.transform.InferType()(mod)
var_4567 = relay.var("var_4567", dtype = "bool", shape = (60,))#candidate|4567|(60,)|var|bool
var_4568 = relay.var("var_4568", dtype = "int32", shape = (104,))#candidate|4568|(104,)|var|int32
output = func_4566(var_4567,var_4568,)
func_4569 = relay.Function([var_4567,var_4568,], output)
mutated_mod['func_4569'] = func_4569
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4574 = relay.var("var_4574", dtype = "float64", shape = (11, 2, 4))#candidate|4574|(11, 2, 4)|var|float64
uop_4575 = relay.log(var_4574.astype('float64')) # shape=(11, 2, 4)
uop_4577 = relay.atanh(var_4574.astype('float64')) # shape=(11, 2, 4)
func_4171_call = mod.get_global_var('func_4171')
func_4176_call = mutated_mod.get_global_var('func_4176')
var_4580 = relay.var("var_4580", dtype = "uint16", shape = (960,))#candidate|4580|(960,)|var|uint16
const_4581 = relay.const([[True,True],[True,True],[True,True],[False,False],[True,True],[True,True],[False,False],[True,True],[True,False],[True,False],[True,False],[True,False],[True,True],[False,False],[True,True],[False,False],[False,True],[False,True],[True,False],[False,False],[False,True],[True,False],[True,False],[False,True],[True,True],[True,False],[True,False],[True,False],[True,True],[False,True],[False,False],[True,True],[False,True],[False,True],[False,False],[True,False],[False,False],[False,True],[True,False],[False,False],[True,True],[False,False],[True,True],[True,True],[False,True],[False,True],[False,True],[False,False],[True,False],[True,True],[True,False],[True,True],[False,True],[False,True],[False,True],[True,True],[False,False],[False,False],[True,True],[True,False],[False,True],[True,False],[False,True],[False,True],[True,True],[False,False],[True,True],[True,False],[True,False],[True,True],[True,True],[False,True],[True,False],[True,False],[True,False],[False,False],[True,True],[False,False],[False,True],[True,False],[False,False],[False,False],[True,False],[False,False],[False,True],[True,True],[False,False],[False,True],[False,False],[False,False],[False,False],[False,False],[False,False],[False,False],[True,True],[False,False],[True,True],[False,True],[True,False],[True,True],[True,True],[False,False],[True,False],[True,True],[False,True],[True,True],[False,True],[True,False],[False,True],[False,True],[False,True],[True,False],[False,True],[True,True],[True,False],[False,True],[True,False],[True,False],[False,False],[False,True],[False,True],[False,False],[True,True],[False,True],[False,False],[False,False],[True,False],[False,True],[True,True],[False,True],[False,False],[False,True],[False,True],[False,True],[True,False],[False,True],[True,False],[True,False],[True,True],[True,True],[False,False],[True,True],[False,False],[True,True],[True,True],[False,True],[False,False],[True,False],[True,True],[True,True],[True,True],[False,False],[True,False],[True,False],[True,False],[True,True],[False,True],[True,False],[True,False],[False,False]], dtype = "bool")#candidate|4581|(160, 2)|const|bool
var_4582 = relay.var("var_4582", dtype = "float32", shape = (832,))#candidate|4582|(832,)|var|float32
call_4579 = relay.TupleGetItem(func_4171_call(relay.reshape(var_4580.astype('uint16'), [1, 960]), relay.reshape(const_4581.astype('bool'), [320,]), relay.reshape(var_4582.astype('float32'), [832,]), ), 10)
call_4583 = relay.TupleGetItem(func_4176_call(relay.reshape(var_4580.astype('uint16'), [1, 960]), relay.reshape(const_4581.astype('bool'), [320,]), relay.reshape(var_4582.astype('float32'), [832,]), ), 10)
output = relay.Tuple([uop_4575,uop_4577,call_4579,var_4580,const_4581,var_4582,])
output2 = relay.Tuple([uop_4575,uop_4577,call_4583,var_4580,const_4581,var_4582,])
func_4584 = relay.Function([var_4574,var_4580,var_4582,], output)
mod['func_4584'] = func_4584
mod = relay.transform.InferType()(mod)
var_4585 = relay.var("var_4585", dtype = "float64", shape = (11, 2, 4))#candidate|4585|(11, 2, 4)|var|float64
var_4586 = relay.var("var_4586", dtype = "uint16", shape = (960,))#candidate|4586|(960,)|var|uint16
var_4587 = relay.var("var_4587", dtype = "float32", shape = (832,))#candidate|4587|(832,)|var|float32
output = func_4584(var_4585,var_4586,var_4587,)
func_4588 = relay.Function([var_4585,var_4586,var_4587,], output)
mutated_mod['func_4588'] = func_4588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4231_call = mod.get_global_var('func_4231')
func_4233_call = mutated_mod.get_global_var('func_4233')
call_4590 = relay.TupleGetItem(func_4231_call(), 0)
call_4591 = relay.TupleGetItem(func_4233_call(), 0)
output = call_4590
output2 = call_4591
func_4592 = relay.Function([], output)
mod['func_4592'] = func_4592
mod = relay.transform.InferType()(mod)
output = func_4592()
func_4593 = relay.Function([], output)
mutated_mod['func_4593'] = func_4593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_4690 = relay.TupleGetItem(func_3941_call(), 0)
call_4691 = relay.TupleGetItem(func_3942_call(), 0)
func_2616_call = mod.get_global_var('func_2616')
func_2619_call = mutated_mod.get_global_var('func_2619')
var_4699 = relay.var("var_4699", dtype = "int64", shape = (2925,))#candidate|4699|(2925,)|var|int64
var_4700 = relay.var("var_4700", dtype = "uint16", shape = (192,))#candidate|4700|(192,)|var|uint16
call_4698 = relay.TupleGetItem(func_2616_call(relay.reshape(var_4699.astype('int64'), [15, 13, 15]), relay.reshape(var_4700.astype('uint16'), [192,]), ), 0)
call_4701 = relay.TupleGetItem(func_2619_call(relay.reshape(var_4699.astype('int64'), [15, 13, 15]), relay.reshape(var_4700.astype('uint16'), [192,]), ), 0)
var_4702 = relay.var("var_4702", dtype = "int64", shape = (2925,))#candidate|4702|(2925,)|var|int64
bop_4703 = relay.left_shift(var_4699.astype('int32'), relay.reshape(var_4702.astype('int32'), relay.shape_of(var_4699))) # shape=(2925,)
func_4307_call = mod.get_global_var('func_4307')
func_4309_call = mutated_mod.get_global_var('func_4309')
var_4712 = relay.var("var_4712", dtype = "bool", shape = (60,))#candidate|4712|(60,)|var|bool
call_4711 = relay.TupleGetItem(func_4307_call(relay.reshape(var_4712.astype('bool'), [60,])), 3)
call_4713 = relay.TupleGetItem(func_4309_call(relay.reshape(var_4712.astype('bool'), [60,])), 3)
output = relay.Tuple([call_4690,call_4698,var_4700,bop_4703,call_4711,var_4712,])
output2 = relay.Tuple([call_4691,call_4701,var_4700,bop_4703,call_4713,var_4712,])
func_4717 = relay.Function([var_4699,var_4700,var_4702,var_4712,], output)
mod['func_4717'] = func_4717
mod = relay.transform.InferType()(mod)
mutated_mod['func_4717'] = func_4717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4717_call = mutated_mod.get_global_var('func_4717')
var_4719 = relay.var("var_4719", dtype = "int64", shape = (2925,))#candidate|4719|(2925,)|var|int64
var_4720 = relay.var("var_4720", dtype = "uint16", shape = (192,))#candidate|4720|(192,)|var|uint16
var_4721 = relay.var("var_4721", dtype = "int64", shape = (2925,))#candidate|4721|(2925,)|var|int64
var_4722 = relay.var("var_4722", dtype = "bool", shape = (60,))#candidate|4722|(60,)|var|bool
call_4718 = func_4717_call(var_4719,var_4720,var_4721,var_4722,)
output = call_4718
func_4723 = relay.Function([var_4719,var_4720,var_4721,var_4722,], output)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4231_call = mod.get_global_var('func_4231')
func_4233_call = mutated_mod.get_global_var('func_4233')
call_4786 = relay.TupleGetItem(func_4231_call(), 0)
call_4787 = relay.TupleGetItem(func_4233_call(), 0)
output = call_4786
output2 = call_4787
func_4795 = relay.Function([], output)
mod['func_4795'] = func_4795
mod = relay.transform.InferType()(mod)
mutated_mod['func_4795'] = func_4795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4795_call = mutated_mod.get_global_var('func_4795')
call_4796 = func_4795_call()
output = call_4796
func_4797 = relay.Function([], output)
mutated_mod['func_4797'] = func_4797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4352_call = mod.get_global_var('func_4352')
func_4354_call = mutated_mod.get_global_var('func_4354')
call_4881 = relay.TupleGetItem(func_4352_call(), 0)
call_4882 = relay.TupleGetItem(func_4354_call(), 0)
output = relay.Tuple([call_4881,])
output2 = relay.Tuple([call_4882,])
func_4892 = relay.Function([], output)
mod['func_4892'] = func_4892
mod = relay.transform.InferType()(mod)
mutated_mod['func_4892'] = func_4892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4892_call = mutated_mod.get_global_var('func_4892')
call_4893 = func_4892_call()
output = call_4893
func_4894 = relay.Function([], output)
mutated_mod['func_4894'] = func_4894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_4949 = func_4084_call()
call_4950 = func_4084_call()
func_1377_call = mod.get_global_var('func_1377')
func_1380_call = mutated_mod.get_global_var('func_1380')
const_4960 = relay.const([-3.656799,2.787462,8.411540,-0.730599,-8.401419,-5.713547,-5.862135,-9.228865,4.090668,2.027749,0.546048,-9.847365,6.754579,5.516836,0.740506,6.300768,-0.008795,0.969534,8.997866,9.688521,0.051068,5.961947,-3.736773,-5.746680,-9.177143,9.783181,0.017875,5.421953,4.238853,3.350005,9.988904,-8.292437,9.111664,0.864625,0.235094,8.366691,-2.184676,-2.712454,-5.301077,-8.397123,-5.909094,-5.717540,3.091411,8.679377,8.269477,-4.677920,6.919010,-3.960857,-7.209729,7.261624,9.645780,-5.189646,6.243669,-2.392073,-2.422221,5.206375,-6.346620,-0.618515,4.526637,-4.409721,-6.095438,8.337841,-8.324429,-4.465687,0.959572,-7.344180,-1.355045,-1.049662,-0.846063,-9.358699,-6.420198,0.398095,1.432862,-2.003131,3.059950,4.946947,5.875807,4.883827,4.854767,7.563143,5.311360,2.556650,-2.821949,-5.027722,-9.016063,4.534633,-9.815347,-1.258352,-7.881148,-6.724030,7.819697,2.032775,-4.030908,-9.535564,7.643978,-4.345821,-0.518610,-7.535946,0.855600,1.411422,4.163356,-9.940698,3.740668,-7.627180,-3.727473,-7.532197,-0.755648,-3.945359,-9.252916,-6.792472,-3.309778,4.448869,-4.776076,-9.247690,-0.445785,-8.415758,-8.642467,2.268483,2.660255,-9.062283,-4.122741,0.972319,-0.651697,4.047151,5.207625,-6.408337,-0.823716,-4.051683,-4.234429,-5.695363,-2.390876,-6.728581,-7.783418,-7.403758,1.599130,7.286954,8.613522,0.594622,-0.746413,4.992314,-5.831507,-1.289048,0.139511,-0.833137,0.920604,-9.655707,4.976833,-5.471922,-1.404892,0.394704,9.020390,4.629019,4.692967,8.020185,0.939960,2.245855,-8.602918,-5.165923,-9.175763,3.909821,8.412407,2.351505,7.539546,-2.281521,7.485290,3.281817,-4.676808,9.713514,2.479712,-8.683180,5.619444,3.093510,6.499782,0.975040,-8.937534,4.956739,-4.609828,-5.996951,-7.481824,4.605523,-3.572984,2.560381,7.684100,-7.772821,3.113402,4.703065,5.085426,-3.514035,-3.407857,-5.904293,1.935433,9.424882,4.030303,7.691970,-2.870312,8.337095,6.623570,-9.048387,4.750250,-6.850236,3.125801,-6.449648,-1.357291,0.877701,-0.722062,0.331867,6.396469,-3.824518,-6.431378,-4.072009,-0.576858,2.760016,-4.239582,4.993925,-0.845686,-5.765733,5.866948,-0.769577,-9.635493,8.108980,-7.075058,-2.999183,0.282096,-6.487063,-9.300028,-9.761816,-1.440159,-9.379261,5.780885,-4.141629,5.587591,3.817586,2.620055,-9.105422,9.935608,4.560933,-1.242272,8.048514,-9.746544,3.992318,7.921809,8.130440,1.933728,-0.100393,0.162585,2.426729,-1.864307,-4.543962,-0.667314,7.070723,-2.851671,8.205690,-8.677909,-9.319614,-8.153725,0.603855,3.107494,4.448356,-4.041252,-0.648305,4.170208,3.949088,-6.015247,4.122041,-6.703996,3.447192,1.093212,-8.270161,8.134859,-1.818395,-5.081908,0.768060,4.170587,6.810637,0.058722,8.036276,9.966773,-1.532367,-8.907524,-9.051875,-4.172935,6.223865,0.959305,1.400378,-2.673104,-3.629809,8.242170,0.331215,3.254568,-4.468939,-8.235005,4.040530,-5.526682,9.013857,4.863967,-8.237561,0.577847,-0.731668,1.538839,-1.494602,1.772690,-2.476782,-4.118035,4.485504,-6.207046,-9.630643,-7.431507,-2.909237], dtype = "float32")#candidate|4960|(308,)|const|float32
call_4959 = func_1377_call(relay.reshape(const_4960.astype('float32'), [11, 7, 4]))
call_4961 = func_1377_call(relay.reshape(const_4960.astype('float32'), [11, 7, 4]))
output = relay.Tuple([call_4949,call_4959,const_4960,])
output2 = relay.Tuple([call_4950,call_4961,const_4960,])
func_4973 = relay.Function([], output)
mod['func_4973'] = func_4973
mod = relay.transform.InferType()(mod)
output = func_4973()
func_4974 = relay.Function([], output)
mutated_mod['func_4974'] = func_4974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4231_call = mod.get_global_var('func_4231')
func_4233_call = mutated_mod.get_global_var('func_4233')
call_4977 = relay.TupleGetItem(func_4231_call(), 0)
call_4978 = relay.TupleGetItem(func_4233_call(), 0)
var_4982 = relay.var("var_4982", dtype = "float32", shape = (16, 11, 3))#candidate|4982|(16, 11, 3)|var|float32
bop_4983 = relay.power(call_4977.astype('float32'), relay.reshape(var_4982.astype('float32'), relay.shape_of(call_4977))) # shape=(16, 11, 3)
bop_4986 = relay.power(call_4978.astype('float32'), relay.reshape(var_4982.astype('float32'), relay.shape_of(call_4978))) # shape=(16, 11, 3)
func_4171_call = mod.get_global_var('func_4171')
func_4176_call = mutated_mod.get_global_var('func_4176')
var_5002 = relay.var("var_5002", dtype = "uint16", shape = (960,))#candidate|5002|(960,)|var|uint16
var_5003 = relay.var("var_5003", dtype = "bool", shape = (320,))#candidate|5003|(320,)|var|bool
const_5004 = relay.const([1.192577,0.475678,-5.379263,0.088918,-1.325034,9.744361,4.262988,-1.642876,-0.259481,-3.019142,2.588655,-2.169607,5.541067,-5.447468,0.933653,-8.262443,3.663489,1.875403,5.277931,-6.214796,-6.676374,9.733617,-3.296942,0.666899,-4.163273,2.564768,2.899842,-2.453926,3.988686,-8.464793,-8.827467,-2.185785,-4.752603,2.474971,-3.705915,7.920657,7.106643,6.701482,-6.234936,3.706397,-4.801678,5.872120,-6.675537,-7.198049,-0.569472,-3.467243,7.241878,-5.140291,-8.420552,-5.568800,6.074525,4.182741,-3.054213,-9.713170,-2.717561,-2.919689,3.685752,-9.312573,2.233783,1.045325,6.913297,-7.810766,-0.640692,-4.656642,-0.594786,-9.462901,9.217108,7.779518,-7.427627,-1.375296,7.647822,9.557216,-9.475514,-9.619011,-7.418182,6.221072,1.091414,3.067308,-4.334079,9.392619,-8.834197,-7.034367,5.133588,7.838767,-6.380088,-2.416350,-7.180222,-8.309081,-6.697288,-2.649243,-4.056608,-9.259331,2.672253,-0.912887,-1.295840,5.417645,1.573731,-5.710029,8.877246,-8.300400,0.979615,0.689969,-6.577923,5.413472,-7.983665,2.912741,4.335874,-4.124943,5.840844,2.128306,-0.513310,-7.898127,-2.968803,5.590469,3.208874,0.390757,-7.746935,-0.992850,-4.573843,0.047242,-4.620383,-8.124585,4.445340,-6.431619,3.987406,-1.107638,-4.447556,2.408102,0.898333,-5.243192,-8.838219,3.414676,-1.026853,5.132616,9.127866,3.914063,0.292408,-7.296991,4.078480,-3.534634,-0.026548,-7.077519,8.991443,2.064585,-8.009737,7.642573,-3.915818,-7.091845,9.112597,5.300471,-9.282067,-4.421888,-2.385000,-8.075870,4.291375,-8.047383,6.757309,2.071292,-2.308339,0.502218,-3.230366,7.617167,-9.809969,-2.185875,0.235342,-5.496978,-2.871297,-8.886359,1.956667,-2.624723,2.438057,-6.122276,-7.464264,6.983158,3.157277,4.217525,-3.282739,-0.454432,-1.621080,-8.168084,-7.280953,-7.460339,9.691970,-1.191919,1.910192,8.429179,3.466668,-5.206368,3.175114,2.758644,-8.578069,4.785952,5.475167,9.323109,-3.542558,-4.783643,5.489349,4.637802,4.683607,9.735947,4.226657,6.414449,9.740234,-0.197998,4.729701,1.384052,-2.300218,-5.826517,-5.941333,-6.117547,6.094103,8.010991,8.043961,6.176447,-9.104580,1.409034,-0.877374,2.985235,-4.492868,-3.044479,5.331303,-5.779717,-2.736094,0.821925,-1.496418,9.719010,-4.464837,-6.192507,-8.269839,-5.449255,6.289097,-0.394102,-7.981021,5.339349,7.296145,3.601188,5.756407,-4.465750,-5.132562,-7.737106,8.706833,5.454132,-6.022029,6.023273,4.081285,-1.678561,-8.859847,-5.014445,-2.065415,6.639867,-2.575002,-0.507005,-9.725869,3.907124,-0.448870,-7.333368,-7.606097,-1.432983,1.842310,4.300084,3.250602,5.995023,-3.314822,8.063131,0.370356,-6.476648,8.983998,8.978785,7.445357,-9.477700,-6.915583,-8.641783,-1.186695,-7.073137,-5.727396,6.060187,2.265395,4.201068,-5.771386,-9.651801,-2.132742,9.339206,6.295338,9.229368,-9.430852,-7.155772,-4.777380,9.481797,0.755485,4.937933,5.273562,-3.573050,5.078756,-1.797661,-8.008326,-6.660434,8.462196,-9.383792,-0.463553,3.982456,1.744549,-3.733098,-8.735144,0.751486,7.022140,-6.025189,1.245164,4.951518,-7.007659,-9.929300,-6.472459,9.832839,4.681406,-1.517631,-2.834558,-0.810993,9.226595,5.938903,-1.078705,-0.725982,9.251199,-1.254278,6.246895,-9.028197,5.915650,-2.522166,1.724069,3.626080,3.936927,-7.253272,6.414646,9.930039,7.582598,1.730279,1.230251,0.161281,-7.016122,8.087042,4.677049,2.137271,3.880146,-5.909614,-3.941821,6.635599,6.718199,0.320975,-1.780021,-5.110265,1.780596,5.570506,4.764051,-2.627653,-4.514787,6.568639,9.462816,-3.547790,-1.253860,3.296367,-9.424547,-6.961438,-7.298212,-3.473617,-5.679621,2.155486,-5.416463,1.703447,0.747568,5.853865,8.881424,-5.023522,-5.348752,7.749344,0.515552,7.659090,4.779774,-3.441922,7.669829,-0.186046,5.053676,0.446752,-1.540757,5.191277,-4.226926,5.779933,0.810526,-6.793485,-7.537812,-9.159152,-1.786832,2.395200,1.309467,-9.666096,4.263528,-5.691172,-7.876876,-2.384818,-0.618416,-0.256482,1.370395,0.884002,8.962234,-7.833902,5.797230,-2.186370,-1.653713,-2.656995,5.163683,-6.711304,8.305218,5.021148,-1.608586,8.718656,9.096020,-7.252720,9.997419,7.215786,2.654986,2.947346,-0.933342,9.435209,6.329104,-8.033082,-8.616012,4.875841,7.641920,5.132959,0.999143,6.562375,-0.870697,5.215398,4.495258,7.164780,-0.607040,7.194577,-8.238091,4.941736,-8.269277,-6.580853,-7.729523,6.453103,-0.540982,6.266078,2.783909,-1.223368,-7.815171,5.007224,-7.305506,1.223348,7.584358,0.413537,2.813362,-0.511278,-5.837166,-0.023315,-5.650635,-2.520374,-3.753344,-5.146985,-8.391367,9.921159,-3.742786,-0.422677,9.106999,3.611884,5.330699,-4.638749,1.043987,-5.778403,1.605407,-5.962026,-5.360258,-1.255079,4.213869,-9.375305,8.182238,-4.667507,7.724277,-7.797007,-7.304234,7.195612,-8.706095,-5.875884,-1.938132,6.549328,6.728486,-3.700236,6.593365,-5.335177,1.520411,-3.596273,9.978547,0.710493,-6.446748,8.953956,3.205738,-6.015139,4.491940,-3.174753,6.118712,8.063840,0.988774,0.719581,5.197507,2.807120,-8.804633,6.190643,9.409197,-3.438358,3.286520,-0.574431,3.595733,-6.991676,-0.407969,-7.568255,9.541604,-3.280631,5.285594,5.749594,-5.302085,-4.032600,-7.181937,-2.991484,-1.353611,2.373887,-3.688421,-7.767034,-0.816781,-0.041562,4.604396,6.417294,5.627375,-4.607955,5.712628,8.932093,-4.886621,-5.787659,4.816338,-9.282271,-4.373018,9.638424,-5.301192,-7.830035,3.593002,9.086969,4.088827,7.846221,-8.490714,-9.861326,1.818912,5.905582,8.619626,-3.168948,-1.271019,-8.588971,0.096839,-4.455697,5.406577,-0.501654,1.075424,-5.803016,-3.669119,2.302213,7.533220,-6.632292,7.082270,-9.569684,-0.897355,-9.076569,-5.340777,1.697600,-1.427230,7.384700,-8.353559,-7.038185,4.347548,-5.974767,-8.994441,-6.033940,3.323794,-9.444082,2.299896,3.880784,-8.119154,-4.454921,-8.190269,-9.869170,7.414417,9.496634,6.707337,-7.143889,-8.945290,2.747125,-1.131883,-1.383281,-3.688946,9.152079,8.349374,8.328489,-8.793490,-9.543573,1.166060,1.692286,-8.747761,-3.981779,5.839978,-5.477876,-6.873504,-7.636444,-2.937658,-6.580753,-8.116226,-8.602769,2.856739,7.922361,2.697075,-3.637295,-8.372032,-4.309372,-2.106755,-4.417391,0.996066,8.397845,-8.858884,-7.158116,-3.066270,-6.386904,-8.708064,4.362704,-5.871146,5.865412,-0.897833,3.941888,-7.974508,-9.844260,-9.375770,-8.776131,6.655630,6.941793,8.052315,-4.318889,9.257097,-5.144562,4.285833,1.278693,-0.836228,-6.128048,-1.381258,2.061195,0.533877,-7.626099,0.954899,8.510162,-7.770311,-7.191070,-5.450033,-6.266639,1.252396,-1.488133,-4.066263,0.400361,-3.618143,9.378525,9.936448,8.234810,-3.521446,-4.052844,-2.437278,6.697212,5.350019,5.713455,-8.462585,8.073933,-1.394191,8.060467,4.335209,-3.247802,-9.999131,-7.783704,-6.429448,-4.528640,8.342107,-8.121938,-3.232908,6.187725,-4.803911,0.774646,-0.427765,-6.564268,-9.289272,7.091604,-2.812363,-1.534599,8.928515,-1.906178,-7.079810,8.431734,-0.055607,-1.355731,3.797726,-1.513983,-9.640296,-3.728014,-4.002716,4.342563,-9.614449,-1.613454,-2.093029,2.641561,0.500239,-3.009568,-4.580185,-9.360986,8.871156,9.232311,-3.039869,-2.796265,-1.985963,9.561838,-9.842357,2.804503,5.697105,9.006292,-0.717212,0.836821,4.475806,-0.404384,5.696468,-8.392255,9.169111,6.135529,4.101193,-2.322218,0.100488,-1.216650,-7.666396,-5.703333,8.033383,-6.526709,4.342585,8.963403,1.483784,-5.109869,-8.195529,0.207470,8.220103,7.891649,4.603360,-4.282459,3.712013,-9.835478,-0.268970,8.229769,-8.580284,-8.321400,-3.154889,-6.379423,7.192538,-2.617380,2.935472,1.511621,9.646242,4.491533,-5.013967,7.583579,-7.283737,7.468366,-8.500665,-1.597201,-4.139167,-2.157703,2.146095,-6.772722,-1.155406,-6.179170,7.027576,-2.762513,9.182968,3.853905,7.178074,7.370186,-8.535453,-2.756466,-2.087442,2.942753,6.047373,9.256513,9.965064,6.362215,-2.038432,9.678809,0.832494,-8.132166,-7.932273,-5.761967,-4.714349,8.584630,0.173005,-5.541379,2.469949,-1.434027,8.259679,6.803905,-2.451078,-5.591242,-9.578783,-3.918779,7.588584,-0.307204,-0.800273,1.139698,0.144696,5.133486,6.984816,-4.587936,6.543899,1.039930,-3.529023,2.305707,-4.344472,5.163303,-0.239369,-7.171692,7.421472,3.962377,-6.310295,-5.285300,8.645046,-6.208042,3.644526,4.316141,1.648838,-6.140129], dtype = "float32")#candidate|5004|(832,)|const|float32
call_5001 = relay.TupleGetItem(func_4171_call(relay.reshape(var_5002.astype('uint16'), [1, 960]), relay.reshape(var_5003.astype('bool'), [320,]), relay.reshape(const_5004.astype('float32'), [832,]), ), 13)
call_5005 = relay.TupleGetItem(func_4176_call(relay.reshape(var_5002.astype('uint16'), [1, 960]), relay.reshape(var_5003.astype('bool'), [320,]), relay.reshape(const_5004.astype('float32'), [832,]), ), 13)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_5026 = relay.TupleGetItem(func_3941_call(), 0)
call_5027 = relay.TupleGetItem(func_3942_call(), 0)
output = relay.Tuple([bop_4983,call_5001,var_5002,var_5003,const_5004,call_5026,])
output2 = relay.Tuple([bop_4986,call_5005,var_5002,var_5003,const_5004,call_5027,])
func_5033 = relay.Function([var_4982,var_5002,var_5003,], output)
mod['func_5033'] = func_5033
mod = relay.transform.InferType()(mod)
mutated_mod['func_5033'] = func_5033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5033_call = mutated_mod.get_global_var('func_5033')
var_5035 = relay.var("var_5035", dtype = "float32", shape = (16, 11, 3))#candidate|5035|(16, 11, 3)|var|float32
var_5036 = relay.var("var_5036", dtype = "uint16", shape = (960,))#candidate|5036|(960,)|var|uint16
var_5037 = relay.var("var_5037", dtype = "bool", shape = (320,))#candidate|5037|(320,)|var|bool
call_5034 = func_5033_call(var_5035,var_5036,var_5037,)
output = call_5034
func_5038 = relay.Function([var_5035,var_5036,var_5037,], output)
mutated_mod['func_5038'] = func_5038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4389_call = mod.get_global_var('func_4389')
func_4391_call = mutated_mod.get_global_var('func_4391')
call_5077 = relay.TupleGetItem(func_4389_call(), 0)
call_5078 = relay.TupleGetItem(func_4391_call(), 0)
output = call_5077
output2 = call_5078
func_5102 = relay.Function([], output)
mod['func_5102'] = func_5102
mod = relay.transform.InferType()(mod)
mutated_mod['func_5102'] = func_5102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5102_call = mutated_mod.get_global_var('func_5102')
call_5103 = func_5102_call()
output = call_5103
func_5104 = relay.Function([], output)
mutated_mod['func_5104'] = func_5104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4231_call = mod.get_global_var('func_4231')
func_4233_call = mutated_mod.get_global_var('func_4233')
call_5126 = relay.TupleGetItem(func_4231_call(), 0)
call_5127 = relay.TupleGetItem(func_4233_call(), 0)
func_1655_call = mod.get_global_var('func_1655')
func_1658_call = mutated_mod.get_global_var('func_1658')
const_5148 = relay.const([0.172075,-4.544333,-3.871225,2.929254,-5.812422,-5.310112,7.760533,3.360066,-4.266203,6.896523,-1.623006,9.322899,4.657734,-7.206046,2.822869,9.355529,-7.218833,9.935034,2.285173,-6.474899,-3.330888,-1.330650,-3.615147,-1.539176,9.540738,7.461963,0.992297,1.476948,-6.449801,4.955047,-5.225726,4.538322,-9.681333,5.435778,2.460034,9.878211,-6.884313,4.901789,-1.881102,-4.862879,0.087039,7.243225,-9.604177,2.051028,-1.938251,-6.017293,4.199719,4.163451,-3.507711,2.860301,-9.574860,1.741990,6.598169,4.701835,-3.534199,5.288187,8.733375,-1.739993,5.554028,4.083089,-5.448894,-5.500557,2.968574,6.999301,2.133558,4.209903,-7.048514,-1.426292,5.328317,8.523216,0.985048,9.048994,6.482911,-5.013698,8.335926,-4.921436,3.984028,2.056251,8.132472,-4.550260,4.269716,-2.508346,6.697482,8.351335,3.663742,-3.140138,8.300453,3.326668,-5.003585,-0.854558,3.095046,4.878719,9.117339,4.376965,-1.164044,6.308663,8.654609,8.758536,0.656938,2.922935,2.155750,0.471415,0.652266,6.033047,4.251877,5.282200,-6.130497,3.988867,8.953503,-1.589769,3.190014,-0.215023,-2.943122,8.314125,-6.377543,-7.415992,-4.101277,0.849331,-1.117890,3.489301], dtype = "float64")#candidate|5148|(120,)|const|float64
call_5147 = relay.TupleGetItem(func_1655_call(relay.reshape(const_5148.astype('float64'), [8, 3, 5]), relay.reshape(const_5148.astype('float64'), [8, 3, 5]), ), 1)
call_5149 = relay.TupleGetItem(func_1658_call(relay.reshape(const_5148.astype('float64'), [8, 3, 5]), relay.reshape(const_5148.astype('float64'), [8, 3, 5]), ), 1)
func_2499_call = mod.get_global_var('func_2499')
func_2501_call = mutated_mod.get_global_var('func_2501')
var_5164 = relay.var("var_5164", dtype = "float32", shape = (270,))#candidate|5164|(270,)|var|float32
call_5163 = relay.TupleGetItem(func_2499_call(relay.reshape(var_5164.astype('float32'), [15, 2, 9])), 0)
call_5165 = relay.TupleGetItem(func_2501_call(relay.reshape(var_5164.astype('float32'), [15, 2, 9])), 0)
func_4530_call = mod.get_global_var('func_4530')
func_4533_call = mutated_mod.get_global_var('func_4533')
var_5167 = relay.var("var_5167", dtype = "uint16", shape = (960,))#candidate|5167|(960,)|var|uint16
call_5166 = relay.TupleGetItem(func_4530_call(relay.reshape(var_5167.astype('uint16'), [960,])), 3)
call_5168 = relay.TupleGetItem(func_4533_call(relay.reshape(var_5167.astype('uint16'), [960,])), 3)
uop_5182 = relay.sqrt(var_5164.astype('float32')) # shape=(270,)
output = relay.Tuple([call_5126,call_5147,const_5148,call_5163,call_5166,var_5167,uop_5182,])
output2 = relay.Tuple([call_5127,call_5149,const_5148,call_5165,call_5168,var_5167,uop_5182,])
func_5188 = relay.Function([var_5164,var_5167,], output)
mod['func_5188'] = func_5188
mod = relay.transform.InferType()(mod)
mutated_mod['func_5188'] = func_5188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5188_call = mutated_mod.get_global_var('func_5188')
var_5190 = relay.var("var_5190", dtype = "float32", shape = (270,))#candidate|5190|(270,)|var|float32
var_5191 = relay.var("var_5191", dtype = "uint16", shape = (960,))#candidate|5191|(960,)|var|uint16
call_5189 = func_5188_call(var_5190,var_5191,)
output = call_5189
func_5192 = relay.Function([var_5190,var_5191,], output)
mutated_mod['func_5192'] = func_5192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5102_call = mod.get_global_var('func_5102')
func_5104_call = mutated_mod.get_global_var('func_5104')
call_5234 = func_5102_call()
call_5235 = func_5102_call()
func_2391_call = mod.get_global_var('func_2391')
func_2397_call = mutated_mod.get_global_var('func_2397')
const_5238 = relay.const(10, dtype = "int8")#candidate|5238|()|const|int8
var_5239 = relay.var("var_5239", dtype = "int8", shape = (72, 1))#candidate|5239|(72, 1)|var|int8
const_5240 = relay.const([[-10,9,-10,5,4,8,-6,5,2,-2,-10,-8,-4,9,-4,-6,4,4,-8,2,6,-10,-8,-10,-8,5,9,-8,10,10,4,10,1,-2,3,-1,-5,-3,5,-3,-6,-2,-4,1,-10,9,6,4,5,8,-1,7,7,8,5,-6,-10,9,9,-9,10,-6,7,-6,7,10,-3,3,9,4,3,-7,8,-8,-4,7,4,2,3,-4,4,-6,3,8,9,5,2,6,8,7,8,7,7,-5,-7,-9,-3,7,4,-7,7,-6,4,7,3,-3,7,-5,9,-3,9,9,-8,-9,4,-7,7,-8,-5,-2,-8,-1,7,9,8,-6,3,10,-4,4,-4,-8,4,10,10,8,-9,5,9,-1,6,-3,-3,-2,3,-4,7,-7,-8,10,1,6,-9,5,4,4,-5,1,-3,4,9,4,-10,8,-10,-5,-8,-2,-3,6,2,9,8,-5,3,8,9,-9,-1,-8,7,3,-8,6,-1,-1,4,-2,10,-5,9,6,-3,9,-9,-6,-2,-4,3,2,-2,-9,-2,1,8,-6,7,-7,4,6,-2,-4,3,-3,-7,2,-7,-6,-2,3,-2,9,1,-2,9,-2,2,5,3,-2,4,-10,5,-10,-4,6,-3,5,-8,-1,-7,-10,-9,2,3,-4,8,-8,9,-7,-2,-9,8,9,3,3,-4,-8,-7,7,-4,9,-3,4,-6,9,6,10,-3,9,8,-7,6,7,6,5,3,4,10,1,3,-3,7,-4,-4,-8,7,-7,1,-6,6,-8,3,8,-4,-1,-9,7,-8,8,-3,4,-2,-3,-3,-1,-10,9,-3,-9,5,3,2,4,8,-2,10,1,5,6,-4,-6,-6,-8,-1,3,8,-2,5,-10,7,5,8,-9,1,10,10,8,10,-4,-4,6,2,-2,-3,-1,-6,8,-4,4,10,-9,-9,-8,-4,1,9,1,7,-10,8,1,-10,8,5,7,6,-8,4,6,-8,7,-4,1,-2,4,-4,3,-5,6,-3,-5,-3,-5,-1,-7,8,8,-4,5,-10,5,-5,6,1,8],[-8,-2,6,-8,-10,5,10,-4,-2,10,10,-6,6,-3,-5,-1,-5,-6,4,-7,-10,4,8,6,-7,-2,4,1,9,6,-6,8,4,2,9,-2,-4,1,-4,-9,-3,-9,-8,-6,-6,-10,-1,-6,4,3,-9,-4,-1,2,2,-10,4,-10,2,7,8,4,10,6,-8,-7,4,-8,6,2,-5,3,-2,10,-8,-3,6,8,7,-10,-5,-2,10,-3,3,-6,-8,6,9,5,4,-6,7,-8,9,1,-7,-2,6,5,3,-8,10,2,-1,-9,-6,7,10,-10,-5,5,-6,1,6,-1,-9,1,-4,-1,1,10,-4,3,-4,2,-3,-1,6,3,8,-1,3,-6,-5,2,6,5,10,-1,10,2,-2,4,-5,-10,-1,9,2,-2,2,-5,7,8,8,2,5,-3,8,-7,-4,-3,-7,-2,-10,8,-8,10,-2,3,-10,-8,-8,5,8,-9,8,-1,6,4,8,8,4,1,8,6,8,4,6,-4,-9,1,4,-2,5,-6,9,-9,2,1,-6,10,2,2,3,-6,-10,2,9,4,-4,-5,4,8,-3,-10,7,-3,-3,-8,-4,1,-1,7,10,2,-2,7,-2,-6,3,4,-5,8,5,-4,-10,10,-9,1,-8,3,3,-10,6,-10,1,10,2,-1,6,5,-4,9,-3,5,5,-5,-10,3,-8,-5,-6,4,5,-6,-5,-6,9,-2,-8,-8,-5,-3,-6,10,-7,5,-2,-3,6,-7,-10,8,10,4,9,3,2,10,10,6,-9,-3,9,9,5,6,10,-7,-6,-10,-2,8,9,-6,9,8,-2,-8,-9,8,-2,-1,10,5,-8,8,6,-8,7,-5,5,-4,-6,-9,1,9,4,10,-8,8,7,-8,6,-9,-9,1,10,10,-10,-1,8,8,9,-6,2,3,-3,-4,8,-4,-10,10,10,5,8,-3,-7,-8,1,-5,1,-10,-10,3,-10,2,2,9,1,2,-4,-6,7,9,-2,-9,-2,-5,-5,-8,-7,-4,-4,9,-9,-3,-5,3,-6,8,-7,-9,7,-1]], dtype = "int8")#candidate|5240|(2, 396)|const|int8
var_5241 = relay.var("var_5241", dtype = "bool", shape = (320,))#candidate|5241|(320,)|var|bool
const_5242 = relay.const([-5.764562,1.944233,-6.836446,2.825543,-5.434664,-7.716808,5.283990,-5.911804,5.471300,8.228381,9.040772,8.613484,-0.479580,-7.987814,-2.043391,-2.522785,5.901027,4.745395,-0.236223,1.694057,-9.695513,-2.558019,-5.261464,-3.879026,9.625742,6.299427,4.501246,-0.896783,2.690552,-3.089512,-4.479532,-9.006638,-2.954387,-1.371874,-3.064879,4.701995,8.503201,4.223510,7.459246,-1.143347,3.979150,2.830431,-2.021044,0.796004,-5.954485,7.454032,-3.121197,-4.634281,4.350569,5.540605,-0.796752,-7.494659,8.772102,-8.283514,-1.057042,6.612589,-9.034465,-2.360648,-5.138717,-9.061432,0.619850,-3.586786,3.493186,-5.443235,4.438907,-7.865829,2.868933,8.067944,-2.712669,4.944979,-7.674907,5.366741,0.078100,-9.759070,0.319640,5.416345,-2.804297,-5.592693,-4.439962,0.526269,-2.913404,-9.087108,-9.608642,-4.288083,8.015281,7.824874,-2.466723,-4.369519,7.344495,-7.673470,8.758594,8.813250,8.008242,0.463324,2.838468,2.592355,-9.410497,4.303532,9.284545,-8.150382,0.473609,8.021841,-7.089732,4.566152,-3.060532,-8.541461,7.614954,8.007343,4.086225,0.201593,0.096791,-5.815044,-5.356319,1.201652,-6.845227,-0.398039,1.359631,6.791331,7.140167,4.977011,-0.359891,2.510751,-3.734491,-1.240978,0.242419,-3.113907,-8.840079,-5.972112,-6.629687,5.456369,8.898125,-5.357322,2.620513,-4.748218,-4.380016,-8.895858,6.604650,8.381775,-5.579281,6.038058,7.103137,0.538700,8.285729,-4.021000,5.495855,-3.773993,7.416631,6.460474,-8.161471,4.863844,-7.895777,-3.555570,6.522919,9.016093,6.155133,5.839030,-2.525763,6.838211,-7.703225,2.201185,3.448598,3.314493,-4.177804,0.794623,-3.171585,6.817282,-8.967981,8.417361,2.656424,9.961903,9.778580,6.756178,2.835816,5.915773,-8.888379,5.022490,-5.049097,-2.096443,-7.015122,-4.585518,-6.315256,8.086815,6.868388,-9.336295,5.000107,3.588511,-9.510146,-4.225905,4.104524,-7.865944,-9.261334,9.803001,-0.445163,1.314436,1.900206,9.878952,1.598649,-4.085618,1.913495,-1.362275,6.810104,-8.563525,-9.899165,9.912172,-0.947953,-5.187731,-9.226271,-0.130929,6.603409,5.539606,3.252550,7.209223,3.015237,3.136377,-6.916762,8.381173,9.430437,-5.520424,-3.218480,-4.865839,6.495793,9.298869,-9.153573,-5.008105,8.827124,7.460185,-0.282991,7.726189,-1.571369,9.401003,-0.972143,-6.839688,-7.751894,-3.602134,0.021413,0.314297,2.334428,-3.399422,-4.636322,9.543036,-5.287915,-0.789986,6.595144,-7.453438,-7.484710,2.857704,-6.356488,6.445833,-5.602212,5.518976,-5.735582,-7.664459,0.185433,6.835158,3.741614,9.009233,0.276364,-0.878541,8.566996,1.088748,-1.102635,9.931677,-4.363906,7.603610,-0.941057,-0.561992,-0.075945,-8.055949,1.193099,5.405995,-3.476556,-4.556639,1.034335,0.633545,6.750775,-1.886744,0.301662,-0.282918,-8.470411,-2.666154,-0.083514,9.419379,8.831006,-5.728716,-7.141703,5.601952,-2.955869,-6.251971,-5.026856,9.703570,-6.222233,-8.831237,5.557849,-6.425071,-6.416793,-6.619197,7.401619,6.793277,9.292377,-0.327460,-3.511879,-5.909870,6.792739,-2.039064,-8.971820,-9.598407,0.643530,-9.386688,5.914432,4.750306,7.299078,1.706903,2.726998,1.893122,-8.202880,-1.253631,5.303535,-3.428690,-3.782863,0.965075,-2.737987,7.756937,-2.986537,-3.124669,-2.359029,0.556212,2.812372,0.969423,-8.487129,3.270080,-4.605497,1.885242,-9.605664,-9.643390,-2.148533,-4.584859,1.306283,-5.577480,7.821455,-5.345735,-0.708569,-8.316627,-8.676836,9.970362,-5.294366,8.738455,-2.789491,9.686792,-9.350581,7.188924,9.811700,2.696293,-2.707982,-2.229985,-5.640488,8.057295,-1.987571,-8.343314,2.150198,4.081193,-3.740644,-6.301900,0.042459,-6.415321,-5.583202,-8.251907,1.004249,-2.768713,-5.498592,4.405657,5.398431,7.329163,-3.895209,-3.680973,1.799924,-6.333736,0.790094,4.151292,-6.998396,-6.696563,3.188217,-1.444036,6.944462,-5.908779,0.275024,-4.946738,0.250347,-1.155354,-7.392790,0.699916,9.001707,5.303790,0.423429,6.171389,-7.655425,-6.339881,7.753765,-8.346016,9.233293,-3.672076,5.374530,-3.052279,-0.762944,-1.641552,9.470556,2.464310,8.726605,8.310680,5.095131,-0.266187,2.382195,3.858082,8.894855,1.672909,2.558725,2.686505,-8.850481,5.890402,8.000120,1.740974,7.927433,3.962747,-9.711496,1.062404,4.834262,5.894873,-5.071490,8.804240,6.857315,5.914665,-6.633756,2.366399,-9.664803,-3.502997,-2.356238,-7.286295,-3.141536,5.165340,7.725783,-7.680291,-7.448103,7.941392,-5.790977,3.304971,1.229595,-7.219212,8.477017,-4.549408,-5.939547,7.902152,5.210641,9.430580,2.617394,-6.722438,5.519448,-4.148761,-1.781242,8.998748,-4.513890,-7.344476,2.786972,-8.167050,-5.248462,-8.888333,1.353430,-2.683264,4.038581,-9.128359,-2.231825,5.162823,3.456665,3.613545,4.314890,-2.976526,8.815920,1.582732,-2.806849,-4.932992,3.412643,3.240529,-2.375137,5.879117,4.253271,8.632831,-0.460390,-2.964586,-3.459860,1.182707,-2.318748,5.297850,9.222641,-6.004663,-5.412007,-4.888758,0.443611,-1.707480,4.901800,4.495682,1.333665,-9.827117,-4.034483,6.342821,7.698598,-1.530625,2.206555,2.931490,0.508176,-4.064167,-2.791154,4.234256,-8.246029,-0.613449,2.047938,1.359923,-6.385144,-4.537619,-4.472425,7.609014,-3.234080,0.060402,0.048946,-4.981930,-0.955479,8.767946,-3.851005,-4.363178,-5.435473,-8.335511,-5.861849,7.288947,-2.266425,1.968519,0.632809,-2.849474,8.810289,5.646175,-4.746313,1.825763,-7.393693,-7.808028,7.081353,-4.225641,3.866804,8.481053,-9.339447,-2.144365,-3.612321,3.209823,-6.389433,3.512426,8.638718,-6.237909,2.187504,-9.086639,-8.181686,-9.127884,2.631000,-1.312568,5.335763,-9.379113,-8.729504,-7.226812,7.633759,-2.198495,8.673608,2.268554,6.508398,9.695109,4.793345,-3.184630,-4.296470,1.901235,3.423846,-5.175938,9.485715,-4.911736,8.355097,-3.585395,-9.719596,-6.921271,-2.316281,-7.847232,1.176083,-1.323433,7.836678,2.098907,3.074183,2.744785,-5.766516,-2.399517,1.485592,5.444242,0.898468,2.894727,-4.800252,-7.841382,7.938889,-9.178825,-8.086535,8.987922,-5.954641,0.842578,8.589428,-6.489316,-7.004987,9.925760,-4.933559,-9.089760,-3.991966,4.851715,6.554895,5.127035,6.111637,5.281664,9.745794,8.250557,6.960332,8.389847,-1.069411,-5.966946,-2.928214,-7.389612,-3.161598,3.450670,-3.864189,-1.357333,-3.059001,-2.591954,8.732723,0.610437,-4.113267,-1.214322,9.627611,-4.808401,-7.181905,-5.336112,-7.645281,8.694876,9.817816,2.338755,6.083196,1.956009,0.651181,5.018059,7.386639,4.683211,-6.484401,-8.237976,-2.062681,0.116427,0.160249,2.101412,-5.311909,3.732185,0.671224,0.161272,-5.615867,-4.283155,-1.012186,-9.691636,-4.133761,9.155846,-4.038008,-0.887976,-6.795052,8.945359,1.888502,4.159254,3.942637,8.749492,6.705550,5.101386,2.870134,7.163673,-9.195346,-4.405714,-0.696538,6.934052,6.108304,1.306658,0.400801,0.206199,6.375511,-8.567971,0.696650,-2.309889,-9.885778,-1.591185,2.463136,5.370183,-9.947537,5.359754,0.141532,0.687158,-5.207251,-8.415615,0.147149,9.504271,-0.875938,0.442261,1.453885,-6.985428,7.229937,-5.441358,-8.853039,-2.625137,1.535762,1.894311,-6.557643,0.873486,3.475403,-4.497896,6.747325,-9.518954,3.089610,-5.807415,4.378476,-7.834752,4.363961,3.888058,-5.491748,-2.651570,6.351426,-1.730113,-6.891736,8.449748,6.203512,-2.484183,8.694834,-4.247078,-1.498838,4.104435,6.898998,6.887684,-9.195509,3.386088,-0.594632,-4.234889,4.285127,-6.529618,-6.211992,-0.820531,0.420266,8.294765,7.666017,-1.719728,-5.208297,0.401178,4.928584,-9.383573,5.437939,5.970794,-5.081235,-2.623337,-6.182059,8.324295,-2.295662,3.890140,7.469215,-2.726381,-6.468359,-8.876790,-2.909416,8.627507,-8.712043,-2.069195,8.308729,-1.371412,8.969392,0.528577,4.900502,2.693386,-9.091581,4.831773,2.801439,-5.995765,-0.486413,-5.513480,-4.437746,1.996678,6.053808,1.752881,6.496486,-7.437827,-4.039626,-2.032226,1.533069,3.370671,-8.759577,9.920719,-0.203941,-1.647203,-3.092968,8.046638,-1.300146,-7.688368,-5.862252,-7.666804,1.319447,3.113552,-8.828689,8.048246,5.380748,-3.704218,6.168554,1.003831,9.185044,1.096676,-7.270870,2.794827,5.914537,-8.748199,1.983884,8.344215,-0.069281,-2.039087,-2.694870,-4.854228,-0.996837,-3.748497,-3.833550,3.502806,1.986689,6.917206,2.176325,-1.456441,-7.672615,2.652238,5.035718,-5.691410,2.249019,-0.511070,-8.023432,8.333535,0.500525,8.612915,6.048087,-0.559606,0.148285,-7.015436,-5.234226,8.890768,5.621442,-8.814888,1.286171,-1.138434,3.583522,-7.879464,3.553909,-4.357634,2.644414,-4.574045,-5.119353,7.555559,9.020391,-2.019250,-4.860057,-9.649581,-8.138923,-1.470858,-2.074753,-1.676116,-5.201318,9.857776,-9.894729,-8.038323,2.766363,-5.270677,6.549190,6.771413,1.829448,-0.772824,9.599099,-0.317847,6.146675,0.374671,4.570517,4.057846,5.185443,-1.952302,-1.285073,6.378884,0.331914,0.400969,-4.584786,7.759785,8.105486,4.971503,7.174385,-1.995703,2.199784,-1.939114,-2.917263,-0.765920,-3.154387,7.140700,6.671536,8.435112,9.829624,-9.062919,8.260523,1.599219,4.859957,-9.261829,-7.184926,-3.443710,-4.542567,2.212306,-0.794645,-2.320210,-9.708038,-8.653618,5.620168,-3.538846,-4.651375,-2.203730,4.656942,-5.126219,-5.129228,0.494140,-5.913866,-4.063917,-4.576367,8.838280], dtype = "float64")#candidate|5242|(924,)|const|float64
call_5237 = relay.TupleGetItem(func_2391_call(relay.reshape(const_5238.astype('int8'), []), relay.reshape(var_5239.astype('int8'), [12, 1, 6]), relay.reshape(const_5240.astype('int8'), [12, 11, 6]), relay.reshape(var_5241.astype('bool'), [320,]), relay.reshape(const_5242.astype('float64'), [924,]), ), 3)
call_5243 = relay.TupleGetItem(func_2397_call(relay.reshape(const_5238.astype('int8'), []), relay.reshape(var_5239.astype('int8'), [12, 1, 6]), relay.reshape(const_5240.astype('int8'), [12, 11, 6]), relay.reshape(var_5241.astype('bool'), [320,]), relay.reshape(const_5242.astype('float64'), [924,]), ), 3)
output = relay.Tuple([call_5234,call_5237,const_5238,var_5239,const_5240,var_5241,const_5242,])
output2 = relay.Tuple([call_5235,call_5243,const_5238,var_5239,const_5240,var_5241,const_5242,])
func_5252 = relay.Function([var_5239,var_5241,], output)
mod['func_5252'] = func_5252
mod = relay.transform.InferType()(mod)
mutated_mod['func_5252'] = func_5252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5252_call = mutated_mod.get_global_var('func_5252')
var_5254 = relay.var("var_5254", dtype = "int8", shape = (72, 1))#candidate|5254|(72, 1)|var|int8
var_5255 = relay.var("var_5255", dtype = "bool", shape = (320,))#candidate|5255|(320,)|var|bool
call_5253 = func_5252_call(var_5254,var_5255,)
output = call_5253
func_5256 = relay.Function([var_5254,var_5255,], output)
mutated_mod['func_5256'] = func_5256
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5272 = relay.var("var_5272", dtype = "float32", shape = (14, 16, 1))#candidate|5272|(14, 16, 1)|var|float32
uop_5273 = relay.sin(var_5272.astype('float32')) # shape=(14, 16, 1)
func_995_call = mod.get_global_var('func_995')
func_998_call = mutated_mod.get_global_var('func_998')
const_5301 = relay.const([-10,-8,-2,-1,4,-2,9,9,-5,-7,-7,-8,3,-8,-1,-10,2,10,-10,6,1,10,-1,9,5,-9,-6,7,4,-8,-4,8,6,-1,-8,-4,-6,10,-3,-5,7,-3,2,4,-5,3,-1,-7,-8,7,5,7,-6,-9,8,-7,8,9,10,-6,-6,-6,9,-7,-2,-2,-6,6,-8,8,1,-4,-5,-10,8,2,6,-2,3,-1,4,10,4,9,-5,1,-4,6,10,8,4,2,10,-5,3,-8,9,6,-5,9,-4,7,-7,-1], dtype = "int32")#candidate|5301|(104,)|const|int32
call_5300 = func_995_call(relay.reshape(const_5301.astype('int32'), [13, 2, 4]))
call_5302 = func_995_call(relay.reshape(const_5301.astype('int32'), [13, 2, 4]))
output = relay.Tuple([uop_5273,call_5300,const_5301,])
output2 = relay.Tuple([uop_5273,call_5302,const_5301,])
func_5308 = relay.Function([var_5272,], output)
mod['func_5308'] = func_5308
mod = relay.transform.InferType()(mod)
mutated_mod['func_5308'] = func_5308
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5309 = relay.var("var_5309", dtype = "float32", shape = (14, 16, 1))#candidate|5309|(14, 16, 1)|var|float32
func_5308_call = mutated_mod.get_global_var('func_5308')
call_5310 = func_5308_call(var_5309)
output = call_5310
func_5311 = relay.Function([var_5309], output)
mutated_mod['func_5311'] = func_5311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4231_call = mod.get_global_var('func_4231')
func_4233_call = mutated_mod.get_global_var('func_4233')
call_5317 = relay.TupleGetItem(func_4231_call(), 0)
call_5318 = relay.TupleGetItem(func_4233_call(), 0)
func_1569_call = mod.get_global_var('func_1569')
func_1576_call = mutated_mod.get_global_var('func_1576')
var_5323 = relay.var("var_5323", dtype = "uint8", shape = (2184,))#candidate|5323|(2184,)|var|uint8
var_5324 = relay.var("var_5324", dtype = "uint32", shape = (198,))#candidate|5324|(198,)|var|uint32
var_5325 = relay.var("var_5325", dtype = "bool", shape = (1, 60))#candidate|5325|(1, 60)|var|bool
const_5326 = relay.const([[-0.116849,9.321688],[9.818380,-2.155850],[-0.875177,-2.437714],[-2.059619,-2.001057],[5.431497,6.096373],[-1.922688,-3.392279],[5.023220,5.000661],[-4.840301,6.927958],[7.954340,6.476678],[-8.974371,-5.884643],[-1.522533,-3.333212],[3.632422,-9.200740],[-6.421770,-4.819399],[5.212235,-0.646934],[-4.780464,6.829023],[1.767209,8.635488],[4.361997,4.845349],[0.034848,-2.656187],[-4.891969,-0.804471],[-3.928393,-7.206836],[-5.257031,4.263353],[9.938802,-9.360270],[-6.721593,3.020552],[-5.235840,-7.087712],[7.549016,3.838570],[4.440103,4.387499],[1.645650,2.622380],[-0.108851,-4.796233],[-5.646307,-4.046199],[8.675261,-1.489338],[-6.333520,5.114715],[-3.252440,9.968293],[5.356539,-8.005053],[-9.351343,-1.456094],[2.180686,3.069776],[1.039829,9.636475],[-2.970252,-0.369035],[-5.610813,0.890388],[-9.374305,-9.910488],[-3.692109,-5.750886],[-8.444833,-9.662426],[-6.858859,-3.630410],[-6.794631,9.683433],[0.809298,0.980532],[9.832956,-0.834132],[-2.506611,-6.175886],[-2.607279,-8.985827],[-2.630040,8.694570],[1.615578,-7.363463],[-2.879206,-5.214858],[-7.126222,3.710524],[-7.275864,7.301803],[-1.539213,7.395976],[0.262798,5.670992],[-4.458956,-4.970187],[-5.264718,-7.193827],[0.250549,-1.376670],[3.230534,-4.520042],[-7.997492,-8.957741],[7.983583,-6.372249],[9.141720,-5.400640],[-1.023604,-5.877230],[8.642076,5.107455],[-6.057716,-1.280283],[-6.096474,-8.017509],[7.716189,-2.199111],[-2.511243,-0.267986],[-6.609960,1.351279],[-3.986218,4.567925],[7.440693,-7.186682],[-1.847989,-2.053976],[4.027077,5.432008],[6.014522,4.965376],[-6.982308,1.669001],[-4.598173,-6.837090],[-4.047767,-2.301860],[-3.333192,1.452035],[-2.693355,-2.680401],[-3.337143,9.521364],[6.650933,7.036538],[-0.802135,4.931826],[-7.886375,2.384473],[-6.237595,-6.922888],[0.927773,-4.477801],[-0.363958,9.968720],[0.237251,7.388317],[4.404337,9.665124],[6.107350,3.600909],[1.327517,7.845461],[9.136457,3.618157],[-7.841003,1.579993],[-9.052481,3.950312],[6.150884,3.376967],[4.600465,-9.421918],[-9.455108,0.494088],[3.255868,7.872727],[-9.567024,-8.716049],[-6.590293,6.118206],[5.793495,-0.113578],[-3.522299,-8.205796],[6.562654,-4.625634],[1.069096,1.915305],[-6.452901,2.330067],[8.730107,4.731656],[9.505214,-0.383178],[6.405920,3.428003],[-3.124048,-5.999932],[5.250765,-9.257380],[6.369664,1.166085],[-7.558139,-1.159240],[-5.674401,-5.527389],[-2.806271,4.268442],[9.962686,5.771487],[7.247551,-3.749671],[3.783290,2.521759],[6.050666,1.812305],[-0.024868,0.379805],[9.290580,-5.628773],[-0.103192,7.780240],[-7.987384,-1.768905],[-2.704660,-3.127686],[-4.289027,8.660862],[8.687727,5.894294],[6.417927,6.562566],[7.759258,-1.950851],[-6.027471,-8.406470],[7.004749,-4.674463],[-9.979373,1.159502],[-3.660558,9.086740],[-1.400104,-5.156191],[9.545334,0.700004],[-9.788498,-8.633543],[0.232888,-6.694870],[7.082237,-7.880135],[3.038271,-3.408211],[-1.909251,-2.226500],[0.362146,4.077416],[8.179870,-3.805914],[9.327104,0.974790],[-6.221001,-5.038816],[-5.452106,-6.699446],[9.204392,-4.006271],[6.786034,4.400856],[-5.649184,-7.075666],[3.296837,-5.722678],[-7.683130,1.155817],[-1.712527,6.503039],[-9.811880,-9.818342],[0.662090,0.055411],[-0.567334,6.564802],[-4.277904,0.777314],[-0.828808,9.478507],[9.580330,-0.091804],[-3.366413,-7.922216],[-7.548400,7.587706],[4.411383,2.790489],[-2.182717,1.633065],[-4.067371,-1.615440],[6.768869,-7.904672],[-6.203773,3.427250],[6.094232,1.285514],[1.889600,-2.581404],[5.212792,4.441083],[1.895819,1.541267],[9.636290,-2.169202],[6.159195,-1.717160],[-2.753418,5.792230],[-6.822432,0.369246],[-2.527669,6.817639],[-3.732245,-2.693939],[-2.680427,-6.769213],[-2.025977,1.853586],[-0.385149,-7.342766],[6.970123,8.142837],[4.337239,-5.571806],[1.356512,0.863546],[-9.273570,-6.931700],[-5.759222,-6.846771],[-6.118351,-6.537888],[2.422355,-3.878525],[-9.214821,2.591144],[6.779571,0.147993],[4.980655,4.226426],[5.233412,5.896631],[0.083633,-3.544230],[-4.318613,-5.809611],[8.037525,3.781245],[3.553370,8.358418],[-0.444411,6.516464],[0.719794,-3.659888],[-2.126845,1.335375],[-9.276736,2.164945],[-0.478911,8.068286],[-0.156471,2.474880],[1.487268,-4.612547],[-5.124946,-2.422281],[3.552914,1.332332],[-4.124130,4.461887],[6.624398,6.064035],[1.907985,7.380567],[-3.660427,-1.551031],[2.803703,6.408344],[6.315580,4.232182],[5.352643,-4.922911],[4.659523,3.807304],[-0.407613,-9.010031],[5.908182,6.285412],[-0.973888,4.020649],[-2.297020,1.046869],[6.974113,-2.647758],[1.415357,1.450429],[5.995723,7.799392],[7.220000,-0.521465],[9.880003,6.215637],[-0.745463,-6.417367],[8.248603,-7.286295],[8.130254,2.076145],[-1.937215,9.004256],[5.335168,-4.844710],[6.597750,1.954727],[-5.087414,-1.520669],[-9.110331,-8.310992],[-1.476651,9.867359],[-1.807276,9.233256],[-6.709318,1.042276],[-3.016035,-7.812287],[7.904478,-4.536995],[-2.644405,0.705606],[-9.973275,-2.815037],[3.864975,0.246845],[4.823001,5.306912],[-1.785268,-0.785809],[-0.258147,9.926308],[-2.026648,-3.589526],[-6.061439,-4.122418],[3.774339,4.379800],[9.989960,-3.286223],[8.789506,7.036525],[7.277737,-4.620434],[2.751944,-9.206385],[-3.497271,9.475427],[3.721431,-3.347727],[-6.503791,-8.249223],[-8.439392,6.160172],[6.090864,-5.187185],[-3.035304,-2.263355],[0.405997,0.134926],[7.486188,-0.742498],[-7.916075,-2.476346],[9.310012,1.933357],[-2.264242,7.993162],[-4.839581,-7.218122],[5.788711,-0.949660],[-6.579781,1.297987],[8.888385,2.926916],[-5.690313,3.522500],[7.811026,-7.585758],[-9.602975,-5.038411],[7.141599,-7.992285],[5.545802,1.877082],[8.586560,-4.095518],[-4.066914,9.134263],[-9.825736,-5.984904],[-7.514012,3.566765],[-5.565918,1.060887],[-9.570428,7.046888],[7.291625,6.520690],[-0.898054,3.754012],[-1.088153,-7.275393],[9.961963,-5.144554],[-2.542094,-8.174551],[-2.756953,-3.989360],[8.317233,-6.075943],[8.799218,3.100250],[2.713110,1.373822],[-1.869543,4.837189],[-1.668498,9.140121],[-1.998411,-2.667337],[4.914375,0.056864],[-4.372690,-3.951916],[3.189992,5.084719],[-1.764977,-9.775661],[4.544858,4.061813],[-1.161150,-5.101085],[-0.390781,7.129643],[-5.067456,6.620484],[-6.876401,5.265088],[-8.231670,6.110039],[-2.595509,6.112530],[5.731392,-5.441425],[4.202643,-1.069920],[0.556119,4.409879],[0.135472,-3.604955],[-9.969824,0.567951],[-7.063350,1.773786],[-0.461551,2.102952],[-5.895049,1.201334],[-2.225072,-1.780792],[8.262226,4.033140],[-1.484308,6.823903],[7.028165,8.234104],[5.836483,6.995469],[9.924226,8.853946],[9.405464,3.978276],[6.330873,1.684433],[-5.368423,6.389328],[8.810262,-7.166956],[1.621901,3.592720],[6.433187,-6.171551],[8.365248,1.446606],[3.519090,-7.546112],[9.959122,-4.300799],[-8.116998,-2.218909],[1.305366,-8.658920],[-8.947553,-8.090731],[-1.247666,7.946637],[-7.961757,6.517889],[6.111550,9.485435],[9.811012,4.332073],[9.720592,7.755120],[9.658991,-7.858814],[8.210869,8.903616],[-8.018563,-8.259986],[7.435490,-5.914659],[2.618814,3.265173],[-6.674209,5.332878],[-8.716715,-2.340470],[-6.172862,5.433597],[3.767147,4.942930],[5.494447,0.856781],[-9.364748,-2.704768],[1.125292,-8.771922],[-6.430120,4.913382],[-6.902309,-6.066506],[9.747935,-3.769876],[-5.131141,8.452385],[3.158239,1.163762],[-5.236077,-8.595720],[-7.473886,-7.494036],[-1.265367,-0.788849],[7.979193,9.524621],[4.043510,-4.090801],[0.982432,-7.362574],[9.218663,5.515552],[-0.159607,2.917886],[9.158332,-8.787660],[-4.749925,2.212708],[0.736776,-3.743460],[6.553492,-7.594329],[4.589237,7.995654],[6.411303,9.462899],[-7.855210,5.767717],[7.000894,7.070537],[9.066367,-7.671306],[-1.473961,-3.062873],[2.412338,-7.577155],[-2.855098,7.749643],[-5.954035,-2.026586],[8.789311,-6.976963],[3.257916,-8.783460],[-6.766306,9.452698],[1.101085,8.538833],[-5.490471,3.060976],[-4.153133,-2.322154],[-6.620678,0.972581],[0.619037,-2.424122],[8.289842,-9.435961],[8.028377,7.671038],[-8.077181,7.139383],[-5.310005,8.073646],[-2.393155,-7.523768],[8.497840,0.228956],[8.007611,-9.373146],[8.830947,4.583309],[0.924265,9.356313],[-3.045884,-0.924883],[2.689510,2.850857],[-6.675857,-3.891639],[5.967073,-1.099823],[-9.713411,0.649561],[-2.746690,-8.882078],[-8.424310,-9.035195],[8.126467,-3.500934],[-9.031993,-0.801082],[-4.377968,9.401237],[-1.997322,5.675055],[-1.197706,-5.304692],[-8.230582,-7.115425],[5.409106,-3.014228],[-1.743717,9.723610],[-5.892619,-1.190101],[-8.802080,-0.411958],[-3.512370,-0.546229],[-9.245981,-1.755417],[6.339780,5.473712],[-6.298580,-4.760239],[-8.090708,-6.121590],[9.683396,-7.175931],[9.205193,-3.280036],[1.034746,3.692857],[-9.383603,-9.215584],[0.411964,5.115400],[-9.463923,-3.310953],[3.318012,-0.073763],[4.531653,-3.993646],[1.127678,-8.362367],[8.327770,-4.019240],[-9.465894,-0.557142],[1.881087,7.328300],[-3.882237,3.921583],[4.567573,0.041555],[-0.592448,-4.959543],[-3.054180,-9.751134],[9.525439,8.490707],[2.561028,0.621055],[3.921234,-1.765308]], dtype = "float32")#candidate|5326|(416, 2)|const|float32
call_5322 = relay.TupleGetItem(func_1569_call(relay.reshape(var_5323.astype('uint8'), [14, 12, 13]), relay.reshape(var_5323.astype('uint8'), [14, 12, 13]), relay.reshape(var_5324.astype('uint32'), [198,]), relay.reshape(var_5325.astype('bool'), [60,]), relay.reshape(const_5326.astype('float32'), [832,]), ), 0)
call_5327 = relay.TupleGetItem(func_1576_call(relay.reshape(var_5323.astype('uint8'), [14, 12, 13]), relay.reshape(var_5323.astype('uint8'), [14, 12, 13]), relay.reshape(var_5324.astype('uint32'), [198,]), relay.reshape(var_5325.astype('bool'), [60,]), relay.reshape(const_5326.astype('float32'), [832,]), ), 0)
output = relay.Tuple([call_5317,call_5322,var_5323,var_5324,var_5325,const_5326,])
output2 = relay.Tuple([call_5318,call_5327,var_5323,var_5324,var_5325,const_5326,])
func_5345 = relay.Function([var_5323,var_5324,var_5325,], output)
mod['func_5345'] = func_5345
mod = relay.transform.InferType()(mod)
var_5346 = relay.var("var_5346", dtype = "uint8", shape = (2184,))#candidate|5346|(2184,)|var|uint8
var_5347 = relay.var("var_5347", dtype = "uint32", shape = (198,))#candidate|5347|(198,)|var|uint32
var_5348 = relay.var("var_5348", dtype = "bool", shape = (1, 60))#candidate|5348|(1, 60)|var|bool
output = func_5345(var_5346,var_5347,var_5348,)
func_5349 = relay.Function([var_5346,var_5347,var_5348,], output)
mutated_mod['func_5349'] = func_5349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4352_call = mod.get_global_var('func_4352')
func_4354_call = mutated_mod.get_global_var('func_4354')
call_5351 = relay.TupleGetItem(func_4352_call(), 0)
call_5352 = relay.TupleGetItem(func_4354_call(), 0)
output = relay.Tuple([call_5351,])
output2 = relay.Tuple([call_5352,])
func_5353 = relay.Function([], output)
mod['func_5353'] = func_5353
mod = relay.transform.InferType()(mod)
mutated_mod['func_5353'] = func_5353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5353_call = mutated_mod.get_global_var('func_5353')
call_5354 = func_5353_call()
output = call_5354
func_5355 = relay.Function([], output)
mutated_mod['func_5355'] = func_5355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_5388 = func_4205_call()
call_5389 = func_4205_call()
func_4389_call = mod.get_global_var('func_4389')
func_4391_call = mutated_mod.get_global_var('func_4391')
call_5395 = relay.TupleGetItem(func_4389_call(), 0)
call_5396 = relay.TupleGetItem(func_4391_call(), 0)
output = relay.Tuple([call_5388,call_5395,])
output2 = relay.Tuple([call_5389,call_5396,])
func_5398 = relay.Function([], output)
mod['func_5398'] = func_5398
mod = relay.transform.InferType()(mod)
output = func_5398()
func_5399 = relay.Function([], output)
mutated_mod['func_5399'] = func_5399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_5408 = func_4084_call()
call_5409 = func_4084_call()
func_1428_call = mod.get_global_var('func_1428')
func_1433_call = mutated_mod.get_global_var('func_1433')
var_5411 = relay.var("var_5411", dtype = "uint32", shape = (198,))#candidate|5411|(198,)|var|uint32
var_5412 = relay.var("var_5412", dtype = "bool", shape = (60,))#candidate|5412|(60,)|var|bool
var_5413 = relay.var("var_5413", dtype = "float32", shape = (832,))#candidate|5413|(832,)|var|float32
call_5410 = relay.TupleGetItem(func_1428_call(relay.reshape(var_5411.astype('uint32'), [2, 11, 9]), relay.reshape(var_5412.astype('bool'), [60,]), relay.reshape(var_5413.astype('float32'), [832,]), ), 9)
call_5414 = relay.TupleGetItem(func_1433_call(relay.reshape(var_5411.astype('uint32'), [2, 11, 9]), relay.reshape(var_5412.astype('bool'), [60,]), relay.reshape(var_5413.astype('float32'), [832,]), ), 9)
func_1135_call = mod.get_global_var('func_1135')
func_1139_call = mutated_mod.get_global_var('func_1139')
const_5426 = relay.const([-8.992249,9.855980,-4.202563,3.212207,3.043776,-2.363615,3.890294,-6.131511,-7.659186,-7.829740,3.001044,5.690738,-6.437832,5.897027,-4.949815,-1.132199,-0.094064,-0.344953,5.114128,1.662882,-5.774940,-1.108481,-3.521848,-6.715572,-3.885052,-7.291606,0.541137,-8.788201,-8.323058,2.058421,-3.136375,5.629643,-2.044218,6.285366,-1.359355,-4.970510,-6.470730,-3.538497,2.199320,4.300291,3.913826,-4.223198,7.011263,-3.173402,-4.522081,3.725715,7.483648,6.580743,-6.573265,0.665065,-8.296618,0.322931,-1.699279,6.611335,-6.390230,-3.802063,-9.051807,-6.118954,2.516854,4.056908,0.564685,-5.317092,0.250725,-7.562501,-4.898663,-3.516320,2.202088,5.679713,3.965610,0.463101,-6.364469,6.546508,-3.549229,-2.415439,3.594041,-9.959137,-9.485757,1.796807,-7.850424,2.785627,-5.916009,7.450394,-3.692554,8.758879,6.173993,9.781585,-2.511957,-7.478182,7.524825,-5.022724,-6.618534,3.365264,0.377187,4.422883,-6.139721,-0.092003,-1.175028,-3.362275,7.963810,3.748213,-2.601548,-0.280076,2.590148,-9.488872,2.472405,9.200630,2.516440,3.956584,-7.347222,-7.413843,2.773489,3.775008,5.971229,-1.328561,4.485828,8.534555,4.118602,3.569546,5.470076,8.401684,-2.284749,-1.405253,5.333601,8.772944,-0.823031,-3.565544,-2.425841,-3.590591,2.177512,-7.755112,-2.627472,-7.800798,0.859118,-9.259995,2.322040,-8.960408,4.164618,1.378109,-6.675506,-7.291219,4.605261,-2.307247,-6.108765,1.670014,-1.833951,-8.036417,6.445356,-0.363145,-6.323503,4.803849,-0.562469,-1.880312,2.043230,-6.886101,-4.595655,-4.728912,5.449183,5.801794,4.992518,3.037784,9.340721,-7.083311,-0.019916,3.400174,-8.781196,1.876184,-3.129881,-7.677979,3.818016,0.444377,2.922952,6.015173,8.115783,-5.923571,5.484392,-4.655732,5.984133,-5.446949,7.286339,1.208392,-2.479802,-1.215966,-0.536051,-5.311510,4.490595,7.636302,-6.717780,2.750502,9.208246,-2.479602,9.887397,3.217622,-4.096946,-8.638847,-1.063384,4.616200,-1.627561,6.182253,-8.279284,9.150565,-8.403658,-9.007638,5.402664,-4.263885,6.919226,-1.592459,5.823896,3.200977,6.824792,7.563497,7.002961,-1.463750,-0.203644,-5.806140,-6.280559,-1.291342,-0.529181,5.042437,-7.408495,1.952124,-3.555460,-4.209774,4.092996,1.254419,9.915812,-1.172074,8.123979,1.862833,3.159117,-6.934575,5.705841,-9.078346,9.074887,1.855337,7.914817,8.358949,-4.223627,0.135720,-0.701516,-8.142777,6.300324,-8.355935,-6.600985,-8.963616,-9.314398,8.821042,6.192875,6.709225,9.013816,-5.584703,7.142531,-9.966089,1.104876,-4.024769,8.603839,6.224653,0.049105,9.906930,5.320495,7.977075,9.519630,0.352204,-3.798993,0.382896,-9.994787,-1.307450,-7.944895,9.219286,-6.652919,8.634472,7.666029,-2.972060,-0.354892,-0.048042,8.002724,3.152390,-3.371686,7.817540,-0.359959,-8.491578,-8.360797,-1.171879,7.572396,-0.152635,3.184611,4.732215,9.580470,-0.130096,-1.157191,9.589838,-6.925119,-3.214662,-4.700917,-8.462460,-5.624656,8.634744,5.743097,2.939190,3.202495,6.593242,8.113816,0.100327,-1.589430,0.620956,-5.357090,6.189323,9.839476,7.980225,5.319791,-1.919261,-4.604144,2.665057,-8.924470,8.633280,-6.225085,-3.376294,7.410594,-9.584328,9.798918,-8.615288,1.232740,3.903409,8.737319,-3.617012,-3.260982,8.265127,-8.643824,-5.977767,9.549748,-4.761276,-5.353150,-1.197704,2.200317,-6.693235,-0.422507,-0.882709,-8.748814,-6.065482,6.653722,-6.121199,-7.386757,-9.820833,-7.898088,3.906115,-3.253192,-5.666334,-0.506599,1.866715,2.016504,7.604454,-6.415646,7.762213,8.747939,8.867162,-5.123848,-9.492486,0.349314,3.500520,8.823883,3.383261,8.088860,7.520334,-9.511109,7.919848,-3.672764,7.533847,-3.366306,4.843587,1.719033,-3.387966,-3.358213,-8.033358,-0.883221,-0.068507,-0.766995,8.401764,8.251461,9.194611,5.064923,7.420834,6.981748,7.309739,-5.232475,1.509268,3.154593,1.450295,-1.959097,5.802114,-4.454181,7.350507,9.735030,-2.525281,7.183409,4.893896,-2.542769,-5.462310,6.362744,6.305478,-1.342268,6.029455,2.051214,8.366836,-3.775610,-9.057694,-1.999812,3.610201,-1.267622,-5.145001,-1.457471,1.800637,3.522799,-7.422415,9.481511,-5.036164,0.389765,3.692320,-3.364633,-8.227424,9.623757,1.662264,-0.414616,3.939662,-5.088278,-2.418817,0.881508,8.902943,2.153841,-0.439419,-5.693892,-5.397062,-4.038543,-5.930588,2.935994,-2.947689,0.860127,-1.911672,-1.716919,-7.704558,-5.308206,1.637030,-9.402782,-2.353421,3.883280,-5.106702,8.195725,2.679105,-0.792063,-2.787906,-0.586788,-9.087528,8.897582,-8.249821,5.891140,-9.912813,9.886649,5.683331,4.784910,-4.751416,-1.627306,-2.633931,7.268559,-8.850164,0.226351,4.881381,7.107540,3.732715,5.582050,-8.006146,-3.962439,-1.926637,6.809242,-1.665866,2.078307,3.632907,0.374136,2.220162,7.712472,4.208697,-3.731558,-7.864622,-0.076175,-0.154501,3.387315,-6.279171,-1.805065,-8.065920,7.857416,-0.559871,8.418451,-8.003532,8.490063,4.145178,8.923627,8.271231,-3.370058,2.771698,8.013295,-2.270001,7.888395,-2.800592,7.606133,4.277334,2.321856,6.649899,6.790997,-8.472941,8.174934,6.272338,-4.959712,-4.093590,-2.505063,7.008188,-2.818100,6.847369,2.362320,7.528747,-0.411356,1.365739,-7.761935,-1.639097,-7.780084,-7.821470,-8.579759,0.332474,-5.554069,2.498331,6.447707,-7.063629,-0.175094,7.647544,6.375752,-1.688875,2.853034,-8.137830,-0.863274,6.801314,8.793089,-6.546320,1.148295,-9.789472,-0.172633,1.803946,-8.409980,6.618338,0.390481,-5.913883,8.603496,-5.347075,-6.898884,-1.943443,0.890809,-2.685821,2.756646,-3.488671,-7.872205,-2.468125,4.719214,-3.568795,1.434511,-2.325912,5.042792,0.669997,-8.968835,3.237412,-2.079338,5.826030,-7.969107,-0.934855,2.754295,-4.393189,1.717043,-4.456658,-9.381403,4.944411,-3.900564,-2.604444,-9.039726,-0.610296,7.026617,-4.585899,1.558727,1.978968,0.426423,5.819217,9.153869,-6.263033,-3.417250,0.660872,9.977060,-9.361119,-1.691913,5.001623,-8.442520,7.491457,-1.253838,-9.256749,-8.457581,7.732264,0.144634,-2.225169,-4.295436,-0.007582,3.071453,-7.923407,-5.596832,-2.375615,5.780313,3.713278,2.003621,-1.182916,-2.496016,5.081696,-1.961562,-7.604721,8.880286,-4.664242,6.419602,-1.907579,-5.229900,-6.953095,3.515215,-4.305861,-2.618730,-2.633424,-3.352635,0.477703,3.537809,9.660864,8.657540,-7.294407,-4.204848,8.291813,2.113760,-7.015088,-5.875034,-7.206064,5.294467,-5.747829,-7.233760,0.998158,4.209984,-5.343925,3.445247,2.635557,5.071856,4.633218,-4.194583,-0.916090,-6.970161,-4.139208,2.394145,-2.545064,9.575409,-4.999745,-5.211969,-8.795042,2.278063,-5.040090,8.328380,5.790868,4.210253,-8.395116,7.751171,7.389693,-6.440087,-7.948035,-9.735660,-5.429139,-9.973884,-0.121455,7.986873,-3.192858,6.644036,7.811590,-1.161852,0.070776,-0.681239,-7.527335,-6.792732,4.608759,8.081369,-2.812522,2.202979,4.224716,-5.930146,-2.361914,-4.048390,-1.163429,5.300021,-2.149063,-8.618683,-7.261777,-0.623682,9.980236,-7.398400,8.245343,-4.716904,-8.484291,-9.542931,7.351411,8.710322,-9.015231,9.588580,1.727327,1.562275,-7.058749,8.287513,-4.602550,7.046663,0.630395,-4.593740,7.328344,-3.056980,-3.945327,7.068339,6.930803,2.865371,0.243579,-1.224635,-1.219951,-8.445658,-4.152961,5.140890,4.741448,-2.845693,-9.925744,3.115414,0.708193,0.125340,6.112917,-0.692696,6.459468,-3.673696,-0.125264,7.912407,-8.497267,2.631539,-6.431042,5.320695,-2.021257,-6.505472,0.123861,-0.510407,7.718195,-7.460494,6.718630,-1.669752,9.896097,8.184257,2.700393,-0.871842,-6.975744,-2.005018,-1.313526,9.484655,4.784484,0.300211,3.796834,-5.547061,-4.245748,3.748054,2.036232,-3.188359,2.754919,-8.012776,5.491663,-0.705229,-6.862014,-7.424020,6.714713,0.711689,4.306893,1.648508,6.210992,3.450294,-4.822092,4.763336,-6.957566,-1.395044,7.699652,9.844369,8.792587,-2.656682,-1.999958,-2.870991,-0.500756,1.820449,0.613196,6.108333,-1.792833,-2.233209,5.110789,-9.012528,4.595050,3.125300,0.054072,1.273489,9.165963,-9.388226,-8.714833,6.252353,9.260206,-5.588238,0.310494,6.957947,8.809414,-7.004112,9.513719,-9.211110,-7.090074,9.858029,-5.788324,-1.789127,-9.590578,-5.021265,-0.818663,-4.117594,-8.589022,-7.457413,-3.965192,8.588906,6.438693,-1.960279,-3.338271,6.292448,8.780157,-8.281139,-3.266302,5.840855,3.904585,4.104046,0.989389,9.048236,6.795849,6.794945,5.667309,3.904038,-9.685268,7.932256,-9.350171,7.429449,8.076535,-1.186840,0.064301,8.338869,8.884355,-5.305688,-7.779685,-9.812003,0.177491,3.311833,-4.219621,9.841639,-4.714483,0.205344,3.833350,-8.287728,-5.774430,-4.426081,-0.459277,-8.721107,4.755202,-9.597609,5.940023,2.502490,-6.112429,8.081557,9.314761,-0.984591,-1.748459,-8.964295,-3.192469,-0.608920,9.701361,-0.293500,-0.968279,1.942119,7.227228,4.731074,-3.768475,9.018375,0.404518,2.248303,7.074330,2.119189,3.067188,-7.501041,-9.890175,-9.374948,4.341372,-0.629376,-1.942301,8.718558,2.149825,-0.986345,4.416259,6.521379,-9.239782,4.095557,-3.087758,3.719148,2.267907,3.672736,9.615892,6.490700,0.237354,-8.673887,-3.189571,3.220144,3.015656,9.738770,-0.795902,8.751200,-3.212442,-4.857846,8.356518,-6.815604,2.877439,1.768835,-6.932715,-4.000055,-1.072544,6.048321,-6.673754], dtype = "float64")#candidate|5426|(924,)|const|float64
call_5425 = relay.TupleGetItem(func_1135_call(relay.reshape(const_5426.astype('float64'), [924,]), relay.reshape(call_5410.astype('float32'), [832,]), ), 5)
call_5427 = relay.TupleGetItem(func_1139_call(relay.reshape(const_5426.astype('float64'), [924,]), relay.reshape(call_5410.astype('float32'), [832,]), ), 5)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_5438 = func_4205_call()
call_5439 = func_4205_call()
func_5033_call = mod.get_global_var('func_5033')
func_5038_call = mutated_mod.get_global_var('func_5038')
const_5443 = relay.const([4,9,-6,-10,8,-2,-4,-4,4,4,-3,-10,9,7,8,9,1,-5,-8,4,4,-9,-2,7,4,-9,-4,-10,-1,-2,-8,-1,10,6,1,-2,-7,3,-5,7,-4,8,7,3,-6,9,6,3,-5,4,8,-1,8,-6,6,2,-2,-2,-10,-7,9,-10,-5,3,-1,-6,-2,6,10,-2,-7,-10,7,-6,-4,3,10,-10,-6,2,9,-6,4,-10,-4,-5,-7,8,7,-10,10,6,-7,-2,9,-8,-4,7,6,4,-10,-3,-4,-8,6,1,1,5,-4,-1,-2,9,-5,6,6,3,9,-10,8,1,7,-1,7,-8,-2,-4,-8,-2,3,-6,8,-4,7,9,3,-1,-1,-9,-8,-1,-6,7,-10,-8,-9,-2,6,-5,10,-10,5,3,4,6,9,-4,-4,8,2,-7,-2,7,2,3,-7,5,4,7,10,-2,1,-5,-7,-9,10,-9,2,10,-9,8,-8,5,10,4,5,10,-1,1,9,8,-3,-2,2,-10,7,-4,-2,-10,3,4,-7,-2,-1,-8,-10,-8,3,1,-3,6,-1,-8,-1,7,10,10,8,-8,4,7,-4,10,-8,3,-1,3,9,-5,8,2,3,-7,-5,-10,-5,-4,4,8,-2,3,-10,-5,8,1,4,-5,-7,-8,9,1,4,5,-9,2,-4,7,1,-4,4,6,1,6,6,-2,3,9,9,7,-6,1,4,-3,10,6,7,3,-5,-7,3,8,-5,5,-2,3,-3,-6,-2,6,10,-5,5,-4,7,3,-3,7,-7,-1,7,5,-10,-9,-3,4,6,-10,-7,3,-8,-3,-7,-10,-5,3,6,-3,2,9,-8,1,-2,7,7,-3,-6,9,-9,10,-9,7,5,-4,-4,4,-5,6,-8,-9,4,-2,-8,-6,10,-2,-2,-6,9,-6,2,4,7,-7,4,-1,-5,9,-6,4,-4,6,-5,3,-2,-6,-10,-4,-10,-1,-4,-3,7,-6,-8,8,-7,9,7,-6,2,-3,-2,-9,-7,-7,5,2,1,-5,-10,-4,-7,9,-5,-3,8,-9,-3,3,1,3,-9,9,4,-10,5,1,6,-6,-6,-8,-4,-5,5,9,7,1,-8,5,-4,-6,10,3,-9,7,-7,-2,-1,-2,-6,-10,4,8,-4,5,9,-7,1,6,-8,-7,-9,-9,-7,-7,-3,-5,-2,10,5,4,-7,6,-10,7,-7,-4,-3,-9,4,-3,-4,-6,1,-2,9,2,-6,5,-1,5,-7,6,-4,2,10,-6,4,-1,-8,-3,9,-5,4,-1,2,-2,-7,-1,-5,8,10,2,-6,1,7,10,-9,-1,7,-7,7,10,-10,-4,5,10,8,9,4,7,-4,-7,4,-4,-9,-9,-10,2,-9,-5,-8,10,-5,-9,9,-10,5,-3,-3,-1,10,1,-9,2,-9,4,9,5,-3,3,-2,-4,-8,9,8,6,-2,-7,-1,-10,-3,-10,-6,-8,-9,10,4,8,3,-5,-7,-8,-9,-9,4,-1,-2,1,3,-9,-10,4,3,6,-9,-8,2,-5,-8,1,2,9,2,5,9,10,1,3,-5,-3,-10,1,4,2,10,4,-5,7,-4,5,-4,-5,10,-2,-7,-9,3,-8,8,9,-5,-10,-7,-10,-9,8,-1,-10,-3,5,-5,-8,8,5,7,-4,8,-5,-2,10,9,5,-1,2,-5,-5,-3,1,8,-9,-4,9,8,-9,-6,-2,-4,-8,9,-10,-9,7,5,-5,-7,-8,-9,5,1,-8,10,4,6,-1,-2,-9,4,-2,7,-4,2,-7,8,-10,3,-6,9,-1,1,-8,-2,3,5,9,-5,-8,4,9,7,-3,-7,-5,10,-1,-7,6,-8,-7,6,-6,-8,7,-10,-4,-8,-7,-7,-3,-8,7,-3,-7,2,3,2,9,6,2,6,2,4,-9,4,5,4,9,5,-8,10,4,-3,-1,-3,-4,10,1,7,-4,-9,3,1,1,-8,2,10,-1,1,1,-7,-10,-1,3,-10,9,6,-3,3,-4,4,-8,-1,9,-1,7,5,4,-10,-4,-4,10,-4,-8,8,6,7,8,3,4,-8,-3,-8,-9,-4,9,-5,-9,-5,-3,-10,-6,-5,8,2,3,3,-10,-2,1,1,5,2,-4,2,9,8,-8,-8,10,-8,-9,-8,-4,-10,-10,7,-9,-1,4,-10,-5,6,9,2,5,4,-3,-3,-7,-1,3,4,5,-5,-9,1,3,-1,-3,-4,5,10,-4,-4,-5,-10,3,2,-9,8,-2,-4,-6,9,-8,-8,5,-10,1,2,8,-6,-5,-10,3,-2,5,-2,-1,-2,4,-1,-8,-7,-4,6,-2,5,-9,10,1,9,-8,-8,-1,-7,10,5,-8,6,-3,7,3,3,-9,5,4,7,-6,10,-7,6,4,5,6,-5,-4,-6,-6,-10,-9,4,-3,-5,8,-8,-2,-2,6,10,9,-2,-8,9,-5,-9,-7,10,-4,9,-2,-6,-1,-3,-4,-10,-10,5,9,2,-4,-8,3,-1,5,-8,-6,3,1,-6,-1,-9,7,9,-7,-9,3,3,7,3,-3], dtype = "uint16")#candidate|5443|(960,)|const|uint16
const_5444 = relay.const([False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True], dtype = "bool")#candidate|5444|(320,)|const|bool
call_5442 = relay.TupleGetItem(func_5033_call(relay.reshape(call_5438.astype('float32'), [16, 11, 3]), relay.reshape(const_5443.astype('uint16'), [960,]), relay.reshape(const_5444.astype('bool'), [320,]), ), 2)
call_5445 = relay.TupleGetItem(func_5038_call(relay.reshape(call_5438.astype('float32'), [16, 11, 3]), relay.reshape(const_5443.astype('uint16'), [960,]), relay.reshape(const_5444.astype('bool'), [320,]), ), 2)
func_1569_call = mod.get_global_var('func_1569')
func_1576_call = mutated_mod.get_global_var('func_1576')
var_5465 = relay.var("var_5465", dtype = "uint8", shape = (2184,))#candidate|5465|(2184,)|var|uint8
call_5464 = relay.TupleGetItem(func_1569_call(relay.reshape(var_5465.astype('uint8'), [14, 12, 13]), relay.reshape(var_5465.astype('uint8'), [14, 12, 13]), relay.reshape(var_5411.astype('uint32'), [198,]), relay.reshape(var_5412.astype('bool'), [60,]), relay.reshape(var_5413.astype('float32'), [832,]), ), 4)
call_5466 = relay.TupleGetItem(func_1576_call(relay.reshape(var_5465.astype('uint8'), [14, 12, 13]), relay.reshape(var_5465.astype('uint8'), [14, 12, 13]), relay.reshape(var_5411.astype('uint32'), [198,]), relay.reshape(var_5412.astype('bool'), [60,]), relay.reshape(var_5413.astype('float32'), [832,]), ), 4)
func_2391_call = mod.get_global_var('func_2391')
func_2397_call = mutated_mod.get_global_var('func_2397')
var_5478 = relay.var("var_5478", dtype = "int8", shape = ())#candidate|5478|()|var|int8
const_5479 = relay.const([[-7,10,9,2],[-2,10,-4,9],[7,-9,10,-10],[1,-8,-3,4],[7,-1,10,2],[-10,10,-5,10],[-2,3,-5,3],[-10,-8,5,-4],[10,1,-1,-3],[-7,-4,3,4],[-3,7,1,-3],[-5,5,7,-2],[-5,8,-8,-6],[6,-7,4,-4],[10,4,-5,2],[1,10,7,4],[7,-9,-3,-1],[-6,7,2,6]], dtype = "int8")#candidate|5479|(18, 4)|const|int8
const_5480 = relay.const([1,8,2,3,7,3,1,3,4,6,6,4,2,9,5,-10,7,-4,-9,-10,4,-8,-3,6,1,-5,-3,-2,-4,-5,-6,9,-4,4,-7,-10,8,-7,-2,-10,-6,10,3,-6,-5,-8,-5,4,-8,-3,-3,-8,-2,3,10,9,-10,5,2,-10,4,8,3,-9,2,-7,-8,9,-10,5,10,5,-4,-1,4,5,-9,7,7,-4,1,-8,-6,8,1,-7,-7,9,3,-10,-3,-6,8,-6,-3,-7,-4,3,2,-8,-5,6,-5,5,-6,8,-2,2,2,-6,-8,1,-8,2,6,-6,2,4,6,-9,6,10,4,9,-1,10,10,1,-6,9,-4,-4,7,-6,-9,3,-2,5,-8,3,9,-9,7,-6,-5,-6,2,-5,-7,-1,-8,6,-1,8,-5,-9,6,-5,9,3,-8,3,8,10,1,-6,10,-10,2,2,-1,-6,-10,8,-2,-3,2,2,-6,-7,-6,5,-2,-6,-5,6,9,10,2,-1,1,-5,-2,2,9,-4,-2,-10,-5,1,-5,5,8,5,5,2,-8,8,-6,-7,-10,2,9,8,-8,-4,-5,-7,6,3,-6,5,4,5,6,6,2,-9,10,8,4,9,3,-4,-7,-8,4,8,-1,-9,-4,2,-5,-8,-8,-10,-8,-4,6,10,5,-6,-5,8,-7,2,3,7,5,-10,-4,7,-3,5,-9,5,-6,4,5,-7,8,-4,-3,7,-8,3,9,-8,-9,2,-9,-3,-7,-4,8,7,-1,4,-3,2,-10,-5,-2,-1,-5,10,-1,-7,-1,-5,4,-2,-2,-9,-9,-6,5,-10,-4,10,6,-1,5,9,3,-3,-5,-4,-5,-2,3,5,-9,4,6,3,6,-2,4,-6,-5,-5,-8,-9,-9,9,-9,1,1,-3,1,-10,-10,9,6,-4,-6,3,-8,-9,3,1,4,2,-7,-2,-1,-7,-9,-6,2,5,-8,4,-3,5,2,-10,5,-4,4,-3,10,-7,-6,3,-4,-8,9,10,-4,9,-10,4,8,-10,-4,9,-2,-5,1,6,6,-8,7,-8,5,-9,-6,-2,1,-9,6,-10,-6,7,-1,-1,-9,4,8,-9,1,8,10,-2,-2,5,2,-4,-10,-4,-8,-10,5,-4,-9,-6,10,-8,3,-9,-4,1,-2,2,10,5,-2,-6,2,-2,3,-1,-3,3,-2,1,9,-2,8,2,-2,7,-1,-3,-5,4,-4,-10,6,2,-6,-4,6,-5,-1,-4,4,-9,6,-10,6,8,-8,6,2,10,1,-2,-9,1,5,-3,9,-6,3,-4,9,-8,10,9,-1,9,-4,-1,9,-2,-9,5,-6,-3,-8,-7,-10,-4,-10,2,5,-7,4,1,-2,-10,-8,9,8,3,10,5,-9,-10,-3,4,6,6,-1,-5,-9,-2,-2,3,4,9,7,1,2,-7,-4,4,4,1,-8,6,3,-8,-10,6,8,5,-9,3,8,10,-3,-3,6,-2,-10,6,8,-8,-5,-10,2,-8,4,4,-3,5,9,-3,-3,1,-3,7,-1,10,3,-8,-7,-8,8,-4,-6,-7,8,2,-6,7,2,-1,-10,2,2,10,6,2,-10,7,7,5,-3,-9,1,-8,-9,-9,-1,2,-1,-5,-2,1,3,-10,-1,6,-1,4,-10,-9,3,-7,7,10,-4,4,-1,-8,2,-5,-4,-8,-7,-8,-5,5,3,4,3,-9,-10,3,-10,10,-10,7,-7,8,7,2,-3,2,2,7,4,2,-2,9,-9,-4,-3,2,7,-5,-8,-8,5,6,-8,3,-2,7,-4,-4,3,-10,2,-6,4,5,8,2,5,-3,2,8,10,5,-2,-7,-10,3,10,3,3,-5,-3,-6,-4,5,4,-9,-9,-10,-5,7,-3,7,2,-7,-10,-7,1,1,-2,-1,-10,-3,-5,9,8,-7,-10,2,6,8,4,-7,9,-10,6,7,2,-4,-1,-10,3,-9,4,5,-3,-4,-6,-1,2,-8,-3,-6,-7,3,-5,8,-10,1,8,-4,6,-7,-10,1,-8,-2,-4,-5,9,8,2,-2,-2,-8,8,3,-9,-10,9,-3,-8,7,1,4,3,-4,9,9,10,2,-7,-3,5,7], dtype = "int8")#candidate|5480|(792,)|const|int8
call_5477 = relay.TupleGetItem(func_2391_call(relay.reshape(var_5478.astype('int8'), []), relay.reshape(const_5479.astype('int8'), [12, 1, 6]), relay.reshape(const_5480.astype('int8'), [12, 11, 6]), relay.reshape(const_5444.astype('bool'), [320,]), relay.reshape(const_5426.astype('float64'), [924,]), ), 1)
call_5481 = relay.TupleGetItem(func_2397_call(relay.reshape(var_5478.astype('int8'), []), relay.reshape(const_5479.astype('int8'), [12, 1, 6]), relay.reshape(const_5480.astype('int8'), [12, 11, 6]), relay.reshape(const_5444.astype('bool'), [320,]), relay.reshape(const_5426.astype('float64'), [924,]), ), 1)
func_4478_call = mod.get_global_var('func_4478')
func_4481_call = mutated_mod.get_global_var('func_4481')
var_5488 = relay.var("var_5488", dtype = "uint8", shape = (588,))#candidate|5488|(588,)|var|uint8
call_5487 = relay.TupleGetItem(func_4478_call(relay.reshape(call_5438.astype('float32'), [16, 11, 3]), relay.reshape(var_5488.astype('uint8'), [588,]), ), 1)
call_5489 = relay.TupleGetItem(func_4481_call(relay.reshape(call_5438.astype('float32'), [16, 11, 3]), relay.reshape(var_5488.astype('uint8'), [588,]), ), 1)
bop_5490 = relay.minimum(const_5480.astype('int32'), var_5478.astype('int32')) # shape=(792,)
func_5033_call = mod.get_global_var('func_5033')
func_5038_call = mutated_mod.get_global_var('func_5038')
call_5513 = relay.TupleGetItem(func_5033_call(relay.reshape(call_5438.astype('float32'), [16, 11, 3]), relay.reshape(call_5442.astype('uint16'), [960,]), relay.reshape(const_5444.astype('bool'), [320,]), ), 0)
call_5514 = relay.TupleGetItem(func_5038_call(relay.reshape(call_5438.astype('float32'), [16, 11, 3]), relay.reshape(call_5442.astype('uint16'), [960,]), relay.reshape(const_5444.astype('bool'), [320,]), ), 0)
output = relay.Tuple([call_5408,call_5410,var_5411,var_5412,var_5413,call_5425,const_5426,call_5438,call_5442,const_5443,const_5444,call_5464,var_5465,call_5477,const_5479,call_5487,var_5488,bop_5490,call_5513,])
output2 = relay.Tuple([call_5409,call_5414,var_5411,var_5412,var_5413,call_5427,const_5426,call_5439,call_5445,const_5443,const_5444,call_5466,var_5465,call_5481,const_5479,call_5489,var_5488,bop_5490,call_5514,])
func_5516 = relay.Function([var_5411,var_5412,var_5413,var_5465,var_5478,var_5488,], output)
mod['func_5516'] = func_5516
mod = relay.transform.InferType()(mod)
var_5517 = relay.var("var_5517", dtype = "uint32", shape = (198,))#candidate|5517|(198,)|var|uint32
var_5518 = relay.var("var_5518", dtype = "bool", shape = (60,))#candidate|5518|(60,)|var|bool
var_5519 = relay.var("var_5519", dtype = "float32", shape = (832,))#candidate|5519|(832,)|var|float32
var_5520 = relay.var("var_5520", dtype = "uint8", shape = (2184,))#candidate|5520|(2184,)|var|uint8
var_5521 = relay.var("var_5521", dtype = "int8", shape = ())#candidate|5521|()|var|int8
var_5522 = relay.var("var_5522", dtype = "uint8", shape = (588,))#candidate|5522|(588,)|var|uint8
output = func_5516(var_5517,var_5518,var_5519,var_5520,var_5521,var_5522,)
func_5523 = relay.Function([var_5517,var_5518,var_5519,var_5520,var_5521,var_5522,], output)
mutated_mod['func_5523'] = func_5523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4352_call = mod.get_global_var('func_4352')
func_4354_call = mutated_mod.get_global_var('func_4354')
call_5525 = relay.TupleGetItem(func_4352_call(), 0)
call_5526 = relay.TupleGetItem(func_4354_call(), 0)
func_5516_call = mod.get_global_var('func_5516')
func_5523_call = mutated_mod.get_global_var('func_5523')
var_5528 = relay.var("var_5528", dtype = "uint32", shape = (3, 66))#candidate|5528|(3, 66)|var|uint32
var_5529 = relay.var("var_5529", dtype = "bool", shape = (60, 1))#candidate|5529|(60, 1)|var|bool
const_5530 = relay.const([[0.219407],[-5.690576],[0.069351],[8.562762],[-4.634769],[3.676491],[-6.268784],[-4.095106],[2.793252],[-5.873347],[5.649324],[-9.849433],[2.872174],[4.421343],[0.298731],[-9.373110],[-7.971810],[9.839191],[2.522280],[-5.122776],[8.511757],[-3.306493],[9.493349],[-5.040342],[2.490779],[-1.357780],[-4.679714],[8.992594],[-5.424052],[6.843942],[-0.254676],[-8.226406],[-8.138123],[-9.337299],[-3.567721],[9.589886],[-4.737922],[-7.331458],[-0.789890],[-6.285416],[9.003770],[-8.148200],[-0.029451],[9.477366],[-6.776193],[-3.165780],[3.233413],[2.211921],[5.165069],[4.550272],[-1.064384],[0.454482],[-8.642032],[-5.480056],[-7.257627],[0.019961],[1.843373],[3.914585],[9.020531],[8.502922],[5.054818],[-1.623304],[-0.706467],[-2.087493],[2.650162],[-0.266074],[8.742391],[1.573216],[3.105621],[-5.674909],[-9.650818],[6.092131],[-5.317282],[6.631746],[8.224907],[3.339531],[2.049855],[5.869974],[-8.371823],[0.628126],[7.499070],[9.832879],[9.105942],[9.597577],[3.975201],[-7.322164],[4.192703],[8.242699],[0.474838],[6.067187],[8.183343],[2.569391],[-2.386438],[1.312211],[0.148592],[-8.135509],[-0.267120],[9.555381],[-8.658671],[-3.142690],[-0.668925],[-4.596431],[-7.047614],[1.931090],[-7.387569],[-6.224027],[-0.828243],[-0.872129],[8.525439],[0.828042],[-4.098553],[3.767359],[7.459505],[-8.000477],[8.703898],[0.756107],[-6.567972],[7.416387],[-2.656608],[-5.991627],[2.435372],[-1.773423],[-1.741042],[-4.796955],[-8.425465],[-1.571758],[-5.486687],[8.351488],[-1.703672],[3.371034],[-3.197809],[-0.337507],[-6.609373],[2.592319],[-1.494581],[-2.633063],[3.848928],[3.590211],[8.636990],[7.814501],[3.095028],[5.127081],[9.989967],[-6.254086],[-7.039874],[-1.642059],[-2.703812],[5.172475],[-7.516538],[1.200715],[-6.450627],[0.355662],[3.234910],[-3.727912],[-7.612810],[-6.088614],[4.784741],[1.462555],[5.167065],[2.593299],[-5.354563],[-2.286235],[-0.806364],[3.739177],[6.431018],[5.910930],[-4.103016],[3.755813],[-0.832142],[7.453007],[4.451887],[-3.115938],[4.593737],[9.131137],[1.665597],[-4.177617],[-5.974367],[5.031788],[5.166499],[-9.990463],[5.782990],[-0.889062],[-4.633405],[6.295285],[6.255949],[9.725773],[3.945749],[-3.152668],[-7.399084],[8.161853],[-6.207021],[3.894690],[-1.585052],[2.998015],[3.006179],[-3.048427],[8.018250],[9.321996],[-3.494566],[-4.543500],[6.899014],[-1.256155],[-3.887454],[3.592430],[0.756466],[-8.641104],[-5.560801],[-9.515140],[-1.585494],[-9.914583],[6.571885],[6.016858],[-8.286135],[-4.641385],[9.124392],[-3.935620],[3.519133],[8.569609],[6.921160],[-6.203309],[1.145908],[-6.644259],[-1.757390],[1.731350],[-4.100552],[-6.675280],[-2.994992],[6.041427],[-5.429317],[-3.796389],[-6.853354],[-8.377607],[7.587801],[4.082101],[-1.683757],[5.837798],[4.405147],[-1.768705],[4.198240],[-1.542192],[2.747086],[2.640882],[-2.894180],[-3.469323],[8.464966],[0.845261],[-8.910699],[7.988571],[1.062882],[-7.780260],[-7.418811],[-7.855106],[-1.026148],[5.166402],[-3.889735],[1.357953],[-5.594642],[8.243430],[8.926310],[-6.080505],[-1.747440],[0.098622],[7.051608],[9.592095],[8.130292],[7.963918],[3.187542],[1.269091],[-0.015857],[4.372891],[3.944869],[-3.077252],[-8.422600],[-7.987418],[-3.871759],[-5.301203],[-5.486302],[0.348004],[-0.676786],[5.704273],[-4.872996],[5.292641],[-6.893355],[1.503915],[7.113595],[2.378897],[-0.651105],[-0.636532],[1.537447],[-5.164983],[9.156662],[8.366912],[-5.044517],[-9.546927],[8.689116],[3.992543],[-5.643945],[8.749504],[5.836740],[3.284403],[-4.593806],[1.741402],[-1.370026],[4.493762],[4.043571],[9.123781],[-7.257770],[-6.154925],[0.842400],[1.203195],[-1.909636],[8.644234],[2.334986],[6.062517],[3.824540],[4.073312],[6.354986],[-9.814354],[-0.651830],[-7.793366],[-8.370564],[6.454699],[-9.620630],[8.473297],[-6.816672],[-3.411236],[0.168530],[4.321265],[-6.136128],[-0.081556],[1.027602],[1.689287],[-8.697089],[-2.478338],[3.819738],[-9.758479],[1.474025],[-0.617661],[-3.379357],[8.669224],[-3.853412],[7.466862],[4.057017],[-1.845469],[-5.976067],[-0.846665],[-7.289068],[-4.341602],[5.996877],[-8.837051],[5.405871],[-7.126107],[-0.545025],[-5.473700],[9.841349],[0.032179],[7.968487],[9.582273],[3.397512],[5.184835],[-8.496062],[5.206521],[1.112367],[-9.979749],[-2.262383],[-7.693261],[7.172905],[-2.200159],[1.517262],[-7.034280],[3.188282],[8.864567],[8.787509],[9.064208],[-4.468560],[-2.349277],[-7.912573],[-8.988745],[8.833639],[4.582757],[0.457957],[-3.876732],[-3.309167],[-3.129848],[7.397493],[-5.246545],[-6.231529],[-2.930099],[2.067194],[-3.387013],[-2.177267],[-7.628917],[-7.261598],[-5.833717],[2.020918],[4.655864],[3.774105],[-3.130603],[7.329422],[-7.102859],[1.863936],[3.072858],[-2.636725],[2.484421],[9.923285],[2.134399],[-1.211418],[5.473195],[-7.476293],[7.636061],[2.931626],[-6.383292],[-4.285197],[-4.574541],[9.517015],[-3.453172],[-8.847482],[-5.357830],[2.478618],[-9.300034],[9.999672],[-5.850747],[4.570326],[-3.054601],[-5.894267],[-3.615245],[8.887981],[-2.046822],[9.502410],[7.195010],[7.001803],[0.110368],[1.347767],[-7.086225],[-2.191064],[4.353672],[7.953648],[4.308996],[9.225391],[-4.465162],[0.739893],[9.791273],[-1.305503],[-5.264113],[0.271901],[-3.324396],[-5.673726],[-2.327176],[-8.181243],[-8.250261],[6.837857],[-2.668662],[-4.434650],[6.427246],[-6.313448],[2.146575],[-6.060479],[-1.041130],[-7.426415],[-9.104897],[-3.599323],[9.055145],[6.848036],[-4.475606],[-5.252256],[-6.385685],[-8.410799],[-3.875696],[-9.978652],[2.140491],[-3.997658],[0.402597],[3.202343],[8.893904],[-5.683932],[4.368361],[-3.394029],[9.831362],[-0.563062],[2.446983],[4.777803],[-6.680232],[5.070195],[-0.471305],[2.144291],[-1.907497],[-9.910690],[-8.697000],[4.043746],[7.565089],[-5.421972],[-1.728824],[2.874175],[-8.846157],[3.260051],[3.093405],[9.799977],[-3.736467],[-1.353394],[-6.566333],[-7.247141],[3.323775],[-4.198491],[5.468864],[0.228780],[-2.503291],[2.156381],[2.946286],[-6.198408],[3.857192],[7.837927],[-5.160124],[-5.772505],[2.253609],[1.084623],[-9.710734],[-0.728126],[-9.616045],[-5.453442],[-8.420587],[8.440355],[3.248752],[1.159913],[3.083527],[-7.754126],[2.296170],[2.459106],[-2.129675],[1.412209],[4.936112],[9.367150],[-2.916124],[9.428785],[8.453981],[-3.368456],[-0.798303],[-2.487892],[4.752313],[-7.617928],[6.393153],[0.734659],[-1.527875],[6.722954],[-6.929060],[8.595129],[8.682660],[-9.912634],[-3.398622],[4.654416],[6.898260],[-7.340896],[5.783511],[1.195597],[-4.665481],[7.600869],[-8.956982],[1.507683],[-7.273242],[9.248651],[5.623914],[-9.711705],[4.890956],[-7.708164],[-8.446687],[5.658764],[-5.350883],[2.368655],[-5.554119],[-6.373749],[-6.960108],[8.018518],[-9.531108],[-5.825961],[5.967430],[9.807044],[-7.706997],[3.334030],[-6.998143],[1.462283],[2.720916],[-6.330060],[-7.106032],[8.307151],[-2.751679],[-8.646693],[-6.703781],[0.652247],[-9.903211],[2.252804],[3.366592],[-5.613834],[-8.706660],[-1.918154],[3.231607],[2.480484],[-4.534927],[-9.982794],[-4.317771],[-6.238139],[1.193181],[4.169932],[-8.401257],[-2.441518],[-3.526763],[-1.425819],[8.518641],[2.016502],[-7.574056],[-5.722060],[-7.762301],[3.200841],[-1.078307],[5.270170],[3.957390],[3.277305],[-7.181963],[-7.033899],[-1.180432],[5.191964],[-1.459081],[-6.271051],[-4.305118],[8.863271],[9.451811],[0.645948],[-3.562553],[4.221946],[-6.450248],[8.238779],[-5.593402],[3.307185],[8.565905],[1.908702],[-9.130977],[2.382031],[-6.982605],[-2.889446],[8.986626],[8.231870],[-3.689436],[-6.710200],[9.839053],[6.885572],[4.232447],[-7.292210],[0.034894],[-4.300624],[3.606063],[-4.035250],[3.920116],[5.244244],[-6.925058],[-3.775442],[3.670562],[-7.378523],[-7.395297],[-0.261042],[-5.416661],[-9.697061],[-8.856459],[3.544872],[-9.818469],[6.114041],[1.763879],[3.732749],[6.825433],[-9.826444],[1.305535],[7.029759],[4.020911],[-3.485219],[9.156300],[3.206044],[-8.319850],[5.559397],[-4.333783],[-2.991940],[-8.930602],[9.601531],[-6.151249],[-9.572469],[4.099345],[7.664774],[-2.478463],[6.253927],[-4.785854],[7.992035],[2.218228],[-1.139947],[-8.675377],[-4.718470],[-9.262944],[6.415319],[-6.413695],[9.681075],[-4.359228],[-2.640335],[-6.245243],[-7.872710],[6.500571],[-8.251546],[8.774847],[7.262412],[3.265971],[-7.598363],[3.219300],[-7.499535],[9.427069],[-0.187166],[-4.432579],[-3.743502],[-8.302395],[-5.475775],[-3.651665],[8.800879],[4.057538],[-0.764547],[3.991542],[5.133034],[7.058005],[0.004816],[-6.145028],[-8.798661],[4.602915],[-2.316011],[-3.660940],[-8.512943],[9.886327],[-4.997358],[4.945123],[6.160962],[0.202737],[3.303965],[7.412432],[1.999169],[-2.142396],[3.676602],[3.016522],[0.214309],[9.206702],[-6.593012],[-7.542236],[-8.531235],[-8.530460],[-2.661591],[-6.265544],[-4.986081],[3.038399],[-6.449551],[-0.779606],[0.774514],[-7.791800],[9.561309],[-1.232961],[9.596866],[-4.090488],[-3.725922],[-4.627905],[3.518864],[5.811388],[5.494201],[1.067054],[0.162521],[9.311755],[-1.909844],[-9.624931],[2.137562],[-4.797475],[-2.896037],[2.666745],[-9.981761],[2.764968],[-7.994076],[8.181005],[-6.679246],[5.415363],[-6.011442],[6.738885],[2.559023],[-8.494902],[-4.903300],[2.446324],[6.075584],[0.927213],[3.160487],[4.411620],[-8.898826],[-9.894496],[4.885924],[-1.054242],[-4.701167],[4.097485],[4.246579],[-4.190489],[3.954008],[-9.051054],[6.101508],[6.366258],[3.848579],[-1.464586],[3.796643],[9.696620],[3.840921],[6.953974],[2.661460],[-3.501012],[9.920190],[1.385401],[8.529847],[-8.966562],[-2.395760],[-0.365313],[-2.286679],[-9.143330],[-2.725171],[-5.871427],[6.087906],[-9.632356],[0.002794],[1.570569],[7.022459],[-6.792673],[6.361534],[4.904025],[-6.818212],[8.602993],[-4.195671],[-8.547816],[-5.551041],[5.469520],[-8.208984],[-6.573383]], dtype = "float32")#candidate|5530|(832, 1)|const|float32
const_5531 = relay.const([8,5,7,-4,9,-2,-1,5,-4,-1,-2,-8,1,-2,-7,-5,-2,8,2,-2,10,-8,-6,8,-9,6,-9,-10,10,-1,-4,2,9,-7,10,2,3,10,2,1,7,7,-6,6,6,3,-6,-7,-4,5,-4,-5,-8,-10,3,4,-1,-5,5,-4,-9,-2,-3,9,3,-3,-3,-8,3,1,-9,7,-7,10,-2,-4,1,-5,7,2,-9,9,-3,-3,4,4,3,5,4,2,10,-6,-2,-7,-4,-8,-4,-5,5,5,5,3,1,-6,5,-10,3,-10,-8,3,4,4,-2,6,8,5,1,9,-9,-8,2,3,-5,-2,8,4,9,-1,-7,-8,-8,-8,2,4,2,-8,-1,2,2,10,9,3,2,-1,-10,-3,4,9,9,-7,-5,-7,-6,4,-3,9,6,4,-5,-6,5,-5,-1,5,8,-10,9,-1,8,-2,-10,5,-2,-4,5,3,-1,1,3,-3,9,5,-3,-2,4,2,-6,9,-7,4,5,3,6,-10,-9,-1,6,-4,-4,2,2,-1,-2,-6,-5,10,-10,8,7,4,-10,-2,-2,-7,-5,-6,10,7,10,-10,8,7,-5,1,-10,5,9,-6,6,-7,2,-9,-1,-4,-2,7,6,-5,6,2,10,-8,7,-9,-9,3,2,-4,10,5,4,-1,4,5,3,-8,7,3,-9,-6,-3,-10,10,-7,1,4,1,-10,-1,-5,-2,-9,-8,-10,9,7,-4,-4,-10,7,-2,-9,-6,10,-3,4,-7,-4,-9,1,-2,-9,-5,3,5,-7,10,-10,6,-6,4,-6,-4,5,5,-1,-4,3,5,-5,7,7,-9,-4,8,5,1,-2,-10,-8,3,-3,-2,-6,-4,9,-2,-7,-5,3,-4,-7,10,7,8,-8,-9,-8,7,9,-5,-3,7,8,-4,7,-9,-10,-6,10,4,-5,-9,5,-10,-9,5,2,3,-5,-10,2,7,-10,-1,-8,-10,-10,-9,5,1,4,6,-9,-5,4,7,7,-10,-8,9,5,-9,8,-10,-7,9,-7,5,-3,-8,-6,-5,-8,1,-5,4,-2,3,-2,5,3,9,8,-6,6,10,-1,-8,9,7,-2,3,3,-5,8,4,-3,-3,-9,-2,5,9,-6,-4,-8,10,-1,5,-9,-9,-2,10,6,-6,2,-1,1,-2,-7,-3,-7,-7,4,-4,-2,-9,6,2,3,-8,-8,-4,9,6,-10,2,-10,8,9,-6,-7,-9,-6,-6,9,-6,2,-5,-3,6,-8,5,-7,3,-6,-9,5,7,-9,2,6,-4,-5,-9,10,4,-6,-5,1,-9,6,-10,-7,4,-10,3,-2,6,8,8,3,-5,10,-1,9,-9,-1,-9,8,6,8,5,8,9,-9,3,10,10,-9,2,3,4,2,4,-7,-9,-10,6,8,-4,-4,-8,5,6,-8,-4,10,5,-1,4,-9,-2,-9,-7,-4,3,-7,4,-8,-8,9,-9,9,-2,5,8,-1,3,9,-9,10,-4,-5,-1,-9,1,-10,-6,6,-9,6,-3,10,-8,-5,-3,-1,1,5,8,10,1,-10,9,7,-7,7,-3,-5,5,10,-4,-3,4,7,-2,-3,-7,2,-1,5,-5,5,7,-8,1,-10,-8,1,3,-6,-7,9,-4,-1,1,10,-6,3,6,-8,9,3,5,1,-4,-2,-6,6,-2,-4,10,-9,8,4,3,-10,-1,2,-6,3,-10,10,6,7,-10,-2,-4,9,-3,5,-4,-10,7,-1,5,-3,-9,-4,-7,-6,3,-9,9,8,-10,7,7,3,9,8,-9,10,2,-4,6,-7,-10,-5,-4,-10,-3,10,-4,5,8,7,2,5,3,4,1,-8,6,1,-4,6,-8,9,-1,7,-6,5,2,-4,3,-4,-7,-7,-4,5,-7,-7,-9,-1,1,-10,-10,6,6,1,-8,-4,-7,-10,-9,-1,7,-5,4,-7,-2,1,1,-8,-7,-8,1,-2,5,1,8,-10,2,3,9,-3,6,-5,-3,-8,9,7,-8,-2,10,6,-7,-7,2,-9,10,4,-5,-5,-1,1,8,3,5,-8,-9,7,1,-9,3,-7,-9,9,1,4,-8,1,-1,2,10,-4,-4,-6,-4,1,-10,-2,-9,-3,-6,2,10,-10,10,8,1,8,3,-2,7,-6,-4,-8,-9,3,7,-1,-1,-1,-10,2,1,9,-1,10,-6,7,-5,3,5,3,-5,3,5,8,1,9,7,-5,-8,-8,-3,4,-9,4,-5,8,-1,-6,2,-2,-4,-4,-6,1,4,-8,-4,5,-9,9,-5,-6,5,1,-7,-10,-3,-4,-3,-2,-4,-6,-1,6,-9,6,10,-2,-5,2,-7,3,-7,6,-1,9,-9,6,5,1,-6,9,2,-1,-6,7,5,3,6,-4,-10,-4,7,10,-3,5,2,3,9,9,7,1,7,-6,5,-3,2,-5,-7,-8,-8,10,-10,1,7,7,7,7,-1,-10,4,3,-1,2,3,-10,6,-10,3,8,-3,-5,2,-8,-9,-9,-2,-7,-1,2,-3,-7,-2,-7,-8,4,-9,-4,3,4,-8,4,-5,4,-2,-2,-9,-3,-3,6,7,-5,-1,7,-8,-7,-2,-8,-10,3,-9,6,-3,10,1,-1,8,-5,2,-2,-3,-9,-9,-3,9,2,2,-7,9,3,5,-8,-10,1,-7,4,-1,-4,-8,-1,3,-7,3,10,-5,-2,8,1,-7,10,5,-1,-5,-9,1,1,5,-9,-6,-10,5,-1,-4,-9,-5,4,-10,-10,-9,9,-1,4,-2,4,-3,1,6,8,-4,-2,5,1,-8,-4,2,-7,-6,8,-3,8,-7,-1,-10,-5,-6,-5,1,-10,-7,-8,-8,3,-5,3,-5,1,1,5,2,8,-6,-1,-9,8,5,-6,-10,-8,9,-10,-4,6,-4,1,-2,-4,-1,7,-7,-7,-10,7,3,-2,7,-9,-4,10,-10,2,9,-2,4,-10,4,-5,-4,2,-8,-2,-6,-9,7,-8,8,9,-9,-6,8,-4,-7,7,-1,-1,-3,5,-5,2,2,7,2,-7,-6,-2,1,9,4,3,4,4,8,-9,-4,3,10,7,-7,-1,-7,7,8,10,-1,7,7,-3,3,-8,-2,4,-2,-6,-7,-1,-1,-6,6,2,9,5,1,2,1,-2,2,6,8,4,10,-10,8,1,2,-3,3,10,5,9,-4,8,-6,2,8,-9,-5,-9,-5,-9,4,-1,-10,-4,-2,1,-3,-4,5,4,5,-2,-10,-5,1,-3,4,5,-4,-8,-3,4,10,-6,-7,-10,2,5,5,9,2,5,8,9,-9,8,-8,10,2,2,-6,4,-6,-2,-8,7,4,7,1,4,5,-4,4,-10,9,8,6,-5,-2,3,7,10,-3,-5,-7,6,3,-6,3,-5,-9,10,-6,2,-2,-8,7,4,6,-6,-10,-4,4,10,-7,-2,10,6,8,4,2,-9,-9,-1,-2,-10,9,5,-6,-3,-2,9,-8,7,-2,-4,-4,-3,5,10,3,2,-5,-5,4,4,-2,7,8,6,7,-6,4,-4,5,8,5,10,-9,-1,-5,-8,-7,-7,-10,-7,-4,8,4,6,-7,7,-6,-3,4,-7,-8,3,1,10,-4,8,2,5,9,7,-6,9,-1,-7,6,-3,-1,10,8,-1,1,-2,5,-10,9,-2,2,-8,-6,10,-1,8,9,3,-10,-4,4,-7,-3,5,4,10,-1,-1,-5,8,-3,-9,-4,2,7,-8,-9,-1,-2,6,-6,-4,-7,1,-5,10,-5,8,1,7,3,-8,10,7,-6,8,1,8,-4,-2,9,-4,-10,6,-4,1,8,-2,-9,-10,5,-6,9,-6,4,-3,9,9,-4,3,8,5,-3,6,-9,-6,4,3,-7,-8,7,6,-1,-7,10,10,6,-3,4,1,-6,10,-1,3,3,3,-3,8,-3,-8,7,-10,3,3,3,-5,-3,10,9,3,7,2,2,3,-6,-8,-8,7,-2,-3,6,-5,-2,-2,8,-10,9,4,-3,9,-9,4,5,-1,4,1,9,-9,-1,-1,-6,4,7,1,5,1,6,1,1,-8,5,6,-9,6,-8,9,-2,-1,10,-10,1,9,9,1,-2,-4,10,1,-5,-9,6,8,10,-6,3,-5,7,4,-6,5,-3,4,-7,3,4,8,2,7,-9,-2,10,7,-3,-3,-5,6,-5,3,7,-7,-10,2,-3,3,3,2,-7,1,1,1,-2,6,-9,-1,-5,-1,5,8,-2,8,8,-1,1,7,7,2,6,9,6,-4,-10,9,-8,-1,-8,8,-9,5,2,-5,-9,-8,-4,-10,7,-5,-9,-2,9,-9,-2,-7,7,-4,3,8,6,-6,-3,1,10,-6,-10,8,-4,8,-4,-9,-6,-10,2,-10,-3,9,3,-5,7,4,2,7,-8,1,2,3,-5,-9,-8,-5,7,7,3,-3,-3,-8,-10,10,1,-2,-5,5,5,-9,2,5,8,-9,4,-3,-2,4,5,-2,9,-1,6,-4,-9,7,7,-3,6,7,-6,8,1,-10,8,-3,5,-1,8,-5,10,-10,-5,-3,-5,-2,-1,8,4,8,-1,1,3,-8,-7,9,4,4,2,-10,-8,-7,5,-2,-5,-3,1,2,-5,-8,3,2,7,-7,-5,-8,-1,3,2,5,6,-6,1,3,-10,10,8,-3,8,-6,8,6,-10,-3,6,2,5,1,7,4,4,-3,6,9,-3,-6,10,-10,5,-5,-3,-5,6,-6,9,-10,-4,7,-6,-3,-3,2,5,8,-5,-10,-9,-1,-10,-7,9,-6,-10,-2,-1,-7,-5,10,1,9,10,-6,-6,-5,6,-9,-9,5,-8,-6,-1,5,-10,-6,-2,8,-6,-2,-3,-1,9,1,7,-7,-4,-5,-4,1,-3,6,3,9,10,4,-8,-2,6,-5,1,7,-5,-2,-3,4,1,-3,-3,4,4,9,-2,1,6,3,7,5,-4,-10,10,-5,3,-5,-2,2,-6,10,-3,10,-6,-9,2,-7,-10,5,9,1,8,10,7,-6,4,3,-6,7,5,-6,-9,-5,-10,-1,10,2,-9,10,4,-7,1,-8,-4,-10,2,-5,-9,-1,3,-9,-3,-5,-1,6,-10,-6,4,9,-10,6,6,-2,-4,-3,5,1,3,10,-10,3,-1,10,-4,3,7,5,-1,-8,2,-3,5,6,-10,4,-3,8,6,1,-7,4,-4,-9,8,1,3,8,7,-8,2,-5,-10,1,2,-8,6,5,2,6,-3,1,-2,4,5,-4,-5,-4,-5,1,-6,-6,-2,4,-7,4,-9,6,6,-1,-3,9,-6,-2,-7,8,-3,-8,7,9,-2,4,9,-5,1,7,-10,1,-9,-7,-8,-2,9,-8,-1,10,1,9,5,7,7,-9,10,3,5,-6,4,3,-7,2,9,5,8,-4,-7,9,4,-1,8,-4,5,-5,5,4,1,3,-10,2,2,10,-6,5,5,-6,9,5,7,3,-7,7,-5,-8,9,-2,7,-2,1,4,-3,-8,-10,8,-4,-1,-10,-9,-9,1,-8,-10,-6,-7,-2,-10,1,9,4,9,10,9,10,-8,-6,10,-3,10,-5,-4,-7,-1,-6,-10,-10,8,-2,-4,4,5,1,3,-6,-3,9,-7,6,7,-10,4,-9,-2,9,5,-5,3,-6,10,-1,-10,-4,9,4,-2,4,-4,10,1,-9,-3,7,-2,6,4,7,-10,-2,1,-4,10,-10,-8,-10,10,-9,8,2,-8,2,-6,7,-1,6,5,-6,-7,-9,5,-7,-3,-9,-2,-8,9,-4,2,2,2,-7,7,2,-8], dtype = "uint8")#candidate|5531|(2184,)|const|uint8
var_5532 = relay.var("var_5532", dtype = "int8", shape = ())#candidate|5532|()|var|int8
var_5533 = relay.var("var_5533", dtype = "uint8", shape = (14, 42))#candidate|5533|(14, 42)|var|uint8
call_5527 = relay.TupleGetItem(func_5516_call(relay.reshape(var_5528.astype('uint32'), [198,]), relay.reshape(var_5529.astype('bool'), [60,]), relay.reshape(const_5530.astype('float32'), [832,]), relay.reshape(const_5531.astype('uint8'), [2184,]), relay.reshape(var_5532.astype('int8'), []), relay.reshape(var_5533.astype('uint8'), [588,]), ), 13)
call_5534 = relay.TupleGetItem(func_5523_call(relay.reshape(var_5528.astype('uint32'), [198,]), relay.reshape(var_5529.astype('bool'), [60,]), relay.reshape(const_5530.astype('float32'), [832,]), relay.reshape(const_5531.astype('uint8'), [2184,]), relay.reshape(var_5532.astype('int8'), []), relay.reshape(var_5533.astype('uint8'), [588,]), ), 13)
func_2930_call = mod.get_global_var('func_2930')
func_2934_call = mutated_mod.get_global_var('func_2934')
const_5536 = relay.const([1.181075,-7.883756,0.761361,-0.485927,5.469105,4.415471,-9.477551,-9.094965,6.034343,-4.609975,-4.508456,3.425290,1.826664,-0.586265,3.259744,0.605663,0.765786,6.453415,-4.135257,5.732716,-1.543790,9.247326,4.784570,8.485482,0.327764,3.453062,7.639295,-3.587690,-0.927161,8.225348,8.471004,-8.613938,0.507774,3.257666,-1.586587,0.979895,0.366933,6.464361,-9.115979,8.821671,-4.724171,8.896026,4.242295,-8.143414,6.308410,-8.819426,-9.913511,1.939479,-0.866000,4.151641,4.171966,-4.199496,-8.737505,5.350256,-9.594504,-6.616852,8.573382,6.919575,2.416302,-5.376884,2.870852,0.632718,-6.095322,8.097189,2.445131,6.714918,2.200813,-8.091310,2.460229,3.364195,-7.974734,-2.584245,7.532754,6.440121,3.025617,5.441291,-6.738654,8.303965,1.367498,8.935307,7.138445,-9.584608,-9.911768,-0.413056,-6.131396,-9.550993,5.320385,2.741043,-0.850378,-0.914922,-7.591555,-2.312937,-7.581812,7.390054,0.884980,9.088855,6.460297,9.217818,-4.099278,5.940328,3.165149,5.155146,-3.755366,-7.253036,4.204273,1.063008,-3.499169,-7.542062,8.383135,8.357148,5.794919,5.459331,-7.560036,-2.541800,3.577667,8.686250,1.307135,7.604337,8.599457,-4.153488,-4.112296,2.585473,-0.056170,-2.222569,3.178908,-0.136271,-2.431491,-9.725068,-2.303243,5.672060,-4.797698,5.054566,3.253008,-6.875452,-8.096860,-6.652651,-4.719707,1.198601,9.747214,-2.694760,9.202405,6.547613,-7.170909,-4.003646,5.701101,-6.211995,4.193995,4.376917,5.340069,8.367376,8.783312,-9.278508,4.753914,-4.699603,2.616057,-6.388608,1.582449,-1.849523,8.641889,-7.309121,-8.777778,-9.079838,-4.502397,7.868570,9.181418,8.154790,-7.838163,-2.795840,-6.442774,-7.417776,6.170088,-8.061645,0.934136,7.175427,-1.183652,4.535690,-5.619865,-4.511517,1.341124,-4.352340,-3.878020,5.328894,-9.968632,3.152819,-8.713161,-7.353374,-8.100864,-2.883626,-4.321761,-1.084992,-9.030486,1.178110,3.659106,6.282419,2.550744,-2.566229,-0.470169,-9.326652,1.717315,6.578106,-3.778249,-2.193996,-3.991624,-6.063995,-1.875918,6.262785,-9.448367,4.725368,-8.014199,-7.532106,4.908696,-1.634544,1.113808,-0.383826,-1.586345,-0.583341,7.594203,4.123360,-8.428950,-0.372068,-0.159512,9.306170,9.603034,-7.770786,1.681325,6.205255,2.079501,-8.154346,8.582344,-1.475185,-7.912861,-0.243500,4.777286,-1.212379,6.051152,-9.971798,-6.927573,-8.751320,-7.110791,-1.487669,1.543347,-5.256136,0.238433,5.654526,2.368460,-6.270253,9.700337,-8.767068,-2.508257,-9.490222,3.845106,2.234477,-9.521991,9.644659,-1.190690,-6.375583,-0.540962,5.486409,-5.583670,-5.140424,-9.478789,6.988718,0.942193,-4.645986,-1.140886,6.202380,5.601616,-0.297370,-1.202591,-9.989823,5.357179,-7.904652,-9.002306,2.485127,2.079894,-1.759489,-6.597688,4.159577,9.322700,7.503257,-9.487829,-8.565731,4.710474,9.635755,-6.855048,-5.176839,-6.535434,7.711055,-2.399071,9.910858,-6.479599,6.192914,-0.231091,-5.776771,-7.386031,1.360336,-2.935025,-3.475983,-0.141679,5.266884,-3.053117,-6.674836,3.523860,3.295895,-2.481498,5.747063,-5.228888,6.580168,7.887086,1.029602,9.286395,-1.087256,-3.661779,0.831172,-2.759195,6.822189,7.772707,3.700821,-5.973760,-2.429879,-1.768214,7.335525,0.818069,1.197043,0.812917,-4.965850,7.466776,-2.358927,-8.547839,0.934313,3.965630,9.256825,-4.602566,3.213966,1.832841,-1.904494,1.808618,-6.417495,-9.382858,5.652021,-3.126199,9.780782,-0.228179,9.831973,5.169605,3.769928,-0.819990,2.918151,8.712564,2.219534,0.011526,-0.334189,9.813795,4.173496,-2.615080,1.144203,-6.018223,3.183226,2.587378,0.427296,3.130651,1.757856,8.902076,-1.234495,3.959795,2.490462,9.198210,2.802566,9.733558,0.045068,4.512682,-5.591241,4.029719,-8.865692,2.594372,1.639582,-0.028093,-8.740263,-7.202610,-0.644434,-3.154110,-2.719139,-9.650291,-1.692435,-9.941159,0.174040,0.698011,1.879665,3.240769,5.038633,-3.215398,4.900049,1.814849,-2.404916,6.294511,7.066402,5.458405,2.137710,2.844369,1.542637,8.792415,0.499893,-4.234181,9.831953,-6.207238,-2.819957,-9.433241,4.836484,8.923107,9.833914,-3.630964,-3.722030,-6.516870,7.427910,-0.668644,0.766441,-6.459903,-8.076386,9.614268,-8.214801,-7.961085,-4.331905,9.002033,-5.255713,-1.934548,0.931661,-4.860631,-2.223654,6.850994,-7.638710,-8.972495,-8.316108,-5.844010,1.198088,-7.483844,4.073522,3.545127,6.226020,9.987223,5.209511,5.018178,-1.166945,1.460535,-2.588627,6.624062,-3.507752,-6.529315,-7.342128,0.526745,2.422425,0.122706,-3.523228,-6.976431,5.612440,8.414067,4.161744,9.607142,-4.008213,-1.503801,-5.070021,0.735506,1.461727,0.070241,-9.856222,-1.918115,-9.486788,-3.159230,-0.925392,6.941923,-6.235367,-0.619286,1.733857,0.073662,-6.739857,0.952841,5.534758,3.523778,-5.090413,-5.675495,7.044361,-4.465422,0.117043,-6.573321,-4.290374,2.482575,-5.578645,-1.337802,-2.670695,5.836629,-6.759390,1.172722,2.593086,-2.343664,1.696053,-1.865580,9.541396,-6.203589,6.434647,-5.421228,-9.952947,-3.929117,-6.162128,6.715320,4.732342,0.425918,3.357849,5.786958,-2.294803,-7.326998,1.616398,-1.469573,-9.662248,4.733972,-9.922514,3.203529,6.373670,3.513643,-8.792407,-3.875299,-9.257668,2.192945,-8.829169,-9.336572,3.371850,-2.834521,-8.686772,6.664758,-0.139181,-0.049317,2.755618,3.298652,-2.899279,-7.630937,5.524884,-4.982117,-3.772550,0.936531,-4.417012,6.395001,6.953304,-2.915898,1.889557,-1.108684,-5.398849,-8.635952,-6.241533,7.240561,-9.767776,7.768036,-7.024712,3.510107,-3.253448,-1.356508,6.396437,-9.393968,4.416546,-6.673355,-4.141430,-3.146489,8.927167,-2.729864,1.694863,-7.182907,5.709761,9.532818,5.201701,8.376884,-4.895436,1.809249,5.761508,-0.898042,-6.704038,7.714704,0.572978,-6.187456,-8.146395,-6.309489,-0.866867,-1.049667,-5.520867,9.833806,-8.716254,2.775052,-9.137291,-1.675728,-6.893883,8.945365,2.304105,-5.080418,-7.719673,-7.686073,4.559332,-0.916885,7.169027,-1.666463,0.867775,-6.449782,-5.936270,-0.104374,-6.964205,-7.818472,8.719326,8.260109,7.772485,2.455842,-8.599009,-7.666426,-3.905451,0.856393,6.604653,8.057712,-4.493784,3.174730,-6.077186,1.045558,-3.010362,9.608034,3.450686,2.327170,-8.639962,1.823098,-0.791070,3.790411,-5.699084,-1.321062,-7.343514,-1.963403,5.683187,7.040189,1.976599,-4.722201,-4.014757,6.972084,2.773980,-5.898572,1.718098,-9.429106,-7.561500,-6.035533,8.752154,-9.146640,4.041722,-5.640402,-2.734879,-8.094177,-4.226267,-6.331839,-9.396219,3.115647,-3.330228,-5.304739,6.601325,4.335514,-8.372906,-5.734142,-4.850214,7.763699,-1.389756,8.805197,0.939860,-8.499767,-2.651233,-8.453582,5.604168,-2.204084,-3.438408,4.786344,-4.239809,9.941813,0.999105,-4.913124,-1.856306,0.538330,4.354974,-9.305820,-3.256538,-6.099430,7.952523,9.346657,-4.312517,-2.431555,-7.410928,-7.179611,-5.874546,9.396326,-7.707478,3.160045,9.616644,4.540963,3.445277,8.434688,-9.083875,4.437077,7.895396,-0.223332,-8.943842,-1.684067,7.048747,4.844603,-5.408902,9.652868,-4.307955,0.043566,1.848157,-3.894324,-5.472709,-8.051414,-4.875972,-7.826289,-7.254757,7.651234,8.585696,-8.993320,7.019381,-4.453692,-1.086496,-0.221358,5.437561,9.312698,-4.612794,2.388107,1.531176,4.417950,5.717698,1.120748,7.389338,4.721382,-8.734807,8.700277,3.747470,9.617022,4.592514,5.729027,-3.803516,4.843949,-5.813784,4.403770,-8.574636,3.900060,3.238259,3.605264,-5.580136,2.929297,-5.771333,-3.272914,4.541482,-5.627895,5.124150,3.631535,-2.169863,-6.563277,2.470472,-4.745073,-9.319752,-2.071589,9.020436,-2.414638,-0.302059,-8.829710,-6.899297,-2.422853,4.842037,-7.575867,-7.955917,-3.607104,-1.043170,-3.364436,-5.535687,9.712322,-5.703413,-9.949234,-7.586519,1.438831,7.726085,0.349417,-3.338751,1.894902,-3.704155,-2.798806,5.538914,0.472222,2.139309,1.542635,6.794577,4.237304,-7.202710,4.277637,-5.484500,6.335241,-3.101857,-4.625584,5.810288,-9.609712,3.740254,-7.664601,8.064093,7.396360,2.671934,8.338835,6.248602,1.134947,-6.350099,-2.188862,3.156796,-9.336855,4.333315,4.597519,-8.437795,-2.862658,-7.921224,-8.777267,4.742286,8.167818,7.982770,2.666496,7.762262,-8.335159,1.091202,-9.975593,4.159528,-8.399058,9.889523,1.070571,-4.795671,-1.411782,-8.554649,-3.165277,-3.878574,1.792744,-7.161106,-2.096082,8.777816,-1.774617,-7.361215,4.804569,4.140588,-2.278704,1.112431,4.443568,3.995374,8.002134,-2.710883,4.613501,5.064935,-0.203252,9.373154,7.038486,-3.117032,3.636846,-7.673195,-5.793800,3.189387,4.971902,-3.626445,-7.201292,-8.510618,9.884306,2.114225,4.179015,7.426500,5.409607,-0.936437,0.905520,-3.177850,7.407117,-4.634250,-1.211864,-4.256698,-6.082059,-2.910065,4.641057,-9.842500,-9.762717,6.418527,-3.178061,0.190177,-4.359336,-7.117430,-6.325824,-6.013484,-5.483022,7.881206,-3.522469,-6.167094,-0.934724,7.636637,3.614808,3.546635,-2.942076,3.262221,7.608164,-3.081684,-1.497668,-1.383826,7.816729,9.545393,5.263885,-4.071837,-9.535855,-3.370052,-5.946838,-4.303617,-5.916032,2.326223,8.358242,9.674568,1.551176,-7.085767,0.930157,6.456368,4.994443,-8.208250,6.666765,3.916739,2.542999,4.400251,9.104133,5.206044,2.257571,-1.850717,5.343840,8.697295,2.114905,-7.136788,-5.726199,4.673686,-7.901505,-0.221874,9.229020,-5.103207,-7.632413,-0.094786,3.037143,8.872773,-5.594510,1.844031,3.827258,-9.396890,-5.214038,2.521592,-7.233403,6.734869,-5.661997,6.969554,9.801245,-2.547603,0.100729,9.042323,-5.336224,6.404928,7.840443,-5.762829,3.607858,5.542173,-9.007943,8.433701,-2.522082,5.419688,-3.424855,-5.504937,-5.367391,5.552679,0.166522,1.262780,6.538168,-3.463078,4.293689,-9.032965,1.014628,1.536647,-5.365086,9.396734,5.602642,-7.376423,0.372161,8.012122,7.996879,1.318198,9.826807,2.779143,5.495705,8.867059,-3.336239,4.872817,-8.034704,3.652585,8.911372,1.126965,-8.574888,9.205372,-2.907052,0.629036,6.065715,-4.882141,7.728130,-4.351066,6.881837,-3.046313,8.632622,1.974287,-7.582355,-1.826930,3.208994,-9.242049,5.517016,0.826980,-4.310665,-2.757259,8.910063,-0.708088,-3.570210,2.061470,2.758548,1.302878,-7.301982,-6.459938,-3.461594,-3.401384,-7.031296,9.565786,-2.653004,4.709423,9.756670,7.752354,-8.871516,-5.879212,-4.832140,-3.726560,8.035709,-8.170856,-3.410119,-4.390968,0.644443,0.958706,7.258180,-2.230740,2.579346,-2.757921,1.065723,-6.071041,3.434605,-5.786050,-3.406162,8.242842,-0.558184,3.654136,-4.644990,3.494986,4.092307,0.319396,8.779484,-7.582693,2.384392,-5.530115,-8.107052,-0.524305,7.769999,4.886140,3.321345,1.740874,-7.009418,9.983457,-1.267463,3.611333,6.113627,-2.390279,-5.365284,2.120587,3.015904,-9.180593,-5.004237,4.566026,0.465711,-2.680152,-5.082815,-7.589864,-5.940337,0.570062,1.240453,-6.220274,-6.894363,0.480017,-4.318673,-9.818253,-3.079421,8.596626,-9.344411,-3.579431,-7.633092,-2.084364,-6.483854,0.500461,-8.265159,5.345414,4.631511,-4.363145,-3.114406,-8.554500,9.628434,-9.218496,9.765832,-8.008894,0.251960,1.793330,9.556429,-2.523939,6.779340,1.596507,-1.543011,9.040404,-6.199416,6.740851,7.264813,5.260315,1.975239,9.623959,-5.253885,-8.878654,-3.367816,3.181003], dtype = "float64")#candidate|5536|(1120,)|const|float64
var_5537 = relay.var("var_5537", dtype = "float64", shape = (120,))#candidate|5537|(120,)|var|float64
call_5535 = relay.TupleGetItem(func_2930_call(relay.reshape(const_5536.astype('float64'), [14, 8, 10]), relay.reshape(var_5529.astype('bool'), [30, 2]), relay.reshape(var_5537.astype('float64'), [120,]), ), 1)
call_5538 = relay.TupleGetItem(func_2934_call(relay.reshape(const_5536.astype('float64'), [14, 8, 10]), relay.reshape(var_5529.astype('bool'), [30, 2]), relay.reshape(var_5537.astype('float64'), [120,]), ), 1)
output = relay.Tuple([call_5525,call_5527,var_5528,var_5529,const_5530,const_5531,var_5532,var_5533,call_5535,const_5536,var_5537,])
output2 = relay.Tuple([call_5526,call_5534,var_5528,var_5529,const_5530,const_5531,var_5532,var_5533,call_5538,const_5536,var_5537,])
func_5546 = relay.Function([var_5528,var_5529,var_5532,var_5533,var_5537,], output)
mod['func_5546'] = func_5546
mod = relay.transform.InferType()(mod)
mutated_mod['func_5546'] = func_5546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5546_call = mutated_mod.get_global_var('func_5546')
var_5548 = relay.var("var_5548", dtype = "uint32", shape = (3, 66))#candidate|5548|(3, 66)|var|uint32
var_5549 = relay.var("var_5549", dtype = "bool", shape = (60, 1))#candidate|5549|(60, 1)|var|bool
var_5550 = relay.var("var_5550", dtype = "int8", shape = ())#candidate|5550|()|var|int8
var_5551 = relay.var("var_5551", dtype = "uint8", shape = (14, 42))#candidate|5551|(14, 42)|var|uint8
var_5552 = relay.var("var_5552", dtype = "float64", shape = (120,))#candidate|5552|(120,)|var|float64
call_5547 = func_5546_call(var_5548,var_5549,var_5550,var_5551,var_5552,)
output = call_5547
func_5553 = relay.Function([var_5548,var_5549,var_5550,var_5551,var_5552,], output)
mutated_mod['func_5553'] = func_5553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4795_call = mod.get_global_var('func_4795')
func_4797_call = mutated_mod.get_global_var('func_4797')
call_5565 = func_4795_call()
call_5566 = func_4795_call()
output = call_5565
output2 = call_5566
func_5598 = relay.Function([], output)
mod['func_5598'] = func_5598
mod = relay.transform.InferType()(mod)
mutated_mod['func_5598'] = func_5598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5598_call = mutated_mod.get_global_var('func_5598')
call_5599 = func_5598_call()
output = call_5599
func_5600 = relay.Function([], output)
mutated_mod['func_5600'] = func_5600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4795_call = mod.get_global_var('func_4795')
func_4797_call = mutated_mod.get_global_var('func_4797')
call_5623 = func_4795_call()
call_5624 = func_4795_call()
func_5546_call = mod.get_global_var('func_5546')
func_5553_call = mutated_mod.get_global_var('func_5553')
var_5626 = relay.var("var_5626", dtype = "uint32", shape = (198,))#candidate|5626|(198,)|var|uint32
const_5627 = relay.const([True,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,False,True,True], dtype = "bool")#candidate|5627|(60,)|const|bool
var_5628 = relay.var("var_5628", dtype = "int8", shape = ())#candidate|5628|()|var|int8
var_5629 = relay.var("var_5629", dtype = "uint8", shape = (7, 84))#candidate|5629|(7, 84)|var|uint8
const_5630 = relay.const([9.871094,9.152147,-1.902526,-3.192647,7.176182,-2.468640,-1.881087,-0.833601,-1.485995,9.217495,2.845797,-4.322811,7.994075,-8.224133,-9.513819,8.941589,-4.440071,4.814069,-0.904362,-4.186596,-3.334474,-3.849864,-8.282449,9.190396,-1.345217,8.595619,3.001254,2.388448,-6.043325,9.748927,-1.272307,-6.437322,1.634750,4.795176,6.238067,9.585370,-5.628149,-0.254074,-0.531901,-3.974876,-1.379185,-5.462558,0.829913,9.310047,5.026670,-1.045180,0.592277,-5.808393,-0.779835,-7.287862,4.251431,2.939436,-5.517729,-8.207431,-6.009599,4.472597,-9.756502,-8.765263,2.252133,-7.943939,-6.757369,-4.828889,4.327004,-3.925888,0.455572,-2.053120,-4.208699,-7.829304,4.710542,0.026625,1.985354,2.933548,-0.507266,2.170383,4.466390,-0.857525,-7.366524,9.188038,7.392977,5.652033,7.079407,-2.732310,-3.816950,-3.849900,9.938475,4.515978,-8.040619,9.718229,-6.900114,-2.962138,-8.915102,5.529383,-5.917100,-1.775752,-6.443594,-5.378393,6.856489,7.498075,3.500724,-6.327849,4.169056,-1.390299,-0.033978,-0.494462,-1.948341,-5.130450,3.206515,-1.900437,-6.546267,2.041670,-3.263934,-6.864665,-3.125388,7.424708,2.065315,4.735556,4.174981,-8.351758,5.625499,-5.943126], dtype = "float64")#candidate|5630|(120,)|const|float64
call_5625 = relay.TupleGetItem(func_5546_call(relay.reshape(var_5626.astype('uint32'), [3, 66]), relay.reshape(const_5627.astype('bool'), [60, 1]), relay.reshape(var_5628.astype('int8'), []), relay.reshape(var_5629.astype('uint8'), [14, 42]), relay.reshape(const_5630.astype('float64'), [120,]), ), 5)
call_5631 = relay.TupleGetItem(func_5553_call(relay.reshape(var_5626.astype('uint32'), [3, 66]), relay.reshape(const_5627.astype('bool'), [60, 1]), relay.reshape(var_5628.astype('int8'), []), relay.reshape(var_5629.astype('uint8'), [14, 42]), relay.reshape(const_5630.astype('float64'), [120,]), ), 5)
func_995_call = mod.get_global_var('func_995')
func_998_call = mutated_mod.get_global_var('func_998')
var_5634 = relay.var("var_5634", dtype = "int32", shape = (104,))#candidate|5634|(104,)|var|int32
call_5633 = func_995_call(relay.reshape(var_5634.astype('int32'), [13, 2, 4]))
call_5635 = func_995_call(relay.reshape(var_5634.astype('int32'), [13, 2, 4]))
output = relay.Tuple([call_5623,call_5625,var_5626,const_5627,var_5628,var_5629,const_5630,call_5633,var_5634,])
output2 = relay.Tuple([call_5624,call_5631,var_5626,const_5627,var_5628,var_5629,const_5630,call_5635,var_5634,])
func_5667 = relay.Function([var_5626,var_5628,var_5629,var_5634,], output)
mod['func_5667'] = func_5667
mod = relay.transform.InferType()(mod)
var_5668 = relay.var("var_5668", dtype = "uint32", shape = (198,))#candidate|5668|(198,)|var|uint32
var_5669 = relay.var("var_5669", dtype = "int8", shape = ())#candidate|5669|()|var|int8
var_5670 = relay.var("var_5670", dtype = "uint8", shape = (7, 84))#candidate|5670|(7, 84)|var|uint8
var_5671 = relay.var("var_5671", dtype = "int32", shape = (104,))#candidate|5671|(104,)|var|int32
output = func_5667(var_5668,var_5669,var_5670,var_5671,)
func_5672 = relay.Function([var_5668,var_5669,var_5670,var_5671,], output)
mutated_mod['func_5672'] = func_5672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_5677 = func_4205_call()
call_5678 = func_4205_call()
output = call_5677
output2 = call_5678
func_5681 = relay.Function([], output)
mod['func_5681'] = func_5681
mod = relay.transform.InferType()(mod)
mutated_mod['func_5681'] = func_5681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5681_call = mutated_mod.get_global_var('func_5681')
call_5682 = func_5681_call()
output = call_5682
func_5683 = relay.Function([], output)
mutated_mod['func_5683'] = func_5683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4352_call = mod.get_global_var('func_4352')
func_4354_call = mutated_mod.get_global_var('func_4354')
call_5694 = relay.TupleGetItem(func_4352_call(), 0)
call_5695 = relay.TupleGetItem(func_4354_call(), 0)
output = relay.Tuple([call_5694,])
output2 = relay.Tuple([call_5695,])
func_5699 = relay.Function([], output)
mod['func_5699'] = func_5699
mod = relay.transform.InferType()(mod)
output = func_5699()
func_5700 = relay.Function([], output)
mutated_mod['func_5700'] = func_5700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_5707 = func_4084_call()
call_5708 = func_4084_call()
func_1377_call = mod.get_global_var('func_1377')
func_1380_call = mutated_mod.get_global_var('func_1380')
const_5725 = relay.const([7.656647,7.762964,2.773931,-7.096113,-3.763486,4.779544,-9.712530,-5.116065,7.622798,-5.320995,7.853843,-3.728781,-7.093748,6.346325,0.985405,8.249551,-0.743860,-6.162652,-0.481360,7.231873,-9.233428,-5.716036,-4.363981,-0.646960,-7.162601,-5.001858,8.095920,-8.326733,7.489456,-1.217874,-1.107534,7.415048,-7.690444,-7.286003,-1.041718,-2.883630,3.826931,-0.320824,9.538721,1.115418,9.640945,0.221080,-5.968056,4.253395,5.584320,-5.844417,9.713357,-2.853912,-7.948354,-1.391091,5.244578,3.394953,-8.589171,-6.820519,0.196334,3.987458,-4.553400,2.331868,-3.303106,-9.585569,-3.965179,5.721833,-5.979085,-9.565571,0.266505,-3.223823,7.122903,4.098797,7.378745,9.871211,1.234978,9.473067,3.270725,-7.529107,6.521993,5.686074,4.291018,8.920908,6.184621,-0.359914,9.768903,0.625873,2.055127,-5.747120,-5.089289,5.984234,-1.316200,2.362101,6.320632,-8.905742,-3.045053,6.352954,-9.253551,-2.355384,-0.825807,-9.136820,5.691272,-3.261629,-9.238967,3.210357,-5.386936,-1.072882,0.804505,-6.700846,0.603681,-6.772349,-2.270100,-5.419958,-9.353573,-3.541051,4.563684,-6.742882,-2.546891,0.698466,5.480514,-1.292523,8.348031,5.225027,-3.927993,-5.559010,-2.440168,-9.207600,-7.835527,9.970076,9.609520,6.962850,4.273672,9.150269,-8.176384,-0.832191,4.124027,5.973582,-9.671693,8.771239,-9.220548,-4.332959,-3.699609,4.454856,5.100394,-4.863721,6.492387,-1.234885,3.484758,-7.848041,-3.273573,-4.582002,8.347996,5.560750,-4.879319,1.394715,-4.735410,8.301383,-8.047909,0.169456,4.076678,-6.160415,5.513706,7.427739,-2.022509,-8.120472,0.773764,-9.463240,-0.352419,-4.103693,-9.132471,0.142501,9.342337,-3.066765,0.391746,-7.850073,8.739733,9.492201,9.348548,2.155189,0.773778,-5.206334,-7.662826,5.730160,-1.038858,8.163845,8.797229,0.158940,1.379007,-6.209926,2.141129,-0.549264,4.088529,8.731265,-1.951835,-6.929645,-0.950047,-8.093994,3.899534,8.191203,0.035187,8.342868,9.701005,-3.840523,-8.352293,-6.335270,8.279967,-9.390174,-1.349420,1.971270,-7.241763,-9.012319,-7.311044,-5.672953,1.689776,-8.961061,-5.391023,6.957683,-3.950619,8.849240,0.395706,2.136417,-7.597335,0.507661,6.141384,8.694167,0.766025,7.826492,9.810173,9.195387,2.687849,9.194616,1.104684,-6.567470,-5.740584,-3.918162,6.876275,-5.252944,0.751006,-7.205336,-7.249372,1.704038,-0.069917,-0.884579,-7.355058,-3.334085,5.567503,0.044852,-3.755829,-4.812594,2.926110,-5.531426,-5.143460,-0.770946,2.322584,8.604096,0.231224,8.794061,4.760593,1.810912,5.063730,2.009193,6.037996,-7.131150,-1.150710,8.395261,3.687111,-3.708278,-3.291547,-4.555846,-7.998577,-2.570569,-5.963105,7.200769,2.462054,8.334786,-0.344329,6.301856,1.188019,3.103789,-8.339628,-8.481006,9.491126,-5.750875,2.655747,0.011738,-6.594805,6.388307,4.618176,-7.818647,6.800005,3.418735,-7.685476,-2.876775,-2.011525,-8.590326,-4.423901,9.855571,0.642449,8.110150,-2.445212,-7.884931,-2.281881,4.842841,-6.066544,-7.346638,8.185524,4.331876,-1.136379,8.543206,-7.342500,-2.324003,-1.751800,-2.536114], dtype = "float32")#candidate|5725|(308,)|const|float32
call_5724 = func_1377_call(relay.reshape(const_5725.astype('float32'), [11, 7, 4]))
call_5726 = func_1377_call(relay.reshape(const_5725.astype('float32'), [11, 7, 4]))
func_5699_call = mod.get_global_var('func_5699')
func_5700_call = mutated_mod.get_global_var('func_5700')
call_5734 = relay.TupleGetItem(func_5699_call(), 0)
call_5735 = relay.TupleGetItem(func_5700_call(), 0)
func_5345_call = mod.get_global_var('func_5345')
func_5349_call = mutated_mod.get_global_var('func_5349')
var_5737 = relay.var("var_5737", dtype = "uint8", shape = (2184,))#candidate|5737|(2184,)|var|uint8
var_5738 = relay.var("var_5738", dtype = "uint32", shape = (198,))#candidate|5738|(198,)|var|uint32
var_5739 = relay.var("var_5739", dtype = "bool", shape = (60,))#candidate|5739|(60,)|var|bool
call_5736 = relay.TupleGetItem(func_5345_call(relay.reshape(var_5737.astype('uint8'), [2184,]), relay.reshape(var_5738.astype('uint32'), [198,]), relay.reshape(var_5739.astype('bool'), [1, 60]), ), 1)
call_5740 = relay.TupleGetItem(func_5349_call(relay.reshape(var_5737.astype('uint8'), [2184,]), relay.reshape(var_5738.astype('uint32'), [198,]), relay.reshape(var_5739.astype('bool'), [1, 60]), ), 1)
output = relay.Tuple([call_5707,call_5724,const_5725,call_5734,call_5736,var_5737,var_5738,var_5739,])
output2 = relay.Tuple([call_5708,call_5726,const_5725,call_5735,call_5740,var_5737,var_5738,var_5739,])
func_5741 = relay.Function([var_5737,var_5738,var_5739,], output)
mod['func_5741'] = func_5741
mod = relay.transform.InferType()(mod)
mutated_mod['func_5741'] = func_5741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5741_call = mutated_mod.get_global_var('func_5741')
var_5743 = relay.var("var_5743", dtype = "uint8", shape = (2184,))#candidate|5743|(2184,)|var|uint8
var_5744 = relay.var("var_5744", dtype = "uint32", shape = (198,))#candidate|5744|(198,)|var|uint32
var_5745 = relay.var("var_5745", dtype = "bool", shape = (60,))#candidate|5745|(60,)|var|bool
call_5742 = func_5741_call(var_5743,var_5744,var_5745,)
output = call_5742
func_5746 = relay.Function([var_5743,var_5744,var_5745,], output)
mutated_mod['func_5746'] = func_5746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4973_call = mod.get_global_var('func_4973')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_5783 = relay.TupleGetItem(func_4973_call(), 0)
call_5784 = relay.TupleGetItem(func_4974_call(), 0)
output = call_5783
output2 = call_5784
func_5805 = relay.Function([], output)
mod['func_5805'] = func_5805
mod = relay.transform.InferType()(mod)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5805_call = mutated_mod.get_global_var('func_5805')
call_5806 = func_5805_call()
output = call_5806
func_5807 = relay.Function([], output)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5102_call = mod.get_global_var('func_5102')
func_5104_call = mutated_mod.get_global_var('func_5104')
call_5865 = func_5102_call()
call_5866 = func_5102_call()
const_5867 = relay.const([[[-8.297590,-1.917596,4.957422],[3.717333,-1.376510,1.615907],[7.244631,-1.254323,1.795918],[6.758378,-8.919214,8.996962],[-8.757353,7.701445,-0.756001],[9.462652,-4.921659,2.847825],[8.466036,8.098423,1.407586],[8.041558,-2.738993,5.145356],[4.520251,-1.163286,8.023321],[0.521896,-2.466181,-9.860303],[-9.408891,-3.195991,6.983959]],[[-6.195548,-2.989475,0.042805],[-5.508524,-0.564231,-0.078915],[-6.596787,-8.468533,-3.608729],[8.062145,8.921837,-5.088828],[-3.134976,-4.683878,4.653267],[-6.526981,-9.822212,0.442159],[4.953693,-5.638634,1.476421],[0.020643,6.116057,-6.769085],[2.533119,1.013869,-0.200012],[-1.173298,-9.271741,9.706854],[6.601345,-7.136942,-9.804985]],[[1.062730,4.411727,4.274941],[-3.153075,5.116386,7.659514],[2.606266,0.476341,5.610729],[-5.321193,-1.223999,-4.072554],[8.114519,-2.549123,5.852453],[0.868950,-9.427810,6.284659],[6.730525,-5.859544,8.724044],[1.421829,-3.585585,2.639618],[-3.152189,-0.092292,8.042327],[-9.489478,-5.745329,-2.681336],[8.278655,-7.595120,-1.394826]],[[1.744365,1.402144,-6.051811],[4.065812,-3.122027,-6.812834],[-2.901256,4.911030,-9.326777],[4.348726,6.050956,9.377219],[-0.221543,-7.322879,-9.333818],[-8.673608,-8.633822,9.837729],[-5.879390,-0.608791,-9.628361],[-9.573636,9.720743,1.282796],[-8.461746,-4.406456,-7.511728],[9.562394,-1.238675,5.840981],[6.261415,8.243522,-2.613593]],[[-3.230466,9.121572,3.824953],[-9.551352,-4.910150,7.598456],[5.267073,0.538151,-4.521293],[1.496149,-2.814748,5.083500],[-1.040846,0.905695,-9.329090],[-6.542568,-4.510386,-5.894953],[0.498979,4.464572,-7.284976],[-2.063495,1.975622,-1.163025],[5.767220,4.430285,2.680660],[-7.208599,6.286634,4.902314],[5.818754,1.720347,-4.108296]],[[1.961308,-6.482724,4.224716],[4.495779,-0.338292,9.717051],[-9.216243,-0.392929,-4.078560],[-4.406425,7.742226,-3.743403],[-4.516731,-4.267368,7.931817],[6.803149,-2.441042,-4.514017],[-6.730989,7.737826,-0.875067],[6.824275,-6.090030,-2.862607],[-1.783529,1.894445,3.879033],[-7.720387,0.131710,6.207048],[0.361223,6.112174,-0.839161]],[[-1.619532,5.440693,9.678471],[-5.831027,6.164122,-2.227490],[-4.378796,-5.327683,-7.727065],[7.317724,5.010098,6.230957],[-4.559249,9.479054,-2.457316],[1.998814,1.757665,2.312351],[-2.383923,0.503671,-9.790175],[7.432116,-8.682989,-9.595464],[4.309451,-9.845309,-4.489667],[7.940226,-7.711150,-0.635771],[-3.798056,0.055303,-1.518316]],[[-2.373836,5.790194,-6.487833],[6.479025,-8.160371,-1.024778],[-2.567879,-3.741553,-4.165669],[-3.003407,0.756015,8.074471],[-7.445824,5.918580,7.613517],[-7.148897,-8.769045,1.951568],[3.483291,6.350992,7.730839],[-7.204183,9.364203,-7.374419],[9.032974,-2.902016,2.371482],[-1.877439,6.059625,-4.031973],[2.035096,2.240568,-6.911123]],[[0.552444,5.771125,9.692375],[-0.279025,7.250339,-5.634925],[5.010058,-6.958778,1.560356],[4.290848,7.250466,9.216601],[5.983046,-2.391048,3.032650],[-5.139304,-7.429150,6.460390],[-2.492192,8.690231,2.549723],[1.298098,8.983845,-2.268281],[9.144673,-3.766213,5.052054],[-3.666673,7.259651,5.486257],[5.366087,3.131048,7.587660]],[[2.165738,-6.281943,2.592522],[7.289443,-3.741857,8.085771],[7.406618,0.992065,9.511547],[7.360352,0.691582,6.220882],[8.608050,-3.430990,-0.675786],[5.814812,1.988601,6.478446],[-1.539375,2.327522,4.521414],[6.801137,-9.596693,0.996481],[2.510018,1.837396,5.189698],[4.572381,-7.688026,2.543810],[-0.628792,-9.951018,-3.394165]],[[-0.302768,-7.877357,5.441594],[-2.434543,-9.400894,2.797715],[5.214837,3.589188,-4.042057],[8.763353,6.498944,6.657367],[-8.194217,-6.106187,-9.872932],[-9.066163,9.725101,-4.098446],[6.657581,7.204850,0.166075],[7.606072,-9.490051,-8.160812],[5.869293,-5.752734,8.138885],[1.360593,1.442850,-2.470502],[-8.698558,2.919276,-8.756882]],[[-7.683290,-2.405121,3.864768],[0.576584,-2.316702,5.336941],[-1.277543,-2.366767,-5.419392],[-2.803835,-5.056650,8.260295],[9.977930,3.600520,3.930908],[1.822788,7.813982,2.750561],[9.763601,7.374717,-4.564550],[-2.012460,1.509327,-8.274045],[-0.582652,1.934537,-3.016085],[-7.463956,-7.514052,-8.207454],[0.349095,-9.813296,-8.674551]],[[9.246748,-7.011222,5.219883],[-9.500525,1.874152,2.208936],[9.761394,-0.897290,-5.837302],[3.179574,3.336168,-5.577549],[4.222477,6.251618,2.870959],[8.359544,6.353168,5.079297],[5.654771,4.762892,-3.909520],[-7.119594,-6.431378,-5.859177],[1.539559,0.510845,-2.251871],[1.591944,8.886908,9.134382],[-4.002318,-9.845598,-7.101079]],[[-4.536012,8.942086,-4.828040],[-5.468738,3.751172,5.395273],[2.070128,8.202966,7.945007],[4.307394,1.694646,3.845041],[5.269829,3.064782,-4.036433],[7.673431,9.087586,-1.650828],[-7.856468,-9.400106,9.367936],[-0.185919,1.493193,-2.518458],[6.827704,0.281501,-2.860638],[1.250202,-0.518866,9.005567],[-1.476013,5.660404,1.232216]],[[7.040624,6.214603,3.655782],[8.557543,7.506299,4.766456],[-6.224738,2.056673,2.926459],[-0.344347,0.659969,-9.792524],[8.950079,-9.446403,-6.908810],[-7.700830,3.354549,-8.252467],[3.882800,-6.387287,-8.892682],[-2.751210,-5.399219,-8.514601],[4.939391,-7.690675,3.032631],[-1.314306,6.224614,3.169976],[-7.089752,5.142061,9.946284]],[[7.575972,-0.909122,-1.569204],[8.160659,6.363784,-0.184606],[-2.420200,-2.624427,9.388095],[0.307394,5.265199,-9.643188],[-3.554366,-7.935554,-4.799279],[7.997938,-9.994098,-4.359072],[-7.862207,8.499772,8.142525],[4.629595,-5.114813,9.510381],[6.995655,2.094352,0.835964],[-9.080333,-2.328235,-4.366142],[-7.302592,-5.592049,5.798521]]], dtype = "float32")#candidate|5867|(16, 11, 3)|const|float32
bop_5868 = relay.floor_mod(call_5865.astype('float64'), relay.reshape(const_5867.astype('float64'), relay.shape_of(call_5865))) # shape=(16, 11, 3)
bop_5871 = relay.floor_mod(call_5866.astype('float64'), relay.reshape(const_5867.astype('float64'), relay.shape_of(call_5866))) # shape=(16, 11, 3)
func_4566_call = mod.get_global_var('func_4566')
func_4569_call = mutated_mod.get_global_var('func_4569')
const_5891 = relay.const([False,True,False,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False], dtype = "bool")#candidate|5891|(60,)|const|bool
const_5892 = relay.const([2,-3,10,10,9,-1,6,-7,9,-3,-4,-3,-9,3,2,3,1,9,-9,5,8,7,6,-10,7,-1,8,-7,-9,-4,8,7,5,-1,4,2,-3,-6,4,-4,-9,-3,-3,1,1,-4,-3,10,-6,10,-8,2,3,10,3,-2,3,7,-8,-9,-4,-9,4,4,-10,-2,9,10,1,1,6,-4,9,-6,-2,5,7,-2,3,3,-2,-10,6,-5,9,-10,-7,7,-8,2,-7,-5,-1,7,4,-7,-2,7,6,6,-8,-2,1,-3], dtype = "int32")#candidate|5892|(104,)|const|int32
call_5890 = relay.TupleGetItem(func_4566_call(relay.reshape(const_5891.astype('bool'), [60,]), relay.reshape(const_5892.astype('int32'), [104,]), ), 9)
call_5893 = relay.TupleGetItem(func_4569_call(relay.reshape(const_5891.astype('bool'), [60,]), relay.reshape(const_5892.astype('int32'), [104,]), ), 9)
uop_5894 = relay.log2(bop_5868.astype('float32')) # shape=(16, 11, 3)
uop_5896 = relay.log2(bop_5871.astype('float32')) # shape=(16, 11, 3)
output = relay.Tuple([call_5890,const_5891,const_5892,uop_5894,])
output2 = relay.Tuple([call_5893,const_5891,const_5892,uop_5896,])
func_5900 = relay.Function([], output)
mod['func_5900'] = func_5900
mod = relay.transform.InferType()(mod)
mutated_mod['func_5900'] = func_5900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5900_call = mutated_mod.get_global_var('func_5900')
call_5901 = func_5900_call()
output = call_5901
func_5902 = relay.Function([], output)
mutated_mod['func_5902'] = func_5902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_5979 = func_4205_call()
call_5980 = func_4205_call()
output = relay.Tuple([call_5979,])
output2 = relay.Tuple([call_5980,])
func_5992 = relay.Function([], output)
mod['func_5992'] = func_5992
mod = relay.transform.InferType()(mod)
output = func_5992()
func_5993 = relay.Function([], output)
mutated_mod['func_5993'] = func_5993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4892_call = mod.get_global_var('func_4892')
func_4894_call = mutated_mod.get_global_var('func_4894')
call_6003 = relay.TupleGetItem(func_4892_call(), 0)
call_6004 = relay.TupleGetItem(func_4894_call(), 0)
output = call_6003
output2 = call_6004
func_6011 = relay.Function([], output)
mod['func_6011'] = func_6011
mod = relay.transform.InferType()(mod)
mutated_mod['func_6011'] = func_6011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6011_call = mutated_mod.get_global_var('func_6011')
call_6012 = func_6011_call()
output = call_6012
func_6013 = relay.Function([], output)
mutated_mod['func_6013'] = func_6013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4231_call = mod.get_global_var('func_4231')
func_4233_call = mutated_mod.get_global_var('func_4233')
call_6060 = relay.TupleGetItem(func_4231_call(), 0)
call_6061 = relay.TupleGetItem(func_4233_call(), 0)
func_4478_call = mod.get_global_var('func_4478')
func_4481_call = mutated_mod.get_global_var('func_4481')
const_6064 = relay.const([3,-5,9,3,9,-8,10,6,9,-10,-3,7,2,-3,1,3,-1,-6,-2,-10,-6,9,-2,-4,6,-4,-1,-9,10,-1,7,4,-4,10,-1,10,-1,-3,-6,3,-3,5,9,6,-7,8,-2,-3,3,4,-6,-1,-3,-1,3,5,3,9,-3,9,1,5,2,-10,3,-8,8,7,6,-4,-2,-3,6,-6,7,10,-5,-1,-5,1,-5,-9,10,8,-2,5,9,8,1,6,-9,6,-1,10,-8,-8,-2,7,2,10,-6,-7,-6,-10,-1,7,-3,4,1,-4,5,-1,-8,2,6,4,-8,6,-8,-3,5,8,4,-3,-6,-4,-8,9,-5,-6,3,-2,-10,7,9,8,-9,-3,8,5,-5,-6,-6,-9,-6,-2,4,1,6,-4,7,10,-8,-6,1,10,-2,8,-3,-9,-3,-9,-8,-5,-10,1,2,-3,4,-7,-3,-2,-5,-5,9,-7,-6,3,7,-10,6,-4,3,-9,9,4,6,8,-6,10,-4,2,-5,6,3,-1,-7,9,2,-9,-5,2,-10,-3,-1,6,1,-9,-2,-10,-3,4,-4,2,-1,9,-5,-7,1,-3,-2,10,-6,-2,4,-3,-3,-8,2,-4,-10,-8,4,-2,-5,9,-6,5,-10,10,8,-2,10,7,10,4,-6,7,-8,-7,7,-4,-7,-7,-5,2,10,-4,3,-2,-5,-5,1,-1,4,-3,5,6,-6,8,7,5,-5,-8,2,-3,8,-8,-1,-9,-8,-8,2,5,-4,-9,5,10,5,-10,2,6,1,-1,2,9,-4,2,-10,4,-10,-7,-9,4,-9,-2,8,-10,-1,-3,-3,-2,-9,1,-1,-3,9,5,9,3,6,8,3,-2,1,9,8,-10,-6,-4,7,-10,-7,6,6,5,-7,3,3,6,3,-7,-7,-5,10,-1,-7,5,6,2,-3,2,-10,-1,4,-8,-3,5,-3,-4,-2,-10,-6,6,6,-3,-7,-8,4,1,-7,3,3,1,-10,7,-7,-4,-1,4,10,-6,-4,3,4,-6,-10,-2,-8,-7,7,2,-2,-9,-9,-10,-10,-6,-3,-4,3,-9,-6,-8,-5,3,-10,5,5,4,-7,-3,-3,3,9,4,-5,7,-5,8,-9,-1,9,-2,10,-8,-2,-3,-1,-2,6,-4,-10,-6,5,4,-6,6,1,-10,4,5,9,3,-8,10,-3,-5,-7,-8,5,-8,-5,6,2,6,-2,-4,-10,-2,-5,2,-9,1,-8,-8,-10,-3,3,-2,5,-3,-8,-9,5,9,-4,-8,-8,6,-7,-8,-1,4,10,8,-2,2,7,10,-3,-2,10,1,-8,-3,-3,1,-1,9,1,-7,-8,2,-10,-9,-1,-1,10,10,-9,10,3,-6,-8,-8,-2,-1,3,8,-8,-6,10,2,9,6,5,10,9,4,10,-8,6,5,-5,-3,-1,-3,-6,1,-7,5,-2,1,10,-3,-9,7,10,-5,6,-7,-6,-10,-5,10,-5,-5,-10,10,-6,-2,-4,2,-10,9,6,-5,-6,7,-5,3,-1,-8,-7,-3,-1,-7,6,9,6,-4,-5,7,5,3,2,-1], dtype = "uint8")#candidate|6064|(588,)|const|uint8
call_6063 = relay.TupleGetItem(func_4478_call(relay.reshape(call_6060.astype('float32'), [16, 11, 3]), relay.reshape(const_6064.astype('uint8'), [588,]), ), 0)
call_6065 = relay.TupleGetItem(func_4481_call(relay.reshape(call_6060.astype('float32'), [16, 11, 3]), relay.reshape(const_6064.astype('uint8'), [588,]), ), 0)
func_5353_call = mod.get_global_var('func_5353')
func_5355_call = mutated_mod.get_global_var('func_5355')
call_6066 = relay.TupleGetItem(func_5353_call(), 0)
call_6067 = relay.TupleGetItem(func_5355_call(), 0)
func_735_call = mod.get_global_var('func_735')
func_738_call = mutated_mod.get_global_var('func_738')
var_6071 = relay.var("var_6071", dtype = "float64", shape = (1, 924))#candidate|6071|(1, 924)|var|float64
var_6072 = relay.var("var_6072", dtype = "float32", shape = (1, 832))#candidate|6072|(1, 832)|var|float32
call_6070 = relay.TupleGetItem(func_735_call(relay.reshape(var_6071.astype('float64'), [14, 11, 6]), relay.reshape(var_6072.astype('float32'), [832,]), ), 1)
call_6073 = relay.TupleGetItem(func_738_call(relay.reshape(var_6071.astype('float64'), [14, 11, 6]), relay.reshape(var_6072.astype('float32'), [832,]), ), 1)
func_5699_call = mod.get_global_var('func_5699')
func_5700_call = mutated_mod.get_global_var('func_5700')
call_6076 = relay.TupleGetItem(func_5699_call(), 0)
call_6077 = relay.TupleGetItem(func_5700_call(), 0)
output = relay.Tuple([call_6060,call_6063,const_6064,call_6066,call_6070,var_6071,var_6072,call_6076,])
output2 = relay.Tuple([call_6061,call_6065,const_6064,call_6067,call_6073,var_6071,var_6072,call_6077,])
func_6086 = relay.Function([var_6071,var_6072,], output)
mod['func_6086'] = func_6086
mod = relay.transform.InferType()(mod)
mutated_mod['func_6086'] = func_6086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6086_call = mutated_mod.get_global_var('func_6086')
var_6088 = relay.var("var_6088", dtype = "float64", shape = (1, 924))#candidate|6088|(1, 924)|var|float64
var_6089 = relay.var("var_6089", dtype = "float32", shape = (1, 832))#candidate|6089|(1, 832)|var|float32
call_6087 = func_6086_call(var_6088,var_6089,)
output = call_6087
func_6090 = relay.Function([var_6088,var_6089,], output)
mutated_mod['func_6090'] = func_6090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5681_call = mod.get_global_var('func_5681')
func_5683_call = mutated_mod.get_global_var('func_5683')
call_6099 = func_5681_call()
call_6100 = func_5681_call()
output = relay.Tuple([call_6099,])
output2 = relay.Tuple([call_6100,])
func_6105 = relay.Function([], output)
mod['func_6105'] = func_6105
mod = relay.transform.InferType()(mod)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6105_call = mutated_mod.get_global_var('func_6105')
call_6106 = func_6105_call()
output = call_6106
func_6107 = relay.Function([], output)
mutated_mod['func_6107'] = func_6107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_6125 = func_4205_call()
call_6126 = func_4205_call()
func_4478_call = mod.get_global_var('func_4478')
func_4481_call = mutated_mod.get_global_var('func_4481')
const_6130 = relay.const([[10],[5],[-6],[7],[2],[9],[8],[-3],[-8],[-6],[-7],[-4],[2],[2],[7],[-8],[-5],[4],[-1],[3],[6],[1],[-9],[-3],[-5],[-6],[5],[3],[-1],[1],[5],[2],[4],[5],[6],[-7],[1],[6],[-2],[9],[-2],[-10],[-4],[6],[8],[-5],[9],[-4],[5],[8],[-7],[-4],[5],[-2],[-3],[-6],[7],[1],[1],[-9],[9],[3],[-3],[-2],[-6],[10],[7],[4],[5],[3],[-7],[2],[7],[5],[3],[8],[-10],[-9],[-7],[3],[-3],[-7],[-6],[4],[-4],[-9],[8],[-5],[5],[4],[8],[9],[2],[-2],[8],[2],[-6],[-2],[7],[4],[-5],[-4],[-2],[-9],[-1],[-4],[-6],[6],[10],[-8],[-3],[10],[7],[-4],[1],[8],[8],[-8],[-3],[9],[3],[-4],[6],[-8],[-9],[-5],[-5],[4],[10],[-8],[5],[-7],[-10],[-5],[-4],[-8],[8],[6],[5],[10],[-8],[-10],[1],[-7],[-1],[2],[-3],[-1],[3],[-5],[-10],[4],[6],[-10],[3],[6],[-5],[6],[-10],[9],[-10],[-1],[1],[3],[8],[1],[-2],[4],[6],[-10],[3],[10],[-4],[-8],[-9],[-10],[-9],[1],[3],[-3],[1],[-6],[10],[2],[3],[-5],[-10],[6],[1],[-10],[2],[-1],[-1],[10],[6],[2],[7],[2],[-8],[-5],[6],[7],[7],[10],[9],[2],[10],[-10],[-8],[2],[4],[-3],[1],[-10],[10],[10],[-5],[10],[2],[2],[9],[-1],[-7],[-7],[-3],[-9],[4],[8],[7],[-4],[3],[-1],[-1],[-2],[2],[-4],[-8],[-2],[-10],[-10],[-10],[2],[10],[9],[9],[-4],[-7],[3],[-7],[-3],[-1],[-2],[4],[5],[-4],[6],[3],[8],[-7],[-1],[-10],[9],[10],[-7],[10],[-8],[7],[-1],[-7],[-6],[9],[-3],[-2],[-6],[-9],[7],[1],[-7],[9],[10],[4],[-10],[1],[3],[-6],[-6],[-10],[9],[-3],[-1],[1],[-2],[-4],[-5],[-4],[4],[-4],[-10],[-6],[2],[-1],[8],[1],[-3],[2],[7],[-4],[6],[-7],[-2],[-6],[9],[-1],[-7],[-2],[-10],[9],[-6],[7],[7],[7],[-5],[-2],[-8],[-3],[-9],[9],[9],[9],[-8],[6],[5],[5],[-8],[-3],[4],[-10],[9],[-9],[2],[-9],[1],[1],[7],[-7],[-2],[-2],[10],[8],[-2],[4],[9],[2],[-7],[-6],[2],[-2],[-5],[-4],[-4],[9],[4],[2],[-9],[-2],[1],[6],[10],[-9],[10],[6],[3],[7],[-10],[2],[10],[1],[-3],[7],[-5],[-4],[5],[-8],[9],[-3],[-5],[2],[-6],[9],[10],[3],[3],[5],[7],[9],[-3],[10],[-2],[-4],[-8],[-1],[-8],[2],[-4],[2],[-2],[-3],[1],[2],[-1],[1],[3],[-1],[-10],[7],[4],[10],[1],[-7],[-2],[-8],[-6],[-9],[10],[-4],[-4],[5],[8],[6],[5],[-5],[-1],[2],[-6],[-6],[10],[3],[6],[2],[7],[9],[2],[-1],[-1],[8],[10],[8],[10],[-5],[1],[-5],[7],[8],[3],[-9],[7],[-2],[-1],[-1],[1],[2],[-5],[-5],[10],[-1],[3],[-3],[-7],[-4],[-10],[-1],[-3],[8],[-7],[10],[-10],[-1],[5],[-2],[-8],[-8],[-3],[3],[-10],[10],[-4],[-7],[-3],[2],[-5],[8],[-7],[2],[7],[-6],[9],[7],[-5],[-1],[9],[-4],[-2],[9],[7],[-5],[-6],[-10],[4],[-2],[6],[-7],[2],[-6],[-6],[1],[-8],[-8],[6],[-6],[-1],[-7],[-6],[9],[-9],[-2],[-8],[9],[-4],[-6],[-1],[6],[2],[10],[3],[2],[10],[2],[-4],[-7],[-1],[7],[7],[9],[2],[2],[4],[5],[-3],[-3],[2],[2],[-5],[-10],[-5],[-2],[-6],[-6],[-7],[-4],[4],[-2],[-3],[-2],[1],[-3],[-1],[7],[-9],[-6],[3],[-3],[-9],[2],[5],[6],[-2],[-8],[7],[-1],[5],[5],[9],[3],[8],[4],[-9],[2],[7]], dtype = "uint8")#candidate|6130|(588, 1)|const|uint8
call_6129 = relay.TupleGetItem(func_4478_call(relay.reshape(call_6125.astype('float32'), [16, 11, 3]), relay.reshape(const_6130.astype('uint8'), [588,]), ), 3)
call_6131 = relay.TupleGetItem(func_4481_call(relay.reshape(call_6125.astype('float32'), [16, 11, 3]), relay.reshape(const_6130.astype('uint8'), [588,]), ), 3)
output = relay.Tuple([call_6125,call_6129,const_6130,])
output2 = relay.Tuple([call_6126,call_6131,const_6130,])
func_6140 = relay.Function([], output)
mod['func_6140'] = func_6140
mod = relay.transform.InferType()(mod)
mutated_mod['func_6140'] = func_6140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mutated_mod.get_global_var('func_6140')
call_6141 = func_6140_call()
output = call_6141
func_6142 = relay.Function([], output)
mutated_mod['func_6142'] = func_6142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mod.get_global_var('func_6140')
func_6142_call = mutated_mod.get_global_var('func_6142')
call_6153 = relay.TupleGetItem(func_6140_call(), 2)
call_6154 = relay.TupleGetItem(func_6142_call(), 2)
output = relay.Tuple([call_6153,])
output2 = relay.Tuple([call_6154,])
func_6157 = relay.Function([], output)
mod['func_6157'] = func_6157
mod = relay.transform.InferType()(mod)
output = func_6157()
func_6158 = relay.Function([], output)
mutated_mod['func_6158'] = func_6158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4892_call = mod.get_global_var('func_4892')
func_4894_call = mutated_mod.get_global_var('func_4894')
call_6169 = relay.TupleGetItem(func_4892_call(), 0)
call_6170 = relay.TupleGetItem(func_4894_call(), 0)
func_4171_call = mod.get_global_var('func_4171')
func_4176_call = mutated_mod.get_global_var('func_4176')
var_6181 = relay.var("var_6181", dtype = "uint16", shape = (1, 960))#candidate|6181|(1, 960)|var|uint16
var_6182 = relay.var("var_6182", dtype = "bool", shape = (320,))#candidate|6182|(320,)|var|bool
var_6183 = relay.var("var_6183", dtype = "float32", shape = (832,))#candidate|6183|(832,)|var|float32
call_6180 = relay.TupleGetItem(func_4171_call(relay.reshape(var_6181.astype('uint16'), [1, 960]), relay.reshape(var_6182.astype('bool'), [320,]), relay.reshape(var_6183.astype('float32'), [832,]), ), 13)
call_6184 = relay.TupleGetItem(func_4176_call(relay.reshape(var_6181.astype('uint16'), [1, 960]), relay.reshape(var_6182.astype('bool'), [320,]), relay.reshape(var_6183.astype('float32'), [832,]), ), 13)
func_4592_call = mod.get_global_var('func_4592')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_6185 = func_4592_call()
call_6186 = func_4592_call()
func_1569_call = mod.get_global_var('func_1569')
func_1576_call = mutated_mod.get_global_var('func_1576')
var_6198 = relay.var("var_6198", dtype = "uint8", shape = (2184,))#candidate|6198|(2184,)|var|uint8
var_6199 = relay.var("var_6199", dtype = "uint32", shape = (1, 198))#candidate|6199|(1, 198)|var|uint32
var_6200 = relay.var("var_6200", dtype = "bool", shape = (60,))#candidate|6200|(60,)|var|bool
call_6197 = relay.TupleGetItem(func_1569_call(relay.reshape(var_6198.astype('uint8'), [14, 12, 13]), relay.reshape(var_6198.astype('uint8'), [14, 12, 13]), relay.reshape(var_6199.astype('uint32'), [198,]), relay.reshape(var_6200.astype('bool'), [60,]), relay.reshape(var_6183.astype('float32'), [832,]), ), 3)
call_6201 = relay.TupleGetItem(func_1576_call(relay.reshape(var_6198.astype('uint8'), [14, 12, 13]), relay.reshape(var_6198.astype('uint8'), [14, 12, 13]), relay.reshape(var_6199.astype('uint32'), [198,]), relay.reshape(var_6200.astype('bool'), [60,]), relay.reshape(var_6183.astype('float32'), [832,]), ), 3)
func_5345_call = mod.get_global_var('func_5345')
func_5349_call = mutated_mod.get_global_var('func_5349')
call_6210 = relay.TupleGetItem(func_5345_call(relay.reshape(var_6198.astype('uint8'), [2184,]), relay.reshape(var_6199.astype('uint32'), [198,]), relay.reshape(var_6200.astype('bool'), [1, 60]), ), 2)
call_6211 = relay.TupleGetItem(func_5349_call(relay.reshape(var_6198.astype('uint8'), [2184,]), relay.reshape(var_6199.astype('uint32'), [198,]), relay.reshape(var_6200.astype('bool'), [1, 60]), ), 2)
func_1602_call = mod.get_global_var('func_1602')
func_1605_call = mutated_mod.get_global_var('func_1605')
var_6216 = relay.var("var_6216", dtype = "uint16", shape = (192,))#candidate|6216|(192,)|var|uint16
call_6215 = func_1602_call(relay.reshape(var_6216.astype('uint16'), [16, 1, 12]), relay.reshape(var_6181.astype('uint16'), [16, 5, 12]), )
call_6217 = func_1602_call(relay.reshape(var_6216.astype('uint16'), [16, 1, 12]), relay.reshape(var_6181.astype('uint16'), [16, 5, 12]), )
output = relay.Tuple([call_6169,call_6180,var_6181,var_6182,var_6183,call_6185,call_6197,var_6198,var_6199,var_6200,call_6210,call_6215,var_6216,])
output2 = relay.Tuple([call_6170,call_6184,var_6181,var_6182,var_6183,call_6186,call_6201,var_6198,var_6199,var_6200,call_6211,call_6217,var_6216,])
func_6230 = relay.Function([var_6181,var_6182,var_6183,var_6198,var_6199,var_6200,var_6216,], output)
mod['func_6230'] = func_6230
mod = relay.transform.InferType()(mod)
var_6231 = relay.var("var_6231", dtype = "uint16", shape = (1, 960))#candidate|6231|(1, 960)|var|uint16
var_6232 = relay.var("var_6232", dtype = "bool", shape = (320,))#candidate|6232|(320,)|var|bool
var_6233 = relay.var("var_6233", dtype = "float32", shape = (832,))#candidate|6233|(832,)|var|float32
var_6234 = relay.var("var_6234", dtype = "uint8", shape = (2184,))#candidate|6234|(2184,)|var|uint8
var_6235 = relay.var("var_6235", dtype = "uint32", shape = (1, 198))#candidate|6235|(1, 198)|var|uint32
var_6236 = relay.var("var_6236", dtype = "bool", shape = (60,))#candidate|6236|(60,)|var|bool
var_6237 = relay.var("var_6237", dtype = "uint16", shape = (192,))#candidate|6237|(192,)|var|uint16
output = func_6230(var_6231,var_6232,var_6233,var_6234,var_6235,var_6236,var_6237,)
func_6238 = relay.Function([var_6231,var_6232,var_6233,var_6234,var_6235,var_6236,var_6237,], output)
mutated_mod['func_6238'] = func_6238
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6317 = relay.var("var_6317", dtype = "float64", shape = ())#candidate|6317|()|var|float64
var_6318 = relay.var("var_6318", dtype = "float64", shape = (3, 2, 4))#candidate|6318|(3, 2, 4)|var|float64
bop_6319 = relay.power(var_6317.astype('float64'), var_6318.astype('float64')) # shape=(3, 2, 4)
func_4231_call = mod.get_global_var('func_4231')
func_4233_call = mutated_mod.get_global_var('func_4233')
call_6324 = relay.TupleGetItem(func_4231_call(), 0)
call_6325 = relay.TupleGetItem(func_4233_call(), 0)
func_5546_call = mod.get_global_var('func_5546')
func_5553_call = mutated_mod.get_global_var('func_5553')
const_6342 = relay.const([7,-7,4,-10,-7,-9,10,-6,7,-2,-1,-6,-2,9,9,3,5,-3,-7,-6,-5,-3,4,7,7,10,-10,10,-3,3,2,-7,5,7,-10,-6,8,2,-1,5,8,7,-4,-9,7,-8,-9,9,5,-8,1,-2,3,2,4,-3,5,-10,8,-5,-3,-7,9,6,2,-3,-6,-1,-10,3,10,-4,-6,3,4,-1,2,7,4,7,7,-8,-4,2,-9,8,2,6,8,4,-7,9,4,3,1,-3,-10,1,-9,-10,9,2,3,1,-7,-5,9,6,-2,-3,-8,1,-9,-4,7,-9,-5,8,-8,9,-4,-2,10,8,6,5,8,-6,10,5,5,4,4,-7,-10,8,5,-9,-7,-7,10,8,7,5,5,5,-6,9,-10,2,7,6,-7,4,-5,6,-2,3,10,9,2,5,-2,7,3,3,-9,-1,-7,-2,-6,6,-5,-9,1,-2,1,-10,-4,-6,8,8,-2,6,3,-10,6,-9,6,-10,6,-9,-9,-2,8,1,-1,3], dtype = "uint32")#candidate|6342|(198,)|const|uint32
const_6343 = relay.const([False,True,False,True,False,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False], dtype = "bool")#candidate|6343|(60,)|const|bool
const_6344 = relay.const([5,-7,-8,-1,10,-2,-7,-1,2,-6,9,-7,-2,-3,9,7,7,-4,-1,-1,-8,-10,-6,10,6,-10,-8,1,9,10,-8,-4,1,10,-1,-2,4,6,6,-7,-3,-5,-5,2,10,2,9,5,-1,1,-7,-3,-9,-10,-6,-7,-5,4,9,-4,10,-9,1,8,-8,-8,-5,6,1,-1,7,7,-8,-4,7,-8,-5,5,-8,1,-5,10,9,6,-6,-8,2,-4,6,-1,-7,1,3,-9,-2,-8,-9,-7,-8,10,-9,-6,-4,5,-10,5,5,-1,-4,1,1,3,2,10,-2,-4,7,-5,-2,-2,-7,2,-5,-2,3,4,-5,-6,8,6,6,-2,2,7,8,-8,6,-8,-1,1,4,-10,4,-5,-3,4,-3,-6,4,8,-3,-10,6,-10,-8,3,-8,-10,-10,-7,-6,-6,-7,-5,-6,-4,9,7,-2,4,-2,2,9,-4,-7,-6,10,-3,6,8,10,2,8,7,-8,7,-8,-10,1,10,5,-2,-9,3,-2,9,5,-3,1,-2,-1,-1,-10,-9,-8,-10,4,9,-4,1,5,9,-1,4,2,-5,7,-3,-8,7,-1,1,8,9,4,9,9,-3,8,-4,-3,3,-4,4,-1,10,-9,-7,10,-8,-7,-6,-3,-9,-6,1,-2,9,5,10,6,5,-2,10,-8,8,5,4,-5,-9,3,-10,8,-3,-5,-8,4,6,-6,9,7,1,-5,2,-5,-1,-2,-5,10,-5,10,6,5,-9,-10,-6,10,-3,-2,3,5,-8,-4,-9,-1,-9,-6,-5,9,-3,-4,8,-8,-9,3,8,5,-6,8,-5,-10,8,-9,10,-8,-7,-3,6,-5,2,6,-7,-5,-4,-10,10,1,-9,-2,6,-9,-2,-9,4,3,3,3,4,5,-10,5,7,1,-6,-3,3,-7,-6,3,-10,5,10,3,7,10,-5,9,-2,-7,3,3,6,1,8,-2,-4,2,-7,8,5,3,-4,3,3,4,-4,2,-1,-1,-8,-7,-2,-4,4,-2,1,-2,-8,-1,-6,6,4,-9,-10,-3,-5,-9,-7,-5,7,3,-5,-3,9,5,-10,7,-9,-10,7,7,2,-9,3,2,-1,9,2,-10,-5,8,6,-1,2,-5,-3,-10,-10,-5,-3,4,4,2,5,-6,-7,-8,-8,9,8,-8,6,-5,-9,1,7,-7,-9,6,-9,4,7,-10,-1,-6,2,-8,-3,9,5,-5,-5,5,1,8,4,-7,-6,-7,-5,3,-6,-10,-8,-5,6,5,-2,5,-2,5,-7,-8,-9,-7,7,-6,3,-5,4,3,-2,3,-7,-9,-3,6,7,10,-8,-4,9,1,5,-4,-8,1,5,3,-2,10,7,5,9,-1,4,-3,5,-6,2,1,9,9,6,6,6,-3,-2,-10,4,10,-7,1,-9,-6,9,10,-7,-1,-4,-1,3,-7,2,7,-7,4,-10,-9,3,9,-3,9,-9,-3,5,5,-9,4,8,-9,-10,2,-7,-10,-6,-10,7,9,10,-1,9,5,-10,1,-2,-4,3,-2,-9,-1,-1,-6,-2,8,-8,-9,7], dtype = "uint8")#candidate|6344|(588,)|const|uint8
var_6345 = relay.var("var_6345", dtype = "float64", shape = (30, 4))#candidate|6345|(30, 4)|var|float64
call_6341 = relay.TupleGetItem(func_5546_call(relay.reshape(const_6342.astype('uint32'), [3, 66]), relay.reshape(const_6343.astype('bool'), [60, 1]), relay.reshape(var_6317.astype('int8'), []), relay.reshape(const_6344.astype('uint8'), [14, 42]), relay.reshape(var_6345.astype('float64'), [120,]), ), 9)
call_6346 = relay.TupleGetItem(func_5553_call(relay.reshape(const_6342.astype('uint32'), [3, 66]), relay.reshape(const_6343.astype('bool'), [60, 1]), relay.reshape(var_6317.astype('int8'), []), relay.reshape(const_6344.astype('uint8'), [14, 42]), relay.reshape(var_6345.astype('float64'), [120,]), ), 9)
func_303_call = mod.get_global_var('func_303')
func_305_call = mutated_mod.get_global_var('func_305')
const_6349 = relay.const([8.581384,2.350660,-9.998468,-4.410165,2.700146,3.166204,2.527383,-5.451361,-3.548171,-7.236801,3.360499,3.099886,-5.916774,9.506194,-8.650660,-6.973771,8.853639,-9.292657,0.438885,-4.443758,-7.622824,1.990679,4.695283,2.530511,9.448000,7.965252,-3.888837,8.743392,5.962294,8.910028,2.675413,0.345466,1.661970,-7.611290,-5.256294,6.611886,9.207183,-5.637984,4.315874,-3.300862,-4.986604,4.572739,3.379794,9.705651,4.119764,-4.863035,-2.681499,8.861683,8.929273,-9.732009,-1.996288,-7.151589,3.349651,9.083767,-0.827081,2.635674,0.417843,-2.654893,3.799544,1.672135,-5.287856,9.085593,-5.313613,-9.374966,-2.904540,9.170071,7.348860,-4.802295,9.254685,2.735172,-9.614160,-6.421526,0.819836,-5.956705,-1.826340,6.102821,2.668561,8.705550,0.651045,-4.398292,-7.808946,-5.958795,0.914369,-3.789169,-5.545935,3.463629,-6.896858,6.908836,-8.991777,-0.628573,9.798248,1.807959,-5.474318,-8.933554,-0.792420,-8.870194,0.228754,-6.396909,6.539341,3.179575,-5.157834,-6.454171,-7.343224,-6.032235,3.367513,7.184934,-0.676026,-1.317500,2.123858,-3.305050,6.219631,-1.589616,-4.696328,2.694598,-7.777734,6.472675,2.997685,4.902324,9.798261,-4.811864,3.115168,-0.738348,-1.270684,-1.975194,5.552847,-3.496310,4.936883,5.409305,0.871114,-9.645573,5.782902,3.965408,1.416819,-9.802349,-0.055317,-4.229550,-9.125001,-5.897431,0.458966,-6.462387,2.310986,2.749636,-3.908102,-5.780702,3.099987,5.476719,2.583469,-4.642755,2.045287,3.993353,2.284249,0.445781,-9.627812,1.200044,7.104289,1.892538,-9.565837,1.617799,6.946159,-7.859454,-7.363695,-0.002288,-1.482572,8.787041,9.422645,-3.075243,-8.471840,5.429474,0.734078,-0.694225,-5.950256,4.310183,-0.034432,8.672176,5.335521,-5.383740,2.293305,6.097993,1.205487,-2.680685,5.523116,-9.372170,-6.766793,7.094864,-5.460746,-2.479695,0.640319,3.872936,1.274454,3.515382,-5.040350,-5.810816,-6.535111,-1.108767,-7.921210,9.224020,0.715446,9.865121,1.747790,5.471198,-4.479364,-1.764629,1.423606,2.607295,8.661257,7.909791,1.109356,4.244740,9.557759,6.304383,-7.028207,-2.666201,-2.863193,-0.521938,-8.546311,1.290961,0.416186,-2.816285,5.981206,5.832477,-1.770872,6.717314,8.621906,-6.996875,-6.975992,-9.256577,-7.276875,-7.072130,9.777684,-4.193554,-6.087451,-5.671419,4.428468,-0.811741,3.218263,5.535476,0.417712,0.310645,-4.138295,1.299391,5.442539,9.013616,-8.133203,5.303188,-7.479541,7.948811,4.125290,2.718784,-2.985126,-1.222879,8.574380,-3.172802,-8.750240,9.539741,9.909796,8.526373,7.339671,-5.937459,-9.800723,8.051600,2.997436,0.673091,-9.166508,6.269111,-8.490996,-1.632350,-8.631304,-9.003849,-3.107344,7.158984,2.541212,7.095628,7.827267,-3.786848,8.923584,2.857568,6.553444,8.216783,4.319025,-5.646652,-4.565742,5.434349,3.452405,6.309075,-2.498580,6.917776,1.550958,-8.548506,-5.891808,-0.408298,-9.258227,-7.459626,-2.292142,7.647783,5.183699,-9.324630,1.652640,-1.766470,1.949955,-6.292373,-1.764488,0.017399,-5.047514,-7.858509,5.971271,-9.046511,-2.922453,9.118058,6.672117,-1.500335,-5.086831,-5.441595,8.343589,2.113817,4.007520,-2.171332,0.767401,1.783774,0.110522,9.479179,0.951202,-4.183883,-0.562237,-1.579839,-5.554909,-5.738314,1.054312,-6.132830,9.179340,-6.624992,-3.170877,-3.023466,-3.858386,8.650466,-4.244893,-0.867321,2.961455,1.490412,-6.313543,9.234424,4.112663,-4.802631,-1.557289,8.039532,-1.749460,-5.692255,-4.268226,-4.582693,9.229682,-5.361549,-3.173490,1.257953,8.830724,-8.063823,-3.259466,-5.901774,5.475157,4.932104,-6.754614,-5.243879,-6.366509,6.660758,3.755858,8.163071,0.510198,-9.429438,4.710344,5.995612,3.771251,-1.791209,7.213379,0.872867,6.540798,8.361859,1.198429,-5.675988,-7.896214,-5.704209,-6.436044,-0.812454,2.235762,2.504473,-1.609645,1.347542,-2.496150,-7.692092,-3.713858,7.928711,-8.719653,4.326640,-0.851175,6.351904,7.975438,-4.517021,0.340424,-0.013120,-7.362196,9.540784,-2.960112,-5.978765,6.226485,6.631542,-9.344631,5.933115,9.531949,-3.041619,1.447750,-4.064081,5.889557,-4.050756,-6.853189,9.656574,-2.201388,8.673511,2.402175,-2.403819,-9.579595,-1.584060,-1.100516,3.591770,2.686256,0.144351,6.602485,3.914035,-8.502795,-0.960710,-4.137112,1.913523,-5.440125,-5.773877,-0.057202,-5.172909,-6.894929,5.843659,4.168757,-7.117408,-9.413303,0.964563,2.328134,-9.208918,-5.051230,-1.347434,-7.828935,6.462469,4.975383,-9.420450,-8.718382,-6.420373,-1.594355,8.169116,8.643597,-1.596997,9.018142,3.091201,-9.576587,8.491206,-9.994588,-3.400504,2.986431,-8.934892,1.346907,6.370600,6.379417,-1.812918,4.266618,3.270361,8.712986,9.732573,3.313858,1.878526,-8.316291,-6.434585,3.459340,-8.036160,1.329968,6.512677,8.075111,-2.614209,-9.744841,-3.796527,6.385893,-3.519163,0.577366,6.360717,0.847103,2.670707,0.887585,-6.197007,-6.821575,-2.504740,0.012787,-5.977759,-5.475300,-3.492903,5.191685,-0.730866,-5.329030,2.261168,-2.182478,2.844274,5.532940,-5.200507,-3.890617,5.177348,0.902082,-7.112063,1.159868,9.950026,-0.073569,4.287900,9.193239,-5.567738,-3.065270,3.372839,-8.798813,-2.879055,9.641861,8.390896,-9.207880,-7.983178,-3.233899,-9.443321,5.528874,5.760002,3.461593,4.221426,-2.335665,3.932052,6.144953,-6.763547,6.897325,-3.673812,5.809458,-4.431750,-8.065798,0.603427,-1.503315,4.616334,0.474804,2.752821,8.889744,6.015093,-0.643157,-1.684983,-7.273656,1.801009,-0.697718,-8.191672,6.103372,6.910990,-6.742516,-8.075496,-9.282440,-0.254206,-0.463494,3.890390,1.253211,-7.245337,7.992394,1.804750,5.263548,3.411037,-9.373706,1.648911,-7.136857,-3.418561,4.166133,8.757710,-1.929162,0.388715,1.243709,-8.071568,-9.625655,-6.541399,0.569107,0.815244,5.839383,-5.290348,-2.248426,0.281677,-0.621398,3.739313,2.523774,-2.103392,9.216644,-3.659715,-5.927278,0.345103,8.605236,-1.883183,8.120759,8.019093,-3.406396,9.241515,6.817988,3.455868,-9.014701,3.702344,-8.446497,1.777725,-8.085590,-2.394467,-7.523420,3.523799,-7.882755,-3.757949,4.600389,-6.721098,-1.605646,-8.861376,-6.988107,7.084036,6.511244,-7.428690,-9.984861,4.119839,-5.463631,5.734390,5.134365,-8.512273,-1.655679,6.531729,5.383672,5.289861,6.616342,7.357218,-4.108502,-8.076626,-3.006019,3.645193,-9.219602,2.554371,-6.016320,0.639933,9.566310,9.779002,3.252831,3.763440,-6.368176,-2.957224,-0.109484,-4.515484,-2.551352,-0.526463,6.714829,-0.928913,-6.525773,-3.852932,-1.132023,-1.620164,-4.101129,-8.706437,6.074596,-3.817739,-7.491251,6.626335,-0.044111,5.586623,4.651834,8.101267,2.859457,-2.758681,7.098490,9.246551,2.982798,6.231708,2.713925,8.868079,9.938711,5.075754,-1.888825,3.339747,-8.900107,8.498342,-0.422517,-8.571345,-9.795694,-9.822172,-6.874709,-6.978620,2.771645,1.644979,7.560697,4.143841,-4.685666,-6.910337,-1.715174,6.494413,8.244504,-8.370060,-6.130103,3.451546,9.440440,-7.010044,4.066883,0.632482,6.761988,-3.923945,7.851943,8.237060,-1.444604,-0.009339,7.627229,5.424442,8.698233,5.757363,-1.726858,-7.494159,-8.113570,0.361546,7.527493,-6.047742,6.719075,4.981551,3.691701,-3.634090,8.571732,-1.431764,3.033902,3.726949,4.738994,-1.620362,3.156304,2.137770,9.673768,-0.201049,-9.405082,1.943171,0.819077,-7.398578,-3.946827,-4.759024,-1.264273,-2.719927,-7.585973,-5.462895,-6.453541,2.735537,3.906019,2.692296,-7.218819,-2.521051,0.256272,-3.567952,-0.998672,4.749694,-9.716536,-6.270818,-2.774934,-2.311285,-5.487347,-8.882693,9.213416,2.699168,-1.745854,3.282873,-1.176122,9.907255,-4.526069,-4.949384,2.154968,0.518660,8.904061,-4.768251,-6.238103,-9.222470,1.537143,-4.347649,-7.189164,1.504723,-9.637100,9.824904,-4.436425,-2.744227,9.344122,-5.177692,-4.906885,-9.018474,0.056314,0.454576,2.694152,4.904901,-0.307841,3.190285,1.057465,-6.105143,4.960859,-2.086844,-5.630218,-2.310715,8.205569,-1.051590,-7.278941,6.189490,2.089350,-8.832324,-4.648655,4.361103,2.020887,6.924077,-8.218732,-2.976282,-4.129097,0.246395,-9.993042,-2.790587,-1.054014,3.712232,6.583265,4.141075,-9.015354,8.753586,9.489335,4.019024,6.789522,7.634833,-6.420584,4.956290,-6.065981,-8.492872,1.060973,-1.364833,8.773636,-0.929556,-4.548557,-5.965958,4.396257,0.054944,-0.267084,1.837511,6.893856,8.050418], dtype = "float32")#candidate|6349|(832,)|const|float32
call_6348 = relay.TupleGetItem(func_303_call(relay.reshape(const_6349.astype('float32'), [16, 4, 13])), 1)
call_6350 = relay.TupleGetItem(func_305_call(relay.reshape(const_6349.astype('float32'), [16, 4, 13])), 1)
output = relay.Tuple([bop_6319,call_6324,call_6341,const_6342,const_6343,const_6344,var_6345,call_6348,const_6349,])
output2 = relay.Tuple([bop_6319,call_6325,call_6346,const_6342,const_6343,const_6344,var_6345,call_6350,const_6349,])
func_6356 = relay.Function([var_6317,var_6318,var_6345,], output)
mod['func_6356'] = func_6356
mod = relay.transform.InferType()(mod)
var_6357 = relay.var("var_6357", dtype = "float64", shape = ())#candidate|6357|()|var|float64
var_6358 = relay.var("var_6358", dtype = "float64", shape = (3, 2, 4))#candidate|6358|(3, 2, 4)|var|float64
var_6359 = relay.var("var_6359", dtype = "float64", shape = (30, 4))#candidate|6359|(30, 4)|var|float64
output = func_6356(var_6357,var_6358,var_6359,)
func_6360 = relay.Function([var_6357,var_6358,var_6359,], output)
mutated_mod['func_6360'] = func_6360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5805_call = mod.get_global_var('func_5805')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_6431 = func_5805_call()
call_6432 = func_5805_call()
func_4592_call = mod.get_global_var('func_4592')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_6433 = func_4592_call()
call_6434 = func_4592_call()
output = relay.Tuple([call_6431,call_6433,])
output2 = relay.Tuple([call_6432,call_6434,])
func_6436 = relay.Function([], output)
mod['func_6436'] = func_6436
mod = relay.transform.InferType()(mod)
output = func_6436()
func_6437 = relay.Function([], output)
mutated_mod['func_6437'] = func_6437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mod.get_global_var('func_5398')
func_5399_call = mutated_mod.get_global_var('func_5399')
call_6445 = relay.TupleGetItem(func_5398_call(), 0)
call_6446 = relay.TupleGetItem(func_5399_call(), 0)
output = relay.Tuple([call_6445,])
output2 = relay.Tuple([call_6446,])
func_6453 = relay.Function([], output)
mod['func_6453'] = func_6453
mod = relay.transform.InferType()(mod)
mutated_mod['func_6453'] = func_6453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6453_call = mutated_mod.get_global_var('func_6453')
call_6454 = func_6453_call()
output = call_6454
func_6455 = relay.Function([], output)
mutated_mod['func_6455'] = func_6455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6011_call = mod.get_global_var('func_6011')
func_6013_call = mutated_mod.get_global_var('func_6013')
call_6502 = func_6011_call()
call_6503 = func_6011_call()
output = call_6502
output2 = call_6503
func_6506 = relay.Function([], output)
mod['func_6506'] = func_6506
mod = relay.transform.InferType()(mod)
output = func_6506()
func_6507 = relay.Function([], output)
mutated_mod['func_6507'] = func_6507
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6508 = relay.const([[[5,4,5,1,-10,-6,-2,-7,9,-7,-8,5],[-2,8,7,-1,-5,6,7,-5,-2,7,7,3],[7,-7,3,-10,2,-6,-4,-1,2,-9,7,-5],[9,5,3,2,-7,7,-2,7,-5,-4,8,7],[5,10,-10,-10,-4,-4,4,8,-6,3,2,-3],[1,-5,3,10,8,9,-2,8,6,4,10,1]],[[-7,-6,-4,-7,8,-5,-3,-10,-6,10,10,5],[-10,7,-9,3,-5,-4,-10,6,-2,-1,-8,8],[10,2,-6,9,4,-3,6,-10,7,-2,6,4],[-8,4,6,10,10,7,6,1,3,4,9,10],[7,-2,-9,10,-1,-3,-8,4,-2,-5,8,2],[-9,-9,-10,4,-1,10,-5,7,-7,-5,-3,5]],[[10,6,6,-9,4,-3,7,2,6,-9,-6,-8],[-5,10,-2,3,-4,9,-9,-7,6,-9,-9,-4],[5,-7,8,-6,8,2,8,1,-8,-6,-9,-2],[-4,2,2,-10,9,-9,-3,-3,10,9,3,-2],[2,-8,4,8,10,3,7,-2,1,5,-8,-4],[-4,-6,5,-5,-7,-8,4,-9,7,8,-7,2]],[[4,3,4,8,-2,-4,-4,2,4,4,-7,4],[-5,9,5,-10,-7,-2,-10,-8,5,-9,-10,2],[-10,-4,9,2,2,-6,1,7,8,-8,10,-1],[9,-5,1,-5,-4,-10,8,-7,-3,1,-8,1],[-10,6,-8,-6,-9,8,-10,4,5,-7,8,-5],[-6,5,7,-9,7,-4,4,-4,4,-4,-6,-8]],[[-4,3,-10,3,7,9,-5,8,6,7,-5,-7],[-2,1,1,8,-8,-7,3,4,7,-3,-4,4],[-4,-3,1,-8,-3,2,10,-9,-3,9,-8,6],[-6,8,10,1,-5,5,-4,-1,-1,3,5,2],[-10,-5,-3,4,10,9,-5,5,5,-8,-10,8],[-5,5,-4,-9,-7,3,-3,-9,-10,-4,9,7]],[[-7,6,7,9,6,-2,-10,-3,3,-6,2,3],[4,-8,-5,10,1,9,2,8,9,-8,-10,5],[8,2,-7,-3,2,-3,-6,7,8,5,-4,-8],[4,-4,-7,-8,10,-5,6,-7,9,3,4,-5],[6,2,5,-4,4,-3,-5,-5,10,-4,-10,-5],[5,-6,-8,1,5,5,-1,-8,5,5,-10,-8]],[[2,9,7,1,-1,-8,10,-6,-1,4,2,-7],[3,10,4,-8,-2,-6,-10,-8,4,4,5,10],[3,-8,-5,-1,-8,-6,8,9,-10,6,2,2],[10,-1,-6,-1,-4,-3,5,-9,-4,7,8,10],[1,-7,10,10,-5,-6,-1,-1,7,5,-7,-7],[1,3,-2,-5,-8,7,-2,-9,9,2,-2,8]]], dtype = "int32")#candidate|6508|(7, 6, 12)|const|int32
const_6509 = relay.const([[[2,5,9,-10,-9,-5,-2,1,-6,8,-2,-5],[7,-10,-2,8,2,4,1,4,-2,4,-7,-2],[5,8,-4,-6,8,4,6,-5,-5,8,6,7],[-10,-4,6,-1,-5,10,-1,-2,4,-10,-8,-9],[-6,9,10,10,9,-10,-9,7,1,5,6,10],[5,-10,-4,6,-7,-4,10,-8,9,3,-8,-3]],[[-10,8,8,-3,7,6,2,3,-4,4,-2,-5],[10,-8,10,5,10,3,-5,-10,10,6,-5,-9],[10,5,8,1,-9,6,10,9,-7,7,1,-6],[1,-10,5,-7,3,-4,-3,-8,-4,4,-6,-2],[-7,8,-6,8,-6,-6,-8,-3,5,3,-2,2],[7,-10,1,9,2,-8,10,8,6,9,4,-6]],[[-1,7,-4,-1,-5,6,-4,-7,-10,5,-5,-10],[-6,5,-2,9,4,9,4,-8,3,-8,9,-3],[4,-1,-2,8,-1,-8,-5,-8,-4,6,-9,9],[-8,-10,4,-6,-5,5,-9,5,-7,-4,-1,-3],[9,3,4,1,8,-1,-7,1,5,9,-1,5],[-9,-10,1,-5,3,-10,7,2,-7,8,-1,5]],[[-4,-3,1,3,-9,2,8,-10,-3,-1,6,-8],[6,6,-4,5,-7,3,6,-10,10,-5,-7,-1],[-9,-3,-6,7,-6,3,-6,-9,7,-1,-9,2],[-2,10,-3,-2,-5,-7,-5,-5,7,-2,-8,-6],[-5,10,9,-5,-8,-2,6,-3,-10,-2,-5,7],[-6,-3,-10,-9,-7,10,2,6,-8,1,4,-5]],[[-4,-9,-7,-1,5,-7,-4,-1,5,6,7,-9],[2,-1,6,3,4,-1,8,3,-7,-2,5,9],[-5,1,-8,-8,-2,9,4,10,-3,10,2,-7],[-4,-9,2,-2,4,10,-4,10,-5,4,10,9],[4,5,1,-6,-8,-5,-2,9,8,5,8,-8],[6,-2,5,-10,-1,8,4,8,-8,4,7,5]],[[3,-7,-9,3,6,-2,9,3,-6,3,-4,1],[3,1,1,7,-8,-6,-9,2,6,-10,7,-8],[-2,-10,1,8,1,6,-5,-5,-7,-10,1,4],[8,-4,-5,8,3,-6,3,10,3,-3,9,3],[-10,2,7,-1,-2,-1,-9,-6,9,7,-6,-6],[-5,9,-9,-7,7,2,-9,-10,8,-8,4,-9]],[[10,7,-5,6,1,3,8,-1,-1,-1,-6,9],[-4,-10,5,-3,5,10,2,9,1,-5,2,-4],[-9,-3,-5,8,1,2,-7,-2,5,-2,10,-8],[5,-10,9,2,-10,-6,7,-8,4,-8,-3,3],[4,2,-9,3,-6,-3,-8,7,-9,-4,-7,-7],[-10,-9,-7,10,-10,-3,5,-2,-10,9,9,-7]]], dtype = "int32")#candidate|6509|(7, 6, 12)|const|int32
bop_6510 = relay.less(const_6508.astype('bool'), relay.reshape(const_6509.astype('bool'), relay.shape_of(const_6508))) # shape=(7, 6, 12)
output = relay.Tuple([bop_6510,])
output2 = relay.Tuple([bop_6510,])
func_6527 = relay.Function([], output)
mod['func_6527'] = func_6527
mod = relay.transform.InferType()(mod)
output = func_6527()
func_6528 = relay.Function([], output)
mutated_mod['func_6528'] = func_6528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4592_call = mod.get_global_var('func_4592')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_6539 = func_4592_call()
call_6540 = func_4592_call()
func_4973_call = mod.get_global_var('func_4973')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_6549 = relay.TupleGetItem(func_4973_call(), 1)
call_6550 = relay.TupleGetItem(func_4974_call(), 1)
func_6230_call = mod.get_global_var('func_6230')
func_6238_call = mutated_mod.get_global_var('func_6238')
var_6572 = relay.var("var_6572", dtype = "uint16", shape = (960,))#candidate|6572|(960,)|var|uint16
const_6573 = relay.const([False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True], dtype = "bool")#candidate|6573|(320,)|const|bool
const_6574 = relay.const([-2.300995,-7.364444,-2.575433,-4.660493,-0.816809,-3.037117,-7.649750,7.552560,4.044677,-7.117041,-1.698654,-2.094541,5.792260,9.096483,-5.054103,-8.757509,6.455176,7.884705,-5.933860,5.458616,-7.024668,-8.033262,-8.895365,-5.268051,5.945973,-8.714578,2.987224,0.969505,7.337730,9.639084,-0.955003,-8.060829,-1.063103,-3.430777,2.831388,5.750649,7.561113,-3.819755,0.962991,3.338215,0.988446,-3.328771,-8.043301,6.944421,6.093269,7.827800,-1.514395,1.769384,5.962856,6.982702,1.630187,-8.040704,7.388262,4.702176,3.125505,1.990562,-4.598301,2.608487,8.599899,-3.027250,9.270242,5.235146,1.259344,-2.964932,-0.275950,4.565002,-4.001767,-1.312798,-8.493003,6.350219,-0.374084,-2.304760,-0.093283,6.165234,6.056254,-1.131706,0.110039,-6.144320,0.440795,8.521580,5.596956,8.442285,-3.111187,8.552320,3.325035,4.421022,1.959020,-3.756110,8.616145,5.743133,0.032332,-2.909721,8.795476,8.116149,0.099357,-2.628120,4.211002,6.054389,7.186335,-7.415950,4.364805,-0.271635,-2.302518,-6.945578,-1.906693,-0.255562,-6.394110,-7.325558,4.069665,-0.843502,-5.062502,4.428421,-1.698895,-6.683342,6.420545,0.936148,-0.668461,7.332448,-9.096485,-8.185423,-3.526152,5.785814,8.181107,-6.654015,1.270993,-1.071080,-7.110935,-3.351436,-0.898741,-6.483012,2.646208,-9.859521,-5.829462,-9.729459,6.300973,3.716469,9.414967,-0.807594,2.566913,-3.483278,9.209648,-4.814742,-9.905373,8.973363,6.046219,0.739062,1.715660,-4.498430,2.194728,-2.792626,-7.710693,-6.579894,-4.487213,-1.998251,-8.359385,6.094238,2.043004,3.270008,-2.391133,-6.420412,-6.549373,-6.844759,0.547458,9.623160,-7.715408,-3.763677,-4.137097,-4.805704,2.268323,-1.391691,9.586315,-7.089612,1.507917,9.625025,-1.836470,-0.915286,1.059018,-7.320205,5.058817,8.576993,0.263071,-2.363638,6.456918,7.031632,-1.241278,-2.148959,1.499967,-3.428044,-5.724152,-3.911318,-9.309616,0.885561,7.813705,-2.723500,-2.347187,-1.307031,5.040265,8.215411,-2.220777,-8.266693,-3.458215,-7.793156,2.538639,-7.053143,-0.467832,-7.031239,5.349070,-3.289599,9.662815,-5.621677,2.103200,4.226415,0.902304,4.353244,0.907949,-0.419238,-8.677409,8.134439,-3.741914,5.349960,-0.118874,0.859376,8.321550,4.187024,-2.527489,-0.823659,-4.681821,7.174651,-8.138351,8.480433,-1.665243,8.946004,7.235472,-2.665985,1.798651,-4.821401,7.014007,7.595026,-1.084074,5.156870,-5.484617,-5.936384,7.024033,2.357925,-4.858344,-0.612248,-2.963943,2.766426,-4.457320,9.278906,1.382312,-7.657116,4.117019,0.905728,-1.964997,6.880903,4.393104,4.499180,4.935148,-7.250344,-8.734438,-0.489312,6.704269,-6.238026,3.121467,8.315718,8.218841,7.309978,9.851252,-4.350875,8.653899,2.621331,8.941183,1.335744,9.209710,-7.166980,-5.744408,-4.196972,-5.432941,-7.048886,7.955494,-9.765978,4.202321,9.293645,1.463195,-1.797256,5.228438,1.504822,-2.220171,8.180467,-9.255602,9.792855,-6.422095,-9.194988,-0.257634,-7.287913,-1.499324,5.311647,-4.310315,7.149893,-3.878273,-4.852381,2.529252,7.197110,0.148540,2.410684,-3.748575,-2.475507,-2.734198,-4.984233,6.170938,-1.167581,5.131960,2.936146,4.038628,9.897776,-8.704854,9.320620,7.374617,-6.740217,-1.884103,8.335030,-1.231242,9.657095,-7.210605,-7.632241,6.579531,-0.973811,-2.753371,-1.498831,-0.405264,0.539236,-4.385026,-2.138625,3.351380,-6.117330,-3.406334,1.206263,2.492983,2.894614,-1.434270,-7.209586,0.774406,-6.471568,-5.016997,5.106138,1.344267,-6.072621,2.665629,6.343777,4.906194,-2.824162,8.629697,-2.387115,3.032770,3.382821,8.799659,6.645694,-1.722475,-9.972032,-9.404884,1.010451,3.339620,6.260952,-8.532471,5.345085,-4.922221,3.409058,2.482714,7.484378,4.188312,-4.051206,-8.279285,8.720602,-5.293091,7.138935,8.609618,-8.935444,-2.465638,-0.433372,-1.312433,-4.740922,4.764389,6.325686,-3.739226,8.626728,4.533926,-1.073280,4.145744,-4.358503,-1.382787,5.642703,-4.927630,-1.209782,8.274820,9.169357,-9.947368,5.472921,9.182037,0.068541,1.292961,5.019454,-0.331548,-8.302803,-7.703872,1.663814,-1.892046,-6.434141,-0.804835,-4.612142,8.929274,-6.025406,9.595194,-0.955105,-5.640595,-5.510397,-1.669197,-9.610597,-6.555470,6.241813,2.522587,4.707536,2.527499,-8.573649,-8.641246,3.655834,-5.290652,7.631665,3.464339,-1.443638,0.361687,8.072296,-5.184868,0.842340,-6.119135,4.322963,5.109113,-0.579472,7.558942,8.576375,8.260782,7.140222,-9.998841,7.739485,-2.899045,2.252908,8.801090,-1.519332,-2.078300,-7.880976,-1.487286,-6.632601,-5.218565,-7.783496,8.736450,9.036466,-2.179116,-1.143642,1.112882,1.251806,6.842015,-0.123153,5.389618,-3.579730,-5.117501,0.809155,2.696624,-7.878306,-5.798919,2.911378,-9.607459,-2.372782,8.677928,8.731921,-8.041863,2.162251,0.614188,-4.303945,-6.467880,-4.786898,7.122862,6.055549,2.089442,-6.406175,-6.047606,9.906185,-7.981755,7.817775,-4.505091,3.711916,0.511050,-8.395312,-7.783635,-7.785068,-1.227092,1.993528,-1.580783,-3.189575,-5.569563,2.152558,-8.165073,-7.099687,-3.229407,-2.848052,-9.457871,2.517069,-2.795402,4.347316,1.337355,6.080050,-1.313514,9.651207,8.285441,0.434960,5.373266,-3.523837,5.652493,-3.721445,9.462059,5.127120,-5.401951,7.759879,-6.451029,3.130437,-6.174403,9.523170,8.751257,4.397421,-2.096448,6.288729,7.436798,7.363980,-5.146453,-2.665380,6.944173,5.623120,5.072146,-2.790782,0.895652,2.246604,7.468038,4.536768,4.485099,6.225243,5.049143,7.667059,6.982167,3.600959,1.643926,7.824439,7.791887,-6.789403,8.992050,4.238099,5.669038,4.840205,1.266566,5.248504,5.629212,5.531754,5.128823,-1.242751,8.398437,-3.532350,6.649601,4.018139,6.447796,5.260616,9.742735,1.712208,6.813408,8.502300,2.433524,-8.376932,0.920994,5.771345,-4.144504,7.057363,-3.745008,-1.595709,5.480932,-5.270355,-0.905433,-8.476735,-2.386792,-0.736392,-0.411063,8.816477,-4.675555,-7.457590,6.647357,9.679325,6.206117,0.725535,-8.441109,-2.353157,-2.718539,-5.274992,-0.129734,-5.906709,8.842841,7.547822,-5.330657,8.584741,-5.622666,-7.166600,-8.806483,5.735735,6.808432,9.456860,0.296059,0.538903,-3.181438,-3.178637,-9.918565,-3.246917,2.771175,1.764207,-1.221365,-1.689370,5.286747,-9.958848,-2.221060,5.311958,-3.438997,-3.117762,-7.158470,5.509682,6.118246,-6.238292,-7.228635,0.377482,-2.363983,9.858751,-1.131604,2.877955,6.710063,5.680338,1.704801,2.339450,6.724352,1.109067,3.629175,-1.039752,-4.328028,3.330959,1.629652,-4.058277,1.288145,-8.643040,-6.473289,6.736366,8.054934,7.173410,-3.240456,6.934311,-4.558473,2.866976,2.414599,0.777459,-0.696342,4.810313,6.899585,0.920180,7.162586,-9.067719,9.760754,8.364342,-9.073215,-6.379569,9.272551,-7.944738,-3.801897,-2.581684,-6.971112,-9.901109,-5.613120,-6.422001,5.579886,-6.068943,-0.028247,-2.535478,2.424682,-3.680112,8.818520,-0.161776,-8.480941,-7.298437,-9.495332,7.050288,-2.835535,-7.510706,1.091224,6.725566,-0.284685,4.157126,-3.307591,8.127497,-4.194878,-6.525746,-9.794740,-6.551499,9.516452,7.253390,2.615614,-2.490543,-8.922531,-0.844438,-1.329580,5.246064,-7.237395,1.870292,-4.161522,-0.315108,-5.726057,-4.481488,9.424107,-0.515540,-1.263974,-1.440310,-5.931902,6.104477,4.367332,-3.747565,4.245639,2.373746,-4.141482,1.755312,0.028403,7.720225,-3.034398,-5.295049,4.507689,-1.709748,-1.950304,0.881252,-4.418792,-2.073270,8.607890,9.646742,-2.851038,-9.882709,2.062587,9.407381,6.679203,-2.702831,3.861157,7.888223,2.329270,-9.375146,-8.510732,-9.112571,-7.563089,6.718016,2.631868,9.618534,4.167035,2.576837,0.432563,2.023442,8.741396,-7.577636,-8.323152,3.410841,4.249052,3.070458,-3.001058,-8.381692,-5.046643,-8.404778,-0.300413,7.143397,5.905990,-6.873395,-0.430446,8.320552,-7.790895,-0.935703,7.307108,-7.327714,3.684059,-9.022530,-5.585586,-6.693897,-0.494577,-2.797738,-0.727400,-8.953455,-4.224899,-6.258238,-1.254613,5.223471,1.944015,6.129974,3.136291,-0.914823,-7.693312,-1.259498,1.167129,7.673734,1.437883,1.488660,-6.236081,9.969634,-0.649230,9.135112,4.255568,7.521101,-4.605234,7.407252,0.545149,-7.234461,1.661668,-7.833015,9.504895,-7.636327,2.802743,0.546437,-5.689890,1.882440,-8.061702,9.245067,3.081254,2.632692,-8.443992,0.985974,-8.144378,6.295011,3.094803,-6.290558,6.888860,1.943350], dtype = "float32")#candidate|6574|(832,)|const|float32
var_6575 = relay.var("var_6575", dtype = "uint8", shape = (2184, 1))#candidate|6575|(2184, 1)|var|uint8
var_6576 = relay.var("var_6576", dtype = "uint32", shape = (1, 198))#candidate|6576|(1, 198)|var|uint32
var_6577 = relay.var("var_6577", dtype = "bool", shape = (60,))#candidate|6577|(60,)|var|bool
const_6578 = relay.const([[9],[-5],[4],[-5],[-10],[-6],[-5],[7],[6],[3],[10],[2],[8],[7],[-7],[6],[-3],[-1],[6],[-7],[-4],[-9],[-1],[2],[6],[9],[-3],[-6],[-10],[4],[-5],[3],[3],[8],[-2],[6],[-7],[-5],[-3],[-6],[-2],[-5],[-5],[-10],[5],[2],[4],[10],[3],[-7],[-1],[1],[9],[-6],[4],[-3],[6],[-5],[-8],[-8],[7],[-3],[-9],[-8],[-8],[-7],[1],[-9],[-5],[5],[9],[-8],[-6],[10],[8],[-7],[9],[-7],[2],[3],[4],[1],[8],[-6],[-6],[-6],[8],[2],[9],[-8],[-9],[1],[6],[8],[-5],[9],[1],[-5],[-9],[5],[1],[-2],[5],[3],[-5],[8],[-7],[-4],[1],[10],[-5],[7],[7],[6],[-10],[-3],[2],[10],[-9],[-1],[3],[10],[10],[-2],[8],[-9],[8],[-10],[6],[5],[6],[-9],[-5],[-6],[-3],[1],[-6],[-7],[-5],[-9],[10],[5],[-6],[5],[10],[9],[9],[-6],[8],[-1],[1],[-8],[-2],[-5],[-1],[-9],[4],[9],[10],[3],[-5],[8],[2],[-10],[-8],[-3],[2],[-5],[-4],[1],[-7],[-8],[-6],[-3],[2],[-6],[6],[-1],[-8],[1],[2],[4],[-3],[10],[9],[5],[-4],[7],[10],[8],[-3],[9]], dtype = "uint16")#candidate|6578|(192, 1)|const|uint16
call_6571 = relay.TupleGetItem(func_6230_call(relay.reshape(var_6572.astype('uint16'), [1, 960]), relay.reshape(const_6573.astype('bool'), [320,]), relay.reshape(const_6574.astype('float32'), [832,]), relay.reshape(var_6575.astype('uint8'), [2184,]), relay.reshape(var_6576.astype('uint32'), [1, 198]), relay.reshape(var_6577.astype('bool'), [60,]), relay.reshape(const_6578.astype('uint16'), [192,]), ), 6)
call_6579 = relay.TupleGetItem(func_6238_call(relay.reshape(var_6572.astype('uint16'), [1, 960]), relay.reshape(const_6573.astype('bool'), [320,]), relay.reshape(const_6574.astype('float32'), [832,]), relay.reshape(var_6575.astype('uint8'), [2184,]), relay.reshape(var_6576.astype('uint32'), [1, 198]), relay.reshape(var_6577.astype('bool'), [60,]), relay.reshape(const_6578.astype('uint16'), [192,]), ), 6)
bop_6582 = relay.subtract(const_6574.astype('float32'), var_6575.astype('float32')) # shape=(2184, 832)
uop_6587 = relay.atanh(const_6578.astype('float32')) # shape=(192, 1)
func_4892_call = mod.get_global_var('func_4892')
func_4894_call = mutated_mod.get_global_var('func_4894')
call_6593 = relay.TupleGetItem(func_4892_call(), 0)
call_6594 = relay.TupleGetItem(func_4894_call(), 0)
output = relay.Tuple([call_6539,call_6549,call_6571,var_6572,const_6573,var_6576,var_6577,bop_6582,uop_6587,call_6593,])
output2 = relay.Tuple([call_6540,call_6550,call_6579,var_6572,const_6573,var_6576,var_6577,bop_6582,uop_6587,call_6594,])
func_6605 = relay.Function([var_6572,var_6575,var_6576,var_6577,], output)
mod['func_6605'] = func_6605
mod = relay.transform.InferType()(mod)
var_6606 = relay.var("var_6606", dtype = "uint16", shape = (960,))#candidate|6606|(960,)|var|uint16
var_6607 = relay.var("var_6607", dtype = "uint8", shape = (2184, 1))#candidate|6607|(2184, 1)|var|uint8
var_6608 = relay.var("var_6608", dtype = "uint32", shape = (1, 198))#candidate|6608|(1, 198)|var|uint32
var_6609 = relay.var("var_6609", dtype = "bool", shape = (60,))#candidate|6609|(60,)|var|bool
output = func_6605(var_6606,var_6607,var_6608,var_6609,)
func_6610 = relay.Function([var_6606,var_6607,var_6608,var_6609,], output)
mutated_mod['func_6610'] = func_6610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4973_call = mod.get_global_var('func_4973')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_6622 = relay.TupleGetItem(func_4973_call(), 0)
call_6623 = relay.TupleGetItem(func_4974_call(), 0)
uop_6627 = relay.exp(call_6622.astype('float32')) # shape=(16, 11, 3)
uop_6629 = relay.exp(call_6623.astype('float32')) # shape=(16, 11, 3)
output = uop_6627
output2 = uop_6629
func_6632 = relay.Function([], output)
mod['func_6632'] = func_6632
mod = relay.transform.InferType()(mod)
mutated_mod['func_6632'] = func_6632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6632_call = mutated_mod.get_global_var('func_6632')
call_6633 = func_6632_call()
output = call_6633
func_6634 = relay.Function([], output)
mutated_mod['func_6634'] = func_6634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4389_call = mod.get_global_var('func_4389')
func_4391_call = mutated_mod.get_global_var('func_4391')
call_6708 = relay.TupleGetItem(func_4389_call(), 0)
call_6709 = relay.TupleGetItem(func_4391_call(), 0)
func_3264_call = mod.get_global_var('func_3264')
func_3267_call = mutated_mod.get_global_var('func_3267')
var_6714 = relay.var("var_6714", dtype = "int64", shape = ())#candidate|6714|()|var|int64
const_6715 = relay.const([8,5,-8,-1,-7,6,8,10,-6,-7,-6,5,5,-5,2,2,-6,3,-1,-1,-9,-6,6,-7,6,5,-6,-1,10,1,10,5,2,9,2,-10,7,-10,-1,-3,-2,10,1,-10,-9,-4,-6,-4,6,-4,5,1,-1,5,9,-10,8,-8,1,-9,-9,-9,3,3,-1,8,-10,-10,-2,-4,2,-2,2,-1,-8,-3,-7,-9,-10,-8,9,6,8,2,-8,-1,-8,5,10,3,8,4,10,4,6,-10,-1,-8,-2,-9,7,-5,10,5,5,10,5,1,-7,-7,8,-2,4,7,10,-6,-5,-2,-10,5,-6,-1,8,8,6,10,3,-4,-10,2,-9,5,-1,9,3,-9,10,1,1,-5,7,2,7,-6,10,-7,8,1,10,-1,5,-3,9,2,3,8,3,9,-9,-7,3,-6,-5,-10,-8,-9,10,-5,-3,-10,6,-8,1,9,2,-7,-9,8,1,-10,-9,-1,8,-2,6,-9,2,-1,5,-3,9,2,4,-3,-9,5,3,-9,-3,-4,-4,1,-2,-1,6,4,5,-3,-7,3,1,-4,-3,5,-7,-4,4,9,10,3,-5,1,-4,-8,-1,6,8,-4,6,-8,10,4,-7,-2,-2,-5,3,-6,8,-7,-6,1,-5,-6,6,-4,5,-4,10,1,2,-8,10,1,1,-9,1,2,8,-6,3,3,-7,-2,3,-8,7,-10,-1,9,9,8,1,-5,-1,3,1,2,3,3,-7,-10,7,5,3,10,3,3,2,-1,10,-7,-10,-9,2,8,2,-6,-10,-9,-7,4,-10,4,-4,3,10,3,8,2,5,-1,-10,8,-10,-10,7,-6,10,9,4,-5,1,-4,-1,10,6,3,-2,5,-9,8,-8,4,-4,-1,-4,-3,-6,5,3,5,1,-7,-10,-5,-7,6,-9,3,-3,4,-3,-4,5,-10,9,2,-5,2,-9,-6,-4,-2,-3,8,3,3,10,7,-9,8,2,7,-8,3,-8,6,1,4,-4,10,-4,-3,2,-4,7,-8,-1,-8,-4,6,10,-3,-9,7,-9,1,1,2,4,-6,-7,3,1,-4,-2,8,-10,5,8,-3,10,-2,9,-4,-9,5,-7,1,10,3,-6,6,-4,5,4,10,-3,-4,-8,5,-9,3,-1,-3,10,2,1,-3,-10,6,8,7,10,-6,-10,-6,-5,6,-5,-6,-9,2,8,-4,6,4,7,7,-3,-8,6,-1,-4,5,-7,2,-3,5,-10,2,8,9,-7,3,-1,-10,-4,6,-9,-7,5,-2,6,10,6,-1,7,-2,-8,4,-7,-6,7,-8,6,3,-7,-10,4,-8,-3,9,-8,-6,-7,8,5,4,8,8,-9,7,-8,6,8,-6,-2,-5,-5,9,-1,5,-2,10,3,4,-1,-6,10,2,-8,1,5,-2,-4,4,9,3,-8,-1,-1,3,-8,10,2,5,2,2,1,8,5,3,3,5,-1,2,-3,-3,-3,10,6,-9,-3,-6,3,2,-7,-1,-2,-2,3,4,-9,1,-9,1,-8,4,9,8,7,9,-4,6,5,9,-2,-7,2,-4,1,-6,6,-2,3,7,1,-6,6,-3,8,10,6,4,7,9,-5,-7,-9,8,-3,2,10,-9,7,-7,3,-8,7,7,2,-2,-2,-8,1,3,-10,6,-2,-8,6,-8,5,7,10,7,-9,8,9,-2,-3,-2,9,-5,-2,2,8,-6,7,-6,7,-8,-4,10,2,2,7,8,-4,7,-6,6,10,-9,-5,-4,10,-3,-8,-8,4,-6,5,-5,9,-5,-2,10,-2,8,6,2,-6,2,7,-2,9,-2,-4,-3,2,7,-10,-5,-6,10,7,-9,8,-6,-3,-7,-8,7,9,-4,-10,4,-6,2,4,-5,5,-5,-7,-9,-9,5,9,-9,3,-9,4,3,-4,3,7,10,-4,-7,8,-3,4,6,1,-2,-9,-9,4,-5,5,8,-8,3,5,-6,6,2,9,-3,-3,7,6,7,8,-10,-1,-6,-9,2,-1,-9,-8,-6,8,9,6,3,4,4,1,-8,4,-1,4,-1,2,1,10,8,1,-7,-7,-9,-10,6,10,-2,-7,9,6,6,9,-9,7,9,9,4,-8,-1,-7,8,1,2,-2,-9,1,8,3,3,7,7,-7,3,4,-2,1,6,1,-7,-1,1,10,-3,9,2,-7,-3,7,-2,10,-2,5,10,-8,-6,3,-10,-9,7,-1,3,9,-2,1,-9,-9,1,-1,-7,10,-7,-5,8,-9,3,6,-8,1,3,-6,-5,3,7,7,-2,-1,9,-5,-9,4,6,9,6,6,4,-2,-6,-4,-1,-1,5,-2,-6,-1,-3,9,6,-5,-10,2,4,-4,8,-5,9,2,6,10,2,10,-6,-9,9,-5,-7,-4,10,3,-3,9,-6,6,6,5,7,7,6,-8,-2,-3,-7,-1,-2,4,-5,-9,-3,-3,3,9,5,5,-4,6,5,4,-6,-10,-9,6,-7,-5,2,-1,5,-6,8,2,6,5,-7,5,3,-2,10,-8,-4,9,-8,2,-10,4,4,7,3,-1,-2,4,2,10,5,-8,9,-7,-8,2,1,-6,-1,-5,7,-5,-4,4,4,-9,2,-7,5,-7,5,10,5,-9,9,3,9,4,-8,1,-2,10,-8,-4,3], dtype = "int64")#candidate|6715|(1008,)|const|int64
call_6713 = relay.TupleGetItem(func_3264_call(relay.reshape(var_6714.astype('int64'), []), relay.reshape(const_6715.astype('int64'), [9, 14, 8]), ), 1)
call_6716 = relay.TupleGetItem(func_3267_call(relay.reshape(var_6714.astype('int64'), []), relay.reshape(const_6715.astype('int64'), [9, 14, 8]), ), 1)
bop_6732 = relay.greater_equal(const_6715.astype('bool'), var_6714.astype('bool')) # shape=(1008,)
output = relay.Tuple([call_6708,call_6713,bop_6732,])
output2 = relay.Tuple([call_6709,call_6716,bop_6732,])
func_6738 = relay.Function([var_6714,], output)
mod['func_6738'] = func_6738
mod = relay.transform.InferType()(mod)
mutated_mod['func_6738'] = func_6738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6739 = relay.var("var_6739", dtype = "int64", shape = ())#candidate|6739|()|var|int64
func_6738_call = mutated_mod.get_global_var('func_6738')
call_6740 = func_6738_call(var_6739)
output = call_6740
func_6741 = relay.Function([var_6739], output)
mutated_mod['func_6741'] = func_6741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5805_call = mod.get_global_var('func_5805')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_6769 = func_5805_call()
call_6770 = func_5805_call()
output = call_6769
output2 = call_6770
func_6781 = relay.Function([], output)
mod['func_6781'] = func_6781
mod = relay.transform.InferType()(mod)
mutated_mod['func_6781'] = func_6781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6781_call = mutated_mod.get_global_var('func_6781')
call_6782 = func_6781_call()
output = call_6782
func_6783 = relay.Function([], output)
mutated_mod['func_6783'] = func_6783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6157_call = mod.get_global_var('func_6157')
func_6158_call = mutated_mod.get_global_var('func_6158')
call_6868 = relay.TupleGetItem(func_6157_call(), 0)
call_6869 = relay.TupleGetItem(func_6158_call(), 0)
var_6870 = relay.var("var_6870", dtype = "uint8", shape = (588, 14))#candidate|6870|(588, 14)|var|uint8
bop_6871 = relay.subtract(call_6868.astype('uint64'), var_6870.astype('uint64')) # shape=(588, 14)
bop_6874 = relay.subtract(call_6869.astype('uint64'), var_6870.astype('uint64')) # shape=(588, 14)
uop_6882 = relay.sin(var_6870.astype('float64')) # shape=(588, 14)
func_1428_call = mod.get_global_var('func_1428')
func_1433_call = mutated_mod.get_global_var('func_1433')
var_6888 = relay.var("var_6888", dtype = "uint32", shape = (198,))#candidate|6888|(198,)|var|uint32
var_6889 = relay.var("var_6889", dtype = "bool", shape = (60, 1))#candidate|6889|(60, 1)|var|bool
var_6890 = relay.var("var_6890", dtype = "float32", shape = (832,))#candidate|6890|(832,)|var|float32
call_6887 = relay.TupleGetItem(func_1428_call(relay.reshape(var_6888.astype('uint32'), [2, 11, 9]), relay.reshape(var_6889.astype('bool'), [60,]), relay.reshape(var_6890.astype('float32'), [832,]), ), 3)
call_6891 = relay.TupleGetItem(func_1433_call(relay.reshape(var_6888.astype('uint32'), [2, 11, 9]), relay.reshape(var_6889.astype('bool'), [60,]), relay.reshape(var_6890.astype('float32'), [832,]), ), 3)
func_4389_call = mod.get_global_var('func_4389')
func_4391_call = mutated_mod.get_global_var('func_4391')
call_6894 = relay.TupleGetItem(func_4389_call(), 0)
call_6895 = relay.TupleGetItem(func_4391_call(), 0)
uop_6914 = relay.acos(uop_6882.astype('float64')) # shape=(588, 14)
output = relay.Tuple([bop_6871,call_6887,var_6888,var_6889,var_6890,call_6894,uop_6914,])
output2 = relay.Tuple([bop_6874,call_6891,var_6888,var_6889,var_6890,call_6895,uop_6914,])
func_6917 = relay.Function([var_6870,var_6888,var_6889,var_6890,], output)
mod['func_6917'] = func_6917
mod = relay.transform.InferType()(mod)
mutated_mod['func_6917'] = func_6917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6917_call = mutated_mod.get_global_var('func_6917')
var_6919 = relay.var("var_6919", dtype = "uint8", shape = (588, 14))#candidate|6919|(588, 14)|var|uint8
var_6920 = relay.var("var_6920", dtype = "uint32", shape = (198,))#candidate|6920|(198,)|var|uint32
var_6921 = relay.var("var_6921", dtype = "bool", shape = (60, 1))#candidate|6921|(60, 1)|var|bool
var_6922 = relay.var("var_6922", dtype = "float32", shape = (832,))#candidate|6922|(832,)|var|float32
call_6918 = func_6917_call(var_6919,var_6920,var_6921,var_6922,)
output = call_6918
func_6923 = relay.Function([var_6919,var_6920,var_6921,var_6922,], output)
mutated_mod['func_6923'] = func_6923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6958 = relay.var("var_6958", dtype = "int16", shape = ())#candidate|6958|()|var|int16
var_6959 = relay.var("var_6959", dtype = "int16", shape = (10, 14, 13))#candidate|6959|(10, 14, 13)|var|int16
bop_6960 = relay.left_shift(var_6958.astype('int16'), var_6959.astype('int16')) # shape=(10, 14, 13)
output = relay.Tuple([bop_6960,])
output2 = relay.Tuple([bop_6960,])
func_6965 = relay.Function([var_6958,var_6959,], output)
mod['func_6965'] = func_6965
mod = relay.transform.InferType()(mod)
var_6966 = relay.var("var_6966", dtype = "int16", shape = ())#candidate|6966|()|var|int16
var_6967 = relay.var("var_6967", dtype = "int16", shape = (10, 14, 13))#candidate|6967|(10, 14, 13)|var|int16
output = func_6965(var_6966,var_6967,)
func_6968 = relay.Function([var_6966,var_6967,], output)
mutated_mod['func_6968'] = func_6968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5598_call = mod.get_global_var('func_5598')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_6979 = func_5598_call()
call_6980 = func_5598_call()
func_6632_call = mod.get_global_var('func_6632')
func_6634_call = mutated_mod.get_global_var('func_6634')
call_6986 = func_6632_call()
call_6987 = func_6632_call()
uop_7010 = relay.log10(call_6986.astype('float64')) # shape=(16, 11, 3)
uop_7012 = relay.log10(call_6987.astype('float64')) # shape=(16, 11, 3)
output = relay.Tuple([call_6979,uop_7010,])
output2 = relay.Tuple([call_6980,uop_7012,])
func_7013 = relay.Function([], output)
mod['func_7013'] = func_7013
mod = relay.transform.InferType()(mod)
mutated_mod['func_7013'] = func_7013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7013_call = mutated_mod.get_global_var('func_7013')
call_7014 = func_7013_call()
output = call_7014
func_7015 = relay.Function([], output)
mutated_mod['func_7015'] = func_7015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6453_call = mod.get_global_var('func_6453')
func_6455_call = mutated_mod.get_global_var('func_6455')
call_7039 = relay.TupleGetItem(func_6453_call(), 0)
call_7040 = relay.TupleGetItem(func_6455_call(), 0)
output = relay.Tuple([call_7039,])
output2 = relay.Tuple([call_7040,])
func_7041 = relay.Function([], output)
mod['func_7041'] = func_7041
mod = relay.transform.InferType()(mod)
mutated_mod['func_7041'] = func_7041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7041_call = mutated_mod.get_global_var('func_7041')
call_7042 = func_7041_call()
output = call_7042
func_7043 = relay.Function([], output)
mutated_mod['func_7043'] = func_7043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_7060 = relay.TupleGetItem(func_3941_call(), 0)
call_7061 = relay.TupleGetItem(func_3942_call(), 0)
func_2616_call = mod.get_global_var('func_2616')
func_2619_call = mutated_mod.get_global_var('func_2619')
var_7067 = relay.var("var_7067", dtype = "int64", shape = (2925,))#candidate|7067|(2925,)|var|int64
var_7068 = relay.var("var_7068", dtype = "uint16", shape = (192,))#candidate|7068|(192,)|var|uint16
call_7066 = relay.TupleGetItem(func_2616_call(relay.reshape(var_7067.astype('int64'), [15, 13, 15]), relay.reshape(var_7068.astype('uint16'), [192,]), ), 8)
call_7069 = relay.TupleGetItem(func_2619_call(relay.reshape(var_7067.astype('int64'), [15, 13, 15]), relay.reshape(var_7068.astype('uint16'), [192,]), ), 8)
output = relay.Tuple([call_7060,call_7066,var_7067,var_7068,])
output2 = relay.Tuple([call_7061,call_7069,var_7067,var_7068,])
func_7077 = relay.Function([var_7067,var_7068,], output)
mod['func_7077'] = func_7077
mod = relay.transform.InferType()(mod)
var_7078 = relay.var("var_7078", dtype = "int64", shape = (2925,))#candidate|7078|(2925,)|var|int64
var_7079 = relay.var("var_7079", dtype = "uint16", shape = (192,))#candidate|7079|(192,)|var|uint16
output = func_7077(var_7078,var_7079,)
func_7080 = relay.Function([var_7078,var_7079,], output)
mutated_mod['func_7080'] = func_7080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4892_call = mod.get_global_var('func_4892')
func_4894_call = mutated_mod.get_global_var('func_4894')
call_7138 = relay.TupleGetItem(func_4892_call(), 0)
call_7139 = relay.TupleGetItem(func_4894_call(), 0)
output = relay.Tuple([call_7138,])
output2 = relay.Tuple([call_7139,])
func_7146 = relay.Function([], output)
mod['func_7146'] = func_7146
mod = relay.transform.InferType()(mod)
output = func_7146()
func_7147 = relay.Function([], output)
mutated_mod['func_7147'] = func_7147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5681_call = mod.get_global_var('func_5681')
func_5683_call = mutated_mod.get_global_var('func_5683')
call_7312 = func_5681_call()
call_7313 = func_5681_call()
output = relay.Tuple([call_7312,])
output2 = relay.Tuple([call_7313,])
func_7314 = relay.Function([], output)
mod['func_7314'] = func_7314
mod = relay.transform.InferType()(mod)
output = func_7314()
func_7315 = relay.Function([], output)
mutated_mod['func_7315'] = func_7315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5353_call = mod.get_global_var('func_5353')
func_5355_call = mutated_mod.get_global_var('func_5355')
call_7322 = relay.TupleGetItem(func_5353_call(), 0)
call_7323 = relay.TupleGetItem(func_5355_call(), 0)
func_1135_call = mod.get_global_var('func_1135')
func_1139_call = mutated_mod.get_global_var('func_1139')
var_7325 = relay.var("var_7325", dtype = "float64", shape = (924, 1))#candidate|7325|(924, 1)|var|float64
var_7326 = relay.var("var_7326", dtype = "float32", shape = (832,))#candidate|7326|(832,)|var|float32
call_7324 = relay.TupleGetItem(func_1135_call(relay.reshape(var_7325.astype('float64'), [924,]), relay.reshape(var_7326.astype('float32'), [832,]), ), 6)
call_7327 = relay.TupleGetItem(func_1139_call(relay.reshape(var_7325.astype('float64'), [924,]), relay.reshape(var_7326.astype('float32'), [832,]), ), 6)
func_5102_call = mod.get_global_var('func_5102')
func_5104_call = mutated_mod.get_global_var('func_5104')
call_7332 = func_5102_call()
call_7333 = func_5102_call()
uop_7334 = relay.erf(call_7332.astype('float32')) # shape=(16, 11, 3)
uop_7336 = relay.erf(call_7333.astype('float32')) # shape=(16, 11, 3)
var_7347 = relay.var("var_7347", dtype = "float64", shape = (7, 9, 15))#candidate|7347|(7, 9, 15)|var|float64
bop_7348 = relay.bitwise_or(call_7324.astype('uint32'), relay.reshape(var_7347.astype('uint32'), relay.shape_of(call_7324))) # shape=(7, 9, 15)
bop_7351 = relay.bitwise_or(call_7327.astype('uint32'), relay.reshape(var_7347.astype('uint32'), relay.shape_of(call_7327))) # shape=(7, 9, 15)
output = relay.Tuple([call_7322,var_7325,var_7326,uop_7334,bop_7348,])
output2 = relay.Tuple([call_7323,var_7325,var_7326,uop_7336,bop_7351,])
func_7376 = relay.Function([var_7325,var_7326,var_7347,], output)
mod['func_7376'] = func_7376
mod = relay.transform.InferType()(mod)
mutated_mod['func_7376'] = func_7376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7376_call = mutated_mod.get_global_var('func_7376')
var_7378 = relay.var("var_7378", dtype = "float64", shape = (924, 1))#candidate|7378|(924, 1)|var|float64
var_7379 = relay.var("var_7379", dtype = "float32", shape = (832,))#candidate|7379|(832,)|var|float32
var_7380 = relay.var("var_7380", dtype = "float64", shape = (7, 9, 15))#candidate|7380|(7, 9, 15)|var|float64
call_7377 = func_7376_call(var_7378,var_7379,var_7380,)
output = call_7377
func_7381 = relay.Function([var_7378,var_7379,var_7380,], output)
mutated_mod['func_7381'] = func_7381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6157_call = mod.get_global_var('func_6157')
func_6158_call = mutated_mod.get_global_var('func_6158')
call_7407 = relay.TupleGetItem(func_6157_call(), 0)
call_7408 = relay.TupleGetItem(func_6158_call(), 0)
func_6965_call = mod.get_global_var('func_6965')
func_6968_call = mutated_mod.get_global_var('func_6968')
const_7410 = relay.const(-9, dtype = "int16")#candidate|7410|()|const|int16
const_7411 = relay.const([[-5],[-7],[-9],[-4],[-5],[6],[5],[-4],[5],[5],[7],[9],[9],[-5],[-9],[3],[10],[-8],[1],[9],[5],[9],[5],[10],[7],[10],[-5],[1],[6],[-8],[-1],[-9],[-3],[1],[-3],[9],[8],[-5],[1],[-1],[-5],[6],[3],[-5],[-3],[3],[3],[4],[1],[9],[6],[9],[6],[-4],[-1],[9],[7],[5],[3],[10],[2],[10],[7],[1],[-9],[-9],[8],[8],[-2],[-3],[9],[-7],[5],[8],[-2],[4],[2],[-9],[-7],[-7],[5],[-3],[4],[7],[4],[-8],[-1],[-1],[9],[-4],[8],[4],[3],[-10],[-8],[-9],[3],[-5],[3],[-2],[3],[-2],[-7],[9],[-2],[8],[3],[1],[9],[-8],[-8],[-1],[-9],[5],[-8],[3],[-9],[6],[-7],[5],[-9],[1],[-6],[10],[4],[2],[5],[1],[10],[7],[5],[1],[-6],[3],[3],[-7],[8],[6],[10],[9],[4],[-6],[-7],[-2],[-4],[-8],[3],[-4],[-8],[4],[-2],[4],[9],[-8],[-6],[3],[-10],[-8],[5],[-7],[10],[-10],[7],[-4],[1],[-6],[7],[5],[-10],[4],[-9],[7],[-5],[10],[4],[1],[-3],[1],[-2],[-4],[-10],[-6],[-10],[4],[-3],[7],[5],[-3],[8],[2],[-1],[8],[-1],[5],[-3],[-8],[9],[2],[4],[-1],[-4],[3],[10],[-2],[1],[10],[5],[7],[8],[-1],[1],[6],[3],[3],[-3],[8],[-1],[-9],[-7],[1],[4],[-10],[-3],[5],[9],[4],[7],[-1],[-7],[-10],[9],[10],[-9],[2],[9],[-5],[-7],[2],[-4],[-3],[6],[4],[-7],[-4],[1],[5],[-3],[9],[5],[9],[-9],[8],[9],[-7],[-8],[-7],[-6],[-8],[6],[-9],[7],[7],[10],[-2],[-9],[8],[-3],[-5],[-8],[-9],[-1],[-1],[-7],[-1],[-10],[-10],[-4],[-6],[4],[9],[7],[3],[-6],[6],[9],[10],[-10],[-8],[-9],[-10],[1],[5],[8],[10],[-9],[5],[-8],[8],[5],[6],[9],[-5],[-7],[6],[3],[-5],[7],[-10],[3],[-6],[8],[-10],[8],[-10],[2],[-8],[-4],[-10],[5],[6],[-5],[2],[3],[8],[1],[10],[-5],[-6],[8],[7],[-2],[9],[-9],[6],[6],[-2],[5],[2],[4],[-5],[3],[-4],[6],[1],[-6],[4],[-5],[-3],[-3],[-8],[2],[-1],[-4],[4],[4],[-4],[-7],[-5],[-8],[8],[7],[3],[6],[-8],[-6],[-1],[8],[3],[6],[1],[9],[7],[4],[8],[10],[-10],[-10],[1],[-9],[-7],[7],[1],[-2],[9],[-4],[-8],[-8],[8],[8],[-5],[-3],[-7],[8],[-1],[9],[1],[-7],[-3],[-9],[-7],[-5],[-7],[-3],[-4],[-2],[-1],[-6],[10],[-6],[-8],[-8],[-1],[1],[4],[-8],[-4],[-7],[5],[-9],[-2],[10],[8],[10],[9],[-8],[1],[5],[-10],[7],[8],[-6],[-10],[7],[-4],[-8],[7],[-8],[5],[4],[3],[10],[7],[5],[-4],[3],[10],[6],[4],[-9],[10],[-3],[-5],[-4],[10],[-2],[-2],[-5],[8],[8],[6],[5],[1],[-8],[-5],[-1],[4],[5],[-6],[8],[9],[-9],[4],[9],[5],[3],[-9],[7],[-10],[-4],[4],[3],[3],[5],[-9],[7],[5],[-8],[-9],[-1],[4],[-8],[-4],[4],[-2],[2],[-6],[-3],[-5],[10],[5],[9],[-3],[-1],[3],[9],[-7],[2],[-3],[-9],[5],[-10],[8],[-1],[4],[-6],[-7],[1],[1],[-2],[-3],[4],[9],[-5],[-10],[-7],[8],[7],[-3],[-9],[-8],[-7],[10],[-6],[-9],[7],[-1],[-4],[-5],[-3],[3],[-2],[-9],[7],[7],[-10],[2],[3],[5],[-5],[8],[-6],[3],[1],[9],[6],[6],[-3],[9],[7],[-9],[-3],[4],[5],[5],[-6],[3],[4],[-4],[-7],[1],[-4],[-3],[1],[8],[-10],[-5],[-8],[-10],[10],[4],[-10],[10],[5],[1],[8],[7],[-10],[-1],[-2],[9],[8],[4],[-2],[-10],[2],[10],[10],[-6],[-5],[-9],[2],[7],[6],[-2],[-6],[8],[-6],[-9],[-9],[-3],[-2],[-2],[5],[9],[6],[5],[6],[9],[7],[-10],[-2],[-7],[5],[7],[3],[-4],[2],[-7],[-4],[9],[8],[8],[-5],[8],[6],[-6],[-10],[-9],[9],[8],[7],[-6],[10],[8],[-4],[3],[-2],[-10],[6],[2],[7],[4],[-1],[2],[-10],[-1],[-2],[6],[4],[5],[-2],[2],[7],[-2],[9],[7],[-9],[3],[4],[1],[6],[1],[-1],[-10],[-2],[5],[-3],[-9],[-6],[-5],[2],[-2],[3],[-3],[3],[-10],[-8],[-6],[9],[-5],[1],[6],[-6],[4],[3],[-8],[-1],[8],[-8],[-2],[-6],[7],[-5],[-6],[9],[5],[1],[1],[8],[9],[5],[8],[10],[2],[8],[-6],[-6],[2],[-7],[6],[-8],[-5],[-6],[-6],[4],[-6],[5],[-6],[10],[2],[4],[6],[-4],[-3],[-5],[-5],[2],[3],[8],[10],[7],[10],[-10],[8],[6],[9],[9],[-2],[-2],[-1],[2],[1],[10],[1],[5],[10],[7],[-5],[-8],[-8],[4],[-4],[5],[-5],[-9],[-5],[6],[6],[-9],[-4],[8],[6],[3],[2],[-4],[-4],[10],[-1],[-6],[-1],[3],[-7],[-1],[5],[-9],[4],[-2],[-5],[-2],[4],[9],[-4],[8],[1],[2],[-10],[-9],[5],[9],[10],[10],[7],[6],[7],[-9],[6],[9],[-7],[7],[-2],[2],[-7],[-8],[-1],[-4],[-6],[6],[-8],[-7],[10],[6],[-4],[-8],[-5],[-8],[6],[-10],[1],[5],[6],[2],[8],[7],[-8],[-3],[-10],[8],[5],[4],[-3],[-8],[4],[-1],[-5],[-6],[10],[10],[6],[5],[2],[6],[-6],[-6],[10],[-10],[4],[-1],[-5],[5],[3],[-8],[-9],[-2],[-8],[1],[-5],[-3],[-9],[2],[1],[-2],[2],[-5],[-8],[-7],[-2],[-3],[-5],[-8],[-9],[6],[5],[-5],[-8],[-6],[10],[4],[-1],[-9],[9],[-9],[2],[2],[4],[4],[-8],[-9],[10],[9],[-2],[-7],[-5],[6],[-1],[-5],[2],[-1],[-6],[2],[2],[5],[-6],[5],[10],[-4],[-1],[7],[-5],[9],[10],[8],[10],[6],[4],[-5],[-6],[8],[-5],[-8],[9],[9],[6],[-5],[1],[-8],[-10],[4],[-10],[3],[10],[2],[-8],[-8],[5],[10],[-9],[-5],[9],[7],[-4],[2],[3],[-3],[8],[-9],[-5],[4],[3],[-8],[9],[4],[1],[2],[-7],[-9],[-4],[-6],[-10],[-2],[-4],[9],[-1],[-5],[-7],[3],[-3],[4],[4],[3],[7],[-4],[-4],[9],[-9],[4],[-1],[-5],[8],[-5],[2],[-10],[4],[-8],[-4],[-2],[4],[1],[8],[4],[3],[1],[1],[-6],[-7],[-3],[-10],[-8],[1],[-3],[-9],[-3],[2],[-1],[-5],[8],[-10],[-2],[8],[-9],[1],[-5],[-7],[7],[9],[2],[-6],[-8],[-10],[-9],[-3],[5],[-7],[-6],[6],[-9],[9],[10],[-7],[5],[-7],[-5],[-3],[-3],[2],[-10],[-10],[-10],[-3],[-1],[4],[-6],[6],[-3],[4],[-10],[-5],[4],[-9],[-3],[-9],[-8],[9],[6],[-4],[10],[9],[-3],[3],[7],[-3],[8],[3],[8],[-1],[3],[-5],[8],[8],[-5],[-3],[4],[-1],[4],[-4],[9],[1],[7],[-1],[7],[7],[1],[2],[-5],[5],[5],[-3],[9],[-6],[7],[-5],[9],[-6],[-9],[-3],[-9],[8],[-2],[1],[-1],[7],[4],[6],[5],[-8],[4],[-1],[-9],[-9],[-5],[7],[-5],[-6],[-3],[6],[3],[1],[7],[-1],[-9],[-5],[2],[6],[-4],[-2],[-9],[7],[-5],[-3],[-7],[-4],[6],[8],[-3],[6],[-7],[5],[-8],[1],[-5],[-2],[-5],[10],[-1],[-8],[-6],[1],[-8],[-5],[-9],[2],[-1],[-5],[7],[-10],[-2],[-9],[-3],[-5],[-6],[5],[5],[-5],[-4],[-3],[1],[-8],[2],[3],[3],[4],[-8],[-2],[-5],[-5],[10],[-2],[7],[-10],[-8],[-3],[10],[-3],[-9],[4],[10],[7],[2],[-8],[6],[8],[5],[-5],[-7],[-3],[-7],[6],[-2],[-10],[5],[-2],[3],[-2],[-9],[-1],[-6],[-5],[1],[5],[-4],[-3],[-9],[-10],[7],[-1],[-5],[7],[4],[-2],[10],[10],[-6],[-8],[6],[5],[4],[-2],[-8],[-3],[6],[7],[-8],[-9],[4],[7],[-9],[-9],[-3],[-2],[-2],[10],[-8],[10],[-7],[-4],[8],[-4],[8],[1],[7],[5],[7],[2],[2],[-3],[-4],[2],[-5],[9],[5],[5],[-5],[-4],[-2],[-4],[-4],[-6],[-2],[5],[2],[-10],[-10],[8],[5],[7],[1],[5],[-9],[-10],[3],[2],[10],[10],[-6],[-7],[2],[-5],[-10],[-6],[-2],[-4],[5],[10],[8],[6],[3],[-9],[-4],[6],[4],[10],[-3],[-8],[10],[9],[-9],[7],[-4],[-9],[-9],[6],[-1],[-7],[-3],[-6],[-10],[-5],[-1],[-7],[9],[5],[9],[-1],[2],[-7],[-4],[-5],[7],[-1],[8],[-9],[4],[-1],[-9],[8],[-4],[-7],[6],[8],[-7],[-9],[8],[-6],[-7],[-5],[-4],[5],[-10],[-5],[-7],[-8],[-5],[-6],[2],[-8],[-8],[2],[2],[-9],[6],[-6],[-8],[-10],[-9],[9],[5],[7],[-4],[-10],[-6],[7],[-5],[10],[-10],[-6],[4],[-9],[-3],[3],[4],[-8],[-1],[1],[-7],[-2],[-7],[-6],[10],[10],[6],[-6],[-8],[-5],[4],[4],[9],[-8],[-6],[-6],[8],[-5],[6],[9],[-1],[8],[7],[-10],[-1],[-7],[-10],[-4],[5],[-1],[-9],[-4],[-4],[-5],[-4],[8],[5],[3],[-10],[-6],[-5],[-5],[-6],[-5],[-8],[-1],[-3],[7],[-6],[8],[9],[5],[10],[6],[10],[-2],[-9],[-1],[-5],[-5],[5],[2],[-1],[-5],[-3],[8],[9],[-6],[1],[2],[7],[6],[8],[-10],[-4],[-5],[-1],[8],[8],[-10],[8],[-3],[-1],[-9],[-4],[-2],[2],[5],[-5],[-2],[10],[-7],[8],[2],[1],[-9],[7],[-6],[-2],[1],[-6],[4],[-2],[8],[6],[6],[1],[6],[9],[7],[7],[8],[7],[-4],[-1],[-4],[-9],[4],[1],[-9],[-4],[-2],[8],[-4],[5],[6],[-5],[-8],[10],[-3],[9],[7],[8],[-9],[5],[-8],[1],[-4],[10],[-6],[9],[-7],[-10],[-9],[6],[-3],[-1],[-5],[4],[-2],[2],[-8],[1],[-1],[-9],[-6],[-3],[-3],[7],[-3],[-5],[-10],[-9],[-9],[-8],[1],[-8],[2],[10],[10],[4],[-10],[-8],[-10],[-6],[-10],[1],[1],[-6],[10],[9],[6],[10],[-7],[-3],[2],[5],[-4],[6],[8],[9],[4],[1],[-10],[4],[-2],[3],[10],[-6],[-6],[8],[-6],[-3],[-5],[-4],[-10],[2],[-5],[-9],[-9],[4],[6],[9],[-3],[-7],[-4],[10],[-7],[10],[-9],[-5],[-9],[2],[10],[-8],[-4],[8],[2],[-10],[-2],[3],[-1],[8],[3],[9],[6],[2],[3],[-9],[5],[9],[2],[1],[-7],[-6],[-7],[9],[-3],[7],[-6],[-9],[-2],[-8],[-4],[5],[-6],[1],[6],[-1],[-1],[3],[7],[6],[-10],[-7],[1],[1],[-6],[-6],[7],[2],[-10],[3],[-2],[-8],[-3],[-3],[-5],[-2],[1],[-1],[5],[6],[10],[4],[5],[-5],[6],[10],[4],[3],[9],[10],[4],[-8],[1],[-9],[-3],[8],[7],[3],[7],[-9],[-5],[10],[-7],[7],[-8],[1],[-10],[9],[10],[8],[3],[9],[9],[5],[9],[8],[5],[3],[3],[-9],[8],[-5],[10],[-2],[1],[6],[-7],[7],[-6],[-1],[-6],[-8],[6],[-2],[-3],[10],[-10],[-2],[8],[-1],[-5],[7],[1],[-9],[4],[-3],[-8],[3],[4],[5],[-6],[-1],[-1],[-7],[6],[-1],[6],[-2],[-2],[5],[10],[8],[8],[-5],[7],[-10],[-8],[-1],[3],[-1],[-7],[-9],[-10],[9],[3],[-8],[1],[2],[-7],[2],[9],[-1],[10],[-6],[-10],[-1],[9],[2],[-4],[-1],[-7],[9],[-5],[9],[-7],[8],[-4],[3],[-10],[8],[-5],[-9],[-10],[6],[-3],[8],[-4],[-10],[-7],[-2],[2],[10],[-10],[-10],[1],[-10],[-7],[-3],[-1],[-1],[-3],[-6],[8],[-9],[5]], dtype = "int16")#candidate|7411|(1820, 1)|const|int16
call_7409 = relay.TupleGetItem(func_6965_call(relay.reshape(const_7410.astype('int16'), []), relay.reshape(const_7411.astype('int16'), [10, 14, 13]), ), 0)
call_7412 = relay.TupleGetItem(func_6968_call(relay.reshape(const_7410.astype('int16'), []), relay.reshape(const_7411.astype('int16'), [10, 14, 13]), ), 0)
func_7041_call = mod.get_global_var('func_7041')
func_7043_call = mutated_mod.get_global_var('func_7043')
call_7415 = relay.TupleGetItem(func_7041_call(), 0)
call_7416 = relay.TupleGetItem(func_7043_call(), 0)
func_5667_call = mod.get_global_var('func_5667')
func_5672_call = mutated_mod.get_global_var('func_5672')
const_7418 = relay.const([10,-5,-9,10,-7,-7,-3,8,10,7,-5,-5,7,-5,4,6,-8,-10,-5,-2,7,-9,-10,6,-8,3,2,-2,6,1,5,-3,2,9,4,-10,-5,-1,-7,-6,-10,8,-6,2,6,-1,-3,-6,-6,10,8,-8,10,-7,-6,4,1,9,10,9,-7,7,-3,-2,-9,8,4,-2,7,3,-2,1,-9,-1,4,-5,10,-10,6,-3,-6,-4,-9,7,4,9,-9,1,3,-6,-4,9,-6,1,2,-9,-7,1,7,-1,-9,1,5,5,6,6,-6,-7,5,-8,-2,-5,10,-6,-5,-2,-1,2,4,3,-3,-1,-3,3,6,3,8,8,8,-7,-1,5,1,-8,-7,7,8,-8,8,-9,3,-4,-1,-1,8,-10,-6,-1,-2,-1,9,-8,-8,10,-8,-2,-10,-5,1,-2,3,-8,-6,-5,-9,9,6,7,-6,10,7,-6,-8,-7,-7,8,10,-1,4,-9,4,-10,-7,-4,7,6,6,8,5,5,-6,-5,6,7,2,2,5,-6], dtype = "uint32")#candidate|7418|(198,)|const|uint32
const_7419 = relay.const([4,4,7,6,-9,5,-3,-6,-4,10,6,-4,5,5,-8,-10,4,-4,5,-3,2,-2,6,-5,-8,8,6,6,2,1,-4,4,-2,10,-10,-4,1,-7,-3,-9,7,8,9,-7,7,-1,-1,-8,-5,2,1,8,-1,9,9,-6,5,-2,-8,-7,10,-6,5,4,4,7,-2,-9,2,-7,-8,-9,-7,-9,-1,1,-6,-2,3,-3,2,4,7,-6,-3,-9,-6,-4,-9,-7,9,2,5,8,-10,6,-3,7,-6,-8,-8,10,5,-6], dtype = "int32")#candidate|7419|(104,)|const|int32
call_7417 = relay.TupleGetItem(func_5667_call(relay.reshape(const_7418.astype('uint32'), [198,]), relay.reshape(const_7410.astype('int8'), []), relay.reshape(call_7407.astype('uint8'), [7, 84]), relay.reshape(const_7419.astype('int32'), [104,]), ), 7)
call_7420 = relay.TupleGetItem(func_5672_call(relay.reshape(const_7418.astype('uint32'), [198,]), relay.reshape(const_7410.astype('int8'), []), relay.reshape(call_7407.astype('uint8'), [7, 84]), relay.reshape(const_7419.astype('int32'), [104,]), ), 7)
func_1569_call = mod.get_global_var('func_1569')
func_1576_call = mutated_mod.get_global_var('func_1576')
const_7429 = relay.const([[6],[9],[-5],[-10],[-2],[5],[-6],[-10],[-2],[5],[-9],[8],[2],[7],[9],[9],[-7],[-3],[1],[-3],[4],[4],[5],[-6],[-10],[-10],[9],[-2],[5],[9],[9],[9],[-4],[-10],[10],[9],[-9],[2],[4],[10],[1],[2],[-1],[1],[4],[-10],[-5],[10],[-5],[-4],[4],[-9],[-4],[-9],[-10],[-4],[-1],[9],[9],[-8],[9],[5],[-8],[3],[5],[-8],[-1],[-4],[-7],[5],[1],[8],[-4],[-4],[6],[-5],[9],[-9],[4],[2],[-9],[8],[7],[-7],[4],[2],[1],[-7],[-7],[-9],[2],[-10],[-1],[8],[2],[5],[-10],[1],[9],[-4],[10],[-10],[7],[6],[-8],[-1],[-9],[3],[-1],[-7],[3],[-6],[7],[2],[5],[-8],[-3],[-8],[6],[6],[-10],[-8],[9],[9],[2],[-5],[-8],[-8],[8],[2],[6],[-10],[10],[9],[1],[2],[2],[10],[-1],[1],[7],[-10],[9],[-1],[-10],[10],[-2],[-4],[10],[8],[1],[-3],[-2],[-6],[4],[-8],[-5],[5],[8],[1],[-8],[3],[3],[4],[-3],[5],[6],[8],[-4],[1],[-2],[-8],[-9],[3],[10],[3],[-4],[10],[4],[-3],[10],[-10],[7],[-6],[-4],[9],[-8],[-5],[10],[4],[1],[-8],[2],[4],[-5],[4],[2],[-6],[3],[10],[-1],[-3],[5],[-5],[7],[7],[-7],[-3],[-6],[-6],[2],[8],[5],[7],[-6],[-5],[-7],[7],[8],[9],[3],[3],[10],[8],[3],[-6],[-5],[10],[-10],[8],[-3],[4],[-1],[2],[-5],[5],[6],[8],[4],[-3],[-2],[-1],[-7],[7],[-8],[-5],[7],[-3],[-4],[-10],[-7],[-5],[-2],[10],[-8],[2],[-1],[-7],[6],[6],[-8],[-6],[-4],[-3],[-5],[7],[7],[6],[4],[-7],[8],[4],[-2],[10],[6],[1],[10],[-9],[8],[3],[5],[9],[4],[1],[-3],[2],[-8],[3],[-9],[10],[-10],[9],[10],[-4],[-2],[-6],[-7],[-6],[10],[8],[-4],[5],[9],[3],[-10],[3],[-4],[7],[2],[2],[8],[-8],[-3],[-7],[2],[6],[-8],[-7],[10],[4],[3],[-9],[-2],[8],[-10],[8],[10],[-5],[10],[8],[9],[-9],[7],[-5],[8],[-9],[7],[-5],[-6],[2],[5],[4],[-6],[10],[4],[10],[-4],[-2],[7],[-9],[7],[5],[6],[2],[4],[10],[2],[5],[-4],[5],[-5],[-3],[6],[-9],[3],[7],[6],[5],[-1],[-5],[-10],[4],[-8],[1],[-6],[-2],[-3],[-7],[10],[-1],[3],[-6],[-9],[10],[7],[5],[-2],[-1],[-10],[4],[9],[6],[-1],[-1],[8],[-6],[2],[-8],[3],[3],[7],[9],[-8],[10],[3],[3],[-2],[-5],[9],[-5],[-10],[8],[3],[6],[-7],[-9],[-8],[-2],[1],[4],[5],[-7],[6],[9],[-2],[4],[5],[5],[-9],[-5],[-10],[9],[-5],[6],[-4],[-1],[10],[6],[-1],[-3],[9],[-4],[-1],[-2],[2],[7],[6],[-1],[8],[6],[-8],[10],[6],[-3],[-3],[2],[6],[-6],[-9],[-5],[10],[2],[-9],[-6],[10],[10],[-10],[7],[-8],[-4],[1],[-1],[-6],[-1],[-7],[-5],[-10],[2],[9],[8],[-9],[-1],[-9],[-4],[-1],[8],[-8],[6],[-7],[-6],[-5],[1],[7],[-5],[-9],[-10],[-1],[7],[9],[9],[-2],[1],[-5],[2],[8],[-6],[1],[8],[-3],[6],[8],[-10],[7],[1],[9],[-6],[-6],[-10],[8],[2],[-2],[-6],[-10],[-2],[-9],[-4],[-6],[-6],[-4],[-9],[-6],[3],[-5],[-2],[7],[-8],[-4],[5],[-1],[6],[-7],[7],[-5],[-8],[-9],[-1],[3],[-8],[8],[-1],[3],[7],[4],[-3],[9],[4],[-10],[-1],[1],[3],[8],[6],[1],[-2],[-3],[-6],[-10],[6],[-5],[8],[-10],[1],[-3],[-4],[-6],[6],[-4],[-7],[-6],[4],[2],[8],[4],[-8],[4],[-4],[10],[4],[-10],[8],[7],[9],[-6],[-6],[7],[-4],[9],[1],[-5],[-2],[-6],[-5],[2],[10],[8],[-7],[9],[6],[-6],[8],[2],[10],[-3],[5],[-3],[8],[1],[-8],[1],[-4],[-3],[5],[1],[-9],[-6],[8],[-10],[-9],[3],[-2],[-9],[6],[4],[-5],[-1],[5],[2],[-9],[-5],[-7],[7],[9],[6],[-2],[-4],[-5],[-5],[-4],[-6],[-3],[8],[2],[9],[-10],[-10],[-5],[2],[4],[-4],[9],[1],[10],[7],[-2],[-3],[-10],[4],[-8],[3],[-7],[-6],[-2],[8],[8],[-4],[-1],[-1],[10],[7],[10],[8],[10],[4],[-7],[9],[-4],[8],[-3],[1],[10],[10],[-10],[-2],[-8],[-2],[-8],[10],[4],[-7],[5],[-5],[-1],[4],[-9],[7],[10],[-9],[-8],[-9],[-2],[5],[-3],[10],[-3],[6],[-5],[6],[4],[-9],[-4],[-10],[-4],[5],[2],[8],[-6],[3],[-2],[-7],[-2],[-2],[6],[2],[-9],[-10],[-9],[-9],[1],[-7],[-7],[8],[10],[5],[6],[6],[4],[6],[7],[9],[1],[10],[2],[-5],[3],[-8],[6],[6],[-9],[5],[-10],[5],[8],[-6],[-9],[2],[-6],[2],[-4],[-5],[-8],[7],[-8],[10],[-1],[-3],[8],[9],[-9],[-3],[-1],[8],[9],[-7],[6],[10],[-4],[-8],[10],[-2],[-6],[4],[-4],[2],[-7],[2],[1],[-5],[-8],[5],[-6],[-8],[4],[5],[-7],[-4],[3],[-7],[-10],[-10],[3],[5],[10],[6],[6],[-1],[-8],[5],[6],[-5],[6],[-6],[-9],[5],[1],[8],[-7],[-7],[7],[-6],[5],[-5],[8],[-5],[9],[-9],[-9],[-3],[-7],[8],[6],[-1],[-1],[2],[4],[-10],[7],[1],[5],[-2],[-6],[-9],[-6],[-1],[-3],[-3],[7],[3],[-4],[7],[-5],[6],[2],[7],[-3],[-2],[-10],[2],[-3],[2],[-6],[-6],[9],[-2],[-8],[-9],[-3],[5],[2],[3],[-3],[-4],[3],[-2],[3],[-4],[-9],[3],[-2],[10],[-3],[5],[6],[3],[3],[5],[10],[2],[9],[2],[8],[-10],[-8],[4],[7],[2],[-5],[-8],[-6],[-2],[7],[-7],[-9],[10],[3],[-8],[10],[7],[-1],[8],[4],[-8],[8],[3],[4],[-4],[-3],[8],[10],[-7],[-10],[3],[5],[7],[-10],[3],[-6],[5],[4],[-7],[3],[9],[-2],[5],[-5],[-6],[-9],[6],[-10],[9],[-8],[4],[-3],[6],[-8],[8],[-4],[-7],[-4],[-8],[-5],[5],[-5],[10],[-3],[-5],[-3],[-3],[-1],[6],[3],[1],[10],[6],[10],[-6],[-10],[3],[-3],[-1],[3],[-7],[7],[5],[-10],[7],[4],[5],[-6],[10],[4],[-5],[9],[2],[-8],[-8],[8],[-9],[5],[3],[4],[1],[8],[4],[6],[1],[1],[6],[3],[-2],[10],[-4],[-3],[-3],[7],[-4],[-6],[9],[-2],[9],[8],[-9],[8],[-9],[-5],[4],[10],[6],[-10],[-2],[7],[-6],[-2],[8],[-9],[-1],[10],[5],[7],[-1],[-4],[-10],[2],[8],[6],[-7],[-7],[-5],[-9],[2],[-1],[4],[-4],[1],[3],[-8],[6],[1],[-3],[-10],[-10],[-2],[-3],[5],[-10],[-1],[-1],[2],[3],[9],[-7],[3],[4],[-3],[-5],[-7],[-1],[2],[-6],[5],[6],[-8],[-10],[4],[-6],[-9],[9],[-6],[6],[-1],[-2],[5],[-9],[-7],[-6],[2],[-10],[-8],[-3],[-6],[-5],[-3],[7],[-9],[-9],[-5],[3],[6],[7],[-9],[-10],[4],[3],[2],[6],[8],[5],[10],[-1],[6],[-1],[4],[-2],[-8],[-6],[3],[-9],[-7],[1],[-10],[-9],[10],[10],[-5],[-9],[4],[5],[6],[8],[8],[2],[-1],[-10],[-3],[10],[-10],[4],[5],[2],[-6],[3],[4],[7],[7],[5],[-1],[-9],[-6],[-5],[-10],[6],[5],[3],[-5],[-10],[-7],[2],[2],[1],[-7],[7],[1],[-4],[-4],[10],[3],[-5],[-8],[-8],[3],[-6],[10],[-2],[-1],[4],[-7],[-8],[6],[9],[-1],[4],[-5],[-2],[-7],[-3],[-6],[-1],[-1],[3],[-3],[-10],[9],[-3],[9],[6],[9],[4],[1],[4],[-6],[-8],[-10],[-3],[1],[-2],[4],[-7],[9],[-9],[-1],[8],[5],[5],[-10],[1],[10],[10],[-10],[10],[10],[6],[-2],[-4],[-4],[-9],[8],[-5],[3],[-6],[-1],[-1],[-8],[-8],[6],[10],[9],[-8],[8],[2],[-7],[-6],[-2],[7],[-1],[10],[-3],[2],[2],[10],[7],[5],[-5],[-7],[-7],[4],[3],[10],[-1],[3],[-3],[5],[-4],[5],[-6],[-5],[6],[-10],[-3],[3],[-7],[-7],[-9],[8],[-5],[5],[5],[-1],[-8],[4],[-5],[8],[9],[2],[7],[3],[6],[-6],[6],[-4],[-6],[10],[-10],[10],[-9],[-1],[-3],[6],[9],[3],[7],[9],[3],[-8],[-1],[1],[-3],[1],[-2],[-9],[-3],[-7],[-9],[8],[3],[3],[-5],[-3],[8],[-1],[-6],[-8],[-3],[-10],[10],[-8],[-2],[-9],[10],[-9],[7],[4],[4],[2],[1],[-5],[-6],[-5],[4],[6],[7],[-4],[10],[9],[1],[4],[-10],[1],[6],[-10],[-7],[-5],[7],[-3],[-5],[4],[-6],[-10],[4],[-6],[-7],[-4],[-9],[-5],[-8],[-3],[9],[1],[-7],[-9],[-5],[8],[-3],[-8],[8],[-3],[-4],[-6],[-2],[1],[5],[7],[3],[-9],[2],[5],[-1],[9],[-1],[-3],[10],[-8],[3],[-1],[-4],[-4],[-6],[2],[-7],[-2],[-1],[8],[-1],[-7],[3],[5],[-6],[-2],[-6],[1],[-7],[2],[6],[-3],[-7],[3],[3],[1],[8],[6],[8],[9],[-4],[-10],[-5],[-4],[-7],[-6],[-10],[-5],[-5],[4],[-10],[1],[3],[-1],[1],[-4],[2],[7],[6],[-10],[6],[8],[-6],[-3],[-1],[-8],[-2],[-1],[10],[-5],[-2],[8],[-2],[1],[-8],[4],[6],[2],[-5],[10],[1],[-7],[1],[-9],[9],[-2],[2],[5],[6],[-3],[5],[-10],[7],[1],[-4],[8],[-3],[10],[4],[-2],[3],[6],[-5],[9],[-6],[-8],[2],[-4],[-8],[3],[-7],[9],[7],[-3],[9],[7],[-1],[-7],[-5],[10],[1],[-2],[3],[-3],[10],[5],[6],[-9],[-3],[7],[-8],[-2],[-9],[-5],[-7],[4],[2],[10],[4],[8],[-9],[5],[-5],[10],[7],[-10],[2],[-3],[-2],[3],[-3],[9],[7],[-1],[-5],[8],[10],[-9],[8],[-6],[7],[-1],[9],[9],[-4],[3],[3],[3],[3],[2],[-2],[10],[-2],[10],[-10],[-8],[-2],[5],[-2],[-5],[1],[4],[-9],[-2],[10],[10],[4],[6],[1],[-7],[-2],[-8],[-3],[6],[-1],[2],[8],[-4],[2],[1],[1],[5],[-1],[1],[-7],[-3],[-5],[-3],[-7],[-4],[7],[-8],[1],[-4],[-9],[-4],[-4],[6],[-2],[-7],[7],[-7],[-4],[1],[-7],[-10],[10],[-1],[-2],[-3],[-8],[3],[-7],[-9],[-6],[-7],[-10],[-5],[5],[6],[10],[10],[5],[-8],[-6],[2],[-9],[-8],[-4],[5],[-5],[4],[7],[10],[5],[5],[3],[5],[9],[-9],[-4],[1],[-3],[-10],[-7],[-8],[-7],[8],[4],[-7],[-3],[6],[10],[-5],[5],[-1],[4],[2],[2],[6],[-7],[4],[9],[-8],[-9],[5],[7],[-9],[3],[3],[-10],[6],[-8],[-3],[10],[-2],[6],[-9],[-5],[1],[1],[-7],[5],[3],[-1],[-5],[1],[-5],[10],[1],[-9],[-7],[8],[-1],[2],[-8],[-6],[-9],[-10],[1],[9],[2],[-5],[-10],[7],[5],[6],[-1],[7],[-7],[4],[3],[-2],[-2],[-7],[4],[7],[7],[-7],[9],[10],[-9],[5],[1],[4],[2],[-7],[7],[-7],[2],[10],[-9],[5],[10],[-7],[-5],[-2],[-5],[6],[10],[6],[-7],[7],[2],[3],[-8],[-1],[-1],[-5],[8],[10],[10],[10],[1],[-1],[-6],[-3],[2],[9],[1],[-10],[-4],[-8],[-7],[3],[-6],[9],[-7],[1],[-4],[8],[-1],[-5],[10],[7],[-3],[-2],[7],[-1],[2],[10],[-9],[4],[-7],[-1],[-7],[-1],[10],[9],[9],[3],[2],[8],[-5],[6],[4],[-7],[-4],[-6],[-6],[-1],[6],[1],[-7],[7],[-8],[-5],[-4],[-2],[3],[8],[3],[-10],[-6],[9],[3],[-7],[10],[-6],[8],[-1],[4],[9],[-3],[8],[-10],[-3],[2],[1],[10],[-2],[-7],[-4],[6],[-4],[-5],[-1],[2],[-8],[-2],[1],[5],[-2],[-9],[-6],[2],[-2],[6],[-6],[7],[-7],[6],[1],[7],[-3],[10],[-8],[9],[-3],[-4],[5],[-7],[-4],[4],[5],[1],[-4],[-7],[5],[6],[4],[3],[2],[-5],[-8],[2],[-6],[-4],[-1],[-2],[8],[6],[2],[-6],[-1],[6],[-10],[-9],[-9],[-7],[-3],[4],[-7],[-10],[5],[-7],[-7],[6],[8],[4],[-6],[-5],[9],[1],[8],[9],[-9],[3],[-1],[6],[-6],[10],[6],[1],[-8],[3],[7],[-2],[-4],[6],[-3],[5],[8],[-7],[2],[-7],[-6],[10],[-5],[-6],[-7],[-8],[-9],[-1],[-7],[4],[4],[1],[-9],[2],[-4],[10],[8],[-4],[2],[-7],[-10],[-3],[7],[-9],[3],[-4],[5],[8],[6],[7],[-1],[-1],[-8],[3],[6],[-1],[4],[3],[-8],[-8],[8],[-5],[-1],[-8],[4],[-8],[2],[-3],[4],[-4],[-7],[7],[9],[-5],[-4],[7],[8],[4],[-6],[6],[-8],[5],[4],[4],[-6],[-10],[-3],[4],[-7],[-10],[-3],[3],[-8],[1],[-1],[-6],[-3],[-1],[-8],[7],[-3],[-9],[-2],[-10],[-2],[-9],[5],[8],[-9],[9],[-10],[-9],[5],[10],[-4],[9],[1],[-4],[1],[-1],[-2],[9],[2],[-5],[10],[3],[1],[3],[-1],[-9],[-9],[2],[8],[-5],[10],[3],[-6],[-3],[2],[1],[2],[-2],[-7],[8],[7],[3],[-10],[5],[1],[-7],[6],[4],[4],[2],[3],[-10],[9],[-7],[8],[-4],[-5],[-2],[-4],[-2],[-9],[-7],[-1],[-8],[-6],[5],[-6],[-6],[8],[3],[1],[2],[8],[2],[2],[-8],[-5],[5],[4],[2],[-6],[1],[1],[-8],[3],[6],[1],[-1],[-3],[1],[-6],[-6],[2],[6],[-7],[-7],[-5],[-4],[8],[-5],[3],[6],[-9],[-5],[9],[-8],[4],[6],[7],[5],[-10],[6],[3],[-2],[-2],[-1],[-10],[1],[3],[2],[3],[-8],[5],[-5],[8],[6],[-2],[-3],[-2],[5],[4],[1],[2],[-3],[-9],[10],[-6],[8],[-4],[6],[3],[-10],[-6],[-10],[-2],[4],[-1],[-9],[-10],[-10],[9],[2],[-10],[-9],[-5],[6],[6],[-5],[-1],[-3],[-9],[8],[-4],[5]], dtype = "uint8")#candidate|7429|(2184, 1)|const|uint8
const_7430 = relay.const([True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False], dtype = "bool")#candidate|7430|(60,)|const|bool
var_7431 = relay.var("var_7431", dtype = "float32", shape = (832,))#candidate|7431|(832,)|var|float32
call_7428 = relay.TupleGetItem(func_1569_call(relay.reshape(const_7429.astype('uint8'), [14, 12, 13]), relay.reshape(const_7429.astype('uint8'), [14, 12, 13]), relay.reshape(const_7418.astype('uint32'), [198,]), relay.reshape(const_7430.astype('bool'), [60,]), relay.reshape(var_7431.astype('float32'), [832,]), ), 0)
call_7432 = relay.TupleGetItem(func_1576_call(relay.reshape(const_7429.astype('uint8'), [14, 12, 13]), relay.reshape(const_7429.astype('uint8'), [14, 12, 13]), relay.reshape(const_7418.astype('uint32'), [198,]), relay.reshape(const_7430.astype('bool'), [60,]), relay.reshape(var_7431.astype('float32'), [832,]), ), 0)
uop_7439 = relay.rsqrt(call_7417.astype('float64')) # shape=(13, 2, 4)
uop_7441 = relay.rsqrt(call_7420.astype('float64')) # shape=(13, 2, 4)
output = relay.Tuple([call_7407,call_7409,const_7410,const_7411,call_7415,const_7418,const_7419,call_7428,const_7429,const_7430,var_7431,uop_7439,])
output2 = relay.Tuple([call_7408,call_7412,const_7410,const_7411,call_7416,const_7418,const_7419,call_7432,const_7429,const_7430,var_7431,uop_7441,])
func_7459 = relay.Function([var_7431,], output)
mod['func_7459'] = func_7459
mod = relay.transform.InferType()(mod)
var_7460 = relay.var("var_7460", dtype = "float32", shape = (832,))#candidate|7460|(832,)|var|float32
output = func_7459(var_7460)
func_7461 = relay.Function([var_7460], output)
mutated_mod['func_7461'] = func_7461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5900_call = mod.get_global_var('func_5900')
func_5902_call = mutated_mod.get_global_var('func_5902')
call_7511 = relay.TupleGetItem(func_5900_call(), 1)
call_7512 = relay.TupleGetItem(func_5902_call(), 1)
output = relay.Tuple([call_7511,])
output2 = relay.Tuple([call_7512,])
func_7522 = relay.Function([], output)
mod['func_7522'] = func_7522
mod = relay.transform.InferType()(mod)
output = func_7522()
func_7523 = relay.Function([], output)
mutated_mod['func_7523'] = func_7523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_7526 = relay.TupleGetItem(func_3941_call(), 0)
call_7527 = relay.TupleGetItem(func_3942_call(), 0)
func_6140_call = mod.get_global_var('func_6140')
func_6142_call = mutated_mod.get_global_var('func_6142')
call_7536 = relay.TupleGetItem(func_6140_call(), 2)
call_7537 = relay.TupleGetItem(func_6142_call(), 2)
output = relay.Tuple([call_7526,call_7536,])
output2 = relay.Tuple([call_7527,call_7537,])
func_7553 = relay.Function([], output)
mod['func_7553'] = func_7553
mod = relay.transform.InferType()(mod)
output = func_7553()
func_7554 = relay.Function([], output)
mutated_mod['func_7554'] = func_7554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5900_call = mod.get_global_var('func_5900')
func_5902_call = mutated_mod.get_global_var('func_5902')
call_7597 = relay.TupleGetItem(func_5900_call(), 0)
call_7598 = relay.TupleGetItem(func_5902_call(), 0)
func_4530_call = mod.get_global_var('func_4530')
func_4533_call = mutated_mod.get_global_var('func_4533')
var_7613 = relay.var("var_7613", dtype = "uint16", shape = (960,))#candidate|7613|(960,)|var|uint16
call_7612 = relay.TupleGetItem(func_4530_call(relay.reshape(var_7613.astype('uint16'), [960,])), 2)
call_7614 = relay.TupleGetItem(func_4533_call(relay.reshape(var_7613.astype('uint16'), [960,])), 2)
func_995_call = mod.get_global_var('func_995')
func_998_call = mutated_mod.get_global_var('func_998')
var_7620 = relay.var("var_7620", dtype = "int32", shape = (1, 104))#candidate|7620|(1, 104)|var|int32
call_7619 = func_995_call(relay.reshape(var_7620.astype('int32'), [13, 2, 4]))
call_7621 = func_995_call(relay.reshape(var_7620.astype('int32'), [13, 2, 4]))
output = relay.Tuple([call_7597,call_7612,var_7613,call_7619,var_7620,])
output2 = relay.Tuple([call_7598,call_7614,var_7613,call_7621,var_7620,])
func_7624 = relay.Function([var_7613,var_7620,], output)
mod['func_7624'] = func_7624
mod = relay.transform.InferType()(mod)
var_7625 = relay.var("var_7625", dtype = "uint16", shape = (960,))#candidate|7625|(960,)|var|uint16
var_7626 = relay.var("var_7626", dtype = "int32", shape = (1, 104))#candidate|7626|(1, 104)|var|int32
output = func_7624(var_7625,var_7626,)
func_7627 = relay.Function([var_7625,var_7626,], output)
mutated_mod['func_7627'] = func_7627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7522_call = mod.get_global_var('func_7522')
func_7523_call = mutated_mod.get_global_var('func_7523')
call_7631 = relay.TupleGetItem(func_7522_call(), 0)
call_7632 = relay.TupleGetItem(func_7523_call(), 0)
output = relay.Tuple([call_7631,])
output2 = relay.Tuple([call_7632,])
func_7645 = relay.Function([], output)
mod['func_7645'] = func_7645
mod = relay.transform.InferType()(mod)
mutated_mod['func_7645'] = func_7645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7645_call = mutated_mod.get_global_var('func_7645')
call_7646 = func_7645_call()
output = call_7646
func_7647 = relay.Function([], output)
mutated_mod['func_7647'] = func_7647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3942_call = mutated_mod.get_global_var('func_3942')
call_7650 = relay.TupleGetItem(func_3941_call(), 0)
call_7651 = relay.TupleGetItem(func_3942_call(), 0)
func_5252_call = mod.get_global_var('func_5252')
func_5256_call = mutated_mod.get_global_var('func_5256')
var_7693 = relay.var("var_7693", dtype = "int8", shape = (72,))#candidate|7693|(72,)|var|int8
const_7694 = relay.const([True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False], dtype = "bool")#candidate|7694|(320,)|const|bool
call_7692 = relay.TupleGetItem(func_5252_call(relay.reshape(var_7693.astype('int8'), [72, 1]), relay.reshape(const_7694.astype('bool'), [320,]), ), 5)
call_7695 = relay.TupleGetItem(func_5256_call(relay.reshape(var_7693.astype('int8'), [72, 1]), relay.reshape(const_7694.astype('bool'), [320,]), ), 5)
output = relay.Tuple([call_7650,call_7692,var_7693,const_7694,])
output2 = relay.Tuple([call_7651,call_7695,var_7693,const_7694,])
func_7712 = relay.Function([var_7693,], output)
mod['func_7712'] = func_7712
mod = relay.transform.InferType()(mod)
var_7713 = relay.var("var_7713", dtype = "int8", shape = (72,))#candidate|7713|(72,)|var|int8
output = func_7712(var_7713)
func_7714 = relay.Function([var_7713], output)
mutated_mod['func_7714'] = func_7714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6527_call = mod.get_global_var('func_6527')
func_6528_call = mutated_mod.get_global_var('func_6528')
call_7730 = relay.TupleGetItem(func_6527_call(), 0)
call_7731 = relay.TupleGetItem(func_6528_call(), 0)
var_7732 = relay.var("var_7732", dtype = "bool", shape = (7, 6, 12))#candidate|7732|(7, 6, 12)|var|bool
bop_7733 = relay.logical_or(call_7730.astype('bool'), relay.reshape(var_7732.astype('bool'), relay.shape_of(call_7730))) # shape=(7, 6, 12)
bop_7736 = relay.logical_or(call_7731.astype('bool'), relay.reshape(var_7732.astype('bool'), relay.shape_of(call_7731))) # shape=(7, 6, 12)
bop_7744 = relay.multiply(bop_7733.astype('uint64'), relay.reshape(call_7730.astype('uint64'), relay.shape_of(bop_7733))) # shape=(7, 6, 12)
bop_7747 = relay.multiply(bop_7736.astype('uint64'), relay.reshape(call_7731.astype('uint64'), relay.shape_of(bop_7736))) # shape=(7, 6, 12)
output = bop_7744
output2 = bop_7747
func_7751 = relay.Function([var_7732,], output)
mod['func_7751'] = func_7751
mod = relay.transform.InferType()(mod)
mutated_mod['func_7751'] = func_7751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7752 = relay.var("var_7752", dtype = "bool", shape = (7, 6, 12))#candidate|7752|(7, 6, 12)|var|bool
func_7751_call = mutated_mod.get_global_var('func_7751')
call_7753 = func_7751_call(var_7752)
output = call_7753
func_7754 = relay.Function([var_7752], output)
mutated_mod['func_7754'] = func_7754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7013_call = mod.get_global_var('func_7013')
func_7015_call = mutated_mod.get_global_var('func_7015')
call_7763 = relay.TupleGetItem(func_7013_call(), 0)
call_7764 = relay.TupleGetItem(func_7015_call(), 0)
func_2499_call = mod.get_global_var('func_2499')
func_2501_call = mutated_mod.get_global_var('func_2501')
const_7767 = relay.const([-2.887683,-1.597717,-7.908424,0.075948,6.907398,-5.321811,-6.605866,-2.742889,3.549388,3.164659,6.369802,5.210717,1.484376,-9.568901,8.304089,-1.266818,8.775855,8.781418,7.580171,-0.477199,1.393708,-5.621925,1.717315,-7.300699,-2.698873,-1.868535,2.221937,2.543026,-9.835095,2.393718,0.728102,6.083164,-7.593895,-3.541437,-3.461868,-1.839719,7.582085,8.783491,-5.429389,-3.556811,6.760985,-9.758498,-6.328817,-6.652551,6.667468,-8.310238,4.991381,6.405539,7.302524,3.963236,-4.599600,7.339245,-8.191675,1.714876,-9.060436,3.731149,-3.453260,-0.266920,-3.019282,4.974914,-3.926142,-6.357925,-4.914794,2.314289,5.581995,9.714817,9.546567,-4.700338,1.658404,-8.627961,7.627375,6.211832,6.626547,-2.282447,-1.093418,0.318054,-8.067264,-6.905229,2.943959,-4.312296,4.003462,-9.089783,-1.239122,-3.519733,-5.664170,5.876995,1.581709,-2.196349,-6.772168,-0.102426,-9.658449,6.408013,3.522191,2.905419,6.030141,9.995884,8.313206,9.366520,-6.978639,5.048270,-0.814475,-8.954080,-8.445021,-8.546732,-0.551199,9.182592,-5.300127,0.402292,5.312630,-9.170147,-9.525897,9.584218,-9.613655,3.250477,-1.682119,0.372052,7.168502,-0.723562,-4.168028,-7.316575,9.614894,-8.323503,-0.443926,0.637536,-5.990865,-9.176571,-9.374814,5.700727,8.737558,0.113310,9.353842,-0.831287,7.348832,-8.936976,-0.881588,-3.554617,6.149231,8.402670,-0.620891,0.622770,0.004745,4.873078,1.031791,-3.932294,6.532920,-6.670527,-3.467870,7.161355,-0.086973,-8.586798,-8.846019,-9.770195,8.551611,7.424484,1.139151,-2.395765,-5.853591,-4.005493,-1.422482,-7.080658,-6.717749,8.043285,-0.111504,-4.120987,-9.964631,0.774624,5.480678,-7.815941,2.296322,-0.036885,-9.634638,9.536009,-5.305853,-8.550660,-6.847170,-6.391699,-3.320381,-4.225419,-5.944324,0.639948,7.994375,3.727625,-1.141218,0.580083,4.045159,-2.630209,-8.142599,6.659352,7.987723,-9.808312,-4.100596,2.628147,-1.138375,3.878053,-8.560616,4.590585,5.913870,5.958802,5.656884,-1.984018,-5.631374,-7.765251,-0.354809,-9.974708,-5.103015,-5.749603,4.178363,7.983752,9.860785,3.936195,3.935192,9.306399,0.126143,-7.703632,4.697196,-6.168350,-0.345370,-3.541300,-2.537728,-1.170799,3.884480,7.348292,-6.299187,-4.422531,-1.355475,-6.591358,2.886829,-0.338825,-1.538049,0.307422,6.329137,4.394566,-3.534027,7.286204,-8.144777,3.009469,-8.992782,6.191122,8.062499,-6.176717,3.861450,3.322294,-0.497451,2.759188,8.684652,-8.014118,-2.547481,-2.166474,8.471478,4.875006,2.054020,-0.302485,-4.605335,6.039094,3.551955,8.478941,-9.026948,9.097255,-8.573975,7.495528,3.272309,5.452588,2.372096,4.265933,9.332263,0.502256,0.560601,-5.832882,1.451988,-5.852323], dtype = "float32")#candidate|7767|(270,)|const|float32
call_7766 = relay.TupleGetItem(func_2499_call(relay.reshape(const_7767.astype('float32'), [15, 2, 9])), 0)
call_7768 = relay.TupleGetItem(func_2501_call(relay.reshape(const_7767.astype('float32'), [15, 2, 9])), 0)
output = relay.Tuple([call_7763,call_7766,const_7767,])
output2 = relay.Tuple([call_7764,call_7768,const_7767,])
func_7773 = relay.Function([], output)
mod['func_7773'] = func_7773
mod = relay.transform.InferType()(mod)
mutated_mod['func_7773'] = func_7773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7773_call = mutated_mod.get_global_var('func_7773')
call_7774 = func_7773_call()
output = call_7774
func_7775 = relay.Function([], output)
mutated_mod['func_7775'] = func_7775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6781_call = mod.get_global_var('func_6781')
func_6783_call = mutated_mod.get_global_var('func_6783')
call_7785 = func_6781_call()
call_7786 = func_6781_call()
func_4171_call = mod.get_global_var('func_4171')
func_4176_call = mutated_mod.get_global_var('func_4176')
var_7791 = relay.var("var_7791", dtype = "uint16", shape = (960,))#candidate|7791|(960,)|var|uint16
var_7792 = relay.var("var_7792", dtype = "bool", shape = (320,))#candidate|7792|(320,)|var|bool
var_7793 = relay.var("var_7793", dtype = "float32", shape = (832,))#candidate|7793|(832,)|var|float32
call_7790 = relay.TupleGetItem(func_4171_call(relay.reshape(var_7791.astype('uint16'), [1, 960]), relay.reshape(var_7792.astype('bool'), [320,]), relay.reshape(var_7793.astype('float32'), [832,]), ), 3)
call_7794 = relay.TupleGetItem(func_4176_call(relay.reshape(var_7791.astype('uint16'), [1, 960]), relay.reshape(var_7792.astype('bool'), [320,]), relay.reshape(var_7793.astype('float32'), [832,]), ), 3)
func_1135_call = mod.get_global_var('func_1135')
func_1139_call = mutated_mod.get_global_var('func_1139')
const_7800 = relay.const([[-6.199683,2.493969,0.263002,9.686731,0.514581,-3.264188,-7.706733,-8.086592,-2.723262,4.056470,4.260013,0.097731,-6.293757,-8.026724,4.508288,-9.096206,2.603135,1.878237,6.969399,3.190293,9.860346,4.017779,-4.422098,-7.085274,1.597744,-7.624509,0.567197,-7.111279,-4.141159,-4.419534,9.596449,4.546879,-9.364656,3.613303,3.430302,2.419819,6.805403,-0.486161,-2.453096,-7.738570,-5.345900,-7.385570,-6.676881,6.412101,-7.978023,-9.176519,4.400245,-8.368658,-7.086451,2.806717,-5.123423,2.593849,3.629333,2.808929,-4.607778,7.627664,-9.268345,-1.403240,0.356459,2.486923,5.900375,0.299005,5.331358,5.945500,3.447554,-4.555335,0.445775,3.620559,0.268988,-9.529273,-8.648233,3.506461,-4.637983,5.348394,6.998111,8.705293,-9.626473,8.299832,-7.081179,-9.878420,0.781660,0.690082,-1.774149,5.362436,-4.846116,8.918664,-5.552758,4.460167,-7.622043,-2.009709,-6.961196,-6.699814,-2.276485,-4.435408,-4.967381,-6.729807,5.514175,-6.775654,0.478690,-7.835408,-1.432790,-7.006604,-6.424842,0.462162,2.174220,-5.932703,0.557177,-2.565670,6.213313,-8.431664,0.780854,1.402410,-0.533309,-6.355648,-5.818010,1.511870,-3.212151,7.197934,-5.112196,1.913971,-9.802107,6.671867,0.864448,2.503516,-7.695361,-8.950955,-8.287627,8.168704,-7.969660,-8.322151,-8.509880,7.282533,-2.207276,1.158447,1.072485,-1.845653,-4.589036,4.859708,3.979484,-3.431896,-0.093941,-4.996107,0.749302,2.101897,8.923858,-0.659093,-3.885564,9.916501,-9.280502,3.953406,0.028391,7.787286,9.402241,9.515673,5.126725,-1.442601,9.713345,-3.047550,-6.324491,-9.109128,-1.270294,2.551083,-0.522592,4.113281,4.759593,-5.480835,-0.672944,3.909579,-8.154191,-4.644743,-3.940639,1.417799,3.641637,-4.931476,0.060402,-3.036531,3.205330,-1.938073,-2.646119,-4.490393,-1.161213,-4.276023,-8.443269,-6.639654,2.146349,-9.466727,-3.155293,8.022341,-7.074379,3.243556,-7.482180,5.219231,-5.957531,3.139005,5.347568,-2.677967,-2.617017,-4.276300,-9.686582,7.587528,0.977723,-8.355004,3.069541,-0.717815,4.994527,8.545793,8.079225,-1.835029,9.603385,-3.995883,2.648072,-0.162659,9.611241,8.432677,-2.227683,6.403013,-6.342644,3.572433,3.210743,1.208705,9.824599,-3.531444,5.847231,-9.125897,-7.133733,0.978166,-3.790645,2.692160,-5.370731,9.208364,3.562315,1.787278,-9.706287,3.292287,-7.457992,5.280480,-4.523448,-0.493840,-6.426338,-8.159918,4.139642,-4.136354,0.425711,0.932912,-5.024500,-4.750241,-7.355555,-2.542512,-4.320865,-7.988433,-2.952035,9.521962,-4.611919,8.861072,-8.774236,3.158936,5.373284,2.436636,-4.508992,3.613722,-4.739094,-5.906569,2.547946,9.904473,6.778039,-0.513160,1.501780,-7.982482,6.610988,-0.501545,9.016600,3.014301,-3.268911,4.022888,6.620215,8.147154,3.898040,-4.417615,-9.366893,-2.061753,-5.121992,-1.182709,-4.814370,5.971990,-5.703036,-1.160591,1.066452,-2.322681,-8.197948,-0.682746,-9.326615,2.253944,-7.546110,-3.609112,-7.993113,-2.295212,9.200828,-3.031263,1.862795,8.865626,-4.833847,9.261940,6.702518,0.701276,1.561912,-7.276139,1.246244,1.683192,8.141265,8.224495,3.296521,-1.968855,-7.868693,-0.248131,-8.183622,2.324306,9.318340,6.222947,-6.580580,7.038525,-2.209491,-7.654420,7.489312,2.584760,5.883799,-5.443621,-9.708486,-7.943514,-3.775117,-3.669013,-7.917036,3.872645,-3.484309,1.515107,2.337946,1.870304,-6.461587,2.760584,0.791046,-5.900342,0.891846,3.725782,-8.262974,-1.308477,4.168070,9.744523,-6.467175,1.510309,5.152024,-0.945366,9.018094,4.612411,5.251677,-6.356591,7.253041,0.389640,8.212555,8.966001,-8.815781,-8.595877,-0.996076,-7.903297,-4.937960,-8.746243,-4.788593,-7.852350,-8.252445,4.016375,2.475705,-8.141465,-6.816484,0.438670,8.706405,0.455099,3.513780,3.328241,-5.117178,-1.515469,1.070393,-3.139809,4.337339,-7.496682,-7.990394,6.331008,5.910267,4.373044,-1.796145,3.351832,1.147906,8.070437,6.428804,-5.693011,-8.352468,-5.670906,6.770592,6.273867,-8.422004,-0.488064,5.389953,-3.512414,-5.802248,8.262066,-6.173405,-0.824178,8.511815,-0.857794,-4.276326,-4.624193,-7.951412,-3.523622,-3.331548,-0.038219,6.011383,4.139966,7.741712,3.476124,2.386428,-0.945537,-6.629027,0.925439,-9.710008,-2.302200,4.063513,-9.450776,6.088169,6.721774,-9.454199,-6.035223,7.744137,6.706808,7.347941,-9.014930,4.703045,3.739396,6.872763,9.902956,-3.104549,-8.511034,9.903783,6.140594,2.451933,-0.127644,5.849375,-8.246092,-3.753806,3.948990,-2.094238,6.018674,-9.126746,2.598714,7.863460,6.256615,-3.639094,0.597260,-9.612827,0.348090,-0.193215,-8.614109,-4.406537,-4.435373,-2.570231,0.159147,2.866648,-3.880047,7.461867,3.863610,-4.380327,-3.745016,-6.320087,-3.471526,1.249086,-0.387296,1.948851,8.729086,8.250604,7.790146,0.414980,1.741006,9.443543,-1.859909,3.430230,2.738143,-1.020217,0.366316,-6.499238,-0.454337,3.942912,0.484640,9.364066,-9.015063,-1.737099,-2.557632,-4.323338,-4.526514,0.763089,-7.784811,-7.069051,-3.713913,-9.252270,9.895510,-5.022881,-6.461052,-7.539656,-9.348839,-0.963825,7.653085,-4.890431,-3.779805,8.937920,-1.417554,9.451634,3.970288,2.545746,-1.332645,8.312441,-9.415978,1.625109,8.896565,-0.394848,9.240232,6.545218,5.392314,-2.948944,-0.737575,-3.956357,-0.179917,-2.952760,2.296642,-3.258591,5.426818,0.382401,0.724436,-4.582456,-4.575111,-8.769183,0.543945,-4.693298,-1.729630,-9.629167,-0.363514,3.533907,-7.021805,5.739657,3.381360,5.208674,1.786875,-5.707772,-3.632154,-6.889407,7.396799,-4.431083,-0.567435,4.065114,-4.102853,5.113903,-4.604216,3.335491,-7.508938,-6.527450,-7.089039,-1.397383,-3.895863,-7.769347,6.076479,-3.504313,-7.671808,7.072026,3.626295,1.220990,-3.108924,8.013009,1.314514,7.634666,0.975152,-8.962422,-1.982944,2.542108,0.239503,7.808402,-5.038468,-9.615035,-6.597639,1.212679,-0.818231,7.237579,-5.293641,-2.684879,-8.182950,9.106249,5.879088,8.801580,0.485496,4.956536,5.614571,0.991591,-1.568816,-8.600287,-7.793659,-9.820089,-8.651925,3.093646,-7.896887,-5.817550,-6.305484,-7.299298,1.618382,3.775123,3.182953,-7.264794,0.119669,-9.401006,3.683860,-9.846309,5.477291,-2.821651,3.714129,-4.686485,7.010948,-3.709915,-9.153728,-7.128265,-6.685563,-6.213891,-7.679042,-9.535042,9.800607,5.449774,5.727155,-9.645359,-8.395506,-0.605961,-8.614369,-5.708367,-6.710938,0.508221,6.174992,-5.833322,3.665007,5.346962,4.872577,9.881319,1.168839,8.620610,2.692235,2.088917,0.644666,3.635951,-5.832880,6.093724,-2.582524,3.710384,-5.734306,9.155914,4.517869,5.028924,4.678757,8.472031,9.516335,4.101273,-5.122575,8.278923,1.737579,6.373319,-6.868748,-2.022766,-1.106618,-9.957520,0.666376,-3.434755,4.683115,-3.462504,1.201748,7.598667,-3.329324,6.899420,7.558252,-7.133443,7.122933,-7.082617,2.229190,-0.670356,-8.921029,-0.439286,-3.496545,-4.359223,8.036265,-9.234118,-7.226251,6.872719,3.046272,9.558236,1.856895,6.925499,-7.451908,-6.843429,-2.977565,0.735678,-1.895475,-1.001858,-5.885912,-0.426749,0.091136,-4.932464,-6.745590,3.392734,-3.750251,-4.193179,-4.650204,-9.454977,2.780086,-8.378700,6.132257,-8.600532,-3.840019,2.788612,-1.668631,-4.242799,-1.137682,8.027644,-2.446530,-1.436403,-3.842969,0.529453,-6.748636,3.968438,-2.607453,5.866116,9.900239,4.600857,7.949928,-4.829682,-3.036216,9.890399,-0.390550,0.209875,0.195821,9.523184,-6.201576,7.317214,1.032635,-1.897903,-7.412969,9.217807,-3.681106,2.499734,4.181984,8.309748,-1.923605,8.756184,8.704114,-8.046021,-4.369002,-2.955724,-6.283091,-1.986847,-4.689503,1.251831,-7.409112,-2.487247,-7.229820,-3.484909,-0.444280,0.079603,9.331838,6.372808,-4.315647,5.189378,3.193756,5.537040,8.375076,1.938518,2.375910,7.003852,-9.970183,-4.549961,3.958219,-4.647978,-7.471447,9.637199,-0.858719,-2.804024,-2.373451,-8.199643,-6.807222,3.843230,8.142085,3.212263,0.169586,-1.626007,5.561984,-5.850659,-7.645367,-6.410354,0.876741,-3.946492,-2.745941,-6.751272,-0.531525,-8.127274,-3.047062,9.241732,5.728950,-2.611490,5.679492,-3.058591,1.298451,2.683078,8.774410,-8.265326,4.331895,8.433886,-6.548494,-6.193674,-9.965558,6.203465,-7.498088,-2.694163,6.898768,9.035182,7.790405,2.977039,-2.753417,-9.831526,-5.274436,-8.396011,1.122905,0.107321,6.449904,7.770774,6.943171,2.207003,4.236904,4.715840,-2.670596,3.530735,-0.190677,3.282503,0.927997,-5.500378,-8.736708,-8.287574,-1.579960,7.895778,8.737036,0.631616,0.451287,0.174075,-8.572063,-1.451332,4.826989,3.784713,-3.507687,-9.511891,-0.008651,-7.689262,-1.971942,0.650356,-6.265735,-7.932418,9.831528,-6.049982,-5.853817,9.085950,-7.875294,-2.803388,0.257875,7.861419,-1.038920,6.135664,2.677236,1.611582,-6.452747,-6.461637,-4.260062,6.585166,5.164467,-1.780000,0.518001,-7.321789,5.666977,1.685829,-9.055085,7.781120,-6.929664,-5.918286,-5.313694,0.409804,-9.701665,3.932029,4.317178,-9.194487,8.358403,-0.170585,-9.108770,-4.118562,9.075157,-7.321516,2.445220,-4.084171,-3.632557,8.581734,0.282025,-9.571973,-0.017632,-7.252123,-1.113329,-8.464042,3.746875,-1.629520,-4.386524,-0.341417,-3.942860,0.483849,-1.128596,7.455155,-3.681664,5.520670,-7.366690,7.908008,6.412340,-0.028552,-2.368297,2.434915,9.781964]], dtype = "float64")#candidate|7800|(1, 924)|const|float64
call_7799 = relay.TupleGetItem(func_1135_call(relay.reshape(const_7800.astype('float64'), [924,]), relay.reshape(var_7793.astype('float32'), [832,]), ), 5)
call_7801 = relay.TupleGetItem(func_1139_call(relay.reshape(const_7800.astype('float64'), [924,]), relay.reshape(var_7793.astype('float32'), [832,]), ), 5)
func_958_call = mod.get_global_var('func_958')
func_961_call = mutated_mod.get_global_var('func_961')
const_7814 = relay.const([False,True,False,False,False,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,False,True,False,False,True], dtype = "bool")#candidate|7814|(30,)|const|bool
var_7815 = relay.var("var_7815", dtype = "bool", shape = (60,))#candidate|7815|(60,)|var|bool
call_7813 = relay.TupleGetItem(func_958_call(relay.reshape(const_7814.astype('bool'), [3, 1, 10]), relay.reshape(var_7815.astype('bool'), [3, 2, 10]), ), 0)
call_7816 = relay.TupleGetItem(func_961_call(relay.reshape(const_7814.astype('bool'), [3, 1, 10]), relay.reshape(var_7815.astype('bool'), [3, 2, 10]), ), 0)
uop_7820 = relay.log(call_7790.astype('float64')) # shape=(1, 960)
uop_7822 = relay.log(call_7794.astype('float64')) # shape=(1, 960)
output = relay.Tuple([call_7785,var_7791,var_7792,var_7793,call_7799,const_7800,call_7813,const_7814,var_7815,uop_7820,])
output2 = relay.Tuple([call_7786,var_7791,var_7792,var_7793,call_7801,const_7800,call_7816,const_7814,var_7815,uop_7822,])
func_7829 = relay.Function([var_7791,var_7792,var_7793,var_7815,], output)
mod['func_7829'] = func_7829
mod = relay.transform.InferType()(mod)
mutated_mod['func_7829'] = func_7829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7829_call = mutated_mod.get_global_var('func_7829')
var_7831 = relay.var("var_7831", dtype = "uint16", shape = (960,))#candidate|7831|(960,)|var|uint16
var_7832 = relay.var("var_7832", dtype = "bool", shape = (320,))#candidate|7832|(320,)|var|bool
var_7833 = relay.var("var_7833", dtype = "float32", shape = (832,))#candidate|7833|(832,)|var|float32
var_7834 = relay.var("var_7834", dtype = "bool", shape = (60,))#candidate|7834|(60,)|var|bool
call_7830 = func_7829_call(var_7831,var_7832,var_7833,var_7834,)
output = call_7830
func_7835 = relay.Function([var_7831,var_7832,var_7833,var_7834,], output)
mutated_mod['func_7835'] = func_7835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5900_call = mod.get_global_var('func_5900')
func_5902_call = mutated_mod.get_global_var('func_5902')
call_7944 = relay.TupleGetItem(func_5900_call(), 3)
call_7945 = relay.TupleGetItem(func_5902_call(), 3)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_7969 = func_4205_call()
call_7970 = func_4205_call()
func_6965_call = mod.get_global_var('func_6965')
func_6968_call = mutated_mod.get_global_var('func_6968')
var_7976 = relay.var("var_7976", dtype = "int16", shape = ())#candidate|7976|()|var|int16
const_7977 = relay.const([-1,9,9,1,3,-2,-3,-9,-7,-4,-1,-1,-6,2,-3,8,-5,-1,8,-2,10,-6,-5,7,-7,10,-6,6,5,6,10,-3,4,9,8,2,7,10,-2,-5,-9,-8,8,-9,-3,-3,2,8,-2,7,-10,7,-5,-9,-5,8,3,-1,10,-6,-4,4,4,1,8,-5,6,-8,-8,-8,5,-5,1,-7,-5,-2,1,6,-9,-3,-6,7,-10,-3,-4,-9,6,-5,-9,6,7,-4,7,6,-8,2,9,6,-6,6,-9,-9,9,1,-8,4,8,-4,10,10,-10,6,4,9,-2,-2,-1,5,4,-10,5,-8,5,-8,3,-7,-10,4,-4,6,1,-6,-8,2,8,-4,9,-6,5,9,1,3,-8,9,-2,-7,-2,5,3,4,3,-4,2,-7,5,-7,2,10,-6,2,-4,3,2,-8,7,-4,-1,-3,10,2,-7,-4,6,1,-4,2,-3,-6,4,8,9,4,-2,-3,-8,-10,1,-6,-9,-10,9,3,-6,-7,-4,-2,8,-2,-4,7,-9,8,10,-10,-8,-1,2,-1,2,1,-4,10,-10,4,-9,-7,-7,-10,-7,-5,-1,-4,-2,-5,4,4,-8,9,9,1,6,8,-1,10,1,2,6,8,10,2,-7,1,-3,3,-6,1,2,-5,8,-10,-3,-2,10,-6,-3,-4,7,6,-8,1,3,5,-1,-8,-6,-1,-3,-7,-3,5,1,6,7,-5,1,8,-2,-9,1,-4,-8,-5,8,-5,-5,8,-10,-2,-6,-1,-7,-1,1,-1,-9,-9,-2,9,-8,-2,7,-9,-4,-5,1,7,4,-6,8,-7,-4,4,-5,-7,-9,8,-1,-2,-9,7,-4,10,4,3,7,9,-10,-9,-5,-8,7,10,-2,-7,1,4,10,-3,2,-4,-10,2,7,-5,-8,-9,-8,5,3,-2,7,2,-2,10,3,-4,-1,2,-8,10,-9,-2,-10,-6,10,9,-6,5,-6,-3,-2,-3,-3,-1,-2,-8,-10,10,9,2,6,9,2,1,10,8,-2,7,8,6,-6,2,5,7,8,5,1,-7,7,-3,-5,-1,4,2,-3,-3,-5,9,7,-3,-3,8,-10,1,4,-6,-6,5,2,-3,6,-6,-1,10,-8,2,1,9,4,1,-3,8,-2,3,-10,1,-2,-6,1,-2,9,4,1,-3,3,-6,9,-8,-7,-6,-7,1,-1,6,-5,3,-10,3,-10,8,-8,-10,8,-9,8,2,-10,9,-1,7,3,7,-9,-5,-7,-2,1,6,-1,4,10,-7,8,6,-10,3,-5,7,3,4,-8,8,10,9,-9,-1,9,-1,-3,-8,2,-6,-4,-10,6,-8,10,-2,-10,-4,-3,7,-2,-1,-5,-9,2,3,-8,-4,7,-7,-10,9,-9,8,-7,-6,-3,-3,-7,5,-8,7,1,10,-7,-7,7,8,9,10,3,5,4,-4,10,4,2,-6,7,3,7,3,-5,2,1,2,-9,-9,4,-7,5,-6,3,9,10,-3,1,-10,9,2,5,3,8,-8,5,1,-5,6,7,-9,7,-5,-8,-7,-9,8,-3,-8,10,5,1,5,3,5,9,8,-6,6,-7,2,4,-2,8,7,-5,-3,-10,-4,2,-4,3,-8,-4,2,9,-9,-1,-9,-10,7,1,-4,10,6,7,-2,-2,1,5,9,-7,-5,9,7,10,-9,-6,6,10,8,1,-2,-8,-1,6,5,10,2,-5,1,7,-8,2,8,5,-3,-6,3,8,7,6,9,-3,7,2,-5,7,-3,-7,-3,9,-3,1,-8,-2,2,6,-5,-4,9,10,6,-7,-8,-2,-1,7,5,-1,-6,8,2,1,7,2,1,1,-1,8,7,8,-10,-1,2,8,7,-6,-3,10,2,7,-4,-3,-9,2,-9,-3,7,4,7,5,-9,7,-8,4,-9,-5,1,7,7,5,2,-6,1,-8,3,4,-4,6,8,-4,-4,7,7,5,-5,-1,-8,6,9,8,7,4,3,-5,-3,-7,10,-2,9,-10,-8,1,-9,5,-3,10,5,3,-7,8,-7,-6,-10,-3,-6,3,-5,-9,-3,4,7,8,-9,9,-7,-5,1,-3,-2,10,-9,-1,7,-9,-6,8,7,5,-7,2,-1,-10,10,5,-8,-9,8,-1,2,9,3,3,-5,5,-3,6,6,8,7,-10,-10,2,-9,-7,5,10,5,-7,2,-2,3,-10,-2,-6,6,6,3,6,-2,-4,10,4,-9,-6,7,7,4,10,10,8,2,-1,-3,10,1,4,-7,-7,-3,7,-10,1,-4,1,7,-9,3,-5,-9,6,8,-3,10,1,-2,-5,-7,-8,5,4,-1,2,-2,-2,1,-1,8,6,-4,3,-9,10,-3,4,10,-2,10,-6,-3,3,8,5,-8,6,-9,-9,5,2,-2,8,6,-2,5,9,8,-4,-6,2,9,7,7,6,-9,-2,9,-2,1,1,4,6,2,8,-8,-5,8,-6,-9,-9,-3,9,2,-6,7,-10,9,-3,-7,-2,-3,3,8,6,-2,-8,-5,-8,8,1,5,-6,-9,-5,2,-1,-2,-4,-4,10,7,-4,4,-1,-7,-8,4,-7,3,-1,-9,7,7,-4,4,-6,1,-5,-1,7,-9,-2,-9,9,-1,6,-3,3,-6,8,2,-3,3,10,-8,-3,4,-1,-4,-6,1,5,4,-3,-7,-2,-6,-4,7,-4,-4,2,-4,-2,5,5,1,1,10,-8,4,7,-9,8,6,-10,3,-10,-7,7,-2,10,-2,9,-5,-8,8,-9,-6,-2,-3,5,-4,-2,7,5,-10,3,7,4,8,3,5,3,-2,-6,-7,8,-5,-4,-8,4,-7,-1,-10,8,-5,5,4,-3,-5,1,9,-5,10,9,-2,9,1,-4,3,8,-5,-9,-3,7,-3,-9,-8,9,8,9,10,-9,-5,9,-7,7,-9,10,1,9,-6,6,-5,-3,2,2,9,2,-4,-4,-9,-2,-9,10,10,4,8,-1,7,-7,-5,1,-10,-7,-4,-7,4,-1,2,3,-1,-9,8,-3,1,4,-10,-9,7,-7,9,-2,-1,-5,4,-6,-8,-5,2,-3,-9,10,-1,-10,-7,9,-10,10,-4,6,-5,-5,5,1,-10,-2,-3,-8,1,3,4,-5,-3,-8,10,-8,-4,9,-5,-9,-9,3,3,-6,-7,4,3,8,2,6,9,8,9,5,2,-8,-2,2,-10,10,1,3,-3,1,-6,-1,3,8,-9,-3,-4,-1,-1,4,3,-1,9,-8,4,2,-8,-2,-2,-10,-3,3,5,-6,9,8,-7,6,-4,10,6,5,-7,-3,-9,-2,-8,-2,9,9,-1,9,7,-3,10,6,-9,9,2,-3,-7,-5,-9,9,-8,-5,-7,-6,10,5,5,5,6,8,-8,-1,7,1,5,-4,-10,2,5,-4,-5,4,-2,-4,3,-8,-6,-5,7,8,5,4,3,3,-2,-3,-7,1,-6,-10,8,1,9,6,9,7,-8,-1,9,-10,-10,1,10,9,-6,6,-8,-9,-2,-4,-1,-6,4,-1,-1,5,6,1,8,1,-8,2,-5,-5,-8,-7,-2,9,10,8,-10,3,10,1,3,-2,2,-10,-4,1,4,2,-1,-1,-8,-2,-3,-6,10,-1,-1,5,6,8,2,4,7,1,7,-9,-2,-5,6,10,-1,9,5,-5,1,2,5,9,-4,-2,-4,-7,-1,-3,-6,-3,3,8,9,-10,-9,6,-10,9,-7,8,3,-8,-8,3,4,-10,9,-7,-1,1,-1,5,-3,-7,5,-10,1,-3,8,2,4,-3,9,-3,8,2,2,3,2,-4,5,5,3,-4,6,7,7,-4,1,-7,-1,10,-6,9,-3,7,6,-6,4,1,8,-1,-7,3,2,9,-9,-9,2,-7,8,6,7,-4,-6,10,-1,10,6,6,-3,3,5,-9,7,-5,9,10,3,-7,-9,4,-10,9,-6,-5,-1,-3,10,5,-7,6,-2,-1,10,-6,5,-10,4,10,-4,1,3,4,-5,3,-1,-7,5,10,6,-6,-7,5,-6,3,9,-7,-7,6,-10,-3,9,-4,8,2,3,4,-6,3,-3,4,-10,4,2,9,-2,2,2,4,3,3,-5,6,-5,3,-5,10,8,3,8,1,-4,-1,-9,6,2,8,6,7,2,9,-9,-3,7,-6,-9,6,7,2,2,-10,9,2,-1,-9,2,-10,-1,7,-2,4,7,-7,-5,2,8,6,9,5,8,5,-3,1,2,9,-1,5,3,2,-2,-7,-8,10,-10,9,10,-10,-9,-5,8,-4,9,5,-1,9,-5,6,1,1,4,1,-4,-6,-1,5,-9,6,-8,9,2,-5,-8,10,-8,3,3,-5,-5,3,4,-3,6,-10,-2,6,-8,-1,-1,-6,-2,-10,-2,-3,7,-1,3,-3,-5,5,-1,1,1,6,3,-2,2,9,8,9,7,6,5,-10,10,6,-8,1,-9,3,10,6,-7,5,8,-1,-5,-6,6,-9,-1,10,-3,1,1,-3,-9,-4,-3,-4,-3,5,-3,6,-7,10,1,-9,2,-6,4,-5,-10,9,-7,4,7,-8,2,-2,1,7,1,-8,-6,9,4,2,4,-7,4,3,-5,-4,8,-4,-7,3,-8,2,-5,-5,4,5,9,-10,-5,6,7,7,-5,4,-3,-1,-8,-5,3,-2,-7,8,-8,1,-3,-5,7,6,2,-4,-9,-4,-8,-9,-10,10,7,7,6,9,7,2,6,5,-9,1,-6,2,7,-6,2,8,6,5,3,3,-9,-3,-4,3,9,-9,10,-8,-5,-5,2,6,-9,2,-4], dtype = "int16")#candidate|7977|(1820,)|const|int16
call_7975 = relay.TupleGetItem(func_6965_call(relay.reshape(var_7976.astype('int16'), []), relay.reshape(const_7977.astype('int16'), [10, 14, 13]), ), 0)
call_7978 = relay.TupleGetItem(func_6968_call(relay.reshape(var_7976.astype('int16'), []), relay.reshape(const_7977.astype('int16'), [10, 14, 13]), ), 0)
bop_7988 = relay.add(const_7977.astype('uint64'), relay.reshape(call_7975.astype('uint64'), relay.shape_of(const_7977))) # shape=(1820,)
bop_7991 = relay.add(const_7977.astype('uint64'), relay.reshape(call_7978.astype('uint64'), relay.shape_of(const_7977))) # shape=(1820,)
func_2499_call = mod.get_global_var('func_2499')
func_2501_call = mutated_mod.get_global_var('func_2501')
const_8005 = relay.const([-6.006823,2.086092,-7.169875,-5.130284,-7.977149,-4.301804,-5.837720,9.120771,1.713697,-1.116507,-2.991844,4.528841,5.793972,-4.200488,-6.913977,-9.241536,3.282755,4.618509,0.414061,-5.680528,-8.218280,-4.917504,-2.433780,-7.082922,-0.805171,2.057856,-3.564363,4.042426,3.948592,3.488234,1.391234,-5.884296,7.020957,-5.917068,4.319087,-2.138401,-0.482564,0.822939,6.991920,-5.178394,-3.643309,-2.459260,-2.817489,-6.475103,9.614553,1.113123,-1.037544,-9.141164,-4.384401,-8.543164,3.926658,4.764489,7.681475,-0.088034,-1.586297,-6.490200,-5.476352,-4.109222,2.260743,-8.000641,-6.553200,0.008012,-7.783061,-0.287235,8.815870,-2.382575,-5.291122,-8.558260,-3.475682,-7.449814,6.612249,-2.179292,0.613838,-9.906665,9.491310,5.980034,-8.460320,-8.315847,-9.300751,8.077968,1.581607,-7.495947,3.389542,5.729095,1.158338,4.996262,3.440332,-4.174260,-1.050916,0.264865,-8.430261,5.242035,8.527312,7.350941,-3.754131,3.250221,-0.814094,6.955567,-3.805281,-6.679062,-1.059532,-6.361630,3.088173,-5.838492,8.252117,6.270906,8.958864,9.704401,3.565916,-6.605986,6.054434,4.723850,-1.781136,-5.572578,-9.610369,-2.705172,-5.260543,-1.461317,-3.018462,4.012751,-9.883120,7.863246,4.242676,-8.625898,0.718165,-8.073988,2.820223,-8.373211,1.444124,-7.611260,4.292511,-4.310702,-2.784123,6.298250,-8.416666,-3.548231,-3.242950,-8.211495,-0.076322,-0.523940,8.462333,1.783213,-4.525699,-8.692296,-0.444861,8.155797,-1.446116,3.273455,-1.347618,2.549726,1.012167,4.033845,3.272682,5.369215,9.578905,1.810394,-3.519135,2.668304,-2.053681,-7.407449,-4.596360,3.139403,-3.244726,6.542144,2.573229,2.387565,4.821477,-1.719317,-2.837660,-2.787035,5.463232,-6.864463,-4.514243,1.694369,-9.014176,3.026661,2.629242,0.356691,6.659956,2.070935,7.442295,8.602428,3.741633,3.558490,2.770343,9.997541,8.210115,9.541081,7.991900,-1.349406,-1.162375,8.497569,-2.401188,1.226110,7.881790,0.737518,2.448453,9.744695,-0.032147,-2.749363,4.228672,0.519632,-4.796446,-2.329680,9.865123,8.431669,7.090879,5.385769,3.877563,6.275772,3.054235,7.152602,-7.378450,-9.888063,8.547810,-8.597239,-5.100710,3.374440,-9.309920,9.182719,-6.685885,-8.253895,8.982710,-1.241546,-4.858695,0.427714,-9.099108,1.372377,-4.213342,9.627957,-2.881750,-3.965383,8.986531,1.350951,8.461215,0.866155,9.373200,6.606238,-7.915135,1.656147,-3.586538,-6.217973,5.803484,8.477613,0.972387,6.901843,-1.997305,8.607659,1.280378,-8.013286,7.272435,8.055716,5.453739,5.676663,-5.500411,-1.327376,2.948271,4.650141,-5.030021,-2.886153,3.948624,-8.488549,8.868659,-3.528329,-9.192854,-0.833946,-1.914369,6.446076,-3.893103,7.725182], dtype = "float32")#candidate|8005|(270,)|const|float32
call_8004 = relay.TupleGetItem(func_2499_call(relay.reshape(const_8005.astype('float32'), [15, 2, 9])), 0)
call_8006 = relay.TupleGetItem(func_2501_call(relay.reshape(const_8005.astype('float32'), [15, 2, 9])), 0)
func_1655_call = mod.get_global_var('func_1655')
func_1658_call = mutated_mod.get_global_var('func_1658')
var_8015 = relay.var("var_8015", dtype = "float64", shape = (120,))#candidate|8015|(120,)|var|float64
call_8014 = relay.TupleGetItem(func_1655_call(relay.reshape(var_8015.astype('float64'), [8, 3, 5]), relay.reshape(var_8015.astype('float64'), [8, 3, 5]), ), 0)
call_8016 = relay.TupleGetItem(func_1658_call(relay.reshape(var_8015.astype('float64'), [8, 3, 5]), relay.reshape(var_8015.astype('float64'), [8, 3, 5]), ), 0)
output = relay.Tuple([call_7944,call_7969,var_7976,bop_7988,call_8004,const_8005,call_8014,var_8015,])
output2 = relay.Tuple([call_7945,call_7970,var_7976,bop_7991,call_8006,const_8005,call_8016,var_8015,])
func_8027 = relay.Function([var_7976,var_8015,], output)
mod['func_8027'] = func_8027
mod = relay.transform.InferType()(mod)
var_8028 = relay.var("var_8028", dtype = "int16", shape = ())#candidate|8028|()|var|int16
var_8029 = relay.var("var_8029", dtype = "float64", shape = (120,))#candidate|8029|(120,)|var|float64
output = func_8027(var_8028,var_8029,)
func_8030 = relay.Function([var_8028,var_8029,], output)
mutated_mod['func_8030'] = func_8030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5805_call = mod.get_global_var('func_5805')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_8053 = func_5805_call()
call_8054 = func_5805_call()
func_7376_call = mod.get_global_var('func_7376')
func_7381_call = mutated_mod.get_global_var('func_7381')
var_8065 = relay.var("var_8065", dtype = "float64", shape = (924,))#candidate|8065|(924,)|var|float64
const_8066 = relay.const([[-7.502788,0.614100,-4.868107,9.141865,-9.091155,7.494863,-3.320121,5.041074],[8.316514,3.250373,-7.595399,-4.407199,0.239903,7.651511,-1.111745,2.923730],[2.679312,7.656416,1.436171,9.807741,-1.620079,-9.367593,5.923366,-4.243702],[-3.425679,1.821539,-4.387260,-6.786663,5.014516,9.324544,-9.135528,-6.916905],[-4.026992,6.569696,9.378878,2.800117,-1.375320,-7.986883,5.325009,-5.611690],[-6.526978,-5.937554,2.994008,4.383357,-9.235531,-0.562246,6.741617,-6.321219],[0.371915,8.767493,2.765869,-6.986313,-1.594070,7.807840,-6.454641,-9.622899],[7.135591,6.863421,6.032971,-8.594287,3.539593,8.309836,7.093613,-1.263941],[8.105487,0.047217,-2.809814,-7.218523,4.145751,5.965996,3.759791,-3.361798],[-7.966122,-8.393239,-0.954193,-8.030092,4.521320,-3.232009,3.755066,1.180826],[-5.068807,3.810583,2.327237,-6.212049,6.444254,-4.956106,7.071888,-2.268990],[-2.918799,9.395908,7.927944,-6.401080,3.427762,0.169770,-0.047655,-5.400483],[-8.958939,2.953362,6.044688,-8.638025,8.168741,-7.121098,0.177830,1.643823],[5.833952,7.499816,-5.264972,1.573070,-9.427225,-1.823635,-5.604213,-3.301450],[7.168514,-5.122407,6.338739,2.103636,0.688788,4.455872,-3.868856,-3.721557],[1.124268,-8.647917,4.831151,-5.571065,6.565216,-0.788074,9.451315,-4.498595],[3.047075,0.509454,5.088761,5.103773,-3.080256,4.881547,5.891006,-7.709739],[0.871194,-8.670362,6.581684,0.388585,-8.036490,-6.996227,-3.633215,-7.111322],[4.694711,-0.515424,-3.701133,8.604634,-2.745745,-5.660119,-6.431355,-5.955235],[4.981073,-9.974755,7.560217,2.879748,-0.340093,1.751354,-6.804498,-5.171652],[-8.490000,-2.463046,-3.125184,9.436218,3.907242,4.800390,2.690908,4.250756],[-6.366759,0.767885,7.515199,9.285639,-9.416636,-6.895550,-8.831963,-3.249289],[4.592612,-1.376403,-1.168758,-3.090960,4.958099,4.632033,-4.175173,2.928716],[-6.817552,-5.152226,-0.601568,1.709028,7.790841,7.073856,-6.423939,-2.099492],[9.891518,-6.642025,-8.084688,3.253578,-4.115796,-1.779964,8.207579,1.759180],[-8.572437,-7.935922,-8.703729,4.589107,1.241541,8.835338,-3.732326,-4.026908],[-4.074143,4.770594,7.995774,-8.494337,6.401510,-7.174292,9.770022,1.064747],[-6.285272,-0.269352,7.448648,-7.254170,-8.942055,2.848633,0.014050,-5.200299],[-7.069229,-9.232792,-6.832452,8.301855,-2.046747,9.336825,1.694783,2.150494],[-7.207741,-2.820874,-9.728972,-8.882766,3.704019,5.781718,1.326154,-1.028386],[-7.730777,-3.822751,-8.513473,-7.468150,1.229116,-9.821712,-3.781176,-2.756654],[6.539727,2.650060,3.333320,-0.929974,9.420767,1.084181,-5.504352,-3.221389],[9.526757,6.857316,-0.455123,-7.969705,2.736130,-8.972746,-2.072204,-0.141010],[-9.654287,4.042376,-1.660520,-5.547519,-2.437728,-6.826818,7.138355,5.495759],[1.129333,-4.896852,-6.642513,-9.976086,0.210624,-6.255784,1.735106,8.182539],[-0.736439,-0.048567,8.482586,-2.625354,-4.308654,-5.369219,5.895983,-4.620038],[-4.236894,-2.411130,8.665699,9.084546,5.286317,6.966368,-6.412114,-4.062807],[2.171808,5.810493,6.007574,-8.722663,4.811495,-9.375486,-5.348703,1.881472],[9.803779,-0.725561,-2.957714,-6.519614,8.596412,6.232886,-9.588757,-9.550448],[-3.075165,-3.066846,5.010250,3.712256,1.558439,9.976450,4.434767,3.138597],[-3.520813,2.429592,8.393536,-7.763353,9.739732,-7.737139,-3.201867,-3.034254],[1.886320,-6.783624,9.602923,3.941081,9.337677,9.845641,6.277065,-2.409033],[-7.271318,0.380148,2.843004,-4.976383,2.779860,-1.110774,6.193055,-6.355600],[-1.846229,5.991622,-9.092655,-6.563747,1.045270,-1.740329,-2.007235,-3.731253],[5.866105,-7.165612,4.370470,9.050937,-4.181347,-6.320985,-8.172123,-8.864430],[-9.977038,4.532600,-8.525128,-5.255743,9.609671,-8.759077,9.791427,-5.905054],[-1.816442,0.074021,7.496404,-8.812297,1.154969,0.488863,6.053436,-4.603886],[7.384805,4.338291,9.870623,8.969325,-7.279844,9.805495,-7.802690,-4.203041],[-6.999618,-5.407932,9.384657,4.322169,-1.607621,-3.234234,-1.576458,1.578597],[-3.753636,7.134750,-8.044331,-6.570313,0.303164,1.763348,6.775506,-1.708440],[2.970001,0.371230,-6.955097,7.007643,4.343613,-0.778542,-4.558798,4.219161],[-0.022336,7.766492,0.520757,-6.209849,6.662406,-2.445830,8.534291,-7.476515],[-1.622556,5.471477,1.566043,0.850090,2.094434,-5.330852,5.873245,-0.180249],[3.399459,-3.099658,-6.487076,0.032715,-4.275398,-0.632796,-1.645792,3.200196],[7.500638,4.292656,9.506614,4.994561,5.228382,8.461264,-3.771655,-4.269521],[2.573821,-5.691045,0.502836,9.746719,-0.076623,-1.884311,-4.234930,8.886407],[-0.515598,-3.311949,4.109708,-8.327788,-6.834746,0.593397,-5.673362,-9.993034],[-3.567285,6.829401,-1.788341,-7.895253,-2.895507,6.167340,-5.403113,-3.962200],[-7.804723,-0.741273,6.210007,-3.675231,-5.118434,-8.058177,4.091761,-6.266495],[9.761253,-1.554687,-1.612296,-7.648930,3.533752,-5.537676,-4.036783,-8.816390],[3.614747,-6.607281,-5.041752,-6.873290,-6.923712,9.047132,3.708710,-0.707065],[6.006684,-5.273076,8.129425,-8.310532,0.524329,-4.081026,-3.866716,-6.354979],[2.966121,-0.754341,7.106093,3.978117,5.113122,5.551454,-2.339730,2.885835],[-1.605517,-2.243216,5.731548,-4.388912,4.247559,-7.345166,-5.784781,3.097174],[-4.405444,1.654276,8.571582,1.639144,2.954488,9.637020,-2.851870,4.036202],[1.906158,-8.918540,-9.630338,7.007683,1.186484,9.354414,-3.549925,-6.697666],[-9.721572,-7.297329,-9.132743,-2.249574,-4.027332,8.990505,7.649282,-5.567063],[-3.233714,6.053164,5.042709,-2.121888,-2.434349,-4.531487,2.052448,7.631606],[-6.356986,5.344961,-8.316292,-5.794637,9.788266,6.303867,-9.566622,3.514399],[7.871827,-9.484275,9.400945,7.716853,-9.210931,-1.413393,-6.193735,-3.202872],[1.402231,6.542564,9.072653,6.620207,-5.544406,8.738223,-4.171266,4.109720],[0.397408,-1.789683,8.904097,5.444178,-5.668998,3.616795,2.253880,4.267999],[7.905794,-5.041013,5.816359,9.289705,7.444094,-4.102841,-9.682854,6.787705],[3.361533,-8.050360,5.644381,5.717551,-5.414655,4.715975,-8.078979,-9.047418],[8.810116,-6.717804,-2.449874,-9.414100,2.030241,5.651572,2.810966,4.038402],[9.184689,0.330013,9.961908,-7.300508,2.083814,-1.846404,-8.838868,9.909655],[4.408764,-4.868989,9.761372,3.774359,-0.648295,-8.310339,9.581674,-5.908361],[-9.446826,-1.437069,-8.531563,8.369918,-8.867225,5.806945,-3.105858,-6.238672],[7.185546,-2.411269,-2.350005,1.859129,-9.414800,-5.097156,9.764461,-3.466631],[-6.671615,-8.877977,6.879309,-2.526009,6.919311,8.758185,-0.336552,0.678655],[-9.483398,-3.204446,-3.116100,5.468006,-6.020298,-6.029540,9.227270,9.362487],[7.969519,-0.686277,7.437603,-9.354442,2.600817,-1.819624,-6.589417,6.523130],[1.412862,9.001904,3.172932,1.693155,-3.129375,1.787444,-3.112255,6.903955],[-3.072238,5.749118,-4.095363,-4.615570,9.505138,5.632901,0.944042,-5.267874],[-4.990348,-6.486131,2.778033,0.258990,1.515803,7.117113,8.175972,-5.212270],[-8.501836,0.802204,1.452070,-4.966463,9.849007,-1.847179,-1.019137,5.309653],[-7.110761,-3.624392,8.688057,8.296387,5.645375,8.038359,1.131315,-4.267581],[3.801545,-6.587796,-1.414876,5.872812,-1.757928,-4.663469,-9.623076,-4.651515],[2.011570,-4.538378,-1.568033,9.089839,-6.737953,6.031774,-1.950888,-3.855711],[9.459818,3.835192,1.170514,6.223653,-5.269032,1.060826,-5.197876,-8.262230],[-1.279596,-5.846621,-1.187705,-5.008909,-2.187935,3.401488,-1.336620,-2.266621],[-9.460194,0.417973,-2.699093,-2.566241,-4.867028,-0.628215,9.346819,-8.317728],[4.802118,-0.653379,-3.387264,1.017854,-1.687671,-8.767019,-9.488752,9.353201],[-5.431271,-5.729861,5.137247,7.717504,-3.114285,-2.908953,-4.925080,-2.020242],[-3.645065,-1.170249,0.457638,6.084046,-4.769698,-3.279120,5.163747,3.555043],[-2.151490,-5.764220,-3.695597,9.398432,5.405007,-3.433809,-5.683779,-5.398609],[-2.046415,-5.833556,-5.617844,4.757602,9.445758,4.223403,6.925815,-0.082803],[-4.164601,-8.032972,-3.445512,-1.481178,4.307902,-1.116486,9.986643,-9.224796],[3.239219,6.011706,6.180352,-1.547857,9.054121,3.551979,-4.571271,-7.750084],[-7.850021,-8.350575,7.732468,0.114624,7.282149,-6.723899,-5.154559,-7.950201],[7.960698,7.998085,2.200509,0.103780,0.441505,0.878784,-0.527261,-8.423253],[-0.903506,-4.490191,4.734715,4.751410,3.663552,4.232052,-9.872713,8.225651],[-6.086135,-3.838513,-7.847026,-9.982707,-4.555086,8.833145,7.119166,-0.026505],[-1.141675,9.879704,-2.686411,2.512869,7.867390,4.032103,-8.187700,4.972605]], dtype = "float32")#candidate|8066|(104, 8)|const|float32
const_8067 = relay.const([-5.161441,2.693400,4.161342,2.088598,-0.158548,-6.493862,-2.655112,6.304604,-4.029464,-7.417070,7.491366,-1.127584,-2.592887,-6.869123,8.116945,6.905705,9.568937,4.598608,-3.136158,-1.663308,-1.334670,2.597769,-0.362331,3.037479,5.008902,-9.214010,8.784079,0.654432,5.709832,6.130535,-8.413448,-5.711395,0.621853,-5.260905,-5.209265,-5.646880,-1.977876,-1.250044,-0.084153,5.355844,0.792218,6.430406,-5.455492,1.806408,-1.809013,9.740021,8.306903,4.699472,6.520027,-7.810792,-1.419975,-0.739170,6.156841,0.707491,-2.448531,6.975745,9.369436,-5.119082,4.339555,1.876061,-2.736134,1.621121,-0.739147,-8.325459,-7.490448,5.260503,3.993803,3.678126,-6.395009,6.988430,-2.249307,1.908881,4.258228,2.991373,0.074878,-6.849580,4.033545,1.757772,-1.922596,8.609975,1.290651,5.372860,-9.587586,2.645089,-4.489605,0.035522,7.781035,-9.124066,-9.168977,-7.546809,-9.911536,9.399873,-2.201391,8.923490,-9.678479,1.914619,9.144060,9.734421,-2.634522,5.557480,4.851219,5.755725,3.256487,1.358397,5.208725,5.684658,-5.719100,-3.079357,7.649658,-2.879309,-4.747865,8.945437,-4.649168,-5.417456,7.124756,7.480119,-8.226922,-5.323603,-0.097900,-9.074156,8.287295,1.428800,-5.955568,-1.403012,7.650913,-4.484578,-0.921409,-6.770424,-7.748376,7.234613,-6.296748,-8.772797,5.430656,-3.442195,-4.432176,-2.383174,-9.816851,5.580862,8.950301,-2.986728,-4.928676,-6.862238,8.960125,-7.097889,1.018647,9.407503,-2.863403,0.181697,-1.352716,-5.769877,-8.924582,-7.546933,-6.044018,0.592472,8.090949,7.057189,-8.110596,8.985353,-2.299633,7.807664,4.943520,9.641693,-4.313860,-1.057723,-9.252452,5.932902,7.975592,0.337047,-6.917156,0.488926,-3.965526,5.927344,-2.312639,-2.063623,-4.020067,6.581555,5.533634,-3.999228,3.005801,-2.651311,9.633335,-5.756527,-7.169789,-5.029878,-9.910905,-1.412943,-0.824846,-3.462105,-4.379595,5.971944,-5.761255,2.681128,5.498663,-6.891529,-4.704687,-7.241036,-3.328142,-2.182161,-7.133524,0.312819,-3.126128,-5.557108,-8.809232,8.377810,5.291209,6.777945,6.569333,9.692396,-3.489035,5.818442,4.891786,-4.790333,-6.065648,-6.012025,-0.838231,-8.134353,1.410613,3.721217,1.340640,2.998822,-2.729729,-6.994305,0.960630,-9.094970,8.816799,-1.020900,-0.116110,2.093147,1.310634,9.931689,7.125686,-6.375686,-0.555427,-1.665677,-8.511836,0.156504,5.149390,4.246351,3.717359,-0.918286,8.086560,7.135404,-5.499806,5.556126,-8.108669,8.830028,-0.176353,3.372940,0.575984,-9.110536,4.504346,-1.094237,0.936029,7.143097,-1.679874,-4.767712,-6.020943,9.250271,-3.372794,-7.728722,0.748759,-8.824423,6.559665,5.637286,-6.998916,-2.950039,9.151893,-1.402927,-9.388869,3.822021,5.169090,6.211234,-9.463333,-2.061867,8.376690,8.677448,-4.120837,-3.570476,3.394799,1.640468,4.558971,6.835565,-4.364272,8.608238,3.369156,0.025361,-6.153427,-3.896111,5.173742,6.937661,5.050022,-2.265946,4.070568,4.888688,-9.924521,-4.352803,4.397371,-6.909002,1.467444,-2.853505,-8.193249,3.435132,-0.649305,8.309005,9.554254,-4.538400,-4.622267,-3.850134,5.530837,-5.621752,-6.015908,8.023839,1.751527,-5.522458,-9.329764,7.978075,-2.621833,3.997940,0.121893,2.302722,-0.254379,6.621574,-4.529834,-7.994809,-8.417753,5.242046,9.762683,-6.441866,-4.799131,9.607609,0.397243,2.335263,1.221186,1.474799,-3.608964,1.257096,-0.780376,9.562619,3.879798,6.271348,-7.628140,-9.520636,5.550397,-2.425742,8.044971,-4.454074,6.896654,4.594426,0.750919,1.076936,4.527512,-5.929237,9.276342,-5.521863,7.191367,-7.226604,-3.027205,7.722775,2.276067,9.412486,3.836156,-1.077624,4.318890,2.381782,-4.111024,-4.887189,-9.830427,5.381613,-8.101730,-7.767293,6.208716,-8.954733,9.689978,-0.487227,1.863700,-2.290091,9.726952,9.275781,-2.315206,0.190175,6.632120,-0.191184,-4.243037,-7.398170,4.821442,-7.087809,7.945301,-8.154000,-9.022597,-2.151279,-2.825978,-3.047333,6.217543,-0.159367,4.646167,-6.809892,-5.383840,-8.986493,-1.022515,9.922441,4.178150,0.210071,-0.762176,1.566190,-6.109519,9.879881,-3.360939,-0.150808,8.902701,0.204920,4.966564,-4.337852,-9.490820,-6.790995,4.483158,-8.179589,-3.432739,5.368177,0.265273,0.811064,-6.618768,-0.952161,6.078423,-1.103578,-3.052676,8.965514,7.944663,4.535192,-3.714622,8.733060,7.133815,-4.944553,5.428157,1.865574,-3.841026,-3.444791,2.380029,-5.474746,3.072190,0.618932,-1.816779,0.052259,-0.123641,-2.627743,1.000414,-8.632429,2.013185,-0.878197,1.779321,-0.679558,-9.575996,-2.948267,2.130060,-1.949161,-5.360301,-0.445952,-0.256041,-2.524356,-8.380036,7.550269,-1.083124,7.501324,-1.425003,-8.372391,2.963825,-7.662180,3.768494,2.648661,1.823204,-8.322222,2.124952,-3.518375,-4.948580,2.315788,2.607508,-3.223890,-3.765491,-7.764227,3.526053,-5.851619,2.731028,1.705414,-8.514340,2.062370,-2.989857,2.361458,8.976215,-6.128695,-8.583789,-5.247602,-6.799700,-0.905807,-5.136312,-5.892997,0.126154,-1.874191,1.511722,-9.901121,-8.859873,8.674965,9.117005,9.823903,-7.639410,-7.037981,1.382645,9.732043,-9.185494,-2.500451,-2.430081,-1.215815,-3.515235,-0.096705,-3.341253,0.669245,-4.026174,-9.153184,4.100084,-4.973753,3.232284,-7.714390,-1.541002,-5.555739,7.948562,8.726252,0.416077,-8.605799,6.820383,5.168753,3.182349,-4.204061,5.305596,4.172779,-8.516440,3.201137,-1.552973,-5.206999,7.810311,4.743967,-1.914742,-0.128266,7.979109,9.944258,4.189434,-5.463382,3.199882,-9.594098,1.454248,7.555984,-7.253837,4.641822,-4.628483,8.421730,9.042588,1.967356,1.819088,3.291186,-0.076930,5.316649,-1.854035,-1.204501,7.953248,-5.507054,-1.053827,-2.785245,-7.855925,6.639847,-7.605455,-7.126020,-1.555612,2.043507,8.315989,-7.138689,0.739760,1.814169,8.925335,3.990612,6.900962,-3.522804,4.398469,-3.045251,-4.911241,-1.361492,-4.419400,-0.683211,-9.120700,-7.142579,4.153158,1.084014,7.390530,-9.775032,-1.554081,4.528089,4.385689,0.597314,-9.256125,8.828482,-0.339696,5.686835,-6.871317,4.126899,5.492406,6.757789,-3.128522,7.699470,2.622988,-9.321260,2.086806,1.030876,9.020096,8.300925,-8.093908,6.103598,0.540294,1.825305,-4.048099,-4.165159,1.975242,-6.320062,5.032523,8.684021,1.780501,-1.915475,0.646048,-3.826941,5.581583,-3.020723,-3.070336,-8.753818,3.086734,5.510244,-6.321314,8.660787,2.278676,0.654480,-3.166258,-4.041542,-0.252194,-5.836058,-7.903891,4.981730,6.276457,-3.716905,7.481150,9.933254,-8.255224,-9.140749,-9.897301,-0.862701,-9.245864,-1.474112,-2.671788,-5.649513,-1.896140,-9.141239,3.332783,-5.267041,-1.588152,-2.931743,8.313954,-5.181725,1.838275,-3.346287,-6.448184,5.948188,-4.922839,6.486307,-0.448561,7.684119,9.838432,-2.085786,0.745493,9.454145,5.250762,2.774986,3.801541,-3.480013,9.387937,-1.925276,-7.233260,-5.558164,-8.049855,5.897266,7.399969,3.734950,6.402718,-1.786376,-4.948396,-7.909381,8.276439,-4.572037,0.798128,7.714037,7.225756,-4.671700,-4.002251,-0.687960,8.198739,6.516512,-9.711842,7.366559,-0.382528,7.647310,5.572737,-3.201549,9.566365,7.363505,-1.145338,7.698534,-3.789374,0.447252,-2.224138,6.188598,2.076252,1.435649,2.743179,6.126589,-5.204765,-6.770745,-9.011146,-3.495777,6.140109,-0.903239,4.206331,3.811968,-9.970234,-3.552473,-8.228795,-7.045254,-9.140165,-5.843116,-8.257296,-3.682189,-9.664293,-6.542251,9.829335,-8.641965,-6.793531,-8.442563,3.534392,2.222539,-8.036435,-2.730258,-9.334741,2.981070,-0.740021,-6.080362,0.360295,0.010755,-3.335259,9.483245,7.381245,-3.335717,-6.640661,7.516669,9.267496,6.096165,-3.584572,-9.169039,-7.202657,6.553996,5.882695,1.247585,-1.960586,-6.029119,-6.370171,7.539289,-3.395625,0.017910,-4.770642,-5.902446,-2.404671,-3.615424,5.035266,9.985379,-7.084853,9.907410,-4.776480,-7.536270,3.556308,3.380790,-3.065537,5.237334,7.869930,-9.142227,8.470758,2.747031,-1.687572,-0.724850,-5.809718,-7.357788,2.091847,3.914440,-8.282808,-8.921869,-5.803791,-1.522583,-9.531730,4.735004,-0.205365,-0.102774,-1.935344,1.485461,0.639469,3.218728,6.831314,-6.887763,3.679244,3.243900,4.955826,2.399406,2.413469,5.600902,-5.725924,8.899744,-3.674691,-4.201578,3.837381,3.980532,-6.816635,1.343230,-5.237117,-7.009549,6.296702,-4.909176,0.362735,-9.552834,1.466958,2.445356,9.169592,-5.537312,-0.839935,-8.872796,2.653633,-1.881940,-0.088266,2.745611,2.697655,-9.439325,2.794409,0.250519,3.272768,-2.518215,7.045537,-8.730456,-9.408743,-2.934223,8.031751,8.126060,5.484821,-3.237960,5.653132,-2.048059,6.949542,3.879528,8.973196,-9.047683,-9.848468,8.588974,-4.109609,-2.976528,2.519538,1.746743,-9.155765,8.644596,-0.430939,7.918104,4.817839,-9.319198,2.580859,-9.471855,-7.685718,4.314442,4.526491,1.113008,-8.089844,-7.219225,-9.675751,-0.243455,-3.305811,-5.758809,-3.200376,-3.519056,-9.177384,-4.708799,-4.778880,-7.896679,8.051019,-9.107747,9.359676,-4.133267,7.896193,4.900631,-2.119558,-6.418398,2.505153,1.841696,6.677352,6.635198,-2.147534,2.119186,-0.313448,-0.807075,2.261968,-9.291122,-8.524628,-1.210207,-4.206082,3.804017,2.887825,0.046935,6.858210,-2.225197,9.584360,-7.248161,-6.093112,-3.574556,1.091558,-1.846972,7.264410,1.431649,-4.005132,-2.275154,9.986830,4.564971,5.404240,5.347302,-8.263029,8.003166,-5.905282,5.524355,8.004257,2.314633,-8.890588,8.950285,9.862679,1.453798,-1.531152,-1.536931,-9.794566,9.876901,-8.508569,-2.839348,-8.324537,-2.005112,2.337283], dtype = "float64")#candidate|8067|(945,)|const|float64
call_8064 = relay.TupleGetItem(func_7376_call(relay.reshape(var_8065.astype('float64'), [924, 1]), relay.reshape(const_8066.astype('float32'), [832,]), relay.reshape(const_8067.astype('float64'), [7, 9, 15]), ), 2)
call_8068 = relay.TupleGetItem(func_7381_call(relay.reshape(var_8065.astype('float64'), [924, 1]), relay.reshape(const_8066.astype('float32'), [832,]), relay.reshape(const_8067.astype('float64'), [7, 9, 15]), ), 2)
const_8095 = relay.const([5.378597,-1.536668,9.327243,7.175210,-0.090636,-3.919567,7.208824,4.487000,-2.965866,-6.638953,5.177037,6.289539,-6.260488,9.930841,8.745923,1.613544,-3.416401,-1.381394,6.028396,-3.231291,1.901493,3.966549,0.293028,6.378443,4.035272,3.058886,-6.604160,7.712967,8.177981,8.379152,1.367395,-3.892442,6.037780,9.601932,-1.027272,-6.450733,-9.249154,3.670264,-7.952225,2.151349,-9.437146,-0.304248,-5.668025,1.377217,2.345698,-2.432986,6.769456,-0.777384,-0.252374,-3.339052,8.397756,-5.778417,-2.228058,7.168703,-6.535515,-5.140736,-4.277217,8.767698,-3.983809,-7.004501,0.099161,-7.080573,0.087128,2.045722,-9.197659,0.271332,9.549965,8.641116,9.427546,-5.324931,5.334971,-8.067973,-2.667918,-0.751353,-5.019025,-3.652399,-0.457088,-7.099327,5.855271,0.994802,9.073613,-5.638483,-1.016266,-8.202347,-7.086443,1.689840,6.244635,8.418312,3.341497,-1.199152,3.901893,6.140269,2.703326,2.577378,-4.028183,-1.540765,1.261336,-1.279775,-7.444645,2.279263,1.276404,3.106204,-4.664274,-9.771845,-5.032551,7.994964,7.821259,7.497883,2.707949,-5.220274,2.194758,2.902016,5.001995,-4.910897,5.802992,-4.695027,-9.964003,8.407519,6.084903,-4.377866,3.033045,9.065131,9.243802,4.797731,2.647469,-1.983078,3.565317,-3.675478,7.112477,-9.542097,-6.301557,3.760482,-0.891530,-2.964738,9.544251,-0.073367,-1.605474,7.052696,-0.771918,-4.168748,-6.733583,2.212118,9.491368,-4.664683,-6.268087,4.296004,-0.116722,-6.902039,9.639400,-9.325036,3.689553,5.518074,-9.489575,9.893109,-5.997770,-4.590599,-9.225797,-1.576445,6.960200,-8.904972,7.759193,6.801168,6.308068,6.758088,-2.733860,4.706989,-4.135753,9.662479,3.375355,8.135048,3.636868,1.033285,6.248997,1.467050,-6.888607,7.549343,2.091833,3.826375,-1.676067,3.220749,-3.737114,-3.997063,-5.447151,6.711616,3.766933,4.627452,2.500329,-9.741051,-9.738525,4.879817,-0.341249,-0.200953,8.032495,-5.647983,-0.135638,-1.308044,-0.118712,9.692181,5.372526,-6.752892,-6.215797,9.533573,-8.818554,-6.711655,8.712152,-7.240673,-1.648847,5.105402,-4.756794,3.590505,6.911626,-1.947934,1.823354,-1.564013,-1.933136,6.208720,-7.385324,-5.207037,-4.689084,6.873954,9.666276,3.077809,5.998396,9.788380,-0.025760,-0.334047,3.857902,4.609689,8.416955,6.543486,4.038664,-6.374689,8.736389,-5.475746,6.079894,7.590018,4.767608,4.539754,5.939365,0.314164,1.190908,4.447722,-0.746644,1.914830,7.922147,6.391340,3.523035,-3.448503,6.464869,8.581761,3.714147,1.993213,1.760740,8.179518,4.231468,5.190759,-0.240516,9.768159,6.775739,-7.147818,1.710465,6.215988,0.181424,3.273230,2.386148,-3.202049,2.298560,6.492961,-7.841071,0.622718,2.835798,-1.060089,-9.309776,-7.813130,5.153268,-3.167628,1.185351,3.703043,9.266741,0.422031,1.150803,6.658513,2.720800,-6.574856,1.384693,6.782900,-5.551643,4.878000,-6.957527,-9.718320,-5.140626,-2.976659,9.983747,5.459693,3.031854,9.317623,-2.260151,3.367206,7.624391,6.516684,-6.215108,-5.194746,-1.641980,8.744675,0.989233,-9.509745,-5.030753,9.018822,5.910129,-6.370735,9.824568,7.072717,6.584095,6.475518,-5.172935,3.149189,-7.023972,8.428514,4.252981,0.800837,0.548671,3.231781,-4.372301,5.787292,3.682175,-2.132880,3.674227,-6.662720,3.714505,8.990570,-2.731538,-0.307199,-1.735933,8.569440,-2.729354,1.481079,4.265703,7.586470,2.136164,8.272047,-3.734756,-7.451123,5.201026,-7.945551,-5.443582,9.515603,3.316479,4.153618,7.512679,0.555524,1.063213,1.645912,5.599184,2.168320,8.109961,6.300335,-1.607008,8.450018,-4.877905,-4.902468,-4.283658,3.350353,6.578324,9.282000,-9.393560,-4.456751,8.493602,-7.244882,-3.755873,-9.525406,-6.352818,-9.874187,0.290993,-7.298753,2.715914,-9.822590,-5.067403,4.047953,4.557911,0.358157,-9.418884,1.434269,0.374967,-0.983869,5.844624,-3.385340,7.654782,1.969501,-0.571481,-8.506060,-9.727982,0.445357,9.079196,3.954175,-9.542309,-0.274274,-9.703701,-9.196460,5.573639,-2.530960,6.719598,-2.009651,7.365125,5.754543,9.206968,8.315077,4.373039,2.312619,-5.561724,4.446072,9.083937,7.994202,7.895395,0.784495,-0.698058,-8.571331,-5.037790,-4.378530,-8.002773,-5.332535,-1.316628,1.854014,-4.668966,-6.408864,8.197012,0.430320,1.691915,5.849984,5.221649,2.221404,-9.567511,1.930852,-1.375526,-2.678407,-5.019266,-5.151270,-3.784015,-5.808524,-1.303018,7.081608,-9.120932,-3.114678,9.681751,-2.598345,3.871344,4.887870,5.075884,-7.600309,-8.274732,-3.219104,5.064904,4.397386,0.973469,6.451291,-0.933746,4.962452,5.933339,-3.211300,3.316669,3.670035,-1.806274,-4.332956,-3.998271,9.139741,6.494775,1.925089,9.196856,9.188133,-7.290712,-6.113423,3.169968,5.533544,-1.932797,-1.292697,-4.151907,-8.988048,-2.230113,9.091083,3.004657,5.280875,-2.544740,-7.467691,-4.335903,-6.774357,-9.505448,5.422535,1.678002,-7.658526,6.113418,4.903477,5.693309,-8.718339,9.278301,-2.741303,2.222114,3.769181,-8.612346,7.828433,7.624067,2.252168,-5.125511,-1.729259,7.976770,1.730011,5.616656,-4.743518,-1.767837,-7.319956,-9.789714,3.428121,-1.451624,-5.587706,-5.634770,8.389167,2.993174,8.501155,-8.992675,3.976877,-0.542130,-0.954046,-9.445723,-5.199373,3.582113,-4.052344,0.493697,1.138703,-6.958962,-2.471215,7.205631,4.985371,-2.032172,8.264131,-6.159515,-1.855797,4.000607,-6.514993,-3.010438,5.412106,7.169702,6.113708,1.418484,-0.750823,-5.068828,-4.101316,3.460088,2.587977,-4.944042,-5.017729,3.914530,9.656920,2.099630,-8.200190,4.249132,3.206460,1.553173,2.689397,-6.697559,3.824997,4.751938,-4.016729,9.861047,-5.337861,-9.679634,-4.920056,-3.094604,3.090894,8.790753,8.059570,8.532218,3.458812,3.368098,2.397803,-3.684471,5.108613,-7.122124,-2.394394,9.920260,1.054711,8.625823,2.993249,7.614482,8.463985,2.494279,4.926275,-8.302910,9.965926,-3.144684,0.169295,4.108000,-6.781178,-8.004421,7.548168,8.985434,-2.926856,-7.797320,-9.581576,-8.124365,-5.718900,-1.665201,-8.372987,-5.236266,4.402992,-1.643677,-2.663409,4.157415,0.125442,9.090613,5.316681,3.231681,-1.675162,3.937567,7.376619,-4.386093,6.846988,-6.341356,9.135098,-1.287372,2.839811,6.891074,-7.533942,-2.049160,9.108989,3.394214,-0.489066,-2.559389,-7.992274,-2.475084,4.580290,-2.199619,4.632675,-7.239890,2.245540,2.493127,9.613377,-3.191523,0.824688,9.165414,8.008247,5.899136,2.627401,-0.033558,-7.775380,8.286279,9.097410,-6.045363,-5.210289,-2.600268,3.572325,-0.440538,-7.679343,8.096309,1.924674,-6.823168,1.140335,4.122374,7.416899,-5.188601,-7.111149,4.504831,3.227414,-4.742073,-4.726386,-3.457457,0.450625,-7.100055,2.558518,6.576037,-5.482503,6.049731,-6.048671,-8.598998,-0.759925,6.365301,2.255453,0.869144,-2.548672,-8.589826,-8.671724,9.372924,-2.690501,6.159086,2.052276,-1.106685,0.127510,9.978542,-2.117924,9.276604,-6.845392,4.338329,-6.695416,9.560349,1.310742,1.398492,-0.389672,3.618358,6.136053,-8.191465,2.119856,-2.147409,9.473938,-1.414916,-8.587251,-8.451591,-8.349283,-2.098262,-2.608309,-4.212821,7.436270,7.598174,-2.197770,-5.747104,-3.534771,-7.174246,-3.253952,-6.911206,-7.665925,9.517655,-2.243611,3.575146,-7.970494,2.753863,7.065163,-8.833674,-5.749492,-5.385098,-8.209582,-4.788158,-4.286433,-3.426170,0.692108,-2.872323,-8.620722,-3.900141,5.965778,2.949786,6.260548,4.443754,-3.479381,-3.495334,1.141661,7.195675,9.820302,-2.387168,-0.168723,-6.274166,8.899191,1.683916,9.781573,6.329267,-1.390287,-3.862182,7.001166,-5.849020,9.959567,-3.301548,-5.004212,-2.397305,8.511073,5.049105,0.100444,-7.748552,-5.118916,-3.345308,1.566890,-0.858501,4.570111,-1.129806,-8.514853,-7.173496,3.010566,2.999887,2.053185,7.738234,-6.213285,-3.936785,9.387814,5.574386,6.290189,4.619371,6.386345,-2.240257,-0.231327,1.638169,6.101653,-5.051806,5.247740,-3.221677,6.130102,6.254197,-3.823745,7.309196,-6.865728,7.511804,0.947262,0.820731,7.565513,1.579602,-3.762138,-0.787606,-9.711141,-8.990210,-6.092726,-5.957910,-6.553766,-7.447796,-4.566036,-8.888700,-4.046215,-3.362023,-4.205867,-5.464844,7.752311,5.329049,-7.945990,1.143124,-6.938933,-7.220045,3.975651,-5.483339,5.345406,-4.732855,4.249669,-2.561705,7.937916,5.530648,-4.700329,5.878113,5.116027,0.304169,-0.504302,-5.314506,-3.532206,-3.019680,-6.009369,-5.494563,6.714843,0.934790,5.778540,-4.820436,-0.383544,5.729438,4.328487,-8.939493,0.316502,-3.022873,-6.558522,7.993602,-8.826241,-1.117412,-0.682106,-8.680596,-4.123403,-8.089301,0.727294,-1.144099,-3.283755,8.899351,-8.134104,-8.565670,9.882034,0.576639,-4.216505,1.811312,-6.914240,7.492367,-2.241202,-4.735390,2.867684,-0.639333,9.393956,-2.206689,-7.997218,1.887110,7.442133,8.683311,8.337869,-9.049455,2.922860,-5.659286,-9.095226,-8.633167,7.813125,9.161105,-9.986461,5.671957,-6.145960,2.873041,2.715319,2.082547,3.969058,-7.852282,6.913165,-5.236582,-9.017811,3.158175,-6.538916,9.670832,-7.337702,-9.192946,-8.648506,7.098431,0.672802,-3.600305,3.345268,8.602460,-9.809695,3.672120,-3.152292,-2.168974,-0.053028,5.381231,9.856348,-4.358892,4.638847,-6.316706,0.950125,-9.192276,2.024679,3.543707,-1.925441,0.187096,-0.529937,7.246444,-1.174323,7.228113,7.947338,5.679675,6.091819,-3.948954,-0.206793,3.466368,-7.999293,-2.003073,-5.598450,8.776849,-5.113227,2.274846,6.898409,7.276290,-9.356315,7.200283,-0.249873,-4.304264,-9.137607,-3.615403], dtype = "float64")#candidate|8095|(945,)|const|float64
bop_8096 = relay.multiply(const_8067.astype('uint16'), relay.reshape(const_8095.astype('uint16'), relay.shape_of(const_8067))) # shape=(945,)
output = relay.Tuple([call_8053,call_8064,var_8065,const_8066,bop_8096,])
output2 = relay.Tuple([call_8054,call_8068,var_8065,const_8066,bop_8096,])
func_8104 = relay.Function([var_8065,], output)
mod['func_8104'] = func_8104
mod = relay.transform.InferType()(mod)
mutated_mod['func_8104'] = func_8104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8105 = relay.var("var_8105", dtype = "float64", shape = (924,))#candidate|8105|(924,)|var|float64
func_8104_call = mutated_mod.get_global_var('func_8104')
call_8106 = func_8104_call(var_8105)
output = call_8106
func_8107 = relay.Function([var_8105], output)
mutated_mod['func_8107'] = func_8107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mod.get_global_var('func_5398')
func_5399_call = mutated_mod.get_global_var('func_5399')
call_8109 = relay.TupleGetItem(func_5398_call(), 1)
call_8110 = relay.TupleGetItem(func_5399_call(), 1)
output = relay.Tuple([call_8109,])
output2 = relay.Tuple([call_8110,])
func_8119 = relay.Function([], output)
mod['func_8119'] = func_8119
mod = relay.transform.InferType()(mod)
output = func_8119()
func_8120 = relay.Function([], output)
mutated_mod['func_8120'] = func_8120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6781_call = mod.get_global_var('func_6781')
func_6783_call = mutated_mod.get_global_var('func_6783')
call_8123 = func_6781_call()
call_8124 = func_6781_call()
output = relay.Tuple([call_8123,])
output2 = relay.Tuple([call_8124,])
func_8145 = relay.Function([], output)
mod['func_8145'] = func_8145
mod = relay.transform.InferType()(mod)
mutated_mod['func_8145'] = func_8145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8145_call = mutated_mod.get_global_var('func_8145')
call_8146 = func_8145_call()
output = call_8146
func_8147 = relay.Function([], output)
mutated_mod['func_8147'] = func_8147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6011_call = mod.get_global_var('func_6011')
func_6013_call = mutated_mod.get_global_var('func_6013')
call_8217 = func_6011_call()
call_8218 = func_6011_call()
func_958_call = mod.get_global_var('func_958')
func_961_call = mutated_mod.get_global_var('func_961')
var_8221 = relay.var("var_8221", dtype = "bool", shape = (30,))#candidate|8221|(30,)|var|bool
var_8222 = relay.var("var_8222", dtype = "bool", shape = (60,))#candidate|8222|(60,)|var|bool
call_8220 = relay.TupleGetItem(func_958_call(relay.reshape(var_8221.astype('bool'), [3, 1, 10]), relay.reshape(var_8222.astype('bool'), [3, 2, 10]), ), 0)
call_8223 = relay.TupleGetItem(func_961_call(relay.reshape(var_8221.astype('bool'), [3, 1, 10]), relay.reshape(var_8222.astype('bool'), [3, 2, 10]), ), 0)
output = relay.Tuple([call_8217,call_8220,var_8221,var_8222,])
output2 = relay.Tuple([call_8218,call_8223,var_8221,var_8222,])
func_8227 = relay.Function([var_8221,var_8222,], output)
mod['func_8227'] = func_8227
mod = relay.transform.InferType()(mod)
mutated_mod['func_8227'] = func_8227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8227_call = mutated_mod.get_global_var('func_8227')
var_8229 = relay.var("var_8229", dtype = "bool", shape = (30,))#candidate|8229|(30,)|var|bool
var_8230 = relay.var("var_8230", dtype = "bool", shape = (60,))#candidate|8230|(60,)|var|bool
call_8228 = func_8227_call(var_8229,var_8230,)
output = call_8228
func_8231 = relay.Function([var_8229,var_8230,], output)
mutated_mod['func_8231'] = func_8231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_8233 = func_4205_call()
call_8234 = func_4205_call()
func_1135_call = mod.get_global_var('func_1135')
func_1139_call = mutated_mod.get_global_var('func_1139')
var_8265 = relay.var("var_8265", dtype = "float64", shape = (924,))#candidate|8265|(924,)|var|float64
var_8266 = relay.var("var_8266", dtype = "float32", shape = (416, 2))#candidate|8266|(416, 2)|var|float32
call_8264 = relay.TupleGetItem(func_1135_call(relay.reshape(var_8265.astype('float64'), [924,]), relay.reshape(var_8266.astype('float32'), [832,]), ), 2)
call_8267 = relay.TupleGetItem(func_1139_call(relay.reshape(var_8265.astype('float64'), [924,]), relay.reshape(var_8266.astype('float32'), [832,]), ), 2)
output = relay.Tuple([call_8233,call_8264,var_8265,var_8266,])
output2 = relay.Tuple([call_8234,call_8267,var_8265,var_8266,])
func_8272 = relay.Function([var_8265,var_8266,], output)
mod['func_8272'] = func_8272
mod = relay.transform.InferType()(mod)
var_8273 = relay.var("var_8273", dtype = "float64", shape = (924,))#candidate|8273|(924,)|var|float64
var_8274 = relay.var("var_8274", dtype = "float32", shape = (416, 2))#candidate|8274|(416, 2)|var|float32
output = func_8272(var_8273,var_8274,)
func_8275 = relay.Function([var_8273,var_8274,], output)
mutated_mod['func_8275'] = func_8275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7773_call = mod.get_global_var('func_7773')
func_7775_call = mutated_mod.get_global_var('func_7775')
call_8280 = relay.TupleGetItem(func_7773_call(), 0)
call_8281 = relay.TupleGetItem(func_7775_call(), 0)
func_8272_call = mod.get_global_var('func_8272')
func_8275_call = mutated_mod.get_global_var('func_8275')
const_8291 = relay.const([5.825381,-0.134532,0.241099,-0.385568,3.226305,1.252099,1.422616,-2.861049,6.739426,7.329605,-4.006164,7.155934,-1.406481,-6.629677,-0.753921,2.737365,9.104793,-7.125547,-5.989107,5.851186,7.413326,-5.091541,-1.245768,-1.035689,-5.476730,-4.104669,-5.995851,-9.400974,0.917516,5.508990,-8.925186,-6.725767,-1.994638,4.606691,1.245186,6.553195,6.756247,3.258048,-7.297064,2.551200,0.330771,1.858984,0.852477,-2.053904,-4.849487,1.324026,-6.775520,-4.679650,-6.817217,0.277157,-7.212106,-9.335286,-0.268130,-1.922023,9.475723,-8.087254,3.756668,-4.092030,1.739829,2.747444,-0.381754,-2.406561,-9.086007,-7.347091,-8.987836,-7.603262,-4.781094,2.077179,-6.440505,9.457494,9.420095,-9.205461,1.393146,-7.044909,3.818992,-4.262421,-7.127108,-1.919081,7.440217,4.159879,-7.060111,-5.031343,-4.378995,-6.606270,3.851960,-7.898609,4.197300,2.099183,5.909692,5.822982,-9.700782,1.112085,-8.251658,6.307129,-9.348361,-4.269782,9.510830,1.039814,-8.346886,-2.938396,2.844190,-7.683351,-8.505594,7.425151,7.093522,-2.943131,-2.941347,-0.700707,-5.650944,-8.307426,-7.196969,0.829342,7.847049,3.327988,-6.220719,-4.303768,-5.701113,-2.322737,-4.248440,3.226061,-7.443854,2.706717,6.681872,-4.779909,-1.603390,-6.710186,1.396772,-0.200785,-9.268719,-4.004377,8.700507,-9.110019,4.868862,-0.527686,-9.298424,-0.292434,-0.856535,8.444465,3.162597,6.019867,-4.894348,8.857464,1.170124,-6.463169,1.126171,3.777868,2.763570,7.636084,-2.006524,3.081804,6.463555,-8.546274,1.387155,9.221579,3.449896,-1.793297,-4.613912,7.170626,5.963369,3.906422,-4.844929,-3.018904,-9.922579,-7.108379,8.894353,7.864898,3.636101,-1.824242,3.264070,-3.246198,-7.475207,-9.736170,-0.052498,2.319056,4.719535,-6.184508,3.879478,-3.627439,-7.071600,-2.941404,-4.243656,-4.283009,7.200787,-7.540686,-5.196952,8.841292,-2.455380,5.259026,3.553421,-4.285277,0.934272,-4.998626,6.152350,-2.358688,-4.782603,-9.197229,-6.657951,-8.052709,7.764805,-2.365661,6.421787,4.959529,5.446104,-4.345657,9.823257,-3.951336,-8.426691,4.205753,1.716165,4.534230,-8.364451,-7.792676,2.754297,2.050334,7.416330,-4.867940,2.124150,-8.703403,2.614685,-9.542278,-4.056566,6.436906,5.071948,-4.955620,5.837426,-8.192068,9.479244,-0.192286,-0.657777,-2.227128,-9.890820,-4.983296,-4.887969,-3.490466,-8.382790,-4.969491,2.703806,7.012471,-9.237634,2.120578,6.605146,2.126447,-3.159847,7.711137,0.479940,8.429650,9.256979,-8.335051,-8.048630,1.718557,8.362304,2.594270,2.416238,6.901663,7.039620,3.824007,6.858675,8.140356,3.592599,-9.722464,-0.867873,-2.057737,8.382497,8.382185,0.150274,-9.284743,-9.943121,-1.041690,-7.561974,7.132863,-2.049570,4.975891,-9.412803,-6.338025,4.271517,-2.631143,-6.698527,3.936937,2.578624,9.123190,7.185135,6.232445,-9.550373,-6.054748,-3.447748,-4.838444,-0.858773,-0.203648,-7.657446,-7.957680,9.981331,-5.268609,5.275413,4.861440,-6.162832,-2.271704,3.856589,-2.376855,0.457415,-7.679787,-2.394461,-6.916096,-4.829457,3.640959,3.191190,1.706314,7.370520,-2.175733,9.111045,3.422402,5.663291,-2.771030,-5.912375,-0.179474,0.372637,7.157156,2.148410,-1.474854,-5.929203,-6.266238,-1.046707,-4.070493,9.639037,-9.050876,-2.877677,5.679720,0.475130,-4.080292,-2.133160,5.977257,-0.768683,5.971555,3.742771,7.342116,-3.026775,2.542427,2.437451,-7.142294,2.068020,-4.133536,-4.077614,5.856435,6.487729,1.250830,-7.770014,9.481802,2.074185,-1.516051,-9.050371,-1.849831,8.992796,5.880701,1.616196,-2.323957,3.021668,1.487671,-9.171471,8.427708,-8.599295,9.775321,-6.413049,9.045161,9.852778,-7.977811,-6.731324,-9.211728,-5.618921,-2.490172,1.155089,-7.959341,6.304775,8.215921,-1.411993,7.939437,6.951552,5.905636,5.533756,-6.666967,-2.736412,1.038957,2.085120,5.374330,0.463933,-1.772186,-3.628067,1.238912,-6.580944,3.045421,-6.864918,9.299630,0.762872,6.729383,-0.512174,4.295551,-2.429114,0.138497,9.005918,9.898852,-5.901503,4.053665,8.634857,7.996549,6.833295,-5.425843,3.261107,-0.417515,6.387172,-8.119170,0.802625,-3.983182,-1.072808,3.817417,-4.706434,-8.884363,-6.171423,5.647850,9.026082,9.135030,1.832540,-4.425189,-5.802522,1.118262,-0.304132,3.206591,-9.937077,2.854319,5.331801,-5.607184,1.706010,-1.254976,-7.181113,6.712543,-8.819793,6.096042,5.103850,1.947006,-9.875196,7.895908,-6.916290,-6.244563,-8.153249,2.428843,-9.333625,-2.667128,-8.202748,-9.924597,-9.696179,-9.076603,-2.029745,9.128629,6.716056,6.709404,0.641114,-2.468776,9.146341,-3.115482,-0.431123,4.207574,2.866160,6.210286,2.458038,3.567490,4.790711,-6.653010,5.377874,8.167015,-0.978036,-8.553870,3.884343,9.057340,8.359837,1.343939,1.845176,-7.421163,-1.005464,8.432397,8.635852,8.753711,-6.310390,0.144827,4.606538,8.317598,8.609211,-9.044684,-9.047969,-5.958983,5.715360,-3.593004,-0.098340,-6.650345,-3.753329,-5.722584,-7.635301,-9.797993,-9.915038,-0.204241,6.803476,3.393862,8.132052,3.730762,-6.576775,7.096119,0.022912,-7.749252,-1.437306,-8.324149,-8.711964,5.157932,0.294142,-2.399774,3.447283,5.931657,-4.072661,7.534958,-6.013885,6.870004,-6.234171,7.544766,-4.816830,-0.009012,-9.119828,2.607886,7.061548,4.252263,4.724543,-6.482848,-3.758048,0.838420,8.758261,-0.226299,1.982605,-3.538222,-9.845872,-3.456908,9.931229,9.047238,4.300518,5.674350,1.787229,0.313868,-2.375898,5.109317,-8.322508,1.232781,-9.090446,5.429775,1.649061,0.837172,8.377388,4.579704,-5.410998,-6.820621,0.032143,5.539891,-9.632909,9.988782,-9.803173,4.466885,3.616705,-6.986200,-7.936763,-6.080906,4.169165,6.382620,5.248862,-2.566721,-0.728492,9.104343,-3.628569,-7.298398,-5.288855,4.943603,5.881904,0.864536,8.608536,-6.237143,3.785487,5.937712,-6.353575,-1.906613,7.306685,-8.131567,7.258365,-1.803879,-7.890154,5.548768,-7.524373,9.862952,3.753855,8.697601,4.717563,3.483532,-8.833865,3.006588,1.615517,-5.545195,-3.763924,-5.444590,-3.686973,9.758248,-9.518575,5.813041,7.395784,-2.906724,9.955863,3.214934,0.643832,-9.544076,-6.931319,-3.847474,3.458619,-2.942155,6.521544,6.369731,1.240901,-8.110999,3.776495,3.516266,5.856619,-1.895149,6.825036,4.227728,-9.373231,-7.546988,4.939712,-4.891761,6.768590,3.272179,-1.469957,-5.465746,8.804079,1.658463,1.558779,-9.328462,-3.850276,0.133275,-6.980981,-8.892857,-1.639270,0.756804,7.928891,-0.496223,4.954436,-5.021264,8.352299,2.118217,3.769864,1.877663,5.143990,1.542771,-3.212155,6.729471,6.345451,5.987490,-3.513263,-7.164892,8.204793,-5.631865,-9.785774,-9.900701,-6.488828,-0.870595,-2.190044,-3.736875,2.832999,6.362942,-3.245993,4.519160,-4.208687,-2.154389,0.214069,-9.790233,1.001061,8.877130,7.267104,1.415340,-0.298922,-3.848513,-0.132464,-9.499283,-5.682654,4.467475,3.373264,6.347488,-7.934150,-4.610474,-7.195438,-1.407440,-3.633424,9.791718,1.199560,3.722315,-9.624440,-8.235357,-8.115122,4.658034,-2.704375,9.669875,6.691671,6.462074,-8.644296,8.364330,-2.608952,9.120628,-2.503865,7.780112,1.427766,4.178235,-4.843140,-9.280862,-0.040982,6.193307,2.279692,-5.197879,8.649321,-9.183661,-3.904801,-1.233289,4.728584,6.558931,-9.218587,1.017589,5.706372,-4.418777,-0.171738,-7.704493,-8.994830,9.843985,-6.112561,-7.168514,6.697565,-7.170142,-5.736052,-6.317413,-4.116477,8.329569,-2.731204,-0.132892,8.492188,6.186387,-9.645577,7.572028,-3.193868,-9.129909,-7.244843,-7.752994,3.051577,9.464338,-3.464330,0.794484,2.223430,1.948706,3.931661,5.225124,-7.369463,-5.283382,-8.942514,7.488549,-7.875465,-2.403428,-7.451812,-3.760580,9.381874,-2.629343,4.166194,-9.199918,-4.112783,6.948868,0.953148,7.100412,2.047978,-0.515501,4.293741,-6.529031,5.900498,-4.634272,-7.576157,5.656186,4.941780,1.225615,2.079587,2.280964,8.539086,8.063580,-1.306384,1.171578,-1.830644,7.969995,8.848021,3.815137,-1.082272,5.506845,-3.835661,-0.055853,-3.042119,1.024998,7.551470,4.324017,3.367437,-0.845295,0.756050,4.218486,4.179553,0.888570,0.626181,-1.119011,9.504855,-7.353171,-2.084581,3.105820,-5.384294,0.003155,6.340322,-1.902009,8.726370,-9.690540,-1.596142,8.471061,3.071886,1.442412,1.310301,-8.128850,6.379255,2.867943,-0.985101,-7.427183,8.190137,-6.901251,-3.040436,9.443018,9.695278,9.839606,7.305054,-3.451037,5.217045,0.760365,8.493527,3.243189,-1.169764,-2.272352,6.117020,9.107561,-8.548175,-1.026624,1.325666,9.831729,2.802035,-2.962116,8.625750,2.607525,-7.032590,1.211147,1.876482,-9.739709,5.094744,-4.134514,8.337810,3.237046,7.970917,5.808715,1.964355,-9.820419,7.195266,-6.256681,4.662574,5.613141,-3.181373,4.157289,-4.897617,-7.367474,-3.614786,-5.163854,-8.872858,-2.486277,9.368624,-4.485454,-6.558000,-5.189105,-9.154792,-8.991593,-4.291996,4.263219,-2.288925,-7.644143,3.314974,9.244801,3.665413,6.329530,0.461363,-4.486046,2.762127,-2.516240,0.361482,7.288593,6.537874,3.398329,-8.844215,-8.190226,6.174363,8.444646,6.606709,-2.091278,-8.640019,1.615591,0.151203,0.354543,-0.323751,-5.410052,-4.286724,5.412221,6.073290,5.810782,-6.523029,9.548549,3.440002,-2.022553,6.979795,6.919237,-2.755889,7.802898,-8.501313,1.721714,-7.365354,-2.433844], dtype = "float64")#candidate|8291|(924,)|const|float64
const_8292 = relay.const([-7.660158,-0.622981,-9.472355,-9.027783,-0.953466,-3.245405,-6.895677,-2.445703,-9.980869,-8.544732,-2.691197,-4.816562,-6.411425,9.105041,-4.051007,-2.804733,1.674308,0.707069,-6.325572,0.561345,-5.329083,-8.197377,-2.002702,-1.441439,8.505204,6.755996,-0.482805,-1.860065,3.117553,-3.382824,-8.064962,-3.974415,-2.069553,1.050112,-7.277997,8.932330,-2.580245,0.127748,-2.730790,-8.637929,-7.094351,9.521560,8.712124,4.644595,0.097989,-2.270100,0.349206,-5.428828,7.803438,-3.982615,-2.858080,-2.778597,-2.315562,1.826545,0.305448,-7.591904,-4.101439,-9.009473,9.141225,-5.731377,-2.178635,-8.574887,9.362419,1.431758,-8.187394,-4.010944,1.221255,-3.809253,-4.010403,5.359343,5.527473,-7.653446,5.135312,1.819428,-1.017995,-3.194817,-4.505326,-0.566633,3.881628,-1.322860,-8.994072,-3.784654,-1.237969,7.826417,1.030343,-5.654078,-9.792862,-0.865298,-1.240673,-6.963424,9.567593,2.667326,-8.882278,4.088642,0.184833,3.876957,4.039422,3.431026,-4.550201,-4.423549,7.405119,-2.630711,6.825233,-2.822050,-6.595170,7.748416,6.150320,-0.312351,-3.603703,4.909380,6.098909,5.307289,-9.810228,-9.355418,0.539844,-0.932791,-3.041350,-7.864958,6.052998,2.075445,-9.983245,1.315008,9.530656,4.104395,-8.986671,6.991483,9.324466,-5.712136,9.602724,6.893623,2.780826,-2.073206,-4.222928,-7.603357,5.738605,-7.381109,-6.476506,7.550839,0.776550,9.417844,0.067529,9.250867,-8.669099,-2.613492,6.156992,-6.652533,-0.584674,-7.928667,-4.478877,-1.835202,-4.623946,0.073401,3.646894,-3.670029,0.359648,-2.737251,-4.309608,8.429465,5.500171,-7.669943,3.685444,7.023372,3.842457,6.062641,-0.529530,9.340512,-7.299528,7.827663,8.468492,-1.523878,-2.359603,7.679931,-5.744271,4.277662,2.024767,-1.325736,-3.536771,-8.483131,1.045785,6.730921,6.819134,-0.765074,2.601436,5.417765,3.203069,7.159703,-2.153274,-1.642349,-3.540683,-5.483659,-2.905147,-5.466233,1.793000,-3.777489,-2.181377,-5.588388,6.507073,8.695755,7.579417,3.387264,-5.769444,-3.871191,-3.809666,-4.799296,-9.211845,-6.420807,1.482782,5.503642,5.430422,-1.634173,-6.858066,4.342752,4.630750,-1.819803,-6.293073,-4.852174,8.348479,4.964026,6.095483,-9.830729,4.061018,-4.909591,7.383257,9.196476,-2.503438,1.965075,-4.987761,-0.663227,5.504890,-9.756921,-5.714773,6.737253,5.570481,3.993308,-0.016529,-5.120156,-6.795153,-1.514498,5.334903,-1.125593,2.101641,-8.391395,9.605013,-2.040667,5.827673,-9.227803,4.815800,0.740775,-8.568595,1.411903,-8.660087,-4.525681,4.941102,2.017127,-1.812727,-7.322149,0.321978,-6.846690,9.270465,1.599630,1.834841,-9.663100,9.266451,-4.307432,4.738784,-2.025280,3.017343,-0.523228,-1.998723,5.947296,-2.506985,-1.065445,-7.022533,-4.980880,1.974517,2.004160,3.271397,2.529835,4.341250,-7.820220,-9.863223,1.030803,-5.027669,-5.572114,6.815520,3.940407,6.014510,0.290387,-9.372369,1.128798,3.359050,8.408566,-1.098223,-2.831030,-9.674438,-1.071070,7.388909,-4.744895,-1.514533,-7.026519,6.903292,2.974713,-6.876653,-4.665449,-1.078003,-8.570404,-9.569156,-5.094767,7.653128,1.647609,7.366077,-5.263478,0.075234,-5.129816,8.573192,9.477922,5.957703,3.865629,5.723377,-0.574712,5.833116,2.071252,-3.130994,-4.371607,-3.872922,1.392536,-8.674670,9.726865,7.267859,0.627904,-9.063096,0.790075,1.733401,5.080828,-5.230903,-5.172795,1.631072,-4.776023,1.813297,0.691601,-1.597970,5.106224,-7.466378,-1.902104,7.706809,-2.859872,-9.705042,4.742924,-1.812472,-1.149865,-9.874416,-6.745279,-5.362477,-4.038706,8.196980,-6.560740,-2.101221,-5.608783,-5.674824,-2.943582,-0.864089,5.426569,-0.505332,-9.859412,-8.989658,-1.083010,9.243780,-7.869119,6.326575,2.283333,-5.216047,-2.496921,-3.763224,8.247712,8.316226,-3.695998,-5.742396,-8.143369,-2.568638,9.256759,1.948434,5.388081,-7.663726,-4.754320,-7.866384,-2.094101,3.086896,-9.002493,-9.531593,-2.355735,5.483906,2.984478,5.015851,2.939565,9.129467,-0.085296,-9.987736,0.181504,2.082687,-3.742025,-3.449502,-7.618122,5.157581,1.829241,-2.409181,7.044735,-6.964216,8.445324,-5.697471,0.653624,4.011426,-4.645304,6.404459,-5.016089,1.078592,8.665386,5.229841,-0.961031,-3.159587,-2.931757,3.956172,-3.600984,8.873830,9.052612,-0.271715,1.683516,-9.489319,5.314141,7.062714,-9.350269,-8.090327,-8.070967,7.755290,-3.867368,-5.169747,-7.485276,-6.551380,7.587852,-2.336336,5.435200,6.388151,-8.365923,-3.843371,-0.096227,4.936787,9.368947,-1.314880,-4.999926,-6.561797,2.037389,0.871065,-2.738235,-4.807206,4.981189,5.365459,-2.713506,6.522004,-3.454725,-6.610380,-4.017443,-3.205361,-9.444277,5.145598,-6.364441,8.161882,3.069517,-3.701961,4.285651,7.726123,6.161335,9.912988,-9.323342,7.509152,4.543612,0.325636,3.289995,0.771944,-2.600599,-4.845744,-8.231711,-4.205258,9.890739,0.223767,3.933104,4.744809,1.043912,-0.813112,-2.962186,0.709038,-6.276974,7.492652,-6.507739,5.788889,4.434041,2.318904,5.293747,1.944580,-5.842660,4.609979,-3.783198,8.353683,-6.482009,6.700609,9.809123,-8.603358,6.669420,2.359095,-1.097291,-2.873566,1.071211,4.655323,1.386988,5.538730,0.641578,7.338554,3.612281,-1.424191,4.243615,-7.290940,-6.564589,-6.140342,-9.075536,2.151244,-5.025533,9.500546,2.969174,-3.464295,9.864623,2.345652,9.206819,-3.716368,6.967887,-5.454803,-9.313345,6.794164,3.552212,-0.612045,6.417700,-8.710355,2.740158,1.828644,-1.957108,8.972662,2.270571,-4.034355,-8.550893,-9.302853,3.461274,-4.020270,5.079725,-4.462174,0.217290,6.600309,-2.022011,-4.663835,8.496584,0.286909,5.034754,9.641421,4.065400,7.116926,2.358837,1.920889,-6.713366,-7.593252,1.757710,-9.418896,-3.503375,1.766152,6.664660,-5.398537,-3.746748,-6.464208,0.929227,-9.258956,-3.488462,-4.014762,4.072762,-9.867649,5.091040,-5.078415,-6.866744,0.967568,-2.885723,6.252272,-5.650063,-1.574688,0.076888,-6.434061,-2.197936,2.759113,8.036261,-3.603989,2.112508,-4.452988,-2.314906,2.526191,-9.952395,2.696621,-3.389874,-0.670134,-2.590475,4.731784,-2.483075,-7.129783,-5.187244,5.344983,1.820615,8.632570,-9.898030,1.792829,-0.481205,0.025392,0.037687,9.923055,-0.620607,-5.161797,-3.792153,-3.338944,-3.595293,8.452840,5.923953,-0.847359,4.910619,3.367595,2.253965,-4.106824,-8.411749,-8.706905,-0.264499,9.226793,-3.075734,4.202540,7.767274,3.305998,4.046471,-3.094409,1.612629,3.492792,-6.487148,-7.719227,-7.564347,8.792487,1.689360,-8.713542,5.456281,-7.610216,-5.642902,-2.277375,1.298232,0.531024,5.098326,7.113912,-0.899998,5.778110,-0.800551,-6.580096,-9.881283,2.571606,-7.907691,8.245778,6.109999,6.929031,4.766810,1.047631,9.217086,1.664972,-8.453935,0.593896,-7.932923,-0.863917,-3.981377,5.832639,-4.407073,-7.546780,-1.523995,4.816660,6.319959,0.746454,-1.626402,-3.423012,0.860390,-0.354056,-5.673856,-3.373800,-7.326593,3.392958,-9.414300,0.556503,8.026309,9.554705,6.689879,5.372725,5.123405,-0.756900,0.557686,1.872903,-8.447654,7.502494,8.921993,7.101015,-9.037850,-5.272955,9.647136,0.754249,-8.312178,6.401862,5.267012,-5.570086,2.306740,6.932132,8.009845,-5.770858,-6.535031,0.256179,9.602284,-4.638304,0.867864,-7.480082,-0.216341,-5.332827,-8.111038,9.650823,-7.011405,-3.892872,-5.257871,4.524311,-6.061811,1.171470,2.395131,-4.533045,-1.705157,-2.548680,-4.318790,-3.465711,-1.549062,6.645696,-0.240131,4.050337,-0.905341,5.585659,7.601390,0.803349,-5.017497,-8.577987,2.254780,-7.753455,0.320632,3.046141,-8.290592,5.219328,-5.021351,9.083398,3.792794,-3.974165,7.357069,-3.500168,-9.416519,-6.492101,-8.081787,-0.261092,-1.798326,8.265026,1.728630,4.675630,1.624293,-9.662512,5.477493,-3.903617,-4.527966,-0.203157,-3.938137,-2.816485,-2.975046,9.022566,-0.204062,-8.011759,7.144407,-1.681179,9.204816,-3.500780,-9.612439,-2.094305,-6.570540,-1.690993,5.879145,-4.882391,7.347774,-1.882311,-9.715595,8.013251,5.265928,1.180546,7.671194,6.423687,9.625002,5.992960,0.188648,1.133838,9.102235,-6.147723,-8.773013,-6.490066,-0.189363,-3.202538,0.470656,6.761053,0.506826,7.698355,-2.838117,9.873543,-9.040555,-2.349168,7.951810,9.139254,6.449433,4.975752,1.000735,-4.875592,2.737797,-8.573943,-0.470602,6.631210,-7.003298,-6.524224,-2.149674,-7.984565,9.395145,-9.334039,-4.888479,8.998826,5.442826], dtype = "float32")#candidate|8292|(832,)|const|float32
call_8290 = relay.TupleGetItem(func_8272_call(relay.reshape(const_8291.astype('float64'), [924,]), relay.reshape(const_8292.astype('float32'), [416, 2]), ), 3)
call_8293 = relay.TupleGetItem(func_8275_call(relay.reshape(const_8291.astype('float64'), [924,]), relay.reshape(const_8292.astype('float32'), [416, 2]), ), 3)
func_7314_call = mod.get_global_var('func_7314')
func_7315_call = mutated_mod.get_global_var('func_7315')
call_8302 = relay.TupleGetItem(func_7314_call(), 0)
call_8303 = relay.TupleGetItem(func_7315_call(), 0)
output = relay.Tuple([call_8280,call_8290,const_8291,const_8292,call_8302,])
output2 = relay.Tuple([call_8281,call_8293,const_8291,const_8292,call_8303,])
func_8333 = relay.Function([], output)
mod['func_8333'] = func_8333
mod = relay.transform.InferType()(mod)
mutated_mod['func_8333'] = func_8333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8333_call = mutated_mod.get_global_var('func_8333')
call_8334 = func_8333_call()
output = call_8334
func_8335 = relay.Function([], output)
mutated_mod['func_8335'] = func_8335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7773_call = mod.get_global_var('func_7773')
func_7775_call = mutated_mod.get_global_var('func_7775')
call_8336 = relay.TupleGetItem(func_7773_call(), 2)
call_8337 = relay.TupleGetItem(func_7775_call(), 2)
func_6917_call = mod.get_global_var('func_6917')
func_6923_call = mutated_mod.get_global_var('func_6923')
var_8345 = relay.var("var_8345", dtype = "uint8", shape = (8232,))#candidate|8345|(8232,)|var|uint8
var_8346 = relay.var("var_8346", dtype = "uint32", shape = (1, 198))#candidate|8346|(1, 198)|var|uint32
const_8347 = relay.const([True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True], dtype = "bool")#candidate|8347|(60,)|const|bool
const_8348 = relay.const([[-8.266948,8.806431],[5.189108,-8.123081],[0.673528,-7.653223],[-0.105103,9.875726],[-8.263918,9.069184],[-9.085913,-4.315285],[-5.929676,6.602647],[3.599112,-9.261240],[5.356097,-7.229378],[-8.529507,-7.657953],[3.358827,-3.746501],[-2.602516,1.834120],[3.988891,6.515019],[-9.046799,-7.099625],[9.399862,-8.802161],[-4.734440,1.175835],[-0.781898,-1.614291],[-4.510736,-6.361970],[3.441869,5.745837],[-7.993401,-9.599786],[5.552307,0.517880],[6.266536,-0.819940],[-4.492948,0.418829],[-5.468309,-1.969376],[5.188141,3.918103],[8.359930,9.874624],[-9.896738,-4.892830],[4.079872,-6.975340],[0.011701,1.514647],[3.822517,2.544109],[-0.925191,-6.363929],[4.744599,5.125346],[4.270990,-6.715113],[-6.325561,5.140905],[-5.359641,3.339356],[-3.206383,1.984267],[2.753005,3.647677],[-3.287696,-9.225036],[0.003470,5.348102],[1.535222,0.455469],[3.150159,5.348517],[-6.610921,-8.340252],[2.388090,-4.417356],[8.944223,1.900254],[-6.227373,4.925278],[0.791614,1.462021],[-6.277060,-7.919470],[0.482959,-7.018056],[5.888117,-6.694431],[-8.506486,5.815081],[-2.723635,-7.929982],[3.534221,7.053455],[-4.207493,-2.614182],[-0.743669,-2.633461],[2.513085,2.291761],[4.211162,3.709525],[4.894687,-6.332023],[7.485891,8.465521],[2.535305,5.283616],[4.642132,3.561253],[-6.901254,-0.619544],[4.469549,1.351760],[2.900748,-9.194398],[8.269485,7.421101],[6.861665,-8.815563],[5.847752,0.159691],[2.154691,2.331571],[3.271314,-0.500098],[4.336334,-7.315775],[-1.760254,3.169035],[-3.619312,-7.842736],[0.462687,2.396376],[9.632792,9.887658],[8.527089,2.869514],[-3.391147,-0.275181],[9.693437,1.800569],[8.456919,-2.090604],[1.562229,1.948934],[9.061130,2.628000],[7.166766,6.525407],[3.763814,-3.440443],[4.361579,1.838183],[-3.509889,6.026613],[3.052211,-0.875002],[8.775573,-6.755762],[-2.426079,-5.577237],[1.816546,1.985221],[-7.625539,6.326057],[2.190925,2.437384],[1.546402,-9.552076],[-6.945432,-3.306260],[-3.885369,-5.893701],[3.975194,5.582378],[-1.744932,0.957529],[7.663453,-9.617366],[9.352386,0.617245],[6.384328,-5.714286],[-9.269545,9.558528],[-3.014988,-9.774313],[-6.988636,-5.448634],[9.385474,-7.416337],[-5.425327,8.638746],[-0.488512,3.328519],[7.131612,-2.042641],[9.992603,1.721423],[-6.892869,-8.800983],[-2.112186,8.895477],[5.079799,-9.935496],[9.427892,-3.165338],[-6.063698,-7.853193],[-6.538989,6.082167],[-9.913261,-6.761236],[-0.684806,1.446252],[-2.608434,2.299847],[-6.193988,-1.474132],[2.127457,-6.611773],[7.435592,-8.289321],[-3.022951,-2.512135],[-4.208691,-6.092049],[6.507629,6.600829],[5.654091,-2.353669],[-7.589605,-9.138121],[8.918624,3.735694],[-7.492306,7.629351],[-5.979024,2.001259],[-1.993027,1.560041],[9.290237,-7.751736],[5.866489,-7.227732],[-6.188855,-6.901938],[2.498629,-0.624135],[0.890094,4.689051],[7.822687,6.186044],[-2.672729,7.513395],[-8.475864,2.054164],[-0.639210,5.936844],[3.609257,-0.016132],[-0.617667,9.567366],[-3.783238,-7.517745],[4.049112,8.284155],[3.055560,-2.137808],[2.181129,-6.144040],[4.936765,-3.527977],[9.757340,6.695638],[7.425752,0.159346],[-7.777113,9.232136],[-2.801861,2.368277],[0.851474,-6.826732],[3.347257,-0.729534],[-1.874099,2.046625],[2.523639,-6.722802],[7.415111,1.601630],[5.767683,-2.796550],[7.223459,-8.726328],[-7.606410,4.371293],[-5.984504,-8.814312],[9.547616,5.749927],[9.592404,6.695647],[-2.474478,-6.665155],[3.839018,-9.441851],[-9.747141,-3.317723],[9.237708,6.234240],[-5.973589,3.377133],[-0.581600,6.382330],[6.936308,-6.850257],[8.189646,4.809199],[9.566073,4.475300],[7.263001,8.576348],[-9.563468,-6.141001],[9.926546,8.968601],[-3.531330,-7.433112],[-6.246106,-4.346689],[-0.618738,4.507703],[-7.028243,3.022762],[-2.009004,-7.242205],[1.307777,3.619422],[-6.852146,7.493632],[9.161499,1.489035],[4.761623,-6.507269],[2.583261,4.516338],[6.006350,1.609934],[2.687930,3.230240],[5.727138,-0.760068],[-8.934310,4.945170],[1.872777,-7.272427],[1.111331,-5.746711],[8.956869,9.677382],[-3.666573,7.789459],[8.369186,1.347265],[3.736929,-2.742929],[9.334880,9.634342],[-6.646088,-1.305279],[9.908596,-6.736861],[-5.547529,-6.475889],[2.160828,7.425653],[-1.760925,-8.573562],[5.489414,3.887225],[-2.363309,-8.158917],[-0.343977,1.573239],[-6.750045,-6.566404],[-4.938871,-0.972233],[6.325744,7.872524],[-1.251899,-3.866002],[7.412649,-4.896285],[7.648693,4.459245],[7.693285,4.735654],[-0.378884,-8.702175],[-5.480388,-9.344353],[9.759645,0.570227],[1.796834,-3.673960],[8.274283,1.594718],[4.491597,-5.720646],[8.148717,-9.009579],[7.129393,-4.968608],[9.846135,-9.501613],[5.231186,-5.694913],[8.645144,3.590666],[-1.963314,0.618833],[9.735654,-2.882313],[-0.370197,3.885566],[1.584329,7.411588],[3.575847,-9.389258],[-6.322046,-6.507185],[2.235460,3.883310],[-2.120748,-3.749969],[-0.576862,0.442865],[-6.216708,-7.691050],[-1.764249,-7.492687],[2.312052,-5.314198],[4.904944,4.411506],[0.900729,8.961751],[9.867684,0.305614],[6.261311,-5.665724],[0.707202,9.508640],[-1.891487,5.033973],[8.354793,-5.808978],[9.320610,2.177942],[0.481912,-4.702100],[-5.509980,8.590166],[-6.426080,-0.440325],[-3.100593,4.114462],[-8.653752,8.450248],[-3.173256,1.672112],[-5.054702,9.720142],[-2.950118,-6.536632],[0.118870,-6.013530],[-0.883255,2.972489],[-1.637799,5.575772],[9.131604,9.536593],[7.212299,-5.007691],[9.540844,-8.655213],[2.353887,1.456323],[-8.537584,4.159631],[-2.698533,-5.825909],[5.063568,-3.944804],[6.613936,9.485426],[-6.109060,-5.769599],[6.073949,-7.196999],[-5.674218,8.288021],[-7.390993,6.575345],[-4.153888,-1.910900],[-1.347997,-7.685160],[3.486190,9.114471],[-2.187080,5.468584],[0.517981,-0.303046],[-5.522034,8.967954],[1.766336,-9.116766],[7.436478,0.237449],[-0.500832,2.914940],[-3.942753,-7.839498],[-2.087242,-1.211097],[-8.169449,8.226526],[9.364749,5.816642],[-2.984954,-2.856933],[2.661331,9.321477],[-6.594015,-9.971292],[1.734067,4.892596],[9.456860,3.368208],[5.104535,-1.434146],[6.871320,-8.041227],[-4.518061,-6.880308],[-4.451327,-8.285011],[2.937488,8.693494],[-8.275630,-4.701134],[9.817587,0.522817],[5.430705,-2.719696],[-8.130200,5.154832],[-2.591346,-3.646924],[2.877191,-0.701865],[4.061848,2.618534],[-8.348350,-6.536074],[-5.179565,-0.908406],[-6.325061,2.317216],[-5.879596,9.970306],[-0.348880,-2.934395],[-5.892134,8.424907],[6.455292,4.433787],[0.959854,9.748987],[1.038157,-2.254151],[-4.527215,6.355910],[2.450012,6.492962],[-4.679172,-5.637906],[0.841185,-8.800147],[-5.611464,1.369536],[8.342412,-5.198100],[3.869175,-8.147540],[-0.507229,-7.763224],[-6.859335,9.045400],[-0.762917,3.007627],[1.964299,-4.586837],[4.603256,-8.858317],[-3.453295,8.513781],[3.259138,-8.777575],[-2.608436,9.578018],[-3.244562,8.574030],[-2.254782,-2.427557],[4.136649,0.158368],[4.855873,9.667209],[-9.384681,-5.118061],[8.806614,-2.525585],[-2.754311,6.499881],[-3.070652,2.471951],[0.874201,8.320293],[0.392788,-1.948951],[4.494606,-9.247750],[2.719228,0.313808],[2.487293,3.582421],[-6.673659,4.141864],[-0.648036,9.173355],[-6.824538,6.659804],[1.484272,1.903875],[-8.930200,-0.508910],[0.354288,5.378575],[-6.934110,1.054876],[-3.808902,7.054370],[-0.351609,7.143789],[0.404809,5.275967],[1.746237,2.388838],[0.106966,-8.824146],[9.219453,-8.988566],[3.560640,1.475126],[-7.059789,1.420259],[7.288458,2.848502],[-8.205358,4.413382],[4.849515,9.880584],[4.082203,-2.701883],[0.941507,5.988423],[5.592853,2.632427],[6.364297,-5.572938],[8.544688,-0.625689],[-0.814735,8.255155],[9.762260,8.154124],[2.817231,0.258398],[2.573806,-7.317370],[-5.924592,9.810127],[2.281426,-0.181349],[-2.353970,-1.769368],[8.680684,-0.525971],[1.283701,-2.212587],[-8.742368,1.307241],[-8.908638,3.778040],[-1.472715,-1.496462],[6.423675,-1.014324],[-8.082768,6.344611],[-5.326537,8.859523],[-4.037614,0.763020],[0.702035,-8.956226],[7.360038,9.873080],[1.006640,-9.273941],[-3.375344,-9.371216],[-8.868157,-5.798665],[-2.924342,9.834896],[-4.006606,-6.138933],[9.648456,-3.607851],[8.570088,-9.228446],[-2.087438,-4.409511],[-4.041301,-1.380143],[6.200028,-1.320603],[2.613695,-0.588508],[-0.507737,-8.180011],[-3.024022,-6.016492],[7.767557,-1.263890],[0.576033,6.213298],[9.674204,4.331921],[-5.454991,-8.995818],[5.106470,-2.931377],[-0.425617,-5.546111],[-9.718986,3.108206],[2.188753,-6.979445],[-9.888341,5.949279],[-3.505614,6.360773],[-1.521763,5.262247],[-5.209407,-1.728274],[3.395167,1.882515],[4.056530,-3.725727],[-9.977808,0.448286],[3.267564,-4.723440],[-8.460467,-8.388539],[4.932767,-8.606852],[-0.239702,-5.849008],[-0.800581,-5.993109],[0.982988,8.232100],[0.532724,4.624119],[8.983306,5.717486],[-2.454330,-6.636561],[8.999469,4.518191],[-3.101009,-9.461403],[-5.975659,-7.507932],[1.883172,-1.108944],[-3.854838,-7.504537],[9.200946,4.425208],[-1.757326,-3.463936],[0.708034,3.430821],[5.502730,2.524415],[3.046417,-4.064394],[-5.648812,-5.645849],[-8.914708,1.586026]], dtype = "float32")#candidate|8348|(416, 2)|const|float32
call_8344 = relay.TupleGetItem(func_6917_call(relay.reshape(var_8345.astype('uint8'), [588, 14]), relay.reshape(var_8346.astype('uint32'), [198,]), relay.reshape(const_8347.astype('bool'), [60, 1]), relay.reshape(const_8348.astype('float32'), [832,]), ), 4)
call_8349 = relay.TupleGetItem(func_6923_call(relay.reshape(var_8345.astype('uint8'), [588, 14]), relay.reshape(var_8346.astype('uint32'), [198,]), relay.reshape(const_8347.astype('bool'), [60, 1]), relay.reshape(const_8348.astype('float32'), [832,]), ), 4)
uop_8352 = relay.erf(const_8348.astype('float64')) # shape=(416, 2)
bop_8364 = relay.maximum(call_8344.astype('int16'), relay.reshape(const_8348.astype('int16'), relay.shape_of(call_8344))) # shape=(832,)
bop_8367 = relay.maximum(call_8349.astype('int16'), relay.reshape(const_8348.astype('int16'), relay.shape_of(call_8349))) # shape=(832,)
uop_8375 = relay.rsqrt(uop_8352.astype('float32')) # shape=(416, 2)
func_1569_call = mod.get_global_var('func_1569')
func_1576_call = mutated_mod.get_global_var('func_1576')
var_8386 = relay.var("var_8386", dtype = "uint8", shape = (2184,))#candidate|8386|(2184,)|var|uint8
call_8385 = relay.TupleGetItem(func_1569_call(relay.reshape(var_8386.astype('uint8'), [14, 12, 13]), relay.reshape(var_8386.astype('uint8'), [14, 12, 13]), relay.reshape(var_8346.astype('uint32'), [198,]), relay.reshape(const_8347.astype('bool'), [60,]), relay.reshape(uop_8352.astype('float32'), [832,]), ), 3)
call_8387 = relay.TupleGetItem(func_1576_call(relay.reshape(var_8386.astype('uint8'), [14, 12, 13]), relay.reshape(var_8386.astype('uint8'), [14, 12, 13]), relay.reshape(var_8346.astype('uint32'), [198,]), relay.reshape(const_8347.astype('bool'), [60,]), relay.reshape(uop_8352.astype('float32'), [832,]), ), 3)
output = relay.Tuple([call_8336,var_8345,var_8346,const_8347,bop_8364,uop_8375,call_8385,var_8386,])
output2 = relay.Tuple([call_8337,var_8345,var_8346,const_8347,bop_8367,uop_8375,call_8387,var_8386,])
func_8399 = relay.Function([var_8345,var_8346,var_8386,], output)
mod['func_8399'] = func_8399
mod = relay.transform.InferType()(mod)
mutated_mod['func_8399'] = func_8399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8399_call = mutated_mod.get_global_var('func_8399')
var_8401 = relay.var("var_8401", dtype = "uint8", shape = (8232,))#candidate|8401|(8232,)|var|uint8
var_8402 = relay.var("var_8402", dtype = "uint32", shape = (1, 198))#candidate|8402|(1, 198)|var|uint32
var_8403 = relay.var("var_8403", dtype = "uint8", shape = (2184,))#candidate|8403|(2184,)|var|uint8
call_8400 = func_8399_call(var_8401,var_8402,var_8403,)
output = call_8400
func_8404 = relay.Function([var_8401,var_8402,var_8403,], output)
mutated_mod['func_8404'] = func_8404
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8441 = relay.const([[[5.111570,1.339378,2.306540,-2.732498,9.113157,3.151046,-6.374553,7.564216,3.088506,5.659707,-6.377219,-7.488885],[-0.963711,-1.628710,-3.590420,3.210291,0.863583,9.639834,-9.224572,-5.749516,8.681458,-8.702850,6.245265,2.399039],[5.824435,2.602393,-1.540767,-9.907371,5.134356,-1.328580,-1.681365,7.241023,-6.441668,7.666994,-9.609662,-0.974098],[6.395902,2.826707,-6.521182,-3.850627,8.420698,1.409188,7.521931,-9.991940,6.754962,-3.894200,-2.593181,6.323049],[-6.843480,-6.399449,-6.141502,-2.455136,9.334612,-2.498531,-3.313713,0.411216,-0.355211,-8.894885,-1.271539,-1.395934],[8.812906,-4.737172,-5.980757,-5.874165,-2.756316,3.864054,8.354871,-8.140419,8.492822,-9.825470,4.884239,1.805793],[4.360654,-9.852868,5.654138,4.860102,2.072217,-3.342509,7.083340,4.279010,9.801510,-2.105679,-3.666193,-3.874527],[9.126690,-2.608456,-8.132109,1.065312,8.458285,-9.929067,-1.803901,9.159518,3.854700,-2.798301,-4.269171,-9.951186],[-1.992401,-6.983205,4.548056,6.255484,2.429342,-4.164463,3.520692,8.824290,8.752557,7.484807,0.201179,3.436764],[7.439569,7.565243,5.758504,5.680736,-0.659051,5.908837,-1.367532,1.620401,-9.669712,-8.199619,1.991077,-8.148381],[1.816204,-7.164410,-7.487433,3.843299,8.503447,1.934273,-3.408778,2.968843,-7.082814,-7.522769,0.043084,-3.322713]],[[6.346351,2.575361,0.863573,1.547206,-5.458339,1.152400,-1.092875,-2.748319,-3.205635,-3.072816,-6.637619,1.430899],[-1.738298,-3.532956,6.612466,1.830708,1.156128,4.312783,-4.584138,7.740337,8.958184,2.190882,9.350950,9.366065],[4.018983,-5.970985,2.638222,-3.780944,2.111140,3.192049,-0.350642,-2.142521,-9.200867,-3.568144,-5.543495,0.322002],[-9.692280,8.944228,-4.656452,3.828363,1.228757,5.313537,-4.178346,-6.590250,-0.150590,-7.968170,0.759581,-6.052514],[1.455773,-1.667179,-9.053621,5.770575,6.170916,-6.715584,6.343589,9.416477,2.500763,-6.460895,7.562533,-3.455816],[-8.096051,-6.110613,7.344776,9.412816,8.522772,-0.450440,2.662325,-8.260324,4.627958,-5.125296,8.805858,0.167982],[7.180030,-3.281333,-3.362915,-5.124818,7.165473,-6.911945,-9.799606,9.263982,-3.767983,6.134629,2.781078,-1.128912],[4.630702,-0.368557,-2.625565,3.253874,0.958039,-3.351528,-8.447027,-4.233764,9.104244,-6.243294,3.184467,8.953544],[-7.954509,7.616736,1.697281,-2.065899,6.061756,6.478356,-7.156882,8.420040,-1.872914,0.661790,-7.885737,-2.720803],[5.748532,5.408580,1.910358,-1.037201,-5.501651,6.717257,1.132621,-5.798843,-1.217820,-9.803421,-4.312058,-5.298750],[-7.438715,-7.014702,-3.590103,-4.401175,4.685710,-2.079828,8.316304,-7.841930,-5.940041,4.748226,6.033197,-3.405193]],[[3.888646,-6.080961,-4.278882,-7.195196,2.443541,-5.086844,2.212842,8.370386,-8.023407,2.535604,-7.705949,9.867467],[-0.154944,-0.161288,-1.386358,2.713078,3.173406,-5.093925,5.010174,-3.414460,5.422387,-7.263520,-5.871609,8.405616],[4.634974,-0.671884,6.324937,-8.207948,-7.459861,8.070526,-7.939558,-0.078527,6.326035,1.937686,0.745086,6.715223],[-0.130896,1.016523,3.940735,-6.211137,-7.832207,-3.552526,-9.192058,4.343135,1.010788,-3.883166,8.005695,4.659383],[5.938204,0.377270,4.998811,7.500048,-1.121384,-5.638555,5.731871,-1.030970,9.049707,5.005202,-6.072204,-4.668597],[-4.559413,2.627340,0.243085,-5.757772,7.830940,5.137316,-0.820471,9.423415,5.319166,-2.261577,-6.873492,-6.953887],[3.288405,9.551676,-3.089281,4.495098,-9.921518,6.146322,0.061300,-8.043427,6.688068,1.674609,-5.623169,1.228749],[-3.943730,1.329651,-9.137373,-8.785065,9.910132,1.899791,3.285373,-9.742675,9.340044,1.562146,8.207393,-9.347912],[7.257641,-8.377379,-2.146795,-7.734449,4.789044,9.924242,4.201097,6.183728,6.202011,0.842659,9.537894,0.497982],[6.987662,-3.689908,-1.542401,5.940657,-4.509750,-8.855452,9.028547,-7.255576,-4.276661,2.410314,8.581749,-7.945154],[3.248952,-5.434924,-7.030474,-9.934657,-5.924097,-4.451012,7.599846,8.293364,-6.979365,-6.236257,-4.473099,-1.785319]],[[-0.832406,-8.417848,9.252326,-9.693720,-3.792603,6.421535,-8.629259,-1.528836,-6.692568,-5.912250,0.821435,-1.191159],[0.597462,3.683751,5.059147,-4.808351,1.890313,7.268363,6.819162,-5.808328,-4.574663,-3.723617,8.856260,-3.875026],[-6.485887,2.416188,-3.353462,6.005427,-0.887744,8.587788,-4.867755,7.439023,-9.015853,-0.647121,-8.148978,-4.129397],[9.636119,-7.616377,5.233441,-4.956334,1.784006,9.067809,4.148760,6.004481,-2.662167,5.604933,-9.611498,-0.850060],[-3.838742,-1.843249,7.635051,9.976436,-0.961732,9.822206,-0.995342,4.001030,1.994412,7.646345,8.275968,-7.977732],[9.397857,-8.478100,-1.247224,8.599417,-1.374117,-4.339046,-1.896941,-5.501797,3.266943,-6.528672,5.550120,9.510166],[3.646990,-7.297365,5.932408,-5.773337,-0.308810,-8.194863,4.152276,4.772725,0.709614,-2.116709,-5.202306,-3.375709],[-9.668035,7.486999,-6.348036,0.215730,-5.606572,-5.881191,-3.118269,-8.222116,-1.309731,-0.464207,-0.037114,9.386729],[0.725282,7.673517,-7.764681,8.971746,2.976542,-7.459511,0.023645,8.188589,2.463708,9.532573,-4.072115,3.138462],[-3.215259,-8.437468,0.427632,-2.155738,1.476269,-6.461627,-4.278819,4.187422,0.891654,7.077544,9.253202,-1.367657],[9.539809,-7.049285,0.925245,-1.305280,2.827355,1.222333,-3.720368,9.569474,6.400490,0.281085,2.593032,7.433640]],[[-3.166720,7.326078,6.301483,6.331547,1.979762,-3.317119,7.196246,-5.052175,-5.787292,6.614639,-3.870124,-2.718584],[1.042696,7.236111,-2.813667,9.202805,2.769489,-8.687924,-0.038270,5.960624,-9.357353,-5.726217,-3.811203,-0.767280],[-8.759633,0.372303,7.426854,7.195277,5.981018,2.905019,3.695673,4.336317,-0.303068,-1.358653,5.989440,-7.248246],[3.688231,4.483586,-2.329263,-7.363091,5.303180,4.307102,-2.078966,1.580167,7.791152,2.508880,1.645141,1.642119],[1.567493,-6.609713,-7.618900,-1.265210,-0.701027,9.036794,1.172527,0.084329,-4.795945,4.440634,2.427398,-4.664286],[-6.610774,-3.097612,-3.840600,2.854672,9.044745,-5.450581,-0.835884,9.284957,-4.720090,7.823633,0.556777,3.542995],[5.647028,-4.544775,6.369784,4.903286,-3.068812,-5.883339,-9.090224,-5.380373,0.811499,2.899785,0.853276,-3.997119],[4.498506,-2.925969,0.741150,-9.949745,-9.294235,1.544083,-4.426370,6.352837,-3.161535,3.212588,3.135800,-6.043626],[3.398713,3.481974,9.486242,-8.561500,8.544071,4.066489,-5.156599,-2.577748,-6.942651,8.265300,-8.151341,2.829016],[-2.422635,3.527126,9.152522,-2.801266,8.213445,3.738479,-7.435772,-7.382593,-3.613557,-0.190627,7.789184,-2.603449],[-3.469710,-5.574141,-5.952486,-2.428790,0.332663,8.552971,9.871700,4.279340,4.989348,9.068238,-1.584277,6.729012]],[[1.101070,-6.296706,-2.658146,-8.911737,-2.825495,-2.520273,3.599103,6.422435,-6.063953,6.314331,-8.595313,7.493997],[9.586253,6.998768,-1.793406,1.777213,-4.543047,-1.780943,-7.186409,-5.214837,-2.586385,3.142609,1.033051,-4.545376],[2.481733,1.317588,-6.813517,9.634826,-8.882566,9.809714,-6.135679,-0.614625,-7.982688,1.629218,-6.136119,0.651112],[-2.235096,-1.680961,6.452511,-1.425467,-2.474381,6.138829,-7.886681,-3.439196,9.515025,0.677912,-5.184294,5.378731],[-7.145025,2.659459,-3.429147,9.775720,-3.592569,-6.156510,-0.426930,-4.118354,-6.009394,4.854632,8.719398,7.635377],[-8.944199,-9.313861,9.431207,6.859347,-4.939285,-4.558892,-5.179801,-7.401592,7.090304,-4.239313,4.945234,-7.466069],[-5.992205,-0.982655,1.706552,7.358437,-7.875073,6.269039,7.958372,4.552658,6.404486,-4.106994,-0.451357,-6.158175],[0.246508,0.010847,-5.582652,-2.357730,-3.649335,-8.861755,0.862425,1.358860,1.165525,5.246835,0.898629,-4.993816],[-2.175975,-3.327654,2.629639,-0.046696,-6.283508,0.269734,3.695383,5.905537,-2.905327,9.371282,8.092851,2.064858],[0.393008,0.384968,-9.677623,-5.499637,-7.395702,9.932857,5.873241,-8.871661,9.816873,-0.543432,-4.596882,-0.548584],[3.724779,-1.889461,-0.803682,6.905095,-6.750390,5.587141,9.244883,7.911965,-9.177181,1.700095,-1.235983,0.395520]]], dtype = "float32")#candidate|8441|(6, 11, 12)|const|float32
uop_8442 = relay.sin(const_8441.astype('float32')) # shape=(6, 11, 12)
func_6738_call = mod.get_global_var('func_6738')
func_6741_call = mutated_mod.get_global_var('func_6741')
var_8448 = relay.var("var_8448", dtype = "int64", shape = ())#candidate|8448|()|var|int64
call_8447 = relay.TupleGetItem(func_6738_call(relay.reshape(var_8448.astype('int64'), [])), 0)
call_8449 = relay.TupleGetItem(func_6741_call(relay.reshape(var_8448.astype('int64'), [])), 0)
uop_8452 = relay.log(const_8441.astype('float64')) # shape=(6, 11, 12)
var_8457 = relay.var("var_8457", dtype = "float64", shape = (6, 11, 12))#candidate|8457|(6, 11, 12)|var|float64
bop_8458 = relay.right_shift(uop_8452.astype('uint16'), relay.reshape(var_8457.astype('uint16'), relay.shape_of(uop_8452))) # shape=(6, 11, 12)
output = relay.Tuple([uop_8442,call_8447,var_8448,bop_8458,])
output2 = relay.Tuple([uop_8442,call_8449,var_8448,bop_8458,])
func_8463 = relay.Function([var_8448,var_8457,], output)
mod['func_8463'] = func_8463
mod = relay.transform.InferType()(mod)
mutated_mod['func_8463'] = func_8463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8463_call = mutated_mod.get_global_var('func_8463')
var_8465 = relay.var("var_8465", dtype = "int64", shape = ())#candidate|8465|()|var|int64
var_8466 = relay.var("var_8466", dtype = "float64", shape = (6, 11, 12))#candidate|8466|(6, 11, 12)|var|float64
call_8464 = func_8463_call(var_8465,var_8466,)
output = call_8464
func_8467 = relay.Function([var_8465,var_8466,], output)
mutated_mod['func_8467'] = func_8467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5598_call = mod.get_global_var('func_5598')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_8516 = func_5598_call()
call_8517 = func_5598_call()
func_7751_call = mod.get_global_var('func_7751')
func_7754_call = mutated_mod.get_global_var('func_7754')
var_8519 = relay.var("var_8519", dtype = "bool", shape = (504,))#candidate|8519|(504,)|var|bool
call_8518 = func_7751_call(relay.reshape(var_8519.astype('bool'), [7, 6, 12]))
call_8520 = func_7751_call(relay.reshape(var_8519.astype('bool'), [7, 6, 12]))
output = relay.Tuple([call_8516,call_8518,var_8519,])
output2 = relay.Tuple([call_8517,call_8520,var_8519,])
func_8530 = relay.Function([var_8519,], output)
mod['func_8530'] = func_8530
mod = relay.transform.InferType()(mod)
var_8531 = relay.var("var_8531", dtype = "bool", shape = (504,))#candidate|8531|(504,)|var|bool
output = func_8530(var_8531)
func_8532 = relay.Function([var_8531], output)
mutated_mod['func_8532'] = func_8532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6105_call = mod.get_global_var('func_6105')
func_6107_call = mutated_mod.get_global_var('func_6107')
call_8557 = relay.TupleGetItem(func_6105_call(), 0)
call_8558 = relay.TupleGetItem(func_6107_call(), 0)
func_6140_call = mod.get_global_var('func_6140')
func_6142_call = mutated_mod.get_global_var('func_6142')
call_8574 = relay.TupleGetItem(func_6140_call(), 1)
call_8575 = relay.TupleGetItem(func_6142_call(), 1)
output = relay.Tuple([call_8557,call_8574,])
output2 = relay.Tuple([call_8558,call_8575,])
func_8576 = relay.Function([], output)
mod['func_8576'] = func_8576
mod = relay.transform.InferType()(mod)
output = func_8576()
func_8577 = relay.Function([], output)
mutated_mod['func_8577'] = func_8577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8119_call = mod.get_global_var('func_8119')
func_8120_call = mutated_mod.get_global_var('func_8120')
call_8614 = relay.TupleGetItem(func_8119_call(), 0)
call_8615 = relay.TupleGetItem(func_8120_call(), 0)
uop_8616 = relay.sin(call_8614.astype('float64')) # shape=(16, 11, 3)
uop_8618 = relay.sin(call_8615.astype('float64')) # shape=(16, 11, 3)
func_4973_call = mod.get_global_var('func_4973')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_8619 = relay.TupleGetItem(func_4973_call(), 2)
call_8620 = relay.TupleGetItem(func_4974_call(), 2)
func_7624_call = mod.get_global_var('func_7624')
func_7627_call = mutated_mod.get_global_var('func_7627')
var_8636 = relay.var("var_8636", dtype = "uint16", shape = (960,))#candidate|8636|(960,)|var|uint16
var_8637 = relay.var("var_8637", dtype = "int32", shape = (104,))#candidate|8637|(104,)|var|int32
call_8635 = relay.TupleGetItem(func_7624_call(relay.reshape(var_8636.astype('uint16'), [960,]), relay.reshape(var_8637.astype('int32'), [1, 104]), ), 1)
call_8638 = relay.TupleGetItem(func_7627_call(relay.reshape(var_8636.astype('uint16'), [960,]), relay.reshape(var_8637.astype('int32'), [1, 104]), ), 1)
output = relay.Tuple([uop_8616,call_8619,call_8635,var_8636,var_8637,])
output2 = relay.Tuple([uop_8618,call_8620,call_8638,var_8636,var_8637,])
func_8646 = relay.Function([var_8636,var_8637,], output)
mod['func_8646'] = func_8646
mod = relay.transform.InferType()(mod)
mutated_mod['func_8646'] = func_8646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8646_call = mutated_mod.get_global_var('func_8646')
var_8648 = relay.var("var_8648", dtype = "uint16", shape = (960,))#candidate|8648|(960,)|var|uint16
var_8649 = relay.var("var_8649", dtype = "int32", shape = (104,))#candidate|8649|(104,)|var|int32
call_8647 = func_8646_call(var_8648,var_8649,)
output = call_8647
func_8650 = relay.Function([var_8648,var_8649,], output)
mutated_mod['func_8650'] = func_8650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4973_call = mod.get_global_var('func_4973')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_8742 = relay.TupleGetItem(func_4973_call(), 0)
call_8743 = relay.TupleGetItem(func_4974_call(), 0)
func_5252_call = mod.get_global_var('func_5252')
func_5256_call = mutated_mod.get_global_var('func_5256')
const_8760 = relay.const([[-5,-10],[-8,-8],[-3,-2],[-6,-4],[-4,7],[-6,5],[-2,-8],[-2,-8],[-9,-1],[-9,3],[9,-1],[-4,7],[9,-1],[-9,-2],[-9,-7],[-3,7],[3,-8],[6,-4],[-9,-1],[9,5],[2,-5],[-10,-5],[7,9],[4,1],[3,-10],[5,3],[9,8],[-2,6],[-9,-6],[-7,-10],[-10,4],[7,3],[-9,9],[9,7],[-6,3],[-10,-1]], dtype = "int8")#candidate|8760|(36, 2)|const|int8
const_8761 = relay.const([False,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True], dtype = "bool")#candidate|8761|(320,)|const|bool
call_8759 = relay.TupleGetItem(func_5252_call(relay.reshape(const_8760.astype('int8'), [72, 1]), relay.reshape(const_8761.astype('bool'), [320,]), ), 1)
call_8762 = relay.TupleGetItem(func_5256_call(relay.reshape(const_8760.astype('int8'), [72, 1]), relay.reshape(const_8761.astype('bool'), [320,]), ), 1)
func_5805_call = mod.get_global_var('func_5805')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_8763 = func_5805_call()
call_8764 = func_5805_call()
func_2868_call = mod.get_global_var('func_2868')
func_2876_call = mutated_mod.get_global_var('func_2876')
const_8767 = relay.const([8.784920,3.902740,8.236759,2.652352,6.836364,-3.550207,4.493355,1.393829,4.829573,-3.365656,-9.598983,-6.279404,-5.437721,9.835439,1.564359,-4.609245,8.055163,-3.245387,5.599357,4.916241,6.898717,-7.751185,-6.682246,6.919963,2.066176,0.780335,8.059070,-6.113992,-0.625318,5.213215,-5.549418,-6.753411,2.634378,5.279842,9.554580,-5.050462,-8.192848,7.513072,-5.895541,-3.641803,-2.859933,4.644940,-8.151586,8.301263,-2.025631,-2.189253,-0.214808,-2.706988,-7.450626,9.799249,-4.721740,-2.481886,-1.477269,-3.135169,-5.788062,-4.717067,-1.567992,-9.246915,-1.579029,6.446607,1.459680,7.606636,3.737643,3.726635,2.006371,1.767238,-8.915407,1.436610,4.524160,-1.702140,-1.318463,-7.480211,-1.753244,0.404335,-0.245840,0.955011,2.436625,5.890141,-5.427319,-2.265971,2.326331,-0.917974,0.643184,0.898602,8.619455,8.204891,-7.635851,-8.192091,-8.750243,7.962221,3.988259,-2.772365,-4.758478,2.551090,5.487709,-7.466753,7.550254,-9.105825,-4.770781,9.472117,6.380968,-4.834034,-7.188266,7.437595,-1.841814,1.974036,7.841456,-9.644385,1.482428,1.394789,7.985472,-5.251603,-5.100756,-1.033496,-3.997761,-0.825701,-3.822426,3.282664,0.513747,3.023364,-2.890134,4.392476,0.700161,0.852137,1.410221,7.180061,-7.034248,1.468880,-8.976745,-2.281747,8.371909,8.849897,3.834572,-1.312351,8.916781,-8.461028,-5.967191,9.146953,-5.172570,7.634140,6.435569,-9.906579,-0.746145,-3.537016,6.376452,1.035279,5.215608,-1.945008,8.311286,-3.977500,1.282988,-6.850713,-0.105310,7.465453,-2.188011,6.190559,0.827000,-1.128774,9.952862,-1.229472,7.787800,-6.246598,-9.986365,9.399556,1.634611,-8.165452,-3.219348,4.282917,6.775194,4.229284,9.938927,0.108053,7.867351,-8.113323,7.822189,7.062539,-0.896920,6.079574,8.218003,-9.230313,-2.109505,9.067654,-0.558216,-0.036210,3.781051,7.879591,-5.429403,6.123788,-9.677285,-1.449369,-7.347087,-8.576465,4.521764,-7.276500,-9.592231,-4.088189,6.747115,-3.296737,-5.492720,5.198569,-4.616965,-3.922056,-5.563725,-5.423359,7.423060,-7.206346,8.896358,-0.774302,-2.360367,1.160334,1.573293,-2.964721,9.360816,-3.458482,5.887456,9.752180,9.778352,-5.429851,5.933128,-2.755803,6.896547,-5.136199,-4.150982,-2.997470,8.340241,0.214544,6.024135,-0.169464,-8.384732,-9.058883,-7.481724,-8.633662,2.011880,8.160020,7.497260,5.624912,-7.186168,9.296398,-7.297315,-8.686414,9.686342,-4.410124,6.247295,1.866738,-8.504700,3.173765,3.920000,-9.450075,-7.349481,8.150157,6.153756,-2.597012,0.559277,-8.665802,9.438702,2.300131,5.455481,6.751124,-5.123559,-5.178335,-1.364257,-0.477272,5.068058,-6.432500,-8.564957,-8.419028,-2.144277,-4.946196,-4.892713,2.105288,3.286504,0.051970,3.186714,7.488069,0.680674,-9.175372,0.563242,-1.590366,1.944402,-3.451368,-0.414487,5.711618,9.435506,-8.509382,1.275462,-4.888039,1.772126,3.290905,-7.215252,-4.850752,-4.804108,-9.762544,2.994137,8.474132,4.001149,2.652252,-5.232084,0.702241,-6.612393,9.016319,7.475223,-8.073454,1.178017,7.247624,-5.518997,-5.281896,-9.850087,-9.691417,5.048070,-3.790719,7.422290,-4.079901,1.051971,7.361129,-5.105792,9.137429,-5.189935,-6.307493,2.489967,-4.376860,2.643426,-7.867558,8.855583,-8.071284,-0.397586,1.804403,-3.125985,8.393361,2.915186,2.329339,-5.062385,-0.727416,-2.639571,-9.291898,-7.600107,1.008751,5.632653,-3.946261,-3.164487,0.031173,2.202969,-4.967594,3.809556,2.879847,-9.615861,-2.862951,1.075560,-0.440646,0.152422,3.646951,9.035907,6.490270,1.469514,1.007491,-4.033303,-8.440684,4.827653,1.483378,6.487549,-8.851842,2.778308,-8.136370,2.455208,-4.146010,0.875322,-1.855273,-6.777121,-2.510180,2.173150,2.594421,-9.275789,-5.147835,-8.447050,-1.570579,-3.715419,-0.821004,7.252946,2.202385,3.350761,4.609665,8.166247,9.563989,-9.955007,5.679015,1.160042,0.026293,1.256287,0.905794,-7.298032,9.271976,-0.166418,-1.323594,-5.713339,-4.559954,-4.674445,-4.445534,-4.419809,8.853437,8.422542,-8.416333,-9.684228,2.395537,3.789996,1.808109,-4.041961,4.029139,-7.522776,5.546449,2.731522,-5.571475,9.930003,2.625874,-9.804289,-7.559077,-6.346649,-5.546523,9.883893,-3.292558,8.405996,-9.989609,-8.387888,-6.627585,2.598099,0.946839,-9.472202,-6.648704,-8.103281,9.526182,9.058153,3.624486,-6.510487,-3.795696,5.957946,4.395635,-0.722300,-4.987340,6.528919,-4.633689,-4.834218,5.025252,5.427266,3.594712,1.211062,8.130295,-4.561881,-4.114946,-8.899883,-1.460067,4.532661,-3.065245,9.799922,-8.488888,-1.953951,-0.562777,-6.469992,0.491399,4.948970,-5.991576,8.528176,4.084050,-1.427804,-3.417584,-6.513290,-0.087303,-9.077944,-8.085608,4.666841,-2.031081,1.641583,5.679489,-4.721812,5.174413,2.356827,1.277795,5.437313,-6.284411,-8.379139,8.970185,-9.042865,2.966516,-9.717790,-3.908756,-7.959782,8.440414,7.420567,-0.093972,7.620142,-7.007356,4.378898,4.593367,-1.917866,-8.159832,9.258017,-4.516873,2.003018,-0.210757,1.194367,8.126069,-0.880880,7.309325,8.859015,2.793381,8.076706,6.759691,4.851115,-9.554942,4.095954,6.246712,-4.596612,-7.180213,8.764491,8.776378,4.467764,-7.696447,-0.887089,-5.608039,7.437206,-7.375563,2.925757,7.705381,7.429706,-5.322599,-2.551559,9.016850,7.960995,-5.256093,-3.368495,3.047424,3.867952,8.519005,2.529141,2.475431,-2.135189,-9.793708,-5.399130,-3.134785,4.160847,-0.904697,-6.027568,-8.411886,8.710596,-3.645030,-6.337698,4.318292,-2.423752,0.880342,-3.201108,-7.607106,4.919199,-2.130571,4.706557,9.284288,-6.417784,-9.314475,6.444349,-4.077306,-4.683444,-4.475163,0.361688,-3.813397,4.396148,2.586119,-2.812271,-1.383679,-7.379449,7.857235,8.007537,-8.782403,-3.760525,8.840444,4.571906,-8.480433,-7.159906,0.151743,4.061674,8.831252,1.603651,-6.106154,8.396694,7.543582,-6.895372,6.625063,2.987491,6.728618,-5.798314], dtype = "float64")#candidate|8767|(585,)|const|float64
const_8768 = relay.const(8, dtype = "int8")#candidate|8768|()|const|int8
var_8769 = relay.var("var_8769", dtype = "int8", shape = (36, 22))#candidate|8769|(36, 22)|var|int8
var_8770 = relay.var("var_8770", dtype = "float64", shape = (7, 132))#candidate|8770|(7, 132)|var|float64
call_8766 = relay.TupleGetItem(func_2868_call(relay.reshape(const_8767.astype('float64'), [13, 5, 9]), relay.reshape(const_8768.astype('int8'), []), relay.reshape(const_8760.astype('int8'), [72,]), relay.reshape(var_8769.astype('int8'), [2, 396]), relay.reshape(const_8761.astype('bool'), [320,]), relay.reshape(var_8770.astype('float64'), [924,]), ), 0)
call_8771 = relay.TupleGetItem(func_2876_call(relay.reshape(const_8767.astype('float64'), [13, 5, 9]), relay.reshape(const_8768.astype('int8'), []), relay.reshape(const_8760.astype('int8'), [72,]), relay.reshape(var_8769.astype('int8'), [2, 396]), relay.reshape(const_8761.astype('bool'), [320,]), relay.reshape(var_8770.astype('float64'), [924,]), ), 0)
func_1135_call = mod.get_global_var('func_1135')
func_1139_call = mutated_mod.get_global_var('func_1139')
var_8773 = relay.var("var_8773", dtype = "float32", shape = (1, 832))#candidate|8773|(1, 832)|var|float32
call_8772 = relay.TupleGetItem(func_1135_call(relay.reshape(var_8770.astype('float64'), [924,]), relay.reshape(var_8773.astype('float32'), [832,]), ), 6)
call_8774 = relay.TupleGetItem(func_1139_call(relay.reshape(var_8770.astype('float64'), [924,]), relay.reshape(var_8773.astype('float32'), [832,]), ), 6)
output = relay.Tuple([call_8742,call_8759,const_8760,const_8761,call_8763,call_8766,const_8767,const_8768,var_8769,var_8770,call_8772,var_8773,])
output2 = relay.Tuple([call_8743,call_8762,const_8760,const_8761,call_8764,call_8771,const_8767,const_8768,var_8769,var_8770,call_8774,var_8773,])
func_8781 = relay.Function([var_8769,var_8770,var_8773,], output)
mod['func_8781'] = func_8781
mod = relay.transform.InferType()(mod)
mutated_mod['func_8781'] = func_8781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8781_call = mutated_mod.get_global_var('func_8781')
var_8783 = relay.var("var_8783", dtype = "int8", shape = (36, 22))#candidate|8783|(36, 22)|var|int8
var_8784 = relay.var("var_8784", dtype = "float64", shape = (7, 132))#candidate|8784|(7, 132)|var|float64
var_8785 = relay.var("var_8785", dtype = "float32", shape = (1, 832))#candidate|8785|(1, 832)|var|float32
call_8782 = func_8781_call(var_8783,var_8784,var_8785,)
output = call_8782
func_8786 = relay.Function([var_8783,var_8784,var_8785,], output)
mutated_mod['func_8786'] = func_8786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6506_call = mod.get_global_var('func_6506')
func_6507_call = mutated_mod.get_global_var('func_6507')
call_8796 = func_6506_call()
call_8797 = func_6506_call()
output = call_8796
output2 = call_8797
func_8798 = relay.Function([], output)
mod['func_8798'] = func_8798
mod = relay.transform.InferType()(mod)
output = func_8798()
func_8799 = relay.Function([], output)
mutated_mod['func_8799'] = func_8799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6436_call = mod.get_global_var('func_6436')
func_6437_call = mutated_mod.get_global_var('func_6437')
call_8815 = relay.TupleGetItem(func_6436_call(), 1)
call_8816 = relay.TupleGetItem(func_6437_call(), 1)
func_6917_call = mod.get_global_var('func_6917')
func_6923_call = mutated_mod.get_global_var('func_6923')
const_8844 = relay.const([-7,7,9,-4,-2,-7,8,-10,-8,-8,-2,6,-8,8,8,-1,8,-2,-9,-1,1,7,-1,-8,3,1,-10,7,-7,-3,10,7,3,4,-10,-5,3,8,9,5,3,1,3,3,-3,-5,10,3,-5,-5,2,-4,2,-8,-10,-6,9,8,5,1,8,3,10,-1,-4,10,6,2,-9,-2,-3,2,4,-3,-1,-7,2,9,9,-9,-6,-1,-6,-4,-3,-2,3,-8,5,-5,8,7,3,4,-6,7,3,-6,-10,1,-5,2,10,4,-3,-4,-3,1,-7,-2,-9,2,-4,10,-9,9,-6,1,-1,1,-5,3,6,-8,2,-3,-6,2,5,5,-2,7,5,4,-2,8,-10,9,-8,8,-4,8,7,-3,-1,-8,3,1,-3,2,1,-5,2,6,1,-7,-4,9,6,-6,8,-9,9,-9,-8,10,-2,10,-10,-3,8,-8,-6,6,6,-8,-5,-7,9,-7,-10,6,-1,-5,3,-2,7,-5,-4,2,2,8,9,2,-3,6,-5,5,-9,6,6,4,7,-6,-10,-3,-10,-10,6,6,-10,-5,7,10,8,-9,-4,-8,2,-4,-4,-7,-9,3,8,7,4,-2,9,8,-9,-4,1,6,7,8,-8,-8,-1,-2,-2,6,2,8,9,1,-4,3,-8,-1,-8,8,5,10,-7,-6,3,5,-1,7,1,-9,4,2,-8,8,-3,1,2,-3,-6,-6,-2,-4,-3,2,10,9,-3,5,4,-9,-10,3,4,9,-7,-8,-5,4,5,2,-9,-9,-9,-6,-8,10,-5,-7,10,-8,-10,-8,9,3,-7,-7,-5,9,-3,-7,-9,-8,-9,-5,3,-6,10,-10,-7,10,7,10,-8,-5,5,-1,-8,-3,3,8,1,-1,-9,7,3,9,9,-3,10,5,10,2,-4,-9,-2,7,10,-2,8,-4,-1,10,-2,-6,-10,8,8,2,-4,10,-7,-9,4,7,-3,2,3,3,-4,-10,9,-8,9,-8,2,-8,7,-7,9,3,-4,7,7,-5,-8,-7,6,-5,-7,7,-10,-8,4,-10,-7,8,-5,1,6,3,4,2,-7,-2,-9,2,7,8,3,-6,-10,4,-9,7,2,1,2,-3,-2,3,-5,3,-7,3,1,-2,6,-6,2,2,3,-9,9,-4,-8,-4,-4,-9,2,-10,-3,-3,10,-6,5,6,3,3,-1,5,-5,-4,-6,9,5,2,-4,9,-6,-6,-2,9,2,-7,2,-2,-9,-8,-1,6,8,6,-2,-8,9,-9,8,6,3,-3,-3,2,1,-10,8,-10,1,10,10,-4,-4,2,3,4,-9,-9,-1,-8,-10,9,-4,6,-5,-1,-6,6,7,4,5,-4,-6,-1,-3,-1,7,2,-9,1,7,-10,6,-3,-5,-3,-6,7,1,10,6,10,1,7,2,-3,9,-2,-1,-9,5,-7,10,-4,1,-6,5,-2,-8,8,8,-1,-7,5,-9,2,-8,-6,2,-1,1,-4,3,-5,-7,-3,4,-6,-8,-9,-5,10,10,2,-3,9,-8,2,-8,-6,-8,2,4,5,6,8,4,5,-3,10,-7,2,1,-1,-1,-6,6,4,-5,-2,2,-4,-8,-10,5,-7,-8,-8,-6,-10,5,-9,5,1,-2,-2,-2,1,-7,-9,1,-3,-8,10,1,1,5,7,3,1,-2,10,-1,-2,-3,9,10,5,-6,-1,4,-2,-4,-10,-8,4,3,-2,6,3,6,1,7,-1,10,9,-6,6,10,6,-6,6,4,-4,-3,-8,-10,-4,-5,-7,8,3,-6,1,3,-6,8,8,1,10,8,4,7,4,-2,8,-6,-6,-8,-2,4,1,9,4,1,5,-10,-9,6,8,4,-10,9,-7,-4,-9,5,2,1,-6,-8,4,-2,4,8,-8,1,3,5,-8,-8,-7,9,9,-3,-4,7,-10,3,-7,-9,-1,2,-2,-5,5,-9,8,-10,-10,3,-6,4,-1,2,-5,-2,1,4,2,4,-5,-10,5,-10,-4,10,3,-6,8,2,-8,4,2,-3,-9,4,3,9,-3,-2,-3,-9,-4,-1,-4,10,1,3,1,-8,4,4,-5,3,1,-6,-8,1,9,-8,8,7,9,-1,-6,1,-10,-5,-8,-2,6,5,1,9,1,7,3,-7,3,-7,8,9,4,2,4,3,1,5,-8,-4,-10,-6,-4,-9,2,8,-3,9,-10,-9,4,6,4,9,-6,8,-5,-10,9,8,7,-3,-2,10,-3,6,-3,-5,4,6,9,5,-8,3,-8,1,8,8,6,9,6,-9,8,5,-7,1,5,-10,-2,-2,-7,-6,7,-4,-1,-2,-10,6,-4,1,2,-9,-9,1,5,4,6,-6,5,6,3,-2,7,-1,9,-4,4,-7,2,6,1,9,9,10,3,7,2,-7,7,1,9,-6,-7,-6,3,8,2,-1,3,3,9,-4,-1,-1,-10,-8,-6,-4,9,5,1,-6,-3,4,-10,3,-8,10,1,-2,4,10,6,4,-3,7,-2,-9,-10,10,1,-9,4,2,1,-4,4,4,9,5,-6,-8,-5,-3,1,5,9,-10,-5,8,-6,10,8,2,-1,1,-7,-6,-7,7,2,-9,8,-6,2,9,-6,-10,5,6,-6,3,-6,-8,-8,3,7,-3,-3,-9,2,-5,-9,7,-6,9,-9,-7,-1,-10,-2,-9,6,5,10,6,-2,-4,-5,-6,-3,-5,9,-7,-9,-9,3,9,9,-9,-7,-3,-6,-1,-10,-4,-4,-5,-10,-3,-3,-7,10,6,-9,-8,-3,-7,-10,10,7,-4,2,4,-6,-9,1,5,-6,-9,-9,-3,-2,1,-1,3,-6,9,-6,8,-1,-1,6,4,-1,7,1,-4,10,-4,-8,-9,2,10,2,-2,-6,-7,-10,-4,-3,-5,-3,-7,4,-4,-8,7,-10,2,7,-6,6,5,2,1,2,-2,-4,-8,2,-1,6,4,6,-9,-9,-4,-8,-3,10,-8,9,-9,-8,-3,2,3,-3,3,1,10,7,-5,5,-7,-3,1,-4,-6,9,3,3,-7,-10,-4,4,-1,10,-8,-5,1,-10,1,-1,6,-8,1,-4,-10,1,-5,9,-8,3,3,-2,7,5,6,9,-7,-9,-10,9,7,-3,-6,2,1,-1,5,-9,5,-2,-1,3,10,8,-6,10,-8,-8,5,-10,7,-1,7,7,-3,5,2,3,9,-1,-8,-8,4,-3,-8,-7,4,-9,9,3,7,-7,-5,10,-4,8,-4,10,-6,10,6,9,7,-1,4,-2,1,7,-2,9,-1,-9,7,4,-2,7,2,-8,-4,7,2,-6,-1,-10,-3,10,-7,-9,-8,-8,-7,-10,1,-8,-8,10,6,-4,10,-9,-2,6,-6,8,10,-8,-10,-6,8,-7,-8,-6,-4,1,-6,-8,-7,-2,1,-1,-5,-8,9,8,-7,-4,4,9,-4,-4,1,9,-6,5,8,-8,4,7,-9,3,-2,1,8,-3,-4,-3,9,-5,10,2,-5,-10,-8,4,-6,5,5,5,8,8,-7,7,10,2,-1,9,-7,-6,-7,-4,9,-2,-5,-8,5,5,6,9,-5,7,5,1,-4,-9,-7,-4,10,1,-3,10,-6,9,8,-9,8,8,-1,-7,6,-5,-7,-1,5,4,-4,5,9,3,3,-10,-9,6,7,-6,7,8,-10,-5,-5,-4,-3,-9,4,-10,6,-10,8,7,-9,-8,4,-2,-9,3,4,-10,-6,-1,-3,-7,-1,-3,1,4,-3,-6,-2,-3,-5,-2,-4,8,-3,8,10,-4,2,-9,9,3,-10,1,9,-1,-2,1,-5,-6,8,4,-9,8,-6,-4,-2,7,8,-2,-3,9,-5,-1,-1,-1,-1,6,3,-1,1,-4,-4,5,-10,-9,1,8,10,10,-4,-10,-8,-7,10,-2,5,6,-8,3,9,10,-10,7,6,1,8,9,8,7,-5,-1,-8,2,-9,3,-7,-7,1,-6,9,1,9,-3,5,8,-2,10,7,5,9,1,3,2,2,-3,7,2,3,6,-7,7,3,-9,-1,6,2,-3,-7,-1,5,4,9,8,9,-9,8,8,-3,-4,1,2,9,-10,-2,-7,-8,-1,-5,10,-4,-2,5,6,9,10,-9,-3,10,5,8,-3,3,5,2,1,4,-8,7,7,-3,-4,-1,-3,4,-7,9,1,3,-9,-1,2,-8,-6,-4,9,-10,-2,-3,6,-2,-10,-4,-5,6,1,-6,7,-3,1,6,7,-4,-8,3,-4,8,7,4,-8,-8,10,-4,-10,-9,-8,-10,10,-3,10,-6,-8,8,-8,-7,-5,-9,-9,-3,2,9,-7,-5,2,9,2,8,-2,7,-1,6,9,10,-8,8,-4,-2,-5,-2,-2,1,-6,4,-7,8,7,-3,-9,6,-5,1,-9,-2,7,1,5,-3,-1,1,-8,-6,-4,1,2,-5,2,-8,-7,7,-4,-3,-2,-4,-1,-3,-7,-8,-7,-6,-6,6,7,3,4,-7,-8,-1,-5,5,1,9,-4,9,-5,10,8,-1,2,8,-4,4,5,4,10,8,-5,9,3,3,-5,-1,-3,-7,-8,8,-1,-6,10,6,9,-3,-10,-8,-2,-1,5,1,6,-10,-4,6,3,-2,4,-2,2,9,-8,7,5,-9,1,8,-10,4,9,1,-4,4,3,-10,3,-8,-6,3,6,4,3,-7,-2,-7,4,4,3,7,8,-10,7,-2,-5,-4,8,-8,-2,4,-9,7,-8,-1,-1,-6,6,-9,-4,-7,7,-1,1,-6,6,9,10,7,8,-1,-6,7,-3,-4,9,-7,5,1,-7,1,8,9,5,-8,-5,4,-5,3,9,-4,-1,7,7,1,7,-7,1,3,-3,-1,-9,8,-7,-2,10,-7,7,6,1,7,-1,-3,2,10,-6,-2,7,-8,2,-3,8,-3,3,10,-7,2,-5,10,-10,1,-3,-10,6,7,10,10,1,6,3,7,-4,7,5,-5,10,-2,10,5,2,3,1,1,-9,5,-2,3,3,-5,9,-5,7,-4,-9,-4,1,2,-5,6,-9,-7,5,-7,9,-9,4,-9,-1,-10,2,-9,5,8,4,3,7,4,-9,-2,-5,-9,7,1,-1,-8,9,7,-9,-4,-9,8,-9,9,5,8,-4,-2,7,1,-6,-10,-6,-9,-1,10,1,5,-2,10,8,9,9,5,5,-1,-4,-8,-9,9,-3,2,-7,-6,3,-6,5,1,9,9,3,-6,2,-9,-4,-5,-7,9,-3,-5,-2,-7,8,-3,5,10,-2,5,2,-9,2,1,10,-3,8,9,-9,-9,4,2,3,-7,10,-3,4,9,5,-5,-4,7,-8,-2,-3,-4,2,-8,7,2,-7,-2,-6,-9,4,3,4,-10,8,-7,-10,10,6,6,5,-3,-2,5,7,-8,-10,9,-3,-4,10,2,4,-3,-1,-6,-9,-1,7,9,-4,4,-10,-7,1,-1,-5,-10,-4,9,-4,-6,-5,3,6,5,9,-3,-4,1,2,-8,-5,-5,-3,-8,1,-7,-10,-8,4,-4,5,-3,8,6,-6,-4,-3,1,3,-1,1,1,-10,-8,4,-7,-1,-10,4,6,10,-10,1,1,1,10,-1,5,-2,8,-9,5,-7,9,-10,-1,7,5,3,5,7,-9,-6,2,9,6,-4,8,-5,-3,1,5,-7,9,-4,5,-10,10,9,6,1,-6,2,-8,-10,-1,-7,3,9,-4,-6,6,3,2,9,2,9,-7,-3,-7,8,-5,6,-8,10,8,5,10,2,-2,1,3,3,10,-4,8,-4,-6,-1,-5,-10,-4,9,-3,-7,3,10,-7,-3,6,1,1,6,-6,-4,7,4,-1,7,-3,10,2,10,-2,6,2,3,-3,-3,-6,-7,-2,-6,3,6,8,2,5,-1,6,-6,-3,4,-8,2,-3,-10,-10,-6,10,9,-8,-9,-2,2,6,-8,9,-6,8,-4,8,6,8,3,5,-7,-2,8,7,-3,9,3,-5,4,8,6,2,6,-5,-10,-2,5,-3,9,4,2,-5,-1,3,-6,5,-7,-4,-7,-3,-9,-3,-8,-7,4,-2,7,3,-10,5,-9,7,-5,10,-10,-8,7,-3,-8,3,6,-10,3,-10,2,-6,-6,-9,-4,7,-2,-2,6,4,-10,6,2,-8,1,-5,-5,-6,-6,4,-3,-3,-5,6,2,7,-8,-7,-1,3,-3,7,-3,-9,-5,8,-5,7,-8,5,-4,4,-7,2,6,-2,-8,-8,-9,10,3,3,1,-2,-4,8,9,-10,3,-6,9,-1,-6,-8,10,-10,5,1,-5,4,-9,-7,-6,-5,-1,1,9,-7,-3,-10,2,-3,7,-3,-8,2,-1,6,-8,-8,1,8,-3,5,-1,-6,8,8,-7,8,7,-5,-10,8,3,8,-9,-4,-5,-6,-5,-7,-4,-8,7,-8,-7,7,-3,7,2,10,4,-4,6,-5,-4,5,1,-3,-9,-5,2,-4,-6,3,-6,1,-8,9,7,-4,-8,1,2,10,-4,6,6,3,10,-1,-6,6,-9,7,-1,-7,9,10,3,-3,-4,3,8,3,-9,-4,-9,2,-7,2,-1,1,-8,-1,3,-7,4,7,5,10,6,-2,4,1,-2,-3,3,-3,5,1,2,4,-10,-8,3,-3,-1,2,-1,-1,5,6,-6,-8,-6,10,8,4,5,5,9,4,2,-9,8,-6,4,2,4,2,2,-10,5,8,-5,7,10,-7,-9,5,-8,4,-4,1,-8,-10,6,1,-3,1,-2,3,10,-4,6,-8,-2,-6,9,-6,2,-9,7,10,-1,-9,9,-6,-2,10,2,2,-10,-10,-8,10,-4,10,1,1,-1,6,2,1,-4,4,6,-8,6,7,-6,-6,6,-2,-6,-8,3,8,-5,1,-7,3,-3,-2,-3,-7,-6,9,-8,6,4,-2,-7,4,1,-3,-2,-6,9,8,-8,1,7,-3,-1,-9,-4,-3,5,-5,5,-7,-4,4,10,7,8,-2,-10,-7,6,5,1,3,5,4,-7,9,-3,-9,6,5,-4,6,-1,-4,-3,1,8,1,3,5,6,5,8,6,-8,7,-5,-7,-8,-7,1,-4,-1,4,10,-8,-5,8,5,-7,-5,6,-7,-8,3,7,-3,-2,-8,2,8,-6,1,4,8,-10,6,-2,-10,-2,-8,-8,2,9,8,9,1,7,-7,-9,-4,7,6,5,-2,8,5,-4,8,8,5,2,-1,8,-1,5,8,7,3,-10,8,8,-4,2,-6,-9,-8,-6,9,-8,-3,-8,-7,4,7,-7,-2,10,-7,-9,5,-3,9,1,-3,2,2,-6,-7,8,-4,8,-2,-3,1,10,-10,-8,-2,10,-7,-1,2,-9,8,2,-4,8,-1,3,-1,-9,-9,3,-5,5,5,5,3,-8,-3,3,-3,1,9,5,10,2,-8,-1,8,-8,-3,-2,-7,7,1,5,-8,7,4,-7,3,-6,-4,5,-2,-7,-6,-1,-1,2,6,-7,6,2,-5,8,8,-8,-10,8,-8,9,6,-6,8,-3,5,-3,-4,-3,-3,7,-3,-6,10,7,1,-1,-7,5,4,4,-8,10,-1,2,-2,-5,-6,9,7,5,5,-4,-2,10,9,-5,10,-10,6,4,3,-4,2,-6,-1,-6,8,1,-1,5,-6,6,4,8,7,8,3,10,5,-6,-6,5,2,-3,-6,10,1,-7,-1,-6,8,10,-8,-9,-6,-1,7,6,3,-10,-10,-10,-8,7,-3,2,7,-3,4,-7,-8,3,-6,3,-2,8,-7,2,-5,-5,-2,-10,-8,-3,6,3,2,-9,8,-8,7,2,-4,9,5,-10,10,-5,4,3,10,5,-3,-10,6,-1,6,7,8,-3,-10,10,-4,10,-5,-9,-8,-6,-9,-4,-8,8,-6,6,-8,7,-4,8,1,8,-1,-2,-3,2,7,-5,-8,-9,-7,-10,-3,-5,-5,-5,-10,-4,-1,-10,7,4,-5,-8,-5,9,3,-7,8,5,4,4,2,5,-6,-8,8,-6,-5,7,-3,-2,-8,7,10,1,-2,9,5,-9,-10,4,1,10,6,3,-6,8,-3,-1,-6,8,9,2,-1,5,-8,-9,8,-2,-7,-4,2,-6,-8,2,9,-2,7,-4,-4,10,-9,10,8,-4,1,-9,-1,-9,-4,-2,1,3,7,8,8,5,9,-5,-9,4,-8,-4,10,7,-6,-6,1,7,-9,-9,-5,2,-10,-10,7,-1,-9,-3,8,-2,9,3,9,9,-7,3,-5,-7,-6,-3,3,10,-9,-8,3,5,-7,-5,10,-2,-4,-10,-4,3,-4,-2,2,-6,5,10,-5,1,3,8,-1,2,-9,-4,1,-10,-8,3,-4,-1,-4,-8,-7,-1,-6,4,1,-3,-2,3,6,8,8,4,-2,-3,-7,7,10,2,9,1,6,2,1,-9,7,-1,-3,-8,-9,1,-10,9,6,-7,-9,-5,-4,-3,2,-4,-3,5,9,9,2,5,8,-5,-5,-9,1,-1,3,-10,8,-4,-8,-5,10,-6,-5,6,4,8,-2,-8,-1,7,-5,-6,2,3,7,-8,3,-1,6,-10,7,-2,4,-3,10,-8,-9,-5,-6,-1,-8,2,-3,-8,8,-9,-7,-7,2,-8,10,-7,-10,-9,3,-9,-9,10,4,2,9,1,4,-9,-6,1,2,-8,-10,-9,9,2,3,-1,-2,-10,-4,-9,9,-7,4,2,3,8,-6,-4,7,2,-10,6,6,4,-9,10,-8,2,2,8,5,-1,-3,6,3,-1,-3,-6,4,-8,-1,-10,3,3,-5,5,8,-1,-2,-2,-6,-9,-1,7,5,10,-4,-6,-2,6,-1,9,6,-10,-8,-5,-9,-5,-7,8,10,7,10,-2,-4,2,-1,5,-3,-8,-1,-7,-5,-1,-9,-6,8,-2,9,-9,-4,8,-3,5,-2,-9,5,-3,2,-5,-2,-7,-8,-9,5,-10,10,-6,-3,-1,5,-7,-7,1,6,-8,10,-1,6,-5,-7,-4,5,1,3,4,-1,-6,-5,8,4,-10,-1,3,8,-10,5,3,6,-1,-4,-8,-9,-3,-3,4,7,4,-4,7,6,-8,-5,-4,-4,1,9,-5,4,-3,-1,4,10,5,-6,-7,-4,-5,5,-8,-4,7,6,4,-9,7,-3,-7,-1,-6,-7,-9,-9,9,-4,4,-8,3,-2,6,-3,3,-3,8,3,1,8,-4,-6,10,-10,2,-5,3,-2,-1,1,-1,-2,-10,-3,-8,5,-8,5,-3,-4,4,-9,-7,6,-8,-1,3,7,10,-8,-1,-2,-2,-6,-1,-9,10,-4,9,-4,-6,5,8,-5,-2,-9,-6,1,-8,-4,-9,-6,2,-5,-9,-7,6,6,-6,2,-6,10,-4,1,-1,-2,7,-9,-7,2,-7,-1,-3,-7,-2,6,2,9,8,-7,-4,-9,-7,1,-5,10,-2,-5,1,-3,-10,10,-4,7,8,10,3,4,10,-5,-6,8,-7,-2,-4,-9,3,-6,8,-8,-9,10,-2,3,-10,8,3,-6,1,-9,5,1,9,3,-3,8,1,-4,-2,6,7,-10,2,-3,5,9,-3,-8,-10,-4,3,-4,9,9,7,5,-9,-6,-10,5,-4,7,-9,-2,5,-1,-7,5,5,7,-1,-7,7,3,-6,-5,5,10,5,2,-7,10,-7,9,-3,3,-9,4,6,5,4,-2,2,-2,1,8,-6,-3,-5,3,9,10,6,5,-1,-2,10,5,-6,-8,-10,7,7,9,2,-10,7,10,5,-5,-6,1,-3,-8,3,5,2,-1,2,1,-1,-3,-4,-4,-8,5,-6,-2,3,7,7,3,-4,10,-4,7,3,-6,5,-6,-6,9,-7,2,-10,-10,-1,-6,-5,8,-7,-7,-5,9,-10,2,-6,-2,1,-7,-3,8,9,-6,10,6,-8,-2,-5,-2,-6,2,7,-8,-8,-1,-3,-4,3,-7,-5,-4,7,6,7,-6,6,8,2,4,-1,2,2,-6,-7,1,7,4,1,5,-2,2,9,-1,-6,-10,10,2,-9,8,-5,-7,-4,8,5,-5,4,-4,9,-1,-2,5,4,-3,-8,-8,-10,5,8,-1,-7,-9,-8,-4,-10,-6,-8,2,8,5,-6,1,8,2,-1,10,-1,-9,-1,6,9,-6,2,-1,3,8,-6,7,-7,9,-2,-6,-7,-10,1,2,9,-7,5,-1,3,-2,-10,-3,8,7,-1,10,9,10,9,9,9,-9,5,7,-1,5,9,-10,-1,6,-1,2,8,1,-4,-5,6,1,6,-9,6,8,-1,-2,-7,-4,5,-8,8,2,10,6,1,-7,-5,4,10,7,-4,6,7,10,8,7,-7,-7,-6,5,8,6,10,-5,4,4,2,7,-9,-3,7,4,-9,-3,4,4,-1,7,8,2,5,8,-5,1,4,-3,-4,-6,-8,9,8,5,-2,1,-4,2,6,-1,6,6,-5,-4,-8,3,-1,7,6,9,4,-9,-2,10,-2,-10,2,-10,-7,-8,-7,8,-5,-7,6,-10,7,-9,-10,-8,1,-1,-4,-1,-7,5,-2,-2,-9,-2,7,5,9,7,-4,-2,-3,-9,-3,-7,9,-4,6,-2,5,1,-5,-9,2,-6,1,3,-8,-10,-3,3,10,7,-5,4,-2,-3,-3,1,-10,-4,-4,4,9,5,10,4,-7,-9,-9,-2,8,-7,-10,6,5,1,-7,1,9,-6,6,-1,10,-5,1,-9,5,-9,4,6,-5,9,2,-8,8,9,5,-6,10,-5,9,1,1,10,5,-7,5,-2,7,-9,3,8,-8,6,-6,-10,-6,10,10,3,7,4,5,8,-6,-7,-5,-1,-7,-2,8,9,-2,1,10,7,-1,7,9,-8,-2,-5,7,-1,-5,-9,-6,6,7,10,-9,-3,8,-8,5,1,8,6,6,-2,-2,-1,-7,-6,4,10,-3,-6,2,7,8,7,-7,-3,-2,-1,4,-1,-1,-5,-3,10,9,8,-10,1,6,-5,-2,-6,-3,-7,1,8,-6,-8,-10,-8,4,10,-2,1,-8,-3,-5,5,7,5,-3,-1,7,-10,8,4,4,6,-5,-6,-3,5,9,6,-5,8,-5,5,-10,9,-2,2,4,-2,6,2,-10,-9,-9,6,7,10,-5,-4,-1,-5,-5,-9,-8,10,10,3,-8,-8,7,-1,-10,-6,7,1,4,-10,-4,10,9,-4,-9,-10,9,-6,-4,3,-7,10,-1,-1,-5,-6,10,-1,-3,2,3,-10,10,1,4,-7,-2,-4,-5,10,8,1,9,8,8,-5,-2,3,3,-3,5,8,6,-2,9,-3,7,6,5,-9,4,3,-9,5,10,8,7,-5,-2,-5,9,9,-1,6,-6,10,9,5,10,1,-9,5,7,-10,7,9,3,-3,-10,2,-4,-10,-8,2,-7,5,-3,4,10,-8,-3,-2,6,3,-6,4,9,-4,8,-4,10,3,-2,3,4,9,-10,-4,-10,-2,1,-8,-1,7,8,-6,-1,-2,-9,6,-8,-1,-10,5,-1,6,-5,2,7,-7,1,3,-4,6,10,5,7,-6,-10,-6,-10,-2,-9,4,4,-10,3,-8,8,8,-5,6,10,2,-7,-2,-3,5,-1,-7,-8,-1,-10,-10,4,-6,3,-5,-8,-7,-5,1,5,9,4,-10,-3,-3,-1,-9,1,6,-1,-8,-5,-3,4,-6,1,5,-1,6,-8,-7,2,-6,3,-8,10,-3,-1,-3,2,5,7,9,-7,-2,-5,-5,-6,9,-10,6,-3,5,7,10,-9,5,5,4,8,-8,-6,10,-4,1,-8,-6,-6,-4,8,4,-8,-3,-2,6,6,5,-5,-4,-5,-4,4,3,-10,-4,-10,-8,-7,3,10,3,3,10,4,8,-10,4,2,-5,4,-1,-8,-7,9,-6,1,-7,-7,2,-10,3,-5,-6,-4,-7,10,7,6,3,-5,-4,-6,9,-5,-5,5,7,-4,-7,3,9,4,1,9,5,1,-8,-10,2,-2,-2,-4,-7,3,-7,9,-2,-9,3,5,1,5,4,-8,1,-3,9,2,-4,-9,1,-6,-9,6,-4,-9,-8,4,-10,-10,6,-5,-1,-8,-2,-7,-5,8,7,-7,4,5,10,7,4,4,1,5,-8,6,-2,-7,-5,2,-8,2,-6,-5,6,10,-7,2,-4,9,-9,-4,-7,9,-5,-3,-1,4,-10,6,10,8,8,7,-4,-8,1,-6,-4,-10,6,-1,-8,4,3,-4,6,4,1,-8,8,-9,-9,-9,10,9,3,-2,-4,-9,-6,3,6,-6,9,-3,1,9,-9,-2,-8,-4,2,1,2,-4,-6,2,4,-10,-3,1,-7,5,-9,-4,9,-7,3,4,2,6,5,-10,8,-4,-3,7,7,5,-1,2,-8,-9,-1,-8,3,10,4,8,2,-4,-9,6,-5,2,3,-3,7,1,7,10,7,-7,-4,2,-7,2,7,1,-10,-7,-9,1,2,-1,-5,-8,-4,3,2,-3,-4,-6,-2,3,10,-2,-10,-4,-7,3,9,-4,8,1,3,-10,9,-9,5,-1,-4,5,-6,-8,5,4,-5,-6,-6,-5,-1,7,3,8,-8,4,-2,5,9,10,5,9,-4,4,-2,-2,-4,-10,3,-6,7,-2,-10,-6,2,-2,-3,8,-5,-1,9,-9,-10,-3,-7,7,-10,4,8,8,9,7,-2,1,-5,-6,4,1,-4,-1,3,6,7,-3,1,2,-3,2,-4,-5,-5,-5,-6,-5,1,1,3,9,-9,-4,-6,-10,5,-6,-5,10,-2,1,3,8,3,10,-9,6,1,-8,-6,6,10,-2,3,-9,9,2,-7,6,10,-5,-4,6,-3,-2,5,-10,-10,-2,-6,-7,-10,-9,-7,-8,-10,7,6,-9,10,-5,1,-9,-2,3,3,-5,9,1,-8,5,2,3,-5,-6,-8,-7,-8,10,-1,-10,-5,9,-8,1,9,-7,6,-10,6,6,-9,-3,-3,-9,-9,9,1,-9,-10,6,-4,2,-4,-3,-8,-4,-3,-4,-1,-1,9,4,7,10,4,7,-10,10,-1,4,-1,4,7,-2,-10,-9,-2,8,8,9,5,-10,6,9,-2,-5,-3,-8,-9,-9,1,8,4,-5,6,-4,1,-6,-1,-4,-1,-5,10,-5,4,-9,-5,-10,-3,-9,8,-1,-7,-8,3,-3,-1,-9,2,1,9,10,-7,2,5,10,-7,6,8,-4,4,-5,6,7,7,3,-9,1,5,-9,-7,8,10,9,8,10,9,-8,-9,-2,-6,-4,9,-3,3,9,-1,-5,10,2,7,1,-7,-8,7,-5,-6,10,-8,-2,-6,-10,-7,-9,-9,5,3,2,7,6,-2,7,-2,3,-1,-9,-5,4,-4,-9,6,-8,1,8,-10,4,-7,-9,-9,7,9,-6,2,8,-5,-10,-4,9,-10,5,-3,-3,-3,7,7,3,7,4,-1,9,1,6,-10,1,4,-10,-9,7,-7,6,-10,4,8,1,10,5,9,-7,10,9,-5,3,5,-6,6,-8,10,-6,-10,8,-4,3,8,-4,-9,-4,-3,-8,9,-1,-5,3,-1,-4,3,10,6,-5,-3,-5,-2,-7,-6,-5,9,9,-7,9,-1,-6,4,-6,-1,-9,9,-5,2,8,-6,-2,1,1,6,-5,-3,-5,-8,1,1,-4,-3,3,-10,5,6,-3,3,-6,-3,7,-1,-5,3,-8,6,-5,10,6,9,-8,-3,3,-4,-6,-9,3,7,-8,-3,-5,8,-8,9,8,9,4,-6,7,-7,7,6,-5,7,3,10,9,-9,-8,-4,6,-4,-5,-9,-2,-7,-2,10,-8,-1,-7,1,2,-4,10,-7,-1,-9,3,3,6,-6,-5,-8,-3,5,3,-5,-6,3,9,2,-5,10,-1,-5,3,7,-8,-2,-5,3,3,-3,9,4,-8,-9,9,10,2,-9,7,-2,5,9,1,10,-10,-2,8,8,-4,6,-8,-5,4,-3,4,-9,1,8,8,5,-10,-8,3,-2,-6,-2,9,-3,3,-3,3,-3,9,-6,1,6,6,-8,1,6,10,-10,-5,-1,8,5,-7,-6,2,-1,3,2,1,-10,2,2,6,-3,4,9,-10,-5,-3,-1,-3,7,2,-5,9,-7,-1,-5,10,8,-1,-8,-1,6,-4,-10,1,-2,7,6,-3,9,4,3,-9,8,7,-1,-8,6,-3,-8,-4,-7,-10,-8,-8,8,-10,-5,-1,-9,8,-1,-6,-10,-1,-5,-9,-7,7,-1,-2,-6,10,-1,4,-3,1,-1,-1,8,-7,9,7,-4,-9,9,4,4,-5,-6,9,1,3,9,-3,6,-1,-8,8,3,7,-3,-7,8,3,3,3,-2,-8,-10,7,10,2,-6,-8,-10,-3,9,-9,4,-10,6,2,2,8,-10,-10,2,-6,2,9,2,-6,-4,7,9,-6,1,-2,8,8,4,8,-10,6,10,-8,7,-3,-1,8,8,-4,2,3,-5,-7,1,-4,-10,4,6,-2,8,-6,6,8,8,4,-1,9,9,6,1,-10,-10,9,-8,1,-8,4,10,9,-5,7,1,-1,-4,-2,-7,-4,-9,-7,5,3,-6,7,-9,6,-9,-2,-1,-3,-10,-7,-9,5,5,-5,9,-4,-4,-1,-7,-9,-1,1,3,-6,10,1,-8,7,8,6,1,4,-10,10,-3,-8,-1,-6,-2,9,-8,1,-9,-1,-10,6,-6,-7,-5,-6,8,-1,-2,7,-1,-5,-9,7,3,-4,-5,-4,-9,7,-10,2,-8,10,2,-3,-4,-4,-5,10,10,-2,-2,-4,-9,-7,-6,10,-4,6,-6,8,9,4,4,-1,5,7,-2,-10,-6,2,6,7,-2,5,-4,-9,-7,-5,4,5,-1,-9,-7,-4,8,4,7,5,6,7,-4,-1,9,2,-3,-5,9,-5,-2,9,4,5,5,-9,9,1,2,2,1,5,1,8,3,-8,4,-7,1,10,-10,-8,-6,-2,-4,-2,-8,-9,-8,-1,-2,-7,4,-7,-6,10,-7,-6,-9,5,-3,-8,-3,-2,-4,1,-1,4,-2,10,-7,3,1,1,8,-5,3,3,-8,9,7,-10,10,-4,5,10,6,-10,-5,-1,6,-5,7,9,3,1,-1,8,5,4,6,3,-9,3,3,10,-7,-10,-5,2,-8,9,4,-9,-1,-10,-8,1,8,-5,5,2,-2,-8,1,8,3,-9,7,5,-4,5,1,-1,-9,2,4,5,6,5,-3,9,2,-2,-9,-5,5,-4,5,5,-4,7,1,-3,5,-6,-3,-4,-4,-2,-5,-3,8,-7,3,-6,-1,4,-6,10,-7,10,1,4,4,6,6,10,-9,8,10,-8,6,-4,-8,-4,1,6,-1,9,10,-5,-7,10,-1,-7,-2,-4,6,3,-2,-3,-4,-9,1,8,-3,10,7,7,10,-1,-8,3,2,-10,-4,9,1,-2,-6,-8,5,-1,7,2,-2,2,-5,4,10,2,-6,-3,-9,-1,-5,-3,6,3,-4,3,-8,-5,-9,-10,2,4,-5,7,1,-8,-7,-9,7,-6,-8,6,-3,9,-2,10,3,4,-10,1,-6,-10,-9,6,10,8,3,4,-7,-8,3,4,2,3,8,-5,-2,9,-3,-9,7,1,-3,5,-9,10,-1,-8,-2,-8,5,-5,8,8,9,6,-5,7,3,8,5,4,2,-8,2,-5,9,4,3,1,-7,9,6,-10,8,-1,-5,6,6,4,-1,-5,-8,-10,-8,7,9,-9,-2,4,-6,10,9,-1,-1,2,-3,-4,3,5,6,1,6,4,1,-7,-4,-10,-2,-7,5,4,-6,10,4,-3,7,-8,5,2,-2,3,-3,-9,4,-7,7,9,-2,3,4,6,9,6,-8,10,-7,-5,5,-5,-10,-8,-8,10,-5,5,8,-3,-9,-3,-7,-6,5,5,5,-7,-6,4,3,5,-7,-9,4,-6,-3,10,1,4,-9,-5,1,-9,-8,-3,7,9,8,10,10,-5,-4,-2,-4,2,7,8,-9,7,2,-8,-5,4,3,-5,10,5,-8,-3,-3,-6,2,10,-4,1,-6,4,4,-5,2,9,2,7,10,4,5,-6,5,10,-3,-5,8,10,-7,-6,-5,-2,8,8,-1,1,-2,3,-3,7,4,4,-1,-3,-9,1,5,-10,-5,10,1,-2,-8,-10,-9,-6,-9,4,-7,10,5,10,5,2,-8,-5,-4,10,1,-3,-7,3,1,5,4,4,7,1,3,1,6,10,3,1,2,-4,3,4,-3,-4,4,-8,1,4,-3,-5,3,8,-7,-9,3,5,-9,9,-8,8,-10,-5,-6,-5,6,-7,-7,-4,-3,3,-6,-9,-9,-6,-3,1,1,-6,-6,5,5,2,4,-6,9,-3,10,-10,2,6,-10,-1,-4,9,10,-4,5,-4,-2,-8,-2,5,-10,-2,1,-10,-6,4,-7,-10,9,9,1,-3,-8,3,-9,-3,-3,3,-3,-5,-3,-7,-3,5,-4,-6,-10,6,-9,7,7,-8,2,-4,-6,4,-9,-10,-1,-4,1,-7,-8,-8,-4,-4,-2,-3,6,3,-8,3,-7,10,10,-2,4,2,4,9,-5,-1,7,-3,-3,7,3,-1,-5,-10,-6,5,-4,4,-7,8,-7,-10,4,9,10,-1,8,-5,2,7,10,10,1,3,-8,-1,-1,9,-2,5,6,7,5,-4,-9,-6,3,2,9,-1,8,2,-10,-7,1,8,-7,1,1,10,8,-9,-2,-6,-6,-8,8,-4,-2,5,-2,-1,10,-2,1,10,-9,-2,-10,2,5,2,9,-6,-8,4,-3,-2,9,5,7,-9,4,5,-10,-4,6,-8,6,4,4,8,3,4,4,-3,-7,-7,-6,7,-9,8,-10,10,2,-4,2,-8,1,-8,-1,6,-5,-9,5,-4,-10,2,3,-8,6,5,-3,4,5,9,-4,4,-7,-10,-2,9,-1,3,-10,10,2,-5,-8,-1,10,-9,-4,-4,7,-5,10,-8,-4,-4,-2,2,10,1,6,-9,1,-1,-10,-9,-10,-3,-10,-1,3,-3,-2,3,4,-9,7,7,7,-4,-4,5,9,6,10,8,-5,-2,-7,8,-8,-2,-7,10,6,3,1,3,6,1,-7,3,1,-10,8,-10,4,-9,2,7,5,7,7,-6,-1,1,10,-1,-7,1,-6,-10,-4,3,10,3,9,-1,-2,-1,8,1,4,-10,1,-8,2,-9,-7,-4,4,4,7,-2,-4,2,-5,-1,2,-1,5,-10,-7,5,3,3,-5,5,-2,-3,-9,10,5,-4,5,2,5,6,2,8,-1,5,7,1,6,-8,6,-1,-1,10,10,-5,3,-7,-5,2,-7,3,8,7,-8,1,5,7,-6,-4,-10,-1,2,-9,4,-2,-10,-9,1,-4,-1,4,-4,-3,-7,-7,4,1,-8,3,-4,7,4,-4,-1,3,-1,9,-8,-8,-9,-4,-2,1,7,-4,-10,5,-4,-8,-7,-9,10,8,2,6,10,4,-7,4,10,-5,6,4,-10,8,-5,-10,7,-2,-3,-2,-10,-4,3,1,5,-4,7,-4,-10,6,9,8,-3,7,-1,-8,-7,-8,-2,2,6,-2,-3,9,9,7,-3,-8,-9,2,-3,-3,-5,-1,-1,-8,-10,-7,9,6,-3,-7,-2,-3,-1,-1,7,7,4,-3,-10,9,1,4,-3,-9,-7,-3,3,-8,-2,9,2,5,3,-10,-9,4,8,-2,-2,9,7,-6,9,5,4,5,1,3,-8,-8,3,-8,1,2,-3,3,-5,2,-7,-7,2,-9,4,6,7,10,7,-9,-10,-2,-3,2,-5,4,-3,3,5,-8,-5,10,10,10,-9,-6,3,9,4,-6,8,-1,10,-6,-7,3,-1,-4,4,10,6,-2,5,-4,5,-8,-9,5,4,-6,8,-4,4,-1,3,-4,7,-5,9,1,-9,-8,9,-10,5,-5,5,3,7,-2,5,-7,-1,-7,4,-4,-9,3,-6,-1,9,3,7,-5,-9,-3,10,9,4,4,3,3,10,10,-9,6,-8,1,-6,8,-3,10,-4,-7,-4,-8,-8,-9,-9,4,-9,-7,1,2,6,3,-2,-3,3,-7,-10,7,6,-4,-4,-2,-1,2,8,-3,4,4,-10,-4,-6,3,-4,3,6,-6,8,-5,-6,4,9,-8,3,8,-8,8,3,-9,-2,8,2,8,1,-2,10,-3,-1,-3,3,-10,6,-7,9,-6,10,1,-10,-3,-4,-2,-9,5,-7,8,10,3,6,-4,5,10,-6,7,-1,10,5,10,-6,8,3,-5,4,8,-7,-6,4,8,-6,7,5,-3,-9,8,9,-1,2,5,4,-5,-8,3,-9,-4,-6,-4,-10,3,9,-7,7,-1,3,-4,-9,-8,-2,-1,-10,7,5,6,8,5,1,8,-9,7,-2,9,-10,2,-7,-6,-5,-4,-6,-4,-2,-4,10,-2,-8,8,-10,5,3,-3,-8,9,3,4,6,4,6,2,7,-4,5,-6,1,6,-7,-6,9,10,1,-1,-1,-4,2,-4,1,5,2,-10,3,6,-4,-6,-10,-5,10,5,-9,-10,-6,-10,-4,3,-6,-8,-9,-8,-7,-6,-3,-7,4,-6,-2,4,3,-6,-8,-3,-4,-3,5,5,-8,-8,-1,3,6,10,6,-7,9,7,2,4,-1,8,8,10,6,6,5,-3,-1,-1,9,7,1,5,-4,-1,6,2,5,-10,2,-10,-7,9,8,-4,-8,-4,5,-6,8,7,-9,10,3,-6,-5,-3,9,-10,-10,3,7,10,-7,-4,-4,-1,-10,-8,8,-9,10,7,1,-6,4,-10,-7,5,-7,-8,-10,5,-7,-2,-6,-2,-10,-8,8,4,5,5,6,-3,10,5,10,9,-2,-6,3,-7,-7,-6,8,9,5,5,-7,-4,2,7,9,1,1,10,-7,7,-9,-1,2,-4,5,8,-10,8,-2,-5,-3,2,6,-7,6,-9,6,6,1,7,-9,-7,-9,-2,10,-4,4,8,-8,4,-7,-1,-2,-3,6,8,-8,4,-10,10,4,6,2,1,-8,-5,10,10,-4,-7,-4,6,2,9,8,3,-7,-1,2,10,9,-5,-1,10,-9,-6,2,2,3,7,3,5,-10,9,-10,-1,4,5,2,-3,-2,1,2,-9,7,8,5,-1,10,6,1,-7,5,2,-7,6,5,-5,-5,4,10,3,5,-10,-4,-5,4,-1,5,-6,-10,4,-4,-4,3,2,-10,-9,-10,10,-7,-10,8,-10,5,-9,-10,10,-2,-2,4,10,-8,-1,-10,-2,-7,-8,4,-9,-5,1,1,-9,10,8,5,10,-7,-4,9,3,-10,2,-8,10,9,-9,5,-3,-1,-8,1,4,8,-6,-5,4,10,7,7,3,1,8,2,-10,6,-1,-8,8,2,5,-5,-3,5,4,7,9,1,-3,-3,-8,-3,-6,6,8,-10,-7,10,-9,-10,-6,-2,5,4,-8,3,6,9,-10,7,-4,9,-9,1,-5,-3,-8,-7,8,-2,-10,6,-4,9,-1,2,-3,-9,9,2,-1,-4,-10,1,-4,-8,-2,10,9,-10,8,-8,-10,-5,8,-4,4,5,10,-4,1,-9,-8,8,2,10,9,-1,6,9,-5,3,2,-5,-6,-5,3,-1,-6,-8,9,6,-7,-7,7,7,1,-3,-9,-5,7,3,5,1,-5,8,7,1,5,7,6,-5,-3,1,-7,9,8,6,-6,-5,-5,2,-10,-6,-3,-8,8,-7,10,-4,-6,-4,3,-10,-6,9,-9,-7,-5,6,7,-6,-5,-5,3,-3,10,-5,-7,1,9,9,2,7,-9,3,4,1,2,-6,3,4,-9,8,4,-1,9,1,6,-7,10,2,-9,5,9,6,1,7,1,-5,-3,9,6,5,9,-10,-4,-5,7,4,-1,8,-10,-3,-10,-7,-7,-7,6,7,-6,6,-1,-4,-3,2,1,-8,-7,-4,-1,10,-7,1,10,3,-6,7,2,-4,4,-10,10,-7,-1,3,-2,-8,-1,4,-8,7,-8,1,-10,6,5,-8,-6,-1,6,6,7,8,-6,9,-1,-8,-5,-8,6,-6,2,7,8,2,3,3,4,10,-6,-4,7,8,2,6,2,2,-5,9,-6,9,-10,1,-6,6,8,-10,3,-7,-6,5,-5,1,6,7,-10,3,-9,-6,5,-6,1,8,-4,8,-9,7,2,6,-9,-1,-9,8,1,4,5,9,-6,7,3,1,10,8,7,9,-6,4,7,3,8,-3,7,-9,8,-6,-3,5,-8,-3,-4,10,3,5,-10,7,8,-2,-2,2,9,1,5,-3,-6,10,9,3,-6,3,9,-7,-9,-3,-2,-1,3,10,7,-2,2,-6,-2,4,-7,7,6,-4,2,8,-4,-2,-10,-4,-8,1,-8,10,5,-9,10,2,-7,10,6,1,6,7,-8,2,-9,7,-1,-9,-2,3,-6,7,-1,-3,7,-7,1,-1,-8,6,-8,-7,1,-7,6,-6,-3,8,-4,-1,6,3,3,-8,-7,-8,-9,-5,-5,-5,2,-5,-6,9,3,10,7,9,-9,10,-3,-2,7,5,10,3,3,7,9,1,5,3,7,3,-1,4,3,-8,-3,-10,-3,7,1,7,-9,3,-8,-7,2,-10,2,9,-10,-4,10,-8,-9,8,8,-9,4,2,-10,-8,8,7,4,3,-3,-10,3,5,-4,1,10,10,3,7,-10,6,-3,-6,-9,2,8,-4,-10,2,-3,6,2,-7,-8,10,9,6,1,10,2,1,-6,10,5,1,-6,3,-5,-5,-7,10,3,8,7,1,2,9,8,-5,5,2,5,1,8,-10,3,10,6,-7,8,4,1,-1,7,5,-3,3,-4,5,-2,-8,-7,-2,-8,9,8,-7,9,1,3,-7,-3,-4,7,-1,-8,-8,7,9,-9,-3,-4,-8,-10,10,-5,2,9,6,-5,7,-4,-10,4,-8,10,2,2,8,8,-7,-6,10,-5,3,1,-5,6,-10,5,-5,-9,-8,4,-5,7,-5,1,10,2,-5,-7,2,4,-4,-1,-3,-4,3,8,-2,10,-7,5,-4,-3,3,-9,-1,-8,3,6,10,-6,9,1,-6,1,1,-1,4,-7,-3,-4,1,-3,-5,-10,-8,10,-10,-9,3,2,-7,-2,-8,-9,-5,-9,-9,3,-9,9,-1,5,9,2,5,7,-8,4,-7,-10,8,-1,10,-10,-8,6,-7,3,-6,-7,8,4,2,3,-1,-2,-10,5,-8,9,-2,-7,4,5,4,1,-8,9,3,9,-7,-2,-5,-7,1,-1,10,4,-8,6,-2,8,-3,2,-1,9,-4,-4,-9,-4,-6,-5,-2,2,9,4,4,3,-8,-3,-6,4,-5,-2,9,7,2,-4,3,4,4,5,-1,7,-3,-8,-3,2,-3,2,-2,-9,-3,9,-1,-9,-3,6,5,3,2,-1,-6,-4,-9,2,5,6,-8,-3,-9,7,7,6,-5,-1,10,3,-5,8,-3,-5,-4,8,7,-3,4,-8,1,2,-3,-6,-3,3,-8,-1,-1,-1,7,-9,1,-1,-3,-5,-1,2,-1,6,-7,-3,-10,-6,-1,6,-6,-2,-8,-1,10,-5,4,4,8,-1,-1,-10,1,1,-2,-9,3,-7,-2,4,-6,-4,8,8,-2,-1,-5,5,6,7,-5,8,6,3,-6,2,7,2,6,3,3,2,-4,6,-2,-10,7,-7,5,-5,-8,-3,-4,10,7,9,-7,9,-9,3,-8,-10,-3,2,-8,1,3,-9,-8,-9,2,8,3,1,4,3,7,1,-10,-9,9,4,-3,10,-4,8,-9,3,4,1,-8,-10,-8,4,-3,8,-3,3,-7,-7,2,-5,2,2,-4,3,-9,-6,5,5,-2,-9,7,-9,7,-3,1,-9,-10,8,7], dtype = "uint8")#candidate|8844|(8232,)|const|uint8
const_8845 = relay.const([[2,-1,9,5,10,-9,-9,10,7,6,7,-6,-7,7,-8,4,-6,4,7,-1,7,1,5,3,-9,-9,9,5,6,-5,-6,-6,-8,-2,-8,-3,4,-4,-5,-10,6,-1,3,-10,-10,5,5,-10,2,5,4,-6,2,-7,4,9,5,2,8,10,6,3,7,-2,7,8,7,-2,-3,-6,-6,-7,-7,-2,-1,-2,-8,-10,-10,3,-4,-1,-4,-10,3,3,4,-2,-9,5,-5,-8,-2,7,3,-1,2,7,-6,10,-6,-7,-3,1,-3,1,-5,-2,-9,1,10,8,4,7,-4,-9,2,-9,7,6,-8,10,7,-2,-3,-10,-7,-7,4,2,3,-6,-7,9,-7,-4,9,10,-5,2,-7,1,1,-4,-1,4,-8,-8,-7,9,-9,1,-6,-6,5,-9,2,-6,-9,9,7,-4,4,-1,7,7,4,6,10,3,9,10,3,4,6,-1,-7,-9,-7,1,2,-1,-7,8,-8,5,-2,-1,-10,-6,10,-1,-2,-7,-3,-4,8,3]], dtype = "uint32")#candidate|8845|(1, 198)|const|uint32
var_8846 = relay.var("var_8846", dtype = "bool", shape = (60,))#candidate|8846|(60,)|var|bool
const_8847 = relay.const([[1.253762,-8.307491,-5.314401,-5.827977,-7.917518,2.209801,2.137189,1.572038,6.320983,-5.165383,1.298881,9.266835,4.977958,-7.637481,-0.291142,-8.892060,4.572280,-2.902800,-3.827268,-7.271152,2.715514,8.257401,4.864271,0.726832,-3.042744,5.515540,9.472171,-2.002587,9.590795,-3.104389,0.285527,6.820300,0.961592,-4.068221,-3.494200,-9.052748,1.695984,3.679193,-4.738392,3.863971,-3.900790,-3.288413,8.301287,-4.903560,-9.669236,-2.271361,8.926389,-2.826759,0.556176,-1.795040,0.085286,-2.697028,4.145123,2.688169,-1.103157,-9.051756,-5.244708,-3.195734,6.974369,-1.152101,2.372358,3.395074,2.301277,7.005445,1.039340,-9.532120,-8.098637,7.480472,-5.016809,-3.314137,8.860362,-6.825296,6.418895,7.549601,3.815273,-3.894757,-4.722846,-6.197476,2.158189,9.730913,0.546504,8.974156,-3.179552,9.564210,-6.845041,8.100479,-7.998002,4.522247,6.830353,-5.823445,-7.675961,2.493282,7.472493,-4.633329,-3.103154,2.278331,-1.514568,8.523595,4.141488,1.027124,-6.676241,9.790284,-0.541105,4.369589],[2.047163,5.704085,-5.583423,-6.245267,-9.127822,1.859445,-6.487110,-8.144394,3.968510,2.923030,5.155858,-1.364192,-7.694609,-5.804307,-8.921642,-5.024923,-1.927913,-0.860729,-6.617529,-4.274520,9.717540,1.271808,-5.995462,-9.022538,-3.645207,-6.775755,2.566142,3.736127,-3.875198,-2.034159,3.770103,-3.293932,-7.370209,3.424483,4.102750,2.411817,3.926081,7.472136,8.793527,3.828496,6.315190,0.090946,7.267168,-7.415689,-7.815488,-0.084264,8.742615,2.053804,4.915252,4.788239,-7.042275,-3.094643,3.041649,2.480477,9.555781,-2.095657,-3.869145,9.343396,0.825942,6.942192,7.277309,7.863159,-2.539958,-5.485425,5.445517,7.632731,7.448274,8.716386,3.380532,9.080993,-6.389951,8.317898,1.612891,-1.950799,4.906218,-7.681715,8.948784,3.488760,8.591587,-3.523852,8.335065,-8.614682,5.750146,-5.254424,2.422400,7.586373,4.647080,-1.562370,-5.387703,3.537269,6.073379,-0.323779,-3.057789,-7.441879,2.417598,-9.002131,-7.572727,5.604145,4.525908,-7.065496,8.712225,-0.978933,3.467272,9.301426],[7.471030,3.163761,4.614851,2.477728,6.049090,0.332453,-7.064749,-1.683896,-2.308345,-1.268494,6.604343,-7.928992,9.041235,5.733973,-8.773003,-7.099539,-8.796138,-5.105683,3.971369,5.842836,3.575621,6.144811,-2.380205,9.315621,-8.991612,-3.742598,-6.756993,-8.251905,8.231845,-2.015326,3.359658,9.749182,-8.564974,5.078160,-9.009670,4.933640,4.406804,9.225508,-4.900244,-3.421257,7.881956,-9.852030,-6.549855,5.208732,-8.066817,9.109062,-4.338767,3.156084,-9.996254,-0.214913,6.038946,-0.364034,-5.067523,2.178791,-8.697670,2.431170,-5.502846,-6.410173,4.682094,8.531680,5.883699,9.737621,7.632675,1.846365,3.248989,-2.029110,5.218295,4.984718,6.326154,-1.584067,-0.955784,9.892585,6.689993,0.413035,4.126675,-8.067939,5.715987,-3.815939,8.845354,-1.945890,2.475101,1.935355,-1.418418,-0.093926,9.250705,9.627830,9.325234,2.775290,-3.118718,6.851481,4.021953,1.777589,9.709898,9.793319,3.854351,3.606627,4.851001,9.813056,0.770899,6.338779,-0.333636,-2.937575,3.728173,-4.752560],[0.564347,9.735825,1.100621,8.565945,-0.082679,3.998119,6.582174,-4.492856,-5.068989,-5.957691,2.965516,-0.484461,-7.043410,4.944138,-7.869897,-4.934646,9.994470,-3.708827,-4.126963,2.461376,0.762105,-2.001236,7.357716,3.693404,-9.802261,9.124795,8.207390,6.050229,0.109957,6.216939,-7.071868,0.670698,9.218308,-4.095205,5.817831,-9.236820,7.714934,7.019189,9.903420,-3.773172,-3.369295,3.436002,6.871005,-6.691649,-4.181176,8.259806,5.468040,-1.889762,-9.848396,-3.939803,5.128577,-4.032141,6.453243,5.815791,-4.910827,-3.411880,-7.364512,-2.761454,-8.884561,-8.130333,-7.834118,8.449608,-1.025112,-5.159425,-7.539200,-3.220873,3.543892,-9.851913,9.408777,3.917652,6.561920,-4.196799,-5.703757,-9.241883,5.883760,0.924802,-7.697914,7.917749,-5.845177,3.829186,-1.408060,-2.074949,2.221476,-0.824586,1.578471,-7.126163,8.671911,-8.453377,-2.924154,-3.641924,2.592856,7.391744,-8.722691,-5.416709,3.665652,-2.725442,8.597390,1.116070,9.217111,9.213357,-1.760234,-6.126220,7.018373,4.982499],[7.475440,9.503112,7.822581,-4.713202,-8.977020,-7.232748,-8.246510,5.334234,-7.986155,-5.923946,0.363920,-0.330353,-3.186817,2.002821,5.639624,9.770726,3.365901,7.022107,7.899617,-7.308179,-7.827746,6.832557,0.220396,-9.020291,-8.797562,-2.473051,6.771955,2.547339,0.990308,5.071172,2.850715,9.134349,3.601130,0.444538,-7.998512,-0.242842,-1.656932,6.239257,3.111154,4.251500,7.951699,9.513385,-4.374478,-0.720712,3.295101,-0.277151,-1.335654,4.690614,-1.008149,-9.396353,3.085272,6.159303,8.680398,9.304603,5.402750,-9.422985,-3.891325,2.953211,-4.473824,-2.916986,5.572387,-5.653669,-1.642252,0.507601,-5.113118,5.352346,9.476834,9.063082,-5.336839,8.048265,-2.989522,-4.815183,2.639700,7.931258,5.891146,6.773810,2.617361,-4.508782,-2.723531,-3.605271,4.962176,-8.571885,0.844706,0.643966,-5.954813,8.821347,-9.967327,-1.617725,8.552185,1.734376,9.715672,4.719545,-8.524760,6.060490,3.344261,0.201966,7.232482,7.956194,-0.969384,-6.437953,8.074566,3.516607,8.514624,2.888827],[8.637641,3.556551,-8.944453,5.634842,-2.198803,8.387801,6.255273,9.440186,-1.563854,8.603276,3.533133,0.556382,0.690713,3.072525,-3.332357,3.023264,5.243302,2.109287,2.455607,9.986210,5.121703,3.924202,3.664563,9.052698,-0.762663,-0.504420,6.587573,-7.376384,-0.440676,4.825933,0.054553,6.842058,-9.710268,-1.924104,3.212000,9.045008,-4.280910,7.032450,1.475284,4.352243,8.567357,-2.901726,9.834784,7.683424,-4.374485,8.549359,7.134410,-3.782915,6.270004,5.303209,-2.856273,5.559433,-0.777100,9.473211,1.629188,9.697163,-0.666866,5.583760,-2.368794,-8.809594,-2.422749,-3.132714,-4.886504,0.705918,1.785203,-7.095724,7.053556,-4.164808,8.050971,-0.790057,-9.249823,4.740527,8.895394,5.002001,-7.054268,-1.125941,1.988535,-0.675847,8.027051,3.749218,3.878732,7.258231,7.008031,-5.505258,1.564273,3.597895,-8.817246,-8.844679,-6.496774,8.498609,0.212863,7.094236,0.745245,-5.336870,0.092274,9.510857,-1.368571,1.744095,1.751168,-8.428768,-1.849073,-8.881125,-4.766993,-3.715678],[-8.095921,9.199054,7.702185,-8.856906,4.725050,-4.803068,-3.014164,1.551915,-1.457765,-7.304380,-9.009720,-7.241435,4.668946,9.258889,0.146391,-0.748042,1.641156,-8.508122,-0.424464,6.228595,7.496324,-8.847709,-6.125877,-3.219321,-5.996483,-6.630293,0.388931,-4.956229,3.692841,0.441705,4.567047,0.119192,1.223914,-3.808141,-6.044792,3.273200,2.373677,-9.410845,0.641656,-0.131074,4.597729,-9.738187,0.415217,0.708749,-2.089205,9.840388,-2.559063,8.809885,-9.405623,3.832333,6.909547,5.792754,-9.769354,-5.902370,-4.266161,-8.238138,8.644492,0.638500,5.192547,-8.930964,8.248789,6.994302,-0.081072,1.446340,-4.885503,7.819914,-7.357837,-6.173709,-6.793839,-2.963970,1.381852,9.741537,-9.371143,9.272870,0.844432,4.005777,-0.652717,2.095188,0.020507,1.862688,3.298253,-5.133148,6.073106,0.923808,3.010802,0.581726,-3.627847,-4.681513,4.273049,-1.754891,0.140605,1.052342,-6.560437,-5.985081,1.407577,-5.769036,-9.514521,-1.760258,0.155065,-7.823410,-9.780098,-7.187063,-2.985144,1.123833],[-4.200738,-9.472909,8.017761,1.789392,-6.084707,-6.739631,-7.354530,4.923758,6.332459,-8.371662,1.340249,6.182882,-3.771861,-2.965703,-6.350287,-7.522026,0.196507,-0.932449,-9.873390,-4.680294,3.859923,3.050212,3.802882,2.081810,-8.236976,-6.908410,-0.802078,3.673150,1.872425,1.790867,0.337867,-2.357225,-9.632462,-5.696718,0.016334,-9.410718,0.060314,-3.659378,-8.259051,0.790136,6.564954,-1.455298,6.345148,6.430075,3.264814,9.682832,-4.923477,4.801099,-4.762549,-2.409326,-7.049513,2.227834,-0.537891,0.038078,8.884224,8.099050,-9.809513,-6.117972,-8.004566,-2.189012,-5.930708,-8.424243,8.693512,0.297809,4.729305,1.186144,-1.734840,6.768553,-2.755014,4.618999,7.452125,0.944248,-2.070906,-9.774821,3.451421,-7.272923,-5.947641,-6.844076,-0.658630,9.291092,6.257680,-0.381441,0.996519,-5.823699,-0.696771,4.652658,1.459974,2.602705,-3.487262,-4.446033,-2.290748,5.313493,5.417306,-4.749198,-8.812923,-6.813273,6.634061,5.749609,-4.947451,-3.650351,-3.778711,0.231757,-9.147802,2.981730]], dtype = "float32")#candidate|8847|(8, 104)|const|float32
call_8843 = relay.TupleGetItem(func_6917_call(relay.reshape(const_8844.astype('uint8'), [588, 14]), relay.reshape(const_8845.astype('uint32'), [198,]), relay.reshape(var_8846.astype('bool'), [60, 1]), relay.reshape(const_8847.astype('float32'), [832,]), ), 0)
call_8848 = relay.TupleGetItem(func_6923_call(relay.reshape(const_8844.astype('uint8'), [588, 14]), relay.reshape(const_8845.astype('uint32'), [198,]), relay.reshape(var_8846.astype('bool'), [60, 1]), relay.reshape(const_8847.astype('float32'), [832,]), ), 0)
func_6506_call = mod.get_global_var('func_6506')
func_6507_call = mutated_mod.get_global_var('func_6507')
call_8853 = func_6506_call()
call_8854 = func_6506_call()
func_2616_call = mod.get_global_var('func_2616')
func_2619_call = mutated_mod.get_global_var('func_2619')
var_8881 = relay.var("var_8881", dtype = "int64", shape = (15, 195))#candidate|8881|(15, 195)|var|int64
var_8882 = relay.var("var_8882", dtype = "uint16", shape = (192,))#candidate|8882|(192,)|var|uint16
call_8880 = relay.TupleGetItem(func_2616_call(relay.reshape(var_8881.astype('int64'), [15, 13, 15]), relay.reshape(var_8882.astype('uint16'), [192,]), ), 9)
call_8883 = relay.TupleGetItem(func_2619_call(relay.reshape(var_8881.astype('int64'), [15, 13, 15]), relay.reshape(var_8882.astype('uint16'), [192,]), ), 9)
func_4231_call = mod.get_global_var('func_4231')
func_4233_call = mutated_mod.get_global_var('func_4233')
call_8906 = relay.TupleGetItem(func_4231_call(), 0)
call_8907 = relay.TupleGetItem(func_4233_call(), 0)
func_8576_call = mod.get_global_var('func_8576')
func_8577_call = mutated_mod.get_global_var('func_8577')
call_8912 = relay.TupleGetItem(func_8576_call(), 0)
call_8913 = relay.TupleGetItem(func_8577_call(), 0)
func_4389_call = mod.get_global_var('func_4389')
func_4391_call = mutated_mod.get_global_var('func_4391')
call_8921 = relay.TupleGetItem(func_4389_call(), 0)
call_8922 = relay.TupleGetItem(func_4391_call(), 0)
func_1377_call = mod.get_global_var('func_1377')
func_1380_call = mutated_mod.get_global_var('func_1380')
var_8939 = relay.var("var_8939", dtype = "float32", shape = (154, 2))#candidate|8939|(154, 2)|var|float32
call_8938 = func_1377_call(relay.reshape(var_8939.astype('float32'), [11, 7, 4]))
call_8940 = func_1377_call(relay.reshape(var_8939.astype('float32'), [11, 7, 4]))
uop_8944 = relay.erf(const_8845.astype('float64')) # shape=(1, 198)
bop_8946 = relay.multiply(uop_8944.astype('uint64'), relay.reshape(const_8845.astype('uint64'), relay.shape_of(uop_8944))) # shape=(1, 198)
func_4584_call = mod.get_global_var('func_4584')
func_4588_call = mutated_mod.get_global_var('func_4588')
const_8950 = relay.const([[7.038914,9.691036,0.032714,-7.450686],[8.888110,4.705594,-4.118202,7.895636],[6.500280,-2.000936,9.944376,6.941003],[5.298689,3.535583,5.433628,4.967158],[3.899561,6.685458,-2.001438,-2.315030],[-3.798852,0.459090,-6.731980,0.921742],[-7.676742,3.225056,3.075312,-7.560168],[-8.038321,0.306700,1.915171,-3.883928],[9.912752,5.888057,3.319211,9.107883],[2.308374,8.729831,-8.166609,5.811320],[-2.831163,-0.447029,-6.012292,-5.386276],[-1.613057,-0.489949,7.438339,9.921685],[-5.816290,-1.151562,-7.272867,2.339966],[-5.494384,3.523064,-0.886182,6.408354],[-3.900541,-3.102076,7.447267,7.103066],[-2.566186,3.222180,-7.788467,-5.129637],[0.431313,4.659526,2.958078,4.300312],[6.157917,-4.637610,-4.593095,-5.301310],[8.600292,0.850871,-0.924265,-0.335772],[-7.280565,-2.486102,-1.416357,-2.413087],[6.613979,-5.099567,-3.421537,-3.191168],[-7.790336,4.998518,-5.336178,1.214717]], dtype = "float64")#candidate|8950|(22, 4)|const|float64
const_8951 = relay.const([[-2,-3,10,6,9,-2,-5,-7,-5,-4,2,2,-2,3,-2,-9,6,1,-7,1,-6,-5,7,-3,-1,-9,-10,-5,10,6,-4,6,-7,8,-5,-10,-2,-3,-8,-1,-3,2,-9,-6,4,1,-6,-10,4,-9,-6,2,-5,-7,9,-2,8,8,10,8,-7,-3,-8,8,-2,-2,9,8,-7,6,3,-2,9,-10,-3,4,9,-3,-2,-10,-1,5,-6,-1,-6,-1,-5,9,1,7,-8,-4,-8,-4,1,7,6,-9,4,5,8,-10,7,9,1,-3,-6,-5,-7,7,3,-7,7,-1,-7,3,-2,-10,-6,-8,4,-5,-10,7,1,5,-7,7,8,4,-4,-1,-4,5,10,9,7,-6,-6,4,6,-5,2,8,-10,7,1,-10,9,-9,1,4,-3,6,-5,9,2,6,-6,5,-7,9,8,-7,9,7,3,9,-4,-5,7,-2,-10,2,3,1,10,1,3,7,1,1,5,-10,-5,10,1,-9,-10,-6,-10,4,10,8,-3,-3,-8,10,4,-4,7,1,6,8,2,-1,-2,2,2,3,-4,-2,3,-8,4,-8,-6,6,8,9,7,-4,-7,-8,4,-6,10,-3,-2,9,-4,6,5,-3,-7,5,-2,-2,3,10,3,-8,-6,5,-1,-1,-1,-5,10,-7,2,-8,1,5,-1,-1,-3,-7,-9,6,-7,7,5,-2,1,9,-3,8,-8,-8,-8,-5,-8,-9,-5,9,1,9,9,10,-3,3,-7,-10,4,5,-6,4,-1,3,7,7,9,5,-7,7,-3,6,1,-2,-5,-6,7,5,2,-5,9,8,-10,-3,7,9,-10,7,-2,-8,-8,-5,6,-5,7,9,2,3,2,10,-8,1,-3,-1,1,-1,-6,6,-8,10,10,3,-1,-5,4,4,2,4,-4,-2,6,6,4,4,2,9,-5,4,-1,-9,-2,-1,-10,2,9,1,-9,-5,-8,5,3,9,-8,-6,-10,6,-9,8,1,5,8,-3,-2,2,-9,9,-2,-4,3,-9,-4,-7,-3,4,7,-2,-7,1,-7,-1,-1,2,1,4,-3,-7,10,-4,8,-5,-9,-1,-3,-8,-7,-9,-9,10,5,4,-6,9,-4,9,2,9,2,-10,2,7,6,6,7,7,-9,-1,1,-3,2,-9,7,-8,7,5,-5,-9,-10,-10,4,-8,8,9,1,4,-5,10,10,2,5,9,2,2,-6,7,-10,2,-6,9,5,3,-8,-2,10,-8,-3,-4,6,5,10,1,-8,-10,-5,4],[-4,-10,9,-1,-7,-1,-7,-5,4,-6,-1,6,1,6,5,-4,6,-1,5,1,4,-4,10,5,-7,-6,-7,10,8,-4,5,-6,-1,5,1,-1,1,-8,-3,2,-4,-10,3,-1,-5,8,2,-2,-10,-2,-4,-8,6,-3,8,1,-6,-3,1,3,-10,10,2,-6,9,-5,-8,-6,-8,-5,6,8,-7,4,6,7,-6,-7,-7,3,8,-8,3,-3,5,-7,6,-5,-6,-4,-4,-8,6,-1,6,-2,5,3,4,-9,7,-1,1,7,-7,-2,2,3,3,2,1,-4,-3,-4,-6,-9,-9,6,-8,-9,-4,8,-9,3,-7,1,-10,-4,-3,-2,-1,2,1,2,-10,4,2,-9,3,2,6,9,10,1,-2,-2,1,-3,-3,2,5,-7,-8,-7,8,-10,-3,-2,-2,8,-5,-7,6,1,-6,-3,8,6,-6,-4,4,-1,-3,-2,6,-1,10,-7,9,-6,-10,-5,-6,-4,-6,9,6,-7,-2,4,-6,-9,4,-3,-6,7,7,-6,-5,-7,3,-10,-5,6,5,7,8,10,-4,4,-3,9,4,-6,8,-3,1,-7,-2,6,-6,1,-1,-5,-5,6,-1,1,-10,8,10,6,5,-8,8,-4,-6,-10,7,1,-4,1,4,3,-9,-2,10,-10,3,2,3,10,3,6,3,2,-8,3,7,6,8,-2,-7,-5,-2,6,3,5,-3,-5,-2,-6,-10,-2,6,2,7,-2,6,-7,-4,-4,-8,-4,9,9,-6,2,5,-4,4,-7,-10,7,8,-4,8,3,6,9,9,-7,-7,3,-4,5,3,-9,2,-8,-4,5,2,-10,-5,4,-10,-9,1,-9,8,-1,5,-3,9,-7,6,5,-10,-8,5,-1,4,-2,-3,-10,-2,-4,-2,-3,-10,4,-2,4,3,9,6,4,9,5,-4,2,5,-4,5,-7,-6,9,-9,2,-6,3,8,-2,-3,8,9,5,10,-10,-5,-7,10,-10,10,-5,10,10,3,-6,8,-4,-8,10,8,-10,-9,-3,3,-9,7,3,10,-7,3,1,-1,-8,-4,6,10,-5,5,7,-3,-2,10,8,-9,7,2,5,1,-2,-2,6,-6,-3,9,8,-8,-4,6,-2,-9,-6,5,4,-5,-2,5,-10,-1,2,5,-3,10,3,9,10,-2,-1,-10,-4,1,3,-6,-7,-6,-8,-8,-3,-8,4,-2,7,5,-3,-3,7,5,-10,-2,9,-7,-8,7,1,8,5,4,-3,10,-1,5,6,9,-2,-4,-1]], dtype = "uint16")#candidate|8951|(2, 480)|const|uint16
call_8949 = relay.TupleGetItem(func_4584_call(relay.reshape(const_8950.astype('float64'), [11, 2, 4]), relay.reshape(const_8951.astype('uint16'), [960,]), relay.reshape(const_8847.astype('float32'), [832,]), ), 2)
call_8952 = relay.TupleGetItem(func_4588_call(relay.reshape(const_8950.astype('float64'), [11, 2, 4]), relay.reshape(const_8951.astype('uint16'), [960,]), relay.reshape(const_8847.astype('float32'), [832,]), ), 2)
uop_8953 = relay.asin(bop_8946.astype('float32')) # shape=(1, 198)
func_1569_call = mod.get_global_var('func_1569')
func_1576_call = mutated_mod.get_global_var('func_1576')
const_8960 = relay.const([1,-6,3,3,10,8,1,10,-2,-6,-1,3,3,1,7,7,7,-1,5,-4,10,-6,10,1,-1,10,8,-3,5,8,-5,-3,8,5,-10,10,-1,-2,-4,-4,-2,6,8,-8,5,-8,-10,-3,5,-2,8,-4,10,-3,1,-9,4,2,7,6,5,-2,-4,-3,-6,-3,-7,-7,-5,3,-8,8,10,-3,-9,2,-4,10,1,7,6,-4,-9,2,-1,-9,-7,-2,-8,-7,5,-2,4,-7,5,6,5,6,3,7,1,3,-4,9,2,-10,5,-6,-4,-6,10,-10,-2,-9,4,-8,-10,5,8,8,9,-4,2,3,-6,6,-1,-1,3,-9,-3,-4,-8,9,-2,-5,-4,5,-1,-1,7,3,4,-4,-1,5,-8,7,9,-3,4,4,-6,-6,-7,-4,-4,6,-8,-8,3,-2,-4,8,-6,6,8,-10,9,3,-2,-4,-1,-8,-1,9,2,5,-2,-1,6,2,7,10,7,6,10,8,2,-2,2,9,7,-2,-8,9,8,10,3,-3,-5,10,1,-9,-5,6,-6,-3,-8,2,-6,2,2,3,-5,-6,7,8,-5,1,-7,9,-3,-6,7,-8,9,-1,3,-6,2,9,-9,7,3,6,-6,-3,9,-9,7,1,7,-7,-8,7,7,9,-4,-10,4,-6,10,9,-1,6,-4,-2,-3,-1,1,10,5,-4,6,5,9,-10,1,10,8,7,-7,4,9,-10,3,-8,1,-9,-5,7,-6,-7,-6,8,-3,7,6,-9,-5,7,10,10,9,-8,-6,10,-4,8,2,-6,-2,6,-2,-5,5,-7,-7,-8,-8,1,-1,-7,-8,7,-2,-8,3,2,-8,-4,-9,7,10,10,-10,-6,-2,8,-10,1,-5,8,-2,5,9,10,-2,2,10,2,3,-5,-10,6,-7,2,9,-1,-2,10,8,7,-6,-2,1,10,-9,-2,7,1,-8,-5,-4,-5,-5,-6,-4,10,2,-8,-5,10,3,-5,9,-4,10,1,6,-8,10,3,-9,-5,5,5,-4,-6,-4,-7,6,9,1,-7,7,-9,3,2,-4,-10,-2,1,-9,-1,7,-5,9,8,-3,8,-2,8,6,-5,7,-1,2,5,8,-6,5,-7,-5,-4,-10,10,-7,9,-8,-8,-2,6,-3,-7,8,-8,-5,5,10,2,-2,-3,-1,-6,7,-8,5,4,6,10,7,4,5,-3,1,-4,-8,-5,9,9,-7,4,-2,9,4,-9,1,2,-3,8,2,6,-1,10,2,6,8,-1,-10,6,4,-4,9,9,-3,-7,-1,5,-5,9,-4,-7,7,-3,-2,1,-6,-9,3,8,-6,-2,-7,-6,4,10,-2,-2,-8,-8,-6,4,-5,9,-2,-5,4,-5,8,3,-9,-2,3,2,1,-2,8,-2,-3,-3,10,5,-7,6,4,-9,-4,5,-7,3,-8,6,2,-1,1,-2,-1,-6,7,-8,-1,5,-8,-7,7,2,4,3,7,3,-5,-10,3,-9,-8,-1,-3,-6,-7,3,-2,1,-4,4,-6,1,1,2,-9,-4,7,8,4,-1,9,-6,1,-7,-2,8,7,3,-3,1,5,1,-3,-2,-4,-7,-8,-4,-2,6,3,4,-5,7,2,-2,-5,1,-5,-6,-7,-4,8,4,2,-4,3,-2,-4,6,8,3,4,-3,6,-10,2,7,-3,-2,8,9,-1,-8,1,-1,6,4,7,-9,-7,-7,2,-1,-3,-1,6,-2,10,-3,8,1,9,3,1,10,-2,8,-1,10,-9,-6,-10,5,-10,2,4,3,-7,1,8,-7,-10,-4,-2,-6,-7,10,-1,-9,5,3,5,7,2,-1,1,1,-10,4,-3,-7,-3,10,-1,-8,-10,-8,-5,-6,-2,7,2,-7,-7,6,-1,10,9,-9,1,-9,-6,-6,1,-10,-7,-8,-7,3,8,-5,2,5,7,4,-9,7,-9,8,4,-6,-7,4,-1,-9,8,-8,-9,-4,6,2,-10,-3,-3,10,1,10,10,3,1,-10,7,-9,-2,-3,-10,4,-8,-8,7,10,-4,5,4,-5,1,-4,-5,5,10,6,6,10,6,-5,-8,3,5,3,-8,-6,4,-5,7,-6,9,6,3,-9,6,6,-1,5,6,9,8,3,7,3,-10,-8,-3,4,2,9,-9,1,3,-10,-4,3,2,6,-3,-3,9,2,8,10,-1,-8,-3,2,5,-4,-9,-2,4,2,8,2,1,-9,-2,-10,7,3,7,5,7,2,8,-9,-4,2,8,-7,-8,9,5,-2,9,2,1,9,-7,-4,-5,-7,-3,8,3,-2,2,-10,1,9,7,8,-1,4,6,-4,8,-9,-2,-4,-4,7,-8,-3,9,10,5,4,3,-3,5,-1,3,-5,6,-10,-6,6,-4,-4,1,8,4,-2,-9,7,6,-6,5,-4,3,-1,10,4,6,-8,-3,-5,-8,3,3,1,7,8,3,5,5,4,5,1,7,2,-6,9,5,-3,-4,-10,4,-5,10,-2,7,-10,7,6,1,-5,5,4,10,10,2,6,-8,4,2,10,-5,2,4,-5,7,3,-6,4,4,1,-4,5,-10,7,-8,-1,-9,-2,-2,9,9,-3,-1,-2,-1,-3,1,-4,-9,-5,9,-10,1,-3,-1,4,8,-4,4,-6,-8,-9,-8,-2,-5,-6,4,-5,9,8,2,-7,-9,1,-6,10,5,5,-4,4,3,-6,-7,-2,10,-6,1,-5,4,-6,3,4,-5,5,5,1,-9,-7,-7,-3,-10,-1,2,-3,-2,-9,-5,4,4,-9,9,9,6,-6,-6,2,-10,8,1,-10,-8,-9,-4,5,4,-8,-4,3,-4,7,-10,7,1,1,5,-4,-10,10,-8,3,8,7,10,-4,-8,6,9,7,-9,2,10,10,1,-4,-2,-2,-8,-2,10,-3,-8,-8,4,-7,-4,8,-8,-3,-6,-9,6,9,-2,-2,-9,-1,-6,4,-4,3,-3,-3,-7,10,-5,-6,-2,-7,-7,5,8,5,-4,-3,1,6,7,4,8,-1,-3,-6,-1,-9,3,-4,-9,4,7,4,5,9,1,-6,-7,2,4,-5,10,-1,10,-4,4,4,7,-9,-10,-4,4,-10,7,-1,9,-5,-1,-3,-2,2,7,9,-6,6,-7,-6,10,-1,7,9,-9,-8,1,-3,-8,-10,3,-1,-6,-2,7,5,4,-4,8,-1,-8,-1,-8,-3,-1,3,2,10,1,2,-2,3,3,-8,-3,-7,-6,3,5,2,8,-8,9,10,-2,8,-1,9,-2,-2,6,7,10,-7,7,10,5,8,6,6,2,1,6,-5,8,3,-1,-5,-4,5,-10,-7,-3,-10,2,-8,-3,8,-8,8,-2,-10,-5,3,5,-9,5,3,10,6,1,-6,2,4,7,-5,-4,10,-10,-9,3,4,-5,-5,-10,6,-6,6,8,-9,3,-4,1,-8,-10,-7,-6,-10,-8,7,9,-9,-8,4,-8,-3,-9,10,2,10,-7,-5,-10,4,-4,-5,-4,8,3,10,-7,2,9,-5,-10,-4,-3,-7,-6,2,4,2,4,-2,4,-8,-4,-6,-10,5,-5,4,10,3,-6,7,-2,10,1,-5,-7,-7,-3,5,1,5,10,5,5,-7,3,-3,-3,3,6,-10,-4,3,1,5,9,-9,9,1,10,-5,4,-7,10,2,1,10,-2,-5,4,-4,-7,-3,4,2,-4,6,4,6,7,-3,-3,-4,-7,-5,-6,-3,-1,-3,2,1,-2,-5,-2,4,10,-8,2,7,10,2,2,-2,4,10,-9,-2,-7,1,8,9,-3,-3,10,6,-6,7,-4,3,-2,-1,-1,4,-2,7,10,-9,4,10,4,3,4,7,9,-3,-10,-2,1,-1,2,-2,6,9,-5,-4,-5,-8,7,5,3,6,6,6,-5,10,-7,-4,-6,-2,2,-10,3,5,1,-5,-2,10,9,5,5,5,-6,2,2,2,10,-10,-8,-2,-7,-5,-7,4,3,4,-5,-9,-8,4,4,3,-6,8,7,4,8,2,-6,-3,-8,-6,-6,3,-5,3,10,5,8,-3,3,9,-7,-7,9,-2,7,-9,1,6,-8,-5,-2,8,6,-4,-1,10,-6,-2,9,6,-2,-8,9,-10,10,9,8,3,-9,2,-10,7,-1,4,3,-5,-5,7,-6,10,2,1,7,3,9,-5,10,-6,2,-3,8,-9,3,-6,5,-7,3,9,10,-7,9,-9,-5,2,-6,4,2,-8,1,4,-8,-3,10,5,5,-2,-4,-3,-7,6,-9,9,6,-6,1,-3,4,-2,-9,6,-8,8,9,-9,-6,2,-7,-7,-8,2,-7,-8,2,-7,6,-4,-10,-6,-2,7,-2,-5,8,4,7,3,10,6,1,2,7,-4,8,5,-5,-10,-1,-5,-7,5,4,1,-9,-7,-10,-10,5,-3,-3,3,-3,4,9,3,8,-1,7,-8,1,-9,-6,-8,-6,-4,-1,7,-1,8,-10,-6,-10,-5,-1,5,10,-2,4,7,-1,9,9,6,6,-10,6,7,6,-2,6,-8,-3,1,10,-9,9,3,-3,8,2,10,-7,-3,-8,10,2,10,-8,-5,1,1,2,-7,-2,6,4,-1,2,4,9,-6,3,8,-9,2,-7,-7,7,-3,1,-3,5,8,8,-9,-7,9,1,3,-2,-7,10,-9,-9,5,2,-5,-4,8,4,-10,-2,-10,10,-4,-10,3,-6,6,5,-7,9,-5,6,4,3,-2,-5,-10,8,7,-5,-8,3,10,5,-4,-1,7,4,-9,9,2,6,9,7,3,-8,-5,-5,10,2,4,5,-3,5,8,3,-8,-3,4,4,-2,-6,-5,3,1,-9,1,8,-7,-7,-9,-6,-1,3,-8,3,-1,-8,2,-2,-7,9,5,3,2,-6,2,7,10,9,9,10,10,6,1,6,7,7,3,-5,-2,4,-2,7,1,1,-7,9,1,1,3,2,-3,3,1,-10,8,4,5,1,-7,-5,5,4,-1,-10,2,-4,10,-10,-3,3,2,-1,-1,2,-7,4,3,10,3,-6,-3,-10,8,-6,-8,-4,6,-9,10,-5,-10,-10,7,9,-9,2,7,-7,-2,6,1,2,7,-4,-3,-5,8,-10,-5,-2,3,-8,-8,5,-7,-9,1,6,3,7,9,-10,7,-1,-8,9,-10,4,-2,-9,-10,-7,-2,-8,-5,2,7,2,-4,6,-9,-5,-2,7,8,2,6,8,4,-2,3,4,6,3,10,-3,-4,8,-7,-9,10,-2,3,-2,-6,-8,8,8,-8,7,-2,-7,-9,2,9,-3,-3,5,5,-2,4,1,-2,8,-1,7,5,2,8,-2,-3,6,-1,9,8,8,-3,-4,9,-4,6,6,7,5,-9,-2,5,-8,7,-4,-3,7,-1,-9,-2,1,-4,9,-2,-7,-3,-5,7,5,-3,10,-1,-9,9,-5,1,-9,2,10,-2,6,8,-4,-5,10,7,-1,1,3,8,-1,3,-7,5,10,4,3,-5,8,5,7,2,-2,-8,2,-4,-6,-10,1,-2,-1,7,10,-10,-4,-6,6,-9,-10,-5,2,3,6,4,-7,10,-5,-3,-1,-1,7,-5,5,5,-10,8,-2,3,2,-7,6,-10,-4,-5,-7,9,-6,-9,8,-8,6,2,5,-4,-5,-8,10,-9,1,9,-10,4,-3,-9,-8,-1,1,10,9,4,7,-4,-2,-1,-6,-2,9,4,-8,-2,10,-9,-7,8,5,1,-6,8,7,-10,10,-9,6,2,6,2,-7,6,2,-1,6,10,6,-9], dtype = "uint8")#candidate|8960|(2184,)|const|uint8
call_8959 = relay.TupleGetItem(func_1569_call(relay.reshape(const_8960.astype('uint8'), [14, 12, 13]), relay.reshape(const_8960.astype('uint8'), [14, 12, 13]), relay.reshape(uop_8953.astype('uint32'), [198,]), relay.reshape(var_8846.astype('bool'), [60,]), relay.reshape(const_8847.astype('float32'), [832,]), ), 4)
call_8961 = relay.TupleGetItem(func_1576_call(relay.reshape(const_8960.astype('uint8'), [14, 12, 13]), relay.reshape(const_8960.astype('uint8'), [14, 12, 13]), relay.reshape(uop_8953.astype('uint32'), [198,]), relay.reshape(var_8846.astype('bool'), [60,]), relay.reshape(const_8847.astype('float32'), [832,]), ), 4)
func_6086_call = mod.get_global_var('func_6086')
func_6090_call = mutated_mod.get_global_var('func_6090')
const_8966 = relay.const([-5.892264,0.786922,-5.228092,-2.561059,4.989636,-6.925605,5.883587,-3.217204,5.178554,-8.254373,-9.041539,-5.878781,4.728581,-3.455036,-3.488268,-2.601300,4.755206,5.173088,-1.774409,-3.820125,-0.918467,3.962598,-1.667106,7.611039,-2.215447,2.141316,2.068570,4.150563,0.830991,0.604194,8.127598,-3.789978,-4.088873,7.184630,7.433747,-5.874521,-2.209919,2.553767,-2.700693,-6.338539,2.560010,7.085464,0.550795,7.945392,-1.100970,-9.289242,-9.485622,8.788406,-8.991328,-4.333421,-7.696176,-1.866725,-4.018841,6.959404,-8.000415,6.676818,5.409228,-5.480016,6.799229,0.647221,3.227886,-8.475987,-5.789722,-6.529324,-8.159655,-4.449025,0.176821,4.557948,8.894553,-4.584298,-1.711065,3.238117,-2.553451,-9.112978,7.619415,-7.011006,-5.040157,-4.437334,-5.492744,5.824650,0.748107,8.414276,-2.542873,-5.367341,8.197565,-6.122870,-6.911938,8.787090,0.209829,1.526370,9.398922,5.774102,-5.474016,-4.500411,-9.206871,4.431483,4.113548,6.233110,3.267998,8.501109,-5.382351,-8.413848,5.880092,-1.551028,1.572738,5.105984,7.862425,-0.716951,6.926085,-2.089265,8.159294,1.440014,-0.606315,-6.010433,1.677886,-4.738709,2.365300,-8.888830,-2.204726,-8.015202,-8.730417,-3.288793,-7.678134,7.777739,5.832887,-3.892313,0.998153,9.529306,-4.151759,5.370859,-2.297127,0.799978,-6.549108,-9.547685,-2.472196,2.817261,3.809614,-9.187282,-4.666788,7.754873,3.640890,-5.236346,2.425759,-1.857934,-6.724956,4.402240,8.585738,-0.366220,2.371597,-9.553847,4.404907,-7.539637,9.954944,0.095600,9.424813,7.897495,-7.219066,2.616344,-0.159355,7.047549,-6.064166,8.788790,7.099648,0.352259,-1.451218,5.016594,1.539019,-5.773178,-1.513352,1.374896,-6.284406,0.279982,-5.926489,3.722735,-3.675203,1.847987,1.717475,5.690063,7.499602,2.245425,-6.448291,6.392851,4.162896,2.877183,7.780062,3.677494,1.336946,-6.791735,0.991119,-7.863810,-2.464171,-5.928609,-6.774420,9.254396,5.739844,-6.647300,1.122011,8.931378,1.429479,-8.068580,6.534857,8.349485,-1.745900,5.905786,1.867770,-6.779211,5.783732,1.113075,-2.918362,0.976174,-3.669307,3.750768,-1.846990,-2.434887,1.006765,-8.633559,-7.739959,-4.520925,-7.888329,-6.573930,3.555233,5.894598,-5.319925,1.228009,1.717940,-9.411989,-7.056494,2.031130,-8.232558,-9.993664,4.692747,2.952991,-9.882990,-0.414449,5.082166,-4.512260,4.255630,8.841676,3.881300,-6.698728,-3.519750,-9.823610,6.453993,2.136279,5.890425,3.215728,-2.557667,-4.562020,-4.600103,3.513730,9.755634,6.661540,-1.391585,-1.838305,3.024555,-2.234699,2.983936,-2.049825,8.167353,5.644391,5.189691,0.487782,8.789862,2.168269,-5.940446,3.928813,-2.730103,4.994901,3.872121,-7.447246,-4.010073,-0.281395,7.276372,-6.180793,-8.732433,6.290013,8.888075,-9.719641,-0.461886,-7.991212,-7.522252,0.935690,-4.139978,9.542584,-4.787370,-4.741297,2.991990,1.871386,3.061301,4.891450,8.135155,-2.477153,5.648702,6.133891,-9.228423,-8.092588,2.155595,4.644644,-3.619291,1.631769,2.716620,-3.282138,9.082459,1.075168,3.742912,-5.620888,-7.543892,7.153133,0.532345,3.673560,6.387627,8.672951,2.238665,-8.934960,0.133082,1.751648,-7.036634,6.724706,2.761786,-9.919420,8.795577,0.106873,9.342108,5.277235,2.204984,-1.109837,3.674435,3.782844,6.997324,-5.727721,5.587949,9.711474,8.966570,6.671704,1.929576,-7.939700,6.988925,-9.653258,-7.588855,5.437813,6.512343,-3.812314,7.137560,9.174439,-0.605982,-2.956130,8.445830,5.475635,-0.280490,3.156837,-8.241113,6.419486,9.519832,9.596654,0.818545,3.815983,-8.772546,5.078648,3.368477,-9.172851,8.461137,-1.900536,-5.453361,4.523159,-6.928931,1.135308,-0.751751,-7.066690,-9.069355,-7.856750,7.637175,-9.885785,3.538098,6.434595,2.543801,-6.777510,-0.944683,3.405697,-9.468961,-7.413028,-0.690326,-0.351473,-4.285268,-3.744865,-0.723062,-7.096055,8.245648,5.301711,9.446545,1.675507,8.979383,0.681718,-0.161600,-2.142477,2.893690,-0.735515,-1.593419,0.595612,8.874610,-3.960428,-2.475460,5.318248,9.304950,-7.130017,-4.087616,3.147836,-6.019517,6.394774,-6.547559,8.963017,-8.377402,4.743878,-1.180161,2.315601,-8.556697,0.361880,7.217537,-6.235404,-5.915812,2.569499,4.435977,-3.269761,9.484313,-0.554846,5.111087,9.133314,7.534272,8.553375,9.333658,-2.814278,-8.079059,-5.592691,-0.898143,-8.433271,-6.015137,4.002006,9.809675,4.380474,-1.991758,-0.450898,8.713039,1.929352,-9.524804,8.250201,-4.425733,3.864096,9.059252,-3.199041,1.434471,-6.928186,-3.707549,8.846820,0.242881,-8.566504,-1.093035,-9.736185,-8.053504,4.690238,-2.504984,0.454787,-2.757702,6.296583,-9.248594,8.016315,-6.774945,6.590485,-4.671394,-3.402391,6.491093,3.625792,3.083737,-4.904645,0.137048,-7.716956,-6.839996,-4.566215,9.207015,-1.756440,5.075618,7.700631,-3.752040,-4.207750,1.816121,-4.482707,7.991963,-7.762048,6.907542,8.442189,-5.703235,-7.245211,5.836257,6.187401,-4.370360,-0.734025,-6.381793,-0.622005,9.091874,6.253493,9.350401,5.995764,6.425586,-8.952472,-9.518688,6.886090,3.182117,5.018084,0.933800,1.068438,7.920990,5.715217,2.672584,-2.633288,8.981475,2.524449,8.827713,2.359111,1.974114,-5.104768,1.465765,-6.892194,6.918652,5.176693,5.818877,8.933855,7.252768,-7.978309,-4.088864,1.012075,-9.742448,-7.460026,6.192445,-5.853391,8.541653,3.228006,-0.012709,-6.109021,0.246968,-2.922501,-4.365518,5.838950,9.142152,0.493114,-3.492127,0.196645,1.797634,7.639468,2.259436,1.034968,-2.117771,-1.135554,1.841726,-3.897177,-4.186890,8.654192,-2.142607,-3.786163,-4.378509,2.508568,-9.184414,9.035709,7.261808,1.407367,-9.365751,5.158837,8.563253,1.535171,-3.104192,5.842530,8.911438,-5.117106,-9.034204,1.993653,-1.423924,7.315640,0.911767,-0.865097,4.747498,9.625263,5.032003,-7.050742,-8.734846,4.523973,-8.387877,-2.994431,9.999263,1.017152,6.683588,-2.346983,-6.619804,6.974112,-5.897870,-2.058956,3.833969,4.925100,-2.878920,4.176343,5.501328,-2.038652,8.285634,6.302351,5.638259,-0.486335,8.255900,-4.522070,0.710106,4.529430,2.368305,9.881955,-1.445837,5.528113,1.229541,0.577179,5.717701,-0.489070,-7.537630,6.520640,-6.722671,5.901643,-0.058267,1.493071,3.814416,6.451656,-1.748889,9.303745,2.628652,-7.927052,4.013416,-7.203262,5.846916,2.746675,-9.832140,1.492571,9.464542,2.893259,-4.772985,6.817924,4.903496,-2.827563,3.179105,-5.157608,3.221273,5.129150,7.265057,4.542949,-6.417422,-5.832346,-7.616973,-3.843251,-9.166615,4.554723,-2.632756,-4.368574,-7.590957,-6.495542,-0.441725,-4.005993,0.513297,-0.599198,4.867803,3.370388,0.090094,2.508951,2.332769,7.190461,6.024790,-2.425215,2.244020,3.076783,6.399557,6.948844,2.222577,6.926508,-5.044697,6.300895,-2.988034,1.813981,-4.022725,7.664592,-0.179997,-1.773613,2.029533,-1.714486,3.260379,-3.858651,5.171188,8.234674,-1.952070,1.425377,-7.479258,-9.451119,7.281215,-1.792179,-6.278441,5.169242,-9.060734,-5.615903,-9.746238,-4.593554,1.680724,-8.417123,1.946792,3.738898,2.158977,-7.554306,8.299455,-0.713877,-3.290427,-9.827733,-8.426288,-4.163196,8.074624,-9.704244,2.839367,-2.828430,-5.924620,4.445408,-5.394178,4.711001,6.931002,6.911539,-9.542261,0.954177,9.098332,-1.848994,7.137810,-0.577551,1.928932,-9.809729,-5.159916,3.009528,2.889925,-5.537580,5.100511,9.644033,4.834785,8.818558,-3.363712,-6.620993,0.405213,4.788663,5.955384,3.067359,0.601552,8.965924,-9.943517,-6.360798,3.734256,0.835782,-9.319590,1.544970,-3.127008,0.551379,6.949019,-9.659475,-2.239206,7.930826,6.125357,2.942236,-7.624573,-2.964263,9.448565,8.926423,9.059614,-7.774673,7.902158,1.491752,-2.461256,9.551232,4.410230,-9.860342,9.868849,9.176089,7.578864,2.659834,-9.792772,-3.350015,-4.413991,-7.840488,6.161668,4.111396,5.420747,-3.081014,-8.482119,3.576719,6.808079,3.678070,-0.981747,4.989811,4.623850,4.006338,5.005740,-9.133886,8.895277,6.536790,5.793424,-1.072595,-1.300367,-0.151186,-7.625510,-7.075163,-8.438914,-2.433024,-6.789684,-9.575513,1.884530,1.523834,2.863868,-3.559727,3.541959,6.533315,6.009641,6.335091,-8.272507,-5.318606,1.495170,-8.917017,-4.605868,-0.311323,2.042907,6.034348,9.719991,5.067430,-4.415664,6.794431,9.596739,-2.363328,-2.695506,-2.448836,1.223720,3.342070,2.571081,-8.800182,5.923624,6.194813,2.567772,4.665285,4.807740,-7.292954,-1.973921,4.470764,-1.289558,-1.259144,0.034177,-6.530456,8.030276,-9.630931,3.001295,3.560128,0.558272,4.662155,2.156864,1.300734,4.582395,-0.066134,-7.852630,-8.175885,6.998531,5.976215,6.414302,2.625503,-5.196992,-6.027616,5.178984,-4.525743,-5.485542,0.459537,-4.284787,-7.409861,-5.259187,9.296549,5.343233,-7.113344,0.660379,4.158355,1.341589,4.581012,-9.898317,5.783142,3.705878,3.880225,-7.395397,3.636457,9.675891,-8.838338,-2.499898,-1.681048,4.568511,-0.812812,1.643937,-2.228245,4.194156,-3.757310,7.885900,2.988761,2.960506,-3.804970,6.071363,-2.881277,6.259878,0.008685,-3.102697,3.947824,-7.212534,-9.143207,-7.850195,-3.447125,9.047643,2.140269,-0.941722,9.998712,9.411867,4.443195,-9.526873,-6.136761,7.407821,7.615550,1.234820,7.589102,1.590655,4.182114,-1.600446,0.348790,-6.071447,-2.679468], dtype = "float64")#candidate|8966|(924,)|const|float64
call_8965 = relay.TupleGetItem(func_6086_call(relay.reshape(const_8966.astype('float64'), [1, 924]), relay.reshape(const_8847.astype('float32'), [1, 832]), ), 6)
call_8967 = relay.TupleGetItem(func_6090_call(relay.reshape(const_8966.astype('float64'), [1, 924]), relay.reshape(const_8847.astype('float32'), [1, 832]), ), 6)
const_8995 = relay.const([[-7.515735,-6.652204,-4.566938,9.503232,-3.875328,2.770196,7.358856,-6.509921,-7.377264,-9.666793,1.580716,0.897500,-5.801754,6.305309,-3.177821,-9.201908,8.859355,-6.576208,-5.881000,-0.214733,7.826128,9.025044,-3.760288,-6.437501,6.182301,-2.424716,9.033113,-9.297755,-5.601963,-0.818545,-7.908190,9.906786,8.467298,9.102243,-4.051781,-5.261801,6.599857,-8.662364,0.776013,-2.618113,1.710263,0.599500,4.736706,-0.215450,6.555533,-7.923417,0.721511,-1.761751,9.287572,7.488247,5.155345,6.435947,3.727906,9.472014,-7.937761,-5.659703,-6.905940,-7.447778,2.975950,9.015577,-8.904668,1.422867,-8.019859,-4.433748,7.146548,7.551376,-4.249898,-4.606514,-3.914298,-3.898378,4.826951,3.397139,5.241168,5.502728,-9.585922,6.022893,7.011830,6.956111,-8.269042,0.300400,4.782893,9.586306,-7.826101,6.857036,7.951046,2.656147,-5.051908,-9.672730,8.465612,6.649708,0.119605,-6.662653,8.682276,-1.360366,9.272865,9.932551,-5.210645,-8.922553,-3.098681,4.701239,-3.689724,1.335834,9.926591,-1.600971,6.877209,4.702128,-0.607623,2.439574,9.191995,-0.282223,-5.238419,0.272186,-7.492833,5.012543,5.222086,-5.541688,0.118500,7.585769,3.881137,7.559937,8.857118,6.752940,-6.037151,8.299380,-7.272243,9.620107,0.219782,0.242171,-5.374717,4.214976,-1.859198,3.694049,0.202580,-6.206824,-2.526507,6.166577,-1.476090,-1.609433,-6.433710,-1.005651,9.726426,2.705623,-0.464544,-4.332784,4.343572,2.414683,6.208228,7.398951,4.559158,0.424580,-7.031333,7.299721,-6.041593,3.289896,4.498522,5.327059,8.902979,2.977798,-0.714625,6.297788,2.259389,8.651183,9.761150,4.708498,-3.339513,6.210054,-3.372151,-8.388192,-4.185160,8.457329,2.114175,-9.010739,8.796530,0.817513,2.663679,3.730539,9.611316,0.409854,0.966142,4.955894,2.313482,-1.540196,2.412304,-5.307923,7.003756,0.561356,9.960401,8.666888,1.841219,-7.995306,1.024841,-3.578307,-2.346573,-7.431749,-7.904312,4.035237,-1.487520,3.214442],[-5.581581,6.504561,6.544608,3.252167,-8.472485,7.435585,4.926860,-5.021459,3.975964,6.612133,-1.334298,-8.666757,4.232923,-9.496372,4.331880,0.748260,-8.327020,7.328748,7.948463,-6.428110,-3.385039,1.123859,4.989835,-7.022242,-0.328551,-2.338101,4.408334,-8.925434,-5.128344,-5.285804,-6.319767,-2.220341,-6.644117,4.159540,-6.449255,1.934674,5.840581,-5.612100,-5.368849,-2.982651,-0.040778,2.245985,3.301613,-4.990043,2.516493,3.230056,-2.279462,-4.180667,-4.531262,-1.558452,8.126689,1.878251,-4.998282,7.431874,-8.980020,-1.966454,-3.264058,0.947873,3.012888,4.729976,-6.781870,-5.322353,-4.919941,-1.708660,-3.761496,2.147008,-3.079530,2.300447,-3.573187,-3.971381,-3.657442,3.926549,-5.992163,-4.230988,-1.511515,-6.073495,-5.857261,9.675624,5.626032,0.177266,-2.287238,4.818648,5.146303,-5.571957,3.992291,6.312785,2.432725,-4.079403,1.662980,1.793319,3.738927,-5.941311,-8.485126,-0.134675,2.389666,-0.625851,9.227804,6.314042,-5.968551,-7.441223,-7.389658,3.228489,9.904574,6.292645,-2.120988,-9.334514,1.077007,3.349245,6.758347,0.955823,-1.866269,-1.166946,-5.226635,-5.053384,2.295626,-0.979343,-6.666196,9.876988,-1.901883,-1.002875,0.959973,-3.308794,-2.640803,0.069945,2.761628,-8.516553,-1.132732,1.015632,-3.789377,0.628412,6.778348,4.142138,4.825608,9.888929,-2.176504,-2.530932,-1.272817,-4.472885,-6.851934,-8.271267,-7.589163,6.467193,-9.004870,4.363700,0.683789,-7.984688,6.654403,-3.659435,6.728062,-7.851829,-1.819583,3.001439,3.756497,1.633585,5.615837,3.550931,-2.653828,-9.958368,-6.604383,-2.251403,-9.047958,-5.263924,-5.191601,-1.153821,-0.319415,6.242037,7.796711,8.311842,-1.038895,2.488780,3.098866,-9.415746,3.342782,-2.065173,-6.532433,2.043094,9.176960,-3.691741,0.504304,1.661229,5.145055,-5.384483,-0.279837,4.585615,-1.147488,-9.961913,-8.969014,5.920966,-9.470727,3.009600,-8.797361,5.582614,-5.895495,-6.248520,9.853332,9.226359,-6.073250,9.401828],[6.560149,-2.639771,2.674659,3.306583,6.785903,-2.194032,-8.521340,-3.284500,-5.083158,2.062829,-5.001021,-7.947365,6.499222,-1.324273,2.374483,-4.941948,7.701014,-0.753663,-9.150890,-2.731946,7.965910,1.270228,-2.937886,-9.878920,0.189575,9.550242,0.744739,6.629923,0.745139,6.083411,-6.914930,5.036911,-9.312232,-2.238578,-1.205398,-9.335006,3.415408,1.116213,2.086442,5.703057,4.038488,-7.806614,-1.710533,-9.887744,-4.354647,9.277598,0.345226,-3.229951,-7.148643,-1.742226,1.299722,-9.510587,-9.165922,-0.128715,-6.718492,3.167521,-8.831822,-0.448268,2.574850,-1.003006,-1.617762,-1.555857,-9.278206,6.982864,-8.983489,6.967044,-4.545662,-7.912532,-2.020591,9.633158,-7.821958,-9.510570,-0.812825,-1.753579,0.933005,6.762651,-9.720543,-7.130965,-9.876724,5.033030,2.168627,-3.034504,7.063868,0.199984,9.726639,-7.450502,0.380491,-8.411781,7.427966,4.849386,7.139545,6.062576,1.733152,2.454254,5.105862,-0.329259,8.204551,2.778093,9.156550,-8.430947,5.170793,1.894170,-1.239983,-4.081226,-2.040447,-7.082702,4.871922,9.958938,2.398455,-3.713490,5.515206,-7.603553,-1.871929,2.647693,-2.253728,-7.723366,-7.972531,-4.964008,-4.356365,9.897181,-1.213589,-9.162768,7.740762,-2.200655,-4.842979,8.605520,1.273005,0.295820,6.257962,-8.054895,-1.650368,9.758248,-8.027640,9.569383,5.098616,4.140134,3.822524,7.644566,4.204562,7.901925,-3.374373,6.689174,-3.116706,6.856084,-6.191065,0.142136,4.780095,0.165824,-5.985522,-2.356530,4.198321,-2.131486,2.222504,3.546360,7.089035,0.598873,-0.587364,-1.807747,6.254359,-4.760972,1.042059,-0.774948,5.971078,-1.326923,2.839511,3.217363,-7.422384,8.243821,6.798410,-3.477224,5.684717,-2.451478,-6.279797,4.926965,5.944684,6.369264,1.519686,5.715293,-6.820546,1.060387,-5.018194,-1.289038,-2.125996,-6.916095,9.250557,-9.933691,-1.010171,-7.257472,0.165460,-0.069283,3.750293,8.566655,-7.773582,8.326456,-5.214707,-6.781111,4.698463,3.849772],[-3.433077,3.371441,-1.467432,-0.001540,5.680461,-5.237130,-0.154424,0.642495,-1.791942,8.045785,5.037999,4.849441,5.681538,-5.595645,9.556464,-6.853855,4.039525,0.281060,1.284415,3.606101,-2.181461,-9.241820,-8.167905,-6.619687,-5.840329,8.204883,4.535492,-3.577274,-4.183544,3.017173,-9.220708,6.676142,-8.807446,-8.506952,3.648190,-9.236531,2.948452,-6.787501,-9.457174,-4.051625,-2.972934,-1.766967,5.824949,-3.445841,8.303128,3.275527,9.602008,2.077539,8.540595,-6.575181,5.628282,-5.253092,6.539705,9.099840,4.540592,-6.043792,6.440432,6.396777,7.726356,6.022701,-5.405633,8.254682,8.328407,2.806255,-4.241561,8.862132,-2.507867,-5.648975,0.180016,5.265372,5.015756,-2.517598,-7.423164,7.351003,-7.383600,-7.578477,9.807162,-5.939282,-0.227077,2.964843,8.105172,6.671641,-1.963729,5.517782,8.721456,2.703925,6.404085,1.220282,7.593897,8.862006,4.834319,-9.152682,5.589720,-3.234565,-2.524720,-5.605755,-9.753791,8.402792,2.721305,-3.580904,9.879619,-6.553873,-2.264984,-0.325549,-8.162283,9.935766,6.549290,3.466399,-6.284536,2.965107,8.927366,5.117556,0.654429,2.075513,4.884250,1.033336,6.302962,8.336678,4.785757,9.214579,-5.238693,-9.870942,1.147688,-0.106000,0.356061,-1.278558,-9.411804,-7.377920,4.279366,-4.023107,-7.019364,8.829614,2.598978,7.050814,0.844847,5.779091,3.043067,9.657396,9.653670,-3.053104,3.456192,3.855451,-3.270475,7.461310,7.529017,5.512736,9.255090,3.501336,3.345647,-3.869391,-6.705576,-8.452727,2.069950,-4.893567,-3.735694,6.519997,3.944546,9.846171,-8.081481,2.008012,-3.473023,4.831805,-4.645824,3.780235,1.252657,-7.324157,8.978375,3.510312,-4.157664,7.055128,3.432742,9.408557,9.941115,-0.166898,8.898648,-5.591363,-7.622456,-8.840160,-1.532454,7.178990,8.188622,3.923599,-8.763634,4.445869,-3.319834,3.932326,3.009730,9.750742,1.268891,-3.258263,0.012142,8.944926,4.053954,-4.936910,2.449001,0.727012,9.621326,1.704440],[-8.138166,8.425412,7.543874,-6.029401,0.828094,3.660519,8.935996,8.359355,-2.301664,3.814257,-8.262393,-7.886479,0.182977,-6.441151,-1.894995,-6.127693,-3.651285,-6.259478,7.644232,-6.370214,-5.837268,5.327977,-0.106294,-4.150507,8.327782,-3.182133,-7.027543,2.260076,-4.073108,-4.350710,1.800207,2.844263,-2.098545,2.920463,-3.859299,-4.929344,-3.644744,0.772977,7.722354,0.407107,9.796979,-6.292121,-2.923455,5.668141,-3.960677,-9.606050,-5.496157,6.958730,4.948683,-7.356794,6.148986,-4.905867,7.653767,-6.973624,8.555511,2.038772,9.246736,-6.096262,-9.141066,-9.568505,-4.675318,-6.883159,6.372212,1.413932,0.232244,-2.892462,2.754336,-3.530773,-2.186463,8.335672,-7.684473,-4.513015,-6.846881,-9.572150,-1.384055,5.798723,5.204349,-7.303137,-2.276753,1.817995,0.745675,-0.676701,-8.170558,5.295138,8.138447,-8.933610,-3.635045,4.241856,-1.478177,1.819707,-6.064631,1.275634,-9.445366,-0.276540,5.745621,-6.812312,-7.142667,7.560889,3.296327,8.736091,2.422766,8.128708,8.515282,0.231923,-4.932904,-5.430483,2.214582,-9.542472,6.642568,-1.382037,-6.120146,-4.264508,1.235375,0.667965,-4.623569,7.764838,-1.072551,7.086376,6.952214,5.302904,8.183254,7.237077,5.514576,4.725833,-1.606565,-8.565664,-3.754101,7.289866,-8.505923,4.076519,-7.904524,2.645220,8.534460,-7.540034,6.275589,-8.603502,2.897002,6.678807,1.349533,-7.853702,8.035336,-2.947033,9.928881,2.757548,-1.371059,-2.573999,-3.671155,5.556586,4.489808,-4.077377,-7.189559,8.667240,-1.356280,-6.494702,0.734373,-0.882628,9.635981,4.499919,-7.975337,3.494948,4.490206,0.958944,6.855766,8.920946,-4.058617,7.407783,-8.250349,9.721419,2.691359,-4.398602,-5.177584,3.238467,4.120921,-7.887797,-2.885800,-0.509266,3.973274,0.256388,-3.987540,1.628492,-6.757771,0.520895,-4.026086,-1.769491,1.349039,-4.277057,8.813669,7.640545,-1.259516,-0.983464,0.580479,-5.994151,7.355714,1.874839,-4.447894,-4.104691,0.995677,8.405696],[-6.340502,-5.717144,-0.093486,2.450293,-3.484877,-2.015507,-6.529301,3.765115,2.985797,1.024006,2.746457,5.288391,8.494029,6.703618,1.739336,-1.701232,-2.368158,3.811492,-3.006193,-2.978867,-9.996115,0.367453,8.004803,-5.573660,0.053761,0.220655,5.163821,-6.738080,0.549358,0.534281,1.812246,-5.226613,-9.010388,-8.614950,2.054520,-9.823906,-1.178163,-7.408943,-3.738854,-7.971391,-8.355878,7.946109,-4.772352,6.588860,6.490131,7.687235,-6.147255,-4.969472,8.124524,7.930427,8.846976,-6.544058,-2.425849,8.083334,-2.295598,-3.382304,-8.503391,-4.076763,1.454988,-4.236312,-1.454975,0.543189,8.974279,-5.968406,6.542864,5.383925,9.672375,-5.013717,5.532273,-2.912083,3.909471,-5.292054,-8.868679,7.970992,-4.870664,-5.926463,5.118205,-1.718599,1.016590,5.211127,-3.909040,7.526938,3.007290,5.050773,-6.023253,-3.640636,-3.931081,6.706429,2.877678,0.238620,-0.603864,-1.767082,9.821869,-2.934429,3.590449,2.680825,7.670863,4.114225,-9.292353,5.317543,3.542493,8.433822,-3.884028,-4.761228,1.035294,-3.046006,-0.035265,5.566938,0.366757,-7.345224,0.328900,-9.269434,1.566847,0.811612,6.592371,-0.440293,-2.498866,-3.814247,-4.164954,-1.282237,-4.601639,7.270227,-2.194003,2.312945,-1.487404,-8.659898,8.029448,-3.663618,4.533920,7.300412,-0.771749,3.767995,4.924786,-2.502737,-0.957515,1.843048,9.397510,9.696557,1.280908,4.068426,7.125952,5.083407,-9.160415,7.063983,-8.485411,-8.530490,-6.195102,8.292241,-1.596214,4.409584,3.424686,0.566491,7.927306,-7.637914,0.423310,-8.134019,5.592530,-9.300878,-1.717304,1.125464,-7.536501,7.855964,4.654217,-4.842537,-4.917826,7.795917,-5.466244,-7.449657,6.583752,-8.593952,-6.431345,8.606646,-3.264383,-3.240771,0.715385,7.189209,2.201985,-4.529190,-6.479292,-2.940524,-3.623091,-3.933970,5.098966,-0.565399,6.437482,1.836255,-0.599622,5.062733,-4.702925,5.848765,-7.281094,7.325536,4.996832,-9.548365,-4.528922,8.292784,-6.201334,1.224485],[-0.596194,0.748794,-0.206937,-6.567654,4.899713,-3.371676,2.695657,-8.926858,-2.779713,4.350114,9.865177,0.561359,8.587101,9.562550,-5.068460,6.533520,-4.141111,-2.472237,1.652371,0.894360,4.062107,5.261758,9.429786,-5.121964,6.930534,-8.455808,6.189723,0.023717,-2.079590,8.523876,1.932984,7.097180,3.740634,3.499297,-7.607475,5.589872,-8.592101,-4.376407,-7.893115,2.868476,0.814368,7.523086,-1.983295,2.487399,8.864813,9.242734,4.344539,-4.342424,5.505348,9.793869,7.455171,9.206945,2.471199,6.041926,-5.728223,-3.172246,-4.990205,-8.068606,-2.160559,3.495036,-3.210578,-8.405778,-8.435897,-6.489387,-3.016658,1.152315,3.606149,1.625635,9.912677,-0.452465,-9.871371,8.377900,-8.358970,0.629777,1.134802,-8.792471,4.917059,4.754271,-0.943726,6.189068,0.232297,-8.213310,0.053887,-6.479037,-9.969265,-6.561694,7.635978,-3.311502,-8.109896,-3.926698,-6.623146,4.410553,9.118613,5.004656,2.233338,1.844233,-9.922977,5.796774,6.773785,-4.916455,-9.980959,-6.469806,-7.388176,-1.048411,-5.193828,-2.059613,8.168054,3.592440,-7.506011,-8.893302,2.413383,-7.564353,3.847730,-2.381592,5.402124,2.710724,8.436660,8.558344,-1.117473,-2.769240,-8.004616,9.382543,5.288596,1.370074,-9.671937,1.367276,6.272909,3.746562,4.490119,6.072431,-4.213701,-0.446296,9.797206,0.553164,1.862301,-0.300382,-7.060753,-0.002632,-8.215168,8.770455,1.861927,6.652515,-2.470009,-7.323915,-3.111415,7.971048,-0.823402,-2.075033,1.600956,5.975734,-6.411473,3.390824,5.743104,-8.863601,0.373436,-4.655037,-1.160818,8.535194,-9.108330,-4.976710,0.650627,3.405227,7.470554,9.895087,3.695373,-9.061829,7.415389,-9.811637,4.485250,-1.135974,-6.928806,9.567861,-5.353701,-0.143320,-8.201868,4.783390,-3.931339,3.347186,7.189284,-1.933516,8.736639,-1.698399,-9.545692,-2.756783,9.845075,-6.053173,3.464937,-6.749008,-8.683479,5.009264,6.856241,7.486491,4.993647,0.710992,7.451439,-4.311623,-7.269369,1.997513],[2.480479,-5.667903,1.589828,9.970033,6.027690,-6.255018,-0.074359,-9.756117,7.454193,8.794093,4.681269,4.694787,-6.624416,9.527581,-9.212223,-8.517555,-0.574667,-0.164044,9.422436,9.619251,1.988764,1.719676,3.884499,5.698789,2.085042,9.954451,3.766999,7.612777,-5.160983,8.762362,-4.220391,1.569682,-9.214581,-1.474857,2.095093,-8.792509,8.776715,-9.374984,-8.297785,5.575086,-7.547517,-7.535697,8.532905,2.697536,-7.062237,-8.431409,-2.891996,-4.891908,3.600402,6.117944,-2.735185,8.659308,2.347135,-7.844141,5.154067,9.765361,-7.124053,-6.023670,3.482675,-6.119416,-5.231068,-8.315463,-4.146641,0.720143,2.271416,-1.612647,2.767993,-8.602371,9.368965,-0.639274,-6.472656,-2.665362,8.142432,1.666997,-1.660584,-4.141518,-1.353040,-0.422653,6.984528,4.121648,-6.956159,-2.028245,6.537063,-7.540554,7.580324,-8.657657,-2.735936,6.411210,5.690300,-1.522878,-0.593137,-9.439138,-5.840059,1.419920,-7.182582,-4.533047,-4.801189,-4.458010,0.103008,-6.273030,9.862455,5.924689,0.386209,1.845710,3.323675,-8.542169,5.497330,-5.774549,7.068031,3.269654,-2.583018,-6.998029,0.400359,3.262228,3.453132,7.311047,-6.249313,-2.624356,3.821588,-6.313123,-7.140069,-4.842372,6.110978,7.554798,-4.693719,-8.625052,-6.479188,0.693603,-9.822423,0.972359,-5.029544,-8.522714,9.786642,-0.609541,2.882085,5.108072,-7.086543,2.104211,-2.351403,-4.620449,5.848014,-0.920585,-3.307641,6.928978,-6.414763,-7.882060,-9.798945,1.575344,-0.050246,-6.291246,-7.167367,4.659027,-4.369724,-7.343298,2.437646,4.016593,3.338115,-0.281950,-3.345047,-7.063289,-0.384402,7.760893,-5.490970,-8.472267,4.876399,-5.329728,-4.045220,-4.472341,-6.714160,-3.884026,6.541134,-2.896479,8.650891,-0.471609,2.716057,-2.430197,-9.155918,-8.553064,-9.649622,4.899012,8.794606,8.219561,7.798936,-6.514954,-9.442807,6.917867,3.700547,-3.299249,-6.648978,-7.230374,-8.159124,-9.005217,-7.757891,9.020924,6.609181,-4.861923,-3.151181,5.697865]], dtype = "float32")#candidate|8995|(8, 198)|const|float32
bop_8996 = relay.logical_or(uop_8953.astype('bool'), const_8995.astype('bool')) # shape=(8, 198)
output = relay.Tuple([call_8815,call_8843,const_8844,var_8846,const_8847,call_8853,call_8880,var_8881,var_8882,call_8906,call_8912,call_8921,call_8938,var_8939,call_8949,const_8950,const_8951,call_8959,const_8960,call_8965,const_8966,bop_8996,])
output2 = relay.Tuple([call_8816,call_8848,const_8844,var_8846,const_8847,call_8854,call_8883,var_8881,var_8882,call_8907,call_8913,call_8922,call_8940,var_8939,call_8952,const_8950,const_8951,call_8961,const_8960,call_8967,const_8966,bop_8996,])
func_9002 = relay.Function([var_8846,var_8881,var_8882,var_8939,], output)
mod['func_9002'] = func_9002
mod = relay.transform.InferType()(mod)
mutated_mod['func_9002'] = func_9002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9002_call = mutated_mod.get_global_var('func_9002')
var_9004 = relay.var("var_9004", dtype = "bool", shape = (60,))#candidate|9004|(60,)|var|bool
var_9005 = relay.var("var_9005", dtype = "int64", shape = (15, 195))#candidate|9005|(15, 195)|var|int64
var_9006 = relay.var("var_9006", dtype = "uint16", shape = (192,))#candidate|9006|(192,)|var|uint16
var_9007 = relay.var("var_9007", dtype = "float32", shape = (154, 2))#candidate|9007|(154, 2)|var|float32
call_9003 = func_9002_call(var_9004,var_9005,var_9006,var_9007,)
output = call_9003
func_9008 = relay.Function([var_9004,var_9005,var_9006,var_9007,], output)
mutated_mod['func_9008'] = func_9008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5102_call = mod.get_global_var('func_5102')
func_5104_call = mutated_mod.get_global_var('func_5104')
call_9128 = func_5102_call()
call_9129 = func_5102_call()
output = relay.Tuple([call_9128,])
output2 = relay.Tuple([call_9129,])
func_9134 = relay.Function([], output)
mod['func_9134'] = func_9134
mod = relay.transform.InferType()(mod)
output = func_9134()
func_9135 = relay.Function([], output)
mutated_mod['func_9135'] = func_9135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_9189 = func_4084_call()
call_9190 = func_4084_call()
func_2930_call = mod.get_global_var('func_2930')
func_2934_call = mutated_mod.get_global_var('func_2934')
const_9204 = relay.const([-1.121392,-8.300466,-5.703815,1.972049,-4.642750,4.928022,2.404224,-5.496758,7.269779,8.613762,9.194926,3.068336,3.552312,-8.740449,-6.552991,4.426950,-4.448691,8.167682,-3.782048,-2.942433,5.641010,-4.788182,-2.342899,5.612319,3.003535,-0.654056,-1.526460,0.389764,0.934993,-4.861402,1.049772,4.261029,2.225847,8.692987,9.516027,-4.931191,9.732874,9.020241,-6.765462,3.542655,5.057464,-5.835388,-5.325171,-9.567414,3.407906,1.972580,-9.482151,-7.337280,-9.956382,7.467418,-2.489991,-6.652426,-8.042764,2.873369,-1.554664,-8.719844,-4.275083,3.848098,6.811603,5.471835,-6.626436,9.968542,7.619181,-5.541340,2.822931,2.281893,-4.865957,-0.901648,-8.133467,4.451624,-0.970106,-2.489672,-9.783979,3.484238,5.729444,5.874826,-8.621569,-8.898646,-5.585161,6.116640,-0.443533,5.420857,-7.001639,-4.699463,-2.344474,4.295379,9.011625,0.298333,-1.450971,3.299098,2.920186,3.909770,-4.762376,1.935924,8.249921,-5.824997,-1.490426,-6.360477,4.791405,9.771856,-2.286388,1.646940,-5.376941,6.836296,6.395071,1.465051,7.343894,-3.626831,-6.623022,7.296054,-1.612166,-3.535656,8.773411,8.736453,6.165632,-1.078471,-0.600037,5.516835,3.605137,9.335206,-3.456356,2.790470,9.031635,0.566401,-8.555798,9.082144,-5.921351,2.971177,-3.202481,2.268024,7.142351,7.062280,2.994214,-3.638908,-4.559748,9.738670,-1.455038,-1.686186,0.296843,-8.838086,-8.322255,-8.510429,6.052991,8.560327,9.620121,9.228894,-3.552388,-2.845815,7.699637,-0.358873,-4.361861,-2.403611,8.160667,-0.499937,-9.465626,-5.388539,7.481267,-6.459546,-7.326645,-9.577235,-0.586768,-0.522923,2.803622,-8.166684,6.035052,-0.464044,-6.746420,9.208984,6.151402,-9.204443,-3.299155,0.180458,-6.412399,-6.641069,8.280496,-2.838258,-7.866262,-8.494860,4.018433,-5.383452,-2.275713,-7.493531,-0.200814,-1.574911,1.335107,7.724409,3.001409,8.585114,-8.734133,-2.673923,0.464221,7.183105,6.570985,3.492187,-2.923230,8.583446,-3.327700,-9.758055,8.293048,-8.622463,3.451551,-6.148023,-8.078165,-7.629336,0.954714,-5.454745,5.293050,-7.620624,-0.038443,1.085946,-4.256987,5.085808,-5.125762,7.984296,-4.569102,8.450504,7.362906,-2.037009,0.827410,4.536109,1.735883,0.532850,1.546571,9.806676,0.222180,1.779307,6.438248,-3.433273,-8.596997,-9.170558,-1.548659,-7.182556,1.606144,5.001802,-3.922709,-2.289443,5.237506,-3.220911,6.937737,-2.744118,8.056335,-1.866605,-1.172936,-5.007459,-8.610505,9.526047,-9.016357,4.361074,-5.852240,1.575928,6.632688,-6.769653,6.774353,1.480387,-8.643565,-1.905503,4.659029,-7.562418,0.799608,-5.529610,0.858653,-5.307711,-7.012250,-4.329170,3.051568,0.368465,3.536338,9.406895,-6.808194,9.498101,-8.696190,-3.744584,9.732751,9.016661,-7.929325,-9.537163,4.776895,3.218325,-5.901997,-2.896235,5.181600,-6.795017,2.617810,-0.626855,6.654019,-3.452957,4.867363,6.887917,6.557961,1.719827,0.208265,-5.799770,5.169819,-9.358695,9.221069,2.502279,-2.876895,9.363109,4.762667,9.962237,7.770564,-2.749444,6.813813,8.509810,-3.433237,-7.238497,8.866155,-5.550822,-4.725981,-4.410416,1.901078,7.050930,-8.879346,9.418325,-8.388711,-8.792031,-4.912572,-4.715800,-5.535496,-4.816081,-4.992127,-9.946999,2.764981,-7.601098,7.327295,3.421639,-9.347344,-8.817897,4.935334,-5.233217,7.876623,-0.259988,4.405056,8.316306,-0.006219,-9.843351,-7.544352,-3.884502,8.971052,4.200822,-8.228074,4.964351,7.891889,7.657375,7.726525,-4.268931,-7.425566,-9.976667,5.259071,5.328564,-0.561738,5.636970,0.775111,-7.195870,-6.619795,8.074121,2.660042,-6.283937,3.585959,8.262521,8.289548,8.612455,-7.210044,-9.195794,5.441314,-2.501223,9.746841,-9.693975,8.432380,-8.846493,-2.670764,-2.318882,-3.512857,5.484552,-9.490031,2.575681,-3.231055,1.104500,-0.633290,2.876955,-9.404115,6.506321,3.191055,-0.095575,5.219117,-3.120427,-7.298577,6.637187,5.920621,-9.219618,1.602423,-4.379120,-5.848416,2.487469,2.066803,-9.921289,-2.296548,1.403480,3.382938,-3.483297,-1.045887,6.123555,-2.274422,-3.131263,5.835486,3.066060,-6.401165,-8.026271,-7.006368,7.414945,-9.153187,6.553105,-6.710308,-9.913852,-8.219374,-4.639240,-1.551934,8.865123,-8.143303,-6.716170,1.691337,-8.274560,5.747566,-5.050134,-4.736824,2.074298,-9.272071,1.247330,-1.436508,-4.122396,9.735267,3.040872,-6.924272,-4.267473,-5.008728,-2.995273,-3.317978,6.655095,-9.455196,1.040676,-8.489527,7.603805,5.143542,5.539029,6.646727,-5.739958,-0.483787,-3.505191,7.773346,9.462158,3.253862,8.773823,-0.259816,-4.994480,-8.312715,-8.019692,-7.485027,6.033840,-2.706462,4.707235,2.532670,-3.072294,-5.895336,-3.974518,0.836621,1.329579,-8.824687,7.609165,-7.811482,9.297152,9.400824,6.312380,1.578892,-6.698980,7.485506,0.464097,5.673130,-3.564127,-1.794801,3.006501,-3.959762,1.928607,9.171407,9.219710,-9.018872,8.500769,-0.574069,2.342090,7.552685,-9.295754,-5.646464,3.580286,6.416410,9.492999,9.939506,-3.524509,4.446846,-8.207573,-8.543746,-2.463476,-4.761835,-7.625125,-1.605762,-5.406377,9.380763,-8.211444,9.568371,-7.556289,4.909863,-8.897573,-5.475758,-4.811789,-1.541233,1.843305,8.890690,1.180093,9.414132,-8.541184,-5.462388,8.258053,7.380308,1.929639,-5.673061,-0.583350,6.913570,-5.466859,2.980601,0.619595,2.411895,-6.099489,8.922172,-7.442858,0.046809,-5.702022,2.858452,-2.443330,-5.482139,3.989713,4.573124,-1.758938,5.610637,-1.949006,-1.042885,-5.354868,-3.861482,-8.915508,9.070260,-2.760185,5.832631,-4.544473,8.534290,-1.141901,-0.161347,-5.528358,6.068623,-0.181224,3.512101,1.316950,-8.314169,4.449933,-9.773289,-4.892110,-7.668283,-8.740584,-5.704619,-1.579129,1.156391,6.650361,6.202790,2.094704,-8.821860,8.184851,4.319666,9.584069,-5.042436,-4.469026,-0.997487,-2.687506,-0.253545,1.516249,2.355089,-5.218018,-5.198302,-2.108325,5.594031,-0.157481,0.776275,8.133961,-9.291862,3.115693,3.121343,2.747095,-6.279345,-0.080631,-7.294438,2.115583,0.493697,4.813542,2.805920,9.911759,3.462823,4.135775,6.655482,1.580200,4.041394,4.315666,5.911043,8.542327,-5.873823,-4.631029,4.078437,2.039928,8.586254,-1.111011,-7.130759,8.639398,0.251319,6.188232,0.530636,-5.310997,8.781186,2.683577,-7.560734,-5.893011,-6.390633,8.902060,3.991022,-8.531061,4.708692,0.582318,3.016343,-6.175939,8.106182,8.965275,-0.677115,-7.650573,9.520468,-3.589778,-4.576532,7.893172,4.758181,-3.162862,3.991647,2.495778,8.044016,-4.977148,0.776810,0.210953,-4.880678,5.325733,-0.879806,-0.681560,0.611019,3.827779,-4.049017,-6.703760,5.909417,-8.861758,-2.207511,-2.743052,-8.830357,-8.075794,5.671771,2.582619,-5.298100,-9.775029,-1.580923,5.948011,-4.570242,1.557915,1.757817,-9.102111,-2.027148,2.466834,3.902584,-3.357150,-4.917609,3.279101,-7.636062,-4.434727,-9.728158,1.754841,5.050620,-6.394741,4.186515,-8.445159,-0.288706,5.528492,2.277293,1.880301,-0.161747,9.752023,-8.853818,-7.680920,7.055263,3.037387,-5.498603,-3.474708,7.525716,7.835644,-1.460927,1.671426,-7.684959,9.014116,6.578814,-8.457450,-3.879680,1.629325,0.384149,8.778396,-8.311132,-7.855026,6.925694,-2.738859,8.012463,5.431110,-3.210834,-3.578783,9.083396,-3.236479,-9.965823,4.479986,-1.177835,7.345841,-5.464045,-2.666287,-0.753176,2.129255,1.045376,-8.333503,9.370397,-4.066810,6.157748,4.830809,-8.619904,6.798453,-5.444653,2.818126,9.654716,-7.605746,1.116054,-1.935102,4.451884,5.523652,-7.626509,-2.691452,8.361836,1.429952,6.568327,-7.537900,-3.272372,1.096336,-7.685328,-1.112516,7.962682,9.269142,0.564034,-0.046267,-6.770448,-4.918550,-8.777400,-4.483536,6.203612,-2.753100,-9.125682,5.601763,-0.019552,-3.639246,3.258495,6.520830,2.367642,-4.960730,-8.642126,-6.089750,-0.515538,8.037646,3.689713,1.570859,0.094748,2.155498,-4.061931,9.117980,8.308090,1.047025,-3.865213,-0.488358,1.642409,-1.083573,3.935922,-2.113551,9.249694,-8.527931,-8.989949,-8.618089,8.834184,8.621429,-2.835826,4.065709,-8.558364,-1.433892,1.406356,5.748983,2.001529,-2.638284,-4.387241,9.702496,0.120016,-0.467220,5.541581,6.879186,-4.826201,-8.275594,7.855421,8.901601,-1.953561,-9.225563,-0.543967,-3.831771,-9.563089,-1.561120,-6.762699,-8.659714,-7.973740,1.901979,3.221305,-2.403826,7.951584,-9.103328,-0.743820,8.636763,-2.516116,-6.413375,7.550350,-2.157496,-3.726722,-0.845727,-3.697523,-4.983818,7.859573,-4.445804,-8.089036,-5.303366,3.961332,5.186513,-1.794520,-3.179580,-3.256348,1.772720,-7.005117,6.978409,1.728557,5.215941,3.274648,-4.574015,2.690444,5.270371,1.995067,9.894457,0.699765,9.573017,4.755372,-6.941331,-9.224661,9.027271,5.450463,2.620742,-6.886030,8.242811,-8.975670,-0.791001,-8.698004,-1.341791,-2.826217,3.062320,-1.379870,2.602917,-3.573683,8.416155,-6.606767,8.662998,-6.587302,-0.573140,3.638240,-2.349476,3.649826,1.766312,-7.980360,1.987565,-8.776564,-1.094227,2.543244,-1.087979,4.374276,3.505872,2.786002,-0.917625,4.482562,-9.055590,-7.818609,1.641913,-9.225097,5.284509,-6.746479,9.027240,1.115739,8.716144,4.716785,2.812486,2.145981,-1.621886,7.380158,-4.354205,0.648813,-6.985029,4.216394,7.766103,-3.842797,3.358734,-0.257522,5.416007,-0.505512,-4.302070,4.466412,9.304709,-1.137803,5.272796,-0.465005,4.288959,-8.045352,4.735400,9.413273,7.491447,0.748437,-2.659323,6.730684,-4.368139,-3.471765,-9.404600,-2.434491,-5.978400,8.327599,-4.088188,-5.638730,-4.224111,5.006919,-5.300962,-9.657442,4.348503,-7.951459,5.396249,6.030096,-1.297618,4.470556,7.461993,-2.990615,-4.745981,2.564450,8.050899,-1.586653,5.464885,3.130930,-5.885246,5.791487,1.533845,8.634976,-0.456825,-0.807347,-0.298980,8.088313,9.085182,-2.777113,2.186003,2.372808,0.536570,-6.918901,3.951493,-4.253962,-9.192425,2.253042,-1.636005,-0.941579,-9.479686,1.900855,-0.994582,-6.235099,-1.057309,-2.468086,6.659129,-5.667349,2.451257,7.690020,-0.281087,3.021226,5.245783,-9.244160,6.734395,-8.518828,-6.657988,2.211959,-5.828261,-4.574234,-5.415128,7.981165,-6.864661,-1.292678,-6.005897,6.855512,5.011090,2.529103,4.612811,-1.225455,4.422083,-4.318004,-7.324463,-7.231141,-1.725836,6.084215,6.208526,-6.923010,-4.717964,-0.995562,-9.375270,5.574233,-1.637658,-5.101651,8.651792,-1.549197,-4.964402,-7.096709,-4.963712,4.596586,4.533033,7.675424,5.488380,3.153504,-3.434938,8.659384,9.714653,3.232788,1.351630,2.129722,-8.941209,4.727083,0.148187,-8.041646,4.007440,-6.109555,-0.176228,1.730228,9.507128,-9.155070,-7.261409,-4.377702,-1.862137,5.445794,8.525896,-2.768213,6.111180,-4.589719,4.302999,-4.145775,6.667711,-9.427339,6.347900,4.764843,-4.914918,-2.520824,2.553090,-8.531676,-7.774089,-9.041511,-4.855801,-5.252643,-8.979083,-9.143559,5.468559,-0.489990,2.680834,-9.330264,2.032329,7.888469,2.936487,-3.769444,-0.750251,8.407218,1.688613,8.860110,-6.348432,6.500255,-8.430224,9.493686,-7.240236,-0.183697,-2.939303,-5.253964,3.532617,1.313732,-5.670441,8.820569,-9.024086,3.849305,-8.617406,9.369840,-4.808539,-1.565300,8.811850,-5.091195,4.903300,4.240820,-5.420929,8.707470,-9.428793,-7.196376,0.144277,4.056696,-6.166020,4.460750,3.504634,-3.275472,9.295292], dtype = "float64")#candidate|9204|(1120,)|const|float64
const_9205 = relay.const([True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False], dtype = "bool")#candidate|9205|(60,)|const|bool
const_9206 = relay.const([-5.767382,-3.625456,-0.906319,-4.551190,8.281845,-7.164257,-5.248616,-9.705156,-5.809269,-8.055787,0.190687,-0.929615,2.513175,-2.477275,-4.161911,5.565385,-9.156067,4.322273,9.638678,6.022108,-2.406082,-1.263271,-4.237382,-4.687851,-3.852166,5.409338,-9.294131,-9.928636,2.060889,-8.163855,-6.198229,-3.165336,0.039215,-5.998947,7.102613,-9.030332,4.683694,-6.125236,9.741053,-4.501711,2.235424,5.304282,-8.917382,2.597491,-8.516320,2.213108,7.843150,8.283830,6.625734,-5.544734,-6.056630,-0.958048,6.516593,8.078103,3.800225,-4.099245,0.654530,-8.242103,7.044532,9.273586,6.192395,5.639941,-9.326043,-8.566953,-9.859169,-4.058795,7.539308,-4.235268,4.277757,4.184244,9.397650,-0.487438,-8.912372,-8.322561,-9.836198,7.338774,-9.903673,4.756361,-5.152708,2.308333,-5.177112,5.027336,-3.538076,-9.727550,3.466347,1.029162,8.723872,-8.221304,-6.946652,4.204373,-4.011159,8.296101,8.960341,-0.599566,-1.300097,-8.464152,8.194665,-5.741824,9.299063,-5.899966,-4.521883,-5.836175,9.036647,4.841855,5.250427,-4.612445,-7.000714,7.317425,-1.880258,0.324091,6.569064,7.181478,5.661462,-2.149110,-9.585315,7.260946,-8.664193,-5.824166,-1.336110,-5.292836], dtype = "float64")#candidate|9206|(120,)|const|float64
call_9203 = relay.TupleGetItem(func_2930_call(relay.reshape(const_9204.astype('float64'), [14, 8, 10]), relay.reshape(const_9205.astype('bool'), [30, 2]), relay.reshape(const_9206.astype('float64'), [120,]), ), 1)
call_9207 = relay.TupleGetItem(func_2934_call(relay.reshape(const_9204.astype('float64'), [14, 8, 10]), relay.reshape(const_9205.astype('bool'), [30, 2]), relay.reshape(const_9206.astype('float64'), [120,]), ), 1)
func_4717_call = mod.get_global_var('func_4717')
func_4723_call = mutated_mod.get_global_var('func_4723')
var_9220 = relay.var("var_9220", dtype = "int64", shape = (2925,))#candidate|9220|(2925,)|var|int64
const_9221 = relay.const([1,-7,-2,-6,-7,2,4,7,3,3,10,-1,3,2,3,4,-7,-4,-9,-3,7,6,-5,1,4,3,3,2,-3,-5,-6,-8,-2,-1,-5,9,-10,-3,10,4,-9,8,1,10,-6,10,-6,2,1,10,10,9,-4,4,6,6,4,-7,-3,1,-4,9,9,7,-7,-7,-6,-6,7,-4,7,-10,3,-10,-4,6,-1,-7,6,-10,5,-9,-4,-1,4,-5,7,-4,5,-7,-4,-9,7,5,2,-8,5,-7,-2,-1,6,-9,-3,5,8,7,6,9,1,-7,-9,9,-2,-2,-7,-1,9,7,-3,-10,-6,-5,2,-6,-5,-8,-9,10,-3,6,-3,4,6,-6,6,2,-2,4,8,-8,4,9,3,5,-2,-8,5,-9,-5,-10,2,5,-8,9,-3,-10,3,10,-9,-3,-5,7,5,3,-2,5,6,9,10,-9,-7,10,8,-7,7,9,-5,4,-2,-1,9,-10,7,8,-9,10,5,7,10,-2,6,-10], dtype = "uint16")#candidate|9221|(192,)|const|uint16
call_9219 = relay.TupleGetItem(func_4717_call(relay.reshape(var_9220.astype('int64'), [2925,]), relay.reshape(const_9221.astype('uint16'), [192,]), relay.reshape(var_9220.astype('int64'), [2925,]), relay.reshape(const_9205.astype('bool'), [60,]), ), 2)
call_9222 = relay.TupleGetItem(func_4723_call(relay.reshape(var_9220.astype('int64'), [2925,]), relay.reshape(const_9221.astype('uint16'), [192,]), relay.reshape(var_9220.astype('int64'), [2925,]), relay.reshape(const_9205.astype('bool'), [60,]), ), 2)
output = relay.Tuple([call_9189,call_9203,const_9204,const_9205,const_9206,call_9219,var_9220,const_9221,])
output2 = relay.Tuple([call_9190,call_9207,const_9204,const_9205,const_9206,call_9222,var_9220,const_9221,])
func_9243 = relay.Function([var_9220,], output)
mod['func_9243'] = func_9243
mod = relay.transform.InferType()(mod)
mutated_mod['func_9243'] = func_9243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9244 = relay.var("var_9244", dtype = "int64", shape = (2925,))#candidate|9244|(2925,)|var|int64
func_9243_call = mutated_mod.get_global_var('func_9243')
call_9245 = func_9243_call(var_9244)
output = call_9245
func_9246 = relay.Function([var_9244], output)
mutated_mod['func_9246'] = func_9246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5992_call = mod.get_global_var('func_5992')
func_5993_call = mutated_mod.get_global_var('func_5993')
call_9255 = relay.TupleGetItem(func_5992_call(), 0)
call_9256 = relay.TupleGetItem(func_5993_call(), 0)
output = relay.Tuple([call_9255,])
output2 = relay.Tuple([call_9256,])
func_9281 = relay.Function([], output)
mod['func_9281'] = func_9281
mod = relay.transform.InferType()(mod)
mutated_mod['func_9281'] = func_9281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9281_call = mutated_mod.get_global_var('func_9281')
call_9282 = func_9281_call()
output = call_9282
func_9283 = relay.Function([], output)
mutated_mod['func_9283'] = func_9283
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9360 = relay.const([[[-6,-10,2,-10,-3,3,6,1,2],[-2,4,6,9,-4,-3,-8,-4,4],[10,-3,5,-2,-1,-4,5,-1,-1],[-4,9,5,-5,-2,5,4,-2,-8],[-4,-7,-3,10,-6,-8,8,-5,10],[-10,5,5,-8,3,10,6,-2,-1],[-3,-7,-1,-5,-7,-5,-10,-5,7],[-5,10,4,9,-6,-4,-8,-9,5]],[[1,9,10,-6,-3,9,2,-4,2],[-4,9,-4,8,-9,8,-9,5,7],[-5,10,-6,7,-1,-10,-8,-5,-4],[-9,2,1,3,-1,9,-4,2,2],[2,-4,10,-7,-8,-5,-1,7,2],[5,10,-4,3,5,3,-5,-7,-8],[-3,-5,-7,-5,5,-2,-4,4,3],[4,5,3,-9,3,-7,2,5,-3]],[[10,-1,-2,3,1,1,-3,-2,-6],[-6,-5,-10,-9,-4,-10,9,7,-6],[-6,-6,-6,1,-1,10,7,-10,-5],[7,-3,-10,-8,-4,2,7,-10,-5],[7,10,8,-5,5,9,8,-6,7],[-5,-9,-1,2,7,10,-10,7,-6],[9,-9,-9,-8,4,-9,2,-7,4],[1,7,-5,9,5,5,-8,5,1]],[[-8,2,-3,-5,2,7,2,-1,6],[-6,-3,-9,-2,-5,6,10,6,-6],[-2,5,4,9,2,5,-6,-10,-1],[9,6,2,-1,6,4,-6,4,10],[5,-6,-1,-4,-1,6,-3,-9,9],[1,-2,7,10,4,-5,3,-6,-9],[-7,4,9,-4,-4,-1,2,5,10],[4,5,3,-2,2,-3,-5,-7,-2]],[[8,7,9,-9,2,9,-5,-2,-10],[-10,1,-4,-6,9,-9,-8,-9,1],[4,10,-5,8,3,8,-4,8,2],[-2,-1,10,1,7,4,7,1,4],[8,3,1,-5,-2,10,6,-2,2],[7,1,-3,-5,3,-2,1,6,-3],[7,-1,10,-5,-5,3,1,3,7],[5,8,7,4,2,-2,-8,-3,-10]],[[-2,1,-1,7,6,2,-5,5,-6],[5,-8,9,-10,-7,-7,7,-1,9],[3,-4,5,2,4,5,-8,1,5],[-6,-8,-9,-1,4,-3,3,-10,-4],[-2,7,2,9,10,5,-9,-2,3],[4,8,-5,-3,-8,5,10,-8,5],[-6,-9,-4,4,7,-2,9,-6,6],[-1,-10,-1,-1,-4,9,9,6,4]],[[4,5,5,-6,3,-3,-3,-7,-3],[2,1,-1,7,-6,7,1,7,7],[-3,-6,2,7,-6,-2,3,1,10],[-6,1,8,-1,3,6,2,10,-8],[-9,-10,7,4,-6,8,6,-10,6],[-6,8,-9,-9,4,10,2,6,4],[3,-5,-2,2,-9,-6,-10,-5,4],[-3,-4,-10,8,4,3,-7,-8,5]],[[7,8,2,2,8,2,-1,5,-1],[-10,9,3,3,-10,4,1,-3,-1],[2,-8,-1,2,-3,-7,-4,-5,2],[6,-10,8,-4,-9,-7,3,-4,-2],[9,-6,5,-9,2,-3,-4,2,7],[-9,-9,7,9,-9,-1,5,-7,2],[-6,-2,-9,-3,-3,-6,-4,-9,-5],[1,8,-4,-3,9,-2,3,-6,-6]],[[-7,5,-5,10,9,-4,-8,8,-9],[7,5,-1,8,7,-10,-8,-6,-8],[-5,-2,-8,1,-5,3,3,-3,5],[7,1,-9,1,-7,10,7,2,2],[-8,-9,1,-5,4,-5,6,-4,10],[-8,-9,-5,10,4,3,-5,8,4],[-6,8,-8,6,-6,1,-4,-6,-5],[1,5,7,-3,1,-6,3,-3,-9]]], dtype = "uint64")#candidate|9360|(9, 8, 9)|const|uint64
const_9361 = relay.const([[[7,-8,9,-3,-2,-2,-8,-10,-5],[-7,8,5,-1,-7,4,-2,7,9],[7,2,8,-2,3,1,10,-8,-7],[4,7,8,1,4,4,-1,-7,10],[8,-2,-5,10,3,6,9,10,9],[1,2,7,9,6,-2,-1,-10,1],[10,-1,-9,4,6,6,-6,7,-2],[-3,-2,-9,7,3,5,-3,7,-7]],[[-2,4,7,-5,-5,-8,-7,-8,-3],[-1,8,-8,-10,-7,8,3,7,7],[-7,4,7,1,-6,-10,7,-7,-7],[-8,-9,-6,-1,6,8,9,-8,-7],[6,6,8,-8,9,-10,4,3,-2],[-8,-10,8,-8,1,-9,-10,8,-4],[-1,-3,-10,5,8,-5,9,-3,10],[4,8,5,-8,2,-10,-4,3,-1]],[[8,-6,8,-9,7,-3,-3,8,-4],[3,-7,-8,3,7,-7,8,-6,4],[-6,-8,-4,3,-10,3,1,4,10],[4,-3,-1,9,8,4,1,6,4],[-2,9,7,6,9,5,-1,5,9],[-4,7,-8,-5,-2,8,-1,4,-2],[6,-8,-7,4,-3,-2,7,3,-10],[-5,-9,8,-3,-8,10,8,8,-1]],[[-9,3,-4,-4,-2,4,-9,-9,-6],[-4,5,-7,-1,-3,1,6,-8,9],[7,-4,-2,1,9,-10,4,-7,-5],[5,1,9,-9,9,-7,1,4,2],[-6,-9,-2,4,-2,-6,7,-7,9],[-10,2,-6,-10,2,4,1,-7,-9],[-9,7,-1,-2,-4,7,-6,2,6],[6,6,-9,-2,-4,-1,7,3,-3]],[[7,-3,6,-6,6,-10,-7,6,4],[6,6,-4,3,10,3,10,-1,-3],[-4,-7,5,3,-4,5,-4,4,3],[10,-7,-1,6,-2,-8,-3,-2,-5],[10,10,6,-1,-8,-4,-3,6,5],[-2,-3,-7,9,-5,2,9,5,3],[-5,-4,1,2,2,-6,7,9,4],[1,6,4,6,-8,-1,4,7,-6]],[[6,2,10,-7,6,9,2,3,7],[-5,-9,4,8,-5,-8,3,1,-3],[3,-9,8,1,7,-7,1,7,-7],[-1,1,-9,-7,4,-8,-10,-1,-4],[-7,6,-10,10,4,-1,-10,-5,-8],[-9,-5,-4,4,-7,-5,1,-7,5],[9,-9,3,-4,-4,-4,-1,9,8],[10,9,6,-8,5,-3,1,6,-4]],[[1,3,-7,10,-10,6,4,1,-5],[9,-5,7,5,-9,-1,1,3,9],[-9,-9,-8,10,-3,5,-9,9,9],[1,7,4,-2,-10,-8,-6,8,9],[-10,-7,-1,1,9,3,8,-1,-5],[5,-1,-4,-5,-10,-6,6,8,-9],[8,-9,9,-4,-10,-4,-3,2,-3],[4,7,-1,-1,-8,-2,7,4,6]],[[10,10,6,-4,-2,-2,-3,5,8],[-2,4,-9,-5,-8,-4,2,-4,-5],[6,-9,4,-3,8,6,3,7,7],[6,4,-1,-8,-2,7,5,7,-2],[-5,-9,-5,1,4,-7,-5,3,7],[-8,8,7,7,1,-6,-4,-7,8],[-9,-2,-8,-4,-2,-4,2,5,-2],[-7,4,3,-10,5,-2,-1,-1,-4]],[[2,3,6,6,-9,-9,-3,2,-4],[-1,1,-2,-6,-4,4,7,-7,-3],[-8,-10,-7,-10,5,2,-6,-2,7],[-2,4,2,-3,7,9,-2,6,6],[10,6,9,-3,-10,-1,-8,2,8],[-2,-4,2,7,-10,5,8,3,1],[3,6,10,10,2,-9,-7,3,10],[-3,-1,-9,1,2,-3,-6,10,10]]], dtype = "uint64")#candidate|9361|(9, 8, 9)|const|uint64
bop_9362 = relay.bitwise_xor(const_9360.astype('uint64'), relay.reshape(const_9361.astype('uint64'), relay.shape_of(const_9360))) # shape=(9, 8, 9)
output = relay.Tuple([bop_9362,])
output2 = relay.Tuple([bop_9362,])
func_9366 = relay.Function([], output)
mod['func_9366'] = func_9366
mod = relay.transform.InferType()(mod)
output = func_9366()
func_9367 = relay.Function([], output)
mutated_mod['func_9367'] = func_9367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_9399 = func_4205_call()
call_9400 = func_4205_call()
var_9414 = relay.var("var_9414", dtype = "float64", shape = (16, 11, 3))#candidate|9414|(16, 11, 3)|var|float64
bop_9415 = relay.greater_equal(call_9399.astype('bool'), relay.reshape(var_9414.astype('bool'), relay.shape_of(call_9399))) # shape=(16, 11, 3)
bop_9418 = relay.greater_equal(call_9400.astype('bool'), relay.reshape(var_9414.astype('bool'), relay.shape_of(call_9400))) # shape=(16, 11, 3)
output = relay.Tuple([bop_9415,])
output2 = relay.Tuple([bop_9418,])
func_9433 = relay.Function([var_9414,], output)
mod['func_9433'] = func_9433
mod = relay.transform.InferType()(mod)
var_9434 = relay.var("var_9434", dtype = "float64", shape = (16, 11, 3))#candidate|9434|(16, 11, 3)|var|float64
output = func_9433(var_9434)
func_9435 = relay.Function([var_9434], output)
mutated_mod['func_9435'] = func_9435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mod.get_global_var('func_5398')
func_5399_call = mutated_mod.get_global_var('func_5399')
call_9539 = relay.TupleGetItem(func_5398_call(), 1)
call_9540 = relay.TupleGetItem(func_5399_call(), 1)
func_2499_call = mod.get_global_var('func_2499')
func_2501_call = mutated_mod.get_global_var('func_2501')
var_9548 = relay.var("var_9548", dtype = "float32", shape = (270, 1))#candidate|9548|(270, 1)|var|float32
call_9547 = relay.TupleGetItem(func_2499_call(relay.reshape(var_9548.astype('float32'), [15, 2, 9])), 0)
call_9549 = relay.TupleGetItem(func_2501_call(relay.reshape(var_9548.astype('float32'), [15, 2, 9])), 0)
func_6506_call = mod.get_global_var('func_6506')
func_6507_call = mutated_mod.get_global_var('func_6507')
call_9563 = func_6506_call()
call_9564 = func_6506_call()
var_9575 = relay.var("var_9575", dtype = "float32", shape = (270, 7))#candidate|9575|(270, 7)|var|float32
bop_9576 = relay.subtract(var_9548.astype('int32'), var_9575.astype('int32')) # shape=(270, 7)
func_5353_call = mod.get_global_var('func_5353')
func_5355_call = mutated_mod.get_global_var('func_5355')
call_9591 = relay.TupleGetItem(func_5353_call(), 0)
call_9592 = relay.TupleGetItem(func_5355_call(), 0)
output = relay.Tuple([call_9539,call_9547,call_9563,bop_9576,call_9591,])
output2 = relay.Tuple([call_9540,call_9549,call_9564,bop_9576,call_9592,])
func_9599 = relay.Function([var_9548,var_9575,], output)
mod['func_9599'] = func_9599
mod = relay.transform.InferType()(mod)
mutated_mod['func_9599'] = func_9599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9599_call = mutated_mod.get_global_var('func_9599')
var_9601 = relay.var("var_9601", dtype = "float32", shape = (270, 1))#candidate|9601|(270, 1)|var|float32
var_9602 = relay.var("var_9602", dtype = "float32", shape = (270, 7))#candidate|9602|(270, 7)|var|float32
call_9600 = func_9599_call(var_9601,var_9602,)
output = call_9600
func_9603 = relay.Function([var_9601,var_9602,], output)
mutated_mod['func_9603'] = func_9603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6506_call = mod.get_global_var('func_6506')
func_6507_call = mutated_mod.get_global_var('func_6507')
call_9624 = func_6506_call()
call_9625 = func_6506_call()
func_6453_call = mod.get_global_var('func_6453')
func_6455_call = mutated_mod.get_global_var('func_6455')
call_9629 = relay.TupleGetItem(func_6453_call(), 0)
call_9630 = relay.TupleGetItem(func_6455_call(), 0)
output = relay.Tuple([call_9624,call_9629,])
output2 = relay.Tuple([call_9625,call_9630,])
func_9636 = relay.Function([], output)
mod['func_9636'] = func_9636
mod = relay.transform.InferType()(mod)
output = func_9636()
func_9637 = relay.Function([], output)
mutated_mod['func_9637'] = func_9637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5805_call = mod.get_global_var('func_5805')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_9684 = func_5805_call()
call_9685 = func_5805_call()
func_6230_call = mod.get_global_var('func_6230')
func_6238_call = mutated_mod.get_global_var('func_6238')
const_9687 = relay.const([6,8,6,-4,-2,5,10,10,8,1,-2,4,-8,3,4,8,10,3,-9,2,-5,-5,-3,-3,3,-7,-10,10,-10,8,9,-5,4,-4,-6,2,3,6,-2,-5,4,4,2,2,7,7,7,-4,9,6,4,7,-7,1,4,8,7,2,6,-3,-5,10,10,7,-1,5,2,1,4,3,-8,-6,3,-6,5,3,-8,3,4,-1,4,-10,-9,8,-5,-1,-1,1,6,-2,-5,-10,5,-2,5,6,9,-10,1,2,-8,-2,-10,5,-8,-7,-2,-7,10,10,5,9,-5,4,6,3,-1,-4,-6,6,-6,1,10,8,1,9,5,-2,6,6,4,-7,2,5,-10,6,-6,5,6,9,-1,-3,-6,-7,-5,-6,10,-5,5,-2,2,1,4,-5,-9,-8,-5,-9,8,-5,6,-3,5,9,-7,-4,-9,-9,3,5,-10,-4,-6,8,-6,-8,-6,-9,6,-10,-10,-1,1,4,-4,6,4,1,-1,-3,-1,1,9,-10,-9,9,7,10,10,2,5,-9,5,8,-6,5,3,7,-6,-8,-7,6,-6,4,10,-7,-1,5,-6,-6,-7,4,-8,1,-7,-1,-7,2,1,7,-9,10,3,-10,10,3,-8,5,-7,-2,-9,-1,-9,-8,-9,4,1,2,9,3,9,-5,3,4,10,6,-10,6,10,-10,8,8,5,-3,1,4,-4,-8,-2,-8,-10,-2,1,-10,1,-9,3,8,7,-4,1,-8,-8,-3,9,-3,-6,-1,-2,-6,-10,-1,4,3,-5,10,5,-1,6,-3,5,-6,-2,6,6,6,10,-9,1,8,8,-1,7,6,-8,-8,7,-4,1,-3,-3,-4,-8,-9,-6,-6,4,7,-9,-7,-4,-10,1,7,3,10,9,-10,1,-10,6,-1,-1,-4,-1,-7,-9,3,-10,-3,-2,-10,-1,10,2,6,3,-8,6,-7,6,2,-3,-5,-7,8,3,10,2,5,9,-10,9,-9,4,1,-1,5,-8,-1,-9,2,-8,-8,-2,4,4,-6,-4,7,-10,-7,-3,-7,3,8,6,5,-4,-6,-6,8,6,3,8,9,-10,10,-1,6,6,7,4,8,7,-4,6,-10,-7,-2,5,-2,-10,-10,-9,4,-10,9,-4,-4,5,-1,4,-3,6,-6,9,-6,10,9,-4,-7,7,-10,5,10,-4,8,4,-8,9,1,-10,8,-3,-1,1,1,4,-8,7,-8,1,-10,-9,7,-2,5,-5,4,-9,5,3,-7,9,-7,-3,9,10,3,8,7,-8,4,5,-3,2,-8,4,-5,1,9,-6,-2,-8,6,-4,-7,-5,-8,-10,-9,-9,-1,-2,-5,-8,-9,-5,-1,-7,-10,-9,-3,-10,7,2,-4,2,-5,10,7,6,-4,-8,-5,-3,-6,-4,9,2,5,1,-6,-3,-5,-2,-4,-10,-9,-5,-3,-1,-3,10,10,5,7,-5,8,3,-4,10,3,-6,8,9,2,-2,5,-4,-3,10,-6,2,-4,1,-2,-6,1,-9,5,-4,-8,-1,-8,9,7,-3,4,-9,2,6,1,9,6,-2,-6,2,-3,-6,-10,-4,4,-10,-3,-9,-10,-7,1,-4,-3,-9,-3,2,6,8,-5,-4,10,-9,4,-7,5,5,1,-2,-6,-5,4,4,7,7,-4,3,7,-6,2,-5,-7,-4,10,5,8,6,7,-5,1,8,-3,1,5,-2,3,3,-8,10,-2,7,-5,6,-2,-10,-3,10,9,7,-3,10,-4,7,9,-3,6,-3,-10,5,-7,5,-3,-5,8,-8,-1,-8,1,-9,5,-1,2,2,-2,2,-3,-9,-3,1,-8,-4,-7,-4,-8,-9,6,5,-6,10,5,-7,-10,-5,5,-6,-4,2,3,-8,-2,7,6,6,9,10,-7,-2,-5,9,2,-3,-8,-8,4,3,4,1,-9,2,2,-2,10,5,-1,-7,2,1,-6,8,-6,3,-10,-10,3,7,-5,-4,4,-2,4,10,-9,3,-2,5,-3,-8,7,3,3,5,10,-4,-9,-9,-4,-8,-4,8,3,5,-4,-8,-4,-10,1,-4,-7,5,-3,-8,7,-1,6,-6,5,-4,8,-9,-4,-7,4,-8,-8,-6,9,-9,9,-7,1,3,-7,-6,-10,-7,-2,1,-6,7,-4,-6,-9,1,-6,3,4,-5,5,-5,-4,9,-7,-4,-9,-6,7,8,-6,4,-7,-1,-4,-1,-8,4,-9,2,5,-8,8,-9,-5,-1,-6,-2,1,-4,-2,4,1,3,-4,9,-10,6,-10,-5,4,5,8,-4,1,-5,-3,2,-10,-8,-10,4,4,10,-8,9,8,3,1,6,-7,6,10,6,5,-4,10,6,1,10,-8,1,-2,3,-6,-5,10,5,-1,1,6,2,-3,-2,4,-4,-10,10,1,-3,-4,10,-2,-3,-5,-1,-10,-8,3,7,-1,-2,8,-1,7,6,4,5,-2,-3,5,-9,-8,7,-5,1,-7,-7,6,4,3,7,9,-5,10,-9,3,9,-2,-5,3,5,10,7,-1,1,10,-3,-10,9,8,7,5,-1,4], dtype = "uint16")#candidate|9687|(960,)|const|uint16
var_9688 = relay.var("var_9688", dtype = "bool", shape = (160, 2))#candidate|9688|(160, 2)|var|bool
var_9689 = relay.var("var_9689", dtype = "float32", shape = (832,))#candidate|9689|(832,)|var|float32
var_9690 = relay.var("var_9690", dtype = "uint8", shape = (1, 2184))#candidate|9690|(1, 2184)|var|uint8
var_9691 = relay.var("var_9691", dtype = "uint32", shape = (99, 2))#candidate|9691|(99, 2)|var|uint32
const_9692 = relay.const([[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True]], dtype = "bool")#candidate|9692|(60, 1)|const|bool
var_9693 = relay.var("var_9693", dtype = "uint16", shape = (96, 2))#candidate|9693|(96, 2)|var|uint16
call_9686 = relay.TupleGetItem(func_6230_call(relay.reshape(const_9687.astype('uint16'), [1, 960]), relay.reshape(var_9688.astype('bool'), [320,]), relay.reshape(var_9689.astype('float32'), [832,]), relay.reshape(var_9690.astype('uint8'), [2184,]), relay.reshape(var_9691.astype('uint32'), [1, 198]), relay.reshape(const_9692.astype('bool'), [60,]), relay.reshape(var_9693.astype('uint16'), [192,]), ), 9)
call_9694 = relay.TupleGetItem(func_6238_call(relay.reshape(const_9687.astype('uint16'), [1, 960]), relay.reshape(var_9688.astype('bool'), [320,]), relay.reshape(var_9689.astype('float32'), [832,]), relay.reshape(var_9690.astype('uint8'), [2184,]), relay.reshape(var_9691.astype('uint32'), [1, 198]), relay.reshape(const_9692.astype('bool'), [60,]), relay.reshape(var_9693.astype('uint16'), [192,]), ), 9)
output = relay.Tuple([call_9684,call_9686,const_9687,var_9688,var_9689,var_9690,var_9691,const_9692,var_9693,])
output2 = relay.Tuple([call_9685,call_9694,const_9687,var_9688,var_9689,var_9690,var_9691,const_9692,var_9693,])
func_9697 = relay.Function([var_9688,var_9689,var_9690,var_9691,var_9693,], output)
mod['func_9697'] = func_9697
mod = relay.transform.InferType()(mod)
mutated_mod['func_9697'] = func_9697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9697_call = mutated_mod.get_global_var('func_9697')
var_9699 = relay.var("var_9699", dtype = "bool", shape = (160, 2))#candidate|9699|(160, 2)|var|bool
var_9700 = relay.var("var_9700", dtype = "float32", shape = (832,))#candidate|9700|(832,)|var|float32
var_9701 = relay.var("var_9701", dtype = "uint8", shape = (1, 2184))#candidate|9701|(1, 2184)|var|uint8
var_9702 = relay.var("var_9702", dtype = "uint32", shape = (99, 2))#candidate|9702|(99, 2)|var|uint32
var_9703 = relay.var("var_9703", dtype = "uint16", shape = (96, 2))#candidate|9703|(96, 2)|var|uint16
call_9698 = func_9697_call(var_9699,var_9700,var_9701,var_9702,var_9703,)
output = call_9698
func_9704 = relay.Function([var_9699,var_9700,var_9701,var_9702,var_9703,], output)
mutated_mod['func_9704'] = func_9704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9281_call = mod.get_global_var('func_9281')
func_9283_call = mutated_mod.get_global_var('func_9283')
call_9709 = relay.TupleGetItem(func_9281_call(), 0)
call_9710 = relay.TupleGetItem(func_9283_call(), 0)
func_7773_call = mod.get_global_var('func_7773')
func_7775_call = mutated_mod.get_global_var('func_7775')
call_9713 = relay.TupleGetItem(func_7773_call(), 0)
call_9714 = relay.TupleGetItem(func_7775_call(), 0)
output = relay.Tuple([call_9709,call_9713,])
output2 = relay.Tuple([call_9710,call_9714,])
func_9719 = relay.Function([], output)
mod['func_9719'] = func_9719
mod = relay.transform.InferType()(mod)
output = func_9719()
func_9720 = relay.Function([], output)
mutated_mod['func_9720'] = func_9720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6527_call = mod.get_global_var('func_6527')
func_6528_call = mutated_mod.get_global_var('func_6528')
call_9735 = relay.TupleGetItem(func_6527_call(), 0)
call_9736 = relay.TupleGetItem(func_6528_call(), 0)
output = relay.Tuple([call_9735,])
output2 = relay.Tuple([call_9736,])
func_9737 = relay.Function([], output)
mod['func_9737'] = func_9737
mod = relay.transform.InferType()(mod)
output = func_9737()
func_9738 = relay.Function([], output)
mutated_mod['func_9738'] = func_9738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4352_call = mod.get_global_var('func_4352')
func_4354_call = mutated_mod.get_global_var('func_4354')
call_9765 = relay.TupleGetItem(func_4352_call(), 0)
call_9766 = relay.TupleGetItem(func_4354_call(), 0)
func_2868_call = mod.get_global_var('func_2868')
func_2876_call = mutated_mod.get_global_var('func_2876')
const_9770 = relay.const([-6.795143,0.173747,5.241462,8.666169,-7.376235,8.492725,6.074194,4.938737,-2.407597,-3.673119,-8.708600,1.865721,0.049631,5.351475,3.716158,-8.477679,8.452023,-9.437984,-9.995218,1.821127,4.710885,1.835169,-7.318255,6.845051,7.050154,8.348409,7.871154,-5.667811,4.252377,2.982531,-7.241073,0.019963,7.024320,1.181231,7.751371,6.328102,9.893129,8.224417,9.729420,-2.746313,-6.112237,-1.836676,-8.141529,5.209501,-7.247374,-8.408856,-0.960184,-2.333560,5.950635,-3.742509,3.298505,9.263501,-4.995644,-2.580080,4.298323,7.132627,-9.607280,2.311412,-3.894675,3.903182,9.170059,2.177152,5.082817,-2.736064,7.259537,7.362002,-7.143435,6.468427,-4.622579,-4.249551,-6.078696,5.752186,3.389259,5.318393,2.856076,-7.046544,-4.046765,7.785325,6.818755,6.363183,-6.197122,5.400940,3.111986,3.600495,-9.402301,-7.673703,9.934934,-4.219364,-2.557221,-1.682753,-3.403100,9.694977,4.408012,-4.753631,-3.258878,3.518719,-3.483518,2.345155,-0.891779,1.265247,-2.728599,4.830539,-7.043051,-6.343244,-0.696674,-5.023508,9.716016,5.508772,-0.192814,0.495368,7.968224,1.997073,-7.138354,-4.716779,-8.640824,4.459781,0.801420,-8.362792,-3.819143,-2.750498,-0.097640,5.085431,-8.495945,-1.344806,-2.690647,4.704654,-4.163548,-6.936441,9.634871,4.157668,-5.678728,-4.362486,-9.560483,3.681645,2.958607,7.627583,7.830384,0.797668,8.681824,-8.303923,-9.631846,-9.142479,9.480547,9.010870,2.944042,-2.927010,7.338391,9.227853,3.159472,8.761303,-9.530243,-0.796975,9.907228,-7.444765,6.367375,4.192267,-4.947329,3.954580,-5.112054,1.222304,1.864065,9.902391,-5.796533,-9.805161,-2.938118,6.848971,-7.981343,-8.422522,6.207053,4.996320,0.193689,-7.211287,-0.987551,3.050400,-1.825156,-3.913810,-5.363749,2.438497,-0.928621,6.038420,5.093557,9.752639,-3.118968,9.853273,-3.108634,6.399929,3.232133,-1.861731,5.784777,-0.416433,-3.086068,7.847549,0.810556,0.714678,9.919502,-4.468456,6.879485,-1.024883,4.648233,-9.976025,-7.512897,3.396815,7.746097,6.725792,-0.209380,9.574923,-6.088701,2.087750,8.562160,0.052388,5.858998,1.598248,-9.626481,5.081661,7.997660,7.203190,6.335954,-9.481281,-6.522837,4.607114,7.974697,4.850328,4.383473,3.131477,-4.540242,2.919049,-8.109291,-9.256647,1.980363,-2.523156,0.201259,-7.778754,9.805039,-5.589105,0.962626,-3.370552,-8.640837,-8.058679,-7.164010,-3.584482,0.502280,0.701173,-6.684375,-5.052066,2.651681,-5.777369,-8.385612,4.110374,7.054042,-3.861801,4.803244,-0.743533,-7.119836,9.089792,-2.350871,8.442759,-1.559835,-7.546093,9.219177,-4.434016,8.163449,7.338785,1.296711,8.745019,-0.412572,9.260473,-9.088423,1.806968,7.882706,-5.518263,-2.446432,0.889572,-8.335732,7.489954,-7.450583,-8.863511,5.629743,1.302240,-5.297518,5.933228,-6.173824,-9.762758,-0.916697,-5.413437,-0.778794,-6.548592,-2.477335,4.303794,1.494023,-8.654221,-2.192599,5.950973,2.981271,4.053947,-4.713050,-1.661662,3.941546,3.479940,8.972893,0.234484,-7.961262,-0.501692,5.526553,9.078173,2.822306,-3.899142,-1.282911,4.567159,4.772576,0.048609,6.587703,-1.408153,-7.825740,7.591079,4.940184,-2.186054,-1.130279,4.150216,-5.034442,-2.083030,-8.885998,-6.713347,-6.244937,-4.847842,-9.706215,2.123218,-5.459775,-0.314334,-2.101968,-5.807530,6.593757,2.693600,3.982261,8.003436,-8.421647,6.477917,4.084793,8.974069,6.429204,1.524454,-9.956392,-1.982898,-1.898748,9.364747,-7.972446,2.972632,-0.973545,4.568912,1.184179,-7.639094,-0.775771,-2.089235,0.095932,7.992454,-2.769823,-4.504596,-0.939919,8.692261,8.411035,3.966299,-9.682621,9.501260,0.502510,-5.307089,-6.603318,-5.085820,2.665805,-7.183377,7.979242,9.794075,-4.753225,-2.304795,-7.697835,2.287428,-0.902544,5.046937,3.162807,-7.258828,8.516218,9.205857,4.406994,-3.961236,9.237939,7.183240,5.767620,-6.980571,-0.929230,-8.107441,-4.196294,-7.186238,-3.337741,7.890747,8.604623,-4.262775,-1.729945,-5.763780,-2.913511,-0.443287,8.902128,-2.948367,4.654501,-8.209681,7.535385,-3.839211,-7.385961,-6.256790,9.326410,2.910815,6.449938,0.719661,9.378142,2.906946,3.389326,4.056723,3.139155,5.436229,-3.763714,-0.322297,-5.592541,9.666805,-4.323298,3.020533,7.022943,-0.451293,-9.248698,4.837990,7.517304,9.450088,-1.302299,9.080906,-7.856105,-5.788478,-1.553543,-6.855168,-7.244228,9.402351,-9.418835,-7.215240,1.500399,-9.688153,-9.046510,-0.047995,5.904296,-6.710052,-5.174368,8.115496,-9.612512,-4.790840,9.642322,5.879324,-0.147044,-1.248332,6.896478,6.365353,6.286359,9.576857,6.307415,1.780826,1.846524,-0.961187,1.521422,8.496345,-3.237258,-3.842484,-7.366527,1.842448,-7.629040,4.254351,-7.416507,1.765265,9.694826,2.681112,-6.128083,7.314909,6.961445,4.635563,1.222840,-8.636819,-0.045505,8.312399,4.435323,-7.784678,-8.421293,1.858422,-4.055446,-6.995294,1.953224,-6.695836,-7.731191,-0.677181,2.945494,-8.492380,-0.623259,-6.602307,2.523539,7.177282,-6.329458,6.671797,-3.974830,3.071032,0.872313,-5.549862,-1.197939,-2.942008,-7.665561,-3.566591,-0.962744,-3.685322,5.740250,-3.339192,0.449498,5.013885,8.154996,-9.707815,-1.978043,-4.315203,-4.032589,-4.047464,2.771165,5.947339,2.386258,2.224968,5.170754,-0.633345,9.987110,6.635172,6.924309,-4.684431,5.426480,-5.366892,3.307443,6.895880,2.657245,-7.281068,-0.136440,-3.174625,8.309706,-2.220593,3.933941,8.746655,7.466448,6.669909,-5.595736,2.922965,7.003006,7.045470,-4.590182,-3.256131,-1.037419,-4.445360,-6.672364,5.802164,-8.258367,-4.611128,-0.890104,-4.716242,4.275043,-2.815673,-0.059666,8.326414,5.147489,-4.099996,-4.104453,9.740681,9.872109,3.472378,-4.989081,7.526507,-8.808358,5.959058,1.220203,-4.109971,5.208275,-1.966340,-8.386820,0.406677,-7.437436,7.893591,-4.840355,-5.757765,-6.104119,-9.411367,-9.626856,-9.258402,5.178667], dtype = "float64")#candidate|9770|(585,)|const|float64
const_9771 = relay.const(5, dtype = "int8")#candidate|9771|()|const|int8
const_9772 = relay.const([2,9,8,7,9,-5,-2,-1,10,-8,-4,3,1,3,6,1,4,3,8,-3,-5,5,-3,-6,4,1,8,-1,2,7,10,7,7,-5,9,-2,-6,-2,3,-2,-3,6,-9,-2,-1,-10,-6,4,-8,-8,8,-1,-9,5,-2,1,-4,-9,-6,-5,-8,9,-3,-7,1,-7,-7,5,-3,8,-9,-1], dtype = "int8")#candidate|9772|(72,)|const|int8
const_9773 = relay.const([-5,10,9,4,-2,-10,-7,-6,2,-3,9,-9,-1,5,-1,-3,5,-6,-1,-2,-9,-6,5,-3,5,-6,-1,-1,-1,-8,9,9,-3,8,-7,-9,-5,5,6,9,-5,6,-7,-10,-1,3,8,-6,8,6,-6,-2,-9,5,6,-7,-8,-6,-9,-7,5,-2,1,7,-4,7,-8,-3,7,-4,-3,-1,-5,-7,-5,5,-4,4,-7,-9,4,10,-4,-2,-2,-1,9,-5,-10,9,9,-5,2,-10,-10,9,2,7,4,-6,-6,-1,-2,-9,1,8,-1,2,-4,-2,1,10,1,-1,7,-9,-6,-9,-7,1,-4,7,-1,9,-1,-2,2,-8,-9,8,-6,-2,9,1,8,5,8,-9,1,6,1,-6,10,-8,3,-7,-4,1,8,3,-3,-2,-10,-2,9,5,-8,4,5,6,-7,6,4,9,1,-10,10,-7,-2,-3,1,-2,-1,4,8,1,-5,-9,6,2,9,4,-3,10,-2,-8,-5,9,-9,-9,6,-2,-8,-9,10,2,3,-7,-6,4,3,10,-4,-3,3,10,3,10,5,-8,3,2,-7,-6,7,-3,-4,8,4,-3,-3,-8,-4,-10,10,-2,7,10,-3,8,-6,2,-4,10,-10,-6,-3,-1,-3,-6,6,-7,-1,8,-3,6,5,-1,-6,8,-3,3,9,3,-3,-6,-6,-4,1,-3,-8,8,-6,-2,-10,-2,-5,9,7,5,-2,10,5,6,-8,2,7,7,7,-8,2,-9,5,10,-3,-3,-5,2,-1,-5,7,-2,5,10,3,-10,9,3,-1,-7,9,9,7,5,10,-4,7,-3,-9,6,-2,8,-6,-7,-3,1,-6,-7,2,10,2,-2,2,-1,10,-3,-2,6,-2,-8,7,9,10,8,-8,5,-2,8,2,-5,7,-7,-8,10,5,-7,5,-10,3,-6,-4,-2,-8,10,-10,-2,-2,-7,-1,-4,-2,1,-8,4,-6,-4,-3,-7,-7,-9,-4,5,10,-8,-8,7,5,1,10,-5,-8,-9,5,10,-4,10,-1,-4,8,2,-6,8,-9,-3,4,5,8,1,-1,7,1,3,-6,-3,-9,-10,3,4,-7,-1,6,-3,2,-10,-6,-8,8,-8,-8,-9,-5,-4,9,10,-7,-6,-9,-1,-4,3,10,6,-3,-2,-5,-8,10,-9,-9,4,2,-1,9,-9,3,-3,-1,10,-3,-5,-1,-1,6,-9,-8,3,1,10,-7,4,-1,2,-4,-8,-5,7,7,-9,7,7,9,5,3,-3,-4,-10,-2,7,-7,4,7,9,7,-6,-6,-10,-3,8,-2,-6,-7,-1,1,6,-2,-1,10,-4,8,1,-3,2,8,1,8,-6,6,-4,5,6,-10,6,-8,7,10,-1,-1,-8,2,8,-9,-7,-2,-3,-2,-4,-7,-2,-3,-1,9,6,7,-10,3,9,4,6,-6,3,-9,8,-9,3,9,3,-7,9,-2,1,9,-7,5,-9,4,8,-8,3,9,9,9,-10,-2,-8,-10,-2,-10,-1,4,-7,3,4,-4,-9,3,2,2,8,-1,-8,7,9,9,-4,4,-1,-7,-8,-2,-3,-9,-6,-5,2,-3,8,-10,-9,8,10,-5,9,-6,10,-8,-4,5,5,-4,-7,-9,7,1,8,9,3,9,-3,-3,-4,7,-9,7,4,2,10,-8,1,-5,1,7,8,-10,-10,6,-5,1,5,9,-3,5,-4,-10,-2,-4,-9,-1,-6,9,-5,1,10,-3,3,-6,-4,-8,4,3,-3,1,9,-10,-10,-4,-6,4,-8,2,-2,8,9,-4,5,7,8,1,-9,-4,-2,5,-5,5,-7,-7,-3,-4,-10,-5,8,3,1,5,7,-8,-10,-8,-3,10,-9,-8,-3,-7,5,-8,-6,-10,6,-7,-5,-3,-10,-1,5,-3,-8,1,7,6,9,-4,-6,-4,-8,-7,-5,-9,5,-8,-1,9,3,-3,-5,10,-3,-1,-9,-1,-5,1,3,7,-9,-10,-5,2,-6,-8,-5,7,5,7,4,-10,-8,-8,-2,-9,-9,3,-8,2,1,-7,2,-4,-3,-10,1,-5,-2,2,-6,-5,1,-9,-5,3,4,-4,-3,3,1,2,-5,3,-9,-1,5,2,-6], dtype = "int8")#candidate|9773|(792,)|const|int8
const_9774 = relay.const([[False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,True,False,False,False]], dtype = "bool")#candidate|9774|(1, 320)|const|bool
const_9775 = relay.const([2.763436,-2.691878,-4.261753,-4.175651,8.913232,-2.302257,5.537774,-7.511104,3.356495,4.801983,-1.227060,7.086595,-2.379256,-3.022349,-1.392639,-0.925742,-5.322846,-0.263060,4.221636,-4.875033,-3.678687,-3.520686,-9.628421,1.079225,-1.934298,-3.570224,8.092538,-5.476865,-1.802065,4.310878,2.833340,-6.098845,-3.616816,-0.440749,6.599643,8.606490,1.496520,-4.937432,-1.043231,-3.320164,-3.760219,4.014222,-9.754103,0.279240,6.492374,3.579487,-2.600944,-0.162149,-5.380843,-2.628358,9.900272,-0.090221,2.659481,0.350941,-7.578990,-0.472735,-0.289054,-3.899251,0.022907,4.142756,-2.481419,6.565595,-9.436794,-8.749999,9.833872,6.548152,-4.492414,0.909630,-0.685263,7.182093,-0.707520,5.937254,0.182264,6.417618,0.095010,4.193775,-1.795033,-6.760758,-8.465231,0.360105,-2.564403,7.569787,-2.626452,-8.016622,7.940366,7.996346,-1.473653,-8.299380,-4.715397,-3.854791,-7.694943,-3.116986,2.070630,4.297620,7.209360,5.951391,7.642084,-8.361291,3.359874,-2.952524,-1.042673,8.226334,-0.659181,-1.633014,9.370549,-9.896336,7.773261,-2.671311,-1.081987,-4.195198,5.446145,6.671670,-1.110215,-8.898619,-0.210938,-9.970686,0.623162,5.750003,6.249499,-3.391193,9.251733,-7.394299,7.458122,0.719738,7.932717,9.985952,2.264632,4.204081,-5.047003,2.396721,7.786371,8.898451,0.687505,-8.989964,2.540572,-9.952598,-0.126958,8.971455,9.472644,9.428807,-0.659637,6.015486,5.449014,-6.107653,2.987274,-2.371209,8.891652,7.802789,2.611976,-2.616507,-4.673702,1.765189,7.337546,8.014466,9.550085,2.916641,5.848660,7.790304,-4.873025,8.756918,8.308122,-8.332803,4.716263,-1.257860,2.357031,2.422449,4.689054,-0.377640,6.275941,5.414526,-5.670805,8.833689,-5.526022,-1.163285,-2.585162,-6.694984,-3.499735,-7.213059,-7.149303,-4.685910,5.414186,6.748554,-1.268815,-9.449068,9.965861,-9.977308,-5.267766,-1.516527,-2.188566,5.030724,-5.030691,-7.596512,-4.867360,-2.977548,4.197667,5.338433,0.954762,5.682406,-7.249124,5.697342,-5.370488,-5.978936,4.030513,4.384133,4.355401,-9.716781,-1.833933,-9.468759,-9.564649,2.882068,9.199371,-3.060356,6.991264,-9.579124,8.680090,-0.370070,8.774674,3.077452,7.644644,-6.568349,7.755806,-4.061594,-0.426072,1.163043,9.602518,-2.031538,2.815732,5.944946,3.114213,-3.812109,-6.041623,-9.179234,5.987487,-7.875273,-1.863253,-2.368683,-5.103400,5.146283,9.393303,2.456019,4.532469,-0.721738,-2.899161,4.418287,6.614639,8.227021,-0.533787,-3.210478,5.096779,-3.234891,3.158587,3.342616,6.596377,-4.547769,4.230624,-4.760569,-9.063103,8.222029,-9.356099,-1.166712,8.937349,8.122434,6.113285,2.104912,0.660539,-5.158656,-8.401609,-6.131113,-6.789002,7.128020,-7.525926,-2.281138,-2.369265,9.739063,-6.268800,-7.331632,2.177445,-3.366650,9.431578,7.091036,7.807110,-1.948961,-9.352948,-5.388193,7.728471,-8.093241,9.609186,-3.727551,6.831412,-0.289425,2.387453,5.902475,6.251889,6.702284,9.334567,8.187564,-3.339539,8.674281,-4.853697,4.438121,8.491671,2.998495,-0.751238,-5.679305,3.858555,-5.111101,9.944266,-0.300521,8.594961,-5.932287,-0.660856,0.370852,0.379868,6.028678,-1.282039,0.989303,1.188612,-9.123024,4.086610,9.159472,-9.554325,3.768125,0.561418,-6.425634,-2.425278,4.879969,-4.970670,4.578614,9.483305,4.834211,-2.705878,4.620165,2.934325,9.188747,-7.265947,0.165488,-1.232027,4.757392,-4.575983,-4.125130,-9.576092,-4.637431,7.388344,-4.663862,-5.342726,-4.314453,-0.095926,-0.078083,-5.576811,-3.818803,-4.400149,2.396642,1.169001,-4.214769,-5.450811,-0.530656,4.312835,5.595563,-3.730243,3.913111,5.816483,9.446198,-0.421698,7.330436,-1.821131,3.549454,3.472680,3.780334,4.891429,3.451680,4.674299,-8.335288,-3.446039,8.330190,9.504891,4.866116,-0.442318,8.332038,0.441435,9.174058,-8.551040,-1.150087,6.561049,-7.975539,-9.513341,-0.168938,9.345534,-8.758611,-7.659062,3.123421,-4.819555,-3.490848,6.909226,7.940321,-6.060238,-3.334646,-4.477303,3.288923,1.897659,-4.200997,7.791025,0.538261,-5.564519,-2.073557,7.103027,-9.822890,-1.651843,-7.317751,-9.101854,-3.299523,9.822135,-1.331005,-5.515996,3.832028,2.730290,6.519610,5.649622,-8.226447,-0.099183,-1.643317,-5.875256,5.404016,-8.966182,-2.847361,-8.650752,6.301962,-6.065142,0.117595,3.817801,-2.519816,-8.096130,4.375309,-9.932462,6.797235,-5.729233,-1.915528,6.430548,-6.768105,1.729858,-2.369710,6.100699,1.243094,0.094082,-4.844302,-3.500480,-6.567564,-5.535651,-4.642163,2.530839,3.628678,0.069355,-1.111419,-3.090606,-9.080098,9.436968,9.514994,4.299186,-8.901468,4.716711,4.756576,6.182848,-0.149178,-2.231744,-7.580083,7.386921,3.915670,0.179351,7.674861,-9.532216,-3.339363,-7.913454,8.018612,-3.014464,2.278086,-9.089385,2.524722,-0.011141,-4.120377,-6.849874,-9.918510,-5.762960,3.257804,1.151387,1.969968,-4.297602,5.640934,0.640031,-6.531479,8.236626,0.077122,7.246223,3.003496,7.778284,-2.788497,4.749485,7.583291,-9.516275,1.979120,1.825473,-1.113167,-2.272152,-1.554350,-2.997710,-9.081298,-1.970156,4.416264,-3.429764,4.498181,-7.992766,-6.365724,-5.198416,-9.074345,-1.496781,-9.654822,-4.445945,7.906702,0.531516,8.785366,5.598016,0.371354,3.754310,1.134870,2.990623,7.336206,-0.013643,1.130192,4.238094,8.225212,-4.810957,4.755450,-9.792854,3.497695,1.451463,9.333052,-9.893781,-9.304184,-5.964591,-1.200535,9.840409,7.676710,9.095308,-9.748620,-3.025120,-1.777105,-6.681825,-0.437479,-9.030267,-4.841152,-8.244239,-2.464421,-9.248968,-3.323697,-9.845204,-3.890592,5.916599,4.795781,1.314111,4.088173,-4.119585,-5.718632,-8.058238,9.349023,-0.303848,-6.531159,-6.231849,-6.505217,6.153441,4.120623,0.808953,5.931546,2.881395,5.748918,0.290253,8.056415,-2.930224,-1.669105,-1.662609,9.902067,6.538942,1.572513,6.140261,-0.350991,-0.369218,-8.680849,4.844860,-1.171831,9.944361,6.449819,4.592519,-0.548872,-8.924489,-7.588421,-5.297873,-9.659968,5.538608,2.972704,4.418021,8.685259,4.853058,0.807711,-4.922092,-7.833517,8.848788,-2.724204,-4.270465,-0.523887,2.363291,1.109799,-0.167222,8.655832,9.834266,-9.584609,-5.458098,-3.015710,-8.934993,-1.618512,-2.426496,-9.937253,3.731984,-2.272153,7.765456,-8.922968,5.535846,-9.476543,0.162992,0.294772,8.608356,5.255868,4.651659,0.345352,8.872098,-8.837610,-5.937022,4.162743,9.783560,4.487874,-3.764591,9.571793,8.906201,-2.007087,6.086363,0.925887,9.731681,-5.883517,1.417540,-2.459107,-9.178972,-5.955148,9.347289,-1.329009,1.097510,3.575644,1.839946,6.635534,3.066223,-5.329004,2.409981,6.720447,-1.048638,6.221337,4.012112,6.383200,9.993048,6.058668,0.624637,3.750614,3.016356,7.810678,-9.828527,-7.020246,-6.370992,-0.310256,-6.416506,-3.230040,-5.508235,-3.812722,-1.721640,9.524366,1.577224,-1.970318,-1.559535,7.827037,8.710110,-4.925964,7.585192,6.122990,9.606332,9.627488,9.746236,6.714061,-0.709614,1.542120,7.077196,-1.286053,9.016595,8.036623,-8.196064,-3.382975,2.372704,5.443160,4.311730,-3.190270,2.467942,-0.888987,-9.094023,-6.863021,-0.257312,2.909526,-4.047233,-5.704070,-7.474156,5.792673,4.944044,-9.871879,-0.980401,7.625105,-9.004368,7.508700,-2.530457,-5.434385,9.969518,0.183740,7.943464,6.161103,-3.427023,6.349249,5.973024,4.340065,-2.965283,-6.416483,-9.753498,-5.811122,5.985405,-5.382400,-5.498858,-7.811132,0.108835,5.578034,-0.794082,-3.037285,-8.306601,-8.995126,-5.317015,-7.981223,7.683545,5.737307,1.615483,4.031730,7.008712,-3.238830,-1.991548,2.987184,-3.821696,-8.750803,1.958851,8.461293,2.703174,-7.344508,6.454707,-5.737985,9.779356,-1.823913,-2.120423,1.459907,7.134296,6.029434,5.488190,0.063394,8.747320,-5.894709,-0.003238,-4.184200,5.405928,8.320796,-7.625502,-1.809482,-9.814395,-3.832292,-2.187908,-3.677944,2.067382,2.142027,7.181706,-3.310349,7.375312,2.300449,-1.770521,5.673596,-2.055899,-2.580656,-2.004908,-1.546691,-5.003073,5.707273,0.027668,-6.016339,3.021487,5.510576,6.282264,6.129402,-0.303685,-1.192164,7.686340,2.114464,9.358767,-2.273857,-1.199427,-1.303188,9.441838,1.715522,3.579887,3.884003,1.554494,1.906605,-3.380508,6.340760,-6.658479,4.933697,9.636940,3.528472,-4.119076,4.768316,4.349837,5.255984,4.206599,5.502574,4.976099,-4.329017,8.064747,8.230135,-8.669418,-4.483389,-2.986825,-4.026169,-7.451380,-5.687551,5.401005,9.551941,2.322326,9.073703,6.365918,-6.748607,9.565058,-8.049204,-7.594079,-1.420504,-7.564705,5.551773,-4.199521,3.913999,-0.414650,-3.764484,4.561934,-4.388100,-8.865912,0.469486,-1.294005,-8.473773,-1.519719,-2.051000,-3.178788,-2.742699,8.189082,-0.811096,9.563893,3.008844,5.728914,-3.731959,6.798887,-7.840356,-4.291834,-5.469943,5.082005,5.960863,5.249697,-5.231970,-3.248711,-6.229966,5.319662,-5.433893,-4.964581,-0.487921,6.470377,-5.115276,0.744803,-9.678433,1.979901,-4.576043,-8.365494,-2.197109,8.959588,6.526533,5.948415,9.029330,-1.885821,-6.998278,0.421816,7.637239,9.174646,-3.219059,-9.454960,-1.063490,5.421666,-8.647384,-2.309477,7.515823,2.542638,-9.164265,-3.761986,7.563811,5.300178,-1.142612,-3.652387,9.120432,5.712309,-9.140574,-4.849732,9.524067,5.150905,9.498159,3.761934,2.190323,-4.385942,1.928598], dtype = "float64")#candidate|9775|(924,)|const|float64
call_9769 = relay.TupleGetItem(func_2868_call(relay.reshape(const_9770.astype('float64'), [13, 5, 9]), relay.reshape(const_9771.astype('int8'), []), relay.reshape(const_9772.astype('int8'), [72,]), relay.reshape(const_9773.astype('int8'), [2, 396]), relay.reshape(const_9774.astype('bool'), [320,]), relay.reshape(const_9775.astype('float64'), [924,]), ), 2)
call_9776 = relay.TupleGetItem(func_2876_call(relay.reshape(const_9770.astype('float64'), [13, 5, 9]), relay.reshape(const_9771.astype('int8'), []), relay.reshape(const_9772.astype('int8'), [72,]), relay.reshape(const_9773.astype('int8'), [2, 396]), relay.reshape(const_9774.astype('bool'), [320,]), relay.reshape(const_9775.astype('float64'), [924,]), ), 2)
output = relay.Tuple([call_9765,call_9769,const_9770,const_9771,const_9772,const_9773,const_9774,const_9775,])
output2 = relay.Tuple([call_9766,call_9776,const_9770,const_9771,const_9772,const_9773,const_9774,const_9775,])
func_9785 = relay.Function([], output)
mod['func_9785'] = func_9785
mod = relay.transform.InferType()(mod)
mutated_mod['func_9785'] = func_9785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9785_call = mutated_mod.get_global_var('func_9785')
call_9786 = func_9785_call()
output = call_9786
func_9787 = relay.Function([], output)
mutated_mod['func_9787'] = func_9787
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9797 = relay.var("var_9797", dtype = "uint32", shape = (9, 13, 8))#candidate|9797|(9, 13, 8)|var|uint32
const_9798 = relay.const([[[2,5,3,-4,-6,6,6,6],[-2,5,-5,4,3,7,-3,-5],[6,-8,5,-3,-1,-1,-9,-7],[3,-6,-1,2,10,-7,-8,7],[-2,6,-7,10,-10,-4,-8,-7],[-5,9,3,9,1,-6,8,-4],[8,-10,10,2,-1,-8,-9,7],[-10,-7,8,-8,-2,7,-6,2],[2,9,-2,-2,7,-9,5,-8],[4,7,3,-10,-10,5,-9,-1],[9,-3,-9,5,4,-2,-1,3],[-8,-9,8,6,-8,3,7,8],[-2,-8,-5,8,-6,8,3,-5]],[[4,3,-5,9,9,-1,-3,-4],[-2,-7,7,8,-8,-3,10,5],[3,-7,5,2,-5,10,-1,-5],[9,10,7,-9,4,9,1,-9],[10,-3,-1,10,-5,4,-7,1],[-10,3,-8,-4,6,6,5,-2],[-1,-3,7,8,6,-1,2,-10],[-10,-10,7,1,-7,-1,-4,1],[-9,8,6,9,10,6,10,4],[8,10,-10,-1,8,3,-6,-7],[-7,-10,-3,-6,8,6,-7,-2],[6,2,-1,-7,4,10,2,-4],[4,-3,-4,-9,10,-4,6,2]],[[6,-10,-5,-9,-4,-1,-8,-7],[-1,-9,-1,9,4,8,9,-1],[-2,-5,5,7,3,-8,-5,3],[-7,-2,1,-2,5,6,-10,1],[8,-2,-10,-2,9,5,-7,9],[-3,6,2,-10,10,3,2,3],[-9,-3,-5,3,-7,5,9,9],[5,-7,-5,-6,-4,4,-10,-6],[-3,-8,-3,2,9,5,-3,9],[2,-7,-4,10,1,-6,3,1],[-10,-4,-2,-5,6,-9,4,9],[6,3,-8,-10,6,-9,7,-7],[-1,-1,9,-3,4,4,-2,6]],[[-8,9,-1,-2,-6,-6,-2,-1],[-3,-3,-8,7,-8,2,3,-7],[-6,-4,7,3,-10,-8,3,-5],[-2,1,5,-4,9,5,5,-1],[-8,7,5,-9,-1,7,-6,10],[-1,10,9,2,-9,7,7,-4],[-7,10,-2,-4,6,5,-4,-2],[6,-2,5,10,-9,7,-9,2],[-5,-5,-3,-8,-2,3,-9,-2],[8,-9,-8,-6,-10,-4,7,4],[-10,8,1,4,-10,1,3,-4],[7,-5,-4,1,-5,2,3,-5],[4,6,-1,9,7,-1,-3,-1]],[[-8,-7,-9,-6,-5,8,4,-9],[-9,6,-3,-9,6,1,5,-2],[-10,7,7,-6,2,10,-9,6],[4,-8,-8,-1,9,4,6,8],[4,7,-9,-4,9,8,-5,-6],[8,-7,-10,-9,-10,2,-10,6],[-8,-7,-8,-9,-7,2,1,10],[-1,6,-7,2,-9,-7,-7,-6],[6,1,6,-10,4,4,10,-7],[-5,4,-9,1,-3,10,1,-4],[-9,2,2,8,-4,3,8,-6],[-6,-5,9,4,4,1,-10,-2],[-7,-4,-6,4,5,-5,1,6]],[[-4,-2,-6,-4,-2,6,7,1],[-2,-2,5,6,7,-3,-3,-6],[9,-1,-4,-5,-9,8,-9,-1],[-4,-7,2,1,7,6,2,-10],[-9,7,-7,2,1,3,1,-1],[10,5,3,9,-1,-3,-8,5],[-3,1,-3,7,2,-6,-5,-9],[-6,9,10,1,-5,-4,9,-10],[-10,-4,3,8,1,-10,2,-3],[4,8,-2,-7,5,-1,1,-9],[-10,5,-2,1,-1,-2,-10,9],[-1,-10,-6,-9,8,-7,9,1],[7,-5,3,6,8,-6,5,4]],[[2,8,-3,-3,6,2,-4,-9],[1,3,1,-9,-7,9,10,-9],[-1,2,-5,9,-5,-9,5,1],[3,1,3,-4,5,-6,9,7],[2,6,-6,-9,5,1,7,8],[-8,-3,-9,3,2,-8,5,-3],[-5,-4,-3,2,-2,-9,-5,-6],[-6,-5,-8,8,8,-1,1,1],[4,-9,-8,-6,-5,9,2,4],[8,2,10,6,-5,-2,-2,2],[-8,-2,3,-9,4,10,-7,1],[-6,1,-2,3,-7,-4,5,4],[9,10,-5,2,-8,3,-9,-1]],[[9,8,-1,7,-3,7,-8,-1],[-7,1,-1,9,-7,5,7,10],[9,7,10,-8,-6,-3,3,1],[9,2,-7,9,3,10,1,-8],[-2,10,1,-5,2,1,-5,7],[-4,-4,-10,-5,-9,5,-8,2],[-9,10,-10,-7,6,-10,-10,-3],[-6,7,1,10,-10,-2,1,-6],[8,-10,-4,3,-5,-9,9,-1],[-10,-2,-4,-3,-9,-3,-10,-1],[-7,-9,6,-1,4,-5,-3,-10],[9,-5,6,7,2,-8,-9,3],[9,-8,-3,-5,-8,-9,-1,5]],[[-1,-10,8,-4,5,3,8,1],[7,2,6,-6,-2,-7,-4,-10],[5,-3,7,-3,7,8,3,5],[-7,-9,-6,9,-10,10,1,10],[-10,-8,8,9,7,-3,7,10],[6,-6,4,10,-4,-9,-10,10],[2,7,7,-7,3,7,-7,3],[6,-6,7,-8,8,-5,-8,8],[-2,2,-1,6,-9,4,-9,1],[-8,-8,3,-9,3,9,10,-1],[-2,-2,4,-5,-10,-10,7,2],[10,-4,6,-6,-7,10,2,-10],[6,5,9,-2,-10,5,8,5]]], dtype = "uint32")#candidate|9798|(9, 13, 8)|const|uint32
bop_9799 = relay.greater(var_9797.astype('bool'), relay.reshape(const_9798.astype('bool'), relay.shape_of(var_9797))) # shape=(9, 13, 8)
func_4389_call = mod.get_global_var('func_4389')
func_4391_call = mutated_mod.get_global_var('func_4391')
call_9802 = relay.TupleGetItem(func_4389_call(), 0)
call_9803 = relay.TupleGetItem(func_4391_call(), 0)
bop_9819 = relay.maximum(var_9797.astype('uint16'), relay.reshape(const_9798.astype('uint16'), relay.shape_of(var_9797))) # shape=(9, 13, 8)
var_9822 = relay.var("var_9822", dtype = "uint16", shape = (9, 13, 8))#candidate|9822|(9, 13, 8)|var|uint16
bop_9823 = relay.minimum(bop_9819.astype('int32'), relay.reshape(var_9822.astype('int32'), relay.shape_of(bop_9819))) # shape=(9, 13, 8)
output = relay.Tuple([bop_9799,call_9802,bop_9823,])
output2 = relay.Tuple([bop_9799,call_9803,bop_9823,])
func_9844 = relay.Function([var_9797,var_9822,], output)
mod['func_9844'] = func_9844
mod = relay.transform.InferType()(mod)
var_9845 = relay.var("var_9845", dtype = "uint32", shape = (9, 13, 8))#candidate|9845|(9, 13, 8)|var|uint32
var_9846 = relay.var("var_9846", dtype = "uint16", shape = (9, 13, 8))#candidate|9846|(9, 13, 8)|var|uint16
output = func_9844(var_9845,var_9846,)
func_9847 = relay.Function([var_9845,var_9846,], output)
mutated_mod['func_9847'] = func_9847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6506_call = mod.get_global_var('func_6506')
func_6507_call = mutated_mod.get_global_var('func_6507')
call_9849 = func_6506_call()
call_9850 = func_6506_call()
func_9599_call = mod.get_global_var('func_9599')
func_9603_call = mutated_mod.get_global_var('func_9603')
const_9878 = relay.const([-1.184053,-1.987782,-1.723608,5.719718,4.006755,1.372915,-9.533576,-6.014089,5.258896,5.373443,-3.209876,-2.930093,8.986694,-4.302822,-1.746213,6.455823,9.221091,-3.542974,-4.630267,5.223453,-6.997932,-2.602649,-5.207206,-7.200053,-4.397156,4.112584,-4.500773,-1.887631,1.868431,-1.332467,4.111640,-7.927563,-9.925881,-6.741276,-5.095341,-2.975643,8.815820,9.255225,2.744905,3.245704,-7.229652,-3.117453,-5.962360,-1.520948,4.248201,-5.326920,2.869117,-4.977560,8.099928,-5.801438,-7.313185,-8.633178,2.101733,7.973647,3.307728,-2.291112,2.959110,-0.083482,0.404237,9.800781,7.455462,1.987786,-2.550015,-3.053545,6.173328,4.595875,5.444709,9.970913,-0.629288,-9.257103,2.881238,6.866068,3.752299,-4.998304,-8.503115,-4.849011,8.958566,-2.266587,3.165282,5.181577,-4.871156,-1.657711,-3.444278,-2.858218,3.575017,-1.504899,-5.233822,6.101794,1.226993,-6.641368,-1.221799,-1.370992,0.950816,0.407794,6.162854,4.503548,-5.960013,-9.788511,6.031778,7.333724,9.534526,4.775836,6.090270,5.475671,-1.352278,-1.250056,-2.671245,2.638286,-1.056392,-8.804197,1.336245,0.023227,-5.674839,2.713404,-9.552427,-4.777545,-6.727404,6.410512,-2.684910,9.158857,6.642487,4.822655,-9.938837,3.509800,-3.449041,-8.525760,9.084603,3.699171,1.031190,5.740454,5.480863,7.758830,2.361352,8.978818,-1.535776,-6.637028,-1.847584,1.052980,-3.110751,5.878113,6.516789,7.978697,8.719180,-1.806297,0.565719,0.651107,3.630980,-1.528053,4.618459,-5.249403,-5.094925,5.903106,1.191381,0.865862,3.730408,-2.306516,8.068543,4.038684,-2.424494,8.156607,8.382549,-5.209656,-0.692314,5.444754,-6.070153,8.278001,3.546195,1.248668,5.965027,-8.783507,-5.386772,4.323238,-6.857878,-7.373798,-1.952797,-3.334993,-1.542296,-0.167439,-3.387346,7.372395,-6.897242,0.382050,8.704627,-2.833197,-5.122847,-7.418833,8.320790,-5.643872,-2.716690,-6.682428,-3.023802,7.156297,9.935007,5.502480,8.700838,-2.525635,9.555880,5.791253,-4.505657,-5.793027,6.957610,7.846542,-0.526182,-0.636510,8.333855,-8.119971,-9.345898,-8.820953,0.364839,3.567712,-4.810063,-0.851906,9.708461,3.601981,3.343656,-5.148575,-7.005910,9.090316,0.840007,3.728940,-7.470039,1.359206,5.277585,-2.885866,2.667655,-8.096908,7.619795,-1.762974,-9.095465,3.070093,0.715835,-3.038457,5.587856,-3.207246,-2.812498,9.828430,6.271053,6.631563,7.327474,-8.114850,6.557116,-2.137135,4.111060,2.716610,-5.661286,-1.603144,7.407590,7.268829,-2.032509,1.346680,-4.624980,-1.915178,2.576904,-2.345010,4.991108,-0.265792,6.778627,-0.890406,0.408466,4.679570,-0.952244,2.159253,-9.648180,-9.175680,-0.967402,1.759062,4.417770,0.650236,7.861927,5.833890], dtype = "float32")#candidate|9878|(270,)|const|float32
var_9879 = relay.var("var_9879", dtype = "float32", shape = (1890,))#candidate|9879|(1890,)|var|float32
call_9877 = relay.TupleGetItem(func_9599_call(relay.reshape(const_9878.astype('float32'), [270, 1]), relay.reshape(var_9879.astype('float32'), [270, 7]), ), 0)
call_9880 = relay.TupleGetItem(func_9603_call(relay.reshape(const_9878.astype('float32'), [270, 1]), relay.reshape(var_9879.astype('float32'), [270, 7]), ), 0)
func_4307_call = mod.get_global_var('func_4307')
func_4309_call = mutated_mod.get_global_var('func_4309')
var_9882 = relay.var("var_9882", dtype = "bool", shape = (60,))#candidate|9882|(60,)|var|bool
call_9881 = relay.TupleGetItem(func_4307_call(relay.reshape(var_9882.astype('bool'), [60,])), 3)
call_9883 = relay.TupleGetItem(func_4309_call(relay.reshape(var_9882.astype('bool'), [60,])), 3)
func_8027_call = mod.get_global_var('func_8027')
func_8030_call = mutated_mod.get_global_var('func_8030')
var_9885 = relay.var("var_9885", dtype = "int16", shape = ())#candidate|9885|()|var|int16
const_9886 = relay.const([3.988655,5.465161,-5.468570,-7.601846,3.098541,7.238214,-9.474848,1.783348,-9.932090,-7.575828,8.856222,-9.015986,4.968463,2.045305,-5.573385,6.257451,-1.995287,-2.414023,-3.404527,-3.475210,7.349369,-1.171322,3.915981,-1.895922,-6.585018,-0.602167,-1.894487,-5.197641,-8.088870,-9.473230,4.674508,-9.980873,-3.023133,4.793628,7.345463,5.009623,0.194109,-5.347086,1.359203,4.745799,7.899705,0.823106,-9.976626,3.184409,-9.700518,3.317995,-8.561003,9.430276,-5.157152,9.213731,-3.271533,-4.345493,-6.948857,4.931035,-6.420417,-7.286943,-2.209779,2.577020,8.164348,5.751496,-0.643084,-5.859356,-1.176026,-0.206635,-0.906862,-9.213519,-5.330703,-6.593483,1.322174,-3.631547,-7.477089,3.945193,8.227950,7.460800,-9.166037,-5.857791,2.110049,4.059420,-9.583815,-8.683966,8.915745,8.471691,-2.788109,8.386943,1.708017,7.914420,-8.487274,3.940445,2.421719,-7.249089,6.350218,-6.792144,0.391439,7.499821,8.716780,-5.563221,-3.431059,-7.246404,-5.409385,8.819817,-8.581028,2.490568,6.335680,-9.432815,-8.480413,-0.128865,9.238343,-5.014627,-7.513861,-8.680717,-2.313957,7.383310,-8.084367,5.511871,2.211667,3.015049,7.893808,-5.168166,8.120136,8.513178], dtype = "float64")#candidate|9886|(120,)|const|float64
call_9884 = relay.TupleGetItem(func_8027_call(relay.reshape(var_9885.astype('int16'), []), relay.reshape(const_9886.astype('float64'), [120,]), ), 6)
call_9887 = relay.TupleGetItem(func_8030_call(relay.reshape(var_9885.astype('int16'), []), relay.reshape(const_9886.astype('float64'), [120,]), ), 6)
output = relay.Tuple([call_9849,call_9877,const_9878,var_9879,call_9881,var_9882,call_9884,var_9885,const_9886,])
output2 = relay.Tuple([call_9850,call_9880,const_9878,var_9879,call_9883,var_9882,call_9887,var_9885,const_9886,])
func_9900 = relay.Function([var_9879,var_9882,var_9885,], output)
mod['func_9900'] = func_9900
mod = relay.transform.InferType()(mod)
mutated_mod['func_9900'] = func_9900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9900_call = mutated_mod.get_global_var('func_9900')
var_9902 = relay.var("var_9902", dtype = "float32", shape = (1890,))#candidate|9902|(1890,)|var|float32
var_9903 = relay.var("var_9903", dtype = "bool", shape = (60,))#candidate|9903|(60,)|var|bool
var_9904 = relay.var("var_9904", dtype = "int16", shape = ())#candidate|9904|()|var|int16
call_9901 = func_9900_call(var_9902,var_9903,var_9904,)
output = call_9901
func_9905 = relay.Function([var_9902,var_9903,var_9904,], output)
mutated_mod['func_9905'] = func_9905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6781_call = mod.get_global_var('func_6781')
func_6783_call = mutated_mod.get_global_var('func_6783')
call_9907 = func_6781_call()
call_9908 = func_6781_call()
func_4584_call = mod.get_global_var('func_4584')
func_4588_call = mutated_mod.get_global_var('func_4588')
const_9919 = relay.const([-4.024354,3.829015,-1.840323,-1.548529,8.603169,-2.620168,3.372367,2.142662,-1.667240,8.202113,-9.627736,5.980815,-5.893732,-1.806404,1.741903,-7.961600,-3.079484,3.018574,3.129413,-5.680310,-1.371398,-1.237661,-4.096925,6.686562,3.240978,1.531181,7.432590,-9.473366,9.968151,7.663115,-0.913476,5.060527,4.464943,-8.995749,-2.404563,4.302503,6.500574,8.627467,8.994924,-8.119068,1.756576,-9.226461,-7.948701,-4.253758,-8.565989,-0.705478,-3.626109,2.119964,8.345010,-7.326518,-5.195980,-4.826475,7.008300,0.306976,-4.117448,2.054603,5.581992,-9.196513,-8.104206,-2.329213,9.209881,-5.211820,-9.434833,3.051911,8.122368,4.073151,-0.194629,5.986315,8.433751,-6.193983,5.989444,7.083926,-4.609541,-4.255324,5.448711,0.792255,-8.362098,-4.269249,9.961804,-4.015756,0.146253,-4.146286,1.332671,7.767900,-7.014091,-9.510442,3.347159,-4.479519], dtype = "float64")#candidate|9919|(88,)|const|float64
const_9920 = relay.const([7,-2,-4,3,10,-8,4,-2,5,9,6,-8,1,5,7,5,-8,9,1,9,-3,-6,5,9,3,-4,9,5,2,-2,-8,4,-4,-5,4,8,-2,-4,2,9,-3,-4,4,4,9,-6,-1,-2,-5,9,4,-7,-2,7,6,1,10,-4,7,2,-2,-5,-1,9,8,5,7,-10,5,-7,5,10,5,10,2,10,-10,-8,-3,-9,8,5,-8,-6,-4,3,1,3,-9,-10,4,-6,4,-5,2,-8,-10,6,7,8,-3,1,4,1,-8,4,-10,8,4,-1,-9,-9,-3,4,6,-3,3,-4,9,-2,-6,-1,-7,-8,-2,1,1,8,-4,-4,-6,-9,1,10,1,-9,8,-3,6,-10,-2,10,9,-7,-2,-3,-10,-1,-10,-2,-3,-7,-8,-8,2,5,-8,-9,-2,-2,-7,-7,1,-7,9,1,-10,-4,9,-5,9,6,4,6,10,-4,-5,4,-1,7,2,-3,-6,-5,9,5,9,-9,5,-10,-5,3,-7,8,-10,7,4,-8,-7,3,-2,-7,-10,-5,2,-3,4,-9,-3,-9,3,-8,-6,-7,-7,10,-1,-10,3,-7,5,-2,-5,7,7,4,-2,6,9,4,6,-5,2,7,3,8,5,4,-10,-2,9,-8,-8,-10,10,3,7,-2,-3,4,-6,-3,-2,-2,2,-3,10,1,-8,7,4,-5,-5,-9,7,-6,6,3,-8,2,9,-10,-7,-8,-9,-4,-4,3,-5,8,6,4,-5,1,1,3,1,10,-4,4,3,6,8,-7,-2,6,10,9,6,-9,3,7,-7,1,-5,-5,-2,8,-8,2,1,-7,7,-8,-6,-10,-3,5,3,-1,1,-1,-9,-5,-5,9,5,10,-2,7,-5,8,-3,10,-9,6,-9,4,-7,4,-6,-1,9,-4,-10,-2,5,5,-5,6,7,3,-9,3,8,2,-10,-4,4,1,-9,3,3,4,4,-1,1,5,2,8,5,3,-2,-6,7,2,-8,-1,-2,10,-4,7,6,-7,-1,-10,6,-4,10,-7,-5,4,6,6,-10,-6,-7,2,-4,-2,6,3,-5,2,-5,4,-2,5,4,7,-10,-8,5,-10,9,-6,-6,-10,-6,-10,-3,-2,3,-4,1,-10,-4,7,8,-10,3,-5,7,-2,8,-3,-6,-10,2,-7,5,3,-6,9,-10,-5,9,2,5,-6,-5,8,3,4,1,-8,1,-6,-4,4,-5,4,9,9,-1,-1,-5,-10,6,-6,7,3,-7,-6,-3,-4,-9,4,6,6,-8,4,5,-4,9,-9,-5,-6,-1,-5,5,5,-8,6,2,-9,-8,-6,6,5,9,4,6,8,6,-4,-3,-7,-9,6,4,4,8,-4,-7,4,2,-1,1,8,5,10,-4,-10,9,-4,1,4,7,8,6,-1,-9,9,-2,-7,10,6,4,6,-1,-8,-10,6,4,-1,-5,1,5,-5,-6,5,-10,9,-6,-9,5,3,-4,3,4,-8,-8,-6,8,3,6,9,10,1,-3,5,2,3,9,-3,10,6,10,-3,3,-2,6,6,9,2,-10,8,-6,-7,7,-2,1,8,-9,-2,9,-3,5,-8,7,-4,6,-6,-5,9,-2,2,8,9,-1,10,-4,2,2,-4,2,5,-2,-4,3,10,4,-9,9,10,8,9,-6,-1,-5,-7,-5,-6,-1,-3,-4,10,-4,-2,8,3,5,7,-5,8,-5,6,7,-4,-10,5,-1,-2,5,-8,-8,-8,-4,-2,5,-6,7,10,-2,4,-3,-8,7,9,-5,-6,9,4,1,10,-8,-8,-8,8,-5,6,5,-4,5,4,-10,3,-4,-1,-4,3,-9,6,-9,9,-1,4,10,-6,-1,5,9,-1,6,8,-4,4,3,-1,8,-8,7,-3,-10,-2,-9,10,-4,3,-4,-9,-3,2,-5,-8,-6,-10,-6,2,3,-7,-10,2,-8,5,5,10,9,2,8,-4,4,-9,-8,8,-4,6,2,9,1,3,8,-4,9,10,3,2,-2,2,10,3,-5,-10,-5,8,-5,-3,-6,1,-2,3,-6,5,-5,-8,-8,-1,-10,-1,-1,4,-4,8,-4,7,9,1,6,1,-6,-6,-10,9,-9,-6,1,-6,-6,7,3,-6,-4,8,-5,-1,10,5,-6,1,-5,8,6,3,10,2,3,-8,6,-9,6,4,-9,5,3,1,-2,6,-2,-2,10,-8,3,-2,-1,-2,2,1,2,7,2,5,-8,6,9,-2,3,2,5,6,6,3,3,9,9,-3,5,-9,-9,3,-2,-7,-5,4,6,6,-10,-9,-10,-10,-6,4,-1,4,-7,-7,2,-5,-4,6,10,1,-8,3,-3,-1,-4,-2,-7,4,-3,-6,-5,-1,1,-7,9,1,10,-7,4,2,4,-6,10,6,9,8,2,-2,-9,4,-9,-5,-8,2,2,-4,7,9,8,-3,-7,2,4,-6,3,1,4,10,10,-6,7,-9,9,-4,-5,-5,-9,6,1,4,-2,5,-1,-10,1,3,7,2,2,-3,2,1,-5,3,-7,-9,4,-4], dtype = "uint16")#candidate|9920|(960,)|const|uint16
var_9921 = relay.var("var_9921", dtype = "float32", shape = (832,))#candidate|9921|(832,)|var|float32
call_9918 = relay.TupleGetItem(func_4584_call(relay.reshape(const_9919.astype('float64'), [11, 2, 4]), relay.reshape(const_9920.astype('uint16'), [960,]), relay.reshape(var_9921.astype('float32'), [832,]), ), 0)
call_9922 = relay.TupleGetItem(func_4588_call(relay.reshape(const_9919.astype('float64'), [11, 2, 4]), relay.reshape(const_9920.astype('uint16'), [960,]), relay.reshape(var_9921.astype('float32'), [832,]), ), 0)
func_8781_call = mod.get_global_var('func_8781')
func_8786_call = mutated_mod.get_global_var('func_8786')
var_9943 = relay.var("var_9943", dtype = "int8", shape = (792,))#candidate|9943|(792,)|var|int8
const_9944 = relay.const([7.618397,-4.389872,3.122501,4.238317,-0.135120,3.746792,-4.952254,8.151510,0.368914,-7.932556,-2.549849,1.612978,4.701142,8.808663,8.725537,-9.203601,4.176680,5.962190,5.561030,-6.965765,6.423290,-2.916946,-8.015886,-3.930661,7.287730,-1.844621,-6.984582,-1.873294,8.463356,-0.419466,4.171143,9.490620,-2.641203,4.319810,0.926166,6.502843,6.928535,2.349268,4.531055,-7.416893,-4.379152,-1.086291,-8.292561,-3.198722,-9.977679,-0.293157,9.940864,5.297030,6.586191,4.917327,-2.695305,9.317707,-5.045456,5.844319,-4.567378,-8.815493,-3.977957,1.221469,-4.071348,-2.221827,2.006134,-0.504510,-7.141569,-6.151366,4.438030,5.709045,-3.766430,0.310901,9.534790,-8.580436,-1.442859,-6.205225,2.463149,2.554541,5.096246,-4.433644,3.814481,1.605383,-0.322077,8.115658,9.055963,3.632507,7.131203,2.382119,5.996911,-8.618915,-2.848912,0.647880,8.861408,4.353464,-2.157015,7.689028,4.732162,-1.489517,-5.371338,1.519161,-1.265743,4.832018,7.529557,-9.104705,-1.541280,6.109411,2.872946,-0.378999,1.991616,6.664912,5.443953,3.094271,0.697548,8.692871,5.124669,5.028041,3.288464,4.931249,7.035462,-8.336750,5.179087,2.246469,-7.879119,9.134255,5.138626,6.394775,3.868508,6.219083,-5.176689,-6.450855,9.158380,3.078751,-1.915043,-3.044130,-5.457265,4.463705,-8.502058,-7.110372,-3.482158,-3.817487,-1.701100,-9.018319,6.927572,-2.085458,-2.159039,6.752752,5.617792,7.832974,-3.741207,5.073136,-9.178614,-5.820495,2.176625,7.758241,-5.695408,-5.765181,0.667622,-0.192226,-8.001866,0.663106,3.924034,4.419613,2.126696,-6.286361,-6.529833,2.874990,-6.336593,9.339894,-7.820883,7.901605,-1.006978,-6.592488,-5.506937,-0.924280,4.616376,-8.020812,7.629576,8.325248,-8.917457,-6.956191,-4.372945,8.898008,1.231817,-8.964244,4.515245,-0.760306,0.360498,9.186331,3.129762,8.787423,1.638794,5.951231,7.865184,-4.338767,-5.964420,-5.374211,-8.836713,2.030805,-1.837912,9.198000,4.423740,8.661313,-9.867631,-0.621303,1.790659,0.657097,9.836920,8.088941,2.470769,-1.877189,-0.008086,-2.072565,-0.800661,-2.051435,-9.910815,-6.091880,3.743031,-9.784534,6.389796,1.890186,-8.718651,7.912326,8.551126,-1.937236,-9.645123,-5.718583,6.171243,9.313420,-2.501172,-0.338269,-5.969856,-3.035707,2.841071,8.981456,6.830140,5.629329,3.648208,-4.842037,1.833028,-1.186550,5.292108,-3.323694,3.358870,0.234131,8.297116,-8.344410,-0.436842,1.643251,-6.247559,-3.757422,6.783691,1.300939,5.968615,7.895042,2.506121,-5.453714,-7.523844,3.025867,7.608480,5.010854,6.317808,-9.789209,-1.438802,8.308626,-4.085172,-1.510169,9.270018,3.092191,0.305449,3.396796,-3.289645,-0.018428,-6.393223,-5.799927,-4.665722,-3.109864,-1.418782,1.987453,-1.690564,8.636278,4.079502,-6.536124,8.046079,1.052452,-9.084826,0.786081,-7.488276,8.087891,-3.718113,-8.285452,9.172242,-9.183819,5.659995,-1.026834,-1.436553,2.961533,6.297805,-9.888398,5.220323,-5.113741,-9.319433,-9.888008,0.091192,1.716331,4.181166,-4.729797,-9.346245,-7.399202,-2.963042,5.763642,-3.918605,-3.492720,-4.252254,7.825138,-6.665840,0.109227,6.032256,-3.817715,2.684052,-8.862104,7.752635,7.222995,1.785778,-9.378370,-1.878796,-3.584480,-4.208093,-8.442466,2.432505,-9.847203,9.683847,-0.857180,9.757009,7.809508,-7.325890,1.171545,-5.936552,8.511274,9.164465,-4.028645,2.770185,-2.727400,2.425949,-0.360988,-2.685681,3.465907,-1.187315,1.375415,-6.860537,-1.887842,-8.641875,-2.802129,-8.800608,8.729535,4.164958,2.854985,-5.177286,-2.798031,2.012037,9.998395,4.076197,7.680142,-4.724982,7.754515,-5.413517,-6.514372,-5.099172,7.599432,-8.370725,-7.211090,-9.529159,6.069905,5.057259,0.582226,-6.010277,8.216498,6.037887,-4.442570,6.387818,-8.396504,3.721481,-1.469713,6.620370,0.006512,-6.177778,-6.726607,5.434923,-2.474654,4.927967,3.823893,-0.854428,-5.773595,-1.892824,2.202994,-6.483203,6.236038,-9.992040,1.219578,2.699929,-2.795650,-0.165445,5.783544,-9.605584,0.821147,8.346596,8.063630,6.890198,0.314393,-9.134645,9.115391,-9.689238,9.569137,-1.737645,-2.047911,7.573532,-2.226154,0.834047,5.682176,0.635587,-3.122033,-1.397786,-7.316211,9.111499,6.788425,-1.803659,-9.291942,9.830524,-5.503629,9.036799,5.956828,4.305522,-2.872765,8.473153,-2.023628,-7.036740,3.073633,-2.533417,-3.602973,7.834614,-2.782681,-0.386448,-2.108556,-7.763786,-1.257308,-9.508941,-9.808037,1.680459,-8.931374,-0.119938,9.003193,4.846917,8.053142,-0.570690,1.065850,1.431854,1.419054,0.628341,2.559855,-1.486688,1.968061,-6.430612,-4.336737,-8.075435,-9.551433,9.047460,-6.576176,5.194262,2.861297,3.170008,8.056278,-4.722713,9.338652,0.219935,4.110542,-7.440972,-4.449904,-1.824352,-7.567916,9.510745,3.892894,-6.013633,-1.897445,-8.273835,0.439347,-8.041908,-2.571940,0.201322,-1.413573,7.127307,6.761193,-4.478127,-3.129954,-8.006660,-2.451970,1.231324,9.123726,8.788657,1.613971,6.301587,5.919757,-6.772289,-3.861737,6.215571,-6.019857,-1.093985,-1.071552,1.939827,4.106382,7.574437,8.964703,4.742830,-1.153032,-8.934581,-2.327622,-6.785081,-7.263266,-0.226090,8.236080,8.704655,-9.830472,9.777522,1.699030,8.955109,-7.196834,-4.464783,2.996383,-2.892911,-1.741920,-0.105110,-9.839111,-0.684002,4.926437,5.295130,1.670758,-8.014167,-0.659593,-3.744095,-5.761208,-0.927560,9.202706,-0.453724,7.673315,-5.387561,-9.901173,-6.178264,-9.411517,3.011726,5.834921,-9.504990,3.932715,-6.119041,-3.646679,3.243905,-4.281408,3.051273,-7.971456,1.739087,9.609724,9.941312,-6.299163,-8.049455,7.527732,-9.914810,8.189501,8.612092,7.296160,-6.392102,-6.636205,-1.679821,-9.777293,-6.179119,3.623883,-5.165010,-9.551768,-1.691623,0.777434,3.493043,-1.764258,-4.949128,-9.405820,5.482441,3.332178,3.167826,5.543151,7.364460,8.234774,3.463383,8.558934,3.702899,8.948310,-3.986173,2.880646,4.657257,7.054442,3.997923,0.102201,1.903197,-1.631657,3.937671,-4.651554,6.059425,-7.118197,-1.876837,-5.018493,7.463396,-1.811054,3.455120,8.379085,2.441318,-4.496243,-3.194946,7.044411,-2.955652,-8.393556,-2.195909,-5.182889,8.176831,-7.627707,-3.865202,9.268770,-6.020529,8.707337,0.060392,8.698772,2.595737,2.306304,3.913717,9.770381,5.881755,6.449999,-6.251410,5.919897,5.775561,-7.348928,3.702607,9.565592,5.318182,7.526802,-2.673491,2.856319,-2.667432,8.820026,-8.119568,2.454300,4.225773,0.904407,4.078354,8.371959,-8.133139,-2.962911,5.203149,3.974857,1.850082,-4.273119,6.264970,1.547736,-1.396205,-1.678123,-2.687629,-8.789115,-0.351621,4.831473,5.810536,-9.874918,-1.629294,9.323673,3.649191,-5.885546,3.223897,-7.200968,5.744870,-8.301722,-9.281677,-7.664704,-3.815475,-0.324801,-2.144133,-6.920532,-9.157653,9.480502,-2.198032,7.729761,5.302863,-9.413466,-1.474367,-7.874796,-2.664017,0.901453,4.404701,3.558717,8.001879,-3.696454,-3.985325,1.334609,-3.800022,4.837057,9.890027,-8.453905,2.671851,9.764539,5.252723,6.933893,-0.993798,-6.171128,-7.724959,1.537142,-1.613314,4.452288,5.116458,1.862917,2.457969,-0.537111,8.189943,3.178962,9.441461,-2.971972,-2.710011,-5.208958,4.481680,-6.372858,6.258990,7.153077,-4.807821,-3.049088,7.834098,1.121917,-7.858774,2.373206,-7.429949,-3.513219,6.461132,-9.966082,-7.868180,-3.540369,0.569722,2.483354,-0.449107,-2.761098,1.214750,-1.113315,0.248951,8.494904,7.766989,4.549013,-9.802230,4.433362,7.648895,1.706378,0.033333,0.998554,3.006739,5.802037,3.151609,-6.504450,-1.295833,8.566130,-6.869333,8.674701,4.752069,9.785875,5.181233,9.873397,-3.955028,-7.932726,-5.900268,-2.615994,4.536099,4.150478,-4.293526,2.037800,8.401258,-0.666768,-1.257719,3.277716,-9.875192,9.537114,-7.950044,-0.824977,5.928069,-2.908993,-2.161968,7.514230,-5.009463,-0.700681,-1.096914,8.404225,-8.801979,9.785287,2.705808,-9.822171,9.322630,5.463055,-7.917294,-7.148623,5.435312,2.587230,-2.874948,7.576468,-8.388737,9.361864,2.548272,-7.464751,-4.142042,-2.699635,-7.187993,3.358044,-5.272051,2.677186,5.688472,0.595545,-7.261026,-8.365004,0.420269,2.203414,-2.192489,3.127529,8.203428,9.270194,0.481611,-5.285038,5.759932,-4.719949,-5.931313,-6.304088,6.732480,-9.458498,4.867239,-5.412557,-1.907829,-1.516942,-9.968968,9.122089,2.034347,1.017748,-1.210430,-5.530264,-2.039310,-0.564236,2.263239,-5.422182,-4.755118,-8.829633,7.636807,-5.631807,9.645617,-7.902457,-5.022873,3.178002,6.662260,8.090905,-4.344530,6.926205,-8.298387,-4.102512,-1.670276,-9.284697,8.968939,-8.187301,-9.234412,0.747556,3.721659,0.950204,3.191174,7.475082,-5.320971,-2.516343,2.998741,2.824577,6.354884,5.746873,-9.331431,-6.219685,-7.426981,-3.236754,-7.752390,-5.470447,-7.189042,0.826382,3.022275,-7.384659,5.754715,-0.460857,-0.284092,-7.794439,9.936226,9.361641,-5.325957,-5.685048,7.615088,9.040864,-8.178909,2.638658,0.627347,-1.315630,-1.717972,-4.171331,9.961381,-4.493978,-6.895463,-8.569153,-3.593359,7.853303,7.197407,4.756266,6.225639,-3.967815,2.218289,-1.654892,5.680143,1.224911,6.813802,8.679441,-9.106571,-0.266522,1.410930,3.084393,-8.380957,-6.954116,-0.182920,-6.117433,-9.713439,2.845852,6.886907,-9.801964,-3.001019,-4.982933,-9.189828,-5.669995], dtype = "float64")#candidate|9944|(924,)|const|float64
call_9942 = relay.TupleGetItem(func_8781_call(relay.reshape(var_9943.astype('int8'), [36, 22]), relay.reshape(const_9944.astype('float64'), [7, 132]), relay.reshape(var_9921.astype('float32'), [1, 832]), ), 9)
call_9945 = relay.TupleGetItem(func_8786_call(relay.reshape(var_9943.astype('int8'), [36, 22]), relay.reshape(const_9944.astype('float64'), [7, 132]), relay.reshape(var_9921.astype('float32'), [1, 832]), ), 9)
output = relay.Tuple([call_9907,call_9918,const_9919,const_9920,var_9921,call_9942,var_9943,const_9944,])
output2 = relay.Tuple([call_9908,call_9922,const_9919,const_9920,var_9921,call_9945,var_9943,const_9944,])
func_9946 = relay.Function([var_9921,var_9943,], output)
mod['func_9946'] = func_9946
mod = relay.transform.InferType()(mod)
mutated_mod['func_9946'] = func_9946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9946_call = mutated_mod.get_global_var('func_9946')
var_9948 = relay.var("var_9948", dtype = "float32", shape = (832,))#candidate|9948|(832,)|var|float32
var_9949 = relay.var("var_9949", dtype = "int8", shape = (792,))#candidate|9949|(792,)|var|int8
call_9947 = func_9946_call(var_9948,var_9949,)
output = call_9947
func_9950 = relay.Function([var_9948,var_9949,], output)
mutated_mod['func_9950'] = func_9950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mod.get_global_var('func_6140')
func_6142_call = mutated_mod.get_global_var('func_6142')
call_9958 = relay.TupleGetItem(func_6140_call(), 1)
call_9959 = relay.TupleGetItem(func_6142_call(), 1)
output = call_9958
output2 = call_9959
func_9961 = relay.Function([], output)
mod['func_9961'] = func_9961
mod = relay.transform.InferType()(mod)
output = func_9961()
func_9962 = relay.Function([], output)
mutated_mod['func_9962'] = func_9962
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9986 = relay.var("var_9986", dtype = "float64", shape = (4, 12, 1))#candidate|9986|(4, 12, 1)|var|float64
var_9987 = relay.var("var_9987", dtype = "float64", shape = (4, 12, 1))#candidate|9987|(4, 12, 1)|var|float64
bop_9988 = relay.mod(var_9986.astype('float64'), relay.reshape(var_9987.astype('float64'), relay.shape_of(var_9986))) # shape=(4, 12, 1)
func_6436_call = mod.get_global_var('func_6436')
func_6437_call = mutated_mod.get_global_var('func_6437')
call_9992 = relay.TupleGetItem(func_6436_call(), 0)
call_9993 = relay.TupleGetItem(func_6437_call(), 0)
bop_9995 = relay.floor_divide(bop_9988.astype('float64'), relay.reshape(var_9986.astype('float64'), relay.shape_of(bop_9988))) # shape=(4, 12, 1)
func_8781_call = mod.get_global_var('func_8781')
func_8786_call = mutated_mod.get_global_var('func_8786')
const_10000 = relay.const([3,8,-5,4,-4,-5,-7,-4,2,-6,-7,1,2,4,-5,-4,-7,4,9,1,-8,2,3,-8,7,5,10,-3,10,-4,10,-7,-2,6,9,-5,-4,-2,7,3,-6,8,-4,8,2,-1,2,7,9,7,1,-4,-3,3,8,3,-2,-10,6,2,-2,8,3,9,-1,9,-8,-8,-3,10,4,-5,-6,7,-3,-10,4,-10,-5,10,-5,9,-3,-6,-5,8,-2,10,-10,-2,5,-9,-9,-7,-7,-10,5,-6,6,7,-10,5,-9,-2,9,1,3,3,6,8,-7,6,8,2,-5,9,5,-9,-6,-3,-2,-9,4,-9,-3,6,5,-4,3,9,5,5,-10,4,5,1,2,2,-3,8,8,-10,5,6,-9,8,-2,6,7,-10,-9,-10,4,-9,-5,-4,1,5,-7,-4,5,4,4,3,-2,-4,5,-4,-7,5,9,4,5,-6,10,1,-1,-5,5,-6,3,5,-5,-7,1,-6,-5,-2,2,3,7,9,8,-1,-4,-7,-9,4,-3,-10,-7,7,-1,-2,-5,6,8,-10,-1,-7,-9,1,9,6,8,-6,-4,-7,-2,-5,4,10,7,10,2,5,4,-3,-3,4,-5,-8,-3,-2,-4,3,10,-3,1,7,1,-7,9,-7,-9,6,3,-2,9,-3,-3,-4,-8,-2,-8,-4,-4,-5,1,5,-7,3,-5,6,9,8,6,4,8,-4,-8,7,-1,5,8,-1,3,5,-7,5,-2,5,-6,3,9,-10,8,-1,4,1,7,7,4,-1,4,-6,-8,6,3,8,9,-1,7,-5,7,5,10,6,-5,-6,3,-5,4,-5,-1,9,2,4,-1,2,-9,-3,-8,-2,6,-2,-9,-9,8,-9,6,-6,7,8,1,5,-7,-8,9,-8,9,3,-8,-2,-6,-3,9,3,-1,4,-10,-3,-9,-2,4,-3,-1,-2,9,-5,-7,7,2,-3,-10,-7,8,-9,-3,-5,-2,-10,5,4,-6,-8,1,-10,-7,6,-10,10,-2,-4,2,10,10,-9,-1,-8,5,-1,-3,-1,-2,10,1,9,-10,8,4,6,-9,-8,9,9,-4,-2,1,-7,-2,6,-8,-7,-8,10,5,6,2,-6,4,7,-8,-4,4,-4,10,-10,-3,-7,-9,4,5,-10,6,10,-1,-5,-9,10,2,-10,3,3,4,-8,-6,-9,-2,10,4,5,8,-6,3,-10,7,-9,9,-6,-1,8,-7,-10,7,-5,9,-8,-4,-4,10,1,-4,-10,2,6,2,-3,-10,-10,-5,9,6,1,-4,4,10,3,-6,7,-1,-3,4,4,3,2,-8,1,8,4,8,-6,-5,-2,-2,-3,9,-7,-4,-8,4,2,-1,-8,7,-3,-1,-3,9,-9,4,5,-8,6,-3,10,6,-1,-6,-8,-2,6,-1,2,-4,-1,5,-2,6,6,4,-9,7,-9,-1,-4,7,6,10,-8,-9,5,-2,-6,6,-10,-7,3,10,-8,9,4,3,4,8,-10,-10,10,3,-2,7,1,4,-9,-6,-7,-9,10,3,-7,-5,-7,-3,9,-4,-7,5,-6,-4,3,-3,4,3,6,-8,-6,-2,-10,-1,-3,1,5,-7,-5,7,-2,8,2,8,7,3,-10,6,9,10,2,1,-7,8,1,10,4,9,-1,-6,-4,-2,3,8,-7,4,-2,-7,-5,-3,-8,10,-2,10,6,4,4,-8,-5,-8,5,-4,-7,7,5,8,2,-9,-7,-10,4,6,-9,6,-9,10,6,-2,-4,7,-7,-5,3,3,-3,-4,6,-9,-4,-1,-9,8,5,-2,-9,10,-2,-4,1,6,10,-2,-1,1,6,-10,-5,4,-8,-10,-3,-2,-9,1,-4,3,6,8,6,3,-1,9,-1,7,9,-8,-2,-9,-7,-9,5,4,-9,1,2,-7,8,3,1,1,-9,-2,1,10,-10,-8,-4,8,-7,-7,4,-5,4,-2,-8,-4,-3,-6,8,2,-8,4,-5,3,5,2,-8,10,3,-6,6,-5,-8,3,10,5,6,-8,-6,-2,5,-10,10,-4,3,-3,-1,8,-3,7,-6,9,-4,2,2,-10,-9,9,-10,4,4,-2,8,-6,1,-4,8], dtype = "int8")#candidate|10000|(792,)|const|int8
const_10001 = relay.const([-9.509812,-4.998891,0.015357,4.596604,6.732088,-8.396138,-5.013661,9.507958,5.360158,-2.986205,8.325189,6.631706,8.291000,8.675371,2.134323,-2.625584,9.673611,-7.396736,-4.921747,-4.340525,7.258313,1.107769,2.891613,5.989117,3.238100,0.586535,-9.761421,-9.591181,5.504494,-6.416547,-0.212633,-6.135487,-7.112664,-6.946233,7.085746,-8.596823,-5.370706,-0.733788,-5.064352,-5.254034,-4.484720,2.402692,-9.885195,-8.489677,8.767099,-9.825894,-4.756746,5.984892,-2.579514,7.670953,-0.473757,-2.456042,1.261102,-2.215663,-4.820995,-9.831668,-8.624582,5.907663,2.722524,-0.857838,4.528535,5.458496,-5.012933,-7.916058,-3.001947,-2.834069,8.654350,2.965396,4.139768,-1.664984,2.783713,-2.886738,-0.937808,-9.171454,-1.613686,-2.329469,-5.590739,1.766195,-0.250664,0.048689,1.845582,3.864448,-8.009423,3.716589,5.890401,0.290636,-4.630576,-5.425116,3.648802,8.175816,-0.502854,7.428874,7.088975,8.368767,-8.610730,-4.574786,-5.943385,-7.738618,0.896325,-0.066513,-2.030734,3.401404,-6.404061,7.710259,-0.155518,1.122558,9.611186,3.077828,9.120637,-8.020898,2.219261,8.118880,4.846733,-4.634415,4.673954,5.901324,-1.391888,3.871800,-9.128289,1.468527,9.059690,1.780697,4.365539,7.426592,0.271158,9.883335,-8.028198,-3.493257,-9.285376,-2.866254,-5.703448,7.628542,-0.041586,4.424228,-9.232700,-6.762969,4.686809,-1.214968,-0.969818,2.779741,3.486434,6.039797,4.044624,3.406136,-5.553436,8.867476,0.817055,-1.370392,4.390388,3.630668,-5.835718,9.787747,5.082484,-8.492165,5.006482,-5.629395,-1.021830,0.483007,1.572259,-3.410744,-9.061203,-3.079955,-9.930726,-1.659468,-3.931269,7.477563,1.309281,-4.859745,-9.793094,-9.440922,-9.377074,9.508286,-5.737724,-1.562290,6.158594,-1.148172,2.567895,-9.262548,2.968599,8.766700,-5.817387,-3.534281,-7.855933,-0.093800,3.188277,-5.620580,6.701268,0.805311,-7.472389,-5.276733,-8.457264,-0.781437,3.356585,5.406649,6.078820,7.157842,-0.446316,2.795551,-7.393241,4.373474,-8.885270,-2.235692,8.763600,-0.707750,3.561701,-9.795809,3.162887,6.775435,8.242590,6.011703,-9.147311,-2.157528,-4.176458,3.344970,9.553611,-2.180154,-0.929645,-5.911264,-5.344934,-3.843573,3.450387,4.425806,7.942542,2.500312,-7.679468,5.666523,7.998988,3.455876,2.740890,5.689478,7.102579,-6.814703,-1.985765,-3.166237,8.693521,-9.551684,2.842409,8.235968,0.006106,3.436309,6.543871,-3.914511,-8.002790,-9.387290,-9.222731,-1.826574,-9.613226,7.826987,4.293569,8.407106,-1.143463,2.772405,-3.197329,-9.251157,-5.366235,8.307785,-2.437668,-4.460986,2.797373,-5.768965,-9.475726,2.446152,-2.377460,8.321298,-6.262271,-8.391359,4.727168,-3.382737,2.543704,5.367500,-4.546800,4.013452,-8.119839,6.749173,1.701638,5.726671,1.627236,-8.037140,0.043732,8.539931,-4.245037,4.448982,-6.709652,0.903101,-2.881236,3.988667,1.058216,-2.537537,-8.230347,2.149266,9.989364,-3.390699,-8.505533,-3.452633,-3.012834,9.544140,-3.317624,-3.557493,7.895740,-7.677084,-1.853763,-8.741031,-5.144960,3.390748,7.376048,-6.571567,7.456655,5.275060,8.075141,-8.763868,8.935489,7.907735,-1.995272,-3.880171,2.523738,0.825251,-9.384793,-7.016975,-6.238601,-0.112234,-7.220495,1.093564,8.355627,5.195610,-8.529699,-9.425178,-1.511441,8.973980,-2.513708,-1.372328,-5.803192,7.347052,1.038974,-1.727386,-3.447374,3.351881,6.293020,-7.990128,3.779893,-6.917862,1.486045,-5.611015,-5.423532,-7.188202,3.818159,-4.673558,2.961167,8.044807,9.040626,-7.458654,-7.946804,3.542988,-4.526622,-4.690347,0.494469,-5.319346,0.597541,-8.380813,-0.241322,-8.357468,6.494202,-8.956698,0.362152,-3.226510,3.725063,-5.064165,-1.229608,5.362128,3.143207,2.900283,-6.134364,-9.516895,-8.822820,1.505669,6.945209,-2.195104,9.402839,3.383113,-6.388805,0.242391,9.463740,9.945512,8.914664,-1.048558,-8.293541,-2.888017,7.823166,1.013029,5.292767,6.548598,-0.726612,-5.719102,-0.298784,-2.177024,9.077360,-2.059230,5.320765,-4.838837,-0.511007,-9.467637,-2.430368,-7.842654,1.881301,6.363474,-5.507520,8.169595,0.084843,-3.748236,-7.531141,-3.610002,0.997826,-6.664260,6.793470,8.414855,5.999317,-6.524088,-5.560081,-3.141651,-5.694759,3.962169,-0.464457,-9.176479,-3.496982,4.522133,4.294028,-2.645670,-2.143379,-2.059768,2.045131,8.810045,5.463692,4.609958,-2.534909,5.275130,7.588175,-7.654700,5.056565,3.988377,4.470059,-4.944299,6.326698,4.252102,1.690103,5.639886,-5.019231,-5.388709,-8.097348,1.127109,6.794696,-4.593982,8.470853,-0.358882,9.845554,-0.647725,-4.612893,2.505166,6.460779,4.817185,-8.679222,-5.243524,0.327713,-6.868437,-4.393959,0.150292,-1.735910,-1.447904,-9.799638,3.430384,8.527227,-0.287000,-7.002979,0.903936,5.410667,3.464060,2.791497,-0.294995,-3.893999,-3.828162,-8.322851,-2.282393,3.840008,7.049064,6.581703,7.210908,-2.482797,-2.802555,-8.602361,6.324108,-1.511423,9.691113,-5.273254,-0.706526,0.066778,5.290535,-4.713262,-8.760671,-2.012623,1.679423,-1.965962,-6.311404,5.129113,-1.839676,-9.527790,0.918226,-8.764558,-2.114899,-1.400618,8.948383,-0.553413,5.964746,-4.848438,-4.634222,3.214602,-4.612864,3.759743,5.305306,3.119040,-9.772976,9.071087,-1.374568,-3.180529,-5.782189,2.136899,-0.153882,-2.496883,9.935765,-8.422357,7.391995,5.790270,1.066378,0.997765,3.026158,-8.276167,-5.026707,4.176332,4.204370,-8.846440,-3.758276,4.422711,5.844717,4.171787,-8.927567,-6.560983,4.925303,2.445569,-6.679872,9.522694,7.398866,4.524066,9.584700,-3.314373,8.403405,-7.783520,3.523404,-9.384433,9.264559,6.998615,8.547660,-0.148824,4.537792,-1.814673,-2.911138,-3.441952,2.350093,5.716810,-9.334663,-1.533144,-2.332417,-5.141228,-6.517317,-0.784397,-0.329918,-3.508413,-7.549297,-6.167459,-8.293729,3.007302,7.282004,2.939818,-6.660243,4.205390,-7.967500,-0.009972,0.484944,-0.400393,5.032935,6.513068,-2.027151,-7.622339,-4.811474,9.470562,9.565751,4.223817,-6.499031,2.093144,-5.456464,4.683551,-1.795572,6.117540,-5.816823,-7.643506,4.211413,1.288747,3.486805,-9.529623,2.457813,-3.994784,-7.953674,7.920289,-8.188542,8.645456,4.815697,-9.682552,-0.531210,7.530343,9.109966,4.462859,-5.844649,2.961908,-8.393291,5.634179,7.499578,-6.934471,-1.409983,-4.977816,-9.065002,8.008038,-1.989480,-0.577742,7.632825,-6.330672,9.691470,8.055237,-5.402017,2.021369,-9.016780,-6.551534,-7.991244,-2.540964,-4.454637,-8.382636,-4.568410,4.162118,0.363363,-6.413986,8.676945,2.889559,-9.616259,-0.304889,1.903304,7.058688,5.823209,8.325145,-9.692710,-8.860538,-9.415918,5.163356,-3.390638,-9.161017,-2.221740,-8.882939,3.916340,-1.914814,2.408791,-8.762315,-5.073695,-7.748451,-7.536420,-8.232055,5.065112,4.183722,8.624768,5.293980,9.388260,1.430969,-9.878500,-5.787968,6.827842,0.775676,5.635440,-8.496661,3.348929,8.341393,-0.853138,-8.780812,-8.497327,-0.727583,-4.804018,1.215796,2.425380,-5.128410,0.534723,3.060324,5.792779,9.402402,-2.246790,1.168192,-4.188478,0.277269,-2.039266,1.280002,-3.772150,-8.008189,9.367600,-2.898722,-3.194113,-3.512285,3.151232,-5.113832,-4.917644,-8.889096,1.029165,-4.920949,-2.806628,8.369932,5.593773,-9.098111,-0.239914,-2.524036,-4.417645,-3.440786,5.314910,-1.660183,-5.002713,-6.097387,-9.579528,8.906922,-2.764288,-7.911953,-5.217986,0.394233,-7.471538,3.506979,-4.917717,-6.896054,-1.962125,1.953686,5.352050,4.833876,-1.330932,-0.036034,-5.952828,9.824949,2.445794,9.006877,7.164450,1.269614,-4.434797,-8.796713,-7.491148,-3.258316,9.848875,9.307408,8.455344,-0.802706,-2.251651,0.629068,-7.213552,3.072016,-2.571106,5.343181,9.779160,4.811581,1.135156,-7.423046,-8.480330,3.759479,-3.711846,-0.873694,5.039147,2.058381,7.803766,-8.721689,1.679759,4.883087,-3.401146,3.197821,1.059371,-4.604193,-3.720427,-3.338422,4.972987,-1.614843,-4.505296,9.814730,9.663571,6.170192,5.449383,0.364299,5.346036,-2.442022,2.282964,2.112238,-5.589848,-3.968421,-4.019611,4.015827,-6.618104,6.319030,-4.520902,-6.151707,-3.731936,-0.202969,8.197111,-6.640807,-7.021665,-6.880454,3.724867,-3.632187,1.849298,-4.516616,-4.138996,5.650442,-9.136152,2.456983,-4.257386,-8.363608,-0.187568,-0.802972,-8.394229,-8.674214,-0.440169,2.250524,5.351606,2.481132,-8.806467,-9.538655,-6.904324,6.719181,1.486582,8.698109,-9.060445,-4.989935,5.317356,-3.375052,8.982256,-9.417988,3.714516,8.711548,-8.497086,-7.693344,8.563750,1.558393,-2.431135,-6.566249,9.236391,9.612868,0.809304,-5.304255,3.987783,3.237956,-0.698925,-9.169802,0.848343,-4.364331,-3.328792,-2.301789,1.989596,4.356542,-5.242680,5.924573,-3.702378,1.570772,-3.555739,-8.026518,-0.207293,9.938461,4.275608,-8.834914,2.475819,-5.678468,8.359823,2.752706,-2.397750,0.051255,-7.011468,1.240933,1.930548,8.888381,-4.620027,2.692984,7.031796,6.394043,-9.158223,5.526672,-6.476137,-4.023912,-6.221122,2.049263,-2.482423,3.486332,3.519296,6.007200,1.306606,3.057664,-8.899945,-8.533404,6.149796,9.798385,4.700387,2.819093,-1.006008,-3.145247,-3.390872,-0.071618,-5.274193,4.488345,-5.973770,-4.624600,4.589706,2.634219,5.192320,3.266291,-8.683413,-5.452566,1.166422,0.765514,2.078763,-1.130774,5.522572,6.147382,-6.823448,-2.329077,5.168765], dtype = "float64")#candidate|10001|(924,)|const|float64
var_10002 = relay.var("var_10002", dtype = "float32", shape = (832,))#candidate|10002|(832,)|var|float32
call_9999 = relay.TupleGetItem(func_8781_call(relay.reshape(const_10000.astype('int8'), [36, 22]), relay.reshape(const_10001.astype('float64'), [7, 132]), relay.reshape(var_10002.astype('float32'), [1, 832]), ), 6)
call_10003 = relay.TupleGetItem(func_8786_call(relay.reshape(const_10000.astype('int8'), [36, 22]), relay.reshape(const_10001.astype('float64'), [7, 132]), relay.reshape(var_10002.astype('float32'), [1, 832]), ), 6)
func_7645_call = mod.get_global_var('func_7645')
func_7647_call = mutated_mod.get_global_var('func_7647')
call_10016 = relay.TupleGetItem(func_7645_call(), 0)
call_10017 = relay.TupleGetItem(func_7647_call(), 0)
output = relay.Tuple([call_9992,bop_9995,call_9999,const_10000,const_10001,var_10002,call_10016,])
output2 = relay.Tuple([call_9993,bop_9995,call_10003,const_10000,const_10001,var_10002,call_10017,])
func_10024 = relay.Function([var_9986,var_9987,var_10002,], output)
mod['func_10024'] = func_10024
mod = relay.transform.InferType()(mod)
var_10025 = relay.var("var_10025", dtype = "float64", shape = (4, 12, 1))#candidate|10025|(4, 12, 1)|var|float64
var_10026 = relay.var("var_10026", dtype = "float64", shape = (4, 12, 1))#candidate|10026|(4, 12, 1)|var|float64
var_10027 = relay.var("var_10027", dtype = "float32", shape = (832,))#candidate|10027|(832,)|var|float32
output = func_10024(var_10025,var_10026,var_10027,)
func_10028 = relay.Function([var_10025,var_10026,var_10027,], output)
mutated_mod['func_10028'] = func_10028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9636_call = mod.get_global_var('func_9636')
func_9637_call = mutated_mod.get_global_var('func_9637')
call_10033 = relay.TupleGetItem(func_9636_call(), 1)
call_10034 = relay.TupleGetItem(func_9637_call(), 1)
output = relay.Tuple([call_10033,])
output2 = relay.Tuple([call_10034,])
func_10037 = relay.Function([], output)
mod['func_10037'] = func_10037
mod = relay.transform.InferType()(mod)
mutated_mod['func_10037'] = func_10037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10037_call = mutated_mod.get_global_var('func_10037')
call_10038 = func_10037_call()
output = call_10038
func_10039 = relay.Function([], output)
mutated_mod['func_10039'] = func_10039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6527_call = mod.get_global_var('func_6527')
func_6528_call = mutated_mod.get_global_var('func_6528')
call_10117 = relay.TupleGetItem(func_6527_call(), 0)
call_10118 = relay.TupleGetItem(func_6528_call(), 0)
func_5102_call = mod.get_global_var('func_5102')
func_5104_call = mutated_mod.get_global_var('func_5104')
call_10122 = func_5102_call()
call_10123 = func_5102_call()
func_2460_call = mod.get_global_var('func_2460')
func_2465_call = mutated_mod.get_global_var('func_2465')
var_10132 = relay.var("var_10132", dtype = "float64", shape = ())#candidate|10132|()|var|float64
const_10133 = relay.const([-0.487046,-3.089441,-4.666978,0.064581,-3.935559,7.739573,-3.176075,9.073110,-4.087021,4.799864,4.550058,5.725716,9.603592,6.214518,3.418189,-0.048852,-7.617109,4.265719,-4.219569,-7.919611,-3.905294,-1.122077,2.611754,-6.174651,9.523524,5.140781,-2.487050,-0.609430,7.674561,-7.840420,6.182331,-0.770586,8.891164,-4.559240,-6.301383,4.188132,1.602423,0.559394,3.214647,-7.515963,9.143160,6.655788,-4.982397,-8.430649,-1.161139,1.730576,0.249672,1.061678,0.217524,-3.554210,-4.649835,7.954755,6.273007,-1.055027,-8.686871,3.720340,9.000162,1.535517,8.818544,6.240293,-6.605593,8.802371,-0.521400,9.531080,6.960171,0.387318,4.080941,1.867396,-1.961972,1.292060,-7.166649,-1.201483,-7.561269,-1.339541,6.691691,0.699331,-2.299140,6.885299,7.734053,-1.804696,2.116954,-5.104062,-7.195014,0.441258,-2.680532,3.682360,-7.514659,-5.467329,6.608538,-3.632402,-2.306024,6.610831,-6.241630,2.770985,9.263337,-7.520550,8.270312,5.833205,-5.282025,-1.747726,6.691367,-3.670174,-5.011204,-0.570879,5.259193,-6.888948,-3.690762,-1.569102,6.360175,-8.755134,4.061216,6.330491,-9.793347,0.257645,0.206360,3.710589,2.970552,-5.244246,-2.698455,-9.631661,9.960952,9.325089,-4.876361,7.779663,8.204814,-3.442874,-7.939002,1.627761,-1.800734,-2.044460,0.524496,-0.388128,4.844781,-0.946366,-1.632260,9.022627,1.570796,7.441879,-5.619641,5.922410,1.557765,-7.936146,2.872737,-1.972746,-9.152069,-8.709128,-9.181076,0.535978,4.949018,9.119606,-9.161361,-1.301506,9.128968,2.162458,-7.555044,8.103434,-0.798321,4.102924,5.370598,6.081880,-6.278174,4.941659,-3.501168,-3.865016,-7.112630,7.842706,-1.945636,9.541975,-7.598409,7.716738,3.268980,-2.657645,3.084388,-1.780219,9.704883,-2.664851,1.617143,-8.407785,-7.683695,9.605782,-5.277707,0.914012,-7.423321,-9.199530,3.980349,2.259482,-2.472087,-2.646930,-7.848534,-0.833032,-3.983826,2.596635,0.698999,-1.791822,9.859154,-7.147707,-9.943433,-7.918567,-1.966225,0.964267,3.587744,4.873436,-1.232051,8.892519,-9.252770,-6.711382,-2.865612,-0.482513,0.060565,-8.133476,-4.273930,-0.653224,-2.918621,-6.462679,5.917644,1.709346,-5.380072,-7.453632,-4.308887,4.062693,-7.351338,-0.061329,-7.442310,-3.630282,0.457737,-9.394452,5.346377,-6.471258,0.259292,7.337395,2.611076,6.988135,1.406675,-2.741089,4.005663,-5.112944,-6.641494,6.008829,8.580186,-6.054510,-8.429093,-3.254213,-8.661270,2.294162,1.656592,-0.733027,1.683314,2.728488,-1.622835,3.904070,7.611698,9.943356,-8.654320,-1.414032,-9.033466,-1.643350,9.655653,-8.814814,3.663603,-9.712004,-5.033115,8.051720,-4.262139,-5.768550,9.094669,3.358019,4.840816,-6.684523,2.029971,9.487381,1.333450,-2.595153,2.388688,-8.980014,-1.533798,3.721199,-0.805003,8.121720,6.880283,8.891950,7.864911,-6.437476,3.117039,-1.447207,8.077314,-6.715132,5.064284,-5.853047,7.433257,3.950463,4.193156,1.291250,-9.278295,-6.014212,-1.932920,-7.245820,-7.366050,8.625652,3.455576,-9.703114,0.911144,9.506626,2.811521,0.988758,3.680052,7.731081,-7.952067,-3.482478,4.726485,-2.728775,-7.483862,8.913883,8.464324,-9.906869,-0.393838,-0.427224,7.334880,-1.941045,6.238015,3.327832,-7.665543,9.389514,3.280635,5.524346,-8.860304,3.758052,-3.725722,-0.897900,9.094899,-5.814084,8.239863,1.228314,5.046600,-9.271078,-6.444804,8.747421,-4.640471,5.439143,-5.082121,-0.338411,-8.302093,4.701528,-0.703392,4.108935,-9.409899,0.749715,-4.066260,-9.060312,-8.974497,-1.921499,-5.495410,8.740998,-1.906480,5.173867,-7.266651,8.141325,2.617498,3.062249,-6.638476,5.510243,2.787878,2.365951,1.922945,6.601244,-8.305683,-8.319153,4.531533,0.567116,-9.328878,-0.205564,-1.189415,-3.592908,-8.644331,1.046224,-7.851417,3.997025,3.036599,3.121693,-8.368757,-3.518550,-1.009688,2.479123,-5.496669,1.082269,2.663651,8.485307,1.047901,1.780656,-0.019512,9.959360,2.018994,-3.544425,3.704914,-8.365438,-6.409831,-0.304099,5.245933,-8.729842,-4.476181,9.980336,6.215125,3.459825,-7.406920,-0.126560,5.154909,8.668483,-1.087130,2.143307,9.665149,6.348303,-9.359107,-1.124569,6.420713,2.533809,-9.022241,-3.387037,-1.265073,-3.869963,-6.163600,8.517525,-5.067615,1.567306,-6.323646,-6.248655,-3.144604,9.022113,4.203547,-8.167275,-3.938536,-1.038398,-1.298125,-3.061787,-4.741953,1.540658,5.136253,-5.728774,7.864574,-8.441192,-5.740308,5.941375,-3.749335,1.722941,-2.197487,-7.447195,-5.663112,3.931984,5.807555,0.357035,1.671641,5.195083,6.576582,-1.970811,7.922381,-0.551500,-0.337601,-8.498843,-2.029746,-2.779102,1.054379,9.230105,-6.508253,3.191738,-6.578991,4.231658,9.753028,-7.749400,1.890470,-9.085131,9.733722,-3.182670,-4.023144,-2.479137,7.200783,-2.737758,2.489408,-7.765035,-7.172818,-0.926316,-0.374663,-2.434834,-6.096589,-3.573465,-9.241562,-0.561132,0.464233,7.685165,2.569037,-7.791292,-8.483202,4.810044,-8.594514,6.044610,8.802933,3.101377,-0.532976,-3.130276,-3.072225,-1.551997,6.170163,-9.241964,0.073746,-4.908474,8.770873,8.451216,1.968825,2.239436,-9.270993,5.072983,-7.569672,5.458388,-3.647965,1.082770,-8.436896,8.569517,-3.429265,-6.702998,3.761087,-6.477666,3.174717,6.096332,1.380806,-3.613046,7.540132,2.000806,-7.169411,-5.917011,-3.165896,5.271366,2.709636,-4.872608,-9.557889,-8.940079,-1.060414,-1.470702,-2.041238,-9.486231,6.076333,-2.397291,-2.618241,-5.673274,-8.068973,-0.119715,5.387469,-2.107620,-9.667620,-5.505390,8.140737,9.230198,-3.849360,-3.447898,8.793258,-6.021483,0.971172,9.970081,-4.878911,9.486422,3.821036,-5.547712,5.347557,9.865456,8.610865,1.419549,-5.031612,-3.261975,-9.871820,-7.280456,-4.392476,-6.533517,3.133205,6.006670,-0.655632,-3.764316,-7.538716,-5.241165,6.828270,-8.557310,4.831077,-2.675050,-3.499459,-6.183244,9.106012,-3.134409,6.402607,4.147477,-1.943674,3.852401,5.499445,-4.929071,-4.858396,-7.122818,7.954941,-9.669208,-1.277555,-8.958120,-2.470066,5.759745,7.560885,9.870187,2.388705,6.386955,7.644981,-1.339752,8.213341,5.103112,9.723800,7.296006,-0.494072,0.958164,-5.472748,0.739900,6.242956,-8.384866,-6.655799,4.002975,0.548577,6.678569,9.610198,4.440867,9.403200,-9.079559,-8.441550,9.713981,-1.213793,0.830343,-7.193461,2.138836,-2.023479,8.667426,3.038130,-7.559380,8.022887,1.474818,3.316621,3.268763,3.382037,1.071572,-2.992046,-2.644654,1.674878,9.115348,-5.696722,9.912421,5.467770,6.870031,-1.011361,8.435996,-5.427060,-9.092063,3.931010,-6.671476,-0.349326,1.524429,-6.697512,2.956828,3.830209,7.076058,5.570648,-0.332425,7.403510,4.620873,9.948881,-2.750828,9.395709,5.129796,-2.884895,-9.750553,5.109826,5.979463,5.076815,-2.826369,-8.139591,2.796036,-5.791811,-9.065190,5.337289,3.782148,-8.985819,-4.644667,5.359696,-7.954421,5.208744,-8.376389,-7.296305,-5.754309,-7.169918,6.070346,1.513026,-7.125983,-7.450964,9.007368,-7.609075,7.106487,-6.986236,-7.573722,4.168513,-7.373121,3.700188,-9.502308,-2.264559,-9.484448,3.963768,9.991700,-7.671075,-8.110981,-8.890564,-3.945687,9.917025,6.098427,-5.976071,5.584070,8.395073,-4.113617,-6.520911,-8.226562,-5.529019,4.349087,-1.969410,-8.213635,-0.934280,-6.463890,-5.748961,5.486661,-1.982210,-0.069221,-9.583923,-5.021644,7.275573,3.551024,5.214733,-0.969212,-5.714845,4.653968,3.056116,9.163235,5.299261,-7.529542,-0.798991,3.433893,4.954823,9.840660,5.810912,8.448144,0.946164,-6.678805,-4.514627,-7.176546,-3.948955,-8.173812,0.753833,5.309458,5.370189,-1.458984,5.208003,-6.216343,8.185886,-5.391186,1.443352,3.570203,-0.829247,-0.097932,3.013371,1.379724,-7.531849,5.717798,2.009235,-9.760421,-3.617379,8.881413,-0.532028,-0.650443,5.686736,-5.148585,-6.806897,3.249578,0.493415,-5.768345,-3.306368,-4.420220,5.274901,-2.007821,-8.440634,2.155066,-1.049754,-2.747921,-1.009793,-1.510118,-1.566792,-2.308767,3.376384,2.739240,9.044376,6.572696,-1.481231,2.791453,7.855904,-3.471888,-0.517416,-2.479095,-8.406909,-2.695949,-6.781828,3.596012,1.298982,8.170605,0.368671,-8.047968,-0.508111,6.618628,5.098529,-0.187759,-4.119593,0.234481,-2.968080,4.491736,-0.511140,2.460280,0.752840,0.508719,3.248412,6.260936,-0.767307,7.948259,7.593535,8.958888,6.901397,6.429176,-6.725057,8.039484,-9.915328,-2.937636,-6.961626,4.435831,-8.215863,-2.457176,-2.686699,-2.800515,2.519124,8.225663,-9.034562,-1.982531,5.273217,-3.875772,-7.008742,-7.847722,-2.897737,6.736000,6.553109,-0.243412,-7.424388,0.207264,-2.202072,3.384838,5.860375,-9.834482,0.669601,-3.585423,-9.606006,-5.657622,-9.310132,-2.101257,4.989497,3.749550,-3.750537,-5.998857,-3.371881,0.293341,-7.351109,8.214409,-3.240920,9.633888,-6.057286,-7.368794,-7.669130,2.689570,6.519002,-8.246815,4.589860,9.784213,2.359295,-9.076701,0.906368,4.601726,-8.612646,-0.472379,-1.714907,-1.511594,7.687905,-7.561879,-1.756962,-2.726589,5.929081,-7.625880,-4.525378,-6.304836,-2.745218,4.420272,1.946060,4.375887,4.298786,-1.522623,5.776564,-3.705497,1.212513,8.819965,-5.062172,5.776153,-1.460322,3.651949,-1.784237,-0.689764,-6.619723,-0.156621,-6.821244,-8.524284,7.699111,-0.515182,9.321204,9.478332,4.113139,-9.479665,-0.400473,7.588339,-0.486840,2.100708,-0.610087,8.650642,-4.761570,-1.860833,7.150980,-9.703383,3.140398,6.768340,-7.486612,8.443085,3.970755,5.202041,-0.499356,-6.651909,5.770469,1.646865,-0.741956,4.312095,-9.290654,1.650275,-2.954043,6.389023,-6.432455,-7.138425,9.376394,-5.709907,-8.747889,6.162980,-5.601035,2.356574,9.244997,-6.271331,6.316133,-8.361560,4.190963,5.341081,-2.569275,-2.802316,7.480690,6.204825,-6.845496,-7.719362,0.655723,1.240544,3.954273,-5.573997,2.547439,-4.507528,-7.229342,1.096699,5.355647,1.073548,0.142294,-8.997046,-9.246854,0.877018,-3.218080,6.849506,0.261987,9.505318,9.649706,-6.500562,-8.242869,3.007847,0.826269,2.273092,3.245655,-9.430729,-7.102770,-5.682392,-2.817106,9.645715,1.772528,6.269053,-3.706182,3.593096,-9.589079,-6.312130,8.980584,2.285255,-3.062347,5.097939,0.731840,-5.091980,-7.071896,-3.912240,2.204984,4.722544,7.117244,2.438360,-3.831688,4.617704,-7.800415,5.350894,-0.700208,4.473741,7.732357,-9.135614,-2.150719,-5.163052,4.794331,-1.000970,8.119314,5.043942,-2.128409,-6.250412,-2.596209,4.173396,4.277657,-3.277110,9.327070,9.561254,-1.765308,2.237966,-0.940164,9.310268,-7.651982,-4.003083,-4.738761,-2.892586,7.461258,9.660592,6.103113,-4.699342,0.041868,-1.107887,-7.100329,-4.777069,8.078979,-0.996949,1.609816,-5.453381,7.629519,4.194335,-9.815931,-7.463644,-2.965643,0.288063,-2.668922,0.177856,-8.731463,-5.787204,6.568830,5.643171,-3.971840,-0.704329,-0.861279,0.605692,-6.679952,5.085778,7.570559,-6.772080,4.645348,6.805884,9.896632,9.688376,-7.678933,7.060434,-2.675770,-5.583287,-7.732513,0.101360,1.589658,-3.003103,5.536024,3.115617,5.311572,2.172265,8.766604,-3.463199,7.846827,1.892560,2.411598,9.571597,8.688063,-5.030673,-0.088500,-9.143111,-4.899256,9.608264,-2.750160,-9.065929,-0.539261,-1.258346,-6.650878,6.045925,6.811797,6.729794,3.846236,-7.797348,4.700678,-1.371323,-4.763800,7.784975,6.355771,5.402541,0.773748,4.231864,0.415182,-6.347874,-5.327310,2.220101,-0.713352,-7.186531,0.745220,-7.653203,3.138203,-1.873726,-2.772296,-5.919503,8.363495,4.845165,-0.201122,-4.865460,1.138494,7.302773,-1.445343,1.524059,-5.794139,-0.745222,-1.428898,-2.166235,7.835551,-5.216443,-5.254402,5.150016,-8.445691,6.301134,5.821459,-2.505594,-1.088239,-5.557837,-3.602653,0.732707,8.023758,-0.664102,-5.944613,1.105660,0.912034,2.519426,4.722424,4.957797,-9.172147,-6.164448,2.383085,-9.004469,-8.746902,-2.359090,-7.323609,0.073476,-2.532430,1.204025,-4.905257,-5.908555,-0.176233,-9.634245,1.632959,4.412195,-3.925732,5.885884,-6.372172,7.772389,2.900393,9.775826,7.024187,9.456030,-1.187238,-3.628377,-6.507441,2.052581,4.644230,-2.802275,1.623115,-9.820023,8.668295,5.286342,7.944483,-0.973515,3.387019,-7.847893,9.550901,-9.481321,-5.224494,-5.484337,5.081873,-0.931833,8.630769,2.702383,-9.557368,-3.771912,-6.571632,-1.492480,-6.157050,-8.330971,-4.266691,-7.436757,-9.684656,-1.847303,-0.306358,8.374180,-6.934827,-9.782136,-4.008910,-6.578022,3.015692,-4.860101,3.711413,9.937724,-6.781464,6.928879,-3.684050,-8.512146,-0.144785,0.757779,9.975891,-7.136572,-0.277561,-6.882611,4.349570,-6.537531,4.824859,-7.676100,1.408978,9.426594,5.831788,-9.993356,-7.730432,-5.973132,3.253466,6.676983,8.269038,-5.585910,-6.718891,-9.563063,-8.768799,-6.629056,-0.982379,-6.359289,-2.010870,8.014622,-2.632286,3.510430,-7.876856,7.864005,-6.302323,-0.896991,-9.107190,1.696710,8.956706,-3.539363,-3.366672,-2.463743,4.985934,-8.966460,-4.702333,2.744835,-9.637576,8.002742,3.577089,-4.061258,-7.553043,2.990533,-6.815060,6.817393,-5.051414,0.940496,6.669362,7.272862,-4.518266,-8.361154,3.351012,6.051237,7.232945,-3.716137,8.488727,-3.394833,-6.613840,-8.250664,-6.533982,-4.495370,-6.143642,-1.391643,3.656667,-3.881100,1.956867,-3.149958,7.383111,-1.544113,3.256267,4.241834,-4.574269,-5.085516,2.167416,4.267021,-9.106205,-7.213660,4.889284,-6.991378,9.692151,-0.934147,-1.658232,0.740906,-9.150661,-5.573555,9.243461,-8.639781,5.909339,-9.589898,2.598580,-3.567311,0.357235,-1.832801,1.176985,-1.152385,-0.692492,-7.066967,9.721936,-1.367755,3.216491,4.106647,-8.749329,-6.900176,-3.723999,-9.942589,-0.789034,-3.930650,7.652781,-2.145017,1.377826,6.636298,8.708441,-4.972004,-1.707235,-0.125455,8.841533,-9.142602,3.888887,5.605559,5.704940,-9.014382,1.034218,2.616203,2.464502,1.903801,-7.461619,-8.356922,-7.836678,0.671195,7.582075,3.918480,8.684609,-3.722332,-8.988942,6.758054,3.156135,-0.187210,-6.277006,-4.823908,9.596460,-4.665462,-0.893384,-5.208930,-4.274768,4.653244,6.505674,-5.823743,-2.952354,-4.457268,7.583105,-3.277994,2.832522,5.292282,7.240658,9.987575,2.553075,-0.929109,3.529669,0.826874,-8.471469,4.260432,4.887765,7.666133,7.840512,-2.665436,4.077836,7.011040,3.867081,-6.575064,-7.534475,-8.130954,1.507898,-4.903501,5.652647,-6.268010,-4.834618,3.484515,-6.862208,-3.629470,-9.781847,-7.816633,7.967654,-5.950534,-7.121617,2.074346,7.537559,-6.211142,3.782999,8.513957,-6.406676,-6.850065,6.554410,-5.572347,-5.220013,5.917430,-5.249219,-7.549110,-6.410593,-8.256307,2.334149,0.495593,1.027206,-0.551951,-1.910571,7.964231,1.341269,-7.535214,-7.648743,-0.982181,7.179751,5.040583,9.191353,3.283679,2.455377,-3.625071,-9.047783,5.157901,-3.695091,-1.828681,5.403778,8.251648,1.645432,2.825575,3.319221,4.292735,-5.936588,-5.941898,-9.191319,3.680956,5.082070,6.216838,7.735853,-4.406565,-5.406929,5.295826,-6.467992,-5.114635,-1.990947,9.548259,-0.235915,-5.769495,-8.464236,-8.669882,-1.520941,-9.210971,-8.436700,1.327877,-1.583976,4.570072,-9.805061,-1.877256,1.711869,2.063938,-8.630635,7.744428,4.818618,6.523785,-7.338999,-8.538747,4.817824,5.669979,-7.908881,-7.171616,-2.745209,5.621875,-8.360223,7.396094,2.332161,9.063787,-9.796656,-9.258222,-9.378331,7.286433,2.130006,8.821196,-5.651592,-1.094499,-0.173969,9.198487,-8.852207,3.031305,-6.861842,7.010412,6.999450,8.893715,9.875478,1.634401,-7.841243,2.150292,8.306989,-7.661663,5.688711,-3.410881,6.539640,-6.798067,5.395304,-3.156296,-5.725662,4.503782,-6.582299,2.042689,-2.926024,7.857728,4.414520,-3.279967,-2.376208,-9.839907,-6.733581,3.432649,-0.145037,1.613694,9.712537,5.313155,6.216079,-0.093845,-7.413801,-0.512142,-3.780932,4.458736,-6.973585,-6.548367,-8.605251,-4.692075,-6.245489,6.003809,6.555381,-9.202029,-3.776246,-1.155265,-4.688226,-2.187733,1.914589,4.756778,-3.433295,5.073977,-5.271058,3.929862,4.676284,3.546601,5.107345,-4.948263,-1.914431,-2.073593,5.523195,-2.270572,3.468502,-5.982916,3.652306,-3.313646,-5.506065,-8.193183,-4.478913,4.882645,1.448732,4.176071,7.091995,8.659487,-7.164435,2.949350,1.774338,3.768100,-7.211942,8.171356,0.712186,3.681905,5.410134,-1.821400,-3.115755,2.776874,7.918412,-6.898405,8.735168,-9.887392,9.967633,9.020944,8.754249,1.617833,-7.643317,-8.614298,2.510150,4.371944,7.047679,-7.077471,5.112690,-3.148014,-3.115574,-0.308300,-1.271079,7.342064,-2.098450,-9.288870,4.147103,0.401150,-0.273646,8.830753,8.815375,3.946767,-7.850228,-9.073045,9.268248,-0.200906,-9.036809,1.988468,0.258775,-2.096559,1.133124,-6.177129,6.344364,-6.257491,3.015145,6.757654,-3.740952,1.502575,-5.966587,1.810197,-0.877278,2.872118,-1.584700,-3.790269,6.722164,4.062443,7.744651,4.961799,9.719661,6.170609,7.988094,8.821665,4.119503,-3.780742,6.695064,8.029579,-2.210613,-3.621581,-7.142196,-0.719716,1.829309,-2.134949], dtype = "float64")#candidate|10133|(1680,)|const|float64
call_10131 = relay.TupleGetItem(func_2460_call(relay.reshape(var_10132.astype('float64'), []), relay.reshape(const_10133.astype('float64'), [14, 10, 12]), relay.reshape(const_10133.astype('float64'), [14, 10, 12]), ), 0)
call_10134 = relay.TupleGetItem(func_2465_call(relay.reshape(var_10132.astype('float64'), []), relay.reshape(const_10133.astype('float64'), [14, 10, 12]), relay.reshape(const_10133.astype('float64'), [14, 10, 12]), ), 0)
bop_10143 = relay.bitwise_xor(call_10117.astype('uint8'), var_10132.astype('uint8')) # shape=(7, 6, 12)
bop_10146 = relay.bitwise_xor(call_10118.astype('uint8'), var_10132.astype('uint8')) # shape=(7, 6, 12)
output = relay.Tuple([call_10122,call_10131,const_10133,bop_10143,])
output2 = relay.Tuple([call_10123,call_10134,const_10133,bop_10146,])
func_10151 = relay.Function([var_10132,], output)
mod['func_10151'] = func_10151
mod = relay.transform.InferType()(mod)
mutated_mod['func_10151'] = func_10151
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10152 = relay.var("var_10152", dtype = "float64", shape = ())#candidate|10152|()|var|float64
func_10151_call = mutated_mod.get_global_var('func_10151')
call_10153 = func_10151_call(var_10152)
output = call_10153
func_10154 = relay.Function([var_10152], output)
mutated_mod['func_10154'] = func_10154
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10223 = relay.var("var_10223", dtype = "float64", shape = (2, 16, 11))#candidate|10223|(2, 16, 11)|var|float64
uop_10224 = relay.log2(var_10223.astype('float64')) # shape=(2, 16, 11)
var_10226 = relay.var("var_10226", dtype = "float64", shape = (2, 16, 11))#candidate|10226|(2, 16, 11)|var|float64
bop_10227 = relay.bitwise_and(uop_10224.astype('uint32'), relay.reshape(var_10226.astype('uint32'), relay.shape_of(uop_10224))) # shape=(2, 16, 11)
output = bop_10227
output2 = bop_10227
func_10230 = relay.Function([var_10223,var_10226,], output)
mod['func_10230'] = func_10230
mod = relay.transform.InferType()(mod)
var_10231 = relay.var("var_10231", dtype = "float64", shape = (2, 16, 11))#candidate|10231|(2, 16, 11)|var|float64
var_10232 = relay.var("var_10232", dtype = "float64", shape = (2, 16, 11))#candidate|10232|(2, 16, 11)|var|float64
output = func_10230(var_10231,var_10232,)
func_10233 = relay.Function([var_10231,var_10232,], output)
mutated_mod['func_10233'] = func_10233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6157_call = mod.get_global_var('func_6157')
func_6158_call = mutated_mod.get_global_var('func_6158')
call_10285 = relay.TupleGetItem(func_6157_call(), 0)
call_10286 = relay.TupleGetItem(func_6158_call(), 0)
uop_10293 = relay.cos(call_10285.astype('float64')) # shape=(588, 1)
uop_10295 = relay.cos(call_10286.astype('float64')) # shape=(588, 1)
output = uop_10293
output2 = uop_10295
func_10297 = relay.Function([], output)
mod['func_10297'] = func_10297
mod = relay.transform.InferType()(mod)
mutated_mod['func_10297'] = func_10297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10297_call = mutated_mod.get_global_var('func_10297')
call_10298 = func_10297_call()
output = call_10298
func_10299 = relay.Function([], output)
mutated_mod['func_10299'] = func_10299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5353_call = mod.get_global_var('func_5353')
func_5355_call = mutated_mod.get_global_var('func_5355')
call_10376 = relay.TupleGetItem(func_5353_call(), 0)
call_10377 = relay.TupleGetItem(func_5355_call(), 0)
func_6605_call = mod.get_global_var('func_6605')
func_6610_call = mutated_mod.get_global_var('func_6610')
var_10379 = relay.var("var_10379", dtype = "uint16", shape = (960,))#candidate|10379|(960,)|var|uint16
var_10380 = relay.var("var_10380", dtype = "uint8", shape = (2184,))#candidate|10380|(2184,)|var|uint8
var_10381 = relay.var("var_10381", dtype = "uint32", shape = (1, 198))#candidate|10381|(1, 198)|var|uint32
const_10382 = relay.const([False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False], dtype = "bool")#candidate|10382|(60,)|const|bool
call_10378 = relay.TupleGetItem(func_6605_call(relay.reshape(var_10379.astype('uint16'), [960,]), relay.reshape(var_10380.astype('uint8'), [2184, 1]), relay.reshape(var_10381.astype('uint32'), [1, 198]), relay.reshape(const_10382.astype('bool'), [60,]), ), 2)
call_10383 = relay.TupleGetItem(func_6610_call(relay.reshape(var_10379.astype('uint16'), [960,]), relay.reshape(var_10380.astype('uint8'), [2184, 1]), relay.reshape(var_10381.astype('uint32'), [1, 198]), relay.reshape(const_10382.astype('bool'), [60,]), ), 2)
func_1809_call = mod.get_global_var('func_1809')
func_1815_call = mutated_mod.get_global_var('func_1815')
var_10394 = relay.var("var_10394", dtype = "bool", shape = (320,))#candidate|10394|(320,)|var|bool
const_10395 = relay.const([1.849359,-4.502536,9.223787,-4.895900,5.273257,-0.691873,2.472730,2.322355,-4.499505,6.607511,9.317492,4.300508,-2.779752,-7.137620,-6.189316,7.955763,0.418241,-3.895649,-8.552941,-8.458926,5.023049,-8.556485,-7.379260,7.586614,-4.725246,-1.697768,-8.240466,1.288542,8.497841,7.937614,8.282071,9.495398,-2.293272,5.271204,8.096310,1.523507,-3.931878,9.406977,5.635856,-1.479104,4.576711,-5.668511,-3.578407,-0.715999,2.338375,-8.253197,-3.204267,3.758516,3.928159,0.958305,-7.778607,-8.781839,4.565377,9.239771,-8.580243,-4.153208,0.146603,3.200468,2.260548,0.044838,0.707233,8.797800,8.161821,9.398119,8.465503,6.978762,1.049214,-3.802884,0.951629,1.215117,1.925121,-5.291149,-6.130187,2.638300,3.138797,-0.077531,-9.835493,1.329356,-6.016294,-4.507298,9.316877,4.584503,0.726472,5.472141,-7.609847,-2.269692,8.304141,-5.806688,7.181491,8.466422,-7.179601,7.505586,9.996746,-0.991882,4.049902,0.879763,4.884257,5.459108,-5.327188,8.136077,-6.702693,7.277273,-6.629635,1.165722,7.076085,3.212881,3.055537,-8.858322,6.849960,-7.895860,7.683424,1.553258,1.854981,-7.038855,-1.050205,-9.485155,4.137308,-2.126736,6.020744,3.528786,-0.223874,-0.904021,-1.515730,-1.287533,4.958473,-3.115736,-6.606032,3.095376,6.602909,6.928436,-0.371033,-2.852798,1.660213,0.582426,-2.568791,2.886193,9.593522,-9.125158,-1.880270,9.789097,-3.231781,2.646441,-4.713965,-8.311842,-9.244076,9.877234,6.394141,-6.035308,-6.038869,2.937527,3.995592,2.805382,-9.062197,-3.562349,-2.398607,-3.282003,4.884558,4.165625,5.883439,1.199245,2.449118,-0.676641,-0.074969,-2.536186,-8.375162,-4.940061,-6.379454,0.376333,4.974153,-4.359841,7.200832,-0.638171,-7.625380,-8.369787,7.773284,0.065878,-1.736962,6.949933,-7.506810,3.674780,6.765697,-7.578420,4.397444,-4.936601,5.294246,-0.655662,-3.339946,-7.273960,-2.065061,-6.635235,-2.102449,6.212837,9.717179,-6.759774,-1.255136,-4.405070,1.113533,0.144467,-1.245104,7.063658,-2.677555,6.606283,6.162674,6.261098,-0.166661,5.362582,9.552183,-0.782575,-9.672186,9.239676,-2.331273,-5.736213,-7.150236,5.735057,-8.332814,5.988524,-6.772496,3.237121,-5.892312,-7.411175,-8.603789,5.108000,-9.500883,-5.995963,-6.709880,9.966554,7.313824,-7.850522,2.527454,9.952508,9.960773,7.206409,3.452987,6.556432,7.349090,-3.515869,9.865021,-6.622590,2.691364,-7.049762,-2.600002,0.027491,-7.641812,9.323607,0.455103,8.199519,4.377947,-7.536377,4.217579,-2.733168,6.790466,-3.688738,9.095806,-5.495066,8.329033,-2.580207,-2.968909,5.599849,-4.804588,9.047355,1.305365,-3.183542,8.472767,0.434226,-2.097292,6.883688,3.410901,-9.138293,-2.956271,7.624359,-5.868081,4.124566,7.880727,4.793401,-5.601412,3.657631,1.965487,-0.307455,7.290500,6.773902,-7.550466,7.779484,-2.307984,-9.682639,2.667151,-3.793592,5.848622,-8.612865,-3.624664,-1.986145,-5.947681,6.821610,7.820828,-0.525268,5.618203,-5.288871,5.943231,8.970123,-9.235215,-6.568077,-8.142503,0.547717,8.200171,-0.898176,6.956109,-8.566396,0.764052,0.036496,2.135392,4.512621,9.050940,-3.117264,7.337793,-6.100886,4.450904,2.866758,2.466769,-5.087423,6.511767,-3.624391,7.251943,-4.195549,-3.624703,-1.836174,-5.215043,0.987024,9.031501,-7.529006,7.438554,-0.261454,6.899615,-5.827611,-2.839662,5.873105,-4.994264,-5.570758,-9.475531,-8.799355,-3.627319,8.654794,-2.409371,-6.863679,-8.407734,-6.682663,1.233691,5.088964,6.192325,1.421106,-8.963347,9.547286,4.699804,-9.626734,-6.720257,-4.290070,1.396936,2.937833,-7.848323,-8.779689,-6.434504,1.274807,8.910447,5.997081,-1.681980,0.875420,9.035487,9.747137,-8.629726,1.262310,-2.582815,-7.535372,0.537206,6.306312,8.030576,-5.440623,6.390286,-4.678301,-6.045967,9.329817,-7.999859,6.928115,4.385549,-4.200453,5.494164,-2.342242,-6.525299,7.254815,1.211386,2.593021,-4.622424,-8.207302,8.876472,9.269343,-0.053834,2.812567,8.046431,1.285616,0.307014,-2.913544,0.028820,5.618276,3.923397,2.152138,8.911878,-4.458305,-9.167408,2.876212,6.506638,-4.616042,4.667609,-7.219389,-9.512735,5.905418,-6.158689,-6.767073,8.035463,2.856477,5.744246,2.355542,0.975791,-2.760784,-1.279836,-0.544476,-7.436006,-0.323725,-9.981491,-9.798043,-3.004866,-0.369897,-8.801673,-4.519601,-6.715219,-3.826932,-6.832050,5.583010,5.779964,1.556065,8.675520,6.075091,-5.704022,-4.357751,9.317381,-9.036481,-9.518559,-6.016229,7.526479,-1.836577,-9.498378,0.844093,-7.663487,-0.381113,6.864223,-6.596536,5.643394,-6.155974,1.661869,-8.890128,-2.139721,-5.651019,-7.074330,0.688644,0.710595,7.428991,-8.251671,-3.144440,5.634310,9.235025,-9.776253,-4.972746,8.849122,-9.549978,3.674464,3.959613,4.922906,-8.230582,-3.431502,2.250646,-5.830577,2.448195,-1.869049,3.155493,9.971909,-1.253334,-7.408043,5.418471,4.310612,-2.192588,9.729583,-3.000309,3.865187,-7.931979,-5.307240,7.943929,-5.171402,-9.077104,-0.833467,2.314908,-1.987244,-1.268844,-2.695744,-7.020095,4.246074,-8.074358,6.415607,5.250232,1.978661,-3.157135,1.593415,-3.042622,6.664917,-1.178471,7.493296,7.965619,5.556515,-9.872573,2.131486,-8.582773,-2.772370,3.330399,9.617381,-7.113428,-6.769643,3.591344,1.107774,-8.926673,-4.479696,-3.011008,-6.309040,0.043129,1.398899,0.879668,-7.195505,2.429175,-2.571206,-4.562583,2.473090,-7.591593,-6.896204,-1.129081,-8.570068,-1.719491,5.389810,-7.177193,-7.186246,-4.827701,6.234407,-2.575942,7.873855,-5.504612,2.377922,0.234389,-8.055621,-8.963255,0.698873,-0.411431,9.552537,-3.256463,5.417325,-0.777701,-1.163842,-9.711481,-2.463246,-6.877949,-7.704943,8.619664,0.061989,4.042081,8.170443,-0.519773,-6.051203,-6.515939,1.637348,-8.117735,2.641811,-8.010884,2.953024,1.130641,-2.807246,1.943782,5.820530,-2.452598,-7.142287,-2.459745,7.784510,-6.731186,5.824849,-2.283990,-9.278099,7.219729,4.363441,6.576663,-1.369572,7.102769,-8.016423,-1.236786,2.906919,8.535231,-5.162870,0.580443,-7.595805,9.004886,-0.150872,1.528622,-7.198519,-1.838882,-7.197225,9.418951,6.624618,6.067366,2.118271,7.891725,-0.916727,-2.329121,-8.788465,3.115722,-4.406720,-2.915044,-0.627237,6.683056,-9.020723,-2.759350,2.486739,-3.356069,-7.848092,4.959317,8.693512,2.681507,0.429836,-3.283315,7.841792,-1.512640,-5.128579,9.321586,-1.293130,1.657611,-3.236432,-0.666451,2.751947,-1.480510,-3.035468,-3.684123,-3.747281,-0.143305,5.039205,0.470551,-4.609106,-2.964773,-3.254570,6.031771,-8.826333,-3.736181,-5.713570,4.836662,9.862088,-1.718751,2.716364,6.943361,-0.006079,3.126859,-4.618447,-3.646288,-7.899461,2.708960,-8.262880,-2.155021,8.675237,-9.742413,9.566456,-1.375980,1.875261,-1.272536,6.167732,6.081282,2.395465,7.405335,2.073292,-6.330870,6.961237,5.409134,-5.007491,-4.909363,-6.323206,-4.307719,-1.476062,-5.616722,2.762385,-2.350848,-4.643436,-1.336120,-7.572233,3.415814,0.094179,-3.892376,9.775222,2.139229,4.370268,0.693582,-3.593248,8.983311,-7.344216,-4.677670,-1.371572,-6.614054,-3.138558,0.675544,8.533479,3.791771,-2.845725,0.959578,9.655643,-6.446578,-9.893601,-5.134523,9.556318,-9.710134,0.476179,3.527845,1.040786,-1.062501,-9.628371,2.654831,-6.471513,-7.832232,-0.027371,-6.833632,-2.097201,-4.901561,-2.316422,3.908775,-3.899388,-7.102880,0.227247,2.303686,1.787455,-4.833822,3.212728,2.892736,-7.294609,0.057782,8.796538,-9.210544,-5.185922,2.675112,3.206234,-3.348290,-1.562763,6.028279,-5.398443,-2.316655,-1.243938,5.290567,-1.940129,1.024735,-3.333439,9.284990,-9.769784,-4.464389,-7.426507,-1.341311,-9.572333,2.126283,8.281429,-6.325554,-9.423740,4.928544,-0.553779,-1.632194,-0.348624,9.458859,-4.722947,-7.732632,2.186811,0.255762,-2.212836,3.324219,-0.345150,5.674940,-3.607437,6.744481,4.443571,8.699223,0.124158,-0.295235,-0.551781,5.466756,9.879745,4.762604,-6.289604,-5.814794,-1.160656,2.254628,5.810481,-1.946822,2.940976,-0.129303,2.207830,-7.183726,8.560524,-4.479228,-7.411462,3.150776,5.201620,-9.225060,3.182297,3.660014,8.853568,9.562902,8.904953,-8.882894,5.791488,1.329194,-0.172208,-8.087453,0.438945,7.778712,-5.714356,5.872400,-0.310774,6.000927,-9.074495,1.196942,8.859987,-1.310491,1.062689,1.468991,6.846961,8.341294,-0.687523,-5.162483,-0.715894,-2.164862,-3.021067,-3.600488,6.782726,-4.075586,-2.659578,2.384933,-4.990200,5.016122,-7.524914,0.489765,3.535553,-8.953671,-5.120812,4.429972,-1.140344,4.348760,8.879478,4.774766,5.626866,4.619938,-3.207645,8.473084,-4.571380,-6.705225,-0.399479,7.745564,-4.643574,6.590601,-8.299124,3.415720,-4.867415,5.537872,-0.559480,4.391887,-4.156933,-6.150827,8.061769,-0.837770,-0.965058,8.526568,-5.108382,-9.784931,-8.291693,6.898245,9.918242,1.988684,5.045730,1.742762,-1.007707,7.916490,8.427863,1.167140,2.207946,0.475173,-5.218165,-0.775370,4.774955,8.623664,2.161431,-9.957283,9.920816,-3.037323,-1.592346,-1.189336,-3.926997,2.745208,9.837176,7.715604,-3.629698,-0.931142,0.683291,2.243187,-3.074349,-4.305245,5.606051,-3.160108,-0.758871,5.069481,-8.990749,1.451768,3.468619,5.946348,4.374939,-7.424694,4.522933,-3.966294,8.551361,3.177547,-8.176708,9.829215,-6.817886,-2.400086,6.742564,6.627226], dtype = "float64")#candidate|10395|(924,)|const|float64
var_10396 = relay.var("var_10396", dtype = "float32", shape = (832,))#candidate|10396|(832,)|var|float32
const_10397 = relay.const([8,-6,1,-1,10,8,7,-1,10,-5,5,-9,10,10,10,-3,-9,9,-2,4,-4,-7,-4,3,-2,8,-4,8,-2,-2,-10,-1,5,-8,-10,8,-5,-5,7,10,6,7,-7,-6,1,-3,2,-9,4,3,-2,-8,-9,-3,-10,-6,-2,-8,5,-10,-1,-1,-7,-1,10,6,6,8,-6,-2,5,-3,-8,-8,5,3,-2,-9,5,-1,6,6,1,7,-4,-2,-6,5,-5,9,2,-6,-4,-5,-6,3,-4,-4,-4,4,2,6,10,2], dtype = "int32")#candidate|10397|(104,)|const|int32
call_10393 = relay.TupleGetItem(func_1809_call(relay.reshape(var_10394.astype('bool'), [16, 4, 5]), relay.reshape(const_10395.astype('float64'), [924,]), relay.reshape(var_10396.astype('float32'), [832,]), relay.reshape(const_10397.astype('int32'), [104,]), ), 5)
call_10398 = relay.TupleGetItem(func_1815_call(relay.reshape(var_10394.astype('bool'), [16, 4, 5]), relay.reshape(const_10395.astype('float64'), [924,]), relay.reshape(var_10396.astype('float32'), [832,]), relay.reshape(const_10397.astype('int32'), [104,]), ), 5)
output = relay.Tuple([call_10376,call_10378,var_10379,var_10380,var_10381,const_10382,call_10393,var_10394,const_10395,var_10396,const_10397,])
output2 = relay.Tuple([call_10377,call_10383,var_10379,var_10380,var_10381,const_10382,call_10398,var_10394,const_10395,var_10396,const_10397,])
func_10402 = relay.Function([var_10379,var_10380,var_10381,var_10394,var_10396,], output)
mod['func_10402'] = func_10402
mod = relay.transform.InferType()(mod)
mutated_mod['func_10402'] = func_10402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10402_call = mutated_mod.get_global_var('func_10402')
var_10404 = relay.var("var_10404", dtype = "uint16", shape = (960,))#candidate|10404|(960,)|var|uint16
var_10405 = relay.var("var_10405", dtype = "uint8", shape = (2184,))#candidate|10405|(2184,)|var|uint8
var_10406 = relay.var("var_10406", dtype = "uint32", shape = (1, 198))#candidate|10406|(1, 198)|var|uint32
var_10407 = relay.var("var_10407", dtype = "bool", shape = (320,))#candidate|10407|(320,)|var|bool
var_10408 = relay.var("var_10408", dtype = "float32", shape = (832,))#candidate|10408|(832,)|var|float32
call_10403 = func_10402_call(var_10404,var_10405,var_10406,var_10407,var_10408,)
output = call_10403
func_10409 = relay.Function([var_10404,var_10405,var_10406,var_10407,var_10408,], output)
mutated_mod['func_10409'] = func_10409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5102_call = mod.get_global_var('func_5102')
func_5104_call = mutated_mod.get_global_var('func_5104')
call_10433 = func_5102_call()
call_10434 = func_5102_call()
func_7013_call = mod.get_global_var('func_7013')
func_7015_call = mutated_mod.get_global_var('func_7015')
call_10449 = relay.TupleGetItem(func_7013_call(), 0)
call_10450 = relay.TupleGetItem(func_7015_call(), 0)
output = relay.Tuple([call_10433,call_10449,])
output2 = relay.Tuple([call_10434,call_10450,])
func_10455 = relay.Function([], output)
mod['func_10455'] = func_10455
mod = relay.transform.InferType()(mod)
output = func_10455()
func_10456 = relay.Function([], output)
mutated_mod['func_10456'] = func_10456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5992_call = mod.get_global_var('func_5992')
func_5993_call = mutated_mod.get_global_var('func_5993')
call_10514 = relay.TupleGetItem(func_5992_call(), 0)
call_10515 = relay.TupleGetItem(func_5993_call(), 0)
func_8530_call = mod.get_global_var('func_8530')
func_8532_call = mutated_mod.get_global_var('func_8532')
var_10524 = relay.var("var_10524", dtype = "bool", shape = (504,))#candidate|10524|(504,)|var|bool
call_10523 = relay.TupleGetItem(func_8530_call(relay.reshape(var_10524.astype('bool'), [504,])), 2)
call_10525 = relay.TupleGetItem(func_8532_call(relay.reshape(var_10524.astype('bool'), [504,])), 2)
uop_10527 = relay.acosh(call_10523.astype('float32')) # shape=(504,)
uop_10529 = relay.acosh(call_10525.astype('float32')) # shape=(504,)
func_4717_call = mod.get_global_var('func_4717')
func_4723_call = mutated_mod.get_global_var('func_4723')
const_10544 = relay.const([[-1],[-7],[-5],[-5],[1],[-2],[-1],[-8],[-10],[-5],[-8],[-5],[6],[3],[-9],[2],[2],[-8],[4],[-8],[7],[-4],[8],[3],[6],[-4],[10],[9],[1],[3],[-2],[2],[4],[-3],[-3],[-3],[-2],[9],[6],[-2],[1],[-7],[3],[8],[-1],[-6],[7],[9],[7],[-8],[-4],[1],[6],[9],[-3],[4],[-9],[6],[8],[-8],[4],[-4],[-3],[2],[8],[2],[-1],[-1],[2],[-8],[-3],[10],[5],[3],[-9],[-6],[6],[-6],[4],[1],[-6],[-5],[6],[3],[-6],[-5],[-5],[-8],[-1],[8],[4],[5],[-4],[9],[6],[2],[-4],[10],[-1],[-2],[-6],[-5],[-3],[5],[-3],[-6],[-5],[-7],[9],[-8],[9],[-9],[-5],[5],[-2],[4],[-5],[2],[9],[2],[8],[-1],[8],[-3],[5],[3],[9],[6],[-1],[-1],[-7],[4],[1],[8],[1],[6],[-9],[-4],[6],[-5],[9],[4],[2],[-4],[-3],[9],[-10],[-10],[6],[5],[-1],[9],[-7],[-8],[-10],[-3],[-4],[7],[-8],[-10],[-5],[-1],[-1],[10],[-2],[-5],[5],[4],[8],[-4],[-6],[7],[5],[-8],[6],[6],[-9],[8],[7],[-7],[2],[-3],[-7],[8],[8],[4],[-8],[-7],[-7],[-8],[3],[4],[-10],[-9],[-2],[-7],[10],[3],[6],[3],[-5],[1],[9],[8],[3],[1],[-1],[-7],[9],[7],[4],[-8],[-5],[-2],[-4],[8],[-3],[3],[-7],[10],[-9],[5],[7],[-9],[7],[10],[4],[-8],[10],[-2],[4],[-2],[-7],[10],[5],[3],[2],[2],[-9],[10],[8],[9],[-9],[-1],[-6],[3],[-2],[-8],[-9],[-4],[-10],[-8],[6],[-6],[4],[-3],[5],[6],[-7],[-2],[1],[5],[-10],[2],[-1],[4],[5],[6],[6],[8],[-7],[2],[-1],[5],[-7],[-2],[-2],[-2],[10],[-2],[2],[4],[9],[-1],[-1],[5],[-8],[-9],[7],[-10],[3],[-3],[-9],[-9],[-8],[-9],[6],[10],[-3],[-2],[-9],[-4],[6],[-9],[-9],[9],[9],[9],[8],[-8],[-9],[-9],[-2],[2],[-1],[10],[1],[-1],[9],[-4],[-7],[2],[-7],[-7],[-9],[1],[1],[2],[-10],[-9],[-9],[5],[4],[1],[-5],[2],[9],[9],[5],[9],[8],[1],[-10],[5],[9],[1],[4],[10],[-1],[9],[-7],[8],[-5],[10],[-1],[-3],[10],[2],[-8],[10],[-2],[5],[-6],[-2],[-9],[2],[6],[-2],[7],[2],[-2],[8],[-10],[2],[9],[7],[-2],[5],[-9],[-6],[2],[4],[10],[-10],[9],[-4],[6],[3],[-2],[5],[-6],[1],[5],[7],[-7],[-4],[-2],[6],[6],[6],[7],[-8],[-2],[10],[-7],[-5],[9],[10],[-4],[-10],[9],[1],[-6],[-1],[4],[-10],[9],[-3],[-1],[3],[9],[-1],[-6],[4],[8],[-10],[-10],[8],[9],[-10],[1],[3],[8],[-1],[10],[-8],[-3],[-9],[10],[8],[7],[-6],[-10],[-3],[-8],[-1],[3],[-8],[-9],[-1],[-2],[2],[-8],[2],[-4],[9],[-8],[-8],[-1],[-7],[-6],[-5],[2],[1],[2],[-4],[2],[8],[5],[-1],[10],[-10],[-5],[7],[1],[-5],[4],[-7],[5],[10],[1],[10],[8],[-7],[-9],[3],[10],[-8],[-4],[-3],[10],[-2],[-9],[-1],[-9],[2],[4],[7],[-3],[6],[3],[-1],[-3],[-8],[-5],[1],[-10],[-10],[-4],[-5],[-1],[-4],[10],[-9],[-6],[-5],[4],[-3],[-3],[5],[-3],[-5],[-1],[-2],[-5],[9],[4],[5],[7],[-7],[6],[-3],[7],[9],[-7],[10],[-1],[3],[-8],[-9],[1],[-3],[3],[1],[9],[-4],[-1],[7],[-5],[8],[3],[3],[10],[7],[2],[5],[4],[-10],[-5],[9],[-8],[-2],[4],[-7],[-8],[-2],[-2],[6],[-3],[-2],[-9],[-10],[-6],[-9],[1],[6],[1],[-10],[-9],[-3],[-9],[-9],[-1],[3],[-10],[-1],[-1],[-1],[3],[-9],[-6],[-6],[2],[3],[1],[10],[10],[-3],[8],[7],[10],[-6],[-10],[9],[5],[-10],[2],[1],[3],[7],[9],[-6],[-1],[-1],[4],[5],[-5],[6],[-8],[-1],[-2],[7],[10],[-1],[-9],[7],[-8],[-8],[-3],[-5],[7],[10],[3],[-9],[2],[7],[4],[1],[9],[5],[10],[7],[-6],[-6],[5],[5],[-5],[6],[-4],[2],[-9],[-1],[10],[-5],[3],[8],[-3],[-3],[1],[-7],[3],[8],[8],[8],[3],[7],[7],[-4],[-9],[8],[10],[-7],[-1],[1],[2],[-8],[-9],[-4],[4],[-10],[-10],[-8],[-4],[-5],[-3],[7],[9],[6],[4],[3],[5],[-10],[-10],[3],[4],[1],[-10],[-4],[1],[-7],[4],[-8],[8],[6],[1],[-6],[1],[-3],[10],[-4],[-9],[2],[-2],[-4],[-8],[9],[-3],[-5],[-1],[2],[10],[-10],[-6],[1],[9],[4],[-8],[7],[-3],[-7],[2],[-2],[-5],[7],[-10],[9],[7],[-1],[10],[-2],[-7],[7],[3],[7],[7],[-8],[10],[-5],[7],[-10],[-8],[-6],[-8],[-1],[1],[7],[8],[-3],[-8],[-8],[4],[3],[3],[8],[7],[-8],[-9],[-4],[-5],[3],[-6],[4],[-4],[4],[9],[8],[-7],[-9],[8],[-2],[-7],[2],[9],[3],[8],[-8],[8],[-8],[-8],[4],[-8],[1],[3],[8],[9],[-8],[2],[-2],[-5],[5],[-1],[-10],[6],[1],[4],[-1],[8],[-6],[4],[-4],[-5],[7],[2],[10],[-6],[-1],[-7],[-6],[-10],[-7],[2],[5],[-2],[5],[-6],[-6],[9],[8],[-5],[-9],[3],[-8],[2],[5],[2],[-4],[-10],[6],[-3],[-7],[-10],[-10],[6],[-10],[-6],[4],[10],[10],[-7],[-2],[7],[-3],[9],[10],[-10],[1],[-9],[9],[-8],[-8],[10],[4],[5],[10],[8],[-1],[1],[3],[-5],[2],[-9],[-7],[5],[-6],[7],[-7],[-8],[-6],[6],[-5],[9],[-1],[-1],[-2],[9],[-2],[-8],[-7],[-7],[6],[-6],[10],[6],[7],[2],[-10],[9],[3],[8],[-6],[1],[5],[9],[2],[4],[-9],[-1],[-4],[-4],[2],[-4],[-1],[4],[5],[-1],[-10],[1],[2],[7],[5],[10],[-2],[2],[9],[-7],[-6],[-1],[-6],[-2],[8],[-3],[6],[4],[-5],[1],[-2],[5],[-1],[10],[-5],[-1],[9],[-9],[-9],[-7],[-6],[7],[-6],[9],[-2],[1],[-1],[-8],[3],[2],[-6],[-2],[-5],[2],[-2],[2],[9],[10],[-2],[7],[9],[-10],[4],[3],[-7],[-9],[8],[-7],[-10],[8],[10],[-2],[1],[6],[-2],[7],[-3],[-10],[-6],[-6],[7],[-3],[-5],[-7],[-3],[-1],[-7],[2],[6],[1],[-1],[7],[-7],[10],[-1],[-4],[2],[-3],[-2],[-1],[7],[6],[4],[2],[-5],[8],[-1],[-1],[4],[-2],[8],[1],[-5],[-4],[-5],[10],[9],[-6],[5],[3],[-8],[8],[-5],[-2],[8],[4],[-9],[-5],[-9],[1],[-6],[-8],[10],[-7],[1],[-5],[-2],[2],[1],[8],[7],[-7],[-7],[3],[3],[-2],[9],[-3],[-7],[4],[-4],[-8],[-1],[6],[4],[3],[-6],[-10],[-5],[8],[8],[-7],[3],[4],[2],[-7],[6],[-5],[-8],[10],[4],[5],[-6],[-10],[-7],[8],[-10],[10],[5],[-1],[-3],[-3],[4],[7],[8],[-5],[-1],[-2],[-5],[-9],[-3],[-8],[10],[-6],[4],[-1],[-8],[6],[-2],[-5],[10],[-3],[-8],[9],[9],[8],[5],[-5],[-3],[-9],[8],[6],[6],[-7],[4],[-9],[2],[7],[-8],[5],[-6],[-9],[8],[3],[5],[-2],[4],[1],[9],[8],[-10],[10],[-10],[-1],[-7],[8],[-1],[2],[1],[3],[-9],[-2],[-1],[3],[-1],[-5],[-6],[2],[-6],[-6],[3],[-4],[-1],[2],[-4],[-9],[-7],[8],[-2],[-10],[-9],[-3],[-4],[3],[-9],[-2],[-3],[7],[-5],[-5],[3],[5],[-6],[2],[3],[-2],[-8],[9],[1],[-9],[3],[5],[8],[-9],[10],[-3],[9],[-4],[1],[5],[-7],[6],[2],[-5],[-7],[3],[8],[7],[7],[-10],[-1],[1],[10],[-7],[1],[-5],[-8],[4],[-6],[3],[7],[-5],[-4],[-2],[8],[10],[-6],[-9],[6],[7],[7],[8],[1],[-5],[4],[2],[2],[8],[-10],[6],[2],[-7],[-7],[-5],[2],[10],[4],[-3],[9],[3],[4],[5],[-3],[-3],[-3],[2],[7],[6],[-4],[4],[-4],[5],[2],[2],[6],[5],[3],[9],[2],[10],[2],[-5],[-9],[-10],[-3],[-1],[1],[-3],[-4],[4],[-2],[-3],[10],[-10],[3],[-10],[-10],[-4],[3],[6],[-2],[-2],[-2],[6],[10],[7],[1],[-7],[-1],[1],[-9],[-1],[-5],[9],[-10],[-5],[1],[5],[-10],[9],[-1],[6],[-8],[2],[1],[7],[6],[8],[4],[-9],[-4],[7],[2],[9],[1],[6],[8],[-5],[-4],[-8],[-10],[-5],[-5],[-8],[-4],[-1],[1],[-4],[-10],[-7],[-4],[-4],[-4],[9],[-3],[4],[-3],[10],[4],[5],[4],[6],[6],[2],[-4],[-6],[1],[-9],[8],[-4],[-6],[-6],[5],[-7],[5],[7],[-9],[-7],[-5],[-10],[8],[-5],[5],[-6],[3],[-4],[8],[8],[-8],[-4],[-6],[-2],[-6],[-2],[8],[9],[-10],[-6],[10],[10],[4],[10],[5],[-5],[2],[6],[2],[5],[-7],[-8],[10],[10],[2],[7],[-8],[5],[4],[-3],[-5],[4],[8],[5],[7],[8],[6],[-8],[5],[-6],[-4],[1],[1],[-5],[1],[-4],[6],[6],[-7],[4],[1],[-8],[9],[-3],[4],[3],[4],[3],[10],[-10],[5],[9],[-1],[5],[-6],[-6],[8],[5],[-1],[-2],[-10],[4],[-9],[-9],[4],[1],[-3],[-3],[7],[-6],[5],[-9],[-5],[-2],[5],[-3],[1],[8],[6],[-8],[-7],[2],[-1],[-6],[-10],[-1],[-4],[10],[5],[8],[-6],[-4],[8],[-6],[9],[7],[-6],[6],[3],[-6],[-4],[-10],[7],[10],[1],[-3],[-8],[-3],[-9],[3],[6],[-4],[8],[-8],[1],[3],[-2],[4],[2],[5],[-1],[-10],[7],[5],[6],[-6],[7],[-3],[-9],[7],[-6],[5],[-3],[9],[-2],[-9],[-3],[2],[-4],[-6],[7],[1],[1],[9],[4],[9],[-6],[9],[-3],[7],[3],[10],[6],[-5],[-1],[9],[4],[-9],[5],[-4],[6],[10],[-6],[-5],[9],[6],[-9],[9],[-8],[-6],[-7],[6],[6],[-4],[-7],[-1],[-2],[7],[1],[-6],[-6],[-4],[9],[-2],[10],[-8],[2],[6],[-9],[-10],[-1],[-9],[3],[-10],[2],[7],[-10],[-4],[-6],[8],[4],[-3],[-9],[-6],[-1],[5],[9],[-4],[4],[9],[10],[3],[-8],[-1],[-5],[10],[-4],[-8],[2],[-1],[2],[5],[-4],[6],[-3],[-3],[10],[4],[-4],[4],[-3],[-9],[-9],[-2],[-10],[-4],[-1],[-6],[7],[10],[-6],[4],[-10],[3],[3],[-3],[2],[-3],[-8],[-2],[8],[-3],[-6],[-3],[-2],[7],[-7],[-3],[7],[-8],[3],[-7],[5],[8],[7],[-6],[-7],[-5],[9],[-9],[10],[-8],[-7],[3],[-6],[6],[-4],[6],[5],[7],[-5],[8],[-1],[8],[8],[2],[3],[8],[-8],[6],[3],[3],[5],[9],[5],[-1],[-8],[-4],[-9],[-10],[10],[-8],[9],[-5],[-6],[-2],[2],[-6],[-7],[6],[-2],[4],[-5],[10],[1],[-4],[1],[7],[5],[-8],[-4],[-10],[8],[-3],[3],[-10],[-6],[7],[-3],[7],[9],[8],[-3],[-2],[7],[-1],[-2],[7],[-7],[8],[-10],[6],[-1],[9],[-10],[-1],[-10],[-10],[1],[3],[-4],[1],[7],[8],[8],[5],[2],[-4],[-4],[8],[-1],[-4],[-7],[-4],[-6],[8],[-5],[-6],[7],[-6],[9],[1],[-3],[-6],[-7],[-3],[-5],[-9],[-1],[3],[-4],[-7],[-10],[-9],[6],[9],[7],[7],[-6],[6],[-9],[-4],[-8],[-9],[8],[6],[2],[10],[4],[-8],[5],[6],[-9],[1],[-9],[-3],[-8],[5],[1],[-4],[-5],[-2],[-2],[9],[-2],[-8],[4],[8],[-10],[1],[7],[-10],[-10],[-8],[-8],[-2],[3],[-1],[8],[4],[-7],[-6],[8],[-6],[-4],[10],[10],[4],[-4],[3],[-7],[6],[-10],[-6],[9],[8],[-2],[-8],[-10],[-3],[-1],[4],[2],[3],[2],[-7],[-10],[-10],[9],[1],[-6],[3],[5],[10],[-6],[-10],[5],[-10],[3],[10],[-7],[8],[-1],[-10],[-4],[8],[1],[-8],[5],[-4],[3],[1],[1],[5],[-3],[3],[4],[-1],[-8],[5],[3],[-2],[9],[3],[-9],[6],[-4],[-10],[-8],[-8],[1],[-3],[3],[-10],[-5],[2],[10],[-4],[-3],[-2],[3],[-2],[7],[-1],[6],[8],[-3],[2],[6],[-6],[7],[-1],[-2],[-6],[2],[-9],[8],[-4],[-3],[1],[-4],[-9],[-3],[2],[1],[2],[-6],[6],[10],[4],[10],[6],[5],[4],[-5],[-1],[6],[-6],[9],[8],[-8],[1],[-5],[-3],[-9],[-6],[-10],[-6],[2],[-7],[4],[6],[6],[-9],[-1],[-6],[-1],[-2],[-3],[3],[4],[8],[2],[1],[5],[1],[-7],[-1],[10],[-9],[-1],[2],[1],[-8],[1],[-6],[-9],[-8],[-10],[6],[-10],[5],[3],[-10],[8],[-8],[4],[10],[-3],[10],[10],[-8],[-10],[-1],[-9],[8],[-4],[-5],[-10],[4],[2],[-8],[-9],[2],[7],[-8],[7],[5],[4],[10],[2],[1],[2],[5],[-10],[-10],[8],[-9],[-6],[-10],[4],[-9],[6],[10],[1],[1],[9],[-9],[9],[1],[-2],[4],[-10],[-8],[-3],[-1],[-8],[7],[6],[4],[-9],[-1],[9],[9],[6],[7],[-2],[-2],[3],[3],[10],[-4],[4],[-4],[1],[10],[-3],[10],[2],[7],[-1],[8],[5],[-8],[-1],[4],[-4],[-2],[10],[-1],[-2],[-2],[-1],[-4],[-2],[-1],[-7],[-6],[10],[-1],[-6],[-2],[3],[-9],[10],[3],[2],[-6],[8],[5],[2],[4],[-8],[4],[-6],[-9],[-7],[-1],[7],[-3],[-3],[-8],[4],[7],[5],[-3],[-10],[8],[7],[4],[-4],[4],[-5],[2],[-6],[-8],[1],[-3],[1],[6],[-1],[-3],[-6],[-7],[-3],[-4],[5],[8],[4],[4],[7],[8],[-2],[-3],[-10],[7],[10],[2],[-2],[-6],[-1],[2],[10],[-8],[4],[-4],[-7],[-8],[-5],[10],[-2],[7],[-8],[7],[-10],[-5],[-5],[7],[-8],[8],[6],[-2],[-4],[2],[1],[-5],[8],[6],[-2],[7],[8],[-3],[8],[-8],[2],[8],[-8],[2],[1],[1],[5],[-7],[-7],[10],[6],[3],[9],[6],[-3],[-6],[10],[6],[-6],[-2],[-4],[9],[9],[4],[-10],[7],[-4],[-1],[6],[2],[2],[4],[-4],[2],[9],[-7],[6],[-2],[-3],[-1],[3],[-1],[10],[-1],[9],[-4],[3],[-7],[-10],[-7],[2],[2],[3],[3],[10],[-10],[-3],[9],[-1],[8],[4],[-3],[1],[4],[-10],[10],[8],[-9],[6],[6],[7],[-1],[7],[2],[2],[9],[3],[3],[-5],[-7],[9],[-6],[9],[-7],[-9],[-3],[8],[-7],[-5],[4],[10],[-3],[9],[-10],[2],[-7],[5],[7],[1],[1],[8],[-6],[-9],[3],[1],[-9],[-3],[7],[8],[-8],[5],[3],[-1],[3],[6],[-9],[7],[1],[8],[10],[-3],[4],[3],[10],[9],[4],[-5],[1],[1],[7],[-8],[-2],[-4],[3],[-8],[3],[3],[-7],[-9],[10],[7],[1],[2],[8],[-7],[-1],[-3],[-2],[-7],[-1],[7],[6],[1],[8],[2],[-9],[3],[1],[-3],[-1],[5],[-7],[-6],[-7],[3],[9],[2],[-2],[9],[-5],[2],[-10],[-6],[-4],[-1],[3],[-8],[8],[7],[-8],[1],[-2],[3],[8],[-8],[2],[6],[6],[-4],[-5],[5],[3],[-8],[7],[6],[8],[3],[2],[4],[7],[-2],[-1],[-1],[-2],[-7],[-2],[-5],[-6],[-5],[8],[10],[-1],[-6],[8],[-3],[-1],[2],[-3],[10],[9],[-4],[-10],[7],[-2],[10],[-4],[-8],[3],[7],[5],[4],[5],[9],[-2],[3],[4],[2],[6],[9],[2],[2],[10],[-2],[-5],[2],[-1],[5],[4],[-5],[-10],[-10],[6],[10],[3],[-4],[9],[-2],[5],[1],[5],[9],[2],[3],[5],[-4],[6],[3],[6],[-8],[3],[4],[5],[2],[-10],[-1],[6],[2],[-1],[4],[4],[-2],[10],[4],[9],[4],[1],[5],[-4],[9],[7],[8],[7],[1],[-6],[5],[3],[-10],[-3],[2],[6],[3],[4],[7],[-4],[-1],[-6],[6],[10],[3],[-2],[-7],[8],[-1],[-4],[2],[-9],[-1],[-2],[2],[-5],[-8],[-1],[-6],[10],[8],[-10],[1],[4],[8],[9],[10],[-6],[2],[9],[5],[-4],[-5],[-7],[-9],[-10],[1],[3],[7],[-7],[7],[-8],[3],[-8],[-3],[8],[3],[3],[10],[-10],[-7],[5],[-2],[3],[6],[-6],[-8],[-10],[10],[8],[6],[-5],[10],[8],[-8],[-9],[9],[-4],[-2],[10],[-6],[1],[-5],[-5],[-10],[10],[10],[5],[-1],[-2],[-1],[3],[-4],[-3],[-3],[6],[-3],[5],[9],[-1],[-4],[-5],[6],[8],[4],[8],[10],[-7],[10],[3],[-5],[5],[8],[-4],[-4],[4],[-7],[4],[-2],[1],[-2],[-3],[-10],[-9],[2],[-6],[-2],[3],[-2],[7],[-1],[6],[1],[-1],[2],[-8],[1],[-7],[4],[3],[-1],[-3],[1],[5],[2],[-9],[-2],[-2],[5],[-5],[-5],[1],[6],[9],[5],[6],[-1],[1],[6],[7],[-7],[-2],[1],[3],[9],[-5],[4],[-2],[-6],[-10],[3],[9],[6],[9],[-7],[9],[-3],[6],[-7],[2],[-8],[10],[-2],[2],[-3],[9],[2],[-3],[-9],[2],[7],[1],[-4],[-3],[-5],[-5],[-1],[8],[-7],[-3],[5],[-6],[1],[7],[2],[-7],[3],[-8],[-4],[-6],[-8],[-5],[5],[-4],[4],[-3],[-9],[-7],[-8],[2],[6],[-8],[7],[5],[-9],[-2],[3],[-5],[1],[-1],[7],[5],[2],[-8],[-8],[2],[-8],[-4],[6],[-6],[-10],[9],[-6],[-2],[-4],[-3],[8],[6],[-9],[2],[-5],[-3],[5],[-7],[7],[-8],[-4],[2],[1],[-8],[-10],[7],[8],[-10],[10],[-6],[8],[-7],[9],[6],[9],[-4],[-10],[2],[2],[-10],[10],[10],[1],[-5],[-4],[5],[2],[-7],[-7],[-8],[-8],[1],[1],[-3],[3],[5],[1],[1],[7],[-4],[-9],[-7],[2],[-4],[10],[9],[-4],[-7],[-2],[-10],[-4],[-10],[2],[6],[9],[4],[-10],[9],[-4],[4],[4],[-1],[-2],[5],[-1],[-2],[-2],[9],[-4],[-5],[6],[3],[8],[-1],[-6],[8],[8],[10],[10],[-7],[2],[5],[10],[8],[-8],[10],[-10],[-3],[6],[3],[-8],[-2],[2],[10],[7],[2],[-5],[-3],[-10],[2],[2],[3],[5],[-2],[-9],[1],[-6],[6],[4],[10],[5],[1],[9],[-6],[5],[-7],[10],[-10],[-6],[-5],[5],[-2],[10],[-9],[-6],[-6],[-10],[-1],[-10],[-8],[-7],[-1],[4],[3],[2],[-3],[-6],[10],[-5],[-10],[7],[-1],[2],[-6],[1],[7],[-10],[8],[-10],[4],[-10],[10],[1],[2],[10],[-6],[10],[4],[1],[4],[7],[-3],[-10],[10],[1],[5],[-10],[7],[-7],[-9],[3],[-4],[5],[4],[-1],[10],[-2],[2],[2],[-3],[6],[4],[2],[-9],[-10],[-6],[6],[-5],[7],[6],[10],[5],[-9],[-5],[10],[5],[5],[-2],[-1],[-8],[1],[-6],[-3],[7],[4],[9],[1],[7]], dtype = "int64")#candidate|10544|(2925, 1)|const|int64
var_10545 = relay.var("var_10545", dtype = "uint16", shape = (192,))#candidate|10545|(192,)|var|uint16
const_10546 = relay.const([False,True,False,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,False,True,False], dtype = "bool")#candidate|10546|(60,)|const|bool
call_10543 = relay.TupleGetItem(func_4717_call(relay.reshape(const_10544.astype('int64'), [2925,]), relay.reshape(var_10545.astype('uint16'), [192,]), relay.reshape(const_10544.astype('int64'), [2925,]), relay.reshape(const_10546.astype('bool'), [60,]), ), 1)
call_10547 = relay.TupleGetItem(func_4723_call(relay.reshape(const_10544.astype('int64'), [2925,]), relay.reshape(var_10545.astype('uint16'), [192,]), relay.reshape(const_10544.astype('int64'), [2925,]), relay.reshape(const_10546.astype('bool'), [60,]), ), 1)
func_6453_call = mod.get_global_var('func_6453')
func_6455_call = mutated_mod.get_global_var('func_6455')
call_10553 = relay.TupleGetItem(func_6453_call(), 0)
call_10554 = relay.TupleGetItem(func_6455_call(), 0)
func_10402_call = mod.get_global_var('func_10402')
func_10409_call = mutated_mod.get_global_var('func_10409')
var_10557 = relay.var("var_10557", dtype = "uint8", shape = (2184, 1))#candidate|10557|(2184, 1)|var|uint8
var_10558 = relay.var("var_10558", dtype = "uint32", shape = (198,))#candidate|10558|(198,)|var|uint32
var_10559 = relay.var("var_10559", dtype = "bool", shape = (320,))#candidate|10559|(320,)|var|bool
const_10560 = relay.const([-2.997892,4.241778,-7.780070,9.403816,-4.122652,-0.369932,7.431304,2.436684,7.813986,7.480781,3.772896,-5.098189,0.748442,1.146601,-1.406862,6.545562,4.347105,8.897337,2.712093,1.019150,7.417932,9.011976,-6.988681,-3.819694,-4.902490,-6.952183,1.405020,1.747505,7.651895,4.171263,-3.571406,-0.196442,1.217261,1.191897,-6.444474,-9.320609,-5.931182,6.879221,2.144246,-2.769348,4.561931,6.785970,-8.121447,5.372621,7.017384,8.646763,4.284481,1.858572,-9.002468,-6.782127,-6.394509,-6.297676,-4.873429,5.305993,-0.138634,3.112616,-1.349511,-1.861771,-1.923620,-6.461017,-2.669435,6.588488,6.910118,6.392337,-6.520103,7.897867,-1.375802,4.571202,9.471101,-7.000401,5.492678,8.165254,-5.957885,-5.019606,-2.184789,8.775515,-6.346498,-2.833528,5.901595,6.582805,7.605305,-2.881361,6.392584,-2.228537,4.488527,-2.361955,5.053933,-9.391534,0.499387,-1.861689,-2.809825,-3.150661,-9.539011,-2.494712,-0.311624,3.120318,-6.675718,-3.420556,-5.797882,-0.565729,2.112167,-5.049371,5.828310,1.211858,9.125797,-1.699912,6.739172,-1.364951,5.649442,2.822617,0.568145,-7.170916,0.611872,7.921103,0.657531,1.399560,-0.355888,3.865759,-8.511528,-1.565723,-6.731356,7.591259,0.780751,-5.115055,6.382853,8.512657,-8.950014,-0.774506,-4.085320,7.352384,-9.181150,-1.784526,-8.919634,-8.067938,-9.245852,-9.314073,3.283295,-6.020726,-3.638530,1.617208,0.977509,-9.519772,-1.586049,0.605094,-6.060444,0.190689,2.227795,3.559602,2.589391,-8.882067,-5.139440,1.811814,9.697139,-7.915904,-0.967363,4.629363,-4.303669,4.883210,-9.992484,8.913175,-9.547825,1.727297,9.711955,6.921177,-2.207217,-6.167955,6.371038,-0.142363,-9.730546,-4.205514,9.475048,-8.856129,7.137762,-7.369847,-6.888797,-4.147922,-2.820992,-1.366747,-5.093505,8.204541,5.720602,4.032796,6.419380,0.669257,-9.093273,-4.662592,8.292258,-0.077321,-4.531883,7.560242,-4.576335,0.506851,3.174113,-0.410987,-6.903542,8.644380,-1.512460,-3.518143,-3.692332,8.973567,1.755208,-6.661645,-5.880902,2.577528,-0.741898,6.393666,-5.825969,0.470282,-8.321089,7.079733,3.687565,-8.933293,8.333581,6.062707,6.921908,-1.003255,-7.083707,8.108339,1.838219,-2.485095,8.429364,5.672161,-6.043147,-1.485668,-9.138997,5.303723,-0.111888,3.403234,-7.719418,0.334353,0.675607,-7.561054,3.776467,-1.748452,-9.504610,-9.810928,-3.910514,9.854986,-6.036441,3.671471,2.746235,6.218911,5.661856,3.764739,4.236171,7.455084,1.083618,8.182075,0.654611,6.473911,-0.550909,-3.428324,4.895585,4.583128,2.842632,6.438388,-1.679861,-7.730414,3.726182,7.439022,-0.684211,-3.518198,6.035839,-2.781731,3.468220,-7.723933,9.570227,8.856414,9.149997,5.488641,5.072118,5.569228,3.757617,2.477467,-3.127144,8.008408,0.411242,-6.278201,5.216913,-4.735822,-3.497501,-2.563299,2.657544,9.847428,3.506611,5.889650,1.108524,-6.768336,-7.763889,1.237146,-5.182280,6.743116,-1.527036,-1.829193,7.573800,2.625830,-1.078343,8.354402,4.140896,-1.088335,7.422229,1.277468,-2.761409,7.433173,-1.646134,3.200684,-2.971714,-9.807696,-6.471328,-8.498907,1.703289,-5.234155,-6.632803,4.039220,-8.895284,-2.255335,5.973594,-3.288388,7.052109,-4.450746,-7.236247,-9.446213,1.436426,-6.958670,-8.112370,6.079373,-9.767453,5.972144,7.910735,-8.526886,-8.676010,-2.613492,-2.912490,6.005374,-8.416829,5.186911,-3.028009,2.700128,5.096267,7.054786,5.116756,4.286100,-6.407024,-5.874827,-1.206378,2.345209,2.682809,-4.614736,-2.366160,1.780926,-1.505222,-5.942703,-5.701588,-6.046951,4.927944,9.663420,-1.115960,-2.740437,9.006979,-5.249575,3.393738,-5.541258,5.483306,-9.833916,5.098082,7.400359,8.625057,-5.562288,6.769257,5.480388,-5.389867,9.198324,2.975344,-3.633930,-2.733162,-9.956369,-1.970860,-1.617819,-9.361072,-2.208416,-3.204361,3.633053,3.868993,-3.453038,-8.740856,8.062798,-9.934307,9.311769,-1.344426,0.766490,-5.965038,-9.407522,-7.459714,1.875971,9.022540,-3.588826,7.251453,8.223764,0.980296,2.392744,3.903002,8.255957,-6.318175,-3.691640,-5.575413,3.572576,3.405236,7.334976,8.173664,-7.624117,-0.071573,-2.238626,-0.255142,-0.775701,4.749621,5.758345,-2.301735,3.595928,9.835745,8.822369,0.883019,8.950102,-5.361118,-3.894662,8.915940,3.441999,-2.095552,8.398071,3.732687,-0.447412,4.828700,-2.208788,-6.076320,-8.789637,6.328927,2.828287,0.606945,9.759720,-0.220981,4.827301,7.510529,2.080508,-2.958180,-5.359016,2.369044,2.146353,8.618084,-4.025688,8.723527,7.850541,2.986049,5.631130,9.014164,-8.999356,-6.406016,1.729616,-3.592330,7.331744,6.487470,3.385487,8.065012,-2.199986,-6.725062,-9.136545,1.170704,-7.953003,4.710531,6.526016,-9.987456,-2.501533,2.768580,-8.930137,-3.552642,1.437578,-4.499962,-6.061806,8.946373,-1.092602,-3.943575,6.372358,-4.288885,-3.690376,7.697104,1.968069,2.130016,-8.100158,4.671759,3.654704,3.523864,-4.563445,5.803487,9.972147,2.531054,-7.089640,-0.117931,8.612952,7.766812,-8.502475,-5.724685,-6.990566,8.168642,-3.965218,-6.935600,4.106626,-3.895519,5.078617,-5.983788,-9.242356,-2.365874,5.797842,-0.472961,9.246316,-4.321976,-7.282170,8.512724,4.620803,-1.392153,-2.499370,6.967483,-4.349151,9.289226,6.340902,-3.400282,5.255609,-4.524075,7.006985,8.111169,-6.777316,2.212881,-9.300564,0.069867,2.627538,-3.959343,-1.158857,3.425541,6.683960,-6.582270,3.924710,7.129889,3.310903,0.508235,-3.601793,-2.294736,5.002285,-0.158962,-1.012118,5.076937,0.557168,9.248545,6.240827,-1.203784,4.000887,2.792513,1.064514,6.402125,-8.075532,5.471313,-3.862803,1.099981,9.826145,7.308313,5.696671,-7.930232,-9.423635,0.752072,-7.155444,2.077396,-5.751580,-7.781738,6.353679,1.106430,2.749634,-8.403720,-5.015417,9.843590,0.151439,9.506296,5.614247,4.789706,-7.002040,4.166192,-7.686807,-2.370301,9.376951,-2.110406,3.138995,-0.360148,9.833267,-6.439634,-3.853039,7.237524,-6.791998,-0.012993,-5.311101,-8.463702,-2.053838,-4.811876,-1.451633,-6.310094,6.793611,-1.739098,-6.278630,2.479815,5.266637,6.225602,2.784052,-3.838624,8.853727,9.185992,-7.290565,-0.369660,6.801286,-2.188597,-8.874291,9.176513,9.569650,-6.208289,-7.428462,9.268605,8.267894,4.773856,-2.809834,-2.366955,3.385829,7.319346,2.700924,-5.317673,-5.873866,-6.418242,6.831879,5.497336,3.060821,-1.219643,3.266423,-6.886889,-1.354256,-4.290373,6.155163,1.063697,-4.764758,-2.390173,-6.069214,2.531958,3.999825,5.055745,2.002048,-8.561706,-8.985503,2.362473,-2.448594,-7.370486,6.599339,2.355412,-0.136332,9.284569,-4.559917,-2.566687,2.480515,8.672437,-1.146569,3.850759,1.994530,-5.171484,0.956256,-8.337978,6.652210,-8.980013,2.372166,7.907908,-1.162383,-8.527153,0.050952,-4.809829,-8.606494,8.977570,-9.304969,8.152584,-1.694528,-2.358395,2.846140,-1.961548,0.862608,4.759680,-4.748584,-3.124873,-3.946821,8.806050,-7.128910,-5.308911,-0.389275,6.252040,-5.640192,-5.354197,-4.613865,-8.511309,1.066756,0.134911,-6.050271,9.718732,8.714320,9.686853,1.323967,6.305193,-2.953481,-2.486747,-1.765283,-4.591753,-8.535529,7.259120,8.330923,-0.498485,-4.889986,7.940920,1.339547,-6.342577,8.018569,-6.128542,-5.045388,-9.142322,5.620784,4.232934,-1.025711,-3.156679,9.998176,3.735327,-6.701371,4.403159,8.600933,5.665935,-3.755194,-5.790995,4.522479,-0.093747,-8.502150,0.058672,5.357488,6.998896,-1.484188,9.794276,-4.037637,-3.368641,-1.909791,1.572860,-2.137400,-7.300219,-8.538782,-5.868203,9.763683,-9.177330,7.417475,3.761943,-4.827885,-1.852095,7.486593,-9.154519,2.491416,-1.145398,1.970026,4.825097,-5.209443,-7.745275,-5.319080,-5.813416,7.412378,-4.176723,-8.411844,8.341033,-3.580860,7.207441,5.721847,0.537775,-8.741513,2.538528,-2.086051,-7.644327,-4.205202,6.178583,1.096902,7.987023,-1.542597,-0.010456,9.385158,-9.880603,8.153058,1.391814,5.694518,1.472503,-1.970195,4.978229,-1.700864,8.051679,-9.247179,7.026604,0.884882,-8.934007,-0.586096,-7.190765,6.663833,-3.709033,1.722472,6.359644,-0.385469,-0.813176,4.370463,9.712205,2.022989,5.773447,-1.535374,-8.585134,2.255574,5.292676,4.362926,3.433691,-1.072245,5.372035,-2.013020,2.904206,-1.136188,4.319685,6.586408,9.467979,-6.099005,6.541505,6.629113,-8.164929,-6.443714,6.344464,9.184042,-8.650142,-8.573727,4.174105,5.358545], dtype = "float32")#candidate|10560|(832,)|const|float32
call_10556 = relay.TupleGetItem(func_10402_call(relay.reshape(call_10543.astype('uint16'), [960,]), relay.reshape(var_10557.astype('uint8'), [2184,]), relay.reshape(var_10558.astype('uint32'), [1, 198]), relay.reshape(var_10559.astype('bool'), [320,]), relay.reshape(const_10560.astype('float32'), [832,]), ), 8)
call_10561 = relay.TupleGetItem(func_10409_call(relay.reshape(call_10543.astype('uint16'), [960,]), relay.reshape(var_10557.astype('uint8'), [2184,]), relay.reshape(var_10558.astype('uint32'), [1, 198]), relay.reshape(var_10559.astype('bool'), [320,]), relay.reshape(const_10560.astype('float32'), [832,]), ), 8)
func_5345_call = mod.get_global_var('func_5345')
func_5349_call = mutated_mod.get_global_var('func_5349')
call_10579 = relay.TupleGetItem(func_5345_call(relay.reshape(var_10557.astype('uint8'), [2184,]), relay.reshape(var_10558.astype('uint32'), [198,]), relay.reshape(const_10546.astype('bool'), [1, 60]), ), 5)
call_10580 = relay.TupleGetItem(func_5349_call(relay.reshape(var_10557.astype('uint8'), [2184,]), relay.reshape(var_10558.astype('uint32'), [198,]), relay.reshape(const_10546.astype('bool'), [1, 60]), ), 5)
output = relay.Tuple([call_10514,var_10524,uop_10527,call_10543,const_10544,var_10545,const_10546,call_10553,call_10556,var_10557,var_10558,var_10559,const_10560,call_10579,])
output2 = relay.Tuple([call_10515,var_10524,uop_10529,call_10547,const_10544,var_10545,const_10546,call_10554,call_10561,var_10557,var_10558,var_10559,const_10560,call_10580,])
func_10585 = relay.Function([var_10524,var_10545,var_10557,var_10558,var_10559,], output)
mod['func_10585'] = func_10585
mod = relay.transform.InferType()(mod)
mutated_mod['func_10585'] = func_10585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10585_call = mutated_mod.get_global_var('func_10585')
var_10587 = relay.var("var_10587", dtype = "bool", shape = (504,))#candidate|10587|(504,)|var|bool
var_10588 = relay.var("var_10588", dtype = "uint16", shape = (192,))#candidate|10588|(192,)|var|uint16
var_10589 = relay.var("var_10589", dtype = "uint8", shape = (2184, 1))#candidate|10589|(2184, 1)|var|uint8
var_10590 = relay.var("var_10590", dtype = "uint32", shape = (198,))#candidate|10590|(198,)|var|uint32
var_10591 = relay.var("var_10591", dtype = "bool", shape = (320,))#candidate|10591|(320,)|var|bool
call_10586 = func_10585_call(var_10587,var_10588,var_10589,var_10590,var_10591,)
output = call_10586
func_10592 = relay.Function([var_10587,var_10588,var_10589,var_10590,var_10591,], output)
mutated_mod['func_10592'] = func_10592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10455_call = mod.get_global_var('func_10455')
func_10456_call = mutated_mod.get_global_var('func_10456')
call_10641 = relay.TupleGetItem(func_10455_call(), 1)
call_10642 = relay.TupleGetItem(func_10456_call(), 1)
func_9002_call = mod.get_global_var('func_9002')
func_9008_call = mutated_mod.get_global_var('func_9008')
const_10650 = relay.const([False,True,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False], dtype = "bool")#candidate|10650|(60,)|const|bool
const_10651 = relay.const([9,-10,-5,2,10,4,-1,-1,-3,-10,-1,1,9,-4,-5,-10,7,9,-8,3,-7,3,-4,-10,3,-3,-5,8,-10,8,9,8,-7,-1,6,-5,1,-2,6,9,-3,6,1,-1,-6,4,8,-5,-9,-2,-10,-9,-6,-3,-2,-2,9,3,9,10,-5,-5,6,-8,8,-1,6,7,-8,2,5,5,9,-3,-1,8,-7,9,-4,-8,6,9,9,1,8,-9,7,-8,-1,-7,-6,-8,-7,-6,-3,-3,4,-10,8,10,5,1,-3,-10,-10,9,-1,8,-6,-9,9,-8,4,7,9,9,7,8,9,-6,-5,6,2,4,-8,-8,6,1,-4,-3,-6,-1,-2,-4,-4,-1,-3,-5,-1,-4,-3,-8,-8,1,9,-9,4,-7,8,7,-2,-3,5,2,8,-7,-10,-1,5,-4,-4,9,-2,6,8,2,-4,-6,2,5,6,10,-6,-6,-1,-5,-3,4,-3,-3,-6,2,1,-8,-6,2,6,9,3,5,6,-2,8,-4,8,1,-4,5,1,-8,-10,-2,-4,-10,-8,2,7,-5,-2,6,-6,-6,-10,-6,6,-1,-6,-3,-3,9,8,-7,7,-1,-1,-9,-4,9,-5,8,-3,-8,-1,9,-3,-7,-2,-7,-8,-10,-5,-8,-5,4,4,-3,-8,-5,-3,-5,5,-9,-6,-9,-5,3,-7,9,-8,4,-3,-8,-8,-2,-7,9,-6,-2,3,7,10,7,3,-1,-7,2,10,2,4,10,8,-5,6,-9,9,-8,-7,6,9,10,2,7,-3,1,1,-1,3,-3,3,9,-7,-1,-1,6,-4,-9,10,10,5,3,5,4,9,-8,-1,-6,-5,5,-4,10,-9,6,-5,3,8,-5,-1,2,10,2,-8,-2,-5,-10,9,-9,-9,6,-1,-3,8,-3,-8,-6,-4,10,9,6,-8,-3,8,-5,-8,10,-1,-10,8,-7,8,-5,-4,-6,-4,4,-3,-10,10,-8,6,10,9,-6,5,5,9,-10,4,3,-10,-3,6,2,7,-6,7,10,-8,-5,2,-8,2,3,4,8,-2,7,-2,-6,10,-2,8,5,10,8,-1,-4,-4,1,-2,-2,-7,4,7,-10,2,5,6,5,-7,-8,9,1,9,-1,-10,5,1,9,-9,-6,3,-2,-9,-4,2,-9,4,-4,2,3,-10,9,8,-9,9,10,7,10,1,-6,-6,3,5,-4,-5,-8,7,-6,9,4,3,1,-7,7,7,-8,10,-6,9,3,8,8,-3,10,10,-2,-7,-2,-4,-2,-4,-5,-2,-1,-10,4,8,-3,6,2,7,-8,7,-9,-9,-3,1,-9,-8,1,-7,-5,-7,-7,-2,-9,-3,3,7,2,-3,10,2,7,2,-7,5,5,2,6,-10,-5,4,-4,2,-6,10,10,-5,-1,5,5,10,3,-1,6,-6,6,-8,2,8,-4,-3,-2,1,5,-1,-7,2,3,-1,-7,-9,-8,5,7,-7,4,9,-10,9,-8,8,1,7,5,4,-6,5,2,-5,3,-1,-4,1,1,-1,-2,6,1,9,3,6,-6,5,-10,8,4,10,-10,-2,-3,-1,2,-8,1,6,3,-3,-4,-9,-9,-10,6,1,-1,10,5,-6,-9,9,6,-5,-1,7,7,4,3,-10,-1,7,-5,-5,8,-9,-10,8,6,-2,-2,-6,7,6,1,-2,-9,6,8,4,5,-5,-4,10,8,8,-2,-10,4,2,-2,-10,3,-4,-9,9,2,10,8,-7,-3,8,-1,4,-4,1,-1,8,-10,7,1,-5,9,-10,-7,-3,3,-6,2,10,-6,-4,5,-3,4,-4,3,9,-7,8,7,-6,5,-5,-2,2,7,7,8,6,-9,7,2,-5,-7,4,-4,-6,-2,5,7,6,-3,-7,4,-3,4,6,-5,4,1,8,10,-6,7,8,1,10,-6,7,2,4,9,1,-8,8,7,-7,-1,1,8,-2,5,5,8,-3,3,6,5,7,-4,-5,2,10,-6,-1,-10,5,4,-7,3,3,-5,-7,-8,-6,-1,5,-4,1,6,4,5,-1,9,-1,8,-8,3,-5,-4,-3,-3,-10,-3,-7,-3,5,2,6,6,6,1,8,1,-5,6,10,8,6,-3,2,-6,3,-3,-1,-6,2,3,1,5,9,-8,1,-10,-1,10,10,-10,-3,-2,3,-1,5,-7,8,-4,1,7,-10,-9,-4,4,-6,-5,-1,-5,-4,9,2,6,8,-8,-6,3,6,8,-2,1,9,8,4,-2,2,10,1,-6,7,-10,-1,-8,-6,6,-9,7,-7,-7,10,1,-5,8,6,5,-9,8,-7,-8,5,2,-3,3,7,2,1,1,-4,-2,-4,8,1,3,2,-2,5,2,-6,-9,3,2,5,-10,2,-1,-8,-10,-5,-6,6,6,3,-1,-1,1,2,-9,-7,-7,-10,7,-9,6,2,3,-1,1,-8,-4,5,-4,1,3,6,-8,10,6,-4,5,4,6,-8,-1,9,7,1,10,-9,-9,-5,-1,2,-6,8,4,9,1,-7,6,-6,-10,6,-10,-5,8,-5,8,-6,6,6,-10,-10,-6,1,-4,7,-7,-6,-8,3,-4,6,-8,6,6,5,-9,-5,3,7,7,1,-6,1,1,-1,4,7,-8,5,-5,10,-5,-6,-2,-6,-6,-5,6,-8,9,2,-7,-5,-1,10,3,9,6,-8,10,-9,1,-9,-9,-3,-6,-2,-3,-9,1,10,1,2,5,-8,-4,-1,3,5,9,-10,5,10,-1,2,-10,6,10,-7,-9,-1,-3,9,6,-6,2,-4,10,-4,-4,-2,7,-4,-7,-3,7,9,-10,-4,4,1,-7,-2,-8,-9,3,7,-1,-8,-3,5,6,-7,-4,-3,2,4,-9,-6,5,1,9,7,-10,-8,-7,-10,9,-9,10,-3,6,-2,6,-3,-5,10,-4,-4,3,5,9,10,5,-2,1,-7,-5,-3,-7,3,-3,-6,9,1,-3,9,-2,-9,2,3,-7,2,9,2,-4,-8,7,3,-5,9,9,-2,-8,-1,4,-6,2,2,3,-7,-10,-3,-2,-4,-1,7,-10,-2,-9,1,-6,-6,-4,10,-4,-6,6,3,8,-5,10,-8,2,-9,4,6,-6,8,1,-9,9,-3,-7,-2,-4,1,-10,4,-2,3,-4,5,3,2,-3,1,6,-6,-10,5,3,10,8,5,1,-5,-1,7,-6,-8,-9,1,-2,-8,3,-8,1,2,-4,-9,-9,9,7,-1,-4,1,7,7,-1,2,8,2,10,3,3,8,-8,-1,3,-7,-9,8,-2,-5,-10,7,-9,-1,5,2,6,1,6,-1,1,4,8,-6,-9,-5,10,-10,1,7,-5,-5,10,9,5,5,-9,8,4,-10,-6,3,5,4,-5,3,3,-3,3,1,3,5,-6,9,-6,-3,2,-10,-9,6,-7,-6,-6,-5,2,-8,-1,-4,6,9,2,6,-9,-2,1,2,8,10,8,4,1,-4,-5,-1,4,4,-3,-10,5,1,-2,3,3,-4,9,1,-2,-2,5,-7,-3,-3,-1,9,8,3,-4,-10,2,-8,-5,-10,-5,-3,8,-7,1,9,4,-10,-7,4,9,-8,9,-1,6,1,-8,2,-4,-8,3,-9,-5,-1,1,-4,9,-1,-8,3,6,7,-8,-9,-2,-9,4,1,-6,2,6,-8,-7,-3,1,-3,2,8,-3,-4,4,9,1,9,-2,7,-6,5,3,-2,-6,9,5,9,6,2,-7,10,-10,-5,10,2,-6,3,5,-4,-8,-10,-4,-2,2,-2,4,-5,3,-9,-4,2,8,-1,-9,-7,-10,10,5,4,-6,6,-10,-6,-5,-7,8,10,5,10,-8,10,3,4,4,7,6,-1,4,-9,-4,7,8,-9,-1,-6,5,9,-8,6,-10,-1,6,-3,1,1,-10,9,-8,-2,7,-7,4,10,8,-3,1,-5,7,-9,-1,8,-9,-1,5,-5,1,-5,-2,6,-3,10,-2,2,4,10,10,-7,4,7,3,-2,-7,-9,1,9,-6,-1,6,8,3,-5,7,-5,2,-8,3,9,-6,9,6,5,-6,10,10,-2,-7,7,9,-5,-3,5,-5,-5,5,-10,3,4,-2,3,-4,6,-2,-5,6,-3,5,4,-6,-10,-5,1,8,9,-10,3,-7,-5,-1,-1,2,-5,-6,4,-9,3,7,-4,-1,-6,-3,-5,7,9,-2,-6,-8,1,9,6,-2,-4,2,3,-10,4,-7,6,-1,-1,-7,9,-7,1,-10,5,-5,2,-8,-3,-5,4,8,-5,6,3,-4,-1,7,-8,-9,10,6,3,8,-4,3,-4,-9,1,4,9,8,-10,1,3,-4,4,-4,4,3,4,10,-8,-6,6,-2,-9,-4,7,-8,-5,-3,2,4,-9,6,2,1,6,-8,9,-7,2,9,9,10,-10,1,-10,10,1,-5,3,-4,5,-1,-5,3,2,-7,-9,-4,-1,3,-9,3,8,-6,5,-1,-3,-5,3,-6,-9,-7,-1,1,6,-5,8,7,-7,-8,3,3,2,-4,5,1,2,-6,10,7,3,3,2,-9,4,-1,7,-5,-1,5,9,-2,7,-6,-5,-3,4,2,-7,-5,6,-8,-10,-3,9,7,-5,9,-6,9,7,-2,7,9,2,-4,1,-5,-4,2,-6,3,9,-5,6,-8,3,8,-3,5,2,-8,-1,6,1,9,8,-1,4,1,8,-5,-9,-3,9,-10,7,-5,-2,4,-8,1,4,2,7,-10,-1,10,-9,4,2,10,-5,8,6,1,6,10,3,10,5,9,-8,-8,3,-6,10,-4,10,2,-7,-2,2,-3,-5,-9,4,6,6,-8,10,3,9,-4,-3,-7,-9,1,10,-8,-6,3,4,3,-7,-10,4,-8,-3,2,-9,6,5,-9,3,9,-6,-1,-4,-4,-5,10,10,-2,2,-10,-10,-9,6,-1,-9,10,3,-10,8,-1,-8,2,-1,-2,-8,-4,-1,-5,-4,5,7,1,-1,-10,-4,-1,4,-10,-10,9,-5,8,7,10,-2,-7,4,-2,8,1,-4,4,-8,4,5,7,4,5,-1,-5,1,3,-1,-10,6,2,-6,8,1,5,3,7,7,1,6,-10,-9,4,-7,-10,6,3,-6,-7,10,2,-3,-1,10,10,-9,3,-5,-7,-1,-5,8,-10,-6,-3,10,8,-6,-4,2,-10,-6,8,-10,-2,-3,-8,5,-7,-7,-7,-8,8,5,-10,-8,5,-5,-3,-9,8,4,-3,5,1,-2,9,-5,-8,3,-7,-10,4,7,-2,4,8,-9,-8,3,-8,-8,-9,-6,-3,-4,-9,-7,10,2,-2,-6,-8,-1,1,8,9,6,8,4,10,-6,-2,4,8,-6,6,-9,8,3,-4,-7,-6,10,7,-9,-1,8,7,5,-9,6,-4,-10,-6,2,-3,-2,3,4,5,-5,-8,8,-4,-5,-6,10,7,-2,4,-1,-2,7,5,5,7,-6,2,4,-9,-3,-7,2,-3,-7,8,-6,-10,-8,-8,-3,-3,-10,5,3,3,8,8,-6,-6,-10,8,7,-2,-3,5,3,-6,-5,9,4,5,-3,-6,6,9,-8,-3,-7,9,-3,-5,-4,-3,2,8,-5,-2,6,5,-9,7,3,2,4,9,8,8,-7,-3,-3,8,2,4,7,-9,6,-2,5,-9,5,-8,6,-7,7,3,-8,7,1,9,3,-4,3,7,10,-9,-6,8,-3,6,-4,9,1,4,-9,2,1,2,10,4,-5,-4,9,6,8,9,10,6,6,-3,-4,-9,-9,-1,-10,10,9,10,-10,10,-6,-2,9,-8,-9,-1,8,-8,-1,-7,-5,8,-2,1,-5,-2,2,-7,-3,7,8,2,8,-2,-10,-9,7,-10,8,-3,-6,3,-8,-10,-7,-10,5,-10,4,1,2,-3,-9,-10,-8,-7,-5,-2,-1,1,-9,3,-4,6,-7,-6,-9,10,3,5,10,-6,2,-7,2,3,10,5,10,-6,10,-8,2,-7,7,-8,3,3,6,10,-9,-7,-10,-6,6,9,-3,-5,6,-4,3,9,8,5,3,1,-10,-2,-3,-1,10,4,-7,-2,2,-4,-8,3,9,9,5,4,10,-6,-4,-1,4,-10,6,-2,6,3,2,-9,6,-1,-9,6,10,-2,6,-9,-1,-1,-10,7,-10,-9,8,1,7,-7,-8,-6,5,-3,3,3,-2,5,9,8,-4,-10,-7,8,-7,-2,10,-1,8,-7,-7,-9,7,1,-5,3,-7,2,8,-10,7,-7,-2,1,4,4,-10,-8,-6,3,7,-3,-3,-10,6,-3,4,9,10,-5,-10,6,2,7,5,3,7,8,-2,-10,-2,3,-5,-1,4,1,-7,-4,-3,8,2,-1,9,9,-10,2,-2,-6,-7,3,-5,5,-3,10,1,-5,-1,-2,-6,2,1,-7,-8,1,-2,-9,3,6,3,4,-3,-5,-3,-5,-1,4,10,7,4,5,4,-2,8,-3,-5,-2,-3,-5,7,7,8,2,-1,-9,-6,-5,-8,9,7,6,-8,2,-7,-10,-8,4,8,-5,-2,-8,-9,-1,7,3,-2,8,7,-5,-7,-9,-4,3,7,-1,-2,-9,1,10,-2,4,9,-7,-1,1,7,-5,2,-3,7,2,-4,-2,3,-4,4,10,-9,-2,-7,-10,-2,5,4,7,-1,-1,-9,9,5,-6,1,-2,3,5,-6,6,10,4,-9,-5,9,5,-9,10,8,-2,-4,-1,8,-10,-1,-2,8,-6,8,-7,-7,7,-7,-1,4,5,-8,6,-2,-10,-3,-5,10,-9,-3,9,1,8,-2,-4,-2,4,-5,8,9,2,10,-4,-1,3,1,3,-6,9,-10,4,-2,-4,9,6,-9,9,-8,-2,-5,-2,-6,8,8,2,2,1,-2,-5,-6,8,-1,-5,-1,-7,-1,-3,-6,9,-2,-3,6,-2,-3,-1,8,-4,-8,8,-7,6,-6,5,1,9,6,10,7,10,7,-9,-3,-3,-6,-10,8,1,6,7,3,-3,-9,2,-6,-6,-6,-7,-1,-1,1,-10,-7,2,-10,-3,6,-3,-10,1,-7,-9,3,1,-6,3,-4,-8,-5,-6,-3,9,2,4,-4,8,-3,4,2,-2,-10,8,9,4,-8,10,-7,1,-8,3,-2,-3,5,3,-5,-6,1,8,1,5,-2,1,3,-3,8,2,7,5,5,1,-2,-6,2,2,-5,3,1,7,7,-4,5,5,5,6,-7,-1,-2,9,-10,7,7,3,7,3,-1,1,4,8,5,9,-8,10,-9,8,-1,5,7,7,7,8,-6,3,-4,-9,-6,-2,1,6,10,-1,9,8,-3,1,-4,9,-9,-7,-5,3,-5,6,8,7,-6,-8,6,4,-2,1,-6,-3,-3,8,-9,7,-10,1,5,-6,8,-9,-4,4,-7,-2,-5,8,7,4,-8,9,4,-6,10,1,7,-2,2,-7,-1,2,5,-2,5,-10,8,1,-1,-2,-8,-9,-2,8,-5,5,-7,1,-8,-4,-10,-7,4,-2,-4,6,-9,1,-5,7,5,5,-10,3,9,10,2,8,7,2,8,5,2,1,4,-9,-2,2,1,10,3,-1,-9,-2,1,-10,-4,6,-1,-5,-5,-6,7,8,5,1,-10,-4,1,5,-2,1,-10,-3,-4,-7,-1,7,-3,9,3,-8,10,1,-10,5,3,-9,3,-3,-10,-7,3,10,-8,-6,9,-5,-5,-2,3,10,-1,9,3,-4,-4,6,6,-5,-7,9,-4,6,-1], dtype = "int64")#candidate|10651|(2925,)|const|int64
var_10652 = relay.var("var_10652", dtype = "uint16", shape = (192,))#candidate|10652|(192,)|var|uint16
var_10653 = relay.var("var_10653", dtype = "float32", shape = (308,))#candidate|10653|(308,)|var|float32
call_10649 = relay.TupleGetItem(func_9002_call(relay.reshape(const_10650.astype('bool'), [60,]), relay.reshape(const_10651.astype('int64'), [15, 195]), relay.reshape(var_10652.astype('uint16'), [192,]), relay.reshape(var_10653.astype('float32'), [154, 2]), ), 1)
call_10654 = relay.TupleGetItem(func_9008_call(relay.reshape(const_10650.astype('bool'), [60,]), relay.reshape(const_10651.astype('int64'), [15, 195]), relay.reshape(var_10652.astype('uint16'), [192,]), relay.reshape(var_10653.astype('float32'), [154, 2]), ), 1)
output = relay.Tuple([call_10641,call_10649,const_10650,const_10651,var_10652,var_10653,])
output2 = relay.Tuple([call_10642,call_10654,const_10650,const_10651,var_10652,var_10653,])
func_10658 = relay.Function([var_10652,var_10653,], output)
mod['func_10658'] = func_10658
mod = relay.transform.InferType()(mod)
var_10659 = relay.var("var_10659", dtype = "uint16", shape = (192,))#candidate|10659|(192,)|var|uint16
var_10660 = relay.var("var_10660", dtype = "float32", shape = (308,))#candidate|10660|(308,)|var|float32
output = func_10658(var_10659,var_10660,)
func_10661 = relay.Function([var_10659,var_10660,], output)
mutated_mod['func_10661'] = func_10661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10037_call = mod.get_global_var('func_10037')
func_10039_call = mutated_mod.get_global_var('func_10039')
call_10667 = relay.TupleGetItem(func_10037_call(), 0)
call_10668 = relay.TupleGetItem(func_10039_call(), 0)
func_5345_call = mod.get_global_var('func_5345')
func_5349_call = mutated_mod.get_global_var('func_5349')
var_10741 = relay.var("var_10741", dtype = "uint8", shape = (2184,))#candidate|10741|(2184,)|var|uint8
var_10742 = relay.var("var_10742", dtype = "uint32", shape = (198,))#candidate|10742|(198,)|var|uint32
var_10743 = relay.var("var_10743", dtype = "bool", shape = (60,))#candidate|10743|(60,)|var|bool
call_10740 = relay.TupleGetItem(func_5345_call(relay.reshape(var_10741.astype('uint8'), [2184,]), relay.reshape(var_10742.astype('uint32'), [198,]), relay.reshape(var_10743.astype('bool'), [1, 60]), ), 1)
call_10744 = relay.TupleGetItem(func_5349_call(relay.reshape(var_10741.astype('uint8'), [2184,]), relay.reshape(var_10742.astype('uint32'), [198,]), relay.reshape(var_10743.astype('bool'), [1, 60]), ), 1)
func_8227_call = mod.get_global_var('func_8227')
func_8231_call = mutated_mod.get_global_var('func_8231')
const_10746 = relay.const([[False,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,False,False]], dtype = "bool")#candidate|10746|(1, 30)|const|bool
call_10745 = relay.TupleGetItem(func_8227_call(relay.reshape(const_10746.astype('bool'), [30,]), relay.reshape(var_10743.astype('bool'), [60,]), ), 1)
call_10747 = relay.TupleGetItem(func_8231_call(relay.reshape(const_10746.astype('bool'), [30,]), relay.reshape(var_10743.astype('bool'), [60,]), ), 1)
output = relay.Tuple([call_10667,call_10740,var_10741,var_10742,var_10743,call_10745,const_10746,])
output2 = relay.Tuple([call_10668,call_10744,var_10741,var_10742,var_10743,call_10747,const_10746,])
func_10764 = relay.Function([var_10741,var_10742,var_10743,], output)
mod['func_10764'] = func_10764
mod = relay.transform.InferType()(mod)
mutated_mod['func_10764'] = func_10764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10764_call = mutated_mod.get_global_var('func_10764')
var_10766 = relay.var("var_10766", dtype = "uint8", shape = (2184,))#candidate|10766|(2184,)|var|uint8
var_10767 = relay.var("var_10767", dtype = "uint32", shape = (198,))#candidate|10767|(198,)|var|uint32
var_10768 = relay.var("var_10768", dtype = "bool", shape = (60,))#candidate|10768|(60,)|var|bool
call_10765 = func_10764_call(var_10766,var_10767,var_10768,)
output = call_10765
func_10769 = relay.Function([var_10766,var_10767,var_10768,], output)
mutated_mod['func_10769'] = func_10769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5598_call = mod.get_global_var('func_5598')
func_5600_call = mutated_mod.get_global_var('func_5600')
call_10800 = func_5598_call()
call_10801 = func_5598_call()
func_9366_call = mod.get_global_var('func_9366')
func_9367_call = mutated_mod.get_global_var('func_9367')
call_10813 = relay.TupleGetItem(func_9366_call(), 0)
call_10814 = relay.TupleGetItem(func_9367_call(), 0)
output = relay.Tuple([call_10800,call_10813,])
output2 = relay.Tuple([call_10801,call_10814,])
func_10833 = relay.Function([], output)
mod['func_10833'] = func_10833
mod = relay.transform.InferType()(mod)
mutated_mod['func_10833'] = func_10833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10833_call = mutated_mod.get_global_var('func_10833')
call_10834 = func_10833_call()
output = call_10834
func_10835 = relay.Function([], output)
mutated_mod['func_10835'] = func_10835
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10841 = relay.const([[[-8.591878,-8.422825,2.891782,-2.688536,1.869782,-4.685985,4.725782,-6.376387,6.497690,-8.323543,-8.441626,7.161077,-1.080254],[0.845249,-1.316151,1.366150,-9.301297,1.963258,-9.569360,7.093504,9.106206,-9.405612,-8.512703,9.511541,1.736253,-3.073154],[-0.240705,9.070162,-4.420927,-0.231205,-6.553447,-6.047347,3.539181,-6.697527,5.689518,0.147308,3.060983,6.808950,-6.281269],[4.701714,5.462561,-2.946465,-4.575655,-4.748690,-8.808621,9.288368,-5.759662,-5.280367,6.227779,5.450728,-8.521217,7.939832],[6.210683,6.888993,0.850466,9.126629,6.839166,6.102133,8.748106,-6.727233,-0.689783,-1.538124,9.746375,2.986443,5.351444],[9.146709,0.235696,3.614376,-0.346676,8.180254,-6.453112,-1.022824,-3.125463,3.582980,1.795431,3.575338,2.482521,-7.630135],[-8.217426,4.982773,3.994496,-9.835466,-4.303758,8.726179,-8.153105,-2.880822,2.555449,-4.684912,-2.030819,7.475515,-0.658036]],[[-0.234696,7.316695,-7.125969,-4.438201,6.928957,9.118823,-1.006319,-2.247774,-4.971642,-4.751346,2.818870,9.488922,9.248820],[1.439450,9.877567,-0.178106,0.129582,-8.134019,7.266948,7.483780,-8.984087,-4.839799,-2.916520,-3.771784,-6.929620,-9.952269],[-2.516504,3.950519,3.029137,7.554888,-8.405236,-8.076623,8.367693,-8.150727,5.962652,4.579049,-0.865895,4.895681,-5.033529],[6.644642,-3.057864,-4.242996,0.859444,3.903255,-7.356104,9.148896,-9.022177,-9.519851,-2.047104,-6.360771,2.968167,-9.102756],[-8.479626,-6.863183,5.787949,8.054415,9.996229,1.144670,7.948785,-5.698961,9.970004,2.529909,4.822351,6.236734,-7.552340],[-0.638720,3.291010,7.741136,-4.970743,4.915763,9.586176,6.396260,-7.621625,5.115783,4.911646,-5.298600,4.818319,-6.748660],[8.008710,-1.343909,-8.824297,8.972941,9.995293,6.241300,7.621695,-3.753699,3.437521,2.828160,-3.096532,3.551234,-9.145180]],[[-0.152909,0.985517,9.413837,-7.538415,-2.635870,-8.250837,-1.696218,-3.187462,8.267935,-5.859521,-3.846609,6.586606,-6.680830],[-8.020545,-5.331746,9.855363,-7.231343,8.330560,1.660099,-3.006887,-0.863796,-8.534594,-7.687410,-0.450323,-2.717892,6.298990],[-0.868749,-9.512106,-7.418359,4.202369,-6.276004,7.753231,4.890166,-4.870727,-6.011068,8.808049,3.774926,-8.501501,-8.221235],[9.866015,2.234858,-4.050028,0.016243,-5.302942,0.327207,-7.207750,-3.020568,0.867355,5.873426,7.521288,-5.131500,-4.773491],[-9.301631,0.672977,-0.973327,2.340291,-1.734300,5.181919,-0.241455,5.346095,5.183883,2.892234,-6.963472,-9.485999,-3.328280],[8.423377,-9.805541,-7.838424,-7.429667,4.440795,-9.973271,6.868047,-5.299108,2.207530,-6.685344,4.980310,-7.422607,-2.169520],[2.343648,-5.455979,-9.876447,-8.390914,-6.438347,6.280134,-3.646888,9.755830,1.795543,4.175890,9.932655,-8.354738,-6.075106]],[[-3.370756,0.343106,9.570848,5.299093,-5.859906,9.726555,-9.932445,-7.633248,8.922787,-2.821810,7.839504,3.126710,-3.078234],[1.685580,-5.845184,-0.837464,1.979299,3.652361,-2.445737,-2.634251,-6.518433,1.276123,0.508151,-0.058337,-3.664147,8.892348],[-5.413347,7.034855,-1.667977,-3.289188,-8.324597,3.189729,-6.870819,-8.502846,7.779545,7.146675,-3.342626,-3.397614,-3.545501],[-6.236853,5.561579,3.308222,-1.207308,-8.694846,3.323140,-1.325528,9.195869,6.699490,-3.907678,-7.391195,3.679899,-2.896385],[-1.923322,4.180015,8.912810,-7.671335,-9.400409,2.302275,-2.840469,1.205737,-8.109625,7.128368,6.162642,6.963317,-0.858949],[1.479710,3.455187,6.781922,-1.455453,6.484943,5.663931,-2.250936,9.609330,-6.646015,-7.263475,1.365915,4.700858,-1.435912],[-9.356960,0.494276,-8.450784,-8.482777,-2.096110,2.674330,-0.690734,-4.388158,-6.022552,9.862157,-0.986307,4.387849,7.038017]],[[1.137674,6.590625,7.835523,7.707409,-7.927866,1.727515,-2.322475,2.168451,-9.051767,-8.777607,1.008249,-2.727075,-7.825571],[-5.922494,2.861250,-9.985598,9.480645,-3.634662,1.175054,4.421561,1.380953,-8.978902,-3.730685,-6.929381,-7.046589,5.149246],[1.321421,-4.328015,4.759105,-0.497464,4.232153,9.459518,-3.477249,7.776629,-7.215310,-3.649227,-6.917716,3.643653,-8.064438],[6.425396,-1.134446,-2.300451,-4.819951,1.953222,3.688765,-8.087773,-4.439012,9.012971,-4.972095,0.081596,6.568712,-9.385298],[-5.523465,-3.852888,7.045045,7.143805,0.020697,-6.227010,2.038714,0.688674,2.023206,3.524565,7.099185,-5.973443,4.914508],[-5.182525,6.236244,-3.220281,-3.834681,-0.770303,1.508960,6.913754,0.208406,-2.201411,5.076246,-4.824133,-5.543040,1.370124],[-1.598258,9.597630,6.010157,9.046128,-8.448660,-1.111623,-4.789145,3.182583,3.561907,-3.095137,-0.065517,8.498460,-0.489254]],[[-6.221280,1.257258,9.982854,5.078451,2.799511,-9.514388,-4.266771,8.535587,-8.416009,5.797081,2.349301,-2.889762,-6.946305],[-7.372300,2.747658,2.302907,1.994494,8.127490,-8.498216,3.908042,4.968280,-6.638791,1.265333,-0.287093,-5.981019,4.826594],[-0.282868,4.932736,-2.652174,-4.010945,1.342706,1.452425,-8.500587,5.459580,6.784515,1.828082,-9.574465,-4.023580,1.335751],[0.719748,6.288492,0.651289,3.032906,-1.878952,-3.278444,1.620801,-9.639401,4.904862,0.361562,6.980968,4.660391,8.807850],[2.796257,4.754736,-2.308682,-9.272234,9.466447,-9.476835,-0.172511,-7.623004,3.341315,-1.837922,-4.565138,7.698393,-0.742564],[5.334679,0.383319,-4.860879,-0.408805,6.676228,-0.009011,-9.245247,9.646948,-1.548575,4.073761,-1.244488,-1.033399,-6.439336],[-1.287051,-7.998582,3.722377,0.514243,-9.341077,5.925454,2.642558,-2.758334,-2.255369,-7.114813,0.340793,2.945111,3.709319]],[[1.401643,8.069010,9.549487,5.959232,-4.628763,9.813248,2.824397,6.208634,-8.718479,6.108113,1.034708,-9.586658,3.073782],[-0.680065,-7.565673,1.987980,-9.915499,-0.939841,-7.462127,3.256751,-1.648721,-3.398477,8.956856,-4.661088,2.736649,-5.808049],[0.352003,-6.091940,-8.342221,1.559696,-9.485058,-5.840782,8.475303,-4.129270,5.384258,9.684393,-2.516567,6.695437,2.452016],[-8.395273,-0.659056,3.741947,0.292954,-1.012991,3.231462,-9.539914,-4.861064,-6.201068,2.325155,-4.224007,-1.031822,-6.178384],[3.581413,-9.490296,2.467494,8.002662,1.501600,2.963267,-6.659169,-6.066570,-5.181699,-7.515506,-5.667324,-4.793994,3.125740],[-6.316768,-0.075049,6.282089,-2.104137,6.051470,-4.787109,7.786094,3.955809,-6.126220,9.926419,5.633259,4.225719,-7.998714],[-1.137408,-8.919393,6.160052,-7.435569,7.398610,-9.138895,2.148831,-8.091517,-5.703031,-1.777063,-0.680791,-8.638755,1.250687]],[[7.031021,9.204195,-1.334307,3.944262,5.312418,5.043290,-9.070080,1.774358,6.671273,-5.636875,-0.741220,0.044343,3.801520],[6.496223,5.561898,0.868513,-3.502082,9.364849,4.500542,8.923988,2.256684,-3.094098,4.651434,-5.831250,-3.938506,-3.737383],[-6.873741,9.135048,-6.513589,7.879312,-3.902412,-2.020777,7.797090,1.935782,-5.253163,5.505406,-7.462049,-6.619087,-4.947252],[-2.026851,6.784624,3.344442,-0.691470,6.003323,-1.604801,9.350411,-3.921154,9.586924,0.068870,-7.549575,7.571199,4.532571],[9.018048,8.738314,5.395139,-9.604443,1.040413,-2.352849,5.074929,-6.645653,-1.724503,-9.792189,0.112301,-0.014780,-5.458267],[9.615717,-8.602871,4.281481,-2.970498,2.388522,-2.243728,-2.878996,-6.635456,-9.008293,2.843511,8.614122,-7.680952,-9.914463],[4.962738,-1.444762,1.954617,1.589262,-1.652274,0.850226,4.023496,-3.538590,-4.864623,1.304043,2.337839,-5.225228,-7.139310]],[[-0.313524,2.336034,3.965594,0.138374,7.375812,3.607791,6.358200,3.372622,-6.223290,1.844020,9.867051,0.965054,-4.776687],[-1.752247,8.043469,-1.205103,2.467824,-5.524191,-7.937076,-1.378786,-8.130764,-8.487955,3.748881,-3.403811,2.533956,2.683852],[-1.570043,9.232868,4.212716,5.406458,4.150056,9.642466,-1.111763,8.954412,7.396627,-9.092602,6.701290,9.033673,-1.683737],[-3.562123,-3.398858,-8.623845,-9.860869,2.750523,0.298379,7.212364,7.855989,5.887809,-4.420865,-9.049342,-8.620967,-5.552922],[-9.210808,5.042073,8.688959,-6.606820,5.952368,-1.589194,-3.196295,5.864746,1.685413,-7.488206,8.170164,-4.263707,-2.356273],[-5.567888,7.356476,-1.186361,-6.394928,-7.078590,7.177390,2.443616,-0.863117,4.442615,-8.976458,-1.223473,4.843153,-0.753620],[9.007299,-0.348071,1.006208,-4.447091,7.556652,-4.871902,-5.854813,-1.072475,3.780992,-8.321433,9.069491,8.441767,9.714217]],[[5.649965,-7.384979,4.072283,-5.273063,-8.266126,-9.261069,-4.134746,4.794334,-7.039408,-8.703709,-0.793053,-1.550377,3.980340],[-5.429168,3.458637,-3.051520,-0.521263,-8.801460,-7.745379,9.833917,6.263914,-6.750127,-5.193701,-3.170022,9.617077,7.464068],[0.267742,7.701001,0.403092,6.188910,2.349031,-7.304189,-6.968297,4.740055,3.211935,3.483773,2.606239,2.473481,-5.723667],[-6.605988,-9.355957,9.963894,1.370578,-9.180221,-8.202771,-4.459903,6.484136,2.892326,1.276128,2.372306,7.349961,1.468541],[-5.955890,-2.180094,9.477385,-4.024649,-5.926894,7.040339,-8.588710,1.032877,4.410141,-8.155302,-4.083744,-1.629832,1.533679],[-5.924674,3.240618,1.045950,-6.539356,-9.878175,-2.664483,1.906068,-0.734316,-7.394464,-2.581234,5.482732,0.680464,0.280094],[8.523684,-1.196195,4.933695,3.644139,-5.651977,-7.723094,6.910790,-1.934041,8.877727,-3.881329,-6.158881,9.357319,-3.192771]],[[-2.309150,-7.705415,6.390591,-1.533270,-4.120951,2.062751,-9.213088,-4.989355,-0.612562,8.277829,1.111936,1.955936,-5.461231],[2.632881,-7.231602,-6.146532,3.865900,-2.109083,-7.027615,-2.870124,-2.143935,-3.866867,-7.061232,1.459884,-9.106907,4.900498],[-7.389284,-8.996912,3.160566,-6.961328,2.813981,-0.418047,8.025932,-3.951071,1.172587,5.893024,-4.443853,-0.870195,-9.716175],[9.260481,-4.250146,6.411380,5.314414,9.549914,7.726752,4.288269,-8.698129,3.782672,-4.447959,0.053266,0.740560,-1.154195],[7.441793,-1.719433,-0.570282,-0.674833,-7.153236,6.152662,8.229150,-7.323509,-5.724410,-3.780728,-9.146641,6.722254,2.445109],[-2.181045,7.977278,-8.766657,-5.243070,-8.270006,-7.900916,7.262820,-4.260667,9.516848,-5.668828,-7.224149,3.249687,9.647676],[7.004329,-8.544150,-3.079525,2.964237,3.978887,-9.840366,-5.979820,2.112118,8.976693,6.778529,8.140492,-2.504538,6.466521]]], dtype = "float64")#candidate|10841|(11, 7, 13)|const|float64
uop_10842 = relay.rsqrt(const_10841.astype('float64')) # shape=(11, 7, 13)
bop_10848 = relay.logical_and(uop_10842.astype('bool'), relay.reshape(const_10841.astype('bool'), relay.shape_of(uop_10842))) # shape=(11, 7, 13)
output = relay.Tuple([bop_10848,])
output2 = relay.Tuple([bop_10848,])
func_10852 = relay.Function([], output)
mod['func_10852'] = func_10852
mod = relay.transform.InferType()(mod)
output = func_10852()
func_10853 = relay.Function([], output)
mutated_mod['func_10853'] = func_10853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7645_call = mod.get_global_var('func_7645')
func_7647_call = mutated_mod.get_global_var('func_7647')
call_10908 = relay.TupleGetItem(func_7645_call(), 0)
call_10909 = relay.TupleGetItem(func_7647_call(), 0)
output = relay.Tuple([call_10908,])
output2 = relay.Tuple([call_10909,])
func_10963 = relay.Function([], output)
mod['func_10963'] = func_10963
mod = relay.transform.InferType()(mod)
output = func_10963()
func_10964 = relay.Function([], output)
mutated_mod['func_10964'] = func_10964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5805_call = mod.get_global_var('func_5805')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_10968 = func_5805_call()
call_10969 = func_5805_call()
output = call_10968
output2 = call_10969
func_11019 = relay.Function([], output)
mod['func_11019'] = func_11019
mod = relay.transform.InferType()(mod)
output = func_11019()
func_11020 = relay.Function([], output)
mutated_mod['func_11020'] = func_11020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9737_call = mod.get_global_var('func_9737')
func_9738_call = mutated_mod.get_global_var('func_9738')
call_11047 = relay.TupleGetItem(func_9737_call(), 0)
call_11048 = relay.TupleGetItem(func_9738_call(), 0)
output = relay.Tuple([call_11047,])
output2 = relay.Tuple([call_11048,])
func_11054 = relay.Function([], output)
mod['func_11054'] = func_11054
mod = relay.transform.InferType()(mod)
mutated_mod['func_11054'] = func_11054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11054_call = mutated_mod.get_global_var('func_11054')
call_11055 = func_11054_call()
output = call_11055
func_11056 = relay.Function([], output)
mutated_mod['func_11056'] = func_11056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10037_call = mod.get_global_var('func_10037')
func_10039_call = mutated_mod.get_global_var('func_10039')
call_11062 = relay.TupleGetItem(func_10037_call(), 0)
call_11063 = relay.TupleGetItem(func_10039_call(), 0)
func_735_call = mod.get_global_var('func_735')
func_738_call = mutated_mod.get_global_var('func_738')
var_11067 = relay.var("var_11067", dtype = "float64", shape = (154, 6))#candidate|11067|(154, 6)|var|float64
var_11068 = relay.var("var_11068", dtype = "float32", shape = (832,))#candidate|11068|(832,)|var|float32
call_11066 = relay.TupleGetItem(func_735_call(relay.reshape(var_11067.astype('float64'), [14, 11, 6]), relay.reshape(var_11068.astype('float32'), [832,]), ), 1)
call_11069 = relay.TupleGetItem(func_738_call(relay.reshape(var_11067.astype('float64'), [14, 11, 6]), relay.reshape(var_11068.astype('float32'), [832,]), ), 1)
output = relay.Tuple([call_11062,call_11066,var_11067,var_11068,])
output2 = relay.Tuple([call_11063,call_11069,var_11067,var_11068,])
func_11072 = relay.Function([var_11067,var_11068,], output)
mod['func_11072'] = func_11072
mod = relay.transform.InferType()(mod)
mutated_mod['func_11072'] = func_11072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11072_call = mutated_mod.get_global_var('func_11072')
var_11074 = relay.var("var_11074", dtype = "float64", shape = (154, 6))#candidate|11074|(154, 6)|var|float64
var_11075 = relay.var("var_11075", dtype = "float32", shape = (832,))#candidate|11075|(832,)|var|float32
call_11073 = func_11072_call(var_11074,var_11075,)
output = call_11073
func_11076 = relay.Function([var_11074,var_11075,], output)
mutated_mod['func_11076'] = func_11076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5102_call = mod.get_global_var('func_5102')
func_5104_call = mutated_mod.get_global_var('func_5104')
call_11103 = func_5102_call()
call_11104 = func_5102_call()
output = call_11103
output2 = call_11104
func_11106 = relay.Function([], output)
mod['func_11106'] = func_11106
mod = relay.transform.InferType()(mod)
mutated_mod['func_11106'] = func_11106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11106_call = mutated_mod.get_global_var('func_11106')
call_11107 = func_11106_call()
output = call_11107
func_11108 = relay.Function([], output)
mutated_mod['func_11108'] = func_11108
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11114 = relay.var("var_11114", dtype = "int64", shape = (9, 15, 14))#candidate|11114|(9, 15, 14)|var|int64
var_11115 = relay.var("var_11115", dtype = "int64", shape = (9, 15, 14))#candidate|11115|(9, 15, 14)|var|int64
bop_11116 = relay.less_equal(var_11114.astype('bool'), relay.reshape(var_11115.astype('bool'), relay.shape_of(var_11114))) # shape=(9, 15, 14)
output = bop_11116
output2 = bop_11116
func_11127 = relay.Function([var_11114,var_11115,], output)
mod['func_11127'] = func_11127
mod = relay.transform.InferType()(mod)
mutated_mod['func_11127'] = func_11127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11127_call = mutated_mod.get_global_var('func_11127')
var_11129 = relay.var("var_11129", dtype = "int64", shape = (9, 15, 14))#candidate|11129|(9, 15, 14)|var|int64
var_11130 = relay.var("var_11130", dtype = "int64", shape = (9, 15, 14))#candidate|11130|(9, 15, 14)|var|int64
call_11128 = func_11127_call(var_11129,var_11130,)
output = call_11128
func_11131 = relay.Function([var_11129,var_11130,], output)
mutated_mod['func_11131'] = func_11131
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11139 = relay.var("var_11139", dtype = "int32", shape = ())#candidate|11139|()|var|int32
var_11140 = relay.var("var_11140", dtype = "int32", shape = (8, 7, 9))#candidate|11140|(8, 7, 9)|var|int32
bop_11141 = relay.bitwise_or(var_11139.astype('int32'), var_11140.astype('int32')) # shape=(8, 7, 9)
output = relay.Tuple([bop_11141,])
output2 = relay.Tuple([bop_11141,])
func_11148 = relay.Function([var_11139,var_11140,], output)
mod['func_11148'] = func_11148
mod = relay.transform.InferType()(mod)
mutated_mod['func_11148'] = func_11148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11148_call = mutated_mod.get_global_var('func_11148')
var_11150 = relay.var("var_11150", dtype = "int32", shape = ())#candidate|11150|()|var|int32
var_11151 = relay.var("var_11151", dtype = "int32", shape = (8, 7, 9))#candidate|11151|(8, 7, 9)|var|int32
call_11149 = func_11148_call(var_11150,var_11151,)
output = call_11149
func_11152 = relay.Function([var_11150,var_11151,], output)
mutated_mod['func_11152'] = func_11152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7146_call = mod.get_global_var('func_7146')
func_7147_call = mutated_mod.get_global_var('func_7147')
call_11285 = relay.TupleGetItem(func_7146_call(), 0)
call_11286 = relay.TupleGetItem(func_7147_call(), 0)
func_1135_call = mod.get_global_var('func_1135')
func_1139_call = mutated_mod.get_global_var('func_1139')
var_11317 = relay.var("var_11317", dtype = "float64", shape = (924,))#candidate|11317|(924,)|var|float64
const_11318 = relay.const([-7.563881,1.337477,-2.114234,-0.403126,5.165832,9.114706,4.298732,2.254476,3.368735,-3.496838,8.621164,6.047376,-4.783242,5.998709,-1.243003,-7.138402,8.351944,-2.508460,0.748325,8.680629,4.497246,-0.966561,4.802827,0.794005,6.702268,-7.472574,3.546352,-3.343833,-0.704231,3.640015,-9.698298,-5.807049,8.922056,2.957432,3.338699,0.831093,6.758865,5.020790,0.404945,5.287500,-1.348081,-9.982089,-8.957728,-5.345007,-4.979083,0.115152,1.088171,-8.610318,1.986508,4.083387,-8.915071,7.489293,-2.169566,-8.021525,6.105527,-4.793031,-0.746786,1.549313,1.338546,8.325876,-9.733060,-0.756073,-4.447046,-4.625683,1.605447,-8.993790,9.220352,2.398640,-9.876728,3.246199,-0.127077,-6.899360,-8.155758,3.336440,5.739647,-4.493849,4.073036,5.559703,2.947103,2.836315,-4.702522,3.242173,1.577771,1.966075,-4.686914,4.632914,3.653416,7.432212,-3.004968,7.306282,-5.071790,7.263400,1.946704,7.356680,-4.097709,2.154267,2.696087,-9.279282,6.029614,-6.512841,8.061509,-5.709828,4.921449,-1.202042,-2.112426,7.072711,7.091820,9.076751,-4.330993,-1.799692,9.113106,0.006842,-5.684520,-7.199162,0.106145,5.704903,-0.918403,1.017218,-4.765012,3.390413,-7.360479,9.898634,6.313831,-3.224552,3.466409,2.615594,-6.582861,3.451187,-1.954252,-3.572404,5.146929,-3.249264,-7.844076,0.394255,-3.218652,5.683734,-6.676064,-9.091873,4.965763,4.732198,7.965742,-4.717208,2.317385,-4.827522,8.336833,6.597833,6.195286,-6.427678,-4.391214,-2.556712,9.040696,5.143475,-8.718226,0.939578,-0.163546,-9.459574,7.236656,4.712005,4.955925,6.241087,-1.191238,4.056423,-9.863471,0.692870,1.768005,6.310267,-0.347277,-6.917609,8.020887,-5.558949,-1.753452,3.907985,2.103329,-1.728107,0.838417,0.699591,5.613114,2.280195,8.231809,-1.089790,-0.958422,4.134100,-1.941763,0.236766,0.299027,9.410634,-1.698772,-9.587840,9.150206,-0.464273,-2.610819,-1.311336,-2.063054,2.699613,3.880389,4.785605,-3.230694,-0.583318,-8.248063,-0.764032,2.943464,-1.293703,-6.611466,-3.615292,0.078420,-0.445507,-4.675756,6.773888,-6.252157,-9.842441,-3.224621,3.999479,-2.989166,3.361956,3.349117,4.857079,6.444905,5.698036,-4.327116,4.735408,-2.422642,9.924096,1.249781,-6.084839,9.436568,5.535786,-0.744178,-4.773380,-0.252168,0.837619,9.779628,-4.437058,-2.489899,8.599974,2.698425,3.779062,-8.830595,7.090598,7.666269,-2.030371,-1.281631,8.267523,-5.328781,-7.928663,9.440265,9.128572,-0.400042,-9.126538,9.357429,1.503183,-0.306943,-8.252327,3.014565,-6.020708,1.744775,7.994684,-2.505776,-0.742530,5.449010,8.272527,5.704554,0.296030,6.829746,-0.805060,8.127077,7.018842,-5.062696,1.739300,9.670095,4.111721,-1.068950,6.670563,6.477834,7.934211,-9.529545,8.019734,6.946743,6.462560,-9.814393,3.928510,1.388987,-1.515744,2.250296,9.342043,3.404154,4.056452,5.463967,3.609211,9.597254,0.895770,2.223246,7.983647,-5.475942,4.800926,-5.736671,-6.513488,-4.700108,-0.805095,-5.306505,-8.448830,-4.458509,4.304876,-1.685349,-0.953505,-1.908589,3.255383,-3.996485,-5.928757,2.649769,-9.070443,4.844597,7.774827,0.418175,2.310789,8.503079,4.365617,9.155030,-3.852897,7.385010,3.199478,-6.264856,-2.975417,5.793734,5.412741,-5.972868,5.423361,0.117628,9.836940,-8.599540,-5.774218,2.347717,0.190066,0.858481,-3.318078,-3.800973,-2.247827,0.386271,4.855427,6.934547,7.500463,-9.207497,0.921562,-7.400111,-4.454026,4.909663,-3.141873,9.664822,-2.572384,7.555624,7.196689,-5.319908,4.588077,-8.381876,2.060029,1.076675,-6.965863,8.359452,6.267585,-0.496457,-0.293716,8.822990,-9.848518,-2.434878,2.900320,-8.302239,4.342932,-2.996034,-8.972414,1.579176,-0.585020,-0.327050,8.015815,9.000169,9.769718,-7.444470,1.455358,7.015382,-5.945857,-1.673663,2.270928,5.277537,-5.055635,2.092055,-0.508043,-9.036722,-3.700086,6.229504,-3.467325,-6.537181,7.652946,9.695040,-4.295420,-3.300423,-5.432755,-6.014927,7.497576,-3.776911,0.271000,-5.628539,-9.584928,6.457118,-7.290494,-4.445742,7.021045,-5.460834,-0.493975,7.503566,-2.057874,5.480700,0.442876,3.262262,0.354485,-9.500843,5.057714,7.353224,3.024669,-5.770834,4.760348,-8.039708,-9.895719,9.356082,-0.062904,9.021296,9.109656,0.203697,6.976931,1.489137,-4.953840,4.625815,2.217159,0.282571,0.161405,-3.724749,0.463260,5.238677,6.318813,-7.061137,-4.770198,4.743995,-6.585294,-3.731061,0.199803,8.633328,5.183554,0.934810,1.375944,1.066947,0.675742,9.161001,-0.180081,-1.658325,-6.001566,4.274658,-7.884559,-8.039778,8.462860,-6.804288,-2.730366,-6.825679,1.593813,-3.200152,-5.120125,9.599002,0.314755,-1.566337,-9.344549,-4.806453,5.151245,6.680476,-0.028663,3.554034,-0.745507,-9.900700,1.112863,-6.356748,-0.197370,7.952175,-8.285960,-6.753454,5.884897,6.969554,3.991033,-6.457194,5.697352,5.181370,3.152521,4.984591,-1.523305,7.609467,-2.573723,-3.575476,-6.933985,3.485095,8.086726,5.902919,6.083000,-2.459492,-5.062408,2.798657,-4.903910,8.200463,9.679416,6.327124,-4.990019,8.540559,-3.225748,7.032673,1.596533,8.556698,7.320210,-7.950385,3.594399,9.771774,8.362034,0.896854,5.193950,-9.959029,1.381267,5.367281,-1.346867,-8.550644,-8.094618,9.186872,-9.656901,-6.938880,4.191028,-6.037882,0.553748,-0.424729,3.414621,-7.059035,-6.424847,2.209968,-6.023929,0.040260,-0.375343,3.613622,-7.290162,-3.436255,1.155365,-9.859711,0.590634,2.958636,-1.474361,-8.000772,0.967981,5.096613,7.281991,7.098213,0.299462,-6.660048,-0.049622,-1.873325,-9.463610,-7.006881,-9.274560,1.120371,5.589880,-4.122581,-7.321066,7.770469,-1.556918,-2.193717,-2.938984,2.772969,-9.892981,7.355056,-7.583327,0.138330,-2.707676,-3.624899,-5.682556,0.515941,8.121186,-9.759679,-8.287400,4.204416,-2.251609,-4.119485,-2.263737,-3.735149,8.206285,3.089322,9.999915,-7.723580,-2.121043,-2.671572,-4.778153,3.201346,-0.688032,-3.724312,2.754950,1.362718,2.590873,-1.490931,5.612522,-0.733225,-9.030031,-7.878478,8.802909,-8.300608,-2.838809,-5.855256,-6.119302,-5.235419,3.849109,8.876596,-9.127392,-2.893631,-7.616574,3.209544,8.490459,-1.171527,-4.032201,-6.944573,8.520626,6.238282,8.252458,4.319078,9.459182,-1.772235,-6.405090,-8.736441,-0.873453,-4.496361,5.374142,6.163781,1.972821,7.071756,-9.409935,9.219867,-6.828584,1.947457,7.248792,9.289797,-9.136077,5.368362,5.682481,-4.651395,4.571996,-5.876681,-9.623324,7.678625,2.765302,9.887225,-6.268146,1.757836,-4.169454,1.392587,2.482636,-5.971309,-7.510925,-3.478861,6.165311,-3.042687,3.218010,-2.123320,-7.050105,-8.537668,-3.172481,9.983936,-5.382511,0.236686,-2.662978,-2.147982,3.527279,3.928078,2.692599,4.674029,-9.442855,3.931926,-0.914432,-4.147191,9.373098,-4.710864,-4.349156,9.056963,-5.846126,5.018542,1.695304,3.921707,0.023017,-5.408649,-1.764932,2.452295,6.858770,1.654856,-7.284452,-1.205614,-5.211396,8.522719,9.037833,3.095642,9.129079,-8.221099,5.304541,8.822187,-9.540450,3.834372,2.526249,-9.454683,8.102002,-1.565013,5.900812,7.203961,1.922739,-5.092502,8.480236,7.167261,9.297114,4.016123,5.130852,4.439509,7.669901,-3.129708,7.611552,0.835539,-3.951593,3.562328,8.134346,0.826828,6.952480,3.790935,-1.974037,-5.885242,-7.343496,-3.542564,-2.593173,8.001229,-0.686549,2.623476,-5.791005,-9.007447,-1.597681,-2.136031,-2.555663,2.455206,-7.659576,7.562472,3.836947,-0.547996,1.462319,0.820407,-3.584549,9.821585,-4.494804,-0.797391,-2.176349,-3.563556,-4.713547,-3.307586,-4.192980,8.730943,-8.625939,5.500908,-4.816943,4.898685,-7.576499,6.008263,5.443341,3.463700,1.203396,3.905103,-0.413653,0.206563,-4.775402,-4.930554,6.861582,6.922794,-8.114168,7.651675,-4.331266,-0.379355,9.880083,8.136048,3.925672,-6.481635,4.208695,-3.726792,2.740702,-8.377876,7.991098,9.532802,-3.936834,-6.679261,4.130929,0.893316,-9.536970,6.041500,-8.957338,-2.686190,2.053638,-7.738930,-5.211042,4.330437,-4.747199,-6.482262,-7.323615,-9.999094,-5.859291,2.829625,-1.518057,-2.162177,-2.817581,-1.454817,-4.214945,-5.532943,-2.526747,-9.551206,9.902094,-6.470681,-8.332657,7.164681,-6.302314,3.594903,-4.883714,7.007938,-9.935517,3.634510,8.303101,5.698708,9.290477,1.279475,-7.850040,-0.319678,5.185117,-6.592330,7.356590,-5.228170,3.803915,0.474117,-9.428871], dtype = "float32")#candidate|11318|(832,)|const|float32
call_11316 = relay.TupleGetItem(func_1135_call(relay.reshape(var_11317.astype('float64'), [924,]), relay.reshape(const_11318.astype('float32'), [832,]), ), 4)
call_11319 = relay.TupleGetItem(func_1139_call(relay.reshape(var_11317.astype('float64'), [924,]), relay.reshape(const_11318.astype('float32'), [832,]), ), 4)
func_6632_call = mod.get_global_var('func_6632')
func_6634_call = mutated_mod.get_global_var('func_6634')
call_11329 = func_6632_call()
call_11330 = func_6632_call()
output = relay.Tuple([call_11285,call_11316,var_11317,const_11318,call_11329,])
output2 = relay.Tuple([call_11286,call_11319,var_11317,const_11318,call_11330,])
func_11334 = relay.Function([var_11317,], output)
mod['func_11334'] = func_11334
mod = relay.transform.InferType()(mod)
var_11335 = relay.var("var_11335", dtype = "float64", shape = (924,))#candidate|11335|(924,)|var|float64
output = func_11334(var_11335)
func_11336 = relay.Function([var_11335], output)
mutated_mod['func_11336'] = func_11336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9737_call = mod.get_global_var('func_9737')
func_9738_call = mutated_mod.get_global_var('func_9738')
call_11408 = relay.TupleGetItem(func_9737_call(), 0)
call_11409 = relay.TupleGetItem(func_9738_call(), 0)
func_2930_call = mod.get_global_var('func_2930')
func_2934_call = mutated_mod.get_global_var('func_2934')
const_11412 = relay.const([[-4.296549,4.903206,-0.351274,7.637722],[9.866489,-3.630627,4.521718,1.930150],[-0.280449,-2.457625,-5.240469,-0.225499],[6.385481,-0.074591,6.343712,4.459799],[7.979073,6.963187,5.725424,1.425065],[-6.734137,-2.594338,1.165867,-8.980073],[4.020251,-5.159781,-5.473587,-2.543221],[-7.050241,4.666773,8.268128,3.744571],[6.921831,-0.717616,4.462286,-1.995952],[9.168133,-1.451608,-1.096789,5.324028],[7.875014,-0.895358,-8.396336,1.605974],[2.619467,-9.795217,-3.977997,6.503622],[-3.514989,-4.420033,-5.744217,6.299984],[-3.257974,-1.539962,9.481000,-3.720846],[9.548294,-4.428393,5.134025,5.765190],[3.421985,-2.140158,0.144433,7.670345],[4.359542,-3.947688,-0.046562,-1.498143],[1.728773,-1.960459,-2.342759,4.668710],[1.269932,5.867437,9.058635,5.540614],[-8.828037,-6.890400,6.085227,6.397615],[-9.998148,-6.153566,-9.623069,1.360573],[3.619591,-3.028272,-2.356761,-4.466427],[5.501707,3.891434,-8.636995,0.207025],[-8.752820,-2.600143,-8.310047,-2.191104],[0.812353,2.115071,3.644610,0.265528],[-6.194302,-0.749806,0.656769,-2.042555],[-0.212556,-0.915285,-1.206561,7.208239],[6.490836,4.417046,-6.547812,-3.186091],[-9.339305,8.201894,-5.173811,2.449299],[-6.158356,-2.503663,-3.656462,-0.252950],[-8.504334,3.861883,3.848395,5.323443],[-2.749125,-7.991220,-3.921799,0.229098],[-5.259198,0.623231,9.612264,-0.090086],[-5.101871,-6.476613,9.152220,-7.617266],[8.310958,5.683552,-6.632573,9.392278],[8.953202,4.984542,5.551490,-5.297399],[9.827165,-2.144117,-9.728641,-2.756802],[5.512939,4.156224,-8.320578,-4.892319],[8.396690,-0.058968,-1.006171,7.514203],[3.623673,-2.970956,6.308359,-2.595768],[-9.998708,9.756824,9.580228,3.514768],[-9.287377,-8.541249,-2.412554,-7.854153],[-8.072807,-6.729458,8.425217,-2.805172],[-2.853774,0.760851,9.034983,2.615968],[-1.744598,8.783106,-2.416582,1.329771],[1.797430,0.541668,-4.429120,-1.421526],[-9.810085,-5.853953,-1.873623,-4.826257],[9.790433,-1.043803,-1.080711,-2.342715],[-9.351732,-9.610682,-5.489156,-2.295984],[6.940608,-7.700710,7.980155,-8.095791],[5.890458,3.071344,7.234815,-5.104513],[6.037108,-3.249672,-1.182742,5.263767],[-3.083535,-2.023652,1.660596,-4.105763],[-7.375235,-8.138766,1.152473,-8.034863],[4.241291,-9.339956,8.334524,2.767665],[2.389900,-5.431571,-1.261085,9.798104],[-9.499636,-2.306259,-6.242449,-9.359584],[0.012847,-2.915559,-1.902471,9.798524],[6.376386,-2.512438,-9.856372,4.538712],[2.298686,-8.358945,3.898457,-8.009185],[7.186654,9.472559,-3.292612,-3.469182],[5.146513,-6.755850,3.182116,8.236481],[-5.393826,-9.273060,-1.737355,-7.804925],[2.684390,4.993368,-9.533996,-1.971022],[-8.019758,5.203264,-7.429815,-1.976383],[6.535716,2.299939,-9.002996,0.505739],[-6.658801,-1.772313,8.894656,4.198592],[8.572555,-9.658526,-7.296699,8.549281],[-5.492296,5.361989,-5.098376,-0.991306],[6.466692,8.503883,8.633904,-3.446855],[-5.702004,-6.275002,8.517553,-7.353013],[-1.851601,8.408355,-4.635991,-6.729566],[5.558309,7.541450,1.160198,2.438124],[9.462459,4.535913,7.151474,-2.571196],[-0.417096,-8.397520,-1.127250,-5.795944],[4.872140,-8.026209,-1.772792,-5.795329],[-7.963522,1.385790,-9.758358,-6.629258],[0.769415,-3.276218,4.846989,-9.769923],[3.342585,-3.455984,-1.664217,-9.764752],[-0.850670,7.213122,0.190757,-0.015407],[2.989366,-6.587331,6.790492,6.495860],[-2.633809,7.114931,-6.417577,1.203478],[-3.561728,-9.924187,-3.078225,-1.757499],[8.735632,6.948813,-0.925075,-6.174308],[0.277423,2.333137,-7.990958,-5.127660],[-2.346636,-6.895297,0.799173,-3.922851],[0.758579,-9.575884,6.358244,-7.414096],[-6.018008,-5.843826,-6.565397,-3.477505],[2.690619,-8.060459,-1.736835,-5.790812],[-2.034637,-2.374736,-3.296879,-7.924804],[1.486814,5.024947,9.613451,5.156678],[9.144958,-3.197859,-6.650940,4.384881],[-3.258123,0.832093,-6.961317,7.186282],[0.938264,0.418377,-9.226452,2.622902],[-3.521870,5.313834,5.689421,-9.955920],[-4.359071,-9.610924,5.489959,-8.011460],[1.735620,8.687788,3.481998,-7.423615],[-7.221537,-7.126914,6.466222,-8.856350],[-7.849696,-7.187729,-1.001039,-8.306511],[6.287370,5.741466,-3.861205,1.532164],[-0.950959,-9.353975,2.205789,-8.170587],[-1.962132,4.294874,-0.853852,5.679271],[1.106202,-7.817239,-9.247152,-9.711012],[4.630634,3.927117,2.258989,9.690791],[7.383560,1.427340,2.753107,-3.041439],[-0.053640,3.697999,3.828455,9.720426],[-7.654295,-4.644604,-2.604666,7.653902],[-4.447373,1.919044,1.328292,3.510751],[-7.717840,9.149566,-1.349640,4.515891],[3.205339,-2.549168,-8.538152,3.024073],[9.456098,9.300901,-7.298520,-9.789610],[0.860268,-9.227997,-3.747868,0.755737],[-6.582581,-4.344111,-2.216021,2.010421],[6.617639,-0.215232,5.446269,-5.536947],[6.517803,-1.963143,-4.072909,6.549338],[8.475577,-6.526638,8.658871,-1.122589],[6.064913,4.155463,5.862628,1.557856],[-0.055986,-4.450316,-1.103983,-9.251479],[-6.595460,7.476705,4.082903,7.038060],[7.054559,6.361198,5.753579,-5.058994],[-2.312740,0.503511,6.237183,-7.505253],[-7.134946,6.515105,-7.161994,0.865056],[7.289975,2.529232,2.263067,4.163112],[8.764298,1.148519,-4.005561,9.565375],[0.587308,-1.349767,4.611625,-4.311243],[8.532781,-5.275414,-4.412879,6.978695],[5.273534,-7.919705,0.210327,6.903627],[-0.550475,4.806044,-2.164149,-1.622543],[2.436115,-5.651818,9.985873,1.383484],[2.261669,-8.971114,5.326478,2.025109],[3.577424,5.610479,7.227722,8.231704],[7.959460,-7.423560,7.578520,-2.235457],[-5.807388,2.952408,1.487004,-0.680414],[8.709365,-6.358162,-6.531105,4.721867],[-2.792886,-8.361924,1.799565,1.995366],[0.327515,-4.463788,-5.983888,5.596301],[-1.884193,5.352482,8.601413,-6.154191],[-1.164378,3.871545,-5.739258,-5.788031],[1.237851,-9.068020,-9.308204,-9.198171],[0.472356,-0.073844,6.421426,-4.700393],[5.053367,3.784111,-7.587238,9.785035],[4.569003,0.062325,7.782402,-8.453260],[4.403676,4.531853,-5.574766,2.601432],[-5.861191,-8.847897,7.925844,5.216429],[-3.877342,-2.361336,-2.972259,7.334215],[-8.421967,0.273768,1.450041,8.625575],[-6.599955,-5.867253,-4.590941,7.483627],[-9.333527,-0.031543,-0.751508,-8.420865],[-9.358725,0.904287,-3.348294,-7.927540],[-3.080693,-3.447154,2.544203,-5.041884],[-6.101801,3.372389,-4.264045,4.712490],[-1.855232,-1.119777,-5.241484,2.196916],[9.229477,3.088350,6.513554,9.473931],[-3.040986,0.077808,7.528698,0.503607],[8.173444,-1.347690,1.226822,-2.393076],[0.373040,6.994722,7.187658,-0.310372],[0.046683,-8.434692,-0.257106,-4.402486],[7.398520,-8.024041,7.702379,-1.058351],[-5.558386,-6.768529,-7.714239,3.385007],[-4.999786,3.626438,7.133481,-9.653496],[-1.886329,-7.039970,-4.168638,2.286497],[-6.585283,-2.281541,1.748273,-2.630090],[0.848954,-1.181365,7.764486,2.839859],[-3.498278,9.351826,9.160716,-5.243807],[-5.276516,-5.569083,-1.275015,-8.290418],[3.746358,-6.771788,2.510649,6.247339],[-4.008382,3.451871,8.551443,8.400741],[3.300324,-9.069489,-2.788668,-6.776219],[7.694221,-4.506665,-6.410896,-5.210903],[8.506805,3.975985,-0.713915,-9.919582],[-1.429308,-2.644508,-6.396906,7.870256],[4.762403,-9.247872,-1.404361,-3.299785],[2.355003,5.151342,-7.826404,-8.657460],[5.523888,-6.470887,-8.843531,-0.408114],[-9.202434,-7.167442,-1.166113,0.410991],[6.163171,1.501793,-4.986675,1.452168],[-7.457042,-8.454549,2.656837,8.670611],[-0.812745,-6.337740,-4.628481,6.931491],[1.989964,5.668483,9.314047,3.275461],[9.312660,-6.599255,7.184023,2.020655],[7.058245,-9.721146,-7.711927,6.098653],[9.576568,1.404590,-5.200572,1.460419],[1.929606,6.328553,5.375520,7.015678],[2.998985,-9.771682,-3.683288,1.178518],[2.096847,-6.165772,5.993234,-5.869640],[2.983452,-3.217090,-7.456023,1.193894],[-5.667439,-7.008413,-5.192374,-2.295752],[-9.658765,-9.618765,3.575948,-9.985785],[0.523680,-6.993585,-0.184274,2.521938],[5.699338,3.540006,4.856033,2.486313],[5.876934,2.376921,8.108686,5.597116],[4.129656,-5.386377,5.422067,0.176545],[2.765232,4.196229,5.633856,7.777523],[-2.249648,-6.391691,-6.664871,-6.828629],[-4.000835,3.545629,5.641855,4.681524],[-3.132671,5.550882,-0.339530,-1.233750],[1.751352,8.813234,-1.894496,8.001570],[5.029419,0.253401,8.595982,4.539305],[4.312682,3.863887,5.363081,2.326877],[9.961871,-4.529441,-4.507091,7.750679],[-9.345692,-1.559901,-0.624873,-9.220235],[0.353890,9.238316,7.724159,-5.962443],[4.135055,0.517668,-4.055115,-2.898793],[-7.327813,1.740895,7.229057,-7.883160],[2.584793,-4.157247,-5.876239,6.788505],[-0.816197,-3.869874,2.973351,3.673525],[-3.984208,-7.259411,9.094649,-0.994814],[7.683123,-7.509247,1.293651,-7.057997],[1.367008,-5.394131,1.373494,-9.673339],[-3.245666,6.849274,5.216288,-5.430052],[-1.596249,5.143952,8.758244,4.739266],[6.524253,2.124008,-0.780222,-1.876744],[-4.609745,3.108627,-0.014387,-1.766390],[-9.716987,9.688249,-4.399996,6.075613],[-4.822201,-8.942454,4.448801,-3.228957],[-6.187636,7.868135,2.976591,-9.659130],[-2.336822,-9.142709,7.175033,8.419680],[-9.044009,-3.289202,-3.746154,7.502881],[-9.117600,-1.225877,0.378941,-8.651119],[-2.791023,-3.298171,4.283420,1.946088],[-8.709522,1.307218,-8.362260,1.583281],[1.818892,9.603461,-2.456109,-8.531879],[1.781476,-0.315852,6.275184,-6.127690],[-7.881058,4.100684,5.839206,1.790745],[-8.977593,-2.586502,8.763966,-4.142492],[3.905358,-6.872891,-3.039177,-5.408872],[2.522929,6.550626,9.651291,-8.625727],[-3.346331,-2.787536,-8.496743,-6.427434],[-0.691530,-2.977273,-1.995078,-0.664049],[-9.406788,9.117696,1.916085,-5.461479],[-1.103207,4.160501,8.902329,6.472892],[9.775362,-4.430483,2.157287,6.472825],[3.546619,9.760002,-0.156422,1.058371],[-2.681825,6.949967,-9.969597,-2.811508],[5.534255,-2.146213,8.656740,8.353356],[8.610185,0.208437,-1.471976,-2.367879],[-5.913844,0.315867,8.751626,5.737585],[-1.202767,9.107085,5.095688,9.197974],[8.187943,2.188132,-4.940575,-4.468473],[-8.825928,-8.477593,-1.844243,-1.895558],[1.060294,3.554185,-2.730846,-5.277304],[3.174476,7.648336,-3.538159,-0.770481],[2.157591,-7.625665,-1.702159,3.371265],[-8.309233,0.591962,5.012022,5.083867],[1.545069,4.020047,-2.341672,-0.888945],[-9.099863,-3.805683,2.503291,-4.984932],[-1.825706,-8.836546,1.859094,-2.041484],[0.147601,-1.773324,9.003686,4.861504],[-1.518085,3.628790,4.302079,6.007845],[5.663016,-3.408072,-7.239725,2.103889],[3.495893,2.859797,-6.654932,0.429304],[9.156811,-3.384262,6.402729,4.765167],[-7.244720,-8.279782,4.300724,8.248204],[9.267234,9.128321,4.373968,5.777852],[-4.536911,9.376397,-5.292954,-2.149106],[2.074493,-1.468590,7.343928,-4.365548],[-9.721552,5.451183,-2.535241,2.909922],[-0.145386,0.044963,2.169931,-6.388487],[6.572436,-3.378097,-3.922964,9.764406],[3.589974,0.872405,-3.802243,9.609251],[-0.104633,-2.054164,9.966512,5.168006],[-9.169495,7.193684,5.040214,9.753154],[-8.764584,-9.436759,-4.969123,-6.354962],[9.714391,-8.991545,2.179312,6.201937],[-9.409276,4.719978,6.330524,1.914818],[6.908700,4.840427,3.662486,-6.951132],[9.621714,-7.774187,-2.723740,4.707478],[-1.535291,2.549400,2.328454,-9.526530],[-7.162207,-4.216148,-4.593470,0.800947],[-1.903179,-9.272213,4.762117,3.615257],[1.026928,9.302635,-9.960125,4.012254],[-0.089173,6.688360,7.915167,-5.460346],[1.880410,6.297546,-4.342456,6.728767],[-9.571957,-8.065420,-0.351930,-4.805166],[-2.610118,-2.153267,-9.288890,9.641442],[-1.909453,8.003996,-4.599433,-8.984113],[-9.052815,6.579468,-2.130529,3.030653],[-2.695000,8.464782,-5.361105,-1.203265],[0.220998,0.241852,6.668980,-7.686417],[1.024703,2.167828,0.130322,7.718602]], dtype = "float64")#candidate|11412|(280, 4)|const|float64
var_11413 = relay.var("var_11413", dtype = "bool", shape = (60,))#candidate|11413|(60,)|var|bool
var_11414 = relay.var("var_11414", dtype = "float64", shape = (120,))#candidate|11414|(120,)|var|float64
call_11411 = relay.TupleGetItem(func_2930_call(relay.reshape(const_11412.astype('float64'), [14, 8, 10]), relay.reshape(var_11413.astype('bool'), [30, 2]), relay.reshape(var_11414.astype('float64'), [120,]), ), 2)
call_11415 = relay.TupleGetItem(func_2934_call(relay.reshape(const_11412.astype('float64'), [14, 8, 10]), relay.reshape(var_11413.astype('bool'), [30, 2]), relay.reshape(var_11414.astype('float64'), [120,]), ), 2)
uop_11416 = relay.cosh(const_11412.astype('float64')) # shape=(280, 4)
bop_11419 = relay.bitwise_and(uop_11416.astype('uint8'), relay.reshape(const_11412.astype('uint8'), relay.shape_of(uop_11416))) # shape=(280, 4)
uop_11423 = relay.atanh(bop_11419.astype('float64')) # shape=(280, 4)
output = relay.Tuple([call_11408,call_11411,var_11413,var_11414,uop_11423,])
output2 = relay.Tuple([call_11409,call_11415,var_11413,var_11414,uop_11423,])
F = relay.Function([var_11413,var_11414,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11413,var_11414,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_13971() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %0 = @func_13382() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1 = @func_4031() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %2 = %0.0;
  %3 = %1.0;
  (%2, %3)
}

def @func_12958() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %4 = @func_5661() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %5 = @func_10225() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %6 = %4.0;
  %7 = %5.0;
  (%6, %7)
}

def @func_8873() -> (Tensor[(4, 4, 2), int8],) {
  %8 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %9 = %8.0;
  (%9,)
}

def @func_14700() -> (Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %10 = @func_9858() /* ty=(Tensor[(144), uint16], Tensor[(4, 4, 2), int8]) */;
  %11 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %12 = %10.0;
  %13 = @func_10774() /* ty=Tensor[(4, 4, 2), int8] */;
  %14 = %11.0;
  (%12, %13, %14)
}

def @func_9449() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %15 = @func_8459() /* ty=Tensor[(4, 4, 2), int8] */;
  %16 = @func_2806() /* ty=Tensor[(4, 4, 2), int8] */;
  (%15, %16)
}

def @func_15915() -> (Tensor[(4, 4, 2), int8], Tensor[(15, 12, 11), int16], Tensor[(1, 1980), float64]) {
  %17 = @func_4379() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 1980), float64] */, dtype="float64") /* ty=Tensor[(1, 1980), float64] */;
  %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 1980), float64] */, dtype="float64") /* ty=Tensor[(1, 1980), float64] */;
  %20 = reshape(%18, newshape=[15, 12, 11]) /* ty=Tensor[(15, 12, 11), float64] */;
  %21 = reshape(%19, newshape=[15, 12, 11]) /* ty=Tensor[(15, 12, 11), float64] */;
  %22 = @func_14219(%20, %21) /* ty=(Tensor[(15, 12, 11), int16],) */;
  %23 = %17.0;
  %24 = %22.0;
  (%23, %24, meta[relay.Constant][0] /* ty=Tensor[(1, 1980), float64] */)
}

def @func_16807() -> (Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8]) {
  %25 = @func_9096() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
  %26 = @func_2397() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %27 = %25.1;
  %28 = %26.1;
  (%27, %28)
}

def @func_13149() -> (Tensor[(4, 4, 2), bool], Tensor[(10, 14, 7), uint16]) {
  %29 = @func_5762() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
  %30 = @func_6744() /* ty=Tensor[(4, 4, 2), bool] */;
  %31 = %29.1;
  (%30, %31)
}

def @func_7836() -> Tensor[(4, 4, 2), int8] {
  %32 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %32.2
}

def @func_14091() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %33 = @func_4031() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %34 = %33.3;
  %35 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
  (%34, %35)
}

def @func_16255(%var_16228: Tensor[(980), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), float64], Tensor[(6, 44), bool], Tensor[(4, 4, 2), int8], Tensor[(980, 2), uint8], Tensor[(1960), uint16]) {
  %36 = @func_14978() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %37 = cast(%var_16228, dtype="float64") /* ty=Tensor[(980), float64] */;
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 44), bool] */, dtype="bool") /* ty=Tensor[(6, 44), bool] */;
  %39 = reshape(%37, newshape=[980]) /* ty=Tensor[(980), float64] */;
  %40 = reshape(%38, newshape=[264]) /* ty=Tensor[(264), bool] */;
  %41 = @func_15482(%39, %40) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(264), bool], Tensor[(264), bool], Tensor[(4, 4, 2), int8], Tensor[(980), float64]) */;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(1960), uint16] */, dtype="uint16") /* ty=Tensor[(1960), uint16] */;
  %43 = reshape(%42, newshape=[980, 2]) /* ty=Tensor[(980, 2), uint16] */;
  %44 = @func_7553(%43) /* ty=(Tensor[(980, 2), uint8],) */;
  %45 = %36.0;
  %46 = %41.5;
  %47 = @func_3523() /* ty=Tensor[(4, 4, 2), int8] */;
  %48 = %44.0;
  (%45, %46, %var_16228, meta[relay.Constant][1] /* ty=Tensor[(6, 44), bool] */, %47, %48, meta[relay.Constant][2] /* ty=Tensor[(1960), uint16] */)
}

def @func_15559() -> (Tensor[(4, 4, 2), int8],) {
  %49 = @func_8677() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %50 = %49.0;
  (%50,)
}

def @func_7510() -> Tensor[(4, 4, 2), int8] {
  %51 = @func_4487() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), bool]) */;
  %51.0
}

def @func_15160() -> (Tensor[(4, 4, 2), int8], Tensor[(10, 8, 14), float32], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %52 = @func_14978() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %53 = @func_4031() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %54 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %55 = @func_10007() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %56 = @func_7510() /* ty=Tensor[(4, 4, 2), int8] */;
  %57 = @func_13780() /* ty=Tensor[(10, 8, 14), float32] */;
  %58 = %52.0;
  %59 = @func_7928() /* ty=Tensor[(980), uint16] */;
  %60 = %53.5;
  %61 = %54.0;
  %62 = %55.0;
  (%56, %57, %58, %59, %60, %61, %62)
}

def @func_9329(%var_9299: Tensor[(980, 14), int32], %var_9324: Tensor[(980, 14), float64]) -> (Tensor[(980, 14), bool], Tensor[(980, 14), float32], Tensor[(980, 14), uint32]) {
  %63 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
  %64 = cast(%63, dtype="bool") /* ty=Tensor[(980, ?), bool] */;
  %65 = cast(%var_9299, dtype="bool") /* ty=Tensor[(980, 14), bool] */;
  %66 = cast(%var_9299, dtype="float32") /* ty=Tensor[(980, 14), float32] */;
  %67 = cast(%var_9299, dtype="float64") /* ty=Tensor[(980, 14), float64] */;
  %68 = atanh(%67) /* ty=Tensor[(980, 14), float64] */;
  %69 = cast(%var_9324, dtype="uint32") /* ty=Tensor[(980, 14), uint32] */;
  %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(2), int32] */;
  %71 = cast(%68, dtype="uint32") /* ty=Tensor[(980, 14), uint32] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %73 = not_equal(%64, %65) /* ty=Tensor[(980, 14), bool] */;
  %74 = cosh(%66) /* ty=Tensor[(980, 14), float32] */;
  %75 = bitwise_or(%71, %72) /* ty=Tensor[(980, 14), uint32] */;
  (%73, %74, %75)
}

def @func_13197(%var_13188: Tensor[(9, 10, 2), int16]) -> (Tensor[(9, 10, 2), int16],) {
  %76 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 1, 2), int16] */, dtype="int16") /* ty=Tensor[(9, 1, 2), int16] */;
  %77 = cast(%var_13188, dtype="int16") /* ty=Tensor[(9, 10, 2), int16] */;
  %78 = bitwise_and(%76, %77) /* ty=Tensor[(9, 10, 2), int16] */;
  (%78,)
}

def @func_10450() -> Tensor[(980), uint16] {
  %79 = @func_5145() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16]) */;
  %79.1
}

def @func_15051() -> Tensor[(4, 4, 2), int8] {
  %80 = @func_14529() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %80.1
}

def @func_11863() -> (Tensor[(4, 4, 2), bool],) {
  %81 = @func_6744() /* ty=Tensor[(4, 4, 2), bool] */;
  (%81,)
}

def @func_4333() -> Tensor[(980, ?), int32] {
  %82 = @func_3852() /* ty=(Tensor[(980, 1), uint16],) */;
  %83 = %82.0;
  %84 = cast(%83, dtype="float32") /* ty=Tensor[(980, 1), float32] */;
  %85 = atanh(%84) /* ty=Tensor[(980, 1), float32] */;
  %86 = cast(%83, dtype="int32") /* ty=Tensor[(980, 1), int32] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(2), int32] */;
  %88 = cast(%85, dtype="int32") /* ty=Tensor[(980, 1), int32] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  maximum(%88, %89) /* ty=Tensor[(980, ?), int32] */
}

def @func_13382() -> (Tensor[(4, 4, 2), int8],) {
  %90 = @func_2397() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %91 = %90.1;
  (%91,)
}

def @func_9523(%var_9477: Tensor[(720), uint32], %var_9518: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], uint32, Tensor[(720), uint32], Tensor[(4, 4, 2), int8], Tensor[(660), float32]) {
  %92 = cast(meta[relay.Constant][4] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %93 = cast(%var_9477, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %94 = reshape(%92, newshape=[]) /* ty=uint32 */;
  %95 = reshape(%93, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), uint32] */;
  %96 = @func_2972(%94, %95) /* ty=(Tensor[(6, 8, 15), bool], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %97 = cast(%var_9518, dtype="float32") /* ty=Tensor[(660), float32] */;
  %98 = reshape(%97, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %99 = @func_7792(%98) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) */;
  %100 = @func_4279() /* ty=Tensor[(4, 4, 2), int8] */;
  %101 = %96.1;
  %102 = %99.0;
  (%100, %101, meta[relay.Constant][4] /* ty=uint32 */, %var_9477, %102, %var_9518)
}

def @func_11967(%var_11958: Tensor[(980), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(264), bool], Tensor[(980), float64], Tensor[(264), bool]) {
  %103 = cast(%var_11958, dtype="float64") /* ty=Tensor[(980), float64] */;
  %104 = cast(%var_11958, dtype="float64") /* ty=Tensor[(980), float64] */;
  %105 = cast(meta[relay.Constant][5] /* ty=Tensor[(264), bool] */, dtype="bool") /* ty=Tensor[(264), bool] */;
  %106 = reshape(%103, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
  %107 = reshape(%104, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
  %108 = reshape(%105, newshape=[264]) /* ty=Tensor[(264), bool] */;
  %109 = @func_6604(%106, %107, %108) /* ty=(Tensor[(490, 2), uint64], Tensor[(490, 2), uint8], Tensor[(490, 2), float64], Tensor[(2, 11, 12), float64], Tensor[(264), bool]) */;
  %110 = @func_4856() /* ty=Tensor[(4, 4, 2), int8] */;
  %111 = @func_11645() /* ty=Tensor[(4, 4, 2), int8] */;
  %112 = %109.4;
  (%110, %111, %112, %var_11958, meta[relay.Constant][5] /* ty=Tensor[(264), bool] */)
}

def @func_12726(%var_12707: Tensor[(16, 7, 3), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), bool], Tensor[(4, 4, 2), int8], Tensor[(980, 8), uint8], Tensor[(7840), int32], Tensor[(16, 7, 3), float32]) {
  %113 = @func_6301() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %114 = @func_3064() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %115 = %114.0;
  %116 = cast(%var_12707, dtype="bool") /* ty=Tensor[(16, 7, 3), bool] */;
  %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%115, dtype="bool") /* ty=Tensor[(16, 7, 3), bool] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %120 = cast(meta[relay.Constant][6] /* ty=Tensor[(7840), int32] */, dtype="int32") /* ty=Tensor[(7840), int32] */;
  %121 = reshape(%120, newshape=[980, 8]) /* ty=Tensor[(980, 8), int32] */;
  %122 = @func_12247(%121) /* ty=(Tensor[(980, 8), uint8], Tensor[(980, 8), bool], Tensor[(4, 4, 2), int8]) */;
  %123 = cast(%115, dtype="float32") /* ty=Tensor[(16, 7, 3), float32] */;
  %124 = %113.0;
  %125 = less(%118, %119) /* ty=Tensor[(16, 7, 3), bool] */;
  %126 = @func_7356() /* ty=Tensor[(4, 4, 2), int8] */;
  %127 = %122.0;
  %128 = asinh(%123) /* ty=Tensor[(16, 7, 3), float32] */;
  (%124, %125, %126, %127, meta[relay.Constant][6] /* ty=Tensor[(7840), int32] */, %128)
}

def @func_11231() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) {
  %129 = @func_10635() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %130 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %131 = @func_6191() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %132 = %129.1;
  %133 = %130.1;
  %134 = %131.0;
  (%132, %133, %134)
}

def @func_7620() -> Tensor[(4, 4, 2), int8] {
  @func_7356() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_8125() -> (Tensor[(4, 4, 2), int8],) {
  %135 = @func_2771() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %136 = %135.0;
  (%136,)
}

def @func_2719() -> (Tensor[(980), uint16],) {
  %137 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %138 = %137.3;
  (%138,)
}

def @func_11407(%var_11350: Tensor[(660), float32], %var_11363: Tensor[(35, 1), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), bool], Tensor[(35), bool], Tensor[(35, 660), float32]) {
  %139 = @func_5661() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %140 = cast(%var_11350, dtype="float32") /* ty=Tensor[(660), float32] */;
  %141 = reshape(%140, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %142 = @func_5953(%141) /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) */;
  %143 = cast(%var_11350, dtype="float32") /* ty=Tensor[(660), float32] */;
  %144 = reshape(%143, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %145 = @func_5953(%144) /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) */;
  %146 = cast(%var_11363, dtype="float64") /* ty=Tensor[(35, 1), float64] */;
  %147 = reshape(%146, newshape=[35]) /* ty=Tensor[(35), float64] */;
  %148 = @func_6406(%147) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(7, 14, 5), uint64], Tensor[(4, 4, 2), int8]) */;
  %149 = %148.2;
  %150 = cast(%var_11363, dtype="bool") /* ty=Tensor[(35, 1), bool] */;
  %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(1), int32] */;
  %152 = cast(%149, dtype="bool") /* ty=Tensor[(35), bool] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?), bool] */;
  %154 = cast(%var_11363, dtype="int32") /* ty=Tensor[(35, 1), int32] */;
  %155 = cast(%var_11350, dtype="int32") /* ty=Tensor[(660), int32] */;
  %156 = bitwise_or(%154, %155) /* ty=Tensor[(35, 660), int32] */;
  %157 = cast(%156, dtype="float32") /* ty=Tensor[(35, 660), float32] */;
  %158 = cast(%var_11363, dtype="float32") /* ty=Tensor[(35, 1), float32] */;
  %159 = %139.0;
  %160 = %142.3;
  %161 = %145.3;
  %162 = logical_or(%152, %153) /* ty=Tensor[(35), bool] */;
  %163 = floor_mod(%157, %158) /* ty=Tensor[(35, 660), float32] */;
  (%159, %160, %161, %162, %163)
}

def @func_14920() -> (Tensor[(10, 8, 14), float32], Tensor[(4, 4, 2), int8]) {
  %164 = @func_11559() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980, ?), int32]) */;
  %165 = @func_13780() /* ty=Tensor[(10, 8, 14), float32] */;
  %166 = %164.0;
  (%165, %166)
}

def @func_3731(%var_3701: Tensor[(66), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8], float64, Tensor[(66), float64], Tensor[(4, 4, 2), float32]) {
  %167 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %168 = %167.0;
  %169 = cast(%168, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %170 = reshape(%169, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %171 = cast(8.52352f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %172 = cast(%var_3701, dtype="float64") /* ty=Tensor[(66), float64] */;
  %173 = reshape(%171, newshape=[]) /* ty=float64 */;
  %174 = reshape(%172, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float64] */;
  %175 = @func_2019(%173, %174) /* ty=(Tensor[(1, 11, 6), float64], Tensor[(1, 11, 6), float64], Tensor[(4, 4, 2), int8]) */;
  %176 = cast(%168, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %177 = reshape(%176, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %178 = @func_2682(%170) /* ty=Tensor[(4, 4, 2), float32] */;
  %179 = %175.2;
  %180 = @func_2682(%177) /* ty=Tensor[(4, 4, 2), float32] */;
  (%168, %178, %179, 8.52352f64 /* ty=float64 */, %var_3701, %180)
}

def @func_5789() -> (Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) {
  %181 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %182 = cast(meta[relay.Constant][7] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %183 = cast(meta[relay.Constant][7] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %184 = reshape(%182, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %185 = reshape(%183, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %186 = @func_2075(%184, %185) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) */;
  %187 = %181.0;
  %188 = %186.0;
  (%187, %188, meta[relay.Constant][7] /* ty=Tensor[(1680), uint32] */)
}

def @func_6604(%var_6551: Tensor[(490, 2), float64], %var_6560: Tensor[(490, 2), float64], %var_6593: Tensor[(264), bool]) -> (Tensor[(490, 2), uint64], Tensor[(490, 2), uint8], Tensor[(490, 2), float64], Tensor[(2, 11, 12), float64], Tensor[(264), bool]) {
  %189 = @func_4999() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(490, 2), uint16]) */;
  %190 = %189.2;
  %191 = cast(%190, dtype="float64") /* ty=Tensor[(490, 2), float64] */;
  %192 = cosh(%191) /* ty=Tensor[(490, 2), float64] */;
  %193 = cast(%var_6551, dtype="uint64") /* ty=Tensor[(490, 2), uint64] */;
  %194 = shape_of(%192, dtype="int32") /* ty=Tensor[(2), int32] */;
  %195 = cast(%192, dtype="uint64") /* ty=Tensor[(490, 2), uint64] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %197 = cast(%192, dtype="float64") /* ty=Tensor[(490, 2), float64] */;
  %198 = rsqrt(%197) /* ty=Tensor[(490, 2), float64] */;
  %199 = cast(%var_6560, dtype="uint8") /* ty=Tensor[(490, 2), uint8] */;
  %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(2), int32] */;
  %201 = cast(%198, dtype="uint8") /* ty=Tensor[(490, 2), uint8] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %203 = cast(%192, dtype="float64") /* ty=Tensor[(490, 2), float64] */;
  %204 = cast(%var_6593, dtype="bool") /* ty=Tensor[(264), bool] */;
  %205 = reshape(%204, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), bool] */;
  %206 = subtract(%195, %196) /* ty=Tensor[(490, 2), uint64] */;
  %207 = right_shift(%201, %202) /* ty=Tensor[(490, 2), uint8] */;
  %208 = log10(%203) /* ty=Tensor[(490, 2), float64] */;
  %209 = @func_3585(%205) /* ty=Tensor[(2, 11, 12), float64] */;
  (%206, %207, %208, %209, %var_6593)
}

def @func_4856() -> Tensor[(4, 4, 2), int8] {
  %210 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %210.0
}

def @func_7027() -> (Tensor[(4, 4, 2), int8],) {
  %211 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
  (%211,)
}

def @func_8295(%var_8289: Tensor[(4, 1, 5), float32]) -> (Tensor[(4, 1, 5), float32],) {
  %212 = cast(%var_8289, dtype="float32") /* ty=Tensor[(4, 1, 5), float32] */;
  %213 = atanh(%212) /* ty=Tensor[(4, 1, 5), float32] */;
  (%213,)
}

def @func_6931() -> Tensor[(4, 4, 2), int8] {
  @func_3523() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_4093() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %214 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %215 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %216 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %217 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %218 = %214.0;
  %219 = %215.0;
  %220 = %216.0;
  %221 = %217.1;
  (%218, %219, %220, %221)
}

def @func_5708() -> (Tensor[(16, 7, 3), float32],) {
  %222 = @func_4754() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %223 = %222.0;
  (%223,)
}

def @func_16892() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %224 = @func_15915() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(15, 12, 11), int16], Tensor[(1, 1980), float64]) */;
  %225 = @func_3872() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %226 = %224.0;
  %227 = %225.0;
  (%226, %227)
}

def @func_10128() -> Tensor[(4, 4, 2), int8] {
  %228 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %228.0
}

def @func_10253() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32], Tensor[(10, 66), float32]) {
  %229 = @func_5209() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %230 = %229.1;
  %231 = cast(%230, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %232 = reshape(%231, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %233 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 66), float32] */, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
  %234 = reshape(%233, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %235 = @func_8198(%234) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32]) */;
  %236 = @func_2682(%232) /* ty=Tensor[(4, 4, 2), float32] */;
  %237 = %235.2;
  (%230, %236, %237, meta[relay.Constant][8] /* ty=Tensor[(10, 66), float32] */)
}

def @func_10315(%var_10275: Tensor[(5, 9, 5), float32], %var_10276: Tensor[(5, 9, 5), float32], %var_10304: Tensor[(5, 9, 5), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(5, 9, 5), float32], Tensor[(5, 9, 5), uint64], Tensor[(4, 4, 2), float32]) {
  %238 = cast(%var_10276, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
  %239 = shape_of(%var_10275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%var_10275, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %242 = floor_divide(%240, %241) /* ty=Tensor[(5, 9, 5), float32] */;
  %243 = cast(%var_10276, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%242, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %247 = cast(%var_10304, dtype="uint64") /* ty=Tensor[(5, 9, 5), uint64] */;
  %248 = shape_of(%var_10276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(%var_10276, dtype="uint64") /* ty=Tensor[(5, 9, 5), uint64] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %251 = @func_8459() /* ty=Tensor[(4, 4, 2), int8] */;
  %252 = cast(%251, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %253 = reshape(%252, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %254 = multiply(%245, %246) /* ty=Tensor[(5, 9, 5), float32] */;
  %255 = maximum(%249, %250) /* ty=Tensor[(5, 9, 5), uint64] */;
  %256 = @func_7457(%253) /* ty=Tensor[(4, 4, 2), float32] */;
  (%251, %254, %255, %256)
}

def @func_3868() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %257 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %258 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
  %259 = %257.0;
  %260 = %258.1;
  (%259, %260)
}

def @func_1607(%var_1573: Tensor[(4, 15, 11), float32]) -> (Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) {
  %261 = cast(%var_1573, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %262 = erf(%261) /* ty=Tensor[(4, 15, 11), float32] */;
  %263 = cast(%var_1573, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%262, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %267 = cast(meta[relay.Constant][9] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %268 = cast(meta[relay.Constant][9] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %269 = reshape(%267, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %270 = reshape(%268, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %271 = @func_1074(%269, %270) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
  %272 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %273 = add(%265, %266) /* ty=Tensor[(4, 15, 11), float32] */;
  %274 = %271.0;
  %275 = %272.1;
  (%273, %274, meta[relay.Constant][9] /* ty=Tensor[(980), uint16] */, %275)
}

def @func_5209() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %276 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %277 = @func_4999() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(490, 2), uint16]) */;
  %278 = @func_3158() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %279 = %276.1;
  %280 = %277.0;
  %281 = %278.0;
  (%279, %280, %281)
}

def @func_5432() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %282 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %283 = cast(meta[relay.Constant][10] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %284 = cast(meta[relay.Constant][10] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %285 = reshape(%283, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %286 = reshape(%284, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %287 = @func_1074(%285, %286) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
  %288 = %282.0;
  %289 = %287.1;
  %290 = @func_2583() /* ty=Tensor[(4, 4, 2), int8] */;
  (%288, %289, meta[relay.Constant][10] /* ty=Tensor[(980), uint16] */, %290)
}

def @func_9391() -> Tensor[(144), uint16] {
  @func_6897() /* ty=Tensor[(144), uint16] */
}

def @func_4754() -> (Tensor[(16, 7, 3), float32],) {
  %291 = @func_3064() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %292 = %291.0;
  (%292,)
}

def @func_3511() -> Tensor[(4, 4, 2), int8] {
  %293 = @func_2551() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %293.0
}

def @func_14963() -> (Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %294 = @func_5708() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %295 = @func_13685() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %296 = @func_12836() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %297 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
  %298 = %294.0;
  %299 = %295.0;
  %300 = %296.0;
  (%297, %298, %299, %300)
}

def @func_10007() -> (Tensor[(4, 4, 2), int8],) {
  %301 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %302 = %301.0;
  (%302,)
}

def @func_10607(%var_10567: Tensor[(10, 2), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(2, 9, 11), float64], Tensor[(4, 36), uint16], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 1, 5), float32], Tensor[(10, 2), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %303 = @func_3249() /* ty=(Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %304 = cast(meta[relay.Constant][11] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %305 = cast(meta[relay.Constant][12] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %306 = cast(meta[relay.Constant][13] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %307 = reshape(%304, newshape=[4, 36]) /* ty=Tensor[(4, 36), uint16] */;
  %308 = reshape(%305, newshape=[66]) /* ty=Tensor[(66), float64] */;
  %309 = reshape(%306, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %310 = @func_6020(%307, %308, %309) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(4, 36), uint16], Tensor[(4, 4, 2), int8], Tensor[(66), float64], Tensor[(144), uint16], Tensor[(660), float32]) */;
  %311 = cast(%var_10567, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
  %312 = reshape(%311, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
  %313 = @func_8295(%312) /* ty=(Tensor[(4, 1, 5), float32],) */;
  %314 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %315 = @func_7027() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %316 = @func_4814() /* ty=Tensor[(4, 4, 2), int8] */;
  %317 = %303.0;
  %318 = %310.3;
  %319 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
  %320 = %313.0;
  %321 = %314.0;
  %322 = %315.0;
  (%316, %317, %318, meta[relay.Constant][11] /* ty=Tensor[(144), uint16] */, meta[relay.Constant][12] /* ty=Tensor[(66), float64] */, meta[relay.Constant][13] /* ty=Tensor[(660), float32] */, %319, %320, %var_10567, %321, %322)
}

def @func_15581(%var_15563: Tensor[(4, 9, 15), float64]) -> Tensor[(4, 9, 15), float64] {
  %323 = cast(%var_15563, dtype="float64") /* ty=Tensor[(4, 9, 15), float64] */;
  log(%323) /* ty=Tensor[(4, 9, 15), float64] */
}

def @func_16759() -> (Tensor[(4, 4, 2), int8], Tensor[(3, 88), bool], Tensor[(490, 2), float64]) {
  %324 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %325 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(980, ?), float64] */;
  %327 = cast(%325, dtype="float64") /* ty=Tensor[(980, ?), float64] */;
  %328 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 88), bool] */, dtype="bool") /* ty=Tensor[(3, 88), bool] */;
  %329 = reshape(%326, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
  %330 = reshape(%327, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
  %331 = reshape(%328, newshape=[264]) /* ty=Tensor[(264), bool] */;
  %332 = @func_6604(%329, %330, %331) /* ty=(Tensor[(490, 2), uint64], Tensor[(490, 2), uint8], Tensor[(490, 2), float64], Tensor[(2, 11, 12), float64], Tensor[(264), bool]) */;
  %333 = %332.0;
  %334 = cast(%325, dtype="float64") /* ty=Tensor[(980, ?), float64] */;
  %335 = shape_of(%333, dtype="int32") /* ty=Tensor[(2), int32] */;
  %336 = cast(%333, dtype="float64") /* ty=Tensor[(490, 2), float64] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %338 = %324.0;
  %339 = power(%336, %337) /* ty=Tensor[(490, 2), float64] */;
  (%338, meta[relay.Constant][14] /* ty=Tensor[(3, 88), bool] */, %339)
}

def @func_2352() -> Tensor[(4, 4, 2), int8] {
  %340 = @func_2132() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) */;
  %340.0
}

def @func_11127() -> (Tensor[(4, 4, 2), int8],) {
  %341 = @func_6931() /* ty=Tensor[(4, 4, 2), int8] */;
  (%341,)
}

def @func_1553() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %342 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %343 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %344 = %342.1;
  %345 = %343.0;
  (%344, %345)
}

def @func_15619() -> Tensor[(4, 4, 2), bool] {
  %346 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %346.1
}

def @func_14392() -> (Tensor[(16, 15, 7), float64], Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(490, 2), float32], Tensor[(4, 4, 2), int8]) {
  %347 = @func_13382() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %348 = @func_14264() /* ty=Tensor[(490, 2), float32] */;
  %349 = cast(%348, dtype="float32") /* ty=Tensor[(490, 2), float32] */;
  %350 = @func_1818() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %351 = @func_12856() /* ty=Tensor[(16, 15, 7), float64] */;
  %352 = @func_10450() /* ty=Tensor[(980), uint16] */;
  %353 = %347.0;
  %354 = sqrt(%349) /* ty=Tensor[(490, 2), float32] */;
  %355 = %350.0;
  (%351, %352, %353, %354, %355)
}

def @func_6705() -> Tensor[(4, 4, 2), int8] {
  @func_1364() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_16338() -> (Tensor[(4, 4, 2), int8],) {
  %356 = @func_4111() /* ty=Tensor[(4, 4, 2), int8] */;
  (%356,)
}

def @func_9674() -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float32], Tensor[(66), float64]) {
  %357 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %358 = cast(meta[relay.Constant][15] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %359 = reshape(%358, newshape=[66]) /* ty=Tensor[(66), float64] */;
  %360 = @func_3731(%359) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8], float64, Tensor[(66), float64], Tensor[(4, 4, 2), float32]) */;
  %361 = %357.1;
  %362 = %360.1;
  (%361, %362, meta[relay.Constant][15] /* ty=Tensor[(66), float64] */)
}

def @func_2972(%var_2942: uint32, %var_2943: Tensor[(6, 8, 15), uint32]) -> (Tensor[(6, 8, 15), bool], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %363 = cast(%var_2942, dtype="bool") /* ty=bool */;
  %364 = cast(%var_2943, dtype="bool") /* ty=Tensor[(6, 8, 15), bool] */;
  %365 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %366 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %367 = greater(%363, %364) /* ty=Tensor[(6, 8, 15), bool] */;
  %368 = %365.1;
  %369 = %366.0;
  (%367, %368, %369)
}

def @func_1725() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) {
  %370 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
  %371 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %372 = %371.2;
  %373 = cast(%372, dtype="uint16") /* ty=Tensor[(980, 1), uint16] */;
  %374 = reshape(%373, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %375 = @func_1216(%374) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
  %376 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %377 = %376.3;
  %378 = cast(%377, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %379 = cast(%372, dtype="uint16") /* ty=Tensor[(980, 1), uint16] */;
  %380 = reshape(%378, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %381 = reshape(%379, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %382 = @func_1074(%380, %381) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
  %383 = %382.0;
  %384 = cast(%383, dtype="uint64") /* ty=Tensor[(10, 14, 7), uint64] */;
  %385 = shape_of(%372, dtype="int32") /* ty=Tensor[(2), int32] */;
  %386 = cast(%372, dtype="uint64") /* ty=Tensor[(980, 1), uint64] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %388 = bitwise_or(%386, %387) /* ty=Tensor[(980, ?), uint64] */;
  %389 = cast(%372, dtype="float64") /* ty=Tensor[(980, 1), float64] */;
  %390 = shape_of(%388, dtype="int32") /* ty=Tensor[(2), int32] */;
  %391 = cast(%388, dtype="float64") /* ty=Tensor[(980, ?), float64] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %393 = %370.1;
  %394 = %375.1;
  %395 = mod(%391, %392) /* ty=Tensor[(980, ?), float64] */;
  (%393, %394, %377, %395)
}

def @func_14423() -> (Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), bool]) {
  %396 = @func_9235() /* ty=(Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(144), uint16]) */;
  %397 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
  %398 = %396.0;
  %399 = %397.0;
  (%398, %399)
}

def @func_1430() -> (Tensor[(4, 4, 2), int8],) {
  %400 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %401 = %400.3;
  (%401,)
}

def @func_4784() -> (Tensor[(4, 4, 2), int8],) {
  %402 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %403 = %402.0;
  (%403,)
}

def @func_13735() -> (Tensor[(4, 4, 2), int8],) {
  %404 = @func_7155() /* ty=Tensor[(4, 4, 2), int8] */;
  (%404,)
}

def @func_6499() -> (Tensor[(4, 4, 2), int8],) {
  %405 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
  (%405,)
}

def @func_3923() -> Tensor[(4, 4, 2), int8] {
  %406 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %406.1
}

def @func_14760(%var_14744: Tensor[(660), float32]) -> (Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), float32], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(336, 1), float32]) {
  %407 = @func_5762() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
  %408 = cast(%var_14744, dtype="float32") /* ty=Tensor[(660), float32] */;
  %409 = reshape(%408, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %410 = @func_5953(%409) /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) */;
  %411 = cast(meta[relay.Constant][16] /* ty=Tensor[(336, 1), float32] */, dtype="float32") /* ty=Tensor[(336, 1), float32] */;
  %412 = reshape(%411, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float32] */;
  %413 = @func_12726(%412) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), bool], Tensor[(4, 4, 2), int8], Tensor[(980, 8), uint8], Tensor[(7840), int32], Tensor[(16, 7, 3), float32]) */;
  %414 = %407.1;
  %415 = %410.0;
  %416 = %413.0;
  (%414, %415, %var_14744, %416, meta[relay.Constant][16] /* ty=Tensor[(336, 1), float32] */)
}

def @func_4111() -> Tensor[(4, 4, 2), int8] {
  %417 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %417.2
}

def @func_15957() -> (Tensor[(4, 4, 2), int8],) {
  %418 = @func_11329() /* ty=Tensor[(4, 4, 2), int8] */;
  (%418,)
}

def @func_15041() -> (Tensor[(4, 4, 2), int8],) {
  %419 = @func_14529() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %420 = %419.4;
  (%420,)
}

def @func_3278() -> (Tensor[(4, 4, 2), int8],) {
  %421 = @func_2397() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %422 = %421.2;
  (%422,)
}

def @func_10207() -> (Tensor[(4, 4, 2), int8],) {
  %423 = @func_6191() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %424 = %423.0;
  (%424,)
}

def @func_1953() -> (Tensor[(4, 4, 2), int8],) {
  %425 = @func_1818() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %426 = %425.0;
  (%426,)
}

def @func_11559() -> (Tensor[(4, 4, 2), int8], Tensor[(980, ?), int32]) {
  %427 = @func_1725() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) */;
  %428 = %427.0;
  %429 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
  (%428, %429)
}

def @func_6406(%var_6381: Tensor[(35), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(7, 14, 5), uint64], Tensor[(4, 4, 2), int8]) {
  %430 = @func_5145() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16]) */;
  %431 = @func_4589() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(8, 3, 6), float32]) */;
  %432 = cast(%var_6381, dtype="float64") /* ty=Tensor[(35), float64] */;
  %433 = reshape(%432, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float64] */;
  %434 = @func_4524(%433) /* ty=(Tensor[(7, 1, 5), float64], Tensor[(980, ?), int32], Tensor[(4, 4, 2), int8]) */;
  %435 = %434.0;
  %436 = cast(%435, dtype="uint64") /* ty=Tensor[(7, 1, 5), uint64] */;
  %437 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 14, 5), float64] */, dtype="uint64") /* ty=Tensor[(7, 14, 5), uint64] */;
  %438 = @func_5341() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %439 = %430.0;
  %440 = %431.2;
  %441 = bitwise_xor(%436, %437) /* ty=Tensor[(7, 14, 5), uint64] */;
  %442 = %438.1;
  (%439, %440, %var_6381, %441, %442)
}

def @func_2019(%var_1997: float64, %var_1998: Tensor[(1, 11, 6), float64]) -> (Tensor[(1, 11, 6), float64], Tensor[(1, 11, 6), float64], Tensor[(4, 4, 2), int8]) {
  %443 = cast(%var_1997, dtype="float64") /* ty=float64 */;
  %444 = cast(%var_1998, dtype="float64") /* ty=Tensor[(1, 11, 6), float64] */;
  %445 = cast(%var_1998, dtype="float64") /* ty=Tensor[(1, 11, 6), float64] */;
  %446 = @func_1953() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %447 = mod(%443, %444) /* ty=Tensor[(1, 11, 6), float64] */;
  %448 = atan(%445) /* ty=Tensor[(1, 11, 6), float64] */;
  %449 = %446.0;
  (%447, %448, %449)
}

def @func_13958() -> (Tensor[(4, 4, 2), int8],) {
  %450 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
  (%450,)
}

def @func_6756() -> Tensor[(4, 4, 2), int8] {
  %451 = @func_5341() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %451.0
}

def @func_8198(%var_8189: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32]) {
  %452 = @func_6249() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %453 = cast(%var_8189, dtype="float32") /* ty=Tensor[(660), float32] */;
  %454 = reshape(%453, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %455 = @func_5953(%454) /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) */;
  %456 = %452.0;
  %457 = %455.0;
  (%456, %457, %var_8189)
}

def @func_13441() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %458 = @func_9235() /* ty=(Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(144), uint16]) */;
  %459 = %458.1;
  %460 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  %461 = @func_9280() /* ty=Tensor[(4, 4, 2), int8] */;
  (%459, %460, %461)
}

def @func_4909(%var_4878: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %462 = @func_2551() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %463 = cast(%var_4878, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %464 = reshape(%463, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %465 = @func_3355(%464) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %466 = @func_4111() /* ty=Tensor[(4, 4, 2), int8] */;
  %467 = %462.0;
  %468 = %465.1;
  (%466, %467, %468, %var_4878)
}

def @func_5293() -> Tensor[(4, 4, 2), int8] {
  %469 = @func_2932() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %469.1
}

def @func_15321() -> Tensor[(980, ?), int32] {
  @func_4333() /* ty=Tensor[(980, ?), int32] */
}

def @func_981() -> (Tensor[(4, 4, 2), int8],) {
  %470 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %471 = %470.0;
  (%471,)
}

def @func_3872() -> (Tensor[(4, 4, 2), int8],) {
  %472 = @func_2771() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %473 = %472.0;
  (%473,)
}

def @func_10464() -> Tensor[(4, 4, 2), int8] {
  @func_6353() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_11329() -> Tensor[(4, 4, 2), int8] {
  @func_6931() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_4279() -> Tensor[(4, 4, 2), int8] {
  @func_2583() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_1216(%var_1214: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) {
  %474 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %475 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %476 = cast(%var_1214, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %477 = cast(%var_1214, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %478 = reshape(%476, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %479 = reshape(%477, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %480 = @func_1074(%478, %479) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
  %481 = %474.0;
  %482 = %475.0;
  %483 = %480.0;
  (%481, %482, %483, %var_1214)
}

def @func_6875(%var_6865: uint64, %var_6866: Tensor[(1, 3, 12), uint64]) -> Tensor[(1, 3, 12), uint64] {
  %484 = cast(%var_6865, dtype="uint64") /* ty=uint64 */;
  %485 = cast(%var_6866, dtype="uint64") /* ty=Tensor[(1, 3, 12), uint64] */;
  maximum(%484, %485) /* ty=Tensor[(1, 3, 12), uint64] */
}

def @func_14020() -> (Tensor[(16, 15, 7), float64],) {
  %486 = @func_12856() /* ty=Tensor[(16, 15, 7), float64] */;
  (%486,)
}

def @func_9175() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %487 = @func_2771() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %488 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
  %489 = %487.0;
  (%488, %489)
}

def @func_15280() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), int32]) {
  %490 = @func_14978() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %491 = @func_14726() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(35), bool], Tensor[(660), float32], Tensor[(35), float64]) */;
  %492 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %493 = @func_14284() /* ty=(Tensor[(980, ?), int32],) */;
  %494 = %490.0;
  %495 = %491.0;
  %496 = @func_8459() /* ty=Tensor[(4, 4, 2), int8] */;
  %497 = %492.0;
  %498 = %493.0;
  (%494, %495, %496, %497, %498)
}

def @func_2397() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %499 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %500 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %501 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %502 = %499.0;
  %503 = %500.3;
  %504 = %501.0;
  (%502, %503, %504)
}

def @func_11514() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32], Tensor[(4, 4, 2), int8]) {
  %505 = @func_5661() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %506 = @func_3659() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(660, 5), float64], Tensor[(4, 15, 11), float32], Tensor[(4, 4, 2), int8]) */;
  %507 = @func_5708() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %508 = %505.0;
  %509 = %506.1;
  %510 = %507.0;
  %511 = @func_3523() /* ty=Tensor[(4, 4, 2), int8] */;
  (%508, %509, %510, %511)
}

def @func_15482(%var_15438: Tensor[(980), float64], %var_15439: Tensor[(264), bool]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(264), bool], Tensor[(264), bool], Tensor[(4, 4, 2), int8], Tensor[(980), float64]) {
  %512 = @func_5209() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %513 = @func_14184() /* ty=(Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(10, 4, 10), float64], Tensor[(400), float64]) */;
  %514 = @func_15041() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %515 = cast(%var_15438, dtype="float64") /* ty=Tensor[(980), float64] */;
  %516 = cast(%var_15438, dtype="float64") /* ty=Tensor[(980), float64] */;
  %517 = cast(%var_15439, dtype="bool") /* ty=Tensor[(264), bool] */;
  %518 = reshape(%515, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
  %519 = reshape(%516, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
  %520 = reshape(%517, newshape=[264]) /* ty=Tensor[(264), bool] */;
  %521 = @func_6604(%518, %519, %520) /* ty=(Tensor[(490, 2), uint64], Tensor[(490, 2), uint8], Tensor[(490, 2), float64], Tensor[(2, 11, 12), float64], Tensor[(264), bool]) */;
  %522 = cast(%var_15438, dtype="float64") /* ty=Tensor[(980), float64] */;
  %523 = %512.1;
  %524 = %513.1;
  %525 = %514.0;
  %526 = %521.4;
  %527 = @func_4111() /* ty=Tensor[(4, 4, 2), int8] */;
  %528 = asin(%522) /* ty=Tensor[(980), float64] */;
  (%523, %524, %525, %526, %var_15439, %527, %528)
}

def @func_3659() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(660, 5), float64], Tensor[(4, 15, 11), float32], Tensor[(4, 4, 2), int8]) {
  %529 = @func_3249() /* ty=(Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %530 = cast(meta[relay.Constant][18] /* ty=Tensor[(660, 1), float32] */, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
  %531 = reshape(%530, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
  %532 = @func_2324(%531) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(5, 132), float32], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %533 = cast(meta[relay.Constant][18] /* ty=Tensor[(660, 1), float32] */, dtype="float64") /* ty=Tensor[(660, 1), float64] */;
  %534 = cast(meta[relay.Constant][19] /* ty=Tensor[(660, 5), float32] */, dtype="float64") /* ty=Tensor[(660, 5), float64] */;
  %535 = cast(meta[relay.Constant][18] /* ty=Tensor[(660, 1), float32] */, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
  %536 = reshape(%535, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %537 = @func_1607(%536) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
  %538 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %539 = %529.2;
  %540 = %532.10;
  %541 = divide(%533, %534) /* ty=Tensor[(660, 5), float64] */;
  %542 = %537.0;
  %543 = %538.1;
  (%539, %540, %541, %542, %543)
}

def @func_14978() -> (Tensor[(4, 4, 2), int8],) {
  %544 = @func_8162() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %545 = %544.1;
  (%545,)
}

def @func_7155() -> Tensor[(4, 4, 2), int8] {
  %546 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %546.0
}

def @func_9280() -> Tensor[(4, 4, 2), int8] {
  %547 = @func_8650() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %547.0
}

def @func_12679() -> (Tensor[(16, 7, 3), float32],) {
  %548 = @func_8369() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32]) */;
  %549 = %548.1;
  (%549,)
}

def @func_6544() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %550 = @func_4788() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %551 = @func_3523() /* ty=Tensor[(4, 4, 2), int8] */;
  %552 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
  %553 = %550.0;
  (%551, %552, %553)
}

def @func_5145() -> (Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16]) {
  %554 = cast(meta[relay.Constant][20] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %555 = reshape(%554, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %556 = @func_3355(%555) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %557 = @func_4111() /* ty=Tensor[(4, 4, 2), int8] */;
  %558 = %556.3;
  (%557, %558, meta[relay.Constant][20] /* ty=Tensor[(980), uint16] */)
}

def @func_6897() -> Tensor[(144), uint16] {
  %559 = @func_4589() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(8, 3, 6), float32]) */;
  %559.3
}

def @func_9235() -> (Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(144), uint16]) {
  %560 = @func_2132() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) */;
  %561 = %560.1;
  %562 = @func_7356() /* ty=Tensor[(4, 4, 2), int8] */;
  %563 = @func_6897() /* ty=Tensor[(144), uint16] */;
  (%561, %562, %563)
}

def @func_6913() -> (Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64]) {
  %564 = @func_6249() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %565 = @func_5789() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) */;
  %566 = %564.0;
  %567 = %565.1;
  (%566, %567)
}

def @func_6111(%var_6094: Tensor[(5, 15, 5), float64], %var_6107: Tensor[(5, 15, 5), float64]) -> (Tensor[(5, 15, 5), bool],) {
  %568 = cast(%var_6094, dtype="float64") /* ty=Tensor[(5, 15, 5), float64] */;
  %569 = atan(%568) /* ty=Tensor[(5, 15, 5), float64] */;
  %570 = cast(%var_6107, dtype="bool") /* ty=Tensor[(5, 15, 5), bool] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%569, dtype="bool") /* ty=Tensor[(5, 15, 5), bool] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %574 = less(%572, %573) /* ty=Tensor[(5, 15, 5), bool] */;
  (%574,)
}

def @func_5661() -> (Tensor[(4, 4, 2), int8],) {
  %575 = @func_4732() /* ty=Tensor[(4, 4, 2), int8] */;
  (%575,)
}

def @func_15642() -> Tensor[(4, 4, 2), int8] {
  @func_11329() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_13763(%var_13748: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %576 = @func_5432() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %577 = cast(%var_13748, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %578 = reshape(%577, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %579 = @func_1276(%578) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %580 = @func_12836() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %581 = %576.3;
  %582 = %579.0;
  %583 = %580.0;
  (%581, %582, %var_13748, %583)
}

def @func_6249() -> (Tensor[(4, 4, 2), int8],) {
  %584 = @func_4856() /* ty=Tensor[(4, 4, 2), int8] */;
  (%584,)
}

def @func_7928() -> Tensor[(980), uint16] {
  %585 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %585.0
}

def @func_15326() -> Tensor[(4, 4, 2), int8] {
  %586 = @func_8650() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %586.0
}

def @func_1657() -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) {
  %587 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %588 = %587.1;
  %589 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  (%588, %589)
}

def @func_1987(%var_1967: Tensor[(16, 12, 9), float64]) -> Tensor[(16, 12, 9), float64] {
  %590 = cast(%var_1967, dtype="float64") /* ty=Tensor[(16, 12, 9), float64] */;
  cos(%590) /* ty=Tensor[(16, 12, 9), float64] */
}

def @func_3355(%var_3336: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %591 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %592 = cast(%var_3336, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %593 = reshape(%592, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %594 = @func_2883(%593) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %595 = @func_2806() /* ty=Tensor[(4, 4, 2), int8] */;
  %596 = %591.1;
  %597 = %594.0;
  (%595, %596, %597, %var_3336)
}

def @func_8736() -> Tensor[(4, 4, 2), int8] {
  %598 = @func_8617() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %598.1
}

def @func_12504() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %599 = @func_11559() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980, ?), int32]) */;
  %600 = @func_4784() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %601 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
  %602 = %599.0;
  %603 = %600.0;
  (%601, %602, %603)
}

def @func_15375() -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) {
  %604 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %605 = @func_3872() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %606 = %604.1;
  %607 = %605.0;
  (%606, %607)
}

def @func_10635() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %608 = @func_7027() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %609 = @func_7510() /* ty=Tensor[(4, 4, 2), int8] */;
  %610 = %608.0;
  (%609, %610)
}

def @func_16714() -> Tensor[(4, 4, 2), int8] {
  %611 = @func_15280() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), int32]) */;
  %611.0
}

def @func_13780() -> Tensor[(10, 8, 14), float32] {
  %612 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(10, 8, 14), float32] */;
  acosh(%612) /* ty=Tensor[(10, 8, 14), float32] */
}

def @func_16494() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %613 = @func_15094() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16]) */;
  %614 = @func_11094() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %615 = %613.0;
  %616 = %614.0;
  (%615, %616)
}

def @func_8677() -> (Tensor[(4, 4, 2), int8],) {
  %617 = @func_5341() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %618 = %617.1;
  (%618,)
}

def @func_4814() -> Tensor[(4, 4, 2), int8] {
  %619 = @func_4784() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %619.0
}

def @func_11027(%var_10994: Tensor[(980), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(225), float32], Tensor[(980), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %620 = @func_10157() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %621 = cast(meta[relay.Constant][22] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %622 = reshape(%621, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %623 = @func_4909(%622) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %624 = cast(meta[relay.Constant][23] /* ty=Tensor[(980), uint16] */, dtype="uint8") /* ty=Tensor[(980), uint8] */;
  %625 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(980), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %626 = cast(meta[relay.Constant][22] /* ty=Tensor[(980), uint16] */, dtype="uint8") /* ty=Tensor[(980), uint8] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %628 = cast(meta[relay.Constant][24] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %629 = cast(meta[relay.Constant][24] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %630 = cast(meta[relay.Constant][24] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %631 = reshape(%628, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float32] */;
  %632 = reshape(%629, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float32] */;
  %633 = reshape(%630, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float32] */;
  %634 = @func_10315(%631, %632, %633) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(5, 9, 5), float32], Tensor[(5, 9, 5), uint64], Tensor[(4, 4, 2), float32]) */;
  %635 = cast(meta[relay.Constant][23] /* ty=Tensor[(980), uint16] */, dtype="float64") /* ty=Tensor[(980), float64] */;
  %636 = atan(%635) /* ty=Tensor[(980), float64] */;
  %637 = cast(%636, dtype="float32") /* ty=Tensor[(980), float32] */;
  %638 = sin(%637) /* ty=Tensor[(980), float32] */;
  %639 = cast(%var_10994, dtype="int8") /* ty=Tensor[(980), int8] */;
  %640 = shape_of(%638, dtype="int32") /* ty=Tensor[(1), int32] */;
  %641 = cast(%638, dtype="int8") /* ty=Tensor[(980), int8] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?), int8] */;
  %643 = @func_2806() /* ty=Tensor[(4, 4, 2), int8] */;
  %644 = %620.0;
  %645 = %623.2;
  %646 = left_shift(%626, %627) /* ty=Tensor[(980), uint8] */;
  %647 = @func_4856() /* ty=Tensor[(4, 4, 2), int8] */;
  %648 = %634.0;
  %649 = subtract(%641, %642) /* ty=Tensor[(980), int8] */;
  %650 = @func_2753() /* ty=Tensor[(4, 4, 2), int8] */;
  %651 = @func_4732() /* ty=Tensor[(4, 4, 2), int8] */;
  (%643, %644, %645, %646, %647, %648, meta[relay.Constant][24] /* ty=Tensor[(225), float32] */, %649, %650, %651)
}

def @func_5953(%var_5925: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) {
  %652 = @func_3191() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
  %653 = @func_1953() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %654 = %653.0;
  %655 = cast(%654, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
  %656 = @func_5789() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) */;
  %657 = cast(%var_5925, dtype="float32") /* ty=Tensor[(660), float32] */;
  %658 = reshape(%657, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %659 = @func_1607(%658) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
  %660 = %652.1;
  %661 = erf(%655) /* ty=Tensor[(4, 4, 2), float64] */;
  %662 = %656.1;
  %663 = %659.3;
  (%660, %661, %662, %663, %var_5925)
}

def @func_15094() -> (Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16]) {
  %664 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %665 = @func_10774() /* ty=Tensor[(4, 4, 2), int8] */;
  %666 = %664.2;
  (%665, %666)
}

def @func_1818() -> (Tensor[(4, 4, 2), int8],) {
  %667 = @func_1725() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) */;
  %668 = %667.1;
  (%668,)
}

def @func_972(%var_947: Tensor[(144), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16]) {
  %669 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %670 = cast(%var_947, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %671 = cast(%var_947, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %672 = reshape(%670, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %673 = reshape(%671, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %674 = @func_771(%672, %673) /* ty=(Tensor[(8, 3, 6), uint16],) */;
  %675 = %669.0;
  %676 = %674.0;
  (%675, %676, %var_947)
}

def @func_12641() -> (Tensor[(66), float64],) {
  %677 = @func_9674() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float32], Tensor[(66), float64]) */;
  %678 = %677.2;
  (%678,)
}

def @func_2132() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) {
  %679 = @func_1953() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %680 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %681 = %680.0;
  %682 = cast(%681, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
  %683 = %679.0;
  %684 = atanh(%682) /* ty=Tensor[(4, 4, 2), float64] */;
  (%683, %684)
}

def @func_2583() -> Tensor[(4, 4, 2), int8] {
  %685 = @func_1553() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %685.0
}

def @func_3249() -> (Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %686 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 9, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
  %687 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %688 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %689 = rsqrt(%686) /* ty=Tensor[(2, 9, 11), float64] */;
  %690 = %687.0;
  %691 = %688.0;
  (%689, %690, %691)
}

def @func_11771(%var_11730: Tensor[(13720), int32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 14), float32]) {
  %692 = cast(%var_11730, dtype="int32") /* ty=Tensor[(13720), int32] */;
  %693 = cast(%var_11730, dtype="float64") /* ty=Tensor[(13720), float64] */;
  %694 = reshape(%692, newshape=[980, 14]) /* ty=Tensor[(980, 14), int32] */;
  %695 = reshape(%693, newshape=[980, 14]) /* ty=Tensor[(980, 14), float64] */;
  %696 = @func_9329(%694, %695) /* ty=(Tensor[(980, 14), bool], Tensor[(980, 14), float32], Tensor[(980, 14), uint32]) */;
  %697 = %696.2;
  %698 = cast(%var_11730, dtype="float32") /* ty=Tensor[(13720), float32] */;
  %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(2), int32] */;
  %700 = cast(%697, dtype="float32") /* ty=Tensor[(980, 14), float32] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %702 = @func_11329() /* ty=Tensor[(4, 4, 2), int8] */;
  %703 = @func_10774() /* ty=Tensor[(4, 4, 2), int8] */;
  %704 = divide(%700, %701) /* ty=Tensor[(980, 14), float32] */;
  (%702, %703, %704)
}

def @func_12856() -> Tensor[(16, 15, 7), float64] {
  %705 = @func_6913() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64]) */;
  %705.1
}

def @func_8137(%var_8133: uint32, %var_8134: Tensor[(720), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(6, 8, 15), bool], uint32, Tensor[(720), uint32]) {
  %706 = @func_3249() /* ty=(Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %707 = cast(%var_8133, dtype="uint32") /* ty=uint32 */;
  %708 = cast(%var_8134, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %709 = reshape(%707, newshape=[]) /* ty=uint32 */;
  %710 = reshape(%708, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), uint32] */;
  %711 = @func_2972(%709, %710) /* ty=(Tensor[(6, 8, 15), bool], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %712 = %706.1;
  %713 = %711.0;
  (%712, %713, %var_8133, %var_8134)
}

def @func_1364() -> Tensor[(4, 4, 2), int8] {
  %714 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %714.0
}

def @func_7792(%var_7762: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) {
  %715 = cast(%var_7762, dtype="float32") /* ty=Tensor[(660), float32] */;
  %716 = reshape(%715, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %717 = @func_1607(%716) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
  %718 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  %719 = %717.0;
  (%718, %719, %var_7762)
}

def @func_14000(%var_13986: Tensor[(10, 4, 10), float64]) -> (Tensor[(10, 4, 10), float64],) {
  %720 = cast(%var_13986, dtype="float64") /* ty=Tensor[(10, 4, 10), float64] */;
  %721 = log2(%720) /* ty=Tensor[(10, 4, 10), float64] */;
  (%721,)
}

def @func_2753() -> Tensor[(4, 4, 2), int8] {
  %722 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %722.0
}

def @func_10893() -> Tensor[(4, 4, 2), int8] {
  %723 = @func_10157() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %723.0
}

def @func_9374() -> (Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(660), float32]) {
  %724 = @func_8524() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(16, 15, 7), float64], Tensor[(660), float32]) */;
  %725 = cast(meta[relay.Constant][26] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %726 = reshape(%725, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %727 = @func_8198(%726) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32]) */;
  %728 = %724.2;
  %729 = %727.0;
  (%728, %729, meta[relay.Constant][26] /* ty=Tensor[(660), float32] */)
}

def @func_3018() -> (Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %730 = @func_2719() /* ty=(Tensor[(980), uint16],) */;
  %731 = @func_2551() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %732 = %730.0;
  %733 = %731.0;
  (%732, %733)
}

def @func_9207() -> Tensor[(4, 4, 2), int8] {
  %734 = @func_4788() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %734.0
}

def @func_6301() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %735 = @func_4788() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %736 = @func_5661() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %737 = %735.0;
  %738 = %736.0;
  (%737, %738)
}

def @func_14726() -> (Tensor[(4, 4, 2), int8], Tensor[(35), bool], Tensor[(660), float32], Tensor[(35), float64]) {
  %739 = cast(meta[relay.Constant][27] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %740 = cast(meta[relay.Constant][28] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %741 = reshape(%739, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %742 = reshape(%740, newshape=[35, 1]) /* ty=Tensor[(35, 1), float64] */;
  %743 = @func_11407(%741, %742) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), bool], Tensor[(35), bool], Tensor[(35, 660), float32]) */;
  %744 = @func_12590() /* ty=Tensor[(4, 4, 2), int8] */;
  %745 = %743.3;
  (%744, %745, meta[relay.Constant][27] /* ty=Tensor[(660), float32] */, meta[relay.Constant][28] /* ty=Tensor[(35), float64] */)
}

def @func_8650() -> (Tensor[(4, 4, 2), int8],) {
  %746 = @func_3278() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %747 = %746.0;
  (%747,)
}

def @func_12922() -> (Tensor[(4, 4, 2), int8],) {
  %748 = @func_3659() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(660, 5), float64], Tensor[(4, 15, 11), float32], Tensor[(4, 4, 2), int8]) */;
  %749 = %748.0;
  (%749,)
}

def @func_7277(%var_7250: Tensor[(84, 20), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(84, 20), uint32], Tensor[(4, 4, 2), int8]) {
  %750 = @func_4031() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %751 = cast(%var_7250, dtype="uint32") /* ty=Tensor[(84, 20), uint32] */;
  %752 = cast(%var_7250, dtype="uint32") /* ty=Tensor[(84, 20), uint32] */;
  %753 = reshape(%751, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %754 = reshape(%752, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %755 = @func_2075(%753, %754) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) */;
  %756 = @func_3158() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %757 = %750.1;
  %758 = %755.1;
  %759 = %756.0;
  (%757, %758, %var_7250, %759)
}

def @func_6020(%var_5979: Tensor[(4, 36), uint16], %var_5984: Tensor[(66), float64], %var_6001: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(4, 36), uint16], Tensor[(4, 4, 2), int8], Tensor[(66), float64], Tensor[(144), uint16], Tensor[(660), float32]) {
  %760 = @func_3249() /* ty=(Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %761 = cast(%var_5979, dtype="uint16") /* ty=Tensor[(4, 36), uint16] */;
  %762 = cast(%var_5979, dtype="uint16") /* ty=Tensor[(4, 36), uint16] */;
  %763 = reshape(%761, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %764 = reshape(%762, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %765 = @func_771(%763, %764) /* ty=(Tensor[(8, 3, 6), uint16],) */;
  %766 = cast(%var_5984, dtype="float64") /* ty=Tensor[(66), float64] */;
  %767 = reshape(%766, newshape=[66]) /* ty=Tensor[(66), float64] */;
  %768 = @func_3731(%767) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8], float64, Tensor[(66), float64], Tensor[(4, 4, 2), float32]) */;
  %769 = cast(%var_6001, dtype="float32") /* ty=Tensor[(660), float32] */;
  %770 = reshape(%769, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
  %771 = @func_2324(%770) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(5, 132), float32], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %772 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
  %773 = %760.1;
  %774 = %765.0;
  %775 = %768.2;
  %776 = %771.9;
  (%772, %773, %774, %var_5979, %775, %var_5984, %776, %var_6001)
}

def @func_12836() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %777 = @func_6301() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %778 = %777.0;
  %779 = @func_11329() /* ty=Tensor[(4, 4, 2), int8] */;
  (%778, %779)
}

def @func_12247(%var_12197: Tensor[(980, 8), int32]) -> (Tensor[(980, 8), uint8], Tensor[(980, 8), bool], Tensor[(4, 4, 2), int8]) {
  %780 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
  %781 = cast(%780, dtype="uint8") /* ty=Tensor[(980, ?), uint8] */;
  %782 = cast(%var_12197, dtype="uint8") /* ty=Tensor[(980, 8), uint8] */;
  %783 = cast(%var_12197, dtype="float64") /* ty=Tensor[(980, 8), float64] */;
  %784 = acos(%783) /* ty=Tensor[(980, 8), float64] */;
  %785 = cast(%784, dtype="float64") /* ty=Tensor[(980, 8), float64] */;
  %786 = tan(%785) /* ty=Tensor[(980, 8), float64] */;
  %787 = cast(%786, dtype="float64") /* ty=Tensor[(980, 8), float64] */;
  %788 = acosh(%787) /* ty=Tensor[(980, 8), float64] */;
  %789 = cast(%784, dtype="bool") /* ty=Tensor[(980, 8), bool] */;
  %790 = shape_of(%788, dtype="int32") /* ty=Tensor[(2), int32] */;
  %791 = cast(%788, dtype="bool") /* ty=Tensor[(980, 8), bool] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %793 = @func_10225() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %794 = subtract(%781, %782) /* ty=Tensor[(980, 8), uint8] */;
  %795 = not_equal(%791, %792) /* ty=Tensor[(980, 8), bool] */;
  %796 = %793.0;
  (%794, %795, %796)
}

def @func_13685() -> (Tensor[(4, 4, 2), int8],) {
  %797 = @func_10702() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %798 = %797.0;
  (%798,)
}

def @func_14184() -> (Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(10, 4, 10), float64], Tensor[(400), float64]) {
  %799 = @func_2132() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) */;
  %800 = cast(meta[relay.Constant][29] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %801 = reshape(%800, newshape=[10, 4, 10]) /* ty=Tensor[(10, 4, 10), float64] */;
  %802 = @func_14000(%801) /* ty=(Tensor[(10, 4, 10), float64],) */;
  %803 = @func_9391() /* ty=Tensor[(144), uint16] */;
  %804 = @func_9207() /* ty=Tensor[(4, 4, 2), int8] */;
  %805 = %799.1;
  %806 = %802.0;
  (%803, %804, %805, %806, meta[relay.Constant][29] /* ty=Tensor[(400), float64] */)
}

def @func_9858() -> (Tensor[(144), uint16], Tensor[(4, 4, 2), int8]) {
  %807 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %808 = @func_6897() /* ty=Tensor[(144), uint16] */;
  %809 = %807.0;
  (%808, %809)
}

def @func_15718() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
  %810 = @func_2753() /* ty=Tensor[(4, 4, 2), int8] */;
  %811 = @func_15619() /* ty=Tensor[(4, 4, 2), bool] */;
  (%810, %811)
}

def @func_16629(%var_16566: Tensor[(14, 70), uint16], %var_16569: Tensor[(14, 70), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(14, 70), bool], Tensor[(4, 4, 2), bool], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %812 = @func_3191() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
  %813 = cast(%var_16566, dtype="uint16") /* ty=Tensor[(14, 70), uint16] */;
  %814 = reshape(%813, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %815 = @func_1216(%814) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
  %816 = cast(%var_16569, dtype="bool") /* ty=Tensor[(14, 70), bool] */;
  %817 = shape_of(%var_16566, dtype="int32") /* ty=Tensor[(2), int32] */;
  %818 = cast(%var_16566, dtype="bool") /* ty=Tensor[(14, 70), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %820 = cast(%var_16566, dtype="uint16") /* ty=Tensor[(14, 70), uint16] */;
  %821 = reshape(%820, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %822 = @func_1276(%821) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %823 = @func_14123() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %824 = %812.0;
  %825 = %815.0;
  %826 = not_equal(%818, %819) /* ty=Tensor[(14, 70), bool] */;
  %827 = @func_12012() /* ty=Tensor[(4, 4, 2), bool] */;
  %828 = %822.3;
  %829 = %823.2;
  (%824, %825, %826, %827, %828, %829)
}

def @func_1276(%var_1266: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %830 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %831 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %832 = cast(%var_1266, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %833 = cast(%var_1266, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %834 = reshape(%832, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %835 = reshape(%833, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %836 = @func_1074(%834, %835) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
  %837 = %830.0;
  %838 = %831.0;
  %839 = %836.1;
  (%837, %838, %839, %var_1266)
}

def @func_1413() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %840 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %841 = cast(meta[relay.Constant][30] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %842 = reshape(%841, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %843 = @func_1276(%842) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %844 = %840.0;
  %845 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  %846 = %843.2;
  (%844, %845, %846, meta[relay.Constant][30] /* ty=Tensor[(980), uint16] */)
}

def @func_14284() -> (Tensor[(980, ?), int32],) {
  %847 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
  (%847,)
}

def @func_16299(%var_16278: Tensor[(9, 5, 16), uint16]) -> (Tensor[(9, 5, 16), uint64],) {
  %848 = cast(meta[relay.Constant][31] /* ty=Tensor[(9, 5, 1), uint16] */, dtype="uint16") /* ty=Tensor[(9, 5, 1), uint16] */;
  %849 = cast(%var_16278, dtype="uint16") /* ty=Tensor[(9, 5, 16), uint16] */;
  %850 = maximum(%848, %849) /* ty=Tensor[(9, 5, 16), uint16] */;
  %851 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 5, 16), uint16] */, dtype="uint64") /* ty=Tensor[(9, 5, 16), uint64] */;
  %852 = shape_of(%850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %853 = cast(%850, dtype="uint64") /* ty=Tensor[(9, 5, 16), uint64] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %855 = subtract(%853, %854) /* ty=Tensor[(9, 5, 16), uint64] */;
  (%855,)
}

def @func_7457(%var_7436: Tensor[(4, 4, 2), int8]) -> Tensor[(4, 4, 2), float32] {
  %856 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %857 = %856.0;
  %858 = cast(%var_7436, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
  %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%857, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%860, %861) /* ty=Tensor[(4, 4, 2), float32] */
}

def @func_3585(%var_3535: Tensor[(2, 11, 12), bool]) -> Tensor[(2, 11, 12), float64] {
  %862 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %863 = cast(%var_3535, dtype="bool") /* ty=Tensor[(2, 11, 12), bool] */;
  %864 = logical_and(%862, %863) /* ty=Tensor[(2, 11, 12), bool] */;
  %865 = cast(%864, dtype="float64") /* ty=Tensor[(2, 11, 12), float64] */;
  %866 = cast(False /* ty=bool */, dtype="float64") /* ty=float64 */;
  divide(%865, %866) /* ty=Tensor[(2, 11, 12), float64] */
}

def @func_4262() -> (Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(660), float32], Tensor[(980, 1), uint16]) {
  %867 = cast(meta[relay.Constant][33] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %868 = reshape(%867, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %869 = @func_1607(%868) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
  %870 = @func_3852() /* ty=(Tensor[(980, 1), uint16],) */;
  %871 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
  %872 = %869.1;
  %873 = %870.0;
  (%871, %872, meta[relay.Constant][33] /* ty=Tensor[(660), float32] */, %873)
}

def @func_16435(%var_16418: Tensor[(7, 3, 12), uint32], %var_16419: Tensor[(7, 3, 12), uint32]) -> Tensor[(7, 3, 12), bool] {
  %874 = cast(%var_16419, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
  %875 = shape_of(%var_16418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%var_16418, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%876, %877) /* ty=Tensor[(7, 3, 12), bool] */
}

def @func_4184(%var_4121: Tensor[(4, 4, 2), int8], %var_4147: Tensor[(1728), float64], %var_4163: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int64], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(16, 12, 9), float64], Tensor[(1728), float64], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %878 = @func_1818() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %879 = %878.0;
  %880 = cast(%var_4121, dtype="int64") /* ty=Tensor[(4, 4, 2), int64] */;
  %881 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
  %882 = cast(%879, dtype="int64") /* ty=Tensor[(4, 4, 2), int64] */;
  %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %884 = cast(meta[relay.Constant][34] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %885 = cast(meta[relay.Constant][34] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %886 = reshape(%884, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %887 = reshape(%885, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %888 = @func_771(%886, %887) /* ty=(Tensor[(8, 3, 6), uint16],) */;
  %889 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %890 = cast(%var_4147, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %891 = reshape(%890, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), float64] */;
  %892 = cast(%var_4163, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %893 = reshape(%892, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %894 = @func_1276(%893) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %895 = %888.0;
  %896 = cast(%895, dtype="uint16") /* ty=Tensor[(8, 3, 6), uint16] */;
  %897 = reshape(%896, newshape=[144]) /* ty=Tensor[(144), uint16] */;
  %898 = @func_972(%897) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16]) */;
  %899 = maximum(%882, %883) /* ty=Tensor[(4, 4, 2), int64] */;
  %900 = %889.1;
  %901 = @func_1987(%891) /* ty=Tensor[(16, 12, 9), float64] */;
  %902 = %894.2;
  %903 = %898.0;
  (%899, %895, meta[relay.Constant][34] /* ty=Tensor[(144), uint16] */, %900, %901, %var_4147, %902, %var_4163, %903)
}

def @func_16175() -> Tensor[(16, 7, 3), float32] {
  %904 = @func_12679() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %904.0
}

def @func_8393() -> Tensor[(4, 4, 2), int8] {
  @func_3511() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_12985() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %905 = @func_3523() /* ty=Tensor[(4, 4, 2), int8] */;
  %906 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
  (%905, %906)
}

def @func_14529() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %907 = @func_8617() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %908 = @func_4262() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(660), float32], Tensor[(980, 1), uint16]) */;
  %909 = @func_9235() /* ty=(Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(144), uint16]) */;
  %910 = @func_13502() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %911 = %907.2;
  %912 = %908.0;
  %913 = %909.0;
  %914 = %910.0;
  %915 = @func_3385() /* ty=Tensor[(4, 4, 2), int8] */;
  (%911, %912, %913, %914, %915)
}

def @main(%var_16940: Tensor[(8, 14, 16), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(8, 14, 16), float32], Tensor[(8, 14, 16), float64]) {
  %916 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %917 = cast(%var_16940, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %918 = cast(%var_16940, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %919 = rsqrt(%918) /* ty=Tensor[(8, 14, 16), float32] */;
  %920 = cast(%919, dtype="float64") /* ty=Tensor[(8, 14, 16), float64] */;
  %921 = %916.2;
  %922 = sqrt(%917) /* ty=Tensor[(8, 14, 16), float32] */;
  %923 = acosh(%920) /* ty=Tensor[(8, 14, 16), float64] */;
  (%921, %922, %923)
}

def @func_5322() -> (Tensor[(980), float64],) {
  %924 = @func_5145() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16]) */;
  %925 = %924.2;
  %926 = cast(%925, dtype="float32") /* ty=Tensor[(980), float32] */;
  %927 = log2(%926) /* ty=Tensor[(980), float32] */;
  %928 = cast(%927, dtype="float64") /* ty=Tensor[(980), float64] */;
  %929 = sinh(%928) /* ty=Tensor[(980), float64] */;
  (%929,)
}

def @func_14643() -> Tensor[(4, 4, 2), int8] {
  %930 = @func_3191() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
  %930.0
}

def @func_6744() -> Tensor[(4, 4, 2), bool] {
  %931 = @func_4487() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), bool]) */;
  %931.2
}

def @func_4524(%var_4495: Tensor[(7, 1, 5), float64]) -> (Tensor[(7, 1, 5), float64], Tensor[(980, ?), int32], Tensor[(4, 4, 2), int8]) {
  %932 = cast(%var_4495, dtype="float64") /* ty=Tensor[(7, 1, 5), float64] */;
  %933 = rsqrt(%932) /* ty=Tensor[(7, 1, 5), float64] */;
  %934 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
  %935 = @func_4279() /* ty=Tensor[(4, 4, 2), int8] */;
  (%933, %934, %935)
}

def @func_14123() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %936 = @func_1725() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) */;
  %937 = @func_11094() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %938 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %939 = @func_12958() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %940 = @func_13911() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %941 = %936.0;
  %942 = %937.0;
  %943 = %938.1;
  %944 = %939.1;
  %945 = %940.0;
  (%941, %942, %943, %944, %945)
}

def @func_7553(%var_7543: Tensor[(980, 2), uint16]) -> (Tensor[(980, 2), uint8],) {
  %946 = @func_4262() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(660), float32], Tensor[(980, 1), uint16]) */;
  %947 = %946.3;
  %948 = cast(%947, dtype="uint8") /* ty=Tensor[(980, 1), uint8] */;
  %949 = cast(%var_7543, dtype="uint8") /* ty=Tensor[(980, 2), uint8] */;
  %950 = bitwise_or(%948, %949) /* ty=Tensor[(980, 2), uint8] */;
  (%950,)
}

def @func_10813() -> (Tensor[(4, 4, 2), int8],) {
  %951 = @func_4379() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %952 = %951.0;
  (%952,)
}

def @func_4788() -> (Tensor[(4, 4, 2), int8],) {
  %953 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
  (%953,)
}

def @func_10225() -> (Tensor[(4, 4, 2), int8],) {
  %954 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
  (%954,)
}

def @func_4031() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) {
  %955 = @func_3158() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %956 = @func_2397() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %957 = cast(meta[relay.Constant][35] /* ty=Tensor[(980, 1), uint16] */, dtype="uint16") /* ty=Tensor[(980, 1), uint16] */;
  %958 = reshape(%957, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %959 = @func_1276(%958) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %960 = @func_1953() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %961 = %955.0;
  %962 = %956.2;
  %963 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
  %964 = @func_2806() /* ty=Tensor[(4, 4, 2), int8] */;
  %965 = %959.3;
  %966 = %960.0;
  (%961, %962, %963, %964, %965, meta[relay.Constant][35] /* ty=Tensor[(980, 1), uint16] */, %966)
}

def @func_14264() -> Tensor[(490, 2), float32] {
  %967 = @func_10176() /* ty=(Tensor[(490, 2), float32],) */;
  %967.0
}

def @func_8369() -> (Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32]) {
  %968 = @func_3064() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %969 = @func_7836() /* ty=Tensor[(4, 4, 2), int8] */;
  %970 = %968.0;
  (%969, %970)
}

def @func_13615() -> (Tensor[(3, 13, 10), float32],) {
  %971 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 13, 10), float32] */;
  %972 = sin(%971) /* ty=Tensor[(3, 13, 10), float32] */;
  (%972,)
}

def @func_2324(%var_2189: Tensor[(5, 132), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(5, 132), float32], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %973 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %974 = cast(%var_2189, dtype="float32") /* ty=Tensor[(5, 132), float32] */;
  %975 = reshape(%974, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %976 = @func_1607(%975) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
  %977 = @func_2132() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) */;
  %978 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %979 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %980 = %979.0;
  %981 = cast(%980, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
  %982 = log2(%981) /* ty=Tensor[(4, 4, 2), float64] */;
  %983 = cast(%982, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
  %984 = cast(meta[relay.Constant][37] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %985 = cast(meta[relay.Constant][37] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %986 = reshape(%984, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %987 = reshape(%985, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %988 = @func_2075(%986, %987) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) */;
  %989 = cast(meta[relay.Constant][38] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %990 = cast(meta[relay.Constant][38] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %991 = reshape(%989, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %992 = reshape(%990, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %993 = @func_771(%991, %992) /* ty=(Tensor[(8, 3, 6), uint16],) */;
  %994 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %995 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %996 = %973.0;
  %997 = %976.2;
  %998 = %977.1;
  %999 = %978.0;
  %1000 = asin(%983) /* ty=Tensor[(4, 4, 2), float64] */;
  %1001 = %988.1;
  %1002 = %993.0;
  %1003 = %994.0;
  %1004 = %995.0;
  (%996, %997, %var_2189, %998, %999, %1000, %1001, meta[relay.Constant][37] /* ty=Tensor[(1680), uint32] */, %1002, meta[relay.Constant][38] /* ty=Tensor[(144), uint16] */, %1003, %1004)
}

def @func_5341() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1005 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1006 = @func_4093() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1007 = %1005.0;
  %1008 = %1006.2;
  (%1007, %1008)
}

def @func_771(%var_742: Tensor[(8, 3, 6), uint16], %var_743: Tensor[(8, 3, 6), uint16]) -> (Tensor[(8, 3, 6), uint16],) {
  %1009 = cast(%var_743, dtype="uint16") /* ty=Tensor[(8, 3, 6), uint16] */;
  %1010 = shape_of(%var_742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%var_742, dtype="uint16") /* ty=Tensor[(8, 3, 6), uint16] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1013 = maximum(%1011, %1012) /* ty=Tensor[(8, 3, 6), uint16] */;
  (%1013,)
}

def @func_11523(%var_11520: Tensor[(15, 6, 13), float64]) -> Tensor[(15, 6, 13), float64] {
  %1014 = cast(%var_11520, dtype="float64") /* ty=Tensor[(15, 6, 13), float64] */;
  erf(%1014) /* ty=Tensor[(15, 6, 13), float64] */
}

def @func_806() -> (Tensor[(4, 4, 2), int8],) {
  %1015 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 4, 2), int8] */, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %1016 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(4, 4, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 4, 2), int8] */, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1019 = minimum(%1017, %1018) /* ty=Tensor[(4, 4, 2), int8] */;
  (%1019,)
}

def @func_6662() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1020 = @func_3191() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
  %1021 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
  %1022 = @func_3385() /* ty=Tensor[(4, 4, 2), int8] */;
  %1023 = %1020.0;
  (%1021, %1022, %1023)
}

def @func_1308() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) {
  %1024 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %1025 = cast(meta[relay.Constant][41] /* ty=Tensor[(980, 1), uint16] */, dtype="uint16") /* ty=Tensor[(980, 1), uint16] */;
  %1026 = reshape(%1025, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %1027 = @func_1216(%1026) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
  %1028 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1029 = %1024.0;
  %1030 = %1027.0;
  %1031 = %1028.0;
  (%1029, %1030, meta[relay.Constant][41] /* ty=Tensor[(980, 1), uint16] */, %1031)
}

def @func_8831(%var_8814: Tensor[(84, 20), uint32], %var_8816: Tensor[(84, 20), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(84, 20), bool]) {
  %1032 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1033 = cast(%var_8814, dtype="uint32") /* ty=Tensor[(84, 20), uint32] */;
  %1034 = cast(%var_8814, dtype="uint32") /* ty=Tensor[(84, 20), uint32] */;
  %1035 = reshape(%1033, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %1036 = reshape(%1034, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %1037 = @func_2075(%1035, %1036) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) */;
  %1038 = cast(%var_8816, dtype="int64") /* ty=Tensor[(84, 20), int64] */;
  %1039 = shape_of(%var_8814, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1040 = cast(%var_8814, dtype="int64") /* ty=Tensor[(84, 20), int64] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1042 = bitwise_or(%1040, %1041) /* ty=Tensor[(84, 20), int64] */;
  %1043 = cast(%var_8814, dtype="bool") /* ty=Tensor[(84, 20), bool] */;
  %1044 = shape_of(%1042, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1045 = cast(%1042, dtype="bool") /* ty=Tensor[(84, 20), bool] */;
  %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1047 = %1032.0;
  %1048 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
  %1049 = %1037.1;
  %1050 = not_equal(%1045, %1046) /* ty=Tensor[(84, 20), bool] */;
  (%1047, %1048, %1049, %1050)
}

def @func_13836() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8]) {
  %1051 = @func_10225() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1052 = @func_10635() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1053 = %1051.0;
  %1054 = cast(%1053, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %1055 = reshape(%1054, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %1056 = %1052.0;
  %1057 = @func_2682(%1055) /* ty=Tensor[(4, 4, 2), float32] */;
  %1058 = @func_2806() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1053, %1056, %1057, %1058)
}

def @func_5635(%var_5614: Tensor[(2, 864), float64], %var_5615: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), float32], Tensor[(144), uint16], Tensor[(2, 864), float64], Tensor[(980), uint16]) {
  %1059 = @func_3872() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1060 = @func_4589() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(8, 3, 6), float32]) */;
  %1061 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
  %1062 = cast(%1061, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %1063 = cast(%var_5614, dtype="float64") /* ty=Tensor[(2, 864), float64] */;
  %1064 = cast(%var_5615, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %1065 = reshape(%1062, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %1066 = reshape(%1063, newshape=[1728]) /* ty=Tensor[(1728), float64] */;
  %1067 = reshape(%1064, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %1068 = @func_4184(%1065, %1066, %1067) /* ty=(Tensor[(4, 4, 2), int64], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(16, 12, 9), float64], Tensor[(1728), float64], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %1069 = @func_3385() /* ty=Tensor[(4, 4, 2), int8] */;
  %1070 = %1059.0;
  %1071 = %1060.4;
  %1072 = %1068.2;
  (%1069, %1061, %1070, %1071, %1072, %var_5614, %var_5615)
}

def @func_10428(%var_10406: Tensor[(3, 4, 6), float32]) -> (Tensor[(3, 4, 6), bool], Tensor[(4, 4, 2), int8]) {
  %1073 = cast(%var_10406, dtype="float32") /* ty=Tensor[(3, 4, 6), float32] */;
  %1074 = log2(%1073) /* ty=Tensor[(3, 4, 6), float32] */;
  %1075 = cast(%1074, dtype="bool") /* ty=Tensor[(3, 4, 6), bool] */;
  %1076 = shape_of(%var_10406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1077 = cast(%var_10406, dtype="bool") /* ty=Tensor[(3, 4, 6), bool] */;
  %1078 = dyn.reshape(%1075, %1076, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1079 = less(%1077, %1078) /* ty=Tensor[(3, 4, 6), bool] */;
  %1080 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1079, %1080)
}

def @func_10742(%var_10737: Tensor[(36), uint64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(2, 11, 12), float64], Tensor[(264), bool], Tensor[(1, 3, 12), uint64], uint64, Tensor[(36), uint64]) {
  %1081 = @func_6499() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1082 = cast(meta[relay.Constant][42] /* ty=Tensor[(264), bool] */, dtype="bool") /* ty=Tensor[(264), bool] */;
  %1083 = reshape(%1082, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), bool] */;
  %1084 = cast(meta[relay.Constant][43] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1085 = cast(%var_10737, dtype="uint64") /* ty=Tensor[(36), uint64] */;
  %1086 = reshape(%1084, newshape=[]) /* ty=uint64 */;
  %1087 = reshape(%1085, newshape=[1, 3, 12]) /* ty=Tensor[(1, 3, 12), uint64] */;
  %1088 = %1081.0;
  %1089 = @func_7510() /* ty=Tensor[(4, 4, 2), int8] */;
  %1090 = @func_3585(%1083) /* ty=Tensor[(2, 11, 12), float64] */;
  %1091 = @func_6875(%1086, %1087) /* ty=Tensor[(1, 3, 12), uint64] */;
  (%1088, %1089, %1090, meta[relay.Constant][42] /* ty=Tensor[(264), bool] */, %1091, meta[relay.Constant][43] /* ty=uint64 */, %var_10737)
}

def @func_16848() -> Tensor[(4, 4, 2), int8] {
  %1092 = @func_8650() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1092.0
}

def @func_12140(%var_12096: Tensor[(1, 15, 9), uint64], %var_12097: Tensor[(9, 15, 9), uint64], %var_12137: Tensor[(1170), float64]) -> (Tensor[(9, 15, 9), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(15, 6, 13), float64], Tensor[(1170), float64]) {
  %1093 = cast(%var_12096, dtype="uint64") /* ty=Tensor[(1, 15, 9), uint64] */;
  %1094 = cast(%var_12097, dtype="uint64") /* ty=Tensor[(9, 15, 9), uint64] */;
  %1095 = subtract(%1093, %1094) /* ty=Tensor[(9, 15, 9), uint64] */;
  %1096 = cast(%1095, dtype="float32") /* ty=Tensor[(9, 15, 9), float32] */;
  %1097 = @func_3191() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
  %1098 = cast(%var_12137, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1099 = reshape(%1098, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float64] */;
  %1100 = tan(%1096) /* ty=Tensor[(9, 15, 9), float32] */;
  %1101 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  %1102 = %1097.0;
  %1103 = @func_11523(%1099) /* ty=Tensor[(15, 6, 13), float64] */;
  (%1100, %1101, %1102, %1103, %var_12137)
}

def @func_6353() -> Tensor[(4, 4, 2), int8] {
  %1104 = @func_3158() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1104.0
}

def @func_13911() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1105 = @func_4814() /* ty=Tensor[(4, 4, 2), int8] */;
  %1106 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1105, %1106)
}

def @func_9959(%var_9932: uint64) -> (Tensor[(980, 12), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(1, 3, 12), uint64], uint64, Tensor[(36), uint64], Tensor[(4, 4, 2), int8]) {
  %1107 = @func_1725() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) */;
  %1108 = %1107.3;
  %1109 = cast(%1108, dtype="float32") /* ty=Tensor[(980, ?), float32] */;
  %1110 = cast(meta[relay.Constant][44] /* ty=Tensor[(980, 12), float64] */, dtype="float32") /* ty=Tensor[(980, 12), float32] */;
  %1111 = mod(%1109, %1110) /* ty=Tensor[(980, 12), float32] */;
  %1112 = cast(%1108, dtype="int8") /* ty=Tensor[(980, ?), int8] */;
  %1113 = cast(%1111, dtype="int8") /* ty=Tensor[(980, 12), int8] */;
  %1114 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %1115 = cast(%var_9932, dtype="uint64") /* ty=uint64 */;
  %1116 = cast(meta[relay.Constant][45] /* ty=Tensor[(36), uint64] */, dtype="uint64") /* ty=Tensor[(36), uint64] */;
  %1117 = reshape(%1115, newshape=[]) /* ty=uint64 */;
  %1118 = reshape(%1116, newshape=[1, 3, 12]) /* ty=Tensor[(1, 3, 12), uint64] */;
  %1119 = bitwise_or(%1112, %1113) /* ty=Tensor[(980, 12), int8] */;
  %1120 = %1114.0;
  %1121 = @func_7620() /* ty=Tensor[(4, 4, 2), int8] */;
  %1122 = @func_6875(%1117, %1118) /* ty=Tensor[(1, 3, 12), uint64] */;
  %1123 = @func_6756() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1119, %1120, %1121, %1122, %var_9932, meta[relay.Constant][45] /* ty=Tensor[(36), uint64] */, %1123)
}

def @func_1074(%var_1057: Tensor[(10, 14, 7), uint16], %var_1058: Tensor[(10, 14, 7), uint16]) -> (Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) {
  %1124 = cast(%var_1058, dtype="uint16") /* ty=Tensor[(10, 14, 7), uint16] */;
  %1125 = shape_of(%var_1057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1126 = cast(%var_1057, dtype="uint16") /* ty=Tensor[(10, 14, 7), uint16] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1128 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1129 = bitwise_or(%1126, %1127) /* ty=Tensor[(10, 14, 7), uint16] */;
  %1130 = %1128.0;
  (%1129, %1130)
}

def @func_7356() -> Tensor[(4, 4, 2), int8] {
  %1131 = @func_6544() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1131.0
}

def @func_16367() -> (Tensor[(4, 4, 2), int8],) {
  %1132 = @func_13971() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1133 = %1132.0;
  (%1133,)
}

def @func_12590() -> Tensor[(4, 4, 2), int8] {
  %1134 = @func_4788() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1134.0
}

def @func_8052(%var_8012: Tensor[(110, 6), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(110, 6), float32], Tensor[(980, ?), int16], Tensor[(980), uint16], Tensor[(980, 1), float64]) {
  %1135 = cast(%var_8012, dtype="float32") /* ty=Tensor[(110, 6), float32] */;
  %1136 = reshape(%1135, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
  %1137 = @func_2324(%1136) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(5, 132), float32], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1138 = @func_4262() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(660), float32], Tensor[(980, 1), uint16]) */;
  %1139 = %1138.3;
  %1140 = cast(%1139, dtype="float64") /* ty=Tensor[(980, 1), float64] */;
  %1141 = asinh(%1140) /* ty=Tensor[(980, 1), float64] */;
  %1142 = cast(%1139, dtype="int16") /* ty=Tensor[(980, 1), int16] */;
  %1143 = shape_of(%1141, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1144 = cast(%1141, dtype="int16") /* ty=Tensor[(980, 1), int16] */;
  %1145 = dyn.reshape(%1142, %1143, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1146 = cast(%var_8012, dtype="float32") /* ty=Tensor[(110, 6), float32] */;
  %1147 = reshape(%1146, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %1148 = @func_1607(%1147) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
  %1149 = cast(%1141, dtype="float64") /* ty=Tensor[(980, 1), float64] */;
  %1150 = %1137.4;
  %1151 = add(%1144, %1145) /* ty=Tensor[(980, ?), int16] */;
  %1152 = %1148.2;
  %1153 = cosh(%1149) /* ty=Tensor[(980, 1), float64] */;
  (%1150, %var_8012, %1151, %1152, %1153)
}

def @func_8162() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1154 = @func_6499() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1155 = @func_7510() /* ty=Tensor[(4, 4, 2), int8] */;
  %1156 = %1154.0;
  (%1155, %1156)
}

def @func_6060() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1157 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1158 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1159 = %1157.0;
  %1160 = %1158.0;
  (%1159, %1160)
}

def @func_910() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
  %1161 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1162 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1163 = %1162.0;
  %1164 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1165 = %1164.0;
  %1166 = cast(%1165, dtype="bool") /* ty=Tensor[(4, 4, 2), bool] */;
  %1167 = shape_of(%1163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1168 = cast(%1163, dtype="bool") /* ty=Tensor[(4, 4, 2), bool] */;
  %1169 = dyn.reshape(%1166, %1167, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1170 = %1161.0;
  %1171 = logical_and(%1168, %1169) /* ty=Tensor[(4, 4, 2), bool] */;
  (%1170, %1171)
}

def @func_14219(%var_14187: Tensor[(15, 12, 11), float64], %var_14188: Tensor[(15, 12, 11), float64]) -> (Tensor[(15, 12, 11), int16],) {
  %1172 = cast(%var_14188, dtype="bool") /* ty=Tensor[(15, 12, 11), bool] */;
  %1173 = shape_of(%var_14187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1174 = cast(%var_14187, dtype="bool") /* ty=Tensor[(15, 12, 11), bool] */;
  %1175 = dyn.reshape(%1172, %1173, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1176 = greater_equal(%1174, %1175) /* ty=Tensor[(15, 12, 11), bool] */;
  %1177 = cast(%1176, dtype="int16") /* ty=Tensor[(15, 12, 11), int16] */;
  %1178 = shape_of(%var_14188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1179 = cast(%var_14188, dtype="int16") /* ty=Tensor[(15, 12, 11), int16] */;
  %1180 = dyn.reshape(%1177, %1178, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1181 = add(%1179, %1180) /* ty=Tensor[(15, 12, 11), int16] */;
  (%1181,)
}

def @func_5537(%var_5523: Tensor[(980), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(980), bool]) {
  %1182 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1183 = @func_5322() /* ty=(Tensor[(980), float64],) */;
  %1184 = %1183.0;
  %1185 = cast(%var_5523, dtype="bool") /* ty=Tensor[(980), bool] */;
  %1186 = shape_of(%1184, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1187 = cast(%1184, dtype="bool") /* ty=Tensor[(980), bool] */;
  %1188 = dyn.reshape(%1185, %1186, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1189 = %1182.0;
  %1190 = greater(%1187, %1188) /* ty=Tensor[(980), bool] */;
  (%1189, %1190)
}

def @func_11825(%var_11814: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %1191 = @func_10813() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1192 = cast(%var_11814, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %1193 = reshape(%1192, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %1194 = @func_2883(%1193) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %1195 = %1191.0;
  %1196 = %1194.0;
  (%1195, %1196, %var_11814)
}

def @func_1503() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
  %1197 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1198 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %1199 = %1197.0;
  %1200 = %1198.1;
  (%1199, %1200)
}

def @func_10016() -> Tensor[(4, 4, 2), int8] {
  @func_7356() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_3106(%var_3092: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %1201 = @func_1553() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1202 = cast(%var_3092, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %1203 = reshape(%1202, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %1204 = @func_1276(%1203) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %1205 = %1201.0;
  %1206 = %1204.2;
  (%1205, %1206, %var_3092)
}

def @func_8283() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1207 = @func_7667() /* ty=Tensor[(4, 4, 2), int8] */;
  %1208 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1207, %1208)
}

def @func_4589() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(8, 3, 6), float32]) {
  %1209 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1210 = @func_2932() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1211 = @func_4487() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), bool]) */;
  %1212 = cast(meta[relay.Constant][46] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %1213 = reshape(%1212, newshape=[144]) /* ty=Tensor[(144), uint16] */;
  %1214 = @func_972(%1213) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16]) */;
  %1215 = %1214.1;
  %1216 = cast(%1215, dtype="float32") /* ty=Tensor[(8, 3, 6), float32] */;
  %1217 = %1209.0;
  %1218 = %1210.1;
  %1219 = %1211.0;
  %1220 = log2(%1216) /* ty=Tensor[(8, 3, 6), float32] */;
  (%1217, %1218, %1219, meta[relay.Constant][46] /* ty=Tensor[(144), uint16] */, %1220)
}

def @func_7889(%var_7883: Tensor[(1680), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) {
  %1221 = @func_5341() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1222 = cast(%var_7883, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %1223 = cast(%var_7883, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %1224 = reshape(%1222, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %1225 = reshape(%1223, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %1226 = @func_2075(%1224, %1225) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) */;
  %1227 = %1221.1;
  %1228 = @func_4814() /* ty=Tensor[(4, 4, 2), int8] */;
  %1229 = %1226.0;
  (%1227, %1228, %1229, %var_7883)
}

def @func_14906(%var_14880: Tensor[(144), uint16], %var_14882: Tensor[(660), float32]) -> (Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1230 = @func_2719() /* ty=(Tensor[(980), uint16],) */;
  %1231 = cast(%var_14880, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %1232 = cast(meta[relay.Constant][47] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %1233 = cast(%var_14882, dtype="float32") /* ty=Tensor[(660), float32] */;
  %1234 = reshape(%1231, newshape=[144]) /* ty=Tensor[(144), uint16] */;
  %1235 = reshape(%1232, newshape=[66]) /* ty=Tensor[(66), float64] */;
  %1236 = reshape(%1233, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %1237 = @func_11296(%1234, %1235, %1236) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32]) */;
  %1238 = %1230.0;
  %1239 = %1237.1;
  %1240 = @func_7155() /* ty=Tensor[(4, 4, 2), int8] */;
  %1241 = @func_8736() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1238, %1239, %var_14880, meta[relay.Constant][47] /* ty=Tensor[(66), float64] */, %var_14882, %1240, %1241)
}

def @func_4379() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1242 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1243 = %1242.0;
  %1244 = @func_2583() /* ty=Tensor[(4, 4, 2), int8] */;
  %1245 = @func_4279() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1243, %1244, %1245)
}

def @func_8617() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1246 = @func_4788() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1247 = @func_8283() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1248 = @func_8393() /* ty=Tensor[(4, 4, 2), int8] */;
  %1249 = %1246.0;
  %1250 = %1247.0;
  (%1248, %1249, %1250)
}

def @func_2682(%var_2663: Tensor[(4, 4, 2), int8]) -> Tensor[(4, 4, 2), float32] {
  %1251 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1252 = %1251.0;
  %1253 = cast(%var_2663, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
  %1254 = shape_of(%1252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1255 = cast(%1252, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
  %1256 = dyn.reshape(%1253, %1254, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%1255, %1256) /* ty=Tensor[(4, 4, 2), float32] */
}

def @func_4732() -> Tensor[(4, 4, 2), int8] {
  @func_4279() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_12012() -> Tensor[(4, 4, 2), bool] {
  @func_6744() /* ty=Tensor[(4, 4, 2), bool] */
}

def @func_2551() -> (Tensor[(4, 4, 2), int8],) {
  %1257 = @func_2132() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) */;
  %1258 = %1257.0;
  (%1258,)
}

def @func_2771() -> (Tensor[(4, 4, 2), int8],) {
  %1259 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1260 = %1259.0;
  (%1260,)
}

def @func_9096() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) {
  %1261 = @func_4814() /* ty=Tensor[(4, 4, 2), int8] */;
  %1262 = cast(%1261, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %1263 = reshape(%1262, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %1264 = @func_2682(%1263) /* ty=Tensor[(4, 4, 2), float32] */;
  (%1261, %1264)
}

def @func_7189(%var_7185: Tensor[(1, 35), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(1, 35), float64]) {
  %1265 = cast(%var_7185, dtype="float64") /* ty=Tensor[(1, 35), float64] */;
  %1266 = reshape(%1265, newshape=[35]) /* ty=Tensor[(35), float64] */;
  %1267 = @func_6406(%1266) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(7, 14, 5), uint64], Tensor[(4, 4, 2), int8]) */;
  %1268 = @func_6756() /* ty=Tensor[(4, 4, 2), int8] */;
  %1269 = %1267.2;
  (%1268, %1269, %var_7185)
}

def @func_11645() -> Tensor[(4, 4, 2), int8] {
  %1270 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1270.0
}

def @func_7667() -> Tensor[(4, 4, 2), int8] {
  %1271 = @func_7027() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1271.0
}

def @func_13502() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1272 = @func_3872() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1273 = @func_8393() /* ty=Tensor[(4, 4, 2), int8] */;
  %1274 = %1272.0;
  (%1273, %1274)
}

def @func_6191() -> (Tensor[(4, 4, 2), int8],) {
  %1275 = @func_4379() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1276 = %1275.1;
  (%1276,)
}

def @func_8459() -> Tensor[(4, 4, 2), int8] {
  @func_4856() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_4487() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), bool]) {
  %1277 = @func_3249() /* ty=(Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1278 = %1277.2;
  %1279 = cast(%1278, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %1280 = reshape(%1279, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %1281 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %1282 = @func_2682(%1280) /* ty=Tensor[(4, 4, 2), float32] */;
  %1283 = %1281.1;
  (%1278, %1282, %1283)
}

def @func_3158() -> (Tensor[(4, 4, 2), int8],) {
  %1284 = @func_1553() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1285 = %1284.0;
  (%1285,)
}

def @func_2883(%var_2856: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %1286 = cast(%var_2856, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %1287 = reshape(%1286, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %1288 = @func_1216(%1287) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
  %1289 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1290 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  %1291 = @func_2583() /* ty=Tensor[(4, 4, 2), int8] */;
  %1292 = %1288.3;
  %1293 = %1289.0;
  (%1290, %1291, %1292, %var_2856, %1293)
}

def @func_14028(%var_14025: Tensor[(1728), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(1728), float64], Tensor[(490, 2), uint16]) {
  %1294 = @func_1725() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) */;
  %1295 = cast(%var_14025, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %1296 = cast(meta[relay.Constant][48] /* ty=Tensor[(490, 2), uint16] */, dtype="uint16") /* ty=Tensor[(490, 2), uint16] */;
  %1297 = reshape(%1295, newshape=[2, 864]) /* ty=Tensor[(2, 864), float64] */;
  %1298 = reshape(%1296, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %1299 = @func_5635(%1297, %1298) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), float32], Tensor[(144), uint16], Tensor[(2, 864), float64], Tensor[(980), uint16]) */;
  %1300 = %1294.0;
  %1301 = %1299.2;
  (%1300, %1301, %var_14025, meta[relay.Constant][48] /* ty=Tensor[(490, 2), uint16] */)
}

def @func_2515() -> (Tensor[(4, 4, 2), int8],) {
  %1302 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1302,)
}

def @func_4999() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(490, 2), uint16]) {
  %1303 = cast(meta[relay.Constant][49] /* ty=Tensor[(490, 2), uint16] */, dtype="uint16") /* ty=Tensor[(490, 2), uint16] */;
  %1304 = reshape(%1303, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %1305 = @func_4909(%1304) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %1306 = @func_2753() /* ty=Tensor[(4, 4, 2), int8] */;
  %1307 = %1305.2;
  (%1306, %1307, meta[relay.Constant][49] /* ty=Tensor[(490, 2), uint16] */)
}

def @func_10157() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1308 = @func_5209() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1309 = @func_8677() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1310 = %1308.2;
  %1311 = %1309.0;
  (%1310, %1311)
}

def @func_3191() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) {
  %1312 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  %1313 = cast(%1312, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %1314 = reshape(%1313, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %1315 = @func_2682(%1314) /* ty=Tensor[(4, 4, 2), float32] */;
  (%1312, %1315)
}

def @func_2806() -> Tensor[(4, 4, 2), int8] {
  @func_2753() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_4702(%var_4600: Tensor[(15, 8, 2), int64], %var_4601: Tensor[(15, 8, 2), int64]) -> (Tensor[(15, 8, 2), bool], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8]) {
  %1316 = cast(%var_4601, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
  %1317 = shape_of(%var_4600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1318 = cast(%var_4600, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
  %1319 = dyn.reshape(%1316, %1317, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1320 = cast(meta[relay.Constant][50] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %1321 = cast(meta[relay.Constant][50] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %1322 = reshape(%1320, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %1323 = reshape(%1321, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %1324 = @func_771(%1322, %1323) /* ty=(Tensor[(8, 3, 6), uint16],) */;
  %1325 = @func_2932() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1326 = not_equal(%1318, %1319) /* ty=Tensor[(15, 8, 2), bool] */;
  %1327 = %1324.0;
  %1328 = %1325.0;
  (%1326, %1327, meta[relay.Constant][50] /* ty=Tensor[(144), uint16] */, %1328)
}

def @func_3744() -> (Tensor[(4, 4, 2), int8],) {
  %1329 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1329,)
}

def @func_10176() -> (Tensor[(490, 2), float32],) {
  %1330 = @func_4999() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(490, 2), uint16]) */;
  %1331 = %1330.2;
  %1332 = cast(%1331, dtype="float32") /* ty=Tensor[(490, 2), float32] */;
  %1333 = erf(%1332) /* ty=Tensor[(490, 2), float32] */;
  (%1333,)
}

def @func_9147() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1334 = @func_1818() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1335 = @func_6756() /* ty=Tensor[(4, 4, 2), int8] */;
  %1336 = %1334.0;
  (%1335, %1336)
}

def @func_13270() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1337 = @func_6191() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1338 = @func_12856() /* ty=Tensor[(16, 15, 7), float64] */;
  %1339 = cast(%1338, dtype="float32") /* ty=Tensor[(16, 15, 7), float32] */;
  %1340 = @func_6301() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1341 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
  %1342 = @func_7356() /* ty=Tensor[(4, 4, 2), int8] */;
  %1343 = %1337.0;
  %1344 = atanh(%1339) /* ty=Tensor[(16, 15, 7), float32] */;
  %1345 = %1340.1;
  %1346 = %1341.1;
  (%1342, %1343, %1344, %1345, %1346)
}

def @func_3523() -> Tensor[(4, 4, 2), int8] {
  %1347 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1347.0
}

def @func_10702() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1348 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1349 = @func_3158() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1350 = %1348.0;
  %1351 = %1349.0;
  (%1350, %1351)
}

def @func_2075(%var_2045: Tensor[(16, 15, 7), uint32], %var_2046: Tensor[(16, 15, 7), uint32]) -> (Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) {
  %1352 = cast(%var_2046, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
  %1353 = shape_of(%var_2045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1354 = cast(%var_2045, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
  %1355 = dyn.reshape(%1352, %1353, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1356 = right_shift(%1354, %1355) /* ty=Tensor[(16, 15, 7), uint32] */;
  %1357 = cast(%1356, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
  %1358 = shape_of(%var_2045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1359 = cast(%var_2045, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
  %1360 = dyn.reshape(%1357, %1358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1361 = logical_xor(%1359, %1360) /* ty=Tensor[(16, 15, 7), uint32] */;
  %1362 = cast(%1361, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %1363 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %1364 = log10(%1362) /* ty=Tensor[(16, 15, 7), float64] */;
  %1365 = %1363.0;
  (%1364, %1365)
}

def @func_11463() -> (Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32]) {
  %1366 = @func_10253() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32], Tensor[(10, 66), float32]) */;
  %1367 = @func_6191() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1368 = cast(meta[relay.Constant][51] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %1369 = reshape(%1368, newshape=[1680]) /* ty=Tensor[(1680), uint32] */;
  %1370 = @func_7889(%1369) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) */;
  %1371 = %1370.3;
  %1372 = cast(%1371, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %1373 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(1680), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1374 = cast(meta[relay.Constant][51] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %1375 = dyn.reshape(%1372, %1373, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %1376 = %1366.2;
  %1377 = %1367.0;
  %1378 = bitwise_xor(%1374, %1375) /* ty=Tensor[(1680), uint32] */;
  (%1376, %1377, %1378)
}

def @func_11296(%var_11277: Tensor[(144), uint16], %var_11278: Tensor[(66), float64], %var_11279: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32]) {
  %1379 = cast(%var_11277, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %1380 = cast(%var_11278, dtype="float64") /* ty=Tensor[(66), float64] */;
  %1381 = cast(%var_11279, dtype="float32") /* ty=Tensor[(660), float32] */;
  %1382 = reshape(%1379, newshape=[4, 36]) /* ty=Tensor[(4, 36), uint16] */;
  %1383 = reshape(%1380, newshape=[66]) /* ty=Tensor[(66), float64] */;
  %1384 = reshape(%1381, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %1385 = @func_6020(%1382, %1383, %1384) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(4, 36), uint16], Tensor[(4, 4, 2), int8], Tensor[(66), float64], Tensor[(144), uint16], Tensor[(660), float32]) */;
  %1386 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
  %1387 = %1385.0;
  (%1386, %1387, %var_11277, %var_11278, %var_11279)
}

def @func_15521() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1388 = @func_9449() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1389 = @func_10157() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1390 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
  %1391 = %1388.0;
  %1392 = %1389.1;
  %1393 = %1390.1;
  (%1391, %1392, %1393)
}

def @func_8524() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(16, 15, 7), float64], Tensor[(660), float32]) {
  %1394 = cast(meta[relay.Constant][52] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %1395 = cast(meta[relay.Constant][52] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %1396 = reshape(%1394, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %1397 = reshape(%1395, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %1398 = @func_1074(%1396, %1397) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
  %1399 = cast(meta[relay.Constant][53] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %1400 = reshape(%1399, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %1401 = @func_5953(%1400) /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) */;
  %1402 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
  %1403 = %1398.1;
  %1404 = %1401.2;
  (%1402, %1403, meta[relay.Constant][52] /* ty=Tensor[(980), uint16] */, %1404, meta[relay.Constant][53] /* ty=Tensor[(660), float32] */)
}

def @func_3852() -> (Tensor[(980, 1), uint16],) {
  %1405 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %1406 = %1405.2;
  (%1406,)
}

def @func_10774() -> Tensor[(4, 4, 2), int8] {
  %1407 = @func_9147() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1407.1
}

def @func_16116() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
  %1408 = @func_13971() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1409 = @func_14963() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1410 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
  %1411 = %1408.0;
  %1412 = %1409.3;
  %1413 = %1410.0;
  (%1411, %1412, %1413)
}

def @func_11604() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1414 = @func_8125() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1415 = @func_10016() /* ty=Tensor[(4, 4, 2), int8] */;
  %1416 = %1414.0;
  (%1415, %1416)
}

def @func_15188() -> Tensor[(4, 4, 2), int8] {
  %1417 = @func_6191() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1417.0
}

def @func_15403() -> (Tensor[(10, 14, 7), uint16],) {
  %1418 = @func_13149() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(10, 14, 7), uint16]) */;
  %1419 = %1418.1;
  (%1419,)
}

def @func_3064() -> (Tensor[(16, 7, 3), float32],) {
  %1420 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 3), float32] */;
  %1421 = sqrt(%1420) /* ty=Tensor[(16, 7, 3), float32] */;
  (%1421,)
}

def @func_11094() -> (Tensor[(4, 4, 2), int8],) {
  %1422 = @func_9280() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1422,)
}

def @func_5762() -> (Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) {
  %1423 = @func_1553() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1424 = cast(meta[relay.Constant][55] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %1425 = cast(meta[relay.Constant][55] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %1426 = reshape(%1424, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %1427 = reshape(%1425, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %1428 = @func_1074(%1426, %1427) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
  %1429 = %1423.0;
  %1430 = %1428.0;
  (%1429, %1430, meta[relay.Constant][55] /* ty=Tensor[(980), uint16] */)
}

def @func_3385() -> Tensor[(4, 4, 2), int8] {
  %1431 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %1431.1
}

def @func_2932() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1432 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %1433 = %1432.0;
  %1434 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1433, %1434)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4189(%var_4186: Tensor[(4, 4, 2), int8], %var_4187: Tensor[(1728), float64], %var_4188: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int64], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(16, 12, 9), float64], Tensor[(1728), float64], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  @func_4184(%var_4186, %var_4187, %var_4188) /* ty=(Tensor[(4, 4, 2), int64], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(16, 12, 9), float64], Tensor[(1728), float64], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */
}

def @func_1955() -> (Tensor[(4, 4, 2), int8],) {
  @func_1953() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_3853() -> (Tensor[(980, 1), uint16],) {
  %2 = fn () -> (Tensor[(980, 1), uint16],) {
    %0 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
    %1 = %0.2;
    (%1,)
  };
  %2() /* ty=(Tensor[(980, 1), uint16],) */
}

def @func_10178() -> (Tensor[(490, 2), float32],) {
  @func_10176() /* ty=(Tensor[(490, 2), float32],) */
}

def @func_16118() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
  @func_16116() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */
}

def @func_15095() -> (Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16]) {
  %6 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16]) {
    %3 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
    %4 = @func_10774() /* ty=Tensor[(4, 4, 2), int8] */;
    %5 = %3.2;
    (%4, %5)
  };
  %6() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16]) */
}

def @func_16439(%var_16437: Tensor[(7, 3, 12), uint32], %var_16438: Tensor[(7, 3, 12), uint32]) -> Tensor[(7, 3, 12), bool] {
  @func_16435(%var_16437, %var_16438) /* ty=Tensor[(7, 3, 12), bool] */
}

def @func_14964() -> (Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %14 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %7 = @func_5708() /* ty=(Tensor[(16, 7, 3), float32],) */;
    %8 = @func_13685() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %9 = @func_12836() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %10 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
    %11 = %7.0;
    %12 = %8.0;
    %13 = %9.0;
    (%10, %11, %12, %13)
  };
  %14() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_10609(%var_10608: Tensor[(10, 2), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(2, 9, 11), float64], Tensor[(4, 36), uint16], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 1, 5), float32], Tensor[(10, 2), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %35 = fn (%var_10567: Tensor[(10, 2), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(2, 9, 11), float64], Tensor[(4, 36), uint16], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 1, 5), float32], Tensor[(10, 2), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %15 = @func_3249() /* ty=(Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
    %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
    %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %19 = reshape(%16, newshape=[4, 36]) /* ty=Tensor[(4, 36), uint16] */;
    %20 = reshape(%17, newshape=[66]) /* ty=Tensor[(66), float64] */;
    %21 = reshape(%18, newshape=[660]) /* ty=Tensor[(660), float32] */;
    %22 = @func_6020(%19, %20, %21) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(4, 36), uint16], Tensor[(4, 4, 2), int8], Tensor[(66), float64], Tensor[(144), uint16], Tensor[(660), float32]) */;
    %23 = cast(%var_10567, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
    %24 = reshape(%23, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float32] */;
    %25 = @func_8295(%24) /* ty=(Tensor[(4, 1, 5), float32],) */;
    %26 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %27 = @func_7027() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %28 = @func_4814() /* ty=Tensor[(4, 4, 2), int8] */;
    %29 = %15.0;
    %30 = %22.3;
    %31 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
    %32 = %25.0;
    %33 = %26.0;
    %34 = %27.0;
    (%28, %29, %30, meta[relay.Constant][0] /* ty=Tensor[(144), uint16] */, meta[relay.Constant][1] /* ty=Tensor[(66), float64] */, meta[relay.Constant][2] /* ty=Tensor[(660), float32] */, %31, %32, %var_10567, %33, %34)
  };
  %35(%var_10608) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(2, 9, 11), float64], Tensor[(4, 36), uint16], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 1, 5), float32], Tensor[(10, 2), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_5762() -> (Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) {
  %36 = @func_1553() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %39 = reshape(%37, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %40 = reshape(%38, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %41 = @func_1074(%39, %40) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
  %42 = %36.0;
  %43 = %41.0;
  (%42, %43, meta[relay.Constant][3] /* ty=Tensor[(980), uint16] */)
}

def @func_4705(%var_4703: Tensor[(15, 8, 2), int64], %var_4704: Tensor[(15, 8, 2), int64]) -> (Tensor[(15, 8, 2), bool], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8]) {
  %57 = fn (%var_4600: Tensor[(15, 8, 2), int64], %var_4601: Tensor[(15, 8, 2), int64]) -> (Tensor[(15, 8, 2), bool], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8]) {
    %44 = cast(%var_4601, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
    %45 = shape_of(%var_4600, dtype="int32") /* ty=Tensor[(3), int32] */;
    %46 = cast(%var_4600, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
    %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %48 = cast(meta[relay.Constant][4] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
    %49 = cast(meta[relay.Constant][4] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
    %50 = reshape(%48, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
    %51 = reshape(%49, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
    %52 = @func_771(%50, %51) /* ty=(Tensor[(8, 3, 6), uint16],) */;
    %53 = @func_2932() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %54 = not_equal(%46, %47) /* ty=Tensor[(15, 8, 2), bool] */;
    %55 = %52.0;
    %56 = %53.0;
    (%54, %55, meta[relay.Constant][4] /* ty=Tensor[(144), uint16] */, %56)
  };
  %57(%var_4703, %var_4704) /* ty=(Tensor[(15, 8, 2), bool], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8]) */
}

def @func_2079(%var_2077: Tensor[(16, 15, 7), uint32], %var_2078: Tensor[(16, 15, 7), uint32]) -> (Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) {
  @func_2075(%var_2077, %var_2078) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) */
}

def @func_10157() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %58 = @func_5209() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %59 = @func_8677() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %60 = %58.2;
  %61 = %59.0;
  (%60, %61)
}

def @func_8619() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_8617() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_5211() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_5209() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_10209() -> (Tensor[(4, 4, 2), int8],) {
  @func_10207() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_10702() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %62 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %63 = @func_3158() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %64 = %62.0;
  %65 = %63.0;
  (%64, %65)
}

def @func_14921() -> (Tensor[(10, 8, 14), float32], Tensor[(4, 4, 2), int8]) {
  %69 = fn () -> (Tensor[(10, 8, 14), float32], Tensor[(4, 4, 2), int8]) {
    %66 = @func_11559() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980, ?), int32]) */;
    %67 = @func_13780() /* ty=Tensor[(10, 8, 14), float32] */;
    %68 = %66.0;
    (%67, %68)
  };
  %69() /* ty=(Tensor[(10, 8, 14), float32], Tensor[(4, 4, 2), int8]) */
}

def @func_13837() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8]) {
  %78 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8]) {
    %70 = @func_10225() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %71 = @func_10635() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %72 = %70.0;
    %73 = cast(%72, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
    %74 = reshape(%73, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
    %75 = %71.0;
    %76 = @func_2682(%74) /* ty=Tensor[(4, 4, 2), float32] */;
    %77 = @func_2806() /* ty=Tensor[(4, 4, 2), int8] */;
    (%72, %75, %76, %77)
  };
  %78() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8]) */
}

def @func_2808() -> Tensor[(4, 4, 2), int8] {
  @func_2806() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_15405() -> (Tensor[(10, 14, 7), uint16],) {
  @func_15403() /* ty=(Tensor[(10, 14, 7), uint16],) */
}

def @func_11407(%var_11350: Tensor[(660), float32], %var_11363: Tensor[(35, 1), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), bool], Tensor[(35), bool], Tensor[(35, 660), float32]) {
  %79 = @func_5661() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %80 = cast(%var_11350, dtype="float32") /* ty=Tensor[(660), float32] */;
  %81 = reshape(%80, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %82 = @func_5953(%81) /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) */;
  %83 = cast(%var_11350, dtype="float32") /* ty=Tensor[(660), float32] */;
  %84 = reshape(%83, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %85 = @func_5953(%84) /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) */;
  %86 = cast(%var_11363, dtype="float64") /* ty=Tensor[(35, 1), float64] */;
  %87 = reshape(%86, newshape=[35]) /* ty=Tensor[(35), float64] */;
  %88 = @func_6406(%87) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(7, 14, 5), uint64], Tensor[(4, 4, 2), int8]) */;
  %89 = %88.2;
  %90 = cast(%var_11363, dtype="bool") /* ty=Tensor[(35, 1), bool] */;
  %91 = shape_of(%89, dtype="int32") /* ty=Tensor[(1), int32] */;
  %92 = cast(%89, dtype="bool") /* ty=Tensor[(35), bool] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?), bool] */;
  %94 = cast(%var_11363, dtype="int32") /* ty=Tensor[(35, 1), int32] */;
  %95 = cast(%var_11350, dtype="int32") /* ty=Tensor[(660), int32] */;
  %96 = bitwise_or(%94, %95) /* ty=Tensor[(35, 660), int32] */;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(35, 660), float32] */;
  %98 = cast(%var_11363, dtype="float32") /* ty=Tensor[(35, 1), float32] */;
  %99 = %79.0;
  %100 = %82.3;
  %101 = %85.3;
  %102 = logical_or(%92, %93) /* ty=Tensor[(35), bool] */;
  %103 = floor_mod(%97, %98) /* ty=Tensor[(35, 660), float32] */;
  (%99, %100, %101, %102, %103)
}

def @func_14021() -> (Tensor[(16, 15, 7), float64],) {
  %105 = fn () -> (Tensor[(16, 15, 7), float64],) {
    %104 = @func_12856() /* ty=Tensor[(16, 15, 7), float64] */;
    (%104,)
  };
  %105() /* ty=(Tensor[(16, 15, 7), float64],) */
}

def @func_3924() -> Tensor[(4, 4, 2), int8] {
  %107 = fn () -> Tensor[(4, 4, 2), int8] {
    %106 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
    %106.1
  };
  %107() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_1553() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %108 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %109 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %110 = %108.1;
  %111 = %109.0;
  (%110, %111)
}

def @func_8125() -> (Tensor[(4, 4, 2), int8],) {
  %112 = @func_2771() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %113 = %112.0;
  (%113,)
}

def @func_982() -> (Tensor[(4, 4, 2), int8],) {
  %116 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %114 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
    %115 = %114.0;
    (%115,)
  };
  %116() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_12642() -> (Tensor[(66), float64],) {
  %119 = fn () -> (Tensor[(66), float64],) {
    %117 = @func_9674() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float32], Tensor[(66), float64]) */;
    %118 = %117.2;
    (%118,)
  };
  %119() /* ty=(Tensor[(66), float64],) */
}

def @func_3511() -> Tensor[(4, 4, 2), int8] {
  %120 = @func_2551() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %120.0
}

def @func_8834(%var_8832: Tensor[(84, 20), uint32], %var_8833: Tensor[(84, 20), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(84, 20), bool]) {
  %140 = fn (%var_8814: Tensor[(84, 20), uint32], %var_8816: Tensor[(84, 20), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(84, 20), bool]) {
    %121 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %122 = cast(%var_8814, dtype="uint32") /* ty=Tensor[(84, 20), uint32] */;
    %123 = cast(%var_8814, dtype="uint32") /* ty=Tensor[(84, 20), uint32] */;
    %124 = reshape(%122, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
    %125 = reshape(%123, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
    %126 = @func_2075(%124, %125) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) */;
    %127 = cast(%var_8816, dtype="int64") /* ty=Tensor[(84, 20), int64] */;
    %128 = shape_of(%var_8814, dtype="int32") /* ty=Tensor[(2), int32] */;
    %129 = cast(%var_8814, dtype="int64") /* ty=Tensor[(84, 20), int64] */;
    %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %131 = bitwise_or(%129, %130) /* ty=Tensor[(84, 20), int64] */;
    %132 = cast(%var_8814, dtype="bool") /* ty=Tensor[(84, 20), bool] */;
    %133 = shape_of(%131, dtype="int32") /* ty=Tensor[(2), int32] */;
    %134 = cast(%131, dtype="bool") /* ty=Tensor[(84, 20), bool] */;
    %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %136 = %121.0;
    %137 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
    %138 = %126.1;
    %139 = not_equal(%134, %135) /* ty=Tensor[(84, 20), bool] */;
    (%136, %137, %138, %139)
  };
  %140(%var_8832, %var_8833) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(84, 20), bool]) */
}

def @func_15915() -> (Tensor[(4, 4, 2), int8], Tensor[(15, 12, 11), int16], Tensor[(1, 1980), float64]) {
  %141 = @func_4379() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %142 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1980), float64] */, dtype="float64") /* ty=Tensor[(1, 1980), float64] */;
  %143 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1980), float64] */, dtype="float64") /* ty=Tensor[(1, 1980), float64] */;
  %144 = reshape(%142, newshape=[15, 12, 11]) /* ty=Tensor[(15, 12, 11), float64] */;
  %145 = reshape(%143, newshape=[15, 12, 11]) /* ty=Tensor[(15, 12, 11), float64] */;
  %146 = @func_14219(%144, %145) /* ty=(Tensor[(15, 12, 11), int16],) */;
  %147 = %141.0;
  %148 = %146.0;
  (%147, %148, meta[relay.Constant][5] /* ty=Tensor[(1, 1980), float64] */)
}

def @func_9526(%var_9524: Tensor[(720), uint32], %var_9525: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], uint32, Tensor[(720), uint32], Tensor[(4, 4, 2), int8], Tensor[(660), float32]) {
  %160 = fn (%var_9477: Tensor[(720), uint32], %var_9518: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], uint32, Tensor[(720), uint32], Tensor[(4, 4, 2), int8], Tensor[(660), float32]) {
    %149 = cast(meta[relay.Constant][6] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %150 = cast(%var_9477, dtype="uint32") /* ty=Tensor[(720), uint32] */;
    %151 = reshape(%149, newshape=[]) /* ty=uint32 */;
    %152 = reshape(%150, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), uint32] */;
    %153 = @func_2972(%151, %152) /* ty=(Tensor[(6, 8, 15), bool], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %154 = cast(%var_9518, dtype="float32") /* ty=Tensor[(660), float32] */;
    %155 = reshape(%154, newshape=[660]) /* ty=Tensor[(660), float32] */;
    %156 = @func_7792(%155) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) */;
    %157 = @func_4279() /* ty=Tensor[(4, 4, 2), int8] */;
    %158 = %153.1;
    %159 = %156.0;
    (%157, %158, meta[relay.Constant][6] /* ty=uint32 */, %var_9477, %159, %var_9518)
  };
  %160(%var_9524, %var_9525) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], uint32, Tensor[(720), uint32], Tensor[(4, 4, 2), int8], Tensor[(660), float32]) */
}

def @func_2515() -> (Tensor[(4, 4, 2), int8],) {
  %161 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
  (%161,)
}

def @func_14727() -> (Tensor[(4, 4, 2), int8], Tensor[(35), bool], Tensor[(660), float32], Tensor[(35), float64]) {
  %169 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(35), bool], Tensor[(660), float32], Tensor[(35), float64]) {
    %162 = cast(meta[relay.Constant][7] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %163 = cast(meta[relay.Constant][8] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
    %164 = reshape(%162, newshape=[660]) /* ty=Tensor[(660), float32] */;
    %165 = reshape(%163, newshape=[35, 1]) /* ty=Tensor[(35, 1), float64] */;
    %166 = @func_11407(%164, %165) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), bool], Tensor[(35), bool], Tensor[(35, 660), float32]) */;
    %167 = @func_12590() /* ty=Tensor[(4, 4, 2), int8] */;
    %168 = %166.3;
    (%167, %168, meta[relay.Constant][7] /* ty=Tensor[(660), float32] */, meta[relay.Constant][8] /* ty=Tensor[(35), float64] */)
  };
  %169() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(35), bool], Tensor[(660), float32], Tensor[(35), float64]) */
}

def @func_6251() -> (Tensor[(4, 4, 2), int8],) {
  @func_6249() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_11411(%var_11409: Tensor[(660), float32], %var_11410: Tensor[(35, 1), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), bool], Tensor[(35), bool], Tensor[(35, 660), float32]) {
  @func_11407(%var_11409, %var_11410) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), bool], Tensor[(35), bool], Tensor[(35, 660), float32]) */
}

def @func_1657() -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) {
  %170 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %171 = %170.1;
  %172 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  (%171, %172)
}

def @func_3585(%var_3535: Tensor[(2, 11, 12), bool]) -> Tensor[(2, 11, 12), float64] {
  %173 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %174 = cast(%var_3535, dtype="bool") /* ty=Tensor[(2, 11, 12), bool] */;
  %175 = logical_and(%173, %174) /* ty=Tensor[(2, 11, 12), bool] */;
  %176 = cast(%175, dtype="float64") /* ty=Tensor[(2, 11, 12), float64] */;
  %177 = cast(False /* ty=bool */, dtype="float64") /* ty=float64 */;
  divide(%176, %177) /* ty=Tensor[(2, 11, 12), float64] */
}

def @func_7510() -> Tensor[(4, 4, 2), int8] {
  %178 = @func_4487() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), bool]) */;
  %178.0
}

def @func_16892() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %179 = @func_15915() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(15, 12, 11), int16], Tensor[(1, 1980), float64]) */;
  %180 = @func_3872() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %181 = %179.0;
  %182 = %180.0;
  (%181, %182)
}

def @func_1310() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) {
  @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */
}

def @func_8198(%var_8189: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32]) {
  %183 = @func_6249() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %184 = cast(%var_8189, dtype="float32") /* ty=Tensor[(660), float32] */;
  %185 = reshape(%184, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %186 = @func_5953(%185) /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) */;
  %187 = %183.0;
  %188 = %186.0;
  (%187, %188, %var_8189)
}

def @func_1659() -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) {
  @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */
}

def @func_14702() -> (Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_14700() /* ty=(Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_9280() -> Tensor[(4, 4, 2), int8] {
  %189 = @func_8650() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %189.0
}

def @func_15485(%var_15483: Tensor[(980), float64], %var_15484: Tensor[(264), bool]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(264), bool], Tensor[(264), bool], Tensor[(4, 4, 2), int8], Tensor[(980), float64]) {
  %207 = fn (%var_15438: Tensor[(980), float64], %var_15439: Tensor[(264), bool]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(264), bool], Tensor[(264), bool], Tensor[(4, 4, 2), int8], Tensor[(980), float64]) {
    %190 = @func_5209() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %191 = @func_14184() /* ty=(Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(10, 4, 10), float64], Tensor[(400), float64]) */;
    %192 = @func_15041() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %193 = cast(%var_15438, dtype="float64") /* ty=Tensor[(980), float64] */;
    %194 = cast(%var_15438, dtype="float64") /* ty=Tensor[(980), float64] */;
    %195 = cast(%var_15439, dtype="bool") /* ty=Tensor[(264), bool] */;
    %196 = reshape(%193, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
    %197 = reshape(%194, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
    %198 = reshape(%195, newshape=[264]) /* ty=Tensor[(264), bool] */;
    %199 = @func_6604(%196, %197, %198) /* ty=(Tensor[(490, 2), uint64], Tensor[(490, 2), uint8], Tensor[(490, 2), float64], Tensor[(2, 11, 12), float64], Tensor[(264), bool]) */;
    %200 = cast(%var_15438, dtype="float64") /* ty=Tensor[(980), float64] */;
    %201 = %190.1;
    %202 = %191.1;
    %203 = %192.0;
    %204 = %199.4;
    %205 = @func_4111() /* ty=Tensor[(4, 4, 2), int8] */;
    %206 = asin(%200) /* ty=Tensor[(980), float64] */;
    (%201, %202, %203, %204, %var_15439, %205, %206)
  };
  %207(%var_15483, %var_15484) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(264), bool], Tensor[(264), bool], Tensor[(4, 4, 2), int8], Tensor[(980), float64]) */
}

def @func_1364() -> Tensor[(4, 4, 2), int8] {
  %208 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %208.0
}

def @func_16116() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
  %209 = @func_13971() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %210 = @func_14963() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %211 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
  %212 = %209.0;
  %213 = %210.3;
  %214 = %211.0;
  (%212, %213, %214)
}

def @func_12590() -> Tensor[(4, 4, 2), int8] {
  %215 = @func_4788() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %215.0
}

def @func_8283() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %216 = @func_7667() /* ty=Tensor[(4, 4, 2), int8] */;
  %217 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
  (%216, %217)
}

def @func_1276(%var_1266: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %218 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %219 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %220 = cast(%var_1266, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %221 = cast(%var_1266, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %222 = reshape(%220, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %223 = reshape(%221, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %224 = @func_1074(%222, %223) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
  %225 = %218.0;
  %226 = %219.0;
  %227 = %224.1;
  (%225, %226, %227, %var_1266)
}

def @func_14529() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %228 = @func_8617() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %229 = @func_4262() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(660), float32], Tensor[(980, 1), uint16]) */;
  %230 = @func_9235() /* ty=(Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(144), uint16]) */;
  %231 = @func_13502() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %232 = %228.2;
  %233 = %229.0;
  %234 = %230.0;
  %235 = %231.0;
  %236 = @func_3385() /* ty=Tensor[(4, 4, 2), int8] */;
  (%232, %233, %234, %235, %236)
}

def @func_4033() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) {
  @func_4031() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */
}

def @func_14091() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %237 = @func_4031() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %238 = %237.3;
  %239 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
  (%238, %239)
}

def @func_15189() -> Tensor[(4, 4, 2), int8] {
  %241 = fn () -> Tensor[(4, 4, 2), int8] {
    %240 = @func_6191() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %240.0
  };
  %241() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_2933() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %245 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %242 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
    %243 = %242.0;
    %244 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
    (%243, %244)
  };
  %245() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_15643() -> Tensor[(4, 4, 2), int8] {
  %246 = fn () -> Tensor[(4, 4, 2), int8] {
    @func_11329() /* ty=Tensor[(4, 4, 2), int8] */
  };
  %246() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_4857() -> Tensor[(4, 4, 2), int8] {
  %248 = fn () -> Tensor[(4, 4, 2), int8] {
    %247 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %247.0
  };
  %248() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_9959(%var_9932: uint64) -> (Tensor[(980, 12), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(1, 3, 12), uint64], uint64, Tensor[(36), uint64], Tensor[(4, 4, 2), int8]) {
  %249 = @func_1725() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) */;
  %250 = %249.3;
  %251 = cast(%250, dtype="float32") /* ty=Tensor[(980, ?), float32] */;
  %252 = cast(meta[relay.Constant][9] /* ty=Tensor[(980, 12), float64] */, dtype="float32") /* ty=Tensor[(980, 12), float32] */;
  %253 = mod(%251, %252) /* ty=Tensor[(980, 12), float32] */;
  %254 = cast(%250, dtype="int8") /* ty=Tensor[(980, ?), int8] */;
  %255 = cast(%253, dtype="int8") /* ty=Tensor[(980, 12), int8] */;
  %256 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %257 = cast(%var_9932, dtype="uint64") /* ty=uint64 */;
  %258 = cast(meta[relay.Constant][10] /* ty=Tensor[(36), uint64] */, dtype="uint64") /* ty=Tensor[(36), uint64] */;
  %259 = reshape(%257, newshape=[]) /* ty=uint64 */;
  %260 = reshape(%258, newshape=[1, 3, 12]) /* ty=Tensor[(1, 3, 12), uint64] */;
  %261 = bitwise_or(%254, %255) /* ty=Tensor[(980, 12), int8] */;
  %262 = %256.0;
  %263 = @func_7620() /* ty=Tensor[(4, 4, 2), int8] */;
  %264 = @func_6875(%259, %260) /* ty=Tensor[(1, 3, 12), uint64] */;
  %265 = @func_6756() /* ty=Tensor[(4, 4, 2), int8] */;
  (%261, %262, %263, %264, %var_9932, meta[relay.Constant][10] /* ty=Tensor[(36), uint64] */, %265)
}

def @func_15376() -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) {
  %270 = fn () -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) {
    %266 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
    %267 = @func_3872() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %268 = %266.1;
    %269 = %267.0;
    (%268, %269)
  };
  %270() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */
}

def @func_10253() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32], Tensor[(10, 66), float32]) {
  %271 = @func_5209() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %272 = %271.1;
  %273 = cast(%272, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %274 = reshape(%273, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %275 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 66), float32] */, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
  %276 = reshape(%275, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %277 = @func_8198(%276) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32]) */;
  %278 = @func_2682(%274) /* ty=Tensor[(4, 4, 2), float32] */;
  %279 = %277.2;
  (%272, %278, %279, meta[relay.Constant][11] /* ty=Tensor[(10, 66), float32] */)
}

def @func_15959() -> (Tensor[(4, 4, 2), int8],) {
  @func_15957() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_806() -> (Tensor[(4, 4, 2), int8],) {
  %280 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 4, 2), int8] */, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %281 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(4, 4, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 4, 2), int8] */, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %284 = minimum(%282, %283) /* ty=Tensor[(4, 4, 2), int8] */;
  (%284,)
}

def @func_11027(%var_10994: Tensor[(980), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(225), float32], Tensor[(980), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %285 = @func_10157() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %286 = cast(meta[relay.Constant][14] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %287 = reshape(%286, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %288 = @func_4909(%287) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %289 = cast(meta[relay.Constant][15] /* ty=Tensor[(980), uint16] */, dtype="uint8") /* ty=Tensor[(980), uint8] */;
  %290 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(980), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %291 = cast(meta[relay.Constant][14] /* ty=Tensor[(980), uint16] */, dtype="uint8") /* ty=Tensor[(980), uint8] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %293 = cast(meta[relay.Constant][16] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %294 = cast(meta[relay.Constant][16] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %295 = cast(meta[relay.Constant][16] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %296 = reshape(%293, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float32] */;
  %297 = reshape(%294, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float32] */;
  %298 = reshape(%295, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float32] */;
  %299 = @func_10315(%296, %297, %298) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(5, 9, 5), float32], Tensor[(5, 9, 5), uint64], Tensor[(4, 4, 2), float32]) */;
  %300 = cast(meta[relay.Constant][15] /* ty=Tensor[(980), uint16] */, dtype="float64") /* ty=Tensor[(980), float64] */;
  %301 = atan(%300) /* ty=Tensor[(980), float64] */;
  %302 = cast(%301, dtype="float32") /* ty=Tensor[(980), float32] */;
  %303 = sin(%302) /* ty=Tensor[(980), float32] */;
  %304 = cast(%var_10994, dtype="int8") /* ty=Tensor[(980), int8] */;
  %305 = shape_of(%303, dtype="int32") /* ty=Tensor[(1), int32] */;
  %306 = cast(%303, dtype="int8") /* ty=Tensor[(980), int8] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?), int8] */;
  %308 = @func_2806() /* ty=Tensor[(4, 4, 2), int8] */;
  %309 = %285.0;
  %310 = %288.2;
  %311 = left_shift(%291, %292) /* ty=Tensor[(980), uint8] */;
  %312 = @func_4856() /* ty=Tensor[(4, 4, 2), int8] */;
  %313 = %299.0;
  %314 = subtract(%306, %307) /* ty=Tensor[(980), int8] */;
  %315 = @func_2753() /* ty=Tensor[(4, 4, 2), int8] */;
  %316 = @func_4732() /* ty=Tensor[(4, 4, 2), int8] */;
  (%308, %309, %310, %311, %312, %313, meta[relay.Constant][16] /* ty=Tensor[(225), float32] */, %314, %315, %316)
}

def @func_9392() -> Tensor[(144), uint16] {
  %317 = fn () -> Tensor[(144), uint16] {
    @func_6897() /* ty=Tensor[(144), uint16] */
  };
  %317() /* ty=Tensor[(144), uint16] */
}

def @func_6932() -> Tensor[(4, 4, 2), int8] {
  %318 = fn () -> Tensor[(4, 4, 2), int8] {
    @func_3523() /* ty=Tensor[(4, 4, 2), int8] */
  };
  %318() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_3064() -> (Tensor[(16, 7, 3), float32],) {
  %319 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 3), float32] */;
  %320 = sqrt(%319) /* ty=Tensor[(16, 7, 3), float32] */;
  (%320,)
}

def @func_14093() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_14091() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_16255(%var_16228: Tensor[(980), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), float64], Tensor[(6, 44), bool], Tensor[(4, 4, 2), int8], Tensor[(980, 2), uint8], Tensor[(1960), uint16]) {
  %321 = @func_14978() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %322 = cast(%var_16228, dtype="float64") /* ty=Tensor[(980), float64] */;
  %323 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 44), bool] */, dtype="bool") /* ty=Tensor[(6, 44), bool] */;
  %324 = reshape(%322, newshape=[980]) /* ty=Tensor[(980), float64] */;
  %325 = reshape(%323, newshape=[264]) /* ty=Tensor[(264), bool] */;
  %326 = @func_15482(%324, %325) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(264), bool], Tensor[(264), bool], Tensor[(4, 4, 2), int8], Tensor[(980), float64]) */;
  %327 = cast(meta[relay.Constant][19] /* ty=Tensor[(1960), uint16] */, dtype="uint16") /* ty=Tensor[(1960), uint16] */;
  %328 = reshape(%327, newshape=[980, 2]) /* ty=Tensor[(980, 2), uint16] */;
  %329 = @func_7553(%328) /* ty=(Tensor[(980, 2), uint8],) */;
  %330 = %321.0;
  %331 = %326.5;
  %332 = @func_3523() /* ty=Tensor[(4, 4, 2), int8] */;
  %333 = %329.0;
  (%330, %331, %var_16228, meta[relay.Constant][18] /* ty=Tensor[(6, 44), bool] */, %332, %333, meta[relay.Constant][19] /* ty=Tensor[(1960), uint16] */)
}

def @func_12729(%var_12727: Tensor[(16, 7, 3), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), bool], Tensor[(4, 4, 2), int8], Tensor[(980, 8), uint8], Tensor[(7840), int32], Tensor[(16, 7, 3), float32]) {
  @func_12726(%var_12727) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), bool], Tensor[(4, 4, 2), int8], Tensor[(980, 8), uint8], Tensor[(7840), int32], Tensor[(16, 7, 3), float32]) */
}

def @func_8298(%var_8296: Tensor[(4, 1, 5), float32]) -> (Tensor[(4, 1, 5), float32],) {
  @func_8295(%var_8296) /* ty=(Tensor[(4, 1, 5), float32],) */
}

def @func_16176() -> Tensor[(16, 7, 3), float32] {
  %335 = fn () -> Tensor[(16, 7, 3), float32] {
    %334 = @func_12679() /* ty=(Tensor[(16, 7, 3), float32],) */;
    %334.0
  };
  %335() /* ty=Tensor[(16, 7, 3), float32] */
}

def @func_12922() -> (Tensor[(4, 4, 2), int8],) {
  %336 = @func_3659() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(660, 5), float64], Tensor[(4, 15, 11), float32], Tensor[(4, 4, 2), int8]) */;
  %337 = %336.0;
  (%337,)
}

def @func_808() -> (Tensor[(4, 4, 2), int8],) {
  @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_1555() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_1553() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_5001() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(490, 2), uint16]) {
  @func_4999() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(490, 2), uint16]) */
}

def @func_5639(%var_5637: Tensor[(2, 864), float64], %var_5638: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), float32], Tensor[(144), uint16], Tensor[(2, 864), float64], Tensor[(980), uint16]) {
  @func_5635(%var_5637, %var_5638) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), float32], Tensor[(144), uint16], Tensor[(2, 864), float64], Tensor[(980), uint16]) */
}

def @func_11773(%var_11772: Tensor[(13720), int32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 14), float32]) {
  %351 = fn (%var_11730: Tensor[(13720), int32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 14), float32]) {
    %338 = cast(%var_11730, dtype="int32") /* ty=Tensor[(13720), int32] */;
    %339 = cast(%var_11730, dtype="float64") /* ty=Tensor[(13720), float64] */;
    %340 = reshape(%338, newshape=[980, 14]) /* ty=Tensor[(980, 14), int32] */;
    %341 = reshape(%339, newshape=[980, 14]) /* ty=Tensor[(980, 14), float64] */;
    %342 = @func_9329(%340, %341) /* ty=(Tensor[(980, 14), bool], Tensor[(980, 14), float32], Tensor[(980, 14), uint32]) */;
    %343 = %342.2;
    %344 = cast(%var_11730, dtype="float32") /* ty=Tensor[(13720), float32] */;
    %345 = shape_of(%343, dtype="int32") /* ty=Tensor[(2), int32] */;
    %346 = cast(%343, dtype="float32") /* ty=Tensor[(980, 14), float32] */;
    %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %348 = @func_11329() /* ty=Tensor[(4, 4, 2), int8] */;
    %349 = @func_10774() /* ty=Tensor[(4, 4, 2), int8] */;
    %350 = divide(%346, %347) /* ty=Tensor[(980, 14), float32] */;
    (%348, %349, %350)
  };
  %351(%var_11772) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 14), float32]) */
}

def @func_14223(%var_14221: Tensor[(15, 12, 11), float64], %var_14222: Tensor[(15, 12, 11), float64]) -> (Tensor[(15, 12, 11), int16],) {
  @func_14219(%var_14221, %var_14222) /* ty=(Tensor[(15, 12, 11), int16],) */
}

def @func_4095() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_4093() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_11827(%var_11826: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %358 = fn (%var_11814: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
    %352 = @func_10813() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %353 = cast(%var_11814, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %354 = reshape(%353, newshape=[980]) /* ty=Tensor[(980), uint16] */;
    %355 = @func_2883(%354) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
    %356 = %352.0;
    %357 = %355.0;
    (%356, %357, %var_11814)
  };
  %358(%var_11826) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */
}

def @func_15328() -> Tensor[(4, 4, 2), int8] {
  @func_15326() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_9096() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) {
  %359 = @func_4814() /* ty=Tensor[(4, 4, 2), int8] */;
  %360 = cast(%359, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %361 = reshape(%360, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %362 = @func_2682(%361) /* ty=Tensor[(4, 4, 2), float32] */;
  (%359, %362)
}

def @func_15282() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), int32]) {
  @func_15280() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), int32]) */
}

def @func_4111() -> Tensor[(4, 4, 2), int8] {
  %363 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %363.2
}

def @func_15403() -> (Tensor[(10, 14, 7), uint16],) {
  %364 = @func_13149() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(10, 14, 7), uint16]) */;
  %365 = %364.1;
  (%365,)
}

def @func_1726() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) {
  %392 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) {
    %366 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
    %367 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
    %368 = %367.2;
    %369 = cast(%368, dtype="uint16") /* ty=Tensor[(980, 1), uint16] */;
    %370 = reshape(%369, newshape=[980]) /* ty=Tensor[(980), uint16] */;
    %371 = @func_1216(%370) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
    %372 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
    %373 = %372.3;
    %374 = cast(%373, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %375 = cast(%368, dtype="uint16") /* ty=Tensor[(980, 1), uint16] */;
    %376 = reshape(%374, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
    %377 = reshape(%375, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
    %378 = @func_1074(%376, %377) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
    %379 = %378.0;
    %380 = cast(%379, dtype="uint64") /* ty=Tensor[(10, 14, 7), uint64] */;
    %381 = shape_of(%368, dtype="int32") /* ty=Tensor[(2), int32] */;
    %382 = cast(%368, dtype="uint64") /* ty=Tensor[(980, 1), uint64] */;
    %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %384 = bitwise_or(%382, %383) /* ty=Tensor[(980, ?), uint64] */;
    %385 = cast(%368, dtype="float64") /* ty=Tensor[(980, 1), float64] */;
    %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(2), int32] */;
    %387 = cast(%384, dtype="float64") /* ty=Tensor[(980, ?), float64] */;
    %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %389 = %366.1;
    %390 = %371.1;
    %391 = mod(%387, %388) /* ty=Tensor[(980, ?), float64] */;
    (%389, %390, %373, %391)
  };
  %392() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) */
}

def @func_771(%var_742: Tensor[(8, 3, 6), uint16], %var_743: Tensor[(8, 3, 6), uint16]) -> (Tensor[(8, 3, 6), uint16],) {
  %393 = cast(%var_743, dtype="uint16") /* ty=Tensor[(8, 3, 6), uint16] */;
  %394 = shape_of(%var_742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%var_742, dtype="uint16") /* ty=Tensor[(8, 3, 6), uint16] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %397 = maximum(%395, %396) /* ty=Tensor[(8, 3, 6), uint16] */;
  (%397,)
}

def @func_6249() -> (Tensor[(4, 4, 2), int8],) {
  %398 = @func_4856() /* ty=Tensor[(4, 4, 2), int8] */;
  (%398,)
}

def @func_2883(%var_2856: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %399 = cast(%var_2856, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %400 = reshape(%399, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %401 = @func_1216(%400) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
  %402 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %403 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  %404 = @func_2583() /* ty=Tensor[(4, 4, 2), int8] */;
  %405 = %401.3;
  %406 = %402.0;
  (%403, %404, %405, %var_2856, %406)
}

def @func_5764() -> (Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) {
  @func_5762() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */
}

def @func_4589() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(8, 3, 6), float32]) {
  %407 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %408 = @func_2932() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %409 = @func_4487() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), bool]) */;
  %410 = cast(meta[relay.Constant][20] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %411 = reshape(%410, newshape=[144]) /* ty=Tensor[(144), uint16] */;
  %412 = @func_972(%411) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16]) */;
  %413 = %412.1;
  %414 = cast(%413, dtype="float32") /* ty=Tensor[(8, 3, 6), float32] */;
  %415 = %407.0;
  %416 = %408.1;
  %417 = %409.0;
  %418 = log2(%414) /* ty=Tensor[(8, 3, 6), float32] */;
  (%415, %416, %417, meta[relay.Constant][20] /* ty=Tensor[(144), uint16] */, %418)
}

def @func_6705() -> Tensor[(4, 4, 2), int8] {
  @func_1364() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_5539(%var_5538: Tensor[(980), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(980), bool]) {
  %428 = fn (%var_5523: Tensor[(980), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(980), bool]) {
    %419 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %420 = @func_5322() /* ty=(Tensor[(980), float64],) */;
    %421 = %420.0;
    %422 = cast(%var_5523, dtype="bool") /* ty=Tensor[(980), bool] */;
    %423 = shape_of(%421, dtype="int32") /* ty=Tensor[(1), int32] */;
    %424 = cast(%421, dtype="bool") /* ty=Tensor[(980), bool] */;
    %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?), bool] */;
    %426 = %419.0;
    %427 = greater(%424, %425) /* ty=Tensor[(980), bool] */;
    (%426, %427)
  };
  %428(%var_5538) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), bool]) */
}

def @func_9177() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_9175() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_2022(%var_2020: float64, %var_2021: Tensor[(1, 11, 6), float64]) -> (Tensor[(1, 11, 6), float64], Tensor[(1, 11, 6), float64], Tensor[(4, 4, 2), int8]) {
  %436 = fn (%var_1997: float64, %var_1998: Tensor[(1, 11, 6), float64]) -> (Tensor[(1, 11, 6), float64], Tensor[(1, 11, 6), float64], Tensor[(4, 4, 2), int8]) {
    %429 = cast(%var_1997, dtype="float64") /* ty=float64 */;
    %430 = cast(%var_1998, dtype="float64") /* ty=Tensor[(1, 11, 6), float64] */;
    %431 = cast(%var_1998, dtype="float64") /* ty=Tensor[(1, 11, 6), float64] */;
    %432 = @func_1953() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %433 = mod(%429, %430) /* ty=Tensor[(1, 11, 6), float64] */;
    %434 = atan(%431) /* ty=Tensor[(1, 11, 6), float64] */;
    %435 = %432.0;
    (%433, %434, %435)
  };
  %436(%var_2020, %var_2021) /* ty=(Tensor[(1, 11, 6), float64], Tensor[(1, 11, 6), float64], Tensor[(4, 4, 2), int8]) */
}

def @func_10017() -> Tensor[(4, 4, 2), int8] {
  %437 = fn () -> Tensor[(4, 4, 2), int8] {
    @func_7356() /* ty=Tensor[(4, 4, 2), int8] */
  };
  %437() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_12140(%var_12096: Tensor[(1, 15, 9), uint64], %var_12097: Tensor[(9, 15, 9), uint64], %var_12137: Tensor[(1170), float64]) -> (Tensor[(9, 15, 9), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(15, 6, 13), float64], Tensor[(1170), float64]) {
  %438 = cast(%var_12096, dtype="uint64") /* ty=Tensor[(1, 15, 9), uint64] */;
  %439 = cast(%var_12097, dtype="uint64") /* ty=Tensor[(9, 15, 9), uint64] */;
  %440 = subtract(%438, %439) /* ty=Tensor[(9, 15, 9), uint64] */;
  %441 = cast(%440, dtype="float32") /* ty=Tensor[(9, 15, 9), float32] */;
  %442 = @func_3191() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
  %443 = cast(%var_12137, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %444 = reshape(%443, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), float64] */;
  %445 = tan(%441) /* ty=Tensor[(9, 15, 9), float32] */;
  %446 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  %447 = %442.0;
  %448 = @func_11523(%444) /* ty=Tensor[(15, 6, 13), float64] */;
  (%445, %446, %447, %448, %var_12137)
}

def @func_4279() -> Tensor[(4, 4, 2), int8] {
  @func_2583() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_6024(%var_6021: Tensor[(4, 36), uint16], %var_6022: Tensor[(66), float64], %var_6023: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(4, 36), uint16], Tensor[(4, 4, 2), int8], Tensor[(66), float64], Tensor[(144), uint16], Tensor[(660), float32]) {
  %466 = fn (%var_5979: Tensor[(4, 36), uint16], %var_5984: Tensor[(66), float64], %var_6001: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(4, 36), uint16], Tensor[(4, 4, 2), int8], Tensor[(66), float64], Tensor[(144), uint16], Tensor[(660), float32]) {
    %449 = @func_3249() /* ty=(Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %450 = cast(%var_5979, dtype="uint16") /* ty=Tensor[(4, 36), uint16] */;
    %451 = cast(%var_5979, dtype="uint16") /* ty=Tensor[(4, 36), uint16] */;
    %452 = reshape(%450, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
    %453 = reshape(%451, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
    %454 = @func_771(%452, %453) /* ty=(Tensor[(8, 3, 6), uint16],) */;
    %455 = cast(%var_5984, dtype="float64") /* ty=Tensor[(66), float64] */;
    %456 = reshape(%455, newshape=[66]) /* ty=Tensor[(66), float64] */;
    %457 = @func_3731(%456) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8], float64, Tensor[(66), float64], Tensor[(4, 4, 2), float32]) */;
    %458 = cast(%var_6001, dtype="float32") /* ty=Tensor[(660), float32] */;
    %459 = reshape(%458, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
    %460 = @func_2324(%459) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(5, 132), float32], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %461 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
    %462 = %449.1;
    %463 = %454.0;
    %464 = %457.2;
    %465 = %460.9;
    (%461, %462, %463, %var_5979, %464, %var_5984, %465, %var_6001)
  };
  %466(%var_6021, %var_6022, %var_6023) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(4, 36), uint16], Tensor[(4, 4, 2), int8], Tensor[(66), float64], Tensor[(144), uint16], Tensor[(660), float32]) */
}

def @func_4093() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %467 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %468 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %469 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %470 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %471 = %467.0;
  %472 = %468.0;
  %473 = %469.0;
  %474 = %470.1;
  (%471, %472, %473, %474)
}

def @func_4184(%var_4121: Tensor[(4, 4, 2), int8], %var_4147: Tensor[(1728), float64], %var_4163: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int64], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(16, 12, 9), float64], Tensor[(1728), float64], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %475 = @func_1818() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %476 = %475.0;
  %477 = cast(%var_4121, dtype="int64") /* ty=Tensor[(4, 4, 2), int64] */;
  %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%476, dtype="int64") /* ty=Tensor[(4, 4, 2), int64] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %481 = cast(meta[relay.Constant][21] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %482 = cast(meta[relay.Constant][21] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
  %483 = reshape(%481, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %484 = reshape(%482, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
  %485 = @func_771(%483, %484) /* ty=(Tensor[(8, 3, 6), uint16],) */;
  %486 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %487 = cast(%var_4147, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %488 = reshape(%487, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), float64] */;
  %489 = cast(%var_4163, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %490 = reshape(%489, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %491 = @func_1276(%490) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %492 = %485.0;
  %493 = cast(%492, dtype="uint16") /* ty=Tensor[(8, 3, 6), uint16] */;
  %494 = reshape(%493, newshape=[144]) /* ty=Tensor[(144), uint16] */;
  %495 = @func_972(%494) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16]) */;
  %496 = maximum(%479, %480) /* ty=Tensor[(4, 4, 2), int64] */;
  %497 = %486.1;
  %498 = @func_1987(%488) /* ty=Tensor[(16, 12, 9), float64] */;
  %499 = %491.2;
  %500 = %495.0;
  (%496, %492, meta[relay.Constant][21] /* ty=Tensor[(144), uint16] */, %497, %498, %var_4147, %499, %var_4163, %500)
}

def @func_7792(%var_7762: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) {
  %501 = cast(%var_7762, dtype="float32") /* ty=Tensor[(660), float32] */;
  %502 = reshape(%501, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %503 = @func_1607(%502) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
  %504 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  %505 = %503.0;
  (%504, %505, %var_7762)
}

def @func_8873() -> (Tensor[(4, 4, 2), int8],) {
  %506 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %507 = %506.0;
  (%507,)
}

def @func_10159() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_10157() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_10009() -> (Tensor[(4, 4, 2), int8],) {
  @func_10007() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_10315(%var_10275: Tensor[(5, 9, 5), float32], %var_10276: Tensor[(5, 9, 5), float32], %var_10304: Tensor[(5, 9, 5), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(5, 9, 5), float32], Tensor[(5, 9, 5), uint64], Tensor[(4, 4, 2), float32]) {
  %508 = cast(%var_10276, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
  %509 = shape_of(%var_10275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%var_10275, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %512 = floor_divide(%510, %511) /* ty=Tensor[(5, 9, 5), float32] */;
  %513 = cast(%var_10276, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%512, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %517 = cast(%var_10304, dtype="uint64") /* ty=Tensor[(5, 9, 5), uint64] */;
  %518 = shape_of(%var_10276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%var_10276, dtype="uint64") /* ty=Tensor[(5, 9, 5), uint64] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %521 = @func_8459() /* ty=Tensor[(4, 4, 2), int8] */;
  %522 = cast(%521, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %523 = reshape(%522, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %524 = multiply(%515, %516) /* ty=Tensor[(5, 9, 5), float32] */;
  %525 = maximum(%519, %520) /* ty=Tensor[(5, 9, 5), uint64] */;
  %526 = @func_7457(%523) /* ty=Tensor[(4, 4, 2), float32] */;
  (%521, %524, %525, %526)
}

def @func_11606() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_11604() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_11516() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32], Tensor[(4, 4, 2), int8]) {
  @func_11514() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32], Tensor[(4, 4, 2), int8]) */
}

def @func_4816() -> Tensor[(4, 4, 2), int8] {
  @func_4814() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_12857() -> Tensor[(16, 15, 7), float64] {
  %528 = fn () -> Tensor[(16, 15, 7), float64] {
    %527 = @func_6913() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64]) */;
    %527.1
  };
  %528() /* ty=Tensor[(16, 15, 7), float64] */
}

def @func_16339() -> (Tensor[(4, 4, 2), int8],) {
  %530 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %529 = @func_4111() /* ty=Tensor[(4, 4, 2), int8] */;
    (%529,)
  };
  %530() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_11127() -> (Tensor[(4, 4, 2), int8],) {
  %531 = @func_6931() /* ty=Tensor[(4, 4, 2), int8] */;
  (%531,)
}

def @func_2075(%var_2045: Tensor[(16, 15, 7), uint32], %var_2046: Tensor[(16, 15, 7), uint32]) -> (Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) {
  %532 = cast(%var_2046, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
  %533 = shape_of(%var_2045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%var_2045, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %536 = right_shift(%534, %535) /* ty=Tensor[(16, 15, 7), uint32] */;
  %537 = cast(%536, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
  %538 = shape_of(%var_2045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %539 = cast(%var_2045, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %541 = logical_xor(%539, %540) /* ty=Tensor[(16, 15, 7), uint32] */;
  %542 = cast(%541, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %543 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %544 = log10(%542) /* ty=Tensor[(16, 15, 7), float64] */;
  %545 = %543.0;
  (%544, %545)
}

def @func_4379() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %546 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %547 = %546.0;
  %548 = @func_2583() /* ty=Tensor[(4, 4, 2), int8] */;
  %549 = @func_4279() /* ty=Tensor[(4, 4, 2), int8] */;
  (%547, %548, %549)
}

def @func_6501() -> (Tensor[(4, 4, 2), int8],) {
  @func_6499() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_12836() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %550 = @func_6301() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %551 = %550.0;
  %552 = @func_11329() /* ty=Tensor[(4, 4, 2), int8] */;
  (%551, %552)
}

def @func_6409(%var_6407: Tensor[(35), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(7, 14, 5), uint64], Tensor[(4, 4, 2), int8]) {
  @func_6406(%var_6407) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(7, 14, 5), uint64], Tensor[(4, 4, 2), int8]) */
}

def @func_13150() -> (Tensor[(4, 4, 2), bool], Tensor[(10, 14, 7), uint16]) {
  %556 = fn () -> (Tensor[(4, 4, 2), bool], Tensor[(10, 14, 7), uint16]) {
    %553 = @func_5762() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
    %554 = @func_6744() /* ty=Tensor[(4, 4, 2), bool] */;
    %555 = %553.1;
    (%554, %555)
  };
  %556() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(10, 14, 7), uint16]) */
}

def @func_16301(%var_16300: Tensor[(9, 5, 16), uint16]) -> (Tensor[(9, 5, 16), uint64],) {
  %565 = fn (%var_16278: Tensor[(9, 5, 16), uint16]) -> (Tensor[(9, 5, 16), uint64],) {
    %557 = cast(meta[relay.Constant][22] /* ty=Tensor[(9, 5, 1), uint16] */, dtype="uint16") /* ty=Tensor[(9, 5, 1), uint16] */;
    %558 = cast(%var_16278, dtype="uint16") /* ty=Tensor[(9, 5, 16), uint16] */;
    %559 = maximum(%557, %558) /* ty=Tensor[(9, 5, 16), uint16] */;
    %560 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 5, 16), uint16] */, dtype="uint64") /* ty=Tensor[(9, 5, 16), uint64] */;
    %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
    %562 = cast(%559, dtype="uint64") /* ty=Tensor[(9, 5, 16), uint64] */;
    %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %564 = subtract(%562, %563) /* ty=Tensor[(9, 5, 16), uint64] */;
    (%564,)
  };
  %565(%var_16300) /* ty=(Tensor[(9, 5, 16), uint64],) */
}

def @func_15043() -> (Tensor[(4, 4, 2), int8],) {
  @func_15041() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_5662() -> (Tensor[(4, 4, 2), int8],) {
  %567 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %566 = @func_4732() /* ty=Tensor[(4, 4, 2), int8] */;
    (%566,)
  };
  %567() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_16633(%var_16631: Tensor[(14, 70), uint16], %var_16632: Tensor[(14, 70), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(14, 70), bool], Tensor[(4, 4, 2), bool], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  @func_16629(%var_16631, %var_16632) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(14, 70), bool], Tensor[(4, 4, 2), bool], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */
}

def @func_2771() -> (Tensor[(4, 4, 2), int8],) {
  %568 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %569 = %568.0;
  (%569,)
}

def @func_15523() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_15521() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_10255() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32], Tensor[(10, 66), float32]) {
  @func_10253() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32], Tensor[(10, 66), float32]) */
}

def @func_2134() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) {
  @func_2132() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) */
}

def @func_6302() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %574 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %570 = @func_4788() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %571 = @func_5661() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %572 = %570.0;
    %573 = %571.0;
    (%572, %573)
  };
  %574() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_14265() -> Tensor[(490, 2), float32] {
  %576 = fn () -> Tensor[(490, 2), float32] {
    %575 = @func_10176() /* ty=(Tensor[(490, 2), float32],) */;
    %575.0
  };
  %576() /* ty=Tensor[(490, 2), float32] */
}

def @func_4591() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(8, 3, 6), float32]) {
  @func_4589() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(8, 3, 6), float32]) */
}

def @func_12680() -> (Tensor[(16, 7, 3), float32],) {
  %579 = fn () -> (Tensor[(16, 7, 3), float32],) {
    %577 = @func_8369() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32]) */;
    %578 = %577.1;
    (%578,)
  };
  %579() /* ty=(Tensor[(16, 7, 3), float32],) */
}

def @func_1308() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) {
  %580 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %581 = cast(meta[relay.Constant][24] /* ty=Tensor[(980, 1), uint16] */, dtype="uint16") /* ty=Tensor[(980, 1), uint16] */;
  %582 = reshape(%581, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %583 = @func_1216(%582) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
  %584 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %585 = %580.0;
  %586 = %583.0;
  %587 = %584.0;
  (%585, %586, meta[relay.Constant][24] /* ty=Tensor[(980, 1), uint16] */, %587)
}

def @func_3588(%var_3586: Tensor[(2, 11, 12), bool]) -> Tensor[(2, 11, 12), float64] {
  @func_3585(%var_3586) /* ty=Tensor[(2, 11, 12), float64] */
}

def @func_6663() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %592 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %588 = @func_3191() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
    %589 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
    %590 = @func_3385() /* ty=Tensor[(4, 4, 2), int8] */;
    %591 = %588.0;
    (%589, %590, %591)
  };
  %592() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_13912() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %595 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %593 = @func_4814() /* ty=Tensor[(4, 4, 2), int8] */;
    %594 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
    (%593, %594)
  };
  %595() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_7460(%var_7458: Tensor[(4, 4, 2), int8]) -> Tensor[(4, 4, 2), float32] {
  @func_7457(%var_7458) /* ty=Tensor[(4, 4, 2), float32] */
}

def @func_3160() -> (Tensor[(4, 4, 2), int8],) {
  @func_3158() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_10207() -> (Tensor[(4, 4, 2), int8],) {
  %596 = @func_6191() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %597 = %596.0;
  (%597,)
}

def @func_7622() -> Tensor[(4, 4, 2), int8] {
  @func_7620() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_5146() -> (Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16]) {
  %603 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16]) {
    %598 = cast(meta[relay.Constant][25] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %599 = reshape(%598, newshape=[980]) /* ty=Tensor[(980), uint16] */;
    %600 = @func_3355(%599) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
    %601 = @func_4111() /* ty=Tensor[(4, 4, 2), int8] */;
    %602 = %600.3;
    (%601, %602, meta[relay.Constant][25] /* ty=Tensor[(980), uint16] */)
  };
  %603() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16]) */
}

def @func_12924() -> (Tensor[(4, 4, 2), int8],) {
  @func_12922() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_3733(%var_3732: Tensor[(66), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8], float64, Tensor[(66), float64], Tensor[(4, 4, 2), float32]) {
  %618 = fn (%var_3701: Tensor[(66), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8], float64, Tensor[(66), float64], Tensor[(4, 4, 2), float32]) {
    %604 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %605 = %604.0;
    %606 = cast(%605, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
    %607 = reshape(%606, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
    %608 = cast(8.52352f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %609 = cast(%var_3701, dtype="float64") /* ty=Tensor[(66), float64] */;
    %610 = reshape(%608, newshape=[]) /* ty=float64 */;
    %611 = reshape(%609, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float64] */;
    %612 = @func_2019(%610, %611) /* ty=(Tensor[(1, 11, 6), float64], Tensor[(1, 11, 6), float64], Tensor[(4, 4, 2), int8]) */;
    %613 = cast(%605, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
    %614 = reshape(%613, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
    %615 = @func_2682(%607) /* ty=Tensor[(4, 4, 2), float32] */;
    %616 = %612.2;
    %617 = @func_2682(%614) /* ty=Tensor[(4, 4, 2), float32] */;
    (%605, %615, %616, 8.52352f64 /* ty=float64 */, %var_3701, %617)
  };
  %618(%var_3732) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8], float64, Tensor[(66), float64], Tensor[(4, 4, 2), float32]) */
}

def @func_5790() -> (Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) {
  %627 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) {
    %619 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %620 = cast(meta[relay.Constant][26] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %621 = cast(meta[relay.Constant][26] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %622 = reshape(%620, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
    %623 = reshape(%621, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
    %624 = @func_2075(%622, %623) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) */;
    %625 = %619.0;
    %626 = %624.0;
    (%625, %626, meta[relay.Constant][26] /* ty=Tensor[(1680), uint32] */)
  };
  %627() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) */
}

def @func_13199(%var_13198: Tensor[(9, 10, 2), int16]) -> (Tensor[(9, 10, 2), int16],) {
  %631 = fn (%var_13188: Tensor[(9, 10, 2), int16]) -> (Tensor[(9, 10, 2), int16],) {
    %628 = cast(meta[relay.Constant][27] /* ty=Tensor[(9, 1, 2), int16] */, dtype="int16") /* ty=Tensor[(9, 1, 2), int16] */;
    %629 = cast(%var_13188, dtype="int16") /* ty=Tensor[(9, 10, 2), int16] */;
    %630 = bitwise_and(%628, %629) /* ty=Tensor[(9, 10, 2), int16] */;
    (%630,)
  };
  %631(%var_13198) /* ty=(Tensor[(9, 10, 2), int16],) */
}

def @func_5294() -> Tensor[(4, 4, 2), int8] {
  %633 = fn () -> Tensor[(4, 4, 2), int8] {
    %632 = @func_2932() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %632.1
  };
  %633() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_14028(%var_14025: Tensor[(1728), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(1728), float64], Tensor[(490, 2), uint16]) {
  %634 = @func_1725() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) */;
  %635 = cast(%var_14025, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %636 = cast(meta[relay.Constant][28] /* ty=Tensor[(490, 2), uint16] */, dtype="uint16") /* ty=Tensor[(490, 2), uint16] */;
  %637 = reshape(%635, newshape=[2, 864]) /* ty=Tensor[(2, 864), float64] */;
  %638 = reshape(%636, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %639 = @func_5635(%637, %638) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), float32], Tensor[(144), uint16], Tensor[(2, 864), float64], Tensor[(980), uint16]) */;
  %640 = %634.0;
  %641 = %639.2;
  (%640, %641, %var_14025, meta[relay.Constant][28] /* ty=Tensor[(490, 2), uint16] */)
}

def @func_9375() -> (Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(660), float32]) {
  %648 = fn () -> (Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(660), float32]) {
    %642 = @func_8524() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(16, 15, 7), float64], Tensor[(660), float32]) */;
    %643 = cast(meta[relay.Constant][29] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %644 = reshape(%643, newshape=[660]) /* ty=Tensor[(660), float32] */;
    %645 = @func_8198(%644) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32]) */;
    %646 = %642.2;
    %647 = %645.0;
    (%646, %647, meta[relay.Constant][29] /* ty=Tensor[(660), float32] */)
  };
  %648() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(660), float32]) */
}

def @func_8617() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %649 = @func_4788() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %650 = @func_8283() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %651 = @func_8393() /* ty=Tensor[(4, 4, 2), int8] */;
  %652 = %649.0;
  %653 = %650.0;
  (%651, %652, %653)
}

def @func_5955(%var_5954: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) {
  %666 = fn (%var_5925: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) {
    %654 = @func_3191() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
    %655 = @func_1953() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %656 = %655.0;
    %657 = cast(%656, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
    %658 = @func_5789() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) */;
    %659 = cast(%var_5925, dtype="float32") /* ty=Tensor[(660), float32] */;
    %660 = reshape(%659, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
    %661 = @func_1607(%660) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
    %662 = %654.1;
    %663 = erf(%657) /* ty=Tensor[(4, 4, 2), float64] */;
    %664 = %658.1;
    %665 = %661.3;
    (%662, %663, %664, %665, %var_5925)
  };
  %666(%var_5954) /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) */
}

def @func_10704() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_10702() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_12012() -> Tensor[(4, 4, 2), bool] {
  @func_6744() /* ty=Tensor[(4, 4, 2), bool] */
}

def @func_15051() -> Tensor[(4, 4, 2), int8] {
  %667 = @func_14529() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %667.1
}

def @func_16850() -> Tensor[(4, 4, 2), int8] {
  @func_16848() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_15521() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %668 = @func_9449() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %669 = @func_10157() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %670 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
  %671 = %668.0;
  %672 = %669.1;
  %673 = %670.1;
  (%671, %672, %673)
}

def @func_16368() -> (Tensor[(4, 4, 2), int8],) {
  %676 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %674 = @func_13971() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %675 = %674.0;
    (%675,)
  };
  %676() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_7668() -> Tensor[(4, 4, 2), int8] {
  %678 = fn () -> Tensor[(4, 4, 2), int8] {
    %677 = @func_7027() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %677.0
  };
  %678() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_16848() -> Tensor[(4, 4, 2), int8] {
  %679 = @func_8650() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %679.0
}

def @func_15041() -> (Tensor[(4, 4, 2), int8],) {
  %680 = @func_14529() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %681 = %680.4;
  (%681,)
}

def @func_16715() -> Tensor[(4, 4, 2), int8] {
  %683 = fn () -> Tensor[(4, 4, 2), int8] {
    %682 = @func_15280() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), int32]) */;
    %682.0
  };
  %683() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_9208() -> Tensor[(4, 4, 2), int8] {
  %685 = fn () -> Tensor[(4, 4, 2), int8] {
    %684 = @func_4788() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %684.0
  };
  %685() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_6193() -> (Tensor[(4, 4, 2), int8],) {
  @func_6191() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_1504() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
  %690 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
    %686 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %687 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
    %688 = %686.0;
    %689 = %687.1;
    (%688, %689)
  };
  %690() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */
}

def @func_8650() -> (Tensor[(4, 4, 2), int8],) {
  %691 = @func_3278() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %692 = %691.0;
  (%692,)
}

def @func_14700() -> (Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %693 = @func_9858() /* ty=(Tensor[(144), uint16], Tensor[(4, 4, 2), int8]) */;
  %694 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %695 = %693.0;
  %696 = @func_10774() /* ty=Tensor[(4, 4, 2), int8] */;
  %697 = %694.0;
  (%695, %696, %697)
}

def @func_7192(%var_7190: Tensor[(1, 35), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(1, 35), float64]) {
  @func_7189(%var_7190) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(1, 35), float64]) */
}

def @func_4524(%var_4495: Tensor[(7, 1, 5), float64]) -> (Tensor[(7, 1, 5), float64], Tensor[(980, ?), int32], Tensor[(4, 4, 2), int8]) {
  %698 = cast(%var_4495, dtype="float64") /* ty=Tensor[(7, 1, 5), float64] */;
  %699 = rsqrt(%698) /* ty=Tensor[(7, 1, 5), float64] */;
  %700 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
  %701 = @func_4279() /* ty=Tensor[(4, 4, 2), int8] */;
  (%699, %700, %701)
}

def @func_15322() -> Tensor[(980, ?), int32] {
  %702 = fn () -> Tensor[(980, ?), int32] {
    @func_4333() /* ty=Tensor[(980, ?), int32] */
  };
  %702() /* ty=Tensor[(980, ?), int32] */
}

def @func_10775() -> Tensor[(4, 4, 2), int8] {
  %704 = fn () -> Tensor[(4, 4, 2), int8] {
    %703 = @func_9147() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %703.1
  };
  %704() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_6758() -> Tensor[(4, 4, 2), int8] {
  @func_6756() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_16894() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_16892() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_6745() -> Tensor[(4, 4, 2), bool] {
  %706 = fn () -> Tensor[(4, 4, 2), bool] {
    %705 = @func_4487() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), bool]) */;
    %705.2
  };
  %706() /* ty=Tensor[(4, 4, 2), bool] */
}

def @func_4756() -> (Tensor[(16, 7, 3), float32],) {
  @func_4754() /* ty=(Tensor[(16, 7, 3), float32],) */
}

def @func_4281() -> Tensor[(4, 4, 2), int8] {
  @func_4279() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_3357(%var_3356: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %714 = fn (%var_3336: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
    %707 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
    %708 = cast(%var_3336, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %709 = reshape(%708, newshape=[980]) /* ty=Tensor[(980), uint16] */;
    %710 = @func_2883(%709) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
    %711 = @func_2806() /* ty=Tensor[(4, 4, 2), int8] */;
    %712 = %707.1;
    %713 = %710.0;
    (%711, %712, %713, %var_3336)
  };
  %714(%var_3356) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */
}

def @func_3869() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %719 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %715 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %716 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
    %717 = %715.0;
    %718 = %716.1;
    (%717, %718)
  };
  %719() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_5343() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_5341() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_9451() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_9449() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_11864() -> (Tensor[(4, 4, 2), bool],) {
  %721 = fn () -> (Tensor[(4, 4, 2), bool],) {
    %720 = @func_6744() /* ty=Tensor[(4, 4, 2), bool] */;
    (%720,)
  };
  %721() /* ty=(Tensor[(4, 4, 2), bool],) */
}

def @func_15583(%var_15582: Tensor[(4, 9, 15), float64]) -> Tensor[(4, 9, 15), float64] {
  %723 = fn (%var_15563: Tensor[(4, 9, 15), float64]) -> Tensor[(4, 9, 15), float64] {
    %722 = cast(%var_15563, dtype="float64") /* ty=Tensor[(4, 9, 15), float64] */;
    log(%722) /* ty=Tensor[(4, 9, 15), float64] */
  };
  %723(%var_15582) /* ty=Tensor[(4, 9, 15), float64] */
}

def @func_7356() -> Tensor[(4, 4, 2), int8] {
  %724 = @func_6544() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %724.0
}

def @func_1216(%var_1214: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) {
  %725 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %726 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %727 = cast(%var_1214, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %728 = cast(%var_1214, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %729 = reshape(%727, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %730 = reshape(%728, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
  %731 = @func_1074(%729, %730) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
  %732 = %725.0;
  %733 = %726.0;
  %734 = %731.0;
  (%732, %733, %734, %var_1214)
}

def @func_4999() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(490, 2), uint16]) {
  %735 = cast(meta[relay.Constant][30] /* ty=Tensor[(490, 2), uint16] */, dtype="uint16") /* ty=Tensor[(490, 2), uint16] */;
  %736 = reshape(%735, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %737 = @func_4909(%736) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %738 = @func_2753() /* ty=Tensor[(4, 4, 2), int8] */;
  %739 = %737.2;
  (%738, %739, meta[relay.Constant][30] /* ty=Tensor[(490, 2), uint16] */)
}

def @func_9236() -> (Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(144), uint16]) {
  %744 = fn () -> (Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(144), uint16]) {
    %740 = @func_2132() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) */;
    %741 = %740.1;
    %742 = @func_7356() /* ty=Tensor[(4, 4, 2), int8] */;
    %743 = @func_6897() /* ty=Tensor[(144), uint16] */;
    (%741, %742, %743)
  };
  %744() /* ty=(Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(144), uint16]) */
}

def @func_12959() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %749 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %745 = @func_5661() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %746 = @func_10225() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %747 = %745.0;
    %748 = %746.0;
    (%747, %748)
  };
  %749() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_13765(%var_13764: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %758 = fn (%var_13748: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
    %750 = @func_5432() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
    %751 = cast(%var_13748, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %752 = reshape(%751, newshape=[980]) /* ty=Tensor[(980), uint16] */;
    %753 = @func_1276(%752) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
    %754 = @func_12836() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %755 = %750.3;
    %756 = %753.0;
    %757 = %754.0;
    (%755, %756, %var_13748, %757)
  };
  %758(%var_13764) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */
}

def @func_14978() -> (Tensor[(4, 4, 2), int8],) {
  %759 = @func_8162() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %760 = %759.1;
  (%760,)
}

def @func_6756() -> Tensor[(4, 4, 2), int8] {
  %761 = @func_5341() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %761.0
}

def @func_12838() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_12836() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_11094() -> (Tensor[(4, 4, 2), int8],) {
  %762 = @func_9280() /* ty=Tensor[(4, 4, 2), int8] */;
  (%762,)
}

def @func_13442() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %767 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %763 = @func_9235() /* ty=(Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(144), uint16]) */;
    %764 = %763.1;
    %765 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
    %766 = @func_9280() /* ty=Tensor[(4, 4, 2), int8] */;
    (%764, %765, %766)
  };
  %767() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_1219(%var_1217: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) {
  @func_1216(%var_1217) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */
}

def @func_6914() -> (Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64]) {
  %772 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64]) {
    %768 = @func_6249() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %769 = @func_5789() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) */;
    %770 = %768.0;
    %771 = %769.1;
    (%770, %771)
  };
  %772() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64]) */
}

def @func_7027() -> (Tensor[(4, 4, 2), int8],) {
  %773 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
  (%773,)
}

def @func_15957() -> (Tensor[(4, 4, 2), int8],) {
  %774 = @func_11329() /* ty=Tensor[(4, 4, 2), int8] */;
  (%774,)
}

def @func_8127() -> (Tensor[(4, 4, 2), int8],) {
  @func_8125() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_14285() -> (Tensor[(980, ?), int32],) {
  %776 = fn () -> (Tensor[(980, ?), int32],) {
    %775 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
    (%775,)
  };
  %776() /* ty=(Tensor[(980, ?), int32],) */
}

def @func_6115(%var_6113: Tensor[(5, 15, 5), float64], %var_6114: Tensor[(5, 15, 5), float64]) -> (Tensor[(5, 15, 5), bool],) {
  @func_6111(%var_6113, %var_6114) /* ty=(Tensor[(5, 15, 5), bool],) */
}

def @func_15718() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
  %777 = @func_2753() /* ty=Tensor[(4, 4, 2), int8] */;
  %778 = @func_15619() /* ty=Tensor[(4, 4, 2), bool] */;
  (%777, %778)
}

def @func_11970(%var_11968: Tensor[(980), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(264), bool], Tensor[(980), float64], Tensor[(264), bool]) {
  @func_11967(%var_11968) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(264), bool], Tensor[(980), float64], Tensor[(264), bool]) */
}

def @func_11300(%var_11297: Tensor[(144), uint16], %var_11298: Tensor[(66), float64], %var_11299: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32]) {
  %788 = fn (%var_11277: Tensor[(144), uint16], %var_11278: Tensor[(66), float64], %var_11279: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32]) {
    %779 = cast(%var_11277, dtype="uint16") /* ty=Tensor[(144), uint16] */;
    %780 = cast(%var_11278, dtype="float64") /* ty=Tensor[(66), float64] */;
    %781 = cast(%var_11279, dtype="float32") /* ty=Tensor[(660), float32] */;
    %782 = reshape(%779, newshape=[4, 36]) /* ty=Tensor[(4, 36), uint16] */;
    %783 = reshape(%780, newshape=[66]) /* ty=Tensor[(66), float64] */;
    %784 = reshape(%781, newshape=[660]) /* ty=Tensor[(660), float32] */;
    %785 = @func_6020(%782, %783, %784) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(4, 36), uint16], Tensor[(4, 4, 2), int8], Tensor[(66), float64], Tensor[(144), uint16], Tensor[(660), float32]) */;
    %786 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
    %787 = %785.0;
    (%786, %787, %var_11277, %var_11278, %var_11279)
  };
  %788(%var_11297, %var_11298, %var_11299) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32]) */
}

def @func_14909(%var_14907: Tensor[(144), uint16], %var_14908: Tensor[(660), float32]) -> (Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %801 = fn (%var_14880: Tensor[(144), uint16], %var_14882: Tensor[(660), float32]) -> (Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %789 = @func_2719() /* ty=(Tensor[(980), uint16],) */;
    %790 = cast(%var_14880, dtype="uint16") /* ty=Tensor[(144), uint16] */;
    %791 = cast(meta[relay.Constant][31] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
    %792 = cast(%var_14882, dtype="float32") /* ty=Tensor[(660), float32] */;
    %793 = reshape(%790, newshape=[144]) /* ty=Tensor[(144), uint16] */;
    %794 = reshape(%791, newshape=[66]) /* ty=Tensor[(66), float64] */;
    %795 = reshape(%792, newshape=[660]) /* ty=Tensor[(660), float32] */;
    %796 = @func_11296(%793, %794, %795) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32]) */;
    %797 = %789.0;
    %798 = %796.1;
    %799 = @func_7155() /* ty=Tensor[(4, 4, 2), int8] */;
    %800 = @func_8736() /* ty=Tensor[(4, 4, 2), int8] */;
    (%797, %798, %var_14880, meta[relay.Constant][31] /* ty=Tensor[(66), float64] */, %var_14882, %799, %800)
  };
  %801(%var_14907, %var_14908) /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(66), float64], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_2976(%var_2974: uint32, %var_2975: Tensor[(6, 8, 15), uint32]) -> (Tensor[(6, 8, 15), bool], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_2972(%var_2974, %var_2975) /* ty=(Tensor[(6, 8, 15), bool], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_11604() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %802 = @func_8125() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %803 = @func_10016() /* ty=Tensor[(4, 4, 2), int8] */;
  %804 = %802.0;
  (%803, %804)
}

def @func_12505() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %810 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %805 = @func_11559() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980, ?), int32]) */;
    %806 = @func_4784() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %807 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
    %808 = %805.0;
    %809 = %806.0;
    (%807, %808, %809)
  };
  %810() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_4754() -> (Tensor[(16, 7, 3), float32],) {
  %811 = @func_3064() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %812 = %811.0;
  (%812,)
}

def @func_4789() -> (Tensor[(4, 4, 2), int8],) {
  %814 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %813 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
    (%813,)
  };
  %814() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_7891(%var_7890: Tensor[(1680), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) {
  %824 = fn (%var_7883: Tensor[(1680), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) {
    %815 = @func_5341() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %816 = cast(%var_7883, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %817 = cast(%var_7883, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %818 = reshape(%816, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
    %819 = reshape(%817, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
    %820 = @func_2075(%818, %819) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) */;
    %821 = %815.1;
    %822 = @func_4814() /* ty=Tensor[(4, 4, 2), int8] */;
    %823 = %820.0;
    (%821, %822, %823, %var_7883)
  };
  %824(%var_7890) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) */
}

def @func_10895() -> Tensor[(4, 4, 2), int8] {
  @func_10893() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_16808() -> (Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8]) {
  %829 = fn () -> (Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8]) {
    %825 = @func_9096() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
    %826 = @func_2397() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %827 = %825.1;
    %828 = %826.1;
    (%827, %828)
  };
  %829() /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8]) */
}

def @func_14425() -> (Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), bool]) {
  @func_14423() /* ty=(Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), bool]) */
}

def @func_3066() -> (Tensor[(16, 7, 3), float32],) {
  @func_3064() /* ty=(Tensor[(16, 7, 3), float32],) */
}

def @func_12985() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %830 = @func_3523() /* ty=Tensor[(4, 4, 2), int8] */;
  %831 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
  (%830, %831)
}

def @func_16759() -> (Tensor[(4, 4, 2), int8], Tensor[(3, 88), bool], Tensor[(490, 2), float64]) {
  %832 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %833 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
  %834 = cast(%833, dtype="float64") /* ty=Tensor[(980, ?), float64] */;
  %835 = cast(%833, dtype="float64") /* ty=Tensor[(980, ?), float64] */;
  %836 = cast(meta[relay.Constant][32] /* ty=Tensor[(3, 88), bool] */, dtype="bool") /* ty=Tensor[(3, 88), bool] */;
  %837 = reshape(%834, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
  %838 = reshape(%835, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
  %839 = reshape(%836, newshape=[264]) /* ty=Tensor[(264), bool] */;
  %840 = @func_6604(%837, %838, %839) /* ty=(Tensor[(490, 2), uint64], Tensor[(490, 2), uint8], Tensor[(490, 2), float64], Tensor[(2, 11, 12), float64], Tensor[(264), bool]) */;
  %841 = %840.0;
  %842 = cast(%833, dtype="float64") /* ty=Tensor[(980, ?), float64] */;
  %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(2), int32] */;
  %844 = cast(%841, dtype="float64") /* ty=Tensor[(490, 2), float64] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %846 = %832.0;
  %847 = power(%844, %845) /* ty=Tensor[(490, 2), float64] */;
  (%846, meta[relay.Constant][32] /* ty=Tensor[(3, 88), bool] */, %847)
}

def @func_3744() -> (Tensor[(4, 4, 2), int8],) {
  %848 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
  (%848,)
}

def @func_4785() -> (Tensor[(4, 4, 2), int8],) {
  %851 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %849 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %850 = %849.0;
    (%850,)
  };
  %851() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_3158() -> (Tensor[(4, 4, 2), int8],) {
  %852 = @func_1553() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %853 = %852.0;
  (%853,)
}

def @func_4911(%var_4910: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %861 = fn (%var_4878: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
    %854 = @func_2551() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %855 = cast(%var_4878, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %856 = reshape(%855, newshape=[980]) /* ty=Tensor[(980), uint16] */;
    %857 = @func_3355(%856) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
    %858 = @func_4111() /* ty=Tensor[(4, 4, 2), int8] */;
    %859 = %854.0;
    %860 = %857.1;
    (%858, %859, %860, %var_4878)
  };
  %861(%var_4910) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */
}

def @func_4113() -> Tensor[(4, 4, 2), int8] {
  @func_4111() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_5433() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %871 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
    %862 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %863 = cast(meta[relay.Constant][33] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %864 = cast(meta[relay.Constant][33] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %865 = reshape(%863, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
    %866 = reshape(%864, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
    %867 = @func_1074(%865, %866) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
    %868 = %862.0;
    %869 = %867.1;
    %870 = @func_2583() /* ty=Tensor[(4, 4, 2), int8] */;
    (%868, %869, meta[relay.Constant][33] /* ty=Tensor[(980), uint16] */, %870)
  };
  %871() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */
}

def @func_8285() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_8283() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_14184() -> (Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(10, 4, 10), float64], Tensor[(400), float64]) {
  %872 = @func_2132() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) */;
  %873 = cast(meta[relay.Constant][34] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %874 = reshape(%873, newshape=[10, 4, 10]) /* ty=Tensor[(10, 4, 10), float64] */;
  %875 = @func_14000(%874) /* ty=(Tensor[(10, 4, 10), float64],) */;
  %876 = @func_9391() /* ty=Tensor[(144), uint16] */;
  %877 = @func_9207() /* ty=Tensor[(4, 4, 2), int8] */;
  %878 = %872.1;
  %879 = %875.0;
  (%876, %877, %878, %879, meta[relay.Constant][34] /* ty=Tensor[(400), float64] */)
}

def @func_1990(%var_1988: Tensor[(16, 12, 9), float64]) -> Tensor[(16, 12, 9), float64] {
  @func_1987(%var_1988) /* ty=Tensor[(16, 12, 9), float64] */
}

def @func_2754() -> Tensor[(4, 4, 2), int8] {
  %881 = fn () -> Tensor[(4, 4, 2), int8] {
    %880 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %880.0
  };
  %881() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_14645() -> Tensor[(4, 4, 2), int8] {
  @func_14643() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_3524() -> Tensor[(4, 4, 2), int8] {
  %883 = fn () -> Tensor[(4, 4, 2), int8] {
    %882 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %882.0
  };
  %883() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_15917() -> (Tensor[(4, 4, 2), int8], Tensor[(15, 12, 11), int16], Tensor[(1, 1980), float64]) {
  @func_15915() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(15, 12, 11), int16], Tensor[(1, 1980), float64]) */
}

def @func_2132() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) {
  %884 = @func_1953() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %885 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %886 = %885.0;
  %887 = cast(%886, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
  %888 = %884.0;
  %889 = atanh(%887) /* ty=Tensor[(4, 4, 2), float64] */;
  (%888, %889)
}

def @func_14762(%var_14761: Tensor[(660), float32]) -> (Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), float32], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(336, 1), float32]) {
  %900 = fn (%var_14744: Tensor[(660), float32]) -> (Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), float32], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(336, 1), float32]) {
    %890 = @func_5762() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
    %891 = cast(%var_14744, dtype="float32") /* ty=Tensor[(660), float32] */;
    %892 = reshape(%891, newshape=[660]) /* ty=Tensor[(660), float32] */;
    %893 = @func_5953(%892) /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) */;
    %894 = cast(meta[relay.Constant][35] /* ty=Tensor[(336, 1), float32] */, dtype="float32") /* ty=Tensor[(336, 1), float32] */;
    %895 = reshape(%894, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), float32] */;
    %896 = @func_12726(%895) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), bool], Tensor[(4, 4, 2), int8], Tensor[(980, 8), uint8], Tensor[(7840), int32], Tensor[(16, 7, 3), float32]) */;
    %897 = %890.1;
    %898 = %893.0;
    %899 = %896.0;
    (%897, %898, %var_14744, %899, meta[relay.Constant][35] /* ty=Tensor[(336, 1), float32] */)
  };
  %900(%var_14761) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), float32], Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(336, 1), float32]) */
}

def @func_11646() -> Tensor[(4, 4, 2), int8] {
  %902 = fn () -> Tensor[(4, 4, 2), int8] {
    %901 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %901.0
  };
  %902() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_8369() -> (Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32]) {
  %903 = @func_3064() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %904 = @func_7836() /* ty=Tensor[(4, 4, 2), int8] */;
  %905 = %903.0;
  (%904, %905)
}

def @func_14219(%var_14187: Tensor[(15, 12, 11), float64], %var_14188: Tensor[(15, 12, 11), float64]) -> (Tensor[(15, 12, 11), int16],) {
  %906 = cast(%var_14188, dtype="bool") /* ty=Tensor[(15, 12, 11), bool] */;
  %907 = shape_of(%var_14187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(%var_14187, dtype="bool") /* ty=Tensor[(15, 12, 11), bool] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %910 = greater_equal(%908, %909) /* ty=Tensor[(15, 12, 11), bool] */;
  %911 = cast(%910, dtype="int16") /* ty=Tensor[(15, 12, 11), int16] */;
  %912 = shape_of(%var_14188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %913 = cast(%var_14188, dtype="int16") /* ty=Tensor[(15, 12, 11), int16] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %915 = add(%913, %914) /* ty=Tensor[(15, 12, 11), int16] */;
  (%915,)
}

def @func_12014() -> Tensor[(4, 4, 2), bool] {
  @func_12012() /* ty=Tensor[(4, 4, 2), bool] */
}

def @func_7189(%var_7185: Tensor[(1, 35), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(1, 35), float64]) {
  %916 = cast(%var_7185, dtype="float64") /* ty=Tensor[(1, 35), float64] */;
  %917 = reshape(%916, newshape=[35]) /* ty=Tensor[(35), float64] */;
  %918 = @func_6406(%917) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(7, 14, 5), uint64], Tensor[(4, 4, 2), int8]) */;
  %919 = @func_6756() /* ty=Tensor[(4, 4, 2), int8] */;
  %920 = %918.2;
  (%919, %920, %var_7185)
}

def @func_8137(%var_8133: uint32, %var_8134: Tensor[(720), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(6, 8, 15), bool], uint32, Tensor[(720), uint32]) {
  %921 = @func_3249() /* ty=(Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %922 = cast(%var_8133, dtype="uint32") /* ty=uint32 */;
  %923 = cast(%var_8134, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %924 = reshape(%922, newshape=[]) /* ty=uint32 */;
  %925 = reshape(%923, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), uint32] */;
  %926 = @func_2972(%924, %925) /* ty=(Tensor[(6, 8, 15), bool], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %927 = %921.1;
  %928 = %926.0;
  (%927, %928, %var_8133, %var_8134)
}

def @func_5635(%var_5614: Tensor[(2, 864), float64], %var_5615: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), float32], Tensor[(144), uint16], Tensor[(2, 864), float64], Tensor[(980), uint16]) {
  %929 = @func_3872() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %930 = @func_4589() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(8, 3, 6), float32]) */;
  %931 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
  %932 = cast(%931, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %933 = cast(%var_5614, dtype="float64") /* ty=Tensor[(2, 864), float64] */;
  %934 = cast(%var_5615, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %935 = reshape(%932, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %936 = reshape(%933, newshape=[1728]) /* ty=Tensor[(1728), float64] */;
  %937 = reshape(%934, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %938 = @func_4184(%935, %936, %937) /* ty=(Tensor[(4, 4, 2), int64], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(16, 12, 9), float64], Tensor[(1728), float64], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %939 = @func_3385() /* ty=Tensor[(4, 4, 2), int8] */;
  %940 = %929.0;
  %941 = %930.4;
  %942 = %938.2;
  (%939, %931, %940, %941, %942, %var_5614, %var_5615)
}

def @func_8162() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %943 = @func_6499() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %944 = @func_7510() /* ty=Tensor[(4, 4, 2), int8] */;
  %945 = %943.0;
  (%944, %945)
}

def @func_11129() -> (Tensor[(4, 4, 2), int8],) {
  @func_11127() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_3250() -> (Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %952 = fn () -> (Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %946 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 9, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
    %947 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %948 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
    %949 = rsqrt(%946) /* ty=Tensor[(2, 9, 11), float64] */;
    %950 = %947.0;
    %951 = %948.0;
    (%949, %950, %951)
  };
  %952() /* ty=(Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_1431() -> (Tensor[(4, 4, 2), int8],) {
  %955 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %953 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
    %954 = %953.3;
    (%954,)
  };
  %955() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_10007() -> (Tensor[(4, 4, 2), int8],) {
  %956 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %957 = %956.0;
  (%957,)
}

def @func_13686() -> (Tensor[(4, 4, 2), int8],) {
  %960 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %958 = @func_10702() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %959 = %958.0;
    (%959,)
  };
  %960() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_14125() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_14123() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_10128() -> Tensor[(4, 4, 2), int8] {
  %961 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %961.0
}

def @func_13271() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %972 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %962 = @func_6191() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %963 = @func_12856() /* ty=Tensor[(16, 15, 7), float64] */;
    %964 = cast(%963, dtype="float32") /* ty=Tensor[(16, 15, 7), float32] */;
    %965 = @func_6301() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %966 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
    %967 = @func_7356() /* ty=Tensor[(4, 4, 2), int8] */;
    %968 = %962.0;
    %969 = atanh(%964) /* ty=Tensor[(16, 15, 7), float32] */;
    %970 = %965.1;
    %971 = %966.1;
    (%967, %968, %969, %970, %971)
  };
  %972() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_1414() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %980 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
    %973 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %974 = cast(meta[relay.Constant][37] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %975 = reshape(%974, newshape=[980]) /* ty=Tensor[(980), uint16] */;
    %976 = @func_1276(%975) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
    %977 = %973.0;
    %978 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
    %979 = %976.2;
    (%977, %978, %979, meta[relay.Constant][37] /* ty=Tensor[(980), uint16] */)
  };
  %980() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */
}

def @func_8141(%var_8139: uint32, %var_8140: Tensor[(720), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(6, 8, 15), bool], uint32, Tensor[(720), uint32]) {
  @func_8137(%var_8139, %var_8140) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(6, 8, 15), bool], uint32, Tensor[(720), uint32]) */
}

def @func_2720() -> (Tensor[(980), uint16],) {
  %983 = fn () -> (Tensor[(980), uint16],) {
    %981 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
    %982 = %981.3;
    (%982,)
  };
  %983() /* ty=(Tensor[(980), uint16],) */
}

def @func_15280() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), int32]) {
  %984 = @func_14978() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %985 = @func_14726() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(35), bool], Tensor[(660), float32], Tensor[(35), float64]) */;
  %986 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %987 = @func_14284() /* ty=(Tensor[(980, ?), int32],) */;
  %988 = %984.0;
  %989 = %985.0;
  %990 = @func_8459() /* ty=Tensor[(4, 4, 2), int8] */;
  %991 = %986.0;
  %992 = %987.0;
  (%988, %989, %990, %991, %992)
}

def @func_6406(%var_6381: Tensor[(35), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(35), float64], Tensor[(7, 14, 5), uint64], Tensor[(4, 4, 2), int8]) {
  %993 = @func_5145() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16]) */;
  %994 = @func_4589() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(8, 3, 6), float32]) */;
  %995 = cast(%var_6381, dtype="float64") /* ty=Tensor[(35), float64] */;
  %996 = reshape(%995, newshape=[7, 1, 5]) /* ty=Tensor[(7, 1, 5), float64] */;
  %997 = @func_4524(%996) /* ty=(Tensor[(7, 1, 5), float64], Tensor[(980, ?), int32], Tensor[(4, 4, 2), int8]) */;
  %998 = %997.0;
  %999 = cast(%998, dtype="uint64") /* ty=Tensor[(7, 1, 5), uint64] */;
  %1000 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 14, 5), float64] */, dtype="uint64") /* ty=Tensor[(7, 14, 5), uint64] */;
  %1001 = @func_5341() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1002 = %993.0;
  %1003 = %994.2;
  %1004 = bitwise_xor(%999, %1000) /* ty=Tensor[(7, 14, 5), uint64] */;
  %1005 = %1001.1;
  (%1002, %1003, %var_6381, %1004, %1005)
}

def @func_9675() -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float32], Tensor[(66), float64]) {
  %1012 = fn () -> (Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float32], Tensor[(66), float64]) {
    %1006 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
    %1007 = cast(meta[relay.Constant][39] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
    %1008 = reshape(%1007, newshape=[66]) /* ty=Tensor[(66), float64] */;
    %1009 = @func_3731(%1008) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), int8], float64, Tensor[(66), float64], Tensor[(4, 4, 2), float32]) */;
    %1010 = %1006.1;
    %1011 = %1009.1;
    (%1010, %1011, meta[relay.Constant][39] /* ty=Tensor[(66), float64] */)
  };
  %1012() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), float32], Tensor[(66), float64]) */
}

def @func_10636() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1016 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %1013 = @func_7027() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1014 = @func_7510() /* ty=Tensor[(4, 4, 2), int8] */;
    %1015 = %1013.0;
    (%1014, %1015)
  };
  %1016() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_11030(%var_11028: Tensor[(980), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(225), float32], Tensor[(980), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_11027(%var_11028) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(225), float32], Tensor[(980), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_11560() -> (Tensor[(4, 4, 2), int8], Tensor[(980, ?), int32]) {
  %1020 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(980, ?), int32]) {
    %1017 = @func_1725() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) */;
    %1018 = %1017.0;
    %1019 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
    (%1018, %1019)
  };
  %1020() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980, ?), int32]) */
}

def @func_14000(%var_13986: Tensor[(10, 4, 10), float64]) -> (Tensor[(10, 4, 10), float64],) {
  %1021 = cast(%var_13986, dtype="float64") /* ty=Tensor[(10, 4, 10), float64] */;
  %1022 = log2(%1021) /* ty=Tensor[(10, 4, 10), float64] */;
  (%1022,)
}

def @func_1987(%var_1967: Tensor[(16, 12, 9), float64]) -> Tensor[(16, 12, 9), float64] {
  %1023 = cast(%var_1967, dtype="float64") /* ty=Tensor[(16, 12, 9), float64] */;
  cos(%1023) /* ty=Tensor[(16, 12, 9), float64] */
}

def @func_15620() -> Tensor[(4, 4, 2), bool] {
  %1025 = fn () -> Tensor[(4, 4, 2), bool] {
    %1024 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
    %1024.1
  };
  %1025() /* ty=Tensor[(4, 4, 2), bool] */
}

def @func_13503() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1029 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %1026 = @func_3872() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1027 = @func_8393() /* ty=Tensor[(4, 4, 2), int8] */;
    %1028 = %1026.0;
    (%1027, %1028)
  };
  %1029() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_7620() -> Tensor[(4, 4, 2), int8] {
  @func_7356() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_14031(%var_14029: Tensor[(1728), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(1728), float64], Tensor[(490, 2), uint16]) {
  @func_14028(%var_14029) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(1728), float64], Tensor[(490, 2), uint16]) */
}

def @func_974(%var_973: Tensor[(144), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16]) {
  %1038 = fn (%var_947: Tensor[(144), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16]) {
    %1030 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1031 = cast(%var_947, dtype="uint16") /* ty=Tensor[(144), uint16] */;
    %1032 = cast(%var_947, dtype="uint16") /* ty=Tensor[(144), uint16] */;
    %1033 = reshape(%1031, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
    %1034 = reshape(%1032, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
    %1035 = @func_771(%1033, %1034) /* ty=(Tensor[(8, 3, 6), uint16],) */;
    %1036 = %1030.0;
    %1037 = %1035.0;
    (%1036, %1037, %var_947)
  };
  %1038(%var_973) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16]) */
}

def @func_7556(%var_7554: Tensor[(980, 2), uint16]) -> (Tensor[(980, 2), uint8],) {
  @func_7553(%var_7554) /* ty=(Tensor[(980, 2), uint8],) */
}

def @func_10745(%var_10743: Tensor[(36), uint64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(2, 11, 12), float64], Tensor[(264), bool], Tensor[(1, 3, 12), uint64], uint64, Tensor[(36), uint64]) {
  @func_10742(%var_10743) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(2, 11, 12), float64], Tensor[(264), bool], Tensor[(1, 3, 12), uint64], uint64, Tensor[(36), uint64]) */
}

def @func_3192() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) {
  %1043 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) {
    %1039 = @func_1364() /* ty=Tensor[(4, 4, 2), int8] */;
    %1040 = cast(%1039, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
    %1041 = reshape(%1040, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
    %1042 = @func_2682(%1041) /* ty=Tensor[(4, 4, 2), float32] */;
    (%1039, %1042)
  };
  %1043() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */
}

def @func_6061() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1048 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %1044 = @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1045 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1046 = %1044.0;
    %1047 = %1045.0;
    (%1046, %1047)
  };
  %1048() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_6897() -> Tensor[(144), uint16] {
  %1049 = @func_4589() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(144), uint16], Tensor[(8, 3, 6), float32]) */;
  %1049.3
}

def @func_15053() -> Tensor[(4, 4, 2), int8] {
  @func_15051() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_8394() -> Tensor[(4, 4, 2), int8] {
  %1050 = fn () -> Tensor[(4, 4, 2), int8] {
    @func_3511() /* ty=Tensor[(4, 4, 2), int8] */
  };
  %1050() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_13781() -> Tensor[(10, 8, 14), float32] {
  %1052 = fn () -> Tensor[(10, 8, 14), float32] {
    %1051 = cast(meta[relay.Constant][40] /* ty=Tensor[(10, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(10, 8, 14), float32] */;
    acosh(%1051) /* ty=Tensor[(10, 8, 14), float32] */
  };
  %1052() /* ty=Tensor[(10, 8, 14), float32] */
}

def @func_1077(%var_1075: Tensor[(10, 14, 7), uint16], %var_1076: Tensor[(10, 14, 7), uint16]) -> (Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) {
  %1060 = fn (%var_1057: Tensor[(10, 14, 7), uint16], %var_1058: Tensor[(10, 14, 7), uint16]) -> (Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) {
    %1053 = cast(%var_1058, dtype="uint16") /* ty=Tensor[(10, 14, 7), uint16] */;
    %1054 = shape_of(%var_1057, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1055 = cast(%var_1057, dtype="uint16") /* ty=Tensor[(10, 14, 7), uint16] */;
    %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1057 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1058 = bitwise_or(%1055, %1056) /* ty=Tensor[(10, 14, 7), uint16] */;
    %1059 = %1057.0;
    (%1058, %1059)
  };
  %1060(%var_1075, %var_1076) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */
}

def @func_16761() -> (Tensor[(4, 4, 2), int8], Tensor[(3, 88), bool], Tensor[(490, 2), float64]) {
  @func_16759() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(3, 88), bool], Tensor[(490, 2), float64]) */
}

def @func_5209() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1061 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %1062 = @func_4999() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(490, 2), uint16]) */;
  %1063 = @func_3158() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1064 = %1061.1;
  %1065 = %1062.0;
  %1066 = %1063.0;
  (%1064, %1065, %1066)
}

def @func_7553(%var_7543: Tensor[(980, 2), uint16]) -> (Tensor[(980, 2), uint8],) {
  %1067 = @func_4262() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(660), float32], Tensor[(980, 1), uint16]) */;
  %1068 = %1067.3;
  %1069 = cast(%1068, dtype="uint8") /* ty=Tensor[(980, 1), uint8] */;
  %1070 = cast(%var_7543, dtype="uint8") /* ty=Tensor[(980, 2), uint8] */;
  %1071 = bitwise_or(%1069, %1070) /* ty=Tensor[(980, 2), uint8] */;
  (%1071,)
}

def @func_6111(%var_6094: Tensor[(5, 15, 5), float64], %var_6107: Tensor[(5, 15, 5), float64]) -> (Tensor[(5, 15, 5), bool],) {
  %1072 = cast(%var_6094, dtype="float64") /* ty=Tensor[(5, 15, 5), float64] */;
  %1073 = atan(%1072) /* ty=Tensor[(5, 15, 5), float64] */;
  %1074 = cast(%var_6107, dtype="bool") /* ty=Tensor[(5, 15, 5), bool] */;
  %1075 = shape_of(%1073, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(%1073, dtype="bool") /* ty=Tensor[(5, 15, 5), bool] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1078 = less(%1076, %1077) /* ty=Tensor[(5, 15, 5), bool] */;
  (%1078,)
}

def @func_16258(%var_16256: Tensor[(980), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), float64], Tensor[(6, 44), bool], Tensor[(4, 4, 2), int8], Tensor[(980, 2), uint8], Tensor[(1960), uint16]) {
  @func_16255(%var_16256) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), float64], Tensor[(6, 44), bool], Tensor[(4, 4, 2), int8], Tensor[(980, 2), uint8], Tensor[(1960), uint16]) */
}

def @func_2353() -> Tensor[(4, 4, 2), int8] {
  %1080 = fn () -> Tensor[(4, 4, 2), int8] {
    %1079 = @func_2132() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) */;
    %1079.0
  };
  %1080() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_6191() -> (Tensor[(4, 4, 2), int8],) {
  %1081 = @func_4379() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1082 = %1081.1;
  (%1082,)
}

def @func_12145(%var_12142: Tensor[(1, 15, 9), uint64], %var_12143: Tensor[(9, 15, 9), uint64], %var_12144: Tensor[(1170), float64]) -> (Tensor[(9, 15, 9), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(15, 6, 13), float64], Tensor[(1170), float64]) {
  @func_12140(%var_12142, %var_12143, %var_12144) /* ty=(Tensor[(9, 15, 9), float32], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(15, 6, 13), float64], Tensor[(1170), float64]) */
}

def @func_13615() -> (Tensor[(3, 13, 10), float32],) {
  %1083 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 13, 10), float32] */;
  %1084 = sin(%1083) /* ty=Tensor[(3, 13, 10), float32] */;
  (%1084,)
}

def @main(%var_16940: Tensor[(8, 14, 16), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(8, 14, 16), float32], Tensor[(8, 14, 16), float64]) {
  %1085 = @func_1414() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %1086 = cast(%var_16940, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %1087 = cast(%var_16940, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %1088 = rsqrt(%1087) /* ty=Tensor[(8, 14, 16), float32] */;
  %1089 = cast(%1088, dtype="float64") /* ty=Tensor[(8, 14, 16), float64] */;
  %1090 = %1085.2;
  %1091 = sqrt(%1086) /* ty=Tensor[(8, 14, 16), float32] */;
  %1092 = acosh(%1089) /* ty=Tensor[(8, 14, 16), float64] */;
  (%1090, %1091, %1092)
}

def @func_7277(%var_7250: Tensor[(84, 20), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(84, 20), uint32], Tensor[(4, 4, 2), int8]) {
  %1093 = @func_4031() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %1094 = cast(%var_7250, dtype="uint32") /* ty=Tensor[(84, 20), uint32] */;
  %1095 = cast(%var_7250, dtype="uint32") /* ty=Tensor[(84, 20), uint32] */;
  %1096 = reshape(%1094, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %1097 = reshape(%1095, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
  %1098 = @func_2075(%1096, %1097) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) */;
  %1099 = @func_3158() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1100 = %1093.1;
  %1101 = %1098.1;
  %1102 = %1099.0;
  (%1100, %1101, %var_7250, %1102)
}

def @func_5708() -> (Tensor[(16, 7, 3), float32],) {
  %1103 = @func_4754() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %1104 = %1103.0;
  (%1104,)
}

def @func_8459() -> Tensor[(4, 4, 2), int8] {
  @func_4856() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_13384() -> (Tensor[(4, 4, 2), int8],) {
  @func_13382() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_2773() -> (Tensor[(4, 4, 2), int8],) {
  @func_2771() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_14123() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1105 = @func_1725() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) */;
  %1106 = @func_11094() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1107 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %1108 = @func_12958() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1109 = @func_13911() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1110 = %1105.0;
  %1111 = %1106.0;
  %1112 = %1107.1;
  %1113 = %1108.1;
  %1114 = %1109.0;
  (%1110, %1111, %1112, %1113, %1114)
}

def @func_15326() -> Tensor[(4, 4, 2), int8] {
  %1115 = @func_8650() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1115.0
}

def @func_15161() -> (Tensor[(4, 4, 2), int8], Tensor[(10, 8, 14), float32], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1127 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(10, 8, 14), float32], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %1116 = @func_14978() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1117 = @func_4031() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
    %1118 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1119 = @func_10007() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1120 = @func_7510() /* ty=Tensor[(4, 4, 2), int8] */;
    %1121 = @func_13780() /* ty=Tensor[(10, 8, 14), float32] */;
    %1122 = %1116.0;
    %1123 = @func_7928() /* ty=Tensor[(980), uint16] */;
    %1124 = %1117.5;
    %1125 = %1118.0;
    %1126 = %1119.0;
    (%1120, %1121, %1122, %1123, %1124, %1125, %1126)
  };
  %1127() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 8, 14), float32], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_8295(%var_8289: Tensor[(4, 1, 5), float32]) -> (Tensor[(4, 1, 5), float32],) {
  %1128 = cast(%var_8289, dtype="float32") /* ty=Tensor[(4, 1, 5), float32] */;
  %1129 = atanh(%1128) /* ty=Tensor[(4, 1, 5), float32] */;
  (%1129,)
}

def @func_14003(%var_14001: Tensor[(10, 4, 10), float64]) -> (Tensor[(10, 4, 10), float64],) {
  @func_14000(%var_14001) /* ty=(Tensor[(10, 4, 10), float64],) */
}

def @func_8525() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(16, 15, 7), float64], Tensor[(660), float32]) {
  %1141 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(16, 15, 7), float64], Tensor[(660), float32]) {
    %1130 = cast(meta[relay.Constant][42] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %1131 = cast(meta[relay.Constant][42] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %1132 = reshape(%1130, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
    %1133 = reshape(%1131, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
    %1134 = @func_1074(%1132, %1133) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
    %1135 = cast(meta[relay.Constant][43] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %1136 = reshape(%1135, newshape=[660]) /* ty=Tensor[(660), float32] */;
    %1137 = @func_5953(%1136) /* ty=(Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), float64], Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), bool], Tensor[(660), float32]) */;
    %1138 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
    %1139 = %1134.1;
    %1140 = %1137.2;
    (%1138, %1139, meta[relay.Constant][42] /* ty=Tensor[(980), uint16] */, %1140, meta[relay.Constant][43] /* ty=Tensor[(660), float32] */)
  };
  %1141() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(16, 15, 7), float64], Tensor[(660), float32]) */
}

def @func_911() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
  %1153 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
    %1142 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1143 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1144 = %1143.0;
    %1145 = @func_806() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1146 = %1145.0;
    %1147 = cast(%1146, dtype="bool") /* ty=Tensor[(4, 4, 2), bool] */;
    %1148 = shape_of(%1144, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1149 = cast(%1144, dtype="bool") /* ty=Tensor[(4, 4, 2), bool] */;
    %1150 = dyn.reshape(%1147, %1148, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1151 = %1142.0;
    %1152 = logical_and(%1149, %1150) /* ty=Tensor[(4, 4, 2), bool] */;
    (%1151, %1152)
  };
  %1153() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */
}

def @func_5324() -> (Tensor[(980), float64],) {
  @func_5322() /* ty=(Tensor[(980), float64],) */
}

def @func_9860() -> (Tensor[(144), uint16], Tensor[(4, 4, 2), int8]) {
  @func_9858() /* ty=(Tensor[(144), uint16], Tensor[(4, 4, 2), int8]) */
}

def @func_15720() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) {
  @func_15718() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */
}

def @func_3873() -> (Tensor[(4, 4, 2), int8],) {
  %1156 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %1154 = @func_2771() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1155 = %1154.0;
    (%1155,)
  };
  %1156() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_2684(%var_2683: Tensor[(4, 4, 2), int8]) -> Tensor[(4, 4, 2), float32] {
  %1163 = fn (%var_2663: Tensor[(4, 4, 2), int8]) -> Tensor[(4, 4, 2), float32] {
    %1157 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1158 = %1157.0;
    %1159 = cast(%var_2663, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
    %1160 = shape_of(%1158, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1161 = cast(%1158, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
    %1162 = dyn.reshape(%1159, %1160, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    divide(%1161, %1162) /* ty=Tensor[(4, 4, 2), float32] */
  };
  %1163(%var_2683) /* ty=Tensor[(4, 4, 2), float32] */
}

def @func_4487() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), bool]) {
  %1164 = @func_3249() /* ty=(Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1165 = %1164.2;
  %1166 = cast(%1165, dtype="int8") /* ty=Tensor[(4, 4, 2), int8] */;
  %1167 = reshape(%1166, newshape=[4, 4, 2]) /* ty=Tensor[(4, 4, 2), int8] */;
  %1168 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %1169 = @func_2682(%1167) /* ty=Tensor[(4, 4, 2), float32] */;
  %1170 = %1168.1;
  (%1165, %1169, %1170)
}

def @func_7156() -> Tensor[(4, 4, 2), int8] {
  %1172 = fn () -> Tensor[(4, 4, 2), int8] {
    %1171 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1171.0
  };
  %1172() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_10320(%var_10317: Tensor[(5, 9, 5), float32], %var_10318: Tensor[(5, 9, 5), float32], %var_10319: Tensor[(5, 9, 5), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(5, 9, 5), float32], Tensor[(5, 9, 5), uint64], Tensor[(4, 4, 2), float32]) {
  @func_10315(%var_10317, %var_10318, %var_10319) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(5, 9, 5), float32], Tensor[(5, 9, 5), uint64], Tensor[(4, 4, 2), float32]) */
}

def @func_9148() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1176 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %1173 = @func_1818() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1174 = @func_6756() /* ty=Tensor[(4, 4, 2), int8] */;
    %1175 = %1173.0;
    (%1174, %1175)
  };
  %1176() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_1279(%var_1277: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  @func_1276(%var_1277) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */
}

def @func_4489() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), bool]) {
  @func_4487() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(4, 4, 2), bool]) */
}

def @func_12987() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_12985() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_10176() -> (Tensor[(490, 2), float32],) {
  %1177 = @func_4999() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(490, 2), uint16]) */;
  %1178 = %1177.2;
  %1179 = cast(%1178, dtype="float32") /* ty=Tensor[(490, 2), float32] */;
  %1180 = erf(%1179) /* ty=Tensor[(490, 2), float32] */;
  (%1180,)
}

def @func_3513() -> Tensor[(4, 4, 2), int8] {
  @func_3511() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_13736() -> (Tensor[(4, 4, 2), int8],) {
  %1182 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %1181 = @func_7155() /* ty=Tensor[(4, 4, 2), int8] */;
    (%1181,)
  };
  %1182() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_10464() -> Tensor[(4, 4, 2), int8] {
  @func_6353() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_4334() -> Tensor[(980, ?), int32] {
  %1191 = fn () -> Tensor[(980, ?), int32] {
    %1183 = @func_3852() /* ty=(Tensor[(980, 1), uint16],) */;
    %1184 = %1183.0;
    %1185 = cast(%1184, dtype="float32") /* ty=Tensor[(980, 1), float32] */;
    %1186 = atanh(%1185) /* ty=Tensor[(980, 1), float32] */;
    %1187 = cast(%1184, dtype="int32") /* ty=Tensor[(980, 1), int32] */;
    %1188 = shape_of(%1186, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1189 = cast(%1186, dtype="int32") /* ty=Tensor[(980, 1), int32] */;
    %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    maximum(%1189, %1190) /* ty=Tensor[(980, ?), int32] */
  };
  %1191() /* ty=Tensor[(980, ?), int32] */
}

def @func_13959() -> (Tensor[(4, 4, 2), int8],) {
  %1193 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %1192 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
    (%1192,)
  };
  %1193() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_8678() -> (Tensor[(4, 4, 2), int8],) {
  %1196 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %1194 = @func_5341() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %1195 = %1194.1;
    (%1195,)
  };
  %1196() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_15560() -> (Tensor[(4, 4, 2), int8],) {
  %1199 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %1197 = @func_8677() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1198 = %1197.0;
    (%1198,)
  };
  %1199() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_5710() -> (Tensor[(16, 7, 3), float32],) {
  @func_5708() /* ty=(Tensor[(16, 7, 3), float32],) */
}

def @func_775(%var_773: Tensor[(8, 3, 6), uint16], %var_774: Tensor[(8, 3, 6), uint16]) -> (Tensor[(8, 3, 6), uint16],) {
  @func_771(%var_773, %var_774) /* ty=(Tensor[(8, 3, 6), uint16],) */
}

def @func_7929() -> Tensor[(980), uint16] {
  %1201 = fn () -> Tensor[(980), uint16] {
    %1200 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
    %1200.0
  };
  %1201() /* ty=Tensor[(980), uint16] */
}

def @func_1953() -> (Tensor[(4, 4, 2), int8],) {
  %1202 = @func_1818() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1203 = %1202.0;
  (%1203,)
}

def @func_1819() -> (Tensor[(4, 4, 2), int8],) {
  %1206 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %1204 = @func_1725() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, ?), float64]) */;
    %1205 = %1204.1;
    (%1205,)
  };
  %1206() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_10130() -> Tensor[(4, 4, 2), int8] {
  @func_10128() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_12726(%var_12707: Tensor[(16, 7, 3), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), bool], Tensor[(4, 4, 2), int8], Tensor[(980, 8), uint8], Tensor[(7840), int32], Tensor[(16, 7, 3), float32]) {
  %1207 = @func_6301() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1208 = @func_3064() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %1209 = %1208.0;
  %1210 = cast(%var_12707, dtype="bool") /* ty=Tensor[(16, 7, 3), bool] */;
  %1211 = shape_of(%1209, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1212 = cast(%1209, dtype="bool") /* ty=Tensor[(16, 7, 3), bool] */;
  %1213 = dyn.reshape(%1210, %1211, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1214 = cast(meta[relay.Constant][44] /* ty=Tensor[(7840), int32] */, dtype="int32") /* ty=Tensor[(7840), int32] */;
  %1215 = reshape(%1214, newshape=[980, 8]) /* ty=Tensor[(980, 8), int32] */;
  %1216 = @func_12247(%1215) /* ty=(Tensor[(980, 8), uint8], Tensor[(980, 8), bool], Tensor[(4, 4, 2), int8]) */;
  %1217 = cast(%1209, dtype="float32") /* ty=Tensor[(16, 7, 3), float32] */;
  %1218 = %1207.0;
  %1219 = less(%1212, %1213) /* ty=Tensor[(16, 7, 3), bool] */;
  %1220 = @func_7356() /* ty=Tensor[(4, 4, 2), int8] */;
  %1221 = %1216.0;
  %1222 = asinh(%1217) /* ty=Tensor[(16, 7, 3), float32] */;
  (%1218, %1219, %1220, %1221, meta[relay.Constant][44] /* ty=Tensor[(7840), int32] */, %1222)
}

def @func_2517() -> (Tensor[(4, 4, 2), int8],) {
  @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_2886(%var_2884: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  @func_2883(%var_2884) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */
}

def @func_7457(%var_7436: Tensor[(4, 4, 2), int8]) -> Tensor[(4, 4, 2), float32] {
  %1223 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1224 = %1223.0;
  %1225 = cast(%var_7436, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
  %1226 = shape_of(%1224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1227 = cast(%1224, dtype="float32") /* ty=Tensor[(4, 4, 2), float32] */;
  %1228 = dyn.reshape(%1225, %1226, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%1227, %1228) /* ty=Tensor[(4, 4, 2), float32] */
}

def @func_7836() -> Tensor[(4, 4, 2), int8] {
  %1229 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %1229.2
}

def @func_4527(%var_4525: Tensor[(7, 1, 5), float64]) -> (Tensor[(7, 1, 5), float64], Tensor[(980, ?), int32], Tensor[(4, 4, 2), int8]) {
  @func_4524(%var_4525) /* ty=(Tensor[(7, 1, 5), float64], Tensor[(980, ?), int32], Tensor[(4, 4, 2), int8]) */
}

def @func_4031() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) {
  %1230 = @func_3158() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1231 = @func_2397() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1232 = cast(meta[relay.Constant][45] /* ty=Tensor[(980, 1), uint16] */, dtype="uint16") /* ty=Tensor[(980, 1), uint16] */;
  %1233 = reshape(%1232, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %1234 = @func_1276(%1233) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %1235 = @func_1953() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1236 = %1230.0;
  %1237 = %1231.2;
  %1238 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
  %1239 = @func_2806() /* ty=Tensor[(4, 4, 2), int8] */;
  %1240 = %1234.3;
  %1241 = %1235.0;
  (%1236, %1237, %1238, %1239, %1240, meta[relay.Constant][45] /* ty=Tensor[(980, 1), uint16] */, %1241)
}

def @func_3019() -> (Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %1246 = fn () -> (Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
    %1242 = @func_2719() /* ty=(Tensor[(980), uint16],) */;
    %1243 = @func_2551() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1244 = %1242.0;
    %1245 = %1243.0;
    (%1244, %1245)
  };
  %1246() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */
}

def @func_9175() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1247 = @func_2771() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1248 = @func_3923() /* ty=Tensor[(4, 4, 2), int8] */;
  %1249 = %1247.0;
  (%1248, %1249)
}

def @func_9962(%var_9960: uint64) -> (Tensor[(980, 12), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(1, 3, 12), uint64], uint64, Tensor[(36), uint64], Tensor[(4, 4, 2), int8]) {
  @func_9959(%var_9960) /* ty=(Tensor[(980, 12), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(1, 3, 12), uint64], uint64, Tensor[(36), uint64], Tensor[(4, 4, 2), int8]) */
}

def @func_9329(%var_9299: Tensor[(980, 14), int32], %var_9324: Tensor[(980, 14), float64]) -> (Tensor[(980, 14), bool], Tensor[(980, 14), float32], Tensor[(980, 14), uint32]) {
  %1250 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
  %1251 = cast(%1250, dtype="bool") /* ty=Tensor[(980, ?), bool] */;
  %1252 = cast(%var_9299, dtype="bool") /* ty=Tensor[(980, 14), bool] */;
  %1253 = cast(%var_9299, dtype="float32") /* ty=Tensor[(980, 14), float32] */;
  %1254 = cast(%var_9299, dtype="float64") /* ty=Tensor[(980, 14), float64] */;
  %1255 = atanh(%1254) /* ty=Tensor[(980, 14), float64] */;
  %1256 = cast(%var_9324, dtype="uint32") /* ty=Tensor[(980, 14), uint32] */;
  %1257 = shape_of(%1255, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1258 = cast(%1255, dtype="uint32") /* ty=Tensor[(980, 14), uint32] */;
  %1259 = dyn.reshape(%1256, %1257, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1260 = not_equal(%1251, %1252) /* ty=Tensor[(980, 14), bool] */;
  %1261 = cosh(%1253) /* ty=Tensor[(980, 14), float32] */;
  %1262 = bitwise_or(%1258, %1259) /* ty=Tensor[(980, 14), uint32] */;
  (%1260, %1261, %1262)
}

def @func_14186() -> (Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(10, 4, 10), float64], Tensor[(400), float64]) {
  @func_14184() /* ty=(Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(10, 4, 10), float64], Tensor[(400), float64]) */
}

def @func_7029() -> (Tensor[(4, 4, 2), int8],) {
  @func_7027() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_16629(%var_16566: Tensor[(14, 70), uint16], %var_16569: Tensor[(14, 70), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(14, 70), bool], Tensor[(4, 4, 2), bool], Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) {
  %1263 = @func_3191() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
  %1264 = cast(%var_16566, dtype="uint16") /* ty=Tensor[(14, 70), uint16] */;
  %1265 = reshape(%1264, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %1266 = @func_1216(%1265) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16]) */;
  %1267 = cast(%var_16569, dtype="bool") /* ty=Tensor[(14, 70), bool] */;
  %1268 = shape_of(%var_16566, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1269 = cast(%var_16566, dtype="bool") /* ty=Tensor[(14, 70), bool] */;
  %1270 = dyn.reshape(%1267, %1268, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1271 = cast(%var_16566, dtype="uint16") /* ty=Tensor[(14, 70), uint16] */;
  %1272 = reshape(%1271, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %1273 = @func_1276(%1272) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %1274 = @func_14123() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1275 = %1263.0;
  %1276 = %1266.0;
  %1277 = not_equal(%1269, %1270) /* ty=Tensor[(14, 70), bool] */;
  %1278 = @func_12012() /* ty=Tensor[(4, 4, 2), bool] */;
  %1279 = %1273.3;
  %1280 = %1274.2;
  (%1275, %1276, %1277, %1278, %1279, %1280)
}

def @func_8371() -> (Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32]) {
  @func_8369() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32]) */
}

def @func_11967(%var_11958: Tensor[(980), float64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(264), bool], Tensor[(980), float64], Tensor[(264), bool]) {
  %1281 = cast(%var_11958, dtype="float64") /* ty=Tensor[(980), float64] */;
  %1282 = cast(%var_11958, dtype="float64") /* ty=Tensor[(980), float64] */;
  %1283 = cast(meta[relay.Constant][46] /* ty=Tensor[(264), bool] */, dtype="bool") /* ty=Tensor[(264), bool] */;
  %1284 = reshape(%1281, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
  %1285 = reshape(%1282, newshape=[490, 2]) /* ty=Tensor[(490, 2), float64] */;
  %1286 = reshape(%1283, newshape=[264]) /* ty=Tensor[(264), bool] */;
  %1287 = @func_6604(%1284, %1285, %1286) /* ty=(Tensor[(490, 2), uint64], Tensor[(490, 2), uint8], Tensor[(490, 2), float64], Tensor[(2, 11, 12), float64], Tensor[(264), bool]) */;
  %1288 = @func_4856() /* ty=Tensor[(4, 4, 2), int8] */;
  %1289 = @func_11645() /* ty=Tensor[(4, 4, 2), int8] */;
  %1290 = %1287.4;
  (%1288, %1289, %1290, %var_11958, meta[relay.Constant][46] /* ty=Tensor[(264), bool] */)
}

def @func_16495() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1295 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %1291 = @func_15094() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16]) */;
    %1292 = @func_11094() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1293 = %1291.0;
    %1294 = %1292.0;
    (%1293, %1294)
  };
  %1295() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_5322() -> (Tensor[(980), float64],) {
  %1296 = @func_5145() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16]) */;
  %1297 = %1296.2;
  %1298 = cast(%1297, dtype="float32") /* ty=Tensor[(980), float32] */;
  %1299 = log2(%1298) /* ty=Tensor[(980), float32] */;
  %1300 = cast(%1299, dtype="float64") /* ty=Tensor[(980), float64] */;
  %1301 = sinh(%1300) /* ty=Tensor[(980), float64] */;
  (%1301,)
}

def @func_9858() -> (Tensor[(144), uint16], Tensor[(4, 4, 2), int8]) {
  %1302 = @func_2515() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1303 = @func_6897() /* ty=Tensor[(144), uint16] */;
  %1304 = %1302.0;
  (%1303, %1304)
}

def @func_6879(%var_6877: uint64, %var_6878: Tensor[(1, 3, 12), uint64]) -> Tensor[(1, 3, 12), uint64] {
  @func_6875(%var_6877, %var_6878) /* ty=Tensor[(1, 3, 12), uint64] */
}

def @func_3108(%var_3107: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
  %1311 = fn (%var_3092: Tensor[(980), uint16]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) {
    %1305 = @func_1553() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %1306 = cast(%var_3092, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %1307 = reshape(%1306, newshape=[980]) /* ty=Tensor[(980), uint16] */;
    %1308 = @func_1276(%1307) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
    %1309 = %1305.0;
    %1310 = %1308.2;
    (%1309, %1310, %var_3092)
  };
  %1311(%var_3107) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */
}

def @func_10814() -> (Tensor[(4, 4, 2), int8],) {
  %1314 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %1312 = @func_4379() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %1313 = %1312.0;
    (%1313,)
  };
  %1314() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_2326(%var_2325: Tensor[(5, 132), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(5, 132), float32], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1347 = fn (%var_2189: Tensor[(5, 132), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(5, 132), float32], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %1315 = @func_1430() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1316 = cast(%var_2189, dtype="float32") /* ty=Tensor[(5, 132), float32] */;
    %1317 = reshape(%1316, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
    %1318 = @func_1607(%1317) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
    %1319 = @func_2132() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) */;
    %1320 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1321 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1322 = %1321.0;
    %1323 = cast(%1322, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
    %1324 = log2(%1323) /* ty=Tensor[(4, 4, 2), float64] */;
    %1325 = cast(%1324, dtype="float64") /* ty=Tensor[(4, 4, 2), float64] */;
    %1326 = cast(meta[relay.Constant][47] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %1327 = cast(meta[relay.Constant][47] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %1328 = reshape(%1326, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
    %1329 = reshape(%1327, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), uint32] */;
    %1330 = @func_2075(%1328, %1329) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(4, 4, 2), int8]) */;
    %1331 = cast(meta[relay.Constant][48] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
    %1332 = cast(meta[relay.Constant][48] /* ty=Tensor[(144), uint16] */, dtype="uint16") /* ty=Tensor[(144), uint16] */;
    %1333 = reshape(%1331, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
    %1334 = reshape(%1332, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint16] */;
    %1335 = @func_771(%1333, %1334) /* ty=(Tensor[(8, 3, 6), uint16],) */;
    %1336 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
    %1337 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1338 = %1315.0;
    %1339 = %1318.2;
    %1340 = %1319.1;
    %1341 = %1320.0;
    %1342 = asin(%1325) /* ty=Tensor[(4, 4, 2), float64] */;
    %1343 = %1330.1;
    %1344 = %1335.0;
    %1345 = %1336.0;
    %1346 = %1337.0;
    (%1338, %1339, %var_2189, %1340, %1341, %1342, %1343, meta[relay.Constant][47] /* ty=Tensor[(1680), uint32] */, %1344, meta[relay.Constant][48] /* ty=Tensor[(144), uint16] */, %1345, %1346)
  };
  %1347(%var_2325) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(5, 132), float32], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_7795(%var_7793: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) {
  @func_7792(%var_7793) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) */
}

def @func_7838() -> Tensor[(4, 4, 2), int8] {
  @func_7836() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_16435(%var_16418: Tensor[(7, 3, 12), uint32], %var_16419: Tensor[(7, 3, 12), uint32]) -> Tensor[(7, 3, 12), bool] {
  %1348 = cast(%var_16419, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
  %1349 = shape_of(%var_16418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1350 = cast(%var_16418, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
  %1351 = dyn.reshape(%1348, %1349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1350, %1351) /* ty=Tensor[(7, 3, 12), bool] */
}

def @func_8201(%var_8199: Tensor[(660), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32]) {
  @func_8198(%var_8199) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32]) */
}

def @func_8875() -> (Tensor[(4, 4, 2), int8],) {
  @func_8873() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_2399() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_2397() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_11514() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 7, 3), float32], Tensor[(4, 4, 2), int8]) {
  %1352 = @func_5661() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1353 = @func_3659() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(660, 5), float64], Tensor[(4, 15, 11), float32], Tensor[(4, 4, 2), int8]) */;
  %1354 = @func_5708() /* ty=(Tensor[(16, 7, 3), float32],) */;
  %1355 = %1352.0;
  %1356 = %1353.1;
  %1357 = %1354.0;
  %1358 = @func_3523() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1355, %1356, %1357, %1358)
}

def @func_5341() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1359 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1360 = @func_4093() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1361 = %1359.0;
  %1362 = %1360.2;
  (%1361, %1362)
}

def @func_2972(%var_2942: uint32, %var_2943: Tensor[(6, 8, 15), uint32]) -> (Tensor[(6, 8, 15), bool], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1363 = cast(%var_2942, dtype="bool") /* ty=bool */;
  %1364 = cast(%var_2943, dtype="bool") /* ty=Tensor[(6, 8, 15), bool] */;
  %1365 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %1366 = @func_1413() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16]) */;
  %1367 = greater(%1363, %1364) /* ty=Tensor[(6, 8, 15), bool] */;
  %1368 = %1365.1;
  %1369 = %1366.0;
  (%1367, %1368, %1369)
}

def @func_7512() -> Tensor[(4, 4, 2), int8] {
  @func_7510() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_6353() -> Tensor[(4, 4, 2), int8] {
  %1370 = @func_3158() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1370.0
}

def @func_11330() -> Tensor[(4, 4, 2), int8] {
  %1371 = fn () -> Tensor[(4, 4, 2), int8] {
    @func_6931() /* ty=Tensor[(4, 4, 2), int8] */
  };
  %1371() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_14531() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_14529() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_14980() -> (Tensor[(4, 4, 2), int8],) {
  @func_14978() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_3659() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(660, 5), float64], Tensor[(4, 15, 11), float32], Tensor[(4, 4, 2), int8]) {
  %1372 = @func_3249() /* ty=(Tensor[(2, 9, 11), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1373 = cast(meta[relay.Constant][49] /* ty=Tensor[(660, 1), float32] */, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
  %1374 = reshape(%1373, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
  %1375 = @func_2324(%1374) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(5, 132), float32], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1376 = cast(meta[relay.Constant][49] /* ty=Tensor[(660, 1), float32] */, dtype="float64") /* ty=Tensor[(660, 1), float64] */;
  %1377 = cast(meta[relay.Constant][50] /* ty=Tensor[(660, 5), float32] */, dtype="float64") /* ty=Tensor[(660, 5), float64] */;
  %1378 = cast(meta[relay.Constant][49] /* ty=Tensor[(660, 1), float32] */, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
  %1379 = reshape(%1378, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %1380 = @func_1607(%1379) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
  %1381 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
  %1382 = %1372.2;
  %1383 = %1375.10;
  %1384 = divide(%1376, %1377) /* ty=Tensor[(660, 5), float64] */;
  %1385 = %1380.0;
  %1386 = %1381.1;
  (%1382, %1383, %1384, %1385, %1386)
}

def @func_9098() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) {
  @func_9096() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */
}

def @func_10226() -> (Tensor[(4, 4, 2), int8],) {
  %1388 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %1387 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
    (%1387,)
  };
  %1388() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_6608(%var_6605: Tensor[(490, 2), float64], %var_6606: Tensor[(490, 2), float64], %var_6607: Tensor[(264), bool]) -> (Tensor[(490, 2), uint64], Tensor[(490, 2), uint8], Tensor[(490, 2), float64], Tensor[(2, 11, 12), float64], Tensor[(264), bool]) {
  %1410 = fn (%var_6551: Tensor[(490, 2), float64], %var_6560: Tensor[(490, 2), float64], %var_6593: Tensor[(264), bool]) -> (Tensor[(490, 2), uint64], Tensor[(490, 2), uint8], Tensor[(490, 2), float64], Tensor[(2, 11, 12), float64], Tensor[(264), bool]) {
    %1389 = @func_4999() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(490, 2), uint16]) */;
    %1390 = %1389.2;
    %1391 = cast(%1390, dtype="float64") /* ty=Tensor[(490, 2), float64] */;
    %1392 = cosh(%1391) /* ty=Tensor[(490, 2), float64] */;
    %1393 = cast(%var_6551, dtype="uint64") /* ty=Tensor[(490, 2), uint64] */;
    %1394 = shape_of(%1392, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1395 = cast(%1392, dtype="uint64") /* ty=Tensor[(490, 2), uint64] */;
    %1396 = dyn.reshape(%1393, %1394, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %1397 = cast(%1392, dtype="float64") /* ty=Tensor[(490, 2), float64] */;
    %1398 = rsqrt(%1397) /* ty=Tensor[(490, 2), float64] */;
    %1399 = cast(%var_6560, dtype="uint8") /* ty=Tensor[(490, 2), uint8] */;
    %1400 = shape_of(%1398, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1401 = cast(%1398, dtype="uint8") /* ty=Tensor[(490, 2), uint8] */;
    %1402 = dyn.reshape(%1399, %1400, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %1403 = cast(%1392, dtype="float64") /* ty=Tensor[(490, 2), float64] */;
    %1404 = cast(%var_6593, dtype="bool") /* ty=Tensor[(264), bool] */;
    %1405 = reshape(%1404, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), bool] */;
    %1406 = subtract(%1395, %1396) /* ty=Tensor[(490, 2), uint64] */;
    %1407 = right_shift(%1401, %1402) /* ty=Tensor[(490, 2), uint8] */;
    %1408 = log10(%1403) /* ty=Tensor[(490, 2), float64] */;
    %1409 = @func_3585(%1405) /* ty=Tensor[(2, 11, 12), float64] */;
    (%1406, %1407, %1408, %1409, %var_6593)
  };
  %1410(%var_6605, %var_6606, %var_6607) /* ty=(Tensor[(490, 2), uint64], Tensor[(490, 2), uint8], Tensor[(490, 2), float64], Tensor[(2, 11, 12), float64], Tensor[(264), bool]) */
}

def @func_10451() -> Tensor[(980), uint16] {
  %1412 = fn () -> Tensor[(980), uint16] {
    %1411 = @func_5145() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980), uint16]) */;
    %1411.1
  };
  %1412() /* ty=Tensor[(980), uint16] */
}

def @func_10466() -> Tensor[(4, 4, 2), int8] {
  @func_10464() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_13382() -> (Tensor[(4, 4, 2), int8],) {
  %1413 = @func_2397() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1414 = %1413.1;
  (%1414,)
}

def @func_7358() -> Tensor[(4, 4, 2), int8] {
  @func_7356() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_11526(%var_11524: Tensor[(15, 6, 13), float64]) -> Tensor[(15, 6, 13), float64] {
  @func_11523(%var_11524) /* ty=Tensor[(15, 6, 13), float64] */
}

def @func_8737() -> Tensor[(4, 4, 2), int8] {
  %1416 = fn () -> Tensor[(4, 4, 2), int8] {
    %1415 = @func_8617() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %1415.1
  };
  %1416() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_2552() -> (Tensor[(4, 4, 2), int8],) {
  %1419 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %1417 = @func_2132() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64]) */;
    %1418 = %1417.0;
    (%1418,)
  };
  %1419() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_8461() -> Tensor[(4, 4, 2), int8] {
  @func_8459() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_3386() -> Tensor[(4, 4, 2), int8] {
  %1421 = fn () -> Tensor[(4, 4, 2), int8] {
    %1420 = @func_3018() /* ty=(Tensor[(980), uint16], Tensor[(4, 4, 2), int8]) */;
    %1420.1
  };
  %1421() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_9333(%var_9331: Tensor[(980, 14), int32], %var_9332: Tensor[(980, 14), float64]) -> (Tensor[(980, 14), bool], Tensor[(980, 14), float32], Tensor[(980, 14), uint32]) {
  @func_9329(%var_9331, %var_9332) /* ty=(Tensor[(980, 14), bool], Tensor[(980, 14), float32], Tensor[(980, 14), uint32]) */
}

def @func_6707() -> Tensor[(4, 4, 2), int8] {
  @func_6705() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_10430(%var_10429: Tensor[(3, 4, 6), float32]) -> (Tensor[(3, 4, 6), bool], Tensor[(4, 4, 2), int8]) {
  %1430 = fn (%var_10406: Tensor[(3, 4, 6), float32]) -> (Tensor[(3, 4, 6), bool], Tensor[(4, 4, 2), int8]) {
    %1422 = cast(%var_10406, dtype="float32") /* ty=Tensor[(3, 4, 6), float32] */;
    %1423 = log2(%1422) /* ty=Tensor[(3, 4, 6), float32] */;
    %1424 = cast(%1423, dtype="bool") /* ty=Tensor[(3, 4, 6), bool] */;
    %1425 = shape_of(%var_10406, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1426 = cast(%var_10406, dtype="bool") /* ty=Tensor[(3, 4, 6), bool] */;
    %1427 = dyn.reshape(%1424, %1425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1428 = less(%1426, %1427) /* ty=Tensor[(3, 4, 6), bool] */;
    %1429 = @func_3511() /* ty=Tensor[(4, 4, 2), int8] */;
    (%1428, %1429)
  };
  %1430(%var_10429) /* ty=(Tensor[(3, 4, 6), bool], Tensor[(4, 4, 2), int8]) */
}

def @func_2397() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1431 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
  %1432 = @func_1308() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
  %1433 = @func_981() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1434 = %1431.0;
  %1435 = %1432.3;
  %1436 = %1433.0;
  (%1434, %1435, %1436)
}

def @func_6355() -> Tensor[(4, 4, 2), int8] {
  @func_6353() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_6875(%var_6865: uint64, %var_6866: Tensor[(1, 3, 12), uint64]) -> Tensor[(1, 3, 12), uint64] {
  %1437 = cast(%var_6865, dtype="uint64") /* ty=uint64 */;
  %1438 = cast(%var_6866, dtype="uint64") /* ty=Tensor[(1, 3, 12), uint64] */;
  maximum(%1437, %1438) /* ty=Tensor[(1, 3, 12), uint64] */
}

def @func_8652() -> (Tensor[(4, 4, 2), int8],) {
  @func_8650() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_6499() -> (Tensor[(4, 4, 2), int8],) {
  %1439 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1439,)
}

def @func_8054(%var_8053: Tensor[(110, 6), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(110, 6), float32], Tensor[(980, ?), int16], Tensor[(980), uint16], Tensor[(980, 1), float64]) {
  %1459 = fn (%var_8012: Tensor[(110, 6), float32]) -> (Tensor[(4, 4, 2), int8], Tensor[(110, 6), float32], Tensor[(980, ?), int16], Tensor[(980), uint16], Tensor[(980, 1), float64]) {
    %1440 = cast(%var_8012, dtype="float32") /* ty=Tensor[(110, 6), float32] */;
    %1441 = reshape(%1440, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
    %1442 = @func_2324(%1441) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(5, 132), float32], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32], Tensor[(8, 3, 6), uint16], Tensor[(144), uint16], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %1443 = @func_4262() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(660), float32], Tensor[(980, 1), uint16]) */;
    %1444 = %1443.3;
    %1445 = cast(%1444, dtype="float64") /* ty=Tensor[(980, 1), float64] */;
    %1446 = asinh(%1445) /* ty=Tensor[(980, 1), float64] */;
    %1447 = cast(%1444, dtype="int16") /* ty=Tensor[(980, 1), int16] */;
    %1448 = shape_of(%1446, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1449 = cast(%1446, dtype="int16") /* ty=Tensor[(980, 1), int16] */;
    %1450 = dyn.reshape(%1447, %1448, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %1451 = cast(%var_8012, dtype="float32") /* ty=Tensor[(110, 6), float32] */;
    %1452 = reshape(%1451, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
    %1453 = @func_1607(%1452) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
    %1454 = cast(%1446, dtype="float64") /* ty=Tensor[(980, 1), float64] */;
    %1455 = %1442.4;
    %1456 = add(%1449, %1450) /* ty=Tensor[(980, ?), int16] */;
    %1457 = %1453.2;
    %1458 = cosh(%1454) /* ty=Tensor[(980, 1), float64] */;
    (%1455, %var_8012, %1456, %1457, %1458)
  };
  %1459(%var_8053) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(110, 6), float32], Tensor[(980, ?), int16], Tensor[(980), uint16], Tensor[(980, 1), float64]) */
}

def @func_13617() -> (Tensor[(3, 13, 10), float32],) {
  @func_13615() /* ty=(Tensor[(3, 13, 10), float32],) */
}

def @func_14643() -> Tensor[(4, 4, 2), int8] {
  %1460 = @func_3191() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32]) */;
  %1460.0
}

def @func_1609(%var_1608: Tensor[(4, 15, 11), float32]) -> (Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) {
  %1476 = fn (%var_1573: Tensor[(4, 15, 11), float32]) -> (Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) {
    %1461 = cast(%var_1573, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
    %1462 = erf(%1461) /* ty=Tensor[(4, 15, 11), float32] */;
    %1463 = cast(%var_1573, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
    %1464 = shape_of(%1462, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1465 = cast(%1462, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
    %1466 = dyn.reshape(%1463, %1464, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1467 = cast(meta[relay.Constant][51] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %1468 = cast(meta[relay.Constant][51] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %1469 = reshape(%1467, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
    %1470 = reshape(%1468, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), uint16] */;
    %1471 = @func_1074(%1469, %1470) /* ty=(Tensor[(10, 14, 7), uint16], Tensor[(4, 4, 2), int8]) */;
    %1472 = @func_910() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
    %1473 = add(%1465, %1466) /* ty=Tensor[(4, 15, 11), float32] */;
    %1474 = %1471.0;
    %1475 = %1472.1;
    (%1473, %1474, meta[relay.Constant][51] /* ty=Tensor[(980), uint16] */, %1475)
  };
  %1476(%var_1608) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */
}

def @func_14393() -> (Tensor[(16, 15, 7), float64], Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(490, 2), float32], Tensor[(4, 4, 2), int8]) {
  %1486 = fn () -> (Tensor[(16, 15, 7), float64], Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(490, 2), float32], Tensor[(4, 4, 2), int8]) {
    %1477 = @func_13382() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1478 = @func_14264() /* ty=Tensor[(490, 2), float32] */;
    %1479 = cast(%1478, dtype="float32") /* ty=Tensor[(490, 2), float32] */;
    %1480 = @func_1818() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1481 = @func_12856() /* ty=Tensor[(16, 15, 7), float64] */;
    %1482 = @func_10450() /* ty=Tensor[(980), uint16] */;
    %1483 = %1477.0;
    %1484 = sqrt(%1479) /* ty=Tensor[(490, 2), float32] */;
    %1485 = %1480.0;
    (%1481, %1482, %1483, %1484, %1485)
  };
  %1486() /* ty=(Tensor[(16, 15, 7), float64], Tensor[(980), uint16], Tensor[(4, 4, 2), int8], Tensor[(490, 2), float32], Tensor[(4, 4, 2), int8]) */
}

def @func_10893() -> Tensor[(4, 4, 2), int8] {
  %1487 = @func_10157() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
  %1487.0
}

def @func_14423() -> (Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), bool]) {
  %1488 = @func_9235() /* ty=(Tensor[(4, 4, 2), float64], Tensor[(4, 4, 2), int8], Tensor[(144), uint16]) */;
  %1489 = @func_1657() /* ty=(Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */;
  %1490 = %1488.0;
  %1491 = %1489.0;
  (%1490, %1491)
}

def @func_6899() -> Tensor[(144), uint16] {
  @func_6897() /* ty=Tensor[(144), uint16] */
}

def @func_11464() -> (Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32]) {
  %1505 = fn () -> (Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32]) {
    %1492 = @func_10253() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), float32], Tensor[(660), float32], Tensor[(10, 66), float32]) */;
    %1493 = @func_6191() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1494 = cast(meta[relay.Constant][52] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %1495 = reshape(%1494, newshape=[1680]) /* ty=Tensor[(1680), uint32] */;
    %1496 = @func_7889(%1495) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), uint32]) */;
    %1497 = %1496.3;
    %1498 = cast(%1497, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %1499 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(1680), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1500 = cast(meta[relay.Constant][52] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %1501 = dyn.reshape(%1498, %1499, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %1502 = %1492.2;
    %1503 = %1493.0;
    %1504 = bitwise_xor(%1500, %1501) /* ty=Tensor[(1680), uint32] */;
    (%1502, %1503, %1504)
  };
  %1505() /* ty=(Tensor[(660), float32], Tensor[(4, 4, 2), int8], Tensor[(1680), uint32]) */
}

def @func_12249(%var_12248: Tensor[(980, 8), int32]) -> (Tensor[(980, 8), uint8], Tensor[(980, 8), bool], Tensor[(4, 4, 2), int8]) {
  %1523 = fn (%var_12197: Tensor[(980, 8), int32]) -> (Tensor[(980, 8), uint8], Tensor[(980, 8), bool], Tensor[(4, 4, 2), int8]) {
    %1506 = @func_4333() /* ty=Tensor[(980, ?), int32] */;
    %1507 = cast(%1506, dtype="uint8") /* ty=Tensor[(980, ?), uint8] */;
    %1508 = cast(%var_12197, dtype="uint8") /* ty=Tensor[(980, 8), uint8] */;
    %1509 = cast(%var_12197, dtype="float64") /* ty=Tensor[(980, 8), float64] */;
    %1510 = acos(%1509) /* ty=Tensor[(980, 8), float64] */;
    %1511 = cast(%1510, dtype="float64") /* ty=Tensor[(980, 8), float64] */;
    %1512 = tan(%1511) /* ty=Tensor[(980, 8), float64] */;
    %1513 = cast(%1512, dtype="float64") /* ty=Tensor[(980, 8), float64] */;
    %1514 = acosh(%1513) /* ty=Tensor[(980, 8), float64] */;
    %1515 = cast(%1510, dtype="bool") /* ty=Tensor[(980, 8), bool] */;
    %1516 = shape_of(%1514, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1517 = cast(%1514, dtype="bool") /* ty=Tensor[(980, 8), bool] */;
    %1518 = dyn.reshape(%1515, %1516, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1519 = @func_10225() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1520 = subtract(%1507, %1508) /* ty=Tensor[(980, 8), uint8] */;
    %1521 = not_equal(%1517, %1518) /* ty=Tensor[(980, 8), bool] */;
    %1522 = %1519.0;
    (%1520, %1521, %1522)
  };
  %1523(%var_12248) /* ty=(Tensor[(980, 8), uint8], Tensor[(980, 8), bool], Tensor[(4, 4, 2), int8]) */
}

def @func_2584() -> Tensor[(4, 4, 2), int8] {
  %1525 = fn () -> Tensor[(4, 4, 2), int8] {
    %1524 = @func_1553() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %1524.0
  };
  %1525() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_9449() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1526 = @func_8459() /* ty=Tensor[(4, 4, 2), int8] */;
  %1527 = @func_2806() /* ty=Tensor[(4, 4, 2), int8] */;
  (%1526, %1527)
}

def @func_4733() -> Tensor[(4, 4, 2), int8] {
  %1528 = fn () -> Tensor[(4, 4, 2), int8] {
    @func_4279() /* ty=Tensor[(4, 4, 2), int8] */
  };
  %1528() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_9282() -> Tensor[(4, 4, 2), int8] {
  @func_9280() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_6545() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1533 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %1529 = @func_4788() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1530 = @func_3523() /* ty=Tensor[(4, 4, 2), int8] */;
    %1531 = @func_5293() /* ty=Tensor[(4, 4, 2), int8] */;
    %1532 = %1529.0;
    (%1530, %1531, %1532)
  };
  %1533() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_7280(%var_7278: Tensor[(84, 20), uint32]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(84, 20), uint32], Tensor[(4, 4, 2), int8]) {
  @func_7277(%var_7278) /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(84, 20), uint32], Tensor[(4, 4, 2), int8]) */
}

def @func_2806() -> Tensor[(4, 4, 2), int8] {
  @func_2753() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_11232() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) {
  %1540 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) {
    %1534 = @func_10635() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %1535 = @func_1503() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool]) */;
    %1536 = @func_6191() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1537 = %1534.1;
    %1538 = %1535.1;
    %1539 = %1536.0;
    (%1537, %1538, %1539)
  };
  %1540() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), bool], Tensor[(4, 4, 2), int8]) */
}

def @func_4814() -> Tensor[(4, 4, 2), int8] {
  %1541 = @func_4784() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1541.0
}

def @func_3279() -> (Tensor[(4, 4, 2), int8],) {
  %1544 = fn () -> (Tensor[(4, 4, 2), int8],) {
    %1542 = @func_2397() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */;
    %1543 = %1542.2;
    (%1543,)
  };
  %1544() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_3746() -> (Tensor[(4, 4, 2), int8],) {
  @func_3744() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_12592() -> Tensor[(4, 4, 2), int8] {
  @func_12590() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_11523(%var_11520: Tensor[(15, 6, 13), float64]) -> Tensor[(15, 6, 13), float64] {
  %1545 = cast(%var_11520, dtype="float64") /* ty=Tensor[(15, 6, 13), float64] */;
  erf(%1545) /* ty=Tensor[(15, 6, 13), float64] */
}

def @func_11096() -> (Tensor[(4, 4, 2), int8],) {
  @func_11094() /* ty=(Tensor[(4, 4, 2), int8],) */
}

def @func_10742(%var_10737: Tensor[(36), uint64]) -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(2, 11, 12), float64], Tensor[(264), bool], Tensor[(1, 3, 12), uint64], uint64, Tensor[(36), uint64]) {
  %1546 = @func_6499() /* ty=(Tensor[(4, 4, 2), int8],) */;
  %1547 = cast(meta[relay.Constant][53] /* ty=Tensor[(264), bool] */, dtype="bool") /* ty=Tensor[(264), bool] */;
  %1548 = reshape(%1547, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), bool] */;
  %1549 = cast(meta[relay.Constant][54] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1550 = cast(%var_10737, dtype="uint64") /* ty=Tensor[(36), uint64] */;
  %1551 = reshape(%1549, newshape=[]) /* ty=uint64 */;
  %1552 = reshape(%1550, newshape=[1, 3, 12]) /* ty=Tensor[(1, 3, 12), uint64] */;
  %1553 = %1546.0;
  %1554 = @func_7510() /* ty=Tensor[(4, 4, 2), int8] */;
  %1555 = @func_3585(%1548) /* ty=Tensor[(2, 11, 12), float64] */;
  %1556 = @func_6875(%1551, %1552) /* ty=Tensor[(1, 3, 12), uint64] */;
  (%1553, %1554, %1555, meta[relay.Constant][53] /* ty=Tensor[(264), bool] */, %1556, meta[relay.Constant][54] /* ty=uint64 */, %var_10737)
}

def @func_4381() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_4379() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_4263() -> (Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(660), float32], Tensor[(980, 1), uint16]) {
  %1564 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(660), float32], Tensor[(980, 1), uint16]) {
    %1557 = cast(meta[relay.Constant][55] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %1558 = reshape(%1557, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
    %1559 = @func_1607(%1558) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(10, 14, 7), uint16], Tensor[(980), uint16], Tensor[(4, 4, 2), bool]) */;
    %1560 = @func_3852() /* ty=(Tensor[(980, 1), uint16],) */;
    %1561 = @func_2352() /* ty=Tensor[(4, 4, 2), int8] */;
    %1562 = %1559.1;
    %1563 = %1560.0;
    (%1561, %1562, meta[relay.Constant][55] /* ty=Tensor[(660), float32] */, %1563)
  };
  %1564() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(10, 14, 7), uint16], Tensor[(660), float32], Tensor[(980, 1), uint16]) */
}

def @func_1366() -> Tensor[(4, 4, 2), int8] {
  @func_1364() /* ty=Tensor[(4, 4, 2), int8] */
}

def @func_8164() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  @func_8162() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_13972() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
  %1569 = fn () -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) {
    %1565 = @func_13382() /* ty=(Tensor[(4, 4, 2), int8],) */;
    %1566 = @func_4031() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(980), uint16], Tensor[(980, 1), uint16], Tensor[(4, 4, 2), int8]) */;
    %1567 = %1565.0;
    %1568 = %1566.0;
    (%1567, %1568)
  };
  %1569() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8]) */
}

def @func_3661() -> (Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(660, 5), float64], Tensor[(4, 15, 11), float32], Tensor[(4, 4, 2), int8]) {
  @func_3659() /* ty=(Tensor[(4, 4, 2), int8], Tensor[(4, 4, 2), int8], Tensor[(660, 5), float64], Tensor[(4, 15, 11), float32], Tensor[(4, 4, 2), int8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen718/build/output.py", line 5484, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:58:16] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


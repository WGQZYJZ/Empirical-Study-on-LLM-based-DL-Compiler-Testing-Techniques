==========mod==========
#[version = "0.0.5"]
def @func_5290(%var_5269: Tensor[(1, 11, 13), float32], %var_5270: Tensor[(1, 11, 13), float32]) -> Tensor[(?, 11, 13), bool] {
  %0 = cast(%var_5270, dtype="bool") /* ty=Tensor[(1, 11, 13), bool] */;
  %1 = shape_of(%var_5269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_5269, dtype="bool") /* ty=Tensor[(1, 11, 13), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%2, %3) /* ty=Tensor[(?, 11, 13), bool] */
}

def @func_5723(%var_5689: Tensor[(9, 16, 14), float64], %var_5701: Tensor[(9, 16, 14), float64]) -> (Tensor[(9, 16, 14), bool], Tensor[(8, 11, 15), float64], Tensor[(1320), float64]) {
  %4 = cast(%var_5689, dtype="float64") /* ty=Tensor[(9, 16, 14), float64] */;
  %5 = asin(%4) /* ty=Tensor[(9, 16, 14), float64] */;
  %6 = cast(%var_5701, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%5, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %11 = reshape(%10, newshape=[8, 11, 15]) /* ty=Tensor[(8, 11, 15), float64] */;
  %12 = logical_or(%8, %9) /* ty=Tensor[(9, 16, 14), bool] */;
  %13 = @func_3412(%11) /* ty=Tensor[(8, 11, 15), float64] */;
  (%12, %13, meta[relay.Constant][0] /* ty=Tensor[(1320), float64] */)
}

def @func_6792(%var_6773: Tensor[(10, 96), uint8], %var_6774: int16) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), uint8], Tensor[(448), float64], Tensor[(10, 96), uint8], int16, Tensor[(448), float64]) {
  %14 = @func_5143() /* ty=Tensor[(4, 3, 12), float64] */;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %16 = reshape(%15, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float64] */;
  %17 = @func_5054(%16) /* ty=(Tensor[(4, 3, 12), uint8],) */;
  %18 = cast(%var_6773, dtype="uint8") /* ty=Tensor[(10, 96), uint8] */;
  %19 = cast(%var_6774, dtype="int16") /* ty=int16 */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %21 = reshape(%18, newshape=[960]) /* ty=Tensor[(960), uint8] */;
  %22 = reshape(%19, newshape=[]) /* ty=int16 */;
  %23 = reshape(%20, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %24 = @func_6029(%21, %22, %23) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(960), uint8], Tensor[(11, 10, 6), int16], int16, Tensor[(448), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(112), float64]) */;
  %25 = %17.0;
  %26 = %24.6;
  (%14, %25, %26, %var_6773, %var_6774, meta[relay.Constant][1] /* ty=Tensor[(448), float64] */)
}

def @func_7276() -> (Tensor[(4, 3, 12), float32],) {
  %27 = @func_6326() /* ty=Tensor[(4, 3, 12), float32] */;
  (%27,)
}

def @func_98(%var_39: Tensor[(8, 8, 7), float64], %var_75: Tensor[(2, 8, 7), float64], %var_85: Tensor[(20, 48), uint8]) -> (Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) {
  %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(1, 8, 7), float64] */;
  %29 = cast(%var_39, dtype="float64") /* ty=Tensor[(8, 8, 7), float64] */;
  %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 8, 7), float64] */, dtype="bool") /* ty=Tensor[(1, 8, 7), bool] */;
  %31 = cast(%var_75, dtype="bool") /* ty=Tensor[(2, 8, 7), bool] */;
  %32 = cast(%var_85, dtype="uint8") /* ty=Tensor[(20, 48), uint8] */;
  %33 = cast(%var_85, dtype="uint8") /* ty=Tensor[(20, 48), uint8] */;
  %34 = reshape(%32, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %35 = reshape(%33, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %36 = @func_11(%34, %35) /* ty=(Tensor[(5, 16, 12), bool],) */;
  %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(1, 8, 7), float64] */;
  %38 = asinh(%37) /* ty=Tensor[(1, 8, 7), float64] */;
  %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 8, 7), float64] */, dtype="int8") /* ty=Tensor[(1, 8, 7), int8] */;
  %40 = shape_of(%38, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%38, dtype="int8") /* ty=Tensor[(1, 8, 7), int8] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %43 = multiply(%41, %42) /* ty=Tensor[(?, 8, 7), int8] */;
  %44 = cast(%38, dtype="uint16") /* ty=Tensor[(1, 8, 7), uint16] */;
  %45 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%43, dtype="uint16") /* ty=Tensor[(?, 8, 7), uint16] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %48 = subtract(%46, %47) /* ty=Tensor[(?, 8, 7), uint16] */;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(?, 8, 7), float32] */;
  %50 = maximum(%28, %29) /* ty=Tensor[(8, 8, 7), float64] */;
  %51 = logical_and(%30, %31) /* ty=Tensor[(2, 8, 7), bool] */;
  %52 = %36.0;
  %53 = acosh(%49) /* ty=Tensor[(?, 8, 7), float32] */;
  (%50, %51, %52, %var_85, %53)
}

def @func_8983() -> Tensor[(16, 3, 6), float32] {
  %54 = @func_3659() /* ty=(Tensor[(16, 3, 6), float32],) */;
  %54.0
}

def @func_5118(%var_5083: Tensor[(2640), float32]) -> (Tensor[(4, 3, 12), float32], Tensor[(8, 11, 15), float64], Tensor[(2640), float32], Tensor[(448), float64]) {
  %55 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %56 = %55.0;
  %57 = cast(%56, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %58 = cast(%var_5083, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %59 = cosh(%57) /* ty=Tensor[(4, 3, 12), float32] */;
  %60 = cast(%59, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %61 = reshape(%58, newshape=[11, 16, 15]) /* ty=Tensor[(11, 16, 15), float32] */;
  %62 = reshape(%60, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float32] */;
  %63 = @func_3837(%61, %62) /* ty=(Tensor[(11, 16, 15), float32], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(4, 3, 12), uint16], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(4, 3, 12), float64]) */;
  %64 = @func_3975() /* ty=(Tensor[(448), float64],) */;
  %65 = %63.4;
  %66 = %64.0;
  (%59, %65, %var_5083, %66)
}

def @func_800(%var_791: Tensor[(11, 3, 1), float64], %var_792: Tensor[(11, 3, 14), float64]) -> Tensor[(11, 3, 14), float64] {
  %67 = cast(%var_791, dtype="float64") /* ty=Tensor[(11, 3, 1), float64] */;
  %68 = cast(%var_792, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  mod(%67, %68) /* ty=Tensor[(11, 3, 14), float64] */
}

def @func_7696(%var_7689: Tensor[(33), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(77, 6), float64], Tensor[(33), float64], Tensor[(462), float64]) {
  %69 = cast(%var_7689, dtype="float64") /* ty=Tensor[(33), float64] */;
  %70 = cast(meta[relay.Constant][3] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %71 = reshape(%69, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %72 = reshape(%70, newshape=[77, 6]) /* ty=Tensor[(77, 6), float64] */;
  %73 = @func_4542(%71, %72) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(77, 6), float64]) */;
  %74 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  %75 = %73.4;
  (%74, %75, %var_7689, meta[relay.Constant][3] /* ty=Tensor[(462), float64] */)
}

def @func_143(%var_134: Tensor[(14, 12, 11), float32], %var_139: Tensor[(448), float64]) -> (Tensor[(14, 1, 11), float64], Tensor[(14, 12, 11), float64], Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8]) {
  %76 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 1, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 11), float32] */;
  %77 = atanh(%76) /* ty=Tensor[(14, 1, 11), float32] */;
  %78 = cast(%77, dtype="float64") /* ty=Tensor[(14, 1, 11), float64] */;
  %79 = cast(%77, dtype="float64") /* ty=Tensor[(14, 1, 11), float64] */;
  %80 = cast(%var_134, dtype="float64") /* ty=Tensor[(14, 12, 11), float64] */;
  %81 = cast(%var_139, dtype="float64") /* ty=Tensor[(448), float64] */;
  %82 = cast(meta[relay.Constant][5] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %83 = cast(meta[relay.Constant][6] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %84 = reshape(%81, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
  %85 = reshape(%82, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
  %86 = reshape(%83, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %87 = @func_98(%84, %85, %86) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
  %88 = acosh(%78) /* ty=Tensor[(14, 1, 11), float64] */;
  %89 = divide(%79, %80) /* ty=Tensor[(14, 12, 11), float64] */;
  %90 = %87.1;
  (%88, %89, %90, %var_139, meta[relay.Constant][5] /* ty=Tensor[(112), float64] */, meta[relay.Constant][6] /* ty=Tensor[(960), uint8] */)
}

def @func_6235() -> (Tensor[(4, 3, 12), float64],) {
  %91 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %92 = %91.0;
  (%92,)
}

def @func_6744() -> Tensor[(4, 3, 12), float64] {
  %93 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %93.0
}

def @func_7384() -> Tensor[(4, 3, 12), float64] {
  %94 = @func_5224() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %94.0
}

def @func_3701() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
  %95 = @func_2778() /* ty=Tensor[(4, 3, 12), float64] */;
  %96 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  (%95, %96)
}

def @func_9475(%var_9438: Tensor[(8, 10, 8), int8], %var_9439: Tensor[(8, 10, 8), int8]) -> (Tensor[(8, 10, 8), bool], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(8, 10, 8), float32]) {
  %97 = cast(%var_9439, dtype="bool") /* ty=Tensor[(8, 10, 8), bool] */;
  %98 = shape_of(%var_9438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%var_9438, dtype="bool") /* ty=Tensor[(8, 10, 8), bool] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %102 = reshape(%101, newshape=[8, 11, 15]) /* ty=Tensor[(8, 11, 15), float64] */;
  %103 = cast(%var_9438, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
  %104 = rsqrt(%103) /* ty=Tensor[(8, 10, 8), float32] */;
  %105 = cast(%104, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
  %106 = greater(%99, %100) /* ty=Tensor[(8, 10, 8), bool] */;
  %107 = @func_3412(%102) /* ty=Tensor[(8, 11, 15), float64] */;
  %108 = erf(%105) /* ty=Tensor[(8, 10, 8), float32] */;
  (%106, %107, meta[relay.Constant][7] /* ty=Tensor[(1320), float64] */, %108)
}

def @func_3542(%var_3512: Tensor[(12, 16, 9), float32]) -> (Tensor[(14, 4, 15), float32], Tensor[(2, 420), float32], Tensor[(160), bool], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64], Tensor[(12, 16, 9), float32]) {
  %109 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 420), float32] */, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
  %110 = cast(meta[relay.Constant][9] /* ty=Tensor[(160), bool] */, dtype="bool") /* ty=Tensor[(160), bool] */;
  %111 = reshape(%109, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), float32] */;
  %112 = reshape(%110, newshape=[160]) /* ty=Tensor[(160), bool] */;
  %113 = @func_3506(%111, %112) /* ty=(Tensor[(14, 4, 15), float32], Tensor[(5, 16, 2), bool], Tensor[(160), bool]) */;
  %114 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 3), float64] */;
  %115 = cast(meta[relay.Constant][11] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %116 = reshape(%114, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %117 = reshape(%115, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %118 = @func_2742(%116, %117) /* ty=(Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) */;
  %119 = cast(%var_3512, dtype="float32") /* ty=Tensor[(12, 16, 9), float32] */;
  %120 = erf(%119) /* ty=Tensor[(12, 16, 9), float32] */;
  %121 = cast(%120, dtype="float32") /* ty=Tensor[(12, 16, 9), float32] */;
  %122 = %113.0;
  %123 = %118.3;
  %124 = atanh(%121) /* ty=Tensor[(12, 16, 9), float32] */;
  (%122, meta[relay.Constant][8] /* ty=Tensor[(2, 420), float32] */, meta[relay.Constant][9] /* ty=Tensor[(160), bool] */, %123, meta[relay.Constant][10] /* ty=Tensor[(11, 3), float64] */, meta[relay.Constant][11] /* ty=Tensor[(462), float64] */, %124)
}

def @func_7123() -> Tensor[(1512), float64] {
  %125 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
  %125.1
}

def @func_1622(%var_1583: Tensor[(3, 3, 7), uint64], %var_1589: Tensor[(3, 3, 7), bool], %var_1605: Tensor[(480, 2), bool], %var_1620: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(480, 2), bool], Tensor[(3, 3, 7), bool], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(112), float64]) {
  %126 = cast(%var_1605, dtype="bool") /* ty=Tensor[(480, 2), bool] */;
  %127 = reshape(%126, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), bool] */;
  %128 = @func_1271(%127) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) */;
  %129 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 3, 7), uint64] */, dtype="bool") /* ty=Tensor[(3, 3, 7), bool] */;
  %130 = shape_of(%var_1583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%var_1583, dtype="bool") /* ty=Tensor[(3, 3, 7), bool] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %133 = greater(%131, %132) /* ty=Tensor[(3, 3, 7), bool] */;
  %134 = cast(%var_1589, dtype="int8") /* ty=Tensor[(3, 3, 7), int8] */;
  %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %136 = cast(%133, dtype="int8") /* ty=Tensor[(3, 3, 7), int8] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %138 = left_shift(%136, %137) /* ty=Tensor[(3, 3, 7), int8] */;
  %139 = cast(%138, dtype="bool") /* ty=Tensor[(3, 3, 7), bool] */;
  %140 = shape_of(%var_1589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%var_1589, dtype="bool") /* ty=Tensor[(3, 3, 7), bool] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %143 = cast(meta[relay.Constant][13] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %144 = cast(%var_1620, dtype="float64") /* ty=Tensor[(112), float64] */;
  %145 = cast(%var_1605, dtype="uint8") /* ty=Tensor[(480, 2), uint8] */;
  %146 = reshape(%143, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
  %147 = reshape(%144, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
  %148 = reshape(%145, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %149 = @func_98(%146, %147, %148) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
  %150 = @func_1313() /* ty=Tensor[(4, 3, 12), float64] */;
  %151 = %128.0;
  %152 = logical_or(%141, %142) /* ty=Tensor[(3, 3, 7), bool] */;
  %153 = %149.4;
  (%150, %151, %var_1605, %152, %153, meta[relay.Constant][13] /* ty=Tensor[(448), float64] */, %var_1620)
}

def @func_6029(%var_5991: Tensor[(960), uint8], %var_5999: int16, %var_6023: Tensor[(448), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(960), uint8], Tensor[(11, 10, 6), int16], int16, Tensor[(448), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(112), float64]) {
  %154 = cast(%var_5991, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %155 = cast(%var_5991, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %156 = reshape(%154, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %157 = reshape(%155, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %158 = @func_11(%156, %157) /* ty=(Tensor[(5, 16, 12), bool],) */;
  %159 = cast(%var_5999, dtype="int16") /* ty=int16 */;
  %160 = reshape(%159, newshape=[]) /* ty=int16 */;
  %161 = cast(%var_6023, dtype="float64") /* ty=Tensor[(448), float64] */;
  %162 = cast(%var_5991, dtype="bool") /* ty=Tensor[(960), bool] */;
  %163 = cast(meta[relay.Constant][14] /* ty=Tensor[(1848), float32] */, dtype="float32") /* ty=Tensor[(1848), float32] */;
  %164 = cast(meta[relay.Constant][15] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %165 = reshape(%161, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %166 = reshape(%162, newshape=[960]) /* ty=Tensor[(960), bool] */;
  %167 = reshape(%163, newshape=[1848]) /* ty=Tensor[(1848), float32] */;
  %168 = reshape(%164, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %169 = @func_3139(%165, %166, %167, %168) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(448), float64], Tensor[(448), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(4, 3, 12), float64], Tensor[(2, 8, 7), bool], Tensor[(112), float64], Tensor[(1848), float32]) */;
  %170 = @func_3960() /* ty=Tensor[(4, 3, 12), float64] */;
  %171 = %158.0;
  %172 = @func_5420(%160) /* ty=Tensor[(11, 10, 6), int16] */;
  %173 = %169.1;
  (%170, %171, %var_5991, %172, %var_5999, %173, %var_6023, meta[relay.Constant][14] /* ty=Tensor[(1848), float32] */, meta[relay.Constant][15] /* ty=Tensor[(112), float64] */)
}

def @func_7851(%var_7841: Tensor[(13, 14, 10), uint64], %var_7842: Tensor[(13, 14, 10), uint64]) -> Tensor[(13, 14, 10), uint64] {
  %174 = cast(%var_7842, dtype="uint64") /* ty=Tensor[(13, 14, 10), uint64] */;
  %175 = shape_of(%var_7841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%var_7841, dtype="uint64") /* ty=Tensor[(13, 14, 10), uint64] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%176, %177) /* ty=Tensor[(13, 14, 10), uint64] */
}

def @func_2462() -> Tensor[(4, 3, 12), float64] {
  @func_1313() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_4029(%var_4019: uint8, %var_4020: Tensor[(1, 5, 13), uint8]) -> (Tensor[(1, 5, 13), uint8],) {
  %178 = cast(%var_4019, dtype="uint8") /* ty=uint8 */;
  %179 = cast(%var_4020, dtype="uint8") /* ty=Tensor[(1, 5, 13), uint8] */;
  %180 = bitwise_and(%178, %179) /* ty=Tensor[(1, 5, 13), uint8] */;
  (%180,)
}

def @func_11(%var_0: Tensor[(5, 16, 12), uint8], %var_1: Tensor[(5, 16, 12), uint8]) -> (Tensor[(5, 16, 12), bool],) {
  %181 = cast(%var_1, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
  %182 = shape_of(%var_0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%var_0, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %185 = greater_equal(%183, %184) /* ty=Tensor[(5, 16, 12), bool] */;
  (%185,)
}

def @func_4181() -> (Tensor[(4, 3, 12), float32],) {
  %186 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  (%186,)
}

def @func_5239() -> (Tensor[(4, 3, 12), float64],) {
  %187 = @func_2485() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %188 = %187.0;
  (%188,)
}

def @func_7426() -> Tensor[(4, 3, 12), float64] {
  %189 = @func_3216() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %189.0
}

def @func_4350() -> Tensor[(4, 3, 12), float64] {
  %190 = @func_3701() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */;
  %190.0
}

def @func_2035() -> (Tensor[(4, 3, 12), float64],) {
  %191 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %192 = %191.0;
  (%192,)
}

def @func_2374() -> (Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) {
  %193 = cast(meta[relay.Constant][16] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %194 = reshape(%193, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %195 = @func_922(%194) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) */;
  %196 = @func_2277() /* ty=Tensor[(4, 3, 12), float32] */;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %198 = %195.1;
  %199 = acosh(%197) /* ty=Tensor[(4, 3, 12), float32] */;
  (%198, meta[relay.Constant][16] /* ty=Tensor[(1512), float64] */, %199)
}

def @func_3506(%var_3489: Tensor[(14, 4, 15), float32], %var_3495: Tensor[(160), bool]) -> (Tensor[(14, 4, 15), float32], Tensor[(5, 16, 2), bool], Tensor[(160), bool]) {
  %200 = cast(%var_3489, dtype="float32") /* ty=Tensor[(14, 4, 15), float32] */;
  %201 = cast(%var_3495, dtype="bool") /* ty=Tensor[(160), bool] */;
  %202 = reshape(%201, newshape=[5, 16, 2]) /* ty=Tensor[(5, 16, 2), bool] */;
  %203 = @func_1679(%202) /* ty=(Tensor[(5, 16, 2), bool],) */;
  %204 = cosh(%200) /* ty=Tensor[(14, 4, 15), float32] */;
  %205 = %203.0;
  (%204, %205, %var_3495)
}

def @func_8520(%var_8503: Tensor[(3, 12, 13), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(3, 12, 13), bool]) {
  %206 = @func_3769() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %207 = @func_8079() /* ty=(Tensor[(3, 12, 13), float64], Tensor[(4, 3, 12), float32]) */;
  %208 = %207.0;
  %209 = cast(%var_8503, dtype="bool") /* ty=Tensor[(3, 12, 13), bool] */;
  %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%208, dtype="bool") /* ty=Tensor[(3, 12, 13), bool] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %213 = %206.0;
  %214 = greater_equal(%211, %212) /* ty=Tensor[(3, 12, 13), bool] */;
  (%213, %214)
}

def @func_2778() -> Tensor[(4, 3, 12), float64] {
  %215 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %215.0
}

def @func_2861(%var_2838: Tensor[(33), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
  %216 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %217 = cast(%var_2838, dtype="float64") /* ty=Tensor[(33), float64] */;
  %218 = cast(meta[relay.Constant][17] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %219 = reshape(%217, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %220 = reshape(%218, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %221 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
  %222 = %216.0;
  %223 = @func_800(%219, %220) /* ty=Tensor[(11, 3, 14), float64] */;
  %224 = @func_1313() /* ty=Tensor[(4, 3, 12), float64] */;
  %225 = %221.2;
  (%222, %223, %var_2838, meta[relay.Constant][17] /* ty=Tensor[(462), float64] */, %224, %225)
}

def @func_5607() -> Tensor[(4, 3, 12), float32] {
  @func_3264() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_6957(%var_6926: Tensor[(6, 10, 9), float64]) -> Tensor[(6, 10, 9), float64] {
  %226 = cast(%var_6926, dtype="float64") /* ty=Tensor[(6, 10, 9), float64] */;
  atan(%226) /* ty=Tensor[(6, 10, 9), float64] */
}

def @func_6982() -> Tensor[(4, 3, 12), float64] {
  %227 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %227.0
}

def @func_8554() -> (Tensor[(448), float64],) {
  %228 = @func_5180() /* ty=Tensor[(448), float64] */;
  (%228,)
}

def @func_3058() -> (Tensor[(4, 3, 12), float64],) {
  %229 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %230 = %229.0;
  (%230,)
}

def @func_4369() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(14, 4, 15), float32], Tensor[(4, 432), float32]) {
  %231 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %232 = @func_3216() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %233 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 432), float32] */, dtype="float32") /* ty=Tensor[(4, 432), float32] */;
  %234 = reshape(%233, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %235 = @func_3542(%234) /* ty=(Tensor[(14, 4, 15), float32], Tensor[(2, 420), float32], Tensor[(160), bool], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64], Tensor[(12, 16, 9), float32]) */;
  %236 = %231.0;
  %237 = %232.0;
  %238 = %235.0;
  (%236, %237, %238, meta[relay.Constant][18] /* ty=Tensor[(4, 432), float32] */)
}

def @func_1794() -> (Tensor[(4, 3, 12), float32],) {
  %239 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %240 = %239.0;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %242 = sin(%241) /* ty=Tensor[(4, 3, 12), float32] */;
  (%242,)
}

def @func_5813() -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64]) {
  %243 = @func_3058() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %244 = @func_5607() /* ty=Tensor[(4, 3, 12), float32] */;
  %245 = %243.0;
  (%244, %245)
}

def @func_2921() -> (Tensor[(4, 3, 12), float32],) {
  %246 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %247 = %246.0;
  (%247,)
}

def @func_5152() -> Tensor[(4, 3, 12), float32] {
  %248 = @func_2921() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %248.0
}

def @func_5360() -> Tensor[(4, 3, 12), float32] {
  %249 = @func_4181() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %249.0
}

def @func_8079() -> (Tensor[(3, 12, 13), float64], Tensor[(4, 3, 12), float32]) {
  %250 = @func_6908() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), float32], Tensor[(4, 3, 12), float32], Tensor[(960), bool]) */;
  %251 = %250.1;
  %252 = cast(%251, dtype="float64") /* ty=Tensor[(3, 12, 13), float64] */;
  %253 = sin(%252) /* ty=Tensor[(3, 12, 13), float64] */;
  %254 = @func_5152() /* ty=Tensor[(4, 3, 12), float32] */;
  (%253, %254)
}

def @func_4156(%var_4096: Tensor[(960), bool]) -> (Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), uint16], Tensor[(5, 16, 12), float64]) {
  %255 = @func_3701() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */;
  %256 = cast(%var_4096, dtype="bool") /* ty=Tensor[(960), bool] */;
  %257 = reshape(%256, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), bool] */;
  %258 = @func_1271(%257) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) */;
  %259 = %258.2;
  %260 = cast(%var_4096, dtype="float64") /* ty=Tensor[(960), float64] */;
  %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %262 = cast(%259, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %264 = @func_3740() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(1512), float64]) */;
  %265 = cast(%259, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
  %266 = log10(%265) /* ty=Tensor[(5, 16, 12), float64] */;
  %267 = cast(%266, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  %268 = atan(%267) /* ty=Tensor[(5, 16, 12), float32] */;
  %269 = cast(%var_4096, dtype="bool") /* ty=Tensor[(960), bool] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %273 = cast(%268, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
  %274 = sigmoid(%273) /* ty=Tensor[(5, 16, 12), float64] */;
  %275 = cast(%266, dtype="uint16") /* ty=Tensor[(5, 16, 12), uint16] */;
  %276 = shape_of(%274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%274, dtype="uint16") /* ty=Tensor[(5, 16, 12), uint16] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %279 = cast(%274, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
  %280 = %255.1;
  %281 = mod(%262, %263) /* ty=Tensor[(5, 16, 12), float64] */;
  %282 = %264.0;
  %283 = not_equal(%271, %272) /* ty=Tensor[(5, 16, 12), bool] */;
  %284 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  %285 = bitwise_and(%277, %278) /* ty=Tensor[(5, 16, 12), uint16] */;
  %286 = log2(%279) /* ty=Tensor[(5, 16, 12), float64] */;
  (%280, %281, %282, %283, %284, %285, %286)
}

def @func_8032() -> (Tensor[(4, 3, 12), float64],) {
  %287 = @func_7384() /* ty=Tensor[(4, 3, 12), float64] */;
  (%287,)
}

def @func_4316(%var_4312: Tensor[(10, 15, 12), float32]) -> Tensor[(10, 15, 12), float32] {
  %288 = cast(%var_4312, dtype="float32") /* ty=Tensor[(10, 15, 12), float32] */;
  cos(%288) /* ty=Tensor[(10, 15, 12), float32] */
}

def @func_5054(%var_5037: Tensor[(4, 3, 12), float64]) -> (Tensor[(4, 3, 12), uint8],) {
  %289 = @func_4350() /* ty=Tensor[(4, 3, 12), float64] */;
  %290 = cast(%var_5037, dtype="uint8") /* ty=Tensor[(4, 3, 12), uint8] */;
  %291 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%289, dtype="uint8") /* ty=Tensor[(4, 3, 12), uint8] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %294 = subtract(%292, %293) /* ty=Tensor[(4, 3, 12), uint8] */;
  (%294,)
}

def @func_7043() -> (Tensor[(4, 3, 12), uint64], Tensor[(4, 3, 12), float32]) {
  %295 = @func_5517() /* ty=(Tensor[(4, 3, 12), uint64],) */;
  %296 = @func_2921() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %297 = %295.0;
  %298 = %296.0;
  (%297, %298)
}

def @func_5964() -> (Tensor[(4, 3, 12), float32],) {
  %299 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  (%299,)
}

def @func_4619() -> Tensor[(4, 3, 12), float32] {
  @func_2277() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_6326() -> Tensor[(4, 3, 12), float32] {
  %300 = @func_4181() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %300.0
}

def @func_6068() -> (Tensor[(4, 3, 12), float32],) {
  %301 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
  (%301,)
}

def @func_7333() -> Tensor[(448), float64] {
  %302 = @func_3484() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(56, 2), float64], Tensor[(60, 16), uint8]) */;
  %302.3
}

def @func_5224() -> (Tensor[(4, 3, 12), float64],) {
  %303 = @func_2991() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64]) */;
  %304 = %303.0;
  (%304,)
}

def @func_3912() -> Tensor[(4, 3, 12), float64] {
  %305 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %305.0
}

def @func_1211() -> (Tensor[(4, 3, 12), float64],) {
  %306 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %307 = tan(%306) /* ty=Tensor[(4, 3, 12), float64] */;
  (%307,)
}

def @func_7786() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(1320), float64], Tensor[(2640), float32]) {
  %308 = @func_5239() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %309 = cast(meta[relay.Constant][20] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %310 = @func_5360() /* ty=Tensor[(4, 3, 12), float32] */;
  %311 = cast(%310, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %312 = reshape(%309, newshape=[11, 16, 15]) /* ty=Tensor[(11, 16, 15), float32] */;
  %313 = reshape(%311, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float32] */;
  %314 = @func_3837(%312, %313) /* ty=(Tensor[(11, 16, 15), float32], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(4, 3, 12), uint16], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(4, 3, 12), float64]) */;
  %315 = %308.0;
  %316 = @func_6982() /* ty=Tensor[(4, 3, 12), float64] */;
  %317 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  %318 = %314.5;
  (%315, %310, %316, %317, %318, meta[relay.Constant][20] /* ty=Tensor[(2640), float32] */)
}

def @func_4738(%var_4716: Tensor[(4, 3, 12), float32]) -> Tensor[(4, 3, 12), bool] {
  %319 = @func_2196() /* ty=Tensor[(4, 3, 12), float32] */;
  %320 = cast(%var_4716, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
  %321 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%319, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%322, %323) /* ty=Tensor[(4, 3, 12), bool] */
}

def @func_5143() -> Tensor[(4, 3, 12), float64] {
  @func_3912() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_4969() -> (Tensor[(4, 3, 12), float64],) {
  %324 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %325 = %324.0;
  (%325,)
}

def @func_8116(%var_8083: int16, %var_8084: Tensor[(13, 15, 3), int16]) -> (Tensor[(13, 15, 3), float64], Tensor[(13, 15, 3), uint8]) {
  %326 = cast(%var_8083, dtype="bool") /* ty=bool */;
  %327 = cast(%var_8084, dtype="bool") /* ty=Tensor[(13, 15, 3), bool] */;
  %328 = equal(%326, %327) /* ty=Tensor[(13, 15, 3), bool] */;
  %329 = cast(%var_8083, dtype="float64") /* ty=float64 */;
  %330 = cast(%328, dtype="float64") /* ty=Tensor[(13, 15, 3), float64] */;
  %331 = cast(%var_8084, dtype="uint8") /* ty=Tensor[(13, 15, 3), uint8] */;
  %332 = cast(%var_8083, dtype="uint8") /* ty=uint8 */;
  %333 = power(%329, %330) /* ty=Tensor[(13, 15, 3), float64] */;
  %334 = multiply(%331, %332) /* ty=Tensor[(13, 15, 3), uint8] */;
  (%333, %334)
}

def @func_3586(%var_3584: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(462), float64], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) {
  %335 = @func_2991() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64]) */;
  %336 = cast(%var_3584, dtype="float64") /* ty=Tensor[(112), float64] */;
  %337 = reshape(%336, newshape=[1, 112]) /* ty=Tensor[(1, 112), float64] */;
  %338 = @func_2222(%337) /* ty=(Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(2, 8, 7), bool], Tensor[(4, 3, 12), float32]) */;
  %339 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
  %340 = %335.1;
  %341 = %338.5;
  (%339, %340, %341, %var_3584)
}

def @func_977(%var_947: Tensor[(15, 2, 16), uint32]) -> (Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) {
  %342 = cast(%var_947, dtype="uint32") /* ty=Tensor[(15, 2, 16), uint32] */;
  %343 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(15, 2, 16), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 2, 16), uint32] */, dtype="uint32") /* ty=Tensor[(15, 2, 16), uint32] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %346 = cast(meta[relay.Constant][22] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %347 = reshape(%346, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %348 = @func_922(%347) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) */;
  %349 = cast(meta[relay.Constant][23] /* ty=Tensor[(960, 1), uint8] */, dtype="uint8") /* ty=Tensor[(960, 1), uint8] */;
  %350 = cast(meta[relay.Constant][23] /* ty=Tensor[(960, 1), uint8] */, dtype="uint8") /* ty=Tensor[(960, 1), uint8] */;
  %351 = reshape(%349, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %352 = reshape(%350, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %353 = @func_11(%351, %352) /* ty=(Tensor[(5, 16, 12), bool],) */;
  %354 = %353.0;
  %355 = cast(%354, dtype="uint8") /* ty=Tensor[(5, 16, 12), uint8] */;
  %356 = cast(%354, dtype="uint8") /* ty=Tensor[(5, 16, 12), uint8] */;
  %357 = reshape(%355, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %358 = reshape(%356, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %359 = @func_11(%357, %358) /* ty=(Tensor[(5, 16, 12), bool],) */;
  %360 = right_shift(%344, %345) /* ty=Tensor[(15, 2, 16), uint32] */;
  %361 = %348.3;
  %362 = %359.0;
  (%360, %361, meta[relay.Constant][22] /* ty=Tensor[(1512), float64] */, %354, meta[relay.Constant][23] /* ty=Tensor[(960, 1), uint8] */, %362)
}

def @func_8634(%var_8619: Tensor[(4, 3, 12), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64]) {
  %363 = @func_6585() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(1, 14, 9), int32], int32) */;
  %364 = @func_5224() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %365 = @func_5239() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %366 = %365.0;
  %367 = cast(%var_8619, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%366, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %371 = @func_2462() /* ty=Tensor[(4, 3, 12), float64] */;
  %372 = %363.0;
  %373 = @func_6326() /* ty=Tensor[(4, 3, 12), float32] */;
  %374 = %364.0;
  %375 = floor_mod(%369, %370) /* ty=Tensor[(4, 3, 12), float64] */;
  (%371, %372, %373, %374, %375)
}

def @func_5331(%var_5324: Tensor[(1, 6, 4), float64]) -> Tensor[(1, 6, 4), float64] {
  %376 = cast(%var_5324, dtype="float64") /* ty=Tensor[(1, 6, 4), float64] */;
  acosh(%376) /* ty=Tensor[(1, 6, 4), float64] */
}

def @func_4704() -> (Tensor[(4, 3, 12), float64],) {
  %377 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %378 = %377.0;
  %379 = cast(%378, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %380 = asinh(%379) /* ty=Tensor[(4, 3, 12), float64] */;
  (%380,)
}

def @func_2222(%var_2210: Tensor[(1, 112), float64]) -> (Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(2, 8, 7), bool], Tensor[(4, 3, 12), float32]) {
  %381 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %382 = %381.1;
  %383 = cast(%382, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %384 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 224), float64] */, dtype="float64") /* ty=Tensor[(2, 224), float64] */;
  %385 = cast(%var_2210, dtype="float64") /* ty=Tensor[(1, 112), float64] */;
  %386 = reshape(%383, newshape=[240, 2]) /* ty=Tensor[(240, 2), bool] */;
  %387 = reshape(%384, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %388 = reshape(%385, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %389 = @func_1970(%386, %387, %388) /* ty=(Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8], Tensor[(1512), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(14, 9, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(240, 2), bool]) */;
  %390 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 224), float64] */, dtype="float64") /* ty=Tensor[(2, 224), float64] */;
  %391 = cast(%var_2210, dtype="float64") /* ty=Tensor[(1, 112), float64] */;
  %392 = %389.7;
  %393 = cast(%392, dtype="uint8") /* ty=Tensor[(5, 16, 12), uint8] */;
  %394 = reshape(%390, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
  %395 = reshape(%391, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
  %396 = reshape(%393, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %397 = @func_98(%394, %395, %396) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
  %398 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %399 = %397.1;
  %400 = %398.0;
  (%382, %392, meta[relay.Constant][24] /* ty=Tensor[(2, 224), float64] */, %var_2210, %399, %400)
}

def @func_3216() -> (Tensor[(4, 3, 12), float64],) {
  %401 = @func_3058() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %402 = %401.0;
  (%402,)
}

def @func_1577(%var_1557: Tensor[(4, 3, 12), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), bool], Tensor[(4, 3, 12), float64]) {
  %403 = @func_1313() /* ty=Tensor[(4, 3, 12), float64] */;
  %404 = cast(%var_1557, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(%403, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %408 = cast(%var_1557, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
  %409 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%403, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %412 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %413 = add(%406, %407) /* ty=Tensor[(4, 3, 12), float32] */;
  %414 = less_equal(%410, %411) /* ty=Tensor[(4, 3, 12), bool] */;
  %415 = %412.0;
  (%413, %414, %415)
}

def @func_7513(%var_7506: Tensor[(3, 12, 13), float32]) -> (Tensor[(3, 12, 13), bool],) {
  %416 = @func_6908() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), float32], Tensor[(4, 3, 12), float32], Tensor[(960), bool]) */;
  %417 = %416.1;
  %418 = cast(%var_7506, dtype="bool") /* ty=Tensor[(3, 12, 13), bool] */;
  %419 = shape_of(%417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%417, dtype="bool") /* ty=Tensor[(3, 12, 13), bool] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %422 = logical_and(%420, %421) /* ty=Tensor[(3, 12, 13), bool] */;
  (%422,)
}

def @func_9091(%var_9072: Tensor[(16, 3, 6), float32]) -> (Tensor[(4, 3, 12), float64], Tensor[(14, 4, 15), float32], Tensor[(4, 3, 12), float32], Tensor[(16, 3, 6), float32]) {
  %423 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %424 = @func_4369() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(14, 4, 15), float32], Tensor[(4, 432), float32]) */;
  %425 = @func_8983() /* ty=Tensor[(16, 3, 6), float32] */;
  %426 = cast(%var_9072, dtype="float32") /* ty=Tensor[(16, 3, 6), float32] */;
  %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%425, dtype="float32") /* ty=Tensor[(16, 3, 6), float32] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %430 = %423.0;
  %431 = %424.2;
  %432 = @func_5360() /* ty=Tensor[(4, 3, 12), float32] */;
  %433 = floor_divide(%428, %429) /* ty=Tensor[(16, 3, 6), float32] */;
  (%430, %431, %432, %433)
}

def @main(%var_9596: Tensor[(2, 1, 7), float32], %var_9597: Tensor[(2, 13, 7), float32]) -> (Tensor[(2, 13, 7), float32], Tensor[(2, 13, 7), float32], Tensor[(2, 13, 7), float64]) {
  %434 = cast(%var_9596, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
  %435 = cast(%var_9597, dtype="float32") /* ty=Tensor[(2, 13, 7), float32] */;
  %436 = cast(%var_9597, dtype="float32") /* ty=Tensor[(2, 13, 7), float32] */;
  %437 = cast(%var_9597, dtype="float64") /* ty=Tensor[(2, 13, 7), float64] */;
  %438 = floor_mod(%434, %435) /* ty=Tensor[(2, 13, 7), float32] */;
  %439 = sigmoid(%436) /* ty=Tensor[(2, 13, 7), float32] */;
  %440 = atanh(%437) /* ty=Tensor[(2, 13, 7), float64] */;
  (%438, %439, %440)
}

def @func_922(%var_907: Tensor[(14, 9, 12), float64]) -> (Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) {
  %441 = cast(%var_907, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
  %442 = cast(meta[relay.Constant][25] /* ty=Tensor[(1848), float32] */, dtype="float32") /* ty=Tensor[(1848), float32] */;
  %443 = cast(meta[relay.Constant][26] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %444 = reshape(%442, newshape=[14, 12, 11]) /* ty=Tensor[(14, 12, 11), float32] */;
  %445 = reshape(%443, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %446 = @func_143(%444, %445) /* ty=(Tensor[(14, 1, 11), float64], Tensor[(14, 12, 11), float64], Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8]) */;
  %447 = rsqrt(%441) /* ty=Tensor[(14, 9, 12), float64] */;
  %448 = %446.3;
  (%447, %448, meta[relay.Constant][25] /* ty=Tensor[(1848), float32] */, meta[relay.Constant][26] /* ty=Tensor[(448), float64] */)
}

def @func_1970(%var_1805: Tensor[(240, 2), bool], %var_1814: Tensor[(448), float64], %var_1815: Tensor[(112), float64]) -> (Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8], Tensor[(1512), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(14, 9, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(240, 2), bool]) {
  %449 = cast(%var_1814, dtype="float64") /* ty=Tensor[(448), float64] */;
  %450 = cast(%var_1815, dtype="float64") /* ty=Tensor[(112), float64] */;
  %451 = cast(meta[relay.Constant][27] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %452 = reshape(%449, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
  %453 = reshape(%450, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
  %454 = reshape(%451, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %455 = @func_98(%452, %453, %454) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
  %456 = cast(%var_1805, dtype="uint32") /* ty=Tensor[(240, 2), uint32] */;
  %457 = reshape(%456, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), uint32] */;
  %458 = @func_977(%457) /* ty=(Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) */;
  %459 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %460 = %459.0;
  %461 = cast(%460, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %462 = reshape(%461, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float64] */;
  %463 = @func_1577(%462) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), bool], Tensor[(4, 3, 12), float64]) */;
  %464 = cast(meta[relay.Constant][27] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %465 = cast(meta[relay.Constant][27] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %466 = reshape(%464, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %467 = reshape(%465, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %468 = @func_11(%466, %467) /* ty=(Tensor[(5, 16, 12), bool],) */;
  %469 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %470 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %471 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %472 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %473 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %474 = %458.2;
  %475 = cast(%474, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %476 = reshape(%475, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %477 = @func_922(%476) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) */;
  %478 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %479 = %478.1;
  %480 = cast(%479, dtype="float64") /* ty=Tensor[(240, 2), float64] */;
  %481 = log10(%480) /* ty=Tensor[(240, 2), float64] */;
  %482 = cast(%var_1805, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %483 = shape_of(%479, dtype="int32") /* ty=Tensor[(2), int32] */;
  %484 = cast(%479, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %486 = greater(%484, %485) /* ty=Tensor[(240, 2), bool] */;
  %487 = cast(%486, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %488 = shape_of(%481, dtype="int32") /* ty=Tensor[(2), int32] */;
  %489 = cast(%481, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %491 = cast(%var_1814, dtype="float64") /* ty=Tensor[(448), float64] */;
  %492 = cast(%var_1815, dtype="float64") /* ty=Tensor[(112), float64] */;
  %493 = cast(meta[relay.Constant][27] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %494 = reshape(%491, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
  %495 = reshape(%492, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
  %496 = reshape(%493, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %497 = @func_98(%494, %495, %496) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
  %498 = cast(%481, dtype="float64") /* ty=Tensor[(240, 2), float64] */;
  %499 = acos(%498) /* ty=Tensor[(240, 2), float64] */;
  %500 = cast(%479, dtype="uint32") /* ty=Tensor[(240, 2), uint32] */;
  %501 = reshape(%500, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), uint32] */;
  %502 = @func_977(%501) /* ty=(Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) */;
  %503 = %502.0;
  %504 = cast(%503, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
  %505 = shape_of(%499, dtype="int32") /* ty=Tensor[(2), int32] */;
  %506 = cast(%499, dtype="float32") /* ty=Tensor[(240, 2), float32] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %508 = add(%506, %507) /* ty=Tensor[(240, 2), float32] */;
  %509 = cast(meta[relay.Constant][28] /* ty=Tensor[(240, 2), float32] */, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %510 = shape_of(%508, dtype="int32") /* ty=Tensor[(2), int32] */;
  %511 = cast(%508, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %513 = %455.1;
  %514 = %463.0;
  %515 = %468.0;
  %516 = %469.0;
  %517 = %470.0;
  %518 = %471.0;
  %519 = %472.0;
  %520 = %473.2;
  %521 = %477.0;
  %522 = logical_and(%489, %490) /* ty=Tensor[(240, 2), bool] */;
  %523 = %497.2;
  %524 = not_equal(%511, %512) /* ty=Tensor[(240, 2), bool] */;
  (%513, %var_1814, %var_1815, meta[relay.Constant][27] /* ty=Tensor[(960), uint8] */, %474, %460, %514, %515, %516, %517, %518, %519, %520, %521, %522, %523, %524)
}

def @func_2742(%var_2738: Tensor[(33, 1), float64], %var_2739: Tensor[(462), float64]) -> (Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) {
  %525 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
  %526 = cast(%var_2738, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
  %527 = cast(%var_2739, dtype="float64") /* ty=Tensor[(462), float64] */;
  %528 = reshape(%526, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %529 = reshape(%527, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %530 = %525.0;
  %531 = @func_800(%528, %529) /* ty=Tensor[(11, 3, 14), float64] */;
  (%530, %531, %var_2738, %var_2739)
}

def @func_3975() -> (Tensor[(448), float64],) {
  %532 = @func_3484() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(56, 2), float64], Tensor[(60, 16), uint8]) */;
  %533 = %532.3;
  (%533,)
}

def @func_5783() -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(4, 84), float32]) {
  %534 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 84), float32] */, dtype="float32") /* ty=Tensor[(4, 84), float32] */;
  %535 = reshape(%534, newshape=[4, 7, 12]) /* ty=Tensor[(4, 7, 12), float32] */;
  %536 = @func_4654(%535) /* ty=(Tensor[(4, 7, 12), float32], Tensor[(4, 7, 12), int8], Tensor[(4, 3, 12), float32]) */;
  %537 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
  %538 = %536.2;
  (%537, %538, meta[relay.Constant][29] /* ty=Tensor[(4, 84), float32] */)
}

def @func_9496() -> Tensor[(448), float64] {
  @func_5180() /* ty=Tensor[(448), float64] */
}

def @func_6368(%var_6352: int32) -> (Tensor[(1, 14, 9), int32], Tensor[(448), float64]) {
  %539 = cast(%var_6352, dtype="int32") /* ty=int32 */;
  %540 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 14, 9), int32] */, dtype="int32") /* ty=Tensor[(1, 14, 9), int32] */;
  %541 = @func_3975() /* ty=(Tensor[(448), float64],) */;
  %542 = subtract(%539, %540) /* ty=Tensor[(1, 14, 9), int32] */;
  %543 = %541.0;
  (%542, %543)
}

def @func_5882() -> Tensor[(4, 3, 12), float32] {
  @func_2277() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_5909() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
  %544 = @func_2778() /* ty=Tensor[(4, 3, 12), float64] */;
  %545 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  (%544, %545)
}

def @func_2618() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64]) {
  %546 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %547 = @func_2462() /* ty=Tensor[(4, 3, 12), float64] */;
  %548 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %549 = %548.0;
  %550 = cast(%549, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %551 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%547, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %554 = cast(%549, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %555 = cast(meta[relay.Constant][31] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %556 = cast(meta[relay.Constant][32] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %557 = reshape(%555, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %558 = reshape(%556, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %559 = %546.0;
  %560 = mod(%552, %553) /* ty=Tensor[(4, 3, 12), float32] */;
  %561 = sqrt(%554) /* ty=Tensor[(4, 3, 12), float64] */;
  %562 = @func_800(%557, %558) /* ty=Tensor[(11, 3, 14), float64] */;
  (%559, %560, %561, %562, meta[relay.Constant][31] /* ty=Tensor[(33), float64] */, meta[relay.Constant][32] /* ty=Tensor[(462), float64] */)
}

def @func_4880(%var_4863: Tensor[(240, 2), bool]) -> Tensor[(240, 2), int8] {
  %563 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %564 = %563.1;
  %565 = cast(%var_4863, dtype="int8") /* ty=Tensor[(240, 2), int8] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(2), int32] */;
  %567 = cast(%564, dtype="int8") /* ty=Tensor[(240, 2), int8] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  subtract(%567, %568) /* ty=Tensor[(240, 2), int8] */
}

def @func_3769() -> (Tensor[(4, 3, 12), float32],) {
  %569 = @func_3228() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %570 = %569.0;
  (%570,)
}

def @func_1640() -> (Tensor[(4, 3, 12), float64],) {
  %571 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %572 = %571.0;
  (%572,)
}

def @func_1271(%var_1265: Tensor[(5, 16, 12), bool]) -> (Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) {
  %573 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %574 = cast(meta[relay.Constant][34] /* ty=Tensor[(240, 2), uint32] */, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %575 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(240, 2), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %576 = cast(meta[relay.Constant][33] /* ty=Tensor[(240, 2), uint32] */, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %578 = cast(meta[relay.Constant][33] /* ty=Tensor[(240, 2), uint32] */, dtype="uint32") /* ty=Tensor[(240, 2), uint32] */;
  %579 = reshape(%578, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), uint32] */;
  %580 = @func_977(%579) /* ty=(Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) */;
  %581 = %580.5;
  %582 = cast(%var_1265, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%581, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %586 = %573.0;
  %587 = greater_equal(%576, %577) /* ty=Tensor[(240, 2), bool] */;
  %588 = power(%584, %585) /* ty=Tensor[(5, 16, 12), float32] */;
  (%586, %587, %588)
}

def @func_2196() -> Tensor[(4, 3, 12), float32] {
  %589 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %589.0
}

def @func_2806() -> Tensor[(4, 3, 12), float32] {
  %590 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %591 = %590.0;
  %592 = cast(%591, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  exp(%592) /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_1450() -> (Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) {
  %593 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %594 = cast(meta[relay.Constant][35] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %595 = reshape(%594, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), bool] */;
  %596 = @func_1271(%595) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) */;
  %597 = %593.0;
  %598 = %596.1;
  %599 = @func_1313() /* ty=Tensor[(4, 3, 12), float64] */;
  (%597, %598, meta[relay.Constant][35] /* ty=Tensor[(960), bool] */, %599)
}

def @func_8351() -> Tensor[(4, 3, 12), float32] {
  %600 = @func_7786() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(1320), float64], Tensor[(2640), float32]) */;
  %600.3
}

def @func_8009() -> (Tensor[(4, 3, 12), float32],) {
  %601 = @func_5004() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32]) */;
  %602 = %601.0;
  (%602,)
}

def @func_8808() -> (Tensor[(2640), float32],) {
  %603 = @func_8229() /* ty=(Tensor[(2640), float32], Tensor[(240, 2), bool]) */;
  %604 = %603.0;
  (%604,)
}

def @func_5180() -> Tensor[(448), float64] {
  %605 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
  %605.0
}

def @func_3837(%var_3784: Tensor[(11, 16, 15), float32], %var_3812: Tensor[(4, 3, 12), float32]) -> (Tensor[(11, 16, 15), float32], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(4, 3, 12), uint16], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(4, 3, 12), float64]) {
  %606 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 16, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 16, 15), float32] */;
  %607 = shape_of(%var_3784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%var_3784, dtype="float32") /* ty=Tensor[(11, 16, 15), float32] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %610 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 112), float64] */, dtype="float64") /* ty=Tensor[(1, 112), float64] */;
  %611 = reshape(%610, newshape=[1, 112]) /* ty=Tensor[(1, 112), float64] */;
  %612 = @func_2222(%611) /* ty=(Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(2, 8, 7), bool], Tensor[(4, 3, 12), float32]) */;
  %613 = @func_3228() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %614 = %613.0;
  %615 = cast(%var_3812, dtype="uint16") /* ty=Tensor[(4, 3, 12), uint16] */;
  %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%614, dtype="uint16") /* ty=Tensor[(4, 3, 12), uint16] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %619 = cast(meta[relay.Constant][38] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %620 = reshape(%619, newshape=[8, 11, 15]) /* ty=Tensor[(8, 11, 15), float64] */;
  %621 = @func_3058() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %622 = divide(%608, %609) /* ty=Tensor[(11, 16, 15), float32] */;
  %623 = %612.2;
  %624 = bitwise_or(%617, %618) /* ty=Tensor[(4, 3, 12), uint16] */;
  %625 = @func_3412(%620) /* ty=Tensor[(8, 11, 15), float64] */;
  %626 = %621.0;
  (%622, %623, meta[relay.Constant][37] /* ty=Tensor[(1, 112), float64] */, %624, %625, meta[relay.Constant][38] /* ty=Tensor[(1320), float64] */, %626)
}

def @func_2485() -> (Tensor[(4, 3, 12), float64],) {
  %627 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %628 = %627.3;
  (%628,)
}

def @func_4542(%var_4539: Tensor[(33, 1), float64], %var_4540: Tensor[(77, 6), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(77, 6), float64]) {
  %629 = cast(%var_4539, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
  %630 = cast(%var_4540, dtype="float64") /* ty=Tensor[(77, 6), float64] */;
  %631 = reshape(%629, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %632 = reshape(%630, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %633 = @func_2742(%631, %632) /* ty=(Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) */;
  %634 = @func_2196() /* ty=Tensor[(4, 3, 12), float32] */;
  %635 = @func_2462() /* ty=Tensor[(4, 3, 12), float64] */;
  %636 = %633.1;
  (%634, %635, %636, %var_4539, %var_4540)
}

def @func_5517() -> (Tensor[(4, 3, 12), uint64],) {
  %637 = @func_2277() /* ty=Tensor[(4, 3, 12), float32] */;
  %638 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 3, 12), float32] */, dtype="uint64") /* ty=Tensor[(4, 3, 12), uint64] */;
  %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%637, dtype="uint64") /* ty=Tensor[(4, 3, 12), uint64] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %642 = left_shift(%640, %641) /* ty=Tensor[(4, 3, 12), uint64] */;
  (%642,)
}

def @func_3139(%var_3096: Tensor[(448), float64], %var_3101: Tensor[(960), bool], %var_3110: Tensor[(1848), float32], %var_3119: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(448), float64], Tensor[(448), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(4, 3, 12), float64], Tensor[(2, 8, 7), bool], Tensor[(112), float64], Tensor[(1848), float32]) {
  %643 = @func_2766() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(11, 3, 14), float64]) */;
  %644 = cast(meta[relay.Constant][40] /* ty=Tensor[(1848), float32] */, dtype="float32") /* ty=Tensor[(1848), float32] */;
  %645 = cast(%var_3096, dtype="float64") /* ty=Tensor[(448), float64] */;
  %646 = reshape(%644, newshape=[14, 12, 11]) /* ty=Tensor[(14, 12, 11), float32] */;
  %647 = reshape(%645, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %648 = @func_143(%646, %647) /* ty=(Tensor[(14, 1, 11), float64], Tensor[(14, 12, 11), float64], Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8]) */;
  %649 = cast(%var_3101, dtype="bool") /* ty=Tensor[(960), bool] */;
  %650 = reshape(%649, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), bool] */;
  %651 = @func_1271(%650) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) */;
  %652 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %653 = %648.3;
  %654 = cast(%653, dtype="float64") /* ty=Tensor[(448), float64] */;
  %655 = cast(%var_3119, dtype="float64") /* ty=Tensor[(112), float64] */;
  %656 = cast(%var_3101, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %657 = reshape(%654, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
  %658 = reshape(%655, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
  %659 = reshape(%656, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %660 = @func_98(%657, %658, %659) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
  %661 = cast(%var_3110, dtype="int32") /* ty=Tensor[(1848), int32] */;
  %662 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(1848), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %663 = cast(meta[relay.Constant][40] /* ty=Tensor[(1848), float32] */, dtype="int32") /* ty=Tensor[(1848), int32] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?), int32] */;
  %665 = right_shift(%663, %664) /* ty=Tensor[(1848), int32] */;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(1848), float64] */;
  %667 = cos(%666) /* ty=Tensor[(1848), float64] */;
  %668 = cast(%667, dtype="float64") /* ty=Tensor[(1848), float64] */;
  %669 = tan(%668) /* ty=Tensor[(1848), float64] */;
  %670 = cast(%665, dtype="float32") /* ty=Tensor[(1848), float32] */;
  %671 = shape_of(%669, dtype="int32") /* ty=Tensor[(1), int32] */;
  %672 = cast(%669, dtype="float32") /* ty=Tensor[(1848), float32] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?), float32] */;
  %674 = %643.1;
  %675 = %651.0;
  %676 = %652.0;
  %677 = %660.1;
  %678 = power(%672, %673) /* ty=Tensor[(1848), float32] */;
  (%674, %653, %var_3096, %675, %var_3101, %676, %677, %var_3119, %678)
}

def @func_2766() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(11, 3, 14), float64]) {
  %679 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %680 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %681 = @func_2485() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %682 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
  %683 = @func_2618() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64]) */;
  %684 = %679.0;
  %685 = %680.0;
  %686 = %681.0;
  %687 = %682.2;
  %688 = %683.3;
  (%684, %685, %686, %687, %688)
}

def @func_3902(%var_3854: Tensor[(4, 3, 12), float64], %var_3872: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), uint8], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) {
  %689 = @func_2485() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %690 = %689.0;
  %691 = cast(%var_3854, dtype="uint8") /* ty=Tensor[(4, 3, 12), uint8] */;
  %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%690, dtype="uint8") /* ty=Tensor[(4, 3, 12), uint8] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %695 = cast(%690, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %696 = cast(%var_3872, dtype="float64") /* ty=Tensor[(112), float64] */;
  %697 = reshape(%696, newshape=[1, 112]) /* ty=Tensor[(1, 112), float64] */;
  %698 = @func_2222(%697) /* ty=(Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(2, 8, 7), bool], Tensor[(4, 3, 12), float32]) */;
  %699 = minimum(%693, %694) /* ty=Tensor[(4, 3, 12), uint8] */;
  %700 = log2(%695) /* ty=Tensor[(4, 3, 12), float32] */;
  %701 = %698.5;
  (%699, %700, %701, %var_3872)
}

def @func_9564(%var_9543: Tensor[(468), float64], %var_9552: Tensor[(33), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), bool], Tensor[(468), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(11, 3, 14), float64]) {
  %702 = @func_3216() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %703 = cast(%var_9543, dtype="float64") /* ty=Tensor[(468), float64] */;
  %704 = reshape(%703, newshape=[3, 12, 13]) /* ty=Tensor[(3, 12, 13), float64] */;
  %705 = @func_8520(%704) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(3, 12, 13), bool]) */;
  %706 = cast(%var_9552, dtype="float64") /* ty=Tensor[(33), float64] */;
  %707 = cast(meta[relay.Constant][41] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %708 = reshape(%706, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %709 = reshape(%707, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %710 = @func_800(%708, %709) /* ty=Tensor[(11, 3, 14), float64] */;
  %711 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 3, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  %712 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%710, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %715 = %702.0;
  %716 = %705.1;
  %717 = power(%713, %714) /* ty=Tensor[(11, 3, 14), float64] */;
  (%715, %716, %var_9543, %var_9552, meta[relay.Constant][41] /* ty=Tensor[(462), float64] */, %717)
}

def @func_2991() -> (Tensor[(4, 3, 12), float64], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64]) {
  %718 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %719 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 3), float64] */;
  %720 = cast(meta[relay.Constant][44] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %721 = reshape(%719, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %722 = reshape(%720, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %723 = @func_2742(%721, %722) /* ty=(Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) */;
  %724 = %718.0;
  %725 = %723.3;
  (%724, %725, meta[relay.Constant][43] /* ty=Tensor[(11, 3), float64] */, meta[relay.Constant][44] /* ty=Tensor[(462), float64] */)
}

def @func_9017() -> Tensor[(4, 3, 12), float64] {
  @func_6744() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_4291(%var_4286: Tensor[(33, 1), float64], %var_4289: Tensor[(28, 4), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(33), float64], Tensor[(33, 1), float64], Tensor[(112), float64], Tensor[(28, 4), float64]) {
  %726 = @func_2921() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %727 = cast(%var_4286, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
  %728 = reshape(%727, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %729 = @func_2861(%728) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */;
  %730 = cast(%var_4289, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
  %731 = reshape(%730, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %732 = @func_3586(%731) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(462), float64], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) */;
  %733 = %726.0;
  %734 = %729.2;
  %735 = %732.3;
  (%733, %734, %var_4286, %735, %var_4289)
}

def @func_8229() -> (Tensor[(2640), float32], Tensor[(240, 2), bool]) {
  %736 = @func_7786() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(1320), float64], Tensor[(2640), float32]) */;
  %737 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %738 = %736.5;
  %739 = %737.1;
  (%738, %739)
}

def @func_1313() -> Tensor[(4, 3, 12), float64] {
  %740 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %740.0
}

def @func_4919(%var_4899: Tensor[(10, 6, 8), float32]) -> (Tensor[(10, 6, 8), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(960), uint8]) {
  %741 = cast(%var_4899, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %742 = @func_2485() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %743 = cast(meta[relay.Constant][45] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %744 = cast(meta[relay.Constant][45] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %745 = reshape(%743, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %746 = reshape(%744, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %747 = @func_11(%745, %746) /* ty=(Tensor[(5, 16, 12), bool],) */;
  %748 = sin(%741) /* ty=Tensor[(10, 6, 8), float32] */;
  %749 = %742.0;
  %750 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  %751 = %747.0;
  (%748, %749, %750, %751, meta[relay.Constant][45] /* ty=Tensor[(960), uint8] */)
}

def @func_9160(%var_9151: Tensor[(2, 10, 7), float32]) -> (Tensor[(2, 10, 7), float32], Tensor[(7, 15, 8), float32], Tensor[(840), float32]) {
  %752 = cast(%var_9151, dtype="float32") /* ty=Tensor[(2, 10, 7), float32] */;
  %753 = cast(meta[relay.Constant][46] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %754 = reshape(%753, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
  %755 = @func_7065(%754) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(7, 15, 8), float32], Tensor[(2, 420), float32]) */;
  %756 = asinh(%752) /* ty=Tensor[(2, 10, 7), float32] */;
  %757 = %755.1;
  (%756, %757, meta[relay.Constant][46] /* ty=Tensor[(840), float32] */)
}

def @func_2015(%var_2004: Tensor[(1512), float64], %var_2011: Tensor[(480), uint32]) -> (Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(960), uint8], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(15, 2, 16), uint32], Tensor[(480), uint32]) {
  %758 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %759 = cast(meta[relay.Constant][47] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %760 = cast(meta[relay.Constant][47] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %761 = reshape(%759, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %762 = reshape(%760, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %763 = @func_11(%761, %762) /* ty=(Tensor[(5, 16, 12), bool],) */;
  %764 = cast(%var_2004, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %765 = reshape(%764, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %766 = @func_922(%765) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) */;
  %767 = cast(%var_2011, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %768 = reshape(%767, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), uint32] */;
  %769 = @func_977(%768) /* ty=(Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) */;
  %770 = %758.0;
  %771 = %763.0;
  %772 = %766.3;
  %773 = %769.0;
  (%770, %771, meta[relay.Constant][47] /* ty=Tensor[(960), uint8] */, %772, %var_2004, %773, %var_2011)
}

def @func_3960() -> Tensor[(4, 3, 12), float64] {
  %774 = @func_3216() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %774.0
}

def @func_3264() -> Tensor[(4, 3, 12), float32] {
  @func_2806() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_8443(%var_8409: Tensor[(6, 5, 5), float64]) -> (Tensor[(6, 5, 5), float64], Tensor[(60, 16), uint8]) {
  %775 = cast(%var_8409, dtype="float64") /* ty=Tensor[(6, 5, 5), float64] */;
  %776 = @func_3484() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(56, 2), float64], Tensor[(60, 16), uint8]) */;
  %777 = erf(%775) /* ty=Tensor[(6, 5, 5), float64] */;
  %778 = %776.5;
  (%777, %778)
}

def @func_8484() -> Tensor[(448), float64] {
  @func_5180() /* ty=Tensor[(448), float64] */
}

def @func_9336() -> (Tensor[(7, 11, 9), int32], Tensor[(4, 3, 12), float64]) {
  %779 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 11, 9), int32] */, dtype="int32") /* ty=Tensor[(1, 11, 9), int32] */;
  %780 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 11, 9), int32] */, dtype="int32") /* ty=Tensor[(7, 11, 9), int32] */;
  %781 = logical_xor(%779, %780) /* ty=Tensor[(7, 11, 9), int32] */;
  %782 = @func_3912() /* ty=Tensor[(4, 3, 12), float64] */;
  (%781, %782)
}

def @func_8376() -> Tensor[(4, 3, 12), float32] {
  %783 = @func_7276() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %783.0
}

def @func_6487(%var_6468: Tensor[(7, 15, 8), float32]) -> (Tensor[(7, 15, 8), float32], Tensor[(7, 15, 8), float32]) {
  %784 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 15, 8), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 8), float32] */;
  %785 = shape_of(%var_6468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%var_6468, dtype="float32") /* ty=Tensor[(7, 15, 8), float32] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %788 = cast(%var_6468, dtype="float32") /* ty=Tensor[(7, 15, 8), float32] */;
  %789 = mod(%786, %787) /* ty=Tensor[(7, 15, 8), float32] */;
  %790 = erf(%788) /* ty=Tensor[(7, 15, 8), float32] */;
  (%789, %790)
}

def @func_8924() -> (Tensor[(448), float64], Tensor[(4, 3, 12), float32]) {
  %791 = @func_8554() /* ty=(Tensor[(448), float64],) */;
  %792 = @func_3228() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %793 = %791.0;
  %794 = %792.0;
  (%793, %794)
}

def @func_1494() -> (Tensor[(4, 3, 12), float64],) {
  %795 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %796 = %795.0;
  (%796,)
}

def @func_6727() -> (Tensor[(11, 3), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(462), float64], Tensor[(462), float64]) {
  %797 = @func_2991() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64]) */;
  %798 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %799 = %797.2;
  %800 = cast(%799, dtype="float64") /* ty=Tensor[(11, 3), float64] */;
  %801 = cast(meta[relay.Constant][51] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %802 = reshape(%800, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %803 = reshape(%801, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %804 = @func_2742(%802, %803) /* ty=(Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) */;
  %805 = %798.0;
  %806 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
  %807 = %804.3;
  (%799, %805, %806, %807, meta[relay.Constant][51] /* ty=Tensor[(462), float64] */)
}

def @func_6260() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
  %808 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %809 = @func_3228() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %810 = %808.0;
  %811 = %809.0;
  (%810, %811)
}

def @func_4654(%var_4621: Tensor[(4, 7, 12), float32]) -> (Tensor[(4, 7, 12), float32], Tensor[(4, 7, 12), int8], Tensor[(4, 3, 12), float32]) {
  %812 = cast(%var_4621, dtype="float32") /* ty=Tensor[(4, 7, 12), float32] */;
  %813 = sqrt(%812) /* ty=Tensor[(4, 7, 12), float32] */;
  %814 = cast(%var_4621, dtype="float32") /* ty=Tensor[(4, 7, 12), float32] */;
  %815 = shape_of(%813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(%813, dtype="float32") /* ty=Tensor[(4, 7, 12), float32] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %818 = cast(%var_4621, dtype="int8") /* ty=Tensor[(4, 7, 12), int8] */;
  %819 = shape_of(%813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%813, dtype="int8") /* ty=Tensor[(4, 7, 12), int8] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %822 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
  %823 = mod(%816, %817) /* ty=Tensor[(4, 7, 12), float32] */;
  %824 = subtract(%820, %821) /* ty=Tensor[(4, 7, 12), int8] */;
  %825 = %822.2;
  (%823, %824, %825)
}

def @func_6277() -> (Tensor[(4, 3, 12), float64], Tensor[(1320), float64], Tensor[(2640), float32]) {
  %826 = cast(meta[relay.Constant][52] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %827 = @func_4350() /* ty=Tensor[(4, 3, 12), float64] */;
  %828 = cast(%827, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %829 = reshape(%826, newshape=[11, 16, 15]) /* ty=Tensor[(11, 16, 15), float32] */;
  %830 = reshape(%828, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float32] */;
  %831 = @func_3837(%829, %830) /* ty=(Tensor[(11, 16, 15), float32], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(4, 3, 12), uint16], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(4, 3, 12), float64]) */;
  %832 = %831.5;
  (%827, %832, meta[relay.Constant][52] /* ty=Tensor[(2640), float32] */)
}

def @func_7325(%var_7321: uint8, %var_7322: Tensor[(65), uint8]) -> (Tensor[(4, 3, 12), float32], Tensor[(1, 5, 13), uint8], uint8, Tensor[(65), uint8]) {
  %833 = cast(%var_7321, dtype="uint8") /* ty=uint8 */;
  %834 = cast(%var_7322, dtype="uint8") /* ty=Tensor[(65), uint8] */;
  %835 = reshape(%833, newshape=[]) /* ty=uint8 */;
  %836 = reshape(%834, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), uint8] */;
  %837 = @func_4029(%835, %836) /* ty=(Tensor[(1, 5, 13), uint8],) */;
  %838 = @func_6326() /* ty=Tensor[(4, 3, 12), float32] */;
  %839 = %837.0;
  (%838, %839, %var_7321, %var_7322)
}

def @func_1679(%var_1669: Tensor[(5, 16, 2), bool]) -> (Tensor[(5, 16, 2), bool],) {
  %840 = cast(meta[relay.Constant][53] /* ty=Tensor[(5, 16, 2), bool] */, dtype="bool") /* ty=Tensor[(5, 16, 2), bool] */;
  %841 = shape_of(%var_1669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(%var_1669, dtype="bool") /* ty=Tensor[(5, 16, 2), bool] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %844 = logical_or(%842, %843) /* ty=Tensor[(5, 16, 2), bool] */;
  (%844,)
}

def @func_3659() -> (Tensor[(16, 3, 6), float32],) {
  %845 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 6), float32] */;
  %846 = erf(%845) /* ty=Tensor[(16, 3, 6), float32] */;
  (%846,)
}

def @func_7065(%var_7058: Tensor[(2, 420), float32]) -> (Tensor[(4, 3, 12), float64], Tensor[(7, 15, 8), float32], Tensor[(2, 420), float32]) {
  %847 = @func_3058() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %848 = cast(%var_7058, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
  %849 = reshape(%848, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), float32] */;
  %850 = @func_6487(%849) /* ty=(Tensor[(7, 15, 8), float32], Tensor[(7, 15, 8), float32]) */;
  %851 = %847.0;
  %852 = %850.1;
  (%851, %852, %var_7058)
}

def @func_8755(%var_8691: Tensor[(160), bool]) -> (Tensor[(4, 3, 12), float32], Tensor[(160), bool], Tensor[(5, 16, 2), float64], Tensor[(12, 4, 5), float64]) {
  %853 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
  %854 = cast(%var_8691, dtype="bool") /* ty=Tensor[(160), bool] */;
  %855 = reshape(%854, newshape=[5, 16, 2]) /* ty=Tensor[(5, 16, 2), bool] */;
  %856 = @func_1679(%855) /* ty=(Tensor[(5, 16, 2), bool],) */;
  %857 = %856.0;
  %858 = cast(%857, dtype="float64") /* ty=Tensor[(5, 16, 2), float64] */;
  %859 = cast(meta[relay.Constant][55] /* ty=Tensor[(12, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 5), float32] */;
  %860 = acosh(%859) /* ty=Tensor[(12, 4, 5), float32] */;
  %861 = cast(meta[relay.Constant][55] /* ty=Tensor[(12, 4, 5), float32] */, dtype="float64") /* ty=Tensor[(12, 4, 5), float64] */;
  %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%860, dtype="float64") /* ty=Tensor[(12, 4, 5), float64] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %865 = %853.2;
  %866 = asin(%858) /* ty=Tensor[(5, 16, 2), float64] */;
  %867 = floor_divide(%863, %864) /* ty=Tensor[(12, 4, 5), float64] */;
  (%865, %var_8691, %866, %867)
}

def @func_3412(%var_3404: Tensor[(8, 11, 15), float64]) -> Tensor[(8, 11, 15), float64] {
  %868 = cast(%var_3404, dtype="float64") /* ty=Tensor[(8, 11, 15), float64] */;
  acosh(%868) /* ty=Tensor[(8, 11, 15), float64] */
}

def @func_9275() -> Tensor[(4, 3, 12), float64] {
  %869 = @func_8032() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %869.0
}

def @func_9210() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64]) {
  %870 = @func_2485() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %871 = %870.0;
  %872 = @func_5143() /* ty=Tensor[(4, 3, 12), float64] */;
  (%871, %872)
}

def @func_3228() -> (Tensor[(4, 3, 12), float32],) {
  %873 = @func_2277() /* ty=Tensor[(4, 3, 12), float32] */;
  (%873,)
}

def @func_6908() -> (Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), float32], Tensor[(4, 3, 12), float32], Tensor[(960), bool]) {
  %874 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %875 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 13), float32] */;
  %876 = atan(%875) /* ty=Tensor[(3, 12, 13), float32] */;
  %877 = cast(%876, dtype="float32") /* ty=Tensor[(3, 12, 13), float32] */;
  %878 = @func_6260() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */;
  %879 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %880 = %874.3;
  %881 = tan(%877) /* ty=Tensor[(3, 12, 13), float32] */;
  %882 = %878.1;
  %883 = %879.2;
  (%880, %881, %882, %883)
}

def @func_7898(%var_7889: Tensor[(462), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(33, 1), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) {
  %884 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %885 = @func_6235() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %886 = cast(meta[relay.Constant][57] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %887 = cast(%var_7889, dtype="float64") /* ty=Tensor[(462), float64] */;
  %888 = reshape(%886, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %889 = reshape(%887, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %890 = @func_2742(%888, %889) /* ty=(Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) */;
  %891 = %884.0;
  %892 = cast(%891, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %893 = cast(meta[relay.Constant][58] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %894 = reshape(%892, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float64] */;
  %895 = reshape(%893, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %896 = @func_3902(%894, %895) /* ty=(Tensor[(4, 3, 12), uint8], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) */;
  %897 = %885.0;
  %898 = %890.2;
  %899 = %896.1;
  (%891, %897, %898, meta[relay.Constant][57] /* ty=Tensor[(33), float64] */, %var_7889, %899, meta[relay.Constant][58] /* ty=Tensor[(112), float64] */)
}

def @func_2277() -> Tensor[(4, 3, 12), float32] {
  %900 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %900.0
}

def @func_5420(%var_5415: int16) -> Tensor[(11, 10, 6), int16] {
  %901 = cast(%var_5415, dtype="int16") /* ty=int16 */;
  %902 = cast(meta[relay.Constant][59] /* ty=Tensor[(11, 10, 6), int16] */, dtype="int16") /* ty=Tensor[(11, 10, 6), int16] */;
  logical_xor(%901, %902) /* ty=Tensor[(11, 10, 6), int16] */
}

def @func_8952() -> (Tensor[(4, 3, 12), float32],) {
  %903 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
  (%903,)
}

def @func_3484() -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(56, 2), float64], Tensor[(60, 16), uint8]) {
  %904 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %905 = %904.0;
  %906 = cast(%905, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %907 = @func_2766() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(11, 3, 14), float64]) */;
  %908 = cast(meta[relay.Constant][60] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %909 = cast(meta[relay.Constant][61] /* ty=Tensor[(56, 2), float64] */, dtype="float64") /* ty=Tensor[(56, 2), float64] */;
  %910 = cast(meta[relay.Constant][62] /* ty=Tensor[(60, 16), uint8] */, dtype="uint8") /* ty=Tensor[(60, 16), uint8] */;
  %911 = reshape(%908, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
  %912 = reshape(%909, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
  %913 = reshape(%910, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %914 = @func_98(%911, %912, %913) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
  %915 = rsqrt(%906) /* ty=Tensor[(4, 3, 12), float32] */;
  %916 = %907.0;
  %917 = %914.4;
  (%915, %916, %917, meta[relay.Constant][60] /* ty=Tensor[(448), float64] */, meta[relay.Constant][61] /* ty=Tensor[(56, 2), float64] */, meta[relay.Constant][62] /* ty=Tensor[(60, 16), uint8] */)
}

def @func_3740() -> (Tensor[(4, 3, 12), float64], Tensor[(1512), float64]) {
  %918 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
  %919 = @func_1313() /* ty=Tensor[(4, 3, 12), float64] */;
  %920 = %918.1;
  (%919, %920)
}

def @func_7992(%var_7972: uint8, %var_7973: Tensor[(65), uint8]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(65), uint8], Tensor[(1, 5, 13), int32]) {
  %921 = @func_3058() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %922 = cast(%var_7972, dtype="uint8") /* ty=uint8 */;
  %923 = cast(%var_7973, dtype="uint8") /* ty=Tensor[(65), uint8] */;
  %924 = reshape(%922, newshape=[]) /* ty=uint8 */;
  %925 = reshape(%923, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), uint8] */;
  %926 = @func_4029(%924, %925) /* ty=(Tensor[(1, 5, 13), uint8],) */;
  %927 = %926.0;
  %928 = cast(%var_7972, dtype="int32") /* ty=int32 */;
  %929 = cast(%927, dtype="int32") /* ty=Tensor[(1, 5, 13), int32] */;
  %930 = @func_2778() /* ty=Tensor[(4, 3, 12), float64] */;
  %931 = %921.0;
  %932 = right_shift(%928, %929) /* ty=Tensor[(1, 5, 13), int32] */;
  (%930, %931, %var_7973, %932)
}

def @func_9241() -> Tensor[(16, 3, 6), float32] {
  @func_8983() /* ty=Tensor[(16, 3, 6), float32] */
}

def @func_6585() -> (Tensor[(4, 3, 12), float64], Tensor[(1, 14, 9), int32], int32) {
  %933 = @func_5224() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %934 = cast(-1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %935 = reshape(%934, newshape=[]) /* ty=int32 */;
  %936 = @func_6368(%935) /* ty=(Tensor[(1, 14, 9), int32], Tensor[(448), float64]) */;
  %937 = %933.0;
  %938 = %936.0;
  (%937, %938, -1 /* ty=int32 */)
}

def @func_4457() -> Tensor[(4, 3, 12), float32] {
  %939 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %939.0
}

def @func_8972() -> Tensor[(4, 3, 12), float64] {
  %940 = @func_6235() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %940.0
}

def @func_5004() -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32]) {
  %941 = @func_2196() /* ty=Tensor[(4, 3, 12), float32] */;
  %942 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
  (%941, %942)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2196() -> Tensor[(4, 3, 12), float32] {
  %0 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %0.0
}

def @func_6909() -> (Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), float32], Tensor[(4, 3, 12), float32], Tensor[(960), bool]) {
  %11 = fn () -> (Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), float32], Tensor[(4, 3, 12), float32], Tensor[(960), bool]) {
    %1 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 13), float32] */;
    %3 = atan(%2) /* ty=Tensor[(3, 12, 13), float32] */;
    %4 = cast(%3, dtype="float32") /* ty=Tensor[(3, 12, 13), float32] */;
    %5 = @func_6260() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */;
    %6 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
    %7 = %1.3;
    %8 = tan(%4) /* ty=Tensor[(3, 12, 13), float32] */;
    %9 = %5.1;
    %10 = %6.2;
    (%7, %8, %9, %10)
  };
  %11() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), float32], Tensor[(4, 3, 12), float32], Tensor[(960), bool]) */
}

def @func_9160(%var_9151: Tensor[(2, 10, 7), float32]) -> (Tensor[(2, 10, 7), float32], Tensor[(7, 15, 8), float32], Tensor[(840), float32]) {
  %12 = cast(%var_9151, dtype="float32") /* ty=Tensor[(2, 10, 7), float32] */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %14 = reshape(%13, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
  %15 = @func_7065(%14) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(7, 15, 8), float32], Tensor[(2, 420), float32]) */;
  %16 = asinh(%12) /* ty=Tensor[(2, 10, 7), float32] */;
  %17 = %15.1;
  (%16, %17, meta[relay.Constant][1] /* ty=Tensor[(840), float32] */)
}

def @func_1274(%var_1272: Tensor[(5, 16, 12), bool]) -> (Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) {
  @func_1271(%var_1272) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) */
}

def @func_4971() -> (Tensor[(4, 3, 12), float64],) {
  @func_4969() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_5420(%var_5415: int16) -> Tensor[(11, 10, 6), int16] {
  %18 = cast(%var_5415, dtype="int16") /* ty=int16 */;
  %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 10, 6), int16] */, dtype="int16") /* ty=Tensor[(11, 10, 6), int16] */;
  logical_xor(%18, %19) /* ty=Tensor[(11, 10, 6), int16] */
}

def @func_8925() -> (Tensor[(448), float64], Tensor[(4, 3, 12), float32]) {
  %24 = fn () -> (Tensor[(448), float64], Tensor[(4, 3, 12), float32]) {
    %20 = @func_8554() /* ty=(Tensor[(448), float64],) */;
    %21 = @func_3228() /* ty=(Tensor[(4, 3, 12), float32],) */;
    %22 = %20.0;
    %23 = %21.0;
    (%22, %23)
  };
  %24() /* ty=(Tensor[(448), float64], Tensor[(4, 3, 12), float32]) */
}

def @func_4183() -> (Tensor[(4, 3, 12), float32],) {
  @func_4181() /* ty=(Tensor[(4, 3, 12), float32],) */
}

def @func_7995(%var_7993: uint8, %var_7994: Tensor[(65), uint8]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(65), uint8], Tensor[(1, 5, 13), int32]) {
  %37 = fn (%var_7972: uint8, %var_7973: Tensor[(65), uint8]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(65), uint8], Tensor[(1, 5, 13), int32]) {
    %25 = @func_3058() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %26 = cast(%var_7972, dtype="uint8") /* ty=uint8 */;
    %27 = cast(%var_7973, dtype="uint8") /* ty=Tensor[(65), uint8] */;
    %28 = reshape(%26, newshape=[]) /* ty=uint8 */;
    %29 = reshape(%27, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), uint8] */;
    %30 = @func_4029(%28, %29) /* ty=(Tensor[(1, 5, 13), uint8],) */;
    %31 = %30.0;
    %32 = cast(%var_7972, dtype="int32") /* ty=int32 */;
    %33 = cast(%31, dtype="int32") /* ty=Tensor[(1, 5, 13), int32] */;
    %34 = @func_2778() /* ty=Tensor[(4, 3, 12), float64] */;
    %35 = %25.0;
    %36 = right_shift(%32, %33) /* ty=Tensor[(1, 5, 13), int32] */;
    (%34, %35, %var_7973, %36)
  };
  %37(%var_7993, %var_7994) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(65), uint8], Tensor[(1, 5, 13), int32]) */
}

def @func_2279() -> Tensor[(4, 3, 12), float32] {
  @func_2277() /* ty=Tensor[(4, 3, 12), float32] */
}

def @main(%var_9596: Tensor[(2, 1, 7), float32], %var_9597: Tensor[(2, 13, 7), float32]) -> (Tensor[(2, 13, 7), float32], Tensor[(2, 13, 7), float32], Tensor[(2, 13, 7), float64]) {
  %38 = cast(%var_9596, dtype="float32") /* ty=Tensor[(2, 1, 7), float32] */;
  %39 = cast(%var_9597, dtype="float32") /* ty=Tensor[(2, 13, 7), float32] */;
  %40 = cast(%var_9597, dtype="float32") /* ty=Tensor[(2, 13, 7), float32] */;
  %41 = cast(%var_9597, dtype="float64") /* ty=Tensor[(2, 13, 7), float64] */;
  %42 = floor_mod(%38, %39) /* ty=Tensor[(2, 13, 7), float32] */;
  %43 = sigmoid(%40) /* ty=Tensor[(2, 13, 7), float32] */;
  %44 = atanh(%41) /* ty=Tensor[(2, 13, 7), float64] */;
  (%42, %43, %44)
}

def @func_5120(%var_5119: Tensor[(2640), float32]) -> (Tensor[(4, 3, 12), float32], Tensor[(8, 11, 15), float64], Tensor[(2640), float32], Tensor[(448), float64]) {
  %57 = fn (%var_5083: Tensor[(2640), float32]) -> (Tensor[(4, 3, 12), float32], Tensor[(8, 11, 15), float64], Tensor[(2640), float32], Tensor[(448), float64]) {
    %45 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %46 = %45.0;
    %47 = cast(%46, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
    %48 = cast(%var_5083, dtype="float32") /* ty=Tensor[(2640), float32] */;
    %49 = cosh(%47) /* ty=Tensor[(4, 3, 12), float32] */;
    %50 = cast(%49, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
    %51 = reshape(%48, newshape=[11, 16, 15]) /* ty=Tensor[(11, 16, 15), float32] */;
    %52 = reshape(%50, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float32] */;
    %53 = @func_3837(%51, %52) /* ty=(Tensor[(11, 16, 15), float32], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(4, 3, 12), uint16], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(4, 3, 12), float64]) */;
    %54 = @func_3975() /* ty=(Tensor[(448), float64],) */;
    %55 = %53.4;
    %56 = %54.0;
    (%49, %55, %var_5083, %56)
  };
  %57(%var_5119) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(8, 11, 15), float64], Tensor[(2640), float32], Tensor[(448), float64]) */
}

def @func_3660() -> (Tensor[(16, 3, 6), float32],) {
  %60 = fn () -> (Tensor[(16, 3, 6), float32],) {
    %58 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 6), float32] */;
    %59 = erf(%58) /* ty=Tensor[(16, 3, 6), float32] */;
    (%59,)
  };
  %60() /* ty=(Tensor[(16, 3, 6), float32],) */
}

def @func_7696(%var_7689: Tensor[(33), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(77, 6), float64], Tensor[(33), float64], Tensor[(462), float64]) {
  %61 = cast(%var_7689, dtype="float64") /* ty=Tensor[(33), float64] */;
  %62 = cast(meta[relay.Constant][4] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %63 = reshape(%61, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %64 = reshape(%62, newshape=[77, 6]) /* ty=Tensor[(77, 6), float64] */;
  %65 = @func_4542(%63, %64) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(77, 6), float64]) */;
  %66 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  %67 = %65.4;
  (%66, %67, %var_7689, meta[relay.Constant][4] /* ty=Tensor[(462), float64] */)
}

def @func_2487() -> (Tensor[(4, 3, 12), float64],) {
  @func_2485() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_7854(%var_7852: Tensor[(13, 14, 10), uint64], %var_7853: Tensor[(13, 14, 10), uint64]) -> Tensor[(13, 14, 10), uint64] {
  %72 = fn (%var_7841: Tensor[(13, 14, 10), uint64], %var_7842: Tensor[(13, 14, 10), uint64]) -> Tensor[(13, 14, 10), uint64] {
    %68 = cast(%var_7842, dtype="uint64") /* ty=Tensor[(13, 14, 10), uint64] */;
    %69 = shape_of(%var_7841, dtype="int32") /* ty=Tensor[(3), int32] */;
    %70 = cast(%var_7841, dtype="uint64") /* ty=Tensor[(13, 14, 10), uint64] */;
    %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_or(%70, %71) /* ty=Tensor[(13, 14, 10), uint64] */
  };
  %72(%var_7852, %var_7853) /* ty=Tensor[(13, 14, 10), uint64] */
}

def @func_9338() -> (Tensor[(7, 11, 9), int32], Tensor[(4, 3, 12), float64]) {
  @func_9336() /* ty=(Tensor[(7, 11, 9), int32], Tensor[(4, 3, 12), float64]) */
}

def @func_6235() -> (Tensor[(4, 3, 12), float64],) {
  %73 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %74 = %73.0;
  (%74,)
}

def @func_800(%var_791: Tensor[(11, 3, 1), float64], %var_792: Tensor[(11, 3, 14), float64]) -> Tensor[(11, 3, 14), float64] {
  %75 = cast(%var_791, dtype="float64") /* ty=Tensor[(11, 3, 1), float64] */;
  %76 = cast(%var_792, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  mod(%75, %76) /* ty=Tensor[(11, 3, 14), float64] */
}

def @func_2767() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(11, 3, 14), float64]) {
  %87 = fn () -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(11, 3, 14), float64]) {
    %77 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %78 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %79 = @func_2485() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %80 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
    %81 = @func_2618() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64]) */;
    %82 = %77.0;
    %83 = %78.0;
    %84 = %79.0;
    %85 = %80.2;
    %86 = %81.3;
    (%82, %83, %84, %85, %86)
  };
  %87() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(11, 3, 14), float64]) */
}

def @func_8984() -> Tensor[(16, 3, 6), float32] {
  %89 = fn () -> Tensor[(16, 3, 6), float32] {
    %88 = @func_3659() /* ty=(Tensor[(16, 3, 6), float32],) */;
    %88.0
  };
  %89() /* ty=Tensor[(16, 3, 6), float32] */
}

def @func_146(%var_144: Tensor[(14, 12, 11), float32], %var_145: Tensor[(448), float64]) -> (Tensor[(14, 1, 11), float64], Tensor[(14, 12, 11), float64], Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8]) {
  %105 = fn (%var_134: Tensor[(14, 12, 11), float32], %var_139: Tensor[(448), float64]) -> (Tensor[(14, 1, 11), float64], Tensor[(14, 12, 11), float64], Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8]) {
    %90 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 1, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 11), float32] */;
    %91 = atanh(%90) /* ty=Tensor[(14, 1, 11), float32] */;
    %92 = cast(%91, dtype="float64") /* ty=Tensor[(14, 1, 11), float64] */;
    %93 = cast(%91, dtype="float64") /* ty=Tensor[(14, 1, 11), float64] */;
    %94 = cast(%var_134, dtype="float64") /* ty=Tensor[(14, 12, 11), float64] */;
    %95 = cast(%var_139, dtype="float64") /* ty=Tensor[(448), float64] */;
    %96 = cast(meta[relay.Constant][6] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %97 = cast(meta[relay.Constant][7] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %98 = reshape(%95, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
    %99 = reshape(%96, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
    %100 = reshape(%97, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
    %101 = @func_98(%98, %99, %100) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
    %102 = acosh(%92) /* ty=Tensor[(14, 1, 11), float64] */;
    %103 = divide(%93, %94) /* ty=Tensor[(14, 12, 11), float64] */;
    %104 = %101.1;
    (%102, %103, %104, %var_139, meta[relay.Constant][6] /* ty=Tensor[(112), float64] */, meta[relay.Constant][7] /* ty=Tensor[(960), uint8] */)
  };
  %105(%var_144, %var_145) /* ty=(Tensor[(14, 1, 11), float64], Tensor[(14, 12, 11), float64], Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8]) */
}

def @func_5518() -> (Tensor[(4, 3, 12), uint64],) {
  %112 = fn () -> (Tensor[(4, 3, 12), uint64],) {
    %106 = @func_2277() /* ty=Tensor[(4, 3, 12), float32] */;
    %107 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 3, 12), float32] */, dtype="uint64") /* ty=Tensor[(4, 3, 12), uint64] */;
    %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
    %109 = cast(%106, dtype="uint64") /* ty=Tensor[(4, 3, 12), uint64] */;
    %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %111 = left_shift(%109, %110) /* ty=Tensor[(4, 3, 12), uint64] */;
    (%111,)
  };
  %112() /* ty=(Tensor[(4, 3, 12), uint64],) */
}

def @func_5293(%var_5291: Tensor[(1, 11, 13), float32], %var_5292: Tensor[(1, 11, 13), float32]) -> Tensor[(?, 11, 13), bool] {
  %117 = fn (%var_5269: Tensor[(1, 11, 13), float32], %var_5270: Tensor[(1, 11, 13), float32]) -> Tensor[(?, 11, 13), bool] {
    %113 = cast(%var_5270, dtype="bool") /* ty=Tensor[(1, 11, 13), bool] */;
    %114 = shape_of(%var_5269, dtype="int32") /* ty=Tensor[(3), int32] */;
    %115 = cast(%var_5269, dtype="bool") /* ty=Tensor[(1, 11, 13), bool] */;
    %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%115, %116) /* ty=Tensor[(?, 11, 13), bool] */
  };
  %117(%var_5291, %var_5292) /* ty=Tensor[(?, 11, 13), bool] */
}

def @func_3510(%var_3508: Tensor[(14, 4, 15), float32], %var_3509: Tensor[(160), bool]) -> (Tensor[(14, 4, 15), float32], Tensor[(5, 16, 2), bool], Tensor[(160), bool]) {
  @func_3506(%var_3508, %var_3509) /* ty=(Tensor[(14, 4, 15), float32], Tensor[(5, 16, 2), bool], Tensor[(160), bool]) */
}

def @func_2745(%var_2743: Tensor[(33, 1), float64], %var_2744: Tensor[(462), float64]) -> (Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) {
  %125 = fn (%var_2738: Tensor[(33, 1), float64], %var_2739: Tensor[(462), float64]) -> (Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) {
    %118 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
    %119 = cast(%var_2738, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
    %120 = cast(%var_2739, dtype="float64") /* ty=Tensor[(462), float64] */;
    %121 = reshape(%119, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
    %122 = reshape(%120, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
    %123 = %118.0;
    %124 = @func_800(%121, %122) /* ty=Tensor[(11, 3, 14), float64] */;
    (%123, %124, %var_2738, %var_2739)
  };
  %125(%var_2743, %var_2744) /* ty=(Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) */
}

def @func_6959(%var_6958: Tensor[(6, 10, 9), float64]) -> Tensor[(6, 10, 9), float64] {
  %127 = fn (%var_6926: Tensor[(6, 10, 9), float64]) -> Tensor[(6, 10, 9), float64] {
    %126 = cast(%var_6926, dtype="float64") /* ty=Tensor[(6, 10, 9), float64] */;
    atan(%126) /* ty=Tensor[(6, 10, 9), float64] */
  };
  %127(%var_6958) /* ty=Tensor[(6, 10, 9), float64] */
}

def @func_5145() -> Tensor[(4, 3, 12), float64] {
  @func_5143() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_2779() -> Tensor[(4, 3, 12), float64] {
  %129 = fn () -> Tensor[(4, 3, 12), float64] {
    %128 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %128.0
  };
  %129() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_4294(%var_4292: Tensor[(33, 1), float64], %var_4293: Tensor[(28, 4), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(33), float64], Tensor[(33, 1), float64], Tensor[(112), float64], Tensor[(28, 4), float64]) {
  %140 = fn (%var_4286: Tensor[(33, 1), float64], %var_4289: Tensor[(28, 4), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(33), float64], Tensor[(33, 1), float64], Tensor[(112), float64], Tensor[(28, 4), float64]) {
    %130 = @func_2921() /* ty=(Tensor[(4, 3, 12), float32],) */;
    %131 = cast(%var_4286, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
    %132 = reshape(%131, newshape=[33]) /* ty=Tensor[(33), float64] */;
    %133 = @func_2861(%132) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */;
    %134 = cast(%var_4289, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
    %135 = reshape(%134, newshape=[112]) /* ty=Tensor[(112), float64] */;
    %136 = @func_3586(%135) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(462), float64], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) */;
    %137 = %130.0;
    %138 = %133.2;
    %139 = %136.3;
    (%137, %138, %var_4286, %139, %var_4289)
  };
  %140(%var_4292, %var_4293) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(33), float64], Tensor[(33, 1), float64], Tensor[(112), float64], Tensor[(28, 4), float64]) */
}

def @func_4620() -> Tensor[(4, 3, 12), float32] {
  %141 = fn () -> Tensor[(4, 3, 12), float32] {
    @func_2277() /* ty=Tensor[(4, 3, 12), float32] */
  };
  %141() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_6279() -> (Tensor[(4, 3, 12), float64], Tensor[(1320), float64], Tensor[(2640), float32]) {
  @func_6277() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(1320), float64], Tensor[(2640), float32]) */
}

def @func_98(%var_39: Tensor[(8, 8, 7), float64], %var_75: Tensor[(2, 8, 7), float64], %var_85: Tensor[(20, 48), uint8]) -> (Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) {
  %142 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(1, 8, 7), float64] */;
  %143 = cast(%var_39, dtype="float64") /* ty=Tensor[(8, 8, 7), float64] */;
  %144 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 8, 7), float64] */, dtype="bool") /* ty=Tensor[(1, 8, 7), bool] */;
  %145 = cast(%var_75, dtype="bool") /* ty=Tensor[(2, 8, 7), bool] */;
  %146 = cast(%var_85, dtype="uint8") /* ty=Tensor[(20, 48), uint8] */;
  %147 = cast(%var_85, dtype="uint8") /* ty=Tensor[(20, 48), uint8] */;
  %148 = reshape(%146, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %149 = reshape(%147, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %150 = @func_11(%148, %149) /* ty=(Tensor[(5, 16, 12), bool],) */;
  %151 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(1, 8, 7), float64] */;
  %152 = asinh(%151) /* ty=Tensor[(1, 8, 7), float64] */;
  %153 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 8, 7), float64] */, dtype="int8") /* ty=Tensor[(1, 8, 7), int8] */;
  %154 = shape_of(%152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%152, dtype="int8") /* ty=Tensor[(1, 8, 7), int8] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %157 = multiply(%155, %156) /* ty=Tensor[(?, 8, 7), int8] */;
  %158 = cast(%152, dtype="uint16") /* ty=Tensor[(1, 8, 7), uint16] */;
  %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(%157, dtype="uint16") /* ty=Tensor[(?, 8, 7), uint16] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %162 = subtract(%160, %161) /* ty=Tensor[(?, 8, 7), uint16] */;
  %163 = cast(%162, dtype="float32") /* ty=Tensor[(?, 8, 7), float32] */;
  %164 = maximum(%142, %143) /* ty=Tensor[(8, 8, 7), float64] */;
  %165 = logical_and(%144, %145) /* ty=Tensor[(2, 8, 7), bool] */;
  %166 = %150.0;
  %167 = acosh(%163) /* ty=Tensor[(?, 8, 7), float32] */;
  (%164, %165, %166, %var_85, %167)
}

def @func_5609() -> Tensor[(4, 3, 12), float32] {
  @func_5607() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_9241() -> Tensor[(16, 3, 6), float32] {
  @func_8983() /* ty=Tensor[(16, 3, 6), float32] */
}

def @func_1970(%var_1805: Tensor[(240, 2), bool], %var_1814: Tensor[(448), float64], %var_1815: Tensor[(112), float64]) -> (Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8], Tensor[(1512), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(14, 9, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(240, 2), bool]) {
  %168 = cast(%var_1814, dtype="float64") /* ty=Tensor[(448), float64] */;
  %169 = cast(%var_1815, dtype="float64") /* ty=Tensor[(112), float64] */;
  %170 = cast(meta[relay.Constant][10] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %171 = reshape(%168, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
  %172 = reshape(%169, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
  %173 = reshape(%170, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %174 = @func_98(%171, %172, %173) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
  %175 = cast(%var_1805, dtype="uint32") /* ty=Tensor[(240, 2), uint32] */;
  %176 = reshape(%175, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), uint32] */;
  %177 = @func_977(%176) /* ty=(Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) */;
  %178 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %179 = %178.0;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %181 = reshape(%180, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float64] */;
  %182 = @func_1577(%181) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), bool], Tensor[(4, 3, 12), float64]) */;
  %183 = cast(meta[relay.Constant][10] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %184 = cast(meta[relay.Constant][10] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %185 = reshape(%183, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %186 = reshape(%184, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %187 = @func_11(%185, %186) /* ty=(Tensor[(5, 16, 12), bool],) */;
  %188 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %189 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %190 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %191 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %192 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %193 = %177.2;
  %194 = cast(%193, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %195 = reshape(%194, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %196 = @func_922(%195) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) */;
  %197 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %198 = %197.1;
  %199 = cast(%198, dtype="float64") /* ty=Tensor[(240, 2), float64] */;
  %200 = log10(%199) /* ty=Tensor[(240, 2), float64] */;
  %201 = cast(%var_1805, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %202 = shape_of(%198, dtype="int32") /* ty=Tensor[(2), int32] */;
  %203 = cast(%198, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %205 = greater(%203, %204) /* ty=Tensor[(240, 2), bool] */;
  %206 = cast(%205, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %207 = shape_of(%200, dtype="int32") /* ty=Tensor[(2), int32] */;
  %208 = cast(%200, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %210 = cast(%var_1814, dtype="float64") /* ty=Tensor[(448), float64] */;
  %211 = cast(%var_1815, dtype="float64") /* ty=Tensor[(112), float64] */;
  %212 = cast(meta[relay.Constant][10] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %213 = reshape(%210, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
  %214 = reshape(%211, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
  %215 = reshape(%212, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %216 = @func_98(%213, %214, %215) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
  %217 = cast(%200, dtype="float64") /* ty=Tensor[(240, 2), float64] */;
  %218 = acos(%217) /* ty=Tensor[(240, 2), float64] */;
  %219 = cast(%198, dtype="uint32") /* ty=Tensor[(240, 2), uint32] */;
  %220 = reshape(%219, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), uint32] */;
  %221 = @func_977(%220) /* ty=(Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) */;
  %222 = %221.0;
  %223 = cast(%222, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
  %224 = shape_of(%218, dtype="int32") /* ty=Tensor[(2), int32] */;
  %225 = cast(%218, dtype="float32") /* ty=Tensor[(240, 2), float32] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %227 = add(%225, %226) /* ty=Tensor[(240, 2), float32] */;
  %228 = cast(meta[relay.Constant][11] /* ty=Tensor[(240, 2), float32] */, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %229 = shape_of(%227, dtype="int32") /* ty=Tensor[(2), int32] */;
  %230 = cast(%227, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %232 = %174.1;
  %233 = %182.0;
  %234 = %187.0;
  %235 = %188.0;
  %236 = %189.0;
  %237 = %190.0;
  %238 = %191.0;
  %239 = %192.2;
  %240 = %196.0;
  %241 = logical_and(%208, %209) /* ty=Tensor[(240, 2), bool] */;
  %242 = %216.2;
  %243 = not_equal(%230, %231) /* ty=Tensor[(240, 2), bool] */;
  (%232, %var_1814, %var_1815, meta[relay.Constant][10] /* ty=Tensor[(960), uint8] */, %193, %179, %233, %234, %235, %236, %237, %238, %239, %240, %241, %242, %243)
}

def @func_6262() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
  @func_6260() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */
}

def @func_3058() -> (Tensor[(4, 3, 12), float64],) {
  %244 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %245 = %244.0;
  (%245,)
}

def @func_7787() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(1320), float64], Tensor[(2640), float32]) {
  %257 = fn () -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(1320), float64], Tensor[(2640), float32]) {
    %246 = @func_5239() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %247 = cast(meta[relay.Constant][12] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
    %248 = @func_5360() /* ty=Tensor[(4, 3, 12), float32] */;
    %249 = cast(%248, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
    %250 = reshape(%247, newshape=[11, 16, 15]) /* ty=Tensor[(11, 16, 15), float32] */;
    %251 = reshape(%249, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float32] */;
    %252 = @func_3837(%250, %251) /* ty=(Tensor[(11, 16, 15), float32], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(4, 3, 12), uint16], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(4, 3, 12), float64]) */;
    %253 = %246.0;
    %254 = @func_6982() /* ty=Tensor[(4, 3, 12), float64] */;
    %255 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
    %256 = %252.5;
    (%253, %248, %254, %255, %256, meta[relay.Constant][12] /* ty=Tensor[(2640), float32] */)
  };
  %257() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(1320), float64], Tensor[(2640), float32]) */
}

def @func_3486() -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(56, 2), float64], Tensor[(60, 16), uint8]) {
  @func_3484() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(56, 2), float64], Tensor[(60, 16), uint8]) */
}

def @func_4546(%var_4544: Tensor[(33, 1), float64], %var_4545: Tensor[(77, 6), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(77, 6), float64]) {
  @func_4542(%var_4544, %var_4545) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(77, 6), float64]) */
}

def @func_6982() -> Tensor[(4, 3, 12), float64] {
  %258 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %258.0
}

def @func_2619() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64]) {
  %276 = fn () -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64]) {
    %259 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %260 = @func_2462() /* ty=Tensor[(4, 3, 12), float64] */;
    %261 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %262 = %261.0;
    %263 = cast(%262, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
    %264 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
    %265 = cast(%260, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
    %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %267 = cast(%262, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
    %268 = cast(meta[relay.Constant][13] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %269 = cast(meta[relay.Constant][14] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
    %270 = reshape(%268, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
    %271 = reshape(%269, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
    %272 = %259.0;
    %273 = mod(%265, %266) /* ty=Tensor[(4, 3, 12), float32] */;
    %274 = sqrt(%267) /* ty=Tensor[(4, 3, 12), float64] */;
    %275 = @func_800(%270, %271) /* ty=Tensor[(11, 3, 14), float64] */;
    (%272, %273, %274, %275, meta[relay.Constant][13] /* ty=Tensor[(33), float64] */, meta[relay.Constant][14] /* ty=Tensor[(462), float64] */)
  };
  %276() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64]) */
}

def @func_2036() -> (Tensor[(4, 3, 12), float64],) {
  %279 = fn () -> (Tensor[(4, 3, 12), float64],) {
    %277 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %278 = %277.0;
    (%278,)
  };
  %279() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_4032(%var_4030: uint8, %var_4031: Tensor[(1, 5, 13), uint8]) -> (Tensor[(1, 5, 13), uint8],) {
  %283 = fn (%var_4019: uint8, %var_4020: Tensor[(1, 5, 13), uint8]) -> (Tensor[(1, 5, 13), uint8],) {
    %280 = cast(%var_4019, dtype="uint8") /* ty=uint8 */;
    %281 = cast(%var_4020, dtype="uint8") /* ty=Tensor[(1, 5, 13), uint8] */;
    %282 = bitwise_and(%280, %281) /* ty=Tensor[(1, 5, 13), uint8] */;
    (%282,)
  };
  %283(%var_4030, %var_4031) /* ty=(Tensor[(1, 5, 13), uint8],) */
}

def @func_6327() -> Tensor[(4, 3, 12), float32] {
  %285 = fn () -> Tensor[(4, 3, 12), float32] {
    %284 = @func_4181() /* ty=(Tensor[(4, 3, 12), float32],) */;
    %284.0
  };
  %285() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_7335() -> Tensor[(448), float64] {
  @func_7333() /* ty=Tensor[(448), float64] */
}

def @func_6729() -> (Tensor[(11, 3), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(462), float64], Tensor[(462), float64]) {
  @func_6727() /* ty=(Tensor[(11, 3), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(462), float64], Tensor[(462), float64]) */
}

def @func_8352() -> Tensor[(4, 3, 12), float32] {
  %287 = fn () -> Tensor[(4, 3, 12), float32] {
    %286 = @func_7786() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(1320), float64], Tensor[(2640), float32]) */;
    %286.3
  };
  %287() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_5152() -> Tensor[(4, 3, 12), float32] {
  %288 = @func_2921() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %288.0
}

def @func_6744() -> Tensor[(4, 3, 12), float64] {
  %289 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %289.0
}

def @func_8486() -> Tensor[(448), float64] {
  @func_8484() /* ty=Tensor[(448), float64] */
}

def @func_4352() -> Tensor[(4, 3, 12), float64] {
  @func_4350() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_1795() -> (Tensor[(4, 3, 12), float32],) {
  %294 = fn () -> (Tensor[(4, 3, 12), float32],) {
    %290 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
    %291 = %290.0;
    %292 = cast(%291, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
    %293 = sin(%292) /* ty=Tensor[(4, 3, 12), float32] */;
    (%293,)
  };
  %294() /* ty=(Tensor[(4, 3, 12), float32],) */
}

def @func_7325(%var_7321: uint8, %var_7322: Tensor[(65), uint8]) -> (Tensor[(4, 3, 12), float32], Tensor[(1, 5, 13), uint8], uint8, Tensor[(65), uint8]) {
  %295 = cast(%var_7321, dtype="uint8") /* ty=uint8 */;
  %296 = cast(%var_7322, dtype="uint8") /* ty=Tensor[(65), uint8] */;
  %297 = reshape(%295, newshape=[]) /* ty=uint8 */;
  %298 = reshape(%296, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), uint8] */;
  %299 = @func_4029(%297, %298) /* ty=(Tensor[(1, 5, 13), uint8],) */;
  %300 = @func_6326() /* ty=Tensor[(4, 3, 12), float32] */;
  %301 = %299.0;
  (%300, %301, %var_7321, %var_7322)
}

def @func_5726(%var_5724: Tensor[(9, 16, 14), float64], %var_5725: Tensor[(9, 16, 14), float64]) -> (Tensor[(9, 16, 14), bool], Tensor[(8, 11, 15), float64], Tensor[(1320), float64]) {
  %312 = fn (%var_5689: Tensor[(9, 16, 14), float64], %var_5701: Tensor[(9, 16, 14), float64]) -> (Tensor[(9, 16, 14), bool], Tensor[(8, 11, 15), float64], Tensor[(1320), float64]) {
    %302 = cast(%var_5689, dtype="float64") /* ty=Tensor[(9, 16, 14), float64] */;
    %303 = asin(%302) /* ty=Tensor[(9, 16, 14), float64] */;
    %304 = cast(%var_5701, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
    %305 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
    %306 = cast(%303, dtype="bool") /* ty=Tensor[(9, 16, 14), bool] */;
    %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %308 = cast(meta[relay.Constant][15] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %309 = reshape(%308, newshape=[8, 11, 15]) /* ty=Tensor[(8, 11, 15), float64] */;
    %310 = logical_or(%306, %307) /* ty=Tensor[(9, 16, 14), bool] */;
    %311 = @func_3412(%309) /* ty=Tensor[(8, 11, 15), float64] */;
    (%310, %311, meta[relay.Constant][15] /* ty=Tensor[(1320), float64] */)
  };
  %312(%var_5724, %var_5725) /* ty=(Tensor[(9, 16, 14), bool], Tensor[(8, 11, 15), float64], Tensor[(1320), float64]) */
}

def @func_3701() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
  %313 = @func_2778() /* ty=Tensor[(4, 3, 12), float64] */;
  %314 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  (%313, %314)
}

def @func_4919(%var_4899: Tensor[(10, 6, 8), float32]) -> (Tensor[(10, 6, 8), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(960), uint8]) {
  %315 = cast(%var_4899, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %316 = @func_2485() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %317 = cast(meta[relay.Constant][16] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %318 = cast(meta[relay.Constant][16] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %319 = reshape(%317, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %320 = reshape(%318, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
  %321 = @func_11(%319, %320) /* ty=(Tensor[(5, 16, 12), bool],) */;
  %322 = sin(%315) /* ty=Tensor[(10, 6, 8), float32] */;
  %323 = %316.0;
  %324 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  %325 = %321.0;
  (%322, %323, %324, %325, meta[relay.Constant][16] /* ty=Tensor[(960), uint8] */)
}

def @func_8520(%var_8503: Tensor[(3, 12, 13), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(3, 12, 13), bool]) {
  %326 = @func_3769() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %327 = @func_8079() /* ty=(Tensor[(3, 12, 13), float64], Tensor[(4, 3, 12), float32]) */;
  %328 = %327.0;
  %329 = cast(%var_8503, dtype="bool") /* ty=Tensor[(3, 12, 13), bool] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%328, dtype="bool") /* ty=Tensor[(3, 12, 13), bool] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %333 = %326.0;
  %334 = greater_equal(%331, %332) /* ty=Tensor[(3, 12, 13), bool] */;
  (%333, %334)
}

def @func_9211() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64]) {
  %338 = fn () -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64]) {
    %335 = @func_2485() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %336 = %335.0;
    %337 = @func_5143() /* ty=Tensor[(4, 3, 12), float64] */;
    (%336, %337)
  };
  %338() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64]) */
}

def @func_5006() -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32]) {
  @func_5004() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32]) */
}

def @func_6489(%var_6488: Tensor[(7, 15, 8), float32]) -> (Tensor[(7, 15, 8), float32], Tensor[(7, 15, 8), float32]) {
  %346 = fn (%var_6468: Tensor[(7, 15, 8), float32]) -> (Tensor[(7, 15, 8), float32], Tensor[(7, 15, 8), float32]) {
    %339 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 15, 8), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 8), float32] */;
    %340 = shape_of(%var_6468, dtype="int32") /* ty=Tensor[(3), int32] */;
    %341 = cast(%var_6468, dtype="float32") /* ty=Tensor[(7, 15, 8), float32] */;
    %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %343 = cast(%var_6468, dtype="float32") /* ty=Tensor[(7, 15, 8), float32] */;
    %344 = mod(%341, %342) /* ty=Tensor[(7, 15, 8), float32] */;
    %345 = erf(%343) /* ty=Tensor[(7, 15, 8), float32] */;
    (%344, %345)
  };
  %346(%var_6488) /* ty=(Tensor[(7, 15, 8), float32], Tensor[(7, 15, 8), float32]) */
}

def @func_3144(%var_3140: Tensor[(448), float64], %var_3141: Tensor[(960), bool], %var_3142: Tensor[(1848), float32], %var_3143: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(448), float64], Tensor[(448), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(4, 3, 12), float64], Tensor[(2, 8, 7), bool], Tensor[(112), float64], Tensor[(1848), float32]) {
  %383 = fn (%var_3096: Tensor[(448), float64], %var_3101: Tensor[(960), bool], %var_3110: Tensor[(1848), float32], %var_3119: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(448), float64], Tensor[(448), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(4, 3, 12), float64], Tensor[(2, 8, 7), bool], Tensor[(112), float64], Tensor[(1848), float32]) {
    %347 = @func_2766() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(11, 3, 14), float64]) */;
    %348 = cast(meta[relay.Constant][18] /* ty=Tensor[(1848), float32] */, dtype="float32") /* ty=Tensor[(1848), float32] */;
    %349 = cast(%var_3096, dtype="float64") /* ty=Tensor[(448), float64] */;
    %350 = reshape(%348, newshape=[14, 12, 11]) /* ty=Tensor[(14, 12, 11), float32] */;
    %351 = reshape(%349, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %352 = @func_143(%350, %351) /* ty=(Tensor[(14, 1, 11), float64], Tensor[(14, 12, 11), float64], Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8]) */;
    %353 = cast(%var_3101, dtype="bool") /* ty=Tensor[(960), bool] */;
    %354 = reshape(%353, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), bool] */;
    %355 = @func_1271(%354) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) */;
    %356 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %357 = %352.3;
    %358 = cast(%357, dtype="float64") /* ty=Tensor[(448), float64] */;
    %359 = cast(%var_3119, dtype="float64") /* ty=Tensor[(112), float64] */;
    %360 = cast(%var_3101, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %361 = reshape(%358, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
    %362 = reshape(%359, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
    %363 = reshape(%360, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
    %364 = @func_98(%361, %362, %363) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
    %365 = cast(%var_3110, dtype="int32") /* ty=Tensor[(1848), int32] */;
    %366 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(1848), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %367 = cast(meta[relay.Constant][18] /* ty=Tensor[(1848), float32] */, dtype="int32") /* ty=Tensor[(1848), int32] */;
    %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?), int32] */;
    %369 = right_shift(%367, %368) /* ty=Tensor[(1848), int32] */;
    %370 = cast(%369, dtype="float64") /* ty=Tensor[(1848), float64] */;
    %371 = cos(%370) /* ty=Tensor[(1848), float64] */;
    %372 = cast(%371, dtype="float64") /* ty=Tensor[(1848), float64] */;
    %373 = tan(%372) /* ty=Tensor[(1848), float64] */;
    %374 = cast(%369, dtype="float32") /* ty=Tensor[(1848), float32] */;
    %375 = shape_of(%373, dtype="int32") /* ty=Tensor[(1), int32] */;
    %376 = cast(%373, dtype="float32") /* ty=Tensor[(1848), float32] */;
    %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?), float32] */;
    %378 = %347.1;
    %379 = %355.0;
    %380 = %356.0;
    %381 = %364.1;
    %382 = power(%376, %377) /* ty=Tensor[(1848), float32] */;
    (%378, %357, %var_3096, %379, %var_3101, %380, %381, %var_3119, %382)
  };
  %383(%var_3140, %var_3141, %var_3142, %var_3143) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(448), float64], Tensor[(448), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(4, 3, 12), float64], Tensor[(2, 8, 7), bool], Tensor[(112), float64], Tensor[(1848), float32]) */
}

def @func_4656(%var_4655: Tensor[(4, 7, 12), float32]) -> (Tensor[(4, 7, 12), float32], Tensor[(4, 7, 12), int8], Tensor[(4, 3, 12), float32]) {
  %398 = fn (%var_4621: Tensor[(4, 7, 12), float32]) -> (Tensor[(4, 7, 12), float32], Tensor[(4, 7, 12), int8], Tensor[(4, 3, 12), float32]) {
    %384 = cast(%var_4621, dtype="float32") /* ty=Tensor[(4, 7, 12), float32] */;
    %385 = sqrt(%384) /* ty=Tensor[(4, 7, 12), float32] */;
    %386 = cast(%var_4621, dtype="float32") /* ty=Tensor[(4, 7, 12), float32] */;
    %387 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
    %388 = cast(%385, dtype="float32") /* ty=Tensor[(4, 7, 12), float32] */;
    %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %390 = cast(%var_4621, dtype="int8") /* ty=Tensor[(4, 7, 12), int8] */;
    %391 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
    %392 = cast(%385, dtype="int8") /* ty=Tensor[(4, 7, 12), int8] */;
    %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %394 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
    %395 = mod(%388, %389) /* ty=Tensor[(4, 7, 12), float32] */;
    %396 = subtract(%392, %393) /* ty=Tensor[(4, 7, 12), int8] */;
    %397 = %394.2;
    (%395, %396, %397)
  };
  %398(%var_4655) /* ty=(Tensor[(4, 7, 12), float32], Tensor[(4, 7, 12), int8], Tensor[(4, 3, 12), float32]) */
}

def @func_2485() -> (Tensor[(4, 3, 12), float64],) {
  %399 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %400 = %399.3;
  (%400,)
}

def @func_5331(%var_5324: Tensor[(1, 6, 4), float64]) -> Tensor[(1, 6, 4), float64] {
  %401 = cast(%var_5324, dtype="float64") /* ty=Tensor[(1, 6, 4), float64] */;
  acosh(%401) /* ty=Tensor[(1, 6, 4), float64] */
}

def @func_4318(%var_4317: Tensor[(10, 15, 12), float32]) -> Tensor[(10, 15, 12), float32] {
  %403 = fn (%var_4312: Tensor[(10, 15, 12), float32]) -> Tensor[(10, 15, 12), float32] {
    %402 = cast(%var_4312, dtype="float32") /* ty=Tensor[(10, 15, 12), float32] */;
    cos(%402) /* ty=Tensor[(10, 15, 12), float32] */
  };
  %403(%var_4317) /* ty=Tensor[(10, 15, 12), float32] */
}

def @func_3914() -> Tensor[(4, 3, 12), float64] {
  @func_3912() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_3586(%var_3584: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(462), float64], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) {
  %404 = @func_2991() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64]) */;
  %405 = cast(%var_3584, dtype="float64") /* ty=Tensor[(112), float64] */;
  %406 = reshape(%405, newshape=[1, 112]) /* ty=Tensor[(1, 112), float64] */;
  %407 = @func_2222(%406) /* ty=(Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(2, 8, 7), bool], Tensor[(4, 3, 12), float32]) */;
  %408 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
  %409 = %404.1;
  %410 = %407.5;
  (%408, %409, %410, %var_3584)
}

def @func_6587() -> (Tensor[(4, 3, 12), float64], Tensor[(1, 14, 9), int32], int32) {
  @func_6585() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(1, 14, 9), int32], int32) */
}

def @func_8445(%var_8444: Tensor[(6, 5, 5), float64]) -> (Tensor[(6, 5, 5), float64], Tensor[(60, 16), uint8]) {
  %415 = fn (%var_8409: Tensor[(6, 5, 5), float64]) -> (Tensor[(6, 5, 5), float64], Tensor[(60, 16), uint8]) {
    %411 = cast(%var_8409, dtype="float64") /* ty=Tensor[(6, 5, 5), float64] */;
    %412 = @func_3484() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(56, 2), float64], Tensor[(60, 16), uint8]) */;
    %413 = erf(%411) /* ty=Tensor[(6, 5, 5), float64] */;
    %414 = %412.5;
    (%413, %414)
  };
  %415(%var_8444) /* ty=(Tensor[(6, 5, 5), float64], Tensor[(60, 16), uint8]) */
}

def @func_4882(%var_4881: Tensor[(240, 2), bool]) -> Tensor[(240, 2), int8] {
  %422 = fn (%var_4863: Tensor[(240, 2), bool]) -> Tensor[(240, 2), int8] {
    %416 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
    %417 = %416.1;
    %418 = cast(%var_4863, dtype="int8") /* ty=Tensor[(240, 2), int8] */;
    %419 = shape_of(%417, dtype="int32") /* ty=Tensor[(2), int32] */;
    %420 = cast(%417, dtype="int8") /* ty=Tensor[(240, 2), int8] */;
    %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    subtract(%420, %421) /* ty=Tensor[(240, 2), int8] */
  };
  %422(%var_4881) /* ty=Tensor[(240, 2), int8] */
}

def @func_2806() -> Tensor[(4, 3, 12), float32] {
  %423 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %424 = %423.0;
  %425 = cast(%424, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  exp(%425) /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_7386() -> Tensor[(4, 3, 12), float64] {
  @func_7384() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_4371() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(14, 4, 15), float32], Tensor[(4, 432), float32]) {
  @func_4369() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(14, 4, 15), float32], Tensor[(4, 432), float32]) */
}

def @func_8953() -> (Tensor[(4, 3, 12), float32],) {
  %427 = fn () -> (Tensor[(4, 3, 12), float32],) {
    %426 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
    (%426,)
  };
  %427() /* ty=(Tensor[(4, 3, 12), float32],) */
}

def @func_9479(%var_9477: Tensor[(8, 10, 8), int8], %var_9478: Tensor[(8, 10, 8), int8]) -> (Tensor[(8, 10, 8), bool], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(8, 10, 8), float32]) {
  @func_9475(%var_9477, %var_9478) /* ty=(Tensor[(8, 10, 8), bool], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(8, 10, 8), float32]) */
}

def @func_8554() -> (Tensor[(448), float64],) {
  %428 = @func_5180() /* ty=Tensor[(448), float64] */;
  (%428,)
}

def @func_2198() -> Tensor[(4, 3, 12), float32] {
  @func_2196() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_2277() -> Tensor[(4, 3, 12), float32] {
  %429 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %429.0
}

def @func_2463() -> Tensor[(4, 3, 12), float64] {
  %430 = fn () -> Tensor[(4, 3, 12), float64] {
    @func_1313() /* ty=Tensor[(4, 3, 12), float64] */
  };
  %430() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_3484() -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(56, 2), float64], Tensor[(60, 16), uint8]) {
  %431 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %432 = %431.0;
  %433 = cast(%432, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %434 = @func_2766() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(11, 3, 14), float64]) */;
  %435 = cast(meta[relay.Constant][19] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %436 = cast(meta[relay.Constant][20] /* ty=Tensor[(56, 2), float64] */, dtype="float64") /* ty=Tensor[(56, 2), float64] */;
  %437 = cast(meta[relay.Constant][21] /* ty=Tensor[(60, 16), uint8] */, dtype="uint8") /* ty=Tensor[(60, 16), uint8] */;
  %438 = reshape(%435, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
  %439 = reshape(%436, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
  %440 = reshape(%437, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %441 = @func_98(%438, %439, %440) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
  %442 = rsqrt(%433) /* ty=Tensor[(4, 3, 12), float32] */;
  %443 = %434.0;
  %444 = %441.4;
  (%442, %443, %444, meta[relay.Constant][19] /* ty=Tensor[(448), float64] */, meta[relay.Constant][20] /* ty=Tensor[(56, 2), float64] */, meta[relay.Constant][21] /* ty=Tensor[(60, 16), uint8] */)
}

def @func_9093(%var_9092: Tensor[(16, 3, 6), float32]) -> (Tensor[(4, 3, 12), float64], Tensor[(14, 4, 15), float32], Tensor[(4, 3, 12), float32], Tensor[(16, 3, 6), float32]) {
  %456 = fn (%var_9072: Tensor[(16, 3, 6), float32]) -> (Tensor[(4, 3, 12), float64], Tensor[(14, 4, 15), float32], Tensor[(4, 3, 12), float32], Tensor[(16, 3, 6), float32]) {
    %445 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %446 = @func_4369() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(14, 4, 15), float32], Tensor[(4, 432), float32]) */;
    %447 = @func_8983() /* ty=Tensor[(16, 3, 6), float32] */;
    %448 = cast(%var_9072, dtype="float32") /* ty=Tensor[(16, 3, 6), float32] */;
    %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %450 = cast(%447, dtype="float32") /* ty=Tensor[(16, 3, 6), float32] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %452 = %445.0;
    %453 = %446.2;
    %454 = @func_5360() /* ty=Tensor[(4, 3, 12), float32] */;
    %455 = floor_divide(%450, %451) /* ty=Tensor[(16, 3, 6), float32] */;
    (%452, %453, %454, %455)
  };
  %456(%var_9092) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(14, 4, 15), float32], Tensor[(4, 3, 12), float32], Tensor[(16, 3, 6), float32]) */
}

def @func_6277() -> (Tensor[(4, 3, 12), float64], Tensor[(1320), float64], Tensor[(2640), float32]) {
  %457 = cast(meta[relay.Constant][22] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %458 = @func_4350() /* ty=Tensor[(4, 3, 12), float64] */;
  %459 = cast(%458, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %460 = reshape(%457, newshape=[11, 16, 15]) /* ty=Tensor[(11, 16, 15), float32] */;
  %461 = reshape(%459, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float32] */;
  %462 = @func_3837(%460, %461) /* ty=(Tensor[(11, 16, 15), float32], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(4, 3, 12), uint16], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(4, 3, 12), float64]) */;
  %463 = %462.5;
  (%458, %463, meta[relay.Constant][22] /* ty=Tensor[(2640), float32] */)
}

def @func_2374() -> (Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) {
  %464 = cast(meta[relay.Constant][23] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %465 = reshape(%464, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %466 = @func_922(%465) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) */;
  %467 = @func_2277() /* ty=Tensor[(4, 3, 12), float32] */;
  %468 = cast(%467, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
  %469 = %466.1;
  %470 = acosh(%468) /* ty=Tensor[(4, 3, 12), float32] */;
  (%469, meta[relay.Constant][23] /* ty=Tensor[(1512), float64] */, %470)
}

def @func_6237() -> (Tensor[(4, 3, 12), float64],) {
  @func_6235() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_6746() -> Tensor[(4, 3, 12), float64] {
  @func_6744() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_7384() -> Tensor[(4, 3, 12), float64] {
  %471 = @func_5224() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %471.0
}

def @func_7427() -> Tensor[(4, 3, 12), float64] {
  %473 = fn () -> Tensor[(4, 3, 12), float64] {
    %472 = @func_3216() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %472.0
  };
  %473() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_9019() -> Tensor[(4, 3, 12), float64] {
  @func_9017() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_8119(%var_8117: int16, %var_8118: Tensor[(13, 15, 3), int16]) -> (Tensor[(13, 15, 3), float64], Tensor[(13, 15, 3), uint8]) {
  %483 = fn (%var_8083: int16, %var_8084: Tensor[(13, 15, 3), int16]) -> (Tensor[(13, 15, 3), float64], Tensor[(13, 15, 3), uint8]) {
    %474 = cast(%var_8083, dtype="bool") /* ty=bool */;
    %475 = cast(%var_8084, dtype="bool") /* ty=Tensor[(13, 15, 3), bool] */;
    %476 = equal(%474, %475) /* ty=Tensor[(13, 15, 3), bool] */;
    %477 = cast(%var_8083, dtype="float64") /* ty=float64 */;
    %478 = cast(%476, dtype="float64") /* ty=Tensor[(13, 15, 3), float64] */;
    %479 = cast(%var_8084, dtype="uint8") /* ty=Tensor[(13, 15, 3), uint8] */;
    %480 = cast(%var_8083, dtype="uint8") /* ty=uint8 */;
    %481 = power(%477, %478) /* ty=Tensor[(13, 15, 3), float64] */;
    %482 = multiply(%479, %480) /* ty=Tensor[(13, 15, 3), uint8] */;
    (%481, %482)
  };
  %483(%var_8117, %var_8118) /* ty=(Tensor[(13, 15, 3), float64], Tensor[(13, 15, 3), uint8]) */
}

def @func_5154() -> Tensor[(4, 3, 12), float32] {
  @func_5152() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_1452() -> (Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) {
  @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */
}

def @func_7124() -> Tensor[(1512), float64] {
  %485 = fn () -> Tensor[(1512), float64] {
    %484 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
    %484.1
  };
  %485() /* ty=Tensor[(1512), float64] */
}

def @func_5182() -> Tensor[(448), float64] {
  @func_5180() /* ty=Tensor[(448), float64] */
}

def @func_4369() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(14, 4, 15), float32], Tensor[(4, 432), float32]) {
  %486 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %487 = @func_3216() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %488 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 432), float32] */, dtype="float32") /* ty=Tensor[(4, 432), float32] */;
  %489 = reshape(%488, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %490 = @func_3542(%489) /* ty=(Tensor[(14, 4, 15), float32], Tensor[(2, 420), float32], Tensor[(160), bool], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64], Tensor[(12, 16, 9), float32]) */;
  %491 = %486.0;
  %492 = %487.0;
  %493 = %490.0;
  (%491, %492, %493, meta[relay.Constant][24] /* ty=Tensor[(4, 432), float32] */)
}

def @func_15(%var_13: Tensor[(5, 16, 12), uint8], %var_14: Tensor[(5, 16, 12), uint8]) -> (Tensor[(5, 16, 12), bool],) {
  @func_11(%var_13, %var_14) /* ty=(Tensor[(5, 16, 12), bool],) */
}

def @func_9475(%var_9438: Tensor[(8, 10, 8), int8], %var_9439: Tensor[(8, 10, 8), int8]) -> (Tensor[(8, 10, 8), bool], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(8, 10, 8), float32]) {
  %494 = cast(%var_9439, dtype="bool") /* ty=Tensor[(8, 10, 8), bool] */;
  %495 = shape_of(%var_9438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%var_9438, dtype="bool") /* ty=Tensor[(8, 10, 8), bool] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %498 = cast(meta[relay.Constant][25] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %499 = reshape(%498, newshape=[8, 11, 15]) /* ty=Tensor[(8, 11, 15), float64] */;
  %500 = cast(%var_9438, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
  %501 = rsqrt(%500) /* ty=Tensor[(8, 10, 8), float32] */;
  %502 = cast(%501, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
  %503 = greater(%496, %497) /* ty=Tensor[(8, 10, 8), bool] */;
  %504 = @func_3412(%499) /* ty=Tensor[(8, 11, 15), float64] */;
  %505 = erf(%502) /* ty=Tensor[(8, 10, 8), float32] */;
  (%503, %504, meta[relay.Constant][25] /* ty=Tensor[(1320), float64] */, %505)
}

def @func_9567(%var_9565: Tensor[(468), float64], %var_9566: Tensor[(33), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), bool], Tensor[(468), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(11, 3, 14), float64]) {
  %522 = fn (%var_9543: Tensor[(468), float64], %var_9552: Tensor[(33), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), bool], Tensor[(468), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(11, 3, 14), float64]) {
    %506 = @func_3216() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %507 = cast(%var_9543, dtype="float64") /* ty=Tensor[(468), float64] */;
    %508 = reshape(%507, newshape=[3, 12, 13]) /* ty=Tensor[(3, 12, 13), float64] */;
    %509 = @func_8520(%508) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(3, 12, 13), bool]) */;
    %510 = cast(%var_9552, dtype="float64") /* ty=Tensor[(33), float64] */;
    %511 = cast(meta[relay.Constant][26] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
    %512 = reshape(%510, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
    %513 = reshape(%511, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
    %514 = @func_800(%512, %513) /* ty=Tensor[(11, 3, 14), float64] */;
    %515 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 3, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
    %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(3), int32] */;
    %517 = cast(%514, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
    %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %519 = %506.0;
    %520 = %509.1;
    %521 = power(%517, %518) /* ty=Tensor[(11, 3, 14), float64] */;
    (%519, %520, %var_9543, %var_9552, meta[relay.Constant][26] /* ty=Tensor[(462), float64] */, %521)
  };
  %522(%var_9565, %var_9566) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), bool], Tensor[(468), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(11, 3, 14), float64]) */
}

def @func_5004() -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32]) {
  %523 = @func_2196() /* ty=Tensor[(4, 3, 12), float32] */;
  %524 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
  (%523, %524)
}

def @func_3589(%var_3587: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(462), float64], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) {
  @func_3586(%var_3587) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(462), float64], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) */
}

def @func_7329(%var_7327: uint8, %var_7328: Tensor[(65), uint8]) -> (Tensor[(4, 3, 12), float32], Tensor[(1, 5, 13), uint8], uint8, Tensor[(65), uint8]) {
  @func_7325(%var_7327, %var_7328) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(1, 5, 13), uint8], uint8, Tensor[(65), uint8]) */
}

def @func_1975(%var_1972: Tensor[(240, 2), bool], %var_1973: Tensor[(448), float64], %var_1974: Tensor[(112), float64]) -> (Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8], Tensor[(1512), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(14, 9, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(240, 2), bool]) {
  @func_1970(%var_1972, %var_1973, %var_1974) /* ty=(Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8], Tensor[(1512), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(14, 9, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(240, 2), bool]) */
}

def @func_804(%var_802: Tensor[(11, 3, 1), float64], %var_803: Tensor[(11, 3, 14), float64]) -> Tensor[(11, 3, 14), float64] {
  @func_800(%var_802, %var_803) /* ty=Tensor[(11, 3, 14), float64] */
}

def @func_8230() -> (Tensor[(2640), float32], Tensor[(240, 2), bool]) {
  %529 = fn () -> (Tensor[(2640), float32], Tensor[(240, 2), bool]) {
    %525 = @func_7786() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(1320), float64], Tensor[(2640), float32]) */;
    %526 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
    %527 = %525.5;
    %528 = %526.1;
    (%527, %528)
  };
  %529() /* ty=(Tensor[(2640), float32], Tensor[(240, 2), bool]) */
}

def @func_9275() -> Tensor[(4, 3, 12), float64] {
  %530 = @func_8032() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %530.0
}

def @func_1579(%var_1578: Tensor[(4, 3, 12), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), bool], Tensor[(4, 3, 12), float64]) {
  %544 = fn (%var_1557: Tensor[(4, 3, 12), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), bool], Tensor[(4, 3, 12), float64]) {
    %531 = @func_1313() /* ty=Tensor[(4, 3, 12), float64] */;
    %532 = cast(%var_1557, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
    %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
    %534 = cast(%531, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
    %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %536 = cast(%var_1557, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
    %537 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
    %538 = cast(%531, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
    %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %540 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %541 = add(%534, %535) /* ty=Tensor[(4, 3, 12), float32] */;
    %542 = less_equal(%538, %539) /* ty=Tensor[(4, 3, 12), bool] */;
    %543 = %540.0;
    (%541, %542, %543)
  };
  %544(%var_1578) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), bool], Tensor[(4, 3, 12), float64]) */
}

def @func_7699(%var_7697: Tensor[(33), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(77, 6), float64], Tensor[(33), float64], Tensor[(462), float64]) {
  @func_7696(%var_7697) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(77, 6), float64], Tensor[(33), float64], Tensor[(462), float64]) */
}

def @func_8809() -> (Tensor[(2640), float32],) {
  %547 = fn () -> (Tensor[(2640), float32],) {
    %545 = @func_8229() /* ty=(Tensor[(2640), float32], Tensor[(240, 2), bool]) */;
    %546 = %545.0;
    (%546,)
  };
  %547() /* ty=(Tensor[(2640), float32],) */
}

def @func_3770() -> (Tensor[(4, 3, 12), float32],) {
  %550 = fn () -> (Tensor[(4, 3, 12), float32],) {
    %548 = @func_3228() /* ty=(Tensor[(4, 3, 12), float32],) */;
    %549 = %548.0;
    (%549,)
  };
  %550() /* ty=(Tensor[(4, 3, 12), float32],) */
}

def @func_9277() -> Tensor[(4, 3, 12), float64] {
  @func_9275() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_9336() -> (Tensor[(7, 11, 9), int32], Tensor[(4, 3, 12), float64]) {
  %551 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 11, 9), int32] */, dtype="int32") /* ty=Tensor[(1, 11, 9), int32] */;
  %552 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 11, 9), int32] */, dtype="int32") /* ty=Tensor[(7, 11, 9), int32] */;
  %553 = logical_xor(%551, %552) /* ty=Tensor[(7, 11, 9), int32] */;
  %554 = @func_3912() /* ty=Tensor[(4, 3, 12), float64] */;
  (%553, %554)
}

def @func_3217() -> (Tensor[(4, 3, 12), float64],) {
  %557 = fn () -> (Tensor[(4, 3, 12), float64],) {
    %555 = @func_3058() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %556 = %555.0;
    (%556,)
  };
  %557() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_2863(%var_2862: Tensor[(33), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
  %568 = fn (%var_2838: Tensor[(33), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
    %558 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %559 = cast(%var_2838, dtype="float64") /* ty=Tensor[(33), float64] */;
    %560 = cast(meta[relay.Constant][30] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
    %561 = reshape(%559, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
    %562 = reshape(%560, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
    %563 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
    %564 = %558.0;
    %565 = @func_800(%561, %562) /* ty=Tensor[(11, 3, 14), float64] */;
    %566 = @func_1313() /* ty=Tensor[(4, 3, 12), float64] */;
    %567 = %563.2;
    (%564, %565, %var_2838, meta[relay.Constant][30] /* ty=Tensor[(462), float64] */, %566, %567)
  };
  %568(%var_2862) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */
}

def @func_4181() -> (Tensor[(4, 3, 12), float32],) {
  %569 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
  (%569,)
}

def @func_4457() -> Tensor[(4, 3, 12), float32] {
  %570 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %570.0
}

def @func_6370(%var_6369: int32) -> (Tensor[(1, 14, 9), int32], Tensor[(448), float64]) {
  %576 = fn (%var_6352: int32) -> (Tensor[(1, 14, 9), int32], Tensor[(448), float64]) {
    %571 = cast(%var_6352, dtype="int32") /* ty=int32 */;
    %572 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 14, 9), int32] */, dtype="int32") /* ty=Tensor[(1, 14, 9), int32] */;
    %573 = @func_3975() /* ty=(Tensor[(448), float64],) */;
    %574 = subtract(%571, %572) /* ty=Tensor[(1, 14, 9), int32] */;
    %575 = %573.0;
    (%574, %575)
  };
  %576(%var_6369) /* ty=(Tensor[(1, 14, 9), int32], Tensor[(448), float64]) */
}

def @func_1213() -> (Tensor[(4, 3, 12), float64],) {
  @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_6795(%var_6793: Tensor[(10, 96), uint8], %var_6794: int16) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), uint8], Tensor[(448), float64], Tensor[(10, 96), uint8], int16, Tensor[(448), float64]) {
  %590 = fn (%var_6773: Tensor[(10, 96), uint8], %var_6774: int16) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), uint8], Tensor[(448), float64], Tensor[(10, 96), uint8], int16, Tensor[(448), float64]) {
    %577 = @func_5143() /* ty=Tensor[(4, 3, 12), float64] */;
    %578 = cast(%577, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
    %579 = reshape(%578, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float64] */;
    %580 = @func_5054(%579) /* ty=(Tensor[(4, 3, 12), uint8],) */;
    %581 = cast(%var_6773, dtype="uint8") /* ty=Tensor[(10, 96), uint8] */;
    %582 = cast(%var_6774, dtype="int16") /* ty=int16 */;
    %583 = cast(meta[relay.Constant][32] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %584 = reshape(%581, newshape=[960]) /* ty=Tensor[(960), uint8] */;
    %585 = reshape(%582, newshape=[]) /* ty=int16 */;
    %586 = reshape(%583, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %587 = @func_6029(%584, %585, %586) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(960), uint8], Tensor[(11, 10, 6), int16], int16, Tensor[(448), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(112), float64]) */;
    %588 = %580.0;
    %589 = %587.6;
    (%577, %588, %589, %var_6773, %var_6774, meta[relay.Constant][32] /* ty=Tensor[(448), float64] */)
  };
  %590(%var_6793, %var_6794) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), uint8], Tensor[(448), float64], Tensor[(10, 96), uint8], int16, Tensor[(448), float64]) */
}

def @func_7513(%var_7506: Tensor[(3, 12, 13), float32]) -> (Tensor[(3, 12, 13), bool],) {
  %591 = @func_6908() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), float32], Tensor[(4, 3, 12), float32], Tensor[(960), bool]) */;
  %592 = %591.1;
  %593 = cast(%var_7506, dtype="bool") /* ty=Tensor[(3, 12, 13), bool] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%592, dtype="bool") /* ty=Tensor[(3, 12, 13), bool] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %597 = logical_and(%595, %596) /* ty=Tensor[(3, 12, 13), bool] */;
  (%597,)
}

def @func_1495() -> (Tensor[(4, 3, 12), float64],) {
  %600 = fn () -> (Tensor[(4, 3, 12), float64],) {
    %598 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %599 = %598.0;
    (%599,)
  };
  %600() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_4158(%var_4157: Tensor[(960), bool]) -> (Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), uint16], Tensor[(5, 16, 12), float64]) {
  %633 = fn (%var_4096: Tensor[(960), bool]) -> (Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), uint16], Tensor[(5, 16, 12), float64]) {
    %601 = @func_3701() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */;
    %602 = cast(%var_4096, dtype="bool") /* ty=Tensor[(960), bool] */;
    %603 = reshape(%602, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), bool] */;
    %604 = @func_1271(%603) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) */;
    %605 = %604.2;
    %606 = cast(%var_4096, dtype="float64") /* ty=Tensor[(960), float64] */;
    %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
    %608 = cast(%605, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
    %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %610 = @func_3740() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(1512), float64]) */;
    %611 = cast(%605, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
    %612 = log10(%611) /* ty=Tensor[(5, 16, 12), float64] */;
    %613 = cast(%612, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
    %614 = atan(%613) /* ty=Tensor[(5, 16, 12), float32] */;
    %615 = cast(%var_4096, dtype="bool") /* ty=Tensor[(960), bool] */;
    %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
    %617 = cast(%614, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
    %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %619 = cast(%614, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
    %620 = sigmoid(%619) /* ty=Tensor[(5, 16, 12), float64] */;
    %621 = cast(%612, dtype="uint16") /* ty=Tensor[(5, 16, 12), uint16] */;
    %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
    %623 = cast(%620, dtype="uint16") /* ty=Tensor[(5, 16, 12), uint16] */;
    %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %625 = cast(%620, dtype="float64") /* ty=Tensor[(5, 16, 12), float64] */;
    %626 = %601.1;
    %627 = mod(%608, %609) /* ty=Tensor[(5, 16, 12), float64] */;
    %628 = %610.0;
    %629 = not_equal(%617, %618) /* ty=Tensor[(5, 16, 12), bool] */;
    %630 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
    %631 = bitwise_and(%623, %624) /* ty=Tensor[(5, 16, 12), uint16] */;
    %632 = log2(%625) /* ty=Tensor[(5, 16, 12), float64] */;
    (%626, %627, %628, %629, %630, %631, %632)
  };
  %633(%var_4157) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), uint16], Tensor[(5, 16, 12), float64]) */
}

def @func_6033(%var_6030: Tensor[(960), uint8], %var_6031: int16, %var_6032: Tensor[(448), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(960), uint8], Tensor[(11, 10, 6), int16], int16, Tensor[(448), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(112), float64]) {
  %654 = fn (%var_5991: Tensor[(960), uint8], %var_5999: int16, %var_6023: Tensor[(448), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(960), uint8], Tensor[(11, 10, 6), int16], int16, Tensor[(448), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(112), float64]) {
    %634 = cast(%var_5991, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %635 = cast(%var_5991, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %636 = reshape(%634, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
    %637 = reshape(%635, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
    %638 = @func_11(%636, %637) /* ty=(Tensor[(5, 16, 12), bool],) */;
    %639 = cast(%var_5999, dtype="int16") /* ty=int16 */;
    %640 = reshape(%639, newshape=[]) /* ty=int16 */;
    %641 = cast(%var_6023, dtype="float64") /* ty=Tensor[(448), float64] */;
    %642 = cast(%var_5991, dtype="bool") /* ty=Tensor[(960), bool] */;
    %643 = cast(meta[relay.Constant][33] /* ty=Tensor[(1848), float32] */, dtype="float32") /* ty=Tensor[(1848), float32] */;
    %644 = cast(meta[relay.Constant][34] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %645 = reshape(%641, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %646 = reshape(%642, newshape=[960]) /* ty=Tensor[(960), bool] */;
    %647 = reshape(%643, newshape=[1848]) /* ty=Tensor[(1848), float32] */;
    %648 = reshape(%644, newshape=[112]) /* ty=Tensor[(112), float64] */;
    %649 = @func_3139(%645, %646, %647, %648) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(448), float64], Tensor[(448), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(4, 3, 12), float64], Tensor[(2, 8, 7), bool], Tensor[(112), float64], Tensor[(1848), float32]) */;
    %650 = @func_3960() /* ty=Tensor[(4, 3, 12), float64] */;
    %651 = %638.0;
    %652 = @func_5420(%640) /* ty=Tensor[(11, 10, 6), int16] */;
    %653 = %649.1;
    (%650, %651, %var_5991, %652, %var_5999, %653, %var_6023, meta[relay.Constant][33] /* ty=Tensor[(1848), float32] */, meta[relay.Constant][34] /* ty=Tensor[(112), float64] */)
  };
  %654(%var_6030, %var_6031, %var_6032) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(960), uint8], Tensor[(11, 10, 6), int16], int16, Tensor[(448), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(112), float64]) */
}

def @func_6984() -> Tensor[(4, 3, 12), float64] {
  @func_6982() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_5180() -> Tensor[(448), float64] {
  %655 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
  %655.0
}

def @func_103(%var_100: Tensor[(8, 8, 7), float64], %var_101: Tensor[(2, 8, 7), float64], %var_102: Tensor[(20, 48), uint8]) -> (Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) {
  @func_98(%var_100, %var_101, %var_102) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */
}

def @func_4459() -> Tensor[(4, 3, 12), float32] {
  @func_4457() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_2991() -> (Tensor[(4, 3, 12), float64], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64]) {
  %656 = @func_1494() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %657 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 3), float64] */;
  %658 = cast(meta[relay.Constant][36] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %659 = reshape(%657, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %660 = reshape(%658, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %661 = @func_2742(%659, %660) /* ty=(Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) */;
  %662 = %656.0;
  %663 = %661.3;
  (%662, %663, meta[relay.Constant][35] /* ty=Tensor[(11, 3), float64] */, meta[relay.Constant][36] /* ty=Tensor[(462), float64] */)
}

def @func_8010() -> (Tensor[(4, 3, 12), float32],) {
  %666 = fn () -> (Tensor[(4, 3, 12), float32],) {
    %664 = @func_5004() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32]) */;
    %665 = %664.0;
    (%665,)
  };
  %666() /* ty=(Tensor[(4, 3, 12), float32],) */
}

def @func_6260() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
  %667 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %668 = @func_3228() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %669 = %667.0;
  %670 = %668.0;
  (%669, %670)
}

def @func_8556() -> (Tensor[(448), float64],) {
  @func_8554() /* ty=(Tensor[(448), float64],) */
}

def @func_3841(%var_3839: Tensor[(11, 16, 15), float32], %var_3840: Tensor[(4, 3, 12), float32]) -> (Tensor[(11, 16, 15), float32], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(4, 3, 12), uint16], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(4, 3, 12), float64]) {
  @func_3837(%var_3839, %var_3840) /* ty=(Tensor[(11, 16, 15), float32], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(4, 3, 12), uint16], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(4, 3, 12), float64]) */
}

def @func_3060() -> (Tensor[(4, 3, 12), float64],) {
  @func_3058() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_6585() -> (Tensor[(4, 3, 12), float64], Tensor[(1, 14, 9), int32], int32) {
  %671 = @func_5224() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %672 = cast(-1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %673 = reshape(%672, newshape=[]) /* ty=int32 */;
  %674 = @func_6368(%673) /* ty=(Tensor[(1, 14, 9), int32], Tensor[(448), float64]) */;
  %675 = %671.0;
  %676 = %674.0;
  (%675, %676, -1 /* ty=int32 */)
}

def @func_7276() -> (Tensor[(4, 3, 12), float32],) {
  %677 = @func_6326() /* ty=Tensor[(4, 3, 12), float32] */;
  (%677,)
}

def @func_3228() -> (Tensor[(4, 3, 12), float32],) {
  %678 = @func_2277() /* ty=Tensor[(4, 3, 12), float32] */;
  (%678,)
}

def @func_4922(%var_4920: Tensor[(10, 6, 8), float32]) -> (Tensor[(10, 6, 8), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(960), uint8]) {
  @func_4919(%var_4920) /* ty=(Tensor[(10, 6, 8), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(960), uint8]) */
}

def @func_8634(%var_8619: Tensor[(4, 3, 12), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64]) {
  %679 = @func_6585() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(1, 14, 9), int32], int32) */;
  %680 = @func_5224() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %681 = @func_5239() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %682 = %681.0;
  %683 = cast(%var_8619, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%682, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %687 = @func_2462() /* ty=Tensor[(4, 3, 12), float64] */;
  %688 = %679.0;
  %689 = @func_6326() /* ty=Tensor[(4, 3, 12), float32] */;
  %690 = %680.0;
  %691 = floor_mod(%685, %686) /* ty=Tensor[(4, 3, 12), float64] */;
  (%687, %688, %689, %690, %691)
}

def @func_8758(%var_8756: Tensor[(160), bool]) -> (Tensor[(4, 3, 12), float32], Tensor[(160), bool], Tensor[(5, 16, 2), float64], Tensor[(12, 4, 5), float64]) {
  @func_8755(%var_8756) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(160), bool], Tensor[(5, 16, 2), float64], Tensor[(12, 4, 5), float64]) */
}

def @func_1682(%var_1680: Tensor[(5, 16, 2), bool]) -> (Tensor[(5, 16, 2), bool],) {
  @func_1679(%var_1680) /* ty=(Tensor[(5, 16, 2), bool],) */
}

def @func_5784() -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(4, 84), float32]) {
  %697 = fn () -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(4, 84), float32]) {
    %692 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 84), float32] */, dtype="float32") /* ty=Tensor[(4, 84), float32] */;
    %693 = reshape(%692, newshape=[4, 7, 12]) /* ty=Tensor[(4, 7, 12), float32] */;
    %694 = @func_4654(%693) /* ty=(Tensor[(4, 7, 12), float32], Tensor[(4, 7, 12), int8], Tensor[(4, 3, 12), float32]) */;
    %695 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
    %696 = %694.2;
    (%695, %696, meta[relay.Constant][37] /* ty=Tensor[(4, 84), float32] */)
  };
  %697() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(4, 84), float32]) */
}

def @func_1271(%var_1265: Tensor[(5, 16, 12), bool]) -> (Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) {
  %698 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %699 = cast(meta[relay.Constant][39] /* ty=Tensor[(240, 2), uint32] */, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %700 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(240, 2), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %701 = cast(meta[relay.Constant][38] /* ty=Tensor[(240, 2), uint32] */, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %703 = cast(meta[relay.Constant][38] /* ty=Tensor[(240, 2), uint32] */, dtype="uint32") /* ty=Tensor[(240, 2), uint32] */;
  %704 = reshape(%703, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), uint32] */;
  %705 = @func_977(%704) /* ty=(Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) */;
  %706 = %705.5;
  %707 = cast(%var_1265, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%706, dtype="float32") /* ty=Tensor[(5, 16, 12), float32] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %711 = %698.0;
  %712 = greater_equal(%701, %702) /* ty=Tensor[(240, 2), bool] */;
  %713 = power(%709, %710) /* ty=Tensor[(5, 16, 12), float32] */;
  (%711, %712, %713)
}

def @func_5241() -> (Tensor[(4, 3, 12), float64],) {
  @func_5239() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_4738(%var_4716: Tensor[(4, 3, 12), float32]) -> Tensor[(4, 3, 12), bool] {
  %714 = @func_2196() /* ty=Tensor[(4, 3, 12), float32] */;
  %715 = cast(%var_4716, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
  %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%714, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%717, %718) /* ty=Tensor[(4, 3, 12), bool] */
}

def @func_2018(%var_2016: Tensor[(1512), float64], %var_2017: Tensor[(480), uint32]) -> (Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(960), uint8], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(15, 2, 16), uint32], Tensor[(480), uint32]) {
  %735 = fn (%var_2004: Tensor[(1512), float64], %var_2011: Tensor[(480), uint32]) -> (Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(960), uint8], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(15, 2, 16), uint32], Tensor[(480), uint32]) {
    %719 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %720 = cast(meta[relay.Constant][40] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %721 = cast(meta[relay.Constant][40] /* ty=Tensor[(960), uint8] */, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %722 = reshape(%720, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
    %723 = reshape(%721, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
    %724 = @func_11(%722, %723) /* ty=(Tensor[(5, 16, 12), bool],) */;
    %725 = cast(%var_2004, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %726 = reshape(%725, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
    %727 = @func_922(%726) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) */;
    %728 = cast(%var_2011, dtype="uint32") /* ty=Tensor[(480), uint32] */;
    %729 = reshape(%728, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), uint32] */;
    %730 = @func_977(%729) /* ty=(Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) */;
    %731 = %719.0;
    %732 = %724.0;
    %733 = %727.3;
    %734 = %730.0;
    (%731, %732, meta[relay.Constant][40] /* ty=Tensor[(960), uint8] */, %733, %var_2004, %734, %var_2011)
  };
  %735(%var_2016, %var_2017) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(5, 16, 12), bool], Tensor[(960), uint8], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(15, 2, 16), uint32], Tensor[(480), uint32]) */
}

def @func_2922() -> (Tensor[(4, 3, 12), float32],) {
  %738 = fn () -> (Tensor[(4, 3, 12), float32],) {
    %736 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
    %737 = %736.0;
    (%737,)
  };
  %738() /* ty=(Tensor[(4, 3, 12), float32],) */
}

def @func_924(%var_923: Tensor[(14, 9, 12), float64]) -> (Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) {
  %747 = fn (%var_907: Tensor[(14, 9, 12), float64]) -> (Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) {
    %739 = cast(%var_907, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
    %740 = cast(meta[relay.Constant][41] /* ty=Tensor[(1848), float32] */, dtype="float32") /* ty=Tensor[(1848), float32] */;
    %741 = cast(meta[relay.Constant][42] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %742 = reshape(%740, newshape=[14, 12, 11]) /* ty=Tensor[(14, 12, 11), float32] */;
    %743 = reshape(%741, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %744 = @func_143(%742, %743) /* ty=(Tensor[(14, 1, 11), float64], Tensor[(14, 12, 11), float64], Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8]) */;
    %745 = rsqrt(%739) /* ty=Tensor[(14, 9, 12), float64] */;
    %746 = %744.3;
    (%745, %746, meta[relay.Constant][41] /* ty=Tensor[(1848), float32] */, meta[relay.Constant][42] /* ty=Tensor[(448), float64] */)
  };
  %747(%var_923) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) */
}

def @func_1313() -> Tensor[(4, 3, 12), float64] {
  %748 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %748.0
}

def @func_5143() -> Tensor[(4, 3, 12), float64] {
  @func_3912() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_5814() -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64]) {
  %752 = fn () -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64]) {
    %749 = @func_3058() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %750 = @func_5607() /* ty=Tensor[(4, 3, 12), float32] */;
    %751 = %749.0;
    (%750, %751)
  };
  %752() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64]) */
}

def @func_2376() -> (Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) {
  @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */
}

def @func_3912() -> Tensor[(4, 3, 12), float64] {
  %753 = @func_1640() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %753.0
}

def @func_7067(%var_7066: Tensor[(2, 420), float32]) -> (Tensor[(4, 3, 12), float64], Tensor[(7, 15, 8), float32], Tensor[(2, 420), float32]) {
  %760 = fn (%var_7058: Tensor[(2, 420), float32]) -> (Tensor[(4, 3, 12), float64], Tensor[(7, 15, 8), float32], Tensor[(2, 420), float32]) {
    %754 = @func_3058() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %755 = cast(%var_7058, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
    %756 = reshape(%755, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), float32] */;
    %757 = @func_6487(%756) /* ty=(Tensor[(7, 15, 8), float32], Tensor[(7, 15, 8), float32]) */;
    %758 = %754.0;
    %759 = %757.1;
    (%758, %759, %var_7058)
  };
  %760(%var_7066) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(7, 15, 8), float32], Tensor[(2, 420), float32]) */
}

def @func_9017() -> Tensor[(4, 3, 12), float64] {
  @func_6744() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_7044() -> (Tensor[(4, 3, 12), uint64], Tensor[(4, 3, 12), float32]) {
  %765 = fn () -> (Tensor[(4, 3, 12), uint64], Tensor[(4, 3, 12), float32]) {
    %761 = @func_5517() /* ty=(Tensor[(4, 3, 12), uint64],) */;
    %762 = @func_2921() /* ty=(Tensor[(4, 3, 12), float32],) */;
    %763 = %761.0;
    %764 = %762.0;
    (%763, %764)
  };
  %765() /* ty=(Tensor[(4, 3, 12), uint64], Tensor[(4, 3, 12), float32]) */
}

def @func_3506(%var_3489: Tensor[(14, 4, 15), float32], %var_3495: Tensor[(160), bool]) -> (Tensor[(14, 4, 15), float32], Tensor[(5, 16, 2), bool], Tensor[(160), bool]) {
  %766 = cast(%var_3489, dtype="float32") /* ty=Tensor[(14, 4, 15), float32] */;
  %767 = cast(%var_3495, dtype="bool") /* ty=Tensor[(160), bool] */;
  %768 = reshape(%767, newshape=[5, 16, 2]) /* ty=Tensor[(5, 16, 2), bool] */;
  %769 = @func_1679(%768) /* ty=(Tensor[(5, 16, 2), bool],) */;
  %770 = cosh(%766) /* ty=Tensor[(14, 4, 15), float32] */;
  %771 = %769.0;
  (%770, %771, %var_3495)
}

def @func_6727() -> (Tensor[(11, 3), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(462), float64], Tensor[(462), float64]) {
  %772 = @func_2991() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64]) */;
  %773 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %774 = %772.2;
  %775 = cast(%774, dtype="float64") /* ty=Tensor[(11, 3), float64] */;
  %776 = cast(meta[relay.Constant][43] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %777 = reshape(%775, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %778 = reshape(%776, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %779 = @func_2742(%777, %778) /* ty=(Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) */;
  %780 = %773.0;
  %781 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
  %782 = %779.3;
  (%774, %780, %781, %782, meta[relay.Constant][43] /* ty=Tensor[(462), float64] */)
}

def @func_3837(%var_3784: Tensor[(11, 16, 15), float32], %var_3812: Tensor[(4, 3, 12), float32]) -> (Tensor[(11, 16, 15), float32], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(4, 3, 12), uint16], Tensor[(8, 11, 15), float64], Tensor[(1320), float64], Tensor[(4, 3, 12), float64]) {
  %783 = cast(meta[relay.Constant][44] /* ty=Tensor[(11, 16, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 16, 15), float32] */;
  %784 = shape_of(%var_3784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%var_3784, dtype="float32") /* ty=Tensor[(11, 16, 15), float32] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %787 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 112), float64] */, dtype="float64") /* ty=Tensor[(1, 112), float64] */;
  %788 = reshape(%787, newshape=[1, 112]) /* ty=Tensor[(1, 112), float64] */;
  %789 = @func_2222(%788) /* ty=(Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(2, 8, 7), bool], Tensor[(4, 3, 12), float32]) */;
  %790 = @func_3228() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %791 = %790.0;
  %792 = cast(%var_3812, dtype="uint16") /* ty=Tensor[(4, 3, 12), uint16] */;
  %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%791, dtype="uint16") /* ty=Tensor[(4, 3, 12), uint16] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %796 = cast(meta[relay.Constant][46] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %797 = reshape(%796, newshape=[8, 11, 15]) /* ty=Tensor[(8, 11, 15), float64] */;
  %798 = @func_3058() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %799 = divide(%785, %786) /* ty=Tensor[(11, 16, 15), float32] */;
  %800 = %789.2;
  %801 = bitwise_or(%794, %795) /* ty=Tensor[(4, 3, 12), uint16] */;
  %802 = @func_3412(%797) /* ty=Tensor[(8, 11, 15), float64] */;
  %803 = %798.0;
  (%799, %800, meta[relay.Constant][45] /* ty=Tensor[(1, 112), float64] */, %801, %802, meta[relay.Constant][46] /* ty=Tensor[(1320), float64] */, %803)
}

def @func_8484() -> Tensor[(448), float64] {
  @func_5180() /* ty=Tensor[(448), float64] */
}

def @func_2225(%var_2223: Tensor[(1, 112), float64]) -> (Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(2, 8, 7), bool], Tensor[(4, 3, 12), float32]) {
  @func_2222(%var_2223) /* ty=(Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(2, 8, 7), bool], Tensor[(4, 3, 12), float32]) */
}

def @func_4969() -> (Tensor[(4, 3, 12), float64],) {
  %804 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %805 = %804.0;
  (%805,)
}

def @func_7516(%var_7514: Tensor[(3, 12, 13), float32]) -> (Tensor[(3, 12, 13), bool],) {
  @func_7513(%var_7514) /* ty=(Tensor[(3, 12, 13), bool],) */
}

def @func_5883() -> Tensor[(4, 3, 12), float32] {
  %806 = fn () -> Tensor[(4, 3, 12), float32] {
    @func_2277() /* ty=Tensor[(4, 3, 12), float32] */
  };
  %806() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_8080() -> (Tensor[(3, 12, 13), float64], Tensor[(4, 3, 12), float32]) {
  %812 = fn () -> (Tensor[(3, 12, 13), float64], Tensor[(4, 3, 12), float32]) {
    %807 = @func_6908() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(3, 12, 13), float32], Tensor[(4, 3, 12), float32], Tensor[(960), bool]) */;
    %808 = %807.1;
    %809 = cast(%808, dtype="float64") /* ty=Tensor[(3, 12, 13), float64] */;
    %810 = sin(%809) /* ty=Tensor[(3, 12, 13), float64] */;
    %811 = @func_5152() /* ty=Tensor[(4, 3, 12), float32] */;
    (%810, %811)
  };
  %812() /* ty=(Tensor[(3, 12, 13), float64], Tensor[(4, 3, 12), float32]) */
}

def @func_2993() -> (Tensor[(4, 3, 12), float64], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64]) {
  @func_2991() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64]) */
}

def @func_3740() -> (Tensor[(4, 3, 12), float64], Tensor[(1512), float64]) {
  %813 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
  %814 = @func_1313() /* ty=Tensor[(4, 3, 12), float64] */;
  %815 = %813.1;
  (%814, %815)
}

def @func_1679(%var_1669: Tensor[(5, 16, 2), bool]) -> (Tensor[(5, 16, 2), bool],) {
  %816 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 16, 2), bool] */, dtype="bool") /* ty=Tensor[(5, 16, 2), bool] */;
  %817 = shape_of(%var_1669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%var_1669, dtype="bool") /* ty=Tensor[(5, 16, 2), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %820 = logical_or(%818, %819) /* ty=Tensor[(5, 16, 2), bool] */;
  (%820,)
}

def @func_1315() -> Tensor[(4, 3, 12), float64] {
  @func_1313() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_4741(%var_4739: Tensor[(4, 3, 12), float32]) -> Tensor[(4, 3, 12), bool] {
  @func_4738(%var_4739) /* ty=Tensor[(4, 3, 12), bool] */
}

def @func_5334(%var_5332: Tensor[(1, 6, 4), float64]) -> Tensor[(1, 6, 4), float64] {
  @func_5331(%var_5332) /* ty=Tensor[(1, 6, 4), float64] */
}

def @func_1450() -> (Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) {
  %821 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %822 = cast(meta[relay.Constant][48] /* ty=Tensor[(960), bool] */, dtype="bool") /* ty=Tensor[(960), bool] */;
  %823 = reshape(%822, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), bool] */;
  %824 = @func_1271(%823) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) */;
  %825 = %821.0;
  %826 = %824.1;
  %827 = @func_1313() /* ty=Tensor[(4, 3, 12), float64] */;
  (%825, %826, meta[relay.Constant][48] /* ty=Tensor[(960), bool] */, %827)
}

def @func_3905(%var_3903: Tensor[(4, 3, 12), float64], %var_3904: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), uint8], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) {
  %841 = fn (%var_3854: Tensor[(4, 3, 12), float64], %var_3872: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), uint8], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) {
    %828 = @func_2485() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %829 = %828.0;
    %830 = cast(%var_3854, dtype="uint8") /* ty=Tensor[(4, 3, 12), uint8] */;
    %831 = shape_of(%829, dtype="int32") /* ty=Tensor[(3), int32] */;
    %832 = cast(%829, dtype="uint8") /* ty=Tensor[(4, 3, 12), uint8] */;
    %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %834 = cast(%829, dtype="float32") /* ty=Tensor[(4, 3, 12), float32] */;
    %835 = cast(%var_3872, dtype="float64") /* ty=Tensor[(112), float64] */;
    %836 = reshape(%835, newshape=[1, 112]) /* ty=Tensor[(1, 112), float64] */;
    %837 = @func_2222(%836) /* ty=(Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(2, 8, 7), bool], Tensor[(4, 3, 12), float32]) */;
    %838 = minimum(%832, %833) /* ty=Tensor[(4, 3, 12), uint8] */;
    %839 = log2(%834) /* ty=Tensor[(4, 3, 12), float32] */;
    %840 = %837.5;
    (%838, %839, %840, %var_3872)
  };
  %841(%var_3903, %var_3904) /* ty=(Tensor[(4, 3, 12), uint8], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) */
}

def @func_3961() -> Tensor[(4, 3, 12), float64] {
  %843 = fn () -> Tensor[(4, 3, 12), float64] {
    %842 = @func_3216() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %842.0
  };
  %843() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_979(%var_978: Tensor[(15, 2, 16), uint32]) -> (Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) {
  %865 = fn (%var_947: Tensor[(15, 2, 16), uint32]) -> (Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) {
    %844 = cast(%var_947, dtype="uint32") /* ty=Tensor[(15, 2, 16), uint32] */;
    %845 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(15, 2, 16), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %846 = cast(meta[relay.Constant][49] /* ty=Tensor[(15, 2, 16), uint32] */, dtype="uint32") /* ty=Tensor[(15, 2, 16), uint32] */;
    %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %848 = cast(meta[relay.Constant][50] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %849 = reshape(%848, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
    %850 = @func_922(%849) /* ty=(Tensor[(14, 9, 12), float64], Tensor[(448), float64], Tensor[(1848), float32], Tensor[(448), float64]) */;
    %851 = cast(meta[relay.Constant][51] /* ty=Tensor[(960, 1), uint8] */, dtype="uint8") /* ty=Tensor[(960, 1), uint8] */;
    %852 = cast(meta[relay.Constant][51] /* ty=Tensor[(960, 1), uint8] */, dtype="uint8") /* ty=Tensor[(960, 1), uint8] */;
    %853 = reshape(%851, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
    %854 = reshape(%852, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
    %855 = @func_11(%853, %854) /* ty=(Tensor[(5, 16, 12), bool],) */;
    %856 = %855.0;
    %857 = cast(%856, dtype="uint8") /* ty=Tensor[(5, 16, 12), uint8] */;
    %858 = cast(%856, dtype="uint8") /* ty=Tensor[(5, 16, 12), uint8] */;
    %859 = reshape(%857, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
    %860 = reshape(%858, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), uint8] */;
    %861 = @func_11(%859, %860) /* ty=(Tensor[(5, 16, 12), bool],) */;
    %862 = right_shift(%846, %847) /* ty=Tensor[(15, 2, 16), uint32] */;
    %863 = %850.3;
    %864 = %861.0;
    (%862, %863, meta[relay.Constant][50] /* ty=Tensor[(1512), float64] */, %856, meta[relay.Constant][51] /* ty=Tensor[(960, 1), uint8] */, %864)
  };
  %865(%var_978) /* ty=(Tensor[(15, 2, 16), uint32], Tensor[(448), float64], Tensor[(1512), float64], Tensor[(5, 16, 12), bool], Tensor[(960, 1), uint8], Tensor[(5, 16, 12), bool]) */
}

def @func_5225() -> (Tensor[(4, 3, 12), float64],) {
  %868 = fn () -> (Tensor[(4, 3, 12), float64],) {
    %866 = @func_2991() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64]) */;
    %867 = %866.0;
    (%867,)
  };
  %868() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_3265() -> Tensor[(4, 3, 12), float32] {
  %869 = fn () -> Tensor[(4, 3, 12), float32] {
    @func_2806() /* ty=Tensor[(4, 3, 12), float32] */
  };
  %869() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_8033() -> (Tensor[(4, 3, 12), float64],) {
  %871 = fn () -> (Tensor[(4, 3, 12), float64],) {
    %870 = @func_7384() /* ty=Tensor[(4, 3, 12), float64] */;
    (%870,)
  };
  %871() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_8376() -> Tensor[(4, 3, 12), float32] {
  %872 = @func_7276() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %872.0
}

def @func_3703() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
  @func_3701() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */
}

def @func_8523(%var_8521: Tensor[(3, 12, 13), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(3, 12, 13), bool]) {
  @func_8520(%var_8521) /* ty=(Tensor[(4, 3, 12), float32], Tensor[(3, 12, 13), bool]) */
}

def @func_7900(%var_7899: Tensor[(462), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(33, 1), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) {
  %889 = fn (%var_7889: Tensor[(462), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(33, 1), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) {
    %873 = @func_2035() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %874 = @func_6235() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %875 = cast(meta[relay.Constant][52] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %876 = cast(%var_7889, dtype="float64") /* ty=Tensor[(462), float64] */;
    %877 = reshape(%875, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
    %878 = reshape(%876, newshape=[462]) /* ty=Tensor[(462), float64] */;
    %879 = @func_2742(%877, %878) /* ty=(Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) */;
    %880 = %873.0;
    %881 = cast(%880, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
    %882 = cast(meta[relay.Constant][53] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %883 = reshape(%881, newshape=[4, 3, 12]) /* ty=Tensor[(4, 3, 12), float64] */;
    %884 = reshape(%882, newshape=[112]) /* ty=Tensor[(112), float64] */;
    %885 = @func_3902(%883, %884) /* ty=(Tensor[(4, 3, 12), uint8], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) */;
    %886 = %874.0;
    %887 = %879.2;
    %888 = %885.1;
    (%880, %886, %887, meta[relay.Constant][52] /* ty=Tensor[(33), float64] */, %var_7889, %888, meta[relay.Constant][53] /* ty=Tensor[(112), float64] */)
  };
  %889(%var_7899) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(33, 1), float64], Tensor[(33), float64], Tensor[(462), float64], Tensor[(4, 3, 12), float32], Tensor[(112), float64]) */
}

def @func_5607() -> Tensor[(4, 3, 12), float32] {
  @func_3264() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_1211() -> (Tensor[(4, 3, 12), float64],) {
  %890 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
  %891 = tan(%890) /* ty=Tensor[(4, 3, 12), float64] */;
  (%891,)
}

def @func_1627(%var_1623: Tensor[(3, 3, 7), uint64], %var_1624: Tensor[(3, 3, 7), bool], %var_1625: Tensor[(480, 2), bool], %var_1626: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(480, 2), bool], Tensor[(3, 3, 7), bool], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(112), float64]) {
  %920 = fn (%var_1583: Tensor[(3, 3, 7), uint64], %var_1589: Tensor[(3, 3, 7), bool], %var_1605: Tensor[(480, 2), bool], %var_1620: Tensor[(112), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(480, 2), bool], Tensor[(3, 3, 7), bool], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(112), float64]) {
    %892 = cast(%var_1605, dtype="bool") /* ty=Tensor[(480, 2), bool] */;
    %893 = reshape(%892, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), bool] */;
    %894 = @func_1271(%893) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), float32]) */;
    %895 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 3, 7), uint64] */, dtype="bool") /* ty=Tensor[(3, 3, 7), bool] */;
    %896 = shape_of(%var_1583, dtype="int32") /* ty=Tensor[(3), int32] */;
    %897 = cast(%var_1583, dtype="bool") /* ty=Tensor[(3, 3, 7), bool] */;
    %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %899 = greater(%897, %898) /* ty=Tensor[(3, 3, 7), bool] */;
    %900 = cast(%var_1589, dtype="int8") /* ty=Tensor[(3, 3, 7), int8] */;
    %901 = shape_of(%899, dtype="int32") /* ty=Tensor[(3), int32] */;
    %902 = cast(%899, dtype="int8") /* ty=Tensor[(3, 3, 7), int8] */;
    %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %904 = left_shift(%902, %903) /* ty=Tensor[(3, 3, 7), int8] */;
    %905 = cast(%904, dtype="bool") /* ty=Tensor[(3, 3, 7), bool] */;
    %906 = shape_of(%var_1589, dtype="int32") /* ty=Tensor[(3), int32] */;
    %907 = cast(%var_1589, dtype="bool") /* ty=Tensor[(3, 3, 7), bool] */;
    %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %909 = cast(meta[relay.Constant][56] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %910 = cast(%var_1620, dtype="float64") /* ty=Tensor[(112), float64] */;
    %911 = cast(%var_1605, dtype="uint8") /* ty=Tensor[(480, 2), uint8] */;
    %912 = reshape(%909, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
    %913 = reshape(%910, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
    %914 = reshape(%911, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
    %915 = @func_98(%912, %913, %914) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
    %916 = @func_1313() /* ty=Tensor[(4, 3, 12), float64] */;
    %917 = %894.0;
    %918 = logical_or(%907, %908) /* ty=Tensor[(3, 3, 7), bool] */;
    %919 = %915.4;
    (%916, %917, %var_1605, %918, %919, meta[relay.Constant][56] /* ty=Tensor[(448), float64] */, %var_1620)
  };
  %920(%var_1623, %var_1624, %var_1625, %var_1626) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(480, 2), bool], Tensor[(3, 3, 7), bool], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(112), float64]) */
}

def @func_8974() -> Tensor[(4, 3, 12), float64] {
  @func_8972() /* ty=Tensor[(4, 3, 12), float64] */
}

def @func_4350() -> Tensor[(4, 3, 12), float64] {
  %921 = @func_3701() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */;
  %921.0
}

def @func_5910() -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
  %924 = fn () -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) {
    %922 = @func_2778() /* ty=Tensor[(4, 3, 12), float64] */;
    %923 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
    (%922, %923)
  };
  %924() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32]) */
}

def @func_7333() -> Tensor[(448), float64] {
  %925 = @func_3484() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(56, 2), float64], Tensor[(60, 16), uint8]) */;
  %925.3
}

def @func_3230() -> (Tensor[(4, 3, 12), float32],) {
  @func_3228() /* ty=(Tensor[(4, 3, 12), float32],) */
}

def @func_5239() -> (Tensor[(4, 3, 12), float64],) {
  %926 = @func_2485() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %927 = %926.0;
  (%927,)
}

def @func_5361() -> Tensor[(4, 3, 12), float32] {
  %929 = fn () -> Tensor[(4, 3, 12), float32] {
    %928 = @func_4181() /* ty=(Tensor[(4, 3, 12), float32],) */;
    %928.0
  };
  %929() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_8378() -> Tensor[(4, 3, 12), float32] {
  @func_8376() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_8755(%var_8691: Tensor[(160), bool]) -> (Tensor[(4, 3, 12), float32], Tensor[(160), bool], Tensor[(5, 16, 2), float64], Tensor[(12, 4, 5), float64]) {
  %930 = @func_2374() /* ty=(Tensor[(448), float64], Tensor[(1512), float64], Tensor[(4, 3, 12), float32]) */;
  %931 = cast(%var_8691, dtype="bool") /* ty=Tensor[(160), bool] */;
  %932 = reshape(%931, newshape=[5, 16, 2]) /* ty=Tensor[(5, 16, 2), bool] */;
  %933 = @func_1679(%932) /* ty=(Tensor[(5, 16, 2), bool],) */;
  %934 = %933.0;
  %935 = cast(%934, dtype="float64") /* ty=Tensor[(5, 16, 2), float64] */;
  %936 = cast(meta[relay.Constant][57] /* ty=Tensor[(12, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 5), float32] */;
  %937 = acosh(%936) /* ty=Tensor[(12, 4, 5), float32] */;
  %938 = cast(meta[relay.Constant][57] /* ty=Tensor[(12, 4, 5), float32] */, dtype="float64") /* ty=Tensor[(12, 4, 5), float64] */;
  %939 = shape_of(%937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %940 = cast(%937, dtype="float64") /* ty=Tensor[(12, 4, 5), float64] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %942 = %930.2;
  %943 = asin(%935) /* ty=Tensor[(5, 16, 2), float64] */;
  %944 = floor_divide(%940, %941) /* ty=Tensor[(12, 4, 5), float64] */;
  (%942, %var_8691, %943, %944)
}

def @func_7278() -> (Tensor[(4, 3, 12), float32],) {
  @func_7276() /* ty=(Tensor[(4, 3, 12), float32],) */
}

def @func_3412(%var_3404: Tensor[(8, 11, 15), float64]) -> Tensor[(8, 11, 15), float64] {
  %945 = cast(%var_3404, dtype="float64") /* ty=Tensor[(8, 11, 15), float64] */;
  acosh(%945) /* ty=Tensor[(8, 11, 15), float64] */
}

def @func_9243() -> Tensor[(16, 3, 6), float32] {
  @func_9241() /* ty=Tensor[(16, 3, 6), float32] */
}

def @func_3415(%var_3413: Tensor[(8, 11, 15), float64]) -> Tensor[(8, 11, 15), float64] {
  @func_3412(%var_3413) /* ty=Tensor[(8, 11, 15), float64] */
}

def @func_5056(%var_5055: Tensor[(4, 3, 12), float64]) -> (Tensor[(4, 3, 12), uint8],) {
  %952 = fn (%var_5037: Tensor[(4, 3, 12), float64]) -> (Tensor[(4, 3, 12), uint8],) {
    %946 = @func_4350() /* ty=Tensor[(4, 3, 12), float64] */;
    %947 = cast(%var_5037, dtype="uint8") /* ty=Tensor[(4, 3, 12), uint8] */;
    %948 = shape_of(%946, dtype="int32") /* ty=Tensor[(3), int32] */;
    %949 = cast(%946, dtype="uint8") /* ty=Tensor[(4, 3, 12), uint8] */;
    %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %951 = subtract(%949, %950) /* ty=Tensor[(4, 3, 12), uint8] */;
    (%951,)
  };
  %952(%var_5055) /* ty=(Tensor[(4, 3, 12), uint8],) */
}

def @func_8972() -> Tensor[(4, 3, 12), float64] {
  %953 = @func_6235() /* ty=(Tensor[(4, 3, 12), float64],) */;
  %953.0
}

def @func_3742() -> (Tensor[(4, 3, 12), float64], Tensor[(1512), float64]) {
  @func_3740() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(1512), float64]) */
}

def @func_5965() -> (Tensor[(4, 3, 12), float32],) {
  %955 = fn () -> (Tensor[(4, 3, 12), float32],) {
    %954 = @func_2806() /* ty=Tensor[(4, 3, 12), float32] */;
    (%954,)
  };
  %955() /* ty=(Tensor[(4, 3, 12), float32],) */
}

def @func_8637(%var_8635: Tensor[(4, 3, 12), float64]) -> (Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64]) {
  @func_8634(%var_8635) /* ty=(Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64]) */
}

def @func_6069() -> (Tensor[(4, 3, 12), float32],) {
  %957 = fn () -> (Tensor[(4, 3, 12), float32],) {
    %956 = @func_3264() /* ty=Tensor[(4, 3, 12), float32] */;
    (%956,)
  };
  %957() /* ty=(Tensor[(4, 3, 12), float32],) */
}

def @func_4705() -> (Tensor[(4, 3, 12), float64],) {
  %962 = fn () -> (Tensor[(4, 3, 12), float64],) {
    %958 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
    %959 = %958.0;
    %960 = cast(%959, dtype="float64") /* ty=Tensor[(4, 3, 12), float64] */;
    %961 = asinh(%960) /* ty=Tensor[(4, 3, 12), float64] */;
    (%961,)
  };
  %962() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_2222(%var_2210: Tensor[(1, 112), float64]) -> (Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(2, 224), float64], Tensor[(1, 112), float64], Tensor[(2, 8, 7), bool], Tensor[(4, 3, 12), float32]) {
  %963 = @func_1450() /* ty=(Tensor[(4, 3, 12), float64], Tensor[(240, 2), bool], Tensor[(960), bool], Tensor[(4, 3, 12), float64]) */;
  %964 = %963.1;
  %965 = cast(%964, dtype="bool") /* ty=Tensor[(240, 2), bool] */;
  %966 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 224), float64] */, dtype="float64") /* ty=Tensor[(2, 224), float64] */;
  %967 = cast(%var_2210, dtype="float64") /* ty=Tensor[(1, 112), float64] */;
  %968 = reshape(%965, newshape=[240, 2]) /* ty=Tensor[(240, 2), bool] */;
  %969 = reshape(%966, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %970 = reshape(%967, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %971 = @func_1970(%968, %969, %970) /* ty=(Tensor[(2, 8, 7), bool], Tensor[(448), float64], Tensor[(112), float64], Tensor[(960), uint8], Tensor[(1512), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float32], Tensor[(5, 16, 12), bool], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(4, 3, 12), float64], Tensor[(960), bool], Tensor[(14, 9, 12), float64], Tensor[(240, 2), bool], Tensor[(5, 16, 12), bool], Tensor[(240, 2), bool]) */;
  %972 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 224), float64] */, dtype="float64") /* ty=Tensor[(2, 224), float64] */;
  %973 = cast(%var_2210, dtype="float64") /* ty=Tensor[(1, 112), float64] */;
  %974 = %971.7;
  %975 = cast(%974, dtype="uint8") /* ty=Tensor[(5, 16, 12), uint8] */;
  %976 = reshape(%972, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float64] */;
  %977 = reshape(%973, newshape=[2, 8, 7]) /* ty=Tensor[(2, 8, 7), float64] */;
  %978 = reshape(%975, newshape=[20, 48]) /* ty=Tensor[(20, 48), uint8] */;
  %979 = @func_98(%976, %977, %978) /* ty=(Tensor[(8, 8, 7), float64], Tensor[(2, 8, 7), bool], Tensor[(5, 16, 12), bool], Tensor[(20, 48), uint8], Tensor[(?, 8, 7), float32]) */;
  %980 = @func_1794() /* ty=(Tensor[(4, 3, 12), float32],) */;
  %981 = %979.1;
  %982 = %980.0;
  (%964, %974, meta[relay.Constant][58] /* ty=Tensor[(2, 224), float64] */, %var_2210, %981, %982)
}

def @func_9163(%var_9161: Tensor[(2, 10, 7), float32]) -> (Tensor[(2, 10, 7), float32], Tensor[(7, 15, 8), float32], Tensor[(840), float32]) {
  @func_9160(%var_9161) /* ty=(Tensor[(2, 10, 7), float32], Tensor[(7, 15, 8), float32], Tensor[(840), float32]) */
}

def @func_9497() -> Tensor[(448), float64] {
  %983 = fn () -> Tensor[(448), float64] {
    @func_5180() /* ty=Tensor[(448), float64] */
  };
  %983() /* ty=Tensor[(448), float64] */
}

def @func_4542(%var_4539: Tensor[(33, 1), float64], %var_4540: Tensor[(77, 6), float64]) -> (Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(77, 6), float64]) {
  %984 = cast(%var_4539, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
  %985 = cast(%var_4540, dtype="float64") /* ty=Tensor[(77, 6), float64] */;
  %986 = reshape(%984, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %987 = reshape(%985, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %988 = @func_2742(%986, %987) /* ty=(Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) */;
  %989 = @func_2196() /* ty=Tensor[(4, 3, 12), float32] */;
  %990 = @func_2462() /* ty=Tensor[(4, 3, 12), float64] */;
  %991 = %988.1;
  (%989, %990, %991, %var_4539, %var_4540)
}

def @func_2808() -> Tensor[(4, 3, 12), float32] {
  @func_2806() /* ty=Tensor[(4, 3, 12), float32] */
}

def @func_11(%var_0: Tensor[(5, 16, 12), uint8], %var_1: Tensor[(5, 16, 12), uint8]) -> (Tensor[(5, 16, 12), bool],) {
  %992 = cast(%var_1, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
  %993 = shape_of(%var_0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%var_0, dtype="bool") /* ty=Tensor[(5, 16, 12), bool] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %996 = greater_equal(%994, %995) /* ty=Tensor[(5, 16, 12), bool] */;
  (%996,)
}

def @func_3976() -> (Tensor[(448), float64],) {
  %999 = fn () -> (Tensor[(448), float64],) {
    %997 = @func_3484() /* ty=(Tensor[(4, 3, 12), float32], Tensor[(4, 3, 12), float64], Tensor[(?, 8, 7), float32], Tensor[(448), float64], Tensor[(56, 2), float64], Tensor[(60, 16), uint8]) */;
    %998 = %997.3;
    (%998,)
  };
  %999() /* ty=(Tensor[(448), float64],) */
}

def @func_1641() -> (Tensor[(4, 3, 12), float64],) {
  %1002 = fn () -> (Tensor[(4, 3, 12), float64],) {
    %1000 = @func_1211() /* ty=(Tensor[(4, 3, 12), float64],) */;
    %1001 = %1000.0;
    (%1001,)
  };
  %1002() /* ty=(Tensor[(4, 3, 12), float64],) */
}

def @func_5423(%var_5421: int16) -> Tensor[(11, 10, 6), int16] {
  @func_5420(%var_5421) /* ty=Tensor[(11, 10, 6), int16] */
}

def @func_3544(%var_3543: Tensor[(12, 16, 9), float32]) -> (Tensor[(14, 4, 15), float32], Tensor[(2, 420), float32], Tensor[(160), bool], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64], Tensor[(12, 16, 9), float32]) {
  %1019 = fn (%var_3512: Tensor[(12, 16, 9), float32]) -> (Tensor[(14, 4, 15), float32], Tensor[(2, 420), float32], Tensor[(160), bool], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64], Tensor[(12, 16, 9), float32]) {
    %1003 = cast(meta[relay.Constant][59] /* ty=Tensor[(2, 420), float32] */, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
    %1004 = cast(meta[relay.Constant][60] /* ty=Tensor[(160), bool] */, dtype="bool") /* ty=Tensor[(160), bool] */;
    %1005 = reshape(%1003, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), float32] */;
    %1006 = reshape(%1004, newshape=[160]) /* ty=Tensor[(160), bool] */;
    %1007 = @func_3506(%1005, %1006) /* ty=(Tensor[(14, 4, 15), float32], Tensor[(5, 16, 2), bool], Tensor[(160), bool]) */;
    %1008 = cast(meta[relay.Constant][61] /* ty=Tensor[(11, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 3), float64] */;
    %1009 = cast(meta[relay.Constant][62] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
    %1010 = reshape(%1008, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
    %1011 = reshape(%1009, newshape=[462]) /* ty=Tensor[(462), float64] */;
    %1012 = @func_2742(%1010, %1011) /* ty=(Tensor[(448), float64], Tensor[(11, 3, 14), float64], Tensor[(33, 1), float64], Tensor[(462), float64]) */;
    %1013 = cast(%var_3512, dtype="float32") /* ty=Tensor[(12, 16, 9), float32] */;
    %1014 = erf(%1013) /* ty=Tensor[(12, 16, 9), float32] */;
    %1015 = cast(%1014, dtype="float32") /* ty=Tensor[(12, 16, 9), float32] */;
    %1016 = %1007.0;
    %1017 = %1012.3;
    %1018 = atanh(%1015) /* ty=Tensor[(12, 16, 9), float32] */;
    (%1016, meta[relay.Constant][59] /* ty=Tensor[(2, 420), float32] */, meta[relay.Constant][60] /* ty=Tensor[(160), bool] */, %1017, meta[relay.Constant][61] /* ty=Tensor[(11, 3), float64] */, meta[relay.Constant][62] /* ty=Tensor[(462), float64] */, %1018)
  };
  %1019(%var_3543) /* ty=(Tensor[(14, 4, 15), float32], Tensor[(2, 420), float32], Tensor[(160), bool], Tensor[(462), float64], Tensor[(11, 3), float64], Tensor[(462), float64], Tensor[(12, 16, 9), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen587/build/output.py:2956: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen587/build/output.py", line 2961, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(182) tvmgen_default_fused_floor_mod_kernel0(float* __restrict__ T_floor_mod, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_floor_mod[(((int)threadIdx.x))] = (placeholder[((((((int)threadIdx.x) / 91) * 7) + (((int)threadIdx.x) % 7)))] - (floorf((placeholder[((((((int)threadIdx.x) / 91) * 7) + (((int)threadIdx.x) % 7)))] / placeholder1[(((int)threadIdx.x))])) * placeholder1[(((int)threadIdx.x))]));
}

extern "C" __global__ void __launch_bounds__(182) tvmgen_default_fused_sigmoid_kernel0(float* __restrict__ T_sigmoid, float* __restrict__ placeholder) {
  T_sigmoid[(((int)threadIdx.x))] = (1.000000e+00f / (1.000000e+00f + __expf((0.000000e+00f - placeholder[(((int)threadIdx.x))]))));
}

extern "C" __global__ void __launch_bounds__(182) tvmgen_default_fused_cast_atanh_kernel0(double* __restrict__ T_atanh, float* __restrict__ placeholder) {
  T_atanh[(((int)threadIdx.x))] = atanh(((double)placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


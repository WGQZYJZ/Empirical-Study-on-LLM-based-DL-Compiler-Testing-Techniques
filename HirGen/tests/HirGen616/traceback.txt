==========mod==========
#[version = "0.0.5"]
def @func_4380() -> (Tensor[(10, 11, 16), float64],) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %1 = sqrt(%0) /* ty=Tensor[(10, 11, 16), float64] */;
  (%1,)
}

def @func_12498() -> (Tensor[(10, 11, 16), float64],) {
  %2 = @func_11743() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(312), float32], Tensor[(150), int16], Tensor[(4, 10, 14), float32], Tensor[(560), float32], Tensor[(10, 11, 16), float64]) */;
  %3 = %2.6;
  (%3,)
}

def @func_6479() -> Tensor[(10, 11, 16), float64] {
  @func_5827() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_11997() -> Tensor[(150), int16] {
  @func_8175() /* ty=Tensor[(150), int16] */
}

def @func_5742() -> (Tensor[(10, 11, 16), float32],) {
  %4 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
  %5 = cast(%4, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %6 = log(%5) /* ty=Tensor[(10, 11, 16), float32] */;
  (%6,)
}

def @func_8303() -> Tensor[(10, 11, 16), float64] {
  %7 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %7.0
}

def @func_10611(%var_10605: Tensor[(2, 504), float32]) -> (Tensor[(10, 11, 16), float32], Tensor[(9, 7, 16), float32], Tensor[(2, 504), float32]) {
  %8 = @func_10281() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %9 = cast(%var_10605, dtype="float32") /* ty=Tensor[(2, 504), float32] */;
  %10 = reshape(%9, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float32] */;
  %11 = %8.0;
  %12 = @func_10494(%10) /* ty=Tensor[(9, 7, 16), float32] */;
  (%11, %12, %var_10605)
}

def @func_9545() -> (Tensor[(10, 11, 16), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float64]) {
  %13 = @func_8853() /* ty=(Tensor[(150), int16],) */;
  %14 = @func_8371() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %15 = @func_8911() /* ty=Tensor[(10, 11, 16), float32] */;
  %16 = %13.0;
  %17 = %14.0;
  (%15, %16, %17)
}

def @func_9377() -> (Tensor[(10, 11, 16), float32], Tensor[(312), float64], Tensor[(10, 11, 16), float64]) {
  %18 = @func_5742() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %19 = @func_9223() /* ty=(Tensor[(312), float32],) */;
  %20 = %19.0;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(312), float32] */, dtype="float64") /* ty=Tensor[(312), float64] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(1), int32] */;
  %23 = cast(%20, dtype="float64") /* ty=Tensor[(312), float64] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?), float64] */;
  %25 = @func_8167() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %26 = %18.0;
  %27 = floor_divide(%23, %24) /* ty=Tensor[(312), float64] */;
  %28 = %25.0;
  (%26, %27, %28)
}

def @func_12482() -> (Tensor[(10, 11, 16), float64], Tensor[(6, 14, 4), float64], Tensor[(336), float64]) {
  %29 = @func_9087() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %31 = reshape(%30, newshape=[6, 14, 4]) /* ty=Tensor[(6, 14, 4), float64] */;
  %32 = %29.0;
  %33 = @func_3030(%31) /* ty=Tensor[(6, 14, 4), float64] */;
  (%32, %33, meta[relay.Constant][2] /* ty=Tensor[(336), float64] */)
}

def @func_6404(%var_6366: Tensor[(4, 15, 10), float64], %var_6367: Tensor[(4, 15, 10), float64]) -> (Tensor[(4, 14, 14), float64], Tensor[(784), float64], Tensor[(4, 15, 10), bool]) {
  %34 = cast(meta[relay.Constant][3] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %35 = reshape(%34, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float64] */;
  %36 = cast(%var_6367, dtype="float64") /* ty=Tensor[(4, 15, 10), float64] */;
  %37 = shape_of(%var_6366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%var_6366, dtype="float64") /* ty=Tensor[(4, 15, 10), float64] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %40 = power(%38, %39) /* ty=Tensor[(4, 15, 10), float64] */;
  %41 = cast(%var_6366, dtype="bool") /* ty=Tensor[(4, 15, 10), bool] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%40, dtype="bool") /* ty=Tensor[(4, 15, 10), bool] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %45 = @func_2689(%35) /* ty=Tensor[(4, 14, 14), float64] */;
  %46 = equal(%43, %44) /* ty=Tensor[(4, 15, 10), bool] */;
  (%45, meta[relay.Constant][3] /* ty=Tensor[(784), float64] */, %46)
}

def @func_12361() -> Tensor[(15, 7, 6), uint32] {
  @func_10799() /* ty=Tensor[(15, 7, 6), uint32] */
}

def @func_7010() -> (Tensor[(10, 11, 16), float64],) {
  %47 = @func_5897() /* ty=Tensor[(10, 11, 16), float64] */;
  (%47,)
}

def @func_4667() -> Tensor[(10, 11, 16), float64] {
  %48 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %48.0
}

def @func_11011() -> Tensor[(6, 5, 14), float32] {
  %49 = @func_5998() /* ty=(Tensor[(6, 5, 14), float32],) */;
  %49.0
}

def @func_7390() -> (Tensor[(312), float32],) {
  %50 = @func_6245() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */;
  %51 = %50.2;
  (%51,)
}

def @func_8371() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  %52 = @func_6245() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */;
  %53 = @func_7191() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %54 = %52.0;
  %55 = %53.0;
  (%54, %55)
}

def @func_10494(%var_10488: Tensor[(9, 7, 16), float32]) -> Tensor[(9, 7, 16), float32] {
  %56 = cast(%var_10488, dtype="float32") /* ty=Tensor[(9, 7, 16), float32] */;
  atanh(%56) /* ty=Tensor[(9, 7, 16), float32] */
}

def @func_12702() -> (Tensor[(10, 11, 16), float64],) {
  %57 = @func_9693() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %58 = %57.0;
  (%58,)
}

def @func_12609() -> (Tensor[(312), float32],) {
  %59 = @func_10169() /* ty=(Tensor[(312), float32],) */;
  %60 = %59.0;
  (%60,)
}

def @func_5305() -> Tensor[(10, 11, 16), float64] {
  @func_4667() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_8167() -> (Tensor[(10, 11, 16), float64],) {
  %61 = @func_8023() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %62 = %61.0;
  %63 = cast(%62, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %64 = cosh(%63) /* ty=Tensor[(10, 11, 16), float64] */;
  (%64,)
}

def @func_10480(%var_10448: Tensor[(7, 6), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(312), float64], Tensor[(3, 7, 2), int16], Tensor[(7, 6), int16], Tensor[(10, 11, 16), float32]) {
  %65 = @func_9087() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %66 = @func_9377() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(312), float64], Tensor[(10, 11, 16), float64]) */;
  %67 = cast(%var_10448, dtype="int16") /* ty=Tensor[(7, 6), int16] */;
  %68 = reshape(%67, newshape=[3, 7, 2]) /* ty=Tensor[(3, 7, 2), int16] */;
  %69 = @func_3932(%68) /* ty=(Tensor[(3, 7, 2), int16],) */;
  %70 = @func_9300() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32]) */;
  %71 = %65.0;
  %72 = %66.1;
  %73 = %69.0;
  %74 = %70.0;
  (%71, %72, %73, %var_10448, %74)
}

def @func_7164() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  %75 = @func_5742() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %76 = %75.0;
  %77 = cast(%76, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %78 = reshape(%77, newshape=[10, 11, 16]) /* ty=Tensor[(10, 11, 16), float64] */;
  %79 = @func_4459(%78) /* ty=(Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), bool]) */;
  %80 = cast(%76, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %81 = %79.1;
  %82 = atanh(%80) /* ty=Tensor[(10, 11, 16), float32] */;
  (%81, %82)
}

def @func_8911() -> Tensor[(10, 11, 16), float32] {
  %83 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %83.1
}

def @func_10777() -> Tensor[(10, 11, 16), float64] {
  @func_5305() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_6073(%var_6045: Tensor[(224), int32]) -> (Tensor[(10, 11, 16), float64], Tensor[(4, 14, 14), float64], Tensor[(224), int32], Tensor[(70, 6), bool], Tensor[(70, 6), float64]) {
  %84 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %86 = cast(%var_6045, dtype="int32") /* ty=Tensor[(224), int32] */;
  %87 = reshape(%85, newshape=[10, 11, 16]) /* ty=Tensor[(10, 11, 16), float64] */;
  %88 = reshape(%86, newshape=[224]) /* ty=Tensor[(224), int32] */;
  %89 = @func_5405(%87, %88) /* ty=(Tensor[(16, 2, 7), int32], Tensor[(224), int32], Tensor[(10, 11, 16), uint64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) */;
  %90 = cast(meta[relay.Constant][4] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %91 = reshape(%90, newshape=[70, 6]) /* ty=Tensor[(70, 6), float64] */;
  %92 = @func_5069(%91) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(70, 6), float64]) */;
  %93 = %92.2;
  %94 = cast(meta[relay.Constant][4] /* ty=Tensor[(420), float64] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(2), int32] */;
  %96 = cast(%93, dtype="bool") /* ty=Tensor[(70, 6), bool] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %98 = cast(%93, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
  %99 = %89.3;
  %100 = greater_equal(%96, %97) /* ty=Tensor[(70, 6), bool] */;
  %101 = atan(%98) /* ty=Tensor[(70, 6), float64] */;
  (%84, %99, %var_6045, %100, %101)
}

def @func_8132(%var_8130: Tensor[(675), float32]) -> (Tensor[(10, 11, 16), float64], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(7, 1, 1), float64], Tensor[(675), float32]) {
  %102 = @func_5844() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %103 = cast(meta[relay.Constant][5] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %104 = reshape(%103, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
  %105 = @func_97(%104) /* ty=(Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) */;
  %106 = cast(%var_8130, dtype="float32") /* ty=Tensor[(675), float32] */;
  %107 = cast(meta[relay.Constant][5] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %108 = reshape(%106, newshape=[9, 15, 5]) /* ty=Tensor[(9, 15, 5), float32] */;
  %109 = reshape(%107, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %110 = @func_564(%108, %109) /* ty=(Tensor[(9, 15, 5), float32], Tensor[(7, 1, 1), float64], Tensor[(7), float64], Tensor[(7, 1, 1), float64]) */;
  %111 = %102.0;
  %112 = %105.1;
  %113 = %110.3;
  (%111, %112, meta[relay.Constant][5] /* ty=Tensor[(7), float64] */, %113, %var_8130)
}

def @func_10752(%var_10750: Tensor[(14, 3), int16]) -> (Tensor[(10, 11, 16), float32], Tensor[(3, 7, 2), int16], Tensor[(14, 3), int16]) {
  %114 = @func_9300() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32]) */;
  %115 = cast(%var_10750, dtype="int16") /* ty=Tensor[(14, 3), int16] */;
  %116 = reshape(%115, newshape=[7, 6]) /* ty=Tensor[(7, 6), int16] */;
  %117 = @func_10480(%116) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(312), float64], Tensor[(3, 7, 2), int16], Tensor[(7, 6), int16], Tensor[(10, 11, 16), float32]) */;
  %118 = %114.0;
  %119 = %117.2;
  (%118, %119, %var_10750)
}

def @func_12400() -> (Tensor[(10, 11, 16), float32],) {
  %120 = @func_10324() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) */;
  %121 = %120.1;
  (%121,)
}

def @func_5240() -> (Tensor[(10, 11, 16), float64],) {
  %122 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  (%122,)
}

def @func_8210() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) {
  %123 = @func_5268() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %124 = @func_8167() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %125 = %123.0;
  %126 = @func_7093() /* ty=Tensor[(10, 11, 16), float64] */;
  %127 = %124.0;
  %128 = @func_7093() /* ty=Tensor[(10, 11, 16), float64] */;
  (%125, %126, %127, %128)
}

def @func_564(%var_508: Tensor[(9, 15, 5), float32], %var_546: Tensor[(7), float64]) -> (Tensor[(9, 15, 5), float32], Tensor[(7, 1, 1), float64], Tensor[(7), float64], Tensor[(7, 1, 1), float64]) {
  %129 = cast(%var_508, dtype="float32") /* ty=Tensor[(9, 15, 5), float32] */;
  %130 = cast(%var_546, dtype="float64") /* ty=Tensor[(7), float64] */;
  %131 = reshape(%130, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
  %132 = @func_97(%131) /* ty=(Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) */;
  %133 = cast(%var_546, dtype="float64") /* ty=Tensor[(7), float64] */;
  %134 = reshape(%133, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
  %135 = @func_97(%134) /* ty=(Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) */;
  %136 = sinh(%129) /* ty=Tensor[(9, 15, 5), float32] */;
  %137 = %132.0;
  %138 = %135.0;
  (%136, %137, %var_546, %138)
}

def @func_5190() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) {
  %139 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  %140 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
  (%139, %140)
}

def @func_10324() -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) {
  %141 = @func_7543() /* ty=Tensor[(10, 11, 16), float32] */;
  %142 = @func_8911() /* ty=Tensor[(10, 11, 16), float32] */;
  (%141, %142)
}

def @func_12093() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(784), bool], Tensor[(4, 196), bool], Tensor[(11, 14, 14), bool], Tensor[(420), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  %143 = @func_9087() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %144 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 196), float64] */, dtype="float64") /* ty=Tensor[(4, 196), float64] */;
  %145 = reshape(%144, newshape=[784]) /* ty=Tensor[(784), float64] */;
  %146 = @func_8609(%145) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) */;
  %147 = %146.2;
  %148 = cast(meta[relay.Constant][7] /* ty=Tensor[(784), float64] */, dtype="bool") /* ty=Tensor[(784), bool] */;
  %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(1), int32] */;
  %150 = cast(%147, dtype="bool") /* ty=Tensor[(784), bool] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?), bool] */;
  %152 = cast(meta[relay.Constant][7] /* ty=Tensor[(784), float64] */, dtype="bool") /* ty=Tensor[(784), bool] */;
  %153 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(4, 196), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %154 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 196), float64] */, dtype="bool") /* ty=Tensor[(4, 196), bool] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %156 = cast(meta[relay.Constant][8] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %157 = reshape(%156, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %158 = @func_4953(%157) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(11, 14, 14), bool], Tensor[(154), bool], Tensor[(2156), bool]) */;
  %159 = @func_10281() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %160 = %143.0;
  %161 = @func_8303() /* ty=Tensor[(10, 11, 16), float64] */;
  %162 = equal(%150, %151) /* ty=Tensor[(784), bool] */;
  %163 = less(%154, %155) /* ty=Tensor[(4, 196), bool] */;
  %164 = %158.3;
  %165 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
  %166 = %159.0;
  (%160, %161, %162, %163, %164, meta[relay.Constant][8] /* ty=Tensor[(420), float64] */, %165, %166)
}

def @func_5203(%var_5197: Tensor[(16, 2, 7), int32], %var_5198: Tensor[(16, 2, 7), int32]) -> (Tensor[(16, 2, 7), int32],) {
  %167 = cast(%var_5198, dtype="int32") /* ty=Tensor[(16, 2, 7), int32] */;
  %168 = shape_of(%var_5197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%var_5197, dtype="int32") /* ty=Tensor[(16, 2, 7), int32] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %171 = bitwise_xor(%169, %170) /* ty=Tensor[(16, 2, 7), int32] */;
  (%171,)
}

def @func_11106(%var_11100: Tensor[(150), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(420), float64], Tensor[(150), int16], Tensor[(10, 11, 16), float64]) {
  %172 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %173 = @func_9545() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float64]) */;
  %174 = @func_8828() /* ty=(Tensor[(312), float32], Tensor[(10, 11, 16), float64]) */;
  %175 = cast(%var_11100, dtype="int16") /* ty=Tensor[(150), int16] */;
  %176 = reshape(%175, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), int16] */;
  %177 = @func_3837(%176) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) */;
  %178 = @func_5240() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %179 = %172.1;
  %180 = %173.2;
  %181 = %174.1;
  %182 = %177.1;
  %183 = %178.0;
  (%179, %180, %181, %182, %var_11100, %183)
}

def @func_3442(%var_3428: Tensor[(13, 12, 2), float32]) -> (Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) {
  %184 = cast(%var_3428, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
  %185 = cast(meta[relay.Constant][9] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %186 = reshape(%185, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), float64] */;
  %187 = @func_2661(%186) /* ty=(Tensor[(6, 5, 14), float64],) */;
  %188 = cos(%184) /* ty=Tensor[(13, 12, 2), float32] */;
  %189 = %187.0;
  (%188, %189, meta[relay.Constant][9] /* ty=Tensor[(420), float64] */)
}

def @func_5581() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32]) {
  %190 = @func_5240() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %191 = cast(meta[relay.Constant][10] /* ty=Tensor[(224), int32] */, dtype="int32") /* ty=Tensor[(224), int32] */;
  %192 = cast(meta[relay.Constant][10] /* ty=Tensor[(224), int32] */, dtype="int32") /* ty=Tensor[(224), int32] */;
  %193 = reshape(%191, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
  %194 = reshape(%192, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
  %195 = @func_5203(%193, %194) /* ty=(Tensor[(16, 2, 7), int32],) */;
  %196 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
  %197 = %190.0;
  %198 = %195.0;
  (%196, %197, %198, meta[relay.Constant][10] /* ty=Tensor[(224), int32] */)
}

def @func_6245() -> (Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) {
  %199 = @func_5921() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %200 = cast(meta[relay.Constant][11] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %201 = reshape(%200, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
  %202 = @func_3442(%201) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) */;
  %203 = %199.0;
  %204 = %202.0;
  (%203, %204, meta[relay.Constant][11] /* ty=Tensor[(312), float32] */)
}

def @func_5268() -> (Tensor[(10, 11, 16), float64],) {
  %205 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
  (%205,)
}

def @func_6656() -> (Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) {
  %206 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %207 = cast(meta[relay.Constant][12] /* ty=Tensor[(2400), uint64] */, dtype="uint64") /* ty=Tensor[(2400), uint64] */;
  %208 = reshape(%207, newshape=[2400]) /* ty=Tensor[(2400), uint64] */;
  %209 = @func_6179(%208) /* ty=(Tensor[(15, 7, 6), uint32], Tensor[(15, 7, 6), float32], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], uint64, Tensor[(1620), int64], Tensor[(2400), uint64], Tensor[(5, 30), int16], Tensor[(10, 11, 16), float64]) */;
  %210 = %206.0;
  %211 = %209.0;
  (%210, %211, meta[relay.Constant][12] /* ty=Tensor[(2400), uint64] */)
}

def @func_4993() -> Tensor[(10, 11, 16), float64] {
  @func_4667() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_6754(%var_6739: Tensor[(6, 5, 14), float32]) -> Tensor[(6, 5, 14), int16] {
  %212 = @func_5998() /* ty=(Tensor[(6, 5, 14), float32],) */;
  %213 = %212.0;
  %214 = cast(%var_6739, dtype="int16") /* ty=Tensor[(6, 5, 14), int16] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%213, dtype="int16") /* ty=Tensor[(6, 5, 14), int16] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  maximum(%216, %217) /* ty=Tensor[(6, 5, 14), int16] */
}

def @func_6453(%var_6445: Tensor[(13, 10, 9), float64]) -> (Tensor[(13, 10, 9), float64],) {
  %218 = cast(%var_6445, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
  %219 = sinh(%218) /* ty=Tensor[(13, 10, 9), float64] */;
  (%219,)
}

def @func_3724(%var_3716: Tensor[(10, 16, 15), uint64]) -> (Tensor[(10, 16, 15), uint64],) {
  %220 = cast(%var_3716, dtype="uint64") /* ty=Tensor[(10, 16, 15), uint64] */;
  %221 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(10, 16, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 16, 15), uint64] */, dtype="uint64") /* ty=Tensor[(10, 16, 15), uint64] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %224 = logical_xor(%222, %223) /* ty=Tensor[(10, 16, 15), uint64] */;
  (%224,)
}

def @func_10720() -> Tensor[(10, 11, 16), float32] {
  %225 = @func_8538() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %225.0
}

def @func_11122() -> (Tensor[(10, 11, 16), float64],) {
  %226 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
  (%226,)
}

def @func_10014() -> Tensor[(10, 11, 16), float32] {
  %227 = @func_8861() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %227.0
}

def @func_9967() -> Tensor[(10, 11, 16), float64] {
  %228 = @func_8562() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) */;
  %228.1
}

def @func_7059() -> (Tensor[(10, 11, 16), float32],) {
  %229 = @func_5581() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32]) */;
  %230 = %229.1;
  %231 = cast(%230, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %232 = rsqrt(%231) /* ty=Tensor[(10, 11, 16), float32] */;
  (%232,)
}

def @func_8769() -> (Tensor[(6, 5, 14), float32], Tensor[(10, 11, 16), float64]) {
  %233 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %234 = %233.0;
  %235 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  (%234, %235)
}

def @func_8609(%var_8604: Tensor[(784), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) {
  %236 = cast(%var_8604, dtype="float64") /* ty=Tensor[(784), float64] */;
  %237 = reshape(%236, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float64] */;
  %238 = @func_6479() /* ty=Tensor[(10, 11, 16), float64] */;
  %239 = @func_2689(%237) /* ty=Tensor[(4, 14, 14), float64] */;
  (%238, %239, %var_8604)
}

def @func_12546() -> Tensor[(10, 11, 16), float64] {
  %240 = @func_9693() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %240.0
}

def @func_11265() -> (Tensor[(312), float32], Tensor[(12, 13, 15), float64], Tensor[(10, 11, 16), float32], Tensor[(2340, 1), float64]) {
  %241 = cast(meta[relay.Constant][14] /* ty=Tensor[(2340, 1), float64] */, dtype="float64") /* ty=Tensor[(2340, 1), float64] */;
  %242 = reshape(%241, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float64] */;
  %243 = @func_8371() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %244 = cast(meta[relay.Constant][14] /* ty=Tensor[(2340, 1), float64] */, dtype="float64") /* ty=Tensor[(2340, 1), float64] */;
  %245 = @func_9325() /* ty=Tensor[(312), float32] */;
  %246 = @func_5752(%242) /* ty=Tensor[(12, 13, 15), float64] */;
  %247 = %243.1;
  %248 = cos(%244) /* ty=Tensor[(2340, 1), float64] */;
  (%245, %246, %247, %248)
}

def @func_5776(%var_5772: Tensor[(2400), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 16, 15), uint64], Tensor[(2400), uint64]) {
  %249 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %250 = cast(%var_5772, dtype="uint64") /* ty=Tensor[(2400), uint64] */;
  %251 = reshape(%250, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint64] */;
  %252 = @func_3724(%251) /* ty=(Tensor[(10, 16, 15), uint64],) */;
  %253 = %249.0;
  %254 = %252.0;
  (%253, %254, %var_5772)
}

def @func_3837(%var_3812: Tensor[(10, 3, 5), int16]) -> (Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) {
  %255 = cast(%var_3812, dtype="bool") /* ty=Tensor[(10, 3, 5), bool] */;
  %256 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(10, 3, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 3, 5), int16] */, dtype="bool") /* ty=Tensor[(10, 3, 5), bool] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %259 = cast(meta[relay.Constant][16] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %260 = reshape(%259, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), float64] */;
  %261 = @func_2661(%260) /* ty=(Tensor[(6, 5, 14), float64],) */;
  %262 = %261.0;
  %263 = cast(%262, dtype="float32") /* ty=Tensor[(6, 5, 14), float32] */;
  %264 = not_equal(%257, %258) /* ty=Tensor[(10, 3, 5), bool] */;
  %265 = sin(%263) /* ty=Tensor[(6, 5, 14), float32] */;
  (%264, meta[relay.Constant][16] /* ty=Tensor[(420), float64] */, %265)
}

def @func_2689(%var_2681: Tensor[(4, 14, 14), float64]) -> Tensor[(4, 14, 14), float64] {
  %266 = cast(%var_2681, dtype="float64") /* ty=Tensor[(4, 14, 14), float64] */;
  cos(%266) /* ty=Tensor[(4, 14, 14), float64] */
}

def @func_389(%var_359: uint64, %var_360: Tensor[(1, 1, 7), uint64]) -> (Tensor[(1, 1, 7), uint64], Tensor[(7, 1, 1), float32]) {
  %267 = cast(%var_359, dtype="uint64") /* ty=uint64 */;
  %268 = cast(%var_360, dtype="uint64") /* ty=Tensor[(1, 1, 7), uint64] */;
  %269 = cast(%var_360, dtype="float64") /* ty=Tensor[(1, 1, 7), float64] */;
  %270 = reshape(%269, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
  %271 = @func_97(%270) /* ty=(Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) */;
  %272 = maximum(%267, %268) /* ty=Tensor[(1, 1, 7), uint64] */;
  %273 = %271.1;
  (%272, %273)
}

def @func_8790(%var_8780: Tensor[(5, 4, 4), uint16]) -> (Tensor[(5, 4, 4), uint16],) {
  %274 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 4, 4), uint16] */, dtype="uint16") /* ty=Tensor[(1, 4, 4), uint16] */;
  %275 = cast(%var_8780, dtype="uint16") /* ty=Tensor[(5, 4, 4), uint16] */;
  %276 = bitwise_xor(%274, %275) /* ty=Tensor[(5, 4, 4), uint16] */;
  (%276,)
}

def @func_11951() -> Tensor[(13, 12, 2), float64] {
  %277 = @func_11459() /* ty=(Tensor[(13, 12, 2), float64],) */;
  %277.0
}

def @func_97(%var_58: Tensor[(7, 1, 1), float64]) -> (Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) {
  %278 = cast(%var_58, dtype="float64") /* ty=Tensor[(7, 1, 1), float64] */;
  %279 = cast(%var_58, dtype="float32") /* ty=Tensor[(7, 1, 1), float32] */;
  %280 = atan(%278) /* ty=Tensor[(7, 1, 1), float64] */;
  %281 = log2(%279) /* ty=Tensor[(7, 1, 1), float32] */;
  (%280, %281)
}

def @func_6885(%var_6836: Tensor[(420), float64]) -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(420), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) {
  %282 = @func_5742() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %283 = cast(%var_6836, dtype="float64") /* ty=Tensor[(420), float64] */;
  %284 = reshape(%283, newshape=[70, 6]) /* ty=Tensor[(70, 6), float64] */;
  %285 = @func_5069(%284) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(70, 6), float64]) */;
  %286 = %282.0;
  %287 = %285.0;
  %288 = @func_6785() /* ty=Tensor[(10, 11, 16), float64] */;
  %289 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
  (%286, %287, %var_6836, %288, %289)
}

def @func_9938() -> (Tensor[(312), float32], Tensor[(10, 11, 16), float32]) {
  %290 = @func_7390() /* ty=(Tensor[(312), float32],) */;
  %291 = @func_7059() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %292 = %290.0;
  %293 = %291.0;
  (%292, %293)
}

def @func_9223() -> (Tensor[(312), float32],) {
  %294 = @func_7390() /* ty=(Tensor[(312), float32],) */;
  %295 = %294.0;
  (%295,)
}

def @func_11347(%var_11343: Tensor[(147), float64]) -> (Tensor[(10, 11, 16), float32], Tensor[(3, 7, 7), float64], Tensor[(147), float64]) {
  %296 = @func_8562() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) */;
  %297 = cast(%var_11343, dtype="float64") /* ty=Tensor[(147), float64] */;
  %298 = reshape(%297, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), float64] */;
  %299 = %296.0;
  %300 = @func_9255(%298) /* ty=Tensor[(3, 7, 7), float64] */;
  (%299, %300, %var_11343)
}

def @func_7191() -> (Tensor[(10, 11, 16), float32],) {
  %301 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %302 = %301.2;
  (%302,)
}

def @func_8175() -> Tensor[(150), int16] {
  %303 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %303.1
}

def @func_5148() -> (Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) {
  %304 = cast(meta[relay.Constant][18] /* ty=Tensor[(150), int16] */, dtype="int16") /* ty=Tensor[(150), int16] */;
  %305 = reshape(%304, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), int16] */;
  %306 = @func_3837(%305) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) */;
  %307 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  %308 = cast(%307, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %309 = acosh(%308) /* ty=Tensor[(10, 11, 16), float32] */;
  %310 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 11, 16), float32] */, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%309, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %314 = %306.2;
  %315 = mod(%312, %313) /* ty=Tensor[(10, 11, 16), float32] */;
  (%314, meta[relay.Constant][18] /* ty=Tensor[(150), int16] */, %315)
}

def @func_10139() -> Tensor[(150), int16] {
  @func_8175() /* ty=Tensor[(150), int16] */
}

def @func_12643() -> Tensor[(10, 11, 16), float64] {
  %316 = @func_9219() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %316.0
}

def @func_10799() -> Tensor[(15, 7, 6), uint32] {
  %317 = @func_6656() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) */;
  %317.1
}

def @func_9219() -> (Tensor[(10, 11, 16), float64],) {
  %318 = @func_8023() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %319 = %318.0;
  (%319,)
}

def @func_9646(%var_9623: Tensor[(420), float32]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), int16], Tensor[(420), float32]) {
  %320 = @func_6245() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */;
  %321 = @func_8210() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %322 = cast(%var_9623, dtype="float32") /* ty=Tensor[(420), float32] */;
  %323 = reshape(%322, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), float32] */;
  %324 = %320.0;
  %325 = %321.3;
  %326 = @func_6754(%323) /* ty=Tensor[(6, 5, 14), int16] */;
  (%324, %325, %326, %var_9623)
}

def @func_10243() -> (Tensor[(10, 11, 16), uint8], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  %327 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %328 = %327.1;
  %329 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 11, 16), float32] */, dtype="uint8") /* ty=Tensor[(10, 11, 16), uint8] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%328, dtype="uint8") /* ty=Tensor[(10, 11, 16), uint8] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %333 = @func_7059() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %334 = bitwise_or(%331, %332) /* ty=Tensor[(10, 11, 16), uint8] */;
  %335 = @func_5897() /* ty=Tensor[(10, 11, 16), float64] */;
  %336 = %333.0;
  (%334, %335, %336)
}

def @func_9300() -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32]) {
  %337 = @func_8023() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %338 = %337.0;
  %339 = cast(%338, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %340 = @func_8562() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) */;
  %341 = @func_8167() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %342 = @func_6656() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) */;
  %343 = exp(%339) /* ty=Tensor[(10, 11, 16), float32] */;
  %344 = %340.0;
  %345 = %341.0;
  %346 = %342.1;
  (%343, %344, %345, %346)
}

def @func_10970(%var_10927: Tensor[(32), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(312), float32], Tensor[(10, 11, 16), float64], Tensor[(32), float64], Tensor[(10, 11, 16), float64], Tensor[(2, 16, ?), float64], Tensor[(224), int32]) {
  %347 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %348 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %349 = cast(%var_10927, dtype="float64") /* ty=Tensor[(32), float64] */;
  %350 = reshape(%349, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), float64] */;
  %351 = @func_1723(%350) /* ty=Tensor[(2, 16, ?), int32] */;
  %352 = cast(%351, dtype="float64") /* ty=Tensor[(2, 16, ?), float64] */;
  %353 = @func_5581() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32]) */;
  %354 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
  %355 = @func_9325() /* ty=Tensor[(312), float32] */;
  %356 = %347.0;
  %357 = %348.0;
  %358 = acosh(%352) /* ty=Tensor[(2, 16, ?), float64] */;
  %359 = %353.3;
  (%354, %355, %356, %var_10927, %357, %358, %359)
}

def @func_8321() -> (Tensor[(10, 11, 16), float64],) {
  %360 = @func_5921() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %361 = %360.0;
  (%361,)
}

def @func_12270(%var_12212: Tensor[(13, 12, 2), float64], %var_12218: Tensor[(675), float32]) -> (Tensor[(13, 12, 2), int32], Tensor[(75, 9), float32], Tensor[(15, 5, 6), float64], Tensor[(450), float64], Tensor[(10, 11, 16), float64], Tensor[(75, 9), float64], Tensor[(675), float32], Tensor[(2, 16, ?), int32], Tensor[(16, 2), float64]) {
  %362 = @func_11951() /* ty=Tensor[(13, 12, 2), float64] */;
  %363 = cast(%var_12212, dtype="int32") /* ty=Tensor[(13, 12, 2), int32] */;
  %364 = shape_of(%362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%362, dtype="int32") /* ty=Tensor[(13, 12, 2), int32] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %367 = cast(%var_12218, dtype="float32") /* ty=Tensor[(675), float32] */;
  %368 = reshape(%367, newshape=[75, 9]) /* ty=Tensor[(75, 9), float32] */;
  %369 = @func_4872(%368) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(7), float64], Tensor[(75, 9), float32], Tensor[(7), float64]) */;
  %370 = %369.2;
  %371 = cast(%var_12218, dtype="float32") /* ty=Tensor[(675), float32] */;
  %372 = shape_of(%370, dtype="int32") /* ty=Tensor[(2), int32] */;
  %373 = cast(%370, dtype="float32") /* ty=Tensor[(75, 9), float32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %375 = cast(meta[relay.Constant][21] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %376 = reshape(%375, newshape=[15, 5, 6]) /* ty=Tensor[(15, 5, 6), float64] */;
  %377 = @func_9671(%376) /* ty=(Tensor[(15, 5, 6), float64],) */;
  %378 = @func_5268() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %379 = cast(%370, dtype="float32") /* ty=Tensor[(75, 9), float32] */;
  %380 = tan(%379) /* ty=Tensor[(75, 9), float32] */;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(75, 9), float64] */;
  %382 = cast(%var_12218, dtype="float32") /* ty=Tensor[(675), float32] */;
  %383 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 2), float64] */;
  %384 = reshape(%383, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), float64] */;
  %385 = bitwise_and(%365, %366) /* ty=Tensor[(13, 12, 2), int32] */;
  %386 = floor_mod(%373, %374) /* ty=Tensor[(75, 9), float32] */;
  %387 = %377.0;
  %388 = %378.0;
  %389 = acosh(%381) /* ty=Tensor[(75, 9), float64] */;
  %390 = atanh(%382) /* ty=Tensor[(675), float32] */;
  %391 = @func_1723(%384) /* ty=Tensor[(2, 16, ?), int32] */;
  (%385, %386, %387, meta[relay.Constant][21] /* ty=Tensor[(450), float64] */, %388, %389, %390, %391, meta[relay.Constant][22] /* ty=Tensor[(16, 2), float64] */)
}

def @func_10114(%var_10111: Tensor[(784), float64]) -> (Tensor[(224), int32], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) {
  %392 = @func_5581() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32]) */;
  %393 = cast(%var_10111, dtype="float64") /* ty=Tensor[(784), float64] */;
  %394 = reshape(%393, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float64] */;
  %395 = %392.3;
  %396 = @func_2689(%394) /* ty=Tensor[(4, 14, 14), float64] */;
  (%395, %396, %var_10111)
}

def @func_6179(%var_6146: Tensor[(2400), uint64]) -> (Tensor[(15, 7, 6), uint32], Tensor[(15, 7, 6), float32], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], uint64, Tensor[(1620), int64], Tensor[(2400), uint64], Tensor[(5, 30), int16], Tensor[(10, 11, 16), float64]) {
  %397 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 7, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 7, 6), float32] */;
  %398 = log2(%397) /* ty=Tensor[(15, 7, 6), float32] */;
  %399 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 7, 6), float32] */, dtype="uint32") /* ty=Tensor[(15, 7, 6), uint32] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="uint32") /* ty=Tensor[(15, 7, 6), uint32] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %403 = cast(%398, dtype="float32") /* ty=Tensor[(15, 7, 6), float32] */;
  %404 = @func_5921() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %405 = @func_5921() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %406 = cast(meta[relay.Constant][24] /* ty=Tensor[(1620), int64] */, dtype="int64") /* ty=Tensor[(1620), int64] */;
  %407 = cast(%var_6146, dtype="uint64") /* ty=Tensor[(2400), uint64] */;
  %408 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 30), int16] */, dtype="int16") /* ty=Tensor[(5, 30), int16] */;
  %409 = reshape(%406, newshape=[90, 18]) /* ty=Tensor[(90, 18), int64] */;
  %410 = reshape(%407, newshape=[20, 120]) /* ty=Tensor[(20, 120), uint64] */;
  %411 = reshape(%408, newshape=[150]) /* ty=Tensor[(150), int16] */;
  %412 = @func_4827(%409, %410, %411) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], uint64, Tensor[(7), uint64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(4, 14, 2), int64], Tensor[(15, 9), int64], Tensor[(10, 11, 16), float64], Tensor[(20, 120), uint64], Tensor[(10, 11, 16), float64], Tensor[(90, 18), bool], Tensor[(1, 1, 7), uint64], Tensor[(10, 3, 5), bool], Tensor[(150), int16], Tensor[(90, 18), float64], Tensor[(6, 14, 4), float64], Tensor[(336), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */;
  %413 = right_shift(%401, %402) /* ty=Tensor[(15, 7, 6), uint32] */;
  %414 = exp(%403) /* ty=Tensor[(15, 7, 6), float32] */;
  %415 = %404.0;
  %416 = %405.0;
  %417 = %412.2;
  %418 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
  (%413, %414, %415, %416, %417, meta[relay.Constant][24] /* ty=Tensor[(1620), int64] */, %var_6146, meta[relay.Constant][25] /* ty=Tensor[(5, 30), int16] */, %418)
}

def @func_3030(%var_3014: Tensor[(6, 14, 4), float64]) -> Tensor[(6, 14, 4), float64] {
  %419 = cast(%var_3014, dtype="float64") /* ty=Tensor[(6, 14, 4), float64] */;
  cosh(%419) /* ty=Tensor[(6, 14, 4), float64] */
}

def @func_7472(%var_7396: Tensor[(5, 9, 16), float64], %var_7465: Tensor[(5, 9, 16), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32], Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(5, 9, 16), int16], Tensor[(5, 9, 16), uint64]) {
  %420 = cast(meta[relay.Constant][26] /* ty=Tensor[(224), int32] */, dtype="int32") /* ty=Tensor[(224), int32] */;
  %421 = cast(meta[relay.Constant][26] /* ty=Tensor[(224), int32] */, dtype="int32") /* ty=Tensor[(224), int32] */;
  %422 = reshape(%420, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
  %423 = reshape(%421, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
  %424 = @func_5203(%422, %423) /* ty=(Tensor[(16, 2, 7), int32],) */;
  %425 = cast(meta[relay.Constant][27] /* ty=Tensor[(150), int16] */, dtype="int16") /* ty=Tensor[(150), int16] */;
  %426 = reshape(%425, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), int16] */;
  %427 = @func_3837(%426) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) */;
  %428 = cast(%var_7396, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %429 = log10(%428) /* ty=Tensor[(5, 9, 16), float64] */;
  %430 = cast(%var_7396, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %431 = log(%430) /* ty=Tensor[(5, 9, 16), float64] */;
  %432 = cast(%431, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %433 = shape_of(%var_7396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %434 = cast(%var_7396, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %436 = logical_and(%434, %435) /* ty=Tensor[(5, 9, 16), bool] */;
  %437 = cast(%436, dtype="int16") /* ty=Tensor[(5, 9, 16), int16] */;
  %438 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%429, dtype="int16") /* ty=Tensor[(5, 9, 16), int16] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %441 = cast(%436, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %442 = asinh(%441) /* ty=Tensor[(5, 9, 16), float64] */;
  %443 = cast(%var_7465, dtype="uint64") /* ty=Tensor[(5, 9, 16), uint64] */;
  %444 = shape_of(%442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%442, dtype="uint64") /* ty=Tensor[(5, 9, 16), uint64] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %447 = @func_6785() /* ty=Tensor[(10, 11, 16), float64] */;
  %448 = %424.0;
  %449 = %427.2;
  %450 = right_shift(%439, %440) /* ty=Tensor[(5, 9, 16), int16] */;
  %451 = bitwise_and(%445, %446) /* ty=Tensor[(5, 9, 16), uint64] */;
  (%447, %448, meta[relay.Constant][26] /* ty=Tensor[(224), int32] */, %449, meta[relay.Constant][27] /* ty=Tensor[(150), int16] */, %450, %451)
}

def @func_596(%var_590: Tensor[(11, 1, 14), bool], %var_591: Tensor[(11, 14, 14), bool]) -> Tensor[(11, 14, 14), bool] {
  %452 = cast(%var_590, dtype="bool") /* ty=Tensor[(11, 1, 14), bool] */;
  %453 = cast(%var_591, dtype="bool") /* ty=Tensor[(11, 14, 14), bool] */;
  logical_or(%452, %453) /* ty=Tensor[(11, 14, 14), bool] */
}

def @func_1723(%var_1691: Tensor[(2, 16, 1), float64]) -> Tensor[(2, 16, ?), int32] {
  %454 = cast(%var_1691, dtype="float64") /* ty=Tensor[(2, 16, 1), float64] */;
  %455 = acos(%454) /* ty=Tensor[(2, 16, 1), float64] */;
  %456 = cast(%var_1691, dtype="int32") /* ty=Tensor[(2, 16, 1), int32] */;
  %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%455, dtype="int32") /* ty=Tensor[(2, 16, 1), int32] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_and(%458, %459) /* ty=Tensor[(2, 16, ?), int32] */
}

def @func_11566() -> (Tensor[(10, 11, 16), float32],) {
  %460 = @func_7550() /* ty=Tensor[(10, 11, 16), float32] */;
  (%460,)
}

def @func_3876(%var_3852: Tensor[(15, 1, 9), int64], %var_3853: Tensor[(15, 12, 9), int64], %var_3869: Tensor[(15, 12, 9), int64]) -> (Tensor[(15, 12, 9), bool], Tensor[(4, 14, 2), int64], Tensor[(112), int64], Tensor[(15, 12, 9), float64]) {
  %461 = cast(%var_3852, dtype="bool") /* ty=Tensor[(15, 1, 9), bool] */;
  %462 = cast(%var_3853, dtype="bool") /* ty=Tensor[(15, 12, 9), bool] */;
  %463 = cast(meta[relay.Constant][28] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %464 = reshape(%463, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), int64] */;
  %465 = cast(%var_3869, dtype="float64") /* ty=Tensor[(15, 12, 9), float64] */;
  %466 = shape_of(%var_3853, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%var_3853, dtype="float64") /* ty=Tensor[(15, 12, 9), float64] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %469 = less_equal(%461, %462) /* ty=Tensor[(15, 12, 9), bool] */;
  %470 = @func_1002(%464) /* ty=Tensor[(4, 14, 2), int64] */;
  %471 = floor_mod(%467, %468) /* ty=Tensor[(15, 12, 9), float64] */;
  (%469, %470, meta[relay.Constant][28] /* ty=Tensor[(112), int64] */, %471)
}

def @func_9439() -> (Tensor[(13, 12, 2), float32],) {
  %472 = @func_6245() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */;
  %473 = %472.1;
  %474 = cast(%473, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
  %475 = atan(%474) /* ty=Tensor[(13, 12, 2), float32] */;
  (%475,)
}

def @func_1002(%var_974: Tensor[(4, 14, 2), int64]) -> Tensor[(4, 14, 2), int64] {
  %476 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 14, 2), int64] */, dtype="int64") /* ty=Tensor[(4, 14, 2), int64] */;
  %477 = shape_of(%var_974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%var_974, dtype="int64") /* ty=Tensor[(4, 14, 2), int64] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_and(%478, %479) /* ty=Tensor[(4, 14, 2), int64] */
}

def @func_8562() -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) {
  %480 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %481 = @func_8167() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %482 = %480.1;
  %483 = %481.0;
  (%482, %483)
}

def @func_8677(%var_8666: Tensor[(1, 32), float64]) -> (Tensor[(10, 11, 16), float32], Tensor[(?, 32), bool]) {
  %484 = @func_8562() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) */;
  %485 = cast(%var_8666, dtype="float64") /* ty=Tensor[(1, 32), float64] */;
  %486 = reshape(%485, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), float64] */;
  %487 = @func_1723(%486) /* ty=Tensor[(2, 16, ?), int32] */;
  %488 = cast(%487, dtype="bool") /* ty=Tensor[(2, 16, ?), bool] */;
  %489 = shape_of(%var_8666, dtype="int32") /* ty=Tensor[(2), int32] */;
  %490 = cast(%var_8666, dtype="bool") /* ty=Tensor[(1, 32), bool] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %492 = %484.0;
  %493 = greater(%490, %491) /* ty=Tensor[(?, 32), bool] */;
  (%492, %493)
}

def @func_5827() -> Tensor[(10, 11, 16), float64] {
  %494 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %494.0
}

def @func_4953(%var_4941: Tensor[(420), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(11, 14, 14), bool], Tensor[(154), bool], Tensor[(2156), bool]) {
  %495 = cast(%var_4941, dtype="float64") /* ty=Tensor[(420), float64] */;
  %496 = reshape(%495, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), float64] */;
  %497 = @func_2661(%496) /* ty=(Tensor[(6, 5, 14), float64],) */;
  %498 = cast(meta[relay.Constant][30] /* ty=Tensor[(154), bool] */, dtype="bool") /* ty=Tensor[(154), bool] */;
  %499 = cast(meta[relay.Constant][31] /* ty=Tensor[(2156), bool] */, dtype="bool") /* ty=Tensor[(2156), bool] */;
  %500 = reshape(%498, newshape=[11, 1, 14]) /* ty=Tensor[(11, 1, 14), bool] */;
  %501 = reshape(%499, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), bool] */;
  %502 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  %503 = %497.0;
  %504 = @func_596(%500, %501) /* ty=Tensor[(11, 14, 14), bool] */;
  (%502, %503, %var_4941, %504, meta[relay.Constant][30] /* ty=Tensor[(154), bool] */, meta[relay.Constant][31] /* ty=Tensor[(2156), bool] */)
}

def @func_9693() -> (Tensor[(10, 11, 16), float64],) {
  %505 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  (%505,)
}

def @func_10859(%var_10823: Tensor[(1000), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 10, 10), int16], Tensor[(1000), int16]) {
  %506 = @func_5921() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %507 = cast(%var_10823, dtype="int16") /* ty=Tensor[(1000), int16] */;
  %508 = cast(%var_10823, dtype="int16") /* ty=Tensor[(1000), int16] */;
  %509 = reshape(%507, newshape=[10, 10, 10]) /* ty=Tensor[(10, 10, 10), int16] */;
  %510 = reshape(%508, newshape=[10, 10, 10]) /* ty=Tensor[(10, 10, 10), int16] */;
  %511 = @func_8750(%509, %510) /* ty=(Tensor[(10, 10, 10), int16], Tensor[(10, 11, 16), float64]) */;
  %512 = %506.0;
  %513 = %511.0;
  (%512, %513, %var_10823)
}

def @func_11459() -> (Tensor[(13, 12, 2), float64],) {
  %514 = @func_9439() /* ty=(Tensor[(13, 12, 2), float32],) */;
  %515 = %514.0;
  %516 = cast(%515, dtype="float64") /* ty=Tensor[(13, 12, 2), float64] */;
  %517 = tan(%516) /* ty=Tensor[(13, 12, 2), float64] */;
  (%517,)
}

def @func_4827(%var_4740: Tensor[(90, 18), int64], %var_4752: Tensor[(20, 120), uint64], %var_4802: Tensor[(150), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], uint64, Tensor[(7), uint64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(4, 14, 2), int64], Tensor[(15, 9), int64], Tensor[(10, 11, 16), float64], Tensor[(20, 120), uint64], Tensor[(10, 11, 16), float64], Tensor[(90, 18), bool], Tensor[(1, 1, 7), uint64], Tensor[(10, 3, 5), bool], Tensor[(150), int16], Tensor[(90, 18), float64], Tensor[(6, 14, 4), float64], Tensor[(336), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) {
  %518 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %519 = cast(meta[relay.Constant][32] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %520 = cast(meta[relay.Constant][33] /* ty=Tensor[(7), uint64] */, dtype="uint64") /* ty=Tensor[(7), uint64] */;
  %521 = reshape(%519, newshape=[]) /* ty=uint64 */;
  %522 = reshape(%520, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), uint64] */;
  %523 = @func_389(%521, %522) /* ty=(Tensor[(1, 1, 7), uint64], Tensor[(7, 1, 1), float32]) */;
  %524 = %518.0;
  %525 = cast(%524, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %526 = reshape(%525, newshape=[10, 11, 16]) /* ty=Tensor[(10, 11, 16), float64] */;
  %527 = @func_4459(%526) /* ty=(Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), bool]) */;
  %528 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %529 = cast(meta[relay.Constant][34] /* ty=Tensor[(15, 9), int64] */, dtype="int64") /* ty=Tensor[(15, 9), int64] */;
  %530 = cast(%var_4740, dtype="int64") /* ty=Tensor[(90, 18), int64] */;
  %531 = cast(%var_4740, dtype="int64") /* ty=Tensor[(90, 18), int64] */;
  %532 = reshape(%529, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), int64] */;
  %533 = reshape(%530, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), int64] */;
  %534 = reshape(%531, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), int64] */;
  %535 = @func_3876(%532, %533, %534) /* ty=(Tensor[(15, 12, 9), bool], Tensor[(4, 14, 2), int64], Tensor[(112), int64], Tensor[(15, 12, 9), float64]) */;
  %536 = cast(meta[relay.Constant][32] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %537 = cast(%var_4752, dtype="uint64") /* ty=Tensor[(20, 120), uint64] */;
  %538 = reshape(%536, newshape=[]) /* ty=uint64 */;
  %539 = reshape(%537, newshape=[2400]) /* ty=Tensor[(2400), uint64] */;
  %540 = @func_4589(%538, %539) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) */;
  %541 = cast(%var_4740, dtype="float32") /* ty=Tensor[(90, 18), float32] */;
  %542 = erf(%541) /* ty=Tensor[(90, 18), float32] */;
  %543 = cast(%542, dtype="float32") /* ty=Tensor[(90, 18), float32] */;
  %544 = atan(%543) /* ty=Tensor[(90, 18), float32] */;
  %545 = cast(%var_4740, dtype="bool") /* ty=Tensor[(90, 18), bool] */;
  %546 = shape_of(%544, dtype="int32") /* ty=Tensor[(2), int32] */;
  %547 = cast(%544, dtype="bool") /* ty=Tensor[(90, 18), bool] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %549 = cast(meta[relay.Constant][32] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %550 = cast(%var_4752, dtype="uint64") /* ty=Tensor[(20, 120), uint64] */;
  %551 = reshape(%549, newshape=[]) /* ty=uint64 */;
  %552 = reshape(%550, newshape=[2400]) /* ty=Tensor[(2400), uint64] */;
  %553 = @func_4589(%551, %552) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) */;
  %554 = cast(%var_4802, dtype="int16") /* ty=Tensor[(150), int16] */;
  %555 = reshape(%554, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), int16] */;
  %556 = @func_3837(%555) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) */;
  %557 = cast(%var_4740, dtype="float64") /* ty=Tensor[(90, 18), float64] */;
  %558 = shape_of(%542, dtype="int32") /* ty=Tensor[(2), int32] */;
  %559 = cast(%542, dtype="float64") /* ty=Tensor[(90, 18), float64] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %561 = floor_mod(%559, %560) /* ty=Tensor[(90, 18), float64] */;
  %562 = cast(%561, dtype="uint16") /* ty=Tensor[(90, 18), uint16] */;
  %563 = shape_of(%544, dtype="int32") /* ty=Tensor[(2), int32] */;
  %564 = cast(%544, dtype="uint16") /* ty=Tensor[(90, 18), uint16] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %566 = multiply(%564, %565) /* ty=Tensor[(90, 18), uint16] */;
  %567 = cast(%561, dtype="int32") /* ty=Tensor[(90, 18), int32] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(2), int32] */;
  %569 = cast(%566, dtype="int32") /* ty=Tensor[(90, 18), int32] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %571 = right_shift(%569, %570) /* ty=Tensor[(90, 18), int32] */;
  %572 = cast(%571, dtype="float64") /* ty=Tensor[(90, 18), float64] */;
  %573 = cosh(%572) /* ty=Tensor[(90, 18), float64] */;
  %574 = cast(%573, dtype="float64") /* ty=Tensor[(90, 18), float64] */;
  %575 = cast(meta[relay.Constant][35] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %576 = reshape(%575, newshape=[6, 14, 4]) /* ty=Tensor[(6, 14, 4), float64] */;
  %577 = cast(meta[relay.Constant][36] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %578 = reshape(%577, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
  %579 = @func_3442(%578) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) */;
  %580 = %523.0;
  %581 = %527.2;
  %582 = %528.0;
  %583 = %535.1;
  %584 = %540.0;
  %585 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  %586 = logical_and(%547, %548) /* ty=Tensor[(90, 18), bool] */;
  %587 = %553.1;
  %588 = %556.0;
  %589 = acosh(%574) /* ty=Tensor[(90, 18), float64] */;
  %590 = @func_3030(%576) /* ty=Tensor[(6, 14, 4), float64] */;
  %591 = %579.0;
  (%524, %580, meta[relay.Constant][32] /* ty=uint64 */, meta[relay.Constant][33] /* ty=Tensor[(7), uint64] */, %581, %582, %583, meta[relay.Constant][34] /* ty=Tensor[(15, 9), int64] */, %584, %var_4752, %585, %586, %587, %588, %var_4802, %589, %590, meta[relay.Constant][35] /* ty=Tensor[(336), float64] */, %591, meta[relay.Constant][36] /* ty=Tensor[(312), float32] */)
}

def @func_7543() -> Tensor[(10, 11, 16), float32] {
  %592 = @func_7191() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %592.0
}

def @func_2661(%var_2641: Tensor[(6, 5, 14), float64]) -> (Tensor[(6, 5, 14), float64],) {
  %593 = cast(%var_2641, dtype="float64") /* ty=Tensor[(6, 5, 14), float64] */;
  %594 = cos(%593) /* ty=Tensor[(6, 5, 14), float64] */;
  (%594,)
}

def @func_11628(%var_11621: Tensor[(13, 7, 16), int64], %var_11622: Tensor[(13, 7, 16), int64]) -> (Tensor[(13, 7, 16), bool],) {
  %595 = cast(%var_11622, dtype="bool") /* ty=Tensor[(13, 7, 16), bool] */;
  %596 = shape_of(%var_11621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%var_11621, dtype="bool") /* ty=Tensor[(13, 7, 16), bool] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %599 = not_equal(%597, %598) /* ty=Tensor[(13, 7, 16), bool] */;
  (%599,)
}

def @func_10281() -> (Tensor[(10, 11, 16), float32],) {
  %600 = @func_10014() /* ty=Tensor[(10, 11, 16), float32] */;
  (%600,)
}

def @func_6785() -> Tensor[(10, 11, 16), float64] {
  %601 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %601.0
}

def @func_4459(%var_4434: Tensor[(10, 11, 16), float64]) -> (Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), bool]) {
  %602 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %603 = %602.0;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %605 = asin(%604) /* ty=Tensor[(10, 11, 16), float32] */;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %607 = asinh(%606) /* ty=Tensor[(10, 11, 16), float64] */;
  %608 = cast(%var_4434, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%607, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %612 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %613 = %612.0;
  %614 = cast(%613, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %615 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%605, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %618 = cast(%613, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
  %619 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%607, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %622 = greater_equal(%610, %611) /* ty=Tensor[(10, 11, 16), bool] */;
  %623 = multiply(%616, %617) /* ty=Tensor[(10, 11, 16), float64] */;
  %624 = less(%620, %621) /* ty=Tensor[(10, 11, 16), bool] */;
  (%622, %623, %624)
}

def @func_6981(%var_6964: Tensor[(7), float64], %var_6968: Tensor[(312, 1), float32]) -> (Tensor[(6, 5, 14), float32], Tensor[(7, 1, 1), float64], Tensor[(675), float32], Tensor[(7), float64], Tensor[(6, 5, 14), float64], Tensor[(312, 1), float32], Tensor[(784), float64], Tensor[(600), float64], Tensor[(10, 11, 16), float64]) {
  %625 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %626 = cast(meta[relay.Constant][37] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %627 = cast(%var_6964, dtype="float64") /* ty=Tensor[(7), float64] */;
  %628 = reshape(%626, newshape=[9, 15, 5]) /* ty=Tensor[(9, 15, 5), float32] */;
  %629 = reshape(%627, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %630 = @func_564(%628, %629) /* ty=(Tensor[(9, 15, 5), float32], Tensor[(7, 1, 1), float64], Tensor[(7), float64], Tensor[(7, 1, 1), float64]) */;
  %631 = cast(%var_6968, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
  %632 = reshape(%631, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
  %633 = @func_3442(%632) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) */;
  %634 = cast(meta[relay.Constant][38] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %635 = cast(meta[relay.Constant][38] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %636 = reshape(%634, newshape=[4, 15, 10]) /* ty=Tensor[(4, 15, 10), float64] */;
  %637 = reshape(%635, newshape=[4, 15, 10]) /* ty=Tensor[(4, 15, 10), float64] */;
  %638 = @func_6404(%636, %637) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(784), float64], Tensor[(4, 15, 10), bool]) */;
  %639 = %625.0;
  %640 = %630.1;
  %641 = %633.1;
  %642 = %638.1;
  %643 = @func_6479() /* ty=Tensor[(10, 11, 16), float64] */;
  (%639, %640, meta[relay.Constant][37] /* ty=Tensor[(675), float32] */, %var_6964, %641, %var_6968, %642, meta[relay.Constant][38] /* ty=Tensor[(600), float64] */, %643)
}

def @func_3932(%var_3923: Tensor[(3, 7, 2), int16]) -> (Tensor[(3, 7, 2), int16],) {
  %644 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 7, 2), int16] */, dtype="int16") /* ty=Tensor[(3, 7, 2), int16] */;
  %645 = shape_of(%var_3923, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%var_3923, dtype="int16") /* ty=Tensor[(3, 7, 2), int16] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %648 = multiply(%646, %647) /* ty=Tensor[(3, 7, 2), int16] */;
  (%648,)
}

def @func_10368(%var_10340: Tensor[(10, 11, 16), float32]) -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) {
  %649 = @func_10281() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %650 = %649.0;
  %651 = cast(%var_10340, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
  %652 = shape_of(%650, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%650, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %655 = equal(%653, %654) /* ty=Tensor[(10, 11, 16), bool] */;
  %656 = cast(%655, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %657 = @func_10267() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %658 = cos(%656) /* ty=Tensor[(10, 11, 16), float32] */;
  %659 = %657.1;
  (%658, %659)
}

def @func_5844() -> (Tensor[(10, 11, 16), float64],) {
  %660 = @func_5268() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %661 = %660.0;
  (%661,)
}

def @func_8023() -> (Tensor[(10, 11, 16), float64],) {
  %662 = @func_5897() /* ty=Tensor[(10, 11, 16), float64] */;
  (%662,)
}

def @func_5921() -> (Tensor[(10, 11, 16), float64],) {
  %663 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %664 = %663.1;
  (%664,)
}

def @func_12620() -> (Tensor[(150), int16],) {
  %665 = @func_8853() /* ty=(Tensor[(150), int16],) */;
  %666 = %665.0;
  (%666,)
}

def @func_12315() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32], Tensor[(32), float64]) {
  %667 = @func_7010() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %668 = cast(meta[relay.Constant][40] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %669 = reshape(%668, newshape=[1, 32]) /* ty=Tensor[(1, 32), float64] */;
  %670 = @func_8677(%669) /* ty=(Tensor[(10, 11, 16), float32], Tensor[(?, 32), bool]) */;
  %671 = %667.0;
  %672 = %670.0;
  (%671, %672, meta[relay.Constant][40] /* ty=Tensor[(32), float64] */)
}

def @func_10521() -> (Tensor[(10, 11, 16), float64],) {
  %673 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  (%673,)
}

def @func_11429(%var_11413: Tensor[(14, 12, 6), int8], %var_11414: Tensor[(14, 12, 6), int8]) -> (Tensor[(14, 12, 6), int8], Tensor[(10, 11, 16), float64], Tensor[(312), float32]) {
  %674 = cast(%var_11414, dtype="int8") /* ty=Tensor[(14, 12, 6), int8] */;
  %675 = shape_of(%var_11413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%var_11413, dtype="int8") /* ty=Tensor[(14, 12, 6), int8] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %678 = @func_8828() /* ty=(Tensor[(312), float32], Tensor[(10, 11, 16), float64]) */;
  %679 = bitwise_xor(%676, %677) /* ty=Tensor[(14, 12, 6), int8] */;
  %680 = @func_5827() /* ty=Tensor[(10, 11, 16), float64] */;
  %681 = %678.0;
  (%679, %680, %681)
}

def @func_5998() -> (Tensor[(6, 5, 14), float32],) {
  %682 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %683 = %682.0;
  (%683,)
}

def @func_5069(%var_5062: Tensor[(70, 6), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(70, 6), float64]) {
  %684 = cast(%var_5062, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
  %685 = reshape(%684, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %686 = @func_4953(%685) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(11, 14, 14), bool], Tensor[(154), bool], Tensor[(2156), bool]) */;
  %687 = cast(%var_5062, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
  %688 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  %689 = %686.1;
  %690 = asin(%687) /* ty=Tensor[(70, 6), float64] */;
  (%688, %689, %690)
}

def @func_7844(%var_7783: Tensor[(156, 2), float32]) -> (Tensor[(10, 11, 16), float32], Tensor[(7), float64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(156, 2), float64]) {
  %691 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %692 = %691.2;
  %693 = cast(%692, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %694 = reshape(%693, newshape=[10, 11, 16]) /* ty=Tensor[(10, 11, 16), float64] */;
  %695 = @func_4459(%694) /* ty=(Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), bool]) */;
  %696 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %697 = cast(meta[relay.Constant][41] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %698 = cast(%var_7783, dtype="float32") /* ty=Tensor[(156, 2), float32] */;
  %699 = reshape(%697, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %700 = reshape(%698, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
  %701 = @func_6981(%699, %700) /* ty=(Tensor[(6, 5, 14), float32], Tensor[(7, 1, 1), float64], Tensor[(675), float32], Tensor[(7), float64], Tensor[(6, 5, 14), float64], Tensor[(312, 1), float32], Tensor[(784), float64], Tensor[(600), float64], Tensor[(10, 11, 16), float64]) */;
  %702 = %701.5;
  %703 = cast(%702, dtype="bool") /* ty=Tensor[(312, 1), bool] */;
  %704 = shape_of(%var_7783, dtype="int32") /* ty=Tensor[(2), int32] */;
  %705 = cast(%var_7783, dtype="bool") /* ty=Tensor[(156, 2), bool] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %707 = greater_equal(%705, %706) /* ty=Tensor[(156, 2), bool] */;
  %708 = cast(%707, dtype="float32") /* ty=Tensor[(156, 2), float32] */;
  %709 = log2(%708) /* ty=Tensor[(156, 2), float32] */;
  %710 = cast(%709, dtype="float64") /* ty=Tensor[(156, 2), float64] */;
  %711 = %695.0;
  %712 = @func_7550() /* ty=Tensor[(10, 11, 16), float32] */;
  %713 = %696.0;
  %714 = sinh(%710) /* ty=Tensor[(156, 2), float64] */;
  (%692, meta[relay.Constant][41] /* ty=Tensor[(7), float64] */, %711, %712, %713, %714)
}

def @func_8828() -> (Tensor[(312), float32], Tensor[(10, 11, 16), float64]) {
  %715 = @func_7390() /* ty=(Tensor[(312), float32],) */;
  %716 = @func_8562() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) */;
  %717 = %715.0;
  %718 = %716.1;
  (%717, %718)
}

def @func_11743() -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(312), float32], Tensor[(150), int16], Tensor[(4, 10, 14), float32], Tensor[(560), float32], Tensor[(10, 11, 16), float64]) {
  %719 = @func_8861() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %720 = @func_10169() /* ty=(Tensor[(312), float32],) */;
  %721 = cast(meta[relay.Constant][42] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
  %722 = reshape(%721, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), float32] */;
  %723 = %719.0;
  %724 = @func_6785() /* ty=Tensor[(10, 11, 16), float64] */;
  %725 = %720.0;
  %726 = @func_8175() /* ty=Tensor[(150), int16] */;
  %727 = @func_10550(%722) /* ty=Tensor[(4, 10, 14), float32] */;
  %728 = @func_9967() /* ty=Tensor[(10, 11, 16), float64] */;
  (%723, %724, %725, %726, %727, meta[relay.Constant][42] /* ty=Tensor[(560), float32] */, %728)
}

def @func_12417() -> Tensor[(10, 11, 16), float32] {
  %729 = @func_10324() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) */;
  %729.0
}

def @func_9325() -> Tensor[(312), float32] {
  %730 = @func_9223() /* ty=(Tensor[(312), float32],) */;
  %730.0
}

def @func_7743() -> (Tensor[(10, 11, 16), float64], Tensor[(2400), uint64]) {
  %731 = @func_6656() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) */;
  %732 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
  %733 = %731.2;
  (%732, %733)
}

def @func_5405(%var_5350: Tensor[(10, 11, 16), float64], %var_5357: Tensor[(224), int32]) -> (Tensor[(16, 2, 7), int32], Tensor[(224), int32], Tensor[(10, 11, 16), uint64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) {
  %734 = cast(%var_5357, dtype="int32") /* ty=Tensor[(224), int32] */;
  %735 = cast(%var_5357, dtype="int32") /* ty=Tensor[(224), int32] */;
  %736 = reshape(%734, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
  %737 = reshape(%735, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
  %738 = @func_5203(%736, %737) /* ty=(Tensor[(16, 2, 7), int32],) */;
  %739 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %740 = %739.0;
  %741 = cast(%var_5350, dtype="int8") /* ty=Tensor[(10, 11, 16), int8] */;
  %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(%740, dtype="int8") /* ty=Tensor[(10, 11, 16), int8] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %745 = bitwise_and(%743, %744) /* ty=Tensor[(10, 11, 16), int8] */;
  %746 = cast(%740, dtype="uint64") /* ty=Tensor[(10, 11, 16), uint64] */;
  %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%745, dtype="uint64") /* ty=Tensor[(10, 11, 16), uint64] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %750 = cast(meta[relay.Constant][43] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %751 = reshape(%750, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float64] */;
  %752 = %738.0;
  %753 = subtract(%748, %749) /* ty=Tensor[(10, 11, 16), uint64] */;
  %754 = @func_2689(%751) /* ty=Tensor[(4, 14, 14), float64] */;
  (%752, %var_5357, %753, %754, meta[relay.Constant][43] /* ty=Tensor[(784), float64] */)
}

def @func_10550(%var_10546: Tensor[(4, 10, 14), float32]) -> Tensor[(4, 10, 14), float32] {
  %755 = cast(%var_10546, dtype="float32") /* ty=Tensor[(4, 10, 14), float32] */;
  erf(%755) /* ty=Tensor[(4, 10, 14), float32] */
}

def @func_9755(%var_9726: Tensor[(3, 13, 15), uint16], %var_9727: Tensor[(3, 13, 15), uint16]) -> (Tensor[(10, 11, 16), float64], Tensor[(3, 13, 15), float64]) {
  %756 = @func_5268() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %757 = cast(%var_9727, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
  %758 = shape_of(%var_9726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%var_9726, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %761 = greater_equal(%759, %760) /* ty=Tensor[(3, 13, 15), bool] */;
  %762 = cast(%761, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
  %763 = %756.0;
  %764 = sinh(%762) /* ty=Tensor[(3, 13, 15), float64] */;
  (%763, %764)
}

def @func_8853() -> (Tensor[(150), int16],) {
  %765 = @func_8175() /* ty=Tensor[(150), int16] */;
  (%765,)
}

def @func_8395(%var_8393: Tensor[(2400, 1), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], uint64, Tensor[(2400, 1), uint64]) {
  %766 = @func_5240() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %767 = @func_5844() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %768 = cast(meta[relay.Constant][44] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %769 = cast(%var_8393, dtype="uint64") /* ty=Tensor[(2400, 1), uint64] */;
  %770 = reshape(%768, newshape=[]) /* ty=uint64 */;
  %771 = reshape(%769, newshape=[2400]) /* ty=Tensor[(2400), uint64] */;
  %772 = @func_4589(%770, %771) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) */;
  %773 = %766.0;
  %774 = %767.0;
  %775 = %772.0;
  (%773, %774, %775, meta[relay.Constant][44] /* ty=uint64 */, %var_8393)
}

def @func_11551(%var_11548: Tensor[(112), int64]) -> (Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(312), float32], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(4, 14, 2), int64], Tensor[(112), int64]) {
  %776 = @func_7191() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %777 = %776.0;
  %778 = cast(%777, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %779 = cast(meta[relay.Constant][45] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %780 = reshape(%779, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %781 = @func_4953(%780) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(11, 14, 14), bool], Tensor[(154), bool], Tensor[(2156), bool]) */;
  %782 = @func_9938() /* ty=(Tensor[(312), float32], Tensor[(10, 11, 16), float32]) */;
  %783 = @func_10243() /* ty=(Tensor[(10, 11, 16), uint8], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %784 = cast(%var_11548, dtype="int64") /* ty=Tensor[(112), int64] */;
  %785 = reshape(%784, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), int64] */;
  %786 = tan(%778) /* ty=Tensor[(10, 11, 16), float64] */;
  %787 = %781.1;
  %788 = %782.0;
  %789 = %783.1;
  %790 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
  %791 = @func_1002(%785) /* ty=Tensor[(4, 14, 2), int64] */;
  (%786, %787, meta[relay.Constant][45] /* ty=Tensor[(420), float64] */, %788, %789, %790, %791, %var_11548)
}

def @func_9183() -> (Tensor[(150), int16], Tensor[(2400), bool], Tensor[(10, 11, 16), float32]) {
  %792 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %793 = @func_6656() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) */;
  %794 = %793.2;
  %795 = cast(%794, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %796 = asinh(%795) /* ty=Tensor[(2400), float32] */;
  %797 = cast(%794, dtype="bool") /* ty=Tensor[(2400), bool] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(1), int32] */;
  %799 = cast(%796, dtype="bool") /* ty=Tensor[(2400), bool] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?), bool] */;
  %801 = %792.1;
  %802 = not_equal(%799, %800) /* ty=Tensor[(2400), bool] */;
  %803 = @func_7550() /* ty=Tensor[(10, 11, 16), float32] */;
  (%801, %802, %803)
}

def @func_9671(%var_9665: Tensor[(15, 5, 6), float64]) -> (Tensor[(15, 5, 6), float64],) {
  %804 = cast(meta[relay.Constant][46] /* ty=Tensor[(15, 5, 6), float64] */, dtype="float64") /* ty=Tensor[(15, 5, 6), float64] */;
  %805 = shape_of(%var_9665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%var_9665, dtype="float64") /* ty=Tensor[(15, 5, 6), float64] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %808 = power(%806, %807) /* ty=Tensor[(15, 5, 6), float64] */;
  (%808,)
}

def @func_9342() -> (Tensor[(15, 14, 7), float32], Tensor[(4, 14, 14), float64], Tensor[(300, 2), float64], Tensor[(10, 11, 16), float64]) {
  %809 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 7), float32] */;
  %810 = cast(meta[relay.Constant][48] /* ty=Tensor[(300, 2), float64] */, dtype="float64") /* ty=Tensor[(300, 2), float64] */;
  %811 = cast(meta[relay.Constant][48] /* ty=Tensor[(300, 2), float64] */, dtype="float64") /* ty=Tensor[(300, 2), float64] */;
  %812 = reshape(%810, newshape=[4, 15, 10]) /* ty=Tensor[(4, 15, 10), float64] */;
  %813 = reshape(%811, newshape=[4, 15, 10]) /* ty=Tensor[(4, 15, 10), float64] */;
  %814 = @func_6404(%812, %813) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(784), float64], Tensor[(4, 15, 10), bool]) */;
  %815 = exp(%809) /* ty=Tensor[(15, 14, 7), float32] */;
  %816 = %814.0;
  %817 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
  (%815, %816, meta[relay.Constant][48] /* ty=Tensor[(300, 2), float64] */, %817)
}

def @func_9787() -> (Tensor[(312), float32],) {
  %818 = @func_7390() /* ty=(Tensor[(312), float32],) */;
  %819 = %818.0;
  (%819,)
}

def @func_12653() -> (Tensor[(150), int16],) {
  %820 = @func_12620() /* ty=(Tensor[(150), int16],) */;
  %821 = %820.0;
  (%821,)
}

def @func_9255(%var_9243: Tensor[(3, 7, 7), float64]) -> Tensor[(3, 7, 7), float64] {
  %822 = cast(%var_9243, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
  acosh(%822) /* ty=Tensor[(3, 7, 7), float64] */
}

def @func_8861() -> (Tensor[(10, 11, 16), float32],) {
  %823 = @func_7059() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %824 = %823.0;
  (%824,)
}

def @func_9856(%var_9808: Tensor[(15, 10, 4), float64], %var_9844: Tensor[(312), float32]) -> (Tensor[(15, 10, 4), float64], Tensor[(7), float64], Tensor[(312), float32], Tensor[(420), float64]) {
  %825 = cast(%var_9808, dtype="float64") /* ty=Tensor[(15, 10, 4), float64] */;
  %826 = cast(%var_9844, dtype="float32") /* ty=Tensor[(312), float32] */;
  %827 = reshape(%826, newshape=[156, 2]) /* ty=Tensor[(156, 2), float32] */;
  %828 = @func_7844(%827) /* ty=(Tensor[(10, 11, 16), float32], Tensor[(7), float64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(156, 2), float64]) */;
  %829 = cast(%var_9844, dtype="float32") /* ty=Tensor[(312), float32] */;
  %830 = reshape(%829, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
  %831 = @func_3442(%830) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) */;
  %832 = sinh(%825) /* ty=Tensor[(15, 10, 4), float64] */;
  %833 = %828.1;
  %834 = %831.2;
  (%832, %833, %var_9844, %834)
}

def @func_10267() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  %835 = @func_8023() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %836 = %835.0;
  %837 = @func_7550() /* ty=Tensor[(10, 11, 16), float32] */;
  (%836, %837)
}

def @func_7093() -> Tensor[(10, 11, 16), float64] {
  %838 = @func_5268() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %838.0
}

def @func_5897() -> Tensor[(10, 11, 16), float64] {
  %839 = @func_5844() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %840 = %839.0;
  %841 = cast(meta[relay.Constant][49] /* ty=Tensor[(10, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %842 = shape_of(%840, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%840, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%843, %844) /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_4872(%var_4869: Tensor[(75, 9), float32]) -> (Tensor[(10, 11, 16), float64], Tensor[(7), float64], Tensor[(75, 9), float32], Tensor[(7), float64]) {
  %845 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %846 = cast(%var_4869, dtype="float32") /* ty=Tensor[(75, 9), float32] */;
  %847 = cast(meta[relay.Constant][50] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %848 = reshape(%846, newshape=[9, 15, 5]) /* ty=Tensor[(9, 15, 5), float32] */;
  %849 = reshape(%847, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %850 = @func_564(%848, %849) /* ty=(Tensor[(9, 15, 5), float32], Tensor[(7, 1, 1), float64], Tensor[(7), float64], Tensor[(7, 1, 1), float64]) */;
  %851 = %845.0;
  %852 = %850.2;
  (%851, %852, %var_4869, meta[relay.Constant][50] /* ty=Tensor[(7), float64] */)
}

def @main(%var_12730: Tensor[(10, 15, 1), int32]) -> Tensor[(10, 15, 1), int32] {
  %853 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %854 = cast(%var_12730, dtype="int32") /* ty=Tensor[(10, 15, 1), int32] */;
  add(%853, %854) /* ty=Tensor[(10, 15, 1), int32] */
}

def @func_12662() -> (Tensor[(6, 7, 6), float64],) {
  %855 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 7, 6), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 6), float64] */;
  %856 = tan(%855) /* ty=Tensor[(6, 7, 6), float64] */;
  (%856,)
}

def @func_10992(%var_10974: bool, %var_10975: Tensor[(6, 5, 1), bool]) -> Tensor[(6, 5, 1), bool] {
  %857 = cast(%var_10974, dtype="bool") /* ty=bool */;
  %858 = cast(%var_10975, dtype="bool") /* ty=Tensor[(6, 5, 1), bool] */;
  logical_or(%857, %858) /* ty=Tensor[(6, 5, 1), bool] */
}

def @func_8538() -> (Tensor[(10, 11, 16), float32],) {
  %859 = @func_8371() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %860 = %859.1;
  (%860,)
}

def @func_9087() -> (Tensor[(10, 11, 16), float64],) {
  %861 = @func_8167() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %862 = %861.0;
  (%862,)
}

def @func_4589(%var_4553: uint64, %var_4560: Tensor[(2400), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) {
  %863 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %864 = cast(%var_4553, dtype="uint64") /* ty=uint64 */;
  %865 = cast(meta[relay.Constant][52] /* ty=Tensor[(7), uint64] */, dtype="uint64") /* ty=Tensor[(7), uint64] */;
  %866 = reshape(%864, newshape=[]) /* ty=uint64 */;
  %867 = reshape(%865, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), uint64] */;
  %868 = @func_389(%866, %867) /* ty=(Tensor[(1, 1, 7), uint64], Tensor[(7, 1, 1), float32]) */;
  %869 = cast(%var_4560, dtype="uint64") /* ty=Tensor[(2400), uint64] */;
  %870 = reshape(%869, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint64] */;
  %871 = @func_3724(%870) /* ty=(Tensor[(10, 16, 15), uint64],) */;
  %872 = cast(%var_4553, dtype="uint16") /* ty=uint16 */;
  %873 = cast(%var_4560, dtype="uint16") /* ty=Tensor[(2400), uint16] */;
  %874 = bitwise_and(%872, %873) /* ty=Tensor[(2400), uint16] */;
  %875 = cast(%874, dtype="bool") /* ty=Tensor[(2400), bool] */;
  %876 = shape_of(%var_4560, dtype="int32") /* ty=Tensor[(1), int32] */;
  %877 = cast(%var_4560, dtype="bool") /* ty=Tensor[(2400), bool] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?), bool] */;
  %879 = %863.0;
  %880 = %868.0;
  %881 = %871.0;
  %882 = logical_and(%877, %878) /* ty=Tensor[(2400), bool] */;
  (%879, %880, meta[relay.Constant][52] /* ty=Tensor[(7), uint64] */, %881, %882)
}

def @func_5641(%var_5619: Tensor[(12, 2, 9), float32], %var_5629: Tensor[(10, 42), float64]) -> (Tensor[(12, 2, 9), float32], Tensor[(70, 6), float64], Tensor[(10, 42), float64]) {
  %883 = cast(%var_5619, dtype="float32") /* ty=Tensor[(12, 2, 9), float32] */;
  %884 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(12, 2, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 2, 9), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 9), float32] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %887 = cast(%var_5629, dtype="float64") /* ty=Tensor[(10, 42), float64] */;
  %888 = reshape(%887, newshape=[70, 6]) /* ty=Tensor[(70, 6), float64] */;
  %889 = @func_5069(%888) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(70, 6), float64]) */;
  %890 = floor_mod(%885, %886) /* ty=Tensor[(12, 2, 9), float32] */;
  %891 = %889.2;
  (%890, %891, %var_5629)
}

def @func_8750(%var_8728: Tensor[(10, 10, 10), int16], %var_8729: Tensor[(10, 10, 10), int16]) -> (Tensor[(10, 10, 10), int16], Tensor[(10, 11, 16), float64]) {
  %892 = cast(%var_8729, dtype="int16") /* ty=Tensor[(10, 10, 10), int16] */;
  %893 = shape_of(%var_8728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %894 = cast(%var_8728, dtype="int16") /* ty=Tensor[(10, 10, 10), int16] */;
  %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %896 = multiply(%894, %895) /* ty=Tensor[(10, 10, 10), int16] */;
  %897 = @func_5897() /* ty=Tensor[(10, 11, 16), float64] */;
  (%896, %897)
}

def @func_5752(%var_5744: Tensor[(12, 13, 15), float64]) -> Tensor[(12, 13, 15), float64] {
  %898 = cast(%var_5744, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  rsqrt(%898) /* ty=Tensor[(12, 13, 15), float64] */
}

def @func_7550() -> Tensor[(10, 11, 16), float32] {
  %899 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %899.1
}

def @func_11875(%var_11814: uint64, %var_11815: Tensor[(2400), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], uint64, Tensor[(2400), uint64], Tensor[(10, 11, 16), float32], Tensor[(4, 14, 2), int64], Tensor[(112), int64]) {
  %900 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %901 = cast(%var_11814, dtype="uint64") /* ty=uint64 */;
  %902 = cast(%var_11815, dtype="uint64") /* ty=Tensor[(2400), uint64] */;
  %903 = reshape(%901, newshape=[]) /* ty=uint64 */;
  %904 = reshape(%902, newshape=[2400]) /* ty=Tensor[(2400), uint64] */;
  %905 = @func_4589(%903, %904) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) */;
  %906 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %907 = cast(meta[relay.Constant][54] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %908 = reshape(%907, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), int64] */;
  %909 = %900.0;
  %910 = %905.1;
  %911 = %906.1;
  %912 = @func_1002(%908) /* ty=Tensor[(4, 14, 2), int64] */;
  (%909, %910, %var_11814, %var_11815, %911, %912, meta[relay.Constant][54] /* ty=Tensor[(112), int64] */)
}

def @func_10169() -> (Tensor[(312), float32],) {
  %913 = @func_9787() /* ty=(Tensor[(312), float32],) */;
  %914 = %913.0;
  (%914,)
}

def @func_11608() -> Tensor[(10, 11, 16), float64] {
  %915 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %915.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4382() -> (Tensor[(10, 11, 16), float64],) {
  @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_7472(%var_7396: Tensor[(5, 9, 16), float64], %var_7465: Tensor[(5, 9, 16), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32], Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(5, 9, 16), int16], Tensor[(5, 9, 16), uint64]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(224), int32] */, dtype="int32") /* ty=Tensor[(224), int32] */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(224), int32] */, dtype="int32") /* ty=Tensor[(224), int32] */;
  %2 = reshape(%0, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
  %3 = reshape(%1, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
  %4 = @func_5203(%2, %3) /* ty=(Tensor[(16, 2, 7), int32],) */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(150), int16] */, dtype="int16") /* ty=Tensor[(150), int16] */;
  %6 = reshape(%5, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), int16] */;
  %7 = @func_3837(%6) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) */;
  %8 = cast(%var_7396, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %9 = log10(%8) /* ty=Tensor[(5, 9, 16), float64] */;
  %10 = cast(%var_7396, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %11 = log(%10) /* ty=Tensor[(5, 9, 16), float64] */;
  %12 = cast(%11, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %13 = shape_of(%var_7396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%var_7396, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %16 = logical_and(%14, %15) /* ty=Tensor[(5, 9, 16), bool] */;
  %17 = cast(%16, dtype="int16") /* ty=Tensor[(5, 9, 16), int16] */;
  %18 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%9, dtype="int16") /* ty=Tensor[(5, 9, 16), int16] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %21 = cast(%16, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %22 = asinh(%21) /* ty=Tensor[(5, 9, 16), float64] */;
  %23 = cast(%var_7465, dtype="uint64") /* ty=Tensor[(5, 9, 16), uint64] */;
  %24 = shape_of(%22, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%22, dtype="uint64") /* ty=Tensor[(5, 9, 16), uint64] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %27 = @func_6785() /* ty=Tensor[(10, 11, 16), float64] */;
  %28 = %4.0;
  %29 = %7.2;
  %30 = right_shift(%19, %20) /* ty=Tensor[(5, 9, 16), int16] */;
  %31 = bitwise_and(%25, %26) /* ty=Tensor[(5, 9, 16), uint64] */;
  (%27, %28, meta[relay.Constant][0] /* ty=Tensor[(224), int32] */, %29, meta[relay.Constant][1] /* ty=Tensor[(150), int16] */, %30, %31)
}

def @func_7551() -> Tensor[(10, 11, 16), float32] {
  %33 = fn () -> Tensor[(10, 11, 16), float32] {
    %32 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
    %32.1
  };
  %33() /* ty=Tensor[(10, 11, 16), float32] */
}

def @func_12274(%var_12272: Tensor[(13, 12, 2), float64], %var_12273: Tensor[(675), float32]) -> (Tensor[(13, 12, 2), int32], Tensor[(75, 9), float32], Tensor[(15, 5, 6), float64], Tensor[(450), float64], Tensor[(10, 11, 16), float64], Tensor[(75, 9), float64], Tensor[(675), float32], Tensor[(2, 16, ?), int32], Tensor[(16, 2), float64]) {
  @func_12270(%var_12272, %var_12273) /* ty=(Tensor[(13, 12, 2), int32], Tensor[(75, 9), float32], Tensor[(15, 5, 6), float64], Tensor[(450), float64], Tensor[(10, 11, 16), float64], Tensor[(75, 9), float64], Tensor[(675), float32], Tensor[(2, 16, ?), int32], Tensor[(16, 2), float64]) */
}

def @func_12401() -> (Tensor[(10, 11, 16), float32],) {
  %36 = fn () -> (Tensor[(10, 11, 16), float32],) {
    %34 = @func_10324() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) */;
    %35 = %34.1;
    (%35,)
  };
  %36() /* ty=(Tensor[(10, 11, 16), float32],) */
}

def @func_8323() -> (Tensor[(10, 11, 16), float64],) {
  @func_8321() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_5743() -> (Tensor[(10, 11, 16), float32],) {
  %40 = fn () -> (Tensor[(10, 11, 16), float32],) {
    %37 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
    %38 = cast(%37, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
    %39 = log(%38) /* ty=Tensor[(10, 11, 16), float32] */;
    (%39,)
  };
  %40() /* ty=(Tensor[(10, 11, 16), float32],) */
}

def @func_2663(%var_2662: Tensor[(6, 5, 14), float64]) -> (Tensor[(6, 5, 14), float64],) {
  %43 = fn (%var_2641: Tensor[(6, 5, 14), float64]) -> (Tensor[(6, 5, 14), float64],) {
    %41 = cast(%var_2641, dtype="float64") /* ty=Tensor[(6, 5, 14), float64] */;
    %42 = cos(%41) /* ty=Tensor[(6, 5, 14), float64] */;
    (%42,)
  };
  %43(%var_2662) /* ty=(Tensor[(6, 5, 14), float64],) */
}

def @func_7844(%var_7783: Tensor[(156, 2), float32]) -> (Tensor[(10, 11, 16), float32], Tensor[(7), float64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(156, 2), float64]) {
  %44 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %45 = %44.2;
  %46 = cast(%45, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %47 = reshape(%46, newshape=[10, 11, 16]) /* ty=Tensor[(10, 11, 16), float64] */;
  %48 = @func_4459(%47) /* ty=(Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), bool]) */;
  %49 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %51 = cast(%var_7783, dtype="float32") /* ty=Tensor[(156, 2), float32] */;
  %52 = reshape(%50, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %53 = reshape(%51, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
  %54 = @func_6981(%52, %53) /* ty=(Tensor[(6, 5, 14), float32], Tensor[(7, 1, 1), float64], Tensor[(675), float32], Tensor[(7), float64], Tensor[(6, 5, 14), float64], Tensor[(312, 1), float32], Tensor[(784), float64], Tensor[(600), float64], Tensor[(10, 11, 16), float64]) */;
  %55 = %54.5;
  %56 = cast(%55, dtype="bool") /* ty=Tensor[(312, 1), bool] */;
  %57 = shape_of(%var_7783, dtype="int32") /* ty=Tensor[(2), int32] */;
  %58 = cast(%var_7783, dtype="bool") /* ty=Tensor[(156, 2), bool] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %60 = greater_equal(%58, %59) /* ty=Tensor[(156, 2), bool] */;
  %61 = cast(%60, dtype="float32") /* ty=Tensor[(156, 2), float32] */;
  %62 = log2(%61) /* ty=Tensor[(156, 2), float32] */;
  %63 = cast(%62, dtype="float64") /* ty=Tensor[(156, 2), float64] */;
  %64 = %48.0;
  %65 = @func_7550() /* ty=Tensor[(10, 11, 16), float32] */;
  %66 = %49.0;
  %67 = sinh(%63) /* ty=Tensor[(156, 2), float64] */;
  (%45, meta[relay.Constant][2] /* ty=Tensor[(7), float64] */, %64, %65, %66, %67)
}

def @func_2689(%var_2681: Tensor[(4, 14, 14), float64]) -> Tensor[(4, 14, 14), float64] {
  %68 = cast(%var_2681, dtype="float64") /* ty=Tensor[(4, 14, 14), float64] */;
  cos(%68) /* ty=Tensor[(4, 14, 14), float64] */
}

def @func_10755(%var_10753: Tensor[(14, 3), int16]) -> (Tensor[(10, 11, 16), float32], Tensor[(3, 7, 2), int16], Tensor[(14, 3), int16]) {
  @func_10752(%var_10753) /* ty=(Tensor[(10, 11, 16), float32], Tensor[(3, 7, 2), int16], Tensor[(14, 3), int16]) */
}

def @func_7095() -> Tensor[(10, 11, 16), float64] {
  @func_7093() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_4872(%var_4869: Tensor[(75, 9), float32]) -> (Tensor[(10, 11, 16), float64], Tensor[(7), float64], Tensor[(75, 9), float32], Tensor[(7), float64]) {
  %69 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %70 = cast(%var_4869, dtype="float32") /* ty=Tensor[(75, 9), float32] */;
  %71 = cast(meta[relay.Constant][3] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %72 = reshape(%70, newshape=[9, 15, 5]) /* ty=Tensor[(9, 15, 5), float32] */;
  %73 = reshape(%71, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %74 = @func_564(%72, %73) /* ty=(Tensor[(9, 15, 5), float32], Tensor[(7, 1, 1), float64], Tensor[(7), float64], Tensor[(7, 1, 1), float64]) */;
  %75 = %69.0;
  %76 = %74.2;
  (%75, %76, %var_4869, meta[relay.Constant][3] /* ty=Tensor[(7), float64] */)
}

def @func_8321() -> (Tensor[(10, 11, 16), float64],) {
  %77 = @func_5921() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %78 = %77.0;
  (%78,)
}

def @func_5999() -> (Tensor[(6, 5, 14), float32],) {
  %81 = fn () -> (Tensor[(6, 5, 14), float32],) {
    %79 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
    %80 = %79.0;
    (%80,)
  };
  %81() /* ty=(Tensor[(6, 5, 14), float32],) */
}

def @func_8862() -> (Tensor[(10, 11, 16), float32],) {
  %84 = fn () -> (Tensor[(10, 11, 16), float32],) {
    %82 = @func_7059() /* ty=(Tensor[(10, 11, 16), float32],) */;
    %83 = %82.0;
    (%83,)
  };
  %84() /* ty=(Tensor[(10, 11, 16), float32],) */
}

def @func_5845() -> (Tensor[(10, 11, 16), float64],) {
  %87 = fn () -> (Tensor[(10, 11, 16), float64],) {
    %85 = @func_5268() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %86 = %85.0;
    (%86,)
  };
  %87() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_8177() -> Tensor[(150), int16] {
  @func_8175() /* ty=Tensor[(150), int16] */
}

def @func_596(%var_590: Tensor[(11, 1, 14), bool], %var_591: Tensor[(11, 14, 14), bool]) -> Tensor[(11, 14, 14), bool] {
  %88 = cast(%var_590, dtype="bool") /* ty=Tensor[(11, 1, 14), bool] */;
  %89 = cast(%var_591, dtype="bool") /* ty=Tensor[(11, 14, 14), bool] */;
  logical_or(%88, %89) /* ty=Tensor[(11, 14, 14), bool] */
}

def @func_10325() -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) {
  %92 = fn () -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) {
    %90 = @func_7543() /* ty=Tensor[(10, 11, 16), float32] */;
    %91 = @func_8911() /* ty=Tensor[(10, 11, 16), float32] */;
    (%90, %91)
  };
  %92() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) */
}

def @func_6887(%var_6886: Tensor[(420), float64]) -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(420), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) {
  %101 = fn (%var_6836: Tensor[(420), float64]) -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(420), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) {
    %93 = @func_5742() /* ty=(Tensor[(10, 11, 16), float32],) */;
    %94 = cast(%var_6836, dtype="float64") /* ty=Tensor[(420), float64] */;
    %95 = reshape(%94, newshape=[70, 6]) /* ty=Tensor[(70, 6), float64] */;
    %96 = @func_5069(%95) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(70, 6), float64]) */;
    %97 = %93.0;
    %98 = %96.0;
    %99 = @func_6785() /* ty=Tensor[(10, 11, 16), float64] */;
    %100 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
    (%97, %98, %var_6836, %99, %100)
  };
  %101(%var_6886) /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(420), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */
}

def @func_11265() -> (Tensor[(312), float32], Tensor[(12, 13, 15), float64], Tensor[(10, 11, 16), float32], Tensor[(2340, 1), float64]) {
  %102 = cast(meta[relay.Constant][4] /* ty=Tensor[(2340, 1), float64] */, dtype="float64") /* ty=Tensor[(2340, 1), float64] */;
  %103 = reshape(%102, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), float64] */;
  %104 = @func_8371() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %105 = cast(meta[relay.Constant][4] /* ty=Tensor[(2340, 1), float64] */, dtype="float64") /* ty=Tensor[(2340, 1), float64] */;
  %106 = @func_9325() /* ty=Tensor[(312), float32] */;
  %107 = @func_5752(%103) /* ty=Tensor[(12, 13, 15), float64] */;
  %108 = %104.1;
  %109 = cos(%105) /* ty=Tensor[(2340, 1), float64] */;
  (%106, %107, %108, %109)
}

def @func_10996(%var_10994: bool, %var_10995: Tensor[(6, 5, 1), bool]) -> Tensor[(6, 5, 1), bool] {
  @func_10992(%var_10994, %var_10995) /* ty=Tensor[(6, 5, 1), bool] */
}

def @func_4592(%var_4590: uint64, %var_4591: Tensor[(2400), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) {
  %130 = fn (%var_4553: uint64, %var_4560: Tensor[(2400), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) {
    %110 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %111 = cast(%var_4553, dtype="uint64") /* ty=uint64 */;
    %112 = cast(meta[relay.Constant][5] /* ty=Tensor[(7), uint64] */, dtype="uint64") /* ty=Tensor[(7), uint64] */;
    %113 = reshape(%111, newshape=[]) /* ty=uint64 */;
    %114 = reshape(%112, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), uint64] */;
    %115 = @func_389(%113, %114) /* ty=(Tensor[(1, 1, 7), uint64], Tensor[(7, 1, 1), float32]) */;
    %116 = cast(%var_4560, dtype="uint64") /* ty=Tensor[(2400), uint64] */;
    %117 = reshape(%116, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint64] */;
    %118 = @func_3724(%117) /* ty=(Tensor[(10, 16, 15), uint64],) */;
    %119 = cast(%var_4553, dtype="uint16") /* ty=uint16 */;
    %120 = cast(%var_4560, dtype="uint16") /* ty=Tensor[(2400), uint16] */;
    %121 = bitwise_and(%119, %120) /* ty=Tensor[(2400), uint16] */;
    %122 = cast(%121, dtype="bool") /* ty=Tensor[(2400), bool] */;
    %123 = shape_of(%var_4560, dtype="int32") /* ty=Tensor[(1), int32] */;
    %124 = cast(%var_4560, dtype="bool") /* ty=Tensor[(2400), bool] */;
    %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?), bool] */;
    %126 = %110.0;
    %127 = %115.0;
    %128 = %118.0;
    %129 = logical_and(%124, %125) /* ty=Tensor[(2400), bool] */;
    (%126, %127, meta[relay.Constant][5] /* ty=Tensor[(7), uint64] */, %128, %129)
  };
  %130(%var_4590, %var_4591) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) */
}

def @func_9220() -> (Tensor[(10, 11, 16), float64],) {
  %133 = fn () -> (Tensor[(10, 11, 16), float64],) {
    %131 = @func_8023() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %132 = %131.0;
    (%132,)
  };
  %133() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_12548() -> Tensor[(10, 11, 16), float64] {
  @func_12546() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_5206(%var_5204: Tensor[(16, 2, 7), int32], %var_5205: Tensor[(16, 2, 7), int32]) -> (Tensor[(16, 2, 7), int32],) {
  %139 = fn (%var_5197: Tensor[(16, 2, 7), int32], %var_5198: Tensor[(16, 2, 7), int32]) -> (Tensor[(16, 2, 7), int32],) {
    %134 = cast(%var_5198, dtype="int32") /* ty=Tensor[(16, 2, 7), int32] */;
    %135 = shape_of(%var_5197, dtype="int32") /* ty=Tensor[(3), int32] */;
    %136 = cast(%var_5197, dtype="int32") /* ty=Tensor[(16, 2, 7), int32] */;
    %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %138 = bitwise_xor(%136, %137) /* ty=Tensor[(16, 2, 7), int32] */;
    (%138,)
  };
  %139(%var_5204, %var_5205) /* ty=(Tensor[(16, 2, 7), int32],) */
}

def @func_9224() -> (Tensor[(312), float32],) {
  %142 = fn () -> (Tensor[(312), float32],) {
    %140 = @func_7390() /* ty=(Tensor[(312), float32],) */;
    %141 = %140.0;
    (%141,)
  };
  %142() /* ty=(Tensor[(312), float32],) */
}

def @func_7093() -> Tensor[(10, 11, 16), float64] {
  %143 = @func_5268() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %143.0
}

def @func_7166() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */
}

def @func_8912() -> Tensor[(10, 11, 16), float32] {
  %145 = fn () -> Tensor[(10, 11, 16), float32] {
    %144 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
    %144.1
  };
  %145() /* ty=Tensor[(10, 11, 16), float32] */
}

def @func_8397(%var_8396: Tensor[(2400, 1), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], uint64, Tensor[(2400, 1), uint64]) {
  %156 = fn (%var_8393: Tensor[(2400, 1), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], uint64, Tensor[(2400, 1), uint64]) {
    %146 = @func_5240() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %147 = @func_5844() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %148 = cast(meta[relay.Constant][6] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %149 = cast(%var_8393, dtype="uint64") /* ty=Tensor[(2400, 1), uint64] */;
    %150 = reshape(%148, newshape=[]) /* ty=uint64 */;
    %151 = reshape(%149, newshape=[2400]) /* ty=Tensor[(2400), uint64] */;
    %152 = @func_4589(%150, %151) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) */;
    %153 = %146.0;
    %154 = %147.0;
    %155 = %152.0;
    (%153, %154, %155, meta[relay.Constant][6] /* ty=uint64 */, %var_8393)
  };
  %156(%var_8396) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], uint64, Tensor[(2400, 1), uint64]) */
}

def @func_6481() -> Tensor[(10, 11, 16), float64] {
  @func_6479() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_1725(%var_1724: Tensor[(2, 16, 1), float64]) -> Tensor[(2, 16, ?), int32] {
  %163 = fn (%var_1691: Tensor[(2, 16, 1), float64]) -> Tensor[(2, 16, ?), int32] {
    %157 = cast(%var_1691, dtype="float64") /* ty=Tensor[(2, 16, 1), float64] */;
    %158 = acos(%157) /* ty=Tensor[(2, 16, 1), float64] */;
    %159 = cast(%var_1691, dtype="int32") /* ty=Tensor[(2, 16, 1), int32] */;
    %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
    %161 = cast(%158, dtype="int32") /* ty=Tensor[(2, 16, 1), int32] */;
    %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    bitwise_and(%161, %162) /* ty=Tensor[(2, 16, ?), int32] */
  };
  %163(%var_1724) /* ty=Tensor[(2, 16, ?), int32] */
}

def @func_4831(%var_4828: Tensor[(90, 18), int64], %var_4829: Tensor[(20, 120), uint64], %var_4830: Tensor[(150), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], uint64, Tensor[(7), uint64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(4, 14, 2), int64], Tensor[(15, 9), int64], Tensor[(10, 11, 16), float64], Tensor[(20, 120), uint64], Tensor[(10, 11, 16), float64], Tensor[(90, 18), bool], Tensor[(1, 1, 7), uint64], Tensor[(10, 3, 5), bool], Tensor[(150), int16], Tensor[(90, 18), float64], Tensor[(6, 14, 4), float64], Tensor[(336), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) {
  %238 = fn (%var_4740: Tensor[(90, 18), int64], %var_4752: Tensor[(20, 120), uint64], %var_4802: Tensor[(150), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], uint64, Tensor[(7), uint64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(4, 14, 2), int64], Tensor[(15, 9), int64], Tensor[(10, 11, 16), float64], Tensor[(20, 120), uint64], Tensor[(10, 11, 16), float64], Tensor[(90, 18), bool], Tensor[(1, 1, 7), uint64], Tensor[(10, 3, 5), bool], Tensor[(150), int16], Tensor[(90, 18), float64], Tensor[(6, 14, 4), float64], Tensor[(336), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) {
    %164 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %165 = cast(meta[relay.Constant][7] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %166 = cast(meta[relay.Constant][8] /* ty=Tensor[(7), uint64] */, dtype="uint64") /* ty=Tensor[(7), uint64] */;
    %167 = reshape(%165, newshape=[]) /* ty=uint64 */;
    %168 = reshape(%166, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), uint64] */;
    %169 = @func_389(%167, %168) /* ty=(Tensor[(1, 1, 7), uint64], Tensor[(7, 1, 1), float32]) */;
    %170 = %164.0;
    %171 = cast(%170, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
    %172 = reshape(%171, newshape=[10, 11, 16]) /* ty=Tensor[(10, 11, 16), float64] */;
    %173 = @func_4459(%172) /* ty=(Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), bool]) */;
    %174 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %175 = cast(meta[relay.Constant][9] /* ty=Tensor[(15, 9), int64] */, dtype="int64") /* ty=Tensor[(15, 9), int64] */;
    %176 = cast(%var_4740, dtype="int64") /* ty=Tensor[(90, 18), int64] */;
    %177 = cast(%var_4740, dtype="int64") /* ty=Tensor[(90, 18), int64] */;
    %178 = reshape(%175, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), int64] */;
    %179 = reshape(%176, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), int64] */;
    %180 = reshape(%177, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), int64] */;
    %181 = @func_3876(%178, %179, %180) /* ty=(Tensor[(15, 12, 9), bool], Tensor[(4, 14, 2), int64], Tensor[(112), int64], Tensor[(15, 12, 9), float64]) */;
    %182 = cast(meta[relay.Constant][7] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %183 = cast(%var_4752, dtype="uint64") /* ty=Tensor[(20, 120), uint64] */;
    %184 = reshape(%182, newshape=[]) /* ty=uint64 */;
    %185 = reshape(%183, newshape=[2400]) /* ty=Tensor[(2400), uint64] */;
    %186 = @func_4589(%184, %185) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) */;
    %187 = cast(%var_4740, dtype="float32") /* ty=Tensor[(90, 18), float32] */;
    %188 = erf(%187) /* ty=Tensor[(90, 18), float32] */;
    %189 = cast(%188, dtype="float32") /* ty=Tensor[(90, 18), float32] */;
    %190 = atan(%189) /* ty=Tensor[(90, 18), float32] */;
    %191 = cast(%var_4740, dtype="bool") /* ty=Tensor[(90, 18), bool] */;
    %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(2), int32] */;
    %193 = cast(%190, dtype="bool") /* ty=Tensor[(90, 18), bool] */;
    %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %195 = cast(meta[relay.Constant][7] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %196 = cast(%var_4752, dtype="uint64") /* ty=Tensor[(20, 120), uint64] */;
    %197 = reshape(%195, newshape=[]) /* ty=uint64 */;
    %198 = reshape(%196, newshape=[2400]) /* ty=Tensor[(2400), uint64] */;
    %199 = @func_4589(%197, %198) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) */;
    %200 = cast(%var_4802, dtype="int16") /* ty=Tensor[(150), int16] */;
    %201 = reshape(%200, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), int16] */;
    %202 = @func_3837(%201) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) */;
    %203 = cast(%var_4740, dtype="float64") /* ty=Tensor[(90, 18), float64] */;
    %204 = shape_of(%188, dtype="int32") /* ty=Tensor[(2), int32] */;
    %205 = cast(%188, dtype="float64") /* ty=Tensor[(90, 18), float64] */;
    %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %207 = floor_mod(%205, %206) /* ty=Tensor[(90, 18), float64] */;
    %208 = cast(%207, dtype="uint16") /* ty=Tensor[(90, 18), uint16] */;
    %209 = shape_of(%190, dtype="int32") /* ty=Tensor[(2), int32] */;
    %210 = cast(%190, dtype="uint16") /* ty=Tensor[(90, 18), uint16] */;
    %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %212 = multiply(%210, %211) /* ty=Tensor[(90, 18), uint16] */;
    %213 = cast(%207, dtype="int32") /* ty=Tensor[(90, 18), int32] */;
    %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(2), int32] */;
    %215 = cast(%212, dtype="int32") /* ty=Tensor[(90, 18), int32] */;
    %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %217 = right_shift(%215, %216) /* ty=Tensor[(90, 18), int32] */;
    %218 = cast(%217, dtype="float64") /* ty=Tensor[(90, 18), float64] */;
    %219 = cosh(%218) /* ty=Tensor[(90, 18), float64] */;
    %220 = cast(%219, dtype="float64") /* ty=Tensor[(90, 18), float64] */;
    %221 = cast(meta[relay.Constant][10] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %222 = reshape(%221, newshape=[6, 14, 4]) /* ty=Tensor[(6, 14, 4), float64] */;
    %223 = cast(meta[relay.Constant][11] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
    %224 = reshape(%223, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
    %225 = @func_3442(%224) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) */;
    %226 = %169.0;
    %227 = %173.2;
    %228 = %174.0;
    %229 = %181.1;
    %230 = %186.0;
    %231 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
    %232 = logical_and(%193, %194) /* ty=Tensor[(90, 18), bool] */;
    %233 = %199.1;
    %234 = %202.0;
    %235 = acosh(%220) /* ty=Tensor[(90, 18), float64] */;
    %236 = @func_3030(%222) /* ty=Tensor[(6, 14, 4), float64] */;
    %237 = %225.0;
    (%170, %226, meta[relay.Constant][7] /* ty=uint64 */, meta[relay.Constant][8] /* ty=Tensor[(7), uint64] */, %227, %228, %229, meta[relay.Constant][9] /* ty=Tensor[(15, 9), int64] */, %230, %var_4752, %231, %232, %233, %234, %var_4802, %235, %236, meta[relay.Constant][10] /* ty=Tensor[(336), float64] */, %237, meta[relay.Constant][11] /* ty=Tensor[(312), float32] */)
  };
  %238(%var_4828, %var_4829, %var_4830) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], uint64, Tensor[(7), uint64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(4, 14, 2), int64], Tensor[(15, 9), int64], Tensor[(10, 11, 16), float64], Tensor[(20, 120), uint64], Tensor[(10, 11, 16), float64], Tensor[(90, 18), bool], Tensor[(1, 1, 7), uint64], Tensor[(10, 3, 5), bool], Tensor[(150), int16], Tensor[(90, 18), float64], Tensor[(6, 14, 4), float64], Tensor[(336), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */
}

def @func_12620() -> (Tensor[(150), int16],) {
  %239 = @func_8853() /* ty=(Tensor[(150), int16],) */;
  %240 = %239.0;
  (%240,)
}

def @func_9087() -> (Tensor[(10, 11, 16), float64],) {
  %241 = @func_8167() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %242 = %241.0;
  (%242,)
}

def @func_11743() -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(312), float32], Tensor[(150), int16], Tensor[(4, 10, 14), float32], Tensor[(560), float32], Tensor[(10, 11, 16), float64]) {
  %243 = @func_8861() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %244 = @func_10169() /* ty=(Tensor[(312), float32],) */;
  %245 = cast(meta[relay.Constant][12] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
  %246 = reshape(%245, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), float32] */;
  %247 = %243.0;
  %248 = @func_6785() /* ty=Tensor[(10, 11, 16), float64] */;
  %249 = %244.0;
  %250 = @func_8175() /* ty=Tensor[(150), int16] */;
  %251 = @func_10550(%246) /* ty=Tensor[(4, 10, 14), float32] */;
  %252 = @func_9967() /* ty=Tensor[(10, 11, 16), float64] */;
  (%247, %248, %249, %250, %251, meta[relay.Constant][12] /* ty=Tensor[(560), float32] */, %252)
}

def @func_5645(%var_5643: Tensor[(12, 2, 9), float32], %var_5644: Tensor[(10, 42), float64]) -> (Tensor[(12, 2, 9), float32], Tensor[(70, 6), float64], Tensor[(10, 42), float64]) {
  @func_5641(%var_5643, %var_5644) /* ty=(Tensor[(12, 2, 9), float32], Tensor[(70, 6), float64], Tensor[(10, 42), float64]) */
}

def @func_6075(%var_6074: Tensor[(224), int32]) -> (Tensor[(10, 11, 16), float64], Tensor[(4, 14, 14), float64], Tensor[(224), int32], Tensor[(70, 6), bool], Tensor[(70, 6), float64]) {
  %271 = fn (%var_6045: Tensor[(224), int32]) -> (Tensor[(10, 11, 16), float64], Tensor[(4, 14, 14), float64], Tensor[(224), int32], Tensor[(70, 6), bool], Tensor[(70, 6), float64]) {
    %253 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
    %254 = cast(%253, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
    %255 = cast(%var_6045, dtype="int32") /* ty=Tensor[(224), int32] */;
    %256 = reshape(%254, newshape=[10, 11, 16]) /* ty=Tensor[(10, 11, 16), float64] */;
    %257 = reshape(%255, newshape=[224]) /* ty=Tensor[(224), int32] */;
    %258 = @func_5405(%256, %257) /* ty=(Tensor[(16, 2, 7), int32], Tensor[(224), int32], Tensor[(10, 11, 16), uint64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) */;
    %259 = cast(meta[relay.Constant][13] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %260 = reshape(%259, newshape=[70, 6]) /* ty=Tensor[(70, 6), float64] */;
    %261 = @func_5069(%260) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(70, 6), float64]) */;
    %262 = %261.2;
    %263 = cast(meta[relay.Constant][13] /* ty=Tensor[(420), float64] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(2), int32] */;
    %265 = cast(%262, dtype="bool") /* ty=Tensor[(70, 6), bool] */;
    %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %267 = cast(%262, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
    %268 = %258.3;
    %269 = greater_equal(%265, %266) /* ty=Tensor[(70, 6), bool] */;
    %270 = atan(%267) /* ty=Tensor[(70, 6), float64] */;
    (%253, %268, %var_6045, %269, %270)
  };
  %271(%var_6074) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(4, 14, 14), float64], Tensor[(224), int32], Tensor[(70, 6), bool], Tensor[(70, 6), float64]) */
}

def @func_5240() -> (Tensor[(10, 11, 16), float64],) {
  %272 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  (%272,)
}

def @func_8134(%var_8133: Tensor[(675), float32]) -> (Tensor[(10, 11, 16), float64], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(7, 1, 1), float64], Tensor[(675), float32]) {
  %285 = fn (%var_8130: Tensor[(675), float32]) -> (Tensor[(10, 11, 16), float64], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(7, 1, 1), float64], Tensor[(675), float32]) {
    %273 = @func_5844() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %274 = cast(meta[relay.Constant][14] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
    %275 = reshape(%274, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
    %276 = @func_97(%275) /* ty=(Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) */;
    %277 = cast(%var_8130, dtype="float32") /* ty=Tensor[(675), float32] */;
    %278 = cast(meta[relay.Constant][14] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
    %279 = reshape(%277, newshape=[9, 15, 5]) /* ty=Tensor[(9, 15, 5), float32] */;
    %280 = reshape(%278, newshape=[7]) /* ty=Tensor[(7), float64] */;
    %281 = @func_564(%279, %280) /* ty=(Tensor[(9, 15, 5), float32], Tensor[(7, 1, 1), float64], Tensor[(7), float64], Tensor[(7, 1, 1), float64]) */;
    %282 = %273.0;
    %283 = %276.1;
    %284 = %281.3;
    (%282, %283, meta[relay.Constant][14] /* ty=Tensor[(7), float64] */, %284, %var_8130)
  };
  %285(%var_8133) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(7, 1, 1), float32], Tensor[(7), float64], Tensor[(7, 1, 1), float64], Tensor[(675), float32]) */
}

def @func_10116(%var_10115: Tensor[(784), float64]) -> (Tensor[(224), int32], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) {
  %291 = fn (%var_10111: Tensor[(784), float64]) -> (Tensor[(224), int32], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) {
    %286 = @func_5581() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32]) */;
    %287 = cast(%var_10111, dtype="float64") /* ty=Tensor[(784), float64] */;
    %288 = reshape(%287, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float64] */;
    %289 = %286.3;
    %290 = @func_2689(%288) /* ty=Tensor[(4, 14, 14), float64] */;
    (%289, %290, %var_10111)
  };
  %291(%var_10115) /* ty=(Tensor[(224), int32], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) */
}

def @func_12315() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32], Tensor[(32), float64]) {
  %292 = @func_7010() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %293 = cast(meta[relay.Constant][15] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %294 = reshape(%293, newshape=[1, 32]) /* ty=Tensor[(1, 32), float64] */;
  %295 = @func_8677(%294) /* ty=(Tensor[(10, 11, 16), float32], Tensor[(?, 32), bool]) */;
  %296 = %292.0;
  %297 = %295.0;
  (%296, %297, meta[relay.Constant][15] /* ty=Tensor[(32), float64] */)
}

def @func_12499() -> (Tensor[(10, 11, 16), float64],) {
  %300 = fn () -> (Tensor[(10, 11, 16), float64],) {
    %298 = @func_11743() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(312), float32], Tensor[(150), int16], Tensor[(4, 10, 14), float32], Tensor[(560), float32], Tensor[(10, 11, 16), float64]) */;
    %299 = %298.6;
    (%299,)
  };
  %300() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_8023() -> (Tensor[(10, 11, 16), float64],) {
  %301 = @func_5897() /* ty=Tensor[(10, 11, 16), float64] */;
  (%301,)
}

def @func_9856(%var_9808: Tensor[(15, 10, 4), float64], %var_9844: Tensor[(312), float32]) -> (Tensor[(15, 10, 4), float64], Tensor[(7), float64], Tensor[(312), float32], Tensor[(420), float64]) {
  %302 = cast(%var_9808, dtype="float64") /* ty=Tensor[(15, 10, 4), float64] */;
  %303 = cast(%var_9844, dtype="float32") /* ty=Tensor[(312), float32] */;
  %304 = reshape(%303, newshape=[156, 2]) /* ty=Tensor[(156, 2), float32] */;
  %305 = @func_7844(%304) /* ty=(Tensor[(10, 11, 16), float32], Tensor[(7), float64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(156, 2), float64]) */;
  %306 = cast(%var_9844, dtype="float32") /* ty=Tensor[(312), float32] */;
  %307 = reshape(%306, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
  %308 = @func_3442(%307) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) */;
  %309 = sinh(%302) /* ty=Tensor[(15, 10, 4), float64] */;
  %310 = %305.1;
  %311 = %308.2;
  (%309, %310, %var_9844, %311)
}

def @func_3033(%var_3031: Tensor[(6, 14, 4), float64]) -> Tensor[(6, 14, 4), float64] {
  @func_3030(%var_3031) /* ty=Tensor[(6, 14, 4), float64] */
}

def @func_4993() -> Tensor[(10, 11, 16), float64] {
  @func_4667() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_12654() -> (Tensor[(150), int16],) {
  %314 = fn () -> (Tensor[(150), int16],) {
    %312 = @func_12620() /* ty=(Tensor[(150), int16],) */;
    %313 = %312.0;
    (%313,)
  };
  %314() /* ty=(Tensor[(150), int16],) */
}

def @func_5069(%var_5062: Tensor[(70, 6), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(70, 6), float64]) {
  %315 = cast(%var_5062, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
  %316 = reshape(%315, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %317 = @func_4953(%316) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(11, 14, 14), bool], Tensor[(154), bool], Tensor[(2156), bool]) */;
  %318 = cast(%var_5062, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
  %319 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  %320 = %317.1;
  %321 = asin(%318) /* ty=Tensor[(70, 6), float64] */;
  (%319, %320, %321)
}

def @main(%var_12730: Tensor[(10, 15, 1), int32]) -> Tensor[(10, 15, 1), int32] {
  %322 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %323 = cast(%var_12730, dtype="int32") /* ty=Tensor[(10, 15, 1), int32] */;
  add(%322, %323) /* ty=Tensor[(10, 15, 1), int32] */
}

def @func_6404(%var_6366: Tensor[(4, 15, 10), float64], %var_6367: Tensor[(4, 15, 10), float64]) -> (Tensor[(4, 14, 14), float64], Tensor[(784), float64], Tensor[(4, 15, 10), bool]) {
  %324 = cast(meta[relay.Constant][16] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %325 = reshape(%324, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float64] */;
  %326 = cast(%var_6367, dtype="float64") /* ty=Tensor[(4, 15, 10), float64] */;
  %327 = shape_of(%var_6366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%var_6366, dtype="float64") /* ty=Tensor[(4, 15, 10), float64] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %330 = power(%328, %329) /* ty=Tensor[(4, 15, 10), float64] */;
  %331 = cast(%var_6366, dtype="bool") /* ty=Tensor[(4, 15, 10), bool] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="bool") /* ty=Tensor[(4, 15, 10), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = @func_2689(%325) /* ty=Tensor[(4, 14, 14), float64] */;
  %336 = equal(%333, %334) /* ty=Tensor[(4, 15, 10), bool] */;
  (%335, meta[relay.Constant][16] /* ty=Tensor[(784), float64] */, %336)
}

def @func_11999() -> Tensor[(150), int16] {
  @func_11997() /* ty=Tensor[(150), int16] */
}

def @func_6656() -> (Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) {
  %337 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %338 = cast(meta[relay.Constant][17] /* ty=Tensor[(2400), uint64] */, dtype="uint64") /* ty=Tensor[(2400), uint64] */;
  %339 = reshape(%338, newshape=[2400]) /* ty=Tensor[(2400), uint64] */;
  %340 = @func_6179(%339) /* ty=(Tensor[(15, 7, 6), uint32], Tensor[(15, 7, 6), float32], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], uint64, Tensor[(1620), int64], Tensor[(2400), uint64], Tensor[(5, 30), int16], Tensor[(10, 11, 16), float64]) */;
  %341 = %337.0;
  %342 = %340.0;
  (%341, %342, meta[relay.Constant][17] /* ty=Tensor[(2400), uint64] */)
}

def @func_4461(%var_4460: Tensor[(10, 11, 16), float64]) -> (Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), bool]) {
  %366 = fn (%var_4434: Tensor[(10, 11, 16), float64]) -> (Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), bool]) {
    %343 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %344 = %343.0;
    %345 = cast(%344, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
    %346 = asin(%345) /* ty=Tensor[(10, 11, 16), float32] */;
    %347 = cast(%346, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
    %348 = asinh(%347) /* ty=Tensor[(10, 11, 16), float64] */;
    %349 = cast(%var_4434, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
    %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(3), int32] */;
    %351 = cast(%348, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
    %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %353 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %354 = %353.0;
    %355 = cast(%354, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
    %356 = shape_of(%346, dtype="int32") /* ty=Tensor[(3), int32] */;
    %357 = cast(%346, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
    %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %359 = cast(%354, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
    %360 = shape_of(%348, dtype="int32") /* ty=Tensor[(3), int32] */;
    %361 = cast(%348, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
    %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %363 = greater_equal(%351, %352) /* ty=Tensor[(10, 11, 16), bool] */;
    %364 = multiply(%357, %358) /* ty=Tensor[(10, 11, 16), float64] */;
    %365 = less(%361, %362) /* ty=Tensor[(10, 11, 16), bool] */;
    (%363, %364, %365)
  };
  %366(%var_4460) /* ty=(Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), bool]) */
}

def @func_5149() -> (Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) {
  %379 = fn () -> (Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) {
    %367 = cast(meta[relay.Constant][18] /* ty=Tensor[(150), int16] */, dtype="int16") /* ty=Tensor[(150), int16] */;
    %368 = reshape(%367, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), int16] */;
    %369 = @func_3837(%368) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) */;
    %370 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
    %371 = cast(%370, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
    %372 = acosh(%371) /* ty=Tensor[(10, 11, 16), float32] */;
    %373 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 11, 16), float32] */, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
    %374 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
    %375 = cast(%372, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
    %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %377 = %369.2;
    %378 = mod(%375, %376) /* ty=Tensor[(10, 11, 16), float32] */;
    (%377, meta[relay.Constant][18] /* ty=Tensor[(150), int16] */, %378)
  };
  %379() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */
}

def @func_8175() -> Tensor[(150), int16] {
  %380 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %380.1
}

def @func_9378() -> (Tensor[(10, 11, 16), float32], Tensor[(312), float64], Tensor[(10, 11, 16), float64]) {
  %392 = fn () -> (Tensor[(10, 11, 16), float32], Tensor[(312), float64], Tensor[(10, 11, 16), float64]) {
    %381 = @func_5742() /* ty=(Tensor[(10, 11, 16), float32],) */;
    %382 = @func_9223() /* ty=(Tensor[(312), float32],) */;
    %383 = %382.0;
    %384 = cast(meta[relay.Constant][20] /* ty=Tensor[(312), float32] */, dtype="float64") /* ty=Tensor[(312), float64] */;
    %385 = shape_of(%383, dtype="int32") /* ty=Tensor[(1), int32] */;
    %386 = cast(%383, dtype="float64") /* ty=Tensor[(312), float64] */;
    %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?), float64] */;
    %388 = @func_8167() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %389 = %381.0;
    %390 = floor_divide(%386, %387) /* ty=Tensor[(312), float64] */;
    %391 = %388.0;
    (%389, %390, %391)
  };
  %392() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(312), float64], Tensor[(10, 11, 16), float64]) */
}

def @func_8372() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  %397 = fn () -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
    %393 = @func_6245() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */;
    %394 = @func_7191() /* ty=(Tensor[(10, 11, 16), float32],) */;
    %395 = %393.0;
    %396 = %394.0;
    (%395, %396)
  };
  %397() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */
}

def @func_3934(%var_3933: Tensor[(3, 7, 2), int16]) -> (Tensor[(3, 7, 2), int16],) {
  %403 = fn (%var_3923: Tensor[(3, 7, 2), int16]) -> (Tensor[(3, 7, 2), int16],) {
    %398 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 7, 2), int16] */, dtype="int16") /* ty=Tensor[(3, 7, 2), int16] */;
    %399 = shape_of(%var_3923, dtype="int32") /* ty=Tensor[(3), int32] */;
    %400 = cast(%var_3923, dtype="int16") /* ty=Tensor[(3, 7, 2), int16] */;
    %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %402 = multiply(%400, %401) /* ty=Tensor[(3, 7, 2), int16] */;
    (%402,)
  };
  %403(%var_3933) /* ty=(Tensor[(3, 7, 2), int16],) */
}

def @func_7847(%var_7845: Tensor[(156, 2), float32]) -> (Tensor[(10, 11, 16), float32], Tensor[(7), float64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(156, 2), float64]) {
  @func_7844(%var_7845) /* ty=(Tensor[(10, 11, 16), float32], Tensor[(7), float64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(156, 2), float64]) */
}

def @func_10014() -> Tensor[(10, 11, 16), float32] {
  %404 = @func_8861() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %404.0
}

def @func_9344() -> (Tensor[(15, 14, 7), float32], Tensor[(4, 14, 14), float64], Tensor[(300, 2), float64], Tensor[(10, 11, 16), float64]) {
  @func_9342() /* ty=(Tensor[(15, 14, 7), float32], Tensor[(4, 14, 14), float64], Tensor[(300, 2), float64], Tensor[(10, 11, 16), float64]) */
}

def @func_4953(%var_4941: Tensor[(420), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(11, 14, 14), bool], Tensor[(154), bool], Tensor[(2156), bool]) {
  %405 = cast(%var_4941, dtype="float64") /* ty=Tensor[(420), float64] */;
  %406 = reshape(%405, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), float64] */;
  %407 = @func_2661(%406) /* ty=(Tensor[(6, 5, 14), float64],) */;
  %408 = cast(meta[relay.Constant][22] /* ty=Tensor[(154), bool] */, dtype="bool") /* ty=Tensor[(154), bool] */;
  %409 = cast(meta[relay.Constant][23] /* ty=Tensor[(2156), bool] */, dtype="bool") /* ty=Tensor[(2156), bool] */;
  %410 = reshape(%408, newshape=[11, 1, 14]) /* ty=Tensor[(11, 1, 14), bool] */;
  %411 = reshape(%409, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), bool] */;
  %412 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  %413 = %407.0;
  %414 = @func_596(%410, %411) /* ty=Tensor[(11, 14, 14), bool] */;
  (%412, %413, %var_4941, %414, meta[relay.Constant][22] /* ty=Tensor[(154), bool] */, meta[relay.Constant][23] /* ty=Tensor[(2156), bool] */)
}

def @func_10721() -> Tensor[(10, 11, 16), float32] {
  %416 = fn () -> Tensor[(10, 11, 16), float32] {
    %415 = @func_8538() /* ty=(Tensor[(10, 11, 16), float32],) */;
    %415.0
  };
  %416() /* ty=Tensor[(10, 11, 16), float32] */
}

def @func_10521() -> (Tensor[(10, 11, 16), float64],) {
  %417 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  (%417,)
}

def @func_10752(%var_10750: Tensor[(14, 3), int16]) -> (Tensor[(10, 11, 16), float32], Tensor[(3, 7, 2), int16], Tensor[(14, 3), int16]) {
  %418 = @func_9300() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32]) */;
  %419 = cast(%var_10750, dtype="int16") /* ty=Tensor[(14, 3), int16] */;
  %420 = reshape(%419, newshape=[7, 6]) /* ty=Tensor[(7, 6), int16] */;
  %421 = @func_10480(%420) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(312), float64], Tensor[(3, 7, 2), int16], Tensor[(7, 6), int16], Tensor[(10, 11, 16), float32]) */;
  %422 = %418.0;
  %423 = %421.2;
  (%422, %423, %var_10750)
}

def @func_11429(%var_11413: Tensor[(14, 12, 6), int8], %var_11414: Tensor[(14, 12, 6), int8]) -> (Tensor[(14, 12, 6), int8], Tensor[(10, 11, 16), float64], Tensor[(312), float32]) {
  %424 = cast(%var_11414, dtype="int8") /* ty=Tensor[(14, 12, 6), int8] */;
  %425 = shape_of(%var_11413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%var_11413, dtype="int8") /* ty=Tensor[(14, 12, 6), int8] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %428 = @func_8828() /* ty=(Tensor[(312), float32], Tensor[(10, 11, 16), float64]) */;
  %429 = bitwise_xor(%426, %427) /* ty=Tensor[(14, 12, 6), int8] */;
  %430 = @func_5827() /* ty=Tensor[(10, 11, 16), float64] */;
  %431 = %428.0;
  (%429, %430, %431)
}

def @func_97(%var_58: Tensor[(7, 1, 1), float64]) -> (Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) {
  %432 = cast(%var_58, dtype="float64") /* ty=Tensor[(7, 1, 1), float64] */;
  %433 = cast(%var_58, dtype="float32") /* ty=Tensor[(7, 1, 1), float32] */;
  %434 = atan(%432) /* ty=Tensor[(7, 1, 1), float64] */;
  %435 = log2(%433) /* ty=Tensor[(7, 1, 1), float32] */;
  (%434, %435)
}

def @func_9089() -> (Tensor[(10, 11, 16), float64],) {
  @func_9087() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_10550(%var_10546: Tensor[(4, 10, 14), float32]) -> Tensor[(4, 10, 14), float32] {
  %436 = cast(%var_10546, dtype="float32") /* ty=Tensor[(4, 10, 14), float32] */;
  erf(%436) /* ty=Tensor[(4, 10, 14), float32] */
}

def @func_10613(%var_10612: Tensor[(2, 504), float32]) -> (Tensor[(10, 11, 16), float32], Tensor[(9, 7, 16), float32], Tensor[(2, 504), float32]) {
  %442 = fn (%var_10605: Tensor[(2, 504), float32]) -> (Tensor[(10, 11, 16), float32], Tensor[(9, 7, 16), float32], Tensor[(2, 504), float32]) {
    %437 = @func_10281() /* ty=(Tensor[(10, 11, 16), float32],) */;
    %438 = cast(%var_10605, dtype="float32") /* ty=Tensor[(2, 504), float32] */;
    %439 = reshape(%438, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float32] */;
    %440 = %437.0;
    %441 = @func_10494(%439) /* ty=Tensor[(9, 7, 16), float32] */;
    (%440, %441, %var_10605)
  };
  %442(%var_10612) /* ty=(Tensor[(10, 11, 16), float32], Tensor[(9, 7, 16), float32], Tensor[(2, 504), float32]) */
}

def @func_4995() -> Tensor[(10, 11, 16), float64] {
  @func_4993() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_8168() -> (Tensor[(10, 11, 16), float64],) {
  %447 = fn () -> (Tensor[(10, 11, 16), float64],) {
    %443 = @func_8023() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %444 = %443.0;
    %445 = cast(%444, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
    %446 = cosh(%445) /* ty=Tensor[(10, 11, 16), float64] */;
    (%446,)
  };
  %447() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_6985(%var_6983: Tensor[(7), float64], %var_6984: Tensor[(312, 1), float32]) -> (Tensor[(6, 5, 14), float32], Tensor[(7, 1, 1), float64], Tensor[(675), float32], Tensor[(7), float64], Tensor[(6, 5, 14), float64], Tensor[(312, 1), float32], Tensor[(784), float64], Tensor[(600), float64], Tensor[(10, 11, 16), float64]) {
  @func_6981(%var_6983, %var_6984) /* ty=(Tensor[(6, 5, 14), float32], Tensor[(7, 1, 1), float64], Tensor[(675), float32], Tensor[(7), float64], Tensor[(6, 5, 14), float64], Tensor[(312, 1), float32], Tensor[(784), float64], Tensor[(600), float64], Tensor[(10, 11, 16), float64]) */
}

def @func_11554(%var_11552: Tensor[(112), int64]) -> (Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(312), float32], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(4, 14, 2), int64], Tensor[(112), int64]) {
  @func_11551(%var_11552) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(312), float32], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(4, 14, 2), int64], Tensor[(112), int64]) */
}

def @func_5192() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) {
  @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */
}

def @func_12419() -> Tensor[(10, 11, 16), float32] {
  @func_12417() /* ty=Tensor[(10, 11, 16), float32] */
}

def @func_8210() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) {
  %448 = @func_5268() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %449 = @func_8167() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %450 = %448.0;
  %451 = @func_7093() /* ty=Tensor[(10, 11, 16), float64] */;
  %452 = %449.0;
  %453 = @func_7093() /* ty=Tensor[(10, 11, 16), float64] */;
  (%450, %451, %452, %453)
}

def @func_8679(%var_8678: Tensor[(1, 32), float64]) -> (Tensor[(10, 11, 16), float32], Tensor[(?, 32), bool]) {
  %464 = fn (%var_8666: Tensor[(1, 32), float64]) -> (Tensor[(10, 11, 16), float32], Tensor[(?, 32), bool]) {
    %454 = @func_8562() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) */;
    %455 = cast(%var_8666, dtype="float64") /* ty=Tensor[(1, 32), float64] */;
    %456 = reshape(%455, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), float64] */;
    %457 = @func_1723(%456) /* ty=Tensor[(2, 16, ?), int32] */;
    %458 = cast(%457, dtype="bool") /* ty=Tensor[(2, 16, ?), bool] */;
    %459 = shape_of(%var_8666, dtype="int32") /* ty=Tensor[(2), int32] */;
    %460 = cast(%var_8666, dtype="bool") /* ty=Tensor[(1, 32), bool] */;
    %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %462 = %454.0;
    %463 = greater(%460, %461) /* ty=Tensor[(?, 32), bool] */;
    (%462, %463)
  };
  %464(%var_8678) /* ty=(Tensor[(10, 11, 16), float32], Tensor[(?, 32), bool]) */
}

def @func_8305() -> Tensor[(10, 11, 16), float64] {
  @func_8303() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_600(%var_598: Tensor[(11, 1, 14), bool], %var_599: Tensor[(11, 14, 14), bool]) -> Tensor[(11, 14, 14), bool] {
  @func_596(%var_598, %var_599) /* ty=Tensor[(11, 14, 14), bool] */
}

def @func_8769() -> (Tensor[(6, 5, 14), float32], Tensor[(10, 11, 16), float64]) {
  %465 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %466 = %465.0;
  %467 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  (%466, %467)
}

def @func_8854() -> (Tensor[(150), int16],) {
  %469 = fn () -> (Tensor[(150), int16],) {
    %468 = @func_8175() /* ty=Tensor[(150), int16] */;
    (%468,)
  };
  %469() /* ty=(Tensor[(150), int16],) */
}

def @func_11608() -> Tensor[(10, 11, 16), float64] {
  %470 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %470.0
}

def @func_8025() -> (Tensor[(10, 11, 16), float64],) {
  @func_8023() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_12362() -> Tensor[(15, 7, 6), uint32] {
  %471 = fn () -> Tensor[(15, 7, 6), uint32] {
    @func_10799() /* ty=Tensor[(15, 7, 6), uint32] */
  };
  %471() /* ty=Tensor[(15, 7, 6), uint32] */
}

def @func_7544() -> Tensor[(10, 11, 16), float32] {
  %473 = fn () -> Tensor[(10, 11, 16), float32] {
    %472 = @func_7191() /* ty=(Tensor[(10, 11, 16), float32],) */;
    %472.0
  };
  %473() /* ty=Tensor[(10, 11, 16), float32] */
}

def @func_12417() -> Tensor[(10, 11, 16), float32] {
  %474 = @func_10324() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) */;
  %474.0
}

def @func_4380() -> (Tensor[(10, 11, 16), float64],) {
  %475 = cast(meta[relay.Constant][24] /* ty=Tensor[(10, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %476 = sqrt(%475) /* ty=Tensor[(10, 11, 16), float64] */;
  (%476,)
}

def @func_9545() -> (Tensor[(10, 11, 16), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float64]) {
  %477 = @func_8853() /* ty=(Tensor[(150), int16],) */;
  %478 = @func_8371() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %479 = @func_8911() /* ty=Tensor[(10, 11, 16), float32] */;
  %480 = %477.0;
  %481 = %478.0;
  (%479, %480, %481)
}

def @func_12546() -> Tensor[(10, 11, 16), float64] {
  %482 = @func_9693() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %482.0
}

def @func_3839(%var_3838: Tensor[(10, 3, 5), int16]) -> (Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) {
  %494 = fn (%var_3812: Tensor[(10, 3, 5), int16]) -> (Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) {
    %483 = cast(%var_3812, dtype="bool") /* ty=Tensor[(10, 3, 5), bool] */;
    %484 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(10, 3, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %485 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 3, 5), int16] */, dtype="bool") /* ty=Tensor[(10, 3, 5), bool] */;
    %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %487 = cast(meta[relay.Constant][26] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %488 = reshape(%487, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), float64] */;
    %489 = @func_2661(%488) /* ty=(Tensor[(6, 5, 14), float64],) */;
    %490 = %489.0;
    %491 = cast(%490, dtype="float32") /* ty=Tensor[(6, 5, 14), float32] */;
    %492 = not_equal(%485, %486) /* ty=Tensor[(10, 3, 5), bool] */;
    %493 = sin(%491) /* ty=Tensor[(6, 5, 14), float32] */;
    (%492, meta[relay.Constant][26] /* ty=Tensor[(420), float64] */, %493)
  };
  %494(%var_3838) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) */
}

def @func_5897() -> Tensor[(10, 11, 16), float64] {
  %495 = @func_5844() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %496 = %495.0;
  %497 = cast(meta[relay.Constant][27] /* ty=Tensor[(10, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %498 = shape_of(%496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(%496, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%499, %500) /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_5923() -> (Tensor[(10, 11, 16), float64],) {
  @func_5921() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_7010() -> (Tensor[(10, 11, 16), float64],) {
  %501 = @func_5897() /* ty=Tensor[(10, 11, 16), float64] */;
  (%501,)
}

def @func_9325() -> Tensor[(312), float32] {
  %502 = @func_9223() /* ty=(Tensor[(312), float32],) */;
  %502.0
}

def @func_5754(%var_5753: Tensor[(12, 13, 15), float64]) -> Tensor[(12, 13, 15), float64] {
  %504 = fn (%var_5744: Tensor[(12, 13, 15), float64]) -> Tensor[(12, 13, 15), float64] {
    %503 = cast(%var_5744, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
    rsqrt(%503) /* ty=Tensor[(12, 13, 15), float64] */
  };
  %504(%var_5753) /* ty=Tensor[(12, 13, 15), float64] */
}

def @func_9938() -> (Tensor[(312), float32], Tensor[(10, 11, 16), float32]) {
  %505 = @func_7390() /* ty=(Tensor[(312), float32],) */;
  %506 = @func_7059() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %507 = %505.0;
  %508 = %506.0;
  (%507, %508)
}

def @func_11568() -> (Tensor[(10, 11, 16), float32],) {
  @func_11566() /* ty=(Tensor[(10, 11, 16), float32],) */
}

def @func_8212() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) {
  @func_8210() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */
}

def @func_9693() -> (Tensor[(10, 11, 16), float64],) {
  %509 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  (%509,)
}

def @func_1002(%var_974: Tensor[(4, 14, 2), int64]) -> Tensor[(4, 14, 2), int64] {
  %510 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 14, 2), int64] */, dtype="int64") /* ty=Tensor[(4, 14, 2), int64] */;
  %511 = shape_of(%var_974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%var_974, dtype="int64") /* ty=Tensor[(4, 14, 2), int64] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_and(%512, %513) /* ty=Tensor[(4, 14, 2), int64] */
}

def @func_5270() -> (Tensor[(10, 11, 16), float64],) {
  @func_5268() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_10170() -> (Tensor[(312), float32],) {
  %516 = fn () -> (Tensor[(312), float32],) {
    %514 = @func_9787() /* ty=(Tensor[(312), float32],) */;
    %515 = %514.0;
    (%515,)
  };
  %516() /* ty=(Tensor[(312), float32],) */
}

def @func_11267() -> (Tensor[(312), float32], Tensor[(12, 13, 15), float64], Tensor[(10, 11, 16), float32], Tensor[(2340, 1), float64]) {
  @func_11265() /* ty=(Tensor[(312), float32], Tensor[(12, 13, 15), float64], Tensor[(10, 11, 16), float32], Tensor[(2340, 1), float64]) */
}

def @func_10139() -> Tensor[(150), int16] {
  @func_8175() /* ty=Tensor[(150), int16] */
}

def @func_8563() -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) {
  %521 = fn () -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) {
    %517 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
    %518 = @func_8167() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %519 = %517.1;
    %520 = %518.0;
    (%519, %520)
  };
  %521() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) */
}

def @func_8790(%var_8780: Tensor[(5, 4, 4), uint16]) -> (Tensor[(5, 4, 4), uint16],) {
  %522 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 4, 4), uint16] */, dtype="uint16") /* ty=Tensor[(1, 4, 4), uint16] */;
  %523 = cast(%var_8780, dtype="uint16") /* ty=Tensor[(5, 4, 4), uint16] */;
  %524 = bitwise_xor(%522, %523) /* ty=Tensor[(5, 4, 4), uint16] */;
  (%524,)
}

def @func_9646(%var_9623: Tensor[(420), float32]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), int16], Tensor[(420), float32]) {
  %525 = @func_6245() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */;
  %526 = @func_8210() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %527 = cast(%var_9623, dtype="float32") /* ty=Tensor[(420), float32] */;
  %528 = reshape(%527, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), float32] */;
  %529 = %525.0;
  %530 = %526.3;
  %531 = @func_6754(%528) /* ty=Tensor[(6, 5, 14), int16] */;
  (%529, %530, %531, %var_9623)
}

def @func_1005(%var_1003: Tensor[(4, 14, 2), int64]) -> Tensor[(4, 14, 2), int64] {
  @func_1002(%var_1003) /* ty=Tensor[(4, 14, 2), int64] */
}

def @func_10483(%var_10481: Tensor[(7, 6), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(312), float64], Tensor[(3, 7, 2), int16], Tensor[(7, 6), int16], Tensor[(10, 11, 16), float32]) {
  @func_10480(%var_10481) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(312), float64], Tensor[(3, 7, 2), int16], Tensor[(7, 6), int16], Tensor[(10, 11, 16), float32]) */
}

def @func_10244() -> (Tensor[(10, 11, 16), uint8], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  %542 = fn () -> (Tensor[(10, 11, 16), uint8], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
    %532 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
    %533 = %532.1;
    %534 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 11, 16), float32] */, dtype="uint8") /* ty=Tensor[(10, 11, 16), uint8] */;
    %535 = shape_of(%533, dtype="int32") /* ty=Tensor[(3), int32] */;
    %536 = cast(%533, dtype="uint8") /* ty=Tensor[(10, 11, 16), uint8] */;
    %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %538 = @func_7059() /* ty=(Tensor[(10, 11, 16), float32],) */;
    %539 = bitwise_or(%536, %537) /* ty=Tensor[(10, 11, 16), uint8] */;
    %540 = @func_5897() /* ty=Tensor[(10, 11, 16), float64] */;
    %541 = %538.0;
    (%539, %540, %541)
  };
  %542() /* ty=(Tensor[(10, 11, 16), uint8], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */
}

def @func_11108(%var_11107: Tensor[(150), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(420), float64], Tensor[(150), int16], Tensor[(10, 11, 16), float64]) {
  %555 = fn (%var_11100: Tensor[(150), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(420), float64], Tensor[(150), int16], Tensor[(10, 11, 16), float64]) {
    %543 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
    %544 = @func_9545() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float64]) */;
    %545 = @func_8828() /* ty=(Tensor[(312), float32], Tensor[(10, 11, 16), float64]) */;
    %546 = cast(%var_11100, dtype="int16") /* ty=Tensor[(150), int16] */;
    %547 = reshape(%546, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), int16] */;
    %548 = @func_3837(%547) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(420), float64], Tensor[(6, 5, 14), float32]) */;
    %549 = @func_5240() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %550 = %543.1;
    %551 = %544.2;
    %552 = %545.1;
    %553 = %548.1;
    %554 = %549.0;
    (%550, %551, %552, %553, %var_11100, %554)
  };
  %555(%var_11107) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(420), float64], Tensor[(150), int16], Tensor[(10, 11, 16), float64]) */
}

def @func_12094() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(784), bool], Tensor[(4, 196), bool], Tensor[(11, 14, 14), bool], Tensor[(420), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  %580 = fn () -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(784), bool], Tensor[(4, 196), bool], Tensor[(11, 14, 14), bool], Tensor[(420), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
    %556 = @func_9087() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %557 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 196), float64] */, dtype="float64") /* ty=Tensor[(4, 196), float64] */;
    %558 = reshape(%557, newshape=[784]) /* ty=Tensor[(784), float64] */;
    %559 = @func_8609(%558) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) */;
    %560 = %559.2;
    %561 = cast(meta[relay.Constant][32] /* ty=Tensor[(784), float64] */, dtype="bool") /* ty=Tensor[(784), bool] */;
    %562 = shape_of(%560, dtype="int32") /* ty=Tensor[(1), int32] */;
    %563 = cast(%560, dtype="bool") /* ty=Tensor[(784), bool] */;
    %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?), bool] */;
    %565 = cast(meta[relay.Constant][32] /* ty=Tensor[(784), float64] */, dtype="bool") /* ty=Tensor[(784), bool] */;
    %566 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(4, 196), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %567 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 196), float64] */, dtype="bool") /* ty=Tensor[(4, 196), bool] */;
    %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %569 = cast(meta[relay.Constant][33] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %570 = reshape(%569, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %571 = @func_4953(%570) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(11, 14, 14), bool], Tensor[(154), bool], Tensor[(2156), bool]) */;
    %572 = @func_10281() /* ty=(Tensor[(10, 11, 16), float32],) */;
    %573 = %556.0;
    %574 = @func_8303() /* ty=Tensor[(10, 11, 16), float64] */;
    %575 = equal(%563, %564) /* ty=Tensor[(784), bool] */;
    %576 = less(%567, %568) /* ty=Tensor[(4, 196), bool] */;
    %577 = %571.3;
    %578 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
    %579 = %572.0;
    (%573, %574, %575, %576, %577, meta[relay.Constant][33] /* ty=Tensor[(420), float64] */, %578, %579)
  };
  %580() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(784), bool], Tensor[(4, 196), bool], Tensor[(11, 14, 14), bool], Tensor[(420), float64], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */
}

def @func_10553(%var_10551: Tensor[(4, 10, 14), float32]) -> Tensor[(4, 10, 14), float32] {
  @func_10550(%var_10551) /* ty=Tensor[(4, 10, 14), float32] */
}

def @func_9758(%var_9756: Tensor[(3, 13, 15), uint16], %var_9757: Tensor[(3, 13, 15), uint16]) -> (Tensor[(10, 11, 16), float64], Tensor[(3, 13, 15), float64]) {
  %590 = fn (%var_9726: Tensor[(3, 13, 15), uint16], %var_9727: Tensor[(3, 13, 15), uint16]) -> (Tensor[(10, 11, 16), float64], Tensor[(3, 13, 15), float64]) {
    %581 = @func_5268() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %582 = cast(%var_9727, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
    %583 = shape_of(%var_9726, dtype="int32") /* ty=Tensor[(3), int32] */;
    %584 = cast(%var_9726, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
    %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %586 = greater_equal(%584, %585) /* ty=Tensor[(3, 13, 15), bool] */;
    %587 = cast(%586, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
    %588 = %581.0;
    %589 = sinh(%587) /* ty=Tensor[(3, 13, 15), float64] */;
    (%588, %589)
  };
  %590(%var_9756, %var_9757) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(3, 13, 15), float64]) */
}

def @func_6245() -> (Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) {
  %591 = @func_5921() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %592 = cast(meta[relay.Constant][34] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %593 = reshape(%592, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
  %594 = @func_3442(%593) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) */;
  %595 = %591.0;
  %596 = %594.0;
  (%595, %596, meta[relay.Constant][34] /* ty=Tensor[(312), float32] */)
}

def @func_7061() -> (Tensor[(10, 11, 16), float32],) {
  @func_7059() /* ty=(Tensor[(10, 11, 16), float32],) */
}

def @func_4956(%var_4954: Tensor[(420), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(11, 14, 14), bool], Tensor[(154), bool], Tensor[(2156), bool]) {
  @func_4953(%var_4954) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(11, 14, 14), bool], Tensor[(154), bool], Tensor[(2156), bool]) */
}

def @func_9649(%var_9647: Tensor[(420), float32]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), int16], Tensor[(420), float32]) {
  @func_9646(%var_9647) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), int16], Tensor[(420), float32]) */
}

def @func_8793(%var_8791: Tensor[(5, 4, 4), uint16]) -> (Tensor[(5, 4, 4), uint16],) {
  @func_8790(%var_8791) /* ty=(Tensor[(5, 4, 4), uint16],) */
}

def @func_9547() -> (Tensor[(10, 11, 16), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float64]) {
  @func_9545() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float64]) */
}

def @func_12317() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32], Tensor[(32), float64]) {
  @func_12315() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32], Tensor[(32), float64]) */
}

def @func_8753(%var_8751: Tensor[(10, 10, 10), int16], %var_8752: Tensor[(10, 10, 10), int16]) -> (Tensor[(10, 10, 10), int16], Tensor[(10, 11, 16), float64]) {
  %603 = fn (%var_8728: Tensor[(10, 10, 10), int16], %var_8729: Tensor[(10, 10, 10), int16]) -> (Tensor[(10, 10, 10), int16], Tensor[(10, 11, 16), float64]) {
    %597 = cast(%var_8729, dtype="int16") /* ty=Tensor[(10, 10, 10), int16] */;
    %598 = shape_of(%var_8728, dtype="int32") /* ty=Tensor[(3), int32] */;
    %599 = cast(%var_8728, dtype="int16") /* ty=Tensor[(10, 10, 10), int16] */;
    %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %601 = multiply(%599, %600) /* ty=Tensor[(10, 10, 10), int16] */;
    %602 = @func_5897() /* ty=Tensor[(10, 11, 16), float64] */;
    (%601, %602)
  };
  %603(%var_8751, %var_8752) /* ty=(Tensor[(10, 10, 10), int16], Tensor[(10, 11, 16), float64]) */
}

def @func_9674(%var_9672: Tensor[(15, 5, 6), float64]) -> (Tensor[(15, 5, 6), float64],) {
  @func_9671(%var_9672) /* ty=(Tensor[(15, 5, 6), float64],) */
}

def @func_8771() -> (Tensor[(6, 5, 14), float32], Tensor[(10, 11, 16), float64]) {
  @func_8769() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(10, 11, 16), float64]) */
}

def @func_11610() -> Tensor[(10, 11, 16), float64] {
  @func_11608() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_6981(%var_6964: Tensor[(7), float64], %var_6968: Tensor[(312, 1), float32]) -> (Tensor[(6, 5, 14), float32], Tensor[(7, 1, 1), float64], Tensor[(675), float32], Tensor[(7), float64], Tensor[(6, 5, 14), float64], Tensor[(312, 1), float32], Tensor[(784), float64], Tensor[(600), float64], Tensor[(10, 11, 16), float64]) {
  %604 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %605 = cast(meta[relay.Constant][35] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %606 = cast(%var_6964, dtype="float64") /* ty=Tensor[(7), float64] */;
  %607 = reshape(%605, newshape=[9, 15, 5]) /* ty=Tensor[(9, 15, 5), float32] */;
  %608 = reshape(%606, newshape=[7]) /* ty=Tensor[(7), float64] */;
  %609 = @func_564(%607, %608) /* ty=(Tensor[(9, 15, 5), float32], Tensor[(7, 1, 1), float64], Tensor[(7), float64], Tensor[(7, 1, 1), float64]) */;
  %610 = cast(%var_6968, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
  %611 = reshape(%610, newshape=[13, 12, 2]) /* ty=Tensor[(13, 12, 2), float32] */;
  %612 = @func_3442(%611) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) */;
  %613 = cast(meta[relay.Constant][36] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %614 = cast(meta[relay.Constant][36] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %615 = reshape(%613, newshape=[4, 15, 10]) /* ty=Tensor[(4, 15, 10), float64] */;
  %616 = reshape(%614, newshape=[4, 15, 10]) /* ty=Tensor[(4, 15, 10), float64] */;
  %617 = @func_6404(%615, %616) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(784), float64], Tensor[(4, 15, 10), bool]) */;
  %618 = %604.0;
  %619 = %609.1;
  %620 = %612.1;
  %621 = %617.1;
  %622 = @func_6479() /* ty=Tensor[(10, 11, 16), float64] */;
  (%618, %619, meta[relay.Constant][35] /* ty=Tensor[(675), float32] */, %var_6964, %620, %var_6968, %621, meta[relay.Constant][36] /* ty=Tensor[(600), float64] */, %622)
}

def @func_7476(%var_7474: Tensor[(5, 9, 16), float64], %var_7475: Tensor[(5, 9, 16), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32], Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(5, 9, 16), int16], Tensor[(5, 9, 16), uint64]) {
  @func_7472(%var_7474, %var_7475) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32], Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(5, 9, 16), int16], Tensor[(5, 9, 16), uint64]) */
}

def @func_7193() -> (Tensor[(10, 11, 16), float32],) {
  @func_7191() /* ty=(Tensor[(10, 11, 16), float32],) */
}

def @func_11632(%var_11630: Tensor[(13, 7, 16), int64], %var_11631: Tensor[(13, 7, 16), int64]) -> (Tensor[(13, 7, 16), bool],) {
  @func_11628(%var_11630, %var_11631) /* ty=(Tensor[(13, 7, 16), bool],) */
}

def @func_11347(%var_11343: Tensor[(147), float64]) -> (Tensor[(10, 11, 16), float32], Tensor[(3, 7, 7), float64], Tensor[(147), float64]) {
  %623 = @func_8562() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) */;
  %624 = cast(%var_11343, dtype="float64") /* ty=Tensor[(147), float64] */;
  %625 = reshape(%624, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), float64] */;
  %626 = %623.0;
  %627 = @func_9255(%625) /* ty=Tensor[(3, 7, 7), float64] */;
  (%626, %627, %var_11343)
}

def @func_9695() -> (Tensor[(10, 11, 16), float64],) {
  @func_9693() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_4668() -> Tensor[(10, 11, 16), float64] {
  %629 = fn () -> Tensor[(10, 11, 16), float64] {
    %628 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %628.0
  };
  %629() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_10523() -> (Tensor[(10, 11, 16), float64],) {
  @func_10521() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_4875(%var_4873: Tensor[(75, 9), float32]) -> (Tensor[(10, 11, 16), float64], Tensor[(7), float64], Tensor[(75, 9), float32], Tensor[(7), float64]) {
  @func_4872(%var_4873) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(7), float64], Tensor[(75, 9), float32], Tensor[(7), float64]) */
}

def @func_10992(%var_10974: bool, %var_10975: Tensor[(6, 5, 1), bool]) -> Tensor[(6, 5, 1), bool] {
  %630 = cast(%var_10974, dtype="bool") /* ty=bool */;
  %631 = cast(%var_10975, dtype="bool") /* ty=Tensor[(6, 5, 1), bool] */;
  logical_or(%630, %631) /* ty=Tensor[(6, 5, 1), bool] */
}

def @func_5268() -> (Tensor[(10, 11, 16), float64],) {
  %632 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
  (%632,)
}

def @func_10800() -> Tensor[(15, 7, 6), uint32] {
  %634 = fn () -> Tensor[(15, 7, 6), uint32] {
    %633 = @func_6656() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) */;
    %633.1
  };
  %634() /* ty=Tensor[(15, 7, 6), uint32] */
}

def @func_8540() -> (Tensor[(10, 11, 16), float32],) {
  @func_8538() /* ty=(Tensor[(10, 11, 16), float32],) */
}

def @func_11459() -> (Tensor[(13, 12, 2), float64],) {
  %635 = @func_9439() /* ty=(Tensor[(13, 12, 2), float32],) */;
  %636 = %635.0;
  %637 = cast(%636, dtype="float64") /* ty=Tensor[(13, 12, 2), float64] */;
  %638 = tan(%637) /* ty=Tensor[(13, 12, 2), float64] */;
  (%638,)
}

def @func_10496(%var_10495: Tensor[(9, 7, 16), float32]) -> Tensor[(9, 7, 16), float32] {
  %640 = fn (%var_10488: Tensor[(9, 7, 16), float32]) -> Tensor[(9, 7, 16), float32] {
    %639 = cast(%var_10488, dtype="float32") /* ty=Tensor[(9, 7, 16), float32] */;
    atanh(%639) /* ty=Tensor[(9, 7, 16), float32] */
  };
  %640(%var_10495) /* ty=Tensor[(9, 7, 16), float32] */
}

def @func_6756(%var_6755: Tensor[(6, 5, 14), float32]) -> Tensor[(6, 5, 14), int16] {
  %647 = fn (%var_6739: Tensor[(6, 5, 14), float32]) -> Tensor[(6, 5, 14), int16] {
    %641 = @func_5998() /* ty=(Tensor[(6, 5, 14), float32],) */;
    %642 = %641.0;
    %643 = cast(%var_6739, dtype="int16") /* ty=Tensor[(6, 5, 14), int16] */;
    %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
    %645 = cast(%642, dtype="int16") /* ty=Tensor[(6, 5, 14), int16] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    maximum(%645, %646) /* ty=Tensor[(6, 5, 14), int16] */
  };
  %647(%var_6755) /* ty=Tensor[(6, 5, 14), int16] */
}

def @func_10141() -> Tensor[(150), int16] {
  @func_10139() /* ty=Tensor[(150), int16] */
}

def @func_10972(%var_10971: Tensor[(32), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(312), float32], Tensor[(10, 11, 16), float64], Tensor[(32), float64], Tensor[(10, 11, 16), float64], Tensor[(2, 16, ?), float64], Tensor[(224), int32]) {
  %661 = fn (%var_10927: Tensor[(32), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(312), float32], Tensor[(10, 11, 16), float64], Tensor[(32), float64], Tensor[(10, 11, 16), float64], Tensor[(2, 16, ?), float64], Tensor[(224), int32]) {
    %648 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
    %649 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
    %650 = cast(%var_10927, dtype="float64") /* ty=Tensor[(32), float64] */;
    %651 = reshape(%650, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), float64] */;
    %652 = @func_1723(%651) /* ty=Tensor[(2, 16, ?), int32] */;
    %653 = cast(%652, dtype="float64") /* ty=Tensor[(2, 16, ?), float64] */;
    %654 = @func_5581() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32]) */;
    %655 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
    %656 = @func_9325() /* ty=Tensor[(312), float32] */;
    %657 = %648.0;
    %658 = %649.0;
    %659 = acosh(%653) /* ty=Tensor[(2, 16, ?), float64] */;
    %660 = %654.3;
    (%655, %656, %657, %var_10927, %658, %659, %660)
  };
  %661(%var_10971) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(312), float32], Tensor[(10, 11, 16), float64], Tensor[(32), float64], Tensor[(10, 11, 16), float64], Tensor[(2, 16, ?), float64], Tensor[(224), int32]) */
}

def @func_12663() -> (Tensor[(6, 7, 6), float64],) {
  %664 = fn () -> (Tensor[(6, 7, 6), float64],) {
    %662 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 7, 6), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 6), float64] */;
    %663 = tan(%662) /* ty=Tensor[(6, 7, 6), float64] */;
    (%663,)
  };
  %664() /* ty=(Tensor[(6, 7, 6), float64],) */
}

def @func_5409(%var_5407: Tensor[(10, 11, 16), float64], %var_5408: Tensor[(224), int32]) -> (Tensor[(16, 2, 7), int32], Tensor[(224), int32], Tensor[(10, 11, 16), uint64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) {
  @func_5405(%var_5407, %var_5408) /* ty=(Tensor[(16, 2, 7), int32], Tensor[(224), int32], Tensor[(10, 11, 16), uint64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) */
}

def @func_9257(%var_9256: Tensor[(3, 7, 7), float64]) -> Tensor[(3, 7, 7), float64] {
  %666 = fn (%var_9243: Tensor[(3, 7, 7), float64]) -> Tensor[(3, 7, 7), float64] {
    %665 = cast(%var_9243, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
    acosh(%665) /* ty=Tensor[(3, 7, 7), float64] */
  };
  %666(%var_9256) /* ty=Tensor[(3, 7, 7), float64] */
}

def @func_9183() -> (Tensor[(150), int16], Tensor[(2400), bool], Tensor[(10, 11, 16), float32]) {
  %667 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %668 = @func_6656() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) */;
  %669 = %668.2;
  %670 = cast(%669, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %671 = asinh(%670) /* ty=Tensor[(2400), float32] */;
  %672 = cast(%669, dtype="bool") /* ty=Tensor[(2400), bool] */;
  %673 = shape_of(%671, dtype="int32") /* ty=Tensor[(1), int32] */;
  %674 = cast(%671, dtype="bool") /* ty=Tensor[(2400), bool] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?), bool] */;
  %676 = %667.1;
  %677 = not_equal(%674, %675) /* ty=Tensor[(2400), bool] */;
  %678 = @func_7550() /* ty=Tensor[(10, 11, 16), float32] */;
  (%676, %677, %678)
}

def @func_7745() -> (Tensor[(10, 11, 16), float64], Tensor[(2400), uint64]) {
  @func_7743() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(2400), uint64]) */
}

def @func_10282() -> (Tensor[(10, 11, 16), float32],) {
  %680 = fn () -> (Tensor[(10, 11, 16), float32],) {
    %679 = @func_10014() /* ty=Tensor[(10, 11, 16), float32] */;
    (%679,)
  };
  %680() /* ty=(Tensor[(10, 11, 16), float32],) */
}

def @func_5778(%var_5777: Tensor[(2400), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 16, 15), uint64], Tensor[(2400), uint64]) {
  %687 = fn (%var_5772: Tensor[(2400), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 16, 15), uint64], Tensor[(2400), uint64]) {
    %681 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
    %682 = cast(%var_5772, dtype="uint64") /* ty=Tensor[(2400), uint64] */;
    %683 = reshape(%682, newshape=[10, 16, 15]) /* ty=Tensor[(10, 16, 15), uint64] */;
    %684 = @func_3724(%683) /* ty=(Tensor[(10, 16, 15), uint64],) */;
    %685 = %681.0;
    %686 = %684.0;
    (%685, %686, %var_5772)
  };
  %687(%var_5777) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 16, 15), uint64], Tensor[(2400), uint64]) */
}

def @func_10370(%var_10369: Tensor[(10, 11, 16), float32]) -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) {
  %699 = fn (%var_10340: Tensor[(10, 11, 16), float32]) -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) {
    %688 = @func_10281() /* ty=(Tensor[(10, 11, 16), float32],) */;
    %689 = %688.0;
    %690 = cast(%var_10340, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
    %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
    %692 = cast(%689, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
    %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %694 = equal(%692, %693) /* ty=Tensor[(10, 11, 16), bool] */;
    %695 = cast(%694, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
    %696 = @func_10267() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
    %697 = cos(%695) /* ty=Tensor[(10, 11, 16), float32] */;
    %698 = %696.1;
    (%697, %698)
  };
  %699(%var_10369) /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32]) */
}

def @func_12270(%var_12212: Tensor[(13, 12, 2), float64], %var_12218: Tensor[(675), float32]) -> (Tensor[(13, 12, 2), int32], Tensor[(75, 9), float32], Tensor[(15, 5, 6), float64], Tensor[(450), float64], Tensor[(10, 11, 16), float64], Tensor[(75, 9), float64], Tensor[(675), float32], Tensor[(2, 16, ?), int32], Tensor[(16, 2), float64]) {
  %700 = @func_11951() /* ty=Tensor[(13, 12, 2), float64] */;
  %701 = cast(%var_12212, dtype="int32") /* ty=Tensor[(13, 12, 2), int32] */;
  %702 = shape_of(%700, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%700, dtype="int32") /* ty=Tensor[(13, 12, 2), int32] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %705 = cast(%var_12218, dtype="float32") /* ty=Tensor[(675), float32] */;
  %706 = reshape(%705, newshape=[75, 9]) /* ty=Tensor[(75, 9), float32] */;
  %707 = @func_4872(%706) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(7), float64], Tensor[(75, 9), float32], Tensor[(7), float64]) */;
  %708 = %707.2;
  %709 = cast(%var_12218, dtype="float32") /* ty=Tensor[(675), float32] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(2), int32] */;
  %711 = cast(%708, dtype="float32") /* ty=Tensor[(75, 9), float32] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %713 = cast(meta[relay.Constant][38] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %714 = reshape(%713, newshape=[15, 5, 6]) /* ty=Tensor[(15, 5, 6), float64] */;
  %715 = @func_9671(%714) /* ty=(Tensor[(15, 5, 6), float64],) */;
  %716 = @func_5268() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %717 = cast(%708, dtype="float32") /* ty=Tensor[(75, 9), float32] */;
  %718 = tan(%717) /* ty=Tensor[(75, 9), float32] */;
  %719 = cast(%718, dtype="float64") /* ty=Tensor[(75, 9), float64] */;
  %720 = cast(%var_12218, dtype="float32") /* ty=Tensor[(675), float32] */;
  %721 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 2), float64] */;
  %722 = reshape(%721, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), float64] */;
  %723 = bitwise_and(%703, %704) /* ty=Tensor[(13, 12, 2), int32] */;
  %724 = floor_mod(%711, %712) /* ty=Tensor[(75, 9), float32] */;
  %725 = %715.0;
  %726 = %716.0;
  %727 = acosh(%719) /* ty=Tensor[(75, 9), float64] */;
  %728 = atanh(%720) /* ty=Tensor[(675), float32] */;
  %729 = @func_1723(%722) /* ty=Tensor[(2, 16, ?), int32] */;
  (%723, %724, %725, meta[relay.Constant][38] /* ty=Tensor[(450), float64] */, %726, %727, %728, %729, meta[relay.Constant][39] /* ty=Tensor[(16, 2), float64] */)
}

def @func_11745() -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(312), float32], Tensor[(150), int16], Tensor[(4, 10, 14), float32], Tensor[(560), float32], Tensor[(10, 11, 16), float64]) {
  @func_11743() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(312), float32], Tensor[(150), int16], Tensor[(4, 10, 14), float32], Tensor[(560), float32], Tensor[(10, 11, 16), float64]) */
}

def @func_10778() -> Tensor[(10, 11, 16), float64] {
  %730 = fn () -> Tensor[(10, 11, 16), float64] {
    @func_5305() /* ty=Tensor[(10, 11, 16), float64] */
  };
  %730() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_8303() -> Tensor[(10, 11, 16), float64] {
  %731 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %731.0
}

def @func_5827() -> Tensor[(10, 11, 16), float64] {
  %732 = @func_4380() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %732.0
}

def @func_5899() -> Tensor[(10, 11, 16), float64] {
  @func_5897() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_8538() -> (Tensor[(10, 11, 16), float32],) {
  %733 = @func_8371() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %734 = %733.1;
  (%734,)
}

def @func_392(%var_390: uint64, %var_391: Tensor[(1, 1, 7), uint64]) -> (Tensor[(1, 1, 7), uint64], Tensor[(7, 1, 1), float32]) {
  %742 = fn (%var_359: uint64, %var_360: Tensor[(1, 1, 7), uint64]) -> (Tensor[(1, 1, 7), uint64], Tensor[(7, 1, 1), float32]) {
    %735 = cast(%var_359, dtype="uint64") /* ty=uint64 */;
    %736 = cast(%var_360, dtype="uint64") /* ty=Tensor[(1, 1, 7), uint64] */;
    %737 = cast(%var_360, dtype="float64") /* ty=Tensor[(1, 1, 7), float64] */;
    %738 = reshape(%737, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
    %739 = @func_97(%738) /* ty=(Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) */;
    %740 = maximum(%735, %736) /* ty=Tensor[(1, 1, 7), uint64] */;
    %741 = %739.1;
    (%740, %741)
  };
  %742(%var_390, %var_391) /* ty=(Tensor[(1, 1, 7), uint64], Tensor[(7, 1, 1), float32]) */
}

def @func_5921() -> (Tensor[(10, 11, 16), float64],) {
  %743 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %744 = %743.1;
  (%744,)
}

def @func_9327() -> Tensor[(312), float32] {
  @func_9325() /* ty=Tensor[(312), float32] */
}

def @func_2692(%var_2690: Tensor[(4, 14, 14), float64]) -> Tensor[(4, 14, 14), float64] {
  @func_2689(%var_2690) /* ty=Tensor[(4, 14, 14), float64] */
}

def @func_6408(%var_6406: Tensor[(4, 15, 10), float64], %var_6407: Tensor[(4, 15, 10), float64]) -> (Tensor[(4, 14, 14), float64], Tensor[(784), float64], Tensor[(4, 15, 10), bool]) {
  @func_6404(%var_6406, %var_6407) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(784), float64], Tensor[(4, 15, 10), bool]) */
}

def @func_7164() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  %745 = @func_5742() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %746 = %745.0;
  %747 = cast(%746, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %748 = reshape(%747, newshape=[10, 11, 16]) /* ty=Tensor[(10, 11, 16), float64] */;
  %749 = @func_4459(%748) /* ty=(Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), bool]) */;
  %750 = cast(%746, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %751 = %749.1;
  %752 = atanh(%750) /* ty=Tensor[(10, 11, 16), float32] */;
  (%751, %752)
}

def @func_6786() -> Tensor[(10, 11, 16), float64] {
  %754 = fn () -> Tensor[(10, 11, 16), float64] {
    %753 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
    %753.0
  };
  %754() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_7391() -> (Tensor[(312), float32],) {
  %757 = fn () -> (Tensor[(312), float32],) {
    %755 = @func_6245() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */;
    %756 = %755.2;
    (%756,)
  };
  %757() /* ty=(Tensor[(312), float32],) */
}

def @func_11566() -> (Tensor[(10, 11, 16), float32],) {
  %758 = @func_7550() /* ty=Tensor[(10, 11, 16), float32] */;
  (%758,)
}

def @func_6181(%var_6180: Tensor[(2400), uint64]) -> (Tensor[(15, 7, 6), uint32], Tensor[(15, 7, 6), float32], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], uint64, Tensor[(1620), int64], Tensor[(2400), uint64], Tensor[(5, 30), int16], Tensor[(10, 11, 16), float64]) {
  %781 = fn (%var_6146: Tensor[(2400), uint64]) -> (Tensor[(15, 7, 6), uint32], Tensor[(15, 7, 6), float32], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], uint64, Tensor[(1620), int64], Tensor[(2400), uint64], Tensor[(5, 30), int16], Tensor[(10, 11, 16), float64]) {
    %759 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 7, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 7, 6), float32] */;
    %760 = log2(%759) /* ty=Tensor[(15, 7, 6), float32] */;
    %761 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 7, 6), float32] */, dtype="uint32") /* ty=Tensor[(15, 7, 6), uint32] */;
    %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
    %763 = cast(%760, dtype="uint32") /* ty=Tensor[(15, 7, 6), uint32] */;
    %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %765 = cast(%760, dtype="float32") /* ty=Tensor[(15, 7, 6), float32] */;
    %766 = @func_5921() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %767 = @func_5921() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %768 = cast(meta[relay.Constant][41] /* ty=Tensor[(1620), int64] */, dtype="int64") /* ty=Tensor[(1620), int64] */;
    %769 = cast(%var_6146, dtype="uint64") /* ty=Tensor[(2400), uint64] */;
    %770 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 30), int16] */, dtype="int16") /* ty=Tensor[(5, 30), int16] */;
    %771 = reshape(%768, newshape=[90, 18]) /* ty=Tensor[(90, 18), int64] */;
    %772 = reshape(%769, newshape=[20, 120]) /* ty=Tensor[(20, 120), uint64] */;
    %773 = reshape(%770, newshape=[150]) /* ty=Tensor[(150), int16] */;
    %774 = @func_4827(%771, %772, %773) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], uint64, Tensor[(7), uint64], Tensor[(10, 11, 16), bool], Tensor[(10, 11, 16), float64], Tensor[(4, 14, 2), int64], Tensor[(15, 9), int64], Tensor[(10, 11, 16), float64], Tensor[(20, 120), uint64], Tensor[(10, 11, 16), float64], Tensor[(90, 18), bool], Tensor[(1, 1, 7), uint64], Tensor[(10, 3, 5), bool], Tensor[(150), int16], Tensor[(90, 18), float64], Tensor[(6, 14, 4), float64], Tensor[(336), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */;
    %775 = right_shift(%763, %764) /* ty=Tensor[(15, 7, 6), uint32] */;
    %776 = exp(%765) /* ty=Tensor[(15, 7, 6), float32] */;
    %777 = %766.0;
    %778 = %767.0;
    %779 = %774.2;
    %780 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
    (%775, %776, %777, %778, %779, meta[relay.Constant][41] /* ty=Tensor[(1620), int64] */, %var_6146, meta[relay.Constant][42] /* ty=Tensor[(5, 30), int16] */, %780)
  };
  %781(%var_6180) /* ty=(Tensor[(15, 7, 6), uint32], Tensor[(15, 7, 6), float32], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], uint64, Tensor[(1620), int64], Tensor[(2400), uint64], Tensor[(5, 30), int16], Tensor[(10, 11, 16), float64]) */
}

def @func_6247() -> (Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) {
  @func_6245() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */
}

def @func_5582() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32]) {
  %791 = fn () -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32]) {
    %782 = @func_5240() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %783 = cast(meta[relay.Constant][43] /* ty=Tensor[(224), int32] */, dtype="int32") /* ty=Tensor[(224), int32] */;
    %784 = cast(meta[relay.Constant][43] /* ty=Tensor[(224), int32] */, dtype="int32") /* ty=Tensor[(224), int32] */;
    %785 = reshape(%783, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
    %786 = reshape(%784, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
    %787 = @func_5203(%785, %786) /* ty=(Tensor[(16, 2, 7), int32],) */;
    %788 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
    %789 = %782.0;
    %790 = %787.0;
    (%788, %789, %790, meta[relay.Constant][43] /* ty=Tensor[(224), int32] */)
  };
  %791() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32]) */
}

def @func_11628(%var_11621: Tensor[(13, 7, 16), int64], %var_11622: Tensor[(13, 7, 16), int64]) -> (Tensor[(13, 7, 16), bool],) {
  %792 = cast(%var_11622, dtype="bool") /* ty=Tensor[(13, 7, 16), bool] */;
  %793 = shape_of(%var_11621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%var_11621, dtype="bool") /* ty=Tensor[(13, 7, 16), bool] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %796 = not_equal(%794, %795) /* ty=Tensor[(13, 7, 16), bool] */;
  (%796,)
}

def @func_11433(%var_11431: Tensor[(14, 12, 6), int8], %var_11432: Tensor[(14, 12, 6), int8]) -> (Tensor[(14, 12, 6), int8], Tensor[(10, 11, 16), float64], Tensor[(312), float32]) {
  @func_11429(%var_11431, %var_11432) /* ty=(Tensor[(14, 12, 6), int8], Tensor[(10, 11, 16), float64], Tensor[(312), float32]) */
}

def @func_6479() -> Tensor[(10, 11, 16), float64] {
  @func_5827() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_9301() -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32]) {
  %807 = fn () -> (Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32]) {
    %797 = @func_8023() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %798 = %797.0;
    %799 = cast(%798, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
    %800 = @func_8562() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) */;
    %801 = @func_8167() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %802 = @func_6656() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) */;
    %803 = exp(%799) /* ty=Tensor[(10, 11, 16), float32] */;
    %804 = %800.0;
    %805 = %801.0;
    %806 = %802.1;
    (%803, %804, %805, %806)
  };
  %807() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32]) */
}

def @func_11952() -> Tensor[(13, 12, 2), float64] {
  %809 = fn () -> Tensor[(13, 12, 2), float64] {
    %808 = @func_11459() /* ty=(Tensor[(13, 12, 2), float64],) */;
    %808.0
  };
  %809() /* ty=Tensor[(13, 12, 2), float64] */
}

def @func_3444(%var_3443: Tensor[(13, 12, 2), float32]) -> (Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) {
  %816 = fn (%var_3428: Tensor[(13, 12, 2), float32]) -> (Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) {
    %810 = cast(%var_3428, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
    %811 = cast(meta[relay.Constant][44] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %812 = reshape(%811, newshape=[6, 5, 14]) /* ty=Tensor[(6, 5, 14), float64] */;
    %813 = @func_2661(%812) /* ty=(Tensor[(6, 5, 14), float64],) */;
    %814 = cos(%810) /* ty=Tensor[(13, 12, 2), float32] */;
    %815 = %813.0;
    (%814, %815, meta[relay.Constant][44] /* ty=Tensor[(420), float64] */)
  };
  %816(%var_3443) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(6, 5, 14), float64], Tensor[(420), float64]) */
}

def @func_3030(%var_3014: Tensor[(6, 14, 4), float64]) -> Tensor[(6, 14, 4), float64] {
  %817 = cast(%var_3014, dtype="float64") /* ty=Tensor[(6, 14, 4), float64] */;
  cosh(%817) /* ty=Tensor[(6, 14, 4), float64] */
}

def @func_5829() -> Tensor[(10, 11, 16), float64] {
  @func_5827() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_11461() -> (Tensor[(13, 12, 2), float64],) {
  @func_11459() /* ty=(Tensor[(13, 12, 2), float64],) */
}

def @func_11011() -> Tensor[(6, 5, 14), float32] {
  %818 = @func_5998() /* ty=(Tensor[(6, 5, 14), float32],) */;
  %818.0
}

def @func_9940() -> (Tensor[(312), float32], Tensor[(10, 11, 16), float32]) {
  @func_9938() /* ty=(Tensor[(312), float32], Tensor[(10, 11, 16), float32]) */
}

def @func_12622() -> (Tensor[(150), int16],) {
  @func_12620() /* ty=(Tensor[(150), int16],) */
}

def @func_5072(%var_5070: Tensor[(70, 6), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(70, 6), float64]) {
  @func_5069(%var_5070) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(70, 6), float64]) */
}

def @func_5242() -> (Tensor[(10, 11, 16), float64],) {
  @func_5240() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_12644() -> Tensor[(10, 11, 16), float64] {
  %820 = fn () -> Tensor[(10, 11, 16), float64] {
    %819 = @func_9219() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %819.0
  };
  %820() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_10267() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  %821 = @func_8023() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %822 = %821.0;
  %823 = @func_7550() /* ty=Tensor[(10, 11, 16), float32] */;
  (%822, %823)
}

def @func_10861(%var_10860: Tensor[(1000), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 10, 10), int16], Tensor[(1000), int16]) {
  %832 = fn (%var_10823: Tensor[(1000), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(10, 10, 10), int16], Tensor[(1000), int16]) {
    %824 = @func_5921() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %825 = cast(%var_10823, dtype="int16") /* ty=Tensor[(1000), int16] */;
    %826 = cast(%var_10823, dtype="int16") /* ty=Tensor[(1000), int16] */;
    %827 = reshape(%825, newshape=[10, 10, 10]) /* ty=Tensor[(10, 10, 10), int16] */;
    %828 = reshape(%826, newshape=[10, 10, 10]) /* ty=Tensor[(10, 10, 10), int16] */;
    %829 = @func_8750(%827, %828) /* ty=(Tensor[(10, 10, 10), int16], Tensor[(10, 11, 16), float64]) */;
    %830 = %824.0;
    %831 = %829.0;
    (%830, %831, %var_10823)
  };
  %832(%var_10860) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 10, 10), int16], Tensor[(1000), int16]) */
}

def @func_5405(%var_5350: Tensor[(10, 11, 16), float64], %var_5357: Tensor[(224), int32]) -> (Tensor[(16, 2, 7), int32], Tensor[(224), int32], Tensor[(10, 11, 16), uint64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) {
  %833 = cast(%var_5357, dtype="int32") /* ty=Tensor[(224), int32] */;
  %834 = cast(%var_5357, dtype="int32") /* ty=Tensor[(224), int32] */;
  %835 = reshape(%833, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
  %836 = reshape(%834, newshape=[16, 2, 7]) /* ty=Tensor[(16, 2, 7), int32] */;
  %837 = @func_5203(%835, %836) /* ty=(Tensor[(16, 2, 7), int32],) */;
  %838 = @func_5190() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) */;
  %839 = %838.0;
  %840 = cast(%var_5350, dtype="int8") /* ty=Tensor[(10, 11, 16), int8] */;
  %841 = shape_of(%839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(%839, dtype="int8") /* ty=Tensor[(10, 11, 16), int8] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %844 = bitwise_and(%842, %843) /* ty=Tensor[(10, 11, 16), int8] */;
  %845 = cast(%839, dtype="uint64") /* ty=Tensor[(10, 11, 16), uint64] */;
  %846 = shape_of(%844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%844, dtype="uint64") /* ty=Tensor[(10, 11, 16), uint64] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %849 = cast(meta[relay.Constant][45] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %850 = reshape(%849, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float64] */;
  %851 = %837.0;
  %852 = subtract(%847, %848) /* ty=Tensor[(10, 11, 16), uint64] */;
  %853 = @func_2689(%850) /* ty=Tensor[(4, 14, 14), float64] */;
  (%851, %var_5357, %852, %853, meta[relay.Constant][45] /* ty=Tensor[(784), float64] */)
}

def @func_9788() -> (Tensor[(312), float32],) {
  %856 = fn () -> (Tensor[(312), float32],) {
    %854 = @func_7390() /* ty=(Tensor[(312), float32],) */;
    %855 = %854.0;
    (%855,)
  };
  %856() /* ty=(Tensor[(312), float32],) */
}

def @func_11350(%var_11348: Tensor[(147), float64]) -> (Tensor[(10, 11, 16), float32], Tensor[(3, 7, 7), float64], Tensor[(147), float64]) {
  @func_11347(%var_11348) /* ty=(Tensor[(10, 11, 16), float32], Tensor[(3, 7, 7), float64], Tensor[(147), float64]) */
}

def @func_11123() -> (Tensor[(10, 11, 16), float64],) {
  %858 = fn () -> (Tensor[(10, 11, 16), float64],) {
    %857 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
    (%857,)
  };
  %858() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_9671(%var_9665: Tensor[(15, 5, 6), float64]) -> (Tensor[(15, 5, 6), float64],) {
  %859 = cast(meta[relay.Constant][46] /* ty=Tensor[(15, 5, 6), float64] */, dtype="float64") /* ty=Tensor[(15, 5, 6), float64] */;
  %860 = shape_of(%var_9665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%var_9665, dtype="float64") /* ty=Tensor[(15, 5, 6), float64] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %863 = power(%861, %862) /* ty=Tensor[(15, 5, 6), float64] */;
  (%863,)
}

def @func_10269() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) {
  @func_10267() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */
}

def @func_12482() -> (Tensor[(10, 11, 16), float64], Tensor[(6, 14, 4), float64], Tensor[(336), float64]) {
  %864 = @func_9087() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %865 = cast(meta[relay.Constant][47] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %866 = reshape(%865, newshape=[6, 14, 4]) /* ty=Tensor[(6, 14, 4), float64] */;
  %867 = %864.0;
  %868 = @func_3030(%866) /* ty=Tensor[(6, 14, 4), float64] */;
  (%867, %868, meta[relay.Constant][47] /* ty=Tensor[(336), float64] */)
}

def @func_7743() -> (Tensor[(10, 11, 16), float64], Tensor[(2400), uint64]) {
  %869 = @func_6656() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) */;
  %870 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
  %871 = %869.2;
  (%870, %871)
}

def @func_11551(%var_11548: Tensor[(112), int64]) -> (Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(312), float32], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(4, 14, 2), int64], Tensor[(112), int64]) {
  %872 = @func_7191() /* ty=(Tensor[(10, 11, 16), float32],) */;
  %873 = %872.0;
  %874 = cast(%873, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %875 = cast(meta[relay.Constant][48] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %876 = reshape(%875, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %877 = @func_4953(%876) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(420), float64], Tensor[(11, 14, 14), bool], Tensor[(154), bool], Tensor[(2156), bool]) */;
  %878 = @func_9938() /* ty=(Tensor[(312), float32], Tensor[(10, 11, 16), float32]) */;
  %879 = @func_10243() /* ty=(Tensor[(10, 11, 16), uint8], Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
  %880 = cast(%var_11548, dtype="int64") /* ty=Tensor[(112), int64] */;
  %881 = reshape(%880, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), int64] */;
  %882 = tan(%874) /* ty=Tensor[(10, 11, 16), float64] */;
  %883 = %877.1;
  %884 = %878.0;
  %885 = %879.1;
  %886 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
  %887 = @func_1002(%881) /* ty=Tensor[(4, 14, 2), int64] */;
  (%882, %883, meta[relay.Constant][48] /* ty=Tensor[(420), float64] */, %884, %885, %886, %887, %var_11548)
}

def @func_12610() -> (Tensor[(312), float32],) {
  %890 = fn () -> (Tensor[(312), float32],) {
    %888 = @func_10169() /* ty=(Tensor[(312), float32],) */;
    %889 = %888.0;
    (%889,)
  };
  %890() /* ty=(Tensor[(312), float32],) */
}

def @func_5190() -> (Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64]) {
  %891 = @func_4667() /* ty=Tensor[(10, 11, 16), float64] */;
  %892 = @func_4993() /* ty=Tensor[(10, 11, 16), float64] */;
  (%891, %892)
}

def @func_10016() -> Tensor[(10, 11, 16), float32] {
  @func_10014() /* ty=Tensor[(10, 11, 16), float32] */
}

def @func_100(%var_98: Tensor[(7, 1, 1), float64]) -> (Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) {
  @func_97(%var_98) /* ty=(Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) */
}

def @func_10480(%var_10448: Tensor[(7, 6), int16]) -> (Tensor[(10, 11, 16), float64], Tensor[(312), float64], Tensor[(3, 7, 2), int16], Tensor[(7, 6), int16], Tensor[(10, 11, 16), float32]) {
  %893 = @func_9087() /* ty=(Tensor[(10, 11, 16), float64],) */;
  %894 = @func_9377() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(312), float64], Tensor[(10, 11, 16), float64]) */;
  %895 = cast(%var_10448, dtype="int16") /* ty=Tensor[(7, 6), int16] */;
  %896 = reshape(%895, newshape=[3, 7, 2]) /* ty=Tensor[(3, 7, 2), int16] */;
  %897 = @func_3932(%896) /* ty=(Tensor[(3, 7, 2), int16],) */;
  %898 = @func_9300() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32]) */;
  %899 = %893.0;
  %900 = %894.1;
  %901 = %897.0;
  %902 = %898.0;
  (%899, %900, %901, %var_10448, %902)
}

def @func_567(%var_565: Tensor[(9, 15, 5), float32], %var_566: Tensor[(7), float64]) -> (Tensor[(9, 15, 5), float32], Tensor[(7, 1, 1), float64], Tensor[(7), float64], Tensor[(7, 1, 1), float64]) {
  %913 = fn (%var_508: Tensor[(9, 15, 5), float32], %var_546: Tensor[(7), float64]) -> (Tensor[(9, 15, 5), float32], Tensor[(7, 1, 1), float64], Tensor[(7), float64], Tensor[(7, 1, 1), float64]) {
    %903 = cast(%var_508, dtype="float32") /* ty=Tensor[(9, 15, 5), float32] */;
    %904 = cast(%var_546, dtype="float64") /* ty=Tensor[(7), float64] */;
    %905 = reshape(%904, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
    %906 = @func_97(%905) /* ty=(Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) */;
    %907 = cast(%var_546, dtype="float64") /* ty=Tensor[(7), float64] */;
    %908 = reshape(%907, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float64] */;
    %909 = @func_97(%908) /* ty=(Tensor[(7, 1, 1), float64], Tensor[(7, 1, 1), float32]) */;
    %910 = sinh(%903) /* ty=Tensor[(9, 15, 5), float32] */;
    %911 = %906.0;
    %912 = %909.0;
    (%910, %911, %var_546, %912)
  };
  %913(%var_565, %var_566) /* ty=(Tensor[(9, 15, 5), float32], Tensor[(7, 1, 1), float64], Tensor[(7), float64], Tensor[(7, 1, 1), float64]) */
}

def @func_9440() -> (Tensor[(13, 12, 2), float32],) {
  %918 = fn () -> (Tensor[(13, 12, 2), float32],) {
    %914 = @func_6245() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(13, 12, 2), float32], Tensor[(312), float32]) */;
    %915 = %914.1;
    %916 = cast(%915, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
    %917 = atan(%916) /* ty=Tensor[(13, 12, 2), float32] */;
    (%917,)
  };
  %918() /* ty=(Tensor[(13, 12, 2), float32],) */
}

def @func_3726(%var_3725: Tensor[(10, 16, 15), uint64]) -> (Tensor[(10, 16, 15), uint64],) {
  %924 = fn (%var_3716: Tensor[(10, 16, 15), uint64]) -> (Tensor[(10, 16, 15), uint64],) {
    %919 = cast(%var_3716, dtype="uint64") /* ty=Tensor[(10, 16, 15), uint64] */;
    %920 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(10, 16, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %921 = cast(meta[relay.Constant][49] /* ty=Tensor[(10, 16, 15), uint64] */, dtype="uint64") /* ty=Tensor[(10, 16, 15), uint64] */;
    %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %923 = logical_xor(%921, %922) /* ty=Tensor[(10, 16, 15), uint64] */;
    (%923,)
  };
  %924(%var_3725) /* ty=(Tensor[(10, 16, 15), uint64],) */
}

def @func_11013() -> Tensor[(6, 5, 14), float32] {
  @func_11011() /* ty=Tensor[(6, 5, 14), float32] */
}

def @func_6455(%var_6454: Tensor[(13, 10, 9), float64]) -> (Tensor[(13, 10, 9), float64],) {
  %927 = fn (%var_6445: Tensor[(13, 10, 9), float64]) -> (Tensor[(13, 10, 9), float64],) {
    %925 = cast(%var_6445, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
    %926 = sinh(%925) /* ty=Tensor[(13, 10, 9), float64] */;
    (%926,)
  };
  %927(%var_6454) /* ty=(Tensor[(13, 10, 9), float64],) */
}

def @func_5641(%var_5619: Tensor[(12, 2, 9), float32], %var_5629: Tensor[(10, 42), float64]) -> (Tensor[(12, 2, 9), float32], Tensor[(70, 6), float64], Tensor[(10, 42), float64]) {
  %928 = cast(%var_5619, dtype="float32") /* ty=Tensor[(12, 2, 9), float32] */;
  %929 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(12, 2, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 2, 9), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 9), float32] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %932 = cast(%var_5629, dtype="float64") /* ty=Tensor[(10, 42), float64] */;
  %933 = reshape(%932, newshape=[70, 6]) /* ty=Tensor[(70, 6), float64] */;
  %934 = @func_5069(%933) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 5, 14), float64], Tensor[(70, 6), float64]) */;
  %935 = floor_mod(%930, %931) /* ty=Tensor[(12, 2, 9), float32] */;
  %936 = %934.2;
  (%935, %936, %var_5629)
}

def @func_7012() -> (Tensor[(10, 11, 16), float64],) {
  @func_7010() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_9185() -> (Tensor[(150), int16], Tensor[(2400), bool], Tensor[(10, 11, 16), float32]) {
  @func_9183() /* ty=(Tensor[(150), int16], Tensor[(2400), bool], Tensor[(10, 11, 16), float32]) */
}

def @func_9342() -> (Tensor[(15, 14, 7), float32], Tensor[(4, 14, 14), float64], Tensor[(300, 2), float64], Tensor[(10, 11, 16), float64]) {
  %937 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 7), float32] */;
  %938 = cast(meta[relay.Constant][52] /* ty=Tensor[(300, 2), float64] */, dtype="float64") /* ty=Tensor[(300, 2), float64] */;
  %939 = cast(meta[relay.Constant][52] /* ty=Tensor[(300, 2), float64] */, dtype="float64") /* ty=Tensor[(300, 2), float64] */;
  %940 = reshape(%938, newshape=[4, 15, 10]) /* ty=Tensor[(4, 15, 10), float64] */;
  %941 = reshape(%939, newshape=[4, 15, 10]) /* ty=Tensor[(4, 15, 10), float64] */;
  %942 = @func_6404(%940, %941) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(784), float64], Tensor[(4, 15, 10), bool]) */;
  %943 = exp(%937) /* ty=Tensor[(15, 14, 7), float32] */;
  %944 = %942.0;
  %945 = @func_5305() /* ty=Tensor[(10, 11, 16), float64] */;
  (%943, %944, meta[relay.Constant][52] /* ty=Tensor[(300, 2), float64] */, %945)
}

def @func_9968() -> Tensor[(10, 11, 16), float64] {
  %947 = fn () -> Tensor[(10, 11, 16), float64] {
    %946 = @func_8562() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) */;
    %946.1
  };
  %947() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_9860(%var_9858: Tensor[(15, 10, 4), float64], %var_9859: Tensor[(312), float32]) -> (Tensor[(15, 10, 4), float64], Tensor[(7), float64], Tensor[(312), float32], Tensor[(420), float64]) {
  @func_9856(%var_9858, %var_9859) /* ty=(Tensor[(15, 10, 4), float64], Tensor[(7), float64], Tensor[(312), float32], Tensor[(420), float64]) */
}

def @func_6658() -> (Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) {
  @func_6656() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(15, 7, 6), uint32], Tensor[(2400), uint64]) */
}

def @func_8611(%var_8610: Tensor[(784), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) {
  %952 = fn (%var_8604: Tensor[(784), float64]) -> (Tensor[(10, 11, 16), float64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) {
    %948 = cast(%var_8604, dtype="float64") /* ty=Tensor[(784), float64] */;
    %949 = reshape(%948, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float64] */;
    %950 = @func_6479() /* ty=Tensor[(10, 11, 16), float64] */;
    %951 = @func_2689(%949) /* ty=Tensor[(4, 14, 14), float64] */;
    (%950, %951, %var_8604)
  };
  %952(%var_8610) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(4, 14, 14), float64], Tensor[(784), float64]) */
}

def @func_7059() -> (Tensor[(10, 11, 16), float32],) {
  %953 = @func_5581() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float64], Tensor[(16, 2, 7), int32], Tensor[(224), int32]) */;
  %954 = %953.1;
  %955 = cast(%954, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %956 = rsqrt(%955) /* ty=Tensor[(10, 11, 16), float32] */;
  (%956,)
}

def @func_3880(%var_3877: Tensor[(15, 1, 9), int64], %var_3878: Tensor[(15, 12, 9), int64], %var_3879: Tensor[(15, 12, 9), int64]) -> (Tensor[(15, 12, 9), bool], Tensor[(4, 14, 2), int64], Tensor[(112), int64], Tensor[(15, 12, 9), float64]) {
  %968 = fn (%var_3852: Tensor[(15, 1, 9), int64], %var_3853: Tensor[(15, 12, 9), int64], %var_3869: Tensor[(15, 12, 9), int64]) -> (Tensor[(15, 12, 9), bool], Tensor[(4, 14, 2), int64], Tensor[(112), int64], Tensor[(15, 12, 9), float64]) {
    %957 = cast(%var_3852, dtype="bool") /* ty=Tensor[(15, 1, 9), bool] */;
    %958 = cast(%var_3853, dtype="bool") /* ty=Tensor[(15, 12, 9), bool] */;
    %959 = cast(meta[relay.Constant][53] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
    %960 = reshape(%959, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), int64] */;
    %961 = cast(%var_3869, dtype="float64") /* ty=Tensor[(15, 12, 9), float64] */;
    %962 = shape_of(%var_3853, dtype="int32") /* ty=Tensor[(3), int32] */;
    %963 = cast(%var_3853, dtype="float64") /* ty=Tensor[(15, 12, 9), float64] */;
    %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %965 = less_equal(%957, %958) /* ty=Tensor[(15, 12, 9), bool] */;
    %966 = @func_1002(%960) /* ty=Tensor[(4, 14, 2), int64] */;
    %967 = floor_mod(%963, %964) /* ty=Tensor[(15, 12, 9), float64] */;
    (%965, %966, meta[relay.Constant][53] /* ty=Tensor[(112), int64] */, %967)
  };
  %968(%var_3877, %var_3878, %var_3879) /* ty=(Tensor[(15, 12, 9), bool], Tensor[(4, 14, 2), int64], Tensor[(112), int64], Tensor[(15, 12, 9), float64]) */
}

def @func_7191() -> (Tensor[(10, 11, 16), float32],) {
  %969 = @func_5148() /* ty=(Tensor[(6, 5, 14), float32], Tensor[(150), int16], Tensor[(10, 11, 16), float32]) */;
  %970 = %969.2;
  (%970,)
}

def @func_8829() -> (Tensor[(312), float32], Tensor[(10, 11, 16), float64]) {
  %975 = fn () -> (Tensor[(312), float32], Tensor[(10, 11, 16), float64]) {
    %971 = @func_7390() /* ty=(Tensor[(312), float32],) */;
    %972 = @func_8562() /* ty=(Tensor[(10, 11, 16), float32], Tensor[(10, 11, 16), float64]) */;
    %973 = %971.0;
    %974 = %972.1;
    (%973, %974)
  };
  %975() /* ty=(Tensor[(312), float32], Tensor[(10, 11, 16), float64]) */
}

def @func_12703() -> (Tensor[(10, 11, 16), float64],) {
  %978 = fn () -> (Tensor[(10, 11, 16), float64],) {
    %976 = @func_9693() /* ty=(Tensor[(10, 11, 16), float64],) */;
    %977 = %976.0;
    (%977,)
  };
  %978() /* ty=(Tensor[(10, 11, 16), float64],) */
}

def @func_11878(%var_11876: uint64, %var_11877: Tensor[(2400), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], uint64, Tensor[(2400), uint64], Tensor[(10, 11, 16), float32], Tensor[(4, 14, 2), int64], Tensor[(112), int64]) {
  %992 = fn (%var_11814: uint64, %var_11815: Tensor[(2400), uint64]) -> (Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], uint64, Tensor[(2400), uint64], Tensor[(10, 11, 16), float32], Tensor[(4, 14, 2), int64], Tensor[(112), int64]) {
    %979 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
    %980 = cast(%var_11814, dtype="uint64") /* ty=uint64 */;
    %981 = cast(%var_11815, dtype="uint64") /* ty=Tensor[(2400), uint64] */;
    %982 = reshape(%980, newshape=[]) /* ty=uint64 */;
    %983 = reshape(%981, newshape=[2400]) /* ty=Tensor[(2400), uint64] */;
    %984 = @func_4589(%982, %983) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], Tensor[(7), uint64], Tensor[(10, 16, 15), uint64], Tensor[(2400), bool]) */;
    %985 = @func_7164() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(10, 11, 16), float32]) */;
    %986 = cast(meta[relay.Constant][54] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
    %987 = reshape(%986, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), int64] */;
    %988 = %979.0;
    %989 = %984.1;
    %990 = %985.1;
    %991 = @func_1002(%987) /* ty=Tensor[(4, 14, 2), int64] */;
    (%988, %989, %var_11814, %var_11815, %990, %991, meta[relay.Constant][54] /* ty=Tensor[(112), int64] */)
  };
  %992(%var_11876, %var_11877) /* ty=(Tensor[(10, 11, 16), float64], Tensor[(1, 1, 7), uint64], uint64, Tensor[(2400), uint64], Tensor[(10, 11, 16), float32], Tensor[(4, 14, 2), int64], Tensor[(112), int64]) */
}

def @func_12484() -> (Tensor[(10, 11, 16), float64], Tensor[(6, 14, 4), float64], Tensor[(336), float64]) {
  @func_12482() /* ty=(Tensor[(10, 11, 16), float64], Tensor[(6, 14, 4), float64], Tensor[(336), float64]) */
}

def @func_5306() -> Tensor[(10, 11, 16), float64] {
  %993 = fn () -> Tensor[(10, 11, 16), float64] {
    @func_4667() /* ty=Tensor[(10, 11, 16), float64] */
  };
  %993() /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_11997() -> Tensor[(150), int16] {
  @func_8175() /* ty=Tensor[(150), int16] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen616/build/output.py:3065: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen616/build/output.py", line 3070, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(150) tvmgen_default_fused_add_kernel0(int* __restrict__ T_add, int* __restrict__ placeholder) {
  T_add[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] + 6);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


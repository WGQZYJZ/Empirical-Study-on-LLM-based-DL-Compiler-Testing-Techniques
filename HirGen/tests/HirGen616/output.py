import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_58 = relay.var("var_58", dtype = "float64", shape = (7, 1, 1))#candidate|58|(7, 1, 1)|var|float64
uop_59 = relay.atan(var_58.astype('float64')) # shape=(7, 1, 1)
uop_79 = relay.log2(var_58.astype('float32')) # shape=(7, 1, 1)
output = relay.Tuple([uop_59,uop_79,])
output2 = relay.Tuple([uop_59,uop_79,])
func_97 = relay.Function([var_58,], output)
mod['func_97'] = func_97
mod = relay.transform.InferType()(mod)
mutated_mod['func_97'] = func_97
mutated_mod = relay.transform.InferType()(mutated_mod)
var_98 = relay.var("var_98", dtype = "float64", shape = (7, 1, 1))#candidate|98|(7, 1, 1)|var|float64
func_97_call = mutated_mod.get_global_var('func_97')
call_99 = func_97_call(var_98)
output = call_99
func_100 = relay.Function([var_98], output)
mutated_mod['func_100'] = func_100
mutated_mod = relay.transform.InferType()(mutated_mod)
var_359 = relay.var("var_359", dtype = "uint64", shape = ())#candidate|359|()|var|uint64
var_360 = relay.var("var_360", dtype = "uint64", shape = (1, 1, 7))#candidate|360|(1, 1, 7)|var|uint64
bop_361 = relay.maximum(var_359.astype('uint64'), var_360.astype('uint64')) # shape=(1, 1, 7)
func_97_call = mod.get_global_var('func_97')
func_100_call = mutated_mod.get_global_var('func_100')
call_364 = relay.TupleGetItem(func_97_call(relay.reshape(var_360.astype('float64'), [7, 1, 1])), 1)
call_365 = relay.TupleGetItem(func_100_call(relay.reshape(var_360.astype('float64'), [7, 1, 1])), 1)
output = relay.Tuple([bop_361,call_364,])
output2 = relay.Tuple([bop_361,call_365,])
func_389 = relay.Function([var_359,var_360,], output)
mod['func_389'] = func_389
mod = relay.transform.InferType()(mod)
var_390 = relay.var("var_390", dtype = "uint64", shape = ())#candidate|390|()|var|uint64
var_391 = relay.var("var_391", dtype = "uint64", shape = (1, 1, 7))#candidate|391|(1, 1, 7)|var|uint64
output = func_389(var_390,var_391,)
func_392 = relay.Function([var_390,var_391,], output)
mutated_mod['func_392'] = func_392
mutated_mod = relay.transform.InferType()(mutated_mod)
var_508 = relay.var("var_508", dtype = "float32", shape = (9, 15, 5))#candidate|508|(9, 15, 5)|var|float32
uop_509 = relay.sinh(var_508.astype('float32')) # shape=(9, 15, 5)
func_97_call = mod.get_global_var('func_97')
func_100_call = mutated_mod.get_global_var('func_100')
var_546 = relay.var("var_546", dtype = "float64", shape = (7,))#candidate|546|(7,)|var|float64
call_545 = relay.TupleGetItem(func_97_call(relay.reshape(var_546.astype('float64'), [7, 1, 1])), 0)
call_547 = relay.TupleGetItem(func_100_call(relay.reshape(var_546.astype('float64'), [7, 1, 1])), 0)
func_97_call = mod.get_global_var('func_97')
func_100_call = mutated_mod.get_global_var('func_100')
call_552 = relay.TupleGetItem(func_97_call(relay.reshape(var_546.astype('float64'), [7, 1, 1])), 0)
call_553 = relay.TupleGetItem(func_100_call(relay.reshape(var_546.astype('float64'), [7, 1, 1])), 0)
output = relay.Tuple([uop_509,call_545,var_546,call_552,])
output2 = relay.Tuple([uop_509,call_547,var_546,call_553,])
func_564 = relay.Function([var_508,var_546,], output)
mod['func_564'] = func_564
mod = relay.transform.InferType()(mod)
var_565 = relay.var("var_565", dtype = "float32", shape = (9, 15, 5))#candidate|565|(9, 15, 5)|var|float32
var_566 = relay.var("var_566", dtype = "float64", shape = (7,))#candidate|566|(7,)|var|float64
output = func_564(var_565,var_566,)
func_567 = relay.Function([var_565,var_566,], output)
mutated_mod['func_567'] = func_567
mutated_mod = relay.transform.InferType()(mutated_mod)
var_590 = relay.var("var_590", dtype = "bool", shape = (11, 1, 14))#candidate|590|(11, 1, 14)|var|bool
var_591 = relay.var("var_591", dtype = "bool", shape = (11, 14, 14))#candidate|591|(11, 14, 14)|var|bool
bop_592 = relay.logical_or(var_590.astype('bool'), var_591.astype('bool')) # shape=(11, 14, 14)
output = bop_592
output2 = bop_592
func_596 = relay.Function([var_590,var_591,], output)
mod['func_596'] = func_596
mod = relay.transform.InferType()(mod)
mutated_mod['func_596'] = func_596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_596_call = mutated_mod.get_global_var('func_596')
var_598 = relay.var("var_598", dtype = "bool", shape = (11, 1, 14))#candidate|598|(11, 1, 14)|var|bool
var_599 = relay.var("var_599", dtype = "bool", shape = (11, 14, 14))#candidate|599|(11, 14, 14)|var|bool
call_597 = func_596_call(var_598,var_599,)
output = call_597
func_600 = relay.Function([var_598,var_599,], output)
mutated_mod['func_600'] = func_600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_974 = relay.var("var_974", dtype = "int64", shape = (4, 14, 2))#candidate|974|(4, 14, 2)|var|int64
const_975 = relay.const([[[7,8],[-10,7],[-7,-7],[1,10],[2,3],[-6,-8],[8,-7],[9,4],[3,-7],[2,-3],[3,3],[-7,-3],[2,-1],[-5,-5]],[[3,3],[-9,-9],[-8,7],[10,-3],[9,6],[9,-7],[7,3],[4,-7],[2,-10],[9,-3],[-8,9],[2,1],[-7,9],[8,9]],[[3,7],[2,6],[-6,-4],[8,9],[10,3],[9,-3],[-3,-4],[-10,8],[9,-1],[-1,-4],[7,-9],[-7,-2],[8,9],[1,6]],[[6,-7],[-7,10],[-2,6],[9,-8],[9,-3],[6,3],[1,5],[-6,6],[-3,10],[9,3],[-2,3],[-8,-10],[-8,3],[-8,-2]]], dtype = "int64")#candidate|975|(4, 14, 2)|const|int64
bop_976 = relay.bitwise_and(var_974.astype('int64'), relay.reshape(const_975.astype('int64'), relay.shape_of(var_974))) # shape=(4, 14, 2)
output = bop_976
output2 = bop_976
func_1002 = relay.Function([var_974,], output)
mod['func_1002'] = func_1002
mod = relay.transform.InferType()(mod)
mutated_mod['func_1002'] = func_1002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1003 = relay.var("var_1003", dtype = "int64", shape = (4, 14, 2))#candidate|1003|(4, 14, 2)|var|int64
func_1002_call = mutated_mod.get_global_var('func_1002')
call_1004 = func_1002_call(var_1003)
output = call_1004
func_1005 = relay.Function([var_1003], output)
mutated_mod['func_1005'] = func_1005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1691 = relay.var("var_1691", dtype = "float64", shape = (2, 16, 1))#candidate|1691|(2, 16, 1)|var|float64
uop_1692 = relay.acos(var_1691.astype('float64')) # shape=(2, 16, 1)
bop_1720 = relay.bitwise_and(uop_1692.astype('int32'), relay.reshape(var_1691.astype('int32'), relay.shape_of(uop_1692))) # shape=(2, 16, 1)
output = bop_1720
output2 = bop_1720
func_1723 = relay.Function([var_1691,], output)
mod['func_1723'] = func_1723
mod = relay.transform.InferType()(mod)
var_1724 = relay.var("var_1724", dtype = "float64", shape = (2, 16, 1))#candidate|1724|(2, 16, 1)|var|float64
output = func_1723(var_1724)
func_1725 = relay.Function([var_1724], output)
mutated_mod['func_1725'] = func_1725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2641 = relay.var("var_2641", dtype = "float64", shape = (6, 5, 14))#candidate|2641|(6, 5, 14)|var|float64
uop_2642 = relay.cos(var_2641.astype('float64')) # shape=(6, 5, 14)
output = relay.Tuple([uop_2642,])
output2 = relay.Tuple([uop_2642,])
func_2661 = relay.Function([var_2641,], output)
mod['func_2661'] = func_2661
mod = relay.transform.InferType()(mod)
var_2662 = relay.var("var_2662", dtype = "float64", shape = (6, 5, 14))#candidate|2662|(6, 5, 14)|var|float64
output = func_2661(var_2662)
func_2663 = relay.Function([var_2662], output)
mutated_mod['func_2663'] = func_2663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2681 = relay.var("var_2681", dtype = "float64", shape = (4, 14, 14))#candidate|2681|(4, 14, 14)|var|float64
uop_2682 = relay.cos(var_2681.astype('float64')) # shape=(4, 14, 14)
output = uop_2682
output2 = uop_2682
func_2689 = relay.Function([var_2681,], output)
mod['func_2689'] = func_2689
mod = relay.transform.InferType()(mod)
mutated_mod['func_2689'] = func_2689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2690 = relay.var("var_2690", dtype = "float64", shape = (4, 14, 14))#candidate|2690|(4, 14, 14)|var|float64
func_2689_call = mutated_mod.get_global_var('func_2689')
call_2691 = func_2689_call(var_2690)
output = call_2691
func_2692 = relay.Function([var_2690], output)
mutated_mod['func_2692'] = func_2692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3014 = relay.var("var_3014", dtype = "float64", shape = (6, 14, 4))#candidate|3014|(6, 14, 4)|var|float64
uop_3015 = relay.cosh(var_3014.astype('float64')) # shape=(6, 14, 4)
output = uop_3015
output2 = uop_3015
func_3030 = relay.Function([var_3014,], output)
mod['func_3030'] = func_3030
mod = relay.transform.InferType()(mod)
mutated_mod['func_3030'] = func_3030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3031 = relay.var("var_3031", dtype = "float64", shape = (6, 14, 4))#candidate|3031|(6, 14, 4)|var|float64
func_3030_call = mutated_mod.get_global_var('func_3030')
call_3032 = func_3030_call(var_3031)
output = call_3032
func_3033 = relay.Function([var_3031], output)
mutated_mod['func_3033'] = func_3033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3428 = relay.var("var_3428", dtype = "float32", shape = (13, 12, 2))#candidate|3428|(13, 12, 2)|var|float32
uop_3429 = relay.cos(var_3428.astype('float32')) # shape=(13, 12, 2)
func_2661_call = mod.get_global_var('func_2661')
func_2663_call = mutated_mod.get_global_var('func_2663')
const_3434 = relay.const([5.909124,-4.153835,-8.521326,3.129474,6.812348,-9.484032,-7.801533,-9.402901,9.795525,-8.425858,6.811067,-9.200567,-6.551523,-4.990484,7.106428,-6.420120,1.686800,0.261866,-1.892164,8.448746,-0.780258,9.295201,-0.924772,-9.466326,-5.577694,-3.147979,4.420176,7.412427,-1.196817,9.333631,4.171802,-3.652435,-3.655518,-5.530452,1.209734,-3.036141,4.791453,-3.995996,3.224991,5.621830,-5.061243,0.442826,8.853922,7.323027,7.530846,8.300006,3.214507,8.621692,-9.995241,-6.195639,9.034793,0.906372,-5.111693,-8.526340,5.197657,8.414405,3.493861,3.237692,3.092654,-2.412792,6.785925,9.951810,-2.913568,3.209393,-3.926851,-3.942602,-2.356672,8.687005,2.075089,5.479408,9.150107,-4.220213,6.094883,2.213922,9.204861,6.928725,-4.207976,2.829508,7.577946,2.838709,-0.997078,9.892027,4.207059,4.942671,4.758132,4.184074,0.857361,7.720586,2.084011,6.255175,7.290486,-1.635782,7.257032,-7.425431,-9.162829,-2.474447,6.020273,0.001205,-7.846509,9.506990,1.778881,9.521385,1.045529,-1.022913,8.416062,7.551433,-1.824977,-9.323099,4.404022,0.916926,-3.263453,-3.937123,2.026578,6.681870,-2.180704,1.477397,9.116270,-4.899558,-4.291943,-6.877598,-7.169034,-2.712679,3.207928,-5.228582,1.410107,-3.530181,3.579752,0.506410,-1.743672,1.401625,5.170610,5.472272,2.554906,7.129073,-5.009410,2.893029,5.908218,0.733146,3.395694,4.243167,9.218777,-6.148518,-2.338118,-9.718199,-6.022211,2.196120,-7.915363,9.543853,-4.915411,9.723983,-5.112438,8.192609,-5.809078,-5.526649,-6.115518,-7.627374,7.593233,6.135513,-2.034328,-1.344651,3.665728,4.228964,-8.041177,3.899034,3.852139,7.795331,0.658375,-5.653012,-2.278439,8.860965,-7.490731,-2.633605,1.431349,-5.446633,1.252690,-8.191709,-3.483745,9.758373,-4.969662,-6.615988,9.598724,1.446078,-6.536529,6.693628,-1.750878,-7.776643,-3.027506,-9.616378,-7.835591,-5.619979,-6.214266,-5.154261,-2.059253,7.210323,-2.476826,-7.029311,-5.570317,-6.538233,0.154282,9.069213,6.226803,8.975121,-7.462423,4.640685,-4.715489,2.863443,-4.611927,1.221466,2.695051,-1.102115,-0.513348,7.472298,-2.188972,-3.686562,7.348496,-5.319361,4.159795,0.964511,0.034800,-8.532816,-4.847587,-4.849815,2.813802,3.718889,1.554746,-4.271833,-9.244866,-6.330029,7.313879,4.914384,-7.095332,8.885780,9.506120,1.174774,9.196432,-2.673569,0.985815,3.570610,-7.408139,8.339799,-9.512966,-7.507899,-5.478317,5.092119,6.173874,-7.403847,-3.853157,0.406830,-1.544108,8.602443,-9.221386,6.755062,-9.148341,-4.154182,8.422428,-7.290271,3.090213,9.407096,0.207735,8.268878,2.252476,-1.265285,-3.864996,9.089296,2.299378,-1.869506,-6.661639,7.149230,-4.776619,6.563484,-1.766519,4.551878,-6.015170,3.954648,-3.080605,-7.193914,-0.188164,8.854966,-2.400160,-4.279388,5.714081,1.823710,-6.423588,2.923093,-3.734816,1.243316,-0.009215,-6.236132,5.801667,5.659824,3.462520,1.867482,-6.922414,-7.038390,7.326984,-4.614883,9.731423,-6.100849,9.799962,6.964906,-3.322815,-0.134436,7.544238,-9.581539,-2.874395,-0.882554,4.327218,6.500778,6.184306,8.233443,-9.393716,0.748708,6.489784,-9.638814,2.712157,5.920225,-0.544217,6.473902,-1.076239,-1.973510,8.735298,-3.685229,-8.234015,-4.456823,0.550484,-1.141505,-3.041258,-6.726368,5.449015,-3.797049,-1.289261,-1.831321,6.764239,-4.878603,4.934504,-5.888125,-3.789948,-0.357635,-9.370952,-1.683837,-3.458095,-9.958282,-3.590170,-6.798372,7.910820,2.617969,-5.928789,-1.604521,5.670027,-8.666491,7.901501,2.772799,1.476774,-5.545915,-6.659287,-2.122251,5.969410,2.259222,4.441242,4.213126,-2.182235,-5.860700,-0.364313,-6.866512,6.561250,9.907593,8.116399,-3.610746,-5.844058,9.174866,0.087704,5.522149,-9.372419,6.090818,-5.754820,-0.626260,2.952327,-8.701143,8.613014,4.005808,6.096434,8.482833,5.312546,6.030124,-7.292770,-7.905559,-1.112335,-6.194267,3.463663,-0.518565,-7.344713,-0.410419,0.607499,1.360225,-5.272678,-0.513003,0.838092,-5.405765,4.610859,-5.589859,-1.586055,-2.783296,-7.828054,0.314272,-7.052311,-4.902331,-6.976779,-1.000623,8.394175,-3.864431,-3.226266,2.346845,-5.090947,-2.492502,6.852257,8.497002,7.628424,5.623723,-4.409187,7.179106], dtype = "float64")#candidate|3434|(420,)|const|float64
call_3433 = relay.TupleGetItem(func_2661_call(relay.reshape(const_3434.astype('float64'), [6, 5, 14])), 0)
call_3435 = relay.TupleGetItem(func_2663_call(relay.reshape(const_3434.astype('float64'), [6, 5, 14])), 0)
output = relay.Tuple([uop_3429,call_3433,const_3434,])
output2 = relay.Tuple([uop_3429,call_3435,const_3434,])
func_3442 = relay.Function([var_3428,], output)
mod['func_3442'] = func_3442
mod = relay.transform.InferType()(mod)
var_3443 = relay.var("var_3443", dtype = "float32", shape = (13, 12, 2))#candidate|3443|(13, 12, 2)|var|float32
output = func_3442(var_3443)
func_3444 = relay.Function([var_3443], output)
mutated_mod['func_3444'] = func_3444
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3715 = relay.const([[[2,-9,6,5,8,-9,-5,-8,-1,-4,-2,-8,-10,7,9],[-6,-5,-9,3,-5,2,-4,4,6,10,6,-6,-1,5,8],[4,-7,1,2,-4,2,10,2,9,9,8,1,2,-10,-10],[2,-4,-4,7,-8,-2,6,8,8,-6,9,4,9,2,4],[-10,7,-7,9,-7,-4,9,3,-8,7,1,9,5,-3,7],[-10,-6,-1,10,-7,-6,5,3,-5,2,6,-9,9,4,3],[-1,-8,-2,10,-8,-8,-9,4,-5,-4,2,-10,-6,-6,-1],[4,4,9,-3,-9,-7,7,-1,10,9,-3,-6,1,2,-4],[8,6,-2,-9,3,5,-4,8,3,-1,1,-3,-9,-9,-2],[5,-1,-2,-6,-7,1,-9,-4,2,4,-8,-9,10,-5,-8],[-1,9,-4,6,-3,8,-3,-1,-5,-4,8,4,3,7,2],[-7,8,7,-6,-1,4,-5,8,5,10,-4,3,8,-1,-6],[-2,-8,-8,4,5,-4,-5,-9,-4,-8,-6,-3,-10,7,-9],[6,7,-2,8,10,1,4,1,-3,-10,9,3,8,-4,5],[-9,5,-5,-2,4,6,-6,-5,6,3,-9,5,-4,-7,6],[-4,-3,3,-9,-8,-7,-10,7,-1,3,10,-4,-6,-5,-1]],[[-5,8,-5,5,-7,8,-9,8,-4,-8,3,-1,-2,7,9],[10,4,-9,10,2,-9,1,9,-2,8,-1,10,8,-8,7],[5,-1,-7,8,6,-5,10,-3,-5,3,-6,6,6,-6,-1],[4,-2,2,9,7,10,2,-7,-3,9,8,10,-1,-8,-3],[-2,2,5,-5,6,2,3,-7,9,3,-6,5,-6,2,-5],[-2,5,-3,10,7,-10,-3,2,-3,2,1,8,-3,2,8],[-2,4,-6,10,-7,-5,5,-1,-8,8,-2,-7,4,-7,-5],[2,9,7,-3,3,-3,8,-6,6,5,5,4,-10,-2,-3],[-3,-6,-10,-8,-1,4,9,3,1,1,-5,3,-8,6,-9],[-7,-3,-7,-6,-8,5,-3,4,-2,-7,-10,9,2,8,5],[6,-2,-3,-3,-1,7,3,-2,8,-3,-7,7,-8,-1,-6],[4,8,-4,2,-1,-8,-10,-10,7,6,-3,5,-9,9,-9],[-8,-9,-8,9,-10,-2,-3,-9,-5,-1,8,-4,-3,6,-6],[-9,8,3,10,-4,4,-9,10,-10,-4,-6,6,-5,-4,3],[6,6,-9,-7,-1,-9,1,-4,6,4,6,4,9,-2,-10],[4,-6,-9,-9,4,-1,9,-1,-1,-8,6,-6,-7,-10,9]],[[-4,8,-5,-5,-5,-8,-3,8,-7,-10,-5,-8,-7,-5,4],[10,9,7,5,10,-10,6,-3,-7,3,-7,4,-9,-2,1],[-8,-3,-9,3,-2,-3,3,-6,-6,-9,10,7,-3,8,-1],[-1,-10,-8,-5,-2,-5,-9,-6,5,10,1,1,-6,6,-10],[-3,-8,7,3,-6,-9,1,9,5,-9,7,-6,10,3,-8],[-5,-3,-5,10,2,-2,-8,1,2,9,-10,3,-5,10,1],[10,-8,-10,5,2,5,-8,-8,-10,6,2,-6,-4,2,-8],[1,-10,10,3,-9,3,-8,6,-2,8,6,4,7,-2,1],[1,-5,-2,-10,-2,-9,-10,8,4,-2,9,-2,-9,-2,-7],[10,-6,8,2,2,-4,1,-7,4,8,-6,4,-2,7,4],[9,-4,1,-3,-8,8,-6,-10,7,-6,9,-4,10,-8,9],[2,7,3,8,4,-10,9,-3,-1,-2,7,-9,-6,6,5],[-5,-3,5,-2,-1,8,-9,9,8,2,7,3,8,-4,-3],[-10,-7,3,-7,4,9,1,-9,-2,10,-6,1,2,1,6],[6,4,-8,-7,10,-5,1,9,-8,-6,-4,7,4,-7,-7],[8,-10,9,9,-5,7,-8,-9,10,-9,-8,-1,-8,-4,9]],[[-9,-7,1,-7,5,-7,-3,3,-5,9,-1,7,-2,6,-10],[-9,2,-8,-5,-3,-8,-3,7,-4,10,6,-2,3,8,2],[-4,6,9,1,8,2,-4,6,-2,-6,6,6,-7,-2,10],[-2,4,-2,-10,9,-7,-4,8,4,2,2,4,-8,9,-5],[-3,-5,2,4,-2,-2,3,-10,5,1,-6,7,-5,10,-4],[-4,1,-8,7,-9,-4,-8,4,-10,-3,-10,5,10,4,-3],[6,-9,-7,2,-8,2,1,-1,-9,-5,1,3,5,-8,-3],[9,-8,-6,5,8,-10,-7,2,5,-6,-4,-10,-3,-10,5],[-1,3,-3,8,-9,-3,-9,-10,-6,-10,7,-9,3,-1,-4],[6,-1,9,-8,-3,-3,7,-7,-1,-4,-5,-9,8,-10,-2],[-7,2,-7,-5,-7,-5,-5,2,-1,-6,6,-6,8,6,4],[2,6,1,-6,2,5,2,2,-3,-9,-6,10,1,-7,-8],[4,-2,6,6,2,-3,-7,-8,-1,2,9,4,-1,9,-1],[-8,-7,-5,-8,2,3,4,2,-9,-2,-4,8,-2,4,-6],[6,-8,-8,5,8,-3,-5,-10,-10,4,9,-3,-6,7,-6],[-5,-9,-5,-7,-1,10,-5,3,-5,-6,5,7,-4,4,-2]],[[-8,-3,1,-4,-10,3,-2,-8,6,8,-10,-9,10,9,9],[-4,-10,4,7,-10,-6,9,-3,-3,-8,-5,1,-7,-9,6],[-2,3,-7,3,-6,1,6,-7,6,-10,-10,-5,8,3,10],[5,2,-4,-4,3,10,1,-5,-4,10,-5,10,-1,-2,8],[-6,8,1,-6,-8,9,6,-3,8,-10,-3,9,5,-4,6],[2,6,-9,1,6,-6,-7,-2,-3,-8,-3,10,-6,3,5],[-3,1,-7,6,6,7,-6,-6,7,-1,6,5,5,2,-3],[-7,-4,-4,9,-8,4,8,-2,-8,-6,3,4,-8,1,-9],[7,-9,-4,-9,-6,7,2,10,4,2,-1,-1,-3,6,-1],[8,-8,-6,-1,5,-3,7,-10,9,7,3,8,-4,7,7],[-2,-5,-2,-5,9,10,4,7,-4,-7,10,10,-8,-1,4],[-2,-2,1,1,9,-7,1,-6,-5,-9,-3,4,8,-10,8],[6,-4,-8,-2,-10,10,10,9,2,-6,8,-9,-5,-6,-6],[10,-4,-8,-9,3,3,-9,7,-7,-3,1,4,-6,8,5],[6,-6,2,-5,6,2,-3,10,-10,10,-2,7,-10,-5,6],[-2,7,-5,2,8,9,-7,3,-4,-6,8,-3,4,-1,4]],[[10,2,-2,6,10,-1,-6,-1,6,1,10,-2,6,8,8],[5,-6,7,5,-1,7,-3,-10,1,-2,10,4,4,-9,-9],[4,4,2,-7,3,3,-2,3,5,-2,10,8,5,6,-6],[-10,1,-8,3,4,-5,-8,-5,1,-8,-8,6,-2,8,4],[3,4,-5,-10,10,-8,3,4,-8,-10,9,-3,-2,5,-3],[5,2,-1,-4,7,5,10,1,5,-10,-4,-3,-3,3,8],[-6,3,4,5,7,1,7,-9,5,8,3,2,10,-10,3],[1,2,-7,8,-4,4,-6,-5,9,-2,-3,10,8,3,5],[7,7,-7,-6,8,9,-3,5,9,10,-3,-4,-2,-3,4],[3,3,1,-6,-7,6,6,-1,1,-7,1,6,2,-2,5],[4,-7,7,9,6,-8,1,4,-7,2,-8,5,-10,1,2],[10,-3,-5,7,-6,7,7,-9,10,6,1,6,-7,3,-10],[6,-2,-7,1,-10,-6,10,7,-4,7,-10,3,6,-2,-10],[5,2,-6,6,-2,-4,-5,2,8,-8,8,-5,2,3,-10],[8,-10,5,-1,5,9,-4,6,4,-3,-8,10,10,-5,-10],[7,-4,-10,2,2,-7,-9,-5,6,-10,4,8,3,10,2]],[[-7,-7,5,-10,1,6,-4,8,1,-1,-2,9,2,9,-2],[-1,-1,9,-10,-5,-2,-6,6,-8,-7,-10,-5,-1,2,9],[3,4,10,8,-2,-10,3,-3,-1,8,7,7,8,8,-7],[4,7,-4,1,9,-4,-10,-7,8,1,4,-5,-1,-10,-2],[6,-9,-4,-1,4,2,1,6,4,-3,-1,6,-1,-10,-6],[10,-8,6,-3,-9,-7,4,3,-5,4,-6,7,3,-9,-9],[-3,6,9,5,8,-8,7,4,-3,-10,7,4,-6,-1,9],[-9,-10,-6,-8,2,9,3,-3,-7,-6,-5,-3,-8,-5,-5],[9,-9,-10,10,9,3,2,-3,3,-3,-7,3,-7,-10,-9],[9,10,7,-6,-7,8,1,8,-7,4,-9,10,2,10,-10],[-6,7,8,5,2,8,-3,-10,-3,-9,8,-9,-9,-4,2],[10,-4,3,2,5,-9,3,-2,-3,9,3,2,-4,4,2],[3,-3,10,10,-3,7,7,-5,1,5,2,7,-1,-6,8],[-10,-9,-9,-10,-2,-3,-4,9,1,-7,-9,-6,2,-7,4],[-6,8,1,8,-6,4,-1,4,-8,-9,-3,4,7,1,-6],[-1,1,-2,7,-4,10,6,6,9,-5,1,-9,9,2,-9]],[[-5,3,-10,-10,2,-1,2,4,-5,4,-3,10,-1,-9,-3],[1,1,-5,6,-9,9,-3,-7,-1,-1,-4,1,8,7,2],[8,-7,9,1,7,-6,-9,-9,5,1,-4,-2,-1,6,-10],[7,4,-8,-7,-8,10,-3,2,-7,2,7,-3,1,-1,-3],[5,-2,5,2,10,4,-4,1,9,-5,6,-6,-10,6,-4],[-4,-8,-10,6,-2,-1,-8,-5,1,9,-4,-7,-5,-7,-10],[-9,-4,1,-9,-5,5,1,-1,4,-10,-7,7,7,2,-4],[-7,-7,9,4,-4,1,4,-7,-8,-6,-4,-5,8,-7,-5],[1,4,-2,3,-1,6,-10,-3,7,8,10,-6,-4,-6,-3],[2,5,-1,8,-3,-4,-2,1,-1,-9,-10,10,-5,-2,-5],[-3,10,-2,-3,6,-1,8,7,1,6,7,-8,-5,3,-3],[2,-5,4,-5,8,-4,4,-2,-9,-10,-10,2,6,-2,-5],[-9,-3,-1,-2,3,-10,8,-8,8,1,6,-5,-3,8,-1],[-2,-1,-5,-9,1,-8,8,-8,4,6,3,9,2,10,7],[2,2,-4,6,-5,-5,9,-8,-2,2,-10,-1,3,-2,1],[4,1,-7,-4,-8,9,1,9,-6,2,2,-2,-10,6,6]],[[3,3,6,7,-2,-1,10,-10,1,-1,-3,-4,6,8,8],[-1,5,-3,3,-5,4,-7,-5,-5,-4,-1,9,-2,1,-9],[7,8,-4,-7,10,4,-5,10,2,8,4,-5,-5,10,-6],[-5,-8,6,-5,-1,-2,-10,-9,-7,-8,7,4,-4,8,9],[10,-6,8,-10,-5,-7,-7,-2,-7,-5,5,6,-5,-2,-2],[-4,4,1,-4,-4,-4,-5,-6,-5,-7,-10,4,4,4,-10],[-7,-9,8,5,-2,2,8,7,4,10,4,-4,4,10,5],[4,-6,-3,4,-8,-6,4,-6,1,5,-1,-9,-9,-4,1],[-1,-1,8,3,3,2,-2,5,-9,9,-6,-5,7,8,-3],[1,3,-10,6,-5,-7,-8,3,-10,-8,6,-9,-2,5,10],[-8,3,-2,4,-8,-5,-8,-5,-6,3,4,-1,10,-1,-3],[4,-1,5,-10,1,2,3,9,-10,3,-1,3,-9,-5,-8],[1,-10,-9,-8,-5,-4,-5,6,-7,10,-10,-4,-5,5,-5],[-6,7,1,-2,2,5,6,-7,5,7,-3,-6,-9,1,-1],[-9,3,5,-1,-2,-4,-10,-9,3,8,-7,8,-7,-6,-2],[-5,4,-6,-3,-5,9,5,2,-4,-6,-4,3,-10,-10,3]],[[3,-3,-7,7,-6,-8,-4,4,-5,-8,3,5,7,-10,-2],[-6,-10,-6,-10,8,7,-10,-7,6,5,2,-7,5,4,10],[-6,-5,-5,-3,5,-10,-5,3,7,3,-3,-1,4,6,-9],[6,-3,2,-1,5,-6,8,7,5,-3,9,5,-8,-6,-9],[-1,2,5,5,1,-3,5,8,5,10,-2,-3,9,-8,-8],[-9,3,6,-5,7,1,5,-3,9,-8,7,-8,-9,-4,1],[7,10,1,-9,6,-6,-7,-2,4,8,2,2,-6,8,-9],[1,-1,5,8,2,-9,1,-7,-6,-4,-1,-2,8,-3,9],[7,5,4,2,3,5,10,9,9,-8,-2,1,1,3,8],[-3,5,-5,-7,10,-8,-1,-3,8,6,8,3,3,1,-8],[-1,5,9,2,6,-6,-6,-5,-7,-2,-6,-2,-2,-5,-4],[-1,1,8,8,8,1,8,-10,8,-5,2,-3,-2,-3,7],[9,-10,-7,-2,8,9,-3,1,-2,-3,-1,10,-3,-10,-1],[-2,6,1,-2,-6,-3,2,-2,1,1,-2,-1,8,-7,10],[7,8,-6,5,-2,-8,8,2,10,7,-7,6,1,2,4],[8,6,3,7,-7,2,5,-5,3,10,9,-7,7,-8,-10]]], dtype = "uint64")#candidate|3715|(10, 16, 15)|const|uint64
var_3716 = relay.var("var_3716", dtype = "uint64", shape = (10, 16, 15))#candidate|3716|(10, 16, 15)|var|uint64
bop_3717 = relay.logical_xor(const_3715.astype('uint64'), relay.reshape(var_3716.astype('uint64'), relay.shape_of(const_3715))) # shape=(10, 16, 15)
output = relay.Tuple([bop_3717,])
output2 = relay.Tuple([bop_3717,])
func_3724 = relay.Function([var_3716,], output)
mod['func_3724'] = func_3724
mod = relay.transform.InferType()(mod)
var_3725 = relay.var("var_3725", dtype = "uint64", shape = (10, 16, 15))#candidate|3725|(10, 16, 15)|var|uint64
output = func_3724(var_3725)
func_3726 = relay.Function([var_3725], output)
mutated_mod['func_3726'] = func_3726
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3811 = relay.const([[[-4,5,-4,-10,-9],[5,3,-6,7,-8],[5,1,7,-4,4]],[[2,-8,-10,5,3],[5,4,7,9,-9],[-2,-4,-2,3,-9]],[[-7,6,9,-8,-10],[-10,8,-4,-8,-10],[2,9,-5,9,7]],[[4,9,1,-8,4],[-9,-4,10,3,-1],[-5,3,10,-7,3]],[[-7,9,-6,5,1],[-3,-4,9,-5,4],[-5,10,4,-7,7]],[[4,6,-9,6,-10],[3,-9,-2,-5,-3],[4,9,-8,-4,-2]],[[5,-6,-1,-7,10],[6,-3,-2,-5,4],[5,6,2,5,-8]],[[-6,4,6,-8,4],[10,-9,5,2,10],[8,3,-9,9,-10]],[[4,-2,9,-4,10],[-5,8,-5,-7,2],[2,3,5,2,-8]],[[3,-10,10,10,8],[-4,2,9,4,4],[-3,8,-2,8,7]]], dtype = "int16")#candidate|3811|(10, 3, 5)|const|int16
var_3812 = relay.var("var_3812", dtype = "int16", shape = (10, 3, 5))#candidate|3812|(10, 3, 5)|var|int16
bop_3813 = relay.not_equal(const_3811.astype('bool'), relay.reshape(var_3812.astype('bool'), relay.shape_of(const_3811))) # shape=(10, 3, 5)
func_2661_call = mod.get_global_var('func_2661')
func_2663_call = mutated_mod.get_global_var('func_2663')
const_3819 = relay.const([-4.676756,-9.493414,-0.035443,2.510461,5.050230,-2.369870,-0.287370,-3.247941,0.538660,7.375051,-6.972153,1.244303,-5.282492,-2.521569,-0.559341,2.421345,7.049461,-1.608398,-5.930834,3.610465,-7.945748,0.563228,-3.145812,-0.937316,8.825316,-0.360591,6.282230,1.364006,-8.016614,-4.638087,1.140439,3.855823,5.508556,-2.301302,-9.961268,7.539302,-1.569886,1.022726,-6.092843,-2.837155,9.828980,-1.043991,5.401812,2.493320,8.042071,-4.105325,9.702206,-6.593078,8.260201,3.578722,-1.655739,-6.917758,7.085817,9.200358,9.978478,8.222242,-2.896993,-1.514055,6.783076,2.291005,9.083254,1.410148,-5.918846,8.004026,2.470230,8.226875,6.550034,-2.841593,7.296297,-6.752221,8.867583,-5.832703,1.868926,8.050579,-6.322064,-5.867557,-9.965255,-2.591599,0.539557,-9.557129,-5.117344,-2.806196,-2.319664,-0.989107,3.201327,-0.487834,-2.119605,-1.439083,5.949459,-8.824715,5.976573,2.459637,2.603439,-4.816421,0.793616,6.754489,-3.968045,4.674022,-1.442685,-0.622247,7.897053,-0.691794,6.889448,0.550069,1.380563,-7.418702,-2.674247,-9.630537,-9.808817,-5.581891,-0.418993,5.288000,-4.790459,5.273710,0.717590,-0.783928,-6.788150,-1.708663,4.093851,4.731548,-1.397725,8.985467,1.517327,-4.895338,-6.960303,-2.615378,-7.950560,3.688582,-4.285506,8.653365,4.204450,-0.562748,-7.001460,8.327525,7.296974,-7.303045,9.844592,-5.714822,-8.377813,-9.799424,-4.108492,7.940652,-3.552323,6.843289,9.713610,-8.817967,-8.595179,-7.075808,-7.735243,-3.033233,-8.714833,2.258464,2.779572,5.551907,-7.292373,-4.468972,-9.809122,2.402687,9.711291,3.528749,0.744486,4.137512,8.809326,-3.338780,3.655547,3.475579,-6.379251,9.523621,-8.791970,0.048341,-9.242346,2.565190,2.757019,-3.266501,3.912927,3.200979,5.631608,-5.723577,-1.790066,-2.903351,-5.300659,-1.731955,-4.988618,-0.515168,-1.032782,7.378578,5.325188,9.533090,5.085355,5.780784,1.419340,3.033854,5.093769,8.990188,1.102356,-5.565705,9.726262,-7.846603,-7.022157,4.713825,-2.047611,-1.424605,1.909333,-0.159482,5.804328,-3.130202,-6.760153,4.512624,6.482784,0.169577,2.469093,-6.158818,-7.824964,-5.298084,6.104302,8.224423,9.710581,-4.949552,3.507638,4.083000,-7.897400,-7.924474,-1.290898,8.409079,-6.041853,-9.427966,-1.181421,3.958948,4.116728,2.241682,0.387651,-8.843053,-1.763248,1.028679,9.540245,-0.618868,-1.875699,-2.667726,4.749324,7.897696,-1.278372,5.927581,-7.841757,-6.438214,-4.093121,4.838109,-8.310208,-9.967288,-1.055083,5.497214,0.796683,4.072804,-8.333779,-4.982828,5.086488,3.630925,1.051229,-0.139586,8.772400,9.871095,3.021615,3.329139,-5.050903,-6.205728,-2.520103,-5.317454,-4.608934,1.786376,6.372076,-1.256825,3.895510,-8.825457,-4.888388,4.351544,3.914668,2.157056,5.121712,8.991285,1.045590,-1.905146,8.058834,7.439869,-4.885032,-2.399423,-9.249386,1.202193,-7.173574,-6.806808,-7.840231,2.570510,-4.985660,-5.386382,2.548775,8.984094,-9.256188,-0.932845,-6.057045,7.547489,3.666299,-3.800869,-7.838339,4.450719,3.597823,4.187478,6.621116,-6.125901,5.418580,5.995657,-7.006963,0.792083,-6.978382,-2.669230,9.630723,-5.701170,6.277268,-9.097953,-1.399794,-0.422776,1.284124,2.976031,-0.329104,-0.387499,3.595952,7.778676,-1.421272,-1.147706,-1.219627,9.515703,-5.973209,-3.250599,-5.252300,2.725158,3.816931,3.281308,0.876232,6.033417,-3.578632,4.727918,-2.246531,9.300987,-8.040459,9.950152,-2.131521,-3.880397,-2.657892,-5.614657,-8.742553,0.394698,4.383870,-0.004970,-6.866709,0.060223,-5.376111,-3.397783,4.757319,6.122449,4.971776,-5.856543,-1.089217,-9.862997,-7.974252,8.446527,-5.657013,-9.164878,2.104352,-9.660461,-0.214517,-9.263660,-6.098037,7.272027,-4.309054,6.653349,-2.496831,3.088434,2.369747,5.401469,-9.607986,-4.064011,-9.553818,3.888810,7.715916,4.320345,2.717998,-7.021378,-3.915410,7.357939,4.233189,-0.682906,-3.236893,-2.339833,0.995180,1.619609,-7.197829,-3.872548,-7.159152,7.561897,3.428855,-7.686961,-1.919297,-6.351911,-2.120595,-2.298446,0.050412,9.523902,-5.890920,9.118054,-1.518297,-9.388580,-0.272136,7.711975,-4.964272,-3.332079,0.856230,-7.988802,-9.892934,-0.639353,-0.025634,-9.024047,3.872040,8.751006], dtype = "float64")#candidate|3819|(420,)|const|float64
call_3818 = relay.TupleGetItem(func_2661_call(relay.reshape(const_3819.astype('float64'), [6, 5, 14])), 0)
call_3820 = relay.TupleGetItem(func_2663_call(relay.reshape(const_3819.astype('float64'), [6, 5, 14])), 0)
uop_3824 = relay.sin(call_3818.astype('float32')) # shape=(6, 5, 14)
uop_3826 = relay.sin(call_3820.astype('float32')) # shape=(6, 5, 14)
output = relay.Tuple([bop_3813,const_3819,uop_3824,])
output2 = relay.Tuple([bop_3813,const_3819,uop_3826,])
func_3837 = relay.Function([var_3812,], output)
mod['func_3837'] = func_3837
mod = relay.transform.InferType()(mod)
var_3838 = relay.var("var_3838", dtype = "int16", shape = (10, 3, 5))#candidate|3838|(10, 3, 5)|var|int16
output = func_3837(var_3838)
func_3839 = relay.Function([var_3838], output)
mutated_mod['func_3839'] = func_3839
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3852 = relay.var("var_3852", dtype = "int64", shape = (15, 1, 9))#candidate|3852|(15, 1, 9)|var|int64
var_3853 = relay.var("var_3853", dtype = "int64", shape = (15, 12, 9))#candidate|3853|(15, 12, 9)|var|int64
bop_3854 = relay.less_equal(var_3852.astype('bool'), var_3853.astype('bool')) # shape=(15, 12, 9)
func_1002_call = mod.get_global_var('func_1002')
func_1005_call = mutated_mod.get_global_var('func_1005')
const_3867 = relay.const([-9,-7,-2,-9,10,-10,10,10,5,5,-5,9,2,2,-3,-10,-4,9,-6,5,-10,5,-9,6,-8,-3,-3,-10,6,2,1,-10,-9,-8,-7,-2,-8,-9,-1,-10,3,4,8,5,-8,-3,-9,1,-4,-4,4,2,-5,10,3,7,-7,-3,4,1,5,10,-1,-1,-2,7,-10,-1,-9,3,2,7,-8,6,-8,-6,3,6,-9,-10,-9,8,-6,-6,-9,-7,8,10,-4,-10,3,7,3,1,-8,2,8,9,-8,-8,-6,8,9,-10,4,7,-9,7,-8,4,7,-5], dtype = "int64")#candidate|3867|(112,)|const|int64
call_3866 = func_1002_call(relay.reshape(const_3867.astype('int64'), [4, 14, 2]))
call_3868 = func_1002_call(relay.reshape(const_3867.astype('int64'), [4, 14, 2]))
var_3869 = relay.var("var_3869", dtype = "int64", shape = (15, 12, 9))#candidate|3869|(15, 12, 9)|var|int64
bop_3870 = relay.floor_mod(var_3853.astype('float64'), relay.reshape(var_3869.astype('float64'), relay.shape_of(var_3853))) # shape=(15, 12, 9)
output = relay.Tuple([bop_3854,call_3866,const_3867,bop_3870,])
output2 = relay.Tuple([bop_3854,call_3868,const_3867,bop_3870,])
func_3876 = relay.Function([var_3852,var_3853,var_3869,], output)
mod['func_3876'] = func_3876
mod = relay.transform.InferType()(mod)
var_3877 = relay.var("var_3877", dtype = "int64", shape = (15, 1, 9))#candidate|3877|(15, 1, 9)|var|int64
var_3878 = relay.var("var_3878", dtype = "int64", shape = (15, 12, 9))#candidate|3878|(15, 12, 9)|var|int64
var_3879 = relay.var("var_3879", dtype = "int64", shape = (15, 12, 9))#candidate|3879|(15, 12, 9)|var|int64
output = func_3876(var_3877,var_3878,var_3879,)
func_3880 = relay.Function([var_3877,var_3878,var_3879,], output)
mutated_mod['func_3880'] = func_3880
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3923 = relay.var("var_3923", dtype = "int16", shape = (3, 7, 2))#candidate|3923|(3, 7, 2)|var|int16
const_3924 = relay.const([[[6,4],[-2,8],[-2,10],[-6,2],[-8,1],[8,-10],[2,-6]],[[-7,-8],[-7,-6],[9,-8],[1,-10],[2,6],[-3,-5],[1,-5]],[[5,5],[4,-4],[8,-1],[-4,-8],[8,9],[-2,-10],[-3,3]]], dtype = "int16")#candidate|3924|(3, 7, 2)|const|int16
bop_3925 = relay.multiply(var_3923.astype('int16'), relay.reshape(const_3924.astype('int16'), relay.shape_of(var_3923))) # shape=(3, 7, 2)
output = relay.Tuple([bop_3925,])
output2 = relay.Tuple([bop_3925,])
func_3932 = relay.Function([var_3923,], output)
mod['func_3932'] = func_3932
mod = relay.transform.InferType()(mod)
var_3933 = relay.var("var_3933", dtype = "int16", shape = (3, 7, 2))#candidate|3933|(3, 7, 2)|var|int16
output = func_3932(var_3933)
func_3934 = relay.Function([var_3933], output)
mutated_mod['func_3934'] = func_3934
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4373 = relay.const([[[-3.652601,9.045102,1.693544,-2.581728,0.364242,-5.304996,5.915455,-4.820696,-5.005731,7.586457,-3.585815,-6.613314,-6.148969,4.531840,1.058355,-5.788958],[1.075154,1.003360,-9.731473,-4.994808,-2.568006,-6.765302,5.203156,9.244960,1.091724,9.879697,8.146503,-9.982738,0.884258,-0.617847,3.947300,-3.661161],[-6.416578,0.212446,4.996065,-4.997782,-1.256979,8.302383,7.605446,-2.506929,-8.731626,2.566796,1.607067,9.484270,1.022708,-8.348660,-3.898841,-0.750156],[-6.097636,9.016676,8.733536,-5.998607,-5.579107,-3.559898,-9.816915,-8.974983,-4.218667,-8.864723,-7.893051,3.165810,4.310798,-4.210776,-0.452689,-1.974412],[-1.695066,9.461516,9.092709,-4.603356,7.014601,-4.615240,4.270673,-4.652375,-8.343167,4.216610,-9.832414,-5.777153,-5.439414,9.179519,8.011616,-5.979513],[9.096656,-7.150147,2.811579,-0.548995,0.685677,-8.987564,-3.752951,-6.730746,-7.197477,0.906753,-8.154910,-6.847165,-0.590021,-9.320830,-2.565805,6.119613],[-2.969956,-3.996668,-4.495659,-8.896534,7.118324,-9.637088,-4.486360,-1.136389,2.087879,1.000832,-0.645723,-7.378930,-6.311549,-8.261293,9.472588,-9.713086],[2.639957,8.620332,-9.518066,4.303122,7.272620,1.789817,9.416231,-8.000758,4.086564,-1.367751,3.117963,-8.908717,7.523891,-6.488330,-1.080870,-4.023268],[-8.103899,-7.169910,-5.680984,-4.448118,2.223561,9.154519,-0.864113,8.731272,6.298033,7.566793,2.034591,-4.871350,-0.027387,3.766307,-9.519121,7.567120],[-3.511258,1.127814,8.593887,-7.120503,4.323284,6.856902,4.495390,4.742324,8.656190,4.961791,-5.779961,8.541250,6.613850,8.291826,3.594308,-4.454826],[-3.903378,-0.415081,2.636621,8.199619,-0.461494,-2.467589,8.352157,-5.587871,-6.317252,0.727602,-6.370136,-6.124089,-6.592609,2.014983,-7.907708,7.769235]],[[4.568440,-8.999124,-8.030764,4.451979,7.523683,-0.308309,7.517939,8.661766,-3.629893,-7.709636,2.581074,-2.537683,-9.375798,3.938413,5.793692,-2.691938],[-7.343215,-4.586898,-1.459444,7.041390,5.000878,-1.516801,0.101666,5.990568,7.981601,-1.281595,-1.625876,-9.852141,-7.632997,6.983577,-3.424318,-1.419053],[-5.792965,3.084912,-7.254773,-4.359417,-8.848616,-9.191460,-9.238484,7.885699,2.588396,4.497660,5.647102,-5.409616,1.905962,8.589508,2.321924,6.262600],[-1.100902,-7.225798,7.385812,3.068072,-5.307086,0.315173,5.019393,-1.792733,-8.515904,-5.017057,5.457200,5.967576,-7.402239,-7.310567,-4.389155,3.911554],[-3.230125,8.723283,0.396348,7.560683,-1.784641,-1.842767,8.138832,-3.117183,-3.344188,8.600312,-7.809752,1.317476,-0.058513,-8.487145,3.850834,1.519704],[-0.278942,2.653618,7.510077,2.961967,-5.674562,0.501343,-2.525315,8.479120,-8.833742,-7.110992,-0.047539,1.182391,0.966462,8.738656,-3.254945,-8.292176],[-6.552802,-3.767671,-3.486856,1.343608,9.651097,-0.310607,8.807715,8.678439,5.605696,-9.730331,8.583350,-2.701512,8.099253,6.736618,-3.909644,-6.010326],[4.498755,1.462592,-1.494729,-2.685704,9.874668,0.453591,3.908812,6.426151,-0.441174,-2.878189,8.828328,-7.787321,-9.470871,-9.569638,1.202322,4.805742],[9.530376,-2.036839,-3.441817,-7.786777,-4.450299,-3.963970,-2.158414,-6.830648,8.490458,-5.552735,0.136448,3.955180,-4.169657,-2.594481,3.213100,-6.664570],[-4.602821,-3.585771,-6.137553,7.962445,6.167814,-3.585971,0.485756,-2.286476,5.627832,3.014179,-7.276701,-6.972067,3.125594,-8.844513,8.673824,3.109269],[-9.069764,-0.065619,-6.776204,8.930843,2.399375,5.758054,-8.370793,9.061113,-5.618794,-4.156478,7.471208,9.873647,5.424189,0.608957,6.436617,1.230758]],[[1.058446,-1.181529,4.204604,2.978337,9.733550,5.691941,-1.358942,2.220255,3.400188,7.438961,-8.982552,6.570816,0.216075,-3.863745,-8.315444,-1.464371],[3.868916,3.288333,-5.056449,8.748037,-4.171262,6.190513,2.904326,3.021779,-7.606297,-3.625201,-7.302472,-1.544734,-4.162601,-4.491571,-6.017769,-8.268687],[0.749293,-7.926289,-2.229188,6.607042,-5.540904,-8.661112,0.579328,7.295929,-6.505497,-4.004541,4.779146,-1.559602,-0.832168,-7.771222,2.681121,-8.768081],[5.178799,-6.997263,5.694315,-5.759728,-9.705578,9.953819,-2.971072,0.887314,-0.609969,2.308236,4.804277,-1.344666,-3.629453,-0.061985,0.698280,-8.719908],[-5.455171,6.433659,-2.046418,3.258412,-4.785946,-5.023641,9.788778,3.100291,-4.983067,-4.549235,9.719496,5.668227,9.759288,4.350500,-5.834451,7.364187],[6.663284,-9.392650,-9.780656,-8.019268,1.918138,-5.214287,1.781529,-2.364298,-2.732495,7.099498,8.424951,-9.226163,-8.845588,-8.168611,6.131148,7.674260],[-9.818637,1.838240,-6.448389,3.203861,-9.356081,-9.829037,6.551140,9.595377,2.131404,0.296173,3.759949,-7.139439,-8.789134,9.567955,-4.377289,-1.383389],[-1.649612,-9.980104,5.007873,-4.559370,6.082810,5.214995,-2.371266,-4.986256,5.499986,-5.119558,0.322678,1.972673,1.228770,-8.091641,4.691277,-5.681564],[-9.885577,-7.744229,-5.219573,5.200271,-9.456142,2.042855,-0.088121,-9.419154,5.001884,-9.082477,6.013353,-4.419259,-9.046906,1.828623,4.895897,-8.191618],[-1.685045,-8.073091,2.903446,-9.875734,-0.287481,-5.349688,3.638069,1.909919,-7.602686,-2.697396,3.460216,-9.211147,2.060634,7.466213,-6.453981,-5.995291],[6.359890,6.225339,-6.288569,-9.441642,1.024354,0.990487,2.178133,-3.237159,6.752035,-4.562740,8.754305,-9.520934,-0.122329,-6.488190,5.035011,0.756942]],[[2.776817,-3.028054,-6.078916,-0.314778,2.015658,-4.485012,-9.873547,-0.740237,9.105723,-5.084611,-0.265664,8.697788,2.765517,6.703207,-7.490149,3.375070],[7.407501,-1.246920,-4.620626,-8.232196,-9.087849,-7.970521,4.220992,-4.737024,4.284751,2.764154,-7.792586,-3.306770,-8.401195,-0.380113,-2.501726,-2.495228],[7.665884,4.712202,-0.992268,-1.376601,2.240766,6.995423,5.476844,5.999789,4.278227,-0.133858,-1.113378,6.116573,-4.458131,4.830691,4.046793,8.121277],[-6.450166,-4.637869,-9.752680,-6.895070,3.071572,-1.765368,6.718630,-0.950380,-7.018260,-3.035314,1.079674,-4.989982,-0.663067,0.194716,0.977622,-9.592883],[6.920123,-9.180606,4.541091,8.323513,8.479574,-7.239518,-1.006363,3.992828,0.972657,9.628165,7.468233,8.964085,0.956091,5.118330,4.841519,3.913244],[-9.981623,-5.392390,-3.311761,-2.373259,8.237639,-7.870810,9.173636,-0.359659,-8.273772,-1.315692,6.820963,8.280089,-1.196787,-2.701546,-7.516711,-6.154102],[0.141654,6.098325,7.276117,4.355451,-7.443544,-2.276206,9.974179,-2.981152,-7.390115,4.656545,-1.356118,-9.594289,1.843069,-0.423343,-7.115067,-3.896101],[6.228842,6.600269,-9.472448,9.903765,3.408889,-4.145864,8.960210,-9.607550,7.209335,7.658573,-7.915083,-7.952792,-3.236097,5.480315,-1.951269,7.063074],[7.121332,-3.605461,2.724925,-7.740109,7.919669,-7.903852,-8.052035,-5.644709,-1.728925,6.579507,9.969218,1.674405,5.935316,8.041843,-6.378573,6.795633],[1.434945,0.918272,-5.429512,5.200116,8.182717,-4.976148,-6.553753,6.410556,-5.942533,6.936449,6.981609,-0.665529,-3.837415,-1.072984,-2.212767,-3.240200],[2.649961,-0.616317,-7.704612,9.656389,3.732233,0.164167,-2.041278,0.669543,8.035261,-3.032594,9.334702,4.030894,-6.169397,-1.725869,-7.021097,8.864386]],[[1.817085,4.233042,0.346888,2.181129,-7.125289,8.327714,5.812729,2.182889,5.343639,7.125127,-6.548306,-3.780140,-6.339271,0.078684,-6.927930,-8.976413],[4.294245,8.037006,-8.927120,3.883347,3.343342,2.890924,9.986320,4.946570,3.423115,7.521980,-8.293551,-0.017882,0.770723,5.979398,-4.993807,7.493955],[1.264235,8.362317,3.381059,-2.827435,5.474212,7.922645,-5.108064,4.572364,-8.646271,-6.595408,0.855487,6.586925,-2.184196,-1.644901,3.435803,-3.866533],[-0.813209,-0.807878,6.397051,-9.130796,7.402472,8.533070,-0.895163,9.240094,-8.481449,8.537120,-7.340515,-1.553511,5.792767,-5.000389,-4.205530,4.988229],[-3.795487,-5.583311,-7.743572,-8.811246,-9.332052,-6.281221,-6.218576,0.125079,9.819870,-9.443390,-6.936362,-4.042130,9.740278,-4.637987,-5.552872,-5.575733],[2.397790,-0.872613,2.470435,9.269520,-7.519484,5.210900,8.948322,5.566362,3.107860,8.291611,-9.755818,-8.547587,-6.268219,3.440456,-9.436657,9.626235],[-7.506967,-9.308490,-3.010079,-7.968103,1.900108,6.385214,-4.496731,0.744864,7.434425,5.300532,-0.187139,3.991513,-5.138050,2.131312,5.800519,0.148147],[-0.174772,1.136703,8.034126,-6.606546,8.439703,-3.853695,-2.555544,-3.025092,-1.337765,-8.714056,0.315631,0.134646,-2.372762,-6.974244,4.534013,-6.594925],[8.653943,-2.331734,1.253317,4.787024,-3.107866,-9.130149,6.959288,-9.684998,8.508846,0.003197,7.486045,-2.637387,7.507566,4.190713,-3.581366,5.641264],[3.671962,8.350358,-9.829146,-0.628588,-0.563015,7.641609,3.738768,6.195537,-6.111071,1.715136,0.233717,-8.478729,-4.604771,4.718848,8.664537,9.980192],[-5.421952,4.140094,2.118390,7.073872,-5.305463,-9.439115,8.198508,-7.616159,-8.150202,9.001062,-4.878539,-2.133678,0.032230,9.514027,-1.064910,9.089784]],[[1.700846,0.296342,-6.748712,-5.022918,-4.816737,-1.872830,-8.762197,5.947984,-7.797009,-7.431747,-9.715792,-3.336899,-5.120397,-9.091766,-2.309113,9.075598],[-1.659374,-7.214182,-9.707580,-5.367228,2.292319,-4.085382,1.170278,-7.928016,-2.616459,-3.381916,-6.417434,-5.735246,3.604743,1.041341,-4.185313,0.159788],[-6.963343,-5.961433,4.980171,1.890465,5.948380,-0.530865,0.280436,8.917898,-4.904336,6.631729,-1.010638,8.040506,-1.397983,7.383743,-0.492394,-3.216303],[-7.901377,3.075063,3.013548,3.016564,-0.349582,9.365478,-0.071447,4.684275,0.675856,0.144734,-9.523775,5.450177,-4.641638,1.856647,8.037877,2.167549],[-9.957294,7.658410,1.964375,2.763650,1.100524,0.918606,8.610955,-2.291960,9.322562,-3.294236,-2.499269,7.516639,-1.683117,8.370455,-4.336466,7.679271],[1.572078,-8.187824,8.147767,-5.481497,-8.610664,6.594636,-6.425618,-7.920224,0.678311,1.125709,-5.117347,-9.779468,-6.739261,5.870579,-8.494940,3.060897],[4.398317,-3.524254,4.843097,4.539845,7.426492,1.222618,-5.590253,4.163658,-6.372572,-3.992864,5.759385,5.757932,-6.842297,-5.066900,-8.634309,7.473686],[0.241590,-1.035967,-3.749281,4.751427,-2.157916,-4.628330,-5.116094,2.194581,-4.576702,-9.155877,-2.230522,3.413041,-2.739876,-3.277791,-6.556042,-0.553283],[4.825605,-5.304282,9.252790,1.255180,4.221499,-6.478335,-7.346355,-8.095231,5.683270,-9.095467,2.463573,2.728784,-6.292589,-0.294119,2.944391,-5.633721],[1.799309,-5.236134,-5.678728,9.819197,0.369468,-6.050100,8.853796,1.037549,5.941698,-4.953024,6.475705,-4.625282,1.243494,-9.200425,8.834555,-9.463059],[-2.432505,8.250475,-1.368170,-9.491469,0.268894,8.983086,9.503680,2.687502,1.221691,6.644697,6.764260,-7.228467,-0.285834,2.518137,3.941713,6.975051]],[[1.843083,2.504624,4.585008,1.933665,-1.329277,6.525724,1.351383,-3.568799,-1.829053,-0.865324,3.295018,9.666336,4.047657,3.082476,-3.385418,-1.407823],[-7.157720,5.717799,5.779188,-8.923387,-4.371349,-4.247549,-2.215842,-1.828136,-6.332909,2.424967,7.605901,-6.781520,9.738305,9.128929,-6.186627,5.327979],[0.975331,-2.776014,-5.338367,-7.469090,-8.809848,-9.023856,5.463625,3.380305,7.071281,5.469045,1.353097,-4.674488,-8.099166,-6.175763,1.724847,1.459370],[8.479451,-2.671457,-0.516954,-2.929932,4.462646,7.480511,2.307954,-4.900481,1.198957,4.812329,2.866664,-8.825154,4.461708,-3.168411,-2.786340,-5.134555],[8.294515,4.269025,5.051213,-3.872025,1.333976,-8.358297,9.373171,5.292406,-8.921021,4.694663,-6.854583,4.453643,2.836816,4.691107,3.700863,1.566710],[-6.565010,-6.837253,-8.027123,-0.813435,8.577285,-6.531375,8.925159,8.456965,-1.232594,-5.171496,-6.628856,-8.997731,2.014760,-9.877072,6.027168,-8.550007],[-7.367797,-5.517819,8.165536,-7.071314,4.372026,7.110280,3.043617,-1.155486,-1.727795,-7.906184,5.552664,-1.032221,-0.579896,8.137458,-4.152061,3.303411],[5.282263,6.001426,-7.095701,4.415821,-6.278473,4.706811,0.724358,1.650573,-7.210482,9.337945,-2.733069,-6.444637,-7.195946,2.100349,1.766847,7.897672],[-3.814127,-0.260330,0.256726,-3.644886,-6.983493,0.684442,2.289590,1.558141,-5.506968,7.689867,-8.226150,-9.913444,-2.076155,3.646126,-4.438236,-3.313728],[7.863945,-7.479336,-5.550238,-4.629283,-8.461058,-1.549533,-3.789706,7.402049,-8.139974,-1.675323,-9.503665,5.574940,-6.672333,1.469505,-8.874199,2.743150],[-9.099869,-1.529695,-2.893511,2.818781,-0.554008,-3.434983,-5.541339,5.739170,4.396973,7.085252,-4.733858,-1.305475,-9.739429,-7.630943,4.699490,-2.101265]],[[1.460093,-6.635008,-8.499413,-6.969237,2.980459,9.641920,-8.260214,3.827275,-2.547311,4.354230,0.724159,0.454266,4.616844,-2.705579,4.693104,-8.330190],[0.008266,-9.605854,4.358698,-1.873181,-9.055194,-3.753027,4.308451,-0.495787,-1.509966,-0.067772,2.373995,6.269998,1.926969,6.321951,9.859208,4.899919],[-8.096617,-1.733376,-1.576008,-9.467031,-0.414645,3.498777,-5.675445,-9.478319,-9.068018,3.850855,-3.138814,-2.641456,-0.308973,5.255806,-0.998354,2.014510],[-2.385837,-5.236409,-8.946374,8.595212,1.185593,-8.420175,-2.302040,-9.202662,-5.917844,-1.887239,5.935749,-5.653900,-3.957820,1.749768,5.283200,6.953382],[-5.146575,-3.312386,2.052830,6.857405,0.274029,-4.884341,-3.516462,-4.034488,-9.186190,-7.110485,2.159944,-2.103025,-7.859684,-2.663066,-4.818100,5.954741],[8.776051,7.548486,-1.609125,4.000363,0.371130,0.041364,4.528769,-7.818786,8.788905,7.808304,5.696071,-4.121808,5.407667,3.843023,5.062056,-9.146162],[6.637614,5.100901,-4.916365,7.522936,-3.776762,-6.131812,-7.340386,-4.749626,6.493795,-0.119431,0.670160,-3.524324,-2.662573,-0.646071,-2.255457,-9.308963],[-5.931751,9.408898,5.514187,-5.265420,-4.297940,7.845142,6.580381,-4.352120,0.346476,-0.388772,0.611473,3.955203,-8.699475,9.009512,-3.684868,-3.258539],[5.204939,4.525134,-1.828300,7.368026,-3.982922,9.044028,-4.327777,-3.667696,4.502920,-8.266298,7.832715,-4.906283,4.103096,0.465991,2.199961,-6.130756],[5.283305,1.716306,-6.637959,-4.781773,0.224066,-8.096589,0.340435,2.486462,0.578367,-9.638697,3.905306,3.476308,-3.131467,-1.692247,-0.627384,4.881661],[5.633771,-3.628094,9.797564,-4.566647,-2.017308,-2.922886,-7.487264,-7.480188,0.362393,-1.730021,5.454102,4.684676,-4.439661,-2.549462,-4.898361,6.748806]],[[-1.367824,9.700381,-9.157412,1.918393,9.950998,6.829495,0.271694,0.596662,-9.878344,-4.671349,5.176991,4.294345,7.851140,1.401297,9.064878,7.076642],[-5.328299,4.488664,1.341803,0.752035,-4.257429,-4.456790,4.743714,-0.617448,4.774454,1.857254,-4.843001,1.453201,-9.389509,-9.116028,8.039150,-8.307737],[-8.129570,-2.887979,-7.450749,-7.728604,-2.158423,-2.724704,9.986640,9.850737,5.542631,0.158020,-2.159505,-2.816041,8.869994,-1.428215,-1.336517,-9.141460],[0.994670,-3.836880,7.098926,-9.262233,9.173501,9.386233,-0.038428,-5.545989,4.213851,6.088999,-6.402676,4.316906,-9.044109,-1.093965,-1.503669,-3.301092],[7.558883,8.695753,4.241470,9.183652,-1.859339,3.229684,5.988794,7.049515,-1.738123,-6.204104,-5.697282,-3.814582,-7.100504,4.617800,-8.427812,-8.219035],[4.379613,-7.297006,7.641801,3.288001,-5.350812,-5.064453,-5.717243,-5.342772,2.176688,3.509126,-5.315597,-9.983272,-0.457419,2.155886,8.432510,0.576560],[0.920374,-4.271178,1.607419,1.327511,-5.925907,4.788129,5.275141,8.344469,4.062619,-6.604529,9.181443,-6.844840,-7.786117,-6.708299,0.978673,-2.061174],[8.669550,4.683285,6.760690,-1.712266,5.788106,-8.605857,3.448013,6.955176,3.944144,1.952494,-7.338106,-5.480221,6.762733,6.459138,-7.933533,-6.554532],[-6.247726,-7.726198,-2.007777,1.246950,3.004635,-5.943995,-8.925865,1.502118,9.222844,-8.292313,-6.113652,-4.631067,7.241212,-8.222148,-9.013756,6.724084],[-1.417680,-9.735614,-5.846989,-5.291303,7.672522,-9.718456,-4.249733,8.911983,-3.107295,-1.037615,0.390161,1.003899,-2.379545,-4.826596,-1.423453,7.870092],[-7.802933,7.139177,0.484715,-2.760432,-4.864040,-5.075034,-1.924858,-0.646637,6.169232,5.615393,4.854579,8.527966,-0.758930,-4.232872,9.428387,6.663904]],[[9.383062,-4.760313,9.558848,-7.688872,-9.831768,-6.309427,-5.310214,0.690808,3.243187,-8.189010,5.788357,-4.230276,-1.620946,-8.543260,-0.821549,1.592142],[-0.529879,7.932167,-0.321196,8.507132,-2.143532,9.075004,-6.498107,9.621582,9.470825,4.301450,9.425208,-9.022050,-0.767611,-9.896261,-4.721493,7.164321],[1.268198,-8.959009,-1.997762,-5.580392,-8.198049,5.051436,1.291500,-0.680235,6.441715,2.742068,-3.992019,-7.903791,5.051079,2.678518,-5.721616,-2.098533],[3.498587,0.029519,1.451410,4.515925,8.466769,-5.703771,7.607388,8.132850,-9.488557,1.368714,-2.331727,-0.134395,-3.613217,5.189517,-9.658761,7.957357],[3.888700,0.524898,-5.444668,-2.098189,2.067892,-3.850051,6.125825,4.738100,9.725502,-6.163826,-7.039685,7.010717,9.833766,1.124806,-5.045777,0.025381],[5.272005,-8.797268,5.671716,3.688919,-1.056276,0.314666,2.298105,3.590402,-9.908244,-9.581268,-4.873099,2.527064,0.585052,0.788794,9.280872,6.577146],[9.015938,1.499035,-0.131979,-2.668817,-6.359124,-7.057486,-1.001932,-1.597045,-6.901868,-3.427349,-4.251175,-6.784681,-3.898572,-7.159571,-7.845052,8.741717],[0.744021,7.306573,6.315975,-9.449336,8.692638,-5.541284,3.728229,-6.182613,9.492616,-0.159288,8.703120,6.474395,8.450891,6.505663,9.947550,0.984308],[3.974618,-6.017053,-2.819529,9.306328,-9.856587,-9.960703,-0.857616,2.165623,3.212736,-4.919164,-5.293000,-6.263542,7.967964,4.605914,-9.445702,8.271608],[1.817875,8.808708,7.801236,-2.734263,-9.355232,8.473323,2.742784,-9.643566,-6.326545,4.945180,2.305239,-3.345926,-2.675289,0.141127,6.431469,-7.787915],[6.338559,-7.628154,-4.627331,-6.978266,5.211244,-5.829578,-3.967281,4.142859,4.837432,5.612960,7.479160,1.281146,5.516524,-8.030794,9.516323,-7.370664]]], dtype = "float64")#candidate|4373|(10, 11, 16)|const|float64
uop_4374 = relay.sqrt(const_4373.astype('float64')) # shape=(10, 11, 16)
output = relay.Tuple([uop_4374,])
output2 = relay.Tuple([uop_4374,])
func_4380 = relay.Function([], output)
mod['func_4380'] = func_4380
mod = relay.transform.InferType()(mod)
mutated_mod['func_4380'] = func_4380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mutated_mod.get_global_var('func_4380')
call_4381 = func_4380_call()
output = call_4381
func_4382 = relay.Function([], output)
mutated_mod['func_4382'] = func_4382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_4404 = relay.TupleGetItem(func_4380_call(), 0)
call_4405 = relay.TupleGetItem(func_4382_call(), 0)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_4408 = relay.TupleGetItem(func_4380_call(), 0)
call_4409 = relay.TupleGetItem(func_4382_call(), 0)
uop_4412 = relay.asin(call_4408.astype('float32')) # shape=(10, 11, 16)
uop_4414 = relay.asin(call_4409.astype('float32')) # shape=(10, 11, 16)
uop_4417 = relay.asinh(uop_4412.astype('float64')) # shape=(10, 11, 16)
uop_4419 = relay.asinh(uop_4414.astype('float64')) # shape=(10, 11, 16)
var_4434 = relay.var("var_4434", dtype = "float64", shape = (10, 11, 16))#candidate|4434|(10, 11, 16)|var|float64
bop_4435 = relay.greater_equal(uop_4417.astype('bool'), relay.reshape(var_4434.astype('bool'), relay.shape_of(uop_4417))) # shape=(10, 11, 16)
bop_4438 = relay.greater_equal(uop_4419.astype('bool'), relay.reshape(var_4434.astype('bool'), relay.shape_of(uop_4419))) # shape=(10, 11, 16)
bop_4449 = relay.multiply(uop_4412.astype('float64'), relay.reshape(call_4404.astype('float64'), relay.shape_of(uop_4412))) # shape=(10, 11, 16)
bop_4452 = relay.multiply(uop_4414.astype('float64'), relay.reshape(call_4405.astype('float64'), relay.shape_of(uop_4414))) # shape=(10, 11, 16)
bop_4455 = relay.less(uop_4417.astype('bool'), relay.reshape(call_4404.astype('bool'), relay.shape_of(uop_4417))) # shape=(10, 11, 16)
bop_4458 = relay.less(uop_4419.astype('bool'), relay.reshape(call_4405.astype('bool'), relay.shape_of(uop_4419))) # shape=(10, 11, 16)
output = relay.Tuple([bop_4435,bop_4449,bop_4455,])
output2 = relay.Tuple([bop_4438,bop_4452,bop_4458,])
func_4459 = relay.Function([var_4434,], output)
mod['func_4459'] = func_4459
mod = relay.transform.InferType()(mod)
var_4460 = relay.var("var_4460", dtype = "float64", shape = (10, 11, 16))#candidate|4460|(10, 11, 16)|var|float64
output = func_4459(var_4460)
func_4461 = relay.Function([var_4460], output)
mutated_mod['func_4461'] = func_4461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_4511 = relay.TupleGetItem(func_4380_call(), 0)
call_4512 = relay.TupleGetItem(func_4382_call(), 0)
func_389_call = mod.get_global_var('func_389')
func_392_call = mutated_mod.get_global_var('func_392')
var_4553 = relay.var("var_4553", dtype = "uint64", shape = ())#candidate|4553|()|var|uint64
const_4554 = relay.const([8,9,6,7,5,-9,-8], dtype = "uint64")#candidate|4554|(7,)|const|uint64
call_4552 = relay.TupleGetItem(func_389_call(relay.reshape(var_4553.astype('uint64'), []), relay.reshape(const_4554.astype('uint64'), [1, 1, 7]), ), 0)
call_4555 = relay.TupleGetItem(func_392_call(relay.reshape(var_4553.astype('uint64'), []), relay.reshape(const_4554.astype('uint64'), [1, 1, 7]), ), 0)
func_3724_call = mod.get_global_var('func_3724')
func_3726_call = mutated_mod.get_global_var('func_3726')
var_4560 = relay.var("var_4560", dtype = "uint64", shape = (2400,))#candidate|4560|(2400,)|var|uint64
call_4559 = relay.TupleGetItem(func_3724_call(relay.reshape(var_4560.astype('uint64'), [10, 16, 15])), 0)
call_4561 = relay.TupleGetItem(func_3726_call(relay.reshape(var_4560.astype('uint64'), [10, 16, 15])), 0)
bop_4570 = relay.bitwise_and(var_4553.astype('uint16'), var_4560.astype('uint16')) # shape=(2400,)
bop_4585 = relay.logical_and(var_4560.astype('bool'), relay.reshape(bop_4570.astype('bool'), relay.shape_of(var_4560))) # shape=(2400,)
output = relay.Tuple([call_4511,call_4552,const_4554,call_4559,bop_4585,])
output2 = relay.Tuple([call_4512,call_4555,const_4554,call_4561,bop_4585,])
func_4589 = relay.Function([var_4553,var_4560,], output)
mod['func_4589'] = func_4589
mod = relay.transform.InferType()(mod)
var_4590 = relay.var("var_4590", dtype = "uint64", shape = ())#candidate|4590|()|var|uint64
var_4591 = relay.var("var_4591", dtype = "uint64", shape = (2400,))#candidate|4591|(2400,)|var|uint64
output = func_4589(var_4590,var_4591,)
func_4592 = relay.Function([var_4590,var_4591,], output)
mutated_mod['func_4592'] = func_4592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_4652 = relay.TupleGetItem(func_4380_call(), 0)
call_4653 = relay.TupleGetItem(func_4382_call(), 0)
output = call_4652
output2 = call_4653
func_4667 = relay.Function([], output)
mod['func_4667'] = func_4667
mod = relay.transform.InferType()(mod)
output = func_4667()
func_4668 = relay.Function([], output)
mutated_mod['func_4668'] = func_4668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_4711 = relay.TupleGetItem(func_4380_call(), 0)
call_4712 = relay.TupleGetItem(func_4382_call(), 0)
func_389_call = mod.get_global_var('func_389')
func_392_call = mutated_mod.get_global_var('func_392')
const_4720 = relay.const(-4, dtype = "uint64")#candidate|4720|()|const|uint64
const_4721 = relay.const([8,-2,-7,3,1,-7,5], dtype = "uint64")#candidate|4721|(7,)|const|uint64
call_4719 = relay.TupleGetItem(func_389_call(relay.reshape(const_4720.astype('uint64'), []), relay.reshape(const_4721.astype('uint64'), [1, 1, 7]), ), 0)
call_4722 = relay.TupleGetItem(func_392_call(relay.reshape(const_4720.astype('uint64'), []), relay.reshape(const_4721.astype('uint64'), [1, 1, 7]), ), 0)
func_4459_call = mod.get_global_var('func_4459')
func_4461_call = mutated_mod.get_global_var('func_4461')
call_4731 = relay.TupleGetItem(func_4459_call(relay.reshape(call_4711.astype('float64'), [10, 11, 16])), 2)
call_4732 = relay.TupleGetItem(func_4461_call(relay.reshape(call_4711.astype('float64'), [10, 11, 16])), 2)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_4734 = relay.TupleGetItem(func_4380_call(), 0)
call_4735 = relay.TupleGetItem(func_4382_call(), 0)
func_3876_call = mod.get_global_var('func_3876')
func_3880_call = mutated_mod.get_global_var('func_3880')
const_4739 = relay.const([[4,5,8,-9,-3,-9,9,9,-2],[-9,10,7,-9,10,4,6,-1,-8],[-3,7,-1,3,4,2,-8,1,6],[4,4,-5,-9,-8,3,1,-2,2],[-5,-5,-10,4,-5,6,3,-9,5],[7,4,-4,1,3,-4,-7,3,-7],[-1,10,8,-9,7,9,-1,-6,2],[-4,-7,-6,-3,9,7,6,9,-3],[-2,-7,2,3,-2,10,8,7,-10],[-6,10,-8,3,4,-10,10,-3,4],[-5,-1,-5,3,5,-1,-4,10,4],[10,2,1,3,7,-2,-3,8,-4],[-5,6,-6,6,4,4,4,5,-8],[-7,2,8,4,1,-5,3,-3,-9],[8,8,3,-9,-6,2,-5,-6,4]], dtype = "int64")#candidate|4739|(15, 9)|const|int64
var_4740 = relay.var("var_4740", dtype = "int64", shape = (90, 18))#candidate|4740|(90, 18)|var|int64
call_4738 = relay.TupleGetItem(func_3876_call(relay.reshape(const_4739.astype('int64'), [15, 1, 9]), relay.reshape(var_4740.astype('int64'), [15, 12, 9]), relay.reshape(var_4740.astype('int64'), [15, 12, 9]), ), 1)
call_4741 = relay.TupleGetItem(func_3880_call(relay.reshape(const_4739.astype('int64'), [15, 1, 9]), relay.reshape(var_4740.astype('int64'), [15, 12, 9]), relay.reshape(var_4740.astype('int64'), [15, 12, 9]), ), 1)
uop_4742 = relay.erf(var_4740.astype('float32')) # shape=(90, 18)
func_4589_call = mod.get_global_var('func_4589')
func_4592_call = mutated_mod.get_global_var('func_4592')
var_4752 = relay.var("var_4752", dtype = "uint64", shape = (20, 120))#candidate|4752|(20, 120)|var|uint64
call_4751 = relay.TupleGetItem(func_4589_call(relay.reshape(const_4720.astype('uint64'), []), relay.reshape(var_4752.astype('uint64'), [2400,]), ), 0)
call_4753 = relay.TupleGetItem(func_4592_call(relay.reshape(const_4720.astype('uint64'), []), relay.reshape(var_4752.astype('uint64'), [2400,]), ), 0)
uop_4754 = relay.atan(uop_4742.astype('float32')) # shape=(90, 18)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_4761 = func_4667_call()
call_4762 = func_4667_call()
bop_4763 = relay.floor_mod(uop_4742.astype('float64'), relay.reshape(var_4740.astype('float64'), relay.shape_of(uop_4742))) # shape=(90, 18)
bop_4767 = relay.multiply(uop_4754.astype('uint16'), relay.reshape(bop_4763.astype('uint16'), relay.shape_of(uop_4754))) # shape=(90, 18)
bop_4774 = relay.logical_and(uop_4754.astype('bool'), relay.reshape(var_4740.astype('bool'), relay.shape_of(uop_4754))) # shape=(90, 18)
func_4589_call = mod.get_global_var('func_4589')
func_4592_call = mutated_mod.get_global_var('func_4592')
call_4787 = relay.TupleGetItem(func_4589_call(relay.reshape(const_4720.astype('uint64'), []), relay.reshape(var_4752.astype('uint64'), [2400,]), ), 1)
call_4788 = relay.TupleGetItem(func_4592_call(relay.reshape(const_4720.astype('uint64'), []), relay.reshape(var_4752.astype('uint64'), [2400,]), ), 1)
bop_4794 = relay.right_shift(bop_4767.astype('int32'), relay.reshape(bop_4763.astype('int32'), relay.shape_of(bop_4767))) # shape=(90, 18)
uop_4797 = relay.cosh(bop_4794.astype('float64')) # shape=(90, 18)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
var_4802 = relay.var("var_4802", dtype = "int16", shape = (150,))#candidate|4802|(150,)|var|int16
call_4801 = relay.TupleGetItem(func_3837_call(relay.reshape(var_4802.astype('int16'), [10, 3, 5])), 0)
call_4803 = relay.TupleGetItem(func_3839_call(relay.reshape(var_4802.astype('int16'), [10, 3, 5])), 0)
uop_4813 = relay.acosh(uop_4797.astype('float64')) # shape=(90, 18)
func_3030_call = mod.get_global_var('func_3030')
func_3033_call = mutated_mod.get_global_var('func_3033')
const_4818 = relay.const([-0.418997,4.787220,-8.711806,-8.272456,3.286860,-2.530504,-7.543198,-0.331618,5.988066,-2.438963,1.646117,1.592679,-4.820081,9.220110,-0.966627,3.322550,-4.390037,2.033217,3.261195,3.844756,1.315192,-5.172850,0.380801,-0.430762,1.522247,-0.717072,1.163304,4.471728,-8.196521,-2.500120,3.135136,0.271034,-5.015457,-5.030607,-2.612357,-0.205881,-5.525992,4.951678,1.758132,-8.008457,9.076086,0.569164,7.071127,-4.673282,5.123143,-3.667187,0.239883,9.347361,-6.299053,5.513659,3.243500,-1.351103,-7.735676,-4.500132,2.491182,2.377032,2.665720,-3.737984,9.981026,-2.560051,2.057857,-0.459935,-0.923884,-4.106927,7.517892,3.454807,-6.437992,-7.477969,5.186558,-7.793915,-5.840122,9.368820,9.936668,-9.339979,5.628125,7.278658,8.215916,1.575795,8.495079,-7.690432,8.482070,-6.204953,6.125165,2.264376,9.793681,6.001525,5.760497,9.906005,-2.509142,0.658064,-1.887142,-9.141652,-6.413010,1.050722,-4.869049,0.063053,8.493813,7.997562,-4.358437,9.503858,-2.968422,8.712080,-6.391917,-5.932998,-3.607899,-3.076885,8.948915,-8.659986,-6.037515,9.268315,3.739678,-8.144956,-9.789487,4.863913,-0.597695,-0.175502,-5.390351,-9.436315,-7.698238,3.034534,9.700358,2.560454,5.791421,-6.002361,7.394597,-6.438451,-5.405681,4.016731,-4.303433,-6.365608,-3.051863,5.536565,-0.443886,0.199879,1.826732,-1.959411,-7.868287,1.139226,6.906226,7.185310,7.974588,-2.275329,-8.160659,5.265473,-7.948315,-4.194317,-9.146608,0.590124,7.267041,-5.618434,-9.492686,0.593827,-6.519739,-3.714082,6.673286,4.228370,9.994309,-0.575348,5.676421,-2.258194,9.926141,-9.829274,-0.517155,9.931454,-2.637792,-8.829664,-3.687840,3.122598,-2.303622,-3.501715,8.373375,2.939785,2.999131,7.102226,7.368169,9.651175,-5.357856,-5.467286,7.572499,-7.729024,3.958589,-7.654903,2.248227,3.420404,2.545698,0.796476,9.718314,1.872094,-5.303107,7.368067,-9.229860,6.656549,2.182453,-1.730789,1.554831,-3.531910,1.228144,-1.787495,5.246235,3.475239,6.725148,8.832490,5.306976,-7.024687,1.970661,8.458439,-2.308165,-2.903498,-6.759116,-8.988785,-4.607512,8.433807,-3.890802,-2.922989,3.653306,-7.318727,-6.001652,7.922609,6.282608,5.362273,4.789959,-8.706061,2.470867,2.112097,1.294565,8.838051,1.406611,-8.506359,-3.837447,2.485452,-9.065954,5.299359,9.614500,-5.935952,-8.854971,-5.862696,-4.281723,0.733230,2.507972,7.129330,-3.367607,-0.745042,4.177687,2.658350,9.525684,5.071390,0.872413,-5.489551,9.815224,6.176519,5.936573,-3.567803,-1.867873,9.259449,-7.110110,6.817581,-1.164991,-9.056596,-9.138619,1.998886,-5.053485,4.053977,7.858109,7.722514,-6.510652,-0.657386,-7.960962,3.050285,-4.569957,-2.170946,0.319593,-1.814151,-6.282032,-8.549769,-8.029399,-8.011804,-3.845546,-1.862128,-6.299617,6.995945,-7.608821,-3.584510,-9.332767,-4.001714,-8.470502,8.319068,-2.705134,3.422784,2.238479,1.634041,-9.717852,-5.046506,8.932240,-7.201237,-5.083529,-3.658623,-1.570499,3.783413,-0.167216,8.820682,5.616729,-0.172254,-7.949722,-2.616614,8.434335,-8.711500,4.558081,9.230413,2.598725,-4.297428,5.021585,9.849497,4.263591,-8.924270,-9.506973,3.952223,-1.686637,8.628899,8.133883,-5.845671,7.737264,-2.922707,-9.348162,1.304964,-8.956119,8.773788,-6.862024,3.805741,-6.244098,1.551803,2.131503,-0.655185,-7.128773,8.561025,7.881866,8.845532], dtype = "float64")#candidate|4818|(336,)|const|float64
call_4817 = func_3030_call(relay.reshape(const_4818.astype('float64'), [6, 14, 4]))
call_4819 = func_3030_call(relay.reshape(const_4818.astype('float64'), [6, 14, 4]))
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
const_4825 = relay.const([5.178161,-0.362256,-8.472908,1.069890,-5.958277,-1.117685,-7.482579,6.167408,-2.321133,5.849788,2.657073,-0.528298,6.025858,1.072278,5.187223,5.137822,-9.615966,4.526505,-2.922937,5.671243,3.208351,-3.777839,7.413127,-1.957409,2.440504,3.817873,-0.663388,-4.794971,-1.833674,-4.136539,-8.932457,-2.613710,-6.744329,3.494564,-5.587753,9.993667,-7.575376,0.182810,7.368889,9.464470,-1.635220,5.904492,-3.299755,-9.707711,-0.910420,-6.456571,-8.989002,7.232283,-0.853536,9.791780,2.909839,3.935494,0.505172,3.243593,-6.648735,1.831350,3.684701,0.346903,-0.553435,0.732348,2.567319,2.581752,-4.872204,-2.818341,8.894556,-7.456763,-4.890835,-4.202261,-5.811107,9.372731,-8.163879,2.468638,8.956568,3.791828,-2.344700,-5.209231,-1.748060,-0.794825,-7.173178,-9.659646,-2.163696,-1.409912,-5.348594,-8.480804,9.040645,7.369796,-7.565928,1.190847,-0.452028,-2.676659,8.486514,-8.096917,-4.724925,2.430241,4.087538,8.665261,-2.496184,-7.391502,-9.708834,5.404626,-0.364750,-6.223971,-3.472874,8.078070,-5.429344,6.554583,-2.556349,-1.746883,-0.029711,-5.980712,0.458072,-7.892516,6.750045,-3.055148,7.073352,1.632620,-9.507913,7.347217,-7.057726,3.735050,-4.012230,-6.320925,-6.592959,7.783011,-8.485067,-6.325714,3.592979,7.935922,-4.491479,5.148702,-4.305425,6.838365,-5.050167,9.460639,5.155989,4.900136,5.496669,1.093264,-8.673171,7.820343,-1.233557,-3.901179,-7.118011,-8.432111,1.694109,-6.066546,0.182115,4.385278,-0.344235,-5.917666,5.023213,1.145005,0.062894,9.379106,-0.701938,6.459208,-4.134720,-3.964146,3.221551,1.732788,-1.025018,-7.226734,-0.696445,0.679770,-6.267518,-1.037177,-1.507575,8.451249,-4.898752,4.259396,4.786264,0.344120,3.533864,-4.253061,4.266441,8.106734,3.817415,2.463793,9.941570,4.557572,-2.705395,-3.653125,7.739308,-0.152065,-5.308672,-0.407811,-5.152643,5.978780,-6.461437,0.591715,-1.410729,3.178417,-7.316345,0.622334,-4.013305,-2.298819,-4.784777,8.922330,-2.348603,-5.772237,5.941356,-0.292192,-0.614525,2.106436,8.738754,-2.329954,-7.423471,0.766421,-7.278229,-7.909108,8.377867,8.833850,3.542542,-6.745182,8.265172,-6.467180,2.260150,-8.288226,3.579277,-2.432959,-1.254382,-6.637428,3.585581,-9.926273,-0.716737,-9.037789,4.672931,7.388818,-4.275751,-5.154205,-4.350326,-4.180157,5.200650,-1.861784,5.012430,6.293734,6.921811,-3.475831,6.924013,6.511028,5.799623,-7.108850,5.540419,-2.940856,9.757625,4.766820,4.204662,0.106929,1.307825,8.100624,1.917740,-0.064987,-3.082964,6.170789,8.348807,4.868389,-3.043186,4.757758,-3.110579,4.505428,-4.045365,8.648105,-2.773422,-5.076286,-3.637957,-8.410333,-3.017589,7.404043,9.317682,4.447110,8.120816,-1.492891,-7.968440,8.006191,5.724897,-9.039468,-6.734496,5.725837,-7.311768,-2.958572,-2.184994,-5.357949,3.948769,4.447244,-3.578533,-8.657635,-3.902310,2.949797,-3.233586,1.549973,5.761153,-6.384901,8.675576,8.836489,6.893494,9.182605,-2.105372,2.573359,9.773414,1.892568,0.544204,2.917890,-2.960615,-5.780331,5.831626,-6.707894,3.814662,-6.787170,-8.679175,-6.075362,9.964880,8.498127], dtype = "float32")#candidate|4825|(312,)|const|float32
call_4824 = relay.TupleGetItem(func_3442_call(relay.reshape(const_4825.astype('float32'), [13, 12, 2])), 0)
call_4826 = relay.TupleGetItem(func_3444_call(relay.reshape(const_4825.astype('float32'), [13, 12, 2])), 0)
output = relay.Tuple([call_4711,call_4719,const_4720,const_4721,call_4731,call_4734,call_4738,const_4739,call_4751,var_4752,call_4761,bop_4774,call_4787,call_4801,var_4802,uop_4813,call_4817,const_4818,call_4824,const_4825,])
output2 = relay.Tuple([call_4712,call_4722,const_4720,const_4721,call_4732,call_4735,call_4741,const_4739,call_4753,var_4752,call_4762,bop_4774,call_4788,call_4803,var_4802,uop_4813,call_4819,const_4818,call_4826,const_4825,])
func_4827 = relay.Function([var_4740,var_4752,var_4802,], output)
mod['func_4827'] = func_4827
mod = relay.transform.InferType()(mod)
var_4828 = relay.var("var_4828", dtype = "int64", shape = (90, 18))#candidate|4828|(90, 18)|var|int64
var_4829 = relay.var("var_4829", dtype = "uint64", shape = (20, 120))#candidate|4829|(20, 120)|var|uint64
var_4830 = relay.var("var_4830", dtype = "int16", shape = (150,))#candidate|4830|(150,)|var|int16
output = func_4827(var_4828,var_4829,var_4830,)
func_4831 = relay.Function([var_4828,var_4829,var_4830,], output)
mutated_mod['func_4831'] = func_4831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_4859 = relay.TupleGetItem(func_4380_call(), 0)
call_4860 = relay.TupleGetItem(func_4382_call(), 0)
func_564_call = mod.get_global_var('func_564')
func_567_call = mutated_mod.get_global_var('func_567')
var_4869 = relay.var("var_4869", dtype = "float32", shape = (75, 9))#candidate|4869|(75, 9)|var|float32
const_4870 = relay.const([7.515228,9.681226,-2.274803,5.303435,-8.806503,2.813619,-2.032073], dtype = "float64")#candidate|4870|(7,)|const|float64
call_4868 = relay.TupleGetItem(func_564_call(relay.reshape(var_4869.astype('float32'), [9, 15, 5]), relay.reshape(const_4870.astype('float64'), [7,]), ), 2)
call_4871 = relay.TupleGetItem(func_567_call(relay.reshape(var_4869.astype('float32'), [9, 15, 5]), relay.reshape(const_4870.astype('float64'), [7,]), ), 2)
output = relay.Tuple([call_4859,call_4868,var_4869,const_4870,])
output2 = relay.Tuple([call_4860,call_4871,var_4869,const_4870,])
func_4872 = relay.Function([var_4869,], output)
mod['func_4872'] = func_4872
mod = relay.transform.InferType()(mod)
mutated_mod['func_4872'] = func_4872
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4873 = relay.var("var_4873", dtype = "float32", shape = (75, 9))#candidate|4873|(75, 9)|var|float32
func_4872_call = mutated_mod.get_global_var('func_4872')
call_4874 = func_4872_call(var_4873)
output = call_4874
func_4875 = relay.Function([var_4873], output)
mutated_mod['func_4875'] = func_4875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_4907 = func_4667_call()
call_4908 = func_4667_call()
func_2661_call = mod.get_global_var('func_2661')
func_2663_call = mutated_mod.get_global_var('func_2663')
var_4941 = relay.var("var_4941", dtype = "float64", shape = (420,))#candidate|4941|(420,)|var|float64
call_4940 = relay.TupleGetItem(func_2661_call(relay.reshape(var_4941.astype('float64'), [6, 5, 14])), 0)
call_4942 = relay.TupleGetItem(func_2663_call(relay.reshape(var_4941.astype('float64'), [6, 5, 14])), 0)
func_596_call = mod.get_global_var('func_596')
func_600_call = mutated_mod.get_global_var('func_600')
const_4950 = relay.const([False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False], dtype = "bool")#candidate|4950|(154,)|const|bool
const_4951 = relay.const([False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,True,True,False], dtype = "bool")#candidate|4951|(2156,)|const|bool
call_4949 = func_596_call(relay.reshape(const_4950.astype('bool'), [11, 1, 14]), relay.reshape(const_4951.astype('bool'), [11, 14, 14]), )
call_4952 = func_596_call(relay.reshape(const_4950.astype('bool'), [11, 1, 14]), relay.reshape(const_4951.astype('bool'), [11, 14, 14]), )
output = relay.Tuple([call_4907,call_4940,var_4941,call_4949,const_4950,const_4951,])
output2 = relay.Tuple([call_4908,call_4942,var_4941,call_4952,const_4950,const_4951,])
func_4953 = relay.Function([var_4941,], output)
mod['func_4953'] = func_4953
mod = relay.transform.InferType()(mod)
mutated_mod['func_4953'] = func_4953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4954 = relay.var("var_4954", dtype = "float64", shape = (420,))#candidate|4954|(420,)|var|float64
func_4953_call = mutated_mod.get_global_var('func_4953')
call_4955 = func_4953_call(var_4954)
output = call_4955
func_4956 = relay.Function([var_4954], output)
mutated_mod['func_4956'] = func_4956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_4981 = func_4667_call()
call_4982 = func_4667_call()
output = call_4981
output2 = call_4982
func_4993 = relay.Function([], output)
mod['func_4993'] = func_4993
mod = relay.transform.InferType()(mod)
mutated_mod['func_4993'] = func_4993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4993_call = mutated_mod.get_global_var('func_4993')
call_4994 = func_4993_call()
output = call_4994
func_4995 = relay.Function([], output)
mutated_mod['func_4995'] = func_4995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_5055 = func_4667_call()
call_5056 = func_4667_call()
func_4953_call = mod.get_global_var('func_4953')
func_4956_call = mutated_mod.get_global_var('func_4956')
var_5062 = relay.var("var_5062", dtype = "float64", shape = (70, 6))#candidate|5062|(70, 6)|var|float64
call_5061 = relay.TupleGetItem(func_4953_call(relay.reshape(var_5062.astype('float64'), [420,])), 1)
call_5063 = relay.TupleGetItem(func_4956_call(relay.reshape(var_5062.astype('float64'), [420,])), 1)
uop_5067 = relay.asin(var_5062.astype('float64')) # shape=(70, 6)
output = relay.Tuple([call_5055,call_5061,uop_5067,])
output2 = relay.Tuple([call_5056,call_5063,uop_5067,])
func_5069 = relay.Function([var_5062,], output)
mod['func_5069'] = func_5069
mod = relay.transform.InferType()(mod)
mutated_mod['func_5069'] = func_5069
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5070 = relay.var("var_5070", dtype = "float64", shape = (70, 6))#candidate|5070|(70, 6)|var|float64
func_5069_call = mutated_mod.get_global_var('func_5069')
call_5071 = func_5069_call(var_5070)
output = call_5071
func_5072 = relay.Function([var_5070], output)
mutated_mod['func_5072'] = func_5072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_5094 = func_4667_call()
call_5095 = func_4667_call()
uop_5111 = relay.acosh(call_5094.astype('float32')) # shape=(10, 11, 16)
uop_5113 = relay.acosh(call_5095.astype('float32')) # shape=(10, 11, 16)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
const_5117 = relay.const([-5,3,-1,-9,-10,9,1,-4,10,1,5,-7,-6,7,10,-3,-1,8,7,-10,-6,-2,6,9,-7,-10,-8,9,8,1,-2,-3,-1,6,-10,4,5,4,3,-7,-4,3,6,5,-10,1,9,6,5,-7,-6,1,-8,-3,8,1,9,-3,-8,8,-7,7,-1,5,4,-10,-2,4,-6,10,8,-8,-7,-1,-3,10,-8,-5,1,8,1,-6,9,-4,-6,2,6,-3,5,8,5,-8,-9,5,-3,5,-8,-7,-2,5,5,-4,-9,6,10,-2,3,9,2,-2,-4,-7,10,3,-6,2,6,-2,2,9,-1,-7,2,6,8,7,7,-6,1,-8,8,6,-5,-8,-6,7,9,-6,9,-3,2,-1,-7,3,-8,2,-1,9,7,-1], dtype = "int16")#candidate|5117|(150,)|const|int16
call_5116 = relay.TupleGetItem(func_3837_call(relay.reshape(const_5117.astype('int16'), [10, 3, 5])), 2)
call_5118 = relay.TupleGetItem(func_3839_call(relay.reshape(const_5117.astype('int16'), [10, 3, 5])), 2)
const_5128 = relay.constdtype = "float32")#candidate|5128|(10, 11, 16)|const|float32
bop_5129 = relay.mod(uop_5111.astype('float32'), relay.reshape(const_5128.astype('float32'), relay.shape_of(uop_5111))) # shape=(10, 11, 16)
bop_5132 = relay.mod(uop_5113.astype('float32'), relay.reshape(const_5128.astype('float32'), relay.shape_of(uop_5113))) # shape=(10, 11, 16)
output = relay.Tuple([call_5116,const_5117,bop_5129,])
output2 = relay.Tuple([call_5118,const_5117,bop_5132,])
func_5148 = relay.Function([], output)
mod['func_5148'] = func_5148
mod = relay.transform.InferType()(mod)
output = func_5148()
func_5149 = relay.Function([], output)
mutated_mod['func_5149'] = func_5149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_5150 = func_4667_call()
call_5151 = func_4667_call()
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_5184 = func_4993_call()
call_5185 = func_4993_call()
output = relay.Tuple([call_5150,call_5184,])
output2 = relay.Tuple([call_5151,call_5185,])
func_5190 = relay.Function([], output)
mod['func_5190'] = func_5190
mod = relay.transform.InferType()(mod)
mutated_mod['func_5190'] = func_5190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5190_call = mutated_mod.get_global_var('func_5190')
call_5191 = func_5190_call()
output = call_5191
func_5192 = relay.Function([], output)
mutated_mod['func_5192'] = func_5192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5197 = relay.var("var_5197", dtype = "int32", shape = (16, 2, 7))#candidate|5197|(16, 2, 7)|var|int32
var_5198 = relay.var("var_5198", dtype = "int32", shape = (16, 2, 7))#candidate|5198|(16, 2, 7)|var|int32
bop_5199 = relay.bitwise_xor(var_5197.astype('int32'), relay.reshape(var_5198.astype('int32'), relay.shape_of(var_5197))) # shape=(16, 2, 7)
output = relay.Tuple([bop_5199,])
output2 = relay.Tuple([bop_5199,])
func_5203 = relay.Function([var_5197,var_5198,], output)
mod['func_5203'] = func_5203
mod = relay.transform.InferType()(mod)
var_5204 = relay.var("var_5204", dtype = "int32", shape = (16, 2, 7))#candidate|5204|(16, 2, 7)|var|int32
var_5205 = relay.var("var_5205", dtype = "int32", shape = (16, 2, 7))#candidate|5205|(16, 2, 7)|var|int32
output = func_5203(var_5204,var_5205,)
func_5206 = relay.Function([var_5204,var_5205,], output)
mutated_mod['func_5206'] = func_5206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_5234 = func_4667_call()
call_5235 = func_4667_call()
output = relay.Tuple([call_5234,])
output2 = relay.Tuple([call_5235,])
func_5240 = relay.Function([], output)
mod['func_5240'] = func_5240
mod = relay.transform.InferType()(mod)
mutated_mod['func_5240'] = func_5240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5240_call = mutated_mod.get_global_var('func_5240')
call_5241 = func_5240_call()
output = call_5241
func_5242 = relay.Function([], output)
mutated_mod['func_5242'] = func_5242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_5266 = func_4993_call()
call_5267 = func_4993_call()
output = relay.Tuple([call_5266,])
output2 = relay.Tuple([call_5267,])
func_5268 = relay.Function([], output)
mod['func_5268'] = func_5268
mod = relay.transform.InferType()(mod)
mutated_mod['func_5268'] = func_5268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5268_call = mutated_mod.get_global_var('func_5268')
call_5269 = func_5268_call()
output = call_5269
func_5270 = relay.Function([], output)
mutated_mod['func_5270'] = func_5270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_5296 = func_4667_call()
call_5297 = func_4667_call()
output = call_5296
output2 = call_5297
func_5305 = relay.Function([], output)
mod['func_5305'] = func_5305
mod = relay.transform.InferType()(mod)
output = func_5305()
func_5306 = relay.Function([], output)
mutated_mod['func_5306'] = func_5306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5190_call = mod.get_global_var('func_5190')
func_5192_call = mutated_mod.get_global_var('func_5192')
call_5343 = relay.TupleGetItem(func_5190_call(), 0)
call_5344 = relay.TupleGetItem(func_5192_call(), 0)
var_5350 = relay.var("var_5350", dtype = "float64", shape = (10, 11, 16))#candidate|5350|(10, 11, 16)|var|float64
bop_5351 = relay.bitwise_and(call_5343.astype('int8'), relay.reshape(var_5350.astype('int8'), relay.shape_of(call_5343))) # shape=(10, 11, 16)
bop_5354 = relay.bitwise_and(call_5344.astype('int8'), relay.reshape(var_5350.astype('int8'), relay.shape_of(call_5344))) # shape=(10, 11, 16)
func_5203_call = mod.get_global_var('func_5203')
func_5206_call = mutated_mod.get_global_var('func_5206')
var_5357 = relay.var("var_5357", dtype = "int32", shape = (224,))#candidate|5357|(224,)|var|int32
call_5356 = relay.TupleGetItem(func_5203_call(relay.reshape(var_5357.astype('int32'), [16, 2, 7]), relay.reshape(var_5357.astype('int32'), [16, 2, 7]), ), 0)
call_5358 = relay.TupleGetItem(func_5206_call(relay.reshape(var_5357.astype('int32'), [16, 2, 7]), relay.reshape(var_5357.astype('int32'), [16, 2, 7]), ), 0)
bop_5393 = relay.subtract(bop_5351.astype('uint64'), relay.reshape(call_5343.astype('uint64'), relay.shape_of(bop_5351))) # shape=(10, 11, 16)
bop_5396 = relay.subtract(bop_5354.astype('uint64'), relay.reshape(call_5344.astype('uint64'), relay.shape_of(bop_5354))) # shape=(10, 11, 16)
func_2689_call = mod.get_global_var('func_2689')
func_2692_call = mutated_mod.get_global_var('func_2692')
const_5401 = relay.const([2.050117,-8.686666,-5.732559,2.105574,0.950872,-0.106133,7.602470,-7.015726,-9.767356,9.207002,-7.154659,-9.490976,6.612799,-4.819915,-7.788400,-8.790845,-2.387854,-2.321269,0.117958,-3.483743,0.745575,7.161159,3.576248,1.865630,3.716856,-8.491450,-0.134256,4.747819,-8.556701,0.031310,-4.870277,-8.550851,-4.572674,1.454584,8.624733,-2.702841,-8.130575,2.118942,-7.135514,6.962876,-0.238133,2.769919,-4.462590,-6.654955,-1.003214,-5.488746,-0.780227,0.209655,3.379917,-1.000955,9.635690,1.423484,-7.020772,1.326255,2.601180,-1.132395,-4.740661,3.315156,-8.268842,-7.102478,7.571917,2.348919,6.984434,-3.528930,-0.917701,3.977949,-7.095341,7.368068,-3.153095,1.869097,-0.519563,9.877701,7.529598,2.583051,-5.718313,-6.357862,-5.170612,8.461152,-3.522175,5.743961,-2.317168,-1.463840,5.984658,-6.499074,-5.714096,-2.172256,8.481115,-9.640583,-7.404178,8.850015,7.549409,-5.695560,8.343793,5.349893,7.500302,-8.123750,-8.858477,-9.279258,5.444966,2.792822,-2.906885,-9.410332,2.807521,-6.415870,-5.577015,-2.665184,8.885192,-4.534957,6.065755,2.093247,-8.237937,-4.407637,-1.158638,-2.540307,3.088217,-2.502436,7.271687,-2.314780,9.463688,-0.378921,-7.202948,1.433565,2.258912,-2.854377,6.912027,-0.948938,-7.352028,-4.993511,9.788015,-6.314935,-9.694160,6.842528,1.422851,-8.987774,-7.451405,-6.567624,-5.851289,8.997889,9.650338,-8.368207,8.487627,-0.436160,1.083964,-6.708026,-0.199652,-4.798028,6.089107,-7.636329,4.298644,8.846582,-9.612685,-2.861902,3.482529,-9.704536,6.844680,-8.129757,0.404118,-1.936850,8.734005,-8.299581,1.318846,9.431102,-0.955823,8.342398,-6.016637,0.839877,1.008815,2.299684,6.415562,8.875706,-3.876406,0.548684,0.079826,4.045935,2.906830,-6.853329,-1.107629,8.593180,5.471309,-6.972680,-3.780172,-1.036984,1.811133,-6.535359,-2.974070,5.152758,0.609844,-5.721948,4.775067,-7.419038,4.349397,8.169419,-9.216479,-2.516421,-3.647372,5.293803,6.227096,-2.341866,-1.211469,0.099292,-0.863746,4.043338,-3.797517,-0.329413,2.326565,-0.885910,5.370342,-6.300142,-7.684512,-8.962649,4.327113,1.007249,0.467885,2.680339,9.294818,-8.902916,-6.853898,2.620877,-2.772838,-6.627127,-7.726862,-9.063128,-5.667750,6.949171,-1.128813,2.839297,-8.166437,-6.092701,-3.743852,0.401468,-1.896590,-3.625283,2.168997,3.702332,6.272263,-9.915689,-0.238064,-5.616342,6.283119,-6.754976,2.798949,-7.124324,-0.772274,6.234996,-9.254922,-6.144068,2.864780,9.122551,9.735204,-7.586693,-1.807475,-6.134344,5.129795,-1.591823,1.874074,-1.907390,-6.865656,-7.617488,0.408948,-8.914625,-0.376023,5.938922,1.690272,-8.820231,5.050271,4.580683,3.528117,2.938706,-2.376279,-6.003022,-5.391041,-4.905529,4.800637,6.883133,4.951956,-7.495948,3.484723,1.185200,0.833672,3.838023,-1.720639,-2.187148,-6.227071,-3.898544,6.025844,-5.306080,-4.008944,1.735481,9.908537,-0.716947,-0.068525,-8.582543,-1.630163,-3.327288,-4.991745,5.072997,-3.970063,-9.000130,8.349989,-2.182037,8.218714,-6.626488,2.706519,8.641623,-0.386719,7.937629,8.940527,-5.887620,1.941966,7.055878,-7.993604,-6.924964,-5.778737,-4.423001,-1.173637,8.779100,5.785618,3.203272,9.334637,-9.406125,-1.598438,-1.035052,1.094029,-2.124443,1.305066,-7.556048,-3.633391,-9.985090,-3.563908,-6.280269,2.695828,-6.087321,1.277833,-5.553403,7.143712,-7.508721,-3.917575,5.177137,-7.323937,2.628249,0.643595,4.342812,-5.563169,-4.806909,-4.479710,5.518012,-6.190765,0.025889,9.807392,-7.188428,-4.906551,0.199657,3.119695,-9.830119,-7.509322,0.851530,-9.216485,4.678835,5.803256,8.344041,-6.728899,0.969565,-7.948143,-8.475962,-4.232902,-4.137412,3.234688,-6.742099,-7.833667,-4.682507,-8.690410,-8.605887,9.378862,1.921479,-4.037713,-2.433483,-9.554844,6.147224,-9.142374,-2.134326,2.010394,8.431744,-5.967029,9.422440,9.276330,8.588608,-7.069089,-0.967838,4.192909,-5.523927,-2.428197,-8.293003,-2.076227,4.890243,4.624431,-9.975976,9.145495,-8.042297,6.346611,-3.147323,9.814243,-9.787208,-4.886495,8.933072,-8.027552,6.012692,0.030666,6.611290,6.250292,-5.982444,3.639090,1.582948,9.478561,-6.081787,-9.741052,0.860093,1.322995,1.035008,-8.664550,2.804921,-8.789056,0.530449,1.735588,2.139108,1.747177,2.311195,-0.798001,2.149015,-7.845270,-5.163848,5.534233,8.633176,2.586545,-2.588368,3.641873,4.331850,-5.964120,2.265280,8.217241,-1.337158,7.024852,5.797129,6.516328,0.315100,3.298733,-2.139403,3.198395,2.405421,-0.321781,-6.517011,5.169296,5.362757,-5.481221,0.549225,5.689999,-9.810188,-8.240060,9.448345,6.142844,3.315777,-6.624623,4.750875,9.372530,8.942412,-8.121845,-1.597311,5.488046,0.933363,-6.370893,0.362311,-8.684582,-4.227958,-8.374876,-6.177264,-9.295230,-1.003887,6.895452,-8.748155,-6.426933,-7.555480,0.873850,-4.286868,-7.062048,-8.823618,5.097175,9.684408,-7.271372,-4.999485,4.456492,-7.564378,-3.472672,-4.701982,-7.562612,2.713191,-9.973252,2.122145,-3.157823,-8.630923,9.050728,8.283317,8.979345,-4.848036,5.307889,-9.831147,-0.928924,-0.616250,3.721945,-4.911815,-3.227451,-6.617385,-4.733075,-5.486448,9.978733,7.654499,-7.620141,7.531043,6.768998,6.078444,-4.715510,1.453185,-7.120186,-5.844676,8.857221,9.865945,-5.976791,-9.785571,0.093518,1.689825,-0.728146,1.047348,1.413244,-1.870542,-0.708969,4.675626,5.876064,7.802889,7.998275,7.570977,5.596798,-9.523547,-7.943254,-7.206439,3.180180,-4.979156,-1.124111,-2.317214,9.366196,3.176917,-3.588689,-3.201573,8.787512,6.897412,7.020664,8.496910,8.071805,-0.752916,6.224807,8.994287,-6.729484,-7.800881,3.705150,8.968751,3.594948,3.716793,5.889642,1.885665,5.227099,6.447729,5.628139,5.602526,-4.204542,-1.779157,-0.745400,6.345810,2.465242,-6.274816,-4.303912,9.414614,-5.571774,-2.245217,4.559290,-5.889488,-5.391883,6.330576,4.624297,1.428328,7.192900,2.883938,2.592401,-6.962733,-4.324973,-8.702527,-4.531587,-7.127106,-2.134353,1.558940,-7.896334,-7.959755,2.597598,-4.673229,0.097276,4.218740,0.240774,-3.044643,9.319548,9.286043,2.743350,-1.711012,-6.917164,-9.209214,8.536680,-9.388942,-0.717352,0.093651,-6.001186,-8.957290,1.813849,-2.294409,-6.100374,1.147715,-2.501923,6.304851,-3.989263,8.195150,-8.381332,3.481562,6.910380,0.256182,7.976678,-7.695014,-1.292016,1.870492,-3.336728,-3.624550,-2.562450,-1.232416,-7.538676,7.101146,9.638605,3.968778,-0.303928,-3.130774,-7.970185,1.823036,-0.615592,-3.382139,-0.839778,-1.086892,1.850563,7.943721,-3.929285,-4.962047,2.468530,-5.058236,7.692209,-3.759064,-1.558100,4.964913,-4.839232,-8.095399,-2.532416,6.673962,-1.800203,5.834773,-0.529215,-4.159659,-0.199509,-7.370768,-8.658374,9.230145,-7.871865,8.632073,-1.782458,-9.939311,-4.977915,1.842564,7.885310,0.835398,-6.385505,6.348760,-2.103506,3.532590,1.294839,-7.531025,-1.923959,9.234948,-1.572987,-8.134636,5.606529,1.933898,4.610058,2.458421,-9.701411,5.798415,9.633773,3.014517,-9.713686,6.704975,-3.859394,3.288563,5.379797,-1.263905,4.956109,-6.058689,4.322792,-0.782058,-3.403647,9.040109,0.427722,5.545157,6.314290,-2.758792,3.112162,1.440913,7.653877,5.757142,9.083313,-0.651669,-7.034379,-5.425756,4.772648,-5.949518,-4.613791,-0.237077,-4.529586,-2.710890,-3.622841,6.347752,-7.670969,-6.275115,5.968630,-7.477962,8.582085,-5.341892,7.829774,7.832413,0.607188,-8.302328,4.514165,0.767189,-8.164700,5.204341,-1.587615,7.261506,-5.536769,4.181916,4.192126,-3.688491,-4.343405,-2.991035,1.571177,-4.408342,6.507717,-0.249485,6.498951,5.987935,-1.721745,2.074611,3.091945,3.712172,-1.655027,-2.334772,8.958745,-4.522047,8.938121,5.107917,-2.774631,3.712611,0.848581,-1.651884,-0.022012,-1.631588,-6.141025,5.147993,-0.611786,0.890566,5.262562,-0.677486,1.149263,4.975673,5.852365,3.422672,-9.272242,-7.281548], dtype = "float64")#candidate|5401|(784,)|const|float64
call_5400 = func_2689_call(relay.reshape(const_5401.astype('float64'), [4, 14, 14]))
call_5402 = func_2689_call(relay.reshape(const_5401.astype('float64'), [4, 14, 14]))
output = relay.Tuple([call_5356,var_5357,bop_5393,call_5400,const_5401,])
output2 = relay.Tuple([call_5358,var_5357,bop_5396,call_5402,const_5401,])
func_5405 = relay.Function([var_5350,var_5357,], output)
mod['func_5405'] = func_5405
mod = relay.transform.InferType()(mod)
mutated_mod['func_5405'] = func_5405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5405_call = mutated_mod.get_global_var('func_5405')
var_5407 = relay.var("var_5407", dtype = "float64", shape = (10, 11, 16))#candidate|5407|(10, 11, 16)|var|float64
var_5408 = relay.var("var_5408", dtype = "int32", shape = (224,))#candidate|5408|(224,)|var|int32
call_5406 = func_5405_call(var_5407,var_5408,)
output = call_5406
func_5409 = relay.Function([var_5407,var_5408,], output)
mutated_mod['func_5409'] = func_5409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5305_call = mod.get_global_var('func_5305')
func_5306_call = mutated_mod.get_global_var('func_5306')
call_5564 = func_5305_call()
call_5565 = func_5305_call()
func_5240_call = mod.get_global_var('func_5240')
func_5242_call = mutated_mod.get_global_var('func_5242')
call_5570 = relay.TupleGetItem(func_5240_call(), 0)
call_5571 = relay.TupleGetItem(func_5242_call(), 0)
func_5203_call = mod.get_global_var('func_5203')
func_5206_call = mutated_mod.get_global_var('func_5206')
const_5578 = relay.const([5,-9,4,7,-5,2,5,6,8,9,-10,4,-6,4,-7,8,-4,4,-2,-3,-2,-6,-6,-10,-6,10,7,-6,8,6,4,9,8,3,4,8,-2,-4,-7,-5,-3,-7,-9,-7,10,6,7,3,1,-7,3,-1,-10,-5,9,-7,5,5,6,4,-5,-1,6,-6,-1,1,8,1,9,4,6,-2,-7,6,1,1,-8,6,8,10,7,-3,5,5,-10,4,2,6,5,3,1,1,6,-5,1,4,-9,3,3,-10,6,-10,1,8,-9,3,-4,-3,-2,-7,-6,-9,9,10,1,-8,5,-5,-5,4,3,8,-2,10,-9,-6,-9,9,8,-2,9,-6,-10,-1,-4,-1,-2,6,7,-7,4,-1,-8,-3,-10,-3,-4,3,10,9,1,-2,-6,-7,6,-9,-7,5,1,-2,-2,-1,-4,10,-10,-9,-10,4,-9,1,4,8,-10,-7,-9,-3,-3,-7,9,-2,-8,-10,10,-4,-4,6,5,-9,7,8,-2,6,7,2,-3,-7,-5,-1,2,6,10,-3,-6,-2,8,-8,4,6,9,7,2,7,2,4,3,9,-2,2,7,-2,5,5,-7,-1], dtype = "int32")#candidate|5578|(224,)|const|int32
call_5577 = relay.TupleGetItem(func_5203_call(relay.reshape(const_5578.astype('int32'), [16, 2, 7]), relay.reshape(const_5578.astype('int32'), [16, 2, 7]), ), 0)
call_5579 = relay.TupleGetItem(func_5206_call(relay.reshape(const_5578.astype('int32'), [16, 2, 7]), relay.reshape(const_5578.astype('int32'), [16, 2, 7]), ), 0)
output = relay.Tuple([call_5564,call_5570,call_5577,const_5578,])
output2 = relay.Tuple([call_5565,call_5571,call_5579,const_5578,])
func_5581 = relay.Function([], output)
mod['func_5581'] = func_5581
mod = relay.transform.InferType()(mod)
output = func_5581()
func_5582 = relay.Function([], output)
mutated_mod['func_5582'] = func_5582
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5618 = relay.const([[[-4.286810,-1.221429,5.457291,9.821384,1.863264,-9.463390,4.445537,-1.940545,-0.470309],[-4.928964,-7.915615,-0.491530,2.833481,-4.601542,0.436081,-4.559131,5.938333,0.239161]],[[-6.876209,-0.546620,-7.038748,-3.006122,-7.252743,-9.770616,1.902588,4.975428,9.892738],[-5.478126,-8.297361,-1.902903,-2.615009,6.273548,2.983366,-3.763008,-8.330431,0.103927]],[[5.570827,-7.957520,-9.236455,-7.419605,-9.165917,-8.322359,9.704051,-0.468139,1.941786],[5.836134,9.168065,9.170014,-9.354199,-7.736709,-2.244757,3.630292,2.567963,1.605938]],[[-7.662547,2.693033,7.192126,8.037101,-8.954844,-9.491011,-6.321038,0.699229,1.000959],[-9.801537,-5.447792,-8.782800,-6.751024,-0.417161,5.093482,-9.005107,5.563342,-8.925134]],[[0.087226,-8.564799,3.224779,8.954318,-2.152533,-1.798234,-1.810104,1.545185,6.623335],[0.486053,9.688248,-3.371162,-6.198189,8.079190,-5.279273,-8.676858,2.098809,-0.184341]],[[-8.613898,-8.466199,-8.958710,-4.478769,3.563533,-1.733534,8.510980,-1.227453,9.126568],[5.949404,0.072415,-8.784346,2.525178,6.960990,0.710184,1.643867,-1.780971,-5.693561]],[[-9.869879,2.474046,7.178001,9.672396,9.038261,5.524855,-3.945985,-7.371648,8.383449],[1.154571,-6.402793,6.069643,-3.726111,5.075230,-7.625556,-0.358496,-8.069473,-7.823591]],[[7.110800,-7.398770,-1.780633,1.745351,-8.614138,-6.461523,-2.399584,-6.709412,8.115497],[-9.890242,4.494677,-5.363155,-5.378550,-5.813851,-5.053428,-8.429683,-9.271700,-1.120633]],[[-9.821754,5.250817,-9.655695,0.206419,-8.051743,5.263308,2.697288,8.360681,5.858977],[8.313027,-9.907270,-1.021533,-5.934289,-3.333791,7.835848,0.144571,6.058850,-8.052742]],[[6.519772,-9.092141,-8.808937,4.152021,-7.217257,-2.681768,-8.764560,7.164021,0.579807],[4.257866,-8.038922,0.440934,-3.681267,6.861124,8.139101,7.571995,7.430413,-9.562803]],[[1.573946,-5.141184,1.111988,2.899688,-4.912922,-2.350290,-8.179802,4.535259,-4.970383],[-3.531928,-1.768586,-9.964761,-7.346727,-8.809394,2.265566,5.540987,-0.897780,-5.123762]],[[-6.735402,1.297008,-8.422687,-7.598751,3.082256,1.417599,-6.305893,-3.524833,-8.414903],[4.854977,7.206269,-1.420819,-2.492618,1.977860,4.807061,-3.564802,-5.597005,-0.858219]]], dtype = "float32")#candidate|5618|(12, 2, 9)|const|float32
var_5619 = relay.var("var_5619", dtype = "float32", shape = (12, 2, 9))#candidate|5619|(12, 2, 9)|var|float32
bop_5620 = relay.floor_mod(const_5618.astype('float32'), relay.reshape(var_5619.astype('float32'), relay.shape_of(const_5618))) # shape=(12, 2, 9)
func_5069_call = mod.get_global_var('func_5069')
func_5072_call = mutated_mod.get_global_var('func_5072')
var_5629 = relay.var("var_5629", dtype = "float64", shape = (10, 42))#candidate|5629|(10, 42)|var|float64
call_5628 = relay.TupleGetItem(func_5069_call(relay.reshape(var_5629.astype('float64'), [70, 6])), 2)
call_5630 = relay.TupleGetItem(func_5072_call(relay.reshape(var_5629.astype('float64'), [70, 6])), 2)
output = relay.Tuple([bop_5620,call_5628,var_5629,])
output2 = relay.Tuple([bop_5620,call_5630,var_5629,])
func_5641 = relay.Function([var_5619,var_5629,], output)
mod['func_5641'] = func_5641
mod = relay.transform.InferType()(mod)
mutated_mod['func_5641'] = func_5641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5641_call = mutated_mod.get_global_var('func_5641')
var_5643 = relay.var("var_5643", dtype = "float32", shape = (12, 2, 9))#candidate|5643|(12, 2, 9)|var|float32
var_5644 = relay.var("var_5644", dtype = "float64", shape = (10, 42))#candidate|5644|(10, 42)|var|float64
call_5642 = func_5641_call(var_5643,var_5644,)
output = call_5642
func_5645 = relay.Function([var_5643,var_5644,], output)
mutated_mod['func_5645'] = func_5645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_5706 = func_4993_call()
call_5707 = func_4993_call()
uop_5717 = relay.log(call_5706.astype('float32')) # shape=(10, 11, 16)
uop_5719 = relay.log(call_5707.astype('float32')) # shape=(10, 11, 16)
output = relay.Tuple([uop_5717,])
output2 = relay.Tuple([uop_5719,])
func_5742 = relay.Function([], output)
mod['func_5742'] = func_5742
mod = relay.transform.InferType()(mod)
output = func_5742()
func_5743 = relay.Function([], output)
mutated_mod['func_5743'] = func_5743
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5744 = relay.var("var_5744", dtype = "float64", shape = (12, 13, 15))#candidate|5744|(12, 13, 15)|var|float64
uop_5745 = relay.rsqrt(var_5744.astype('float64')) # shape=(12, 13, 15)
output = uop_5745
output2 = uop_5745
func_5752 = relay.Function([var_5744,], output)
mod['func_5752'] = func_5752
mod = relay.transform.InferType()(mod)
var_5753 = relay.var("var_5753", dtype = "float64", shape = (12, 13, 15))#candidate|5753|(12, 13, 15)|var|float64
output = func_5752(var_5753)
func_5754 = relay.Function([var_5753], output)
mutated_mod['func_5754'] = func_5754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5190_call = mod.get_global_var('func_5190')
func_5192_call = mutated_mod.get_global_var('func_5192')
call_5763 = relay.TupleGetItem(func_5190_call(), 0)
call_5764 = relay.TupleGetItem(func_5192_call(), 0)
func_3724_call = mod.get_global_var('func_3724')
func_3726_call = mutated_mod.get_global_var('func_3726')
var_5772 = relay.var("var_5772", dtype = "uint64", shape = (2400,))#candidate|5772|(2400,)|var|uint64
call_5771 = relay.TupleGetItem(func_3724_call(relay.reshape(var_5772.astype('uint64'), [10, 16, 15])), 0)
call_5773 = relay.TupleGetItem(func_3726_call(relay.reshape(var_5772.astype('uint64'), [10, 16, 15])), 0)
output = relay.Tuple([call_5763,call_5771,var_5772,])
output2 = relay.Tuple([call_5764,call_5773,var_5772,])
func_5776 = relay.Function([var_5772,], output)
mod['func_5776'] = func_5776
mod = relay.transform.InferType()(mod)
var_5777 = relay.var("var_5777", dtype = "uint64", shape = (2400,))#candidate|5777|(2400,)|var|uint64
output = func_5776(var_5777)
func_5778 = relay.Function([var_5777], output)
mutated_mod['func_5778'] = func_5778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_5811 = relay.TupleGetItem(func_4380_call(), 0)
call_5812 = relay.TupleGetItem(func_4382_call(), 0)
output = call_5811
output2 = call_5812
func_5827 = relay.Function([], output)
mod['func_5827'] = func_5827
mod = relay.transform.InferType()(mod)
mutated_mod['func_5827'] = func_5827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5827_call = mutated_mod.get_global_var('func_5827')
call_5828 = func_5827_call()
output = call_5828
func_5829 = relay.Function([], output)
mutated_mod['func_5829'] = func_5829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5268_call = mod.get_global_var('func_5268')
func_5270_call = mutated_mod.get_global_var('func_5270')
call_5830 = relay.TupleGetItem(func_5268_call(), 0)
call_5831 = relay.TupleGetItem(func_5270_call(), 0)
output = relay.Tuple([call_5830,])
output2 = relay.Tuple([call_5831,])
func_5844 = relay.Function([], output)
mod['func_5844'] = func_5844
mod = relay.transform.InferType()(mod)
output = func_5844()
func_5845 = relay.Function([], output)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5844_call = mod.get_global_var('func_5844')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_5876 = relay.TupleGetItem(func_5844_call(), 0)
call_5877 = relay.TupleGetItem(func_5845_call(), 0)
const_5890 = relay.const([[[-5.158925,-1.960465,-8.431845,0.193867,-1.565247,5.015373,4.085986,8.440749,-8.529418,-7.482194,-3.033227,-3.228626,1.153370,-6.700760,3.040683,0.553099],[4.578614,7.846923,-6.193676,-4.801857,-3.281561,3.721639,0.216817,-4.992876,-5.934596,3.162803,9.006250,-0.491596,-5.854695,8.587003,-7.112388,3.800034],[-7.671068,8.511309,-5.932873,0.873540,0.817550,-3.152357,9.966065,-9.693871,-6.602380,1.826351,-5.738582,-2.447368,-9.148415,-3.108581,-3.039231,-4.871695],[-3.141672,8.311867,5.598464,2.848198,-5.758824,1.120476,5.099511,1.161469,-9.228788,6.536294,-0.531519,5.908012,6.739493,6.940355,9.769752,-1.879127],[8.803630,-4.447999,-5.239519,1.284765,-8.541748,-9.822180,8.899119,7.182202,-5.136760,-6.060280,-9.530658,2.031342,0.628741,8.968939,-4.084280,1.297111],[7.059180,-6.611275,7.238145,-1.633493,5.247389,3.727918,-3.661971,-7.570035,1.070302,0.902607,-0.287446,7.270584,5.437955,-6.251159,-0.159473,9.579182],[-1.420241,6.841127,-0.549516,9.492499,4.081456,-2.803185,4.397169,-1.376562,9.999269,-7.654130,4.851328,0.964810,-6.916551,-6.915484,3.747471,-0.285848],[-9.696267,-7.009391,-9.615223,-4.434440,-0.381856,0.214058,3.919651,3.748154,-7.421798,-5.330968,0.808745,-0.868719,5.623630,4.105440,1.590274,-5.756397],[8.145461,-3.173861,-5.278382,6.622672,8.402513,-4.924392,7.429767,5.937195,0.018225,4.417875,8.375793,-9.344378,-9.433293,-9.557901,-9.895377,2.778738],[6.514857,2.706946,-2.464883,-3.077464,0.934329,-5.076055,-2.224800,-3.027678,6.199781,4.543912,-7.896429,-1.975864,6.609173,-1.537065,0.919889,4.985161],[7.913544,8.192550,-9.595334,8.727942,-8.548363,-9.908273,0.390983,8.810657,-6.303150,0.527652,-4.814300,0.046183,-1.297763,0.620378,-1.469240,-0.354387]],[[1.035683,6.625364,-1.432778,-4.659441,8.785870,5.130637,8.076230,3.480761,9.120439,-9.313967,-1.339079,8.836674,3.704761,0.496492,-2.573264,8.182895],[0.177657,3.295307,3.711646,-9.508943,-6.452398,6.702091,-0.886472,6.566693,-6.235041,-9.660729,0.420971,9.039237,-2.153992,-5.199120,0.549647,2.703278],[4.541744,-2.303686,-5.948626,8.413909,-4.412092,-5.913244,9.773072,5.956278,-2.967254,2.888296,5.202701,-7.167523,4.127803,-1.744408,9.736385,1.697344],[-9.695703,1.991517,-5.286923,9.580984,-1.473306,-1.067100,6.811612,8.123183,7.809782,-7.184629,0.029267,-9.576681,5.982969,7.166050,-0.388859,4.492359],[-2.141377,9.880688,3.486585,-1.377511,9.529354,-0.790591,-1.016154,-3.921408,-9.408809,-3.122232,4.029108,-2.585991,-5.976470,6.357922,-2.147198,7.558223],[-4.610111,6.293163,-3.563630,3.114792,-5.470653,-8.543394,2.853752,-1.642269,9.003484,1.792688,-8.374551,-1.529063,-8.727674,5.372432,-9.595541,8.237324],[-9.344645,5.730602,-7.878980,-6.058595,-6.730385,7.761130,5.587765,3.391887,6.670069,3.954808,-9.563979,-8.886104,-5.644184,4.107306,-2.361925,1.896449],[3.142875,4.017134,7.185389,8.084425,9.593253,2.980617,-7.547875,8.421125,8.154618,6.696196,-0.093752,-1.769365,-2.162456,-4.982698,9.563106,8.589204],[-7.445039,-9.044363,-8.892252,0.021815,3.836967,-4.472268,6.765909,4.468626,-7.939456,-7.389029,-1.348593,0.411975,-2.343694,3.823211,1.493795,-9.814900],[-1.046504,0.348946,-3.054012,-3.482847,2.428799,-1.460918,-1.682664,-1.220075,-2.583601,-5.897537,8.843935,0.420210,2.000711,1.673712,8.208307,-6.593698],[9.856537,-8.180785,-7.359560,5.783795,9.169035,-0.331643,0.920961,3.218391,5.497636,-2.831609,9.195121,-6.632781,-7.516008,-8.929334,5.000850,6.725009]],[[-9.777401,0.602011,-7.290369,3.146911,-2.910928,-2.464044,-9.867642,4.955864,0.417481,-7.936357,-9.919588,5.071852,8.868526,-2.250513,-1.148063,1.186882],[-6.583280,1.813950,4.243439,-9.435210,-3.786715,0.246603,-2.093147,-1.590609,-1.906253,7.171644,6.651986,6.608013,-4.692612,8.940902,-7.235611,5.703263],[1.261051,9.130943,0.207545,-4.327666,-8.272494,-0.571857,1.449867,-1.345014,-6.321006,-1.224248,-1.240319,-0.795079,6.819650,6.134372,-7.599044,-8.949598],[7.178412,-9.805255,-7.518662,-0.592921,-6.973647,3.527895,3.439836,7.810187,3.907432,6.613327,6.973404,-3.845824,-0.142904,-2.939787,1.441255,-1.897670],[4.994093,1.103331,-1.528787,-7.420342,6.331235,-8.879935,-2.128471,-6.025966,4.987614,0.432087,9.177843,0.862915,-7.244071,-8.823017,4.533839,-8.657757],[5.650076,-5.663479,-5.353376,-7.478900,-8.334755,-4.429685,-3.062331,2.151819,2.672647,-0.590902,-0.595383,-0.231503,-3.667117,-7.719216,9.616895,-6.425047],[0.088829,-8.353199,9.869338,0.758478,2.357452,-4.882416,-7.786823,8.520026,4.344569,-4.081020,-7.373801,-1.996341,2.413813,-5.327395,3.305632,5.842788],[6.429048,-6.337866,-9.635642,-5.089156,-6.449633,7.136313,-7.202967,-4.201827,-2.407127,-4.111901,1.088602,1.377780,9.891413,1.043189,-2.523955,6.503760],[4.207291,6.933724,4.596032,3.374946,-4.001850,-8.981809,-4.759599,-7.828888,6.324878,8.166229,3.136670,6.872029,-3.535955,-8.658601,5.423835,-0.348331],[1.370896,-7.936885,6.197185,-1.900859,-2.359675,3.365489,3.484556,-3.480203,-4.664540,1.717731,-7.811428,-7.034176,-1.418242,-4.440510,7.296659,-4.890355],[-1.824608,8.765349,-8.354213,4.866946,5.439673,4.959099,5.112745,0.711144,3.054807,6.928162,-8.982374,-5.497469,-3.466291,-4.382621,2.476672,4.461454]],[[-2.748798,-2.640788,-3.507084,9.664926,-0.627141,7.703636,-2.162464,7.874254,1.066793,-3.178120,-7.688574,-6.166435,3.092209,-4.044256,9.545709,-8.165556],[1.068463,9.595253,-1.130492,7.772670,9.266367,-0.572080,4.732213,-4.191800,4.650751,-1.905357,6.183627,-3.728521,-0.837189,-4.811500,-1.163866,3.513908],[5.058585,-8.452861,0.661199,-3.154011,-1.041379,1.752169,-3.904416,-9.478220,-6.240462,2.333458,-4.700796,-1.784000,1.212487,-0.897367,1.571457,0.135033],[-3.920716,-8.810483,9.513545,3.263512,-7.389195,7.694837,-7.371032,-1.266944,2.942680,-1.861038,0.275160,-8.470424,0.764082,1.878003,-3.799223,4.017461],[-0.626982,-5.741779,-5.888611,7.625732,-6.703307,4.730160,-9.647965,9.611254,-7.922538,7.237617,-5.208622,-7.658522,3.923445,-1.233889,-0.761338,-6.179838],[-3.198302,-0.227024,-7.817806,4.281271,-4.169723,0.395172,-7.279168,-8.264456,0.938191,-7.559309,6.935637,6.361289,-5.170214,-2.685272,-1.072225,0.396620],[-9.553926,0.866491,2.423284,7.719745,-0.007388,9.580380,-9.959040,3.552010,2.451533,5.215346,-1.685012,5.936885,4.683765,6.273737,0.765246,-2.895555],[-5.064675,-9.110926,-5.324047,2.049131,5.164007,3.468902,0.408885,5.657148,-3.175325,5.539687,4.947200,-8.450360,5.123016,-7.005570,-2.451751,-6.896136],[4.169245,4.617738,-0.128084,-6.758339,7.615540,9.300810,-6.851340,4.917265,-0.160721,9.866303,-0.488194,-4.714952,9.591425,-3.439336,1.153125,-8.821138],[6.247033,-0.054303,-4.209151,9.421999,-4.910576,-4.627714,6.479572,0.539539,9.387048,-1.114663,-0.410300,4.034311,6.334051,-0.343738,-6.931886,2.964381],[-2.503974,0.482324,-4.155456,-7.851104,-8.983305,3.484658,-7.288125,3.375954,1.690364,9.989312,-7.792553,5.895905,-4.346362,-7.262150,-4.300668,4.853365]],[[2.022196,-5.629996,8.694266,-2.117725,3.611239,-0.232430,-9.160994,2.964228,0.237087,-7.136074,5.054268,0.590151,6.331317,-7.098401,-5.066521,-6.096278],[9.714248,2.334270,0.197807,-9.526660,-7.151236,-8.871362,-9.824165,-4.662728,2.383472,0.370092,0.335868,-9.365761,-6.049638,-4.909847,-4.512807,-9.042894],[3.187813,5.836147,2.360439,-5.384761,-8.446107,-9.290777,-0.523900,-7.257537,0.786666,6.323323,-6.817068,4.537508,-3.635383,0.424871,-1.742179,-0.387249],[-0.069740,-8.614651,9.525845,4.995506,-0.795449,-6.888064,-0.815490,-9.151664,-7.822953,-3.302643,4.518977,8.592240,-5.368448,9.783186,-2.407851,-6.049981],[7.936979,-5.207925,0.524789,-4.017714,-6.350977,1.987212,9.779121,-0.697159,7.180491,-4.006776,7.237427,-9.000488,8.361751,-3.032162,-5.598606,-8.144229],[-0.637912,-6.849963,-3.030223,8.197346,-4.971345,7.500862,-7.878144,9.865567,0.794641,-9.741081,-8.508853,-0.276594,-6.916209,3.080161,1.539182,-3.380696],[0.186810,-4.852136,6.839484,-3.576565,-2.728754,6.885990,8.438755,-6.788483,7.918845,1.893524,0.919801,1.767499,1.849386,-4.766944,-8.486746,-8.066380],[-1.213093,0.960861,-2.645023,4.327040,2.003280,9.718363,0.422859,6.515012,-0.085596,-1.652797,-3.560089,-3.753996,7.180050,6.913801,7.844577,3.996429],[-3.771245,-4.920444,-9.669675,9.338567,-0.685146,-4.775866,-2.321626,-7.001766,3.653899,-8.273704,-4.635370,8.064779,-9.693823,2.505395,-8.872851,8.988283],[7.051245,0.918436,8.332581,-7.777527,1.353514,5.864593,-0.188841,-5.216842,1.274799,-3.850397,5.518202,9.310570,-8.967462,-9.752479,6.972634,8.768324],[5.956554,-8.499385,3.584454,-4.785151,7.345768,-3.815780,-5.645081,5.640730,7.418270,1.295107,8.162173,-3.090516,-3.586992,-6.662971,-1.797913,-9.579330]],[[-1.403072,-6.151450,9.033743,-7.983948,8.016107,7.958352,-9.527861,0.950578,-8.271786,-2.444458,2.946746,3.959673,6.984070,1.605091,1.274172,2.332955],[-1.589240,9.352320,7.884534,-6.881193,-8.282304,-3.896279,1.951920,-4.868918,-0.297900,0.153963,-0.638006,7.608078,7.991536,3.071753,7.693653,-9.911925],[1.407793,6.248465,-0.185420,2.379871,7.748692,5.440854,1.924710,-7.453705,-4.405503,5.166601,-5.308300,3.971749,0.427013,-1.711582,5.411970,-8.194419],[-9.958686,1.086212,3.929273,5.092487,-0.289006,1.217741,6.639706,-6.532151,-0.557608,-4.697296,-6.703123,-4.632809,-2.077265,-1.115362,7.963452,-7.250963],[7.945381,-0.662164,-8.092304,5.157661,-9.294989,-0.074209,8.133578,-3.118676,-2.013474,-4.668675,-3.059565,-5.936864,-5.221065,-5.902619,7.223338,5.401034],[9.754995,-0.809811,-7.294714,-7.619084,-8.987214,-0.107333,2.266112,6.632382,5.393599,4.470290,-2.364292,-5.505868,-3.325556,2.532052,-1.013732,-3.037915],[-9.565446,7.290716,5.204567,-8.206956,3.156593,6.398237,8.727331,-2.439953,-5.264410,-4.086896,-0.009407,3.474540,8.869187,-5.683518,-1.891657,1.505875],[8.953410,3.975022,4.787693,8.346474,-6.588595,7.329194,9.158438,-5.314797,6.414436,6.041880,4.093304,7.010004,5.632533,-6.299043,-0.174337,-1.825854],[2.459151,-3.387463,6.119886,4.959565,-2.605570,6.793415,-4.600247,-0.867628,-6.139566,0.452963,-0.118368,7.230625,2.962625,3.781661,4.227176,7.679134],[6.551152,9.270586,8.911065,-6.229795,-7.369037,-7.815431,3.002463,-3.548442,-0.530465,-6.295884,-4.950336,-3.025423,5.711549,-6.239056,6.719395,5.942596],[4.589786,-9.103288,5.631860,6.658924,-0.969097,9.382424,-4.608580,-6.303063,2.641483,2.657820,-3.490952,0.852655,-9.228822,-5.840821,-7.984342,-6.019100]],[[7.359312,-4.341245,-2.948515,-2.154100,6.265682,-7.554806,4.281644,-1.697216,1.407992,4.953430,8.324192,-6.446607,-8.779885,-8.637892,-7.897186,-2.097097],[0.311312,0.394926,-2.729262,-6.247074,7.949084,2.840895,8.219874,7.597170,-0.792021,-2.391638,-0.232155,8.616013,-5.183327,1.645966,-1.678392,-0.603885],[-0.360504,0.031378,5.839809,4.363150,3.846091,2.614035,-8.825094,3.718532,1.420241,7.185345,-5.102584,-8.672532,-9.542783,-0.187163,-7.231331,-7.399900],[-7.520813,0.272478,9.954355,-5.892107,-1.937643,-3.188626,-8.578285,1.993322,4.923079,7.313554,1.523628,-8.162949,3.362739,-3.134385,2.472755,0.820437],[6.908280,9.561852,7.625509,1.797244,-3.888181,-9.979894,3.583599,-3.784261,-9.937612,0.316963,-0.547419,0.305672,-0.331384,8.394882,-4.766485,8.940088],[0.893478,4.656265,-8.177625,-0.915704,-3.530717,6.670494,-8.948544,-1.031767,-1.150661,-9.267167,-1.723583,-6.317679,-4.266661,-9.882826,-6.790812,-6.694478],[9.001526,-9.812558,-6.546154,-3.544987,-8.964560,-2.556538,6.075999,4.837388,-7.966388,-5.811149,-8.688331,1.036518,-8.358487,6.301774,5.135017,4.579528],[3.913485,-8.412981,-7.277554,-6.882026,6.267744,-5.051317,-1.499915,-2.053327,8.120901,8.794279,6.818418,-0.844722,-7.362348,9.410020,0.281346,-7.221409],[-5.726753,-8.722905,2.145358,6.862958,-4.597930,-1.956601,-6.430928,1.814484,8.775742,6.823804,-9.048186,4.225826,7.000818,-2.456837,0.206223,-6.295615],[-9.928066,-7.078610,6.345507,-5.387767,7.659604,-8.557100,2.147487,-8.898096,-1.280204,3.026102,3.779915,-3.734713,4.790977,-8.717271,3.191282,2.760471],[9.139297,-2.810735,2.462495,-5.960144,3.421955,-2.583801,6.509427,7.370587,-3.903449,-0.547695,9.206452,0.829584,0.059589,4.240458,-0.339437,-9.376355]],[[5.566198,-7.351768,2.099981,7.170059,-9.937714,6.592238,-5.851743,7.378688,-6.640023,3.070551,-9.892057,-1.109837,-4.944496,7.774559,-6.635974,-8.681625],[-3.476587,6.852827,-8.381211,-8.698436,-4.019500,-5.114361,-9.957384,-5.300846,8.223126,5.879852,-3.325112,5.087063,4.719633,7.962334,9.668965,1.565955],[-3.411435,0.860885,-0.820860,2.603493,-2.421066,7.631185,-0.298599,0.097647,0.376220,4.382460,-7.233534,-4.778081,6.910716,-2.004541,-1.822018,-5.352717],[-0.261358,7.848691,3.193213,9.770163,-5.945585,3.464149,-5.679959,-7.661067,1.632209,1.409693,-1.753284,2.242073,2.288971,-6.639144,-4.157208,7.591347],[1.586045,1.132477,1.831550,-5.855946,1.566643,-6.537974,-9.143054,-7.905706,0.336064,8.637468,2.018333,9.725563,-3.355861,-7.527789,0.472484,1.143346],[-2.072920,2.571266,-4.400172,1.594759,2.304806,4.348294,-0.671040,9.044671,-2.585138,-3.094291,-4.741645,-4.919431,6.403368,3.720720,-7.654324,5.787266],[1.970712,5.986120,-0.666496,9.852632,-3.463230,3.461740,-0.241151,-4.818087,-7.840975,6.008905,5.975827,6.404034,-0.452230,2.221202,-2.162028,-6.166078],[9.846108,2.925161,-1.230191,-2.206972,8.380179,-6.719467,-5.535029,-1.730642,2.063272,9.362261,-3.606360,1.063688,5.107448,9.401993,-0.974734,8.062385],[5.598875,2.904894,-2.735177,8.594049,-0.561049,2.388646,-8.598035,9.226311,4.812605,-2.241034,3.907510,6.357808,-2.002053,-8.417610,-9.520129,6.196706],[-8.205435,8.562897,-2.228364,0.245649,-9.591528,0.736315,-6.456842,-7.747855,-4.031486,7.883234,1.685976,-4.762524,-9.728962,-3.871862,2.074389,-6.760697],[-3.568549,-3.927685,-3.496163,3.366377,-8.817230,-1.608203,5.532462,8.024483,1.312471,-3.486143,9.170575,4.620681,5.247748,-8.528078,2.121292,5.420514]],[[-2.965196,-6.804193,4.429005,-8.780298,-4.544247,-7.125480,8.357865,6.584425,2.818305,0.182381,7.719895,-2.592356,-2.024977,8.045614,8.433816,-5.370665],[-9.243573,1.188832,-9.490036,7.056740,-2.135848,7.502697,6.948080,-5.488166,-9.541993,4.692026,-9.241083,-4.866253,-2.471220,-4.017156,-9.918651,-0.404085],[8.781538,-7.794631,3.804327,5.733040,-2.006777,2.859172,5.212302,-7.975595,-8.768457,1.513257,5.914761,8.574653,4.836306,0.139601,-8.713955,-9.956573],[1.139034,-0.586806,9.011293,-5.522057,-6.858091,4.051533,-9.362124,6.202727,-5.798399,3.179129,-8.573153,3.424660,6.846737,-3.624138,-2.847170,7.312897],[3.102170,-3.985973,3.849444,-7.100116,4.447033,-2.930320,8.702840,-2.141065,-0.446919,3.952379,-7.049027,2.142631,-1.859895,-3.667686,-7.424816,-5.710497],[5.475034,-1.468489,-5.339127,-8.241296,3.854136,2.869880,-4.223955,-5.168581,5.830773,2.817241,-2.869124,8.075971,-4.881039,-3.428935,-9.577541,7.511784],[7.329885,-3.667827,-0.858170,1.448381,7.061759,3.562100,-0.575396,1.605126,3.299492,-2.263177,6.146998,-3.689389,2.358245,-5.859942,-2.801000,1.186295],[-2.163442,2.483102,-1.399660,-3.414790,1.688873,2.338017,7.764694,0.057359,8.058065,-8.491391,-3.798427,1.197806,2.954697,7.423367,8.976659,-0.978009],[-6.436892,-5.236352,-7.030530,6.770454,-2.921022,-6.987095,9.640771,9.911236,6.616548,8.741040,-1.644878,9.486683,-7.934016,1.590999,9.075456,4.423523],[9.375837,-1.311971,-0.338236,4.080656,-0.170773,-1.667191,-4.239537,-4.693108,-3.760907,1.632554,-0.411491,-6.368239,5.570787,-3.416490,4.577220,-5.455908],[-3.907868,8.956502,-3.734658,8.573259,-3.262961,-4.470026,1.464013,-5.083371,-7.304761,1.262195,-9.613401,-4.749354,2.887835,-0.232787,-4.125634,-8.795245]],[[9.426960,-6.856438,-7.446332,-0.588908,8.530398,7.328771,1.329584,-6.408539,8.347817,5.945573,-2.942990,4.787489,-8.139422,-8.609656,5.716989,7.053609],[-8.255625,-5.878201,-5.260028,8.912919,-6.797688,-9.396015,-5.399812,0.666775,-5.104030,5.120919,-7.441053,0.829489,-5.707024,-3.586148,-9.322961,-9.452211],[6.668834,0.004744,5.834548,9.843223,-2.552888,-9.411421,3.699089,-2.369673,-1.790007,-3.945348,5.362971,2.738831,9.273969,1.073523,-4.629056,5.935261],[-4.649591,6.114767,7.359101,9.824715,-3.651500,1.142764,-8.440866,-5.834346,3.832379,7.204079,-2.066377,0.712643,-1.779364,5.545346,-6.683535,-9.332542],[1.341391,4.328686,2.538034,-1.375946,-3.030554,5.124547,-4.739671,6.470524,-7.156148,-8.375620,3.353670,-2.173461,-0.697021,-4.299390,-9.538709,4.041314],[-5.662432,9.995917,-9.499217,-4.986329,7.848073,1.183454,7.828315,3.562860,8.171884,-2.106820,5.784787,0.300028,-1.682876,0.114050,-7.151576,-7.336030],[3.747102,-5.283674,-9.309447,-7.871698,-1.847795,2.337145,-4.609491,5.329412,-6.664417,-7.707936,7.618173,6.072641,-7.563364,-3.319394,7.124627,8.901116],[-7.273270,-1.942291,-4.087424,-0.414986,-8.843799,-7.725337,6.512388,5.651869,4.685246,3.027560,4.680227,-6.958635,7.205000,-6.420948,-6.562540,5.465466],[-8.242874,0.040418,-1.737925,0.910633,3.732698,1.179970,-1.449194,-2.163228,8.238439,-5.626195,-6.087020,-1.164179,3.318242,-2.794638,-8.867967,6.698124],[-4.611298,-7.058115,-8.408994,2.732276,1.807758,-1.969887,4.590212,-7.326704,7.504228,6.547870,3.428542,9.297575,1.660675,-2.349662,-8.867864,-9.769203],[-1.867740,9.290443,-3.028652,-3.529297,-4.609859,7.697702,6.736474,-1.966052,-1.237613,-6.362165,6.553791,5.340571,-3.500008,-5.733825,4.617759,4.569708]]], dtype = "float64")#candidate|5890|(10, 11, 16)|const|float64
bop_5891 = relay.divide(call_5876.astype('float64'), relay.reshape(const_5890.astype('float64'), relay.shape_of(call_5876))) # shape=(10, 11, 16)
bop_5894 = relay.divide(call_5877.astype('float64'), relay.reshape(const_5890.astype('float64'), relay.shape_of(call_5877))) # shape=(10, 11, 16)
output = bop_5891
output2 = bop_5894
func_5897 = relay.Function([], output)
mod['func_5897'] = func_5897
mod = relay.transform.InferType()(mod)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5897_call = mutated_mod.get_global_var('func_5897')
call_5898 = func_5897_call()
output = call_5898
func_5899 = relay.Function([], output)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5190_call = mod.get_global_var('func_5190')
func_5192_call = mutated_mod.get_global_var('func_5192')
call_5900 = relay.TupleGetItem(func_5190_call(), 1)
call_5901 = relay.TupleGetItem(func_5192_call(), 1)
output = relay.Tuple([call_5900,])
output2 = relay.Tuple([call_5901,])
func_5921 = relay.Function([], output)
mod['func_5921'] = func_5921
mod = relay.transform.InferType()(mod)
mutated_mod['func_5921'] = func_5921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mutated_mod.get_global_var('func_5921')
call_5922 = func_5921_call()
output = call_5922
func_5923 = relay.Function([], output)
mutated_mod['func_5923'] = func_5923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5148_call = mod.get_global_var('func_5148')
func_5149_call = mutated_mod.get_global_var('func_5149')
call_5977 = relay.TupleGetItem(func_5148_call(), 0)
call_5978 = relay.TupleGetItem(func_5149_call(), 0)
output = relay.Tuple([call_5977,])
output2 = relay.Tuple([call_5978,])
func_5998 = relay.Function([], output)
mod['func_5998'] = func_5998
mod = relay.transform.InferType()(mod)
output = func_5998()
func_5999 = relay.Function([], output)
mutated_mod['func_5999'] = func_5999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_6035 = func_4993_call()
call_6036 = func_4993_call()
func_5405_call = mod.get_global_var('func_5405')
func_5409_call = mutated_mod.get_global_var('func_5409')
var_6045 = relay.var("var_6045", dtype = "int32", shape = (224,))#candidate|6045|(224,)|var|int32
call_6044 = relay.TupleGetItem(func_5405_call(relay.reshape(call_6035.astype('float64'), [10, 11, 16]), relay.reshape(var_6045.astype('int32'), [224,]), ), 3)
call_6046 = relay.TupleGetItem(func_5409_call(relay.reshape(call_6035.astype('float64'), [10, 11, 16]), relay.reshape(var_6045.astype('int32'), [224,]), ), 3)
func_5069_call = mod.get_global_var('func_5069')
func_5072_call = mutated_mod.get_global_var('func_5072')
const_6048 = relay.const([7.713041,4.490177,-4.380433,5.100298,-3.041066,4.521289,1.696909,7.987228,0.844045,-7.816536,5.702171,-4.218077,-7.903719,7.790749,-3.093200,-3.277089,-6.628364,-7.904517,8.416195,5.051340,-7.310670,-3.170715,-8.548166,-5.377745,-3.772171,-5.705756,-9.461772,-8.330627,4.900958,-7.791844,7.208451,3.282664,-3.253553,-0.162375,1.651167,-1.687086,-5.823365,5.586473,-2.877309,-9.914510,-7.604647,0.559153,0.489472,6.434801,2.067850,-1.278341,-0.769899,-4.534165,5.637532,-8.703906,8.224391,-7.723041,-8.926492,-0.531643,-5.730893,4.602475,7.518302,8.896851,-3.764429,2.141160,-6.454566,-8.910712,6.221215,-7.203393,8.224331,1.612080,0.518903,-2.372691,6.325715,-9.823241,0.918202,-4.926245,-6.762632,-9.549943,2.054348,-6.922463,5.656844,-4.246526,-8.506693,-4.167370,-6.008255,-0.981114,8.129300,7.654409,9.200959,-0.123191,2.008103,6.529726,-7.232828,-3.594138,-0.958246,-6.864442,-2.920750,-8.843404,4.581614,-9.258653,8.233909,2.695953,-7.373050,3.917420,-4.393924,-4.000864,5.025184,-9.998165,4.125844,0.353458,8.967145,-5.480393,-6.078618,-9.034049,6.536741,3.377803,7.038167,3.255486,0.181241,2.754706,9.821681,4.768011,-5.768412,-9.792092,6.658088,3.032328,6.204067,-2.892150,-0.127341,8.190779,3.366334,-7.542393,7.774296,-8.422921,7.289247,9.930133,-1.734683,9.181560,-7.433937,-8.468910,0.979375,-3.084628,1.779643,-7.031528,-0.817604,9.439673,3.344988,-9.867512,-3.250872,6.018195,2.167949,-8.180172,-1.531614,-8.761041,5.043921,-1.992374,-3.881486,-9.050512,7.763488,8.254657,-5.676338,9.588515,5.542589,6.722023,6.613287,4.401077,6.532962,-1.634045,5.558594,-6.151805,2.940547,3.890622,5.909376,-9.143621,-2.499301,-7.710603,-9.218226,-9.245076,-1.131183,4.011042,0.531214,-5.739134,-0.784574,-7.632676,0.068650,4.994943,1.684716,-2.768943,-3.929931,7.223914,-8.584524,7.473532,6.864407,-0.156049,6.561538,9.418732,-8.521770,8.890571,-1.185271,-0.306423,-8.310752,0.999363,-2.153476,7.993773,-0.535595,-3.796592,-5.441313,3.836482,7.408669,4.223276,-1.944500,2.080378,-9.216388,2.553810,-5.288512,-7.284201,1.468586,-8.072563,0.128843,-7.549845,-3.194399,5.380371,4.936974,7.367995,-7.950806,8.352769,4.371898,-4.722382,-0.131128,5.823793,9.196690,1.407731,3.429451,3.897839,1.963961,-4.066212,-2.694171,1.924549,-2.761510,-0.881206,6.488588,1.500790,3.872845,0.583437,-4.348974,-1.670749,-7.127953,-9.356511,-4.911165,4.997713,-1.790154,9.131909,4.933958,-0.890212,1.710913,-7.898484,-6.749604,-2.119841,2.687521,0.125648,-3.411138,-7.981477,-0.350792,-6.410957,-6.415396,-6.238069,6.588445,0.166562,-2.904245,-4.405609,-5.431526,8.692828,8.417495,-9.513663,9.890274,-0.538262,-3.701188,-0.475519,4.512687,3.442788,-6.377877,-7.757844,0.594643,-3.173563,4.556889,-8.221568,-9.556033,8.287315,4.669718,-2.648960,3.000507,-4.401308,8.951213,-9.524315,4.827818,-4.807240,-9.548455,4.742480,-0.280508,3.073481,-1.349426,-8.939207,8.526012,-3.799557,8.942626,5.541567,6.093461,-5.651477,6.085083,-0.623262,-2.584373,-6.505291,9.173494,1.253108,-0.353613,-8.338420,-8.181462,6.627437,-0.247891,-7.970901,-0.996219,-6.290868,8.630410,7.555056,-9.459020,3.964465,-6.394161,9.318196,4.611014,-8.793700,3.322060,-6.956672,2.962957,-9.787428,-9.616259,6.891680,-9.160733,-6.776875,4.939422,-5.594131,2.104986,-8.641035,-1.443464,-0.270069,-0.270417,6.525000,6.502342,6.834666,5.989880,-7.424110,-3.973669,-8.672103,5.687958,-3.828713,-8.820705,-4.957637,-4.160753,-9.096109,-5.428216,-8.742901,0.084518,7.515352,-9.990126,6.550747,-2.890393,2.641889,4.887447,0.508623,-9.769176,9.450989,4.023956,1.510935,7.013324,-3.657066,-9.284821,-8.396367,-2.435591,-1.268327,8.272242,-2.234876,6.212884,-6.921139,5.588071,6.792551,-6.528892,8.644765,6.414791,4.287729,-0.643312,-8.668092,6.427989,-0.991506,-7.294479,-6.694039,-2.269624,1.308318,-5.209937,-8.368725,-7.569660,1.140628,9.164938,-0.338795,0.654001,6.307005,3.285608,-7.596177,-0.063778,-4.472799,3.519018,-3.673998,6.446434,4.324076,-0.674765,1.027438,-7.333239,1.339528,0.919804,-6.290583,6.523424,-5.047267,2.031308,5.228477,0.706339,3.269468], dtype = "float64")#candidate|6048|(420,)|const|float64
call_6047 = relay.TupleGetItem(func_5069_call(relay.reshape(const_6048.astype('float64'), [70, 6])), 2)
call_6049 = relay.TupleGetItem(func_5072_call(relay.reshape(const_6048.astype('float64'), [70, 6])), 2)
bop_6055 = relay.greater_equal(call_6047.astype('bool'), relay.reshape(const_6048.astype('bool'), relay.shape_of(call_6047))) # shape=(70, 6)
bop_6058 = relay.greater_equal(call_6049.astype('bool'), relay.reshape(const_6048.astype('bool'), relay.shape_of(call_6049))) # shape=(70, 6)
uop_6059 = relay.atan(call_6047.astype('float64')) # shape=(70, 6)
uop_6061 = relay.atan(call_6049.astype('float64')) # shape=(70, 6)
output = relay.Tuple([call_6035,call_6044,var_6045,bop_6055,uop_6059,])
output2 = relay.Tuple([call_6036,call_6046,var_6045,bop_6058,uop_6061,])
func_6073 = relay.Function([var_6045,], output)
mod['func_6073'] = func_6073
mod = relay.transform.InferType()(mod)
var_6074 = relay.var("var_6074", dtype = "int32", shape = (224,))#candidate|6074|(224,)|var|int32
output = func_6073(var_6074)
func_6075 = relay.Function([var_6074], output)
mutated_mod['func_6075'] = func_6075
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6086 = relay.const([[[8.789536,-5.534347,-4.635753,3.107004,4.462583,5.388531],[-9.116964,-6.463999,3.648036,-2.457518,8.555876,1.932727],[2.183608,-1.434453,1.891693,-1.663339,3.809344,-4.116564],[-6.782257,-2.999802,-8.368924,-0.029625,-3.531991,9.450324],[0.373315,8.585060,-4.959660,1.170514,-5.180361,6.558265],[4.380551,-2.610250,-5.434329,-0.088296,9.321571,-4.821958],[-4.076584,-9.562602,1.565502,-1.005792,0.798760,8.652480]],[[-1.503921,-4.868558,-0.857078,1.301404,4.344973,-6.140554],[-5.789901,-2.790085,-8.047240,6.086427,9.117702,6.499990],[9.667946,8.081874,-6.986080,-2.848068,-3.476118,7.348252],[-4.048385,-0.071410,-7.047221,4.304843,-1.378173,-0.186427],[-9.590631,7.254873,5.284217,-6.101878,7.341857,-8.696806],[-1.583940,-6.538192,9.466718,-2.160590,-4.043377,8.233672],[7.630550,-2.705200,-1.835436,-1.846126,-4.317788,-0.659670]],[[6.089722,5.758485,-9.513654,-3.378212,-3.898306,8.362266],[-4.496753,-7.521722,3.413781,5.483136,-8.332516,-8.326119],[5.459456,-0.315642,-2.696973,5.371283,2.285246,-3.686823],[-7.465715,9.456852,-2.951825,-1.833899,-9.079242,4.377540],[-1.941567,-4.305242,-4.617744,4.629818,-2.314687,-0.510885],[-0.590617,-2.659839,-9.561717,-9.269287,7.125598,0.949406],[-2.079440,-2.245410,-4.539472,-4.184466,-5.880219,-7.478613]],[[6.107315,-2.480323,1.381788,1.283852,6.050497,2.153622],[-0.839515,-9.730889,9.901005,0.233569,-5.410153,-0.968858],[-2.136221,7.603737,-3.912807,6.399793,-7.262440,9.115705],[-2.340720,3.576335,-2.562592,0.280116,-1.769932,-8.714405],[-8.453943,-6.966378,5.340410,2.890290,4.673385,-3.577617],[-5.513815,-2.567556,-1.455550,-2.666614,-6.667152,-0.392197],[1.224268,7.991558,1.415096,8.009107,-1.500849,-1.489137]],[[4.422273,8.916608,7.098075,-1.879172,9.173990,-0.101046],[-2.633470,5.464968,-6.090554,0.654236,4.856200,-6.151668],[-6.616981,-0.168962,0.062018,-1.524288,7.714678,0.853556],[3.767126,-2.394305,-5.678575,-3.297969,-1.655460,6.257593],[4.518202,-8.960220,-5.356032,-4.157953,-0.100895,2.209474],[5.168771,-1.221389,7.086963,3.415334,0.338441,6.687071],[-7.372273,-8.274066,8.218112,-4.981635,-1.768187,-1.343148]],[[8.682282,6.884214,9.184289,3.997108,-6.477911,0.016143],[9.861355,9.951612,0.631886,0.575471,-4.179893,-6.504411],[0.024951,5.224958,0.522126,-4.009488,-3.660410,-4.666240],[-1.134453,-8.716803,-1.708032,-6.101229,4.967283,-2.176550],[8.356332,-6.953720,-9.922544,3.177600,7.577538,9.452572],[-4.242846,3.772222,-2.380956,6.009231,8.457836,9.758421],[3.632493,-1.955703,0.740745,6.895165,-3.387259,1.089508]],[[-1.214161,-8.482024,1.492202,-8.723691,-2.724691,-5.009899],[-9.476256,3.024822,3.055883,5.189775,3.481602,8.214322],[-2.076359,4.640855,1.668631,0.787928,0.995244,9.183293],[-5.122565,8.782105,-6.119638,8.676016,0.381064,-6.480392],[1.657788,8.952051,2.095933,-9.317180,-3.914088,-6.618458],[-1.595288,5.974178,-6.712353,-9.575878,8.473701,3.967262],[9.591199,-9.210171,8.826986,2.146230,-7.775043,8.149195]],[[-3.060000,1.992795,2.627200,-2.155347,-6.488676,-8.188969],[-0.117108,1.137855,-3.580321,0.289364,0.410392,-8.375666],[5.646744,7.197198,-4.804207,3.532739,-9.763406,7.376957],[6.217845,0.803044,-0.173409,-5.428541,-3.440793,-5.289887],[-4.771201,-3.749827,8.323785,-2.934703,1.248855,-9.185286],[9.469723,-1.860381,-6.414443,4.115749,2.154305,4.528976],[-8.160911,-3.928215,0.323877,0.576863,1.122669,4.241812]],[[-7.960539,8.062674,-4.044243,-5.379055,6.316697,4.063670],[-5.274484,4.007939,-3.877973,5.626173,-7.560180,5.429565],[-8.719894,7.169601,2.865655,-4.356190,6.060644,5.156348],[9.903997,7.538007,-4.673386,6.246006,9.449797,-5.362590],[1.603505,7.822873,3.002386,-7.190973,0.363336,7.763321],[-4.622001,9.940847,3.069136,7.199181,-9.132223,-9.994644],[-2.097078,1.545114,-0.177445,9.266357,-7.506748,-3.429947]],[[5.525448,7.670948,-0.889350,8.044221,7.175875,-7.292956],[6.921233,8.213137,-5.878960,-4.820052,6.806442,8.326749],[1.164398,-5.590883,8.768638,-1.335715,7.049540,5.772241],[-2.822726,-1.961053,6.429069,1.011132,4.003127,-5.745980],[-2.233502,-6.698894,7.058704,2.056074,-2.497757,-0.204602],[-4.523636,-3.093366,-7.830135,-1.906130,2.708195,-6.552365],[5.971645,0.185753,9.807751,8.384273,5.310488,1.681947]],[[6.995269,9.482691,-5.936462,2.497272,-3.987728,-5.085833],[5.683926,-4.034468,-3.473813,-9.615481,-8.800551,-5.932935],[3.385854,2.093209,2.538775,3.693950,9.110089,-2.378704],[-5.783709,1.833695,3.296453,-5.860342,-9.723489,5.742133],[2.737811,-6.150086,-3.234789,8.507799,-2.956578,-9.617866],[-0.449975,-6.475025,-2.060679,2.905716,-1.655184,-9.132833],[2.460410,3.332248,8.163652,-9.968115,-0.024099,-4.022136]],[[8.651352,-2.842588,-9.687781,1.795683,6.834674,-8.783465],[-5.838063,-8.899743,-8.556911,-3.744502,5.423800,8.714996],[8.590217,-2.210528,8.671621,-7.559154,-4.302277,-6.803004],[1.722284,6.657952,-2.660642,-0.976332,-0.390475,1.759669],[7.902055,-9.437221,2.573708,4.611662,8.754563,-7.921885],[-9.436319,5.231798,-7.436444,9.907977,8.728444,-9.104644],[7.375289,-2.554499,5.252934,-7.513678,7.704015,-1.458355]],[[5.036059,8.676238,1.567838,8.697523,-4.584640,-7.837832],[-7.820763,-9.135171,0.945458,9.413650,-8.693541,-6.981178],[-7.442990,-6.281041,9.057836,-5.624901,6.886570,3.066423],[-6.288635,-7.580873,5.536019,2.220408,2.387035,5.184296],[-0.256843,3.567959,-8.495533,-6.955304,-0.104800,-5.076514],[5.190313,-0.906747,9.991978,6.911204,-2.679974,-6.419673],[9.992840,-3.088422,-8.254190,5.450378,-3.350222,9.794859]],[[-0.157279,8.328302,-3.131893,-9.744338,8.816090,-4.504548],[-1.026144,-8.538450,-5.058877,-5.348725,-5.074700,-2.041558],[-6.611994,1.886182,-7.021933,5.628056,-7.805581,5.308629],[-1.421764,6.617872,1.608389,-0.353620,2.101749,-5.837735],[-2.972691,2.728373,6.870435,7.590633,4.788272,0.357537],[1.787053,-6.569149,7.530644,-0.432022,9.086615,9.781289],[-4.311830,-1.858019,-1.100805,9.858882,3.425803,9.407723]],[[-2.079049,-4.432170,2.488833,7.212159,-8.557889,8.935554],[0.882296,-6.675185,2.405285,2.874048,0.155551,5.602626],[7.937307,-3.925574,-0.358234,2.045619,-2.493503,-0.537260],[7.375084,-0.474051,-1.429791,-5.505135,-9.397586,-2.796954],[-2.307129,5.549106,-1.672509,-1.571654,3.612381,-2.814368],[-9.031660,-2.751762,-7.051669,9.268504,-0.957513,9.831099],[8.183151,-5.058393,-4.894463,3.497180,2.876155,4.968331]]], dtype = "float32")#candidate|6086|(15, 7, 6)|const|float32
uop_6087 = relay.log2(const_6086.astype('float32')) # shape=(15, 7, 6)
bop_6090 = relay.right_shift(uop_6087.astype('uint32'), relay.reshape(const_6086.astype('uint32'), relay.shape_of(uop_6087))) # shape=(15, 7, 6)
uop_6093 = relay.exp(uop_6087.astype('float32')) # shape=(15, 7, 6)
func_5921_call = mod.get_global_var('func_5921')
func_5923_call = mutated_mod.get_global_var('func_5923')
call_6099 = relay.TupleGetItem(func_5921_call(), 0)
call_6100 = relay.TupleGetItem(func_5923_call(), 0)
func_5921_call = mod.get_global_var('func_5921')
func_5923_call = mutated_mod.get_global_var('func_5923')
call_6132 = relay.TupleGetItem(func_5921_call(), 0)
call_6133 = relay.TupleGetItem(func_5923_call(), 0)
func_4827_call = mod.get_global_var('func_4827')
func_4831_call = mutated_mod.get_global_var('func_4831')
const_6145 = relay.const([1,-10,5,7,10,8,1,10,-5,-8,3,-9,-7,10,-5,10,2,-4,10,5,-1,5,-8,9,7,2,9,4,2,-9,-5,-10,-9,-4,-8,-6,-1,2,-9,-5,-10,-8,-8,-5,4,-5,3,8,4,2,2,-10,2,-4,-4,-7,8,3,8,4,2,-5,-9,-8,6,2,9,-2,-5,-9,-7,-3,-2,9,-4,3,4,-4,10,3,-3,5,8,-10,6,-2,-8,8,-3,9,1,5,10,8,1,-8,-10,-6,-10,3,-8,1,-2,-5,5,2,7,-3,7,7,-7,-2,-7,5,-5,-5,3,-10,-4,-2,2,-7,1,8,-3,6,1,7,6,-7,-10,7,-8,-10,3,-3,6,-6,2,-5,-8,-7,8,-6,5,9,-8,1,-3,-10,5,-3,-3,-7,2,10,-4,-10,-10,-9,2,2,-2,5,4,-6,-9,9,8,5,-10,2,3,-6,-10,1,3,-9,-4,2,2,-6,-7,-2,-3,-8,5,8,-4,4,1,4,-7,-1,-1,-1,-1,3,4,-6,4,1,-4,9,5,-1,-7,10,-10,-4,-4,-4,-2,4,4,-2,-3,-10,-3,-4,10,-5,-10,10,-4,1,-9,-2,3,8,5,8,4,7,-6,-8,-6,-5,5,-6,-10,-6,1,-4,3,4,2,10,-1,-5,-7,7,-5,-10,8,1,7,8,7,-4,4,10,1,1,-4,1,9,-5,-8,5,4,-5,3,-9,-5,-1,-1,4,3,-4,-2,-10,-2,-5,1,8,6,-6,-7,1,10,-3,-7,4,2,8,-4,-5,3,-9,-10,2,2,-8,7,-5,3,7,-4,-7,9,-2,-4,-1,9,-3,-1,-6,7,4,-3,-8,-6,6,7,10,-1,-1,9,1,-2,-6,3,5,-6,-3,-7,-7,7,-7,-7,10,-9,-2,-3,-6,-9,-9,6,2,5,5,8,7,3,10,10,7,-3,8,2,-10,-8,-5,4,-10,-5,-1,5,8,3,-10,-10,-2,6,6,8,2,6,2,-7,1,5,6,-1,10,4,8,-6,4,4,3,7,-8,3,7,4,5,-9,1,-5,7,-10,-3,7,2,9,-1,-3,3,1,-7,7,6,2,7,8,-9,9,9,-9,-5,-8,-7,7,6,-10,-5,-4,-5,8,-6,-6,-7,6,2,8,-6,-6,-7,4,1,6,-1,6,-1,-9,-1,3,-1,3,-8,1,-7,-8,-7,8,8,-5,6,-6,6,-5,10,4,-7,-5,9,-9,-2,-3,-1,9,4,-10,-9,-9,-10,3,-10,-3,7,-4,-3,-5,1,-4,-8,4,10,4,8,6,8,10,-8,7,-3,2,-5,1,-4,8,1,-3,4,10,-1,-4,8,8,-8,-1,-5,5,1,-6,2,-4,6,3,5,5,-2,6,2,-5,-9,9,3,-6,1,-7,7,-5,-1,4,2,5,-8,-5,4,-9,10,9,-4,-6,-8,-8,-8,-8,1,-6,-1,8,-3,10,-5,-2,-8,8,7,-7,-9,-8,9,-6,7,-5,5,10,10,-5,10,10,8,2,-4,-8,5,7,-1,-8,7,9,-9,-7,-8,4,10,7,-3,-3,7,9,-9,-10,9,9,1,5,-6,9,-7,-3,8,-4,9,8,-1,2,3,-8,-7,-8,6,8,-10,-9,9,-3,-4,-8,6,-10,2,5,-3,-8,4,9,-3,-4,-4,-9,5,-10,1,-3,-3,-4,-5,10,3,-8,-8,-7,-2,2,-1,8,3,6,-5,10,10,-3,-2,4,-3,-10,-7,-1,-7,-6,-4,-6,-2,10,9,-5,4,7,3,1,2,-8,-8,10,2,6,2,-2,4,4,-1,-6,7,1,3,-7,-3,5,-3,-9,-1,-10,10,-7,-5,-10,10,-3,9,8,-6,-8,1,2,-8,-9,-9,4,-3,4,2,4,1,-10,1,-4,-4,-8,6,8,-3,5,-8,-9,-9,-8,-8,4,2,-10,1,-2,6,9,9,8,-2,4,-1,10,-8,3,-5,-5,-1,9,-7,-9,2,5,-3,3,-5,7,2,7,10,-5,-9,1,5,5,3,-7,2,-4,6,-2,6,6,-9,-5,-7,1,3,7,3,2,-8,9,-2,4,-2,-8,6,-6,10,-3,4,-2,-7,4,3,-6,-6,10,9,7,-10,2,10,-2,-9,-7,10,-9,10,-9,-1,5,-9,7,-9,-1,-9,5,-1,10,-2,5,8,-1,9,-3,-2,-8,-3,10,9,-3,4,-8,6,9,6,-2,-7,-3,2,7,-4,6,1,-1,7,7,-1,8,-4,5,-10,4,-9,-4,-3,-8,7,6,10,-8,-9,-10,-3,-8,-5,7,-10,-1,-8,-4,7,9,6,5,1,4,-2,2,3,10,-3,-1,8,5,-8,-8,-9,-2,2,-2,3,-3,-2,-8,-5,3,7,-2,-6,2,6,-3,-5,-1,-4,-10,-2,-10,9,9,10,3,-4,2,-2,7,2,-2,-5,-6,7,-6,10,-3,-5,5,4,3,-3,-9,-9,4,6,-10,8,-10,1,-5,-1,4,-3,-1,6,-7,9,5,-4,-9,4,1,-7,-10,8,-1,-8,-7,3,7,4,-10,10,10,6,-4,1,4,-10,-8,2,7,6,10,-4,9,-1,-10,6,-6,-1,5,-10,2,7,-8,1,10,1,-5,9,4,4,-2,6,-7,2,3,-2,2,6,8,-7,-3,8,-5,3,-6,5,-1,10,8,-9,4,7,-1,-5,-8,-7,3,10,-2,-9,-4,-8,5,-1,10,5,1,7,3,-1,6,-4,3,7,9,-6,10,7,4,8,10,-5,3,3,5,9,-1,-8,-8,-2,3,-1,-3,-8,-8,10,-10,-9,8,1,5,5,-6,10,10,-3,1,-7,4,-1,2,8,-6,-4,-8,-8,-8,9,-7,-8,-1,1,-6,-6,4,3,-1,-7,-10,1,-8,1,3,-8,10,-9,-8,5,-1,-6,-10,-2,-10,8,-9,-7,2,-1,-9,7,-6,10,-9,1,8,8,6,9,-8,-5,-7,-2,-4,6,-3,-3,-9,4,-10,1,-2,-5,8,4,10,3,-4,8,9,3,7,2,1,-6,-10,-6,-6,1,-5,-2,-4,6,-3,10,-8,-5,-7,1,-4,8,5,-6,-4,-7,-2,8,5,8,8,-1,8,-3,2,4,2,9,3,8,-4,10,5,4,10,7,1,-6,3,-6,5,2,10,-5,-9,-2,-10,-1,-10,5,8,-8,10,-5,-3,-8,1,-8,-1,3,7,-5,10,4,-8,10,10,4,-3,-3,-2,-9,-2,1,9,5,1,-5,-3,-1,-7,-8,10,-7,3,-3,2,7,6,-7,-3,-3,2,3,8,-8,-4,1,10,-1,9,-9,6,7,5,-9,8,-1,9,-8,10,1,4,-2,-2,-9,-6,6,-2,4,-8,-6,-4,-9,-2,1,4,-8,3,-5,10,8,10,-6,6,2,4,2,-4,2,-1,8,2,-6,-5,-2,4,-10,5,-9,-7,-6,-10,10,1,-9,-2,8,4,-1,-4,3,2,-4,-1,-7,-5,-1,3,-8,1,5,-8,-9,6,1,-2,7,10,-2,-4,9,-4,-4,-2,-1,2,8,8,2,9,5,-10,7,4,10,10,9,10,3,8,6,-10,1,2,-6,-9,-2,3,-8,1,-9,9,-7,3,-10,-3,-2,1,-5,-5,3,1,-2,7,3,9,-8,-10,-7,4,4,6,-4,-9,1,9,-7,-3,5,10,7,2,10,-10,-6,6,4,8,-2,-7,1,9,4,-9,-2,-9,-10,4,-4,9,-9,-4,9,-2,-8,-6,-3,-7,8,8,-6,-1,-9,-8,-9,4,4,-2,-9,5,-1,6,-7,3,-10,-7,5,7,-3,6,4,2,10,-2,-10,6,-10,-7,9,4,8,-8,-9,8,1,-6,6,4,3,6,-5,-5,7,3,2,7,-9,5,-1,-2,9,-9,5,2,1,1,10,-4,8,5,3,9,9,9,-7,2,8,-10,7,1,9,8,8,10,-7,5,9,3,-8,-5,1,8,3,2,-1,1,-7,-1,1,4,-8,-10,-2,4,5,-2,9,6,9,3,5,8,-1,8,2,-1,-10,7,4,-2,1,5,-6,-3,3,3,-7,9,-1,1,-8,4,-3,-1,-10,-8,-7,-4,-8,-7,2,6,-10,1,-3,-3,-5,10,-7,9,-6,-10,-1,-7,1,9,-2,5,1,3,8,-4,4,5,7,-9,-10,-5,5,-10,-5,-2,-6,-9,4,-1,-10,7,1,5,5,-2,-5,8,10,-6,8,2,-6,-1,4,5,6,-8,-4,-8,7,6,6,1,3,-1,-9,7,7], dtype = "int64")#candidate|6145|(1620,)|const|int64
var_6146 = relay.var("var_6146", dtype = "uint64", shape = (2400,))#candidate|6146|(2400,)|var|uint64
const_6147 = relay.const([[-6,-6,7,3,-7,2,-9,-2,-10,6,8,-9,7,-3,-7,6,6,-10,-2,-10,5,-7,-8,9,-9,-4,-6,-4,-1,1],[10,3,-9,-10,-6,-10,-2,-5,5,10,10,2,7,10,1,-9,-1,8,7,-3,-6,-6,-9,9,-5,-9,-3,3,-5,9],[4,-8,2,5,1,2,8,-6,-9,2,-5,10,-9,9,6,1,-8,3,2,9,3,-3,-1,9,-5,5,1,8,-10,6],[-7,-6,-8,4,6,-5,7,1,6,-8,-2,-1,-2,-2,7,8,9,-8,-2,6,10,-8,-1,4,10,8,-9,-4,-9,-3],[8,-10,-7,1,5,-9,1,1,-6,-9,9,8,-10,6,3,-8,3,6,-8,-1,-8,-7,6,1,3,8,-9,7,-3,9]], dtype = "int16")#candidate|6147|(5, 30)|const|int16
call_6144 = relay.TupleGetItem(func_4827_call(relay.reshape(const_6145.astype('int64'), [90, 18]), relay.reshape(var_6146.astype('uint64'), [20, 120]), relay.reshape(const_6147.astype('int16'), [150,]), ), 2)
call_6148 = relay.TupleGetItem(func_4831_call(relay.reshape(const_6145.astype('int64'), [90, 18]), relay.reshape(var_6146.astype('uint64'), [20, 120]), relay.reshape(const_6147.astype('int16'), [150,]), ), 2)
func_5305_call = mod.get_global_var('func_5305')
func_5306_call = mutated_mod.get_global_var('func_5306')
call_6151 = func_5305_call()
call_6152 = func_5305_call()
output = relay.Tuple([bop_6090,uop_6093,call_6099,call_6132,call_6144,const_6145,var_6146,const_6147,call_6151,])
output2 = relay.Tuple([bop_6090,uop_6093,call_6100,call_6133,call_6148,const_6145,var_6146,const_6147,call_6152,])
func_6179 = relay.Function([var_6146,], output)
mod['func_6179'] = func_6179
mod = relay.transform.InferType()(mod)
var_6180 = relay.var("var_6180", dtype = "uint64", shape = (2400,))#candidate|6180|(2400,)|var|uint64
output = func_6179(var_6180)
func_6181 = relay.Function([var_6180], output)
mutated_mod['func_6181'] = func_6181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mod.get_global_var('func_5921')
func_5923_call = mutated_mod.get_global_var('func_5923')
call_6233 = relay.TupleGetItem(func_5921_call(), 0)
call_6234 = relay.TupleGetItem(func_5923_call(), 0)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
const_6240 = relay.const([0.239818,-6.266940,4.678258,6.354723,-6.887956,-9.823996,-5.255292,3.070299,-5.358636,-1.074673,-9.131621,3.422602,-9.887153,-6.859393,8.637401,-9.997725,0.914183,2.299171,-9.190201,-8.527833,3.491482,-4.755166,2.611274,8.318735,-2.080327,3.097224,-3.532808,6.099038,-7.571198,-7.416893,-2.636090,-1.510404,-3.109783,-8.471700,-7.845571,0.948553,6.531704,7.605752,2.584642,4.677468,0.008402,-4.784596,8.159981,-1.010946,-5.982854,2.382805,-4.471247,-0.048755,9.721419,1.771460,7.892040,5.486802,4.362464,7.524167,9.244166,-2.604393,9.747272,4.434540,-7.591119,-9.442629,-4.977999,7.425770,3.916569,3.295576,-2.583736,1.536067,-7.121811,7.454210,0.343563,-7.804347,6.122984,1.451872,-3.674875,3.055668,0.353660,6.278540,7.257968,-6.167693,-3.104216,7.300972,-1.538167,6.272828,5.852878,-0.714793,3.060077,-9.826250,3.132019,-2.316699,-0.741391,2.854066,7.283710,7.509340,7.514243,-2.582033,-6.820964,4.956877,-2.089033,2.214703,3.998312,-6.440178,-0.555924,7.093792,5.346990,1.784498,0.617962,5.654480,6.354168,2.473585,-0.646711,9.543858,6.844177,8.263715,3.996129,3.257050,7.469645,1.331548,-6.158188,5.825758,-5.976543,9.301443,4.928978,7.394800,-0.608604,-5.461440,-4.169428,6.242781,-8.799546,6.895715,6.152700,-0.751228,-0.275750,-1.817214,-8.028508,-1.672837,9.413232,-2.087480,-7.131427,9.707330,-4.454444,5.344474,9.757255,-6.457956,-0.250895,5.414219,-5.066936,-4.201281,-2.500016,-8.133009,-2.384399,7.793834,-0.405132,5.995111,1.402845,8.922887,-9.387440,-1.412500,0.631767,3.019238,-9.667446,4.384865,-8.484371,-8.293646,8.272379,7.919388,0.108683,9.550031,-4.205140,3.740239,4.395658,3.597151,5.886729,-2.983670,-1.799228,-7.148201,-0.697537,1.565141,4.127004,8.525886,-8.758824,0.077548,-3.155078,-3.884065,7.768661,-2.351356,-7.751427,-8.218344,-8.483846,6.662591,-4.200065,2.892912,0.753207,4.196804,-1.582696,6.959777,3.671283,2.053068,8.328602,-7.330108,8.746948,-4.165588,-5.815337,1.189720,3.928192,7.342395,1.957916,-5.905550,4.686342,8.240780,6.586248,9.218524,5.377554,-5.312542,-6.863145,5.481146,0.946195,8.697045,-8.102469,-1.768869,8.906603,6.527877,4.248207,-1.432268,8.036733,-3.806052,-0.713335,4.095336,-2.411042,0.537519,-5.261614,-7.539392,-4.055067,0.534821,5.518281,-2.835268,0.374401,4.557894,8.827079,-9.464046,9.418425,2.197256,-0.211531,-5.875970,-9.355175,1.157777,-6.461651,8.349577,3.229380,-9.855527,-5.718683,-1.916408,-8.087652,-0.548340,1.133528,9.854824,-9.816701,-7.933332,4.540123,5.915234,-5.618615,3.201681,3.752142,2.189080,0.231874,4.204675,-2.396819,-8.628686,0.250054,2.328562,7.168273,5.413290,9.502802,-6.565699,-1.239373,0.311264,-1.744332,-0.920238,3.242594,-9.859475,0.329968,-2.602862,0.114721,-6.526085,-6.041715,3.699058,-0.587487,9.018936,5.190661,7.514241,9.919195,-9.070451,9.824112,6.335423,5.919387,8.912052,8.166823,-1.672641,-9.376686,0.388287,-5.072799,-6.120427,-1.305571,9.291628,7.287546,7.056505,8.262503,-5.712678,-0.282551,5.224015,-0.937645,-2.273618,-9.432605,-3.721414], dtype = "float32")#candidate|6240|(312,)|const|float32
call_6239 = relay.TupleGetItem(func_3442_call(relay.reshape(const_6240.astype('float32'), [13, 12, 2])), 0)
call_6241 = relay.TupleGetItem(func_3444_call(relay.reshape(const_6240.astype('float32'), [13, 12, 2])), 0)
output = relay.Tuple([call_6233,call_6239,const_6240,])
output2 = relay.Tuple([call_6234,call_6241,const_6240,])
func_6245 = relay.Function([], output)
mod['func_6245'] = func_6245
mod = relay.transform.InferType()(mod)
mutated_mod['func_6245'] = func_6245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mutated_mod.get_global_var('func_6245')
call_6246 = func_6245_call()
output = call_6246
func_6247 = relay.Function([], output)
mutated_mod['func_6247'] = func_6247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6366 = relay.var("var_6366", dtype = "float64", shape = (4, 15, 10))#candidate|6366|(4, 15, 10)|var|float64
var_6367 = relay.var("var_6367", dtype = "float64", shape = (4, 15, 10))#candidate|6367|(4, 15, 10)|var|float64
bop_6368 = relay.power(var_6366.astype('float64'), relay.reshape(var_6367.astype('float64'), relay.shape_of(var_6366))) # shape=(4, 15, 10)
func_2689_call = mod.get_global_var('func_2689')
func_2692_call = mutated_mod.get_global_var('func_2692')
const_6389 = relay.const([3.471607,0.216837,-5.628232,-5.164355,5.414486,3.828559,-1.617650,1.744183,2.517624,7.606176,8.101708,7.057438,1.229026,2.407717,4.172019,6.986719,5.184715,6.430363,2.058786,4.582925,-5.692212,-2.360954,9.567827,-0.891085,5.489954,3.308196,6.114988,4.074750,8.866215,7.391177,6.965000,1.232381,8.248775,-6.166004,6.272084,0.652155,8.017815,-6.028267,2.331698,8.394100,3.317162,4.608433,4.328942,1.554246,9.708386,-7.248959,-7.295766,5.740738,-3.451401,-0.795862,6.020691,4.717858,5.096617,-3.392362,-0.920101,4.031730,-3.702849,-4.656463,1.494191,-5.279502,-9.790712,-3.875149,6.076618,-4.582359,4.676661,6.807123,-6.701574,0.289912,-9.645598,-2.059794,9.823431,-9.211015,-7.689802,-3.505092,8.213070,-6.514704,8.546658,-4.763104,-0.860644,-2.577565,8.736582,7.678234,1.217898,7.399981,-0.551620,-3.311875,1.714673,2.515333,-5.733560,-7.065215,9.400216,2.514676,2.163025,6.859407,3.780838,7.654911,1.089026,-7.485122,-2.063338,-5.928696,-4.490329,-1.213316,-2.305569,7.568378,9.156764,-2.650994,0.171267,9.827021,5.370754,-8.498992,8.413235,4.145841,-1.488414,5.775778,2.961867,3.159630,-4.171295,7.901238,-5.646452,7.314745,-1.691716,-8.750943,-8.260162,-1.891796,-2.334811,-1.927613,9.401306,-1.988035,4.860161,-8.913563,6.328029,-0.705030,2.113808,-7.222028,3.221606,-9.474001,4.640273,6.041308,-5.597212,9.676438,-9.678348,-3.973363,5.403399,-3.893602,-9.984662,4.453973,-4.251613,-7.772882,-3.628871,2.203843,-0.115827,8.550291,-5.772419,2.415065,4.106088,4.146681,-5.069688,0.022373,-5.553739,0.636943,-3.409804,0.663072,-7.169917,-4.368688,-2.182297,-2.800621,3.689300,0.575616,-2.347609,5.033987,7.390431,-4.854322,-6.732765,-8.142855,5.943377,-5.191367,-5.783806,-8.569552,1.647546,8.852125,5.924691,-5.641683,-4.927040,-8.046105,4.003381,-4.545148,1.135992,-9.936730,-8.794743,-3.285944,-8.134267,2.655440,-7.747710,-1.178315,-9.307478,-4.043351,4.814252,5.957409,-5.275695,8.943263,9.735288,-1.248233,-2.609864,-0.820108,9.916917,-0.075421,3.249121,2.265319,8.698193,0.838639,9.378946,1.896633,5.937329,-9.086091,0.361841,7.153098,7.387181,1.398893,-3.054275,-8.124528,-7.044684,-1.182153,-4.279822,-5.313109,9.937287,-6.849419,0.124628,4.608870,-1.227611,-5.094036,3.389076,-5.068089,2.065485,-3.677631,0.473240,-7.731458,2.470370,-9.254991,-0.997135,-0.567310,-8.910063,-6.139569,-0.406533,-5.312237,-6.390552,-0.417289,-9.860045,-9.115188,-3.175013,-4.639762,-2.760341,-9.757856,4.186633,1.979579,8.912165,0.924078,-5.131913,5.691324,4.903284,4.239334,-4.773258,-1.477382,-7.561500,-2.157569,6.255321,7.630535,4.953975,-7.225242,-2.287178,-4.310519,6.388192,3.914297,-9.262703,-1.618358,0.065952,8.692152,-0.220608,-3.804636,-2.345771,3.611204,3.443371,9.811092,-9.109855,9.054769,-5.658367,-4.766152,0.093170,8.540041,-6.432223,-5.129317,-5.758889,0.183468,3.199533,1.573151,1.417914,4.755537,7.442420,1.003889,-2.804342,-3.280841,5.540877,-1.170208,1.847712,-1.947480,-3.165922,3.530941,-0.104514,0.207589,-7.893232,5.522920,6.305103,1.311618,-5.020200,2.269918,3.746062,2.284677,-8.499470,-6.349143,9.142410,-7.113536,6.771249,-0.478882,-0.124208,7.880399,8.571711,-1.827519,3.400853,1.979518,0.395972,5.058756,5.466593,2.596032,-2.920204,1.352535,-7.241050,0.394480,5.167825,9.416014,4.176306,-6.988118,6.474677,-5.142881,-1.803181,-7.039529,-3.501995,3.878901,-2.679480,6.303672,-4.240105,3.217309,-4.194642,-8.084747,-3.187929,-2.162687,-4.897691,-5.733377,8.775636,-8.019314,8.836710,4.246065,-0.883718,7.594532,2.750567,-1.596815,4.760868,-9.217703,-5.332835,2.023860,-3.467066,9.711444,-9.895059,1.485328,-4.746169,-5.278288,-8.613200,4.446553,-9.936570,-4.688476,5.931236,2.962603,-0.412645,4.751470,-7.812468,6.782658,-7.152227,0.505162,6.891655,-4.451100,-6.950006,8.605960,9.745079,-3.925529,0.956400,0.565000,6.502169,2.810007,2.308598,-6.523447,8.881790,-7.541296,-7.635249,-5.855583,-5.362420,8.067470,5.787018,-2.796925,0.360903,-8.341759,7.694058,-6.146845,-3.395933,-9.189804,-4.597809,2.237413,-1.410014,1.414173,5.408387,-6.483030,-2.984887,4.748599,-2.217217,-5.012234,-6.243594,-5.501168,1.689276,-1.644300,-7.830947,7.012589,9.019799,-0.955182,-7.614377,6.386874,-1.158436,-1.256289,3.412498,-7.937982,1.841232,-6.196463,-4.490656,7.553439,9.063725,1.529499,-1.849828,-1.459801,-6.222765,9.152872,-0.982634,-5.194788,9.816642,7.916965,-3.326994,-4.180217,5.487016,7.409211,-7.938003,1.876795,-9.724890,6.952745,9.738839,3.782047,6.623595,-3.011590,0.154186,-7.649224,9.600309,7.056766,3.365880,1.058930,-8.840026,-4.289593,9.292119,-1.130083,6.390020,-0.004528,7.432749,-8.095525,3.915317,-5.975006,7.029848,4.388766,5.599192,7.377006,-6.429632,3.034940,9.047302,9.245871,5.225933,3.823627,-9.527295,0.955685,2.977738,-9.509092,-7.359272,4.574145,7.292785,2.530692,7.713796,5.554516,1.546333,3.745289,6.137036,-2.482302,-2.941248,5.763900,4.278605,2.370144,-0.488527,8.111261,-5.664820,-3.444862,9.214497,-8.728693,-7.962070,5.870649,-4.015029,6.455474,4.979342,-3.237672,2.980795,-1.667058,-1.766210,7.219915,9.989598,-7.700944,8.700019,6.172724,-0.124118,0.127699,-6.334066,-8.702795,2.364783,-4.334342,8.778516,5.663191,-0.696980,-1.092196,2.608407,5.822249,-1.241554,-7.953844,-3.212500,4.687028,-3.278279,-1.492390,9.066396,4.167082,-8.365742,5.606111,6.830138,-6.321919,9.128313,-8.356332,-0.138599,8.846563,0.359045,-8.140876,-7.552861,-7.473420,-0.401727,1.939510,-0.619977,0.974541,-6.579437,-8.768340,6.984938,1.838942,4.378866,7.183553,9.474566,8.573898,-4.051387,-5.539778,7.106684,0.059936,7.877680,6.305807,-4.112014,-1.664540,9.521738,-6.681994,2.806141,8.395361,7.365297,-4.045085,-6.013904,-4.323478,2.662658,8.379754,9.871926,3.473516,0.972088,-4.522670,6.817705,-8.809731,-1.397856,2.019113,-9.455104,-5.435874,7.668553,-7.573496,-3.561270,-6.233725,5.414872,-6.847402,1.394440,-3.105088,-4.875259,-5.482012,4.300566,9.177588,5.116790,-2.073687,5.664711,2.189524,4.289083,-3.844649,-6.076599,-6.899968,-2.066839,9.693205,-9.659508,-1.415813,-8.780549,-8.753193,4.495833,6.947822,-1.722364,-5.371263,7.802539,-4.888405,7.363588,-0.884751,4.021006,-1.212387,-7.435117,8.675861,4.915006,4.345993,-4.199251,8.805603,2.593413,-3.212094,-7.455471,-2.904297,2.555551,8.828130,8.081585,-2.275311,-5.102374,2.049552,-8.031494,2.434710,-9.897059,-3.903598,-5.308128,8.110139,-6.375933,4.987706,-0.291927,-6.435964,-0.133073,8.833577,-0.414532,-0.885709,-7.363206,6.480534,8.456083,-0.954114,8.591118,-3.588845,-6.796224,-5.346625,-9.088060,-8.748527,2.623967,-7.077313,-1.422033,4.195282,1.801291,7.313387,1.929152,2.363415,6.645083,8.778547,-9.801769,-1.760836,8.812125,0.853167,-4.361454,-6.326005,8.896030,9.207634,-3.907922,-3.433581,-6.714721,9.470737,-7.451719,-5.065266,-9.870209,-4.525881,-0.722875,-8.438955,1.769711,3.711448,2.342600,2.058033,-8.567821,-8.670025,-4.480276,-5.065944,-3.841316,-2.633801,-1.812828,-1.394679,-3.778715,5.330557,7.770694,-5.536960,-3.097965,-8.492572,-6.919487,-9.648532,-7.018156,2.570698,8.221914,7.681335,-0.605208,-2.194765,1.491384,3.371433,6.861341,-4.221064,-7.038782,-7.106909,-6.625369,-6.136757,-5.274595,6.336952,7.746318,1.127788,-1.132676,-4.052248,9.053807,-9.316009,3.317323,-3.139471,-3.970184,7.748019,-8.712798,2.097400,-0.074472,3.541579,-8.909868,3.839867,7.980242,-1.537498,-5.500899,-5.256035,2.938689,-8.896603,7.764178,-7.244886,7.646561,-0.497865,5.785279,-0.354689,-1.532276,-6.490104,-0.932541,-5.998175,9.641386,5.101263,-2.272519,3.588932,-5.009556,-1.569017,-8.361974,-1.547837,7.567332,8.097983,-7.682399,-5.781575,9.813316,-7.897444], dtype = "float64")#candidate|6389|(784,)|const|float64
call_6388 = func_2689_call(relay.reshape(const_6389.astype('float64'), [4, 14, 14]))
call_6390 = func_2689_call(relay.reshape(const_6389.astype('float64'), [4, 14, 14]))
bop_6400 = relay.equal(bop_6368.astype('bool'), relay.reshape(var_6366.astype('bool'), relay.shape_of(bop_6368))) # shape=(4, 15, 10)
output = relay.Tuple([call_6388,const_6389,bop_6400,])
output2 = relay.Tuple([call_6390,const_6389,bop_6400,])
func_6404 = relay.Function([var_6366,var_6367,], output)
mod['func_6404'] = func_6404
mod = relay.transform.InferType()(mod)
mutated_mod['func_6404'] = func_6404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6404_call = mutated_mod.get_global_var('func_6404')
var_6406 = relay.var("var_6406", dtype = "float64", shape = (4, 15, 10))#candidate|6406|(4, 15, 10)|var|float64
var_6407 = relay.var("var_6407", dtype = "float64", shape = (4, 15, 10))#candidate|6407|(4, 15, 10)|var|float64
call_6405 = func_6404_call(var_6406,var_6407,)
output = call_6405
func_6408 = relay.Function([var_6406,var_6407,], output)
mutated_mod['func_6408'] = func_6408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6445 = relay.var("var_6445", dtype = "float64", shape = (13, 10, 9))#candidate|6445|(13, 10, 9)|var|float64
uop_6446 = relay.sinh(var_6445.astype('float64')) # shape=(13, 10, 9)
output = relay.Tuple([uop_6446,])
output2 = relay.Tuple([uop_6446,])
func_6453 = relay.Function([var_6445,], output)
mod['func_6453'] = func_6453
mod = relay.transform.InferType()(mod)
var_6454 = relay.var("var_6454", dtype = "float64", shape = (13, 10, 9))#candidate|6454|(13, 10, 9)|var|float64
output = func_6453(var_6454)
func_6455 = relay.Function([var_6454], output)
mutated_mod['func_6455'] = func_6455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5827_call = mod.get_global_var('func_5827')
func_5829_call = mutated_mod.get_global_var('func_5829')
call_6475 = func_5827_call()
call_6476 = func_5827_call()
output = call_6475
output2 = call_6476
func_6479 = relay.Function([], output)
mod['func_6479'] = func_6479
mod = relay.transform.InferType()(mod)
mutated_mod['func_6479'] = func_6479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6479_call = mutated_mod.get_global_var('func_6479')
call_6480 = func_6479_call()
output = call_6480
func_6481 = relay.Function([], output)
mutated_mod['func_6481'] = func_6481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_6644 = relay.TupleGetItem(func_4380_call(), 0)
call_6645 = relay.TupleGetItem(func_4382_call(), 0)
func_6179_call = mod.get_global_var('func_6179')
func_6181_call = mutated_mod.get_global_var('func_6181')
const_6651 = relay.const([7,-5,-7,6,1,10,9,-6,4,2,-2,-8,-7,-7,-9,5,6,-7,-1,10,-6,-5,-4,8,5,-2,4,-6,-8,-2,-1,-5,9,10,6,3,-4,-7,-1,8,6,5,-10,8,5,-9,1,5,-7,-9,9,-6,-2,3,9,-1,1,-4,-8,1,6,-4,-5,6,-6,-6,9,-9,-7,4,2,-1,-3,6,-9,7,-8,-2,-9,-6,5,9,-3,7,-1,-8,-8,7,-5,-3,1,-10,10,-1,-10,4,-8,9,1,3,-7,-6,9,-6,-6,9,-8,6,8,-5,-6,-4,-3,-8,-9,6,-2,-2,-6,5,7,1,2,-3,5,-9,-8,5,-7,4,4,3,4,8,6,-6,-7,8,4,-10,-9,2,-1,7,-2,6,-4,-1,-4,10,2,3,-3,-9,-2,8,7,1,6,7,-10,3,2,2,-5,-8,-10,-8,-3,2,5,1,9,-1,-9,-5,1,-2,-4,-9,-1,-7,9,6,2,9,9,9,-1,4,-7,8,-7,-1,9,9,8,-2,9,10,7,9,1,-5,6,-10,-8,-1,3,5,3,-1,-8,-1,-3,8,-2,10,-3,-4,4,-4,-4,-9,-8,-8,-8,3,4,-5,-4,-10,10,-8,5,-3,-5,5,-1,-8,-9,-9,7,-3,5,1,10,4,3,4,3,9,4,1,8,-4,8,-4,-5,-10,-4,10,4,6,5,5,9,5,-8,1,-6,3,-8,10,3,-6,1,-4,9,10,10,-1,9,-2,-2,3,8,3,2,-3,-1,5,-6,-7,-9,-8,-2,9,7,-2,-6,9,2,2,-3,-10,-6,8,-4,-9,-10,5,8,-7,7,3,6,-9,-4,-4,-8,3,9,-7,4,9,5,-8,-8,-9,6,-8,4,3,-8,6,1,-1,-9,-5,-6,-9,-8,5,3,3,-6,6,-8,-9,-3,-4,4,-5,4,8,-6,-1,3,4,-10,7,-8,9,1,-6,-4,-7,6,1,-3,1,5,8,10,4,-7,-7,6,-2,-5,-9,9,-7,-1,-6,-9,-8,9,-2,5,10,-9,-10,-4,-9,-1,7,-8,4,5,6,6,-8,-7,3,-6,-8,9,-9,-10,-3,-9,-10,7,8,5,7,5,6,8,6,2,1,9,6,10,-10,-10,-8,8,10,-8,-5,-4,7,-2,-10,-6,-10,10,-6,-5,-9,-9,-3,-3,-10,-10,5,8,10,4,6,8,7,-2,-8,1,2,-4,-9,-8,7,-6,5,-4,-3,2,10,-5,-10,2,-4,5,5,10,6,4,9,-6,3,-7,2,-8,-3,-1,-2,1,6,-1,-5,4,1,5,-6,-2,2,-7,-3,7,10,9,1,-7,5,-5,-6,-2,-4,7,-7,-1,2,-3,5,-1,8,-8,-9,5,10,4,10,5,2,-6,-2,-6,-8,-9,1,-9,-9,9,1,-2,5,-9,4,8,7,-3,-4,-5,-9,5,-4,8,-3,-1,-10,-9,1,-7,3,8,-1,1,1,-8,-2,-8,-9,-10,-3,9,6,-8,6,-9,-1,1,10,-9,-9,9,10,-8,8,-1,10,4,-8,2,-8,-4,-10,4,10,8,10,3,-9,-9,10,7,10,6,6,3,-7,-6,4,6,3,3,3,3,6,8,4,6,9,-3,7,10,2,2,5,-2,-2,-2,-3,-7,-9,-5,-10,-6,-2,-5,-4,3,-2,6,3,-6,2,-7,4,-6,-9,-3,-1,-10,-9,-3,2,1,-3,3,-4,8,-6,-1,-3,3,-7,2,7,-2,-9,-9,1,6,6,9,-8,-6,-5,5,3,9,4,1,-3,10,-9,2,-9,-5,8,5,-10,2,-9,3,-5,-5,2,-4,8,-9,-3,7,1,-8,-6,7,-5,1,-6,-7,7,-3,5,-5,1,10,-5,5,10,7,6,2,-2,3,-9,10,10,8,3,10,9,8,-8,-2,-4,-6,2,10,-3,4,5,10,9,3,-3,-6,5,-6,4,-3,4,9,-7,2,3,-2,9,-4,-1,-2,1,7,-1,9,1,-8,-3,-3,-7,10,8,-10,7,-7,2,5,7,-9,4,-8,2,-10,-2,-3,5,-10,-7,-1,-4,-3,8,-10,-9,-5,-5,-6,8,9,-8,-8,-8,-7,7,-7,4,7,-7,9,4,-7,-7,-5,10,3,-10,10,-9,1,2,-7,10,-2,-1,-3,5,3,6,4,-5,3,-10,-1,1,-7,4,1,9,2,-4,-4,-8,10,-6,9,3,-7,6,-6,-2,10,-8,-1,-6,-7,-2,1,8,6,-6,-5,9,-4,10,2,2,1,6,-6,-6,5,4,10,5,-7,-10,-10,4,4,5,-9,9,-8,1,9,9,-7,-2,-4,-2,-10,5,1,-5,7,-10,-8,6,6,-9,5,1,-10,9,-9,-7,5,-8,-1,-1,4,5,-4,5,-8,-7,2,-7,2,-8,-8,2,9,10,-5,-10,-4,-9,6,8,-10,-9,4,7,-1,-9,-2,-2,10,-10,-5,-4,-5,-7,6,-7,4,-9,9,4,-2,10,-3,4,-6,-8,5,2,-4,-3,6,-9,5,9,-5,-3,-8,-1,-7,6,-9,4,6,-6,-5,-3,8,-3,1,6,-7,-2,-3,-7,8,-2,8,1,-4,-6,-5,-3,-10,-7,-8,-6,-3,9,-1,-4,10,6,-4,1,3,8,-6,-2,-5,7,1,8,4,-9,4,4,9,-1,6,-2,9,6,1,4,-6,-1,6,10,-7,-7,-10,6,-10,4,-10,2,6,-9,-5,-5,3,7,-5,3,5,4,10,7,-10,-5,-7,2,-4,-10,-3,9,1,9,-2,8,10,-5,6,8,2,6,2,-3,-10,-7,-10,-9,2,-4,8,-4,-6,9,-8,7,2,-9,3,1,7,-6,-4,-7,-3,-3,-3,-1,3,-10,-9,-2,2,3,5,9,-10,10,-10,-10,-6,-5,-9,9,-8,-4,-7,6,-8,-5,5,-7,-10,8,-2,4,3,-8,-8,4,-9,3,-3,-7,1,5,7,10,-9,-5,9,10,1,-6,-6,-4,-9,10,9,-4,-9,-6,-1,4,-5,10,10,-7,9,-9,4,-9,-2,6,8,4,10,-6,6,-2,8,-6,3,9,-7,-6,-2,5,-6,9,-2,3,-3,-7,-8,-2,3,5,1,6,2,8,-7,-10,-3,-8,10,-9,10,-3,-2,-5,3,1,-5,10,8,-1,-1,9,8,9,1,-2,-3,-9,2,-2,-5,-6,1,-6,-6,-6,-8,2,-4,-3,-10,-6,-3,-10,1,9,4,-6,3,-3,-1,-7,6,2,-2,-7,-1,5,-9,9,6,6,3,-4,4,-7,-8,3,-4,6,-1,8,7,5,8,-4,2,-4,-1,-3,-8,1,7,-2,10,-8,-10,-2,2,2,3,-4,-5,-2,-9,-5,-7,2,10,-6,-1,-1,1,-9,1,2,-7,-7,-5,1,5,-2,2,-6,-10,-5,5,4,-7,8,2,10,-6,-2,-9,6,8,-4,-4,5,3,4,3,-7,-9,-8,6,-10,8,-5,4,-9,-1,-5,5,8,-7,9,10,-2,-10,-2,10,-9,4,5,5,-4,-9,1,6,-4,-4,5,-1,-5,-7,7,8,6,-10,-4,3,3,-5,-7,-4,6,-8,-1,7,-9,-2,-2,4,4,6,-1,4,-2,8,9,-4,1,-7,-8,8,-9,-4,1,-8,4,-1,-5,-10,-3,10,-10,1,4,-4,2,-10,4,-3,-3,-10,-7,3,7,2,-2,5,5,-3,-4,1,-1,-1,6,8,9,10,2,-9,-9,-10,-1,2,3,-7,4,-4,-3,-8,1,10,-5,-5,6,-7,-4,5,-3,3,4,-4,-2,-3,-7,3,8,-7,4,1,7,6,-4,9,9,7,4,4,-2,-10,-8,7,6,9,10,-1,-8,6,-7,-3,-9,-2,4,8,2,4,-10,-8,-9,-8,8,3,6,10,-6,-2,5,-7,-1,-4,-2,-5,-1,9,-9,-6,6,-3,-1,-10,7,-2,-7,1,4,2,-4,-10,-9,7,-8,5,4,-10,2,-4,1,3,-6,7,2,8,6,2,-1,-5,4,4,-7,-5,-2,8,-8,3,-7,-6,10,4,-3,5,-7,-2,-8,1,1,-4,6,8,5,9,-4,3,-8,3,-7,-5,7,-5,4,-10,-3,-9,8,-4,1,-9,8,-8,-10,8,-7,2,-10,9,-5,8,5,7,-7,10,-4,-10,2,-9,-8,8,9,1,8,-3,3,1,1,5,8,-3,-6,-7,2,9,-2,-7,-8,2,2,-9,9,3,7,-7,3,1,4,8,-3,-5,-5,-6,5,-10,-3,10,-10,-1,10,6,-7,-3,-3,6,7,1,-6,-6,6,7,-9,-1,-1,8,10,5,8,-8,-8,-7,6,8,6,4,-1,1,-10,-9,-5,-2,-8,2,-6,9,5,-8,3,-4,9,-10,10,10,-4,-9,-5,-5,10,9,10,-10,3,7,-4,-4,10,5,5,-10,-6,7,-1,-4,-10,5,-2,-6,-2,10,5,-3,2,-6,7,6,-4,5,-5,-6,-2,8,7,9,-6,-9,7,-7,2,-5,-9,2,-4,-1,-6,8,10,-3,10,8,3,9,9,-8,-1,-10,2,6,-1,-8,7,-4,-2,6,9,7,1,-1,-2,-1,-1,-3,-7,10,-7,-2,4,1,-4,-5,-1,8,-6,4,7,-3,8,-3,7,10,10,10,1,10,-10,-2,-7,5,-9,-3,4,-7,2,-7,1,-2,-3,-7,-4,2,1,-5,4,4,-8,-10,-3,-5,6,1,-1,-2,-5,-9,-7,-3,4,-7,-7,-2,7,7,10,4,-4,-5,10,-9,8,6,-8,-4,-8,-3,-3,1,-8,2,10,5,-3,-1,2,9,-10,5,-3,-4,-3,7,-1,-10,7,-8,7,3,6,2,5,-7,-6,3,-5,-2,4,-6,8,-6,5,-1,9,-4,-7,-4,8,7,6,-7,7,-9,1,-7,-9,-5,7,9,-2,-3,-9,-1,-8,5,8,-5,3,9,-9,-4,-9,5,7,-4,-6,7,-1,4,-7,-3,1,4,-2,-8,7,-1,3,4,9,10,-4,1,-7,5,4,-1,-6,6,5,-10,8,-1,-7,-2,5,-2,-8,2,-9,-9,5,-5,6,10,9,-6,-1,-7,-3,5,-10,-5,-3,6,-4,-3,7,-1,-3,-4,10,7,-6,2,-7,7,5,8,9,-7,10,-3,2,-10,6,5,-6,9,-1,1,-7,7,-2,-9,-10,-5,8,7,-3,-5,3,-5,6,-8,3,5,2,2,-9,-5,7,9,-8,-7,3,2,-4,2,-10,-9,4,5,-7,9,9,-5,2,4,-8,4,7,-7,4,-2,-2,9,4,1,10,7,4,8,4,9,-4,-5,-1,-3,2,7,-4,-1,10,-2,-3,-2,9,-4,-3,-6,6,-10,-4,1,-8,-1,5,-3,-7,7,-1,7,-10,-6,-4,2,6,8,-4,-7,7,5,3,9,2,-7,9,-5,-7,-4,3,-2,7,-10,-10,1,6,-9,3,-8,6,-8,-1,3,-3,-10,2,-7,3,8,-4,-1,7,1,10,7,-7,2,-9,8,4,10,2,-5,-5,-10,-3,1,-3,-4,-4,-10,9,8,6,1,6,6,-9,6,-5,2,7,10,6,2,8,-8,3,4,-6,9,-6,-1,-7,6,-3,-2,2,2,-7,-7,-6,1,-4,9,9,1,7,10,-1,8,7,-4,-3,6,-1,-6,-9,-6,-3,1,5,7,6,-7,-6,-10,-4,-1,-1,8,1,10,-10,-10,-3,5,5,-1,-1,-7,-5,1,1,8,-10,-5,8,-10,-4,-1,3,7,8,-8,-8,8,-4,-5,-1,-9,7,4,1,-6,-4,4,-3,-5,10,-1,-10,2,-10,-9,9,-3,-3,-4,9,-3,-6,-10,9,9,-9,-10,1,-3,10,-1,-1,5,-9,2,8,-1,-4,5,-6,-5,-5,6,-8,7,2,-6,2,8,-2,-7,6,7,1,-3,6,-2,2,9,8,7,5,4,7,-7,2,9,4,-10,-8,1,-3,-7,2,5,3,9,-7,3,5,-1,6,9,-8,4,-3,1,10,9,5,2,-7,-6,-6,-6,-1,-9,9,-8,6,2,-8,3,3,10,9,-8,4,1,-4,-10,6,-3,-9,9,-2,-5,5,8,4,-8,9,9,9,-3,9,-8,-5,9,2,1,10,-6,-6,3,-2,4,6,-5,5,7,-1,10,-8,10,-6,3,7,-1,4,4,6,9,3,-6,-2,-4,-10,7,-3,7,7,5,1,-8,9,-3,2,-6,6,5,7,-8,-4,-4,-5,-8,4,8,-1,-2,-2,7,9,-1,5,2,5,-8,9,10,6,-6,-1,-8,3,-3,7,9,3,-2,5,-10,-3,1,-2,-6,9,1,-6,-2,-8,-4,-7,10,10,-8,-5], dtype = "uint64")#candidate|6651|(2400,)|const|uint64
call_6650 = relay.TupleGetItem(func_6179_call(relay.reshape(const_6651.astype('uint64'), [2400,])), 0)
call_6652 = relay.TupleGetItem(func_6181_call(relay.reshape(const_6651.astype('uint64'), [2400,])), 0)
output = relay.Tuple([call_6644,call_6650,const_6651,])
output2 = relay.Tuple([call_6645,call_6652,const_6651,])
func_6656 = relay.Function([], output)
mod['func_6656'] = func_6656
mod = relay.transform.InferType()(mod)
mutated_mod['func_6656'] = func_6656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6656_call = mutated_mod.get_global_var('func_6656')
call_6657 = func_6656_call()
output = call_6657
func_6658 = relay.Function([], output)
mutated_mod['func_6658'] = func_6658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5998_call = mod.get_global_var('func_5998')
func_5999_call = mutated_mod.get_global_var('func_5999')
call_6735 = relay.TupleGetItem(func_5998_call(), 0)
call_6736 = relay.TupleGetItem(func_5999_call(), 0)
var_6739 = relay.var("var_6739", dtype = "float32", shape = (6, 5, 14))#candidate|6739|(6, 5, 14)|var|float32
bop_6740 = relay.maximum(call_6735.astype('int16'), relay.reshape(var_6739.astype('int16'), relay.shape_of(call_6735))) # shape=(6, 5, 14)
bop_6743 = relay.maximum(call_6736.astype('int16'), relay.reshape(var_6739.astype('int16'), relay.shape_of(call_6736))) # shape=(6, 5, 14)
output = bop_6740
output2 = bop_6743
func_6754 = relay.Function([var_6739,], output)
mod['func_6754'] = func_6754
mod = relay.transform.InferType()(mod)
var_6755 = relay.var("var_6755", dtype = "float32", shape = (6, 5, 14))#candidate|6755|(6, 5, 14)|var|float32
output = func_6754(var_6755)
func_6756 = relay.Function([var_6755], output)
mutated_mod['func_6756'] = func_6756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5190_call = mod.get_global_var('func_5190')
func_5192_call = mutated_mod.get_global_var('func_5192')
call_6761 = relay.TupleGetItem(func_5190_call(), 0)
call_6762 = relay.TupleGetItem(func_5192_call(), 0)
output = call_6761
output2 = call_6762
func_6785 = relay.Function([], output)
mod['func_6785'] = func_6785
mod = relay.transform.InferType()(mod)
output = func_6785()
func_6786 = relay.Function([], output)
mutated_mod['func_6786'] = func_6786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5743_call = mutated_mod.get_global_var('func_5743')
call_6825 = relay.TupleGetItem(func_5742_call(), 0)
call_6826 = relay.TupleGetItem(func_5743_call(), 0)
func_5069_call = mod.get_global_var('func_5069')
func_5072_call = mutated_mod.get_global_var('func_5072')
var_6836 = relay.var("var_6836", dtype = "float64", shape = (420,))#candidate|6836|(420,)|var|float64
call_6835 = relay.TupleGetItem(func_5069_call(relay.reshape(var_6836.astype('float64'), [70, 6])), 0)
call_6837 = relay.TupleGetItem(func_5072_call(relay.reshape(var_6836.astype('float64'), [70, 6])), 0)
func_6785_call = mod.get_global_var('func_6785')
func_6786_call = mutated_mod.get_global_var('func_6786')
call_6874 = func_6785_call()
call_6875 = func_6785_call()
func_5305_call = mod.get_global_var('func_5305')
func_5306_call = mutated_mod.get_global_var('func_5306')
call_6879 = func_5305_call()
call_6880 = func_5305_call()
output = relay.Tuple([call_6825,call_6835,var_6836,call_6874,call_6879,])
output2 = relay.Tuple([call_6826,call_6837,var_6836,call_6875,call_6880,])
func_6885 = relay.Function([var_6836,], output)
mod['func_6885'] = func_6885
mod = relay.transform.InferType()(mod)
var_6886 = relay.var("var_6886", dtype = "float64", shape = (420,))#candidate|6886|(420,)|var|float64
output = func_6885(var_6886)
func_6887 = relay.Function([var_6886], output)
mutated_mod['func_6887'] = func_6887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5148_call = mod.get_global_var('func_5148')
func_5149_call = mutated_mod.get_global_var('func_5149')
call_6959 = relay.TupleGetItem(func_5148_call(), 0)
call_6960 = relay.TupleGetItem(func_5149_call(), 0)
func_564_call = mod.get_global_var('func_564')
func_567_call = mutated_mod.get_global_var('func_567')
const_6963 = relay.const([3.364882,-6.267888,5.876387,-7.044340,-3.553121,6.920767,-6.707765,-1.696263,0.505654,-9.928791,-7.792187,-4.189621,-7.224399,-5.982241,8.705965,-0.876902,0.565198,-8.931557,6.848314,-5.206899,1.156560,-3.045908,-3.185642,7.096600,-6.495853,7.330455,6.482744,-4.965983,8.573623,8.646806,-0.573978,5.533642,-6.028946,-1.078604,-0.296326,3.947582,-7.025500,-9.645252,0.027351,-1.644970,0.931676,-8.480083,-7.029418,-1.372058,-1.557981,-6.723723,1.164219,-8.379382,-7.310501,6.063265,-7.553735,-1.060706,-5.102460,5.918311,-8.824196,4.426914,-5.949740,-6.704473,-6.574427,-6.573980,7.828767,-5.221799,-3.738882,-0.631078,8.546679,-4.065592,9.953092,5.096249,8.317105,3.779504,-7.101610,2.117648,-3.134235,7.768652,7.469138,4.127004,6.459769,9.641850,2.593705,-2.743653,-6.659338,-1.689636,4.893321,4.133817,-0.636249,-5.759221,-3.550642,8.153680,-8.846636,9.672885,-0.511703,-5.794247,-3.560015,-3.032087,8.754370,7.390230,2.566879,3.063117,0.328188,8.439826,7.393183,-0.729991,0.973734,3.742364,8.441203,3.352679,1.404371,5.873137,-9.177780,0.873003,-7.838325,2.471192,-9.736908,-1.805092,7.751287,-5.165678,3.624679,-1.214319,-2.371508,-3.000008,0.939446,-3.124025,6.703562,-8.722821,0.760052,-5.794502,-3.201013,5.278015,-2.672156,-9.586817,7.345237,7.002092,-8.842262,6.081712,6.705542,-9.375570,-7.786339,6.469047,-8.269922,1.668239,-2.712913,8.360910,6.652383,0.130099,-8.002158,2.418376,-9.294550,-3.932871,1.247363,-3.414721,-7.753835,0.028736,6.310232,-5.550394,-2.421589,4.401101,9.405673,-8.947006,9.142690,5.858080,8.225233,4.397244,0.641497,-7.643283,4.146389,7.420054,7.825908,-9.276672,7.986097,-8.415412,-0.593559,-5.181198,-6.384751,-0.246907,4.948295,7.509919,2.468209,-4.277332,5.164482,8.632717,5.261318,-9.542836,8.084278,4.687160,9.889701,-4.201218,1.881042,-2.926836,4.401563,9.433378,-4.059800,-3.747239,9.764091,-9.523905,3.496120,-5.600608,-4.910767,-9.812804,8.619411,-0.074834,6.564983,6.206396,-9.154507,9.642735,-8.159825,-4.599623,6.978119,-6.063847,1.954023,1.592558,-4.287837,-8.317399,-7.771927,-2.200626,-1.338330,7.098426,-7.790432,8.441754,-9.047458,-5.957086,3.033649,5.383507,8.031944,-2.051786,-9.147592,-4.335093,1.283137,1.156130,1.657540,9.295988,-7.679530,1.365738,3.740883,1.542263,2.150313,5.011764,-0.927428,-0.441467,-5.786530,4.631783,-3.136760,-2.246933,-4.311858,-9.959822,4.908724,6.589874,-4.759106,-5.056963,0.294771,8.086057,-3.935208,-3.611873,4.667910,-4.734518,7.398639,-1.958999,0.938735,5.794499,-3.754611,7.745928,1.874204,3.964078,-6.570170,-2.096761,-3.389713,-4.413071,-1.120257,5.648024,0.025844,4.388912,4.990286,8.675295,-7.819846,-6.899387,-5.390002,5.394223,3.197656,6.256471,-0.147095,8.040148,9.881737,1.108849,-5.641206,0.961326,4.128684,-9.653199,-1.770719,7.101855,-4.432005,0.266100,-6.722366,4.727411,5.684588,6.118283,-7.204908,-9.563819,-8.728947,0.557045,8.152185,6.176514,8.963653,9.057857,8.464229,2.911630,1.504214,-0.287276,7.184209,6.272719,-9.112045,-7.380799,7.030856,-4.322071,7.808741,7.314994,-3.718337,1.583617,-9.691218,2.807151,6.443641,-9.689530,9.781441,-0.868929,-4.669696,5.310817,-5.319496,5.562056,6.436615,-7.118725,3.219383,5.564934,-3.353512,2.357821,7.305907,-7.758633,5.092259,2.794565,4.872188,9.349818,4.033838,-7.849771,1.817107,-1.274060,7.581215,9.703389,-9.254720,-9.896560,4.461697,6.901361,-0.462701,5.806719,-2.274115,-9.828631,8.936985,4.284560,-8.675210,-9.115917,5.738333,-8.307758,4.542805,1.555476,-3.336033,-2.574241,-7.707847,2.365984,7.730980,-7.485783,2.743993,9.020368,5.627342,-1.127069,-3.573554,0.612475,0.750161,-3.042839,6.851662,-2.689365,0.491701,0.883320,-2.811225,-5.929880,4.217598,-0.853982,2.337565,8.786970,-3.947173,8.563835,2.091343,9.966739,-7.907139,6.557996,2.549236,-0.707971,8.775421,-0.938597,-2.783529,3.829967,-7.381274,-6.556810,-9.870903,-6.785226,7.105490,0.493562,-1.467366,1.505025,2.765663,-1.427525,-4.844861,4.891315,-6.237041,-8.082117,9.372441,-1.275941,5.895244,4.784268,8.464718,-2.020725,0.700707,0.870518,-6.125956,4.427176,9.997434,0.687600,-9.886028,3.866522,-5.814288,9.268643,-9.501204,3.338009,-8.592573,3.064305,-3.220543,3.304229,9.524569,3.265466,8.619294,9.075768,-1.230913,1.024360,-4.578470,2.310459,-7.078872,-3.533885,1.831366,-9.675147,-6.483428,4.218039,9.856450,8.330135,4.565219,8.731049,5.047057,8.521473,2.042593,-8.059697,-1.391197,-1.144790,-0.882179,2.065367,0.049914,5.650151,1.807439,-3.707469,7.440494,1.927803,0.822390,-8.932698,-6.064896,-7.275401,-8.260971,7.025724,3.810387,3.841603,-5.015972,4.488792,-8.032676,5.736973,6.560564,-3.312347,8.017963,2.220150,-6.379137,2.668633,4.573595,-0.116606,-8.121365,-8.406673,-4.582824,1.386730,-2.190329,-7.284329,-1.328282,-6.711084,4.721911,-5.600277,8.365681,5.730011,1.458791,-5.770170,8.111973,-8.712819,-4.550496,0.804007,-8.025955,0.628798,6.219403,0.229324,3.771082,0.236518,8.120643,-3.178519,5.505121,-8.990001,-6.407758,0.784434,-9.077616,-2.812129,9.287997,2.682510,-1.519691,-1.129013,-0.561112,8.596444,-3.340107,-8.966399,0.199179,-2.194762,8.978321,0.736295,9.607295,4.429716,7.183861,-3.928115,5.708319,-2.160108,-4.053543,9.737828,2.135243,-0.249723,3.036657,9.923574,9.380399,4.659064,-3.296030,0.824812,3.764623,3.362144,-5.410296,9.330841,1.013791,5.948967,2.589106,-3.726017,-1.689944,-3.763145,-0.787099,-9.268228,1.419966,-6.849250,-1.190128,0.828066,-8.526937,-1.303930,-2.937618,-1.872577,-1.968933,7.998789,-8.767806,-4.134031,-1.046480,-9.854805,-2.201665,1.939466,-0.662092,8.656482,4.334342,-7.289124,-8.746217,-1.949559,6.484403,-5.456587,-9.393959,8.912450,-2.274016,1.070626,-9.332555,9.013735,-8.619649,-5.907430,-2.703942,-3.203995,-1.468802,9.693825,9.246184,6.116591,-5.076215,-3.976983,5.460182,8.283580,9.758366,-3.103158,-6.833897,-2.371700,-5.825336,9.153954,7.564726,-8.150568,-3.863098,-0.474681,8.376199,-5.985152,4.850989,0.552084,-0.094425,-4.591214,0.975867,9.671371,-3.111758,4.598279,-1.557091,9.949485,-5.461803,6.981632,8.071641,-5.296585,2.477902,-8.273989,-2.850417,9.961482,-0.420813,-8.902482,5.764729,1.676089,-5.927849,-9.497414,4.008737,-6.821320,-8.584762,1.382431,1.516773,-9.583214,-6.264868,2.405244,-1.251648,-5.870212,2.029173,3.833333,-1.661695,-0.926645,7.936642,-4.402717,6.333477,-8.524691,-0.957637,0.386819,1.150512,3.712321,8.719549,-4.759449,7.258092,-1.599363,-0.746276,9.950059,2.315563,5.010361,2.473572,9.515043,-3.380456,-5.203082,3.711104,-9.170956,5.014332,9.777025,-5.507476,8.956310,-3.533006], dtype = "float32")#candidate|6963|(675,)|const|float32
var_6964 = relay.var("var_6964", dtype = "float64", shape = (7,))#candidate|6964|(7,)|var|float64
call_6962 = relay.TupleGetItem(func_564_call(relay.reshape(const_6963.astype('float32'), [9, 15, 5]), relay.reshape(var_6964.astype('float64'), [7,]), ), 1)
call_6965 = relay.TupleGetItem(func_567_call(relay.reshape(const_6963.astype('float32'), [9, 15, 5]), relay.reshape(var_6964.astype('float64'), [7,]), ), 1)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
var_6968 = relay.var("var_6968", dtype = "float32", shape = (312, 1))#candidate|6968|(312, 1)|var|float32
call_6967 = relay.TupleGetItem(func_3442_call(relay.reshape(var_6968.astype('float32'), [13, 12, 2])), 1)
call_6969 = relay.TupleGetItem(func_3444_call(relay.reshape(var_6968.astype('float32'), [13, 12, 2])), 1)
func_6404_call = mod.get_global_var('func_6404')
func_6408_call = mutated_mod.get_global_var('func_6408')
const_6971 = relay.const([-3.105942,8.645908,9.594395,-4.639658,-1.608019,-8.644919,7.172126,8.850393,-1.541934,5.969447,-7.542260,-1.044521,-4.379454,-8.974073,-0.105756,-0.578970,0.145398,-1.105716,-7.628671,-2.914630,6.798411,6.049352,2.116034,9.327732,-0.082769,5.754100,-2.352552,5.538056,-6.093535,-8.016489,7.166134,8.670758,-7.067725,4.746697,-4.578176,9.770660,-7.751621,-7.039460,8.000722,-0.489344,-9.106969,-5.444893,5.375161,5.639814,0.841861,3.919312,1.545975,8.428737,-3.242492,-5.687428,-7.144723,9.030381,-8.624031,6.048789,7.603018,7.387942,2.746829,-6.994796,0.477949,-7.431939,3.195062,-8.400925,-3.018099,-7.305432,-7.311825,9.498479,-8.178477,-1.526310,9.769997,-4.552655,9.012948,-8.874553,8.331502,0.807777,7.307567,-2.809801,8.163292,0.445328,-3.465183,6.176084,-0.069170,-8.515864,2.837948,3.891870,-6.264168,4.598586,9.253202,-0.801415,-7.445132,6.201913,7.233036,-4.181838,-7.082972,-5.994060,9.524461,-9.908835,-2.287918,-5.934364,5.869610,-4.726143,6.274413,8.413249,-8.332325,2.095228,5.191993,-0.786508,-2.853635,-5.388958,-7.824998,-9.784627,-9.399020,0.551860,9.120808,-4.619443,5.761345,-4.773905,-8.044223,9.939449,6.560333,3.025571,7.387372,9.910035,-2.250772,1.611729,-4.326422,-3.346570,-0.648726,1.163648,6.852746,-5.565903,8.989944,8.750864,-4.859762,-0.763182,0.708117,-0.852836,3.151851,7.800822,4.983196,-8.199786,-1.788130,-8.258267,-1.521878,-8.231164,1.034640,-3.268453,6.405426,-8.303093,-3.352972,1.727110,-2.628143,-8.860306,3.718300,4.287277,-5.021508,-3.510281,-0.556703,9.933692,-6.760348,-8.511648,-6.146306,-2.413856,-8.031799,1.523658,7.700799,2.583274,8.675155,9.239976,6.483070,9.426845,-6.371337,-0.857878,8.023796,6.557401,8.312299,9.052813,-7.139241,9.337397,8.802093,1.524682,2.235498,-5.695686,1.520102,9.420169,1.373958,-1.993831,-6.152223,-8.045419,1.070034,2.896168,-8.379296,-2.927859,9.937136,4.277199,4.706838,7.343233,8.830775,3.919015,-7.881913,9.562918,8.006428,0.924880,-5.663960,3.696420,-5.351604,-9.868001,-4.416477,7.725882,-2.662515,-7.620239,-4.411330,-6.217856,4.820032,-9.404773,-0.047666,1.492982,5.529944,2.317925,4.299460,5.970918,-5.722944,-0.678674,6.540398,-1.854779,-3.571166,7.414715,-1.663546,9.694268,8.395485,4.711577,0.093535,5.142163,-6.058097,5.208948,-9.114551,8.153459,-5.773632,3.055635,6.982026,-1.849498,-0.445859,-6.598446,7.878205,-6.124482,8.960420,3.856562,0.359393,-9.387348,7.009398,1.629565,-2.706752,-5.507069,-6.027307,-0.884159,4.062746,7.185324,-6.897081,1.274670,2.914694,-7.681607,9.212330,-4.770427,6.024199,-7.796237,-2.949395,-4.772932,-1.116241,0.615969,-8.563711,6.211303,-1.208857,5.242748,-2.655626,9.609357,-9.733609,7.443676,5.037266,-0.278596,-0.458207,5.380979,-8.805835,6.103311,4.468591,7.039316,8.110374,5.674748,-3.635849,-3.607138,0.943223,-2.986396,-3.379102,-8.404116,7.377600,-8.545764,8.701144,-4.331332,8.860616,0.611188,6.649281,-3.597525,9.804404,-2.454697,-6.149160,-3.259920,-7.613430,9.306019,-6.911755,-0.845212,9.139725,3.227148,2.505683,-9.348672,-2.979032,2.283046,0.646831,-0.495833,2.481037,-3.079446,9.668010,-9.314782,1.399632,-7.492390,9.942451,-2.424915,5.281717,7.024171,7.793780,2.003399,1.388606,9.118029,-4.922079,5.466685,4.958537,9.552341,5.757947,-7.757138,-5.993355,-8.741121,-3.815905,-6.621182,5.217356,-3.883449,5.596797,-7.433818,-6.014633,2.712903,2.436082,-6.087457,-7.112168,7.112791,0.033843,6.537725,3.484998,8.470008,-4.578132,8.910850,-5.143724,-4.111629,-6.938106,-5.736945,3.373846,8.397244,7.883626,1.643798,-6.735469,8.406061,-0.470751,8.576260,-5.078533,1.030592,-1.139246,-0.930388,-3.958765,-5.530229,6.641114,3.738741,2.622563,9.865848,4.137278,-3.804730,-3.297757,2.005309,-8.828738,-9.100568,-3.529485,0.825392,-8.163877,8.798550,8.575729,2.096268,-9.787570,9.685228,-7.739423,-2.801942,8.089978,5.459828,-6.440408,-8.081636,6.620284,-0.510666,6.683054,-0.756585,3.666500,-7.800783,4.499381,-8.891232,9.554454,9.764843,-0.871530,4.788732,3.983292,7.006283,5.541517,-7.799544,-4.722833,-8.912769,5.490300,-3.317765,-1.231698,4.903414,-1.075698,-6.530506,1.344158,0.739457,8.864160,5.564623,5.422979,3.431861,-6.505681,5.086853,-1.156640,-6.487956,-9.726937,-2.762583,-9.638727,2.442251,7.543124,-1.713065,4.489160,5.868889,-2.349144,5.070853,6.212724,-5.512466,5.864129,8.982481,-4.241004,0.735227,-6.785645,4.071528,6.923333,1.955154,-3.734211,6.232090,-2.991502,5.314200,5.479161,-6.771971,0.454602,-0.240066,4.838189,-2.957986,-8.847496,-5.437477,9.281628,6.777396,-9.631904,-3.772417,-8.020438,4.436213,-5.004070,5.093406,7.849958,-0.460787,-8.980623,1.276827,-7.812251,0.954452,8.437889,6.556842,-2.759137,2.281888,-2.228062,8.727355,2.663115,3.581234,4.383175,4.310372,-3.018591,0.211604,3.853443,-6.650734,-6.365262,-0.306316,-5.896918,2.360966,-7.306181,8.234971,-1.099385,2.661745,2.721809,6.534601,3.197917,-5.657930,-9.376724,-9.362001,-2.493666,-1.547261,3.365020,0.701935,-3.139335,-3.577009,8.036969,0.274053,-6.256865,-5.923970,3.245941,8.507173,-2.101300,9.460955,9.877044,-6.038013,-6.245490,3.889693,8.540043,0.089132,3.685853,-5.560571,-7.618002,-6.959130,-1.221845,-7.373252,-5.089579,-3.923609,1.674990,0.586775,-9.426298,1.168436,-7.797327,-5.667515,6.903957,-4.266154,8.352467,3.252662,-9.222114,-5.634436,-1.101546,7.130419,-6.200491,-2.204230,4.427245,5.264096,7.847240,-4.152650,6.468313,-6.573666,7.216522,4.935395,4.709813,-5.862535,-5.504136,0.820799,8.668754,1.095563,-7.500250,-4.598215,4.028959,3.248247,-3.428501,6.342695,-8.404022,-9.754578,-3.278594,-2.502193,-6.506980,2.341297,-6.242285,-0.928241,6.218150,1.713229,2.286594,1.509020,6.568393,9.814587,3.686327,7.424035,-2.163275,1.968905,9.900766,1.369787,-0.606908,-9.902954,3.640594,-5.110097,-6.559570,-1.323351,0.529572,7.005128,0.133682,-9.895408], dtype = "float64")#candidate|6971|(600,)|const|float64
call_6970 = relay.TupleGetItem(func_6404_call(relay.reshape(const_6971.astype('float64'), [4, 15, 10]), relay.reshape(const_6971.astype('float64'), [4, 15, 10]), ), 1)
call_6972 = relay.TupleGetItem(func_6408_call(relay.reshape(const_6971.astype('float64'), [4, 15, 10]), relay.reshape(const_6971.astype('float64'), [4, 15, 10]), ), 1)
func_6479_call = mod.get_global_var('func_6479')
func_6481_call = mutated_mod.get_global_var('func_6481')
call_6976 = func_6479_call()
call_6977 = func_6479_call()
output = relay.Tuple([call_6959,call_6962,const_6963,var_6964,call_6967,var_6968,call_6970,const_6971,call_6976,])
output2 = relay.Tuple([call_6960,call_6965,const_6963,var_6964,call_6969,var_6968,call_6972,const_6971,call_6977,])
func_6981 = relay.Function([var_6964,var_6968,], output)
mod['func_6981'] = func_6981
mod = relay.transform.InferType()(mod)
mutated_mod['func_6981'] = func_6981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6981_call = mutated_mod.get_global_var('func_6981')
var_6983 = relay.var("var_6983", dtype = "float64", shape = (7,))#candidate|6983|(7,)|var|float64
var_6984 = relay.var("var_6984", dtype = "float32", shape = (312, 1))#candidate|6984|(312, 1)|var|float32
call_6982 = func_6981_call(var_6983,var_6984,)
output = call_6982
func_6985 = relay.Function([var_6983,var_6984,], output)
mutated_mod['func_6985'] = func_6985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5897_call = mod.get_global_var('func_5897')
func_5899_call = mutated_mod.get_global_var('func_5899')
call_7006 = func_5897_call()
call_7007 = func_5897_call()
output = relay.Tuple([call_7006,])
output2 = relay.Tuple([call_7007,])
func_7010 = relay.Function([], output)
mod['func_7010'] = func_7010
mod = relay.transform.InferType()(mod)
mutated_mod['func_7010'] = func_7010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7010_call = mutated_mod.get_global_var('func_7010')
call_7011 = func_7010_call()
output = call_7011
func_7012 = relay.Function([], output)
mutated_mod['func_7012'] = func_7012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5581_call = mod.get_global_var('func_5581')
func_5582_call = mutated_mod.get_global_var('func_5582')
call_7036 = relay.TupleGetItem(func_5581_call(), 1)
call_7037 = relay.TupleGetItem(func_5582_call(), 1)
uop_7047 = relay.rsqrt(call_7036.astype('float32')) # shape=(10, 11, 16)
uop_7049 = relay.rsqrt(call_7037.astype('float32')) # shape=(10, 11, 16)
output = relay.Tuple([uop_7047,])
output2 = relay.Tuple([uop_7049,])
func_7059 = relay.Function([], output)
mod['func_7059'] = func_7059
mod = relay.transform.InferType()(mod)
mutated_mod['func_7059'] = func_7059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7059_call = mutated_mod.get_global_var('func_7059')
call_7060 = func_7059_call()
output = call_7060
func_7061 = relay.Function([], output)
mutated_mod['func_7061'] = func_7061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5268_call = mod.get_global_var('func_5268')
func_5270_call = mutated_mod.get_global_var('func_5270')
call_7071 = relay.TupleGetItem(func_5268_call(), 0)
call_7072 = relay.TupleGetItem(func_5270_call(), 0)
output = call_7071
output2 = call_7072
func_7093 = relay.Function([], output)
mod['func_7093'] = func_7093
mod = relay.transform.InferType()(mod)
mutated_mod['func_7093'] = func_7093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7093_call = mutated_mod.get_global_var('func_7093')
call_7094 = func_7093_call()
output = call_7094
func_7095 = relay.Function([], output)
mutated_mod['func_7095'] = func_7095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5743_call = mutated_mod.get_global_var('func_5743')
call_7116 = relay.TupleGetItem(func_5742_call(), 0)
call_7117 = relay.TupleGetItem(func_5743_call(), 0)
func_4459_call = mod.get_global_var('func_4459')
func_4461_call = mutated_mod.get_global_var('func_4461')
call_7130 = relay.TupleGetItem(func_4459_call(relay.reshape(call_7116.astype('float64'), [10, 11, 16])), 1)
call_7131 = relay.TupleGetItem(func_4461_call(relay.reshape(call_7116.astype('float64'), [10, 11, 16])), 1)
uop_7151 = relay.atanh(call_7116.astype('float32')) # shape=(10, 11, 16)
uop_7153 = relay.atanh(call_7117.astype('float32')) # shape=(10, 11, 16)
output = relay.Tuple([call_7130,uop_7151,])
output2 = relay.Tuple([call_7131,uop_7153,])
func_7164 = relay.Function([], output)
mod['func_7164'] = func_7164
mod = relay.transform.InferType()(mod)
mutated_mod['func_7164'] = func_7164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7164_call = mutated_mod.get_global_var('func_7164')
call_7165 = func_7164_call()
output = call_7165
func_7166 = relay.Function([], output)
mutated_mod['func_7166'] = func_7166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5148_call = mod.get_global_var('func_5148')
func_5149_call = mutated_mod.get_global_var('func_5149')
call_7181 = relay.TupleGetItem(func_5148_call(), 2)
call_7182 = relay.TupleGetItem(func_5149_call(), 2)
output = relay.Tuple([call_7181,])
output2 = relay.Tuple([call_7182,])
func_7191 = relay.Function([], output)
mod['func_7191'] = func_7191
mod = relay.transform.InferType()(mod)
mutated_mod['func_7191'] = func_7191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7191_call = mutated_mod.get_global_var('func_7191')
call_7192 = func_7191_call()
output = call_7192
func_7193 = relay.Function([], output)
mutated_mod['func_7193'] = func_7193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6247_call = mutated_mod.get_global_var('func_6247')
call_7360 = relay.TupleGetItem(func_6245_call(), 2)
call_7361 = relay.TupleGetItem(func_6247_call(), 2)
output = relay.Tuple([call_7360,])
output2 = relay.Tuple([call_7361,])
func_7390 = relay.Function([], output)
mod['func_7390'] = func_7390
mod = relay.transform.InferType()(mod)
output = func_7390()
func_7391 = relay.Function([], output)
mutated_mod['func_7391'] = func_7391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7396 = relay.var("var_7396", dtype = "float64", shape = (5, 9, 16))#candidate|7396|(5, 9, 16)|var|float64
uop_7397 = relay.log(var_7396.astype('float64')) # shape=(5, 9, 16)
uop_7403 = relay.log10(var_7396.astype('float64')) # shape=(5, 9, 16)
bop_7412 = relay.logical_and(var_7396.astype('bool'), relay.reshape(uop_7397.astype('bool'), relay.shape_of(var_7396))) # shape=(5, 9, 16)
func_6785_call = mod.get_global_var('func_6785')
func_6786_call = mutated_mod.get_global_var('func_6786')
call_7416 = func_6785_call()
call_7417 = func_6785_call()
func_5203_call = mod.get_global_var('func_5203')
func_5206_call = mutated_mod.get_global_var('func_5206')
const_7425 = relay.const([4,-2,5,-7,1,10,4,-5,8,6,7,9,3,-4,-3,1,-5,2,-2,-8,-7,-3,10,6,9,7,-5,5,-8,1,2,-9,-4,4,9,8,-2,9,-8,10,-6,5,-3,1,1,-5,3,-9,-4,-4,-7,-9,5,3,-2,3,1,-1,-8,8,-2,2,8,6,-4,-4,-5,2,-2,3,7,4,-4,4,5,9,8,5,-3,-7,1,8,4,-6,-6,-10,5,-2,-7,8,10,-9,9,4,7,8,1,-4,7,-1,8,-5,5,1,6,4,-9,4,-1,9,-8,-7,-5,5,-2,-7,8,-3,-1,-5,-4,-3,-3,10,-3,-1,-7,1,-9,6,-3,-2,-4,1,9,-2,-4,3,-10,-1,-1,-8,-1,10,7,1,-8,-8,10,-10,7,10,-7,-1,8,-3,-4,-9,10,-5,7,7,-1,-10,6,9,-3,9,6,8,9,2,2,8,-3,1,1,5,-4,-4,-6,6,-4,3,4,-3,-5,-6,-8,-1,1,9,1,-5,-9,-5,-6,8,5,-9,3,2,8,-4,-6,5,8,-9,-10,-2,-7,-7,10,-2,-5,4,2,-5,-7,5,4,3,8,1], dtype = "int32")#candidate|7425|(224,)|const|int32
call_7424 = relay.TupleGetItem(func_5203_call(relay.reshape(const_7425.astype('int32'), [16, 2, 7]), relay.reshape(const_7425.astype('int32'), [16, 2, 7]), ), 0)
call_7426 = relay.TupleGetItem(func_5206_call(relay.reshape(const_7425.astype('int32'), [16, 2, 7]), relay.reshape(const_7425.astype('int32'), [16, 2, 7]), ), 0)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
const_7436 = relay.const([-3,5,4,-8,-5,-7,-1,4,2,-5,-4,-9,-7,7,3,-9,8,4,2,-9,10,-9,9,-4,1,-7,10,-1,7,5,9,-8,7,-1,8,6,-5,9,-6,-4,2,3,-9,7,2,8,7,10,-2,3,-10,5,1,9,7,-6,9,9,4,4,1,9,1,-1,8,-10,10,4,-1,3,-8,-5,10,5,-1,10,-2,-9,6,-6,2,5,-3,-7,1,2,-9,-6,-2,-3,-1,-4,-1,8,3,-6,-1,-10,9,9,-7,1,8,7,8,5,-4,-4,4,-4,5,-3,-2,-1,2,3,10,7,1,10,-3,-9,-3,-2,5,3,10,6,-1,-3,8,-4,7,-8,5,-8,-10,5,-1,10,5,-6,1,6,-1,-7,-4,7,2,2], dtype = "int16")#candidate|7436|(150,)|const|int16
call_7435 = relay.TupleGetItem(func_3837_call(relay.reshape(const_7436.astype('int16'), [10, 3, 5])), 2)
call_7437 = relay.TupleGetItem(func_3839_call(relay.reshape(const_7436.astype('int16'), [10, 3, 5])), 2)
bop_7449 = relay.right_shift(uop_7403.astype('int16'), relay.reshape(bop_7412.astype('int16'), relay.shape_of(uop_7403))) # shape=(5, 9, 16)
uop_7457 = relay.asinh(bop_7412.astype('float64')) # shape=(5, 9, 16)
var_7465 = relay.var("var_7465", dtype = "float64", shape = (5, 9, 16))#candidate|7465|(5, 9, 16)|var|float64
bop_7466 = relay.bitwise_and(uop_7457.astype('uint64'), relay.reshape(var_7465.astype('uint64'), relay.shape_of(uop_7457))) # shape=(5, 9, 16)
output = relay.Tuple([call_7416,call_7424,const_7425,call_7435,const_7436,bop_7449,bop_7466,])
output2 = relay.Tuple([call_7417,call_7426,const_7425,call_7437,const_7436,bop_7449,bop_7466,])
func_7472 = relay.Function([var_7396,var_7465,], output)
mod['func_7472'] = func_7472
mod = relay.transform.InferType()(mod)
mutated_mod['func_7472'] = func_7472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7472_call = mutated_mod.get_global_var('func_7472')
var_7474 = relay.var("var_7474", dtype = "float64", shape = (5, 9, 16))#candidate|7474|(5, 9, 16)|var|float64
var_7475 = relay.var("var_7475", dtype = "float64", shape = (5, 9, 16))#candidate|7475|(5, 9, 16)|var|float64
call_7473 = func_7472_call(var_7474,var_7475,)
output = call_7473
func_7476 = relay.Function([var_7474,var_7475,], output)
mutated_mod['func_7476'] = func_7476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7191_call = mod.get_global_var('func_7191')
func_7193_call = mutated_mod.get_global_var('func_7193')
call_7539 = relay.TupleGetItem(func_7191_call(), 0)
call_7540 = relay.TupleGetItem(func_7193_call(), 0)
output = call_7539
output2 = call_7540
func_7543 = relay.Function([], output)
mod['func_7543'] = func_7543
mod = relay.transform.InferType()(mod)
output = func_7543()
func_7544 = relay.Function([], output)
mutated_mod['func_7544'] = func_7544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7164_call = mod.get_global_var('func_7164')
func_7166_call = mutated_mod.get_global_var('func_7166')
call_7548 = relay.TupleGetItem(func_7164_call(), 1)
call_7549 = relay.TupleGetItem(func_7166_call(), 1)
output = call_7548
output2 = call_7549
func_7550 = relay.Function([], output)
mod['func_7550'] = func_7550
mod = relay.transform.InferType()(mod)
output = func_7550()
func_7551 = relay.Function([], output)
mutated_mod['func_7551'] = func_7551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5305_call = mod.get_global_var('func_5305')
func_5306_call = mutated_mod.get_global_var('func_5306')
call_7724 = func_5305_call()
call_7725 = func_5305_call()
func_6656_call = mod.get_global_var('func_6656')
func_6658_call = mutated_mod.get_global_var('func_6658')
call_7733 = relay.TupleGetItem(func_6656_call(), 2)
call_7734 = relay.TupleGetItem(func_6658_call(), 2)
output = relay.Tuple([call_7724,call_7733,])
output2 = relay.Tuple([call_7725,call_7734,])
func_7743 = relay.Function([], output)
mod['func_7743'] = func_7743
mod = relay.transform.InferType()(mod)
mutated_mod['func_7743'] = func_7743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7743_call = mutated_mod.get_global_var('func_7743')
call_7744 = func_7743_call()
output = call_7744
func_7745 = relay.Function([], output)
mutated_mod['func_7745'] = func_7745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5148_call = mod.get_global_var('func_5148')
func_5149_call = mutated_mod.get_global_var('func_5149')
call_7762 = relay.TupleGetItem(func_5148_call(), 2)
call_7763 = relay.TupleGetItem(func_5149_call(), 2)
func_6981_call = mod.get_global_var('func_6981')
func_6985_call = mutated_mod.get_global_var('func_6985')
const_7782 = relay.const([-9.809231,-3.436777,3.653297,-1.257571,-5.871163,-2.732597,6.529971], dtype = "float64")#candidate|7782|(7,)|const|float64
var_7783 = relay.var("var_7783", dtype = "float32", shape = (156, 2))#candidate|7783|(156, 2)|var|float32
call_7781 = relay.TupleGetItem(func_6981_call(relay.reshape(const_7782.astype('float64'), [7,]), relay.reshape(var_7783.astype('float32'), [312, 1]), ), 5)
call_7784 = relay.TupleGetItem(func_6985_call(relay.reshape(const_7782.astype('float64'), [7,]), relay.reshape(var_7783.astype('float32'), [312, 1]), ), 5)
func_4459_call = mod.get_global_var('func_4459')
func_4461_call = mutated_mod.get_global_var('func_4461')
call_7788 = relay.TupleGetItem(func_4459_call(relay.reshape(call_7762.astype('float64'), [10, 11, 16])), 0)
call_7789 = relay.TupleGetItem(func_4461_call(relay.reshape(call_7762.astype('float64'), [10, 11, 16])), 0)
func_7550_call = mod.get_global_var('func_7550')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_7807 = func_7550_call()
call_7808 = func_7550_call()
bop_7820 = relay.greater_equal(var_7783.astype('bool'), relay.reshape(call_7781.astype('bool'), relay.shape_of(var_7783))) # shape=(156, 2)
bop_7823 = relay.greater_equal(var_7783.astype('bool'), relay.reshape(call_7784.astype('bool'), relay.shape_of(var_7783))) # shape=(156, 2)
func_5190_call = mod.get_global_var('func_5190')
func_5192_call = mutated_mod.get_global_var('func_5192')
call_7826 = relay.TupleGetItem(func_5190_call(), 0)
call_7827 = relay.TupleGetItem(func_5192_call(), 0)
uop_7836 = relay.log2(bop_7820.astype('float32')) # shape=(156, 2)
uop_7838 = relay.log2(bop_7823.astype('float32')) # shape=(156, 2)
uop_7839 = relay.sinh(uop_7836.astype('float64')) # shape=(156, 2)
uop_7841 = relay.sinh(uop_7838.astype('float64')) # shape=(156, 2)
output = relay.Tuple([call_7762,const_7782,call_7788,call_7807,call_7826,uop_7839,])
output2 = relay.Tuple([call_7763,const_7782,call_7789,call_7808,call_7827,uop_7841,])
func_7844 = relay.Function([var_7783,], output)
mod['func_7844'] = func_7844
mod = relay.transform.InferType()(mod)
mutated_mod['func_7844'] = func_7844
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7845 = relay.var("var_7845", dtype = "float32", shape = (156, 2))#candidate|7845|(156, 2)|var|float32
func_7844_call = mutated_mod.get_global_var('func_7844')
call_7846 = func_7844_call(var_7845)
output = call_7846
func_7847 = relay.Function([var_7845], output)
mutated_mod['func_7847'] = func_7847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5897_call = mod.get_global_var('func_5897')
func_5899_call = mutated_mod.get_global_var('func_5899')
call_8012 = func_5897_call()
call_8013 = func_5897_call()
output = relay.Tuple([call_8012,])
output2 = relay.Tuple([call_8013,])
func_8023 = relay.Function([], output)
mod['func_8023'] = func_8023
mod = relay.transform.InferType()(mod)
mutated_mod['func_8023'] = func_8023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8023_call = mutated_mod.get_global_var('func_8023')
call_8024 = func_8023_call()
output = call_8024
func_8025 = relay.Function([], output)
mutated_mod['func_8025'] = func_8025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5844_call = mod.get_global_var('func_5844')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_8111 = relay.TupleGetItem(func_5844_call(), 0)
call_8112 = relay.TupleGetItem(func_5845_call(), 0)
func_97_call = mod.get_global_var('func_97')
func_100_call = mutated_mod.get_global_var('func_100')
const_8124 = relay.const([-0.697657,-6.051250,-8.641327,5.031048,3.216034,-2.550704,-5.191839], dtype = "float64")#candidate|8124|(7,)|const|float64
call_8123 = relay.TupleGetItem(func_97_call(relay.reshape(const_8124.astype('float64'), [7, 1, 1])), 1)
call_8125 = relay.TupleGetItem(func_100_call(relay.reshape(const_8124.astype('float64'), [7, 1, 1])), 1)
func_564_call = mod.get_global_var('func_564')
func_567_call = mutated_mod.get_global_var('func_567')
var_8130 = relay.var("var_8130", dtype = "float32", shape = (675,))#candidate|8130|(675,)|var|float32
call_8129 = relay.TupleGetItem(func_564_call(relay.reshape(var_8130.astype('float32'), [9, 15, 5]), relay.reshape(const_8124.astype('float64'), [7,]), ), 3)
call_8131 = relay.TupleGetItem(func_567_call(relay.reshape(var_8130.astype('float32'), [9, 15, 5]), relay.reshape(const_8124.astype('float64'), [7,]), ), 3)
output = relay.Tuple([call_8111,call_8123,const_8124,call_8129,var_8130,])
output2 = relay.Tuple([call_8112,call_8125,const_8124,call_8131,var_8130,])
func_8132 = relay.Function([var_8130,], output)
mod['func_8132'] = func_8132
mod = relay.transform.InferType()(mod)
var_8133 = relay.var("var_8133", dtype = "float32", shape = (675,))#candidate|8133|(675,)|var|float32
output = func_8132(var_8133)
func_8134 = relay.Function([var_8133], output)
mutated_mod['func_8134'] = func_8134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8023_call = mod.get_global_var('func_8023')
func_8025_call = mutated_mod.get_global_var('func_8025')
call_8136 = relay.TupleGetItem(func_8023_call(), 0)
call_8137 = relay.TupleGetItem(func_8025_call(), 0)
uop_8142 = relay.cosh(call_8136.astype('float64')) # shape=(10, 11, 16)
uop_8144 = relay.cosh(call_8137.astype('float64')) # shape=(10, 11, 16)
output = relay.Tuple([uop_8142,])
output2 = relay.Tuple([uop_8144,])
func_8167 = relay.Function([], output)
mod['func_8167'] = func_8167
mod = relay.transform.InferType()(mod)
output = func_8167()
func_8168 = relay.Function([], output)
mutated_mod['func_8168'] = func_8168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5148_call = mod.get_global_var('func_5148')
func_5149_call = mutated_mod.get_global_var('func_5149')
call_8169 = relay.TupleGetItem(func_5148_call(), 1)
call_8170 = relay.TupleGetItem(func_5149_call(), 1)
output = call_8169
output2 = call_8170
func_8175 = relay.Function([], output)
mod['func_8175'] = func_8175
mod = relay.transform.InferType()(mod)
mutated_mod['func_8175'] = func_8175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8175_call = mutated_mod.get_global_var('func_8175')
call_8176 = func_8175_call()
output = call_8176
func_8177 = relay.Function([], output)
mutated_mod['func_8177'] = func_8177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5268_call = mod.get_global_var('func_5268')
func_5270_call = mutated_mod.get_global_var('func_5270')
call_8187 = relay.TupleGetItem(func_5268_call(), 0)
call_8188 = relay.TupleGetItem(func_5270_call(), 0)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_8189 = func_7093_call()
call_8190 = func_7093_call()
func_8167_call = mod.get_global_var('func_8167')
func_8168_call = mutated_mod.get_global_var('func_8168')
call_8200 = relay.TupleGetItem(func_8167_call(), 0)
call_8201 = relay.TupleGetItem(func_8168_call(), 0)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
call_8205 = func_7093_call()
call_8206 = func_7093_call()
output = relay.Tuple([call_8187,call_8189,call_8200,call_8205,])
output2 = relay.Tuple([call_8188,call_8190,call_8201,call_8206,])
func_8210 = relay.Function([], output)
mod['func_8210'] = func_8210
mod = relay.transform.InferType()(mod)
mutated_mod['func_8210'] = func_8210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8210_call = mutated_mod.get_global_var('func_8210')
call_8211 = func_8210_call()
output = call_8211
func_8212 = relay.Function([], output)
mutated_mod['func_8212'] = func_8212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_8299 = relay.TupleGetItem(func_4380_call(), 0)
call_8300 = relay.TupleGetItem(func_4382_call(), 0)
output = call_8299
output2 = call_8300
func_8303 = relay.Function([], output)
mod['func_8303'] = func_8303
mod = relay.transform.InferType()(mod)
mutated_mod['func_8303'] = func_8303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8303_call = mutated_mod.get_global_var('func_8303')
call_8304 = func_8303_call()
output = call_8304
func_8305 = relay.Function([], output)
mutated_mod['func_8305'] = func_8305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mod.get_global_var('func_5921')
func_5923_call = mutated_mod.get_global_var('func_5923')
call_8319 = relay.TupleGetItem(func_5921_call(), 0)
call_8320 = relay.TupleGetItem(func_5923_call(), 0)
output = relay.Tuple([call_8319,])
output2 = relay.Tuple([call_8320,])
func_8321 = relay.Function([], output)
mod['func_8321'] = func_8321
mod = relay.transform.InferType()(mod)
mutated_mod['func_8321'] = func_8321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8321_call = mutated_mod.get_global_var('func_8321')
call_8322 = func_8321_call()
output = call_8322
func_8323 = relay.Function([], output)
mutated_mod['func_8323'] = func_8323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6247_call = mutated_mod.get_global_var('func_6247')
call_8348 = relay.TupleGetItem(func_6245_call(), 0)
call_8349 = relay.TupleGetItem(func_6247_call(), 0)
func_7191_call = mod.get_global_var('func_7191')
func_7193_call = mutated_mod.get_global_var('func_7193')
call_8350 = relay.TupleGetItem(func_7191_call(), 0)
call_8351 = relay.TupleGetItem(func_7193_call(), 0)
output = relay.Tuple([call_8348,call_8350,])
output2 = relay.Tuple([call_8349,call_8351,])
func_8371 = relay.Function([], output)
mod['func_8371'] = func_8371
mod = relay.transform.InferType()(mod)
output = func_8371()
func_8372 = relay.Function([], output)
mutated_mod['func_8372'] = func_8372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5240_call = mod.get_global_var('func_5240')
func_5242_call = mutated_mod.get_global_var('func_5242')
call_8384 = relay.TupleGetItem(func_5240_call(), 0)
call_8385 = relay.TupleGetItem(func_5242_call(), 0)
func_5844_call = mod.get_global_var('func_5844')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_8388 = relay.TupleGetItem(func_5844_call(), 0)
call_8389 = relay.TupleGetItem(func_5845_call(), 0)
func_4589_call = mod.get_global_var('func_4589')
func_4592_call = mutated_mod.get_global_var('func_4592')
const_8392 = relay.const(9, dtype = "uint64")#candidate|8392|()|const|uint64
var_8393 = relay.var("var_8393", dtype = "uint64", shape = (2400, 1))#candidate|8393|(2400, 1)|var|uint64
call_8391 = relay.TupleGetItem(func_4589_call(relay.reshape(const_8392.astype('uint64'), []), relay.reshape(var_8393.astype('uint64'), [2400,]), ), 0)
call_8394 = relay.TupleGetItem(func_4592_call(relay.reshape(const_8392.astype('uint64'), []), relay.reshape(var_8393.astype('uint64'), [2400,]), ), 0)
output = relay.Tuple([call_8384,call_8388,call_8391,const_8392,var_8393,])
output2 = relay.Tuple([call_8385,call_8389,call_8394,const_8392,var_8393,])
func_8395 = relay.Function([var_8393,], output)
mod['func_8395'] = func_8395
mod = relay.transform.InferType()(mod)
var_8396 = relay.var("var_8396", dtype = "uint64", shape = (2400, 1))#candidate|8396|(2400, 1)|var|uint64
output = func_8395(var_8396)
func_8397 = relay.Function([var_8396], output)
mutated_mod['func_8397'] = func_8397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8371_call = mod.get_global_var('func_8371')
func_8372_call = mutated_mod.get_global_var('func_8372')
call_8526 = relay.TupleGetItem(func_8371_call(), 1)
call_8527 = relay.TupleGetItem(func_8372_call(), 1)
output = relay.Tuple([call_8526,])
output2 = relay.Tuple([call_8527,])
func_8538 = relay.Function([], output)
mod['func_8538'] = func_8538
mod = relay.transform.InferType()(mod)
mutated_mod['func_8538'] = func_8538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8538_call = mutated_mod.get_global_var('func_8538')
call_8539 = func_8538_call()
output = call_8539
func_8540 = relay.Function([], output)
mutated_mod['func_8540'] = func_8540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7164_call = mod.get_global_var('func_7164')
func_7166_call = mutated_mod.get_global_var('func_7166')
call_8541 = relay.TupleGetItem(func_7164_call(), 1)
call_8542 = relay.TupleGetItem(func_7166_call(), 1)
func_8167_call = mod.get_global_var('func_8167')
func_8168_call = mutated_mod.get_global_var('func_8168')
call_8553 = relay.TupleGetItem(func_8167_call(), 0)
call_8554 = relay.TupleGetItem(func_8168_call(), 0)
output = relay.Tuple([call_8541,call_8553,])
output2 = relay.Tuple([call_8542,call_8554,])
func_8562 = relay.Function([], output)
mod['func_8562'] = func_8562
mod = relay.transform.InferType()(mod)
output = func_8562()
func_8563 = relay.Function([], output)
mutated_mod['func_8563'] = func_8563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6479_call = mod.get_global_var('func_6479')
func_6481_call = mutated_mod.get_global_var('func_6481')
call_8592 = func_6479_call()
call_8593 = func_6479_call()
func_2689_call = mod.get_global_var('func_2689')
func_2692_call = mutated_mod.get_global_var('func_2692')
var_8604 = relay.var("var_8604", dtype = "float64", shape = (784,))#candidate|8604|(784,)|var|float64
call_8603 = func_2689_call(relay.reshape(var_8604.astype('float64'), [4, 14, 14]))
call_8605 = func_2689_call(relay.reshape(var_8604.astype('float64'), [4, 14, 14]))
output = relay.Tuple([call_8592,call_8603,var_8604,])
output2 = relay.Tuple([call_8593,call_8605,var_8604,])
func_8609 = relay.Function([var_8604,], output)
mod['func_8609'] = func_8609
mod = relay.transform.InferType()(mod)
var_8610 = relay.var("var_8610", dtype = "float64", shape = (784,))#candidate|8610|(784,)|var|float64
output = func_8609(var_8610)
func_8611 = relay.Function([var_8610], output)
mutated_mod['func_8611'] = func_8611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8562_call = mod.get_global_var('func_8562')
func_8563_call = mutated_mod.get_global_var('func_8563')
call_8663 = relay.TupleGetItem(func_8562_call(), 0)
call_8664 = relay.TupleGetItem(func_8563_call(), 0)
func_1723_call = mod.get_global_var('func_1723')
func_1725_call = mutated_mod.get_global_var('func_1725')
var_8666 = relay.var("var_8666", dtype = "float64", shape = (1, 32))#candidate|8666|(1, 32)|var|float64
call_8665 = func_1723_call(relay.reshape(var_8666.astype('float64'), [2, 16, 1]))
call_8667 = func_1723_call(relay.reshape(var_8666.astype('float64'), [2, 16, 1]))
bop_8670 = relay.greater(var_8666.astype('bool'), relay.reshape(call_8665.astype('bool'), relay.shape_of(var_8666))) # shape=(1, 32)
bop_8673 = relay.greater(var_8666.astype('bool'), relay.reshape(call_8667.astype('bool'), relay.shape_of(var_8666))) # shape=(1, 32)
output = relay.Tuple([call_8663,bop_8670,])
output2 = relay.Tuple([call_8664,bop_8673,])
func_8677 = relay.Function([var_8666,], output)
mod['func_8677'] = func_8677
mod = relay.transform.InferType()(mod)
var_8678 = relay.var("var_8678", dtype = "float64", shape = (1, 32))#candidate|8678|(1, 32)|var|float64
output = func_8677(var_8678)
func_8679 = relay.Function([var_8678], output)
mutated_mod['func_8679'] = func_8679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8728 = relay.var("var_8728", dtype = "int16", shape = (10, 10, 10))#candidate|8728|(10, 10, 10)|var|int16
var_8729 = relay.var("var_8729", dtype = "int16", shape = (10, 10, 10))#candidate|8729|(10, 10, 10)|var|int16
bop_8730 = relay.multiply(var_8728.astype('int16'), relay.reshape(var_8729.astype('int16'), relay.shape_of(var_8728))) # shape=(10, 10, 10)
func_5897_call = mod.get_global_var('func_5897')
func_5899_call = mutated_mod.get_global_var('func_5899')
call_8741 = func_5897_call()
call_8742 = func_5897_call()
output = relay.Tuple([bop_8730,call_8741,])
output2 = relay.Tuple([bop_8730,call_8742,])
func_8750 = relay.Function([var_8728,var_8729,], output)
mod['func_8750'] = func_8750
mod = relay.transform.InferType()(mod)
var_8751 = relay.var("var_8751", dtype = "int16", shape = (10, 10, 10))#candidate|8751|(10, 10, 10)|var|int16
var_8752 = relay.var("var_8752", dtype = "int16", shape = (10, 10, 10))#candidate|8752|(10, 10, 10)|var|int16
output = func_8750(var_8751,var_8752,)
func_8753 = relay.Function([var_8751,var_8752,], output)
mutated_mod['func_8753'] = func_8753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5148_call = mod.get_global_var('func_5148')
func_5149_call = mutated_mod.get_global_var('func_5149')
call_8762 = relay.TupleGetItem(func_5148_call(), 0)
call_8763 = relay.TupleGetItem(func_5149_call(), 0)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_8765 = func_4667_call()
call_8766 = func_4667_call()
output = relay.Tuple([call_8762,call_8765,])
output2 = relay.Tuple([call_8763,call_8766,])
func_8769 = relay.Function([], output)
mod['func_8769'] = func_8769
mod = relay.transform.InferType()(mod)
mutated_mod['func_8769'] = func_8769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8769_call = mutated_mod.get_global_var('func_8769')
call_8770 = func_8769_call()
output = call_8770
func_8771 = relay.Function([], output)
mutated_mod['func_8771'] = func_8771
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8779 = relay.const([[[7,-1,-2,-2],[-1,6,-9,1],[-5,-7,3,-3],[-9,-5,7,6]]], dtype = "uint16")#candidate|8779|(1, 4, 4)|const|uint16
var_8780 = relay.var("var_8780", dtype = "uint16", shape = (5, 4, 4))#candidate|8780|(5, 4, 4)|var|uint16
bop_8781 = relay.bitwise_xor(const_8779.astype('uint16'), var_8780.astype('uint16')) # shape=(5, 4, 4)
output = relay.Tuple([bop_8781,])
output2 = relay.Tuple([bop_8781,])
func_8790 = relay.Function([var_8780,], output)
mod['func_8790'] = func_8790
mod = relay.transform.InferType()(mod)
mutated_mod['func_8790'] = func_8790
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8791 = relay.var("var_8791", dtype = "uint16", shape = (5, 4, 4))#candidate|8791|(5, 4, 4)|var|uint16
func_8790_call = mutated_mod.get_global_var('func_8790')
call_8792 = func_8790_call(var_8791)
output = call_8792
func_8793 = relay.Function([var_8791], output)
mutated_mod['func_8793'] = func_8793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7390_call = mod.get_global_var('func_7390')
func_7391_call = mutated_mod.get_global_var('func_7391')
call_8813 = relay.TupleGetItem(func_7390_call(), 0)
call_8814 = relay.TupleGetItem(func_7391_call(), 0)
func_8562_call = mod.get_global_var('func_8562')
func_8563_call = mutated_mod.get_global_var('func_8563')
call_8824 = relay.TupleGetItem(func_8562_call(), 1)
call_8825 = relay.TupleGetItem(func_8563_call(), 1)
output = relay.Tuple([call_8813,call_8824,])
output2 = relay.Tuple([call_8814,call_8825,])
func_8828 = relay.Function([], output)
mod['func_8828'] = func_8828
mod = relay.transform.InferType()(mod)
output = func_8828()
func_8829 = relay.Function([], output)
mutated_mod['func_8829'] = func_8829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8175_call = mod.get_global_var('func_8175')
func_8177_call = mutated_mod.get_global_var('func_8177')
call_8844 = func_8175_call()
call_8845 = func_8175_call()
output = relay.Tuple([call_8844,])
output2 = relay.Tuple([call_8845,])
func_8853 = relay.Function([], output)
mod['func_8853'] = func_8853
mod = relay.transform.InferType()(mod)
output = func_8853()
func_8854 = relay.Function([], output)
mutated_mod['func_8854'] = func_8854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7059_call = mod.get_global_var('func_7059')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_8857 = relay.TupleGetItem(func_7059_call(), 0)
call_8858 = relay.TupleGetItem(func_7061_call(), 0)
output = relay.Tuple([call_8857,])
output2 = relay.Tuple([call_8858,])
func_8861 = relay.Function([], output)
mod['func_8861'] = func_8861
mod = relay.transform.InferType()(mod)
output = func_8861()
func_8862 = relay.Function([], output)
mutated_mod['func_8862'] = func_8862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7164_call = mod.get_global_var('func_7164')
func_7166_call = mutated_mod.get_global_var('func_7166')
call_8906 = relay.TupleGetItem(func_7164_call(), 1)
call_8907 = relay.TupleGetItem(func_7166_call(), 1)
output = call_8906
output2 = call_8907
func_8911 = relay.Function([], output)
mod['func_8911'] = func_8911
mod = relay.transform.InferType()(mod)
output = func_8911()
func_8912 = relay.Function([], output)
mutated_mod['func_8912'] = func_8912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8167_call = mod.get_global_var('func_8167')
func_8168_call = mutated_mod.get_global_var('func_8168')
call_9062 = relay.TupleGetItem(func_8167_call(), 0)
call_9063 = relay.TupleGetItem(func_8168_call(), 0)
output = relay.Tuple([call_9062,])
output2 = relay.Tuple([call_9063,])
func_9087 = relay.Function([], output)
mod['func_9087'] = func_9087
mod = relay.transform.InferType()(mod)
mutated_mod['func_9087'] = func_9087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9087_call = mutated_mod.get_global_var('func_9087')
call_9088 = func_9087_call()
output = call_9088
func_9089 = relay.Function([], output)
mutated_mod['func_9089'] = func_9089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6656_call = mod.get_global_var('func_6656')
func_6658_call = mutated_mod.get_global_var('func_6658')
call_9103 = relay.TupleGetItem(func_6656_call(), 2)
call_9104 = relay.TupleGetItem(func_6658_call(), 2)
func_5148_call = mod.get_global_var('func_5148')
func_5149_call = mutated_mod.get_global_var('func_5149')
call_9119 = relay.TupleGetItem(func_5148_call(), 1)
call_9120 = relay.TupleGetItem(func_5149_call(), 1)
uop_9138 = relay.asinh(call_9103.astype('float32')) # shape=(2400,)
uop_9140 = relay.asinh(call_9104.astype('float32')) # shape=(2400,)
bop_9154 = relay.not_equal(uop_9138.astype('bool'), relay.reshape(call_9103.astype('bool'), relay.shape_of(uop_9138))) # shape=(2400,)
bop_9157 = relay.not_equal(uop_9140.astype('bool'), relay.reshape(call_9104.astype('bool'), relay.shape_of(uop_9140))) # shape=(2400,)
func_7550_call = mod.get_global_var('func_7550')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_9172 = func_7550_call()
call_9173 = func_7550_call()
output = relay.Tuple([call_9119,bop_9154,call_9172,])
output2 = relay.Tuple([call_9120,bop_9157,call_9173,])
func_9183 = relay.Function([], output)
mod['func_9183'] = func_9183
mod = relay.transform.InferType()(mod)
mutated_mod['func_9183'] = func_9183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9183_call = mutated_mod.get_global_var('func_9183')
call_9184 = func_9183_call()
output = call_9184
func_9185 = relay.Function([], output)
mutated_mod['func_9185'] = func_9185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8023_call = mod.get_global_var('func_8023')
func_8025_call = mutated_mod.get_global_var('func_8025')
call_9217 = relay.TupleGetItem(func_8023_call(), 0)
call_9218 = relay.TupleGetItem(func_8025_call(), 0)
output = relay.Tuple([call_9217,])
output2 = relay.Tuple([call_9218,])
func_9219 = relay.Function([], output)
mod['func_9219'] = func_9219
mod = relay.transform.InferType()(mod)
output = func_9219()
func_9220 = relay.Function([], output)
mutated_mod['func_9220'] = func_9220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7390_call = mod.get_global_var('func_7390')
func_7391_call = mutated_mod.get_global_var('func_7391')
call_9221 = relay.TupleGetItem(func_7390_call(), 0)
call_9222 = relay.TupleGetItem(func_7391_call(), 0)
output = relay.Tuple([call_9221,])
output2 = relay.Tuple([call_9222,])
func_9223 = relay.Function([], output)
mod['func_9223'] = func_9223
mod = relay.transform.InferType()(mod)
output = func_9223()
func_9224 = relay.Function([], output)
mutated_mod['func_9224'] = func_9224
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9243 = relay.var("var_9243", dtype = "float64", shape = (3, 7, 7))#candidate|9243|(3, 7, 7)|var|float64
uop_9244 = relay.acosh(var_9243.astype('float64')) # shape=(3, 7, 7)
output = uop_9244
output2 = uop_9244
func_9255 = relay.Function([var_9243,], output)
mod['func_9255'] = func_9255
mod = relay.transform.InferType()(mod)
var_9256 = relay.var("var_9256", dtype = "float64", shape = (3, 7, 7))#candidate|9256|(3, 7, 7)|var|float64
output = func_9255(var_9256)
func_9257 = relay.Function([var_9256], output)
mutated_mod['func_9257'] = func_9257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8023_call = mod.get_global_var('func_8023')
func_8025_call = mutated_mod.get_global_var('func_8025')
call_9279 = relay.TupleGetItem(func_8023_call(), 0)
call_9280 = relay.TupleGetItem(func_8025_call(), 0)
uop_9288 = relay.exp(call_9279.astype('float32')) # shape=(10, 11, 16)
uop_9290 = relay.exp(call_9280.astype('float32')) # shape=(10, 11, 16)
func_8562_call = mod.get_global_var('func_8562')
func_8563_call = mutated_mod.get_global_var('func_8563')
call_9291 = relay.TupleGetItem(func_8562_call(), 0)
call_9292 = relay.TupleGetItem(func_8563_call(), 0)
func_8167_call = mod.get_global_var('func_8167')
func_8168_call = mutated_mod.get_global_var('func_8168')
call_9293 = relay.TupleGetItem(func_8167_call(), 0)
call_9294 = relay.TupleGetItem(func_8168_call(), 0)
func_6656_call = mod.get_global_var('func_6656')
func_6658_call = mutated_mod.get_global_var('func_6658')
call_9297 = relay.TupleGetItem(func_6656_call(), 1)
call_9298 = relay.TupleGetItem(func_6658_call(), 1)
output = relay.Tuple([uop_9288,call_9291,call_9293,call_9297,])
output2 = relay.Tuple([uop_9290,call_9292,call_9294,call_9298,])
func_9300 = relay.Function([], output)
mod['func_9300'] = func_9300
mod = relay.transform.InferType()(mod)
output = func_9300()
func_9301 = relay.Function([], output)
mutated_mod['func_9301'] = func_9301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9223_call = mod.get_global_var('func_9223')
func_9224_call = mutated_mod.get_global_var('func_9224')
call_9322 = relay.TupleGetItem(func_9223_call(), 0)
call_9323 = relay.TupleGetItem(func_9224_call(), 0)
output = call_9322
output2 = call_9323
func_9325 = relay.Function([], output)
mod['func_9325'] = func_9325
mod = relay.transform.InferType()(mod)
mutated_mod['func_9325'] = func_9325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9325_call = mutated_mod.get_global_var('func_9325')
call_9326 = func_9325_call()
output = call_9326
func_9327 = relay.Function([], output)
mutated_mod['func_9327'] = func_9327
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9328 = relay.const([[[-9.599098,1.091424,-6.505045,1.407633,5.407843,5.557831,0.555401],[-9.862637,-2.523552,8.113380,2.598164,4.118048,-0.111937,8.622906],[2.184036,-4.493531,-8.112976,-6.275219,-8.173098,-9.030515,1.182542],[9.551835,7.221019,6.072719,-9.487283,-2.642749,-7.429533,-0.519040],[-8.137604,0.213810,6.013574,7.642702,0.063389,-9.148672,-2.439487],[1.404212,7.570217,-5.643533,-4.511957,-5.819824,5.450972,-5.895886],[-5.282484,-2.750992,9.757568,0.705173,-4.983794,-8.378773,-5.662987],[0.495765,5.828671,-9.385995,-4.885337,2.520502,-1.470421,2.364487],[1.972487,7.138572,-8.576873,-1.737473,9.834520,-0.054747,-1.151907],[-8.823009,-6.954809,9.113439,-6.840474,-4.863460,3.190436,-8.006747],[5.372971,7.625242,2.189285,8.970338,-3.834289,8.451035,8.924693],[6.679547,-1.535196,-2.599295,-8.260046,5.343600,7.721326,4.617191],[1.711237,-3.200908,2.470606,1.016549,-1.477562,-1.215516,-4.424577],[8.500450,-1.629941,-4.447101,-2.529693,8.632300,-6.047887,8.320251]],[[-2.735482,-2.154137,-0.794855,-0.540477,-8.353735,7.984948,-4.858642],[-9.652603,1.659966,-4.849187,-1.092722,5.302485,3.022642,6.368942],[8.701528,6.044513,8.486387,4.727554,-5.438064,1.634445,-5.717833],[-8.414536,7.660535,2.107082,-6.531065,-4.660398,-8.100873,2.223524],[-5.154994,-5.195869,4.438240,3.579834,0.608469,0.130633,-6.838812],[5.951283,7.469196,-6.773789,-3.807143,9.773365,0.199900,4.146438],[6.512748,-6.638828,-1.607364,8.447401,-3.200772,-2.593478,-1.743295],[-0.872469,8.223391,8.032900,0.793189,8.911827,8.168543,-7.957849],[-3.207252,8.205914,-1.471289,6.968971,-9.550280,-4.904222,2.829586],[-2.704932,-9.415287,-2.011045,-3.935917,-6.254241,9.637050,4.974550],[6.033200,-5.239816,-8.868766,5.278298,9.905053,0.871846,-5.115196],[-1.417676,-1.663126,0.563205,0.210980,-6.172194,0.265689,7.415043],[-1.836735,9.437061,-7.225325,2.614985,5.194991,6.787814,5.231767],[-1.772036,0.152843,7.694615,-4.554457,-7.868055,9.650925,6.791366]],[[-7.023886,2.384623,-1.347335,-2.397859,-9.669430,9.784474,-3.869257],[-1.630346,3.533672,0.376683,-6.809341,-7.765503,3.839436,-4.158469],[-8.774952,2.140524,3.051402,2.791342,-6.349412,-8.280830,-4.440055],[-7.379249,6.617620,-1.707434,-2.018423,9.418594,7.731500,0.593465],[-5.525711,5.092990,1.269297,3.312399,6.865374,-2.424103,-0.247414],[2.821600,-8.573117,-3.184837,-8.275071,-7.403195,-1.630069,7.277454],[-0.170932,4.580832,9.638451,8.122109,2.266594,9.729438,7.777246],[-8.049771,-2.333720,-4.950082,-7.512435,-6.802441,-2.245504,2.316716],[-4.764934,-4.691327,4.421609,-4.898337,-7.359482,5.368749,-0.997794],[-8.168355,0.005566,-9.410210,-7.578211,-4.218680,1.962918,-2.117290],[-7.998610,-0.278886,-7.697998,8.512375,-4.525052,-3.021809,4.231530],[5.633602,-6.128876,6.467268,-5.854177,-0.963672,5.784500,3.185590],[2.426926,-0.336971,2.696555,5.607911,7.022675,4.848150,-2.002223],[-8.819519,-6.235455,1.968635,1.884632,-1.675023,-2.648186,3.528966]],[[6.867362,-5.113783,-3.849470,-9.355509,-1.783692,1.199959,-1.849101],[1.317953,4.124330,-3.979994,1.166350,-7.868459,1.918732,1.892646],[0.715432,9.567139,9.196875,-7.977492,-7.974603,-3.124061,-8.317784],[-5.249152,-2.805542,7.612793,5.820646,1.383620,5.582977,6.000778],[-4.405851,2.894591,3.647083,4.262012,-9.884583,-0.076513,-1.499186],[1.597887,1.096654,-0.674023,-1.466780,5.197762,4.016471,-9.949448],[-7.899283,1.219684,-5.298877,1.173304,3.044949,1.103780,-7.869401],[-5.523192,-2.320097,2.367048,3.618958,2.204195,4.252473,7.351715],[-1.970915,6.723608,-7.796576,3.525835,7.883784,-7.222122,2.494759],[3.007302,-6.416313,2.115713,4.893265,-7.492267,-1.680647,-1.617196],[-1.757946,-0.958287,-1.806535,4.710384,6.806231,1.884737,3.977583],[1.992156,4.724088,-3.088210,2.221004,-3.284670,-7.562711,5.650723],[1.638561,-7.421942,-9.825573,-2.292850,0.845133,4.820383,-8.752196],[1.853367,-8.027050,2.813481,2.786230,1.171554,4.831929,-0.385029]],[[-9.458171,-7.440687,6.511660,7.413425,6.971761,-4.832883,-5.499062],[9.062339,6.547105,-4.064340,-7.415448,6.095278,-4.675715,-8.269043],[5.124075,0.868567,-8.259975,0.514410,2.019733,9.031864,-4.657545],[6.669753,9.945106,8.925108,7.929596,0.844615,3.913870,-8.765674],[7.563625,9.676183,4.248286,8.166555,-8.234558,6.381764,8.085753],[5.361016,6.596859,-5.337180,1.276293,2.376641,-9.357525,-8.161910],[6.512198,8.378591,0.245267,6.937891,2.277036,2.577935,3.545170],[4.284061,0.090444,-6.226564,3.412821,-6.735410,4.007477,-9.084236],[-7.419548,5.573705,9.890971,-4.821155,-4.210043,6.586856,-1.519497],[0.256481,3.561842,5.330972,5.840221,3.129657,-2.196592,-0.013412],[2.364757,2.460900,9.363790,-3.137710,0.530604,-5.609984,-4.634175],[-7.078159,-2.360645,9.134871,-5.097178,-4.645429,-8.305231,0.710696],[7.201709,-8.903770,-8.324729,-5.717043,2.198961,-2.868139,-1.823371],[-7.056312,-7.929376,5.934264,-8.633297,-2.713634,5.345773,9.084583]],[[5.077747,1.772089,-5.371432,7.876902,1.848665,-8.233593,-8.843874],[-5.857728,0.950910,-2.753482,4.140287,-5.351727,-2.843846,-9.332054],[-7.544975,4.785792,-9.548393,-7.592981,7.437431,0.437558,-7.008070],[3.366135,-8.772210,2.775453,-8.521322,3.510012,7.958712,1.466338],[8.302020,-1.792612,6.073858,0.074419,-9.879667,-3.740726,8.411018],[-5.253469,-2.507839,5.057516,7.856015,-1.591076,-2.550329,1.376791],[-8.519714,8.733627,6.483554,6.483513,0.679108,-4.682460,-0.914939],[6.949250,2.190126,4.813556,9.319810,-5.850142,8.888679,-2.119700],[1.776852,-8.719606,6.287079,9.645410,1.499653,2.975584,6.036956],[-0.112005,0.124544,7.513752,6.668862,-7.819691,9.442189,-7.398708],[1.098389,-8.226767,-8.787198,-5.904326,-9.318350,-7.296029,-4.880911],[3.972051,-9.952600,-7.126297,7.639045,-4.713363,-9.451242,-0.925585],[6.059119,7.704765,5.604637,2.628931,-0.061887,0.045644,6.434529],[-1.366514,-4.760211,2.911120,1.170489,-9.546174,-3.392615,8.201522]],[[7.860590,-3.215547,-8.865347,6.612101,-9.363165,-9.287521,6.830105],[9.923660,2.776732,-7.735181,8.400918,-6.656861,2.886047,-3.699941],[9.798919,4.120506,1.271102,-2.755174,1.157631,1.307129,-2.879565],[-4.401318,-7.186777,7.691349,5.828577,1.867229,1.129000,8.753356],[-6.806300,-2.809549,5.376753,-1.264420,-2.032409,6.718668,-3.167000],[9.924106,-1.704639,-1.287496,1.918063,-0.123896,-5.739705,-5.008975],[-6.659616,-1.075759,3.631415,-1.973313,-4.430983,9.596879,3.441476],[-6.273468,7.604850,1.037956,2.005203,-5.475894,7.114357,3.599723],[-7.986704,1.096316,3.200179,1.216765,3.415098,-4.375595,-7.020531],[-5.848460,-5.670888,-1.207421,-6.157159,5.439722,8.793044,-1.702146],[-5.811304,-7.891143,6.357525,1.718137,-9.046339,1.076740,9.385593],[1.489845,3.656975,7.939055,9.044560,-9.349806,7.721065,9.397936],[1.099934,5.555080,-4.943676,3.481906,-9.085713,-7.728933,8.799773],[-5.926234,1.895978,8.833217,9.224425,-9.494929,-1.142971,-3.473662]],[[-4.646819,-8.754105,4.384954,-9.275528,-6.857463,-9.730179,-7.226984],[4.960920,-9.080681,-9.144464,1.098641,3.180875,9.809634,2.974943],[-5.846081,2.319748,-7.273123,-2.755393,-2.338323,8.089380,-2.467161],[5.469840,-1.307172,6.110166,-6.393957,3.730165,7.873828,-8.549310],[-0.661022,-0.400273,2.453692,-2.685375,9.523025,8.653648,9.621136],[-3.503658,-1.309136,-2.398978,-2.442648,-0.986195,-7.984712,6.879568],[-4.271673,-3.730014,1.512968,1.436927,-7.163353,-1.489728,-5.713936],[2.330459,-7.549540,-7.973947,3.179947,-8.700154,-5.838970,-7.170072],[-6.080621,-4.847164,4.421323,6.722819,5.711058,4.914214,-3.617143],[3.899728,-5.416338,-4.297942,6.451598,1.441897,-6.136440,-0.203845],[-6.424673,0.747637,-4.352661,0.626817,-0.746390,0.113533,3.971438],[8.802831,-4.156539,6.810295,-8.899054,-6.835595,-9.984084,-0.333614],[2.723866,4.472987,-5.165873,-3.887140,-2.035461,-7.779802,-0.959364],[-8.441564,9.187705,-3.757359,-8.642981,-8.529695,4.925104,-3.028858]],[[-0.429973,-3.912403,-2.416819,-8.033312,-0.319925,3.896899,-8.806213],[9.418670,7.381918,1.131564,-6.802951,2.076879,9.011540,6.937479],[-9.158713,-7.664175,-6.319449,-0.156694,-0.137391,4.296116,1.653946],[4.278217,5.210055,-7.674098,-1.729357,3.970495,1.579816,2.738844],[-2.268213,-9.799715,1.207594,8.299592,3.540025,-0.809897,-6.571922],[0.440349,-3.077986,-7.127425,8.373938,7.252694,-7.260837,-2.379091],[7.698036,-1.425537,-7.951896,-2.643981,2.157293,-4.066795,4.040475],[-7.983057,-1.041017,4.726730,-2.984953,-4.948927,-3.721006,9.478559],[-9.982696,7.377887,4.108467,2.779602,-3.212259,6.819692,-5.350796],[-9.010709,-8.666916,1.396500,-5.357108,-3.199202,-7.704746,4.772611],[-9.452838,3.846155,-8.896660,-3.747902,-8.538455,-7.594050,5.468073],[-4.941398,5.580730,4.175194,0.910647,-5.725979,5.855897,-9.349200],[-2.877338,-1.036080,-5.420009,3.836009,-5.795699,3.723696,-0.945990],[6.176810,2.340459,5.189797,5.281707,8.682211,2.484021,-3.298080]],[[-2.641593,5.569188,-6.738292,6.344079,8.635587,-9.828000,-9.145988],[8.196523,9.081993,-3.148901,-1.485331,3.368614,-8.653663,1.228855],[-7.332349,-9.144076,-6.598265,7.609941,7.485268,-7.350677,-0.605395],[8.105197,-5.139593,1.214491,1.462185,-6.877246,9.841732,2.557828],[-7.347632,9.185020,3.591026,3.479485,2.076330,-7.494377,7.226770],[-1.435495,9.171125,-7.848544,-6.738538,7.518092,8.472866,3.312224],[4.285250,-9.569026,6.641827,3.250045,3.734339,8.972861,2.665665],[-8.100146,-8.654562,-4.505735,-4.223346,4.838394,-8.908713,-3.696632],[-3.670743,-2.924733,2.665636,-3.918840,5.277761,9.378007,-4.052859],[2.980810,-6.838656,9.453990,-7.461171,0.854293,-0.266392,3.365873],[4.165256,1.597762,-5.374391,-1.861425,-9.266091,-2.783234,-5.508811],[8.200494,-0.607392,-3.605741,-4.887136,5.354600,-2.155400,6.566074],[3.427436,0.613829,-7.623690,2.498867,5.557030,-6.598354,-5.388542],[4.296680,-3.501820,1.352911,8.147215,-3.294032,5.147407,4.162260]],[[-6.629508,3.125459,9.528909,-2.877693,4.912163,-9.499490,4.020095],[-6.142882,-0.696959,-7.609016,-8.821902,9.497718,-8.158754,9.160703],[-6.424386,2.395625,9.030295,-3.978929,6.743337,9.477108,-9.574986],[5.414650,-3.291136,0.822972,8.809387,-5.482598,-7.629455,-1.679959],[2.738994,-7.898903,-6.905777,-8.641044,-5.548254,-7.932126,4.974311],[-3.038244,-6.336603,-5.580468,-1.723105,4.055435,8.572290,0.348039],[5.696459,-6.854218,-8.272305,-7.973666,-2.458517,-0.282695,-4.976535],[7.720626,-5.373106,4.406046,7.161490,-2.522339,-6.104041,-3.181496],[7.033832,8.841891,0.851056,8.485852,-2.055785,-2.927134,-1.307089],[-6.666015,5.905921,-7.867528,3.651172,-5.079619,8.688912,-7.270873],[-7.567079,-4.243526,8.597139,5.158497,5.336260,-6.296261,-8.766025],[0.695125,3.472841,6.720336,9.863508,2.162203,-6.637786,6.784069],[-4.659345,4.976753,-9.973619,-7.700648,6.060947,-5.847926,-7.693079],[-7.102081,4.176760,6.733401,3.355470,-8.841855,-3.555146,-5.687667]],[[1.624101,6.484158,1.213239,5.006787,-5.416418,4.306412,6.789941],[-2.566360,-8.708053,-7.421767,-8.880075,6.193447,0.714666,-3.835623],[1.552696,-1.152847,8.031145,-5.442962,-3.476047,-5.761494,1.408913],[-5.373170,-1.122624,-3.543772,6.354478,-9.469060,-9.717327,-9.861804],[6.528017,7.822734,0.165994,-7.427026,9.939514,7.275678,-6.496483],[-5.164415,-0.440645,-5.301675,-8.255088,6.853986,2.065308,1.567019],[6.911173,0.859918,8.412361,8.952898,-6.059145,6.357105,-9.182924],[5.717387,-9.282556,-6.781220,-2.297396,3.056105,5.579577,1.781152],[5.636355,-4.313818,-9.185127,1.642692,3.822888,-7.285077,-4.095244],[1.921666,-0.432402,9.314402,3.553469,3.318010,-3.067662,-0.686683],[-2.545175,8.234257,-6.611427,-9.653905,1.086353,-7.922231,7.710907],[8.582508,-9.696257,-4.197569,7.903654,-3.176472,-5.630735,2.650177],[-8.628182,-9.053283,5.499232,-9.150566,-7.324587,-4.190224,2.190171],[-5.516499,2.179719,-4.777501,-3.345437,-3.052113,3.926140,-8.287088]],[[6.487339,-2.291086,5.953942,-2.169063,-2.274956,5.757939,0.791234],[6.080487,-5.840830,9.176490,9.859123,-7.855651,2.156322,5.621814],[9.612395,-0.191062,5.205678,-2.366287,8.830371,7.878277,-5.596097],[-1.635278,-7.597677,-8.488780,0.686311,-3.994841,5.175097,1.319154],[-7.346584,5.124812,-4.934425,-8.519067,7.032125,6.803873,1.275937],[-7.168023,2.884494,8.209644,-9.011038,-5.248997,-6.996742,-8.698667],[3.896563,-8.159051,8.680440,1.422167,7.991350,7.003715,3.309943],[8.862050,-0.992140,-5.183559,4.500012,2.466781,7.261697,4.785182],[5.165085,7.758466,0.299941,-5.824164,-6.452586,3.136697,0.384845],[-7.626863,7.223288,0.097880,3.855555,4.171680,1.495141,9.254134],[-3.583867,-4.507004,-1.147736,5.657165,1.951466,-9.698356,4.775230],[7.099880,0.767691,8.569595,-5.633619,-7.866850,-1.072133,-8.304535],[-7.373904,-5.107486,-6.688475,-4.335729,5.027630,3.963252,7.987982],[-1.292290,5.409025,0.039216,7.355076,4.923140,6.260874,5.425735]],[[5.039043,-7.402019,4.350043,-1.259424,0.903425,3.229157,-6.265389],[-2.593879,-9.592430,3.999969,-0.074784,-7.664521,5.899070,3.171129],[1.411025,5.606737,-5.003503,2.887962,-3.225427,-1.340279,-4.646298],[-0.326267,-2.092823,5.094460,1.007690,-7.744412,2.752481,5.112083],[-7.104523,-0.043787,-2.885031,-3.666242,0.793330,-1.586264,9.469865],[3.686038,-0.085542,1.850482,-4.821325,-0.879079,5.315965,-1.420088],[1.938476,0.878350,-9.129007,-0.849925,1.448039,-6.169666,-0.795114],[7.125723,7.766949,4.237377,-1.489264,-2.171038,8.206323,6.008457],[3.371446,-5.067320,2.272589,-9.987894,8.969588,-1.223741,6.972041],[7.907733,-4.085096,0.562703,7.584355,4.771032,3.304527,8.730937],[-4.764038,9.955193,-9.948250,6.181585,-2.627965,8.728039,-5.120184],[-5.134245,-1.030430,4.941681,-9.887393,-7.061467,9.955914,-2.653767],[5.538238,-0.989275,-4.134013,1.220827,0.303297,-2.491530,-0.680276],[7.050362,-7.236958,-5.241709,0.269216,2.886289,1.037131,4.425075]],[[3.068775,9.233428,3.049429,0.448762,-6.247673,-1.771777,7.853555],[6.180492,2.298047,-4.856454,-1.697419,-2.352850,-5.144357,-4.823884],[-1.868688,-7.690962,7.941208,-0.400641,5.110468,-1.018663,3.037566],[5.607363,1.332114,-2.289152,0.978422,-8.966912,-9.267750,8.397560],[-2.424528,-7.056207,-7.842754,0.623445,-6.046196,-6.331182,6.704991],[7.717117,-6.316244,6.291258,3.043386,-9.444818,-5.407051,0.913107],[1.387110,8.173915,-4.622526,-8.642989,-8.776625,-0.690186,-0.724621],[9.303029,9.096292,-4.937484,1.348245,6.864343,6.440934,-0.379661],[0.442191,-9.820102,-8.958996,-0.838662,2.546547,0.147210,-7.757701],[7.406618,9.687876,-1.410423,0.642122,-3.893535,-1.109933,-6.256792],[3.929599,5.685117,-1.059820,7.927635,7.131100,8.056695,3.999885],[8.635145,-0.530966,-0.546718,1.456638,-7.214695,0.500212,8.951460],[-1.277521,7.177831,-5.504958,-8.878278,5.547927,-6.662819,-9.054177],[2.746363,-6.438962,0.774901,6.608869,-1.345326,4.562542,-3.882869]]], dtype = "float32")#candidate|9328|(15, 14, 7)|const|float32
uop_9329 = relay.exp(const_9328.astype('float32')) # shape=(15, 14, 7)
func_6404_call = mod.get_global_var('func_6404')
func_6408_call = mutated_mod.get_global_var('func_6408')
const_9332 = relay.const([[9.660531,-8.193630],[-5.364720,1.115461],[6.546323,6.951650],[1.630713,-7.973906],[8.799514,-7.392384],[7.331639,6.607088],[3.248531,2.371537],[0.991280,-2.418100],[-9.417241,-1.847671],[-7.381055,-7.069691],[-7.898327,2.143394],[-4.662220,7.517802],[-0.630009,-2.605623],[9.558754,-3.573796],[-2.224110,-2.477495],[0.450354,-6.133012],[2.310112,-5.431199],[5.657260,8.719488],[-3.761090,7.128282],[-9.433599,-4.828390],[-6.550177,8.928926],[1.411721,8.168631],[3.213256,2.267358],[-1.092347,-1.818754],[-6.063224,8.141591],[0.996310,-7.740175],[-8.926362,1.953316],[-8.314600,3.956670],[-7.021873,3.672835],[-8.129326,5.269587],[-9.028632,4.551258],[-7.622225,8.088355],[-9.378299,-2.046757],[2.155385,-9.564886],[7.915640,5.140403],[9.454371,-9.248353],[8.188452,0.478939],[-4.854600,3.855516],[-8.651167,-4.243166],[-8.409443,5.395658],[-2.377155,-9.498630],[-6.356675,1.321609],[-2.509528,-5.491471],[2.632331,8.926411],[-0.199597,0.752103],[4.980124,2.570875],[4.599933,8.585943],[0.342651,-6.343119],[-5.026289,-3.647405],[4.414761,-1.244090],[-9.071878,-0.645506],[-6.608847,-8.017812],[-0.008141,6.966701],[-3.884844,7.104510],[-1.204555,2.659063],[-5.252879,-9.845353],[-1.163871,7.031691],[-5.502468,-6.421233],[-4.773494,2.128032],[-2.355424,3.278232],[6.379136,9.947856],[-2.756881,3.203175],[9.389491,-1.273772],[-2.621338,-3.065816],[0.377652,5.589681],[-0.530616,-8.377554],[-0.419961,7.240744],[4.313146,6.586343],[3.871999,-9.938312],[-0.791104,5.341264],[-2.893762,5.644211],[-3.113756,-0.468809],[4.222194,9.783996],[2.643402,9.044574],[8.351483,-3.537575],[3.238373,8.851039],[-6.043471,-2.064138],[7.429993,-4.391106],[-4.835989,2.554287],[-3.912461,-0.661469],[6.553145,0.475673],[-4.233208,-1.453976],[4.444199,-4.159503],[-4.456775,2.239643],[-9.230495,6.694391],[3.289358,2.310048],[9.524682,-0.754073],[-5.163999,-9.915032],[4.098293,-9.476640],[-4.402884,9.532214],[-3.794074,-6.449170],[-0.277097,3.457138],[-1.184698,-5.370306],[6.233229,6.301707],[-5.982651,-3.252374],[-2.680833,-7.758114],[-2.636238,0.806203],[8.104725,-4.247690],[2.486801,9.030478],[-5.571176,-6.135737],[3.020168,3.219954],[-4.934190,-5.274136],[-4.153334,-8.659386],[5.746893,-3.381500],[1.781049,-8.667167],[7.953781,-4.706791],[2.920675,-3.790329],[0.527147,-5.015031],[8.720739,3.867084],[-1.733899,5.864045],[-4.308181,-8.460366],[-2.128757,5.543823],[-0.330357,9.079249],[-9.655999,-3.100447],[6.875862,2.222015],[2.606615,1.591235],[7.417826,1.078726],[-9.564560,2.161472],[-2.935722,-1.846670],[-6.429468,-7.830540],[0.574485,-7.778243],[-7.692603,-5.266926],[6.652729,-0.475709],[9.310705,-3.792977],[-0.451949,8.062135],[-6.703164,7.127070],[-3.342687,9.874602],[0.373703,3.694136],[3.400280,-7.713797],[3.157862,7.030322],[-9.740019,1.066570],[-7.340603,7.179134],[5.000983,3.650729],[8.252366,-2.015377],[7.363166,-3.748995],[-7.223982,5.510638],[-9.999508,1.881524],[-3.324857,-7.784632],[-9.540122,1.294974],[9.567866,6.003627],[9.386764,-8.916689],[8.125177,-0.813377],[3.157040,0.679629],[-4.134735,2.798397],[-7.777304,-2.703889],[-7.200114,5.540647],[0.211636,9.557106],[4.112868,4.939612],[4.575773,0.008281],[5.790969,1.276793],[2.511806,-1.639170],[-7.807177,-0.210520],[-5.725231,0.753013],[5.353920,8.171267],[5.677551,-1.507654],[0.998264,1.802777],[8.797487,0.429472],[-6.612413,5.865678],[9.667528,-3.256606],[-1.687304,-2.767876],[9.948696,3.179486],[-6.228517,2.009384],[4.419349,4.362711],[-5.696065,8.924384],[2.603371,-5.212033],[-9.799683,5.625012],[1.601190,1.162822],[-0.826177,-0.678744],[1.739309,6.294132],[-1.931343,-9.733253],[-9.603365,-6.204005],[-2.345297,-5.888040],[-0.150322,-1.820322],[5.396472,-0.138819],[9.544591,-8.910084],[5.920724,0.005306],[-4.039154,-1.768908],[-9.905567,-8.938932],[-3.340950,9.203974],[-8.899404,6.611333],[-4.468617,9.180033],[1.480514,-7.601737],[2.437614,7.957032],[3.958496,-6.804088],[8.881580,-7.112097],[4.441114,-0.540432],[2.481229,-6.215226],[5.903520,-4.733055],[3.893593,4.488921],[6.103202,5.594319],[-9.485925,2.476430],[-5.312161,9.005193],[-2.744766,7.634280],[-5.706135,-5.548953],[5.233702,-8.708932],[-5.940019,-0.498623],[-5.950409,-1.259312],[3.370626,4.039903],[-2.567893,7.169347],[-4.531629,-5.172388],[-9.120151,-3.653120],[9.119426,-1.485889],[8.243577,-0.007276],[2.257926,-6.317668],[-2.830596,9.495756],[-7.074209,-6.690823],[3.966272,9.162509],[-1.764648,-1.943064],[1.661440,-6.095752],[9.274847,0.037435],[8.556893,-2.605513],[-9.350114,-3.839354],[-8.882701,-1.006191],[-6.687882,5.394917],[-7.698280,6.036753],[8.974955,4.489362],[-4.899199,2.521710],[-7.491084,2.180888],[-6.374973,-5.147630],[-6.579023,-9.214462],[-3.036252,6.794926],[3.862288,-8.015764],[-3.016366,-2.773562],[-5.832138,-3.067724],[0.448244,-2.160460],[6.898997,8.392925],[-5.851416,-9.080841],[2.152203,4.555030],[-5.525585,-6.671117],[6.844099,1.511636],[2.239173,9.011413],[-0.208086,-8.339452],[-1.584537,6.288805],[-8.666047,6.471171],[8.271772,3.679758],[-9.537138,-0.347707],[-5.186596,-2.450128],[-9.559688,4.384318],[-4.527524,6.612648],[-4.526894,-7.504080],[-1.519570,-1.567653],[8.762177,0.904823],[-2.550688,2.476084],[3.197619,1.202007],[-2.987734,-2.908251],[2.515421,-5.723782],[-8.221512,-8.851582],[-3.240739,7.626033],[6.724000,2.761551],[-1.971547,1.663100],[-5.503584,2.994043],[-0.536654,6.882277],[2.162977,5.849917],[1.086233,-4.064774],[7.957805,-8.146842],[0.128278,4.379549],[-4.114353,0.180204],[2.465958,5.099891],[2.106089,-8.934925],[3.908190,6.452968],[6.231284,4.483623],[-5.756431,-0.222713],[9.497315,6.417980],[1.502892,3.372449],[-7.329896,-4.621192],[9.737072,9.824916],[-1.815847,-9.910266],[5.258270,-4.206111],[0.984292,4.419331],[5.770943,7.755581],[-4.129790,-3.575886],[7.022849,9.225295],[-7.277815,-8.090215],[6.158604,1.662098],[4.407824,2.280756],[6.027216,5.543050],[-9.404652,-6.232185],[-5.079675,-9.844072],[7.278048,-6.684823],[-8.866457,-8.163125],[8.583513,-4.515925],[-8.078671,6.397716],[2.616302,-6.953228],[-8.362279,9.523793],[-2.856672,4.428240],[-3.702643,9.718264],[-5.148547,-2.797299],[-6.858323,8.627243],[1.109195,-8.809841],[5.534648,6.109498],[7.689203,9.625256],[1.214200,-1.958742],[5.635534,3.475682],[8.167816,8.633838],[-1.009658,-1.694555],[-6.835590,7.494842],[6.918693,7.216673],[0.996567,4.789231],[-3.459796,-4.642318],[-9.694584,7.966164]], dtype = "float64")#candidate|9332|(300, 2)|const|float64
call_9331 = relay.TupleGetItem(func_6404_call(relay.reshape(const_9332.astype('float64'), [4, 15, 10]), relay.reshape(const_9332.astype('float64'), [4, 15, 10]), ), 0)
call_9333 = relay.TupleGetItem(func_6408_call(relay.reshape(const_9332.astype('float64'), [4, 15, 10]), relay.reshape(const_9332.astype('float64'), [4, 15, 10]), ), 0)
func_5305_call = mod.get_global_var('func_5305')
func_5306_call = mutated_mod.get_global_var('func_5306')
call_9334 = func_5305_call()
call_9335 = func_5305_call()
output = relay.Tuple([uop_9329,call_9331,const_9332,call_9334,])
output2 = relay.Tuple([uop_9329,call_9333,const_9332,call_9335,])
func_9342 = relay.Function([], output)
mod['func_9342'] = func_9342
mod = relay.transform.InferType()(mod)
mutated_mod['func_9342'] = func_9342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9342_call = mutated_mod.get_global_var('func_9342')
call_9343 = func_9342_call()
output = call_9343
func_9344 = relay.Function([], output)
mutated_mod['func_9344'] = func_9344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9223_call = mod.get_global_var('func_9223')
func_9224_call = mutated_mod.get_global_var('func_9224')
call_9345 = relay.TupleGetItem(func_9223_call(), 0)
call_9346 = relay.TupleGetItem(func_9224_call(), 0)
func_5742_call = mod.get_global_var('func_5742')
func_5743_call = mutated_mod.get_global_var('func_5743')
call_9352 = relay.TupleGetItem(func_5742_call(), 0)
call_9353 = relay.TupleGetItem(func_5743_call(), 0)
const_9354 = relay.const([4.585152,-9.796783,-8.098202,6.167907,-5.912731,-0.910477,-7.494054,5.889433,3.211907,5.818420,9.696668,8.381452,3.796424,5.956451,4.356555,-9.300544,9.222046,-5.623826,-7.494962,-4.350796,1.021046,7.558181,3.652033,6.524149,-8.432113,4.352220,-9.982015,7.192339,5.801071,3.019830,2.867667,-4.591316,-5.775715,-8.118117,-6.421380,2.801149,7.090894,7.393813,-3.314445,-3.369019,-2.106642,-2.673901,-8.421298,-5.344962,0.170585,-7.776850,1.669765,2.597327,4.727189,-2.556082,-7.898979,2.562631,9.526589,9.614826,-7.081918,-9.833560,9.775811,4.735561,2.352959,-8.075282,7.485559,9.528689,2.814316,-5.294847,4.862868,-7.984015,0.014879,8.225924,9.013206,-9.446034,-7.695742,-4.278350,6.156800,4.102752,1.380900,9.100636,-3.665160,-1.984017,-3.353086,-7.506561,1.591483,1.363623,7.432375,0.473064,5.031036,-8.992845,6.418813,-3.894961,-6.596247,2.677205,9.010481,-7.714091,8.915211,3.051743,3.204503,6.197979,-4.239523,3.154494,-4.542515,-0.444821,-3.443290,2.364987,3.508005,8.758685,-1.714530,-7.622467,9.842657,7.961765,1.227054,-6.497265,8.673203,1.130093,8.179779,7.188622,-6.445724,4.740503,-9.064901,-9.141085,-5.544083,4.330938,-8.468966,-2.581890,-0.080204,-3.300602,-9.717024,-6.385568,9.415322,-4.543571,7.250227,-9.846182,7.871306,-0.721909,-0.980648,-3.605691,-0.132620,5.999549,3.033497,4.537184,-2.272766,5.815505,-9.734513,-0.027341,2.068333,-9.070547,-7.287427,-4.154701,2.013143,8.311348,4.335930,-0.096038,8.119507,-8.032177,-0.440132,-2.481023,-9.640172,9.837000,1.022394,-3.356703,-4.075079,0.251998,6.349667,3.337157,4.938260,-4.573581,-3.127460,-2.438702,8.505166,-7.789552,-5.130574,-7.348653,-0.580833,-6.942898,7.324746,-2.320549,6.224848,-0.679281,-0.422215,9.020382,-9.172824,-4.143705,4.242449,-4.498418,-3.652596,-6.749848,8.323871,4.410634,-7.457630,3.741963,-2.636705,-7.502123,-2.864347,-8.833710,-1.032906,-8.158249,7.276909,1.700236,7.139909,9.704682,-0.597203,4.245552,-9.720533,9.550073,-2.793821,-7.668735,-8.785511,-8.628727,9.742775,8.898967,1.056543,-5.202730,2.918190,6.809250,4.797696,-0.428115,-7.609462,9.013795,-6.686130,8.472989,-2.933466,9.197537,-7.710342,8.080738,-5.622426,4.942791,-1.409818,-3.220100,4.909111,-8.122895,5.210310,-2.154810,-2.008522,-0.973254,-9.903469,4.585747,-7.558493,-2.375468,7.593953,-7.778869,-5.648935,5.686877,-5.185567,-3.560713,8.807664,-5.878219,0.654833,-2.469742,0.347665,-0.861749,-3.124771,-2.855287,-0.164903,-7.751303,-4.489113,5.157104,-9.855701,0.731139,4.352390,2.476710,-4.961020,5.180298,-3.763535,-1.872829,-1.250789,-8.614953,-3.735716,4.393036,2.277401,-5.176043,5.135164,-7.806280,-6.871902,-6.725722,-7.011809,-0.160120,1.745664,-6.987259,2.940364,1.331066,-2.617212,3.990026,-2.870071,6.919313,-5.763275,2.034169,-9.369281,2.004941,6.637689,-7.180386,2.616432,8.506512,-4.718063,3.009766,-4.921395,8.193734,-4.902754,2.113873,-8.201336,-6.263773,4.912243,-1.497907,3.064508,-9.693751,2.887275,-3.746292,-5.700616,5.766884,-5.001775,-9.055202,-6.890546,5.380144,-7.029800,8.245336], dtype = "float32")#candidate|9354|(312,)|const|float32
bop_9355 = relay.floor_divide(call_9345.astype('float64'), relay.reshape(const_9354.astype('float64'), relay.shape_of(call_9345))) # shape=(312,)
bop_9358 = relay.floor_divide(call_9346.astype('float64'), relay.reshape(const_9354.astype('float64'), relay.shape_of(call_9346))) # shape=(312,)
func_8167_call = mod.get_global_var('func_8167')
func_8168_call = mutated_mod.get_global_var('func_8168')
call_9360 = relay.TupleGetItem(func_8167_call(), 0)
call_9361 = relay.TupleGetItem(func_8168_call(), 0)
output = relay.Tuple([call_9352,bop_9355,call_9360,])
output2 = relay.Tuple([call_9353,bop_9358,call_9361,])
func_9377 = relay.Function([], output)
mod['func_9377'] = func_9377
mod = relay.transform.InferType()(mod)
output = func_9377()
func_9378 = relay.Function([], output)
mutated_mod['func_9378'] = func_9378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6247_call = mutated_mod.get_global_var('func_6247')
call_9412 = relay.TupleGetItem(func_6245_call(), 1)
call_9413 = relay.TupleGetItem(func_6247_call(), 1)
uop_9414 = relay.atan(call_9412.astype('float32')) # shape=(13, 12, 2)
uop_9416 = relay.atan(call_9413.astype('float32')) # shape=(13, 12, 2)
output = relay.Tuple([uop_9414,])
output2 = relay.Tuple([uop_9416,])
func_9439 = relay.Function([], output)
mod['func_9439'] = func_9439
mod = relay.transform.InferType()(mod)
output = func_9439()
func_9440 = relay.Function([], output)
mutated_mod['func_9440'] = func_9440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8911_call = mod.get_global_var('func_8911')
func_8912_call = mutated_mod.get_global_var('func_8912')
call_9496 = func_8911_call()
call_9497 = func_8911_call()
func_8853_call = mod.get_global_var('func_8853')
func_8854_call = mutated_mod.get_global_var('func_8854')
call_9514 = relay.TupleGetItem(func_8853_call(), 0)
call_9515 = relay.TupleGetItem(func_8854_call(), 0)
func_8371_call = mod.get_global_var('func_8371')
func_8372_call = mutated_mod.get_global_var('func_8372')
call_9521 = relay.TupleGetItem(func_8371_call(), 0)
call_9522 = relay.TupleGetItem(func_8372_call(), 0)
output = relay.Tuple([call_9496,call_9514,call_9521,])
output2 = relay.Tuple([call_9497,call_9515,call_9522,])
func_9545 = relay.Function([], output)
mod['func_9545'] = func_9545
mod = relay.transform.InferType()(mod)
mutated_mod['func_9545'] = func_9545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9545_call = mutated_mod.get_global_var('func_9545')
call_9546 = func_9545_call()
output = call_9546
func_9547 = relay.Function([], output)
mutated_mod['func_9547'] = func_9547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6247_call = mutated_mod.get_global_var('func_6247')
call_9581 = relay.TupleGetItem(func_6245_call(), 0)
call_9582 = relay.TupleGetItem(func_6247_call(), 0)
func_8210_call = mod.get_global_var('func_8210')
func_8212_call = mutated_mod.get_global_var('func_8212')
call_9601 = relay.TupleGetItem(func_8210_call(), 3)
call_9602 = relay.TupleGetItem(func_8212_call(), 3)
func_6754_call = mod.get_global_var('func_6754')
func_6756_call = mutated_mod.get_global_var('func_6756')
var_9623 = relay.var("var_9623", dtype = "float32", shape = (420,))#candidate|9623|(420,)|var|float32
call_9622 = func_6754_call(relay.reshape(var_9623.astype('float32'), [6, 5, 14]))
call_9624 = func_6754_call(relay.reshape(var_9623.astype('float32'), [6, 5, 14]))
output = relay.Tuple([call_9581,call_9601,call_9622,var_9623,])
output2 = relay.Tuple([call_9582,call_9602,call_9624,var_9623,])
func_9646 = relay.Function([var_9623,], output)
mod['func_9646'] = func_9646
mod = relay.transform.InferType()(mod)
mutated_mod['func_9646'] = func_9646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9647 = relay.var("var_9647", dtype = "float32", shape = (420,))#candidate|9647|(420,)|var|float32
func_9646_call = mutated_mod.get_global_var('func_9646')
call_9648 = func_9646_call(var_9647)
output = call_9648
func_9649 = relay.Function([var_9647], output)
mutated_mod['func_9649'] = func_9649
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9665 = relay.var("var_9665", dtype = "float64", shape = (15, 5, 6))#candidate|9665|(15, 5, 6)|var|float64
const_9666 = relay.const([[[-4.857376,-8.440336,3.878377,4.292654,6.841403,-7.635922],[2.607039,7.295196,-5.567314,-0.041528,-9.496625,-7.648684],[-9.956973,0.813087,-7.203700,2.377216,-8.772814,-1.161356],[2.552225,9.880495,-2.106876,1.640757,-1.720771,8.880634],[2.053467,2.794555,3.851136,-7.250855,-2.779638,0.826390]],[[-9.485789,-0.883948,-4.093533,-4.944276,-2.155147,0.165924],[4.494055,5.042501,4.171575,-6.137794,-3.813359,2.531240],[8.883256,2.125945,0.599076,2.238216,3.771210,-9.183521],[-8.818215,9.882599,-5.337044,3.585586,-4.309359,8.926762],[7.681078,-6.432016,-9.118664,-4.858957,1.382810,3.041052]],[[-5.624328,-7.412146,-3.356429,1.751869,4.673774,-3.033398],[8.422894,-3.483407,-5.489114,-4.021759,3.325499,2.262499],[-3.576801,-1.035749,-1.236318,-1.323209,-2.115778,-8.578884],[8.791292,5.280303,8.778675,-5.554049,2.735916,-4.616299],[9.551995,6.516812,6.915833,-9.114940,-3.169175,-2.366062]],[[-2.777495,1.527176,6.096329,-0.978219,-9.213419,-2.622377],[9.944140,-0.696120,9.925842,-2.164089,0.952281,0.085979],[-4.633200,-2.594230,-7.477152,4.799164,5.779949,0.321879],[8.920927,8.749147,4.134007,6.953221,5.172939,6.616532],[-0.937741,3.746010,-9.159976,-6.263936,-1.375778,5.851136]],[[4.322658,7.140997,-3.862317,-9.165836,-5.616072,4.021683],[5.225087,-3.504089,-3.354602,5.429538,2.208309,2.094625],[0.801123,7.140503,-0.965517,0.351012,4.100992,5.197179],[7.961671,0.502104,7.284327,-4.869800,5.966068,3.892561],[-8.710692,-4.659560,4.266303,9.122958,-7.103001,-7.927249]],[[-6.527207,-0.774284,6.408695,5.077725,6.272957,-4.258307],[8.291999,7.895740,-7.911267,-7.615373,4.062861,-3.707614],[-2.471643,-2.019885,-4.453245,-6.366317,-7.389192,9.827824],[-8.409726,-0.008762,2.112978,-4.523902,5.083193,-7.824085],[1.426051,7.920933,1.636546,4.219880,8.405760,-7.569275]],[[1.561373,-7.045760,-5.994644,2.599657,-1.350498,-3.947987],[-5.786784,-7.899473,6.117185,9.258137,-3.447042,4.933649],[6.073868,8.112323,-4.906655,-8.140362,-9.338926,4.498711],[-5.145723,7.081023,4.036401,0.229846,7.677729,4.802885],[-2.082435,1.256133,9.126871,-7.054983,4.072700,-3.917616]],[[-4.322205,7.393475,8.655646,3.388689,2.261617,2.405255],[-6.887480,8.442106,-6.887718,-1.403315,0.358906,7.548329],[5.303232,2.005508,-4.353859,-4.272508,6.104767,7.520556],[5.725586,-9.548057,-7.275099,6.641282,-1.758731,-4.919033],[6.551162,2.511447,-2.125156,-4.315988,8.349208,-4.426083]],[[1.951223,-5.326009,8.882834,0.667827,-7.500164,7.214141],[8.858354,8.309791,8.736098,2.870386,7.915783,-2.366836],[7.984221,7.843935,-9.998820,-6.538771,-8.455086,-0.749652],[8.775118,-6.136774,-0.640566,-6.756495,-1.934224,8.966154],[6.882029,6.997157,-2.652330,-4.176628,-6.638273,-8.792747]],[[1.969654,-6.027996,4.552787,8.238900,-8.159782,-6.015393],[-5.365068,4.134175,-2.378526,-9.794041,4.369036,-7.852480],[6.415023,6.706094,-9.251512,3.851435,5.594414,-6.476395],[-4.051769,3.959568,1.649868,0.435546,-7.157877,2.747502],[-4.951649,-6.802212,0.987602,5.543522,8.134758,-0.702828]],[[-7.862731,3.305882,0.871085,-5.050845,-6.342262,-7.403055],[6.261478,7.894765,-0.784163,-9.495550,-4.768966,-4.341267],[-1.382478,6.261742,5.219320,2.053812,9.925020,3.020267],[-0.958013,-9.801101,1.200195,6.177741,6.423976,-8.922762],[4.483650,-0.711381,6.766866,7.913175,-0.219352,3.146723]],[[-8.875992,5.970742,4.163717,-3.527772,-6.585081,-0.739811],[1.231264,-9.364462,-6.874395,3.518176,9.709959,-0.021848],[-6.370168,-7.917700,-9.710276,-3.042030,3.104161,-2.390200],[-1.927878,-9.888326,4.305083,-8.283044,-5.173798,7.523115],[7.730846,-2.824907,-5.121640,3.035357,-8.331282,7.656141]],[[2.077333,9.034191,9.985986,-6.149457,-8.290712,-4.499073],[9.584993,1.413626,4.924635,1.632530,6.542775,-4.445711],[-7.516315,-0.145731,1.797576,3.587384,-5.451543,3.609246],[-9.626959,4.058800,8.475203,-4.488853,7.944928,-7.491426],[5.175844,8.623309,-1.526782,-3.873904,-1.060545,7.630602]],[[1.021111,-1.002590,-5.938407,8.673558,6.545760,4.785272],[9.578245,-0.300835,7.780490,9.462294,-1.718681,6.548178],[-9.935134,2.781767,8.050247,5.448356,6.600952,-3.434432],[0.930663,-6.324072,-7.669692,2.709871,9.807242,-8.491441],[3.456938,9.487339,3.719931,-0.188684,3.529753,-7.916925]],[[-0.698855,1.070921,2.472494,8.218422,7.782837,-0.166771],[-7.120603,8.646333,4.320297,-1.173380,-2.939599,-0.561896],[8.247950,9.157777,-1.987302,7.520163,2.105669,-7.674447],[-3.019546,-1.090888,8.772072,6.682877,-5.940321,9.521546],[2.749878,-2.671522,-7.808307,0.808716,5.467271,-8.961439]]], dtype = "float64")#candidate|9666|(15, 5, 6)|const|float64
bop_9667 = relay.power(var_9665.astype('float64'), relay.reshape(const_9666.astype('float64'), relay.shape_of(var_9665))) # shape=(15, 5, 6)
output = relay.Tuple([bop_9667,])
output2 = relay.Tuple([bop_9667,])
func_9671 = relay.Function([var_9665,], output)
mod['func_9671'] = func_9671
mod = relay.transform.InferType()(mod)
mutated_mod['func_9671'] = func_9671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9672 = relay.var("var_9672", dtype = "float64", shape = (15, 5, 6))#candidate|9672|(15, 5, 6)|var|float64
func_9671_call = mutated_mod.get_global_var('func_9671')
call_9673 = func_9671_call(var_9672)
output = call_9673
func_9674 = relay.Function([var_9672], output)
mutated_mod['func_9674'] = func_9674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_9689 = func_4667_call()
call_9690 = func_4667_call()
output = relay.Tuple([call_9689,])
output2 = relay.Tuple([call_9690,])
func_9693 = relay.Function([], output)
mod['func_9693'] = func_9693
mod = relay.transform.InferType()(mod)
mutated_mod['func_9693'] = func_9693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9693_call = mutated_mod.get_global_var('func_9693')
call_9694 = func_9693_call()
output = call_9694
func_9695 = relay.Function([], output)
mutated_mod['func_9695'] = func_9695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9726 = relay.var("var_9726", dtype = "uint16", shape = (3, 13, 15))#candidate|9726|(3, 13, 15)|var|uint16
var_9727 = relay.var("var_9727", dtype = "uint16", shape = (3, 13, 15))#candidate|9727|(3, 13, 15)|var|uint16
bop_9728 = relay.greater_equal(var_9726.astype('bool'), relay.reshape(var_9727.astype('bool'), relay.shape_of(var_9726))) # shape=(3, 13, 15)
func_5268_call = mod.get_global_var('func_5268')
func_5270_call = mutated_mod.get_global_var('func_5270')
call_9731 = relay.TupleGetItem(func_5268_call(), 0)
call_9732 = relay.TupleGetItem(func_5270_call(), 0)
uop_9749 = relay.sinh(bop_9728.astype('float64')) # shape=(3, 13, 15)
output = relay.Tuple([call_9731,uop_9749,])
output2 = relay.Tuple([call_9732,uop_9749,])
func_9755 = relay.Function([var_9726,var_9727,], output)
mod['func_9755'] = func_9755
mod = relay.transform.InferType()(mod)
var_9756 = relay.var("var_9756", dtype = "uint16", shape = (3, 13, 15))#candidate|9756|(3, 13, 15)|var|uint16
var_9757 = relay.var("var_9757", dtype = "uint16", shape = (3, 13, 15))#candidate|9757|(3, 13, 15)|var|uint16
output = func_9755(var_9756,var_9757,)
func_9758 = relay.Function([var_9756,var_9757,], output)
mutated_mod['func_9758'] = func_9758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7390_call = mod.get_global_var('func_7390')
func_7391_call = mutated_mod.get_global_var('func_7391')
call_9781 = relay.TupleGetItem(func_7390_call(), 0)
call_9782 = relay.TupleGetItem(func_7391_call(), 0)
output = relay.Tuple([call_9781,])
output2 = relay.Tuple([call_9782,])
func_9787 = relay.Function([], output)
mod['func_9787'] = func_9787
mod = relay.transform.InferType()(mod)
output = func_9787()
func_9788 = relay.Function([], output)
mutated_mod['func_9788'] = func_9788
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9808 = relay.var("var_9808", dtype = "float64", shape = (15, 10, 4))#candidate|9808|(15, 10, 4)|var|float64
uop_9809 = relay.sinh(var_9808.astype('float64')) # shape=(15, 10, 4)
func_7844_call = mod.get_global_var('func_7844')
func_7847_call = mutated_mod.get_global_var('func_7847')
var_9844 = relay.var("var_9844", dtype = "float32", shape = (312,))#candidate|9844|(312,)|var|float32
call_9843 = relay.TupleGetItem(func_7844_call(relay.reshape(var_9844.astype('float32'), [156, 2])), 1)
call_9845 = relay.TupleGetItem(func_7847_call(relay.reshape(var_9844.astype('float32'), [156, 2])), 1)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
call_9850 = relay.TupleGetItem(func_3442_call(relay.reshape(var_9844.astype('float32'), [13, 12, 2])), 2)
call_9851 = relay.TupleGetItem(func_3444_call(relay.reshape(var_9844.astype('float32'), [13, 12, 2])), 2)
output = relay.Tuple([uop_9809,call_9843,var_9844,call_9850,])
output2 = relay.Tuple([uop_9809,call_9845,var_9844,call_9851,])
func_9856 = relay.Function([var_9808,var_9844,], output)
mod['func_9856'] = func_9856
mod = relay.transform.InferType()(mod)
mutated_mod['func_9856'] = func_9856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9856_call = mutated_mod.get_global_var('func_9856')
var_9858 = relay.var("var_9858", dtype = "float64", shape = (15, 10, 4))#candidate|9858|(15, 10, 4)|var|float64
var_9859 = relay.var("var_9859", dtype = "float32", shape = (312,))#candidate|9859|(312,)|var|float32
call_9857 = func_9856_call(var_9858,var_9859,)
output = call_9857
func_9860 = relay.Function([var_9858,var_9859,], output)
mutated_mod['func_9860'] = func_9860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7390_call = mod.get_global_var('func_7390')
func_7391_call = mutated_mod.get_global_var('func_7391')
call_9891 = relay.TupleGetItem(func_7390_call(), 0)
call_9892 = relay.TupleGetItem(func_7391_call(), 0)
func_7059_call = mod.get_global_var('func_7059')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_9916 = relay.TupleGetItem(func_7059_call(), 0)
call_9917 = relay.TupleGetItem(func_7061_call(), 0)
output = relay.Tuple([call_9891,call_9916,])
output2 = relay.Tuple([call_9892,call_9917,])
func_9938 = relay.Function([], output)
mod['func_9938'] = func_9938
mod = relay.transform.InferType()(mod)
mutated_mod['func_9938'] = func_9938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9938_call = mutated_mod.get_global_var('func_9938')
call_9939 = func_9938_call()
output = call_9939
func_9940 = relay.Function([], output)
mutated_mod['func_9940'] = func_9940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8562_call = mod.get_global_var('func_8562')
func_8563_call = mutated_mod.get_global_var('func_8563')
call_9961 = relay.TupleGetItem(func_8562_call(), 1)
call_9962 = relay.TupleGetItem(func_8563_call(), 1)
output = call_9961
output2 = call_9962
func_9967 = relay.Function([], output)
mod['func_9967'] = func_9967
mod = relay.transform.InferType()(mod)
output = func_9967()
func_9968 = relay.Function([], output)
mutated_mod['func_9968'] = func_9968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8861_call = mod.get_global_var('func_8861')
func_8862_call = mutated_mod.get_global_var('func_8862')
call_10009 = relay.TupleGetItem(func_8861_call(), 0)
call_10010 = relay.TupleGetItem(func_8862_call(), 0)
output = call_10009
output2 = call_10010
func_10014 = relay.Function([], output)
mod['func_10014'] = func_10014
mod = relay.transform.InferType()(mod)
mutated_mod['func_10014'] = func_10014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10014_call = mutated_mod.get_global_var('func_10014')
call_10015 = func_10014_call()
output = call_10015
func_10016 = relay.Function([], output)
mutated_mod['func_10016'] = func_10016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5581_call = mod.get_global_var('func_5581')
func_5582_call = mutated_mod.get_global_var('func_5582')
call_10105 = relay.TupleGetItem(func_5581_call(), 3)
call_10106 = relay.TupleGetItem(func_5582_call(), 3)
func_2689_call = mod.get_global_var('func_2689')
func_2692_call = mutated_mod.get_global_var('func_2692')
var_10111 = relay.var("var_10111", dtype = "float64", shape = (784,))#candidate|10111|(784,)|var|float64
call_10110 = func_2689_call(relay.reshape(var_10111.astype('float64'), [4, 14, 14]))
call_10112 = func_2689_call(relay.reshape(var_10111.astype('float64'), [4, 14, 14]))
output = relay.Tuple([call_10105,call_10110,var_10111,])
output2 = relay.Tuple([call_10106,call_10112,var_10111,])
func_10114 = relay.Function([var_10111,], output)
mod['func_10114'] = func_10114
mod = relay.transform.InferType()(mod)
var_10115 = relay.var("var_10115", dtype = "float64", shape = (784,))#candidate|10115|(784,)|var|float64
output = func_10114(var_10115)
func_10116 = relay.Function([var_10115], output)
mutated_mod['func_10116'] = func_10116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8175_call = mod.get_global_var('func_8175')
func_8177_call = mutated_mod.get_global_var('func_8177')
call_10131 = func_8175_call()
call_10132 = func_8175_call()
output = call_10131
output2 = call_10132
func_10139 = relay.Function([], output)
mod['func_10139'] = func_10139
mod = relay.transform.InferType()(mod)
mutated_mod['func_10139'] = func_10139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10139_call = mutated_mod.get_global_var('func_10139')
call_10140 = func_10139_call()
output = call_10140
func_10141 = relay.Function([], output)
mutated_mod['func_10141'] = func_10141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9787_call = mod.get_global_var('func_9787')
func_9788_call = mutated_mod.get_global_var('func_9788')
call_10167 = relay.TupleGetItem(func_9787_call(), 0)
call_10168 = relay.TupleGetItem(func_9788_call(), 0)
output = relay.Tuple([call_10167,])
output2 = relay.Tuple([call_10168,])
func_10169 = relay.Function([], output)
mod['func_10169'] = func_10169
mod = relay.transform.InferType()(mod)
output = func_10169()
func_10170 = relay.Function([], output)
mutated_mod['func_10170'] = func_10170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7164_call = mod.get_global_var('func_7164')
func_7166_call = mutated_mod.get_global_var('func_7166')
call_10200 = relay.TupleGetItem(func_7164_call(), 1)
call_10201 = relay.TupleGetItem(func_7166_call(), 1)
const_10216 = relay.const([[[7.473234,9.552175,-9.317437,-8.543135,1.428359,8.159578,-0.013093,5.910372,-6.074982,-1.087375,4.522746,8.921868,-9.919172,-2.723634,5.139826,6.682457],[6.565013,7.174154,-4.102155,-5.787916,-6.279248,-9.504529,-5.130909,2.046825,-2.777015,6.515525,-0.853727,5.909316,7.398885,6.939484,1.559545,-1.164551],[7.468435,-5.402042,6.417182,5.778807,-7.967403,5.914313,1.277505,3.705285,-2.706879,-2.416268,8.802410,9.863751,0.409868,6.855022,7.725511,5.854824],[-6.795968,-2.864382,-3.235357,1.047003,-1.818323,7.258172,-8.386041,6.773051,2.246405,9.695160,5.701492,-6.466410,0.482331,9.583939,4.344132,9.867490],[-1.109370,0.550295,3.219721,7.084117,0.564801,-9.534082,8.894002,-0.058716,8.317618,-8.849670,-0.689147,1.712364,-9.501959,-6.721779,4.180191,6.163844],[-1.885538,1.809919,-9.019973,2.609920,1.226127,1.557502,2.559192,-9.507407,4.196949,-4.317173,6.093629,-7.157631,-7.596515,2.644260,-1.138313,-3.159155],[7.423569,5.840755,-5.826434,-3.377772,-1.887636,1.142705,2.034599,-2.356573,-7.533495,2.736549,-0.634331,4.477951,-6.788539,-3.814591,-7.112673,1.739273],[-3.917993,0.510830,2.274330,6.610481,1.755624,-6.921597,-2.920038,6.728577,0.931863,-0.693849,-8.213031,-9.625940,-8.078138,-2.615918,5.989094,-8.657263],[-6.136542,3.417457,2.418482,5.058987,8.651712,-7.048697,-3.907221,-0.770094,-3.812823,6.270803,-0.873142,8.412068,-6.480592,4.666292,-5.680491,-6.803681],[2.202333,-4.565478,-3.004523,2.884071,0.125108,4.106033,-4.519614,1.753307,-9.492636,2.131735,7.446456,7.528052,-4.990549,8.242562,-8.658536,9.366965],[8.334570,1.243237,1.062997,5.302317,-1.769524,-2.088163,-9.480203,8.747231,-8.741691,-2.525530,2.856740,-8.644214,-8.131617,-0.924728,8.461104,3.328838]],[[-7.846141,-7.567311,9.697451,-9.125600,-9.238401,-6.301888,2.042018,8.093025,5.131932,9.059174,6.142878,-7.003263,1.189727,-5.872019,3.084140,-0.087057],[-4.982634,9.039796,-8.247684,8.125303,4.848059,-1.184009,9.307080,-7.371442,7.245579,-3.998953,8.036686,-9.295799,6.578164,3.303926,-7.099931,-3.170794],[-8.074416,4.661603,-0.627906,8.312127,-0.945202,-0.969298,8.034738,-7.934802,-5.254107,6.553861,-3.025218,-1.653451,3.587772,-8.500645,3.527096,-1.152938],[-6.889514,1.333329,1.731566,-2.512500,-8.745120,5.891662,-2.685415,-6.799106,-5.014463,-8.578571,7.205429,8.777428,7.210046,3.153042,-8.242851,-0.658301],[9.424672,0.013881,2.205480,-1.700345,-3.844559,6.732986,-0.256130,9.460935,-1.364776,1.883941,8.607626,-8.977122,-0.273017,6.686725,7.858464,1.681355],[1.193503,0.653381,9.142807,-9.654453,-5.727806,-3.696327,0.250613,5.680430,6.370949,-7.353927,1.436795,5.698761,-3.928113,2.003187,4.225637,-7.658073],[9.528839,8.644267,7.449460,8.732821,8.012264,-0.545714,3.318411,-0.053290,-5.264943,5.319003,9.225653,6.714260,-1.770719,-1.322049,-2.861461,-5.496501],[-7.950507,-4.097968,-1.846165,3.331732,0.603114,-9.136587,-9.418405,5.817930,2.803360,-7.588449,-7.151731,-1.790990,-6.834241,-9.689613,0.625212,2.012712],[-6.517951,-6.462671,6.670885,-5.483194,1.880420,9.659616,-5.589232,1.369362,-2.600246,-1.780324,7.497472,9.434159,0.492438,-2.989735,-9.674948,1.573818],[3.862307,7.338275,8.959013,6.396506,9.043726,-6.232386,-2.883594,4.119590,-6.769174,5.384213,1.911057,6.126518,-9.544251,9.093143,8.033519,8.627701],[-3.993887,1.095252,-5.660348,4.317410,-6.946898,9.657878,0.836182,6.932755,3.839441,2.555838,1.443051,4.644578,6.724993,-3.180085,3.254177,3.723074]],[[7.922237,-1.283863,-3.738647,3.904267,0.162917,1.903704,4.813676,-6.409366,1.340123,7.903906,4.882458,-3.694503,-3.250839,1.511214,-7.262358,3.359453],[-4.750223,5.032609,4.229916,9.711650,-5.228408,9.161566,3.884354,-1.214837,-1.970624,9.610368,-0.976684,-8.021901,-6.194721,3.501018,-9.945849,-0.261514],[-3.072637,1.400531,-5.902292,-8.384994,3.475975,5.587725,-0.187157,7.141267,4.503981,-6.278876,-7.760481,-6.708568,-6.845958,6.651824,3.235947,0.999936],[-8.308008,8.653340,9.571623,3.712973,-9.454958,0.234503,-8.268423,8.184654,8.087465,4.960804,-1.773309,0.587335,5.209425,0.641403,-7.501425,-6.878963],[-9.505904,-9.502254,-7.127145,-7.798297,-7.610092,5.467394,1.026888,-9.711233,-2.978952,-0.920196,-1.442156,9.977463,1.198626,-7.297749,-0.511937,-1.830617],[-1.317886,-2.814185,-2.743789,3.887021,0.682958,9.017788,1.985787,7.643629,6.481259,-5.909347,9.882257,-4.998396,8.270315,2.364537,9.330694,-9.805332],[-4.384002,-9.374237,9.999655,3.787465,-7.574082,2.627989,-2.464221,8.091784,2.015735,6.400544,-0.697151,2.443203,-2.366913,6.675565,-8.043566,-0.486673],[-1.985795,7.399244,-9.533849,-0.463247,3.542352,9.493370,1.526166,0.404757,-9.981134,0.502628,-8.925452,-6.939320,4.387855,6.559829,5.034427,-0.563395],[-6.517096,-1.584897,-5.141036,-6.950391,-1.696273,-2.760219,-9.461847,-6.610355,-1.077775,8.480148,-8.998263,-4.665407,2.542232,9.634082,4.820202,1.346456],[5.961440,-0.572146,-3.260281,3.947024,-6.959996,-5.452447,-1.906633,-2.112209,8.331978,1.935561,7.208866,7.340123,1.971413,-8.372509,8.246208,7.618525],[1.108366,-5.754294,-2.220585,-1.722260,6.628972,5.085286,-8.473266,2.139721,-0.649205,7.147951,-0.420248,-1.478349,-0.499922,-3.753110,-0.031029,-7.498321]],[[1.937631,-1.644704,4.849014,9.125693,5.147901,-7.091183,-1.887917,5.157596,-4.621885,-3.145244,-5.067642,2.097369,5.650093,-1.021216,3.877024,5.176059],[5.385315,-8.478345,4.524482,-3.985569,-7.325776,-3.075218,-6.330677,6.700864,-1.699362,5.928073,6.877954,3.911776,-2.958925,-0.163757,4.872701,-8.781068],[3.756593,6.865773,-0.407074,-3.533591,-5.524803,6.968339,-5.052388,5.404918,7.531863,3.274301,6.078307,3.778237,-1.192510,6.260177,-4.676857,3.690757],[-8.671739,-0.131764,-6.802667,-3.371944,4.212936,8.461862,-1.072938,-7.615732,6.414321,-4.443452,7.332760,-2.741888,-6.673008,9.605961,7.820941,-4.557394],[0.664248,4.418870,7.376433,-8.849628,5.035873,7.718523,-2.721252,9.427298,0.915541,6.825235,-7.425602,7.530741,6.247259,9.688353,5.028928,4.053296],[-1.630041,-1.141401,-3.987604,-6.319476,-2.707894,1.964170,6.601977,-9.942375,8.911577,9.548437,5.914079,-1.009710,9.775578,0.314449,1.544717,2.020907],[6.067719,-4.957416,-9.644306,-5.054466,-9.544924,-0.603209,-8.285715,-5.228683,-0.645274,8.817788,-2.606622,-3.315057,7.841679,-6.265584,-8.731564,-0.920459],[4.823253,4.006890,0.798357,-1.486082,-1.492387,-5.940304,6.388185,-8.391401,-8.127852,9.602982,8.812220,1.743250,-5.125447,9.490859,6.588255,-9.192778],[-9.311919,1.550640,3.078969,5.993179,-4.896719,3.825074,5.904217,3.721216,0.209218,-8.198418,-3.427150,-5.719433,-9.796976,-2.316225,6.216456,-6.668765],[-9.082222,-9.034559,-5.385469,5.595663,1.111151,-8.888472,-9.380701,-2.282403,0.239070,-0.882225,-4.491116,-4.092578,3.417554,9.749412,9.625997,-3.634339],[5.030287,-9.522882,2.465118,-1.559090,-0.916470,6.422390,-4.902346,-3.774545,-3.168579,5.025435,3.624604,6.022452,-7.701161,-6.966899,8.111992,-0.228716]],[[6.929328,-7.235195,-7.904735,4.321719,7.907829,-2.126579,-8.827378,8.557693,1.380494,-0.742261,-2.063241,8.957138,-5.869214,8.551504,5.058382,-2.481840],[-3.793762,9.884988,8.212322,9.894239,2.294549,-2.319548,-6.433688,-6.607423,-8.508108,7.932097,1.985488,-6.384940,-5.945200,8.064474,4.717129,-5.339948],[-4.843779,-6.752836,-2.828013,-4.112472,6.946371,9.502712,8.776128,-6.578501,-5.149769,-3.945298,-3.419022,0.027876,-0.901594,-5.272166,-0.072208,7.211078],[-3.367827,-9.343589,3.976687,-8.109734,8.045936,8.199604,-1.775868,2.307824,7.574017,-9.375553,-7.296951,-9.243956,-7.827033,-0.556740,5.635210,5.951375],[0.032769,-5.335064,-2.394188,-6.901531,-7.285056,-9.643814,2.052359,-4.156508,-3.278779,-3.799709,-2.671032,6.430181,-1.729419,-1.839358,-4.828988,9.262079],[8.018880,-9.371749,1.722329,-8.721568,-0.031654,-1.069412,-4.955588,-0.503590,3.409673,6.539155,7.619337,-1.059274,-6.712505,0.910082,-1.382476,-6.867434],[-7.321612,4.409595,5.318784,-1.786730,4.761989,7.299714,3.621259,-2.517251,5.704930,-6.686000,-3.809405,-6.084641,2.521994,1.422435,-5.949923,-8.326742],[1.017121,-2.605944,0.125749,-2.585697,8.589976,-9.153020,-4.523952,1.513166,-0.575381,-6.084785,-5.881385,0.523819,9.593353,7.079458,-6.884223,-3.304678],[-2.393385,0.803117,2.646870,-9.376377,3.265536,3.111300,8.871851,1.782881,4.822857,-8.460567,-5.300163,5.379031,4.933977,-1.288788,-8.000529,4.452447],[5.145449,-5.210659,-6.122179,-1.374926,1.551953,1.081127,-8.850079,-9.502086,8.770721,-6.829014,-6.580996,6.898008,-3.778032,-7.118734,-5.916699,4.178768],[-7.987091,9.230103,-8.793913,-2.357846,8.825636,-7.356638,8.680869,1.121425,-6.177272,-7.753025,-9.553334,-8.306864,7.994425,1.299710,-3.375226,-7.803855]],[[5.615382,3.110124,9.901723,0.886949,-4.088395,-5.511029,3.196736,-5.458855,1.288150,-4.655533,-7.297525,1.493184,3.209491,5.444436,7.539164,-0.372741],[6.437318,9.487578,-5.551762,-9.906814,-6.463959,-2.203643,-5.704659,5.337012,8.822160,7.781449,-4.581420,-8.618022,-6.369166,8.642754,2.451221,-4.917687],[-8.139254,3.514695,-8.444937,8.982738,-2.064178,-0.140425,-4.155854,9.982979,-0.311828,2.771184,6.661031,-8.844232,4.429154,7.128946,-7.974905,-1.526873],[2.692689,6.174330,6.352513,3.467656,-5.893109,-1.643079,1.927427,-1.995992,2.909116,8.780863,4.940654,-3.117697,2.180770,2.364126,1.609249,-8.356396],[9.919804,-4.238161,-7.207460,4.599911,-3.306270,1.190052,4.801350,9.510676,2.968174,6.374742,-7.949702,-4.627285,0.378985,3.452222,0.464923,-5.417317],[3.345807,4.236080,-9.684388,-5.987494,-4.600187,-3.236186,-6.255926,-8.085303,-1.413611,-3.810547,1.579115,7.959980,4.155605,7.507600,-4.184075,9.608348],[2.853164,-2.360526,0.561186,-3.553008,-7.300292,2.947387,-6.280482,3.917921,7.359195,6.635882,-0.731143,-1.474803,-4.473178,-3.385351,5.230331,-2.619920],[-9.446117,-4.282393,-3.488204,5.642469,4.015100,2.959874,0.180015,1.586207,-9.995503,6.431019,2.110239,-4.755562,-5.967528,-2.540938,2.804254,-1.097535],[8.291280,5.075071,7.073923,4.571776,-0.338965,-2.383020,1.990444,-1.891521,-7.714846,-5.984498,9.494983,7.925831,9.799874,7.996590,0.901636,-8.587793],[-1.565966,-4.869391,-6.397437,4.023908,-3.690744,-9.161709,2.406321,4.738326,5.421180,8.400839,2.614839,-4.847447,-0.810621,3.225396,7.425556,0.347897],[3.168869,6.687809,0.505945,-1.148906,-4.473133,3.696445,-7.966028,3.672659,-7.419948,-6.135747,-4.350137,-6.917388,9.049847,-2.949910,2.240675,-6.853700]],[[1.166915,-9.741951,-2.899739,-9.754275,-9.093969,-0.178234,-3.240100,-6.171593,-5.465356,-0.250518,0.443655,-2.743178,-7.766315,5.316315,-9.636220,5.394924],[7.844417,-9.767010,-0.613590,-3.061634,-9.724286,3.585641,-6.390179,8.153240,1.887887,5.917757,-7.396662,1.801740,-5.595939,-0.618006,-0.345971,-1.019584],[5.152895,-5.110935,6.551759,-2.466653,8.887669,8.418568,4.011157,8.706335,-8.763283,2.798280,-8.001906,-6.053282,5.908738,9.474047,-3.170974,9.897447],[-9.169385,0.895249,-0.868230,5.658715,-1.500203,-4.361074,5.755721,-2.792617,-9.406587,-6.164587,-7.321222,-6.047862,3.418958,9.354559,2.348238,5.343101],[-5.297350,-3.422992,9.562467,0.050202,-9.932326,1.252103,5.104104,1.576754,-5.915371,-1.069227,-9.360719,-6.924876,-6.338764,8.813277,4.623008,9.125056],[-4.415121,-8.375560,3.972778,8.081014,0.686724,8.102647,-8.720838,8.114957,-4.828722,6.586138,-7.020978,-2.285034,0.263317,-0.451568,-6.126360,0.017820],[7.974722,-3.571432,6.834884,-5.297756,8.078958,3.935648,3.946372,-2.908008,-8.696941,-5.795615,8.445892,4.905879,7.285456,7.038886,3.657276,-5.233181],[2.811132,1.525351,-8.716965,9.724438,7.477120,5.755957,5.834267,-1.720010,8.612116,-9.385548,3.025792,8.047809,-7.235419,-4.774077,9.846168,-9.593501],[-3.196366,4.215926,-1.306354,-4.442491,2.869249,-3.235527,4.845249,-4.412530,0.477648,1.925179,-6.575290,5.277637,-2.138988,-1.812013,-8.958280,-8.158184],[-1.034475,5.050766,-2.734713,-5.041396,1.936615,5.742978,9.217877,7.796876,-0.198022,5.297076,-6.706774,7.936639,2.989571,-7.195425,4.080426,-4.042689],[7.591484,-5.502180,5.019891,1.056801,5.014890,0.416362,2.157281,4.268999,8.153995,-1.886647,-2.496138,-6.674651,-0.373721,9.929412,2.547578,7.049321]],[[-0.761919,1.663849,1.642922,-2.607140,1.880577,2.803107,2.095251,-7.997223,-1.132685,-6.491949,4.151714,-3.514607,1.562730,5.592592,0.093809,6.100271],[-3.397647,5.998207,-9.864479,-0.373546,2.184530,-0.769782,-2.855113,7.178996,2.529085,8.805673,6.919485,-4.066778,-5.911464,5.930297,9.699386,4.643750],[1.116108,5.621238,-6.716155,4.205115,5.510132,-0.549157,1.764623,-6.161242,6.653888,9.775929,5.959810,-1.426469,2.590811,4.337569,-2.167771,-6.846805],[4.470560,0.580296,3.240192,3.565966,-6.151925,-5.175651,-2.595878,9.941433,5.230251,-6.454470,-1.735628,-1.602501,-0.630855,-9.193812,-9.813838,3.591263],[-5.497966,2.443799,9.334799,3.818598,5.495566,7.866964,-8.494996,1.611011,9.003919,9.484979,-8.547925,9.010120,5.959015,-6.156491,-9.369620,-4.327258],[-4.758499,-6.118551,-1.390171,-0.182929,-8.783614,2.699512,-4.501212,-3.642516,-0.626349,6.843083,0.494796,-1.893821,0.508681,-4.063543,-6.754903,-0.274989],[-9.530791,-4.775436,-4.090879,-4.599054,2.922038,-4.163285,7.567620,7.002442,-8.749673,-4.023267,-1.205164,-5.835559,1.227844,9.244212,8.970229,2.476508],[3.019928,7.721351,-2.980102,-0.701550,6.467966,3.882080,3.793919,5.303479,9.799711,4.175825,-3.753914,0.875989,-8.611121,2.775564,3.576581,7.017460],[-2.320129,-2.977283,9.928239,-3.722106,7.816107,6.984765,5.144110,-3.355952,-9.849501,-5.488730,-8.574539,0.869907,-4.784603,-4.645393,3.075680,-4.353092],[-7.815617,-6.153348,7.339702,3.657400,-8.357071,8.067848,4.544148,-7.224400,5.033320,-2.076057,0.869281,-3.553681,-0.431107,9.086557,1.309553,9.895108],[-9.798462,9.653903,4.561597,9.489891,2.235077,2.372853,-2.913011,-0.960826,-3.923052,6.460324,-1.292754,1.703354,7.349388,-9.344525,3.083826,-3.717271]],[[0.657009,1.146962,-7.941085,-3.056798,-1.051984,-1.255993,-5.929008,-4.535718,2.519239,-6.830427,-3.167959,-2.187617,-1.064410,-2.186941,0.464485,5.032031],[-5.661665,0.081610,6.547285,-0.184494,7.609172,9.794408,1.308525,-5.373772,9.377394,0.955425,-1.992834,9.258241,-7.953983,-9.275754,5.065518,0.830280],[8.923478,-6.688477,-2.229152,-9.150850,-7.869346,0.854806,8.668565,-2.959419,-5.144817,-9.543745,-5.078327,0.926921,1.318146,-8.997565,-8.119187,-7.375974],[-9.937560,-0.456798,6.961178,-8.491666,-6.003872,-9.281676,0.324831,5.440593,-9.018736,-7.559272,7.429740,3.817610,-5.463704,5.801513,9.200799,-3.814747],[7.276349,5.481201,5.191932,-8.043163,7.097307,3.075129,2.893411,3.062678,5.751775,-6.647474,7.589386,7.654879,5.489732,-1.766200,3.903560,-8.050661],[-6.185730,7.948381,6.337163,7.139685,-8.116082,3.181019,2.866581,4.856340,0.205541,-7.135538,-1.666271,-2.468327,-8.530942,-5.624140,2.333665,-6.122797],[-2.466208,8.221395,1.624327,6.977793,8.982546,-2.862856,7.972402,0.306243,2.373081,0.248174,-5.341197,-6.032287,4.804358,-4.561584,8.379949,-2.275617],[-4.215670,-0.132475,-7.269172,-2.727327,-2.608745,9.165938,-6.577957,-3.656447,-6.373041,7.206330,1.778662,7.110353,3.442917,4.225590,3.297140,-3.709688],[2.443836,2.871178,-8.273808,-2.951912,-6.950695,-4.924833,-2.063691,7.171100,1.715975,2.631041,-7.686773,7.949489,-4.046191,-6.524676,-0.477669,-4.044296],[4.123030,7.917990,5.621621,4.844260,5.417488,-8.965530,-1.432942,-3.419866,4.054045,4.859409,3.445681,9.543576,3.936448,1.444828,-5.847594,-5.086221],[2.858139,-6.731557,9.064502,9.529984,3.410039,-3.378780,7.483845,9.289773,9.177765,-2.930703,7.938033,-1.876400,2.651449,-1.394662,3.655410,-7.541496]],[[1.935396,3.382507,-5.349832,3.862857,7.168986,4.203642,5.624107,0.686784,8.227517,2.082000,3.237694,-4.676282,7.098839,-0.375234,6.858706,1.139121],[9.321992,8.614322,5.746736,-2.773383,-0.132002,0.010320,-6.142427,-7.440023,-8.462921,6.005233,-5.449317,6.725139,-0.967060,-3.406325,-4.863409,-3.984973],[7.543444,7.895292,1.313560,1.396214,1.691149,2.686703,6.988167,-1.063940,7.690668,9.669323,9.132154,9.481942,-0.294384,4.609357,3.260931,1.249589],[8.860116,-0.679011,-6.409172,-3.482623,-1.218808,1.753009,-7.199439,-2.547945,8.093986,5.996343,-9.142617,3.984422,-4.053233,4.127610,-5.896714,-2.427887],[1.482767,-6.326299,-4.820600,1.788965,-4.726478,-3.794253,-9.936824,-7.790036,-9.568431,-1.569771,-6.707586,-7.961616,-2.080533,1.280734,-2.700491,-9.214292],[-6.732426,2.205429,-5.303284,7.067256,4.504157,6.653542,-4.513046,-7.076006,8.445591,2.886278,-6.176731,-5.547354,8.069854,8.581856,-5.005206,2.032729],[0.625037,4.670029,-1.369481,-2.211205,8.420500,6.173291,-7.339469,-5.481819,8.127655,2.146063,7.694553,-6.807415,8.632339,-5.551658,-9.208538,-9.295032],[-6.626833,3.017842,5.615451,9.343319,6.035036,-1.693518,-1.296083,3.262874,8.888814,7.183763,-5.554244,0.549105,4.154555,9.895376,-3.986419,4.521879],[-4.921722,4.642399,4.997372,-9.454472,0.626573,-5.877286,2.446681,8.876660,-1.037785,-6.497404,4.682053,4.474305,5.980301,-7.699283,-9.723013,9.455332],[-7.770655,-0.135623,2.938798,-5.922706,-6.348368,-7.249612,-6.092604,-5.560693,-1.115407,0.907807,-5.352601,-3.901222,-5.973181,0.129004,4.035005,6.688196],[3.399097,7.046146,-9.116782,-1.063374,-8.166383,-9.467818,-0.234266,3.564675,1.905692,-5.426692,7.410415,-9.355923,0.541790,0.427223,-2.818972,-7.277667]]], dtype = "float32")#candidate|10216|(10, 11, 16)|const|float32
bop_10217 = relay.bitwise_or(call_10200.astype('uint8'), relay.reshape(const_10216.astype('uint8'), relay.shape_of(call_10200))) # shape=(10, 11, 16)
bop_10220 = relay.bitwise_or(call_10201.astype('uint8'), relay.reshape(const_10216.astype('uint8'), relay.shape_of(call_10201))) # shape=(10, 11, 16)
func_5897_call = mod.get_global_var('func_5897')
func_5899_call = mutated_mod.get_global_var('func_5899')
call_10238 = func_5897_call()
call_10239 = func_5897_call()
func_7059_call = mod.get_global_var('func_7059')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_10241 = relay.TupleGetItem(func_7059_call(), 0)
call_10242 = relay.TupleGetItem(func_7061_call(), 0)
output = relay.Tuple([bop_10217,call_10238,call_10241,])
output2 = relay.Tuple([bop_10220,call_10239,call_10242,])
func_10243 = relay.Function([], output)
mod['func_10243'] = func_10243
mod = relay.transform.InferType()(mod)
output = func_10243()
func_10244 = relay.Function([], output)
mutated_mod['func_10244'] = func_10244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8023_call = mod.get_global_var('func_8023')
func_8025_call = mutated_mod.get_global_var('func_8025')
call_10250 = relay.TupleGetItem(func_8023_call(), 0)
call_10251 = relay.TupleGetItem(func_8025_call(), 0)
func_7550_call = mod.get_global_var('func_7550')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_10259 = func_7550_call()
call_10260 = func_7550_call()
output = relay.Tuple([call_10250,call_10259,])
output2 = relay.Tuple([call_10251,call_10260,])
func_10267 = relay.Function([], output)
mod['func_10267'] = func_10267
mod = relay.transform.InferType()(mod)
mutated_mod['func_10267'] = func_10267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10267_call = mutated_mod.get_global_var('func_10267')
call_10268 = func_10267_call()
output = call_10268
func_10269 = relay.Function([], output)
mutated_mod['func_10269'] = func_10269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10014_call = mod.get_global_var('func_10014')
func_10016_call = mutated_mod.get_global_var('func_10016')
call_10270 = func_10014_call()
call_10271 = func_10014_call()
output = relay.Tuple([call_10270,])
output2 = relay.Tuple([call_10271,])
func_10281 = relay.Function([], output)
mod['func_10281'] = func_10281
mod = relay.transform.InferType()(mod)
output = func_10281()
func_10282 = relay.Function([], output)
mutated_mod['func_10282'] = func_10282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7543_call = mod.get_global_var('func_7543')
func_7544_call = mutated_mod.get_global_var('func_7544')
call_10314 = func_7543_call()
call_10315 = func_7543_call()
func_8911_call = mod.get_global_var('func_8911')
func_8912_call = mutated_mod.get_global_var('func_8912')
call_10322 = func_8911_call()
call_10323 = func_8911_call()
output = relay.Tuple([call_10314,call_10322,])
output2 = relay.Tuple([call_10315,call_10323,])
func_10324 = relay.Function([], output)
mod['func_10324'] = func_10324
mod = relay.transform.InferType()(mod)
output = func_10324()
func_10325 = relay.Function([], output)
mutated_mod['func_10325'] = func_10325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10281_call = mod.get_global_var('func_10281')
func_10282_call = mutated_mod.get_global_var('func_10282')
call_10326 = relay.TupleGetItem(func_10281_call(), 0)
call_10327 = relay.TupleGetItem(func_10282_call(), 0)
var_10340 = relay.var("var_10340", dtype = "float32", shape = (10, 11, 16))#candidate|10340|(10, 11, 16)|var|float32
bop_10341 = relay.equal(call_10326.astype('bool'), relay.reshape(var_10340.astype('bool'), relay.shape_of(call_10326))) # shape=(10, 11, 16)
bop_10344 = relay.equal(call_10327.astype('bool'), relay.reshape(var_10340.astype('bool'), relay.shape_of(call_10327))) # shape=(10, 11, 16)
uop_10345 = relay.cos(bop_10341.astype('float32')) # shape=(10, 11, 16)
uop_10347 = relay.cos(bop_10344.astype('float32')) # shape=(10, 11, 16)
func_10267_call = mod.get_global_var('func_10267')
func_10269_call = mutated_mod.get_global_var('func_10269')
call_10362 = relay.TupleGetItem(func_10267_call(), 1)
call_10363 = relay.TupleGetItem(func_10269_call(), 1)
output = relay.Tuple([uop_10345,call_10362,])
output2 = relay.Tuple([uop_10347,call_10363,])
func_10368 = relay.Function([var_10340,], output)
mod['func_10368'] = func_10368
mod = relay.transform.InferType()(mod)
var_10369 = relay.var("var_10369", dtype = "float32", shape = (10, 11, 16))#candidate|10369|(10, 11, 16)|var|float32
output = func_10368(var_10369)
func_10370 = relay.Function([var_10369], output)
mutated_mod['func_10370'] = func_10370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9087_call = mod.get_global_var('func_9087')
func_9089_call = mutated_mod.get_global_var('func_9089')
call_10398 = relay.TupleGetItem(func_9087_call(), 0)
call_10399 = relay.TupleGetItem(func_9089_call(), 0)
func_9377_call = mod.get_global_var('func_9377')
func_9378_call = mutated_mod.get_global_var('func_9378')
call_10435 = relay.TupleGetItem(func_9377_call(), 1)
call_10436 = relay.TupleGetItem(func_9378_call(), 1)
func_3932_call = mod.get_global_var('func_3932')
func_3934_call = mutated_mod.get_global_var('func_3934')
var_10448 = relay.var("var_10448", dtype = "int16", shape = (7, 6))#candidate|10448|(7, 6)|var|int16
call_10447 = relay.TupleGetItem(func_3932_call(relay.reshape(var_10448.astype('int16'), [3, 7, 2])), 0)
call_10449 = relay.TupleGetItem(func_3934_call(relay.reshape(var_10448.astype('int16'), [3, 7, 2])), 0)
func_9300_call = mod.get_global_var('func_9300')
func_9301_call = mutated_mod.get_global_var('func_9301')
call_10469 = relay.TupleGetItem(func_9300_call(), 0)
call_10470 = relay.TupleGetItem(func_9301_call(), 0)
output = relay.Tuple([call_10398,call_10435,call_10447,var_10448,call_10469,])
output2 = relay.Tuple([call_10399,call_10436,call_10449,var_10448,call_10470,])
func_10480 = relay.Function([var_10448,], output)
mod['func_10480'] = func_10480
mod = relay.transform.InferType()(mod)
mutated_mod['func_10480'] = func_10480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10481 = relay.var("var_10481", dtype = "int16", shape = (7, 6))#candidate|10481|(7, 6)|var|int16
func_10480_call = mutated_mod.get_global_var('func_10480')
call_10482 = func_10480_call(var_10481)
output = call_10482
func_10483 = relay.Function([var_10481], output)
mutated_mod['func_10483'] = func_10483
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10488 = relay.var("var_10488", dtype = "float32", shape = (9, 7, 16))#candidate|10488|(9, 7, 16)|var|float32
uop_10489 = relay.atanh(var_10488.astype('float32')) # shape=(9, 7, 16)
output = uop_10489
output2 = uop_10489
func_10494 = relay.Function([var_10488,], output)
mod['func_10494'] = func_10494
mod = relay.transform.InferType()(mod)
var_10495 = relay.var("var_10495", dtype = "float32", shape = (9, 7, 16))#candidate|10495|(9, 7, 16)|var|float32
output = func_10494(var_10495)
func_10496 = relay.Function([var_10495], output)
mutated_mod['func_10496'] = func_10496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4667_call = mod.get_global_var('func_4667')
func_4668_call = mutated_mod.get_global_var('func_4668')
call_10515 = func_4667_call()
call_10516 = func_4667_call()
output = relay.Tuple([call_10515,])
output2 = relay.Tuple([call_10516,])
func_10521 = relay.Function([], output)
mod['func_10521'] = func_10521
mod = relay.transform.InferType()(mod)
mutated_mod['func_10521'] = func_10521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10521_call = mutated_mod.get_global_var('func_10521')
call_10522 = func_10521_call()
output = call_10522
func_10523 = relay.Function([], output)
mutated_mod['func_10523'] = func_10523
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10546 = relay.var("var_10546", dtype = "float32", shape = (4, 10, 14))#candidate|10546|(4, 10, 14)|var|float32
uop_10547 = relay.erf(var_10546.astype('float32')) # shape=(4, 10, 14)
output = uop_10547
output2 = uop_10547
func_10550 = relay.Function([var_10546,], output)
mod['func_10550'] = func_10550
mod = relay.transform.InferType()(mod)
mutated_mod['func_10550'] = func_10550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10551 = relay.var("var_10551", dtype = "float32", shape = (4, 10, 14))#candidate|10551|(4, 10, 14)|var|float32
func_10550_call = mutated_mod.get_global_var('func_10550')
call_10552 = func_10550_call(var_10551)
output = call_10552
func_10553 = relay.Function([var_10551], output)
mutated_mod['func_10553'] = func_10553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10281_call = mod.get_global_var('func_10281')
func_10282_call = mutated_mod.get_global_var('func_10282')
call_10589 = relay.TupleGetItem(func_10281_call(), 0)
call_10590 = relay.TupleGetItem(func_10282_call(), 0)
func_10494_call = mod.get_global_var('func_10494')
func_10496_call = mutated_mod.get_global_var('func_10496')
var_10605 = relay.var("var_10605", dtype = "float32", shape = (2, 504))#candidate|10605|(2, 504)|var|float32
call_10604 = func_10494_call(relay.reshape(var_10605.astype('float32'), [9, 7, 16]))
call_10606 = func_10494_call(relay.reshape(var_10605.astype('float32'), [9, 7, 16]))
output = relay.Tuple([call_10589,call_10604,var_10605,])
output2 = relay.Tuple([call_10590,call_10606,var_10605,])
func_10611 = relay.Function([var_10605,], output)
mod['func_10611'] = func_10611
mod = relay.transform.InferType()(mod)
var_10612 = relay.var("var_10612", dtype = "float32", shape = (2, 504))#candidate|10612|(2, 504)|var|float32
output = func_10611(var_10612)
func_10613 = relay.Function([var_10612], output)
mutated_mod['func_10613'] = func_10613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8538_call = mod.get_global_var('func_8538')
func_8540_call = mutated_mod.get_global_var('func_8540')
call_10717 = relay.TupleGetItem(func_8538_call(), 0)
call_10718 = relay.TupleGetItem(func_8540_call(), 0)
output = call_10717
output2 = call_10718
func_10720 = relay.Function([], output)
mod['func_10720'] = func_10720
mod = relay.transform.InferType()(mod)
output = func_10720()
func_10721 = relay.Function([], output)
mutated_mod['func_10721'] = func_10721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9300_call = mod.get_global_var('func_9300')
func_9301_call = mutated_mod.get_global_var('func_9301')
call_10741 = relay.TupleGetItem(func_9300_call(), 0)
call_10742 = relay.TupleGetItem(func_9301_call(), 0)
func_10480_call = mod.get_global_var('func_10480')
func_10483_call = mutated_mod.get_global_var('func_10483')
var_10750 = relay.var("var_10750", dtype = "int16", shape = (14, 3))#candidate|10750|(14, 3)|var|int16
call_10749 = relay.TupleGetItem(func_10480_call(relay.reshape(var_10750.astype('int16'), [7, 6])), 2)
call_10751 = relay.TupleGetItem(func_10483_call(relay.reshape(var_10750.astype('int16'), [7, 6])), 2)
output = relay.Tuple([call_10741,call_10749,var_10750,])
output2 = relay.Tuple([call_10742,call_10751,var_10750,])
func_10752 = relay.Function([var_10750,], output)
mod['func_10752'] = func_10752
mod = relay.transform.InferType()(mod)
mutated_mod['func_10752'] = func_10752
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10753 = relay.var("var_10753", dtype = "int16", shape = (14, 3))#candidate|10753|(14, 3)|var|int16
func_10752_call = mutated_mod.get_global_var('func_10752')
call_10754 = func_10752_call(var_10753)
output = call_10754
func_10755 = relay.Function([var_10753], output)
mutated_mod['func_10755'] = func_10755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5305_call = mod.get_global_var('func_5305')
func_5306_call = mutated_mod.get_global_var('func_5306')
call_10770 = func_5305_call()
call_10771 = func_5305_call()
output = call_10770
output2 = call_10771
func_10777 = relay.Function([], output)
mod['func_10777'] = func_10777
mod = relay.transform.InferType()(mod)
output = func_10777()
func_10778 = relay.Function([], output)
mutated_mod['func_10778'] = func_10778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6656_call = mod.get_global_var('func_6656')
func_6658_call = mutated_mod.get_global_var('func_6658')
call_10796 = relay.TupleGetItem(func_6656_call(), 1)
call_10797 = relay.TupleGetItem(func_6658_call(), 1)
output = call_10796
output2 = call_10797
func_10799 = relay.Function([], output)
mod['func_10799'] = func_10799
mod = relay.transform.InferType()(mod)
output = func_10799()
func_10800 = relay.Function([], output)
mutated_mod['func_10800'] = func_10800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mod.get_global_var('func_5921')
func_5923_call = mutated_mod.get_global_var('func_5923')
call_10819 = relay.TupleGetItem(func_5921_call(), 0)
call_10820 = relay.TupleGetItem(func_5923_call(), 0)
func_8750_call = mod.get_global_var('func_8750')
func_8753_call = mutated_mod.get_global_var('func_8753')
var_10823 = relay.var("var_10823", dtype = "int16", shape = (1000,))#candidate|10823|(1000,)|var|int16
call_10822 = relay.TupleGetItem(func_8750_call(relay.reshape(var_10823.astype('int16'), [10, 10, 10]), relay.reshape(var_10823.astype('int16'), [10, 10, 10]), ), 0)
call_10824 = relay.TupleGetItem(func_8753_call(relay.reshape(var_10823.astype('int16'), [10, 10, 10]), relay.reshape(var_10823.astype('int16'), [10, 10, 10]), ), 0)
output = relay.Tuple([call_10819,call_10822,var_10823,])
output2 = relay.Tuple([call_10820,call_10824,var_10823,])
func_10859 = relay.Function([var_10823,], output)
mod['func_10859'] = func_10859
mod = relay.transform.InferType()(mod)
var_10860 = relay.var("var_10860", dtype = "int16", shape = (1000,))#candidate|10860|(1000,)|var|int16
output = func_10859(var_10860)
func_10861 = relay.Function([var_10860], output)
mutated_mod['func_10861'] = func_10861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5305_call = mod.get_global_var('func_5305')
func_5306_call = mutated_mod.get_global_var('func_5306')
call_10868 = func_5305_call()
call_10869 = func_5305_call()
func_9325_call = mod.get_global_var('func_9325')
func_9327_call = mutated_mod.get_global_var('func_9327')
call_10877 = func_9325_call()
call_10878 = func_9325_call()
func_7164_call = mod.get_global_var('func_7164')
func_7166_call = mutated_mod.get_global_var('func_7166')
call_10892 = relay.TupleGetItem(func_7164_call(), 0)
call_10893 = relay.TupleGetItem(func_7166_call(), 0)
func_1723_call = mod.get_global_var('func_1723')
func_1725_call = mutated_mod.get_global_var('func_1725')
var_10927 = relay.var("var_10927", dtype = "float64", shape = (32,))#candidate|10927|(32,)|var|float64
call_10926 = func_1723_call(relay.reshape(var_10927.astype('float64'), [2, 16, 1]))
call_10928 = func_1723_call(relay.reshape(var_10927.astype('float64'), [2, 16, 1]))
func_5190_call = mod.get_global_var('func_5190')
func_5192_call = mutated_mod.get_global_var('func_5192')
call_10939 = relay.TupleGetItem(func_5190_call(), 0)
call_10940 = relay.TupleGetItem(func_5192_call(), 0)
uop_10950 = relay.acosh(call_10926.astype('float64')) # shape=(2, 16, 1)
uop_10952 = relay.acosh(call_10928.astype('float64')) # shape=(2, 16, 1)
func_5581_call = mod.get_global_var('func_5581')
func_5582_call = mutated_mod.get_global_var('func_5582')
call_10963 = relay.TupleGetItem(func_5581_call(), 3)
call_10964 = relay.TupleGetItem(func_5582_call(), 3)
output = relay.Tuple([call_10868,call_10877,call_10892,var_10927,call_10939,uop_10950,call_10963,])
output2 = relay.Tuple([call_10869,call_10878,call_10893,var_10927,call_10940,uop_10952,call_10964,])
func_10970 = relay.Function([var_10927,], output)
mod['func_10970'] = func_10970
mod = relay.transform.InferType()(mod)
var_10971 = relay.var("var_10971", dtype = "float64", shape = (32,))#candidate|10971|(32,)|var|float64
output = func_10970(var_10971)
func_10972 = relay.Function([var_10971], output)
mutated_mod['func_10972'] = func_10972
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10974 = relay.var("var_10974", dtype = "bool", shape = ())#candidate|10974|()|var|bool
var_10975 = relay.var("var_10975", dtype = "bool", shape = (6, 5, 1))#candidate|10975|(6, 5, 1)|var|bool
bop_10976 = relay.logical_or(var_10974.astype('bool'), var_10975.astype('bool')) # shape=(6, 5, 1)
output = bop_10976
output2 = bop_10976
func_10992 = relay.Function([var_10974,var_10975,], output)
mod['func_10992'] = func_10992
mod = relay.transform.InferType()(mod)
mutated_mod['func_10992'] = func_10992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10992_call = mutated_mod.get_global_var('func_10992')
var_10994 = relay.var("var_10994", dtype = "bool", shape = ())#candidate|10994|()|var|bool
var_10995 = relay.var("var_10995", dtype = "bool", shape = (6, 5, 1))#candidate|10995|(6, 5, 1)|var|bool
call_10993 = func_10992_call(var_10994,var_10995,)
output = call_10993
func_10996 = relay.Function([var_10994,var_10995,], output)
mutated_mod['func_10996'] = func_10996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5998_call = mod.get_global_var('func_5998')
func_5999_call = mutated_mod.get_global_var('func_5999')
call_11001 = relay.TupleGetItem(func_5998_call(), 0)
call_11002 = relay.TupleGetItem(func_5999_call(), 0)
output = call_11001
output2 = call_11002
func_11011 = relay.Function([], output)
mod['func_11011'] = func_11011
mod = relay.transform.InferType()(mod)
mutated_mod['func_11011'] = func_11011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11011_call = mutated_mod.get_global_var('func_11011')
call_11012 = func_11011_call()
output = call_11012
func_11013 = relay.Function([], output)
mutated_mod['func_11013'] = func_11013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5190_call = mod.get_global_var('func_5190')
func_5192_call = mutated_mod.get_global_var('func_5192')
call_11062 = relay.TupleGetItem(func_5190_call(), 1)
call_11063 = relay.TupleGetItem(func_5192_call(), 1)
func_9545_call = mod.get_global_var('func_9545')
func_9547_call = mutated_mod.get_global_var('func_9547')
call_11066 = relay.TupleGetItem(func_9545_call(), 2)
call_11067 = relay.TupleGetItem(func_9547_call(), 2)
func_8828_call = mod.get_global_var('func_8828')
func_8829_call = mutated_mod.get_global_var('func_8829')
call_11086 = relay.TupleGetItem(func_8828_call(), 1)
call_11087 = relay.TupleGetItem(func_8829_call(), 1)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
var_11100 = relay.var("var_11100", dtype = "int16", shape = (150,))#candidate|11100|(150,)|var|int16
call_11099 = relay.TupleGetItem(func_3837_call(relay.reshape(var_11100.astype('int16'), [10, 3, 5])), 1)
call_11101 = relay.TupleGetItem(func_3839_call(relay.reshape(var_11100.astype('int16'), [10, 3, 5])), 1)
func_5240_call = mod.get_global_var('func_5240')
func_5242_call = mutated_mod.get_global_var('func_5242')
call_11104 = relay.TupleGetItem(func_5240_call(), 0)
call_11105 = relay.TupleGetItem(func_5242_call(), 0)
output = relay.Tuple([call_11062,call_11066,call_11086,call_11099,var_11100,call_11104,])
output2 = relay.Tuple([call_11063,call_11067,call_11087,call_11101,var_11100,call_11105,])
func_11106 = relay.Function([var_11100,], output)
mod['func_11106'] = func_11106
mod = relay.transform.InferType()(mod)
var_11107 = relay.var("var_11107", dtype = "int16", shape = (150,))#candidate|11107|(150,)|var|int16
output = func_11106(var_11107)
func_11108 = relay.Function([var_11107], output)
mutated_mod['func_11108'] = func_11108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_11120 = func_4993_call()
call_11121 = func_4993_call()
output = relay.Tuple([call_11120,])
output2 = relay.Tuple([call_11121,])
func_11122 = relay.Function([], output)
mod['func_11122'] = func_11122
mod = relay.transform.InferType()(mod)
output = func_11122()
func_11123 = relay.Function([], output)
mutated_mod['func_11123'] = func_11123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9325_call = mod.get_global_var('func_9325')
func_9327_call = mutated_mod.get_global_var('func_9327')
call_11222 = func_9325_call()
call_11223 = func_9325_call()
func_5752_call = mod.get_global_var('func_5752')
func_5754_call = mutated_mod.get_global_var('func_5754')
const_11246 = relay.const([[-6.499725],[-6.574834],[1.848419],[2.260528],[4.590713],[1.153250],[9.167842],[-7.034149],[9.378084],[-0.127439],[6.440952],[-3.089340],[2.319318],[1.526276],[-1.648286],[-8.854499],[-5.750657],[-6.899632],[-5.902056],[0.692620],[6.101583],[-9.456322],[1.461099],[4.197525],[7.593547],[6.259907],[-0.437696],[1.543470],[6.771834],[2.697041],[-4.843830],[-1.027246],[-1.055993],[-6.695736],[-0.544029],[-3.097554],[-4.009884],[-0.869936],[-2.093558],[4.560732],[-7.459275],[-4.762044],[-5.726431],[-5.239007],[-2.047425],[-8.346612],[0.195510],[4.588021],[9.634879],[9.252908],[6.264466],[-3.884115],[-8.919838],[8.838695],[-8.868306],[7.960245],[6.781026],[7.933997],[7.716296],[9.384563],[7.964982],[6.818056],[0.847952],[3.700112],[-5.800835],[-6.469934],[-3.659487],[-3.370317],[-2.278552],[3.143741],[-9.088243],[4.252811],[-8.606362],[0.947967],[-1.981843],[0.611387],[-6.566636],[-5.304149],[3.978414],[4.640418],[-2.905827],[1.921730],[-1.680470],[-0.361804],[2.187240],[8.725194],[-4.836738],[8.337979],[0.450912],[-4.117007],[-5.816735],[3.599124],[-0.555109],[-8.248592],[7.258639],[-9.613945],[7.828399],[6.039011],[5.100730],[-7.062295],[4.977351],[-0.422952],[-5.823599],[9.538378],[-0.137802],[6.622852],[0.653613],[-3.019348],[4.522693],[-7.846535],[-2.719530],[-7.752932],[-5.246074],[4.696358],[0.441337],[9.761256],[8.870383],[-7.603271],[5.626673],[9.540272],[-6.338107],[-2.706460],[2.818024],[2.143815],[7.717716],[-2.581020],[-1.765403],[-7.925680],[-4.624005],[-0.883153],[1.995291],[-9.263032],[3.978758],[8.083270],[-1.215573],[5.825202],[1.509209],[8.689629],[-4.561529],[2.203525],[-3.861679],[7.555768],[6.984208],[8.566066],[3.342315],[5.480830],[8.327863],[8.285585],[3.334157],[-7.455003],[8.569800],[-7.462631],[2.625592],[1.477754],[-2.306652],[-2.055859],[-2.809145],[-8.472837],[7.917593],[7.348351],[9.491280],[3.822296],[9.950386],[-2.622180],[8.155285],[-5.180449],[-8.406170],[-9.897139],[-0.844184],[8.097394],[-0.588428],[1.959945],[1.991719],[-7.242301],[-9.464920],[7.233293],[6.074677],[-5.094606],[5.371413],[8.261919],[6.541427],[2.944710],[-2.776856],[-3.903497],[3.100930],[1.558742],[0.334331],[4.287737],[-8.241947],[8.901163],[8.493942],[1.091463],[8.978745],[2.549433],[-4.744747],[-2.692507],[9.512350],[2.474849],[7.020953],[-7.878999],[0.022371],[-4.496131],[7.251323],[5.928748],[-9.881981],[-4.134748],[1.049691],[-8.947790],[6.942279],[1.332886],[-1.141412],[-4.179920],[2.517335],[0.930743],[6.357333],[0.090721],[6.504023],[3.670976],[9.427407],[4.516409],[3.802145],[-3.630951],[8.783830],[9.190889],[-9.975530],[-0.482326],[-8.930907],[-1.719733],[-4.264386],[-5.508620],[-4.629851],[-5.963098],[-7.517747],[-4.886823],[-2.081997],[2.478263],[9.069151],[-3.916797],[-0.262985],[4.782270],[-6.753387],[6.234972],[-0.368405],[-9.912213],[8.812997],[-4.507266],[-7.108492],[0.747707],[-5.671063],[6.080773],[1.925389],[-2.747181],[-7.913018],[4.622756],[9.071133],[5.365050],[-8.223457],[-0.189434],[9.906183],[7.944784],[-2.793186],[-5.343108],[-8.595385],[0.750857],[1.680902],[6.827729],[3.109739],[6.636110],[-4.690748],[-8.286137],[3.516916],[6.175230],[-7.161548],[9.615797],[-3.166635],[-9.117074],[-4.604854],[-4.802165],[-7.727838],[-0.628289],[-8.439755],[1.518112],[8.628936],[3.883245],[3.779522],[8.902483],[7.382828],[7.351504],[6.012240],[7.250356],[9.695368],[-8.231268],[-5.423252],[5.374219],[-9.072544],[-6.797828],[4.813089],[-1.939869],[-8.749078],[2.878142],[2.033465],[8.215072],[3.932727],[-7.567837],[6.876289],[7.177136],[3.612342],[-2.371142],[-7.089693],[-1.427595],[6.439989],[1.873044],[-7.789563],[-6.827928],[4.729941],[8.764456],[-5.907795],[6.554592],[1.280935],[-6.115993],[-8.106448],[7.637640],[8.765322],[7.280417],[8.291290],[-1.155364],[2.312176],[-1.757875],[0.146006],[-7.229305],[-6.640726],[2.083274],[-7.180742],[-7.196268],[-7.844117],[-5.307412],[-7.825760],[-9.306868],[-1.830619],[2.016000],[-5.930897],[-7.215819],[6.937837],[5.171088],[6.060140],[4.907184],[0.908222],[3.005223],[-8.465646],[6.335012],[-7.658541],[0.149384],[-8.301823],[4.951816],[9.597223],[-7.744380],[-7.400571],[2.526973],[4.391295],[0.827946],[5.705838],[-7.904510],[3.020642],[-7.740914],[-6.300607],[2.585554],[-4.042696],[3.915730],[-0.825830],[4.797080],[-1.759512],[4.749465],[-2.091956],[-8.445804],[-1.867535],[2.247579],[7.886849],[-9.447094],[5.998079],[-3.586903],[6.028990],[-0.330900],[-3.913225],[-3.454948],[-8.299058],[-0.672630],[7.315027],[-0.014923],[5.498168],[-6.596716],[-7.658972],[4.126937],[1.373360],[-5.550105],[-0.345768],[-5.537998],[-4.930280],[4.575000],[8.789397],[-8.685823],[8.611446],[-1.684939],[-4.593747],[7.422933],[3.174694],[7.567705],[9.422285],[2.100277],[7.738042],[2.181274],[-6.197483],[6.713482],[-7.129219],[0.555400],[-6.260578],[-4.207296],[6.446850],[-5.028245],[4.177323],[0.308967],[3.894941],[-1.837715],[8.247941],[-9.184851],[6.705051],[-9.551084],[9.733355],[0.437666],[5.197107],[1.699287],[-7.271702],[0.671658],[-4.078761],[6.317875],[9.771635],[9.189287],[-4.358453],[4.277208],[0.323355],[-3.314850],[7.921210],[1.724643],[-6.227657],[9.099361],[1.062953],[4.425266],[-8.220976],[9.224483],[-7.578521],[-0.100514],[2.432574],[4.553572],[4.625664],[6.898988],[-9.956447],[7.241830],[9.910432],[-7.304941],[2.903695],[0.352405],[5.205731],[-7.043457],[8.185032],[-1.592982],[3.002735],[-0.944094],[-6.019730],[-8.535875],[-4.763352],[5.573251],[7.902938],[6.070150],[2.603948],[-5.449856],[0.096698],[6.847560],[-2.404951],[-1.018764],[-7.881134],[7.165370],[0.302493],[-6.690517],[1.859026],[7.670318],[3.754367],[-0.752321],[3.054488],[0.629049],[-1.735348],[-7.724186],[1.098078],[-2.865859],[8.520859],[3.241606],[5.898079],[3.212083],[-5.899325],[3.366790],[-4.133938],[-1.928073],[1.215268],[-9.367700],[-7.673833],[3.180646],[5.684325],[-8.197809],[2.505694],[-2.574660],[9.736546],[-0.971159],[1.199200],[5.224707],[-1.588700],[5.046866],[3.579036],[-4.492572],[3.468049],[1.764421],[-3.255709],[-7.085223],[-3.715340],[-1.179632],[9.146103],[3.923526],[-3.220283],[9.235939],[9.344265],[-8.716433],[4.187612],[9.896870],[0.991803],[7.056305],[-4.000038],[-0.740304],[8.566141],[4.451968],[3.432479],[-4.467003],[-7.787882],[2.371670],[5.752429],[-5.873609],[7.446919],[-7.028897],[4.807683],[3.189041],[9.010843],[0.253870],[8.836763],[-2.924149],[-8.088413],[8.010101],[6.453395],[-6.054777],[7.352665],[3.763812],[-1.954414],[0.577074],[-2.047603],[0.484402],[0.503891],[-2.523031],[7.490805],[8.966263],[7.503003],[-9.905085],[6.264717],[9.225503],[3.299440],[-7.655385],[8.370600],[8.392286],[-5.563181],[0.801773],[4.697076],[-7.460279],[7.041005],[0.271111],[-2.061966],[3.728017],[3.422557],[5.416070],[6.202407],[3.774598],[-3.909738],[1.121063],[9.095859],[7.813644],[-5.933876],[-7.192355],[7.525349],[-2.592504],[4.169790],[-3.493141],[-0.157759],[5.128615],[8.571092],[-6.127074],[8.352277],[2.451218],[-8.004047],[6.581778],[0.581989],[3.717378],[7.773338],[2.830886],[-5.243111],[4.002197],[-9.785425],[3.528887],[-7.204493],[-4.666718],[1.428395],[-6.506939],[-4.918273],[-5.860341],[5.393932],[6.087727],[-9.655746],[-6.746162],[-9.351304],[8.191681],[3.432277],[2.556253],[-4.421961],[1.146522],[2.629090],[-4.526574],[-9.427763],[-2.272764],[-7.266460],[4.285661],[-6.679940],[-6.170854],[8.957797],[2.262159],[4.823402],[-1.190026],[6.379800],[-2.733513],[-6.173802],[-9.906974],[6.686481],[-0.059987],[-3.863601],[-8.498314],[7.266734],[-6.043836],[-5.336289],[9.929075],[1.606107],[-1.041981],[6.914927],[4.211553],[-0.384978],[-7.654571],[0.470900],[-5.585610],[5.140096],[3.881700],[2.399694],[-5.267159],[9.370480],[1.757766],[5.827893],[-1.251636],[4.270857],[3.431462],[9.977486],[7.752276],[-5.604520],[7.024264],[0.195524],[-0.718194],[-2.914217],[-9.773863],[-8.370330],[6.887510],[1.264665],[1.463146],[8.738796],[9.984314],[-1.916951],[3.556706],[6.421341],[4.651809],[-8.816675],[-0.997345],[7.528542],[-5.587394],[-1.259657],[7.726833],[7.274427],[-8.636009],[3.329470],[8.578766],[6.459729],[8.508136],[-5.369369],[-0.158430],[-9.219470],[3.042361],[-6.151223],[-2.158091],[9.240030],[0.771549],[3.367660],[-2.502341],[4.761228],[7.332990],[-1.933982],[8.335693],[7.783766],[-3.159880],[7.288737],[5.144580],[-2.532495],[-5.594453],[-5.141606],[-0.903913],[7.049622],[8.890186],[1.147078],[6.037292],[3.374336],[0.447560],[-2.783282],[4.301762],[-8.776912],[9.454560],[-4.436269],[5.234711],[9.058997],[0.375592],[-3.997682],[2.606999],[-7.991175],[-3.162279],[-8.802264],[-0.960711],[-3.132805],[-6.377473],[3.394570],[-7.796755],[8.095561],[9.817329],[-4.623203],[-8.175387],[8.267910],[-8.208051],[-5.502164],[1.977905],[-2.295061],[-6.618852],[-0.756975],[-4.851008],[-5.020292],[0.249883],[3.164548],[3.311676],[4.415927],[-3.858982],[4.283761],[0.801661],[8.637685],[-3.894312],[-3.934465],[-1.495400],[1.071993],[3.516380],[7.270060],[-3.932063],[-1.036674],[5.025242],[1.985942],[-3.243139],[-7.983139],[6.315697],[-2.428839],[-3.269101],[-9.533932],[6.453082],[-7.656098],[7.920653],[-2.990481],[1.879356],[8.602883],[6.592240],[3.155179],[9.455255],[-7.505672],[8.077130],[-7.996294],[-3.583489],[-9.429137],[-8.261217],[-4.192264],[0.020992],[9.477140],[-2.534867],[2.380805],[-0.379543],[-8.431057],[2.388814],[-2.885556],[-4.430927],[-1.753325],[5.968908],[-9.269573],[3.672839],[-0.181668],[1.547757],[0.687738],[-2.982169],[-1.840227],[-7.580599],[-0.014756],[-8.986708],[1.716386],[4.139520],[-2.715240],[-4.545693],[0.749424],[9.909428],[1.367003],[-0.391727],[6.910709],[-7.227501],[-9.678777],[1.377224],[-1.195806],[2.908578],[-8.264499],[0.838495],[9.196763],[-0.539202],[-4.295084],[-2.370034],[-4.360006],[-7.955954],[7.379383],[-1.791990],[-3.572954],[9.701397],[2.291008],[8.991322],[4.456802],[-6.893202],[-8.851409],[3.511555],[-9.188098],[6.982817],[-9.725867],[8.878684],[-8.058358],[-3.560249],[-2.851414],[-3.425083],[-8.012306],[-2.985883],[-7.540043],[6.201980],[-7.320259],[-0.951832],[4.423374],[-0.895827],[8.831382],[-3.614768],[5.252533],[-2.602842],[7.290161],[2.549417],[3.724876],[4.815753],[-8.817263],[2.249607],[7.925776],[-9.226526],[0.610541],[0.443565],[-6.721760],[-2.320028],[7.080703],[7.293206],[-9.923116],[-6.374615],[-2.230607],[-8.207294],[3.614632],[8.479443],[0.515880],[5.224844],[7.054034],[-6.011268],[-7.929375],[1.290641],[0.382420],[-6.733245],[7.860977],[1.713154],[4.711811],[1.368102],[-5.839171],[-1.984819],[5.468272],[8.954179],[-5.713407],[-1.466401],[-2.602580],[-3.235449],[-2.009943],[5.310462],[-8.750094],[-8.124257],[7.890126],[9.186077],[-5.662876],[-4.035233],[-7.665606],[-3.597168],[9.043631],[-5.678557],[-7.232180],[4.238980],[6.660414],[9.193542],[-0.846160],[9.525770],[-5.808485],[-6.508821],[-4.842867],[7.315336],[-4.706190],[6.087900],[-2.633764],[2.363637],[7.533242],[0.688192],[-3.193223],[-5.375400],[5.151260],[8.311377],[-8.013424],[-8.158914],[-0.249528],[-5.322580],[-8.300411],[1.157095],[3.952397],[-1.864843],[3.237240],[1.741346],[9.820329],[-4.618905],[-0.996580],[-3.055379],[4.784967],[1.140683],[-0.036430],[-5.463872],[-0.426932],[6.845781],[-8.265506],[3.418190],[5.668323],[6.527668],[8.681121],[1.738929],[-9.311622],[-9.604360],[-3.855227],[-4.971076],[-8.528010],[4.946704],[6.804597],[-7.732846],[-9.752792],[-7.742952],[-9.201167],[5.710508],[7.088093],[-4.031889],[1.118101],[-4.637743],[-9.353945],[-2.015099],[1.448772],[-3.496223],[-9.390222],[-5.798510],[6.487701],[7.870742],[9.464714],[0.515039],[-9.447117],[9.873273],[1.649984],[-7.808056],[-1.141873],[-9.544621],[-3.432453],[1.627048],[0.396485],[6.861177],[-8.101235],[0.852366],[-0.917402],[4.905506],[7.659216],[-7.367911],[8.087872],[1.352547],[5.845762],[-6.421684],[-8.125551],[-1.020312],[5.249705],[-9.749766],[0.873891],[8.742616],[-0.553122],[-2.499547],[0.398405],[-7.108870],[-4.078158],[-1.077699],[-7.154146],[-7.001605],[-4.383849],[4.187034],[-9.631849],[1.508063],[-1.338076],[-5.018683],[5.609905],[6.065053],[6.387386],[7.165708],[7.695097],[1.259828],[-0.025231],[-3.341943],[9.436633],[-2.229771],[1.129826],[8.219297],[-7.552089],[5.406826],[-5.726425],[-3.255631],[8.854845],[3.794425],[3.996668],[-8.949272],[-2.547685],[-2.861725],[7.389311],[-8.187830],[-6.549892],[-9.743411],[-6.355187],[7.809415],[-3.324418],[6.754193],[-7.331366],[7.539263],[9.386734],[-7.379163],[3.260326],[-0.109825],[-8.176782],[-6.333993],[1.606498],[4.698735],[8.279730],[9.508242],[8.764249],[-9.648482],[6.163641],[-2.103907],[-5.397865],[-8.852283],[7.391318],[-7.729912],[0.538751],[-1.254371],[-7.894655],[4.195911],[0.473864],[4.714331],[3.128974],[0.933805],[2.098737],[-7.965862],[3.553650],[-3.253591],[-3.660832],[-9.683679],[-2.831476],[-0.049852],[6.779193],[1.705848],[5.361278],[4.247398],[4.548442],[-7.784621],[5.103373],[6.725660],[2.459190],[0.224627],[4.571220],[-4.005573],[-1.134809],[0.104219],[-6.142289],[-0.507831],[-3.520158],[2.224293],[4.210637],[1.796309],[1.017750],[8.353601],[4.956831],[2.019368],[-2.406615],[1.008182],[-5.691462],[-6.039484],[-4.933525],[3.430072],[9.990699],[-8.492096],[-4.951480],[-3.830380],[-2.028792],[-0.065822],[8.949589],[-9.389833],[4.469712],[4.112899],[3.851998],[0.647103],[7.629581],[-6.904130],[7.531510],[-2.624919],[-2.792095],[-0.175446],[-6.385642],[-9.429227],[-3.272929],[-6.265594],[-8.456257],[-9.853250],[-7.613475],[8.472375],[7.615208],[5.908698],[-6.619979],[-4.673525],[-3.731057],[0.308501],[-9.250864],[3.554816],[-6.290099],[0.751781],[-4.601875],[-4.741458],[2.894258],[-6.667581],[-7.250627],[1.888313],[-2.611436],[-2.864771],[-6.347137],[-5.403710],[4.804900],[6.255280],[-1.147509],[-0.677839],[-3.145306],[7.210086],[0.917306],[6.874945],[4.269909],[-3.765940],[-9.666059],[3.548130],[2.323176],[5.917230],[-5.348206],[-9.867739],[8.573873],[9.539167],[-0.784207],[-1.582924],[-2.679580],[5.922367],[9.265329],[-1.008576],[0.923054],[7.307265],[-9.603741],[-2.439282],[-3.077245],[5.960949],[-1.798110],[5.616293],[-2.196687],[5.883467],[-2.727457],[8.971026],[1.639323],[7.785876],[-5.302318],[9.206059],[-0.086380],[7.726782],[1.199550],[-2.590324],[5.367807],[3.781278],[6.293437],[-1.773510],[7.636126],[-3.653735],[6.960508],[-3.469240],[4.747659],[-6.649177],[1.665985],[4.514787],[-5.036792],[-8.841960],[-8.570981],[2.918312],[1.255708],[3.851206],[4.652296],[-5.083393],[2.534531],[9.851633],[-1.299565],[-9.036860],[0.950810],[4.046716],[-0.238964],[-8.787756],[0.842852],[6.779453],[-5.645652],[-1.535263],[7.232614],[-8.640421],[0.671013],[9.740204],[-2.687479],[3.911190],[4.832052],[-7.862687],[-2.535174],[0.086102],[-3.997200],[2.188421],[9.223735],[4.953321],[-3.631933],[4.907062],[-2.029476],[-0.597292],[-5.701558],[-4.352764],[-6.473045],[8.900598],[3.856538],[-5.540146],[-2.060957],[4.232815],[-6.916098],[-0.804772],[3.279393],[4.539590],[4.124917],[6.907469],[-5.194147],[9.013278],[9.131280],[7.038115],[-4.168610],[6.848293],[-9.335075],[8.652300],[-7.113657],[0.649401],[-7.797693],[-5.785340],[-3.191809],[0.142197],[-5.642749],[6.756766],[-6.155991],[6.658969],[-2.682926],[-5.125568],[9.318643],[2.290020],[4.445792],[-3.943603],[9.417537],[-6.577174],[-8.072487],[5.793230],[-1.078888],[-7.504763],[9.657159],[-2.223434],[8.720578],[9.610187],[-2.507743],[-1.769663],[-9.922267],[-0.424889],[-0.779991],[3.264434],[-9.748483],[6.842489],[-8.078648],[6.830569],[0.259321],[3.887772],[5.851520],[3.183450],[9.400598],[5.672091],[-4.195130],[6.125585],[5.614995],[-3.673042],[8.710354],[7.906405],[-1.838542],[-3.794532],[1.818932],[5.207728],[2.086026],[4.865078],[-5.168514],[1.396478],[4.954503],[-4.265540],[-4.643600],[-3.395030],[0.108148],[-1.368884],[-6.748286],[-3.746175],[-6.992858],[5.844543],[3.019444],[2.423087],[4.104711],[2.159323],[3.922147],[8.599898],[8.749002],[-9.058342],[-1.294939],[7.087503],[9.095800],[-7.655636],[8.962728],[-3.304890],[1.909543],[7.445892],[9.407687],[8.389221],[8.663407],[-1.932128],[-3.023545],[-5.914331],[7.583403],[6.947021],[3.845053],[4.307831],[-6.373935],[7.674106],[4.775899],[-3.425421],[0.474531],[6.533874],[-2.259240],[-8.882130],[2.975936],[-2.520623],[-9.473833],[-0.543117],[2.101151],[9.004386],[-5.749601],[1.067216],[-9.369438],[0.406111],[4.670630],[-5.068516],[1.754813],[6.493512],[6.170774],[-9.307870],[-8.889357],[-1.465361],[0.584508],[7.546007],[-8.984258],[7.445890],[5.798345],[-4.973310],[9.691322],[2.957510],[3.394963],[-4.429923],[7.345413],[-7.648597],[0.489437],[-2.725398],[2.689884],[-6.098183],[2.911023],[5.155611],[9.112088],[-3.736112],[7.317775],[-9.064636],[-5.053519],[7.911151],[-6.791586],[7.705371],[0.802757],[-4.543427],[-3.951591],[1.780845],[0.671252],[-9.959631],[5.096384],[-4.748445],[-6.245336],[4.639395],[5.837783],[2.912413],[-5.113097],[3.685336],[-0.571547],[-0.561253],[-1.913692],[-7.123612],[5.120173],[-9.653639],[7.059557],[2.796629],[-4.185421],[0.616629],[5.255952],[4.733781],[7.355008],[-3.324017],[8.886946],[-6.249425],[-9.878658],[-2.562547],[4.952816],[1.442649],[-5.966652],[0.499883],[-4.787138],[-8.871697],[-7.354678],[-7.531071],[-1.695246],[6.518385],[-7.897285],[5.904180],[4.359808],[1.393129],[6.478472],[0.992169],[-9.233133],[5.877560],[-9.663081],[-2.086150],[-3.751856],[-4.035832],[0.948718],[-3.448267],[-2.978527],[4.702606],[8.027713],[-1.944124],[-7.439094],[6.368147],[6.934095],[-8.232239],[3.726450],[-7.773022],[-8.508454],[3.598338],[9.399323],[6.095635],[-8.917021],[8.506768],[3.328822],[7.686556],[9.466682],[-7.673103],[9.277948],[6.225504],[-3.598277],[-8.014517],[-8.951721],[7.252260],[7.687528],[3.649877],[-1.013326],[0.380365],[-4.971700],[4.620868],[3.446547],[-3.658654],[7.286925],[-6.302503],[-0.110389],[0.970350],[5.924584],[2.930739],[7.111406],[-9.741039],[5.293498],[4.459728],[6.111214],[-8.271494],[7.104968],[9.798986],[-1.911618],[-6.913720],[-6.053714],[-5.273860],[-2.579309],[7.123204],[0.738860],[2.732951],[-4.302975],[5.204615],[1.352064],[5.123147],[-3.512492],[-3.933999],[-8.360919],[-5.396127],[-9.868056],[-3.654358],[-1.674715],[9.472892],[-6.508675],[-3.234640],[4.405077],[-6.884565],[-4.335743],[8.435250],[6.066866],[-4.028843],[-0.629151],[9.442161],[-5.166277],[8.160470],[-0.012308],[-6.023772],[-3.544232],[-6.249011],[-1.107273],[-0.515974],[-8.326777],[4.628216],[6.066910],[4.399458],[-8.792630],[-2.929353],[-6.398650],[3.747789],[7.019089],[4.498866],[-8.500390],[-2.423283],[-0.444806],[9.310552],[-3.824954],[-0.977929],[8.775125],[5.487109],[4.066721],[1.597379],[-1.768078],[-9.254244],[3.616016],[6.019217],[2.747720],[0.628897],[-4.549177],[-5.512993],[-5.436348],[-2.676905],[-7.043783],[4.600632],[-5.254234],[-8.894067],[2.427261],[0.572334],[1.235290],[0.710633],[1.010924],[9.845207],[4.784682],[-4.499616],[5.365043],[-3.628874],[7.913633],[-3.384124],[-8.578714],[2.985356],[-6.972534],[-5.879327],[6.128902],[8.463877],[0.651291],[0.790112],[6.813516],[2.107833],[7.037937],[0.177811],[8.133599],[-6.293047],[-0.858818],[-4.686871],[9.809758],[2.835470],[9.478551],[0.370291],[-9.116694],[7.543020],[6.850922],[-2.464291],[4.826819],[-9.577292],[-8.428547],[5.019439],[0.244386],[-0.660242],[-5.642356],[-4.494873],[-3.261750],[3.461353],[1.425154],[-5.425802],[7.183683],[-4.744893],[-6.292628],[-4.087753],[-8.920561],[0.339365],[-2.995122],[-3.249481],[-1.665136],[3.224472],[2.683716],[-1.546618],[1.406016],[4.124375],[6.790527],[-3.889380],[0.154228],[2.400137],[-4.875847],[-6.682417],[-6.978467],[4.842391],[-0.734989],[7.624897],[-3.970237],[-8.125435],[-3.819267],[6.072102],[-6.406064],[7.231956],[-5.559114],[4.917142],[-1.831894],[3.014815],[-7.346665],[8.753514],[6.522874],[3.183668],[5.487427],[0.107812],[3.717337],[8.336873],[-6.469708],[2.840844],[-8.738755],[-2.087832],[1.610646],[-3.826397],[3.717177],[-1.421544],[5.480743],[-3.597974],[-6.992723],[6.812783],[-2.494130],[7.330533],[-8.328062],[-5.162467],[1.648688],[0.797914],[-0.724610],[-6.271234],[1.012912],[4.011897],[-6.461200],[-1.272569],[8.316113],[3.010330],[-1.193355],[4.140564],[7.629330],[-2.141996],[-4.634561],[-6.319086],[7.798010],[2.323197],[-8.224685],[6.258080],[-4.254456],[-9.811999],[-1.215094],[5.756710],[3.425778],[9.238475],[4.425814],[0.077521],[2.123604],[-5.407295],[-4.660971],[2.526287],[-0.223250],[0.445820],[-9.966444],[6.698363],[6.602397],[1.349537],[-1.612248],[9.633018],[1.628000],[-9.900625],[-6.297709],[0.899756],[8.944349],[8.054769],[9.579295],[3.283040],[9.670290],[-6.109094],[1.827878],[-6.339471],[5.413571],[-9.074622],[-6.545888],[5.135655],[-9.165904],[-3.928686],[9.541141],[-3.336135],[7.609179],[-4.235913],[-0.033450],[3.301149],[-1.540584],[6.137549],[3.159530],[-7.239075],[-5.890099],[-7.030222],[6.087335],[-4.545317],[1.273657],[-2.054120],[7.670999],[-7.025828],[-3.010916],[6.697206],[-8.466992],[-2.575472],[-8.032252],[7.611217],[8.569829],[-7.929047],[-5.864662],[1.220314],[-4.777219],[-6.452061],[-7.599679],[4.492472],[1.407715],[5.680066],[-9.055399],[6.906062],[7.720837],[-5.426638],[8.928724],[1.877851],[4.708144],[-7.420472],[-3.243602],[9.739698],[-4.518301],[0.735911],[-4.951874],[-1.380709],[-0.168626],[5.377019],[-9.424313],[1.328658],[-6.384900],[1.327104],[4.742768],[1.539960],[-3.826893],[3.742060],[7.121463],[5.174617],[-6.756145],[-8.422444],[6.723381],[-5.651932],[-4.197115],[3.677943],[-6.603687],[-9.574843],[-4.306911],[5.366688],[-3.222055],[-0.646571],[-7.735025],[-1.456754],[1.076914],[6.922677],[-1.243451],[-6.469334],[-5.520759],[3.979379],[3.884072],[4.138173],[6.709033],[-2.971144],[6.681128],[-2.882486],[-6.588956],[-3.729219],[-8.936732],[-7.836269],[6.723604],[7.726098],[-7.879066],[8.610068],[-6.497263],[2.322269],[0.471503],[-3.943451],[2.735917],[-9.736040],[-6.418811],[-0.208764],[-2.978973],[9.732943],[5.470938],[-1.771279],[-8.133655],[-6.810253],[6.781732],[1.311909],[-7.338607],[6.527196],[-2.729360],[1.775769],[4.724070],[-2.368403],[-3.792783],[-7.724586],[-6.955751],[6.077663],[-1.883905],[-6.206418],[0.326969],[6.445765],[-4.395642],[-0.556639],[7.447013],[8.038957],[8.715744],[7.119862],[-7.700299],[-1.154969],[3.743431],[3.498628],[2.076277],[0.686093],[-1.783213],[-2.680467],[9.413239],[8.564792],[-9.849179],[-0.851036],[2.955989],[0.342528],[-1.925753],[8.710414],[6.412742],[7.697066],[8.083604],[-0.632287],[3.620517],[-2.933843],[9.823694],[3.510703],[-2.504508],[-3.096482],[3.656773],[-4.820791],[-6.415097],[9.468262],[5.471048],[-3.188196],[6.864444],[3.730899],[-2.327214],[5.164290],[1.833147],[-2.328484],[-5.906277],[0.904333],[-6.154314],[8.086092],[4.269665],[-7.382191],[-5.860289],[-4.422839],[6.609259],[-9.283361],[7.283748],[7.314423],[6.872811],[7.884761],[-6.446357],[9.309975],[-5.387116],[3.940272],[-9.147713],[-6.805632],[-8.161176],[-8.664237],[-6.340293],[-6.116533],[2.289199],[-7.303577],[-2.364531],[-0.435359],[-2.905165],[8.568576],[2.506856],[3.020273],[5.274648],[-3.337725],[-6.210384],[3.327829],[-4.919822],[6.263377],[6.063666],[-9.541498],[-9.743523],[2.148688],[-8.717293],[-2.600287],[0.709827],[8.024744],[-4.155787],[-5.490255],[5.839841],[7.450241],[6.228842],[-0.031431],[-2.272321],[3.524726],[-7.309400],[-6.675357],[-8.617463],[5.980535],[-3.268312],[-9.650195],[4.623715],[-0.110743],[-4.977227],[-6.971659],[-8.474580],[2.708176],[-4.020707],[0.084829],[2.368643],[-7.470592],[-1.919328],[-4.834193],[-2.700027],[0.072052],[4.456625],[3.203063],[4.355362],[-2.165828],[-1.229169],[8.540359],[7.389118],[0.261285],[-0.900358],[-7.147442],[0.479867],[0.800458],[-5.046526],[-3.588755],[-7.733640],[9.067530],[5.577493],[-7.046796],[-0.482547],[2.174832],[3.594919],[7.236989],[7.302844],[0.717302],[7.078693],[-5.120725],[-3.932469],[-3.385604],[5.487031],[-1.147475],[-6.806134],[-1.724497],[-4.707543],[-3.938824],[3.977583],[3.737155],[-0.434031],[4.829802],[7.954214],[-7.937614],[6.405354],[5.286552],[-1.121670],[-3.385862],[0.936458],[8.669354],[-8.328018],[7.270746],[0.670492],[6.328513],[0.254697],[0.083105],[-5.892378],[-2.821865],[6.695568],[-6.324233],[5.510941],[3.078842],[-4.272041],[6.305875],[-3.691653],[9.764230],[-0.281389],[0.471769],[7.963277],[4.588956],[8.271108],[-2.296379],[1.388203],[-7.620537],[2.462101],[4.108556],[-2.741348],[1.114190],[-8.724049],[-0.207800],[7.969949],[4.275273],[0.132788],[6.512257],[-1.624005],[3.320947],[-5.967334],[6.264254],[-0.006002],[-0.120435],[-5.190695],[-8.116933],[-1.236017],[5.406714],[9.845963],[2.478001],[-8.628083],[-4.465632],[6.680804],[-0.268295],[-1.186653],[-6.260512],[3.519457],[5.636362],[3.380646],[-9.089030],[7.410530],[-1.792742],[-6.987094],[5.782878],[-0.661435],[-9.945492],[9.454004],[-1.877466],[6.663273],[-6.934818],[-8.101699],[-2.303923],[-7.689826],[-0.019225],[5.588812],[-6.502665],[1.215538],[6.127045],[-0.518842],[4.905056],[5.763902],[8.894554],[2.063173],[-3.198152],[-1.463692],[-3.073860],[3.331468],[5.073276],[-9.869104],[8.309322],[-2.682900],[1.569486],[-8.958496],[7.217095],[0.430602],[8.883109],[-8.036596],[6.868135],[-3.747482],[-6.201255],[8.531585],[-1.621241],[5.718683],[-9.639776],[8.368491],[-8.030030],[6.894332],[2.979961],[-5.144907],[5.046582],[-8.076280],[-3.918457],[0.094723],[-4.531762],[1.295209],[6.502500],[5.771209],[6.560823],[2.956420],[1.961231],[4.971691],[-4.168404],[1.534917],[9.360315],[-6.433910],[3.151449],[4.491830],[2.641362],[8.314188],[9.364133],[8.257804],[8.015851],[-7.962227],[4.209766],[7.199818],[-3.470389],[-1.673218],[8.723154],[-1.400384],[0.474931],[0.150397],[5.558384],[4.763029],[-5.713095],[-0.009826],[8.900039],[-6.251273],[5.430974],[-3.826155],[-9.140305],[2.406964],[-3.196369],[2.222849],[5.774913],[-7.377699],[-7.353817],[7.702071],[8.274652],[-9.192081],[6.796621],[5.536279],[-3.392012],[-1.051740],[-9.487971],[5.439694],[-9.953246],[8.084928],[-3.066348],[-9.941258],[-2.821683],[9.621505],[1.943188],[9.115340],[6.111093],[-2.274123],[-6.462402],[3.251262],[5.045126],[-2.039550],[-9.974213],[-1.104696],[-9.964819],[-4.142273],[-8.087286],[-3.999877],[4.463130],[9.606194],[-8.992227],[5.852638],[-9.842372],[1.286448],[7.422644],[-6.424221],[-7.106993],[-2.007217],[-0.448968],[6.278671],[-0.608057],[3.862874],[-3.507014],[-3.613937],[8.783459],[-3.649124],[-0.709176],[7.607252],[4.721805],[9.739017],[-1.147913],[8.521970],[9.417540],[5.790185],[-2.927591],[-9.865145],[-8.418129],[5.853331],[-0.137653],[0.440148],[9.803360],[6.217071],[8.029810],[0.016344],[5.927563],[-5.229654],[-2.435243],[-7.797899],[6.333303],[2.926416],[-8.718050],[8.314992],[9.408310],[-8.817258],[-9.428072],[-6.893014],[2.371305],[6.751576],[-6.424691],[-2.778164],[2.094665],[8.228919],[-3.186910],[0.722639],[-0.578857],[-5.506926],[1.969282],[5.743745],[-1.326261],[-7.899566],[6.399061],[6.015537],[-8.870138],[-4.884577],[1.154041],[5.749544],[0.868116],[-4.290735],[-7.055320],[8.814407],[-9.754425],[-9.085818],[9.348857],[-8.803384],[0.306188],[-3.144295],[3.033366],[7.099386],[-2.075202],[6.688952],[-6.659425],[4.525107],[1.178866],[-1.702272],[6.039671],[-7.220586],[4.900307],[9.835917],[1.259760],[-7.522091],[-1.854290],[9.561280],[-7.751214]], dtype = "float64")#candidate|11246|(2340, 1)|const|float64
call_11245 = func_5752_call(relay.reshape(const_11246.astype('float64'), [12, 13, 15]))
call_11247 = func_5752_call(relay.reshape(const_11246.astype('float64'), [12, 13, 15]))
func_8371_call = mod.get_global_var('func_8371')
func_8372_call = mutated_mod.get_global_var('func_8372')
call_11253 = relay.TupleGetItem(func_8371_call(), 1)
call_11254 = relay.TupleGetItem(func_8372_call(), 1)
uop_11256 = relay.cos(const_11246.astype('float64')) # shape=(2340, 1)
output = relay.Tuple([call_11222,call_11245,call_11253,uop_11256,])
output2 = relay.Tuple([call_11223,call_11247,call_11254,uop_11256,])
func_11265 = relay.Function([], output)
mod['func_11265'] = func_11265
mod = relay.transform.InferType()(mod)
mutated_mod['func_11265'] = func_11265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11265_call = mutated_mod.get_global_var('func_11265')
call_11266 = func_11265_call()
output = call_11266
func_11267 = relay.Function([], output)
mutated_mod['func_11267'] = func_11267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8562_call = mod.get_global_var('func_8562')
func_8563_call = mutated_mod.get_global_var('func_8563')
call_11340 = relay.TupleGetItem(func_8562_call(), 0)
call_11341 = relay.TupleGetItem(func_8563_call(), 0)
func_9255_call = mod.get_global_var('func_9255')
func_9257_call = mutated_mod.get_global_var('func_9257')
var_11343 = relay.var("var_11343", dtype = "float64", shape = (147,))#candidate|11343|(147,)|var|float64
call_11342 = func_9255_call(relay.reshape(var_11343.astype('float64'), [3, 7, 7]))
call_11344 = func_9255_call(relay.reshape(var_11343.astype('float64'), [3, 7, 7]))
output = relay.Tuple([call_11340,call_11342,var_11343,])
output2 = relay.Tuple([call_11341,call_11344,var_11343,])
func_11347 = relay.Function([var_11343,], output)
mod['func_11347'] = func_11347
mod = relay.transform.InferType()(mod)
mutated_mod['func_11347'] = func_11347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11348 = relay.var("var_11348", dtype = "float64", shape = (147,))#candidate|11348|(147,)|var|float64
func_11347_call = mutated_mod.get_global_var('func_11347')
call_11349 = func_11347_call(var_11348)
output = call_11349
func_11350 = relay.Function([var_11348], output)
mutated_mod['func_11350'] = func_11350
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11413 = relay.var("var_11413", dtype = "int8", shape = (14, 12, 6))#candidate|11413|(14, 12, 6)|var|int8
var_11414 = relay.var("var_11414", dtype = "int8", shape = (14, 12, 6))#candidate|11414|(14, 12, 6)|var|int8
bop_11415 = relay.bitwise_xor(var_11413.astype('int8'), relay.reshape(var_11414.astype('int8'), relay.shape_of(var_11413))) # shape=(14, 12, 6)
func_5827_call = mod.get_global_var('func_5827')
func_5829_call = mutated_mod.get_global_var('func_5829')
call_11418 = func_5827_call()
call_11419 = func_5827_call()
func_8828_call = mod.get_global_var('func_8828')
func_8829_call = mutated_mod.get_global_var('func_8829')
call_11424 = relay.TupleGetItem(func_8828_call(), 0)
call_11425 = relay.TupleGetItem(func_8829_call(), 0)
output = relay.Tuple([bop_11415,call_11418,call_11424,])
output2 = relay.Tuple([bop_11415,call_11419,call_11425,])
func_11429 = relay.Function([var_11413,var_11414,], output)
mod['func_11429'] = func_11429
mod = relay.transform.InferType()(mod)
mutated_mod['func_11429'] = func_11429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11429_call = mutated_mod.get_global_var('func_11429')
var_11431 = relay.var("var_11431", dtype = "int8", shape = (14, 12, 6))#candidate|11431|(14, 12, 6)|var|int8
var_11432 = relay.var("var_11432", dtype = "int8", shape = (14, 12, 6))#candidate|11432|(14, 12, 6)|var|int8
call_11430 = func_11429_call(var_11431,var_11432,)
output = call_11430
func_11433 = relay.Function([var_11431,var_11432,], output)
mutated_mod['func_11433'] = func_11433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9439_call = mod.get_global_var('func_9439')
func_9440_call = mutated_mod.get_global_var('func_9440')
call_11438 = relay.TupleGetItem(func_9439_call(), 0)
call_11439 = relay.TupleGetItem(func_9440_call(), 0)
uop_11441 = relay.tan(call_11438.astype('float64')) # shape=(13, 12, 2)
uop_11443 = relay.tan(call_11439.astype('float64')) # shape=(13, 12, 2)
output = relay.Tuple([uop_11441,])
output2 = relay.Tuple([uop_11443,])
func_11459 = relay.Function([], output)
mod['func_11459'] = func_11459
mod = relay.transform.InferType()(mod)
mutated_mod['func_11459'] = func_11459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11459_call = mutated_mod.get_global_var('func_11459')
call_11460 = func_11459_call()
output = call_11460
func_11461 = relay.Function([], output)
mutated_mod['func_11461'] = func_11461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7191_call = mod.get_global_var('func_7191')
func_7193_call = mutated_mod.get_global_var('func_7193')
call_11465 = relay.TupleGetItem(func_7191_call(), 0)
call_11466 = relay.TupleGetItem(func_7193_call(), 0)
uop_11470 = relay.tan(call_11465.astype('float64')) # shape=(10, 11, 16)
uop_11472 = relay.tan(call_11466.astype('float64')) # shape=(10, 11, 16)
func_4953_call = mod.get_global_var('func_4953')
func_4956_call = mutated_mod.get_global_var('func_4956')
const_11481 = relay.const([-1.017298,6.976830,-6.673552,8.018493,1.083265,4.270904,-1.572665,-2.466141,5.149647,7.462828,-0.221006,8.868822,-1.470203,0.379247,8.100715,-3.352111,-5.401247,6.080684,-6.068722,0.619847,-0.376532,8.199932,8.897172,-3.792189,-5.946274,-6.754738,0.992320,2.839902,0.974160,4.221838,-8.029539,-7.555622,-5.488448,3.650888,-3.670205,-8.653099,2.713172,2.083231,7.976258,3.494643,7.215139,2.156423,6.051106,-7.612448,0.868485,-2.034883,2.171768,-4.115738,-7.625662,4.083804,-8.586607,0.203550,0.065066,-4.825774,5.461801,4.920928,3.790548,0.337810,7.656366,7.530621,2.807701,-0.846515,-8.001618,-4.854690,-7.966030,3.689485,-5.244373,-2.026472,-4.904683,-8.906862,2.368620,-0.567589,-4.543174,2.016569,-3.153819,-6.614678,-6.327079,-1.388477,2.364155,9.865065,-5.517218,0.507421,-5.887774,9.161244,-3.856578,-1.611143,6.206811,5.659455,-6.653815,3.604563,3.156423,-0.935591,6.061285,0.175514,-1.511968,-4.194569,7.196781,4.733496,-6.793390,-1.060242,-9.191671,-5.330157,-0.281307,-0.101417,-0.623690,5.639176,4.169081,-0.869982,-3.274318,-6.096102,-6.653643,-6.363305,-9.832086,5.754076,-6.742282,2.210611,-7.665623,-4.063145,4.485470,3.109074,-9.843368,-1.999663,9.963372,-8.726955,-1.334516,-8.084718,-9.002294,-6.086166,-9.135615,2.726590,-2.291773,5.640272,-0.122582,5.327610,-1.766360,6.110938,9.225797,3.705056,-8.239577,-9.998658,-1.211113,-0.929394,3.226396,8.586818,-6.665120,-1.998724,6.807277,-1.120096,1.351225,-6.332165,-6.547256,9.555991,6.569172,-4.406150,-3.280435,-2.065382,9.683940,1.759540,4.719545,-8.002155,5.264776,-2.088521,8.188107,-7.589060,-0.054934,-9.476743,2.891396,-6.340931,-0.815340,-2.967051,-1.072298,9.824556,4.536123,-9.240710,7.888883,9.444275,-0.158834,-6.173033,-8.703486,-2.864000,9.570386,4.191568,-7.777990,8.615510,7.273640,-0.112131,-2.836072,6.057453,-6.287225,-2.688746,6.884686,5.873083,-2.547730,8.070710,-7.854896,7.541739,-0.820204,-3.220235,7.113850,-1.538284,-2.628799,-5.861109,-9.420432,-6.124373,8.498243,9.301061,-3.287463,-5.503708,-7.115750,5.278778,-3.968451,-4.180561,-8.146275,2.560712,-1.319852,-7.205399,-2.809246,9.401678,-1.551487,-6.390636,-3.428843,-6.439763,-1.424582,0.243699,-4.215588,3.531744,-5.437803,-2.476402,3.616123,-7.801667,9.558017,-4.769242,5.477994,-4.364398,1.907077,9.687382,-8.206251,6.698533,3.828683,4.615233,7.291817,-9.368467,-9.435122,-3.938716,-9.154660,7.859328,3.958131,-5.567025,9.332359,3.292904,5.143301,5.154950,-8.513044,-8.488709,6.760866,-1.335046,-4.204255,-3.107485,5.663225,-2.559593,2.206738,9.186871,2.757103,8.674775,-5.126594,-9.157392,-1.799519,-8.002245,-6.779443,-3.085240,-1.643208,-4.035850,7.448455,-5.392994,-1.183240,-1.606046,-0.408937,-2.866754,6.922430,6.706316,-2.051873,8.389583,3.965390,-2.347253,-2.793573,4.002918,0.878775,-3.918781,3.055465,2.899867,7.778083,4.489536,8.797334,-5.209514,-5.288515,-5.748896,3.302942,4.816358,3.202636,-8.343092,-7.146293,4.275403,5.606807,-2.845132,-1.087622,-5.897956,3.401580,6.529532,-1.178152,-5.350875,1.017586,6.554221,-5.501389,4.105787,-8.974655,-0.904685,-0.229507,-7.939060,9.063191,-0.743980,-3.360271,8.145986,-4.719029,-0.839167,-0.306885,5.764866,-8.696734,-5.210714,4.326761,-5.945665,2.564555,-1.597156,-2.450445,-9.302558,1.759347,3.845596,3.611993,-3.316644,-8.215689,-1.268069,6.507701,-9.856820,0.773616,-1.031844,3.605272,-3.043579,1.909042,-0.053414,-8.016311,1.531706,1.498779,7.754378,-9.477695,-2.357805,0.556382,3.829464,5.080020,-4.283463,0.407744,0.401461,7.953049,1.591072,7.875513,9.389348,-2.434889,7.776285,2.117730,7.276455,-1.785624,-0.538923,-4.971588,-8.818678,-9.341899,-2.930755,-3.495679,-4.204327,-5.200787,-8.557582,9.691933,9.339772,4.404325,4.318532,9.872769,-2.939152,-8.097588,5.907206,-7.355837,-1.296413,-9.503972,-8.953007,9.716034,4.611846,2.146416,5.406596,4.577260,-9.001960,2.573232,1.205340,-1.126765,3.353392,2.463380,-9.373316,-5.997425,-3.618721,2.426440,9.719506,1.387637,-2.905404,2.936551,4.226340,-6.334517,8.179191,0.585823,1.029146,-7.027015,-8.764981,3.051850,8.297877,-8.313411,2.320129], dtype = "float64")#candidate|11481|(420,)|const|float64
call_11480 = relay.TupleGetItem(func_4953_call(relay.reshape(const_11481.astype('float64'), [420,])), 1)
call_11482 = relay.TupleGetItem(func_4956_call(relay.reshape(const_11481.astype('float64'), [420,])), 1)
func_9938_call = mod.get_global_var('func_9938')
func_9940_call = mutated_mod.get_global_var('func_9940')
call_11490 = relay.TupleGetItem(func_9938_call(), 0)
call_11491 = relay.TupleGetItem(func_9940_call(), 0)
func_10243_call = mod.get_global_var('func_10243')
func_10244_call = mutated_mod.get_global_var('func_10244')
call_11496 = relay.TupleGetItem(func_10243_call(), 1)
call_11497 = relay.TupleGetItem(func_10244_call(), 1)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_11536 = func_4993_call()
call_11537 = func_4993_call()
func_1002_call = mod.get_global_var('func_1002')
func_1005_call = mutated_mod.get_global_var('func_1005')
var_11548 = relay.var("var_11548", dtype = "int64", shape = (112,))#candidate|11548|(112,)|var|int64
call_11547 = func_1002_call(relay.reshape(var_11548.astype('int64'), [4, 14, 2]))
call_11549 = func_1002_call(relay.reshape(var_11548.astype('int64'), [4, 14, 2]))
output = relay.Tuple([uop_11470,call_11480,const_11481,call_11490,call_11496,call_11536,call_11547,var_11548,])
output2 = relay.Tuple([uop_11472,call_11482,const_11481,call_11491,call_11497,call_11537,call_11549,var_11548,])
func_11551 = relay.Function([var_11548,], output)
mod['func_11551'] = func_11551
mod = relay.transform.InferType()(mod)
mutated_mod['func_11551'] = func_11551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11552 = relay.var("var_11552", dtype = "int64", shape = (112,))#candidate|11552|(112,)|var|int64
func_11551_call = mutated_mod.get_global_var('func_11551')
call_11553 = func_11551_call(var_11552)
output = call_11553
func_11554 = relay.Function([var_11552], output)
mutated_mod['func_11554'] = func_11554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7550_call = mod.get_global_var('func_7550')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_11564 = func_7550_call()
call_11565 = func_7550_call()
output = relay.Tuple([call_11564,])
output2 = relay.Tuple([call_11565,])
func_11566 = relay.Function([], output)
mod['func_11566'] = func_11566
mod = relay.transform.InferType()(mod)
mutated_mod['func_11566'] = func_11566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11566_call = mutated_mod.get_global_var('func_11566')
call_11567 = func_11566_call()
output = call_11567
func_11568 = relay.Function([], output)
mutated_mod['func_11568'] = func_11568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_11601 = relay.TupleGetItem(func_4380_call(), 0)
call_11602 = relay.TupleGetItem(func_4382_call(), 0)
output = call_11601
output2 = call_11602
func_11608 = relay.Function([], output)
mod['func_11608'] = func_11608
mod = relay.transform.InferType()(mod)
mutated_mod['func_11608'] = func_11608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11608_call = mutated_mod.get_global_var('func_11608')
call_11609 = func_11608_call()
output = call_11609
func_11610 = relay.Function([], output)
mutated_mod['func_11610'] = func_11610
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11621 = relay.var("var_11621", dtype = "int64", shape = (13, 7, 16))#candidate|11621|(13, 7, 16)|var|int64
var_11622 = relay.var("var_11622", dtype = "int64", shape = (13, 7, 16))#candidate|11622|(13, 7, 16)|var|int64
bop_11623 = relay.not_equal(var_11621.astype('bool'), relay.reshape(var_11622.astype('bool'), relay.shape_of(var_11621))) # shape=(13, 7, 16)
output = relay.Tuple([bop_11623,])
output2 = relay.Tuple([bop_11623,])
func_11628 = relay.Function([var_11621,var_11622,], output)
mod['func_11628'] = func_11628
mod = relay.transform.InferType()(mod)
mutated_mod['func_11628'] = func_11628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11628_call = mutated_mod.get_global_var('func_11628')
var_11630 = relay.var("var_11630", dtype = "int64", shape = (13, 7, 16))#candidate|11630|(13, 7, 16)|var|int64
var_11631 = relay.var("var_11631", dtype = "int64", shape = (13, 7, 16))#candidate|11631|(13, 7, 16)|var|int64
call_11629 = func_11628_call(var_11630,var_11631,)
output = call_11629
func_11632 = relay.Function([var_11630,var_11631,], output)
mutated_mod['func_11632'] = func_11632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8861_call = mod.get_global_var('func_8861')
func_8862_call = mutated_mod.get_global_var('func_8862')
call_11674 = relay.TupleGetItem(func_8861_call(), 0)
call_11675 = relay.TupleGetItem(func_8862_call(), 0)
func_6785_call = mod.get_global_var('func_6785')
func_6786_call = mutated_mod.get_global_var('func_6786')
call_11685 = func_6785_call()
call_11686 = func_6785_call()
func_10169_call = mod.get_global_var('func_10169')
func_10170_call = mutated_mod.get_global_var('func_10170')
call_11723 = relay.TupleGetItem(func_10169_call(), 0)
call_11724 = relay.TupleGetItem(func_10170_call(), 0)
func_8175_call = mod.get_global_var('func_8175')
func_8177_call = mutated_mod.get_global_var('func_8177')
call_11734 = func_8175_call()
call_11735 = func_8175_call()
func_10550_call = mod.get_global_var('func_10550')
func_10553_call = mutated_mod.get_global_var('func_10553')
const_11737 = relay.const([-5.975549,-2.170902,-9.183653,-9.188274,2.508837,-2.953820,-9.505650,9.963304,-5.252269,-1.370387,4.427993,-0.682273,-9.469750,-4.123442,0.293100,7.180793,-7.687656,7.933602,-2.822074,-6.529418,7.413873,4.046221,5.890799,-9.609076,-7.633831,-0.544113,-0.790923,7.443077,-3.190238,3.804599,5.501188,3.521819,-1.834286,-2.433232,-8.396089,-2.445003,7.729321,-9.350532,-6.143619,-2.424132,1.579900,8.678618,9.934578,-9.898158,-3.475457,-3.691274,-4.342888,7.116134,-1.807600,7.672418,-3.193227,-5.682535,-9.352885,-1.180265,-8.272575,6.673891,9.784328,4.428459,-2.868072,-9.025691,0.462705,-4.957839,-5.117227,4.851120,1.980786,-3.531223,-1.812369,8.816226,5.532255,-2.164097,6.331038,5.228813,-5.473863,0.360272,-3.543361,7.232470,-4.837691,-4.420967,-4.694441,-9.644753,-2.221180,3.991615,7.341642,3.676627,3.546954,-4.939322,-6.662809,3.599121,4.020482,0.177994,6.916336,8.172611,-8.118153,-2.294890,0.217907,-3.184963,2.334056,9.522466,-1.839089,7.776923,-3.843033,-1.987916,5.239974,6.170102,2.237044,0.925858,3.970134,-5.123139,-6.286932,-9.965086,0.830241,3.848763,3.292374,-5.352909,-9.825770,6.961014,8.087197,3.238957,3.070496,2.564487,4.635029,4.029255,-0.613712,-0.882344,1.999412,-6.518013,0.944748,7.446467,-7.316041,-4.362806,-4.711885,0.688851,-5.889532,-0.668659,2.694854,-0.720877,-2.275816,-1.628495,3.731829,1.378433,8.192273,-7.196916,-2.570036,3.805630,4.632484,3.528787,6.904811,5.089690,8.230991,-0.799081,-8.423174,5.189302,-2.066394,0.601707,-2.239374,-0.957790,-7.258071,-1.431465,4.630191,-3.361969,6.009216,-9.817813,-3.184893,-6.790355,7.768398,3.311909,2.200138,7.865360,-5.717556,-5.249437,5.612594,-2.703261,0.277044,-7.187778,2.251031,7.951061,-3.944066,0.914524,4.518144,-6.731958,-3.304673,-7.108250,-3.638979,-3.881043,-9.400869,8.459759,0.515576,-4.847278,-4.876394,9.113230,5.812055,2.593953,-6.684127,-2.908394,-8.106730,7.745415,-6.001120,2.639112,0.726136,9.936033,-6.681103,5.061772,2.593497,-8.980997,7.311173,6.705147,-6.266492,-8.816848,7.325885,-0.028274,-7.752027,0.607827,-5.029269,2.338619,-9.630081,7.803378,-7.606369,-3.121808,-8.499607,6.876077,7.177111,-3.213977,2.207392,-4.660434,-1.439077,1.283249,-3.809303,7.487372,0.410759,-6.499331,-2.040107,-9.084442,1.116280,-8.303121,2.002660,4.158228,-1.518334,-7.731682,-6.068826,-9.453944,4.844756,2.619271,-6.034618,-2.044827,-4.405952,4.469304,6.383493,9.403827,5.078888,-8.848118,3.445656,8.705585,-8.700983,-8.020489,-8.528431,6.293079,-9.927943,-0.657371,3.564091,-6.186934,2.487913,-7.091349,0.591087,7.825089,9.348349,1.643787,4.619840,-7.480093,-1.698638,3.118204,-7.917949,-6.523915,4.570046,7.999396,-0.324773,-1.622170,-4.707926,-7.588940,-2.630658,-8.614975,0.361092,1.086120,-4.627994,-1.556583,-0.178737,5.202923,-5.045215,0.559097,-1.291266,0.743176,-9.636487,1.752804,-2.612280,-3.041641,9.292392,4.429986,-3.260386,-1.455886,-2.092867,9.127168,-0.693533,9.840691,-7.684176,-7.459044,-8.695331,3.343545,-3.213759,3.254937,-3.701761,1.943664,-6.456143,2.453479,4.864525,2.771564,-8.792898,-1.223772,2.583808,-6.371546,-4.047243,7.873495,-3.598036,5.582586,8.636761,5.826000,-4.794536,9.045408,0.454618,3.785907,-4.897443,2.579166,7.591912,7.449566,1.073763,9.685550,3.815744,-5.535491,1.823578,-9.696300,-6.220820,7.316858,-8.657338,0.271565,0.007432,3.964932,2.937178,-7.622042,-1.319518,-9.233666,6.004024,-2.014001,-4.701499,-5.241893,-4.844502,-8.848416,5.921845,-4.340271,-2.564194,2.937768,-0.385394,-4.940070,4.415951,5.650575,-4.347388,-9.734843,9.730626,-5.743004,3.675386,8.794368,6.074619,7.626557,8.560070,7.821015,8.411294,6.969534,4.202294,-6.057201,5.725408,-5.457640,3.628643,0.561029,5.619795,-2.107133,3.910156,4.231986,4.228446,3.968777,-2.983606,-8.347986,2.634039,5.246238,8.746430,-5.301225,3.120911,6.597752,6.603997,2.125621,-8.258849,0.863032,-1.745838,6.417437,4.993652,-7.706576,1.314159,-8.186624,7.309154,8.471021,3.021107,9.121397,-6.868935,0.172068,8.555352,8.102084,-1.322067,4.903487,4.594101,-7.130258,1.384806,-8.588574,8.288859,-1.737918,-2.003050,-4.845231,2.312215,1.513571,-6.409310,7.815493,2.023994,5.038549,5.308888,-5.032407,5.200180,-4.933651,-0.232358,1.121063,0.137214,-0.191588,1.361432,9.481677,-5.017107,5.142285,7.026266,-3.289921,4.049650,-9.462238,7.905049,3.282203,2.799595,5.474868,-4.303169,2.011710,-4.812697,1.997854,-1.451408,-0.161387,1.533433,4.660555,-9.756961,-1.174861,-9.442839,7.738026,0.882583,-1.619413,-5.426660,-2.848396,7.784743,-6.389167,1.446423,9.845918,-9.734027,-6.055675,7.511097,-9.868817,-3.113760,9.714622,9.369912,-1.387791,3.391947,3.432451,-7.895947,-7.093925,0.459803,-9.086696,0.237998,9.835551,3.552727,8.983020,0.762803,2.008029,-8.485520,-2.258613,3.429020,7.232612,-0.118551,-9.576911,-7.750038,-8.279957,7.391949,5.764756,-7.769134,-1.365517,-5.113189,8.827276,4.926044,5.827066,9.074332,1.431326,-5.386891,-1.267913,7.745910,-1.348373,9.843291,5.460089,1.831169,6.645221,6.463518,1.381107,-8.733460,-0.584999,6.821238,8.136775,8.933918,4.946263,3.949765,-5.269131,-5.389056,8.346457,8.553166,-5.479122,3.909965,0.533054,0.207268,-2.801470,7.218388,0.322220,3.773424,2.663197,1.833073,-5.634294,-4.131278,0.204632,7.545448,3.232228,-1.998891,3.026510,9.813670,-1.810973,-4.508524,-6.906489,7.790307,-6.351605,6.278102,-6.293951,3.106515,7.610231,4.159119,-0.479397,9.411542,-9.770944,-3.098431,7.848860], dtype = "float32")#candidate|11737|(560,)|const|float32
call_11736 = func_10550_call(relay.reshape(const_11737.astype('float32'), [4, 10, 14]))
call_11738 = func_10550_call(relay.reshape(const_11737.astype('float32'), [4, 10, 14]))
func_9967_call = mod.get_global_var('func_9967')
func_9968_call = mutated_mod.get_global_var('func_9968')
call_11740 = func_9967_call()
call_11741 = func_9967_call()
output = relay.Tuple([call_11674,call_11685,call_11723,call_11734,call_11736,const_11737,call_11740,])
output2 = relay.Tuple([call_11675,call_11686,call_11724,call_11735,call_11738,const_11737,call_11741,])
func_11743 = relay.Function([], output)
mod['func_11743'] = func_11743
mod = relay.transform.InferType()(mod)
mutated_mod['func_11743'] = func_11743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11743_call = mutated_mod.get_global_var('func_11743')
call_11744 = func_11743_call()
output = call_11744
func_11745 = relay.Function([], output)
mutated_mod['func_11745'] = func_11745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7164_call = mod.get_global_var('func_7164')
func_7166_call = mutated_mod.get_global_var('func_7166')
call_11805 = relay.TupleGetItem(func_7164_call(), 0)
call_11806 = relay.TupleGetItem(func_7166_call(), 0)
func_4589_call = mod.get_global_var('func_4589')
func_4592_call = mutated_mod.get_global_var('func_4592')
var_11814 = relay.var("var_11814", dtype = "uint64", shape = ())#candidate|11814|()|var|uint64
var_11815 = relay.var("var_11815", dtype = "uint64", shape = (2400,))#candidate|11815|(2400,)|var|uint64
call_11813 = relay.TupleGetItem(func_4589_call(relay.reshape(var_11814.astype('uint64'), []), relay.reshape(var_11815.astype('uint64'), [2400,]), ), 1)
call_11816 = relay.TupleGetItem(func_4592_call(relay.reshape(var_11814.astype('uint64'), []), relay.reshape(var_11815.astype('uint64'), [2400,]), ), 1)
func_7164_call = mod.get_global_var('func_7164')
func_7166_call = mutated_mod.get_global_var('func_7166')
call_11836 = relay.TupleGetItem(func_7164_call(), 1)
call_11837 = relay.TupleGetItem(func_7166_call(), 1)
func_1002_call = mod.get_global_var('func_1002')
func_1005_call = mutated_mod.get_global_var('func_1005')
const_11852 = relay.const([8,1,1,4,-8,-3,10,-6,8,5,7,-2,-1,-7,10,8,-9,-4,9,-10,-9,-4,4,3,10,-2,5,9,3,-6,-2,-1,-5,3,-4,-1,-9,-4,-4,7,-5,1,2,-4,6,8,-6,8,5,-7,6,2,10,-8,-2,-10,-1,7,-1,-8,2,-4,6,-4,-5,2,9,-7,-9,-5,8,-10,-8,-2,-9,-7,-8,-3,-3,9,-8,-1,2,-5,-1,-2,10,9,8,-9,4,9,-7,8,7,-9,-6,-1,-8,-1,-9,-9,-6,8,-10,2,5,5,4,-3,3,-8], dtype = "int64")#candidate|11852|(112,)|const|int64
call_11851 = func_1002_call(relay.reshape(const_11852.astype('int64'), [4, 14, 2]))
call_11853 = func_1002_call(relay.reshape(const_11852.astype('int64'), [4, 14, 2]))
output = relay.Tuple([call_11805,call_11813,var_11814,var_11815,call_11836,call_11851,const_11852,])
output2 = relay.Tuple([call_11806,call_11816,var_11814,var_11815,call_11837,call_11853,const_11852,])
func_11875 = relay.Function([var_11814,var_11815,], output)
mod['func_11875'] = func_11875
mod = relay.transform.InferType()(mod)
var_11876 = relay.var("var_11876", dtype = "uint64", shape = ())#candidate|11876|()|var|uint64
var_11877 = relay.var("var_11877", dtype = "uint64", shape = (2400,))#candidate|11877|(2400,)|var|uint64
output = func_11875(var_11876,var_11877,)
func_11878 = relay.Function([var_11876,var_11877,], output)
mutated_mod['func_11878'] = func_11878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11459_call = mod.get_global_var('func_11459')
func_11461_call = mutated_mod.get_global_var('func_11461')
call_11910 = relay.TupleGetItem(func_11459_call(), 0)
call_11911 = relay.TupleGetItem(func_11461_call(), 0)
output = call_11910
output2 = call_11911
func_11951 = relay.Function([], output)
mod['func_11951'] = func_11951
mod = relay.transform.InferType()(mod)
output = func_11951()
func_11952 = relay.Function([], output)
mutated_mod['func_11952'] = func_11952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8175_call = mod.get_global_var('func_8175')
func_8177_call = mutated_mod.get_global_var('func_8177')
call_11986 = func_8175_call()
call_11987 = func_8175_call()
output = call_11986
output2 = call_11987
func_11997 = relay.Function([], output)
mod['func_11997'] = func_11997
mod = relay.transform.InferType()(mod)
mutated_mod['func_11997'] = func_11997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11997_call = mutated_mod.get_global_var('func_11997')
call_11998 = func_11997_call()
output = call_11998
func_11999 = relay.Function([], output)
mutated_mod['func_11999'] = func_11999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9087_call = mod.get_global_var('func_9087')
func_9089_call = mutated_mod.get_global_var('func_9089')
call_12014 = relay.TupleGetItem(func_9087_call(), 0)
call_12015 = relay.TupleGetItem(func_9089_call(), 0)
func_8303_call = mod.get_global_var('func_8303')
func_8305_call = mutated_mod.get_global_var('func_8305')
call_12023 = func_8303_call()
call_12024 = func_8303_call()
func_8609_call = mod.get_global_var('func_8609')
func_8611_call = mutated_mod.get_global_var('func_8611')
const_12028 = relay.const([[3.616796,0.311293,-4.643490,7.593592,-4.447641,7.458612,4.968082,4.127567,-7.713624,-5.764283,-3.996373,8.428877,0.588621,-8.394734,0.260943,-8.372951,-9.498901,-9.523913,-8.059332,2.708991,-7.130523,1.706900,0.880541,8.064777,-3.532597,-0.352522,7.751771,-2.412061,1.543950,-9.729354,0.251880,5.977725,-4.567383,1.572111,7.888733,1.616336,7.604034,-0.829696,2.158364,-4.193826,3.147202,-5.546816,2.107661,2.887468,-3.710336,9.437451,-7.814978,5.603337,-6.022808,-0.495017,5.586902,-5.670048,-6.591703,2.303724,-6.619101,7.549618,8.209220,-9.943605,-5.973665,4.543520,5.576923,-7.541429,9.267503,-5.983320,-4.988948,0.032591,-5.651638,-4.991387,-8.291531,-6.921399,-3.025790,8.702212,-2.170362,-7.824117,4.479669,8.722927,-3.345594,9.209391,2.733351,8.007865,-0.906887,1.433657,-5.041513,5.766850,-1.995580,0.957692,2.218500,-7.423537,-7.069099,-6.138770,-6.637250,-5.207789,7.207243,-2.522855,2.068178,3.772988,-0.772334,-4.696361,-2.930296,-2.680328,-1.880276,2.693248,-0.646771,6.429935,-1.869797,-8.680551,0.339311,6.148870,-2.671780,7.161005,-3.849507,2.511407,2.171354,0.431724,5.812073,-8.339792,-0.509192,9.353767,0.430316,9.412825,-8.941401,-0.938184,8.036696,3.472318,4.764698,7.293459,1.466055,5.558515,6.406583,-3.523810,-7.393990,-0.056737,8.405045,2.115985,-6.263302,-6.967312,-4.874162,-8.349223,5.856579,-7.591440,-7.499203,-4.856147,-5.618956,-2.167278,-7.336215,3.395120,-1.874756,7.595331,4.513804,-5.989957,-9.759429,0.389280,-6.533340,-4.834163,1.993147,-0.598808,-9.577586,8.372917,-1.943307,-0.514219,-2.707163,9.383932,5.568514,-2.662481,7.928342,-6.067856,-0.710880,9.728101,5.494264,-7.864550,-5.745493,-3.677636,6.590203,5.862907,-7.640254,-7.191392,4.499153,3.494494,2.754593,-9.957391,-4.661280,-7.388415,-4.814747,3.158527,3.150486,-8.560302,8.968971,-1.330182,-0.188092,-5.215976,-4.797340,0.521125,9.645370,-6.805414,8.077480,6.049547],[-9.626077,-9.630373,2.759447,-3.833581,7.880860,-8.652254,-1.809125,7.449163,3.340033,5.614852,-1.163002,0.260594,4.209276,-1.782386,-0.114966,-0.519552,9.774948,7.160034,0.234547,7.478202,-9.804712,0.774572,7.675159,2.727169,-2.940171,-2.791218,-3.698027,-4.809625,9.097917,-3.081983,6.256470,-7.123421,7.119025,5.044218,-8.979338,2.264262,0.066606,4.154001,3.846415,8.543632,7.897620,-1.527933,2.963434,3.480213,-0.178254,4.973061,-2.456447,-1.217338,8.581575,-5.882445,5.401881,6.737677,-6.580431,4.159310,9.237266,-5.339713,-3.636692,-9.663592,1.603245,-5.855935,9.003519,6.010463,-2.935680,4.941172,-6.136012,5.084110,0.659701,-9.295469,8.908898,8.630267,-0.455253,1.053539,0.058198,-4.185925,0.486785,-8.266499,-2.360307,-2.162259,6.496876,1.686498,-3.608718,9.535226,4.280105,3.969503,0.149353,0.281575,-9.762669,-4.053691,7.543797,8.623609,-6.332280,8.531302,9.865229,5.777958,-8.527714,-1.586005,9.593989,-0.068544,2.590395,4.347737,8.196757,-3.555692,2.643885,2.323579,-2.655948,1.190743,-7.905059,0.381890,-5.879379,-9.621406,9.553110,0.188669,3.501029,8.440525,-7.264775,8.726990,-0.858207,2.618477,0.673908,-6.816264,0.641695,-9.018895,-3.740675,-5.136653,-6.818331,1.797130,0.910111,-5.780292,9.739786,-1.561318,-5.100949,4.524692,1.250279,-7.233075,1.355690,-2.599224,-5.783427,-4.332525,7.147826,7.842238,5.364314,9.218327,-9.226412,4.873881,-4.129210,2.360850,-0.545318,9.089365,5.726391,-6.463264,-5.097541,-7.016542,0.788563,8.081871,0.438050,-0.218691,-7.083923,5.943224,9.825115,-1.417376,-3.022851,-9.318027,-1.547192,9.172979,2.660978,-4.993677,-6.706968,-8.347304,7.086533,-5.546138,-0.756790,4.684442,2.694645,1.041703,-6.324437,-7.708530,6.387503,5.973657,-7.407632,-0.072618,-4.652421,4.239574,0.093602,-2.199605,6.776594,1.241551,6.292126,-7.166716,8.380543,2.863009,2.329498,9.479125,-3.509487,-2.519826,8.988987,-1.686565],[2.424962,-5.818569,1.216503,9.914996,-2.865065,-0.048489,-3.295894,-8.544347,4.953895,5.193912,8.264718,3.279492,4.655508,-4.006261,-9.810316,-2.374991,-2.387340,-3.017909,4.494869,-5.569838,-1.343859,2.125749,-1.519424,7.130480,7.948561,-8.891811,2.433578,-7.353678,-1.255752,0.097520,2.336396,-8.790672,-1.606077,1.685628,8.985619,8.096630,-5.502523,-2.756614,-5.111501,-4.981068,-2.525806,-5.475563,0.461587,-9.072797,1.779342,-8.865086,5.639472,-9.376038,-4.895369,1.052419,-4.749342,7.323452,2.708463,7.742602,7.121863,9.002150,-7.178977,2.745653,-8.590429,4.306128,7.753083,-3.813297,2.275152,5.019976,-7.478851,9.724713,1.099226,6.636281,-2.457067,0.043375,0.472093,1.699169,-5.259908,3.699069,-1.028446,2.452004,-5.298999,-2.556449,-5.054815,3.415508,-3.858176,1.090061,-6.301720,-3.836956,6.985215,-4.461256,-4.905172,0.408779,7.459132,4.166281,6.856281,6.990242,-0.002269,6.903067,7.172837,6.656332,6.523581,-4.833476,7.199867,-2.770265,-1.725589,6.968575,-1.059120,8.007849,5.000533,3.914697,4.410320,6.567763,-1.790167,7.367933,9.032838,5.769733,0.864892,-2.216598,-9.235530,-7.177048,-4.873726,6.245942,-8.920888,-3.944233,9.949237,-3.937858,-2.985248,-8.000618,2.451384,5.455912,-1.269634,3.178742,-7.193705,1.127575,8.894598,2.792548,4.181915,-0.733305,9.655764,-0.850346,7.381757,-2.957105,-2.070258,-4.134038,-8.049980,-7.202985,2.361197,-7.789037,-5.802081,-1.613269,7.798082,9.153795,9.768690,-2.073361,-4.893636,9.682895,-9.341325,7.853619,5.622143,-5.237397,6.715997,-8.951191,-5.884310,-4.994091,-2.923307,-8.943868,-9.229250,7.400534,-5.815453,1.775778,-8.744154,-9.174177,-6.481129,3.767647,6.438820,2.325215,-2.917969,5.445467,-9.197453,9.304627,2.625513,7.814230,5.945534,9.392190,-2.066367,-4.084370,4.464573,4.851098,9.109445,4.359153,-7.591808,4.991935,1.363130,-9.415882,4.158491,-4.052920,3.632101,-8.590197,-9.527589,-4.731880],[-6.387110,2.638600,7.163897,6.640158,8.618265,-6.322375,4.576591,6.814627,-7.579304,8.836346,6.745354,-3.518867,0.478052,-0.375143,-6.642458,-1.099947,4.302110,0.786596,1.119086,8.889521,6.581474,-1.260500,-9.419820,4.498947,8.876116,-4.967568,1.179182,-6.357396,2.250529,-0.955327,7.554572,5.850053,2.322559,-7.413057,2.479896,8.599323,6.871235,-5.639181,9.662877,-5.243414,-1.594379,-0.211041,-1.592830,-5.172256,4.052082,6.883757,0.436541,0.869469,1.946951,8.140845,-8.687969,-3.386188,8.878282,7.817511,-7.425654,1.834665,-0.301548,-9.981696,-9.902532,-5.242275,-9.052863,2.290359,-6.793783,-8.434985,-4.219255,4.446227,-1.093680,-2.866090,-1.624679,7.162018,7.720144,8.123076,-0.059510,-9.824575,-2.562171,-1.352090,6.212362,-3.154406,-2.880843,7.440218,9.440371,8.631906,-4.786771,3.906662,7.131111,-2.693331,0.912411,-9.734708,2.974663,8.726601,-5.251544,-0.836305,6.195813,2.483549,0.838108,-0.587869,0.181945,8.773828,6.002802,-3.823917,0.924257,0.889177,-1.520822,-0.519649,5.233667,6.427811,8.774447,3.901935,1.553492,-7.014304,4.665958,7.538038,8.549276,3.356130,6.107116,6.269352,-1.754541,1.123042,0.237447,-4.357097,8.675625,-7.536802,-5.497729,0.679806,-6.832704,-3.344436,-6.451937,2.996594,-5.307868,-8.501256,-8.771748,-7.256964,7.272263,-0.460640,7.793379,3.941893,-5.786719,9.029376,2.063125,-5.688326,4.001795,3.942742,-9.099086,5.491625,3.404161,-3.004792,6.683086,-0.306696,8.401160,2.338931,-1.289797,5.909822,-7.462491,2.194813,-0.929557,-4.748082,-8.676151,9.188655,-7.269448,-4.227222,7.144066,7.227342,2.842020,7.094430,-5.538852,-0.814777,5.937388,-5.208993,-0.426876,7.010995,6.965893,-8.150684,6.597157,5.751386,-4.536607,-9.064987,-5.776895,5.294202,0.231112,-8.314314,7.811462,-1.119732,0.873166,2.244588,-8.025624,-1.643538,-4.292137,-9.424745,-5.644575,4.141188,8.982439,-7.502178,9.366815,4.170909,-3.388570,2.281999]], dtype = "float64")#candidate|12028|(4, 196)|const|float64
call_12027 = relay.TupleGetItem(func_8609_call(relay.reshape(const_12028.astype('float64'), [784,])), 2)
call_12029 = relay.TupleGetItem(func_8611_call(relay.reshape(const_12028.astype('float64'), [784,])), 2)
const_12038 = relay.const([-8.936735,-5.593523,3.971751,-8.704449,6.681464,8.977357,-1.902857,0.638393,-5.148773,5.611423,-7.430717,2.086470,-9.842950,0.865257,-3.173110,7.206302,-4.701584,-4.490828,-5.392300,2.939879,3.918857,7.554884,1.228798,5.382090,5.942658,8.632917,-4.304162,-3.594997,-9.543156,-2.610349,-9.172218,-3.442518,6.530708,-7.616202,0.983853,2.736396,-2.072141,-1.995883,-7.403215,-4.177515,-2.975499,1.946827,-5.695708,6.227278,-6.775046,1.535665,8.106757,8.979111,-7.641221,-7.066957,8.664009,0.785161,6.400161,5.860928,6.315000,0.937131,8.959988,-3.929793,-5.233584,7.663231,-6.670695,9.540424,-8.611427,-7.953012,4.136325,-0.145103,3.193359,-1.232894,0.190131,-2.764447,1.591990,-1.743712,-0.985067,-7.680485,-7.873306,0.388920,-6.192537,9.396880,3.169023,-4.182905,-5.515790,5.654221,-1.192458,-7.069826,-5.922680,-1.862255,2.175063,-6.987557,2.110159,-5.892830,-1.802821,-3.185985,8.649555,9.839654,-2.596275,2.239243,-8.822644,-6.105305,-1.055470,-5.205555,9.966122,5.491802,4.353571,-9.652126,-1.442428,6.509689,1.217362,-3.706571,6.386103,1.482583,1.524717,-7.205825,-0.712891,-8.906856,-1.972340,8.864433,6.611525,-0.491310,-9.797336,5.072012,3.062208,-8.672338,3.537642,4.503280,-6.358062,-7.437308,7.755635,-3.778863,2.675178,5.348509,8.169176,2.945939,1.417849,-1.146375,-6.433902,-4.835869,-7.467881,-2.234395,3.629638,-3.317519,8.909673,6.479118,4.233002,-1.558684,-9.865241,-2.004074,-9.580740,-9.226833,3.381288,8.191609,5.983884,-9.707034,-9.162226,9.540472,-6.859299,-9.989709,-9.178488,9.995855,5.836485,-3.600582,8.165355,5.201502,-5.431903,9.924009,-1.274418,2.346926,-9.084668,3.993870,6.065188,5.929420,-8.130759,4.030969,3.355921,9.300617,-6.564066,5.810257,-1.099909,4.721137,-2.512468,9.151825,6.927936,-2.128311,-2.281723,4.483425,-4.946673,4.568031,-6.029989,0.382819,3.795808,-4.120148,-7.452771,4.583176,-8.203889,0.570619,4.143593,-8.628229,-8.186888,1.866496,-4.211447,-3.275738,9.979653,-8.259359,-9.120553,5.598699,-7.414803,2.678997,9.195773,2.299006,6.567153,5.501125,5.425771,4.787957,-2.047803,-0.677246,0.171692,-1.844349,2.114711,-6.069034,-7.552642,4.091306,0.556633,-8.506287,-8.668559,5.740464,-2.485838,-9.951562,-6.025958,6.434993,-2.937812,2.183993,-3.868717,-5.831640,-0.327668,1.325155,2.929946,2.431724,5.557699,1.660757,-7.791678,9.347246,3.968581,-5.138177,-7.572806,2.664435,-8.845117,-4.820782,-9.651825,-8.416449,-4.545163,9.902365,-8.287174,-5.101235,-4.171029,6.699591,-7.515420,-1.448039,5.846562,9.556999,-3.930992,-1.237540,-8.089643,-8.942048,-6.235499,4.396878,-1.162703,-0.915905,-7.346085,2.878831,-0.137175,4.966013,6.197426,7.522101,-3.515038,-1.075325,7.046582,8.271439,-2.900075,-2.732609,-4.189247,7.863769,-9.952970,-8.846947,-1.207516,-1.117924,-9.592396,-8.752874,4.850408,-3.524553,-6.501713,-4.009688,-0.693411,6.032658,3.964993,6.481403,-8.112479,2.406936,-8.196439,8.216494,0.077008,7.006577,3.792107,7.242736,8.096134,-7.179378,1.636706,8.473633,7.074770,-4.469362,-3.450960,-9.240230,-7.012679,-5.698087,6.597546,2.037516,9.085106,3.344460,-5.210050,5.911101,-2.448290,-3.507113,-6.261754,4.599630,-3.582315,2.897821,0.046284,9.840958,9.148466,-3.175909,9.157481,4.788895,8.631552,8.538928,4.683532,2.095509,0.752255,8.842746,-4.827512,8.580065,-1.918753,0.930115,-2.442424,3.617694,-3.213844,3.825420,-5.301803,-0.196306,3.869417,0.615779,-0.009031,-2.960445,-6.943066,-7.658204,9.124744,-6.495155,-8.002372,5.031379,-1.138858,-4.523396,8.609165,7.647039,-7.294227,8.559561,7.392978,-4.643220,6.587405,0.620468,9.334679,-0.185374,2.308673,-9.783001,1.726392,4.647614,6.781675,-2.552576,9.105682,-5.518778,-1.546207,8.817183,-3.266824,8.433387,-4.260307,-2.796857,-6.525697,-3.090497,0.968623,8.862701,2.066954,-8.858740,-6.643360,3.330809,-1.303066,1.438366,4.083678,7.226810,4.577400,2.441649,0.205159,5.871490,0.158923,-3.847121,-7.676826,3.210554,-2.820544,-5.982222,-1.567390,-1.970159,1.001324,5.410001,-3.472222,4.904296,-6.560846,9.761572,-0.752288,8.672421,9.619496,-6.152080,-8.904291,0.760472,7.815754,3.724532,8.458480,5.881726,-0.141478,9.312244,1.146221,-0.499509,6.645893,9.276752,-6.242427,4.751779,-0.125743,2.791672,2.436781,1.260413,2.290646,9.713602,-7.469765,9.137378,1.385182,1.827864,6.001262,-6.592647,-2.861707,-0.343618,3.352277,-6.770222,8.776714,-1.090502,-7.207877,-8.592413,-8.168829,-8.568874,-4.427462,0.768880,-8.544925,-1.780598,-1.527101,-0.343458,-1.616967,0.041603,0.138540,-2.022841,-1.148460,3.410072,-3.405426,-3.915696,5.731923,-1.421553,-8.390651,-6.832432,-9.835323,1.348082,6.444536,5.812314,-9.707154,2.716875,-5.986295,3.579742,-0.911852,1.194811,-1.178175,-5.649451,-3.168329,2.139678,-6.926881,8.626517,-8.547652,-2.443261,2.733650,2.691975,-8.455891,8.226730,-7.566464,6.387571,1.013418,-9.192095,-9.127099,-2.496619,9.954628,-0.783682,2.530858,-2.955809,-5.771384,1.064885,4.227235,3.463925,-7.241690,-4.613644,2.308939,9.294326,7.574971,-0.664968,-5.320768,-5.071539,-5.059091,-0.383922,9.641346,7.868841,5.062620,3.676685,-2.453631,-3.229857,8.934444,6.103416,5.967061,3.436127,-0.442764,-5.716445,-7.999773,-6.849474,8.333500,-3.846859,-6.810556,-1.870015,8.927729,-2.486223,8.980852,-6.722597,5.958699,3.369983,-6.153439,3.260901,6.598305,-5.403357,4.713499,-3.710112,8.168548,6.464967,8.502312,8.874064,3.096304,-1.540176,-1.840301,4.896877,-7.529214,-8.101684,9.600274,-4.929375,-2.594068,6.545432,6.608545,-1.800320,-8.414827,-8.756163,-4.711888,-8.396551,9.610945,-1.327442,9.060767,-0.954827,-8.056365,2.569824,-8.192828,-3.992764,-3.339628,-8.071159,-0.254387,-7.029824,-8.274221,-7.332963,-8.979082,-7.220874,7.611123,8.248601,-7.753156,-0.053343,2.755896,1.522914,4.773331,-5.851453,7.815551,-1.203417,6.516885,-7.497177,9.763748,-0.817788,-2.561111,-5.231089,7.113109,-7.200548,2.378860,0.916786,-3.198927,-1.083150,-7.421827,8.795767,-0.258043,9.122804,-4.230345,6.252891,-1.120193,6.148458,1.393047,-5.278666,-8.428159,-5.404845,-9.366886,-1.883690,-0.855344,-0.523160,1.841508,-2.506136,4.357607,7.195037,-5.016126,-0.627733,1.661616,9.905942,3.804620,8.009208,-7.404860,2.062778,4.044564,-2.797210,-2.584452,5.465055,-3.937249,6.175468,7.943709,-2.348745,-3.608692,9.400560,-0.946709,-0.530565,-7.412951,8.520263,4.159719,6.614013,-8.946835,4.416572,0.395436,-7.488051,-4.110957,7.140190,7.923228,3.438934,-8.397081,4.319712,8.502471,-5.861265,9.044256,6.049401,-2.182838,-3.492761,-9.570995,-0.216311,-6.306923,9.219749,-9.331715,-5.719284,-8.493198,2.033144,-4.401206,-8.770366,-7.429674,-9.124419,-3.366027,2.574582,-3.256418,-6.441700,3.887157,-5.319053,6.124094,-3.770071,1.608370,0.297259,6.141712,-8.709541,5.540431,9.166945,-4.665507,-0.014547,8.113124,5.235089,1.555120,-4.266270,-2.642704,-5.474327,3.493540,-9.189354,7.345738,-2.616748,-1.182332,7.996416,9.794803,-5.794445,-3.239927,0.876742,-2.592008,4.906591,-3.888010,-3.525151,8.767795,-9.508190,0.598733,1.694340,9.132012,6.043815,-5.935499,2.625747,-8.616277,7.343510,-9.185052,-8.550228,-6.850919,-1.614086,-4.724663,4.592741,6.619034,-4.386624,-5.733081,-7.148561,6.430299,-9.938055,-0.287772,-9.810914,4.960699,5.317992,-0.209505,-6.376047,5.060122,4.000772,7.300062,4.094262,-9.940492,6.487945,0.319284,-1.548303,-5.420273,5.491297,1.782027,3.965310,3.539543,-5.915365,-7.338392,-4.717121,-9.635607,5.935294,3.689658,-8.006925,-8.968636,-7.242753,9.003056,3.986691,7.574931,-8.536770,-2.483100,8.714592,-7.173018,0.088581,-0.413683,1.931176,9.996924,-6.579853,6.722734,-0.242235,8.348617,-8.640270,-0.611319,-6.691407,-6.436775,-8.610816,-2.343937,-3.857350], dtype = "float64")#candidate|12038|(784,)|const|float64
bop_12039 = relay.equal(call_12027.astype('bool'), relay.reshape(const_12038.astype('bool'), relay.shape_of(call_12027))) # shape=(784,)
bop_12042 = relay.equal(call_12029.astype('bool'), relay.reshape(const_12038.astype('bool'), relay.shape_of(call_12029))) # shape=(784,)
bop_12059 = relay.less(const_12028.astype('bool'), relay.reshape(const_12038.astype('bool'), relay.shape_of(const_12028))) # shape=(4, 196)
func_4953_call = mod.get_global_var('func_4953')
func_4956_call = mutated_mod.get_global_var('func_4956')
const_12066 = relay.const([-7.042065,-8.725034,5.062556,1.043297,-9.800488,-8.883974,5.149358,-3.619133,0.840391,-9.699182,-1.208658,7.280277,8.213475,-5.448778,2.281767,-9.588384,1.202662,-9.256077,3.264759,2.783244,-4.524920,8.785342,-9.017542,-9.077280,-2.992324,-2.930426,1.380946,8.875935,2.859347,-9.565030,0.864643,-8.115124,5.484823,2.535878,-1.934743,9.899742,-9.110118,7.247484,-6.728075,-0.250406,-0.181626,5.988574,-8.248677,0.718695,-6.458975,9.337259,-2.651569,-4.510823,-4.373907,-1.689757,4.018593,6.753959,-0.102073,-4.050220,-0.201187,5.958986,7.338223,3.432988,1.256456,7.377560,-5.818652,0.114399,-5.940522,-1.029374,-2.518908,-0.580069,-6.461666,3.566162,-9.599575,-7.653303,8.259846,4.641564,-5.971405,-7.773177,5.984215,-3.399570,-3.819347,-5.306466,7.017468,2.791555,8.941238,4.104381,1.018771,-0.246764,0.855062,7.359052,9.425598,5.991108,8.480577,9.693850,-7.401496,-5.320682,-3.432810,6.975877,6.478250,6.903508,-7.611151,7.388069,6.608859,8.601767,-6.604323,9.981215,-0.686211,8.106172,9.084563,-9.812207,-9.823525,-9.685482,-5.198073,8.222127,7.780172,-5.343682,2.585753,3.744523,-6.451972,0.908120,7.558655,-1.739975,-0.591816,6.703520,-9.385735,7.012146,-2.830622,5.114994,3.423843,2.849576,2.580592,1.587130,2.970048,-6.107034,0.247382,-7.692321,-3.888378,-6.628654,-7.750346,-7.443815,-7.072808,-5.152455,-5.424311,7.444632,-1.990118,-5.763008,-7.109238,-5.505342,-3.519402,9.811656,1.176917,0.484790,-9.437602,-7.971838,3.192870,-2.463032,-7.579387,8.966029,-4.076822,-4.847145,8.945108,0.067236,-4.626044,0.933766,-5.365688,1.760453,-4.796742,4.267208,-4.462564,5.218588,6.082944,3.147100,-6.157049,-4.789573,4.532463,1.093887,5.582749,7.697153,5.937707,-9.288778,0.280852,5.951797,-1.052614,7.534573,-8.333900,4.221363,-6.201597,7.159260,3.786875,1.308124,-6.656840,5.738517,9.702211,-3.623266,5.742326,-2.907262,-6.334123,-0.168155,6.271714,4.654458,-9.670348,0.468341,-3.981050,-3.144793,-1.677906,-7.991279,-7.200912,-5.196956,-5.270066,-4.906361,8.558282,2.245587,-8.521016,1.672433,8.801703,5.390315,7.349222,-6.811892,8.189120,6.363490,-8.879766,0.780026,6.436535,3.473903,-6.170560,6.124525,-1.234796,0.235140,-0.532482,-3.833786,4.158363,7.667742,-0.839070,-9.019857,-1.721638,5.976482,-2.538170,-9.274476,-8.308038,5.477686,0.425661,4.763229,8.548815,4.099379,4.265670,5.314401,0.563046,7.821258,-0.720529,-8.757186,4.278341,-5.664795,-8.903497,0.730966,-9.390473,3.378440,3.187720,8.455926,9.285697,-4.038094,2.523751,0.521688,-6.509867,-0.964089,6.286367,-2.280792,4.263033,-4.219046,0.542975,-6.840402,-6.005259,2.514014,-4.146628,9.758593,8.568183,-6.359817,2.472444,-3.668827,-6.258244,2.554734,2.782001,-6.896031,-6.072795,-9.455604,-4.742540,2.153399,-5.158457,-9.691569,7.429479,-9.228152,3.729582,2.574972,-3.895125,4.594132,4.253300,-5.285324,-5.523835,4.085761,8.013644,-9.370967,-9.872510,9.127128,-3.426091,-1.438195,3.267200,7.841748,0.279197,4.409882,-9.311602,2.595164,4.798165,-0.469199,-5.215758,-7.421883,8.147401,-7.318325,-5.335899,-7.950815,5.905077,6.587524,1.503723,-0.717305,3.265804,-0.924820,-9.536683,6.123909,-4.303868,3.500554,3.283478,-1.933311,-2.779210,7.758897,-0.110870,8.609266,-6.925950,-8.191432,4.658071,-0.411681,5.737732,-1.719814,-6.037005,3.556872,8.691021,-3.239341,0.450718,5.466341,9.226464,-7.531589,-9.589832,0.133078,-4.094333,-5.615566,-6.390925,1.463262,-0.961569,5.692999,7.461062,6.549077,8.418708,-7.507064,-4.758518,-9.208937,-2.923688,-6.058337,7.872859,2.756121,7.460468,6.862651,-5.677899,1.788923,1.128045,-1.278696,-6.934051,3.067473,0.605879,-6.860975,-6.146195,9.826434,6.236405,9.560090,2.615453,8.448431,5.446506,3.734104,9.293112,-3.268405,9.371914,5.864081,-0.067714,-4.447158,-5.593175,4.949316,7.182527,1.268032,-8.867496,0.927444,3.458719,1.574482,-7.553193,6.427421,0.215928,-7.230908,-4.706546,-8.826173,-5.976321,-7.308584,0.280945,9.806385,-3.676858,-8.385212,-2.379987,-8.979608,-9.697352,-9.382337,-1.624223,-9.152566,2.026415,7.467437,-9.949049,-1.089714,-1.792534,-9.631457,-7.070988,-7.239309], dtype = "float64")#candidate|12066|(420,)|const|float64
call_12065 = relay.TupleGetItem(func_4953_call(relay.reshape(const_12066.astype('float64'), [420,])), 3)
call_12067 = relay.TupleGetItem(func_4956_call(relay.reshape(const_12066.astype('float64'), [420,])), 3)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_12068 = func_4993_call()
call_12069 = func_4993_call()
func_10281_call = mod.get_global_var('func_10281')
func_10282_call = mutated_mod.get_global_var('func_10282')
call_12079 = relay.TupleGetItem(func_10281_call(), 0)
call_12080 = relay.TupleGetItem(func_10282_call(), 0)
output = relay.Tuple([call_12014,call_12023,bop_12039,bop_12059,call_12065,const_12066,call_12068,call_12079,])
output2 = relay.Tuple([call_12015,call_12024,bop_12042,bop_12059,call_12067,const_12066,call_12069,call_12080,])
func_12093 = relay.Function([], output)
mod['func_12093'] = func_12093
mod = relay.transform.InferType()(mod)
output = func_12093()
func_12094 = relay.Function([], output)
mutated_mod['func_12094'] = func_12094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11951_call = mod.get_global_var('func_11951')
func_11952_call = mutated_mod.get_global_var('func_11952')
call_12210 = func_11951_call()
call_12211 = func_11951_call()
var_12212 = relay.var("var_12212", dtype = "float64", shape = (13, 12, 2))#candidate|12212|(13, 12, 2)|var|float64
bop_12213 = relay.bitwise_and(call_12210.astype('int32'), relay.reshape(var_12212.astype('int32'), relay.shape_of(call_12210))) # shape=(13, 12, 2)
bop_12216 = relay.bitwise_and(call_12211.astype('int32'), relay.reshape(var_12212.astype('int32'), relay.shape_of(call_12211))) # shape=(13, 12, 2)
func_4872_call = mod.get_global_var('func_4872')
func_4875_call = mutated_mod.get_global_var('func_4875')
var_12218 = relay.var("var_12218", dtype = "float32", shape = (675,))#candidate|12218|(675,)|var|float32
call_12217 = relay.TupleGetItem(func_4872_call(relay.reshape(var_12218.astype('float32'), [75, 9])), 2)
call_12219 = relay.TupleGetItem(func_4875_call(relay.reshape(var_12218.astype('float32'), [75, 9])), 2)
bop_12231 = relay.floor_mod(call_12217.astype('float32'), relay.reshape(var_12218.astype('float32'), relay.shape_of(call_12217))) # shape=(75, 9)
bop_12234 = relay.floor_mod(call_12219.astype('float32'), relay.reshape(var_12218.astype('float32'), relay.shape_of(call_12219))) # shape=(75, 9)
func_9671_call = mod.get_global_var('func_9671')
func_9674_call = mutated_mod.get_global_var('func_9674')
const_12236 = relay.const([5.900685,9.353822,2.441467,-1.120500,-2.092137,1.362400,-1.040004,5.932854,7.310229,-1.717318,-0.395991,-9.548540,-5.651010,3.749564,-1.183702,-1.263970,9.012367,1.903096,-7.865606,0.908101,-2.605630,-9.564668,8.111623,-5.957248,8.913283,-6.214425,-7.238143,-9.805153,7.861687,-6.975009,-9.085324,-2.511262,-1.628098,5.384779,1.830987,-8.684659,7.775209,-5.174827,-5.836393,-1.398514,3.895157,-9.758081,0.465043,4.056896,-6.984193,-8.031055,-0.261626,6.220414,-1.903084,-7.992577,6.966803,-2.839379,8.664941,1.972639,0.935052,2.310592,-1.498245,-4.277967,-6.460417,7.013104,8.454498,-3.408368,-8.540250,1.403701,-5.475934,-6.790898,-9.892016,-4.543384,5.105986,9.075321,8.917057,-4.008980,-0.391826,5.957056,-3.145741,-7.477976,3.029973,2.317655,-0.504251,-0.143509,-3.360912,-1.224062,1.866814,-1.430266,-8.714511,-8.127135,3.892995,-3.040654,5.191011,-3.965813,-3.912867,-9.781121,0.338484,4.644063,-2.254843,-5.143403,-5.415941,1.966029,-9.064205,-8.485863,8.920676,-4.053751,7.025454,3.660582,4.835254,-1.169673,-0.707470,1.844160,1.263456,6.782301,-8.911177,-6.522153,-1.061160,4.293980,-6.872333,8.149043,-7.167337,-8.133861,-1.694374,-5.407907,6.710635,0.880264,2.717078,-8.317563,2.632100,-9.104324,2.995237,-3.365848,-3.647900,-3.124300,-2.839308,4.394776,-4.641419,-8.778937,5.333643,-5.492205,-8.767900,-7.778894,-3.303442,-1.481608,-2.226858,2.441472,0.192395,9.541304,0.202043,-7.175570,3.658806,-8.951391,9.436676,5.434776,-8.957673,-0.907401,2.917397,-4.123944,0.096355,-6.181182,-8.018761,1.528517,7.742256,8.623968,9.914290,-2.459394,7.283970,-3.717639,-3.088239,2.058819,4.539811,2.456232,-6.058793,-7.826528,-4.885207,8.141492,-7.114660,-3.065942,7.997931,9.385579,-3.826514,-0.971439,-5.006953,-0.522398,-0.916743,9.032233,4.385500,-3.880831,7.946610,8.810786,0.005711,-7.384990,-0.090811,-9.069394,-0.715426,-6.019813,8.236288,2.917365,2.810744,-0.688257,9.672450,7.150466,-1.030010,4.554621,-5.191413,9.269035,9.542849,7.391447,9.964409,-4.334198,2.409902,-3.153802,9.266585,2.558554,7.447350,-0.848398,3.661003,-8.224106,1.949925,4.234914,-1.210851,-0.989777,-7.329711,9.105197,3.617946,-6.514861,-8.091247,9.910570,-7.034511,-8.812032,9.669502,-4.644992,-6.181176,-7.887367,-9.000672,2.649699,1.213833,9.393509,-1.117864,3.829748,-9.787502,-2.018047,-8.233035,-0.219882,-3.987594,-3.314208,9.913959,7.103015,8.184401,4.134348,5.491115,6.372671,-5.981987,9.813359,3.269237,-7.487036,-9.922008,2.096214,5.346589,8.345693,-6.433640,9.530251,-5.341071,-9.413218,-6.923408,-2.207759,-9.326572,-7.525987,-2.750532,7.881755,-8.316440,9.145749,4.216502,7.436128,-5.757663,-8.298245,7.045205,-8.296007,-3.487356,9.915294,-0.262337,9.931850,2.288271,-6.989334,9.284689,-9.143882,3.313302,-5.780485,-9.111981,3.193623,-3.190109,7.749770,0.074165,2.834215,-3.084695,9.128007,-4.307463,-9.882254,-9.064165,9.557284,-8.545969,-4.186744,9.789139,-5.423755,-0.583934,-9.629891,-9.394585,-7.690462,4.046682,1.906436,1.713528,8.643424,6.445257,8.972142,-6.048100,6.597075,-1.076711,-1.258331,-3.531686,0.066602,2.539240,5.668116,-0.301720,4.486725,-2.772084,7.758792,5.424395,2.359447,-2.615519,4.726220,-9.462103,-2.934219,-8.601817,-3.511567,9.412804,0.014769,-9.986131,-0.293892,0.140024,-1.499572,5.105685,8.467871,-0.245610,2.220902,1.014811,2.290479,-3.765475,6.174497,6.524087,4.638826,0.778428,9.650136,-5.368805,-9.190126,0.776288,2.225395,3.705108,-1.051965,4.273366,-3.473069,-1.371688,-3.296036,1.560754,7.429623,-0.595257,-3.278349,9.788742,5.361715,6.181117,4.488220,-3.750918,2.281257,5.083179,-0.204679,-2.953238,-9.636175,-9.457557,4.169052,-0.630360,-2.519126,3.110840,-3.112011,-9.357251,-1.648398,-7.377770,2.244115,-6.509744,-5.053599,-4.913555,4.798455,4.970796,5.322502,-8.418420,-6.047209,5.741302,4.193024,6.674119,1.981610,7.376168,6.700032,-2.723042,6.546316,-8.907462,-3.678961,-9.706816,0.555837,2.675280,3.022254,1.043315,-6.008632,6.019550,3.304375,-8.564940,-1.753020,4.131969,9.161935,-8.858653,-6.987830,-9.130015,3.404288,-8.928279,-7.681185,7.246276,-7.646547,4.939897,7.365369,-1.953869,7.652076,-2.131337,0.343091,-6.066787,7.685729,9.883900,8.161656,-2.756458,-2.441630,0.109624,2.367012,-1.895125,9.222951,-8.274953,-2.562690,9.246048,6.108875,-5.164752,1.456989,8.177346,0.234125,4.974967,-5.862972,-3.461423,-2.645979,-0.287998,-0.841899], dtype = "float64")#candidate|12236|(450,)|const|float64
call_12235 = relay.TupleGetItem(func_9671_call(relay.reshape(const_12236.astype('float64'), [15, 5, 6])), 0)
call_12237 = relay.TupleGetItem(func_9674_call(relay.reshape(const_12236.astype('float64'), [15, 5, 6])), 0)
uop_12240 = relay.tan(call_12217.astype('float32')) # shape=(75, 9)
uop_12242 = relay.tan(call_12219.astype('float32')) # shape=(75, 9)
func_5268_call = mod.get_global_var('func_5268')
func_5270_call = mutated_mod.get_global_var('func_5270')
call_12248 = relay.TupleGetItem(func_5268_call(), 0)
call_12249 = relay.TupleGetItem(func_5270_call(), 0)
uop_12252 = relay.acosh(uop_12240.astype('float64')) # shape=(75, 9)
uop_12254 = relay.acosh(uop_12242.astype('float64')) # shape=(75, 9)
uop_12259 = relay.atanh(var_12218.astype('float32')) # shape=(675,)
func_1723_call = mod.get_global_var('func_1723')
func_1725_call = mutated_mod.get_global_var('func_1725')
const_12268 = relay.const([[7.703168,-5.565571],[8.788947,8.068789],[0.641911,-8.289758],[9.751766,4.723920],[-5.813690,8.684855],[-7.501430,-9.562938],[3.861817,1.582808],[9.009889,9.002315],[6.873511,-0.838127],[2.756631,3.538695],[7.434536,-2.950991],[-9.622475,0.907912],[6.619049,4.467217],[7.809377,7.171376],[-8.127337,9.948366],[3.511785,-6.051754]], dtype = "float64")#candidate|12268|(16, 2)|const|float64
call_12267 = func_1723_call(relay.reshape(const_12268.astype('float64'), [2, 16, 1]))
call_12269 = func_1723_call(relay.reshape(const_12268.astype('float64'), [2, 16, 1]))
output = relay.Tuple([bop_12213,bop_12231,call_12235,const_12236,call_12248,uop_12252,uop_12259,call_12267,const_12268,])
output2 = relay.Tuple([bop_12216,bop_12234,call_12237,const_12236,call_12249,uop_12254,uop_12259,call_12269,const_12268,])
func_12270 = relay.Function([var_12212,var_12218,], output)
mod['func_12270'] = func_12270
mod = relay.transform.InferType()(mod)
mutated_mod['func_12270'] = func_12270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12270_call = mutated_mod.get_global_var('func_12270')
var_12272 = relay.var("var_12272", dtype = "float64", shape = (13, 12, 2))#candidate|12272|(13, 12, 2)|var|float64
var_12273 = relay.var("var_12273", dtype = "float32", shape = (675,))#candidate|12273|(675,)|var|float32
call_12271 = func_12270_call(var_12272,var_12273,)
output = call_12271
func_12274 = relay.Function([var_12272,var_12273,], output)
mutated_mod['func_12274'] = func_12274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7010_call = mod.get_global_var('func_7010')
func_7012_call = mutated_mod.get_global_var('func_7012')
call_12295 = relay.TupleGetItem(func_7010_call(), 0)
call_12296 = relay.TupleGetItem(func_7012_call(), 0)
func_8677_call = mod.get_global_var('func_8677')
func_8679_call = mutated_mod.get_global_var('func_8679')
const_12303 = relay.const([2.751006,-0.245645,9.986839,3.097862,3.045094,-6.147171,6.523460,-7.952655,-4.968357,8.055774,4.950677,6.261907,-1.384413,-2.990692,-7.778698,4.282289,-7.473908,5.067846,9.919351,-2.765412,-3.885889,-6.255595,-2.421686,8.227330,-9.267124,-8.372241,-0.499396,-8.077387,-0.078301,-4.937408,3.116226,-2.625041], dtype = "float64")#candidate|12303|(32,)|const|float64
call_12302 = relay.TupleGetItem(func_8677_call(relay.reshape(const_12303.astype('float64'), [1, 32])), 0)
call_12304 = relay.TupleGetItem(func_8679_call(relay.reshape(const_12303.astype('float64'), [1, 32])), 0)
output = relay.Tuple([call_12295,call_12302,const_12303,])
output2 = relay.Tuple([call_12296,call_12304,const_12303,])
func_12315 = relay.Function([], output)
mod['func_12315'] = func_12315
mod = relay.transform.InferType()(mod)
mutated_mod['func_12315'] = func_12315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12315_call = mutated_mod.get_global_var('func_12315')
call_12316 = func_12315_call()
output = call_12316
func_12317 = relay.Function([], output)
mutated_mod['func_12317'] = func_12317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10799_call = mod.get_global_var('func_10799')
func_10800_call = mutated_mod.get_global_var('func_10800')
call_12357 = func_10799_call()
call_12358 = func_10799_call()
output = call_12357
output2 = call_12358
func_12361 = relay.Function([], output)
mod['func_12361'] = func_12361
mod = relay.transform.InferType()(mod)
output = func_12361()
func_12362 = relay.Function([], output)
mutated_mod['func_12362'] = func_12362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10324_call = mod.get_global_var('func_10324')
func_10325_call = mutated_mod.get_global_var('func_10325')
call_12374 = relay.TupleGetItem(func_10324_call(), 1)
call_12375 = relay.TupleGetItem(func_10325_call(), 1)
output = relay.Tuple([call_12374,])
output2 = relay.Tuple([call_12375,])
func_12400 = relay.Function([], output)
mod['func_12400'] = func_12400
mod = relay.transform.InferType()(mod)
output = func_12400()
func_12401 = relay.Function([], output)
mutated_mod['func_12401'] = func_12401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10324_call = mod.get_global_var('func_10324')
func_10325_call = mutated_mod.get_global_var('func_10325')
call_12409 = relay.TupleGetItem(func_10324_call(), 0)
call_12410 = relay.TupleGetItem(func_10325_call(), 0)
output = call_12409
output2 = call_12410
func_12417 = relay.Function([], output)
mod['func_12417'] = func_12417
mod = relay.transform.InferType()(mod)
mutated_mod['func_12417'] = func_12417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12417_call = mutated_mod.get_global_var('func_12417')
call_12418 = func_12417_call()
output = call_12418
func_12419 = relay.Function([], output)
mutated_mod['func_12419'] = func_12419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9087_call = mod.get_global_var('func_9087')
func_9089_call = mutated_mod.get_global_var('func_9089')
call_12454 = relay.TupleGetItem(func_9087_call(), 0)
call_12455 = relay.TupleGetItem(func_9089_call(), 0)
func_3030_call = mod.get_global_var('func_3030')
func_3033_call = mutated_mod.get_global_var('func_3033')
const_12467 = relay.const([-8.037755,3.602107,0.536546,-9.190727,4.852712,3.392286,-6.249137,6.011048,-4.329383,-2.795613,-6.945143,1.613757,1.378748,2.238244,-0.669730,-1.095668,8.178969,9.956073,-8.665435,-5.429726,9.684532,-7.553686,-9.055166,6.647721,6.250226,5.563516,9.195241,3.215138,9.309237,-3.394393,7.472116,-1.117599,-3.978211,7.363077,9.006519,5.469362,9.090516,-2.902414,8.035417,-7.463183,2.209041,-0.063931,-3.074113,-5.530375,0.424114,0.855818,7.926334,4.047440,7.645906,-0.449719,-6.235255,3.734845,4.444839,-5.482957,-4.019111,7.704968,-8.374054,-3.795735,-9.728132,-1.797118,9.046678,-2.372883,0.335035,9.034163,-4.561668,9.439522,0.183487,-0.745920,5.677816,6.555811,4.197249,3.880794,-5.156647,-1.331240,-8.567132,-5.312578,-0.280584,3.540925,-9.218064,9.056226,-4.908489,-4.953687,3.147470,1.203032,0.548159,-5.530813,4.354668,-7.783391,-4.543583,-5.129324,-4.842251,-2.820804,1.768332,-5.304340,-8.693783,-0.488916,7.773392,-3.003975,2.135566,6.391427,-7.593095,7.868712,1.909177,-0.397939,-6.018060,7.676794,8.080627,-7.476039,0.468404,6.208179,-4.598917,-6.111809,-3.252068,-5.689105,-7.291319,-9.739841,-5.405359,3.021607,5.302772,2.374511,-5.086178,-3.419001,-0.573568,7.463299,-1.360003,-4.324382,-7.322983,-3.582398,9.850205,0.687026,-2.927926,2.162590,6.038821,-1.375005,-9.338942,2.347669,-5.812171,-7.937977,-8.173154,-6.567688,-6.867126,4.544864,-8.367665,0.825127,-8.996915,9.833286,-8.915107,7.319739,6.669506,5.704216,8.035084,0.584804,-0.188830,7.118544,7.025542,0.485187,-8.527672,-8.518506,-9.191312,-2.329717,-8.707032,1.615852,-4.164315,7.472832,9.266047,9.602597,5.790425,-7.680515,0.700996,-0.449243,-7.882530,-1.642845,-5.929733,9.076448,0.702821,6.851044,8.633985,-4.877435,-3.757793,-8.787243,-5.419963,-9.970667,-0.375901,-1.457236,-6.777319,-7.470311,-2.425756,7.020364,8.804718,-3.131716,2.396280,5.071803,-0.163251,-7.821136,4.438669,-1.154753,0.914893,6.294593,-2.468449,0.631391,-6.011246,9.457230,-1.886531,7.702709,3.637780,-2.408035,9.596316,6.086820,-6.960542,-6.662355,-5.023320,5.690785,-4.967267,4.922228,-4.685242,3.492880,-5.566906,-8.496970,-1.494818,2.224787,9.002905,-4.364990,7.621979,-6.850446,9.629274,2.891530,-7.174270,2.934287,9.575642,0.507346,9.107928,-8.009576,7.650062,4.937464,-2.282353,6.474921,-5.161257,-5.647293,0.733161,8.900911,-6.756720,5.615558,-5.301540,2.612347,4.447126,4.905691,0.076972,4.626498,-1.918450,-6.267616,6.341103,-3.110285,1.490057,5.480955,-7.030047,-5.420590,6.375878,1.650994,-9.473512,5.311696,6.904694,4.044216,-3.007301,7.294544,7.308026,1.101788,3.946435,-8.895187,-5.742102,5.213953,1.019157,3.458674,4.041531,-6.133843,7.546088,-1.269732,-9.381352,-2.378765,-2.672452,-3.781770,4.797973,-2.399737,5.217779,-7.959858,-6.309893,-5.937809,9.769037,-2.743007,-5.645285,-8.207015,-3.316737,-3.799989,-3.395624,7.602095,-4.529619,-6.227806,7.976703,-1.355368,-4.075992,-7.612286,4.813815,-6.401817,8.767090,7.069905,6.297726,8.586584,-8.524390,-4.459128,-7.699802,1.142189,1.608015,1.213304,-9.825688,-0.994994,-7.490160,4.542053,7.575675,-9.124641,-0.280646,4.784886,0.573463,4.012150,-2.112919,4.625676,5.702973,-7.012583,-3.551896,3.658959,0.408016,2.934939,4.257012,2.160766,-7.426541,8.369847,-3.981168,-0.819761], dtype = "float64")#candidate|12467|(336,)|const|float64
call_12466 = func_3030_call(relay.reshape(const_12467.astype('float64'), [6, 14, 4]))
call_12468 = func_3030_call(relay.reshape(const_12467.astype('float64'), [6, 14, 4]))
output = relay.Tuple([call_12454,call_12466,const_12467,])
output2 = relay.Tuple([call_12455,call_12468,const_12467,])
func_12482 = relay.Function([], output)
mod['func_12482'] = func_12482
mod = relay.transform.InferType()(mod)
mutated_mod['func_12482'] = func_12482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12482_call = mutated_mod.get_global_var('func_12482')
call_12483 = func_12482_call()
output = call_12483
func_12484 = relay.Function([], output)
mutated_mod['func_12484'] = func_12484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11743_call = mod.get_global_var('func_11743')
func_11745_call = mutated_mod.get_global_var('func_11745')
call_12490 = relay.TupleGetItem(func_11743_call(), 6)
call_12491 = relay.TupleGetItem(func_11745_call(), 6)
output = relay.Tuple([call_12490,])
output2 = relay.Tuple([call_12491,])
func_12498 = relay.Function([], output)
mod['func_12498'] = func_12498
mod = relay.transform.InferType()(mod)
output = func_12498()
func_12499 = relay.Function([], output)
mutated_mod['func_12499'] = func_12499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9693_call = mod.get_global_var('func_9693')
func_9695_call = mutated_mod.get_global_var('func_9695')
call_12508 = relay.TupleGetItem(func_9693_call(), 0)
call_12509 = relay.TupleGetItem(func_9695_call(), 0)
output = call_12508
output2 = call_12509
func_12546 = relay.Function([], output)
mod['func_12546'] = func_12546
mod = relay.transform.InferType()(mod)
mutated_mod['func_12546'] = func_12546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12546_call = mutated_mod.get_global_var('func_12546')
call_12547 = func_12546_call()
output = call_12547
func_12548 = relay.Function([], output)
mutated_mod['func_12548'] = func_12548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10169_call = mod.get_global_var('func_10169')
func_10170_call = mutated_mod.get_global_var('func_10170')
call_12603 = relay.TupleGetItem(func_10169_call(), 0)
call_12604 = relay.TupleGetItem(func_10170_call(), 0)
output = relay.Tuple([call_12603,])
output2 = relay.Tuple([call_12604,])
func_12609 = relay.Function([], output)
mod['func_12609'] = func_12609
mod = relay.transform.InferType()(mod)
output = func_12609()
func_12610 = relay.Function([], output)
mutated_mod['func_12610'] = func_12610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8853_call = mod.get_global_var('func_8853')
func_8854_call = mutated_mod.get_global_var('func_8854')
call_12618 = relay.TupleGetItem(func_8853_call(), 0)
call_12619 = relay.TupleGetItem(func_8854_call(), 0)
output = relay.Tuple([call_12618,])
output2 = relay.Tuple([call_12619,])
func_12620 = relay.Function([], output)
mod['func_12620'] = func_12620
mod = relay.transform.InferType()(mod)
mutated_mod['func_12620'] = func_12620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12620_call = mutated_mod.get_global_var('func_12620')
call_12621 = func_12620_call()
output = call_12621
func_12622 = relay.Function([], output)
mutated_mod['func_12622'] = func_12622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9219_call = mod.get_global_var('func_9219')
func_9220_call = mutated_mod.get_global_var('func_9220')
call_12637 = relay.TupleGetItem(func_9219_call(), 0)
call_12638 = relay.TupleGetItem(func_9220_call(), 0)
output = call_12637
output2 = call_12638
func_12643 = relay.Function([], output)
mod['func_12643'] = func_12643
mod = relay.transform.InferType()(mod)
output = func_12643()
func_12644 = relay.Function([], output)
mutated_mod['func_12644'] = func_12644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12620_call = mod.get_global_var('func_12620')
func_12622_call = mutated_mod.get_global_var('func_12622')
call_12651 = relay.TupleGetItem(func_12620_call(), 0)
call_12652 = relay.TupleGetItem(func_12622_call(), 0)
output = relay.Tuple([call_12651,])
output2 = relay.Tuple([call_12652,])
func_12653 = relay.Function([], output)
mod['func_12653'] = func_12653
mod = relay.transform.InferType()(mod)
output = func_12653()
func_12654 = relay.Function([], output)
mutated_mod['func_12654'] = func_12654
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12658 = relay.const([[[5.577725,3.373859,-2.715220,3.581908,-4.531041,0.640320],[-8.745395,9.313147,0.262462,-5.771851,-6.359914,9.607638],[-7.815367,-3.133554,0.706923,-8.509779,-8.667030,4.806072],[4.090244,7.626857,8.339936,-3.038191,9.867544,-0.632674],[5.629941,-0.631603,-5.852651,-4.082758,-1.613493,1.706942],[-3.104438,-5.346412,-0.871574,-9.909165,-7.254204,3.302136],[-1.588953,8.224892,8.286633,-6.797941,-1.342439,-8.884795]],[[-2.607635,-2.267333,6.609808,-3.255545,2.355021,-0.482913],[1.199461,-5.323342,-9.986998,8.582064,6.463871,-2.535402],[-1.681275,9.669631,7.274936,6.499951,-2.646112,3.012694],[-1.107045,0.157114,-2.451823,8.522519,-1.904009,-6.908924],[5.213960,8.820004,-9.169327,3.457697,-2.757842,-7.417126],[-8.858444,3.376261,2.765239,-5.736645,4.567720,7.301466],[3.367551,4.789949,-9.474777,-2.214141,0.538775,-7.814704]],[[7.788234,-1.346944,-0.720549,-5.369328,1.950479,2.687555],[-8.829687,-7.152078,-5.342121,8.826355,-7.127475,5.897058],[-6.991463,-3.548142,-0.946913,-6.702423,-8.470320,6.384393],[8.635753,1.113730,-7.176889,1.844892,-8.144429,-5.768260],[1.825614,-1.905966,-1.374570,5.290945,4.592567,-3.600828],[-1.282213,6.138664,4.485932,-0.680894,-4.570493,2.532862],[-3.960618,3.873005,-3.241650,7.980490,-4.177740,6.523250]],[[-5.044295,9.323306,-0.576394,1.696418,-1.485467,0.555860],[3.991450,-8.883510,9.095350,-6.710779,-2.121139,-2.979976],[8.998947,6.690265,7.255948,-0.736376,1.099020,8.009054],[8.553627,-2.489813,-2.007158,-1.213489,7.316962,6.789628],[-9.129001,4.036799,-2.563815,-6.392216,8.423586,7.798346],[-3.998232,-1.655241,4.213101,-9.083466,-5.406639,7.464318],[-0.567589,9.954690,-1.618278,1.965432,-6.783793,-8.485888]],[[-9.722968,3.518561,-8.087396,8.496366,-1.747205,-5.882352],[2.354324,1.771875,3.608105,-3.553268,-0.527848,-4.492485],[7.632370,1.540687,-2.226502,-9.470805,-4.454558,-2.244966],[-6.102204,-9.711101,-6.469121,-2.319702,0.579318,2.387324],[-2.508036,-8.708194,1.594904,-8.045291,-5.209098,5.075830],[7.337013,-8.173795,4.547981,-7.368126,-1.285233,-1.857256],[0.432088,-7.543584,-1.579174,2.398717,-9.772066,8.169330]],[[-3.970376,-9.708402,-0.461402,1.600549,1.387531,2.528705],[7.249970,-9.112284,-9.825029,-9.446916,6.639670,-0.655793],[-7.355448,8.016246,-9.964584,3.003801,-7.281678,8.301138],[2.695542,-2.371540,-1.394575,1.885550,9.367226,4.076793],[-1.843188,7.667377,5.869522,-4.853077,8.108720,-0.452181],[-4.803442,0.324742,0.028433,2.883900,6.362467,6.961647],[-6.676568,6.489105,-0.646834,5.013691,-4.999221,-5.853992]]], dtype = "float64")#candidate|12658|(6, 7, 6)|const|float64
uop_12659 = relay.tan(const_12658.astype('float64')) # shape=(6, 7, 6)
output = relay.Tuple([uop_12659,])
output2 = relay.Tuple([uop_12659,])
func_12662 = relay.Function([], output)
mod['func_12662'] = func_12662
mod = relay.transform.InferType()(mod)
output = func_12662()
func_12663 = relay.Function([], output)
mutated_mod['func_12663'] = func_12663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9693_call = mod.get_global_var('func_9693')
func_9695_call = mutated_mod.get_global_var('func_9695')
call_12676 = relay.TupleGetItem(func_9693_call(), 0)
call_12677 = relay.TupleGetItem(func_9695_call(), 0)
output = relay.Tuple([call_12676,])
output2 = relay.Tuple([call_12677,])
func_12702 = relay.Function([], output)
mod['func_12702'] = func_12702
mod = relay.transform.InferType()(mod)
output = func_12702()
func_12703 = relay.Function([], output)
mutated_mod['func_12703'] = func_12703
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12729 = relay.const(6, dtype = "int32")#candidate|12729|()|const|int32
var_12730 = relay.var("var_12730", dtype = "int32", shape = (10, 15, 1))#candidate|12730|(10, 15, 1)|var|int32
bop_12731 = relay.add(const_12729.astype('int32'), var_12730.astype('int32')) # shape=(10, 15, 1)
output = bop_12731
output2 = bop_12731
F = relay.Function([var_12730,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12730,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

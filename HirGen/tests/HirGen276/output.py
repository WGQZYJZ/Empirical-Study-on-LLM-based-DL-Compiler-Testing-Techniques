import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_34 = relay.var("var_34", dtype = "int8", shape = (11, 13, 4))#candidate|34|(11, 13, 4)|var|int8
var_35 = relay.var("var_35", dtype = "int8", shape = (11, 13, 4))#candidate|35|(11, 13, 4)|var|int8
bop_36 = relay.equal(var_34.astype('bool'), relay.reshape(var_35.astype('bool'), relay.shape_of(var_34))) # shape=(11, 13, 4)
output = relay.Tuple([bop_36,])
output2 = relay.Tuple([bop_36,])
func_40 = relay.Function([var_34,var_35,], output)
mod['func_40'] = func_40
mod = relay.transform.InferType()(mod)
var_41 = relay.var("var_41", dtype = "int8", shape = (11, 13, 4))#candidate|41|(11, 13, 4)|var|int8
var_42 = relay.var("var_42", dtype = "int8", shape = (11, 13, 4))#candidate|42|(11, 13, 4)|var|int8
output = func_40(var_41,var_42,)
func_43 = relay.Function([var_41,var_42,], output)
mutated_mod['func_43'] = func_43
mutated_mod = relay.transform.InferType()(mutated_mod)
var_240 = relay.var("var_240", dtype = "float64", shape = (6, 2, 13))#candidate|240|(6, 2, 13)|var|float64
uop_241 = relay.log(var_240.astype('float64')) # shape=(6, 2, 13)
bop_245 = relay.power(uop_241.astype('float32'), relay.reshape(var_240.astype('float32'), relay.shape_of(uop_241))) # shape=(6, 2, 13)
uop_251 = relay.atan(bop_245.astype('float32')) # shape=(6, 2, 13)
output = uop_251
output2 = uop_251
func_253 = relay.Function([var_240,], output)
mod['func_253'] = func_253
mod = relay.transform.InferType()(mod)
var_254 = relay.var("var_254", dtype = "float64", shape = (6, 2, 13))#candidate|254|(6, 2, 13)|var|float64
output = func_253(var_254)
func_255 = relay.Function([var_254], output)
mutated_mod['func_255'] = func_255
mutated_mod = relay.transform.InferType()(mutated_mod)
var_508 = relay.var("var_508", dtype = "float32", shape = (4, 8, 15))#candidate|508|(4, 8, 15)|var|float32
uop_509 = relay.log10(var_508.astype('float32')) # shape=(4, 8, 15)
var_514 = relay.var("var_514", dtype = "float32", shape = (4, 8, 15))#candidate|514|(4, 8, 15)|var|float32
bop_515 = relay.floor_mod(uop_509.astype('float64'), relay.reshape(var_514.astype('float64'), relay.shape_of(uop_509))) # shape=(4, 8, 15)
uop_519 = relay.sigmoid(var_514.astype('float64')) # shape=(4, 8, 15)
output = relay.Tuple([bop_515,uop_519,])
output2 = relay.Tuple([bop_515,uop_519,])
func_536 = relay.Function([var_508,var_514,], output)
mod['func_536'] = func_536
mod = relay.transform.InferType()(mod)
mutated_mod['func_536'] = func_536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_536_call = mutated_mod.get_global_var('func_536')
var_538 = relay.var("var_538", dtype = "float32", shape = (4, 8, 15))#candidate|538|(4, 8, 15)|var|float32
var_539 = relay.var("var_539", dtype = "float32", shape = (4, 8, 15))#candidate|539|(4, 8, 15)|var|float32
call_537 = func_536_call(var_538,var_539,)
output = call_537
func_540 = relay.Function([var_538,var_539,], output)
mutated_mod['func_540'] = func_540
mutated_mod = relay.transform.InferType()(mutated_mod)
const_546 = relay.const([[[-10,-10,4,8,10,5,6,7],[-3,5,-5,2,-3,8,7,-6],[8,6,1,-9,3,-10,-7,-4],[5,10,8,-9,-2,7,-4,-6],[10,-6,8,-3,9,-10,2,9],[-1,7,-2,-2,-5,4,3,-4]],[[4,5,-5,-4,4,1,6,-3],[-8,8,-9,6,1,-5,-10,9],[-1,7,-5,-8,-5,-6,8,1],[2,-8,10,-4,4,5,-10,-9],[9,5,-6,-4,2,5,-9,-8],[6,1,1,-8,7,-8,-10,-8]],[[-10,-2,7,-1,-5,-1,-3,-7],[-6,-8,6,-10,1,-9,-5,-1],[-1,-3,-8,9,1,10,-10,4],[5,-3,-7,-3,-2,-1,-1,-2],[-5,3,9,9,-4,3,-5,-2],[-8,1,-9,-6,-9,8,9,-6]],[[-4,10,-5,-5,-7,2,7,4],[8,-1,-2,-8,3,-4,-5,-1],[-1,4,9,4,-8,-9,10,-10],[-9,-7,-5,-3,-10,-5,9,-4],[6,-4,-5,-2,-7,-10,6,-7],[-9,7,9,6,-7,2,4,6]],[[-4,-6,1,4,9,-4,3,10],[-6,-8,9,4,-5,-1,2,1],[-10,-7,-3,10,6,-10,5,-1],[-9,8,4,-3,8,-8,-3,-8],[-5,5,-5,-3,9,10,-3,7],[-1,-7,6,-2,4,-5,-10,-4]],[[-8,-5,6,-6,9,-10,-6,-4],[3,9,-1,-6,-2,4,3,-9],[6,6,1,-6,-5,-5,-7,-7],[10,2,7,-8,8,-5,9,4],[9,9,1,2,-6,-8,-6,1],[-10,-9,10,8,-9,-9,-6,-8]],[[-2,-4,-4,2,3,-3,6,9],[9,-3,-5,-5,1,-7,-6,9],[-3,2,9,-9,3,-3,6,-4],[-10,-3,7,1,1,-4,-10,4],[8,-3,1,1,-4,4,-8,6],[-5,-3,7,2,-10,7,-1,-5]],[[1,8,-10,6,3,3,-8,9],[5,8,4,4,-6,5,-3,8],[8,6,5,1,9,1,-2,3],[-2,1,-10,-1,-7,-6,9,-6],[10,-7,1,-2,2,10,-4,3],[-3,-2,-1,-1,-1,9,-3,-9]],[[7,9,-5,-10,4,3,4,-6],[10,2,-2,10,-4,-5,3,9],[1,-10,8,-5,2,4,4,5],[-7,5,-1,-5,3,-9,6,-8],[9,5,-8,2,8,7,6,-6],[-8,2,-6,-2,7,-5,3,-1]],[[-1,-10,7,-10,9,-7,-9,8],[3,-7,-7,6,-4,8,-4,2],[5,6,-5,7,4,-1,-8,-2],[-6,-10,2,6,8,-5,-3,10],[8,-10,-10,9,2,1,-8,10],[4,7,-7,1,-9,10,5,9]],[[-3,10,-9,-1,8,2,-5,-10],[-2,4,-1,5,-5,-1,-2,-4],[1,-2,3,-3,3,9,-8,6],[7,9,9,10,-8,2,3,-9],[-2,-7,2,9,5,-5,8,-1],[5,5,-6,8,7,-6,-8,5]],[[5,6,-3,-5,3,-1,5,-8],[-4,4,9,5,-2,6,-5,-9],[-6,10,-9,8,-8,3,-1,-4],[5,4,-8,9,10,-9,10,-7],[-4,-4,3,7,10,-5,-2,-5],[-4,2,-8,3,8,-2,3,-3]],[[-8,2,-10,5,2,1,8,2],[5,-6,-4,-8,3,1,1,3],[-2,3,7,-1,9,-2,10,-6],[7,-7,-3,5,6,1,9,-9],[10,-2,1,5,-7,-4,2,-1],[4,-4,-2,-4,-5,6,-1,-5]],[[-6,-8,-4,6,4,10,1,-7],[-9,3,-7,10,2,-6,-10,3],[-1,4,6,9,-1,5,10,9],[2,1,-1,-3,-8,5,3,-5],[-1,-2,-2,-8,-9,6,-7,-1],[9,10,4,2,-4,1,4,-4]],[[8,3,-4,-2,4,-4,-3,9],[8,1,-5,-5,1,-8,1,-2],[-5,-8,6,4,6,-10,-3,-10],[-8,-3,5,4,4,-2,4,-6],[9,-8,2,4,1,6,10,-7],[8,-3,-9,-10,1,-10,8,-1]]], dtype = "uint64")#candidate|546|(15, 6, 8)|const|uint64
var_547 = relay.var("var_547", dtype = "uint64", shape = (15, 6, 8))#candidate|547|(15, 6, 8)|var|uint64
bop_548 = relay.bitwise_and(const_546.astype('uint64'), relay.reshape(var_547.astype('uint64'), relay.shape_of(const_546))) # shape=(15, 6, 8)
func_253_call = mod.get_global_var('func_253')
func_255_call = mutated_mod.get_global_var('func_255')
const_555 = relay.const([-3.341044,-3.066601,-9.137043,9.471700,-5.077690,4.373792,-4.726503,5.899600,-1.562788,-9.095024,-6.168086,8.578942,9.174916,3.446531,7.207666,-3.517479,4.142532,-9.336831,-6.642835,4.307505,7.199554,-7.565894,4.389571,5.107517,6.467454,-7.130961,2.976147,-6.751552,-5.796490,1.239298,6.788090,1.035070,-4.923171,-0.682944,-8.525902,-9.047217,-7.844516,4.908969,-2.130831,4.490937,4.968954,4.531120,8.742929,7.566967,-4.341842,1.480161,-8.935823,-2.346396,-7.255326,0.265016,-0.521027,-2.521154,3.837663,-5.417960,5.603187,3.362414,1.248483,6.140481,-2.317378,3.789162,2.975700,-9.965522,0.190615,-9.026971,-0.151743,-1.823270,7.985907,2.680976,2.788933,6.798301,-2.155392,9.542535,0.947798,-7.137399,9.825969,-5.201466,3.390475,-3.435791,7.638535,-4.451001,4.474911,-7.339742,-5.494430,4.808030,-9.419128,-4.187266,7.294654,-7.470331,-3.236528,-9.621939,-7.616851,-8.616999,-0.601532,5.889035,0.828118,5.471082,-3.497433,-7.309865,3.157268,-4.777399,-0.916328,-4.455473,-3.506246,-7.228256,-9.541309,-4.624998,-3.501149,-8.955444,-3.413703,-2.815336,3.912051,-0.550541,-5.409536,-8.590505,-8.124010,7.584209,9.628124,-3.830561,-7.740438,-8.143515,8.234709,-1.945243,3.208440,-3.460739,-2.870560,-0.986676,-7.716616,3.475940,1.459594,0.155312,2.199640,-7.558913,-7.583434,-7.384014,5.793477,0.446920,-7.243979,-2.072547,-7.801622,1.061665,-5.505557,9.392745,-6.214651,7.583642,-6.075713,4.656374,2.875392,8.252712,-8.180438,-2.937089,-1.673575,-6.150415,0.483559,3.487766,-6.379388,-4.196053], dtype = "float64")#candidate|555|(156,)|const|float64
call_554 = func_253_call(relay.reshape(const_555.astype('float64'), [6, 2, 13]))
call_556 = func_253_call(relay.reshape(const_555.astype('float64'), [6, 2, 13]))
output = relay.Tuple([bop_548,call_554,const_555,])
output2 = relay.Tuple([bop_548,call_556,const_555,])
func_563 = relay.Function([var_547,], output)
mod['func_563'] = func_563
mod = relay.transform.InferType()(mod)
var_564 = relay.var("var_564", dtype = "uint64", shape = (15, 6, 8))#candidate|564|(15, 6, 8)|var|uint64
output = func_563(var_564)
func_565 = relay.Function([var_564], output)
mutated_mod['func_565'] = func_565
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1169 = relay.var("var_1169", dtype = "uint64", shape = (8, 6, 14))#candidate|1169|(8, 6, 14)|var|uint64
var_1170 = relay.var("var_1170", dtype = "uint64", shape = (8, 6, 14))#candidate|1170|(8, 6, 14)|var|uint64
bop_1171 = relay.right_shift(var_1169.astype('uint64'), relay.reshape(var_1170.astype('uint64'), relay.shape_of(var_1169))) # shape=(8, 6, 14)
var_1174 = relay.var("var_1174", dtype = "uint64", shape = (8, 6, 14))#candidate|1174|(8, 6, 14)|var|uint64
bop_1175 = relay.divide(var_1169.astype('float32'), relay.reshape(var_1174.astype('float32'), relay.shape_of(var_1169))) # shape=(8, 6, 14)
uop_1181 = relay.atan(var_1174.astype('float32')) # shape=(8, 6, 14)
uop_1187 = relay.tan(uop_1181.astype('float32')) # shape=(8, 6, 14)
bop_1189 = relay.bitwise_and(uop_1181.astype('int16'), relay.reshape(bop_1175.astype('int16'), relay.shape_of(uop_1181))) # shape=(8, 6, 14)
func_253_call = mod.get_global_var('func_253')
func_255_call = mutated_mod.get_global_var('func_255')
var_1195 = relay.var("var_1195", dtype = "float64", shape = (156,))#candidate|1195|(156,)|var|float64
call_1194 = func_253_call(relay.reshape(var_1195.astype('float64'), [6, 2, 13]))
call_1196 = func_253_call(relay.reshape(var_1195.astype('float64'), [6, 2, 13]))
func_253_call = mod.get_global_var('func_253')
func_255_call = mutated_mod.get_global_var('func_255')
call_1199 = func_253_call(relay.reshape(var_1195.astype('float64'), [6, 2, 13]))
call_1200 = func_253_call(relay.reshape(var_1195.astype('float64'), [6, 2, 13]))
output = relay.Tuple([bop_1171,uop_1187,bop_1189,call_1194,var_1195,call_1199,])
output2 = relay.Tuple([bop_1171,uop_1187,bop_1189,call_1196,var_1195,call_1200,])
func_1210 = relay.Function([var_1169,var_1170,var_1174,var_1195,], output)
mod['func_1210'] = func_1210
mod = relay.transform.InferType()(mod)
var_1211 = relay.var("var_1211", dtype = "uint64", shape = (8, 6, 14))#candidate|1211|(8, 6, 14)|var|uint64
var_1212 = relay.var("var_1212", dtype = "uint64", shape = (8, 6, 14))#candidate|1212|(8, 6, 14)|var|uint64
var_1213 = relay.var("var_1213", dtype = "uint64", shape = (8, 6, 14))#candidate|1213|(8, 6, 14)|var|uint64
var_1214 = relay.var("var_1214", dtype = "float64", shape = (156,))#candidate|1214|(156,)|var|float64
output = func_1210(var_1211,var_1212,var_1213,var_1214,)
func_1215 = relay.Function([var_1211,var_1212,var_1213,var_1214,], output)
mutated_mod['func_1215'] = func_1215
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1325 = relay.var("var_1325", dtype = "float32", shape = (2, 10, 9))#candidate|1325|(2, 10, 9)|var|float32
uop_1326 = relay.log(var_1325.astype('float32')) # shape=(2, 10, 9)
output = uop_1326
output2 = uop_1326
func_1329 = relay.Function([var_1325,], output)
mod['func_1329'] = func_1329
mod = relay.transform.InferType()(mod)
var_1330 = relay.var("var_1330", dtype = "float32", shape = (2, 10, 9))#candidate|1330|(2, 10, 9)|var|float32
output = func_1329(var_1330)
func_1331 = relay.Function([var_1330], output)
mutated_mod['func_1331'] = func_1331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1517 = relay.var("var_1517", dtype = "float32", shape = (9, 11, 13))#candidate|1517|(9, 11, 13)|var|float32
uop_1518 = relay.asin(var_1517.astype('float32')) # shape=(9, 11, 13)
func_536_call = mod.get_global_var('func_536')
func_540_call = mutated_mod.get_global_var('func_540')
var_1541 = relay.var("var_1541", dtype = "float32", shape = (120, 4))#candidate|1541|(120, 4)|var|float32
call_1540 = relay.TupleGetItem(func_536_call(relay.reshape(var_1541.astype('float32'), [4, 8, 15]), relay.reshape(var_1541.astype('float32'), [4, 8, 15]), ), 1)
call_1542 = relay.TupleGetItem(func_540_call(relay.reshape(var_1541.astype('float32'), [4, 8, 15]), relay.reshape(var_1541.astype('float32'), [4, 8, 15]), ), 1)
bop_1544 = relay.multiply(call_1540.astype('float32'), relay.reshape(var_1541.astype('float32'), relay.shape_of(call_1540))) # shape=(4, 8, 15)
bop_1547 = relay.multiply(call_1542.astype('float32'), relay.reshape(var_1541.astype('float32'), relay.shape_of(call_1542))) # shape=(4, 8, 15)
func_1210_call = mod.get_global_var('func_1210')
func_1215_call = mutated_mod.get_global_var('func_1215')
var_1557 = relay.var("var_1557", dtype = "uint64", shape = (672,))#candidate|1557|(672,)|var|uint64
const_1558 = relay.const([[6.562230],[-1.753205],[-8.005915],[-0.329735],[8.843878],[-7.713979],[4.639880],[-1.746960],[4.716163],[-3.107254],[-7.406264],[-1.231785],[-9.232479],[2.696866],[2.106044],[-0.932592],[6.556804],[6.669610],[1.976908],[3.968480],[-5.089627],[-8.802126],[1.579788],[-3.897689],[-7.115577],[5.387184],[0.498574],[3.873173],[1.515257],[2.524138],[2.996323],[7.841234],[-6.603922],[-3.279569],[-8.027851],[-5.517954],[5.666082],[-1.925000],[6.913884],[-0.929453],[2.589403],[-0.664310],[3.543474],[-8.631623],[-8.120826],[-9.525087],[0.136604],[5.181369],[-3.396560],[5.668948],[0.803013],[-5.172427],[5.586375],[-6.850002],[1.640080],[-1.585965],[-6.423961],[-7.942845],[-2.436176],[-2.059665],[-9.470467],[-6.468450],[-2.943780],[6.026985],[2.683231],[6.672505],[-3.742244],[6.907984],[-6.493318],[0.179938],[-1.829007],[-8.762349],[-8.194289],[4.573840],[4.793996],[-2.847594],[-5.551084],[5.229569],[-1.553990],[0.286797],[8.015033],[-0.842221],[-2.814003],[1.951069],[2.458232],[7.739964],[-3.377030],[-2.524514],[-1.850235],[4.990685],[5.885702],[6.988738],[-9.987605],[-5.846202],[2.709999],[-1.998094],[-1.763847],[-9.852872],[7.660808],[7.637897],[-1.386282],[-8.202885],[-0.713208],[-4.828606],[-9.796883],[-7.097511],[8.581055],[4.284783],[-3.798839],[-5.330330],[-4.316349],[3.704778],[3.230528],[0.903365],[1.941417],[-4.715918],[7.251955],[9.368516],[4.861237],[-4.477629],[5.079132],[-1.497516],[-7.363803],[5.076775],[6.058336],[-4.614417],[-2.922598],[2.750812],[-4.547327],[-6.146411],[7.141044],[8.627459],[-6.361076],[3.710221],[-2.209439],[7.219312],[-3.206248],[-8.360566],[-2.715459],[-5.732470],[9.868283],[2.146044],[-7.184849],[-0.627242],[2.006375],[-3.961464],[8.190272],[-4.941099],[-1.110977],[2.233528],[1.280137],[3.237656],[-6.507376],[9.425392],[4.891138],[7.575637]], dtype = "float64")#candidate|1558|(156, 1)|const|float64
call_1556 = relay.TupleGetItem(func_1210_call(relay.reshape(var_1557.astype('uint64'), [8, 6, 14]), relay.reshape(var_1557.astype('uint64'), [8, 6, 14]), relay.reshape(var_1557.astype('uint64'), [8, 6, 14]), relay.reshape(const_1558.astype('float64'), [156,]), ), 4)
call_1559 = relay.TupleGetItem(func_1215_call(relay.reshape(var_1557.astype('uint64'), [8, 6, 14]), relay.reshape(var_1557.astype('uint64'), [8, 6, 14]), relay.reshape(var_1557.astype('uint64'), [8, 6, 14]), relay.reshape(const_1558.astype('float64'), [156,]), ), 4)
bop_1578 = relay.less(call_1540.astype('bool'), relay.reshape(var_1541.astype('bool'), relay.shape_of(call_1540))) # shape=(4, 8, 15)
bop_1581 = relay.less(call_1542.astype('bool'), relay.reshape(var_1541.astype('bool'), relay.shape_of(call_1542))) # shape=(4, 8, 15)
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
var_1589 = relay.var("var_1589", dtype = "float32", shape = (3, 60))#candidate|1589|(3, 60)|var|float32
call_1588 = func_1329_call(relay.reshape(var_1589.astype('float32'), [2, 10, 9]))
call_1590 = func_1329_call(relay.reshape(var_1589.astype('float32'), [2, 10, 9]))
output = relay.Tuple([uop_1518,bop_1544,call_1556,var_1557,const_1558,bop_1578,call_1588,var_1589,])
output2 = relay.Tuple([uop_1518,bop_1547,call_1559,var_1557,const_1558,bop_1581,call_1590,var_1589,])
func_1592 = relay.Function([var_1517,var_1541,var_1557,var_1589,], output)
mod['func_1592'] = func_1592
mod = relay.transform.InferType()(mod)
var_1593 = relay.var("var_1593", dtype = "float32", shape = (9, 11, 13))#candidate|1593|(9, 11, 13)|var|float32
var_1594 = relay.var("var_1594", dtype = "float32", shape = (120, 4))#candidate|1594|(120, 4)|var|float32
var_1595 = relay.var("var_1595", dtype = "uint64", shape = (672,))#candidate|1595|(672,)|var|uint64
var_1596 = relay.var("var_1596", dtype = "float32", shape = (3, 60))#candidate|1596|(3, 60)|var|float32
output = func_1592(var_1593,var_1594,var_1595,var_1596,)
func_1597 = relay.Function([var_1593,var_1594,var_1595,var_1596,], output)
mutated_mod['func_1597'] = func_1597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1666 = relay.var("var_1666", dtype = "uint32", shape = (3, 8, 15))#candidate|1666|(3, 8, 15)|var|uint32
var_1667 = relay.var("var_1667", dtype = "uint32", shape = (3, 8, 15))#candidate|1667|(3, 8, 15)|var|uint32
bop_1668 = relay.bitwise_or(var_1666.astype('uint32'), relay.reshape(var_1667.astype('uint32'), relay.shape_of(var_1666))) # shape=(3, 8, 15)
output = bop_1668
output2 = bop_1668
func_1671 = relay.Function([var_1666,var_1667,], output)
mod['func_1671'] = func_1671
mod = relay.transform.InferType()(mod)
mutated_mod['func_1671'] = func_1671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1671_call = mutated_mod.get_global_var('func_1671')
var_1673 = relay.var("var_1673", dtype = "uint32", shape = (3, 8, 15))#candidate|1673|(3, 8, 15)|var|uint32
var_1674 = relay.var("var_1674", dtype = "uint32", shape = (3, 8, 15))#candidate|1674|(3, 8, 15)|var|uint32
call_1672 = func_1671_call(var_1673,var_1674,)
output = call_1672
func_1675 = relay.Function([var_1673,var_1674,], output)
mutated_mod['func_1675'] = func_1675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1708 = relay.var("var_1708", dtype = "int32", shape = ())#candidate|1708|()|var|int32
var_1709 = relay.var("var_1709", dtype = "int32", shape = (5, 2, 1))#candidate|1709|(5, 2, 1)|var|int32
bop_1710 = relay.multiply(var_1708.astype('int32'), var_1709.astype('int32')) # shape=(5, 2, 1)
bop_1717 = relay.less(var_1708.astype('bool'), var_1709.astype('bool')) # shape=(5, 2, 1)
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
const_1725 = relay.const([-4.829254,-7.528534,-1.538415,-2.410421,-3.916987,-6.403797,8.997148,-6.215538,-8.496247,-6.875917,-9.995502,-5.331759,-9.188606,8.110117,9.673879,8.915320,0.068970,6.882911,-2.025889,-5.992213,-4.981450,-4.773701,-5.300352,-5.420552,4.606414,2.498634,-3.643116,-8.726975,-4.345774,-4.484773,-5.495304,7.273541,5.404664,-5.642808,0.603828,-4.480249,9.462601,1.548758,-8.564576,-3.352621,5.232969,4.675926,4.937788,-5.634342,-9.307828,-6.215380,-3.103106,-3.639458,-9.092905,-5.851034,9.670533,-4.543456,4.094392,-0.248911,7.486859,9.910953,1.989233,-0.607796,-8.473348,-1.130398,7.319085,7.758470,5.500813,0.217151,-3.877927,7.774094,3.431338,7.135019,8.206270,-6.004519,-9.909823,2.522752,-3.587052,3.772951,-8.485464,9.129330,-7.905889,-1.640619,-8.444976,4.370813,3.274603,9.337484,-9.670707,7.790372,-0.937301,-1.200131,9.786274,-0.948688,1.303849,-9.632139,-9.368245,8.719348,-9.209510,-2.660859,-3.992230,-1.949269,-3.830618,-7.858705,-3.977867,-9.745598,8.027334,3.498728,0.458910,-9.086430,5.526694,-5.082977,5.664427,-6.423694,1.474647,-1.487757,9.554790,4.394514,-1.175199,-4.827050,2.988711,-0.810156,-3.743747,4.858970,9.680688,-4.618710,-1.832375,-4.516378,0.901006,-1.403202,3.888362,-2.978523,6.797210,-6.665476,3.200307,-1.697709,-0.909870,1.944541,-2.629813,-8.632872,-5.742499,2.960117,3.430924,-9.169449,-3.857693,-7.425011,-5.144894,-9.678994,-5.106699,2.767129,-0.013451,3.653507,-1.186481,4.962370,0.932168,0.647136,-1.467201,1.827832,-7.533242,-0.933489,-1.736222,0.235207,6.034609,-1.051981,-5.165060,0.086404,9.265927,3.669989,8.227030,-2.974344,-7.819548,2.486020,-9.419836,7.838946,-5.917828,-4.314781,-7.179934,0.682661,3.037415,1.616877,-0.803310,-1.811702,7.454694,4.633206,-5.075150,-6.694369], dtype = "float32")#candidate|1725|(180,)|const|float32
call_1724 = func_1329_call(relay.reshape(const_1725.astype('float32'), [2, 10, 9]))
call_1726 = func_1329_call(relay.reshape(const_1725.astype('float32'), [2, 10, 9]))
func_536_call = mod.get_global_var('func_536')
func_540_call = mutated_mod.get_global_var('func_540')
var_1729 = relay.var("var_1729", dtype = "float32", shape = (480,))#candidate|1729|(480,)|var|float32
call_1728 = relay.TupleGetItem(func_536_call(relay.reshape(var_1729.astype('float32'), [4, 8, 15]), relay.reshape(var_1729.astype('float32'), [4, 8, 15]), ), 0)
call_1730 = relay.TupleGetItem(func_540_call(relay.reshape(var_1729.astype('float32'), [4, 8, 15]), relay.reshape(var_1729.astype('float32'), [4, 8, 15]), ), 0)
uop_1744 = relay.acosh(call_1728.astype('float64')) # shape=(4, 8, 15)
uop_1746 = relay.acosh(call_1730.astype('float64')) # shape=(4, 8, 15)
func_40_call = mod.get_global_var('func_40')
func_43_call = mutated_mod.get_global_var('func_43')
var_1768 = relay.var("var_1768", dtype = "int8", shape = (572,))#candidate|1768|(572,)|var|int8
call_1767 = relay.TupleGetItem(func_40_call(relay.reshape(var_1768.astype('int8'), [11, 13, 4]), relay.reshape(var_1768.astype('int8'), [11, 13, 4]), ), 0)
call_1769 = relay.TupleGetItem(func_43_call(relay.reshape(var_1768.astype('int8'), [11, 13, 4]), relay.reshape(var_1768.astype('int8'), [11, 13, 4]), ), 0)
output = relay.Tuple([bop_1710,bop_1717,call_1724,const_1725,var_1729,uop_1744,call_1767,var_1768,])
output2 = relay.Tuple([bop_1710,bop_1717,call_1726,const_1725,var_1729,uop_1746,call_1769,var_1768,])
func_1779 = relay.Function([var_1708,var_1709,var_1729,var_1768,], output)
mod['func_1779'] = func_1779
mod = relay.transform.InferType()(mod)
var_1780 = relay.var("var_1780", dtype = "int32", shape = ())#candidate|1780|()|var|int32
var_1781 = relay.var("var_1781", dtype = "int32", shape = (5, 2, 1))#candidate|1781|(5, 2, 1)|var|int32
var_1782 = relay.var("var_1782", dtype = "float32", shape = (480,))#candidate|1782|(480,)|var|float32
var_1783 = relay.var("var_1783", dtype = "int8", shape = (572,))#candidate|1783|(572,)|var|int8
output = func_1779(var_1780,var_1781,var_1782,var_1783,)
func_1784 = relay.Function([var_1780,var_1781,var_1782,var_1783,], output)
mutated_mod['func_1784'] = func_1784
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1951 = relay.var("var_1951", dtype = "float32", shape = (4, 13, 14))#candidate|1951|(4, 13, 14)|var|float32
uop_1952 = relay.atanh(var_1951.astype('float32')) # shape=(4, 13, 14)
uop_1957 = relay.exp(uop_1952.astype('float32')) # shape=(4, 13, 14)
func_1671_call = mod.get_global_var('func_1671')
func_1675_call = mutated_mod.get_global_var('func_1675')
const_1960 = relay.const([6,-8,-4,8,4,-6,-4,-8,5,-5,4,4,-10,-6,-8,8,9,-9,-8,8,-5,-4,9,5,10,4,8,1,-6,10,1,2,-3,5,-9,5,9,4,-1,-3,-9,-4,-7,-6,3,-1,-3,8,-5,7,-8,-8,4,-9,3,8,1,10,9,2,-1,8,-7,9,-1,-4,3,-8,-7,3,-8,-1,-3,8,-8,-3,5,-4,8,-2,4,-8,1,-3,2,8,5,1,-2,-1,9,-1,5,-7,-1,-4,7,1,1,-6,-7,4,-4,1,6,-6,6,-1,5,8,7,10,-5,1,2,-8,2,3,9,-1,8,9,-5,6,8,-5,-5,8,5,-5,-9,-5,7,6,-4,10,-4,-5,-7,10,-5,10,-1,10,-2,-2,2,-1,-7,-4,3,2,-2,8,-8,-7,-7,-2,7,-4,-9,-9,6,-9,-6,6,8,9,-5,-1,7,-5,-5,3,-9,1,3,-10,-10,2,5,-7,5,2,5,4,-9,8,-6,-8,-8,-4,10,2,6,-8,-3,1,-3,8,6,3,1,-9,-2,1,-7,3,-2,7,-10,-6,-2,-8,1,4,-10,-3,10,-7,1,4,-4,5,-3,-1,-7,-3,5,5,-9,-3,8,9,8,-10,-3,-6,5,-2,-2,-1,-3,10,-6,-4,-6,6,-3,-1,3,9,-10,-3,-4,1,-10,-7,-7,-1,-3,-1,-3,2,4,-8,-7,-2,-2,1,-2,4,-5,4,-9,8,-1,-1,-6,2,-4,-8,7,-7,-5,-7,-1,8,3,1,-9,5,7,-6,-7,-4,1,4,-10,-9,1,1,-6,-9,10,-2,-8,9,-3,8,-5,2,4,6,-7,8,-10,10,-7,8,9,-6,-8,-2,-2,-10,-3,-5,-8,-9,-5,-3,-8,-2,1,4,-9,-9,-7,-8,9,8,-2,-7,3,3,6,4,8,1,-5,1,5,-2,9,1,-10,2,-9,2], dtype = "uint32")#candidate|1960|(360,)|const|uint32
call_1959 = func_1671_call(relay.reshape(const_1960.astype('uint32'), [3, 8, 15]), relay.reshape(const_1960.astype('uint32'), [3, 8, 15]), )
call_1961 = func_1671_call(relay.reshape(const_1960.astype('uint32'), [3, 8, 15]), relay.reshape(const_1960.astype('uint32'), [3, 8, 15]), )
output = relay.Tuple([uop_1957,call_1959,const_1960,])
output2 = relay.Tuple([uop_1957,call_1961,const_1960,])
func_1962 = relay.Function([var_1951,], output)
mod['func_1962'] = func_1962
mod = relay.transform.InferType()(mod)
mutated_mod['func_1962'] = func_1962
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1963 = relay.var("var_1963", dtype = "float32", shape = (4, 13, 14))#candidate|1963|(4, 13, 14)|var|float32
func_1962_call = mutated_mod.get_global_var('func_1962')
call_1964 = func_1962_call(var_1963)
output = call_1964
func_1965 = relay.Function([var_1963], output)
mutated_mod['func_1965'] = func_1965
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1998 = relay.var("var_1998", dtype = "float32", shape = (6, 14, 14))#candidate|1998|(6, 14, 14)|var|float32
uop_1999 = relay.sin(var_1998.astype('float32')) # shape=(6, 14, 14)
output = relay.Tuple([uop_1999,])
output2 = relay.Tuple([uop_1999,])
func_2005 = relay.Function([var_1998,], output)
mod['func_2005'] = func_2005
mod = relay.transform.InferType()(mod)
var_2006 = relay.var("var_2006", dtype = "float32", shape = (6, 14, 14))#candidate|2006|(6, 14, 14)|var|float32
output = func_2005(var_2006)
func_2007 = relay.Function([var_2006], output)
mutated_mod['func_2007'] = func_2007
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2288 = relay.var("var_2288", dtype = "int16", shape = (10, 6, 3))#candidate|2288|(10, 6, 3)|var|int16
var_2289 = relay.var("var_2289", dtype = "int16", shape = (10, 6, 3))#candidate|2289|(10, 6, 3)|var|int16
bop_2290 = relay.left_shift(var_2288.astype('int16'), relay.reshape(var_2289.astype('int16'), relay.shape_of(var_2288))) # shape=(10, 6, 3)
func_1962_call = mod.get_global_var('func_1962')
func_1965_call = mutated_mod.get_global_var('func_1965')
const_2315 = relay.const([[0.305502,8.021961,5.650895,8.403459,-9.729817,-9.923138,-2.491340,5.541301,5.891540,-7.601885,0.062738,8.567754,-4.539339,6.593255,0.385872,-4.075802,-7.057292,8.452633,-9.548731,-0.128463,4.711792,-0.877013,-1.456950,-0.830973,-8.362074,4.618464,2.162530,6.126001,-3.723185,-7.652608,3.808021,-4.186423,-5.483850,-0.843761,-8.969944,4.721223,4.233882,8.836787,-3.692843,-9.763791,-0.821652,-7.751403,-6.735080,9.877027,-4.117985,-5.388893,-3.892864,4.543406,-1.659276,8.263386,0.400651,-0.865610],[-0.294950,-6.240758,-9.618270,9.552469,4.598832,-3.344499,-2.713384,-3.077160,3.090092,-4.915222,1.511577,-1.644814,2.430814,0.026829,4.876608,-0.995964,5.029214,-5.597787,4.581092,6.920419,6.717414,-9.038700,2.625338,3.247853,6.743389,1.472682,3.009267,9.924435,2.672712,3.868771,-9.088111,9.829713,1.562968,2.217967,7.175813,2.555383,-5.896312,-0.010449,-8.482180,-0.459956,-2.480336,-5.801171,-3.180789,-4.696943,-4.503050,-7.824404,3.686079,1.048532,7.280598,0.277223,9.767742,6.212954],[-8.703216,3.898092,4.293312,6.032930,6.455446,-3.177366,8.270915,-7.732503,-6.404470,-6.208060,-3.239999,-1.783134,6.355392,-7.939191,-7.617737,-3.287444,-4.960334,2.528334,-3.480883,4.963996,7.460079,9.596585,-0.324914,-1.607794,-0.928642,9.697595,-6.964642,-3.478779,9.519932,-1.420648,-8.261184,6.946203,5.832647,1.629178,5.320682,0.301337,-6.847438,3.060052,-0.578387,5.160041,-1.549067,8.321517,2.908043,-2.169112,8.395384,-1.778960,-1.939562,-3.019203,1.554616,1.488366,-0.221446,7.960297],[4.403858,2.637900,-0.399642,-6.294317,1.944557,-4.482778,0.546257,-6.067361,2.328315,-1.025473,-5.917632,3.936254,-0.286147,-8.877056,-9.444071,4.381439,-1.089732,0.910475,-4.815648,9.920055,-0.877896,-4.184831,3.978190,-3.251573,3.391191,-4.540947,2.417411,6.266745,-4.617774,-3.575863,2.076222,-1.542626,-1.124738,4.593624,7.238593,4.711993,-6.681918,7.535894,-9.180674,-9.648098,-1.036487,4.743253,2.126315,-6.335942,-9.497783,-5.000430,-7.452108,1.836703,-6.851801,6.019928,3.910079,4.735412],[-1.127758,1.306003,-6.661431,1.081864,-1.243401,-5.526307,0.952896,8.656546,7.878479,-4.541681,-0.253755,8.173853,-9.017809,-9.841094,2.561818,8.463492,-8.656403,-0.630644,-5.502648,-8.856320,-6.560579,-8.829321,3.071008,4.061175,9.853825,-5.582385,9.557559,1.714689,7.316713,4.718805,2.285261,-1.435959,-8.182179,3.806174,-6.804321,5.761517,-1.219592,4.494842,-6.856280,0.821017,-9.591836,4.126639,6.020707,5.596243,9.960854,8.485450,0.118280,-2.383735,-3.140224,-4.920331,5.279255,5.520707],[-9.684749,6.761850,8.991847,-2.283877,0.112095,8.375691,-5.226212,1.763565,7.509894,6.148467,-9.310885,-9.601854,6.072655,-7.781233,1.651834,-6.863180,-5.153252,-8.378033,-3.467926,5.427967,-8.883322,-4.504259,0.493353,-1.453905,-2.835356,7.918183,-3.478337,2.862921,-9.827781,-1.975521,8.590389,9.382131,8.809265,6.243818,0.870762,0.449428,4.788926,-3.601284,9.406899,-0.237718,-9.703978,-2.870183,2.279700,-5.766993,3.571761,9.234490,-3.312418,-5.776780,-9.201491,7.719441,-5.479645,-7.100994],[3.975801,-6.057992,3.163543,-1.397534,-5.594946,-0.026104,1.291506,-3.586704,-6.617184,3.765836,-8.456023,-2.745892,-7.977154,-9.519370,-5.700728,-8.958475,-8.158011,-8.436604,6.047264,6.835392,3.198226,-0.567655,8.522392,-9.902751,-9.890892,-1.773014,3.796625,-3.248072,-2.675149,7.185086,8.404776,-5.805607,-7.798775,7.495490,-2.843219,-5.518420,0.336419,-9.332176,3.047428,-5.976768,-8.776898,-6.986360,6.693744,9.861072,-7.229676,-8.369292,1.948770,1.299356,6.991851,8.743582,7.821458,6.553360],[-2.316896,9.793215,-1.538235,-9.198368,-4.184978,6.299670,4.776052,-8.617392,2.770511,4.434875,6.748656,-7.617712,1.612791,-0.910461,5.462902,6.103934,5.233286,6.215099,-6.701348,9.166124,9.281454,-2.258091,9.274366,-2.170320,3.879299,3.391067,-8.282266,4.642637,-1.592215,-7.810556,-1.124155,7.982130,0.847962,8.885430,-7.787816,-1.388138,2.866859,-8.038274,5.472066,6.507778,-1.427934,-3.517509,2.253234,0.817986,1.938072,5.305677,0.657233,-5.369458,-5.131896,4.920449,-9.285302,-7.268788],[-7.818247,-8.671552,3.924538,9.552163,0.299204,-5.097520,4.711470,-3.077150,5.007529,-6.463390,-4.400298,2.515068,8.847008,-0.175335,6.196393,4.108825,0.667235,5.896858,-4.026362,8.367595,-3.180070,-7.926643,2.751028,8.603527,-6.333717,9.696026,-0.619055,1.707025,0.453692,8.366040,-0.550768,3.881762,-5.534237,-1.773104,7.961569,-5.300504,0.855286,3.155923,5.237964,-3.003050,7.631924,8.305437,-2.658966,1.188258,-3.857657,-4.473769,5.696292,-1.968375,7.265380,-6.649334,-7.678852,-3.141561],[4.208316,-9.626526,-5.864295,0.508738,5.412472,7.629507,9.752230,3.633271,2.098030,5.016412,0.699261,6.237113,-0.032093,5.129037,-0.185910,8.158987,-9.496672,1.018139,-2.009642,-8.558194,8.188615,8.427321,-1.514508,-4.619891,7.821327,-0.505866,7.227356,0.720051,-7.601840,0.682455,-8.519150,-7.635911,-4.053653,-0.688705,-1.414174,-8.728072,-9.023533,5.393516,0.612047,2.623171,7.048640,3.686351,6.498473,-4.762242,-9.274826,-9.393924,-2.362396,1.751887,-3.442775,3.365308,-8.237038,-2.744509],[-4.090469,2.384185,9.463564,-8.929738,-5.749123,-5.320780,-3.776350,0.062177,-2.233175,8.020524,8.038430,6.593936,-2.598307,-5.781037,0.160652,-0.385404,-6.934974,8.660770,-5.522588,-8.588300,8.961180,-6.426629,-6.768749,-7.959139,0.133055,2.534735,-1.856200,0.114887,-1.154250,4.217041,-4.230173,9.331778,0.407801,6.858829,-5.816596,7.925997,-4.978911,4.315088,9.592352,9.638084,7.756373,1.634122,1.526738,6.651059,5.725417,8.905365,-3.611740,-6.149597,5.567437,6.037683,-2.889169,-0.460375],[-2.557543,6.879675,3.177915,-4.369427,8.979375,2.658929,-5.065613,-0.630700,0.974228,-2.916020,-0.173312,-4.442702,-7.355378,3.219480,-3.366225,6.597042,6.192099,-3.197411,3.365141,-1.531568,1.085460,9.739269,-7.363760,6.495478,-4.358222,2.830020,-6.427417,-5.476642,6.082852,9.269607,4.997924,-8.828613,9.128005,-3.775193,9.074492,-7.681920,-9.656946,0.444452,1.197773,-2.069659,-8.533366,9.866839,5.612641,5.233140,5.391804,-1.137179,2.833879,-5.083380,-4.649175,9.518989,8.075401,-8.919811],[3.574243,-7.294207,-2.926809,-1.846968,-3.760697,2.722588,-4.852682,-8.482500,-2.373332,-8.895131,1.647623,-8.189948,6.523935,9.831893,8.844150,-5.748852,1.241096,-0.467973,-8.761182,-2.342089,-7.737806,-2.144565,-4.873394,-8.911188,-3.236356,-3.000015,4.323222,2.462105,-8.943894,0.438795,-6.629608,5.124824,-9.167194,6.008052,-4.450233,0.468887,4.837524,4.437479,-6.387968,-6.348439,8.264851,-8.136876,-9.273162,0.662720,0.229383,-1.160965,5.063734,5.281574,5.551840,-5.665526,0.582006,-7.705154],[1.197305,-5.406220,-2.384019,-4.704359,-5.798575,-6.644951,-8.863910,4.779264,5.097334,4.148871,2.674770,-7.654085,9.355424,2.863193,8.913704,-5.521968,4.962032,-6.209877,4.930745,3.286917,-5.525575,-5.987212,-3.544828,-8.050297,-5.088254,-2.467792,-0.948460,-9.279329,6.677447,-5.210432,-8.813917,3.696754,-0.970351,2.428367,0.536871,0.677033,-4.814300,-4.320656,2.621361,-4.072690,5.465105,-5.830005,-8.362071,9.627911,-1.962160,-9.561185,-5.217388,-0.057392,1.144880,9.508432,7.599730,-8.607181]], dtype = "float32")#candidate|2315|(14, 52)|const|float32
call_2314 = relay.TupleGetItem(func_1962_call(relay.reshape(const_2315.astype('float32'), [4, 13, 14])), 1)
call_2316 = relay.TupleGetItem(func_1965_call(relay.reshape(const_2315.astype('float32'), [4, 13, 14])), 1)
output = relay.Tuple([bop_2290,call_2314,const_2315,])
output2 = relay.Tuple([bop_2290,call_2316,const_2315,])
func_2332 = relay.Function([var_2288,var_2289,], output)
mod['func_2332'] = func_2332
mod = relay.transform.InferType()(mod)
var_2333 = relay.var("var_2333", dtype = "int16", shape = (10, 6, 3))#candidate|2333|(10, 6, 3)|var|int16
var_2334 = relay.var("var_2334", dtype = "int16", shape = (10, 6, 3))#candidate|2334|(10, 6, 3)|var|int16
output = func_2332(var_2333,var_2334,)
func_2335 = relay.Function([var_2333,var_2334,], output)
mutated_mod['func_2335'] = func_2335
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2342 = relay.var("var_2342", dtype = "float64", shape = (14, 8, 14))#candidate|2342|(14, 8, 14)|var|float64
uop_2343 = relay.rsqrt(var_2342.astype('float64')) # shape=(14, 8, 14)
output = relay.Tuple([uop_2343,])
output2 = relay.Tuple([uop_2343,])
func_2355 = relay.Function([var_2342,], output)
mod['func_2355'] = func_2355
mod = relay.transform.InferType()(mod)
var_2356 = relay.var("var_2356", dtype = "float64", shape = (14, 8, 14))#candidate|2356|(14, 8, 14)|var|float64
output = func_2355(var_2356)
func_2357 = relay.Function([var_2356], output)
mutated_mod['func_2357'] = func_2357
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2603 = relay.const([[[-8.463123,5.855451],[-4.393840,-9.774769],[1.978361,-3.523512],[7.543204,6.182198],[9.159556,3.279150],[-3.468010,-4.634665],[-0.164267,-8.068832],[-4.050604,8.226205]],[[-0.458937,6.936599],[-4.572826,2.606956],[-5.957778,3.124797],[-5.952425,5.504979],[-8.345116,-8.766458],[-3.738600,3.472329],[6.729644,-5.415372],[4.497549,2.505524]],[[-1.093420,-9.275730],[-5.138623,-5.632413],[2.988792,2.867265],[-6.930937,9.792275],[2.312430,8.810689],[1.540779,-0.041900],[7.301514,-8.993510],[-3.706983,-8.642998]],[[-6.925166,7.529226],[1.800672,2.551505],[-0.643306,-6.971867],[3.342823,4.105492],[9.524562,6.427452],[-9.279167,-3.148584],[-8.035886,-7.450982],[-2.681914,8.168912]],[[-3.861017,4.759641],[-4.864930,-5.700451],[6.227158,8.903784],[9.593448,-5.372161],[1.032221,2.795266],[2.863024,7.048529],[-7.746838,2.446045],[8.970468,0.093860]],[[8.914630,4.459548],[4.143501,-5.911080],[-3.503700,-3.089120],[3.850614,-7.302093],[-2.728088,-6.732259],[9.401234,8.267935],[6.682224,-7.568701],[2.315611,-3.089410]],[[9.047060,-8.921557],[-2.921627,1.262893],[-5.080621,-6.240378],[-1.686863,-5.699975],[-9.183399,4.436149],[3.000738,6.364655],[7.917331,5.326587],[1.459951,0.524575]],[[9.970753,0.131307],[7.676650,-6.022567],[-1.082483,2.782018],[7.289883,1.718621],[-8.963327,-8.063244],[1.677791,-3.175944],[2.001605,7.564421],[-2.057267,1.234876]]], dtype = "float64")#candidate|2603|(8, 8, 2)|const|float64
uop_2604 = relay.asin(const_2603.astype('float64')) # shape=(8, 8, 2)
func_1592_call = mod.get_global_var('func_1592')
func_1597_call = mutated_mod.get_global_var('func_1597')
var_2611 = relay.var("var_2611", dtype = "float32", shape = (1, 1287))#candidate|2611|(1, 1287)|var|float32
var_2612 = relay.var("var_2612", dtype = "float32", shape = (480,))#candidate|2612|(480,)|var|float32
var_2613 = relay.var("var_2613", dtype = "uint64", shape = (672,))#candidate|2613|(672,)|var|uint64
var_2614 = relay.var("var_2614", dtype = "float32", shape = (180,))#candidate|2614|(180,)|var|float32
call_2610 = relay.TupleGetItem(func_1592_call(relay.reshape(var_2611.astype('float32'), [9, 11, 13]), relay.reshape(var_2612.astype('float32'), [120, 4]), relay.reshape(var_2613.astype('uint64'), [672,]), relay.reshape(var_2614.astype('float32'), [3, 60]), ), 4)
call_2615 = relay.TupleGetItem(func_1597_call(relay.reshape(var_2611.astype('float32'), [9, 11, 13]), relay.reshape(var_2612.astype('float32'), [120, 4]), relay.reshape(var_2613.astype('uint64'), [672,]), relay.reshape(var_2614.astype('float32'), [3, 60]), ), 4)
output = relay.Tuple([uop_2604,call_2610,var_2611,var_2612,var_2613,var_2614,])
output2 = relay.Tuple([uop_2604,call_2615,var_2611,var_2612,var_2613,var_2614,])
func_2618 = relay.Function([var_2611,var_2612,var_2613,var_2614,], output)
mod['func_2618'] = func_2618
mod = relay.transform.InferType()(mod)
var_2619 = relay.var("var_2619", dtype = "float32", shape = (1, 1287))#candidate|2619|(1, 1287)|var|float32
var_2620 = relay.var("var_2620", dtype = "float32", shape = (480,))#candidate|2620|(480,)|var|float32
var_2621 = relay.var("var_2621", dtype = "uint64", shape = (672,))#candidate|2621|(672,)|var|uint64
var_2622 = relay.var("var_2622", dtype = "float32", shape = (180,))#candidate|2622|(180,)|var|float32
output = func_2618(var_2619,var_2620,var_2621,var_2622,)
func_2623 = relay.Function([var_2619,var_2620,var_2621,var_2622,], output)
mutated_mod['func_2623'] = func_2623
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2628 = relay.var("var_2628", dtype = "float32", shape = (1, 8, 6))#candidate|2628|(1, 8, 6)|var|float32
uop_2629 = relay.sinh(var_2628.astype('float32')) # shape=(1, 8, 6)
bop_2633 = relay.floor_divide(uop_2629.astype('float64'), relay.reshape(var_2628.astype('float64'), relay.shape_of(uop_2629))) # shape=(1, 8, 6)
bop_2638 = relay.logical_and(bop_2633.astype('bool'), relay.reshape(uop_2629.astype('bool'), relay.shape_of(bop_2633))) # shape=(1, 8, 6)
uop_2649 = relay.asin(var_2628.astype('float32')) # shape=(1, 8, 6)
func_2332_call = mod.get_global_var('func_2332')
func_2335_call = mutated_mod.get_global_var('func_2335')
var_2655 = relay.var("var_2655", dtype = "int16", shape = (1, 180))#candidate|2655|(1, 180)|var|int16
call_2654 = relay.TupleGetItem(func_2332_call(relay.reshape(var_2655.astype('int16'), [10, 6, 3]), relay.reshape(var_2655.astype('int16'), [10, 6, 3]), ), 2)
call_2656 = relay.TupleGetItem(func_2335_call(relay.reshape(var_2655.astype('int16'), [10, 6, 3]), relay.reshape(var_2655.astype('int16'), [10, 6, 3]), ), 2)
output = relay.Tuple([bop_2638,uop_2649,call_2654,var_2655,])
output2 = relay.Tuple([bop_2638,uop_2649,call_2656,var_2655,])
func_2657 = relay.Function([var_2628,var_2655,], output)
mod['func_2657'] = func_2657
mod = relay.transform.InferType()(mod)
var_2658 = relay.var("var_2658", dtype = "float32", shape = (1, 8, 6))#candidate|2658|(1, 8, 6)|var|float32
var_2659 = relay.var("var_2659", dtype = "int16", shape = (1, 180))#candidate|2659|(1, 180)|var|int16
output = func_2657(var_2658,var_2659,)
func_2660 = relay.Function([var_2658,var_2659,], output)
mutated_mod['func_2660'] = func_2660
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2792 = relay.var("var_2792", dtype = "float32", shape = (14, 15, 10))#candidate|2792|(14, 15, 10)|var|float32
uop_2793 = relay.atanh(var_2792.astype('float32')) # shape=(14, 15, 10)
output = uop_2793
output2 = uop_2793
func_2796 = relay.Function([var_2792,], output)
mod['func_2796'] = func_2796
mod = relay.transform.InferType()(mod)
mutated_mod['func_2796'] = func_2796
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2797 = relay.var("var_2797", dtype = "float32", shape = (14, 15, 10))#candidate|2797|(14, 15, 10)|var|float32
func_2796_call = mutated_mod.get_global_var('func_2796')
call_2798 = func_2796_call(var_2797)
output = call_2798
func_2799 = relay.Function([var_2797], output)
mutated_mod['func_2799'] = func_2799
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2926 = relay.var("var_2926", dtype = "float64", shape = (6, 2, 11))#candidate|2926|(6, 2, 11)|var|float64
uop_2927 = relay.atan(var_2926.astype('float64')) # shape=(6, 2, 11)
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
var_2933 = relay.var("var_2933", dtype = "float32", shape = (180, 1))#candidate|2933|(180, 1)|var|float32
call_2932 = func_1329_call(relay.reshape(var_2933.astype('float32'), [2, 10, 9]))
call_2934 = func_1329_call(relay.reshape(var_2933.astype('float32'), [2, 10, 9]))
output = relay.Tuple([uop_2927,call_2932,var_2933,])
output2 = relay.Tuple([uop_2927,call_2934,var_2933,])
func_2942 = relay.Function([var_2926,var_2933,], output)
mod['func_2942'] = func_2942
mod = relay.transform.InferType()(mod)
mutated_mod['func_2942'] = func_2942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2942_call = mutated_mod.get_global_var('func_2942')
var_2944 = relay.var("var_2944", dtype = "float64", shape = (6, 2, 11))#candidate|2944|(6, 2, 11)|var|float64
var_2945 = relay.var("var_2945", dtype = "float32", shape = (180, 1))#candidate|2945|(180, 1)|var|float32
call_2943 = func_2942_call(var_2944,var_2945,)
output = call_2943
func_2946 = relay.Function([var_2944,var_2945,], output)
mutated_mod['func_2946'] = func_2946
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2988 = relay.var("var_2988", dtype = "uint8", shape = (11, 5, 9))#candidate|2988|(11, 5, 9)|var|uint8
var_2989 = relay.var("var_2989", dtype = "uint8", shape = (11, 5, 9))#candidate|2989|(11, 5, 9)|var|uint8
bop_2990 = relay.bitwise_xor(var_2988.astype('uint8'), relay.reshape(var_2989.astype('uint8'), relay.shape_of(var_2988))) # shape=(11, 5, 9)
bop_3015 = relay.greater_equal(bop_2990.astype('bool'), relay.reshape(var_2989.astype('bool'), relay.shape_of(bop_2990))) # shape=(11, 5, 9)
uop_3019 = relay.log2(bop_3015.astype('float32')) # shape=(11, 5, 9)
output = uop_3019
output2 = uop_3019
func_3027 = relay.Function([var_2988,var_2989,], output)
mod['func_3027'] = func_3027
mod = relay.transform.InferType()(mod)
var_3028 = relay.var("var_3028", dtype = "uint8", shape = (11, 5, 9))#candidate|3028|(11, 5, 9)|var|uint8
var_3029 = relay.var("var_3029", dtype = "uint8", shape = (11, 5, 9))#candidate|3029|(11, 5, 9)|var|uint8
output = func_3027(var_3028,var_3029,)
func_3030 = relay.Function([var_3028,var_3029,], output)
mutated_mod['func_3030'] = func_3030
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3047 = relay.const(-8, dtype = "uint64")#candidate|3047|()|const|uint64
var_3048 = relay.var("var_3048", dtype = "uint64", shape = (5, 6, 1))#candidate|3048|(5, 6, 1)|var|uint64
bop_3049 = relay.less_equal(const_3047.astype('bool'), var_3048.astype('bool')) # shape=(5, 6, 1)
func_563_call = mod.get_global_var('func_563')
func_565_call = mutated_mod.get_global_var('func_565')
const_3056 = relay.const([6,-2,2,-5,6,-7,-8,-10,4,-10,-5,1,-6,4,6,2,1,-3,2,3,6,6,3,-5,-10,-7,7,-2,-4,-3,-10,-4,-1,-3,5,-10,-8,-6,-4,7,4,-9,-2,4,-7,-6,-3,9,7,6,-8,6,-3,-6,-3,-1,6,10,10,4,2,-4,10,7,-5,-3,9,8,2,-9,6,-2,9,-10,7,-8,-4,1,6,-3,-3,6,6,6,-8,2,6,-10,-7,7,6,2,8,6,-3,6,7,-10,6,10,-2,9,8,4,-2,9,4,8,7,7,2,8,5,-2,-5,-4,5,-6,5,-8,10,-2,1,8,3,7,-1,5,-4,-7,-9,7,-6,-5,-2,-9,10,-9,-3,-8,4,-2,-2,-1,5,-7,-8,-8,-9,9,-8,6,-10,-1,-3,9,-4,-2,-1,-3,10,-1,-4,5,6,7,-2,3,9,3,1,-1,5,9,6,-2,-4,7,4,3,5,3,4,-9,8,-5,6,-3,-9,6,-6,2,-1,-8,-10,-6,-3,-4,5,-8,-5,-3,10,3,10,-5,-8,-8,7,-6,9,5,1,6,5,10,-8,-3,8,-8,-3,-7,-3,10,3,10,-7,3,-6,-5,-5,-1,7,1,-9,-6,-5,5,-9,9,-2,5,4,9,-7,3,1,-4,9,4,8,4,4,-1,-6,-7,9,-8,-8,-5,3,-8,1,3,-1,9,8,1,3,-6,-2,7,-3,-4,-6,-7,-6,-3,8,6,4,9,9,3,3,10,2,-7,-4,7,2,9,2,-3,-8,10,-4,-4,-10,-4,-8,-10,-2,7,-10,6,-2,-9,6,5,-3,-8,5,-2,8,-9,8,9,8,8,2,-1,-8,9,6,-8,10,-8,7,-1,5,5,1,5,-2,7,-6,8,-1,-6,10,6,1,6,-3,6,1,3,-7,-1,-3,1,-7,1,-8,4,2,-10,3,4,-7,6,-4,-9,-1,-8,-7,2,-9,-3,-2,5,-7,9,-4,-6,5,-8,2,10,6,-8,10,-10,-4,6,-9,10,-9,-6,1,-4,5,-5,-9,-2,6,9,-1,5,-1,-9,-5,8,5,-6,7,5,4,-3,-7,-10,-7,9,10,-1,-6,-3,9,-6,7,-3,4,6,-9,2,4,-1,1,-8,5,-1,-2,-3,-8,-7,10,9,9,-1,6,6,-5,2,-8,-4,2,3,2,4,2,-4,3,-6,1,-3,-3,7,-8,2,1,-9,3,-4,-8,4,-10,-4,-4,-5,10,-1,9,-8,9,2,-8,-1,-3,-4,5,-4,-8,8,-1,-4,3,3,-5,8,3,-4,-1,1,-1,-8,5,-1,-2,-5,-6,-3,6,10,9,5,-9,2,-3,-7,-10,-1,9,-7,3,-2,-3,-9,-1,8,8,-1,-10,9,7,-10,-3,3,-4,-10,4,-7,7,4,4,7,5,1,2,-1,-9,8,-3,-1,1,4,-5,2,9,-9,8,-7,3,-2,-9,6,5,8,-2,3,-2,9,-1,9,-7,-1,4,9,7,2,4,3,-1,5,2,7,6,3,-8,-7,1,-9,-7,2,-10,7,-4,5,-3,-9,10,-1,3,-6,-8,-6,-1,4,5,-10,-10,-1,9,-8,-6,-7,4,-5,-4,9,-1,1,-10,-8,8,-2,-6,3,-10,-8,-9,-5,5,-9,8,-8,-1,-1,-3,7,-8,2,-3,1,-5,2,-6,-6,-6,7,-10,-2,-6,-5,-3,-2,3,-7,8,-2,9,-8,2,3,6,-1,-8,9,-8,-5,-7,4,-3,-8,10,-6,5,-3,6,2,-9,2,8,1,8,-8,5,6,-4,-8,6,5,-8,8,-6,7,5,-3,3,-10,-10,-7,-4,-2,9,3,4,7,-6,-5,7,-8,-3,7,4,8,-8,8,8,-10,-2,2,-3,-5,6,-3,-3,-5,-3,4], dtype = "uint64")#candidate|3056|(720,)|const|uint64
call_3055 = relay.TupleGetItem(func_563_call(relay.reshape(const_3056.astype('uint64'), [15, 6, 8])), 2)
call_3057 = relay.TupleGetItem(func_565_call(relay.reshape(const_3056.astype('uint64'), [15, 6, 8])), 2)
output = relay.Tuple([bop_3049,call_3055,const_3056,])
output2 = relay.Tuple([bop_3049,call_3057,const_3056,])
func_3058 = relay.Function([var_3048,], output)
mod['func_3058'] = func_3058
mod = relay.transform.InferType()(mod)
var_3059 = relay.var("var_3059", dtype = "uint64", shape = (5, 6, 1))#candidate|3059|(5, 6, 1)|var|uint64
output = func_3058(var_3059)
func_3060 = relay.Function([var_3059], output)
mutated_mod['func_3060'] = func_3060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3176 = relay.var("var_3176", dtype = "bool", shape = (13, 1))#candidate|3176|(13, 1)|var|bool
var_3177 = relay.var("var_3177", dtype = "bool", shape = (13, 1))#candidate|3177|(13, 1)|var|bool
bop_3178 = relay.logical_or(var_3176.astype('bool'), relay.reshape(var_3177.astype('bool'), relay.shape_of(var_3176))) # shape=(13, 1)
bop_3200 = relay.less(bop_3178.astype('bool'), relay.reshape(var_3177.astype('bool'), relay.shape_of(bop_3178))) # shape=(13, 1)
output = relay.Tuple([bop_3200,])
output2 = relay.Tuple([bop_3200,])
func_3206 = relay.Function([var_3176,var_3177,], output)
mod['func_3206'] = func_3206
mod = relay.transform.InferType()(mod)
var_3207 = relay.var("var_3207", dtype = "bool", shape = (13, 1))#candidate|3207|(13, 1)|var|bool
var_3208 = relay.var("var_3208", dtype = "bool", shape = (13, 1))#candidate|3208|(13, 1)|var|bool
output = func_3206(var_3207,var_3208,)
func_3209 = relay.Function([var_3207,var_3208,], output)
mutated_mod['func_3209'] = func_3209
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3327 = relay.var("var_3327", dtype = "float64", shape = (12, 3, 3))#candidate|3327|(12, 3, 3)|var|float64
uop_3328 = relay.asinh(var_3327.astype('float64')) # shape=(12, 3, 3)
func_2796_call = mod.get_global_var('func_2796')
func_2799_call = mutated_mod.get_global_var('func_2799')
var_3334 = relay.var("var_3334", dtype = "float32", shape = (2100,))#candidate|3334|(2100,)|var|float32
call_3333 = func_2796_call(relay.reshape(var_3334.astype('float32'), [14, 15, 10]))
call_3335 = func_2796_call(relay.reshape(var_3334.astype('float32'), [14, 15, 10]))
uop_3337 = relay.asin(uop_3328.astype('float64')) # shape=(12, 3, 3)
func_1671_call = mod.get_global_var('func_1671')
func_1675_call = mutated_mod.get_global_var('func_1675')
const_3342 = relay.const([-10,-9,-5,-6,4,10,1,-7,5,10,1,4,10,-1,4,-4,6,-5,-2,5,-10,7,-8,-4,4,-9,-8,4,-8,-8,1,-1,5,-8,-6,-2,10,10,2,1,7,-2,-2,2,1,6,-2,-1,-2,-4,1,-7,-3,-9,10,-4,-7,-2,3,10,-4,8,-3,2,5,4,-10,-7,9,-2,5,5,-10,-2,1,-9,-10,2,3,9,-8,5,5,4,7,2,-10,3,-6,-5,9,-3,-8,-4,-6,10,-7,5,7,7,-3,-6,-8,5,6,-10,-3,-7,5,-3,-4,7,7,5,-1,-10,1,-9,8,10,3,10,10,-6,-1,-6,-1,-6,4,4,4,-10,-1,4,3,5,4,4,5,1,-1,10,-1,-4,-8,10,4,8,1,7,8,1,-7,7,9,7,4,-3,4,10,6,5,-10,-7,7,-6,-4,-6,-4,-3,1,-2,-7,-8,2,2,-7,-8,-2,-7,-7,-3,-10,3,1,8,8,-7,-4,-6,2,-2,5,-8,-5,5,10,6,-6,-5,-7,-9,10,1,-10,10,-3,4,4,-6,-7,-4,8,6,-9,10,-3,-2,-6,8,-8,-1,3,-2,7,10,6,10,2,-7,-6,-6,10,1,10,4,-10,-10,2,1,-9,-1,3,-10,-7,5,-8,2,8,3,-5,-6,6,7,10,-5,-9,8,10,-8,-7,-10,-5,-2,-10,-10,6,9,6,9,-3,6,1,-3,-2,-7,5,3,-4,2,-3,-8,-2,2,2,-3,4,-7,3,-7,1,1,5,-6,2,4,2,-4,-8,2,6,5,7,8,-1,3,2,8,10,8,-3,7,4,-2,8,4,-1,7,-10,8,-1,-5,-4,2,-6,8,-5,-7,-6,3,2,9,8,-3,-2,-2,-1,8,10,3,-4,-7,6,8,-2,-8,-8,-10,-5,-7,-6,-10,5,-4,9,3,10,2,4,8], dtype = "uint32")#candidate|3342|(360,)|const|uint32
call_3341 = func_1671_call(relay.reshape(const_3342.astype('uint32'), [3, 8, 15]), relay.reshape(const_3342.astype('uint32'), [3, 8, 15]), )
call_3343 = func_1671_call(relay.reshape(const_3342.astype('uint32'), [3, 8, 15]), relay.reshape(const_3342.astype('uint32'), [3, 8, 15]), )
output = relay.Tuple([call_3333,var_3334,uop_3337,call_3341,const_3342,])
output2 = relay.Tuple([call_3335,var_3334,uop_3337,call_3343,const_3342,])
func_3372 = relay.Function([var_3327,var_3334,], output)
mod['func_3372'] = func_3372
mod = relay.transform.InferType()(mod)
mutated_mod['func_3372'] = func_3372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3372_call = mutated_mod.get_global_var('func_3372')
var_3374 = relay.var("var_3374", dtype = "float64", shape = (12, 3, 3))#candidate|3374|(12, 3, 3)|var|float64
var_3375 = relay.var("var_3375", dtype = "float32", shape = (2100,))#candidate|3375|(2100,)|var|float32
call_3373 = func_3372_call(var_3374,var_3375,)
output = call_3373
func_3376 = relay.Function([var_3374,var_3375,], output)
mutated_mod['func_3376'] = func_3376
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3378 = relay.var("var_3378", dtype = "float32", shape = (3, 2, 9))#candidate|3378|(3, 2, 9)|var|float32
var_3379 = relay.var("var_3379", dtype = "float32", shape = (3, 2, 9))#candidate|3379|(3, 2, 9)|var|float32
bop_3380 = relay.floor_divide(var_3378.astype('float32'), relay.reshape(var_3379.astype('float32'), relay.shape_of(var_3378))) # shape=(3, 2, 9)
output = bop_3380
output2 = bop_3380
func_3388 = relay.Function([var_3378,var_3379,], output)
mod['func_3388'] = func_3388
mod = relay.transform.InferType()(mod)
var_3389 = relay.var("var_3389", dtype = "float32", shape = (3, 2, 9))#candidate|3389|(3, 2, 9)|var|float32
var_3390 = relay.var("var_3390", dtype = "float32", shape = (3, 2, 9))#candidate|3390|(3, 2, 9)|var|float32
output = func_3388(var_3389,var_3390,)
func_3391 = relay.Function([var_3389,var_3390,], output)
mutated_mod['func_3391'] = func_3391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3463 = relay.var("var_3463", dtype = "float32", shape = (9, 8, 9))#candidate|3463|(9, 8, 9)|var|float32
uop_3464 = relay.cos(var_3463.astype('float32')) # shape=(9, 8, 9)
bop_3471 = relay.less(uop_3464.astype('bool'), relay.reshape(var_3463.astype('bool'), relay.shape_of(uop_3464))) # shape=(9, 8, 9)
bop_3474 = relay.less_equal(var_3463.astype('bool'), relay.reshape(bop_3471.astype('bool'), relay.shape_of(var_3463))) # shape=(9, 8, 9)
func_3058_call = mod.get_global_var('func_3058')
func_3060_call = mutated_mod.get_global_var('func_3060')
const_3482 = relay.const([1,-9,7,3,3,-3,6,1,-7,-4,-8,-10,2,-2,-2,4,4,2,-1,-1,7,-3,8,-4,6,6,10,-9,-7,9], dtype = "uint64")#candidate|3482|(30,)|const|uint64
call_3481 = relay.TupleGetItem(func_3058_call(relay.reshape(const_3482.astype('uint64'), [5, 6, 1])), 1)
call_3483 = relay.TupleGetItem(func_3060_call(relay.reshape(const_3482.astype('uint64'), [5, 6, 1])), 1)
const_3485 = relay.const([[[-1.046681,-7.696776,9.051858,8.214265,8.482215,-0.742986,0.436879,-1.356739,-5.245544],[6.058950,6.812601,8.047976,9.945991,-4.463944,5.553329,9.343840,6.159816,-6.509695],[-2.495411,-8.232836,-2.057465,-3.587240,-9.940366,-2.834647,-6.171648,-4.310993,9.205243],[3.917079,-9.546014,-7.117413,3.806193,-4.751652,7.306385,-1.754108,-1.249201,7.688296],[2.166068,-0.482990,7.774982,-2.451325,-1.914782,8.556191,-1.620167,6.102601,-1.975180],[5.708636,2.716462,1.489271,-2.230442,9.823223,-6.896516,6.174273,-4.740720,2.133569],[-3.928016,0.374727,-0.416543,-6.729726,-1.588263,1.175214,-2.094092,-4.663177,-6.030945],[-0.714326,8.567478,2.740327,2.976428,-2.343010,5.317957,4.497575,5.630285,-4.249571]],[[4.930004,2.973263,-2.490052,-1.099988,0.216330,1.087753,-9.577446,-5.558792,1.950931],[2.271317,-0.675916,-1.379610,0.871897,3.929612,4.496835,-2.294098,-3.785441,-3.480495],[2.937526,8.748414,1.148860,-7.565747,4.827068,-6.412460,9.864342,9.345761,5.875032],[7.789029,6.785187,7.591777,-5.238956,6.937383,5.279221,-0.834291,-0.239097,1.764220],[-3.248604,-6.639609,-3.113514,-7.974702,-4.272060,6.283844,4.773187,2.779687,2.385061],[2.116621,-3.487711,8.741364,-0.655944,-1.633947,3.626170,8.462143,-1.454301,6.998227],[-2.358911,-9.072946,4.542790,-6.670553,-9.237556,1.645207,-6.051959,8.895430,6.046144],[8.472805,-2.482046,6.647262,6.540937,8.087755,-8.042917,1.598331,-9.915515,3.727488]],[[5.240927,7.746923,8.973638,-2.726788,1.302474,1.799362,-9.926315,7.504050,-0.482987],[-5.932872,0.163549,4.947753,2.303790,-9.479343,-0.601392,1.714291,6.818970,9.818458],[-7.185287,-5.396791,-8.730064,-0.677053,-5.924402,0.986636,-0.263918,5.309380,-3.675078],[3.855125,0.559899,4.240376,-7.644606,0.572251,0.435472,-8.971997,-5.282263,-7.380762],[-7.424132,5.652552,-3.317881,-3.815142,8.296209,-9.878359,-2.536738,3.919836,2.422296],[-9.978070,7.927725,5.711806,-4.380964,-1.478623,-7.855986,1.631053,-1.170296,-4.320304],[-3.176227,5.357257,-0.254109,2.082415,-3.775842,-9.921638,2.940896,0.098928,-9.841415],[-1.337984,-1.040822,-8.083176,9.570445,-5.974468,-4.944125,-1.443001,7.585065,-0.222729]],[[5.974433,-6.484490,-4.820577,0.203256,9.218879,4.150346,7.518178,4.655254,-6.960929],[-7.087223,0.756448,0.410878,2.491866,-6.822513,-1.784049,-1.964823,-9.886571,8.063483],[8.747348,5.289136,0.551547,4.434237,-2.267748,-1.987971,-7.093051,-4.670023,3.846803],[4.996541,5.398283,5.521748,1.526156,9.295893,3.472962,-4.700479,2.498237,7.304468],[-9.958361,1.622590,0.706169,-8.839827,-3.479337,-9.791259,-8.553895,8.723020,2.818989],[7.093096,-6.913886,5.479535,1.308935,8.393832,7.775158,1.095017,1.564376,-3.714600],[0.315270,-7.694697,0.376341,2.030731,-9.008027,3.606060,-9.079031,-9.604700,8.716649],[-9.379877,-7.288259,9.435277,-8.344659,5.780099,7.379618,1.253640,-2.363207,-0.124352]],[[-0.141696,-7.806212,-4.719643,-7.333571,-7.270770,-6.187706,-0.825893,1.762762,-3.112083],[-2.967427,0.252295,-0.735525,1.639011,9.379778,7.455594,1.406993,-9.112736,-3.525907],[4.831246,9.318463,-7.521816,5.149608,-2.379432,4.819940,2.046598,1.502377,5.465586],[1.492279,9.600932,6.533122,6.097835,-6.960588,-0.205322,-8.749796,-4.063467,9.825870],[6.833747,6.666213,1.736003,-0.249064,6.355763,-2.287185,5.789863,1.211547,-9.015182],[6.512512,-5.896816,9.988802,7.778427,-9.262038,3.723591,-5.539031,1.053299,-2.113102],[-7.789614,8.860334,2.451700,-7.573409,-9.229245,0.482127,-9.423159,-1.745643,8.347683],[8.054002,2.993909,-5.670238,-9.184257,-7.314647,-5.575902,-7.651317,3.328050,-6.910642]],[[5.312498,-0.716880,2.380814,5.350717,-8.529677,-9.910981,8.554017,-6.901098,9.196059],[-5.791856,4.709408,1.208374,8.122645,-2.652020,-0.355872,7.417852,-3.056195,5.056296],[-5.148955,1.420805,-9.593714,-4.590907,-4.495564,-1.541018,9.287751,7.576648,9.764799],[-5.107624,-2.114191,-4.915778,-9.869383,2.968477,9.699563,-8.191635,8.995137,-7.411487],[0.971117,5.801453,-1.425579,9.071798,-6.233930,-1.633349,-6.050059,5.817548,-7.356189],[7.511833,8.498120,4.258207,6.519212,-9.002899,5.320061,-7.478624,3.398378,-2.514749],[0.867579,3.615439,-3.696077,-7.808783,6.820885,-8.969833,9.628577,-6.656166,-8.459284],[8.069764,4.470509,-1.366904,-1.454160,1.774461,-5.535930,3.343540,1.562354,-0.771737]],[[0.508975,-6.765858,-9.104602,-7.412277,-7.015185,-3.567523,-4.575084,-0.153875,-8.325917],[-7.531942,0.034755,-8.020668,-5.317783,-7.052558,8.116133,0.701629,5.263763,3.590525],[-9.468221,6.752901,-9.135440,3.954570,7.879794,-5.377445,-9.777323,-5.565201,-7.356006],[-7.387066,2.654299,-2.749575,5.527347,7.739745,-8.672469,-8.493053,-3.007356,8.495248],[4.122426,6.807212,0.767945,-6.841012,-9.432930,0.960593,-5.387120,1.214910,-3.002944],[-4.713133,-3.652389,-0.184305,-3.308054,7.888389,-1.845438,7.395699,-1.919265,-5.587224],[-8.558745,2.087952,-9.610778,7.655013,-1.163216,-1.663878,-3.305101,-3.883301,-1.163574],[9.651048,4.686249,6.350006,-9.280922,-6.392978,5.930444,-1.255034,7.051988,-1.864048]],[[-7.766358,-6.200477,0.398211,-6.572943,4.201148,-9.091825,3.708678,-7.882176,-0.264655],[0.702930,-1.358926,1.460272,-4.283490,8.105480,-8.544170,0.180018,3.868697,4.734840],[-1.830836,7.290764,3.166302,0.074076,4.034596,2.844647,2.987499,-2.868709,-1.159855],[2.540701,4.035070,8.748130,6.914749,2.367674,-8.499286,9.314331,-5.627594,0.568477],[-5.399767,-5.057678,-2.720234,3.537627,-9.724566,-5.144375,-4.957248,-9.453250,-6.988263],[0.068891,-6.063879,0.838851,9.928890,-0.439829,9.874258,3.071388,-4.129712,3.286952],[-1.573470,1.194169,2.996492,4.589130,5.334131,4.507395,9.603093,3.985002,0.202882],[8.852354,0.643770,-5.126313,9.412031,-3.419948,-1.619886,-2.558772,3.867058,2.511552]],[[3.446852,-7.696696,-9.981894,8.688802,-1.873839,-0.685586,5.691296,-7.441359,9.013513],[8.638736,5.001521,-5.185922,6.355402,-8.345068,-4.470037,1.852661,-8.441232,1.876423],[-7.958449,5.028687,0.830744,-2.048850,8.826483,-8.514319,-8.440665,1.007699,8.335951],[2.128342,-9.143493,6.550667,9.622675,9.288888,-9.039975,1.669454,4.994327,5.104463],[-7.181233,4.013757,6.514135,-8.347770,1.419953,5.001757,7.215885,8.876820,-0.858060],[2.140753,-9.459776,0.228120,7.133950,2.635178,7.194652,2.361872,-8.425745,7.948103],[-6.560054,1.537710,9.244353,3.454334,2.725606,3.719021,1.678261,-3.175543,7.085685],[3.113524,-5.037017,0.451088,7.197359,8.549852,7.445837,1.417004,-0.682288,3.963114]]], dtype = "float32")#candidate|3485|(9, 8, 9)|const|float32
bop_3486 = relay.floor_divide(var_3463.astype('float32'), relay.reshape(const_3485.astype('float32'), relay.shape_of(var_3463))) # shape=(9, 8, 9)
func_3372_call = mod.get_global_var('func_3372')
func_3376_call = mutated_mod.get_global_var('func_3376')
const_3512 = relay.const([-8.847365,5.495581,6.595021,-0.204480,0.940828,-1.514675,7.536855,-9.776746,-5.829110,9.920819,-8.697827,-5.436855,-7.111884,5.758621,9.973256,-9.295697,-6.168171,-4.732063,-0.441200,-7.536695,-1.560085,-5.450633,-9.737206,7.135855,8.573714,-9.931338,6.831350,-6.165999,1.322427,4.544100,7.477826,-5.967943,-3.601719,-4.254271,5.842754,-7.774257,7.217501,-7.708872,4.764423,-0.364624,-8.643073,-1.186256,-3.018556,5.654980,7.037694,-4.229320,9.003010,-2.939119,-1.277549,-2.573442,-5.176217,6.605807,5.122968,7.566855,7.398550,-3.071670,-2.381955,9.089024,8.883834,1.583912,-6.306190,7.294317,-2.340528,4.456668,-9.802772,0.112496,-0.542515,1.358629,-5.457808,9.793066,-0.790360,2.681370,-6.094713,0.261905,-0.594418,-1.605308,4.282333,-8.231295,-1.566448,-4.855886,9.889108,6.124927,-9.908264,-2.738236,4.575015,7.157383,9.021915,9.617093,4.963387,8.582475,5.724093,-0.982027,8.089470,-5.030522,-2.018058,7.542023,-2.128378,-4.458102,8.397006,3.299622,-3.952915,-2.302710,-0.346281,6.698107,7.782042,0.946923,2.658379,5.139962], dtype = "float64")#candidate|3512|(108,)|const|float64
var_3513 = relay.var("var_3513", dtype = "float32", shape = (2100,))#candidate|3513|(2100,)|var|float32
call_3511 = relay.TupleGetItem(func_3372_call(relay.reshape(const_3512.astype('float64'), [12, 3, 3]), relay.reshape(var_3513.astype('float32'), [2100,]), ), 2)
call_3514 = relay.TupleGetItem(func_3376_call(relay.reshape(const_3512.astype('float64'), [12, 3, 3]), relay.reshape(var_3513.astype('float32'), [2100,]), ), 2)
output = relay.Tuple([bop_3474,call_3481,const_3482,bop_3486,call_3511,const_3512,var_3513,])
output2 = relay.Tuple([bop_3474,call_3483,const_3482,bop_3486,call_3514,const_3512,var_3513,])
func_3526 = relay.Function([var_3463,var_3513,], output)
mod['func_3526'] = func_3526
mod = relay.transform.InferType()(mod)
var_3527 = relay.var("var_3527", dtype = "float32", shape = (9, 8, 9))#candidate|3527|(9, 8, 9)|var|float32
var_3528 = relay.var("var_3528", dtype = "float32", shape = (2100,))#candidate|3528|(2100,)|var|float32
output = func_3526(var_3527,var_3528,)
func_3529 = relay.Function([var_3527,var_3528,], output)
mutated_mod['func_3529'] = func_3529
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3668 = relay.var("var_3668", dtype = "int16", shape = (13, 7, 13))#candidate|3668|(13, 7, 13)|var|int16
var_3669 = relay.var("var_3669", dtype = "int16", shape = (13, 7, 13))#candidate|3669|(13, 7, 13)|var|int16
bop_3670 = relay.greater_equal(var_3668.astype('bool'), relay.reshape(var_3669.astype('bool'), relay.shape_of(var_3668))) # shape=(13, 7, 13)
output = bop_3670
output2 = bop_3670
func_3677 = relay.Function([var_3668,var_3669,], output)
mod['func_3677'] = func_3677
mod = relay.transform.InferType()(mod)
var_3678 = relay.var("var_3678", dtype = "int16", shape = (13, 7, 13))#candidate|3678|(13, 7, 13)|var|int16
var_3679 = relay.var("var_3679", dtype = "int16", shape = (13, 7, 13))#candidate|3679|(13, 7, 13)|var|int16
output = func_3677(var_3678,var_3679,)
func_3680 = relay.Function([var_3678,var_3679,], output)
mutated_mod['func_3680'] = func_3680
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3797 = relay.var("var_3797", dtype = "uint32", shape = (6, 4, 2))#candidate|3797|(6, 4, 2)|var|uint32
var_3798 = relay.var("var_3798", dtype = "uint32", shape = (6, 4, 2))#candidate|3798|(6, 4, 2)|var|uint32
bop_3799 = relay.maximum(var_3797.astype('uint32'), relay.reshape(var_3798.astype('uint32'), relay.shape_of(var_3797))) # shape=(6, 4, 2)
output = relay.Tuple([bop_3799,])
output2 = relay.Tuple([bop_3799,])
func_3810 = relay.Function([var_3797,var_3798,], output)
mod['func_3810'] = func_3810
mod = relay.transform.InferType()(mod)
mutated_mod['func_3810'] = func_3810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3810_call = mutated_mod.get_global_var('func_3810')
var_3812 = relay.var("var_3812", dtype = "uint32", shape = (6, 4, 2))#candidate|3812|(6, 4, 2)|var|uint32
var_3813 = relay.var("var_3813", dtype = "uint32", shape = (6, 4, 2))#candidate|3813|(6, 4, 2)|var|uint32
call_3811 = func_3810_call(var_3812,var_3813,)
output = call_3811
func_3814 = relay.Function([var_3812,var_3813,], output)
mutated_mod['func_3814'] = func_3814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3896 = relay.var("var_3896", dtype = "float32", shape = (11, 4, 2))#candidate|3896|(11, 4, 2)|var|float32
uop_3897 = relay.asin(var_3896.astype('float32')) # shape=(11, 4, 2)
func_2942_call = mod.get_global_var('func_2942')
func_2946_call = mutated_mod.get_global_var('func_2946')
var_3903 = relay.var("var_3903", dtype = "float64", shape = (132,))#candidate|3903|(132,)|var|float64
var_3904 = relay.var("var_3904", dtype = "float32", shape = (180,))#candidate|3904|(180,)|var|float32
call_3902 = relay.TupleGetItem(func_2942_call(relay.reshape(var_3903.astype('float64'), [6, 2, 11]), relay.reshape(var_3904.astype('float32'), [180, 1]), ), 0)
call_3905 = relay.TupleGetItem(func_2946_call(relay.reshape(var_3903.astype('float64'), [6, 2, 11]), relay.reshape(var_3904.astype('float32'), [180, 1]), ), 0)
bop_3906 = relay.greater_equal(uop_3897.astype('bool'), relay.reshape(var_3896.astype('bool'), relay.shape_of(uop_3897))) # shape=(11, 4, 2)
bop_3910 = relay.mod(uop_3897.astype('float32'), relay.reshape(bop_3906.astype('float32'), relay.shape_of(uop_3897))) # shape=(11, 4, 2)
output = relay.Tuple([call_3902,var_3903,var_3904,bop_3910,])
output2 = relay.Tuple([call_3905,var_3903,var_3904,bop_3910,])
func_3913 = relay.Function([var_3896,var_3903,var_3904,], output)
mod['func_3913'] = func_3913
mod = relay.transform.InferType()(mod)
mutated_mod['func_3913'] = func_3913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3913_call = mutated_mod.get_global_var('func_3913')
var_3915 = relay.var("var_3915", dtype = "float32", shape = (11, 4, 2))#candidate|3915|(11, 4, 2)|var|float32
var_3916 = relay.var("var_3916", dtype = "float64", shape = (132,))#candidate|3916|(132,)|var|float64
var_3917 = relay.var("var_3917", dtype = "float32", shape = (180,))#candidate|3917|(180,)|var|float32
call_3914 = func_3913_call(var_3915,var_3916,var_3917,)
output = call_3914
func_3918 = relay.Function([var_3915,var_3916,var_3917,], output)
mutated_mod['func_3918'] = func_3918
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4027 = relay.var("var_4027", dtype = "int16", shape = ())#candidate|4027|()|var|int16
var_4028 = relay.var("var_4028", dtype = "int16", shape = (1, 5, 9))#candidate|4028|(1, 5, 9)|var|int16
bop_4029 = relay.subtract(var_4027.astype('int16'), var_4028.astype('int16')) # shape=(1, 5, 9)
func_3027_call = mod.get_global_var('func_3027')
func_3030_call = mutated_mod.get_global_var('func_3030')
var_4037 = relay.var("var_4037", dtype = "uint8", shape = (495,))#candidate|4037|(495,)|var|uint8
call_4036 = func_3027_call(relay.reshape(var_4037.astype('uint8'), [11, 5, 9]), relay.reshape(var_4037.astype('uint8'), [11, 5, 9]), )
call_4038 = func_3027_call(relay.reshape(var_4037.astype('uint8'), [11, 5, 9]), relay.reshape(var_4037.astype('uint8'), [11, 5, 9]), )
bop_4039 = relay.greater(call_4036.astype('bool'), bop_4029.astype('bool')) # shape=(11, 5, 9)
bop_4042 = relay.greater(call_4038.astype('bool'), bop_4029.astype('bool')) # shape=(11, 5, 9)
func_253_call = mod.get_global_var('func_253')
func_255_call = mutated_mod.get_global_var('func_255')
var_4046 = relay.var("var_4046", dtype = "float64", shape = (156,))#candidate|4046|(156,)|var|float64
call_4045 = func_253_call(relay.reshape(var_4046.astype('float64'), [6, 2, 13]))
call_4047 = func_253_call(relay.reshape(var_4046.astype('float64'), [6, 2, 13]))
output = relay.Tuple([var_4037,bop_4039,call_4045,var_4046,])
output2 = relay.Tuple([var_4037,bop_4042,call_4047,var_4046,])
func_4051 = relay.Function([var_4027,var_4028,var_4037,var_4046,], output)
mod['func_4051'] = func_4051
mod = relay.transform.InferType()(mod)
mutated_mod['func_4051'] = func_4051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mutated_mod.get_global_var('func_4051')
var_4053 = relay.var("var_4053", dtype = "int16", shape = ())#candidate|4053|()|var|int16
var_4054 = relay.var("var_4054", dtype = "int16", shape = (1, 5, 9))#candidate|4054|(1, 5, 9)|var|int16
var_4055 = relay.var("var_4055", dtype = "uint8", shape = (495,))#candidate|4055|(495,)|var|uint8
var_4056 = relay.var("var_4056", dtype = "float64", shape = (156,))#candidate|4056|(156,)|var|float64
call_4052 = func_4051_call(var_4053,var_4054,var_4055,var_4056,)
output = call_4052
func_4057 = relay.Function([var_4053,var_4054,var_4055,var_4056,], output)
mutated_mod['func_4057'] = func_4057
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4084 = relay.var("var_4084", dtype = "float64", shape = (16, 6, 12))#candidate|4084|(16, 6, 12)|var|float64
uop_4085 = relay.tan(var_4084.astype('float64')) # shape=(16, 6, 12)
output = uop_4085
output2 = uop_4085
func_4096 = relay.Function([var_4084,], output)
mod['func_4096'] = func_4096
mod = relay.transform.InferType()(mod)
var_4097 = relay.var("var_4097", dtype = "float64", shape = (16, 6, 12))#candidate|4097|(16, 6, 12)|var|float64
output = func_4096(var_4097)
func_4098 = relay.Function([var_4097], output)
mutated_mod['func_4098'] = func_4098
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4325 = relay.const([[[1.209923,8.855535,-3.217201,-2.819138,1.034988,6.404906,-1.117362,9.832315,-8.678363,5.275448,-8.321922],[4.863526,-8.323189,9.118100,9.506996,6.303110,4.624313,-6.485587,-6.188877,-2.091832,6.878926,4.418159],[-8.255157,-5.457391,-4.247503,2.957583,5.512436,6.435133,2.801278,9.498440,2.908574,0.063609,-0.752152],[1.460822,-4.402021,-5.296272,3.683379,-0.517433,-8.887029,-1.714968,-3.510617,9.645913,5.596328,7.868611],[-7.478061,9.981004,6.096201,-0.970099,-2.542666,5.539745,2.756929,2.122269,3.184830,-8.835017,-3.581054],[-6.038970,-3.514292,-5.190962,-5.971309,-4.599721,4.561516,8.672311,4.000028,-2.513299,9.669699,-1.267889],[8.622259,1.865357,7.604264,-3.916751,-6.081681,-4.823612,-0.042754,-2.235320,-8.286634,9.705035,-9.240089],[9.921963,-1.641815,-5.911569,6.148681,-5.027476,-1.798575,6.408561,5.473698,5.249258,-1.554244,0.668083],[-4.405665,-2.074726,-6.375442,-8.551573,-9.093958,-0.570281,3.064160,-1.403386,-6.299366,4.578321,-2.536568],[-7.093192,-5.658372,5.015486,-0.588239,-5.627087,6.755096,7.059578,-5.425106,-5.626624,8.485088,-5.692096],[0.306718,0.945446,9.955890,-5.058207,1.377187,-0.734483,-0.787216,1.531341,-5.273320,-5.493431,-0.220845],[7.350702,0.129208,8.490523,0.373404,-9.699004,-1.055556,-6.923803,-0.076987,6.686757,3.274950,-2.884626],[7.040429,-1.969316,4.875016,4.127443,5.079362,-3.705463,8.940248,6.325893,8.223196,5.891123,-0.440898],[-1.217811,2.346501,-4.242722,2.130156,-4.373224,-8.141707,-5.479102,9.505903,2.741157,-2.411453,-6.763457],[3.147903,-0.926300,5.163183,-8.159515,0.459010,-8.127589,-5.819882,-2.708809,3.842543,2.180745,4.903564],[8.085113,7.726815,2.050039,1.308726,1.930944,-0.613122,5.291092,-2.796990,2.553611,-6.652154,-6.886670]],[[-8.574011,-3.612243,4.138398,-3.763324,1.927408,-3.552062,-8.550342,1.964370,4.460647,7.527429,-5.361107],[5.932509,-4.425938,6.795421,-7.041125,-8.584106,-0.397621,4.954894,-9.839271,-3.775816,8.964161,-2.277955],[2.163617,5.248447,6.810040,-7.437738,-5.782423,-8.757136,-8.730462,6.628119,9.702319,6.366835,5.975578],[1.796282,-2.033559,3.128098,-5.240801,-7.039937,5.853844,-5.067935,-8.940058,8.780009,-9.164865,3.744679],[5.597060,-2.427917,-9.863510,-1.242404,-7.379546,1.608718,6.473697,-4.400706,1.098714,9.683402,8.262582],[8.195015,-0.581696,-2.217176,-1.768089,1.656510,-7.429011,-6.663561,-8.951662,-4.014641,-7.358728,9.682245],[5.746324,-9.971798,-9.220820,2.158417,7.064435,2.855092,1.393885,5.504411,-2.398235,5.473260,-3.819159],[5.359525,-0.796874,9.641746,-0.611656,3.388094,-0.605050,-5.868032,4.405336,-2.635782,-7.709476,6.945643],[4.040035,0.780132,7.075523,3.819540,-8.943038,-6.409798,-5.077982,2.049297,4.313695,-3.630410,-1.017866],[-5.473136,7.540570,0.011576,9.756945,8.281764,7.110616,-3.513727,-2.078160,-9.195738,-6.619323,2.564912],[-0.440176,7.624901,0.696962,9.241106,-6.925811,-9.807456,2.014336,1.175105,-3.425912,4.616586,7.840495],[-2.546100,7.007324,-6.627761,-5.442026,5.586881,2.617090,-4.495428,-2.472929,-7.255743,1.734017,-8.629490],[-3.539404,5.421239,6.084140,-4.321572,-3.110193,-9.401867,7.779029,-5.965324,-8.122471,-4.209370,-4.154577],[5.511897,7.312077,-1.176567,-9.346212,4.438668,-2.185007,9.726162,6.063488,2.034924,-5.454142,-8.946608],[-4.572305,5.354068,-7.980115,-9.369545,-6.386821,6.547758,-6.885157,8.151165,7.389140,9.610634,5.796531],[2.374216,9.510465,0.359365,-0.453138,0.793851,-6.972247,2.997866,5.309137,6.670801,2.067987,7.786724]],[[-1.466377,-8.906488,0.528849,-3.685102,-4.233000,5.439734,-0.163235,-7.510282,-4.689334,7.232074,-7.572481],[2.132053,0.793680,-8.568562,-4.718784,-4.521964,-2.993002,-0.096001,-1.755283,-5.880514,-1.357752,-9.101642],[-7.050015,1.180817,0.021311,2.252135,6.354820,7.641615,-8.395645,-5.685872,3.020041,4.627524,9.916606],[6.187047,-9.818997,2.830690,1.112828,2.192815,-3.592991,6.347349,-3.575565,1.570968,1.784553,-2.469254],[-5.453861,-9.417047,3.949703,8.065430,1.079962,-3.964599,3.848350,-7.490187,-8.430631,-9.720164,-4.606734],[-4.339449,2.482795,5.313797,-5.180641,-5.221088,-3.400010,-6.584813,-8.137024,-3.739941,-3.583014,-2.462051],[-3.561759,-7.843185,-5.568966,0.856048,-0.928546,2.592008,-8.836505,7.501764,-0.246767,4.989047,-7.145464],[-5.282555,-8.074320,7.533974,-8.734365,-2.493760,-6.667953,5.848014,9.542623,-1.407934,-1.810495,3.273371],[-6.882328,1.670140,-7.731425,5.873380,-2.297961,-0.191358,-6.581931,9.912531,5.272496,-7.668641,-1.492935],[-4.174889,-3.056520,-0.211306,1.443116,0.207946,-0.603533,-6.735141,-5.354263,4.290166,-3.852106,7.008567],[6.827569,7.879129,-8.254590,6.140889,9.972831,-2.370875,-8.665287,-1.617296,2.917474,2.315942,-6.306098],[-9.898004,6.304190,7.395948,3.382883,-0.333185,1.757003,9.087418,2.889771,-8.149542,4.046291,8.910832],[1.043239,9.125006,1.365464,-9.395230,-6.110124,-4.175978,7.383142,8.054931,-3.032075,0.693126,0.060874],[6.150096,5.939273,1.405001,8.031962,-3.528549,-8.636831,2.757702,-1.531648,3.624483,-6.796784,-3.143997],[2.357093,9.674395,-9.680961,2.437236,4.697214,-9.085193,7.660518,8.616129,-2.750620,4.653890,3.711853],[2.478952,8.938135,3.817121,-2.140019,7.883429,9.786213,-6.753942,3.929711,-3.338186,-4.404998,-6.813796]],[[-2.661461,-3.112535,2.596612,-2.378728,-0.310617,1.091551,-0.821476,-0.960835,-3.918475,3.087687,-8.800932],[3.196760,4.370359,-9.356492,6.124078,2.575512,9.328138,-5.069500,-7.201892,1.326655,-9.269476,-3.302614],[6.005703,-7.039188,-7.012948,-8.021765,8.069443,-8.695522,8.329606,-0.060218,5.336253,-1.893042,-1.945411],[-5.628224,5.155059,1.887071,-8.068653,7.618463,-5.853321,0.201859,1.791749,7.912909,-8.811948,7.354642],[3.558163,-0.801300,-6.727544,9.999994,2.214031,3.849962,3.227478,4.722890,-6.263216,-8.563892,-2.935352],[1.212841,2.735318,-4.307036,-0.404864,1.416816,8.893872,2.286413,-2.789728,-1.590709,-6.993994,7.236791],[6.619454,4.853450,5.768601,-9.615555,7.888846,0.719480,5.776966,-7.988019,7.884655,1.207650,6.893344],[-2.155181,4.278264,-0.961269,-5.753092,8.241894,-9.684386,4.350803,-4.103024,8.014141,6.642721,-7.012604],[-4.756256,9.124936,-8.183230,-8.398188,0.150319,-8.816102,-1.164839,-2.981621,-3.026994,-4.105379,-4.774321],[-4.127637,6.674370,-6.615124,-5.822786,9.828842,-0.243789,-4.792531,5.331557,-0.010538,-1.800153,6.735006],[5.148977,5.841103,-2.756005,-8.220341,-9.333733,1.009489,-7.886588,-7.193192,3.936020,2.305668,-2.847579],[-8.427194,4.375918,-2.998078,6.462432,-5.182241,0.440300,-9.998208,5.539805,-5.408232,7.455590,5.263278],[-4.209809,-1.592001,-3.843623,9.972098,-5.534739,-0.006904,-2.606987,2.329175,4.329418,7.817881,5.062946],[-3.544995,-1.120661,-5.329011,-5.033370,-4.827655,-1.066996,-5.217209,-1.952371,1.747018,-1.381719,-2.517189],[6.406677,-5.852346,6.450041,6.391462,-4.354853,9.433348,5.711590,-4.549951,-9.701010,-9.137668,-0.990188],[7.353727,-7.809867,0.046749,-5.585672,8.118114,5.547608,-4.600567,0.971265,2.859026,6.981545,1.578185]],[[2.351875,9.141218,-9.746122,-4.383256,-5.231745,7.089867,-1.870299,6.152768,6.773689,-8.019844,1.458820],[7.443424,9.666121,-0.048681,-2.360058,7.779821,0.946620,9.415265,-6.780033,-0.548219,4.154093,0.109061],[-0.469261,-0.630238,3.007876,-8.767617,-5.893023,-1.726838,1.939780,-5.910784,-8.162204,5.992352,-7.263469],[1.417312,-6.351037,-7.056498,0.305053,0.999099,-2.461784,4.949154,7.746418,-9.095884,-8.865778,6.884710],[2.258522,7.384533,7.641865,-2.069620,1.717489,-7.033578,0.364125,1.218276,-5.635323,6.282428,-3.555868],[-1.328460,-3.687948,6.902418,2.780746,-3.942204,5.216747,-8.656394,-3.008293,-6.221002,-1.665386,0.640849],[0.163229,7.976022,-3.821628,2.763012,5.658131,-1.924547,-5.075446,-5.202975,-5.682509,9.543015,-3.857537],[-7.552480,-9.972436,-1.020617,3.608643,-4.479503,-3.979886,-7.221561,-0.275124,-0.149607,6.365060,-1.850740],[-1.286718,-2.996148,1.525184,-6.359503,6.085966,7.004172,-8.603240,5.604403,4.270929,-3.283231,4.388988],[-8.173698,-8.579290,2.923998,8.464922,-7.496506,4.571607,-8.651914,-7.433558,-7.326909,9.939290,5.504170],[-9.581867,5.463848,-8.384113,0.054218,-9.117871,-0.373726,-7.825786,2.022784,6.942776,-4.932236,-2.367976],[1.490326,0.250088,-8.525452,1.402388,-7.804756,-2.832259,-2.103714,-5.329482,-6.164285,1.823596,4.500670],[7.969874,-9.969512,-5.130388,9.527911,4.212160,9.859388,-9.848375,-9.098651,3.808345,4.837965,-2.342689],[7.537297,-8.157754,-4.539014,-4.121917,9.760880,-8.344510,-7.607058,-2.306247,0.724409,-7.749101,0.688421],[-1.675961,6.682344,-1.163754,-9.960566,-0.288780,1.780840,6.928882,-6.709920,-9.730834,7.920496,9.113682],[4.194262,1.714791,-1.132420,-3.201864,3.157698,1.607865,-7.491201,8.155809,-0.324404,-0.980893,-4.577669]],[[8.716327,7.196512,6.911045,-2.607918,-3.766918,-2.133863,-2.278828,-1.948271,-2.690300,-0.118246,-0.953970],[-1.105765,5.030599,6.116064,-1.397924,0.282835,-8.464779,6.901859,-1.858889,5.022270,-4.261323,-3.876364],[-3.605788,1.897499,-7.937046,-7.379487,-7.170361,1.363463,8.223520,-4.003441,-1.533566,-7.103678,-2.844590],[-7.029166,0.373973,-3.498180,-6.264805,6.411179,5.116670,0.686286,-8.060879,-7.518214,-6.365087,-7.490090],[-9.180909,-3.348638,-3.054004,0.591010,-8.996492,6.570346,0.557351,0.003437,0.784286,-3.899955,8.054073],[-9.892375,5.367924,0.541565,-6.901462,-1.808133,-6.973262,-9.309268,0.592236,0.254864,7.323421,6.305661],[-4.611533,-5.596097,6.332524,-7.930446,9.836415,-7.099277,1.549325,-4.378701,9.013795,-7.095656,3.337349],[3.677745,5.324982,7.321279,7.243787,5.984112,0.005298,3.759539,6.818688,-6.570175,9.641104,4.640401],[-3.150791,-1.252805,-9.926208,2.788119,5.704638,-5.900050,1.488035,-6.424949,4.945881,2.883835,1.842513],[3.207727,-7.881777,6.073093,2.974006,6.763272,3.416195,8.123561,-0.026883,9.304227,7.720067,-3.468829],[9.059641,-9.475716,3.402589,-7.635059,-6.880006,4.298355,2.709323,-8.135843,4.281737,-3.166824,-4.086292],[6.050848,-9.719360,-6.995766,-4.665186,-4.084157,2.106767,-6.267447,-1.699000,-5.845197,8.758263,-7.767546],[-3.556202,9.081203,-5.927800,-8.255573,2.278296,1.658618,7.716197,-2.241674,2.946498,5.098183,4.252489],[7.490906,-0.414579,-1.831205,6.202368,-9.264565,-9.468414,8.579730,7.248652,2.076837,6.337966,-3.373281],[-5.882349,5.159089,-6.690130,3.951769,-0.941201,0.832255,-6.007386,-5.535262,-4.162874,4.634883,-9.351160],[8.381646,8.368384,1.671149,-0.074507,6.564620,-0.828250,-1.332710,4.536354,-9.162102,-3.747183,1.054501]],[[2.892262,-9.907785,-6.649565,-1.080282,-2.484483,3.843561,-4.567207,1.401265,-5.032821,-7.317761,0.257505],[4.527876,-4.652812,-5.092570,-1.590918,3.455180,-6.481142,8.835154,9.769725,8.961864,-7.767294,0.238740],[6.117753,1.853679,4.930781,-4.965368,-1.702224,-3.349391,2.293491,7.865469,-4.171623,-7.274075,-0.568911],[2.382687,8.001210,6.736741,8.212309,8.421932,9.718212,7.666211,-3.505102,9.125451,7.830557,2.875898],[2.681960,-1.830272,2.411285,-2.461566,8.732095,1.587722,-9.738279,-2.881163,-7.959367,4.556990,-5.870878],[-0.009972,-1.499563,5.007326,7.589525,9.294122,0.707636,-3.797315,-3.583919,-3.680710,3.413478,-4.986331],[-4.965275,6.203010,-2.136902,7.134010,5.943326,6.384876,4.101934,-8.075252,6.013476,7.727824,6.024611],[1.970047,-9.447434,5.399785,-9.634628,-2.640698,-5.906511,2.750203,-2.843961,9.808727,-1.404229,4.758713],[1.171759,0.421745,9.289711,4.004866,-9.887612,-9.171909,-2.680978,-7.992900,-4.827341,-8.316988,1.136491],[3.723640,-9.237606,2.830224,-9.287578,-3.471312,-8.157582,-0.008891,8.358917,6.866901,2.836908,-5.350374],[3.948734,-0.815892,9.815928,2.487716,-1.965534,-7.088793,2.086412,7.341950,5.753178,-1.317210,3.524943],[6.227931,-5.072704,6.190415,6.563309,-2.710585,-9.042972,-6.503178,7.821815,-6.638278,-5.201334,-4.819985],[9.940785,9.181000,0.229584,-3.759677,2.930850,0.944751,-6.386788,0.063312,0.525448,1.276689,-2.975176],[2.012498,3.103992,4.095269,9.975212,7.954371,0.832590,1.055632,-2.283366,-3.562489,9.847018,-7.004146],[-8.484314,3.828691,4.598220,7.854584,-0.733278,4.663370,6.506250,-5.187533,-9.881926,7.615912,-5.492695],[-9.493273,-6.369611,-6.405134,4.942423,-8.152102,-1.006520,6.015992,-1.428832,9.577658,0.131954,-3.048694]]], dtype = "float32")#candidate|4325|(7, 16, 11)|const|float32
uop_4326 = relay.log2(const_4325.astype('float32')) # shape=(7, 16, 11)
uop_4329 = relay.log(uop_4326.astype('float64')) # shape=(7, 16, 11)
func_3913_call = mod.get_global_var('func_3913')
func_3918_call = mutated_mod.get_global_var('func_3918')
var_4332 = relay.var("var_4332", dtype = "float32", shape = (88,))#candidate|4332|(88,)|var|float32
var_4333 = relay.var("var_4333", dtype = "float64", shape = (132,))#candidate|4333|(132,)|var|float64
var_4334 = relay.var("var_4334", dtype = "float32", shape = (180,))#candidate|4334|(180,)|var|float32
call_4331 = relay.TupleGetItem(func_3913_call(relay.reshape(var_4332.astype('float32'), [11, 4, 2]), relay.reshape(var_4333.astype('float64'), [132,]), relay.reshape(var_4334.astype('float32'), [180,]), ), 2)
call_4335 = relay.TupleGetItem(func_3918_call(relay.reshape(var_4332.astype('float32'), [11, 4, 2]), relay.reshape(var_4333.astype('float64'), [132,]), relay.reshape(var_4334.astype('float32'), [180,]), ), 2)
bop_4343 = relay.bitwise_xor(uop_4329.astype('uint64'), relay.reshape(const_4325.astype('uint64'), relay.shape_of(uop_4329))) # shape=(7, 16, 11)
uop_4346 = relay.sqrt(uop_4329.astype('float32')) # shape=(7, 16, 11)
func_2355_call = mod.get_global_var('func_2355')
func_2357_call = mutated_mod.get_global_var('func_2357')
var_4366 = relay.var("var_4366", dtype = "float64", shape = (4, 392))#candidate|4366|(4, 392)|var|float64
call_4365 = relay.TupleGetItem(func_2355_call(relay.reshape(var_4366.astype('float64'), [14, 8, 14])), 0)
call_4367 = relay.TupleGetItem(func_2357_call(relay.reshape(var_4366.astype('float64'), [14, 8, 14])), 0)
output = relay.Tuple([call_4331,var_4332,var_4333,var_4334,bop_4343,uop_4346,call_4365,var_4366,])
output2 = relay.Tuple([call_4335,var_4332,var_4333,var_4334,bop_4343,uop_4346,call_4367,var_4366,])
func_4368 = relay.Function([var_4332,var_4333,var_4334,var_4366,], output)
mod['func_4368'] = func_4368
mod = relay.transform.InferType()(mod)
mutated_mod['func_4368'] = func_4368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4368_call = mutated_mod.get_global_var('func_4368')
var_4370 = relay.var("var_4370", dtype = "float32", shape = (88,))#candidate|4370|(88,)|var|float32
var_4371 = relay.var("var_4371", dtype = "float64", shape = (132,))#candidate|4371|(132,)|var|float64
var_4372 = relay.var("var_4372", dtype = "float32", shape = (180,))#candidate|4372|(180,)|var|float32
var_4373 = relay.var("var_4373", dtype = "float64", shape = (4, 392))#candidate|4373|(4, 392)|var|float64
call_4369 = func_4368_call(var_4370,var_4371,var_4372,var_4373,)
output = call_4369
func_4374 = relay.Function([var_4370,var_4371,var_4372,var_4373,], output)
mutated_mod['func_4374'] = func_4374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4459 = relay.var("var_4459", dtype = "uint16", shape = (6, 4, 16))#candidate|4459|(6, 4, 16)|var|uint16
const_4460 = relay.const([[[-2,1,-7,6,7,5,-9,-7,-9,-7,-2,-6,-3,-5,-9,5],[9,-1,-4,-8,-4,-3,4,-9,4,-1,2,7,8,-2,-6,-8],[-4,-1,-7,-9,2,5,2,8,4,2,-7,-9,10,1,2,-1],[10,5,3,-10,6,10,1,-5,9,1,8,-10,3,4,-3,-2]],[[-9,10,-10,6,6,-5,-5,-4,-10,10,-4,6,-2,-5,-5,7],[1,-5,-8,7,8,2,4,6,2,-4,6,6,-8,4,5,9],[-7,-6,-7,10,9,-9,-10,9,-2,-8,2,-8,-4,-6,-2,-6],[-9,-5,-7,4,-6,1,9,-8,4,9,2,8,10,7,-9,2]],[[-5,-6,9,-10,-4,-3,-2,4,-8,4,2,8,-6,-5,-7,-2],[-1,7,-8,-5,8,7,-10,8,6,2,1,-2,-6,-1,4,-5],[2,5,9,-4,9,-6,2,6,3,-8,7,-3,-8,6,-8,5],[3,1,1,8,9,-6,6,-1,-2,-5,-10,4,5,-10,-10,-4]],[[-6,-6,2,-6,8,4,-5,-4,5,-8,2,-6,9,-9,-2,6],[7,6,8,2,3,-1,-4,-7,-8,5,4,-4,-7,6,3,-9],[5,-2,7,-8,-2,1,6,5,3,-2,1,-4,9,10,-1,4],[4,1,-10,2,-8,7,10,-7,-2,-2,7,3,-5,9,4,3]],[[9,-1,-3,-10,7,4,-7,-10,4,-4,-7,6,-2,7,-8,7],[-2,-6,-5,-5,-2,-2,4,8,4,-6,10,3,8,-9,-10,-4],[9,7,-4,6,5,-5,-10,4,6,6,-5,8,-9,-2,7,1],[-7,10,3,9,4,7,-8,7,-5,10,2,-5,-8,7,-2,1]],[[-9,3,7,-9,6,4,-1,10,5,-5,-1,-7,-7,6,5,1],[10,-5,5,-9,-2,-7,-5,-8,-10,-9,-5,-9,5,4,-5,-3],[8,-2,-1,-6,-6,-7,-3,-3,-10,-1,1,5,-7,5,3,-7],[-3,6,1,-1,6,-8,-3,-9,3,5,-3,-9,1,-4,-1,7]]], dtype = "uint16")#candidate|4460|(6, 4, 16)|const|uint16
bop_4461 = relay.less(var_4459.astype('bool'), relay.reshape(const_4460.astype('bool'), relay.shape_of(var_4459))) # shape=(6, 4, 16)
func_1592_call = mod.get_global_var('func_1592')
func_1597_call = mutated_mod.get_global_var('func_1597')
var_4467 = relay.var("var_4467", dtype = "float32", shape = (11, 117))#candidate|4467|(11, 117)|var|float32
const_4468 = relay.const([5.390314,-2.297462,0.412688,-9.806800,7.983862,-4.883956,-6.868929,3.480012,9.555747,3.529453,4.647488,-6.768360,-1.739812,-7.121281,-3.445830,7.801043,2.790586,-6.329266,-0.989962,-0.601320,-5.328460,-1.158038,2.962323,0.078298,-0.288789,7.168649,1.665062,3.712217,2.655891,4.899385,6.404506,7.501028,-4.129694,-4.987607,-4.039695,-8.729088,1.082994,-5.079009,-9.964832,0.470377,-4.200623,6.819629,4.204648,5.784553,-1.523211,-9.617619,4.920571,-9.004457,5.844583,-8.687634,-1.083383,-4.058786,9.538900,-8.122772,6.355499,3.140192,-3.682135,7.777280,7.816397,-0.624471,7.674668,-6.722693,0.228351,-8.086251,7.263976,-2.384688,9.767268,2.402439,4.034503,4.116066,-0.478156,-8.856635,6.545609,-9.708932,-8.483018,-8.111927,1.435669,-1.678348,-3.153693,2.973236,-0.920300,0.079012,1.223817,-9.362510,-3.804489,4.679967,-7.412498,-5.135983,0.174349,1.591526,2.174392,9.779880,-5.815631,5.091145,-2.396751,-4.743076,4.458166,-7.905930,-2.748263,9.263077,-8.066264,9.873679,4.318861,-2.103782,-1.295813,-2.050535,-8.364483,-7.294078,-1.745192,5.339933,3.919692,1.525402,8.285823,6.448561,-0.913121,-2.134017,1.181819,-4.980190,9.184068,6.227184,-9.485546,-6.057293,9.564694,6.303458,-9.008158,-1.226569,-2.148687,-8.407195,2.647224,8.556762,8.199200,9.014235,-4.839686,4.306355,-5.059288,5.370366,-1.056230,2.831319,0.485932,0.723227,9.475399,7.041423,9.213833,7.607276,9.862429,1.468900,7.793826,1.539430,-9.762674,5.870855,0.631889,9.092650,-8.482529,8.654521,0.492003,-7.516675,-9.519861,-5.043492,1.035690,-2.384543,-4.409923,1.305696,-4.976939,1.965484,5.962527,-0.772401,-3.921323,2.081577,-4.792784,-5.889401,1.094709,3.860050,-1.666860,-1.728072,7.599763,-9.196354,-7.711635,9.675314,-8.196326,3.871553,-6.884004,-9.696707,7.181594,1.416836,-2.090964,9.949504,-1.996756,9.000528,-9.697052,9.584535,-6.569113,7.347714,3.637827,-0.755433,-5.254635,-4.238739,0.608168,0.416615,-2.964890,-5.740667,-1.693979,-9.542462,-8.530102,4.559582,8.315288,0.164809,-0.895766,-7.818215,6.072695,7.007466,-3.935842,-1.593044,-4.235828,-8.015604,9.146079,4.076905,-3.425430,-5.606499,8.033680,7.971692,-7.388232,-1.706623,-2.416194,6.764802,7.172660,3.637729,-7.593822,9.634554,4.157385,1.138960,6.650523,-3.642819,-3.182554,-7.608375,-9.709861,4.099720,-4.007655,6.447184,-7.856686,4.026879,1.833115,-9.375511,-7.219054,-2.513764,3.738894,-8.968758,-0.105137,8.440578,-0.664921,-4.846043,6.157370,5.444720,3.082506,-6.889769,4.860194,-0.890532,-8.712804,-8.268223,-5.853013,-8.728327,-1.303734,-1.290997,7.574204,-1.888877,-0.886817,-6.417700,-4.764128,4.756269,-6.832402,0.295509,3.689056,-7.177179,-4.907830,6.565453,9.460966,3.096158,-7.429076,-8.604027,8.200076,9.243581,0.240983,4.337596,-5.904177,-8.142769,8.590867,-6.679634,7.624523,-6.954818,-4.975136,-4.851558,-6.177815,8.256722,-4.526450,-5.461368,-3.163250,9.068802,-0.172285,0.173393,7.044904,7.093743,-8.803692,-6.461671,7.757798,2.007182,-5.586366,7.929253,8.492324,4.766642,1.802639,2.014582,-5.230752,9.467402,-7.389906,2.356585,-8.282293,-1.852756,-3.001556,-0.734083,1.120526,0.120543,-7.021847,-9.083816,-2.607974,2.161117,-5.397557,9.860138,0.517868,2.987637,-9.393169,7.271565,7.709312,0.551164,-4.479914,0.607765,3.491177,3.085864,-5.454108,-2.324001,-7.847126,-7.023268,-5.406325,0.486429,-4.884832,0.795528,9.593323,-8.631523,-8.353356,-2.548514,7.297847,4.432494,2.585779,-4.673512,-0.890994,-1.264392,-6.806539,5.547429,-8.194655,-3.575032,2.439499,1.942209,5.559558,-0.040531,0.806212,-0.919456,-0.328150,-6.506977,4.176738,9.831263,2.815488,-5.018077,-1.671283,-1.126492,-7.175755,-3.301265,9.158874,-8.861315,1.672198,-3.886308,3.431392,7.012961,-3.208018,5.681601,9.419586,-7.010766,-0.464249,-2.306479,-5.076194,-7.058847,-2.317909,9.702975,-6.421622,-2.962538,-6.005690,4.363397,9.429350,2.910827,-5.569309,2.093811,-0.148763,-9.647364,-3.474846,9.768349,7.770736,4.475437,-2.505314,6.652741,-5.109987,-6.105526,0.513181,3.453135,7.195988,-4.571490,2.892504,8.176677,5.268856,5.788713,-1.840982,9.714904,-9.423405,3.350501,0.155148,8.648444,-8.382441,-2.873815,1.473525,1.984816,-7.632582,-3.063506,1.620988,3.408801,4.395621,2.942829,-4.733191,-1.738607,9.339823,6.591994,-5.318531,7.826358,8.443455,-9.301533,5.336454,1.002530,-6.990708,6.858940,4.460059,-0.483599,0.277382,-3.970847,-7.943157,-8.327190,7.653018,-3.574032,9.177298,-1.438170,9.410557,3.017654,-0.430549,9.905391,5.288358,5.522741,5.426721,3.846923,0.943044,-3.969291,-8.256137,5.539780,3.068737,-3.600591,1.588404,6.894553,2.931882,9.298190,4.018214,-9.314613,-5.479548,7.440090,-8.603317,-0.592124,-1.787174,6.821627], dtype = "float32")#candidate|4468|(480,)|const|float32
var_4469 = relay.var("var_4469", dtype = "uint64", shape = (4, 168))#candidate|4469|(4, 168)|var|uint64
var_4470 = relay.var("var_4470", dtype = "float32", shape = (180,))#candidate|4470|(180,)|var|float32
call_4466 = relay.TupleGetItem(func_1592_call(relay.reshape(var_4467.astype('float32'), [9, 11, 13]), relay.reshape(const_4468.astype('float32'), [120, 4]), relay.reshape(var_4469.astype('uint64'), [672,]), relay.reshape(var_4470.astype('float32'), [3, 60]), ), 7)
call_4471 = relay.TupleGetItem(func_1597_call(relay.reshape(var_4467.astype('float32'), [9, 11, 13]), relay.reshape(const_4468.astype('float32'), [120, 4]), relay.reshape(var_4469.astype('uint64'), [672,]), relay.reshape(var_4470.astype('float32'), [3, 60]), ), 7)
output = relay.Tuple([bop_4461,call_4466,var_4467,const_4468,var_4469,var_4470,])
output2 = relay.Tuple([bop_4461,call_4471,var_4467,const_4468,var_4469,var_4470,])
func_4473 = relay.Function([var_4459,var_4467,var_4469,var_4470,], output)
mod['func_4473'] = func_4473
mod = relay.transform.InferType()(mod)
mutated_mod['func_4473'] = func_4473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4473_call = mutated_mod.get_global_var('func_4473')
var_4475 = relay.var("var_4475", dtype = "uint16", shape = (6, 4, 16))#candidate|4475|(6, 4, 16)|var|uint16
var_4476 = relay.var("var_4476", dtype = "float32", shape = (11, 117))#candidate|4476|(11, 117)|var|float32
var_4477 = relay.var("var_4477", dtype = "uint64", shape = (4, 168))#candidate|4477|(4, 168)|var|uint64
var_4478 = relay.var("var_4478", dtype = "float32", shape = (180,))#candidate|4478|(180,)|var|float32
call_4474 = func_4473_call(var_4475,var_4476,var_4477,var_4478,)
output = call_4474
func_4479 = relay.Function([var_4475,var_4476,var_4477,var_4478,], output)
mutated_mod['func_4479'] = func_4479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4513 = relay.var("var_4513", dtype = "float32", shape = (12, 3, 4))#candidate|4513|(12, 3, 4)|var|float32
var_4514 = relay.var("var_4514", dtype = "float32", shape = (12, 3, 4))#candidate|4514|(12, 3, 4)|var|float32
bop_4515 = relay.floor_mod(var_4513.astype('float32'), relay.reshape(var_4514.astype('float32'), relay.shape_of(var_4513))) # shape=(12, 3, 4)
func_3810_call = mod.get_global_var('func_3810')
func_3814_call = mutated_mod.get_global_var('func_3814')
const_4522 = relay.const([[3,3,-5,-4],[-9,-7,-3,-7],[-9,2,-9,1],[-6,-5,6,-5],[7,-1,-8,-7],[5,9,-3,5],[-9,7,9,-7],[-1,-3,8,-10],[-5,-9,-7,2],[-2,-10,-7,6],[1,-6,-3,7],[-5,-3,-8,8]], dtype = "uint32")#candidate|4522|(12, 4)|const|uint32
call_4521 = relay.TupleGetItem(func_3810_call(relay.reshape(const_4522.astype('uint32'), [6, 4, 2]), relay.reshape(const_4522.astype('uint32'), [6, 4, 2]), ), 0)
call_4523 = relay.TupleGetItem(func_3814_call(relay.reshape(const_4522.astype('uint32'), [6, 4, 2]), relay.reshape(const_4522.astype('uint32'), [6, 4, 2]), ), 0)
uop_4525 = relay.asin(var_4514.astype('float32')) # shape=(12, 3, 4)
output = relay.Tuple([bop_4515,call_4521,const_4522,uop_4525,])
output2 = relay.Tuple([bop_4515,call_4523,const_4522,uop_4525,])
func_4530 = relay.Function([var_4513,var_4514,], output)
mod['func_4530'] = func_4530
mod = relay.transform.InferType()(mod)
var_4531 = relay.var("var_4531", dtype = "float32", shape = (12, 3, 4))#candidate|4531|(12, 3, 4)|var|float32
var_4532 = relay.var("var_4532", dtype = "float32", shape = (12, 3, 4))#candidate|4532|(12, 3, 4)|var|float32
output = func_4530(var_4531,var_4532,)
func_4533 = relay.Function([var_4531,var_4532,], output)
mutated_mod['func_4533'] = func_4533
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4591 = relay.var("var_4591", dtype = "int16", shape = (12, 8, 10))#candidate|4591|(12, 8, 10)|var|int16
const_4592 = relay.const([[[1,9,-10,-7,-2,-9,-7,6,8,-2],[5,-1,-9,1,-5,7,10,-5,2,-5],[-7,1,-1,-9,2,9,3,4,-8,9],[-7,-1,-4,-9,-10,-3,9,2,10,-10],[-3,8,8,7,-8,-9,-5,-3,-1,-7],[5,10,3,5,-3,6,3,-1,-9,-8],[5,1,10,-8,6,-1,-5,-6,-3,4],[7,2,-7,2,-1,2,-10,3,8,-10]],[[-9,9,2,-4,8,2,9,7,9,1],[-2,4,-7,9,-2,-2,-1,-5,-8,-9],[9,2,-9,8,-10,8,4,-1,10,-8],[10,3,3,-4,9,7,-7,9,-8,4],[6,10,-5,-10,-3,-7,-8,-4,-10,-2],[-4,-8,8,10,4,3,-5,7,4,-7],[6,9,4,-9,-4,5,1,-2,1,-6],[6,-3,2,3,9,-2,3,3,7,-4]],[[-2,-2,2,-2,5,-8,-7,4,-2,7],[8,-10,-5,10,4,4,5,-1,-9,2],[2,5,-10,1,7,-5,1,5,10,-7],[-1,2,-4,-3,-9,7,4,3,2,-5],[-5,-1,8,10,1,-2,-8,-8,-9,-7],[7,-2,-5,-4,10,-3,2,9,2,-7],[9,-5,6,-9,-6,5,-10,4,-1,-2],[8,4,-1,-7,4,-8,-5,-8,-6,-8]],[[-5,6,10,-3,-8,2,2,3,10,-8],[6,-5,-9,-2,4,-7,-10,6,-5,-3],[-2,9,2,9,4,6,3,10,6,5],[9,1,-9,3,4,8,-2,1,-1,-6],[8,-4,5,1,6,-3,1,6,9,-5],[5,10,-2,-9,-1,-7,-9,8,-5,-5],[-6,-5,10,-7,1,3,-5,1,-4,-8],[9,4,6,-10,-10,1,-3,10,-8,-6]],[[9,4,2,1,10,-3,-5,-7,-6,2],[-3,-1,-9,-4,10,-7,9,2,1,-9],[3,9,6,10,2,9,3,4,5,-1],[7,-5,-9,8,-2,-10,9,-4,-5,1],[4,-3,-4,-1,4,-3,7,-7,-4,-6],[-4,-1,6,-1,8,8,-4,1,9,-4],[-5,4,-6,10,-8,6,5,-6,-3,-1],[7,-4,-10,8,8,-2,10,5,-9,-5]],[[3,8,1,6,8,-8,9,-7,-9,-8],[-6,2,-6,-3,-3,-1,-2,-2,-10,-8],[8,-7,-7,5,9,5,-6,3,-3,7],[5,-2,-7,-9,-5,-9,-2,-3,1,5],[3,-7,-6,-1,9,6,-7,10,-5,3],[7,-6,-8,-7,6,9,1,-6,-8,-5],[4,10,10,-7,10,-6,4,7,-8,1],[10,1,7,8,4,-10,-9,-10,-10,-5]],[[-7,-9,-10,2,-5,-3,-6,6,-4,9],[-2,-6,9,9,3,2,-4,2,1,3],[1,-1,-2,10,-3,-2,10,-5,4,-10],[7,-10,5,6,-9,2,-7,-7,-9,-5],[-8,9,-6,8,-10,8,10,-10,-1,-3],[-7,10,-7,5,8,2,6,5,-6,2],[9,3,2,-6,-10,-5,3,3,4,8],[7,-9,9,-4,5,1,10,5,9,-4]],[[10,8,-7,-3,-8,-5,1,7,-8,-7],[1,-8,3,-2,7,-3,-7,8,9,-7],[2,-1,5,-3,9,5,9,10,9,6],[9,-10,-8,2,-2,6,10,7,3,8],[3,3,-9,5,4,3,-1,-2,5,-10],[-5,-3,2,-10,-1,9,6,-5,5,-4],[-3,6,3,-7,-4,-7,3,-3,9,2],[-6,3,4,-6,2,-2,10,-1,6,1]],[[-2,10,-6,10,6,5,-4,-3,-10,9],[-10,9,9,-1,7,-8,2,-6,-8,-4],[-10,-6,1,5,8,-5,7,8,-3,2],[3,-1,-7,-3,-3,1,10,-10,-9,-4],[8,-5,5,-10,4,-2,-3,2,-10,-5],[4,8,5,4,-10,-1,2,-3,9,9],[5,-10,2,8,-9,-5,-1,8,1,-10],[-2,9,-8,3,4,-1,-1,7,3,5]],[[10,-6,5,9,-5,4,1,-3,6,4],[-6,-8,6,-2,3,-4,7,4,-3,5],[1,5,-5,-8,-4,10,9,-9,-7,7],[-8,3,-10,-9,-1,9,6,-3,-6,-3],[-5,-2,-4,1,-2,1,9,5,-4,-2],[-9,-6,-9,-7,2,-5,2,1,-8,7],[-5,8,-4,-5,9,3,8,-4,-8,2],[-10,7,2,-10,-4,-10,7,1,3,2]],[[-3,10,4,-10,5,-2,-9,-9,-9,-3],[5,-10,-3,6,8,8,2,-3,-3,9],[-5,3,2,-6,10,-1,-1,9,-1,10],[10,-1,7,9,8,-8,-8,8,-2,10],[2,-8,2,8,10,-5,7,3,3,-4],[9,-6,4,9,-8,7,-10,-6,-10,-6],[-2,3,8,-3,-7,1,-2,2,-3,-1],[10,5,-3,-10,5,5,6,7,3,6]],[[1,-3,6,-9,8,2,-6,-6,7,-5],[-2,10,-10,4,10,-3,-7,4,-4,2],[10,8,2,6,9,-4,4,9,-2,7],[-4,1,-9,-5,-7,-4,3,-5,-7,-6],[4,7,3,-4,-10,-5,3,8,-2,-4],[-1,5,4,1,-3,-8,-7,7,-1,-3],[9,-7,-3,-4,-7,-3,1,-4,-10,-4],[2,-1,7,8,-6,8,6,-10,2,5]]], dtype = "int16")#candidate|4592|(12, 8, 10)|const|int16
bop_4593 = relay.equal(var_4591.astype('bool'), relay.reshape(const_4592.astype('bool'), relay.shape_of(var_4591))) # shape=(12, 8, 10)
var_4596 = relay.var("var_4596", dtype = "int16", shape = (12, 8, 10))#candidate|4596|(12, 8, 10)|var|int16
bop_4597 = relay.subtract(const_4592.astype('uint8'), relay.reshape(var_4596.astype('uint8'), relay.shape_of(const_4592))) # shape=(12, 8, 10)
uop_4608 = relay.cosh(bop_4593.astype('float32')) # shape=(12, 8, 10)
uop_4615 = relay.sigmoid(uop_4608.astype('float64')) # shape=(12, 8, 10)
output = relay.Tuple([bop_4597,uop_4615,])
output2 = relay.Tuple([bop_4597,uop_4615,])
func_4620 = relay.Function([var_4591,var_4596,], output)
mod['func_4620'] = func_4620
mod = relay.transform.InferType()(mod)
var_4621 = relay.var("var_4621", dtype = "int16", shape = (12, 8, 10))#candidate|4621|(12, 8, 10)|var|int16
var_4622 = relay.var("var_4622", dtype = "int16", shape = (12, 8, 10))#candidate|4622|(12, 8, 10)|var|int16
output = func_4620(var_4621,var_4622,)
func_4623 = relay.Function([var_4621,var_4622,], output)
mutated_mod['func_4623'] = func_4623
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4808 = relay.var("var_4808", dtype = "float32", shape = ())#candidate|4808|()|var|float32
var_4809 = relay.var("var_4809", dtype = "float32", shape = (1, 6, 2))#candidate|4809|(1, 6, 2)|var|float32
bop_4810 = relay.divide(var_4808.astype('float32'), var_4809.astype('float32')) # shape=(1, 6, 2)
func_1592_call = mod.get_global_var('func_1592')
func_1597_call = mutated_mod.get_global_var('func_1597')
var_4820 = relay.var("var_4820", dtype = "float32", shape = (1287, 1))#candidate|4820|(1287, 1)|var|float32
const_4821 = relay.const([[-9.757033,2.424957,5.083320,4.870751],[-8.580939,-5.532987,-1.449157,9.592117],[-3.494612,-7.550285,1.665996,1.558517],[2.551453,1.059740,6.351670,3.857139],[-9.723088,8.882379,-9.844081,3.804199],[-3.638936,-9.394380,-6.630926,4.490845],[-3.764713,8.106420,-8.739645,-9.349607],[4.283290,5.466764,5.847609,5.737585],[9.108765,-1.983844,7.763635,-5.027522],[2.407812,0.613822,1.149629,-9.108334],[-8.434293,8.510383,-4.107564,-4.224804],[-1.271033,-7.089012,-7.666705,1.725495],[9.976705,6.539196,3.646257,-3.595702],[3.884418,-1.956341,-0.358627,-6.483988],[6.751438,0.224852,7.461745,9.506939],[4.809572,-2.907357,5.685216,9.954453],[6.839704,-9.831469,0.072038,0.552055],[-4.378139,6.565062,-5.843240,1.026340],[9.720763,-1.141465,-7.240967,-4.419818],[3.369634,-7.429281,-2.325860,4.984479],[-0.669315,8.679812,6.792628,-3.561970],[-2.017965,-3.424478,-4.464170,-7.508807],[3.800967,-0.040128,2.214699,7.170252],[6.526902,4.469988,-3.166013,8.595234],[-4.397629,-7.603282,9.130150,3.915280],[-3.050108,5.931254,0.421474,-5.258854],[-6.115037,8.184021,-7.281143,-3.058271],[-9.678902,6.140496,7.095142,8.200880],[9.216699,3.360762,2.778701,8.888348],[-3.057448,-8.041127,-4.674731,-9.811267],[6.026359,-7.144410,5.393246,-3.438423],[5.967066,-5.464273,-7.119209,-4.641648],[0.134857,3.542895,5.688109,-3.474524],[6.148104,1.798237,6.160110,-4.842652],[7.853277,-2.367187,2.581122,-7.643739],[9.234287,3.638036,8.079705,4.801472],[2.041244,5.086961,4.076939,6.327165],[-7.498981,9.255919,-1.383581,-3.810302],[-3.183087,-6.830069,6.651825,-9.317820],[0.913082,0.305125,-5.054790,4.131080],[2.602802,-1.360982,-8.877997,3.489006],[-3.954107,4.608191,-2.978402,1.560044],[-2.329646,-0.363413,-1.470340,-9.081328],[0.265930,-0.597497,7.457092,4.153240],[-3.151663,5.808695,7.758899,9.586596],[5.656693,5.648041,7.245258,9.488680],[-8.789829,3.479298,-5.120148,2.323091],[4.955044,7.954255,9.210812,6.149300],[-9.780022,9.765501,0.390104,-8.271185],[6.922056,-0.925039,-6.802332,-0.116663],[-4.672727,2.020689,-8.670734,-4.509720],[9.047386,-5.916835,-2.402057,-6.570412],[-2.947951,6.947123,2.968219,9.547489],[3.912677,8.564678,5.415548,-9.107791],[4.118215,-9.227397,-0.173367,-1.771315],[5.112470,4.058247,-1.093817,-0.093030],[3.647192,0.234590,7.237035,1.982508],[-7.319335,-4.520780,-5.493239,3.928738],[8.684480,1.805714,-1.794137,1.298720],[-8.049529,-3.083322,-0.739173,-1.692607],[-5.877173,-0.068939,-1.140013,-8.053236],[-3.936925,-4.398956,9.950256,9.661799],[7.075918,4.237946,-3.453564,6.950125],[5.278597,8.031068,3.253187,9.982429],[4.860010,9.867670,1.635129,1.000899],[0.412647,-0.458837,1.861707,2.366138],[2.625506,7.481991,0.853454,-0.726436],[-6.539412,-6.604897,8.581093,0.262047],[-6.484677,-1.292117,-4.357466,3.079605],[4.879341,-4.841289,5.752323,-2.556663],[-4.283489,-8.812294,-8.893221,-7.350541],[2.539406,-9.701313,-8.887836,4.741206],[7.540054,-4.999616,1.769894,4.517407],[-1.800876,-6.768321,3.044855,-5.842721],[-7.339657,9.396855,4.673705,7.112183],[-9.508124,-2.135723,9.271741,4.256305],[1.349381,-3.689923,-7.791917,-0.755007],[4.855113,-7.873892,6.880140,8.244127],[-1.579098,-6.710753,-0.585318,-8.868806],[-9.534495,-4.481287,-1.713499,-8.635965],[7.625866,3.847268,-0.772899,-4.745633],[-5.631688,-5.637563,0.437145,0.836718],[-1.861610,-0.227599,9.275362,8.481636],[5.428870,2.197786,-5.914538,3.267931],[-9.400550,6.842908,-4.863647,-9.935925],[-0.250037,-2.328726,-6.172101,7.127016],[-6.003549,-9.166733,-8.119795,9.741127],[7.221651,-1.456427,-5.906380,3.344426],[-3.400934,5.161485,5.524917,5.850116],[-8.477490,5.600017,3.960638,7.562073],[-4.025548,8.389272,0.754001,-6.467425],[7.617624,-8.985030,0.285876,-7.772190],[-1.212983,-0.630268,6.724337,-6.862313],[-8.186130,7.906193,-5.437708,9.558035],[-3.763352,-6.179009,6.868191,-6.218624],[3.610824,-6.549686,-5.386823,-9.515144],[-3.754738,-8.470607,-1.047531,2.332205],[3.653869,-6.596786,7.751610,-0.609481],[-6.200315,7.966807,-3.239668,-0.588793],[7.172377,-5.918798,6.972846,-1.860512],[8.175677,8.381256,8.249875,-0.295731],[2.209546,0.505603,-3.748374,-5.853914],[-3.736777,-5.304535,4.954123,-4.114553],[2.281391,0.997098,9.302551,-4.874749],[-5.397268,-6.123991,-6.309097,-0.509081],[3.161944,-0.015484,-2.497901,-5.791442],[9.799759,6.568859,8.807269,5.502409],[-1.573625,7.245444,-0.204269,-6.387311],[4.206358,2.970197,-2.105408,-4.333984],[6.547022,3.478593,7.644251,-8.103408],[0.723029,-2.895210,4.545770,2.725321],[-2.975916,6.511900,9.489212,0.818178],[-5.446978,-3.034618,5.612078,-9.980519],[-7.098044,-6.933219,5.854331,-8.756761],[-6.116603,5.924125,-2.302795,3.280626],[5.674527,3.863784,-1.890559,0.320454],[1.363914,7.617662,-9.846085,1.484376],[-9.658336,0.772248,-1.301762,-5.629848],[-5.166473,-0.855417,-6.616653,7.385002],[-5.863440,-5.098286,9.532964,6.370408]], dtype = "float32")#candidate|4821|(120, 4)|const|float32
var_4822 = relay.var("var_4822", dtype = "uint64", shape = (672,))#candidate|4822|(672,)|var|uint64
var_4823 = relay.var("var_4823", dtype = "float32", shape = (180,))#candidate|4823|(180,)|var|float32
call_4819 = relay.TupleGetItem(func_1592_call(relay.reshape(var_4820.astype('float32'), [9, 11, 13]), relay.reshape(const_4821.astype('float32'), [120, 4]), relay.reshape(var_4822.astype('uint64'), [672,]), relay.reshape(var_4823.astype('float32'), [3, 60]), ), 6)
call_4824 = relay.TupleGetItem(func_1597_call(relay.reshape(var_4820.astype('float32'), [9, 11, 13]), relay.reshape(const_4821.astype('float32'), [120, 4]), relay.reshape(var_4822.astype('uint64'), [672,]), relay.reshape(var_4823.astype('float32'), [3, 60]), ), 6)
func_3526_call = mod.get_global_var('func_3526')
func_3529_call = mutated_mod.get_global_var('func_3529')
const_4837 = relay.const([-6.287683,9.652305,-5.575800,6.882105,8.256222,8.316326,-6.512050,-3.897032,5.847060,-5.804902,-2.801590,5.212895,-5.927563,9.594940,-5.880871,9.147924,5.478290,-3.921311,3.921996,-3.647628,-8.475106,5.022483,-3.926809,-2.763675,-1.577516,4.233333,-8.575666,-3.882689,-8.770837,-9.349698,-4.106942,4.975556,3.562778,3.966109,3.524301,5.547516,-8.043619,9.040496,-1.220273,-1.787696,-6.943373,0.708090,-7.499935,-4.089919,4.628213,6.934833,-0.491044,9.044397,-7.594023,-5.831819,8.399444,6.884286,-8.477209,-4.565697,-4.635273,0.638236,-8.963586,2.225052,-1.555732,-9.540843,0.688755,-5.165452,-4.871801,5.436608,-6.996496,5.838487,3.945803,0.342792,2.719445,-6.660263,-3.273129,-6.495851,-1.433202,1.172333,0.178056,9.006444,7.408775,-6.778660,8.055551,5.773081,9.753711,3.262848,0.948159,5.713861,7.359862,5.984819,1.320933,-2.180586,7.001890,4.044539,1.737755,6.117367,-1.710483,2.258048,9.500173,6.496574,0.263042,3.601317,-8.240929,0.305762,-0.716718,0.847023,-5.964988,-0.081290,-4.678148,7.805426,-0.779652,-2.247220,-3.056189,-0.442790,-8.716661,3.088087,3.896983,5.700188,7.035797,9.589236,1.124597,5.659432,-1.409116,4.343421,5.839966,4.316578,-1.381082,-3.401181,5.930609,-9.774803,1.525568,5.104566,6.476639,-6.554545,3.526767,-4.298890,-1.565757,-7.452684,8.735301,4.131954,-5.608691,-7.445464,3.538688,-5.154156,-1.240097,-7.556636,-9.120945,-4.834915,-4.601970,-9.142603,-4.792155,-7.068856,-1.567864,4.907865,5.503808,4.268516,9.732408,-4.829539,-3.057636,9.721856,9.829913,-2.772705,9.833840,6.671889,4.544448,9.087911,1.814486,4.140245,5.066258,7.610168,9.308717,-5.008466,5.882323,8.414268,3.988376,-2.267612,3.875958,-4.820355,7.016584,-5.924708,9.945826,-4.185631,-0.620752,2.716250,-4.270912,-1.873091,2.879018,1.819236,3.641726,-2.593671,8.259990,7.447945,-9.513123,-5.832794,-4.841069,-5.580759,-3.742889,-8.125724,-0.606461,-6.421799,-1.579270,9.001836,-0.533521,-7.538386,7.145539,-0.387953,3.704156,9.706305,-3.568815,5.735345,9.437839,-7.816238,-1.222642,-2.533584,-9.053595,-0.537165,5.325928,-2.114571,-8.086451,4.440430,-6.235822,-8.289591,3.427239,5.736380,3.721497,-7.716710,-3.559412,0.999928,5.797190,-0.347494,-4.900554,6.224161,-2.821295,4.442124,-7.278204,-4.593003,4.135029,0.762476,4.124519,-8.632645,5.118590,1.817822,5.106407,5.347208,-6.775162,8.638706,-3.533509,-8.283744,-8.599391,5.153486,-6.841640,5.943305,-6.915985,-9.590584,3.082141,8.178161,-9.598761,0.748316,4.698307,-6.962999,-9.582112,-4.743894,-2.431049,7.799753,9.403357,-1.977282,-3.289291,2.812998,-6.658168,-0.242070,-0.374287,-5.810002,-0.673272,-6.888082,-4.045957,1.860789,-6.065120,6.564054,-2.714933,-7.983559,3.051823,4.934224,-9.239248,6.152677,9.035449,0.108340,0.381952,-3.646960,4.025323,0.195141,3.308438,-2.352768,-0.665552,4.513651,-5.298897,-6.729250,-5.102214,4.358288,-6.635331,2.039506,9.016434,4.617301,-5.483426,-2.145371,0.873677,-9.888456,7.739442,-4.921001,-9.203943,-8.738330,3.489296,8.209197,4.272030,7.255801,6.918410,9.367139,5.099254,3.759806,-9.525577,9.502751,8.552487,-1.600402,-8.719674,-1.035376,-5.458783,9.579431,-4.282156,6.466459,3.936825,3.672956,9.468527,4.686960,-2.614133,6.182409,0.722072,-2.215311,-2.688112,3.117659,5.715985,1.977606,-2.425904,-5.113045,2.775747,-1.803131,-7.579150,8.855116,-4.703884,-4.879548,9.928761,7.888041,-0.752147,3.652677,0.424381,5.789980,9.712877,-1.572823,9.411742,-1.368425,1.745319,9.046060,-0.226149,0.256019,-3.511644,7.012657,3.468628,-4.163300,-7.305144,-1.816974,-4.099842,5.601038,8.110934,2.946106,-8.832147,6.801144,2.318762,7.808059,-5.750949,-9.549927,-4.087610,-4.028019,2.169755,0.379099,3.284175,2.808018,3.063650,2.417512,-5.412085,2.602632,-5.131098,-3.303569,8.141604,7.843432,9.213948,-7.471140,-1.002294,0.313385,2.649890,4.070476,2.815765,-7.924314,3.072391,4.788259,8.849112,-8.592231,1.021877,5.049321,-9.589113,-8.432369,-4.779031,5.356049,-7.457681,-0.969964,5.567843,-6.532356,-1.932453,7.231124,-0.468407,-0.103876,3.679614,1.071622,2.723431,-2.601265,1.707604,3.472241,9.223515,-6.011748,-9.785803,-9.038691,7.756763,-3.640266,7.401730,6.915841,-6.864553,2.426506,2.960352,-1.786182,1.543333,-7.217838,-6.753632,1.323858,5.639335,9.034667,-0.209517,7.577558,-5.779279,-7.224456,-7.961342,3.499491,6.390742,-3.583118,9.764842,4.517284,8.027382,9.235778,-6.171230,-4.575976,4.137539,8.570146,0.480361,8.050366,-7.118572,6.222129,9.096692,7.402947,-4.293933,9.174383,-1.810575,-9.364568,6.461423,8.171177,-6.176529,0.276998,5.335171,-5.773245,2.588073,-9.150695,4.918510,-3.019448,-5.547787,5.717968,-3.733252,-0.790494,7.649327,-8.929896,2.628387,-4.161855,1.755442,2.386476,-0.461374,0.530554,6.661334,7.399278,-2.785386,1.218760,2.692855,6.690694,-0.235353,6.835820,-0.548434,-6.407102,2.205240,-3.134355,-6.175410,-0.726897,3.679309,-5.255801,2.020963,6.634423,-9.066610,3.426576,2.102674,2.575756,-0.175850,5.866100,-1.872140,-4.356267,5.800375,1.196411,-2.163563,-2.972763,2.785123,-3.553377,6.001183,-9.353299,4.940580,5.402205,-4.671157,-1.570106,8.452126,-9.872288,5.050782,-3.180189,5.233993,-5.556168,5.688192,8.027321,4.538231,0.005439,9.804145,-0.080475,5.307242,0.312709,-0.160311,5.456819,5.833843,-8.197616,-4.365544,9.481978,-2.984801,-6.803295,1.311178,-1.307546,7.363736,8.607883,-7.882462,6.405765,2.309764,3.852987,-8.683629,-9.369555,-6.434026,-7.166553,8.543005,-7.821617,5.930383,6.143477,-5.746486,-8.202223,9.123249,-6.551804,3.152075,-7.204576,-2.268838,5.871118,-2.991936,0.637896,-7.925219,6.109699,2.213426,7.730755,-1.254629,5.888941,-4.802491,7.264798,7.538437,4.284914,4.122431,-4.679917,-4.874627,5.045195,8.585765,1.727478,-9.733791,7.238344,4.041255,2.641403,6.273671,-1.182364,-3.328470,4.431464,-1.977338,-5.063439,-2.551596,6.371045,-9.981354,7.233103,6.149765,4.174766,-4.942530,-7.624086,7.402634,3.395768,-2.263781,5.446418,0.203758,0.996753,2.135304,-8.394386,-1.404793,-3.850461,-1.825681,-7.068858,3.877127,9.226906,-3.804386,9.129909,6.167542,-8.767878,-0.959796,-0.223041,-2.701134,8.557027,-4.580025,-0.392358,-0.212963,8.121835,-0.858558,-3.985367,-8.411784,2.979935,1.196793,-4.089732,-1.887633,1.472427,-2.433841,-1.981861,7.612193,1.927407,9.066483,-7.933586,-5.929671,-5.773633], dtype = "float32")#candidate|4837|(648,)|const|float32
const_4838 = relay.const([1.142195,-8.240185,-9.397684,3.418182,6.938302,-3.723560,7.957749,-4.891370,-5.914041,-6.061129,0.804122,4.533236,-3.960813,4.508981,6.913846,4.742563,3.965118,7.869067,5.125017,-9.394736,2.109953,-9.916641,-0.222131,1.028060,-2.888445,-2.887623,-9.171203,-2.930501,-0.374179,-2.460905,6.980614,-5.930575,4.302819,0.097864,-3.518531,1.997785,-0.179750,-3.465376,8.483271,8.418116,4.728311,3.556198,-6.456097,8.715222,5.458289,-7.977369,3.613980,-2.127204,-3.661284,8.848810,9.246706,3.438361,7.524369,-7.709568,6.030367,-8.924417,-0.671720,7.337578,9.397750,7.925864,-2.806758,-0.946167,-0.889153,6.658293,-4.759117,7.429664,2.957419,4.586123,2.091431,4.301263,2.466834,6.765542,-0.572689,-5.926249,6.715708,-5.521261,8.159535,-8.922332,4.637696,3.976419,-0.858487,-3.405110,9.351319,-1.061817,0.538090,4.553989,-4.817403,-1.685531,5.921038,-5.043678,-7.533919,3.920475,8.887202,2.670749,6.052329,-4.183302,-9.995894,4.345796,-3.166616,-4.969821,-5.700082,5.542891,-4.606495,2.941712,-1.886128,0.827456,-6.115069,0.733966,-2.595175,9.800910,9.892853,8.392151,-4.702216,8.284758,4.936479,-7.769720,1.055757,-0.095124,-1.137380,-4.962247,6.468660,0.945525,-1.818549,-1.513465,-5.838247,-1.545018,3.730616,9.743295,-5.814740,7.131287,-8.313157,2.980161,6.318921,3.763428,2.152584,-9.835005,7.513099,0.252609,-9.991625,-2.104660,7.018266,-5.050936,4.303193,-8.512899,-0.518043,6.279565,9.686875,6.313513,-5.698282,-7.544688,-5.191124,-6.692301,5.379320,6.655898,2.836110,-0.241965,-9.655430,-2.211795,-4.829747,0.074699,-5.720800,9.382224,-6.872175,-9.383648,8.374249,-1.050336,2.705362,-2.333198,-0.090678,1.232069,5.953120,-8.825191,-3.741184,0.279679,2.095979,-8.282109,3.780583,-4.794103,-3.432199,-6.335010,2.192917,6.307262,-5.498342,3.278888,2.645889,-0.314208,-7.093607,-0.588554,6.511898,8.519637,-5.614453,-3.720470,6.030914,9.483622,2.680919,-8.466687,8.474891,-2.256776,5.414174,-5.744494,-4.696762,0.577151,-2.296893,0.524543,-1.292870,-5.433294,-3.083043,-4.608216,6.393029,6.282405,-6.856314,-0.919404,1.048636,9.973174,-7.566800,0.177898,-1.076996,-8.044722,-0.122516,4.765283,-6.207911,-4.704140,-4.610704,7.729964,-4.252101,9.736451,-8.272596,-8.561513,-3.555284,-3.746296,-4.538279,6.841574,-4.391260,0.287629,6.535941,1.055831,-7.593953,9.503228,2.536884,5.293345,2.550959,-0.942491,-9.147230,-9.579568,-9.232620,0.406867,-9.382001,6.844116,-6.965120,-6.006736,2.526955,-9.952881,1.088024,0.710006,-5.922188,-5.050588,4.711958,1.441559,-7.565160,-3.746858,-8.352158,2.002422,-3.067047,5.089276,9.992552,-5.850804,-5.759284,-4.157187,-2.746584,-5.819300,-8.936147,9.826134,4.510080,3.799532,-3.549418,-5.517347,-9.435122,7.431388,-3.676728,3.264014,-6.410277,5.647106,-3.588577,-1.423254,5.843334,4.519198,-1.581168,4.447669,6.940963,1.565647,-8.417834,-8.344446,8.269377,3.067823,2.453630,3.768426,-2.779447,-5.007166,-7.787536,-8.487697,9.282197,-1.345988,-4.080049,5.959195,-0.082346,2.075523,-9.656678,2.307269,2.625395,5.840020,-5.488588,6.414025,1.267740,3.147935,-1.846343,9.919813,-5.833045,2.272971,7.846398,-7.199204,8.888183,-6.899354,-4.040797,7.242700,-3.590916,-3.671561,0.382587,-1.929336,8.854587,2.432619,7.831059,2.806854,-7.671503,-9.853068,0.914781,8.655349,-5.776085,-3.440089,-1.362962,-7.176624,-6.912551,7.277063,-0.657984,6.858844,1.252115,-8.374774,9.453391,-9.343364,-1.790492,-8.160059,-9.734881,5.345138,0.910866,9.774755,8.681328,3.271906,-0.545952,-6.526380,-0.916967,-8.287926,-6.374687,-3.900120,-9.412697,4.242378,9.457814,-0.397213,2.235155,-0.508543,7.010683,-5.200483,0.574093,-4.258067,-7.435541,9.880987,-3.423512,3.206976,-6.915384,4.189387,-8.382254,9.984190,-4.071006,4.140176,3.037108,-1.935559,1.263845,-3.152518,-1.216051,-9.935808,0.008623,6.737688,5.825136,-8.969672,-6.254522,-2.815762,-6.078489,-7.267197,2.717078,-2.546829,3.299375,6.259067,-0.418726,-6.380946,3.114957,0.320023,-0.374327,-2.822820,3.069321,8.627209,-5.509006,5.339157,1.226519,4.526272,5.259749,-9.639669,9.624618,-2.346585,5.953765,-7.259173,9.883033,2.872569,6.430715,-4.126437,-6.172253,-7.131738,1.844200,4.799618,-5.440010,-2.081861,-9.512992,-2.182492,-8.022174,3.819996,6.932805,-3.290469,-3.803758,-3.262222,-2.566942,-4.068546,-2.719653,2.490775,-1.406675,1.807556,-4.255337,7.282932,-2.716474,-2.032438,-2.759687,-6.819817,3.469729,-1.487852,-7.916829,1.707494,4.093335,1.717128,3.769855,-6.763874,2.868640,-8.712706,5.924979,-2.632711,9.836572,-3.519178,9.402067,-0.460783,-1.503565,-6.023387,2.426146,9.741268,2.990485,6.718897,4.807825,8.100753,1.822505,-9.674511,4.578631,-1.571145,5.816211,-7.118142,2.544623,-5.848879,9.790963,-0.013859,-5.377708,-3.542051,-8.380836,-0.489742,3.835053,-2.474524,1.173888,4.326181,3.419242,-4.996907,-8.565118,6.141743,6.402893,9.847853,-0.177568,4.602428,0.356059,3.937052,6.789886,-2.084552,6.616900,9.075208,2.468301,5.062301,-9.999039,-9.714968,-9.028676,-9.602319,3.403814,-0.745911,6.101970,-1.414637,0.683934,-7.558967,-3.744743,5.128761,5.907110,-5.931498,2.770189,-3.850892,7.651302,1.257201,-3.355144,9.723484,0.914499,-5.969362,-4.503157,-8.014117,-1.972829,-7.631646,3.751476,-2.752035,7.469197,7.383937,-7.494716,-6.664818,-1.010329,4.381063,-6.996097,-7.735903,-9.276403,-9.863961,-5.873857,7.577629,-7.759288,3.268643,7.672659,-5.786576,-9.880631,-1.013330,5.073236,1.039412,-1.854046,5.494008,0.631014,-3.288764,-4.150528,-2.189828,5.180743,6.864205,-1.598569,8.141454,-3.338371,-6.716085,-3.574177,7.636479,9.053143,0.085854,5.567510,-5.690759,2.915874,-5.963006,-2.008096,-8.788071,-0.157996,7.661697,-3.013167,0.752368,-3.445434,6.852556,-2.225486,2.429424,6.024622,8.760655,3.918155,-4.435538,-6.097369,-5.817052,5.338286,0.963301,-6.895310,-4.971970,3.239453,3.834412,6.109247,-6.725754,5.140359,-3.948818,6.966252,5.852936,9.092631,9.620842,-6.741589,-8.235300,-7.377318,-5.515182,-2.447629,0.080531,-4.474570,-9.425983,4.729534,4.837214,-0.071505,-2.762478,6.534513,-8.350314,1.497166,-5.110087,3.725093,9.890918,-7.500908,-6.641128,2.787179,0.574783,-3.490269,0.242801,-8.813726,-9.297938,-1.659398,-1.723055,-1.480779,0.412051,-3.221588,2.137023,-0.378862,0.064177,-9.757273,-3.187223,3.545602,3.354473,7.855100,-7.624473,2.661837,-5.768915,5.951825,3.397323,4.572242,0.815294,4.569437,9.371094,7.508664,-2.381586,-5.903161,3.288894,-0.135926,7.800493,-8.379988,-5.970229,-2.515549,6.388320,9.310706,9.684262,4.523174,8.334496,2.715026,0.866798,7.773545,4.256846,-5.772092,-8.383152,3.392995,-4.981234,2.328080,-7.568919,5.726302,4.010413,-0.153378,3.049085,9.071494,-7.819061,4.899821,1.245267,-5.968124,-3.917257,-2.701421,9.756524,-3.376131,0.319068,-0.913627,4.559856,1.414597,6.952134,2.749480,-8.684367,3.697271,6.572804,-5.594985,9.687042,1.632442,8.652879,-9.181692,-9.879978,-7.260181,-9.451017,5.033938,-4.321352,-2.426125,-5.533212,-5.169974,-4.981518,-9.092724,-9.929243,7.924664,4.190371,0.297709,-5.102340,9.733250,-6.395251,-9.577134,9.205564,-0.388465,-4.858668,4.698921,-4.673227,3.684500,4.944474,-3.931548,-8.065871,4.325978,9.525353,-8.736516,4.597789,-3.420415,2.785398,-4.494720,-2.126898,-1.038371,-6.646257,6.791794,5.824053,6.005531,-9.305250,-5.256822,3.092117,-8.006630,-9.348764,-8.606291,9.049064,8.017410,0.136881,4.807486,-3.662335,2.205473,6.533362,6.091916,5.556050,8.544036,8.442500,9.118999,6.265526,5.192496,-7.464211,9.076642,-5.960577,1.212266,7.910904,1.394140,-5.409060,-0.053901,6.696065,3.441028,-3.084189,1.437283,-6.717029,3.998146,-4.633939,-6.098571,-8.244607,-0.750184,-1.297276,0.437738,-8.206513,-3.241012,3.159215,-7.701838,-2.058825,8.251066,-3.443893,-6.157171,0.706761,3.217467,-8.949546,7.816906,3.739160,7.446549,5.821984,7.523787,8.134918,-1.294165,-7.768552,-7.535070,-4.321404,-5.428491,-0.603944,-2.717005,-0.553419,3.811282,9.474866,9.605686,2.376041,-0.033650,6.309251,-0.413917,9.889766,5.857455,-5.933349,7.578053,-3.075127,5.673891,-5.379380,-5.869500,2.497243,-0.642549,-3.413251,-0.102917,-5.526552,-6.219472,-1.110458,4.918693,-1.327230,-7.808823,-6.021195,8.550272,0.575349,7.836004,-7.087793,-5.107259,1.493268,-4.766607,-2.153577,5.477462,-3.029808,0.495389,7.679365,-4.371151,9.882758,-8.146912,-3.231013,-1.230640,-8.196810,-1.634272,-0.341960,1.913796,7.082336,2.371126,-9.375340,-2.563221,5.589772,4.494719,-9.180896,-2.151428,-7.736165,0.979723,-8.979228,-9.270309,8.503798,-1.510919,1.343690,-4.713710,6.660280,8.965569,-0.266601,-1.115814,5.134660,-1.252524,-7.972252,3.003641,9.476725,1.822339,5.281792,9.728887,-7.336957,-0.484166,7.973451,-1.879537,-6.791963,-9.158624,-0.317620,-6.095795,-0.726496,7.025118,9.837059,-1.740155,-9.371221,8.669554,7.411584,-4.773231,-3.940142,-1.259511,2.383007,-0.571590,-2.927918,6.286282,-9.459811,-7.156035,-0.782304,7.596163,-4.264384,7.891585,4.602220,-5.271399,0.175284,7.650139,5.671393,8.926347,-8.104954,2.649879,-3.071334,6.592521,-4.753254,6.352256,-0.658691,0.888236,-9.598542,3.075301,5.219792,8.016123,-6.503249,-5.027235,-0.141571,2.307905,9.831291,5.667457,5.222673,-1.075236,-5.229701,-1.049247,-4.488667,7.448716,-5.209241,7.490412,8.285081,-2.524309,2.002454,2.273300,-1.428565,-3.608425,4.167678,1.663302,3.053395,7.365649,-9.275426,-5.967760,1.698926,6.747684,-0.110966,7.104485,1.453133,3.739952,-7.848126,-0.460905,9.275474,-2.772606,-8.826939,2.223262,-6.701209,6.593746,6.141377,8.134354,-6.178371,-9.509911,6.478104,-9.156415,-5.989966,5.152644,-0.768859,1.264162,5.099874,5.737556,-9.113636,7.569077,6.688989,3.540184,-6.225559,5.543110,8.464710,6.564780,3.958229,-4.806445,3.937533,-1.998629,9.105094,-7.055509,7.840463,1.056045,-3.325409,-6.324363,6.569951,-2.291587,3.746093,-5.823555,-2.053919,1.450218,1.617437,8.903037,-0.372974,6.089496,0.838001,-6.825423,7.129723,-1.046603,-0.173191,6.661894,-7.124055,1.213983,4.087640,5.463399,6.030056,4.189523,-0.263777,7.016719,-1.304219,-7.333557,-3.119931,-3.393226,-4.365729,-8.513124,-8.437201,6.139745,6.317235,-3.548981,-7.035756,-9.792420,-3.083244,8.079313,-8.399932,5.539394,1.253789,5.702153,-1.864983,8.646477,-2.714023,8.026439,8.338434,-9.342020,0.930115,5.981696,-7.112241,2.312498,2.608408,7.661398,-1.139606,-4.974858,-4.352168,4.436403,5.782333,-2.545967,-0.998605,-6.583168,-6.546336,4.092409,3.465918,3.912461,-1.612539,7.962841,5.166901,-4.243881,6.340158,1.973885,-9.082089,5.898962,5.671747,3.998397,2.497416,9.088343,-2.579628,-5.709610,1.618948,0.734169,-6.618419,7.913010,0.578518,8.067666,-2.949229,0.036133,-3.734110,9.825497,-0.548394,0.003302,-1.288008,1.567161,1.115819,6.002622,4.677366,3.278540,0.912692,-5.312226,-5.682534,7.313866,-3.144874,9.184872,7.854331,5.461488,5.563506,-5.132452,9.926932,5.964624,9.376496,-4.650784,5.539631,-4.156256,-3.462667,-2.209551,0.685927,-7.843440,-0.499471,-6.126036,-5.251793,9.323407,-6.440008,7.192851,8.755621,1.403157,6.632773,1.342080,2.257311,9.385248,-1.735231,-9.815688,-3.719201,-0.945396,-7.186958,-1.367960,-8.760387,-9.380107,6.184091,-9.963093,-3.234772,8.955575,6.261511,4.650088,8.253934,3.427046,-2.029394,4.037536,-0.227971,9.428820,-1.024600,2.050460,0.316583,0.012609,7.476178,6.936397,9.904788,-2.847765,1.606885,3.202958,-9.587065,5.045604,-4.316598,9.699986,-1.548561,3.204525,3.886550,6.399552,2.787917,4.906797,-5.983344,-2.852582,-5.914895,5.109267,-8.918080,-7.347740,1.760458,8.110637,-6.232131,-2.853672,7.794503,8.522537,-8.735307,6.635050,1.640368,-6.148930,9.066511,-8.064042,4.660161,-2.117632,-1.132763,4.308918,-0.898695,-7.718049,4.108285,1.616896,-1.933611,9.615819,0.839347,-0.125808,-0.926068,-8.832409,-3.609602,8.557860,-0.315308,9.737940,-2.233342,-6.234101,-0.452571,3.918671,5.738927,-6.480147,5.887536,-6.636234,2.785301,5.097607,-7.436778,1.077079,-6.351369,-7.628749,-3.320363,-9.058640,-1.724054,3.674693,4.098598,8.291662,6.551374,-2.740858,6.741867,7.636096,-8.338676,-5.913949,5.326803,3.981188,-3.298296,-0.413076,4.908722,5.331510,-3.963347,-7.480694,4.590725,-5.505372,-5.243929,6.980866,-2.150011,-3.900814,-3.949412,6.761701,-2.877861,5.071481,-9.222004,-5.755906,-9.350715,-8.047833,-6.681177,-6.630575,-2.541307,6.006836,-1.849125,-1.837036,5.956903,1.622662,-3.238822,4.688105,4.081006,6.772716,9.428132,4.428804,-8.720324,-6.472856,4.849046,-4.957843,7.972460,-0.864524,9.277036,-9.034749,9.484338,-7.711630,-6.934234,-0.902166,-1.641350,-5.018164,4.229696,-7.518082,4.236148,5.797244,0.894621,-7.286453,6.550843,-9.441648,8.424549,2.346563,-2.191356,-8.171014,-6.398774,-6.873283,1.539076,-3.836140,4.041366,-1.239262,9.187714,1.500149,5.371486,8.867153,-4.241663,4.034863,7.600009,-2.311470,-6.400527,-4.128906,4.354209,-5.157966,2.006791,-7.445855,7.342870,1.358767,-0.551341,5.458750,-2.706065,-0.458673,5.619298,6.355222,-8.216274,-4.326031,-1.502594,7.881474,-1.858686,-5.819702,-8.179191,-4.585116,8.179499,-2.373614,-2.240318,-8.554759,5.276253,2.835168,-1.997408,4.420806,-8.472626,-7.250096,-1.937636,-2.763462,1.845130,6.983666,8.367621,6.049616,5.836785,-2.953675,2.633847,8.276104,4.012408,6.915783,3.165391,1.447104,1.834406,-8.076000,1.236659,-7.064556,-6.112488,1.004891,8.798416,-4.951452,-6.559943,-5.471988,0.067777,-8.579228,-9.010841,9.229125,-5.642998,3.545327,-0.422252,-6.716236,-6.472979,-8.867484,-8.480228,3.411626,-6.863948,-8.244173,-5.715511,-7.190017,-3.818552,8.806817,5.945332,-9.615657,7.306939,0.108340,-2.841782,0.367363,-8.100152,5.732704,7.616340,-5.754879,-6.109272,9.865564,8.445490,0.704380,-8.458716,-2.649790,6.306733,-7.108457,-5.471766,-7.997393,8.876762,7.691817,7.627348,-1.984176,6.130278,-8.220860,3.582914,3.372235,9.107916,7.210645,7.931928,1.822791,-7.913647,9.464440,2.414485,4.808487,9.869922,-1.591397,0.529420,-7.076842,7.594599,4.657477,-8.077006,7.004697,3.636007,4.693964,-1.849150,3.135586,-4.384012,9.132899,-2.200354,-0.550101,-2.355780,-8.376081,0.334364,-3.404102,0.181617,-9.991517,-0.639574,8.458419,-3.296047,-9.262153,-1.040152,4.636821,-9.012537,-2.982377,-7.718259,7.410827,-2.926054,-1.874796,-9.871607,-4.890773,-5.994825,4.586224,6.230001,-5.883798,7.326864,-6.659581,-0.115776,9.590616,9.702172,3.594816,-2.689413,-9.125623,-4.318609,1.590316,0.102795,-9.560711,-2.303053,3.948572,0.410948,2.691292,-7.476482,-2.927495,3.157376,-5.266676,0.769253,-1.433710,-6.036471,-3.472522,-3.584602,0.709840,-2.733156,7.951924,5.552856,-6.677887,7.722387,1.642246,3.654214,-5.449946,5.189687,5.075936,2.002708,9.219061,-4.037530,-6.681709,0.249134,5.169379,-2.677991,-4.930967,5.659321,-0.528229,-1.980755,-0.031045,4.598887,-9.301721,6.865879,2.181313,-0.054450,-0.874015,1.514419,5.616190,-0.145401,-4.086509,8.661158,-9.751217,1.917805,2.134898,6.706502,0.883896,0.499317,3.431917,-7.512152,7.265370,7.759089,8.238858,-2.422373,9.027790,3.078281,9.259823,-0.911187,9.822947,-4.132670,5.734501,6.839862,-1.696270,0.266141,8.378651,1.185821,-8.539799,8.594031,0.954974,-4.977124,-8.928640,-0.751649,-9.032582,-2.268400,-7.990533,0.219115,-0.947033,-2.745887,6.121521,-5.653661,9.653803,4.096865,1.625442,-1.455175,-8.837864,5.901882,-0.409531,3.150421,6.164971,4.328101,-3.100995,8.225042,9.289779,-3.972446,9.134387,0.053901,-3.844651,-4.643005,8.900620,-2.316774,6.069262,9.414550,2.035764,1.183970,-2.693803,-2.878733,4.370665,8.145452,7.642774,1.857668,-8.933529,-3.633090,0.604050,-2.376289,0.883806,-3.112829,7.139702,-6.488567,-4.060009,0.769300,-4.234626,-1.614059,4.487144,-8.886479,6.115465,-9.363791,5.387842,-0.573762,1.537150,2.586808,9.619539,-8.258155,0.193586,0.247243,-4.462966,-1.192117,-9.530807,-6.104412,-2.870818,-0.855177,-9.077877,-9.153387,3.936165,-1.209531,6.457201,0.049668,5.324365,1.054100,8.989426,6.864603,6.819852,-7.388317,-9.538056,-7.724856,-9.225236,-5.891787,9.770125,-1.834719,2.737985,5.994023,-8.802111,6.167824,-7.927365,9.123178,0.774917,6.887125,-1.666354,-4.789325,-1.033559,-5.455946,8.000710,3.370166,2.746070,-4.876680,-3.506292,3.204728,-9.867484,8.869587,-2.837377,-2.314415,0.685109,-2.835794,-5.319555,-5.321203,3.127942,2.771045,9.007781,4.834593,-7.593094,0.480695,-1.776987,6.363333,7.825095,9.288000,8.943695,3.687606,-2.093214,8.858837,-7.361010,7.121699,-5.699143,-0.561020,-9.657642,-1.161220,9.113956,8.833961,-7.757662,7.895927,7.088146,5.270576,-8.008220,8.549066,2.403389,8.253653,-9.269701,3.018135,6.668328,-9.839816,-9.727003,-6.629449,-3.425631,0.828593,5.277905,-0.573628,1.529100,5.748451,-1.355693,-9.153676,7.711715,1.801330,6.094521,-2.753642,9.378121,-3.986444,7.829250,5.177196,-5.212083,0.759344,4.007588,3.012904,7.076072,2.410016,3.596638,5.761771,2.065429,8.203130,-5.221439,-0.398942,-3.869908,7.549787,8.049152,-4.270286,4.942224,5.295211,7.791590,9.720880,-5.047850,7.528408,4.294021,-7.800581,3.612073,8.004277,-6.983779,4.714039,-7.169678,-6.400751,-0.143864,5.937603,-0.530419,-3.937023,1.323649,8.906770,-0.496242,-1.537742,3.835285,2.191285,-8.239963,-4.139254,-6.753039,9.768796,-5.671632,-8.002805,-6.868640,-4.102440,4.049055,3.508568,9.550483,-9.446910,0.348018,2.397308,7.213560,4.175632,0.030938,-2.942650,-3.500748,-5.979186,-7.341836,0.296543,-2.833396,8.067924,-7.546147,5.177006,5.120608,-0.949279,-6.600726,-1.422406,-1.146429,7.324929,7.976307,2.334585,8.378081,0.231914,-5.343727,8.929016,-8.940329,-4.651276,6.272624,-9.665120,0.279046,2.495697,-8.678084,-9.155334,4.089357,-2.028060,2.634326,-7.817295,4.193572,-7.329138,-7.632152,7.140205,6.852683,-1.250586,3.938286,7.617390,7.760431,-9.371278,-4.513998,-3.314264,-5.237044,1.837524,-0.507934,-3.349009,3.790316,1.612006,-1.051130,-5.187359,9.775358,-6.361271,-4.274094,7.366076,-8.756639,0.489911,-7.618768,1.868591,4.380269,6.822231,-2.091179,6.856564,-2.551238,-6.471539,0.764969,-5.122760,2.285271,3.524622,9.380664,7.587400,-0.056890,-9.292207,-9.695481,1.906785,-1.564097,9.911301,5.597180,-9.791498,2.347070,-3.593473,-8.665976,4.360961,-0.762779,1.043433,-1.060902,0.445221,9.936892,6.956860,0.967823,9.220862,3.026420,8.101041,-1.893591,7.480266,-0.457543,-1.601780,-1.090553,-0.969611,9.381162,-5.836751,-0.081929,-2.891932,-2.519488,0.493938,5.867369,6.190345,9.450285,6.096872,6.208844,4.323069,-3.135668,-5.896938,-5.577217,1.160168,-8.878093,9.278411,-8.035943,-2.362054,2.786488,-7.994347,4.512663,-7.683652,-0.566507,-4.560111,-2.181342,3.086258,7.690617,8.836425,-8.243763,0.358812,7.054654,1.417022,3.876823,-9.207210,0.704691,8.395384,-1.018434,8.506557,5.727175,-5.491341,-1.250188,-0.003931,2.595723,6.185114,7.922112,-5.687927,1.466628,-3.341567,-1.500076,0.591062,5.091676,-5.702901,-8.245743,4.253268,4.379643,2.962202,0.910992,3.320815,-7.522811,4.014153,-4.702237,-9.131478,1.371563,-6.694437,9.140432,-5.364264,-6.056695,-9.867531,-0.684481,-0.226864,-7.881193,8.381513,6.142376,-6.331876,2.745508,1.477144,-5.701467,5.338572,-1.410951,5.346479,-9.404426,4.744160,-5.344072,3.207715,1.936129,-1.006376,-6.476964,2.300314,-4.251844,2.471744,0.857839,3.954266,-3.531160,-7.577317,-0.396775,-6.604203,5.768981,5.100079,8.109534,-9.837873,-0.025963,-1.718931,0.783534,4.873080,-2.904107,7.524202,7.360886,8.277576,-5.509202,9.191403,0.080929,7.051706,3.282315,-0.114945,0.457690,9.312972,9.662463,-1.159850,9.257350,-5.048404,-6.074786,-1.868223,9.307936,3.838787,0.273773,-7.099376,-9.574401,7.277838,5.650908,0.261575,-4.111138,-6.064296,-4.276477,-6.899560,-3.296874,4.107254,6.014427,7.984430,8.681580,-3.942965,8.252796,7.127756,-0.051502,1.973070,-2.096502,-1.842278,3.939158,-8.870355,-0.749379,9.152153,-9.715906,2.829464,-3.632783,-3.364502,-3.219126,-6.131911,6.049127,1.334960,-7.862333,9.671457,4.124027,-5.052449,8.068757,6.818806,5.770398,-3.268858,7.918566,8.644287,-5.866938,-5.943453,-0.109178,-9.382018,-2.137284,9.147900,-1.610073,-0.318031,4.714211,-2.356347,1.563787,-8.361126,8.189845,-1.333838,-2.190934,-9.277709,1.067001,1.186493,-5.913013,-3.592704,-4.536652,8.539565,-6.774982,-8.942364,-3.616754,-4.487823,-2.049274,3.040856,-4.110923,0.817024,2.685178,6.885817,-9.909347,1.015516,3.650638,8.375421,2.762418,-2.859232,-8.078611,0.415093,-6.664884,3.015519,-9.972325,-4.306882,-8.316621,-7.760168,5.145821,6.789724,-0.270073,-1.791639,-2.302527,1.531071,8.117873,1.924545,5.401443,-8.488529,2.390356,-3.744437,-0.239866,-1.079639,-8.044028,8.519550], dtype = "float32")#candidate|4838|(2100,)|const|float32
call_4836 = relay.TupleGetItem(func_3526_call(relay.reshape(const_4837.astype('float32'), [9, 8, 9]), relay.reshape(const_4838.astype('float32'), [2100,]), ), 5)
call_4839 = relay.TupleGetItem(func_3529_call(relay.reshape(const_4837.astype('float32'), [9, 8, 9]), relay.reshape(const_4838.astype('float32'), [2100,]), ), 5)
func_2618_call = mod.get_global_var('func_2618')
func_2623_call = mutated_mod.get_global_var('func_2623')
call_4846 = relay.TupleGetItem(func_2618_call(relay.reshape(var_4820.astype('float32'), [1, 1287]), relay.reshape(const_4821.astype('float32'), [480,]), relay.reshape(var_4822.astype('uint64'), [672,]), relay.reshape(var_4823.astype('float32'), [180,]), ), 4)
call_4847 = relay.TupleGetItem(func_2623_call(relay.reshape(var_4820.astype('float32'), [1, 1287]), relay.reshape(const_4821.astype('float32'), [480,]), relay.reshape(var_4822.astype('uint64'), [672,]), relay.reshape(var_4823.astype('float32'), [180,]), ), 4)
bop_4854 = relay.logical_or(var_4809.astype('bool'), var_4808.astype('bool')) # shape=(1, 6, 2)
uop_4866 = relay.asinh(var_4809.astype('float32')) # shape=(1, 6, 2)
output = relay.Tuple([bop_4810,call_4819,var_4820,const_4821,var_4822,var_4823,call_4836,const_4837,const_4838,call_4846,bop_4854,uop_4866,])
output2 = relay.Tuple([bop_4810,call_4824,var_4820,const_4821,var_4822,var_4823,call_4839,const_4837,const_4838,call_4847,bop_4854,uop_4866,])
func_4877 = relay.Function([var_4808,var_4809,var_4820,var_4822,var_4823,], output)
mod['func_4877'] = func_4877
mod = relay.transform.InferType()(mod)
mutated_mod['func_4877'] = func_4877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4877_call = mutated_mod.get_global_var('func_4877')
var_4879 = relay.var("var_4879", dtype = "float32", shape = ())#candidate|4879|()|var|float32
var_4880 = relay.var("var_4880", dtype = "float32", shape = (1, 6, 2))#candidate|4880|(1, 6, 2)|var|float32
var_4881 = relay.var("var_4881", dtype = "float32", shape = (1287, 1))#candidate|4881|(1287, 1)|var|float32
var_4882 = relay.var("var_4882", dtype = "uint64", shape = (672,))#candidate|4882|(672,)|var|uint64
var_4883 = relay.var("var_4883", dtype = "float32", shape = (180,))#candidate|4883|(180,)|var|float32
call_4878 = func_4877_call(var_4879,var_4880,var_4881,var_4882,var_4883,)
output = call_4878
func_4884 = relay.Function([var_4879,var_4880,var_4881,var_4882,var_4883,], output)
mutated_mod['func_4884'] = func_4884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5357 = relay.var("var_5357", dtype = "float32", shape = (11, 2, 12))#candidate|5357|(11, 2, 12)|var|float32
uop_5358 = relay.rsqrt(var_5357.astype('float32')) # shape=(11, 2, 12)
bop_5364 = relay.subtract(uop_5358.astype('float64'), relay.reshape(var_5357.astype('float64'), relay.shape_of(uop_5358))) # shape=(11, 2, 12)
output = relay.Tuple([bop_5364,])
output2 = relay.Tuple([bop_5364,])
func_5369 = relay.Function([var_5357,], output)
mod['func_5369'] = func_5369
mod = relay.transform.InferType()(mod)
var_5370 = relay.var("var_5370", dtype = "float32", shape = (11, 2, 12))#candidate|5370|(11, 2, 12)|var|float32
output = func_5369(var_5370)
func_5371 = relay.Function([var_5370], output)
mutated_mod['func_5371'] = func_5371
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5565 = relay.var("var_5565", dtype = "float64", shape = (9, 6, 1))#candidate|5565|(9, 6, 1)|var|float64
uop_5566 = relay.exp(var_5565.astype('float64')) # shape=(9, 6, 1)
func_3388_call = mod.get_global_var('func_3388')
func_3391_call = mutated_mod.get_global_var('func_3391')
call_5572 = func_3388_call(relay.reshape(var_5565.astype('float32'), [3, 2, 9]), relay.reshape(var_5565.astype('float32'), [3, 2, 9]), )
call_5573 = func_3388_call(relay.reshape(var_5565.astype('float32'), [3, 2, 9]), relay.reshape(var_5565.astype('float32'), [3, 2, 9]), )
bop_5580 = relay.logical_and(var_5565.astype('bool'), relay.reshape(call_5572.astype('bool'), relay.shape_of(var_5565))) # shape=(9, 6, 1)
bop_5583 = relay.logical_and(var_5565.astype('bool'), relay.reshape(call_5573.astype('bool'), relay.shape_of(var_5565))) # shape=(9, 6, 1)
output = relay.Tuple([uop_5566,bop_5580,])
output2 = relay.Tuple([uop_5566,bop_5583,])
func_5596 = relay.Function([var_5565,], output)
mod['func_5596'] = func_5596
mod = relay.transform.InferType()(mod)
mutated_mod['func_5596'] = func_5596
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5597 = relay.var("var_5597", dtype = "float64", shape = (9, 6, 1))#candidate|5597|(9, 6, 1)|var|float64
func_5596_call = mutated_mod.get_global_var('func_5596')
call_5598 = func_5596_call(var_5597)
output = call_5598
func_5599 = relay.Function([var_5597], output)
mutated_mod['func_5599'] = func_5599
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5681 = relay.var("var_5681", dtype = "float64", shape = (12, 5, 2))#candidate|5681|(12, 5, 2)|var|float64
uop_5682 = relay.cosh(var_5681.astype('float64')) # shape=(12, 5, 2)
bop_5686 = relay.maximum(uop_5682.astype('float64'), relay.reshape(var_5681.astype('float64'), relay.shape_of(uop_5682))) # shape=(12, 5, 2)
output = relay.Tuple([bop_5686,])
output2 = relay.Tuple([bop_5686,])
func_5696 = relay.Function([var_5681,], output)
mod['func_5696'] = func_5696
mod = relay.transform.InferType()(mod)
mutated_mod['func_5696'] = func_5696
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5697 = relay.var("var_5697", dtype = "float64", shape = (12, 5, 2))#candidate|5697|(12, 5, 2)|var|float64
func_5696_call = mutated_mod.get_global_var('func_5696')
call_5698 = func_5696_call(var_5697)
output = call_5698
func_5699 = relay.Function([var_5697], output)
mutated_mod['func_5699'] = func_5699
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5796 = relay.var("var_5796", dtype = "uint32", shape = (3, 9, 12))#candidate|5796|(3, 9, 12)|var|uint32
var_5797 = relay.var("var_5797", dtype = "uint32", shape = (3, 9, 12))#candidate|5797|(3, 9, 12)|var|uint32
bop_5798 = relay.equal(var_5796.astype('bool'), relay.reshape(var_5797.astype('bool'), relay.shape_of(var_5796))) # shape=(3, 9, 12)
var_5804 = relay.var("var_5804", dtype = "uint32", shape = (3, 9, 12))#candidate|5804|(3, 9, 12)|var|uint32
bop_5805 = relay.multiply(var_5797.astype('int8'), relay.reshape(var_5804.astype('int8'), relay.shape_of(var_5797))) # shape=(3, 9, 12)
output = relay.Tuple([bop_5798,bop_5805,])
output2 = relay.Tuple([bop_5798,bop_5805,])
func_5812 = relay.Function([var_5796,var_5797,var_5804,], output)
mod['func_5812'] = func_5812
mod = relay.transform.InferType()(mod)
var_5813 = relay.var("var_5813", dtype = "uint32", shape = (3, 9, 12))#candidate|5813|(3, 9, 12)|var|uint32
var_5814 = relay.var("var_5814", dtype = "uint32", shape = (3, 9, 12))#candidate|5814|(3, 9, 12)|var|uint32
var_5815 = relay.var("var_5815", dtype = "uint32", shape = (3, 9, 12))#candidate|5815|(3, 9, 12)|var|uint32
output = func_5812(var_5813,var_5814,var_5815,)
func_5816 = relay.Function([var_5813,var_5814,var_5815,], output)
mutated_mod['func_5816'] = func_5816
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5852 = relay.var("var_5852", dtype = "float64", shape = (15, 15, 3))#candidate|5852|(15, 15, 3)|var|float64
uop_5853 = relay.rsqrt(var_5852.astype('float64')) # shape=(15, 15, 3)
bop_5855 = relay.bitwise_xor(uop_5853.astype('uint16'), relay.reshape(var_5852.astype('uint16'), relay.shape_of(uop_5853))) # shape=(15, 15, 3)
bop_5860 = relay.greater_equal(var_5852.astype('bool'), relay.reshape(uop_5853.astype('bool'), relay.shape_of(var_5852))) # shape=(15, 15, 3)
output = relay.Tuple([bop_5855,bop_5860,])
output2 = relay.Tuple([bop_5855,bop_5860,])
func_5866 = relay.Function([var_5852,], output)
mod['func_5866'] = func_5866
mod = relay.transform.InferType()(mod)
mutated_mod['func_5866'] = func_5866
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5867 = relay.var("var_5867", dtype = "float64", shape = (15, 15, 3))#candidate|5867|(15, 15, 3)|var|float64
func_5866_call = mutated_mod.get_global_var('func_5866')
call_5868 = func_5866_call(var_5867)
output = call_5868
func_5869 = relay.Function([var_5867], output)
mutated_mod['func_5869'] = func_5869
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5917 = relay.var("var_5917", dtype = "float64", shape = (16, 1, 5))#candidate|5917|(16, 1, 5)|var|float64
uop_5918 = relay.atan(var_5917.astype('float64')) # shape=(16, 1, 5)
uop_5926 = relay.sigmoid(var_5917.astype('float32')) # shape=(16, 1, 5)
const_5928 = relay.const([[[-4.639416,4.809438,6.561222,-3.293463,2.830076]],[[-3.885944,-5.154070,8.403964,9.806837,2.587051]],[[9.342914,4.948187,2.942875,4.304495,-4.966655]],[[4.451774,1.775929,0.103662,1.553138,3.553500]],[[-5.001359,-2.632765,3.412150,-9.228542,3.917372]],[[-1.920184,3.714800,9.701385,-3.970645,-0.391745]],[[-6.013589,1.360077,-5.249479,-1.085223,-8.836612]],[[-9.439492,6.299571,-9.396538,-9.759385,9.889021]],[[-3.058994,4.607137,-5.627839,-0.072249,0.216631]],[[6.368667,-6.999070,7.977394,4.670832,7.931746]],[[4.893087,9.301720,-2.266140,-1.210445,-3.265743]],[[3.442629,7.461225,-6.481106,3.381597,-8.806287]],[[7.985099,-4.155256,-6.318779,-1.790019,-4.938482]],[[-0.015527,-7.517232,-8.549506,9.007293,4.529409]],[[2.768110,-9.316437,5.503311,-0.918043,-0.726045]],[[-1.915787,-0.539450,5.667695,-6.911049,-3.010808]]], dtype = "float64")#candidate|5928|(16, 1, 5)|const|float64
bop_5929 = relay.less_equal(var_5917.astype('bool'), relay.reshape(const_5928.astype('bool'), relay.shape_of(var_5917))) # shape=(16, 1, 5)
output = relay.Tuple([uop_5918,uop_5926,bop_5929,])
output2 = relay.Tuple([uop_5918,uop_5926,bop_5929,])
func_5939 = relay.Function([var_5917,], output)
mod['func_5939'] = func_5939
mod = relay.transform.InferType()(mod)
mutated_mod['func_5939'] = func_5939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5940 = relay.var("var_5940", dtype = "float64", shape = (16, 1, 5))#candidate|5940|(16, 1, 5)|var|float64
func_5939_call = mutated_mod.get_global_var('func_5939')
call_5941 = func_5939_call(var_5940)
output = call_5941
func_5942 = relay.Function([var_5940], output)
mutated_mod['func_5942'] = func_5942
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6158 = relay.var("var_6158", dtype = "float32", shape = (1, 7, 13))#candidate|6158|(1, 7, 13)|var|float32
uop_6159 = relay.sinh(var_6158.astype('float32')) # shape=(1, 7, 13)
func_5939_call = mod.get_global_var('func_5939')
func_5942_call = mutated_mod.get_global_var('func_5942')
var_6170 = relay.var("var_6170", dtype = "float64", shape = (4, 20))#candidate|6170|(4, 20)|var|float64
call_6169 = relay.TupleGetItem(func_5939_call(relay.reshape(var_6170.astype('float64'), [16, 1, 5])), 1)
call_6171 = relay.TupleGetItem(func_5942_call(relay.reshape(var_6170.astype('float64'), [16, 1, 5])), 1)
bop_6175 = relay.multiply(uop_6159.astype('int64'), relay.reshape(var_6158.astype('int64'), relay.shape_of(uop_6159))) # shape=(1, 7, 13)
bop_6185 = relay.not_equal(bop_6175.astype('bool'), relay.reshape(var_6158.astype('bool'), relay.shape_of(bop_6175))) # shape=(1, 7, 13)
uop_6192 = relay.erf(uop_6159.astype('float32')) # shape=(1, 7, 13)
output = relay.Tuple([call_6169,var_6170,bop_6185,uop_6192,])
output2 = relay.Tuple([call_6171,var_6170,bop_6185,uop_6192,])
func_6197 = relay.Function([var_6158,var_6170,], output)
mod['func_6197'] = func_6197
mod = relay.transform.InferType()(mod)
var_6198 = relay.var("var_6198", dtype = "float32", shape = (1, 7, 13))#candidate|6198|(1, 7, 13)|var|float32
var_6199 = relay.var("var_6199", dtype = "float64", shape = (4, 20))#candidate|6199|(4, 20)|var|float64
output = func_6197(var_6198,var_6199,)
func_6200 = relay.Function([var_6198,var_6199,], output)
mutated_mod['func_6200'] = func_6200
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6340 = relay.const([[[-3.917131,5.235894],[-4.112172,-2.410248],[0.282228,-9.436600],[0.148423,-4.191371],[-0.086025,-3.552375],[-5.999184,-8.183063],[7.403471,-8.563099],[-8.787382,8.077186],[-1.108046,6.882482],[-4.004923,-2.577646],[4.559471,-6.575171],[7.907054,-2.808568]],[[-0.991450,7.895318],[6.283867,8.140706],[-9.746427,-5.136937],[4.561539,9.271155],[-8.761524,-2.832967],[-0.802772,2.322306],[9.129923,-2.644710],[-5.941891,-8.184441],[3.118906,8.053299],[4.941819,5.994679],[-0.894574,4.747391],[-1.407007,-9.635363]],[[1.682214,4.478372],[5.156466,-9.388268],[-0.976477,9.302156],[7.522718,-1.914227],[6.253691,1.728037],[-5.844386,-7.825126],[-2.025692,3.991646],[-3.430779,3.914265],[-3.483107,1.813763],[9.943143,0.073958],[-1.264261,-6.866742],[-0.124731,-4.208711]],[[5.609888,8.593020],[2.748885,-8.342985],[3.372371,-0.156621],[8.276017,7.094826],[-1.337192,1.860501],[-0.103167,-0.906157],[8.579963,-6.213603],[1.880053,5.553570],[-0.595515,-7.631402],[-1.388612,8.938267],[-3.131380,0.292381],[-8.970328,-2.174167]],[[6.887217,-9.230559],[-7.808984,-2.425329],[-3.271776,2.780862],[-5.976452,-9.622776],[8.342882,-3.263204],[4.503653,9.421757],[7.332380,-8.054746],[-6.446718,-9.669877],[-3.560725,7.377102],[2.840185,7.235603],[2.636738,5.039688],[3.150407,-2.787184]],[[2.401856,1.995741],[9.020063,-6.495651],[0.195579,-6.438149],[4.115171,-7.287604],[7.231050,-7.531536],[0.922982,-4.239390],[8.015936,-4.112362],[5.369352,2.761565],[4.580352,-1.399424],[-6.452226,7.672033],[1.222092,2.273315],[0.846550,-8.928144]]], dtype = "float64")#candidate|6340|(6, 12, 2)|const|float64
var_6341 = relay.var("var_6341", dtype = "float64", shape = (6, 12, 2))#candidate|6341|(6, 12, 2)|var|float64
bop_6342 = relay.divide(const_6340.astype('float64'), relay.reshape(var_6341.astype('float64'), relay.shape_of(const_6340))) # shape=(6, 12, 2)
func_3027_call = mod.get_global_var('func_3027')
func_3030_call = mutated_mod.get_global_var('func_3030')
const_6348 = relay.const([2,-2,2,5,3,1,5,-2,6,-10,-4,-10,3,-5,-2,10,-8,7,6,-1,4,-7,-8,9,4,10,4,-8,5,-8,2,3,2,2,-1,-1,5,-5,-6,8,4,7,-7,9,-8,10,-4,-2,2,8,-8,-10,6,5,-2,3,10,-5,5,-2,-8,-7,-5,1,-4,3,-8,5,10,8,-3,-7,-3,4,4,-2,-6,7,7,-1,8,3,8,-2,7,10,4,-5,-10,4,-4,-10,-7,-4,-6,-7,10,10,9,-8,-5,8,-10,6,-3,5,9,8,2,-10,8,3,-1,-7,9,7,-8,3,10,-7,10,-10,9,4,-1,-2,-4,-6,9,5,3,-4,-9,-6,-6,1,6,4,-1,-7,-3,-1,3,3,-5,2,2,-6,2,-9,-6,4,-2,-5,5,7,-10,-8,-8,-5,-1,10,2,2,9,-2,-2,6,3,10,5,9,-8,6,-7,-10,9,-10,5,7,-5,-8,5,4,-9,-7,2,8,10,7,-7,6,4,-7,1,-2,2,7,7,-5,-6,9,-6,-9,2,-4,10,5,7,4,7,-6,9,4,3,-2,-2,8,-9,4,10,2,-9,5,-10,-6,4,-4,5,8,-9,-8,1,-7,-10,6,1,1,5,-6,4,10,3,-2,-3,-6,-1,1,10,-4,1,2,8,-1,-9,5,-10,3,10,4,6,-6,-6,-8,-7,7,-2,7,2,2,7,-7,2,-2,3,-6,6,5,6,-8,-6,10,-4,10,7,9,9,10,-4,-6,6,8,-1,-6,6,2,1,-2,1,2,5,-1,-7,-8,1,2,3,3,-4,-2,5,4,6,-2,9,-4,-7,-1,-5,-7,-10,-6,-8,-8,8,-3,-6,8,5,8,3,-8,-8,-5,7,-9,-1,-1,-2,3,1,-2,5,8,9,3,1,-4,-2,1,-3,8,3,-4,10,-4,7,9,-3,1,-4,-6,8,3,-1,9,3,7,-7,-3,-2,10,-1,3,-6,10,1,-7,5,8,4,-9,3,5,1,-6,4,-4,5,-1,-10,-2,-6,-9,-9,-9,2,-2,-6,-4,-4,9,8,-3,1,-7,6,3,8,-4,-6,-2,1,-5,10,3,4,1,7,7,9,-8,-3,8,-2,-10,3,1,3,-2,-7,-8,9,5,5,-6,5,-3,7,-10,2,-9,2,-1,-6,-10,10,-6,-9,-8,10,-3,8,-3,-7,-5,-5,-6,-4,3,-1,-5,-3,1,9,-10,-3,-5,-9,7,-5,7,-7,-6,1,3,2,-5,6,-9,-7,-3,2,-1,-8,8,-3,3,7,2,-1,-10,-10,10,-2], dtype = "uint8")#candidate|6348|(495,)|const|uint8
call_6347 = func_3027_call(relay.reshape(const_6348.astype('uint8'), [11, 5, 9]), relay.reshape(const_6348.astype('uint8'), [11, 5, 9]), )
call_6349 = func_3027_call(relay.reshape(const_6348.astype('uint8'), [11, 5, 9]), relay.reshape(const_6348.astype('uint8'), [11, 5, 9]), )
func_1592_call = mod.get_global_var('func_1592')
func_1597_call = mutated_mod.get_global_var('func_1597')
var_6351 = relay.var("var_6351", dtype = "float32", shape = (1287,))#candidate|6351|(1287,)|var|float32
const_6352 = relay.const([[-0.450238,3.016208,2.356413,-0.989524,7.646057,-3.351023,3.772846,8.983495,2.259657,3.976071,1.989261,4.866445],[2.433279,-6.246667,-5.309678,-5.385961,-0.022348,2.641467,5.961068,-3.376580,8.700169,-7.347680,-7.703946,4.964168],[0.454340,9.065151,-7.640943,-7.678532,9.963304,5.792547,5.881763,9.867316,-8.045091,6.566581,-0.298652,-7.000358],[-1.097932,-7.810565,2.801590,-1.875674,-2.566671,2.870867,8.100507,-2.572947,-5.107580,-8.353259,-7.554926,5.237760],[8.783963,-5.255645,0.464083,8.839960,-0.737489,-7.585408,4.231192,-2.166072,-3.874494,-5.498931,6.354801,5.965681],[-9.127174,1.125327,5.982795,3.848813,3.910845,-6.871608,3.424446,6.532522,-4.394566,9.224593,-0.628621,5.550219],[7.141565,-6.645788,0.983985,-1.540298,-2.058221,-2.974371,8.931854,-3.584681,3.463878,2.597663,-1.403678,-3.125119],[-5.999703,-6.976652,7.962915,0.455770,4.904913,-8.375650,2.924096,-3.724464,-3.882890,9.999341,9.007534,9.043507],[1.035228,9.047085,2.830731,-4.855771,0.950246,-5.686556,-7.898507,1.084954,-7.605990,-3.463360,-2.221189,6.821020],[4.637629,-7.045035,-7.969296,-8.579132,-9.101259,4.065390,8.630380,6.546073,-8.257058,-3.279778,-3.688908,-1.937110],[5.663129,-3.170668,8.967879,-8.839796,4.790096,8.940812,-7.418230,3.119537,8.271136,-7.719715,-0.081126,2.805883],[-6.427326,4.133762,7.567683,8.478552,0.380837,5.443007,3.246424,8.562134,-7.607067,-7.986047,-2.824506,-0.647845],[-0.332482,0.357431,-5.730970,2.168673,-6.261370,6.391288,-3.361065,-2.693997,2.726934,-2.004909,1.999770,5.410238],[6.661303,8.427364,1.204756,1.329853,-7.334096,-4.801317,-8.343618,6.613361,-0.885021,-4.988369,2.333840,-6.982158],[-8.807174,8.772566,3.563767,-7.622493,-4.104395,-9.612668,6.252674,7.135406,-8.222302,-6.241158,4.369590,9.519840],[9.477847,-7.133255,-6.324712,7.740633,-8.607799,4.064040,2.463597,-7.242671,2.762393,5.534133,-3.977080,-5.581426],[-8.636623,0.075237,4.294239,6.105695,8.548536,1.262984,0.524320,-3.540593,-9.877003,5.757697,6.820739,8.078073],[-7.348974,0.864689,-6.021024,-6.504838,2.410217,-3.765082,-1.253526,0.707188,-0.966796,-8.357763,6.676740,9.746978],[-3.010930,3.445598,-4.455837,-6.750002,3.152401,9.851864,3.075585,-5.821482,-2.534460,6.604088,-3.879188,-6.666796],[-0.302943,-8.746499,0.439406,3.374821,-8.847556,-9.002512,5.828211,-3.822745,-9.062596,-3.862916,8.162536,-2.703953],[-8.845089,-8.390339,-5.627992,3.369667,9.706274,-1.278058,5.738958,-6.503355,-0.956049,-2.487421,4.434016,-1.307956],[-0.810188,-2.307515,0.506659,6.240664,-6.464410,6.798209,-5.929787,1.963389,-1.696744,3.373989,2.332594,-4.224383],[-6.806028,-2.822133,7.850968,4.981501,5.041150,8.865755,9.854459,-2.169341,-9.232671,-1.674221,-1.573845,2.663047],[-2.802278,-2.416161,-4.875438,4.676978,1.381125,7.508313,2.090596,7.749886,-9.396506,9.055095,1.914932,1.796606],[7.634486,1.502103,-0.827259,5.231449,7.173741,-1.063081,-2.600740,-2.936388,9.687889,-3.514551,-0.825614,-0.955723],[-8.138016,-5.739588,6.364889,2.191720,-2.590619,8.074490,4.934320,5.254317,-5.160377,4.547229,3.834590,8.881189],[4.185790,4.582075,8.341036,-9.921132,-2.589218,5.194690,-5.690163,-0.931581,8.200260,0.594495,-9.900701,6.373673],[1.224531,2.841789,-2.932108,9.136200,-7.594543,-0.357800,-7.324807,1.861257,8.459786,7.274482,-9.597915,-6.133945],[3.228091,-6.103055,-7.051282,-9.207471,-8.899278,1.820411,-1.015657,-8.547179,3.766672,-3.249438,7.221019,-8.476525],[9.347030,7.985549,-9.788043,6.944181,1.406534,7.354693,-9.390715,3.111476,-3.438619,0.528078,-3.370031,1.162140],[-4.493978,9.137315,-6.735846,2.147595,2.105753,9.512390,-5.750741,3.472748,-5.503033,-4.993060,8.221801,-0.321524],[-5.148090,-0.213589,0.853036,-2.089003,-8.326987,-6.548619,-4.814680,-2.588178,-3.290828,5.180993,-3.867985,-3.270134],[1.045148,6.226666,3.942987,-2.303452,-3.170123,-6.439154,3.837992,7.949226,-1.581096,-5.098601,3.975297,1.436406],[-9.262739,5.089013,0.342354,8.211618,-5.273057,8.806316,-1.456477,5.956177,3.145582,1.295921,-5.248477,-3.452176],[-3.800063,2.337256,5.130252,7.424084,1.824870,-2.898273,-1.863391,-7.070483,3.079662,-6.666034,4.976127,-8.297193],[0.474915,0.074724,-7.688010,7.272229,-3.862899,1.263069,9.097342,4.146023,2.997536,9.990417,-9.381535,-0.573088],[-2.192222,9.431117,-0.937868,-4.851008,3.875771,8.658052,5.489527,-8.163937,-1.154060,0.013496,-7.695021,-8.446595],[-4.558751,-3.941302,2.174251,-5.708681,3.493349,-8.987372,8.098559,-2.008746,-5.141435,5.988081,-5.753734,-6.408351],[8.760272,-0.674200,-8.124721,3.096736,-5.921948,1.985696,-1.567428,8.276549,-6.122943,1.462829,-1.559136,-9.433491],[0.753981,-9.733658,-4.616545,-4.619804,-8.707617,1.855927,-8.195537,-9.094627,-1.972609,-6.169754,3.156867,4.863708]], dtype = "float32")#candidate|6352|(40, 12)|const|float32
const_6353 = relay.const([[-7,-1,-4,-9,-7,-7,3,-5,1,5,-6,6,3,8,4,-8,-10,7,9,-8,-6,-3,8,-2,-5,2,1,-7,-6,4,-10,2,-3,-5,-6,-9,7,-3,-1,-6,6,-8,-6,3,10,3,-10,-10,-5,-5,8,-7,-9,-10,7,-9,-3,-8,-3,-2,-8,1,-1,3,7,-1,4,-8,8,5,5,6,2,7,-7,-6,-4,-5,1,-3,5,-1,-1,4,-8,-5,-5,-1,7,2,-4,10,-9,-5,2,7,1,6,9,-1,1,2,-9,4,-10,1,-5,4,-8,4,-4,-7,1,6,5,10,5,3,4,9,4,-8,3,-2,-8,10,7,6,9,9,1,-2,-1,10,2,7,-9,4,-6,2,-3,7,-8,-10,-9,2,8,8,-1,-3,8,-9,-7,-1,-1,1,5,-8,3,1,6,-1,9,4,-8,3,8,-4,-8,10,-8,-5,-10,-6,-10,-4,10,1,-5,-9,1,-8,5,6,5,-3,8,5,-3,-1,-8,9,8,-9,-6,-5,-2,6,5,3,9,-4,-5,4,-10,1,8,5,-10,1,3,-3,-9,2,-4,-5,-10,9,-7,-3,8,4,4,3,4,-1,10,-3,6,2,-2,-10,-3,10,-4,7,-9,-9,10,8,-8,2,5,-4,1,-9,-10,-5,-10,4,-8,-7,10,1,-9,-6,9,2,1,5,1,-5,4,5,3,-9,10,1,3,-2,10,-9,3,-3,7,-8,-1,-3,-1,1,8,8,-8,-8,8,3,-7,8,-4,-6,-6,-1,-7,2,-5,-1,-2,10,5,-1,9,4,-6,8,1,1,10,4,8,-5,-10,-5,5,-2,-5,-7,9,-4,4,-5,8,4,-7,7,-6,-8,9,9,-1,8,6,-2,-7,-9,10,7],[9,-8,-10,4,9,2,-7,4,2,4,7,2,-4,-6,5,2,5,-2,9,10,-10,-6,3,-5,-1,-4,6,-4,-9,5,-6,-9,1,5,-9,-5,-9,-6,-10,1,9,-10,3,7,6,7,-1,4,-10,-1,6,-6,7,-1,-2,-8,8,-7,-4,3,8,-4,8,2,-7,-7,-1,9,-4,6,-5,-8,-6,3,9,2,10,8,-3,6,-5,4,7,-5,8,-8,8,5,10,4,6,9,-1,3,-9,-8,1,2,7,-10,1,-5,1,4,8,3,5,9,10,2,1,6,1,-2,7,3,-8,-8,-8,2,-2,9,8,-3,-10,-2,6,4,7,-8,-8,4,-9,6,-5,-3,-5,4,2,4,4,-4,-5,8,4,8,-6,9,5,1,4,-8,-8,-4,8,4,-5,2,7,-6,5,5,6,-5,1,-2,-1,6,1,-2,10,-2,-4,-7,-4,4,-6,-1,4,5,5,10,10,-7,-6,1,-7,-2,-9,2,1,5,8,4,-5,7,8,5,-5,-10,-3,8,-6,-3,-9,-8,-2,2,10,-1,-4,-2,10,-10,-2,-8,1,-9,6,2,4,10,3,-5,7,-8,8,3,9,-3,-4,-8,-8,-4,6,2,5,9,3,3,-1,10,10,7,9,-2,10,-9,-6,5,-10,5,10,-7,7,-4,2,-10,-7,4,5,-10,4,5,4,-6,-6,2,-5,10,9,-2,8,-3,-9,3,-1,-10,2,-6,3,9,-3,7,9,1,1,-7,7,6,-7,9,1,2,5,8,-2,-9,-9,4,-4,-4,-2,6,2,-7,-10,-4,6,-2,8,10,8,-6,6,5,-6,-6,3,-10,-3,-4,3,-4,6,1,8,3,-1,-7,8,8,2,-4,8,-1]], dtype = "uint64")#candidate|6353|(2, 336)|const|uint64
const_6354 = relay.const([-8.905674,4.209256,3.710225,4.271680,7.372423,-6.489587,8.255233,4.942858,-0.279065,-3.088661,6.752384,-4.936089,2.131673,6.398535,5.280944,7.239528,-6.384976,-9.553967,9.925615,5.735805,-3.289550,-4.397132,-6.149195,-7.435517,8.999590,9.373374,-7.524295,2.217753,-4.809323,-7.830906,5.009905,5.431316,7.395143,0.259341,6.224334,5.174047,-8.715065,-6.785094,0.772470,8.068484,3.168720,-0.045943,-1.037259,7.020077,-9.014205,-7.068478,8.194889,-1.408818,5.509036,4.888468,-1.323746,-1.961795,-1.488951,3.675884,6.539452,-9.227314,0.114403,4.377695,3.611024,1.230377,-4.471635,6.032974,2.925681,-3.142198,0.371724,-9.591070,-8.306933,-3.945417,2.355049,9.122760,-1.260817,9.200444,-4.499646,6.184662,-9.034986,0.293284,-7.184884,-3.234114,-3.854149,-3.307171,4.894065,-0.481729,7.776198,-3.871862,-6.261101,-5.688121,-6.487344,4.678539,-9.575790,-4.632351,4.782215,5.765734,-1.563055,6.107687,5.068303,-9.209968,-3.691175,-6.181494,4.617425,-1.245103,-4.974772,-8.116598,6.685772,0.805053,-0.590078,-4.656743,-5.423534,1.035394,5.807586,1.796178,-1.259738,6.525813,-8.498330,-6.134910,8.138204,-5.552408,5.497434,-5.910805,-1.166672,-5.230459,5.747555,-4.194112,0.290759,-1.803094,-0.712053,8.767919,5.988113,-6.098959,-5.402670,5.656056,2.167083,-0.884523,-1.461025,3.132966,-1.600574,5.831260,-1.623294,5.494834,2.964036,7.318417,-6.804874,-6.380673,4.091942,1.639940,0.414370,2.204015,-5.131301,-9.991622,-1.729555,9.104405,7.705818,-8.835464,-6.172413,4.558592,7.284760,-3.991502,6.143226,0.677084,2.170012,7.447862,9.449492,8.658707,-2.730095,-8.740802,-4.118381,6.690513,-0.016849,6.562205,-2.173331,-3.813833,4.684268,0.785977,6.097653,-5.020085,2.003889,-1.112654,-3.944195,6.957799,4.959707,-9.323326], dtype = "float32")#candidate|6354|(180,)|const|float32
call_6350 = relay.TupleGetItem(func_1592_call(relay.reshape(var_6351.astype('float32'), [9, 11, 13]), relay.reshape(const_6352.astype('float32'), [120, 4]), relay.reshape(const_6353.astype('uint64'), [672,]), relay.reshape(const_6354.astype('float32'), [3, 60]), ), 1)
call_6355 = relay.TupleGetItem(func_1597_call(relay.reshape(var_6351.astype('float32'), [9, 11, 13]), relay.reshape(const_6352.astype('float32'), [120, 4]), relay.reshape(const_6353.astype('uint64'), [672,]), relay.reshape(const_6354.astype('float32'), [3, 60]), ), 1)
func_1671_call = mod.get_global_var('func_1671')
func_1675_call = mutated_mod.get_global_var('func_1675')
var_6361 = relay.var("var_6361", dtype = "uint32", shape = (360,))#candidate|6361|(360,)|var|uint32
call_6360 = func_1671_call(relay.reshape(var_6361.astype('uint32'), [3, 8, 15]), relay.reshape(var_6361.astype('uint32'), [3, 8, 15]), )
call_6362 = func_1671_call(relay.reshape(var_6361.astype('uint32'), [3, 8, 15]), relay.reshape(var_6361.astype('uint32'), [3, 8, 15]), )
bop_6368 = relay.greater(const_6352.astype('bool'), relay.reshape(call_6350.astype('bool'), relay.shape_of(const_6352))) # shape=(40, 12)
bop_6371 = relay.greater(const_6352.astype('bool'), relay.reshape(call_6355.astype('bool'), relay.shape_of(const_6352))) # shape=(40, 12)
func_5866_call = mod.get_global_var('func_5866')
func_5869_call = mutated_mod.get_global_var('func_5869')
const_6373 = relay.const([4.702903,9.008532,7.719664,-2.550269,0.976332,-5.574522,7.828882,4.110401,3.219734,-9.619841,2.018955,-3.440541,-9.292578,-3.301779,-5.787071,0.728914,-0.394174,-6.072005,6.875964,4.409782,3.544150,-4.111827,4.075023,-9.108170,-6.519872,1.487112,1.431620,-0.823637,3.310430,7.199375,-5.289217,-7.703687,2.095265,-4.382387,3.066670,8.855276,6.569833,4.692815,4.038044,1.805543,-5.677284,7.865556,-7.748137,8.906989,-8.743627,1.229040,9.085458,-8.289079,-6.756672,7.132507,-8.874773,2.387353,9.138026,4.644918,-7.599979,-6.194432,8.380288,-1.330334,1.164728,-8.317830,-4.461119,-8.409322,6.123413,-5.465498,6.861369,9.524659,-7.773025,7.297174,6.664504,-1.664578,-7.372246,-5.651968,9.214323,2.843905,-9.469522,-7.571770,-9.352999,-2.029147,3.829087,7.708654,-7.759837,0.220308,9.956671,-8.568688,1.915163,-1.598744,-0.728362,0.657634,2.352230,-4.929156,-1.599890,-7.136098,-1.335935,-9.236000,1.103702,-4.305656,-3.020106,-1.842122,5.368677,-5.280294,-3.328670,-2.766269,7.675765,-8.736370,-0.102874,-8.102360,0.681406,2.393627,5.227940,-0.510391,-5.173412,0.448810,-1.757311,-1.442559,-4.942757,-0.290593,-1.707144,9.346898,-9.533377,-7.649211,3.251604,-4.241305,-8.114442,-7.284028,1.616757,-8.917291,0.454896,4.923987,-1.809953,6.963454,-6.721853,9.752850,-9.197166,5.998679,-3.571332,-5.352490,-3.756133,-7.279950,-8.911749,4.052724,7.211834,7.021661,4.890515,-0.203206,4.467184,-5.113708,9.117162,-6.505302,5.686014,7.194358,9.958148,5.131510,-8.783826,-8.123263,-4.424302,-2.412997,-3.273599,-0.076139,-9.649542,4.380287,9.151485,-5.064078,4.444443,-2.589728,-8.113245,-6.636193,8.967093,5.524285,9.307858,1.850832,5.612225,-0.191057,4.803861,1.017715,9.301484,2.294380,3.476080,-5.634572,-3.762316,8.846761,-1.487424,2.921679,1.240068,4.888641,-8.188344,-1.107738,-8.881572,8.971061,5.386870,-3.615063,5.410161,6.402617,0.266700,9.812242,6.877863,-8.174535,-0.939352,5.423098,-4.879529,9.239682,8.889594,3.685467,-9.832596,-9.528883,7.848839,-9.660861,-8.975920,9.749175,5.425564,-6.330300,1.619321,-9.728255,-5.492558,5.399002,-9.660406,2.074583,-5.174872,-9.961430,-9.029308,3.505232,4.615732,-3.313883,5.899033,3.274009,7.622576,3.502797,-3.598791,-4.977604,-3.249468,8.703393,-4.892238,-0.912456,9.841890,2.660553,4.204147,-8.718322,2.788694,8.494950,-8.372667,9.295256,-7.341154,7.156759,8.041431,8.668127,1.218916,-6.353215,0.799790,2.125286,4.168353,-5.990460,3.655514,5.448655,-3.772720,1.940699,7.490406,-8.229243,-0.651911,-6.378119,7.583911,3.546701,6.473750,2.388187,-6.953415,5.651504,9.553870,5.063829,-8.524304,2.132199,4.676232,-5.846143,-5.951092,-2.330144,-6.135359,-2.266900,-8.295226,-4.961314,5.594037,-7.031248,-5.087004,-3.439669,-3.492221,-8.376333,-4.335908,9.820189,0.482033,6.276153,-5.669081,-7.222383,-2.671519,-2.726974,-2.125985,-4.561315,-9.388383,7.463349,3.310696,1.832490,6.972265,-9.650011,9.633217,4.807212,5.311765,-1.713859,-0.985556,-0.614830,0.932422,9.245428,-3.464327,-1.701675,0.412355,1.963523,7.418684,-0.890861,3.161597,-9.893371,-8.729188,9.549458,-6.791886,0.488162,-6.967322,-0.842413,-1.388658,3.474188,3.696819,-9.906090,3.941724,3.854521,-0.975613,-3.277049,3.948931,-8.828457,-0.178493,9.718575,-4.537030,-5.743074,9.034401,-7.597988,-0.051192,-9.107361,8.162552,-3.032283,-0.278537,9.357659,0.535843,-6.858369,0.892492,-6.747463,-1.524058,-8.971351,-4.180202,3.673131,4.048696,-5.374465,5.081568,-5.025496,7.560904,-0.962912,-9.442381,-7.997279,9.290496,-7.727805,2.609577,-6.026233,3.413456,-1.538327,3.268767,4.109410,-4.450536,1.779666,-7.655659,-0.224507,-0.767919,3.373196,8.491010,0.018108,4.432502,1.694624,-2.803602,-5.484031,-3.479648,-5.613626,3.729867,3.034364,5.210751,1.238008,-1.395520,4.645922,-1.941667,8.872000,-0.548808,-6.835052,7.668026,-3.853348,-8.683340,5.152755,-6.670025,-5.396810,1.368784,4.399454,-0.002181,-7.321336,-4.274995,-2.713596,-2.107627,-5.519483,-2.844820,-5.222966,-2.045146,3.116621,-8.361915,-7.036622,-6.102759,-2.043906,-3.256496,-8.816930,-0.314858,7.688849,-1.224619,-6.930304,4.351519,1.807739,6.923518,5.189124,4.410734,-2.692239,2.654855,-7.519380,-8.771659,5.257214,-6.743438,9.082680,-9.672851,5.924775,-0.250880,-3.278449,4.379388,6.296113,3.755127,-3.310164,-0.755856,-6.743901,2.777375,5.222355,0.952863,-0.430284,7.095534,4.876403,-2.930331,-1.090012,-1.914257,3.148685,6.890561,-7.036120,7.335093,0.250792,-5.286765,-3.139196,-8.436471,9.183578,-3.114109,3.292574,1.809273,-0.136836,2.049396,8.755576,0.300600,2.854042,4.444751,4.034587,4.609083,-9.378561,9.410782,3.098209,8.070010,3.676497,0.795891,1.802573,8.042964,-7.547668,-3.800024,-7.453203,-0.494115,-5.626826,-7.754181,7.413096,-8.792891,6.400622,-2.397019,9.623383,4.914129,0.915872,7.809061,5.329523,-7.044518,-2.223134,5.904811,-9.803479,-8.550059,-0.442351,9.683921,-5.683098,0.285065,4.115197,5.366472,8.892885,4.932942,1.487267,8.127784,-4.072018,-5.551905,7.544935,3.543092,-0.014686,-5.297497,-3.587191,-9.669371,-1.539493,-1.848001,6.789380,-8.697919,-7.588872,8.355289,2.012373,4.848080,8.971740,-4.187051,4.980401,-3.082699,6.955885,-1.591351,-0.130781,8.514961,4.570188,-8.615221,4.036751,4.996274,5.021580,6.644965,-3.736809,-2.722336,-3.917651,-2.146844,-1.803021,3.929996,0.067237,-0.805358,-2.028797,-9.054494,9.521524,-7.694935,-7.727661,2.319921,9.215182,-8.408561,2.373131,6.858863,3.580920,5.577825,-9.257388,1.993728,1.834362,-4.142270,8.560809,2.406029,3.652604,2.300331,6.121430,2.531620,2.933310,-4.811383,-7.797117,9.289258,6.851497,-0.484311,5.934070,-2.729029,1.291842,8.183781,7.597786,1.601851,-1.431417,-8.302421,0.271916,-4.022731,5.834883,6.065619,-9.655050,4.790397,-9.353517,-3.746275,-2.902781,-3.536607,7.839265,-7.093879,-2.744443,0.642188,2.631455,-8.046588,-5.609393,1.995163,-4.838382,3.587998,7.862855,-3.930330,-6.238767,-7.333781,8.780738,-1.021825,-2.406137,-7.082679,3.564092,3.141557,7.626386,9.295457,5.585192,-7.786263,-1.975973,-2.744989,-8.502886,5.571432,7.798610,3.157607,-9.137010,8.124818,3.646048,8.150899,-9.127024,7.094659,-8.594025,9.531606,4.538181,1.339515,8.837888,-7.779494,0.679178,2.653113,5.940509,7.820980,-4.050255,-6.330549,-1.106187,-1.142717,-7.533076,4.392052,7.526230,-2.327903,-3.009354,-2.705836,-5.175998,5.647506,-6.531750,-5.334073,-7.612994,4.499370,5.340322,-3.937292,9.783234,-0.383944,-9.622161,-2.274362,-8.307182,-3.647635,6.832316,-6.268810,3.691683,6.972388,-9.641915,5.177557,0.475370,-0.465509,-2.370258,9.847181,3.162842,-8.800588,9.268550,0.831982], dtype = "float64")#candidate|6373|(675,)|const|float64
call_6372 = relay.TupleGetItem(func_5866_call(relay.reshape(const_6373.astype('float64'), [15, 15, 3])), 0)
call_6374 = relay.TupleGetItem(func_5869_call(relay.reshape(const_6373.astype('float64'), [15, 15, 3])), 0)
var_6381 = relay.var("var_6381", dtype = "bool", shape = (40, 12))#candidate|6381|(40, 12)|var|bool
bop_6382 = relay.power(bop_6368.astype('float32'), relay.reshape(var_6381.astype('float32'), relay.shape_of(bop_6368))) # shape=(40, 12)
bop_6385 = relay.power(bop_6371.astype('float32'), relay.reshape(var_6381.astype('float32'), relay.shape_of(bop_6371))) # shape=(40, 12)
func_1671_call = mod.get_global_var('func_1671')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_6395 = func_1671_call(relay.reshape(call_6360.astype('uint32'), [3, 8, 15]), relay.reshape(var_6361.astype('uint32'), [3, 8, 15]), )
call_6396 = func_1671_call(relay.reshape(call_6360.astype('uint32'), [3, 8, 15]), relay.reshape(var_6361.astype('uint32'), [3, 8, 15]), )
func_2942_call = mod.get_global_var('func_2942')
func_2946_call = mutated_mod.get_global_var('func_2946')
const_6398 = relay.const([8.912747,-1.480424,-3.721317,3.427914,-5.244944,-2.066718,1.005767,8.507117,-2.933371,-1.565594,-5.519380,-8.883977,5.384540,-7.696305,5.757747,-8.097635,5.042274,-0.326628,-9.566707,-1.320506,4.748967,-8.546199,-9.218438,-0.533377,-8.582379,-2.176046,4.478096,-3.786405,-5.909375,7.199357,-9.404717,-3.150938,4.191894,8.328721,8.176814,-9.747157,-4.433339,3.784398,-3.298587,6.438415,-8.276261,9.401613,7.178263,0.237365,-2.937605,3.676787,-5.627108,1.420472,-6.084465,0.331850,-7.366053,1.253396,7.592716,0.355007,-7.540642,-1.474940,-8.188347,-1.558646,7.981082,9.028615,0.769540,-8.253593,0.329589,7.196149,-5.585684,3.280258,-0.169426,8.070439,3.505553,2.716765,-6.427065,-3.468038,4.130898,-6.736789,-8.777638,-3.039444,-5.050290,-8.763479,-9.523711,-4.872717,-3.362316,1.912746,-8.804980,-7.721421,8.619496,3.633910,7.008513,6.513207,4.647038,-6.750902,7.598640,1.275111,7.098771,9.076427,0.095399,3.698911,0.971092,-5.964508,6.547775,6.095152,-1.877513,-4.212510,8.507125,-0.357481,3.171860,-7.533617,5.770505,6.007794,3.370161,7.050395,-3.989906,3.275239,1.341754,0.094678,-8.423788,-0.780814,3.183023,9.367923,-1.976085,4.420543,-4.200580,-5.254019,4.314927,-9.648934,9.987440,3.327286,-0.563404,5.449546,-9.936766,0.880720,-7.941418,4.121811], dtype = "float64")#candidate|6398|(132,)|const|float64
call_6397 = relay.TupleGetItem(func_2942_call(relay.reshape(const_6398.astype('float64'), [6, 2, 11]), relay.reshape(const_6354.astype('float32'), [180, 1]), ), 2)
call_6399 = relay.TupleGetItem(func_2946_call(relay.reshape(const_6398.astype('float64'), [6, 2, 11]), relay.reshape(const_6354.astype('float32'), [180, 1]), ), 2)
uop_6412 = relay.cosh(call_6350.astype('float32')) # shape=(4, 8, 15)
uop_6414 = relay.cosh(call_6355.astype('float32')) # shape=(4, 8, 15)
output = relay.Tuple([bop_6342,call_6347,const_6348,var_6351,const_6353,const_6354,call_6360,var_6361,call_6372,const_6373,bop_6382,call_6395,call_6397,const_6398,uop_6412,])
output2 = relay.Tuple([bop_6342,call_6349,const_6348,var_6351,const_6353,const_6354,call_6362,var_6361,call_6374,const_6373,bop_6385,call_6396,call_6399,const_6398,uop_6414,])
func_6416 = relay.Function([var_6341,var_6351,var_6361,var_6381,], output)
mod['func_6416'] = func_6416
mod = relay.transform.InferType()(mod)
mutated_mod['func_6416'] = func_6416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6416_call = mutated_mod.get_global_var('func_6416')
var_6418 = relay.var("var_6418", dtype = "float64", shape = (6, 12, 2))#candidate|6418|(6, 12, 2)|var|float64
var_6419 = relay.var("var_6419", dtype = "float32", shape = (1287,))#candidate|6419|(1287,)|var|float32
var_6420 = relay.var("var_6420", dtype = "uint32", shape = (360,))#candidate|6420|(360,)|var|uint32
var_6421 = relay.var("var_6421", dtype = "bool", shape = (40, 12))#candidate|6421|(40, 12)|var|bool
call_6417 = func_6416_call(var_6418,var_6419,var_6420,var_6421,)
output = call_6417
func_6422 = relay.Function([var_6418,var_6419,var_6420,var_6421,], output)
mutated_mod['func_6422'] = func_6422
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6621 = relay.const([[[-2,-10,-1,-9,-8,-10],[-2,1,-2,-10,-10,-5],[5,-3,-5,-4,8,-4]],[[-8,9,-7,-6,9,-6],[-8,-4,-9,9,-8,8],[3,-10,8,2,-8,-2]],[[10,-3,5,10,8,-4],[-2,-1,-5,-6,1,-1],[-2,4,6,5,4,-4]],[[7,-4,9,2,-3,4],[1,8,7,-10,-4,9],[10,5,1,-3,-5,-3]],[[-9,6,7,-1,1,10],[-1,-7,5,-3,7,9],[9,-8,2,-7,-6,2]],[[4,-2,3,2,-2,-6],[-2,-4,-9,9,-6,2],[-8,-9,-3,-8,2,-1]],[[1,8,-10,-2,7,1],[10,4,7,-6,-5,9],[-3,5,6,2,-9,3]],[[-9,2,-3,-10,5,1],[-1,8,9,6,-4,-9],[8,10,-6,-7,-7,8]],[[3,3,5,-1,10,-2],[7,-2,10,-1,-5,-6],[-3,-5,-1,10,-5,2]],[[-8,6,-4,-6,-6,-2],[-10,-5,-4,-9,3,5],[8,-9,-2,-3,-6,8]]], dtype = "uint16")#candidate|6621|(10, 3, 6)|const|uint16
var_6622 = relay.var("var_6622", dtype = "uint16", shape = (10, 3, 6))#candidate|6622|(10, 3, 6)|var|uint16
bop_6623 = relay.bitwise_or(const_6621.astype('uint16'), relay.reshape(var_6622.astype('uint16'), relay.shape_of(const_6621))) # shape=(10, 3, 6)
output = bop_6623
output2 = bop_6623
func_6629 = relay.Function([var_6622,], output)
mod['func_6629'] = func_6629
mod = relay.transform.InferType()(mod)
mutated_mod['func_6629'] = func_6629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6630 = relay.var("var_6630", dtype = "uint16", shape = (10, 3, 6))#candidate|6630|(10, 3, 6)|var|uint16
func_6629_call = mutated_mod.get_global_var('func_6629')
call_6631 = func_6629_call(var_6630)
output = call_6631
func_6632 = relay.Function([var_6630], output)
mutated_mod['func_6632'] = func_6632
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6716 = relay.var("var_6716", dtype = "float64", shape = (4, 11, 4))#candidate|6716|(4, 11, 4)|var|float64
var_6717 = relay.var("var_6717", dtype = "float64", shape = (4, 11, 4))#candidate|6717|(4, 11, 4)|var|float64
bop_6718 = relay.floor_mod(var_6716.astype('float64'), relay.reshape(var_6717.astype('float64'), relay.shape_of(var_6716))) # shape=(4, 11, 4)
uop_6721 = relay.erf(bop_6718.astype('float64')) # shape=(4, 11, 4)
bop_6736 = relay.greater(bop_6718.astype('bool'), relay.reshape(var_6716.astype('bool'), relay.shape_of(bop_6718))) # shape=(4, 11, 4)
func_3526_call = mod.get_global_var('func_3526')
func_3529_call = mutated_mod.get_global_var('func_3529')
const_6742 = relay.const([-1.467424,9.519069,-5.207763,-1.230190,-3.424983,-9.229670,0.464457,-0.673207,-7.799432,7.274723,5.626754,4.592298,7.210358,-2.976100,-4.734752,-7.680963,-0.054259,-6.611812,3.305545,-6.040624,-2.052919,5.057187,3.170324,-0.500059,-7.138065,-1.867171,-1.251634,2.208657,-7.703636,-0.124151,2.540734,4.358684,-2.041247,1.236303,-6.709791,-5.310528,-2.929180,4.577704,0.177563,-2.923568,1.640078,6.809495,-8.404464,4.134277,-6.839389,-4.817809,5.293816,1.060992,0.320809,3.202548,-2.927935,-4.547608,4.165584,2.278043,3.759401,-0.328588,-2.545367,-5.905502,-1.672644,7.148306,3.012717,1.765435,-3.818963,9.179238,5.817338,3.155418,-4.503447,-5.210109,7.044185,-8.695846,7.819330,-3.591806,-0.053750,1.383984,-5.490668,9.216010,-2.883596,-2.731309,3.172796,-1.138633,-7.279351,-6.569043,7.506251,-7.439548,-9.652799,0.160054,-2.101372,-7.674076,-4.629094,4.617933,-0.885198,-6.469695,8.023397,0.027709,-5.068380,6.782124,-9.494069,8.417151,0.383238,-8.847335,-4.600797,8.778992,0.891823,6.912820,7.413859,5.181399,6.308141,-6.421813,-1.384921,2.802665,9.318201,-8.882109,9.647147,7.478045,9.516533,-6.526574,2.278348,-0.919063,6.621775,-5.570452,3.327053,4.238294,-5.411700,1.410939,1.072168,0.885312,-5.688175,-4.542566,-7.453558,-0.677610,-6.793471,8.008470,-2.464150,-5.326351,-3.488770,5.741328,-7.184022,-6.648791,-6.359339,-8.576892,2.926411,6.019983,4.114996,7.949174,8.283006,1.774431,-0.902960,-1.847975,7.300732,9.954673,2.493807,3.048525,8.869068,-0.421609,1.238677,6.596214,5.663032,-1.880407,7.791065,-1.306514,6.229181,-1.788421,-9.345574,8.504870,6.059066,9.386062,1.136676,0.065424,7.732965,-6.245705,-1.953590,6.630264,-9.092976,-5.560957,2.486698,5.834647,-9.964744,-1.196538,-8.571867,-8.326735,-0.016867,-1.663432,-6.643709,-8.609249,-5.373908,0.971408,6.744670,-7.587086,-2.158172,9.725964,8.252167,7.504548,-8.302694,-4.753976,4.721538,-2.074885,5.330670,1.149515,-3.026706,0.343197,-9.061225,8.331031,2.044303,-0.061635,-4.430958,0.680735,-7.290939,-8.223932,-5.422089,7.575750,8.201769,-4.350217,-4.878403,1.347751,7.274920,9.758369,5.350896,5.432261,-7.465293,-4.584824,7.043699,-6.412819,-9.819525,-9.847528,-3.982488,-0.445814,-1.359751,-1.944275,-1.982377,5.077582,-2.720803,-3.645282,-9.621454,-0.373373,3.773850,9.657149,-4.973631,-8.521862,-7.133330,2.858213,-2.603837,5.811114,-1.019261,2.027115,1.411752,3.215027,-2.711220,7.639013,2.324982,5.334103,-7.785597,-1.446035,2.054977,-9.464881,0.898110,-9.431280,4.966949,-1.491427,0.458186,3.976233,6.703198,-4.005050,-9.124052,-8.434711,9.493631,-4.825660,-2.002304,-0.965077,6.632261,-2.148502,-9.496907,-4.049610,-4.111580,-9.183318,-5.377622,-2.127767,-9.367268,0.809233,-1.624403,-8.270486,-1.053537,9.091377,7.365895,-0.547191,-5.417980,-7.251273,3.235218,5.776104,7.963904,7.475111,1.619521,4.678908,-0.245500,-9.434054,-2.223106,-8.900283,4.134426,-1.538733,2.641892,9.919426,3.727756,-1.623739,-6.046172,-9.055552,4.006070,4.941403,3.427444,-4.763258,-0.828408,-8.821320,-1.782107,7.174986,-2.528614,-9.242968,-5.993559,-2.407766,5.798685,-3.978733,-4.495273,-5.420161,-4.973711,-8.820224,-5.454727,6.162890,2.695325,-7.236744,-2.199795,9.113235,4.004035,-2.459073,1.865368,4.398852,4.818368,-9.652506,-5.992765,-4.468297,-1.828522,-9.929617,7.564092,8.122659,7.248783,-1.228039,8.332493,-6.694302,-1.859512,-1.789369,6.487465,-0.485833,9.218588,-1.293895,5.897776,-7.398765,1.043433,7.908013,-1.495237,7.474829,-0.246460,4.801788,9.804884,-9.599850,-2.967384,2.841409,-5.418796,2.248159,-9.582755,0.333805,-0.630269,-9.251697,-8.194897,-2.494946,-4.273476,-3.934261,-7.342861,7.945769,5.291336,1.427244,-4.723404,-2.533564,-7.705778,6.604493,1.252687,6.533549,-7.438708,-8.405002,1.170548,-6.538612,-5.542597,-3.939731,-1.539939,9.354024,6.236282,-3.024022,8.862924,-5.367771,-6.514301,9.188499,-6.349121,3.246886,-0.795465,5.858142,-4.564375,5.391798,-2.068598,9.025602,2.050462,-8.555003,0.374459,7.637846,7.624868,0.181716,3.338353,-5.467800,0.889584,-4.088763,0.546635,5.734646,8.728968,-7.170836,-5.154170,9.194946,-8.151248,-2.348103,-6.591597,6.716098,1.745881,9.848407,9.765380,-3.959552,5.558267,-2.290918,-5.881987,-1.133481,-3.067141,6.438069,4.294845,1.087294,-8.441107,9.015813,5.501235,0.537554,4.069737,2.549558,-7.860504,4.571902,-4.036229,-8.380478,1.460960,5.184964,5.976520,-1.641881,8.139989,2.328768,0.208149,-8.398202,8.995328,7.108348,-3.132811,4.549489,-9.177399,-9.513461,-0.919282,6.391318,2.634503,6.223617,8.799782,7.581713,4.039493,4.243097,-0.677938,2.578377,3.558929,-5.478576,1.939631,-2.280199,1.161735,7.032433,7.884316,9.053646,2.707102,2.546719,7.830036,3.414237,7.808480,7.811124,-7.127583,9.574836,-2.361653,2.557143,0.905161,6.050252,-7.176119,-4.110590,-2.069301,-4.755759,7.027675,-5.568988,5.753455,7.339306,-2.353897,-7.680258,-3.238897,-9.601881,5.793516,-3.622409,5.494243,5.051610,-3.831677,3.115568,-3.306112,-0.891257,-6.730780,-6.053345,-5.187818,-2.924844,-1.552849,6.234006,0.646852,6.400957,8.252370,6.596391,-5.272480,-7.798140,8.173960,2.457871,-3.306900,8.150234,-6.592432,-3.054209,3.954593,-0.617312,9.908971,-0.498047,1.910504,6.697044,-3.167892,-1.987865,-5.500992,9.420170,-8.339561,4.094939,1.581535,1.097942,-5.439273,-7.964257,3.962469,4.133024,0.703616,6.754538,-7.524392,4.933482,0.481167,9.938472,4.775735,7.622547,7.814053,-9.489170,5.214573,-6.588870,3.557166,-8.030199,0.908981,7.438588,1.348479,-9.167684,4.847515,-2.860610,1.456981,-7.280002,3.101722,-9.044329,-3.050643,5.669658,8.701413,4.667852,-1.038465,7.140866,-7.877181,-2.945339,4.948350,9.989216,6.970996,6.613225,8.392896,0.588612,-7.137126,7.588098,-9.798177,-1.749082,-7.738527,-9.082320,3.760863,4.279308,-9.807087,-6.770530,-3.688195,-5.809800,9.038760,-0.781117,-7.780659,0.494215,6.205703,6.535200,1.596912,0.561857,-4.033464,8.593195,7.821828,1.298074,-3.280767,5.834213,7.364482,-1.594824,-2.392628,4.605185,-6.059048,9.170017,1.148716,7.795159,-5.478064,-6.763156,-5.842609,6.899990,-7.719165,6.264905,-6.471469,7.979401,7.220634,-8.975686,-5.072591,-3.881456,6.424237,3.182081,-1.110294,3.145516,1.128726,8.117688,5.401876,-8.685521,9.868136,4.120360,-0.848942,4.751984,-2.468326,4.603272,4.632147,-9.518835,1.665942,4.019894], dtype = "float32")#candidate|6742|(648,)|const|float32
var_6743 = relay.var("var_6743", dtype = "float32", shape = (2100,))#candidate|6743|(2100,)|var|float32
call_6741 = relay.TupleGetItem(func_3526_call(relay.reshape(const_6742.astype('float32'), [9, 8, 9]), relay.reshape(var_6743.astype('float32'), [2100,]), ), 3)
call_6744 = relay.TupleGetItem(func_3529_call(relay.reshape(const_6742.astype('float32'), [9, 8, 9]), relay.reshape(var_6743.astype('float32'), [2100,]), ), 3)
func_2942_call = mod.get_global_var('func_2942')
func_2946_call = mutated_mod.get_global_var('func_2946')
var_6754 = relay.var("var_6754", dtype = "float64", shape = (132,))#candidate|6754|(132,)|var|float64
var_6755 = relay.var("var_6755", dtype = "float32", shape = (180,))#candidate|6755|(180,)|var|float32
call_6753 = relay.TupleGetItem(func_2942_call(relay.reshape(var_6754.astype('float64'), [6, 2, 11]), relay.reshape(var_6755.astype('float32'), [180, 1]), ), 1)
call_6756 = relay.TupleGetItem(func_2946_call(relay.reshape(var_6754.astype('float64'), [6, 2, 11]), relay.reshape(var_6755.astype('float32'), [180, 1]), ), 1)
output = relay.Tuple([uop_6721,bop_6736,call_6741,const_6742,var_6743,call_6753,var_6754,var_6755,])
output2 = relay.Tuple([uop_6721,bop_6736,call_6744,const_6742,var_6743,call_6756,var_6754,var_6755,])
func_6763 = relay.Function([var_6716,var_6717,var_6743,var_6754,var_6755,], output)
mod['func_6763'] = func_6763
mod = relay.transform.InferType()(mod)
mutated_mod['func_6763'] = func_6763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6763_call = mutated_mod.get_global_var('func_6763')
var_6765 = relay.var("var_6765", dtype = "float64", shape = (4, 11, 4))#candidate|6765|(4, 11, 4)|var|float64
var_6766 = relay.var("var_6766", dtype = "float64", shape = (4, 11, 4))#candidate|6766|(4, 11, 4)|var|float64
var_6767 = relay.var("var_6767", dtype = "float32", shape = (2100,))#candidate|6767|(2100,)|var|float32
var_6768 = relay.var("var_6768", dtype = "float64", shape = (132,))#candidate|6768|(132,)|var|float64
var_6769 = relay.var("var_6769", dtype = "float32", shape = (180,))#candidate|6769|(180,)|var|float32
call_6764 = func_6763_call(var_6765,var_6766,var_6767,var_6768,var_6769,)
output = call_6764
func_6770 = relay.Function([var_6765,var_6766,var_6767,var_6768,var_6769,], output)
mutated_mod['func_6770'] = func_6770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6886 = relay.var("var_6886", dtype = "uint64", shape = ())#candidate|6886|()|var|uint64
const_6887 = relay.const([[[9,8,-6,-8,-10,4,-7,5,-5,-6,10,5],[9,10,3,-3,-9,-2,-5,5,-7,3,-10,-4],[3,9,9,5,9,-9,-3,-5,-3,-9,-9,-6]],[[-3,-2,9,-8,-7,6,-3,5,-8,4,-7,4],[-8,-8,9,-5,3,5,-3,-6,2,-6,5,-4],[-6,-2,1,-2,-3,6,-4,-4,10,1,-4,4]],[[9,8,-3,-4,-5,1,6,-5,-6,3,-3,7],[6,-9,-4,-8,-2,6,-1,6,1,-3,3,-6],[-10,6,-5,9,2,-6,10,9,10,-9,6,-8]],[[3,3,-1,2,9,-7,5,-8,5,-3,-5,6],[6,6,-1,8,-8,-9,-10,-2,-2,-3,-6,-4],[-4,5,7,-7,-9,6,1,-3,5,-10,4,3]],[[-3,-3,-9,2,-3,-7,8,-5,8,6,-3,10],[2,2,4,-2,-4,-7,-1,8,-4,4,6,-9],[-9,6,4,2,6,2,1,-6,-10,-8,10,6]],[[-1,-7,10,-3,-9,-4,3,-8,2,-10,5,-10],[8,9,5,3,-6,3,6,-6,7,7,6,10],[7,-4,5,-1,-3,-3,4,6,-8,-7,-7,9]],[[-2,3,-4,-9,2,-7,-7,-9,7,-3,-8,2],[-10,-8,9,-2,-6,1,9,-2,3,-7,10,-3],[8,9,-4,9,9,2,7,-10,-6,-4,1,5]]], dtype = "uint64")#candidate|6887|(7, 3, 12)|const|uint64
bop_6888 = relay.greater(var_6886.astype('bool'), const_6887.astype('bool')) # shape=(7, 3, 12)
output = bop_6888
output2 = bop_6888
func_6897 = relay.Function([var_6886,], output)
mod['func_6897'] = func_6897
mod = relay.transform.InferType()(mod)
var_6898 = relay.var("var_6898", dtype = "uint64", shape = ())#candidate|6898|()|var|uint64
output = func_6897(var_6898)
func_6899 = relay.Function([var_6898], output)
mutated_mod['func_6899'] = func_6899
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7262 = relay.var("var_7262", dtype = "float32", shape = (14, 16, 10))#candidate|7262|(14, 16, 10)|var|float32
const_7263 = relay.const([[[5.783504,-0.382200,0.272914,7.809662,-8.568197,-1.840239,4.511776,-2.517083,6.871135,-3.366295],[7.538453,1.728039,5.707370,-1.791906,-7.213441,-2.819918,9.882501,1.783720,-6.914220,9.506234],[-8.169490,-2.911725,-1.540770,1.270286,-7.185455,1.457530,-1.865908,1.271309,-0.197732,-2.134146],[0.691544,4.868037,0.775149,2.610871,9.599572,-7.402885,6.593435,-1.273767,7.130297,7.482089],[9.706150,0.395602,-4.460186,1.863756,3.442351,1.219020,8.189531,9.438821,-4.004136,-8.656671],[5.889953,9.068974,0.461735,-3.273788,7.014138,-5.863505,6.111770,-6.270478,-9.326778,-2.189519],[-5.505821,7.090111,-7.089039,-5.502313,7.577130,4.880883,-4.654029,1.479985,-9.098843,-3.243623],[-8.849461,-2.530595,1.883808,1.877708,-0.037321,0.798367,3.957757,-7.947647,4.524419,-5.273140],[7.911813,-8.111845,1.227324,-3.302382,2.109399,3.132045,0.572071,2.704478,2.936006,5.799422],[4.457089,-6.962179,9.225886,-5.462792,6.787546,3.248630,-1.341244,-8.849182,-8.182986,1.966360],[-0.394426,0.517767,-7.960938,-1.452150,2.167076,-5.897647,-1.355136,8.259550,4.666094,-2.881971],[6.080232,-9.442030,3.406964,0.738604,3.245202,-0.250764,1.088569,0.560984,-9.684248,6.455992],[3.885538,-7.805717,-8.886767,0.333225,-0.666656,1.531864,-7.080295,9.292318,-2.862716,2.812028],[-2.178993,4.632493,7.695380,2.910480,-6.035283,6.982329,-1.666392,4.611931,1.809889,8.124433],[1.254022,9.623994,-9.241733,3.111442,1.670456,-1.158543,-9.062558,-5.639183,-2.989506,-3.579576],[-6.248235,2.065569,5.183339,-9.429560,6.506731,-0.111306,-0.693946,-7.907902,7.385387,0.627504]],[[-6.050123,-3.189992,-2.902908,-5.482585,-2.240159,5.920910,-2.163438,-1.814299,-9.222215,7.874289],[-4.436957,-0.161923,8.811480,6.450508,-7.775890,-1.874010,-0.103224,-9.887597,9.429527,3.618047],[0.062916,-2.912917,0.597491,0.623870,4.518662,-1.556761,8.342383,-4.265628,3.489192,4.546451],[8.841241,3.439021,-8.480693,-4.964833,-7.735466,1.776248,-4.787678,-0.074030,-6.206115,1.091600],[-9.128365,7.048470,-8.267351,-2.899662,5.798788,-6.366568,2.641150,-4.499990,4.650665,1.587246],[4.370791,6.009410,3.486492,8.832717,8.075112,7.064748,-4.394899,9.237960,1.494413,3.268767],[1.104266,7.254513,2.979447,-2.635767,-1.829399,-8.984139,1.293542,4.132748,1.818076,-9.837849],[-6.541782,-3.734245,1.215177,8.038528,-0.548193,8.884118,-6.605757,-1.375478,6.527725,-0.561529],[9.688088,6.442745,-5.465362,5.930199,3.960945,5.745148,2.677336,6.859254,0.491668,8.383137],[4.967043,-1.333799,4.302020,2.631221,6.736275,-0.398325,-4.664038,6.134259,5.940603,4.576500],[8.372825,-0.511418,-3.601139,1.647051,-7.852099,4.815110,5.741181,-3.600181,9.791373,9.528058],[1.772265,4.609645,5.638056,4.916547,9.744293,-6.849345,2.725462,4.158492,-2.397527,8.427333],[-3.804591,-4.149142,-5.829623,-5.402025,-7.886202,5.435367,-7.016099,4.279957,9.183758,-3.106773],[0.106838,5.880850,7.504584,5.631005,3.191354,-0.747456,5.250713,-5.812218,6.714260,0.997215],[-5.538649,-8.478241,8.173986,5.824451,-4.016635,8.417650,-8.829011,-9.181458,-2.776555,2.745161],[-7.132811,8.631177,-1.613873,-2.572878,-1.545612,2.185283,-2.779137,1.693362,5.880258,-7.613337]],[[-7.234655,-3.175610,5.275985,-7.084224,-5.143849,6.949032,-6.051482,-2.738248,-6.098586,-4.302530],[7.053574,-9.458483,8.781827,5.585044,-4.407653,-2.651976,-5.675534,8.240032,7.853322,2.477817],[5.961762,6.032035,7.757814,-0.169312,-5.357377,-7.957913,-9.041003,1.433147,7.488790,-8.939097],[-9.717735,-0.451977,4.490288,-1.939860,-5.568884,-6.382042,4.748287,8.978169,-2.558948,-0.445226],[-8.411175,-1.161539,3.711233,1.359630,-1.209934,-8.779466,-2.756612,8.681990,-3.852902,0.831668],[2.600685,-8.076627,2.811897,0.687430,5.875943,-7.617852,1.300022,-1.328546,-5.798716,5.822497],[-6.905473,4.842917,-2.202635,-1.526684,9.897238,8.990731,-4.250986,1.589849,6.402088,6.886861],[-7.604807,0.548509,-0.695130,9.404636,8.289778,9.192000,-8.638816,-9.497228,-5.798747,-3.058869],[-7.006779,-8.271726,7.812239,-7.311629,0.050423,-7.981334,1.246565,7.594392,9.290644,-4.617699],[9.617587,-4.968080,2.372944,-4.899909,-4.617559,0.398639,6.899457,8.349593,9.130036,3.987007],[7.418691,-5.574876,6.063349,-3.897490,-7.012039,5.899472,-8.613344,-0.366275,3.756976,6.671648],[0.987134,-7.004847,1.811545,7.887243,-1.183844,4.080438,-8.613464,-4.159341,9.456949,5.580805],[-3.708408,6.307837,-3.505665,-7.676910,-2.565724,6.190737,-0.285924,-7.359030,8.293388,-5.019289],[8.579263,3.223737,3.030562,1.211018,-5.934478,3.738021,-1.214684,-4.970200,-5.145882,-3.867008],[-9.755690,-7.949433,2.156256,-8.872309,-2.557675,-4.352337,-4.094499,-6.414754,-8.056046,-8.030739],[-6.879997,9.384105,-1.787617,4.757814,-9.771980,-2.346535,-5.990172,2.704905,0.057844,-6.541623]],[[-0.020007,1.481555,2.466608,-2.181869,-4.260891,-1.518201,-1.503964,5.250396,5.813146,8.534808],[-0.843683,1.308666,-7.297072,-7.728773,-0.240498,-5.681555,-6.691595,-1.169823,6.955870,8.320922],[8.492277,-4.875031,3.294855,9.860103,-8.830078,-5.797968,-3.578434,1.444431,-0.094765,-3.150777],[3.181864,0.370210,3.741113,9.048455,-9.818424,-5.496361,-5.087754,-0.959922,-4.813716,1.802147],[-2.067207,8.053286,2.422171,-9.394676,-2.006382,-0.034681,8.619909,2.443398,9.391588,4.458097],[9.826787,-2.509132,-2.533909,1.982654,-5.949776,7.983538,-8.762911,3.313172,-2.380853,2.771035],[-8.029215,-7.344034,7.762656,-9.202170,-5.888217,7.662499,2.798153,9.246880,-0.208139,-5.374681],[4.352191,4.945943,-6.018521,3.771811,-8.705839,-0.895578,6.213899,-1.618756,-9.272835,9.899987],[-3.375756,4.861731,-5.586449,9.669961,6.325537,8.123622,-2.845552,4.038210,6.975418,0.967146],[1.430016,8.630288,-2.088872,-4.134566,-8.967418,0.711617,-8.976540,5.815469,9.729580,5.013622],[-1.871969,-6.728333,0.562140,-6.032815,-0.561403,5.238617,4.246702,-0.851569,-2.393572,-1.286382],[8.077959,-3.395987,-8.301593,-6.188732,-0.971422,0.561418,9.702330,6.231724,5.645162,8.047152],[6.687322,9.912598,0.412712,-4.268916,-9.778973,8.521494,-5.611963,0.181303,6.031933,7.045773],[6.287999,-4.402196,-0.364567,-3.086033,6.543779,9.831981,-0.584636,7.891789,4.288522,8.080232],[8.552092,8.482197,-3.320275,-7.384601,-3.894651,-8.555753,-9.057264,-8.233718,-3.058242,-2.774053],[7.346523,3.868483,5.773459,0.302190,-0.440528,-3.403794,9.020847,-2.110886,1.796101,1.898079]],[[-9.187978,9.478956,2.705240,1.467833,-8.617104,9.283032,8.167992,8.502079,-9.301702,2.748906],[-8.617502,-1.118211,7.284625,6.923607,5.277806,9.914357,-8.120573,2.169996,-1.123187,-7.013114],[-7.160772,-6.049237,-5.721413,-5.608256,7.274379,3.890149,-2.851408,8.155699,-9.452411,-2.020381],[-5.781345,1.561581,-2.126735,-5.069436,7.427095,-4.794010,-1.461350,-3.205879,-4.066476,6.974595],[-0.083110,4.208906,-7.684990,9.604499,-6.126708,4.827919,8.861000,8.701216,6.533603,-7.446639],[-8.440715,-0.125579,-5.981807,9.166634,-1.438524,-1.561587,-2.366771,1.882871,-7.814930,7.036646],[-3.792111,3.056923,-8.218795,6.308565,-1.216748,-8.789822,-0.760223,-9.687037,7.398315,-6.997009],[-9.575298,9.168644,-2.061474,-4.706532,4.297396,1.639880,-0.213699,8.947704,-3.469428,-7.740489],[-6.435022,1.546477,3.874364,9.275578,-1.562304,-6.856945,-7.899061,5.154282,-8.514615,-5.126662],[2.562311,7.206965,-3.348386,-9.810129,-9.367771,-5.695852,-5.069499,6.624570,1.471110,-7.225515],[-0.075076,-3.370591,-3.786722,-4.346799,4.283667,-9.430188,-1.573402,-1.755847,-0.279560,0.929915],[1.909906,-1.301804,-6.546096,-9.544036,-1.692217,8.103827,4.545720,-3.482818,8.477918,5.553447],[7.898808,4.699260,5.678113,-4.188548,3.142008,-9.651548,8.609983,-3.910622,5.593277,0.644777],[2.469992,-2.658123,7.356550,9.479218,4.934784,7.989575,-3.181170,5.310796,7.956581,-1.103914],[8.692575,6.202073,8.480002,-0.100781,-4.046615,-3.684393,-6.290370,8.675793,8.679422,-6.227417],[8.586013,5.598917,6.631552,5.600967,5.880642,8.554585,5.619264,6.307212,-0.549662,9.946802]],[[-0.824081,-8.550193,-2.725766,-6.255173,-7.655111,6.054557,-7.994903,-7.972549,9.057269,-3.463590],[1.116911,1.032559,4.277400,0.112811,3.854687,-0.050735,-0.991820,-5.981200,-1.759274,7.074231],[-9.294499,-9.266547,5.374237,-3.726107,1.508108,5.352712,-9.327853,8.611148,-6.692231,3.747173],[9.276806,1.651368,-4.378199,-4.884140,-8.000583,-5.746293,-7.829018,1.817442,6.449734,-9.370716],[4.470134,3.598909,4.625871,7.001388,1.192205,5.963932,-1.250584,-5.091143,-0.974866,-9.925297],[-3.289218,5.078545,7.009353,8.689991,-7.962582,5.983224,7.033931,8.664867,9.035058,-4.877375],[5.936690,8.534630,-5.577674,8.617173,7.516683,5.107431,-0.996889,-7.156352,-5.284392,-5.351676],[-2.805249,-9.324690,-7.796541,-6.267172,-8.180129,-2.803353,-1.493288,8.574749,7.853056,2.746509],[-6.416272,8.722154,-8.395657,4.436811,2.969770,9.364326,7.435230,1.655686,-1.184138,-6.702254],[4.506371,-9.175327,-5.322543,-3.654391,-7.545050,-3.604293,8.820565,7.131653,-8.158458,-8.581403],[-7.358938,8.878935,3.183560,4.334905,-9.331831,-6.788643,-5.383227,7.492046,-8.610856,8.622968],[0.770181,-3.618977,3.898607,-3.778437,-7.190530,7.395491,2.059613,-0.265577,6.788605,-6.633386],[1.127837,1.985058,3.039143,1.872655,5.920545,5.826193,-4.141897,0.099536,1.207270,3.389693],[-7.267276,0.818252,5.515700,-6.005087,7.197979,-2.997456,3.990087,8.886031,-1.013989,-1.956929],[7.007649,0.301017,9.522727,7.132606,-0.837420,-9.132885,6.978467,-0.605111,-2.302950,9.959110],[9.647407,-8.702556,-9.261707,-3.230057,-1.432790,-5.436638,-3.673864,-5.728430,-3.973306,-3.570693]],[[-3.914932,1.296838,-6.144036,9.628867,-9.988618,3.665514,-6.200394,-3.491717,1.226953,-2.697943],[3.263519,1.087432,-8.751822,-0.824021,9.589718,9.559643,0.736384,8.397865,0.439666,-9.807162],[6.515653,4.998311,-6.030274,-3.680093,-8.014497,6.792096,7.301543,9.983338,-6.331482,-0.061589],[1.417334,-1.668979,-9.010366,-6.922995,-6.736484,9.592918,-9.105979,5.576085,-3.562795,-1.507262],[-5.323062,1.863389,-6.487894,8.854952,-5.089526,-7.568310,-9.416103,-2.796667,-1.172118,-1.637606],[-8.538898,9.525308,-7.603582,6.679418,-9.057947,-5.352419,3.887542,4.259792,-3.427024,6.512743],[-0.230159,-1.930447,-1.006054,-2.254886,-7.026351,0.079986,-5.296453,6.884562,2.686287,-1.962025],[9.395433,2.067876,-8.719976,-4.369253,9.904751,1.297003,-1.792191,-2.690291,-9.795241,2.415749],[3.461596,6.141607,5.723040,0.894987,3.248723,6.546734,-4.588982,-7.917416,4.511666,2.930330],[-3.741612,-7.946764,9.434022,9.681311,3.072756,-3.053535,3.377034,7.114973,-9.133360,3.322701],[-4.608944,-6.330015,4.995269,1.785330,-1.219017,-1.603704,0.979630,5.355984,8.464621,-7.979217],[4.046664,-1.358565,6.561752,-5.808444,-5.807676,6.624862,-8.683431,6.091955,-1.984492,-4.611770],[4.539148,2.339841,5.329794,7.595155,7.323109,-7.456358,-6.468915,5.716118,-8.523786,-4.938372],[-9.162835,9.279121,9.832644,-6.141915,6.036531,-7.291732,1.518773,0.944107,-5.988328,-2.252409],[-6.439796,1.140327,7.173426,-3.880553,-6.961998,-0.508915,3.765813,0.194965,-0.814547,-8.487093],[-1.753524,-7.921555,6.399128,-5.871125,4.606705,2.340548,6.375981,-5.619498,-8.083136,-9.844813]],[[5.508722,4.156130,-1.955756,-0.443675,-9.079137,-4.382739,2.585676,3.381960,-6.415735,3.169613],[-6.767690,-0.083638,1.038255,-5.095003,1.586085,-1.915065,6.657581,1.641059,-9.489536,-7.272087],[2.487966,9.107055,6.101778,6.054309,-0.599917,9.786469,5.046955,4.013413,8.077653,-7.391639],[-8.213870,8.298630,-5.135333,-8.310042,-3.280615,-4.495789,1.046725,7.253583,-3.484610,0.691171],[0.826418,4.010714,-1.542008,4.454416,-6.018578,-1.254502,-6.416963,-2.390414,1.594552,9.113627],[3.257337,5.827117,7.147375,7.012341,7.698440,-9.384480,-2.673589,2.450550,-1.233394,-9.948324],[3.056818,-1.142565,-2.345004,-9.726324,9.819311,-1.499802,1.153877,0.900098,-1.439532,-5.794544],[5.961980,-9.321635,-1.009198,-3.443796,-2.362539,9.019613,-1.335405,3.575878,-6.197885,-5.503694],[4.463401,-9.833443,-9.131594,2.918826,5.093112,-4.802549,-3.632470,-9.982464,-5.809206,-1.325644],[2.179592,-1.810068,7.118465,-0.412591,-5.362600,6.515093,9.212929,-9.048024,1.629739,-2.455860],[-1.557810,-6.736461,5.664556,2.770850,1.426749,-2.901958,-2.479523,-8.446150,-1.067916,0.002720],[9.749824,-2.902467,3.587215,-6.371849,-7.474061,5.261319,6.414063,-3.943912,-6.960018,4.110272],[7.974138,-6.421321,-3.389452,6.035096,1.345828,0.272983,0.055419,-3.454845,5.636004,7.855661],[1.245390,-9.756661,-0.042969,-2.536771,-3.574292,5.265369,0.706847,9.988091,-4.423507,2.693829],[-3.751366,3.320185,-6.882882,-5.885858,-9.698452,-4.530746,-7.756784,0.420912,4.885743,2.631726],[7.593536,7.513445,-1.668089,-4.388070,1.067843,-2.614747,0.756833,2.902979,9.138533,1.317616]],[[0.706003,-1.902887,-8.695380,4.865606,9.173690,5.882983,9.075031,0.627747,-9.156653,-2.867442],[2.463676,9.644579,-6.038878,1.140114,-5.909372,-6.361376,-1.286264,3.760188,-3.916520,-4.101011],[8.697344,-4.375389,-2.375737,-5.031626,2.145184,-5.812732,1.391646,8.301981,-7.126044,-5.220645],[4.438564,-1.366728,7.474085,-9.385550,-6.651903,0.203937,4.059129,-7.435450,2.374010,-8.342153],[-2.922825,-2.728582,-7.618022,6.213242,-8.999956,4.938496,-5.816755,2.233326,2.265608,2.592506],[-3.656370,0.032727,-1.062343,9.128935,-0.837849,5.938475,-9.075205,-0.627901,9.701139,4.875215],[3.319117,-4.219790,-7.173854,9.545141,1.011891,-5.198110,2.889379,8.615364,6.644747,-2.749428],[-6.183901,-0.268990,4.814223,3.371700,0.809137,-8.230207,2.090247,-5.318636,-6.307969,8.700459],[7.167101,4.555231,0.891321,-9.919046,9.458257,-9.071579,-8.720596,-0.662021,-9.066388,5.694019],[-4.018865,-9.149918,-2.953892,9.782451,3.443080,-1.716544,-5.617245,8.575255,6.010903,2.494838],[-6.656648,-5.572405,-3.014280,-2.728362,5.963610,-9.810303,0.062240,0.514699,-3.292889,-1.551874],[-7.407809,-5.950097,-2.570075,-6.926526,5.178290,-0.904881,-0.694829,6.748819,2.774951,5.663171],[1.567584,-2.860720,-2.031479,-2.087553,2.774733,-9.229011,5.419716,-4.543185,4.539359,4.455102],[-5.955794,-5.613592,9.057940,-3.049921,-4.278974,4.373255,0.197376,-3.115433,6.755901,-6.891103],[-0.592933,-9.728924,9.817556,3.557065,-8.330824,-6.974547,2.900636,1.548752,-4.990995,0.671255],[4.044497,-2.290772,3.231572,-2.320831,1.949822,3.146964,-0.757734,1.659098,-9.161237,-4.008725]],[[-2.297238,-1.870529,7.835334,-9.547959,6.306222,-8.131010,-4.057472,0.862331,-7.588822,-9.225384],[5.933712,3.870351,-3.298213,1.808361,7.696880,0.788186,-0.705242,3.988707,1.428093,2.141891],[-5.600862,1.121559,-5.852878,-7.294251,-3.244448,-1.425922,-5.109844,9.004875,7.693605,6.859405],[-0.500707,-1.199161,-4.280114,0.123589,5.201499,-0.663609,-9.086395,-7.253003,0.588603,8.614236],[6.614923,3.342455,2.091960,-5.137492,8.047358,-0.762677,-0.131665,4.954672,-2.764074,-4.464269],[5.072096,5.494437,-2.519702,3.458218,-4.213327,-4.507309,-1.657036,0.921257,-9.422712,-6.208115],[-6.500697,-1.322259,4.544128,4.642190,-1.921892,6.089917,5.573685,9.602962,-9.982412,8.062058],[-8.208764,5.451603,7.464943,-1.722571,-9.762785,6.115395,6.714666,-6.258092,5.845046,4.991818],[3.912709,-7.538290,5.423026,0.129520,-6.547111,4.763321,-2.010769,7.470677,0.859483,7.164475],[2.827330,-1.555258,-6.386257,9.048406,3.164838,7.101978,-5.609340,1.444796,-2.281572,2.537500],[6.874222,0.513373,6.634794,4.861898,-7.294952,6.762557,7.785382,2.417668,-2.079781,-7.798951],[5.331324,-8.263221,5.357386,7.178610,-8.636692,-2.949703,0.655093,9.219853,-6.283045,-4.584056],[-8.142993,-9.197720,0.932554,6.609277,8.533986,2.634435,-0.476512,-5.187257,2.008172,2.335980],[-3.322548,5.256326,3.625214,0.785337,3.740663,-4.205972,1.440720,-0.553290,-3.258911,-4.667845],[2.537948,-2.994617,9.684097,6.353259,4.556259,7.809971,-6.219193,8.023599,2.232801,0.310871],[-1.921919,-4.648982,0.421787,1.813255,5.966502,0.750059,4.924643,-9.394606,-0.612037,-7.193517]],[[-5.815255,1.489395,-0.940005,-7.471717,6.034041,9.605906,7.827321,4.557995,-5.198474,6.701826],[-1.628815,-4.555526,-8.370025,2.917902,-6.791997,-5.543672,3.593093,1.606432,4.578866,5.797538],[2.486370,-1.913297,4.841421,5.638881,-4.230141,3.596350,4.194518,0.458556,-3.795989,-8.376223],[-6.614225,1.726250,2.674310,1.911786,-8.550135,1.233555,5.473917,-5.859798,-4.067142,-8.354174],[-1.907934,4.613742,9.650585,-1.788776,8.613429,-4.558178,6.202504,4.330639,-9.344921,4.408535],[-6.445201,0.786860,8.550315,-5.375669,5.815817,-1.436207,-9.742207,-6.684202,-9.358858,6.417064],[4.410073,5.404921,2.310314,8.090361,-6.797659,-9.762157,-9.754738,-3.071845,0.622503,8.181513],[-9.549225,9.516079,3.055769,-8.536289,-8.879454,-9.444891,-2.796279,-2.177635,-6.774788,3.267277],[3.145372,6.037303,5.185011,3.326728,-8.194025,-5.344603,-6.580339,5.418055,5.552574,-0.270215],[5.359113,1.657195,-4.330287,1.010962,-1.005780,3.028999,-9.193254,2.545656,0.169443,1.731272],[9.617436,-3.321944,1.780839,9.547015,3.482492,-3.806324,-8.067966,-8.579228,1.061683,-3.705057],[1.991055,5.492959,-3.693206,5.248793,9.177306,-2.560053,-2.499493,1.864404,-3.358273,-3.114705],[-4.501659,8.574598,0.452096,7.359837,9.193541,-1.835450,-7.153136,7.469073,-7.005265,-9.484868],[6.835541,-2.686302,5.707534,1.445122,-9.464563,1.459218,-5.771684,-9.216164,0.284128,-7.686600],[4.528208,7.584339,4.302665,-0.531828,0.576454,7.383806,0.552136,9.953805,1.057832,1.819208],[-0.162848,-3.049850,8.281388,-4.629956,3.148970,3.963756,9.494434,-7.830853,8.976270,-0.580445]],[[4.558792,1.048738,3.382625,1.923043,2.255694,7.374076,0.203373,-6.283106,-1.905855,9.010633],[-8.355275,-2.596220,9.388785,-1.911246,5.989369,-4.420509,-7.262118,-4.111499,-6.828418,2.538968],[-3.392405,6.336979,-2.172990,-2.308822,3.179259,-2.815151,-6.247184,4.598992,6.584653,4.458341],[4.359081,9.196092,9.532655,7.646407,9.428950,-9.997356,2.082877,-4.276446,8.561151,-0.864193],[-3.043330,-3.567346,5.010467,2.174177,5.728243,-5.867856,-9.111406,2.899163,1.086201,3.817138],[9.510768,-7.516031,8.590915,-1.270980,8.525260,1.417563,-9.239319,-4.011517,-9.403311,-4.039463],[-3.212443,-0.199077,5.717690,8.427644,-2.512225,3.218475,-3.075888,9.776424,-9.173320,-4.977005],[-8.827809,-6.261582,-3.792767,7.530614,-2.209183,-7.864388,-0.862732,3.482303,-6.999809,-6.844239],[0.433758,-0.016318,8.273467,1.096362,-3.849854,2.820032,-7.686967,0.841022,-3.024653,4.847372],[-2.473641,-8.043230,-1.372039,-6.077404,-7.274119,4.610924,2.360306,1.283748,8.189379,-7.720472],[-2.547040,3.802073,9.117359,2.993138,2.121630,-6.538396,6.310225,-7.568470,-4.462505,-1.253944],[7.939678,-6.328702,-4.610896,7.014087,8.184662,0.740479,5.625950,-1.072739,5.247446,-2.848393],[-4.409429,-9.108524,3.888689,7.900048,-9.712958,-9.428595,4.699106,-8.924110,-9.568715,-2.004865],[0.680636,-7.700656,-7.027015,-9.922268,-5.095256,-2.014266,1.137053,-9.656592,2.076397,3.022848],[-4.836394,9.571328,-5.821337,8.648871,2.891298,-6.324730,2.397340,0.538360,6.616313,3.039396],[-5.025557,-8.750286,-7.205876,7.425525,-4.790173,1.610006,-8.787996,6.612102,-2.704237,-4.757242]],[[-7.486005,6.464739,3.253132,4.514423,-5.856218,-5.050541,-5.691034,-3.157444,-5.796720,-8.306713],[-0.242409,9.712017,-9.379598,-6.582880,2.383402,-8.087067,4.139257,7.931511,-9.026721,-0.356173],[8.879127,0.700677,7.284164,-7.546774,6.064084,6.979874,6.526050,2.372982,8.283180,-4.652501],[-9.971175,-3.201334,-7.717099,-6.142425,-1.648321,9.153040,8.837645,6.375753,9.523393,-8.148927],[-9.282954,-1.089537,-3.773224,9.715199,3.343718,-5.360239,-4.272783,-4.643915,-6.571168,3.016741],[1.594351,-9.468888,5.693317,7.067449,-0.744881,-5.623097,2.170120,-9.072704,-2.775161,8.994539],[8.766870,3.815876,-0.786331,4.715891,-3.516303,6.980124,7.035075,-0.459608,1.990355,6.191647],[-4.737917,-2.904627,7.805374,4.064805,-7.847241,7.118251,6.092087,7.844465,-9.139964,-4.584356],[6.512029,-4.137760,-6.440385,-9.856650,1.137403,5.226771,3.153500,2.106857,-9.437593,-8.441508],[-3.049451,-2.393904,-3.680209,5.948670,-4.468846,7.264815,-3.923070,0.831064,-8.420221,-3.878891],[9.065064,7.888681,-9.298342,1.607926,-9.608066,9.693898,-0.308909,-0.062350,-1.122798,6.542264],[8.089722,-5.877337,4.768162,-1.618522,2.827135,3.526028,-9.554498,7.195312,5.141863,4.071244],[-8.320878,-9.130411,1.990053,9.568478,7.660166,-9.387213,0.282998,-5.967520,-7.228476,8.236015],[6.957033,1.897441,3.314639,-0.703216,8.960741,-7.259638,4.136474,-2.607514,2.931532,-3.839214],[0.792388,-7.790233,0.808427,5.632124,1.971123,-8.865204,5.783892,9.395073,-6.250875,9.941249],[5.143462,-2.874605,3.822472,6.548709,-5.423390,0.540499,6.049938,3.419881,-1.482999,-8.517105]],[[6.405760,-5.885151,-2.153582,0.965989,-3.188159,3.586716,0.854279,-1.186105,-8.403119,5.354249],[2.968035,-3.489696,-4.394507,5.948592,-5.585242,2.083548,-4.321635,-3.345102,2.576918,-3.616513],[1.624560,7.870070,6.228761,5.710481,-7.724005,-3.536517,9.270740,-8.315778,-0.007883,-1.971221],[3.166933,-9.620527,2.822315,6.658028,1.528188,-3.435784,5.062286,9.068201,8.207158,-3.301939],[7.762070,3.956438,-3.180605,3.528036,-6.763348,8.052438,2.012519,3.162064,7.817419,7.565757],[-0.926186,1.268948,8.719919,-1.824303,2.828304,-8.011582,-6.285015,4.406982,0.504900,3.484095],[-2.573023,-9.342541,3.656483,-4.445626,-5.607638,3.283738,-1.515892,-3.396170,2.395805,-7.603419],[1.868024,9.747618,7.929477,-2.529343,6.975671,-6.947638,1.032060,0.052083,-5.786809,8.290962],[7.493260,-4.444461,7.063846,-2.769481,7.954900,6.723713,6.611822,-4.847243,2.842359,-8.242541],[5.726036,-4.602962,5.072812,9.264428,7.812823,-0.152887,0.637536,-5.013928,8.699621,1.457035],[-7.105548,1.377612,7.885000,-4.249951,8.274844,-7.368949,0.425595,0.027145,-0.474774,-5.895290],[9.878406,5.325642,7.956992,5.692593,-1.544940,-6.675834,0.342421,-7.513617,6.595764,5.286222],[3.251505,1.129540,-6.666067,1.901969,9.735344,-3.739563,-2.311535,5.101673,-8.574945,-5.411599],[2.672474,0.428951,2.843617,-2.505453,-8.409835,6.128597,7.103484,-1.566037,1.422767,-1.835210],[9.814930,1.613551,-2.176076,-5.703302,3.746470,0.631641,6.385921,4.600625,2.643904,1.649343],[6.720497,4.221305,-8.753217,-4.060604,-6.029061,-4.095352,9.841087,2.644712,7.399097,-6.038187]]], dtype = "float32")#candidate|7263|(14, 16, 10)|const|float32
bop_7264 = relay.floor_mod(var_7262.astype('float32'), relay.reshape(const_7263.astype('float32'), relay.shape_of(var_7262))) # shape=(14, 16, 10)
func_5369_call = mod.get_global_var('func_5369')
func_5371_call = mutated_mod.get_global_var('func_5371')
var_7268 = relay.var("var_7268", dtype = "float32", shape = (264,))#candidate|7268|(264,)|var|float32
call_7267 = relay.TupleGetItem(func_5369_call(relay.reshape(var_7268.astype('float32'), [11, 2, 12])), 0)
call_7269 = relay.TupleGetItem(func_5371_call(relay.reshape(var_7268.astype('float32'), [11, 2, 12])), 0)
output = relay.Tuple([bop_7264,call_7267,var_7268,])
output2 = relay.Tuple([bop_7264,call_7269,var_7268,])
func_7275 = relay.Function([var_7262,var_7268,], output)
mod['func_7275'] = func_7275
mod = relay.transform.InferType()(mod)
mutated_mod['func_7275'] = func_7275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7275_call = mutated_mod.get_global_var('func_7275')
var_7277 = relay.var("var_7277", dtype = "float32", shape = (14, 16, 10))#candidate|7277|(14, 16, 10)|var|float32
var_7278 = relay.var("var_7278", dtype = "float32", shape = (264,))#candidate|7278|(264,)|var|float32
call_7276 = func_7275_call(var_7277,var_7278,)
output = call_7276
func_7279 = relay.Function([var_7277,var_7278,], output)
mutated_mod['func_7279'] = func_7279
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7426 = relay.const([[[-0.825474,-1.567663,8.588008,9.461408,-5.544408,-4.188386],[9.685328,-6.160364,1.104303,-7.953484,0.631399,-4.415293],[-2.860958,-2.566836,3.963769,9.789700,-5.790078,7.942200],[-0.868045,-8.744112,-6.694499,-7.012365,-9.608336,-6.685657],[-2.668555,8.748924,6.983209,7.049695,8.283550,-8.318443]],[[-8.085895,8.408887,4.256228,-0.533398,4.762265,0.632180],[-8.762854,8.205785,-6.474960,-5.637763,1.614196,-6.468406],[8.477439,-6.827673,1.583271,-9.622628,-1.306193,-3.897511],[-7.174213,1.022730,-6.393209,7.061027,-0.772011,4.952555],[-1.424666,3.372489,-0.431731,7.821548,-4.524186,-0.842016]],[[-7.102066,9.196189,-7.314457,8.779913,-6.711657,-4.694696],[0.063204,5.462410,0.613963,-2.448329,9.013738,3.019470],[6.755421,3.824875,-0.485947,9.819557,-2.701986,3.409692],[4.728161,7.073210,2.243720,-6.094572,-8.793579,-5.571633],[-2.261306,8.358470,5.916667,2.782590,7.646661,-0.963961]],[[2.071242,0.268400,-7.699769,-6.368861,1.440942,3.753378],[-8.745535,7.427278,-9.913063,-2.182435,-4.815554,-0.741771],[-2.451464,-8.906313,-9.782875,5.163718,-0.375604,-5.339272],[9.919879,-6.876761,-0.865615,0.947250,8.749915,6.554421],[-9.404480,0.314536,-3.327731,-0.455910,5.220654,-3.180142]],[[7.950594,1.060263,-5.664546,-5.271330,1.926583,-8.352334],[4.364332,-5.668785,-9.974597,-4.766035,1.526360,4.697996],[5.027864,-6.428426,-9.476783,-3.347127,-8.877096,-0.536606],[6.804152,-5.406414,8.630111,5.610115,-6.713170,-7.239441],[6.570313,1.649997,-3.854787,-7.287185,9.081012,-7.885735]],[[-3.167834,7.869469,1.463431,7.158879,8.316413,4.101818],[7.823834,7.218951,-3.479629,-6.713885,-0.250276,-5.839020],[7.402665,-5.160504,2.234727,-0.351366,7.507699,-6.850222],[5.909930,-7.781958,6.023424,-2.623186,-9.937408,-0.475168],[4.163822,-8.231296,-1.294820,-8.606031,-5.016036,-3.726656]],[[3.593126,5.501038,9.115243,7.563086,4.097333,5.428562],[3.123422,3.217716,3.976267,-1.470741,0.145113,-7.284502],[7.852798,4.980684,6.322899,0.811179,-0.549177,9.198651],[-7.450122,8.552063,-0.251931,-9.898247,-4.928461,7.118051],[2.442985,-8.319544,1.554902,4.377703,0.284048,-0.099017]],[[-9.942855,3.562253,-2.057757,-0.191448,-5.152002,-2.159946],[-7.357479,-6.754419,2.880163,-8.440567,-8.425665,3.660844],[2.076585,-2.150350,6.127421,2.634342,9.376139,-2.641660],[-5.593332,-5.033265,-5.973156,2.297361,-3.838028,5.788000],[-6.549443,-0.300633,-9.120167,-5.287511,-3.735009,-5.987574]]], dtype = "float32")#candidate|7426|(8, 5, 6)|const|float32
uop_7427 = relay.sin(const_7426.astype('float32')) # shape=(8, 5, 6)
func_2796_call = mod.get_global_var('func_2796')
func_2799_call = mutated_mod.get_global_var('func_2799')
const_7434 = relay.const([-4.800770,3.043567,-1.161411,-1.606450,-9.360270,1.983437,1.592671,-8.513438,2.104926,3.880494,3.366501,-1.173241,1.025641,4.906369,-3.878356,-5.471749,-0.902235,2.109018,7.800051,-7.172670,-2.245907,2.804112,5.186401,-7.967103,7.491691,4.391150,9.382246,-7.865603,4.792093,8.968147,-6.796982,-3.592042,1.759297,-2.272189,8.747806,-2.241347,-0.421523,9.511157,-5.469989,-2.344629,7.785182,-2.846862,5.065735,1.688682,-1.855335,9.438674,-5.526162,1.923651,4.495811,-8.766179,-5.192830,-9.902448,0.864315,8.530513,-4.832533,6.976549,3.266119,-2.228649,-7.813565,6.675775,1.050916,0.986117,-3.549541,3.858840,-0.888480,-0.865426,3.858150,5.557195,-7.887853,-0.585605,-1.316700,9.630738,2.464953,4.466383,6.874445,-5.299222,9.576462,4.499049,5.351059,1.098693,-1.552172,-2.694970,-5.990690,-9.292707,-1.196562,7.918613,-9.566139,6.011249,4.383602,1.245927,8.046991,0.898498,-1.355604,5.108011,5.547780,3.769844,-1.815977,0.970005,-1.079965,-8.079355,-1.574863,1.445804,-6.046733,-3.759927,7.476978,-5.527670,-6.654417,2.579655,-2.857011,-7.759479,5.736794,-8.341708,9.555017,1.942100,1.473991,8.792136,1.902645,5.901770,8.869517,3.885577,0.280454,1.978135,6.258914,-3.632502,1.028711,-5.802276,5.687563,1.533763,-0.027818,-4.397774,-6.370090,-6.636872,-6.003223,8.813995,9.303840,1.774685,-7.019922,-8.886746,6.035832,-3.642596,4.085970,-1.492644,0.109578,-9.908684,-3.353082,2.321866,-6.249451,-9.738028,2.783447,-6.668844,2.751473,-9.320201,-6.088424,5.535899,5.655910,2.734409,-2.653010,8.014041,1.469736,-1.979506,-0.566253,-1.139520,2.173720,-2.368975,-8.331841,7.971190,-2.843407,1.559263,8.160816,-8.659322,-1.637191,6.821475,3.541205,-7.809118,-8.049009,-4.410570,2.174296,1.965797,-5.601607,1.942604,-8.140397,-7.884486,-1.695842,-3.540179,-2.264547,8.265442,-7.923501,-6.299854,7.244154,-7.699727,7.015322,7.703585,2.548531,4.086714,-6.674666,-2.031105,6.619918,8.785743,-4.151013,8.193354,-1.226819,-1.030787,-8.370696,5.228343,9.471653,9.396734,-9.801458,7.645198,-6.980401,4.732530,-8.500146,5.493837,-3.477242,8.279076,-9.566754,-7.431748,1.744117,9.906380,1.241238,-7.022178,-8.748688,0.819591,-1.654534,-2.070724,6.784666,7.741880,5.890730,6.357835,3.652691,1.151806,-9.935708,-3.590077,-4.076810,0.926834,-2.742469,-6.101056,7.996705,-6.338755,8.880508,-0.243725,-9.196806,-1.516856,4.529764,-8.675109,-5.395824,-5.728124,5.376644,2.833299,8.882268,6.383453,-2.590074,-5.594782,7.489419,7.021969,-8.842606,5.387210,1.019391,-6.393376,1.746666,6.897212,-7.718603,-4.895899,-0.783005,9.585975,-2.892826,-4.790659,2.888515,9.912458,3.462515,6.520631,-9.110820,-8.699026,-5.997011,-6.626477,0.825818,0.326557,-1.557479,6.704564,6.196940,-1.819063,7.338999,-4.048368,1.599368,0.932471,-8.957222,-8.202924,0.605553,-0.859414,-9.678459,-4.619522,-6.209827,1.519134,7.324540,-4.987128,-6.662107,7.171753,7.904033,-7.994259,9.641788,0.068495,-1.028651,-4.033597,-8.806045,7.331093,-6.019819,4.844389,7.443116,7.386676,6.483836,-5.623806,-3.114216,-3.935715,7.562187,-0.479499,-5.216518,0.651357,-2.312584,9.839064,-5.883271,1.556424,-8.204318,-8.772150,4.511950,-8.574950,4.672718,-7.570508,-4.762517,4.333414,3.924108,-3.573083,0.880786,-5.718725,-6.392599,-7.961562,-5.667179,7.343363,-3.452938,7.964261,8.251315,4.641747,-7.587723,-2.744628,-2.468267,-8.013023,9.773865,1.983347,-7.179621,-4.997265,6.368339,-6.139334,-2.636127,-3.770420,1.192824,9.977806,-6.602613,9.499117,-0.507731,3.494280,3.773587,9.862628,5.535739,8.123056,-7.944882,-5.819249,-8.520726,-4.476098,-4.975415,-0.512438,-9.852937,-9.016982,-9.120817,6.471675,5.633840,0.628105,-5.460005,1.687978,1.275211,-5.275322,6.469610,-9.406783,8.618771,-7.167894,1.751759,5.904950,-3.190761,-6.520332,8.046964,-3.781604,9.724662,8.550338,-8.221803,5.484400,4.321707,8.884949,-6.040443,-5.756139,-6.861222,8.394635,1.030389,6.004607,-6.717680,-1.968180,1.757741,-0.278935,-8.391776,8.110019,-5.164638,9.453644,-9.041982,-1.577287,-8.536780,-7.706741,-7.116162,-5.491181,-5.958311,8.883559,-6.302829,-8.531866,-1.421034,-3.122800,-2.955018,6.225022,-7.015706,-8.201140,-2.314637,5.891598,9.318927,6.715659,7.126056,-1.090076,-0.453296,-1.314426,3.146205,-6.644212,0.967464,5.865848,-4.437099,-7.892092,3.150076,6.776673,-5.630105,-9.798123,-9.480499,1.083355,5.498911,4.948897,3.555656,-3.000569,-8.133428,2.358244,6.971578,0.792729,7.731277,-7.414741,-2.815947,-3.423704,-5.223579,4.287432,7.092280,-2.643371,-1.352002,-2.438346,9.295253,-7.194319,3.191567,7.516387,-5.618914,8.201426,8.277976,-1.799398,9.231756,-7.984436,9.785244,8.278499,-9.580770,-4.195341,2.591090,-6.219493,7.341566,9.699996,-9.910821,-4.787247,8.357717,4.845834,9.581724,1.208081,-6.591624,4.841058,2.665142,-6.795575,-7.417763,-3.565813,0.157447,9.297741,1.173896,-9.064735,2.495468,2.756131,-0.973396,4.080832,-3.072354,-8.351840,-8.224259,3.277759,-5.986265,8.688076,-0.532704,7.209429,7.124138,-4.661026,1.575153,-5.171897,0.279529,0.913514,-5.536776,-4.590740,9.032880,-0.641038,-2.157639,5.987163,4.862271,5.324598,-1.261695,-6.416581,9.158745,5.879254,5.075566,-5.552719,9.616373,-2.755897,-6.243805,-9.283753,1.959605,-9.979249,-6.207222,3.210322,-3.609131,2.894261,1.081438,-6.128953,0.838477,7.635852,-9.415319,0.815158,6.326191,5.246211,-5.395968,-0.574515,-7.377055,9.190560,-1.403959,3.712758,-8.936189,-2.914405,-7.347661,-0.580278,-9.170638,-7.315922,5.811884,-7.568865,5.359613,1.663727,7.162551,9.825042,-3.233222,3.640038,0.250786,8.049357,0.266040,5.922770,1.177267,9.785185,8.851186,-5.070307,-9.722673,-9.979335,-2.715610,6.571977,3.334309,-2.242557,-3.643371,-8.801982,-1.413272,4.987410,8.715566,9.997287,-7.721655,-8.039627,-5.773889,0.147824,6.682055,-3.452294,6.383568,-1.205075,-6.183341,-7.479639,-9.482894,8.855017,-9.841130,-0.300974,8.069430,-8.194022,5.430418,-2.455335,7.356372,-4.124415,1.432477,7.673066,-3.198943,5.438163,-8.363971,0.234415,-5.245005,2.604297,1.307206,8.805025,8.857412,2.756786,-9.068817,-8.592100,1.585548,1.758214,5.750622,4.478940,-1.787541,-1.581151,-0.737436,0.682409,-8.051263,3.433083,-3.693406,7.228868,0.078601,-1.230169,-0.890445,8.495967,2.637720,-2.065872,5.642888,7.403400,-5.271455,-0.270837,9.165096,3.761412,-7.529367,-3.530780,0.022492,-2.857403,-8.334158,1.898607,0.165718,-9.875886,3.460163,1.678787,-9.564947,-8.994246,7.262152,9.578617,-7.721546,-0.890867,3.407918,0.298778,-1.333098,9.719848,8.445704,3.362344,-6.655609,1.479051,-3.465589,-2.153608,4.643860,7.672087,-0.603588,-1.787294,-8.442242,3.014835,7.438579,-4.091749,4.010966,-3.938200,-4.826728,6.424698,9.815490,-5.502389,-5.697192,-4.128048,6.789694,-3.738092,-9.383300,-2.495955,2.779071,-2.147621,4.247091,8.910459,4.175938,4.723302,2.173310,-0.500900,1.984685,0.561510,0.901442,-1.025065,5.975927,-7.525844,2.987249,-8.064129,8.222895,4.481356,-5.486052,2.810272,-5.924280,5.739392,4.768961,-3.329515,4.923702,-0.187981,6.155983,3.490834,1.261849,-4.496928,7.492022,-6.700656,2.566495,7.175030,-3.568122,1.278917,9.468845,-2.922191,-6.937344,4.292817,-1.917078,8.222663,-1.647012,2.412891,-1.636629,-6.051821,-9.102238,-2.713516,-7.500941,7.388806,-4.657543,6.806326,-5.215300,7.182232,-2.379854,-1.887734,-0.933703,-8.537424,-8.622105,2.585321,7.044994,-6.291203,-7.771425,-2.583091,-7.370622,2.924015,-0.115113,-0.431861,-4.595482,-7.925547,5.348564,-8.592184,-6.986608,-9.098755,-2.986146,9.768004,-8.288270,7.481922,1.964247,6.471284,-9.426471,-2.316719,-1.961535,3.948759,-4.230582,7.037440,-5.521142,-1.236760,3.374329,0.466885,-0.344715,6.721020,6.660652,8.945347,-9.152771,-0.109404,1.254286,-4.740125,-1.173122,-6.228711,2.961396,-0.283315,1.649163,-7.180601,5.143274,-9.432542,-5.995584,-7.027474,4.921170,-2.854058,0.855889,-6.548528,-2.321073,-1.045487,-5.738004,8.504346,-3.904636,3.529253,-1.471650,-6.993510,8.539582,3.284169,7.869945,0.159686,9.695556,-6.338164,0.124539,8.393837,2.227351,-5.040562,2.366813,7.823741,1.390331,6.260679,-5.802099,3.837022,9.424554,-9.668949,3.447174,1.537437,2.369363,5.561784,-4.695858,-1.499259,-4.505309,0.574513,2.481098,4.738427,6.746522,-1.841816,9.822284,8.710683,5.260314,9.316667,-2.854910,6.341432,-5.292294,-1.626902,-7.153906,8.973353,0.543188,-6.268965,1.226819,7.836341,-3.394319,9.916857,0.881490,-3.376443,-3.400695,4.792081,-7.935164,-7.738596,7.036148,0.644007,-0.127108,-3.389261,0.052369,-4.207671,5.683130,9.847634,7.125261,4.712788,-4.606078,3.751282,1.150086,2.394042,-1.103938,-4.210457,-3.661772,7.671170,-4.077186,-6.138654,-0.811309,4.272764,-5.463526,9.448097,9.023615,-9.851613,7.090131,-2.476308,9.892492,-4.382276,3.700960,0.555145,6.764575,-9.457245,5.613438,3.588206,7.417888,8.960813,-2.869903,-5.446209,5.333722,9.691764,-1.276158,7.990418,9.926247,2.782802,-5.468968,-7.008516,7.434943,-9.349041,8.013937,-4.595730,-2.980357,-6.161588,5.299833,-3.884161,7.732033,4.617583,2.897503,2.268804,-2.222362,2.805014,-6.831118,-9.641583,0.334405,-7.830376,7.579964,3.085011,-7.697601,-6.826318,-4.280791,-7.538593,-9.765764,-7.936133,-6.437499,-0.808369,-2.833281,1.913812,1.939977,7.252394,-9.096704,7.765438,-2.475278,0.011456,-8.361969,-4.270681,-1.887465,-2.178063,-5.849391,-2.668589,8.605950,-8.846738,8.951764,-2.569342,6.828600,0.982956,5.524914,2.692345,3.279822,-3.035012,-5.544626,7.893565,4.235735,4.329765,-8.561391,-9.698447,-6.143302,6.035605,-4.544980,-1.333881,5.980858,-3.492888,-9.165287,0.560375,-8.557738,0.303753,-3.984739,-5.434277,1.080562,-1.120026,2.137000,2.153347,5.295787,3.939743,-6.344397,6.897785,0.085325,-2.426926,-1.975620,-6.766045,2.365548,5.474172,-9.494185,5.402413,-2.352241,3.949386,-5.877224,6.202214,3.244465,4.304573,0.294987,-8.425261,-6.146166,-0.016061,-1.631741,-3.069619,2.076596,4.623440,8.085096,8.071534,-0.507790,8.443961,4.921686,-8.653713,-2.567152,-5.936800,0.047580,-1.487646,4.703610,-2.090193,5.439926,1.667170,-4.878736,-1.613216,4.135576,9.676909,-5.495108,-8.463809,-1.607507,3.493572,-9.594777,-9.058580,-9.125263,-1.640136,7.345622,2.337570,7.693478,9.945011,2.263456,5.261759,6.939548,9.132362,5.309166,6.619925,-4.371317,-8.824107,-0.134533,-3.805301,-8.071913,-5.451614,2.656251,-9.065546,-4.939496,2.127061,-7.420318,-9.025362,8.903083,1.037829,1.881079,-2.956344,0.104195,0.076820,9.406997,-3.118961,-6.373792,-0.320091,-6.241068,-6.986880,-7.149689,4.687599,-0.591977,6.307441,9.979708,-6.480332,1.180774,-5.989776,-2.454768,6.992317,-6.922333,3.153037,-7.051748,-5.463321,-3.337136,-8.187307,-1.312804,2.545937,3.262333,0.907372,-2.974417,-5.907772,-9.667289,-2.221932,-5.744068,2.966480,-2.758458,5.672770,-2.953167,9.029468,-2.393318,0.339302,4.686183,7.448007,6.127895,3.012974,-1.931081,-1.684167,5.957773,5.101619,-2.885270,-4.222184,3.018049,8.065660,6.443276,9.072392,-8.397291,0.589056,7.368142,3.175815,4.456183,-9.964065,-8.581994,-3.543588,-6.854554,6.971398,-3.628578,3.775331,5.172136,0.456235,2.071427,-3.011419,-5.546820,-5.194414,-2.225933,-6.639315,-0.248537,5.982669,8.422839,-9.852208,-1.777081,-4.534305,4.263856,-5.315353,6.805944,-8.138443,-7.174005,-7.200244,-5.797109,2.252364,-2.021815,-5.059806,-9.515337,3.583737,5.742128,5.958235,6.411745,8.205628,9.551177,2.765878,3.267686,-9.197914,-1.405874,-7.733245,7.648854,9.355956,-7.778940,-5.921648,-9.655777,-2.376648,-1.583678,8.273333,-3.267343,-7.096738,-1.401991,-3.587106,2.410816,-7.645217,9.863829,-1.775060,-5.706288,3.549605,1.990514,7.623054,8.540111,-4.695006,-4.855636,-5.947456,-7.185798,-2.513466,-3.894231,-2.971561,4.448275,-9.855328,-3.829607,5.666996,-6.977700,2.491983,7.476982,7.342996,-9.294625,-8.572414,6.687875,7.412576,7.692419,7.815480,-9.152996,-5.666656,-7.173880,0.325196,6.565164,8.826743,4.783031,-5.325582,2.597282,6.808047,7.755330,-0.165787,-9.195610,-2.434531,-6.310587,-4.621129,7.090786,-1.701668,2.364973,-0.336489,4.667061,-8.520125,-3.343287,0.159505,4.085838,-0.958657,-8.842965,3.407408,-0.733820,-9.331473,5.555273,-9.880448,8.196767,-5.392502,-8.724710,-8.808741,-7.784954,-8.992852,5.522388,6.415085,-4.236510,5.939795,-0.717163,-9.861230,-0.121139,7.765970,3.698658,-0.654806,1.600292,7.907666,-3.921359,3.902796,-8.522263,7.843356,5.058665,-7.490019,-0.044348,-9.278678,1.602164,-0.748166,2.772918,7.896451,6.556345,-1.496951,3.765608,-7.963460,8.327693,-0.897793,8.377398,0.480025,-7.588647,-7.932389,7.453845,-4.298791,6.614144,-6.678550,-2.515319,1.432718,1.816173,-1.429820,7.467095,-0.549086,-4.681970,6.355604,2.058496,-5.728357,-3.474839,-8.233523,5.804702,-4.602948,5.653248,-2.449328,0.935383,1.763673,8.214545,2.451454,-6.074953,6.029772,-0.944010,-5.793271,7.499767,-3.601406,-0.053091,9.066983,5.504723,-0.916015,-8.543170,-6.353411,8.213750,-0.553524,-9.162742,0.013006,-2.336909,2.588756,1.907094,-2.504920,8.647561,2.452918,3.976161,7.925309,-7.809219,-2.605288,-3.585046,-3.716414,-8.685850,-7.211121,-6.967918,-8.524814,-9.006077,-7.742158,0.317267,-7.813003,2.719321,-7.697943,-6.840195,5.691139,-4.576009,4.473882,-2.073241,-0.325667,3.473037,1.453982,-4.396950,-1.743031,-9.748897,1.192182,7.635755,-2.468644,1.485769,2.766738,-0.249424,-9.452595,-8.401924,-4.757026,-3.274655,-0.805889,3.131398,3.058580,4.768790,3.554078,-5.024823,1.068716,-4.239419,-1.249977,3.389567,-9.730391,-3.534236,-9.051485,-4.888098,-3.135517,4.357218,-3.031336,-9.148859,-0.258930,3.491589,1.456299,-6.860467,7.701814,-6.991078,-1.740533,-6.115876,-2.400273,-4.587130,5.429746,4.509667,8.668031,-7.425386,1.346565,3.493750,-6.301347,6.105288,2.287949,9.783906,8.693442,-0.634524,3.797710,-1.916262,-4.654807,-7.199833,3.828448,7.068897,-9.463433,9.627793,-4.602977,4.778824,5.085572,4.608095,3.571003,-6.090762,-7.607946,-8.673099,6.797672,0.478926,3.233067,2.934204,8.438604,4.167289,5.044899,-5.179706,-5.174465,-0.249084,-8.578408,-5.814361,-9.647623,-7.144005,6.202834,-8.474713,5.358926,-1.022915,9.910502,-7.766753,-0.960068,-2.569661,-6.164539,-1.622414,5.371061,-9.826460,-3.706474,9.868479,3.438873,4.532844,-1.420632,1.367412,-5.457973,4.057968,-3.559190,-7.856527,9.377352,-8.838856,2.679387,-7.357624,4.974838,5.828305,1.134176,5.902000,-7.813913,-6.506277,-0.342785,3.281352,4.268176,8.741990,-5.405948,5.625364,-7.818062,4.657865,-8.819733,-2.597815,-9.761076,8.761699,-7.231920,4.279663,5.916866,-1.522651,4.751191,-5.060912,-8.361996,-8.966384,-4.782336,-1.315197,1.781415,-9.015037,-9.415104,-2.798475,-9.312783,-4.414740,-7.345955,-7.558119,7.921105,0.811547,-0.859269,-4.039328,8.947420,7.788821,-9.061857,2.083763,8.603583,5.158473,-6.849345,-9.087013,4.150964,-5.314692,-7.276107,0.330658,1.304829,5.620406,6.398462,-8.883536,-7.095062,-5.907769,8.078028,8.692740,1.620619,-4.723836,-7.061637,8.930967,-9.422708,6.787500,-8.685605,-4.156146,6.735660,1.647381,0.947746,-9.092289,5.874162,-6.893049,-8.127357,0.665857,-2.848091,9.228794,-7.107686,-4.618400,-6.099554,-2.033368,1.225833,-9.777208,-1.248912,0.934050,2.552769,8.047406,-3.276916,-7.923708,2.554041,-3.382615,0.409126,-1.309852,-6.337541,-3.609965,-3.433503,4.047904,-7.428934,6.617336,7.502357,-1.414092,-0.895291,8.503200,-0.885477,1.676136,5.539875,3.123612,4.358238,6.080242,9.903555,5.865418,-3.465636,2.576031,-7.666875,4.328834,5.384333,0.098790,2.303180,-1.844915,-9.661510,-4.350613,0.023638,-0.085615,9.843945,0.409215,-1.346246,8.495961,4.394610,7.121138,0.359919,-7.887191,-5.416218,-6.788362,-1.471396,3.127291,-9.498757,0.948960,-4.307468,-5.393296,3.424237,-7.269284,-5.648404,-1.466374,-9.962173,-9.018802,-5.381173,-0.404836,-5.151824,-8.161208,6.544509,8.116099,9.473135,8.177415,-4.045732,-2.928992,6.489865,0.189734,-4.490273,-5.544005,0.060269,-0.873846,9.117489,3.231628,1.402444,-5.365627,6.711548,-1.150012,-4.249908,-3.560707,6.663148,-4.574113,1.112092,1.268962,8.630175,-4.419622,-2.184509,-1.200087,1.814452,0.931239,-0.056309,1.082008,6.709279,-9.448602,-3.140460,-9.788189,7.662645,-1.206546,8.170197,-8.938154,2.114814,8.630323,4.027412,1.499729,2.840815,1.253936,8.991879,-5.809900,-0.760305,-3.884636,0.274674,3.512601,-7.609342,-6.554682,9.941971,-1.240223,0.731977,-3.683259,-2.537202,-3.378553,-4.021044,3.185481,-2.937877,-7.928949,-3.865784,7.855080,5.655771,0.939748,1.143990,8.197488,-1.998648,1.498117,-7.625314,3.760896,-7.280507,-7.821279,2.781582,-3.402187,4.164378,5.021712,4.699916,-9.123626,8.627822,-6.812138,0.596289,1.946599,-5.858428,8.227881,-4.109621,5.442346,-1.630964,1.329451,7.874113,-0.624591,-3.000613,-0.289564,-0.091185,-4.940536,-9.704507,-5.297896,4.741448,-3.049403,5.512260,-3.505416,-4.903741,-9.546504,6.086251,-4.139330,2.095771,-2.413556,-6.201862,4.405191,8.058313,-6.759760,1.431218,0.159866,-2.360013,-7.930135,4.855324,7.887596,-3.966855,6.294998,5.630771,-7.328014,-4.334659,-3.402362,1.663074,3.763538,-8.425408,4.148241,3.840176,-0.904079,-8.357517,3.805852,4.946395,3.316492,-8.569022,4.926294,-6.652535,-5.095169,-4.123050,-8.907339,-9.155853,-6.217952,3.625957,-0.540685,-8.276320,0.968611,7.783312,4.125245,4.257610,-0.939632,2.641661,-9.116362,8.741309,-4.029561,8.408473,-3.812851,-3.112058,-9.178187,-9.093297,-6.904663,6.252652,0.550321,-1.653290,6.335260,7.764945,7.680935,-6.339364,-1.744516,-1.053544,1.815924,1.077215,-7.064186,3.766090,-5.486050,2.564189,-6.337896,-0.549142,-3.273747,-4.159722,-4.326983,9.659288,-0.343491,3.105137,-3.900470,0.245175,-3.574119,3.093122,4.946348,6.611864,-8.025838,-3.920469,-8.660653,-4.029263,-4.898374,-0.925676,-3.150272,-2.468016,0.551759,7.372044,-0.130300,-5.936498,-0.514912,8.837347,-9.464833,7.843199,7.137868,5.106747,-6.114028,-3.226032,6.421030,3.994434,3.912128,-9.768631,-2.693117,-2.429311,9.555724,4.677513,-5.911782,5.612995,2.280889,5.962254,-9.911445,-2.219327,-2.821303,2.277639,-4.087564,0.106412,8.727460,-0.970307,9.681120,-1.245799,9.698916,-4.744109,-7.611597,-2.336501,-6.047736,-0.888827,7.393723,2.977156,-6.680784,9.478443,-5.422035,-9.729588,-4.800448,2.341345,7.651270,-4.437529,8.156889,-0.169768,-0.029767,5.049174,-9.278058,-7.888685,5.637772,8.493268,-1.660424,-8.317659,4.931190,-4.810536,2.904986,3.095167,0.852787,-1.471715,3.706904,-8.113083,7.182188,-7.917578,-4.739697,2.913154,5.883596,6.284485,6.273383,-0.624100,-0.711683,1.473723,-5.213303,-2.835598,-8.884137,-1.928182,3.052559,-6.995977,-7.798496,-1.730409,1.212319,-9.084571,-0.082879,-7.710962,0.685715,-3.076223,-7.684882,-1.054760,-2.335501,-6.109997,8.662206,-2.724767,-7.034014,5.548547,-1.923626,6.652995,-4.364733,-9.062576,0.376013,-4.661024,6.733124,-7.155602,-4.576702,-9.940132,1.523910,-3.040260,9.599635,8.968221,9.023335,-9.982113,-0.983355,5.477597,-1.210103,8.289087,-3.621095,-9.300812,-5.303709,2.176431,3.868896,6.436133,3.327072,5.554851,5.004311,-5.790366,-8.930028,-8.336393,-7.553514,1.743555,5.190593,-8.811466,-1.641737,1.122996,4.961340,-9.158915,-5.171033,1.872878,8.412482,-2.557163,3.339846,7.481041,0.510305,-7.499689,6.449871,-5.651757,-9.129858,-3.055315,-6.584710,5.468261,1.476537,-4.290874,3.459680,8.222664,1.414134,5.700943,-1.199921,-8.662412,-7.376266,7.085639,-1.778678,-3.684527,-4.707838,0.001033,-6.459026,-0.567790,-2.307370,2.352266,-6.062343,-9.388340,-7.483323,-7.495936,-0.638058,3.264387,9.315942,-5.921598,-9.249862,-7.173146,-6.955463,9.148886,-4.439228,-5.313901,3.579400,-0.094733,-2.551567,6.668956,4.720450,2.976993,-5.484431,-2.321491,3.914131,3.095363,-5.981103,-3.280160,9.216832,1.324159,6.276351,0.944934,-5.567417,-4.646541,-8.282187,8.989365,4.723195,-2.605924,2.400529,4.863635,9.451302,5.919297,-7.452672,-1.554909,9.755944,5.773069,0.046434,8.229165,-6.391713,-9.145178,0.244698,-8.990778,-5.454612,-5.940250,-7.734297,-2.545588,-7.700960,2.546321,4.690405,5.240493,9.213811,5.892006,1.685507,-6.292305,-2.131762,-4.976153,8.199181,-4.902468,5.118163,7.927817,-6.776304,-4.471464,7.624250,4.009040,9.392979,-1.723373,5.008484,-5.636048,-4.533382,4.984991,9.665474,4.131336,-6.857993,1.865848,-7.653788,4.099409,-5.744115,-8.786598,2.387228,2.495923,-2.477424,-7.485478,7.905196,-2.987977,0.549067,7.505152,9.183906,8.917293,-3.331803,-9.646140,-4.247981,-3.150816,3.099988,-4.682941,-0.759874,4.880690,6.536742,1.618988,-2.178316,3.236581,0.512171,1.370906,6.663744,-6.369444,7.127440,-8.380574,7.881926,-7.480052,1.777288,7.894192,-1.696983,-4.850868,-8.191149,4.047775], dtype = "float32")#candidate|7434|(2100,)|const|float32
call_7433 = func_2796_call(relay.reshape(const_7434.astype('float32'), [14, 15, 10]))
call_7435 = func_2796_call(relay.reshape(const_7434.astype('float32'), [14, 15, 10]))
output = relay.Tuple([uop_7427,call_7433,const_7434,])
output2 = relay.Tuple([uop_7427,call_7435,const_7434,])
func_7441 = relay.Function([], output)
mod['func_7441'] = func_7441
mod = relay.transform.InferType()(mod)
output = func_7441()
func_7442 = relay.Function([], output)
mutated_mod['func_7442'] = func_7442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7441_call = mod.get_global_var('func_7441')
func_7442_call = mutated_mod.get_global_var('func_7442')
call_7465 = relay.TupleGetItem(func_7441_call(), 1)
call_7466 = relay.TupleGetItem(func_7442_call(), 1)
output = call_7465
output2 = call_7466
func_7473 = relay.Function([], output)
mod['func_7473'] = func_7473
mod = relay.transform.InferType()(mod)
output = func_7473()
func_7474 = relay.Function([], output)
mutated_mod['func_7474'] = func_7474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7473_call = mod.get_global_var('func_7473')
func_7474_call = mutated_mod.get_global_var('func_7474')
call_7530 = func_7473_call()
call_7531 = func_7473_call()
uop_7537 = relay.log(call_7530.astype('float64')) # shape=(14, 15, 10)
uop_7539 = relay.log(call_7531.astype('float64')) # shape=(14, 15, 10)
output = uop_7537
output2 = uop_7539
func_7541 = relay.Function([], output)
mod['func_7541'] = func_7541
mod = relay.transform.InferType()(mod)
output = func_7541()
func_7542 = relay.Function([], output)
mutated_mod['func_7542'] = func_7542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7473_call = mod.get_global_var('func_7473')
func_7474_call = mutated_mod.get_global_var('func_7474')
call_7585 = func_7473_call()
call_7586 = func_7473_call()
output = relay.Tuple([call_7585,])
output2 = relay.Tuple([call_7586,])
func_7587 = relay.Function([], output)
mod['func_7587'] = func_7587
mod = relay.transform.InferType()(mod)
output = func_7587()
func_7588 = relay.Function([], output)
mutated_mod['func_7588'] = func_7588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7441_call = mod.get_global_var('func_7441')
func_7442_call = mutated_mod.get_global_var('func_7442')
call_7591 = relay.TupleGetItem(func_7441_call(), 0)
call_7592 = relay.TupleGetItem(func_7442_call(), 0)
output = relay.Tuple([call_7591,])
output2 = relay.Tuple([call_7592,])
func_7593 = relay.Function([], output)
mod['func_7593'] = func_7593
mod = relay.transform.InferType()(mod)
output = func_7593()
func_7594 = relay.Function([], output)
mutated_mod['func_7594'] = func_7594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7441_call = mod.get_global_var('func_7441')
func_7442_call = mutated_mod.get_global_var('func_7442')
call_7630 = relay.TupleGetItem(func_7441_call(), 1)
call_7631 = relay.TupleGetItem(func_7442_call(), 1)
func_7473_call = mod.get_global_var('func_7473')
func_7474_call = mutated_mod.get_global_var('func_7474')
call_7649 = func_7473_call()
call_7650 = func_7473_call()
func_6763_call = mod.get_global_var('func_6763')
func_6770_call = mutated_mod.get_global_var('func_6770')
var_7656 = relay.var("var_7656", dtype = "float64", shape = (176,))#candidate|7656|(176,)|var|float64
var_7657 = relay.var("var_7657", dtype = "float64", shape = (66, 2))#candidate|7657|(66, 2)|var|float64
var_7658 = relay.var("var_7658", dtype = "float32", shape = (180,))#candidate|7658|(180,)|var|float32
call_7655 = relay.TupleGetItem(func_6763_call(relay.reshape(var_7656.astype('float64'), [4, 11, 4]), relay.reshape(var_7656.astype('float64'), [4, 11, 4]), relay.reshape(call_7649.astype('float32'), [2100,]), relay.reshape(var_7657.astype('float64'), [132,]), relay.reshape(var_7658.astype('float32'), [180,]), ), 3)
call_7659 = relay.TupleGetItem(func_6770_call(relay.reshape(var_7656.astype('float64'), [4, 11, 4]), relay.reshape(var_7656.astype('float64'), [4, 11, 4]), relay.reshape(call_7649.astype('float32'), [2100,]), relay.reshape(var_7657.astype('float64'), [132,]), relay.reshape(var_7658.astype('float32'), [180,]), ), 3)
func_3058_call = mod.get_global_var('func_3058')
func_3060_call = mutated_mod.get_global_var('func_3060')
const_7662 = relay.const([1,-8,2,-5,-2,-8,-1,-3,-7,8,6,10,-10,-4,-2,-8,4,-2,-7,3,-9,10,-7,10,6,9,-2,9,-1,1], dtype = "uint64")#candidate|7662|(30,)|const|uint64
call_7661 = relay.TupleGetItem(func_3058_call(relay.reshape(const_7662.astype('uint64'), [5, 6, 1])), 1)
call_7663 = relay.TupleGetItem(func_3060_call(relay.reshape(const_7662.astype('uint64'), [5, 6, 1])), 1)
var_7666 = relay.var("var_7666", dtype = "float64", shape = (66, 2))#candidate|7666|(66, 2)|var|float64
bop_7667 = relay.bitwise_or(var_7657.astype('uint8'), relay.reshape(var_7666.astype('uint8'), relay.shape_of(var_7657))) # shape=(66, 2)
func_7593_call = mod.get_global_var('func_7593')
func_7594_call = mutated_mod.get_global_var('func_7594')
call_7673 = relay.TupleGetItem(func_7593_call(), 0)
call_7674 = relay.TupleGetItem(func_7594_call(), 0)
bop_7684 = relay.floor_mod(var_7666.astype('float32'), relay.reshape(var_7657.astype('float32'), relay.shape_of(var_7666))) # shape=(66, 2)
output = relay.Tuple([call_7630,call_7649,call_7655,var_7656,var_7658,call_7661,const_7662,bop_7667,call_7673,bop_7684,])
output2 = relay.Tuple([call_7631,call_7650,call_7659,var_7656,var_7658,call_7663,const_7662,bop_7667,call_7674,bop_7684,])
F = relay.Function([var_7656,var_7657,var_7658,var_7666,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7656,var_7657,var_7658,var_7666,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

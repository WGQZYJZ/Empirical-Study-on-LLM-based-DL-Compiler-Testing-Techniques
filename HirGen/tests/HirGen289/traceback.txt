==========mod==========
#[version = "0.0.5"]
def @func_5866() -> (Tensor[(840), float32], Tensor[(2, 13, 12), int32]) {
  %0 = @func_4359() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */;
  %1 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %2 = %0.2;
  %3 = %1.0;
  (%2, %3)
}

def @func_7358(%var_7320: Tensor[(15, 3, 10), int8], %var_7321: Tensor[(15, 3, 10), int8], %var_7335: Tensor[(840), float32]) -> (Tensor[(15, 3, 10), int8], Tensor[(3, 10, 10), int16], bool, Tensor[(840), float32]) {
  %4 = cast(%var_7321, dtype="int8") /* ty=Tensor[(15, 3, 10), int8] */;
  %5 = shape_of(%var_7320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%var_7320, dtype="int8") /* ty=Tensor[(15, 3, 10), int8] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %8 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %9 = cast(%var_7335, dtype="float32") /* ty=Tensor[(840), float32] */;
  %10 = reshape(%8, newshape=[]) /* ty=bool */;
  %11 = reshape(%9, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %12 = @func_3427(%10, %11) /* ty=(Tensor[(4, 13, 14), float32], Tensor[(3, 10, 10), int16], bool, Tensor[(300), bool], Tensor[(840), float32], Tensor[(840), uint64]) */;
  %13 = maximum(%6, %7) /* ty=Tensor[(15, 3, 10), int8] */;
  %14 = %12.1;
  (%13, %14, False /* ty=bool */, %var_7335)
}

def @func_9730() -> (Tensor[(2, 13, 12), int32],) {
  %15 = @func_9299() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %16 = %15.1;
  (%16,)
}

def @func_12745() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32]) {
  %17 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %19 = reshape(%18, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %20 = @func_11929(%19) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
  %21 = %17.0;
  %22 = %20.0;
  %23 = @func_11476() /* ty=Tensor[(2, 13, 12), int32] */;
  (%21, %22, meta[relay.Constant][0] /* ty=Tensor[(840), float32] */, %23)
}

def @func_1109(%var_1096: bool) -> (Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) {
  %24 = cast(%var_1096, dtype="bool") /* ty=bool */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 13, 4), bool] */, dtype="bool") /* ty=Tensor[(4, 13, 4), bool] */;
  %26 = cast(%var_1096, dtype="uint8") /* ty=uint8 */;
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(1680), uint8] */, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %28 = reshape(%26, newshape=[]) /* ty=uint8 */;
  %29 = reshape(%27, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
  %30 = @func_695(%28, %29) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
  %31 = logical_or(%24, %25) /* ty=Tensor[(4, 13, 4), bool] */;
  %32 = %30.1;
  (%31, %32, meta[relay.Constant][2] /* ty=Tensor[(1680), uint8] */)
}

def @func_7810() -> Tensor[(2, 13, 12), int16] {
  %33 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
  %33.0
}

def @func_4305(%var_4193: Tensor[(840), float32], %var_4237: Tensor[(8), float64]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(840), float32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), uint32], Tensor[(2, 420), float32], Tensor[(8), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
  %34 = @func_4179() /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
  %35 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %36 = cast(%var_4193, dtype="float32") /* ty=Tensor[(840), float32] */;
  %37 = reshape(%36, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %38 = @func_3621(%37) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) */;
  %39 = %38.2;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(840), float32] */;
  %41 = reshape(%40, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %42 = @func_3621(%41) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) */;
  %43 = cast(%var_4193, dtype="float32") /* ty=Tensor[(840), float32] */;
  %44 = cast(%var_4237, dtype="float64") /* ty=Tensor[(8), float64] */;
  %45 = reshape(%43, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
  %46 = reshape(%44, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float64] */;
  %47 = @func_4046(%45, %46) /* ty=(Tensor[(2, 2, 2), float64], Tensor[(2, 2, 2), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 2, 2), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %48 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %49 = cast(%39, dtype="float32") /* ty=Tensor[(840), float32] */;
  %50 = reshape(%49, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %51 = @func_2844(%50) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %52 = %47.5;
  %53 = cast(%52, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
  %54 = reshape(%53, newshape=[1, 840]) /* ty=Tensor[(1, 840), float32] */;
  %55 = @func_1607(%54) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %56 = @func_3457() /* ty=(Tensor[(840), float32],) */;
  %57 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
  %58 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %59 = %34.1;
  %60 = %35.0;
  %61 = @func_2287() /* ty=Tensor[(2, 13, 12), float64] */;
  %62 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
  %63 = %42.3;
  %64 = %48.0;
  %65 = %51.1;
  %66 = %55.0;
  %67 = %56.0;
  %68 = %57.0;
  %69 = %58.0;
  (%59, %60, %39, %var_4193, %61, %62, %63, %52, %var_4237, %64, %65, %66, %67, %68, %69)
}

def @func_9531() -> (Tensor[(2, 13, 12), int32],) {
  %70 = @func_3513() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %71 = %70.0;
  (%71,)
}

def @func_4675() -> Tensor[(2, 13, 12), int32] {
  %72 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %72.0
}

def @func_9230() -> (Tensor[(2, 13, 12), bool], Tensor[(4, 13, 4), bool], bool) {
  %73 = @func_6938() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) */;
  %74 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %75 = reshape(%74, newshape=[]) /* ty=bool */;
  %76 = @func_1109(%75) /* ty=(Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
  %77 = %73.3;
  %78 = %76.0;
  (%77, %78, True /* ty=bool */)
}

def @func_11160(%var_11102: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], int64, Tensor[(1680), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], Tensor[(1188, 840), int16]) {
  %79 = @func_5907() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(312), int32]) */;
  %80 = @func_3441() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %81 = cast(%var_11102, dtype="float32") /* ty=Tensor[(840), float32] */;
  %82 = reshape(%81, newshape=[1, 840]) /* ty=Tensor[(1, 840), float32] */;
  %83 = @func_1607(%82) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %84 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %85 = cast(meta[relay.Constant][3] /* ty=Tensor[(1188, 1), int64] */, dtype="int64") /* ty=Tensor[(1188, 1), int64] */;
  %86 = cast(meta[relay.Constant][4] /* ty=Tensor[(1680), uint8] */, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %87 = reshape(%84, newshape=[]) /* ty=int64 */;
  %88 = reshape(%85, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), int64] */;
  %89 = reshape(%86, newshape=[1, 1680]) /* ty=Tensor[(1, 1680), uint8] */;
  %90 = @func_4484(%87, %88, %89) /* ty=(Tensor[(11, 9, 12), int64], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], Tensor[(2, 13, 12), bool]) */;
  %91 = @func_6679() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), int32], Tensor[(840, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(4, 420), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8) */;
  %92 = cast(%var_11102, dtype="float32") /* ty=Tensor[(840), float32] */;
  %93 = cast(meta[relay.Constant][3] /* ty=Tensor[(1188, 1), int64] */, dtype="float32") /* ty=Tensor[(1188, 1), float32] */;
  %94 = power(%92, %93) /* ty=Tensor[(1188, 840), float32] */;
  %95 = cast(-8 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %96 = cast(%var_11102, dtype="float32") /* ty=Tensor[(840), float32] */;
  %97 = reshape(%95, newshape=[]) /* ty=bool */;
  %98 = reshape(%96, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %99 = @func_3427(%97, %98) /* ty=(Tensor[(4, 13, 14), float32], Tensor[(3, 10, 10), int16], bool, Tensor[(300), bool], Tensor[(840), float32], Tensor[(840), uint64]) */;
  %100 = %99.2;
  %101 = cast(%94, dtype="int16") /* ty=Tensor[(1188, 840), int16] */;
  %102 = cast(%100, dtype="int16") /* ty=int16 */;
  %103 = %79.0;
  %104 = %80.0;
  %105 = %83.5;
  %106 = %90.2;
  %107 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
  %108 = %91.8;
  %109 = left_shift(%101, %102) /* ty=Tensor[(1188, 840), int16] */;
  (%103, %104, %105, %106, -8 /* ty=int64 */, meta[relay.Constant][4] /* ty=Tensor[(1680), uint8] */, %107, %108, %109)
}

def @func_3801() -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %110 = @func_2693() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) */;
  %111 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
  %112 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %113 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %114 = %110.5;
  %115 = %111.0;
  %116 = %112.0;
  %117 = %113.0;
  %118 = @func_3292() /* ty=Tensor[(2, 13, 12), int32] */;
  (%114, %115, %116, %117, %118)
}

def @func_999() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %119 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %120 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  %121 = %119.0;
  (%120, %121)
}

def @func_1858(%var_1834: bool, %var_1835: Tensor[(3, 10, 10), bool], %var_1849: Tensor[(2, 420), float32]) -> (Tensor[(3, 10, 10), bool], Tensor[(3, 10, 10), int16], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32]) {
  %122 = cast(%var_1834, dtype="bool") /* ty=bool */;
  %123 = cast(%var_1835, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
  %124 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 10, 10), bool] */, dtype="int16") /* ty=Tensor[(3, 10, 10), int16] */;
  %125 = shape_of(%var_1835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%var_1835, dtype="int16") /* ty=Tensor[(3, 10, 10), int16] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %128 = cast(%var_1849, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
  %129 = reshape(%128, newshape=[840, 1]) /* ty=Tensor[(840, 1), float32] */;
  %130 = @func_1340(%129) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) */;
  %131 = cast(%var_1849, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
  %132 = reshape(%131, newshape=[1, 840]) /* ty=Tensor[(1, 840), float32] */;
  %133 = @func_1607(%132) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %134 = logical_and(%122, %123) /* ty=Tensor[(3, 10, 10), bool] */;
  %135 = right_shift(%126, %127) /* ty=Tensor[(3, 10, 10), int16] */;
  %136 = %130.0;
  %137 = %133.1;
  (%134, %135, %136, %var_1849, %137)
}

def @func_6611() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) {
  %138 = @func_1915() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
  %139 = @func_3801() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %140 = %138.0;
  %141 = %139.0;
  (%140, %141)
}

def @func_4909(%var_4857: Tensor[(840), float32], %var_4858: Tensor[(8), float64], %var_4905: bool) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(8), float64], Tensor[(2, 13, 12), float32], Tensor[(2, 420), bool], Tensor[(2, 13, 12), int32], bool) {
  %142 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %143 = cast(%var_4857, dtype="float32") /* ty=Tensor[(840), float32] */;
  %144 = cast(%var_4858, dtype="float64") /* ty=Tensor[(8), float64] */;
  %145 = reshape(%143, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
  %146 = reshape(%144, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float64] */;
  %147 = @func_4046(%145, %146) /* ty=(Tensor[(2, 2, 2), float64], Tensor[(2, 2, 2), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 2, 2), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %148 = @func_4638() /* ty=(Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), float32], Tensor[(840), uint8]) */;
  %149 = cast(%var_4857, dtype="float32") /* ty=Tensor[(840), float32] */;
  %150 = cast(%var_4857, dtype="float32") /* ty=Tensor[(840), float32] */;
  %151 = reshape(%149, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
  %152 = reshape(%150, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
  %153 = @func_2557(%151, %152) /* ty=(Tensor[(2, 13, 12), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 420), bool]) */;
  %154 = cast(%var_4905, dtype="bool") /* ty=bool */;
  %155 = reshape(%154, newshape=[]) /* ty=bool */;
  %156 = @func_1109(%155) /* ty=(Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
  %157 = %142.0;
  %158 = %147.6;
  %159 = %148.0;
  %160 = %153.2;
  %161 = %156.1;
  (%157, %158, %var_4857, %var_4858, %159, %160, %161, %var_4905)
}

def @func_1208(%var_1177: Tensor[(2, 13, 12), int32], %var_1184: Tensor[(840), float32], %var_1204: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) {
  %162 = @func_1023() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %163 = %162.1;
  %164 = cast(%var_1177, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
  %165 = shape_of(%163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%163, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %168 = cast(%var_1184, dtype="float32") /* ty=Tensor[(840), float32] */;
  %169 = reshape(%168, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %170 = @func_866(%169) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32]) */;
  %171 = cast(%var_1204, dtype="uint64") /* ty=Tensor[(840), uint64] */;
  %172 = shape_of(%var_1184, dtype="int32") /* ty=Tensor[(1), int32] */;
  %173 = cast(%var_1184, dtype="uint64") /* ty=Tensor[(840), uint64] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %175 = logical_and(%166, %167) /* ty=Tensor[(2, 13, 12), bool] */;
  %176 = %170.0;
  %177 = add(%173, %174) /* ty=Tensor[(840), uint64] */;
  (%175, %176, %177)
}

def @func_1340(%var_1332: Tensor[(840, 1), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) {
  %178 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %179 = cast(%178, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %180 = cast(%var_1332, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
  %181 = cast(%var_1332, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
  %182 = reshape(%179, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %183 = reshape(%180, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %184 = reshape(%181, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %185 = @func_1208(%182, %183, %184) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %186 = %185.2;
  (%178, %186, %var_1332)
}

def @func_7061() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int16]) {
  %187 = @func_6455() /* ty=(Tensor[(2, 13, 12), int16],) */;
  %188 = @func_3292() /* ty=Tensor[(2, 13, 12), int32] */;
  %189 = @func_2287() /* ty=Tensor[(2, 13, 12), float64] */;
  %190 = %187.0;
  (%188, %189, %190)
}

def @func_8680() -> (Tensor[(2, 13, 12), int32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %191 = @func_6234() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %192 = %191.0;
  %193 = cast(%192, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %194 = reshape(%193, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %195 = @func_8122(%194) /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), uint16]) */;
  %196 = %195.0;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(840), float32] */;
  %198 = reshape(%197, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %199 = @func_351(%198) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
  %200 = @func_5087() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %201 = %199.1;
  %202 = @func_7396() /* ty=Tensor[(2, 13, 12), int32] */;
  %203 = %200.0;
  (%192, %196, %201, %202, %203)
}

def @func_7700() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
  %204 = @func_7249() /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %205 = @func_3441() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %206 = %204.3;
  %207 = %205.0;
  (%206, %207)
}

def @func_8063() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
  %208 = @func_3553() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %209 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
  %210 = %208.1;
  %211 = %209.2;
  (%210, %211)
}

def @func_9441(%var_9408: int64, %var_9409: Tensor[(1188), int64]) -> (Tensor[(2, 13, 12), int32], Tensor[(11, 9, 12), int64], int64, Tensor[(1188), int64], Tensor[(1680), uint8]) {
  %212 = @func_6611() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %213 = cast(%var_9408, dtype="int64") /* ty=int64 */;
  %214 = cast(%var_9409, dtype="int64") /* ty=Tensor[(1188), int64] */;
  %215 = cast(meta[relay.Constant][6] /* ty=Tensor[(1680), uint8] */, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %216 = reshape(%213, newshape=[]) /* ty=int64 */;
  %217 = reshape(%214, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), int64] */;
  %218 = reshape(%215, newshape=[1, 1680]) /* ty=Tensor[(1, 1680), uint8] */;
  %219 = @func_4484(%216, %217, %218) /* ty=(Tensor[(11, 9, 12), int64], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], Tensor[(2, 13, 12), bool]) */;
  %220 = %212.0;
  %221 = %219.0;
  (%220, %221, %var_9408, %var_9409, meta[relay.Constant][6] /* ty=Tensor[(1680), uint8] */)
}

def @func_2310() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %222 = @func_1023() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %223 = %222.1;
  %224 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  (%223, %224)
}

def @func_11751() -> (Tensor[(2, 13, 12), int32],) {
  %225 = @func_9730() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %226 = %225.0;
  (%226,)
}

def @func_10214() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) {
  %227 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %228 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
  (%227, %228)
}

def @func_11562() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %229 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %230 = @func_8680() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %231 = %229.1;
  %232 = %230.0;
  (%231, %232)
}

def @func_12032() -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), bool], Tensor[(840), uint8], Tensor[(48), float32]) {
  %233 = @func_5181() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
  %234 = cast(meta[relay.Constant][7] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %235 = cast(meta[relay.Constant][8] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %236 = reshape(%234, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
  %237 = reshape(%235, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %238 = @func_9277(%236, %237) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840, 1), uint8], Tensor[(48), float32]) */;
  %239 = %233.0;
  %240 = %238.0;
  (%239, %240, meta[relay.Constant][7] /* ty=Tensor[(840), uint8] */, meta[relay.Constant][8] /* ty=Tensor[(48), float32] */)
}

def @func_11929(%var_11914: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
  %241 = @func_6752() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %242 = cast(%var_11914, dtype="float32") /* ty=Tensor[(840), float32] */;
  %243 = reshape(%242, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %244 = @func_2844(%243) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %245 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
  %246 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %247 = %241.0;
  %248 = %244.2;
  %249 = %245.0;
  %250 = %246.0;
  (%247, %248, %var_11914, %249, %250)
}

def @func_5907() -> (Tensor[(2, 13, 12), int32], Tensor[(312), int32]) {
  %251 = @func_5657() /* ty=Tensor[(2, 13, 12), int32] */;
  %252 = cast(%251, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %253 = reshape(%252, newshape=[312]) /* ty=Tensor[(312), int32] */;
  %254 = @func_2805(%253) /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), bool], Tensor[(312), int32]) */;
  %255 = %254.2;
  (%251, %255)
}

def @func_273() -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
  %256 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %257 = cast(meta[relay.Constant][9] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %258 = reshape(%257, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
  %259 = %256.0;
  %260 = @func_77(%258) /* ty=Tensor[(12, 7, 10), float32] */;
  (%259, %260, meta[relay.Constant][9] /* ty=Tensor[(840), float32] */)
}

def @func_5335(%var_5304: Tensor[(12, 2, 2), float32]) -> (Tensor[(12, 2, 2), float32], Tensor[(2, 13, 12), int32]) {
  %261 = cast(%var_5304, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %262 = log10(%261) /* ty=Tensor[(12, 2, 2), float32] */;
  %263 = cast(%262, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %264 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %265 = log2(%263) /* ty=Tensor[(12, 2, 2), float32] */;
  %266 = %264.0;
  (%265, %266)
}

def @func_6269() -> Tensor[(2, 13, 12), int32] {
  %267 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %267.0
}

def @func_7658() -> (Tensor[(2, 13, 12), float32],) {
  %268 = @func_2487() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %269 = %268.0;
  (%269,)
}

def @func_7294() -> (Tensor[(2, 13, 12), int32], Tensor[(840), float64], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32]) {
  %270 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
  %271 = @func_3553() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %272 = %271.2;
  %273 = cast(%272, dtype="float64") /* ty=Tensor[(840), float64] */;
  %274 = @func_2693() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) */;
  %275 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %276 = %270.1;
  %277 = atanh(%273) /* ty=Tensor[(840), float64] */;
  %278 = %274.0;
  %279 = %275.0;
  (%276, %277, %278, %279)
}

def @func_11815(%var_11792: Tensor[(2, 14, 12), float64]) -> (Tensor[(2, 14, 12), float64], Tensor[(2, 13, 12), int32]) {
  %280 = cast(%var_11792, dtype="float64") /* ty=Tensor[(2, 14, 12), float64] */;
  %281 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %282 = erf(%280) /* ty=Tensor[(2, 14, 12), float64] */;
  %283 = %281.1;
  (%282, %283)
}

def @func_3653(%var_3648: Tensor[(3, 7, 11), int16]) -> Tensor[(3, 7, 11), int16] {
  %284 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 7, 11), int16] */, dtype="int16") /* ty=Tensor[(3, 7, 11), int16] */;
  %285 = shape_of(%var_3648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%var_3648, dtype="int16") /* ty=Tensor[(3, 7, 11), int16] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  subtract(%286, %287) /* ty=Tensor[(3, 7, 11), int16] */
}

def @func_3965() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) {
  %288 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
  %289 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
  %290 = cast(meta[relay.Constant][11] /* ty=Tensor[(420, 2), float32] */, dtype="float32") /* ty=Tensor[(420, 2), float32] */;
  %291 = reshape(%290, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %292 = @func_2844(%291) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %293 = %288.1;
  %294 = @func_2287() /* ty=Tensor[(2, 13, 12), float64] */;
  %295 = %289.1;
  %296 = %292.3;
  (%293, %294, %295, %296, meta[relay.Constant][11] /* ty=Tensor[(420, 2), float32] */)
}

def @func_1607(%var_1568: Tensor[(1, 840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %297 = cast(%var_1568, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
  %298 = reshape(%297, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %299 = @func_866(%298) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32]) */;
  %300 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
  %301 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %302 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  %303 = %299.2;
  %304 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %305 = %300.1;
  (%301, %302, %303, %var_1568, %304, %305)
}

def @func_5657() -> Tensor[(2, 13, 12), int32] {
  @func_4675() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_9129(%var_9074: Tensor[(1200), float64]) -> (Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64]) {
  %306 = @func_3801() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %307 = cast(%var_9074, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %308 = reshape(%307, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
  %309 = @func_1634(%308) /* ty=(Tensor[(15, 5, 16), float64],) */;
  %310 = cast(%var_9074, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %311 = reshape(%310, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
  %312 = @func_1634(%311) /* ty=(Tensor[(15, 5, 16), float64],) */;
  %313 = %306.3;
  %314 = %309.0;
  %315 = @func_5657() /* ty=Tensor[(2, 13, 12), int32] */;
  %316 = %312.0;
  (%313, %314, %var_9074, %315, %316)
}

def @func_13490() -> Tensor[(2, 13, 12), uint32] {
  %317 = @func_11221() /* ty=(Tensor[(2, 13, 12), uint32],) */;
  %317.0
}

def @func_2557(%var_2544: Tensor[(2, 420), float32], %var_2546: Tensor[(2, 420), float32]) -> (Tensor[(2, 13, 12), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 420), bool]) {
  %318 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %319 = cast(%var_2544, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
  %320 = reshape(%319, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
  %321 = cast(%var_2546, dtype="bool") /* ty=Tensor[(2, 420), bool] */;
  %322 = shape_of(%var_2544, dtype="int32") /* ty=Tensor[(2), int32] */;
  %323 = cast(%var_2544, dtype="bool") /* ty=Tensor[(2, 420), bool] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %325 = %318.1;
  %326 = @func_77(%320) /* ty=Tensor[(12, 7, 10), float32] */;
  %327 = less(%323, %324) /* ty=Tensor[(2, 420), bool] */;
  (%325, %326, %327)
}

def @func_4140(%var_4132: Tensor[(1, 3, 7), float64]) -> (Tensor[(1, 3, 7), float64],) {
  %328 = cast(%var_4132, dtype="float64") /* ty=Tensor[(1, 3, 7), float64] */;
  %329 = log10(%328) /* ty=Tensor[(1, 3, 7), float64] */;
  (%329,)
}

def @func_2887() -> (Tensor[(2, 13, 12), bool],) {
  %330 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
  %331 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 13, 12), int32] */, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = greater_equal(%333, %334) /* ty=Tensor[(2, 13, 12), bool] */;
  (%335,)
}

def @func_3388(%var_3339: Tensor[(6, 140), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(6, 140), float64], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) {
  %336 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %337 = %336.0;
  %338 = cast(%337, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %339 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 140), float32] */, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %340 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 140), float32] */, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %341 = reshape(%338, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %342 = reshape(%339, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %343 = reshape(%340, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %344 = @func_1208(%341, %342, %343) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %345 = cast(%var_3339, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %346 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(6, 140), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %347 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 140), float32] */, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %349 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
  %350 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %351 = cast(meta[relay.Constant][14] /* ty=Tensor[(1680), uint8] */, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %352 = cast(meta[relay.Constant][14] /* ty=Tensor[(1680), uint8] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %353 = reshape(%351, newshape=[1680]) /* ty=Tensor[(1680), uint8] */;
  %354 = reshape(%352, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), bool] */;
  %355 = @func_1466(%353, %354) /* ty=(Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8], Tensor[(8, 14, 15), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), uint8], Tensor[(8, 14, 15), bool]) */;
  %356 = %344.0;
  %357 = floor_divide(%347, %348) /* ty=Tensor[(6, 140), float64] */;
  %358 = %349.0;
  %359 = %350.5;
  %360 = %355.4;
  (%337, %356, %357, %358, %359, %360, meta[relay.Constant][14] /* ty=Tensor[(1680), uint8] */)
}

def @func_378() -> Tensor[(2, 13, 12), int32] {
  %361 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %361.0
}

def @func_3621(%var_3597: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) {
  %362 = @func_1915() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
  %363 = cast(%var_3597, dtype="float32") /* ty=Tensor[(840), float32] */;
  %364 = reshape(%363, newshape=[840, 1]) /* ty=Tensor[(840, 1), float32] */;
  %365 = @func_1340(%364) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) */;
  %366 = cast(meta[relay.Constant][15] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
  %367 = reshape(%366, newshape=[825]) /* ty=Tensor[(825), float32] */;
  %368 = @func_2407(%367) /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float32], Tensor[(2, 13, 12), int32]) */;
  %369 = %362.0;
  %370 = %365.0;
  %371 = %368.0;
  (%369, %370, %var_3597, %371, meta[relay.Constant][15] /* ty=Tensor[(825), float32] */)
}

def @func_12662() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32]) {
  %372 = @func_7261() /* ty=Tensor[(2, 13, 12), int32] */;
  %373 = cast(%372, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %374 = cast(meta[relay.Constant][16] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %375 = cast(meta[relay.Constant][16] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %376 = reshape(%373, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %377 = reshape(%374, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %378 = reshape(%375, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %379 = @func_1208(%376, %377, %378) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %380 = %379.1;
  (%372, %380, meta[relay.Constant][16] /* ty=Tensor[(840), float32] */)
}

def @func_6422() -> (Tensor[(2, 13, 12), int32],) {
  %381 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %382 = %381.1;
  (%382,)
}

def @func_6863(%var_6837: Tensor[(14, 9, 3), float64], %var_6838: Tensor[(14, 9, 3), float64]) -> (Tensor[(14, 9, 3), float32], Tensor[(2, 13, 12), float32]) {
  %383 = cast(%var_6838, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
  %384 = shape_of(%var_6837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%var_6837, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %387 = floor_mod(%385, %386) /* ty=Tensor[(14, 9, 3), float64] */;
  %388 = cast(%387, dtype="float32") /* ty=Tensor[(14, 9, 3), float32] */;
  %389 = @func_2487() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %390 = asin(%388) /* ty=Tensor[(14, 9, 3), float32] */;
  %391 = %389.0;
  (%390, %391)
}

def @func_9463() -> (Tensor[(2, 13, 12), int32],) {
  %392 = @func_4675() /* ty=Tensor[(2, 13, 12), int32] */;
  (%392,)
}

def @func_1170(%var_1128: Tensor[(15, 11, 5), float32]) -> (Tensor[(15, 11, 5), float64], Tensor[(15, 11, 5), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %393 = cast(meta[relay.Constant][17] /* ty=Tensor[(15, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 5), float32] */;
  %394 = atanh(%393) /* ty=Tensor[(15, 11, 5), float32] */;
  %395 = cast(%var_1128, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
  %396 = shape_of(%394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %397 = cast(%394, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
  %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %399 = power(%397, %398) /* ty=Tensor[(15, 11, 5), float64] */;
  %400 = cast(%399, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
  %401 = cast(meta[relay.Constant][17] /* ty=Tensor[(15, 11, 5), float32] */, dtype="bool") /* ty=Tensor[(15, 11, 5), bool] */;
  %402 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %403 = cast(%399, dtype="bool") /* ty=Tensor[(15, 11, 5), bool] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %405 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %406 = asinh(%400) /* ty=Tensor[(15, 11, 5), float64] */;
  %407 = logical_or(%403, %404) /* ty=Tensor[(15, 11, 5), bool] */;
  %408 = %405.0;
  %409 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %410 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  (%406, %407, %408, %409, %410)
}

def @func_10259() -> (Tensor[(2, 13, 12), int16], Tensor[(840), uint8]) {
  %411 = @func_6829() /* ty=(Tensor[(48), float32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), uint32]) */;
  %412 = @func_8680() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %413 = %411.1;
  %414 = %412.1;
  (%413, %414)
}

def @func_4638() -> (Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), float32], Tensor[(840), uint8]) {
  %415 = @func_3714() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %416 = @func_3714() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %417 = %415.0;
  %418 = %416.0;
  %419 = @func_2453() /* ty=Tensor[(840), uint8] */;
  (%417, %418, %419)
}

def @func_12384() -> (Tensor[(2, 13, 12), int32],) {
  %420 = @func_10899() /* ty=(Tensor[(11, 9, 5), uint16], Tensor[(840), uint8], Tensor[(11, 9, 5), float64], Tensor[(2, 13, 12), int32]) */;
  %421 = %420.3;
  (%421,)
}

def @func_4553() -> Tensor[(2, 13, 12), uint32] {
  %422 = @func_2693() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) */;
  %422.5
}

def @func_4103() -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
  %423 = cast(meta[relay.Constant][18] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %424 = reshape(%423, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
  %425 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  %426 = @func_77(%424) /* ty=Tensor[(12, 7, 10), float32] */;
  (%425, %426, meta[relay.Constant][18] /* ty=Tensor[(840), float32] */)
}

def @func_1519() -> (Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) {
  %427 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
  %428 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %429 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
  %430 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %431 = %427.0;
  %432 = %428.0;
  %433 = %429.1;
  %434 = %430.2;
  (%431, %432, %433, %434)
}

def @func_9141() -> Tensor[(2, 13, 12), bool] {
  @func_3250() /* ty=Tensor[(2, 13, 12), bool] */
}

def @func_4651() -> (Tensor[(2, 13, 12), int32],) {
  %435 = @func_2310() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %436 = %435.1;
  (%436,)
}

def @func_9299() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %437 = @func_2310() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %438 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %439 = %437.0;
  %440 = %438.0;
  (%439, %440)
}

def @func_5144(%var_5127: Tensor[(1680), uint8]) -> (Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8, Tensor[(1680), uint8], Tensor[(2, 13, 12), int32]) {
  %441 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
  %442 = cast(meta[relay.Constant][19] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %443 = cast(%var_5127, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %444 = reshape(%442, newshape=[]) /* ty=uint8 */;
  %445 = reshape(%443, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
  %446 = @func_695(%444, %445) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
  %447 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %448 = %441.1;
  %449 = %446.0;
  %450 = %447.0;
  (%448, %449, meta[relay.Constant][19] /* ty=uint8 */, %var_5127, %450)
}

def @func_5263(%var_5253: bool) -> (Tensor[(2, 13, 12), int32], Tensor[(1680), uint8], bool) {
  %451 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %452 = cast(%var_5253, dtype="bool") /* ty=bool */;
  %453 = reshape(%452, newshape=[]) /* ty=bool */;
  %454 = @func_1109(%453) /* ty=(Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
  %455 = %451.0;
  %456 = %454.2;
  (%455, %456, %var_5253)
}

def @func_13281() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16]) {
  %457 = @func_12745() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32]) */;
  %458 = %457.3;
  %459 = @func_12389() /* ty=Tensor[(2, 13, 12), int16] */;
  (%458, %459)
}

def @func_9606() -> (Tensor[(2, 13, 12), float32],) {
  %460 = @func_7658() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %461 = %460.0;
  (%461,)
}

def @func_351(%var_333: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) {
  %462 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %463 = %462.0;
  %464 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %465 = %464.0;
  %466 = cast(%465, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
  %467 = shape_of(%463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%463, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %470 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %471 = %470.2;
  %472 = cast(%var_333, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(1), int32] */;
  %474 = cast(%471, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %476 = logical_or(%468, %469) /* ty=Tensor[(2, 13, 12), bool] */;
  %477 = bitwise_or(%474, %475) /* ty=Tensor[(840), uint8] */;
  (%476, %477)
}

def @func_7949() -> Tensor[(2, 13, 12), int32] {
  %478 = @func_3553() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %478.0
}

def @func_1634(%var_1628: Tensor[(15, 5, 16), float64]) -> (Tensor[(15, 5, 16), float64],) {
  %479 = cast(%var_1628, dtype="float64") /* ty=Tensor[(15, 5, 16), float64] */;
  %480 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(15, 5, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 5, 16), float64] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %483 = divide(%481, %482) /* ty=Tensor[(15, 5, 16), float64] */;
  (%483,)
}

def @func_498() -> Tensor[(2, 13, 12), int32] {
  @func_378() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_8033(%var_8002: Tensor[(840), float32], %var_8003: Tensor[(825), float32]) -> (Tensor[(2, 13, 12), int16], Tensor[(840), float32], Tensor[(1170), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float64]) {
  %484 = @func_6455() /* ty=(Tensor[(2, 13, 12), int16],) */;
  %485 = cast(meta[relay.Constant][21] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %486 = cast(%var_8002, dtype="float32") /* ty=Tensor[(840), float32] */;
  %487 = cast(%var_8003, dtype="float32") /* ty=Tensor[(825), float32] */;
  %488 = reshape(%485, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int32] */;
  %489 = reshape(%486, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %490 = reshape(%487, newshape=[825]) /* ty=Tensor[(825), float32] */;
  %491 = @func_3206(%488, %489, %490) /* ty=(Tensor[(13, 9, 10), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], bool, Tensor[(300, 1), bool], Tensor[(840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(825), float32]) */;
  %492 = @func_4989() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %493 = cast(%var_8003, dtype="float32") /* ty=Tensor[(825), float32] */;
  %494 = cosh(%493) /* ty=Tensor[(825), float32] */;
  %495 = cast(%494, dtype="float64") /* ty=Tensor[(825), float64] */;
  %496 = %484.0;
  %497 = %491.5;
  %498 = %492.0;
  %499 = atan(%495) /* ty=Tensor[(825), float64] */;
  (%496, %497, meta[relay.Constant][21] /* ty=Tensor[(1170), int32] */, %var_8002, %498, %499)
}

def @func_10946() -> Tensor[(2, 13, 12), int32] {
  %500 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %500.0
}

def @func_8600() -> (Tensor[(2, 13, 12), int32],) {
  %501 = @func_3292() /* ty=Tensor[(2, 13, 12), int32] */;
  (%501,)
}

def @func_11669() -> (Tensor[(2, 13, 12), int32],) {
  %502 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  (%502,)
}

def @func_866(%var_850: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32]) {
  %503 = cast(%var_850, dtype="float32") /* ty=Tensor[(840), float32] */;
  %504 = reshape(%503, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %505 = @func_351(%504) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
  %506 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  %507 = %505.0;
  (%506, %507, %var_850)
}

def @func_4989() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
  %508 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %509 = @func_3292() /* ty=Tensor[(2, 13, 12), int32] */;
  %510 = %508.1;
  (%509, %510)
}

def @func_8304() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %511 = @func_3513() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %512 = @func_5181() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
  %513 = %511.0;
  %514 = %512.1;
  (%513, %514)
}

def @func_223() -> (Tensor[(2, 13, 12), int32],) {
  %515 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 13, 12), int32] */, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %516 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(2, 13, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 13, 12), int32] */, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %519 = multiply(%517, %518) /* ty=Tensor[(2, 13, 12), int32] */;
  (%519,)
}

def @func_11221() -> (Tensor[(2, 13, 12), uint32],) {
  %520 = @func_11179() /* ty=(Tensor[(2, 13, 12), uint32],) */;
  %521 = %520.0;
  (%521,)
}

def @func_12516() -> (Tensor[(2, 13, 12), int32],) {
  %522 = @func_9327() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %523 = %522.0;
  (%523,)
}

def @func_12889() -> (Tensor[(2, 13, 12), uint32],) {
  %524 = @func_12288() /* ty=Tensor[(2, 13, 12), uint32] */;
  (%524,)
}

def @func_2407(%var_2372: Tensor[(825), float32]) -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float32], Tensor[(2, 13, 12), int32]) {
  %525 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %526 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
  %527 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
  %528 = cast(%var_2372, dtype="float32") /* ty=Tensor[(825), float32] */;
  %529 = reshape(%528, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), float32] */;
  %530 = @func_1170(%529) /* ty=(Tensor[(15, 11, 5), float64], Tensor[(15, 11, 5), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %531 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %532 = %525.1;
  %533 = %526.1;
  %534 = %527.1;
  %535 = %530.3;
  %536 = %531.0;
  (%532, %533, %534, %535, %var_2372, %536)
}

def @func_476() -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %537 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %538 = cast(meta[relay.Constant][24] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %539 = reshape(%538, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
  %540 = cast(meta[relay.Constant][24] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %541 = reshape(%540, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %542 = @func_351(%541) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
  %543 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %544 = %537.0;
  %545 = @func_77(%539) /* ty=Tensor[(12, 7, 10), float32] */;
  %546 = %542.1;
  %547 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  %548 = %543.0;
  (%544, %545, meta[relay.Constant][24] /* ty=Tensor[(840), float32] */, %546, %547, %548)
}

def @func_2228() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
  %549 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %550 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
  %551 = %549.0;
  %552 = %550.2;
  (%551, %552)
}

def @func_3427(%var_3402: bool, %var_3404: Tensor[(840), float32]) -> (Tensor[(4, 13, 14), float32], Tensor[(3, 10, 10), int16], bool, Tensor[(300), bool], Tensor[(840), float32], Tensor[(840), uint64]) {
  %553 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 13, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %554 = cast(%var_3402, dtype="bool") /* ty=bool */;
  %555 = cast(meta[relay.Constant][26] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %556 = cast(%var_3404, dtype="float32") /* ty=Tensor[(840), float32] */;
  %557 = reshape(%554, newshape=[]) /* ty=bool */;
  %558 = reshape(%555, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), bool] */;
  %559 = reshape(%556, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
  %560 = @func_1858(%557, %558, %559) /* ty=(Tensor[(3, 10, 10), bool], Tensor[(3, 10, 10), int16], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32]) */;
  %561 = cast(%var_3404, dtype="float32") /* ty=Tensor[(840), float32] */;
  %562 = reshape(%561, newshape=[840, 1]) /* ty=Tensor[(840, 1), float32] */;
  %563 = @func_1340(%562) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) */;
  %564 = tan(%553) /* ty=Tensor[(4, 13, 14), float32] */;
  %565 = %560.1;
  %566 = %563.1;
  (%564, %565, %var_3402, meta[relay.Constant][26] /* ty=Tensor[(300), bool] */, %var_3404, %566)
}

def @func_10899() -> (Tensor[(11, 9, 5), uint16], Tensor[(840), uint8], Tensor[(11, 9, 5), float64], Tensor[(2, 13, 12), int32]) {
  %567 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="uint16") /* ty=Tensor[(11, 9, 5), uint16] */;
  %568 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="uint16") /* ty=Tensor[(11, 9, 5), uint16] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %571 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="float64") /* ty=Tensor[(11, 9, 5), float64] */;
  %572 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="float64") /* ty=Tensor[(11, 9, 5), float64] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %575 = @func_2453() /* ty=Tensor[(840), uint8] */;
  %576 = cast(%575, dtype="float32") /* ty=Tensor[(840), float32] */;
  %577 = reshape(%576, newshape=[840, 1]) /* ty=Tensor[(840, 1), float32] */;
  %578 = @func_1340(%577) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) */;
  %579 = minimum(%569, %570) /* ty=Tensor[(11, 9, 5), uint16] */;
  %580 = floor_divide(%573, %574) /* ty=Tensor[(11, 9, 5), float64] */;
  %581 = %578.0;
  (%579, %575, %580, %581)
}

def @func_3457() -> (Tensor[(840), float32],) {
  %582 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %583 = %582.2;
  (%583,)
}

def @func_2182() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) {
  %584 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %585 = %584.0;
  %586 = cast(%585, dtype="float64") /* ty=Tensor[(2, 13, 12), float64] */;
  %587 = rsqrt(%586) /* ty=Tensor[(2, 13, 12), float64] */;
  %588 = cast(%585, dtype="uint32") /* ty=Tensor[(2, 13, 12), uint32] */;
  %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%587, dtype="uint32") /* ty=Tensor[(2, 13, 12), uint32] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %592 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  %593 = bitwise_or(%590, %591) /* ty=Tensor[(2, 13, 12), uint32] */;
  (%592, %593)
}

def @func_5627() -> (Tensor[(2, 13, 12), int32], Tensor[(840), float32]) {
  %594 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %595 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %596 = %594.0;
  %597 = %595.2;
  (%596, %597)
}

def @func_8764(%var_8740: Tensor[(4, 10, 11), float64], %var_8753: Tensor[(528), float64]) -> (Tensor[(4, 10, 11), float64], Tensor[(16, 3, 11), bool], Tensor[(528), float64], Tensor[(2, 13, 12), int32]) {
  %598 = cast(%var_8740, dtype="float64") /* ty=Tensor[(4, 10, 11), float64] */;
  %599 = cast(%var_8753, dtype="float64") /* ty=Tensor[(528), float64] */;
  %600 = cast(%var_8753, dtype="float64") /* ty=Tensor[(528), float64] */;
  %601 = reshape(%599, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float64] */;
  %602 = reshape(%600, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float64] */;
  %603 = @func_7502(%601, %602) /* ty=(Tensor[(16, 3, 11), bool], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %604 = @func_1915() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
  %605 = acos(%598) /* ty=Tensor[(4, 10, 11), float64] */;
  %606 = %603.0;
  %607 = %604.0;
  (%605, %606, %var_8753, %607)
}

def @func_7261() -> Tensor[(2, 13, 12), int32] {
  @func_598() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_12558() -> (Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %608 = @func_7249() /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %609 = cast(meta[relay.Constant][29] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %610 = reshape(%609, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
  %611 = @func_1634(%610) /* ty=(Tensor[(15, 5, 16), float64],) */;
  %612 = @func_4651() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %613 = @func_4989() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %614 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %615 = %608.2;
  %616 = %611.0;
  %617 = %612.0;
  %618 = %613.0;
  %619 = %614.1;
  (%615, %616, meta[relay.Constant][29] /* ty=Tensor[(1200), float64] */, %617, %618, %619)
}

def @func_651() -> Tensor[(2, 13, 12), int32] {
  @func_498() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_5357() -> Tensor[(2, 13, 12), uint32] {
  %620 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %620.0
}

def @func_2453() -> Tensor[(840), uint8] {
  %621 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %621.2
}

def @func_5087() -> (Tensor[(2, 13, 12), int32],) {
  %622 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
  (%622,)
}

def @func_3513() -> (Tensor[(2, 13, 12), int32],) {
  %623 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %624 = %623.1;
  (%624,)
}

def @func_10682() -> (Tensor[(2, 13, 12), int32],) {
  %625 = @func_3553() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %626 = %625.1;
  (%626,)
}

def @func_7937() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %627 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %628 = %627.0;
  %629 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  (%628, %629)
}

def @func_7502(%var_7488: Tensor[(16, 3, 11), float64], %var_7489: Tensor[(16, 3, 11), float64]) -> (Tensor[(16, 3, 11), bool], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
  %630 = cast(%var_7489, dtype="bool") /* ty=Tensor[(16, 3, 11), bool] */;
  %631 = shape_of(%var_7488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%var_7488, dtype="bool") /* ty=Tensor[(16, 3, 11), bool] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %634 = cast(meta[relay.Constant][30] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %635 = reshape(%634, newshape=[6, 140]) /* ty=Tensor[(6, 140), float32] */;
  %636 = @func_3388(%635) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(6, 140), float64], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
  %637 = equal(%632, %633) /* ty=Tensor[(16, 3, 11), bool] */;
  %638 = %636.3;
  (%637, %638, meta[relay.Constant][30] /* ty=Tensor[(840), float32] */)
}

def @func_9546() -> (Tensor[(2, 13, 12), float32],) {
  %639 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
  %640 = %639.1;
  (%640,)
}

def @func_2805(%var_2797: Tensor[(312), int32]) -> (Tensor[(840), uint8], Tensor[(2, 13, 12), bool], Tensor[(312), int32]) {
  %641 = cast(%var_2797, dtype="int32") /* ty=Tensor[(312), int32] */;
  %642 = @func_2453() /* ty=Tensor[(840), uint8] */;
  %643 = cast(%642, dtype="float32") /* ty=Tensor[(840), float32] */;
  %644 = cast(%642, dtype="float32") /* ty=Tensor[(840), float32] */;
  %645 = reshape(%641, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %646 = reshape(%643, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %647 = reshape(%644, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %648 = @func_1208(%645, %646, %647) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %649 = %648.0;
  (%642, %649, %var_2797)
}

def @func_12389() -> Tensor[(2, 13, 12), int16] {
  %650 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
  %650.0
}

def @func_1036() -> (Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) {
  %651 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %652 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %653 = %651.1;
  %654 = %652.0;
  (%653, %654)
}

def @func_2844(%var_2822: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
  %655 = cast(%var_2822, dtype="float32") /* ty=Tensor[(840), float32] */;
  %656 = reshape(%655, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
  %657 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %658 = @func_2746() /* ty=Tensor[(2, 13, 12), int32] */;
  %659 = @func_77(%656) /* ty=Tensor[(12, 7, 10), float32] */;
  (%657, %658, %659, %var_2822)
}

def @func_1257() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) {
  %660 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %661 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %662 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %663 = %660.0;
  %664 = %661.3;
  (%662, %663, %664)
}

def @func_10724(%var_10684: Tensor[(14, 2, 1), float64]) -> (Tensor[(14, 2, ?), int64], Tensor[(14, 2, ?), int32]) {
  %665 = cast(%var_10684, dtype="float64") /* ty=Tensor[(14, 2, 1), float64] */;
  %666 = acosh(%665) /* ty=Tensor[(14, 2, 1), float64] */;
  %667 = cast(%666, dtype="float64") /* ty=Tensor[(14, 2, 1), float64] */;
  %668 = sigmoid(%667) /* ty=Tensor[(14, 2, 1), float64] */;
  %669 = cast(%666, dtype="float32") /* ty=Tensor[(14, 2, 1), float32] */;
  %670 = cosh(%669) /* ty=Tensor[(14, 2, 1), float32] */;
  %671 = cast(%670, dtype="int64") /* ty=Tensor[(14, 2, 1), int64] */;
  %672 = shape_of(%668, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%668, dtype="int64") /* ty=Tensor[(14, 2, 1), int64] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %675 = cast(%var_10684, dtype="int32") /* ty=Tensor[(14, 2, 1), int32] */;
  %676 = shape_of(%666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%666, dtype="int32") /* ty=Tensor[(14, 2, 1), int32] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %679 = bitwise_or(%673, %674) /* ty=Tensor[(14, 2, ?), int64] */;
  %680 = left_shift(%677, %678) /* ty=Tensor[(14, 2, ?), int32] */;
  (%679, %680)
}

def @func_897() -> (Tensor[(2, 13, 12), int32],) {
  %681 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %682 = %681.0;
  (%682,)
}

def @func_6783() -> (Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) {
  %683 = @func_4638() /* ty=(Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), float32], Tensor[(840), uint8]) */;
  %684 = %683.2;
  %685 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  (%684, %685)
}

def @func_3250() -> Tensor[(2, 13, 12), bool] {
  %686 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
  %686.0
}

def @func_695(%var_682: uint8, %var_683: Tensor[(8, 14, 15), uint8]) -> (Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) {
  %687 = cast(%var_682, dtype="bool") /* ty=bool */;
  %688 = cast(%var_683, dtype="bool") /* ty=Tensor[(8, 14, 15), bool] */;
  %689 = less(%687, %688) /* ty=Tensor[(8, 14, 15), bool] */;
  %690 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
  (%689, %690)
}

def @func_9871() -> (Tensor[(2, 13, 12), int32],) {
  %691 = @func_8475() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
  %692 = %691.0;
  (%692,)
}

def @func_8245(%var_8206: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) {
  %693 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
  %694 = cast(%693, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %695 = cast(%var_8206, dtype="float32") /* ty=Tensor[(840), float32] */;
  %696 = cast(%var_8206, dtype="float32") /* ty=Tensor[(840), float32] */;
  %697 = reshape(%694, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %698 = reshape(%695, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %699 = reshape(%696, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %700 = @func_1208(%697, %698, %699) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %701 = @func_4638() /* ty=(Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), float32], Tensor[(840), uint8]) */;
  %702 = cast(%var_8206, dtype="float32") /* ty=Tensor[(840), float32] */;
  %703 = %700.0;
  %704 = %701.1;
  %705 = cos(%702) /* ty=Tensor[(840), float32] */;
  (%693, %703, %704, %705)
}

def @func_6968() -> (Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) {
  %706 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %707 = @func_6783() /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) */;
  %708 = %706.0;
  %709 = %707.0;
  (%708, %709)
}

def @func_12264(%var_12253: Tensor[(9, 6, 11), int8], %var_12254: Tensor[(9, 6, 11), int8], %var_12261: Tensor[(312), int32]) -> (Tensor[(9, 6, 11), int8], Tensor[(2, 13, 12), int32], Tensor[(312), int32], Tensor[(840), float32]) {
  %710 = cast(%var_12254, dtype="int8") /* ty=Tensor[(9, 6, 11), int8] */;
  %711 = shape_of(%var_12253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%var_12253, dtype="int8") /* ty=Tensor[(9, 6, 11), int8] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %714 = cast(%var_12261, dtype="int32") /* ty=Tensor[(312), int32] */;
  %715 = cast(meta[relay.Constant][31] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %716 = cast(meta[relay.Constant][31] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %717 = reshape(%714, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %718 = reshape(%715, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %719 = reshape(%716, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %720 = @func_1208(%717, %718, %719) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %721 = left_shift(%712, %713) /* ty=Tensor[(9, 6, 11), int8] */;
  %722 = %720.1;
  (%721, %722, %var_12261, meta[relay.Constant][31] /* ty=Tensor[(840), float32] */)
}

def @func_12847(%var_12835: Tensor[(13, 11, 15), float64], %var_12836: Tensor[(13, 11, 15), float64]) -> (Tensor[(13, 11, 15), float64], Tensor[(2, 13, 12), int32]) {
  %723 = cast(%var_12836, dtype="float64") /* ty=Tensor[(13, 11, 15), float64] */;
  %724 = shape_of(%var_12835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%var_12835, dtype="float64") /* ty=Tensor[(13, 11, 15), float64] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %727 = floor_mod(%725, %726) /* ty=Tensor[(13, 11, 15), float64] */;
  %728 = cast(%727, dtype="float64") /* ty=Tensor[(13, 11, 15), float64] */;
  %729 = @func_10682() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %730 = log10(%728) /* ty=Tensor[(13, 11, 15), float64] */;
  %731 = %729.0;
  (%730, %731)
}

def @func_6938() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) {
  %732 = @func_3801() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %733 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %734 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %735 = %732.2;
  %736 = cast(%735, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %737 = reshape(%736, newshape=[312]) /* ty=Tensor[(312), int32] */;
  %738 = @func_2805(%737) /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), bool], Tensor[(312), int32]) */;
  %739 = %733.0;
  %740 = %734.0;
  %741 = %738.1;
  (%735, %739, %740, %741)
}

def @func_7449() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %742 = @func_7061() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int16]) */;
  %743 = @func_7249() /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %744 = @func_5087() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %745 = %742.0;
  %746 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %747 = %743.3;
  %748 = %744.0;
  (%745, %746, %747, %748)
}

def @func_8809() -> (Tensor[(840), float32], Tensor[(840), uint8]) {
  %749 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %750 = @func_8152() /* ty=Tensor[(840), float32] */;
  %751 = %749.3;
  (%750, %751)
}

def @func_7625() -> Tensor[(2, 13, 12), int32] {
  %752 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %752.0
}

def @func_8122(%var_8112: Tensor[(2, 13, 12), int32]) -> (Tensor[(840), uint8], Tensor[(2, 13, 12), uint16]) {
  %753 = @func_6968() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %754 = @func_2310() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %755 = %754.1;
  %756 = cast(%var_8112, dtype="uint16") /* ty=Tensor[(2, 13, 12), uint16] */;
  %757 = shape_of(%755, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%755, dtype="uint16") /* ty=Tensor[(2, 13, 12), uint16] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %760 = %753.1;
  %761 = bitwise_xor(%758, %759) /* ty=Tensor[(2, 13, 12), uint16] */;
  (%760, %761)
}

def @func_10928() -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], bool) {
  %762 = @func_5181() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
  %763 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %764 = reshape(%763, newshape=[]) /* ty=bool */;
  %765 = @func_1109(%764) /* ty=(Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
  %766 = %762.0;
  %767 = %765.1;
  (%766, %767, True /* ty=bool */)
}

def @func_12326() -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), float32]) {
  %768 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %769 = @func_3441() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %770 = %768.0;
  %771 = %769.0;
  (%770, %771)
}

def @func_8475() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) {
  %772 = @func_3513() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %773 = cast(meta[relay.Constant][32] /* ty=Tensor[(1680), uint8] */, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %774 = cast(meta[relay.Constant][32] /* ty=Tensor[(1680), uint8] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %775 = reshape(%773, newshape=[1680]) /* ty=Tensor[(1680), uint8] */;
  %776 = reshape(%774, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), bool] */;
  %777 = @func_1466(%775, %776) /* ty=(Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8], Tensor[(8, 14, 15), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), uint8], Tensor[(8, 14, 15), bool]) */;
  %778 = %772.0;
  %779 = %777.0;
  (%778, %779, meta[relay.Constant][32] /* ty=Tensor[(1680), uint8] */)
}

def @func_12445() -> (Tensor[(2, 13, 12), int32],) {
  %780 = @func_4103() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %781 = %780.0;
  (%781,)
}

def @func_1828(%var_1711: Tensor[(2, 1, 5), float64], %var_1746: Tensor[(60, 14), float32]) -> (Tensor[(15, 11, 5), bool], Tensor[(825), float32], Tensor[(2, 13, 12), int32], Tensor[(60, 14), float32], Tensor[(840), uint8], Tensor[(2, ?, 5), int32], Tensor[(2, 13, 12), int32], Tensor[(2, ?, 5), float32]) {
  %782 = cast(meta[relay.Constant][33] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
  %783 = reshape(%782, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), float32] */;
  %784 = @func_1170(%783) /* ty=(Tensor[(15, 11, 5), float64], Tensor[(15, 11, 5), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %785 = cast(%var_1746, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
  %786 = reshape(%785, newshape=[1, 840]) /* ty=Tensor[(1, 840), float32] */;
  %787 = @func_1607(%786) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %788 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %789 = cast(%var_1711, dtype="float64") /* ty=Tensor[(2, 1, 5), float64] */;
  %790 = sin(%789) /* ty=Tensor[(2, 1, 5), float64] */;
  %791 = cast(%790, dtype="float32") /* ty=Tensor[(2, 1, 5), float32] */;
  %792 = shape_of(%var_1711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %793 = cast(%var_1711, dtype="float32") /* ty=Tensor[(2, 1, 5), float32] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %795 = divide(%793, %794) /* ty=Tensor[(2, ?, 5), float32] */;
  %796 = cast(%795, dtype="int16") /* ty=Tensor[(2, ?, 5), int16] */;
  %797 = shape_of(%790, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%790, dtype="int16") /* ty=Tensor[(2, 1, 5), int16] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %800 = maximum(%798, %799) /* ty=Tensor[(2, ?, 5), int16] */;
  %801 = cast(%790, dtype="int32") /* ty=Tensor[(2, 1, 5), int32] */;
  %802 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%800, dtype="int32") /* ty=Tensor[(2, ?, 5), int32] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %805 = %787.5;
  %806 = cast(%805, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %807 = %788.3;
  %808 = cast(%807, dtype="float32") /* ty=Tensor[(840), float32] */;
  %809 = cast(%807, dtype="float32") /* ty=Tensor[(840), float32] */;
  %810 = reshape(%806, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %811 = reshape(%808, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %812 = reshape(%809, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %813 = @func_1208(%810, %811, %812) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %814 = cast(%795, dtype="float32") /* ty=Tensor[(2, ?, 5), float32] */;
  %815 = sqrt(%814) /* ty=Tensor[(2, ?, 5), float32] */;
  %816 = cast(%815, dtype="float32") /* ty=Tensor[(2, ?, 5), float32] */;
  %817 = %784.1;
  %818 = right_shift(%803, %804) /* ty=Tensor[(2, ?, 5), int32] */;
  %819 = %813.1;
  %820 = log10(%816) /* ty=Tensor[(2, ?, 5), float32] */;
  (%817, meta[relay.Constant][33] /* ty=Tensor[(825), float32] */, %805, %var_1746, %807, %818, %819, %820)
}

def @func_13311() -> (Tensor[(2, 13, 12), uint32],) {
  %821 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %822 = %821.1;
  (%822,)
}

def @func_12808() -> (Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32], Tensor[(8), float64]) {
  %823 = @func_9871() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %824 = @func_10928() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], bool) */;
  %825 = @func_2453() /* ty=Tensor[(840), uint8] */;
  %826 = cast(%825, dtype="float32") /* ty=Tensor[(840), float32] */;
  %827 = cast(meta[relay.Constant][34] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %828 = reshape(%826, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %829 = reshape(%827, newshape=[8]) /* ty=Tensor[(8), float64] */;
  %830 = @func_4305(%828, %829) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(840), float32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), uint32], Tensor[(2, 420), float32], Tensor[(8), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
  %831 = %823.0;
  %832 = %824.0;
  %833 = %830.2;
  (%825, %831, %832, %833, meta[relay.Constant][34] /* ty=Tensor[(8), float64] */)
}

def @func_6234() -> (Tensor[(2, 13, 12), int32],) {
  %834 = @func_4651() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %835 = %834.0;
  (%835,)
}

def @func_6829() -> (Tensor[(48), float32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), uint32]) {
  %836 = @func_6562() /* ty=(Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), float32], Tensor[(48), float32], Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), int32]) */;
  %837 = @func_6455() /* ty=(Tensor[(2, 13, 12), int16],) */;
  %838 = %836.2;
  %839 = %837.0;
  %840 = @func_5357() /* ty=Tensor[(2, 13, 12), uint32] */;
  (%838, %839, %840)
}

def @func_10645(%var_10610: uint64, %var_10630: Tensor[(3, 16, 16), uint64]) -> (Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), int64]) {
  %841 = cast(%var_10610, dtype="uint64") /* ty=uint64 */;
  %842 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 16, 16), uint64] */, dtype="uint64") /* ty=Tensor[(3, 16, 16), uint64] */;
  %843 = maximum(%841, %842) /* ty=Tensor[(3, 16, 16), uint64] */;
  %844 = cast(%843, dtype="bool") /* ty=Tensor[(3, 16, 16), bool] */;
  %845 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(3, 16, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %846 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 16, 16), uint64] */, dtype="bool") /* ty=Tensor[(3, 16, 16), bool] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %848 = cast(%var_10630, dtype="int64") /* ty=Tensor[(3, 16, 16), int64] */;
  %849 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(3, 16, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 16, 16), uint64] */, dtype="int64") /* ty=Tensor[(3, 16, 16), int64] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %852 = equal(%846, %847) /* ty=Tensor[(3, 16, 16), bool] */;
  %853 = add(%850, %851) /* ty=Tensor[(3, 16, 16), int64] */;
  (%852, %853)
}

def @func_9908() -> (Tensor[(12, 7, 10), float32],) {
  %854 = @func_1915() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
  %855 = %854.1;
  (%855,)
}

def @func_5833(%var_5747: Tensor[(840), uint8], %var_5825: Tensor[(48), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(840), int8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32]) {
  %856 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
  %857 = %856.0;
  %858 = cast(%857, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %859 = reshape(%858, newshape=[312]) /* ty=Tensor[(312), int32] */;
  %860 = @func_2805(%859) /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), bool], Tensor[(312), int32]) */;
  %861 = %860.0;
  %862 = cast(%var_5747, dtype="int8") /* ty=Tensor[(840), int8] */;
  %863 = shape_of(%861, dtype="int32") /* ty=Tensor[(1), int32] */;
  %864 = cast(%861, dtype="int8") /* ty=Tensor[(840), int8] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?), int8] */;
  %866 = @func_3714() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %867 = cast(%var_5825, dtype="float32") /* ty=Tensor[(48), float32] */;
  %868 = reshape(%867, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float32] */;
  %869 = @func_5335(%868) /* ty=(Tensor[(12, 2, 2), float32], Tensor[(2, 13, 12), int32]) */;
  %870 = bitwise_and(%864, %865) /* ty=Tensor[(840), int8] */;
  %871 = @func_1656() /* ty=Tensor[(2, 13, 12), int32] */;
  %872 = @func_1656() /* ty=Tensor[(2, 13, 12), int32] */;
  %873 = %866.0;
  %874 = %869.0;
  (%857, %870, %871, %872, %873, %874, %var_5825)
}

def @func_6455() -> (Tensor[(2, 13, 12), int16],) {
  %875 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
  %876 = %875.0;
  (%876,)
}

def @func_9327() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %877 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %878 = @func_7949() /* ty=Tensor[(2, 13, 12), int32] */;
  %879 = %877.0;
  (%878, %879)
}

def @func_5573(%var_5512: Tensor[(2, 13, 3), float64], %var_5513: Tensor[(2, 13, 3), float64], %var_5540: Tensor[(840), float32]) -> (Tensor[(825), float32], Tensor[(10), float64], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 3), uint8], Tensor[(2, 13, 12), int32]) {
  %880 = cast(meta[relay.Constant][36] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %881 = cast(%var_5540, dtype="float32") /* ty=Tensor[(840), float32] */;
  %882 = reshape(%880, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %883 = reshape(%881, newshape=[60, 14]) /* ty=Tensor[(60, 14), float32] */;
  %884 = @func_1828(%882, %883) /* ty=(Tensor[(15, 11, 5), bool], Tensor[(825), float32], Tensor[(2, 13, 12), int32], Tensor[(60, 14), float32], Tensor[(840), uint8], Tensor[(2, ?, 5), int32], Tensor[(2, 13, 12), int32], Tensor[(2, ?, 5), float32]) */;
  %885 = cast(%var_5513, dtype="float64") /* ty=Tensor[(2, 13, 3), float64] */;
  %886 = shape_of(%var_5512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%var_5512, dtype="float64") /* ty=Tensor[(2, 13, 3), float64] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %889 = power(%887, %888) /* ty=Tensor[(2, 13, 3), float64] */;
  %890 = cast(%var_5512, dtype="uint8") /* ty=Tensor[(2, 13, 3), uint8] */;
  %891 = shape_of(%889, dtype="int32") /* ty=Tensor[(3), int32] */;
  %892 = cast(%889, dtype="uint8") /* ty=Tensor[(2, 13, 3), uint8] */;
  %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %894 = @func_3965() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) */;
  %895 = %884.1;
  %896 = @func_4553() /* ty=Tensor[(2, 13, 12), uint32] */;
  %897 = logical_xor(%892, %893) /* ty=Tensor[(2, 13, 3), uint8] */;
  %898 = %894.2;
  (%895, meta[relay.Constant][36] /* ty=Tensor[(10), float64] */, %var_5540, %896, %897, %898)
}

def @func_9277(%var_9273: Tensor[(840, 1), uint8], %var_9274: Tensor[(48), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840, 1), uint8], Tensor[(48), float32]) {
  %899 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
  %900 = cast(%var_9273, dtype="uint8") /* ty=Tensor[(840, 1), uint8] */;
  %901 = cast(%var_9274, dtype="float32") /* ty=Tensor[(48), float32] */;
  %902 = reshape(%900, newshape=[840]) /* ty=Tensor[(840), uint8] */;
  %903 = reshape(%901, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %904 = @func_5833(%902, %903) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), int8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32]) */;
  %905 = %899.0;
  %906 = %904.2;
  (%905, %906, %var_9273, %var_9274)
}

def @func_13322() -> Tensor[(2, 13, 12), int32] {
  @func_10946() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_10112() -> Tensor[(12, 2, 2), float64] {
  %907 = @func_9358() /* ty=(Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), uint32]) */;
  %908 = %907.0;
  %909 = cast(%908, dtype="float64") /* ty=Tensor[(12, 2, 2), float64] */;
  acosh(%909) /* ty=Tensor[(12, 2, 2), float64] */
}

def @func_1023() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %910 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
  %911 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  (%910, %911)
}

def @func_10762() -> (Tensor[(2, 13, 12), int32],) {
  %912 = @func_7249() /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %913 = %912.2;
  (%913,)
}

def @func_5284() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %914 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %915 = @func_4179() /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
  %916 = %914.0;
  %917 = %915.3;
  (%916, %917)
}

def @func_7777(%var_7757: Tensor[(840, 1), float32]) -> (Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(840, 1), float32]) {
  %918 = @func_6562() /* ty=(Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), float32], Tensor[(48), float32], Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), int32]) */;
  %919 = cast(%var_7757, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
  %920 = reshape(%919, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %921 = @func_351(%920) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
  %922 = %918.0;
  %923 = @func_5357() /* ty=Tensor[(2, 13, 12), uint32] */;
  %924 = %921.0;
  (%922, %923, %924, %var_7757)
}

def @func_6562() -> (Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), float32], Tensor[(48), float32], Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), int32]) {
  %925 = @func_3714() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %926 = cast(meta[relay.Constant][37] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %927 = reshape(%926, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float32] */;
  %928 = @func_5335(%927) /* ty=(Tensor[(12, 2, 2), float32], Tensor[(2, 13, 12), int32]) */;
  %929 = %928.0;
  %930 = cast(%929, dtype="float64") /* ty=Tensor[(12, 2, 2), float64] */;
  %931 = @func_2287() /* ty=Tensor[(2, 13, 12), float64] */;
  %932 = %925.0;
  %933 = asin(%930) /* ty=Tensor[(12, 2, 2), float64] */;
  %934 = @func_4675() /* ty=Tensor[(2, 13, 12), int32] */;
  (%931, %932, meta[relay.Constant][37] /* ty=Tensor[(48), float32] */, %933, %934)
}

def @func_598() -> Tensor[(2, 13, 12), int32] {
  @func_378() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_8976(%var_8882: Tensor[(182, 4), float32], %var_8898: Tensor[(10), float64], %var_8904: Tensor[(12, 70), float32]) -> (Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 2, 2), float32], Tensor[(8), float64], Tensor[(15, 11, 5), bool], Tensor[(10), float64], Tensor[(12, 70), float64], Tensor[(2, 13, 12), int32], Tensor[(16, 13, 13), float32], Tensor[(2704, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(182, 4), float64]) {
  %935 = @func_7061() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int16]) */;
  %936 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %937 = cast(%var_8882, dtype="float32") /* ty=Tensor[(182, 4), float32] */;
  %938 = cast(%var_8882, dtype="float32") /* ty=Tensor[(182, 4), float32] */;
  %939 = cast(meta[relay.Constant][38] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %940 = reshape(%937, newshape=[7, 13, 8]) /* ty=Tensor[(7, 13, 8), float32] */;
  %941 = reshape(%938, newshape=[7, 13, 8]) /* ty=Tensor[(7, 13, 8), float32] */;
  %942 = reshape(%939, newshape=[2, 4]) /* ty=Tensor[(2, 4), float64] */;
  %943 = @func_7891(%940, %941, %942) /* ty=(Tensor[(7, 13, 8), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 4), float64]) */;
  %944 = cast(%var_8898, dtype="float64") /* ty=Tensor[(10), float64] */;
  %945 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 70), float32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %946 = reshape(%944, newshape=[10]) /* ty=Tensor[(10), float64] */;
  %947 = reshape(%945, newshape=[60, 14]) /* ty=Tensor[(60, 14), float32] */;
  %948 = @func_7859(%946, %947) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(15, 11, 5), bool], Tensor[(10), float64], Tensor[(60, 14), float32]) */;
  %949 = cast(%var_8904, dtype="float64") /* ty=Tensor[(12, 70), float64] */;
  %950 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(12, 70), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %951 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 70), float32] */, dtype="float64") /* ty=Tensor[(12, 70), float64] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %953 = @func_5907() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(312), int32]) */;
  %954 = cast(meta[relay.Constant][40] /* ty=Tensor[(2704, 1), float32] */, dtype="float32") /* ty=Tensor[(2704, 1), float32] */;
  %955 = reshape(%954, newshape=[16, 13, 13]) /* ty=Tensor[(16, 13, 13), float32] */;
  %956 = @func_7176() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %957 = cast(%var_8882, dtype="float64") /* ty=Tensor[(182, 4), float64] */;
  %958 = %935.1;
  %959 = %936.0;
  %960 = %943.1;
  %961 = %948.2;
  %962 = multiply(%951, %952) /* ty=Tensor[(12, 70), float64] */;
  %963 = %953.0;
  %964 = @func_6370(%955) /* ty=Tensor[(16, 13, 13), float32] */;
  %965 = %956.1;
  %966 = sinh(%957) /* ty=Tensor[(182, 4), float64] */;
  (%958, %959, %960, meta[relay.Constant][38] /* ty=Tensor[(8), float64] */, %961, %var_8898, %962, %963, %964, meta[relay.Constant][40] /* ty=Tensor[(2704, 1), float32] */, %965, %966)
}

def @func_12507(%var_12498: Tensor[(594, 1), int8]) -> (Tensor[(2, 13, 12), int32], Tensor[(312), int32], Tensor[(594, 1), int8], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32]) {
  %967 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %968 = cast(%var_12498, dtype="int8") /* ty=Tensor[(594, 1), int8] */;
  %969 = cast(%var_12498, dtype="int8") /* ty=Tensor[(594, 1), int8] */;
  %970 = %967.0;
  %971 = cast(%970, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %972 = reshape(%968, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), int8] */;
  %973 = reshape(%969, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), int8] */;
  %974 = reshape(%971, newshape=[312]) /* ty=Tensor[(312), int32] */;
  %975 = @func_12264(%972, %973, %974) /* ty=(Tensor[(9, 6, 11), int8], Tensor[(2, 13, 12), int32], Tensor[(312), int32], Tensor[(840), float32]) */;
  %976 = @func_9546() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %977 = @func_7294() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), float64], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32]) */;
  %978 = %975.2;
  %979 = %976.0;
  %980 = %977.3;
  (%970, %978, %var_12498, %979, %980)
}

def @func_3441() -> (Tensor[(2, 13, 12), float32],) {
  %981 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
  %982 = %981.1;
  (%982,)
}

def @func_1915() -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) {
  %983 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
  %984 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %985 = %983.0;
  (%984, %985)
}

def @func_2614() -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %986 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %987 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 70), float32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %988 = reshape(%987, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %989 = @func_351(%988) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
  %990 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %991 = %986.1;
  %992 = %989.0;
  %993 = %990.4;
  %994 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  (%991, %992, meta[relay.Constant][41] /* ty=Tensor[(12, 70), float32] */, %993, %994)
}

def @func_6752() -> (Tensor[(2, 13, 12), int32],) {
  %995 = @func_3965() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) */;
  %996 = %995.0;
  (%996,)
}

def @func_4484(%var_4413: int64, %var_4414: Tensor[(11, 9, 12), int64], %var_4434: Tensor[(1, 1680), uint8]) -> (Tensor[(11, 9, 12), int64], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], Tensor[(2, 13, 12), bool]) {
  %997 = cast(%var_4413, dtype="int64") /* ty=int64 */;
  %998 = cast(%var_4414, dtype="int64") /* ty=Tensor[(11, 9, 12), int64] */;
  %999 = cast(%var_4434, dtype="uint8") /* ty=Tensor[(1, 1680), uint8] */;
  %1000 = reshape(%999, newshape=[1680]) /* ty=Tensor[(1680), uint8] */;
  %1001 = @func_3842(%1000) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8]) */;
  %1002 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
  %1003 = bitwise_xor(%997, %998) /* ty=Tensor[(11, 9, 12), int64] */;
  %1004 = %1001.0;
  %1005 = %1002.0;
  (%1003, %1004, %var_4434, %1005)
}

def @func_9848() -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) {
  %1006 = @func_2487() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %1007 = @func_6783() /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) */;
  %1008 = @func_6938() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) */;
  %1009 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
  %1010 = %1006.0;
  %1011 = %1007.0;
  %1012 = %1008.1;
  (%1009, %1010, %1011, %1012)
}

def @func_10036(%var_10027: Tensor[(12, 11, 15), float32]) -> (Tensor[(12, 11, 15), float32], Tensor[(2, 13, 12), int32]) {
  %1013 = cast(%var_10027, dtype="float32") /* ty=Tensor[(12, 11, 15), float32] */;
  %1014 = @func_6234() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1015 = log10(%1013) /* ty=Tensor[(12, 11, 15), float32] */;
  %1016 = %1014.0;
  (%1015, %1016)
}

def @func_10554() -> Tensor[(2, 13, 12), float64] {
  @func_2287() /* ty=Tensor[(2, 13, 12), float64] */
}

def @func_12603() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), uint8], Tensor[(48), float32], Tensor[(840), float32]) {
  %1017 = @func_8680() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1018 = cast(meta[relay.Constant][42] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %1019 = cast(meta[relay.Constant][43] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1020 = reshape(%1018, newshape=[840]) /* ty=Tensor[(840), uint8] */;
  %1021 = reshape(%1019, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1022 = @func_11435(%1020, %1021) /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), uint32], Tensor[(840), int64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(48), float32]) */;
  %1023 = %1017.4;
  %1024 = %1022.4;
  %1025 = @func_8152() /* ty=Tensor[(840), float32] */;
  (%1023, %1024, meta[relay.Constant][42] /* ty=Tensor[(840), uint8] */, meta[relay.Constant][43] /* ty=Tensor[(48), float32] */, %1025)
}

def @func_11309() -> (Tensor[(2, 13, 12), int32],) {
  %1026 = @func_4103() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %1027 = %1026.0;
  (%1027,)
}

def @func_6679() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), int32], Tensor[(840, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(4, 420), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8) {
  %1028 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1029 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1030 = @func_6455() /* ty=(Tensor[(2, 13, 12), int16],) */;
  %1031 = cast(meta[relay.Constant][44] /* ty=Tensor[(840, 1), float32] */, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
  %1032 = reshape(%1031, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %1033 = @func_3621(%1032) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) */;
  %1034 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 420), uint8] */, dtype="uint8") /* ty=Tensor[(4, 420), uint8] */;
  %1035 = reshape(%1034, newshape=[1680]) /* ty=Tensor[(1680), uint8] */;
  %1036 = @func_3842(%1035) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8]) */;
  %1037 = @func_5627() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), float32]) */;
  %1038 = cast(meta[relay.Constant][46] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1039 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 420), uint8] */, dtype="uint8") /* ty=Tensor[(4, 420), uint8] */;
  %1040 = reshape(%1038, newshape=[]) /* ty=uint8 */;
  %1041 = reshape(%1039, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
  %1042 = @func_695(%1040, %1041) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
  %1043 = %1028.0;
  %1044 = %1029.0;
  %1045 = %1030.0;
  %1046 = %1033.0;
  %1047 = %1036.0;
  %1048 = %1037.0;
  %1049 = %1042.0;
  (%1043, %1044, %1045, %1046, meta[relay.Constant][44] /* ty=Tensor[(840, 1), float32] */, %1047, meta[relay.Constant][45] /* ty=Tensor[(4, 420), uint8] */, %1048, %1049, meta[relay.Constant][46] /* ty=uint8 */)
}

def @func_8729() -> (Tensor[(2, 13, 12), int32], bool, Tensor[(8), float64]) {
  %1050 = cast(meta[relay.Constant][47] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %1051 = reshape(%1050, newshape=[8]) /* ty=Tensor[(8), float64] */;
  %1052 = @func_5020(%1051) /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(8), float64], bool, Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
  %1053 = @func_6269() /* ty=Tensor[(2, 13, 12), int32] */;
  %1054 = %1052.3;
  (%1053, %1054, meta[relay.Constant][47] /* ty=Tensor[(8), float64] */)
}

def @func_11880() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) {
  %1055 = @func_6968() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %1056 = cast(meta[relay.Constant][48] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1057 = reshape(%1056, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %1058 = @func_8245(%1057) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
  %1059 = @func_11179() /* ty=(Tensor[(2, 13, 12), uint32],) */;
  %1060 = %1055.0;
  %1061 = %1058.2;
  %1062 = %1059.0;
  (%1060, %1061, meta[relay.Constant][48] /* ty=Tensor[(840), float32] */, %1062)
}

def @func_11274(%var_11248: Tensor[(231), int16]) -> (Tensor[(2, 13, 12), int32], Tensor[(3, 7, 11), int16], Tensor[(2, 13, 12), int32], Tensor[(231), float32]) {
  %1063 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1064 = cast(%var_11248, dtype="int16") /* ty=Tensor[(231), int16] */;
  %1065 = reshape(%1064, newshape=[3, 7, 11]) /* ty=Tensor[(3, 7, 11), int16] */;
  %1066 = cast(%var_11248, dtype="float32") /* ty=Tensor[(231), float32] */;
  %1067 = %1063.0;
  %1068 = @func_3653(%1065) /* ty=Tensor[(3, 7, 11), int16] */;
  %1069 = @func_6269() /* ty=Tensor[(2, 13, 12), int32] */;
  %1070 = sigmoid(%1066) /* ty=Tensor[(231), float32] */;
  (%1067, %1068, %1069, %1070)
}

def @func_9702(%var_9693: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(16, 13, 13), float32], Tensor[(2704), float32]) {
  %1071 = @func_9299() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1072 = cast(%var_9693, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1073 = reshape(%1072, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
  %1074 = cast(meta[relay.Constant][49] /* ty=Tensor[(2704), float32] */, dtype="float32") /* ty=Tensor[(2704), float32] */;
  %1075 = reshape(%1074, newshape=[16, 13, 13]) /* ty=Tensor[(16, 13, 13), float32] */;
  %1076 = %1071.1;
  %1077 = @func_77(%1073) /* ty=Tensor[(12, 7, 10), float32] */;
  %1078 = @func_6370(%1075) /* ty=Tensor[(16, 13, 13), float32] */;
  (%1076, %1077, %var_9693, %1078, meta[relay.Constant][49] /* ty=Tensor[(2704), float32] */)
}

def @func_11611() -> Tensor[(2, 13, 12), int32] {
  %1079 = @func_6422() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1079.0
}

def @func_10413() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
  %1080 = @func_3553() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %1081 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %1082 = %1080.1;
  %1083 = %1081.1;
  (%1082, %1083)
}

def @func_3714() -> (Tensor[(2, 13, 12), float32],) {
  %1084 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
  %1085 = %1084.2;
  (%1085,)
}

def @func_391() -> (Tensor[(2, 13, 12), int32],) {
  %1086 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  (%1086,)
}

def @func_7019() -> Tensor[(2, 13, 12), uint32] {
  %1087 = @func_3801() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1087.0
}

def @func_7552(%var_7543: Tensor[(10, 12, 10), uint64]) -> (Tensor[(10, 12, 10), uint64],) {
  %1088 = cast(meta[relay.Constant][50] /* ty=Tensor[(10, 12, 10), uint64] */, dtype="uint64") /* ty=Tensor[(10, 12, 10), uint64] */;
  %1089 = shape_of(%var_7543, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(%var_7543, dtype="uint64") /* ty=Tensor[(10, 12, 10), uint64] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1092 = bitwise_and(%1090, %1091) /* ty=Tensor[(10, 12, 10), uint64] */;
  (%1092,)
}

def @func_9629() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) {
  %1093 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %1094 = @func_4359() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */;
  %1095 = %1093.0;
  %1096 = %1094.3;
  (%1095, %1096)
}

def @func_3553() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) {
  %1097 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1098 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %1099 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %1100 = %1097.0;
  %1101 = %1098.2;
  (%1099, %1100, %1101)
}

def @func_10249() -> (Tensor[(420, 2), float32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) {
  %1102 = @func_3965() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) */;
  %1103 = %1102.4;
  %1104 = cast(%1103, dtype="float32") /* ty=Tensor[(420, 2), float32] */;
  %1105 = cast(meta[relay.Constant][51] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %1106 = reshape(%1105, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
  %1107 = @func_1634(%1106) /* ty=(Tensor[(15, 5, 16), float64],) */;
  %1108 = asin(%1104) /* ty=Tensor[(420, 2), float32] */;
  %1109 = %1107.0;
  (%1108, %1109, meta[relay.Constant][51] /* ty=Tensor[(1200), float64] */)
}

def @func_3292() -> Tensor[(2, 13, 12), int32] {
  @func_1656() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_12643() -> (Tensor[(15, 5, 16), float64], Tensor[(2, 13, 12), float32]) {
  %1110 = @func_12558() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1111 = @func_7700() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %1112 = %1110.1;
  %1113 = %1111.1;
  (%1112, %1113)
}

def @func_12912() -> (Tensor[(2, 13, 12), uint32],) {
  %1114 = @func_6611() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %1115 = %1114.1;
  (%1115,)
}

def @main(%var_13533: Tensor[(15, 2, 14), uint32], %var_13534: Tensor[(15, 2, 14), uint32]) -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32], Tensor[(15, 2, 14), uint8]) {
  %1116 = @func_8304() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1117 = cast(%var_13534, dtype="uint32") /* ty=Tensor[(15, 2, 14), uint32] */;
  %1118 = shape_of(%var_13533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1119 = cast(%var_13533, dtype="uint32") /* ty=Tensor[(15, 2, 14), uint32] */;
  %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1121 = right_shift(%1119, %1120) /* ty=Tensor[(15, 2, 14), uint32] */;
  %1122 = cast(%var_13533, dtype="uint8") /* ty=Tensor[(15, 2, 14), uint8] */;
  %1123 = shape_of(%1121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(%1121, dtype="uint8") /* ty=Tensor[(15, 2, 14), uint8] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1126 = @func_13137() /* ty=Tensor[(2, 13, 12), uint32] */;
  %1127 = %1116.1;
  %1128 = left_shift(%1124, %1125) /* ty=Tensor[(15, 2, 14), uint8] */;
  (%1126, %1127, %1128)
}

def @func_4046(%var_3994: Tensor[(2, 420), float32], %var_3996: Tensor[(2, 2, 2), float64]) -> (Tensor[(2, 2, 2), float64], Tensor[(2, 2, 2), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 2, 2), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1129 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 2, 2), float64] */;
  %1130 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 2, 2), float64] */;
  %1131 = cast(%var_3994, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
  %1132 = reshape(%1131, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %1133 = @func_3621(%1132) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) */;
  %1134 = cast(%var_3996, dtype="bool") /* ty=Tensor[(2, 2, 2), bool] */;
  %1135 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(2, 2, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1136 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 2, 2), float64] */, dtype="bool") /* ty=Tensor[(2, 2, 2), bool] */;
  %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1138 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %1139 = cast(%var_3994, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
  %1140 = cos(%1139) /* ty=Tensor[(2, 420), float32] */;
  %1141 = cast(%1140, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
  %1142 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1143 = @func_2310() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1144 = tan(%1129) /* ty=Tensor[(2, 2, 2), float64] */;
  %1145 = sqrt(%1130) /* ty=Tensor[(2, 2, 2), float64] */;
  %1146 = %1133.0;
  %1147 = greater(%1136, %1137) /* ty=Tensor[(2, 2, 2), bool] */;
  %1148 = %1138.1;
  %1149 = log2(%1141) /* ty=Tensor[(2, 420), float32] */;
  %1150 = %1142.0;
  %1151 = %1143.1;
  (%1144, %1145, %1146, %1147, %1148, %1149, %1150, %1151)
}

def @func_6370(%var_6365: Tensor[(16, 13, 13), float32]) -> Tensor[(16, 13, 13), float32] {
  %1152 = cast(%var_6365, dtype="float32") /* ty=Tensor[(16, 13, 13), float32] */;
  log(%1152) /* ty=Tensor[(16, 13, 13), float32] */
}

def @func_12820() -> (Tensor[(12, 70), float32],) {
  %1153 = @func_7249() /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1154 = %1153.0;
  (%1154,)
}

def @func_2693() -> (Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) {
  %1155 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1156 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
  %1157 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1158 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1159 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1160 = %1159.0;
  %1161 = cast(%1160, dtype="float32") /* ty=Tensor[(2, 13, 12), float32] */;
  %1162 = sin(%1161) /* ty=Tensor[(2, 13, 12), float32] */;
  %1163 = cast(%1160, dtype="uint32") /* ty=Tensor[(2, 13, 12), uint32] */;
  %1164 = shape_of(%1162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1165 = cast(%1162, dtype="uint32") /* ty=Tensor[(2, 13, 12), uint32] */;
  %1166 = dyn.reshape(%1163, %1164, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1167 = %1155.0;
  %1168 = @func_2453() /* ty=Tensor[(840), uint8] */;
  %1169 = %1156.0;
  %1170 = %1157.0;
  %1171 = %1158.2;
  %1172 = logical_xor(%1165, %1166) /* ty=Tensor[(2, 13, 12), uint32] */;
  (%1167, %1168, %1169, %1170, %1171, %1172)
}

def @func_7396() -> Tensor[(2, 13, 12), int32] {
  %1173 = @func_6234() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1173.0
}

def @func_12865() -> (Tensor[(2, 13, 12), int32],) {
  %1174 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  (%1174,)
}

def @func_9358() -> (Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), uint32]) {
  %1175 = @func_6562() /* ty=(Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), float32], Tensor[(48), float32], Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), int32]) */;
  %1176 = %1175.3;
  %1177 = @func_7019() /* ty=Tensor[(2, 13, 12), uint32] */;
  (%1176, %1177)
}

def @func_11435(%var_11373: Tensor[(840), uint8], %var_11408: Tensor[(48), float32]) -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), uint32], Tensor[(840), int64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(48), float32]) {
  %1178 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %1179 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %1180 = %1179.2;
  %1181 = cast(%var_11373, dtype="int64") /* ty=Tensor[(840), int64] */;
  %1182 = shape_of(%1180, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1183 = cast(%1180, dtype="int64") /* ty=Tensor[(840), int64] */;
  %1184 = dyn.reshape(%1181, %1182, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1185 = @func_9531() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1186 = left_shift(%1183, %1184) /* ty=Tensor[(840), int64] */;
  %1187 = cast(%1186, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %1188 = cast(%var_11408, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1189 = reshape(%1187, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
  %1190 = reshape(%1188, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1191 = @func_9277(%1189, %1190) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840, 1), uint8], Tensor[(48), float32]) */;
  %1192 = %1178.1;
  %1193 = @func_7019() /* ty=Tensor[(2, 13, 12), uint32] */;
  %1194 = %1185.0;
  %1195 = %1191.0;
  (%1192, %1193, %1186, %1194, %1195, %var_11408)
}

def @func_12288() -> Tensor[(2, 13, 12), uint32] {
  %1196 = @func_4359() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */;
  %1196.3
}

def @func_10140(%var_10136: Tensor[(9, 7, 6), int64]) -> (Tensor[(9, 7, 6), int64],) {
  %1197 = cast(%var_10136, dtype="int64") /* ty=Tensor[(9, 7, 6), int64] */;
  %1198 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(9, 7, 6), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1199 = cast(meta[relay.Constant][53] /* ty=Tensor[(9, 7, 6), int64] */, dtype="int64") /* ty=Tensor[(9, 7, 6), int64] */;
  %1200 = dyn.reshape(%1197, %1198, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1201 = add(%1199, %1200) /* ty=Tensor[(9, 7, 6), int64] */;
  (%1201,)
}

def @func_12174(%var_12141: Tensor[(12, 15, 2), float32], %var_12149: Tensor[(231), int16]) -> (Tensor[(12, 15, 2), bool], Tensor[(231), int16], Tensor[(3, 7, 11), float32]) {
  %1202 = cast(%var_12141, dtype="float32") /* ty=Tensor[(12, 15, 2), float32] */;
  %1203 = sinh(%1202) /* ty=Tensor[(12, 15, 2), float32] */;
  %1204 = cast(%var_12141, dtype="bool") /* ty=Tensor[(12, 15, 2), bool] */;
  %1205 = shape_of(%1203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1206 = cast(%1203, dtype="bool") /* ty=Tensor[(12, 15, 2), bool] */;
  %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1208 = cast(%var_12149, dtype="int16") /* ty=Tensor[(231), int16] */;
  %1209 = reshape(%1208, newshape=[3, 7, 11]) /* ty=Tensor[(3, 7, 11), int16] */;
  %1210 = @func_3653(%1209) /* ty=Tensor[(3, 7, 11), int16] */;
  %1211 = cast(%1210, dtype="float32") /* ty=Tensor[(3, 7, 11), float32] */;
  %1212 = logical_and(%1206, %1207) /* ty=Tensor[(12, 15, 2), bool] */;
  %1213 = acosh(%1211) /* ty=Tensor[(3, 7, 11), float32] */;
  (%1212, %var_12149, %1213)
}

def @func_13064() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1214 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1215 = @func_3965() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) */;
  %1216 = %1214.0;
  %1217 = %1215.2;
  (%1216, %1217)
}

def @func_2046() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1218 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1219 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  %1220 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  %1221 = %1218.0;
  (%1219, %1220, %1221)
}

def @func_5711() -> Tensor[(10, 13, 5), float64] {
  %1222 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 5), float64] */;
  exp(%1222) /* ty=Tensor[(10, 13, 5), float64] */
}

def @func_7176() -> (Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1223 = @func_4359() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */;
  %1224 = @func_6679() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), int32], Tensor[(840, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(4, 420), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8) */;
  %1225 = @func_1023() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1226 = %1223.1;
  %1227 = %1224.5;
  %1228 = %1225.1;
  (%1226, %1227, %1228)
}

def @func_785() -> (Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) {
  %1229 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  %1230 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1231 = %1230.0;
  %1232 = cast(%1231, dtype="int16") /* ty=Tensor[(2, 13, 12), int16] */;
  %1233 = shape_of(%1229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1234 = cast(%1229, dtype="int16") /* ty=Tensor[(2, 13, 12), int16] */;
  %1235 = dyn.reshape(%1232, %1233, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1236 = cast(%1231, dtype="float32") /* ty=Tensor[(2, 13, 12), float32] */;
  %1237 = right_shift(%1234, %1235) /* ty=Tensor[(2, 13, 12), int16] */;
  %1238 = acos(%1236) /* ty=Tensor[(2, 13, 12), float32] */;
  (%1237, %1238)
}

def @func_7891(%var_7865: Tensor[(7, 13, 8), float32], %var_7866: Tensor[(7, 13, 8), float32], %var_7889: Tensor[(2, 4), float64]) -> (Tensor[(7, 13, 8), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 4), float64]) {
  %1239 = cast(%var_7866, dtype="float32") /* ty=Tensor[(7, 13, 8), float32] */;
  %1240 = shape_of(%var_7865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1241 = cast(%var_7865, dtype="float32") /* ty=Tensor[(7, 13, 8), float32] */;
  %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1243 = cast(meta[relay.Constant][55] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1244 = reshape(%1243, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float32] */;
  %1245 = @func_5335(%1244) /* ty=(Tensor[(12, 2, 2), float32], Tensor[(2, 13, 12), int32]) */;
  %1246 = cast(%var_7889, dtype="float64") /* ty=Tensor[(2, 4), float64] */;
  %1247 = reshape(%1246, newshape=[8]) /* ty=Tensor[(8), float64] */;
  %1248 = @func_5020(%1247) /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(8), float64], bool, Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
  %1249 = power(%1241, %1242) /* ty=Tensor[(7, 13, 8), float32] */;
  %1250 = %1245.0;
  %1251 = %1248.5;
  (%1249, %1250, meta[relay.Constant][55] /* ty=Tensor[(48), float32] */, %1251, %var_7889)
}

def @func_2287() -> Tensor[(2, 13, 12), float64] {
  %1252 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1253 = %1252.0;
  %1254 = cast(%1253, dtype="float64") /* ty=Tensor[(2, 13, 12), float64] */;
  sigmoid(%1254) /* ty=Tensor[(2, 13, 12), float64] */
}

def @func_11476() -> Tensor[(2, 13, 12), int32] {
  %1255 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1255.0
}

def @func_2062(%var_2052: Tensor[(2, 13, 12), int32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64]) {
  %1256 = @func_1656() /* ty=Tensor[(2, 13, 12), int32] */;
  %1257 = cast(%var_2052, dtype="float64") /* ty=Tensor[(2, 13, 12), float64] */;
  %1258 = shape_of(%1256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1259 = cast(%1256, dtype="float64") /* ty=Tensor[(2, 13, 12), float64] */;
  %1260 = dyn.reshape(%1257, %1258, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1261 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  %1262 = mod(%1259, %1260) /* ty=Tensor[(2, 13, 12), float64] */;
  (%1261, %1262)
}

def @func_13201() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32]) {
  %1263 = @func_5284() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1264 = @func_12745() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32]) */;
  %1265 = @func_9327() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1266 = %1263.0;
  %1267 = %1264.1;
  %1268 = @func_7019() /* ty=Tensor[(2, 13, 12), uint32] */;
  %1269 = %1265.0;
  (%1266, %1267, %1268, %1269)
}

def @func_4359() -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) {
  %1270 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %1271 = cast(meta[relay.Constant][56] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1272 = reshape(%1271, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
  %1273 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1274 = %1270.0;
  %1275 = @func_77(%1272) /* ty=Tensor[(12, 7, 10), float32] */;
  %1276 = %1273.0;
  (%1274, %1275, meta[relay.Constant][56] /* ty=Tensor[(840), float32] */, %1276)
}

def @func_5181() -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
  %1277 = @func_1023() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1278 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
  %1279 = %1277.1;
  (%1278, %1279)
}

def @func_4179() -> (Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
  %1280 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %1281 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1282 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1283 = %1280.2;
  %1284 = %1281.0;
  %1285 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
  %1286 = %1282.0;
  (%1283, %1284, %1285, %1286)
}

def @func_7249() -> (Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1287 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1288 = @func_4359() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */;
  %1289 = @func_6611() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %1290 = %1287.2;
  %1291 = %1288.0;
  %1292 = %1289.0;
  %1293 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  (%1290, %1291, %1292, %1293)
}

def @func_11179() -> (Tensor[(2, 13, 12), uint32],) {
  %1294 = @func_5357() /* ty=Tensor[(2, 13, 12), uint32] */;
  (%1294,)
}

def @func_2746() -> Tensor[(2, 13, 12), int32] {
  %1295 = @func_1915() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
  %1295.0
}

def @func_9012() -> (Tensor[(2, 13, 12), int32], Tensor[(2704), float64]) {
  %1296 = cast(meta[relay.Constant][57] /* ty=Tensor[(2704), float32] */, dtype="float32") /* ty=Tensor[(2704), float32] */;
  %1297 = reshape(%1296, newshape=[16, 13, 13]) /* ty=Tensor[(16, 13, 13), float32] */;
  %1298 = @func_6370(%1297) /* ty=Tensor[(16, 13, 13), float32] */;
  %1299 = cast(%1298, dtype="float64") /* ty=Tensor[(16, 13, 13), float64] */;
  %1300 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(2704), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1301 = cast(meta[relay.Constant][57] /* ty=Tensor[(2704), float32] */, dtype="float64") /* ty=Tensor[(2704), float64] */;
  %1302 = dyn.reshape(%1299, %1300, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1303 = @func_7396() /* ty=Tensor[(2, 13, 12), int32] */;
  %1304 = floor_divide(%1301, %1302) /* ty=Tensor[(2704), float64] */;
  (%1303, %1304)
}

def @func_12192(%var_12184: Tensor[(4, 11, 5), float32]) -> (Tensor[(4, 11, 5), float32],) {
  %1305 = cast(%var_12184, dtype="float32") /* ty=Tensor[(4, 11, 5), float32] */;
  %1306 = sinh(%1305) /* ty=Tensor[(4, 11, 5), float32] */;
  (%1306,)
}

def @func_1466(%var_1379: Tensor[(1680), uint8], %var_1398: Tensor[(8, 14, 15), bool]) -> (Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8], Tensor[(8, 14, 15), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), uint8], Tensor[(8, 14, 15), bool]) {
  %1307 = cast(meta[relay.Constant][58] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1308 = cast(%var_1379, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %1309 = reshape(%1307, newshape=[]) /* ty=uint8 */;
  %1310 = reshape(%1308, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
  %1311 = @func_695(%1309, %1310) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
  %1312 = %1311.0;
  %1313 = cast(%var_1398, dtype="float64") /* ty=Tensor[(8, 14, 15), float64] */;
  %1314 = shape_of(%1312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1315 = cast(%1312, dtype="float64") /* ty=Tensor[(8, 14, 15), float64] */;
  %1316 = dyn.reshape(%1313, %1314, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1317 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1318 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %1319 = %1318.1;
  %1320 = cast(%1319, dtype="float32") /* ty=Tensor[(12, 7, 10), float32] */;
  %1321 = reshape(%1320, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %1322 = @func_351(%1321) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
  %1323 = cast(meta[relay.Constant][58] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1324 = cast(%var_1379, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %1325 = reshape(%1323, newshape=[]) /* ty=uint8 */;
  %1326 = reshape(%1324, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
  %1327 = @func_695(%1325, %1326) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
  %1328 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
  %1329 = floor_mod(%1315, %1316) /* ty=Tensor[(8, 14, 15), float64] */;
  %1330 = %1317.5;
  %1331 = %1322.1;
  %1332 = %1327.0;
  (%1328, meta[relay.Constant][58] /* ty=uint8 */, %var_1379, %1329, %1330, %1319, %1331, %1332)
}

def @func_3842(%var_3832: Tensor[(1680), uint8]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8]) {
  %1333 = @func_1023() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1334 = cast(meta[relay.Constant][59] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1335 = cast(%var_3832, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %1336 = reshape(%1334, newshape=[]) /* ty=uint8 */;
  %1337 = reshape(%1335, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
  %1338 = @func_695(%1336, %1337) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
  %1339 = %1333.1;
  %1340 = %1338.1;
  (%1339, %1340, meta[relay.Constant][59] /* ty=uint8 */, %var_3832)
}

def @func_3206(%var_3149: Tensor[(13, 9, 10), int32], %var_3179: Tensor[(840), float32], %var_3202: Tensor[(825), float32]) -> (Tensor[(13, 9, 10), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], bool, Tensor[(300, 1), bool], Tensor[(840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(825), float32]) {
  %1341 = cast(%var_3149, dtype="int32") /* ty=Tensor[(13, 9, 10), int32] */;
  %1342 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(13, 9, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1343 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 9, 10), int32] */, dtype="int32") /* ty=Tensor[(13, 9, 10), int32] */;
  %1344 = dyn.reshape(%1341, %1342, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1345 = multiply(%1343, %1344) /* ty=Tensor[(13, 9, 10), int32] */;
  %1346 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 9, 10), int32] */, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %1347 = shape_of(%1345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1348 = cast(%1345, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %1349 = dyn.reshape(%1346, %1347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1350 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %1351 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1352 = cast(meta[relay.Constant][61] /* ty=Tensor[(300, 1), bool] */, dtype="bool") /* ty=Tensor[(300, 1), bool] */;
  %1353 = cast(%var_3179, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1354 = reshape(%1351, newshape=[]) /* ty=bool */;
  %1355 = reshape(%1352, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), bool] */;
  %1356 = reshape(%1353, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
  %1357 = @func_1858(%1354, %1355, %1356) /* ty=(Tensor[(3, 10, 10), bool], Tensor[(3, 10, 10), int16], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32]) */;
  %1358 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %1359 = cast(%var_3202, dtype="float32") /* ty=Tensor[(825), float32] */;
  %1360 = reshape(%1359, newshape=[825]) /* ty=Tensor[(825), float32] */;
  %1361 = @func_2407(%1360) /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float32], Tensor[(2, 13, 12), int32]) */;
  %1362 = greater(%1348, %1349) /* ty=Tensor[(13, 9, 10), bool] */;
  %1363 = %1350.0;
  %1364 = %1357.3;
  %1365 = %1358.0;
  %1366 = %1361.5;
  (%1362, %1363, %1364, True /* ty=bool */, meta[relay.Constant][61] /* ty=Tensor[(300, 1), bool] */, %var_3179, %1365, %1366, %var_3202)
}

def @func_12001(%var_11981: Tensor[(4, 4, 5), int16], %var_11982: Tensor[(4, 4, 5), int16]) -> (Tensor[(4, 4, 5), bool],) {
  %1367 = cast(%var_11982, dtype="bool") /* ty=Tensor[(4, 4, 5), bool] */;
  %1368 = shape_of(%var_11981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1369 = cast(%var_11981, dtype="bool") /* ty=Tensor[(4, 4, 5), bool] */;
  %1370 = dyn.reshape(%1367, %1368, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1371 = greater_equal(%1369, %1370) /* ty=Tensor[(4, 4, 5), bool] */;
  (%1371,)
}

def @func_12122() -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1372 = @func_11221() /* ty=(Tensor[(2, 13, 12), uint32],) */;
  %1373 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %1374 = @func_11309() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1375 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1376 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1377 = %1372.0;
  %1378 = %1373.1;
  %1379 = %1374.0;
  %1380 = %1375.0;
  %1381 = %1376.0;
  (%1377, %1378, %1379, %1380, %1381)
}

def @func_11969(%var_11943: Tensor[(2, 9, 4), float64]) -> (Tensor[(2, 9, 4), float64], Tensor[(2, 13, 12), float32]) {
  %1382 = cast(meta[relay.Constant][62] /* ty=Tensor[(2, 9, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
  %1383 = cosh(%1382) /* ty=Tensor[(2, 9, 4), float64] */;
  %1384 = cast(%var_11943, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
  %1385 = shape_of(%1383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1386 = cast(%1383, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
  %1387 = dyn.reshape(%1384, %1385, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1388 = @func_9606() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %1389 = floor_mod(%1386, %1387) /* ty=Tensor[(2, 9, 4), float64] */;
  %1390 = %1388.0;
  (%1389, %1390)
}

def @func_5020(%var_5002: Tensor[(8), float64]) -> (Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(8), float64], bool, Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) {
  %1391 = @func_2693() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) */;
  %1392 = %1391.4;
  %1393 = cast(%1392, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %1394 = cast(%var_5002, dtype="float64") /* ty=Tensor[(8), float64] */;
  %1395 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1396 = reshape(%1393, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %1397 = reshape(%1394, newshape=[8]) /* ty=Tensor[(8), float64] */;
  %1398 = reshape(%1395, newshape=[]) /* ty=bool */;
  %1399 = @func_4909(%1396, %1397, %1398) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(8), float64], Tensor[(2, 13, 12), float32], Tensor[(2, 420), bool], Tensor[(2, 13, 12), int32], bool) */;
  %1400 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1401 = @func_2693() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) */;
  %1402 = %1399.0;
  %1403 = %1400.1;
  %1404 = %1401.2;
  (%1392, %1402, %var_5002, True /* ty=bool */, %1403, %1404)
}

def @func_1656() -> Tensor[(2, 13, 12), int32] {
  %1405 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1405.0
}

def @func_11636() -> Tensor[(2, 13, 12), int32] {
  @func_4675() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_13137() -> Tensor[(2, 13, 12), uint32] {
  @func_4553() /* ty=Tensor[(2, 13, 12), uint32] */
}

def @func_8152() -> Tensor[(840), float32] {
  %1406 = @func_4103() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %1406.2
}

def @func_2487() -> (Tensor[(2, 13, 12), float32],) {
  %1407 = @func_1656() /* ty=Tensor[(2, 13, 12), int32] */;
  %1408 = cast(%1407, dtype="float32") /* ty=Tensor[(2, 13, 12), float32] */;
  %1409 = sqrt(%1408) /* ty=Tensor[(2, 13, 12), float32] */;
  (%1409,)
}

def @func_10984(%var_10968: Tensor[(16, 6, 11), float64], %var_10972: uint64, %var_10973: Tensor[(2, 384), uint64]) -> (Tensor[(16, 6, 11), float64], Tensor[(3, 16, 16), int64], uint64, Tensor[(2, 384), uint64], Tensor[(12, 2, 2), float64]) {
  %1410 = cast(%var_10968, dtype="float64") /* ty=Tensor[(16, 6, 11), float64] */;
  %1411 = cast(%var_10972, dtype="uint64") /* ty=uint64 */;
  %1412 = cast(%var_10973, dtype="uint64") /* ty=Tensor[(2, 384), uint64] */;
  %1413 = reshape(%1411, newshape=[]) /* ty=uint64 */;
  %1414 = reshape(%1412, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), uint64] */;
  %1415 = @func_10645(%1413, %1414) /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), int64]) */;
  %1416 = @func_9358() /* ty=(Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), uint32]) */;
  %1417 = sigmoid(%1410) /* ty=Tensor[(16, 6, 11), float64] */;
  %1418 = %1415.1;
  %1419 = %1416.0;
  (%1417, %1418, %var_10972, %var_10973, %1419)
}

def @func_77(%var_65: Tensor[(12, 7, 10), float32]) -> Tensor[(12, 7, 10), float32] {
  %1420 = cast(%var_65, dtype="float32") /* ty=Tensor[(12, 7, 10), float32] */;
  sinh(%1420) /* ty=Tensor[(12, 7, 10), float32] */
}

def @func_3112(%var_3053: Tensor[(10), float64]) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(10), float64], Tensor[(840), uint8]) {
  %1421 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %1422 = cast(%var_3053, dtype="float64") /* ty=Tensor[(10), float64] */;
  %1423 = %1421.2;
  %1424 = cast(%1423, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1425 = reshape(%1422, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %1426 = reshape(%1424, newshape=[60, 14]) /* ty=Tensor[(60, 14), float32] */;
  %1427 = @func_1828(%1425, %1426) /* ty=(Tensor[(15, 11, 5), bool], Tensor[(825), float32], Tensor[(2, 13, 12), int32], Tensor[(60, 14), float32], Tensor[(840), uint8], Tensor[(2, ?, 5), int32], Tensor[(2, 13, 12), int32], Tensor[(2, ?, 5), float32]) */;
  %1428 = %1427.4;
  %1429 = @func_2453() /* ty=Tensor[(840), uint8] */;
  (%1423, %1428, %var_3053, %1429)
}

def @func_7859(%var_7852: Tensor[(10), float64], %var_7853: Tensor[(60, 14), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(15, 11, 5), bool], Tensor[(10), float64], Tensor[(60, 14), float32]) {
  %1430 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %1431 = cast(%var_7852, dtype="float64") /* ty=Tensor[(10), float64] */;
  %1432 = cast(%var_7853, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
  %1433 = reshape(%1431, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %1434 = reshape(%1432, newshape=[60, 14]) /* ty=Tensor[(60, 14), float32] */;
  %1435 = @func_1828(%1433, %1434) /* ty=(Tensor[(15, 11, 5), bool], Tensor[(825), float32], Tensor[(2, 13, 12), int32], Tensor[(60, 14), float32], Tensor[(840), uint8], Tensor[(2, ?, 5), int32], Tensor[(2, 13, 12), int32], Tensor[(2, ?, 5), float32]) */;
  %1436 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  %1437 = %1430.1;
  %1438 = %1435.0;
  (%1436, %1437, %1438, %var_7852, %var_7853)
}

def @func_5048() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1439 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1440 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1441 = %1439.0;
  %1442 = %1440.0;
  (%1441, %1442)
}

def @func_12964() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], bool, bool, Tensor[(2, 13, 12), int32]) {
  %1443 = @func_12122() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1444 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1445 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1446 = reshape(%1445, newshape=[]) /* ty=bool */;
  %1447 = @func_5263(%1446) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(1680), uint8], bool) */;
  %1448 = %1443.2;
  %1449 = %1444.0;
  %1450 = %1447.2;
  %1451 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
  (%1448, %1449, %1450, True /* ty=bool */, %1451)
}

def @func_5492() -> Tensor[(2, 13, 12), int32] {
  %1452 = @func_3801() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1452.3
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11309() -> (Tensor[(2, 13, 12), int32],) {
  %0 = @func_4103() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %1 = %0.0;
  (%1,)
}

def @func_2487() -> (Tensor[(2, 13, 12), float32],) {
  %2 = @func_1656() /* ty=Tensor[(2, 13, 12), int32] */;
  %3 = cast(%2, dtype="float32") /* ty=Tensor[(2, 13, 12), float32] */;
  %4 = sqrt(%3) /* ty=Tensor[(2, 13, 12), float32] */;
  (%4,)
}

def @func_10113() -> Tensor[(12, 2, 2), float64] {
  %8 = fn () -> Tensor[(12, 2, 2), float64] {
    %5 = @func_9358() /* ty=(Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), uint32]) */;
    %6 = %5.0;
    %7 = cast(%6, dtype="float64") /* ty=Tensor[(12, 2, 2), float64] */;
    acosh(%7) /* ty=Tensor[(12, 2, 2), float64] */
  };
  %8() /* ty=Tensor[(12, 2, 2), float64] */
}

def @func_1469(%var_1467: Tensor[(1680), uint8], %var_1468: Tensor[(8, 14, 15), bool]) -> (Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8], Tensor[(8, 14, 15), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), uint8], Tensor[(8, 14, 15), bool]) {
  %35 = fn (%var_1379: Tensor[(1680), uint8], %var_1398: Tensor[(8, 14, 15), bool]) -> (Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8], Tensor[(8, 14, 15), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), uint8], Tensor[(8, 14, 15), bool]) {
    %9 = cast(meta[relay.Constant][0] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %10 = cast(%var_1379, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
    %11 = reshape(%9, newshape=[]) /* ty=uint8 */;
    %12 = reshape(%10, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
    %13 = @func_695(%11, %12) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
    %14 = %13.0;
    %15 = cast(%var_1398, dtype="float64") /* ty=Tensor[(8, 14, 15), float64] */;
    %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
    %17 = cast(%14, dtype="float64") /* ty=Tensor[(8, 14, 15), float64] */;
    %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %19 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %20 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
    %21 = %20.1;
    %22 = cast(%21, dtype="float32") /* ty=Tensor[(12, 7, 10), float32] */;
    %23 = reshape(%22, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %24 = @func_351(%23) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
    %25 = cast(meta[relay.Constant][0] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %26 = cast(%var_1379, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
    %27 = reshape(%25, newshape=[]) /* ty=uint8 */;
    %28 = reshape(%26, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
    %29 = @func_695(%27, %28) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
    %30 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
    %31 = floor_mod(%17, %18) /* ty=Tensor[(8, 14, 15), float64] */;
    %32 = %19.5;
    %33 = %24.1;
    %34 = %29.0;
    (%30, meta[relay.Constant][0] /* ty=uint8 */, %var_1379, %31, %32, %21, %33, %34)
  };
  %35(%var_1467, %var_1468) /* ty=(Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8], Tensor[(8, 14, 15), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), uint8], Tensor[(8, 14, 15), bool]) */
}

def @func_7938() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %39 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %36 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %37 = %36.0;
    %38 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
    (%37, %38)
  };
  %39() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_4181() -> (Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
  @func_4179() /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */
}

def @func_1037() -> (Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) {
  %44 = fn () -> (Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) {
    %40 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %41 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %42 = %40.1;
    %43 = %41.0;
    (%42, %43)
  };
  %44() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */
}

def @func_8122(%var_8112: Tensor[(2, 13, 12), int32]) -> (Tensor[(840), uint8], Tensor[(2, 13, 12), uint16]) {
  %45 = @func_6968() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %46 = @func_2310() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %47 = %46.1;
  %48 = cast(%var_8112, dtype="uint16") /* ty=Tensor[(2, 13, 12), uint16] */;
  %49 = shape_of(%47, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(%47, dtype="uint16") /* ty=Tensor[(2, 13, 12), uint16] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %52 = %45.1;
  %53 = bitwise_xor(%50, %51) /* ty=Tensor[(2, 13, 12), uint16] */;
  (%52, %53)
}

def @func_3515() -> (Tensor[(2, 13, 12), int32],) {
  @func_3513() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_8154() -> Tensor[(840), float32] {
  @func_8152() /* ty=Tensor[(840), float32] */
}

def @func_5628() -> (Tensor[(2, 13, 12), int32], Tensor[(840), float32]) {
  %58 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(840), float32]) {
    %54 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %55 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %56 = %54.0;
    %57 = %55.2;
    (%56, %57)
  };
  %58() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), float32]) */
}

def @func_10930() -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], bool) {
  @func_10928() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], bool) */
}

def @func_9463() -> (Tensor[(2, 13, 12), int32],) {
  %59 = @func_4675() /* ty=Tensor[(2, 13, 12), int32] */;
  (%59,)
}

def @func_9848() -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) {
  %60 = @func_2487() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %61 = @func_6783() /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) */;
  %62 = @func_6938() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) */;
  %63 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
  %64 = %60.0;
  %65 = %61.0;
  %66 = %62.1;
  (%63, %64, %65, %66)
}

def @func_7554(%var_7553: Tensor[(10, 12, 10), uint64]) -> (Tensor[(10, 12, 10), uint64],) {
  %72 = fn (%var_7543: Tensor[(10, 12, 10), uint64]) -> (Tensor[(10, 12, 10), uint64],) {
    %67 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 12, 10), uint64] */, dtype="uint64") /* ty=Tensor[(10, 12, 10), uint64] */;
    %68 = shape_of(%var_7543, dtype="int32") /* ty=Tensor[(3), int32] */;
    %69 = cast(%var_7543, dtype="uint64") /* ty=Tensor[(10, 12, 10), uint64] */;
    %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %71 = bitwise_and(%69, %70) /* ty=Tensor[(10, 12, 10), uint64] */;
    (%71,)
  };
  %72(%var_7553) /* ty=(Tensor[(10, 12, 10), uint64],) */
}

def @func_5712() -> Tensor[(10, 13, 5), float64] {
  %74 = fn () -> Tensor[(10, 13, 5), float64] {
    %73 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 5), float64] */;
    exp(%73) /* ty=Tensor[(10, 13, 5), float64] */
  };
  %74() /* ty=Tensor[(10, 13, 5), float64] */
}

def @func_11476() -> Tensor[(2, 13, 12), int32] {
  %75 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %75.0
}

def @func_9533() -> (Tensor[(2, 13, 12), int32],) {
  @func_9531() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_7294() -> (Tensor[(2, 13, 12), int32], Tensor[(840), float64], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32]) {
  %76 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
  %77 = @func_3553() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %78 = %77.2;
  %79 = cast(%78, dtype="float64") /* ty=Tensor[(840), float64] */;
  %80 = @func_2693() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) */;
  %81 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %82 = %76.1;
  %83 = atanh(%79) /* ty=Tensor[(840), float64] */;
  %84 = %80.0;
  %85 = %81.0;
  (%82, %83, %84, %85)
}

def @func_5335(%var_5304: Tensor[(12, 2, 2), float32]) -> (Tensor[(12, 2, 2), float32], Tensor[(2, 13, 12), int32]) {
  %86 = cast(%var_5304, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %87 = log10(%86) /* ty=Tensor[(12, 2, 2), float32] */;
  %88 = cast(%87, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %89 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %90 = log2(%88) /* ty=Tensor[(12, 2, 2), float32] */;
  %91 = %89.0;
  (%90, %91)
}

def @func_11562() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %92 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %93 = @func_8680() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %94 = %92.1;
  %95 = %93.0;
  (%94, %95)
}

def @func_10947() -> Tensor[(2, 13, 12), int32] {
  %97 = fn () -> Tensor[(2, 13, 12), int32] {
    %96 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
    %96.0
  };
  %97() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_12914() -> (Tensor[(2, 13, 12), uint32],) {
  @func_12912() /* ty=(Tensor[(2, 13, 12), uint32],) */
}

def @func_12912() -> (Tensor[(2, 13, 12), uint32],) {
  %98 = @func_6611() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %99 = %98.1;
  (%99,)
}

def @func_1656() -> Tensor[(2, 13, 12), int32] {
  %100 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %100.0
}

def @func_5867() -> (Tensor[(840), float32], Tensor[(2, 13, 12), int32]) {
  %105 = fn () -> (Tensor[(840), float32], Tensor[(2, 13, 12), int32]) {
    %101 = @func_4359() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */;
    %102 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %103 = %101.2;
    %104 = %102.0;
    (%103, %104)
  };
  %105() /* ty=(Tensor[(840), float32], Tensor[(2, 13, 12), int32]) */
}

def @func_12559() -> (Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %118 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %106 = @func_7249() /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %107 = cast(meta[relay.Constant][3] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %108 = reshape(%107, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
    %109 = @func_1634(%108) /* ty=(Tensor[(15, 5, 16), float64],) */;
    %110 = @func_4651() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %111 = @func_4989() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
    %112 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %113 = %106.2;
    %114 = %109.0;
    %115 = %110.0;
    %116 = %111.0;
    %117 = %112.1;
    (%113, %114, meta[relay.Constant][3] /* ty=Tensor[(1200), float64] */, %115, %116, %117)
  };
  %118() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_13491() -> Tensor[(2, 13, 12), uint32] {
  %120 = fn () -> Tensor[(2, 13, 12), uint32] {
    %119 = @func_11221() /* ty=(Tensor[(2, 13, 12), uint32],) */;
    %119.0
  };
  %120() /* ty=Tensor[(2, 13, 12), uint32] */
}

def @func_2489() -> (Tensor[(2, 13, 12), float32],) {
  @func_2487() /* ty=(Tensor[(2, 13, 12), float32],) */
}

def @func_8033(%var_8002: Tensor[(840), float32], %var_8003: Tensor[(825), float32]) -> (Tensor[(2, 13, 12), int16], Tensor[(840), float32], Tensor[(1170), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float64]) {
  %121 = @func_6455() /* ty=(Tensor[(2, 13, 12), int16],) */;
  %122 = cast(meta[relay.Constant][4] /* ty=Tensor[(1170), int32] */, dtype="int32") /* ty=Tensor[(1170), int32] */;
  %123 = cast(%var_8002, dtype="float32") /* ty=Tensor[(840), float32] */;
  %124 = cast(%var_8003, dtype="float32") /* ty=Tensor[(825), float32] */;
  %125 = reshape(%122, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int32] */;
  %126 = reshape(%123, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %127 = reshape(%124, newshape=[825]) /* ty=Tensor[(825), float32] */;
  %128 = @func_3206(%125, %126, %127) /* ty=(Tensor[(13, 9, 10), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], bool, Tensor[(300, 1), bool], Tensor[(840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(825), float32]) */;
  %129 = @func_4989() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %130 = cast(%var_8003, dtype="float32") /* ty=Tensor[(825), float32] */;
  %131 = cosh(%130) /* ty=Tensor[(825), float32] */;
  %132 = cast(%131, dtype="float64") /* ty=Tensor[(825), float64] */;
  %133 = %121.0;
  %134 = %128.5;
  %135 = %129.0;
  %136 = atan(%132) /* ty=Tensor[(825), float64] */;
  (%133, %134, meta[relay.Constant][4] /* ty=Tensor[(1170), int32] */, %var_8002, %135, %136)
}

def @func_1340(%var_1332: Tensor[(840, 1), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) {
  %137 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %138 = cast(%137, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %139 = cast(%var_1332, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
  %140 = cast(%var_1332, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
  %141 = reshape(%138, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %142 = reshape(%139, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %143 = reshape(%140, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %144 = @func_1208(%141, %142, %143) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %145 = %144.2;
  (%137, %145, %var_1332)
}

def @func_12123() -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %156 = fn () -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %146 = @func_11221() /* ty=(Tensor[(2, 13, 12), uint32],) */;
    %147 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
    %148 = @func_11309() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %149 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %150 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %151 = %146.0;
    %152 = %147.1;
    %153 = %148.0;
    %154 = %149.0;
    %155 = %150.0;
    (%151, %152, %153, %154, %155)
  };
  %156() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_9360() -> (Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), uint32]) {
  @func_9358() /* ty=(Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), uint32]) */
}

def @func_1212(%var_1209: Tensor[(2, 13, 12), int32], %var_1210: Tensor[(840), float32], %var_1211: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) {
  %173 = fn (%var_1177: Tensor[(2, 13, 12), int32], %var_1184: Tensor[(840), float32], %var_1204: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) {
    %157 = @func_1023() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %158 = %157.1;
    %159 = cast(%var_1177, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
    %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
    %161 = cast(%158, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
    %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %163 = cast(%var_1184, dtype="float32") /* ty=Tensor[(840), float32] */;
    %164 = reshape(%163, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %165 = @func_866(%164) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32]) */;
    %166 = cast(%var_1204, dtype="uint64") /* ty=Tensor[(840), uint64] */;
    %167 = shape_of(%var_1184, dtype="int32") /* ty=Tensor[(1), int32] */;
    %168 = cast(%var_1184, dtype="uint64") /* ty=Tensor[(840), uint64] */;
    %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %170 = logical_and(%161, %162) /* ty=Tensor[(2, 13, 12), bool] */;
    %171 = %165.0;
    %172 = add(%168, %169) /* ty=Tensor[(840), uint64] */;
    (%170, %171, %172)
  };
  %173(%var_1209, %var_1210, %var_1211) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */
}

def @func_12194(%var_12193: Tensor[(4, 11, 5), float32]) -> (Tensor[(4, 11, 5), float32],) {
  %176 = fn (%var_12184: Tensor[(4, 11, 5), float32]) -> (Tensor[(4, 11, 5), float32],) {
    %174 = cast(%var_12184, dtype="float32") /* ty=Tensor[(4, 11, 5), float32] */;
    %175 = sinh(%174) /* ty=Tensor[(4, 11, 5), float32] */;
    (%175,)
  };
  %176(%var_12193) /* ty=(Tensor[(4, 11, 5), float32],) */
}

def @func_4553() -> Tensor[(2, 13, 12), uint32] {
  %177 = @func_2693() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) */;
  %177.5
}

def @func_1862(%var_1859: bool, %var_1860: Tensor[(3, 10, 10), bool], %var_1861: Tensor[(2, 420), float32]) -> (Tensor[(3, 10, 10), bool], Tensor[(3, 10, 10), int16], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32]) {
  %194 = fn (%var_1834: bool, %var_1835: Tensor[(3, 10, 10), bool], %var_1849: Tensor[(2, 420), float32]) -> (Tensor[(3, 10, 10), bool], Tensor[(3, 10, 10), int16], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32]) {
    %178 = cast(%var_1834, dtype="bool") /* ty=bool */;
    %179 = cast(%var_1835, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
    %180 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 10, 10), bool] */, dtype="int16") /* ty=Tensor[(3, 10, 10), int16] */;
    %181 = shape_of(%var_1835, dtype="int32") /* ty=Tensor[(3), int32] */;
    %182 = cast(%var_1835, dtype="int16") /* ty=Tensor[(3, 10, 10), int16] */;
    %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %184 = cast(%var_1849, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
    %185 = reshape(%184, newshape=[840, 1]) /* ty=Tensor[(840, 1), float32] */;
    %186 = @func_1340(%185) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) */;
    %187 = cast(%var_1849, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
    %188 = reshape(%187, newshape=[1, 840]) /* ty=Tensor[(1, 840), float32] */;
    %189 = @func_1607(%188) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %190 = logical_and(%178, %179) /* ty=Tensor[(3, 10, 10), bool] */;
    %191 = right_shift(%182, %183) /* ty=Tensor[(3, 10, 10), int16] */;
    %192 = %186.0;
    %193 = %189.1;
    (%190, %191, %192, %var_1849, %193)
  };
  %194(%var_1859, %var_1860, %var_1861) /* ty=(Tensor[(3, 10, 10), bool], Tensor[(3, 10, 10), int16], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32]) */
}

def @func_7062() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int16]) {
  %199 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int16]) {
    %195 = @func_6455() /* ty=(Tensor[(2, 13, 12), int16],) */;
    %196 = @func_3292() /* ty=Tensor[(2, 13, 12), int32] */;
    %197 = @func_2287() /* ty=Tensor[(2, 13, 12), float64] */;
    %198 = %195.0;
    (%196, %197, %198)
  };
  %199() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int16]) */
}

def @func_13066() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  @func_13064() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_9013() -> (Tensor[(2, 13, 12), int32], Tensor[(2704), float64]) {
  %209 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2704), float64]) {
    %200 = cast(meta[relay.Constant][6] /* ty=Tensor[(2704), float32] */, dtype="float32") /* ty=Tensor[(2704), float32] */;
    %201 = reshape(%200, newshape=[16, 13, 13]) /* ty=Tensor[(16, 13, 13), float32] */;
    %202 = @func_6370(%201) /* ty=Tensor[(16, 13, 13), float32] */;
    %203 = cast(%202, dtype="float64") /* ty=Tensor[(16, 13, 13), float64] */;
    %204 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(2704), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %205 = cast(meta[relay.Constant][6] /* ty=Tensor[(2704), float32] */, dtype="float64") /* ty=Tensor[(2704), float64] */;
    %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?), float64] */;
    %207 = @func_7396() /* ty=Tensor[(2, 13, 12), int32] */;
    %208 = floor_divide(%205, %206) /* ty=Tensor[(2704), float64] */;
    (%207, %208)
  };
  %209() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2704), float64]) */
}

def @func_5494() -> Tensor[(2, 13, 12), int32] {
  @func_5492() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_3623(%var_3622: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) {
  %220 = fn (%var_3597: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) {
    %210 = @func_1915() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
    %211 = cast(%var_3597, dtype="float32") /* ty=Tensor[(840), float32] */;
    %212 = reshape(%211, newshape=[840, 1]) /* ty=Tensor[(840, 1), float32] */;
    %213 = @func_1340(%212) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) */;
    %214 = cast(meta[relay.Constant][7] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
    %215 = reshape(%214, newshape=[825]) /* ty=Tensor[(825), float32] */;
    %216 = @func_2407(%215) /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float32], Tensor[(2, 13, 12), int32]) */;
    %217 = %210.0;
    %218 = %213.0;
    %219 = %216.0;
    (%217, %218, %var_3597, %219, meta[relay.Constant][7] /* ty=Tensor[(825), float32] */)
  };
  %220(%var_3622) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) */
}

def @func_2287() -> Tensor[(2, 13, 12), float64] {
  %221 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %222 = %221.0;
  %223 = cast(%222, dtype="float64") /* ty=Tensor[(2, 13, 12), float64] */;
  sigmoid(%223) /* ty=Tensor[(2, 13, 12), float64] */
}

def @func_10726(%var_10725: Tensor[(14, 2, 1), float64]) -> (Tensor[(14, 2, ?), int64], Tensor[(14, 2, ?), int32]) {
  %240 = fn (%var_10684: Tensor[(14, 2, 1), float64]) -> (Tensor[(14, 2, ?), int64], Tensor[(14, 2, ?), int32]) {
    %224 = cast(%var_10684, dtype="float64") /* ty=Tensor[(14, 2, 1), float64] */;
    %225 = acosh(%224) /* ty=Tensor[(14, 2, 1), float64] */;
    %226 = cast(%225, dtype="float64") /* ty=Tensor[(14, 2, 1), float64] */;
    %227 = sigmoid(%226) /* ty=Tensor[(14, 2, 1), float64] */;
    %228 = cast(%225, dtype="float32") /* ty=Tensor[(14, 2, 1), float32] */;
    %229 = cosh(%228) /* ty=Tensor[(14, 2, 1), float32] */;
    %230 = cast(%229, dtype="int64") /* ty=Tensor[(14, 2, 1), int64] */;
    %231 = shape_of(%227, dtype="int32") /* ty=Tensor[(3), int32] */;
    %232 = cast(%227, dtype="int64") /* ty=Tensor[(14, 2, 1), int64] */;
    %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %234 = cast(%var_10684, dtype="int32") /* ty=Tensor[(14, 2, 1), int32] */;
    %235 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
    %236 = cast(%225, dtype="int32") /* ty=Tensor[(14, 2, 1), int32] */;
    %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %238 = bitwise_or(%232, %233) /* ty=Tensor[(14, 2, ?), int64] */;
    %239 = left_shift(%236, %237) /* ty=Tensor[(14, 2, ?), int32] */;
    (%238, %239)
  };
  %240(%var_10725) /* ty=(Tensor[(14, 2, ?), int64], Tensor[(14, 2, ?), int32]) */
}

def @func_12663() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32]) {
  %250 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32]) {
    %241 = @func_7261() /* ty=Tensor[(2, 13, 12), int32] */;
    %242 = cast(%241, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
    %243 = cast(meta[relay.Constant][8] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %244 = cast(meta[relay.Constant][8] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %245 = reshape(%242, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
    %246 = reshape(%243, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %247 = reshape(%244, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %248 = @func_1208(%245, %246, %247) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
    %249 = %248.1;
    (%241, %249, meta[relay.Constant][8] /* ty=Tensor[(840), float32] */)
  };
  %250() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32]) */
}

def @func_653() -> Tensor[(2, 13, 12), int32] {
  @func_651() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_378() -> Tensor[(2, 13, 12), int32] {
  %251 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %251.0
}

def @func_12509(%var_12508: Tensor[(594, 1), int8]) -> (Tensor[(2, 13, 12), int32], Tensor[(312), int32], Tensor[(594, 1), int8], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32]) {
  %266 = fn (%var_12498: Tensor[(594, 1), int8]) -> (Tensor[(2, 13, 12), int32], Tensor[(312), int32], Tensor[(594, 1), int8], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32]) {
    %252 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %253 = cast(%var_12498, dtype="int8") /* ty=Tensor[(594, 1), int8] */;
    %254 = cast(%var_12498, dtype="int8") /* ty=Tensor[(594, 1), int8] */;
    %255 = %252.0;
    %256 = cast(%255, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
    %257 = reshape(%253, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), int8] */;
    %258 = reshape(%254, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), int8] */;
    %259 = reshape(%256, newshape=[312]) /* ty=Tensor[(312), int32] */;
    %260 = @func_12264(%257, %258, %259) /* ty=(Tensor[(9, 6, 11), int8], Tensor[(2, 13, 12), int32], Tensor[(312), int32], Tensor[(840), float32]) */;
    %261 = @func_9546() /* ty=(Tensor[(2, 13, 12), float32],) */;
    %262 = @func_7294() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), float64], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32]) */;
    %263 = %260.2;
    %264 = %261.0;
    %265 = %262.3;
    (%255, %263, %var_12498, %264, %265)
  };
  %266(%var_12508) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(312), int32], Tensor[(594, 1), int8], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32]) */
}

def @func_392() -> (Tensor[(2, 13, 12), int32],) {
  %268 = fn () -> (Tensor[(2, 13, 12), int32],) {
    %267 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
    (%267,)
  };
  %268() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_223() -> (Tensor[(2, 13, 12), int32],) {
  %269 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 13, 12), int32] */, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %270 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(2, 13, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 13, 12), int32] */, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %273 = multiply(%271, %272) /* ty=Tensor[(2, 13, 12), int32] */;
  (%273,)
}

def @func_3250() -> Tensor[(2, 13, 12), bool] {
  %274 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
  %274.0
}

def @func_8767(%var_8765: Tensor[(4, 10, 11), float64], %var_8766: Tensor[(528), float64]) -> (Tensor[(4, 10, 11), float64], Tensor[(16, 3, 11), bool], Tensor[(528), float64], Tensor[(2, 13, 12), int32]) {
  %285 = fn (%var_8740: Tensor[(4, 10, 11), float64], %var_8753: Tensor[(528), float64]) -> (Tensor[(4, 10, 11), float64], Tensor[(16, 3, 11), bool], Tensor[(528), float64], Tensor[(2, 13, 12), int32]) {
    %275 = cast(%var_8740, dtype="float64") /* ty=Tensor[(4, 10, 11), float64] */;
    %276 = cast(%var_8753, dtype="float64") /* ty=Tensor[(528), float64] */;
    %277 = cast(%var_8753, dtype="float64") /* ty=Tensor[(528), float64] */;
    %278 = reshape(%276, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float64] */;
    %279 = reshape(%277, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float64] */;
    %280 = @func_7502(%278, %279) /* ty=(Tensor[(16, 3, 11), bool], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
    %281 = @func_1915() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
    %282 = acos(%275) /* ty=Tensor[(4, 10, 11), float64] */;
    %283 = %280.0;
    %284 = %281.0;
    (%282, %283, %var_8753, %284)
  };
  %285(%var_8765, %var_8766) /* ty=(Tensor[(4, 10, 11), float64], Tensor[(16, 3, 11), bool], Tensor[(528), float64], Tensor[(2, 13, 12), int32]) */
}

def @func_2695() -> (Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) {
  @func_2693() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) */
}

def @func_8037(%var_8035: Tensor[(840), float32], %var_8036: Tensor[(825), float32]) -> (Tensor[(2, 13, 12), int16], Tensor[(840), float32], Tensor[(1170), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float64]) {
  @func_8033(%var_8035, %var_8036) /* ty=(Tensor[(2, 13, 12), int16], Tensor[(840), float32], Tensor[(1170), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float64]) */
}

def @func_3655(%var_3654: Tensor[(3, 7, 11), int16]) -> Tensor[(3, 7, 11), int16] {
  %290 = fn (%var_3648: Tensor[(3, 7, 11), int16]) -> Tensor[(3, 7, 11), int16] {
    %286 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 7, 11), int16] */, dtype="int16") /* ty=Tensor[(3, 7, 11), int16] */;
    %287 = shape_of(%var_3648, dtype="int32") /* ty=Tensor[(3), int32] */;
    %288 = cast(%var_3648, dtype="int16") /* ty=Tensor[(3, 7, 11), int16] */;
    %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    subtract(%288, %289) /* ty=Tensor[(3, 7, 11), int16] */
  };
  %290(%var_3654) /* ty=Tensor[(3, 7, 11), int16] */
}

def @func_9232() -> (Tensor[(2, 13, 12), bool], Tensor[(4, 13, 4), bool], bool) {
  @func_9230() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(4, 13, 4), bool], bool) */
}

def @func_4675() -> Tensor[(2, 13, 12), int32] {
  %291 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %291.0
}

def @func_12328() -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), float32]) {
  @func_12326() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), float32]) */
}

def @func_6422() -> (Tensor[(2, 13, 12), int32],) {
  %292 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %293 = %292.1;
  (%293,)
}

def @func_8811() -> (Tensor[(840), float32], Tensor[(840), uint8]) {
  @func_8809() /* ty=(Tensor[(840), float32], Tensor[(840), uint8]) */
}

def @func_6680() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), int32], Tensor[(840, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(4, 420), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8) {
  %316 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), int32], Tensor[(840, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(4, 420), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8) {
    %294 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %295 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %296 = @func_6455() /* ty=(Tensor[(2, 13, 12), int16],) */;
    %297 = cast(meta[relay.Constant][12] /* ty=Tensor[(840, 1), float32] */, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
    %298 = reshape(%297, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %299 = @func_3621(%298) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) */;
    %300 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 420), uint8] */, dtype="uint8") /* ty=Tensor[(4, 420), uint8] */;
    %301 = reshape(%300, newshape=[1680]) /* ty=Tensor[(1680), uint8] */;
    %302 = @func_3842(%301) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8]) */;
    %303 = @func_5627() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), float32]) */;
    %304 = cast(meta[relay.Constant][14] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %305 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 420), uint8] */, dtype="uint8") /* ty=Tensor[(4, 420), uint8] */;
    %306 = reshape(%304, newshape=[]) /* ty=uint8 */;
    %307 = reshape(%305, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
    %308 = @func_695(%306, %307) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
    %309 = %294.0;
    %310 = %295.0;
    %311 = %296.0;
    %312 = %299.0;
    %313 = %302.0;
    %314 = %303.0;
    %315 = %308.0;
    (%309, %310, %311, %312, meta[relay.Constant][12] /* ty=Tensor[(840, 1), float32] */, %313, meta[relay.Constant][13] /* ty=Tensor[(4, 420), uint8] */, %314, %315, meta[relay.Constant][14] /* ty=uint8 */)
  };
  %316() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), int32], Tensor[(840, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(4, 420), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8) */
}

def @func_9300() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %321 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %317 = @func_2310() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %318 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %319 = %317.0;
    %320 = %318.0;
    (%319, %320)
  };
  %321() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_13201() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32]) {
  %322 = @func_5284() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %323 = @func_12745() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32]) */;
  %324 = @func_9327() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %325 = %322.0;
  %326 = %323.1;
  %327 = @func_7019() /* ty=Tensor[(2, 13, 12), uint32] */;
  %328 = %324.0;
  (%325, %326, %327, %328)
}

def @func_10415() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
  @func_10413() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */
}

def @func_13313() -> (Tensor[(2, 13, 12), uint32],) {
  @func_13311() /* ty=(Tensor[(2, 13, 12), uint32],) */
}

def @func_2560(%var_2558: Tensor[(2, 420), float32], %var_2559: Tensor[(2, 420), float32]) -> (Tensor[(2, 13, 12), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 420), bool]) {
  %339 = fn (%var_2544: Tensor[(2, 420), float32], %var_2546: Tensor[(2, 420), float32]) -> (Tensor[(2, 13, 12), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 420), bool]) {
    %329 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
    %330 = cast(%var_2544, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
    %331 = reshape(%330, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
    %332 = cast(%var_2546, dtype="bool") /* ty=Tensor[(2, 420), bool] */;
    %333 = shape_of(%var_2544, dtype="int32") /* ty=Tensor[(2), int32] */;
    %334 = cast(%var_2544, dtype="bool") /* ty=Tensor[(2, 420), bool] */;
    %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %336 = %329.1;
    %337 = @func_77(%331) /* ty=Tensor[(12, 7, 10), float32] */;
    %338 = less(%334, %335) /* ty=Tensor[(2, 420), bool] */;
    (%336, %337, %338)
  };
  %339(%var_2558, %var_2559) /* ty=(Tensor[(2, 13, 12), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 420), bool]) */
}

def @func_6830() -> (Tensor[(48), float32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), uint32]) {
  %345 = fn () -> (Tensor[(48), float32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), uint32]) {
    %340 = @func_6562() /* ty=(Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), float32], Tensor[(48), float32], Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), int32]) */;
    %341 = @func_6455() /* ty=(Tensor[(2, 13, 12), int16],) */;
    %342 = %340.2;
    %343 = %341.0;
    %344 = @func_5357() /* ty=Tensor[(2, 13, 12), uint32] */;
    (%342, %343, %344)
  };
  %345() /* ty=(Tensor[(48), float32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), uint32]) */
}

def @func_11478() -> Tensor[(2, 13, 12), int32] {
  @func_11476() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_2616() -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_5147(%var_5145: Tensor[(1680), uint8]) -> (Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8, Tensor[(1680), uint8], Tensor[(2, 13, 12), int32]) {
  @func_5144(%var_5145) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8, Tensor[(1680), uint8], Tensor[(2, 13, 12), int32]) */
}

def @func_7859(%var_7852: Tensor[(10), float64], %var_7853: Tensor[(60, 14), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(15, 11, 5), bool], Tensor[(10), float64], Tensor[(60, 14), float32]) {
  %346 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %347 = cast(%var_7852, dtype="float64") /* ty=Tensor[(10), float64] */;
  %348 = cast(%var_7853, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
  %349 = reshape(%347, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %350 = reshape(%348, newshape=[60, 14]) /* ty=Tensor[(60, 14), float32] */;
  %351 = @func_1828(%349, %350) /* ty=(Tensor[(15, 11, 5), bool], Tensor[(825), float32], Tensor[(2, 13, 12), int32], Tensor[(60, 14), float32], Tensor[(840), uint8], Tensor[(2, ?, 5), int32], Tensor[(2, 13, 12), int32], Tensor[(2, ?, 5), float32]) */;
  %352 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  %353 = %346.1;
  %354 = %351.0;
  (%352, %353, %354, %var_7852, %var_7853)
}

def @func_12966() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], bool, bool, Tensor[(2, 13, 12), int32]) {
  @func_12964() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], bool, bool, Tensor[(2, 13, 12), int32]) */
}

def @func_9281(%var_9279: Tensor[(840, 1), uint8], %var_9280: Tensor[(48), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840, 1), uint8], Tensor[(48), float32]) {
  @func_9277(%var_9279, %var_9280) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840, 1), uint8], Tensor[(48), float32]) */
}

def @func_7397() -> Tensor[(2, 13, 12), int32] {
  %356 = fn () -> Tensor[(2, 13, 12), int32] {
    %355 = @func_6234() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %355.0
  };
  %356() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_7021() -> Tensor[(2, 13, 12), uint32] {
  @func_7019() /* ty=Tensor[(2, 13, 12), uint32] */
}

def @func_3431(%var_3429: bool, %var_3430: Tensor[(840), float32]) -> (Tensor[(4, 13, 14), float32], Tensor[(3, 10, 10), int16], bool, Tensor[(300), bool], Tensor[(840), float32], Tensor[(840), uint64]) {
  @func_3427(%var_3429, %var_3430) /* ty=(Tensor[(4, 13, 14), float32], Tensor[(3, 10, 10), int16], bool, Tensor[(300), bool], Tensor[(840), float32], Tensor[(840), uint64]) */
}

def @func_2614() -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %357 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %358 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 70), float32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %359 = reshape(%358, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %360 = @func_351(%359) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
  %361 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %362 = %357.1;
  %363 = %360.0;
  %364 = %361.4;
  %365 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  (%362, %363, meta[relay.Constant][15] /* ty=Tensor[(12, 70), float32] */, %364, %365)
}

def @func_6563() -> (Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), float32], Tensor[(48), float32], Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), int32]) {
  %376 = fn () -> (Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), float32], Tensor[(48), float32], Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), int32]) {
    %366 = @func_3714() /* ty=(Tensor[(2, 13, 12), float32],) */;
    %367 = cast(meta[relay.Constant][16] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %368 = reshape(%367, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float32] */;
    %369 = @func_5335(%368) /* ty=(Tensor[(12, 2, 2), float32], Tensor[(2, 13, 12), int32]) */;
    %370 = %369.0;
    %371 = cast(%370, dtype="float64") /* ty=Tensor[(12, 2, 2), float64] */;
    %372 = @func_2287() /* ty=Tensor[(2, 13, 12), float64] */;
    %373 = %366.0;
    %374 = asin(%371) /* ty=Tensor[(12, 2, 2), float64] */;
    %375 = @func_4675() /* ty=Tensor[(2, 13, 12), int32] */;
    (%372, %373, meta[relay.Constant][16] /* ty=Tensor[(48), float32] */, %374, %375)
  };
  %376() /* ty=(Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), float32], Tensor[(48), float32], Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), int32]) */
}

def @func_3845(%var_3843: Tensor[(1680), uint8]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8]) {
  @func_3842(%var_3843) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8]) */
}

def @func_899() -> (Tensor[(2, 13, 12), int32],) {
  @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_9629() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) {
  %377 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %378 = @func_4359() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */;
  %379 = %377.0;
  %380 = %378.3;
  (%379, %380)
}

def @func_7451() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  @func_7449() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_6456() -> (Tensor[(2, 13, 12), int16],) {
  %383 = fn () -> (Tensor[(2, 13, 12), int16],) {
    %381 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
    %382 = %381.0;
    (%382,)
  };
  %383() /* ty=(Tensor[(2, 13, 12), int16],) */
}

def @func_11929(%var_11914: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
  %384 = @func_6752() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %385 = cast(%var_11914, dtype="float32") /* ty=Tensor[(840), float32] */;
  %386 = reshape(%385, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %387 = @func_2844(%386) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %388 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
  %389 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %390 = %384.0;
  %391 = %387.2;
  %392 = %388.0;
  %393 = %389.0;
  (%390, %391, %var_11914, %392, %393)
}

def @func_11932(%var_11930: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
  @func_11929(%var_11930) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */
}

def @func_11753() -> (Tensor[(2, 13, 12), int32],) {
  @func_11751() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_10140(%var_10136: Tensor[(9, 7, 6), int64]) -> (Tensor[(9, 7, 6), int64],) {
  %394 = cast(%var_10136, dtype="int64") /* ty=Tensor[(9, 7, 6), int64] */;
  %395 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(9, 7, 6), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 7, 6), int64] */, dtype="int64") /* ty=Tensor[(9, 7, 6), int64] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %398 = add(%396, %397) /* ty=Tensor[(9, 7, 6), int64] */;
  (%398,)
}

def @func_3715() -> (Tensor[(2, 13, 12), float32],) {
  %401 = fn () -> (Tensor[(2, 13, 12), float32],) {
    %399 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
    %400 = %399.2;
    (%400,)
  };
  %401() /* ty=(Tensor[(2, 13, 12), float32],) */
}

def @func_9531() -> (Tensor[(2, 13, 12), int32],) {
  %402 = @func_3513() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %403 = %402.0;
  (%403,)
}

def @func_2229() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
  %408 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
    %404 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %405 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
    %406 = %404.0;
    %407 = %405.2;
    (%406, %407)
  };
  %408() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */
}

def @func_9871() -> (Tensor[(2, 13, 12), int32],) {
  %409 = @func_8475() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
  %410 = %409.0;
  (%410,)
}

def @func_1607(%var_1568: Tensor[(1, 840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %411 = cast(%var_1568, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
  %412 = reshape(%411, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %413 = @func_866(%412) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32]) */;
  %414 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
  %415 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %416 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  %417 = %413.2;
  %418 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %419 = %414.1;
  (%415, %416, %417, %var_1568, %418, %419)
}

def @func_12445() -> (Tensor[(2, 13, 12), int32],) {
  %420 = @func_4103() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %421 = %420.0;
  (%421,)
}

def @func_1024() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %424 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %422 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
    %423 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
    (%422, %423)
  };
  %424() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_8601() -> (Tensor[(2, 13, 12), int32],) {
  %426 = fn () -> (Tensor[(2, 13, 12), int32],) {
    %425 = @func_3292() /* ty=Tensor[(2, 13, 12), int32] */;
    (%425,)
  };
  %426() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_13323() -> Tensor[(2, 13, 12), int32] {
  %427 = fn () -> Tensor[(2, 13, 12), int32] {
    @func_10946() /* ty=Tensor[(2, 13, 12), int32] */
  };
  %427() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_5357() -> Tensor[(2, 13, 12), uint32] {
  %428 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %428.0
}

def @func_1832(%var_1830: Tensor[(2, 1, 5), float64], %var_1831: Tensor[(60, 14), float32]) -> (Tensor[(15, 11, 5), bool], Tensor[(825), float32], Tensor[(2, 13, 12), int32], Tensor[(60, 14), float32], Tensor[(840), uint8], Tensor[(2, ?, 5), int32], Tensor[(2, 13, 12), int32], Tensor[(2, ?, 5), float32]) {
  @func_1828(%var_1830, %var_1831) /* ty=(Tensor[(15, 11, 5), bool], Tensor[(825), float32], Tensor[(2, 13, 12), int32], Tensor[(60, 14), float32], Tensor[(840), uint8], Tensor[(2, ?, 5), int32], Tensor[(2, 13, 12), int32], Tensor[(2, ?, 5), float32]) */
}

def @func_11311() -> (Tensor[(2, 13, 12), int32],) {
  @func_11309() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_2888() -> (Tensor[(2, 13, 12), bool],) {
  %435 = fn () -> (Tensor[(2, 13, 12), bool],) {
    %429 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
    %430 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 13, 12), int32] */, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
    %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
    %432 = cast(%429, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
    %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %434 = greater_equal(%432, %433) /* ty=Tensor[(2, 13, 12), bool] */;
    (%434,)
  };
  %435() /* ty=(Tensor[(2, 13, 12), bool],) */
}

def @func_11179() -> (Tensor[(2, 13, 12), uint32],) {
  %436 = @func_5357() /* ty=Tensor[(2, 13, 12), uint32] */;
  (%436,)
}

def @func_1170(%var_1128: Tensor[(15, 11, 5), float32]) -> (Tensor[(15, 11, 5), float64], Tensor[(15, 11, 5), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %437 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 5), float32] */;
  %438 = atanh(%437) /* ty=Tensor[(15, 11, 5), float32] */;
  %439 = cast(%var_1128, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
  %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%438, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %443 = power(%441, %442) /* ty=Tensor[(15, 11, 5), float64] */;
  %444 = cast(%443, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
  %445 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 11, 5), float32] */, dtype="bool") /* ty=Tensor[(15, 11, 5), bool] */;
  %446 = shape_of(%443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%443, dtype="bool") /* ty=Tensor[(15, 11, 5), bool] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %449 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %450 = asinh(%444) /* ty=Tensor[(15, 11, 5), float64] */;
  %451 = logical_or(%447, %448) /* ty=Tensor[(15, 11, 5), bool] */;
  %452 = %449.0;
  %453 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %454 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  (%450, %451, %452, %453, %454)
}

def @func_4179() -> (Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
  %455 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %456 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %457 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %458 = %455.2;
  %459 = %456.0;
  %460 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
  %461 = %457.0;
  (%458, %459, %460, %461)
}

def @func_3554() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) {
  %467 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) {
    %462 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %463 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
    %464 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
    %465 = %462.0;
    %466 = %463.2;
    (%464, %465, %466)
  };
  %467() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */
}

def @func_7262() -> Tensor[(2, 13, 12), int32] {
  %468 = fn () -> Tensor[(2, 13, 12), int32] {
    @func_598() /* ty=Tensor[(2, 13, 12), int32] */
  };
  %468() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_12269(%var_12266: Tensor[(9, 6, 11), int8], %var_12267: Tensor[(9, 6, 11), int8], %var_12268: Tensor[(312), int32]) -> (Tensor[(9, 6, 11), int8], Tensor[(2, 13, 12), int32], Tensor[(312), int32], Tensor[(840), float32]) {
  @func_12264(%var_12266, %var_12267, %var_12268) /* ty=(Tensor[(9, 6, 11), int8], Tensor[(2, 13, 12), int32], Tensor[(312), int32], Tensor[(840), float32]) */
}

def @func_10988(%var_10985: Tensor[(16, 6, 11), float64], %var_10986: uint64, %var_10987: Tensor[(2, 384), uint64]) -> (Tensor[(16, 6, 11), float64], Tensor[(3, 16, 16), int64], uint64, Tensor[(2, 384), uint64], Tensor[(12, 2, 2), float64]) {
  %479 = fn (%var_10968: Tensor[(16, 6, 11), float64], %var_10972: uint64, %var_10973: Tensor[(2, 384), uint64]) -> (Tensor[(16, 6, 11), float64], Tensor[(3, 16, 16), int64], uint64, Tensor[(2, 384), uint64], Tensor[(12, 2, 2), float64]) {
    %469 = cast(%var_10968, dtype="float64") /* ty=Tensor[(16, 6, 11), float64] */;
    %470 = cast(%var_10972, dtype="uint64") /* ty=uint64 */;
    %471 = cast(%var_10973, dtype="uint64") /* ty=Tensor[(2, 384), uint64] */;
    %472 = reshape(%470, newshape=[]) /* ty=uint64 */;
    %473 = reshape(%471, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), uint64] */;
    %474 = @func_10645(%472, %473) /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), int64]) */;
    %475 = @func_9358() /* ty=(Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), uint32]) */;
    %476 = sigmoid(%469) /* ty=Tensor[(16, 6, 11), float64] */;
    %477 = %474.1;
    %478 = %475.0;
    (%476, %477, %var_10972, %var_10973, %478)
  };
  %479(%var_10985, %var_10986, %var_10987) /* ty=(Tensor[(16, 6, 11), float64], Tensor[(3, 16, 16), int64], uint64, Tensor[(2, 384), uint64], Tensor[(12, 2, 2), float64]) */
}

def @func_12865() -> (Tensor[(2, 13, 12), int32],) {
  %480 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  (%480,)
}

def @func_600() -> Tensor[(2, 13, 12), int32] {
  @func_598() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_5182() -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
  %484 = fn () -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
    %481 = @func_1023() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %482 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
    %483 = %481.1;
    (%482, %483)
  };
  %484() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */
}

def @func_11638() -> Tensor[(2, 13, 12), int32] {
  @func_11636() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_5833(%var_5747: Tensor[(840), uint8], %var_5825: Tensor[(48), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(840), int8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32]) {
  %485 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
  %486 = %485.0;
  %487 = cast(%486, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %488 = reshape(%487, newshape=[312]) /* ty=Tensor[(312), int32] */;
  %489 = @func_2805(%488) /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), bool], Tensor[(312), int32]) */;
  %490 = %489.0;
  %491 = cast(%var_5747, dtype="int8") /* ty=Tensor[(840), int8] */;
  %492 = shape_of(%490, dtype="int32") /* ty=Tensor[(1), int32] */;
  %493 = cast(%490, dtype="int8") /* ty=Tensor[(840), int8] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?), int8] */;
  %495 = @func_3714() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %496 = cast(%var_5825, dtype="float32") /* ty=Tensor[(48), float32] */;
  %497 = reshape(%496, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float32] */;
  %498 = @func_5335(%497) /* ty=(Tensor[(12, 2, 2), float32], Tensor[(2, 13, 12), int32]) */;
  %499 = bitwise_and(%493, %494) /* ty=Tensor[(840), int8] */;
  %500 = @func_1656() /* ty=Tensor[(2, 13, 12), int32] */;
  %501 = @func_1656() /* ty=Tensor[(2, 13, 12), int32] */;
  %502 = %495.0;
  %503 = %498.0;
  (%486, %499, %500, %501, %502, %503, %var_5825)
}

def @func_5359() -> Tensor[(2, 13, 12), uint32] {
  @func_5357() /* ty=Tensor[(2, 13, 12), uint32] */
}

def @func_1109(%var_1096: bool) -> (Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) {
  %504 = cast(%var_1096, dtype="bool") /* ty=bool */;
  %505 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 13, 4), bool] */, dtype="bool") /* ty=Tensor[(4, 13, 4), bool] */;
  %506 = cast(%var_1096, dtype="uint8") /* ty=uint8 */;
  %507 = cast(meta[relay.Constant][21] /* ty=Tensor[(1680), uint8] */, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %508 = reshape(%506, newshape=[]) /* ty=uint8 */;
  %509 = reshape(%507, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
  %510 = @func_695(%508, %509) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
  %511 = logical_or(%504, %505) /* ty=Tensor[(4, 13, 4), bool] */;
  %512 = %510.1;
  (%511, %512, meta[relay.Constant][21] /* ty=Tensor[(1680), uint8] */)
}

def @func_1610(%var_1608: Tensor[(1, 840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  @func_1607(%var_1608) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_7891(%var_7865: Tensor[(7, 13, 8), float32], %var_7866: Tensor[(7, 13, 8), float32], %var_7889: Tensor[(2, 4), float64]) -> (Tensor[(7, 13, 8), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 4), float64]) {
  %513 = cast(%var_7866, dtype="float32") /* ty=Tensor[(7, 13, 8), float32] */;
  %514 = shape_of(%var_7865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%var_7865, dtype="float32") /* ty=Tensor[(7, 13, 8), float32] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %517 = cast(meta[relay.Constant][22] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %518 = reshape(%517, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float32] */;
  %519 = @func_5335(%518) /* ty=(Tensor[(12, 2, 2), float32], Tensor[(2, 13, 12), int32]) */;
  %520 = cast(%var_7889, dtype="float64") /* ty=Tensor[(2, 4), float64] */;
  %521 = reshape(%520, newshape=[8]) /* ty=Tensor[(8), float64] */;
  %522 = @func_5020(%521) /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(8), float64], bool, Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
  %523 = power(%515, %516) /* ty=Tensor[(7, 13, 8), float32] */;
  %524 = %519.0;
  %525 = %522.5;
  (%523, %524, meta[relay.Constant][22] /* ty=Tensor[(48), float32] */, %525, %var_7889)
}

def @func_6940() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) {
  @func_6938() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) */
}

def @func_5578(%var_5575: Tensor[(2, 13, 3), float64], %var_5576: Tensor[(2, 13, 3), float64], %var_5577: Tensor[(840), float32]) -> (Tensor[(825), float32], Tensor[(10), float64], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 3), uint8], Tensor[(2, 13, 12), int32]) {
  @func_5573(%var_5575, %var_5576, %var_5577) /* ty=(Tensor[(825), float32], Tensor[(10), float64], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 3), uint8], Tensor[(2, 13, 12), int32]) */
}

def @func_11181() -> (Tensor[(2, 13, 12), uint32],) {
  @func_11179() /* ty=(Tensor[(2, 13, 12), uint32],) */
}

def @func_2064(%var_2063: Tensor[(2, 13, 12), int32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64]) {
  %533 = fn (%var_2052: Tensor[(2, 13, 12), int32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64]) {
    %526 = @func_1656() /* ty=Tensor[(2, 13, 12), int32] */;
    %527 = cast(%var_2052, dtype="float64") /* ty=Tensor[(2, 13, 12), float64] */;
    %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
    %529 = cast(%526, dtype="float64") /* ty=Tensor[(2, 13, 12), float64] */;
    %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %531 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
    %532 = mod(%529, %530) /* ty=Tensor[(2, 13, 12), float64] */;
    (%531, %532)
  };
  %533(%var_2063) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64]) */
}

def @func_9731() -> (Tensor[(2, 13, 12), int32],) {
  %536 = fn () -> (Tensor[(2, 13, 12), int32],) {
    %534 = @func_9299() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %535 = %534.1;
    (%535,)
  };
  %536() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_9873() -> (Tensor[(2, 13, 12), int32],) {
  @func_9871() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_1636(%var_1635: Tensor[(15, 5, 16), float64]) -> (Tensor[(15, 5, 16), float64],) {
  %542 = fn (%var_1628: Tensor[(15, 5, 16), float64]) -> (Tensor[(15, 5, 16), float64],) {
    %537 = cast(%var_1628, dtype="float64") /* ty=Tensor[(15, 5, 16), float64] */;
    %538 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(15, 5, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %539 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 5, 16), float64] */;
    %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %541 = divide(%539, %540) /* ty=Tensor[(15, 5, 16), float64] */;
    (%541,)
  };
  %542(%var_1635) /* ty=(Tensor[(15, 5, 16), float64],) */
}

def @func_2047() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %547 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %543 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %544 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
    %545 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
    %546 = %543.0;
    (%544, %545, %546)
  };
  %547() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_6968() -> (Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) {
  %548 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %549 = @func_6783() /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) */;
  %550 = %548.0;
  %551 = %549.0;
  (%550, %551)
}

def @func_897() -> (Tensor[(2, 13, 12), int32],) {
  %552 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %553 = %552.0;
  (%553,)
}

def @func_6785() -> (Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) {
  @func_6783() /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) */
}

def @func_3391(%var_3389: Tensor[(6, 140), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(6, 140), float64], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) {
  @func_3388(%var_3389) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(6, 140), float64], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */
}

def @func_651() -> Tensor[(2, 13, 12), int32] {
  @func_498() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_3459() -> (Tensor[(840), float32],) {
  @func_3457() /* ty=(Tensor[(840), float32],) */
}

def @func_12517() -> (Tensor[(2, 13, 12), int32],) {
  %556 = fn () -> (Tensor[(2, 13, 12), int32],) {
    %554 = @func_9327() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %555 = %554.0;
    (%555,)
  };
  %556() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_5022(%var_5021: Tensor[(8), float64]) -> (Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(8), float64], bool, Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) {
  %571 = fn (%var_5002: Tensor[(8), float64]) -> (Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(8), float64], bool, Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) {
    %557 = @func_2693() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) */;
    %558 = %557.4;
    %559 = cast(%558, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
    %560 = cast(%var_5002, dtype="float64") /* ty=Tensor[(8), float64] */;
    %561 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %562 = reshape(%559, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %563 = reshape(%560, newshape=[8]) /* ty=Tensor[(8), float64] */;
    %564 = reshape(%561, newshape=[]) /* ty=bool */;
    %565 = @func_4909(%562, %563, %564) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(8), float64], Tensor[(2, 13, 12), float32], Tensor[(2, 420), bool], Tensor[(2, 13, 12), int32], bool) */;
    %566 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %567 = @func_2693() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) */;
    %568 = %565.0;
    %569 = %566.1;
    %570 = %567.2;
    (%558, %568, %var_5002, True /* ty=bool */, %569, %570)
  };
  %571(%var_5021) /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(8), float64], bool, Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */
}

def @func_9230() -> (Tensor[(2, 13, 12), bool], Tensor[(4, 13, 4), bool], bool) {
  %572 = @func_6938() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) */;
  %573 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %574 = reshape(%573, newshape=[]) /* ty=bool */;
  %575 = @func_1109(%574) /* ty=(Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
  %576 = %572.3;
  %577 = %575.0;
  (%576, %577, True /* ty=bool */)
}

def @func_7362(%var_7359: Tensor[(15, 3, 10), int8], %var_7360: Tensor[(15, 3, 10), int8], %var_7361: Tensor[(840), float32]) -> (Tensor[(15, 3, 10), int8], Tensor[(3, 10, 10), int16], bool, Tensor[(840), float32]) {
  %589 = fn (%var_7320: Tensor[(15, 3, 10), int8], %var_7321: Tensor[(15, 3, 10), int8], %var_7335: Tensor[(840), float32]) -> (Tensor[(15, 3, 10), int8], Tensor[(3, 10, 10), int16], bool, Tensor[(840), float32]) {
    %578 = cast(%var_7321, dtype="int8") /* ty=Tensor[(15, 3, 10), int8] */;
    %579 = shape_of(%var_7320, dtype="int32") /* ty=Tensor[(3), int32] */;
    %580 = cast(%var_7320, dtype="int8") /* ty=Tensor[(15, 3, 10), int8] */;
    %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %582 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %583 = cast(%var_7335, dtype="float32") /* ty=Tensor[(840), float32] */;
    %584 = reshape(%582, newshape=[]) /* ty=bool */;
    %585 = reshape(%583, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %586 = @func_3427(%584, %585) /* ty=(Tensor[(4, 13, 14), float32], Tensor[(3, 10, 10), int16], bool, Tensor[(300), bool], Tensor[(840), float32], Tensor[(840), uint64]) */;
    %587 = maximum(%580, %581) /* ty=Tensor[(15, 3, 10), int8] */;
    %588 = %586.1;
    (%587, %588, False /* ty=bool */, %var_7335)
  };
  %589(%var_7359, %var_7360, %var_7361) /* ty=(Tensor[(15, 3, 10), int8], Tensor[(3, 10, 10), int16], bool, Tensor[(840), float32]) */
}

def @func_1343(%var_1341: Tensor[(840, 1), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) {
  @func_1340(%var_1341) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) */
}

def @func_9465() -> (Tensor[(2, 13, 12), int32],) {
  @func_9463() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_5658() -> Tensor[(2, 13, 12), int32] {
  %590 = fn () -> Tensor[(2, 13, 12), int32] {
    @func_4675() /* ty=Tensor[(2, 13, 12), int32] */
  };
  %590() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_498() -> Tensor[(2, 13, 12), int32] {
  @func_378() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_6372(%var_6371: Tensor[(16, 13, 13), float32]) -> Tensor[(16, 13, 13), float32] {
  %592 = fn (%var_6365: Tensor[(16, 13, 13), float32]) -> Tensor[(16, 13, 13), float32] {
    %591 = cast(%var_6365, dtype="float32") /* ty=Tensor[(16, 13, 13), float32] */;
    log(%591) /* ty=Tensor[(16, 13, 13), float32] */
  };
  %592(%var_6371) /* ty=Tensor[(16, 13, 13), float32] */
}

def @func_11817(%var_11816: Tensor[(2, 14, 12), float64]) -> (Tensor[(2, 14, 12), float64], Tensor[(2, 13, 12), int32]) {
  %597 = fn (%var_11792: Tensor[(2, 14, 12), float64]) -> (Tensor[(2, 14, 12), float64], Tensor[(2, 13, 12), int32]) {
    %593 = cast(%var_11792, dtype="float64") /* ty=Tensor[(2, 14, 12), float64] */;
    %594 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %595 = erf(%593) /* ty=Tensor[(2, 14, 12), float64] */;
    %596 = %594.1;
    (%595, %596)
  };
  %597(%var_11816) /* ty=(Tensor[(2, 14, 12), float64], Tensor[(2, 13, 12), int32]) */
}

def @func_11751() -> (Tensor[(2, 13, 12), int32],) {
  %598 = @func_9730() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %599 = %598.0;
  (%599,)
}

def @func_868(%var_867: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32]) {
  %605 = fn (%var_850: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32]) {
    %600 = cast(%var_850, dtype="float32") /* ty=Tensor[(840), float32] */;
    %601 = reshape(%600, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %602 = @func_351(%601) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
    %603 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
    %604 = %602.0;
    (%603, %604, %var_850)
  };
  %605(%var_867) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32]) */
}

def @func_11881() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) {
  %614 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) {
    %606 = @func_6968() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
    %607 = cast(meta[relay.Constant][24] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %608 = reshape(%607, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %609 = @func_8245(%608) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
    %610 = @func_11179() /* ty=(Tensor[(2, 13, 12), uint32],) */;
    %611 = %606.0;
    %612 = %609.2;
    %613 = %610.0;
    (%611, %612, meta[relay.Constant][24] /* ty=Tensor[(840), float32] */, %613)
  };
  %614() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */
}

def @func_7250() -> (Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %622 = fn () -> (Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %615 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %616 = @func_4359() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */;
    %617 = @func_6611() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
    %618 = %615.2;
    %619 = %616.0;
    %620 = %617.0;
    %621 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
    (%618, %619, %620, %621)
  };
  %622() /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_13064() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %623 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %624 = @func_3965() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) */;
  %625 = %623.0;
  %626 = %624.2;
  (%625, %626)
}

def @func_8980(%var_8977: Tensor[(182, 4), float32], %var_8978: Tensor[(10), float64], %var_8979: Tensor[(12, 70), float32]) -> (Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 2, 2), float32], Tensor[(8), float64], Tensor[(15, 11, 5), bool], Tensor[(10), float64], Tensor[(12, 70), float64], Tensor[(2, 13, 12), int32], Tensor[(16, 13, 13), float32], Tensor[(2704, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(182, 4), float64]) {
  %659 = fn (%var_8882: Tensor[(182, 4), float32], %var_8898: Tensor[(10), float64], %var_8904: Tensor[(12, 70), float32]) -> (Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 2, 2), float32], Tensor[(8), float64], Tensor[(15, 11, 5), bool], Tensor[(10), float64], Tensor[(12, 70), float64], Tensor[(2, 13, 12), int32], Tensor[(16, 13, 13), float32], Tensor[(2704, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(182, 4), float64]) {
    %627 = @func_7061() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int16]) */;
    %628 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %629 = cast(%var_8882, dtype="float32") /* ty=Tensor[(182, 4), float32] */;
    %630 = cast(%var_8882, dtype="float32") /* ty=Tensor[(182, 4), float32] */;
    %631 = cast(meta[relay.Constant][25] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
    %632 = reshape(%629, newshape=[7, 13, 8]) /* ty=Tensor[(7, 13, 8), float32] */;
    %633 = reshape(%630, newshape=[7, 13, 8]) /* ty=Tensor[(7, 13, 8), float32] */;
    %634 = reshape(%631, newshape=[2, 4]) /* ty=Tensor[(2, 4), float64] */;
    %635 = @func_7891(%632, %633, %634) /* ty=(Tensor[(7, 13, 8), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 4), float64]) */;
    %636 = cast(%var_8898, dtype="float64") /* ty=Tensor[(10), float64] */;
    %637 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 70), float32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
    %638 = reshape(%636, newshape=[10]) /* ty=Tensor[(10), float64] */;
    %639 = reshape(%637, newshape=[60, 14]) /* ty=Tensor[(60, 14), float32] */;
    %640 = @func_7859(%638, %639) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(15, 11, 5), bool], Tensor[(10), float64], Tensor[(60, 14), float32]) */;
    %641 = cast(%var_8904, dtype="float64") /* ty=Tensor[(12, 70), float64] */;
    %642 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(12, 70), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %643 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 70), float32] */, dtype="float64") /* ty=Tensor[(12, 70), float64] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %645 = @func_5907() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(312), int32]) */;
    %646 = cast(meta[relay.Constant][27] /* ty=Tensor[(2704, 1), float32] */, dtype="float32") /* ty=Tensor[(2704, 1), float32] */;
    %647 = reshape(%646, newshape=[16, 13, 13]) /* ty=Tensor[(16, 13, 13), float32] */;
    %648 = @func_7176() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %649 = cast(%var_8882, dtype="float64") /* ty=Tensor[(182, 4), float64] */;
    %650 = %627.1;
    %651 = %628.0;
    %652 = %635.1;
    %653 = %640.2;
    %654 = multiply(%643, %644) /* ty=Tensor[(12, 70), float64] */;
    %655 = %645.0;
    %656 = @func_6370(%647) /* ty=Tensor[(16, 13, 13), float32] */;
    %657 = %648.1;
    %658 = sinh(%649) /* ty=Tensor[(182, 4), float64] */;
    (%650, %651, %652, meta[relay.Constant][25] /* ty=Tensor[(8), float64] */, %653, %var_8898, %654, %655, %656, meta[relay.Constant][27] /* ty=Tensor[(2704, 1), float32] */, %657, %658)
  };
  %659(%var_8977, %var_8978, %var_8979) /* ty=(Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 2, 2), float32], Tensor[(8), float64], Tensor[(15, 11, 5), bool], Tensor[(10), float64], Tensor[(12, 70), float64], Tensor[(2, 13, 12), int32], Tensor[(16, 13, 13), float32], Tensor[(2704, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(182, 4), float64]) */
}

def @func_12385() -> (Tensor[(2, 13, 12), int32],) {
  %662 = fn () -> (Tensor[(2, 13, 12), int32],) {
    %660 = @func_10899() /* ty=(Tensor[(11, 9, 5), uint16], Tensor[(840), uint8], Tensor[(11, 9, 5), float64], Tensor[(2, 13, 12), int32]) */;
    %661 = %660.3;
    (%661,)
  };
  %662() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_10215() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) {
  %665 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) {
    %663 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
    %664 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
    (%663, %664)
  };
  %665() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) */
}

def @func_10762() -> (Tensor[(2, 13, 12), int32],) {
  %666 = @func_7249() /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %667 = %666.2;
  (%667,)
}

def @func_7810() -> Tensor[(2, 13, 12), int16] {
  %668 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
  %668.0
}

def @func_2409(%var_2408: Tensor[(825), float32]) -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float32], Tensor[(2, 13, 12), int32]) {
  %681 = fn (%var_2372: Tensor[(825), float32]) -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float32], Tensor[(2, 13, 12), int32]) {
    %669 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
    %670 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
    %671 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
    %672 = cast(%var_2372, dtype="float32") /* ty=Tensor[(825), float32] */;
    %673 = reshape(%672, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), float32] */;
    %674 = @func_1170(%673) /* ty=(Tensor[(15, 11, 5), float64], Tensor[(15, 11, 5), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %675 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
    %676 = %669.1;
    %677 = %670.1;
    %678 = %671.1;
    %679 = %674.3;
    %680 = %675.0;
    (%676, %677, %678, %679, %var_2372, %680)
  };
  %681(%var_2408) /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float32], Tensor[(2, 13, 12), int32]) */
}

def @func_5338(%var_5336: Tensor[(12, 2, 2), float32]) -> (Tensor[(12, 2, 2), float32], Tensor[(2, 13, 12), int32]) {
  @func_5335(%var_5336) /* ty=(Tensor[(12, 2, 2), float32], Tensor[(2, 13, 12), int32]) */
}

def @func_7627() -> Tensor[(2, 13, 12), int32] {
  @func_7625() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_6938() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool]) {
  %682 = @func_3801() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %683 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %684 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %685 = %682.2;
  %686 = cast(%685, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %687 = reshape(%686, newshape=[312]) /* ty=Tensor[(312), int32] */;
  %688 = @func_2805(%687) /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), bool], Tensor[(312), int32]) */;
  %689 = %683.0;
  %690 = %684.0;
  %691 = %688.1;
  (%685, %689, %690, %691)
}

def @func_4142(%var_4141: Tensor[(1, 3, 7), float64]) -> (Tensor[(1, 3, 7), float64],) {
  %694 = fn (%var_4132: Tensor[(1, 3, 7), float64]) -> (Tensor[(1, 3, 7), float64],) {
    %692 = cast(%var_4132, dtype="float64") /* ty=Tensor[(1, 3, 7), float64] */;
    %693 = log10(%692) /* ty=Tensor[(1, 3, 7), float64] */;
    (%693,)
  };
  %694(%var_4141) /* ty=(Tensor[(1, 3, 7), float64],) */
}

def @func_10250() -> (Tensor[(420, 2), float32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) {
  %703 = fn () -> (Tensor[(420, 2), float32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) {
    %695 = @func_3965() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) */;
    %696 = %695.4;
    %697 = cast(%696, dtype="float32") /* ty=Tensor[(420, 2), float32] */;
    %698 = cast(meta[relay.Constant][28] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %699 = reshape(%698, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
    %700 = @func_1634(%699) /* ty=(Tensor[(15, 5, 16), float64],) */;
    %701 = asin(%697) /* ty=Tensor[(420, 2), float32] */;
    %702 = %700.0;
    (%701, %702, meta[relay.Constant][28] /* ty=Tensor[(1200), float64] */)
  };
  %703() /* ty=(Tensor[(420, 2), float32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) */
}

def @func_698(%var_696: uint8, %var_697: Tensor[(8, 14, 15), uint8]) -> (Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) {
  %708 = fn (%var_682: uint8, %var_683: Tensor[(8, 14, 15), uint8]) -> (Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) {
    %704 = cast(%var_682, dtype="bool") /* ty=bool */;
    %705 = cast(%var_683, dtype="bool") /* ty=Tensor[(8, 14, 15), bool] */;
    %706 = less(%704, %705) /* ty=Tensor[(8, 14, 15), bool] */;
    %707 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
    (%706, %707)
  };
  %708(%var_696, %var_697) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */
}

def @func_3114(%var_3113: Tensor[(10), float64]) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(10), float64], Tensor[(840), uint8]) {
  %718 = fn (%var_3053: Tensor[(10), float64]) -> (Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(10), float64], Tensor[(840), uint8]) {
    %709 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
    %710 = cast(%var_3053, dtype="float64") /* ty=Tensor[(10), float64] */;
    %711 = %709.2;
    %712 = cast(%711, dtype="float32") /* ty=Tensor[(840), float32] */;
    %713 = reshape(%710, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
    %714 = reshape(%712, newshape=[60, 14]) /* ty=Tensor[(60, 14), float32] */;
    %715 = @func_1828(%713, %714) /* ty=(Tensor[(15, 11, 5), bool], Tensor[(825), float32], Tensor[(2, 13, 12), int32], Tensor[(60, 14), float32], Tensor[(840), uint8], Tensor[(2, ?, 5), int32], Tensor[(2, 13, 12), int32], Tensor[(2, ?, 5), float32]) */;
    %716 = %715.4;
    %717 = @func_2453() /* ty=Tensor[(840), uint8] */;
    (%711, %716, %var_3053, %717)
  };
  %718(%var_3113) /* ty=(Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(10), float64], Tensor[(840), uint8]) */
}

def @func_8809() -> (Tensor[(840), float32], Tensor[(840), uint8]) {
  %719 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %720 = @func_8152() /* ty=Tensor[(840), float32] */;
  %721 = %719.3;
  (%720, %721)
}

def @func_5285() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %726 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %722 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %723 = @func_4179() /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
    %724 = %722.0;
    %725 = %723.3;
    (%724, %725)
  };
  %726() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_3513() -> (Tensor[(2, 13, 12), int32],) {
  %727 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %728 = %727.1;
  (%728,)
}

def @func_7950() -> Tensor[(2, 13, 12), int32] {
  %730 = fn () -> Tensor[(2, 13, 12), int32] {
    %729 = @func_3553() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
    %729.0
  };
  %730() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_9909() -> (Tensor[(12, 7, 10), float32],) {
  %733 = fn () -> (Tensor[(12, 7, 10), float32],) {
    %731 = @func_1915() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
    %732 = %731.1;
    (%732,)
  };
  %733() /* ty=(Tensor[(12, 7, 10), float32],) */
}

def @func_9358() -> (Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), uint32]) {
  %734 = @func_6562() /* ty=(Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), float32], Tensor[(48), float32], Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), int32]) */;
  %735 = %734.3;
  %736 = @func_7019() /* ty=Tensor[(2, 13, 12), uint32] */;
  (%735, %736)
}

def @func_11276(%var_11275: Tensor[(231), int16]) -> (Tensor[(2, 13, 12), int32], Tensor[(3, 7, 11), int16], Tensor[(2, 13, 12), int32], Tensor[(231), float32]) {
  %745 = fn (%var_11248: Tensor[(231), int16]) -> (Tensor[(2, 13, 12), int32], Tensor[(3, 7, 11), int16], Tensor[(2, 13, 12), int32], Tensor[(231), float32]) {
    %737 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %738 = cast(%var_11248, dtype="int16") /* ty=Tensor[(231), int16] */;
    %739 = reshape(%738, newshape=[3, 7, 11]) /* ty=Tensor[(3, 7, 11), int16] */;
    %740 = cast(%var_11248, dtype="float32") /* ty=Tensor[(231), float32] */;
    %741 = %737.0;
    %742 = @func_3653(%739) /* ty=Tensor[(3, 7, 11), int16] */;
    %743 = @func_6269() /* ty=Tensor[(2, 13, 12), int32] */;
    %744 = sigmoid(%740) /* ty=Tensor[(231), float32] */;
    (%741, %742, %743, %744)
  };
  %745(%var_11275) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(3, 7, 11), int16], Tensor[(2, 13, 12), int32], Tensor[(231), float32]) */
}

def @func_13311() -> (Tensor[(2, 13, 12), uint32],) {
  %746 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
  %747 = %746.1;
  (%747,)
}

def @func_4677() -> Tensor[(2, 13, 12), int32] {
  @func_4675() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_500() -> Tensor[(2, 13, 12), int32] {
  @func_498() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_7505(%var_7503: Tensor[(16, 3, 11), float64], %var_7504: Tensor[(16, 3, 11), float64]) -> (Tensor[(16, 3, 11), bool], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
  %757 = fn (%var_7488: Tensor[(16, 3, 11), float64], %var_7489: Tensor[(16, 3, 11), float64]) -> (Tensor[(16, 3, 11), bool], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
    %748 = cast(%var_7489, dtype="bool") /* ty=Tensor[(16, 3, 11), bool] */;
    %749 = shape_of(%var_7488, dtype="int32") /* ty=Tensor[(3), int32] */;
    %750 = cast(%var_7488, dtype="bool") /* ty=Tensor[(16, 3, 11), bool] */;
    %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %752 = cast(meta[relay.Constant][29] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %753 = reshape(%752, newshape=[6, 140]) /* ty=Tensor[(6, 140), float32] */;
    %754 = @func_3388(%753) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(6, 140), float64], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
    %755 = equal(%750, %751) /* ty=Tensor[(16, 3, 11), bool] */;
    %756 = %754.3;
    (%755, %756, meta[relay.Constant][29] /* ty=Tensor[(840), float32] */)
  };
  %757(%var_7503, %var_7504) /* ty=(Tensor[(16, 3, 11), bool], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */
}

def @func_7779(%var_7778: Tensor[(840, 1), float32]) -> (Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(840, 1), float32]) {
  %765 = fn (%var_7757: Tensor[(840, 1), float32]) -> (Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(840, 1), float32]) {
    %758 = @func_6562() /* ty=(Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), float32], Tensor[(48), float32], Tensor[(12, 2, 2), float64], Tensor[(2, 13, 12), int32]) */;
    %759 = cast(%var_7757, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
    %760 = reshape(%759, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %761 = @func_351(%760) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
    %762 = %758.0;
    %763 = @func_5357() /* ty=Tensor[(2, 13, 12), uint32] */;
    %764 = %761.0;
    (%762, %763, %764, %var_7757)
  };
  %765(%var_7778) /* ty=(Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(840, 1), float32]) */
}

def @func_598() -> Tensor[(2, 13, 12), int32] {
  @func_378() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_12809() -> (Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32], Tensor[(8), float64]) {
  %777 = fn () -> (Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32], Tensor[(8), float64]) {
    %766 = @func_9871() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %767 = @func_10928() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], bool) */;
    %768 = @func_2453() /* ty=Tensor[(840), uint8] */;
    %769 = cast(%768, dtype="float32") /* ty=Tensor[(840), float32] */;
    %770 = cast(meta[relay.Constant][30] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
    %771 = reshape(%769, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %772 = reshape(%770, newshape=[8]) /* ty=Tensor[(8), float64] */;
    %773 = @func_4305(%771, %772) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(840), float32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), uint32], Tensor[(2, 420), float32], Tensor[(8), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
    %774 = %766.0;
    %775 = %767.0;
    %776 = %773.2;
    (%768, %774, %775, %776, meta[relay.Constant][30] /* ty=Tensor[(8), float64] */)
  };
  %777() /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), float32], Tensor[(8), float64]) */
}

def @func_12391() -> Tensor[(2, 13, 12), int16] {
  @func_12389() /* ty=Tensor[(2, 13, 12), int16] */
}

def @func_1828(%var_1711: Tensor[(2, 1, 5), float64], %var_1746: Tensor[(60, 14), float32]) -> (Tensor[(15, 11, 5), bool], Tensor[(825), float32], Tensor[(2, 13, 12), int32], Tensor[(60, 14), float32], Tensor[(840), uint8], Tensor[(2, ?, 5), int32], Tensor[(2, 13, 12), int32], Tensor[(2, ?, 5), float32]) {
  %778 = cast(meta[relay.Constant][31] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
  %779 = reshape(%778, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), float32] */;
  %780 = @func_1170(%779) /* ty=(Tensor[(15, 11, 5), float64], Tensor[(15, 11, 5), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %781 = cast(%var_1746, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
  %782 = reshape(%781, newshape=[1, 840]) /* ty=Tensor[(1, 840), float32] */;
  %783 = @func_1607(%782) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %784 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %785 = cast(%var_1711, dtype="float64") /* ty=Tensor[(2, 1, 5), float64] */;
  %786 = sin(%785) /* ty=Tensor[(2, 1, 5), float64] */;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(2, 1, 5), float32] */;
  %788 = shape_of(%var_1711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%var_1711, dtype="float32") /* ty=Tensor[(2, 1, 5), float32] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %791 = divide(%789, %790) /* ty=Tensor[(2, ?, 5), float32] */;
  %792 = cast(%791, dtype="int16") /* ty=Tensor[(2, ?, 5), int16] */;
  %793 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%786, dtype="int16") /* ty=Tensor[(2, 1, 5), int16] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %796 = maximum(%794, %795) /* ty=Tensor[(2, ?, 5), int16] */;
  %797 = cast(%786, dtype="int32") /* ty=Tensor[(2, 1, 5), int32] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%796, dtype="int32") /* ty=Tensor[(2, ?, 5), int32] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %801 = %783.5;
  %802 = cast(%801, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %803 = %784.3;
  %804 = cast(%803, dtype="float32") /* ty=Tensor[(840), float32] */;
  %805 = cast(%803, dtype="float32") /* ty=Tensor[(840), float32] */;
  %806 = reshape(%802, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %807 = reshape(%804, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %808 = reshape(%805, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %809 = @func_1208(%806, %807, %808) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %810 = cast(%791, dtype="float32") /* ty=Tensor[(2, ?, 5), float32] */;
  %811 = sqrt(%810) /* ty=Tensor[(2, ?, 5), float32] */;
  %812 = cast(%811, dtype="float32") /* ty=Tensor[(2, ?, 5), float32] */;
  %813 = %780.1;
  %814 = right_shift(%799, %800) /* ty=Tensor[(2, ?, 5), int32] */;
  %815 = %809.1;
  %816 = log10(%812) /* ty=Tensor[(2, ?, 5), float32] */;
  (%813, meta[relay.Constant][31] /* ty=Tensor[(825), float32] */, %801, %var_1746, %803, %814, %815, %816)
}

def @func_12178(%var_12176: Tensor[(12, 15, 2), float32], %var_12177: Tensor[(231), int16]) -> (Tensor[(12, 15, 2), bool], Tensor[(231), int16], Tensor[(3, 7, 11), float32]) {
  @func_12174(%var_12176, %var_12177) /* ty=(Tensor[(12, 15, 2), bool], Tensor[(231), int16], Tensor[(3, 7, 11), float32]) */
}

def @func_7660() -> (Tensor[(2, 13, 12), float32],) {
  @func_7658() /* ty=(Tensor[(2, 13, 12), float32],) */
}

def @func_12289() -> Tensor[(2, 13, 12), uint32] {
  %818 = fn () -> Tensor[(2, 13, 12), uint32] {
    %817 = @func_4359() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */;
    %817.3
  };
  %818() /* ty=Tensor[(2, 13, 12), uint32] */
}

def @func_11612() -> Tensor[(2, 13, 12), int32] {
  %820 = fn () -> Tensor[(2, 13, 12), int32] {
    %819 = @func_6422() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %819.0
  };
  %820() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_12746() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32]) {
  %828 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32]) {
    %821 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %822 = cast(meta[relay.Constant][32] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %823 = reshape(%822, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %824 = @func_11929(%823) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
    %825 = %821.0;
    %826 = %824.0;
    %827 = @func_11476() /* ty=Tensor[(2, 13, 12), int32] */;
    (%825, %826, meta[relay.Constant][32] /* ty=Tensor[(840), float32] */, %827)
  };
  %828() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32]) */
}

def @func_7177() -> (Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %835 = fn () -> (Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %829 = @func_4359() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */;
    %830 = @func_6679() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), int32], Tensor[(840, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(4, 420), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8) */;
    %831 = @func_1023() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %832 = %829.1;
    %833 = %830.5;
    %834 = %831.1;
    (%832, %833, %834)
  };
  %835() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_8125(%var_8123: Tensor[(2, 13, 12), int32]) -> (Tensor[(840), uint8], Tensor[(2, 13, 12), uint16]) {
  @func_8122(%var_8123) /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), uint16]) */
}

def @func_11564() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  @func_11562() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_5492() -> Tensor[(2, 13, 12), int32] {
  %836 = @func_3801() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %836.3
}

def @func_12605() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), uint8], Tensor[(48), float32], Tensor[(840), float32]) {
  @func_12603() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), uint8], Tensor[(48), float32], Tensor[(840), float32]) */
}

def @func_12867() -> (Tensor[(2, 13, 12), int32],) {
  @func_12865() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @main(%var_13533: Tensor[(15, 2, 14), uint32], %var_13534: Tensor[(15, 2, 14), uint32]) -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32], Tensor[(15, 2, 14), uint8]) {
  %837 = @func_8305() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %838 = cast(%var_13534, dtype="uint32") /* ty=Tensor[(15, 2, 14), uint32] */;
  %839 = shape_of(%var_13533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%var_13533, dtype="uint32") /* ty=Tensor[(15, 2, 14), uint32] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %842 = right_shift(%840, %841) /* ty=Tensor[(15, 2, 14), uint32] */;
  %843 = cast(%var_13533, dtype="uint8") /* ty=Tensor[(15, 2, 14), uint8] */;
  %844 = shape_of(%842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%842, dtype="uint8") /* ty=Tensor[(15, 2, 14), uint8] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %847 = @func_13137() /* ty=Tensor[(2, 13, 12), uint32] */;
  %848 = %837.1;
  %849 = left_shift(%845, %846) /* ty=Tensor[(15, 2, 14), uint8] */;
  (%847, %848, %849)
}

def @func_4653() -> (Tensor[(2, 13, 12), int32],) {
  @func_4651() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_786() -> (Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) {
  %860 = fn () -> (Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) {
    %850 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
    %851 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %852 = %851.0;
    %853 = cast(%852, dtype="int16") /* ty=Tensor[(2, 13, 12), int16] */;
    %854 = shape_of(%850, dtype="int32") /* ty=Tensor[(3), int32] */;
    %855 = cast(%850, dtype="int16") /* ty=Tensor[(2, 13, 12), int16] */;
    %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %857 = cast(%852, dtype="float32") /* ty=Tensor[(2, 13, 12), float32] */;
    %858 = right_shift(%855, %856) /* ty=Tensor[(2, 13, 12), int16] */;
    %859 = acos(%857) /* ty=Tensor[(2, 13, 12), float32] */;
    (%858, %859)
  };
  %860() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */
}

def @func_8245(%var_8206: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) {
  %861 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
  %862 = cast(%861, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %863 = cast(%var_8206, dtype="float32") /* ty=Tensor[(840), float32] */;
  %864 = cast(%var_8206, dtype="float32") /* ty=Tensor[(840), float32] */;
  %865 = reshape(%862, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %866 = reshape(%863, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %867 = reshape(%864, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %868 = @func_1208(%865, %866, %867) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %869 = @func_4638() /* ty=(Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), float32], Tensor[(840), uint8]) */;
  %870 = cast(%var_8206, dtype="float32") /* ty=Tensor[(840), float32] */;
  %871 = %868.0;
  %872 = %869.1;
  %873 = cos(%870) /* ty=Tensor[(840), float32] */;
  (%861, %871, %872, %873)
}

def @func_2805(%var_2797: Tensor[(312), int32]) -> (Tensor[(840), uint8], Tensor[(2, 13, 12), bool], Tensor[(312), int32]) {
  %874 = cast(%var_2797, dtype="int32") /* ty=Tensor[(312), int32] */;
  %875 = @func_2453() /* ty=Tensor[(840), uint8] */;
  %876 = cast(%875, dtype="float32") /* ty=Tensor[(840), float32] */;
  %877 = cast(%875, dtype="float32") /* ty=Tensor[(840), float32] */;
  %878 = reshape(%874, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %879 = reshape(%876, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %880 = reshape(%877, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %881 = @func_1208(%878, %879, %880) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %882 = %881.0;
  (%875, %882, %var_2797)
}

def @func_4105() -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
  @func_4103() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */
}

def @func_13203() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32]) {
  @func_13201() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32]) */
}

def @func_10900() -> (Tensor[(11, 9, 5), uint16], Tensor[(840), uint8], Tensor[(11, 9, 5), float64], Tensor[(2, 13, 12), int32]) {
  %898 = fn () -> (Tensor[(11, 9, 5), uint16], Tensor[(840), uint8], Tensor[(11, 9, 5), float64], Tensor[(2, 13, 12), int32]) {
    %883 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="uint16") /* ty=Tensor[(11, 9, 5), uint16] */;
    %884 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %885 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="uint16") /* ty=Tensor[(11, 9, 5), uint16] */;
    %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %887 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="float64") /* ty=Tensor[(11, 9, 5), float64] */;
    %888 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %889 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 9, 5), uint16] */, dtype="float64") /* ty=Tensor[(11, 9, 5), float64] */;
    %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %891 = @func_2453() /* ty=Tensor[(840), uint8] */;
    %892 = cast(%891, dtype="float32") /* ty=Tensor[(840), float32] */;
    %893 = reshape(%892, newshape=[840, 1]) /* ty=Tensor[(840, 1), float32] */;
    %894 = @func_1340(%893) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) */;
    %895 = minimum(%885, %886) /* ty=Tensor[(11, 9, 5), uint16] */;
    %896 = floor_divide(%889, %890) /* ty=Tensor[(11, 9, 5), float64] */;
    %897 = %894.0;
    (%895, %891, %896, %897)
  };
  %898() /* ty=(Tensor[(11, 9, 5), uint16], Tensor[(840), uint8], Tensor[(11, 9, 5), float64], Tensor[(2, 13, 12), int32]) */
}

def @func_8476() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) {
  %907 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) {
    %899 = @func_3513() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %900 = cast(meta[relay.Constant][35] /* ty=Tensor[(1680), uint8] */, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
    %901 = cast(meta[relay.Constant][35] /* ty=Tensor[(1680), uint8] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
    %902 = reshape(%900, newshape=[1680]) /* ty=Tensor[(1680), uint8] */;
    %903 = reshape(%901, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), bool] */;
    %904 = @func_1466(%902, %903) /* ty=(Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8], Tensor[(8, 14, 15), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), uint8], Tensor[(8, 14, 15), bool]) */;
    %905 = %899.0;
    %906 = %904.0;
    (%905, %906, meta[relay.Constant][35] /* ty=Tensor[(1680), uint8] */)
  };
  %907() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */
}

def @func_1112(%var_1110: bool) -> (Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) {
  @func_1109(%var_1110) /* ty=(Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */
}

def @func_1258() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) {
  %913 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) {
    %908 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %909 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %910 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
    %911 = %908.0;
    %912 = %909.3;
    (%910, %911, %912)
  };
  %913() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */
}

def @func_7449() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %914 = @func_7061() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int16]) */;
  %915 = @func_7249() /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %916 = @func_5087() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %917 = %914.0;
  %918 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
  %919 = %915.3;
  %920 = %916.0;
  (%917, %918, %919, %920)
}

def @func_1173(%var_1171: Tensor[(15, 11, 5), float32]) -> (Tensor[(15, 11, 5), float64], Tensor[(15, 11, 5), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  @func_1170(%var_1171) /* ty=(Tensor[(15, 11, 5), float64], Tensor[(15, 11, 5), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_12821() -> (Tensor[(12, 70), float32],) {
  %923 = fn () -> (Tensor[(12, 70), float32],) {
    %921 = @func_7249() /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %922 = %921.0;
    (%922,)
  };
  %923() /* ty=(Tensor[(12, 70), float32],) */
}

def @func_12174(%var_12141: Tensor[(12, 15, 2), float32], %var_12149: Tensor[(231), int16]) -> (Tensor[(12, 15, 2), bool], Tensor[(231), int16], Tensor[(3, 7, 11), float32]) {
  %924 = cast(%var_12141, dtype="float32") /* ty=Tensor[(12, 15, 2), float32] */;
  %925 = sinh(%924) /* ty=Tensor[(12, 15, 2), float32] */;
  %926 = cast(%var_12141, dtype="bool") /* ty=Tensor[(12, 15, 2), bool] */;
  %927 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(%925, dtype="bool") /* ty=Tensor[(12, 15, 2), bool] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %930 = cast(%var_12149, dtype="int16") /* ty=Tensor[(231), int16] */;
  %931 = reshape(%930, newshape=[3, 7, 11]) /* ty=Tensor[(3, 7, 11), int16] */;
  %932 = @func_3653(%931) /* ty=Tensor[(3, 7, 11), int16] */;
  %933 = cast(%932, dtype="float32") /* ty=Tensor[(3, 7, 11), float32] */;
  %934 = logical_and(%928, %929) /* ty=Tensor[(12, 15, 2), bool] */;
  %935 = acosh(%933) /* ty=Tensor[(3, 7, 11), float32] */;
  (%934, %var_12149, %935)
}

def @func_4555() -> Tensor[(2, 13, 12), uint32] {
  @func_4553() /* ty=Tensor[(2, 13, 12), uint32] */
}

def @func_2289() -> Tensor[(2, 13, 12), float64] {
  @func_2287() /* ty=Tensor[(2, 13, 12), float64] */
}

def @func_11971(%var_11970: Tensor[(2, 9, 4), float64]) -> (Tensor[(2, 9, 4), float64], Tensor[(2, 13, 12), float32]) {
  %945 = fn (%var_11943: Tensor[(2, 9, 4), float64]) -> (Tensor[(2, 9, 4), float64], Tensor[(2, 13, 12), float32]) {
    %936 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 9, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
    %937 = cosh(%936) /* ty=Tensor[(2, 9, 4), float64] */;
    %938 = cast(%var_11943, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
    %939 = shape_of(%937, dtype="int32") /* ty=Tensor[(3), int32] */;
    %940 = cast(%937, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
    %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %942 = @func_9606() /* ty=(Tensor[(2, 13, 12), float32],) */;
    %943 = floor_mod(%940, %941) /* ty=Tensor[(2, 9, 4), float64] */;
    %944 = %942.0;
    (%943, %944)
  };
  %945(%var_11970) /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 13, 12), float32]) */
}

def @func_6424() -> (Tensor[(2, 13, 12), int32],) {
  @func_6422() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_12645() -> (Tensor[(15, 5, 16), float64], Tensor[(2, 13, 12), float32]) {
  @func_12643() /* ty=(Tensor[(15, 5, 16), float64], Tensor[(2, 13, 12), float32]) */
}

def @func_7658() -> (Tensor[(2, 13, 12), float32],) {
  %946 = @func_2487() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %947 = %946.0;
  (%947,)
}

def @func_5837(%var_5835: Tensor[(840), uint8], %var_5836: Tensor[(48), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(840), int8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32]) {
  @func_5833(%var_5835, %var_5836) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), int8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32]) */
}

def @func_380() -> Tensor[(2, 13, 12), int32] {
  @func_378() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_1916() -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) {
  %951 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) {
    %948 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
    %949 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
    %950 = %948.0;
    (%949, %950)
  };
  %951() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */
}

def @func_7863(%var_7861: Tensor[(10), float64], %var_7862: Tensor[(60, 14), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(15, 11, 5), bool], Tensor[(10), float64], Tensor[(60, 14), float32]) {
  @func_7859(%var_7861, %var_7862) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(15, 11, 5), bool], Tensor[(10), float64], Tensor[(60, 14), float32]) */
}

def @func_4103() -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
  %952 = cast(meta[relay.Constant][37] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %953 = reshape(%952, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
  %954 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  %955 = @func_77(%953) /* ty=Tensor[(12, 7, 10), float32] */;
  (%954, %955, meta[relay.Constant][37] /* ty=Tensor[(840), float32] */)
}

def @func_8064() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
  %960 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
    %956 = @func_3553() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
    %957 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
    %958 = %956.1;
    %959 = %957.2;
    (%958, %959)
  };
  %960() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */
}

def @func_3388(%var_3339: Tensor[(6, 140), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(6, 140), float64], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) {
  %961 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %962 = %961.0;
  %963 = cast(%962, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %964 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 140), float32] */, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %965 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 140), float32] */, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %966 = reshape(%963, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %967 = reshape(%964, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %968 = reshape(%965, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %969 = @func_1208(%966, %967, %968) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %970 = cast(%var_3339, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %971 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(6, 140), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %972 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 140), float32] */, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %974 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
  %975 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %976 = cast(meta[relay.Constant][39] /* ty=Tensor[(1680), uint8] */, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %977 = cast(meta[relay.Constant][39] /* ty=Tensor[(1680), uint8] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %978 = reshape(%976, newshape=[1680]) /* ty=Tensor[(1680), uint8] */;
  %979 = reshape(%977, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), bool] */;
  %980 = @func_1466(%978, %979) /* ty=(Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8], Tensor[(8, 14, 15), float64], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), uint8], Tensor[(8, 14, 15), bool]) */;
  %981 = %969.0;
  %982 = floor_divide(%972, %973) /* ty=Tensor[(6, 140), float64] */;
  %983 = %974.0;
  %984 = %975.5;
  %985 = %980.4;
  (%962, %981, %982, %983, %984, %985, meta[relay.Constant][39] /* ty=Tensor[(1680), uint8] */)
}

def @func_3965() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) {
  %986 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
  %987 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
  %988 = cast(meta[relay.Constant][40] /* ty=Tensor[(420, 2), float32] */, dtype="float32") /* ty=Tensor[(420, 2), float32] */;
  %989 = reshape(%988, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %990 = @func_2844(%989) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %991 = %986.1;
  %992 = @func_2287() /* ty=Tensor[(2, 13, 12), float64] */;
  %993 = %987.1;
  %994 = %990.3;
  (%991, %992, %993, %994, meta[relay.Constant][40] /* ty=Tensor[(420, 2), float32] */)
}

def @func_9444(%var_9442: int64, %var_9443: Tensor[(1188), int64]) -> (Tensor[(2, 13, 12), int32], Tensor[(11, 9, 12), int64], int64, Tensor[(1188), int64], Tensor[(1680), uint8]) {
  %1005 = fn (%var_9408: int64, %var_9409: Tensor[(1188), int64]) -> (Tensor[(2, 13, 12), int32], Tensor[(11, 9, 12), int64], int64, Tensor[(1188), int64], Tensor[(1680), uint8]) {
    %995 = @func_6611() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
    %996 = cast(%var_9408, dtype="int64") /* ty=int64 */;
    %997 = cast(%var_9409, dtype="int64") /* ty=Tensor[(1188), int64] */;
    %998 = cast(meta[relay.Constant][41] /* ty=Tensor[(1680), uint8] */, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
    %999 = reshape(%996, newshape=[]) /* ty=int64 */;
    %1000 = reshape(%997, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), int64] */;
    %1001 = reshape(%998, newshape=[1, 1680]) /* ty=Tensor[(1, 1680), uint8] */;
    %1002 = @func_4484(%999, %1000, %1001) /* ty=(Tensor[(11, 9, 12), int64], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], Tensor[(2, 13, 12), bool]) */;
    %1003 = %995.0;
    %1004 = %1002.0;
    (%1003, %1004, %var_9408, %var_9409, meta[relay.Constant][41] /* ty=Tensor[(1680), uint8] */)
  };
  %1005(%var_9442, %var_9443) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(11, 9, 12), int64], int64, Tensor[(1188), int64], Tensor[(1680), uint8]) */
}

def @func_10648(%var_10646: uint64, %var_10647: Tensor[(3, 16, 16), uint64]) -> (Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), int64]) {
  %1019 = fn (%var_10610: uint64, %var_10630: Tensor[(3, 16, 16), uint64]) -> (Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), int64]) {
    %1006 = cast(%var_10610, dtype="uint64") /* ty=uint64 */;
    %1007 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 16, 16), uint64] */, dtype="uint64") /* ty=Tensor[(3, 16, 16), uint64] */;
    %1008 = maximum(%1006, %1007) /* ty=Tensor[(3, 16, 16), uint64] */;
    %1009 = cast(%1008, dtype="bool") /* ty=Tensor[(3, 16, 16), bool] */;
    %1010 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(3, 16, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1011 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 16, 16), uint64] */, dtype="bool") /* ty=Tensor[(3, 16, 16), bool] */;
    %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1013 = cast(%var_10630, dtype="int64") /* ty=Tensor[(3, 16, 16), int64] */;
    %1014 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(3, 16, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1015 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 16, 16), uint64] */, dtype="int64") /* ty=Tensor[(3, 16, 16), int64] */;
    %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1017 = equal(%1011, %1012) /* ty=Tensor[(3, 16, 16), bool] */;
    %1018 = add(%1015, %1016) /* ty=Tensor[(3, 16, 16), int64] */;
    (%1017, %1018)
  };
  %1019(%var_10646, %var_10647) /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), int64]) */
}

def @func_7296() -> (Tensor[(2, 13, 12), int32], Tensor[(840), float64], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32]) {
  @func_7294() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), float64], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32]) */
}

def @func_12850(%var_12848: Tensor[(13, 11, 15), float64], %var_12849: Tensor[(13, 11, 15), float64]) -> (Tensor[(13, 11, 15), float64], Tensor[(2, 13, 12), int32]) {
  %1029 = fn (%var_12835: Tensor[(13, 11, 15), float64], %var_12836: Tensor[(13, 11, 15), float64]) -> (Tensor[(13, 11, 15), float64], Tensor[(2, 13, 12), int32]) {
    %1020 = cast(%var_12836, dtype="float64") /* ty=Tensor[(13, 11, 15), float64] */;
    %1021 = shape_of(%var_12835, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1022 = cast(%var_12835, dtype="float64") /* ty=Tensor[(13, 11, 15), float64] */;
    %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1024 = floor_mod(%1022, %1023) /* ty=Tensor[(13, 11, 15), float64] */;
    %1025 = cast(%1024, dtype="float64") /* ty=Tensor[(13, 11, 15), float64] */;
    %1026 = @func_10682() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1027 = log10(%1025) /* ty=Tensor[(13, 11, 15), float64] */;
    %1028 = %1026.0;
    (%1027, %1028)
  };
  %1029(%var_12848, %var_12849) /* ty=(Tensor[(13, 11, 15), float64], Tensor[(2, 13, 12), int32]) */
}

def @func_3252() -> Tensor[(2, 13, 12), bool] {
  @func_3250() /* ty=Tensor[(2, 13, 12), bool] */
}

def @func_5144(%var_5127: Tensor[(1680), uint8]) -> (Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8, Tensor[(1680), uint8], Tensor[(2, 13, 12), int32]) {
  %1030 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
  %1031 = cast(meta[relay.Constant][43] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1032 = cast(%var_5127, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %1033 = reshape(%1031, newshape=[]) /* ty=uint8 */;
  %1034 = reshape(%1032, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
  %1035 = @func_695(%1033, %1034) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
  %1036 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1037 = %1030.1;
  %1038 = %1035.0;
  %1039 = %1036.0;
  (%1037, %1038, meta[relay.Constant][43] /* ty=uint8 */, %var_5127, %1039)
}

def @func_9547() -> (Tensor[(2, 13, 12), float32],) {
  %1042 = fn () -> (Tensor[(2, 13, 12), float32],) {
    %1040 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
    %1041 = %1040.1;
    (%1041,)
  };
  %1042() /* ty=(Tensor[(2, 13, 12), float32],) */
}

def @func_5573(%var_5512: Tensor[(2, 13, 3), float64], %var_5513: Tensor[(2, 13, 3), float64], %var_5540: Tensor[(840), float32]) -> (Tensor[(825), float32], Tensor[(10), float64], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 3), uint8], Tensor[(2, 13, 12), int32]) {
  %1043 = cast(meta[relay.Constant][44] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %1044 = cast(%var_5540, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1045 = reshape(%1043, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %1046 = reshape(%1044, newshape=[60, 14]) /* ty=Tensor[(60, 14), float32] */;
  %1047 = @func_1828(%1045, %1046) /* ty=(Tensor[(15, 11, 5), bool], Tensor[(825), float32], Tensor[(2, 13, 12), int32], Tensor[(60, 14), float32], Tensor[(840), uint8], Tensor[(2, ?, 5), int32], Tensor[(2, 13, 12), int32], Tensor[(2, ?, 5), float32]) */;
  %1048 = cast(%var_5513, dtype="float64") /* ty=Tensor[(2, 13, 3), float64] */;
  %1049 = shape_of(%var_5512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1050 = cast(%var_5512, dtype="float64") /* ty=Tensor[(2, 13, 3), float64] */;
  %1051 = dyn.reshape(%1048, %1049, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1052 = power(%1050, %1051) /* ty=Tensor[(2, 13, 3), float64] */;
  %1053 = cast(%var_5512, dtype="uint8") /* ty=Tensor[(2, 13, 3), uint8] */;
  %1054 = shape_of(%1052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1055 = cast(%1052, dtype="uint8") /* ty=Tensor[(2, 13, 3), uint8] */;
  %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1057 = @func_3965() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) */;
  %1058 = %1047.1;
  %1059 = @func_4553() /* ty=Tensor[(2, 13, 12), uint32] */;
  %1060 = logical_xor(%1055, %1056) /* ty=Tensor[(2, 13, 3), uint8] */;
  %1061 = %1057.2;
  (%1058, meta[relay.Constant][44] /* ty=Tensor[(10), float64] */, %var_5540, %1059, %1060, %1061)
}

def @func_4639() -> (Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), float32], Tensor[(840), uint8]) {
  %1067 = fn () -> (Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), float32], Tensor[(840), uint8]) {
    %1062 = @func_3714() /* ty=(Tensor[(2, 13, 12), float32],) */;
    %1063 = @func_3714() /* ty=(Tensor[(2, 13, 12), float32],) */;
    %1064 = %1062.0;
    %1065 = %1063.0;
    %1066 = @func_2453() /* ty=Tensor[(840), uint8] */;
    (%1064, %1065, %1066)
  };
  %1067() /* ty=(Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), float32], Tensor[(840), uint8]) */
}

def @func_5908() -> (Tensor[(2, 13, 12), int32], Tensor[(312), int32]) {
  %1073 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(312), int32]) {
    %1068 = @func_5657() /* ty=Tensor[(2, 13, 12), int32] */;
    %1069 = cast(%1068, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
    %1070 = reshape(%1069, newshape=[312]) /* ty=Tensor[(312), int32] */;
    %1071 = @func_2805(%1070) /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), bool], Tensor[(312), int32]) */;
    %1072 = %1071.2;
    (%1068, %1072)
  };
  %1073() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(312), int32]) */
}

def @func_351(%var_333: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) {
  %1074 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1075 = %1074.0;
  %1076 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %1077 = %1076.0;
  %1078 = cast(%1077, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
  %1079 = shape_of(%1075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1080 = cast(%1075, dtype="bool") /* ty=Tensor[(2, 13, 12), bool] */;
  %1081 = dyn.reshape(%1078, %1079, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1082 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %1083 = %1082.2;
  %1084 = cast(%var_333, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %1085 = shape_of(%1083, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1086 = cast(%1083, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %1087 = dyn.reshape(%1084, %1085, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1088 = logical_or(%1080, %1081) /* ty=Tensor[(2, 13, 12), bool] */;
  %1089 = bitwise_or(%1086, %1087) /* ty=Tensor[(840), uint8] */;
  (%1088, %1089)
}

def @func_4488(%var_4485: int64, %var_4486: Tensor[(11, 9, 12), int64], %var_4487: Tensor[(1, 1680), uint8]) -> (Tensor[(11, 9, 12), int64], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], Tensor[(2, 13, 12), bool]) {
  %1099 = fn (%var_4413: int64, %var_4414: Tensor[(11, 9, 12), int64], %var_4434: Tensor[(1, 1680), uint8]) -> (Tensor[(11, 9, 12), int64], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], Tensor[(2, 13, 12), bool]) {
    %1090 = cast(%var_4413, dtype="int64") /* ty=int64 */;
    %1091 = cast(%var_4414, dtype="int64") /* ty=Tensor[(11, 9, 12), int64] */;
    %1092 = cast(%var_4434, dtype="uint8") /* ty=Tensor[(1, 1680), uint8] */;
    %1093 = reshape(%1092, newshape=[1680]) /* ty=Tensor[(1680), uint8] */;
    %1094 = @func_3842(%1093) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8]) */;
    %1095 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
    %1096 = bitwise_xor(%1090, %1091) /* ty=Tensor[(11, 9, 12), int64] */;
    %1097 = %1094.0;
    %1098 = %1095.0;
    (%1096, %1097, %var_4434, %1098)
  };
  %1099(%var_4485, %var_4486, %var_4487) /* ty=(Tensor[(11, 9, 12), int64], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], Tensor[(2, 13, 12), bool]) */
}

def @func_4651() -> (Tensor[(2, 13, 12), int32],) {
  %1100 = @func_2310() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1101 = %1100.1;
  (%1101,)
}

def @func_12447() -> (Tensor[(2, 13, 12), int32],) {
  @func_12445() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_3842(%var_3832: Tensor[(1680), uint8]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], uint8, Tensor[(1680), uint8]) {
  %1102 = @func_1023() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1103 = cast(meta[relay.Constant][45] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1104 = cast(%var_3832, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
  %1105 = reshape(%1103, newshape=[]) /* ty=uint8 */;
  %1106 = reshape(%1104, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint8] */;
  %1107 = @func_695(%1105, %1106) /* ty=(Tensor[(8, 14, 15), bool], Tensor[(2, 13, 12), int32]) */;
  %1108 = %1102.1;
  %1109 = %1107.1;
  (%1108, %1109, meta[relay.Constant][45] /* ty=uint8 */, %var_3832)
}

def @func_10038(%var_10037: Tensor[(12, 11, 15), float32]) -> (Tensor[(12, 11, 15), float32], Tensor[(2, 13, 12), int32]) {
  %1114 = fn (%var_10027: Tensor[(12, 11, 15), float32]) -> (Tensor[(12, 11, 15), float32], Tensor[(2, 13, 12), int32]) {
    %1110 = cast(%var_10027, dtype="float32") /* ty=Tensor[(12, 11, 15), float32] */;
    %1111 = @func_6234() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1112 = log10(%1110) /* ty=Tensor[(12, 11, 15), float32] */;
    %1113 = %1111.0;
    (%1112, %1113)
  };
  %1114(%var_10037) /* ty=(Tensor[(12, 11, 15), float32], Tensor[(2, 13, 12), int32]) */
}

def @func_225() -> (Tensor[(2, 13, 12), int32],) {
  @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_2808(%var_2806: Tensor[(312), int32]) -> (Tensor[(840), uint8], Tensor[(2, 13, 12), bool], Tensor[(312), int32]) {
  @func_2805(%var_2806) /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), bool], Tensor[(312), int32]) */
}

def @func_7625() -> Tensor[(2, 13, 12), int32] {
  %1115 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1115.0
}

def @func_2747() -> Tensor[(2, 13, 12), int32] {
  %1117 = fn () -> Tensor[(2, 13, 12), int32] {
    %1116 = @func_1915() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
    %1116.0
  };
  %1117() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_9631() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) {
  @func_9629() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */
}

def @func_5265(%var_5264: bool) -> (Tensor[(2, 13, 12), int32], Tensor[(1680), uint8], bool) {
  %1124 = fn (%var_5253: bool) -> (Tensor[(2, 13, 12), int32], Tensor[(1680), uint8], bool) {
    %1118 = @func_5048() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1119 = cast(%var_5253, dtype="bool") /* ty=bool */;
    %1120 = reshape(%1119, newshape=[]) /* ty=bool */;
    %1121 = @func_1109(%1120) /* ty=(Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
    %1122 = %1118.0;
    %1123 = %1121.2;
    (%1122, %1123, %var_5253)
  };
  %1124(%var_5264) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(1680), uint8], bool) */
}

def @func_10413() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
  %1125 = @func_3553() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
  %1126 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %1127 = %1125.1;
  %1128 = %1126.1;
  (%1127, %1128)
}

def @func_3802() -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1138 = fn () -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %1129 = @func_2693() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) */;
    %1130 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
    %1131 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1132 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1133 = %1129.5;
    %1134 = %1130.0;
    %1135 = %1131.0;
    %1136 = %1132.0;
    %1137 = @func_3292() /* ty=Tensor[(2, 13, 12), int32] */;
    (%1133, %1134, %1135, %1136, %1137)
  };
  %1138() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_9607() -> (Tensor[(2, 13, 12), float32],) {
  %1141 = fn () -> (Tensor[(2, 13, 12), float32],) {
    %1139 = @func_7658() /* ty=(Tensor[(2, 13, 12), float32],) */;
    %1140 = %1139.0;
    (%1140,)
  };
  %1141() /* ty=(Tensor[(2, 13, 12), float32],) */
}

def @func_9142() -> Tensor[(2, 13, 12), bool] {
  %1142 = fn () -> Tensor[(2, 13, 12), bool] {
    @func_3250() /* ty=Tensor[(2, 13, 12), bool] */
  };
  %1142() /* ty=Tensor[(2, 13, 12), bool] */
}

def @func_8730() -> (Tensor[(2, 13, 12), int32], bool, Tensor[(8), float64]) {
  %1148 = fn () -> (Tensor[(2, 13, 12), int32], bool, Tensor[(8), float64]) {
    %1143 = cast(meta[relay.Constant][46] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
    %1144 = reshape(%1143, newshape=[8]) /* ty=Tensor[(8), float64] */;
    %1145 = @func_5020(%1144) /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(8), float64], bool, Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
    %1146 = @func_6269() /* ty=Tensor[(2, 13, 12), int32] */;
    %1147 = %1145.3;
    (%1146, %1147, meta[relay.Constant][46] /* ty=Tensor[(8), float64] */)
  };
  %1148() /* ty=(Tensor[(2, 13, 12), int32], bool, Tensor[(8), float64]) */
}

def @func_4308(%var_4306: Tensor[(840), float32], %var_4307: Tensor[(8), float64]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(840), float32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), uint32], Tensor[(2, 420), float32], Tensor[(8), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
  %1185 = fn (%var_4193: Tensor[(840), float32], %var_4237: Tensor[(8), float64]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(840), float32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), uint32], Tensor[(2, 420), float32], Tensor[(8), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) {
    %1149 = @func_4179() /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
    %1150 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1151 = cast(%var_4193, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1152 = reshape(%1151, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %1153 = @func_3621(%1152) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) */;
    %1154 = %1153.2;
    %1155 = cast(%1154, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1156 = reshape(%1155, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %1157 = @func_3621(%1156) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) */;
    %1158 = cast(%var_4193, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1159 = cast(%var_4237, dtype="float64") /* ty=Tensor[(8), float64] */;
    %1160 = reshape(%1158, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
    %1161 = reshape(%1159, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float64] */;
    %1162 = @func_4046(%1160, %1161) /* ty=(Tensor[(2, 2, 2), float64], Tensor[(2, 2, 2), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 2, 2), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1163 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
    %1164 = cast(%1154, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1165 = reshape(%1164, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %1166 = @func_2844(%1165) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
    %1167 = %1162.5;
    %1168 = cast(%1167, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
    %1169 = reshape(%1168, newshape=[1, 840]) /* ty=Tensor[(1, 840), float32] */;
    %1170 = @func_1607(%1169) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1171 = @func_3457() /* ty=(Tensor[(840), float32],) */;
    %1172 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
    %1173 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1174 = %1149.1;
    %1175 = %1150.0;
    %1176 = @func_2287() /* ty=Tensor[(2, 13, 12), float64] */;
    %1177 = @func_3250() /* ty=Tensor[(2, 13, 12), bool] */;
    %1178 = %1157.3;
    %1179 = %1163.0;
    %1180 = %1166.1;
    %1181 = %1170.0;
    %1182 = %1171.0;
    %1183 = %1172.0;
    %1184 = %1173.0;
    (%1174, %1175, %1154, %var_4193, %1176, %1177, %1178, %1167, %var_4237, %1179, %1180, %1181, %1182, %1183, %1184)
  };
  %1185(%var_4306, %var_4307) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(840), float32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), uint32], Tensor[(2, 420), float32], Tensor[(8), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */
}

def @func_11669() -> (Tensor[(2, 13, 12), int32],) {
  %1186 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
  (%1186,)
}

def @func_4360() -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) {
  %1194 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) {
    %1187 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
    %1188 = cast(meta[relay.Constant][47] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1189 = reshape(%1188, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
    %1190 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1191 = %1187.0;
    %1192 = @func_77(%1189) /* ty=Tensor[(12, 7, 10), float32] */;
    %1193 = %1190.0;
    (%1191, %1192, meta[relay.Constant][47] /* ty=Tensor[(840), float32] */, %1193)
  };
  %1194() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32]) */
}

def @func_12389() -> Tensor[(2, 13, 12), int16] {
  %1195 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
  %1195.0
}

def @func_10260() -> (Tensor[(2, 13, 12), int16], Tensor[(840), uint8]) {
  %1200 = fn () -> (Tensor[(2, 13, 12), int16], Tensor[(840), uint8]) {
    %1196 = @func_6829() /* ty=(Tensor[(48), float32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), uint32]) */;
    %1197 = @func_8680() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1198 = %1196.1;
    %1199 = %1197.1;
    (%1198, %1199)
  };
  %1200() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(840), uint8]) */
}

def @func_12326() -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), float32]) {
  %1201 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1202 = @func_3441() /* ty=(Tensor[(2, 13, 12), float32],) */;
  %1203 = %1201.0;
  %1204 = %1202.0;
  (%1203, %1204)
}

def @func_6270() -> Tensor[(2, 13, 12), int32] {
  %1206 = fn () -> Tensor[(2, 13, 12), int32] {
    %1205 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1205.0
  };
  %1206() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_1000() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1210 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %1207 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1208 = @func_651() /* ty=Tensor[(2, 13, 12), int32] */;
    %1209 = %1207.0;
    (%1208, %1209)
  };
  %1210() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_7701() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
  %1215 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
    %1211 = @func_7249() /* ty=(Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1212 = @func_3441() /* ty=(Tensor[(2, 13, 12), float32],) */;
    %1213 = %1211.3;
    %1214 = %1212.0;
    (%1213, %1214)
  };
  %1215() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */
}

def @func_12643() -> (Tensor[(15, 5, 16), float64], Tensor[(2, 13, 12), float32]) {
  %1216 = @func_12558() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1217 = @func_7700() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
  %1218 = %1216.1;
  %1219 = %1217.1;
  (%1218, %1219)
}

def @func_2846(%var_2845: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
  %1225 = fn (%var_2822: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
    %1220 = cast(%var_2822, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1221 = reshape(%1220, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
    %1222 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
    %1223 = @func_2746() /* ty=Tensor[(2, 13, 12), int32] */;
    %1224 = @func_77(%1221) /* ty=Tensor[(12, 7, 10), float32] */;
    (%1222, %1223, %1224, %var_2822)
  };
  %1225(%var_2845) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */
}

def @func_10928() -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], bool) {
  %1226 = @func_5181() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
  %1227 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1228 = reshape(%1227, newshape=[]) /* ty=bool */;
  %1229 = @func_1109(%1228) /* ty=(Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
  %1230 = %1226.0;
  %1231 = %1229.1;
  (%1230, %1231, True /* ty=bool */)
}

def @func_12033() -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), bool], Tensor[(840), uint8], Tensor[(48), float32]) {
  %1240 = fn () -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), bool], Tensor[(840), uint8], Tensor[(48), float32]) {
    %1232 = @func_5181() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
    %1233 = cast(meta[relay.Constant][48] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
    %1234 = cast(meta[relay.Constant][49] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1235 = reshape(%1233, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
    %1236 = reshape(%1234, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1237 = @func_9277(%1235, %1236) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840, 1), uint8], Tensor[(48), float32]) */;
    %1238 = %1232.0;
    %1239 = %1237.0;
    (%1238, %1239, meta[relay.Constant][48] /* ty=Tensor[(840), uint8] */, meta[relay.Constant][49] /* ty=Tensor[(48), float32] */)
  };
  %1240() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), bool], Tensor[(840), uint8], Tensor[(48), float32]) */
}

def @func_12603() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(840), uint8], Tensor[(48), float32], Tensor[(840), float32]) {
  %1241 = @func_8680() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1242 = cast(meta[relay.Constant][50] /* ty=Tensor[(840), uint8] */, dtype="uint8") /* ty=Tensor[(840), uint8] */;
  %1243 = cast(meta[relay.Constant][51] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1244 = reshape(%1242, newshape=[840]) /* ty=Tensor[(840), uint8] */;
  %1245 = reshape(%1243, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1246 = @func_11435(%1244, %1245) /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), uint32], Tensor[(840), int64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(48), float32]) */;
  %1247 = %1241.4;
  %1248 = %1246.4;
  %1249 = @func_8152() /* ty=Tensor[(840), float32] */;
  (%1247, %1248, meta[relay.Constant][50] /* ty=Tensor[(840), uint8] */, meta[relay.Constant][51] /* ty=Tensor[(48), float32] */, %1249)
}

def @func_8680() -> (Tensor[(2, 13, 12), int32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1250 = @func_6234() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1251 = %1250.0;
  %1252 = cast(%1251, dtype="int32") /* ty=Tensor[(2, 13, 12), int32] */;
  %1253 = reshape(%1252, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %1254 = @func_8122(%1253) /* ty=(Tensor[(840), uint8], Tensor[(2, 13, 12), uint16]) */;
  %1255 = %1254.0;
  %1256 = cast(%1255, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1257 = reshape(%1256, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %1258 = @func_351(%1257) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
  %1259 = @func_5087() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1260 = %1258.1;
  %1261 = @func_7396() /* ty=Tensor[(2, 13, 12), int32] */;
  %1262 = %1259.0;
  (%1251, %1255, %1260, %1261, %1262)
}

def @func_3210(%var_3207: Tensor[(13, 9, 10), int32], %var_3208: Tensor[(840), float32], %var_3209: Tensor[(825), float32]) -> (Tensor[(13, 9, 10), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], bool, Tensor[(300, 1), bool], Tensor[(840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(825), float32]) {
  %1289 = fn (%var_3149: Tensor[(13, 9, 10), int32], %var_3179: Tensor[(840), float32], %var_3202: Tensor[(825), float32]) -> (Tensor[(13, 9, 10), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], bool, Tensor[(300, 1), bool], Tensor[(840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(825), float32]) {
    %1263 = cast(%var_3149, dtype="int32") /* ty=Tensor[(13, 9, 10), int32] */;
    %1264 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(13, 9, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1265 = cast(meta[relay.Constant][52] /* ty=Tensor[(13, 9, 10), int32] */, dtype="int32") /* ty=Tensor[(13, 9, 10), int32] */;
    %1266 = dyn.reshape(%1263, %1264, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1267 = multiply(%1265, %1266) /* ty=Tensor[(13, 9, 10), int32] */;
    %1268 = cast(meta[relay.Constant][52] /* ty=Tensor[(13, 9, 10), int32] */, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
    %1269 = shape_of(%1267, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1270 = cast(%1267, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
    %1271 = dyn.reshape(%1268, %1269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1272 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
    %1273 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %1274 = cast(meta[relay.Constant][53] /* ty=Tensor[(300, 1), bool] */, dtype="bool") /* ty=Tensor[(300, 1), bool] */;
    %1275 = cast(%var_3179, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1276 = reshape(%1273, newshape=[]) /* ty=bool */;
    %1277 = reshape(%1274, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), bool] */;
    %1278 = reshape(%1275, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
    %1279 = @func_1858(%1276, %1277, %1278) /* ty=(Tensor[(3, 10, 10), bool], Tensor[(3, 10, 10), int16], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32]) */;
    %1280 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
    %1281 = cast(%var_3202, dtype="float32") /* ty=Tensor[(825), float32] */;
    %1282 = reshape(%1281, newshape=[825]) /* ty=Tensor[(825), float32] */;
    %1283 = @func_2407(%1282) /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(825), float32], Tensor[(2, 13, 12), int32]) */;
    %1284 = greater(%1270, %1271) /* ty=Tensor[(13, 9, 10), bool] */;
    %1285 = %1272.0;
    %1286 = %1279.3;
    %1287 = %1280.0;
    %1288 = %1283.5;
    (%1284, %1285, %1286, True /* ty=bool */, meta[relay.Constant][53] /* ty=Tensor[(300, 1), bool] */, %var_3179, %1287, %1288, %var_3202)
  };
  %1289(%var_3207, %var_3208, %var_3209) /* ty=(Tensor[(13, 9, 10), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], bool, Tensor[(300, 1), bool], Tensor[(840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(825), float32]) */
}

def @func_4049(%var_4047: Tensor[(2, 420), float32], %var_4048: Tensor[(2, 2, 2), float64]) -> (Tensor[(2, 2, 2), float64], Tensor[(2, 2, 2), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 2, 2), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1313 = fn (%var_3994: Tensor[(2, 420), float32], %var_3996: Tensor[(2, 2, 2), float64]) -> (Tensor[(2, 2, 2), float64], Tensor[(2, 2, 2), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 2, 2), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %1290 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 2, 2), float64] */;
    %1291 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 2, 2), float64] */;
    %1292 = cast(%var_3994, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
    %1293 = reshape(%1292, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %1294 = @func_3621(%1293) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), uint32], Tensor[(825), float32]) */;
    %1295 = cast(%var_3996, dtype="bool") /* ty=Tensor[(2, 2, 2), bool] */;
    %1296 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(2, 2, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1297 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 2, 2), float64] */, dtype="bool") /* ty=Tensor[(2, 2, 2), bool] */;
    %1298 = dyn.reshape(%1295, %1296, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1299 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
    %1300 = cast(%var_3994, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
    %1301 = cos(%1300) /* ty=Tensor[(2, 420), float32] */;
    %1302 = cast(%1301, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
    %1303 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1304 = @func_2310() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1305 = tan(%1290) /* ty=Tensor[(2, 2, 2), float64] */;
    %1306 = sqrt(%1291) /* ty=Tensor[(2, 2, 2), float64] */;
    %1307 = %1294.0;
    %1308 = greater(%1297, %1298) /* ty=Tensor[(2, 2, 2), bool] */;
    %1309 = %1299.1;
    %1310 = log2(%1302) /* ty=Tensor[(2, 420), float32] */;
    %1311 = %1303.0;
    %1312 = %1304.1;
    (%1305, %1306, %1307, %1308, %1309, %1310, %1311, %1312)
  };
  %1313(%var_4047, %var_4048) /* ty=(Tensor[(2, 2, 2), float64], Tensor[(2, 2, 2), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 2, 2), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_10143(%var_10141: Tensor[(9, 7, 6), int64]) -> (Tensor[(9, 7, 6), int64],) {
  @func_10140(%var_10141) /* ty=(Tensor[(9, 7, 6), int64],) */
}

def @func_10555() -> Tensor[(2, 13, 12), float64] {
  %1314 = fn () -> Tensor[(2, 13, 12), float64] {
    @func_2287() /* ty=Tensor[(2, 13, 12), float64] */
  };
  %1314() /* ty=Tensor[(2, 13, 12), float64] */
}

def @func_8305() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1319 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %1315 = @func_3513() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1316 = @func_5181() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32]) */;
    %1317 = %1315.0;
    %1318 = %1316.1;
    (%1317, %1318)
  };
  %1319() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_11636() -> Tensor[(2, 13, 12), int32] {
  @func_4675() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_477() -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1332 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %1320 = @func_273() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
    %1321 = cast(meta[relay.Constant][55] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1322 = reshape(%1321, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
    %1323 = cast(meta[relay.Constant][55] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1324 = reshape(%1323, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %1325 = @func_351(%1324) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */;
    %1326 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1327 = %1320.0;
    %1328 = @func_77(%1322) /* ty=Tensor[(12, 7, 10), float32] */;
    %1329 = %1325.1;
    %1330 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
    %1331 = %1326.0;
    (%1327, %1328, meta[relay.Constant][55] /* ty=Tensor[(840), float32] */, %1329, %1330, %1331)
  };
  %1332() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_9328() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1336 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %1333 = @func_2046() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1334 = @func_7949() /* ty=Tensor[(2, 13, 12), int32] */;
    %1335 = %1333.0;
    (%1334, %1335)
  };
  %1336() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_1521() -> (Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) {
  @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */
}

def @func_79(%var_78: Tensor[(12, 7, 10), float32]) -> Tensor[(12, 7, 10), float32] {
  %1338 = fn (%var_65: Tensor[(12, 7, 10), float32]) -> Tensor[(12, 7, 10), float32] {
    %1337 = cast(%var_65, dtype="float32") /* ty=Tensor[(12, 7, 10), float32] */;
    sinh(%1337) /* ty=Tensor[(12, 7, 10), float32] */
  };
  %1338(%var_78) /* ty=Tensor[(12, 7, 10), float32] */
}

def @func_3442() -> (Tensor[(2, 13, 12), float32],) {
  %1341 = fn () -> (Tensor[(2, 13, 12), float32],) {
    %1339 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
    %1340 = %1339.1;
    (%1340,)
  };
  %1341() /* ty=(Tensor[(2, 13, 12), float32],) */
}

def @func_9850() -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) {
  @func_9848() /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) */
}

def @func_9277(%var_9273: Tensor[(840, 1), uint8], %var_9274: Tensor[(48), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840, 1), uint8], Tensor[(48), float32]) {
  %1342 = @func_2887() /* ty=(Tensor[(2, 13, 12), bool],) */;
  %1343 = cast(%var_9273, dtype="uint8") /* ty=Tensor[(840, 1), uint8] */;
  %1344 = cast(%var_9274, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1345 = reshape(%1343, newshape=[840]) /* ty=Tensor[(840), uint8] */;
  %1346 = reshape(%1344, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1347 = @func_5833(%1345, %1346) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), int8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32]) */;
  %1348 = %1342.0;
  %1349 = %1347.2;
  (%1348, %1349, %var_9273, %var_9274)
}

def @func_4913(%var_4910: Tensor[(840), float32], %var_4911: Tensor[(8), float64], %var_4912: bool) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(8), float64], Tensor[(2, 13, 12), float32], Tensor[(2, 420), bool], Tensor[(2, 13, 12), int32], bool) {
  %1370 = fn (%var_4857: Tensor[(840), float32], %var_4858: Tensor[(8), float64], %var_4905: bool) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(8), float64], Tensor[(2, 13, 12), float32], Tensor[(2, 420), bool], Tensor[(2, 13, 12), int32], bool) {
    %1350 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1351 = cast(%var_4857, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1352 = cast(%var_4858, dtype="float64") /* ty=Tensor[(8), float64] */;
    %1353 = reshape(%1351, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
    %1354 = reshape(%1352, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float64] */;
    %1355 = @func_4046(%1353, %1354) /* ty=(Tensor[(2, 2, 2), float64], Tensor[(2, 2, 2), float64], Tensor[(2, 13, 12), int32], Tensor[(2, 2, 2), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1356 = @func_4638() /* ty=(Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), float32], Tensor[(840), uint8]) */;
    %1357 = cast(%var_4857, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1358 = cast(%var_4857, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1359 = reshape(%1357, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
    %1360 = reshape(%1358, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
    %1361 = @func_2557(%1359, %1360) /* ty=(Tensor[(2, 13, 12), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 420), bool]) */;
    %1362 = cast(%var_4905, dtype="bool") /* ty=bool */;
    %1363 = reshape(%1362, newshape=[]) /* ty=bool */;
    %1364 = @func_1109(%1363) /* ty=(Tensor[(4, 13, 4), bool], Tensor[(2, 13, 12), int32], Tensor[(1680), uint8]) */;
    %1365 = %1350.0;
    %1366 = %1355.6;
    %1367 = %1356.0;
    %1368 = %1361.2;
    %1369 = %1364.1;
    (%1365, %1366, %var_4857, %var_4858, %1367, %1368, %1369, %var_4905)
  };
  %1370(%var_4910, %var_4911, %var_4912) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(8), float64], Tensor[(2, 13, 12), float32], Tensor[(2, 420), bool], Tensor[(2, 13, 12), int32], bool) */
}

def @func_1519() -> (Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) {
  %1371 = @func_1036() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32]) */;
  %1372 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1373 = @func_785() /* ty=(Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), float32]) */;
  %1374 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1375 = %1371.0;
  %1376 = %1372.0;
  %1377 = %1373.1;
  %1378 = %1374.2;
  (%1375, %1376, %1377, %1378)
}

def @func_354(%var_352: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) {
  @func_351(%var_352) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(840), uint8]) */
}

def @func_8248(%var_8246: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) {
  @func_8245(%var_8246) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */
}

def @func_12264(%var_12253: Tensor[(9, 6, 11), int8], %var_12254: Tensor[(9, 6, 11), int8], %var_12261: Tensor[(312), int32]) -> (Tensor[(9, 6, 11), int8], Tensor[(2, 13, 12), int32], Tensor[(312), int32], Tensor[(840), float32]) {
  %1379 = cast(%var_12254, dtype="int8") /* ty=Tensor[(9, 6, 11), int8] */;
  %1380 = shape_of(%var_12253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1381 = cast(%var_12253, dtype="int8") /* ty=Tensor[(9, 6, 11), int8] */;
  %1382 = dyn.reshape(%1379, %1380, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1383 = cast(%var_12261, dtype="int32") /* ty=Tensor[(312), int32] */;
  %1384 = cast(meta[relay.Constant][56] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1385 = cast(meta[relay.Constant][56] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1386 = reshape(%1383, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), int32] */;
  %1387 = reshape(%1384, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %1388 = reshape(%1385, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %1389 = @func_1208(%1386, %1387, %1388) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840), uint64]) */;
  %1390 = left_shift(%1381, %1382) /* ty=Tensor[(9, 6, 11), int8] */;
  %1391 = %1389.1;
  (%1390, %1391, %var_12261, meta[relay.Constant][56] /* ty=Tensor[(840), float32] */)
}

def @func_12004(%var_12002: Tensor[(4, 4, 5), int16], %var_12003: Tensor[(4, 4, 5), int16]) -> (Tensor[(4, 4, 5), bool],) {
  %1397 = fn (%var_11981: Tensor[(4, 4, 5), int16], %var_11982: Tensor[(4, 4, 5), int16]) -> (Tensor[(4, 4, 5), bool],) {
    %1392 = cast(%var_11982, dtype="bool") /* ty=Tensor[(4, 4, 5), bool] */;
    %1393 = shape_of(%var_11981, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1394 = cast(%var_11981, dtype="bool") /* ty=Tensor[(4, 4, 5), bool] */;
    %1395 = dyn.reshape(%1392, %1393, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1396 = greater_equal(%1394, %1395) /* ty=Tensor[(4, 4, 5), bool] */;
    (%1396,)
  };
  %1397(%var_12002, %var_12003) /* ty=(Tensor[(4, 4, 5), bool],) */
}

def @func_7019() -> Tensor[(2, 13, 12), uint32] {
  %1398 = @func_3801() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1398.0
}

def @func_4990() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
  %1402 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) {
    %1399 = @func_2228() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */;
    %1400 = @func_3292() /* ty=Tensor[(2, 13, 12), int32] */;
    %1401 = %1399.1;
    (%1400, %1401)
  };
  %1402() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32]) */
}

def @func_11438(%var_11436: Tensor[(840), uint8], %var_11437: Tensor[(48), float32]) -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), uint32], Tensor[(840), int64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(48), float32]) {
  %1421 = fn (%var_11373: Tensor[(840), uint8], %var_11408: Tensor[(48), float32]) -> (Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), uint32], Tensor[(840), int64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(48), float32]) {
    %1403 = @func_2182() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */;
    %1404 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
    %1405 = %1404.2;
    %1406 = cast(%var_11373, dtype="int64") /* ty=Tensor[(840), int64] */;
    %1407 = shape_of(%1405, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1408 = cast(%1405, dtype="int64") /* ty=Tensor[(840), int64] */;
    %1409 = dyn.reshape(%1406, %1407, newshape=[]) /* ty=Tensor[(?), int64] */;
    %1410 = @func_9531() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1411 = left_shift(%1408, %1409) /* ty=Tensor[(840), int64] */;
    %1412 = cast(%1411, dtype="uint8") /* ty=Tensor[(840), uint8] */;
    %1413 = cast(%var_11408, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1414 = reshape(%1412, newshape=[840, 1]) /* ty=Tensor[(840, 1), uint8] */;
    %1415 = reshape(%1413, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1416 = @func_9277(%1414, %1415) /* ty=(Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(840, 1), uint8], Tensor[(48), float32]) */;
    %1417 = %1403.1;
    %1418 = @func_7019() /* ty=Tensor[(2, 13, 12), uint32] */;
    %1419 = %1410.0;
    %1420 = %1416.0;
    (%1417, %1418, %1411, %1419, %1420, %var_11408)
  };
  %1421(%var_11436, %var_11437) /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), uint32], Tensor[(840), int64], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), bool], Tensor[(48), float32]) */
}

def @func_7896(%var_7893: Tensor[(7, 13, 8), float32], %var_7894: Tensor[(7, 13, 8), float32], %var_7895: Tensor[(2, 4), float64]) -> (Tensor[(7, 13, 8), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 4), float64]) {
  @func_7891(%var_7893, %var_7894, %var_7895) /* ty=(Tensor[(7, 13, 8), float32], Tensor[(12, 2, 2), float32], Tensor[(48), float32], Tensor[(12, 7, 10), float32], Tensor[(2, 4), float64]) */
}

def @func_7812() -> Tensor[(2, 13, 12), int16] {
  @func_7810() /* ty=Tensor[(2, 13, 12), int16] */
}

def @func_11223() -> (Tensor[(2, 13, 12), uint32],) {
  @func_11221() /* ty=(Tensor[(2, 13, 12), uint32],) */
}

def @func_12890() -> (Tensor[(2, 13, 12), uint32],) {
  %1423 = fn () -> (Tensor[(2, 13, 12), uint32],) {
    %1422 = @func_12288() /* ty=Tensor[(2, 13, 12), uint32] */;
    (%1422,)
  };
  %1423() /* ty=(Tensor[(2, 13, 12), uint32],) */
}

def @func_6612() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) {
  %1428 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) {
    %1424 = @func_1915() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32]) */;
    %1425 = @func_3801() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1426 = %1424.0;
    %1427 = %1425.0;
    (%1426, %1427)
  };
  %1428() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */
}

def @func_9131(%var_9130: Tensor[(1200), float64]) -> (Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64]) {
  %1440 = fn (%var_9074: Tensor[(1200), float64]) -> (Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64]) {
    %1429 = @func_3801() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1430 = cast(%var_9074, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %1431 = reshape(%1430, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
    %1432 = @func_1634(%1431) /* ty=(Tensor[(15, 5, 16), float64],) */;
    %1433 = cast(%var_9074, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %1434 = reshape(%1433, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
    %1435 = @func_1634(%1434) /* ty=(Tensor[(15, 5, 16), float64],) */;
    %1436 = %1429.3;
    %1437 = %1432.0;
    %1438 = @func_5657() /* ty=Tensor[(2, 13, 12), int32] */;
    %1439 = %1435.0;
    (%1436, %1437, %var_9074, %1438, %1439)
  };
  %1440(%var_9130) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 13, 12), int32], Tensor[(15, 5, 16), float64]) */
}

def @func_3293() -> Tensor[(2, 13, 12), int32] {
  %1441 = fn () -> Tensor[(2, 13, 12), int32] {
    @func_1656() /* ty=Tensor[(2, 13, 12), int32] */
  };
  %1441() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_5088() -> (Tensor[(2, 13, 12), int32],) {
  %1443 = fn () -> (Tensor[(2, 13, 12), int32],) {
    %1442 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
    (%1442,)
  };
  %1443() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_6866(%var_6864: Tensor[(14, 9, 3), float64], %var_6865: Tensor[(14, 9, 3), float64]) -> (Tensor[(14, 9, 3), float32], Tensor[(2, 13, 12), float32]) {
  %1453 = fn (%var_6837: Tensor[(14, 9, 3), float64], %var_6838: Tensor[(14, 9, 3), float64]) -> (Tensor[(14, 9, 3), float32], Tensor[(2, 13, 12), float32]) {
    %1444 = cast(%var_6838, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
    %1445 = shape_of(%var_6837, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1446 = cast(%var_6837, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
    %1447 = dyn.reshape(%1444, %1445, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1448 = floor_mod(%1446, %1447) /* ty=Tensor[(14, 9, 3), float64] */;
    %1449 = cast(%1448, dtype="float32") /* ty=Tensor[(14, 9, 3), float32] */;
    %1450 = @func_2487() /* ty=(Tensor[(2, 13, 12), float32],) */;
    %1451 = asin(%1449) /* ty=Tensor[(14, 9, 3), float32] */;
    %1452 = %1450.0;
    (%1451, %1452)
  };
  %1453(%var_6864, %var_6865) /* ty=(Tensor[(14, 9, 3), float32], Tensor[(2, 13, 12), float32]) */
}

def @func_11162(%var_11161: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], int64, Tensor[(1680), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], Tensor[(1188, 840), int16]) {
  %1485 = fn (%var_11102: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], int64, Tensor[(1680), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], Tensor[(1188, 840), int16]) {
    %1454 = @func_5907() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(312), int32]) */;
    %1455 = @func_3441() /* ty=(Tensor[(2, 13, 12), float32],) */;
    %1456 = cast(%var_11102, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1457 = reshape(%1456, newshape=[1, 840]) /* ty=Tensor[(1, 840), float32] */;
    %1458 = @func_1607(%1457) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(1, 840), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1459 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1460 = cast(meta[relay.Constant][57] /* ty=Tensor[(1188, 1), int64] */, dtype="int64") /* ty=Tensor[(1188, 1), int64] */;
    %1461 = cast(meta[relay.Constant][58] /* ty=Tensor[(1680), uint8] */, dtype="uint8") /* ty=Tensor[(1680), uint8] */;
    %1462 = reshape(%1459, newshape=[]) /* ty=int64 */;
    %1463 = reshape(%1460, newshape=[11, 9, 12]) /* ty=Tensor[(11, 9, 12), int64] */;
    %1464 = reshape(%1461, newshape=[1, 1680]) /* ty=Tensor[(1, 1680), uint8] */;
    %1465 = @func_4484(%1462, %1463, %1464) /* ty=(Tensor[(11, 9, 12), int64], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], Tensor[(2, 13, 12), bool]) */;
    %1466 = @func_6679() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16], Tensor[(2, 13, 12), int32], Tensor[(840, 1), float32], Tensor[(2, 13, 12), int32], Tensor[(4, 420), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], uint8) */;
    %1467 = cast(%var_11102, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1468 = cast(meta[relay.Constant][57] /* ty=Tensor[(1188, 1), int64] */, dtype="float32") /* ty=Tensor[(1188, 1), float32] */;
    %1469 = power(%1467, %1468) /* ty=Tensor[(1188, 840), float32] */;
    %1470 = cast(-8 /* ty=int64 */, dtype="bool") /* ty=bool */;
    %1471 = cast(%var_11102, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1472 = reshape(%1470, newshape=[]) /* ty=bool */;
    %1473 = reshape(%1471, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %1474 = @func_3427(%1472, %1473) /* ty=(Tensor[(4, 13, 14), float32], Tensor[(3, 10, 10), int16], bool, Tensor[(300), bool], Tensor[(840), float32], Tensor[(840), uint64]) */;
    %1475 = %1474.2;
    %1476 = cast(%1469, dtype="int16") /* ty=Tensor[(1188, 840), int16] */;
    %1477 = cast(%1475, dtype="int16") /* ty=int16 */;
    %1478 = %1454.0;
    %1479 = %1455.0;
    %1480 = %1458.5;
    %1481 = %1465.2;
    %1482 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
    %1483 = %1466.8;
    %1484 = left_shift(%1476, %1477) /* ty=Tensor[(1188, 840), int16] */;
    (%1478, %1479, %1480, %1481, -8 /* ty=int64 */, meta[relay.Constant][58] /* ty=Tensor[(1680), uint8] */, %1482, %1483, %1484)
  };
  %1485(%var_11161) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(1, 1680), uint8], int64, Tensor[(1680), uint8], Tensor[(2, 13, 12), int32], Tensor[(8, 14, 15), bool], Tensor[(1188, 840), int16]) */
}

def @func_9704(%var_9703: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(16, 13, 13), float32], Tensor[(2704), float32]) {
  %1494 = fn (%var_9693: Tensor[(840), float32]) -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(16, 13, 13), float32], Tensor[(2704), float32]) {
    %1486 = @func_9299() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1487 = cast(%var_9693, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1488 = reshape(%1487, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
    %1489 = cast(meta[relay.Constant][59] /* ty=Tensor[(2704), float32] */, dtype="float32") /* ty=Tensor[(2704), float32] */;
    %1490 = reshape(%1489, newshape=[16, 13, 13]) /* ty=Tensor[(16, 13, 13), float32] */;
    %1491 = %1486.1;
    %1492 = @func_77(%1488) /* ty=Tensor[(12, 7, 10), float32] */;
    %1493 = @func_6370(%1490) /* ty=Tensor[(16, 13, 13), float32] */;
    (%1491, %1492, %var_9693, %1493, meta[relay.Constant][59] /* ty=Tensor[(2704), float32] */)
  };
  %1494(%var_9703) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(16, 13, 13), float32], Tensor[(2704), float32]) */
}

def @func_6753() -> (Tensor[(2, 13, 12), int32],) {
  %1497 = fn () -> (Tensor[(2, 13, 12), int32],) {
    %1495 = @func_3965() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) */;
    %1496 = %1495.0;
    (%1496,)
  };
  %1497() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_1658() -> Tensor[(2, 13, 12), int32] {
  @func_1656() /* ty=Tensor[(2, 13, 12), int32] */
}

def @func_3457() -> (Tensor[(840), float32],) {
  %1498 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1499 = %1498.2;
  (%1499,)
}

def @func_3967() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) {
  @func_3965() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float64], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(420, 2), float32]) */
}

def @func_12964() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], bool, bool, Tensor[(2, 13, 12), int32]) {
  %1500 = @func_12122() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1501 = @func_999() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1502 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1503 = reshape(%1502, newshape=[]) /* ty=bool */;
  %1504 = @func_5263(%1503) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(1680), uint8], bool) */;
  %1505 = %1500.2;
  %1506 = %1501.0;
  %1507 = %1504.2;
  %1508 = @func_598() /* ty=Tensor[(2, 13, 12), int32] */;
  (%1505, %1506, %1507, True /* ty=bool */, %1508)
}

def @func_10764() -> (Tensor[(2, 13, 12), int32],) {
  @func_10762() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_5049() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1513 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %1509 = @func_476() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1510 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1511 = %1509.0;
    %1512 = %1510.0;
    (%1511, %1512)
  };
  %1513() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_3427(%var_3402: bool, %var_3404: Tensor[(840), float32]) -> (Tensor[(4, 13, 14), float32], Tensor[(3, 10, 10), int16], bool, Tensor[(300), bool], Tensor[(840), float32], Tensor[(840), uint64]) {
  %1514 = cast(meta[relay.Constant][60] /* ty=Tensor[(4, 13, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %1515 = cast(%var_3402, dtype="bool") /* ty=bool */;
  %1516 = cast(meta[relay.Constant][61] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %1517 = cast(%var_3404, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1518 = reshape(%1515, newshape=[]) /* ty=bool */;
  %1519 = reshape(%1516, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), bool] */;
  %1520 = reshape(%1517, newshape=[2, 420]) /* ty=Tensor[(2, 420), float32] */;
  %1521 = @func_1858(%1518, %1519, %1520) /* ty=(Tensor[(3, 10, 10), bool], Tensor[(3, 10, 10), int16], Tensor[(2, 13, 12), int32], Tensor[(2, 420), float32], Tensor[(2, 13, 12), int32]) */;
  %1522 = cast(%var_3404, dtype="float32") /* ty=Tensor[(840), float32] */;
  %1523 = reshape(%1522, newshape=[840, 1]) /* ty=Tensor[(840, 1), float32] */;
  %1524 = @func_1340(%1523) /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint64], Tensor[(840, 1), float32]) */;
  %1525 = tan(%1514) /* ty=Tensor[(4, 13, 14), float32] */;
  %1526 = %1521.1;
  %1527 = %1524.1;
  (%1525, %1526, %var_3402, meta[relay.Constant][61] /* ty=Tensor[(300), bool] */, %var_3404, %1527)
}

def @func_274() -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
  %1533 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) {
    %1528 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1529 = cast(meta[relay.Constant][62] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %1530 = reshape(%1529, newshape=[12, 7, 10]) /* ty=Tensor[(12, 7, 10), float32] */;
    %1531 = %1528.0;
    %1532 = @func_77(%1530) /* ty=Tensor[(12, 7, 10), float32] */;
    (%1531, %1532, meta[relay.Constant][62] /* ty=Tensor[(840), float32] */)
  };
  %1533() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */
}

def @func_6235() -> (Tensor[(2, 13, 12), int32],) {
  %1536 = fn () -> (Tensor[(2, 13, 12), int32],) {
    %1534 = @func_4651() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1535 = %1534.0;
    (%1535,)
  };
  %1536() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_11671() -> (Tensor[(2, 13, 12), int32],) {
  @func_11669() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_6783() -> (Tensor[(840), uint8], Tensor[(2, 13, 12), int32]) {
  %1537 = @func_4638() /* ty=(Tensor[(2, 13, 12), float32], Tensor[(2, 13, 12), float32], Tensor[(840), uint8]) */;
  %1538 = %1537.2;
  %1539 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
  (%1538, %1539)
}

def @func_6970() -> (Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) {
  @func_6968() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */
}

def @func_13282() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16]) {
  %1543 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16]) {
    %1540 = @func_12745() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), float32], Tensor[(2, 13, 12), int32]) */;
    %1541 = %1540.3;
    %1542 = @func_12389() /* ty=Tensor[(2, 13, 12), int16] */;
    (%1541, %1542)
  };
  %1543() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int16]) */
}

def @func_11221() -> (Tensor[(2, 13, 12), uint32],) {
  %1544 = @func_11179() /* ty=(Tensor[(2, 13, 12), uint32],) */;
  %1545 = %1544.0;
  (%1545,)
}

def @func_10683() -> (Tensor[(2, 13, 12), int32],) {
  %1548 = fn () -> (Tensor[(2, 13, 12), int32],) {
    %1546 = @func_3553() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
    %1547 = %1546.1;
    (%1547,)
  };
  %1548() /* ty=(Tensor[(2, 13, 12), int32],) */
}

def @func_2693() -> (Tensor[(2, 13, 12), uint32], Tensor[(840), uint8], Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(12, 70), float32], Tensor[(2, 13, 12), uint32]) {
  %1549 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1550 = @func_1519() /* ty=(Tensor[(12, 7, 10), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), float32], Tensor[(840), float32]) */;
  %1551 = @func_391() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1552 = @func_2614() /* ty=(Tensor[(2, 13, 12), uint32], Tensor[(2, 13, 12), bool], Tensor[(12, 70), float32], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
  %1553 = @func_223() /* ty=(Tensor[(2, 13, 12), int32],) */;
  %1554 = %1553.0;
  %1555 = cast(%1554, dtype="float32") /* ty=Tensor[(2, 13, 12), float32] */;
  %1556 = sin(%1555) /* ty=Tensor[(2, 13, 12), float32] */;
  %1557 = cast(%1554, dtype="uint32") /* ty=Tensor[(2, 13, 12), uint32] */;
  %1558 = shape_of(%1556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1559 = cast(%1556, dtype="uint32") /* ty=Tensor[(2, 13, 12), uint32] */;
  %1560 = dyn.reshape(%1557, %1558, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1561 = %1549.0;
  %1562 = @func_2453() /* ty=Tensor[(840), uint8] */;
  %1563 = %1550.0;
  %1564 = %1551.0;
  %1565 = %1552.2;
  %1566 = logical_xor(%1559, %1560) /* ty=Tensor[(2, 13, 12), uint32] */;
  (%1561, %1562, %1563, %1564, %1565, %1566)
}

def @func_8682() -> (Tensor[(2, 13, 12), int32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  @func_8680() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(840), uint8], Tensor[(840), uint8], Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

def @func_2454() -> Tensor[(840), uint8] {
  %1568 = fn () -> Tensor[(840), uint8] {
    %1567 = @func_1257() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32], Tensor[(840), uint8]) */;
    %1567.2
  };
  %1568() /* ty=Tensor[(840), uint8] */
}

def @func_13138() -> Tensor[(2, 13, 12), uint32] {
  %1569 = fn () -> Tensor[(2, 13, 12), uint32] {
    @func_4553() /* ty=Tensor[(2, 13, 12), uint32] */
  };
  %1569() /* ty=Tensor[(2, 13, 12), uint32] */
}

def @func_8152() -> Tensor[(840), float32] {
  %1570 = @func_4103() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(12, 7, 10), float32], Tensor[(840), float32]) */;
  %1570.2
}

def @func_2183() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) {
  %1581 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) {
    %1571 = @func_897() /* ty=(Tensor[(2, 13, 12), int32],) */;
    %1572 = %1571.0;
    %1573 = cast(%1572, dtype="float64") /* ty=Tensor[(2, 13, 12), float64] */;
    %1574 = rsqrt(%1573) /* ty=Tensor[(2, 13, 12), float64] */;
    %1575 = cast(%1572, dtype="uint32") /* ty=Tensor[(2, 13, 12), uint32] */;
    %1576 = shape_of(%1574, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1577 = cast(%1574, dtype="uint32") /* ty=Tensor[(2, 13, 12), uint32] */;
    %1578 = dyn.reshape(%1575, %1576, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1579 = @func_378() /* ty=Tensor[(2, 13, 12), int32] */;
    %1580 = bitwise_or(%1577, %1578) /* ty=Tensor[(2, 13, 12), uint32] */;
    (%1579, %1580)
  };
  %1581() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), uint32]) */
}

def @func_2311() -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
  %1585 = fn () -> (Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) {
    %1582 = @func_1023() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */;
    %1583 = %1582.1;
    %1584 = @func_498() /* ty=Tensor[(2, 13, 12), int32] */;
    (%1583, %1584)
  };
  %1585() /* ty=(Tensor[(2, 13, 12), int32], Tensor[(2, 13, 12), int32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen289/build/output.py", line 4664, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:04:05] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


==========mod==========
#[version = "0.0.5"]
def @func_2021(%var_1968: Tensor[(9, 14, 4), int8], %var_2003: Tensor[(30), int64], %var_2004: Tensor[(360), int64]) -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(10, 5), int64], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), float32]) {
  %0 = @func_1683() /* ty=(Tensor[(60), float32],) */;
  %1 = @func_1683() /* ty=(Tensor[(60), float32],) */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 5), int64] */, dtype="int64") /* ty=Tensor[(10, 5), int64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 5), int64] */, dtype="int64") /* ty=Tensor[(10, 5), int64] */;
  %4 = reshape(%2, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %5 = reshape(%3, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %6 = cast(%var_2003, dtype="int64") /* ty=Tensor[(30), int64] */;
  %7 = cast(%var_2004, dtype="int64") /* ty=Tensor[(360), int64] */;
  %8 = cast(%var_2004, dtype="float64") /* ty=Tensor[(360), float64] */;
  %9 = reshape(%6, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
  %10 = reshape(%7, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), int64] */;
  %11 = reshape(%8, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float64] */;
  %12 = @func_183(%9, %10, %11) /* ty=(Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) */;
  %13 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %14 = cast(%var_1968, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %15 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%13, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %18 = mod(%16, %17) /* ty=Tensor[(9, 14, 4), float32] */;
  %19 = cast(%18, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %20 = shape_of(%var_1968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%var_1968, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %23 = equal(%21, %22) /* ty=Tensor[(9, 14, 4), bool] */;
  %24 = cast(%23, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %25 = %0.0;
  %26 = %1.0;
  %27 = @func_1860(%4, %5) /* ty=Tensor[(5, 5, 2), int64] */;
  %28 = %12.4;
  %29 = acosh(%24) /* ty=Tensor[(9, 14, 4), float32] */;
  (%25, %26, %27, meta[relay.Constant][0] /* ty=Tensor[(10, 5), int64] */, %28, %var_2003, %var_2004, %29)
}

def @func_7842() -> Tensor[(60), float32] {
  @func_1783() /* ty=Tensor[(60), float32] */
}

def @func_9042() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) {
  %30 = @func_5308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %31 = @func_4945() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
  %32 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %33 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %34 = @func_5946() /* ty=Tensor[(60), float32] */;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(60), float32] */;
  %36 = reshape(%35, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %37 = @func_5735(%36) /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(13, 3, 8), int32], Tensor[(312, 1), int32], Tensor[(6, 14, 7), bool], Tensor[(588), float32], Tensor[(9, 14, 4), int8], Tensor[(54), float64], Tensor[(130), float64], Tensor[(60), float32]) */;
  %38 = %30.0;
  %39 = %31.1;
  %40 = @func_6848() /* ty=Tensor[(9, 14, 4), int8] */;
  %41 = %32.0;
  %42 = %33.0;
  %43 = %37.0;
  (%38, %39, %34, %40, %41, %42, %43)
}

def @func_10466(%var_10423: float32, %var_10424: Tensor[(48), float32], %var_10450: Tensor[(1, 4, 6), float32]) -> (Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(48), float32], Tensor[(60), float32], Tensor[(130), float64], Tensor[(1, 4, 6), bool]) {
  %44 = @func_5964() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %45 = cast(%var_10423, dtype="float32") /* ty=float32 */;
  %46 = cast(%var_10424, dtype="float32") /* ty=Tensor[(48), float32] */;
  %47 = reshape(%45, newshape=[]) /* ty=float32 */;
  %48 = reshape(%46, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float32] */;
  %49 = @func_382(%47, %48) /* ty=(Tensor[(30), int64], Tensor[(8, 6, 360), bool], Tensor[(8, 6, 130), float32], Tensor[(8, 6, 130), bool]) */;
  %50 = cast(meta[relay.Constant][1] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %51 = reshape(%50, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %52 = @func_2129(%51) /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(1, 130), float64]) */;
  %53 = cast(%var_10423, dtype="bool") /* ty=bool */;
  %54 = cast(%var_10450, dtype="bool") /* ty=Tensor[(1, 4, 6), bool] */;
  %55 = %44.0;
  %56 = %49.0;
  %57 = %52.0;
  %58 = greater(%53, %54) /* ty=Tensor[(1, 4, 6), bool] */;
  (%55, %56, %var_10424, %57, meta[relay.Constant][1] /* ty=Tensor[(130), float64] */, %58)
}

def @func_10568() -> (Tensor[(360), int64], Tensor[(60), float32]) {
  %59 = @func_8434() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(10, 3), int64], Tensor[(360), int64]) */;
  %60 = @func_7823() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) */;
  %61 = %59.3;
  %62 = %60.3;
  (%61, %62)
}

def @func_1398() -> (Tensor[(9, 14, 4), int8],) {
  %63 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  (%63,)
}

def @func_11913(%var_11895: Tensor[(10, 8, 4), float32], %var_11899: Tensor[(12, 48), uint16]) -> (Tensor[(10, 8, 4), float32], Tensor[(12, 8, 6), uint16], Tensor[(12, 48), uint16]) {
  %64 = cast(%var_11895, dtype="float32") /* ty=Tensor[(10, 8, 4), float32] */;
  %65 = cast(%var_11899, dtype="uint16") /* ty=Tensor[(12, 48), uint16] */;
  %66 = reshape(%65, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), uint16] */;
  %67 = @func_10858(%66) /* ty=(Tensor[(12, 8, 6), uint16], Tensor[(12, 8, 6), float64]) */;
  %68 = atan(%64) /* ty=Tensor[(10, 8, 4), float32] */;
  %69 = %67.0;
  (%68, %69, %var_11899)
}

def @func_3960() -> (Tensor[(9, 14, 4), int8],) {
  %70 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %71 = %70.0;
  (%71,)
}

def @func_2542() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
  %72 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %73 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %74 = %72.0;
  %75 = %73.0;
  (%74, %75)
}

def @func_10827() -> Tensor[(60), float32] {
  %76 = @func_8700() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %76.1
}

def @func_3735(%var_3730: Tensor[(50), int64]) -> (Tensor[(9, 14, 4), uint16], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) {
  %77 = @func_2284() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %78 = cast(%var_3730, dtype="int64") /* ty=Tensor[(50), int64] */;
  %79 = cast(%var_3730, dtype="int64") /* ty=Tensor[(50), int64] */;
  %80 = reshape(%78, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %81 = reshape(%79, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %82 = %77.0;
  %83 = @func_1860(%80, %81) /* ty=Tensor[(5, 5, 2), int64] */;
  (%82, %83, %var_3730)
}

def @func_6733() -> (Tensor[(9, 14, 4), uint16], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130, 1), float64], Tensor[(60), float32]) {
  %84 = @func_5912() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */;
  %85 = cast(meta[relay.Constant][2] /* ty=Tensor[(130, 1), float64] */, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %86 = @func_1589() /* ty=Tensor[(60), float32] */;
  %87 = cast(%86, dtype="float32") /* ty=Tensor[(60), float32] */;
  %88 = cast(meta[relay.Constant][2] /* ty=Tensor[(130, 1), float64] */, dtype="bool") /* ty=Tensor[(130, 1), bool] */;
  %89 = reshape(%85, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %90 = reshape(%87, newshape=[1, 60]) /* ty=Tensor[(1, 60), float32] */;
  %91 = reshape(%88, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), bool] */;
  %92 = @func_2388(%89, %90, %91) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(?, 60), uint32], Tensor[(13, 2, 5), float64]) */;
  %93 = %84.1;
  %94 = %92.2;
  %95 = @func_1729() /* ty=Tensor[(60), float32] */;
  (%93, %86, %94, meta[relay.Constant][2] /* ty=Tensor[(130, 1), float64] */, %95)
}

def @func_108(%var_102: Tensor[(13, 2, 5), float64]) -> Tensor[(13, 2, 5), float64] {
  %96 = cast(%var_102, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
  asin(%96) /* ty=Tensor[(13, 2, 5), float64] */
}

def @func_8249(%var_8242: Tensor[(9, 7, 3), uint32], %var_8243: Tensor[(9, 7, 3), uint32]) -> (Tensor[(9, 7, 3), uint32],) {
  %97 = cast(%var_8243, dtype="uint32") /* ty=Tensor[(9, 7, 3), uint32] */;
  %98 = shape_of(%var_8242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%var_8242, dtype="uint32") /* ty=Tensor[(9, 7, 3), uint32] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %101 = bitwise_xor(%99, %100) /* ty=Tensor[(9, 7, 3), uint32] */;
  (%101,)
}

def @func_4461(%var_4362: Tensor[(16, 15, 13), float32], %var_4363: Tensor[(16, 15, 13), float32], %var_4398: Tensor[(130), float64]) -> (Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(16, 15, 13), float64], Tensor[(16, 15, 13), uint32], Tensor[(60), float32]) {
  %102 = cast(%var_4398, dtype="float64") /* ty=Tensor[(130), float64] */;
  %103 = reshape(%102, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %104 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %105 = cast(%var_4363, dtype="float32") /* ty=Tensor[(16, 15, 13), float32] */;
  %106 = shape_of(%var_4362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%var_4362, dtype="float32") /* ty=Tensor[(16, 15, 13), float32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %109 = divide(%107, %108) /* ty=Tensor[(16, 15, 13), float32] */;
  %110 = cast(%109, dtype="float64") /* ty=Tensor[(16, 15, 13), float64] */;
  %111 = cast(%var_4363, dtype="int32") /* ty=Tensor[(16, 15, 13), int32] */;
  %112 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%109, dtype="int32") /* ty=Tensor[(16, 15, 13), int32] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %115 = bitwise_and(%113, %114) /* ty=Tensor[(16, 15, 13), int32] */;
  %116 = cast(%115, dtype="float64") /* ty=Tensor[(16, 15, 13), float64] */;
  %117 = log2(%116) /* ty=Tensor[(16, 15, 13), float64] */;
  %118 = cast(%109, dtype="bool") /* ty=Tensor[(16, 15, 13), bool] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="bool") /* ty=Tensor[(16, 15, 13), bool] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %122 = less_equal(%120, %121) /* ty=Tensor[(16, 15, 13), bool] */;
  %123 = cast(%122, dtype="float64") /* ty=Tensor[(16, 15, 13), float64] */;
  %124 = asin(%123) /* ty=Tensor[(16, 15, 13), float64] */;
  %125 = cast(%122, dtype="uint32") /* ty=Tensor[(16, 15, 13), uint32] */;
  %126 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%124, dtype="uint32") /* ty=Tensor[(16, 15, 13), uint32] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %129 = @func_108(%103) /* ty=Tensor[(13, 2, 5), float64] */;
  %130 = @func_1589() /* ty=Tensor[(60), float32] */;
  %131 = %104.0;
  %132 = asinh(%110) /* ty=Tensor[(16, 15, 13), float64] */;
  %133 = bitwise_or(%127, %128) /* ty=Tensor[(16, 15, 13), uint32] */;
  %134 = @func_2668() /* ty=Tensor[(60), float32] */;
  (%129, %var_4398, %130, %131, %132, %133, %134)
}

def @func_9450() -> (Tensor[(9, 14, 4), int8],) {
  %135 = @func_5526() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %136 = %135.0;
  (%136,)
}

def @func_233(%var_198: Tensor[(4, 15, 1), float32]) -> (Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) {
  %137 = cast(%var_198, dtype="float32") /* ty=Tensor[(4, 15, 1), float32] */;
  %138 = cast(%var_198, dtype="float64") /* ty=Tensor[(4, 15, 1), float64] */;
  %139 = rsqrt(%137) /* ty=Tensor[(4, 15, 1), float32] */;
  %140 = atanh(%138) /* ty=Tensor[(4, 15, 1), float64] */;
  (%139, %140)
}

def @func_5564() -> Tensor[(60), float32] {
  %141 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %141.1
}

def @func_8652() -> (Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) {
  %142 = @func_6793() /* ty=(Tensor[(60), float32],) */;
  %143 = cast(meta[relay.Constant][3] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %144 = cast(meta[relay.Constant][3] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %145 = reshape(%143, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %146 = reshape(%144, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %147 = %142.0;
  %148 = @func_1860(%145, %146) /* ty=Tensor[(5, 5, 2), int64] */;
  (%147, %148, meta[relay.Constant][3] /* ty=Tensor[(50), int64] */)
}

def @func_9166() -> (Tensor[(60), float32], Tensor[(36, 10), int64]) {
  %149 = @func_5368() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(96), uint64], Tensor[(5, 5, 2), int64], Tensor[(30), int64], Tensor[(36, 10), int64]) */;
  %150 = @func_5032() /* ty=Tensor[(60), float32] */;
  %151 = %149.5;
  (%150, %151)
}

def @func_11564(%var_11544: Tensor[(14, 12, 15), float64]) -> (Tensor[(14, 12, 15), float64],) {
  %152 = cast(%var_11544, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
  %153 = atanh(%152) /* ty=Tensor[(14, 12, 15), float64] */;
  %154 = cast(%153, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
  %155 = sin(%154) /* ty=Tensor[(14, 12, 15), float64] */;
  (%155,)
}

def @func_3612() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %156 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %157 = @func_1783() /* ty=Tensor[(60), float32] */;
  %158 = @func_3392() /* ty=Tensor[(60), float32] */;
  %159 = %156.0;
  (%157, %158, %159)
}

def @func_7433() -> Tensor[(60), float32] {
  @func_5564() /* ty=Tensor[(60), float32] */
}

def @func_11737() -> (Tensor[(9, 14, 4), int8],) {
  %160 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  (%160,)
}

def @func_1252(%var_1216: Tensor[(60), float32]) -> (Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(60), float32]) {
  %161 = cast(%var_1216, dtype="float32") /* ty=Tensor[(60), float32] */;
  %162 = reshape(%161, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %163 = @func_233(%162) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
  %164 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %165 = %163.1;
  (%164, %165, %var_1216)
}

def @func_11217() -> (Tensor[(9, 14, 4), float64], Tensor[(60), float32], Tensor[(9, 14, 4), float32]) {
  %166 = @func_7823() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) */;
  %167 = @func_6157() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */;
  %168 = @func_9104() /* ty=(Tensor[(9, 14, 4), float32],) */;
  %169 = %166.4;
  %170 = %167.1;
  %171 = %168.0;
  (%169, %170, %171)
}

def @func_3999(%var_3994: Tensor[(50), int64]) -> (Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(50), int64], Tensor[(9, 14, 4), int8]) {
  %172 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %173 = cast(%var_3994, dtype="int64") /* ty=Tensor[(50), int64] */;
  %174 = reshape(%173, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %175 = @func_3735(%174) /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */;
  %176 = %172.2;
  %177 = %175.2;
  %178 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
  (%176, %177, %var_3994, %178)
}

def @func_6157() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %179 = @func_4945() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
  %180 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %181 = @func_5761() /* ty=(Tensor[(60), float32],) */;
  %182 = @func_3404() /* ty=Tensor[(60), float32] */;
  %183 = %179.0;
  %184 = %180.0;
  %185 = %181.0;
  (%182, %183, %184, %185)
}

def @func_1413() -> (Tensor[(9, 14, 4), int8],) {
  %186 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %187 = %186.0;
  (%187,)
}

def @func_8791() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %188 = @func_1845() /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */;
  %189 = @func_4095() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(630), int16]) */;
  %190 = @func_2244() /* ty=Tensor[(60), float32] */;
  %191 = %188.0;
  %192 = %189.0;
  %193 = @func_4546() /* ty=Tensor[(60), float32] */;
  (%190, %191, %192, %193)
}

def @func_3404() -> Tensor[(60), float32] {
  @func_1783() /* ty=Tensor[(60), float32] */
}

def @func_8231() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(5, 10), int64], float32) {
  %194 = @func_7334() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %195 = @func_3636() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %196 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 10), int64] */, dtype="int64") /* ty=Tensor[(5, 10), int64] */;
  %197 = cast(2.13066f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %198 = reshape(%196, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %199 = reshape(%197, newshape=[]) /* ty=float32 */;
  %200 = @func_6564(%198, %199) /* ty=(Tensor[(60), float32], Tensor[(50), int64], Tensor[(130), float64], Tensor[(50), int64], float32) */;
  %201 = %194.0;
  %202 = %195.0;
  %203 = %200.2;
  (%201, %202, %203, meta[relay.Constant][4] /* ty=Tensor[(5, 10), int64] */, 2.13066f /* ty=float32 */)
}

def @func_6793() -> (Tensor[(60), float32],) {
  %204 = @func_5564() /* ty=Tensor[(60), float32] */;
  (%204,)
}

def @func_10251() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %205 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %206 = @func_8652() /* ty=(Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */;
  %207 = %205.0;
  %208 = %206.0;
  (%207, %208)
}

def @func_10498() -> Tensor[(5, 12, 12), float32] {
  %209 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(5, 12, 12), float32] */;
  sqrt(%209) /* ty=Tensor[(5, 12, 12), float32] */
}

def @func_3334(%var_3321: Tensor[(858), float64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(5, 5, 2), int64], Tensor[(50), int64], Tensor[(60), float32], Tensor[(9, 14, 4), uint16], Tensor[(11, 6, 13), float64], Tensor[(858), float64], Tensor[(60), float32]) {
  %210 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %211 = cast(meta[relay.Constant][6] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %212 = cast(meta[relay.Constant][6] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %213 = reshape(%211, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %214 = reshape(%212, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %215 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %216 = @func_1328() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %217 = cast(%var_3321, dtype="float64") /* ty=Tensor[(858), float64] */;
  %218 = reshape(%217, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float64] */;
  %219 = @func_854(%218) /* ty=(Tensor[(11, 6, 13), float64],) */;
  %220 = @func_3102() /* ty=(Tensor[(60), float32],) */;
  %221 = @func_2668() /* ty=Tensor[(60), float32] */;
  %222 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %223 = %210.0;
  %224 = @func_1860(%213, %214) /* ty=Tensor[(5, 5, 2), int64] */;
  %225 = %215.0;
  %226 = %216.0;
  %227 = %219.0;
  %228 = %220.0;
  (%221, %222, %223, %224, meta[relay.Constant][6] /* ty=Tensor[(50), int64] */, %225, %226, %227, %var_3321, %228)
}

def @func_10023(%var_10017: Tensor[(12, 13, 10), float32], %var_10018: Tensor[(12, 13, 10), float32]) -> (Tensor[(12, 13, 10), float32],) {
  %229 = cast(%var_10018, dtype="float32") /* ty=Tensor[(12, 13, 10), float32] */;
  %230 = shape_of(%var_10017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%var_10017, dtype="float32") /* ty=Tensor[(12, 13, 10), float32] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %233 = floor_mod(%231, %232) /* ty=Tensor[(12, 13, 10), float32] */;
  (%233,)
}

def @func_6335(%var_6307: Tensor[(130), float64], %var_6309: float32) -> (Tensor[(60), float32], Tensor[(26, 5), int32], Tensor[(130), float64], Tensor[(50), int64], float32, Tensor[(9, 14, 4), int8]) {
  %234 = @func_5912() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */;
  %235 = cast(%var_6307, dtype="float64") /* ty=Tensor[(130), float64] */;
  %236 = cast(meta[relay.Constant][7] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %237 = cast(%var_6309, dtype="float32") /* ty=float32 */;
  %238 = reshape(%235, newshape=[26, 5]) /* ty=Tensor[(26, 5), float64] */;
  %239 = reshape(%236, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %240 = reshape(%237, newshape=[]) /* ty=float32 */;
  %241 = @func_4680(%238, %239, %240) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int32], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(50), int64], Tensor[(50), int64], Tensor[(8, 6, 130), bool], Tensor[(1, 48), float32], Tensor[(26, 5), int32]) */;
  %242 = %234.0;
  %243 = %241.8;
  %244 = @func_2429() /* ty=Tensor[(9, 14, 4), int8] */;
  (%242, %243, %var_6307, meta[relay.Constant][7] /* ty=Tensor[(50), int64] */, %var_6309, %244)
}

def @func_12856() -> (Tensor[(10, 3), int64], Tensor[(60), float32]) {
  %245 = @func_8434() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(10, 3), int64], Tensor[(360), int64]) */;
  %246 = @func_9910() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */;
  %247 = %245.2;
  %248 = %246.0;
  (%247, %248)
}

def @func_6629() -> Tensor[(9, 14, 4), int8] {
  %249 = @func_3499() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %249.1
}

def @func_8006() -> (Tensor[(9, 14, 4), int8],) {
  %250 = @func_5853() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) */;
  %251 = %250.0;
  (%251,)
}

def @func_8869() -> Tensor[(9, 14, 4), float64] {
  @func_3374() /* ty=Tensor[(9, 14, 4), float64] */
}

def @func_4501() -> (Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) {
  %252 = @func_2966() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %253 = @func_2476() /* ty=Tensor[(9, 14, 4), float32] */;
  %254 = %252.0;
  (%253, %254)
}

def @func_9104() -> (Tensor[(9, 14, 4), float32],) {
  %255 = @func_3569() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32]) */;
  %256 = %255.0;
  (%256,)
}

def @func_1860(%var_1849: Tensor[(5, 5, 2), int64], %var_1850: Tensor[(5, 5, 2), int64]) -> Tensor[(5, 5, 2), int64] {
  %257 = cast(%var_1850, dtype="int64") /* ty=Tensor[(5, 5, 2), int64] */;
  %258 = shape_of(%var_1849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%var_1849, dtype="int64") /* ty=Tensor[(5, 5, 2), int64] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  minimum(%259, %260) /* ty=Tensor[(5, 5, 2), int64] */
}

def @func_1645() -> (Tensor[(60), float32],) {
  %261 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %262 = %261.2;
  (%262,)
}

def @func_2683() -> Tensor[(9, 14, 4), int8] {
  %263 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %263.0
}

def @func_183(%var_129: Tensor[(1, 2, 15), int64], %var_130: Tensor[(12, 2, 15), int64], %var_157: Tensor[(12, 2, 15), float64]) -> (Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) {
  %264 = cast(%var_129, dtype="bool") /* ty=Tensor[(1, 2, 15), bool] */;
  %265 = cast(%var_130, dtype="bool") /* ty=Tensor[(12, 2, 15), bool] */;
  %266 = cast(meta[relay.Constant][8] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %267 = reshape(%266, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %268 = cast(%var_130, dtype="float64") /* ty=Tensor[(12, 2, 15), float64] */;
  %269 = acos(%268) /* ty=Tensor[(12, 2, 15), float64] */;
  %270 = cast(%var_157, dtype="float32") /* ty=Tensor[(12, 2, 15), float32] */;
  %271 = shape_of(%269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %272 = cast(%269, dtype="float32") /* ty=Tensor[(12, 2, 15), float32] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %274 = cast(meta[relay.Constant][8] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %275 = reshape(%274, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %276 = @func_108(%275) /* ty=Tensor[(13, 2, 5), float64] */;
  %277 = cast(%276, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
  %278 = reshape(%277, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %279 = cast(meta[relay.Constant][8] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %280 = reshape(%279, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %281 = greater_equal(%264, %265) /* ty=Tensor[(12, 2, 15), bool] */;
  %282 = @func_108(%267) /* ty=Tensor[(13, 2, 5), float64] */;
  %283 = floor_divide(%272, %273) /* ty=Tensor[(12, 2, 15), float32] */;
  %284 = @func_108(%278) /* ty=Tensor[(13, 2, 5), float64] */;
  %285 = @func_108(%280) /* ty=Tensor[(13, 2, 5), float64] */;
  (%281, %282, meta[relay.Constant][8] /* ty=Tensor[(130), float64] */, %283, %276, %284, %285)
}

def @func_3777() -> (Tensor[(9, 14, 4), uint16],) {
  %286 = @func_3033() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) */;
  %287 = %286.0;
  (%287,)
}

def @func_8918(%var_8880: Tensor[(256), uint64]) -> (Tensor[(60), float32], Tensor[(16, 8, 2), bool], Tensor[(256), uint64], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
  %288 = cast(%var_8880, dtype="uint64") /* ty=Tensor[(256), uint64] */;
  %289 = reshape(%288, newshape=[16, 8, 2]) /* ty=Tensor[(16, 8, 2), uint64] */;
  %290 = @func_4335(%289) /* ty=(Tensor[(16, 8, 2), bool],) */;
  %291 = @func_5278() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %292 = @func_4546() /* ty=Tensor[(60), float32] */;
  %293 = %290.0;
  %294 = @func_2429() /* ty=Tensor[(9, 14, 4), int8] */;
  %295 = %291.0;
  (%292, %293, %var_8880, %294, %295)
}

def @func_2730() -> (Tensor[(9, 14, 4), float64], Tensor[(60), float32]) {
  %296 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %299 = sigmoid(%298) /* ty=Tensor[(9, 14, 4), float32] */;
  %300 = cast(%299, dtype="float64") /* ty=Tensor[(9, 14, 4), float64] */;
  %301 = @func_1683() /* ty=(Tensor[(60), float32],) */;
  %302 = log10(%300) /* ty=Tensor[(9, 14, 4), float64] */;
  %303 = %301.0;
  (%302, %303)
}

def @func_1729() -> Tensor[(60), float32] {
  @func_1589() /* ty=Tensor[(60), float32] */
}

def @main(%var_12872: Tensor[(13, 6, 9), float64], %var_12873: Tensor[(13, 6, 9), float64]) -> Tensor[(13, 6, 9), float64] {
  %304 = cast(%var_12873, dtype="float64") /* ty=Tensor[(13, 6, 9), float64] */;
  %305 = shape_of(%var_12872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %306 = cast(%var_12872, dtype="float64") /* ty=Tensor[(13, 6, 9), float64] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%306, %307) /* ty=Tensor[(13, 6, 9), float64] */
}

def @func_1589() -> Tensor[(60), float32] {
  %308 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %308.2
}

def @func_5735(%var_5731: Tensor[(60), float32]) -> (Tensor[(9, 14, 4), uint16], Tensor[(13, 3, 8), int32], Tensor[(312, 1), int32], Tensor[(6, 14, 7), bool], Tensor[(588), float32], Tensor[(9, 14, 4), int8], Tensor[(54), float64], Tensor[(130), float64], Tensor[(60), float32]) {
  %309 = @func_3777() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %310 = cast(meta[relay.Constant][9] /* ty=Tensor[(312, 1), int32] */, dtype="int32") /* ty=Tensor[(312, 1), int32] */;
  %311 = cast(meta[relay.Constant][9] /* ty=Tensor[(312, 1), int32] */, dtype="int32") /* ty=Tensor[(312, 1), int32] */;
  %312 = reshape(%310, newshape=[13, 3, 8]) /* ty=Tensor[(13, 3, 8), int32] */;
  %313 = reshape(%311, newshape=[13, 3, 8]) /* ty=Tensor[(13, 3, 8), int32] */;
  %314 = cast(meta[relay.Constant][10] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %315 = reshape(%314, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), float32] */;
  %316 = cast(meta[relay.Constant][11] /* ty=Tensor[(54), float64] */, dtype="float64") /* ty=Tensor[(54), float64] */;
  %317 = cast(meta[relay.Constant][12] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %318 = cast(%var_5731, dtype="float32") /* ty=Tensor[(60), float32] */;
  %319 = reshape(%316, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float64] */;
  %320 = reshape(%317, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %321 = reshape(%318, newshape=[30, 2]) /* ty=Tensor[(30, 2), float32] */;
  %322 = @func_2790(%319, %320, %321) /* ty=(Tensor[(1, 9, 6), float64], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(30, 2), float64]) */;
  %323 = %309.0;
  %324 = @func_713(%312, %313) /* ty=Tensor[(13, 3, 8), int32] */;
  %325 = @func_4805(%315) /* ty=Tensor[(6, 14, 7), bool] */;
  %326 = %322.1;
  (%323, %324, meta[relay.Constant][9] /* ty=Tensor[(312, 1), int32] */, %325, meta[relay.Constant][10] /* ty=Tensor[(588), float32] */, %326, meta[relay.Constant][11] /* ty=Tensor[(54), float64] */, meta[relay.Constant][12] /* ty=Tensor[(130), float64] */, %var_5731)
}

def @func_12344() -> (Tensor[(9, 14, 4), int8],) {
  %327 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %328 = %327.0;
  (%328,)
}

def @func_7521() -> (Tensor[(60), float32],) {
  %329 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %330 = %329.0;
  (%330,)
}

def @func_2676(%var_2671: Tensor[(7, 15, 6), float64]) -> Tensor[(7, 15, 6), float64] {
  %331 = cast(%var_2671, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
  acosh(%331) /* ty=Tensor[(7, 15, 6), float64] */
}

def @func_2942() -> Tensor[(9, 14, 4), int8] {
  %332 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %332.2
}

def @func_5946() -> Tensor[(60), float32] {
  @func_5564() /* ty=Tensor[(60), float32] */
}

def @func_8553() -> (Tensor[(60), float32],) {
  %333 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %334 = %333.0;
  (%334,)
}

def @func_9991() -> (Tensor[(5, 5, 2), int64], Tensor[(60), float32]) {
  %335 = @func_8652() /* ty=(Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */;
  %336 = @func_6157() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */;
  %337 = %335.1;
  %338 = %336.0;
  (%337, %338)
}

def @func_9866() -> (Tensor[(9, 14, 4), int8],) {
  %339 = @func_5964() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %340 = %339.0;
  (%340,)
}

def @func_10525() -> (Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) {
  %341 = @func_8546() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) */;
  %342 = @func_5032() /* ty=Tensor[(60), float32] */;
  %343 = %341.1;
  (%342, %343)
}

def @func_11533() -> (Tensor[(3, 11, 8), float64],) {
  %344 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 11, 8), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 8), float64] */;
  %345 = rsqrt(%344) /* ty=Tensor[(3, 11, 8), float64] */;
  (%345,)
}

def @func_4095() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(630), int16]) {
  %346 = @func_3636() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %347 = cast(meta[relay.Constant][14] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
  %348 = cast(meta[relay.Constant][14] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
  %349 = reshape(%347, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %350 = reshape(%348, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %351 = @func_812(%349, %350) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
  %352 = %346.0;
  %353 = %351.2;
  (%352, %353, meta[relay.Constant][14] /* ty=Tensor[(630), int16] */)
}

def @func_7399() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %354 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %355 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %356 = %354.0;
  %357 = %355.1;
  (%356, %357)
}

def @func_6245() -> Tensor[(9, 14, 4), int8] {
  %358 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %358.0
}

def @func_1328() -> (Tensor[(9, 14, 4), uint16],) {
  %359 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %360 = %359.0;
  %361 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 14, 4), int8] */, dtype="uint16") /* ty=Tensor[(9, 14, 4), uint16] */;
  %362 = shape_of(%360, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%360, dtype="uint16") /* ty=Tensor[(9, 14, 4), uint16] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %365 = minimum(%363, %364) /* ty=Tensor[(9, 14, 4), uint16] */;
  (%365,)
}

def @func_1308() -> (Tensor[(9, 14, 4), int8],) {
  %366 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  (%366,)
}

def @func_2388(%var_2341: Tensor[(13, 2, 5), float64], %var_2358: Tensor[(1, 60), float32], %var_2381: Tensor[(13, 2, 5), bool]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(?, 60), uint32], Tensor[(13, 2, 5), float64]) {
  %367 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %368 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %369 = cast(%var_2358, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
  %370 = reshape(%369, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %371 = @func_1252(%370) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(60), float32]) */;
  %372 = %371.2;
  %373 = cast(%372, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %374 = shape_of(%var_2358, dtype="int32") /* ty=Tensor[(2), int32] */;
  %375 = cast(%var_2358, dtype="uint32") /* ty=Tensor[(1, 60), uint32] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %377 = @func_1845() /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */;
  %378 = %377.1;
  %379 = cast(%var_2341, dtype="bool") /* ty=Tensor[(13, 2, 5), bool] */;
  %380 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%378, dtype="bool") /* ty=Tensor[(13, 2, 5), bool] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %383 = less(%381, %382) /* ty=Tensor[(13, 2, 5), bool] */;
  %384 = cast(%var_2381, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
  %385 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%383, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %388 = %367.0;
  %389 = %368.1;
  %390 = subtract(%375, %376) /* ty=Tensor[(?, 60), uint32] */;
  %391 = floor_divide(%386, %387) /* ty=Tensor[(13, 2, 5), float64] */;
  (%388, %389, %390, %391)
}

def @func_11086() -> (Tensor[(60), float32],) {
  %392 = @func_1683() /* ty=(Tensor[(60), float32],) */;
  %393 = %392.0;
  (%393,)
}

def @func_5368() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(96), uint64], Tensor[(5, 5, 2), int64], Tensor[(30), int64], Tensor[(36, 10), int64]) {
  %394 = @func_3431() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %395 = cast(meta[relay.Constant][16] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %396 = reshape(%395, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %397 = @func_4202(%396) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(26, 5), float64], Tensor[(9, 14, 4), int8], Tensor[(4, 15, ?), int32], Tensor[(2, 12, 4), bool], Tensor[(96), uint64], Tensor[(4, 15, ?), bool]) */;
  %398 = %397.1;
  %399 = cast(%398, dtype="int8") /* ty=Tensor[(9, 14, 4), int8] */;
  %400 = cast(meta[relay.Constant][17] /* ty=Tensor[(30), int64] */, dtype="int64") /* ty=Tensor[(30), int64] */;
  %401 = cast(meta[relay.Constant][18] /* ty=Tensor[(36, 10), int64] */, dtype="int64") /* ty=Tensor[(36, 10), int64] */;
  %402 = reshape(%399, newshape=[9, 14, 4]) /* ty=Tensor[(9, 14, 4), int8] */;
  %403 = reshape(%400, newshape=[30]) /* ty=Tensor[(30), int64] */;
  %404 = reshape(%401, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %405 = @func_2021(%402, %403, %404) /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(10, 5), int64], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), float32]) */;
  %406 = %394.0;
  %407 = %405.2;
  (%406, %398, meta[relay.Constant][16] /* ty=Tensor[(96), uint64] */, %407, meta[relay.Constant][17] /* ty=Tensor[(30), int64] */, meta[relay.Constant][18] /* ty=Tensor[(36, 10), int64] */)
}

def @func_10992() -> (Tensor[(9, 14, 4), int8],) {
  %408 = @func_7734() /* ty=Tensor[(9, 14, 4), int8] */;
  (%408,)
}

def @func_8434() -> (Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(10, 3), int64], Tensor[(360), int64]) {
  %409 = @func_4095() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(630), int16]) */;
  %410 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 3), int64] */, dtype="int64") /* ty=Tensor[(10, 3), int64] */;
  %411 = cast(meta[relay.Constant][20] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %412 = reshape(%410, newshape=[30]) /* ty=Tensor[(30), int64] */;
  %413 = reshape(%411, newshape=[2, 180]) /* ty=Tensor[(2, 180), int64] */;
  %414 = @func_3180(%412, %413) /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(2, 180), int64]) */;
  %415 = %409.0;
  %416 = %414.2;
  (%415, %416, meta[relay.Constant][19] /* ty=Tensor[(10, 3), int64] */, meta[relay.Constant][20] /* ty=Tensor[(360), int64] */)
}

def @func_9370() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(4, 15, 1), float32], Tensor[(2, 12, 4), bool], Tensor[(96), uint64], Tensor[(60), float32], Tensor[(2, 12, 4), uint16], Tensor[(60), float32], Tensor[(60), float32], Tensor[(630), int16]) {
  %417 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %418 = @func_7521() /* ty=(Tensor[(60), float32],) */;
  %419 = @func_4059() /* ty=(Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */;
  %420 = cast(meta[relay.Constant][21] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %421 = cast(meta[relay.Constant][21] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %422 = reshape(%420, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %423 = reshape(%421, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %424 = @func_3792(%422, %423) /* ty=(Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) */;
  %425 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %426 = cast(meta[relay.Constant][21] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %427 = cast(meta[relay.Constant][21] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %428 = reshape(%426, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %429 = reshape(%427, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %430 = @func_3792(%428, %429) /* ty=(Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) */;
  %431 = cast(meta[relay.Constant][22] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
  %432 = cast(meta[relay.Constant][22] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
  %433 = reshape(%431, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %434 = reshape(%432, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %435 = @func_812(%433, %434) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
  %436 = %417.0;
  %437 = %418.0;
  %438 = %419.1;
  %439 = %424.0;
  %440 = %425.1;
  %441 = %430.1;
  %442 = @func_5564() /* ty=Tensor[(60), float32] */;
  %443 = %435.2;
  (%436, %437, %438, %439, meta[relay.Constant][21] /* ty=Tensor[(96), uint64] */, %440, %441, %442, %443, meta[relay.Constant][22] /* ty=Tensor[(630), int16] */)
}

def @func_5308() -> (Tensor[(9, 14, 4), int8],) {
  %444 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %445 = %444.0;
  (%445,)
}

def @func_11714() -> (Tensor[(9, 14, 4), int8],) {
  %446 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %447 = %446.0;
  (%447,)
}

def @func_5615() -> Tensor[(9, 14, 4), int8] {
  %448 = @func_5065() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %448.0
}

def @func_11664() -> Tensor[(60), float32] {
  @func_8612() /* ty=Tensor[(60), float32] */
}

def @func_6848() -> Tensor[(9, 14, 4), int8] {
  @func_6245() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_9555(%var_9503: Tensor[(50), int64], %var_9548: Tensor[(224), uint16]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(60), float32], Tensor[(16), uint16], Tensor[(224), uint16]) {
  %449 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %450 = @func_8546() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) */;
  %451 = cast(%var_9503, dtype="int64") /* ty=Tensor[(50), int64] */;
  %452 = reshape(%451, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %453 = @func_3999(%452) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(50), int64], Tensor[(9, 14, 4), int8]) */;
  %454 = cast(meta[relay.Constant][23] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %455 = cast(%var_9548, dtype="uint16") /* ty=Tensor[(224), uint16] */;
  %456 = reshape(%454, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), uint16] */;
  %457 = reshape(%455, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), uint16] */;
  %458 = @func_6650(%456, %457) /* ty=(Tensor[(14, 8, 2), uint8], Tensor[(60), float32]) */;
  %459 = %449.0;
  %460 = %450.1;
  %461 = %453.3;
  %462 = %458.1;
  (%459, %460, %461, %var_9503, %462, meta[relay.Constant][23] /* ty=Tensor[(16), uint16] */, %var_9548)
}

def @func_1545() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) {
  %463 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %464 = cast(meta[relay.Constant][24] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %465 = reshape(%464, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %466 = @func_1252(%465) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(60), float32]) */;
  %467 = %463.0;
  %468 = %466.2;
  (%467, %468, meta[relay.Constant][24] /* ty=Tensor[(60), float32] */)
}

def @func_2994(%var_2984: Tensor[(9, 14, 4), int8], %var_2991: Tensor[(630), int16]) -> (Tensor[(9, 14, 4), bool], Tensor[(9, 14, 4), int8], Tensor[(630), int16]) {
  %469 = @func_2966() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %470 = %469.0;
  %471 = cast(%var_2984, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%470, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %475 = cast(%var_2991, dtype="int16") /* ty=Tensor[(630), int16] */;
  %476 = reshape(%475, newshape=[630]) /* ty=Tensor[(630), int16] */;
  %477 = @func_2708(%476) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(630), int16]) */;
  %478 = not_equal(%473, %474) /* ty=Tensor[(9, 14, 4), bool] */;
  %479 = %477.0;
  (%478, %479, %var_2991)
}

def @func_3569() -> (Tensor[(9, 14, 4), float32], Tensor[(60), float32]) {
  %480 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %481 = @func_2476() /* ty=Tensor[(9, 14, 4), float32] */;
  %482 = %480.1;
  (%481, %482)
}

def @func_2429() -> Tensor[(9, 14, 4), int8] {
  @func_1179() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_2274() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) {
  %483 = @func_1328() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %484 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %485 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %486 = %483.0;
  %487 = %484.0;
  (%485, %486, %487)
}

def @func_5032() -> Tensor[(60), float32] {
  %488 = @func_2411() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %488.0
}

def @func_8131() -> Tensor[(9, 14, 4), int8] {
  %489 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %489.0
}

def @func_6376() -> Tensor[(60), float32] {
  @func_3404() /* ty=Tensor[(60), float32] */
}

def @func_8455(%var_8449: Tensor[(504), int8]) -> (Tensor[(11, 15, 14), float32], Tensor[(9, 14, 4), bool], Tensor[(504), int8]) {
  %490 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 14), float32] */;
  %491 = cast(%var_8449, dtype="int8") /* ty=Tensor[(504), int8] */;
  %492 = reshape(%491, newshape=[9, 14, 4]) /* ty=Tensor[(9, 14, 4), int8] */;
  %493 = @func_7119(%492) /* ty=(Tensor[(9, 14, 4), bool], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */;
  %494 = atanh(%490) /* ty=Tensor[(11, 15, 14), float32] */;
  %495 = %493.0;
  (%494, %495, %var_8449)
}

def @func_11507() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 7, 3), uint32], Tensor[(189), uint32]) {
  %496 = @func_9042() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) */;
  %497 = cast(meta[relay.Constant][26] /* ty=Tensor[(189), uint32] */, dtype="uint32") /* ty=Tensor[(189), uint32] */;
  %498 = cast(meta[relay.Constant][26] /* ty=Tensor[(189), uint32] */, dtype="uint32") /* ty=Tensor[(189), uint32] */;
  %499 = reshape(%497, newshape=[9, 7, 3]) /* ty=Tensor[(9, 7, 3), uint32] */;
  %500 = reshape(%498, newshape=[9, 7, 3]) /* ty=Tensor[(9, 7, 3), uint32] */;
  %501 = @func_8249(%499, %500) /* ty=(Tensor[(9, 7, 3), uint32],) */;
  %502 = %496.4;
  %503 = @func_8612() /* ty=Tensor[(60), float32] */;
  %504 = %501.0;
  (%502, %503, %504, meta[relay.Constant][26] /* ty=Tensor[(189), uint32] */)
}

def @func_4680(%var_4663: Tensor[(26, 5), float64], %var_4667: Tensor[(50), int64], %var_4670: float32) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int32], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(50), int64], Tensor[(50), int64], Tensor[(8, 6, 130), bool], Tensor[(1, 48), float32], Tensor[(26, 5), int32]) {
  %505 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %506 = @func_3033() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) */;
  %507 = %506.0;
  %508 = @func_3431() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %509 = %508.0;
  %510 = cast(%509, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %511 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%507, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %514 = floor_mod(%512, %513) /* ty=Tensor[(9, 14, 4), float32] */;
  %515 = cast(%507, dtype="int32") /* ty=Tensor[(9, 14, 4), int32] */;
  %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%514, dtype="int32") /* ty=Tensor[(9, 14, 4), int32] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %519 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %520 = cast(%var_4663, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %521 = reshape(%520, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %522 = @func_2129(%521) /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(1, 130), float64]) */;
  %523 = cast(%var_4667, dtype="int64") /* ty=Tensor[(50), int64] */;
  %524 = reshape(%523, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %525 = @func_3999(%524) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(50), int64], Tensor[(9, 14, 4), int8]) */;
  %526 = cast(%var_4670, dtype="float32") /* ty=float32 */;
  %527 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 48), float32] */, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %528 = reshape(%526, newshape=[]) /* ty=float32 */;
  %529 = reshape(%527, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float32] */;
  %530 = @func_382(%528, %529) /* ty=(Tensor[(30), int64], Tensor[(8, 6, 360), bool], Tensor[(8, 6, 130), float32], Tensor[(8, 6, 130), bool]) */;
  %531 = cast(%var_4663, dtype="int32") /* ty=Tensor[(26, 5), int32] */;
  %532 = cast(%var_4670, dtype="int32") /* ty=int32 */;
  %533 = %505.0;
  %534 = bitwise_and(%517, %518) /* ty=Tensor[(9, 14, 4), int32] */;
  %535 = %519.0;
  %536 = %522.1;
  %537 = %525.2;
  %538 = %530.3;
  %539 = add(%531, %532) /* ty=Tensor[(26, 5), int32] */;
  (%533, %534, %535, %536, %537, %var_4667, %538, meta[relay.Constant][27] /* ty=Tensor[(1, 48), float32] */, %539)
}

def @func_3431() -> (Tensor[(9, 14, 4), int8],) {
  %540 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  (%540,)
}

def @func_4335(%var_4330: Tensor[(16, 8, 2), uint64]) -> (Tensor[(16, 8, 2), bool],) {
  %541 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 8, 2), uint64] */, dtype="bool") /* ty=Tensor[(16, 8, 2), bool] */;
  %542 = shape_of(%var_4330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%var_4330, dtype="bool") /* ty=Tensor[(16, 8, 2), bool] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %545 = greater(%543, %544) /* ty=Tensor[(16, 8, 2), bool] */;
  (%545,)
}

def @func_5235(%var_5218: Tensor[(60), float32]) -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32], Tensor[(1, 9, 6), float64], Tensor[(54), float64], Tensor[(130), float64]) {
  %546 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %547 = cast(%var_5218, dtype="float32") /* ty=Tensor[(60), float32] */;
  %548 = reshape(%547, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %549 = @func_1252(%548) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(60), float32]) */;
  %550 = cast(meta[relay.Constant][29] /* ty=Tensor[(54), float64] */, dtype="float64") /* ty=Tensor[(54), float64] */;
  %551 = cast(meta[relay.Constant][30] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %552 = %549.2;
  %553 = cast(%552, dtype="float32") /* ty=Tensor[(60), float32] */;
  %554 = reshape(%550, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float64] */;
  %555 = reshape(%551, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %556 = reshape(%553, newshape=[30, 2]) /* ty=Tensor[(30, 2), float32] */;
  %557 = @func_2790(%554, %555, %556) /* ty=(Tensor[(1, 9, 6), float64], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(30, 2), float64]) */;
  %558 = %546.0;
  %559 = %557.0;
  (%558, %552, %var_5218, %559, meta[relay.Constant][29] /* ty=Tensor[(54), float64] */, meta[relay.Constant][30] /* ty=Tensor[(130), float64] */)
}

def @func_4546() -> Tensor[(60), float32] {
  %560 = @func_2411() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %560.1
}

def @func_12148(%var_12104: Tensor[(588), float32]) -> (Tensor[(60), float32], Tensor[(6, 14, 7), bool], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(858), float64], Tensor[(588), float64]) {
  %561 = @func_5712() /* ty=(Tensor[(60), float32],) */;
  %562 = cast(%var_12104, dtype="float32") /* ty=Tensor[(588), float32] */;
  %563 = reshape(%562, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), float32] */;
  %564 = %561.0;
  %565 = cast(%564, dtype="float32") /* ty=Tensor[(60), float32] */;
  %566 = reshape(%565, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %567 = @func_233(%566) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
  %568 = @func_7521() /* ty=(Tensor[(60), float32],) */;
  %569 = cast(meta[relay.Constant][31] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %570 = reshape(%569, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %571 = @func_9750(%570) /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(858), float64], Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */;
  %572 = cast(%var_12104, dtype="float64") /* ty=Tensor[(588), float64] */;
  %573 = @func_4805(%563) /* ty=Tensor[(6, 14, 7), bool] */;
  %574 = %567.0;
  %575 = %568.0;
  %576 = %571.1;
  %577 = erf(%572) /* ty=Tensor[(588), float64] */;
  (%564, %573, %574, %575, %576, meta[relay.Constant][31] /* ty=Tensor[(858), float64] */, %577)
}

def @func_854(%var_851: Tensor[(11, 6, 13), float64]) -> (Tensor[(11, 6, 13), float64],) {
  %578 = cast(%var_851, dtype="float64") /* ty=Tensor[(11, 6, 13), float64] */;
  %579 = acos(%578) /* ty=Tensor[(11, 6, 13), float64] */;
  (%579,)
}

def @func_5065() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
  %580 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %581 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %582 = %580.0;
  %583 = %581.0;
  (%582, %583)
}

def @func_3180(%var_3119: Tensor[(30), int64], %var_3120: Tensor[(2, 180), int64]) -> (Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(2, 180), int64]) {
  %584 = @func_2411() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %585 = cast(%var_3119, dtype="int64") /* ty=Tensor[(30), int64] */;
  %586 = cast(%var_3120, dtype="int64") /* ty=Tensor[(2, 180), int64] */;
  %587 = cast(%var_3120, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %588 = reshape(%585, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
  %589 = reshape(%586, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), int64] */;
  %590 = reshape(%587, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float64] */;
  %591 = @func_183(%588, %589, %590) /* ty=(Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) */;
  %592 = %584.1;
  %593 = %591.5;
  (%592, %593, %var_3119, %var_3120)
}

def @func_9415() -> (Tensor[(9, 14, 4), int8],) {
  %594 = @func_6012() /* ty=Tensor[(9, 14, 4), int8] */;
  (%594,)
}

def @func_4059() -> (Tensor[(60), float32], Tensor[(4, 15, 1), float32]) {
  %595 = @func_3226() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */;
  %596 = %595.1;
  %597 = cast(%596, dtype="float32") /* ty=Tensor[(60), float32] */;
  %598 = reshape(%597, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %599 = @func_233(%598) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
  %600 = %599.0;
  (%596, %600)
}

def @func_11374() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %601 = @func_2942() /* ty=Tensor[(9, 14, 4), int8] */;
  %602 = @func_7433() /* ty=Tensor[(60), float32] */;
  (%601, %602)
}

def @func_2476() -> Tensor[(9, 14, 4), float32] {
  %603 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %604 = %603.0;
  %605 = cast(%604, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  atan(%605) /* ty=Tensor[(9, 14, 4), float32] */
}

def @func_713(%var_708: Tensor[(13, 3, 8), int32], %var_709: Tensor[(13, 3, 8), int32]) -> Tensor[(13, 3, 8), int32] {
  %606 = cast(%var_709, dtype="int32") /* ty=Tensor[(13, 3, 8), int32] */;
  %607 = shape_of(%var_708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%var_708, dtype="int32") /* ty=Tensor[(13, 3, 8), int32] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  maximum(%608, %609) /* ty=Tensor[(13, 3, 8), int32] */
}

def @func_2411() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %610 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %611 = %610.1;
  %612 = @func_1729() /* ty=Tensor[(60), float32] */;
  (%611, %612)
}

def @func_6970(%var_6966: Tensor[(130), float64]) -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130), float64]) {
  %613 = @func_6733() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130, 1), float64], Tensor[(60), float32]) */;
  %614 = @func_4945() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
  %615 = @func_3097() /* ty=(Tensor[(60), float32],) */;
  %616 = cast(%var_6966, dtype="float64") /* ty=Tensor[(130), float64] */;
  %617 = %613.4;
  %618 = cast(%617, dtype="float32") /* ty=Tensor[(60), float32] */;
  %619 = cast(%var_6966, dtype="bool") /* ty=Tensor[(130), bool] */;
  %620 = reshape(%616, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %621 = reshape(%618, newshape=[1, 60]) /* ty=Tensor[(1, 60), float32] */;
  %622 = reshape(%619, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), bool] */;
  %623 = @func_2388(%620, %621, %622) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(?, 60), uint32], Tensor[(13, 2, 5), float64]) */;
  %624 = %614.0;
  %625 = @func_3392() /* ty=Tensor[(60), float32] */;
  %626 = %615.0;
  %627 = %623.2;
  (%617, %624, %625, %626, %627, %var_6966)
}

def @func_3042() -> (Tensor[(9, 14, 4), int8],) {
  %628 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %629 = %628.0;
  (%629,)
}

def @func_5853() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) {
  %630 = @func_3612() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
  %631 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %632 = %630.2;
  %633 = %631.0;
  (%632, %633)
}

def @func_8403() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %634 = @func_3870() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) */;
  %635 = @func_4945() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
  %636 = %634.1;
  %637 = %635.0;
  (%636, %637)
}

def @func_2041() -> (Tensor[(9, 14, 4), int8],) {
  %638 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %639 = %638.0;
  (%639,)
}

def @func_11162() -> Tensor[(60), float32] {
  %640 = @func_5712() /* ty=(Tensor[(60), float32],) */;
  %640.0
}

def @func_6012() -> Tensor[(9, 14, 4), int8] {
  %641 = @func_4863() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %641.0
}

def @func_9600() -> (Tensor[(9, 14, 4), float64],) {
  %642 = @func_5853() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) */;
  %643 = %642.1;
  (%643,)
}

def @func_11876() -> Tensor[(60), float32] {
  @func_4546() /* ty=Tensor[(60), float32] */
}

def @func_7341() -> (Tensor[(9, 14, 4), int8],) {
  %644 = @func_7049() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) */;
  %645 = %644.1;
  (%645,)
}

def @func_2284() -> (Tensor[(9, 14, 4), uint16],) {
  %646 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %647 = %646.1;
  (%647,)
}

def @func_10807() -> (Tensor[(630), int16],) {
  %648 = @func_1845() /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */;
  %649 = %648.2;
  (%649,)
}

def @func_12300() -> (Tensor[(9, 14, 4), float64],) {
  %650 = @func_8869() /* ty=Tensor[(9, 14, 4), float64] */;
  (%650,)
}

def @func_5594() -> (Tensor[(60), float32],) {
  %651 = @func_5564() /* ty=Tensor[(60), float32] */;
  (%651,)
}

def @func_7285() -> (Tensor[(9, 14, 4), uint16], Tensor[(176), int32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(4, 4, 11), float64]) {
  %652 = @func_3777() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %653 = @func_5712() /* ty=(Tensor[(60), float32],) */;
  %654 = cast(meta[relay.Constant][32] /* ty=Tensor[(176), int32] */, dtype="int32") /* ty=Tensor[(176), int32] */;
  %655 = cast(meta[relay.Constant][32] /* ty=Tensor[(176), int32] */, dtype="int32") /* ty=Tensor[(176), int32] */;
  %656 = reshape(%654, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), int32] */;
  %657 = reshape(%655, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), int32] */;
  %658 = @func_5179(%656, %657) /* ty=(Tensor[(4, 4, 11), bool], Tensor[(60), float32], Tensor[(4, 4, 11), int32]) */;
  %659 = %658.2;
  %660 = cast(%659, dtype="float32") /* ty=Tensor[(4, 4, 11), float32] */;
  %661 = log10(%660) /* ty=Tensor[(4, 4, 11), float32] */;
  %662 = cast(%661, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
  %663 = asinh(%662) /* ty=Tensor[(4, 4, 11), float64] */;
  %664 = cast(%663, dtype="float32") /* ty=Tensor[(4, 4, 11), float32] */;
  %665 = atanh(%664) /* ty=Tensor[(4, 4, 11), float32] */;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
  %667 = %652.0;
  %668 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %669 = %653.0;
  %670 = acosh(%666) /* ty=Tensor[(4, 4, 11), float64] */;
  (%667, meta[relay.Constant][32] /* ty=Tensor[(176), int32] */, %668, %669, %670)
}

def @func_7953(%var_7945: Tensor[(2), uint64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(1, 2), uint64], uint64, Tensor[(2), uint64]) {
  %671 = @func_3102() /* ty=(Tensor[(60), float32],) */;
  %672 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %673 = cast(meta[relay.Constant][33] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %674 = cast(%var_7945, dtype="uint64") /* ty=Tensor[(2), uint64] */;
  %675 = reshape(%673, newshape=[]) /* ty=uint64 */;
  %676 = reshape(%674, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint64] */;
  %677 = @func_2069(%675, %676) /* ty=(Tensor[(1, 2), uint64], Tensor[(630), int16]) */;
  %678 = %671.0;
  %679 = %672.0;
  %680 = %677.0;
  (%678, %679, %680, meta[relay.Constant][33] /* ty=uint64 */, %var_7945)
}

def @func_10155(%var_10149: Tensor[(6, 9, 7), float64], %var_10153: Tensor[(60), float32]) -> (Tensor[(6, 9, 7), float64], Tensor[(4, 15, 1), float32], Tensor[(60), float32]) {
  %681 = cast(%var_10149, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %682 = cast(%var_10153, dtype="float32") /* ty=Tensor[(60), float32] */;
  %683 = reshape(%682, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %684 = @func_233(%683) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
  %685 = atan(%681) /* ty=Tensor[(6, 9, 7), float64] */;
  %686 = %684.0;
  (%685, %686, %var_10153)
}

def @func_6470() -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %687 = @func_4863() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %688 = @func_1729() /* ty=Tensor[(60), float32] */;
  %689 = %687.0;
  (%688, %689)
}

def @func_5912() -> (Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) {
  %690 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %691 = %690.1;
  %692 = @func_4967() /* ty=Tensor[(9, 14, 4), uint16] */;
  (%691, %692)
}

def @func_9750(%var_9725: Tensor[(858), float64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(858), float64], Tensor[(60), float32], Tensor[(4, 15, 1), float32]) {
  %693 = cast(%var_9725, dtype="float64") /* ty=Tensor[(858), float64] */;
  %694 = reshape(%693, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %695 = @func_3334(%694) /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(5, 5, 2), int64], Tensor[(50), int64], Tensor[(60), float32], Tensor[(9, 14, 4), uint16], Tensor[(11, 6, 13), float64], Tensor[(858), float64], Tensor[(60), float32]) */;
  %696 = @func_5594() /* ty=(Tensor[(60), float32],) */;
  %697 = %696.0;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(60), float32] */;
  %699 = reshape(%698, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %700 = @func_233(%699) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
  %701 = @func_3404() /* ty=Tensor[(60), float32] */;
  %702 = %695.1;
  %703 = %700.0;
  (%701, %702, %var_9725, %697, %703)
}

def @func_10622(%var_10606: Tensor[(5, 1, 15), uint8], %var_10607: Tensor[(5, 9, 15), uint8]) -> Tensor[(5, 9, 15), uint8] {
  %704 = cast(%var_10606, dtype="uint8") /* ty=Tensor[(5, 1, 15), uint8] */;
  %705 = cast(%var_10607, dtype="uint8") /* ty=Tensor[(5, 9, 15), uint8] */;
  bitwise_or(%704, %705) /* ty=Tensor[(5, 9, 15), uint8] */
}

def @func_8700() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %706 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %707 = %706.0;
  %708 = @func_7842() /* ty=Tensor[(60), float32] */;
  (%707, %708)
}

def @func_6564(%var_6561: Tensor[(50), int64], %var_6562: float32) -> (Tensor[(60), float32], Tensor[(50), int64], Tensor[(130), float64], Tensor[(50), int64], float32) {
  %709 = @func_3033() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) */;
  %710 = cast(meta[relay.Constant][34] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %711 = cast(%var_6561, dtype="int64") /* ty=Tensor[(50), int64] */;
  %712 = cast(%var_6562, dtype="float32") /* ty=float32 */;
  %713 = reshape(%710, newshape=[26, 5]) /* ty=Tensor[(26, 5), float64] */;
  %714 = reshape(%711, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %715 = reshape(%712, newshape=[]) /* ty=float32 */;
  %716 = @func_4680(%713, %714, %715) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int32], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(50), int64], Tensor[(50), int64], Tensor[(8, 6, 130), bool], Tensor[(1, 48), float32], Tensor[(26, 5), int32]) */;
  %717 = %709.1;
  %718 = %716.4;
  (%717, %718, meta[relay.Constant][34] /* ty=Tensor[(130), float64] */, %var_6561, %var_6562)
}

def @func_11770(%var_11764: Tensor[(50), int64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), uint16], Tensor[(50), int64]) {
  %719 = @func_10133() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %720 = cast(%var_11764, dtype="int64") /* ty=Tensor[(50), int64] */;
  %721 = reshape(%720, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %722 = @func_3735(%721) /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */;
  %723 = %719.0;
  %724 = %722.0;
  (%723, %724, %var_11764)
}

def @func_4805(%var_4789: Tensor[(6, 14, 7), float32]) -> Tensor[(6, 14, 7), bool] {
  %725 = cast(%var_4789, dtype="float32") /* ty=Tensor[(6, 14, 7), float32] */;
  %726 = exp(%725) /* ty=Tensor[(6, 14, 7), float32] */;
  %727 = cast(%var_4789, dtype="bool") /* ty=Tensor[(6, 14, 7), bool] */;
  %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%726, dtype="bool") /* ty=Tensor[(6, 14, 7), bool] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%729, %730) /* ty=Tensor[(6, 14, 7), bool] */
}

def @func_7569() -> (Tensor[(60), float32], Tensor[(130), float64]) {
  %731 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %732 = %731.0;
  %733 = cast(%732, dtype="float32") /* ty=Tensor[(60), float32] */;
  %734 = reshape(%733, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %735 = @func_5235(%734) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32], Tensor[(1, 9, 6), float64], Tensor[(54), float64], Tensor[(130), float64]) */;
  %736 = %735.5;
  (%732, %736)
}

def @func_12205() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %737 = @func_3499() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %738 = @func_3097() /* ty=(Tensor[(60), float32],) */;
  %739 = @func_11737() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %740 = %737.1;
  %741 = %738.0;
  %742 = %739.0;
  (%740, %741, %742)
}

def @func_1783() -> Tensor[(60), float32] {
  %743 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %743.1
}

def @func_1004(%var_955: Tensor[(312), int32]) -> (Tensor[(11, 7, 9), bool], Tensor[(312), int32], Tensor[(13, 3, 8), uint16]) {
  %744 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 7, 9), int8] */, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %745 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(11, 7, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 7, 9), int8] */, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %748 = cast(%var_955, dtype="int32") /* ty=Tensor[(312), int32] */;
  %749 = cast(%var_955, dtype="int32") /* ty=Tensor[(312), int32] */;
  %750 = reshape(%748, newshape=[13, 3, 8]) /* ty=Tensor[(13, 3, 8), int32] */;
  %751 = reshape(%749, newshape=[13, 3, 8]) /* ty=Tensor[(13, 3, 8), int32] */;
  %752 = @func_713(%750, %751) /* ty=Tensor[(13, 3, 8), int32] */;
  %753 = cast(%752, dtype="float64") /* ty=Tensor[(13, 3, 8), float64] */;
  %754 = asinh(%753) /* ty=Tensor[(13, 3, 8), float64] */;
  %755 = cast(%754, dtype="float32") /* ty=Tensor[(13, 3, 8), float32] */;
  %756 = acosh(%755) /* ty=Tensor[(13, 3, 8), float32] */;
  %757 = cast(%752, dtype="uint16") /* ty=Tensor[(13, 3, 8), uint16] */;
  %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%756, dtype="uint16") /* ty=Tensor[(13, 3, 8), uint16] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %761 = greater(%746, %747) /* ty=Tensor[(11, 7, 9), bool] */;
  %762 = logical_xor(%759, %760) /* ty=Tensor[(13, 3, 8), uint16] */;
  (%761, %var_955, %762)
}

def @func_4202(%var_4175: Tensor[(96), uint64]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(26, 5), float64], Tensor[(9, 14, 4), int8], Tensor[(4, 15, ?), int32], Tensor[(2, 12, 4), bool], Tensor[(96), uint64], Tensor[(4, 15, ?), bool]) {
  %763 = @func_3960() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %764 = cast(meta[relay.Constant][37] /* ty=Tensor[(26, 5), float64] */, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %765 = reshape(%764, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %766 = @func_4059() /* ty=(Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */;
  %767 = %766.1;
  %768 = cast(%767, dtype="float32") /* ty=Tensor[(4, 15, 1), float32] */;
  %769 = sqrt(%768) /* ty=Tensor[(4, 15, 1), float32] */;
  %770 = @func_3097() /* ty=(Tensor[(60), float32],) */;
  %771 = %770.0;
  %772 = cast(%771, dtype="int32") /* ty=Tensor[(60), int32] */;
  %773 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %774 = cast(%769, dtype="int32") /* ty=Tensor[(4, 15, 1), int32] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %776 = cast(%var_4175, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %777 = cast(%var_4175, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %778 = reshape(%776, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %779 = reshape(%777, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %780 = @func_3792(%778, %779) /* ty=(Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) */;
  %781 = @func_2668() /* ty=Tensor[(60), float32] */;
  %782 = cast(%781, dtype="bool") /* ty=Tensor[(60), bool] */;
  %783 = shape_of(%767, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%767, dtype="bool") /* ty=Tensor[(4, 15, 1), bool] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %786 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
  %787 = %763.0;
  %788 = @func_108(%765) /* ty=Tensor[(13, 2, 5), float64] */;
  %789 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
  %790 = maximum(%774, %775) /* ty=Tensor[(4, 15, ?), int32] */;
  %791 = %780.0;
  %792 = equal(%784, %785) /* ty=Tensor[(4, 15, ?), bool] */;
  (%786, %787, %788, meta[relay.Constant][37] /* ty=Tensor[(26, 5), float64] */, %789, %790, %791, %var_4175, %792)
}

def @func_1179() -> Tensor[(9, 14, 4), int8] {
  %793 = cast(meta[relay.Constant][39] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %794 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 14, 4), int8] */, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %795 = greater(%793, %794) /* ty=Tensor[(9, 14, 4), bool] */;
  %796 = cast(%795, dtype="int8") /* ty=Tensor[(9, 14, 4), int8] */;
  %797 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(9, 14, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 14, 4), int8] */, dtype="int8") /* ty=Tensor[(9, 14, 4), int8] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%798, %799) /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_3374() -> Tensor[(9, 14, 4), float64] {
  %800 = @func_2284() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %801 = %800.0;
  %802 = cast(%801, dtype="float64") /* ty=Tensor[(9, 14, 4), float64] */;
  sqrt(%802) /* ty=Tensor[(9, 14, 4), float64] */
}

def @func_5712() -> (Tensor[(60), float32],) {
  %803 = @func_2244() /* ty=Tensor[(60), float32] */;
  (%803,)
}

def @func_7334() -> (Tensor[(9, 14, 4), int8],) {
  %804 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
  (%804,)
}

def @func_7734() -> Tensor[(9, 14, 4), int8] {
  %805 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %805.0
}

def @func_2966() -> (Tensor[(9, 14, 4), int8],) {
  %806 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
  (%806,)
}

def @func_2668() -> Tensor[(60), float32] {
  %807 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %807.0
}

def @func_6650(%var_6638: Tensor[(1, 8, 2), uint16], %var_6639: Tensor[(14, 8, 2), uint16]) -> (Tensor[(14, 8, 2), uint8], Tensor[(60), float32]) {
  %808 = cast(%var_6638, dtype="uint16") /* ty=Tensor[(1, 8, 2), uint16] */;
  %809 = cast(%var_6639, dtype="uint16") /* ty=Tensor[(14, 8, 2), uint16] */;
  %810 = right_shift(%808, %809) /* ty=Tensor[(14, 8, 2), uint16] */;
  %811 = cast(%810, dtype="uint8") /* ty=Tensor[(14, 8, 2), uint8] */;
  %812 = shape_of(%var_6639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%var_6639, dtype="uint8") /* ty=Tensor[(14, 8, 2), uint8] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %815 = multiply(%813, %814) /* ty=Tensor[(14, 8, 2), uint8] */;
  %816 = @func_5946() /* ty=Tensor[(60), float32] */;
  (%815, %816)
}

def @func_6277() -> Tensor[(9, 14, 4), float32] {
  %817 = @func_4501() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) */;
  %817.0
}

def @func_7654(%var_7582: Tensor[(15, 7, 9), int64], %var_7642: Tensor[(10, 63), int16]) -> (Tensor[(15, 7, 9), int64], Tensor[(15, 7, 9), int64], Tensor[(60), float32], Tensor[(10, 63), int16], Tensor[(9, 14, 4), int8]) {
  %818 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %819 = cast(%var_7582, dtype="int64") /* ty=Tensor[(15, 7, 9), int64] */;
  %820 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %821 = cast(%var_7582, dtype="int64") /* ty=Tensor[(15, 7, 9), int64] */;
  %822 = cast(%var_7642, dtype="int16") /* ty=Tensor[(10, 63), int16] */;
  %823 = cast(%var_7642, dtype="int16") /* ty=Tensor[(10, 63), int16] */;
  %824 = reshape(%822, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %825 = reshape(%823, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %826 = @func_812(%824, %825) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
  %827 = subtract(%818, %819) /* ty=Tensor[(15, 7, 9), int64] */;
  %828 = maximum(%820, %821) /* ty=Tensor[(15, 7, 9), int64] */;
  %829 = %826.2;
  %830 = @func_2429() /* ty=Tensor[(9, 14, 4), int8] */;
  (%827, %828, %829, %var_7642, %830)
}

def @func_9795(%var_9763: Tensor[(2, 4, 16), int64], %var_9764: Tensor[(2, 4, 16), int64]) -> (Tensor[(2, 4, 16), int64], Tensor[(60), float32]) {
  %831 = cast(%var_9764, dtype="int64") /* ty=Tensor[(2, 4, 16), int64] */;
  %832 = shape_of(%var_9763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(%var_9763, dtype="int64") /* ty=Tensor[(2, 4, 16), int64] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %835 = logical_xor(%833, %834) /* ty=Tensor[(2, 4, 16), int64] */;
  %836 = @func_6376() /* ty=Tensor[(60), float32] */;
  (%835, %836)
}

def @func_3715() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %837 = @func_3033() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) */;
  %838 = %837.1;
  %839 = @func_1589() /* ty=Tensor[(60), float32] */;
  (%838, %839)
}

def @func_5526() -> (Tensor[(9, 14, 4), int8],) {
  %840 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %841 = %840.0;
  (%841,)
}

def @func_5964() -> (Tensor[(9, 14, 4), int8],) {
  %842 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %843 = %842.0;
  (%843,)
}

def @func_2708(%var_2702: Tensor[(630), int16]) -> (Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(630), int16]) {
  %844 = cast(%var_2702, dtype="int16") /* ty=Tensor[(630), int16] */;
  %845 = cast(%var_2702, dtype="int16") /* ty=Tensor[(630), int16] */;
  %846 = reshape(%844, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %847 = reshape(%845, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %848 = @func_812(%846, %847) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
  %849 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %850 = %848.1;
  (%849, %850, %var_2702)
}

def @func_6830() -> (Tensor[(60), float32],) {
  %851 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %852 = %851.0;
  (%852,)
}

def @func_10095() -> Tensor[(9, 14, 4), uint16] {
  %853 = @func_2284() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %853.0
}

def @func_3226() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %854 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %855 = @func_1783() /* ty=Tensor[(60), float32] */;
  (%854, %855)
}

def @func_3636() -> (Tensor[(9, 14, 4), int8],) {
  %856 = @func_3226() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */;
  %857 = %856.0;
  (%857,)
}

def @func_3392() -> Tensor[(60), float32] {
  %858 = @func_3102() /* ty=(Tensor[(60), float32],) */;
  %858.0
}

def @func_7025(%var_7018: Tensor[(12, 7, 2), int16]) -> (Tensor[(12, 7, 2), bool],) {
  %859 = cast(%var_7018, dtype="int16") /* ty=Tensor[(12, 7, 2), int16] */;
  %860 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(12, 7, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 7, 2), int16] */, dtype="int16") /* ty=Tensor[(12, 7, 2), int16] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %863 = subtract(%861, %862) /* ty=Tensor[(12, 7, 2), int16] */;
  %864 = cast(%863, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %865 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(12, 7, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 7, 2), int16] */, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %868 = not_equal(%866, %867) /* ty=Tensor[(12, 7, 2), bool] */;
  (%868,)
}

def @func_8546() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) {
  %869 = @func_5308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %870 = @func_8054() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(630), int16]) */;
  %871 = %869.0;
  %872 = %870.0;
  (%871, %872)
}

def @func_3792(%var_3784: Tensor[(2, 12, 4), uint64], %var_3785: Tensor[(2, 12, 4), uint64]) -> (Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) {
  %873 = cast(%var_3785, dtype="bool") /* ty=Tensor[(2, 12, 4), bool] */;
  %874 = shape_of(%var_3784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%var_3784, dtype="bool") /* ty=Tensor[(2, 12, 4), bool] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %877 = cast(%var_3784, dtype="uint16") /* ty=Tensor[(2, 12, 4), uint16] */;
  %878 = shape_of(%var_3785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %879 = cast(%var_3785, dtype="uint16") /* ty=Tensor[(2, 12, 4), uint16] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %881 = greater(%875, %876) /* ty=Tensor[(2, 12, 4), bool] */;
  %882 = minimum(%879, %880) /* ty=Tensor[(2, 12, 4), uint16] */;
  (%881, %882)
}

def @func_3535(%var_3523: Tensor[(9, 14, 4), float64]) -> (Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) {
  %883 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %884 = %883.0;
  %885 = cast(%var_3523, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%884, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %889 = @func_2966() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %890 = cast(%var_3523, dtype="float64") /* ty=Tensor[(9, 14, 4), float64] */;
  %891 = floor_divide(%887, %888) /* ty=Tensor[(9, 14, 4), float32] */;
  %892 = %889.0;
  %893 = sin(%890) /* ty=Tensor[(9, 14, 4), float64] */;
  (%891, %892, %893)
}

def @func_5179(%var_5138: Tensor[(4, 4, 11), int32], %var_5139: Tensor[(4, 4, 11), int32]) -> (Tensor[(4, 4, 11), bool], Tensor[(60), float32], Tensor[(4, 4, 11), int32]) {
  %894 = cast(%var_5139, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
  %895 = shape_of(%var_5138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%var_5138, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %898 = cast(%var_5138, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
  %899 = exp(%898) /* ty=Tensor[(4, 4, 11), float64] */;
  %900 = cast(%899, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
  %901 = sqrt(%900) /* ty=Tensor[(4, 4, 11), float64] */;
  %902 = cast(%var_5138, dtype="int32") /* ty=Tensor[(4, 4, 11), int32] */;
  %903 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(%901, dtype="int32") /* ty=Tensor[(4, 4, 11), int32] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %906 = greater(%896, %897) /* ty=Tensor[(4, 4, 11), bool] */;
  %907 = @func_1783() /* ty=Tensor[(60), float32] */;
  %908 = bitwise_xor(%904, %905) /* ty=Tensor[(4, 4, 11), int32] */;
  (%906, %907, %908)
}

def @func_4945() -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %909 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %910 = @func_3431() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %911 = %909.1;
  %912 = %910.0;
  (%911, %912)
}

def @func_5761() -> (Tensor[(60), float32],) {
  %913 = @func_2411() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %914 = %913.1;
  (%914,)
}

def @func_9910() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) {
  %915 = @func_3715() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %916 = @func_1683() /* ty=(Tensor[(60), float32],) */;
  %917 = @func_5912() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */;
  %918 = %915.0;
  %919 = %916.0;
  %920 = %917.1;
  (%918, %919, %920)
}

def @func_7823() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) {
  %921 = @func_6470() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
  %922 = %921.0;
  %923 = cast(%922, dtype="float32") /* ty=Tensor[(60), float32] */;
  %924 = reshape(%923, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %925 = @func_5235(%924) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32], Tensor[(1, 9, 6), float64], Tensor[(54), float64], Tensor[(130), float64]) */;
  %926 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %927 = @func_7433() /* ty=Tensor[(60), float32] */;
  %928 = @func_6848() /* ty=Tensor[(9, 14, 4), int8] */;
  %929 = %925.1;
  %930 = %926.0;
  (%927, %922, %928, %929, %930)
}

def @func_3870() -> (Tensor[(9, 14, 4), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) {
  %931 = @func_2429() /* ty=Tensor[(9, 14, 4), int8] */;
  %932 = cast(%931, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %933 = @func_3715() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %934 = @func_3715() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %935 = rsqrt(%932) /* ty=Tensor[(9, 14, 4), float32] */;
  %936 = %933.0;
  %937 = %934.0;
  %938 = @func_1589() /* ty=Tensor[(60), float32] */;
  (%935, %936, %937, %938)
}

def @func_3499() -> (Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) {
  %939 = @func_1328() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %940 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %941 = %939.0;
  %942 = %940.0;
  (%941, %942)
}

def @func_11226() -> Tensor[(60), float32] {
  %943 = @func_6793() /* ty=(Tensor[(60), float32],) */;
  %943.0
}

def @func_2129(%var_2127: Tensor[(1, 130), float64]) -> (Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(1, 130), float64]) {
  %944 = cast(%var_2127, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
  %945 = reshape(%944, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %946 = @func_1589() /* ty=Tensor[(60), float32] */;
  %947 = @func_108(%945) /* ty=Tensor[(13, 2, 5), float64] */;
  (%946, %947, %var_2127)
}

def @func_6046() -> (Tensor[(9, 14, 4), int8],) {
  %948 = @func_5526() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %949 = %948.0;
  (%949,)
}

def @func_9944() -> (Tensor[(9, 14, 4), int8],) {
  %950 = @func_8500() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %951 = %950.0;
  (%951,)
}

def @func_10779() -> Tensor[(9, 14, 4), int8] {
  %952 = @func_8500() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %952.1
}

def @func_2790(%var_2769: Tensor[(1, 9, 6), float64], %var_2776: Tensor[(130), float64], %var_2777: Tensor[(30, 2), float32]) -> (Tensor[(1, 9, 6), float64], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(30, 2), float64]) {
  %953 = cast(%var_2769, dtype="float64") /* ty=Tensor[(1, 9, 6), float64] */;
  %954 = cast(%var_2776, dtype="float64") /* ty=Tensor[(130), float64] */;
  %955 = cast(%var_2777, dtype="float32") /* ty=Tensor[(30, 2), float32] */;
  %956 = cast(%var_2776, dtype="bool") /* ty=Tensor[(130), bool] */;
  %957 = reshape(%954, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %958 = reshape(%955, newshape=[1, 60]) /* ty=Tensor[(1, 60), float32] */;
  %959 = reshape(%956, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), bool] */;
  %960 = @func_2388(%957, %958, %959) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(?, 60), uint32], Tensor[(13, 2, 5), float64]) */;
  %961 = cast(%var_2777, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
  %962 = log10(%953) /* ty=Tensor[(1, 9, 6), float64] */;
  %963 = %960.0;
  %964 = rsqrt(%961) /* ty=Tensor[(30, 2), float64] */;
  (%962, %963, %var_2776, %964)
}

def @func_812(%var_779: Tensor[(6, 15, 7), int16], %var_780: Tensor[(6, 15, 7), int16]) -> (Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) {
  %965 = cast(%var_780, dtype="bool") /* ty=Tensor[(6, 15, 7), bool] */;
  %966 = shape_of(%var_779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %967 = cast(%var_779, dtype="bool") /* ty=Tensor[(6, 15, 7), bool] */;
  %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %969 = cast(meta[relay.Constant][41] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %970 = reshape(%969, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %971 = @func_233(%970) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
  %972 = cast(meta[relay.Constant][42] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %973 = reshape(%972, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %974 = less_equal(%967, %968) /* ty=Tensor[(6, 15, 7), bool] */;
  %975 = %971.1;
  %976 = @func_108(%973) /* ty=Tensor[(13, 2, 5), float64] */;
  (%974, %975, meta[relay.Constant][41] /* ty=Tensor[(60), float32] */, %976, meta[relay.Constant][42] /* ty=Tensor[(130), float64] */)
}

def @func_1683() -> (Tensor[(60), float32],) {
  %977 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %978 = %977.0;
  (%978,)
}

def @func_8054() -> (Tensor[(9, 14, 4), uint16], Tensor[(630), int16]) {
  %979 = @func_3033() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) */;
  %980 = @func_1845() /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */;
  %981 = %979.0;
  %982 = %980.2;
  (%981, %982)
}

def @func_2629(%var_2626: Tensor[(630), int16]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) {
  %983 = @func_1683() /* ty=(Tensor[(60), float32],) */;
  %984 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %985 = cast(%var_2626, dtype="int16") /* ty=Tensor[(630), int16] */;
  %986 = cast(%var_2626, dtype="int16") /* ty=Tensor[(630), int16] */;
  %987 = reshape(%985, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %988 = reshape(%986, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %989 = @func_812(%987, %988) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
  %990 = %983.0;
  %991 = %984.0;
  %992 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %993 = %989.3;
  (%990, %991, %992, %993, %var_2626)
}

def @func_2899() -> (Tensor[(9, 14, 4), int8],) {
  %994 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
  (%994,)
}

def @func_11449(%var_11400: Tensor[(9, 14, 4), int8]) -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %995 = @func_5964() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %996 = %995.0;
  %997 = cast(%var_11400, dtype="int8") /* ty=Tensor[(9, 14, 4), int8] */;
  %998 = shape_of(%996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%996, dtype="int8") /* ty=Tensor[(9, 14, 4), int8] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1001 = @func_5912() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */;
  %1002 = @func_2899() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1003 = maximum(%999, %1000) /* ty=Tensor[(9, 14, 4), int8] */;
  %1004 = %1001.0;
  %1005 = %1002.0;
  (%1003, %1004, %1005)
}

def @func_10953() -> Tensor[(60), float32] {
  %1006 = @func_7823() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) */;
  %1006.1
}

def @func_382(%var_293: float32, %var_294: Tensor[(8, 6, 1), float32]) -> (Tensor[(30), int64], Tensor[(8, 6, 360), bool], Tensor[(8, 6, 130), float32], Tensor[(8, 6, 130), bool]) {
  %1007 = cast(%var_293, dtype="float32") /* ty=float32 */;
  %1008 = cast(%var_294, dtype="float32") /* ty=Tensor[(8, 6, 1), float32] */;
  %1009 = divide(%1007, %1008) /* ty=Tensor[(8, 6, 1), float32] */;
  %1010 = cast(meta[relay.Constant][44] /* ty=Tensor[(360), int64] */, dtype="bool") /* ty=Tensor[(360), bool] */;
  %1011 = cast(%1009, dtype="bool") /* ty=Tensor[(8, 6, 1), bool] */;
  %1012 = cast(meta[relay.Constant][43] /* ty=Tensor[(30), int64] */, dtype="int64") /* ty=Tensor[(30), int64] */;
  %1013 = cast(meta[relay.Constant][44] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1014 = cast(meta[relay.Constant][44] /* ty=Tensor[(360), int64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1015 = reshape(%1012, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
  %1016 = reshape(%1013, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), int64] */;
  %1017 = reshape(%1014, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float64] */;
  %1018 = @func_183(%1015, %1016, %1017) /* ty=(Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) */;
  %1019 = %1018.2;
  %1020 = cast(%1019, dtype="float32") /* ty=Tensor[(130), float32] */;
  %1021 = cast(%1009, dtype="float32") /* ty=Tensor[(8, 6, 1), float32] */;
  %1022 = cast(%1009, dtype="int32") /* ty=Tensor[(8, 6, 1), int32] */;
  %1023 = cast(%1019, dtype="int32") /* ty=Tensor[(130), int32] */;
  %1024 = left_shift(%1022, %1023) /* ty=Tensor[(8, 6, 130), int32] */;
  %1025 = cast(%1024, dtype="int32") /* ty=Tensor[(8, 6, 130), int32] */;
  %1026 = cast(%var_294, dtype="int32") /* ty=Tensor[(8, 6, 1), int32] */;
  %1027 = bitwise_or(%1025, %1026) /* ty=Tensor[(8, 6, 130), int32] */;
  %1028 = cast(%var_293, dtype="bool") /* ty=bool */;
  %1029 = cast(%1027, dtype="bool") /* ty=Tensor[(8, 6, 130), bool] */;
  %1030 = logical_and(%1010, %1011) /* ty=Tensor[(8, 6, 360), bool] */;
  %1031 = floor_mod(%1020, %1021) /* ty=Tensor[(8, 6, 130), float32] */;
  %1032 = less_equal(%1028, %1029) /* ty=Tensor[(8, 6, 130), bool] */;
  (meta[relay.Constant][43] /* ty=Tensor[(30), int64] */, %1030, %1031, %1032)
}

def @func_12614() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %1033 = @func_3569() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32]) */;
  %1034 = @func_12222() /* ty=Tensor[(9, 14, 4), int8] */;
  %1035 = %1033.1;
  (%1034, %1035)
}

def @func_6763(%var_6740: Tensor[(4, 8, 3), bool], %var_6741: Tensor[(4, 8, 3), bool], %var_6754: Tensor[(360), int64]) -> (Tensor[(4, 8, 3), bool], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), int8]) {
  %1036 = cast(%var_6741, dtype="bool") /* ty=Tensor[(4, 8, 3), bool] */;
  %1037 = shape_of(%var_6740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1038 = cast(%var_6740, dtype="bool") /* ty=Tensor[(4, 8, 3), bool] */;
  %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1040 = cast(meta[relay.Constant][45] /* ty=Tensor[(30), int64] */, dtype="int64") /* ty=Tensor[(30), int64] */;
  %1041 = cast(%var_6754, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1042 = cast(%var_6754, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1043 = reshape(%1040, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
  %1044 = reshape(%1041, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), int64] */;
  %1045 = reshape(%1042, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float64] */;
  %1046 = @func_183(%1043, %1044, %1045) /* ty=(Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) */;
  %1047 = @func_3960() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1048 = logical_or(%1038, %1039) /* ty=Tensor[(4, 8, 3), bool] */;
  %1049 = %1046.1;
  %1050 = %1047.0;
  (%1048, %1049, meta[relay.Constant][45] /* ty=Tensor[(30), int64] */, %var_6754, %1050)
}

def @func_3102() -> (Tensor[(60), float32],) {
  %1051 = @func_2668() /* ty=Tensor[(60), float32] */;
  (%1051,)
}

def @func_5418() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %1052 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %1053 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %1054 = %1052.1;
  %1055 = %1053.0;
  (%1054, %1055)
}

def @func_8612() -> Tensor[(60), float32] {
  %1056 = @func_3870() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) */;
  %1056.3
}

def @func_2244() -> Tensor[(60), float32] {
  @func_1589() /* ty=Tensor[(60), float32] */
}

def @func_5278() -> (Tensor[(9, 14, 4), int8],) {
  %1057 = @func_5065() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %1058 = %1057.0;
  (%1058,)
}

def @func_8500() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
  %1059 = @func_5964() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1060 = @func_5308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1061 = %1059.0;
  %1062 = %1060.0;
  (%1061, %1062)
}

def @func_10858(%var_10832: Tensor[(12, 8, 6), uint16]) -> (Tensor[(12, 8, 6), uint16], Tensor[(12, 8, 6), float64]) {
  %1063 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 8, 6), uint16] */, dtype="uint16") /* ty=Tensor[(12, 8, 6), uint16] */;
  %1064 = shape_of(%var_10832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1065 = cast(%var_10832, dtype="uint16") /* ty=Tensor[(12, 8, 6), uint16] */;
  %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1067 = cast(%var_10832, dtype="float64") /* ty=Tensor[(12, 8, 6), float64] */;
  %1068 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(12, 8, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1069 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 8, 6), uint16] */, dtype="float64") /* ty=Tensor[(12, 8, 6), float64] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1071 = multiply(%1065, %1066) /* ty=Tensor[(12, 8, 6), uint16] */;
  %1072 = power(%1069, %1070) /* ty=Tensor[(12, 8, 6), float64] */;
  (%1071, %1072)
}

def @func_11304() -> Tensor[(96), uint64] {
  %1073 = @func_10744() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32], Tensor[(96), uint64], Tensor[(2, 12, 4), float64]) */;
  %1073.2
}

def @func_11484(%var_11463: Tensor[(3, 5, 1), float32]) -> (Tensor[(3, 5, 1), float32], Tensor[(9, 14, 4), int8], Tensor[(32, 8), uint64]) {
  %1074 = cast(%var_11463, dtype="float32") /* ty=Tensor[(3, 5, 1), float32] */;
  %1075 = cast(meta[relay.Constant][47] /* ty=Tensor[(32, 8), uint64] */, dtype="uint64") /* ty=Tensor[(32, 8), uint64] */;
  %1076 = reshape(%1075, newshape=[256]) /* ty=Tensor[(256), uint64] */;
  %1077 = @func_8918(%1076) /* ty=(Tensor[(60), float32], Tensor[(16, 8, 2), bool], Tensor[(256), uint64], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %1078 = atanh(%1074) /* ty=Tensor[(3, 5, 1), float32] */;
  %1079 = %1077.3;
  (%1078, %1079, meta[relay.Constant][47] /* ty=Tensor[(32, 8), uint64] */)
}

def @func_3097() -> (Tensor[(60), float32],) {
  %1080 = @func_1683() /* ty=(Tensor[(60), float32],) */;
  %1081 = %1080.0;
  (%1081,)
}

def @func_10304(%var_10298: Tensor[(210, 3), float64]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(7, 15, 6), float64], Tensor[(210, 3), float64]) {
  %1082 = @func_9866() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1083 = cast(%var_10298, dtype="float64") /* ty=Tensor[(210, 3), float64] */;
  %1084 = reshape(%1083, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float64] */;
  %1085 = %1082.0;
  %1086 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %1087 = @func_2676(%1084) /* ty=Tensor[(7, 15, 6), float64] */;
  (%1085, %1086, %1087, %var_10298)
}

def @func_9639() -> Tensor[(9, 14, 4), float32] {
  %1088 = @func_5853() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) */;
  %1089 = %1088.1;
  %1090 = cast(%1089, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  exp(%1090) /* ty=Tensor[(9, 14, 4), float32] */
}

def @func_10876() -> Tensor[(60), float32] {
  @func_1729() /* ty=Tensor[(60), float32] */
}

def @func_11523(%var_11518: Tensor[(9, 13, 4), uint8]) -> (Tensor[(9, 13, 4), bool],) {
  %1091 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 13, 4), uint8] */, dtype="bool") /* ty=Tensor[(9, 13, 4), bool] */;
  %1092 = shape_of(%var_11518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1093 = cast(%var_11518, dtype="bool") /* ty=Tensor[(9, 13, 4), bool] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1095 = less(%1093, %1094) /* ty=Tensor[(9, 13, 4), bool] */;
  (%1095,)
}

def @func_10744() -> (Tensor[(9, 14, 4), float64], Tensor[(60), float32], Tensor[(96), uint64], Tensor[(2, 12, 4), float64]) {
  %1096 = cast(meta[relay.Constant][49] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1097 = cast(meta[relay.Constant][49] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1098 = reshape(%1096, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %1099 = reshape(%1097, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %1100 = @func_3792(%1098, %1099) /* ty=(Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) */;
  %1101 = %1100.1;
  %1102 = cast(%1101, dtype="float64") /* ty=Tensor[(2, 12, 4), float64] */;
  %1103 = @func_8869() /* ty=Tensor[(9, 14, 4), float64] */;
  %1104 = @func_3404() /* ty=Tensor[(60), float32] */;
  %1105 = acosh(%1102) /* ty=Tensor[(2, 12, 4), float64] */;
  (%1103, %1104, meta[relay.Constant][49] /* ty=Tensor[(96), uint64] */, %1105)
}

def @func_10800() -> Tensor[(9, 14, 4), int8] {
  %1106 = @func_9944() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1106.0
}

def @func_12222() -> Tensor[(9, 14, 4), int8] {
  %1107 = @func_8500() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %1107.0
}

def @func_11622() -> Tensor[(9, 14, 4), int8] {
  @func_10800() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_12090() -> (Tensor[(60), float32],) {
  %1108 = @func_8553() /* ty=(Tensor[(60), float32],) */;
  %1109 = %1108.0;
  (%1109,)
}

def @func_12400() -> Tensor[(60), float32] {
  %1110 = @func_5761() /* ty=(Tensor[(60), float32],) */;
  %1110.0
}

def @func_5481(%var_5461: Tensor[(5, 5, 2), int64]) -> (Tensor[(9, 14, 4), float32], Tensor[(5, 5, 2), float32], Tensor[(5, 5, 2), int32]) {
  %1111 = @func_4501() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) */;
  %1112 = @func_5368() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(96), uint64], Tensor[(5, 5, 2), int64], Tensor[(30), int64], Tensor[(36, 10), int64]) */;
  %1113 = %1112.3;
  %1114 = cast(%var_5461, dtype="float32") /* ty=Tensor[(5, 5, 2), float32] */;
  %1115 = shape_of(%1113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1116 = cast(%1113, dtype="float32") /* ty=Tensor[(5, 5, 2), float32] */;
  %1117 = dyn.reshape(%1114, %1115, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1118 = cast(%1113, dtype="int32") /* ty=Tensor[(5, 5, 2), int32] */;
  %1119 = shape_of(%var_5461, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1120 = cast(%var_5461, dtype="int32") /* ty=Tensor[(5, 5, 2), int32] */;
  %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1122 = %1111.0;
  %1123 = divide(%1116, %1117) /* ty=Tensor[(5, 5, 2), float32] */;
  %1124 = multiply(%1120, %1121) /* ty=Tensor[(5, 5, 2), int32] */;
  (%1122, %1123, %1124)
}

def @func_3033() -> (Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) {
  %1125 = @func_2284() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %1126 = %1125.0;
  %1127 = @func_1729() /* ty=Tensor[(60), float32] */;
  (%1126, %1127)
}

def @func_7119(%var_7103: Tensor[(9, 14, 4), int8]) -> (Tensor[(9, 14, 4), bool], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %1128 = @func_6046() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1129 = %1128.0;
  %1130 = cast(%var_7103, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %1131 = shape_of(%1129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1132 = cast(%1129, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %1133 = dyn.reshape(%1130, %1131, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1134 = @func_6046() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1135 = @func_4059() /* ty=(Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */;
  %1136 = greater_equal(%1132, %1133) /* ty=Tensor[(9, 14, 4), bool] */;
  %1137 = %1134.0;
  %1138 = %1135.0;
  (%1136, %1137, %1138)
}

def @func_10677(%var_10658: Tensor[(360), int64]) -> (Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(504), int8], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), int8]) {
  %1139 = @func_4059() /* ty=(Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */;
  %1140 = cast(meta[relay.Constant][50] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %1141 = cast(meta[relay.Constant][51] /* ty=Tensor[(30), int64] */, dtype="int64") /* ty=Tensor[(30), int64] */;
  %1142 = cast(%var_10658, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1143 = reshape(%1140, newshape=[9, 14, 4]) /* ty=Tensor[(9, 14, 4), int8] */;
  %1144 = reshape(%1141, newshape=[30]) /* ty=Tensor[(30), int64] */;
  %1145 = reshape(%1142, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1146 = @func_2021(%1143, %1144, %1145) /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(10, 5), int64], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), float32]) */;
  %1147 = @func_5278() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1148 = %1139.1;
  %1149 = %1146.0;
  %1150 = %1147.0;
  (%1148, %1149, meta[relay.Constant][50] /* ty=Tensor[(504), int8] */, meta[relay.Constant][51] /* ty=Tensor[(30), int64] */, %var_10658, %1150)
}

def @func_8708(%var_8702: Tensor[(10, 3, 7), uint32], %var_8703: Tensor[(10, 3, 7), uint32]) -> (Tensor[(10, 3, 7), uint32],) {
  %1151 = cast(%var_8703, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
  %1152 = shape_of(%var_8702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1153 = cast(%var_8702, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
  %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1155 = subtract(%1153, %1154) /* ty=Tensor[(10, 3, 7), uint32] */;
  (%1155,)
}

def @func_10133() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %1156 = @func_6733() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130, 1), float64], Tensor[(60), float32]) */;
  %1157 = %1156.1;
  %1158 = @func_1783() /* ty=Tensor[(60), float32] */;
  (%1157, %1158)
}

def @func_2069(%var_2043: uint64, %var_2044: Tensor[(1, 2), uint64]) -> (Tensor[(1, 2), uint64], Tensor[(630), int16]) {
  %1159 = cast(%var_2043, dtype="uint64") /* ty=uint64 */;
  %1160 = cast(%var_2044, dtype="uint64") /* ty=Tensor[(1, 2), uint64] */;
  %1161 = @func_1845() /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */;
  %1162 = right_shift(%1159, %1160) /* ty=Tensor[(1, 2), uint64] */;
  %1163 = %1161.2;
  (%1162, %1163)
}

def @func_4967() -> Tensor[(9, 14, 4), uint16] {
  %1164 = @func_1328() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %1164.0
}

def @func_1845() -> (Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) {
  %1165 = cast(meta[relay.Constant][52] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
  %1166 = cast(meta[relay.Constant][52] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
  %1167 = reshape(%1165, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %1168 = reshape(%1166, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %1169 = @func_812(%1167, %1168) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
  %1170 = @func_1729() /* ty=Tensor[(60), float32] */;
  %1171 = %1169.3;
  (%1170, %1171, meta[relay.Constant][52] /* ty=Tensor[(630), int16] */)
}

def @func_11059(%var_11050: Tensor[(6, 14, 1), float32]) -> (Tensor[(6, 14, 1), float32], Tensor[(60), float32]) {
  %1172 = cast(%var_11050, dtype="float32") /* ty=Tensor[(6, 14, 1), float32] */;
  %1173 = @func_7521() /* ty=(Tensor[(60), float32],) */;
  %1174 = tan(%1172) /* ty=Tensor[(6, 14, 1), float32] */;
  %1175 = %1173.0;
  (%1174, %1175)
}

def @func_7307() -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %1176 = @func_3870() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) */;
  %1177 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %1178 = %1176.2;
  %1179 = %1177.0;
  (%1178, %1179)
}

def @func_11292(%var_11274: Tensor[(8, 28), uint16]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(50), int64], Tensor[(8, 28), uint16]) {
  %1180 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1181 = cast(meta[relay.Constant][53] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %1182 = cast(%var_11274, dtype="uint16") /* ty=Tensor[(8, 28), uint16] */;
  %1183 = reshape(%1181, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %1184 = reshape(%1182, newshape=[224]) /* ty=Tensor[(224), uint16] */;
  %1185 = @func_9555(%1183, %1184) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(60), float32], Tensor[(16), uint16], Tensor[(224), uint16]) */;
  %1186 = %1180.0;
  %1187 = @func_8131() /* ty=Tensor[(9, 14, 4), int8] */;
  %1188 = %1185.1;
  (%1186, %1187, %1188, meta[relay.Constant][53] /* ty=Tensor[(50), int64] */, %var_11274)
}

def @func_12468() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) {
  %1189 = @func_7823() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) */;
  %1190 = @func_8652() /* ty=(Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */;
  %1191 = @func_3102() /* ty=(Tensor[(60), float32],) */;
  %1192 = %1189.1;
  %1193 = %1190.0;
  %1194 = %1191.0;
  (%1192, %1193, %1194)
}

def @func_9229() -> (Tensor[(60), float32],) {
  %1195 = @func_8553() /* ty=(Tensor[(60), float32],) */;
  %1196 = %1195.0;
  (%1196,)
}

def @func_7049() -> (Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) {
  %1197 = @func_4501() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) */;
  %1198 = @func_3960() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1199 = %1197.0;
  %1200 = %1198.0;
  (%1199, %1200)
}

def @func_4863() -> (Tensor[(9, 14, 4), int8],) {
  %1201 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %1202 = %1201.1;
  (%1202,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1785() -> Tensor[(60), float32] {
  @func_1783() /* ty=Tensor[(60), float32] */
}

def @func_3778() -> (Tensor[(9, 14, 4), uint16],) {
  %2 = fn () -> (Tensor[(9, 14, 4), uint16],) {
    %0 = @func_3033() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(9, 14, 4), uint16],) */
}

def @func_7025(%var_7018: Tensor[(12, 7, 2), int16]) -> (Tensor[(12, 7, 2), bool],) {
  %3 = cast(%var_7018, dtype="int16") /* ty=Tensor[(12, 7, 2), int16] */;
  %4 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(12, 7, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 7, 2), int16] */, dtype="int16") /* ty=Tensor[(12, 7, 2), int16] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %7 = subtract(%5, %6) /* ty=Tensor[(12, 7, 2), int16] */;
  %8 = cast(%7, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %9 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(12, 7, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 7, 2), int16] */, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %12 = not_equal(%10, %11) /* ty=Tensor[(12, 7, 2), bool] */;
  (%12,)
}

def @func_7571() -> (Tensor[(60), float32], Tensor[(130), float64]) {
  @func_7569() /* ty=(Tensor[(60), float32], Tensor[(130), float64]) */
}

def @func_8458(%var_8456: Tensor[(504), int8]) -> (Tensor[(11, 15, 14), float32], Tensor[(9, 14, 4), bool], Tensor[(504), int8]) {
  @func_8455(%var_8456) /* ty=(Tensor[(11, 15, 14), float32], Tensor[(9, 14, 4), bool], Tensor[(504), int8]) */
}

def @func_2285() -> (Tensor[(9, 14, 4), uint16],) {
  %15 = fn () -> (Tensor[(9, 14, 4), uint16],) {
    %13 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
    %14 = %13.1;
    (%14,)
  };
  %15() /* ty=(Tensor[(9, 14, 4), uint16],) */
}

def @func_11916(%var_11914: Tensor[(10, 8, 4), float32], %var_11915: Tensor[(12, 48), uint16]) -> (Tensor[(10, 8, 4), float32], Tensor[(12, 8, 6), uint16], Tensor[(12, 48), uint16]) {
  %22 = fn (%var_11895: Tensor[(10, 8, 4), float32], %var_11899: Tensor[(12, 48), uint16]) -> (Tensor[(10, 8, 4), float32], Tensor[(12, 8, 6), uint16], Tensor[(12, 48), uint16]) {
    %16 = cast(%var_11895, dtype="float32") /* ty=Tensor[(10, 8, 4), float32] */;
    %17 = cast(%var_11899, dtype="uint16") /* ty=Tensor[(12, 48), uint16] */;
    %18 = reshape(%17, newshape=[12, 8, 6]) /* ty=Tensor[(12, 8, 6), uint16] */;
    %19 = @func_10858(%18) /* ty=(Tensor[(12, 8, 6), uint16], Tensor[(12, 8, 6), float64]) */;
    %20 = atan(%16) /* ty=Tensor[(10, 8, 4), float32] */;
    %21 = %19.0;
    (%20, %21, %var_11899)
  };
  %22(%var_11914, %var_11915) /* ty=(Tensor[(10, 8, 4), float32], Tensor[(12, 8, 6), uint16], Tensor[(12, 48), uint16]) */
}

def @func_12205() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %23 = @func_3499() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %24 = @func_3097() /* ty=(Tensor[(60), float32],) */;
  %25 = @func_11737() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %26 = %23.1;
  %27 = %24.0;
  %28 = %25.0;
  (%26, %27, %28)
}

def @func_2684() -> Tensor[(9, 14, 4), int8] {
  %30 = fn () -> Tensor[(9, 14, 4), int8] {
    %29 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %29.0
  };
  %30() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_5033() -> Tensor[(60), float32] {
  %32 = fn () -> Tensor[(60), float32] {
    %31 = @func_2411() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
    %31.0
  };
  %32() /* ty=Tensor[(60), float32] */
}

def @func_10876() -> Tensor[(60), float32] {
  @func_1729() /* ty=Tensor[(60), float32] */
}

def @func_3033() -> (Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) {
  %33 = @func_2284() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %34 = %33.0;
  %35 = @func_1729() /* ty=Tensor[(60), float32] */;
  (%34, %35)
}

def @func_10744() -> (Tensor[(9, 14, 4), float64], Tensor[(60), float32], Tensor[(96), uint64], Tensor[(2, 12, 4), float64]) {
  %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %38 = reshape(%36, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %39 = reshape(%37, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %40 = @func_3792(%38, %39) /* ty=(Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) */;
  %41 = %40.1;
  %42 = cast(%41, dtype="float64") /* ty=Tensor[(2, 12, 4), float64] */;
  %43 = @func_8869() /* ty=Tensor[(9, 14, 4), float64] */;
  %44 = @func_3404() /* ty=Tensor[(60), float32] */;
  %45 = acosh(%42) /* ty=Tensor[(2, 12, 4), float64] */;
  (%43, %44, meta[relay.Constant][1] /* ty=Tensor[(96), uint64] */, %45)
}

def @func_10500() -> Tensor[(5, 12, 12), float32] {
  @func_10498() /* ty=Tensor[(5, 12, 12), float32] */
}

def @func_5418() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %46 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %47 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %48 = %46.1;
  %49 = %47.0;
  (%48, %49)
}

def @func_7736() -> Tensor[(9, 14, 4), int8] {
  @func_7734() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_3499() -> (Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) {
  %50 = @func_1328() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %51 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %52 = %50.0;
  %53 = %51.0;
  (%52, %53)
}

def @func_3717() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  @func_3715() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */
}

def @func_2670() -> Tensor[(60), float32] {
  @func_2668() /* ty=Tensor[(60), float32] */
}

def @func_5065() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
  %54 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %55 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %56 = %54.0;
  %57 = %55.0;
  (%56, %57)
}

def @func_10253() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  @func_10251() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */
}

def @func_2708(%var_2702: Tensor[(630), int16]) -> (Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(630), int16]) {
  %58 = cast(%var_2702, dtype="int16") /* ty=Tensor[(630), int16] */;
  %59 = cast(%var_2702, dtype="int16") /* ty=Tensor[(630), int16] */;
  %60 = reshape(%58, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %61 = reshape(%59, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %62 = @func_812(%60, %61) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
  %63 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %64 = %62.1;
  (%63, %64, %var_2702)
}

def @func_10878() -> Tensor[(60), float32] {
  @func_10876() /* ty=Tensor[(60), float32] */
}

def @func_2026(%var_2023: Tensor[(9, 14, 4), int8], %var_2024: Tensor[(30), int64], %var_2025: Tensor[(360), int64]) -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(10, 5), int64], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), float32]) {
  @func_2021(%var_2023, %var_2024, %var_2025) /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(10, 5), int64], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), float32]) */
}

def @func_6245() -> Tensor[(9, 14, 4), int8] {
  %65 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %65.0
}

def @func_2021(%var_1968: Tensor[(9, 14, 4), int8], %var_2003: Tensor[(30), int64], %var_2004: Tensor[(360), int64]) -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(10, 5), int64], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), float32]) {
  %66 = @func_1683() /* ty=(Tensor[(60), float32],) */;
  %67 = @func_1683() /* ty=(Tensor[(60), float32],) */;
  %68 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 5), int64] */, dtype="int64") /* ty=Tensor[(10, 5), int64] */;
  %69 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 5), int64] */, dtype="int64") /* ty=Tensor[(10, 5), int64] */;
  %70 = reshape(%68, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %71 = reshape(%69, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %72 = cast(%var_2003, dtype="int64") /* ty=Tensor[(30), int64] */;
  %73 = cast(%var_2004, dtype="int64") /* ty=Tensor[(360), int64] */;
  %74 = cast(%var_2004, dtype="float64") /* ty=Tensor[(360), float64] */;
  %75 = reshape(%72, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
  %76 = reshape(%73, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), int64] */;
  %77 = reshape(%74, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float64] */;
  %78 = @func_183(%75, %76, %77) /* ty=(Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) */;
  %79 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %80 = cast(%var_1968, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %81 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%79, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %84 = mod(%82, %83) /* ty=Tensor[(9, 14, 4), float32] */;
  %85 = cast(%84, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %86 = shape_of(%var_1968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%var_1968, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %89 = equal(%87, %88) /* ty=Tensor[(9, 14, 4), bool] */;
  %90 = cast(%89, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %91 = %66.0;
  %92 = %67.0;
  %93 = @func_1860(%70, %71) /* ty=Tensor[(5, 5, 2), int64] */;
  %94 = %78.4;
  %95 = acosh(%90) /* ty=Tensor[(9, 14, 4), float32] */;
  (%91, %92, %93, meta[relay.Constant][2] /* ty=Tensor[(10, 5), int64] */, %94, %var_2003, %var_2004, %95)
}

def @func_717(%var_715: Tensor[(13, 3, 8), int32], %var_716: Tensor[(13, 3, 8), int32]) -> Tensor[(13, 3, 8), int32] {
  @func_713(%var_715, %var_716) /* ty=Tensor[(13, 3, 8), int32] */
}

def @func_6970(%var_6966: Tensor[(130), float64]) -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130), float64]) {
  %96 = @func_6733() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130, 1), float64], Tensor[(60), float32]) */;
  %97 = @func_4945() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
  %98 = @func_3097() /* ty=(Tensor[(60), float32],) */;
  %99 = cast(%var_6966, dtype="float64") /* ty=Tensor[(130), float64] */;
  %100 = %96.4;
  %101 = cast(%100, dtype="float32") /* ty=Tensor[(60), float32] */;
  %102 = cast(%var_6966, dtype="bool") /* ty=Tensor[(130), bool] */;
  %103 = reshape(%99, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %104 = reshape(%101, newshape=[1, 60]) /* ty=Tensor[(1, 60), float32] */;
  %105 = reshape(%102, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), bool] */;
  %106 = @func_2388(%103, %104, %105) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(?, 60), uint32], Tensor[(13, 2, 5), float64]) */;
  %107 = %97.0;
  %108 = @func_3392() /* ty=Tensor[(60), float32] */;
  %109 = %98.0;
  %110 = %106.2;
  (%100, %107, %108, %109, %110, %var_6966)
}

def @func_12090() -> (Tensor[(60), float32],) {
  %111 = @func_8553() /* ty=(Tensor[(60), float32],) */;
  %112 = %111.0;
  (%112,)
}

def @func_3569() -> (Tensor[(9, 14, 4), float32], Tensor[(60), float32]) {
  %113 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %114 = @func_2476() /* ty=Tensor[(9, 14, 4), float32] */;
  %115 = %113.1;
  (%114, %115)
}

def @func_5369() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(96), uint64], Tensor[(5, 5, 2), int64], Tensor[(30), int64], Tensor[(36, 10), int64]) {
  %130 = fn () -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(96), uint64], Tensor[(5, 5, 2), int64], Tensor[(30), int64], Tensor[(36, 10), int64]) {
    %116 = @func_3431() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %117 = cast(meta[relay.Constant][3] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %118 = reshape(%117, newshape=[96]) /* ty=Tensor[(96), uint64] */;
    %119 = @func_4202(%118) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(26, 5), float64], Tensor[(9, 14, 4), int8], Tensor[(4, 15, ?), int32], Tensor[(2, 12, 4), bool], Tensor[(96), uint64], Tensor[(4, 15, ?), bool]) */;
    %120 = %119.1;
    %121 = cast(%120, dtype="int8") /* ty=Tensor[(9, 14, 4), int8] */;
    %122 = cast(meta[relay.Constant][4] /* ty=Tensor[(30), int64] */, dtype="int64") /* ty=Tensor[(30), int64] */;
    %123 = cast(meta[relay.Constant][5] /* ty=Tensor[(36, 10), int64] */, dtype="int64") /* ty=Tensor[(36, 10), int64] */;
    %124 = reshape(%121, newshape=[9, 14, 4]) /* ty=Tensor[(9, 14, 4), int8] */;
    %125 = reshape(%122, newshape=[30]) /* ty=Tensor[(30), int64] */;
    %126 = reshape(%123, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %127 = @func_2021(%124, %125, %126) /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(10, 5), int64], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), float32]) */;
    %128 = %116.0;
    %129 = %127.2;
    (%128, %120, meta[relay.Constant][3] /* ty=Tensor[(96), uint64] */, %129, meta[relay.Constant][4] /* ty=Tensor[(30), int64] */, meta[relay.Constant][5] /* ty=Tensor[(36, 10), int64] */)
  };
  %130() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(96), uint64], Tensor[(5, 5, 2), int64], Tensor[(30), int64], Tensor[(36, 10), int64]) */
}

def @func_5948() -> Tensor[(60), float32] {
  @func_5946() /* ty=Tensor[(60), float32] */
}

def @func_3962() -> (Tensor[(9, 14, 4), int8],) {
  @func_3960() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_6158() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %138 = fn () -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
    %131 = @func_4945() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
    %132 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %133 = @func_5761() /* ty=(Tensor[(60), float32],) */;
    %134 = @func_3404() /* ty=Tensor[(60), float32] */;
    %135 = %131.0;
    %136 = %132.0;
    %137 = %133.0;
    (%134, %135, %136, %137)
  };
  %138() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */
}

def @func_6734() -> (Tensor[(9, 14, 4), uint16], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130, 1), float64], Tensor[(60), float32]) {
  %151 = fn () -> (Tensor[(9, 14, 4), uint16], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130, 1), float64], Tensor[(60), float32]) {
    %139 = @func_5912() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */;
    %140 = cast(meta[relay.Constant][6] /* ty=Tensor[(130, 1), float64] */, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
    %141 = @func_1589() /* ty=Tensor[(60), float32] */;
    %142 = cast(%141, dtype="float32") /* ty=Tensor[(60), float32] */;
    %143 = cast(meta[relay.Constant][6] /* ty=Tensor[(130, 1), float64] */, dtype="bool") /* ty=Tensor[(130, 1), bool] */;
    %144 = reshape(%140, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
    %145 = reshape(%142, newshape=[1, 60]) /* ty=Tensor[(1, 60), float32] */;
    %146 = reshape(%143, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), bool] */;
    %147 = @func_2388(%144, %145, %146) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(?, 60), uint32], Tensor[(13, 2, 5), float64]) */;
    %148 = %139.1;
    %149 = %147.2;
    %150 = @func_1729() /* ty=Tensor[(60), float32] */;
    (%148, %141, %149, meta[relay.Constant][6] /* ty=Tensor[(130, 1), float64] */, %150)
  };
  %151() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130, 1), float64], Tensor[(60), float32]) */
}

def @func_7286() -> (Tensor[(9, 14, 4), uint16], Tensor[(176), int32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(4, 4, 11), float64]) {
  %171 = fn () -> (Tensor[(9, 14, 4), uint16], Tensor[(176), int32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(4, 4, 11), float64]) {
    %152 = @func_3777() /* ty=(Tensor[(9, 14, 4), uint16],) */;
    %153 = @func_5712() /* ty=(Tensor[(60), float32],) */;
    %154 = cast(meta[relay.Constant][7] /* ty=Tensor[(176), int32] */, dtype="int32") /* ty=Tensor[(176), int32] */;
    %155 = cast(meta[relay.Constant][7] /* ty=Tensor[(176), int32] */, dtype="int32") /* ty=Tensor[(176), int32] */;
    %156 = reshape(%154, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), int32] */;
    %157 = reshape(%155, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), int32] */;
    %158 = @func_5179(%156, %157) /* ty=(Tensor[(4, 4, 11), bool], Tensor[(60), float32], Tensor[(4, 4, 11), int32]) */;
    %159 = %158.2;
    %160 = cast(%159, dtype="float32") /* ty=Tensor[(4, 4, 11), float32] */;
    %161 = log10(%160) /* ty=Tensor[(4, 4, 11), float32] */;
    %162 = cast(%161, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
    %163 = asinh(%162) /* ty=Tensor[(4, 4, 11), float64] */;
    %164 = cast(%163, dtype="float32") /* ty=Tensor[(4, 4, 11), float32] */;
    %165 = atanh(%164) /* ty=Tensor[(4, 4, 11), float32] */;
    %166 = cast(%165, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
    %167 = %152.0;
    %168 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
    %169 = %153.0;
    %170 = acosh(%166) /* ty=Tensor[(4, 4, 11), float64] */;
    (%167, meta[relay.Constant][7] /* ty=Tensor[(176), int32] */, %168, %169, %170)
  };
  %171() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(176), int32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(4, 4, 11), float64]) */
}

def @func_11566(%var_11565: Tensor[(14, 12, 15), float64]) -> (Tensor[(14, 12, 15), float64],) {
  %176 = fn (%var_11544: Tensor[(14, 12, 15), float64]) -> (Tensor[(14, 12, 15), float64],) {
    %172 = cast(%var_11544, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
    %173 = atanh(%172) /* ty=Tensor[(14, 12, 15), float64] */;
    %174 = cast(%173, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
    %175 = sin(%174) /* ty=Tensor[(14, 12, 15), float64] */;
    (%175,)
  };
  %176(%var_11565) /* ty=(Tensor[(14, 12, 15), float64],) */
}

def @func_5616() -> Tensor[(9, 14, 4), int8] {
  %178 = fn () -> Tensor[(9, 14, 4), int8] {
    %177 = @func_5065() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
    %177.0
  };
  %178() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_6471() -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %182 = fn () -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
    %179 = @func_4863() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %180 = @func_1729() /* ty=Tensor[(60), float32] */;
    %181 = %179.0;
    (%180, %181)
  };
  %182() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */
}

def @func_11714() -> (Tensor[(9, 14, 4), int8],) {
  %183 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %184 = %183.0;
  (%184,)
}

def @func_10026(%var_10024: Tensor[(12, 13, 10), float32], %var_10025: Tensor[(12, 13, 10), float32]) -> (Tensor[(12, 13, 10), float32],) {
  %190 = fn (%var_10017: Tensor[(12, 13, 10), float32], %var_10018: Tensor[(12, 13, 10), float32]) -> (Tensor[(12, 13, 10), float32],) {
    %185 = cast(%var_10018, dtype="float32") /* ty=Tensor[(12, 13, 10), float32] */;
    %186 = shape_of(%var_10017, dtype="int32") /* ty=Tensor[(3), int32] */;
    %187 = cast(%var_10017, dtype="float32") /* ty=Tensor[(12, 13, 10), float32] */;
    %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %189 = floor_mod(%187, %188) /* ty=Tensor[(12, 13, 10), float32] */;
    (%189,)
  };
  %190(%var_10024, %var_10025) /* ty=(Tensor[(12, 13, 10), float32],) */
}

def @func_4205(%var_4203: Tensor[(96), uint64]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(26, 5), float64], Tensor[(9, 14, 4), int8], Tensor[(4, 15, ?), int32], Tensor[(2, 12, 4), bool], Tensor[(96), uint64], Tensor[(4, 15, ?), bool]) {
  @func_4202(%var_4203) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(26, 5), float64], Tensor[(9, 14, 4), int8], Tensor[(4, 15, ?), int32], Tensor[(2, 12, 4), bool], Tensor[(96), uint64], Tensor[(4, 15, ?), bool]) */
}

def @func_7028(%var_7026: Tensor[(12, 7, 2), int16]) -> (Tensor[(12, 7, 2), bool],) {
  @func_7025(%var_7026) /* ty=(Tensor[(12, 7, 2), bool],) */
}

def @func_7953(%var_7945: Tensor[(2), uint64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(1, 2), uint64], uint64, Tensor[(2), uint64]) {
  %191 = @func_3102() /* ty=(Tensor[(60), float32],) */;
  %192 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %193 = cast(meta[relay.Constant][8] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %194 = cast(%var_7945, dtype="uint64") /* ty=Tensor[(2), uint64] */;
  %195 = reshape(%193, newshape=[]) /* ty=uint64 */;
  %196 = reshape(%194, newshape=[1, 2]) /* ty=Tensor[(1, 2), uint64] */;
  %197 = @func_2069(%195, %196) /* ty=(Tensor[(1, 2), uint64], Tensor[(630), int16]) */;
  %198 = %191.0;
  %199 = %192.0;
  %200 = %197.0;
  (%198, %199, %200, meta[relay.Constant][8] /* ty=uint64 */, %var_7945)
}

def @func_5712() -> (Tensor[(60), float32],) {
  %201 = @func_2244() /* ty=Tensor[(60), float32] */;
  (%201,)
}

def @func_5279() -> (Tensor[(9, 14, 4), int8],) {
  %204 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %202 = @func_5065() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
    %203 = %202.0;
    (%203,)
  };
  %204() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_9799(%var_9797: Tensor[(2, 4, 16), int64], %var_9798: Tensor[(2, 4, 16), int64]) -> (Tensor[(2, 4, 16), int64], Tensor[(60), float32]) {
  @func_9795(%var_9797, %var_9798) /* ty=(Tensor[(2, 4, 16), int64], Tensor[(60), float32]) */
}

def @func_10527() -> (Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) {
  @func_10525() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */
}

def @func_2668() -> Tensor[(60), float32] {
  %205 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %205.0
}

def @func_9451() -> (Tensor[(9, 14, 4), int8],) {
  %208 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %206 = @func_5526() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %207 = %206.0;
    (%207,)
  };
  %208() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_5067() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
  @func_5065() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */
}

def @func_12302() -> (Tensor[(9, 14, 4), float64],) {
  @func_12300() /* ty=(Tensor[(9, 14, 4), float64],) */
}

def @func_2629(%var_2626: Tensor[(630), int16]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) {
  %209 = @func_1683() /* ty=(Tensor[(60), float32],) */;
  %210 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %211 = cast(%var_2626, dtype="int16") /* ty=Tensor[(630), int16] */;
  %212 = cast(%var_2626, dtype="int16") /* ty=Tensor[(630), int16] */;
  %213 = reshape(%211, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %214 = reshape(%212, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %215 = @func_812(%213, %214) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
  %216 = %209.0;
  %217 = %210.0;
  %218 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %219 = %215.3;
  (%216, %217, %218, %219, %var_2626)
}

def @func_5964() -> (Tensor[(9, 14, 4), int8],) {
  %220 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %221 = %220.0;
  (%221,)
}

def @func_10307(%var_10305: Tensor[(210, 3), float64]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(7, 15, 6), float64], Tensor[(210, 3), float64]) {
  @func_10304(%var_10305) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(7, 15, 6), float64], Tensor[(210, 3), float64]) */
}

def @func_9417() -> (Tensor[(9, 14, 4), int8],) {
  @func_9415() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_11219() -> (Tensor[(9, 14, 4), float64], Tensor[(60), float32], Tensor[(9, 14, 4), float32]) {
  @func_11217() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32], Tensor[(9, 14, 4), float32]) */
}

def @func_8455(%var_8449: Tensor[(504), int8]) -> (Tensor[(11, 15, 14), float32], Tensor[(9, 14, 4), bool], Tensor[(504), int8]) {
  %222 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 14), float32] */;
  %223 = cast(%var_8449, dtype="int8") /* ty=Tensor[(504), int8] */;
  %224 = reshape(%223, newshape=[9, 14, 4]) /* ty=Tensor[(9, 14, 4), int8] */;
  %225 = @func_7119(%224) /* ty=(Tensor[(9, 14, 4), bool], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */;
  %226 = atanh(%222) /* ty=Tensor[(11, 15, 14), float32] */;
  %227 = %225.0;
  (%226, %227, %var_8449)
}

def @func_3737(%var_3736: Tensor[(50), int64]) -> (Tensor[(9, 14, 4), uint16], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) {
  %235 = fn (%var_3730: Tensor[(50), int64]) -> (Tensor[(9, 14, 4), uint16], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) {
    %228 = @func_2284() /* ty=(Tensor[(9, 14, 4), uint16],) */;
    %229 = cast(%var_3730, dtype="int64") /* ty=Tensor[(50), int64] */;
    %230 = cast(%var_3730, dtype="int64") /* ty=Tensor[(50), int64] */;
    %231 = reshape(%229, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
    %232 = reshape(%230, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
    %233 = %228.0;
    %234 = @func_1860(%231, %232) /* ty=Tensor[(5, 5, 2), int64] */;
    (%233, %234, %var_3730)
  };
  %235(%var_3736) /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */
}

def @func_6830() -> (Tensor[(60), float32],) {
  %236 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %237 = %236.0;
  (%237,)
}

def @func_3871() -> (Tensor[(9, 14, 4), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) {
  %246 = fn () -> (Tensor[(9, 14, 4), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) {
    %238 = @func_2429() /* ty=Tensor[(9, 14, 4), int8] */;
    %239 = cast(%238, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
    %240 = @func_3715() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
    %241 = @func_3715() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
    %242 = rsqrt(%239) /* ty=Tensor[(9, 14, 4), float32] */;
    %243 = %240.0;
    %244 = %241.0;
    %245 = @func_1589() /* ty=Tensor[(60), float32] */;
    (%242, %243, %244, %245)
  };
  %246() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) */
}

def @func_7658(%var_7656: Tensor[(15, 7, 9), int64], %var_7657: Tensor[(10, 63), int16]) -> (Tensor[(15, 7, 9), int64], Tensor[(15, 7, 9), int64], Tensor[(60), float32], Tensor[(10, 63), int16], Tensor[(9, 14, 4), int8]) {
  @func_7654(%var_7656, %var_7657) /* ty=(Tensor[(15, 7, 9), int64], Tensor[(15, 7, 9), int64], Tensor[(60), float32], Tensor[(10, 63), int16], Tensor[(9, 14, 4), int8]) */
}

def @func_6794() -> (Tensor[(60), float32],) {
  %248 = fn () -> (Tensor[(60), float32],) {
    %247 = @func_5564() /* ty=Tensor[(60), float32] */;
    (%247,)
  };
  %248() /* ty=(Tensor[(60), float32],) */
}

def @func_2388(%var_2341: Tensor[(13, 2, 5), float64], %var_2358: Tensor[(1, 60), float32], %var_2381: Tensor[(13, 2, 5), bool]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(?, 60), uint32], Tensor[(13, 2, 5), float64]) {
  %249 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %250 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %251 = cast(%var_2358, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
  %252 = reshape(%251, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %253 = @func_1252(%252) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(60), float32]) */;
  %254 = %253.2;
  %255 = cast(%254, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %256 = shape_of(%var_2358, dtype="int32") /* ty=Tensor[(2), int32] */;
  %257 = cast(%var_2358, dtype="uint32") /* ty=Tensor[(1, 60), uint32] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %259 = @func_1845() /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */;
  %260 = %259.1;
  %261 = cast(%var_2341, dtype="bool") /* ty=Tensor[(13, 2, 5), bool] */;
  %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%260, dtype="bool") /* ty=Tensor[(13, 2, 5), bool] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %265 = less(%263, %264) /* ty=Tensor[(13, 2, 5), bool] */;
  %266 = cast(%var_2381, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
  %267 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%265, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %270 = %249.0;
  %271 = %250.1;
  %272 = subtract(%257, %258) /* ty=Tensor[(?, 60), uint32] */;
  %273 = floor_divide(%268, %269) /* ty=Tensor[(13, 2, 5), float64] */;
  (%270, %271, %272, %273)
}

def @func_6848() -> Tensor[(9, 14, 4), int8] {
  @func_6245() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_12151(%var_12149: Tensor[(588), float32]) -> (Tensor[(60), float32], Tensor[(6, 14, 7), bool], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(858), float64], Tensor[(588), float64]) {
  @func_12148(%var_12149) /* ty=(Tensor[(60), float32], Tensor[(6, 14, 7), bool], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(858), float64], Tensor[(588), float64]) */
}

def @func_4501() -> (Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) {
  %274 = @func_2966() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %275 = @func_2476() /* ty=Tensor[(9, 14, 4), float32] */;
  %276 = %274.0;
  (%275, %276)
}

def @func_2901() -> (Tensor[(9, 14, 4), int8],) {
  @func_2899() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_8654() -> (Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) {
  @func_8652() /* ty=(Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */
}

def @func_5310() -> (Tensor[(9, 14, 4), int8],) {
  @func_5308() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_10568() -> (Tensor[(360), int64], Tensor[(60), float32]) {
  %277 = @func_8434() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(10, 3), int64], Tensor[(360), int64]) */;
  %278 = @func_7823() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) */;
  %279 = %277.3;
  %280 = %278.3;
  (%279, %280)
}

def @func_7435() -> Tensor[(60), float32] {
  @func_7433() /* ty=Tensor[(60), float32] */
}

def @func_9752(%var_9751: Tensor[(858), float64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(858), float64], Tensor[(60), float32], Tensor[(4, 15, 1), float32]) {
  %292 = fn (%var_9725: Tensor[(858), float64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(858), float64], Tensor[(60), float32], Tensor[(4, 15, 1), float32]) {
    %281 = cast(%var_9725, dtype="float64") /* ty=Tensor[(858), float64] */;
    %282 = reshape(%281, newshape=[858]) /* ty=Tensor[(858), float64] */;
    %283 = @func_3334(%282) /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(5, 5, 2), int64], Tensor[(50), int64], Tensor[(60), float32], Tensor[(9, 14, 4), uint16], Tensor[(11, 6, 13), float64], Tensor[(858), float64], Tensor[(60), float32]) */;
    %284 = @func_5594() /* ty=(Tensor[(60), float32],) */;
    %285 = %284.0;
    %286 = cast(%285, dtype="float32") /* ty=Tensor[(60), float32] */;
    %287 = reshape(%286, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
    %288 = @func_233(%287) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
    %289 = @func_3404() /* ty=Tensor[(60), float32] */;
    %290 = %283.1;
    %291 = %288.0;
    (%289, %290, %var_9725, %285, %291)
  };
  %292(%var_9751) /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(858), float64], Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */
}

def @func_386(%var_384: float32, %var_385: Tensor[(8, 6, 1), float32]) -> (Tensor[(30), int64], Tensor[(8, 6, 360), bool], Tensor[(8, 6, 130), float32], Tensor[(8, 6, 130), bool]) {
  @func_382(%var_384, %var_385) /* ty=(Tensor[(30), int64], Tensor[(8, 6, 360), bool], Tensor[(8, 6, 130), float32], Tensor[(8, 6, 130), bool]) */
}

def @func_2275() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) {
  %298 = fn () -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) {
    %293 = @func_1328() /* ty=(Tensor[(9, 14, 4), uint16],) */;
    %294 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %295 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
    %296 = %293.0;
    %297 = %294.0;
    (%295, %296, %297)
  };
  %298() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */
}

def @func_3393() -> Tensor[(60), float32] {
  %300 = fn () -> Tensor[(60), float32] {
    %299 = @func_3102() /* ty=(Tensor[(60), float32],) */;
    %299.0
  };
  %300() /* ty=Tensor[(60), float32] */
}

def @func_5308() -> (Tensor[(9, 14, 4), int8],) {
  %301 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %302 = %301.0;
  (%302,)
}

def @func_11523(%var_11518: Tensor[(9, 13, 4), uint8]) -> (Tensor[(9, 13, 4), bool],) {
  %303 = cast(meta[relay.Constant][10] /* ty=Tensor[(9, 13, 4), uint8] */, dtype="bool") /* ty=Tensor[(9, 13, 4), bool] */;
  %304 = shape_of(%var_11518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%var_11518, dtype="bool") /* ty=Tensor[(9, 13, 4), bool] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %307 = less(%305, %306) /* ty=Tensor[(9, 13, 4), bool] */;
  (%307,)
}

def @func_3228() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  @func_3226() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */
}

def @func_11217() -> (Tensor[(9, 14, 4), float64], Tensor[(60), float32], Tensor[(9, 14, 4), float32]) {
  %308 = @func_7823() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) */;
  %309 = @func_6157() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */;
  %310 = @func_9104() /* ty=(Tensor[(9, 14, 4), float32],) */;
  %311 = %308.4;
  %312 = %309.1;
  %313 = %310.0;
  (%311, %312, %313)
}

def @func_7734() -> Tensor[(9, 14, 4), int8] {
  %314 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %314.0
}

def @func_8652() -> (Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) {
  %315 = @func_6793() /* ty=(Tensor[(60), float32],) */;
  %316 = cast(meta[relay.Constant][11] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %317 = cast(meta[relay.Constant][11] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %318 = reshape(%316, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %319 = reshape(%317, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %320 = %315.0;
  %321 = @func_1860(%318, %319) /* ty=Tensor[(5, 5, 2), int64] */;
  (%320, %321, meta[relay.Constant][11] /* ty=Tensor[(50), int64] */)
}

def @func_3404() -> Tensor[(60), float32] {
  @func_1783() /* ty=Tensor[(60), float32] */
}

def @func_6973(%var_6971: Tensor[(130), float64]) -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130), float64]) {
  @func_6970(%var_6971) /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130), float64]) */
}

def @func_6767(%var_6764: Tensor[(4, 8, 3), bool], %var_6765: Tensor[(4, 8, 3), bool], %var_6766: Tensor[(360), int64]) -> (Tensor[(4, 8, 3), bool], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), int8]) {
  %337 = fn (%var_6740: Tensor[(4, 8, 3), bool], %var_6741: Tensor[(4, 8, 3), bool], %var_6754: Tensor[(360), int64]) -> (Tensor[(4, 8, 3), bool], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), int8]) {
    %322 = cast(%var_6741, dtype="bool") /* ty=Tensor[(4, 8, 3), bool] */;
    %323 = shape_of(%var_6740, dtype="int32") /* ty=Tensor[(3), int32] */;
    %324 = cast(%var_6740, dtype="bool") /* ty=Tensor[(4, 8, 3), bool] */;
    %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %326 = cast(meta[relay.Constant][12] /* ty=Tensor[(30), int64] */, dtype="int64") /* ty=Tensor[(30), int64] */;
    %327 = cast(%var_6754, dtype="int64") /* ty=Tensor[(360), int64] */;
    %328 = cast(%var_6754, dtype="float64") /* ty=Tensor[(360), float64] */;
    %329 = reshape(%326, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
    %330 = reshape(%327, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), int64] */;
    %331 = reshape(%328, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float64] */;
    %332 = @func_183(%329, %330, %331) /* ty=(Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) */;
    %333 = @func_3960() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %334 = logical_or(%324, %325) /* ty=Tensor[(4, 8, 3), bool] */;
    %335 = %332.1;
    %336 = %333.0;
    (%334, %335, meta[relay.Constant][12] /* ty=Tensor[(30), int64] */, %var_6754, %336)
  };
  %337(%var_6764, %var_6765, %var_6766) /* ty=(Tensor[(4, 8, 3), bool], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), int8]) */
}

def @func_7956(%var_7954: Tensor[(2), uint64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(1, 2), uint64], uint64, Tensor[(2), uint64]) {
  @func_7953(%var_7954) /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(1, 2), uint64], uint64, Tensor[(2), uint64]) */
}

def @func_4680(%var_4663: Tensor[(26, 5), float64], %var_4667: Tensor[(50), int64], %var_4670: float32) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int32], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(50), int64], Tensor[(50), int64], Tensor[(8, 6, 130), bool], Tensor[(1, 48), float32], Tensor[(26, 5), int32]) {
  %338 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %339 = @func_3033() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) */;
  %340 = %339.0;
  %341 = @func_3431() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %342 = %341.0;
  %343 = cast(%342, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %344 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %345 = cast(%340, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %347 = floor_mod(%345, %346) /* ty=Tensor[(9, 14, 4), float32] */;
  %348 = cast(%340, dtype="int32") /* ty=Tensor[(9, 14, 4), int32] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="int32") /* ty=Tensor[(9, 14, 4), int32] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %352 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %353 = cast(%var_4663, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %354 = reshape(%353, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %355 = @func_2129(%354) /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(1, 130), float64]) */;
  %356 = cast(%var_4667, dtype="int64") /* ty=Tensor[(50), int64] */;
  %357 = reshape(%356, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %358 = @func_3999(%357) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(50), int64], Tensor[(9, 14, 4), int8]) */;
  %359 = cast(%var_4670, dtype="float32") /* ty=float32 */;
  %360 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 48), float32] */, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %361 = reshape(%359, newshape=[]) /* ty=float32 */;
  %362 = reshape(%360, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float32] */;
  %363 = @func_382(%361, %362) /* ty=(Tensor[(30), int64], Tensor[(8, 6, 360), bool], Tensor[(8, 6, 130), float32], Tensor[(8, 6, 130), bool]) */;
  %364 = cast(%var_4663, dtype="int32") /* ty=Tensor[(26, 5), int32] */;
  %365 = cast(%var_4670, dtype="int32") /* ty=int32 */;
  %366 = %338.0;
  %367 = bitwise_and(%350, %351) /* ty=Tensor[(9, 14, 4), int32] */;
  %368 = %352.0;
  %369 = %355.1;
  %370 = %358.2;
  %371 = %363.3;
  %372 = add(%364, %365) /* ty=Tensor[(26, 5), int32] */;
  (%366, %367, %368, %369, %370, %var_4667, %371, meta[relay.Constant][13] /* ty=Tensor[(1, 48), float32] */, %372)
}

def @func_9993() -> (Tensor[(5, 5, 2), int64], Tensor[(60), float32]) {
  @func_9991() /* ty=(Tensor[(5, 5, 2), int64], Tensor[(60), float32]) */
}

def @func_4863() -> (Tensor[(9, 14, 4), int8],) {
  %373 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %374 = %373.1;
  (%374,)
}

def @func_6654(%var_6652: Tensor[(1, 8, 2), uint16], %var_6653: Tensor[(14, 8, 2), uint16]) -> (Tensor[(14, 8, 2), uint8], Tensor[(60), float32]) {
  @func_6650(%var_6652, %var_6653) /* ty=(Tensor[(14, 8, 2), uint8], Tensor[(60), float32]) */
}

def @func_9166() -> (Tensor[(60), float32], Tensor[(36, 10), int64]) {
  %375 = @func_5368() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(96), uint64], Tensor[(5, 5, 2), int64], Tensor[(30), int64], Tensor[(36, 10), int64]) */;
  %376 = @func_5032() /* ty=Tensor[(60), float32] */;
  %377 = %375.5;
  (%376, %377)
}

def @func_8792() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %384 = fn () -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
    %378 = @func_1845() /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */;
    %379 = @func_4095() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(630), int16]) */;
    %380 = @func_2244() /* ty=Tensor[(60), float32] */;
    %381 = %378.0;
    %382 = %379.0;
    %383 = @func_4546() /* ty=Tensor[(60), float32] */;
    (%380, %381, %382, %383)
  };
  %384() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */
}

def @func_7401() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  @func_7399() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */
}

def @func_854(%var_851: Tensor[(11, 6, 13), float64]) -> (Tensor[(11, 6, 13), float64],) {
  %385 = cast(%var_851, dtype="float64") /* ty=Tensor[(11, 6, 13), float64] */;
  %386 = acos(%385) /* ty=Tensor[(11, 6, 13), float64] */;
  (%386,)
}

def @func_1729() -> Tensor[(60), float32] {
  @func_1589() /* ty=Tensor[(60), float32] */
}

def @func_10134() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %390 = fn () -> (Tensor[(60), float32], Tensor[(60), float32]) {
    %387 = @func_6733() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32], Tensor[(?, 60), uint32], Tensor[(130, 1), float64], Tensor[(60), float32]) */;
    %388 = %387.1;
    %389 = @func_1783() /* ty=Tensor[(60), float32] */;
    (%388, %389)
  };
  %390() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */
}

def @func_1004(%var_955: Tensor[(312), int32]) -> (Tensor[(11, 7, 9), bool], Tensor[(312), int32], Tensor[(13, 3, 8), uint16]) {
  %391 = cast(meta[relay.Constant][15] /* ty=Tensor[(11, 7, 9), int8] */, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %392 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(11, 7, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 7, 9), int8] */, dtype="bool") /* ty=Tensor[(11, 7, 9), bool] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %395 = cast(%var_955, dtype="int32") /* ty=Tensor[(312), int32] */;
  %396 = cast(%var_955, dtype="int32") /* ty=Tensor[(312), int32] */;
  %397 = reshape(%395, newshape=[13, 3, 8]) /* ty=Tensor[(13, 3, 8), int32] */;
  %398 = reshape(%396, newshape=[13, 3, 8]) /* ty=Tensor[(13, 3, 8), int32] */;
  %399 = @func_713(%397, %398) /* ty=Tensor[(13, 3, 8), int32] */;
  %400 = cast(%399, dtype="float64") /* ty=Tensor[(13, 3, 8), float64] */;
  %401 = asinh(%400) /* ty=Tensor[(13, 3, 8), float64] */;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(13, 3, 8), float32] */;
  %403 = acosh(%402) /* ty=Tensor[(13, 3, 8), float32] */;
  %404 = cast(%399, dtype="uint16") /* ty=Tensor[(13, 3, 8), uint16] */;
  %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(%403, dtype="uint16") /* ty=Tensor[(13, 3, 8), uint16] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %408 = greater(%393, %394) /* ty=Tensor[(11, 7, 9), bool] */;
  %409 = logical_xor(%406, %407) /* ty=Tensor[(13, 3, 8), uint16] */;
  (%408, %var_955, %409)
}

def @func_6377() -> Tensor[(60), float32] {
  %410 = fn () -> Tensor[(60), float32] {
    @func_3404() /* ty=Tensor[(60), float32] */
  };
  %410() /* ty=Tensor[(60), float32] */
}

def @func_10097() -> Tensor[(9, 14, 4), uint16] {
  @func_10095() /* ty=Tensor[(9, 14, 4), uint16] */
}

def @func_12858() -> (Tensor[(10, 3), int64], Tensor[(60), float32]) {
  @func_12856() /* ty=(Tensor[(10, 3), int64], Tensor[(60), float32]) */
}

def @func_12616() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  @func_12614() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */
}

def @func_12207() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  @func_12205() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */
}

def @func_12092() -> (Tensor[(60), float32],) {
  @func_12090() /* ty=(Tensor[(60), float32],) */
}

def @func_5182(%var_5180: Tensor[(4, 4, 11), int32], %var_5181: Tensor[(4, 4, 11), int32]) -> (Tensor[(4, 4, 11), bool], Tensor[(60), float32], Tensor[(4, 4, 11), int32]) {
  %426 = fn (%var_5138: Tensor[(4, 4, 11), int32], %var_5139: Tensor[(4, 4, 11), int32]) -> (Tensor[(4, 4, 11), bool], Tensor[(60), float32], Tensor[(4, 4, 11), int32]) {
    %411 = cast(%var_5139, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
    %412 = shape_of(%var_5138, dtype="int32") /* ty=Tensor[(3), int32] */;
    %413 = cast(%var_5138, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
    %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %415 = cast(%var_5138, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
    %416 = exp(%415) /* ty=Tensor[(4, 4, 11), float64] */;
    %417 = cast(%416, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
    %418 = sqrt(%417) /* ty=Tensor[(4, 4, 11), float64] */;
    %419 = cast(%var_5138, dtype="int32") /* ty=Tensor[(4, 4, 11), int32] */;
    %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
    %421 = cast(%418, dtype="int32") /* ty=Tensor[(4, 4, 11), int32] */;
    %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %423 = greater(%413, %414) /* ty=Tensor[(4, 4, 11), bool] */;
    %424 = @func_1783() /* ty=Tensor[(60), float32] */;
    %425 = bitwise_xor(%421, %422) /* ty=Tensor[(4, 4, 11), int32] */;
    (%423, %424, %425)
  };
  %426(%var_5180, %var_5181) /* ty=(Tensor[(4, 4, 11), bool], Tensor[(60), float32], Tensor[(4, 4, 11), int32]) */
}

def @func_9639() -> Tensor[(9, 14, 4), float32] {
  %427 = @func_5853() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) */;
  %428 = %427.1;
  %429 = cast(%428, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  exp(%429) /* ty=Tensor[(9, 14, 4), float32] */
}

def @func_5738(%var_5736: Tensor[(60), float32]) -> (Tensor[(9, 14, 4), uint16], Tensor[(13, 3, 8), int32], Tensor[(312, 1), int32], Tensor[(6, 14, 7), bool], Tensor[(588), float32], Tensor[(9, 14, 4), int8], Tensor[(54), float64], Tensor[(130), float64], Tensor[(60), float32]) {
  @func_5735(%var_5736) /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(13, 3, 8), int32], Tensor[(312, 1), int32], Tensor[(6, 14, 7), bool], Tensor[(588), float32], Tensor[(9, 14, 4), int8], Tensor[(54), float64], Tensor[(130), float64], Tensor[(60), float32]) */
}

def @func_4968() -> Tensor[(9, 14, 4), uint16] {
  %431 = fn () -> Tensor[(9, 14, 4), uint16] {
    %430 = @func_1328() /* ty=(Tensor[(9, 14, 4), uint16],) */;
    %430.0
  };
  %431() /* ty=Tensor[(9, 14, 4), uint16] */
}

def @func_5595() -> (Tensor[(60), float32],) {
  %433 = fn () -> (Tensor[(60), float32],) {
    %432 = @func_5564() /* ty=Tensor[(60), float32] */;
    (%432,)
  };
  %433() /* ty=(Tensor[(60), float32],) */
}

def @func_6567(%var_6565: Tensor[(50), int64], %var_6566: float32) -> (Tensor[(60), float32], Tensor[(50), int64], Tensor[(130), float64], Tensor[(50), int64], float32) {
  %444 = fn (%var_6561: Tensor[(50), int64], %var_6562: float32) -> (Tensor[(60), float32], Tensor[(50), int64], Tensor[(130), float64], Tensor[(50), int64], float32) {
    %434 = @func_3033() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) */;
    %435 = cast(meta[relay.Constant][16] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %436 = cast(%var_6561, dtype="int64") /* ty=Tensor[(50), int64] */;
    %437 = cast(%var_6562, dtype="float32") /* ty=float32 */;
    %438 = reshape(%435, newshape=[26, 5]) /* ty=Tensor[(26, 5), float64] */;
    %439 = reshape(%436, newshape=[50]) /* ty=Tensor[(50), int64] */;
    %440 = reshape(%437, newshape=[]) /* ty=float32 */;
    %441 = @func_4680(%438, %439, %440) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int32], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(50), int64], Tensor[(50), int64], Tensor[(8, 6, 130), bool], Tensor[(1, 48), float32], Tensor[(26, 5), int32]) */;
    %442 = %434.1;
    %443 = %441.4;
    (%442, %443, meta[relay.Constant][16] /* ty=Tensor[(130), float64] */, %var_6561, %var_6562)
  };
  %444(%var_6565, %var_6566) /* ty=(Tensor[(60), float32], Tensor[(50), int64], Tensor[(130), float64], Tensor[(50), int64], float32) */
}

def @func_11227() -> Tensor[(60), float32] {
  %446 = fn () -> Tensor[(60), float32] {
    %445 = @func_6793() /* ty=(Tensor[(60), float32],) */;
    %445.0
  };
  %446() /* ty=Tensor[(60), float32] */
}

def @func_3406() -> Tensor[(60), float32] {
  @func_3404() /* ty=Tensor[(60), float32] */
}

def @func_7309() -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  @func_7307() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */
}

def @func_12856() -> (Tensor[(10, 3), int64], Tensor[(60), float32]) {
  %447 = @func_8434() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(10, 3), int64], Tensor[(360), int64]) */;
  %448 = @func_9910() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */;
  %449 = %447.2;
  %450 = %448.0;
  (%449, %450)
}

def @func_9991() -> (Tensor[(5, 5, 2), int64], Tensor[(60), float32]) {
  %451 = @func_8652() /* ty=(Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */;
  %452 = @func_6157() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */;
  %453 = %451.1;
  %454 = %452.0;
  (%453, %454)
}

def @func_5946() -> Tensor[(60), float32] {
  @func_5564() /* ty=Tensor[(60), float32] */
}

def @func_10680(%var_10678: Tensor[(360), int64]) -> (Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(504), int8], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), int8]) {
  @func_10677(%var_10678) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(504), int8], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), int8]) */
}

def @func_8712(%var_8710: Tensor[(10, 3, 7), uint32], %var_8711: Tensor[(10, 3, 7), uint32]) -> (Tensor[(10, 3, 7), uint32],) {
  @func_8708(%var_8710, %var_8711) /* ty=(Tensor[(10, 3, 7), uint32],) */
}

def @func_3102() -> (Tensor[(60), float32],) {
  %455 = @func_2668() /* ty=Tensor[(60), float32] */;
  (%455,)
}

def @func_9910() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) {
  %456 = @func_3715() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %457 = @func_1683() /* ty=(Tensor[(60), float32],) */;
  %458 = @func_5912() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */;
  %459 = %456.0;
  %460 = %457.0;
  %461 = %458.1;
  (%459, %460, %461)
}

def @func_3538(%var_3536: Tensor[(9, 14, 4), float64]) -> (Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) {
  @func_3535(%var_3536) /* ty=(Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) */
}

def @func_8436() -> (Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(10, 3), int64], Tensor[(360), int64]) {
  @func_8434() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(10, 3), int64], Tensor[(360), int64]) */
}

def @func_4805(%var_4789: Tensor[(6, 14, 7), float32]) -> Tensor[(6, 14, 7), bool] {
  %462 = cast(%var_4789, dtype="float32") /* ty=Tensor[(6, 14, 7), float32] */;
  %463 = exp(%462) /* ty=Tensor[(6, 14, 7), float32] */;
  %464 = cast(%var_4789, dtype="bool") /* ty=Tensor[(6, 14, 7), bool] */;
  %465 = shape_of(%463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%463, dtype="bool") /* ty=Tensor[(6, 14, 7), bool] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%466, %467) /* ty=Tensor[(6, 14, 7), bool] */
}

def @func_9912() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) {
  @func_9910() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */
}

def @func_3226() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %468 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %469 = @func_1783() /* ty=Tensor[(60), float32] */;
  (%468, %469)
}

def @func_10828() -> Tensor[(60), float32] {
  %471 = fn () -> Tensor[(60), float32] {
    %470 = @func_8700() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
    %470.1
  };
  %471() /* ty=Tensor[(60), float32] */
}

def @func_1413() -> (Tensor[(9, 14, 4), int8],) {
  %472 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %473 = %472.0;
  (%473,)
}

def @func_5914() -> (Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) {
  @func_5912() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */
}

def @func_4548() -> Tensor[(60), float32] {
  @func_4546() /* ty=Tensor[(60), float32] */
}

def @func_7823() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) {
  %474 = @func_6470() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
  %475 = %474.0;
  %476 = cast(%475, dtype="float32") /* ty=Tensor[(60), float32] */;
  %477 = reshape(%476, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %478 = @func_5235(%477) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32], Tensor[(1, 9, 6), float64], Tensor[(54), float64], Tensor[(130), float64]) */;
  %479 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %480 = @func_7433() /* ty=Tensor[(60), float32] */;
  %481 = @func_6848() /* ty=Tensor[(9, 14, 4), int8] */;
  %482 = %478.1;
  %483 = %479.0;
  (%480, %475, %481, %482, %483)
}

def @func_2429() -> Tensor[(9, 14, 4), int8] {
  @func_1179() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_3501() -> (Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) {
  @func_3499() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */
}

def @func_1252(%var_1216: Tensor[(60), float32]) -> (Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(60), float32]) {
  %484 = cast(%var_1216, dtype="float32") /* ty=Tensor[(60), float32] */;
  %485 = reshape(%484, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %486 = @func_233(%485) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
  %487 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %488 = %486.1;
  (%487, %488, %var_1216)
}

def @func_9168() -> (Tensor[(60), float32], Tensor[(36, 10), int64]) {
  @func_9166() /* ty=(Tensor[(60), float32], Tensor[(36, 10), int64]) */
}

def @func_11737() -> (Tensor[(9, 14, 4), int8],) {
  %489 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  (%489,)
}

def @func_5714() -> (Tensor[(60), float32],) {
  @func_5712() /* ty=(Tensor[(60), float32],) */
}

def @func_4095() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(630), int16]) {
  %490 = @func_3636() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %491 = cast(meta[relay.Constant][17] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
  %492 = cast(meta[relay.Constant][17] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
  %493 = reshape(%491, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %494 = reshape(%492, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %495 = @func_812(%493, %494) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
  %496 = %490.0;
  %497 = %495.2;
  (%496, %497, meta[relay.Constant][17] /* ty=Tensor[(630), int16] */)
}

def @func_10955() -> Tensor[(60), float32] {
  @func_10953() /* ty=Tensor[(60), float32] */
}

def @func_9231() -> (Tensor[(60), float32],) {
  @func_9229() /* ty=(Tensor[(60), float32],) */
}

def @func_7433() -> Tensor[(60), float32] {
  @func_5564() /* ty=Tensor[(60), float32] */
}

def @func_5853() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) {
  %498 = @func_3612() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
  %499 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %500 = %498.2;
  %501 = %499.0;
  (%500, %501)
}

def @func_5484(%var_5482: Tensor[(5, 5, 2), int64]) -> (Tensor[(9, 14, 4), float32], Tensor[(5, 5, 2), float32], Tensor[(5, 5, 2), int32]) {
  @func_5481(%var_5482) /* ty=(Tensor[(9, 14, 4), float32], Tensor[(5, 5, 2), float32], Tensor[(5, 5, 2), int32]) */
}

def @func_11376() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  @func_11374() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */
}

def @func_4808(%var_4806: Tensor[(6, 14, 7), float32]) -> Tensor[(6, 14, 7), bool] {
  @func_4805(%var_4806) /* ty=Tensor[(6, 14, 7), bool] */
}

def @func_10570() -> (Tensor[(360), int64], Tensor[(60), float32]) {
  @func_10568() /* ty=(Tensor[(360), int64], Tensor[(60), float32]) */
}

def @func_4546() -> Tensor[(60), float32] {
  %502 = @func_2411() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %502.1
}

def @func_1415() -> (Tensor[(9, 14, 4), int8],) {
  @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_6850() -> Tensor[(9, 14, 4), int8] {
  @func_6848() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_7335() -> (Tensor[(9, 14, 4), int8],) {
  %504 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %503 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
    (%503,)
  };
  %504() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_1646() -> (Tensor[(60), float32],) {
  %507 = fn () -> (Tensor[(60), float32],) {
    %505 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
    %506 = %505.2;
    (%506,)
  };
  %507() /* ty=(Tensor[(60), float32],) */
}

def @func_5420() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  @func_5418() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */
}

def @func_12300() -> (Tensor[(9, 14, 4), float64],) {
  %508 = @func_8869() /* ty=Tensor[(9, 14, 4), float64] */;
  (%508,)
}

def @func_5528() -> (Tensor[(9, 14, 4), int8],) {
  @func_5526() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_7122(%var_7120: Tensor[(9, 14, 4), int8]) -> (Tensor[(9, 14, 4), bool], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  @func_7119(%var_7120) /* ty=(Tensor[(9, 14, 4), bool], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */
}

def @func_1179() -> Tensor[(9, 14, 4), int8] {
  %509 = cast(meta[relay.Constant][19] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %510 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 14, 4), int8] */, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %511 = greater(%509, %510) /* ty=Tensor[(9, 14, 4), bool] */;
  %512 = cast(%511, dtype="int8") /* ty=Tensor[(9, 14, 4), int8] */;
  %513 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(9, 14, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %514 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 14, 4), int8] */, dtype="int8") /* ty=Tensor[(9, 14, 4), int8] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%514, %515) /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_12468() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) {
  %516 = @func_7823() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) */;
  %517 = @func_8652() /* ty=(Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */;
  %518 = @func_3102() /* ty=(Tensor[(60), float32],) */;
  %519 = %516.1;
  %520 = %517.0;
  %521 = %518.0;
  (%519, %520, %521)
}

def @func_11486(%var_11485: Tensor[(3, 5, 1), float32]) -> (Tensor[(3, 5, 1), float32], Tensor[(9, 14, 4), int8], Tensor[(32, 8), uint64]) {
  %528 = fn (%var_11463: Tensor[(3, 5, 1), float32]) -> (Tensor[(3, 5, 1), float32], Tensor[(9, 14, 4), int8], Tensor[(32, 8), uint64]) {
    %522 = cast(%var_11463, dtype="float32") /* ty=Tensor[(3, 5, 1), float32] */;
    %523 = cast(meta[relay.Constant][20] /* ty=Tensor[(32, 8), uint64] */, dtype="uint64") /* ty=Tensor[(32, 8), uint64] */;
    %524 = reshape(%523, newshape=[256]) /* ty=Tensor[(256), uint64] */;
    %525 = @func_8918(%524) /* ty=(Tensor[(60), float32], Tensor[(16, 8, 2), bool], Tensor[(256), uint64], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
    %526 = atanh(%522) /* ty=Tensor[(3, 5, 1), float32] */;
    %527 = %525.3;
    (%526, %527, meta[relay.Constant][20] /* ty=Tensor[(32, 8), uint64] */)
  };
  %528(%var_11485) /* ty=(Tensor[(3, 5, 1), float32], Tensor[(9, 14, 4), int8], Tensor[(32, 8), uint64]) */
}

def @func_10155(%var_10149: Tensor[(6, 9, 7), float64], %var_10153: Tensor[(60), float32]) -> (Tensor[(6, 9, 7), float64], Tensor[(4, 15, 1), float32], Tensor[(60), float32]) {
  %529 = cast(%var_10149, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %530 = cast(%var_10153, dtype="float32") /* ty=Tensor[(60), float32] */;
  %531 = reshape(%530, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %532 = @func_233(%531) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
  %533 = atan(%529) /* ty=Tensor[(6, 9, 7), float64] */;
  %534 = %532.0;
  (%533, %534, %var_10153)
}

def @func_12402() -> Tensor[(60), float32] {
  @func_12400() /* ty=Tensor[(60), float32] */
}

def @func_5966() -> (Tensor[(9, 14, 4), int8],) {
  @func_5964() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_5237(%var_5236: Tensor[(60), float32]) -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32], Tensor[(1, 9, 6), float64], Tensor[(54), float64], Tensor[(130), float64]) {
  %549 = fn (%var_5218: Tensor[(60), float32]) -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32], Tensor[(1, 9, 6), float64], Tensor[(54), float64], Tensor[(130), float64]) {
    %535 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %536 = cast(%var_5218, dtype="float32") /* ty=Tensor[(60), float32] */;
    %537 = reshape(%536, newshape=[60]) /* ty=Tensor[(60), float32] */;
    %538 = @func_1252(%537) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(60), float32]) */;
    %539 = cast(meta[relay.Constant][21] /* ty=Tensor[(54), float64] */, dtype="float64") /* ty=Tensor[(54), float64] */;
    %540 = cast(meta[relay.Constant][22] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %541 = %538.2;
    %542 = cast(%541, dtype="float32") /* ty=Tensor[(60), float32] */;
    %543 = reshape(%539, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float64] */;
    %544 = reshape(%540, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %545 = reshape(%542, newshape=[30, 2]) /* ty=Tensor[(30, 2), float32] */;
    %546 = @func_2790(%543, %544, %545) /* ty=(Tensor[(1, 9, 6), float64], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(30, 2), float64]) */;
    %547 = %535.0;
    %548 = %546.0;
    (%547, %541, %var_5218, %548, meta[relay.Constant][21] /* ty=Tensor[(54), float64] */, meta[relay.Constant][22] /* ty=Tensor[(130), float64] */)
  };
  %549(%var_5236) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32], Tensor[(1, 9, 6), float64], Tensor[(54), float64], Tensor[(130), float64]) */
}

def @func_8434() -> (Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(10, 3), int64], Tensor[(360), int64]) {
  %550 = @func_4095() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(630), int16]) */;
  %551 = cast(meta[relay.Constant][23] /* ty=Tensor[(10, 3), int64] */, dtype="int64") /* ty=Tensor[(10, 3), int64] */;
  %552 = cast(meta[relay.Constant][24] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %553 = reshape(%551, newshape=[30]) /* ty=Tensor[(30), int64] */;
  %554 = reshape(%552, newshape=[2, 180]) /* ty=Tensor[(2, 180), int64] */;
  %555 = @func_3180(%553, %554) /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(2, 180), int64]) */;
  %556 = %550.0;
  %557 = %555.2;
  (%556, %557, meta[relay.Constant][23] /* ty=Tensor[(10, 3), int64] */, meta[relay.Constant][24] /* ty=Tensor[(360), int64] */)
}

def @func_10808() -> (Tensor[(630), int16],) {
  %560 = fn () -> (Tensor[(630), int16],) {
    %558 = @func_1845() /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */;
    %559 = %558.2;
    (%559,)
  };
  %560() /* ty=(Tensor[(630), int16],) */
}

def @func_11877() -> Tensor[(60), float32] {
  %561 = fn () -> Tensor[(60), float32] {
    @func_4546() /* ty=Tensor[(60), float32] */
  };
  %561() /* ty=Tensor[(60), float32] */
}

def @func_11162() -> Tensor[(60), float32] {
  %562 = @func_5712() /* ty=(Tensor[(60), float32],) */;
  %562.0
}

def @func_5526() -> (Tensor[(9, 14, 4), int8],) {
  %563 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %564 = %563.0;
  (%564,)
}

def @func_7119(%var_7103: Tensor[(9, 14, 4), int8]) -> (Tensor[(9, 14, 4), bool], Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %565 = @func_6046() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %566 = %565.0;
  %567 = cast(%var_7103, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%566, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %571 = @func_6046() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %572 = @func_4059() /* ty=(Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */;
  %573 = greater_equal(%569, %570) /* ty=Tensor[(9, 14, 4), bool] */;
  %574 = %571.0;
  %575 = %572.0;
  (%573, %574, %575)
}

def @func_8132() -> Tensor[(9, 14, 4), int8] {
  %577 = fn () -> Tensor[(9, 14, 4), int8] {
    %576 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %576.0
  };
  %577() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_382(%var_293: float32, %var_294: Tensor[(8, 6, 1), float32]) -> (Tensor[(30), int64], Tensor[(8, 6, 360), bool], Tensor[(8, 6, 130), float32], Tensor[(8, 6, 130), bool]) {
  %578 = cast(%var_293, dtype="float32") /* ty=float32 */;
  %579 = cast(%var_294, dtype="float32") /* ty=Tensor[(8, 6, 1), float32] */;
  %580 = divide(%578, %579) /* ty=Tensor[(8, 6, 1), float32] */;
  %581 = cast(meta[relay.Constant][26] /* ty=Tensor[(360), int64] */, dtype="bool") /* ty=Tensor[(360), bool] */;
  %582 = cast(%580, dtype="bool") /* ty=Tensor[(8, 6, 1), bool] */;
  %583 = cast(meta[relay.Constant][25] /* ty=Tensor[(30), int64] */, dtype="int64") /* ty=Tensor[(30), int64] */;
  %584 = cast(meta[relay.Constant][26] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %585 = cast(meta[relay.Constant][26] /* ty=Tensor[(360), int64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %586 = reshape(%583, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
  %587 = reshape(%584, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), int64] */;
  %588 = reshape(%585, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float64] */;
  %589 = @func_183(%586, %587, %588) /* ty=(Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) */;
  %590 = %589.2;
  %591 = cast(%590, dtype="float32") /* ty=Tensor[(130), float32] */;
  %592 = cast(%580, dtype="float32") /* ty=Tensor[(8, 6, 1), float32] */;
  %593 = cast(%580, dtype="int32") /* ty=Tensor[(8, 6, 1), int32] */;
  %594 = cast(%590, dtype="int32") /* ty=Tensor[(130), int32] */;
  %595 = left_shift(%593, %594) /* ty=Tensor[(8, 6, 130), int32] */;
  %596 = cast(%595, dtype="int32") /* ty=Tensor[(8, 6, 130), int32] */;
  %597 = cast(%var_294, dtype="int32") /* ty=Tensor[(8, 6, 1), int32] */;
  %598 = bitwise_or(%596, %597) /* ty=Tensor[(8, 6, 130), int32] */;
  %599 = cast(%var_293, dtype="bool") /* ty=bool */;
  %600 = cast(%598, dtype="bool") /* ty=Tensor[(8, 6, 130), bool] */;
  %601 = logical_and(%581, %582) /* ty=Tensor[(8, 6, 360), bool] */;
  %602 = floor_mod(%591, %592) /* ty=Tensor[(8, 6, 130), float32] */;
  %603 = less_equal(%599, %600) /* ty=Tensor[(8, 6, 130), bool] */;
  (meta[relay.Constant][25] /* ty=Tensor[(30), int64] */, %601, %602, %603)
}

def @func_11509() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 7, 3), uint32], Tensor[(189), uint32]) {
  @func_11507() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 7, 3), uint32], Tensor[(189), uint32]) */
}

def @func_7341() -> (Tensor[(9, 14, 4), int8],) {
  %604 = @func_7049() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) */;
  %605 = %604.1;
  (%605,)
}

def @func_10746() -> (Tensor[(9, 14, 4), float64], Tensor[(60), float32], Tensor[(96), uint64], Tensor[(2, 12, 4), float64]) {
  @func_10744() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32], Tensor[(96), uint64], Tensor[(2, 12, 4), float64]) */
}

def @func_1731() -> Tensor[(60), float32] {
  @func_1729() /* ty=Tensor[(60), float32] */
}

def @func_11295(%var_11293: Tensor[(8, 28), uint16]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(50), int64], Tensor[(8, 28), uint16]) {
  @func_11292(%var_11293) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(50), int64], Tensor[(8, 28), uint16]) */
}

def @func_1684() -> (Tensor[(60), float32],) {
  %608 = fn () -> (Tensor[(60), float32],) {
    %606 = @func_1645() /* ty=(Tensor[(60), float32],) */;
    %607 = %606.0;
    (%607,)
  };
  %608() /* ty=(Tensor[(60), float32],) */
}

def @func_7050() -> (Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) {
  %613 = fn () -> (Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) {
    %609 = @func_4501() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) */;
    %610 = @func_3960() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %611 = %609.0;
    %612 = %610.0;
    (%611, %612)
  };
  %613() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) */
}

def @main(%var_12872: Tensor[(13, 6, 9), float64], %var_12873: Tensor[(13, 6, 9), float64]) -> Tensor[(13, 6, 9), float64] {
  %614 = cast(%var_12873, dtype="float64") /* ty=Tensor[(13, 6, 9), float64] */;
  %615 = shape_of(%var_12872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%var_12872, dtype="float64") /* ty=Tensor[(13, 6, 9), float64] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%616, %617) /* ty=Tensor[(13, 6, 9), float64] */
}

def @func_10159(%var_10157: Tensor[(6, 9, 7), float64], %var_10158: Tensor[(60), float32]) -> (Tensor[(6, 9, 7), float64], Tensor[(4, 15, 1), float32], Tensor[(60), float32]) {
  @func_10155(%var_10157, %var_10158) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(4, 15, 1), float32], Tensor[(60), float32]) */
}

def @func_3612() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %618 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %619 = @func_1783() /* ty=Tensor[(60), float32] */;
  %620 = @func_3392() /* ty=Tensor[(60), float32] */;
  %621 = %618.0;
  (%619, %620, %621)
}

def @func_1399() -> (Tensor[(9, 14, 4), int8],) {
  %623 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %622 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
    (%622,)
  };
  %623() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_4503() -> (Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) {
  @func_4501() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) */
}

def @func_3614() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  @func_3612() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */
}

def @func_12400() -> Tensor[(60), float32] {
  %624 = @func_5761() /* ty=(Tensor[(60), float32],) */;
  %624.0
}

def @func_2711(%var_2709: Tensor[(630), int16]) -> (Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(630), int16]) {
  @func_2708(%var_2709) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(630), int16]) */
}

def @func_6014() -> Tensor[(9, 14, 4), int8] {
  @func_6012() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_11666() -> Tensor[(60), float32] {
  @func_11664() /* ty=Tensor[(60), float32] */
}

def @func_8502() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
  @func_8500() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */
}

def @func_3431() -> (Tensor[(9, 14, 4), int8],) {
  %625 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  (%625,)
}

def @func_12344() -> (Tensor[(9, 14, 4), int8],) {
  %626 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %627 = %626.0;
  (%627,)
}

def @func_9867() -> (Tensor[(9, 14, 4), int8],) {
  %630 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %628 = @func_5964() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %629 = %628.0;
    (%629,)
  };
  %630() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_6012() -> Tensor[(9, 14, 4), int8] {
  %631 = @func_4863() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %631.0
}

def @func_11624() -> Tensor[(9, 14, 4), int8] {
  @func_11622() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_2943() -> Tensor[(9, 14, 4), int8] {
  %633 = fn () -> Tensor[(9, 14, 4), int8] {
    %632 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
    %632.2
  };
  %633() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_7569() -> (Tensor[(60), float32], Tensor[(130), float64]) {
  %634 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %635 = %634.0;
  %636 = cast(%635, dtype="float32") /* ty=Tensor[(60), float32] */;
  %637 = reshape(%636, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %638 = @func_5235(%637) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32], Tensor[(1, 9, 6), float64], Tensor[(54), float64], Tensor[(130), float64]) */;
  %639 = %638.5;
  (%635, %639)
}

def @func_11773(%var_11771: Tensor[(50), int64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), uint16], Tensor[(50), int64]) {
  @func_11770(%var_11771) /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), uint16], Tensor[(50), int64]) */
}

def @func_5481(%var_5461: Tensor[(5, 5, 2), int64]) -> (Tensor[(9, 14, 4), float32], Tensor[(5, 5, 2), float32], Tensor[(5, 5, 2), int32]) {
  %640 = @func_4501() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) */;
  %641 = @func_5368() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(96), uint64], Tensor[(5, 5, 2), int64], Tensor[(30), int64], Tensor[(36, 10), int64]) */;
  %642 = %641.3;
  %643 = cast(%var_5461, dtype="float32") /* ty=Tensor[(5, 5, 2), float32] */;
  %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%642, dtype="float32") /* ty=Tensor[(5, 5, 2), float32] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %647 = cast(%642, dtype="int32") /* ty=Tensor[(5, 5, 2), int32] */;
  %648 = shape_of(%var_5461, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%var_5461, dtype="int32") /* ty=Tensor[(5, 5, 2), int32] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %651 = %640.0;
  %652 = divide(%645, %646) /* ty=Tensor[(5, 5, 2), float32] */;
  %653 = multiply(%649, %650) /* ty=Tensor[(5, 5, 2), int32] */;
  (%651, %652, %653)
}

def @func_10626(%var_10624: Tensor[(5, 1, 15), uint8], %var_10625: Tensor[(5, 9, 15), uint8]) -> Tensor[(5, 9, 15), uint8] {
  @func_10622(%var_10624, %var_10625) /* ty=Tensor[(5, 9, 15), uint8] */
}

def @func_110(%var_109: Tensor[(13, 2, 5), float64]) -> Tensor[(13, 2, 5), float64] {
  %655 = fn (%var_102: Tensor[(13, 2, 5), float64]) -> Tensor[(13, 2, 5), float64] {
    %654 = cast(%var_102, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
    asin(%654) /* ty=Tensor[(13, 2, 5), float64] */
  };
  %655(%var_109) /* ty=Tensor[(13, 2, 5), float64] */
}

def @func_2632(%var_2630: Tensor[(630), int16]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) {
  @func_2629(%var_2630) /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */
}

def @func_10858(%var_10832: Tensor[(12, 8, 6), uint16]) -> (Tensor[(12, 8, 6), uint16], Tensor[(12, 8, 6), float64]) {
  %656 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 8, 6), uint16] */, dtype="uint16") /* ty=Tensor[(12, 8, 6), uint16] */;
  %657 = shape_of(%var_10832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%var_10832, dtype="uint16") /* ty=Tensor[(12, 8, 6), uint16] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %660 = cast(%var_10832, dtype="float64") /* ty=Tensor[(12, 8, 6), float64] */;
  %661 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(12, 8, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 8, 6), uint16] */, dtype="float64") /* ty=Tensor[(12, 8, 6), float64] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %664 = multiply(%658, %659) /* ty=Tensor[(12, 8, 6), uint16] */;
  %665 = power(%662, %663) /* ty=Tensor[(12, 8, 6), float64] */;
  (%664, %665)
}

def @func_8055() -> (Tensor[(9, 14, 4), uint16], Tensor[(630), int16]) {
  %670 = fn () -> (Tensor[(9, 14, 4), uint16], Tensor[(630), int16]) {
    %666 = @func_3033() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) */;
    %667 = @func_1845() /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */;
    %668 = %666.0;
    %669 = %667.2;
    (%668, %669)
  };
  %670() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(630), int16]) */
}

def @func_2542() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
  %671 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %672 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %673 = %671.0;
  %674 = %672.0;
  (%673, %674)
}

def @func_2794(%var_2791: Tensor[(1, 9, 6), float64], %var_2792: Tensor[(130), float64], %var_2793: Tensor[(30, 2), float32]) -> (Tensor[(1, 9, 6), float64], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(30, 2), float64]) {
  %687 = fn (%var_2769: Tensor[(1, 9, 6), float64], %var_2776: Tensor[(130), float64], %var_2777: Tensor[(30, 2), float32]) -> (Tensor[(1, 9, 6), float64], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(30, 2), float64]) {
    %675 = cast(%var_2769, dtype="float64") /* ty=Tensor[(1, 9, 6), float64] */;
    %676 = cast(%var_2776, dtype="float64") /* ty=Tensor[(130), float64] */;
    %677 = cast(%var_2777, dtype="float32") /* ty=Tensor[(30, 2), float32] */;
    %678 = cast(%var_2776, dtype="bool") /* ty=Tensor[(130), bool] */;
    %679 = reshape(%676, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
    %680 = reshape(%677, newshape=[1, 60]) /* ty=Tensor[(1, 60), float32] */;
    %681 = reshape(%678, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), bool] */;
    %682 = @func_2388(%679, %680, %681) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(?, 60), uint32], Tensor[(13, 2, 5), float64]) */;
    %683 = cast(%var_2777, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
    %684 = log10(%675) /* ty=Tensor[(1, 9, 6), float64] */;
    %685 = %682.0;
    %686 = rsqrt(%683) /* ty=Tensor[(30, 2), float64] */;
    (%684, %685, %var_2776, %686)
  };
  %687(%var_2791, %var_2792, %var_2793) /* ty=(Tensor[(1, 9, 6), float64], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(30, 2), float64]) */
}

def @func_6046() -> (Tensor[(9, 14, 4), int8],) {
  %688 = @func_5526() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %689 = %688.0;
  (%689,)
}

def @func_12148(%var_12104: Tensor[(588), float32]) -> (Tensor[(60), float32], Tensor[(6, 14, 7), bool], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(858), float64], Tensor[(588), float64]) {
  %690 = @func_5712() /* ty=(Tensor[(60), float32],) */;
  %691 = cast(%var_12104, dtype="float32") /* ty=Tensor[(588), float32] */;
  %692 = reshape(%691, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), float32] */;
  %693 = %690.0;
  %694 = cast(%693, dtype="float32") /* ty=Tensor[(60), float32] */;
  %695 = reshape(%694, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %696 = @func_233(%695) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
  %697 = @func_7521() /* ty=(Tensor[(60), float32],) */;
  %698 = cast(meta[relay.Constant][28] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %699 = reshape(%698, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %700 = @func_9750(%699) /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(858), float64], Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */;
  %701 = cast(%var_12104, dtype="float64") /* ty=Tensor[(588), float64] */;
  %702 = @func_4805(%692) /* ty=Tensor[(6, 14, 7), bool] */;
  %703 = %696.0;
  %704 = %697.0;
  %705 = %700.1;
  %706 = erf(%701) /* ty=Tensor[(588), float64] */;
  (%693, %702, %703, %704, %705, meta[relay.Constant][28] /* ty=Tensor[(858), float64] */, %706)
}

def @func_7399() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %707 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %708 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %709 = %707.0;
  %710 = %708.1;
  (%709, %710)
}

def @func_183(%var_129: Tensor[(1, 2, 15), int64], %var_130: Tensor[(12, 2, 15), int64], %var_157: Tensor[(12, 2, 15), float64]) -> (Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) {
  %711 = cast(%var_129, dtype="bool") /* ty=Tensor[(1, 2, 15), bool] */;
  %712 = cast(%var_130, dtype="bool") /* ty=Tensor[(12, 2, 15), bool] */;
  %713 = cast(meta[relay.Constant][29] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %714 = reshape(%713, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %715 = cast(%var_130, dtype="float64") /* ty=Tensor[(12, 2, 15), float64] */;
  %716 = acos(%715) /* ty=Tensor[(12, 2, 15), float64] */;
  %717 = cast(%var_157, dtype="float32") /* ty=Tensor[(12, 2, 15), float32] */;
  %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %719 = cast(%716, dtype="float32") /* ty=Tensor[(12, 2, 15), float32] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %721 = cast(meta[relay.Constant][29] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %722 = reshape(%721, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %723 = @func_108(%722) /* ty=Tensor[(13, 2, 5), float64] */;
  %724 = cast(%723, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
  %725 = reshape(%724, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %726 = cast(meta[relay.Constant][29] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %727 = reshape(%726, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %728 = greater_equal(%711, %712) /* ty=Tensor[(12, 2, 15), bool] */;
  %729 = @func_108(%714) /* ty=Tensor[(13, 2, 5), float64] */;
  %730 = floor_divide(%719, %720) /* ty=Tensor[(12, 2, 15), float32] */;
  %731 = @func_108(%725) /* ty=Tensor[(13, 2, 5), float64] */;
  %732 = @func_108(%727) /* ty=Tensor[(13, 2, 5), float64] */;
  (%728, %729, meta[relay.Constant][29] /* ty=Tensor[(130), float64] */, %730, %723, %731, %732)
}

def @func_10498() -> Tensor[(5, 12, 12), float32] {
  %733 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(5, 12, 12), float32] */;
  sqrt(%733) /* ty=Tensor[(5, 12, 12), float32] */
}

def @func_4060() -> (Tensor[(60), float32], Tensor[(4, 15, 1), float32]) {
  %740 = fn () -> (Tensor[(60), float32], Tensor[(4, 15, 1), float32]) {
    %734 = @func_3226() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */;
    %735 = %734.1;
    %736 = cast(%735, dtype="float32") /* ty=Tensor[(60), float32] */;
    %737 = reshape(%736, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
    %738 = @func_233(%737) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
    %739 = %738.0;
    (%735, %739)
  };
  %740() /* ty=(Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */
}

def @func_4097() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(630), int16]) {
  @func_4095() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(630), int16]) */
}

def @func_2072(%var_2070: uint64, %var_2071: Tensor[(1, 2), uint64]) -> (Tensor[(1, 2), uint64], Tensor[(630), int16]) {
  %746 = fn (%var_2043: uint64, %var_2044: Tensor[(1, 2), uint64]) -> (Tensor[(1, 2), uint64], Tensor[(630), int16]) {
    %741 = cast(%var_2043, dtype="uint64") /* ty=uint64 */;
    %742 = cast(%var_2044, dtype="uint64") /* ty=Tensor[(1, 2), uint64] */;
    %743 = @func_1845() /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */;
    %744 = right_shift(%741, %742) /* ty=Tensor[(1, 2), uint64] */;
    %745 = %743.2;
    (%744, %745)
  };
  %746(%var_2070, %var_2071) /* ty=(Tensor[(1, 2), uint64], Tensor[(630), int16]) */
}

def @func_8006() -> (Tensor[(9, 14, 4), int8],) {
  %747 = @func_5853() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) */;
  %748 = %747.0;
  (%748,)
}

def @func_2678(%var_2677: Tensor[(7, 15, 6), float64]) -> Tensor[(7, 15, 6), float64] {
  %750 = fn (%var_2671: Tensor[(7, 15, 6), float64]) -> Tensor[(7, 15, 6), float64] {
    %749 = cast(%var_2671, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
    acosh(%749) /* ty=Tensor[(7, 15, 6), float64] */
  };
  %750(%var_2677) /* ty=Tensor[(7, 15, 6), float64] */
}

def @func_11739() -> (Tensor[(9, 14, 4), int8],) {
  @func_11737() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_8701() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %754 = fn () -> (Tensor[(60), float32], Tensor[(60), float32]) {
    %751 = @func_1645() /* ty=(Tensor[(60), float32],) */;
    %752 = %751.0;
    %753 = @func_7842() /* ty=Tensor[(60), float32] */;
    (%752, %753)
  };
  %754() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */
}

def @func_10993() -> (Tensor[(9, 14, 4), int8],) {
  %756 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %755 = @func_7734() /* ty=Tensor[(9, 14, 4), int8] */;
    (%755,)
  };
  %756() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_7842() -> Tensor[(60), float32] {
  @func_1783() /* ty=Tensor[(60), float32] */
}

def @func_8870() -> Tensor[(9, 14, 4), float64] {
  %757 = fn () -> Tensor[(9, 14, 4), float64] {
    @func_3374() /* ty=Tensor[(9, 14, 4), float64] */
  };
  %757() /* ty=Tensor[(9, 14, 4), float64] */
}

def @func_8232() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(5, 10), int64], float32) {
  %768 = fn () -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(5, 10), int64], float32) {
    %758 = @func_7334() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %759 = @func_3636() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %760 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 10), int64] */, dtype="int64") /* ty=Tensor[(5, 10), int64] */;
    %761 = cast(2.13066f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %762 = reshape(%760, newshape=[50]) /* ty=Tensor[(50), int64] */;
    %763 = reshape(%761, newshape=[]) /* ty=float32 */;
    %764 = @func_6564(%762, %763) /* ty=(Tensor[(60), float32], Tensor[(50), int64], Tensor[(130), float64], Tensor[(50), int64], float32) */;
    %765 = %758.0;
    %766 = %759.0;
    %767 = %764.2;
    (%765, %766, %767, meta[relay.Constant][31] /* ty=Tensor[(5, 10), int64] */, 2.13066f /* ty=float32 */)
  };
  %768() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(5, 10), int64], float32) */
}

def @func_7654(%var_7582: Tensor[(15, 7, 9), int64], %var_7642: Tensor[(10, 63), int16]) -> (Tensor[(15, 7, 9), int64], Tensor[(15, 7, 9), int64], Tensor[(60), float32], Tensor[(10, 63), int16], Tensor[(9, 14, 4), int8]) {
  %769 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %770 = cast(%var_7582, dtype="int64") /* ty=Tensor[(15, 7, 9), int64] */;
  %771 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %772 = cast(%var_7582, dtype="int64") /* ty=Tensor[(15, 7, 9), int64] */;
  %773 = cast(%var_7642, dtype="int16") /* ty=Tensor[(10, 63), int16] */;
  %774 = cast(%var_7642, dtype="int16") /* ty=Tensor[(10, 63), int16] */;
  %775 = reshape(%773, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %776 = reshape(%774, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
  %777 = @func_812(%775, %776) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
  %778 = subtract(%769, %770) /* ty=Tensor[(15, 7, 9), int64] */;
  %779 = maximum(%771, %772) /* ty=Tensor[(15, 7, 9), int64] */;
  %780 = %777.2;
  %781 = @func_2429() /* ty=Tensor[(9, 14, 4), int8] */;
  (%778, %779, %780, %var_7642, %781)
}

def @func_9043() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) {
  %796 = fn () -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) {
    %782 = @func_5308() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %783 = @func_4945() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
    %784 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %785 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
    %786 = @func_5946() /* ty=Tensor[(60), float32] */;
    %787 = cast(%786, dtype="float32") /* ty=Tensor[(60), float32] */;
    %788 = reshape(%787, newshape=[60]) /* ty=Tensor[(60), float32] */;
    %789 = @func_5735(%788) /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(13, 3, 8), int32], Tensor[(312, 1), int32], Tensor[(6, 14, 7), bool], Tensor[(588), float32], Tensor[(9, 14, 4), int8], Tensor[(54), float64], Tensor[(130), float64], Tensor[(60), float32]) */;
    %790 = %782.0;
    %791 = %783.1;
    %792 = @func_6848() /* ty=Tensor[(9, 14, 4), int8] */;
    %793 = %784.0;
    %794 = %785.0;
    %795 = %789.0;
    (%790, %791, %786, %792, %793, %794, %795)
  };
  %796() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) */
}

def @func_11451(%var_11450: Tensor[(9, 14, 4), int8]) -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %808 = fn (%var_11400: Tensor[(9, 14, 4), int8]) -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
    %797 = @func_5964() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %798 = %797.0;
    %799 = cast(%var_11400, dtype="int8") /* ty=Tensor[(9, 14, 4), int8] */;
    %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
    %801 = cast(%798, dtype="int8") /* ty=Tensor[(9, 14, 4), int8] */;
    %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %803 = @func_5912() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */;
    %804 = @func_2899() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %805 = maximum(%801, %802) /* ty=Tensor[(9, 14, 4), int8] */;
    %806 = %803.0;
    %807 = %804.0;
    (%805, %806, %807)
  };
  %808(%var_11450) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */
}

def @func_2544() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
  @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */
}

def @func_9559(%var_9557: Tensor[(50), int64], %var_9558: Tensor[(224), uint16]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(60), float32], Tensor[(16), uint16], Tensor[(224), uint16]) {
  @func_9555(%var_9557, %var_9558) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(60), float32], Tensor[(16), uint16], Tensor[(224), uint16]) */
}

def @func_4337(%var_4336: Tensor[(16, 8, 2), uint64]) -> (Tensor[(16, 8, 2), bool],) {
  %814 = fn (%var_4330: Tensor[(16, 8, 2), uint64]) -> (Tensor[(16, 8, 2), bool],) {
    %809 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 8, 2), uint64] */, dtype="bool") /* ty=Tensor[(16, 8, 2), bool] */;
    %810 = shape_of(%var_4330, dtype="int32") /* ty=Tensor[(3), int32] */;
    %811 = cast(%var_4330, dtype="bool") /* ty=Tensor[(16, 8, 2), bool] */;
    %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %813 = greater(%811, %812) /* ty=Tensor[(16, 8, 2), bool] */;
    (%813,)
  };
  %814(%var_4336) /* ty=(Tensor[(16, 8, 2), bool],) */
}

def @func_3180(%var_3119: Tensor[(30), int64], %var_3120: Tensor[(2, 180), int64]) -> (Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(2, 180), int64]) {
  %815 = @func_2411() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %816 = cast(%var_3119, dtype="int64") /* ty=Tensor[(30), int64] */;
  %817 = cast(%var_3120, dtype="int64") /* ty=Tensor[(2, 180), int64] */;
  %818 = cast(%var_3120, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %819 = reshape(%816, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
  %820 = reshape(%817, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), int64] */;
  %821 = reshape(%818, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float64] */;
  %822 = @func_183(%819, %820, %821) /* ty=(Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) */;
  %823 = %815.1;
  %824 = %822.5;
  (%823, %824, %var_3119, %var_3120)
}

def @func_1545() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) {
  %825 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %826 = cast(meta[relay.Constant][33] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %827 = reshape(%826, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %828 = @func_1252(%827) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(60), float32]) */;
  %829 = %825.0;
  %830 = %828.2;
  (%829, %830, meta[relay.Constant][33] /* ty=Tensor[(60), float32] */)
}

def @func_188(%var_185: Tensor[(1, 2, 15), int64], %var_186: Tensor[(12, 2, 15), int64], %var_187: Tensor[(12, 2, 15), float64]) -> (Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) {
  @func_183(%var_185, %var_186, %var_187) /* ty=(Tensor[(12, 2, 15), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(12, 2, 15), float32], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 2, 5), float64]) */
}

def @func_3098() -> (Tensor[(60), float32],) {
  %833 = fn () -> (Tensor[(60), float32],) {
    %831 = @func_1683() /* ty=(Tensor[(60), float32],) */;
    %832 = %831.0;
    (%832,)
  };
  %833() /* ty=(Tensor[(60), float32],) */
}

def @func_10780() -> Tensor[(9, 14, 4), int8] {
  %835 = fn () -> Tensor[(9, 14, 4), int8] {
    %834 = @func_8500() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
    %834.1
  };
  %835() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_9229() -> (Tensor[(60), float32],) {
  %836 = @func_8553() /* ty=(Tensor[(60), float32],) */;
  %837 = %836.0;
  (%837,)
}

def @func_8252(%var_8250: Tensor[(9, 7, 3), uint32], %var_8251: Tensor[(9, 7, 3), uint32]) -> (Tensor[(9, 7, 3), uint32],) {
  %843 = fn (%var_8242: Tensor[(9, 7, 3), uint32], %var_8243: Tensor[(9, 7, 3), uint32]) -> (Tensor[(9, 7, 3), uint32],) {
    %838 = cast(%var_8243, dtype="uint32") /* ty=Tensor[(9, 7, 3), uint32] */;
    %839 = shape_of(%var_8242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %840 = cast(%var_8242, dtype="uint32") /* ty=Tensor[(9, 7, 3), uint32] */;
    %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %842 = bitwise_xor(%840, %841) /* ty=Tensor[(9, 7, 3), uint32] */;
    (%842,)
  };
  %843(%var_8250, %var_8251) /* ty=(Tensor[(9, 7, 3), uint32],) */
}

def @func_5565() -> Tensor[(60), float32] {
  %845 = fn () -> Tensor[(60), float32] {
    %844 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
    %844.1
  };
  %845() /* ty=Tensor[(60), float32] */
}

def @func_9600() -> (Tensor[(9, 14, 4), float64],) {
  %846 = @func_5853() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) */;
  %847 = %846.1;
  (%847,)
}

def @func_6278() -> Tensor[(9, 14, 4), float32] {
  %849 = fn () -> Tensor[(9, 14, 4), float32] {
    %848 = @func_4501() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8]) */;
    %848.0
  };
  %849() /* ty=Tensor[(9, 14, 4), float32] */
}

def @func_1330() -> (Tensor[(9, 14, 4), uint16],) {
  @func_1328() /* ty=(Tensor[(9, 14, 4), uint16],) */
}

def @func_6630() -> Tensor[(9, 14, 4), int8] {
  %851 = fn () -> Tensor[(9, 14, 4), int8] {
    %850 = @func_3499() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
    %850.1
  };
  %851() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_2431() -> Tensor[(9, 14, 4), int8] {
  @func_2429() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_5762() -> (Tensor[(60), float32],) {
  %854 = fn () -> (Tensor[(60), float32],) {
    %852 = @func_2411() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
    %853 = %852.1;
    (%853,)
  };
  %854() /* ty=(Tensor[(60), float32],) */
}

def @func_8008() -> (Tensor[(9, 14, 4), int8],) {
  @func_8006() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_9105() -> (Tensor[(9, 14, 4), float32],) {
  %857 = fn () -> (Tensor[(9, 14, 4), float32],) {
    %855 = @func_3569() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32]) */;
    %856 = %855.0;
    (%856,)
  };
  %857() /* ty=(Tensor[(9, 14, 4), float32],) */
}

def @func_1309() -> (Tensor[(9, 14, 4), int8],) {
  %859 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %858 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
    (%858,)
  };
  %859() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_10622(%var_10606: Tensor[(5, 1, 15), uint8], %var_10607: Tensor[(5, 9, 15), uint8]) -> Tensor[(5, 9, 15), uint8] {
  %860 = cast(%var_10606, dtype="uint8") /* ty=Tensor[(5, 1, 15), uint8] */;
  %861 = cast(%var_10607, dtype="uint8") /* ty=Tensor[(5, 9, 15), uint8] */;
  bitwise_or(%860, %861) /* ty=Tensor[(5, 9, 15), uint8] */
}

def @func_10801() -> Tensor[(9, 14, 4), int8] {
  %863 = fn () -> Tensor[(9, 14, 4), int8] {
    %862 = @func_9944() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %862.0
  };
  %863() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_11507() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 7, 3), uint32], Tensor[(189), uint32]) {
  %864 = @func_9042() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) */;
  %865 = cast(meta[relay.Constant][34] /* ty=Tensor[(189), uint32] */, dtype="uint32") /* ty=Tensor[(189), uint32] */;
  %866 = cast(meta[relay.Constant][34] /* ty=Tensor[(189), uint32] */, dtype="uint32") /* ty=Tensor[(189), uint32] */;
  %867 = reshape(%865, newshape=[9, 7, 3]) /* ty=Tensor[(9, 7, 3), uint32] */;
  %868 = reshape(%866, newshape=[9, 7, 3]) /* ty=Tensor[(9, 7, 3), uint32] */;
  %869 = @func_8249(%867, %868) /* ty=(Tensor[(9, 7, 3), uint32],) */;
  %870 = %864.4;
  %871 = @func_8612() /* ty=Tensor[(60), float32] */;
  %872 = %869.0;
  (%870, %871, %872, meta[relay.Constant][34] /* ty=Tensor[(189), uint32] */)
}

def @func_11664() -> Tensor[(60), float32] {
  @func_8612() /* ty=Tensor[(60), float32] */
}

def @func_11770(%var_11764: Tensor[(50), int64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), uint16], Tensor[(50), int64]) {
  %873 = @func_10133() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */;
  %874 = cast(%var_11764, dtype="int64") /* ty=Tensor[(50), int64] */;
  %875 = reshape(%874, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %876 = @func_3735(%875) /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */;
  %877 = %873.0;
  %878 = %876.0;
  (%877, %878, %var_11764)
}

def @func_1590() -> Tensor[(60), float32] {
  %880 = fn () -> Tensor[(60), float32] {
    %879 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
    %879.2
  };
  %880() /* ty=Tensor[(60), float32] */
}

def @func_1547() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) {
  @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */
}

def @func_11304() -> Tensor[(96), uint64] {
  %881 = @func_10744() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32], Tensor[(96), uint64], Tensor[(2, 12, 4), float64]) */;
  %881.2
}

def @func_3375() -> Tensor[(9, 14, 4), float64] {
  %885 = fn () -> Tensor[(9, 14, 4), float64] {
    %882 = @func_2284() /* ty=(Tensor[(9, 14, 4), uint16],) */;
    %883 = %882.0;
    %884 = cast(%883, dtype="float64") /* ty=Tensor[(9, 14, 4), float64] */;
    sqrt(%884) /* ty=Tensor[(9, 14, 4), float64] */
  };
  %885() /* ty=Tensor[(9, 14, 4), float64] */
}

def @func_6832() -> (Tensor[(60), float32],) {
  @func_6830() /* ty=(Tensor[(60), float32],) */
}

def @func_11061(%var_11060: Tensor[(6, 14, 1), float32]) -> (Tensor[(6, 14, 1), float32], Tensor[(60), float32]) {
  %890 = fn (%var_11050: Tensor[(6, 14, 1), float32]) -> (Tensor[(6, 14, 1), float32], Tensor[(60), float32]) {
    %886 = cast(%var_11050, dtype="float32") /* ty=Tensor[(6, 14, 1), float32] */;
    %887 = @func_7521() /* ty=(Tensor[(60), float32],) */;
    %888 = tan(%886) /* ty=Tensor[(6, 14, 1), float32] */;
    %889 = %887.0;
    (%888, %889)
  };
  %890(%var_11060) /* ty=(Tensor[(6, 14, 1), float32], Tensor[(60), float32]) */
}

def @func_2899() -> (Tensor[(9, 14, 4), int8],) {
  %891 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
  (%891,)
}

def @func_1863(%var_1861: Tensor[(5, 5, 2), int64], %var_1862: Tensor[(5, 5, 2), int64]) -> Tensor[(5, 5, 2), int64] {
  %896 = fn (%var_1849: Tensor[(5, 5, 2), int64], %var_1850: Tensor[(5, 5, 2), int64]) -> Tensor[(5, 5, 2), int64] {
    %892 = cast(%var_1850, dtype="int64") /* ty=Tensor[(5, 5, 2), int64] */;
    %893 = shape_of(%var_1849, dtype="int32") /* ty=Tensor[(3), int32] */;
    %894 = cast(%var_1849, dtype="int64") /* ty=Tensor[(5, 5, 2), int64] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    minimum(%894, %895) /* ty=Tensor[(5, 5, 2), int64] */
  };
  %896(%var_1861, %var_1862) /* ty=Tensor[(5, 5, 2), int64] */
}

def @func_6048() -> (Tensor[(9, 14, 4), int8],) {
  @func_6046() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_11622() -> Tensor[(9, 14, 4), int8] {
  @func_10800() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_4685(%var_4682: Tensor[(26, 5), float64], %var_4683: Tensor[(50), int64], %var_4684: float32) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int32], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(50), int64], Tensor[(50), int64], Tensor[(8, 6, 130), bool], Tensor[(1, 48), float32], Tensor[(26, 5), int32]) {
  @func_4680(%var_4682, %var_4683, %var_4684) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int32], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(50), int64], Tensor[(50), int64], Tensor[(8, 6, 130), bool], Tensor[(1, 48), float32], Tensor[(26, 5), int32]) */
}

def @func_10251() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %897 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %898 = @func_8652() /* ty=(Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */;
  %899 = %897.0;
  %900 = %898.0;
  (%899, %900)
}

def @func_10677(%var_10658: Tensor[(360), int64]) -> (Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(504), int8], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), int8]) {
  %901 = @func_4059() /* ty=(Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */;
  %902 = cast(meta[relay.Constant][35] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %903 = cast(meta[relay.Constant][36] /* ty=Tensor[(30), int64] */, dtype="int64") /* ty=Tensor[(30), int64] */;
  %904 = cast(%var_10658, dtype="int64") /* ty=Tensor[(360), int64] */;
  %905 = reshape(%902, newshape=[9, 14, 4]) /* ty=Tensor[(9, 14, 4), int8] */;
  %906 = reshape(%903, newshape=[30]) /* ty=Tensor[(30), int64] */;
  %907 = reshape(%904, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %908 = @func_2021(%905, %906, %907) /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(5, 5, 2), int64], Tensor[(10, 5), int64], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(360), int64], Tensor[(9, 14, 4), float32]) */;
  %909 = @func_5278() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %910 = %901.1;
  %911 = %908.0;
  %912 = %909.0;
  (%910, %911, meta[relay.Constant][35] /* ty=Tensor[(504), int8] */, meta[relay.Constant][36] /* ty=Tensor[(30), int64] */, %var_10658, %912)
}

def @func_11292(%var_11274: Tensor[(8, 28), uint16]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(50), int64], Tensor[(8, 28), uint16]) {
  %913 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %914 = cast(meta[relay.Constant][37] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %915 = cast(%var_11274, dtype="uint16") /* ty=Tensor[(8, 28), uint16] */;
  %916 = reshape(%914, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %917 = reshape(%915, newshape=[224]) /* ty=Tensor[(224), uint16] */;
  %918 = @func_9555(%916, %917) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(60), float32], Tensor[(16), uint16], Tensor[(224), uint16]) */;
  %919 = %913.0;
  %920 = @func_8131() /* ty=Tensor[(9, 14, 4), int8] */;
  %921 = %918.1;
  (%919, %920, %921, meta[relay.Constant][37] /* ty=Tensor[(50), int64] */, %var_11274)
}

def @func_2042() -> (Tensor[(9, 14, 4), int8],) {
  %924 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %922 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %923 = %922.0;
    (%923,)
  };
  %924() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_10304(%var_10298: Tensor[(210, 3), float64]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(7, 15, 6), float64], Tensor[(210, 3), float64]) {
  %925 = @func_9866() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %926 = cast(%var_10298, dtype="float64") /* ty=Tensor[(210, 3), float64] */;
  %927 = reshape(%926, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float64] */;
  %928 = %925.0;
  %929 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %930 = @func_2676(%927) /* ty=Tensor[(7, 15, 6), float64] */;
  (%928, %929, %930, %var_10298)
}

def @func_11716() -> (Tensor[(9, 14, 4), int8],) {
  @func_11714() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_2731() -> (Tensor[(9, 14, 4), float64], Tensor[(60), float32]) {
  %939 = fn () -> (Tensor[(9, 14, 4), float64], Tensor[(60), float32]) {
    %931 = @func_1398() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %932 = %931.0;
    %933 = cast(%932, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
    %934 = sigmoid(%933) /* ty=Tensor[(9, 14, 4), float32] */;
    %935 = cast(%934, dtype="float64") /* ty=Tensor[(9, 14, 4), float64] */;
    %936 = @func_1683() /* ty=(Tensor[(60), float32],) */;
    %937 = log10(%935) /* ty=Tensor[(9, 14, 4), float64] */;
    %938 = %936.0;
    (%937, %938)
  };
  %939() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */
}

def @func_4001(%var_4000: Tensor[(50), int64]) -> (Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(50), int64], Tensor[(9, 14, 4), int8]) {
  %947 = fn (%var_3994: Tensor[(50), int64]) -> (Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(50), int64], Tensor[(9, 14, 4), int8]) {
    %940 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
    %941 = cast(%var_3994, dtype="int64") /* ty=Tensor[(50), int64] */;
    %942 = reshape(%941, newshape=[50]) /* ty=Tensor[(50), int64] */;
    %943 = @func_3735(%942) /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(5, 5, 2), int64], Tensor[(50), int64]) */;
    %944 = %940.2;
    %945 = %943.2;
    %946 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
    (%944, %945, %var_3994, %946)
  };
  %947(%var_4000) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(50), int64], Tensor[(9, 14, 4), int8]) */
}

def @func_2131(%var_2130: Tensor[(1, 130), float64]) -> (Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(1, 130), float64]) {
  %952 = fn (%var_2127: Tensor[(1, 130), float64]) -> (Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(1, 130), float64]) {
    %948 = cast(%var_2127, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
    %949 = reshape(%948, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
    %950 = @func_1589() /* ty=Tensor[(60), float32] */;
    %951 = @func_108(%949) /* ty=Tensor[(13, 2, 5), float64] */;
    (%950, %951, %var_2127)
  };
  %952(%var_2130) /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(1, 130), float64]) */
}

def @func_8500() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
  %953 = @func_5964() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %954 = @func_5308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %955 = %953.0;
  %956 = %954.0;
  (%955, %956)
}

def @func_2413() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  @func_2411() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */
}

def @func_7844() -> Tensor[(60), float32] {
  @func_7842() /* ty=Tensor[(60), float32] */
}

def @func_8613() -> Tensor[(60), float32] {
  %958 = fn () -> Tensor[(60), float32] {
    %957 = @func_3870() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) */;
    %957.3
  };
  %958() /* ty=Tensor[(60), float32] */
}

def @func_8404() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %963 = fn () -> (Tensor[(60), float32], Tensor[(60), float32]) {
    %959 = @func_3870() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) */;
    %960 = @func_4945() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */;
    %961 = %959.1;
    %962 = %960.0;
    (%961, %962)
  };
  %963() /* ty=(Tensor[(60), float32], Tensor[(60), float32]) */
}

def @func_3535(%var_3523: Tensor[(9, 14, 4), float64]) -> (Tensor[(9, 14, 4), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) {
  %964 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
  %965 = %964.0;
  %966 = cast(%var_3523, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %967 = shape_of(%965, dtype="int32") /* ty=Tensor[(3), int32] */;
  %968 = cast(%965, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %970 = @func_2966() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %971 = cast(%var_3523, dtype="float64") /* ty=Tensor[(9, 14, 4), float64] */;
  %972 = floor_divide(%968, %969) /* ty=Tensor[(9, 14, 4), float32] */;
  %973 = %970.0;
  %974 = sin(%971) /* ty=Tensor[(9, 14, 4), float64] */;
  (%972, %973, %974)
}

def @func_4465(%var_4462: Tensor[(16, 15, 13), float32], %var_4463: Tensor[(16, 15, 13), float32], %var_4464: Tensor[(130), float64]) -> (Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(16, 15, 13), float64], Tensor[(16, 15, 13), uint32], Tensor[(60), float32]) {
  %1008 = fn (%var_4362: Tensor[(16, 15, 13), float32], %var_4363: Tensor[(16, 15, 13), float32], %var_4398: Tensor[(130), float64]) -> (Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(16, 15, 13), float64], Tensor[(16, 15, 13), uint32], Tensor[(60), float32]) {
    %975 = cast(%var_4398, dtype="float64") /* ty=Tensor[(130), float64] */;
    %976 = reshape(%975, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
    %977 = @func_1645() /* ty=(Tensor[(60), float32],) */;
    %978 = cast(%var_4363, dtype="float32") /* ty=Tensor[(16, 15, 13), float32] */;
    %979 = shape_of(%var_4362, dtype="int32") /* ty=Tensor[(3), int32] */;
    %980 = cast(%var_4362, dtype="float32") /* ty=Tensor[(16, 15, 13), float32] */;
    %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %982 = divide(%980, %981) /* ty=Tensor[(16, 15, 13), float32] */;
    %983 = cast(%982, dtype="float64") /* ty=Tensor[(16, 15, 13), float64] */;
    %984 = cast(%var_4363, dtype="int32") /* ty=Tensor[(16, 15, 13), int32] */;
    %985 = shape_of(%982, dtype="int32") /* ty=Tensor[(3), int32] */;
    %986 = cast(%982, dtype="int32") /* ty=Tensor[(16, 15, 13), int32] */;
    %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %988 = bitwise_and(%986, %987) /* ty=Tensor[(16, 15, 13), int32] */;
    %989 = cast(%988, dtype="float64") /* ty=Tensor[(16, 15, 13), float64] */;
    %990 = log2(%989) /* ty=Tensor[(16, 15, 13), float64] */;
    %991 = cast(%982, dtype="bool") /* ty=Tensor[(16, 15, 13), bool] */;
    %992 = shape_of(%990, dtype="int32") /* ty=Tensor[(3), int32] */;
    %993 = cast(%990, dtype="bool") /* ty=Tensor[(16, 15, 13), bool] */;
    %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %995 = less_equal(%993, %994) /* ty=Tensor[(16, 15, 13), bool] */;
    %996 = cast(%995, dtype="float64") /* ty=Tensor[(16, 15, 13), float64] */;
    %997 = asin(%996) /* ty=Tensor[(16, 15, 13), float64] */;
    %998 = cast(%995, dtype="uint32") /* ty=Tensor[(16, 15, 13), uint32] */;
    %999 = shape_of(%997, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1000 = cast(%997, dtype="uint32") /* ty=Tensor[(16, 15, 13), uint32] */;
    %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1002 = @func_108(%976) /* ty=Tensor[(13, 2, 5), float64] */;
    %1003 = @func_1589() /* ty=Tensor[(60), float32] */;
    %1004 = %977.0;
    %1005 = asinh(%983) /* ty=Tensor[(16, 15, 13), float64] */;
    %1006 = bitwise_or(%1000, %1001) /* ty=Tensor[(16, 15, 13), uint32] */;
    %1007 = @func_2668() /* ty=Tensor[(60), float32] */;
    (%1002, %var_4398, %1003, %1004, %1005, %1006, %1007)
  };
  %1008(%var_4462, %var_4463, %var_4464) /* ty=(Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(60), float32], Tensor[(60), float32], Tensor[(16, 15, 13), float64], Tensor[(16, 15, 13), uint32], Tensor[(60), float32]) */
}

def @func_235(%var_234: Tensor[(4, 15, 1), float32]) -> (Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) {
  %1013 = fn (%var_198: Tensor[(4, 15, 1), float32]) -> (Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) {
    %1009 = cast(%var_198, dtype="float32") /* ty=Tensor[(4, 15, 1), float32] */;
    %1010 = cast(%var_198, dtype="float64") /* ty=Tensor[(4, 15, 1), float64] */;
    %1011 = rsqrt(%1009) /* ty=Tensor[(4, 15, 1), float32] */;
    %1012 = atanh(%1010) /* ty=Tensor[(4, 15, 1), float64] */;
    (%1011, %1012)
  };
  %1013(%var_234) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */
}

def @func_9795(%var_9763: Tensor[(2, 4, 16), int64], %var_9764: Tensor[(2, 4, 16), int64]) -> (Tensor[(2, 4, 16), int64], Tensor[(60), float32]) {
  %1014 = cast(%var_9764, dtype="int64") /* ty=Tensor[(2, 4, 16), int64] */;
  %1015 = shape_of(%var_9763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1016 = cast(%var_9763, dtype="int64") /* ty=Tensor[(2, 4, 16), int64] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1018 = logical_xor(%1016, %1017) /* ty=Tensor[(2, 4, 16), int64] */;
  %1019 = @func_6376() /* ty=Tensor[(60), float32] */;
  (%1018, %1019)
}

def @func_7343() -> (Tensor[(9, 14, 4), int8],) {
  @func_7341() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_7307() -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %1020 = @func_3870() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) */;
  %1021 = @func_2274() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8]) */;
  %1022 = %1020.2;
  %1023 = %1021.0;
  (%1022, %1023)
}

def @func_713(%var_708: Tensor[(13, 3, 8), int32], %var_709: Tensor[(13, 3, 8), int32]) -> Tensor[(13, 3, 8), int32] {
  %1024 = cast(%var_709, dtype="int32") /* ty=Tensor[(13, 3, 8), int32] */;
  %1025 = shape_of(%var_708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1026 = cast(%var_708, dtype="int32") /* ty=Tensor[(13, 3, 8), int32] */;
  %1027 = dyn.reshape(%1024, %1025, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  maximum(%1026, %1027) /* ty=Tensor[(13, 3, 8), int32] */
}

def @func_1846() -> (Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) {
  %1035 = fn () -> (Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) {
    %1028 = cast(meta[relay.Constant][38] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
    %1029 = cast(meta[relay.Constant][38] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
    %1030 = reshape(%1028, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
    %1031 = reshape(%1029, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
    %1032 = @func_812(%1030, %1031) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
    %1033 = @func_1729() /* ty=Tensor[(60), float32] */;
    %1034 = %1032.3;
    (%1033, %1034, meta[relay.Constant][38] /* ty=Tensor[(630), int16] */)
  };
  %1035() /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(630), int16]) */
}

def @func_9555(%var_9503: Tensor[(50), int64], %var_9548: Tensor[(224), uint16]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(60), float32], Tensor[(16), uint16], Tensor[(224), uint16]) {
  %1036 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %1037 = @func_8546() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) */;
  %1038 = cast(%var_9503, dtype="int64") /* ty=Tensor[(50), int64] */;
  %1039 = reshape(%1038, newshape=[50]) /* ty=Tensor[(50), int64] */;
  %1040 = @func_3999(%1039) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(50), int64], Tensor[(50), int64], Tensor[(9, 14, 4), int8]) */;
  %1041 = cast(meta[relay.Constant][39] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %1042 = cast(%var_9548, dtype="uint16") /* ty=Tensor[(224), uint16] */;
  %1043 = reshape(%1041, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), uint16] */;
  %1044 = reshape(%1042, newshape=[14, 8, 2]) /* ty=Tensor[(14, 8, 2), uint16] */;
  %1045 = @func_6650(%1043, %1044) /* ty=(Tensor[(14, 8, 2), uint8], Tensor[(60), float32]) */;
  %1046 = %1036.0;
  %1047 = %1037.1;
  %1048 = %1040.3;
  %1049 = %1045.1;
  (%1046, %1047, %1048, %var_9503, %1049, meta[relay.Constant][39] /* ty=Tensor[(16), uint16] */, %var_9548)
}

def @func_2246() -> Tensor[(60), float32] {
  @func_2244() /* ty=Tensor[(60), float32] */
}

def @func_6650(%var_6638: Tensor[(1, 8, 2), uint16], %var_6639: Tensor[(14, 8, 2), uint16]) -> (Tensor[(14, 8, 2), uint8], Tensor[(60), float32]) {
  %1050 = cast(%var_6638, dtype="uint16") /* ty=Tensor[(1, 8, 2), uint16] */;
  %1051 = cast(%var_6639, dtype="uint16") /* ty=Tensor[(14, 8, 2), uint16] */;
  %1052 = right_shift(%1050, %1051) /* ty=Tensor[(14, 8, 2), uint16] */;
  %1053 = cast(%1052, dtype="uint8") /* ty=Tensor[(14, 8, 2), uint8] */;
  %1054 = shape_of(%var_6639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1055 = cast(%var_6639, dtype="uint8") /* ty=Tensor[(14, 8, 2), uint8] */;
  %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1057 = multiply(%1055, %1056) /* ty=Tensor[(14, 8, 2), uint8] */;
  %1058 = @func_5946() /* ty=Tensor[(60), float32] */;
  (%1057, %1058)
}

def @func_7521() -> (Tensor[(60), float32],) {
  %1059 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %1060 = %1059.0;
  (%1060,)
}

def @func_5855() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) {
  @func_5853() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), float64]) */
}

def @func_11087() -> (Tensor[(60), float32],) {
  %1063 = fn () -> (Tensor[(60), float32],) {
    %1061 = @func_1683() /* ty=(Tensor[(60), float32],) */;
    %1062 = %1061.0;
    (%1062,)
  };
  %1063() /* ty=(Tensor[(60), float32],) */
}

def @func_11164() -> Tensor[(60), float32] {
  @func_11162() /* ty=Tensor[(60), float32] */
}

def @func_12223() -> Tensor[(9, 14, 4), int8] {
  %1065 = fn () -> Tensor[(9, 14, 4), int8] {
    %1064 = @func_8500() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
    %1064.0
  };
  %1065() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_12614() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %1066 = @func_3569() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32]) */;
  %1067 = @func_12222() /* ty=Tensor[(9, 14, 4), int8] */;
  %1068 = %1066.1;
  (%1067, %1068)
}

def @func_8920(%var_8919: Tensor[(256), uint64]) -> (Tensor[(60), float32], Tensor[(16, 8, 2), bool], Tensor[(256), uint64], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
  %1077 = fn (%var_8880: Tensor[(256), uint64]) -> (Tensor[(60), float32], Tensor[(16, 8, 2), bool], Tensor[(256), uint64], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) {
    %1069 = cast(%var_8880, dtype="uint64") /* ty=Tensor[(256), uint64] */;
    %1070 = reshape(%1069, newshape=[16, 8, 2]) /* ty=Tensor[(16, 8, 2), uint64] */;
    %1071 = @func_4335(%1070) /* ty=(Tensor[(16, 8, 2), bool],) */;
    %1072 = @func_5278() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %1073 = @func_4546() /* ty=Tensor[(60), float32] */;
    %1074 = %1071.0;
    %1075 = @func_2429() /* ty=Tensor[(9, 14, 4), int8] */;
    %1076 = %1072.0;
    (%1073, %1074, %var_8880, %1075, %1076)
  };
  %1077(%var_8919) /* ty=(Tensor[(60), float32], Tensor[(16, 8, 2), bool], Tensor[(256), uint64], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */
}

def @func_3184(%var_3182: Tensor[(30), int64], %var_3183: Tensor[(2, 180), int64]) -> (Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(2, 180), int64]) {
  @func_3180(%var_3182, %var_3183) /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(30), int64], Tensor[(2, 180), int64]) */
}

def @func_5735(%var_5731: Tensor[(60), float32]) -> (Tensor[(9, 14, 4), uint16], Tensor[(13, 3, 8), int32], Tensor[(312, 1), int32], Tensor[(6, 14, 7), bool], Tensor[(588), float32], Tensor[(9, 14, 4), int8], Tensor[(54), float64], Tensor[(130), float64], Tensor[(60), float32]) {
  %1078 = @func_3777() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %1079 = cast(meta[relay.Constant][40] /* ty=Tensor[(312, 1), int32] */, dtype="int32") /* ty=Tensor[(312, 1), int32] */;
  %1080 = cast(meta[relay.Constant][40] /* ty=Tensor[(312, 1), int32] */, dtype="int32") /* ty=Tensor[(312, 1), int32] */;
  %1081 = reshape(%1079, newshape=[13, 3, 8]) /* ty=Tensor[(13, 3, 8), int32] */;
  %1082 = reshape(%1080, newshape=[13, 3, 8]) /* ty=Tensor[(13, 3, 8), int32] */;
  %1083 = cast(meta[relay.Constant][41] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %1084 = reshape(%1083, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), float32] */;
  %1085 = cast(meta[relay.Constant][42] /* ty=Tensor[(54), float64] */, dtype="float64") /* ty=Tensor[(54), float64] */;
  %1086 = cast(meta[relay.Constant][43] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1087 = cast(%var_5731, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1088 = reshape(%1085, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float64] */;
  %1089 = reshape(%1086, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %1090 = reshape(%1087, newshape=[30, 2]) /* ty=Tensor[(30, 2), float32] */;
  %1091 = @func_2790(%1088, %1089, %1090) /* ty=(Tensor[(1, 9, 6), float64], Tensor[(9, 14, 4), int8], Tensor[(130), float64], Tensor[(30, 2), float64]) */;
  %1092 = %1078.0;
  %1093 = @func_713(%1081, %1082) /* ty=Tensor[(13, 3, 8), int32] */;
  %1094 = @func_4805(%1084) /* ty=Tensor[(6, 14, 7), bool] */;
  %1095 = %1091.1;
  (%1092, %1093, meta[relay.Constant][40] /* ty=Tensor[(312, 1), int32] */, %1094, meta[relay.Constant][41] /* ty=Tensor[(588), float32] */, %1095, meta[relay.Constant][42] /* ty=Tensor[(54), float64] */, meta[relay.Constant][43] /* ty=Tensor[(130), float64] */, %var_5731)
}

def @func_3715() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %1096 = @func_3033() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) */;
  %1097 = %1096.1;
  %1098 = @func_1589() /* ty=Tensor[(60), float32] */;
  (%1097, %1098)
}

def @func_10095() -> Tensor[(9, 14, 4), uint16] {
  %1099 = @func_2284() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %1099.0
}

def @func_815(%var_813: Tensor[(6, 15, 7), int16], %var_814: Tensor[(6, 15, 7), int16]) -> (Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) {
  %1112 = fn (%var_779: Tensor[(6, 15, 7), int16], %var_780: Tensor[(6, 15, 7), int16]) -> (Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) {
    %1100 = cast(%var_780, dtype="bool") /* ty=Tensor[(6, 15, 7), bool] */;
    %1101 = shape_of(%var_779, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1102 = cast(%var_779, dtype="bool") /* ty=Tensor[(6, 15, 7), bool] */;
    %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1104 = cast(meta[relay.Constant][44] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %1105 = reshape(%1104, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
    %1106 = @func_233(%1105) /* ty=(Tensor[(4, 15, 1), float32], Tensor[(4, 15, 1), float64]) */;
    %1107 = cast(meta[relay.Constant][45] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %1108 = reshape(%1107, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
    %1109 = less_equal(%1102, %1103) /* ty=Tensor[(6, 15, 7), bool] */;
    %1110 = %1106.1;
    %1111 = @func_108(%1108) /* ty=Tensor[(13, 2, 5), float64] */;
    (%1109, %1110, meta[relay.Constant][44] /* ty=Tensor[(60), float32] */, %1111, meta[relay.Constant][45] /* ty=Tensor[(130), float64] */)
  };
  %1112(%var_813, %var_814) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */
}

def @func_6338(%var_6336: Tensor[(130), float64], %var_6337: float32) -> (Tensor[(60), float32], Tensor[(26, 5), int32], Tensor[(130), float64], Tensor[(50), int64], float32, Tensor[(9, 14, 4), int8]) {
  %1124 = fn (%var_6307: Tensor[(130), float64], %var_6309: float32) -> (Tensor[(60), float32], Tensor[(26, 5), int32], Tensor[(130), float64], Tensor[(50), int64], float32, Tensor[(9, 14, 4), int8]) {
    %1113 = @func_5912() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) */;
    %1114 = cast(%var_6307, dtype="float64") /* ty=Tensor[(130), float64] */;
    %1115 = cast(meta[relay.Constant][46] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
    %1116 = cast(%var_6309, dtype="float32") /* ty=float32 */;
    %1117 = reshape(%1114, newshape=[26, 5]) /* ty=Tensor[(26, 5), float64] */;
    %1118 = reshape(%1115, newshape=[50]) /* ty=Tensor[(50), int64] */;
    %1119 = reshape(%1116, newshape=[]) /* ty=float32 */;
    %1120 = @func_4680(%1117, %1118, %1119) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int32], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(50), int64], Tensor[(50), int64], Tensor[(8, 6, 130), bool], Tensor[(1, 48), float32], Tensor[(26, 5), int32]) */;
    %1121 = %1113.0;
    %1122 = %1120.8;
    %1123 = @func_2429() /* ty=Tensor[(9, 14, 4), int8] */;
    (%1121, %1122, %var_6307, meta[relay.Constant][46] /* ty=Tensor[(50), int64] */, %var_6309, %1123)
  };
  %1124(%var_6336, %var_6337) /* ty=(Tensor[(60), float32], Tensor[(26, 5), int32], Tensor[(130), float64], Tensor[(50), int64], float32, Tensor[(9, 14, 4), int8]) */
}

def @func_8553() -> (Tensor[(60), float32],) {
  %1125 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %1126 = %1125.0;
  (%1126,)
}

def @func_857(%var_855: Tensor[(11, 6, 13), float64]) -> (Tensor[(11, 6, 13), float64],) {
  @func_854(%var_855) /* ty=(Tensor[(11, 6, 13), float64],) */
}

def @func_2967() -> (Tensor[(9, 14, 4), int8],) {
  %1128 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %1127 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
    (%1127,)
  };
  %1128() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_4946() -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
  %1133 = fn () -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8]) {
    %1129 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
    %1130 = @func_3431() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %1131 = %1129.1;
    %1132 = %1130.0;
    (%1131, %1132)
  };
  %1133() /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8]) */
}

def @func_4865() -> (Tensor[(9, 14, 4), int8],) {
  @func_4863() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_8555() -> (Tensor[(60), float32],) {
  @func_8553() /* ty=(Tensor[(60), float32],) */
}

def @func_12470() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) {
  @func_12468() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(60), float32]) */
}

def @func_7825() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) {
  @func_7823() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) */
}

def @func_9602() -> (Tensor[(9, 14, 4), float64],) {
  @func_9600() /* ty=(Tensor[(9, 14, 4), float64],) */
}

def @func_1181() -> Tensor[(9, 14, 4), int8] {
  @func_1179() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_2411() -> (Tensor[(60), float32], Tensor[(60), float32]) {
  %1134 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %1135 = %1134.1;
  %1136 = @func_1729() /* ty=Tensor[(60), float32] */;
  (%1135, %1136)
}

def @func_3337(%var_3335: Tensor[(858), float64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(5, 5, 2), int64], Tensor[(50), int64], Tensor[(60), float32], Tensor[(9, 14, 4), uint16], Tensor[(11, 6, 13), float64], Tensor[(858), float64], Tensor[(60), float32]) {
  @func_3334(%var_3335) /* ty=(Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(5, 5, 2), int64], Tensor[(50), int64], Tensor[(60), float32], Tensor[(9, 14, 4), uint16], Tensor[(11, 6, 13), float64], Tensor[(858), float64], Tensor[(60), float32]) */
}

def @func_9415() -> (Tensor[(9, 14, 4), int8],) {
  %1137 = @func_6012() /* ty=Tensor[(9, 14, 4), int8] */;
  (%1137,)
}

def @func_6247() -> Tensor[(9, 14, 4), int8] {
  @func_6245() /* ty=Tensor[(9, 14, 4), int8] */
}

def @func_3637() -> (Tensor[(9, 14, 4), int8],) {
  %1140 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %1138 = @func_3226() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32]) */;
    %1139 = %1138.0;
    (%1139,)
  };
  %1140() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_12346() -> (Tensor[(9, 14, 4), int8],) {
  @func_12344() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_3571() -> (Tensor[(9, 14, 4), float32], Tensor[(60), float32]) {
  @func_3569() /* ty=(Tensor[(9, 14, 4), float32], Tensor[(60), float32]) */
}

def @func_8708(%var_8702: Tensor[(10, 3, 7), uint32], %var_8703: Tensor[(10, 3, 7), uint32]) -> (Tensor[(10, 3, 7), uint32],) {
  %1141 = cast(%var_8703, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
  %1142 = shape_of(%var_8702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1143 = cast(%var_8702, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
  %1144 = dyn.reshape(%1141, %1142, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1145 = subtract(%1143, %1144) /* ty=Tensor[(10, 3, 7), uint32] */;
  (%1145,)
}

def @func_11534() -> (Tensor[(3, 11, 8), float64],) {
  %1148 = fn () -> (Tensor[(3, 11, 8), float64],) {
    %1146 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 11, 8), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 8), float64] */;
    %1147 = rsqrt(%1146) /* ty=Tensor[(3, 11, 8), float64] */;
    (%1147,)
  };
  %1148() /* ty=(Tensor[(3, 11, 8), float64],) */
}

def @func_10953() -> Tensor[(60), float32] {
  %1149 = @func_7823() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(9, 14, 4), float64]) */;
  %1149.1
}

def @func_10470(%var_10467: float32, %var_10468: Tensor[(48), float32], %var_10469: Tensor[(1, 4, 6), float32]) -> (Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(48), float32], Tensor[(60), float32], Tensor[(130), float64], Tensor[(1, 4, 6), bool]) {
  %1165 = fn (%var_10423: float32, %var_10424: Tensor[(48), float32], %var_10450: Tensor[(1, 4, 6), float32]) -> (Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(48), float32], Tensor[(60), float32], Tensor[(130), float64], Tensor[(1, 4, 6), bool]) {
    %1150 = @func_5964() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %1151 = cast(%var_10423, dtype="float32") /* ty=float32 */;
    %1152 = cast(%var_10424, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1153 = reshape(%1151, newshape=[]) /* ty=float32 */;
    %1154 = reshape(%1152, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float32] */;
    %1155 = @func_382(%1153, %1154) /* ty=(Tensor[(30), int64], Tensor[(8, 6, 360), bool], Tensor[(8, 6, 130), float32], Tensor[(8, 6, 130), bool]) */;
    %1156 = cast(meta[relay.Constant][48] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %1157 = reshape(%1156, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
    %1158 = @func_2129(%1157) /* ty=(Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(1, 130), float64]) */;
    %1159 = cast(%var_10423, dtype="bool") /* ty=bool */;
    %1160 = cast(%var_10450, dtype="bool") /* ty=Tensor[(1, 4, 6), bool] */;
    %1161 = %1150.0;
    %1162 = %1155.0;
    %1163 = %1158.0;
    %1164 = greater(%1159, %1160) /* ty=Tensor[(1, 4, 6), bool] */;
    (%1161, %1162, %var_10424, %1163, meta[relay.Constant][48] /* ty=Tensor[(130), float64] */, %1164)
  };
  %1165(%var_10467, %var_10468, %var_10469) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(30), int64], Tensor[(48), float32], Tensor[(60), float32], Tensor[(130), float64], Tensor[(1, 4, 6), bool]) */
}

def @func_1328() -> (Tensor[(9, 14, 4), uint16],) {
  %1166 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1167 = %1166.0;
  %1168 = cast(meta[relay.Constant][49] /* ty=Tensor[(9, 14, 4), int8] */, dtype="uint16") /* ty=Tensor[(9, 14, 4), uint16] */;
  %1169 = shape_of(%1167, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1170 = cast(%1167, dtype="uint16") /* ty=Tensor[(9, 14, 4), uint16] */;
  %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1172 = minimum(%1170, %1171) /* ty=Tensor[(9, 14, 4), uint16] */;
  (%1172,)
}

def @func_3334(%var_3321: Tensor[(858), float64]) -> (Tensor[(60), float32], Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(5, 5, 2), int64], Tensor[(50), int64], Tensor[(60), float32], Tensor[(9, 14, 4), uint16], Tensor[(11, 6, 13), float64], Tensor[(858), float64], Tensor[(60), float32]) {
  %1173 = @func_2542() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
  %1174 = cast(meta[relay.Constant][50] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %1175 = cast(meta[relay.Constant][50] /* ty=Tensor[(50), int64] */, dtype="int64") /* ty=Tensor[(50), int64] */;
  %1176 = reshape(%1174, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %1177 = reshape(%1175, newshape=[5, 5, 2]) /* ty=Tensor[(5, 5, 2), int64] */;
  %1178 = @func_1645() /* ty=(Tensor[(60), float32],) */;
  %1179 = @func_1328() /* ty=(Tensor[(9, 14, 4), uint16],) */;
  %1180 = cast(%var_3321, dtype="float64") /* ty=Tensor[(858), float64] */;
  %1181 = reshape(%1180, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float64] */;
  %1182 = @func_854(%1181) /* ty=(Tensor[(11, 6, 13), float64],) */;
  %1183 = @func_3102() /* ty=(Tensor[(60), float32],) */;
  %1184 = @func_2668() /* ty=Tensor[(60), float32] */;
  %1185 = @func_1179() /* ty=Tensor[(9, 14, 4), int8] */;
  %1186 = %1173.0;
  %1187 = @func_1860(%1176, %1177) /* ty=Tensor[(5, 5, 2), int64] */;
  %1188 = %1178.0;
  %1189 = %1179.0;
  %1190 = %1182.0;
  %1191 = %1183.0;
  (%1184, %1185, %1186, %1187, meta[relay.Constant][50] /* ty=Tensor[(50), int64] */, %1188, %1189, %1190, %var_3321, %1191)
}

def @func_3043() -> (Tensor[(9, 14, 4), int8],) {
  %1194 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %1192 = @func_1308() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %1193 = %1192.0;
    (%1193,)
  };
  %1194() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_3035() -> (Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) {
  @func_3033() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(60), float32]) */
}

def @func_11306() -> Tensor[(96), uint64] {
  @func_11304() /* ty=Tensor[(96), uint64] */
}

def @func_3104() -> (Tensor[(60), float32],) {
  @func_3102() /* ty=(Tensor[(60), float32],) */
}

def @func_7523() -> (Tensor[(60), float32],) {
  @func_7521() /* ty=(Tensor[(60), float32],) */
}

def @func_4202(%var_4175: Tensor[(96), uint64]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8], Tensor[(13, 2, 5), float64], Tensor[(26, 5), float64], Tensor[(9, 14, 4), int8], Tensor[(4, 15, ?), int32], Tensor[(2, 12, 4), bool], Tensor[(96), uint64], Tensor[(4, 15, ?), bool]) {
  %1195 = @func_3960() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1196 = cast(meta[relay.Constant][51] /* ty=Tensor[(26, 5), float64] */, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %1197 = reshape(%1196, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %1198 = @func_4059() /* ty=(Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */;
  %1199 = %1198.1;
  %1200 = cast(%1199, dtype="float32") /* ty=Tensor[(4, 15, 1), float32] */;
  %1201 = sqrt(%1200) /* ty=Tensor[(4, 15, 1), float32] */;
  %1202 = @func_3097() /* ty=(Tensor[(60), float32],) */;
  %1203 = %1202.0;
  %1204 = cast(%1203, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1205 = shape_of(%1201, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1206 = cast(%1201, dtype="int32") /* ty=Tensor[(4, 15, 1), int32] */;
  %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1208 = cast(%var_4175, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1209 = cast(%var_4175, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1210 = reshape(%1208, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %1211 = reshape(%1209, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
  %1212 = @func_3792(%1210, %1211) /* ty=(Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) */;
  %1213 = @func_2668() /* ty=Tensor[(60), float32] */;
  %1214 = cast(%1213, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1215 = shape_of(%1199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1216 = cast(%1199, dtype="bool") /* ty=Tensor[(4, 15, 1), bool] */;
  %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1218 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
  %1219 = %1195.0;
  %1220 = @func_108(%1197) /* ty=Tensor[(13, 2, 5), float64] */;
  %1221 = @func_2683() /* ty=Tensor[(9, 14, 4), int8] */;
  %1222 = maximum(%1206, %1207) /* ty=Tensor[(4, 15, ?), int32] */;
  %1223 = %1212.0;
  %1224 = equal(%1216, %1217) /* ty=Tensor[(4, 15, ?), bool] */;
  (%1218, %1219, %1220, meta[relay.Constant][51] /* ty=Tensor[(26, 5), float64] */, %1221, %1222, %1223, %var_4175, %1224)
}

def @func_2477() -> Tensor[(9, 14, 4), float32] {
  %1228 = fn () -> Tensor[(9, 14, 4), float32] {
    %1225 = @func_2041() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %1226 = %1225.0;
    %1227 = cast(%1226, dtype="float32") /* ty=Tensor[(9, 14, 4), float32] */;
    atan(%1227) /* ty=Tensor[(9, 14, 4), float32] */
  };
  %1228() /* ty=Tensor[(9, 14, 4), float32] */
}

def @func_2244() -> Tensor[(60), float32] {
  @func_1589() /* ty=Tensor[(60), float32] */
}

def @func_1007(%var_1005: Tensor[(312), int32]) -> (Tensor[(11, 7, 9), bool], Tensor[(312), int32], Tensor[(13, 3, 8), uint16]) {
  @func_1004(%var_1005) /* ty=(Tensor[(11, 7, 9), bool], Tensor[(312), int32], Tensor[(13, 3, 8), uint16]) */
}

def @func_1783() -> Tensor[(60), float32] {
  %1229 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %1229.1
}

def @func_3960() -> (Tensor[(9, 14, 4), int8],) {
  %1230 = @func_3042() /* ty=(Tensor[(9, 14, 4), int8],) */;
  %1231 = %1230.0;
  (%1231,)
}

def @func_1255(%var_1253: Tensor[(60), float32]) -> (Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(60), float32]) {
  @func_1252(%var_1253) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(60), float32]) */
}

def @func_3795(%var_3793: Tensor[(2, 12, 4), uint64], %var_3794: Tensor[(2, 12, 4), uint64]) -> (Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) {
  %1242 = fn (%var_3784: Tensor[(2, 12, 4), uint64], %var_3785: Tensor[(2, 12, 4), uint64]) -> (Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) {
    %1232 = cast(%var_3785, dtype="bool") /* ty=Tensor[(2, 12, 4), bool] */;
    %1233 = shape_of(%var_3784, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1234 = cast(%var_3784, dtype="bool") /* ty=Tensor[(2, 12, 4), bool] */;
    %1235 = dyn.reshape(%1232, %1233, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1236 = cast(%var_3784, dtype="uint16") /* ty=Tensor[(2, 12, 4), uint16] */;
    %1237 = shape_of(%var_3785, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1238 = cast(%var_3785, dtype="uint16") /* ty=Tensor[(2, 12, 4), uint16] */;
    %1239 = dyn.reshape(%1236, %1237, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1240 = greater(%1234, %1235) /* ty=Tensor[(2, 12, 4), bool] */;
    %1241 = minimum(%1238, %1239) /* ty=Tensor[(2, 12, 4), uint16] */;
    (%1240, %1241)
  };
  %1242(%var_3793, %var_3794) /* ty=(Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) */
}

def @func_10525() -> (Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) {
  %1243 = @func_8546() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) */;
  %1244 = @func_5032() /* ty=Tensor[(60), float32] */;
  %1245 = %1243.1;
  (%1244, %1245)
}

def @func_10861(%var_10859: Tensor[(12, 8, 6), uint16]) -> (Tensor[(12, 8, 6), uint16], Tensor[(12, 8, 6), float64]) {
  @func_10858(%var_10859) /* ty=(Tensor[(12, 8, 6), uint16], Tensor[(12, 8, 6), float64]) */
}

def @func_11526(%var_11524: Tensor[(9, 13, 4), uint8]) -> (Tensor[(9, 13, 4), bool],) {
  @func_11523(%var_11524) /* ty=(Tensor[(9, 13, 4), bool],) */
}

def @func_11374() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32]) {
  %1246 = @func_2942() /* ty=Tensor[(9, 14, 4), int8] */;
  %1247 = @func_7433() /* ty=Tensor[(60), float32] */;
  (%1246, %1247)
}

def @func_9371() -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(4, 15, 1), float32], Tensor[(2, 12, 4), bool], Tensor[(96), uint64], Tensor[(60), float32], Tensor[(2, 12, 4), uint16], Tensor[(60), float32], Tensor[(60), float32], Tensor[(630), int16]) {
  %1275 = fn () -> (Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(4, 15, 1), float32], Tensor[(2, 12, 4), bool], Tensor[(96), uint64], Tensor[(60), float32], Tensor[(2, 12, 4), uint16], Tensor[(60), float32], Tensor[(60), float32], Tensor[(630), int16]) {
    %1248 = @func_1413() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %1249 = @func_7521() /* ty=(Tensor[(60), float32],) */;
    %1250 = @func_4059() /* ty=(Tensor[(60), float32], Tensor[(4, 15, 1), float32]) */;
    %1251 = cast(meta[relay.Constant][52] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %1252 = cast(meta[relay.Constant][52] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %1253 = reshape(%1251, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
    %1254 = reshape(%1252, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
    %1255 = @func_3792(%1253, %1254) /* ty=(Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) */;
    %1256 = @func_2730() /* ty=(Tensor[(9, 14, 4), float64], Tensor[(60), float32]) */;
    %1257 = cast(meta[relay.Constant][52] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %1258 = cast(meta[relay.Constant][52] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %1259 = reshape(%1257, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
    %1260 = reshape(%1258, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), uint64] */;
    %1261 = @func_3792(%1259, %1260) /* ty=(Tensor[(2, 12, 4), bool], Tensor[(2, 12, 4), uint16]) */;
    %1262 = cast(meta[relay.Constant][53] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
    %1263 = cast(meta[relay.Constant][53] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
    %1264 = reshape(%1262, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
    %1265 = reshape(%1263, newshape=[6, 15, 7]) /* ty=Tensor[(6, 15, 7), int16] */;
    %1266 = @func_812(%1264, %1265) /* ty=(Tensor[(6, 15, 7), bool], Tensor[(4, 15, 1), float64], Tensor[(60), float32], Tensor[(13, 2, 5), float64], Tensor[(130), float64]) */;
    %1267 = %1248.0;
    %1268 = %1249.0;
    %1269 = %1250.1;
    %1270 = %1255.0;
    %1271 = %1256.1;
    %1272 = %1261.1;
    %1273 = @func_5564() /* ty=Tensor[(60), float32] */;
    %1274 = %1266.2;
    (%1267, %1268, %1269, %1270, meta[relay.Constant][52] /* ty=Tensor[(96), uint64] */, %1271, %1272, %1273, %1274, meta[relay.Constant][53] /* ty=Tensor[(630), int16] */)
  };
  %1275() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(4, 15, 1), float32], Tensor[(2, 12, 4), bool], Tensor[(96), uint64], Tensor[(60), float32], Tensor[(2, 12, 4), uint16], Tensor[(60), float32], Tensor[(60), float32], Tensor[(630), int16]) */
}

def @func_5912() -> (Tensor[(60), float32], Tensor[(9, 14, 4), uint16]) {
  %1276 = @func_1545() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(60), float32], Tensor[(60), float32]) */;
  %1277 = %1276.1;
  %1278 = @func_4967() /* ty=Tensor[(9, 14, 4), uint16] */;
  (%1277, %1278)
}

def @func_2997(%var_2995: Tensor[(9, 14, 4), int8], %var_2996: Tensor[(630), int16]) -> (Tensor[(9, 14, 4), bool], Tensor[(9, 14, 4), int8], Tensor[(630), int16]) {
  %1290 = fn (%var_2984: Tensor[(9, 14, 4), int8], %var_2991: Tensor[(630), int16]) -> (Tensor[(9, 14, 4), bool], Tensor[(9, 14, 4), int8], Tensor[(630), int16]) {
    %1279 = @func_2966() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %1280 = %1279.0;
    %1281 = cast(%var_2984, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
    %1282 = shape_of(%1280, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1283 = cast(%1280, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
    %1284 = dyn.reshape(%1281, %1282, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1285 = cast(%var_2991, dtype="int16") /* ty=Tensor[(630), int16] */;
    %1286 = reshape(%1285, newshape=[630]) /* ty=Tensor[(630), int16] */;
    %1287 = @func_2708(%1286) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(4, 15, 1), float64], Tensor[(630), int16]) */;
    %1288 = not_equal(%1283, %1284) /* ty=Tensor[(9, 14, 4), bool] */;
    %1289 = %1287.0;
    (%1288, %1289, %var_2991)
  };
  %1290(%var_2995, %var_2996) /* ty=(Tensor[(9, 14, 4), bool], Tensor[(9, 14, 4), int8], Tensor[(630), int16]) */
}

def @func_3433() -> (Tensor[(9, 14, 4), int8],) {
  @func_3431() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_8547() -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) {
  %1295 = fn () -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) {
    %1291 = @func_5308() /* ty=(Tensor[(9, 14, 4), int8],) */;
    %1292 = @func_8054() /* ty=(Tensor[(9, 14, 4), uint16], Tensor[(630), int16]) */;
    %1293 = %1291.0;
    %1294 = %1292.0;
    (%1293, %1294)
  };
  %1295() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16]) */
}

def @func_9945() -> (Tensor[(9, 14, 4), int8],) {
  %1298 = fn () -> (Tensor[(9, 14, 4), int8],) {
    %1296 = @func_8500() /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), int8]) */;
    %1297 = %1296.0;
    (%1297,)
  };
  %1298() /* ty=(Tensor[(9, 14, 4), int8],) */
}

def @func_9641() -> Tensor[(9, 14, 4), float32] {
  @func_9639() /* ty=Tensor[(9, 14, 4), float32] */
}

def @func_2393(%var_2390: Tensor[(13, 2, 5), float64], %var_2391: Tensor[(1, 60), float32], %var_2392: Tensor[(13, 2, 5), bool]) -> (Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(?, 60), uint32], Tensor[(13, 2, 5), float64]) {
  @func_2388(%var_2390, %var_2391, %var_2392) /* ty=(Tensor[(9, 14, 4), int8], Tensor[(9, 14, 4), uint16], Tensor[(?, 60), uint32], Tensor[(13, 2, 5), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen522/build/output.py:4401: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen522/build/output.py", line 4406, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(702) tvmgen_default_fused_reshape_floor_mod_kernel0(double* __restrict__ T_floor_mod, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_floor_mod[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] - (floor((placeholder[(((int)threadIdx.x))] / placeholder1[(((int)threadIdx.x))])) * placeholder1[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_7451(%var_7444: Tensor[(10, 13, 7), float64]) -> (Tensor[(10, 13, 7), float64],) {
  %0 = cast(9.84852f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1 = cast(%var_7444, dtype="float64") /* ty=Tensor[(10, 13, 7), float64] */;
  %2 = minimum(%0, %1) /* ty=Tensor[(10, 13, 7), float64] */;
  (%2,)
}

def @func_5482() -> (Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %3 = @func_5032() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float32]) */;
  %4 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %5 = @func_5117() /* ty=Tensor[(6, 15, 11), float64] */;
  %6 = %3.1;
  %7 = %4.0;
  %8 = @func_2699() /* ty=Tensor[(6, 15, 11), float64] */;
  (%5, %6, %7, %8)
}

def @func_3308() -> (Tensor[(6, 15, 11), float64],) {
  %9 = @func_2111() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %10 = %9.0;
  (%10,)
}

def @func_6910() -> (Tensor[(1728), float64],) {
  %11 = @func_1493() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */;
  %12 = %11.2;
  %13 = cast(%12, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %14 = atan(%13) /* ty=Tensor[(1728), float64] */;
  (%14,)
}

def @func_7643() -> Tensor[(6, 15, 11), float64] {
  %15 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %15.0
}

def @func_7405(%var_7393: Tensor[(11, 15, 4), uint16]) -> (Tensor[(11, 15, 4), bool],) {
  %16 = cast(%var_7393, dtype="uint16") /* ty=Tensor[(11, 15, 4), uint16] */;
  %17 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(11, 15, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 15, 4), uint16] */, dtype="uint16") /* ty=Tensor[(11, 15, 4), uint16] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %20 = multiply(%18, %19) /* ty=Tensor[(11, 15, 4), uint16] */;
  %21 = cast(%var_7393, dtype="bool") /* ty=Tensor[(11, 15, 4), bool] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%20, dtype="bool") /* ty=Tensor[(11, 15, 4), bool] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %25 = not_equal(%23, %24) /* ty=Tensor[(11, 15, 4), bool] */;
  (%25,)
}

def @func_4308() -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(1, 52), float32], Tensor[(6, 15, 11), uint32], Tensor[(990), float64], Tensor[(96), float32], Tensor[(6, 15, 11), float32]) {
  %26 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %27 = @func_1108() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %28 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 52), float32] */, dtype="float32") /* ty=Tensor[(1, 52), float32] */;
  %29 = reshape(%28, newshape=[52]) /* ty=Tensor[(52), float32] */;
  %30 = @func_2940(%29) /* ty=(Tensor[(6, 15, 11), float64], int16, int16, Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), uint32]) */;
  %31 = @func_4065() /* ty=Tensor[(6, 15, 11), float32] */;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %33 = reshape(%32, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %34 = @func_162(%33) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %35 = cast(meta[relay.Constant][2] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %37 = %34.0;
  %38 = cast(%37, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %39 = %30.2;
  %40 = cast(%39, dtype="int16") /* ty=int16 */;
  %41 = reshape(%35, newshape=[3, 8, 4]) /* ty=Tensor[(3, 8, 4), float32] */;
  %42 = reshape(%36, newshape=[3, 8, 4]) /* ty=Tensor[(3, 8, 4), float32] */;
  %43 = reshape(%38, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %44 = reshape(%40, newshape=[]) /* ty=int16 */;
  %45 = @func_1686(%41, %42, %43, %44) /* ty=(Tensor[(3, 8, 4), float32], Tensor[(3, 8, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(990), float64], Tensor[(6, 15, 11), float64], int16, int16) */;
  %46 = %26.4;
  %47 = %27.1;
  %48 = %45.3;
  %49 = @func_1879() /* ty=Tensor[(6, 15, 11), float32] */;
  (%46, %31, %47, %39, meta[relay.Constant][1] /* ty=Tensor[(1, 52), float32] */, %37, %48, meta[relay.Constant][2] /* ty=Tensor[(96), float32] */, %49)
}

def @func_2747(%var_2731: uint64) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], uint64) {
  %50 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %51 = cast(%var_2731, dtype="uint64") /* ty=uint64 */;
  %52 = reshape(%51, newshape=[]) /* ty=uint64 */;
  %53 = @func_2195(%52) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(12, 10, 14), float64], uint64, Tensor[(1680), uint64], Tensor[(6, 15, 11), float64]) */;
  %54 = %50.0;
  %55 = %53.1;
  (%54, %55, %var_2731)
}

def @func_8188() -> (Tensor[(1728), float32], Tensor[(98), float32], Tensor[(98), float64]) {
  %56 = @func_1493() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */;
  %57 = @func_8031() /* ty=(Tensor[(98), int32], Tensor[(1728), float32]) */;
  %58 = %57.0;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(98), float64] */;
  %60 = exp(%59) /* ty=Tensor[(98), float64] */;
  %61 = cast(%60, dtype="float32") /* ty=Tensor[(98), float32] */;
  %62 = cast(%60, dtype="float64") /* ty=Tensor[(98), float64] */;
  %63 = %56.2;
  %64 = acos(%61) /* ty=Tensor[(98), float32] */;
  %65 = sqrt(%62) /* ty=Tensor[(98), float64] */;
  (%63, %64, %65)
}

def @func_7219() -> Tensor[(6, 15, 11), float64] {
  @func_3856() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_3283(%var_3274: Tensor[(14, 6), float64]) -> Tensor[(14, 6), float64] {
  %66 = cast(%var_3274, dtype="float64") /* ty=Tensor[(14, 6), float64] */;
  cos(%66) /* ty=Tensor[(14, 6), float64] */
}

def @func_4965() -> (Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) {
  %67 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %68 = %67.0;
  %69 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %70 = %69.0;
  %71 = cast(%70, dtype="uint16") /* ty=Tensor[(6, 15, 11), uint16] */;
  %72 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%68, dtype="uint16") /* ty=Tensor[(6, 15, 11), uint16] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %75 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 16), float32] */;
  %76 = reshape(%75, newshape=[1, 8, 4]) /* ty=Tensor[(1, 8, 4), float32] */;
  %77 = @func_3903(%76) /* ty=(Tensor[(1, 8, 4), float32],) */;
  %78 = multiply(%73, %74) /* ty=Tensor[(6, 15, 11), uint16] */;
  %79 = %77.0;
  (%78, %79, meta[relay.Constant][3] /* ty=Tensor[(2, 16), float32] */)
}

def @func_645(%var_622: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64]) {
  %80 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %81 = %80.0;
  %82 = cast(%var_622, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
  %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%81, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %86 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %87 = greater_equal(%84, %85) /* ty=Tensor[(6, 15, 11), bool] */;
  %88 = %86.0;
  (%87, %88)
}

def @func_1182(%var_1139: Tensor[(6, 15, 11), float32], %var_1165: Tensor[(1, 1728), float32]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(1, 1, 9), float32], Tensor[(1, 1728), float32], Tensor[(6, 15, 11), float64]) {
  %89 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %90 = %89.1;
  %91 = cast(%var_1139, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%90, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %95 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %96 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %97 = cast(%var_1165, dtype="float32") /* ty=Tensor[(1, 1728), float32] */;
  %98 = reshape(%97, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %99 = @func_247(%98) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %100 = @func_842() /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %101 = add(%93, %94) /* ty=Tensor[(6, 15, 11), float64] */;
  %102 = %95.0;
  %103 = %96.0;
  %104 = %99.1;
  %105 = %100.2;
  (%101, %102, %103, %104, %var_1165, %105)
}

def @func_4816() -> (Tensor[(6, 15, 11), float64],) {
  %106 = @func_4678() /* ty=Tensor[(6, 15, 11), float64] */;
  (%106,)
}

def @func_3846() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %107 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %108 = @func_1407() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %109 = %107.0;
  %110 = %108.0;
  (%109, %110)
}

def @func_1129(%var_1123: Tensor[(9, 4, 4), int32], %var_1124: Tensor[(9, 4, 4), int32]) -> Tensor[(9, 4, 4), int32] {
  %111 = cast(%var_1124, dtype="int32") /* ty=Tensor[(9, 4, 4), int32] */;
  %112 = shape_of(%var_1123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%var_1123, dtype="int32") /* ty=Tensor[(9, 4, 4), int32] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_xor(%113, %114) /* ty=Tensor[(9, 4, 4), int32] */
}

def @func_1043(%var_1020: int16) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16) {
  %115 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %116 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %117 = %116.1;
  %118 = cast(%117, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %119 = cast(%var_1020, dtype="int16") /* ty=int16 */;
  %120 = reshape(%119, newshape=[]) /* ty=int16 */;
  %121 = @func_777(%120) /* ty=(Tensor[(13, 16, 3), int16], Tensor[(6, 15, 11), float64], Tensor[(13, 16, 3), float64], Tensor[(6, 15, 11), float64]) */;
  %122 = %115.1;
  %123 = acos(%118) /* ty=Tensor[(6, 15, 11), float32] */;
  %124 = %121.3;
  (%122, %123, %124, %var_1020)
}

def @func_1957() -> Tensor[(6, 15, 11), uint32] {
  %125 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %125.4
}

def @func_3030() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %126 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %127 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %128 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %129 = %126.0;
  %130 = %127.0;
  %131 = %128.1;
  (%129, %130, %131)
}

def @func_4126() -> (Tensor[(6, 15, 11), float64], Tensor[(98), int32]) {
  %132 = @func_2719() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1350), float64], Tensor[(98), int32], Tensor[(7, 28), int32]) */;
  %133 = @func_3424() /* ty=Tensor[(6, 15, 11), float64] */;
  %134 = %132.2;
  (%133, %134)
}

def @func_9828() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %135 = @func_3856() /* ty=Tensor[(6, 15, 11), float64] */;
  %136 = cast(%135, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %137 = reshape(%136, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %138 = @func_162(%137) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %139 = %138.3;
  (%135, %139)
}

def @func_1108() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %140 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %141 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %142 = %141.0;
  %143 = cast(%142, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %144 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %145 = %140.0;
  %146 = log(%143) /* ty=Tensor[(6, 15, 11), float64] */;
  %147 = %144.1;
  (%145, %146, %147)
}

def @func_1686(%var_1649: Tensor[(3, 8, 4), float32], %var_1650: Tensor[(3, 8, 4), float32], %var_1664: Tensor[(990), float64], %var_1674: int16) -> (Tensor[(3, 8, 4), float32], Tensor[(3, 8, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(990), float64], Tensor[(6, 15, 11), float64], int16, int16) {
  %148 = cast(%var_1650, dtype="float32") /* ty=Tensor[(3, 8, 4), float32] */;
  %149 = shape_of(%var_1649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%var_1649, dtype="float32") /* ty=Tensor[(3, 8, 4), float32] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %152 = cast(%var_1650, dtype="float32") /* ty=Tensor[(3, 8, 4), float32] */;
  %153 = cast(%var_1664, dtype="float64") /* ty=Tensor[(990), float64] */;
  %154 = reshape(%153, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %155 = @func_1346(%154) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %156 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %157 = cast(%var_1674, dtype="int16") /* ty=int16 */;
  %158 = reshape(%157, newshape=[]) /* ty=int16 */;
  %159 = @func_1043(%158) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16) */;
  %160 = floor_mod(%150, %151) /* ty=Tensor[(3, 8, 4), float32] */;
  %161 = log(%152) /* ty=Tensor[(3, 8, 4), float32] */;
  %162 = %155.1;
  %163 = %156.0;
  %164 = %159.3;
  (%160, %161, %162, %var_1664, %163, %164, %var_1674)
}

def @func_2719() -> (Tensor[(6, 15, 11), float64], Tensor[(1350), float64], Tensor[(98), int32], Tensor[(7, 28), int32]) {
  %165 = cast(meta[relay.Constant][4] /* ty=Tensor[(98), int32] */, dtype="int32") /* ty=Tensor[(98), int32] */;
  %166 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 28), int32] */, dtype="int32") /* ty=Tensor[(7, 28), int32] */;
  %167 = reshape(%165, newshape=[1, 14, 7]) /* ty=Tensor[(1, 14, 7), int32] */;
  %168 = reshape(%166, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), int32] */;
  %169 = @func_2345(%167, %168) /* ty=(Tensor[(2, 14, 7), bool], Tensor[(6, 15, 11), float64], Tensor[(9, 10, 15), float64], Tensor[(1350), float64]) */;
  %170 = @func_1746() /* ty=Tensor[(6, 15, 11), float64] */;
  %171 = %169.3;
  (%170, %171, meta[relay.Constant][4] /* ty=Tensor[(98), int32] */, meta[relay.Constant][5] /* ty=Tensor[(7, 28), int32] */)
}

def @func_192() -> (Tensor[(6, 15, 11), float64],) {
  %172 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %173 = %172.0;
  (%173,)
}

def @func_3718() -> (Tensor[(6, 15, 11), float64], Tensor[(13, 1, 4), float32], Tensor[(13, ?, 4), float64]) {
  %174 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 4), float32] */;
  %175 = reshape(%174, newshape=[13, 1, 4]) /* ty=Tensor[(13, 1, 4), float32] */;
  %176 = @func_919(%175) /* ty=(Tensor[(13, 1, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %177 = %176.0;
  %178 = cast(%177, dtype="float32") /* ty=Tensor[(13, 1, 4), float32] */;
  %179 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 4), float32] */, dtype="float64") /* ty=Tensor[(13, 4), float64] */;
  %180 = shape_of(%177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(%177, dtype="float64") /* ty=Tensor[(13, 1, 4), float64] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %183 = @func_2699() /* ty=Tensor[(6, 15, 11), float64] */;
  %184 = acosh(%178) /* ty=Tensor[(13, 1, 4), float32] */;
  %185 = power(%181, %182) /* ty=Tensor[(13, ?, 4), float64] */;
  (%183, %184, %185)
}

def @func_2788() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16) {
  %186 = @func_1640() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %187 = cast(meta[relay.Constant][7] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %188 = reshape(%187, newshape=[]) /* ty=int16 */;
  %189 = @func_2664(%188) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), float64]) */;
  %190 = %186.1;
  %191 = %189.1;
  (%190, %191, meta[relay.Constant][7] /* ty=int16 */)
}

def @func_5889(%var_5870: Tensor[(11, 6, 9), float64], %var_5871: Tensor[(11, 6, 9), float64]) -> Tensor[(11, 6, 9), float32] {
  %192 = cast(%var_5871, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
  %193 = shape_of(%var_5870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%var_5870, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %196 = divide(%194, %195) /* ty=Tensor[(11, 6, 9), float64] */;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
  %198 = shape_of(%var_5871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(%var_5871, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%199, %200) /* ty=Tensor[(11, 6, 9), float32] */
}

def @func_890() -> (Tensor[(6, 15, 11), float64],) {
  %201 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %202 = %201.0;
  (%202,)
}

def @func_9294() -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float64]) {
  %203 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %204 = @func_8042() /* ty=Tensor[(6, 15, 11), uint32] */;
  %205 = %203.0;
  (%204, %205)
}

def @func_6440() -> Tensor[(6, 15, 11), float32] {
  %206 = @func_4308() /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(1, 52), float32], Tensor[(6, 15, 11), uint32], Tensor[(990), float64], Tensor[(96), float32], Tensor[(6, 15, 11), float32]) */;
  %206.8
}

def @func_6752() -> Tensor[(6, 15, 11), float64] {
  @func_3856() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_7152() -> Tensor[(1728), float32] {
  %207 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
  %208 = %207.0;
  %209 = cast(%208, dtype="float32") /* ty=Tensor[(1728), float32] */;
  asinh(%209) /* ty=Tensor[(1728), float32] */
}

def @func_4252() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) {
  %210 = @func_3030() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %211 = %210.0;
  %212 = @func_1879() /* ty=Tensor[(6, 15, 11), float32] */;
  (%211, %212)
}

def @func_4501() -> (Tensor[(6, 15, 11), float64],) {
  %213 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %214 = %213.1;
  (%214,)
}

def @func_3922() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %215 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %216 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %217 = %215.0;
  %218 = %216.0;
  (%217, %218)
}

def @func_9140() -> (Tensor[(6, 15, 11), float64], int16, Tensor[(1728), float32], int16) {
  %219 = @func_6766() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %220 = cast(meta[relay.Constant][8] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %221 = cast(meta[relay.Constant][9] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %222 = %219.0;
  %223 = cast(%222, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %224 = reshape(%220, newshape=[48, 36]) /* ty=Tensor[(48, 36), float32] */;
  %225 = reshape(%221, newshape=[]) /* ty=int16 */;
  %226 = reshape(%223, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %227 = @func_3951(%224, %225, %226) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(48, 36), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), bool]) */;
  %228 = %227.4;
  (%222, %228, meta[relay.Constant][8] /* ty=Tensor[(1728), float32] */, meta[relay.Constant][9] /* ty=int16 */)
}

def @func_9605() -> (Tensor[(1728), float32], Tensor[(6, 15, 11), uint32]) {
  %229 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
  %230 = %229.0;
  %231 = @func_6796() /* ty=Tensor[(6, 15, 11), uint32] */;
  (%230, %231)
}

def @func_9851() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %232 = @func_4065() /* ty=Tensor[(6, 15, 11), float32] */;
  %233 = @func_7935() /* ty=Tensor[(6, 15, 11), float64] */;
  (%232, %233)
}

def @func_10066(%var_10048: Tensor[(11, 10, 16), int64], %var_10049: Tensor[(11, 10, 16), int64]) -> (Tensor[(11, 10, 16), int64], Tensor[(11, 10, 16), float64]) {
  %234 = cast(%var_10049, dtype="int64") /* ty=Tensor[(11, 10, 16), int64] */;
  %235 = shape_of(%var_10048, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%var_10048, dtype="int64") /* ty=Tensor[(11, 10, 16), int64] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %238 = cast(%var_10049, dtype="float64") /* ty=Tensor[(11, 10, 16), float64] */;
  %239 = shape_of(%var_10048, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%var_10048, dtype="float64") /* ty=Tensor[(11, 10, 16), float64] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %242 = minimum(%236, %237) /* ty=Tensor[(11, 10, 16), int64] */;
  %243 = divide(%240, %241) /* ty=Tensor[(11, 10, 16), float64] */;
  (%242, %243)
}

def @func_3256() -> (Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) {
  %244 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %245 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %246 = %244.3;
  %247 = %245.2;
  (%246, %247)
}

def @func_1640() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %248 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %249 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %250 = %248.1;
  %251 = %249.0;
  (%250, %251)
}

def @func_3363(%var_3342: Tensor[(13, 1, 9), float64]) -> (Tensor[(13, 1, 9), float64], Tensor[(6, 15, 11), float64]) {
  %252 = cast(%var_3342, dtype="float64") /* ty=Tensor[(13, 1, 9), float64] */;
  %253 = @func_3256() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) */;
  %254 = erf(%252) /* ty=Tensor[(13, 1, 9), float64] */;
  %255 = %253.0;
  (%254, %255)
}

def @func_6069() -> Tensor[(98), int32] {
  %256 = @func_4126() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(98), int32]) */;
  %256.1
}

def @func_842() -> (Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %257 = cast(meta[relay.Constant][10] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %258 = reshape(%257, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %259 = @func_247(%258) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %260 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %261 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %262 = %261.0;
  %263 = cast(%262, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %264 = %259.0;
  %265 = %260.1;
  %266 = erf(%263) /* ty=Tensor[(6, 15, 11), float64] */;
  (%264, meta[relay.Constant][10] /* ty=Tensor[(1728), float32] */, %265, %266)
}

def @func_9718() -> Tensor[(6, 15, 11), float64] {
  %267 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %267.0
}

def @func_5793(%var_5786: Tensor[(16, 8, 7), int8], %var_5787: Tensor[(16, 8, 7), int8]) -> Tensor[(16, 8, 7), bool] {
  %268 = cast(%var_5787, dtype="bool") /* ty=Tensor[(16, 8, 7), bool] */;
  %269 = shape_of(%var_5786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%var_5786, dtype="bool") /* ty=Tensor[(16, 8, 7), bool] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%270, %271) /* ty=Tensor[(16, 8, 7), bool] */
}

def @func_8310() -> Tensor[(6, 15, 11), float64] {
  @func_7935() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_5828() -> (Tensor[(15, 5, 5), float64], Tensor[(1728), float32]) {
  %272 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 5, 5), float64] */, dtype="float64") /* ty=Tensor[(15, 5, 5), float64] */;
  %273 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
  %274 = asinh(%272) /* ty=Tensor[(15, 5, 5), float64] */;
  %275 = %273.0;
  (%274, %275)
}

def @func_4429() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %276 = @func_3846() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %277 = @func_2795() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %278 = %276.0;
  %279 = %277.0;
  (%278, %279)
}

def @func_5931(%var_5922: Tensor[(7, 14, 3), float64], %var_5923: Tensor[(7, 14, 3), float64]) -> Tensor[(7, 14, 3), float64] {
  %280 = cast(%var_5923, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %281 = shape_of(%var_5922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(%var_5922, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%282, %283) /* ty=Tensor[(7, 14, 3), float64] */
}

def @func_9379() -> (Tensor[(6, 15, 11), float64],) {
  %284 = @func_8286() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %285 = %284.0;
  (%285,)
}

def @func_2286(%var_2278: Tensor[(9, 10, 15), float64], %var_2279: Tensor[(9, 10, 15), float64]) -> (Tensor[(9, 10, 15), float64],) {
  %286 = cast(%var_2279, dtype="float64") /* ty=Tensor[(9, 10, 15), float64] */;
  %287 = shape_of(%var_2278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%var_2278, dtype="float64") /* ty=Tensor[(9, 10, 15), float64] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %290 = add(%288, %289) /* ty=Tensor[(9, 10, 15), float64] */;
  (%290,)
}

def @func_1714(%var_1698: Tensor[(4, 3, 4), float32]) -> Tensor[(4, 3, 4), float64] {
  %291 = cast(%var_1698, dtype="float32") /* ty=Tensor[(4, 3, 4), float32] */;
  %292 = sin(%291) /* ty=Tensor[(4, 3, 4), float32] */;
  %293 = cast(%292, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
  %294 = shape_of(%var_1698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(%var_1698, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%295, %296) /* ty=Tensor[(4, 3, 4), float64] */
}

def @func_3412() -> (Tensor[(6, 15, 11), float32], Tensor[(1728), float32]) {
  %297 = @func_3256() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) */;
  %298 = @func_1879() /* ty=Tensor[(6, 15, 11), float32] */;
  %299 = %297.1;
  (%298, %299)
}

def @func_7044() -> (Tensor[(1728), float32],) {
  %300 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
  %301 = %300.0;
  (%301,)
}

def @func_4211(%var_4200: Tensor[(1, 13, 8), float32], %var_4201: Tensor[(1, 13, 8), float32]) -> Tensor[(?, 13, 8), float32] {
  %302 = cast(%var_4201, dtype="float32") /* ty=Tensor[(1, 13, 8), float32] */;
  %303 = shape_of(%var_4200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%var_4200, dtype="float32") /* ty=Tensor[(1, 13, 8), float32] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%304, %305) /* ty=Tensor[(?, 13, 8), float32] */
}

def @func_8657() -> Tensor[(6, 15, 11), float64] {
  %306 = @func_5573() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %306.0
}

def @func_4035() -> (Tensor[(1728), float32],) {
  %307 = @func_1493() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */;
  %308 = %307.2;
  (%308,)
}

def @func_2545(%var_2457: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
  %309 = @func_1108() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %310 = %309.1;
  %311 = cast(%var_2457, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
  %312 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%310, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %315 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %316 = @func_737() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %317 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %318 = cast(%310, dtype="uint64") /* ty=Tensor[(6, 15, 11), uint64] */;
  %319 = shape_of(%var_2457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%var_2457, dtype="uint64") /* ty=Tensor[(6, 15, 11), uint64] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %322 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %323 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %324 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %325 = less_equal(%313, %314) /* ty=Tensor[(6, 15, 11), bool] */;
  %326 = %315.0;
  %327 = %316.0;
  %328 = %317.0;
  %329 = bitwise_xor(%320, %321) /* ty=Tensor[(6, 15, 11), uint64] */;
  %330 = %322.0;
  %331 = %323.1;
  %332 = %324.1;
  (%325, %326, %327, %328, %329, %330, %331, %332)
}

def @func_7555() -> (Tensor[(6, 15, 11), float32], Tensor[(4, 12), float32], Tensor[(1728), float32]) {
  %333 = @func_6230() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %334 = @func_5032() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float32]) */;
  %335 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
  %336 = %333.0;
  %337 = %334.2;
  %338 = %335.0;
  (%336, %337, %338)
}

def @func_8396(%var_8380: Tensor[(12, 3, 6), uint16], %var_8391: uint64) -> (Tensor[(12, 3, 6), uint16], uint64, uint64) {
  %339 = cast(%var_8380, dtype="uint16") /* ty=Tensor[(12, 3, 6), uint16] */;
  %340 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(12, 3, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 3, 6), uint16] */, dtype="uint16") /* ty=Tensor[(12, 3, 6), uint16] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %343 = cast(%var_8391, dtype="uint64") /* ty=uint64 */;
  %344 = reshape(%343, newshape=[]) /* ty=uint64 */;
  %345 = @func_2747(%344) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], uint64) */;
  %346 = right_shift(%341, %342) /* ty=Tensor[(12, 3, 6), uint16] */;
  %347 = %345.2;
  (%346, %347, %var_8391)
}

def @func_9911() -> (Tensor[(6, 15, 11), float64],) {
  %348 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %349 = %348.0;
  (%349,)
}

def @func_1746() -> Tensor[(6, 15, 11), float64] {
  %350 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %350.0
}

def @func_7101() -> (Tensor[(15, 7, 6), bool],) {
  %351 = @func_3616() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(15, 7, 6), bool], Tensor[(630), uint16]) */;
  %352 = %351.3;
  (%352,)
}

def @func_737() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) {
  %353 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %354 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %355 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %356 = %355.0;
  %357 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %358 = %357.0;
  %359 = cast(%358, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %360 = shape_of(%356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%356, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %363 = %353.0;
  %364 = %354.1;
  %365 = divide(%361, %362) /* ty=Tensor[(6, 15, 11), float32] */;
  (%363, %364, %365)
}

def @func_9581() -> Tensor[(6, 15, 11), float64] {
  %366 = @func_5730() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float64]) */;
  %366.3
}

def @func_2195(%var_2186: uint64) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(12, 10, 14), float64], uint64, Tensor[(1680), uint64], Tensor[(6, 15, 11), float64]) {
  %367 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %368 = @func_2111() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %369 = cast(%var_2186, dtype="uint64") /* ty=uint64 */;
  %370 = cast(meta[relay.Constant][13] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
  %371 = reshape(%369, newshape=[]) /* ty=uint64 */;
  %372 = reshape(%370, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), uint64] */;
  %373 = @func_2024(%371, %372) /* ty=(Tensor[(12, 10, 14), uint64], Tensor[(12, 10, 14), float64]) */;
  %374 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %375 = %367.0;
  %376 = %368.0;
  %377 = %373.1;
  %378 = %374.0;
  (%375, %376, %377, %var_2186, meta[relay.Constant][13] /* ty=Tensor[(1680), uint64] */, %378)
}

def @func_2577(%var_2572: Tensor[(15, 7, 6), uint16], %var_2573: Tensor[(15, 7, 6), uint16]) -> (Tensor[(15, 7, 6), bool],) {
  %379 = cast(%var_2573, dtype="bool") /* ty=Tensor[(15, 7, 6), bool] */;
  %380 = shape_of(%var_2572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%var_2572, dtype="bool") /* ty=Tensor[(15, 7, 6), bool] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %383 = greater_equal(%381, %382) /* ty=Tensor[(15, 7, 6), bool] */;
  (%383,)
}

def @func_5079(%var_5073: Tensor[(6, 15, 11), uint16]) -> (Tensor[(6, 15, 11), float32],) {
  %384 = @func_2075() /* ty=(Tensor[(6, 15, 11), uint16],) */;
  %385 = %384.0;
  %386 = cast(%var_5073, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %387 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%385, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %390 = mod(%388, %389) /* ty=Tensor[(6, 15, 11), float32] */;
  (%390,)
}

def @func_579() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %391 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %392 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %393 = %391.0;
  %394 = cast(%393, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %395 = reshape(%394, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %396 = @func_162(%395) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %397 = %392.0;
  %398 = %396.0;
  (%393, %397, %398)
}

def @func_2827() -> (Tensor[(6, 15, 11), float64], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %399 = @func_1879() /* ty=Tensor[(6, 15, 11), float32] */;
  %400 = cast(%399, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %401 = asinh(%400) /* ty=Tensor[(6, 15, 11), float64] */;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %403 = cast(meta[relay.Constant][14] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %404 = reshape(%402, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float32] */;
  %405 = reshape(%403, newshape=[1, 1728]) /* ty=Tensor[(1, 1728), float32] */;
  %406 = @func_1182(%404, %405) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(1, 1, 9), float32], Tensor[(1, 1728), float32], Tensor[(6, 15, 11), float64]) */;
  %407 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %408 = cast(%401, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %409 = %406.5;
  %410 = %407.1;
  %411 = sinh(%408) /* ty=Tensor[(6, 15, 11), float64] */;
  (%409, meta[relay.Constant][14] /* ty=Tensor[(1728), float32] */, %410, %411)
}

def @func_518() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) {
  %412 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %413 = %412.1;
  %414 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %415 = %414.0;
  %416 = cast(%415, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %417 = shape_of(%413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%413, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %420 = cast(%415, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %421 = reshape(%420, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %422 = @func_162(%421) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %423 = minimum(%418, %419) /* ty=Tensor[(6, 15, 11), float32] */;
  %424 = %422.0;
  (%423, %424)
}

def @func_7935() -> Tensor[(6, 15, 11), float64] {
  %425 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %425.1
}

def @func_2940(%var_2922: Tensor[(52), float32]) -> (Tensor[(6, 15, 11), float64], int16, int16, Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), uint32]) {
  %426 = @func_2827() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %427 = cast(meta[relay.Constant][15] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %428 = reshape(%427, newshape=[]) /* ty=int16 */;
  %429 = @func_2664(%428) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), float64]) */;
  %430 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %431 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %432 = cast(%var_2922, dtype="float32") /* ty=Tensor[(52), float32] */;
  %433 = reshape(%432, newshape=[13, 1, 4]) /* ty=Tensor[(13, 1, 4), float32] */;
  %434 = @func_919(%433) /* ty=(Tensor[(13, 1, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %435 = @func_1108() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %436 = %426.0;
  %437 = %429.2;
  %438 = %430.3;
  %439 = %431.0;
  %440 = %434.2;
  %441 = %435.2;
  (%436, %437, meta[relay.Constant][15] /* ty=int16 */, %438, %439, %440, %var_2922, %441)
}

def @func_7860() -> (Tensor[(4, 12), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %442 = @func_5032() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float32]) */;
  %443 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %444 = @func_5965() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %445 = %442.2;
  %446 = %443.0;
  %447 = %444.1;
  (%445, %446, %447)
}

def @func_8424() -> Tensor[(1728), float64] {
  %448 = @func_7044() /* ty=(Tensor[(1728), float32],) */;
  %449 = %448.0;
  %450 = cast(%449, dtype="float64") /* ty=Tensor[(1728), float64] */;
  sigmoid(%450) /* ty=Tensor[(1728), float64] */
}

def @func_9763(%var_9734: Tensor[(675), bool]) -> (Tensor[(6, 15, 11), float64], Tensor[(675), uint8]) {
  %451 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %452 = cast(%var_9734, dtype="bool") /* ty=Tensor[(675), bool] */;
  %453 = cast(%var_9734, dtype="bool") /* ty=Tensor[(675), bool] */;
  %454 = reshape(%452, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %455 = reshape(%453, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %456 = @func_3890(%454, %455) /* ty=(Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) */;
  %457 = %456.4;
  %458 = cast(%var_9734, dtype="uint8") /* ty=Tensor[(675), uint8] */;
  %459 = cast(%457, dtype="uint8") /* ty=uint8 */;
  %460 = %451.0;
  %461 = minimum(%458, %459) /* ty=Tensor[(675), uint8] */;
  (%460, %461)
}

def @func_6361() -> Tensor[(6, 15, 11), float64] {
  %462 = @func_5573() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %462.0
}

def @func_2266(%var_2235: Tensor[(6, 15, 11), float64], %var_2243: Tensor[(2, 864), float32], %var_2264: uint64) -> (Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(2, 864), float32], Tensor[(12, 10, 14), float64], uint64) {
  %463 = @func_1407() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %464 = %463.0;
  %465 = cast(%var_2235, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%464, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %469 = cast(%var_2243, dtype="float32") /* ty=Tensor[(2, 864), float32] */;
  %470 = reshape(%469, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %471 = @func_247(%470) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %472 = cast(%var_2264, dtype="uint64") /* ty=uint64 */;
  %473 = reshape(%472, newshape=[]) /* ty=uint64 */;
  %474 = @func_2195(%473) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(12, 10, 14), float64], uint64, Tensor[(1680), uint64], Tensor[(6, 15, 11), float64]) */;
  %475 = floor_mod(%467, %468) /* ty=Tensor[(6, 15, 11), float64] */;
  %476 = %471.0;
  %477 = %474.2;
  (%475, %476, %var_2243, %477, %var_2264)
}

def @func_9470(%var_9464: int16) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(13, 16, 3), int16], int16) {
  %478 = @func_9070() /* ty=(Tensor[(98), int32], Tensor[(6, 15, 11), float64]) */;
  %479 = @func_5215() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(2, 16), float32], Tensor[(6, 15, 11), uint32]) */;
  %480 = cast(%var_9464, dtype="int16") /* ty=int16 */;
  %481 = reshape(%480, newshape=[]) /* ty=int16 */;
  %482 = @func_777(%481) /* ty=(Tensor[(13, 16, 3), int16], Tensor[(6, 15, 11), float64], Tensor[(13, 16, 3), float64], Tensor[(6, 15, 11), float64]) */;
  %483 = @func_5498() /* ty=Tensor[(6, 15, 11), float64] */;
  %484 = %478.1;
  %485 = %479.0;
  %486 = %482.0;
  (%483, %484, %485, %486, %var_9464)
}

def @func_10033() -> (Tensor[(6, 15, 11), float64],) {
  %487 = @func_6295() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %488 = %487.3;
  (%488,)
}

def @func_8123() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %489 = @func_4252() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %490 = @func_5215() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(2, 16), float32], Tensor[(6, 15, 11), uint32]) */;
  %491 = %490.0;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %493 = %489.1;
  %494 = atanh(%492) /* ty=Tensor[(6, 15, 11), float64] */;
  (%493, %494)
}

def @func_5730() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float64]) {
  %495 = @func_737() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %496 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %497 = @func_2075() /* ty=(Tensor[(6, 15, 11), uint16],) */;
  %498 = @func_3308() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %499 = %495.2;
  %500 = %496.0;
  %501 = %497.0;
  %502 = %498.0;
  (%499, %500, %501, %502)
}

def @func_1407() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %503 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %504 = %503.0;
  %505 = cast(%504, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %506 = reshape(%505, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %507 = @func_1346(%506) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %508 = %507.1;
  (%504, %508)
}

def @func_3951(%var_3939: Tensor[(48, 36), float32], %var_3944: int16, %var_3946: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(48, 36), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), bool]) {
  %509 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %510 = cast(%var_3939, dtype="float32") /* ty=Tensor[(48, 36), float32] */;
  %511 = reshape(%510, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %512 = @func_247(%511) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %513 = cast(%var_3944, dtype="int16") /* ty=int16 */;
  %514 = reshape(%513, newshape=[]) /* ty=int16 */;
  %515 = @func_2664(%514) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), float64]) */;
  %516 = @func_1746() /* ty=Tensor[(6, 15, 11), float64] */;
  %517 = cast(%var_3946, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
  %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%516, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %521 = %509.0;
  %522 = %512.1;
  %523 = %515.1;
  %524 = equal(%519, %520) /* ty=Tensor[(6, 15, 11), bool] */;
  (%521, %522, %var_3939, %523, %var_3944, %524)
}

def @func_2357() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %525 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %526 = @func_1108() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %527 = %525.2;
  %528 = %526.2;
  (%527, %528)
}

def @func_1879() -> Tensor[(6, 15, 11), float32] {
  %529 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %529.1
}

def @func_5215() -> (Tensor[(6, 15, 11), float32], Tensor[(2, 16), float32], Tensor[(6, 15, 11), uint32]) {
  %530 = @func_1640() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %531 = @func_4965() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) */;
  %532 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %533 = %530.0;
  %534 = %531.2;
  %535 = %532.1;
  (%533, %534, %535)
}

def @func_9870() -> Tensor[(3, 15, 16), bool] {
  %536 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 15, 16), int16] */, dtype="bool") /* ty=Tensor[(3, 15, 16), bool] */;
  %537 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(3, 15, 16), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 15, 16), int16] */, dtype="bool") /* ty=Tensor[(3, 15, 16), bool] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%538, %539) /* ty=Tensor[(3, 15, 16), bool] */
}

def @func_6295() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
  %540 = @func_2795() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %541 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %542 = @func_4252() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %543 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %544 = @func_4308() /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(1, 52), float32], Tensor[(6, 15, 11), uint32], Tensor[(990), float64], Tensor[(96), float32], Tensor[(6, 15, 11), float32]) */;
  %545 = %540.0;
  %546 = %541.0;
  %547 = %542.0;
  %548 = %543.0;
  %549 = %544.8;
  (%545, %546, %547, %548, %549)
}

def @func_8847() -> (Tensor[(6, 15, 11), float32],) {
  %550 = @func_6295() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %551 = %550.2;
  (%551,)
}

def @func_3097() -> (Tensor[(6, 15, 11), float64],) {
  %552 = @func_2699() /* ty=Tensor[(6, 15, 11), float64] */;
  (%552,)
}

def @func_6766() -> (Tensor[(6, 15, 11), float64],) {
  %553 = @func_2788() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16) */;
  %554 = %553.0;
  (%554,)
}

def @func_5372() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %555 = @func_4805() /* ty=(Tensor[(6, 15, 11), uint32],) */;
  %556 = @func_5153() /* ty=Tensor[(6, 15, 11), float64] */;
  %557 = %555.0;
  (%556, %557)
}

def @func_3424() -> Tensor[(6, 15, 11), float64] {
  %558 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %558.0
}

def @func_964() -> (Tensor[(6, 15, 11), float32],) {
  %559 = @func_737() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %560 = %559.2;
  (%560,)
}

def @func_9563() -> (Tensor[(6, 15, 11), float64],) {
  %561 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %562 = %561.0;
  (%562,)
}

def @func_5965() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %563 = @func_3979() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %564 = %563.1;
  %565 = @func_4678() /* ty=Tensor[(6, 15, 11), float64] */;
  (%564, %565)
}

def @func_8678() -> (Tensor[(6, 15, 11), float64],) {
  %566 = @func_5965() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %567 = %566.1;
  (%567,)
}

def @func_5527() -> (Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64]) {
  %568 = @func_3922() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %569 = @func_5482() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %570 = %568.1;
  %571 = %569.1;
  (%570, %571)
}

def @func_4108() -> (Tensor[(6, 15, 11), uint16],) {
  %572 = @func_2075() /* ty=(Tensor[(6, 15, 11), uint16],) */;
  %573 = %572.0;
  (%573,)
}

def @func_9960() -> Tensor[(6, 15, 11), float64] {
  %574 = @func_9070() /* ty=(Tensor[(98), int32], Tensor[(6, 15, 11), float64]) */;
  %574.1
}

def @func_9070() -> (Tensor[(98), int32], Tensor[(6, 15, 11), float64]) {
  %575 = @func_4126() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(98), int32]) */;
  %576 = @func_7091() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %577 = %575.1;
  %578 = %576.0;
  (%577, %578)
}

def @func_9228() -> Tensor[(6, 15, 11), float32] {
  %579 = @func_5215() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(2, 16), float32], Tensor[(6, 15, 11), uint32]) */;
  %579.0
}

def @func_94() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
  %580 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 15, 11), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %581 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 15, 11), float64] */, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %582 = exp(%580) /* ty=Tensor[(6, 15, 11), float64] */;
  %583 = sin(%581) /* ty=Tensor[(6, 15, 11), float32] */;
  (%582, %583)
}

def @func_6721(%var_6704: Tensor[(12, 12, 9), float32]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(24, 72), float32], Tensor[(6, 15, 11), float32], Tensor[(12, 12, 9), float64]) {
  %584 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %585 = @func_3030() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %586 = @func_3979() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %587 = cast(meta[relay.Constant][19] /* ty=Tensor[(24, 72), float32] */, dtype="float32") /* ty=Tensor[(24, 72), float32] */;
  %588 = reshape(%587, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %589 = @func_247(%588) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %590 = %589.1;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(1, 1, 9), float64] */;
  %592 = cast(%var_6704, dtype="float64") /* ty=Tensor[(12, 12, 9), float64] */;
  %593 = %584.3;
  %594 = %585.0;
  %595 = %586.1;
  %596 = minimum(%591, %592) /* ty=Tensor[(12, 12, 9), float64] */;
  (%593, %594, meta[relay.Constant][19] /* ty=Tensor[(24, 72), float32] */, %595, %596)
}

def @func_6344(%var_6325: Tensor[(75, 9), bool], %var_6338: Tensor[(84), float64]) -> (Tensor[(2, 16), float32], Tensor[(6, 15, 11), float64], Tensor[(75, 9), bool], Tensor[(6, 15, 11), float32], Tensor[(14, 6), float64], Tensor[(84), float64]) {
  %597 = @func_4965() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) */;
  %598 = cast(%var_6325, dtype="bool") /* ty=Tensor[(75, 9), bool] */;
  %599 = cast(%var_6325, dtype="bool") /* ty=Tensor[(75, 9), bool] */;
  %600 = reshape(%598, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %601 = reshape(%599, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %602 = @func_3890(%600, %601) /* ty=(Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) */;
  %603 = cast(%var_6338, dtype="float64") /* ty=Tensor[(84), float64] */;
  %604 = reshape(%603, newshape=[14, 6]) /* ty=Tensor[(14, 6), float64] */;
  %605 = %597.2;
  %606 = %602.1;
  %607 = @func_4065() /* ty=Tensor[(6, 15, 11), float32] */;
  %608 = @func_3283(%604) /* ty=Tensor[(14, 6), float64] */;
  (%605, %606, %var_6325, %607, %608, %var_6338)
}

def @func_4678() -> Tensor[(6, 15, 11), float64] {
  @func_4007() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_5573() -> (Tensor[(6, 15, 11), float64],) {
  %609 = @func_3856() /* ty=Tensor[(6, 15, 11), float64] */;
  (%609,)
}

def @func_9934() -> (Tensor[(6, 15, 11), uint16],) {
  %610 = @func_4965() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) */;
  %611 = %610.0;
  (%611,)
}

def @func_6152(%var_6082: Tensor[(9, 8, 11), uint8], %var_6083: Tensor[(9, 8, 11), uint8]) -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int64]) {
  %612 = cast(%var_6083, dtype="uint8") /* ty=Tensor[(9, 8, 11), uint8] */;
  %613 = shape_of(%var_6082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%var_6082, dtype="uint8") /* ty=Tensor[(9, 8, 11), uint8] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %616 = subtract(%614, %615) /* ty=Tensor[(9, 8, 11), uint8] */;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  %618 = shape_of(%var_6083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%var_6083, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %621 = cast(%var_6082, dtype="int64") /* ty=Tensor[(9, 8, 11), int64] */;
  %622 = shape_of(%var_6083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(%var_6083, dtype="int64") /* ty=Tensor[(9, 8, 11), int64] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %625 = power(%619, %620) /* ty=Tensor[(9, 8, 11), float32] */;
  %626 = minimum(%623, %624) /* ty=Tensor[(9, 8, 11), int64] */;
  (%625, %626)
}

def @func_8042() -> Tensor[(6, 15, 11), uint32] {
  %627 = @func_5372() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %627.1
}

def @func_2024(%var_2014: uint64, %var_2015: Tensor[(12, 10, 14), uint64]) -> (Tensor[(12, 10, 14), uint64], Tensor[(12, 10, 14), float64]) {
  %628 = cast(%var_2014, dtype="uint64") /* ty=uint64 */;
  %629 = cast(%var_2015, dtype="uint64") /* ty=Tensor[(12, 10, 14), uint64] */;
  %630 = cast(%var_2015, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
  %631 = asinh(%630) /* ty=Tensor[(12, 10, 14), float32] */;
  %632 = cast(%631, dtype="float64") /* ty=Tensor[(12, 10, 14), float64] */;
  %633 = multiply(%628, %629) /* ty=Tensor[(12, 10, 14), uint64] */;
  %634 = sinh(%632) /* ty=Tensor[(12, 10, 14), float64] */;
  (%633, %634)
}

def @func_6230() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %635 = @func_4252() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %636 = @func_1640() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %637 = %635.1;
  %638 = %636.1;
  (%637, %638)
}

def @func_211() -> (Tensor[(6, 15, 11), float64],) {
  %639 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %640 = %639.0;
  (%640,)
}

def @func_2795() -> (Tensor[(6, 15, 11), float64],) {
  %641 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %642 = %641.0;
  (%642,)
}

def @func_919(%var_908: Tensor[(13, 1, 4), float32]) -> (Tensor[(13, 1, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %643 = cast(%var_908, dtype="float32") /* ty=Tensor[(13, 1, 4), float32] */;
  %644 = @func_842() /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %645 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %646 = log10(%643) /* ty=Tensor[(13, 1, 4), float32] */;
  %647 = %644.2;
  %648 = %645.0;
  (%646, %647, %648)
}

def @func_1535(%var_1528: Tensor[(9, 1, 12), float64]) -> Tensor[(9, 1, 12), float64] {
  %649 = cast(%var_1528, dtype="float64") /* ty=Tensor[(9, 1, 12), float64] */;
  sin(%649) /* ty=Tensor[(9, 1, 12), float64] */
}

def @func_4065() -> Tensor[(6, 15, 11), float32] {
  @func_1879() /* ty=Tensor[(6, 15, 11), float32] */
}

def @func_162(%var_123: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %650 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %651 = %650.0;
  %652 = cast(%var_123, dtype="uint32") /* ty=Tensor[(6, 15, 11), uint32] */;
  %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%651, dtype="uint32") /* ty=Tensor[(6, 15, 11), uint32] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %656 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %657 = cast(%651, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %658 = cast(%var_123, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %659 = subtract(%654, %655) /* ty=Tensor[(6, 15, 11), uint32] */;
  %660 = %656.1;
  %661 = asin(%657) /* ty=Tensor[(6, 15, 11), float64] */;
  %662 = tan(%658) /* ty=Tensor[(6, 15, 11), float64] */;
  (%659, %660, %661, %662)
}

def @func_8286() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %663 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %664 = @func_7422() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %665 = %663.0;
  %666 = %664.0;
  (%665, %666)
}

def @func_7986(%var_7983: Tensor[(14, 7, 6), float64]) -> (Tensor[(14, 7, 6), float64],) {
  %667 = cast(%var_7983, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %668 = asinh(%667) /* ty=Tensor[(14, 7, 6), float64] */;
  (%668,)
}

def @func_7422() -> (Tensor[(6, 15, 11), float64],) {
  %669 = @func_6752() /* ty=Tensor[(6, 15, 11), float64] */;
  (%669,)
}

def @func_5032() -> (Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float32]) {
  %670 = @func_4501() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %671 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
  %672 = reshape(%671, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
  %673 = %670.0;
  %674 = @func_1714(%672) /* ty=Tensor[(4, 3, 4), float64] */;
  (%673, %674, meta[relay.Constant][20] /* ty=Tensor[(4, 12), float32] */)
}

def @func_3890(%var_3859: Tensor[(3, 15, 15), bool], %var_3860: Tensor[(3, 15, 15), bool]) -> (Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) {
  %675 = cast(%var_3860, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
  %676 = shape_of(%var_3859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_3859, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %679 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %680 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %681 = cast(meta[relay.Constant][21] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %682 = reshape(%681, newshape=[]) /* ty=int16 */;
  %683 = @func_1043(%682) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16) */;
  %684 = logical_and(%677, %678) /* ty=Tensor[(3, 15, 15), bool] */;
  %685 = %679.0;
  %686 = %680.1;
  %687 = %683.3;
  (%684, %685, %686, %687, meta[relay.Constant][21] /* ty=int16 */)
}

def @func_8824() -> (Tensor[(6, 15, 11), float64],) {
  %688 = @func_2795() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %689 = %688.0;
  (%689,)
}

def @func_4149(%var_4146: Tensor[(32), float32]) -> (Tensor[(6, 15, 11), float32], Tensor[(1728), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32]) {
  %690 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
  %691 = cast(%var_4146, dtype="float32") /* ty=Tensor[(32), float32] */;
  %692 = reshape(%691, newshape=[1, 8, 4]) /* ty=Tensor[(1, 8, 4), float32] */;
  %693 = @func_3903(%692) /* ty=(Tensor[(1, 8, 4), float32],) */;
  %694 = @func_1879() /* ty=Tensor[(6, 15, 11), float32] */;
  %695 = %690.0;
  %696 = %693.0;
  (%694, %695, %696, %var_4146)
}

def @func_7227() -> Tensor[(6, 15, 11), float64] {
  %697 = @func_2795() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %697.0
}

def @func_6046(%var_6013: Tensor[(10, 10, 4), float64]) -> (Tensor[(10, 10, 4), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, Tensor[(675), bool]) {
  %698 = cast(%var_6013, dtype="float64") /* ty=Tensor[(10, 10, 4), float64] */;
  %699 = @func_4816() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %700 = cast(meta[relay.Constant][22] /* ty=Tensor[(675), bool] */, dtype="bool") /* ty=Tensor[(675), bool] */;
  %701 = cast(meta[relay.Constant][22] /* ty=Tensor[(675), bool] */, dtype="bool") /* ty=Tensor[(675), bool] */;
  %702 = reshape(%700, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %703 = reshape(%701, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %704 = @func_3890(%702, %703) /* ty=(Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) */;
  %705 = exp(%698) /* ty=Tensor[(10, 10, 4), float64] */;
  %706 = @func_1746() /* ty=Tensor[(6, 15, 11), float64] */;
  %707 = @func_4007() /* ty=Tensor[(6, 15, 11), float64] */;
  %708 = %699.0;
  %709 = %704.3;
  (%705, %706, %707, %708, %709, meta[relay.Constant][22] /* ty=Tensor[(675), bool] */)
}

def @func_7367(%var_7352: Tensor[(7, 1, 7), bool]) -> Tensor[(7, ?, 7), bool] {
  %710 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 1, 7), bool] */, dtype="bool") /* ty=Tensor[(7, 1, 7), bool] */;
  %711 = shape_of(%var_7352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%var_7352, dtype="bool") /* ty=Tensor[(7, 1, 7), bool] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%712, %713) /* ty=Tensor[(7, ?, 7), bool] */
}

def @func_2075() -> (Tensor[(6, 15, 11), uint16],) {
  %714 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %715 = %714.3;
  (%715,)
}

def @func_2699() -> Tensor[(6, 15, 11), float64] {
  %716 = @func_2111() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %716.0
}

def @func_3830() -> (Tensor[(6, 15, 11), float64],) {
  %717 = @func_2795() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %718 = %717.0;
  (%718,)
}

def @func_8619() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %719 = @func_1407() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %720 = @func_4476() /* ty=Tensor[(6, 15, 11), float64] */;
  %721 = %719.1;
  (%720, %721)
}

def @func_8572() -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float64]) {
  %722 = @func_4308() /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(1, 52), float32], Tensor[(6, 15, 11), uint32], Tensor[(990), float64], Tensor[(96), float32], Tensor[(6, 15, 11), float32]) */;
  %723 = %722.0;
  %724 = cast(%723, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %725 = reshape(%724, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %726 = @func_2545(%725) /* ty=(Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %727 = %726.3;
  (%723, %727)
}

def @func_9513() -> Tensor[(6, 15, 11), uint16] {
  %728 = @func_6999() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32]) */;
  %728.0
}

def @func_5498() -> Tensor[(6, 15, 11), float64] {
  %729 = @func_1493() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */;
  %729.0
}

def @func_7826() -> Tensor[(6, 15, 11), float32] {
  %730 = @func_4252() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %730.0
}

def @func_9013(%var_8968: uint64, %var_9010: Tensor[(1, 1350), float64]) -> (Tensor[(6, 15, 11), float64], uint64, Tensor[(6, 15, 11), float32], Tensor[(48, 36), float32], Tensor[(9, 10, 15), float64], Tensor[(1, 1350), float64]) {
  %731 = @func_7091() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %732 = @func_4429() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %733 = %731.1;
  %734 = cast(%733, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %735 = cast(meta[relay.Constant][24] /* ty=Tensor[(48, 36), float32] */, dtype="float32") /* ty=Tensor[(48, 36), float32] */;
  %736 = cast(%var_8968, dtype="uint64") /* ty=uint64 */;
  %737 = reshape(%734, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %738 = reshape(%735, newshape=[2, 864]) /* ty=Tensor[(2, 864), float32] */;
  %739 = reshape(%736, newshape=[]) /* ty=uint64 */;
  %740 = @func_2266(%737, %738, %739) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(2, 864), float32], Tensor[(12, 10, 14), float64], uint64) */;
  %741 = %740.1;
  %742 = cast(%741, dtype="int64") /* ty=Tensor[(12, 16, 9), int64] */;
  %743 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(48, 36), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %744 = cast(meta[relay.Constant][24] /* ty=Tensor[(48, 36), float32] */, dtype="int64") /* ty=Tensor[(48, 36), int64] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %746 = add(%744, %745) /* ty=Tensor[(48, 36), int64] */;
  %747 = cast(%746, dtype="float32") /* ty=Tensor[(48, 36), float32] */;
  %748 = cast(%var_9010, dtype="float64") /* ty=Tensor[(1, 1350), float64] */;
  %749 = cast(%var_9010, dtype="float64") /* ty=Tensor[(1, 1350), float64] */;
  %750 = reshape(%748, newshape=[9, 10, 15]) /* ty=Tensor[(9, 10, 15), float64] */;
  %751 = reshape(%749, newshape=[9, 10, 15]) /* ty=Tensor[(9, 10, 15), float64] */;
  %752 = @func_2286(%750, %751) /* ty=(Tensor[(9, 10, 15), float64],) */;
  %753 = %732.0;
  %754 = sqrt(%747) /* ty=Tensor[(48, 36), float32] */;
  %755 = %752.0;
  (%733, %var_8968, %753, %754, %755, %var_9010)
}

def @func_4476() -> Tensor[(6, 15, 11), float64] {
  %756 = @func_3830() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %756.0
}

def @func_4805() -> (Tensor[(6, 15, 11), uint32],) {
  %757 = @func_1957() /* ty=Tensor[(6, 15, 11), uint32] */;
  (%757,)
}

def @func_1304() -> (Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) {
  %758 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %759 = cast(meta[relay.Constant][25] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %760 = reshape(%759, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %761 = @func_247(%760) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %762 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %763 = %762.1;
  %764 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %765 = %764.0;
  %766 = cast(%765, dtype="uint16") /* ty=Tensor[(6, 15, 11), uint16] */;
  %767 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%763, dtype="uint16") /* ty=Tensor[(6, 15, 11), uint16] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %770 = @func_1108() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %771 = %758.0;
  %772 = %761.0;
  %773 = maximum(%768, %769) /* ty=Tensor[(6, 15, 11), uint16] */;
  %774 = %770.2;
  (%771, %772, meta[relay.Constant][25] /* ty=Tensor[(1728), float32] */, %773, %774)
}

def @func_5153() -> Tensor[(6, 15, 11), float64] {
  @func_4007() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_3152(%var_3141: Tensor[(13, 2, 14), int16], %var_3142: Tensor[(13, 2, 14), int16]) -> Tensor[(13, 2, 14), float32] {
  %775 = cast(%var_3142, dtype="bool") /* ty=Tensor[(13, 2, 14), bool] */;
  %776 = shape_of(%var_3141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%var_3141, dtype="bool") /* ty=Tensor[(13, 2, 14), bool] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %779 = less_equal(%777, %778) /* ty=Tensor[(13, 2, 14), bool] */;
  %780 = cast(%779, dtype="float32") /* ty=Tensor[(13, 2, 14), float32] */;
  cos(%780) /* ty=Tensor[(13, 2, 14), float32] */
}

def @func_6796() -> Tensor[(6, 15, 11), uint32] {
  %781 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %781.4
}

def @func_8763(%var_8708: Tensor[(3, 16, 4), float32], %var_8740: Tensor[(660), float64]) -> (Tensor[(6, 15, 11), float32], Tensor[(11, 5, 12), float32], Tensor[(660), float64], Tensor[(2, 16), float32], Tensor[(6, 15, 11), float64], Tensor[(3, 16, 4), bool]) {
  %782 = @func_737() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %783 = cast(%var_8740, dtype="float64") /* ty=Tensor[(660), float64] */;
  %784 = reshape(%783, newshape=[11, 5, 12]) /* ty=Tensor[(11, 5, 12), float64] */;
  %785 = @func_6647(%784) /* ty=(Tensor[(11, 5, 12), float32], Tensor[(11, 5, 12), float32]) */;
  %786 = @func_4965() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) */;
  %787 = @func_5482() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %788 = cast(%var_8708, dtype="float32") /* ty=Tensor[(3, 16, 4), float32] */;
  %789 = sinh(%788) /* ty=Tensor[(3, 16, 4), float32] */;
  %790 = cast(%var_8708, dtype="bool") /* ty=Tensor[(3, 16, 4), bool] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%789, dtype="bool") /* ty=Tensor[(3, 16, 4), bool] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %794 = %782.1;
  %795 = %785.0;
  %796 = %786.2;
  %797 = %787.0;
  %798 = logical_and(%792, %793) /* ty=Tensor[(3, 16, 4), bool] */;
  (%794, %795, %var_8740, %796, %797, %798)
}

def @func_9989() -> Tensor[(6, 15, 11), float64] {
  %799 = @func_6295() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %799.3
}

def @func_5607(%var_5595: Tensor[(12, 1, 9), float32]) -> (Tensor[(12, 1, 9), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32]) {
  %800 = cast(0.546735f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %801 = cast(%var_5595, dtype="float32") /* ty=Tensor[(12, 1, 9), float32] */;
  %802 = cast(meta[relay.Constant][26] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %803 = reshape(%802, newshape=[1, 8, 4]) /* ty=Tensor[(1, 8, 4), float32] */;
  %804 = @func_3903(%803) /* ty=(Tensor[(1, 8, 4), float32],) */;
  %805 = mod(%800, %801) /* ty=Tensor[(12, 1, 9), float32] */;
  %806 = %804.0;
  (%805, %806, meta[relay.Constant][26] /* ty=Tensor[(32), float32] */)
}

def @func_2111() -> (Tensor[(6, 15, 11), float64],) {
  %807 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %808 = %807.0;
  (%808,)
}

def @func_3903(%var_3898: Tensor[(1, 8, 4), float32]) -> (Tensor[(1, 8, 4), float32],) {
  %809 = cast(%var_3898, dtype="float32") /* ty=Tensor[(1, 8, 4), float32] */;
  %810 = sin(%809) /* ty=Tensor[(1, 8, 4), float32] */;
  (%810,)
}

def @func_7091() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %811 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %812 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %813 = %811.0;
  %814 = %812.2;
  (%813, %814)
}

def @func_6874(%var_6872: Tensor[(225, 3), bool]) -> (Tensor[(6, 15, 11), float64], int16, Tensor[(225, 3), bool]) {
  %815 = cast(%var_6872, dtype="bool") /* ty=Tensor[(225, 3), bool] */;
  %816 = cast(%var_6872, dtype="bool") /* ty=Tensor[(225, 3), bool] */;
  %817 = reshape(%815, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %818 = reshape(%816, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %819 = @func_3890(%817, %818) /* ty=(Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) */;
  %820 = @func_2699() /* ty=Tensor[(6, 15, 11), float64] */;
  %821 = %819.3;
  (%820, %821, %var_6872)
}

def @func_6268() -> (Tensor[(6, 15, 11), float32],) {
  %822 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %823 = %822.0;
  (%823,)
}

def @func_7733(%var_7685: Tensor[(13, 12, 13), float64]) -> (Tensor[(13, 12, 13), float64], Tensor[(6, 15, 11), float64], Tensor[(1728), float32], Tensor[(13, 12, 13), float32]) {
  %824 = cast(%var_7685, dtype="float64") /* ty=Tensor[(13, 12, 13), float64] */;
  %825 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(13, 12, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 12, 13), float64] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %828 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %829 = @func_5237() /* ty=(Tensor[(1728), float32], Tensor[(6, 15, 11), float64]) */;
  %830 = cast(%var_7685, dtype="float32") /* ty=Tensor[(13, 12, 13), float32] */;
  %831 = floor_divide(%826, %827) /* ty=Tensor[(13, 12, 13), float64] */;
  %832 = %828.0;
  %833 = %829.0;
  %834 = sqrt(%830) /* ty=Tensor[(13, 12, 13), float32] */;
  (%831, %832, %833, %834)
}

def @func_1493() -> (Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) {
  %835 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %836 = cast(meta[relay.Constant][28] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %837 = reshape(%836, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %838 = @func_247(%837) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %839 = %835.0;
  %840 = %838.1;
  (%839, %840, meta[relay.Constant][28] /* ty=Tensor[(1728), float32] */)
}

def @func_8031() -> (Tensor[(98), int32], Tensor[(1728), float32]) {
  %841 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
  %842 = @func_6069() /* ty=Tensor[(98), int32] */;
  %843 = %841.0;
  (%842, %843)
}

def @func_406() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
  %844 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %845 = %844.0;
  %846 = cast(%845, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %847 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %848 = acosh(%846) /* ty=Tensor[(6, 15, 11), float64] */;
  %849 = %847.1;
  (%848, %849)
}

def @func_8537(%var_8504: Tensor[(32), float32]) -> (Tensor[(6, 15, 11), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32], Tensor[(6, 15, 11), float64], Tensor[(16, 8, 7), float64]) {
  %850 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %851 = cast(%var_8504, dtype="float32") /* ty=Tensor[(32), float32] */;
  %852 = reshape(%851, newshape=[1, 8, 4]) /* ty=Tensor[(1, 8, 4), float32] */;
  %853 = @func_3903(%852) /* ty=(Tensor[(1, 8, 4), float32],) */;
  %854 = @func_5527() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64]) */;
  %855 = cast(meta[relay.Constant][29] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %856 = cast(meta[relay.Constant][29] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %857 = reshape(%855, newshape=[16, 8, 7]) /* ty=Tensor[(16, 8, 7), int8] */;
  %858 = reshape(%856, newshape=[16, 8, 7]) /* ty=Tensor[(16, 8, 7), int8] */;
  %859 = @func_5793(%857, %858) /* ty=Tensor[(16, 8, 7), bool] */;
  %860 = cast(meta[relay.Constant][29] /* ty=Tensor[(896), int8] */, dtype="uint32") /* ty=Tensor[(896), uint32] */;
  %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%859, dtype="uint32") /* ty=Tensor[(16, 8, 7), uint32] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %864 = bitwise_or(%862, %863) /* ty=Tensor[(16, 8, 7), uint32] */;
  %865 = cast(%864, dtype="float64") /* ty=Tensor[(16, 8, 7), float64] */;
  %866 = %850.0;
  %867 = %853.0;
  %868 = %854.0;
  %869 = asin(%865) /* ty=Tensor[(16, 8, 7), float64] */;
  (%866, %867, %var_8504, %868, %869)
}

def @func_2678(%var_2671: Tensor[(5, 10, 5), float32], %var_2672: Tensor[(5, 10, 5), float32]) -> (Tensor[(5, 10, 5), float32],) {
  %870 = cast(%var_2672, dtype="float32") /* ty=Tensor[(5, 10, 5), float32] */;
  %871 = shape_of(%var_2671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%var_2671, dtype="float32") /* ty=Tensor[(5, 10, 5), float32] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %874 = divide(%872, %873) /* ty=Tensor[(5, 10, 5), float32] */;
  (%874,)
}

def @func_3761(%var_3756: Tensor[(13, 7, 4), float64]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(13, 7, 4), float64]) {
  %875 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %876 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %877 = @func_3718() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(13, 1, 4), float32], Tensor[(13, ?, 4), float64]) */;
  %878 = %877.2;
  %879 = cast(%878, dtype="float64") /* ty=Tensor[(13, ?, 4), float64] */;
  %880 = cast(%var_3756, dtype="float64") /* ty=Tensor[(13, 7, 4), float64] */;
  %881 = %875.0;
  %882 = %876.1;
  %883 = mod(%879, %880) /* ty=Tensor[(13, 7, 4), float64] */;
  (%881, %882, %883)
}

def @func_4908(%var_4895: Tensor[(52), float32]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), float64]) {
  %884 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %885 = cast(%var_4895, dtype="float32") /* ty=Tensor[(52), float32] */;
  %886 = reshape(%885, newshape=[52]) /* ty=Tensor[(52), float32] */;
  %887 = @func_2940(%886) /* ty=(Tensor[(6, 15, 11), float64], int16, int16, Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), uint32]) */;
  %888 = @func_3922() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %889 = %884.0;
  %890 = %887.0;
  %891 = %888.0;
  (%889, %890, %var_4895, %891)
}

def @func_777(%var_743: int16) -> (Tensor[(13, 16, 3), int16], Tensor[(6, 15, 11), float64], Tensor[(13, 16, 3), float64], Tensor[(6, 15, 11), float64]) {
  %892 = cast(%var_743, dtype="int16") /* ty=int16 */;
  %893 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 16, 3), int16] */, dtype="int16") /* ty=Tensor[(13, 16, 3), int16] */;
  %894 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %895 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 16, 3), int16] */, dtype="float64") /* ty=Tensor[(13, 16, 3), float64] */;
  %896 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %897 = subtract(%892, %893) /* ty=Tensor[(13, 16, 3), int16] */;
  %898 = %894.1;
  %899 = acos(%895) /* ty=Tensor[(13, 16, 3), float64] */;
  %900 = %896.1;
  (%897, %898, %899, %900)
}

def @func_6468(%var_6466: Tensor[(1728), float32]) -> (Tensor[(6, 15, 11), uint32], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) {
  %901 = cast(%var_6466, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %902 = reshape(%901, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %903 = @func_247(%902) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %904 = @func_1957() /* ty=Tensor[(6, 15, 11), uint32] */;
  %905 = %903.1;
  (%904, %905, %var_6466)
}

def @func_3856() -> Tensor[(6, 15, 11), float64] {
  %906 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %906.0
}

def @func_3979() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %907 = @func_3030() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %908 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %909 = @func_3256() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) */;
  %910 = %907.2;
  %911 = %908.0;
  %912 = %909.0;
  (%910, %911, %912)
}

def @func_2177() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %913 = @func_1493() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */;
  %914 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %915 = %913.0;
  %916 = cast(%915, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %917 = reshape(%916, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %918 = @func_645(%917) /* ty=(Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64]) */;
  %919 = %918.1;
  %920 = cast(%919, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %921 = reshape(%920, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %922 = @func_645(%921) /* ty=(Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64]) */;
  %923 = %914.1;
  %924 = %922.1;
  (%915, %923, %919, %924)
}

def @func_2664(%var_2632: int16) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), float64]) {
  %925 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %926 = cast(%var_2632, dtype="int16") /* ty=int16 */;
  %927 = reshape(%926, newshape=[]) /* ty=int16 */;
  %928 = @func_1043(%927) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16) */;
  %929 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %930 = %925.0;
  %931 = %928.2;
  %932 = %929.0;
  (%930, %931, %var_2632, %932)
}

def @func_6999() -> (Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32]) {
  %933 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %934 = @func_3030() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %935 = %933.3;
  %936 = %934.1;
  (%935, %936)
}

def @func_5237() -> (Tensor[(1728), float32], Tensor[(6, 15, 11), float64]) {
  %937 = @func_3412() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(1728), float32]) */;
  %938 = @func_3097() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %939 = %937.1;
  %940 = %938.0;
  (%939, %940)
}

def @func_9355() -> (Tensor[(6, 15, 11), float64],) {
  %941 = @func_5573() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %942 = %941.0;
  (%942,)
}

def @func_9900() -> Tensor[(6, 15, 11), float64] {
  %943 = @func_8572() /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float64]) */;
  %943.1
}

def @func_247(%var_223: Tensor[(12, 16, 9), float32]) -> (Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) {
  %944 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 1, 9), float32] */;
  %945 = cast(%var_223, dtype="float32") /* ty=Tensor[(12, 16, 9), float32] */;
  %946 = divide(%944, %945) /* ty=Tensor[(12, 16, 9), float32] */;
  %947 = cast(%946, dtype="float32") /* ty=Tensor[(12, 16, 9), float32] */;
  %948 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 1, 9), float32] */;
  %949 = log2(%947) /* ty=Tensor[(12, 16, 9), float32] */;
  %950 = atanh(%948) /* ty=Tensor[(1, 1, 9), float32] */;
  (%949, %950)
}

def @func_537() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %951 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %952 = %951.0;
  %953 = cast(%952, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %954 = reshape(%953, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %955 = @func_162(%954) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %956 = %955.2;
  (%952, %956)
}

def @func_5117() -> Tensor[(6, 15, 11), float64] {
  %957 = @func_3979() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %957.2
}

def @func_3616() -> (Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(15, 7, 6), bool], Tensor[(630), uint16]) {
  %958 = @func_2075() /* ty=(Tensor[(6, 15, 11), uint16],) */;
  %959 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %960 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %961 = %960.1;
  %962 = cast(%961, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %963 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), uint16] */, dtype="uint16") /* ty=Tensor[(630), uint16] */;
  %964 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), uint16] */, dtype="uint16") /* ty=Tensor[(630), uint16] */;
  %965 = reshape(%963, newshape=[15, 7, 6]) /* ty=Tensor[(15, 7, 6), uint16] */;
  %966 = reshape(%964, newshape=[15, 7, 6]) /* ty=Tensor[(15, 7, 6), uint16] */;
  %967 = @func_2577(%965, %966) /* ty=(Tensor[(15, 7, 6), bool],) */;
  %968 = %958.0;
  %969 = %959.0;
  %970 = log2(%962) /* ty=Tensor[(6, 15, 11), float32] */;
  %971 = %967.0;
  (%968, %969, %970, %971, meta[relay.Constant][32] /* ty=Tensor[(630), uint16] */)
}

def @func_6414() -> Tensor[(6, 15, 11), float32] {
  %972 = @func_6268() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %972.0
}

def @func_4647(%var_4536: Tensor[(4, 4, 16), uint8], %var_4537: Tensor[(4, 4, 16), uint8]) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(4, 4, 16), int64], Tensor[(98), int32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %973 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %974 = @func_3097() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %975 = @func_2111() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %976 = cast(%var_4537, dtype="uint8") /* ty=Tensor[(4, 4, 16), uint8] */;
  %977 = shape_of(%var_4536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %978 = cast(%var_4536, dtype="uint8") /* ty=Tensor[(4, 4, 16), uint8] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %980 = bitwise_and(%978, %979) /* ty=Tensor[(4, 4, 16), uint8] */;
  %981 = cast(%980, dtype="float32") /* ty=Tensor[(4, 4, 16), float32] */;
  %982 = sqrt(%981) /* ty=Tensor[(4, 4, 16), float32] */;
  %983 = cast(%982, dtype="float32") /* ty=Tensor[(4, 4, 16), float32] */;
  %984 = erf(%983) /* ty=Tensor[(4, 4, 16), float32] */;
  %985 = cast(%var_4537, dtype="uint64") /* ty=Tensor[(4, 4, 16), uint64] */;
  %986 = shape_of(%var_4536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %987 = cast(%var_4536, dtype="uint64") /* ty=Tensor[(4, 4, 16), uint64] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %989 = subtract(%987, %988) /* ty=Tensor[(4, 4, 16), uint64] */;
  %990 = cast(%989, dtype="int64") /* ty=Tensor[(4, 4, 16), int64] */;
  %991 = shape_of(%984, dtype="int32") /* ty=Tensor[(3), int32] */;
  %992 = cast(%984, dtype="int64") /* ty=Tensor[(4, 4, 16), int64] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %994 = @func_4126() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(98), int32]) */;
  %995 = @func_2075() /* ty=(Tensor[(6, 15, 11), uint16],) */;
  %996 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %997 = %973.0;
  %998 = %974.0;
  %999 = %975.0;
  %1000 = logical_xor(%992, %993) /* ty=Tensor[(4, 4, 16), int64] */;
  %1001 = %994.1;
  %1002 = %995.0;
  %1003 = @func_3856() /* ty=Tensor[(6, 15, 11), float64] */;
  %1004 = %996.1;
  (%997, %998, %999, %1000, %1001, %1002, %1003, %1004)
}

def @func_4007() -> Tensor[(6, 15, 11), float64] {
  %1005 = @func_3030() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %1005.2
}

def @main(%var_10074: float32) -> (Tensor[(7, 1, 1), bool], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(4, 432), float32]) {
  %1006 = cast(%var_10074, dtype="bool") /* ty=bool */;
  %1007 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 1, 1), float32] */, dtype="bool") /* ty=Tensor[(7, 1, 1), bool] */;
  %1008 = @func_3616() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(15, 7, 6), bool], Tensor[(630), uint16]) */;
  %1009 = %1008.2;
  %1010 = cast(%1009, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %1011 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 432), float32] */, dtype="float32") /* ty=Tensor[(4, 432), float32] */;
  %1012 = reshape(%1010, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float32] */;
  %1013 = reshape(%1011, newshape=[1, 1728]) /* ty=Tensor[(1, 1728), float32] */;
  %1014 = @func_1182(%1012, %1013) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(1, 1, 9), float32], Tensor[(1, 1728), float32], Tensor[(6, 15, 11), float64]) */;
  %1015 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 432), float32] */, dtype="float32") /* ty=Tensor[(4, 432), float32] */;
  %1016 = greater_equal(%1006, %1007) /* ty=Tensor[(7, 1, 1), bool] */;
  %1017 = %1014.2;
  %1018 = tan(%1015) /* ty=Tensor[(4, 432), float32] */;
  (%1016, %1009, %1017, %1018)
}

def @func_2345(%var_2333: Tensor[(1, 14, 7), int32], %var_2334: Tensor[(2, 14, 7), int32]) -> (Tensor[(2, 14, 7), bool], Tensor[(6, 15, 11), float64], Tensor[(9, 10, 15), float64], Tensor[(1350), float64]) {
  %1019 = cast(%var_2333, dtype="bool") /* ty=Tensor[(1, 14, 7), bool] */;
  %1020 = cast(%var_2334, dtype="bool") /* ty=Tensor[(2, 14, 7), bool] */;
  %1021 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %1022 = cast(meta[relay.Constant][35] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %1023 = cast(meta[relay.Constant][35] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %1024 = reshape(%1022, newshape=[9, 10, 15]) /* ty=Tensor[(9, 10, 15), float64] */;
  %1025 = reshape(%1023, newshape=[9, 10, 15]) /* ty=Tensor[(9, 10, 15), float64] */;
  %1026 = @func_2286(%1024, %1025) /* ty=(Tensor[(9, 10, 15), float64],) */;
  %1027 = not_equal(%1019, %1020) /* ty=Tensor[(2, 14, 7), bool] */;
  %1028 = %1021.1;
  %1029 = %1026.0;
  (%1027, %1028, %1029, meta[relay.Constant][35] /* ty=Tensor[(1350), float64] */)
}

def @func_1346(%var_1327: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %1030 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %1031 = %1030.0;
  %1032 = cast(%var_1327, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %1033 = shape_of(%1031, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1034 = cast(%1031, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1036 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %1037 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %1038 = floor_divide(%1034, %1035) /* ty=Tensor[(6, 15, 11), float64] */;
  %1039 = %1036.0;
  %1040 = %1037.4;
  (%1038, %1039, %1040)
}

def @func_440() -> (Tensor[(6, 15, 11), float64],) {
  %1041 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %1042 = %1041.0;
  (%1042,)
}

def @func_6647(%var_6593: Tensor[(11, 5, 12), float64]) -> (Tensor[(11, 5, 12), float32], Tensor[(11, 5, 12), float32]) {
  %1043 = cast(%var_6593, dtype="float64") /* ty=Tensor[(11, 5, 12), float64] */;
  %1044 = sin(%1043) /* ty=Tensor[(11, 5, 12), float64] */;
  %1045 = cast(%var_6593, dtype="float32") /* ty=Tensor[(11, 5, 12), float32] */;
  %1046 = shape_of(%1044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1047 = cast(%1044, dtype="float32") /* ty=Tensor[(11, 5, 12), float32] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1049 = cast(%1044, dtype="float32") /* ty=Tensor[(11, 5, 12), float32] */;
  %1050 = mod(%1047, %1048) /* ty=Tensor[(11, 5, 12), float32] */;
  %1051 = sqrt(%1049) /* ty=Tensor[(11, 5, 12), float32] */;
  (%1050, %1051)
}

def @func_9635() -> (Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) {
  %1052 = @func_4126() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(98), int32]) */;
  %1053 = @func_7555() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(4, 12), float32], Tensor[(1728), float32]) */;
  %1054 = %1053.2;
  %1055 = cast(%1054, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %1056 = %1052.0;
  %1057 = asin(%1055) /* ty=Tensor[(1728), float32] */;
  (%1056, %1057)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1133(%var_1131: Tensor[(9, 4, 4), int32], %var_1132: Tensor[(9, 4, 4), int32]) -> Tensor[(9, 4, 4), int32] {
  @func_1129(%var_1131, %var_1132) /* ty=Tensor[(9, 4, 4), int32] */
}

def @func_5117() -> Tensor[(6, 15, 11), float64] {
  %0 = @func_3979() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %0.2
}

def @func_4818() -> (Tensor[(6, 15, 11), float64],) {
  @func_4816() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_5237() -> (Tensor[(1728), float32], Tensor[(6, 15, 11), float64]) {
  %1 = @func_3412() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(1728), float32]) */;
  %2 = @func_3097() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %3 = %1.1;
  %4 = %2.0;
  (%3, %4)
}

def @func_7828() -> Tensor[(6, 15, 11), float32] {
  @func_7826() /* ty=Tensor[(6, 15, 11), float32] */
}

def @func_6647(%var_6593: Tensor[(11, 5, 12), float64]) -> (Tensor[(11, 5, 12), float32], Tensor[(11, 5, 12), float32]) {
  %5 = cast(%var_6593, dtype="float64") /* ty=Tensor[(11, 5, 12), float64] */;
  %6 = sin(%5) /* ty=Tensor[(11, 5, 12), float64] */;
  %7 = cast(%var_6593, dtype="float32") /* ty=Tensor[(11, 5, 12), float32] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="float32") /* ty=Tensor[(11, 5, 12), float32] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %11 = cast(%6, dtype="float32") /* ty=Tensor[(11, 5, 12), float32] */;
  %12 = mod(%9, %10) /* ty=Tensor[(11, 5, 12), float32] */;
  %13 = sqrt(%11) /* ty=Tensor[(11, 5, 12), float32] */;
  (%12, %13)
}

def @func_1043(%var_1020: int16) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16) {
  %14 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %15 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %16 = %15.1;
  %17 = cast(%16, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %18 = cast(%var_1020, dtype="int16") /* ty=int16 */;
  %19 = reshape(%18, newshape=[]) /* ty=int16 */;
  %20 = @func_777(%19) /* ty=(Tensor[(13, 16, 3), int16], Tensor[(6, 15, 11), float64], Tensor[(13, 16, 3), float64], Tensor[(6, 15, 11), float64]) */;
  %21 = %14.1;
  %22 = acos(%17) /* ty=Tensor[(6, 15, 11), float32] */;
  %23 = %20.3;
  (%21, %22, %23, %var_1020)
}

def @func_1959() -> Tensor[(6, 15, 11), uint32] {
  @func_1957() /* ty=Tensor[(6, 15, 11), uint32] */
}

def @func_5119() -> Tensor[(6, 15, 11), float64] {
  @func_5117() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_4215(%var_4213: Tensor[(1, 13, 8), float32], %var_4214: Tensor[(1, 13, 8), float32]) -> Tensor[(?, 13, 8), float32] {
  @func_4211(%var_4213, %var_4214) /* ty=Tensor[(?, 13, 8), float32] */
}

def @func_5483() -> (Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %30 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
    %24 = @func_5032() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float32]) */;
    %25 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
    %26 = @func_5117() /* ty=Tensor[(6, 15, 11), float64] */;
    %27 = %24.1;
    %28 = %25.0;
    %29 = @func_2699() /* ty=Tensor[(6, 15, 11), float64] */;
    (%26, %27, %28, %29)
  };
  %30() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_2828() -> (Tensor[(6, 15, 11), float64], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %44 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
    %31 = @func_1879() /* ty=Tensor[(6, 15, 11), float32] */;
    %32 = cast(%31, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %33 = asinh(%32) /* ty=Tensor[(6, 15, 11), float64] */;
    %34 = cast(%33, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
    %35 = cast(meta[relay.Constant][0] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %36 = reshape(%34, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float32] */;
    %37 = reshape(%35, newshape=[1, 1728]) /* ty=Tensor[(1, 1728), float32] */;
    %38 = @func_1182(%36, %37) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(1, 1, 9), float32], Tensor[(1, 1728), float32], Tensor[(6, 15, 11), float64]) */;
    %39 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %40 = cast(%33, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %41 = %38.5;
    %42 = %39.1;
    %43 = sinh(%40) /* ty=Tensor[(6, 15, 11), float64] */;
    (%41, meta[relay.Constant][0] /* ty=Tensor[(1728), float32] */, %42, %43)
  };
  %44() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_3310() -> (Tensor[(6, 15, 11), float64],) {
  @func_3308() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_6796() -> Tensor[(6, 15, 11), uint32] {
  %45 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %45.4
}

def @func_1747() -> Tensor[(6, 15, 11), float64] {
  %47 = fn () -> Tensor[(6, 15, 11), float64] {
    %46 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
    %46.0
  };
  %47() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_890() -> (Tensor[(6, 15, 11), float64],) {
  %48 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %49 = %48.0;
  (%49,)
}

def @func_7219() -> Tensor[(6, 15, 11), float64] {
  @func_3856() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_2348(%var_2346: Tensor[(1, 14, 7), int32], %var_2347: Tensor[(2, 14, 7), int32]) -> (Tensor[(2, 14, 7), bool], Tensor[(6, 15, 11), float64], Tensor[(9, 10, 15), float64], Tensor[(1350), float64]) {
  %61 = fn (%var_2333: Tensor[(1, 14, 7), int32], %var_2334: Tensor[(2, 14, 7), int32]) -> (Tensor[(2, 14, 7), bool], Tensor[(6, 15, 11), float64], Tensor[(9, 10, 15), float64], Tensor[(1350), float64]) {
    %50 = cast(%var_2333, dtype="bool") /* ty=Tensor[(1, 14, 7), bool] */;
    %51 = cast(%var_2334, dtype="bool") /* ty=Tensor[(2, 14, 7), bool] */;
    %52 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %53 = cast(meta[relay.Constant][1] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %54 = cast(meta[relay.Constant][1] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %55 = reshape(%53, newshape=[9, 10, 15]) /* ty=Tensor[(9, 10, 15), float64] */;
    %56 = reshape(%54, newshape=[9, 10, 15]) /* ty=Tensor[(9, 10, 15), float64] */;
    %57 = @func_2286(%55, %56) /* ty=(Tensor[(9, 10, 15), float64],) */;
    %58 = not_equal(%50, %51) /* ty=Tensor[(2, 14, 7), bool] */;
    %59 = %52.1;
    %60 = %57.0;
    (%58, %59, %60, meta[relay.Constant][1] /* ty=Tensor[(1350), float64] */)
  };
  %61(%var_2346, %var_2347) /* ty=(Tensor[(2, 14, 7), bool], Tensor[(6, 15, 11), float64], Tensor[(9, 10, 15), float64], Tensor[(1350), float64]) */
}

def @func_1304() -> (Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) {
  %62 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %63 = cast(meta[relay.Constant][2] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %64 = reshape(%63, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %65 = @func_247(%64) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %66 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %67 = %66.1;
  %68 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %69 = %68.0;
  %70 = cast(%69, dtype="uint16") /* ty=Tensor[(6, 15, 11), uint16] */;
  %71 = shape_of(%67, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%67, dtype="uint16") /* ty=Tensor[(6, 15, 11), uint16] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %74 = @func_1108() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %75 = %62.0;
  %76 = %65.0;
  %77 = maximum(%72, %73) /* ty=Tensor[(6, 15, 11), uint16] */;
  %78 = %74.2;
  (%75, %76, meta[relay.Constant][2] /* ty=Tensor[(1728), float32] */, %77, %78)
}

def @func_8679() -> (Tensor[(6, 15, 11), float64],) {
  %81 = fn () -> (Tensor[(6, 15, 11), float64],) {
    %79 = @func_5965() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
    %80 = %79.1;
    (%80,)
  };
  %81() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_3924() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  @func_3922() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_4501() -> (Tensor[(6, 15, 11), float64],) {
  %82 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %83 = %82.1;
  (%83,)
}

def @func_4430() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %88 = fn () -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
    %84 = @func_3846() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
    %85 = @func_2795() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %86 = %84.0;
    %87 = %85.0;
    (%86, %87)
  };
  %88() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_6347(%var_6345: Tensor[(75, 9), bool], %var_6346: Tensor[(84), float64]) -> (Tensor[(2, 16), float32], Tensor[(6, 15, 11), float64], Tensor[(75, 9), bool], Tensor[(6, 15, 11), float32], Tensor[(14, 6), float64], Tensor[(84), float64]) {
  %101 = fn (%var_6325: Tensor[(75, 9), bool], %var_6338: Tensor[(84), float64]) -> (Tensor[(2, 16), float32], Tensor[(6, 15, 11), float64], Tensor[(75, 9), bool], Tensor[(6, 15, 11), float32], Tensor[(14, 6), float64], Tensor[(84), float64]) {
    %89 = @func_4965() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) */;
    %90 = cast(%var_6325, dtype="bool") /* ty=Tensor[(75, 9), bool] */;
    %91 = cast(%var_6325, dtype="bool") /* ty=Tensor[(75, 9), bool] */;
    %92 = reshape(%90, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
    %93 = reshape(%91, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
    %94 = @func_3890(%92, %93) /* ty=(Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) */;
    %95 = cast(%var_6338, dtype="float64") /* ty=Tensor[(84), float64] */;
    %96 = reshape(%95, newshape=[14, 6]) /* ty=Tensor[(14, 6), float64] */;
    %97 = %89.2;
    %98 = %94.1;
    %99 = @func_4065() /* ty=Tensor[(6, 15, 11), float32] */;
    %100 = @func_3283(%96) /* ty=Tensor[(14, 6), float64] */;
    (%97, %98, %var_6325, %99, %100, %var_6338)
  };
  %101(%var_6345, %var_6346) /* ty=(Tensor[(2, 16), float32], Tensor[(6, 15, 11), float64], Tensor[(75, 9), bool], Tensor[(6, 15, 11), float32], Tensor[(14, 6), float64], Tensor[(84), float64]) */
}

def @func_9902() -> Tensor[(6, 15, 11), float64] {
  @func_9900() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_5607(%var_5595: Tensor[(12, 1, 9), float32]) -> (Tensor[(12, 1, 9), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32]) {
  %102 = cast(0.546735f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %103 = cast(%var_5595, dtype="float32") /* ty=Tensor[(12, 1, 9), float32] */;
  %104 = cast(meta[relay.Constant][3] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %105 = reshape(%104, newshape=[1, 8, 4]) /* ty=Tensor[(1, 8, 4), float32] */;
  %106 = @func_3903(%105) /* ty=(Tensor[(1, 8, 4), float32],) */;
  %107 = mod(%102, %103) /* ty=Tensor[(12, 1, 9), float32] */;
  %108 = %106.0;
  (%107, %108, meta[relay.Constant][3] /* ty=Tensor[(32), float32] */)
}

def @func_2545(%var_2457: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
  %109 = @func_1108() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %110 = %109.1;
  %111 = cast(%var_2457, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
  %112 = shape_of(%110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%110, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %115 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %116 = @func_737() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %117 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %118 = cast(%110, dtype="uint64") /* ty=Tensor[(6, 15, 11), uint64] */;
  %119 = shape_of(%var_2457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%var_2457, dtype="uint64") /* ty=Tensor[(6, 15, 11), uint64] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %122 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %123 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %124 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %125 = less_equal(%113, %114) /* ty=Tensor[(6, 15, 11), bool] */;
  %126 = %115.0;
  %127 = %116.0;
  %128 = %117.0;
  %129 = bitwise_xor(%120, %121) /* ty=Tensor[(6, 15, 11), uint64] */;
  %130 = %122.0;
  %131 = %123.1;
  %132 = %124.1;
  (%125, %126, %127, %128, %129, %130, %131, %132)
}

def @func_9581() -> Tensor[(6, 15, 11), float64] {
  %133 = @func_5730() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float64]) */;
  %133.3
}

def @func_8287() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %138 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
    %134 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %135 = @func_7422() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %136 = %134.0;
    %137 = %135.0;
    (%136, %137)
  };
  %138() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_9766(%var_9764: Tensor[(675), bool]) -> (Tensor[(6, 15, 11), float64], Tensor[(675), uint8]) {
  @func_9763(%var_9764) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(675), uint8]) */
}

def @func_9989() -> Tensor[(6, 15, 11), float64] {
  %139 = @func_6295() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %139.3
}

def @func_3831() -> (Tensor[(6, 15, 11), float64],) {
  %142 = fn () -> (Tensor[(6, 15, 11), float64],) {
    %140 = @func_2795() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %141 = %140.0;
    (%141,)
  };
  %142() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_4651(%var_4649: Tensor[(4, 4, 16), uint8], %var_4650: Tensor[(4, 4, 16), uint8]) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(4, 4, 16), int64], Tensor[(98), int32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  @func_4647(%var_4649, %var_4650) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(4, 4, 16), int64], Tensor[(98), int32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */
}

def @func_9960() -> Tensor[(6, 15, 11), float64] {
  %143 = @func_9070() /* ty=(Tensor[(98), int32], Tensor[(6, 15, 11), float64]) */;
  %143.1
}

def @func_7227() -> Tensor[(6, 15, 11), float64] {
  %144 = @func_2795() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %144.0
}

def @func_5967() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  @func_5965() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_9900() -> Tensor[(6, 15, 11), float64] {
  %145 = @func_8572() /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float64]) */;
  %145.1
}

def @func_2024(%var_2014: uint64, %var_2015: Tensor[(12, 10, 14), uint64]) -> (Tensor[(12, 10, 14), uint64], Tensor[(12, 10, 14), float64]) {
  %146 = cast(%var_2014, dtype="uint64") /* ty=uint64 */;
  %147 = cast(%var_2015, dtype="uint64") /* ty=Tensor[(12, 10, 14), uint64] */;
  %148 = cast(%var_2015, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
  %149 = asinh(%148) /* ty=Tensor[(12, 10, 14), float32] */;
  %150 = cast(%149, dtype="float64") /* ty=Tensor[(12, 10, 14), float64] */;
  %151 = multiply(%146, %147) /* ty=Tensor[(12, 10, 14), uint64] */;
  %152 = sinh(%150) /* ty=Tensor[(12, 10, 14), float64] */;
  (%151, %152)
}

def @func_892() -> (Tensor[(6, 15, 11), float64],) {
  @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_3308() -> (Tensor[(6, 15, 11), float64],) {
  %153 = @func_2111() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %154 = %153.0;
  (%154,)
}

def @func_919(%var_908: Tensor[(13, 1, 4), float32]) -> (Tensor[(13, 1, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %155 = cast(%var_908, dtype="float32") /* ty=Tensor[(13, 1, 4), float32] */;
  %156 = @func_842() /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %157 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %158 = log10(%155) /* ty=Tensor[(13, 1, 4), float32] */;
  %159 = %156.2;
  %160 = %157.0;
  (%158, %159, %160)
}

def @func_1957() -> Tensor[(6, 15, 11), uint32] {
  %161 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %161.4
}

def @func_3980() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %168 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
    %162 = @func_3030() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
    %163 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
    %164 = @func_3256() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) */;
    %165 = %162.2;
    %166 = %163.0;
    %167 = %164.0;
    (%165, %166, %167)
  };
  %168() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_3286(%var_3284: Tensor[(14, 6), float64]) -> Tensor[(14, 6), float64] {
  @func_3283(%var_3284) /* ty=Tensor[(14, 6), float64] */
}

def @func_3856() -> Tensor[(6, 15, 11), float64] {
  %169 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %169.0
}

def @func_9830() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  @func_9828() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_5079(%var_5073: Tensor[(6, 15, 11), uint16]) -> (Tensor[(6, 15, 11), float32],) {
  %170 = @func_2075() /* ty=(Tensor[(6, 15, 11), uint16],) */;
  %171 = %170.0;
  %172 = cast(%var_5073, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%171, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %176 = mod(%174, %175) /* ty=Tensor[(6, 15, 11), float32] */;
  (%176,)
}

def @func_408() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
  @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */
}

def @func_3099() -> (Tensor[(6, 15, 11), float64],) {
  @func_3097() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_4152(%var_4150: Tensor[(32), float32]) -> (Tensor[(6, 15, 11), float32], Tensor[(1728), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32]) {
  @func_4149(%var_4150) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(1728), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32]) */
}

def @func_4966() -> (Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) {
  %190 = fn () -> (Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) {
    %177 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %178 = %177.0;
    %179 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %180 = %179.0;
    %181 = cast(%180, dtype="uint16") /* ty=Tensor[(6, 15, 11), uint16] */;
    %182 = shape_of(%178, dtype="int32") /* ty=Tensor[(3), int32] */;
    %183 = cast(%178, dtype="uint16") /* ty=Tensor[(6, 15, 11), uint16] */;
    %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %185 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 16), float32] */;
    %186 = reshape(%185, newshape=[1, 8, 4]) /* ty=Tensor[(1, 8, 4), float32] */;
    %187 = @func_3903(%186) /* ty=(Tensor[(1, 8, 4), float32],) */;
    %188 = multiply(%183, %184) /* ty=Tensor[(6, 15, 11), uint16] */;
    %189 = %187.0;
    (%188, %189, meta[relay.Constant][4] /* ty=Tensor[(2, 16), float32] */)
  };
  %190() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) */
}

def @func_9605() -> (Tensor[(1728), float32], Tensor[(6, 15, 11), uint32]) {
  %191 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
  %192 = %191.0;
  %193 = @func_6796() /* ty=Tensor[(6, 15, 11), uint32] */;
  (%192, %193)
}

def @func_8124() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %200 = fn () -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
    %194 = @func_4252() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
    %195 = @func_5215() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(2, 16), float32], Tensor[(6, 15, 11), uint32]) */;
    %196 = %195.0;
    %197 = cast(%196, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %198 = %194.1;
    %199 = atanh(%197) /* ty=Tensor[(6, 15, 11), float64] */;
    (%198, %199)
  };
  %200() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_4037() -> (Tensor[(1728), float32],) {
  @func_4035() /* ty=(Tensor[(1728), float32],) */
}

def @func_7860() -> (Tensor[(4, 12), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %201 = @func_5032() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float32]) */;
  %202 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %203 = @func_5965() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %204 = %201.2;
  %205 = %202.0;
  %206 = %203.1;
  (%204, %205, %206)
}

def @func_249(%var_248: Tensor[(12, 16, 9), float32]) -> (Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) {
  %214 = fn (%var_223: Tensor[(12, 16, 9), float32]) -> (Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) {
    %207 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 1, 9), float32] */;
    %208 = cast(%var_223, dtype="float32") /* ty=Tensor[(12, 16, 9), float32] */;
    %209 = divide(%207, %208) /* ty=Tensor[(12, 16, 9), float32] */;
    %210 = cast(%209, dtype="float32") /* ty=Tensor[(12, 16, 9), float32] */;
    %211 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 1, 9), float32] */;
    %212 = log2(%210) /* ty=Tensor[(12, 16, 9), float32] */;
    %213 = atanh(%211) /* ty=Tensor[(1, 1, 9), float32] */;
    (%212, %213)
  };
  %214(%var_248) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */
}

def @func_8847() -> (Tensor[(6, 15, 11), float32],) {
  %215 = @func_6295() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %216 = %215.2;
  (%216,)
}

def @func_9230() -> Tensor[(6, 15, 11), float32] {
  @func_9228() /* ty=Tensor[(6, 15, 11), float32] */
}

def @func_6416() -> Tensor[(6, 15, 11), float32] {
  @func_6414() /* ty=Tensor[(6, 15, 11), float32] */
}

def @func_5528() -> (Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64]) {
  %221 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64]) {
    %217 = @func_3922() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %218 = @func_5482() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
    %219 = %217.1;
    %220 = %218.1;
    (%219, %220)
  };
  %221() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64]) */
}

def @func_7826() -> Tensor[(6, 15, 11), float32] {
  %222 = @func_4252() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %222.0
}

def @func_7935() -> Tensor[(6, 15, 11), float64] {
  %223 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %223.1
}

def @func_9564() -> (Tensor[(6, 15, 11), float64],) {
  %226 = fn () -> (Tensor[(6, 15, 11), float64],) {
    %224 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %225 = %224.0;
    (%225,)
  };
  %226() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_10033() -> (Tensor[(6, 15, 11), float64],) {
  %227 = @func_6295() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %228 = %227.3;
  (%228,)
}

def @func_4910(%var_4909: Tensor[(52), float32]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), float64]) {
  %237 = fn (%var_4895: Tensor[(52), float32]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), float64]) {
    %229 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %230 = cast(%var_4895, dtype="float32") /* ty=Tensor[(52), float32] */;
    %231 = reshape(%230, newshape=[52]) /* ty=Tensor[(52), float32] */;
    %232 = @func_2940(%231) /* ty=(Tensor[(6, 15, 11), float64], int16, int16, Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), uint32]) */;
    %233 = @func_3922() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %234 = %229.0;
    %235 = %232.0;
    %236 = %233.0;
    (%234, %235, %var_4895, %236)
  };
  %237(%var_4909) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_2700() -> Tensor[(6, 15, 11), float64] {
  %239 = fn () -> Tensor[(6, 15, 11), float64] {
    %238 = @func_2111() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %238.0
  };
  %239() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_9355() -> (Tensor[(6, 15, 11), float64],) {
  %240 = @func_5573() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %241 = %240.0;
  (%241,)
}

def @func_5033() -> (Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float32]) {
  %247 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float32]) {
    %242 = @func_4501() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %243 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
    %244 = reshape(%243, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float32] */;
    %245 = %242.0;
    %246 = @func_1714(%244) /* ty=Tensor[(4, 3, 4), float64] */;
    (%245, %246, meta[relay.Constant][6] /* ty=Tensor[(4, 12), float32] */)
  };
  %247() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float32]) */
}

def @func_10035() -> (Tensor[(6, 15, 11), float64],) {
  @func_10033() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_538() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %254 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
    %248 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %249 = %248.0;
    %250 = cast(%249, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %251 = reshape(%250, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
    %252 = @func_162(%251) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %253 = %252.2;
    (%249, %253)
  };
  %254() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_4647(%var_4536: Tensor[(4, 4, 16), uint8], %var_4537: Tensor[(4, 4, 16), uint8]) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(4, 4, 16), int64], Tensor[(98), int32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %255 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %256 = @func_3097() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %257 = @func_2111() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %258 = cast(%var_4537, dtype="uint8") /* ty=Tensor[(4, 4, 16), uint8] */;
  %259 = shape_of(%var_4536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%var_4536, dtype="uint8") /* ty=Tensor[(4, 4, 16), uint8] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %262 = bitwise_and(%260, %261) /* ty=Tensor[(4, 4, 16), uint8] */;
  %263 = cast(%262, dtype="float32") /* ty=Tensor[(4, 4, 16), float32] */;
  %264 = sqrt(%263) /* ty=Tensor[(4, 4, 16), float32] */;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(4, 4, 16), float32] */;
  %266 = erf(%265) /* ty=Tensor[(4, 4, 16), float32] */;
  %267 = cast(%var_4537, dtype="uint64") /* ty=Tensor[(4, 4, 16), uint64] */;
  %268 = shape_of(%var_4536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%var_4536, dtype="uint64") /* ty=Tensor[(4, 4, 16), uint64] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %271 = subtract(%269, %270) /* ty=Tensor[(4, 4, 16), uint64] */;
  %272 = cast(%271, dtype="int64") /* ty=Tensor[(4, 4, 16), int64] */;
  %273 = shape_of(%266, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%266, dtype="int64") /* ty=Tensor[(4, 4, 16), int64] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %276 = @func_4126() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(98), int32]) */;
  %277 = @func_2075() /* ty=(Tensor[(6, 15, 11), uint16],) */;
  %278 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %279 = %255.0;
  %280 = %256.0;
  %281 = %257.0;
  %282 = logical_xor(%274, %275) /* ty=Tensor[(4, 4, 16), int64] */;
  %283 = %276.1;
  %284 = %277.0;
  %285 = @func_3856() /* ty=Tensor[(6, 15, 11), float64] */;
  %286 = %278.1;
  (%279, %280, %281, %282, %283, %284, %285, %286)
}

def @func_6048(%var_6047: Tensor[(10, 10, 4), float64]) -> (Tensor[(10, 10, 4), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, Tensor[(675), bool]) {
  %299 = fn (%var_6013: Tensor[(10, 10, 4), float64]) -> (Tensor[(10, 10, 4), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, Tensor[(675), bool]) {
    %287 = cast(%var_6013, dtype="float64") /* ty=Tensor[(10, 10, 4), float64] */;
    %288 = @func_4816() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %289 = cast(meta[relay.Constant][7] /* ty=Tensor[(675), bool] */, dtype="bool") /* ty=Tensor[(675), bool] */;
    %290 = cast(meta[relay.Constant][7] /* ty=Tensor[(675), bool] */, dtype="bool") /* ty=Tensor[(675), bool] */;
    %291 = reshape(%289, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
    %292 = reshape(%290, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
    %293 = @func_3890(%291, %292) /* ty=(Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) */;
    %294 = exp(%287) /* ty=Tensor[(10, 10, 4), float64] */;
    %295 = @func_1746() /* ty=Tensor[(6, 15, 11), float64] */;
    %296 = @func_4007() /* ty=Tensor[(6, 15, 11), float64] */;
    %297 = %288.0;
    %298 = %293.3;
    (%294, %295, %296, %297, %298, meta[relay.Constant][7] /* ty=Tensor[(675), bool] */)
  };
  %299(%var_6047) /* ty=(Tensor[(10, 10, 4), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, Tensor[(675), bool]) */
}

def @func_9141() -> (Tensor[(6, 15, 11), float64], int16, Tensor[(1728), float32], int16) {
  %310 = fn () -> (Tensor[(6, 15, 11), float64], int16, Tensor[(1728), float32], int16) {
    %300 = @func_6766() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %301 = cast(meta[relay.Constant][8] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %302 = cast(meta[relay.Constant][9] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %303 = %300.0;
    %304 = cast(%303, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %305 = reshape(%301, newshape=[48, 36]) /* ty=Tensor[(48, 36), float32] */;
    %306 = reshape(%302, newshape=[]) /* ty=int16 */;
    %307 = reshape(%304, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
    %308 = @func_3951(%305, %306, %307) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(48, 36), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), bool]) */;
    %309 = %308.4;
    (%303, %309, meta[relay.Constant][8] /* ty=Tensor[(1728), float32] */, meta[relay.Constant][9] /* ty=int16 */)
  };
  %310() /* ty=(Tensor[(6, 15, 11), float64], int16, Tensor[(1728), float32], int16) */
}

def @func_2197(%var_2196: uint64) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(12, 10, 14), float64], uint64, Tensor[(1680), uint64], Tensor[(6, 15, 11), float64]) {
  %323 = fn (%var_2186: uint64) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(12, 10, 14), float64], uint64, Tensor[(1680), uint64], Tensor[(6, 15, 11), float64]) {
    %311 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %312 = @func_2111() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %313 = cast(%var_2186, dtype="uint64") /* ty=uint64 */;
    %314 = cast(meta[relay.Constant][10] /* ty=Tensor[(1680), uint64] */, dtype="uint64") /* ty=Tensor[(1680), uint64] */;
    %315 = reshape(%313, newshape=[]) /* ty=uint64 */;
    %316 = reshape(%314, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), uint64] */;
    %317 = @func_2024(%315, %316) /* ty=(Tensor[(12, 10, 14), uint64], Tensor[(12, 10, 14), float64]) */;
    %318 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %319 = %311.0;
    %320 = %312.0;
    %321 = %317.1;
    %322 = %318.0;
    (%319, %320, %321, %var_2186, meta[relay.Constant][10] /* ty=Tensor[(1680), uint64] */, %322)
  };
  %323(%var_2196) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(12, 10, 14), float64], uint64, Tensor[(1680), uint64], Tensor[(6, 15, 11), float64]) */
}

def @func_3426() -> Tensor[(6, 15, 11), float64] {
  @func_3424() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_3032() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  @func_3030() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_1716(%var_1715: Tensor[(4, 3, 4), float32]) -> Tensor[(4, 3, 4), float64] {
  %330 = fn (%var_1698: Tensor[(4, 3, 4), float32]) -> Tensor[(4, 3, 4), float64] {
    %324 = cast(%var_1698, dtype="float32") /* ty=Tensor[(4, 3, 4), float32] */;
    %325 = sin(%324) /* ty=Tensor[(4, 3, 4), float32] */;
    %326 = cast(%325, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
    %327 = shape_of(%var_1698, dtype="int32") /* ty=Tensor[(3), int32] */;
    %328 = cast(%var_1698, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
    %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%328, %329) /* ty=Tensor[(4, 3, 4), float64] */
  };
  %330(%var_1715) /* ty=Tensor[(4, 3, 4), float64] */
}

def @func_6999() -> (Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32]) {
  %331 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %332 = @func_3030() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %333 = %331.3;
  %334 = %332.1;
  (%333, %334)
}

def @func_9295() -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float64]) {
  %338 = fn () -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float64]) {
    %335 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %336 = @func_8042() /* ty=Tensor[(6, 15, 11), uint32] */;
    %337 = %335.0;
    (%336, %337)
  };
  %338() /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float64]) */
}

def @func_9870() -> Tensor[(3, 15, 16), bool] {
  %339 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 15, 16), int16] */, dtype="bool") /* ty=Tensor[(3, 15, 16), bool] */;
  %340 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(3, 15, 16), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 15, 16), int16] */, dtype="bool") /* ty=Tensor[(3, 15, 16), bool] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%341, %342) /* ty=Tensor[(3, 15, 16), bool] */
}

def @func_5730() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float64]) {
  %343 = @func_737() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %344 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %345 = @func_2075() /* ty=(Tensor[(6, 15, 11), uint16],) */;
  %346 = @func_3308() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %347 = %343.2;
  %348 = %344.0;
  %349 = %345.0;
  %350 = %346.0;
  (%347, %348, %349, %350)
}

def @func_922(%var_920: Tensor[(13, 1, 4), float32]) -> (Tensor[(13, 1, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  @func_919(%var_920) /* ty=(Tensor[(13, 1, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_7453(%var_7452: Tensor[(10, 13, 7), float64]) -> (Tensor[(10, 13, 7), float64],) {
  %354 = fn (%var_7444: Tensor[(10, 13, 7), float64]) -> (Tensor[(10, 13, 7), float64],) {
    %351 = cast(9.84852f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %352 = cast(%var_7444, dtype="float64") /* ty=Tensor[(10, 13, 7), float64] */;
    %353 = minimum(%351, %352) /* ty=Tensor[(10, 13, 7), float64] */;
    (%353,)
  };
  %354(%var_7452) /* ty=(Tensor[(10, 13, 7), float64],) */
}

def @func_9872() -> Tensor[(3, 15, 16), bool] {
  @func_9870() /* ty=Tensor[(3, 15, 16), bool] */
}

def @func_7370(%var_7368: Tensor[(7, 1, 7), bool]) -> Tensor[(7, ?, 7), bool] {
  @func_7367(%var_7368) /* ty=Tensor[(7, ?, 7), bool] */
}

def @func_8425() -> Tensor[(1728), float64] {
  %358 = fn () -> Tensor[(1728), float64] {
    %355 = @func_7044() /* ty=(Tensor[(1728), float32],) */;
    %356 = %355.0;
    %357 = cast(%356, dtype="float64") /* ty=Tensor[(1728), float64] */;
    sigmoid(%357) /* ty=Tensor[(1728), float64] */
  };
  %358() /* ty=Tensor[(1728), float64] */
}

def @func_1407() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %359 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %360 = %359.0;
  %361 = cast(%360, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %362 = reshape(%361, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %363 = @func_1346(%362) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %364 = %363.1;
  (%360, %364)
}

def @func_9962() -> Tensor[(6, 15, 11), float64] {
  @func_9960() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_9380() -> (Tensor[(6, 15, 11), float64],) {
  %367 = fn () -> (Tensor[(6, 15, 11), float64],) {
    %365 = @func_8286() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %366 = %365.0;
    (%366,)
  };
  %367() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_5372() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %368 = @func_4805() /* ty=(Tensor[(6, 15, 11), uint32],) */;
  %369 = @func_5153() /* ty=Tensor[(6, 15, 11), float64] */;
  %370 = %368.0;
  (%369, %370)
}

def @func_6414() -> Tensor[(6, 15, 11), float32] {
  %371 = @func_6268() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %371.0
}

def @func_7736(%var_7734: Tensor[(13, 12, 13), float64]) -> (Tensor[(13, 12, 13), float64], Tensor[(6, 15, 11), float64], Tensor[(1728), float32], Tensor[(13, 12, 13), float32]) {
  @func_7733(%var_7734) /* ty=(Tensor[(13, 12, 13), float64], Tensor[(6, 15, 11), float64], Tensor[(1728), float32], Tensor[(13, 12, 13), float32]) */
}

def @func_9851() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %372 = @func_4065() /* ty=Tensor[(6, 15, 11), float32] */;
  %373 = @func_7935() /* ty=Tensor[(6, 15, 11), float64] */;
  (%372, %373)
}

def @func_6231() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %378 = fn () -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
    %374 = @func_4252() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
    %375 = @func_1640() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
    %376 = %374.1;
    %377 = %375.1;
    (%376, %377)
  };
  %378() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_648(%var_646: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64]) {
  @func_645(%var_646) /* ty=(Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64]) */
}

def @func_6440() -> Tensor[(6, 15, 11), float32] {
  %379 = @func_4308() /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(1, 52), float32], Tensor[(6, 15, 11), uint32], Tensor[(990), float64], Tensor[(96), float32], Tensor[(6, 15, 11), float32]) */;
  %379.8
}

def @func_5889(%var_5870: Tensor[(11, 6, 9), float64], %var_5871: Tensor[(11, 6, 9), float64]) -> Tensor[(11, 6, 9), float32] {
  %380 = cast(%var_5871, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
  %381 = shape_of(%var_5870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%var_5870, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %384 = divide(%382, %383) /* ty=Tensor[(11, 6, 9), float64] */;
  %385 = cast(%384, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
  %386 = shape_of(%var_5871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%var_5871, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%387, %388) /* ty=Tensor[(11, 6, 9), float32] */
}

def @func_8763(%var_8708: Tensor[(3, 16, 4), float32], %var_8740: Tensor[(660), float64]) -> (Tensor[(6, 15, 11), float32], Tensor[(11, 5, 12), float32], Tensor[(660), float64], Tensor[(2, 16), float32], Tensor[(6, 15, 11), float64], Tensor[(3, 16, 4), bool]) {
  %389 = @func_737() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %390 = cast(%var_8740, dtype="float64") /* ty=Tensor[(660), float64] */;
  %391 = reshape(%390, newshape=[11, 5, 12]) /* ty=Tensor[(11, 5, 12), float64] */;
  %392 = @func_6647(%391) /* ty=(Tensor[(11, 5, 12), float32], Tensor[(11, 5, 12), float32]) */;
  %393 = @func_4965() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) */;
  %394 = @func_5482() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %395 = cast(%var_8708, dtype="float32") /* ty=Tensor[(3, 16, 4), float32] */;
  %396 = sinh(%395) /* ty=Tensor[(3, 16, 4), float32] */;
  %397 = cast(%var_8708, dtype="bool") /* ty=Tensor[(3, 16, 4), bool] */;
  %398 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%396, dtype="bool") /* ty=Tensor[(3, 16, 4), bool] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %401 = %389.1;
  %402 = %392.0;
  %403 = %393.2;
  %404 = %394.0;
  %405 = logical_and(%399, %400) /* ty=Tensor[(3, 16, 4), bool] */;
  (%401, %402, %var_8740, %403, %404, %405)
}

def @func_7093() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  @func_7091() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_6268() -> (Tensor[(6, 15, 11), float32],) {
  %406 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %407 = %406.0;
  (%407,)
}

def @func_843() -> (Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %418 = fn () -> (Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
    %408 = cast(meta[relay.Constant][13] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %409 = reshape(%408, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
    %410 = @func_247(%409) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
    %411 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
    %412 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %413 = %412.0;
    %414 = cast(%413, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %415 = %410.0;
    %416 = %411.1;
    %417 = erf(%414) /* ty=Tensor[(6, 15, 11), float64] */;
    (%415, meta[relay.Constant][13] /* ty=Tensor[(1728), float32] */, %416, %417)
  };
  %418() /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_5934(%var_5932: Tensor[(7, 14, 3), float64], %var_5933: Tensor[(7, 14, 3), float64]) -> Tensor[(7, 14, 3), float64] {
  %423 = fn (%var_5922: Tensor[(7, 14, 3), float64], %var_5923: Tensor[(7, 14, 3), float64]) -> Tensor[(7, 14, 3), float64] {
    %419 = cast(%var_5923, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
    %420 = shape_of(%var_5922, dtype="int32") /* ty=Tensor[(3), int32] */;
    %421 = cast(%var_5922, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
    %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%421, %422) /* ty=Tensor[(7, 14, 3), float64] */
  };
  %423(%var_5932, %var_5933) /* ty=Tensor[(7, 14, 3), float64] */
}

def @func_581() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */
}

def @func_3922() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %424 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %425 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %426 = %424.0;
  %427 = %425.0;
  (%426, %427)
}

def @func_4149(%var_4146: Tensor[(32), float32]) -> (Tensor[(6, 15, 11), float32], Tensor[(1728), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32]) {
  %428 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
  %429 = cast(%var_4146, dtype="float32") /* ty=Tensor[(32), float32] */;
  %430 = reshape(%429, newshape=[1, 8, 4]) /* ty=Tensor[(1, 8, 4), float32] */;
  %431 = @func_3903(%430) /* ty=(Tensor[(1, 8, 4), float32],) */;
  %432 = @func_1879() /* ty=Tensor[(6, 15, 11), float32] */;
  %433 = %428.0;
  %434 = %431.0;
  (%432, %433, %434, %var_4146)
}

def @func_5573() -> (Tensor[(6, 15, 11), float64],) {
  %435 = @func_3856() /* ty=Tensor[(6, 15, 11), float64] */;
  (%435,)
}

def @func_6156(%var_6154: Tensor[(9, 8, 11), uint8], %var_6155: Tensor[(9, 8, 11), uint8]) -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int64]) {
  @func_6152(%var_6154, %var_6155) /* ty=(Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int64]) */
}

def @func_1046(%var_1044: int16) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16) {
  @func_1043(%var_1044) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16) */
}

def @func_7644() -> Tensor[(6, 15, 11), float64] {
  %437 = fn () -> Tensor[(6, 15, 11), float64] {
    %436 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %436.0
  };
  %437() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_2943(%var_2941: Tensor[(52), float32]) -> (Tensor[(6, 15, 11), float64], int16, int16, Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), uint32]) {
  @func_2940(%var_2941) /* ty=(Tensor[(6, 15, 11), float64], int16, int16, Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), uint32]) */
}

def @func_2721() -> (Tensor[(6, 15, 11), float64], Tensor[(1350), float64], Tensor[(98), int32], Tensor[(7, 28), int32]) {
  @func_2719() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1350), float64], Tensor[(98), int32], Tensor[(7, 28), int32]) */
}

def @func_5374() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  @func_5372() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */
}

def @func_9473(%var_9471: int16) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(13, 16, 3), int16], int16) {
  @func_9470(%var_9471) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(13, 16, 3), int16], int16) */
}

def @func_3424() -> Tensor[(6, 15, 11), float64] {
  %438 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %438.0
}

def @func_7407(%var_7406: Tensor[(11, 15, 4), uint16]) -> (Tensor[(11, 15, 4), bool],) {
  %449 = fn (%var_7393: Tensor[(11, 15, 4), uint16]) -> (Tensor[(11, 15, 4), bool],) {
    %439 = cast(%var_7393, dtype="uint16") /* ty=Tensor[(11, 15, 4), uint16] */;
    %440 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(11, 15, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %441 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 15, 4), uint16] */, dtype="uint16") /* ty=Tensor[(11, 15, 4), uint16] */;
    %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %443 = multiply(%441, %442) /* ty=Tensor[(11, 15, 4), uint16] */;
    %444 = cast(%var_7393, dtype="bool") /* ty=Tensor[(11, 15, 4), bool] */;
    %445 = shape_of(%443, dtype="int32") /* ty=Tensor[(3), int32] */;
    %446 = cast(%443, dtype="bool") /* ty=Tensor[(11, 15, 4), bool] */;
    %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %448 = not_equal(%446, %447) /* ty=Tensor[(11, 15, 4), bool] */;
    (%448,)
  };
  %449(%var_7406) /* ty=(Tensor[(11, 15, 4), bool],) */
}

def @func_2266(%var_2235: Tensor[(6, 15, 11), float64], %var_2243: Tensor[(2, 864), float32], %var_2264: uint64) -> (Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(2, 864), float32], Tensor[(12, 10, 14), float64], uint64) {
  %450 = @func_1407() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %451 = %450.0;
  %452 = cast(%var_2235, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%451, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %456 = cast(%var_2243, dtype="float32") /* ty=Tensor[(2, 864), float32] */;
  %457 = reshape(%456, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %458 = @func_247(%457) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %459 = cast(%var_2264, dtype="uint64") /* ty=uint64 */;
  %460 = reshape(%459, newshape=[]) /* ty=uint64 */;
  %461 = @func_2195(%460) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(12, 10, 14), float64], uint64, Tensor[(1680), uint64], Tensor[(6, 15, 11), float64]) */;
  %462 = floor_mod(%454, %455) /* ty=Tensor[(6, 15, 11), float64] */;
  %463 = %458.0;
  %464 = %461.2;
  (%462, %463, %var_2243, %464, %var_2264)
}

def @func_7862() -> (Tensor[(4, 12), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  @func_7860() /* ty=(Tensor[(4, 12), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_5829() -> (Tensor[(15, 5, 5), float64], Tensor[(1728), float32]) {
  %469 = fn () -> (Tensor[(15, 5, 5), float64], Tensor[(1728), float32]) {
    %465 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 5, 5), float64] */, dtype="float64") /* ty=Tensor[(15, 5, 5), float64] */;
    %466 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
    %467 = asinh(%465) /* ty=Tensor[(15, 5, 5), float64] */;
    %468 = %466.0;
    (%467, %468)
  };
  %469() /* ty=(Tensor[(15, 5, 5), float64], Tensor[(1728), float32]) */
}

def @func_8189() -> (Tensor[(1728), float32], Tensor[(98), float32], Tensor[(98), float64]) {
  %480 = fn () -> (Tensor[(1728), float32], Tensor[(98), float32], Tensor[(98), float64]) {
    %470 = @func_1493() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */;
    %471 = @func_8031() /* ty=(Tensor[(98), int32], Tensor[(1728), float32]) */;
    %472 = %471.0;
    %473 = cast(%472, dtype="float64") /* ty=Tensor[(98), float64] */;
    %474 = exp(%473) /* ty=Tensor[(98), float64] */;
    %475 = cast(%474, dtype="float32") /* ty=Tensor[(98), float32] */;
    %476 = cast(%474, dtype="float64") /* ty=Tensor[(98), float64] */;
    %477 = %470.2;
    %478 = acos(%475) /* ty=Tensor[(98), float32] */;
    %479 = sqrt(%476) /* ty=Tensor[(98), float64] */;
    (%477, %478, %479)
  };
  %480() /* ty=(Tensor[(1728), float32], Tensor[(98), float32], Tensor[(98), float64]) */
}

def @func_3719() -> (Tensor[(6, 15, 11), float64], Tensor[(13, 1, 4), float32], Tensor[(13, ?, 4), float64]) {
  %493 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(13, 1, 4), float32], Tensor[(13, ?, 4), float64]) {
    %481 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 4), float32] */;
    %482 = reshape(%481, newshape=[13, 1, 4]) /* ty=Tensor[(13, 1, 4), float32] */;
    %483 = @func_919(%482) /* ty=(Tensor[(13, 1, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %484 = %483.0;
    %485 = cast(%484, dtype="float32") /* ty=Tensor[(13, 1, 4), float32] */;
    %486 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 4), float32] */, dtype="float64") /* ty=Tensor[(13, 4), float64] */;
    %487 = shape_of(%484, dtype="int32") /* ty=Tensor[(3), int32] */;
    %488 = cast(%484, dtype="float64") /* ty=Tensor[(13, 1, 4), float64] */;
    %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %490 = @func_2699() /* ty=Tensor[(6, 15, 11), float64] */;
    %491 = acosh(%485) /* ty=Tensor[(13, 1, 4), float32] */;
    %492 = power(%488, %489) /* ty=Tensor[(13, ?, 4), float64] */;
    (%490, %491, %492)
  };
  %493() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(13, 1, 4), float32], Tensor[(13, ?, 4), float64]) */
}

def @func_9470(%var_9464: int16) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(13, 16, 3), int16], int16) {
  %494 = @func_9070() /* ty=(Tensor[(98), int32], Tensor[(6, 15, 11), float64]) */;
  %495 = @func_5215() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(2, 16), float32], Tensor[(6, 15, 11), uint32]) */;
  %496 = cast(%var_9464, dtype="int16") /* ty=int16 */;
  %497 = reshape(%496, newshape=[]) /* ty=int16 */;
  %498 = @func_777(%497) /* ty=(Tensor[(13, 16, 3), int16], Tensor[(6, 15, 11), float64], Tensor[(13, 16, 3), float64], Tensor[(6, 15, 11), float64]) */;
  %499 = @func_5498() /* ty=Tensor[(6, 15, 11), float64] */;
  %500 = %494.1;
  %501 = %495.0;
  %502 = %498.0;
  (%499, %500, %501, %502, %var_9464)
}

def @func_3097() -> (Tensor[(6, 15, 11), float64],) {
  %503 = @func_2699() /* ty=Tensor[(6, 15, 11), float64] */;
  (%503,)
}

def @func_7103() -> (Tensor[(15, 7, 6), bool],) {
  @func_7101() /* ty=(Tensor[(15, 7, 6), bool],) */
}

def @func_6442() -> Tensor[(6, 15, 11), float32] {
  @func_6440() /* ty=Tensor[(6, 15, 11), float32] */
}

def @func_1879() -> Tensor[(6, 15, 11), float32] {
  %504 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %504.1
}

def @func_6070() -> Tensor[(98), int32] {
  %506 = fn () -> Tensor[(98), int32] {
    %505 = @func_4126() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(98), int32]) */;
    %505.1
  };
  %506() /* ty=Tensor[(98), int32] */
}

def @func_2028(%var_2026: uint64, %var_2027: Tensor[(12, 10, 14), uint64]) -> (Tensor[(12, 10, 14), uint64], Tensor[(12, 10, 14), float64]) {
  @func_2024(%var_2026, %var_2027) /* ty=(Tensor[(12, 10, 14), uint64], Tensor[(12, 10, 14), float64]) */
}

def @func_5732() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float64]) {
  @func_5730() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float64]) */
}

def @func_2113() -> (Tensor[(6, 15, 11), float64],) {
  @func_2111() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_8399(%var_8397: Tensor[(12, 3, 6), uint16], %var_8398: uint64) -> (Tensor[(12, 3, 6), uint16], uint64, uint64) {
  %516 = fn (%var_8380: Tensor[(12, 3, 6), uint16], %var_8391: uint64) -> (Tensor[(12, 3, 6), uint16], uint64, uint64) {
    %507 = cast(%var_8380, dtype="uint16") /* ty=Tensor[(12, 3, 6), uint16] */;
    %508 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(12, 3, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %509 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 3, 6), uint16] */, dtype="uint16") /* ty=Tensor[(12, 3, 6), uint16] */;
    %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %511 = cast(%var_8391, dtype="uint64") /* ty=uint64 */;
    %512 = reshape(%511, newshape=[]) /* ty=uint64 */;
    %513 = @func_2747(%512) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], uint64) */;
    %514 = right_shift(%509, %510) /* ty=Tensor[(12, 3, 6), uint16] */;
    %515 = %513.2;
    (%514, %515, %var_8391)
  };
  %516(%var_8397, %var_8398) /* ty=(Tensor[(12, 3, 6), uint16], uint64, uint64) */
}

def @func_2178() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %529 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
    %517 = @func_1493() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */;
    %518 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %519 = %517.0;
    %520 = cast(%519, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %521 = reshape(%520, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
    %522 = @func_645(%521) /* ty=(Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64]) */;
    %523 = %522.1;
    %524 = cast(%523, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %525 = reshape(%524, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
    %526 = @func_645(%525) /* ty=(Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64]) */;
    %527 = %518.1;
    %528 = %526.1;
    (%519, %527, %523, %528)
  };
  %529() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_5239() -> (Tensor[(1728), float32], Tensor[(6, 15, 11), float64]) {
  @func_5237() /* ty=(Tensor[(1728), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_7556() -> (Tensor[(6, 15, 11), float32], Tensor[(4, 12), float32], Tensor[(1728), float32]) {
  %536 = fn () -> (Tensor[(6, 15, 11), float32], Tensor[(4, 12), float32], Tensor[(1728), float32]) {
    %530 = @func_6230() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
    %531 = @func_5032() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float32]) */;
    %532 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
    %533 = %530.0;
    %534 = %531.2;
    %535 = %532.0;
    (%533, %534, %535)
  };
  %536() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(4, 12), float32], Tensor[(1728), float32]) */
}

def @func_2357() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %537 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %538 = @func_1108() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %539 = %537.2;
  %540 = %538.2;
  (%539, %540)
}

def @func_6468(%var_6466: Tensor[(1728), float32]) -> (Tensor[(6, 15, 11), uint32], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) {
  %541 = cast(%var_6466, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %542 = reshape(%541, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %543 = @func_247(%542) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %544 = @func_1957() /* ty=Tensor[(6, 15, 11), uint32] */;
  %545 = %543.1;
  (%544, %545, %var_6466)
}

def @func_4009() -> Tensor[(6, 15, 11), float64] {
  @func_4007() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_6650(%var_6648: Tensor[(11, 5, 12), float64]) -> (Tensor[(11, 5, 12), float32], Tensor[(11, 5, 12), float32]) {
  @func_6647(%var_6648) /* ty=(Tensor[(11, 5, 12), float32], Tensor[(11, 5, 12), float32]) */
}

def @func_645(%var_622: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64]) {
  %546 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %547 = %546.0;
  %548 = cast(%var_622, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%547, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %552 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %553 = greater_equal(%550, %551) /* ty=Tensor[(6, 15, 11), bool] */;
  %554 = %552.0;
  (%553, %554)
}

def @func_5575() -> (Tensor[(6, 15, 11), float64],) {
  @func_5573() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_7989(%var_7987: Tensor[(14, 7, 6), float64]) -> (Tensor[(14, 7, 6), float64],) {
  @func_7986(%var_7987) /* ty=(Tensor[(14, 7, 6), float64],) */
}

def @func_440() -> (Tensor[(6, 15, 11), float64],) {
  %555 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %556 = %555.0;
  (%556,)
}

def @func_2790() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16) {
  @func_2788() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16) */
}

def @func_164(%var_163: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %570 = fn (%var_123: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
    %557 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
    %558 = %557.0;
    %559 = cast(%var_123, dtype="uint32") /* ty=Tensor[(6, 15, 11), uint32] */;
    %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(3), int32] */;
    %561 = cast(%558, dtype="uint32") /* ty=Tensor[(6, 15, 11), uint32] */;
    %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %563 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
    %564 = cast(%558, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %565 = cast(%var_123, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %566 = subtract(%561, %562) /* ty=Tensor[(6, 15, 11), uint32] */;
    %567 = %563.1;
    %568 = asin(%564) /* ty=Tensor[(6, 15, 11), float64] */;
    %569 = tan(%565) /* ty=Tensor[(6, 15, 11), float64] */;
    (%566, %567, %568, %569)
  };
  %570(%var_163) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_738() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) {
  %584 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) {
    %571 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %572 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
    %573 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %574 = %573.0;
    %575 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %576 = %575.0;
    %577 = cast(%576, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
    %578 = shape_of(%574, dtype="int32") /* ty=Tensor[(3), int32] */;
    %579 = cast(%574, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
    %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %581 = %571.0;
    %582 = %572.1;
    %583 = divide(%579, %580) /* ty=Tensor[(6, 15, 11), float32] */;
    (%581, %582, %583)
  };
  %584() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */
}

def @func_9514() -> Tensor[(6, 15, 11), uint16] {
  %586 = fn () -> Tensor[(6, 15, 11), uint16] {
    %585 = @func_6999() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32]) */;
    %585.0
  };
  %586() /* ty=Tensor[(6, 15, 11), uint16] */
}

def @func_1494() -> (Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) {
  %593 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) {
    %587 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %588 = cast(meta[relay.Constant][18] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %589 = reshape(%588, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
    %590 = @func_247(%589) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
    %591 = %587.0;
    %592 = %590.1;
    (%591, %592, meta[relay.Constant][18] /* ty=Tensor[(1728), float32] */)
  };
  %593() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */
}

def @func_5154() -> Tensor[(6, 15, 11), float64] {
  %594 = fn () -> Tensor[(6, 15, 11), float64] {
    @func_4007() /* ty=Tensor[(6, 15, 11), float64] */
  };
  %594() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_1109() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %603 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
    %595 = @func_211() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %596 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
    %597 = %596.0;
    %598 = cast(%597, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %599 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
    %600 = %595.0;
    %601 = log(%598) /* ty=Tensor[(6, 15, 11), float64] */;
    %602 = %599.1;
    (%600, %601, %602)
  };
  %603() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */
}

def @func_6753() -> Tensor[(6, 15, 11), float64] {
  %604 = fn () -> Tensor[(6, 15, 11), float64] {
    @func_3856() /* ty=Tensor[(6, 15, 11), float64] */
  };
  %604() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_9070() -> (Tensor[(98), int32], Tensor[(6, 15, 11), float64]) {
  %605 = @func_4126() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(98), int32]) */;
  %606 = @func_7091() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %607 = %605.1;
  %608 = %606.0;
  (%607, %608)
}

def @func_2076() -> (Tensor[(6, 15, 11), uint16],) {
  %611 = fn () -> (Tensor[(6, 15, 11), uint16],) {
    %609 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
    %610 = %609.3;
    (%610,)
  };
  %611() /* ty=(Tensor[(6, 15, 11), uint16],) */
}

def @func_7001() -> (Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32]) {
  @func_6999() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32]) */
}

def @func_8311() -> Tensor[(6, 15, 11), float64] {
  %612 = fn () -> Tensor[(6, 15, 11), float64] {
    @func_7935() /* ty=Tensor[(6, 15, 11), float64] */
  };
  %612() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_9583() -> Tensor[(6, 15, 11), float64] {
  @func_9581() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_4680() -> Tensor[(6, 15, 11), float64] {
  @func_4678() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_1409() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  @func_1407() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_3847() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %617 = fn () -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
    %613 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
    %614 = @func_1407() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %615 = %613.0;
    %616 = %614.0;
    (%615, %616)
  };
  %617() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_9228() -> Tensor[(6, 15, 11), float32] {
  %618 = @func_5215() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(2, 16), float32], Tensor[(6, 15, 11), uint32]) */;
  %618.0
}

def @func_193() -> (Tensor[(6, 15, 11), float64],) {
  %621 = fn () -> (Tensor[(6, 15, 11), float64],) {
    %619 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
    %620 = %619.0;
    (%620,)
  };
  %621() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_6152(%var_6082: Tensor[(9, 8, 11), uint8], %var_6083: Tensor[(9, 8, 11), uint8]) -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int64]) {
  %622 = cast(%var_6083, dtype="uint8") /* ty=Tensor[(9, 8, 11), uint8] */;
  %623 = shape_of(%var_6082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%var_6082, dtype="uint8") /* ty=Tensor[(9, 8, 11), uint8] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %626 = subtract(%624, %625) /* ty=Tensor[(9, 8, 11), uint8] */;
  %627 = cast(%626, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  %628 = shape_of(%var_6083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%var_6083, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %631 = cast(%var_6082, dtype="int64") /* ty=Tensor[(9, 8, 11), int64] */;
  %632 = shape_of(%var_6083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%var_6083, dtype="int64") /* ty=Tensor[(9, 8, 11), int64] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %635 = power(%629, %630) /* ty=Tensor[(9, 8, 11), float32] */;
  %636 = minimum(%633, %634) /* ty=Tensor[(9, 8, 11), int64] */;
  (%635, %636)
}

def @func_9013(%var_8968: uint64, %var_9010: Tensor[(1, 1350), float64]) -> (Tensor[(6, 15, 11), float64], uint64, Tensor[(6, 15, 11), float32], Tensor[(48, 36), float32], Tensor[(9, 10, 15), float64], Tensor[(1, 1350), float64]) {
  %637 = @func_7091() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %638 = @func_4429() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %639 = %637.1;
  %640 = cast(%639, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %641 = cast(meta[relay.Constant][19] /* ty=Tensor[(48, 36), float32] */, dtype="float32") /* ty=Tensor[(48, 36), float32] */;
  %642 = cast(%var_8968, dtype="uint64") /* ty=uint64 */;
  %643 = reshape(%640, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %644 = reshape(%641, newshape=[2, 864]) /* ty=Tensor[(2, 864), float32] */;
  %645 = reshape(%642, newshape=[]) /* ty=uint64 */;
  %646 = @func_2266(%643, %644, %645) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(2, 864), float32], Tensor[(12, 10, 14), float64], uint64) */;
  %647 = %646.1;
  %648 = cast(%647, dtype="int64") /* ty=Tensor[(12, 16, 9), int64] */;
  %649 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(48, 36), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %650 = cast(meta[relay.Constant][19] /* ty=Tensor[(48, 36), float32] */, dtype="int64") /* ty=Tensor[(48, 36), int64] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %652 = add(%650, %651) /* ty=Tensor[(48, 36), int64] */;
  %653 = cast(%652, dtype="float32") /* ty=Tensor[(48, 36), float32] */;
  %654 = cast(%var_9010, dtype="float64") /* ty=Tensor[(1, 1350), float64] */;
  %655 = cast(%var_9010, dtype="float64") /* ty=Tensor[(1, 1350), float64] */;
  %656 = reshape(%654, newshape=[9, 10, 15]) /* ty=Tensor[(9, 10, 15), float64] */;
  %657 = reshape(%655, newshape=[9, 10, 15]) /* ty=Tensor[(9, 10, 15), float64] */;
  %658 = @func_2286(%656, %657) /* ty=(Tensor[(9, 10, 15), float64],) */;
  %659 = %638.0;
  %660 = sqrt(%653) /* ty=Tensor[(48, 36), float32] */;
  %661 = %658.0;
  (%639, %var_8968, %659, %660, %661, %var_9010)
}

def @func_9828() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %662 = @func_3856() /* ty=Tensor[(6, 15, 11), float64] */;
  %663 = cast(%662, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %664 = reshape(%663, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %665 = @func_162(%664) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %666 = %665.3;
  (%662, %666)
}

def @func_7221() -> Tensor[(6, 15, 11), float64] {
  @func_7219() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_1306() -> (Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) {
  @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */
}

def @func_1129(%var_1123: Tensor[(9, 4, 4), int32], %var_1124: Tensor[(9, 4, 4), int32]) -> Tensor[(9, 4, 4), int32] {
  %667 = cast(%var_1124, dtype="int32") /* ty=Tensor[(9, 4, 4), int32] */;
  %668 = shape_of(%var_1123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%var_1123, dtype="int32") /* ty=Tensor[(9, 4, 4), int32] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_xor(%669, %670) /* ty=Tensor[(9, 4, 4), int32] */
}

def @func_3413() -> (Tensor[(6, 15, 11), float32], Tensor[(1728), float32]) {
  %674 = fn () -> (Tensor[(6, 15, 11), float32], Tensor[(1728), float32]) {
    %671 = @func_3256() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) */;
    %672 = @func_1879() /* ty=Tensor[(6, 15, 11), float32] */;
    %673 = %671.1;
    (%672, %673)
  };
  %674() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(1728), float32]) */
}

def @func_7091() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %675 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %676 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %677 = %675.0;
  %678 = %676.2;
  (%677, %678)
}

def @func_2271(%var_2268: Tensor[(6, 15, 11), float64], %var_2269: Tensor[(2, 864), float32], %var_2270: uint64) -> (Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(2, 864), float32], Tensor[(12, 10, 14), float64], uint64) {
  @func_2266(%var_2268, %var_2269, %var_2270) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(2, 864), float32], Tensor[(12, 10, 14), float64], uint64) */
}

def @func_5965() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %679 = @func_3979() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %680 = %679.1;
  %681 = @func_4678() /* ty=Tensor[(6, 15, 11), float64] */;
  (%680, %681)
}

def @func_579() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %682 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %683 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %684 = %682.0;
  %685 = cast(%684, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %686 = reshape(%685, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %687 = @func_162(%686) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %688 = %683.0;
  %689 = %687.0;
  (%684, %688, %689)
}

def @func_2749(%var_2748: uint64) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], uint64) {
  %696 = fn (%var_2731: uint64) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], uint64) {
    %690 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
    %691 = cast(%var_2731, dtype="uint64") /* ty=uint64 */;
    %692 = reshape(%691, newshape=[]) /* ty=uint64 */;
    %693 = @func_2195(%692) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(12, 10, 14), float64], uint64, Tensor[(1680), uint64], Tensor[(6, 15, 11), float64]) */;
    %694 = %690.0;
    %695 = %693.1;
    (%694, %695, %var_2731)
  };
  %696(%var_2748) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], uint64) */
}

def @func_3858() -> Tensor[(6, 15, 11), float64] {
  @func_3856() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_6362() -> Tensor[(6, 15, 11), float64] {
  %698 = fn () -> Tensor[(6, 15, 11), float64] {
    %697 = @func_5573() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %697.0
  };
  %698() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_7153() -> Tensor[(1728), float32] {
  %702 = fn () -> Tensor[(1728), float32] {
    %699 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
    %700 = %699.0;
    %701 = cast(%700, dtype="float32") /* ty=Tensor[(1728), float32] */;
    asinh(%701) /* ty=Tensor[(1728), float32] */
  };
  %702() /* ty=Tensor[(1728), float32] */
}

def @func_8620() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
  %706 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) {
    %703 = @func_1407() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %704 = @func_4476() /* ty=Tensor[(6, 15, 11), float64] */;
    %705 = %703.1;
    (%704, %705)
  };
  %706() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_9357() -> (Tensor[(6, 15, 11), float64],) {
  @func_9355() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_2681(%var_2679: Tensor[(5, 10, 5), float32], %var_2680: Tensor[(5, 10, 5), float32]) -> (Tensor[(5, 10, 5), float32],) {
  %712 = fn (%var_2671: Tensor[(5, 10, 5), float32], %var_2672: Tensor[(5, 10, 5), float32]) -> (Tensor[(5, 10, 5), float32],) {
    %707 = cast(%var_2672, dtype="float32") /* ty=Tensor[(5, 10, 5), float32] */;
    %708 = shape_of(%var_2671, dtype="int32") /* ty=Tensor[(3), int32] */;
    %709 = cast(%var_2671, dtype="float32") /* ty=Tensor[(5, 10, 5), float32] */;
    %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %711 = divide(%709, %710) /* ty=Tensor[(5, 10, 5), float32] */;
    (%711,)
  };
  %712(%var_2679, %var_2680) /* ty=(Tensor[(5, 10, 5), float32],) */
}

def @func_5217() -> (Tensor[(6, 15, 11), float32], Tensor[(2, 16), float32], Tensor[(6, 15, 11), uint32]) {
  @func_5215() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(2, 16), float32], Tensor[(6, 15, 11), uint32]) */
}

def @func_4678() -> Tensor[(6, 15, 11), float64] {
  @func_4007() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_9719() -> Tensor[(6, 15, 11), float64] {
  %714 = fn () -> Tensor[(6, 15, 11), float64] {
    %713 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %713.0
  };
  %714() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_2666(%var_2665: int16) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), float64]) {
  %723 = fn (%var_2632: int16) -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), float64]) {
    %715 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
    %716 = cast(%var_2632, dtype="int16") /* ty=int16 */;
    %717 = reshape(%716, newshape=[]) /* ty=int16 */;
    %718 = @func_1043(%717) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16) */;
    %719 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
    %720 = %715.0;
    %721 = %718.2;
    %722 = %719.0;
    (%720, %721, %var_2632, %722)
  };
  %723(%var_2665) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), float64]) */
}

def @func_3283(%var_3274: Tensor[(14, 6), float64]) -> Tensor[(14, 6), float64] {
  %724 = cast(%var_3274, dtype="float64") /* ty=Tensor[(14, 6), float64] */;
  cos(%724) /* ty=Tensor[(14, 6), float64] */
}

def @func_9991() -> Tensor[(6, 15, 11), float64] {
  @func_9989() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_442() -> (Tensor[(6, 15, 11), float64],) {
  @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_4309() -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(1, 52), float32], Tensor[(6, 15, 11), uint32], Tensor[(990), float64], Tensor[(96), float32], Tensor[(6, 15, 11), float32]) {
  %749 = fn () -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(1, 52), float32], Tensor[(6, 15, 11), uint32], Tensor[(990), float64], Tensor[(96), float32], Tensor[(6, 15, 11), float32]) {
    %725 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
    %726 = @func_1108() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
    %727 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 52), float32] */, dtype="float32") /* ty=Tensor[(1, 52), float32] */;
    %728 = reshape(%727, newshape=[52]) /* ty=Tensor[(52), float32] */;
    %729 = @func_2940(%728) /* ty=(Tensor[(6, 15, 11), float64], int16, int16, Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), uint32]) */;
    %730 = @func_4065() /* ty=Tensor[(6, 15, 11), float32] */;
    %731 = cast(%730, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %732 = reshape(%731, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
    %733 = @func_162(%732) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %734 = cast(meta[relay.Constant][21] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %735 = cast(meta[relay.Constant][21] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %736 = %733.0;
    %737 = cast(%736, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %738 = %729.2;
    %739 = cast(%738, dtype="int16") /* ty=int16 */;
    %740 = reshape(%734, newshape=[3, 8, 4]) /* ty=Tensor[(3, 8, 4), float32] */;
    %741 = reshape(%735, newshape=[3, 8, 4]) /* ty=Tensor[(3, 8, 4), float32] */;
    %742 = reshape(%737, newshape=[990]) /* ty=Tensor[(990), float64] */;
    %743 = reshape(%739, newshape=[]) /* ty=int16 */;
    %744 = @func_1686(%740, %741, %742, %743) /* ty=(Tensor[(3, 8, 4), float32], Tensor[(3, 8, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(990), float64], Tensor[(6, 15, 11), float64], int16, int16) */;
    %745 = %725.4;
    %746 = %726.1;
    %747 = %744.3;
    %748 = @func_1879() /* ty=Tensor[(6, 15, 11), float32] */;
    (%745, %730, %746, %738, meta[relay.Constant][20] /* ty=Tensor[(1, 52), float32] */, %736, %747, meta[relay.Constant][21] /* ty=Tensor[(96), float32] */, %748)
  };
  %749() /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(1, 52), float32], Tensor[(6, 15, 11), uint32], Tensor[(990), float64], Tensor[(96), float32], Tensor[(6, 15, 11), float32]) */
}

def @func_94() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
  %750 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 15, 11), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %751 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 15, 11), float64] */, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %752 = exp(%750) /* ty=Tensor[(6, 15, 11), float64] */;
  %753 = sin(%751) /* ty=Tensor[(6, 15, 11), float32] */;
  (%752, %753)
}

def @func_1691(%var_1687: Tensor[(3, 8, 4), float32], %var_1688: Tensor[(3, 8, 4), float32], %var_1689: Tensor[(990), float64], %var_1690: int16) -> (Tensor[(3, 8, 4), float32], Tensor[(3, 8, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(990), float64], Tensor[(6, 15, 11), float64], int16, int16) {
  %771 = fn (%var_1649: Tensor[(3, 8, 4), float32], %var_1650: Tensor[(3, 8, 4), float32], %var_1664: Tensor[(990), float64], %var_1674: int16) -> (Tensor[(3, 8, 4), float32], Tensor[(3, 8, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(990), float64], Tensor[(6, 15, 11), float64], int16, int16) {
    %754 = cast(%var_1650, dtype="float32") /* ty=Tensor[(3, 8, 4), float32] */;
    %755 = shape_of(%var_1649, dtype="int32") /* ty=Tensor[(3), int32] */;
    %756 = cast(%var_1649, dtype="float32") /* ty=Tensor[(3, 8, 4), float32] */;
    %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %758 = cast(%var_1650, dtype="float32") /* ty=Tensor[(3, 8, 4), float32] */;
    %759 = cast(%var_1664, dtype="float64") /* ty=Tensor[(990), float64] */;
    %760 = reshape(%759, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
    %761 = @func_1346(%760) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
    %762 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %763 = cast(%var_1674, dtype="int16") /* ty=int16 */;
    %764 = reshape(%763, newshape=[]) /* ty=int16 */;
    %765 = @func_1043(%764) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16) */;
    %766 = floor_mod(%756, %757) /* ty=Tensor[(3, 8, 4), float32] */;
    %767 = log(%758) /* ty=Tensor[(3, 8, 4), float32] */;
    %768 = %761.1;
    %769 = %762.0;
    %770 = %765.3;
    (%766, %767, %768, %var_1664, %769, %770, %var_1674)
  };
  %771(%var_1687, %var_1688, %var_1689, %var_1690) /* ty=(Tensor[(3, 8, 4), float32], Tensor[(3, 8, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(990), float64], Tensor[(6, 15, 11), float64], int16, int16) */
}

def @func_4253() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) {
  %775 = fn () -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) {
    %772 = @func_3030() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
    %773 = %772.0;
    %774 = @func_1879() /* ty=Tensor[(6, 15, 11), float32] */;
    (%773, %774)
  };
  %775() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */
}

def @func_1641() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %780 = fn () -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
    %776 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
    %777 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %778 = %776.1;
    %779 = %777.0;
    (%778, %779)
  };
  %780() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_2289(%var_2287: Tensor[(9, 10, 15), float64], %var_2288: Tensor[(9, 10, 15), float64]) -> (Tensor[(9, 10, 15), float64],) {
  %786 = fn (%var_2278: Tensor[(9, 10, 15), float64], %var_2279: Tensor[(9, 10, 15), float64]) -> (Tensor[(9, 10, 15), float64],) {
    %781 = cast(%var_2279, dtype="float64") /* ty=Tensor[(9, 10, 15), float64] */;
    %782 = shape_of(%var_2278, dtype="int32") /* ty=Tensor[(3), int32] */;
    %783 = cast(%var_2278, dtype="float64") /* ty=Tensor[(9, 10, 15), float64] */;
    %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %785 = add(%783, %784) /* ty=Tensor[(9, 10, 15), float64] */;
    (%785,)
  };
  %786(%var_2287, %var_2288) /* ty=(Tensor[(9, 10, 15), float64],) */
}

def @func_2788() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16) {
  %787 = @func_1640() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %788 = cast(meta[relay.Constant][23] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %789 = reshape(%788, newshape=[]) /* ty=int16 */;
  %790 = @func_2664(%789) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), float64]) */;
  %791 = %787.1;
  %792 = %790.1;
  (%791, %792, meta[relay.Constant][23] /* ty=int16 */)
}

def @func_3893(%var_3891: Tensor[(3, 15, 15), bool], %var_3892: Tensor[(3, 15, 15), bool]) -> (Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) {
  %806 = fn (%var_3859: Tensor[(3, 15, 15), bool], %var_3860: Tensor[(3, 15, 15), bool]) -> (Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) {
    %793 = cast(%var_3860, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
    %794 = shape_of(%var_3859, dtype="int32") /* ty=Tensor[(3), int32] */;
    %795 = cast(%var_3859, dtype="bool") /* ty=Tensor[(3, 15, 15), bool] */;
    %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %797 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
    %798 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %799 = cast(meta[relay.Constant][24] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %800 = reshape(%799, newshape=[]) /* ty=int16 */;
    %801 = @func_1043(%800) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16) */;
    %802 = logical_and(%795, %796) /* ty=Tensor[(3, 15, 15), bool] */;
    %803 = %797.0;
    %804 = %798.1;
    %805 = %801.3;
    (%802, %803, %804, %805, meta[relay.Constant][24] /* ty=int16 */)
  };
  %806(%var_3891, %var_3892) /* ty=(Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) */
}

def @func_7986(%var_7983: Tensor[(14, 7, 6), float64]) -> (Tensor[(14, 7, 6), float64],) {
  %807 = cast(%var_7983, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %808 = asinh(%807) /* ty=Tensor[(14, 7, 6), float64] */;
  (%808,)
}

def @func_3955(%var_3952: Tensor[(48, 36), float32], %var_3953: int16, %var_3954: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(48, 36), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), bool]) {
  %825 = fn (%var_3939: Tensor[(48, 36), float32], %var_3944: int16, %var_3946: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(48, 36), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), bool]) {
    %809 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
    %810 = cast(%var_3939, dtype="float32") /* ty=Tensor[(48, 36), float32] */;
    %811 = reshape(%810, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
    %812 = @func_247(%811) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
    %813 = cast(%var_3944, dtype="int16") /* ty=int16 */;
    %814 = reshape(%813, newshape=[]) /* ty=int16 */;
    %815 = @func_2664(%814) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), float64]) */;
    %816 = @func_1746() /* ty=Tensor[(6, 15, 11), float64] */;
    %817 = cast(%var_3946, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
    %818 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
    %819 = cast(%816, dtype="bool") /* ty=Tensor[(6, 15, 11), bool] */;
    %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %821 = %809.0;
    %822 = %812.1;
    %823 = %815.1;
    %824 = equal(%819, %820) /* ty=Tensor[(6, 15, 11), bool] */;
    (%821, %822, %var_3939, %823, %var_3944, %824)
  };
  %825(%var_3952, %var_3953, %var_3954) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(48, 36), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), bool]) */
}

def @func_2719() -> (Tensor[(6, 15, 11), float64], Tensor[(1350), float64], Tensor[(98), int32], Tensor[(7, 28), int32]) {
  %826 = cast(meta[relay.Constant][25] /* ty=Tensor[(98), int32] */, dtype="int32") /* ty=Tensor[(98), int32] */;
  %827 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 28), int32] */, dtype="int32") /* ty=Tensor[(7, 28), int32] */;
  %828 = reshape(%826, newshape=[1, 14, 7]) /* ty=Tensor[(1, 14, 7), int32] */;
  %829 = reshape(%827, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), int32] */;
  %830 = @func_2345(%828, %829) /* ty=(Tensor[(2, 14, 7), bool], Tensor[(6, 15, 11), float64], Tensor[(9, 10, 15), float64], Tensor[(1350), float64]) */;
  %831 = @func_1746() /* ty=Tensor[(6, 15, 11), float64] */;
  %832 = %830.3;
  (%831, %832, meta[relay.Constant][25] /* ty=Tensor[(98), int32] */, meta[relay.Constant][26] /* ty=Tensor[(7, 28), int32] */)
}

def @func_5499() -> Tensor[(6, 15, 11), float64] {
  %834 = fn () -> Tensor[(6, 15, 11), float64] {
    %833 = @func_1493() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */;
    %833.0
  };
  %834() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_7229() -> Tensor[(6, 15, 11), float64] {
  @func_7227() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_7424() -> (Tensor[(6, 15, 11), float64],) {
  @func_7422() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_8658() -> Tensor[(6, 15, 11), float64] {
  %836 = fn () -> Tensor[(6, 15, 11), float64] {
    %835 = @func_5573() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %835.0
  };
  %836() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_5796(%var_5794: Tensor[(16, 8, 7), int8], %var_5795: Tensor[(16, 8, 7), int8]) -> Tensor[(16, 8, 7), bool] {
  %841 = fn (%var_5786: Tensor[(16, 8, 7), int8], %var_5787: Tensor[(16, 8, 7), int8]) -> Tensor[(16, 8, 7), bool] {
    %837 = cast(%var_5787, dtype="bool") /* ty=Tensor[(16, 8, 7), bool] */;
    %838 = shape_of(%var_5786, dtype="int32") /* ty=Tensor[(3), int32] */;
    %839 = cast(%var_5786, dtype="bool") /* ty=Tensor[(16, 8, 7), bool] */;
    %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%839, %840) /* ty=Tensor[(16, 8, 7), bool] */
  };
  %841(%var_5794, %var_5795) /* ty=Tensor[(16, 8, 7), bool] */
}

def @func_4109() -> (Tensor[(6, 15, 11), uint16],) {
  %844 = fn () -> (Tensor[(6, 15, 11), uint16],) {
    %842 = @func_2075() /* ty=(Tensor[(6, 15, 11), uint16],) */;
    %843 = %842.0;
    (%843,)
  };
  %844() /* ty=(Tensor[(6, 15, 11), uint16],) */
}

def @func_6471(%var_6469: Tensor[(1728), float32]) -> (Tensor[(6, 15, 11), uint32], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) {
  @func_6468(%var_6469) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */
}

def @func_3363(%var_3342: Tensor[(13, 1, 9), float64]) -> (Tensor[(13, 1, 9), float64], Tensor[(6, 15, 11), float64]) {
  %845 = cast(%var_3342, dtype="float64") /* ty=Tensor[(13, 1, 9), float64] */;
  %846 = @func_3256() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) */;
  %847 = erf(%845) /* ty=Tensor[(13, 1, 9), float64] */;
  %848 = %846.0;
  (%847, %848)
}

def @func_4066() -> Tensor[(6, 15, 11), float32] {
  %849 = fn () -> Tensor[(6, 15, 11), float32] {
    @func_1879() /* ty=Tensor[(6, 15, 11), float32] */
  };
  %849() /* ty=Tensor[(6, 15, 11), float32] */
}

def @func_6723(%var_6722: Tensor[(12, 12, 9), float32]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(24, 72), float32], Tensor[(6, 15, 11), float32], Tensor[(12, 12, 9), float64]) {
  %863 = fn (%var_6704: Tensor[(12, 12, 9), float32]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(24, 72), float32], Tensor[(6, 15, 11), float32], Tensor[(12, 12, 9), float64]) {
    %850 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %851 = @func_3030() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
    %852 = @func_3979() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
    %853 = cast(meta[relay.Constant][27] /* ty=Tensor[(24, 72), float32] */, dtype="float32") /* ty=Tensor[(24, 72), float32] */;
    %854 = reshape(%853, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
    %855 = @func_247(%854) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
    %856 = %855.1;
    %857 = cast(%856, dtype="float64") /* ty=Tensor[(1, 1, 9), float64] */;
    %858 = cast(%var_6704, dtype="float64") /* ty=Tensor[(12, 12, 9), float64] */;
    %859 = %850.3;
    %860 = %851.0;
    %861 = %852.1;
    %862 = minimum(%857, %858) /* ty=Tensor[(12, 12, 9), float64] */;
    (%859, %860, meta[relay.Constant][27] /* ty=Tensor[(24, 72), float32] */, %861, %862)
  };
  %863(%var_6722) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(24, 72), float32], Tensor[(6, 15, 11), float32], Tensor[(12, 12, 9), float64]) */
}

def @func_6296() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
  %874 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
    %864 = @func_2795() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %865 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
    %866 = @func_4252() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
    %867 = @func_579() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
    %868 = @func_4308() /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(1, 52), float32], Tensor[(6, 15, 11), uint32], Tensor[(990), float64], Tensor[(96), float32], Tensor[(6, 15, 11), float32]) */;
    %869 = %864.0;
    %870 = %865.0;
    %871 = %866.0;
    %872 = %867.0;
    %873 = %868.8;
    (%869, %870, %871, %872, %873)
  };
  %874() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */
}

def @func_6877(%var_6875: Tensor[(225, 3), bool]) -> (Tensor[(6, 15, 11), float64], int16, Tensor[(225, 3), bool]) {
  @func_6874(%var_6875) /* ty=(Tensor[(6, 15, 11), float64], int16, Tensor[(225, 3), bool]) */
}

def @func_4477() -> Tensor[(6, 15, 11), float64] {
  %876 = fn () -> Tensor[(6, 15, 11), float64] {
    %875 = @func_3830() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %875.0
  };
  %876() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_3366(%var_3364: Tensor[(13, 1, 9), float64]) -> (Tensor[(13, 1, 9), float64], Tensor[(6, 15, 11), float64]) {
  @func_3363(%var_3364) /* ty=(Tensor[(13, 1, 9), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_1537(%var_1536: Tensor[(9, 1, 12), float64]) -> Tensor[(9, 1, 12), float64] {
  %878 = fn (%var_1528: Tensor[(9, 1, 12), float64]) -> Tensor[(9, 1, 12), float64] {
    %877 = cast(%var_1528, dtype="float64") /* ty=Tensor[(9, 1, 12), float64] */;
    sin(%877) /* ty=Tensor[(9, 1, 12), float64] */
  };
  %878(%var_1536) /* ty=Tensor[(9, 1, 12), float64] */
}

def @func_8574() -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float64]) {
  @func_8572() /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float64]) */
}

def @func_8572() -> (Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float64]) {
  %879 = @func_4308() /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(1, 52), float32], Tensor[(6, 15, 11), uint32], Tensor[(990), float64], Tensor[(96), float32], Tensor[(6, 15, 11), float32]) */;
  %880 = %879.0;
  %881 = cast(%880, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %882 = reshape(%881, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %883 = @func_2545(%882) /* ty=(Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %884 = %883.3;
  (%880, %884)
}

def @func_4211(%var_4200: Tensor[(1, 13, 8), float32], %var_4201: Tensor[(1, 13, 8), float32]) -> Tensor[(?, 13, 8), float32] {
  %885 = cast(%var_4201, dtype="float32") /* ty=Tensor[(1, 13, 8), float32] */;
  %886 = shape_of(%var_4200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%var_4200, dtype="float32") /* ty=Tensor[(1, 13, 8), float32] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%887, %888) /* ty=Tensor[(?, 13, 8), float32] */
}

def @func_96() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
  @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */
}

def @func_7422() -> (Tensor[(6, 15, 11), float64],) {
  %889 = @func_6752() /* ty=Tensor[(6, 15, 11), float64] */;
  (%889,)
}

def @func_1348(%var_1347: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  %901 = fn (%var_1327: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
    %890 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %891 = %890.0;
    %892 = cast(%var_1327, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %893 = shape_of(%891, dtype="int32") /* ty=Tensor[(3), int32] */;
    %894 = cast(%891, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %896 = @func_440() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %897 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
    %898 = floor_divide(%894, %895) /* ty=Tensor[(6, 15, 11), float64] */;
    %899 = %896.0;
    %900 = %897.4;
    (%898, %899, %900)
  };
  %901(%var_1347) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */
}

def @func_8539(%var_8538: Tensor[(32), float32]) -> (Tensor[(6, 15, 11), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32], Tensor[(6, 15, 11), float64], Tensor[(16, 8, 7), float64]) {
  %922 = fn (%var_8504: Tensor[(32), float32]) -> (Tensor[(6, 15, 11), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32], Tensor[(6, 15, 11), float64], Tensor[(16, 8, 7), float64]) {
    %902 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
    %903 = cast(%var_8504, dtype="float32") /* ty=Tensor[(32), float32] */;
    %904 = reshape(%903, newshape=[1, 8, 4]) /* ty=Tensor[(1, 8, 4), float32] */;
    %905 = @func_3903(%904) /* ty=(Tensor[(1, 8, 4), float32],) */;
    %906 = @func_5527() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(4, 3, 4), float64]) */;
    %907 = cast(meta[relay.Constant][28] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
    %908 = cast(meta[relay.Constant][28] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
    %909 = reshape(%907, newshape=[16, 8, 7]) /* ty=Tensor[(16, 8, 7), int8] */;
    %910 = reshape(%908, newshape=[16, 8, 7]) /* ty=Tensor[(16, 8, 7), int8] */;
    %911 = @func_5793(%909, %910) /* ty=Tensor[(16, 8, 7), bool] */;
    %912 = cast(meta[relay.Constant][28] /* ty=Tensor[(896), int8] */, dtype="uint32") /* ty=Tensor[(896), uint32] */;
    %913 = shape_of(%911, dtype="int32") /* ty=Tensor[(3), int32] */;
    %914 = cast(%911, dtype="uint32") /* ty=Tensor[(16, 8, 7), uint32] */;
    %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %916 = bitwise_or(%914, %915) /* ty=Tensor[(16, 8, 7), uint32] */;
    %917 = cast(%916, dtype="float64") /* ty=Tensor[(16, 8, 7), float64] */;
    %918 = %902.0;
    %919 = %905.0;
    %920 = %906.0;
    %921 = asin(%917) /* ty=Tensor[(16, 8, 7), float64] */;
    (%918, %919, %var_8504, %920, %921)
  };
  %922(%var_8538) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32], Tensor[(6, 15, 11), float64], Tensor[(16, 8, 7), float64]) */
}

def @func_3761(%var_3756: Tensor[(13, 7, 4), float64]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(13, 7, 4), float64]) {
  %923 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %924 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %925 = @func_3718() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(13, 1, 4), float32], Tensor[(13, ?, 4), float64]) */;
  %926 = %925.2;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(13, ?, 4), float64] */;
  %928 = cast(%var_3756, dtype="float64") /* ty=Tensor[(13, 7, 4), float64] */;
  %929 = %923.0;
  %930 = %924.1;
  %931 = mod(%927, %928) /* ty=Tensor[(13, 7, 4), float64] */;
  (%929, %930, %931)
}

def @func_966() -> (Tensor[(6, 15, 11), float32],) {
  @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */
}

def @func_7367(%var_7352: Tensor[(7, 1, 7), bool]) -> Tensor[(7, ?, 7), bool] {
  %932 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 1, 7), bool] */, dtype="bool") /* ty=Tensor[(7, 1, 7), bool] */;
  %933 = shape_of(%var_7352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%var_7352, dtype="bool") /* ty=Tensor[(7, 1, 7), bool] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%934, %935) /* ty=Tensor[(7, ?, 7), bool] */
}

def @func_4806() -> (Tensor[(6, 15, 11), uint32],) {
  %937 = fn () -> (Tensor[(6, 15, 11), uint32],) {
    %936 = @func_1957() /* ty=Tensor[(6, 15, 11), uint32] */;
    (%936,)
  };
  %937() /* ty=(Tensor[(6, 15, 11), uint32],) */
}

def @func_9763(%var_9734: Tensor[(675), bool]) -> (Tensor[(6, 15, 11), float64], Tensor[(675), uint8]) {
  %938 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %939 = cast(%var_9734, dtype="bool") /* ty=Tensor[(675), bool] */;
  %940 = cast(%var_9734, dtype="bool") /* ty=Tensor[(675), bool] */;
  %941 = reshape(%939, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %942 = reshape(%940, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %943 = @func_3890(%941, %942) /* ty=(Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) */;
  %944 = %943.4;
  %945 = cast(%var_9734, dtype="uint8") /* ty=Tensor[(675), uint8] */;
  %946 = cast(%944, dtype="uint8") /* ty=uint8 */;
  %947 = %938.0;
  %948 = minimum(%945, %946) /* ty=Tensor[(675), uint8] */;
  (%947, %948)
}

def @func_9017(%var_9015: uint64, %var_9016: Tensor[(1, 1350), float64]) -> (Tensor[(6, 15, 11), float64], uint64, Tensor[(6, 15, 11), float32], Tensor[(48, 36), float32], Tensor[(9, 10, 15), float64], Tensor[(1, 1350), float64]) {
  @func_9013(%var_9015, %var_9016) /* ty=(Tensor[(6, 15, 11), float64], uint64, Tensor[(6, 15, 11), float32], Tensor[(48, 36), float32], Tensor[(9, 10, 15), float64], Tensor[(1, 1350), float64]) */
}

def @func_520() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) {
  @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */
}

def @func_6270() -> (Tensor[(6, 15, 11), float32],) {
  @func_6268() /* ty=(Tensor[(6, 15, 11), float32],) */
}

def @func_10070(%var_10068: Tensor[(11, 10, 16), int64], %var_10069: Tensor[(11, 10, 16), int64]) -> (Tensor[(11, 10, 16), int64], Tensor[(11, 10, 16), float64]) {
  @func_10066(%var_10068, %var_10069) /* ty=(Tensor[(11, 10, 16), int64], Tensor[(11, 10, 16), float64]) */
}

def @main(%var_10074: float32) -> (Tensor[(7, 1, 1), bool], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(4, 432), float32]) {
  %949 = cast(%var_10074, dtype="bool") /* ty=bool */;
  %950 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 1, 1), float32] */, dtype="bool") /* ty=Tensor[(7, 1, 1), bool] */;
  %951 = @func_3617() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(15, 7, 6), bool], Tensor[(630), uint16]) */;
  %952 = @func_3616() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(15, 7, 6), bool], Tensor[(630), uint16]) */;
  %953 = %952.2;
  %954 = cast(%953, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %955 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 432), float32] */, dtype="float32") /* ty=Tensor[(4, 432), float32] */;
  %956 = reshape(%954, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float32] */;
  %957 = reshape(%955, newshape=[1, 1728]) /* ty=Tensor[(1, 1728), float32] */;
  %958 = @func_1186(%956, %957) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(1, 1, 9), float32], Tensor[(1, 1728), float32], Tensor[(6, 15, 11), float64]) */;
  %959 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 432), float32] */, dtype="float32") /* ty=Tensor[(4, 432), float32] */;
  %960 = greater_equal(%949, %950) /* ty=Tensor[(7, 1, 1), bool] */;
  %961 = %951.2;
  %962 = %958.2;
  %963 = tan(%959) /* ty=Tensor[(4, 432), float32] */;
  (%960, %961, %962, %963)
}

def @func_9912() -> (Tensor[(6, 15, 11), float64],) {
  %966 = fn () -> (Tensor[(6, 15, 11), float64],) {
    %964 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %965 = %964.0;
    (%965,)
  };
  %966() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_6911() -> (Tensor[(1728), float64],) {
  %971 = fn () -> (Tensor[(1728), float64],) {
    %967 = @func_1493() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */;
    %968 = %967.2;
    %969 = cast(%968, dtype="float64") /* ty=Tensor[(1728), float64] */;
    %970 = atan(%969) /* ty=Tensor[(1728), float64] */;
    (%970,)
  };
  %971() /* ty=(Tensor[(1728), float64],) */
}

def @func_2796() -> (Tensor[(6, 15, 11), float64],) {
  %974 = fn () -> (Tensor[(6, 15, 11), float64],) {
    %972 = @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
    %973 = %972.0;
    (%973,)
  };
  %974() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_6767() -> (Tensor[(6, 15, 11), float64],) {
  %977 = fn () -> (Tensor[(6, 15, 11), float64],) {
    %975 = @func_2788() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16) */;
    %976 = %975.0;
    (%976,)
  };
  %977() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_7733(%var_7685: Tensor[(13, 12, 13), float64]) -> (Tensor[(13, 12, 13), float64], Tensor[(6, 15, 11), float64], Tensor[(1728), float32], Tensor[(13, 12, 13), float32]) {
  %978 = cast(%var_7685, dtype="float64") /* ty=Tensor[(13, 12, 13), float64] */;
  %979 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(13, 12, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %980 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 12, 13), float64] */;
  %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %982 = @func_890() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %983 = @func_5237() /* ty=(Tensor[(1728), float32], Tensor[(6, 15, 11), float64]) */;
  %984 = cast(%var_7685, dtype="float32") /* ty=Tensor[(13, 12, 13), float32] */;
  %985 = floor_divide(%980, %981) /* ty=Tensor[(13, 12, 13), float64] */;
  %986 = %982.0;
  %987 = %983.0;
  %988 = sqrt(%984) /* ty=Tensor[(13, 12, 13), float32] */;
  (%985, %986, %987, %988)
}

def @func_9935() -> (Tensor[(6, 15, 11), uint16],) {
  %991 = fn () -> (Tensor[(6, 15, 11), uint16],) {
    %989 = @func_4965() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) */;
    %990 = %989.0;
    (%990,)
  };
  %991() /* ty=(Tensor[(6, 15, 11), uint16],) */
}

def @func_518() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) {
  %992 = @func_406() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %993 = %992.1;
  %994 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %995 = %994.0;
  %996 = cast(%995, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %997 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %998 = cast(%993, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1000 = cast(%995, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %1001 = reshape(%1000, newshape=[6, 15, 11]) /* ty=Tensor[(6, 15, 11), float64] */;
  %1002 = @func_162(%1001) /* ty=(Tensor[(6, 15, 11), uint32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %1003 = minimum(%998, %999) /* ty=Tensor[(6, 15, 11), float32] */;
  %1004 = %1002.0;
  (%1003, %1004)
}

def @func_3155(%var_3153: Tensor[(13, 2, 14), int16], %var_3154: Tensor[(13, 2, 14), int16]) -> Tensor[(13, 2, 14), float32] {
  %1011 = fn (%var_3141: Tensor[(13, 2, 14), int16], %var_3142: Tensor[(13, 2, 14), int16]) -> Tensor[(13, 2, 14), float32] {
    %1005 = cast(%var_3142, dtype="bool") /* ty=Tensor[(13, 2, 14), bool] */;
    %1006 = shape_of(%var_3141, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1007 = cast(%var_3141, dtype="bool") /* ty=Tensor[(13, 2, 14), bool] */;
    %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1009 = less_equal(%1007, %1008) /* ty=Tensor[(13, 2, 14), bool] */;
    %1010 = cast(%1009, dtype="float32") /* ty=Tensor[(13, 2, 14), float32] */;
    cos(%1010) /* ty=Tensor[(13, 2, 14), float32] */
  };
  %1011(%var_3153, %var_3154) /* ty=Tensor[(13, 2, 14), float32] */
}

def @func_2359() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) {
  @func_2357() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */
}

def @func_9607() -> (Tensor[(1728), float32], Tensor[(6, 15, 11), uint32]) {
  @func_9605() /* ty=(Tensor[(1728), float32], Tensor[(6, 15, 11), uint32]) */
}

def @func_3256() -> (Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) {
  %1012 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %1013 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %1014 = %1012.3;
  %1015 = %1013.2;
  (%1014, %1015)
}

def @func_9636() -> (Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) {
  %1022 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) {
    %1016 = @func_4126() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(98), int32]) */;
    %1017 = @func_7555() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(4, 12), float32], Tensor[(1728), float32]) */;
    %1018 = %1017.2;
    %1019 = cast(%1018, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %1020 = %1016.0;
    %1021 = asin(%1019) /* ty=Tensor[(1728), float32] */;
    (%1020, %1021)
  };
  %1022() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) */
}

def @func_5215() -> (Tensor[(6, 15, 11), float32], Tensor[(2, 16), float32], Tensor[(6, 15, 11), uint32]) {
  %1023 = @func_1640() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %1024 = @func_4965() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(1, 8, 4), float32], Tensor[(2, 16), float32]) */;
  %1025 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %1026 = %1023.0;
  %1027 = %1024.2;
  %1028 = %1025.1;
  (%1026, %1027, %1028)
}

def @func_7045() -> (Tensor[(1728), float32],) {
  %1031 = fn () -> (Tensor[(1728), float32],) {
    %1029 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
    %1030 = %1029.0;
    (%1030,)
  };
  %1031() /* ty=(Tensor[(1728), float32],) */
}

def @func_9853() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  @func_9851() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_3617() -> (Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(15, 7, 6), bool], Tensor[(630), uint16]) {
  %1046 = fn () -> (Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(15, 7, 6), bool], Tensor[(630), uint16]) {
    %1032 = @func_2075() /* ty=(Tensor[(6, 15, 11), uint16],) */;
    %1033 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
    %1034 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
    %1035 = %1034.1;
    %1036 = cast(%1035, dtype="float32") /* ty=Tensor[(6, 15, 11), float32] */;
    %1037 = cast(meta[relay.Constant][33] /* ty=Tensor[(630), uint16] */, dtype="uint16") /* ty=Tensor[(630), uint16] */;
    %1038 = cast(meta[relay.Constant][33] /* ty=Tensor[(630), uint16] */, dtype="uint16") /* ty=Tensor[(630), uint16] */;
    %1039 = reshape(%1037, newshape=[15, 7, 6]) /* ty=Tensor[(15, 7, 6), uint16] */;
    %1040 = reshape(%1038, newshape=[15, 7, 6]) /* ty=Tensor[(15, 7, 6), uint16] */;
    %1041 = @func_2577(%1039, %1040) /* ty=(Tensor[(15, 7, 6), bool],) */;
    %1042 = %1032.0;
    %1043 = %1033.0;
    %1044 = log2(%1036) /* ty=Tensor[(6, 15, 11), float32] */;
    %1045 = %1041.0;
    (%1042, %1043, %1044, %1045, meta[relay.Constant][33] /* ty=Tensor[(630), uint16] */)
  };
  %1046() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(15, 7, 6), bool], Tensor[(630), uint16]) */
}

def @func_5893(%var_5891: Tensor[(11, 6, 9), float64], %var_5892: Tensor[(11, 6, 9), float64]) -> Tensor[(11, 6, 9), float32] {
  @func_5889(%var_5891, %var_5892) /* ty=Tensor[(11, 6, 9), float32] */
}

def @func_4127() -> (Tensor[(6, 15, 11), float64], Tensor[(98), int32]) {
  %1050 = fn () -> (Tensor[(6, 15, 11), float64], Tensor[(98), int32]) {
    %1047 = @func_2719() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1350), float64], Tensor[(98), int32], Tensor[(7, 28), int32]) */;
    %1048 = @func_3424() /* ty=Tensor[(6, 15, 11), float64] */;
    %1049 = %1047.2;
    (%1048, %1049)
  };
  %1050() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(98), int32]) */
}

def @func_1186(%var_1184: Tensor[(6, 15, 11), float32], %var_1185: Tensor[(1, 1728), float32]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(1, 1, 9), float32], Tensor[(1, 1728), float32], Tensor[(6, 15, 11), float64]) {
  @func_1182(%var_1184, %var_1185) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(1, 1, 9), float32], Tensor[(1, 1728), float32], Tensor[(6, 15, 11), float64]) */
}

def @func_964() -> (Tensor[(6, 15, 11), float32],) {
  %1051 = @func_737() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32]) */;
  %1052 = %1051.2;
  (%1052,)
}

def @func_6874(%var_6872: Tensor[(225, 3), bool]) -> (Tensor[(6, 15, 11), float64], int16, Tensor[(225, 3), bool]) {
  %1053 = cast(%var_6872, dtype="bool") /* ty=Tensor[(225, 3), bool] */;
  %1054 = cast(%var_6872, dtype="bool") /* ty=Tensor[(225, 3), bool] */;
  %1055 = reshape(%1053, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %1056 = reshape(%1054, newshape=[3, 15, 15]) /* ty=Tensor[(3, 15, 15), bool] */;
  %1057 = @func_3890(%1055, %1056) /* ty=(Tensor[(3, 15, 15), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], int16, int16) */;
  %1058 = @func_2699() /* ty=Tensor[(6, 15, 11), float64] */;
  %1059 = %1057.3;
  (%1058, %1059, %var_6872)
}

def @func_3030() -> (Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) {
  %1060 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %1061 = @func_518() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), uint32]) */;
  %1062 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %1063 = %1060.0;
  %1064 = %1061.0;
  %1065 = %1062.1;
  (%1063, %1064, %1065)
}

def @func_4503() -> (Tensor[(6, 15, 11), float64],) {
  @func_4501() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_1182(%var_1139: Tensor[(6, 15, 11), float32], %var_1165: Tensor[(1, 1728), float32]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32], Tensor[(1, 1, 9), float32], Tensor[(1, 1728), float32], Tensor[(6, 15, 11), float64]) {
  %1066 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %1067 = %1066.1;
  %1068 = cast(%var_1139, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %1069 = shape_of(%1067, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1070 = cast(%1067, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %1071 = dyn.reshape(%1068, %1069, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1072 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %1073 = @func_964() /* ty=(Tensor[(6, 15, 11), float32],) */;
  %1074 = cast(%var_1165, dtype="float32") /* ty=Tensor[(1, 1728), float32] */;
  %1075 = reshape(%1074, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float32] */;
  %1076 = @func_247(%1075) /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1, 1, 9), float32]) */;
  %1077 = @func_842() /* ty=(Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %1078 = add(%1070, %1071) /* ty=Tensor[(6, 15, 11), float64] */;
  %1079 = %1072.0;
  %1080 = %1073.0;
  %1081 = %1076.1;
  %1082 = %1077.2;
  (%1078, %1079, %1080, %1081, %var_1165, %1082)
}

def @func_8825() -> (Tensor[(6, 15, 11), float64],) {
  %1085 = fn () -> (Tensor[(6, 15, 11), float64],) {
    %1083 = @func_2795() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %1084 = %1083.0;
    (%1084,)
  };
  %1085() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_7937() -> Tensor[(6, 15, 11), float64] {
  @func_7935() /* ty=Tensor[(6, 15, 11), float64] */
}

def @func_8849() -> (Tensor[(6, 15, 11), float32],) {
  @func_8847() /* ty=(Tensor[(6, 15, 11), float32],) */
}

def @func_2111() -> (Tensor[(6, 15, 11), float64],) {
  %1086 = @func_1304() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float32], Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), uint32]) */;
  %1087 = %1086.0;
  (%1087,)
}

def @func_8767(%var_8765: Tensor[(3, 16, 4), float32], %var_8766: Tensor[(660), float64]) -> (Tensor[(6, 15, 11), float32], Tensor[(11, 5, 12), float32], Tensor[(660), float64], Tensor[(2, 16), float32], Tensor[(6, 15, 11), float64], Tensor[(3, 16, 4), bool]) {
  @func_8763(%var_8765, %var_8766) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(11, 5, 12), float32], Tensor[(660), float64], Tensor[(2, 16), float32], Tensor[(6, 15, 11), float64], Tensor[(3, 16, 4), bool]) */
}

def @func_5610(%var_5608: Tensor[(12, 1, 9), float32]) -> (Tensor[(12, 1, 9), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32]) {
  @func_5607(%var_5608) /* ty=(Tensor[(12, 1, 9), float32], Tensor[(1, 8, 4), float32], Tensor[(32), float32]) */
}

def @func_3258() -> (Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) {
  @func_3256() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1728), float32]) */
}

def @func_3764(%var_3762: Tensor[(13, 7, 4), float64]) -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(13, 7, 4), float64]) {
  @func_3761(%var_3762) /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(13, 7, 4), float64]) */
}

def @func_9072() -> (Tensor[(98), int32], Tensor[(6, 15, 11), float64]) {
  @func_9070() /* ty=(Tensor[(98), int32], Tensor[(6, 15, 11), float64]) */
}

def @func_8032() -> (Tensor[(98), int32], Tensor[(1728), float32]) {
  %1091 = fn () -> (Tensor[(98), int32], Tensor[(1728), float32]) {
    %1088 = @func_4035() /* ty=(Tensor[(1728), float32],) */;
    %1089 = @func_6069() /* ty=Tensor[(98), int32] */;
    %1090 = %1088.0;
    (%1089, %1090)
  };
  %1091() /* ty=(Tensor[(98), int32], Tensor[(1728), float32]) */
}

def @func_779(%var_778: int16) -> (Tensor[(13, 16, 3), int16], Tensor[(6, 15, 11), float64], Tensor[(13, 16, 3), float64], Tensor[(6, 15, 11), float64]) {
  %1101 = fn (%var_743: int16) -> (Tensor[(13, 16, 3), int16], Tensor[(6, 15, 11), float64], Tensor[(13, 16, 3), float64], Tensor[(6, 15, 11), float64]) {
    %1092 = cast(%var_743, dtype="int16") /* ty=int16 */;
    %1093 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 16, 3), int16] */, dtype="int16") /* ty=Tensor[(13, 16, 3), int16] */;
    %1094 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %1095 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 16, 3), int16] */, dtype="float64") /* ty=Tensor[(13, 16, 3), float64] */;
    %1096 = @func_537() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
    %1097 = subtract(%1092, %1093) /* ty=Tensor[(13, 16, 3), int16] */;
    %1098 = %1094.1;
    %1099 = acos(%1095) /* ty=Tensor[(13, 16, 3), float64] */;
    %1100 = %1096.1;
    (%1097, %1098, %1099, %1100)
  };
  %1101(%var_778) /* ty=(Tensor[(13, 16, 3), int16], Tensor[(6, 15, 11), float64], Tensor[(13, 16, 3), float64], Tensor[(6, 15, 11), float64]) */
}

def @func_2940(%var_2922: Tensor[(52), float32]) -> (Tensor[(6, 15, 11), float64], int16, int16, Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(52), float32], Tensor[(6, 15, 11), uint32]) {
  %1102 = @func_2827() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1728), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %1103 = cast(meta[relay.Constant][35] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1104 = reshape(%1103, newshape=[]) /* ty=int16 */;
  %1105 = @func_2664(%1104) /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64], int16, Tensor[(6, 15, 11), float64]) */;
  %1106 = @func_2177() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %1107 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
  %1108 = cast(%var_2922, dtype="float32") /* ty=Tensor[(52), float32] */;
  %1109 = reshape(%1108, newshape=[13, 1, 4]) /* ty=Tensor[(13, 1, 4), float32] */;
  %1110 = @func_919(%1109) /* ty=(Tensor[(13, 1, 4), float32], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64]) */;
  %1111 = @func_1108() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
  %1112 = %1102.0;
  %1113 = %1105.2;
  %1114 = %1106.3;
  %1115 = %1107.0;
  %1116 = %1110.2;
  %1117 = %1111.2;
  (%1112, %1113, meta[relay.Constant][35] /* ty=int16 */, %1114, %1115, %1116, %var_2922, %1117)
}

def @func_1881() -> Tensor[(6, 15, 11), float32] {
  @func_1879() /* ty=Tensor[(6, 15, 11), float32] */
}

def @func_6798() -> Tensor[(6, 15, 11), uint32] {
  @func_6796() /* ty=Tensor[(6, 15, 11), uint32] */
}

def @func_4007() -> Tensor[(6, 15, 11), float64] {
  %1118 = @func_3030() /* ty=(Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float64]) */;
  %1118.2
}

def @func_212() -> (Tensor[(6, 15, 11), float64],) {
  %1121 = fn () -> (Tensor[(6, 15, 11), float64],) {
    %1119 = @func_192() /* ty=(Tensor[(6, 15, 11), float64],) */;
    %1120 = %1119.0;
    (%1120,)
  };
  %1121() /* ty=(Tensor[(6, 15, 11), float64],) */
}

def @func_3905(%var_3904: Tensor[(1, 8, 4), float32]) -> (Tensor[(1, 8, 4), float32],) {
  %1124 = fn (%var_3898: Tensor[(1, 8, 4), float32]) -> (Tensor[(1, 8, 4), float32],) {
    %1122 = cast(%var_3898, dtype="float32") /* ty=Tensor[(1, 8, 4), float32] */;
    %1123 = sin(%1122) /* ty=Tensor[(1, 8, 4), float32] */;
    (%1123,)
  };
  %1124(%var_3904) /* ty=(Tensor[(1, 8, 4), float32],) */
}

def @func_8043() -> Tensor[(6, 15, 11), uint32] {
  %1126 = fn () -> Tensor[(6, 15, 11), uint32] {
    %1125 = @func_5372() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint32]) */;
    %1125.1
  };
  %1126() /* ty=Tensor[(6, 15, 11), uint32] */
}

def @func_7101() -> (Tensor[(15, 7, 6), bool],) {
  %1127 = @func_3616() /* ty=(Tensor[(6, 15, 11), uint16], Tensor[(6, 15, 11), float32], Tensor[(6, 15, 11), float32], Tensor[(15, 7, 6), bool], Tensor[(630), uint16]) */;
  %1128 = %1127.3;
  (%1128,)
}

def @func_406() -> (Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
  %1129 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %1130 = %1129.0;
  %1131 = cast(%1130, dtype="float64") /* ty=Tensor[(6, 15, 11), float64] */;
  %1132 = @func_94() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */;
  %1133 = acosh(%1131) /* ty=Tensor[(6, 15, 11), float64] */;
  %1134 = %1132.1;
  (%1133, %1134)
}

def @func_4816() -> (Tensor[(6, 15, 11), float64],) {
  %1135 = @func_4678() /* ty=Tensor[(6, 15, 11), float64] */;
  (%1135,)
}

def @func_4035() -> (Tensor[(1728), float32],) {
  %1136 = @func_1493() /* ty=(Tensor[(6, 15, 11), float64], Tensor[(1, 1, 9), float32], Tensor[(1728), float32]) */;
  %1137 = %1136.2;
  (%1137,)
}

def @func_5082(%var_5080: Tensor[(6, 15, 11), uint16]) -> (Tensor[(6, 15, 11), float32],) {
  @func_5079(%var_5080) /* ty=(Tensor[(6, 15, 11), float32],) */
}

def @func_2580(%var_2578: Tensor[(15, 7, 6), uint16], %var_2579: Tensor[(15, 7, 6), uint16]) -> (Tensor[(15, 7, 6), bool],) {
  %1143 = fn (%var_2572: Tensor[(15, 7, 6), uint16], %var_2573: Tensor[(15, 7, 6), uint16]) -> (Tensor[(15, 7, 6), bool],) {
    %1138 = cast(%var_2573, dtype="bool") /* ty=Tensor[(15, 7, 6), bool] */;
    %1139 = shape_of(%var_2572, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1140 = cast(%var_2572, dtype="bool") /* ty=Tensor[(15, 7, 6), bool] */;
    %1141 = dyn.reshape(%1138, %1139, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1142 = greater_equal(%1140, %1141) /* ty=Tensor[(15, 7, 6), bool] */;
    (%1142,)
  };
  %1143(%var_2578, %var_2579) /* ty=(Tensor[(15, 7, 6), bool],) */
}

def @func_2548(%var_2546: Tensor[(6, 15, 11), float64]) -> (Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) {
  @func_2545(%var_2546) /* ty=(Tensor[(6, 15, 11), bool], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), uint64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float64], Tensor[(6, 15, 11), float32]) */
}

def @func_10066(%var_10048: Tensor[(11, 10, 16), int64], %var_10049: Tensor[(11, 10, 16), int64]) -> (Tensor[(11, 10, 16), int64], Tensor[(11, 10, 16), float64]) {
  %1144 = cast(%var_10049, dtype="int64") /* ty=Tensor[(11, 10, 16), int64] */;
  %1145 = shape_of(%var_10048, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1146 = cast(%var_10048, dtype="int64") /* ty=Tensor[(11, 10, 16), int64] */;
  %1147 = dyn.reshape(%1144, %1145, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1148 = cast(%var_10049, dtype="float64") /* ty=Tensor[(11, 10, 16), float64] */;
  %1149 = shape_of(%var_10048, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1150 = cast(%var_10048, dtype="float64") /* ty=Tensor[(11, 10, 16), float64] */;
  %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1152 = minimum(%1146, %1147) /* ty=Tensor[(11, 10, 16), int64] */;
  %1153 = divide(%1150, %1151) /* ty=Tensor[(11, 10, 16), float64] */;
  (%1152, %1153)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 1, found 2

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_4499() -> Tensor[(198), float64] {
  %0 = @func_3775() /* ty=(Tensor[(198), float64], Tensor[(216), float64], Tensor[(13, 2, 6), bool]) */;
  %0.0
}

def @func_2638(%var_2621: Tensor[(198), float64], %var_2634: Tensor[(216), float64]) -> (Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) {
  %1 = cast(%var_2621, dtype="float64") /* ty=Tensor[(198), float64] */;
  %2 = reshape(%1, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
  %3 = @func_1975(%2) /* ty=(Tensor[(11, 9, 2), float64],) */;
  %4 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %5 = %4.0;
  %6 = cast(%5, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %7 = tan(%6) /* ty=Tensor[(13, 2, 6), float32] */;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %9 = cast(%var_2634, dtype="float64") /* ty=Tensor[(216), float64] */;
  %10 = reshape(%9, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %11 = @func_2040(%10) /* ty=(Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) */;
  %12 = %3.0;
  %13 = log10(%8) /* ty=Tensor[(13, 2, 6), float32] */;
  %14 = %11.0;
  (%12, %var_2621, %13, %14, %var_2634)
}

def @func_6583(%var_6573: Tensor[(3, 9, 13), uint16], %var_6574: Tensor[(3, 9, 13), uint16]) -> (Tensor[(3, 9, 13), uint16], Tensor[(3, 9, 13), float32]) {
  %15 = cast(%var_6574, dtype="uint16") /* ty=Tensor[(3, 9, 13), uint16] */;
  %16 = shape_of(%var_6573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%var_6573, dtype="uint16") /* ty=Tensor[(3, 9, 13), uint16] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %19 = cast(%var_6573, dtype="float32") /* ty=Tensor[(3, 9, 13), float32] */;
  %20 = shape_of(%var_6574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%var_6574, dtype="float32") /* ty=Tensor[(3, 9, 13), float32] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %23 = logical_xor(%17, %18) /* ty=Tensor[(3, 9, 13), uint16] */;
  %24 = divide(%21, %22) /* ty=Tensor[(3, 9, 13), float32] */;
  (%23, %24)
}

def @func_6883() -> (Tensor[(198), float64], Tensor[(14, 3, 8), float32]) {
  %25 = @func_5905() /* ty=Tensor[(198), float64] */;
  %26 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  (%25, %26)
}

def @func_4457() -> (Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) {
  %27 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %28 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  %29 = %27.0;
  %30 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  (%28, %29, %30)
}

def @func_4602(%var_4581: Tensor[(108), uint8]) -> (Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(14, 2, 16), float64], Tensor[(448), float64]) {
  %31 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %32 = cast(meta[relay.Constant][0] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %33 = cast(meta[relay.Constant][0] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %34 = cast(meta[relay.Constant][1] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %35 = cast(%var_4581, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %36 = cast(%var_4581, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %37 = reshape(%32, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
  %38 = reshape(%33, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
  %39 = reshape(%34, newshape=[]) /* ty=uint8 */;
  %40 = reshape(%35, newshape=[6, 18]) /* ty=Tensor[(6, 18), uint8] */;
  %41 = reshape(%36, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %42 = @func_1707(%37, %38, %39, %40, %41) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(6, 18), uint8], Tensor[(7, 78), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], Tensor[(3, 36), uint64], Tensor[(6, 4, 12), uint16]) */;
  %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %44 = reshape(%43, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float64] */;
  %45 = @func_2654(%44) /* ty=(Tensor[(14, 2, 16), float64],) */;
  %46 = %31.0;
  %47 = %42.0;
  %48 = %45.0;
  (%46, %47, meta[relay.Constant][0] /* ty=Tensor[(288), int16] */, meta[relay.Constant][1] /* ty=uint8 */, %var_4581, %48, meta[relay.Constant][2] /* ty=Tensor[(448), float64] */)
}

def @func_7037(%var_7035: Tensor[(192), int16]) -> (Tensor[(198), float64], Tensor[(4, 12, 4), int16], Tensor[(192), int16]) {
  %49 = cast(%var_7035, dtype="int16") /* ty=Tensor[(192), int16] */;
  %50 = cast(%var_7035, dtype="int16") /* ty=Tensor[(192), int16] */;
  %51 = reshape(%49, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int16] */;
  %52 = reshape(%50, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int16] */;
  %53 = @func_4499() /* ty=Tensor[(198), float64] */;
  %54 = @func_2020(%51, %52) /* ty=Tensor[(4, 12, 4), int16] */;
  (%53, %54, %var_7035)
}

def @func_455(%var_442: uint8, %var_443: Tensor[(12, 9, 1), uint8]) -> (Tensor[(12, 9, 1), uint8],) {
  %55 = cast(%var_442, dtype="uint8") /* ty=uint8 */;
  %56 = cast(%var_443, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
  %57 = right_shift(%55, %56) /* ty=Tensor[(12, 9, 1), uint8] */;
  (%57,)
}

def @func_1192(%var_1125: Tensor[(9, 15), uint64], %var_1126: Tensor[(9, 15), uint64], %var_1137: uint8, %var_1165: Tensor[(3, 36), uint8]) -> (Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) {
  %58 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
  %59 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 36), uint8] */, dtype="uint8") /* ty=Tensor[(3, 36), uint8] */;
  %60 = reshape(%58, newshape=[]) /* ty=uint8 */;
  %61 = reshape(%59, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %62 = @func_455(%60, %61) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %63 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
  %64 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 36), uint8] */, dtype="uint8") /* ty=Tensor[(3, 36), uint8] */;
  %65 = reshape(%63, newshape=[]) /* ty=uint8 */;
  %66 = reshape(%64, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %67 = @func_455(%65, %66) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %68 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
  %69 = %67.0;
  %70 = cast(%69, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
  %71 = reshape(%68, newshape=[]) /* ty=uint8 */;
  %72 = reshape(%70, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %73 = @func_455(%71, %72) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %74 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
  %75 = %62.0;
  %76 = cast(%75, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
  %77 = reshape(%74, newshape=[]) /* ty=uint8 */;
  %78 = reshape(%76, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %79 = @func_455(%77, %78) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %80 = cast(%var_1165, dtype="int16") /* ty=Tensor[(3, 36), int16] */;
  %81 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(3, 36), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %82 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 36), uint8] */, dtype="int16") /* ty=Tensor[(3, 36), int16] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %84 = cast(%var_1126, dtype="bool") /* ty=Tensor[(9, 15), bool] */;
  %85 = shape_of(%var_1125, dtype="int32") /* ty=Tensor[(2), int32] */;
  %86 = cast(%var_1125, dtype="bool") /* ty=Tensor[(9, 15), bool] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %88 = greater(%86, %87) /* ty=Tensor[(9, 15), bool] */;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(9, 15), float64] */;
  %90 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
  %91 = cast(%75, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
  %92 = reshape(%90, newshape=[]) /* ty=uint8 */;
  %93 = reshape(%91, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %94 = @func_455(%92, %93) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %95 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
  %96 = cast(%var_1165, dtype="uint8") /* ty=Tensor[(3, 36), uint8] */;
  %97 = reshape(%95, newshape=[]) /* ty=uint8 */;
  %98 = reshape(%96, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %99 = @func_455(%97, %98) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %100 = %73.0;
  %101 = %79.0;
  %102 = subtract(%82, %83) /* ty=Tensor[(3, 36), int16] */;
  %103 = cos(%89) /* ty=Tensor[(9, 15), float64] */;
  %104 = %94.0;
  %105 = %99.0;
  (%75, %var_1137, %69, %100, %101, %102, %103, %104, %105)
}

def @func_1975(%var_1968: Tensor[(11, 9, 2), float64]) -> (Tensor[(11, 9, 2), float64],) {
  %106 = cast(%var_1968, dtype="float64") /* ty=Tensor[(11, 9, 2), float64] */;
  %107 = erf(%106) /* ty=Tensor[(11, 9, 2), float64] */;
  (%107,)
}

def @func_2751() -> (Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) {
  %108 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %109 = %108.0;
  %110 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 2, 6), float32] */, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%109, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %114 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %115 = less(%112, %113) /* ty=Tensor[(13, 2, 6), bool] */;
  %116 = %114.0;
  (%115, %116)
}

def @func_5940(%var_5936: Tensor[(5, 1, 16), float64]) -> Tensor[(5, 1, 16), float64] {
  %117 = cast(%var_5936, dtype="float64") /* ty=Tensor[(5, 1, 16), float64] */;
  log2(%117) /* ty=Tensor[(5, 1, 16), float64] */
}

def @func_4957(%var_4910: Tensor[(11, 10, 15), float32]) -> (Tensor[(13, 2, 6), bool], Tensor[(11, 10, 15), float32], Tensor[(198), float64], Tensor[(13, 2, 6), float64]) {
  %118 = @func_4731() /* ty=(Tensor[(13, 2, 6), bool],) */;
  %119 = cast(%var_4910, dtype="float32") /* ty=Tensor[(11, 10, 15), float32] */;
  %120 = sinh(%119) /* ty=Tensor[(11, 10, 15), float32] */;
  %121 = cast(%var_4910, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%120, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %125 = greater(%123, %124) /* ty=Tensor[(11, 10, 15), bool] */;
  %126 = cast(%125, dtype="float32") /* ty=Tensor[(11, 10, 15), float32] */;
  %127 = @func_4879() /* ty=(Tensor[(13, 2, 6), float64],) */;
  %128 = %118.0;
  %129 = atanh(%126) /* ty=Tensor[(11, 10, 15), float32] */;
  %130 = @func_4907() /* ty=Tensor[(198), float64] */;
  %131 = %127.0;
  (%128, %129, %130, %131)
}

def @func_6165() -> Tensor[(13, 2, 6), bool] {
  %132 = @func_4731() /* ty=(Tensor[(13, 2, 6), bool],) */;
  %133 = %132.0;
  %134 = cast(%133, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %135 = asinh(%134) /* ty=Tensor[(13, 2, 6), float32] */;
  %136 = cast(%133, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%135, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%138, %139) /* ty=Tensor[(13, 2, 6), bool] */
}

def @func_6120(%var_6115: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float32], Tensor[(198), float64]) {
  %140 = @func_4879() /* ty=(Tensor[(13, 2, 6), float64],) */;
  %141 = %140.0;
  %142 = cast(%141, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %143 = cast(%var_6115, dtype="float64") /* ty=Tensor[(198), float64] */;
  %144 = reshape(%142, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
  %145 = reshape(%143, newshape=[1, 198]) /* ty=Tensor[(1, 198), float64] */;
  %146 = @func_3550(%144, %145) /* ty=(Tensor[(13, 2, 6), int16], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(13, 2, 6), float32], Tensor[(4, 12, 4), int16], Tensor[(192), int16], Tensor[(13, 2, 6), float32], Tensor[(1, 198), float64]) */;
  %147 = %146.6;
  (%141, %147, %var_6115)
}

def @func_5447() -> Tensor[(13, 2, 6), float32] {
  %148 = @func_4052() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %148.1
}

def @func_5750() -> (Tensor[(13, 2, 6), uint32], Tensor[(288), int16], Tensor[(132), int8], Tensor[(1050), float64], Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float64], Tensor[(1650), float32]) {
  %149 = @func_5603() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) */;
  %150 = cast(meta[relay.Constant][5] /* ty=Tensor[(132), int8] */, dtype="int8") /* ty=Tensor[(132), int8] */;
  %151 = cast(meta[relay.Constant][6] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %152 = reshape(%150, newshape=[11, 6, 2]) /* ty=Tensor[(11, 6, 2), int8] */;
  %153 = reshape(%151, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %154 = @func_5681(%152, %153) /* ty=(Tensor[(11, 6, 2), int32], Tensor[(70), float32], Tensor[(1050), float64], Tensor[(288), int16], Tensor[(108), uint8]) */;
  %155 = @func_5603() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) */;
  %156 = @func_2751() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) */;
  %157 = @func_2751() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) */;
  %158 = cast(meta[relay.Constant][7] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %159 = reshape(%158, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %160 = @func_4957(%159) /* ty=(Tensor[(13, 2, 6), bool], Tensor[(11, 10, 15), float32], Tensor[(198), float64], Tensor[(13, 2, 6), float64]) */;
  %161 = %149.1;
  %162 = %154.3;
  %163 = %155.1;
  %164 = %156.1;
  %165 = %157.1;
  %166 = %160.3;
  (%161, %162, meta[relay.Constant][5] /* ty=Tensor[(132), int8] */, meta[relay.Constant][6] /* ty=Tensor[(1050), float64] */, %163, %164, %165, %166, meta[relay.Constant][7] /* ty=Tensor[(1650), float32] */)
}

def @func_5154(%var_5134: Tensor[(14, 6, 10), uint32], %var_5135: Tensor[(14, 6, 10), uint32]) -> (Tensor[(14, 6, 10), uint32],) {
  %167 = cast(%var_5135, dtype="uint32") /* ty=Tensor[(14, 6, 10), uint32] */;
  %168 = shape_of(%var_5134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%var_5134, dtype="uint32") /* ty=Tensor[(14, 6, 10), uint32] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %171 = bitwise_or(%169, %170) /* ty=Tensor[(14, 6, 10), uint32] */;
  (%171,)
}

def @func_3353() -> (Tensor[(13, 2, 6), float32], Tensor[(14, 1, 5), float64], Tensor[(1, 70), float64], Tensor[(1050), float64], Tensor[(13, 2, 6), float32]) {
  %172 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %173 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 70), float64] */, dtype="float64") /* ty=Tensor[(1, 70), float64] */;
  %174 = cast(meta[relay.Constant][9] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %175 = reshape(%173, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %176 = reshape(%174, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), float64] */;
  %177 = @func_3258(%175, %176) /* ty=(Tensor[(14, 15, 5), float32], Tensor[(14, 1, 5), float64]) */;
  %178 = @func_2863() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %179 = %178.0;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %181 = %172.0;
  %182 = %177.1;
  %183 = erf(%180) /* ty=Tensor[(13, 2, 6), float32] */;
  (%181, %182, meta[relay.Constant][8] /* ty=Tensor[(1, 70), float64] */, meta[relay.Constant][9] /* ty=Tensor[(1050), float64] */, %183)
}

def @func_2528() -> (Tensor[(13, 2, 6), float32],) {
  %184 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %185 = %184.0;
  (%185,)
}

def @func_4731() -> (Tensor[(13, 2, 6), bool],) {
  %186 = @func_2751() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) */;
  %187 = %186.0;
  (%187,)
}

def @func_5405(%var_5402: uint8) -> (Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(1, 135), uint64], uint8, Tensor[(108), uint8]) {
  %188 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %189 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 135), uint64] */, dtype="uint64") /* ty=Tensor[(1, 135), uint64] */;
  %190 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 135), uint64] */, dtype="uint64") /* ty=Tensor[(1, 135), uint64] */;
  %191 = cast(%var_5402, dtype="uint8") /* ty=uint8 */;
  %192 = cast(meta[relay.Constant][11] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %193 = reshape(%189, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %194 = reshape(%190, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %195 = reshape(%191, newshape=[]) /* ty=uint8 */;
  %196 = reshape(%192, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %197 = @func_1192(%193, %194, %195, %196) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) */;
  %198 = %188.0;
  %199 = %197.0;
  (%198, %199, meta[relay.Constant][10] /* ty=Tensor[(1, 135), uint64] */, %var_5402, meta[relay.Constant][11] /* ty=Tensor[(108), uint8] */)
}

def @func_3487() -> (Tensor[(13, 2, 6), float64],) {
  %200 = @func_2863() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %201 = %200.0;
  %202 = cast(%201, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %203 = sinh(%202) /* ty=Tensor[(13, 2, 6), float64] */;
  (%203,)
}

def @func_2570() -> (Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
  %204 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %205 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %206 = %204.0;
  %207 = %205.0;
  (%206, %207)
}

def @func_7201() -> (Tensor[(13, 2, 6), float32],) {
  %208 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %209 = %208.0;
  (%209,)
}

def @func_3106() -> Tensor[(13, 2, 6), float64] {
  %210 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
  %211 = %210.2;
  %212 = cast(%211, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  rsqrt(%212) /* ty=Tensor[(13, 2, 6), float64] */
}

def @func_2863() -> (Tensor[(13, 2, 6), float32],) {
  %213 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %214 = %213.0;
  (%214,)
}

def @func_5986() -> Tensor[(13, 2, 6), bool] {
  %215 = @func_4731() /* ty=(Tensor[(13, 2, 6), bool],) */;
  %215.0
}

def @func_6843(%var_6831: Tensor[(156), float32]) -> (Tensor[(16, 10, 12), float32], Tensor[(13, 2, 6), float64], Tensor[(156), float32]) {
  %216 = @func_6199() /* ty=(Tensor[(16, 10, 12), float32],) */;
  %217 = cast(%var_6831, dtype="float32") /* ty=Tensor[(156), float32] */;
  %218 = reshape(%217, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
  %219 = @func_3733(%218) /* ty=(Tensor[(?, 70), uint16], Tensor[(13, 2, 6), float64]) */;
  %220 = cast(%var_6831, dtype="float32") /* ty=Tensor[(156), float32] */;
  %221 = %216.0;
  %222 = %219.1;
  %223 = acos(%220) /* ty=Tensor[(156), float32] */;
  (%221, %222, %223)
}

def @func_4907() -> Tensor[(198), float64] {
  %224 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
  %224.4
}

def @func_7095() -> (Tensor[(13, 2, 6), uint32], Tensor[(198), float64]) {
  %225 = @func_5900() /* ty=(Tensor[(198), float64],) */;
  %226 = @func_7052() /* ty=Tensor[(13, 2, 6), uint32] */;
  %227 = %225.0;
  (%226, %227)
}

def @func_7187() -> (Tensor[(13, 2, 6), float32], Tensor[(80), float64], Tensor[(198), bool], Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), bool], Tensor[(5, 1, 16), float64], Tensor[(13, 2, 6), bool]) {
  %228 = @func_4334() /* ty=(Tensor[(16, 5, 8), bool], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %229 = @func_6883() /* ty=(Tensor[(198), float64], Tensor[(14, 3, 8), float32]) */;
  %230 = %229.0;
  %231 = cast(%230, dtype="float32") /* ty=Tensor[(198), float32] */;
  %232 = atan(%231) /* ty=Tensor[(198), float32] */;
  %233 = cast(%230, dtype="bool") /* ty=Tensor[(198), bool] */;
  %234 = shape_of(%232, dtype="int32") /* ty=Tensor[(1), int32] */;
  %235 = cast(%232, dtype="bool") /* ty=Tensor[(198), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?), bool] */;
  %237 = cast(meta[relay.Constant][12] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %238 = reshape(%237, newshape=[5, 1, 16]) /* ty=Tensor[(5, 1, 16), float64] */;
  %239 = @func_5940(%238) /* ty=Tensor[(5, 1, 16), float64] */;
  %240 = cast(%239, dtype="float64") /* ty=Tensor[(5, 1, 16), float64] */;
  %241 = %228.1;
  %242 = logical_or(%235, %236) /* ty=Tensor[(198), bool] */;
  %243 = @func_6165() /* ty=Tensor[(13, 2, 6), bool] */;
  %244 = @func_6165() /* ty=Tensor[(13, 2, 6), bool] */;
  %245 = cosh(%240) /* ty=Tensor[(5, 1, 16), float64] */;
  %246 = @func_5986() /* ty=Tensor[(13, 2, 6), bool] */;
  (%241, meta[relay.Constant][12] /* ty=Tensor[(80), float64] */, %242, %243, %244, %245, %246)
}

def @func_7458() -> Tensor[(13, 2, 6), float64] {
  %247 = @func_4879() /* ty=(Tensor[(13, 2, 6), float64],) */;
  %247.0
}

def @func_5122(%var_5119: Tensor[(156), float32], %var_5120: Tensor[(182), int8]) -> (Tensor[(14, 3, 8), float32], Tensor[(13, 2, 6), float64], Tensor[(156), float32], Tensor[(182), int8]) {
  %248 = cast(%var_5119, dtype="float32") /* ty=Tensor[(156), float32] */;
  %249 = cast(%var_5120, dtype="int8") /* ty=Tensor[(182), int8] */;
  %250 = reshape(%248, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
  %251 = reshape(%249, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %252 = @func_3628(%250, %251) /* ty=(Tensor[(13, 2, 6), int32], Tensor[(1, 14, 13), bool], int8, Tensor[(182), int8], Tensor[(14, 3, 8), float32], Tensor[(13, 2, 6), float64]) */;
  %253 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  %254 = %252.5;
  (%253, %254, %var_5119, %var_5120)
}

def @func_4334() -> (Tensor[(16, 5, 8), bool], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
  %255 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 5, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 5, 8), bool] */;
  %256 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(16, 5, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 5, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 5, 8), bool] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %259 = @func_3178() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %260 = logical_or(%257, %258) /* ty=Tensor[(16, 5, 8), bool] */;
  %261 = @func_2765() /* ty=Tensor[(13, 2, 6), float32] */;
  %262 = %259.0;
  (%260, %261, %262)
}

def @func_4281() -> Tensor[(13, 2, 6), float64] {
  %263 = @func_3487() /* ty=(Tensor[(13, 2, 6), float64],) */;
  %263.0
}

def @func_4471() -> Tensor[(13, 2, 6), float64] {
  @func_4281() /* ty=Tensor[(13, 2, 6), float64] */
}

def @func_5848() -> Tensor[(198), float64] {
  %264 = @func_3775() /* ty=(Tensor[(198), float64], Tensor[(216), float64], Tensor[(13, 2, 6), bool]) */;
  %264.0
}

def @func_3294() -> (Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), int16], Tensor[(13, 2, 6), float32]) {
  %265 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
  %266 = cast(%265, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %267 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(13, 2, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 2, 6), float64] */, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %270 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 2, 6), float64] */, dtype="int64") /* ty=Tensor[(13, 2, 6), int64] */;
  %271 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %272 = cast(%265, dtype="int64") /* ty=Tensor[(13, 2, 6), int64] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %274 = maximum(%272, %273) /* ty=Tensor[(13, 2, 6), int64] */;
  %275 = cast(%274, dtype="int16") /* ty=Tensor[(13, 2, 6), int16] */;
  %276 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%265, dtype="int16") /* ty=Tensor[(13, 2, 6), int16] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %279 = cast(%265, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %280 = logical_or(%268, %269) /* ty=Tensor[(13, 2, 6), bool] */;
  %281 = subtract(%277, %278) /* ty=Tensor[(13, 2, 6), int16] */;
  %282 = log2(%279) /* ty=Tensor[(13, 2, 6), float32] */;
  (%280, %281, %282)
}

def @func_2899() -> Tensor[(14, 3, 8), float32] {
  %283 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 3, 8), int32] */, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
  %284 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(14, 3, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 3, 8), int32] */, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %287 = less(%285, %286) /* ty=Tensor[(14, 3, 8), bool] */;
  %288 = cast(%287, dtype="float32") /* ty=Tensor[(14, 3, 8), float32] */;
  sinh(%288) /* ty=Tensor[(14, 3, 8), float32] */
}

def @func_1388(%var_1347: Tensor[(10, 12, 4), int64], %var_1348: Tensor[(10, 12, 4), int64], %var_1353: Tensor[(10, 12, 4), int64]) -> (Tensor[(10, 12, 4), int64], Tensor[(10, 12, 4), bool]) {
  %289 = cast(%var_1348, dtype="int64") /* ty=Tensor[(10, 12, 4), int64] */;
  %290 = shape_of(%var_1347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%var_1347, dtype="int64") /* ty=Tensor[(10, 12, 4), int64] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %293 = cast(%var_1347, dtype="float32") /* ty=Tensor[(10, 12, 4), float32] */;
  %294 = log2(%293) /* ty=Tensor[(10, 12, 4), float32] */;
  %295 = cast(%var_1353, dtype="float32") /* ty=Tensor[(10, 12, 4), float32] */;
  %296 = shape_of(%var_1348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%var_1348, dtype="float32") /* ty=Tensor[(10, 12, 4), float32] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %299 = mod(%297, %298) /* ty=Tensor[(10, 12, 4), float32] */;
  %300 = cast(%299, dtype="bool") /* ty=Tensor[(10, 12, 4), bool] */;
  %301 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%294, dtype="bool") /* ty=Tensor[(10, 12, 4), bool] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %304 = left_shift(%291, %292) /* ty=Tensor[(10, 12, 4), int64] */;
  %305 = equal(%302, %303) /* ty=Tensor[(10, 12, 4), bool] */;
  (%304, %305)
}

def @func_7269(%var_7245: Tensor[(198), float64], %var_7246: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(198), float64], Tensor[(216), float64], Tensor[(3, 9, 8), float64]) {
  %306 = cast(%var_7245, dtype="float64") /* ty=Tensor[(198), float64] */;
  %307 = cast(%var_7246, dtype="float64") /* ty=Tensor[(216), float64] */;
  %308 = reshape(%306, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %309 = reshape(%307, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %310 = @func_2638(%308, %309) /* ty=(Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) */;
  %311 = %310.3;
  %312 = cast(%311, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %313 = reshape(%312, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %314 = @func_2040(%313) /* ty=(Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) */;
  %315 = @func_5447() /* ty=Tensor[(13, 2, 6), float32] */;
  %316 = %314.0;
  (%315, %311, %var_7245, %var_7246, %316)
}

def @func_7470() -> Tensor[(13, 2, 6), float32] {
  @func_5447() /* ty=Tensor[(13, 2, 6), float32] */
}

def @func_6031(%var_6019: Tensor[(5, 70), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(5, 70), float64]) {
  %317 = @func_3353() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(14, 1, 5), float64], Tensor[(1, 70), float64], Tensor[(1050), float64], Tensor[(13, 2, 6), float32]) */;
  %318 = %317.2;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(1, 70), float64] */;
  %320 = cast(%var_6019, dtype="float64") /* ty=Tensor[(5, 70), float64] */;
  %321 = @func_5447() /* ty=Tensor[(13, 2, 6), float32] */;
  %322 = power(%319, %320) /* ty=Tensor[(5, 70), float64] */;
  (%321, %322)
}

def @func_2518() -> (Tensor[(13, 2, 6), float32],) {
  %323 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 2, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %324 = log(%323) /* ty=Tensor[(13, 2, 6), float32] */;
  (%324,)
}

def @func_5770() -> (Tensor[(13, 2, 6), float64],) {
  %325 = @func_4281() /* ty=Tensor[(13, 2, 6), float64] */;
  (%325,)
}

def @func_3178() -> (Tensor[(13, 2, 6), float32],) {
  %326 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %327 = %326.0;
  (%327,)
}

def @func_3196(%var_3180: int8, %var_3181: Tensor[(1, 14, 13), int8]) -> (Tensor[(1, 14, 13), bool],) {
  %328 = cast(%var_3180, dtype="bool") /* ty=bool */;
  %329 = cast(%var_3181, dtype="bool") /* ty=Tensor[(1, 14, 13), bool] */;
  %330 = less(%328, %329) /* ty=Tensor[(1, 14, 13), bool] */;
  (%330,)
}

def @func_2713(%var_2701: Tensor[(13, 2, 6), float32], %var_2708: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), int32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) {
  %331 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %332 = %331.0;
  %333 = cast(%var_2701, dtype="int32") /* ty=Tensor[(13, 2, 6), int32] */;
  %334 = shape_of(%332, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(%332, dtype="int32") /* ty=Tensor[(13, 2, 6), int32] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %337 = cast(%var_2708, dtype="float64") /* ty=Tensor[(216), float64] */;
  %338 = reshape(%337, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %339 = @func_2040(%338) /* ty=(Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) */;
  %340 = bitwise_xor(%335, %336) /* ty=Tensor[(13, 2, 6), int32] */;
  %341 = %339.1;
  (%340, %341, %var_2708)
}

def @func_4879() -> (Tensor[(13, 2, 6), float64],) {
  %342 = @func_3294() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), int16], Tensor[(13, 2, 6), float32]) */;
  %343 = %342.1;
  %344 = @func_4471() /* ty=Tensor[(13, 2, 6), float64] */;
  %345 = cast(%344, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %346 = shape_of(%343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %347 = cast(%343, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %349 = less_equal(%347, %348) /* ty=Tensor[(13, 2, 6), bool] */;
  %350 = cast(%349, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %351 = acosh(%350) /* ty=Tensor[(13, 2, 6), float64] */;
  (%351,)
}

def @func_5900() -> (Tensor[(198), float64],) {
  %352 = @func_4499() /* ty=Tensor[(198), float64] */;
  (%352,)
}

def @func_5248(%var_5203: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(14, 3, 8), float32], Tensor[(198), float64], Tensor[(13, 2, 6), int8], Tensor[(14, 2, 16), float64], Tensor[(448), float64]) {
  %353 = @func_2751() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) */;
  %354 = @func_3892() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %355 = %354.0;
  %356 = %353.1;
  %357 = cast(%356, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %358 = cast(%var_5203, dtype="float64") /* ty=Tensor[(198), float64] */;
  %359 = reshape(%357, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
  %360 = reshape(%358, newshape=[1, 198]) /* ty=Tensor[(1, 198), float64] */;
  %361 = @func_3550(%359, %360) /* ty=(Tensor[(13, 2, 6), int16], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(13, 2, 6), float32], Tensor[(4, 12, 4), int16], Tensor[(192), int16], Tensor[(13, 2, 6), float32], Tensor[(1, 198), float64]) */;
  %362 = %361.0;
  %363 = cast(%362, dtype="int8") /* ty=Tensor[(13, 2, 6), int8] */;
  %364 = shape_of(%355, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%355, dtype="int8") /* ty=Tensor[(13, 2, 6), int8] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %367 = cast(meta[relay.Constant][19] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %368 = reshape(%367, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float64] */;
  %369 = @func_2654(%368) /* ty=(Tensor[(14, 2, 16), float64],) */;
  %370 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  %371 = bitwise_and(%365, %366) /* ty=Tensor[(13, 2, 6), int8] */;
  %372 = %369.0;
  (%356, %370, %var_5203, %371, %372, meta[relay.Constant][19] /* ty=Tensor[(448), float64] */)
}

def @func_6188(%var_6176: Tensor[(288), int16]) -> (Tensor[(13, 2, 6), float64], Tensor[(3, 36), uint64], Tensor[(288), int16], uint8, Tensor[(108), uint8]) {
  %373 = cast(%var_6176, dtype="int16") /* ty=Tensor[(288), int16] */;
  %374 = cast(%var_6176, dtype="int16") /* ty=Tensor[(288), int16] */;
  %375 = cast(meta[relay.Constant][20] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %376 = cast(meta[relay.Constant][21] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %377 = cast(meta[relay.Constant][21] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %378 = reshape(%373, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
  %379 = reshape(%374, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
  %380 = reshape(%375, newshape=[]) /* ty=uint8 */;
  %381 = reshape(%376, newshape=[6, 18]) /* ty=Tensor[(6, 18), uint8] */;
  %382 = reshape(%377, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %383 = @func_1707(%378, %379, %380, %381, %382) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(6, 18), uint8], Tensor[(7, 78), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], Tensor[(3, 36), uint64], Tensor[(6, 4, 12), uint16]) */;
  %384 = @func_4471() /* ty=Tensor[(13, 2, 6), float64] */;
  %385 = %383.6;
  (%384, %385, %var_6176, meta[relay.Constant][20] /* ty=uint8 */, meta[relay.Constant][21] /* ty=Tensor[(108), uint8] */)
}

def @func_3965(%var_3934: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(13, 2, 6), float64], Tensor[(11, 9, 2), float64], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(99, 2), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], uint8, Tensor[(108), uint8], Tensor[(108), uint8], Tensor[(70, 15), float64], Tensor[(288), int16]) {
  %386 = cast(meta[relay.Constant][22] /* ty=Tensor[(99, 2), float64] */, dtype="float64") /* ty=Tensor[(99, 2), float64] */;
  %387 = reshape(%386, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
  %388 = @func_1975(%387) /* ty=(Tensor[(11, 9, 2), float64],) */;
  %389 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  %390 = cast(%389, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %391 = reshape(%390, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
  %392 = @func_3733(%391) /* ty=(Tensor[(?, 70), uint16], Tensor[(13, 2, 6), float64]) */;
  %393 = %388.0;
  %394 = cast(%393, dtype="float64") /* ty=Tensor[(11, 9, 2), float64] */;
  %395 = reshape(%394, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
  %396 = @func_1975(%395) /* ty=(Tensor[(11, 9, 2), float64],) */;
  %397 = cast(%var_3934, dtype="float64") /* ty=Tensor[(216), float64] */;
  %398 = reshape(%397, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %399 = @func_2040(%398) /* ty=(Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) */;
  %400 = cast(meta[relay.Constant][22] /* ty=Tensor[(99, 2), float64] */, dtype="float64") /* ty=Tensor[(99, 2), float64] */;
  %401 = log10(%400) /* ty=Tensor[(99, 2), float64] */;
  %402 = cast(%401, dtype="float64") /* ty=Tensor[(99, 2), float64] */;
  %403 = cast(meta[relay.Constant][23] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %404 = cast(meta[relay.Constant][23] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %405 = cast(meta[relay.Constant][24] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %406 = cast(meta[relay.Constant][25] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %407 = reshape(%403, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %408 = reshape(%404, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %409 = reshape(%405, newshape=[]) /* ty=uint8 */;
  %410 = reshape(%406, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %411 = @func_1192(%407, %408, %409, %410) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) */;
  %412 = cast(meta[relay.Constant][26] /* ty=Tensor[(70, 15), float64] */, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
  %413 = cast(meta[relay.Constant][27] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %414 = cast(meta[relay.Constant][25] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %415 = reshape(%412, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %416 = reshape(%413, newshape=[288]) /* ty=Tensor[(288), int16] */;
  %417 = reshape(%414, newshape=[108]) /* ty=Tensor[(108), uint8] */;
  %418 = @func_3461(%415, %416, %417) /* ty=(Tensor[(13, 2, 6), float64], Tensor[(14, ?, 5), float32], Tensor[(70), float32], Tensor[(6, 18), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), float64], Tensor[(1050), float32]) */;
  %419 = %392.1;
  %420 = %396.0;
  %421 = %399.0;
  %422 = sqrt(%402) /* ty=Tensor[(99, 2), float64] */;
  %423 = %411.3;
  %424 = %418.6;
  (%389, %393, %419, %420, %421, %var_3934, %422, %423, meta[relay.Constant][23] /* ty=Tensor[(135), uint64] */, meta[relay.Constant][24] /* ty=uint8 */, meta[relay.Constant][25] /* ty=Tensor[(108), uint8] */, %424, meta[relay.Constant][26] /* ty=Tensor[(70, 15), float64] */, meta[relay.Constant][27] /* ty=Tensor[(288), int16] */)
}

def @func_3733(%var_3724: Tensor[(13, 2, 6), float32]) -> (Tensor[(?, 70), uint16], Tensor[(13, 2, 6), float64]) {
  %425 = @func_3353() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(14, 1, 5), float64], Tensor[(1, 70), float64], Tensor[(1050), float64], Tensor[(13, 2, 6), float32]) */;
  %426 = %425.2;
  %427 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 70), float64] */, dtype="uint16") /* ty=Tensor[(1, 70), uint16] */;
  %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(2), int32] */;
  %429 = cast(%426, dtype="uint16") /* ty=Tensor[(1, 70), uint16] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %431 = @func_2765() /* ty=Tensor[(13, 2, 6), float32] */;
  %432 = cast(%var_3724, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %433 = shape_of(%431, dtype="int32") /* ty=Tensor[(3), int32] */;
  %434 = cast(%431, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %436 = add(%429, %430) /* ty=Tensor[(?, 70), uint16] */;
  %437 = floor_divide(%434, %435) /* ty=Tensor[(13, 2, 6), float64] */;
  (%436, %437)
}

def @func_3258(%var_3212: Tensor[(14, 1, 5), float64], %var_3222: Tensor[(14, 15, 5), float64]) -> (Tensor[(14, 15, 5), float32], Tensor[(14, 1, 5), float64]) {
  %438 = cast(%var_3212, dtype="float32") /* ty=Tensor[(14, 1, 5), float32] */;
  %439 = cast(%var_3222, dtype="float32") /* ty=Tensor[(14, 15, 5), float32] */;
  %440 = cast(%var_3212, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
  %441 = atanh(%440) /* ty=Tensor[(14, 1, 5), float64] */;
  %442 = cast(%441, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
  %443 = power(%438, %439) /* ty=Tensor[(14, 15, 5), float32] */;
  %444 = acosh(%442) /* ty=Tensor[(14, 1, 5), float64] */;
  (%443, %444)
}

def @func_3015(%var_2977: uint64, %var_2978: Tensor[(11, 11, 2), uint64]) -> (Tensor[(14, 3, 8), float32], Tensor[(11, 11, 2), float32], Tensor[(13, 2, 6), uint32]) {
  %445 = cast(%var_2977, dtype="bool") /* ty=bool */;
  %446 = cast(%var_2978, dtype="bool") /* ty=Tensor[(11, 11, 2), bool] */;
  %447 = less(%445, %446) /* ty=Tensor[(11, 11, 2), bool] */;
  %448 = cast(%447, dtype="float64") /* ty=Tensor[(11, 11, 2), float64] */;
  %449 = erf(%448) /* ty=Tensor[(11, 11, 2), float64] */;
  %450 = cast(%449, dtype="float32") /* ty=Tensor[(11, 11, 2), float32] */;
  %451 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  %452 = log(%450) /* ty=Tensor[(11, 11, 2), float32] */;
  %453 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  (%451, %452, %453)
}

def @func_5528(%var_5503: Tensor[(9, 5, 15), float32]) -> (Tensor[(9, 5, 15), float32], Tensor[(13, 2, 6), float32]) {
  %454 = cast(%var_5503, dtype="float32") /* ty=Tensor[(9, 5, 15), float32] */;
  %455 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %456 = cos(%454) /* ty=Tensor[(9, 5, 15), float32] */;
  %457 = %455.0;
  (%456, %457)
}

def @func_6972(%var_6967: Tensor[(198), float64]) -> (Tensor[(198), uint8],) {
  %458 = @func_5905() /* ty=Tensor[(198), float64] */;
  %459 = cast(%458, dtype="float64") /* ty=Tensor[(198), float64] */;
  %460 = tan(%459) /* ty=Tensor[(198), float64] */;
  %461 = cast(%var_6967, dtype="uint8") /* ty=Tensor[(198), uint8] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(1), int32] */;
  %463 = cast(%460, dtype="uint8") /* ty=Tensor[(198), uint8] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %465 = subtract(%463, %464) /* ty=Tensor[(198), uint8] */;
  (%465,)
}

def @func_2556(%var_2548: Tensor[(13, 2, 6), float32]) -> (Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) {
  %466 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %467 = %466.0;
  %468 = cast(%var_2548, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%467, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %472 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %473 = not_equal(%470, %471) /* ty=Tensor[(13, 2, 6), bool] */;
  %474 = %472.0;
  (%473, %474)
}

def @func_5085(%var_5041: Tensor[(4, 13, 16), int8], %var_5042: Tensor[(4, 13, 16), int8]) -> (Tensor[(4, 13, 16), int8], Tensor[(13, 2, 6), float32]) {
  %475 = cast(%var_5042, dtype="int8") /* ty=Tensor[(4, 13, 16), int8] */;
  %476 = shape_of(%var_5041, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%var_5041, dtype="int8") /* ty=Tensor[(4, 13, 16), int8] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %479 = @func_4052() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %480 = multiply(%477, %478) /* ty=Tensor[(4, 13, 16), int8] */;
  %481 = %479.1;
  (%480, %481)
}

def @func_1246(%var_1234: Tensor[(6, 7, 13), float64], %var_1241: Tensor[(3, 36), uint8]) -> (Tensor[(6, 7, 13), float64], Tensor[(12, 9, 1), uint8], uint8, Tensor[(3, 36), uint8]) {
  %482 = cast(%var_1234, dtype="float64") /* ty=Tensor[(6, 7, 13), float64] */;
  %483 = cast(meta[relay.Constant][29] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %484 = cast(%var_1241, dtype="uint8") /* ty=Tensor[(3, 36), uint8] */;
  %485 = reshape(%483, newshape=[]) /* ty=uint8 */;
  %486 = reshape(%484, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %487 = @func_455(%485, %486) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %488 = tan(%482) /* ty=Tensor[(6, 7, 13), float64] */;
  %489 = %487.0;
  (%488, %489, meta[relay.Constant][29] /* ty=uint8 */, %var_1241)
}

def @func_2765() -> Tensor[(13, 2, 6), float32] {
  %490 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %490.0
}

def @func_2969() -> Tensor[(13, 2, 6), uint32] {
  %491 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %492 = %491.0;
  %493 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 2, 6), float32] */, dtype="uint32") /* ty=Tensor[(13, 2, 6), uint32] */;
  %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%492, dtype="uint32") /* ty=Tensor[(13, 2, 6), uint32] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  minimum(%495, %496) /* ty=Tensor[(13, 2, 6), uint32] */
}

def @func_6304() -> (Tensor[(13, 2, 6), float64],) {
  %497 = @func_4879() /* ty=(Tensor[(13, 2, 6), float64],) */;
  %498 = %497.0;
  (%498,)
}

def @func_7350() -> (Tensor[(13, 2, 6), bool], Tensor[(14, 3, 8), float32]) {
  %499 = @func_4731() /* ty=(Tensor[(13, 2, 6), bool],) */;
  %500 = %499.0;
  %501 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  (%500, %501)
}

def @func_4635(%var_4622: Tensor[(4, 7, 4), uint16], %var_4623: Tensor[(4, 7, 4), uint16]) -> Tensor[(4, 7, 4), uint16] {
  %502 = cast(%var_4623, dtype="uint16") /* ty=Tensor[(4, 7, 4), uint16] */;
  %503 = shape_of(%var_4622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(%var_4622, dtype="uint16") /* ty=Tensor[(4, 7, 4), uint16] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%504, %505) /* ty=Tensor[(4, 7, 4), uint16] */
}

def @func_6089(%var_6060: Tensor[(8, 14, 5), uint16], %var_6061: Tensor[(8, 14, 5), uint16]) -> Tensor[(8, 14, 5), bool] {
  %506 = cast(%var_6060, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %507 = erf(%506) /* ty=Tensor[(8, 14, 5), float32] */;
  %508 = cast(%507, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %509 = sigmoid(%508) /* ty=Tensor[(8, 14, 5), float32] */;
  %510 = cast(%var_6061, dtype="bool") /* ty=Tensor[(8, 14, 5), bool] */;
  %511 = shape_of(%var_6060, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%var_6060, dtype="bool") /* ty=Tensor[(8, 14, 5), bool] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %514 = greater_equal(%512, %513) /* ty=Tensor[(8, 14, 5), bool] */;
  %515 = cast(%514, dtype="bool") /* ty=Tensor[(8, 14, 5), bool] */;
  %516 = shape_of(%509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%509, dtype="bool") /* ty=Tensor[(8, 14, 5), bool] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%517, %518) /* ty=Tensor[(8, 14, 5), bool] */
}

def @func_6788(%var_6740: Tensor[(351), uint16], %var_6763: Tensor[(108), uint8]) -> (Tensor[(13, 2, 6), float64], Tensor[(3, 9, 13), float32], Tensor[(108), uint8], Tensor[(108), uint8], Tensor[(351), float64]) {
  %519 = cast(%var_6740, dtype="uint16") /* ty=Tensor[(351), uint16] */;
  %520 = cast(%var_6740, dtype="uint16") /* ty=Tensor[(351), uint16] */;
  %521 = reshape(%519, newshape=[3, 9, 13]) /* ty=Tensor[(3, 9, 13), uint16] */;
  %522 = reshape(%520, newshape=[3, 9, 13]) /* ty=Tensor[(3, 9, 13), uint16] */;
  %523 = @func_6583(%521, %522) /* ty=(Tensor[(3, 9, 13), uint16], Tensor[(3, 9, 13), float32]) */;
  %524 = cast(%var_6763, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %525 = reshape(%524, newshape=[108]) /* ty=Tensor[(108), uint8] */;
  %526 = @func_4602(%525) /* ty=(Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(14, 2, 16), float64], Tensor[(448), float64]) */;
  %527 = cast(%var_6740, dtype="float64") /* ty=Tensor[(351), float64] */;
  %528 = @func_4471() /* ty=Tensor[(13, 2, 6), float64] */;
  %529 = %523.1;
  %530 = %526.4;
  %531 = asinh(%527) /* ty=Tensor[(351), float64] */;
  (%528, %529, %530, %var_6763, %531)
}

def @func_5681(%var_5652: Tensor[(11, 6, 2), int8], %var_5673: Tensor[(1050), float64]) -> (Tensor[(11, 6, 2), int32], Tensor[(70), float32], Tensor[(1050), float64], Tensor[(288), int16], Tensor[(108), uint8]) {
  %532 = cast(%var_5652, dtype="int8") /* ty=Tensor[(11, 6, 2), int8] */;
  %533 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(11, 6, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 6, 2), int8] */, dtype="int8") /* ty=Tensor[(11, 6, 2), int8] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %536 = left_shift(%534, %535) /* ty=Tensor[(11, 6, 2), int8] */;
  %537 = cast(%var_5652, dtype="int32") /* ty=Tensor[(11, 6, 2), int32] */;
  %538 = shape_of(%536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %539 = cast(%536, dtype="int32") /* ty=Tensor[(11, 6, 2), int32] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %541 = cast(%var_5673, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %542 = cast(meta[relay.Constant][32] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
  %543 = cast(meta[relay.Constant][33] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %544 = reshape(%541, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %545 = reshape(%542, newshape=[288]) /* ty=Tensor[(288), int16] */;
  %546 = reshape(%543, newshape=[108]) /* ty=Tensor[(108), uint8] */;
  %547 = @func_3461(%544, %545, %546) /* ty=(Tensor[(13, 2, 6), float64], Tensor[(14, ?, 5), float32], Tensor[(70), float32], Tensor[(6, 18), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), float64], Tensor[(1050), float32]) */;
  %548 = logical_xor(%539, %540) /* ty=Tensor[(11, 6, 2), int32] */;
  %549 = %547.2;
  (%548, %549, %var_5673, meta[relay.Constant][32] /* ty=Tensor[(288), int16] */, meta[relay.Constant][33] /* ty=Tensor[(108), uint8] */)
}

def @func_2654(%var_2646: Tensor[(14, 2, 16), float64]) -> (Tensor[(14, 2, 16), float64],) {
  %550 = cast(%var_2646, dtype="float64") /* ty=Tensor[(14, 2, 16), float64] */;
  %551 = cos(%550) /* ty=Tensor[(14, 2, 16), float64] */;
  (%551,)
}

def @func_5758() -> Tensor[(13, 2, 6), float32] {
  %552 = @func_4334() /* ty=(Tensor[(16, 5, 8), bool], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %552.2
}

def @func_2040(%var_2025: Tensor[(3, 9, 8), float64]) -> (Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) {
  %553 = cast(%var_2025, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %554 = cast(%var_2025, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %555 = asinh(%553) /* ty=Tensor[(3, 9, 8), float64] */;
  %556 = sqrt(%554) /* ty=Tensor[(3, 9, 8), float64] */;
  (%555, %556)
}

def @func_7052() -> Tensor[(13, 2, 6), uint32] {
  %557 = @func_4457() /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) */;
  %557.0
}

def @func_5905() -> Tensor[(198), float64] {
  @func_4907() /* ty=Tensor[(198), float64] */
}

def @func_7406(%var_7395: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float64], Tensor[(3, 9, 8), float64], Tensor[(198), float64]) {
  %558 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
  %559 = cast(%558, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %560 = cast(%var_7395, dtype="float64") /* ty=Tensor[(198), float64] */;
  %561 = reshape(%559, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
  %562 = reshape(%560, newshape=[1, 198]) /* ty=Tensor[(1, 198), float64] */;
  %563 = @func_3550(%561, %562) /* ty=(Tensor[(13, 2, 6), int16], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(13, 2, 6), float32], Tensor[(4, 12, 4), int16], Tensor[(192), int16], Tensor[(13, 2, 6), float32], Tensor[(1, 198), float64]) */;
  %564 = %563.1;
  (%558, %564, %var_7395)
}

def @func_3628(%var_3585: Tensor[(13, 2, 6), float32], %var_3599: Tensor[(182), int8]) -> (Tensor[(13, 2, 6), int32], Tensor[(1, 14, 13), bool], int8, Tensor[(182), int8], Tensor[(14, 3, 8), float32], Tensor[(13, 2, 6), float64]) {
  %565 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
  %566 = cast(%565, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %567 = sin(%566) /* ty=Tensor[(13, 2, 6), float32] */;
  %568 = cast(%var_3585, dtype="int32") /* ty=Tensor[(13, 2, 6), int32] */;
  %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(%567, dtype="int32") /* ty=Tensor[(13, 2, 6), int32] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %572 = cast(meta[relay.Constant][34] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %573 = cast(%var_3599, dtype="int8") /* ty=Tensor[(182), int8] */;
  %574 = reshape(%572, newshape=[]) /* ty=int8 */;
  %575 = reshape(%573, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), int8] */;
  %576 = @func_3196(%574, %575) /* ty=(Tensor[(1, 14, 13), bool],) */;
  %577 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
  %578 = right_shift(%570, %571) /* ty=Tensor[(13, 2, 6), int32] */;
  %579 = %576.0;
  %580 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  %581 = %577.1;
  (%578, %579, meta[relay.Constant][34] /* ty=int8 */, %var_3599, %580, %581)
}

def @func_3892() -> (Tensor[(13, 2, 6), float32],) {
  %582 = @func_3178() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %583 = %582.0;
  (%583,)
}

def @func_3550(%var_3520: Tensor[(13, 2, 6), float32], %var_3546: Tensor[(1, 198), float64]) -> (Tensor[(13, 2, 6), int16], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(13, 2, 6), float32], Tensor[(4, 12, 4), int16], Tensor[(192), int16], Tensor[(13, 2, 6), float32], Tensor[(1, 198), float64]) {
  %584 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %585 = %584.0;
  %586 = cast(%var_3520, dtype="int16") /* ty=Tensor[(13, 2, 6), int16] */;
  %587 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
  %588 = cast(%585, dtype="int16") /* ty=Tensor[(13, 2, 6), int16] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %590 = cast(meta[relay.Constant][35] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %591 = reshape(%590, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %592 = @func_2040(%591) /* ty=(Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) */;
  %593 = cast(meta[relay.Constant][36] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %594 = cast(meta[relay.Constant][36] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %595 = reshape(%593, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int16] */;
  %596 = reshape(%594, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int16] */;
  %597 = cast(%var_3546, dtype="float64") /* ty=Tensor[(1, 198), float64] */;
  %598 = cast(meta[relay.Constant][35] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %599 = reshape(%597, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %600 = reshape(%598, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %601 = @func_2638(%599, %600) /* ty=(Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) */;
  %602 = add(%588, %589) /* ty=Tensor[(13, 2, 6), int16] */;
  %603 = %592.0;
  %604 = @func_2765() /* ty=Tensor[(13, 2, 6), float32] */;
  %605 = @func_2020(%595, %596) /* ty=Tensor[(4, 12, 4), int16] */;
  %606 = %601.2;
  (%602, %603, meta[relay.Constant][35] /* ty=Tensor[(216), float64] */, %604, %605, meta[relay.Constant][36] /* ty=Tensor[(192), int16] */, %606, %var_3546)
}

def @func_5799(%var_5793: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) {
  %607 = cast(meta[relay.Constant][37] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %608 = reshape(%607, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
  %609 = @func_1975(%608) /* ty=(Tensor[(11, 9, 2), float64],) */;
  %610 = cast(%var_5793, dtype="float64") /* ty=Tensor[(216), float64] */;
  %611 = reshape(%610, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %612 = @func_3965(%611) /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(13, 2, 6), float64], Tensor[(11, 9, 2), float64], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(99, 2), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], uint8, Tensor[(108), uint8], Tensor[(108), uint8], Tensor[(70, 15), float64], Tensor[(288), int16]) */;
  %613 = @func_2765() /* ty=Tensor[(13, 2, 6), float32] */;
  %614 = %609.0;
  %615 = %612.4;
  (%613, %614, meta[relay.Constant][37] /* ty=Tensor[(198), float64] */, %615, %var_5793)
}

def @func_5333() -> Tensor[(14, 3, 8), float32] {
  @func_2899() /* ty=Tensor[(14, 3, 8), float32] */
}

def @func_6199() -> (Tensor[(16, 10, 12), float32],) {
  %616 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 12), float32] */;
  %617 = sigmoid(%616) /* ty=Tensor[(16, 10, 12), float32] */;
  (%617,)
}

def @func_2020(%var_2011: Tensor[(4, 12, 4), int16], %var_2012: Tensor[(4, 12, 4), int16]) -> Tensor[(4, 12, 4), int16] {
  %618 = cast(%var_2012, dtype="int16") /* ty=Tensor[(4, 12, 4), int16] */;
  %619 = shape_of(%var_2011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_2011, dtype="int16") /* ty=Tensor[(4, 12, 4), int16] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  multiply(%620, %621) /* ty=Tensor[(4, 12, 4), int16] */
}

def @main(%var_7501: int32, %var_7502: Tensor[(3, 2, 9), int32]) -> (Tensor[(3, 2, 9), bool], Tensor[(13, 2, 6), uint16], Tensor[(3, 2, 9), float32]) {
  %622 = cast(%var_7501, dtype="bool") /* ty=bool */;
  %623 = cast(%var_7502, dtype="bool") /* ty=Tensor[(3, 2, 9), bool] */;
  %624 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %625 = %624.0;
  %626 = cast(%625, dtype="uint16") /* ty=Tensor[(13, 2, 6), uint16] */;
  %627 = cast(%var_7501, dtype="uint16") /* ty=uint16 */;
  %628 = cast(%var_7502, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
  %629 = less_equal(%622, %623) /* ty=Tensor[(3, 2, 9), bool] */;
  %630 = left_shift(%626, %627) /* ty=Tensor[(13, 2, 6), uint16] */;
  %631 = exp(%628) /* ty=Tensor[(3, 2, 9), float32] */;
  (%629, %630, %631)
}

def @func_1707(%var_1660: Tensor[(6, 4, 12), int16], %var_1661: Tensor[(6, 4, 12), int16], %var_1672: uint8, %var_1673: Tensor[(6, 18), uint8], %var_1687: Tensor[(3, 36), uint8]) -> (Tensor[(12, 9, 1), uint8], uint8, Tensor[(6, 18), uint8], Tensor[(7, 78), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], Tensor[(3, 36), uint64], Tensor[(6, 4, 12), uint16]) {
  %632 = cast(%var_1672, dtype="uint8") /* ty=uint8 */;
  %633 = cast(%var_1673, dtype="uint8") /* ty=Tensor[(6, 18), uint8] */;
  %634 = reshape(%632, newshape=[]) /* ty=uint8 */;
  %635 = reshape(%633, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %636 = @func_455(%634, %635) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %637 = cast(meta[relay.Constant][40] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %638 = cast(meta[relay.Constant][40] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %639 = cast(%var_1672, dtype="uint8") /* ty=uint8 */;
  %640 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 78), float64] */, dtype="float64") /* ty=Tensor[(7, 78), float64] */;
  %641 = cast(%var_1673, dtype="uint8") /* ty=Tensor[(6, 18), uint8] */;
  %642 = reshape(%640, newshape=[6, 7, 13]) /* ty=Tensor[(6, 7, 13), float64] */;
  %643 = reshape(%641, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %644 = @func_1246(%642, %643) /* ty=(Tensor[(6, 7, 13), float64], Tensor[(12, 9, 1), uint8], uint8, Tensor[(3, 36), uint8]) */;
  %645 = %644.3;
  %646 = cast(%645, dtype="uint8") /* ty=Tensor[(3, 36), uint8] */;
  %647 = reshape(%637, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %648 = reshape(%638, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %649 = reshape(%639, newshape=[]) /* ty=uint8 */;
  %650 = reshape(%646, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %651 = @func_1192(%647, %648, %649, %650) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) */;
  %652 = cast(%var_1687, dtype="uint64") /* ty=Tensor[(3, 36), uint64] */;
  %653 = shape_of(%645, dtype="int32") /* ty=Tensor[(2), int32] */;
  %654 = cast(%645, dtype="uint64") /* ty=Tensor[(3, 36), uint64] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %656 = cast(%var_1660, dtype="float32") /* ty=Tensor[(6, 4, 12), float32] */;
  %657 = tan(%656) /* ty=Tensor[(6, 4, 12), float32] */;
  %658 = cast(%var_1661, dtype="bool") /* ty=Tensor[(6, 4, 12), bool] */;
  %659 = shape_of(%var_1660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%var_1660, dtype="bool") /* ty=Tensor[(6, 4, 12), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %662 = less_equal(%660, %661) /* ty=Tensor[(6, 4, 12), bool] */;
  %663 = cast(%662, dtype="uint16") /* ty=Tensor[(6, 4, 12), uint16] */;
  %664 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(%657, dtype="uint16") /* ty=Tensor[(6, 4, 12), uint16] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %667 = %636.0;
  %668 = %651.0;
  %669 = add(%654, %655) /* ty=Tensor[(3, 36), uint64] */;
  %670 = bitwise_xor(%665, %666) /* ty=Tensor[(6, 4, 12), uint16] */;
  (%667, %var_1672, %var_1673, meta[relay.Constant][39] /* ty=Tensor[(7, 78), float64] */, %668, meta[relay.Constant][40] /* ty=Tensor[(135), uint64] */, %669, %670)
}

def @func_5603() -> (Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) {
  %671 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  %672 = cast(%671, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %673 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
  %674 = sigmoid(%672) /* ty=Tensor[(13, 2, 6), float32] */;
  %675 = %673.2;
  (%674, %675)
}

def @func_6456(%var_6359: uint8, %var_6360: Tensor[(108), uint8], %var_6405: Tensor[(12, 9, 135), float64], %var_6445: Tensor[(12, 9, 135), float64]) -> (Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), bool], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(14, 6, 10), uint32], Tensor[(840), uint32], Tensor[(14, 3, 8), float32], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 135), float64], Tensor[(12, 9, 135), bool], Tensor[(12, 9, 135), float64]) {
  %676 = @func_4457() /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) */;
  %677 = @func_3294() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), int16], Tensor[(13, 2, 6), float32]) */;
  %678 = @func_5750() /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(288), int16], Tensor[(132), int8], Tensor[(1050), float64], Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float64], Tensor[(1650), float32]) */;
  %679 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %680 = cast(%var_6359, dtype="uint8") /* ty=uint8 */;
  %681 = cast(meta[relay.Constant][41] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %682 = cast(meta[relay.Constant][41] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %683 = cast(%var_6359, dtype="uint8") /* ty=uint8 */;
  %684 = cast(%var_6360, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %685 = reshape(%681, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %686 = reshape(%682, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %687 = reshape(%683, newshape=[]) /* ty=uint8 */;
  %688 = reshape(%684, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %689 = @func_1192(%685, %686, %687, %688) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) */;
  %690 = %689.3;
  %691 = cast(%690, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %692 = atanh(%691) /* ty=Tensor[(12, 9, 1), float32] */;
  %693 = cast(%692, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
  %694 = reshape(%680, newshape=[]) /* ty=uint8 */;
  %695 = reshape(%693, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %696 = @func_455(%694, %695) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %697 = cast(meta[relay.Constant][42] /* ty=Tensor[(840), uint32] */, dtype="uint32") /* ty=Tensor[(840), uint32] */;
  %698 = cast(meta[relay.Constant][42] /* ty=Tensor[(840), uint32] */, dtype="uint32") /* ty=Tensor[(840), uint32] */;
  %699 = reshape(%697, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), uint32] */;
  %700 = reshape(%698, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), uint32] */;
  %701 = @func_5154(%699, %700) /* ty=(Tensor[(14, 6, 10), uint32],) */;
  %702 = cast(%var_6359, dtype="uint8") /* ty=uint8 */;
  %703 = cast(%692, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
  %704 = reshape(%702, newshape=[]) /* ty=uint8 */;
  %705 = reshape(%703, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %706 = @func_455(%704, %705) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %707 = cast(%var_6405, dtype="float64") /* ty=Tensor[(12, 9, 135), float64] */;
  %708 = cast(%692, dtype="uint16") /* ty=Tensor[(12, 9, 1), uint16] */;
  %709 = cast(meta[relay.Constant][41] /* ty=Tensor[(135), uint64] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %710 = subtract(%708, %709) /* ty=Tensor[(12, 9, 135), uint16] */;
  %711 = cast(%710, dtype="float64") /* ty=Tensor[(12, 9, 135), float64] */;
  %712 = acos(%711) /* ty=Tensor[(12, 9, 135), float64] */;
  %713 = cast(%var_6405, dtype="bool") /* ty=Tensor[(12, 9, 135), bool] */;
  %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%712, dtype="bool") /* ty=Tensor[(12, 9, 135), bool] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %717 = cast(%var_6405, dtype="int64") /* ty=Tensor[(12, 9, 135), int64] */;
  %718 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %719 = cast(%712, dtype="int64") /* ty=Tensor[(12, 9, 135), int64] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %721 = bitwise_or(%719, %720) /* ty=Tensor[(12, 9, 135), int64] */;
  %722 = cast(%721, dtype="float64") /* ty=Tensor[(12, 9, 135), float64] */;
  %723 = asinh(%722) /* ty=Tensor[(12, 9, 135), float64] */;
  %724 = cast(%var_6445, dtype="bool") /* ty=Tensor[(12, 9, 135), bool] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%723, dtype="bool") /* ty=Tensor[(12, 9, 135), bool] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %728 = less(%726, %727) /* ty=Tensor[(12, 9, 135), bool] */;
  %729 = cast(%728, dtype="float64") /* ty=Tensor[(12, 9, 135), float64] */;
  %730 = %676.2;
  %731 = %677.0;
  %732 = %678.4;
  %733 = %679.1;
  %734 = %696.0;
  %735 = %701.0;
  %736 = @func_5333() /* ty=Tensor[(14, 3, 8), float32] */;
  %737 = %706.0;
  %738 = sinh(%707) /* ty=Tensor[(12, 9, 135), float64] */;
  %739 = logical_or(%715, %716) /* ty=Tensor[(12, 9, 135), bool] */;
  %740 = sqrt(%729) /* ty=Tensor[(12, 9, 135), float64] */;
  (%730, %731, %var_6359, %var_6360, %732, %733, %734, %735, meta[relay.Constant][42] /* ty=Tensor[(840), uint32] */, %736, %737, %738, %739, %740)
}

def @func_3775() -> (Tensor[(198), float64], Tensor[(216), float64], Tensor[(13, 2, 6), bool]) {
  %741 = cast(meta[relay.Constant][43] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %742 = cast(meta[relay.Constant][44] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %743 = reshape(%741, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %744 = reshape(%742, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %745 = @func_2638(%743, %744) /* ty=(Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) */;
  %746 = %745.2;
  %747 = @func_3487() /* ty=(Tensor[(13, 2, 6), float64],) */;
  %748 = %747.0;
  %749 = cast(%748, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %750 = shape_of(%746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%746, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %753 = greater_equal(%751, %752) /* ty=Tensor[(13, 2, 6), bool] */;
  (meta[relay.Constant][43] /* ty=Tensor[(198), float64] */, meta[relay.Constant][44] /* ty=Tensor[(216), float64] */, %753)
}

def @func_4052() -> (Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
  %754 = @func_3353() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(14, 1, 5), float64], Tensor[(1, 70), float64], Tensor[(1050), float64], Tensor[(13, 2, 6), float32]) */;
  %755 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %756 = %754.0;
  %757 = %755.0;
  (%756, %757)
}

def @func_3082() -> (Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) {
  %758 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  %759 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 2, 6), uint32] */, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%758, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %763 = cast(%758, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %764 = cos(%763) /* ty=Tensor[(13, 2, 6), float32] */;
  %765 = cast(%764, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %766 = cast(meta[relay.Constant][46] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %767 = reshape(%766, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
  %768 = @func_1975(%767) /* ty=(Tensor[(11, 9, 2), float64],) */;
  %769 = floor_mod(%761, %762) /* ty=Tensor[(13, 2, 6), float64] */;
  %770 = cosh(%765) /* ty=Tensor[(13, 2, 6), float64] */;
  %771 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  %772 = %768.0;
  (%769, %770, %771, %772, meta[relay.Constant][46] /* ty=Tensor[(198), float64] */)
}

def @func_7318() -> (Tensor[(198), float64], Tensor[(198), float64], Tensor[(13, 2, 6), bool]) {
  %773 = @func_5900() /* ty=(Tensor[(198), float64],) */;
  %774 = @func_4731() /* ty=(Tensor[(13, 2, 6), bool],) */;
  %775 = %773.0;
  %776 = @func_5848() /* ty=Tensor[(198), float64] */;
  %777 = %774.0;
  (%775, %776, %777)
}

def @func_3461(%var_3382: Tensor[(1050), float64], %var_3414: Tensor[(288), int16], %var_3416: Tensor[(108), uint8]) -> (Tensor[(13, 2, 6), float64], Tensor[(14, ?, 5), float32], Tensor[(70), float32], Tensor[(6, 18), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), float64], Tensor[(1050), float32]) {
  %778 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
  %779 = cast(meta[relay.Constant][47] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %780 = cast(%var_3382, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %781 = reshape(%779, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %782 = reshape(%780, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), float64] */;
  %783 = @func_3258(%781, %782) /* ty=(Tensor[(14, 15, 5), float32], Tensor[(14, 1, 5), float64]) */;
  %784 = %783.1;
  %785 = cast(meta[relay.Constant][47] /* ty=Tensor[(70), float64] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %786 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%784, dtype="float32") /* ty=Tensor[(14, 1, 5), float32] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %789 = cast(meta[relay.Constant][47] /* ty=Tensor[(70), float64] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %790 = cast(%var_3414, dtype="int16") /* ty=Tensor[(288), int16] */;
  %791 = cast(%var_3414, dtype="int16") /* ty=Tensor[(288), int16] */;
  %792 = cast(meta[relay.Constant][48] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %793 = cast(%var_3416, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %794 = cast(%var_3416, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %795 = reshape(%790, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
  %796 = reshape(%791, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
  %797 = reshape(%792, newshape=[]) /* ty=uint8 */;
  %798 = reshape(%793, newshape=[6, 18]) /* ty=Tensor[(6, 18), uint8] */;
  %799 = reshape(%794, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %800 = @func_1707(%795, %796, %797, %798, %799) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(6, 18), uint8], Tensor[(7, 78), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], Tensor[(3, 36), uint64], Tensor[(6, 4, 12), uint16]) */;
  %801 = cast(%var_3382, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %802 = %778.0;
  %803 = power(%787, %788) /* ty=Tensor[(14, ?, 5), float32] */;
  %804 = sqrt(%789) /* ty=Tensor[(70), float32] */;
  %805 = %800.2;
  %806 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
  %807 = acosh(%801) /* ty=Tensor[(1050), float32] */;
  (%802, %803, %804, %805, %var_3414, meta[relay.Constant][48] /* ty=uint8 */, %var_3416, %806, %807)
}

def @func_3855(%var_3827: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float64], Tensor[(11, 9, 2), float64], Tensor[(198), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
  %808 = cast(%var_3827, dtype="float64") /* ty=Tensor[(198), float64] */;
  %809 = reshape(%808, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
  %810 = @func_1975(%809) /* ty=(Tensor[(11, 9, 2), float64],) */;
  %811 = cast(%var_3827, dtype="float32") /* ty=Tensor[(198), float32] */;
  %812 = @func_2863() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %813 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %814 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
  %815 = %810.0;
  %816 = asin(%811) /* ty=Tensor[(198), float32] */;
  %817 = %812.0;
  %818 = %813.1;
  (%814, %815, %816, %817, %818)
}

def @func_4140() -> (Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float64]) {
  %819 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
  %820 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %821 = @func_3178() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %822 = %819.0;
  %823 = %820.1;
  %824 = %821.0;
  %825 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
  (%822, %823, %824, %825)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3258(%var_3212: Tensor[(14, 1, 5), float64], %var_3222: Tensor[(14, 15, 5), float64]) -> (Tensor[(14, 15, 5), float32], Tensor[(14, 1, 5), float64]) {
  %0 = cast(%var_3212, dtype="float32") /* ty=Tensor[(14, 1, 5), float32] */;
  %1 = cast(%var_3222, dtype="float32") /* ty=Tensor[(14, 15, 5), float32] */;
  %2 = cast(%var_3212, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
  %3 = atanh(%2) /* ty=Tensor[(14, 1, 5), float64] */;
  %4 = cast(%3, dtype="float64") /* ty=Tensor[(14, 1, 5), float64] */;
  %5 = power(%0, %1) /* ty=Tensor[(14, 15, 5), float32] */;
  %6 = acosh(%4) /* ty=Tensor[(14, 1, 5), float64] */;
  (%5, %6)
}

def @func_2657(%var_2655: Tensor[(14, 2, 16), float64]) -> (Tensor[(14, 2, 16), float64],) {
  @func_2654(%var_2655) /* ty=(Tensor[(14, 2, 16), float64],) */
}

def @func_4336() -> (Tensor[(16, 5, 8), bool], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
  @func_4334() /* ty=(Tensor[(16, 5, 8), bool], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */
}

def @func_2717(%var_2715: Tensor[(13, 2, 6), float32], %var_2716: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), int32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) {
  @func_2713(%var_2715, %var_2716) /* ty=(Tensor[(13, 2, 6), int32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) */
}

def @func_1977(%var_1976: Tensor[(11, 9, 2), float64]) -> (Tensor[(11, 9, 2), float64],) {
  %9 = fn (%var_1968: Tensor[(11, 9, 2), float64]) -> (Tensor[(11, 9, 2), float64],) {
    %7 = cast(%var_1968, dtype="float64") /* ty=Tensor[(11, 9, 2), float64] */;
    %8 = erf(%7) /* ty=Tensor[(11, 9, 2), float64] */;
    (%8,)
  };
  %9(%var_1976) /* ty=(Tensor[(11, 9, 2), float64],) */
}

def @func_4334() -> (Tensor[(16, 5, 8), bool], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 5, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 5, 8), bool] */;
  %11 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(16, 5, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 5, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 5, 8), bool] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %14 = @func_3178() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %15 = logical_or(%12, %13) /* ty=Tensor[(16, 5, 8), bool] */;
  %16 = @func_2765() /* ty=Tensor[(13, 2, 6), float32] */;
  %17 = %14.0;
  (%15, %16, %17)
}

def @func_2767() -> Tensor[(13, 2, 6), float32] {
  @func_2765() /* ty=Tensor[(13, 2, 6), float32] */
}

def @func_7352() -> (Tensor[(13, 2, 6), bool], Tensor[(14, 3, 8), float32]) {
  @func_7350() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(14, 3, 8), float32]) */
}

def @func_3200(%var_3198: int8, %var_3199: Tensor[(1, 14, 13), int8]) -> (Tensor[(1, 14, 13), bool],) {
  @func_3196(%var_3198, %var_3199) /* ty=(Tensor[(1, 14, 13), bool],) */
}

def @func_6165() -> Tensor[(13, 2, 6), bool] {
  %18 = @func_4731() /* ty=(Tensor[(13, 2, 6), bool],) */;
  %19 = %18.0;
  %20 = cast(%19, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %21 = asinh(%20) /* ty=Tensor[(13, 2, 6), float32] */;
  %22 = cast(%19, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%21, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%24, %25) /* ty=Tensor[(13, 2, 6), bool] */
}

def @func_3466(%var_3463: Tensor[(1050), float64], %var_3464: Tensor[(288), int16], %var_3465: Tensor[(108), uint8]) -> (Tensor[(13, 2, 6), float64], Tensor[(14, ?, 5), float32], Tensor[(70), float32], Tensor[(6, 18), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), float64], Tensor[(1050), float32]) {
  @func_3461(%var_3463, %var_3464, %var_3465) /* ty=(Tensor[(13, 2, 6), float64], Tensor[(14, ?, 5), float32], Tensor[(70), float32], Tensor[(6, 18), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), float64], Tensor[(1050), float32]) */
}

def @func_7406(%var_7395: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float64], Tensor[(3, 9, 8), float64], Tensor[(198), float64]) {
  %26 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
  %27 = cast(%26, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %28 = cast(%var_7395, dtype="float64") /* ty=Tensor[(198), float64] */;
  %29 = reshape(%27, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
  %30 = reshape(%28, newshape=[1, 198]) /* ty=Tensor[(1, 198), float64] */;
  %31 = @func_3550(%29, %30) /* ty=(Tensor[(13, 2, 6), int16], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(13, 2, 6), float32], Tensor[(4, 12, 4), int16], Tensor[(192), int16], Tensor[(13, 2, 6), float32], Tensor[(1, 198), float64]) */;
  %32 = %31.1;
  (%26, %32, %var_7395)
}

def @func_5760() -> Tensor[(13, 2, 6), float32] {
  @func_5758() /* ty=Tensor[(13, 2, 6), float32] */
}

def @func_3858(%var_3856: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float64], Tensor[(11, 9, 2), float64], Tensor[(198), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
  @func_3855(%var_3856) /* ty=(Tensor[(13, 2, 6), float64], Tensor[(11, 9, 2), float64], Tensor[(198), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */
}

def @func_2556(%var_2548: Tensor[(13, 2, 6), float32]) -> (Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) {
  %33 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %34 = %33.0;
  %35 = cast(%var_2548, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%34, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %39 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %40 = not_equal(%37, %38) /* ty=Tensor[(13, 2, 6), bool] */;
  %41 = %39.0;
  (%40, %41)
}

def @func_2864() -> (Tensor[(13, 2, 6), float32],) {
  %44 = fn () -> (Tensor[(13, 2, 6), float32],) {
    %42 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
    %43 = %42.0;
    (%43,)
  };
  %44() /* ty=(Tensor[(13, 2, 6), float32],) */
}

def @func_6974(%var_6973: Tensor[(198), float64]) -> (Tensor[(198), uint8],) {
  %53 = fn (%var_6967: Tensor[(198), float64]) -> (Tensor[(198), uint8],) {
    %45 = @func_5905() /* ty=Tensor[(198), float64] */;
    %46 = cast(%45, dtype="float64") /* ty=Tensor[(198), float64] */;
    %47 = tan(%46) /* ty=Tensor[(198), float64] */;
    %48 = cast(%var_6967, dtype="uint8") /* ty=Tensor[(198), uint8] */;
    %49 = shape_of(%47, dtype="int32") /* ty=Tensor[(1), int32] */;
    %50 = cast(%47, dtype="uint8") /* ty=Tensor[(198), uint8] */;
    %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %52 = subtract(%50, %51) /* ty=Tensor[(198), uint8] */;
    (%52,)
  };
  %53(%var_6973) /* ty=(Tensor[(198), uint8],) */
}

def @func_3735(%var_3734: Tensor[(13, 2, 6), float32]) -> (Tensor[(?, 70), uint16], Tensor[(13, 2, 6), float64]) {
  %67 = fn (%var_3724: Tensor[(13, 2, 6), float32]) -> (Tensor[(?, 70), uint16], Tensor[(13, 2, 6), float64]) {
    %54 = @func_3353() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(14, 1, 5), float64], Tensor[(1, 70), float64], Tensor[(1050), float64], Tensor[(13, 2, 6), float32]) */;
    %55 = %54.2;
    %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 70), float64] */, dtype="uint16") /* ty=Tensor[(1, 70), uint16] */;
    %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(2), int32] */;
    %58 = cast(%55, dtype="uint16") /* ty=Tensor[(1, 70), uint16] */;
    %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %60 = @func_2765() /* ty=Tensor[(13, 2, 6), float32] */;
    %61 = cast(%var_3724, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
    %62 = shape_of(%60, dtype="int32") /* ty=Tensor[(3), int32] */;
    %63 = cast(%60, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
    %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %65 = add(%58, %59) /* ty=Tensor[(?, 70), uint16] */;
    %66 = floor_divide(%63, %64) /* ty=Tensor[(13, 2, 6), float64] */;
    (%65, %66)
  };
  %67(%var_3734) /* ty=(Tensor[(?, 70), uint16], Tensor[(13, 2, 6), float64]) */
}

def @func_7037(%var_7035: Tensor[(192), int16]) -> (Tensor[(198), float64], Tensor[(4, 12, 4), int16], Tensor[(192), int16]) {
  %68 = cast(%var_7035, dtype="int16") /* ty=Tensor[(192), int16] */;
  %69 = cast(%var_7035, dtype="int16") /* ty=Tensor[(192), int16] */;
  %70 = reshape(%68, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int16] */;
  %71 = reshape(%69, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int16] */;
  %72 = @func_4499() /* ty=Tensor[(198), float64] */;
  %73 = @func_2020(%70, %71) /* ty=Tensor[(4, 12, 4), int16] */;
  (%72, %73, %var_7035)
}

def @func_3196(%var_3180: int8, %var_3181: Tensor[(1, 14, 13), int8]) -> (Tensor[(1, 14, 13), bool],) {
  %74 = cast(%var_3180, dtype="bool") /* ty=bool */;
  %75 = cast(%var_3181, dtype="bool") /* ty=Tensor[(1, 14, 13), bool] */;
  %76 = less(%74, %75) /* ty=Tensor[(1, 14, 13), bool] */;
  (%76,)
}

def @func_7409(%var_7407: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float64], Tensor[(3, 9, 8), float64], Tensor[(198), float64]) {
  @func_7406(%var_7407) /* ty=(Tensor[(13, 2, 6), float64], Tensor[(3, 9, 8), float64], Tensor[(198), float64]) */
}

def @func_2642(%var_2640: Tensor[(198), float64], %var_2641: Tensor[(216), float64]) -> (Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) {
  @func_2638(%var_2640, %var_2641) /* ty=(Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) */
}

def @func_6200() -> (Tensor[(16, 10, 12), float32],) {
  %79 = fn () -> (Tensor[(16, 10, 12), float32],) {
    %77 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 12), float32] */;
    %78 = sigmoid(%77) /* ty=Tensor[(16, 10, 12), float32] */;
    (%78,)
  };
  %79() /* ty=(Tensor[(16, 10, 12), float32],) */
}

def @func_3487() -> (Tensor[(13, 2, 6), float64],) {
  %80 = @func_2863() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %81 = %80.0;
  %82 = cast(%81, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %83 = sinh(%82) /* ty=Tensor[(13, 2, 6), float64] */;
  (%83,)
}

def @func_6120(%var_6115: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float32], Tensor[(198), float64]) {
  %84 = @func_4879() /* ty=(Tensor[(13, 2, 6), float64],) */;
  %85 = %84.0;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %87 = cast(%var_6115, dtype="float64") /* ty=Tensor[(198), float64] */;
  %88 = reshape(%86, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
  %89 = reshape(%87, newshape=[1, 198]) /* ty=Tensor[(1, 198), float64] */;
  %90 = @func_3550(%88, %89) /* ty=(Tensor[(13, 2, 6), int16], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(13, 2, 6), float32], Tensor[(4, 12, 4), int16], Tensor[(192), int16], Tensor[(13, 2, 6), float32], Tensor[(1, 198), float64]) */;
  %91 = %90.6;
  (%85, %91, %var_6115)
}

def @func_3553(%var_3551: Tensor[(13, 2, 6), float32], %var_3552: Tensor[(1, 198), float64]) -> (Tensor[(13, 2, 6), int16], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(13, 2, 6), float32], Tensor[(4, 12, 4), int16], Tensor[(192), int16], Tensor[(13, 2, 6), float32], Tensor[(1, 198), float64]) {
  %115 = fn (%var_3520: Tensor[(13, 2, 6), float32], %var_3546: Tensor[(1, 198), float64]) -> (Tensor[(13, 2, 6), int16], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(13, 2, 6), float32], Tensor[(4, 12, 4), int16], Tensor[(192), int16], Tensor[(13, 2, 6), float32], Tensor[(1, 198), float64]) {
    %92 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %93 = %92.0;
    %94 = cast(%var_3520, dtype="int16") /* ty=Tensor[(13, 2, 6), int16] */;
    %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
    %96 = cast(%93, dtype="int16") /* ty=Tensor[(13, 2, 6), int16] */;
    %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %98 = cast(meta[relay.Constant][4] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %99 = reshape(%98, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
    %100 = @func_2040(%99) /* ty=(Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) */;
    %101 = cast(meta[relay.Constant][5] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
    %102 = cast(meta[relay.Constant][5] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
    %103 = reshape(%101, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int16] */;
    %104 = reshape(%102, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int16] */;
    %105 = cast(%var_3546, dtype="float64") /* ty=Tensor[(1, 198), float64] */;
    %106 = cast(meta[relay.Constant][4] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %107 = reshape(%105, newshape=[198]) /* ty=Tensor[(198), float64] */;
    %108 = reshape(%106, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %109 = @func_2638(%107, %108) /* ty=(Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) */;
    %110 = add(%96, %97) /* ty=Tensor[(13, 2, 6), int16] */;
    %111 = %100.0;
    %112 = @func_2765() /* ty=Tensor[(13, 2, 6), float32] */;
    %113 = @func_2020(%103, %104) /* ty=Tensor[(4, 12, 4), int16] */;
    %114 = %109.2;
    (%110, %111, meta[relay.Constant][4] /* ty=Tensor[(216), float64] */, %112, %113, meta[relay.Constant][5] /* ty=Tensor[(192), int16] */, %114, %var_3546)
  };
  %115(%var_3551, %var_3552) /* ty=(Tensor[(13, 2, 6), int16], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(13, 2, 6), float32], Tensor[(4, 12, 4), int16], Tensor[(192), int16], Tensor[(13, 2, 6), float32], Tensor[(1, 198), float64]) */
}

def @func_5758() -> Tensor[(13, 2, 6), float32] {
  %116 = @func_4334() /* ty=(Tensor[(16, 5, 8), bool], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %116.2
}

def @func_3179() -> (Tensor[(13, 2, 6), float32],) {
  %119 = fn () -> (Tensor[(13, 2, 6), float32],) {
    %117 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %118 = %117.0;
    (%118,)
  };
  %119() /* ty=(Tensor[(13, 2, 6), float32],) */
}

def @func_4604(%var_4603: Tensor[(108), uint8]) -> (Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(14, 2, 16), float64], Tensor[(448), float64]) {
  %138 = fn (%var_4581: Tensor[(108), uint8]) -> (Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(14, 2, 16), float64], Tensor[(448), float64]) {
    %120 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %121 = cast(meta[relay.Constant][6] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
    %122 = cast(meta[relay.Constant][6] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
    %123 = cast(meta[relay.Constant][7] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %124 = cast(%var_4581, dtype="uint8") /* ty=Tensor[(108), uint8] */;
    %125 = cast(%var_4581, dtype="uint8") /* ty=Tensor[(108), uint8] */;
    %126 = reshape(%121, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
    %127 = reshape(%122, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
    %128 = reshape(%123, newshape=[]) /* ty=uint8 */;
    %129 = reshape(%124, newshape=[6, 18]) /* ty=Tensor[(6, 18), uint8] */;
    %130 = reshape(%125, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
    %131 = @func_1707(%126, %127, %128, %129, %130) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(6, 18), uint8], Tensor[(7, 78), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], Tensor[(3, 36), uint64], Tensor[(6, 4, 12), uint16]) */;
    %132 = cast(meta[relay.Constant][8] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %133 = reshape(%132, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float64] */;
    %134 = @func_2654(%133) /* ty=(Tensor[(14, 2, 16), float64],) */;
    %135 = %120.0;
    %136 = %131.0;
    %137 = %134.0;
    (%135, %136, meta[relay.Constant][6] /* ty=Tensor[(288), int16] */, meta[relay.Constant][7] /* ty=uint8 */, %var_4581, %137, meta[relay.Constant][8] /* ty=Tensor[(448), float64] */)
  };
  %138(%var_4603) /* ty=(Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(14, 2, 16), float64], Tensor[(448), float64]) */
}

def @func_5907() -> Tensor[(198), float64] {
  @func_5905() /* ty=Tensor[(198), float64] */
}

def @func_2899() -> Tensor[(14, 3, 8), float32] {
  %139 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 3, 8), int32] */, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
  %140 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(14, 3, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 3, 8), int32] */, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %143 = less(%141, %142) /* ty=Tensor[(14, 3, 8), bool] */;
  %144 = cast(%143, dtype="float32") /* ty=Tensor[(14, 3, 8), float32] */;
  sinh(%144) /* ty=Tensor[(14, 3, 8), float32] */
}

def @func_7472() -> Tensor[(13, 2, 6), float32] {
  @func_7470() /* ty=Tensor[(13, 2, 6), float32] */
}

def @func_5334() -> Tensor[(14, 3, 8), float32] {
  %145 = fn () -> Tensor[(14, 3, 8), float32] {
    @func_2899() /* ty=Tensor[(14, 3, 8), float32] */
  };
  %145() /* ty=Tensor[(14, 3, 8), float32] */
}

def @func_4879() -> (Tensor[(13, 2, 6), float64],) {
  %146 = @func_3294() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), int16], Tensor[(13, 2, 6), float32]) */;
  %147 = %146.1;
  %148 = @func_4471() /* ty=Tensor[(13, 2, 6), float64] */;
  %149 = cast(%148, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %150 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%147, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %153 = less_equal(%151, %152) /* ty=Tensor[(13, 2, 6), bool] */;
  %154 = cast(%153, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %155 = acosh(%154) /* ty=Tensor[(13, 2, 6), float64] */;
  (%155,)
}

def @func_459(%var_457: uint8, %var_458: Tensor[(12, 9, 1), uint8]) -> (Tensor[(12, 9, 1), uint8],) {
  @func_455(%var_457, %var_458) /* ty=(Tensor[(12, 9, 1), uint8],) */
}

def @func_5251(%var_5249: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(14, 3, 8), float32], Tensor[(198), float64], Tensor[(13, 2, 6), int8], Tensor[(14, 2, 16), float64], Tensor[(448), float64]) {
  @func_5248(%var_5249) /* ty=(Tensor[(13, 2, 6), float32], Tensor[(14, 3, 8), float32], Tensor[(198), float64], Tensor[(13, 2, 6), int8], Tensor[(14, 2, 16), float64], Tensor[(448), float64]) */
}

def @func_5408(%var_5406: uint8) -> (Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(1, 135), uint64], uint8, Tensor[(108), uint8]) {
  @func_5405(%var_5406) /* ty=(Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(1, 135), uint64], uint8, Tensor[(108), uint8]) */
}

def @func_3893() -> (Tensor[(13, 2, 6), float32],) {
  %158 = fn () -> (Tensor[(13, 2, 6), float32],) {
    %156 = @func_3178() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %157 = %156.0;
    (%157,)
  };
  %158() /* ty=(Tensor[(13, 2, 6), float32],) */
}

def @func_1707(%var_1660: Tensor[(6, 4, 12), int16], %var_1661: Tensor[(6, 4, 12), int16], %var_1672: uint8, %var_1673: Tensor[(6, 18), uint8], %var_1687: Tensor[(3, 36), uint8]) -> (Tensor[(12, 9, 1), uint8], uint8, Tensor[(6, 18), uint8], Tensor[(7, 78), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], Tensor[(3, 36), uint64], Tensor[(6, 4, 12), uint16]) {
  %159 = cast(%var_1672, dtype="uint8") /* ty=uint8 */;
  %160 = cast(%var_1673, dtype="uint8") /* ty=Tensor[(6, 18), uint8] */;
  %161 = reshape(%159, newshape=[]) /* ty=uint8 */;
  %162 = reshape(%160, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %163 = @func_455(%161, %162) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %164 = cast(meta[relay.Constant][12] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %165 = cast(meta[relay.Constant][12] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %166 = cast(%var_1672, dtype="uint8") /* ty=uint8 */;
  %167 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 78), float64] */, dtype="float64") /* ty=Tensor[(7, 78), float64] */;
  %168 = cast(%var_1673, dtype="uint8") /* ty=Tensor[(6, 18), uint8] */;
  %169 = reshape(%167, newshape=[6, 7, 13]) /* ty=Tensor[(6, 7, 13), float64] */;
  %170 = reshape(%168, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %171 = @func_1246(%169, %170) /* ty=(Tensor[(6, 7, 13), float64], Tensor[(12, 9, 1), uint8], uint8, Tensor[(3, 36), uint8]) */;
  %172 = %171.3;
  %173 = cast(%172, dtype="uint8") /* ty=Tensor[(3, 36), uint8] */;
  %174 = reshape(%164, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %175 = reshape(%165, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %176 = reshape(%166, newshape=[]) /* ty=uint8 */;
  %177 = reshape(%173, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %178 = @func_1192(%174, %175, %176, %177) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) */;
  %179 = cast(%var_1687, dtype="uint64") /* ty=Tensor[(3, 36), uint64] */;
  %180 = shape_of(%172, dtype="int32") /* ty=Tensor[(2), int32] */;
  %181 = cast(%172, dtype="uint64") /* ty=Tensor[(3, 36), uint64] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %183 = cast(%var_1660, dtype="float32") /* ty=Tensor[(6, 4, 12), float32] */;
  %184 = tan(%183) /* ty=Tensor[(6, 4, 12), float32] */;
  %185 = cast(%var_1661, dtype="bool") /* ty=Tensor[(6, 4, 12), bool] */;
  %186 = shape_of(%var_1660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %187 = cast(%var_1660, dtype="bool") /* ty=Tensor[(6, 4, 12), bool] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %189 = less_equal(%187, %188) /* ty=Tensor[(6, 4, 12), bool] */;
  %190 = cast(%189, dtype="uint16") /* ty=Tensor[(6, 4, 12), uint16] */;
  %191 = shape_of(%184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%184, dtype="uint16") /* ty=Tensor[(6, 4, 12), uint16] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %194 = %163.0;
  %195 = %178.0;
  %196 = add(%181, %182) /* ty=Tensor[(3, 36), uint64] */;
  %197 = bitwise_xor(%192, %193) /* ty=Tensor[(6, 4, 12), uint16] */;
  (%194, %var_1672, %var_1673, meta[relay.Constant][11] /* ty=Tensor[(7, 78), float64] */, %195, meta[relay.Constant][12] /* ty=Tensor[(135), uint64] */, %196, %197)
}

def @func_6792(%var_6790: Tensor[(351), uint16], %var_6791: Tensor[(108), uint8]) -> (Tensor[(13, 2, 6), float64], Tensor[(3, 9, 13), float32], Tensor[(108), uint8], Tensor[(108), uint8], Tensor[(351), float64]) {
  @func_6788(%var_6790, %var_6791) /* ty=(Tensor[(13, 2, 6), float64], Tensor[(3, 9, 13), float32], Tensor[(108), uint8], Tensor[(108), uint8], Tensor[(351), float64]) */
}

def @func_5905() -> Tensor[(198), float64] {
  @func_4907() /* ty=Tensor[(198), float64] */
}

def @func_5849() -> Tensor[(198), float64] {
  %199 = fn () -> Tensor[(198), float64] {
    %198 = @func_3775() /* ty=(Tensor[(198), float64], Tensor[(216), float64], Tensor[(13, 2, 6), bool]) */;
    %198.0
  };
  %199() /* ty=Tensor[(198), float64] */
}

def @func_5987() -> Tensor[(13, 2, 6), bool] {
  %201 = fn () -> Tensor[(13, 2, 6), bool] {
    %200 = @func_4731() /* ty=(Tensor[(13, 2, 6), bool],) */;
    %200.0
  };
  %201() /* ty=Tensor[(13, 2, 6), bool] */
}

def @func_3106() -> Tensor[(13, 2, 6), float64] {
  %202 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
  %203 = %202.2;
  %204 = cast(%203, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  rsqrt(%204) /* ty=Tensor[(13, 2, 6), float64] */
}

def @func_6034(%var_6032: Tensor[(5, 70), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(5, 70), float64]) {
  @func_6031(%var_6032) /* ty=(Tensor[(13, 2, 6), float32], Tensor[(5, 70), float64]) */
}

def @func_4732() -> (Tensor[(13, 2, 6), bool],) {
  %207 = fn () -> (Tensor[(13, 2, 6), bool],) {
    %205 = @func_2751() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) */;
    %206 = %205.0;
    (%206,)
  };
  %207() /* ty=(Tensor[(13, 2, 6), bool],) */
}

def @func_5085(%var_5041: Tensor[(4, 13, 16), int8], %var_5042: Tensor[(4, 13, 16), int8]) -> (Tensor[(4, 13, 16), int8], Tensor[(13, 2, 6), float32]) {
  %208 = cast(%var_5042, dtype="int8") /* ty=Tensor[(4, 13, 16), int8] */;
  %209 = shape_of(%var_5041, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%var_5041, dtype="int8") /* ty=Tensor[(4, 13, 16), int8] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %212 = @func_4052() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %213 = multiply(%210, %211) /* ty=Tensor[(4, 13, 16), int8] */;
  %214 = %212.1;
  (%213, %214)
}

def @func_3295() -> (Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), int16], Tensor[(13, 2, 6), float32]) {
  %233 = fn () -> (Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), int16], Tensor[(13, 2, 6), float32]) {
    %215 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
    %216 = cast(%215, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
    %217 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(13, 2, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %218 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 2, 6), float64] */, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
    %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %220 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 2, 6), float64] */, dtype="int64") /* ty=Tensor[(13, 2, 6), int64] */;
    %221 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %222 = cast(%215, dtype="int64") /* ty=Tensor[(13, 2, 6), int64] */;
    %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %224 = maximum(%222, %223) /* ty=Tensor[(13, 2, 6), int64] */;
    %225 = cast(%224, dtype="int16") /* ty=Tensor[(13, 2, 6), int16] */;
    %226 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %227 = cast(%215, dtype="int16") /* ty=Tensor[(13, 2, 6), int16] */;
    %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %229 = cast(%215, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
    %230 = logical_or(%218, %219) /* ty=Tensor[(13, 2, 6), bool] */;
    %231 = subtract(%227, %228) /* ty=Tensor[(13, 2, 6), int16] */;
    %232 = log2(%229) /* ty=Tensor[(13, 2, 6), float32] */;
    (%230, %231, %232)
  };
  %233() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), int16], Tensor[(13, 2, 6), float32]) */
}

def @func_3632(%var_3630: Tensor[(13, 2, 6), float32], %var_3631: Tensor[(182), int8]) -> (Tensor[(13, 2, 6), int32], Tensor[(1, 14, 13), bool], int8, Tensor[(182), int8], Tensor[(14, 3, 8), float32], Tensor[(13, 2, 6), float64]) {
  @func_3628(%var_3630, %var_3631) /* ty=(Tensor[(13, 2, 6), int32], Tensor[(1, 14, 13), bool], int8, Tensor[(182), int8], Tensor[(14, 3, 8), float32], Tensor[(13, 2, 6), float64]) */
}

def @func_3775() -> (Tensor[(198), float64], Tensor[(216), float64], Tensor[(13, 2, 6), bool]) {
  %234 = cast(meta[relay.Constant][14] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %235 = cast(meta[relay.Constant][15] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %236 = reshape(%234, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %237 = reshape(%235, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %238 = @func_2638(%236, %237) /* ty=(Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) */;
  %239 = %238.2;
  %240 = @func_3487() /* ty=(Tensor[(13, 2, 6), float64],) */;
  %241 = %240.0;
  %242 = cast(%241, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %243 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%239, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %246 = greater_equal(%244, %245) /* ty=Tensor[(13, 2, 6), bool] */;
  (meta[relay.Constant][14] /* ty=Tensor[(198), float64] */, meta[relay.Constant][15] /* ty=Tensor[(216), float64] */, %246)
}

def @func_4282() -> Tensor[(13, 2, 6), float64] {
  %248 = fn () -> Tensor[(13, 2, 6), float64] {
    %247 = @func_3487() /* ty=(Tensor[(13, 2, 6), float64],) */;
    %247.0
  };
  %248() /* ty=Tensor[(13, 2, 6), float64] */
}

def @func_2042(%var_2041: Tensor[(3, 9, 8), float64]) -> (Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) {
  %253 = fn (%var_2025: Tensor[(3, 9, 8), float64]) -> (Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) {
    %249 = cast(%var_2025, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
    %250 = cast(%var_2025, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
    %251 = asinh(%249) /* ty=Tensor[(3, 9, 8), float64] */;
    %252 = sqrt(%250) /* ty=Tensor[(3, 9, 8), float64] */;
    (%251, %252)
  };
  %253(%var_2041) /* ty=(Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) */
}

def @func_6586(%var_6584: Tensor[(3, 9, 13), uint16], %var_6585: Tensor[(3, 9, 13), uint16]) -> (Tensor[(3, 9, 13), uint16], Tensor[(3, 9, 13), float32]) {
  %264 = fn (%var_6573: Tensor[(3, 9, 13), uint16], %var_6574: Tensor[(3, 9, 13), uint16]) -> (Tensor[(3, 9, 13), uint16], Tensor[(3, 9, 13), float32]) {
    %254 = cast(%var_6574, dtype="uint16") /* ty=Tensor[(3, 9, 13), uint16] */;
    %255 = shape_of(%var_6573, dtype="int32") /* ty=Tensor[(3), int32] */;
    %256 = cast(%var_6573, dtype="uint16") /* ty=Tensor[(3, 9, 13), uint16] */;
    %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %258 = cast(%var_6573, dtype="float32") /* ty=Tensor[(3, 9, 13), float32] */;
    %259 = shape_of(%var_6574, dtype="int32") /* ty=Tensor[(3), int32] */;
    %260 = cast(%var_6574, dtype="float32") /* ty=Tensor[(3, 9, 13), float32] */;
    %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %262 = logical_xor(%256, %257) /* ty=Tensor[(3, 9, 13), uint16] */;
    %263 = divide(%260, %261) /* ty=Tensor[(3, 9, 13), float32] */;
    (%262, %263)
  };
  %264(%var_6584, %var_6585) /* ty=(Tensor[(3, 9, 13), uint16], Tensor[(3, 9, 13), float32]) */
}

def @func_5154(%var_5134: Tensor[(14, 6, 10), uint32], %var_5135: Tensor[(14, 6, 10), uint32]) -> (Tensor[(14, 6, 10), uint32],) {
  %265 = cast(%var_5135, dtype="uint32") /* ty=Tensor[(14, 6, 10), uint32] */;
  %266 = shape_of(%var_5134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%var_5134, dtype="uint32") /* ty=Tensor[(14, 6, 10), uint32] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %269 = bitwise_or(%267, %268) /* ty=Tensor[(14, 6, 10), uint32] */;
  (%269,)
}

def @func_2765() -> Tensor[(13, 2, 6), float32] {
  %270 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %270.0
}

def @func_4501() -> Tensor[(198), float64] {
  @func_4499() /* ty=Tensor[(198), float64] */
}

def @func_7202() -> (Tensor[(13, 2, 6), float32],) {
  %273 = fn () -> (Tensor[(13, 2, 6), float32],) {
    %271 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %272 = %271.0;
    (%272,)
  };
  %273() /* ty=(Tensor[(13, 2, 6), float32],) */
}

def @func_5122(%var_5119: Tensor[(156), float32], %var_5120: Tensor[(182), int8]) -> (Tensor[(14, 3, 8), float32], Tensor[(13, 2, 6), float64], Tensor[(156), float32], Tensor[(182), int8]) {
  %274 = cast(%var_5119, dtype="float32") /* ty=Tensor[(156), float32] */;
  %275 = cast(%var_5120, dtype="int8") /* ty=Tensor[(182), int8] */;
  %276 = reshape(%274, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
  %277 = reshape(%275, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %278 = @func_3628(%276, %277) /* ty=(Tensor[(13, 2, 6), int32], Tensor[(1, 14, 13), bool], int8, Tensor[(182), int8], Tensor[(14, 3, 8), float32], Tensor[(13, 2, 6), float64]) */;
  %279 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  %280 = %278.5;
  (%279, %280, %var_5119, %var_5120)
}

def @func_7350() -> (Tensor[(13, 2, 6), bool], Tensor[(14, 3, 8), float32]) {
  %281 = @func_4731() /* ty=(Tensor[(13, 2, 6), bool],) */;
  %282 = %281.0;
  %283 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  (%282, %283)
}

def @func_2713(%var_2701: Tensor[(13, 2, 6), float32], %var_2708: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), int32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) {
  %284 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %285 = %284.0;
  %286 = cast(%var_2701, dtype="int32") /* ty=Tensor[(13, 2, 6), int32] */;
  %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%285, dtype="int32") /* ty=Tensor[(13, 2, 6), int32] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %290 = cast(%var_2708, dtype="float64") /* ty=Tensor[(216), float64] */;
  %291 = reshape(%290, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %292 = @func_2040(%291) /* ty=(Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) */;
  %293 = bitwise_xor(%288, %289) /* ty=Tensor[(13, 2, 6), int32] */;
  %294 = %292.1;
  (%293, %294, %var_2708)
}

def @func_3628(%var_3585: Tensor[(13, 2, 6), float32], %var_3599: Tensor[(182), int8]) -> (Tensor[(13, 2, 6), int32], Tensor[(1, 14, 13), bool], int8, Tensor[(182), int8], Tensor[(14, 3, 8), float32], Tensor[(13, 2, 6), float64]) {
  %295 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
  %296 = cast(%295, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %297 = sin(%296) /* ty=Tensor[(13, 2, 6), float32] */;
  %298 = cast(%var_3585, dtype="int32") /* ty=Tensor[(13, 2, 6), int32] */;
  %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%297, dtype="int32") /* ty=Tensor[(13, 2, 6), int32] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %302 = cast(meta[relay.Constant][16] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %303 = cast(%var_3599, dtype="int8") /* ty=Tensor[(182), int8] */;
  %304 = reshape(%302, newshape=[]) /* ty=int8 */;
  %305 = reshape(%303, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), int8] */;
  %306 = @func_3196(%304, %305) /* ty=(Tensor[(1, 14, 13), bool],) */;
  %307 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
  %308 = right_shift(%300, %301) /* ty=Tensor[(13, 2, 6), int32] */;
  %309 = %306.0;
  %310 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  %311 = %307.1;
  (%308, %309, meta[relay.Constant][16] /* ty=int8 */, %var_3599, %310, %311)
}

def @func_2970() -> Tensor[(13, 2, 6), uint32] {
  %318 = fn () -> Tensor[(13, 2, 6), uint32] {
    %312 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %313 = %312.0;
    %314 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 2, 6), float32] */, dtype="uint32") /* ty=Tensor[(13, 2, 6), uint32] */;
    %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
    %316 = cast(%313, dtype="uint32") /* ty=Tensor[(13, 2, 6), uint32] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    minimum(%316, %317) /* ty=Tensor[(13, 2, 6), uint32] */
  };
  %318() /* ty=Tensor[(13, 2, 6), uint32] */
}

def @func_5750() -> (Tensor[(13, 2, 6), uint32], Tensor[(288), int16], Tensor[(132), int8], Tensor[(1050), float64], Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float64], Tensor[(1650), float32]) {
  %319 = @func_5603() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) */;
  %320 = cast(meta[relay.Constant][18] /* ty=Tensor[(132), int8] */, dtype="int8") /* ty=Tensor[(132), int8] */;
  %321 = cast(meta[relay.Constant][19] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %322 = reshape(%320, newshape=[11, 6, 2]) /* ty=Tensor[(11, 6, 2), int8] */;
  %323 = reshape(%321, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %324 = @func_5681(%322, %323) /* ty=(Tensor[(11, 6, 2), int32], Tensor[(70), float32], Tensor[(1050), float64], Tensor[(288), int16], Tensor[(108), uint8]) */;
  %325 = @func_5603() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) */;
  %326 = @func_2751() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) */;
  %327 = @func_2751() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) */;
  %328 = cast(meta[relay.Constant][20] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %329 = reshape(%328, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %330 = @func_4957(%329) /* ty=(Tensor[(13, 2, 6), bool], Tensor[(11, 10, 15), float32], Tensor[(198), float64], Tensor[(13, 2, 6), float64]) */;
  %331 = %319.1;
  %332 = %324.3;
  %333 = %325.1;
  %334 = %326.1;
  %335 = %327.1;
  %336 = %330.3;
  (%331, %332, meta[relay.Constant][18] /* ty=Tensor[(132), int8] */, meta[relay.Constant][19] /* ty=Tensor[(1050), float64] */, %333, %334, %335, %336, meta[relay.Constant][20] /* ty=Tensor[(1650), float32] */)
}

def @func_2753() -> (Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) {
  @func_2751() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) */
}

def @func_4635(%var_4622: Tensor[(4, 7, 4), uint16], %var_4623: Tensor[(4, 7, 4), uint16]) -> Tensor[(4, 7, 4), uint16] {
  %337 = cast(%var_4623, dtype="uint16") /* ty=Tensor[(4, 7, 4), uint16] */;
  %338 = shape_of(%var_4622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%var_4622, dtype="uint16") /* ty=Tensor[(4, 7, 4), uint16] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%339, %340) /* ty=Tensor[(4, 7, 4), uint16] */
}

def @func_5943(%var_5941: Tensor[(5, 1, 16), float64]) -> Tensor[(5, 1, 16), float64] {
  @func_5940(%var_5941) /* ty=Tensor[(5, 1, 16), float64] */
}

def @func_3855(%var_3827: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float64], Tensor[(11, 9, 2), float64], Tensor[(198), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
  %341 = cast(%var_3827, dtype="float64") /* ty=Tensor[(198), float64] */;
  %342 = reshape(%341, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
  %343 = @func_1975(%342) /* ty=(Tensor[(11, 9, 2), float64],) */;
  %344 = cast(%var_3827, dtype="float32") /* ty=Tensor[(198), float32] */;
  %345 = @func_2863() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %346 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %347 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
  %348 = %343.0;
  %349 = asin(%344) /* ty=Tensor[(198), float32] */;
  %350 = %345.0;
  %351 = %346.1;
  (%347, %348, %349, %350, %351)
}

def @func_4639(%var_4637: Tensor[(4, 7, 4), uint16], %var_4638: Tensor[(4, 7, 4), uint16]) -> Tensor[(4, 7, 4), uint16] {
  @func_4635(%var_4637, %var_4638) /* ty=Tensor[(4, 7, 4), uint16] */
}

def @func_7319() -> (Tensor[(198), float64], Tensor[(198), float64], Tensor[(13, 2, 6), bool]) {
  %357 = fn () -> (Tensor[(198), float64], Tensor[(198), float64], Tensor[(13, 2, 6), bool]) {
    %352 = @func_5900() /* ty=(Tensor[(198), float64],) */;
    %353 = @func_4731() /* ty=(Tensor[(13, 2, 6), bool],) */;
    %354 = %352.0;
    %355 = @func_5848() /* ty=Tensor[(198), float64] */;
    %356 = %353.0;
    (%354, %355, %356)
  };
  %357() /* ty=(Tensor[(198), float64], Tensor[(198), float64], Tensor[(13, 2, 6), bool]) */
}

def @func_6461(%var_6457: uint8, %var_6458: Tensor[(108), uint8], %var_6459: Tensor[(12, 9, 135), float64], %var_6460: Tensor[(12, 9, 135), float64]) -> (Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), bool], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(14, 6, 10), uint32], Tensor[(840), uint32], Tensor[(14, 3, 8), float32], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 135), float64], Tensor[(12, 9, 135), bool], Tensor[(12, 9, 135), float64]) {
  %423 = fn (%var_6359: uint8, %var_6360: Tensor[(108), uint8], %var_6405: Tensor[(12, 9, 135), float64], %var_6445: Tensor[(12, 9, 135), float64]) -> (Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), bool], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(14, 6, 10), uint32], Tensor[(840), uint32], Tensor[(14, 3, 8), float32], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 135), float64], Tensor[(12, 9, 135), bool], Tensor[(12, 9, 135), float64]) {
    %358 = @func_4457() /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) */;
    %359 = @func_3294() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), int16], Tensor[(13, 2, 6), float32]) */;
    %360 = @func_5750() /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(288), int16], Tensor[(132), int8], Tensor[(1050), float64], Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float64], Tensor[(1650), float32]) */;
    %361 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
    %362 = cast(%var_6359, dtype="uint8") /* ty=uint8 */;
    %363 = cast(meta[relay.Constant][21] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
    %364 = cast(meta[relay.Constant][21] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
    %365 = cast(%var_6359, dtype="uint8") /* ty=uint8 */;
    %366 = cast(%var_6360, dtype="uint8") /* ty=Tensor[(108), uint8] */;
    %367 = reshape(%363, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
    %368 = reshape(%364, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
    %369 = reshape(%365, newshape=[]) /* ty=uint8 */;
    %370 = reshape(%366, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
    %371 = @func_1192(%367, %368, %369, %370) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) */;
    %372 = %371.3;
    %373 = cast(%372, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
    %374 = atanh(%373) /* ty=Tensor[(12, 9, 1), float32] */;
    %375 = cast(%374, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
    %376 = reshape(%362, newshape=[]) /* ty=uint8 */;
    %377 = reshape(%375, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
    %378 = @func_455(%376, %377) /* ty=(Tensor[(12, 9, 1), uint8],) */;
    %379 = cast(meta[relay.Constant][22] /* ty=Tensor[(840), uint32] */, dtype="uint32") /* ty=Tensor[(840), uint32] */;
    %380 = cast(meta[relay.Constant][22] /* ty=Tensor[(840), uint32] */, dtype="uint32") /* ty=Tensor[(840), uint32] */;
    %381 = reshape(%379, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), uint32] */;
    %382 = reshape(%380, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), uint32] */;
    %383 = @func_5154(%381, %382) /* ty=(Tensor[(14, 6, 10), uint32],) */;
    %384 = cast(%var_6359, dtype="uint8") /* ty=uint8 */;
    %385 = cast(%374, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
    %386 = reshape(%384, newshape=[]) /* ty=uint8 */;
    %387 = reshape(%385, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
    %388 = @func_455(%386, %387) /* ty=(Tensor[(12, 9, 1), uint8],) */;
    %389 = cast(%var_6405, dtype="float64") /* ty=Tensor[(12, 9, 135), float64] */;
    %390 = cast(%374, dtype="uint16") /* ty=Tensor[(12, 9, 1), uint16] */;
    %391 = cast(meta[relay.Constant][21] /* ty=Tensor[(135), uint64] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %392 = subtract(%390, %391) /* ty=Tensor[(12, 9, 135), uint16] */;
    %393 = cast(%392, dtype="float64") /* ty=Tensor[(12, 9, 135), float64] */;
    %394 = acos(%393) /* ty=Tensor[(12, 9, 135), float64] */;
    %395 = cast(%var_6405, dtype="bool") /* ty=Tensor[(12, 9, 135), bool] */;
    %396 = shape_of(%394, dtype="int32") /* ty=Tensor[(3), int32] */;
    %397 = cast(%394, dtype="bool") /* ty=Tensor[(12, 9, 135), bool] */;
    %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %399 = cast(%var_6405, dtype="int64") /* ty=Tensor[(12, 9, 135), int64] */;
    %400 = shape_of(%394, dtype="int32") /* ty=Tensor[(3), int32] */;
    %401 = cast(%394, dtype="int64") /* ty=Tensor[(12, 9, 135), int64] */;
    %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %403 = bitwise_or(%401, %402) /* ty=Tensor[(12, 9, 135), int64] */;
    %404 = cast(%403, dtype="float64") /* ty=Tensor[(12, 9, 135), float64] */;
    %405 = asinh(%404) /* ty=Tensor[(12, 9, 135), float64] */;
    %406 = cast(%var_6445, dtype="bool") /* ty=Tensor[(12, 9, 135), bool] */;
    %407 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
    %408 = cast(%405, dtype="bool") /* ty=Tensor[(12, 9, 135), bool] */;
    %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %410 = less(%408, %409) /* ty=Tensor[(12, 9, 135), bool] */;
    %411 = cast(%410, dtype="float64") /* ty=Tensor[(12, 9, 135), float64] */;
    %412 = %358.2;
    %413 = %359.0;
    %414 = %360.4;
    %415 = %361.1;
    %416 = %378.0;
    %417 = %383.0;
    %418 = @func_5333() /* ty=Tensor[(14, 3, 8), float32] */;
    %419 = %388.0;
    %420 = sinh(%389) /* ty=Tensor[(12, 9, 135), float64] */;
    %421 = logical_or(%397, %398) /* ty=Tensor[(12, 9, 135), bool] */;
    %422 = sqrt(%411) /* ty=Tensor[(12, 9, 135), float64] */;
    (%412, %413, %var_6359, %var_6360, %414, %415, %416, %417, meta[relay.Constant][22] /* ty=Tensor[(840), uint32] */, %418, %419, %420, %421, %422)
  };
  %423(%var_6457, %var_6458, %var_6459, %var_6460) /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), bool], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(14, 6, 10), uint32], Tensor[(840), uint32], Tensor[(14, 3, 8), float32], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 135), float64], Tensor[(12, 9, 135), bool], Tensor[(12, 9, 135), float64]) */
}

def @func_3082() -> (Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) {
  %424 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  %425 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 2, 6), uint32] */, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %426 = shape_of(%424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%424, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %429 = cast(%424, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %430 = cos(%429) /* ty=Tensor[(13, 2, 6), float32] */;
  %431 = cast(%430, dtype="float64") /* ty=Tensor[(13, 2, 6), float64] */;
  %432 = cast(meta[relay.Constant][24] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %433 = reshape(%432, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
  %434 = @func_1975(%433) /* ty=(Tensor[(11, 9, 2), float64],) */;
  %435 = floor_mod(%427, %428) /* ty=Tensor[(13, 2, 6), float64] */;
  %436 = cosh(%431) /* ty=Tensor[(13, 2, 6), float64] */;
  %437 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  %438 = %434.0;
  (%435, %436, %437, %438, meta[relay.Constant][24] /* ty=Tensor[(198), float64] */)
}

def @func_3015(%var_2977: uint64, %var_2978: Tensor[(11, 11, 2), uint64]) -> (Tensor[(14, 3, 8), float32], Tensor[(11, 11, 2), float32], Tensor[(13, 2, 6), uint32]) {
  %439 = cast(%var_2977, dtype="bool") /* ty=bool */;
  %440 = cast(%var_2978, dtype="bool") /* ty=Tensor[(11, 11, 2), bool] */;
  %441 = less(%439, %440) /* ty=Tensor[(11, 11, 2), bool] */;
  %442 = cast(%441, dtype="float64") /* ty=Tensor[(11, 11, 2), float64] */;
  %443 = erf(%442) /* ty=Tensor[(11, 11, 2), float64] */;
  %444 = cast(%443, dtype="float32") /* ty=Tensor[(11, 11, 2), float32] */;
  %445 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  %446 = log(%444) /* ty=Tensor[(11, 11, 2), float32] */;
  %447 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  (%445, %446, %447)
}

def @func_6845(%var_6844: Tensor[(156), float32]) -> (Tensor[(16, 10, 12), float32], Tensor[(13, 2, 6), float64], Tensor[(156), float32]) {
  %456 = fn (%var_6831: Tensor[(156), float32]) -> (Tensor[(16, 10, 12), float32], Tensor[(13, 2, 6), float64], Tensor[(156), float32]) {
    %448 = @func_6199() /* ty=(Tensor[(16, 10, 12), float32],) */;
    %449 = cast(%var_6831, dtype="float32") /* ty=Tensor[(156), float32] */;
    %450 = reshape(%449, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
    %451 = @func_3733(%450) /* ty=(Tensor[(?, 70), uint16], Tensor[(13, 2, 6), float64]) */;
    %452 = cast(%var_6831, dtype="float32") /* ty=Tensor[(156), float32] */;
    %453 = %448.0;
    %454 = %451.1;
    %455 = acos(%452) /* ty=Tensor[(156), float32] */;
    (%453, %454, %455)
  };
  %456(%var_6844) /* ty=(Tensor[(16, 10, 12), float32], Tensor[(13, 2, 6), float64], Tensor[(156), float32]) */
}

def @func_3461(%var_3382: Tensor[(1050), float64], %var_3414: Tensor[(288), int16], %var_3416: Tensor[(108), uint8]) -> (Tensor[(13, 2, 6), float64], Tensor[(14, ?, 5), float32], Tensor[(70), float32], Tensor[(6, 18), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), float64], Tensor[(1050), float32]) {
  %457 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
  %458 = cast(meta[relay.Constant][25] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %459 = cast(%var_3382, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %460 = reshape(%458, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
  %461 = reshape(%459, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), float64] */;
  %462 = @func_3258(%460, %461) /* ty=(Tensor[(14, 15, 5), float32], Tensor[(14, 1, 5), float64]) */;
  %463 = %462.1;
  %464 = cast(meta[relay.Constant][25] /* ty=Tensor[(70), float64] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %465 = shape_of(%463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%463, dtype="float32") /* ty=Tensor[(14, 1, 5), float32] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %468 = cast(meta[relay.Constant][25] /* ty=Tensor[(70), float64] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %469 = cast(%var_3414, dtype="int16") /* ty=Tensor[(288), int16] */;
  %470 = cast(%var_3414, dtype="int16") /* ty=Tensor[(288), int16] */;
  %471 = cast(meta[relay.Constant][26] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %472 = cast(%var_3416, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %473 = cast(%var_3416, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %474 = reshape(%469, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
  %475 = reshape(%470, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
  %476 = reshape(%471, newshape=[]) /* ty=uint8 */;
  %477 = reshape(%472, newshape=[6, 18]) /* ty=Tensor[(6, 18), uint8] */;
  %478 = reshape(%473, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %479 = @func_1707(%474, %475, %476, %477, %478) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(6, 18), uint8], Tensor[(7, 78), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], Tensor[(3, 36), uint64], Tensor[(6, 4, 12), uint16]) */;
  %480 = cast(%var_3382, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %481 = %457.0;
  %482 = power(%466, %467) /* ty=Tensor[(14, ?, 5), float32] */;
  %483 = sqrt(%468) /* ty=Tensor[(70), float32] */;
  %484 = %479.2;
  %485 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
  %486 = acosh(%480) /* ty=Tensor[(1050), float32] */;
  (%481, %482, %483, %484, %var_3414, meta[relay.Constant][26] /* ty=uint8 */, %var_3416, %485, %486)
}

def @func_3489() -> (Tensor[(13, 2, 6), float64],) {
  @func_3487() /* ty=(Tensor[(13, 2, 6), float64],) */
}

def @func_5940(%var_5936: Tensor[(5, 1, 16), float64]) -> Tensor[(5, 1, 16), float64] {
  %487 = cast(%var_5936, dtype="float64") /* ty=Tensor[(5, 1, 16), float64] */;
  log2(%487) /* ty=Tensor[(5, 1, 16), float64] */
}

def @func_6167() -> Tensor[(13, 2, 6), bool] {
  @func_6165() /* ty=Tensor[(13, 2, 6), bool] */
}

def @func_6305() -> (Tensor[(13, 2, 6), float64],) {
  %490 = fn () -> (Tensor[(13, 2, 6), float64],) {
    %488 = @func_4879() /* ty=(Tensor[(13, 2, 6), float64],) */;
    %489 = %488.0;
    (%489,)
  };
  %490() /* ty=(Tensor[(13, 2, 6), float64],) */
}

def @func_7470() -> Tensor[(13, 2, 6), float32] {
  @func_5447() /* ty=Tensor[(13, 2, 6), float32] */
}

def @func_3108() -> Tensor[(13, 2, 6), float64] {
  @func_3106() /* ty=Tensor[(13, 2, 6), float64] */
}

def @func_5448() -> Tensor[(13, 2, 6), float32] {
  %492 = fn () -> Tensor[(13, 2, 6), float32] {
    %491 = @func_4052() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
    %491.1
  };
  %492() /* ty=Tensor[(13, 2, 6), float32] */
}

def @func_7272(%var_7270: Tensor[(198), float64], %var_7271: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(198), float64], Tensor[(216), float64], Tensor[(3, 9, 8), float64]) {
  %504 = fn (%var_7245: Tensor[(198), float64], %var_7246: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(198), float64], Tensor[(216), float64], Tensor[(3, 9, 8), float64]) {
    %493 = cast(%var_7245, dtype="float64") /* ty=Tensor[(198), float64] */;
    %494 = cast(%var_7246, dtype="float64") /* ty=Tensor[(216), float64] */;
    %495 = reshape(%493, newshape=[198]) /* ty=Tensor[(198), float64] */;
    %496 = reshape(%494, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %497 = @func_2638(%495, %496) /* ty=(Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) */;
    %498 = %497.3;
    %499 = cast(%498, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
    %500 = reshape(%499, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
    %501 = @func_2040(%500) /* ty=(Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) */;
    %502 = @func_5447() /* ty=Tensor[(13, 2, 6), float32] */;
    %503 = %501.0;
    (%502, %498, %var_7245, %var_7246, %503)
  };
  %504(%var_7270, %var_7271) /* ty=(Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(198), float64], Tensor[(216), float64], Tensor[(3, 9, 8), float64]) */
}

def @func_2751() -> (Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) {
  %505 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %506 = %505.0;
  %507 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 2, 6), float32] */, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %508 = shape_of(%506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%506, dtype="bool") /* ty=Tensor[(13, 2, 6), bool] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %511 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %512 = less(%509, %510) /* ty=Tensor[(13, 2, 6), bool] */;
  %513 = %511.0;
  (%512, %513)
}

def @func_7188() -> (Tensor[(13, 2, 6), float32], Tensor[(80), float64], Tensor[(198), bool], Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), bool], Tensor[(5, 1, 16), float64], Tensor[(13, 2, 6), bool]) {
  %533 = fn () -> (Tensor[(13, 2, 6), float32], Tensor[(80), float64], Tensor[(198), bool], Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), bool], Tensor[(5, 1, 16), float64], Tensor[(13, 2, 6), bool]) {
    %514 = @func_4334() /* ty=(Tensor[(16, 5, 8), bool], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
    %515 = @func_6883() /* ty=(Tensor[(198), float64], Tensor[(14, 3, 8), float32]) */;
    %516 = %515.0;
    %517 = cast(%516, dtype="float32") /* ty=Tensor[(198), float32] */;
    %518 = atan(%517) /* ty=Tensor[(198), float32] */;
    %519 = cast(%516, dtype="bool") /* ty=Tensor[(198), bool] */;
    %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(1), int32] */;
    %521 = cast(%518, dtype="bool") /* ty=Tensor[(198), bool] */;
    %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?), bool] */;
    %523 = cast(meta[relay.Constant][28] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %524 = reshape(%523, newshape=[5, 1, 16]) /* ty=Tensor[(5, 1, 16), float64] */;
    %525 = @func_5940(%524) /* ty=Tensor[(5, 1, 16), float64] */;
    %526 = cast(%525, dtype="float64") /* ty=Tensor[(5, 1, 16), float64] */;
    %527 = %514.1;
    %528 = logical_or(%521, %522) /* ty=Tensor[(198), bool] */;
    %529 = @func_6165() /* ty=Tensor[(13, 2, 6), bool] */;
    %530 = @func_6165() /* ty=Tensor[(13, 2, 6), bool] */;
    %531 = cosh(%526) /* ty=Tensor[(5, 1, 16), float64] */;
    %532 = @func_5986() /* ty=Tensor[(13, 2, 6), bool] */;
    (%527, meta[relay.Constant][28] /* ty=Tensor[(80), float64] */, %528, %529, %530, %531, %532)
  };
  %533() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(80), float64], Tensor[(198), bool], Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), bool], Tensor[(5, 1, 16), float64], Tensor[(13, 2, 6), bool]) */
}

def @func_5158(%var_5156: Tensor[(14, 6, 10), uint32], %var_5157: Tensor[(14, 6, 10), uint32]) -> (Tensor[(14, 6, 10), uint32],) {
  @func_5154(%var_5156, %var_5157) /* ty=(Tensor[(14, 6, 10), uint32],) */
}

def @func_5801(%var_5800: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) {
  %543 = fn (%var_5793: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) {
    %534 = cast(meta[relay.Constant][29] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
    %535 = reshape(%534, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
    %536 = @func_1975(%535) /* ty=(Tensor[(11, 9, 2), float64],) */;
    %537 = cast(%var_5793, dtype="float64") /* ty=Tensor[(216), float64] */;
    %538 = reshape(%537, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %539 = @func_3965(%538) /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(13, 2, 6), float64], Tensor[(11, 9, 2), float64], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(99, 2), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], uint8, Tensor[(108), uint8], Tensor[(108), uint8], Tensor[(70, 15), float64], Tensor[(288), int16]) */;
    %540 = @func_2765() /* ty=Tensor[(13, 2, 6), float32] */;
    %541 = %536.0;
    %542 = %539.4;
    (%540, %541, meta[relay.Constant][29] /* ty=Tensor[(198), float64] */, %542, %var_5793)
  };
  %543(%var_5800) /* ty=(Tensor[(13, 2, 6), float32], Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) */
}

def @func_2518() -> (Tensor[(13, 2, 6), float32],) {
  %544 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 2, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %545 = log(%544) /* ty=Tensor[(13, 2, 6), float32] */;
  (%545,)
}

def @func_1246(%var_1234: Tensor[(6, 7, 13), float64], %var_1241: Tensor[(3, 36), uint8]) -> (Tensor[(6, 7, 13), float64], Tensor[(12, 9, 1), uint8], uint8, Tensor[(3, 36), uint8]) {
  %546 = cast(%var_1234, dtype="float64") /* ty=Tensor[(6, 7, 13), float64] */;
  %547 = cast(meta[relay.Constant][31] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %548 = cast(%var_1241, dtype="uint8") /* ty=Tensor[(3, 36), uint8] */;
  %549 = reshape(%547, newshape=[]) /* ty=uint8 */;
  %550 = reshape(%548, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
  %551 = @func_455(%549, %550) /* ty=(Tensor[(12, 9, 1), uint8],) */;
  %552 = tan(%546) /* ty=Tensor[(6, 7, 13), float64] */;
  %553 = %551.0;
  (%552, %553, meta[relay.Constant][31] /* ty=uint8 */, %var_1241)
}

def @func_6123(%var_6121: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float32], Tensor[(198), float64]) {
  @func_6120(%var_6121) /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float32], Tensor[(198), float64]) */
}

def @func_2023(%var_2021: Tensor[(4, 12, 4), int16], %var_2022: Tensor[(4, 12, 4), int16]) -> Tensor[(4, 12, 4), int16] {
  %558 = fn (%var_2011: Tensor[(4, 12, 4), int16], %var_2012: Tensor[(4, 12, 4), int16]) -> Tensor[(4, 12, 4), int16] {
    %554 = cast(%var_2012, dtype="int16") /* ty=Tensor[(4, 12, 4), int16] */;
    %555 = shape_of(%var_2011, dtype="int32") /* ty=Tensor[(3), int32] */;
    %556 = cast(%var_2011, dtype="int16") /* ty=Tensor[(4, 12, 4), int16] */;
    %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    multiply(%556, %557) /* ty=Tensor[(4, 12, 4), int16] */
  };
  %558(%var_2021, %var_2022) /* ty=Tensor[(4, 12, 4), int16] */
}

def @func_5684(%var_5682: Tensor[(11, 6, 2), int8], %var_5683: Tensor[(1050), float64]) -> (Tensor[(11, 6, 2), int32], Tensor[(70), float32], Tensor[(1050), float64], Tensor[(288), int16], Tensor[(108), uint8]) {
  %577 = fn (%var_5652: Tensor[(11, 6, 2), int8], %var_5673: Tensor[(1050), float64]) -> (Tensor[(11, 6, 2), int32], Tensor[(70), float32], Tensor[(1050), float64], Tensor[(288), int16], Tensor[(108), uint8]) {
    %559 = cast(%var_5652, dtype="int8") /* ty=Tensor[(11, 6, 2), int8] */;
    %560 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(11, 6, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %561 = cast(meta[relay.Constant][32] /* ty=Tensor[(11, 6, 2), int8] */, dtype="int8") /* ty=Tensor[(11, 6, 2), int8] */;
    %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %563 = left_shift(%561, %562) /* ty=Tensor[(11, 6, 2), int8] */;
    %564 = cast(%var_5652, dtype="int32") /* ty=Tensor[(11, 6, 2), int32] */;
    %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
    %566 = cast(%563, dtype="int32") /* ty=Tensor[(11, 6, 2), int32] */;
    %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %568 = cast(%var_5673, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %569 = cast(meta[relay.Constant][33] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
    %570 = cast(meta[relay.Constant][34] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
    %571 = reshape(%568, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
    %572 = reshape(%569, newshape=[288]) /* ty=Tensor[(288), int16] */;
    %573 = reshape(%570, newshape=[108]) /* ty=Tensor[(108), uint8] */;
    %574 = @func_3461(%571, %572, %573) /* ty=(Tensor[(13, 2, 6), float64], Tensor[(14, ?, 5), float32], Tensor[(70), float32], Tensor[(6, 18), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), float64], Tensor[(1050), float32]) */;
    %575 = logical_xor(%566, %567) /* ty=Tensor[(11, 6, 2), int32] */;
    %576 = %574.2;
    (%575, %576, %var_5673, meta[relay.Constant][33] /* ty=Tensor[(288), int16] */, meta[relay.Constant][34] /* ty=Tensor[(108), uint8] */)
  };
  %577(%var_5682, %var_5683) /* ty=(Tensor[(11, 6, 2), int32], Tensor[(70), float32], Tensor[(1050), float64], Tensor[(288), int16], Tensor[(108), uint8]) */
}

def @func_6089(%var_6060: Tensor[(8, 14, 5), uint16], %var_6061: Tensor[(8, 14, 5), uint16]) -> Tensor[(8, 14, 5), bool] {
  %578 = cast(%var_6060, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %579 = erf(%578) /* ty=Tensor[(8, 14, 5), float32] */;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(8, 14, 5), float32] */;
  %581 = sigmoid(%580) /* ty=Tensor[(8, 14, 5), float32] */;
  %582 = cast(%var_6061, dtype="bool") /* ty=Tensor[(8, 14, 5), bool] */;
  %583 = shape_of(%var_6060, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_6060, dtype="bool") /* ty=Tensor[(8, 14, 5), bool] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %586 = greater_equal(%584, %585) /* ty=Tensor[(8, 14, 5), bool] */;
  %587 = cast(%586, dtype="bool") /* ty=Tensor[(8, 14, 5), bool] */;
  %588 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%581, dtype="bool") /* ty=Tensor[(8, 14, 5), bool] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%589, %590) /* ty=Tensor[(8, 14, 5), bool] */
}

def @func_4472() -> Tensor[(13, 2, 6), float64] {
  %591 = fn () -> Tensor[(13, 2, 6), float64] {
    @func_4281() /* ty=Tensor[(13, 2, 6), float64] */
  };
  %591() /* ty=Tensor[(13, 2, 6), float64] */
}

def @func_5126(%var_5124: Tensor[(156), float32], %var_5125: Tensor[(182), int8]) -> (Tensor[(14, 3, 8), float32], Tensor[(13, 2, 6), float64], Tensor[(156), float32], Tensor[(182), int8]) {
  @func_5122(%var_5124, %var_5125) /* ty=(Tensor[(14, 3, 8), float32], Tensor[(13, 2, 6), float64], Tensor[(156), float32], Tensor[(182), int8]) */
}

def @func_6883() -> (Tensor[(198), float64], Tensor[(14, 3, 8), float32]) {
  %592 = @func_5905() /* ty=Tensor[(198), float64] */;
  %593 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  (%592, %593)
}

def @func_1392(%var_1389: Tensor[(10, 12, 4), int64], %var_1390: Tensor[(10, 12, 4), int64], %var_1391: Tensor[(10, 12, 4), int64]) -> (Tensor[(10, 12, 4), int64], Tensor[(10, 12, 4), bool]) {
  %611 = fn (%var_1347: Tensor[(10, 12, 4), int64], %var_1348: Tensor[(10, 12, 4), int64], %var_1353: Tensor[(10, 12, 4), int64]) -> (Tensor[(10, 12, 4), int64], Tensor[(10, 12, 4), bool]) {
    %594 = cast(%var_1348, dtype="int64") /* ty=Tensor[(10, 12, 4), int64] */;
    %595 = shape_of(%var_1347, dtype="int32") /* ty=Tensor[(3), int32] */;
    %596 = cast(%var_1347, dtype="int64") /* ty=Tensor[(10, 12, 4), int64] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %598 = cast(%var_1347, dtype="float32") /* ty=Tensor[(10, 12, 4), float32] */;
    %599 = log2(%598) /* ty=Tensor[(10, 12, 4), float32] */;
    %600 = cast(%var_1353, dtype="float32") /* ty=Tensor[(10, 12, 4), float32] */;
    %601 = shape_of(%var_1348, dtype="int32") /* ty=Tensor[(3), int32] */;
    %602 = cast(%var_1348, dtype="float32") /* ty=Tensor[(10, 12, 4), float32] */;
    %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %604 = mod(%602, %603) /* ty=Tensor[(10, 12, 4), float32] */;
    %605 = cast(%604, dtype="bool") /* ty=Tensor[(10, 12, 4), bool] */;
    %606 = shape_of(%599, dtype="int32") /* ty=Tensor[(3), int32] */;
    %607 = cast(%599, dtype="bool") /* ty=Tensor[(10, 12, 4), bool] */;
    %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %609 = left_shift(%596, %597) /* ty=Tensor[(10, 12, 4), int64] */;
    %610 = equal(%607, %608) /* ty=Tensor[(10, 12, 4), bool] */;
    (%609, %610)
  };
  %611(%var_1389, %var_1390, %var_1391) /* ty=(Tensor[(10, 12, 4), int64], Tensor[(10, 12, 4), bool]) */
}

def @func_4457() -> (Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) {
  %612 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
  %613 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  %614 = %612.0;
  %615 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
  (%613, %614, %615)
}

def @func_4141() -> (Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float64]) {
  %623 = fn () -> (Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float64]) {
    %616 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
    %617 = @func_2570() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */;
    %618 = @func_3178() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %619 = %616.0;
    %620 = %617.1;
    %621 = %618.0;
    %622 = @func_3106() /* ty=Tensor[(13, 2, 6), float64] */;
    (%619, %620, %621, %622)
  };
  %623() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float64]) */
}

def @func_3262(%var_3260: Tensor[(14, 1, 5), float64], %var_3261: Tensor[(14, 15, 5), float64]) -> (Tensor[(14, 15, 5), float32], Tensor[(14, 1, 5), float64]) {
  @func_3258(%var_3260, %var_3261) /* ty=(Tensor[(14, 15, 5), float32], Tensor[(14, 1, 5), float64]) */
}

def @func_455(%var_442: uint8, %var_443: Tensor[(12, 9, 1), uint8]) -> (Tensor[(12, 9, 1), uint8],) {
  %624 = cast(%var_442, dtype="uint8") /* ty=uint8 */;
  %625 = cast(%var_443, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
  %626 = right_shift(%624, %625) /* ty=Tensor[(12, 9, 1), uint8] */;
  (%626,)
}

def @func_5604() -> (Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) {
  %632 = fn () -> (Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) {
    %627 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
    %628 = cast(%627, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
    %629 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
    %630 = sigmoid(%628) /* ty=Tensor[(13, 2, 6), float32] */;
    %631 = %629.2;
    (%630, %631)
  };
  %632() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) */
}

def @func_6190(%var_6189: Tensor[(288), int16]) -> (Tensor[(13, 2, 6), float64], Tensor[(3, 36), uint64], Tensor[(288), int16], uint8, Tensor[(108), uint8]) {
  %646 = fn (%var_6176: Tensor[(288), int16]) -> (Tensor[(13, 2, 6), float64], Tensor[(3, 36), uint64], Tensor[(288), int16], uint8, Tensor[(108), uint8]) {
    %633 = cast(%var_6176, dtype="int16") /* ty=Tensor[(288), int16] */;
    %634 = cast(%var_6176, dtype="int16") /* ty=Tensor[(288), int16] */;
    %635 = cast(meta[relay.Constant][35] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %636 = cast(meta[relay.Constant][36] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
    %637 = cast(meta[relay.Constant][36] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
    %638 = reshape(%633, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
    %639 = reshape(%634, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int16] */;
    %640 = reshape(%635, newshape=[]) /* ty=uint8 */;
    %641 = reshape(%636, newshape=[6, 18]) /* ty=Tensor[(6, 18), uint8] */;
    %642 = reshape(%637, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
    %643 = @func_1707(%638, %639, %640, %641, %642) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(6, 18), uint8], Tensor[(7, 78), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], Tensor[(3, 36), uint64], Tensor[(6, 4, 12), uint16]) */;
    %644 = @func_4471() /* ty=Tensor[(13, 2, 6), float64] */;
    %645 = %643.6;
    (%644, %645, %var_6176, meta[relay.Constant][35] /* ty=uint8 */, meta[relay.Constant][36] /* ty=Tensor[(108), uint8] */)
  };
  %646(%var_6189) /* ty=(Tensor[(13, 2, 6), float64], Tensor[(3, 36), uint64], Tensor[(288), int16], uint8, Tensor[(108), uint8]) */
}

def @func_5770() -> (Tensor[(13, 2, 6), float64],) {
  %647 = @func_4281() /* ty=Tensor[(13, 2, 6), float64] */;
  (%647,)
}

def @func_3967(%var_3966: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(13, 2, 6), float64], Tensor[(11, 9, 2), float64], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(99, 2), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], uint8, Tensor[(108), uint8], Tensor[(108), uint8], Tensor[(70, 15), float64], Tensor[(288), int16]) {
  %687 = fn (%var_3934: Tensor[(216), float64]) -> (Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(13, 2, 6), float64], Tensor[(11, 9, 2), float64], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(99, 2), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], uint8, Tensor[(108), uint8], Tensor[(108), uint8], Tensor[(70, 15), float64], Tensor[(288), int16]) {
    %648 = cast(meta[relay.Constant][37] /* ty=Tensor[(99, 2), float64] */, dtype="float64") /* ty=Tensor[(99, 2), float64] */;
    %649 = reshape(%648, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
    %650 = @func_1975(%649) /* ty=(Tensor[(11, 9, 2), float64],) */;
    %651 = @func_2969() /* ty=Tensor[(13, 2, 6), uint32] */;
    %652 = cast(%651, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
    %653 = reshape(%652, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
    %654 = @func_3733(%653) /* ty=(Tensor[(?, 70), uint16], Tensor[(13, 2, 6), float64]) */;
    %655 = %650.0;
    %656 = cast(%655, dtype="float64") /* ty=Tensor[(11, 9, 2), float64] */;
    %657 = reshape(%656, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
    %658 = @func_1975(%657) /* ty=(Tensor[(11, 9, 2), float64],) */;
    %659 = cast(%var_3934, dtype="float64") /* ty=Tensor[(216), float64] */;
    %660 = reshape(%659, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
    %661 = @func_2040(%660) /* ty=(Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) */;
    %662 = cast(meta[relay.Constant][37] /* ty=Tensor[(99, 2), float64] */, dtype="float64") /* ty=Tensor[(99, 2), float64] */;
    %663 = log10(%662) /* ty=Tensor[(99, 2), float64] */;
    %664 = cast(%663, dtype="float64") /* ty=Tensor[(99, 2), float64] */;
    %665 = cast(meta[relay.Constant][38] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
    %666 = cast(meta[relay.Constant][38] /* ty=Tensor[(135), uint64] */, dtype="uint64") /* ty=Tensor[(135), uint64] */;
    %667 = cast(meta[relay.Constant][39] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %668 = cast(meta[relay.Constant][40] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
    %669 = reshape(%665, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
    %670 = reshape(%666, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
    %671 = reshape(%667, newshape=[]) /* ty=uint8 */;
    %672 = reshape(%668, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
    %673 = @func_1192(%669, %670, %671, %672) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) */;
    %674 = cast(meta[relay.Constant][41] /* ty=Tensor[(70, 15), float64] */, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
    %675 = cast(meta[relay.Constant][42] /* ty=Tensor[(288), int16] */, dtype="int16") /* ty=Tensor[(288), int16] */;
    %676 = cast(meta[relay.Constant][40] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
    %677 = reshape(%674, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
    %678 = reshape(%675, newshape=[288]) /* ty=Tensor[(288), int16] */;
    %679 = reshape(%676, newshape=[108]) /* ty=Tensor[(108), uint8] */;
    %680 = @func_3461(%677, %678, %679) /* ty=(Tensor[(13, 2, 6), float64], Tensor[(14, ?, 5), float32], Tensor[(70), float32], Tensor[(6, 18), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(13, 2, 6), float64], Tensor[(1050), float32]) */;
    %681 = %654.1;
    %682 = %658.0;
    %683 = %661.0;
    %684 = sqrt(%664) /* ty=Tensor[(99, 2), float64] */;
    %685 = %673.3;
    %686 = %680.6;
    (%651, %655, %681, %682, %683, %var_3934, %684, %685, meta[relay.Constant][38] /* ty=Tensor[(135), uint64] */, meta[relay.Constant][39] /* ty=uint8 */, meta[relay.Constant][40] /* ty=Tensor[(108), uint8] */, %686, meta[relay.Constant][41] /* ty=Tensor[(70, 15), float64] */, meta[relay.Constant][42] /* ty=Tensor[(288), int16] */)
  };
  %687(%var_3966) /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(13, 2, 6), float64], Tensor[(11, 9, 2), float64], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(99, 2), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], uint8, Tensor[(108), uint8], Tensor[(108), uint8], Tensor[(70, 15), float64], Tensor[(288), int16]) */
}

def @func_4907() -> Tensor[(198), float64] {
  %688 = @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */;
  %688.4
}

def @func_3084() -> (Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) {
  @func_3082() /* ty=(Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), float64], Tensor[(13, 2, 6), uint32], Tensor[(11, 9, 2), float64], Tensor[(198), float64]) */
}

def @func_1250(%var_1248: Tensor[(6, 7, 13), float64], %var_1249: Tensor[(3, 36), uint8]) -> (Tensor[(6, 7, 13), float64], Tensor[(12, 9, 1), uint8], uint8, Tensor[(3, 36), uint8]) {
  @func_1246(%var_1248, %var_1249) /* ty=(Tensor[(6, 7, 13), float64], Tensor[(12, 9, 1), uint8], uint8, Tensor[(3, 36), uint8]) */
}

def @func_5089(%var_5087: Tensor[(4, 13, 16), int8], %var_5088: Tensor[(4, 13, 16), int8]) -> (Tensor[(4, 13, 16), int8], Tensor[(13, 2, 6), float32]) {
  @func_5085(%var_5087, %var_5088) /* ty=(Tensor[(4, 13, 16), int8], Tensor[(13, 2, 6), float32]) */
}

def @func_2520() -> (Tensor[(13, 2, 6), float32],) {
  @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */
}

def @func_4054() -> (Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
  @func_4052() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */
}

def @func_5405(%var_5402: uint8) -> (Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(1, 135), uint64], uint8, Tensor[(108), uint8]) {
  %689 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %690 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 135), uint64] */, dtype="uint64") /* ty=Tensor[(1, 135), uint64] */;
  %691 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 135), uint64] */, dtype="uint64") /* ty=Tensor[(1, 135), uint64] */;
  %692 = cast(%var_5402, dtype="uint8") /* ty=uint8 */;
  %693 = cast(meta[relay.Constant][44] /* ty=Tensor[(108), uint8] */, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %694 = reshape(%690, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %695 = reshape(%691, newshape=[9, 15]) /* ty=Tensor[(9, 15), uint64] */;
  %696 = reshape(%692, newshape=[]) /* ty=uint8 */;
  %697 = reshape(%693, newshape=[3, 36]) /* ty=Tensor[(3, 36), uint8] */;
  %698 = @func_1192(%694, %695, %696, %697) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) */;
  %699 = %689.0;
  %700 = %698.0;
  (%699, %700, meta[relay.Constant][43] /* ty=Tensor[(1, 135), uint64] */, %var_5402, meta[relay.Constant][44] /* ty=Tensor[(108), uint8] */)
}

def @func_7040(%var_7038: Tensor[(192), int16]) -> (Tensor[(198), float64], Tensor[(4, 12, 4), int16], Tensor[(192), int16]) {
  @func_7037(%var_7038) /* ty=(Tensor[(198), float64], Tensor[(4, 12, 4), int16], Tensor[(192), int16]) */
}

def @func_4459() -> (Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) {
  @func_4457() /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) */
}

def @func_6788(%var_6740: Tensor[(351), uint16], %var_6763: Tensor[(108), uint8]) -> (Tensor[(13, 2, 6), float64], Tensor[(3, 9, 13), float32], Tensor[(108), uint8], Tensor[(108), uint8], Tensor[(351), float64]) {
  %701 = cast(%var_6740, dtype="uint16") /* ty=Tensor[(351), uint16] */;
  %702 = cast(%var_6740, dtype="uint16") /* ty=Tensor[(351), uint16] */;
  %703 = reshape(%701, newshape=[3, 9, 13]) /* ty=Tensor[(3, 9, 13), uint16] */;
  %704 = reshape(%702, newshape=[3, 9, 13]) /* ty=Tensor[(3, 9, 13), uint16] */;
  %705 = @func_6583(%703, %704) /* ty=(Tensor[(3, 9, 13), uint16], Tensor[(3, 9, 13), float32]) */;
  %706 = cast(%var_6763, dtype="uint8") /* ty=Tensor[(108), uint8] */;
  %707 = reshape(%706, newshape=[108]) /* ty=Tensor[(108), uint8] */;
  %708 = @func_4602(%707) /* ty=(Tensor[(13, 2, 6), float32], Tensor[(12, 9, 1), uint8], Tensor[(288), int16], uint8, Tensor[(108), uint8], Tensor[(14, 2, 16), float64], Tensor[(448), float64]) */;
  %709 = cast(%var_6740, dtype="float64") /* ty=Tensor[(351), float64] */;
  %710 = @func_4471() /* ty=Tensor[(13, 2, 6), float64] */;
  %711 = %705.1;
  %712 = %708.4;
  %713 = asinh(%709) /* ty=Tensor[(351), float64] */;
  (%710, %711, %712, %var_6763, %713)
}

def @func_6093(%var_6091: Tensor[(8, 14, 5), uint16], %var_6092: Tensor[(8, 14, 5), uint16]) -> Tensor[(8, 14, 5), bool] {
  @func_6089(%var_6091, %var_6092) /* ty=Tensor[(8, 14, 5), bool] */
}

def @func_4881() -> (Tensor[(13, 2, 6), float64],) {
  @func_4879() /* ty=(Tensor[(13, 2, 6), float64],) */
}

def @main(%var_7501: int32, %var_7502: Tensor[(3, 2, 9), int32]) -> (Tensor[(3, 2, 9), bool], Tensor[(13, 2, 6), uint16], Tensor[(3, 2, 9), float32]) {
  %714 = cast(%var_7501, dtype="bool") /* ty=bool */;
  %715 = cast(%var_7502, dtype="bool") /* ty=Tensor[(3, 2, 9), bool] */;
  %716 = @func_2529() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %717 = %716.0;
  %718 = cast(%717, dtype="uint16") /* ty=Tensor[(13, 2, 6), uint16] */;
  %719 = cast(%var_7501, dtype="uint16") /* ty=uint16 */;
  %720 = cast(%var_7502, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
  %721 = less_equal(%714, %715) /* ty=Tensor[(3, 2, 9), bool] */;
  %722 = left_shift(%718, %719) /* ty=Tensor[(13, 2, 6), uint16] */;
  %723 = exp(%720) /* ty=Tensor[(3, 2, 9), float32] */;
  (%721, %722, %723)
}

def @func_4499() -> Tensor[(198), float64] {
  %724 = @func_3775() /* ty=(Tensor[(198), float64], Tensor[(216), float64], Tensor[(13, 2, 6), bool]) */;
  %724.0
}

def @func_1714(%var_1709: Tensor[(6, 4, 12), int16], %var_1710: Tensor[(6, 4, 12), int16], %var_1711: uint8, %var_1712: Tensor[(6, 18), uint8], %var_1713: Tensor[(3, 36), uint8]) -> (Tensor[(12, 9, 1), uint8], uint8, Tensor[(6, 18), uint8], Tensor[(7, 78), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], Tensor[(3, 36), uint64], Tensor[(6, 4, 12), uint16]) {
  @func_1707(%var_1709, %var_1710, %var_1711, %var_1712, %var_1713) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(6, 18), uint8], Tensor[(7, 78), float64], Tensor[(12, 9, 1), uint8], Tensor[(135), uint64], Tensor[(3, 36), uint64], Tensor[(6, 4, 12), uint16]) */
}

def @func_4052() -> (Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
  %725 = @func_3353() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(14, 1, 5), float64], Tensor[(1, 70), float64], Tensor[(1050), float64], Tensor[(13, 2, 6), float32]) */;
  %726 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %727 = %725.0;
  %728 = %726.0;
  (%727, %728)
}

def @func_7459() -> Tensor[(13, 2, 6), float64] {
  %730 = fn () -> Tensor[(13, 2, 6), float64] {
    %729 = @func_4879() /* ty=(Tensor[(13, 2, 6), float64],) */;
    %729.0
  };
  %730() /* ty=Tensor[(13, 2, 6), float64] */
}

def @func_7053() -> Tensor[(13, 2, 6), uint32] {
  %732 = fn () -> Tensor[(13, 2, 6), uint32] {
    %731 = @func_4457() /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), uint32]) */;
    %731.0
  };
  %732() /* ty=Tensor[(13, 2, 6), uint32] */
}

def @func_2529() -> (Tensor[(13, 2, 6), float32],) {
  %735 = fn () -> (Tensor[(13, 2, 6), float32],) {
    %733 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %734 = %733.0;
    (%734,)
  };
  %735() /* ty=(Tensor[(13, 2, 6), float32],) */
}

def @func_7096() -> (Tensor[(13, 2, 6), uint32], Tensor[(198), float64]) {
  %739 = fn () -> (Tensor[(13, 2, 6), uint32], Tensor[(198), float64]) {
    %736 = @func_5900() /* ty=(Tensor[(198), float64],) */;
    %737 = @func_7052() /* ty=Tensor[(13, 2, 6), uint32] */;
    %738 = %736.0;
    (%737, %738)
  };
  %739() /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(198), float64]) */
}

def @func_5772() -> (Tensor[(13, 2, 6), float64],) {
  @func_5770() /* ty=(Tensor[(13, 2, 6), float64],) */
}

def @func_6031(%var_6019: Tensor[(5, 70), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(5, 70), float64]) {
  %740 = @func_3353() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(14, 1, 5), float64], Tensor[(1, 70), float64], Tensor[(1050), float64], Tensor[(13, 2, 6), float32]) */;
  %741 = %740.2;
  %742 = cast(%741, dtype="float64") /* ty=Tensor[(1, 70), float64] */;
  %743 = cast(%var_6019, dtype="float64") /* ty=Tensor[(5, 70), float64] */;
  %744 = @func_5447() /* ty=Tensor[(13, 2, 6), float32] */;
  %745 = power(%742, %743) /* ty=Tensor[(5, 70), float64] */;
  (%744, %745)
}

def @func_6885() -> (Tensor[(198), float64], Tensor[(14, 3, 8), float32]) {
  @func_6883() /* ty=(Tensor[(198), float64], Tensor[(14, 3, 8), float32]) */
}

def @func_5752() -> (Tensor[(13, 2, 6), uint32], Tensor[(288), int16], Tensor[(132), int8], Tensor[(1050), float64], Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float64], Tensor[(1650), float32]) {
  @func_5750() /* ty=(Tensor[(13, 2, 6), uint32], Tensor[(288), int16], Tensor[(132), int8], Tensor[(1050), float64], Tensor[(13, 2, 6), uint32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float64], Tensor[(1650), float32]) */
}

def @func_2638(%var_2621: Tensor[(198), float64], %var_2634: Tensor[(216), float64]) -> (Tensor[(11, 9, 2), float64], Tensor[(198), float64], Tensor[(13, 2, 6), float32], Tensor[(3, 9, 8), float64], Tensor[(216), float64]) {
  %746 = cast(%var_2621, dtype="float64") /* ty=Tensor[(198), float64] */;
  %747 = reshape(%746, newshape=[11, 9, 2]) /* ty=Tensor[(11, 9, 2), float64] */;
  %748 = @func_1975(%747) /* ty=(Tensor[(11, 9, 2), float64],) */;
  %749 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %750 = %749.0;
  %751 = cast(%750, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %752 = tan(%751) /* ty=Tensor[(13, 2, 6), float32] */;
  %753 = cast(%752, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %754 = cast(%var_2634, dtype="float64") /* ty=Tensor[(216), float64] */;
  %755 = reshape(%754, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %756 = @func_2040(%755) /* ty=(Tensor[(3, 9, 8), float64], Tensor[(3, 9, 8), float64]) */;
  %757 = %748.0;
  %758 = log10(%753) /* ty=Tensor[(13, 2, 6), float32] */;
  %759 = %756.0;
  (%757, %var_2621, %758, %759, %var_2634)
}

def @func_2571() -> (Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
  %764 = fn () -> (Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) {
    %760 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %761 = @func_2518() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %762 = %760.0;
    %763 = %761.0;
    (%762, %763)
  };
  %764() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(13, 2, 6), float32]) */
}

def @func_3354() -> (Tensor[(13, 2, 6), float32], Tensor[(14, 1, 5), float64], Tensor[(1, 70), float64], Tensor[(1050), float64], Tensor[(13, 2, 6), float32]) {
  %777 = fn () -> (Tensor[(13, 2, 6), float32], Tensor[(14, 1, 5), float64], Tensor[(1, 70), float64], Tensor[(1050), float64], Tensor[(13, 2, 6), float32]) {
    %765 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %766 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 70), float64] */, dtype="float64") /* ty=Tensor[(1, 70), float64] */;
    %767 = cast(meta[relay.Constant][46] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %768 = reshape(%766, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float64] */;
    %769 = reshape(%767, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), float64] */;
    %770 = @func_3258(%768, %769) /* ty=(Tensor[(14, 15, 5), float32], Tensor[(14, 1, 5), float64]) */;
    %771 = @func_2863() /* ty=(Tensor[(13, 2, 6), float32],) */;
    %772 = %771.0;
    %773 = cast(%772, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
    %774 = %765.0;
    %775 = %770.1;
    %776 = erf(%773) /* ty=Tensor[(13, 2, 6), float32] */;
    (%774, %775, meta[relay.Constant][45] /* ty=Tensor[(1, 70), float64] */, meta[relay.Constant][46] /* ty=Tensor[(1050), float64] */, %776)
  };
  %777() /* ty=(Tensor[(13, 2, 6), float32], Tensor[(14, 1, 5), float64], Tensor[(1, 70), float64], Tensor[(1050), float64], Tensor[(13, 2, 6), float32]) */
}

def @func_2654(%var_2646: Tensor[(14, 2, 16), float64]) -> (Tensor[(14, 2, 16), float64],) {
  %778 = cast(%var_2646, dtype="float64") /* ty=Tensor[(14, 2, 16), float64] */;
  %779 = cos(%778) /* ty=Tensor[(14, 2, 16), float64] */;
  (%779,)
}

def @func_5248(%var_5203: Tensor[(198), float64]) -> (Tensor[(13, 2, 6), float32], Tensor[(14, 3, 8), float32], Tensor[(198), float64], Tensor[(13, 2, 6), int8], Tensor[(14, 2, 16), float64], Tensor[(448), float64]) {
  %780 = @func_2751() /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) */;
  %781 = @func_3892() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %782 = %781.0;
  %783 = %780.1;
  %784 = cast(%783, dtype="float32") /* ty=Tensor[(13, 2, 6), float32] */;
  %785 = cast(%var_5203, dtype="float64") /* ty=Tensor[(198), float64] */;
  %786 = reshape(%784, newshape=[13, 2, 6]) /* ty=Tensor[(13, 2, 6), float32] */;
  %787 = reshape(%785, newshape=[1, 198]) /* ty=Tensor[(1, 198), float64] */;
  %788 = @func_3550(%786, %787) /* ty=(Tensor[(13, 2, 6), int16], Tensor[(3, 9, 8), float64], Tensor[(216), float64], Tensor[(13, 2, 6), float32], Tensor[(4, 12, 4), int16], Tensor[(192), int16], Tensor[(13, 2, 6), float32], Tensor[(1, 198), float64]) */;
  %789 = %788.0;
  %790 = cast(%789, dtype="int8") /* ty=Tensor[(13, 2, 6), int8] */;
  %791 = shape_of(%782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%782, dtype="int8") /* ty=Tensor[(13, 2, 6), int8] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %794 = cast(meta[relay.Constant][47] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %795 = reshape(%794, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float64] */;
  %796 = @func_2654(%795) /* ty=(Tensor[(14, 2, 16), float64],) */;
  %797 = @func_2899() /* ty=Tensor[(14, 3, 8), float32] */;
  %798 = bitwise_and(%792, %793) /* ty=Tensor[(13, 2, 6), int8] */;
  %799 = %796.0;
  (%783, %797, %var_5203, %798, %799, meta[relay.Constant][47] /* ty=Tensor[(448), float64] */)
}

def @func_4959(%var_4958: Tensor[(11, 10, 15), float32]) -> (Tensor[(13, 2, 6), bool], Tensor[(11, 10, 15), float32], Tensor[(198), float64], Tensor[(13, 2, 6), float64]) {
  %814 = fn (%var_4910: Tensor[(11, 10, 15), float32]) -> (Tensor[(13, 2, 6), bool], Tensor[(11, 10, 15), float32], Tensor[(198), float64], Tensor[(13, 2, 6), float64]) {
    %800 = @func_4731() /* ty=(Tensor[(13, 2, 6), bool],) */;
    %801 = cast(%var_4910, dtype="float32") /* ty=Tensor[(11, 10, 15), float32] */;
    %802 = sinh(%801) /* ty=Tensor[(11, 10, 15), float32] */;
    %803 = cast(%var_4910, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
    %804 = shape_of(%802, dtype="int32") /* ty=Tensor[(3), int32] */;
    %805 = cast(%802, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
    %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %807 = greater(%805, %806) /* ty=Tensor[(11, 10, 15), bool] */;
    %808 = cast(%807, dtype="float32") /* ty=Tensor[(11, 10, 15), float32] */;
    %809 = @func_4879() /* ty=(Tensor[(13, 2, 6), float64],) */;
    %810 = %800.0;
    %811 = atanh(%808) /* ty=Tensor[(11, 10, 15), float32] */;
    %812 = @func_4907() /* ty=Tensor[(198), float64] */;
    %813 = %809.0;
    (%810, %811, %812, %813)
  };
  %814(%var_4958) /* ty=(Tensor[(13, 2, 6), bool], Tensor[(11, 10, 15), float32], Tensor[(198), float64], Tensor[(13, 2, 6), float64]) */
}

def @func_5901() -> (Tensor[(198), float64],) {
  %816 = fn () -> (Tensor[(198), float64],) {
    %815 = @func_4499() /* ty=Tensor[(198), float64] */;
    (%815,)
  };
  %816() /* ty=(Tensor[(198), float64],) */
}

def @func_3777() -> (Tensor[(198), float64], Tensor[(216), float64], Tensor[(13, 2, 6), bool]) {
  @func_3775() /* ty=(Tensor[(198), float64], Tensor[(216), float64], Tensor[(13, 2, 6), bool]) */
}

def @func_2901() -> Tensor[(14, 3, 8), float32] {
  @func_2899() /* ty=Tensor[(14, 3, 8), float32] */
}

def @func_5531(%var_5529: Tensor[(9, 5, 15), float32]) -> (Tensor[(9, 5, 15), float32], Tensor[(13, 2, 6), float32]) {
  @func_5528(%var_5529) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(13, 2, 6), float32]) */
}

def @func_3019(%var_3017: uint64, %var_3018: Tensor[(11, 11, 2), uint64]) -> (Tensor[(14, 3, 8), float32], Tensor[(11, 11, 2), float32], Tensor[(13, 2, 6), uint32]) {
  @func_3015(%var_3017, %var_3018) /* ty=(Tensor[(14, 3, 8), float32], Tensor[(11, 11, 2), float32], Tensor[(13, 2, 6), uint32]) */
}

def @func_4909() -> Tensor[(198), float64] {
  @func_4907() /* ty=Tensor[(198), float64] */
}

def @func_5528(%var_5503: Tensor[(9, 5, 15), float32]) -> (Tensor[(9, 5, 15), float32], Tensor[(13, 2, 6), float32]) {
  %817 = cast(%var_5503, dtype="float32") /* ty=Tensor[(9, 5, 15), float32] */;
  %818 = @func_2528() /* ty=(Tensor[(13, 2, 6), float32],) */;
  %819 = cos(%817) /* ty=Tensor[(9, 5, 15), float32] */;
  %820 = %818.0;
  (%819, %820)
}

def @func_2559(%var_2557: Tensor[(13, 2, 6), float32]) -> (Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) {
  @func_2556(%var_2557) /* ty=(Tensor[(13, 2, 6), bool], Tensor[(13, 2, 6), float32]) */
}

def @func_1197(%var_1193: Tensor[(9, 15), uint64], %var_1194: Tensor[(9, 15), uint64], %var_1195: uint8, %var_1196: Tensor[(3, 36), uint8]) -> (Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) {
  %869 = fn (%var_1125: Tensor[(9, 15), uint64], %var_1126: Tensor[(9, 15), uint64], %var_1137: uint8, %var_1165: Tensor[(3, 36), uint8]) -> (Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) {
    %821 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
    %822 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 36), uint8] */, dtype="uint8") /* ty=Tensor[(3, 36), uint8] */;
    %823 = reshape(%821, newshape=[]) /* ty=uint8 */;
    %824 = reshape(%822, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
    %825 = @func_455(%823, %824) /* ty=(Tensor[(12, 9, 1), uint8],) */;
    %826 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
    %827 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 36), uint8] */, dtype="uint8") /* ty=Tensor[(3, 36), uint8] */;
    %828 = reshape(%826, newshape=[]) /* ty=uint8 */;
    %829 = reshape(%827, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
    %830 = @func_455(%828, %829) /* ty=(Tensor[(12, 9, 1), uint8],) */;
    %831 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
    %832 = %830.0;
    %833 = cast(%832, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
    %834 = reshape(%831, newshape=[]) /* ty=uint8 */;
    %835 = reshape(%833, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
    %836 = @func_455(%834, %835) /* ty=(Tensor[(12, 9, 1), uint8],) */;
    %837 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
    %838 = %825.0;
    %839 = cast(%838, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
    %840 = reshape(%837, newshape=[]) /* ty=uint8 */;
    %841 = reshape(%839, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
    %842 = @func_455(%840, %841) /* ty=(Tensor[(12, 9, 1), uint8],) */;
    %843 = cast(%var_1165, dtype="int16") /* ty=Tensor[(3, 36), int16] */;
    %844 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(3, 36), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %845 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 36), uint8] */, dtype="int16") /* ty=Tensor[(3, 36), int16] */;
    %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %847 = cast(%var_1126, dtype="bool") /* ty=Tensor[(9, 15), bool] */;
    %848 = shape_of(%var_1125, dtype="int32") /* ty=Tensor[(2), int32] */;
    %849 = cast(%var_1125, dtype="bool") /* ty=Tensor[(9, 15), bool] */;
    %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %851 = greater(%849, %850) /* ty=Tensor[(9, 15), bool] */;
    %852 = cast(%851, dtype="float64") /* ty=Tensor[(9, 15), float64] */;
    %853 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
    %854 = cast(%838, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
    %855 = reshape(%853, newshape=[]) /* ty=uint8 */;
    %856 = reshape(%854, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
    %857 = @func_455(%855, %856) /* ty=(Tensor[(12, 9, 1), uint8],) */;
    %858 = cast(%var_1137, dtype="uint8") /* ty=uint8 */;
    %859 = cast(%var_1165, dtype="uint8") /* ty=Tensor[(3, 36), uint8] */;
    %860 = reshape(%858, newshape=[]) /* ty=uint8 */;
    %861 = reshape(%859, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), uint8] */;
    %862 = @func_455(%860, %861) /* ty=(Tensor[(12, 9, 1), uint8],) */;
    %863 = %836.0;
    %864 = %842.0;
    %865 = subtract(%845, %846) /* ty=Tensor[(3, 36), int16] */;
    %866 = cos(%852) /* ty=Tensor[(9, 15), float64] */;
    %867 = %857.0;
    %868 = %862.0;
    (%838, %var_1137, %832, %863, %864, %865, %866, %867, %868)
  };
  %869(%var_1193, %var_1194, %var_1195, %var_1196) /* ty=(Tensor[(12, 9, 1), uint8], uint8, Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8], Tensor[(3, 36), int16], Tensor[(9, 15), float64], Tensor[(12, 9, 1), uint8], Tensor[(12, 9, 1), uint8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_7253() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %0 = @func_6654() /* ty=Tensor[(2, 6, 9), bool] */;
  %1 = @func_6803() /* ty=Tensor[(2, 6, 9), bool] */;
  (%0, %1)
}

def @func_8854() -> Tensor[(2, 6, 9), bool] {
  %2 = @func_8374() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %2.0
}

def @func_3268(%var_3237: Tensor[(16, 6, 3), uint32], %var_3249: Tensor[(800), float64], %var_3264: Tensor[(1200), int8]) -> (Tensor[(16, 6, 3), uint32], Tensor[(16, 5, 10), float64], Tensor[(800), float64], float32, Tensor[(392, 1), float64], Tensor[(15, 5, 16), int8], Tensor[(1200), int8]) {
  %3 = cast(meta[relay.Constant][0] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %4 = cast(%var_3237, dtype="uint32") /* ty=Tensor[(16, 6, 3), uint32] */;
  %5 = cast(%var_3249, dtype="float64") /* ty=Tensor[(800), float64] */;
  %6 = reshape(%5, newshape=[16, 5, 10]) /* ty=Tensor[(16, 5, 10), float64] */;
  %7 = @func_2479(%6) /* ty=(Tensor[(16, 5, 10), float64],) */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(392, 1), float64] */, dtype="float64") /* ty=Tensor[(392, 1), float64] */;
  %9 = reshape(%8, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), float64] */;
  %10 = @func_2664(%9) /* ty=(Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) */;
  %11 = cast(%var_3264, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %12 = cast(%var_3264, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %13 = reshape(%11, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %14 = reshape(%12, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %15 = @func_1027(%13, %14) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
  %16 = logical_xor(%3, %4) /* ty=Tensor[(16, 6, 3), uint32] */;
  %17 = %7.0;
  %18 = %10.4;
  %19 = %15.0;
  (%16, %17, %var_3249, %18, meta[relay.Constant][1] /* ty=Tensor[(392, 1), float64] */, %19, %var_3264)
}

def @func_8476() -> (Tensor[(2, 6, 9), bool],) {
  %20 = @func_7776() /* ty=Tensor[(2, 6, 9), bool] */;
  (%20,)
}

def @func_1844(%var_1810: Tensor[(1, 14, 11), float64], %var_1819: Tensor[(288), float32], %var_1828: Tensor[(4, 14, 11), float64]) -> (Tensor[(13, 2, 5), int16], Tensor[(130), int16], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(4, 14, 11), float64], Tensor[(12, 7, 13), float32]) {
  %21 = cast(meta[relay.Constant][2] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %22 = cast(%var_1819, dtype="float32") /* ty=Tensor[(288), float32] */;
  %23 = reshape(%21, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), int16] */;
  %24 = reshape(%22, newshape=[8, 36]) /* ty=Tensor[(8, 36), float32] */;
  %25 = @func_1300(%23, %24) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) */;
  %26 = cast(meta[relay.Constant][3] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %27 = reshape(%26, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %28 = cast(%var_1810, dtype="float64") /* ty=Tensor[(1, 14, 11), float64] */;
  %29 = rsqrt(%28) /* ty=Tensor[(1, 14, 11), float64] */;
  %30 = cast(%29, dtype="float64") /* ty=Tensor[(1, 14, 11), float64] */;
  %31 = cast(%var_1828, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %33 = reshape(%32, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %34 = %25.0;
  %35 = @func_109(%27) /* ty=Tensor[(12, 7, 13), float32] */;
  %36 = minimum(%30, %31) /* ty=Tensor[(4, 14, 11), float64] */;
  %37 = @func_109(%33) /* ty=Tensor[(12, 7, 13), float32] */;
  (%34, meta[relay.Constant][2] /* ty=Tensor[(130), int16] */, %var_1819, %35, meta[relay.Constant][3] /* ty=Tensor[(1092), float32] */, %36, %37)
}

def @func_8844(%var_8838: Tensor[(200, 4), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(288), uint32], Tensor[(200, 4), float64], Tensor[(1200), int8]) {
  %38 = cast(meta[relay.Constant][4] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %39 = cast(%var_8838, dtype="float64") /* ty=Tensor[(200, 4), float64] */;
  %40 = cast(meta[relay.Constant][5] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %41 = reshape(%38, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %42 = reshape(%39, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %43 = reshape(%40, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %44 = @func_7441(%41, %42, %43) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32], float32, Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8]) */;
  %45 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
  %46 = %44.5;
  (%45, %46, meta[relay.Constant][4] /* ty=Tensor[(288), uint32] */, %var_8838, meta[relay.Constant][5] /* ty=Tensor[(1200), int8] */)
}

def @func_6784() -> (Tensor[(2, 6, 9), bool],) {
  %47 = @func_6045() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) */;
  %48 = %47.0;
  (%48,)
}

def @func_10582(%var_10542: Tensor[(160), uint8]) -> (Tensor[(2, 6, 9), bool], Tensor[(160), uint8], Tensor[(160), uint8], Tensor[(1575, ?), float64], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %49 = @func_8454() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(16, 5, 10), float64], Tensor[(800), float64], Tensor[(600, 2), float64]) */;
  %50 = cast(%var_10542, dtype="uint8") /* ty=Tensor[(160), uint8] */;
  %51 = reshape(%50, newshape=[160]) /* ty=Tensor[(160), uint8] */;
  %52 = @func_5143(%51) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(10, 4, 4), float32], Tensor[(160), uint8]) */;
  %53 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
  %54 = %53.2;
  %55 = cast(%54, dtype="float64") /* ty=Tensor[(1575, 1), float64] */;
  %56 = log(%55) /* ty=Tensor[(1575, 1), float64] */;
  %57 = cast(%54, dtype="float32") /* ty=Tensor[(1575, 1), float32] */;
  %58 = shape_of(%56, dtype="int32") /* ty=Tensor[(2), int32] */;
  %59 = cast(%56, dtype="float32") /* ty=Tensor[(1575, 1), float32] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %61 = floor_divide(%59, %60) /* ty=Tensor[(1575, ?), float32] */;
  %62 = cast(%61, dtype="float64") /* ty=Tensor[(1575, ?), float64] */;
  %63 = @func_5745() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %64 = %49.0;
  %65 = %52.2;
  %66 = sin(%62) /* ty=Tensor[(1575, ?), float64] */;
  %67 = @func_9660() /* ty=Tensor[(2, 6, 9), bool] */;
  %68 = %63.0;
  (%64, %65, %var_10542, %66, %67, %68)
}

def @func_11847(%var_11835: Tensor[(2, 7, 5), int8], %var_11843: Tensor[(800), float64], %var_11844: Tensor[(1200), int8]) -> (Tensor[(2, 7, 5), int8], Tensor[(1575, 1), int32], Tensor[(800), float64], Tensor[(1200), int8]) {
  %69 = cast(%var_11835, dtype="int8") /* ty=Tensor[(2, 7, 5), int8] */;
  %70 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(2, 7, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 7, 5), int8] */, dtype="int8") /* ty=Tensor[(2, 7, 5), int8] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %73 = cast(%var_11843, dtype="float64") /* ty=Tensor[(800), float64] */;
  %74 = cast(%var_11844, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %75 = reshape(%73, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %76 = reshape(%74, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %77 = @func_10863(%75, %76) /* ty=(Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1092), bool], Tensor[(1575, 1), int32]) */;
  %78 = bitwise_and(%71, %72) /* ty=Tensor[(2, 7, 5), int8] */;
  %79 = %77.4;
  (%78, %79, %var_11843, %var_11844)
}

def @func_10260() -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8]) {
  %80 = @func_6784() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %81 = @func_7491() /* ty=(Tensor[(600, 2), int8],) */;
  %82 = %80.0;
  %83 = %81.0;
  (%82, %83)
}

def @func_2436(%var_2399: Tensor[(15, 15, 7), int32], %var_2400: Tensor[(15, 15, 7), int32]) -> (Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) {
  %84 = cast(%var_2400, dtype="int32") /* ty=Tensor[(15, 15, 7), int32] */;
  %85 = shape_of(%var_2399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%var_2399, dtype="int32") /* ty=Tensor[(15, 15, 7), int32] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %88 = minimum(%86, %87) /* ty=Tensor[(15, 15, 7), int32] */;
  %89 = cast(%var_2399, dtype="uint64") /* ty=Tensor[(15, 15, 7), uint64] */;
  %90 = shape_of(%88, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%88, dtype="uint64") /* ty=Tensor[(15, 15, 7), uint64] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %93 = cast(meta[relay.Constant][7] /* ty=Tensor[(160), uint8] */, dtype="uint8") /* ty=Tensor[(160), uint8] */;
  %94 = cast(meta[relay.Constant][7] /* ty=Tensor[(160), uint8] */, dtype="uint8") /* ty=Tensor[(160), uint8] */;
  %95 = reshape(%93, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
  %96 = reshape(%94, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
  %97 = @func_1996(%95, %96) /* ty=(Tensor[(10, 4, 4), bool], Tensor[(10, 4, 4), float64], Tensor[(10, 4, 4), float32]) */;
  %98 = cast(%var_2400, dtype="float64") /* ty=Tensor[(15, 15, 7), float64] */;
  %99 = cast(meta[relay.Constant][8] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %100 = cast(meta[relay.Constant][9] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %101 = reshape(%99, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), int16] */;
  %102 = reshape(%100, newshape=[8, 36]) /* ty=Tensor[(8, 36), float32] */;
  %103 = @func_1300(%101, %102) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) */;
  %104 = maximum(%91, %92) /* ty=Tensor[(15, 15, 7), uint64] */;
  %105 = %97.1;
  %106 = atan(%98) /* ty=Tensor[(15, 15, 7), float64] */;
  %107 = %103.1;
  (%104, %105, meta[relay.Constant][7] /* ty=Tensor[(160), uint8] */, %106, %107, meta[relay.Constant][8] /* ty=Tensor[(130), int16] */, meta[relay.Constant][9] /* ty=Tensor[(288), float32] */)
}

def @func_6479() -> (Tensor[(2, 6, 9), bool],) {
  %108 = @func_6045() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) */;
  %109 = %108.1;
  (%109,)
}

def @func_9971(%var_9935: Tensor[(1352), float64], %var_9959: Tensor[(1456), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32], Tensor[(1200), int8], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1352), float32], Tensor[(2, 6, 9), bool], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(2, 6, 9), bool]) {
  %110 = cast(0.562433f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %111 = cast(meta[relay.Constant][10] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %112 = reshape(%110, newshape=[]) /* ty=float32 */;
  %113 = reshape(%111, newshape=[440, 1]) /* ty=Tensor[(440, 1), float32] */;
  %114 = @func_2059(%112, %113) /* ty=(Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(11, 5, 8), float32], float32, Tensor[(440, 1), float32]) */;
  %115 = cast(%var_9935, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %116 = cast(meta[relay.Constant][11] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %117 = cast(meta[relay.Constant][12] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %118 = reshape(%115, newshape=[1352]) /* ty=Tensor[(1352), float64] */;
  %119 = reshape(%116, newshape=[1, 800]) /* ty=Tensor[(1, 800), float64] */;
  %120 = reshape(%117, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %121 = @func_7904(%118, %119, %120) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(1352), float64], Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(1, 800), float64], Tensor[(1200), int8], Tensor[(15, 5, 16), int8], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32]) */;
  %122 = cast(%var_9935, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %123 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %124 = cast(meta[relay.Constant][10] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %125 = cast(%var_9959, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %126 = reshape(%124, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %127 = reshape(%125, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
  %128 = @func_6189(%126, %127) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(5, 4, 5), float64], float32, Tensor[(440), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) */;
  %129 = @func_6784() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %130 = @func_9056() /* ty=Tensor[(2, 6, 9), bool] */;
  %131 = %114.3;
  %132 = %121.5;
  %133 = cos(%122) /* ty=Tensor[(1352), float32] */;
  %134 = %123.0;
  %135 = %128.4;
  %136 = %129.0;
  (%130, %131, 0.562433f /* ty=float32 */, meta[relay.Constant][10] /* ty=Tensor[(440), float32] */, %132, meta[relay.Constant][11] /* ty=Tensor[(800), float64] */, meta[relay.Constant][12] /* ty=Tensor[(1200), int8] */, %133, %134, %135, %var_9959, %136)
}

def @func_4168(%var_4116: Tensor[(10, 15, 3), uint32], %var_4117: Tensor[(10, 15, 3), uint32], %var_4140: Tensor[(10, 15, 3), uint32], %var_4153: Tensor[(1092), float32]) -> (Tensor[(10, 15, 3), uint32], Tensor[(10, 15, 3), float32], Tensor[(15, 5, 16), int8], Tensor[(1200), int8], Tensor[(2, 10, 12), float64], Tensor[(120, 2), float64], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(16, 5, 10), float64], Tensor[(800), float64]) {
  %137 = cast(%var_4117, dtype="uint32") /* ty=Tensor[(10, 15, 3), uint32] */;
  %138 = shape_of(%var_4116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%var_4116, dtype="uint32") /* ty=Tensor[(10, 15, 3), uint32] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %141 = cast(%var_4140, dtype="float32") /* ty=Tensor[(10, 15, 3), float32] */;
  %142 = shape_of(%var_4116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%var_4116, dtype="float32") /* ty=Tensor[(10, 15, 3), float32] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %145 = cast(meta[relay.Constant][13] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %146 = cast(meta[relay.Constant][13] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %147 = reshape(%145, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %148 = reshape(%146, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %149 = @func_1027(%147, %148) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
  %150 = cast(meta[relay.Constant][14] /* ty=Tensor[(120, 2), float64] */, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
  %151 = cast(meta[relay.Constant][15] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %152 = reshape(%150, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float64] */;
  %153 = reshape(%151, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %154 = @func_1277(%152, %153) /* ty=(Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(12, 6, 4), float32], Tensor[(288), float32]) */;
  %155 = cast(%var_4153, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %156 = reshape(%155, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %157 = cast(meta[relay.Constant][16] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %158 = reshape(%157, newshape=[16, 5, 10]) /* ty=Tensor[(16, 5, 10), float64] */;
  %159 = @func_2479(%158) /* ty=(Tensor[(16, 5, 10), float64],) */;
  %160 = left_shift(%139, %140) /* ty=Tensor[(10, 15, 3), uint32] */;
  %161 = power(%143, %144) /* ty=Tensor[(10, 15, 3), float32] */;
  %162 = %149.0;
  %163 = %154.1;
  %164 = @func_109(%156) /* ty=Tensor[(12, 7, 13), float32] */;
  %165 = %159.0;
  (%160, %161, %162, meta[relay.Constant][13] /* ty=Tensor[(1200), int8] */, %163, meta[relay.Constant][14] /* ty=Tensor[(120, 2), float64] */, meta[relay.Constant][15] /* ty=Tensor[(288), float32] */, %164, %var_4153, %165, meta[relay.Constant][16] /* ty=Tensor[(800), float64] */)
}

def @func_11545() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %166 = @func_5745() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %167 = @func_9660() /* ty=Tensor[(2, 6, 9), bool] */;
  %168 = %166.0;
  (%167, %168)
}

def @func_7441(%var_7412: Tensor[(288), uint32], %var_7413: Tensor[(800), float64], %var_7414: Tensor[(1200), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32], float32, Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8]) {
  %169 = @func_7253() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %170 = cast(meta[relay.Constant][17] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %171 = reshape(%170, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %172 = @func_7292(%171) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32]) */;
  %173 = cast(%var_7412, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %174 = cast(%var_7413, dtype="float64") /* ty=Tensor[(800), float64] */;
  %175 = cast(%var_7414, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %176 = reshape(%173, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), uint32] */;
  %177 = reshape(%174, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %178 = reshape(%175, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %179 = @func_3268(%176, %177, %178) /* ty=(Tensor[(16, 6, 3), uint32], Tensor[(16, 5, 10), float64], Tensor[(800), float64], float32, Tensor[(392, 1), float64], Tensor[(15, 5, 16), int8], Tensor[(1200), int8]) */;
  %180 = %169.0;
  %181 = %172.1;
  %182 = %179.3;
  (%180, %181, meta[relay.Constant][17] /* ty=Tensor[(378), uint32] */, %182, %var_7412, %var_7413, %var_7414)
}

def @func_8963() -> Tensor[(1092), float32] {
  %183 = @func_6120() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1092), float32]) */;
  %183.2
}

def @func_7292(%var_7289: Tensor[(378), uint32]) -> (Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32]) {
  %184 = @func_6512() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %185 = cast(%var_7289, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %186 = cast(%var_7289, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %187 = reshape(%185, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint32] */;
  %188 = reshape(%186, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint32] */;
  %189 = %184.0;
  %190 = @func_2975(%187, %188) /* ty=Tensor[(6, 9, 7), uint8] */;
  (%189, %190, %var_7289)
}

def @func_5797(%var_5791: Tensor[(1092), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(12, 7, 13), float32], Tensor[(1092), float32]) {
  %191 = cast(%var_5791, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %192 = reshape(%191, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %193 = @func_5328() /* ty=Tensor[(2, 6, 9), bool] */;
  %194 = @func_109(%192) /* ty=Tensor[(12, 7, 13), float32] */;
  (%193, %194, %var_5791)
}

def @main(%var_12422: Tensor[(13, 6, 4), float32], %var_12423: Tensor[(13, 6, 4), float32]) -> (Tensor[(13, 6, 4), bool],) {
  %195 = cast(%var_12423, dtype="float32") /* ty=Tensor[(13, 6, 4), float32] */;
  %196 = shape_of(%var_12422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %197 = cast(%var_12422, dtype="float32") /* ty=Tensor[(13, 6, 4), float32] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %199 = divide(%197, %198) /* ty=Tensor[(13, 6, 4), float32] */;
  %200 = cast(%199, dtype="float64") /* ty=Tensor[(13, 6, 4), float64] */;
  %201 = rsqrt(%200) /* ty=Tensor[(13, 6, 4), float64] */;
  %202 = cast(%199, dtype="bool") /* ty=Tensor[(13, 6, 4), bool] */;
  %203 = shape_of(%201, dtype="int32") /* ty=Tensor[(3), int32] */;
  %204 = cast(%201, dtype="bool") /* ty=Tensor[(13, 6, 4), bool] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %206 = greater_equal(%204, %205) /* ty=Tensor[(13, 6, 4), bool] */;
  (%206,)
}

def @func_1300(%var_1287: Tensor[(13, 2, 5), int16], %var_1296: Tensor[(8, 36), float32]) -> (Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) {
  %207 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 2, 5), int16] */, dtype="int16") /* ty=Tensor[(13, 2, 5), int16] */;
  %208 = shape_of(%var_1287, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%var_1287, dtype="int16") /* ty=Tensor[(13, 2, 5), int16] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %211 = cast(%var_1296, dtype="float32") /* ty=Tensor[(8, 36), float32] */;
  %212 = reshape(%211, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %213 = right_shift(%209, %210) /* ty=Tensor[(13, 2, 5), int16] */;
  %214 = @func_130(%212) /* ty=Tensor[(12, 6, 4), float32] */;
  (%213, %214, %var_1296)
}

def @func_109(%var_105: Tensor[(12, 7, 13), float32]) -> Tensor[(12, 7, 13), float32] {
  %215 = cast(%var_105, dtype="float32") /* ty=Tensor[(12, 7, 13), float32] */;
  cos(%215) /* ty=Tensor[(12, 7, 13), float32] */
}

def @func_6803() -> Tensor[(2, 6, 9), bool] {
  %216 = @func_6512() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %216.0
}

def @func_5356() -> (Tensor[(600, 2), int8],) {
  %217 = @func_5117() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) */;
  %218 = %217.2;
  (%218,)
}

def @func_4611() -> (Tensor[(2, 6, 9), bool],) {
  %219 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(2, 6, 9), bool] */;
  %220 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(2, 6, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(2, 6, 9), bool] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %223 = greater(%221, %222) /* ty=Tensor[(2, 6, 9), bool] */;
  (%223,)
}

def @func_3887(%var_3869: Tensor[(14, 13, 11), float64]) -> Tensor[(14, 13, 11), float64] {
  %224 = cast(%var_3869, dtype="float64") /* ty=Tensor[(14, 13, 11), float64] */;
  erf(%224) /* ty=Tensor[(14, 13, 11), float64] */
}

def @func_9324() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %225 = @func_6922() /* ty=Tensor[(2, 6, 9), bool] */;
  %226 = @func_7108() /* ty=Tensor[(2, 6, 9), bool] */;
  (%225, %226)
}

def @func_5947(%var_5930: Tensor[(1200), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int64], Tensor[(1200), int8], Tensor[(1575), int32]) {
  %227 = @func_4611() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %228 = cast(%var_5930, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %229 = cast(meta[relay.Constant][21] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %230 = cast(%var_5930, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %231 = reshape(%228, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %232 = reshape(%229, newshape=[1575]) /* ty=Tensor[(1575), int32] */;
  %233 = reshape(%230, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %234 = @func_5301(%231, %232, %233) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(12, 6, 4), float32], Tensor[(24, 12), float32], Tensor[(15, 15, 7), uint64], Tensor[(15, 5, 16), int64], Tensor[(12, 6, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(1575), float32]) */;
  %235 = %227.0;
  %236 = %234.5;
  (%235, %236, %var_5930, meta[relay.Constant][21] /* ty=Tensor[(1575), int32] */)
}

def @func_9258() -> Tensor[(2, 6, 9), bool] {
  @func_5328() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_11067(%var_11048: Tensor[(1, 1456), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(440), float32], Tensor[(1352), float64], Tensor[(1, 1456), float64]) {
  %237 = cast(meta[relay.Constant][22] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %238 = cast(%var_11048, dtype="float64") /* ty=Tensor[(1, 1456), float64] */;
  %239 = reshape(%237, newshape=[1352]) /* ty=Tensor[(1352), float64] */;
  %240 = reshape(%238, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
  %241 = @func_9971(%239, %240) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32], Tensor[(1200), int8], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1352), float32], Tensor[(2, 6, 9), bool], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(2, 6, 9), bool]) */;
  %242 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
  %243 = %241.3;
  (%242, %243, meta[relay.Constant][22] /* ty=Tensor[(1352), float64] */, %var_11048)
}

def @func_2059(%var_2056: float32, %var_2057: Tensor[(440, 1), float32]) -> (Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(11, 5, 8), float32], float32, Tensor[(440, 1), float32]) {
  %244 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 4, 5), float32] */;
  %245 = sigmoid(%244) /* ty=Tensor[(5, 4, 5), float32] */;
  %246 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 4, 5), float32] */, dtype="float64") /* ty=Tensor[(5, 4, 5), float64] */;
  %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%245, dtype="float64") /* ty=Tensor[(5, 4, 5), float64] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %250 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 4, 5), float32] */, dtype="float64") /* ty=Tensor[(5, 4, 5), float64] */;
  %251 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 4, 5), float32] */, dtype="float64") /* ty=Tensor[(5, 4, 5), float64] */;
  %252 = cast(%var_2056, dtype="float32") /* ty=float32 */;
  %253 = cast(%var_2057, dtype="float32") /* ty=Tensor[(440, 1), float32] */;
  %254 = reshape(%252, newshape=[]) /* ty=float32 */;
  %255 = reshape(%253, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %256 = floor_mod(%248, %249) /* ty=Tensor[(5, 4, 5), float64] */;
  %257 = atan(%250) /* ty=Tensor[(5, 4, 5), float64] */;
  %258 = acos(%251) /* ty=Tensor[(5, 4, 5), float64] */;
  %259 = @func_1549(%254, %255) /* ty=Tensor[(11, 5, 8), float32] */;
  (%256, %257, %258, %259, %var_2056, %var_2057)
}

def @func_6645() -> (Tensor[(2, 6, 9), bool],) {
  %260 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %261 = %260.0;
  (%261,)
}

def @func_6750(%var_6697: Tensor[(4, 14, 11), float32], %var_6698: Tensor[(4, 14, 11), float32], %var_6705: Tensor[(26, 52), float64]) -> (Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(24, 12), float32], Tensor[(1200), int8], Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(4, 14, 11), float32]) {
  %262 = cast(%var_6705, dtype="float64") /* ty=Tensor[(26, 52), float64] */;
  %263 = cast(%var_6705, dtype="float64") /* ty=Tensor[(26, 52), float64] */;
  %264 = reshape(%262, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %265 = reshape(%263, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %266 = @func_2816(%264, %265) /* ty=(Tensor[(8, 13, 13), float64],) */;
  %267 = cast(meta[relay.Constant][24] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %268 = cast(meta[relay.Constant][25] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %269 = cast(meta[relay.Constant][24] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %270 = reshape(%267, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %271 = reshape(%268, newshape=[1575]) /* ty=Tensor[(1575), int32] */;
  %272 = reshape(%269, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %273 = @func_5301(%270, %271, %272) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(12, 6, 4), float32], Tensor[(24, 12), float32], Tensor[(15, 15, 7), uint64], Tensor[(15, 5, 16), int64], Tensor[(12, 6, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(1575), float32]) */;
  %274 = @func_5876() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %275 = cast(%var_6698, dtype="bool") /* ty=Tensor[(4, 14, 11), bool] */;
  %276 = shape_of(%var_6697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%var_6697, dtype="bool") /* ty=Tensor[(4, 14, 11), bool] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %279 = greater(%277, %278) /* ty=Tensor[(4, 14, 11), bool] */;
  %280 = cast(%279, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %281 = log2(%280) /* ty=Tensor[(4, 14, 11), float32] */;
  %282 = cast(%279, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%281, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %286 = %266.0;
  %287 = %273.3;
  %288 = %274.0;
  %289 = add(%284, %285) /* ty=Tensor[(4, 14, 11), float32] */;
  (%286, %var_6705, %287, meta[relay.Constant][24] /* ty=Tensor[(1200), int8] */, meta[relay.Constant][25] /* ty=Tensor[(1575), int32] */, %288, %289)
}

def @func_12109() -> Tensor[(2, 6, 9), bool] {
  %290 = @func_10194() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %290.0
}

def @func_11510() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(960, ?), uint16], Tensor[(600, 2), int8], Tensor[(2, 6, 9), bool]) {
  %291 = @func_7253() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %292 = cast(meta[relay.Constant][26] /* ty=Tensor[(960, 1), float64] */, dtype="float64") /* ty=Tensor[(960, 1), float64] */;
  %293 = reshape(%292, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float64] */;
  %294 = @func_10463(%293) /* ty=(Tensor[(10, 16, 6), float64], Tensor[(2, 6, 9), bool]) */;
  %295 = cast(meta[relay.Constant][26] /* ty=Tensor[(960, 1), float64] */, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
  %296 = acosh(%295) /* ty=Tensor[(960, 1), float32] */;
  %297 = cast(%296, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
  %298 = acos(%297) /* ty=Tensor[(960, 1), float32] */;
  %299 = cast(%296, dtype="uint16") /* ty=Tensor[(960, 1), uint16] */;
  %300 = shape_of(%298, dtype="int32") /* ty=Tensor[(2), int32] */;
  %301 = cast(%298, dtype="uint16") /* ty=Tensor[(960, 1), uint16] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %303 = @func_10260() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8]) */;
  %304 = @func_9795() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %305 = %291.0;
  %306 = %294.1;
  %307 = bitwise_or(%301, %302) /* ty=Tensor[(960, ?), uint16] */;
  %308 = %303.1;
  %309 = %304.0;
  (%305, %306, %307, %308, %309)
}

def @func_7065(%var_7031: Tensor[(1200), int8], %var_7048: Tensor[(1, 160), uint8]) -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(1200), int8], Tensor[(10, 4, 4), float64], Tensor[(1, 160), uint8], Tensor[(2, 6, 9), float64]) {
  %310 = cast(%var_7031, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %311 = cast(%var_7031, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %312 = reshape(%310, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %313 = reshape(%311, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %314 = @func_1027(%312, %313) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
  %315 = cast(%var_7048, dtype="uint8") /* ty=Tensor[(1, 160), uint8] */;
  %316 = cast(%var_7048, dtype="uint8") /* ty=Tensor[(1, 160), uint8] */;
  %317 = reshape(%315, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
  %318 = reshape(%316, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
  %319 = @func_1996(%317, %318) /* ty=(Tensor[(10, 4, 4), bool], Tensor[(10, 4, 4), float64], Tensor[(10, 4, 4), float32]) */;
  %320 = @func_6922() /* ty=Tensor[(2, 6, 9), bool] */;
  %321 = cast(%320, dtype="float64") /* ty=Tensor[(2, 6, 9), float64] */;
  %322 = @func_5328() /* ty=Tensor[(2, 6, 9), bool] */;
  %323 = %314.0;
  %324 = %319.1;
  %325 = log10(%321) /* ty=Tensor[(2, 6, 9), float64] */;
  (%322, %323, %var_7031, %324, %var_7048, %325)
}

def @func_7776() -> Tensor[(2, 6, 9), bool] {
  @func_4898() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_10645(%var_10639: float32) -> (Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32]) {
  %326 = cast(%var_10639, dtype="float32") /* ty=float32 */;
  %327 = cast(meta[relay.Constant][27] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %328 = reshape(%326, newshape=[]) /* ty=float32 */;
  %329 = reshape(%327, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %330 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
  %331 = @func_1549(%328, %329) /* ty=Tensor[(11, 5, 8), float32] */;
  (%330, %331, %var_10639, meta[relay.Constant][27] /* ty=Tensor[(440), float32] */)
}

def @func_9056() -> Tensor[(2, 6, 9), bool] {
  %332 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %332.0
}

def @func_5745() -> (Tensor[(2, 6, 9), bool],) {
  %333 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %334 = %333.0;
  (%334,)
}

def @func_6045() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) {
  %335 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %336 = cast(meta[relay.Constant][28] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
  %337 = reshape(%336, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), float64] */;
  %338 = @func_2664(%337) /* ty=(Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) */;
  %339 = %335.0;
  %340 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
  %341 = %338.1;
  (%339, %340, %341, meta[relay.Constant][28] /* ty=Tensor[(392), float64] */)
}

def @func_1549(%var_1540: float32, %var_1541: Tensor[(11, 5, 8), float32]) -> Tensor[(11, 5, 8), float32] {
  %342 = cast(%var_1540, dtype="float32") /* ty=float32 */;
  %343 = cast(%var_1541, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
  floor_divide(%342, %343) /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_12039() -> (Tensor[(12, 6, 4), uint64],) {
  %344 = @func_10738() /* ty=(Tensor[(12, 6, 4), uint64],) */;
  %345 = %344.0;
  (%345,)
}

def @func_8490() -> (Tensor[(12, 6, 4), float32],) {
  %346 = @func_6993() /* ty=Tensor[(12, 6, 4), float32] */;
  (%346,)
}

def @func_8093() -> (Tensor[(12, 6, 4), float32], Tensor[(2, 6, 9), bool], Tensor[(1575, 9), int64]) {
  %347 = @func_6512() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %348 = @func_6376() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) */;
  %349 = %348.1;
  %350 = cast(%349, dtype="int64") /* ty=Tensor[(1575, 1), int64] */;
  %351 = cast(meta[relay.Constant][29] /* ty=Tensor[(1575, 9), int32] */, dtype="int64") /* ty=Tensor[(1575, 9), int64] */;
  %352 = @func_6993() /* ty=Tensor[(12, 6, 4), float32] */;
  %353 = %347.0;
  %354 = left_shift(%350, %351) /* ty=Tensor[(1575, 9), int64] */;
  (%352, %353, %354)
}

def @func_1996(%var_1976: Tensor[(10, 4, 4), uint8], %var_1977: Tensor[(10, 4, 4), uint8]) -> (Tensor[(10, 4, 4), bool], Tensor[(10, 4, 4), float64], Tensor[(10, 4, 4), float32]) {
  %355 = cast(%var_1977, dtype="uint8") /* ty=Tensor[(10, 4, 4), uint8] */;
  %356 = shape_of(%var_1976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%var_1976, dtype="uint8") /* ty=Tensor[(10, 4, 4), uint8] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %359 = bitwise_xor(%357, %358) /* ty=Tensor[(10, 4, 4), uint8] */;
  %360 = cast(%var_1977, dtype="bool") /* ty=Tensor[(10, 4, 4), bool] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="bool") /* ty=Tensor[(10, 4, 4), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %364 = cast(%var_1976, dtype="float64") /* ty=Tensor[(10, 4, 4), float64] */;
  %365 = cast(%var_1977, dtype="float32") /* ty=Tensor[(10, 4, 4), float32] */;
  %366 = not_equal(%362, %363) /* ty=Tensor[(10, 4, 4), bool] */;
  %367 = asinh(%364) /* ty=Tensor[(10, 4, 4), float64] */;
  %368 = acosh(%365) /* ty=Tensor[(10, 4, 4), float32] */;
  (%366, %367, %368)
}

def @func_5679() -> (Tensor[(2, 6, 9), bool],) {
  %369 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
  (%369,)
}

def @func_6120() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1092), float32]) {
  %370 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %371 = cast(meta[relay.Constant][30] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %372 = reshape(%371, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %373 = @func_5797(%372) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 7, 13), float32], Tensor[(1092), float32]) */;
  %374 = %370.0;
  %375 = %373.0;
  (%374, %375, meta[relay.Constant][30] /* ty=Tensor[(1092), float32] */)
}

def @func_2664(%var_2625: Tensor[(14, 7, 4), float64]) -> (Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) {
  %376 = cast(meta[relay.Constant][31] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %377 = cast(meta[relay.Constant][31] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %378 = reshape(%376, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %379 = reshape(%377, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %380 = @func_2436(%378, %379) /* ty=(Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) */;
  %381 = cast(%var_2625, dtype="float64") /* ty=Tensor[(14, 7, 4), float64] */;
  %382 = asin(%381) /* ty=Tensor[(14, 7, 4), float64] */;
  %383 = cast(%var_2625, dtype="int8") /* ty=Tensor[(14, 7, 4), int8] */;
  %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%382, dtype="int8") /* ty=Tensor[(14, 7, 4), int8] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %387 = cast(7.99463f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %388 = cast(meta[relay.Constant][32] /* ty=Tensor[(110, 4), float32] */, dtype="float32") /* ty=Tensor[(110, 4), float32] */;
  %389 = reshape(%387, newshape=[]) /* ty=float32 */;
  %390 = reshape(%388, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %391 = %380.4;
  %392 = multiply(%385, %386) /* ty=Tensor[(14, 7, 4), int8] */;
  %393 = @func_1549(%389, %390) /* ty=Tensor[(11, 5, 8), float32] */;
  (%391, meta[relay.Constant][31] /* ty=Tensor[(1575), int32] */, %392, %393, 7.99463f /* ty=float32 */, meta[relay.Constant][32] /* ty=Tensor[(110, 4), float32] */)
}

def @func_7187() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %394 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %395 = %394.0;
  %396 = @func_5060() /* ty=Tensor[(2, 6, 9), bool] */;
  (%395, %396)
}

def @func_8776(%var_8767: Tensor[(1575, 9), int32]) -> Tensor[(1575, 9), int64] {
  %397 = @func_7124() /* ty=(Tensor[(1575, 1), int32],) */;
  %398 = %397.0;
  %399 = cast(%398, dtype="int64") /* ty=Tensor[(1575, 1), int64] */;
  %400 = cast(%var_8767, dtype="int64") /* ty=Tensor[(1575, 9), int64] */;
  bitwise_xor(%399, %400) /* ty=Tensor[(1575, 9), int64] */
}

def @func_7726() -> Tensor[(12, 6, 4), float32] {
  %401 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
  %401.1
}

def @func_8374() -> (Tensor[(2, 6, 9), bool],) {
  %402 = @func_7689() /* ty=Tensor[(2, 6, 9), bool] */;
  (%402,)
}

def @func_10463(%var_10451: Tensor[(10, 16, 6), float64]) -> (Tensor[(10, 16, 6), float64], Tensor[(2, 6, 9), bool]) {
  %403 = cast(%var_10451, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
  %404 = acosh(%403) /* ty=Tensor[(10, 16, 6), float64] */;
  %405 = @func_9660() /* ty=Tensor[(2, 6, 9), bool] */;
  (%404, %405)
}

def @func_10102(%var_10064: Tensor[(392, 1), float64], %var_10090: Tensor[(1092), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(7, 56), float64], Tensor[(392, 1), float64], Tensor[(8, 36), float32], Tensor[(130), int16], Tensor[(2, 144), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(2, 6, 9), bool]) {
  %406 = cast(%var_10064, dtype="float64") /* ty=Tensor[(392, 1), float64] */;
  %407 = reshape(%406, newshape=[7, 56]) /* ty=Tensor[(7, 56), float64] */;
  %408 = @func_6878(%407) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(7, 56), float64]) */;
  %409 = cast(meta[relay.Constant][33] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %410 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 144), float32] */, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %411 = reshape(%409, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), int16] */;
  %412 = reshape(%410, newshape=[8, 36]) /* ty=Tensor[(8, 36), float32] */;
  %413 = @func_1300(%411, %412) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) */;
  %414 = cast(%var_10090, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %415 = reshape(%414, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %416 = @func_9324() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %417 = @func_7689() /* ty=Tensor[(2, 6, 9), bool] */;
  %418 = %408.2;
  %419 = %413.2;
  %420 = @func_109(%415) /* ty=Tensor[(12, 7, 13), float32] */;
  %421 = %416.0;
  (%417, %418, %var_10064, %419, meta[relay.Constant][33] /* ty=Tensor[(130), int16] */, meta[relay.Constant][34] /* ty=Tensor[(2, 144), float32] */, %420, %var_10090, %421)
}

def @func_5301(%var_5253: Tensor[(1200), int8], %var_5265: Tensor[(1575), int32], %var_5270: Tensor[(15, 5, 16), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(12, 6, 4), float32], Tensor[(24, 12), float32], Tensor[(15, 15, 7), uint64], Tensor[(15, 5, 16), int64], Tensor[(12, 6, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(1575), float32]) {
  %422 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %423 = cast(meta[relay.Constant][35] /* ty=Tensor[(24, 12), float32] */, dtype="float32") /* ty=Tensor[(24, 12), float32] */;
  %424 = reshape(%423, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %425 = cast(%var_5265, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %426 = cast(%var_5265, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %427 = reshape(%425, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %428 = reshape(%426, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %429 = @func_2436(%427, %428) /* ty=(Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) */;
  %430 = cast(%var_5253, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %431 = cast(%var_5253, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %432 = reshape(%430, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %433 = reshape(%431, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %434 = @func_1027(%432, %433) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
  %435 = %434.0;
  %436 = cast(%var_5270, dtype="int64") /* ty=Tensor[(15, 5, 16), int64] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="int64") /* ty=Tensor[(15, 5, 16), int64] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %440 = @func_130(%424) /* ty=Tensor[(12, 6, 4), float32] */;
  %441 = cast(%440, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  %442 = reshape(%441, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %443 = cast(meta[relay.Constant][36] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %444 = reshape(%443, newshape=[13, 16, 7]) /* ty=Tensor[(13, 16, 7), float64] */;
  %445 = @func_3213(%444) /* ty=(Tensor[(13, 16, 7), float32],) */;
  %446 = cast(%var_5265, dtype="float32") /* ty=Tensor[(1575), float32] */;
  %447 = %422.0;
  %448 = %429.0;
  %449 = add(%438, %439) /* ty=Tensor[(15, 5, 16), int64] */;
  %450 = @func_130(%442) /* ty=Tensor[(12, 6, 4), float32] */;
  %451 = %445.0;
  %452 = asin(%446) /* ty=Tensor[(1575), float32] */;
  (%447, %var_5253, %440, meta[relay.Constant][35] /* ty=Tensor[(24, 12), float32] */, %448, %449, %450, %451, meta[relay.Constant][36] /* ty=Tensor[(1456), float64] */, %452)
}

def @func_6654() -> Tensor[(2, 6, 9), bool] {
  %453 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %453.0
}

def @func_5117() -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) {
  %454 = cast(meta[relay.Constant][37] /* ty=Tensor[(600, 2), int8] */, dtype="int8") /* ty=Tensor[(600, 2), int8] */;
  %455 = cast(meta[relay.Constant][37] /* ty=Tensor[(600, 2), int8] */, dtype="int8") /* ty=Tensor[(600, 2), int8] */;
  %456 = reshape(%454, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %457 = reshape(%455, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %458 = @func_1027(%456, %457) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
  %459 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
  %460 = %458.0;
  (%459, %460, meta[relay.Constant][37] /* ty=Tensor[(600, 2), int8] */)
}

def @func_4898() -> Tensor[(2, 6, 9), bool] {
  %461 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %461.0
}

def @func_8705(%var_8646: Tensor[(15, 13, 16), float32]) -> (Tensor[(15, 13, 16), float64], Tensor[(9, 1, 10), int64], int64, Tensor[(90), int64], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(15, 13, 16), float64], Tensor[(12, 6, 4), float32], Tensor[(196, 2), float64], Tensor[(15, 13, 16), float32]) {
  %462 = cast(%var_8646, dtype="float64") /* ty=Tensor[(15, 13, 16), float64] */;
  %463 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %464 = cast(meta[relay.Constant][38] /* ty=Tensor[(90), int64] */, dtype="int64") /* ty=Tensor[(90), int64] */;
  %465 = reshape(%463, newshape=[]) /* ty=int64 */;
  %466 = reshape(%464, newshape=[9, 1, 10]) /* ty=Tensor[(9, 1, 10), int64] */;
  %467 = @func_1496(%465, %466) /* ty=(Tensor[(9, 1, 10), int64],) */;
  %468 = @func_6512() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %469 = @func_8374() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %470 = cast(%var_8646, dtype="float32") /* ty=Tensor[(15, 13, 16), float32] */;
  %471 = cos(%470) /* ty=Tensor[(15, 13, 16), float32] */;
  %472 = cast(%471, dtype="float64") /* ty=Tensor[(15, 13, 16), float64] */;
  %473 = cast(meta[relay.Constant][39] /* ty=Tensor[(196, 2), float64] */, dtype="float64") /* ty=Tensor[(196, 2), float64] */;
  %474 = reshape(%473, newshape=[392]) /* ty=Tensor[(392), float64] */;
  %475 = @func_8147(%474) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(392), float64]) */;
  %476 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 13, 16), float32] */, dtype="int16") /* ty=Tensor[(15, 13, 16), int16] */;
  %477 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%471, dtype="int16") /* ty=Tensor[(15, 13, 16), int16] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %480 = add(%478, %479) /* ty=Tensor[(15, 13, 16), int16] */;
  %481 = cast(%480, dtype="float32") /* ty=Tensor[(15, 13, 16), float32] */;
  %482 = sinh(%462) /* ty=Tensor[(15, 13, 16), float64] */;
  %483 = %467.0;
  %484 = %468.0;
  %485 = %469.0;
  %486 = rsqrt(%472) /* ty=Tensor[(15, 13, 16), float64] */;
  %487 = %475.1;
  %488 = sigmoid(%481) /* ty=Tensor[(15, 13, 16), float32] */;
  (%482, %483, -10 /* ty=int64 */, meta[relay.Constant][38] /* ty=Tensor[(90), int64] */, %484, %485, %486, %487, meta[relay.Constant][39] /* ty=Tensor[(196, 2), float64] */, %488)
}

def @func_5409(%var_5367: Tensor[(2, 6, 9), bool], %var_5388: Tensor[(1, 504), int8]) -> (Tensor[(2, 6, 9), float32], Tensor[(8, 7, 9), float32], Tensor[(1, 504), int8]) {
  %489 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
  %490 = cast(%var_5367, dtype="uint32") /* ty=Tensor[(2, 6, 9), uint32] */;
  %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%489, dtype="uint32") /* ty=Tensor[(2, 6, 9), uint32] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %494 = multiply(%492, %493) /* ty=Tensor[(2, 6, 9), uint32] */;
  %495 = cast(%494, dtype="float32") /* ty=Tensor[(2, 6, 9), float32] */;
  %496 = cast(%var_5388, dtype="int8") /* ty=Tensor[(1, 504), int8] */;
  %497 = reshape(%496, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), int8] */;
  %498 = @func_1639(%497) /* ty=(Tensor[(8, 7, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(288), float32], Tensor[(8, 7, 9), float32]) */;
  %499 = log(%495) /* ty=Tensor[(2, 6, 9), float32] */;
  %500 = %498.3;
  (%499, %500, %var_5388)
}

def @func_5328() -> Tensor[(2, 6, 9), bool] {
  %501 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %501.0
}

def @func_5876() -> (Tensor[(2, 6, 9), bool],) {
  %502 = @func_4611() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %503 = %502.0;
  (%503,)
}

def @func_6321() -> (Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) {
  %504 = cast(meta[relay.Constant][41] /* ty=Tensor[(1575, 1), int32] */, dtype="int32") /* ty=Tensor[(1575, 1), int32] */;
  %505 = cast(meta[relay.Constant][41] /* ty=Tensor[(1575, 1), int32] */, dtype="int32") /* ty=Tensor[(1575, 1), int32] */;
  %506 = reshape(%504, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %507 = reshape(%505, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %508 = @func_2436(%506, %507) /* ty=(Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) */;
  %509 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
  %510 = %508.4;
  (%509, %510, meta[relay.Constant][41] /* ty=Tensor[(1575, 1), int32] */)
}

def @func_3213(%var_3196: Tensor[(13, 16, 7), float64]) -> (Tensor[(13, 16, 7), float32],) {
  %511 = cast(%var_3196, dtype="float64") /* ty=Tensor[(13, 16, 7), float64] */;
  %512 = sinh(%511) /* ty=Tensor[(13, 16, 7), float64] */;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(13, 16, 7), float32] */;
  %514 = cosh(%513) /* ty=Tensor[(13, 16, 7), float32] */;
  (%514,)
}

def @func_10922() -> (Tensor[(2, 6, 9), bool], Tensor[(1575, 9), int64], Tensor[(392), float64], Tensor[(392), float64]) {
  %515 = @func_10194() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %516 = cast(meta[relay.Constant][42] /* ty=Tensor[(14175), int32] */, dtype="int32") /* ty=Tensor[(14175), int32] */;
  %517 = reshape(%516, newshape=[1575, 9]) /* ty=Tensor[(1575, 9), int32] */;
  %518 = @func_8776(%517) /* ty=Tensor[(1575, 9), int64] */;
  %519 = cast(meta[relay.Constant][42] /* ty=Tensor[(14175), int32] */, dtype="int64") /* ty=Tensor[(14175), int64] */;
  %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(2), int32] */;
  %521 = cast(%518, dtype="int64") /* ty=Tensor[(1575, 9), int64] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %523 = cast(meta[relay.Constant][43] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
  %524 = reshape(%523, newshape=[392]) /* ty=Tensor[(392), float64] */;
  %525 = @func_8147(%524) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(392), float64]) */;
  %526 = %515.0;
  %527 = add(%521, %522) /* ty=Tensor[(1575, 9), int64] */;
  %528 = %525.2;
  (%526, %527, %528, meta[relay.Constant][43] /* ty=Tensor[(392), float64] */)
}

def @func_1027(%var_1006: Tensor[(15, 5, 16), int8], %var_1007: Tensor[(15, 5, 16), int8]) -> (Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) {
  %529 = cast(%var_1007, dtype="int8") /* ty=Tensor[(15, 5, 16), int8] */;
  %530 = shape_of(%var_1006, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(%var_1006, dtype="int8") /* ty=Tensor[(15, 5, 16), int8] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %533 = cast(%var_1007, dtype="float64") /* ty=Tensor[(15, 5, 16), float64] */;
  %534 = multiply(%531, %532) /* ty=Tensor[(15, 5, 16), int8] */;
  %535 = sinh(%533) /* ty=Tensor[(15, 5, 16), float64] */;
  (%534, %535)
}

def @func_4519(%var_4485: Tensor[(5, 9, 5), float64], %var_4489: Tensor[(1, 130), int16]) -> (Tensor[(5, 9, 5), float64], Tensor[(13, 2, 5), int16], Tensor[(1, 130), int16], Tensor[(24, 12), float32]) {
  %536 = cast(%var_4485, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
  %537 = cast(%var_4489, dtype="int16") /* ty=Tensor[(1, 130), int16] */;
  %538 = cast(meta[relay.Constant][44] /* ty=Tensor[(24, 12), float32] */, dtype="float32") /* ty=Tensor[(24, 12), float32] */;
  %539 = reshape(%537, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), int16] */;
  %540 = reshape(%538, newshape=[8, 36]) /* ty=Tensor[(8, 36), float32] */;
  %541 = @func_1300(%539, %540) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) */;
  %542 = asinh(%536) /* ty=Tensor[(5, 9, 5), float64] */;
  %543 = %541.0;
  (%542, %543, %var_4489, meta[relay.Constant][44] /* ty=Tensor[(24, 12), float32] */)
}

def @func_7124() -> (Tensor[(1575, 1), int32],) {
  %544 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
  %545 = %544.2;
  (%545,)
}

def @func_2975(%var_2942: Tensor[(6, 9, 7), uint32], %var_2943: Tensor[(6, 9, 7), uint32]) -> Tensor[(6, 9, 7), uint8] {
  %546 = cast(%var_2943, dtype="float32") /* ty=Tensor[(6, 9, 7), float32] */;
  %547 = exp(%546) /* ty=Tensor[(6, 9, 7), float32] */;
  %548 = cast(%var_2943, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
  %549 = shape_of(%var_2942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%var_2942, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %552 = less_equal(%550, %551) /* ty=Tensor[(6, 9, 7), bool] */;
  %553 = cast(%552, dtype="uint16") /* ty=Tensor[(6, 9, 7), uint16] */;
  %554 = shape_of(%var_2943, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%var_2943, dtype="uint16") /* ty=Tensor[(6, 9, 7), uint16] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %557 = left_shift(%555, %556) /* ty=Tensor[(6, 9, 7), uint16] */;
  %558 = cast(%557, dtype="uint8") /* ty=Tensor[(6, 9, 7), uint8] */;
  %559 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%547, dtype="uint8") /* ty=Tensor[(6, 9, 7), uint8] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%560, %561) /* ty=Tensor[(6, 9, 7), uint8] */
}

def @func_2816(%var_2807: Tensor[(8, 13, 13), float64], %var_2808: Tensor[(8, 13, 13), float64]) -> (Tensor[(8, 13, 13), float64],) {
  %562 = cast(%var_2808, dtype="float64") /* ty=Tensor[(8, 13, 13), float64] */;
  %563 = shape_of(%var_2807, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%var_2807, dtype="float64") /* ty=Tensor[(8, 13, 13), float64] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %566 = floor_divide(%564, %565) /* ty=Tensor[(8, 13, 13), float64] */;
  (%566,)
}

def @func_9529() -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(2, 6, 9), bool], Tensor[(600, 2), float32]) {
  %567 = @func_6645() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %568 = @func_7491() /* ty=(Tensor[(600, 2), int8],) */;
  %569 = @func_5117() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) */;
  %570 = %569.2;
  %571 = cast(%570, dtype="float32") /* ty=Tensor[(600, 2), float32] */;
  %572 = atan(%571) /* ty=Tensor[(600, 2), float32] */;
  %573 = cast(%572, dtype="float32") /* ty=Tensor[(600, 2), float32] */;
  %574 = %567.0;
  %575 = %568.0;
  %576 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
  %577 = acosh(%573) /* ty=Tensor[(600, 2), float32] */;
  (%574, %575, %576, %577)
}

def @func_692(%var_685: Tensor[(288, 1), float32]) -> (Tensor[(15, 9, 4), bool], Tensor[(12, 6, 4), float32], Tensor[(288, 1), float32]) {
  %578 = cast(meta[relay.Constant][46] /* ty=Tensor[(15, 9, 4), int64] */, dtype="bool") /* ty=Tensor[(15, 9, 4), bool] */;
  %579 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(15, 9, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 9, 4), int64] */, dtype="bool") /* ty=Tensor[(15, 9, 4), bool] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %582 = cast(%var_685, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %583 = reshape(%582, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %584 = less(%580, %581) /* ty=Tensor[(15, 9, 4), bool] */;
  %585 = @func_130(%583) /* ty=Tensor[(12, 6, 4), float32] */;
  (%584, %585, %var_685)
}

def @func_10738() -> (Tensor[(12, 6, 4), uint64],) {
  %586 = @func_7726() /* ty=Tensor[(12, 6, 4), float32] */;
  %587 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 6, 4), float32] */, dtype="uint64") /* ty=Tensor[(12, 6, 4), uint64] */;
  %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%586, dtype="uint64") /* ty=Tensor[(12, 6, 4), uint64] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %591 = multiply(%589, %590) /* ty=Tensor[(12, 6, 4), uint64] */;
  (%591,)
}

def @func_8547() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %592 = @func_6580() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %593 = @func_6654() /* ty=Tensor[(2, 6, 9), bool] */;
  %594 = %592.1;
  (%593, %594)
}

def @func_9853(%var_9842: Tensor[(440), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(440), float32]) {
  %595 = cast(%var_9842, dtype="float32") /* ty=Tensor[(440), float32] */;
  %596 = reshape(%595, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %597 = @func_6416(%596) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(440, 1), float32], float32, Tensor[(440), float32]) */;
  %598 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
  %599 = %597.0;
  (%598, %599, %var_9842)
}

def @func_6376() -> (Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) {
  %600 = @func_6120() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1092), float32]) */;
  %601 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
  %602 = cast(meta[relay.Constant][48] /* ty=Tensor[(144, 2), float32] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %603 = reshape(%602, newshape=[288, 1]) /* ty=Tensor[(288, 1), float32] */;
  %604 = @func_692(%603) /* ty=(Tensor[(15, 9, 4), bool], Tensor[(12, 6, 4), float32], Tensor[(288, 1), float32]) */;
  %605 = %600.1;
  %606 = %601.2;
  %607 = %604.1;
  (%605, %606, %607, meta[relay.Constant][48] /* ty=Tensor[(144, 2), float32] */)
}

def @func_7562(%var_7544: Tensor[(1575), int32]) -> (Tensor[(2, 6, 9), bool], Tensor[(160), uint8], Tensor[(1575), bool], Tensor[(1575), float32]) {
  %608 = @func_6580() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %609 = cast(meta[relay.Constant][49] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %610 = cast(meta[relay.Constant][49] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %611 = reshape(%609, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %612 = reshape(%610, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %613 = @func_2436(%611, %612) /* ty=(Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) */;
  %614 = cast(%var_7544, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %615 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %616 = cast(meta[relay.Constant][49] /* ty=Tensor[(1575), int32] */, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?), bool] */;
  %618 = not_equal(%616, %617) /* ty=Tensor[(1575), bool] */;
  %619 = cast(meta[relay.Constant][49] /* ty=Tensor[(1575), int32] */, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(1), int32] */;
  %621 = cast(%618, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?), bool] */;
  %623 = cast(%618, dtype="float32") /* ty=Tensor[(1575), float32] */;
  %624 = %608.1;
  %625 = %613.2;
  %626 = logical_and(%621, %622) /* ty=Tensor[(1575), bool] */;
  %627 = acosh(%623) /* ty=Tensor[(1575), float32] */;
  (%624, %625, %626, %627)
}

def @func_10829() -> Tensor[(600, 2), int8] {
  %628 = @func_5356() /* ty=(Tensor[(600, 2), int8],) */;
  %628.0
}

def @func_6580() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %629 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %630 = @func_4611() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %631 = %629.0;
  %632 = %630.0;
  (%631, %632)
}

def @func_8454() -> (Tensor[(2, 6, 9), bool], Tensor[(16, 5, 10), float64], Tensor[(800), float64], Tensor[(600, 2), float64]) {
  %633 = cast(meta[relay.Constant][50] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %634 = reshape(%633, newshape=[16, 5, 10]) /* ty=Tensor[(16, 5, 10), float64] */;
  %635 = @func_2479(%634) /* ty=(Tensor[(16, 5, 10), float64],) */;
  %636 = @func_7491() /* ty=(Tensor[(600, 2), int8],) */;
  %637 = %636.0;
  %638 = cast(meta[relay.Constant][51] /* ty=Tensor[(600, 2), int8] */, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
  %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(2), int32] */;
  %640 = cast(%637, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %642 = logical_or(%640, %641) /* ty=Tensor[(600, 2), bool] */;
  %643 = cast(%642, dtype="float64") /* ty=Tensor[(600, 2), float64] */;
  %644 = @func_5060() /* ty=Tensor[(2, 6, 9), bool] */;
  %645 = %635.0;
  %646 = acos(%643) /* ty=Tensor[(600, 2), float64] */;
  (%644, %645, meta[relay.Constant][50] /* ty=Tensor[(800), float64] */, %646)
}

def @func_9351() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %647 = @func_8547() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %648 = %647.0;
  %649 = @func_6803() /* ty=Tensor[(2, 6, 9), bool] */;
  (%648, %649)
}

def @func_9795() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %650 = @func_5876() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %651 = %650.0;
  %652 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
  (%651, %652)
}

def @func_12334() -> (Tensor[(4, 15, 14), float32], Tensor[(800), float64], Tensor[(800), float64]) {
  %653 = @func_10270() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %654 = cast(meta[relay.Constant][52] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %655 = reshape(%654, newshape=[200, 4]) /* ty=Tensor[(200, 4), float64] */;
  %656 = @func_8844(%655) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(288), uint32], Tensor[(200, 4), float64], Tensor[(1200), int8]) */;
  %657 = %653.0;
  %658 = %656.1;
  (%657, %658, meta[relay.Constant][52] /* ty=Tensor[(800), float64] */)
}

def @func_10950() -> (Tensor[(1575), bool],) {
  %659 = @func_9607() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(1575), bool], Tensor[(15, 5, 16), int8]) */;
  %660 = %659.3;
  (%660,)
}

def @func_10426() -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8]) {
  %661 = @func_4611() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %662 = @func_9607() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(1575), bool], Tensor[(15, 5, 16), int8]) */;
  %663 = %661.0;
  %664 = %662.4;
  (%663, %664)
}

def @func_9100() -> Tensor[(2, 6, 9), bool] {
  %665 = @func_6784() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %665.0
}

def @func_6416(%var_6397: Tensor[(440), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(440, 1), float32], float32, Tensor[(440), float32]) {
  %666 = @func_6120() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1092), float32]) */;
  %667 = cast(9.75542f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %668 = cast(%var_6397, dtype="float32") /* ty=Tensor[(440), float32] */;
  %669 = reshape(%667, newshape=[]) /* ty=float32 */;
  %670 = reshape(%668, newshape=[440, 1]) /* ty=Tensor[(440, 1), float32] */;
  %671 = @func_2059(%669, %670) /* ty=(Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(11, 5, 8), float32], float32, Tensor[(440, 1), float32]) */;
  %672 = %666.0;
  %673 = %671.5;
  (%672, %673, 9.75542f /* ty=float32 */, %var_6397)
}

def @func_1277(%var_1229: Tensor[(2, 10, 12), float64], %var_1269: Tensor[(288), float32]) -> (Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(12, 6, 4), float32], Tensor[(288), float32]) {
  %674 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 10, 12), float64] */, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %675 = shape_of(%var_1229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%var_1229, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %678 = cast(%var_1229, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
  %679 = acos(%678) /* ty=Tensor[(2, 10, 12), float64] */;
  %680 = cast(%var_1229, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
  %681 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%679, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %684 = cast(%var_1269, dtype="float32") /* ty=Tensor[(288), float32] */;
  %685 = reshape(%684, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %686 = logical_and(%676, %677) /* ty=Tensor[(2, 10, 12), bool] */;
  %687 = floor_mod(%682, %683) /* ty=Tensor[(2, 10, 12), float64] */;
  %688 = @func_130(%685) /* ty=Tensor[(12, 6, 4), float32] */;
  (%686, %687, %688, %var_1269)
}

def @func_6512() -> (Tensor[(2, 6, 9), bool],) {
  %689 = @func_5745() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %690 = %689.0;
  (%690,)
}

def @func_5060() -> Tensor[(2, 6, 9), bool] {
  @func_4898() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_6442(%var_6436: Tensor[(154), float64], %var_6437: Tensor[(288), float32]) -> (Tensor[(600, 2), float32], Tensor[(12, 7, 13), float32], Tensor[(154), float64], Tensor[(288), float32], Tensor[(616), float64]) {
  %691 = @func_5117() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) */;
  %692 = %691.2;
  %693 = cast(%692, dtype="float32") /* ty=Tensor[(600, 2), float32] */;
  %694 = cast(%var_6436, dtype="float64") /* ty=Tensor[(154), float64] */;
  %695 = cast(%var_6437, dtype="float32") /* ty=Tensor[(288), float32] */;
  %696 = cast(meta[relay.Constant][54] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %697 = reshape(%694, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
  %698 = reshape(%695, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %699 = reshape(%696, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %700 = @func_1844(%697, %698, %699) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(130), int16], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(4, 14, 11), float64], Tensor[(12, 7, 13), float32]) */;
  %701 = sigmoid(%693) /* ty=Tensor[(600, 2), float32] */;
  %702 = %700.6;
  (%701, %702, %var_6436, %var_6437, meta[relay.Constant][54] /* ty=Tensor[(616), float64] */)
}

def @func_9660() -> Tensor[(2, 6, 9), bool] {
  %703 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
  %703.0
}

def @func_6189(%var_6155: Tensor[(440), float32], %var_6178: Tensor[(1456), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(5, 4, 5), float64], float32, Tensor[(440), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) {
  %704 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %705 = cast(5.7811f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %706 = cast(%var_6155, dtype="float32") /* ty=Tensor[(440), float32] */;
  %707 = reshape(%705, newshape=[]) /* ty=float32 */;
  %708 = reshape(%706, newshape=[440, 1]) /* ty=Tensor[(440, 1), float32] */;
  %709 = @func_2059(%707, %708) /* ty=(Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(11, 5, 8), float32], float32, Tensor[(440, 1), float32]) */;
  %710 = cast(%var_6178, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %711 = reshape(%710, newshape=[13, 16, 7]) /* ty=Tensor[(13, 16, 7), float64] */;
  %712 = @func_3213(%711) /* ty=(Tensor[(13, 16, 7), float32],) */;
  %713 = %704.0;
  %714 = %709.0;
  %715 = %712.0;
  (%713, %714, 5.7811f /* ty=float32 */, %var_6155, %715, %var_6178)
}

def @func_12027() -> Tensor[(2, 6, 9), bool] {
  %716 = @func_10194() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %716.0
}

def @func_7607() -> (Tensor[(12, 6, 4), float32], Tensor[(2, 6, 9), bool]) {
  %717 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
  %718 = @func_6512() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %719 = %717.1;
  %720 = %718.0;
  (%719, %720)
}

def @func_9004() -> (Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32]) {
  %721 = @func_6045() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) */;
  %722 = @func_8476() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %723 = @func_6376() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) */;
  %724 = %721.2;
  %725 = %722.0;
  %726 = %723.1;
  (%724, %725, %726)
}

def @func_9607() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(1575), bool], Tensor[(15, 5, 16), int8]) {
  %727 = @func_9324() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %728 = @func_6784() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %729 = @func_5117() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) */;
  %730 = %729.2;
  %731 = cast(%730, dtype="int8") /* ty=Tensor[(600, 2), int8] */;
  %732 = reshape(%731, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %733 = @func_5947(%732) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int64], Tensor[(1200), int8], Tensor[(1575), int32]) */;
  %734 = %733.3;
  %735 = cast(meta[relay.Constant][55] /* ty=Tensor[(1575), int32] */, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %736 = shape_of(%734, dtype="int32") /* ty=Tensor[(1), int32] */;
  %737 = cast(%734, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?), bool] */;
  %739 = @func_5117() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) */;
  %740 = %727.0;
  %741 = %728.0;
  %742 = less_equal(%737, %738) /* ty=Tensor[(1575), bool] */;
  %743 = %739.1;
  (%740, %741, %730, %742, %743)
}

def @func_11150() -> (Tensor[(2, 6, 9), bool],) {
  %744 = @func_6803() /* ty=Tensor[(2, 6, 9), bool] */;
  (%744,)
}

def @func_11395(%var_11379: Tensor[(11, 14), float64], %var_11385: Tensor[(600, 2), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(11, 14), float64], Tensor[(288), float32], Tensor[(600, 2), bool]) {
  %745 = @func_6045() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) */;
  %746 = @func_9119() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %747 = cast(%var_11379, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
  %748 = cast(meta[relay.Constant][56] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %749 = reshape(%747, newshape=[154]) /* ty=Tensor[(154), float64] */;
  %750 = reshape(%748, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %751 = @func_6442(%749, %750) /* ty=(Tensor[(600, 2), float32], Tensor[(12, 7, 13), float32], Tensor[(154), float64], Tensor[(288), float32], Tensor[(616), float64]) */;
  %752 = %751.0;
  %753 = cast(%var_11385, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
  %754 = shape_of(%752, dtype="int32") /* ty=Tensor[(2), int32] */;
  %755 = cast(%752, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %757 = %745.1;
  %758 = %746.0;
  %759 = logical_and(%755, %756) /* ty=Tensor[(600, 2), bool] */;
  (%757, %758, %var_11379, meta[relay.Constant][56] /* ty=Tensor[(288), float32] */, %759)
}

def @func_8147(%var_8125: Tensor[(392), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(392), float64]) {
  %760 = @func_7253() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %761 = cast(%var_8125, dtype="float64") /* ty=Tensor[(392), float64] */;
  %762 = reshape(%761, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), float64] */;
  %763 = @func_2664(%762) /* ty=(Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) */;
  %764 = %760.0;
  %765 = %763.0;
  (%764, %765, %var_8125)
}

def @func_10270() -> (Tensor[(4, 15, 14), float32],) {
  %766 = cast(meta[relay.Constant][57] /* ty=Tensor[(4, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %767 = log(%766) /* ty=Tensor[(4, 15, 14), float32] */;
  (%767,)
}

def @func_4958(%var_4932: Tensor[(455), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 10, 12), bool], Tensor[(455), int8], Tensor[(288), float32]) {
  %768 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %769 = cast(%var_4932, dtype="int8") /* ty=Tensor[(455), int8] */;
  %770 = cast(meta[relay.Constant][58] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %771 = reshape(%769, newshape=[13, 5, 7]) /* ty=Tensor[(13, 5, 7), int8] */;
  %772 = reshape(%770, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %773 = @func_4648(%771, %772) /* ty=(Tensor[(13, 5, 7), int8], Tensor[(2, 10, 12), bool], Tensor[(240, 1), float64], Tensor[(288), float32]) */;
  %774 = %768.0;
  %775 = %773.1;
  (%774, %775, %var_4932, meta[relay.Constant][58] /* ty=Tensor[(288), float32] */)
}

def @func_8945() -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(12, 6, 4), float32], Tensor[(15, 9, 4), int64], Tensor[(2, 6, 9), bool]) {
  %776 = @func_7491() /* ty=(Tensor[(600, 2), int8],) */;
  %777 = @func_6993() /* ty=Tensor[(12, 6, 4), float32] */;
  %778 = cast(%777, dtype="float64") /* ty=Tensor[(12, 6, 4), float64] */;
  %779 = cos(%778) /* ty=Tensor[(12, 6, 4), float64] */;
  %780 = cast(%779, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  %781 = cast(%777, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  %782 = reshape(%781, newshape=[288, 1]) /* ty=Tensor[(288, 1), float32] */;
  %783 = @func_692(%782) /* ty=(Tensor[(15, 9, 4), bool], Tensor[(12, 6, 4), float32], Tensor[(288, 1), float32]) */;
  %784 = %783.0;
  %785 = cast(meta[relay.Constant][59] /* ty=Tensor[(15, 9, 4), bool] */, dtype="int64") /* ty=Tensor[(15, 9, 4), int64] */;
  %786 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%784, dtype="int64") /* ty=Tensor[(15, 9, 4), int64] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %789 = @func_7253() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %790 = @func_6922() /* ty=Tensor[(2, 6, 9), bool] */;
  %791 = %776.0;
  %792 = sigmoid(%780) /* ty=Tensor[(12, 6, 4), float32] */;
  %793 = minimum(%787, %788) /* ty=Tensor[(15, 9, 4), int64] */;
  %794 = %789.1;
  (%790, %791, %792, %793, %794)
}

def @func_11867() -> (Tensor[(2, 6, 9), bool],) {
  %795 = @func_9119() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %796 = %795.0;
  (%796,)
}

def @func_1639(%var_1596: Tensor[(8, 7, 9), int8]) -> (Tensor[(8, 7, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(288), float32], Tensor[(8, 7, 9), float32]) {
  %797 = cast(meta[relay.Constant][60] /* ty=Tensor[(8, 7, 9), int8] */, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %798 = shape_of(%var_1596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%var_1596, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %801 = cast(meta[relay.Constant][61] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %802 = reshape(%801, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %803 = cast(meta[relay.Constant][60] /* ty=Tensor[(8, 7, 9), int8] */, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
  %804 = log2(%803) /* ty=Tensor[(8, 7, 9), float64] */;
  %805 = cast(%804, dtype="float32") /* ty=Tensor[(8, 7, 9), float32] */;
  %806 = not_equal(%799, %800) /* ty=Tensor[(8, 7, 9), bool] */;
  %807 = @func_130(%802) /* ty=Tensor[(12, 6, 4), float32] */;
  %808 = erf(%805) /* ty=Tensor[(8, 7, 9), float32] */;
  (%806, %807, meta[relay.Constant][61] /* ty=Tensor[(288), float32] */, %808)
}

def @func_11787() -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8]) {
  %809 = @func_8945() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(12, 6, 4), float32], Tensor[(15, 9, 4), int64], Tensor[(2, 6, 9), bool]) */;
  %810 = @func_7776() /* ty=Tensor[(2, 6, 9), bool] */;
  %811 = %809.1;
  (%810, %811)
}

def @func_5085() -> Tensor[(2, 6, 9), bool] {
  @func_5060() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_9119() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %812 = @func_8945() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(12, 6, 4), float32], Tensor[(15, 9, 4), int64], Tensor[(2, 6, 9), bool]) */;
  %813 = @func_9004() /* ty=(Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32]) */;
  %814 = %812.0;
  %815 = %813.1;
  (%814, %815)
}

def @func_7108() -> Tensor[(2, 6, 9), bool] {
  @func_4898() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_6878(%var_6875: Tensor[(7, 56), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(7, 56), float64]) {
  %816 = @func_6479() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %817 = cast(%var_6875, dtype="float64") /* ty=Tensor[(7, 56), float64] */;
  %818 = reshape(%817, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), float64] */;
  %819 = @func_2664(%818) /* ty=(Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) */;
  %820 = %816.0;
  %821 = %819.1;
  (%820, %821, %var_6875)
}

def @func_7491() -> (Tensor[(600, 2), int8],) {
  %822 = @func_5356() /* ty=(Tensor[(600, 2), int8],) */;
  %823 = %822.0;
  (%823,)
}

def @func_10194() -> (Tensor[(2, 6, 9), bool],) {
  %824 = @func_7776() /* ty=Tensor[(2, 6, 9), bool] */;
  (%824,)
}

def @func_4810() -> (Tensor[(2, 6, 9), bool],) {
  %825 = @func_4611() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %826 = %825.0;
  (%826,)
}

def @func_10360() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %827 = @func_9324() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %828 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
  %829 = @func_6922() /* ty=Tensor[(2, 6, 9), bool] */;
  %830 = %827.1;
  (%828, %829, %830)
}

def @func_7689() -> Tensor[(2, 6, 9), bool] {
  @func_6654() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_1496(%var_1489: int64, %var_1490: Tensor[(9, 1, 10), int64]) -> (Tensor[(9, 1, 10), int64],) {
  %831 = cast(%var_1489, dtype="int64") /* ty=int64 */;
  %832 = cast(%var_1490, dtype="int64") /* ty=Tensor[(9, 1, 10), int64] */;
  %833 = bitwise_or(%831, %832) /* ty=Tensor[(9, 1, 10), int64] */;
  (%833,)
}

def @func_10863(%var_10836: Tensor[(800), float64], %var_10837: Tensor[(1200), int8]) -> (Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1092), bool], Tensor[(1575, 1), int32]) {
  %834 = @func_8963() /* ty=Tensor[(1092), float32] */;
  %835 = cast(meta[relay.Constant][62] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %836 = cast(%var_10836, dtype="float64") /* ty=Tensor[(800), float64] */;
  %837 = cast(%var_10837, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %838 = reshape(%835, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %839 = reshape(%836, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %840 = reshape(%837, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %841 = @func_7441(%838, %839, %840) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32], float32, Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8]) */;
  %842 = %841.3;
  %843 = cast(%834, dtype="bool") /* ty=Tensor[(1092), bool] */;
  %844 = cast(%842, dtype="bool") /* ty=bool */;
  %845 = @func_9004() /* ty=(Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32]) */;
  %846 = logical_or(%843, %844) /* ty=Tensor[(1092), bool] */;
  %847 = %845.2;
  (meta[relay.Constant][62] /* ty=Tensor[(288), uint32] */, %var_10836, %var_10837, %846, %847)
}

def @func_2479(%var_2470: Tensor[(16, 5, 10), float64]) -> (Tensor[(16, 5, 10), float64],) {
  %848 = cast(%var_2470, dtype="float64") /* ty=Tensor[(16, 5, 10), float64] */;
  %849 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(16, 5, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(meta[relay.Constant][63] /* ty=Tensor[(16, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 10), float64] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %852 = power(%850, %851) /* ty=Tensor[(16, 5, 10), float64] */;
  (%852,)
}

def @func_8300(%var_8188: Tensor[(2, 6, 9), bool], %var_8287: Tensor[(13, 35), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(288, 1), float32], Tensor[(2, 10, 12), int64], Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(16, 5, 10), float64], Tensor[(1, 800), float64], Tensor[(288), float32], Tensor[(13, 35), int8], Tensor[(2, 6, 9), bool], Tensor[(1352), float64], Tensor[(2, 6, 9), bool]) {
  %853 = @func_6803() /* ty=Tensor[(2, 6, 9), bool] */;
  %854 = cast(%var_8188, dtype="bool") /* ty=Tensor[(2, 6, 9), bool] */;
  %855 = shape_of(%853, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%853, dtype="bool") /* ty=Tensor[(2, 6, 9), bool] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %858 = cast(meta[relay.Constant][65] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %859 = cast(meta[relay.Constant][64] /* ty=Tensor[(288, 1), float32] */, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %860 = reshape(%858, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float64] */;
  %861 = reshape(%859, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %862 = @func_1277(%860, %861) /* ty=(Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(12, 6, 4), float32], Tensor[(288), float32]) */;
  %863 = %862.1;
  %864 = cast(meta[relay.Constant][65] /* ty=Tensor[(240), float64] */, dtype="int64") /* ty=Tensor[(240), int64] */;
  %865 = shape_of(%863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%863, dtype="int64") /* ty=Tensor[(2, 10, 12), int64] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %868 = cast(meta[relay.Constant][66] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %869 = reshape(%868, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %870 = @func_5947(%869) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int64], Tensor[(1200), int8], Tensor[(1575), int32]) */;
  %871 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 800), float64] */, dtype="float64") /* ty=Tensor[(1, 800), float64] */;
  %872 = reshape(%871, newshape=[16, 5, 10]) /* ty=Tensor[(16, 5, 10), float64] */;
  %873 = @func_2479(%872) /* ty=(Tensor[(16, 5, 10), float64],) */;
  %874 = cast(%var_8287, dtype="int8") /* ty=Tensor[(13, 35), int8] */;
  %875 = cast(meta[relay.Constant][64] /* ty=Tensor[(288, 1), float32] */, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %876 = reshape(%874, newshape=[13, 5, 7]) /* ty=Tensor[(13, 5, 7), int8] */;
  %877 = reshape(%875, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %878 = @func_4648(%876, %877) /* ty=(Tensor[(13, 5, 7), int8], Tensor[(2, 10, 12), bool], Tensor[(240, 1), float64], Tensor[(288), float32]) */;
  %879 = cast(meta[relay.Constant][68] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %880 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 800), float64] */, dtype="float64") /* ty=Tensor[(1, 800), float64] */;
  %881 = cast(meta[relay.Constant][66] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %882 = reshape(%879, newshape=[1352]) /* ty=Tensor[(1352), float64] */;
  %883 = reshape(%880, newshape=[1, 800]) /* ty=Tensor[(1, 800), float64] */;
  %884 = reshape(%881, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %885 = @func_7904(%882, %883, %884) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(1352), float64], Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(1, 800), float64], Tensor[(1200), int8], Tensor[(15, 5, 16), int8], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32]) */;
  %886 = @func_6645() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %887 = logical_or(%856, %857) /* ty=Tensor[(2, 6, 9), bool] */;
  %888 = @func_6803() /* ty=Tensor[(2, 6, 9), bool] */;
  %889 = subtract(%866, %867) /* ty=Tensor[(2, 10, 12), int64] */;
  %890 = %870.0;
  %891 = %873.0;
  %892 = %878.3;
  %893 = %885.2;
  %894 = %886.0;
  (%887, %888, meta[relay.Constant][64] /* ty=Tensor[(288, 1), float32] */, %889, %890, meta[relay.Constant][66] /* ty=Tensor[(1200), int8] */, %891, meta[relay.Constant][67] /* ty=Tensor[(1, 800), float64] */, %892, %var_8287, %893, meta[relay.Constant][68] /* ty=Tensor[(1352), float64] */, %894)
}

def @func_6993() -> Tensor[(12, 6, 4), float32] {
  %895 = @func_6376() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) */;
  %895.2
}

def @func_11940() -> (Tensor[(2, 6, 9), bool], Tensor[(288), float32], Tensor[(1575), int32], Tensor[(1, 504), int8], Tensor[(504), int8]) {
  %896 = cast(meta[relay.Constant][69] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %897 = cast(meta[relay.Constant][69] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %898 = reshape(%896, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %899 = reshape(%897, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %900 = @func_2436(%898, %899) /* ty=(Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) */;
  %901 = @func_6654() /* ty=Tensor[(2, 6, 9), bool] */;
  %902 = cast(%901, dtype="bool") /* ty=Tensor[(2, 6, 9), bool] */;
  %903 = cast(meta[relay.Constant][70] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %904 = reshape(%902, newshape=[2, 6, 9]) /* ty=Tensor[(2, 6, 9), bool] */;
  %905 = reshape(%903, newshape=[1, 504]) /* ty=Tensor[(1, 504), int8] */;
  %906 = @func_5409(%904, %905) /* ty=(Tensor[(2, 6, 9), float32], Tensor[(8, 7, 9), float32], Tensor[(1, 504), int8]) */;
  %907 = %900.6;
  %908 = %906.2;
  (%901, %907, meta[relay.Constant][69] /* ty=Tensor[(1575), int32] */, %908, meta[relay.Constant][70] /* ty=Tensor[(504), int8] */)
}

def @func_130(%var_119: Tensor[(12, 6, 4), float32]) -> Tensor[(12, 6, 4), float32] {
  %909 = cast(%var_119, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  cosh(%909) /* ty=Tensor[(12, 6, 4), float32] */
}

def @func_6922() -> Tensor[(2, 6, 9), bool] {
  %910 = @func_6580() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %910.0
}

def @func_4648(%var_4632: Tensor[(13, 5, 7), int8], %var_4644: Tensor[(288), float32]) -> (Tensor[(13, 5, 7), int8], Tensor[(2, 10, 12), bool], Tensor[(240, 1), float64], Tensor[(288), float32]) {
  %911 = cast(%var_4632, dtype="int8") /* ty=Tensor[(13, 5, 7), int8] */;
  %912 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(13, 5, 7), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %913 = cast(meta[relay.Constant][71] /* ty=Tensor[(13, 5, 7), int8] */, dtype="int8") /* ty=Tensor[(13, 5, 7), int8] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %915 = cast(meta[relay.Constant][72] /* ty=Tensor[(240, 1), float64] */, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %916 = cast(%var_4644, dtype="float32") /* ty=Tensor[(288), float32] */;
  %917 = reshape(%915, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float64] */;
  %918 = reshape(%916, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %919 = @func_1277(%917, %918) /* ty=(Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(12, 6, 4), float32], Tensor[(288), float32]) */;
  %920 = bitwise_xor(%913, %914) /* ty=Tensor[(13, 5, 7), int8] */;
  %921 = %919.0;
  (%920, %921, meta[relay.Constant][72] /* ty=Tensor[(240, 1), float64] */, %var_4644)
}

def @func_9438(%var_9414: Tensor[(2, 1, 15), float64]) -> (Tensor[(2, ?, 15), int8],) {
  %922 = cast(%var_9414, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
  %923 = sinh(%922) /* ty=Tensor[(2, 1, 15), float64] */;
  %924 = cast(%var_9414, dtype="int8") /* ty=Tensor[(2, 1, 15), int8] */;
  %925 = shape_of(%923, dtype="int32") /* ty=Tensor[(3), int32] */;
  %926 = cast(%923, dtype="int8") /* ty=Tensor[(2, 1, 15), int8] */;
  %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %928 = bitwise_xor(%926, %927) /* ty=Tensor[(2, ?, 15), int8] */;
  (%928,)
}

def @func_10707(%var_10686: Tensor[(5, 8, 16), uint32], %var_10687: Tensor[(5, 8, 16), uint32]) -> (Tensor[(5, 8, 16), bool], Tensor[(12, 6, 4), float32], Tensor[(288), float32], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32]) {
  %929 = cast(%var_10687, dtype="bool") /* ty=Tensor[(5, 8, 16), bool] */;
  %930 = shape_of(%var_10686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%var_10686, dtype="bool") /* ty=Tensor[(5, 8, 16), bool] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %933 = cast(meta[relay.Constant][73] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %934 = reshape(%933, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %935 = cast(meta[relay.Constant][74] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %936 = cast(meta[relay.Constant][74] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %937 = reshape(%935, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint32] */;
  %938 = reshape(%936, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint32] */;
  %939 = less_equal(%931, %932) /* ty=Tensor[(5, 8, 16), bool] */;
  %940 = @func_130(%934) /* ty=Tensor[(12, 6, 4), float32] */;
  %941 = @func_2975(%937, %938) /* ty=Tensor[(6, 9, 7), uint8] */;
  (%939, %940, meta[relay.Constant][73] /* ty=Tensor[(288), float32] */, %941, meta[relay.Constant][74] /* ty=Tensor[(378), uint32] */)
}

def @func_12300(%var_12283: float32, %var_12295: Tensor[(154, 1), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(11, 5, 8), float32], float32, Tensor[(12, 7, 13), float32], Tensor[(154, 1), float64], Tensor[(288), float32], Tensor[(616), float64]) {
  %942 = @func_10360() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %943 = cast(meta[relay.Constant][75] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %944 = reshape(%943, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %945 = cast(%var_12283, dtype="float32") /* ty=float32 */;
  %946 = reshape(%945, newshape=[]) /* ty=float32 */;
  %947 = @func_10645(%946) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32]) */;
  %948 = cast(%var_12295, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
  %949 = cast(meta[relay.Constant][76] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %950 = cast(meta[relay.Constant][77] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %951 = reshape(%948, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
  %952 = reshape(%949, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %953 = reshape(%950, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %954 = @func_1844(%951, %952, %953) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(130), int16], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(4, 14, 11), float64], Tensor[(12, 7, 13), float32]) */;
  %955 = %942.0;
  %956 = @func_109(%944) /* ty=Tensor[(12, 7, 13), float32] */;
  %957 = %947.1;
  %958 = %954.3;
  (%955, %956, meta[relay.Constant][75] /* ty=Tensor[(1092), float32] */, %957, %var_12283, %958, %var_12295, meta[relay.Constant][76] /* ty=Tensor[(288), float32] */, meta[relay.Constant][77] /* ty=Tensor[(616), float64] */)
}

def @func_11357(%var_11293: Tensor[(12, 16, 15), float64], %var_11294: Tensor[(12, 16, 15), float64], %var_11304: Tensor[(288), float32]) -> (Tensor[(12, 16, 15), float64], Tensor[(1575, 1), int32], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float64]) {
  %959 = cast(%var_11294, dtype="float64") /* ty=Tensor[(12, 16, 15), float64] */;
  %960 = shape_of(%var_11293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %961 = cast(%var_11293, dtype="float64") /* ty=Tensor[(12, 16, 15), float64] */;
  %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %963 = @func_6376() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) */;
  %964 = @func_6376() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) */;
  %965 = cast(%var_11304, dtype="float32") /* ty=Tensor[(288), float32] */;
  %966 = reshape(%965, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %967 = @func_130(%966) /* ty=Tensor[(12, 6, 4), float32] */;
  %968 = cast(%var_11304, dtype="float64") /* ty=Tensor[(288), float64] */;
  %969 = shape_of(%967, dtype="int32") /* ty=Tensor[(3), int32] */;
  %970 = cast(%967, dtype="float64") /* ty=Tensor[(12, 6, 4), float64] */;
  %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %972 = floor_mod(%961, %962) /* ty=Tensor[(12, 16, 15), float64] */;
  %973 = %963.1;
  %974 = %964.0;
  %975 = subtract(%970, %971) /* ty=Tensor[(12, 6, 4), float64] */;
  (%972, %973, %974, %975)
}

def @func_11719() -> (Tensor[(2, 6, 9), bool],) {
  %976 = @func_8476() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %977 = %976.0;
  (%977,)
}

def @func_7904(%var_7853: Tensor[(1352), float64], %var_7862: Tensor[(1, 800), float64], %var_7863: Tensor[(1200), int8]) -> (Tensor[(8, 13, 13), float64], Tensor[(1352), float64], Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(1, 800), float64], Tensor[(1200), int8], Tensor[(15, 5, 16), int8], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32]) {
  %978 = cast(%var_7853, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %979 = cast(%var_7853, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %980 = reshape(%978, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %981 = reshape(%979, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %982 = @func_2816(%980, %981) /* ty=(Tensor[(8, 13, 13), float64],) */;
  %983 = @func_6993() /* ty=Tensor[(12, 6, 4), float32] */;
  %984 = cast(%983, dtype="uint32") /* ty=Tensor[(12, 6, 4), uint32] */;
  %985 = cast(%var_7862, dtype="float64") /* ty=Tensor[(1, 800), float64] */;
  %986 = cast(%var_7863, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %987 = reshape(%984, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), uint32] */;
  %988 = reshape(%985, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %989 = reshape(%986, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %990 = @func_3268(%987, %988, %989) /* ty=(Tensor[(16, 6, 3), uint32], Tensor[(16, 5, 10), float64], Tensor[(800), float64], float32, Tensor[(392, 1), float64], Tensor[(15, 5, 16), int8], Tensor[(1200), int8]) */;
  %991 = cast(%var_7863, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %992 = cast(%var_7863, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %993 = reshape(%991, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %994 = reshape(%992, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %995 = @func_1027(%993, %994) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
  %996 = cast(%983, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  %997 = log2(%996) /* ty=Tensor[(12, 6, 4), float32] */;
  %998 = cast(%983, dtype="int32") /* ty=Tensor[(12, 6, 4), int32] */;
  %999 = shape_of(%997, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1000 = cast(%997, dtype="int32") /* ty=Tensor[(12, 6, 4), int32] */;
  %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1002 = logical_xor(%1000, %1001) /* ty=Tensor[(12, 6, 4), int32] */;
  %1003 = cast(%1002, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  %1004 = %982.0;
  %1005 = @func_5328() /* ty=Tensor[(2, 6, 9), bool] */;
  %1006 = %990.2;
  %1007 = %995.0;
  %1008 = @func_5060() /* ty=Tensor[(2, 6, 9), bool] */;
  %1009 = asinh(%1003) /* ty=Tensor[(12, 6, 4), float32] */;
  (%1004, %var_7853, %1005, %1006, %var_7862, %var_7863, %1007, %1008, %1009)
}

def @func_11233() -> (Tensor[(2, 6, 9), bool], Tensor[(1575), float32], Tensor[(1575), float64]) {
  %1010 = @func_8374() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %1011 = @func_9607() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(1575), bool], Tensor[(15, 5, 16), int8]) */;
  %1012 = %1011.3;
  %1013 = cast(%1012, dtype="float32") /* ty=Tensor[(1575), float32] */;
  %1014 = cast(%1012, dtype="float64") /* ty=Tensor[(1575), float64] */;
  %1015 = %1010.0;
  %1016 = sin(%1013) /* ty=Tensor[(1575), float32] */;
  %1017 = log2(%1014) /* ty=Tensor[(1575), float64] */;
  (%1015, %1016, %1017)
}

def @func_5143(%var_5136: Tensor[(160), uint8]) -> (Tensor[(2, 6, 9), bool], Tensor[(10, 4, 4), float32], Tensor[(160), uint8]) {
  %1018 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %1019 = cast(%var_5136, dtype="uint8") /* ty=Tensor[(160), uint8] */;
  %1020 = cast(%var_5136, dtype="uint8") /* ty=Tensor[(160), uint8] */;
  %1021 = reshape(%1019, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
  %1022 = reshape(%1020, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
  %1023 = @func_1996(%1021, %1022) /* ty=(Tensor[(10, 4, 4), bool], Tensor[(10, 4, 4), float64], Tensor[(10, 4, 4), float32]) */;
  %1024 = %1018.0;
  %1025 = %1023.2;
  (%1024, %1025, %var_5136)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6046() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) {
  %7 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) {
    %0 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
    %2 = reshape(%1, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), float64] */;
    %3 = @func_2664(%2) /* ty=(Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) */;
    %4 = %0.0;
    %5 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
    %6 = %3.1;
    (%4, %5, %6, meta[relay.Constant][0] /* ty=Tensor[(392), float64] */)
  };
  %7() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) */
}

def @func_11362(%var_11359: Tensor[(12, 16, 15), float64], %var_11360: Tensor[(12, 16, 15), float64], %var_11361: Tensor[(288), float32]) -> (Tensor[(12, 16, 15), float64], Tensor[(1575, 1), int32], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float64]) {
  @func_11357(%var_11359, %var_11360, %var_11361) /* ty=(Tensor[(12, 16, 15), float64], Tensor[(1575, 1), int32], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float64]) */
}

def @func_1999(%var_1997: Tensor[(10, 4, 4), uint8], %var_1998: Tensor[(10, 4, 4), uint8]) -> (Tensor[(10, 4, 4), bool], Tensor[(10, 4, 4), float64], Tensor[(10, 4, 4), float32]) {
  %22 = fn (%var_1976: Tensor[(10, 4, 4), uint8], %var_1977: Tensor[(10, 4, 4), uint8]) -> (Tensor[(10, 4, 4), bool], Tensor[(10, 4, 4), float64], Tensor[(10, 4, 4), float32]) {
    %8 = cast(%var_1977, dtype="uint8") /* ty=Tensor[(10, 4, 4), uint8] */;
    %9 = shape_of(%var_1976, dtype="int32") /* ty=Tensor[(3), int32] */;
    %10 = cast(%var_1976, dtype="uint8") /* ty=Tensor[(10, 4, 4), uint8] */;
    %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %12 = bitwise_xor(%10, %11) /* ty=Tensor[(10, 4, 4), uint8] */;
    %13 = cast(%var_1977, dtype="bool") /* ty=Tensor[(10, 4, 4), bool] */;
    %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
    %15 = cast(%12, dtype="bool") /* ty=Tensor[(10, 4, 4), bool] */;
    %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %17 = cast(%var_1976, dtype="float64") /* ty=Tensor[(10, 4, 4), float64] */;
    %18 = cast(%var_1977, dtype="float32") /* ty=Tensor[(10, 4, 4), float32] */;
    %19 = not_equal(%15, %16) /* ty=Tensor[(10, 4, 4), bool] */;
    %20 = asinh(%17) /* ty=Tensor[(10, 4, 4), float64] */;
    %21 = acosh(%18) /* ty=Tensor[(10, 4, 4), float32] */;
    (%19, %20, %21)
  };
  %22(%var_1997, %var_1998) /* ty=(Tensor[(10, 4, 4), bool], Tensor[(10, 4, 4), float64], Tensor[(10, 4, 4), float32]) */
}

def @func_8094() -> (Tensor[(12, 6, 4), float32], Tensor[(2, 6, 9), bool], Tensor[(1575, 9), int64]) {
  %31 = fn () -> (Tensor[(12, 6, 4), float32], Tensor[(2, 6, 9), bool], Tensor[(1575, 9), int64]) {
    %23 = @func_6512() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %24 = @func_6376() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) */;
    %25 = %24.1;
    %26 = cast(%25, dtype="int64") /* ty=Tensor[(1575, 1), int64] */;
    %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(1575, 9), int32] */, dtype="int64") /* ty=Tensor[(1575, 9), int64] */;
    %28 = @func_6993() /* ty=Tensor[(12, 6, 4), float32] */;
    %29 = %23.0;
    %30 = left_shift(%26, %27) /* ty=Tensor[(1575, 9), int64] */;
    (%28, %29, %30)
  };
  %31() /* ty=(Tensor[(12, 6, 4), float32], Tensor[(2, 6, 9), bool], Tensor[(1575, 9), int64]) */
}

def @func_5745() -> (Tensor[(2, 6, 9), bool],) {
  %32 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %33 = %32.0;
  (%33,)
}

def @func_8946() -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(12, 6, 4), float32], Tensor[(15, 9, 4), int64], Tensor[(2, 6, 9), bool]) {
  %53 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(12, 6, 4), float32], Tensor[(15, 9, 4), int64], Tensor[(2, 6, 9), bool]) {
    %34 = @func_7491() /* ty=(Tensor[(600, 2), int8],) */;
    %35 = @func_6993() /* ty=Tensor[(12, 6, 4), float32] */;
    %36 = cast(%35, dtype="float64") /* ty=Tensor[(12, 6, 4), float64] */;
    %37 = cos(%36) /* ty=Tensor[(12, 6, 4), float64] */;
    %38 = cast(%37, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
    %39 = cast(%35, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
    %40 = reshape(%39, newshape=[288, 1]) /* ty=Tensor[(288, 1), float32] */;
    %41 = @func_692(%40) /* ty=(Tensor[(15, 9, 4), bool], Tensor[(12, 6, 4), float32], Tensor[(288, 1), float32]) */;
    %42 = %41.0;
    %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 9, 4), bool] */, dtype="int64") /* ty=Tensor[(15, 9, 4), int64] */;
    %44 = shape_of(%42, dtype="int32") /* ty=Tensor[(3), int32] */;
    %45 = cast(%42, dtype="int64") /* ty=Tensor[(15, 9, 4), int64] */;
    %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %47 = @func_7253() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
    %48 = @func_6922() /* ty=Tensor[(2, 6, 9), bool] */;
    %49 = %34.0;
    %50 = sigmoid(%38) /* ty=Tensor[(12, 6, 4), float32] */;
    %51 = minimum(%45, %46) /* ty=Tensor[(15, 9, 4), int64] */;
    %52 = %47.1;
    (%48, %49, %50, %51, %52)
  };
  %53() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(12, 6, 4), float32], Tensor[(15, 9, 4), int64], Tensor[(2, 6, 9), bool]) */
}

def @func_5876() -> (Tensor[(2, 6, 9), bool],) {
  %54 = @func_4611() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %55 = %54.0;
  (%55,)
}

def @func_11152() -> (Tensor[(2, 6, 9), bool],) {
  @func_11150() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_5950(%var_5948: Tensor[(1200), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int64], Tensor[(1200), int8], Tensor[(1575), int32]) {
  @func_5947(%var_5948) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int64], Tensor[(1200), int8], Tensor[(1575), int32]) */
}

def @func_10924() -> (Tensor[(2, 6, 9), bool], Tensor[(1575, 9), int64], Tensor[(392), float64], Tensor[(392), float64]) {
  @func_10922() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 9), int64], Tensor[(392), float64], Tensor[(392), float64]) */
}

def @func_1639(%var_1596: Tensor[(8, 7, 9), int8]) -> (Tensor[(8, 7, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(288), float32], Tensor[(8, 7, 9), float32]) {
  %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 7, 9), int8] */, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %57 = shape_of(%var_1596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %58 = cast(%var_1596, dtype="bool") /* ty=Tensor[(8, 7, 9), bool] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %60 = cast(meta[relay.Constant][4] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %61 = reshape(%60, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %62 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 7, 9), int8] */, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
  %63 = log2(%62) /* ty=Tensor[(8, 7, 9), float64] */;
  %64 = cast(%63, dtype="float32") /* ty=Tensor[(8, 7, 9), float32] */;
  %65 = not_equal(%58, %59) /* ty=Tensor[(8, 7, 9), bool] */;
  %66 = @func_130(%61) /* ty=Tensor[(12, 6, 4), float32] */;
  %67 = erf(%64) /* ty=Tensor[(8, 7, 9), float32] */;
  (%65, %66, meta[relay.Constant][4] /* ty=Tensor[(288), float32] */, %67)
}

def @func_11720() -> (Tensor[(2, 6, 9), bool],) {
  %70 = fn () -> (Tensor[(2, 6, 9), bool],) {
    %68 = @func_8476() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %69 = %68.0;
    (%69,)
  };
  %70() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_9326() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  @func_9324() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */
}

def @func_6514() -> (Tensor[(2, 6, 9), bool],) {
  @func_6512() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_130(%var_119: Tensor[(12, 6, 4), float32]) -> Tensor[(12, 6, 4), float32] {
  %71 = cast(%var_119, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  cosh(%71) /* ty=Tensor[(12, 6, 4), float32] */
}

def @func_10585(%var_10583: Tensor[(160), uint8]) -> (Tensor[(2, 6, 9), bool], Tensor[(160), uint8], Tensor[(160), uint8], Tensor[(1575, ?), float64], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  @func_10582(%var_10583) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(160), uint8], Tensor[(160), uint8], Tensor[(1575, ?), float64], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */
}

def @func_11547() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  @func_11545() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */
}

def @func_5085() -> Tensor[(2, 6, 9), bool] {
  @func_5060() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_4810() -> (Tensor[(2, 6, 9), bool],) {
  %72 = @func_4611() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %73 = %72.0;
  (%73,)
}

def @func_6121() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1092), float32]) {
  %80 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1092), float32]) {
    %74 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
    %76 = reshape(%75, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
    %77 = @func_5797(%76) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 7, 13), float32], Tensor[(1092), float32]) */;
    %78 = %74.0;
    %79 = %77.0;
    (%78, %79, meta[relay.Constant][5] /* ty=Tensor[(1092), float32] */)
  };
  %80() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1092), float32]) */
}

def @func_6924() -> Tensor[(2, 6, 9), bool] {
  @func_6922() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_8477() -> (Tensor[(2, 6, 9), bool],) {
  %82 = fn () -> (Tensor[(2, 6, 9), bool],) {
    %81 = @func_7776() /* ty=Tensor[(2, 6, 9), bool] */;
    (%81,)
  };
  %82() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_9975(%var_9973: Tensor[(1352), float64], %var_9974: Tensor[(1456), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32], Tensor[(1200), int8], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1352), float32], Tensor[(2, 6, 9), bool], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(2, 6, 9), bool]) {
  @func_9971(%var_9973, %var_9974) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32], Tensor[(1200), int8], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1352), float32], Tensor[(2, 6, 9), bool], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(2, 6, 9), bool]) */
}

def @func_7565(%var_7563: Tensor[(1575), int32]) -> (Tensor[(2, 6, 9), bool], Tensor[(160), uint8], Tensor[(1575), bool], Tensor[(1575), float32]) {
  @func_7562(%var_7563) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(160), uint8], Tensor[(1575), bool], Tensor[(1575), float32]) */
}

def @func_4900() -> Tensor[(2, 6, 9), bool] {
  @func_4898() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_9352() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %86 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
    %83 = @func_8547() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
    %84 = %83.0;
    %85 = @func_6803() /* ty=Tensor[(2, 6, 9), bool] */;
    (%84, %85)
  };
  %86() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */
}

def @func_11357(%var_11293: Tensor[(12, 16, 15), float64], %var_11294: Tensor[(12, 16, 15), float64], %var_11304: Tensor[(288), float32]) -> (Tensor[(12, 16, 15), float64], Tensor[(1575, 1), int32], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float64]) {
  %87 = cast(%var_11294, dtype="float64") /* ty=Tensor[(12, 16, 15), float64] */;
  %88 = shape_of(%var_11293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%var_11293, dtype="float64") /* ty=Tensor[(12, 16, 15), float64] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %91 = @func_6376() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) */;
  %92 = @func_6376() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) */;
  %93 = cast(%var_11304, dtype="float32") /* ty=Tensor[(288), float32] */;
  %94 = reshape(%93, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %95 = @func_130(%94) /* ty=Tensor[(12, 6, 4), float32] */;
  %96 = cast(%var_11304, dtype="float64") /* ty=Tensor[(288), float64] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%95, dtype="float64") /* ty=Tensor[(12, 6, 4), float64] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %100 = floor_mod(%89, %90) /* ty=Tensor[(12, 16, 15), float64] */;
  %101 = %91.1;
  %102 = %92.0;
  %103 = subtract(%98, %99) /* ty=Tensor[(12, 6, 4), float64] */;
  (%100, %101, %102, %103)
}

def @func_1280(%var_1278: Tensor[(2, 10, 12), float64], %var_1279: Tensor[(288), float32]) -> (Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(12, 6, 4), float32], Tensor[(288), float32]) {
  %119 = fn (%var_1229: Tensor[(2, 10, 12), float64], %var_1269: Tensor[(288), float32]) -> (Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(12, 6, 4), float32], Tensor[(288), float32]) {
    %104 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 10, 12), float64] */, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
    %105 = shape_of(%var_1229, dtype="int32") /* ty=Tensor[(3), int32] */;
    %106 = cast(%var_1229, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
    %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %108 = cast(%var_1229, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
    %109 = acos(%108) /* ty=Tensor[(2, 10, 12), float64] */;
    %110 = cast(%var_1229, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
    %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
    %112 = cast(%109, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
    %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %114 = cast(%var_1269, dtype="float32") /* ty=Tensor[(288), float32] */;
    %115 = reshape(%114, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
    %116 = logical_and(%106, %107) /* ty=Tensor[(2, 10, 12), bool] */;
    %117 = floor_mod(%112, %113) /* ty=Tensor[(2, 10, 12), float64] */;
    %118 = @func_130(%115) /* ty=Tensor[(12, 6, 4), float32] */;
    (%116, %117, %118, %var_1269)
  };
  %119(%var_1278, %var_1279) /* ty=(Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(12, 6, 4), float32], Tensor[(288), float32]) */
}

def @func_9530() -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(2, 6, 9), bool], Tensor[(600, 2), float32]) {
  %131 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(2, 6, 9), bool], Tensor[(600, 2), float32]) {
    %120 = @func_6645() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %121 = @func_7491() /* ty=(Tensor[(600, 2), int8],) */;
    %122 = @func_5117() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) */;
    %123 = %122.2;
    %124 = cast(%123, dtype="float32") /* ty=Tensor[(600, 2), float32] */;
    %125 = atan(%124) /* ty=Tensor[(600, 2), float32] */;
    %126 = cast(%125, dtype="float32") /* ty=Tensor[(600, 2), float32] */;
    %127 = %120.0;
    %128 = %121.0;
    %129 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
    %130 = acosh(%126) /* ty=Tensor[(600, 2), float32] */;
    (%127, %128, %129, %130)
  };
  %131() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(2, 6, 9), bool], Tensor[(600, 2), float32]) */
}

def @func_10738() -> (Tensor[(12, 6, 4), uint64],) {
  %132 = @func_7726() /* ty=Tensor[(12, 6, 4), float32] */;
  %133 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 6, 4), float32] */, dtype="uint64") /* ty=Tensor[(12, 6, 4), uint64] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%132, dtype="uint64") /* ty=Tensor[(12, 6, 4), uint64] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %137 = multiply(%135, %136) /* ty=Tensor[(12, 6, 4), uint64] */;
  (%137,)
}

def @func_6646() -> (Tensor[(2, 6, 9), bool],) {
  %140 = fn () -> (Tensor[(2, 6, 9), bool],) {
    %138 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %139 = %138.0;
    (%139,)
  };
  %140() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_695(%var_693: Tensor[(288, 1), float32]) -> (Tensor[(15, 9, 4), bool], Tensor[(12, 6, 4), float32], Tensor[(288, 1), float32]) {
  @func_692(%var_693) /* ty=(Tensor[(15, 9, 4), bool], Tensor[(12, 6, 4), float32], Tensor[(288, 1), float32]) */
}

def @func_5680() -> (Tensor[(2, 6, 9), bool],) {
  %142 = fn () -> (Tensor[(2, 6, 9), bool],) {
    %141 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
    (%141,)
  };
  %142() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_5357() -> (Tensor[(600, 2), int8],) {
  %145 = fn () -> (Tensor[(600, 2), int8],) {
    %143 = @func_5117() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) */;
    %144 = %143.2;
    (%144,)
  };
  %145() /* ty=(Tensor[(600, 2), int8],) */
}

def @func_5330() -> Tensor[(2, 6, 9), bool] {
  @func_5328() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_7445(%var_7442: Tensor[(288), uint32], %var_7443: Tensor[(800), float64], %var_7444: Tensor[(1200), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32], float32, Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8]) {
  %160 = fn (%var_7412: Tensor[(288), uint32], %var_7413: Tensor[(800), float64], %var_7414: Tensor[(1200), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32], float32, Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8]) {
    %146 = @func_7253() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
    %147 = cast(meta[relay.Constant][8] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %148 = reshape(%147, newshape=[378]) /* ty=Tensor[(378), uint32] */;
    %149 = @func_7292(%148) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32]) */;
    %150 = cast(%var_7412, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %151 = cast(%var_7413, dtype="float64") /* ty=Tensor[(800), float64] */;
    %152 = cast(%var_7414, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %153 = reshape(%150, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), uint32] */;
    %154 = reshape(%151, newshape=[800]) /* ty=Tensor[(800), float64] */;
    %155 = reshape(%152, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %156 = @func_3268(%153, %154, %155) /* ty=(Tensor[(16, 6, 3), uint32], Tensor[(16, 5, 10), float64], Tensor[(800), float64], float32, Tensor[(392, 1), float64], Tensor[(15, 5, 16), int8], Tensor[(1200), int8]) */;
    %157 = %146.0;
    %158 = %149.1;
    %159 = %156.3;
    (%157, %158, meta[relay.Constant][8] /* ty=Tensor[(378), uint32] */, %159, %var_7412, %var_7413, %var_7414)
  };
  %160(%var_7442, %var_7443, %var_7444) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32], float32, Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8]) */
}

def @func_8856() -> Tensor[(2, 6, 9), bool] {
  @func_8854() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_9440(%var_9439: Tensor[(2, 1, 15), float64]) -> (Tensor[(2, ?, 15), int8],) {
  %168 = fn (%var_9414: Tensor[(2, 1, 15), float64]) -> (Tensor[(2, ?, 15), int8],) {
    %161 = cast(%var_9414, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
    %162 = sinh(%161) /* ty=Tensor[(2, 1, 15), float64] */;
    %163 = cast(%var_9414, dtype="int8") /* ty=Tensor[(2, 1, 15), int8] */;
    %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(3), int32] */;
    %165 = cast(%162, dtype="int8") /* ty=Tensor[(2, 1, 15), int8] */;
    %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %167 = bitwise_xor(%165, %166) /* ty=Tensor[(2, ?, 15), int8] */;
    (%167,)
  };
  %168(%var_9439) /* ty=(Tensor[(2, ?, 15), int8],) */
}

def @func_9005() -> (Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32]) {
  %175 = fn () -> (Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32]) {
    %169 = @func_6045() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) */;
    %170 = @func_8476() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %171 = @func_6376() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) */;
    %172 = %169.2;
    %173 = %170.0;
    %174 = %171.1;
    (%172, %173, %174)
  };
  %175() /* ty=(Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32]) */
}

def @func_6376() -> (Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) {
  %176 = @func_6120() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1092), float32]) */;
  %177 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
  %178 = cast(meta[relay.Constant][9] /* ty=Tensor[(144, 2), float32] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %179 = reshape(%178, newshape=[288, 1]) /* ty=Tensor[(288, 1), float32] */;
  %180 = @func_692(%179) /* ty=(Tensor[(15, 9, 4), bool], Tensor[(12, 6, 4), float32], Tensor[(288, 1), float32]) */;
  %181 = %176.1;
  %182 = %177.2;
  %183 = %180.1;
  (%181, %182, %183, meta[relay.Constant][9] /* ty=Tensor[(144, 2), float32] */)
}

def @func_7777() -> Tensor[(2, 6, 9), bool] {
  %184 = fn () -> Tensor[(2, 6, 9), bool] {
    @func_4898() /* ty=Tensor[(2, 6, 9), bool] */
  };
  %184() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_10647(%var_10646: float32) -> (Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32]) {
  %191 = fn (%var_10639: float32) -> (Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32]) {
    %185 = cast(%var_10639, dtype="float32") /* ty=float32 */;
    %186 = cast(meta[relay.Constant][10] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
    %187 = reshape(%185, newshape=[]) /* ty=float32 */;
    %188 = reshape(%186, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
    %189 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
    %190 = @func_1549(%187, %188) /* ty=Tensor[(11, 5, 8), float32] */;
    (%189, %190, %var_10639, meta[relay.Constant][10] /* ty=Tensor[(440), float32] */)
  };
  %191(%var_10646) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32]) */
}

def @func_11789() -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8]) {
  @func_11787() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8]) */
}

def @func_2479(%var_2470: Tensor[(16, 5, 10), float64]) -> (Tensor[(16, 5, 10), float64],) {
  %192 = cast(%var_2470, dtype="float64") /* ty=Tensor[(16, 5, 10), float64] */;
  %193 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(16, 5, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 10), float64] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %196 = power(%194, %195) /* ty=Tensor[(16, 5, 10), float64] */;
  (%196,)
}

def @func_11867() -> (Tensor[(2, 6, 9), bool],) {
  %197 = @func_9119() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %198 = %197.0;
  (%198,)
}

def @func_1552(%var_1550: float32, %var_1551: Tensor[(11, 5, 8), float32]) -> Tensor[(11, 5, 8), float32] {
  %201 = fn (%var_1540: float32, %var_1541: Tensor[(11, 5, 8), float32]) -> Tensor[(11, 5, 8), float32] {
    %199 = cast(%var_1540, dtype="float32") /* ty=float32 */;
    %200 = cast(%var_1541, dtype="float32") /* ty=Tensor[(11, 5, 8), float32] */;
    floor_divide(%199, %200) /* ty=Tensor[(11, 5, 8), float32] */
  };
  %201(%var_1550, %var_1551) /* ty=Tensor[(11, 5, 8), float32] */
}

def @func_10922() -> (Tensor[(2, 6, 9), bool], Tensor[(1575, 9), int64], Tensor[(392), float64], Tensor[(392), float64]) {
  %202 = @func_10194() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %203 = cast(meta[relay.Constant][12] /* ty=Tensor[(14175), int32] */, dtype="int32") /* ty=Tensor[(14175), int32] */;
  %204 = reshape(%203, newshape=[1575, 9]) /* ty=Tensor[(1575, 9), int32] */;
  %205 = @func_8776(%204) /* ty=Tensor[(1575, 9), int64] */;
  %206 = cast(meta[relay.Constant][12] /* ty=Tensor[(14175), int32] */, dtype="int64") /* ty=Tensor[(14175), int64] */;
  %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(2), int32] */;
  %208 = cast(%205, dtype="int64") /* ty=Tensor[(1575, 9), int64] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %210 = cast(meta[relay.Constant][13] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
  %211 = reshape(%210, newshape=[392]) /* ty=Tensor[(392), float64] */;
  %212 = @func_8147(%211) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(392), float64]) */;
  %213 = %202.0;
  %214 = add(%208, %209) /* ty=Tensor[(1575, 9), int64] */;
  %215 = %212.2;
  (%213, %214, %215, meta[relay.Constant][13] /* ty=Tensor[(392), float64] */)
}

def @func_1300(%var_1287: Tensor[(13, 2, 5), int16], %var_1296: Tensor[(8, 36), float32]) -> (Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) {
  %216 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 2, 5), int16] */, dtype="int16") /* ty=Tensor[(13, 2, 5), int16] */;
  %217 = shape_of(%var_1287, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%var_1287, dtype="int16") /* ty=Tensor[(13, 2, 5), int16] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %220 = cast(%var_1296, dtype="float32") /* ty=Tensor[(8, 36), float32] */;
  %221 = reshape(%220, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %222 = right_shift(%218, %219) /* ty=Tensor[(13, 2, 5), int16] */;
  %223 = @func_130(%221) /* ty=Tensor[(12, 6, 4), float32] */;
  (%222, %223, %var_1296)
}

def @func_1499(%var_1497: int64, %var_1498: Tensor[(9, 1, 10), int64]) -> (Tensor[(9, 1, 10), int64],) {
  %227 = fn (%var_1489: int64, %var_1490: Tensor[(9, 1, 10), int64]) -> (Tensor[(9, 1, 10), int64],) {
    %224 = cast(%var_1489, dtype="int64") /* ty=int64 */;
    %225 = cast(%var_1490, dtype="int64") /* ty=Tensor[(9, 1, 10), int64] */;
    %226 = bitwise_or(%224, %225) /* ty=Tensor[(9, 1, 10), int64] */;
    (%226,)
  };
  %227(%var_1497, %var_1498) /* ty=(Tensor[(9, 1, 10), int64],) */
}

def @func_8854() -> Tensor[(2, 6, 9), bool] {
  %228 = @func_8374() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %228.0
}

def @func_8300(%var_8188: Tensor[(2, 6, 9), bool], %var_8287: Tensor[(13, 35), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(288, 1), float32], Tensor[(2, 10, 12), int64], Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(16, 5, 10), float64], Tensor[(1, 800), float64], Tensor[(288), float32], Tensor[(13, 35), int8], Tensor[(2, 6, 9), bool], Tensor[(1352), float64], Tensor[(2, 6, 9), bool]) {
  %229 = @func_6803() /* ty=Tensor[(2, 6, 9), bool] */;
  %230 = cast(%var_8188, dtype="bool") /* ty=Tensor[(2, 6, 9), bool] */;
  %231 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%229, dtype="bool") /* ty=Tensor[(2, 6, 9), bool] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %234 = cast(meta[relay.Constant][16] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %235 = cast(meta[relay.Constant][15] /* ty=Tensor[(288, 1), float32] */, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %236 = reshape(%234, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float64] */;
  %237 = reshape(%235, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %238 = @func_1277(%236, %237) /* ty=(Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(12, 6, 4), float32], Tensor[(288), float32]) */;
  %239 = %238.1;
  %240 = cast(meta[relay.Constant][16] /* ty=Tensor[(240), float64] */, dtype="int64") /* ty=Tensor[(240), int64] */;
  %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%239, dtype="int64") /* ty=Tensor[(2, 10, 12), int64] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %244 = cast(meta[relay.Constant][17] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %245 = reshape(%244, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %246 = @func_5947(%245) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int64], Tensor[(1200), int8], Tensor[(1575), int32]) */;
  %247 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 800), float64] */, dtype="float64") /* ty=Tensor[(1, 800), float64] */;
  %248 = reshape(%247, newshape=[16, 5, 10]) /* ty=Tensor[(16, 5, 10), float64] */;
  %249 = @func_2479(%248) /* ty=(Tensor[(16, 5, 10), float64],) */;
  %250 = cast(%var_8287, dtype="int8") /* ty=Tensor[(13, 35), int8] */;
  %251 = cast(meta[relay.Constant][15] /* ty=Tensor[(288, 1), float32] */, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %252 = reshape(%250, newshape=[13, 5, 7]) /* ty=Tensor[(13, 5, 7), int8] */;
  %253 = reshape(%251, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %254 = @func_4648(%252, %253) /* ty=(Tensor[(13, 5, 7), int8], Tensor[(2, 10, 12), bool], Tensor[(240, 1), float64], Tensor[(288), float32]) */;
  %255 = cast(meta[relay.Constant][19] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %256 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 800), float64] */, dtype="float64") /* ty=Tensor[(1, 800), float64] */;
  %257 = cast(meta[relay.Constant][17] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %258 = reshape(%255, newshape=[1352]) /* ty=Tensor[(1352), float64] */;
  %259 = reshape(%256, newshape=[1, 800]) /* ty=Tensor[(1, 800), float64] */;
  %260 = reshape(%257, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %261 = @func_7904(%258, %259, %260) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(1352), float64], Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(1, 800), float64], Tensor[(1200), int8], Tensor[(15, 5, 16), int8], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32]) */;
  %262 = @func_6645() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %263 = logical_or(%232, %233) /* ty=Tensor[(2, 6, 9), bool] */;
  %264 = @func_6803() /* ty=Tensor[(2, 6, 9), bool] */;
  %265 = subtract(%242, %243) /* ty=Tensor[(2, 10, 12), int64] */;
  %266 = %246.0;
  %267 = %249.0;
  %268 = %254.3;
  %269 = %261.2;
  %270 = %262.0;
  (%263, %264, meta[relay.Constant][15] /* ty=Tensor[(288, 1), float32] */, %265, %266, meta[relay.Constant][17] /* ty=Tensor[(1200), int8] */, %267, meta[relay.Constant][18] /* ty=Tensor[(1, 800), float64] */, %268, %var_8287, %269, meta[relay.Constant][19] /* ty=Tensor[(1352), float64] */, %270)
}

def @func_7690() -> Tensor[(2, 6, 9), bool] {
  %271 = fn () -> Tensor[(2, 6, 9), bool] {
    @func_6654() /* ty=Tensor[(2, 6, 9), bool] */
  };
  %271() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_5061() -> Tensor[(2, 6, 9), bool] {
  %272 = fn () -> Tensor[(2, 6, 9), bool] {
    @func_4898() /* ty=Tensor[(2, 6, 9), bool] */
  };
  %272() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_6322() -> (Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) {
  %280 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) {
    %273 = cast(meta[relay.Constant][20] /* ty=Tensor[(1575, 1), int32] */, dtype="int32") /* ty=Tensor[(1575, 1), int32] */;
    %274 = cast(meta[relay.Constant][20] /* ty=Tensor[(1575, 1), int32] */, dtype="int32") /* ty=Tensor[(1575, 1), int32] */;
    %275 = reshape(%273, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
    %276 = reshape(%274, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
    %277 = @func_2436(%275, %276) /* ty=(Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) */;
    %278 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
    %279 = %277.4;
    (%278, %279, meta[relay.Constant][20] /* ty=Tensor[(1575, 1), int32] */)
  };
  %280() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */
}

def @func_6378() -> (Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) {
  @func_6376() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) */
}

def @func_12303(%var_12301: float32, %var_12302: Tensor[(154, 1), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(11, 5, 8), float32], float32, Tensor[(12, 7, 13), float32], Tensor[(154, 1), float64], Tensor[(288), float32], Tensor[(616), float64]) {
  %298 = fn (%var_12283: float32, %var_12295: Tensor[(154, 1), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(11, 5, 8), float32], float32, Tensor[(12, 7, 13), float32], Tensor[(154, 1), float64], Tensor[(288), float32], Tensor[(616), float64]) {
    %281 = @func_10360() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
    %282 = cast(meta[relay.Constant][21] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
    %283 = reshape(%282, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
    %284 = cast(%var_12283, dtype="float32") /* ty=float32 */;
    %285 = reshape(%284, newshape=[]) /* ty=float32 */;
    %286 = @func_10645(%285) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32]) */;
    %287 = cast(%var_12295, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
    %288 = cast(meta[relay.Constant][22] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %289 = cast(meta[relay.Constant][23] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %290 = reshape(%287, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
    %291 = reshape(%288, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %292 = reshape(%289, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
    %293 = @func_1844(%290, %291, %292) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(130), int16], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(4, 14, 11), float64], Tensor[(12, 7, 13), float32]) */;
    %294 = %281.0;
    %295 = @func_109(%283) /* ty=Tensor[(12, 7, 13), float32] */;
    %296 = %286.1;
    %297 = %293.3;
    (%294, %295, meta[relay.Constant][21] /* ty=Tensor[(1092), float32] */, %296, %var_12283, %297, %var_12295, meta[relay.Constant][22] /* ty=Tensor[(288), float32] */, meta[relay.Constant][23] /* ty=Tensor[(616), float64] */)
  };
  %298(%var_12301, %var_12302) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(11, 5, 8), float32], float32, Tensor[(12, 7, 13), float32], Tensor[(154, 1), float64], Tensor[(288), float32], Tensor[(616), float64]) */
}

def @func_8147(%var_8125: Tensor[(392), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(392), float64]) {
  %299 = @func_7253() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %300 = cast(%var_8125, dtype="float64") /* ty=Tensor[(392), float64] */;
  %301 = reshape(%300, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), float64] */;
  %302 = @func_2664(%301) /* ty=(Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) */;
  %303 = %299.0;
  %304 = %302.0;
  (%303, %304, %var_8125)
}

def @func_8778(%var_8777: Tensor[(1575, 9), int32]) -> Tensor[(1575, 9), int64] {
  %309 = fn (%var_8767: Tensor[(1575, 9), int32]) -> Tensor[(1575, 9), int64] {
    %305 = @func_7124() /* ty=(Tensor[(1575, 1), int32],) */;
    %306 = %305.0;
    %307 = cast(%306, dtype="int64") /* ty=Tensor[(1575, 1), int64] */;
    %308 = cast(%var_8767, dtype="int64") /* ty=Tensor[(1575, 9), int64] */;
    bitwise_xor(%307, %308) /* ty=Tensor[(1575, 9), int64] */
  };
  %309(%var_8777) /* ty=Tensor[(1575, 9), int64] */
}

def @func_5306(%var_5303: Tensor[(1200), int8], %var_5304: Tensor[(1575), int32], %var_5305: Tensor[(15, 5, 16), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(12, 6, 4), float32], Tensor[(24, 12), float32], Tensor[(15, 15, 7), uint64], Tensor[(15, 5, 16), int64], Tensor[(12, 6, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(1575), float32]) {
  @func_5301(%var_5303, %var_5304, %var_5305) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(12, 6, 4), float32], Tensor[(24, 12), float32], Tensor[(15, 15, 7), uint64], Tensor[(15, 5, 16), int64], Tensor[(12, 6, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(1575), float32]) */
}

def @func_6755(%var_6752: Tensor[(4, 14, 11), float32], %var_6753: Tensor[(4, 14, 11), float32], %var_6754: Tensor[(26, 52), float64]) -> (Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(24, 12), float32], Tensor[(1200), int8], Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(4, 14, 11), float32]) {
  @func_6750(%var_6752, %var_6753, %var_6754) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(24, 12), float32], Tensor[(1200), int8], Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(4, 14, 11), float32]) */
}

def @func_5328() -> Tensor[(2, 6, 9), bool] {
  %310 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %310.0
}

def @func_7109() -> Tensor[(2, 6, 9), bool] {
  %311 = fn () -> Tensor[(2, 6, 9), bool] {
    @func_4898() /* ty=Tensor[(2, 6, 9), bool] */
  };
  %311() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_9260() -> Tensor[(2, 6, 9), bool] {
  @func_9258() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_10740() -> (Tensor[(12, 6, 4), uint64],) {
  @func_10738() /* ty=(Tensor[(12, 6, 4), uint64],) */
}

def @func_5087() -> Tensor[(2, 6, 9), bool] {
  @func_5085() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_6922() -> Tensor[(2, 6, 9), bool] {
  %312 = @func_6580() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %312.0
}

def @func_12041() -> (Tensor[(12, 6, 4), uint64],) {
  @func_12039() /* ty=(Tensor[(12, 6, 4), uint64],) */
}

def @func_4652(%var_4650: Tensor[(13, 5, 7), int8], %var_4651: Tensor[(288), float32]) -> (Tensor[(13, 5, 7), int8], Tensor[(2, 10, 12), bool], Tensor[(240, 1), float64], Tensor[(288), float32]) {
  @func_4648(%var_4650, %var_4651) /* ty=(Tensor[(13, 5, 7), int8], Tensor[(2, 10, 12), bool], Tensor[(240, 1), float64], Tensor[(288), float32]) */
}

def @func_692(%var_685: Tensor[(288, 1), float32]) -> (Tensor[(15, 9, 4), bool], Tensor[(12, 6, 4), float32], Tensor[(288, 1), float32]) {
  %313 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 9, 4), int64] */, dtype="bool") /* ty=Tensor[(15, 9, 4), bool] */;
  %314 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(15, 9, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 9, 4), int64] */, dtype="bool") /* ty=Tensor[(15, 9, 4), bool] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %317 = cast(%var_685, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %318 = reshape(%317, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %319 = less(%315, %316) /* ty=Tensor[(15, 9, 4), bool] */;
  %320 = @func_130(%318) /* ty=Tensor[(12, 6, 4), float32] */;
  (%319, %320, %var_685)
}

def @func_5947(%var_5930: Tensor[(1200), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int64], Tensor[(1200), int8], Tensor[(1575), int32]) {
  %321 = @func_4611() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %322 = cast(%var_5930, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %323 = cast(meta[relay.Constant][26] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %324 = cast(%var_5930, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %325 = reshape(%322, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %326 = reshape(%323, newshape=[1575]) /* ty=Tensor[(1575), int32] */;
  %327 = reshape(%324, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %328 = @func_5301(%325, %326, %327) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(12, 6, 4), float32], Tensor[(24, 12), float32], Tensor[(15, 15, 7), uint64], Tensor[(15, 5, 16), int64], Tensor[(12, 6, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(1575), float32]) */;
  %329 = %321.0;
  %330 = %328.5;
  (%329, %330, %var_5930, meta[relay.Constant][26] /* ty=Tensor[(1575), int32] */)
}

def @func_6580() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %331 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %332 = @func_4611() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %333 = %331.0;
  %334 = %332.0;
  (%333, %334)
}

def @func_2666(%var_2665: Tensor[(14, 7, 4), float64]) -> (Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) {
  %353 = fn (%var_2625: Tensor[(14, 7, 4), float64]) -> (Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) {
    %335 = cast(meta[relay.Constant][27] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
    %336 = cast(meta[relay.Constant][27] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
    %337 = reshape(%335, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
    %338 = reshape(%336, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
    %339 = @func_2436(%337, %338) /* ty=(Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) */;
    %340 = cast(%var_2625, dtype="float64") /* ty=Tensor[(14, 7, 4), float64] */;
    %341 = asin(%340) /* ty=Tensor[(14, 7, 4), float64] */;
    %342 = cast(%var_2625, dtype="int8") /* ty=Tensor[(14, 7, 4), int8] */;
    %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
    %344 = cast(%341, dtype="int8") /* ty=Tensor[(14, 7, 4), int8] */;
    %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %346 = cast(7.99463f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %347 = cast(meta[relay.Constant][28] /* ty=Tensor[(110, 4), float32] */, dtype="float32") /* ty=Tensor[(110, 4), float32] */;
    %348 = reshape(%346, newshape=[]) /* ty=float32 */;
    %349 = reshape(%347, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
    %350 = %339.4;
    %351 = multiply(%344, %345) /* ty=Tensor[(14, 7, 4), int8] */;
    %352 = @func_1549(%348, %349) /* ty=Tensor[(11, 5, 8), float32] */;
    (%350, meta[relay.Constant][27] /* ty=Tensor[(1575), int32] */, %351, %352, 7.99463f /* ty=float32 */, meta[relay.Constant][28] /* ty=Tensor[(110, 4), float32] */)
  };
  %353(%var_2665) /* ty=(Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) */
}

def @func_8705(%var_8646: Tensor[(15, 13, 16), float32]) -> (Tensor[(15, 13, 16), float64], Tensor[(9, 1, 10), int64], int64, Tensor[(90), int64], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(15, 13, 16), float64], Tensor[(12, 6, 4), float32], Tensor[(196, 2), float64], Tensor[(15, 13, 16), float32]) {
  %354 = cast(%var_8646, dtype="float64") /* ty=Tensor[(15, 13, 16), float64] */;
  %355 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %356 = cast(meta[relay.Constant][29] /* ty=Tensor[(90), int64] */, dtype="int64") /* ty=Tensor[(90), int64] */;
  %357 = reshape(%355, newshape=[]) /* ty=int64 */;
  %358 = reshape(%356, newshape=[9, 1, 10]) /* ty=Tensor[(9, 1, 10), int64] */;
  %359 = @func_1496(%357, %358) /* ty=(Tensor[(9, 1, 10), int64],) */;
  %360 = @func_6512() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %361 = @func_8374() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %362 = cast(%var_8646, dtype="float32") /* ty=Tensor[(15, 13, 16), float32] */;
  %363 = cos(%362) /* ty=Tensor[(15, 13, 16), float32] */;
  %364 = cast(%363, dtype="float64") /* ty=Tensor[(15, 13, 16), float64] */;
  %365 = cast(meta[relay.Constant][30] /* ty=Tensor[(196, 2), float64] */, dtype="float64") /* ty=Tensor[(196, 2), float64] */;
  %366 = reshape(%365, newshape=[392]) /* ty=Tensor[(392), float64] */;
  %367 = @func_8147(%366) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(392), float64]) */;
  %368 = cast(meta[relay.Constant][31] /* ty=Tensor[(15, 13, 16), float32] */, dtype="int16") /* ty=Tensor[(15, 13, 16), int16] */;
  %369 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%363, dtype="int16") /* ty=Tensor[(15, 13, 16), int16] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %372 = add(%370, %371) /* ty=Tensor[(15, 13, 16), int16] */;
  %373 = cast(%372, dtype="float32") /* ty=Tensor[(15, 13, 16), float32] */;
  %374 = sinh(%354) /* ty=Tensor[(15, 13, 16), float64] */;
  %375 = %359.0;
  %376 = %360.0;
  %377 = %361.0;
  %378 = rsqrt(%364) /* ty=Tensor[(15, 13, 16), float64] */;
  %379 = %367.1;
  %380 = sigmoid(%373) /* ty=Tensor[(15, 13, 16), float32] */;
  (%374, %375, -10 /* ty=int64 */, meta[relay.Constant][29] /* ty=Tensor[(90), int64] */, %376, %377, %378, %379, meta[relay.Constant][30] /* ty=Tensor[(196, 2), float64] */, %380)
}

def @func_11235() -> (Tensor[(2, 6, 9), bool], Tensor[(1575), float32], Tensor[(1575), float64]) {
  @func_11233() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575), float32], Tensor[(1575), float64]) */
}

def @func_11941() -> (Tensor[(2, 6, 9), bool], Tensor[(288), float32], Tensor[(1575), int32], Tensor[(1, 504), int8], Tensor[(504), int8]) {
  %394 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(288), float32], Tensor[(1575), int32], Tensor[(1, 504), int8], Tensor[(504), int8]) {
    %381 = cast(meta[relay.Constant][32] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
    %382 = cast(meta[relay.Constant][32] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
    %383 = reshape(%381, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
    %384 = reshape(%382, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
    %385 = @func_2436(%383, %384) /* ty=(Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) */;
    %386 = @func_6654() /* ty=Tensor[(2, 6, 9), bool] */;
    %387 = cast(%386, dtype="bool") /* ty=Tensor[(2, 6, 9), bool] */;
    %388 = cast(meta[relay.Constant][33] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
    %389 = reshape(%387, newshape=[2, 6, 9]) /* ty=Tensor[(2, 6, 9), bool] */;
    %390 = reshape(%388, newshape=[1, 504]) /* ty=Tensor[(1, 504), int8] */;
    %391 = @func_5409(%389, %390) /* ty=(Tensor[(2, 6, 9), float32], Tensor[(8, 7, 9), float32], Tensor[(1, 504), int8]) */;
    %392 = %385.6;
    %393 = %391.2;
    (%386, %392, meta[relay.Constant][32] /* ty=Tensor[(1575), int32] */, %393, meta[relay.Constant][33] /* ty=Tensor[(504), int8] */)
  };
  %394() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(288), float32], Tensor[(1575), int32], Tensor[(1, 504), int8], Tensor[(504), int8]) */
}

def @func_6785() -> (Tensor[(2, 6, 9), bool],) {
  %397 = fn () -> (Tensor[(2, 6, 9), bool],) {
    %395 = @func_6045() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) */;
    %396 = %395.0;
    (%396,)
  };
  %397() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_7187() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %398 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %399 = %398.0;
  %400 = @func_5060() /* ty=Tensor[(2, 6, 9), bool] */;
  (%399, %400)
}

def @func_4648(%var_4632: Tensor[(13, 5, 7), int8], %var_4644: Tensor[(288), float32]) -> (Tensor[(13, 5, 7), int8], Tensor[(2, 10, 12), bool], Tensor[(240, 1), float64], Tensor[(288), float32]) {
  %401 = cast(%var_4632, dtype="int8") /* ty=Tensor[(13, 5, 7), int8] */;
  %402 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(13, 5, 7), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %403 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 5, 7), int8] */, dtype="int8") /* ty=Tensor[(13, 5, 7), int8] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %405 = cast(meta[relay.Constant][35] /* ty=Tensor[(240, 1), float64] */, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %406 = cast(%var_4644, dtype="float32") /* ty=Tensor[(288), float32] */;
  %407 = reshape(%405, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float64] */;
  %408 = reshape(%406, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %409 = @func_1277(%407, %408) /* ty=(Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(12, 6, 4), float32], Tensor[(288), float32]) */;
  %410 = bitwise_xor(%403, %404) /* ty=Tensor[(13, 5, 7), int8] */;
  %411 = %409.0;
  (%410, %411, meta[relay.Constant][35] /* ty=Tensor[(240, 1), float64] */, %var_4644)
}

def @func_6193(%var_6191: Tensor[(440), float32], %var_6192: Tensor[(1456), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(5, 4, 5), float64], float32, Tensor[(440), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) {
  @func_6189(%var_6191, %var_6192) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(5, 4, 5), float64], float32, Tensor[(440), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) */
}

def @func_12109() -> Tensor[(2, 6, 9), bool] {
  %412 = @func_10194() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %412.0
}

def @func_2819(%var_2817: Tensor[(8, 13, 13), float64], %var_2818: Tensor[(8, 13, 13), float64]) -> (Tensor[(8, 13, 13), float64],) {
  %418 = fn (%var_2807: Tensor[(8, 13, 13), float64], %var_2808: Tensor[(8, 13, 13), float64]) -> (Tensor[(8, 13, 13), float64],) {
    %413 = cast(%var_2808, dtype="float64") /* ty=Tensor[(8, 13, 13), float64] */;
    %414 = shape_of(%var_2807, dtype="int32") /* ty=Tensor[(3), int32] */;
    %415 = cast(%var_2807, dtype="float64") /* ty=Tensor[(8, 13, 13), float64] */;
    %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %417 = floor_divide(%415, %416) /* ty=Tensor[(8, 13, 13), float64] */;
    (%417,)
  };
  %418(%var_2817, %var_2818) /* ty=(Tensor[(8, 13, 13), float64],) */
}

def @func_6880(%var_6879: Tensor[(7, 56), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(7, 56), float64]) {
  %425 = fn (%var_6875: Tensor[(7, 56), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(7, 56), float64]) {
    %419 = @func_6479() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %420 = cast(%var_6875, dtype="float64") /* ty=Tensor[(7, 56), float64] */;
    %421 = reshape(%420, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), float64] */;
    %422 = @func_2664(%421) /* ty=(Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) */;
    %423 = %419.0;
    %424 = %422.1;
    (%423, %424, %var_6875)
  };
  %425(%var_6879) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(7, 56), float64]) */
}

def @func_10260() -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8]) {
  %426 = @func_6784() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %427 = @func_7491() /* ty=(Tensor[(600, 2), int8],) */;
  %428 = %426.0;
  %429 = %427.0;
  (%428, %429)
}

def @func_7126() -> (Tensor[(1575, 1), int32],) {
  @func_7124() /* ty=(Tensor[(1575, 1), int32],) */
}

def @func_4522(%var_4520: Tensor[(5, 9, 5), float64], %var_4521: Tensor[(1, 130), int16]) -> (Tensor[(5, 9, 5), float64], Tensor[(13, 2, 5), int16], Tensor[(1, 130), int16], Tensor[(24, 12), float32]) {
  %438 = fn (%var_4485: Tensor[(5, 9, 5), float64], %var_4489: Tensor[(1, 130), int16]) -> (Tensor[(5, 9, 5), float64], Tensor[(13, 2, 5), int16], Tensor[(1, 130), int16], Tensor[(24, 12), float32]) {
    %430 = cast(%var_4485, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
    %431 = cast(%var_4489, dtype="int16") /* ty=Tensor[(1, 130), int16] */;
    %432 = cast(meta[relay.Constant][36] /* ty=Tensor[(24, 12), float32] */, dtype="float32") /* ty=Tensor[(24, 12), float32] */;
    %433 = reshape(%431, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), int16] */;
    %434 = reshape(%432, newshape=[8, 36]) /* ty=Tensor[(8, 36), float32] */;
    %435 = @func_1300(%433, %434) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) */;
    %436 = asinh(%430) /* ty=Tensor[(5, 9, 5), float64] */;
    %437 = %435.0;
    (%436, %437, %var_4489, meta[relay.Constant][36] /* ty=Tensor[(24, 12), float32] */)
  };
  %438(%var_4520, %var_4521) /* ty=(Tensor[(5, 9, 5), float64], Tensor[(13, 2, 5), int16], Tensor[(1, 130), int16], Tensor[(24, 12), float32]) */
}

def @func_6994() -> Tensor[(12, 6, 4), float32] {
  %440 = fn () -> Tensor[(12, 6, 4), float32] {
    %439 = @func_6376() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32], Tensor[(12, 6, 4), float32], Tensor[(144, 2), float32]) */;
    %439.2
  };
  %440() /* ty=Tensor[(12, 6, 4), float32] */
}

def @func_6750(%var_6697: Tensor[(4, 14, 11), float32], %var_6698: Tensor[(4, 14, 11), float32], %var_6705: Tensor[(26, 52), float64]) -> (Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(24, 12), float32], Tensor[(1200), int8], Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(4, 14, 11), float32]) {
  %441 = cast(%var_6705, dtype="float64") /* ty=Tensor[(26, 52), float64] */;
  %442 = cast(%var_6705, dtype="float64") /* ty=Tensor[(26, 52), float64] */;
  %443 = reshape(%441, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %444 = reshape(%442, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %445 = @func_2816(%443, %444) /* ty=(Tensor[(8, 13, 13), float64],) */;
  %446 = cast(meta[relay.Constant][37] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %447 = cast(meta[relay.Constant][38] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %448 = cast(meta[relay.Constant][37] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %449 = reshape(%446, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %450 = reshape(%447, newshape=[1575]) /* ty=Tensor[(1575), int32] */;
  %451 = reshape(%448, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %452 = @func_5301(%449, %450, %451) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(12, 6, 4), float32], Tensor[(24, 12), float32], Tensor[(15, 15, 7), uint64], Tensor[(15, 5, 16), int64], Tensor[(12, 6, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(1575), float32]) */;
  %453 = @func_5876() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %454 = cast(%var_6698, dtype="bool") /* ty=Tensor[(4, 14, 11), bool] */;
  %455 = shape_of(%var_6697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%var_6697, dtype="bool") /* ty=Tensor[(4, 14, 11), bool] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %458 = greater(%456, %457) /* ty=Tensor[(4, 14, 11), bool] */;
  %459 = cast(%458, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %460 = log2(%459) /* ty=Tensor[(4, 14, 11), float32] */;
  %461 = cast(%458, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%460, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %465 = %445.0;
  %466 = %452.3;
  %467 = %453.0;
  %468 = add(%463, %464) /* ty=Tensor[(4, 14, 11), float32] */;
  (%465, %var_6705, %466, meta[relay.Constant][37] /* ty=Tensor[(1200), int8] */, meta[relay.Constant][38] /* ty=Tensor[(1575), int32] */, %467, %468)
}

def @func_4168(%var_4116: Tensor[(10, 15, 3), uint32], %var_4117: Tensor[(10, 15, 3), uint32], %var_4140: Tensor[(10, 15, 3), uint32], %var_4153: Tensor[(1092), float32]) -> (Tensor[(10, 15, 3), uint32], Tensor[(10, 15, 3), float32], Tensor[(15, 5, 16), int8], Tensor[(1200), int8], Tensor[(2, 10, 12), float64], Tensor[(120, 2), float64], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(16, 5, 10), float64], Tensor[(800), float64]) {
  %469 = cast(%var_4117, dtype="uint32") /* ty=Tensor[(10, 15, 3), uint32] */;
  %470 = shape_of(%var_4116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%var_4116, dtype="uint32") /* ty=Tensor[(10, 15, 3), uint32] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %473 = cast(%var_4140, dtype="float32") /* ty=Tensor[(10, 15, 3), float32] */;
  %474 = shape_of(%var_4116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(%var_4116, dtype="float32") /* ty=Tensor[(10, 15, 3), float32] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %477 = cast(meta[relay.Constant][39] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %478 = cast(meta[relay.Constant][39] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %479 = reshape(%477, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %480 = reshape(%478, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %481 = @func_1027(%479, %480) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
  %482 = cast(meta[relay.Constant][40] /* ty=Tensor[(120, 2), float64] */, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
  %483 = cast(meta[relay.Constant][41] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %484 = reshape(%482, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float64] */;
  %485 = reshape(%483, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %486 = @func_1277(%484, %485) /* ty=(Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(12, 6, 4), float32], Tensor[(288), float32]) */;
  %487 = cast(%var_4153, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %488 = reshape(%487, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %489 = cast(meta[relay.Constant][42] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %490 = reshape(%489, newshape=[16, 5, 10]) /* ty=Tensor[(16, 5, 10), float64] */;
  %491 = @func_2479(%490) /* ty=(Tensor[(16, 5, 10), float64],) */;
  %492 = left_shift(%471, %472) /* ty=Tensor[(10, 15, 3), uint32] */;
  %493 = power(%475, %476) /* ty=Tensor[(10, 15, 3), float32] */;
  %494 = %481.0;
  %495 = %486.1;
  %496 = @func_109(%488) /* ty=Tensor[(12, 7, 13), float32] */;
  %497 = %491.0;
  (%492, %493, %494, meta[relay.Constant][39] /* ty=Tensor[(1200), int8] */, %495, meta[relay.Constant][40] /* ty=Tensor[(120, 2), float64] */, meta[relay.Constant][41] /* ty=Tensor[(288), float32] */, %496, %var_4153, %497, meta[relay.Constant][42] /* ty=Tensor[(800), float64] */)
}

def @func_8847(%var_8845: Tensor[(200, 4), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(288), uint32], Tensor[(200, 4), float64], Tensor[(1200), int8]) {
  @func_8844(%var_8845) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(288), uint32], Tensor[(200, 4), float64], Tensor[(1200), int8]) */
}

def @func_5797(%var_5791: Tensor[(1092), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(12, 7, 13), float32], Tensor[(1092), float32]) {
  %498 = cast(%var_5791, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %499 = reshape(%498, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %500 = @func_5328() /* ty=Tensor[(2, 6, 9), bool] */;
  %501 = @func_109(%499) /* ty=Tensor[(12, 7, 13), float32] */;
  (%500, %501, %var_5791)
}

def @func_8844(%var_8838: Tensor[(200, 4), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(288), uint32], Tensor[(200, 4), float64], Tensor[(1200), int8]) {
  %502 = cast(meta[relay.Constant][43] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %503 = cast(%var_8838, dtype="float64") /* ty=Tensor[(200, 4), float64] */;
  %504 = cast(meta[relay.Constant][44] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %505 = reshape(%502, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %506 = reshape(%503, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %507 = reshape(%504, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %508 = @func_7441(%505, %506, %507) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32], float32, Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8]) */;
  %509 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
  %510 = %508.5;
  (%509, %510, meta[relay.Constant][43] /* ty=Tensor[(288), uint32] */, %var_8838, meta[relay.Constant][44] /* ty=Tensor[(1200), int8] */)
}

def @func_4958(%var_4932: Tensor[(455), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 10, 12), bool], Tensor[(455), int8], Tensor[(288), float32]) {
  %511 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %512 = cast(%var_4932, dtype="int8") /* ty=Tensor[(455), int8] */;
  %513 = cast(meta[relay.Constant][45] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %514 = reshape(%512, newshape=[13, 5, 7]) /* ty=Tensor[(13, 5, 7), int8] */;
  %515 = reshape(%513, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %516 = @func_4648(%514, %515) /* ty=(Tensor[(13, 5, 7), int8], Tensor[(2, 10, 12), bool], Tensor[(240, 1), float64], Tensor[(288), float32]) */;
  %517 = %511.0;
  %518 = %516.1;
  (%517, %518, %var_4932, meta[relay.Constant][45] /* ty=Tensor[(288), float32] */)
}

def @func_8491() -> (Tensor[(12, 6, 4), float32],) {
  %520 = fn () -> (Tensor[(12, 6, 4), float32],) {
    %519 = @func_6993() /* ty=Tensor[(12, 6, 4), float32] */;
    (%519,)
  };
  %520() /* ty=(Tensor[(12, 6, 4), float32],) */
}

def @func_10710(%var_10708: Tensor[(5, 8, 16), uint32], %var_10709: Tensor[(5, 8, 16), uint32]) -> (Tensor[(5, 8, 16), bool], Tensor[(12, 6, 4), float32], Tensor[(288), float32], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32]) {
  %534 = fn (%var_10686: Tensor[(5, 8, 16), uint32], %var_10687: Tensor[(5, 8, 16), uint32]) -> (Tensor[(5, 8, 16), bool], Tensor[(12, 6, 4), float32], Tensor[(288), float32], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32]) {
    %521 = cast(%var_10687, dtype="bool") /* ty=Tensor[(5, 8, 16), bool] */;
    %522 = shape_of(%var_10686, dtype="int32") /* ty=Tensor[(3), int32] */;
    %523 = cast(%var_10686, dtype="bool") /* ty=Tensor[(5, 8, 16), bool] */;
    %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %525 = cast(meta[relay.Constant][46] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %526 = reshape(%525, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
    %527 = cast(meta[relay.Constant][47] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %528 = cast(meta[relay.Constant][47] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %529 = reshape(%527, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint32] */;
    %530 = reshape(%528, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint32] */;
    %531 = less_equal(%523, %524) /* ty=Tensor[(5, 8, 16), bool] */;
    %532 = @func_130(%526) /* ty=Tensor[(12, 6, 4), float32] */;
    %533 = @func_2975(%529, %530) /* ty=Tensor[(6, 9, 7), uint8] */;
    (%531, %532, meta[relay.Constant][46] /* ty=Tensor[(288), float32] */, %533, meta[relay.Constant][47] /* ty=Tensor[(378), uint32] */)
  };
  %534(%var_10708, %var_10709) /* ty=(Tensor[(5, 8, 16), bool], Tensor[(12, 6, 4), float32], Tensor[(288), float32], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32]) */
}

def @func_10196() -> (Tensor[(2, 6, 9), bool],) {
  @func_10194() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_11851(%var_11848: Tensor[(2, 7, 5), int8], %var_11849: Tensor[(800), float64], %var_11850: Tensor[(1200), int8]) -> (Tensor[(2, 7, 5), int8], Tensor[(1575, 1), int32], Tensor[(800), float64], Tensor[(1200), int8]) {
  %546 = fn (%var_11835: Tensor[(2, 7, 5), int8], %var_11843: Tensor[(800), float64], %var_11844: Tensor[(1200), int8]) -> (Tensor[(2, 7, 5), int8], Tensor[(1575, 1), int32], Tensor[(800), float64], Tensor[(1200), int8]) {
    %535 = cast(%var_11835, dtype="int8") /* ty=Tensor[(2, 7, 5), int8] */;
    %536 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(2, 7, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %537 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 7, 5), int8] */, dtype="int8") /* ty=Tensor[(2, 7, 5), int8] */;
    %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %539 = cast(%var_11843, dtype="float64") /* ty=Tensor[(800), float64] */;
    %540 = cast(%var_11844, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %541 = reshape(%539, newshape=[800]) /* ty=Tensor[(800), float64] */;
    %542 = reshape(%540, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %543 = @func_10863(%541, %542) /* ty=(Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1092), bool], Tensor[(1575, 1), int32]) */;
    %544 = bitwise_and(%537, %538) /* ty=Tensor[(2, 7, 5), int8] */;
    %545 = %543.4;
    (%544, %545, %var_11843, %var_11844)
  };
  %546(%var_11848, %var_11849, %var_11850) /* ty=(Tensor[(2, 7, 5), int8], Tensor[(1575, 1), int32], Tensor[(800), float64], Tensor[(1200), int8]) */
}

def @func_4174(%var_4170: Tensor[(10, 15, 3), uint32], %var_4171: Tensor[(10, 15, 3), uint32], %var_4172: Tensor[(10, 15, 3), uint32], %var_4173: Tensor[(1092), float32]) -> (Tensor[(10, 15, 3), uint32], Tensor[(10, 15, 3), float32], Tensor[(15, 5, 16), int8], Tensor[(1200), int8], Tensor[(2, 10, 12), float64], Tensor[(120, 2), float64], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(16, 5, 10), float64], Tensor[(800), float64]) {
  @func_4168(%var_4170, %var_4171, %var_4172, %var_4173) /* ty=(Tensor[(10, 15, 3), uint32], Tensor[(10, 15, 3), float32], Tensor[(15, 5, 16), int8], Tensor[(1200), int8], Tensor[(2, 10, 12), float64], Tensor[(120, 2), float64], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(16, 5, 10), float64], Tensor[(800), float64]) */
}

def @func_6582() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  @func_6580() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */
}

def @func_12028() -> Tensor[(2, 6, 9), bool] {
  %548 = fn () -> Tensor[(2, 6, 9), bool] {
    %547 = @func_10194() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %547.0
  };
  %548() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_11869() -> (Tensor[(2, 6, 9), bool],) {
  @func_11867() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_3268(%var_3237: Tensor[(16, 6, 3), uint32], %var_3249: Tensor[(800), float64], %var_3264: Tensor[(1200), int8]) -> (Tensor[(16, 6, 3), uint32], Tensor[(16, 5, 10), float64], Tensor[(800), float64], float32, Tensor[(392, 1), float64], Tensor[(15, 5, 16), int8], Tensor[(1200), int8]) {
  %549 = cast(meta[relay.Constant][49] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %550 = cast(%var_3237, dtype="uint32") /* ty=Tensor[(16, 6, 3), uint32] */;
  %551 = cast(%var_3249, dtype="float64") /* ty=Tensor[(800), float64] */;
  %552 = reshape(%551, newshape=[16, 5, 10]) /* ty=Tensor[(16, 5, 10), float64] */;
  %553 = @func_2479(%552) /* ty=(Tensor[(16, 5, 10), float64],) */;
  %554 = cast(meta[relay.Constant][50] /* ty=Tensor[(392, 1), float64] */, dtype="float64") /* ty=Tensor[(392, 1), float64] */;
  %555 = reshape(%554, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), float64] */;
  %556 = @func_2664(%555) /* ty=(Tensor[(12, 6, 4), float32], Tensor[(1575), int32], Tensor[(14, 7, 4), int8], Tensor[(11, 5, 8), float32], float32, Tensor[(110, 4), float32]) */;
  %557 = cast(%var_3264, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %558 = cast(%var_3264, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %559 = reshape(%557, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %560 = reshape(%558, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %561 = @func_1027(%559, %560) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
  %562 = logical_xor(%549, %550) /* ty=Tensor[(16, 6, 3), uint32] */;
  %563 = %553.0;
  %564 = %556.4;
  %565 = %561.0;
  (%562, %563, %var_3249, %564, meta[relay.Constant][50] /* ty=Tensor[(392, 1), float64] */, %565, %var_3264)
}

def @func_7727() -> Tensor[(12, 6, 4), float32] {
  %567 = fn () -> Tensor[(12, 6, 4), float32] {
    %566 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
    %566.1
  };
  %567() /* ty=Tensor[(12, 6, 4), float32] */
}

def @func_10194() -> (Tensor[(2, 6, 9), bool],) {
  %568 = @func_7776() /* ty=Tensor[(2, 6, 9), bool] */;
  (%568,)
}

def @func_4898() -> Tensor[(2, 6, 9), bool] {
  %569 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %569.0
}

def @func_6481() -> (Tensor[(2, 6, 9), bool],) {
  @func_6479() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_3273(%var_3270: Tensor[(16, 6, 3), uint32], %var_3271: Tensor[(800), float64], %var_3272: Tensor[(1200), int8]) -> (Tensor[(16, 6, 3), uint32], Tensor[(16, 5, 10), float64], Tensor[(800), float64], float32, Tensor[(392, 1), float64], Tensor[(15, 5, 16), int8], Tensor[(1200), int8]) {
  @func_3268(%var_3270, %var_3271, %var_3272) /* ty=(Tensor[(16, 6, 3), uint32], Tensor[(16, 5, 10), float64], Tensor[(800), float64], float32, Tensor[(392, 1), float64], Tensor[(15, 5, 16), int8], Tensor[(1200), int8]) */
}

def @func_6418(%var_6417: Tensor[(440), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(440, 1), float32], float32, Tensor[(440), float32]) {
  %578 = fn (%var_6397: Tensor[(440), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(440, 1), float32], float32, Tensor[(440), float32]) {
    %570 = @func_6120() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1092), float32]) */;
    %571 = cast(9.75542f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %572 = cast(%var_6397, dtype="float32") /* ty=Tensor[(440), float32] */;
    %573 = reshape(%571, newshape=[]) /* ty=float32 */;
    %574 = reshape(%572, newshape=[440, 1]) /* ty=Tensor[(440, 1), float32] */;
    %575 = @func_2059(%573, %574) /* ty=(Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(11, 5, 8), float32], float32, Tensor[(440, 1), float32]) */;
    %576 = %570.0;
    %577 = %575.5;
    (%576, %577, 9.75542f /* ty=float32 */, %var_6397)
  };
  %578(%var_6417) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(440, 1), float32], float32, Tensor[(440), float32]) */
}

def @func_8455() -> (Tensor[(2, 6, 9), bool], Tensor[(16, 5, 10), float64], Tensor[(800), float64], Tensor[(600, 2), float64]) {
  %593 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(16, 5, 10), float64], Tensor[(800), float64], Tensor[(600, 2), float64]) {
    %579 = cast(meta[relay.Constant][51] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
    %580 = reshape(%579, newshape=[16, 5, 10]) /* ty=Tensor[(16, 5, 10), float64] */;
    %581 = @func_2479(%580) /* ty=(Tensor[(16, 5, 10), float64],) */;
    %582 = @func_7491() /* ty=(Tensor[(600, 2), int8],) */;
    %583 = %582.0;
    %584 = cast(meta[relay.Constant][52] /* ty=Tensor[(600, 2), int8] */, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
    %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(2), int32] */;
    %586 = cast(%583, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
    %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %588 = logical_or(%586, %587) /* ty=Tensor[(600, 2), bool] */;
    %589 = cast(%588, dtype="float64") /* ty=Tensor[(600, 2), float64] */;
    %590 = @func_5060() /* ty=Tensor[(2, 6, 9), bool] */;
    %591 = %581.0;
    %592 = acos(%589) /* ty=Tensor[(600, 2), float64] */;
    (%590, %591, meta[relay.Constant][51] /* ty=Tensor[(800), float64] */, %592)
  };
  %593() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(16, 5, 10), float64], Tensor[(800), float64], Tensor[(600, 2), float64]) */
}

def @func_5800(%var_5798: Tensor[(1092), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(12, 7, 13), float32], Tensor[(1092), float32]) {
  @func_5797(%var_5798) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 7, 13), float32], Tensor[(1092), float32]) */
}

def @func_5145(%var_5144: Tensor[(160), uint8]) -> (Tensor[(2, 6, 9), bool], Tensor[(10, 4, 4), float32], Tensor[(160), uint8]) {
  %602 = fn (%var_5136: Tensor[(160), uint8]) -> (Tensor[(2, 6, 9), bool], Tensor[(10, 4, 4), float32], Tensor[(160), uint8]) {
    %594 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %595 = cast(%var_5136, dtype="uint8") /* ty=Tensor[(160), uint8] */;
    %596 = cast(%var_5136, dtype="uint8") /* ty=Tensor[(160), uint8] */;
    %597 = reshape(%595, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
    %598 = reshape(%596, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
    %599 = @func_1996(%597, %598) /* ty=(Tensor[(10, 4, 4), bool], Tensor[(10, 4, 4), float64], Tensor[(10, 4, 4), float32]) */;
    %600 = %594.0;
    %601 = %599.2;
    (%600, %601, %var_5136)
  };
  %602(%var_5144) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(10, 4, 4), float32], Tensor[(160), uint8]) */
}

def @func_7124() -> (Tensor[(1575, 1), int32],) {
  %603 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
  %604 = %603.2;
  (%604,)
}

def @func_2436(%var_2399: Tensor[(15, 15, 7), int32], %var_2400: Tensor[(15, 15, 7), int32]) -> (Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) {
  %605 = cast(%var_2400, dtype="int32") /* ty=Tensor[(15, 15, 7), int32] */;
  %606 = shape_of(%var_2399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%var_2399, dtype="int32") /* ty=Tensor[(15, 15, 7), int32] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %609 = minimum(%607, %608) /* ty=Tensor[(15, 15, 7), int32] */;
  %610 = cast(%var_2399, dtype="uint64") /* ty=Tensor[(15, 15, 7), uint64] */;
  %611 = shape_of(%609, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%609, dtype="uint64") /* ty=Tensor[(15, 15, 7), uint64] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %614 = cast(meta[relay.Constant][53] /* ty=Tensor[(160), uint8] */, dtype="uint8") /* ty=Tensor[(160), uint8] */;
  %615 = cast(meta[relay.Constant][53] /* ty=Tensor[(160), uint8] */, dtype="uint8") /* ty=Tensor[(160), uint8] */;
  %616 = reshape(%614, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
  %617 = reshape(%615, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
  %618 = @func_1996(%616, %617) /* ty=(Tensor[(10, 4, 4), bool], Tensor[(10, 4, 4), float64], Tensor[(10, 4, 4), float32]) */;
  %619 = cast(%var_2400, dtype="float64") /* ty=Tensor[(15, 15, 7), float64] */;
  %620 = cast(meta[relay.Constant][54] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %621 = cast(meta[relay.Constant][55] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %622 = reshape(%620, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), int16] */;
  %623 = reshape(%621, newshape=[8, 36]) /* ty=Tensor[(8, 36), float32] */;
  %624 = @func_1300(%622, %623) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) */;
  %625 = maximum(%612, %613) /* ty=Tensor[(15, 15, 7), uint64] */;
  %626 = %618.1;
  %627 = atan(%619) /* ty=Tensor[(15, 15, 7), float64] */;
  %628 = %624.1;
  (%625, %626, meta[relay.Constant][53] /* ty=Tensor[(160), uint8] */, %627, %628, meta[relay.Constant][54] /* ty=Tensor[(130), int16] */, meta[relay.Constant][55] /* ty=Tensor[(288), float32] */)
}

def @func_5747() -> (Tensor[(2, 6, 9), bool],) {
  @func_5745() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_112(%var_110: Tensor[(12, 7, 13), float32]) -> Tensor[(12, 7, 13), float32] {
  @func_109(%var_110) /* ty=Tensor[(12, 7, 13), float32] */
}

def @func_5118() -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) {
  %636 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) {
    %629 = cast(meta[relay.Constant][56] /* ty=Tensor[(600, 2), int8] */, dtype="int8") /* ty=Tensor[(600, 2), int8] */;
    %630 = cast(meta[relay.Constant][56] /* ty=Tensor[(600, 2), int8] */, dtype="int8") /* ty=Tensor[(600, 2), int8] */;
    %631 = reshape(%629, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
    %632 = reshape(%630, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
    %633 = @func_1027(%631, %632) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
    %634 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
    %635 = %633.0;
    (%634, %635, meta[relay.Constant][56] /* ty=Tensor[(600, 2), int8] */)
  };
  %636() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) */
}

def @func_5878() -> (Tensor[(2, 6, 9), bool],) {
  @func_5876() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_1849(%var_1846: Tensor[(1, 14, 11), float64], %var_1847: Tensor[(288), float32], %var_1848: Tensor[(4, 14, 11), float64]) -> (Tensor[(13, 2, 5), int16], Tensor[(130), int16], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(4, 14, 11), float64], Tensor[(12, 7, 13), float32]) {
  @func_1844(%var_1846, %var_1847, %var_1848) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(130), int16], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(4, 14, 11), float64], Tensor[(12, 7, 13), float32]) */
}

def @func_7189() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  @func_7187() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */
}

def @func_11545() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %637 = @func_5745() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %638 = @func_9660() /* ty=Tensor[(2, 6, 9), bool] */;
  %639 = %637.0;
  (%638, %639)
}

def @func_7493() -> (Tensor[(600, 2), int8],) {
  @func_7491() /* ty=(Tensor[(600, 2), int8],) */
}

def @func_2975(%var_2942: Tensor[(6, 9, 7), uint32], %var_2943: Tensor[(6, 9, 7), uint32]) -> Tensor[(6, 9, 7), uint8] {
  %640 = cast(%var_2943, dtype="float32") /* ty=Tensor[(6, 9, 7), float32] */;
  %641 = exp(%640) /* ty=Tensor[(6, 9, 7), float32] */;
  %642 = cast(%var_2943, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
  %643 = shape_of(%var_2942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%var_2942, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %646 = less_equal(%644, %645) /* ty=Tensor[(6, 9, 7), bool] */;
  %647 = cast(%646, dtype="uint16") /* ty=Tensor[(6, 9, 7), uint16] */;
  %648 = shape_of(%var_2943, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%var_2943, dtype="uint16") /* ty=Tensor[(6, 9, 7), uint16] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %651 = left_shift(%649, %650) /* ty=Tensor[(6, 9, 7), uint16] */;
  %652 = cast(%651, dtype="uint8") /* ty=Tensor[(6, 9, 7), uint8] */;
  %653 = shape_of(%641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%641, dtype="uint8") /* ty=Tensor[(6, 9, 7), uint8] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%654, %655) /* ty=Tensor[(6, 9, 7), uint8] */
}

def @func_8375() -> (Tensor[(2, 6, 9), bool],) {
  %657 = fn () -> (Tensor[(2, 6, 9), bool],) {
    %656 = @func_7689() /* ty=Tensor[(2, 6, 9), bool] */;
    (%656,)
  };
  %657() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_10361() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %662 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
    %658 = @func_9324() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
    %659 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
    %660 = @func_6922() /* ty=Tensor[(2, 6, 9), bool] */;
    %661 = %658.1;
    (%659, %660, %661)
  };
  %662() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */
}

def @func_11150() -> (Tensor[(2, 6, 9), bool],) {
  %663 = @func_6803() /* ty=Tensor[(2, 6, 9), bool] */;
  (%663,)
}

def @func_7908(%var_7905: Tensor[(1352), float64], %var_7906: Tensor[(1, 800), float64], %var_7907: Tensor[(1200), int8]) -> (Tensor[(8, 13, 13), float64], Tensor[(1352), float64], Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(1, 800), float64], Tensor[(1200), int8], Tensor[(15, 5, 16), int8], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32]) {
  %696 = fn (%var_7853: Tensor[(1352), float64], %var_7862: Tensor[(1, 800), float64], %var_7863: Tensor[(1200), int8]) -> (Tensor[(8, 13, 13), float64], Tensor[(1352), float64], Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(1, 800), float64], Tensor[(1200), int8], Tensor[(15, 5, 16), int8], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32]) {
    %664 = cast(%var_7853, dtype="float64") /* ty=Tensor[(1352), float64] */;
    %665 = cast(%var_7853, dtype="float64") /* ty=Tensor[(1352), float64] */;
    %666 = reshape(%664, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
    %667 = reshape(%665, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
    %668 = @func_2816(%666, %667) /* ty=(Tensor[(8, 13, 13), float64],) */;
    %669 = @func_6993() /* ty=Tensor[(12, 6, 4), float32] */;
    %670 = cast(%669, dtype="uint32") /* ty=Tensor[(12, 6, 4), uint32] */;
    %671 = cast(%var_7862, dtype="float64") /* ty=Tensor[(1, 800), float64] */;
    %672 = cast(%var_7863, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %673 = reshape(%670, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), uint32] */;
    %674 = reshape(%671, newshape=[800]) /* ty=Tensor[(800), float64] */;
    %675 = reshape(%672, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %676 = @func_3268(%673, %674, %675) /* ty=(Tensor[(16, 6, 3), uint32], Tensor[(16, 5, 10), float64], Tensor[(800), float64], float32, Tensor[(392, 1), float64], Tensor[(15, 5, 16), int8], Tensor[(1200), int8]) */;
    %677 = cast(%var_7863, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %678 = cast(%var_7863, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %679 = reshape(%677, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
    %680 = reshape(%678, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
    %681 = @func_1027(%679, %680) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
    %682 = cast(%669, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
    %683 = log2(%682) /* ty=Tensor[(12, 6, 4), float32] */;
    %684 = cast(%669, dtype="int32") /* ty=Tensor[(12, 6, 4), int32] */;
    %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
    %686 = cast(%683, dtype="int32") /* ty=Tensor[(12, 6, 4), int32] */;
    %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %688 = logical_xor(%686, %687) /* ty=Tensor[(12, 6, 4), int32] */;
    %689 = cast(%688, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
    %690 = %668.0;
    %691 = @func_5328() /* ty=Tensor[(2, 6, 9), bool] */;
    %692 = %676.2;
    %693 = %681.0;
    %694 = @func_5060() /* ty=Tensor[(2, 6, 9), bool] */;
    %695 = asinh(%689) /* ty=Tensor[(12, 6, 4), float32] */;
    (%690, %var_7853, %691, %692, %var_7862, %var_7863, %693, %694, %695)
  };
  %696(%var_7905, %var_7906, %var_7907) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(1352), float64], Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(1, 800), float64], Tensor[(1200), int8], Tensor[(15, 5, 16), int8], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32]) */
}

def @func_7254() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %699 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
    %697 = @func_6654() /* ty=Tensor[(2, 6, 9), bool] */;
    %698 = @func_6803() /* ty=Tensor[(2, 6, 9), bool] */;
    (%697, %698)
  };
  %699() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */
}

def @func_2482(%var_2480: Tensor[(16, 5, 10), float64]) -> (Tensor[(16, 5, 10), float64],) {
  @func_2479(%var_2480) /* ty=(Tensor[(16, 5, 10), float64],) */
}

def @func_1030(%var_1028: Tensor[(15, 5, 16), int8], %var_1029: Tensor[(15, 5, 16), int8]) -> (Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) {
  %707 = fn (%var_1006: Tensor[(15, 5, 16), int8], %var_1007: Tensor[(15, 5, 16), int8]) -> (Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) {
    %700 = cast(%var_1007, dtype="int8") /* ty=Tensor[(15, 5, 16), int8] */;
    %701 = shape_of(%var_1006, dtype="int32") /* ty=Tensor[(3), int32] */;
    %702 = cast(%var_1006, dtype="int8") /* ty=Tensor[(15, 5, 16), int8] */;
    %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %704 = cast(%var_1007, dtype="float64") /* ty=Tensor[(15, 5, 16), float64] */;
    %705 = multiply(%702, %703) /* ty=Tensor[(15, 5, 16), int8] */;
    %706 = sinh(%704) /* ty=Tensor[(15, 5, 16), float64] */;
    (%705, %706)
  };
  %707(%var_1028, %var_1029) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */
}

def @func_10272() -> (Tensor[(4, 15, 14), float32],) {
  @func_10270() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_8548() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %711 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
    %708 = @func_6580() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
    %709 = @func_6654() /* ty=Tensor[(2, 6, 9), bool] */;
    %710 = %708.1;
    (%709, %710)
  };
  %711() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */
}

def @func_10465(%var_10464: Tensor[(10, 16, 6), float64]) -> (Tensor[(10, 16, 6), float64], Tensor[(2, 6, 9), bool]) {
  %715 = fn (%var_10451: Tensor[(10, 16, 6), float64]) -> (Tensor[(10, 16, 6), float64], Tensor[(2, 6, 9), bool]) {
    %712 = cast(%var_10451, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
    %713 = acosh(%712) /* ty=Tensor[(10, 16, 6), float64] */;
    %714 = @func_9660() /* ty=Tensor[(2, 6, 9), bool] */;
    (%713, %714)
  };
  %715(%var_10464) /* ty=(Tensor[(10, 16, 6), float64], Tensor[(2, 6, 9), bool]) */
}

def @func_12111() -> Tensor[(2, 6, 9), bool] {
  @func_12109() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_6655() -> Tensor[(2, 6, 9), bool] {
  %717 = fn () -> Tensor[(2, 6, 9), bool] {
    %716 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %716.0
  };
  %717() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_6479() -> (Tensor[(2, 6, 9), bool],) {
  %718 = @func_6045() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) */;
  %719 = %718.1;
  (%719,)
}

def @func_11787() -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8]) {
  %720 = @func_8945() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(12, 6, 4), float32], Tensor[(15, 9, 4), int64], Tensor[(2, 6, 9), bool]) */;
  %721 = @func_7776() /* ty=Tensor[(2, 6, 9), bool] */;
  %722 = %720.1;
  (%721, %722)
}

def @func_12039() -> (Tensor[(12, 6, 4), uint64],) {
  %723 = @func_10738() /* ty=(Tensor[(12, 6, 4), uint64],) */;
  %724 = %723.0;
  (%724,)
}

def @func_6805() -> Tensor[(2, 6, 9), bool] {
  @func_6803() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_10830() -> Tensor[(600, 2), int8] {
  %726 = fn () -> Tensor[(600, 2), int8] {
    %725 = @func_5356() /* ty=(Tensor[(600, 2), int8],) */;
    %725.0
  };
  %726() /* ty=Tensor[(600, 2), int8] */
}

def @func_4613() -> (Tensor[(2, 6, 9), bool],) {
  @func_4611() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_5413(%var_5411: Tensor[(2, 6, 9), bool], %var_5412: Tensor[(1, 504), int8]) -> (Tensor[(2, 6, 9), float32], Tensor[(8, 7, 9), float32], Tensor[(1, 504), int8]) {
  @func_5409(%var_5411, %var_5412) /* ty=(Tensor[(2, 6, 9), float32], Tensor[(8, 7, 9), float32], Tensor[(1, 504), int8]) */
}

def @func_8964() -> Tensor[(1092), float32] {
  %728 = fn () -> Tensor[(1092), float32] {
    %727 = @func_6120() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1092), float32]) */;
    %727.2
  };
  %728() /* ty=Tensor[(1092), float32] */
}

def @func_7562(%var_7544: Tensor[(1575), int32]) -> (Tensor[(2, 6, 9), bool], Tensor[(160), uint8], Tensor[(1575), bool], Tensor[(1575), float32]) {
  %729 = @func_6580() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %730 = cast(meta[relay.Constant][57] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %731 = cast(meta[relay.Constant][57] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %732 = reshape(%730, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %733 = reshape(%731, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %734 = @func_2436(%732, %733) /* ty=(Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) */;
  %735 = cast(%var_7544, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %736 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(1575), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %737 = cast(meta[relay.Constant][57] /* ty=Tensor[(1575), int32] */, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?), bool] */;
  %739 = not_equal(%737, %738) /* ty=Tensor[(1575), bool] */;
  %740 = cast(meta[relay.Constant][57] /* ty=Tensor[(1575), int32] */, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %741 = shape_of(%739, dtype="int32") /* ty=Tensor[(1), int32] */;
  %742 = cast(%739, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?), bool] */;
  %744 = cast(%739, dtype="float32") /* ty=Tensor[(1575), float32] */;
  %745 = %729.1;
  %746 = %734.2;
  %747 = logical_and(%742, %743) /* ty=Tensor[(1575), bool] */;
  %748 = acosh(%744) /* ty=Tensor[(1575), float32] */;
  (%745, %746, %747, %748)
}

def @func_1844(%var_1810: Tensor[(1, 14, 11), float64], %var_1819: Tensor[(288), float32], %var_1828: Tensor[(4, 14, 11), float64]) -> (Tensor[(13, 2, 5), int16], Tensor[(130), int16], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(4, 14, 11), float64], Tensor[(12, 7, 13), float32]) {
  %749 = cast(meta[relay.Constant][58] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %750 = cast(%var_1819, dtype="float32") /* ty=Tensor[(288), float32] */;
  %751 = reshape(%749, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), int16] */;
  %752 = reshape(%750, newshape=[8, 36]) /* ty=Tensor[(8, 36), float32] */;
  %753 = @func_1300(%751, %752) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) */;
  %754 = cast(meta[relay.Constant][59] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %755 = reshape(%754, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %756 = cast(%var_1810, dtype="float64") /* ty=Tensor[(1, 14, 11), float64] */;
  %757 = rsqrt(%756) /* ty=Tensor[(1, 14, 11), float64] */;
  %758 = cast(%757, dtype="float64") /* ty=Tensor[(1, 14, 11), float64] */;
  %759 = cast(%var_1828, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %760 = cast(meta[relay.Constant][59] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %761 = reshape(%760, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %762 = %753.0;
  %763 = @func_109(%755) /* ty=Tensor[(12, 7, 13), float32] */;
  %764 = minimum(%758, %759) /* ty=Tensor[(4, 14, 11), float64] */;
  %765 = @func_109(%761) /* ty=Tensor[(12, 7, 13), float32] */;
  (%762, meta[relay.Constant][58] /* ty=Tensor[(130), int16] */, %var_1819, %763, meta[relay.Constant][59] /* ty=Tensor[(1092), float32] */, %764, %765)
}

def @func_9101() -> Tensor[(2, 6, 9), bool] {
  %767 = fn () -> Tensor[(2, 6, 9), bool] {
    %766 = @func_6784() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %766.0
  };
  %767() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_9258() -> Tensor[(2, 6, 9), bool] {
  @func_5328() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_9057() -> Tensor[(2, 6, 9), bool] {
  %769 = fn () -> Tensor[(2, 6, 9), bool] {
    %768 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %768.0
  };
  %769() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_7491() -> (Tensor[(600, 2), int8],) {
  %770 = @func_5356() /* ty=(Tensor[(600, 2), int8],) */;
  %771 = %770.0;
  (%771,)
}

def @func_9607() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(1575), bool], Tensor[(15, 5, 16), int8]) {
  %772 = @func_9324() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
  %773 = @func_6784() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %774 = @func_5117() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) */;
  %775 = %774.2;
  %776 = cast(%775, dtype="int8") /* ty=Tensor[(600, 2), int8] */;
  %777 = reshape(%776, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %778 = @func_5947(%777) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int64], Tensor[(1200), int8], Tensor[(1575), int32]) */;
  %779 = %778.3;
  %780 = cast(meta[relay.Constant][60] /* ty=Tensor[(1575), int32] */, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %781 = shape_of(%779, dtype="int32") /* ty=Tensor[(1), int32] */;
  %782 = cast(%779, dtype="bool") /* ty=Tensor[(1575), bool] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?), bool] */;
  %784 = @func_5117() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) */;
  %785 = %772.0;
  %786 = %773.0;
  %787 = less_equal(%782, %783) /* ty=Tensor[(1575), bool] */;
  %788 = %784.1;
  (%785, %786, %775, %787, %788)
}

def @func_6189(%var_6155: Tensor[(440), float32], %var_6178: Tensor[(1456), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(5, 4, 5), float64], float32, Tensor[(440), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) {
  %789 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %790 = cast(5.7811f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %791 = cast(%var_6155, dtype="float32") /* ty=Tensor[(440), float32] */;
  %792 = reshape(%790, newshape=[]) /* ty=float32 */;
  %793 = reshape(%791, newshape=[440, 1]) /* ty=Tensor[(440, 1), float32] */;
  %794 = @func_2059(%792, %793) /* ty=(Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(11, 5, 8), float32], float32, Tensor[(440, 1), float32]) */;
  %795 = cast(%var_6178, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %796 = reshape(%795, newshape=[13, 16, 7]) /* ty=Tensor[(13, 16, 7), float64] */;
  %797 = @func_3213(%796) /* ty=(Tensor[(13, 16, 7), float32],) */;
  %798 = %789.0;
  %799 = %794.0;
  %800 = %797.0;
  (%798, %799, 5.7811f /* ty=float32 */, %var_6155, %800, %var_6178)
}

def @func_11069(%var_11068: Tensor[(1, 1456), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(440), float32], Tensor[(1352), float64], Tensor[(1, 1456), float64]) {
  %808 = fn (%var_11048: Tensor[(1, 1456), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(440), float32], Tensor[(1352), float64], Tensor[(1, 1456), float64]) {
    %801 = cast(meta[relay.Constant][61] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
    %802 = cast(%var_11048, dtype="float64") /* ty=Tensor[(1, 1456), float64] */;
    %803 = reshape(%801, newshape=[1352]) /* ty=Tensor[(1352), float64] */;
    %804 = reshape(%802, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
    %805 = @func_9971(%803, %804) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32], Tensor[(1200), int8], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1352), float32], Tensor[(2, 6, 9), bool], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(2, 6, 9), bool]) */;
    %806 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
    %807 = %805.3;
    (%806, %807, meta[relay.Constant][61] /* ty=Tensor[(1352), float64] */, %var_11048)
  };
  %808(%var_11068) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(440), float32], Tensor[(1352), float64], Tensor[(1, 1456), float64]) */
}

def @func_4812() -> (Tensor[(2, 6, 9), bool],) {
  @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */
}

def @func_10270() -> (Tensor[(4, 15, 14), float32],) {
  %809 = cast(meta[relay.Constant][62] /* ty=Tensor[(4, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %810 = log(%809) /* ty=Tensor[(4, 15, 14), float32] */;
  (%810,)
}

def @func_11233() -> (Tensor[(2, 6, 9), bool], Tensor[(1575), float32], Tensor[(1575), float64]) {
  %811 = @func_8374() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %812 = @func_9607() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(1575), bool], Tensor[(15, 5, 16), int8]) */;
  %813 = %812.3;
  %814 = cast(%813, dtype="float32") /* ty=Tensor[(1575), float32] */;
  %815 = cast(%813, dtype="float64") /* ty=Tensor[(1575), float64] */;
  %816 = %811.0;
  %817 = sin(%814) /* ty=Tensor[(1575), float32] */;
  %818 = log2(%815) /* ty=Tensor[(1575), float64] */;
  (%816, %817, %818)
}

def @func_8150(%var_8148: Tensor[(392), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(392), float64]) {
  @func_8147(%var_8148) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(392), float64]) */
}

def @func_7065(%var_7031: Tensor[(1200), int8], %var_7048: Tensor[(1, 160), uint8]) -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(1200), int8], Tensor[(10, 4, 4), float64], Tensor[(1, 160), uint8], Tensor[(2, 6, 9), float64]) {
  %819 = cast(%var_7031, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %820 = cast(%var_7031, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %821 = reshape(%819, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %822 = reshape(%820, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %823 = @func_1027(%821, %822) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
  %824 = cast(%var_7048, dtype="uint8") /* ty=Tensor[(1, 160), uint8] */;
  %825 = cast(%var_7048, dtype="uint8") /* ty=Tensor[(1, 160), uint8] */;
  %826 = reshape(%824, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
  %827 = reshape(%825, newshape=[10, 4, 4]) /* ty=Tensor[(10, 4, 4), uint8] */;
  %828 = @func_1996(%826, %827) /* ty=(Tensor[(10, 4, 4), bool], Tensor[(10, 4, 4), float64], Tensor[(10, 4, 4), float32]) */;
  %829 = @func_6922() /* ty=Tensor[(2, 6, 9), bool] */;
  %830 = cast(%829, dtype="float64") /* ty=Tensor[(2, 6, 9), float64] */;
  %831 = @func_5328() /* ty=Tensor[(2, 6, 9), bool] */;
  %832 = %823.0;
  %833 = %828.1;
  %834 = log10(%830) /* ty=Tensor[(2, 6, 9), float64] */;
  (%831, %832, %var_7031, %833, %var_7048, %834)
}

def @func_10951() -> (Tensor[(1575), bool],) {
  %837 = fn () -> (Tensor[(1575), bool],) {
    %835 = @func_9607() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(1575), bool], Tensor[(15, 5, 16), int8]) */;
    %836 = %835.3;
    (%836,)
  };
  %837() /* ty=(Tensor[(1575), bool],) */
}

def @func_11511() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(960, ?), uint16], Tensor[(600, 2), int8], Tensor[(2, 6, 9), bool]) {
  %857 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(960, ?), uint16], Tensor[(600, 2), int8], Tensor[(2, 6, 9), bool]) {
    %838 = @func_7253() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
    %839 = cast(meta[relay.Constant][63] /* ty=Tensor[(960, 1), float64] */, dtype="float64") /* ty=Tensor[(960, 1), float64] */;
    %840 = reshape(%839, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float64] */;
    %841 = @func_10463(%840) /* ty=(Tensor[(10, 16, 6), float64], Tensor[(2, 6, 9), bool]) */;
    %842 = cast(meta[relay.Constant][63] /* ty=Tensor[(960, 1), float64] */, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
    %843 = acosh(%842) /* ty=Tensor[(960, 1), float32] */;
    %844 = cast(%843, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
    %845 = acos(%844) /* ty=Tensor[(960, 1), float32] */;
    %846 = cast(%843, dtype="uint16") /* ty=Tensor[(960, 1), uint16] */;
    %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(2), int32] */;
    %848 = cast(%845, dtype="uint16") /* ty=Tensor[(960, 1), uint16] */;
    %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %850 = @func_10260() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8]) */;
    %851 = @func_9795() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
    %852 = %838.0;
    %853 = %841.1;
    %854 = bitwise_or(%848, %849) /* ty=Tensor[(960, ?), uint16] */;
    %855 = %850.1;
    %856 = %851.0;
    (%852, %853, %854, %855, %856)
  };
  %857() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(960, ?), uint16], Tensor[(600, 2), int8], Tensor[(2, 6, 9), bool]) */
}

def @func_2979(%var_2977: Tensor[(6, 9, 7), uint32], %var_2978: Tensor[(6, 9, 7), uint32]) -> Tensor[(6, 9, 7), uint8] {
  @func_2975(%var_2977, %var_2978) /* ty=Tensor[(6, 9, 7), uint8] */
}

def @func_12336() -> (Tensor[(4, 15, 14), float32], Tensor[(800), float64], Tensor[(800), float64]) {
  @func_12334() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(800), float64], Tensor[(800), float64]) */
}

def @func_2063(%var_2061: float32, %var_2062: Tensor[(440, 1), float32]) -> (Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(11, 5, 8), float32], float32, Tensor[(440, 1), float32]) {
  @func_2059(%var_2061, %var_2062) /* ty=(Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(11, 5, 8), float32], float32, Tensor[(440, 1), float32]) */
}

def @func_6445(%var_6443: Tensor[(154), float64], %var_6444: Tensor[(288), float32]) -> (Tensor[(600, 2), float32], Tensor[(12, 7, 13), float32], Tensor[(154), float64], Tensor[(288), float32], Tensor[(616), float64]) {
  %870 = fn (%var_6436: Tensor[(154), float64], %var_6437: Tensor[(288), float32]) -> (Tensor[(600, 2), float32], Tensor[(12, 7, 13), float32], Tensor[(154), float64], Tensor[(288), float32], Tensor[(616), float64]) {
    %858 = @func_5117() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(600, 2), int8]) */;
    %859 = %858.2;
    %860 = cast(%859, dtype="float32") /* ty=Tensor[(600, 2), float32] */;
    %861 = cast(%var_6436, dtype="float64") /* ty=Tensor[(154), float64] */;
    %862 = cast(%var_6437, dtype="float32") /* ty=Tensor[(288), float32] */;
    %863 = cast(meta[relay.Constant][64] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %864 = reshape(%861, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
    %865 = reshape(%862, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %866 = reshape(%863, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
    %867 = @func_1844(%864, %865, %866) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(130), int16], Tensor[(288), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(4, 14, 11), float64], Tensor[(12, 7, 13), float32]) */;
    %868 = sigmoid(%860) /* ty=Tensor[(600, 2), float32] */;
    %869 = %867.6;
    (%868, %869, %var_6436, %var_6437, meta[relay.Constant][64] /* ty=Tensor[(616), float64] */)
  };
  %870(%var_6443, %var_6444) /* ty=(Tensor[(600, 2), float32], Tensor[(12, 7, 13), float32], Tensor[(154), float64], Tensor[(288), float32], Tensor[(616), float64]) */
}

def @func_10105(%var_10103: Tensor[(392, 1), float64], %var_10104: Tensor[(1092), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(7, 56), float64], Tensor[(392, 1), float64], Tensor[(8, 36), float32], Tensor[(130), int16], Tensor[(2, 144), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(2, 6, 9), bool]) {
  %887 = fn (%var_10064: Tensor[(392, 1), float64], %var_10090: Tensor[(1092), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(7, 56), float64], Tensor[(392, 1), float64], Tensor[(8, 36), float32], Tensor[(130), int16], Tensor[(2, 144), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(2, 6, 9), bool]) {
    %871 = cast(%var_10064, dtype="float64") /* ty=Tensor[(392, 1), float64] */;
    %872 = reshape(%871, newshape=[7, 56]) /* ty=Tensor[(7, 56), float64] */;
    %873 = @func_6878(%872) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(7, 56), float64]) */;
    %874 = cast(meta[relay.Constant][65] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
    %875 = cast(meta[relay.Constant][66] /* ty=Tensor[(2, 144), float32] */, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
    %876 = reshape(%874, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), int16] */;
    %877 = reshape(%875, newshape=[8, 36]) /* ty=Tensor[(8, 36), float32] */;
    %878 = @func_1300(%876, %877) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) */;
    %879 = cast(%var_10090, dtype="float32") /* ty=Tensor[(1092), float32] */;
    %880 = reshape(%879, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
    %881 = @func_9324() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
    %882 = @func_7689() /* ty=Tensor[(2, 6, 9), bool] */;
    %883 = %873.2;
    %884 = %878.2;
    %885 = @func_109(%880) /* ty=Tensor[(12, 7, 13), float32] */;
    %886 = %881.0;
    (%882, %883, %var_10064, %884, meta[relay.Constant][65] /* ty=Tensor[(130), int16] */, meta[relay.Constant][66] /* ty=Tensor[(2, 144), float32] */, %885, %var_10090, %886)
  };
  %887(%var_10103, %var_10104) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(7, 56), float64], Tensor[(392, 1), float64], Tensor[(8, 36), float32], Tensor[(130), int16], Tensor[(2, 144), float32], Tensor[(12, 7, 13), float32], Tensor[(1092), float32], Tensor[(2, 6, 9), bool]) */
}

def @func_9661() -> Tensor[(2, 6, 9), bool] {
  %889 = fn () -> Tensor[(2, 6, 9), bool] {
    %888 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
    %888.0
  };
  %889() /* ty=Tensor[(2, 6, 9), bool] */
}

def @func_7294(%var_7293: Tensor[(378), uint32]) -> (Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32]) {
  %897 = fn (%var_7289: Tensor[(378), uint32]) -> (Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32]) {
    %890 = @func_6512() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %891 = cast(%var_7289, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %892 = cast(%var_7289, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %893 = reshape(%891, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint32] */;
    %894 = reshape(%892, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint32] */;
    %895 = %890.0;
    %896 = @func_2975(%893, %894) /* ty=Tensor[(6, 9, 7), uint8] */;
    (%895, %896, %var_7289)
  };
  %897(%var_7293) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32]) */
}

def @main(%var_12422: Tensor[(13, 6, 4), float32], %var_12423: Tensor[(13, 6, 4), float32]) -> (Tensor[(13, 6, 4), bool],) {
  %898 = cast(%var_12423, dtype="float32") /* ty=Tensor[(13, 6, 4), float32] */;
  %899 = shape_of(%var_12422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%var_12422, dtype="float32") /* ty=Tensor[(13, 6, 4), float32] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %902 = divide(%900, %901) /* ty=Tensor[(13, 6, 4), float32] */;
  %903 = cast(%902, dtype="float64") /* ty=Tensor[(13, 6, 4), float64] */;
  %904 = rsqrt(%903) /* ty=Tensor[(13, 6, 4), float64] */;
  %905 = cast(%902, dtype="bool") /* ty=Tensor[(13, 6, 4), bool] */;
  %906 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %907 = cast(%904, dtype="bool") /* ty=Tensor[(13, 6, 4), bool] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %909 = greater_equal(%907, %908) /* ty=Tensor[(13, 6, 4), bool] */;
  (%909,)
}

def @func_12334() -> (Tensor[(4, 15, 14), float32], Tensor[(800), float64], Tensor[(800), float64]) {
  %910 = @func_10270() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %911 = cast(meta[relay.Constant][67] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %912 = reshape(%911, newshape=[200, 4]) /* ty=Tensor[(200, 4), float64] */;
  %913 = @func_8844(%912) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(288), uint32], Tensor[(200, 4), float64], Tensor[(1200), int8]) */;
  %914 = %910.0;
  %915 = %913.1;
  (%914, %915, meta[relay.Constant][67] /* ty=Tensor[(800), float64] */)
}

def @func_3215(%var_3214: Tensor[(13, 16, 7), float64]) -> (Tensor[(13, 16, 7), float32],) {
  %920 = fn (%var_3196: Tensor[(13, 16, 7), float64]) -> (Tensor[(13, 16, 7), float32],) {
    %916 = cast(%var_3196, dtype="float64") /* ty=Tensor[(13, 16, 7), float64] */;
    %917 = sinh(%916) /* ty=Tensor[(13, 16, 7), float64] */;
    %918 = cast(%917, dtype="float32") /* ty=Tensor[(13, 16, 7), float32] */;
    %919 = cosh(%918) /* ty=Tensor[(13, 16, 7), float32] */;
    (%919,)
  };
  %920(%var_3214) /* ty=(Tensor[(13, 16, 7), float32],) */
}

def @func_109(%var_105: Tensor[(12, 7, 13), float32]) -> Tensor[(12, 7, 13), float32] {
  %921 = cast(%var_105, dtype="float32") /* ty=Tensor[(12, 7, 13), float32] */;
  cos(%921) /* ty=Tensor[(12, 7, 13), float32] */
}

def @func_6512() -> (Tensor[(2, 6, 9), bool],) {
  %922 = @func_5745() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %923 = %922.0;
  (%923,)
}

def @func_3889(%var_3888: Tensor[(14, 13, 11), float64]) -> Tensor[(14, 13, 11), float64] {
  %925 = fn (%var_3869: Tensor[(14, 13, 11), float64]) -> Tensor[(14, 13, 11), float64] {
    %924 = cast(%var_3869, dtype="float64") /* ty=Tensor[(14, 13, 11), float64] */;
    erf(%924) /* ty=Tensor[(14, 13, 11), float64] */
  };
  %925(%var_3888) /* ty=Tensor[(14, 13, 11), float64] */
}

def @func_7609() -> (Tensor[(12, 6, 4), float32], Tensor[(2, 6, 9), bool]) {
  @func_7607() /* ty=(Tensor[(12, 6, 4), float32], Tensor[(2, 6, 9), bool]) */
}

def @func_8708(%var_8706: Tensor[(15, 13, 16), float32]) -> (Tensor[(15, 13, 16), float64], Tensor[(9, 1, 10), int64], int64, Tensor[(90), int64], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(15, 13, 16), float64], Tensor[(12, 6, 4), float32], Tensor[(196, 2), float64], Tensor[(15, 13, 16), float32]) {
  @func_8705(%var_8706) /* ty=(Tensor[(15, 13, 16), float64], Tensor[(9, 1, 10), int64], int64, Tensor[(90), int64], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(15, 13, 16), float64], Tensor[(12, 6, 4), float32], Tensor[(196, 2), float64], Tensor[(15, 13, 16), float32]) */
}

def @func_5409(%var_5367: Tensor[(2, 6, 9), bool], %var_5388: Tensor[(1, 504), int8]) -> (Tensor[(2, 6, 9), float32], Tensor[(8, 7, 9), float32], Tensor[(1, 504), int8]) {
  %926 = @func_5085() /* ty=Tensor[(2, 6, 9), bool] */;
  %927 = cast(%var_5367, dtype="uint32") /* ty=Tensor[(2, 6, 9), uint32] */;
  %928 = shape_of(%926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%926, dtype="uint32") /* ty=Tensor[(2, 6, 9), uint32] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %931 = multiply(%929, %930) /* ty=Tensor[(2, 6, 9), uint32] */;
  %932 = cast(%931, dtype="float32") /* ty=Tensor[(2, 6, 9), float32] */;
  %933 = cast(%var_5388, dtype="int8") /* ty=Tensor[(1, 504), int8] */;
  %934 = reshape(%933, newshape=[8, 7, 9]) /* ty=Tensor[(8, 7, 9), int8] */;
  %935 = @func_1639(%934) /* ty=(Tensor[(8, 7, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(288), float32], Tensor[(8, 7, 9), float32]) */;
  %936 = log(%932) /* ty=Tensor[(2, 6, 9), float32] */;
  %937 = %935.3;
  (%936, %937, %var_5388)
}

def @func_9324() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %938 = @func_6922() /* ty=Tensor[(2, 6, 9), bool] */;
  %939 = @func_7108() /* ty=Tensor[(2, 6, 9), bool] */;
  (%938, %939)
}

def @func_9121() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  @func_9119() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */
}

def @func_9119() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %940 = @func_8945() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(12, 6, 4), float32], Tensor[(15, 9, 4), int64], Tensor[(2, 6, 9), bool]) */;
  %941 = @func_9004() /* ty=(Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32]) */;
  %942 = %940.0;
  %943 = %941.1;
  (%942, %943)
}

def @func_2440(%var_2438: Tensor[(15, 15, 7), int32], %var_2439: Tensor[(15, 15, 7), int32]) -> (Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) {
  @func_2436(%var_2438, %var_2439) /* ty=(Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) */
}

def @func_10426() -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8]) {
  %944 = @func_4611() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %945 = @func_9607() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(1575), bool], Tensor[(15, 5, 16), int8]) */;
  %946 = %944.0;
  %947 = %945.4;
  (%946, %947)
}

def @func_10262() -> (Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8]) {
  @func_10260() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8]) */
}

def @func_9796() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %951 = fn () -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
    %948 = @func_5876() /* ty=(Tensor[(2, 6, 9), bool],) */;
    %949 = %948.0;
    %950 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
    (%949, %950)
  };
  %951() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */
}

def @func_10428() -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8]) {
  @func_10426() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8]) */
}

def @func_2059(%var_2056: float32, %var_2057: Tensor[(440, 1), float32]) -> (Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(11, 5, 8), float32], float32, Tensor[(440, 1), float32]) {
  %952 = cast(meta[relay.Constant][68] /* ty=Tensor[(5, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 4, 5), float32] */;
  %953 = sigmoid(%952) /* ty=Tensor[(5, 4, 5), float32] */;
  %954 = cast(meta[relay.Constant][68] /* ty=Tensor[(5, 4, 5), float32] */, dtype="float64") /* ty=Tensor[(5, 4, 5), float64] */;
  %955 = shape_of(%953, dtype="int32") /* ty=Tensor[(3), int32] */;
  %956 = cast(%953, dtype="float64") /* ty=Tensor[(5, 4, 5), float64] */;
  %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %958 = cast(meta[relay.Constant][68] /* ty=Tensor[(5, 4, 5), float32] */, dtype="float64") /* ty=Tensor[(5, 4, 5), float64] */;
  %959 = cast(meta[relay.Constant][68] /* ty=Tensor[(5, 4, 5), float32] */, dtype="float64") /* ty=Tensor[(5, 4, 5), float64] */;
  %960 = cast(%var_2056, dtype="float32") /* ty=float32 */;
  %961 = cast(%var_2057, dtype="float32") /* ty=Tensor[(440, 1), float32] */;
  %962 = reshape(%960, newshape=[]) /* ty=float32 */;
  %963 = reshape(%961, newshape=[11, 5, 8]) /* ty=Tensor[(11, 5, 8), float32] */;
  %964 = floor_mod(%956, %957) /* ty=Tensor[(5, 4, 5), float64] */;
  %965 = atan(%958) /* ty=Tensor[(5, 4, 5), float64] */;
  %966 = acos(%959) /* ty=Tensor[(5, 4, 5), float64] */;
  %967 = @func_1549(%962, %963) /* ty=Tensor[(11, 5, 8), float32] */;
  (%964, %965, %966, %967, %var_2056, %var_2057)
}

def @func_10866(%var_10864: Tensor[(800), float64], %var_10865: Tensor[(1200), int8]) -> (Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1092), bool], Tensor[(1575, 1), int32]) {
  %982 = fn (%var_10836: Tensor[(800), float64], %var_10837: Tensor[(1200), int8]) -> (Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1092), bool], Tensor[(1575, 1), int32]) {
    %968 = @func_8963() /* ty=Tensor[(1092), float32] */;
    %969 = cast(meta[relay.Constant][69] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %970 = cast(%var_10836, dtype="float64") /* ty=Tensor[(800), float64] */;
    %971 = cast(%var_10837, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %972 = reshape(%969, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %973 = reshape(%970, newshape=[800]) /* ty=Tensor[(800), float64] */;
    %974 = reshape(%971, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %975 = @func_7441(%972, %973, %974) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(6, 9, 7), uint8], Tensor[(378), uint32], float32, Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8]) */;
    %976 = %975.3;
    %977 = cast(%968, dtype="bool") /* ty=Tensor[(1092), bool] */;
    %978 = cast(%976, dtype="bool") /* ty=bool */;
    %979 = @func_9004() /* ty=(Tensor[(1575), int32], Tensor[(2, 6, 9), bool], Tensor[(1575, 1), int32]) */;
    %980 = logical_or(%977, %978) /* ty=Tensor[(1092), bool] */;
    %981 = %979.2;
    (meta[relay.Constant][69] /* ty=Tensor[(288), uint32] */, %var_10836, %var_10837, %980, %981)
  };
  %982(%var_10864, %var_10865) /* ty=(Tensor[(288), uint32], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1092), bool], Tensor[(1575, 1), int32]) */
}

def @func_1642(%var_1640: Tensor[(8, 7, 9), int8]) -> (Tensor[(8, 7, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(288), float32], Tensor[(8, 7, 9), float32]) {
  @func_1639(%var_1640) /* ty=(Tensor[(8, 7, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(288), float32], Tensor[(8, 7, 9), float32]) */
}

def @func_4961(%var_4959: Tensor[(455), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 10, 12), bool], Tensor[(455), int8], Tensor[(288), float32]) {
  @func_4958(%var_4959) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 10, 12), bool], Tensor[(455), int8], Tensor[(288), float32]) */
}

def @func_6803() -> Tensor[(2, 6, 9), bool] {
  %983 = @func_6512() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %983.0
}

def @func_9855(%var_9854: Tensor[(440), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(440), float32]) {
  %989 = fn (%var_9842: Tensor[(440), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(440), float32]) {
    %984 = cast(%var_9842, dtype="float32") /* ty=Tensor[(440), float32] */;
    %985 = reshape(%984, newshape=[440]) /* ty=Tensor[(440), float32] */;
    %986 = @func_6416(%985) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(440, 1), float32], float32, Tensor[(440), float32]) */;
    %987 = @func_4898() /* ty=Tensor[(2, 6, 9), bool] */;
    %988 = %986.0;
    (%987, %988, %var_9842)
  };
  %989(%var_9854) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(440), float32]) */
}

def @func_9609() -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(1575), bool], Tensor[(15, 5, 16), int8]) {
  @func_9607() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(600, 2), int8], Tensor[(1575), bool], Tensor[(15, 5, 16), int8]) */
}

def @func_11398(%var_11396: Tensor[(11, 14), float64], %var_11397: Tensor[(600, 2), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(11, 14), float64], Tensor[(288), float32], Tensor[(600, 2), bool]) {
  %1005 = fn (%var_11379: Tensor[(11, 14), float64], %var_11385: Tensor[(600, 2), float32]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(11, 14), float64], Tensor[(288), float32], Tensor[(600, 2), bool]) {
    %990 = @func_6045() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(1575), int32], Tensor[(392), float64]) */;
    %991 = @func_9119() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) */;
    %992 = cast(%var_11379, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
    %993 = cast(meta[relay.Constant][70] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %994 = reshape(%992, newshape=[154]) /* ty=Tensor[(154), float64] */;
    %995 = reshape(%993, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %996 = @func_6442(%994, %995) /* ty=(Tensor[(600, 2), float32], Tensor[(12, 7, 13), float32], Tensor[(154), float64], Tensor[(288), float32], Tensor[(616), float64]) */;
    %997 = %996.0;
    %998 = cast(%var_11385, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
    %999 = shape_of(%997, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1000 = cast(%997, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
    %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1002 = %990.1;
    %1003 = %991.0;
    %1004 = logical_and(%1000, %1001) /* ty=Tensor[(600, 2), bool] */;
    (%1002, %1003, %var_11379, meta[relay.Constant][70] /* ty=Tensor[(288), float32] */, %1004)
  };
  %1005(%var_11396, %var_11397) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(11, 14), float64], Tensor[(288), float32], Tensor[(600, 2), bool]) */
}

def @func_7069(%var_7067: Tensor[(1200), int8], %var_7068: Tensor[(1, 160), uint8]) -> (Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(1200), int8], Tensor[(10, 4, 4), float64], Tensor[(1, 160), uint8], Tensor[(2, 6, 9), float64]) {
  @func_7065(%var_7067, %var_7068) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(15, 5, 16), int8], Tensor[(1200), int8], Tensor[(10, 4, 4), float64], Tensor[(1, 160), uint8], Tensor[(2, 6, 9), float64]) */
}

def @func_10582(%var_10542: Tensor[(160), uint8]) -> (Tensor[(2, 6, 9), bool], Tensor[(160), uint8], Tensor[(160), uint8], Tensor[(1575, ?), float64], Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool]) {
  %1006 = @func_8454() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(16, 5, 10), float64], Tensor[(800), float64], Tensor[(600, 2), float64]) */;
  %1007 = cast(%var_10542, dtype="uint8") /* ty=Tensor[(160), uint8] */;
  %1008 = reshape(%1007, newshape=[160]) /* ty=Tensor[(160), uint8] */;
  %1009 = @func_5143(%1008) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(10, 4, 4), float32], Tensor[(160), uint8]) */;
  %1010 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
  %1011 = %1010.2;
  %1012 = cast(%1011, dtype="float64") /* ty=Tensor[(1575, 1), float64] */;
  %1013 = log(%1012) /* ty=Tensor[(1575, 1), float64] */;
  %1014 = cast(%1011, dtype="float32") /* ty=Tensor[(1575, 1), float32] */;
  %1015 = shape_of(%1013, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1016 = cast(%1013, dtype="float32") /* ty=Tensor[(1575, 1), float32] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1018 = floor_divide(%1016, %1017) /* ty=Tensor[(1575, ?), float32] */;
  %1019 = cast(%1018, dtype="float64") /* ty=Tensor[(1575, ?), float64] */;
  %1020 = @func_5745() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %1021 = %1006.0;
  %1022 = %1009.2;
  %1023 = sin(%1019) /* ty=Tensor[(1575, ?), float64] */;
  %1024 = @func_9660() /* ty=Tensor[(2, 6, 9), bool] */;
  %1025 = %1020.0;
  (%1021, %1022, %var_10542, %1023, %1024, %1025)
}

def @func_8304(%var_8302: Tensor[(2, 6, 9), bool], %var_8303: Tensor[(13, 35), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(288, 1), float32], Tensor[(2, 10, 12), int64], Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(16, 5, 10), float64], Tensor[(1, 800), float64], Tensor[(288), float32], Tensor[(13, 35), int8], Tensor[(2, 6, 9), bool], Tensor[(1352), float64], Tensor[(2, 6, 9), bool]) {
  @func_8300(%var_8302, %var_8303) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(2, 6, 9), bool], Tensor[(288, 1), float32], Tensor[(2, 10, 12), int64], Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(16, 5, 10), float64], Tensor[(1, 800), float64], Tensor[(288), float32], Tensor[(13, 35), int8], Tensor[(2, 6, 9), bool], Tensor[(1352), float64], Tensor[(2, 6, 9), bool]) */
}

def @func_133(%var_131: Tensor[(12, 6, 4), float32]) -> Tensor[(12, 6, 4), float32] {
  @func_130(%var_131) /* ty=Tensor[(12, 6, 4), float32] */
}

def @func_7607() -> (Tensor[(12, 6, 4), float32], Tensor[(2, 6, 9), bool]) {
  %1026 = @func_6321() /* ty=(Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32], Tensor[(1575, 1), int32]) */;
  %1027 = @func_6512() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %1028 = %1026.1;
  %1029 = %1027.0;
  (%1028, %1029)
}

def @func_1304(%var_1302: Tensor[(13, 2, 5), int16], %var_1303: Tensor[(8, 36), float32]) -> (Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) {
  @func_1300(%var_1302, %var_1303) /* ty=(Tensor[(13, 2, 5), int16], Tensor[(12, 6, 4), float32], Tensor[(8, 36), float32]) */
}

def @func_9971(%var_9935: Tensor[(1352), float64], %var_9959: Tensor[(1456), float64]) -> (Tensor[(2, 6, 9), bool], Tensor[(11, 5, 8), float32], float32, Tensor[(440), float32], Tensor[(1200), int8], Tensor[(800), float64], Tensor[(1200), int8], Tensor[(1352), float32], Tensor[(2, 6, 9), bool], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(2, 6, 9), bool]) {
  %1030 = cast(0.562433f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1031 = cast(meta[relay.Constant][71] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %1032 = reshape(%1030, newshape=[]) /* ty=float32 */;
  %1033 = reshape(%1031, newshape=[440, 1]) /* ty=Tensor[(440, 1), float32] */;
  %1034 = @func_2059(%1032, %1033) /* ty=(Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(5, 4, 5), float64], Tensor[(11, 5, 8), float32], float32, Tensor[(440, 1), float32]) */;
  %1035 = cast(%var_9935, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %1036 = cast(meta[relay.Constant][72] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %1037 = cast(meta[relay.Constant][73] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %1038 = reshape(%1035, newshape=[1352]) /* ty=Tensor[(1352), float64] */;
  %1039 = reshape(%1036, newshape=[1, 800]) /* ty=Tensor[(1, 800), float64] */;
  %1040 = reshape(%1037, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %1041 = @func_7904(%1038, %1039, %1040) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(1352), float64], Tensor[(2, 6, 9), bool], Tensor[(800), float64], Tensor[(1, 800), float64], Tensor[(1200), int8], Tensor[(15, 5, 16), int8], Tensor[(2, 6, 9), bool], Tensor[(12, 6, 4), float32]) */;
  %1042 = cast(%var_9935, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %1043 = @func_5679() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %1044 = cast(meta[relay.Constant][71] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %1045 = cast(%var_9959, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %1046 = reshape(%1044, newshape=[440]) /* ty=Tensor[(440), float32] */;
  %1047 = reshape(%1045, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
  %1048 = @func_6189(%1046, %1047) /* ty=(Tensor[(2, 6, 9), bool], Tensor[(5, 4, 5), float64], float32, Tensor[(440), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) */;
  %1049 = @func_6784() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %1050 = @func_9056() /* ty=Tensor[(2, 6, 9), bool] */;
  %1051 = %1034.3;
  %1052 = %1041.5;
  %1053 = cos(%1042) /* ty=Tensor[(1352), float32] */;
  %1054 = %1043.0;
  %1055 = %1048.4;
  %1056 = %1049.0;
  (%1050, %1051, 0.562433f /* ty=float32 */, meta[relay.Constant][71] /* ty=Tensor[(440), float32] */, %1052, meta[relay.Constant][72] /* ty=Tensor[(800), float64] */, meta[relay.Constant][73] /* ty=Tensor[(1200), int8] */, %1053, %1054, %1055, %var_9959, %1056)
}

def @func_5301(%var_5253: Tensor[(1200), int8], %var_5265: Tensor[(1575), int32], %var_5270: Tensor[(15, 5, 16), int8]) -> (Tensor[(2, 6, 9), bool], Tensor[(1200), int8], Tensor[(12, 6, 4), float32], Tensor[(24, 12), float32], Tensor[(15, 15, 7), uint64], Tensor[(15, 5, 16), int64], Tensor[(12, 6, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64], Tensor[(1575), float32]) {
  %1057 = @func_4810() /* ty=(Tensor[(2, 6, 9), bool],) */;
  %1058 = cast(meta[relay.Constant][74] /* ty=Tensor[(24, 12), float32] */, dtype="float32") /* ty=Tensor[(24, 12), float32] */;
  %1059 = reshape(%1058, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %1060 = cast(%var_5265, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %1061 = cast(%var_5265, dtype="int32") /* ty=Tensor[(1575), int32] */;
  %1062 = reshape(%1060, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %1063 = reshape(%1061, newshape=[15, 15, 7]) /* ty=Tensor[(15, 15, 7), int32] */;
  %1064 = @func_2436(%1062, %1063) /* ty=(Tensor[(15, 15, 7), uint64], Tensor[(10, 4, 4), float64], Tensor[(160), uint8], Tensor[(15, 15, 7), float64], Tensor[(12, 6, 4), float32], Tensor[(130), int16], Tensor[(288), float32]) */;
  %1065 = cast(%var_5253, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %1066 = cast(%var_5253, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %1067 = reshape(%1065, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %1068 = reshape(%1066, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), int8] */;
  %1069 = @func_1027(%1067, %1068) /* ty=(Tensor[(15, 5, 16), int8], Tensor[(15, 5, 16), float64]) */;
  %1070 = %1069.0;
  %1071 = cast(%var_5270, dtype="int64") /* ty=Tensor[(15, 5, 16), int64] */;
  %1072 = shape_of(%1070, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1073 = cast(%1070, dtype="int64") /* ty=Tensor[(15, 5, 16), int64] */;
  %1074 = dyn.reshape(%1071, %1072, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1075 = @func_130(%1059) /* ty=Tensor[(12, 6, 4), float32] */;
  %1076 = cast(%1075, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  %1077 = reshape(%1076, newshape=[12, 6, 4]) /* ty=Tensor[(12, 6, 4), float32] */;
  %1078 = cast(meta[relay.Constant][75] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %1079 = reshape(%1078, newshape=[13, 16, 7]) /* ty=Tensor[(13, 16, 7), float64] */;
  %1080 = @func_3213(%1079) /* ty=(Tensor[(13, 16, 7), float32],) */;
  %1081 = cast(%var_5265, dtype="float32") /* ty=Tensor[(1575), float32] */;
  %1082 = %1057.0;
  %1083 = %1064.0;
  %1084 = add(%1073, %1074) /* ty=Tensor[(15, 5, 16), int64] */;
  %1085 = @func_130(%1077) /* ty=Tensor[(12, 6, 4), float32] */;
  %1086 = %1080.0;
  %1087 = asin(%1081) /* ty=Tensor[(1575), float32] */;
  (%1082, %var_5253, %1075, meta[relay.Constant][74] /* ty=Tensor[(24, 12), float32] */, %1083, %1084, %1085, %1086, meta[relay.Constant][75] /* ty=Tensor[(1456), float64] */, %1087)
}

def @func_4611() -> (Tensor[(2, 6, 9), bool],) {
  %1088 = cast(meta[relay.Constant][77] /* ty=Tensor[(2, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(2, 6, 9), bool] */;
  %1089 = shape_of(meta[relay.Constant][76] /* ty=Tensor[(2, 6, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(meta[relay.Constant][76] /* ty=Tensor[(2, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(2, 6, 9), bool] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1092 = greater(%1090, %1091) /* ty=Tensor[(2, 6, 9), bool] */;
  (%1092,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen562/build/output.py:2853: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen562/build/output.py", line 2858, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(312) tvmgen_default_fused_reshape_divide_cast_rsqrt_cast_cast_reshape_greater_equal_kernel0(signed char* __restrict__ T_greater_equal, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_greater_equal[(((int)threadIdx.x))] = ((signed char)(((bool)(placeholder[(((int)threadIdx.x))] / placeholder1[(((int)threadIdx.x))])) <= ((bool)(1.000000e+00 / sqrt(((double)(placeholder[(((int)threadIdx.x))] / placeholder1[(((int)threadIdx.x))])))))));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~

